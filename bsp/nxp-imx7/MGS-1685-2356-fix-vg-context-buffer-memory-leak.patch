From 317796161464130666acdda2c1f65e62cc887757 Mon Sep 17 00:00:00 2001
From: "yong.gan" <yong.gan@nxp.com>
Date: Thu, 19 May 2016 09:02:36 +0800
Subject: [PATCH 35/85] MGS-1685 [#2356] fix vg context buffer memory leak

gcoVGHARDWARE_FreeVideoMemory user space implementation has some problem,

the asynchronous unlock/free is required by kernel memory managment, by not available in this function.
because user command buffer & struct cannot be freed through committing new vg command to hardware,

the new workaround is to double unlock the video memory for gcvHAL_RELEASE_VIDEO_MEMORY,
also removed the database as the asynchronous unlock is not available in vg user space driver.

Date: May 18, 2016
Signed-off-by: Yong Gan <yong.gan@freescale.com>
[zou:Original patch taken from
git://git.freescale.com/imx/linux-imx.git imx_4.1.15_2.0.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c |   20 ++++++++++++++++++++
 1 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c b/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c
index 7bd3b64..cd8ce0f 100644
--- a/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c
+++ b/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c
@@ -1859,6 +1859,26 @@ gckKERNEL_Dispatch(
             Kernel, processID,
             (gctUINT32)Interface->u.ReleaseVideoMemory.node
             ));
+
+#if gcdENABLE_VG
+        if (Kernel->vg != gcvNULL)
+        {
+            gckVIDMEM_NODE nodeObject;
+
+            /* Remove record from process db. */
+            gcmkERR_BREAK(
+                gckKERNEL_RemoveProcessDB(Kernel, processID,
+                gcvDB_VIDEO_MEMORY_LOCKED,
+                (gctPOINTER)Interface->u.ReleaseVideoMemory.node));
+
+            gcmkERR_BREAK(
+                gckVIDMEM_HANDLE_Lookup(Kernel, processID,
+                (gctUINT32)Interface->u.ReleaseVideoMemory.node, &nodeObject));
+
+            gckVIDMEM_HANDLE_Dereference(Kernel, processID,(gctUINT32)Interface->u.ReleaseVideoMemory.node);
+            gckVIDMEM_NODE_Dereference(Kernel, nodeObject);
+        }
+#endif
         break;
 
     case gcvHAL_LOCK_VIDEO_MEMORY:
-- 
1.7.5.4

