From 58783ca6dd870fec134fea7dba381d02d293fbbb Mon Sep 17 00:00:00 2001
From: Adrian Alonso <adrian.alonso@nxp.com>
Date: Wed, 31 Aug 2016 13:48:00 -0500
Subject: [PATCH 83/85] MLK-13147: arm: imx6q: lpddr2 freq simplify system
 clock sources

Simplify system root clock sources, only use pll2_pfd2 and osc
for system clocks, when busfreq request high bus mode or audio bus
mode only update dividers to achieve operating frequencies from
same source (pll2_pfd2).

Bus freq mode      (400M)     (100M)     (24Mhz)
mmdc_ch0_clk_root   @396MHz    @99MHz      @24Mhz
axi_clk_root        @198MHz    @49.5MHz    @24Mhz
ahb_clk_root        @132MHz    @49.5Mhz    @24Mhz
ipg_clk_root        @66MHz     @24.75Mhz   @12Mhz

Signed-off-by: Adrian Alonso <adrian.alonso@nxp.com>
(Cherry pick from commit c85924790d0e3d4dd2bc86c088f363853ea4af91)
[zou:Original patch taken from
git://git.freescale.com/imx/linux-imx.git imx_4.1.15_2.0.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/mach-imx/lpddr2_freq_imx6q.S |  147 ++++++++-------------------------
 1 files changed, 34 insertions(+), 113 deletions(-)

diff --git a/arch/arm/mach-imx/lpddr2_freq_imx6q.S b/arch/arm/mach-imx/lpddr2_freq_imx6q.S
index 2e3b2f3..d0ccb98 100644
--- a/arch/arm/mach-imx/lpddr2_freq_imx6q.S
+++ b/arch/arm/mach-imx/lpddr2_freq_imx6q.S
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2015 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright (C) 2015-2016 Freescale Semiconductor, Inc. All Rights Reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -24,39 +24,17 @@
 .globl mx6q_lpddr2_freq_change_start
 .globl mx6q_lpddr2_freq_change_end
 
-	.macro	switch_to_400MHz
-
-	/* check if periph_clk_sel is already set. */
-	ldr	r9, [r2, #CCM_CBCDR]
-	and	r9, r9, #(1 << 25)
-	cmp	r9, #(1 << 25)
-	beq	set_ahb_podf_before_switch1
-
-	/* change periph_clk to be sourced from pll3_clk. */
-	ldr	r9, [r2, #CCM_CBCMR]
-	bic	r9, r9, #(3 << 12)
-	str	r9, [r2, #CCM_CBCMR]
-
-	ldr	r9, [r2, #CCM_CBCDR]
-	bic	r9, r9, #(0x38 << 24)
-	str	r9, [r2, #CCM_CBCDR]
-
-	/* now switch periph_clk to pll3_main_clk. */
-	ldr	r9, [r2, #CCM_CBCDR]
-	orr	r9, r9, #(1 << 25)
-	str	r9, [r2, #CCM_CBCDR]
-
-periph_clk_switch5:
+	.macro	wait_for_ccm_handshake
+	/* wait for div update */
+1:
 	ldr	r9, [r2, #CCM_CDHIPR]
 	cmp	r9, #0
-	bne	periph_clk_switch5
+	bne	1b
 
-	b	switch_pre_periph_clk_400
+	.endm
 
-set_ahb_podf_before_switch1:
-	/*
-	 * set the MMDC_DIV=1, AXI_DIV = 2, AHB_DIV=4,
-	 */
+	.macro	switch_to_400MHz
+	/* set the MMDC_DIV=1, AXI_DIV=2, AHB_DIV=3 */
 	ldr	r9, [r2, #CCM_CBCDR]
 	ldr	r6, =0x3f1f00
 	bic	r9, r9, r6
@@ -64,94 +42,49 @@ set_ahb_podf_before_switch1:
 	orr	r9, r9, #(1 << 16)
 	str	r9, [r2, #CCM_CBCDR]
 
-wait_div_update400_1:
-	ldr	r9, [r2, #CCM_CDHIPR]
-	cmp	r9, #0
-	bne	wait_div_update400_1
-
-switch_pre_periph_clk_400:
+	wait_for_ccm_handshake
 
-	/* now switch pre_periph_clk to PFD_400MHz. */
-	ldr	r9, [r2, #CCM_CBCMR]
-	bic	r9, r9, #(0xc << 16)
-	orr	r9, r9, #(0x4 << 16)
-	str	r9, [r2, #CCM_CBCMR]
-
-	/* now switch periph_clk back. */
-	ldr	r9, [r2, #CCM_CBCDR]
-	bic	r9, r9, #(1 << 25)
-	str	r9, [r2, #CCM_CBCDR]
-
-periph_clk_switch6:
-	ldr	r9, [r2, #CCM_CDHIPR]
-	cmp	r9, #0
-	bne	periph_clk_switch6
-
-	.endm
-
-	.macro	switch_to_100MHz
-	/* check if periph_clk_sel is already set. */
+	/* check periph_clk_sel */
 	ldr	r9, [r2, #CCM_CBCDR]
 	and	r9, r9, #(1 << 25)
 	cmp	r9, #(1 << 25)
-	beq	switch_pre_periph_clk_100
-	/*
-	 * set the periph_clk to be sourced from PLL2_PFD_200M
-	 * change periph_clk to be sourced from pll3_clk.
-	 * ensure PLL3 is the source and set the divider to 1.
-	 */
-	ldr	r9, [r2, #CCM_CBCMR]
-	bic	r9, r9, #(0x3 << 12)
-	str	r9, [r2, #CCM_CBCMR]
+	bne	skip_periph_clk_switch_400m
 
+	/* now switch periph_clk back. */
 	ldr	r9, [r2, #CCM_CBCDR]
-	bic	r9, r9, #(0x38 << 24)
+	bic	r9, r9, #(1 << 25)
 	str	r9, [r2, #CCM_CBCDR]
 
-	/* now switch periph_clk to pll3_main_clk. */
-	ldr	r9, [r2, #CCM_CBCDR]
-	orr	r9, r9, #(1 << 25)
-	str	r9, [r2, #CCM_CBCDR]
+	wait_for_ccm_handshake
 
-periph_clk_switch_100:
-	ldr	r9, [r2, #CCM_CDHIPR]
-	cmp	r9, #0
-	bne	periph_clk_switch_100
+skip_periph_clk_switch_400m:
 
-switch_pre_periph_clk_100:
-	/* now switch pre_periph_clk to PFD_200MHz. */
-	ldr	r9, [r2, #CCM_CBCMR]
-	orr	r9, r9, #(0xc << 16)
-	str	r9, [r2, #CCM_CBCMR]
+	.endm
 
-	/* set the MMDC_DIV=2, AXI_DIV=4, AHB_DIV=8 */
+	.macro	switch_to_100MHz
+	/* set the MMDC_DIV=4, AXI_DIV=8, AHB_DIV=8 */
 	ldr	r9, [r2, #CCM_CBCDR]
 	ldr	r6, =0x3f1f00
 	bic	r9, r9, r6
-	orr	r9, r9, #(0x8 << 16)
-	orr	r9, r9, #(0x3 << 16)
+	orr	r9, r9, #(0x1F << 16)
+	orr	r9, r9, #(0x1D << 8)
 
-	/*
-	 * if changing AHB divider remember to change
-	 * the IPGPER divider too below.
-	 */
-	orr	r9, r9, #0x1d00
-	str	r9, [r2, #CCM_CBCDR]
+	wait_for_ccm_handshake
 
-wait_div_update_100:
-	ldr	r9, [r2, #CCM_CDHIPR]
-	cmp	r9, #0
-	bne	wait_div_update_100
+	/* check if periph_clk_sel is already set. */
+	ldr	r9, [r2, #CCM_CBCDR]
+	and	r9, r9, #(1 << 25)
+	cmp	r9, #(1 << 25)
+	bne	skip_periph_clk_switch_100m
 
 	/* now switch periph_clk back. */
 	ldr	r9, [r2, #CCM_CBCDR]
 	bic	r9, r9, #(1 << 25)
 	str	r9, [r2, #CCM_CBCDR]
 
-periph_clk_switch2:
-	ldr	r9, [r2, #CCM_CDHIPR]
-	cmp	r9, #0
-	bne	periph_clk_switch2
+	wait_for_ccm_handshake
+
+skip_periph_clk_switch_100m:
 
 	.endm
 
@@ -169,7 +102,7 @@ periph_clk_switch2:
 	str	r9, [r2, #CCM_CBCMR]
 
 	ldr	r9, [r2, #CCM_CBCDR]
-	bic	r9, r9, #(0x38 << 24)
+	bic	r9, r9, #(0x7 << 27)
 	str	r9, [r2, #CCM_CBCDR]
 
 	/* now switch periph_clk to 24MHz. */
@@ -177,10 +110,7 @@ periph_clk_switch2:
 	orr	r9, r9, #(1 << 25)
 	str	r9, [r2, #CCM_CBCDR]
 
-periph_clk_switch1:
-	ldr	r9, [r2, #CCM_CDHIPR]
-	cmp	r9, #0
-	bne	periph_clk_switch1
+	wait_for_ccm_handshake
 
 	/* change all the dividers to 1. */
 	ldr	r9, [r2, #CCM_CBCDR]
@@ -190,10 +120,7 @@ periph_clk_switch1:
 	str	r9, [r2, #CCM_CBCDR]
 
 	/* Wait for the divider to change. */
-wait_div_update:
-	ldr	r9, [r2, #CCM_CDHIPR]
-	cmp	r9, #0
-	bne	wait_div_update
+	wait_for_ccm_handshake
 
 	.endm
 
@@ -209,10 +136,7 @@ wait_div_update:
 	bic	r9, r9, #(1 << 25)
 	str	r9, [r2, #CCM_CBCDR]
 
-periph_clk_switch_pll2_pfd2:
-	ldr	r9, [r2, #CCM_CDHIPR]
-	cmp	r9, #0
-	bne periph_clk_switch_pll2_pfd2
+	wait_for_ccm_handshake
 
 	ldr	r9, [r2, #CCM_CBCDR]
 	ldr	r6, =0x3f1f00
@@ -221,10 +145,7 @@ periph_clk_switch_pll2_pfd2:
 	orr	r9, r9, #(0x7 << 19)
 	str	r9, [r2, #CCM_CBCDR]
 
-wait_div_update2:
-	ldr	r9, [r2, #CCM_CDHIPR]
-	cmp	r9, #0
-	bne	wait_div_update2
+	wait_for_ccm_handshake
 
 	.endm
 
-- 
1.7.5.4

