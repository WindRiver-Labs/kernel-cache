From 1941c44411332547de60e7d49694de20683161ee Mon Sep 17 00:00:00 2001
From: czou <cao.zou@windriver.com>
Date: Mon, 7 Sep 2015 12:47:56 +0800
Subject: [PATCH 27/29] omap3: smsc911x: reset the smsc911x in gpmc

in omap3-evm boards, smsc911x ethernet should be reset when gpmc
initialize timing, otherwise smsc911x driver can't complete
its initializtion.

Signed-off-by: czou <cao.zou@windriver.com>
---
 arch/arm/boot/dts/omap3-evm.dts |  7 +++++++
 arch/arm/mach-omap2/gpmc.c      | 19 ++++++++++++++++++-
 2 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/arch/arm/boot/dts/omap3-evm.dts b/arch/arm/boot/dts/omap3-evm.dts
index 9b04dc2..2b9703e 100644
--- a/arch/arm/boot/dts/omap3-evm.dts
+++ b/arch/arm/boot/dts/omap3-evm.dts
@@ -105,3 +105,10 @@
 &mmc3 {
 	status = "disabled";
 };
+
+&gpmc {
+	ranges = <5 0 0x2c000000 0x01000000>;
+	ethernet@gpmc {
+		reset = <7>;
+	};
+};
diff --git a/arch/arm/mach-omap2/gpmc.c b/arch/arm/mach-omap2/gpmc.c
index ab43755..50fbb69 100644
--- a/arch/arm/mach-omap2/gpmc.c
+++ b/arch/arm/mach-omap2/gpmc.c
@@ -31,6 +31,8 @@
 #include <linux/of_device.h>
 #include <linux/mtd/nand.h>
 #include <linux/pm_runtime.h>
+#include <linux/gpio.h>
+#include <linux/delay.h>
 
 #include <linux/platform_data/mtd-nand-omap2.h>
 
@@ -1481,7 +1483,7 @@ static int gpmc_probe_generic_child(struct platform_device *pdev,
 	struct gpmc_timings gpmc_t;
 	struct resource res;
 	unsigned long base;
-	int ret, cs;
+	int ret, cs, reset;
 
 	if (of_property_read_u32(child, "reg", &cs) < 0) {
 		dev_err(&pdev->dev, "%s has no 'reg' property\n",
@@ -1546,6 +1548,21 @@ static int gpmc_probe_generic_child(struct platform_device *pdev,
 	gpmc_cs_set_timings(cs, &gpmc_t);
 
 no_timings:
+
+	ret = of_property_read_u32(child, "reset", &reset);
+	if (ret >= 0) {
+		ret = gpio_request_one(reset,
+				       GPIOF_OUT_INIT_HIGH, "smsc911x reset");
+		if (ret) {
+			pr_err("Failed to request reset GPIO%d\n",
+			       reset);
+		} else {
+			gpio_set_value(reset, 0);
+			msleep(100);
+			gpio_set_value(reset, 1);
+		}
+	}
+
 	if (of_platform_device_create(child, NULL, &pdev->dev))
 		return 0;
 
-- 
1.9.1

