From 974e6fb2c88a9c9ff44d44b4c6bfa0db4fe0fa61 Mon Sep 17 00:00:00 2001
From: Ravi B <ravibabu@ti.com>
Date: Thu, 7 Jul 2011 17:46:17 +0530
Subject: [PATCH 404/609] musb:ti81x: cppi41dma modular fixes for musb gadget
 mode

Original commit: 6bbba9df83b02dafdb4751152b5b4229b36ff30c

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

This patch fixes the insmod/rmmod fixes for musb
gadget mode and cppi41dma cleanup.

Signed-off-by: Ravi B <ravibabu@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 drivers/usb/musb/cppi41.c     |    5 ++++-
 drivers/usb/musb/cppi41_dma.c |    2 +-
 drivers/usb/musb/ti81xx.c     |   18 +++++++++++++++++-
 3 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/drivers/usb/musb/cppi41.c b/drivers/usb/musb/cppi41.c
index d48081c..b5725d8 100644
--- a/drivers/usb/musb/cppi41.c
+++ b/drivers/usb/musb/cppi41.c
@@ -60,6 +60,7 @@ static struct {
 	u8 mem_rgn;
 	u16 q_mgr;
 	u16 q_num;
+	u32 num_desc;
 } dma_teardown[CPPI41_NUM_DMA_BLOCK];
 
 struct cppi41_dma_sched_tbl_t {
@@ -348,6 +349,7 @@ int cppi41_dma_block_init(u8 dma_num, u8 q_mgr, u8 num_order,
 				  sizeof(*curr_td), 0);
 		td_addr += sizeof(*curr_td);
 	}
+	dma_teardown[dma_num].num_desc = num_desc;
 
 	/* Initialize the DMA scheduler. */
 	num_reg = (tbl_size + 3) / 4;
@@ -760,8 +762,9 @@ EXPORT_SYMBOL(cppi41_dma_ch_disable);
 void cppi41_free_teardown_queue(int dma_num)
 {
 	unsigned long td_addr;
+	u32 num_desc = dma_teardown[dma_num].num_desc;
 
-	while (1) {
+	while (num_desc--) {
 		td_addr = cppi41_queue_pop(&dma_teardown[dma_num].queue_obj);
 
 		if (td_addr == 0)
diff --git a/drivers/usb/musb/cppi41_dma.c b/drivers/usb/musb/cppi41_dma.c
index 41dda8e..63d9916 100644
--- a/drivers/usb/musb/cppi41_dma.c
+++ b/drivers/usb/musb/cppi41_dma.c
@@ -314,7 +314,7 @@ static int __devinit cppi41_controller_start(struct dma_controller *controller)
 
  free_pds:
 	dma_free_coherent(cppi->musb->controller,
-			  USB_CPPI41_MAX_PD * USB_CPPI41_DESC_ALIGN,
+			  cppi->bd_size,
 			  cppi->pd_mem, cppi->pd_mem_phys);
 
 	return 0;
diff --git a/drivers/usb/musb/ti81xx.c b/drivers/usb/musb/ti81xx.c
index 6fb5a56..994857f 100644
--- a/drivers/usb/musb/ti81xx.c
+++ b/drivers/usb/musb/ti81xx.c
@@ -454,7 +454,11 @@ int __devinit cppi41_init(struct musb *musb)
 	/* Initialize for Linking RAM region 0 alone */
 	cppi41_queue_mgr_init(cppi_info->q_mgr, 0, 0x3fff);
 
+#ifdef CONFIG_USB_GADGET_MUSB_HDRC
+	numch =  USB_CPPI41_NUM_CH * 2;
+#else
 	numch =  USB_CPPI41_NUM_CH * 2 * 2;
+#endif
 	order = get_count_order(numch);
 
 	/* TODO: check two teardown desc per channel (5 or 7 ?)*/
@@ -494,7 +498,11 @@ void cppi41_free(void)
 	if (!cppi41_init_done)
 		return ;
 
+#ifdef CONFIG_USB_GADGET_MUSB_HDRC
+	numch =  USB_CPPI41_NUM_CH * 2;
+#else
 	numch =  USB_CPPI41_NUM_CH * 2 * 2;
+#endif
 	order = get_count_order(numch);
 	blknum = cppi_info->dma_block;
 
@@ -1228,6 +1236,13 @@ static int __exit ti81xx_remove(struct platform_device *pdev)
 
 	platform_device_del(glue->musb);
 	platform_device_put(glue->musb);
+
+#ifdef CONFIG_USB_GADGET_MUSB_HDRC
+#ifdef CONFIG_USB_TI_CPPI41_DMA
+	cppi41_free();
+#endif
+	usbotg_ss_uninit();
+#endif
 	clk_disable(glue->clk);
 	clk_disable(glue->phy_clk);
 	clk_put(glue->clk);
@@ -1326,11 +1341,12 @@ static void __exit ti81xx_glue_exit(void)
 	/* unregister platform driver */
 	platform_driver_unregister(&ti81xx_musb_driver);
 
+#ifndef CONFIG_USB_GADGET_MUSB_HDRC
 #ifdef CONFIG_USB_TI_CPPI41_DMA
 	cppi41_free();
 #endif
-
 	usbotg_ss_uninit();
+#endif
 }
 module_exit(ti81xx_glue_exit);
 
-- 
1.7.5.4

