From 4ad5bb5ff0bec3a958386c3b2b12d90608cf77cc Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 12 Nov 2012 05:01:00 +0800
Subject: [PATCH 611/612] rt: ethernet: cpsw: disable interrupt thread

Cause spin_lock design between dma and cpsw is much too complicated,
cpsw_poll will always be self-deadlock, in which irq_enable can't be
reached at all after irq-disable having done in interrupt handle. So
the self-lock will block cpsw rx/tx, and the boot process halted.

This patch disables interrupt thread of cpsw_interrupt to workaround
the issue.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/ti/cpsw.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/ti/cpsw.c b/drivers/net/ethernet/ti/cpsw.c
index ee87b0c..abf9d0b 100644
--- a/drivers/net/ethernet/ti/cpsw.c
+++ b/drivers/net/ethernet/ti/cpsw.c
@@ -2398,8 +2398,8 @@ static int __devinit cpsw_probe(struct platform_device *pdev)
 
 	while ((res = platform_get_resource(priv->pdev, IORESOURCE_IRQ, k))) {
 		for (i = res->start; i <= res->end; i++) {
-			if (request_irq(i, cpsw_interrupt, IRQF_DISABLED,
-					dev_name(&pdev->dev), priv)) {
+			if (request_irq(i, cpsw_interrupt, IRQF_DISABLED |
+				 IRQF_NO_THREAD, dev_name(&pdev->dev), priv)) {
 				dev_err(priv->dev, "error attaching irq\n");
 				goto clean_ale_ret;
 			}
-- 
1.7.3.5

