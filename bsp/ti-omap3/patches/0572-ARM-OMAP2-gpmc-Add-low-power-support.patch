From 8cb2a335c90674508460eb7c1bd4dc6c16d060db Mon Sep 17 00:00:00 2001
From: "Philip, Avinash" <avinashphilip@ti.com>
Date: Mon, 27 Feb 2012 11:30:40 +0530
Subject: [PATCH 572/609] ARM: OMAP2+: gpmc: Add low power support

Original commit: f064314b950888c4ba2c4803aecbf531ccc16dd1

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

This patch adds Callback functions to support low power transitions by
adding
1. pm_runtime API's to handle GPMC power transitions
2. GPMC save/restore context.

Signed-off-by: Philip, Avinash <avinashphilip@ti.com>
---
 arch/arm/mach-omap2/gpmc-nand.c        |    2 ++
 arch/arm/mach-omap2/gpmc.c             |   19 ++++++++++++++++++-
 arch/arm/plat-omap/include/plat/gpmc.h |    7 ++++---
 arch/arm/plat-omap/include/plat/nand.h |    2 ++
 4 files changed, 26 insertions(+), 4 deletions(-)

diff --git a/arch/arm/mach-omap2/gpmc-nand.c b/arch/arm/mach-omap2/gpmc-nand.c
index d1882d1..f07a300 100644
--- a/arch/arm/mach-omap2/gpmc-nand.c
+++ b/arch/arm/mach-omap2/gpmc-nand.c
@@ -109,6 +109,8 @@ int __devinit gpmc_nand_init(struct omap_nand_platform_data *gpmc_nand_data)
 	}
 
 	gpmc_nand_device.dev.platform_data = gpmc_nand_data;
+	gpmc_nand_data->ctrlr_suspend	= gpmc_suspend;
+	gpmc_nand_data->ctrlr_resume	= gpmc_resume;
 
 	printk(KERN_INFO "Registering NAND on CS%d\n", gpmc_nand_data->cs);
 
diff --git a/arch/arm/mach-omap2/gpmc.c b/arch/arm/mach-omap2/gpmc.c
index 2b6fb0f..489d375 100644
--- a/arch/arm/mach-omap2/gpmc.c
+++ b/arch/arm/mach-omap2/gpmc.c
@@ -746,6 +746,8 @@ static void __devinit gpmc_mem_init(void)
 	}
 }
 
+struct device *gpmc_dev;
+
 static int __devinit gpmc_probe(struct platform_device *pdev)
 {
 	u32 l;
@@ -757,6 +759,8 @@ static int __devinit gpmc_probe(struct platform_device *pdev)
 	/* XXX: This should go away with HWMOD & runtime PM adaptation */
 	gpmc_clk_init(&pdev->dev);
 
+	gpmc_dev = &pdev->dev;
+
 	gpmc = devm_kzalloc(&pdev->dev, sizeof(struct gpmc), GFP_KERNEL);
 	if (!gpmc)
 		return -ENOMEM;
@@ -831,6 +835,20 @@ static struct platform_driver gpmc_driver = {
 
 module_platform_driver(gpmc_driver);
 
+int gpmc_suspend(void)
+{
+	omap3_gpmc_save_context();
+	pm_runtime_put_sync(gpmc_dev);
+	return 0;
+}
+
+int gpmc_resume(void)
+{
+	pm_runtime_get_sync(gpmc_dev);
+	omap3_gpmc_restore_context();
+	return 0;
+}
+
 #ifdef CONFIG_ARCH_OMAP3
 static struct omap3_gpmc_regs gpmc_context;
 
@@ -865,7 +883,6 @@ void omap3_gpmc_save_context(void)
 		}
 	}
 }
-EXPORT_SYMBOL(gpmc_enable_hwecc);
 
 void omap3_gpmc_restore_context(void)
 {
diff --git a/arch/arm/plat-omap/include/plat/gpmc.h b/arch/arm/plat-omap/include/plat/gpmc.h
index 8c58367..b335fb8 100644
--- a/arch/arm/plat-omap/include/plat/gpmc.h
+++ b/arch/arm/plat-omap/include/plat/gpmc.h
@@ -133,14 +133,13 @@ struct gpmc_timings {
 	u16 wr_data_mux_bus;	/* WRDATAONADMUXBUS */
 };
 
-extern int omap_init_gpmc(struct gpmc_devices_info *pdata, int pdata_len);
-
-
 struct gpmc_devices_info {
 	void	*pdata;
 	int	flag;
 };
 
+extern int omap_init_gpmc(struct gpmc_devices_info *pdata, int pdata_len);
+
 #define	GPMC_DEVICE_NAND	(1 << 0)
 #define	GPMC_DEVICE_ONENAND	(1 << 1)
 #define	GPMC_DEVICE_NOR		(1 << 2)
@@ -174,4 +173,6 @@ extern int gpmc_nand_write(int cs, int cmd, int wval);
 
 int gpmc_enable_hwecc(int ecc, int cs, int mode, int dev_width, int ecc_size);
 int gpmc_calculate_ecc(int ecc, int cs, const u_char *dat, u_char *ecc_code);
+int gpmc_suspend(void);
+int gpmc_resume(void);
 #endif
diff --git a/arch/arm/plat-omap/include/plat/nand.h b/arch/arm/plat-omap/include/plat/nand.h
index 1bcff1d..9212a2e 100644
--- a/arch/arm/plat-omap/include/plat/nand.h
+++ b/arch/arm/plat-omap/include/plat/nand.h
@@ -30,6 +30,8 @@ struct omap_nand_platform_data {
 	int			devsize;
 	enum omap_ecc           ecc_opt;
 	bool			elm_used;
+	int (*ctrlr_suspend) (void);
+	int (*ctrlr_resume) (void);
 };
 
 /* minimum size for IO mapping */
-- 
1.7.5.4

