From 6f02349bad1ad2c591fe0fe4951bf14e096e49c2 Mon Sep 17 00:00:00 2001
From: AnilKumar Ch <anilkumar@ti.com>
Date: Tue, 7 Aug 2012 16:15:35 +0800
Subject: [PATCH 513/609] regulator: tps65217: Add set_voltage_time_sel() to
 tps65217

Original commit: 38c9f6a19fc3970ac150a31b4a7e32766181f7e5

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

This patch adds set_voltage_time_sel() function to tps65217 PMIC
driver to handle ramp_delay.

This function will return the delay required to ramp the current
voltage to a requested voltage. Regulator framework then wait for
this much delay after voltage set.

Signed-off-by: AnilKumar Ch <anilkumar@ti.com>
---
 drivers/regulator/tps65217-regulator.c |    5 +++++
 include/linux/mfd/tps65217.h           |    6 ++++++
 2 files changed, 11 insertions(+), 0 deletions(-)

diff --git a/drivers/regulator/tps65217-regulator.c b/drivers/regulator/tps65217-regulator.c
index e39521b..8aa5b09 100644
--- a/drivers/regulator/tps65217-regulator.c
+++ b/drivers/regulator/tps65217-regulator.c
@@ -327,11 +327,16 @@ static int __devinit tps65217_regulator_probe(struct platform_device *pdev)
 	struct regulator_dev *rdev;
 	struct tps65217 *tps;
 	struct tps_info *info = &tps65217_pmic_regs[pdev->id];
+	const struct regulator_init_data *init_data = pdev->dev.platform_data;
+	struct tps65217_rdelay *pd = init_data->driver_data;
 
 	/* Already set by core driver */
 	tps = dev_to_tps65217(pdev->dev.parent);
 	tps->info[pdev->id] = info;
 
+	if (pd)
+		tps->info[pdev->id]->delay = pd->ramp_delay;
+
 	rdev = regulator_register(&regulators[pdev->id], &pdev->dev,
 				  pdev->dev.platform_data, tps, NULL);
 	if (IS_ERR(rdev))
diff --git a/include/linux/mfd/tps65217.h b/include/linux/mfd/tps65217.h
index e030ef9..234cd0d 100644
--- a/include/linux/mfd/tps65217.h
+++ b/include/linux/mfd/tps65217.h
@@ -220,6 +220,10 @@ struct tps65217_board {
 	struct regulator_init_data *tps65217_init_data;
 };
 
+struct tps65217_rdelay {
+	int ramp_delay;
+};
+
 /**
  * struct tps_info - packages regulator constraints
  * @name:		Voltage regulator name
@@ -227,6 +231,7 @@ struct tps65217_board {
  * @max_uV:		minimum micro volts
  * @vsel_to_uv:		Function pointer to get voltage from selector
  * @uv_to_vsel:		Function pointer to get selector from voltage
+ * @delay:		Set voltage delay in us
  * @table:		Table for non-uniform voltage step-size
  * @table_len:		Length of the voltage table
  * @enable_mask:	Regulator enable mask bits
@@ -241,6 +246,7 @@ struct tps_info {
 	int max_uV;
 	int (*vsel_to_uv)(unsigned int vsel);
 	int (*uv_to_vsel)(int uV, unsigned int *vsel);
+	int delay;
 	const int *table;
 	unsigned int table_len;
 	unsigned int enable_mask;
-- 
1.7.5.4

