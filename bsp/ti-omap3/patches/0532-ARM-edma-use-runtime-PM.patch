From 5963dc0113bacd9620bdad5c49518162190710f3 Mon Sep 17 00:00:00 2001
From: "Hebbar, Gururaja" <gururaja.hebbar@ti.com>
Date: Thu, 23 Feb 2012 16:26:28 +0530
Subject: [PATCH 532/609] ARM: edma: use runtime PM

Original commit: 96799fb3419c9afa32e53e1cf5ec3cf6ff2ae287

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

Convert the OMAP edma driver to use runtime PM. This will use HWMOD data
which is preferred upon regular clk_[disable/enable]

Signed-off-by: Hebbar, Gururaja <gururaja.hebbar@ti.com>
---
 arch/arm/common/edma.c |   57 ++++++------------------------------------------
 1 files changed, 7 insertions(+), 50 deletions(-)

diff --git a/arch/arm/common/edma.c b/arch/arm/common/edma.c
index 52fc897..fe00c92 100644
--- a/arch/arm/common/edma.c
+++ b/arch/arm/common/edma.c
@@ -19,8 +19,8 @@
 #include <linux/platform_device.h>
 #include <linux/slab.h>
 #include <linux/io.h>
-#include <linux/clk.h>
 #include <linux/err.h>
+#include <linux/pm_runtime.h>
 
 #include <mach/edma.h>
 
@@ -225,7 +225,6 @@ static inline void clear_bits(int offset, int len, unsigned long *p)
 
 struct edma *edma_cc[EDMA_MAX_CC];
 static int arch_num_cc;
-static struct clk *tpcc_ick, *tptc0_ick, *tptc1_ick, *tptc2_ick;
 
 /* dummy param set used to (re)initialize parameter RAM slots */
 static const struct edmacc_param dummy_paramset = {
@@ -1351,24 +1350,6 @@ void edma_clear_event(unsigned channel)
 EXPORT_SYMBOL(edma_clear_event);
 
 /*-----------------------------------------------------------------------*/
-static int edma_clk_setup(int enb_dis)
-{
-	int ret = 0;
-
-	if (enb_dis) {
-		ret = clk_enable(tpcc_ick);
-		ret |= clk_enable(tptc0_ick);
-		ret |= clk_enable(tptc1_ick);
-		ret |= clk_enable(tptc2_ick);
-	} else {
-		clk_disable(tpcc_ick);
-		clk_disable(tptc0_ick);
-		clk_disable(tptc1_ick);
-		clk_disable(tptc2_ick);
-	}
-
-	return ret;
-}
 
 static int __init edma_probe(struct platform_device *pdev)
 {
@@ -1389,33 +1370,8 @@ static int __init edma_probe(struct platform_device *pdev)
 	if (!info)
 		return -ENODEV;
 
-	tpcc_ick = clk_get(NULL, "tpcc_ick");
-	if (IS_ERR(tpcc_ick)) {
-		printk(KERN_ERR "EDMA: Failed to get tpcc_ick\n");
-		return -EBUSY;
-	}
-
-	tptc0_ick = clk_get(NULL, "tptc0_ick");
-	if (IS_ERR(tptc0_ick)) {
-		printk(KERN_ERR "EDMA: Failed to get tptc0_ick\n");
-		return -EBUSY;
-	}
-
-	tptc1_ick = clk_get(NULL, "tptc1_ick");
-	if (IS_ERR(tptc1_ick)) {
-		printk(KERN_ERR "EDMA: Failed to get tptc1_ick\n");
-		return -EBUSY;
-	}
-
-	tptc2_ick = clk_get(NULL, "tptc2_ick");
-	if (IS_ERR(tptc2_ick)) {
-		printk(KERN_ERR "EDMA: Failed to get tptc2_ick\n");
-		return -EBUSY;
-	}
-
-	status = edma_clk_setup(1);
-	if (status)
-		return status;
+	pm_runtime_enable(&pdev->dev);
+	pm_runtime_get_sync(&pdev->dev);
 
 	for (j = 0; j < EDMA_MAX_CC; j++) {
 		sprintf(res_name, "edma_cc%d", j);
@@ -1634,7 +1590,8 @@ fail1:
 			iounmap(edmacc_regs_base[i]);
 		kfree(edma_cc[i]);
 	}
-	edma_clk_setup(0);
+	pm_runtime_put_sync(&pdev->dev);
+	pm_runtime_disable(&pdev->dev);
 	return status;
 }
 
@@ -1697,7 +1654,7 @@ static int edma3_suspend(struct platform_device *pdev, pm_message_t state)
 		}
 	}
 
-	edma_clk_setup(0);
+	pm_runtime_put_sync(&pdev->dev);
 
 	return 0;
 }
@@ -1706,7 +1663,7 @@ static int edma3_resume(struct platform_device *pdev)
 {
 	int i, j;
 
-	edma_clk_setup(1);
+	pm_runtime_get_sync(&pdev->dev);
 
 	for (i = 0; i < arch_num_cc; i++) {
 
-- 
1.7.5.4

