From 0107fd98dd16cf4ca07aff590209d4823dce5e35 Mon Sep 17 00:00:00 2001
From: Mugunthan V N <mugunthanvnm@ti.com>
Date: Wed, 18 Jul 2012 14:10:16 +0530
Subject: [PATCH 321/609] ethernet: cpsw: ethtool slave id bug fix

Original commit: 9ddeed0ec67509799320495412371d38855b2a93

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

In dual emac when getting phy information from the slave, slave id is taken
from the platform data instead of connected slave to the Ethernet interface
which results in use of only one phy for ethtool for both the interface. So
while set/get phy interface using ethtool always uses the slave index 0 phy.
To ensure set/get phy for particular interface in dual emac, book keeping
slave index has to be used.

Signed-off-by: Mugunthan V N <mugunthanvnm@ti.com>
---
 drivers/net/ethernet/ti/cpsw.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/ti/cpsw.c b/drivers/net/ethernet/ti/cpsw.c
index 07979e0..55ecfe4 100644
--- a/drivers/net/ethernet/ti/cpsw.c
+++ b/drivers/net/ethernet/ti/cpsw.c
@@ -159,6 +159,7 @@ do {								\
 #define cpsw_add_switch_mode_bcast_ale_entries(priv, slave_port)
 #define cpsw_update_slave_open_state(priv, state)		\
 	priv->slaves[priv->emac_port].open_stat = state;
+#define cpsw_slave_phy_index(priv)	((priv)->emac_port)
 
 #else	/* CONFIG_TI_CPSW_DUAL_EMAC */
 
@@ -180,6 +181,7 @@ do {								\
 	cpsw_ale_add_mcast(priv->ale, priv->ndev->broadcast,		\
 			   1 << slave_port, 0, 0)
 #define cpsw_update_slave_open_state(priv, state)
+#define cpsw_slave_phy_index(priv)	((priv)->data.ethtool_slave)
 
 #endif	/* CONFIG_TI_CPSW_DUAL_EMAC */
 
@@ -2041,7 +2043,7 @@ static int cpsw_get_settings(struct net_device *ndev,
 			     struct ethtool_cmd *ecmd)
 {
 	struct cpsw_priv *priv = netdev_priv(ndev);
-	int slave_no = priv->data.ethtool_slave;
+	int slave_no = cpsw_slave_phy_index(priv);
 
 	if (priv->slaves[slave_no].phy)
 		return phy_ethtool_gset(priv->slaves[slave_no].phy, ecmd);
@@ -2060,7 +2062,7 @@ static int cpsw_get_settings(struct net_device *ndev,
 static int cpsw_set_settings(struct net_device *ndev, struct ethtool_cmd *ecmd)
 {
 	struct cpsw_priv *priv = netdev_priv(ndev);
-	int slave_no = priv->data.ethtool_slave;
+	int slave_no = cpsw_slave_phy_index(priv);
 
 	if (priv->slaves[slave_no].phy)
 		return phy_ethtool_sset(priv->slaves[slave_no].phy, ecmd);
-- 
1.7.5.4

