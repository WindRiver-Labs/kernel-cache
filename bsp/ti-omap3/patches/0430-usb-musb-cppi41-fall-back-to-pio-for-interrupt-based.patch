From cc340a647521ac4c5ca6642fe30609f58680a17b Mon Sep 17 00:00:00 2001
From: Ajay Kumar Gupta <ajay.gupta@ti.com>
Date: Fri, 3 Feb 2012 15:41:39 +0530
Subject: [PATCH 430/609] usb: musb: cppi41: fall back to pio for interrupt
 based transfers

Original commit: 9b8032d68230dd7921c96834820a8cfdc1f52c10

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

System hang is observed as Tx FIFO is never empty for interrupt based transfer
and so system goes into loop checking for txFifo empty.

Fixing by using pio for such transfer where length is less than 128 bytes

Signed-off-by: Ajay Kumar Gupta <ajay.gupta@ti.com>
---
 drivers/usb/musb/cppi41_dma.c |   13 +++++++++++--
 1 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/musb/cppi41_dma.c b/drivers/usb/musb/cppi41_dma.c
index 08312e2..ca23458 100644
--- a/drivers/usb/musb/cppi41_dma.c
+++ b/drivers/usb/musb/cppi41_dma.c
@@ -100,6 +100,7 @@ struct cppi41_channel {
 	u8  zlp_queued;
 	u8  inf_mode;
 	u8  tx_complete;
+	u8  count;
 };
 
 /**
@@ -1303,10 +1304,17 @@ void txdma_completion_work(struct work_struct *data)
 				epio = tx_ch->end_pt->regs;
 				csr = musb_readw(epio, MUSB_TXCSR);
 
-				if (csr & (MUSB_TXCSR_TXPKTRDY |
-					MUSB_TXCSR_FIFONOTEMPTY)) {
+				if ((tx_ch->length > 128) &&
+					(csr & (MUSB_TXCSR_TXPKTRDY |
+					MUSB_TXCSR_FIFONOTEMPTY))) {
 					resched = 1;
 				} else {
+					if (tx_ch->length < 128 &&
+							tx_ch->count > 0) {
+						tx_ch->count--;
+						resched = 1;
+						continue;
+					}
 					tx_ch->channel.status =
 						MUSB_DMA_STATUS_FREE;
 					tx_ch->tx_complete = 0;
@@ -1433,6 +1441,7 @@ static void usb_process_tx_queue(struct cppi41 *cppi, unsigned index)
 			 * failure with iperf.
 			 */
 			tx_ch->tx_complete = 1;
+			tx_ch->count = 1;
 			schedule_work(&cppi->txdma_work);
 		}
 	}
-- 
1.7.5.4

