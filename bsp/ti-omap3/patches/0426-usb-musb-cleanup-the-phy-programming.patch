From d0a3fde579c2620ff46b59db1656f20e5288c1fe Mon Sep 17 00:00:00 2001
From: Ajay Kumar Gupta <ajay.gupta@ti.com>
Date: Sat, 30 Jun 2012 22:13:49 +0800
Subject: [PATCH 426/609] usb: musb: cleanup the phy programming

Original commit: cd49552d7d82ab9752a0661ddf4524b5c0ea44a3

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

Currently the phy_power is only done for one port and so add id field so that the
same function can be used for both ports.

Signed-off-by: Ajay Kumar Gupta <ajay.gupta@ti.com>
---
 arch/arm/mach-omap2/omap_phy_internal.c |   33 ++++++++++++++++++------------
 arch/arm/mach-omap2/usb-musb.c          |    1 +
 arch/arm/plat-omap/include/plat/usb.h   |   23 +++++++++++++++------
 drivers/usb/musb/am35x.c                |    8 +++---
 drivers/usb/musb/ti81xx.c               |   12 +++++-----
 5 files changed, 47 insertions(+), 30 deletions(-)

diff --git a/arch/arm/mach-omap2/omap_phy_internal.c b/arch/arm/mach-omap2/omap_phy_internal.c
index 4c90477..b97a54a 100644
--- a/arch/arm/mach-omap2/omap_phy_internal.c
+++ b/arch/arm/mach-omap2/omap_phy_internal.c
@@ -29,6 +29,8 @@
 #include <linux/usb.h>
 
 #include <plat/usb.h>
+#include <plat/am33xx.h>
+#include <plat/ti81xx.h>
 #include "control.h"
 
 /* OMAP control module register for UTMI PHY */
@@ -185,7 +187,7 @@ void am35x_musb_reset(void)
 	regval = omap_ctrl_readl(AM35XX_CONTROL_IP_SW_RESET);
 }
 
-void am35x_musb_phy_power(u8 on)
+void am35x_musb_phy_power(u8 id, u8 on)
 {
 	unsigned long timeout = jiffies + msecs_to_jiffies(100);
 	u32 devconf2;
@@ -261,37 +263,42 @@ void am35x_set_mode(u8 musb_mode)
 	omap_ctrl_writel(devconf2, AM35XX_CONTROL_DEVCONF2);
 }
 
-void ti81xx_musb_phy_power(u8 on)
+void ti81xx_musb_phy_power(u8 id, u8 on)
 {
 	void __iomem *scm_base = NULL;
 	u32 usbphycfg;
 
-	scm_base = ioremap(TI81XX_SCM_BASE, SZ_2K);
+	if (cpu_is_ti816x())
+		scm_base = ioremap(TI81XX_SCM_BASE, SZ_2K);
+	else if (cpu_is_am33xx())
+		scm_base = ioremap(AM33XX_SCM_BASE, SZ_2K);
+
 	if (!scm_base) {
 		pr_err("system control module ioremap failed\n");
 		return;
 	}
 
-	usbphycfg = __raw_readl(scm_base + USBCTRL0);
+	usbphycfg = __raw_readl(scm_base + (id ? USBCTRL1 : USBCTRL0));
 
 	if (on) {
 		if (cpu_is_ti816x()) {
-			usbphycfg |= TI816X_USBPHY0_NORMAL_MODE;
+			usbphycfg |= id ? TI816X_USBPHY1_NORMAL_MODE :
+						TI816X_USBPHY0_NORMAL_MODE;
 			usbphycfg &= ~TI816X_USBPHY_REFCLK_OSC;
-		} else if (cpu_is_ti814x()) {
-			usbphycfg &= ~(USBPHY_CM_PWRDN | USBPHY_OTG_PWRDN
-				| USBPHY_DPINPUT | USBPHY_DMINPUT);
-			usbphycfg |= (USBPHY_OTGVDET_EN | USBPHY_OTGSESSEND_EN
-				| USBPHY_DPOPBUFCTL | USBPHY_DMOPBUFCTL);
+		} else if (cpu_is_am33xx()) {
+			usbphycfg &= ~(USBPHY_CM_PWRDN | USBPHY_OTG_PWRDN);
+			usbphycfg |= (USBPHY_OTGVDET_EN | USBPHY_OTGSESSEND_EN);
 		}
 	} else {
 		if (cpu_is_ti816x())
-			usbphycfg &= ~TI816X_USBPHY0_NORMAL_MODE;
-		else if (cpu_is_ti814x())
+			usbphycfg &= ~((id ? TI816X_USBPHY1_NORMAL_MODE :
+					TI816X_USBPHY0_NORMAL_MODE)
+					| TI816X_USBPHY_REFCLK_OSC);
+		else if (cpu_is_am33xx())
 			usbphycfg |= USBPHY_CM_PWRDN | USBPHY_OTG_PWRDN;
 
 	}
-	__raw_writel(usbphycfg, scm_base + USBCTRL0);
+	__raw_writel(usbphycfg, scm_base + (id ? USBCTRL1 : USBCTRL0));
 
 	iounmap(scm_base);
 }
diff --git a/arch/arm/mach-omap2/usb-musb.c b/arch/arm/mach-omap2/usb-musb.c
index 81d02c3..d2fb4d5 100644
--- a/arch/arm/mach-omap2/usb-musb.c
+++ b/arch/arm/mach-omap2/usb-musb.c
@@ -96,6 +96,7 @@ void __init usb_musb_init(struct omap_musb_board_data *musb_board_data)
 		oh_name = "am35x_otg_hs";
 		name = "musb-am35x";
 	} else if (cpu_is_ti81xx() || cpu_is_am33xx()) {
+		board_data->set_phy_power = ti81xx_musb_phy_power;
 		oh_name = "usb_otg_hs";
 		name = "musb-ti81xx";
 	} else {
diff --git a/arch/arm/plat-omap/include/plat/usb.h b/arch/arm/plat-omap/include/plat/usb.h
index 5a58883..a523185 100644
--- a/arch/arm/plat-omap/include/plat/usb.h
+++ b/arch/arm/plat-omap/include/plat/usb.h
@@ -90,7 +90,7 @@ struct omap_musb_board_data {
 	u16	power;
 	unsigned extvbus:1;
 	u8	instances;
-	void	(*set_phy_power)(u8 on);
+	void	(*set_phy_power)(u8 id, u8 on);
 	void	(*clear_irq)(void);
 	void	(*set_mode)(u8 mode);
 	void	(*reset)(void);
@@ -149,10 +149,10 @@ static inline void omap_writel(u32 v, u32 pa)
 #endif
 
 extern void am35x_musb_reset(void);
-extern void am35x_musb_phy_power(u8 on);
+extern void am35x_musb_phy_power(u8 id, u8 on);
 extern void am35x_musb_clear_irq(void);
 extern void am35x_set_mode(u8 musb_mode);
-extern void ti81xx_musb_phy_power(u8 on);
+extern void ti81xx_musb_phy_power(u8 id, u8 on);
 
 /*
  * FIXME correct answer depends on hmc_mode,
@@ -315,9 +315,12 @@ static inline void omap2_usbfs_init(struct omap_usb_config *pdata)
 /* TI81XX specific definitions */
 #define USBCTRL0	0x620
 #define USBSTAT0	0x624
+#define USBCTRL1	0x628
+#define USBSTAT1	0x62c
 
 /* TI816X PHY controls bits */
 #define TI816X_USBPHY0_NORMAL_MODE	(1 << 0)
+#define TI816X_USBPHY1_NORMAL_MODE	(1 << 1)
 #define TI816X_USBPHY_REFCLK_OSC	(1 << 8)
 
 /* TI814X PHY controls bits */
@@ -333,16 +336,22 @@ static inline void omap2_usbfs_init(struct omap_usb_config *pdata)
 #define USBPHY_DPPULLUP		(1 << 9)
 #define USBPHY_CDET_EXTCTL	(1 << 10)
 #define USBPHY_GPIO_MODE	(1 << 12)
-#define USBPHY_DPOPBUFCTL	(1 << 13)
-#define USBPHY_DMOPBUFCTL	(1 << 14)
-#define USBPHY_DPINPUT		(1 << 15)
-#define USBPHY_DMINPUT		(1 << 16)
 #define USBPHY_DPGPIO_PD	(1 << 17)
 #define USBPHY_DMGPIO_PD	(1 << 18)
 #define USBPHY_OTGVDET_EN	(1 << 19)
 #define USBPHY_OTGSESSEND_EN	(1 << 20)
 #define USBPHY_DATA_POLARITY	(1 << 23)
 
+/* TI81XX only PHY bits */
+#define TI81XX_USBPHY_DPOPBUFCTL	(1 << 13)
+#define TI81XX_USBPHY_DMOPBUFCTL	(1 << 14)
+#define TI81XX_USBPHY_DPINPUT		(1 << 15)
+#define TI81XX_USBPHY_DMINPUT		(1 << 16)
+
+/* AM335X only PHY bits */
+#define AM335X_USBPHY_GPIO_SIG_INV     (1 << 13)
+#define AM335X_USBPHY_GPIO_SIG_CROSS   (1 << 14)
+
 #if defined(CONFIG_ARCH_OMAP1) && defined(CONFIG_USB)
 u32 omap1_usb0_init(unsigned nwires, unsigned is_device);
 u32 omap1_usb1_init(unsigned nwires);
diff --git a/drivers/usb/musb/am35x.c b/drivers/usb/musb/am35x.c
index b958b91..8f1f13a 100644
--- a/drivers/usb/musb/am35x.c
+++ b/drivers/usb/musb/am35x.c
@@ -594,7 +594,7 @@ static int am35x_musb_init(struct musb *musb)
 
 	/* Start the on-chip PHY and its PLL. */
 	if (data->set_phy_power)
-		data->set_phy_power(1);
+		data->set_phy_power(0, 1);
 
 	msleep(5);
 
@@ -622,7 +622,7 @@ static int am35x_musb_exit(struct musb *musb)
 
 	/* Shutdown the on-chip PHY and its PLL. */
 	if (data->set_phy_power)
-		data->set_phy_power(0);
+		data->set_phy_power(0, 0);
 
 	usb_put_transceiver(musb->xceiv);
 	usb_nop_xceiv_unregister();
@@ -813,7 +813,7 @@ static int am35x_suspend(struct device *dev)
 
 	/* Shutdown the on-chip PHY and its PLL. */
 	if (data->set_phy_power)
-		data->set_phy_power(0);
+		data->set_phy_power(0, 0);
 
 	clk_disable(glue->phy_clk);
 	clk_disable(glue->clk);
@@ -830,7 +830,7 @@ static int am35x_resume(struct device *dev)
 
 	/* Start the on-chip PHY and its PLL. */
 	if (data->set_phy_power)
-		data->set_phy_power(1);
+		data->set_phy_power(0, 1);
 
 	ret = clk_enable(glue->phy_clk);
 	if (ret) {
diff --git a/drivers/usb/musb/ti81xx.c b/drivers/usb/musb/ti81xx.c
index 058c4ec..2f81c92 100644
--- a/drivers/usb/musb/ti81xx.c
+++ b/drivers/usb/musb/ti81xx.c
@@ -784,7 +784,7 @@ void musb_babble_workaround(struct musb *musb)
 
 	/* Shutdown the on-chip PHY and its PLL. */
 	if (data->set_phy_power)
-		data->set_phy_power(0);
+		data->set_phy_power(musb->id, 0);
 	udelay(100);
 
 	musb_platform_set_mode(musb, MUSB_HOST);
@@ -792,7 +792,7 @@ void musb_babble_workaround(struct musb *musb)
 
 	/* enable the usbphy */
 	if (data->set_phy_power)
-		data->set_phy_power(1);
+		data->set_phy_power(musb->id, 1);
 	mdelay(100);
 
 	/* save the usbotgss register contents */
@@ -1042,7 +1042,7 @@ int ti81xx_musb_init(struct musb *musb)
 
 	/* Start the on-chip PHY and its PLL. */
 	if (data->set_phy_power)
-		data->set_phy_power(1);
+		data->set_phy_power(musb->id, 1);
 
 	musb->a_wait_bcon = A_WAIT_BCON_TIMEOUT;
 	musb->isr = ti81xx_interrupt;
@@ -1119,7 +1119,7 @@ int ti81xx_musb_exit(struct musb *musb)
 
 	/* Shutdown the on-chip PHY and its PLL. */
 	if (data->set_phy_power)
-		data->set_phy_power(0);
+		data->set_phy_power(musb->id, 0);
 
 	otg_put_transceiver(musb->xceiv);
 	usb_nop_xceiv_unregister(musb->id);
@@ -1383,7 +1383,7 @@ static int ti81xx_suspend(struct device *dev)
 	/* Shutdown the on-chip PHY and its PLL. */
 	for (i = 0; i <= data->instances; ++i) {
 		if (data->set_phy_power)
-			data->set_phy_power(i);
+			data->set_phy_power(i, 0);
 	}
 
 	/* disable the common usbss functional clock */
@@ -1403,7 +1403,7 @@ static int ti81xx_resume(struct device *dev)
 	/* Start the on-chip PHY and its PLL. */
 	for (i = 0; i <= data->instances; ++i) {
 		if (data->set_phy_power)
-			data->set_phy_power(i);
+			data->set_phy_power(i, 1);
 	}
 
 	/* enable the common usbss interface clock */
-- 
1.7.5.4

