From 32faa71e6a71cf1e37f834f9e1b3e94b9d2e06f3 Mon Sep 17 00:00:00 2001
From: "Hebbar, Gururaja" <gururaja.hebbar@ti.com>
Date: Thu, 16 Aug 2012 10:21:36 +0800
Subject: [PATCH 239/609] ARM: OMAP2+: am335x: cpsw: remove board specific
 code from devices.c

Original commit: 6b756cee05a01155782cdc1b6c810022f762f30d

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

am33xx_cpsw_init() uses am33xx_evmid variable to determine the
board/evm type and setup MAC Mode & PHY Id. But this function is in
devices.c which should be free from board/evm specific data.

This patch updates am33xx_cpsw_init() to obtain mac mode
& phy id as arguments which can be passed by a given board.

Signed-off-by: Hebbar, Gururaja <gururaja.hebbar@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
---
 arch/arm/mach-omap2/board-am335xevm.c              |   14 ++++--
 arch/arm/mach-omap2/control.h                      |    8 ++++
 arch/arm/mach-omap2/devices.c                      |   45 +++++++++++---------
 arch/arm/mach-omap2/include/mach/board-am335xevm.h |    1 -
 arch/arm/plat-omap/include/plat/am33xx.h           |   15 +++++++
 5 files changed, 57 insertions(+), 26 deletions(-)

diff --git a/arch/arm/mach-omap2/board-am335xevm.c b/arch/arm/mach-omap2/board-am335xevm.c
index 0dfccf7..104eebe 100644
--- a/arch/arm/mach-omap2/board-am335xevm.c
+++ b/arch/arm/mach-omap2/board-am335xevm.c
@@ -1838,6 +1838,8 @@ static void setup_general_purpose_evm(void)
 	pr_info("The board is general purpose EVM in profile %d\n", prof_sel);
 
 	_configure_device(GEN_PURP_EVM, gen_purp_evm_dev_cfg, (1L << prof_sel));
+
+	am33xx_cpsw_init(AM33XX_CPSW_MODE_RGMII, NULL, NULL);
 }
 
 static void setup_ind_auto_motor_ctrl_evm(void)
@@ -1857,6 +1859,7 @@ static void setup_ind_auto_motor_ctrl_evm(void)
 	_configure_device(IND_AUT_MTR_EVM, ind_auto_mtrl_evm_dev_cfg,
 		PROFILE_0);
 
+	am33xx_cpsw_init(AM33XX_CPSW_MODE_MII, "0:1e", "0:00");
 }
 
 /* BeagleBone < Rev A3 */
@@ -1875,6 +1878,8 @@ static void setup_beaglebone_old(void)
 
 	/* Fill up global evmid */
 	am33xx_evmid_fillup(BEAGLE_BONE_OLD);
+
+	am33xx_cpsw_init(AM33XX_CPSW_MODE_RMII, NULL, NULL);
 }
 
 /* BeagleBone after Rev A3 */
@@ -1892,6 +1897,8 @@ static void setup_beaglebone(void)
 
 	/* Fill up global evmid */
 	am33xx_evmid_fillup(BEAGLE_BONE_A3);
+
+	am33xx_cpsw_init(AM33XX_CPSW_MODE_MII, NULL, NULL);
 }
 
 /* EVM - Starter Kit */
@@ -1903,6 +1910,8 @@ static void setup_starterkit(void)
 	am335x_mmc[0].gpio_wp = -EINVAL;
 
 	_configure_device(EVM_SK, evm_sk_dev_cfg, PROFILE_NONE);
+
+	am33xx_cpsw_init(AM33XX_CPSW_MODE_RGMII, NULL, NULL);
 }
 
 static void am335x_setup_daughter_board(struct memory_accessor *m, void *c)
@@ -1996,11 +2005,6 @@ static void am335x_evm_setup(struct memory_accessor *mem_acc, void *context)
 		else
 			goto out;
 	}
-	/* Initialize cpsw after board detection is completed as board
-	 * information is required for configuring phy address and hence
-	 * should be call only after board detection
-	 */
-	am33xx_cpsw_init(true); /* Bug here fixme czm */
 
 	return;
 out:
diff --git a/arch/arm/mach-omap2/control.h b/arch/arm/mach-omap2/control.h
index 4a79b61..e8d59b0 100644
--- a/arch/arm/mach-omap2/control.h
+++ b/arch/arm/mach-omap2/control.h
@@ -366,6 +366,14 @@
 #define AM33XX_SGX_MASK			(1 << AM33XX_SGX_SHIFT)
 
 /*
+ * CONTROL AM33XX GMII_SEL register for MII mode selection
+ */
+#define AM33XX_CONTROL_GMII_SEL_OFFSET	0x650
+#define AM33XX_MII_MODE_EN		0x0
+#define AM33XX_RMII_MODE_EN		((1 << 0) | (1 << 2))
+#define AM33XX_RGMII_MODE_EN		((0x2 << 0) | (0x2 << 2))
+
+/*
  * CONTROL AM33XX PWMSS_CTRL register to enable time base clock Enable
  */
 
diff --git a/arch/arm/mach-omap2/devices.c b/arch/arm/mach-omap2/devices.c
index 90359b0..130fb4f 100644
--- a/arch/arm/mach-omap2/devices.c
+++ b/arch/arm/mach-omap2/devices.c
@@ -52,6 +52,7 @@
 #include <plat/config_pwm.h>
 #include <plat/cpu.h>
 #include <plat/gpmc.h>
+#include <plat/am33xx.h>
 
 /* LCD controller similar DA8xx */
 #include <video/da8xx-fb.h>
@@ -1335,14 +1336,10 @@ void am33xx_cpsw_macidfillup(char *eeprommacid0, char *eeprommacid1)
 	return;
 }
 
-#define MII_MODE_ENABLE		0x0
-#define RMII_MODE_ENABLE	0x5
-#define RGMII_MODE_ENABLE	0xA
-#define MAC_MII_SEL		0x650
-
-void am33xx_cpsw_init(void)
+int am33xx_cpsw_init(enum am33xx_cpsw_mac_mode mode, unsigned char *phy_id0,
+		     unsigned char *phy_id1)
 {
-	u32 mac_lo, mac_hi;
+	u32 mac_lo, mac_hi, gmii_sel;
 	u32 i;
 
 	mac_lo = omap_ctrl_readl(TI81XX_CONTROL_MAC_ID0_LO);
@@ -1375,27 +1372,35 @@ void am33xx_cpsw_init(void)
 			am33xx_cpsw_slaves[1].mac_addr[i] = am33xx_macid1[i];
 	}
 
-	if (am33xx_evmid == BEAGLE_BONE_OLD) {
-		__raw_writel(RMII_MODE_ENABLE,
-				AM33XX_CTRL_REGADDR(MAC_MII_SEL));
-	} else if (am33xx_evmid == BEAGLE_BONE_A3) {
-		__raw_writel(MII_MODE_ENABLE,
-				AM33XX_CTRL_REGADDR(MAC_MII_SEL));
-	} else if (am33xx_evmid == IND_AUT_MTR_EVM) {
-		am33xx_cpsw_slaves[0].phy_id = "0:1e";
-		am33xx_cpsw_slaves[1].phy_id = "0:00";
-	} else {
-		__raw_writel(RGMII_MODE_ENABLE,
-				AM33XX_CTRL_REGADDR(MAC_MII_SEL));
+	switch (mode) {
+		case AM33XX_CPSW_MODE_MII:
+			gmii_sel = AM33XX_MII_MODE_EN;
+			break;
+		case AM33XX_CPSW_MODE_RMII:
+			gmii_sel = AM33XX_RMII_MODE_EN;
+			break;
+		case AM33XX_CPSW_MODE_RGMII:
+			gmii_sel = AM33XX_RGMII_MODE_EN;
+			break;
+		default:
+			return -EINVAL;
 	}
 
-	am33xx_cpsw_pdata.gigabit_en = gigen;
+	writel(gmii_sel, AM33XX_CTRL_REGADDR(AM33XX_CONTROL_GMII_SEL_OFFSET));
+
+	if (phy_id0 != NULL)
+		am33xx_cpsw_slaves[0].phy_id = phy_id0;
+
+	if (phy_id1 != NULL)
+		am33xx_cpsw_slaves[1].phy_id = phy_id1;
+
 	memcpy(am33xx_cpsw_pdata.mac_addr,
 			am33xx_cpsw_slaves[0].mac_addr, ETH_ALEN);
 	platform_device_register(&am33xx_cpsw_mdiodevice);
 	platform_device_register(&am33xx_cpsw_device);
 	clk_add_alias(NULL, dev_name(&am33xx_cpsw_mdiodevice.dev),
 			NULL, &am33xx_cpsw_device.dev);
+	return 0;
 }
 
 #define AM33XX_DCAN_NUM_MSG_OBJS		64
diff --git a/arch/arm/mach-omap2/include/mach/board-am335xevm.h b/arch/arm/mach-omap2/include/mach/board-am335xevm.h
index a3d0b2b..ba335e8 100644
--- a/arch/arm/mach-omap2/include/mach/board-am335xevm.h
+++ b/arch/arm/mach-omap2/include/mach/board-am335xevm.h
@@ -41,7 +41,6 @@
 void am335x_evmid_fillup(unsigned int evmid);
 unsigned int get_am33xx_evmid(void);
 void am335x_cpsw_macidfillup(char *eeprommacid0, char *eeprommacid1);
-void am33xx_cpsw_init(unsigned int gigen);
 void am33xx_d_can_init(unsigned int instance);
 
 #endif
diff --git a/arch/arm/plat-omap/include/plat/am33xx.h b/arch/arm/plat-omap/include/plat/am33xx.h
index 7308615..4865f3a 100644
--- a/arch/arm/plat-omap/include/plat/am33xx.h
+++ b/arch/arm/plat-omap/include/plat/am33xx.h
@@ -79,4 +79,19 @@
 
 #define AM33XX_ELM_BASE		0x48080000
 
+/*
+ * ----------------------------------------------------------------------------
+ * CPSW
+ * ----------------------------------------------------------------------------
+ */
+#ifndef __ASSEMBLER__
+enum am33xx_cpsw_mac_mode {
+	AM33XX_CPSW_MODE_MII,
+	AM33XX_CPSW_MODE_RMII,
+	AM33XX_CPSW_MODE_RGMII,
+};
+int am33xx_cpsw_init(enum am33xx_cpsw_mac_mode mode, unsigned char *phy_id0,
+		     unsigned char *phy_id1);
+#endif
+
 #endif /* __ASM_ARCH_AM33XX_H */
-- 
1.7.5.4

