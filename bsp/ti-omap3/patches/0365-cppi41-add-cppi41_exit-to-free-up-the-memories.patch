From 38b2467883118ef99963a91499962a3ad483609e Mon Sep 17 00:00:00 2001
From: Ajay Kumar Gupta <ajay.gupta@ti.com>
Date: Tue, 28 Jul 2009 18:50:27 +0530
Subject: [PATCH 365/609] cppi41: add cppi41_exit() to free up the memories

Original commit: 6d2bd83d2873b263a4bc7882899e0ec7fe10ed17

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

Adding cppi41_exit() to free up the allocated memories.

Signed-off-by: Ajay Kumar Gupta <ajay.gupta@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 drivers/usb/musb/cppi41.c |   22 ++++++++++++++++++++++
 drivers/usb/musb/cppi41.h |    5 +++++
 2 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/drivers/usb/musb/cppi41.c b/drivers/usb/musb/cppi41.c
index ec97a3b..eb7ecea 100644
--- a/drivers/usb/musb/cppi41.c
+++ b/drivers/usb/musb/cppi41.c
@@ -572,6 +572,28 @@ void cppi41_dma_ch_disable(struct cppi41_dma_ch_obj *dma_ch_obj)
 }
 EXPORT_SYMBOL(cppi41_dma_ch_disable);
 
+void cppi41_exit(void)
+{
+	int i;
+	for (i = 0; i < CPPI41_NUM_QUEUE_MGR; i++) {
+		if (linking_ram[i].virt_addr != NULL)
+			dma_free_coherent(NULL, 0x10000,
+				linking_ram[i].virt_addr,
+				linking_ram[i].phys_addr);
+		if (allocated_queues[i] != NULL)
+			kfree(allocated_queues[i]);
+	}
+	for (i = 0; i < CPPI41_NUM_DMA_BLOCK; i++)
+		if (dma_teardown[i].virt_addr != NULL) {
+
+			cppi41_mem_rgn_free(0,  dma_teardown[i].mem_rgn);
+			dma_free_coherent(NULL, dma_teardown[i].rgn_size,
+					dma_teardown[i].virt_addr,
+					dma_teardown[i].phys_addr);
+		}
+}
+EXPORT_SYMBOL(cppi41_exit);
+
 /**
  * alloc_queue - allocate a queue in the given range
  * @allocated:	pointer to the bitmap of the allocated queues
diff --git a/drivers/usb/musb/cppi41.h b/drivers/usb/musb/cppi41.h
index 5452af9..d66947a 100644
--- a/drivers/usb/musb/cppi41.h
+++ b/drivers/usb/musb/cppi41.h
@@ -710,3 +710,8 @@ unsigned long cppi41_queue_pop(const struct cppi41_queue_obj *queue_obj);
  * Returns 0 if valid descriptor, -EINVAL otherwise.
  */
 int cppi41_get_teardown_info(unsigned long addr, u32 *info);
+
+/**
+ * cppi41_exit - delete the instance created via cppi41_init()
+ */
+void cppi41_exit(void);
-- 
1.7.5.4

