From bdf4e066802e7e72f555e4ca18ebf574ae545886 Mon Sep 17 00:00:00 2001
From: "Philip, Avinash" <avinashphilip@ti.com>
Date: Fri, 10 Aug 2012 10:05:03 +0800
Subject: [PATCH 081/609] arm: omap: am33xx: LCD backlight enabled through
 PWM.

Original commit: 868b29ab86f810e4df92c0667980671e2fba2347

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

LCD backlight is provided by PWM signal generated by eCAP. So backlight
brightness can control by changing duty cycle of PWM signal.

Signed-off-by: Philip, Avinash <avinashphilip@ti.com>
---
 arch/arm/mach-omap2/board-am335xevm.c |   36 +++++++++++++++++++++++++-------
 1 files changed, 28 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-omap2/board-am335xevm.c b/arch/arm/mach-omap2/board-am335xevm.c
index fc52a9d..ec4032c 100644
--- a/arch/arm/mach-omap2/board-am335xevm.c
+++ b/arch/arm/mach-omap2/board-am335xevm.c
@@ -32,6 +32,7 @@
 #include <linux/wl12xx.h>
 #include <linux/ethtool.h>
 #include <linux/mfd/tps65910.h>
+#include <linux/pwm_backlight.h>
 
 /* LCD controller is similar to DA850 */
 #include <video/da8xx-fb.h>
@@ -72,6 +73,22 @@ static const struct display_panel disp_panel = {
 	COLOR_ACTIVE,
 };
 
+#define AM335X_LCD_BL_PIN	GPIO_TO_PIN(0, 7)
+/* LCD backlight platform Data */
+#define AM335X_BACKLIGHT_MAX_BRIGHTNESS        250
+#define AM335X_BACKLIGHT_DEFAULT_BRIGHTNESS    250
+#define AM335X_PWM_PERIOD_NANO_SECONDS        (10000 * 10)
+
+#define PWM_DEVICE_ID   "ecap.0"
+
+static struct platform_pwm_backlight_data am335x_backlight_data = {
+	.pwm_id         = PWM_DEVICE_ID,
+	.ch             = -1,
+	.max_brightness = AM335X_BACKLIGHT_MAX_BRIGHTNESS,
+	.dft_brightness = AM335X_BACKLIGHT_DEFAULT_BRIGHTNESS,
+	.pwm_period_ns  = AM335X_PWM_PERIOD_NANO_SECONDS,
+};
+
 static struct lcd_ctrl_config lcd_cfg = {
 	&disp_panel,
 	.ac_bias		= 255,
@@ -712,7 +729,6 @@ static void _configure_device(int evm_id, struct evm_dev_cfg *dev_cfg,
 	}
 }
 
-#define AM335X_LCD_BL_PIN	GPIO_TO_PIN(0, 7)
 
 /* pinmux for usb0 drvvbus */
 static struct pinmux_config usb0_pin_mux[] = {
@@ -736,7 +752,8 @@ static struct pinmux_config profibus_pin_mux[] = {
 
 /* Module pin mux for eCAP0 */
 static struct pinmux_config ecap0_pin_mux[] = {
-	{"ecap0_in_pwm0_out.gpio0_7", AM33XX_PIN_OUTPUT},
+	{"ecap0_in_pwm0_out.ecap0_in_pwm0_out",
+		OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT},
 	{NULL, 0},
 };
 
@@ -787,6 +804,14 @@ static void enable_ecap0(int evm_id, int profile)
 {
 	backlight_enable = true;
 }
+/* Setup pwm-backlight */
+static struct platform_device am335x_backlight = {
+	.name           = "pwm-backlight",
+	.id             = -1,
+	.dev            = {
+		.platform_data  = &am335x_backlight_data,
+	}
+};
 
 static int __init ecap0_init(void)
 {
@@ -794,12 +819,7 @@ static int __init ecap0_init(void)
 
 	if (backlight_enable) {
 		setup_pin_mux(ecap0_pin_mux);
-
-		status = gpio_request(AM335X_LCD_BL_PIN, "lcd bl\n");
-		if (status < 0)
-			pr_warn("Failed to request gpio for LCD backlight\n");
-
-		gpio_direction_output(AM335X_LCD_BL_PIN, 1);
+		platform_device_register(&am335x_backlight);
 	}
 	return status;
 }
-- 
1.7.5.4

