From fbc3ad80700b446fdacc00d8cc688c90f200489d Mon Sep 17 00:00:00 2001
From: "Philip, Avinash" <avinashphilip@ti.com>
Date: Tue, 24 Jan 2012 19:03:04 +0530
Subject: [PATCH 543/609] pwm: Haptics motor using eHRPWM's sysfs interface.

Original commit: c93a4fc9642ae72f6f1d7f1d2b028b1552db777d

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

Since Haptics doesn't have its own driver(yet), currently Haptics can
be tested using eHRPWM's sysfs interface.

This patch adds support for driving Haptics motor connected to
eHRPWM Instance 2 channel 2.

According to datasheet, the Haptic Motors Max RPM is 15000 RPM. Driving
the Motor above MAX RPM may spoil the Motor.
This patch limits the eHRPWM max freq to 250Hz. This can be changed
from platform data.

Signed-off-by: Philip, Avinash <avinashphilip@ti.com>
---
 drivers/pwm/ehrpwm.c    |   16 +++++++++++++++-
 include/linux/pwm/pwm.h |    9 +++++++++
 2 files changed, 24 insertions(+), 1 deletions(-)

diff --git a/drivers/pwm/ehrpwm.c b/drivers/pwm/ehrpwm.c
index d560007..9b48d75 100644
--- a/drivers/pwm/ehrpwm.c
+++ b/drivers/pwm/ehrpwm.c
@@ -1246,7 +1246,12 @@ static int ehrpwm_pwm_config(struct pwm_device *p,
 
 	switch (c->config_mask) {
 	case BIT(PWM_CONFIG_PERIOD_TICKS):
-		p->period_ticks = c->period_ticks;
+		if (p->max_period_ticks &&
+				(p->max_period_ticks >= c->period_ticks))
+			p->period_ticks = p->max_period_ticks;
+		else
+			p->period_ticks = c->period_ticks;
+
 		ret = ehrpwm_pwm_set_prd(p);
 		break;
 
@@ -1449,6 +1454,15 @@ set_bit:
 	for (chan = 0; chan < NCHAN; chan++) {
 		ehrpwm->pwm[chan].ops = &ehrpwm->ops;
 		pwm_set_drvdata(&ehrpwm->pwm[chan], ehrpwm);
+		ehrpwm->pwm[chan].tick_hz = clk_get_rate(ehrpwm->clk);
+
+		if (pdata->chan_attrib[chan].max_freq) {
+			int period_ns = NSEC_PER_SEC
+				/ pdata->chan_attrib[chan].max_freq;
+
+			ehrpwm->pwm[chan].max_period_ticks =
+				pwm_ns_to_ticks(&ehrpwm->pwm[chan], period_ns);
+		}
 
 		if (!(ehrpwm->version == PWM_VERSION_1)) {
 			if (!(ch_mask & (0x1 << chan)))
diff --git a/include/linux/pwm/pwm.h b/include/linux/pwm/pwm.h
index 76b57a3..3bab0a1 100644
--- a/include/linux/pwm/pwm.h
+++ b/include/linux/pwm/pwm.h
@@ -102,22 +102,31 @@ struct pwm_device {
 	unsigned long period_ns;
 	unsigned long duty_ns;
 	struct notifier_block freq_transition;
+	unsigned long max_period_ticks;
 	spinlock_t pwm_lock;
 };
 
 #include <linux/semaphore.h>
+#include <linux/pwm/ehrpwm.h>
 
 enum {
 	PWM_VERSION_0,
 	PWM_VERSION_1,
 };
 
+struct pwm_chan_attrib {
+	int max_freq;
+};
+
+#define PWM_CHANNEL NCHAN
+
 struct pwmss_platform_data {
 	int channel_mask;
 	struct semaphore config_semaphore;
 	int pwmss_module_usage_count;
 	void *config_mem_base;
 	u8 version;
+	struct pwm_chan_attrib chan_attrib[PWM_CHANNEL];
 };
 
 struct pwm_device *pwm_request_byname(const char *name, const char *label);
-- 
1.7.5.4

