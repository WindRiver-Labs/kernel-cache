From f2817a8b235ce79cc8d74cd6df4e32b072f40f60 Mon Sep 17 00:00:00 2001
From: Ajay Kumar Gupta <ajay.gupta@ti.com>
Date: Fri, 24 Jul 2009 18:02:08 +0530
Subject: [PATCH 372/609] cppi41: fix MODE_REG compatibility among platforms

Original commit: a7d48caf6bdc320e410275293d8db1b141a3dce8

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

AM3517 has seperate Tx and Rx MODE registers whereas OMAPL137/DA8x
has only one registers for both Rx and Tx modes.

Solving this difference by adding TX_MODE and RX_MODE registers
seperately which are actually same in case of OMAPL137/DA8x but
different for AM3517.

Signed-off-by: Ajay Kumar Gupta <ajay.gupta@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 drivers/usb/musb/cppi41_dma.c |   13 +++++++++----
 1 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/musb/cppi41_dma.c b/drivers/usb/musb/cppi41_dma.c
index 33c5461..48d77d3 100644
--- a/drivers/usb/musb/cppi41_dma.c
+++ b/drivers/usb/musb/cppi41_dma.c
@@ -278,7 +278,8 @@ static int __devinit cppi41_controller_start(struct dma_controller *controller)
 	musb_writel(reg_base, USB_AUTOREQ_REG, 0);
 
 	/* Disable the CDC/RNDIS modes */
-	musb_writel(reg_base, USB_MODE_REG, 0);
+	musb_writel(reg_base, USB_TX_MODE_REG, 0);
+	musb_writel(reg_base, USB_RX_MODE_REG, 0);
 
 	return 1;
 
@@ -332,7 +333,8 @@ static int cppi41_controller_stop(struct dma_controller *controller)
 	musb_writel(reg_base, USB_AUTOREQ_REG, 0);
 
 	/* Disable the CDC/RNDIS modes */
-	musb_writel(reg_base, USB_MODE_REG, 0);
+	musb_writel(reg_base, USB_TX_MODE_REG, 0);
+	musb_writel(reg_base, USB_RX_MODE_REG, 0);
 
 	return 1;
 }
@@ -480,17 +482,20 @@ static void cppi41_mode_update(struct cppi41_channel *cppi_ch, u8 mode)
 	if (mode != cppi_ch->dma_mode) {
 		struct cppi41 *cppi = cppi_ch->channel.private_data;
 		void *__iomem reg_base = cppi->musb->ctrl_base;
-		u32 reg_val = musb_readl(reg_base, USB_MODE_REG);
+		u32 reg_val;
 		u8 ep_num = cppi_ch->ch_num + 1;
 
 		if (cppi_ch->transmit) {
+			reg_val = musb_readl(reg_base, USB_TX_MODE_REG);
 			reg_val &= ~USB_TX_MODE_MASK(ep_num);
 			reg_val |= mode << USB_TX_MODE_SHIFT(ep_num);
+			musb_writel(reg_base, USB_TX_MODE_REG, reg_val);
 		} else {
+			reg_val = musb_readl(reg_base, USB_RX_MODE_REG);
 			reg_val &= ~USB_RX_MODE_MASK(ep_num);
 			reg_val |= mode << USB_RX_MODE_SHIFT(ep_num);
+			musb_writel(reg_base, USB_RX_MODE_REG, reg_val);
 		}
-		musb_writel(reg_base, USB_MODE_REG, reg_val);
 		cppi_ch->dma_mode = mode;
 	}
 }
-- 
1.7.5.4

