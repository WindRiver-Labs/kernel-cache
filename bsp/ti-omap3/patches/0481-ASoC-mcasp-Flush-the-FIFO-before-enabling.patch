From d04baea00a03c073496c1ec912761edf428beb79 Mon Sep 17 00:00:00 2001
From: Vaibhav Bedia <vaibhav.bedia@ti.com>
Date: Mon, 17 Oct 2011 14:42:11 +0530
Subject: [PATCH 481/609] ASoC: mcasp: Flush the FIFO before enabling

Original commit: f58debabb86ff88bc1d34550b725c5d77b905edb

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

FIFO should be flushed before it is enabled for the first time
This fixes the I/O errors reported by the ASoC core on a fresh boot

Signed-off-by: Vaibhav Bedia <vaibhav.bedia@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 arch/arm/include/asm/hardware/asp.h |    2 +-
 sound/soc/davinci/davinci-mcasp.c   |   54 ++++++++++++++++++-----------------
 2 files changed, 29 insertions(+), 27 deletions(-)

diff --git a/arch/arm/include/asm/hardware/asp.h b/arch/arm/include/asm/hardware/asp.h
index 747476a..fd17723 100644
--- a/arch/arm/include/asm/hardware/asp.h
+++ b/arch/arm/include/asm/hardware/asp.h
@@ -120,7 +120,7 @@ struct snd_platform_data {
 enum {
 	MCASP_VERSION_1 = 0,	/* DM646x */
 	MCASP_VERSION_2,	/* DA8xx/OMAPL1x */
-	MCASP_VERSION_3,
+	MCASP_VERSION_3,	/* AM33xx */
 };
 
 enum dm365_clk_input_pin {
diff --git a/sound/soc/davinci/davinci-mcasp.c b/sound/soc/davinci/davinci-mcasp.c
index 993007d..b73997a 100644
--- a/sound/soc/davinci/davinci-mcasp.c
+++ b/sound/soc/davinci/davinci-mcasp.c
@@ -384,27 +384,33 @@ static void mcasp_start_tx(struct davinci_audio_dev *dev)
 static void davinci_mcasp_start(struct davinci_audio_dev *dev, int stream)
 {
 	if (stream == SNDRV_PCM_STREAM_PLAYBACK) {
-		if (dev->txnumevt) {	/* enable FIFO */
-			if (dev->version == MCASP_VERSION_3)
-				mcasp_set_bits(dev->base +
-						MCASP_VER3_WFIFOCTL,
-						FIFO_ENABLE);
-			else
-				mcasp_set_bits(dev->base +
-						DAVINCI_MCASP_WFIFOCTL,
-						FIFO_ENABLE);
+		if (dev->txnumevt) {	/* flush and enable FIFO */
+			if (dev->version == MCASP_VERSION_3) {
+				mcasp_clr_bits(dev->base + MCASP_VER3_WFIFOCTL,
+								FIFO_ENABLE);
+				mcasp_set_bits(dev->base + MCASP_VER3_WFIFOCTL,
+								FIFO_ENABLE);
+			} else {
+				mcasp_clr_bits(dev->base + DAVINCI_MCASP_WFIFOCTL,
+								FIFO_ENABLE);
+				mcasp_set_bits(dev->base + DAVINCI_MCASP_WFIFOCTL,
+								FIFO_ENABLE);
+			}
 		}
 		mcasp_start_tx(dev);
 	} else {
-		if (dev->rxnumevt) {	/* enable FIFO */
-			if (dev->version == MCASP_VERSION_3)
-				mcasp_set_bits(dev->base +
-						MCASP_VER3_WFIFOCTL,
-						FIFO_ENABLE);
-			else
-				mcasp_set_bits(dev->base +
-						DAVINCI_MCASP_RFIFOCTL,
-						FIFO_ENABLE);
+		if (dev->rxnumevt) {	/* flush and enable FIFO */
+			if (dev->version == MCASP_VERSION_3) {
+				mcasp_clr_bits(dev->base + MCASP_VER3_WFIFOCTL,
+								FIFO_ENABLE);
+				mcasp_set_bits(dev->base + MCASP_VER3_WFIFOCTL,
+								FIFO_ENABLE);
+			} else {
+				mcasp_clr_bits(dev->base + DAVINCI_MCASP_RFIFOCTL,
+								FIFO_ENABLE);
+				mcasp_set_bits(dev->base + DAVINCI_MCASP_RFIFOCTL,
+								FIFO_ENABLE);
+			}
 		}
 		mcasp_start_rx(dev);
 	}
@@ -427,24 +433,20 @@ static void davinci_mcasp_stop(struct davinci_audio_dev *dev, int stream)
 	if (stream == SNDRV_PCM_STREAM_PLAYBACK) {
 		if (dev->txnumevt) {	/* disable FIFO */
 			if (dev->version == MCASP_VERSION_3)
-				mcasp_clr_bits(dev->base +
-						MCASP_VER3_WFIFOCTL,
+				mcasp_clr_bits(dev->base + MCASP_VER3_WFIFOCTL,
 						FIFO_ENABLE);
 			else
-				mcasp_clr_bits(dev->base +
-						DAVINCI_MCASP_WFIFOCTL,
+				mcasp_clr_bits(dev->base + DAVINCI_MCASP_WFIFOCTL,
 						FIFO_ENABLE);
 		}
 		mcasp_stop_tx(dev);
 	} else {
 		if (dev->rxnumevt) {	/* disable FIFO */
 			if (dev->version == MCASP_VERSION_3)
-				mcasp_clr_bits(dev->base +
-						MCASP_VER3_RFIFOCTL,
+				mcasp_clr_bits(dev->base + MCASP_VER3_RFIFOCTL,
 						FIFO_ENABLE);
 			else
-				mcasp_clr_bits(dev->base +
-						DAVINCI_MCASP_RFIFOCTL,
+				mcasp_clr_bits(dev->base + DAVINCI_MCASP_RFIFOCTL,
 						FIFO_ENABLE);
 		}
 		mcasp_stop_rx(dev);
-- 
1.7.5.4

