From d04d833441ea5989dd7cbfa8fe2cfd73b1cc22ff Mon Sep 17 00:00:00 2001
From: "Patil, Rachna" <rachna@ti.com>
Date: Wed, 1 Aug 2012 15:39:52 +0800
Subject: [PATCH 232/609] ARM: OMAP2+: am33xx: remove support for AM335x Rev
 1.0x EVMs

Original commit: 3891b00cae7960c1e1da1fe3b02a49b7ad6d4f16

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

AM335x 1.0x EVMs are not supported anymore. Stop checking for this
version in EVM board file.

WLAN, BT, Ethernet and other peripherals have been configured to work
on 1.1x EVMs and above.

Signed-off-by: Patil, Rachna <rachna@ti.com>
Signed-off-by: Hebbar, Gururaja <gururaja.hebbar@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
---
 arch/arm/mach-omap2/board-am335xevm.c |   48 +++-----------------------------
 1 files changed, 5 insertions(+), 43 deletions(-)

diff --git a/arch/arm/mach-omap2/board-am335xevm.c b/arch/arm/mach-omap2/board-am335xevm.c
index e9b4d87..0dfccf7 100644
--- a/arch/arm/mach-omap2/board-am335xevm.c
+++ b/arch/arm/mach-omap2/board-am335xevm.c
@@ -294,12 +294,6 @@ static struct am335x_evm_eeprom_config config;
 static struct am335x_eeprom_config1 config1;
 static bool daughter_brd_detected;
 
-#define GP_EVM_REV_IS_1_0		0x1
-#define GP_EVM_REV_IS_1_1A		0x2
-#define GP_EVM_REV_IS_UNKNOWN		0xFF
-static unsigned int gp_evm_revision = GP_EVM_REV_IS_UNKNOWN;
-unsigned int gigabit_enable = 1;
-
 #define EEPROM_MAC_ADDRESS_OFFSET	60 /* 4+8+4+12+32 */
 #define EEPROM_NO_OF_MAC_ADDR		3
 static char am335x_mac_addr[EEPROM_NO_OF_MAC_ADDR][ETH_ALEN];
@@ -838,6 +832,8 @@ static int backlight_enable;
 struct wl12xx_platform_data am335xevm_wlan_data = {
 	.irq = OMAP_GPIO_IRQ(AM335XEVM_WLAN_IRQ_GPIO),
 	.board_ref_clock = WL12XX_REFCLOCK_38_XTAL, /* 38.4Mhz */
+	.bt_enable_gpio = GPIO_TO_PIN(3, 21),
+	.wlan_enable_gpio = GPIO_TO_PIN(1, 16),
 };
 
 /* Module pin mux for wlan and bluetooth */
@@ -859,20 +855,13 @@ static struct pinmux_config uart1_wl12xx_pin_mux[] = {
 	{NULL, 0},
 };
 
-static struct pinmux_config wl12xx_pin_mux_evm_rev1_1a[] = {
+static struct pinmux_config wl12xx_pin_mux[] = {
 	{"gpmc_a0.gpio1_16", OMAP_MUX_MODE7 | AM33XX_PIN_OUTPUT},
 	{"mcasp0_ahclkr.gpio3_17", OMAP_MUX_MODE7 | AM33XX_PIN_INPUT},
 	{"mcasp0_ahclkx.gpio3_21", OMAP_MUX_MODE7 | AM33XX_PIN_OUTPUT},
 	{NULL, 0},
  };
 
-static struct pinmux_config wl12xx_pin_mux_evm_rev1_0[] = {
-	{"gpmc_csn1.gpio1_30", OMAP_MUX_MODE7 | AM33XX_PIN_OUTPUT},
-	{"mcasp0_ahclkr.gpio3_17", OMAP_MUX_MODE7 | AM33XX_PIN_INPUT},
-	{"gpmc_csn2.gpio1_31", OMAP_MUX_MODE7 | AM33XX_PIN_OUTPUT},
-	{NULL, 0},
- };
-
 static void enable_ecap0(int evm_id, int profile)
 {
 	backlight_enable = true;
@@ -1547,16 +1536,6 @@ static void wl12xx_init(int evm_id, int profile)
 	struct omap_mmc_platform_data *pdata;
 	int ret;
 
-	/* Register WLAN and BT enable pins based on the evm board revision */
-	if (gp_evm_revision == GP_EVM_REV_IS_1_1A) {
-		am335xevm_wlan_data.wlan_enable_gpio = GPIO_TO_PIN(1, 16);
-		am335xevm_wlan_data.bt_enable_gpio = GPIO_TO_PIN(3, 21);
-	}
-	else {
-		am335xevm_wlan_data.wlan_enable_gpio = GPIO_TO_PIN(1, 30);
-		am335xevm_wlan_data.bt_enable_gpio = GPIO_TO_PIN(1, 31);
-	}
-
 	wl12xx_bluetooth_enable();
 
 	if (wl12xx_set_platform_data(&am335xevm_wlan_data))
@@ -1581,10 +1560,7 @@ static void wl12xx_init(int evm_id, int profile)
 		goto out;
 	}
 
-	if (gp_evm_revision == GP_EVM_REV_IS_1_1A)
-		setup_pin_mux(wl12xx_pin_mux_evm_rev1_1a);
-	else
-		setup_pin_mux(wl12xx_pin_mux_evm_rev1_0);
+	setup_pin_mux(wl12xx_pin_mux);
 
 	pdata->slots[0].set_power = wl12xx_set_power;
 out:
@@ -1861,20 +1837,6 @@ static void setup_general_purpose_evm(void)
 	u32 prof_sel = am335x_get_profile_selection();
 	pr_info("The board is general purpose EVM in profile %d\n", prof_sel);
 
-	if (!strncmp("1.1A", config.version, 4)) {
-		gp_evm_revision = GP_EVM_REV_IS_1_1A;
-	} else if (!strncmp("1.0", config.version, 3)) {
-		gp_evm_revision = GP_EVM_REV_IS_1_0;
-	} else {
-		pr_err("Found invalid GP EVM revision, falling back to Rev1.1A");
-		gp_evm_revision = GP_EVM_REV_IS_1_1A;
-	}
-
-	if (gp_evm_revision == GP_EVM_REV_IS_1_0)
-		gigabit_enable = 0;
-	else if (gp_evm_revision == GP_EVM_REV_IS_1_1A)
-		gigabit_enable = 1;
-
 	_configure_device(GEN_PURP_EVM, gen_purp_evm_dev_cfg, (1L << prof_sel));
 }
 
@@ -2038,7 +2000,7 @@ static void am335x_evm_setup(struct memory_accessor *mem_acc, void *context)
 	 * information is required for configuring phy address and hence
 	 * should be call only after board detection
 	 */
-	am33xx_cpsw_init(gigabit_enable);
+	am33xx_cpsw_init(true); /* Bug here fixme czm */
 
 	return;
 out:
-- 
1.7.5.4

