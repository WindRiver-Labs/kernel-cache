From b3209820eb4b0f4a81c4a6227868fed712d0c088 Mon Sep 17 00:00:00 2001
From: Chandan Nath <chandan.nath@ti.com>
Date: Thu, 16 Aug 2012 10:15:39 +0800
Subject: [PATCH 204/609] arm: omap: am33xx: Enable/Disable gig support for
 different evm rev

Original commit: 86deec46e0d6d23797cc4f0dc8f1619264558e93

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

This patch is added to enable cpsw gigabit mode support for beta
evm and disable gigabit support for alpha EVMs. Please note that
phy_register_fixup_for_uid() function cannot be used to configure
phydev->supported as it is not register configuration and that needs
to be configured after phy->connect.

Signed-off-by: Chandan Nath <chandan.nath@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 arch/arm/mach-omap2/board-am335xevm.c              |    3 +-
 arch/arm/mach-omap2/devices.c                      |   25 +++++++++----------
 arch/arm/mach-omap2/include/mach/board-am335xevm.h |    2 +-
 3 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/arch/arm/mach-omap2/board-am335xevm.c b/arch/arm/mach-omap2/board-am335xevm.c
index 738bc1a..283a48d 100644
--- a/arch/arm/mach-omap2/board-am335xevm.c
+++ b/arch/arm/mach-omap2/board-am335xevm.c
@@ -292,6 +292,7 @@ static bool daughter_brd_detected;
 #define GP_EVM_REV_IS_1_1A		0x2
 #define GP_EVM_REV_IS_UNKNOWN		0xFF
 static unsigned int gp_evm_revision = GP_EVM_REV_IS_UNKNOWN;
+unsigned int gigabit_enable = 1;
 
 #define CPLD_REV_1_0A			0x1
 #define CPLD_REV_1_1A			0x2
@@ -1884,7 +1885,7 @@ static void am335x_evm_setup(struct memory_accessor *mem_acc, void *context)
 	 * information is required for configuring phy address and hence
 	 * should be call only after board detection
 	 */
-	am33xx_cpsw_init();
+	am33xx_cpsw_init(gigabit_enable);
 
 	return;
 out:
diff --git a/arch/arm/mach-omap2/devices.c b/arch/arm/mach-omap2/devices.c
index 26157c6..d939ac9 100644
--- a/arch/arm/mach-omap2/devices.c
+++ b/arch/arm/mach-omap2/devices.c
@@ -18,7 +18,7 @@
 #include <linux/slab.h>
 #include <linux/of.h>
 #include <linux/davinci_emac.h>
-#include <linux/cpsw.h>
+#include <linux/platform_data/cpsw.h>
 #include <linux/etherdevice.h>
 #include <linux/dma-mapping.h>
 #include <linux/can/platform/d_can.h>
@@ -62,8 +62,6 @@
 #define L3_MODULES_MAX_LEN 12
 #define L3_MODULES 3
 
-void am33xx_cpsw_init(void);
-
 static int __init omap3_l3_init(void)
 {
 	int l;
@@ -175,10 +173,6 @@ int __init am33xx_register_lcdc(struct da8xx_lcdc_platform_data *pdata)
 	return 0;
 }
 
-#if defined(CONFIG_IOMMU_API)
-
-#include <plat/iommu.h>
-
 int __init am33xx_register_tsc(struct tsc_data *pdata)
 {
 	int id = -1;
@@ -248,6 +242,10 @@ static void am33xx_init_pcm(void)
 static inline void am33xx_init_pcm(void) {}
 #endif
 
+#if defined(CONFIG_IOMMU_API)
+
+#include <plat/iommu.h>
+
 static struct resource omap3isp_resources[] = {
 	{
 		.start		= OMAP3430_ISP_BASE,
@@ -548,7 +546,7 @@ int __init omap_init_elm(void)
 	return 0;
 }
 
-#ifdef CONFIG_SOC_OMAPAM33XX
+#ifdef CONFIG_SOC_AM33XX
 #define PWM_STR_LEN 10
 int __init am33xx_register_ecap(int id, struct pwmss_platform_data *pdata)
 {
@@ -604,9 +602,9 @@ int __init am33xx_register_ehrpwm(int id, struct pwmss_platform_data *pdata)
 
 #else
 static int __init am335x_register_ehrpwm(int id,
-		struct pwmss_platform_data *pdata) { }
+		struct pwmss_platform_data *pdata) { return 0;}
 static int __init am335x_register_ecap(int id,
-		struct pwmss_platform_data *pdata) { }
+		struct pwmss_platform_data *pdata) { return 0;}
 #endif
 
 static struct resource omap2_pmu_resource = {
@@ -895,7 +893,7 @@ static void omap_init_vout(void)
 static inline void omap_init_vout(void) {}
 #endif
 
-#if defined(CONFIG_SOC_OMAPAM33XX) && defined(CONFIG_OMAP3_EDMA)
+#if defined(CONFIG_SOC_AM33XX) && defined(CONFIG_OMAP3_EDMA)
 
 #define AM33XX_SCM_BASE_EDMA		0x00000f90
 
@@ -1081,7 +1079,7 @@ static int __init am33xx_register_edma(void)
 static inline void am33xx_register_edma(void) {}
 #endif
 
-#if defined (CONFIG_SOC_OMAPAM33XX)
+#if defined (CONFIG_SOC_AM33XX)
 struct uio_pruss_pdata am335x_pruss_uio_pdata = {
 	.pintc_base	= 0x20000,
 };
@@ -1179,7 +1177,7 @@ static int __init omap2_init_devices(void)
 	omap_init_vout();
 	am33xx_register_edma();
 	am33xx_init_pcm();
-#if defined (CONFIG_SOC_OMAPAM33XX)
+#if defined (CONFIG_SOC_AM33XX)
 	am335x_register_pruss_uio(&am335x_pruss_uio_pdata);
 	if (omap3_has_sgx())
 		platform_device_register(&am335x_sgx);
@@ -1387,6 +1385,7 @@ void am33xx_cpsw_init(void)
 				AM33XX_CTRL_REGADDR(MAC_MII_SEL));
 	}
 
+	am33xx_cpsw_pdata.gigabit_en = gigen;
 	memcpy(am33xx_cpsw_pdata.mac_addr,
 			am33xx_cpsw_slaves[0].mac_addr, ETH_ALEN);
 	platform_device_register(&am33xx_cpsw_mdiodevice);
diff --git a/arch/arm/mach-omap2/include/mach/board-am335xevm.h b/arch/arm/mach-omap2/include/mach/board-am335xevm.h
index cdea864..b1fa48e 100644
--- a/arch/arm/mach-omap2/include/mach/board-am335xevm.h
+++ b/arch/arm/mach-omap2/include/mach/board-am335xevm.h
@@ -41,7 +41,7 @@
 
 void am335x_evmid_fillup(unsigned int evmid);
 void am335x_cpsw_macidfillup(char *eeprommacid0, char *eeprommacid1);
-void am33xx_cpsw_init(void);
+void am33xx_cpsw_init(unsigned int gigen);
 void am33xx_d_can_init(unsigned int instance);
 
 #endif
-- 
1.7.5.4

