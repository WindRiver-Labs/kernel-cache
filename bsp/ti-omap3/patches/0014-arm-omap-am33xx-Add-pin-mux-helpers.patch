From c7f59329b322afffff3a569757a25b47c4f546af Mon Sep 17 00:00:00 2001
From: Afzal Mohammed <afzal@ti.com>
Date: Tue, 4 Oct 2011 15:32:45 +0530
Subject: [PATCH 014/609] arm:omap:am33xx: Add pin mux helpers

Original commit: 704f3f6b0810d7512ceae1b175785c9d856f1fc5

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

Add pin mux table, macros for pin mux

Signed-off-by: Afzal Mohammed <afzal@ti.com>
Signed-off-by: Hebbar, Gururaja <gururaja.hebbar@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 arch/arm/mach-omap2/Makefile  |    1 +
 arch/arm/mach-omap2/mux.h     |   29 ++
 arch/arm/mach-omap2/mux33xx.c |  610 +++++++++++++++++++++++++++++++++++++++++
 arch/arm/mach-omap2/mux33xx.h |  241 ++++++++++++++++
 4 files changed, 881 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-omap2/mux33xx.c
 create mode 100644 arch/arm/mach-omap2/mux33xx.h

diff --git a/arch/arm/mach-omap2/Makefile b/arch/arm/mach-omap2/Makefile
index 0ac54da6..1d93ca7 100644
--- a/arch/arm/mach-omap2/Makefile
+++ b/arch/arm/mach-omap2/Makefile
@@ -48,6 +48,7 @@ obj-$(CONFIG_SOC_OMAP2420)		+= mux2420.o
 obj-$(CONFIG_SOC_OMAP2430)		+= mux2430.o
 obj-$(CONFIG_ARCH_OMAP3)		+= mux34xx.o
 obj-$(CONFIG_ARCH_OMAP4)		+= mux44xx.o
+obj-$(CONFIG_SOC_OMAPAM33XX)           += mux33xx.o
 
 # SMS/SDRC
 obj-$(CONFIG_ARCH_OMAP2)		+= sdrc2xxx.o
diff --git a/arch/arm/mach-omap2/mux.h b/arch/arm/mach-omap2/mux.h
index 471e62a..d4074e1 100644
--- a/arch/arm/mach-omap2/mux.h
+++ b/arch/arm/mach-omap2/mux.h
@@ -11,6 +11,7 @@
 #include "mux2430.h"
 #include "mux34xx.h"
 #include "mux44xx.h"
+#include "mux33xx.h"
 
 #define OMAP_MUX_TERMINATOR	0xffff
 
@@ -41,6 +42,28 @@
 /* 44xx specific mux bit defines */
 #define OMAP_WAKEUP_EVENT		(1 << 15)
 
+/* am33xx specific mux bit defines */
+#define AM33XX_SLEWCTRL_FAST		(0 << 6)
+#define AM33XX_SLEWCTRL_SLOW		(1 << 6)
+#define AM33XX_INPUT_EN			(1 << 5)
+#define AM33XX_PULL_UP			(1 << 4)
+/* bit 3: 0 - enable, 1 - disable for pull enable */
+#define AM33XX_PULL_DISA		(1 << 3)
+#define AM33XX_PULL_ENBL		(0 << 3)
+
+/* Definition of output pin could have pull disabled, but
+ * this has not been done due to two reasons
+ * 1. AM33XX_MUX will take care of it
+ * 2. If pull was disabled for out macro, combining out & in pull on macros
+ *    would disable pull resistor and AM33XX_MUX cannot take care of the
+ *    correct pull setting and unintentionally pull would get disabled
+ */
+#define	AM33XX_PIN_OUTPUT		(0)
+#define	AM33XX_PIN_OUTPUT_PULLUP	(AM33XX_PULL_UP)
+#define	AM33XX_PIN_INPUT		(AM33XX_INPUT_EN | AM33XX_PULL_DISA)
+#define	AM33XX_PIN_INPUT_PULLUP		(AM33XX_INPUT_EN | AM33XX_PULL_UP)
+#define	AM33XX_PIN_INPUT_PULLDOWN	(AM33XX_INPUT_EN)
+
 /* Active pin states */
 #define OMAP_PIN_OUTPUT			0
 #define OMAP_PIN_INPUT			OMAP_INPUT_EN
@@ -342,6 +365,12 @@ int omap4_mux_init(struct omap_board_mux *board_subset,
 	struct omap_board_mux *board_wkup_subset, int flags);
 
 /**
+ * am33xx_mux_init() - initialize mux system along with board specific set
+ * @board_mux:		Board specific mux table
+ */
+int am33xx_mux_init(struct omap_board_mux *board_mux);
+
+/**
  * omap_mux_init - private mux init function, do not call
  */
 int omap_mux_init(const char *name, u32 flags,
diff --git a/arch/arm/mach-omap2/mux33xx.c b/arch/arm/mach-omap2/mux33xx.c
new file mode 100644
index 0000000..017c18f
--- /dev/null
+++ b/arch/arm/mach-omap2/mux33xx.c
@@ -0,0 +1,610 @@
+/*
+ * AM33XX mux data
+ *
+ * Copyright (C) 2011 Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * Derived from: arch/arm/mach-omap2/mux34xx.c Original copyright follows:
+ *
+ * Copyright (C) 2009 Nokia
+ * Copyright (C) 2009 Texas Instruments
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/module.h>
+#include <linux/init.h>
+
+#include "mux.h"
+
+#ifdef CONFIG_OMAP_MUX
+
+#define _AM33XX_MUXENTRY(M0, g, m0, m1, m2, m3, m4, m5, m6, m7)		\
+{									\
+	.reg_offset	= (AM33XX_CONTROL_PADCONF_##M0##_OFFSET),	\
+	.gpio		= (g),						\
+	.muxnames	= { m0, m1, m2, m3, m4, m5, m6, m7 },		\
+}
+
+/* AM33XX pin mux super set */
+static struct omap_mux __initdata am33xx_muxmodes[] = {
+	_AM33XX_MUXENTRY(GPMC_AD0, 0,
+		"gpmc_ad0", "mmc1_dat0", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD1, 0,
+		"gpmc_ad1", "mmc1_dat1", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD2, 0,
+		"gpmc_ad2", "mmc1_dat2", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD3, 0,
+		"gpmc_ad3", "mmc1_dat3", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD4, 0,
+		"gpmc_ad4", "mmc1_dat4", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD5, 0,
+		"gpmc_ad5", "mmc1_dat5", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD6, 0,
+		"gpmc_ad6", "mmc1_dat6", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD7, 0,
+		"gpmc_ad7", "mmc1_dat7", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD8, 0,
+		"gpmc_ad8", "lcd_data16", "mmc1_dat0", "mmc2_dat4",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD9, 0,
+		"gpmc_ad9", "lcd_data17", "mmc1_dat1", "mmc2_dat5",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD10, 0,
+		"gpmc_ad10", "lcd_data18", "mmc1_dat2", "mmc2_dat6",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD11, 0,
+		"gpmc_ad11", "lcd_data19", "mmc1_dat3", "mmc2_dat7",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD12, 0,
+		"gpmc_ad12", "lcd_data20", "mmc1_dat4", "mmc2_dat0",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD13, 0,
+		"gpmc_ad13", "lcd_data21", "mmc1_dat5", "mmc2_dat1",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD14, 0,
+		"gpmc_ad14", "lcd_data22", "mmc1_dat6", "mmc2_dat2",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_AD15, 0,
+		"gpmc_ad15", "lcd_data23", "mmc1_dat7", "mmc2_dat3",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_A0, 0,
+		"gpmc_a0", "mii2_txen", "rgmii2_tctl", "rmii2_txen",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_A1, 0,
+		"gpmc_a1", "mii2_rxdv", "rgmii2_rctl", "mmc2_dat0",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_A2, 0,
+		"gpmc_a2", "mii2_txd3", "rgmii2_td3", "mmc2_dat1",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_A3, 0,
+		"gpmc_a3", "mii2_txd2", "rgmii2_td2", "mmc2_dat2",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_A4, 0,
+		"gpmc_a4", "mii2_txd1", "rgmii2_td1", "rmii2_txd1",
+		"gpmc_a20", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_A5, 0,
+		"gpmc_a5", "mii2_txd0", "rgmii2_td0", "rmii2_txd0",
+		"gpmc_a21", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_A6, 0,
+		"gpmc_a6", "mii2_txclk", "rgmii2_tclk", "mmc2_dat4",
+		"gpmc_a22", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_A7, 0,
+		"gpmc_a7", "mii2_rxclk", "rgmii2_rclk", "mmc2_dat5",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_A8, 0,
+		"gpmc_a8", "mii2_rxd3", "rgmii2_rd3", "mmc2_dat6",
+		NULL, NULL, "mcasp0_aclkx", NULL),
+	_AM33XX_MUXENTRY(GPMC_A9, 0,
+		"gpmc_a9", "mii2_rxd2", "rgmii2_rd2", "mmc2_dat7",
+		NULL, NULL, "mcasp0_fsx", NULL),
+	_AM33XX_MUXENTRY(GPMC_A10, 0,
+		"gpmc_a10", "mii2_rxd1", "rgmii2_rd1", "rmii2_rxd1",
+		NULL, NULL, "mcasp0_axr0", NULL),
+	_AM33XX_MUXENTRY(GPMC_A11, 0,
+		"gpmc_a11", "mii2_rxd0", "rgmii2_rd0", "rmii2_rxd0",
+		NULL, NULL, "mcasp0_axr1", NULL),
+	_AM33XX_MUXENTRY(GPMC_WAIT0, 0,
+		"gpmc_wait0", "mii2_crs", NULL, "rmii2_crs_dv",
+		"mmc1_sdcd", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_WPN, 0,
+		"gpmc_wpn", "mii2_rxerr", NULL, "rmii2_rxerr",
+		"mmc2_sdcd", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_BEN1, 0,
+		"gpmc_ben1", "mii2_col", "mmc2_dat3", NULL,
+		NULL, NULL, "mcasp0_aclkr", NULL),
+	_AM33XX_MUXENTRY(GPMC_CSN0, 0,
+		"gpmc_csn0", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_CSN1, 0,
+		"gpmc_csn1", NULL, "mmc1_clk", NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_CSN2, 0,
+		"gpmc_csn2", NULL, "mmc1_cmd", NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_CSN3, 0,
+		"gpmc_csn3", NULL, NULL, "mmc2_cmd",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_CLK, 0,
+		"gpmc_clk", NULL, NULL, "mmc2_clk",
+		NULL, NULL, "mcasp0_fsr", NULL),
+	_AM33XX_MUXENTRY(GPMC_ADVN_ALE, 0,
+		"gpmc_advn_ale", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_OEN_REN, 0,
+		"gpmc_oen_ren", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_WEN, 0,
+		"gpmc_wen", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(GPMC_BEN0_CLE, 0,
+		"gpmc_ben0_cle", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA0, 0,
+		"lcd_data0", "gpmc_a0", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA1, 0,
+		"lcd_data1", "gpmc_a1", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA2, 0,
+		"lcd_data2", "gpmc_a2", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA3, 0,
+		"lcd_data3", "gpmc_a3", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA4, 0,
+		"lcd_data4", "gpmc_a4", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA5, 0,
+		"lcd_data5", "gpmc_a5", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA6, 0,
+		"lcd_data6", "gpmc_a6", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA7, 0,
+		"lcd_data7", "gpmc_a7", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA8, 0,
+		"lcd_data8", "gpmc_a12", NULL, "mcasp0_aclkx",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA9, 0,
+		"lcd_data9", "gpmc_a13", NULL, "mcasp0_fsx",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA10, 0,
+		"lcd_data10", "gpmc_a14", NULL, "mcasp0_axr0",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA11, 0,
+		"lcd_data11", "gpmc_a15", NULL, "mcasp0_ahclkr",
+		"mcasp0_axr2", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA12, 0,
+		"lcd_data12", "gpmc_a16", NULL, "mcasp0_aclkr",
+		"mcasp0_axr2", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA13, 0,
+		"lcd_data13", "gpmc_a17", NULL, "mcasp0_fsr",
+		"mcasp0_axr3", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA14, 0,
+		"lcd_data14", "gpmc_a18", NULL, "mcasp0_axr1",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_DATA15, 0,
+		"lcd_data15", "gpmc_a19", NULL, "mcasp0_ahclkx",
+		"mcasp0_axr3", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_VSYNC, 0,
+		"lcd_vsync", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_HSYNC, 0,
+		"lcd_hsync", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_PCLK, 0,
+		"lcd_pclk", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(LCD_AC_BIAS_EN, 0,
+		"lcd_ac_bias_en", NULL, NULL, NULL,
+		NULL, NULL, NULL, "gpio2_25"),
+	_AM33XX_MUXENTRY(GPMC_CLK, 0,
+		"gpmc_clk", "lcd_memory_clk_mux", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MMC0_DAT3, 0,
+		"mmc0_dat3", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MMC0_DAT2, 0,
+		"mmc0_dat2", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MMC0_DAT1, 0,
+		"mmc0_dat1", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MMC0_DAT0, 0,
+		"mmc0_dat0", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MMC0_CLK, 0,
+		"mmc0_clk", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MMC0_CMD, 0,
+		"mmc0_cmd", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MII1_COL, 0,
+		"mii1_col", "rmii2_refclk", "spi1_sclk", NULL,
+		"mcasp1_axr2", "mmc2_dat3", "mcasp0_axr2", NULL),
+	_AM33XX_MUXENTRY(MII1_CRS, 0,
+		"mii1_crs", "rmii1_crs_dv", "spi1_d0", NULL,
+		"mcasp1_aclkx", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MII1_RXERR, 0,
+		"mii1_rxerr", "rmii1_rxerr", "spi1_d1", NULL,
+		"mcasp1_fsx", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MII1_TXEN, 0,
+		"mii1_txen", "rmii1_txen", "rgmii1_tctl", NULL,
+		"mcasp1_axr0", NULL, "mmc2_cmd", NULL),
+	_AM33XX_MUXENTRY(MII1_RXDV, 0,
+		"mii1_rxdv", NULL, "rgmii1_rctl", NULL,
+		"mcasp1_aclx", "mmc2_dat0", "mcasp0_aclkr", NULL),
+	_AM33XX_MUXENTRY(MII1_TXD3, 0,
+		"mii1_txd3", NULL, "rgmii1_td3", NULL,
+		"mcasp1_fsx", "mmc2_dat1", "mcasp0_fsr", NULL),
+	_AM33XX_MUXENTRY(MII1_TXD2, 0,
+		"mii1_txd2", NULL, "rgmii1_td2", NULL,
+		"mcasp1_axr0", "mmc2_dat2", "mcasp0_ahclkx", NULL),
+	_AM33XX_MUXENTRY(MII1_TXD1, 0,
+		"mii1_txd1", "rmii1_txd1", "rgmii1_td1", "mcasp1_fsr",
+		"mcasp1_axr1", NULL, "mmc1_cmd", NULL),
+	_AM33XX_MUXENTRY(MII1_TXD0, 0,
+		"mii1_txd0", "rmii1_txd0", "rgmii1_td0", "mcasp1_axr2",
+		"mcasp1_aclkr", NULL, "mmc1_clk", NULL),
+	_AM33XX_MUXENTRY(MII1_TXCLK, 0,
+		"mii1_txclk", NULL, "rgmii1_tclk", "mmc0_dat7",
+		"mmc1_dat0", NULL, "mcasp0_aclkx", NULL),
+	_AM33XX_MUXENTRY(MII1_RXCLK, 0,
+		"mii1_rxclk", NULL, "rgmii1_rclk", "mmc0_dat6",
+		"mmc1_dat1", NULL, "mcasp0_fsx", NULL),
+	_AM33XX_MUXENTRY(MII1_RXD3, 0,
+		"mii1_rxd3", NULL, "rgmii1_rd3", "mmc0_dat5",
+		"mmc1_dat2", NULL, "mcasp0_axr0", NULL),
+	_AM33XX_MUXENTRY(MII1_RXD2, 0,
+		"mii1_rxd2", NULL, "rgmii1_rd2", "mmc0_dat4",
+		"mmc1_dat3", NULL, "mcasp0_axr1", NULL),
+	_AM33XX_MUXENTRY(MII1_RXD1, 0,
+		"mii1_rxd1", "rmii1_rxd1", "rgmii1_rd1", "mcasp1_axr3",
+		"mcasp1_fsr", NULL, "mmc2_clk", NULL),
+	_AM33XX_MUXENTRY(MII1_RXD0, 0,
+		"mii1_rxd0", "rmii1_rxd0", "rgmii1_rd0", "mcasp1_ahclkx",
+		"mcasp1_ahclkr", "mcasp1_aclkr", "mcasp0_axr3", NULL),
+	_AM33XX_MUXENTRY(MII1_REFCLK, 0,
+		"rmii1_refclk", NULL, "spi1_cs0", NULL,
+		"mcasp1_axr3", "mmc0_pow", "mcasp1_ahclkx", NULL),
+	_AM33XX_MUXENTRY(MDIO_DATA, 0,
+		"mdio_data", NULL, NULL, NULL,
+		"mmc0_sdcd", "mmc1_cmd", "mmc2_cmd", NULL),
+	_AM33XX_MUXENTRY(MDIO_CLK, 0,
+		"mdio_clk", NULL, NULL, NULL,
+		"mmc0_sdwp", "mmc1_clk", "mmc2_clk", NULL),
+	_AM33XX_MUXENTRY(SPI0_SCLK, 0,
+		"spi0_sclk", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(SPI0_D0, 0,
+		"spi0_d0", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(SPI0_D1, 0,
+		"spi0_d1", "mmc1_sdwp", "i2c1_sda", NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(SPI0_CS0, 0,
+		"spi0_cs0", "mmc2_sdwp", "i2c1_scl", NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(SPI0_CS1, 0,
+		"spi0_cs1", "uart3_rxd", NULL, "mmc0_pow",
+		NULL, "mmc0_sdcd", NULL, NULL),
+	_AM33XX_MUXENTRY(ECAP0_IN_PWM0_OUT, 0,
+		"ecap0_in_pwm0_out", "uart3_txd", "spi1_cs1", NULL,
+		"spi1_sclk", "mmc0_sdwp", NULL, "gpio0_7"),
+	_AM33XX_MUXENTRY(UART0_CTSN, 0,
+		"uatr0_ctsn", NULL, NULL, NULL,
+		"spi1_d0", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(UART0_RTSN, 0,
+		"uart0_rtsn", NULL, NULL, NULL,
+		"spi1_d1", "spi1_cs0", NULL, NULL),
+	_AM33XX_MUXENTRY(UART0_RXD, 0,
+		"uart0_rxd", "spi1_cs0", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(UART0_TXD, 0,
+		"uart0_txd", "spi1_cs1", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(UART1_CTSN, 0,
+		"uart1_ctsn", NULL, NULL, NULL,
+		"spi1_cs0", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(UART1_RTSN, 0,
+		"uart1_rtsn", NULL, NULL, NULL,
+		"spi1_cs1", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(UART1_RXD, 0,
+		"uart1_rxd", "mmc1_sdwp", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(UART1_TXD, 0,
+		"uart1_txd", "mmc2_sdwp", NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(I2C0_SDA, 0,
+		"i2c0_sda", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(I2C0_SCL, 0,
+		"i2c0_scl", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MCASP0_ACLKX, 0,
+		"mcasp0_aclkx", NULL, NULL, "spi1_sclk",
+		"mmc0_sdcd", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MCASP0_FSX, 0,
+		"mcasp0_fsx", NULL, NULL, "spi1_d0",
+		"mmc1_sdcd", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MCASP0_AXR0, 0,
+		"mcasp0_axr0", NULL, NULL, "spi1_d1",
+		"mmc2_sdcd", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MCASP0_AHCLKR, 0,
+		"mcasp0_ahclkr", NULL, "mcasp0_axr2", "spi1_cs0",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MCASP0_ACLKR, 0,
+		"mcasp0_aclkr", NULL, "mcasp0_axr2", "mcasp1_aclkx",
+		"mmc0_sdwp", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MCASP0_FSR, 0,
+		"mcasp0_fsr", NULL, "mcasp0_axr3", "mcasp1_fsx",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MCASP0_AXR1, 0,
+		"mcasp0_axr1", NULL, NULL, "mcasp1_axr0",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(MCASP0_AHCLKX, 0,
+		"mcasp0_ahclkx", "mcasp0_axr3",	NULL, "mcasp1_axr1",
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(XDMA_EVENT_INTR0, 0,
+		"xdma_event_intr0", NULL, NULL, NULL,
+		"spi1_cs1", NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(XDMA_EVENT_INTR1, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(WARMRSTN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(PWRONRSTN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(NMIN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(XTALIN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(XTALOUT, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(TMS, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(TDI, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(TDO, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(TCK, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(TRSTN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(EMU0, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(EMU1, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(RTC_XTALIN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(RTC_XTALOUT, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(RTC_PWRONRSTN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(PMIC_POWER_EN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(EXT_WAKEUP, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(USB0_DRVVBUS, 0,
+		"usb0_drvvbus", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(USB1_DRVVBUS, 0,
+		"usb1_drvvbus", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_RESETN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_CSN0, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_CKE, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_CK, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_CKN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_CASN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_RASN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_WEN, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_BA0, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_BA1, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_BA2, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A0, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A1, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A2, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A3, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A4, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A5, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A6, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A7, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A8, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A9, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A10, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A11, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A12, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A13, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A14, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_A15, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_ODT, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D0, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D1, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D2, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D3, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D4, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D5, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D6, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D7, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D8, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D9, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D10, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D11, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D12, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D13, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D14, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_D15, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_DQM0, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_DQM1, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_DQS0, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_DQSN0, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_DQS1, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_DQSN1, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_VREF, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(DDR_VTP, 0,
+		NULL, NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(AIN0, 0,
+		"ain0", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(AIN1, 0,
+		"ain1", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(AIN2, 0,
+		"ain2", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(AIN3, 0,
+		"ain3", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(VREFP, 0,
+		"vrefp", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	_AM33XX_MUXENTRY(VREFN, 0,
+		"vrefn", NULL, NULL, NULL,
+		NULL, NULL, NULL, NULL),
+	{ .reg_offset = OMAP_MUX_TERMINATOR },
+};
+
+int __init am33xx_mux_init(struct omap_board_mux *board_subset)
+{
+	return omap_mux_init("core", 0, AM33XX_CONTROL_PADCONF_MUX_PBASE,
+			AM33XX_CONTROL_PADCONF_MUX_SIZE, am33xx_muxmodes,
+			NULL, board_subset, NULL);
+}
+#else
+int __init am33xx_mux_init(struct omap_board_mux *board_subset)
+{
+	return 0;
+}
+#endif
diff --git a/arch/arm/mach-omap2/mux33xx.h b/arch/arm/mach-omap2/mux33xx.h
new file mode 100644
index 0000000..70a3012
--- /dev/null
+++ b/arch/arm/mach-omap2/mux33xx.h
@@ -0,0 +1,241 @@
+/*
+ * AM33XX pad control register macros.
+ *
+ * Copyright (C) 2011 Texas Instruments, Inc. - http://www.ti.com/
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation version 2.
+ *
+ * This program is distributed "as is" WITHOUT ANY WARRANTY of any
+ * kind, whether express or implied; without even the implied warranty
+ * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __ARCH_ARM_MACH_OMAP2_MUX335X_H
+#define __ARCH_ARM_MACH_OMAP2_MUX335X_H
+
+#define AM33XX_CONTROL_PADCONF_MUX_PBASE			0x44E10000LU
+
+/* If pin is not defined as input, pull would get disabled.
+ * If defined as input, flags supplied will determine pull on/off.
+ */
+#define AM33XX_MUX(mode0, mux_value)					\
+{									\
+	.reg_offset	= (AM33XX_CONTROL_PADCONF_##mode0##_OFFSET),	\
+	.value		= (((mux_value) & AM33XX_INPUT_EN) ? (mux_value)\
+				: ((mux_value) | AM33XX_PULL_DISA)),	\
+}
+
+/*
+ * AM33XX CONTROL_PADCONF* register offsets for pin-muxing
+ *
+ * Add AM33XX_CONTROL_PADCONF_MUX_PBASE to these values to get the
+ * absolute addresses. The macro names below are mode-0 names of
+ * corresponding pins.
+ */
+
+#define AM33XX_CONTROL_PADCONF_GPMC_AD0_OFFSET			0x0800
+#define AM33XX_CONTROL_PADCONF_GPMC_AD1_OFFSET			0x0804
+#define AM33XX_CONTROL_PADCONF_GPMC_AD2_OFFSET			0x0808
+#define AM33XX_CONTROL_PADCONF_GPMC_AD3_OFFSET			0x080C
+#define AM33XX_CONTROL_PADCONF_GPMC_AD4_OFFSET			0x0810
+#define AM33XX_CONTROL_PADCONF_GPMC_AD5_OFFSET			0x0814
+#define AM33XX_CONTROL_PADCONF_GPMC_AD6_OFFSET			0x0818
+#define AM33XX_CONTROL_PADCONF_GPMC_AD7_OFFSET			0x081C
+#define AM33XX_CONTROL_PADCONF_GPMC_AD8_OFFSET			0x0820
+#define AM33XX_CONTROL_PADCONF_GPMC_AD9_OFFSET			0x0824
+#define AM33XX_CONTROL_PADCONF_GPMC_AD10_OFFSET			0x0828
+#define AM33XX_CONTROL_PADCONF_GPMC_AD11_OFFSET			0x082C
+#define AM33XX_CONTROL_PADCONF_GPMC_AD12_OFFSET			0x0830
+#define AM33XX_CONTROL_PADCONF_GPMC_AD13_OFFSET			0x0834
+#define AM33XX_CONTROL_PADCONF_GPMC_AD14_OFFSET			0x0838
+#define AM33XX_CONTROL_PADCONF_GPMC_AD15_OFFSET			0x083C
+#define AM33XX_CONTROL_PADCONF_GPMC_A0_OFFSET			0x0840
+#define AM33XX_CONTROL_PADCONF_GPMC_A1_OFFSET			0x0844
+#define AM33XX_CONTROL_PADCONF_GPMC_A2_OFFSET			0x0848
+#define AM33XX_CONTROL_PADCONF_GPMC_A3_OFFSET			0x084C
+#define AM33XX_CONTROL_PADCONF_GPMC_A4_OFFSET			0x0850
+#define AM33XX_CONTROL_PADCONF_GPMC_A5_OFFSET			0x0854
+#define AM33XX_CONTROL_PADCONF_GPMC_A6_OFFSET			0x0858
+#define AM33XX_CONTROL_PADCONF_GPMC_A7_OFFSET			0x085C
+#define AM33XX_CONTROL_PADCONF_GPMC_A8_OFFSET			0x0860
+#define AM33XX_CONTROL_PADCONF_GPMC_A9_OFFSET			0x0864
+#define AM33XX_CONTROL_PADCONF_GPMC_A10_OFFSET			0x0868
+#define AM33XX_CONTROL_PADCONF_GPMC_A11_OFFSET			0x086C
+#define AM33XX_CONTROL_PADCONF_GPMC_WAIT0_OFFSET		0x0870
+#define AM33XX_CONTROL_PADCONF_GPMC_WPN_OFFSET			0x0874
+#define AM33XX_CONTROL_PADCONF_GPMC_BEN1_OFFSET			0x0878
+#define AM33XX_CONTROL_PADCONF_GPMC_CSN0_OFFSET			0x087C
+#define AM33XX_CONTROL_PADCONF_GPMC_CSN1_OFFSET			0x0880
+#define AM33XX_CONTROL_PADCONF_GPMC_CSN2_OFFSET			0x0884
+#define AM33XX_CONTROL_PADCONF_GPMC_CSN3_OFFSET			0x0888
+#define AM33XX_CONTROL_PADCONF_GPMC_CLK_OFFSET			0x088C
+#define AM33XX_CONTROL_PADCONF_GPMC_ADVN_ALE_OFFSET		0x0890
+#define AM33XX_CONTROL_PADCONF_GPMC_OEN_REN_OFFSET		0x0894
+#define AM33XX_CONTROL_PADCONF_GPMC_WEN_OFFSET			0x0898
+#define AM33XX_CONTROL_PADCONF_GPMC_BEN0_CLE_OFFSET		0x089C
+#define AM33XX_CONTROL_PADCONF_LCD_DATA0_OFFSET			0x08A0
+#define AM33XX_CONTROL_PADCONF_LCD_DATA1_OFFSET			0x08A4
+#define AM33XX_CONTROL_PADCONF_LCD_DATA2_OFFSET			0x08A8
+#define AM33XX_CONTROL_PADCONF_LCD_DATA3_OFFSET			0x08AC
+#define AM33XX_CONTROL_PADCONF_LCD_DATA4_OFFSET			0x08B0
+#define AM33XX_CONTROL_PADCONF_LCD_DATA5_OFFSET			0x08B4
+#define AM33XX_CONTROL_PADCONF_LCD_DATA6_OFFSET			0x08B8
+#define AM33XX_CONTROL_PADCONF_LCD_DATA7_OFFSET			0x08BC
+#define AM33XX_CONTROL_PADCONF_LCD_DATA8_OFFSET			0x08C0
+#define AM33XX_CONTROL_PADCONF_LCD_DATA9_OFFSET			0x08C4
+#define AM33XX_CONTROL_PADCONF_LCD_DATA10_OFFSET		0x08C8
+#define AM33XX_CONTROL_PADCONF_LCD_DATA11_OFFSET		0x08CC
+#define AM33XX_CONTROL_PADCONF_LCD_DATA12_OFFSET		0x08D0
+#define AM33XX_CONTROL_PADCONF_LCD_DATA13_OFFSET		0x08D4
+#define AM33XX_CONTROL_PADCONF_LCD_DATA14_OFFSET		0x08D8
+#define AM33XX_CONTROL_PADCONF_LCD_DATA15_OFFSET		0x08DC
+#define AM33XX_CONTROL_PADCONF_LCD_VSYNC_OFFSET			0x08E0
+#define AM33XX_CONTROL_PADCONF_LCD_HSYNC_OFFSET			0x08E4
+#define AM33XX_CONTROL_PADCONF_LCD_PCLK_OFFSET			0x08E8
+#define AM33XX_CONTROL_PADCONF_LCD_AC_BIAS_EN_OFFSET		0x08EC
+#define AM33XX_CONTROL_PADCONF_MMC0_DAT3_OFFSET			0x08F0
+#define AM33XX_CONTROL_PADCONF_MMC0_DAT2_OFFSET			0x08F4
+#define AM33XX_CONTROL_PADCONF_MMC0_DAT1_OFFSET			0x08F8
+#define AM33XX_CONTROL_PADCONF_MMC0_DAT0_OFFSET			0x08FC
+#define AM33XX_CONTROL_PADCONF_MMC0_CLK_OFFSET			0x0900
+#define AM33XX_CONTROL_PADCONF_MMC0_CMD_OFFSET			0x0904
+#define AM33XX_CONTROL_PADCONF_MII1_COL_OFFSET			0x0908
+#define AM33XX_CONTROL_PADCONF_MII1_CRS_OFFSET			0x090C
+#define AM33XX_CONTROL_PADCONF_MII1_RXERR_OFFSET		0x0910
+#define AM33XX_CONTROL_PADCONF_MII1_TXEN_OFFSET			0x0914
+#define AM33XX_CONTROL_PADCONF_MII1_RXDV_OFFSET			0x0918
+#define AM33XX_CONTROL_PADCONF_MII1_TXD3_OFFSET			0x091C
+#define AM33XX_CONTROL_PADCONF_MII1_TXD2_OFFSET			0x0920
+#define AM33XX_CONTROL_PADCONF_MII1_TXD1_OFFSET			0x0924
+#define AM33XX_CONTROL_PADCONF_MII1_TXD0_OFFSET			0x0928
+#define AM33XX_CONTROL_PADCONF_MII1_TXCLK_OFFSET		0x092C
+#define AM33XX_CONTROL_PADCONF_MII1_RXCLK_OFFSET		0x0930
+#define AM33XX_CONTROL_PADCONF_MII1_RXD3_OFFSET			0x0934
+#define AM33XX_CONTROL_PADCONF_MII1_RXD2_OFFSET			0x0938
+#define AM33XX_CONTROL_PADCONF_MII1_RXD1_OFFSET			0x093C
+#define AM33XX_CONTROL_PADCONF_MII1_RXD0_OFFSET			0x0940
+#define AM33XX_CONTROL_PADCONF_MII1_REFCLK_OFFSET		0x0944
+#define AM33XX_CONTROL_PADCONF_MDIO_DATA_OFFSET			0x0948
+#define AM33XX_CONTROL_PADCONF_MDIO_CLK_OFFSET			0x094C
+#define AM33XX_CONTROL_PADCONF_SPI0_SCLK_OFFSET			0x0950
+#define AM33XX_CONTROL_PADCONF_SPI0_D0_OFFSET			0x0954
+#define AM33XX_CONTROL_PADCONF_SPI0_D1_OFFSET			0x0958
+#define AM33XX_CONTROL_PADCONF_SPI0_CS0_OFFSET			0x095C
+#define AM33XX_CONTROL_PADCONF_SPI0_CS1_OFFSET			0x0960
+#define AM33XX_CONTROL_PADCONF_ECAP0_IN_PWM0_OUT_OFFSET		0x0964
+#define AM33XX_CONTROL_PADCONF_UART0_CTSN_OFFSET		0x0968
+#define AM33XX_CONTROL_PADCONF_UART0_RTSN_OFFSET		0x096C
+#define AM33XX_CONTROL_PADCONF_UART0_RXD_OFFSET			0x0970
+#define AM33XX_CONTROL_PADCONF_UART0_TXD_OFFSET			0x0974
+#define AM33XX_CONTROL_PADCONF_UART1_CTSN_OFFSET		0x0978
+#define AM33XX_CONTROL_PADCONF_UART1_RTSN_OFFSET		0x097C
+#define AM33XX_CONTROL_PADCONF_UART1_RXD_OFFSET			0x0980
+#define AM33XX_CONTROL_PADCONF_UART1_TXD_OFFSET			0x0984
+#define AM33XX_CONTROL_PADCONF_I2C0_SDA_OFFSET			0x0988
+#define AM33XX_CONTROL_PADCONF_I2C0_SCL_OFFSET			0x098C
+#define AM33XX_CONTROL_PADCONF_MCASP0_ACLKX_OFFSET		0x0990
+#define AM33XX_CONTROL_PADCONF_MCASP0_FSX_OFFSET		0x0994
+#define AM33XX_CONTROL_PADCONF_MCASP0_AXR0_OFFSET		0x0998
+#define AM33XX_CONTROL_PADCONF_MCASP0_AHCLKR_OFFSET		0x099C
+#define AM33XX_CONTROL_PADCONF_MCASP0_ACLKR_OFFSET		0x09A0
+#define AM33XX_CONTROL_PADCONF_MCASP0_FSR_OFFSET		0x09A4
+#define AM33XX_CONTROL_PADCONF_MCASP0_AXR1_OFFSET		0x09A8
+#define AM33XX_CONTROL_PADCONF_MCASP0_AHCLKX_OFFSET		0x09AC
+#define AM33XX_CONTROL_PADCONF_XDMA_EVENT_INTR0_OFFSET		0x09B0
+#define AM33XX_CONTROL_PADCONF_XDMA_EVENT_INTR1_OFFSET		0x09B4
+#define AM33XX_CONTROL_PADCONF_WARMRSTN_OFFSET			0x09B8
+#define AM33XX_CONTROL_PADCONF_PWRONRSTN_OFFSET			0x09BC
+#define AM33XX_CONTROL_PADCONF_NMIN_OFFSET			0x09C0
+#define AM33XX_CONTROL_PADCONF_XTALIN_OFFSET			0x09C4
+#define AM33XX_CONTROL_PADCONF_XTALOUT_OFFSET			0x09C8
+#define AM33XX_CONTROL_PADCONF_TMS_OFFSET			0x09D0
+#define AM33XX_CONTROL_PADCONF_TDI_OFFSET			0x09D4
+#define AM33XX_CONTROL_PADCONF_TDO_OFFSET			0x09D8
+#define AM33XX_CONTROL_PADCONF_TCK_OFFSET			0x09DC
+#define AM33XX_CONTROL_PADCONF_TRSTN_OFFSET			0x09E0
+#define AM33XX_CONTROL_PADCONF_EMU0_OFFSET			0x09E4
+#define AM33XX_CONTROL_PADCONF_EMU1_OFFSET			0x09E8
+#define AM33XX_CONTROL_PADCONF_RTC_XTALIN_OFFSET		0x09EC
+#define AM33XX_CONTROL_PADCONF_RTC_XTALOUT_OFFSET		0x09F0
+#define AM33XX_CONTROL_PADCONF_RTC_PWRONRSTN_OFFSET		0x09F8
+#define AM33XX_CONTROL_PADCONF_EXT_WAKEUP_OFFSET		0x0A00
+#define AM33XX_CONTROL_PADCONF_PMIC_POWER_EN_OFFSET		0x09F4
+#define AM33XX_CONTROL_PADCONF_RTC_KALDO_ENN_OFFSET		0x0A04
+#define AM33XX_CONTROL_PADCONF_USB0_DM_OFFSET			0x0A08
+#define AM33XX_CONTROL_PADCONF_USB0_DP_OFFSET		        0x0A0C
+#define AM33XX_CONTROL_PADCONF_USB0_CE_OFFSET		        0x0A10
+#define AM33XX_CONTROL_PADCONF_USB0_ID_OFFSET		        0x0A14
+#define AM33XX_CONTROL_PADCONF_USB0_VBUS_OFFSET			0x0A18
+#define AM33XX_CONTROL_PADCONF_USB0_DRVVBUS_OFFSET		0x0A1C
+#define AM33XX_CONTROL_PADCONF_USB1_DM_OFFSET			0x0A20
+#define AM33XX_CONTROL_PADCONF_USB1_DP_OFFSET		        0x0A24
+#define AM33XX_CONTROL_PADCONF_USB1_CE_OFFSET		        0x0A28
+#define AM33XX_CONTROL_PADCONF_USB1_ID_OFFSET		        0x0A2C
+#define AM33XX_CONTROL_PADCONF_USB1_VBUS_OFFSET			0x0A30
+#define AM33XX_CONTROL_PADCONF_USB1_DRVVBUS_OFFSET		0x0A34
+#define AM33XX_CONTROL_PADCONF_DDR_RESETN_OFFSET		0x0A38
+#define AM33XX_CONTROL_PADCONF_DDR_CSN0_OFFSET			0x0A3C
+#define AM33XX_CONTROL_PADCONF_DDR_CKE_OFFSET			0x0A40
+#define AM33XX_CONTROL_PADCONF_DDR_CK_OFFSET			0x0A44
+#define AM33XX_CONTROL_PADCONF_DDR_CKN_OFFSET			0x0A48
+#define AM33XX_CONTROL_PADCONF_DDR_CASN_OFFSET			0x0A4C
+#define AM33XX_CONTROL_PADCONF_DDR_RASN_OFFSET			0x0A50
+#define AM33XX_CONTROL_PADCONF_DDR_WEN_OFFSET			0x0A54
+#define AM33XX_CONTROL_PADCONF_DDR_BA0_OFFSET			0x0A58
+#define AM33XX_CONTROL_PADCONF_DDR_BA1_OFFSET			0x0A5C
+#define AM33XX_CONTROL_PADCONF_DDR_BA2_OFFSET			0x0A60
+#define AM33XX_CONTROL_PADCONF_DDR_A0_OFFSET			0x0A64
+#define AM33XX_CONTROL_PADCONF_DDR_A1_OFFSET			0x0A68
+#define AM33XX_CONTROL_PADCONF_DDR_A2_OFFSET			0x0A6C
+#define AM33XX_CONTROL_PADCONF_DDR_A3_OFFSET			0x0A70
+#define AM33XX_CONTROL_PADCONF_DDR_A4_OFFSET			0x0A74
+#define AM33XX_CONTROL_PADCONF_DDR_A5_OFFSET			0x0A78
+#define AM33XX_CONTROL_PADCONF_DDR_A6_OFFSET			0x0A7C
+#define AM33XX_CONTROL_PADCONF_DDR_A7_OFFSET			0x0A80
+#define AM33XX_CONTROL_PADCONF_DDR_A8_OFFSET			0x0A84
+#define AM33XX_CONTROL_PADCONF_DDR_A9_OFFSET			0x0A88
+#define AM33XX_CONTROL_PADCONF_DDR_A10_OFFSET			0x0A8C
+#define AM33XX_CONTROL_PADCONF_DDR_A11_OFFSET			0x0A90
+#define AM33XX_CONTROL_PADCONF_DDR_A12_OFFSET			0x0A94
+#define AM33XX_CONTROL_PADCONF_DDR_A13_OFFSET			0x0A98
+#define AM33XX_CONTROL_PADCONF_DDR_A14_OFFSET			0x0A9C
+#define AM33XX_CONTROL_PADCONF_DDR_A15_OFFSET			0x0AA0
+#define AM33XX_CONTROL_PADCONF_DDR_ODT_OFFSET			0x0AA4
+#define AM33XX_CONTROL_PADCONF_DDR_D0_OFFSET			0x0AA8
+#define AM33XX_CONTROL_PADCONF_DDR_D1_OFFSET			0x0AAC
+#define AM33XX_CONTROL_PADCONF_DDR_D2_OFFSET			0x0AB0
+#define AM33XX_CONTROL_PADCONF_DDR_D3_OFFSET			0x0AB4
+#define AM33XX_CONTROL_PADCONF_DDR_D4_OFFSET			0x0AB8
+#define AM33XX_CONTROL_PADCONF_DDR_D5_OFFSET			0x0ABC
+#define AM33XX_CONTROL_PADCONF_DDR_D6_OFFSET			0x0AC0
+#define AM33XX_CONTROL_PADCONF_DDR_D7_OFFSET			0x0AC4
+#define AM33XX_CONTROL_PADCONF_DDR_D8_OFFSET			0x0AC8
+#define AM33XX_CONTROL_PADCONF_DDR_D9_OFFSET			0x0ACC
+#define AM33XX_CONTROL_PADCONF_DDR_D10_OFFSET			0x0AD0
+#define AM33XX_CONTROL_PADCONF_DDR_D11_OFFSET			0x0AD4
+#define AM33XX_CONTROL_PADCONF_DDR_D12_OFFSET			0x0AD8
+#define AM33XX_CONTROL_PADCONF_DDR_D13_OFFSET			0x0ADC
+#define AM33XX_CONTROL_PADCONF_DDR_D14_OFFSET			0x0AE0
+#define AM33XX_CONTROL_PADCONF_DDR_D15_OFFSET			0x0AE4
+#define AM33XX_CONTROL_PADCONF_DDR_DQM0_OFFSET			0x0AE8
+#define AM33XX_CONTROL_PADCONF_DDR_DQM1_OFFSET			0x0AEC
+#define AM33XX_CONTROL_PADCONF_DDR_DQS0_OFFSET			0x0AF0
+#define AM33XX_CONTROL_PADCONF_DDR_DQSN0_OFFSET			0x0AF4
+#define AM33XX_CONTROL_PADCONF_DDR_DQS1_OFFSET			0x0AF8
+#define AM33XX_CONTROL_PADCONF_DDR_DQSN1_OFFSET			0x0AFC
+#define AM33XX_CONTROL_PADCONF_DDR_VREF_OFFSET			0x0B00
+#define AM33XX_CONTROL_PADCONF_DDR_VTP_OFFSET			0x0B04
+#define AM33XX_CONTROL_PADCONF_AIN3_OFFSET			0x0B20
+#define AM33XX_CONTROL_PADCONF_AIN2_OFFSET			0x0B24
+#define AM33XX_CONTROL_PADCONF_AIN1_OFFSET			0x0B28
+#define AM33XX_CONTROL_PADCONF_AIN0_OFFSET			0x0B2C
+#define AM33XX_CONTROL_PADCONF_VREFP_OFFSET			0x0B30
+#define AM33XX_CONTROL_PADCONF_VREFN_OFFSET			0x0B34
+
+#define AM33XX_CONTROL_PADCONF_MUX_SIZE				\
+		(AM33XX_CONTROL_PADCONF_VREFN_OFFSET + 0x4)
+
+#endif
-- 
1.7.5.4

