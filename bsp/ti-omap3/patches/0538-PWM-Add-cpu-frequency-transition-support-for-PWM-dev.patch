From 2876c91b485fb3f60e343bc2f852a7fddb630939 Mon Sep 17 00:00:00 2001
From: "Philip, Avinash" <avinashphilip@ti.com>
Date: Mon, 16 Jan 2012 11:41:40 +0530
Subject: [PATCH 538/609] PWM: Add cpu frequency transition support for PWM
 devices

Original commit: 60131551dcd5e1b0247bbda964044e789a2df8b8

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

Implement a generic frequency transition callback for PWM
devices. Generic PWM framework notifies all the PWM devices
currently being used about the frequency transition.

Signed-off-by: Natarajan Sugumar <sugumar@ti.com>
Signed-off-by: Philip, Avinash <avinashphilip@ti.com>
---
 drivers/pwm/pwm.c       |   27 +++++++++++++++++++++++++++
 include/linux/pwm/pwm.h |    2 ++
 2 files changed, 29 insertions(+), 0 deletions(-)

diff --git a/drivers/pwm/pwm.c b/drivers/pwm/pwm.c
index 43ce81a..f7dfd3d 100644
--- a/drivers/pwm/pwm.c
+++ b/drivers/pwm/pwm.c
@@ -30,6 +30,7 @@
 #include <linux/list.h>
 #include <linux/sched.h>
 #include <linux/platform_device.h>
+#include <linux/cpufreq.h>
 #include <linux/pwm/pwm.h>
 
 static const char *REQUEST_SYSFS = "sysfs";
@@ -652,6 +653,27 @@ static struct class pwm_class = {
 	.class_attrs = pwm_class_attrs,
 };
 
+static int pwm_freq_transition_notifier_cb(struct notifier_block *nb,
+		unsigned long val, void *data)
+{
+	struct pwm_device *p;
+
+	p = container_of(nb, struct pwm_device, freq_transition);
+
+	if (val == CPUFREQ_POSTCHANGE && pwm_is_requested(p))
+		p->ops->freq_transition_notifier_cb(p);
+
+	return 0;
+}
+
+static inline int pwm_cpufreq_notifier_register(struct pwm_device *p)
+{
+	p->freq_transition.notifier_call = pwm_freq_transition_notifier_cb;
+
+	return cpufreq_register_notifier(&p->freq_transition,
+		       CPUFREQ_TRANSITION_NOTIFIER);
+}
+
 int pwm_register_byname(struct pwm_device *p, struct device *parent,
 			const char *name)
 {
@@ -682,6 +704,11 @@ int pwm_register_byname(struct pwm_device *p, struct device *parent,
 	dev_set_drvdata(p->dev, p);
 	p->flags = BIT(FLAG_REGISTERED);
 
+	ret = pwm_cpufreq_notifier_register(p);
+
+	if (ret < 0)
+		printk(KERN_ERR "Failed to add cpufreq notifier\n");
+
 	spin_lock_init(&p->pwm_lock);
 	goto done;
 
diff --git a/include/linux/pwm/pwm.h b/include/linux/pwm/pwm.h
index fcfd519..f912c25 100644
--- a/include/linux/pwm/pwm.h
+++ b/include/linux/pwm/pwm.h
@@ -59,6 +59,7 @@ struct pwm_device_ops {
 					 struct pwm_device *from_p);
 	int	(*set_callback)		(struct pwm_device *p,
 					 pwm_callback_t callback);
+	int	(*freq_transition_notifier_cb) (struct pwm_device *p);
 };
 
 struct pwm_config {
@@ -100,6 +101,7 @@ struct pwm_device {
 	unsigned long duty_ticks;
 	unsigned long period_ns;
 	unsigned long duty_ns;
+	struct notifier_block freq_transition;
 	spinlock_t pwm_lock;
 };
 
-- 
1.7.5.4

