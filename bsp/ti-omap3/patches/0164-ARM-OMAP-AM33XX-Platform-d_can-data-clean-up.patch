From 4afec3dd0f84fda5a6c103ebfd26d5998ebb5729 Mon Sep 17 00:00:00 2001
From: AnilKumar Ch <anilkumar@ti.com>
Date: Tue, 6 Mar 2012 13:06:59 +0530
Subject: [PATCH 164/609] ARM: OMAP: AM33XX: Platform d_can data clean-up

Original commit: 47c5e5cb408eeca319c7a5c0e6f8dda8bc4699c1

  From git://arago-project.org/git/projects/linux-am33x.git
  And ti-sdk-am335x-evm-05.05.00.00-Linux-x86-Install image

This patch cleans up the d_can driver platform specific initilization
data after adding the am33xx hwmod data. Modifies the d_can clock table
entries, modified data includes dev_id and con_id

Signed-off-by: AnilKumar Ch <anilkumar@ti.com>
---
 arch/arm/mach-omap2/clock33xx_data.c |    8 +-
 arch/arm/mach-omap2/devices.c        |  140 +++++++++-------------------------
 2 files changed, 39 insertions(+), 109 deletions(-)

diff --git a/arch/arm/mach-omap2/clock33xx_data.c b/arch/arm/mach-omap2/clock33xx_data.c
index 130f0ef..1913402 100644
--- a/arch/arm/mach-omap2/clock33xx_data.c
+++ b/arch/arm/mach-omap2/clock33xx_data.c
@@ -2031,10 +2031,10 @@ static struct omap_clk am33xx_clks[] = {
 	CLK(NULL,	"clkdiv32k_ick",	&clkdiv32k_ick,	CK_AM33XX),
 	CLK(NULL,	"control_fck",		&control_fck,	CK_AM33XX),
 	CLK("cpsw.0",	NULL,			&cpgmac0_ick,	CK_AM33XX),
-	CLK(NULL,	"dcan0_fck",		&dcan0_fck,	CK_AM33XX),
-	CLK(NULL,	"dcan1_fck",		&dcan1_fck,	CK_AM33XX),
-	CLK(NULL,	"dcan0_ick",		&dcan0_ick,	CK_AM33XX),
-	CLK(NULL,	"dcan1_ick",		&dcan1_ick,	CK_AM33XX),
+	CLK("d_can.0",	"fck",			&dcan0_fck,	CK_AM33XX),
+	CLK("d_can.1",	"fck",			&dcan1_fck,	CK_AM33XX),
+	CLK("d_can.0",	"ick",			&dcan0_ick,	CK_AM33XX),
+	CLK("d_can.1",	"ick",			&dcan1_ick,	CK_AM33XX),
 	CLK(NULL,	"debugss_ick",		&debugss_ick,	CK_AM33XX),
 	CLK(NULL,	"elm_fck",		&elm_fck,	CK_AM33XX),
 	CLK(NULL,	"epwmss0_fck",		&epwmss0_fck,	CK_AM33XX),
diff --git a/arch/arm/mach-omap2/devices.c b/arch/arm/mach-omap2/devices.c
index ad19232..074d781 100644
--- a/arch/arm/mach-omap2/devices.c
+++ b/arch/arm/mach-omap2/devices.c
@@ -1584,124 +1584,54 @@ void am33xx_cpsw_init(void)
 			NULL, &am33xx_cpsw_device.dev);
 }
 
-#define AM33XX_D_CAN_RAM_BASE			0x1000
-#define AM33XX_D_CAN_NUM_MSG_OBJS		64
-#define AM33XX_CTL_DCAN_RAMINIT_OFFSET		0x644
-#define AM33XX_D_CAN_RAMINIT_START(n)		(0x1 << n)
+#define AM33XX_DCAN_NUM_MSG_OBJS		64
+#define AM33XX_DCAN_RAMINIT_OFFSET		0x644
+#define AM33XX_DCAN_RAMINIT_START(n)		(0x1 << n)
 
-static void d_can_hw_raminit(unsigned int instance)
+static void d_can_hw_raminit(unsigned int instance, unsigned int enable)
 {
 	u32 val;
 
 	/* Read the value */
-	val = __raw_readl(AM33XX_CTRL_REGADDR(AM33XX_CTL_DCAN_RAMINIT_OFFSET));
-
-	/* Modify by setting "0" */
-	val &= ~AM33XX_D_CAN_RAMINIT_START(instance);
-	__raw_writel(val, AM33XX_CTRL_REGADDR(AM33XX_CTL_DCAN_RAMINIT_OFFSET));
-
-	/* Reset to one */
-	val |= AM33XX_D_CAN_RAMINIT_START(instance);
-	__raw_writel(val, AM33XX_CTRL_REGADDR(AM33XX_CTL_DCAN_RAMINIT_OFFSET));
-
-	/* Give some time delay for transition from 0 -> 1 */
-	udelay(1);
+	val = readl(AM33XX_CTRL_REGADDR(AM33XX_DCAN_RAMINIT_OFFSET));
+	if (enable) {
+		/* Set to "1" */
+		val &= ~AM33XX_DCAN_RAMINIT_START(instance);
+		val |= AM33XX_DCAN_RAMINIT_START(instance);
+		writel(val, AM33XX_CTRL_REGADDR(AM33XX_DCAN_RAMINIT_OFFSET));
+	} else {
+		/* Set to "0" */
+		val &= ~AM33XX_DCAN_RAMINIT_START(instance);
+		writel(val, AM33XX_CTRL_REGADDR(AM33XX_DCAN_RAMINIT_OFFSET));
+	}
 }
 
-static struct d_can_platform_data am33xx_evm_d_can0_pdata = {
-	.d_can_offset		= 0,
-	.d_can_ram_offset	= AM33XX_D_CAN_RAM_BASE,
-	.num_of_msg_objs	= AM33XX_D_CAN_NUM_MSG_OBJS,
-	.dma_support		= false,
-	.parity_check		= false,
-	.fck_name		= "dcan0_fck",
-	.ick_name		= "dcan0_ick",
-};
-
-static struct resource am33xx_d_can0_resources[] = {
-	{
-		.start	= AM33XX_D_CAN0_BASE,
-		.end	= AM33XX_D_CAN0_BASE + 0x3FFF,
-		.flags	= IORESOURCE_MEM,
-	},
-	{
-		.name	= "int0",
-		.start	= AM33XX_IRQ_DCAN0_0,
-		.end	= AM33XX_IRQ_DCAN0_0,
-		.flags	= IORESOURCE_IRQ,
-	},
-	{
-		.name	= "int1",
-		.start	= AM33XX_IRQ_DCAN0_1,
-		.end	= AM33XX_IRQ_DCAN0_1,
-		.flags	= IORESOURCE_IRQ,
-	},
-};
-
-static struct platform_device am33xx_d_can0_device = {
-	.dev		= {
-		.platform_data = &am33xx_evm_d_can0_pdata,
-	},
-	.name		= "d_can",
-	.id		= -1,
-	.num_resources	= ARRAY_SIZE(am33xx_d_can0_resources),
-	.resource	= am33xx_d_can0_resources,
-};
-
-static struct resource am33xx_d_can1_resources[] = {
-	{
-		.start	= AM33XX_D_CAN1_BASE,
-		.end	= AM33XX_D_CAN1_BASE + 0x3FFF,
-		.flags	= IORESOURCE_MEM,
-	},
-	{
-		.name	= "int0",
-		.start	= AM33XX_IRQ_DCAN1_0,
-		.end	= AM33XX_IRQ_DCAN1_0,
-		.flags	= IORESOURCE_IRQ,
-	},
-	{
-		.name	= "int1",
-		.start	= AM33XX_IRQ_DCAN1_1,
-		.end	= AM33XX_IRQ_DCAN1_1,
-		.flags	= IORESOURCE_IRQ,
-	},
-};
-
-static struct d_can_platform_data am33xx_evm_d_can1_pdata = {
-	.d_can_offset		= 0,
-	.d_can_ram_offset	= AM33XX_D_CAN_RAM_BASE,
-	.num_of_msg_objs	= AM33XX_D_CAN_NUM_MSG_OBJS,
+/* dcan dev_attr */
+static struct d_can_platform_data am33xx_dcan_info = {
+	.num_of_msg_objs	= AM33XX_DCAN_NUM_MSG_OBJS,
+	.ram_init		= d_can_hw_raminit,
 	.dma_support		= false,
-	.parity_check		= false,
-	.fck_name		= "dcan1_fck",
-	.ick_name		= "dcan1_ick",
-};
-
-static struct platform_device am33xx_d_can1_device = {
-	.dev		= {
-		.platform_data = &am33xx_evm_d_can1_pdata,
-	},
-	.name		= "d_can",
-	.id		= -1,
-	.num_resources	= ARRAY_SIZE(am33xx_d_can1_resources),
-	.resource	= am33xx_d_can1_resources,
 };
 
 void am33xx_d_can_init(unsigned int instance)
 {
-	switch (instance) {
-	case 0:
-		d_can_hw_raminit(instance);
-		platform_device_register(&am33xx_d_can0_device);
-		break;
-	case 1:
-		d_can_hw_raminit(instance);
-		platform_device_register(&am33xx_d_can1_device);
-		break;
-	default:
-		break;
+	struct omap_hwmod *oh;
+	struct platform_device *pdev;
+	char oh_name[L3_MODULES_MAX_LEN];
+
+	/* Copy string name to oh_name buffer */
+	snprintf(oh_name, L3_MODULES_MAX_LEN, "d_can%d", instance);
+
+	oh = omap_hwmod_lookup(oh_name);
+	if (!oh) {
+		pr_err("could not find %s hwmod data\n", oh_name);
+		return;
 	}
+
+	pdev = omap_device_build("d_can", instance, oh, &am33xx_dcan_info,
+			sizeof(am33xx_dcan_info), NULL, 0, 0);
+	if (IS_ERR(pdev))
+		pr_err("could not build omap_device for %s\n", oh_name);
 }
 
 #if defined(CONFIG_OMAP_WATCHDOG) || defined(CONFIG_OMAP_WATCHDOG_MODULE)
-- 
1.7.5.4

