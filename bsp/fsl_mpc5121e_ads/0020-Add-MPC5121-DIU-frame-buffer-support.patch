From 13a200c1701c719b343f770df524ad8f589a5a4f Mon Sep 17 00:00:00 2001
From: Andrew Liu <shengping.liu@windriver.com>
Date: Tue, 4 Nov 2008 14:46:07 +0800
Subject: [PATCH] Add MPC5121 DIU frame buffer support

Add MPC5121 DIU separate platform functions,
some of which are for compatible purpose only,
then hook those functions to diu_ops data structure
which is defined in:
  arch/powerpc/sysdev/fsl_soc.h

Add DIU gamma ioctl.

Signed-off-by: Andrew Liu <shengping.liu@windriver.com>
---
 arch/powerpc/platforms/512x/Makefile      |    3 +-
 arch/powerpc/platforms/512x/mpc5121_ads.c |   12 ++
 arch/powerpc/platforms/512x/mpc5121_diu.c |  162 +++++++++++++++++++++++++++++
 arch/powerpc/platforms/512x/mpc512x.h     |    9 ++
 drivers/video/fsl-diu-fb.c                |   26 +++++
 drivers/video/fsl-diu-fb.h                |    4 +
 6 files changed, 215 insertions(+), 1 deletions(-)
 create mode 100644 arch/powerpc/platforms/512x/mpc5121_diu.c

diff --git a/arch/powerpc/platforms/512x/Makefile b/arch/powerpc/platforms/512x/Makefile
index 4d55ca6..f481716 100644
--- a/arch/powerpc/platforms/512x/Makefile
+++ b/arch/powerpc/platforms/512x/Makefile
@@ -1,7 +1,8 @@
 #
 # Makefile for the Freescale PowerPC 512x linux kernel.
 #
-obj-y				+= clock.o mpc512x_shared.o mpc5121_pscgpio.o
+obj-y				+= clock.o mpc512x_shared.o mpc5121_pscgpio.o \
+				   mpc5121_diu.o
 obj-$(CONFIG_MPC5121_ADS)	+= mpc5121_ads.o mpc5121_ads_cpld.o
 obj-$(CONFIG_MPC5121_GENERIC)	+= mpc5121_generic.o
 obj-$(CONFIG_HWTIMER_HOOKS)	+= mpc512x_hwtimer.o
diff --git a/arch/powerpc/platforms/512x/mpc5121_ads.c b/arch/powerpc/platforms/512x/mpc5121_ads.c
index 5484f7b..05d0564 100644
--- a/arch/powerpc/platforms/512x/mpc5121_ads.c
+++ b/arch/powerpc/platforms/512x/mpc5121_ads.c
@@ -21,6 +21,7 @@
 #include <asm/ipic.h>
 #include <asm/prom.h>
 #include <asm/time.h>
+#include <sysdev/fsl_soc.h>
 
 #include <sysdev/fsl_pci.h>
 
@@ -33,6 +34,17 @@ static void __init mpc5121_ads_setup_arch(void)
 	void __iomem *i2cctl;
 
 	printk(KERN_INFO "MPC5121 ADS board from Freescale Semiconductor\n");
+
+#if defined(CONFIG_FB_FSL_DIU) || defined(CONFIG_FB_FSL_DIU_MODULE)
+	preallocate_diu_videomemory();
+	diu_ops.get_pixel_format	= mpc5121ads_get_pixel_format;
+	diu_ops.set_gamma_table		= mpc5121ads_set_gamma_table;
+	diu_ops.set_monitor_port	= mpc5121ads_set_monitor_port;
+	diu_ops.set_pixel_clock		= mpc5121ads_set_pixel_clock;
+	diu_ops.show_monitor_port	= mpc5121ads_show_monitor_port;
+	diu_ops.set_sysfs_monitor_port	= mpc5121ads_set_sysfs_monitor_port;
+#endif
+
 	/*
 	 * cpld regs are needed early
 	 */
diff --git a/arch/powerpc/platforms/512x/mpc5121_diu.c b/arch/powerpc/platforms/512x/mpc5121_diu.c
new file mode 100644
index 0000000..c9022c2
--- /dev/null
+++ b/arch/powerpc/platforms/512x/mpc5121_diu.c
@@ -0,0 +1,162 @@
+/* Split mpc5121_ads DIU portion into mpc5121_diu.c from
+ * arch/powerpc/platforms/512x/mpc5121_ads.c
+ * shengping.liu@windriver.com (Andrew Liu) - Fri 31 Oct 2008
+ *
+ * Copyright (C) 2007, 2008 Freescale Semiconductor, Inc. All rights reserved.
+ *
+ * Author: John Rigby, <jrigby@freescale.com>, Thur Mar 29 2007
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ */
+
+#include <linux/kernel.h>
+#include <linux/io.h>
+#include <linux/irq.h>
+#include <asm/of_platform.h>
+
+#include <asm/machdep.h>
+#include <asm/ipic.h>
+#include <asm/prom.h>
+#include <asm/time.h>
+
+#include <asm/mpc512x.h>
+#include <sysdev/fsl_soc.h>
+
+#include <linux/bootmem.h>
+#include <asm/rheap.h>
+
+#ifdef DEBUG
+#define DPRINTK(fmt, args...) printk(KERN_INFO "%s: " fmt, __func__, ## args)
+#else
+#define DPRINTK(fmt, args...)
+#endif
+
+#if defined(CONFIG_FB_FSL_DIU) || defined(CONFIG_FB_FSL_DIU_MODULE)
+static u32 get_busfreq(void)
+{
+	struct device_node *node;
+
+	u32 fs_busfreq = 0;
+	node = of_find_node_by_type(NULL, "cpu");
+	if (node) {
+		unsigned int size;
+		const unsigned int *prop =
+			of_get_property(node, "bus-frequency", &size);
+		if (prop)
+			fs_busfreq = *prop;
+		of_node_put(node);
+	};
+	return fs_busfreq;
+}
+
+unsigned int
+mpc5121ads_get_pixel_format(unsigned int bits_per_pixel, int monitor_port)
+{
+	unsigned int pix_fmt;
+
+	if (bits_per_pixel == 32)
+		pix_fmt = 0x88883316;
+	else if (bits_per_pixel == 24)
+		pix_fmt = 0x88082219;
+	else if (bits_per_pixel == 16)
+		pix_fmt = 0x65053118;
+	else
+		pix_fmt = 0x88883316;
+
+	return pix_fmt;
+}
+EXPORT_SYMBOL(mpc5121ads_get_pixel_format);
+
+void mpc5121ads_set_gamma_table(int monitor_port, char *gamma_table_base)
+{
+}
+EXPORT_SYMBOL(mpc5121ads_set_gamma_table);
+
+void mpc5121ads_set_monitor_port(int monitor_port)
+{
+}
+EXPORT_SYMBOL(mpc5121ads_set_monitor_port);
+
+void mpc5121ads_set_pixel_clock(unsigned int pixclock)
+{
+	u32 *clkdvdr, temp;
+	/* variables for pixel clock calcs */
+	unsigned long  bestval, bestfreq, speed_ccb, minpixclock,\
+			 maxpixclock, pixval;
+	long err;
+	int i;
+
+	clkdvdr = (u32 *)ioremap(get_immrbase() + 0xf0c, sizeof(u32));
+
+	/* Pixel Clock configuration */
+	DPRINTK("DIU: Bus Frequency = %d\n", get_busfreq());
+	speed_ccb = get_busfreq() * 4;
+
+	/* Calculate the pixel clock with the smallest error */
+	/* calculate the following in steps to avoid overflow */
+	DPRINTK("DIU pixclock in ps - %d\n", pixclock);
+	temp = 1;
+	temp *= 1000000000;
+	temp /= pixclock;
+	temp *= 1000;
+	pixclock = temp;
+	DPRINTK("DIU pixclock freq - %lu\n", pixclock);
+
+	temp *= 5;
+	temp /= 100;  /* pixclock * 0.05 */
+	DPRINTK("deviation = %d\n", temp);
+	minpixclock = pixclock - temp;
+	maxpixclock = pixclock + temp;
+	DPRINTK("DIU minpixclock - %lu\n", minpixclock);
+	DPRINTK("DIU maxpixclock - %lu\n", maxpixclock);
+	pixval = speed_ccb/pixclock;
+	DPRINTK("DIU pixval = %lu\n", pixval);
+
+	err = 100000000;
+	bestval = pixval;
+	DPRINTK("DIU bestval = %lu\n", bestval);
+
+	bestfreq = 0;
+	for (i = -1; i <= 1; i++) {
+		temp = speed_ccb / (pixval + i);
+		DPRINTK("DIU test pixval i= %d, pixval=%lu, temp freq = %u\n",\
+			i, pixval, temp);
+		if ((temp < minpixclock) || (temp > maxpixclock))
+			DPRINTK("DIU exceeds monitor range (%lu to %lu)\n",
+				minpixclock, maxpixclock);
+		else if (abs(temp - pixclock) < err) {
+			DPRINTK("Entered the else if block %d\n", i);
+			err = abs(temp - pixclock);
+			bestval = pixval + i;
+			bestfreq = temp;
+		}
+	}
+
+	DPRINTK("DIU chose = %lx\n", bestval);
+	DPRINTK("DIU error = %ld\n NomPixClk ", err);
+	DPRINTK("DIU: Best Freq = %lx\n", bestfreq);
+	/* Modify PXCLK in GUTS CLKDVDR */
+	DPRINTK("DIU: Current value of CLKDVDR = 0x%08x\n", (*clkdvdr));
+	temp = (*clkdvdr) & 0xffffff00;
+	*clkdvdr = temp | (bestval & 0xFF);
+	DPRINTK("DIU: Modified value of CLKDVDR = 0x%08x\n", (*clkdvdr));
+}
+EXPORT_SYMBOL(mpc5121ads_set_pixel_clock);
+
+ssize_t mpc5121ads_show_monitor_port(int monitor_port, char *buf)
+{
+	return snprintf(buf, PAGE_SIZE, "0 - 5121ads DVI & LCD\n");
+}
+EXPORT_SYMBOL(mpc5121ads_show_monitor_port);
+
+int mpc5121ads_set_sysfs_monitor_port(int val)
+{
+	return 0;
+}
+EXPORT_SYMBOL(mpc5121ads_set_sysfs_monitor_port);
+
+#endif
diff --git a/arch/powerpc/platforms/512x/mpc512x.h b/arch/powerpc/platforms/512x/mpc512x.h
index b0f1c20..17fee24 100644
--- a/arch/powerpc/platforms/512x/mpc512x.h
+++ b/arch/powerpc/platforms/512x/mpc512x.h
@@ -22,4 +22,13 @@ extern void __init mpc5121_psc_lowlevel_clock_init(void);
 extern void mpc5121ads_psc_disable_unused_serial(void);
 extern int mpc5121ads_get_pendown_state(void);
 
+#if defined(CONFIG_FB_FSL_DIU) || defined(CONFIG_FB_FSL_DIU_MODULE)
+extern unsigned int mpc5121ads_get_pixel_format(unsigned int, int);
+extern void mpc5121ads_set_gamma_table(int, char *);
+extern void mpc5121ads_set_monitor_port(int monitor_port);
+extern void mpc5121ads_set_pixel_clock(unsigned int pixclock);
+extern ssize_t mpc5121ads_show_monitor_port(int monitor_port, char *buf);
+extern int mpc5121ads_set_sysfs_monitor_port(int val);
+#endif
+
 #endif				/* __MPC512X_H__ */
diff --git a/drivers/video/fsl-diu-fb.c b/drivers/video/fsl-diu-fb.c
index fb51197..eaedcd2 100644
--- a/drivers/video/fsl-diu-fb.c
+++ b/drivers/video/fsl-diu-fb.c
@@ -987,6 +987,7 @@ static int fsl_diu_ioctl(struct fb_info *info, unsigned int cmd,
 	struct aoi_display_offset aoi_d;
 	__u32 pix_fmt;
 	void __user *buf = (void __user *)arg;
+	struct diu *hw = dr.diu_reg;
 
 	if (!arg)
 		return -EINVAL;
@@ -1080,6 +1081,26 @@ static int fsl_diu_ioctl(struct fb_info *info, unsigned int cmd,
 	case FBIOGET_DISPINFO:
 		pr_debug("FBIOGET_DISPINFO:0x%08x\n", FBIOGET_DISPINFO);
 		break;
+	case MFB_SET_GAMMA:
+		if (!arg)
+			return -EINVAL;
+		/* set the gamma table */
+		pr_debug("MFB_SET_GAMMA s\n");
+		if (copy_from_user
+		    ((void *)pool.gamma.vaddr, (void *)arg, 3*256))
+			return -EFAULT;
+		out_be32(&(hw->gamma), pool.gamma.paddr);
+		break;
+	case MFB_GET_GAMMA:
+		 if (!arg)
+			return -EINVAL;
+		/* get the gamma table */
+		pr_debug("MFB_GET_GAMMA \n");
+		if (copy_to_user
+		    ((void *)arg, (void *)pool.gamma.vaddr, 3*256))
+			return -EFAULT;
+		out_be32(&(hw->gamma), pool.gamma.paddr);
+		break;
 
 	default:
 		printk(KERN_ERR "Unknown ioctl command (0x%08X)\n", cmd);
@@ -1630,6 +1651,11 @@ static struct of_device_id fsl_diu_match[] = {
 	{
 		.compatible = "fsl,diu",
 	},
+
+	{
+		.compatible = "fsl,mpc5121-diu",
+	},
+
 	{}
 };
 MODULE_DEVICE_TABLE(of, fsl_diu_match);
diff --git a/drivers/video/fsl-diu-fb.h b/drivers/video/fsl-diu-fb.h
index fc295d7..5b10ec1 100644
--- a/drivers/video/fsl-diu-fb.h
+++ b/drivers/video/fsl-diu-fb.h
@@ -67,6 +67,10 @@ struct aoi_display_offset {
 #define FBIOGET_GWINFO		0x46E0
 #define FBIOPUT_GWINFO		0x46E1
 
+#define MFB_SET_GAMMA		0x80014d01
+#define MFB_GET_GAMMA		0x40014d01
+
+
 #ifdef __KERNEL__
 #include <linux/spinlock.h>
 
-- 
1.6.0.90.g436ed

