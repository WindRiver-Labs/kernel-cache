From 1c1e8a475d1ec62cfc6865f22edf23157fdcdbdb Mon Sep 17 00:00:00 2001
From: Andrew Liu <shengping.liu@windriver.com>
Date: Wed, 8 Jul 2009 10:20:17 +0800
Subject: [PATCH 24/25] MPC5121: Fixed AC97 PM bug

Original patch taken from Freescale BSP Global
Package Pool:
  http://www.bitshrine.org/gpp/

  Patches:
   linux-2.6.24.6-mpc5121-138-Fixed-AC97-PM-1.patch
   linux-2.6.24.6-mpc5121-142-Fixed-AC97-PM2.patch

Signed-off-by: Chen Hongjun <Hong-jun.chen@freecale.com>
Integrated-by: Andrew Liu <shengping.liu@windriver.com>
---
 arch/powerpc/include/asm/mpc512x.h           |    1 +
 arch/powerpc/platforms/512x/mpc5121_ads.c    |    4 +-
 arch/powerpc/platforms/512x/mpc512x.h        |    4 +-
 arch/powerpc/platforms/512x/mpc512x_shared.c |   71 ++++++++++++++++++++++---
 sound/soc/fsl/mpc5121_pcm.c                  |   23 ++++++++-
 5 files changed, 89 insertions(+), 14 deletions(-)

diff --git a/arch/powerpc/include/asm/mpc512x.h b/arch/powerpc/include/asm/mpc512x.h
index 3bef879..1bcc208 100644
--- a/arch/powerpc/include/asm/mpc512x.h
+++ b/arch/powerpc/include/asm/mpc512x.h
@@ -116,6 +116,7 @@ extern void mpc5121_pscgpio_make_psc(int psc, int pin);
 extern struct clk *clk_get(struct device *dev, const char *id);
 extern int clk_enable(struct clk *clk);
 extern unsigned long clk_get_rate(struct clk *clk);
+extern void mpc5121ads_ac97_pm_restore(void);
 
 #ifdef CONFIG_PM
 #ifdef CONFIG_MPC5121_ADS_HIB
diff --git a/arch/powerpc/platforms/512x/mpc5121_ads.c b/arch/powerpc/platforms/512x/mpc5121_ads.c
index 2ac3ab1..6edf275 100644
--- a/arch/powerpc/platforms/512x/mpc5121_ads.c
+++ b/arch/powerpc/platforms/512x/mpc5121_ads.c
@@ -58,7 +58,7 @@ static void __init mpc5121_ads_setup_arch(void)
 	if (np) {
 		void __iomem *ioctl = of_iomap(np, 0);
 
-		mpc5121_psc_iopad_init(ioctl);
+		mpc5121_psc_iopad_init(ioctl, NULL);
 		mpc5121_can_iopad_init(ioctl);
 
 		of_node_put(np);
@@ -69,7 +69,7 @@ static void __init mpc5121_ads_setup_arch(void)
 	mpc5121_psc_lowlevel_clock_init();
 
 	/* Initialize PSC fifo size */
-	g_mpc5121_psc_fifo_init();
+	g_mpc5121_psc_fifo_init(NULL);
 
 	/* Disable any unused serial transceivers so they don't
 	 * interfere with spi or what ever else they might be
diff --git a/arch/powerpc/platforms/512x/mpc512x.h b/arch/powerpc/platforms/512x/mpc512x.h
index 0319b2d..7144e2f 100644
--- a/arch/powerpc/platforms/512x/mpc512x.h
+++ b/arch/powerpc/platforms/512x/mpc512x.h
@@ -15,8 +15,8 @@ extern unsigned long mpc512x_find_ips_freq(struct device_node *node);
 extern void __init mpc512x_init_IRQ(void);
 void __init mpc512x_declare_of_platform_devices(void);
 extern void mpc512x_restart(char *cmd);
-extern void __init g_mpc5121_psc_fifo_init(void);
-extern void __init mpc5121_psc_iopad_init(void __iomem *ioctl);
+extern void g_mpc5121_psc_fifo_init(char *);
+extern void mpc5121_psc_iopad_init(void __iomem *ioctl, char *);
 extern void __init mpc5121_can_iopad_init(void __iomem *ioctl);
 extern void __init mpc5121_psc_lowlevel_clock_init(void);
 extern void mpc5121ads_psc_disable_unused_serial(void);
diff --git a/arch/powerpc/platforms/512x/mpc512x_shared.c b/arch/powerpc/platforms/512x/mpc512x_shared.c
index 8c32236..2ab86b9 100644
--- a/arch/powerpc/platforms/512x/mpc512x_shared.c
+++ b/arch/powerpc/platforms/512x/mpc512x_shared.c
@@ -138,13 +138,21 @@ static unsigned int get_fifo_size(struct device_node *np, int psc_num,
 	return DEFAULT_FIFO_SIZE;
 }
 
-void __init g_mpc5121_psc_fifo_init(void)
+static int psc_fifo_base[12];
+void g_mpc5121_psc_fifo_init(char *name)
 {
 	struct device_node *np;
 	const u32 *cell_index;
 	int fifobase = 0; /* current fifo address in 32 bit words */
+	char *default_psc = "fsl,mpc5121-psc";
+	char *psc_name;
 
-	for_each_compatible_node(np, NULL, "fsl,mpc5121-psc") {
+	if (name)
+		psc_name = name;
+	else
+		psc_name = default_psc;
+
+	for_each_compatible_node(np, NULL, psc_name) {
 		cell_index = of_get_property(np, "cell-index", NULL);
 		if (cell_index) {
 			int psc_num = *cell_index;
@@ -163,11 +171,28 @@ void __init g_mpc5121_psc_fifo_init(void)
 
 			psc = of_iomap(np, 0);
 
-			/* tx fifo size register is at 0x9c and rx at 0xdc */
-			out_be32(psc + 0x9c, (fifobase << 16) | tx_fifo_size);
-			fifobase += tx_fifo_size;
-			out_be32(psc + 0xdc, (fifobase << 16) | rx_fifo_size);
-			fifobase += rx_fifo_size;
+			if (strcmp(psc_name, default_psc)) {
+				fifobase = psc_fifo_base[psc_num];
+				/* tx fifo size register is at 0x9c and rx at
+				 * 0xdc
+				 */
+				out_be32(psc + 0x9c, (fifobase << 16) |
+							tx_fifo_size);
+				fifobase += tx_fifo_size;
+				out_be32(psc + 0xdc, (fifobase << 16) |
+							rx_fifo_size);
+			} else {
+				psc_fifo_base[psc_num] = fifobase;
+				/* tx fifo size register is at 0x9c and rx at
+				 * 0xdc
+				 */
+				out_be32(psc + 0x9c, (fifobase << 16) |
+							tx_fifo_size);
+				fifobase += tx_fifo_size;
+				out_be32(psc + 0xdc, (fifobase << 16) |
+							rx_fifo_size);
+				fifobase += rx_fifo_size;
+			}
 
 			/* reset and enable the slices */
 			out_be32(psc + 0x80, 0x80);
@@ -184,12 +209,19 @@ void __init g_mpc5121_psc_fifo_init(void)
 #define IO_PSC_PIN_SIZE		0x14
 #define IO_PSC_PIN_OFFSET(x)	(IO_PSC_0_0_ADDR_OFFSET + IO_PSC_PIN_SIZE * (x))
 
-void __init mpc5121_psc_iopad_init(void __iomem *ioctl)
+void mpc5121_psc_iopad_init(void __iomem *ioctl, char *name)
 {
 	struct device_node *np;
 	const u32 *cell_index;
+	char *default_psc = "fsl,mpc5121-psc";
+	char *psc_name;
+
+	if (name)
+		psc_name = name;
+	else
+		psc_name = default_psc;
 
-	for_each_compatible_node(np, NULL, "fsl,mpc5121-psc") {
+	for_each_compatible_node(np, NULL, psc_name) {
 		cell_index = of_get_property(np, "cell-index", NULL);
 		if (cell_index) {
 			u32 __iomem *pscioctl;
@@ -226,6 +258,27 @@ void __init mpc5121_can_iopad_init(void __iomem *ioctl)
 	}
 }
 
+void mpc5121ads_ac97_pm_restore(void)
+{
+	struct device_node *np;
+
+	/*
+	 * io pad config
+	 */
+	np = of_find_compatible_node(NULL, NULL, "fsl,mpc5121-ioctl");
+	if (np) {
+		void __iomem *ioctl = of_iomap(np, 0);
+
+		mpc5121_psc_iopad_init(ioctl, "fsl,mpc5121-psc-ac97");
+
+		of_node_put(np);
+		iounmap(ioctl);
+	}
+
+	g_mpc5121_psc_fifo_init("fsl,mpc5121-psc-ac97");
+}
+EXPORT_SYMBOL(mpc5121ads_ac97_pm_restore);
+
 /*
  * If the kernel is using a different PSC for the console than
  * u-boot then that psc's clock will not be enabled.
diff --git a/sound/soc/fsl/mpc5121_pcm.c b/sound/soc/fsl/mpc5121_pcm.c
index c4c28a7..a46fd88 100644
--- a/sound/soc/fsl/mpc5121_pcm.c
+++ b/sound/soc/fsl/mpc5121_pcm.c
@@ -29,6 +29,7 @@
 #include <asm/dma.h>
 #include <asm/fsldma.h>
 #include <asm/mpc52xx_psc.h>
+#include <asm/mpc512x.h>
 
 #include "mpc5121_pcm.h"
 #include "mpc5121_psc_info.h"
@@ -368,7 +369,7 @@ out:
 }
 
 #ifdef CONFIG_PM
-unsigned short headphone;
+unsigned short headphone, lineout, mono, mix1, mix2;
 static int mpc512x_pcm_suspend(struct platform_device *pdev,
 			       struct snd_soc_dai *dai)
 {
@@ -382,6 +383,10 @@ static int mpc512x_pcm_suspend(struct platform_device *pdev,
 #ifdef CONFIG_SND_SOC_MPC5121_ADS
 	if (psc_private->format == SND_SOC_DAIFMT_AC97)
 		headphone = mpc5121_ac97_read(NULL, 4);
+	lineout = mpc5121_ac97_read(NULL, 2);
+	mono = mpc5121_ac97_read(NULL, 6);
+	mix1 = mpc5121_ac97_read(NULL, 0x12);
+	mix2 = mpc5121_ac97_read(NULL, 0x18);
 #endif
 
 	/* Disable AC97 controller */
@@ -401,12 +406,28 @@ static int mpc512x_pcm_resume(struct platform_device *pdev,
 			      struct snd_soc_dai *dai)
 {
 	struct mpc5121_psc_private *psc_private = dai->private_data;
+	unsigned int playback, capture;
+
+	mpc5121ads_ac97_pm_restore();
+
+	playback = psc_private->playback;
+	capture = psc_private->capture;
+	psc_private->playback = 0;
+	psc_private->capture = 0;
 
 	mpc5121_psc_init(&pdev->dev, dai);
+
+	psc_private->playback = playback;
+	psc_private->capture = capture;
+
 #ifdef CONFIG_SND_SOC_MPC5121_ADS
 	if (psc_private->format == SND_SOC_DAIFMT_AC97)
 		mpc5121_ac97_reset(NULL);
 	mpc5121_ac97_write(NULL, 4, headphone);
+	mpc5121_ac97_write(NULL, 2, lineout);
+	mpc5121_ac97_write(NULL, 2, mono);
+	mpc5121_ac97_write(NULL, 0x12, mix1);
+	mpc5121_ac97_write(NULL, 0x18, mix2);
 #else
 	(void)psc_private;
 #endif
-- 
1.6.3.1

