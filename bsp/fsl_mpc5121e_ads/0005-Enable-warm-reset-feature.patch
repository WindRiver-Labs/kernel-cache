From 6f3c4c0beaf6f28144da0449ee7a6ecefe192f99 Mon Sep 17 00:00:00 2001
From: Andrew Liu <shengping.liu@windriver.com>
Date: Tue, 4 Nov 2008 14:45:52 +0800
Subject: [PATCH] Enable warm reset feature

Add soc device_type for device tree node,
so that get_immrbase function will return
valid data needed for restart.

Define restart function and hook it to
corresponding machine structure function.

Signed-off-by: Andrew Liu <shengping.liu@windriver.com>
---
 arch/powerpc/boot/dts/mpc5121ads.dts         |    1 +
 arch/powerpc/platforms/512x/mpc5121_ads.c    |    1 +
 arch/powerpc/platforms/512x/mpc512x.h        |    1 +
 arch/powerpc/platforms/512x/mpc512x_shared.c |   39 ++++++++++++++++++++++++++
 4 files changed, 42 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/boot/dts/mpc5121ads.dts b/arch/powerpc/boot/dts/mpc5121ads.dts
index 10eed75..9b59591 100644
--- a/arch/powerpc/boot/dts/mpc5121ads.dts
+++ b/arch/powerpc/boot/dts/mpc5121ads.dts
@@ -136,6 +136,7 @@
 	};
 
 	soc@80000000 {
+		device_type = "soc";
 		compatible = "fsl,mpc5121-immr";
 		#address-cells = <1>;
 		#size-cells = <1>;
diff --git a/arch/powerpc/platforms/512x/mpc5121_ads.c b/arch/powerpc/platforms/512x/mpc5121_ads.c
index 12bb375..6588773 100644
--- a/arch/powerpc/platforms/512x/mpc5121_ads.c
+++ b/arch/powerpc/platforms/512x/mpc5121_ads.c
@@ -74,4 +74,5 @@ define_machine(mpc5121_ads) {
 	.init_IRQ		= mpc5121_ads_init_IRQ,
 	.get_irq		= ipic_get_irq,
 	.calibrate_decr		= generic_calibrate_decr,
+	.restart		= mpc512x_restart,
 };
diff --git a/arch/powerpc/platforms/512x/mpc512x.h b/arch/powerpc/platforms/512x/mpc512x.h
index 9c03693..5409642 100644
--- a/arch/powerpc/platforms/512x/mpc512x.h
+++ b/arch/powerpc/platforms/512x/mpc512x.h
@@ -14,4 +14,5 @@
 extern unsigned long mpc512x_find_ips_freq(struct device_node *node);
 extern void __init mpc512x_init_IRQ(void);
 void __init mpc512x_declare_of_platform_devices(void);
+extern void mpc512x_restart(char *cmd);
 #endif				/* __MPC512X_H__ */
diff --git a/arch/powerpc/platforms/512x/mpc512x_shared.c b/arch/powerpc/platforms/512x/mpc512x_shared.c
index d8cd579..f3d269d 100644
--- a/arch/powerpc/platforms/512x/mpc512x_shared.c
+++ b/arch/powerpc/platforms/512x/mpc512x_shared.c
@@ -21,9 +21,16 @@
 #include <asm/ipic.h>
 #include <asm/prom.h>
 #include <asm/time.h>
+#include <sysdev/fsl_soc.h>
 
 #include "mpc512x.h"
 
+#define RST_OFFSET      0x00000e00      /*00E00- 00EFF Reset module (RESET)*/
+#define RST_PROT_REG    0x00000018
+#define RST_CTRL_REG    0x0000001c
+
+static  __be32  __iomem *restart_reg_base;
+
 unsigned long
 mpc512x_find_ips_freq(struct device_node *node)
 {
@@ -81,3 +88,35 @@ void __init mpc512x_declare_of_platform_devices(void)
 			"Error while probing of_platform bus\n");
 }
 
+static int __init mpc512x_restart_init(void)
+{
+	/* map reset restart_reg_baseister space */
+	restart_reg_base = ioremap(get_immrbase() + RST_OFFSET, 0xff);
+
+	return 0;
+}
+
+arch_initcall(mpc512x_restart_init);
+
+void mpc512x_restart(char *cmd)
+{
+
+	local_irq_disable();
+
+	restart_reg_base = ioremap(get_immrbase() + RST_OFFSET, 0xff);
+	if (restart_reg_base) {
+		/* enable software reset "RSTE" */
+		out_be32(restart_reg_base + (RST_PROT_REG >> 2), 0x52535445);
+		/*out_be32(restart_reg_base + RST_PROT_REG, 0x52535445);*/
+
+		/* set software hard reset */
+		out_be32(restart_reg_base + (RST_CTRL_REG >> 2), 0x2);
+		/*out_be32(restart_reg_base + RST_CTRL_REG , 0x2); */
+	} else {
+		printk(KERN_EMERG "Error: Restart registers not \
+		 mapped, spinning !\n");
+	}
+
+	for ( ; ; )
+		;
+}
-- 
1.6.0.90.g436ed

