From 892d3069ae6702c67d16097f2a5eef32f2d5aba1 Mon Sep 17 00:00:00 2001
From: Andrew Liu <shengping.liu@windriver.com>
Date: Thu, 18 Jun 2009 15:33:43 +0800
Subject: [PATCH 02/25] MPC5121: MSCAN for MPC5121

Original patch taken from rev 4 board support ISO image:
   mpc5121ads-20081208_ltib-beta.iso
   http://www.freescale.com/webapp/sps/site/overview.jsp?
   nodeId=0127260061033202A5621E

Enable socket-based MSCAN driver to work on MPC5121.

Signed-off-by: Hongjun, Chen <hong-jun.chen@freescale.com>
Integrated-by: Andrew Liu <shengping.liu@windriver.com>
---
 arch/powerpc/include/asm/mpc512x.h  |    3 +++
 drivers/net/can/Kconfig             |    2 +-
 drivers/net/can/mscan/mpc52xx_can.c |   18 ++++++++++++++++--
 drivers/net/can/mscan/mscan.h       |   11 ++++++++++-
 4 files changed, 30 insertions(+), 4 deletions(-)

diff --git a/arch/powerpc/include/asm/mpc512x.h b/arch/powerpc/include/asm/mpc512x.h
index b222dbd..0efc770 100644
--- a/arch/powerpc/include/asm/mpc512x.h
+++ b/arch/powerpc/include/asm/mpc512x.h
@@ -113,6 +113,9 @@ extern void mpc5121_pscgpio_pin_high(int psc, int pin);
 extern void mpc5121_pscgpio_pin_low(int psc, int pin);
 extern void mpc5121_pscgpio_make_psc(int psc, int pin);
 
+extern struct clk *clk_get(struct device *dev, const char *id);
+extern int clk_enable(struct clk *clk);
+
 #ifdef CONFIG_PM
 extern int __init mpc512x_pm_init(void);
 extern void mpc512x_pmc_clrevent(void);
diff --git a/drivers/net/can/Kconfig b/drivers/net/can/Kconfig
index 8b0a9c8..bcad2fd 100644
--- a/drivers/net/can/Kconfig
+++ b/drivers/net/can/Kconfig
@@ -33,7 +33,7 @@ config CAN_MSCAN
 
 config CAN_MPC52XX
 	tristate "Freescale MPC5200/MPC5121 onboard CAN controller"
-	depends on CAN_MSCAN && (PPC_MPC52xx || PPC_52xx)
+	depends on CAN_MSCAN && (PPC_MPC52xx || PPC_52xx || PPC_MPC5121)
 	default LITE5200
 	---help---
 	  If you say yes here you get support for Freescale MPC5200/MPC5121
diff --git a/drivers/net/can/mscan/mpc52xx_can.c b/drivers/net/can/mscan/mpc52xx_can.c
index 0025f31..c4c98b7 100644
--- a/drivers/net/can/mscan/mpc52xx_can.c
+++ b/drivers/net/can/mscan/mpc52xx_can.c
@@ -24,6 +24,8 @@
  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  *
  * HISTORY:
+ * 	 2008-02-26 Add support for MPC512x
+ * 	 		Hongjun, Chen <hong-jun.chen@freescale.com>
  *	 2005-02-03 created
  *
  */
@@ -38,7 +40,7 @@
 #include <linux/can/dev.h>
 #include <asm/io.h>
 #include <asm/of_platform.h>
-#include <asm/mpc52xx.h>
+#include <asm/mpc512x.h>
 
 #include "mscan.h"
 
@@ -88,6 +90,18 @@ static int __devinit mpc52xx_can_probe(struct platform_device *pdev)
 		goto fail_map;
 	}
 
+	if (pdata->cpu_type == MPC512x_MSCAN) {
+		struct clk *mscan_clk;
+		mscan_clk = clk_get(&pdev->dev, "mscan_clk");
+		if (!mscan_clk) {
+			dev_err(&pdev->dev, "can't get mscan_clk!");
+			ret = -EINVAL;
+			goto fail_map;
+		}
+
+		clk_enable(mscan_clk);
+	}
+
 	can->can_sys_clock = pdata->clock_frq;
 
 	platform_set_drvdata(pdev, dev);
@@ -283,5 +297,5 @@ module_init(mpc52xx_can_init);
 module_exit(mpc52xx_can_exit);
 
 MODULE_AUTHOR("Andrey Volkov <avolkov@varma-el.com>");
-MODULE_DESCRIPTION("Freescale MPC5200 CAN driver");
+MODULE_DESCRIPTION("Freescale MPC5200/MPC512x CAN driver");
 MODULE_LICENSE("GPL v2");
diff --git a/drivers/net/can/mscan/mscan.h b/drivers/net/can/mscan/mscan.h
index 16165af..f14e6d6 100644
--- a/drivers/net/can/mscan/mscan.h
+++ b/drivers/net/can/mscan/mscan.h
@@ -144,7 +144,7 @@
 
 /* Structure of the hardware registers */
 struct mscan_regs {
-	/* (see doco S12MSCANV3/D)		MPC5200	     MSCAN */
+	/* (see doco S12MSCANV3/D)		MPC5200/5121  MSCAN */
 	u8 canctl0;				/* + 0x00     0x00 */
 	u8 canctl1;				/* + 0x01     0x01 */
 	_MSCAN_RESERVED_(1, 2);			/* + 0x02          */
@@ -163,10 +163,17 @@ struct mscan_regs {
 	u8 cantbsel;				/* + 0x14     0x0a */
 	u8 canidac;				/* + 0x15     0x0b */
 	u8 reserved;				/* + 0x16     0x0c */
+#ifndef CONFIG_PPC_MPC5121
 	_MSCAN_RESERVED_(6, 5);			/* + 0x17          */
 #ifndef CONFIG_PPC_MPC52xx
 	u8 canmisc;				/*            0x0d */
 #endif
+#else	/* CONFIG_PPC_MPC5121 */
+	u8 reserved2;				/* 	  0x17	   */
+	u8 cantest;				/*	  0x18	   */
+	u8 canmisc;				/*	  0x19	   */
+	_MSCAN_RESERVED_(6, 2);			/* 	  0x1a     */
+#endif
 	u8 canrxerr;				/* + 0x1c     0x0e */
 	u8 cantxerr;				/* + 0x1d     0x0f */
 	_MSCAN_RESERVED_(7, 2);			/* + 0x1e          */
@@ -204,7 +211,9 @@ struct mscan_regs {
 		 _MSCAN_RESERVED_(22, 2);	/* + 0x5a          */
 		u16 time;			/* + 0x5c     0x2e */
 	} rx;
+#if defined(CONFIG_PPC_MPC52xx) || defined(CONFIG_PPC_MPC5121)
 	 _MSCAN_RESERVED_(23, 2);		/* + 0x5e          */
+#endif
 	struct {
 		u16 idr1_0;			/* + 0x60     0x30 */
 		 _MSCAN_RESERVED_(24, 2);	/* + 0x62          */
-- 
1.6.3.1

