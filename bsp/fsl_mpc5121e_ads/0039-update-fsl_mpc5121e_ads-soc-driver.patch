From d8c10143de99a9da843aab405a426529230dcbca Mon Sep 17 00:00:00 2001
From: Stanley.Miao <stanley.miao@windriver.com>
Date: Tue, 23 Dec 2008 15:19:38 +0800
Subject: [PATCH] update fsl_mpc5121e_ads soc driver.

update fsl_mpc5121e_ads soc audio driver to conform with the new SoC
audio interfaces.

Signed-off-by: Stanley.Miao <stanley.miao@windriver.com>
---
 sound/soc/codecs/ad1939.c        |    2 --
 sound/soc/fsl/mpc5121_ads.c      |   20 ++++++++++----------
 sound/soc/fsl/mpc5121_i2s.c      |   20 ++++++++++----------
 sound/soc/fsl/mpc5121_psc.c      |   20 +++++++++++---------
 sound/soc/fsl/mpc5121_psc_info.h |    2 +-
 5 files changed, 32 insertions(+), 32 deletions(-)

diff --git a/sound/soc/codecs/ad1939.c b/sound/soc/codecs/ad1939.c
index a531a8b..090b74b 100644
--- a/sound/soc/codecs/ad1939.c
+++ b/sound/soc/codecs/ad1939.c
@@ -563,8 +563,6 @@ struct snd_soc_dai ad1939_dai = {
 	},
 	.ops = {
 		.hw_params = ad1939_hw_params,
-	},
-	.dai_ops = {
 		.digital_mute = ad1939_digmute,
 		.set_sysclk = ad1939_set_dai_sysclk,
 		.set_fmt = ad1939_set_dai_fmt,
diff --git a/sound/soc/fsl/mpc5121_ads.c b/sound/soc/fsl/mpc5121_ads.c
index a2c41d3..d1004f6 100644
--- a/sound/soc/fsl/mpc5121_ads.c
+++ b/sound/soc/fsl/mpc5121_ads.c
@@ -44,8 +44,8 @@ static int mpc5121_ads_startup(struct snd_pcm_substream *substream)
 	int ret = 0;
 
 	/* Tell the CPU driver what the serial protocol is. */
-	if (cpu_dai->dai_ops.set_fmt) {
-		ret = cpu_dai->dai_ops.set_fmt(cpu_dai,
+	if (cpu_dai->ops.set_fmt) {
+		ret = cpu_dai->ops.set_fmt(cpu_dai,
 					       machine_data->dai_format);
 		if (ret < 0) {
 			dev_err(substream->pcm->card->dev,
@@ -55,8 +55,8 @@ static int mpc5121_ads_startup(struct snd_pcm_substream *substream)
 	}
 
 	/* Tell the codec driver what the serial protocol is. */
-	if (codec_dai->dai_ops.set_fmt) {
-		ret = codec_dai->dai_ops.set_fmt(codec_dai,
+	if (codec_dai->ops.set_fmt) {
+		ret = codec_dai->ops.set_fmt(codec_dai,
 						 machine_data->dai_format);
 		if (ret < 0) {
 			dev_err(substream->pcm->card->dev,
@@ -69,8 +69,8 @@ static int mpc5121_ads_startup(struct snd_pcm_substream *substream)
 	 * Tell the CPU driver what the clock frequency is, and whether it's a
 	 * slave or master.
 	 */
-	if (cpu_dai->dai_ops.set_sysclk) {
-		ret = cpu_dai->dai_ops.set_sysclk(cpu_dai, 0,
+	if (cpu_dai->ops.set_sysclk) {
+		ret = cpu_dai->ops.set_sysclk(cpu_dai, 0,
 						  machine_data->clk_frequency,
 						  machine_data->
 						  cpu_clk_direction);
@@ -85,8 +85,8 @@ static int mpc5121_ads_startup(struct snd_pcm_substream *substream)
 	 * Tell the codec driver what the MCLK frequency is, and whether it's
 	 * a slave or master.
 	 */
-	if (codec_dai->dai_ops.set_sysclk) {
-		ret = codec_dai->dai_ops.set_sysclk(codec_dai, 0,
+	if (codec_dai->ops.set_sysclk) {
+		ret = codec_dai->ops.set_sysclk(codec_dai, 0,
 						    machine_data->clk_frequency,
 						    machine_data->
 						    codec_clk_direction);
@@ -110,7 +110,7 @@ static struct snd_soc_ops mpc5121_ads_ops = {
 /**
  * mpc5121_ads_machine: ASoC machine data
  */
-static struct snd_soc_machine mpc5121_ads_machine = {
+static struct snd_soc_card mpc5121_ads_machine = {
 	.name = "MPC5121 ADS",
 	.num_links = 1,
 };
@@ -264,7 +264,7 @@ static int mpc5121_ads_probe(struct of_device *ofdev,
 	}
 
 	machine_data->sound_devdata.platform = &mpc512x_soc_platform;
-	machine_data->sound_devdata.machine = &mpc5121_ads_machine;
+	machine_data->sound_devdata.card = &mpc5121_ads_machine;
 	machine_data->sound_devdata.codec_dev = &soc_codec_dev_ac97;
 	machine_data->sound_devdata.codec_data = NULL;
 	sound_device->dev.platform_data = machine_data;
diff --git a/sound/soc/fsl/mpc5121_i2s.c b/sound/soc/fsl/mpc5121_i2s.c
index 72888e0..b30ccec 100644
--- a/sound/soc/fsl/mpc5121_i2s.c
+++ b/sound/soc/fsl/mpc5121_i2s.c
@@ -80,8 +80,8 @@ static int mpc5121_ads_startup(struct snd_pcm_substream *substream)
 	int ret = 0;
 
 	/* Tell the CPU driver what the serial protocol is. */
-	if (cpu_dai->dai_ops.set_fmt) {
-		ret = cpu_dai->dai_ops.set_fmt(cpu_dai,
+	if (cpu_dai->ops.set_fmt) {
+		ret = cpu_dai->ops.set_fmt(cpu_dai,
 					       machine_data->dai_format);
 		if (ret < 0) {
 			dev_err(substream->pcm->card->dev,
@@ -91,8 +91,8 @@ static int mpc5121_ads_startup(struct snd_pcm_substream *substream)
 	}
 
 	/* Tell the codec driver what the serial protocol is. */
-	if (codec_dai->dai_ops.set_fmt) {
-		ret = codec_dai->dai_ops.set_fmt(codec_dai,
+	if (codec_dai->ops.set_fmt) {
+		ret = codec_dai->ops.set_fmt(codec_dai,
 						 machine_data->dai_format);
 		if (ret < 0) {
 			dev_err(substream->pcm->card->dev,
@@ -105,8 +105,8 @@ static int mpc5121_ads_startup(struct snd_pcm_substream *substream)
 	 * Tell the CPU driver what the clock frequency is, and whether it's a
 	 * slave or master.
 	 */
-	if (cpu_dai->dai_ops.set_sysclk) {
-		ret = cpu_dai->dai_ops.set_sysclk(cpu_dai, 0,
+	if (cpu_dai->ops.set_sysclk) {
+		ret = cpu_dai->ops.set_sysclk(cpu_dai, 0,
 						  machine_data->clk_frequency,
 						  machine_data->
 						  cpu_clk_direction);
@@ -121,8 +121,8 @@ static int mpc5121_ads_startup(struct snd_pcm_substream *substream)
 	 * Tell the codec driver what the MCLK frequency is, and whether it's
 	 * a slave or master.
 	 */
-	if (codec_dai->dai_ops.set_sysclk) {
-		ret = codec_dai->dai_ops.set_sysclk(codec_dai, 0,
+	if (codec_dai->ops.set_sysclk) {
+		ret = codec_dai->ops.set_sysclk(codec_dai, 0,
 						    machine_data->clk_frequency,
 						    machine_data->
 						    codec_clk_direction);
@@ -146,7 +146,7 @@ static struct snd_soc_ops mpc5121_ads_ops = {
 /**
  * mpc5121_ads_machine: ASoC machine data
  */
-static struct snd_soc_machine mpc5121_ads_machine = {
+static struct snd_soc_card mpc5121_ads_machine = {
 	.name = "MPC5121 ADS",
 	.num_links = 1,
 };
@@ -326,7 +326,7 @@ static int mpc5121_ads_probe(struct of_device *ofdev,
 	}
 
 	machine_data->sound_devdata.platform = &mpc512x_soc_platform;
-	machine_data->sound_devdata.machine = &mpc5121_ads_machine;
+	machine_data->sound_devdata.card = &mpc5121_ads_machine;
 	machine_data->sound_devdata.codec_dev = &soc_codec_dev_ad1939;
 	machine_data->sound_devdata.codec_data = codec_data;
 
diff --git a/sound/soc/fsl/mpc5121_psc.c b/sound/soc/fsl/mpc5121_psc.c
index 91cbcbc..63e623f 100644
--- a/sound/soc/fsl/mpc5121_psc.c
+++ b/sound/soc/fsl/mpc5121_psc.c
@@ -288,7 +288,8 @@ EXPORT_SYMBOL_GPL(mpc5121_psc_init);
  * If this is the first stream open, then grab the IRQ and program most of
  * the PSC registers.
  */
-static int mpc5121_psc_startup(struct snd_pcm_substream *substream)
+static int mpc5121_psc_startup(struct snd_pcm_substream *substream,
+			   struct snd_soc_dai *dai)
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct mpc5121_psc_private *psc_private =
@@ -322,7 +323,8 @@ static int mpc5121_psc_startup(struct snd_pcm_substream *substream)
 /**
  * mpc5121_psc_prepare: prepare the PSC.
  */
-static int mpc5121_psc_prepare(struct snd_pcm_substream *substream)
+static int mpc5121_psc_prepare(struct snd_pcm_substream *substream,
+			   struct snd_soc_dai *dai)
 {
 	struct snd_pcm_runtime *runtime = substream->runtime;
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
@@ -397,7 +399,8 @@ static int mpc5121_psc_prepare(struct snd_pcm_substream *substream)
  * The DMA channel is in external master start and pause mode, which
  * means the PSC completely controls the flow of data.
  */
-static int mpc5121_psc_trigger(struct snd_pcm_substream *substream, int cmd)
+static int mpc5121_psc_trigger(struct snd_pcm_substream *substream, int cmd,
+			   struct snd_soc_dai *dai)
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct mpc5121_psc_private *psc_private =
@@ -443,7 +446,8 @@ static int mpc5121_psc_trigger(struct snd_pcm_substream *substream, int cmd)
  *
  * Shutdown the PSC if there are no other substreams open.
  */
-static void mpc5121_psc_shutdown(struct snd_pcm_substream *substream)
+static void mpc5121_psc_shutdown(struct snd_pcm_substream *substream,
+			     struct snd_soc_dai *dai)
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct mpc5121_psc_private *psc_private =
@@ -544,11 +548,9 @@ static struct snd_soc_dai mpc5121_psc_dai_template = {
 		.prepare = mpc5121_psc_prepare,
 		.shutdown = mpc5121_psc_shutdown,
 		.trigger = mpc5121_psc_trigger,
-		},
-	.dai_ops = {
-		    .set_sysclk = mpc5121_psc_set_sysclk,
-		    .set_fmt = mpc5121_psc_set_fmt,
-		    },
+		.set_sysclk = mpc5121_psc_set_sysclk,
+		.set_fmt = mpc5121_psc_set_fmt,
+	},
 };
 
 /**
diff --git a/sound/soc/fsl/mpc5121_psc_info.h b/sound/soc/fsl/mpc5121_psc_info.h
index 68562d1..8427c89 100644
--- a/sound/soc/fsl/mpc5121_psc_info.h
+++ b/sound/soc/fsl/mpc5121_psc_info.h
@@ -67,7 +67,7 @@ struct mpc5121_psc_private {
 struct mpc5121_ads_data {
 	struct snd_soc_device sound_devdata;
 	struct snd_soc_dai_link dai;
-	struct snd_soc_machine machine;
+	struct snd_soc_card machine;
 	unsigned int dai_format;
 	unsigned int codec_clk_direction;
 	unsigned int cpu_clk_direction;
-- 
1.6.0.2.GIT

