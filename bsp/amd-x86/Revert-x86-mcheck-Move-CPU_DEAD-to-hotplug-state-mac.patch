From 6182a0a1245a0f624f1b7b16b9f09acfede75285 Mon Sep 17 00:00:00 2001
From: Liwei Song <liwei.song@windriver.com>
Date: Thu, 20 Sep 2018 03:09:05 +0000
Subject: [PATCH 1/3] Revert "x86/mcheck: Move CPU_DEAD to hotplug state
 machine"

This reverts commit f348e8c9bfd1b7929a8958bf2618a33401d22a5c.
"x86/mcheck: Move CPU_DEAD to hotplug state machine"
since RT kernel has change to use hrtimer, so these series patch
was not suitable for RT kernel, for revert them to aviod compile
error on preempt-rt kernel.

Signed-off-by: Liwei Song <liwei.song@windriver.com>
---
 arch/x86/kernel/cpu/mcheck/mce.c |   42 ++++++++++++++++++++++++--------------
 include/linux/cpuhotplug.h       |    1 -
 2 files changed, 27 insertions(+), 16 deletions(-)

diff --git a/arch/x86/kernel/cpu/mcheck/mce.c b/arch/x86/kernel/cpu/mcheck/mce.c
index 0d4784f..023d1d1 100644
--- a/arch/x86/kernel/cpu/mcheck/mce.c
+++ b/arch/x86/kernel/cpu/mcheck/mce.c
@@ -2550,14 +2550,26 @@ static void mce_reenable_cpu(void)
 	__mcheck_cpu_init_timer();
 }
 
-static int mce_cpu_dead(unsigned int cpu)
+/* Get notified when a cpu comes on/off. Be hotplug friendly. */
+static int
+mce_cpu_callback(struct notifier_block *nfb, unsigned long action, void *hcpu)
 {
-	mce_intel_hcpu_update(cpu);
+	unsigned int cpu = (unsigned long)hcpu;
 
-	/* intentionally ignoring frozen here */
-	if (!cpuhp_tasks_frozen)
-		cmci_rediscover();
-	return 0;
+	switch (action & ~CPU_TASKS_FROZEN) {
+	case CPU_DEAD:
+		mce_intel_hcpu_update(cpu);
+
+		/* intentionally ignoring frozen here */
+		if (!(action & CPU_TASKS_FROZEN))
+			cmci_rediscover();
+		break;
+	case CPU_DOWN_PREPARE:
+
+		break;
+	}
+
+	return NOTIFY_OK;
 }
 
 static int mce_cpu_online(unsigned int cpu)
@@ -2588,6 +2600,10 @@ static int mce_cpu_pre_down(unsigned int cpu)
 	return 0;
 }
 
+static struct notifier_block mce_cpu_notifier = {
+	.notifier_call = mce_cpu_callback,
+};
+
 static __init void mce_init_banks(void)
 {
 	int i;
@@ -2631,17 +2647,16 @@ static __init int mcheck_init_device(void)
 	if (err)
 		goto err_out_mem;
 
-	err = cpuhp_setup_state(CPUHP_X86_MCE_DEAD, "x86/mce:dead", NULL,
-				mce_cpu_dead);
-	if (err)
-		goto err_out_mem;
-
 	err = cpuhp_setup_state(CPUHP_AP_ONLINE_DYN, "x86/mce:online",
 				mce_cpu_online, mce_cpu_pre_down);
 	if (err < 0)
-		goto err_out_online;
+		goto err_out_mem;
 	hp_online = err;
 
+	cpu_notifier_register_begin();
+	__register_hotcpu_notifier(&mce_cpu_notifier);
+	cpu_notifier_register_done();
+
 	register_syscore_ops(&mce_syscore_ops);
 
 	/* register character device /dev/mcelog */
@@ -2655,9 +2670,6 @@ err_register:
 	unregister_syscore_ops(&mce_syscore_ops);
 	cpuhp_remove_state(hp_online);
 
-err_out_online:
-	cpuhp_remove_state(CPUHP_X86_MCE_DEAD);
-
 err_out_mem:
 	free_cpumask_var(mce_device_initialized);
 
diff --git a/include/linux/cpuhotplug.h b/include/linux/cpuhotplug.h
index 70d4c3f..1052ce4 100644
--- a/include/linux/cpuhotplug.h
+++ b/include/linux/cpuhotplug.h
@@ -16,7 +16,6 @@ enum cpuhp_state {
 	CPUHP_PERF_SUPERH,
 	CPUHP_X86_HPET_DEAD,
 	CPUHP_X86_APB_DEAD,
-	CPUHP_X86_MCE_DEAD,
 	CPUHP_WORKQUEUE_PREP,
 	CPUHP_POWER_NUMA_PREPARE,
 	CPUHP_HRTIMERS_PREPARE,
-- 
1.7.9.5

