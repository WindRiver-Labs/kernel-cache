From 6b4c88bece7face3eea917e7f0100c5c565456d0 Mon Sep 17 00:00:00 2001
From: Xiubo Li <Li.Xiubo@freescale.com>
Date: Wed, 30 Jul 2014 17:26:37 +0800
Subject: [PATCH 230/255] fb: Add the command line resolution parameter
 support.

This will be used for the SII9022A HDMI device.

Signed-off-by: Xiubo Li <Li.Xiubo@freescale.com>
[Kevin: Original patch taken from
LS1021A-SDK-V1.1-ARM-SOURCE-20140815-yocto.iso]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/video/fsl-dcu-fb.c | 39 +++++++++++++++++++--------------------
 1 file changed, 19 insertions(+), 20 deletions(-)

diff --git a/drivers/video/fsl-dcu-fb.c b/drivers/video/fsl-dcu-fb.c
index c6e6655..6593642 100644
--- a/drivers/video/fsl-dcu-fb.c
+++ b/drivers/video/fsl-dcu-fb.c
@@ -141,6 +141,8 @@
 #define MFB_SET_LAYER		_IOW('M', 4, struct layer_display_offset)
 #define MFB_GET_LAYER		_IOR('M', 4, struct layer_display_offset)
 
+static unsigned long g_xres, g_yres;
+
 struct dcu_fb_data {
 	struct fb_info *fsl_dcu_info[DCU_LAYER_NUM_MAX];
 	struct device *dev;
@@ -280,7 +282,7 @@ static int enable_panel(struct fb_info *info)
 	struct dcu_fb_data *dcufb = mfbi->parent;
 	bool big_endian = dcufb->big_endian;
 	void __iomem *base = dcufb->reg_base;
-	unsigned int bpp, val;
+	unsigned int bpp;
 
 	dcu_writel(big_endian, DCU_CTRLDESCLN_1_HEIGHT(var->yres) |
 		DCU_CTRLDESCLN_1_WIDTH(var->xres),
@@ -334,15 +336,6 @@ static int enable_panel(struct fb_info *info)
 
 	dcu_writel(big_endian, DCU_UPDATE_MODE_READREG,
 			base + DCU_UPDATE_MODE);
-	while (1) {
-		val = dcu_readl(big_endian, base + DCU_UPDATE_MODE);
-		if (val & DCU_UPDATE_MODE_READREG)
-			continue;
-
-		dcu_writel(big_endian, DCU_UPDATE_MODE_MODE,
-				base + DCU_UPDATE_MODE);
-		break;
-	}
 
 	return 0;
 }
@@ -511,7 +504,6 @@ static void update_controller(struct fb_info *info)
 	bool big_endian = dcufb->big_endian;
 	void __iomem *base = dcufb->reg_base;
 	unsigned int div;
-	u32 val;
 
 	div = fsl_dcu_calc_div(info);
 	dcu_writel(big_endian, (div - 1), base + DCU_DIV_RATIO);
@@ -548,15 +540,6 @@ static void update_controller(struct fb_info *info)
 
 	dcu_writel(big_endian, DCU_UPDATE_MODE_READREG,
 			base + DCU_UPDATE_MODE);
-	while (1) {
-		val = dcu_readl(big_endian, base + DCU_UPDATE_MODE);
-		if (val & DCU_UPDATE_MODE_READREG)
-			continue;
-
-		dcu_writel(big_endian, DCU_UPDATE_MODE_MODE,
-				base + DCU_UPDATE_MODE);
-		break;
-	}
 }
 
 static int map_video_memory(struct fb_info *info)
@@ -923,6 +906,11 @@ static int install_framebuffer(struct fb_info *info)
 			struct fb_modelist, list);
 	fb_videomode_to_var(&info->var, &modelist->mode);
 
+	if (g_xres && g_yres) {
+		info->var.xres = g_xres;
+		info->var.yres = g_yres;
+	}
+
 	fsl_dcu_check_var(&info->var, info);
 	ret = register_framebuffer(info);
 	if (ret < 0) {
@@ -1213,6 +1201,17 @@ static struct platform_driver fsl_dcu_driver = {
 
 module_platform_driver(fsl_dcu_driver);
 
+static int __init g_res_setup(char *str)
+{
+	char *pchar;
+
+	g_xres = simple_strtoul(str, &pchar, 0);
+	g_yres = simple_strtoul(++pchar, NULL, 0);
+
+	return 1;
+}
+__setup("res=", g_res_setup);
+
 MODULE_AUTHOR("Alison Wang");
 MODULE_DESCRIPTION("Freescale DCU framebuffer driver");
 MODULE_LICENSE("GPL v2");
-- 
2.0.2

