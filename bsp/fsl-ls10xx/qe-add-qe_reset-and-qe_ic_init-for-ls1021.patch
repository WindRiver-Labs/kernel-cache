From 76181e08f61d7ddbcea9e225bb10118440d03929 Mon Sep 17 00:00:00 2001
From: Zhao Qiang <B45475@freescale.com>
Date: Mon, 26 May 2014 11:54:45 +0800
Subject: [PATCH 125/255] qe: add qe_reset and qe_ic_init for ls1021

add qe_reset into ls1021a_init_machine.
run qe_ic_init when "fsl,qe-ic" node is found in dtb.

Signed-off-by: Zhao Qiang <B45475@freescale.com>
[Kevin: Original patch taken from
LS1021A-SDK-V1.1-ARM-SOURCE-20140815-yocto.iso]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/arm/mach-imx/mach-ls1021a.c | 17 +++++++++++++++++
 drivers/qe/qe_ic.c               | 14 ++++++++++++++
 2 files changed, 31 insertions(+)

diff --git a/arch/arm/mach-imx/mach-ls1021a.c b/arch/arm/mach-imx/mach-ls1021a.c
index 7d74324..79b7507 100644
--- a/arch/arm/mach-imx/mach-ls1021a.c
+++ b/arch/arm/mach-imx/mach-ls1021a.c
@@ -11,6 +11,8 @@
 #include <linux/clocksource.h>
 #include <linux/irqchip.h>
 #include <linux/clk-provider.h>
+#include <linux/fsl/qe.h>
+#include <linux/fsl/qe_ic.h>
 #include <asm/mach/arch.h>
 
 #include "common.h"
@@ -33,8 +35,23 @@ static const struct of_device_id of_ls1021a_match_table[] = {
 
 static void __init ls1021a_init_machine(void)
 {
+#ifdef CONFIG_QUICC_ENGINE
+	struct device_node *np;
+#endif
+
 	mxc_arch_reset_init_dt();
 	of_platform_populate(NULL, of_ls1021a_match_table, NULL, NULL);
+
+#ifdef CONFIG_QUICC_ENGINE
+	np = of_find_compatible_node(NULL, NULL, "fsl,qe");
+	if (!np) {
+		pr_err("%s: Could not find Quicc Engine node\n", __func__);
+		return;
+	}
+	qe_reset();
+	of_node_put(np);
+#endif
+
 }
 
 static void __init ls1021a_init_time(void)
diff --git a/drivers/qe/qe_ic.c b/drivers/qe/qe_ic.c
index adc0c9f..e25a372 100644
--- a/drivers/qe/qe_ic.c
+++ b/drivers/qe/qe_ic.c
@@ -34,6 +34,7 @@
 #include <linux/fsl/qe_ic.h>
 
 #include "qe_ic.h"
+#include "../irqchip/irqchip.h"
 
 static DEFINE_RAW_SPINLOCK(qe_ic_lock);
 
@@ -501,4 +502,17 @@ static int __init init_qe_ic_sysfs(void)
 	return 0;
 }
 
+int __init qeic_of_init(struct device_node *node, struct device_node *parent)
+{
+	struct device_node *np;
+
+	np = of_find_compatible_node(NULL, NULL, "fsl,qe-ic");
+	if (np) {
+		qe_ic_init(np, 0, qe_ic_cascade_low_mpic,
+			   qe_ic_cascade_high_mpic);
+		of_node_put(np);
+	}
+	return 0;
+}
+IRQCHIP_DECLARE(qeic, "fsl,qe-ic", qeic_of_init);
 subsys_initcall(init_qe_ic_sysfs);
-- 
2.0.2

