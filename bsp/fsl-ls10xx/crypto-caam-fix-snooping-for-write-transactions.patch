From 0971e74d6ace0b25141aa5c781e5745a5b5b8bfe Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@freescale.com>
Date: Fri, 3 Jul 2015 16:23:29 +0300
Subject: [PATCH 64/70] crypto: caam - fix snooping for write transactions
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

HW coherency won't work properly for CAAM write transactions
if AWCACHE is left to default (POR) value - 4'b0001.
It has to be programmed to 4'b0010.

For platforms that have HW coherency support:
-PPC-based: the update has no effect; CAAM coherency already works
due to the IOMMU (PAMU) driver setting the correct memory coherency
attributes
-ARM-based: the update fixes cache coherency issues,
since IOMMU (SMMU) driver is not programmed to behave similar to PAMU

Change-Id: I1f91a526c0bdf28b799d19cab9599b115cad55b3
Signed-off-by: Horia GeantÄƒ <horia.geanta@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/39256
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Zhengxiong Jin <Jason.Jin@freescale.com>
Tested-by: Zhengxiong Jin <Jason.Jin@freescale.com>
[czou:Original patch taken from
LS1021A-IOT-Rev2-v0.4-20150907-yocto.iso]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/crypto/caam/ctrl.c |   17 ++++++++++++-----
 1 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/drivers/crypto/caam/ctrl.c b/drivers/crypto/caam/ctrl.c
index e672bbc..6c8acf5 100644
--- a/drivers/crypto/caam/ctrl.c
+++ b/drivers/crypto/caam/ctrl.c
@@ -491,7 +491,7 @@ static int caam_probe(struct platform_device *pdev)
 #ifdef CONFIG_DEBUG_FS
 	struct caam_perfmon *perfmon;
 #endif
-	u32 scfgr, comp_params;
+	u32 mcr, scfgr, comp_params;
 	int pg_size;
 	int BLOCK_OFFSET = 0;
 
@@ -540,8 +540,11 @@ static int caam_probe(struct platform_device *pdev)
 	 * Enable DECO watchdogs and, if this is a PHYS_ADDR_T_64BIT kernel,
 	 * long pointers in master configuration register
 	 */
-	setbits32(&ctrl->mcr, MCFGR_WDENABLE |
-		  (sizeof(dma_addr_t) == sizeof(u64) ? MCFGR_LONG_PTR : 0));
+	mcr = rd_reg32(&ctrl->mcr);
+	mcr = (mcr & ~MCFGR_AWCACHE_MASK) | (0x2 << MCFGR_AWCACHE_SHIFT) |
+	      MCFGR_WDENABLE | (sizeof(dma_addr_t) == sizeof(u64) ?
+				MCFGR_LONG_PTR : 0);
+	wr_reg32(&ctrl->mcr, mcr);
 
 	/*
 	 *  Read the Compile Time paramters and SCFGR to determine
@@ -820,6 +823,7 @@ static int caam_resume(struct device *dev)
 	struct caam_drv_private *caam_priv;
 	struct caam_ctrl __iomem *ctrl;
 	struct caam_queue_if __iomem *qi;
+	u32 mcr;
 	int ret;
 
 	caam_priv = dev_get_drvdata(dev);
@@ -829,8 +833,11 @@ static int caam_resume(struct device *dev)
 	 * Enable DECO watchdogs and, if this is a PHYS_ADDR_T_64BIT kernel,
 	 * long pointers in master configuration register
 	 */
-	setbits32(&ctrl->mcr, MCFGR_WDENABLE |
-		  (sizeof(dma_addr_t) == sizeof(u64) ? MCFGR_LONG_PTR : 0));
+	mcr = rd_reg32(&ctrl->mcr);
+	mcr = (mcr & ~MCFGR_AWCACHE_MASK) | (0x2 << MCFGR_AWCACHE_SHIFT) |
+	      MCFGR_WDENABLE | (sizeof(dma_addr_t) == sizeof(u64) ?
+				MCFGR_LONG_PTR : 0);
+	wr_reg32(&ctrl->mcr, mcr);
 
 	/* Enable QI interface of SEC */
 	if (caam_priv->qi_present)
-- 
1.7.5.4

