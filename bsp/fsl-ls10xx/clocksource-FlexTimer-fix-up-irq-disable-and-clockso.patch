From 2c478311e498e1d095cea8480d82e866ba249e67 Mon Sep 17 00:00:00 2001
From: Jingchang Lu <jingchang.lu@freescale.com>
Date: Mon, 28 Apr 2014 21:51:21 +0800
Subject: [PATCH 069/255] clocksource: FlexTimer: fix up irq disable and
 clocksource reading

1, fixup irq disable.
2, fixup clocksource reading.
3, fixup prescale factor calculation.

Signed-off-by: Xiubo Li <Li.Xiubo@freescale.com>
Signed-off-by: Jingchang Lu <jingchang.lu@freescale.com>
[Kevin: Original patch taken from
LS1021A-SDK-V1.1-ARM-SOURCE-20140815-yocto.iso, just some minor
modifications due to the context change.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/clocksource/fsl_ftm_timer.c | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

diff --git a/drivers/clocksource/fsl_ftm_timer.c b/drivers/clocksource/fsl_ftm_timer.c
index 13222c1..1111e02 100644
--- a/drivers/clocksource/fsl_ftm_timer.c
+++ b/drivers/clocksource/fsl_ftm_timer.c
@@ -28,6 +28,8 @@
 #define FTM_SC_TOIE	BIT(6)
 #define FTM_SC_TOF	BIT(7)
 
+#define FTM_SC_CLKS_SYSTEM	0x01
+
 #define FTM_CNT		0x04
 #define FTM_MOD		0x08
 #define FTM_CNTIN	0x4C
@@ -67,7 +69,7 @@ static inline void ftm_counter_enable(void __iomem *base)
 	/* select and enable counter clock source */
 	val = ftm_readl(base + FTM_SC);
 	val &= ~(FTM_SC_PS_MASK | FTM_SC_CLK_MASK);
-	val |= priv->ps | FTM_SC_CLK(1);
+	val |= priv->ps | FTM_SC_CLK(FTM_SC_CLKS_SYSTEM);
 	ftm_writel(val, base + FTM_SC);
 }
 
@@ -95,7 +97,7 @@ static inline void ftm_irq_enable(void __iomem *base)
 	u32 val;
 
 	val = ftm_readl(base + FTM_SC);
-	val |= FTM_SC_TOIE;
+	val &= ~FTM_SC_TOIE;
 	ftm_writel(val, base + FTM_SC);
 }
 
@@ -221,11 +223,14 @@ static int __init ftm_clockevent_init(unsigned long freq, int irq)
 					freq / (1 << priv->ps),
 					1, 0xffff);
 
-	ftm_counter_enable(priv->clkevt_base);
-
 	return 0;
 }
 
+static cycle_t ftm_clocksource_read_up(struct clocksource *c)
+{
+	return ftm_readl(priv->clksrc_base + FTM_CNT) & 0xffff;
+}
+
 static int __init ftm_clocksource_init(unsigned long freq)
 {
 	int err;
@@ -238,7 +243,7 @@ static int __init ftm_clocksource_init(unsigned long freq)
 	sched_clock_register(ftm_read_sched_clock, 16, freq / (1 << priv->ps));
 	err = clocksource_mmio_init(priv->clksrc_base + FTM_CNT, "fsl-ftm",
 				    freq / (1 << priv->ps), 300, 16,
-				    clocksource_mmio_readl_up);
+				    ftm_clocksource_read_up);
 	if (err) {
 		pr_err("ftm: init clock source mmio failed: %d\n", err);
 		return err;
@@ -308,7 +313,7 @@ static int __init ftm_calc_closest_round_cyc(unsigned long freq)
 						HZ * (1 << priv->ps++));
 	} while (priv->periodic_cyc > 0xFFFF);
 
-	if (priv->ps > FTM_PS_MAX) {
+	if (priv->ps-- > FTM_PS_MAX) {
 		pr_err("ftm: the prescaler is %lu > %d\n",
 				priv->ps, FTM_PS_MAX);
 		return -EINVAL;
-- 
2.0.2

