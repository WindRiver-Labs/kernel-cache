From 2b7397bfa73c446a8a54f590c7103b810834b275 Mon Sep 17 00:00:00 2001
From: czou <cao.zou@windriver.com>
Date: Wed, 16 Dec 2015 10:04:47 +0800
Subject: [PATCH] ARM:ls1021a: remove dma-coherent and gianfar snooping
 support in Rev1 soc

There is a HW defect in ls1021a Rev1 soc, it is known that there are
H/W coherency issues at least for the Tx side, it can't supprot the
snooping and dma-coherent

Signed-off-by: czou <cao.zou@windriver.com>
---
 arch/arm/mach-imx/mach-ls1021a.c           |    4 +++-
 arch/arm/mach-imx/platsmp.c                |   10 ++++++++++
 drivers/net/ethernet/freescale/gianfar.h   |    9 +++++++++
 include/linux/platform_data/dcfg-ls1021a.h |   10 ++++++++++
 4 files changed, 32 insertions(+), 1 deletions(-)
 create mode 100644 include/linux/platform_data/dcfg-ls1021a.h

diff --git a/arch/arm/mach-imx/mach-ls1021a.c b/arch/arm/mach-imx/mach-ls1021a.c
index dbb0256..7fc8076 100644
--- a/arch/arm/mach-imx/mach-ls1021a.c
+++ b/arch/arm/mach-imx/mach-ls1021a.c
@@ -13,6 +13,7 @@
 #include <linux/dma-mapping.h>
 #include <linux/of_platform.h>
 #include <asm/mach/arch.h>
+#include <linux/platform_data/dcfg-ls1021a.h>
 
 #include "common.h"
 
@@ -38,7 +39,8 @@ static struct notifier_block ls1021a_platform_nb = {
 
 static void __init ls1021a_init_machine(void)
 {
-	bus_register_notifier(&platform_bus_type, &ls1021a_platform_nb);
+	if (!is_ls1021a_rev1())
+		bus_register_notifier(&platform_bus_type, &ls1021a_platform_nb);
 
 	mxc_arch_reset_init_dt();
 	of_platform_populate(NULL, of_default_bus_match_table, NULL, NULL);
diff --git a/arch/arm/mach-imx/platsmp.c b/arch/arm/mach-imx/platsmp.c
index 9eefafc..172634c 100644
--- a/arch/arm/mach-imx/platsmp.c
+++ b/arch/arm/mach-imx/platsmp.c
@@ -20,6 +20,7 @@
 #include <linux/of_address.h>
 #include <linux/delay.h>
 #include <asm/smp_plat.h>
+#include <linux/platform_data/dcfg-ls1021a.h>
 
 #include "common.h"
 #include "hardware.h"
@@ -32,6 +33,7 @@
 #define	SCFG_SPARECR4		0x50C
 
 #define	DCFG_CCSR_BRR		0x0E4
+#define	DCFG_CCSR_SVR		0x0A4
 #define	DCFG_CCSR_SCRATCHRW1	0x200
 
 #define	DCSR_RCPM2_DEBUG1	0x400
@@ -84,6 +86,14 @@ static int imx_boot_secondary(unsigned int cpu, struct task_struct *idle)
 	return 0;
 }
 
+#ifdef CONFIG_SOC_LS1021A
+#define  LS1021A_SOC_REV1 0x10
+int is_ls1021a_rev1(void)
+{
+	return LS1021A_SOC_REV1 == (ioread32be(dcfg_base + DCFG_CCSR_SVR) & 0x1f);
+}
+#endif
+
 /*
  * Initialise the CPU possible map early - this describes the CPUs
  * which may be present or become present in the system.
diff --git a/drivers/net/ethernet/freescale/gianfar.h b/drivers/net/ethernet/freescale/gianfar.h
index 0f5bf84..fb90f82dc 100644
--- a/drivers/net/ethernet/freescale/gianfar.h
+++ b/drivers/net/ethernet/freescale/gianfar.h
@@ -50,6 +50,7 @@
 #include <linux/crc32.h>
 #include <linux/workqueue.h>
 #include <linux/ethtool.h>
+#include <linux/platform_data/dcfg-ls1021a.h>
 
 #if defined CONFIG_FSL_GIANFAR_1588
 #include <linux/circ_buf.h>
@@ -325,7 +326,11 @@ extern const char gfar_driver_version[];
 #define RQUEUE_EN_ALL		0x000000FF
 
 /* Init to do tx snooping for buffers and descriptors */
+#ifdef CONFIG_SOC_LS1021A
+#define DMACTRL_INIT_SETTINGS   (is_ls1021a_rev1() ? 0x00000003 : 0x000000c3)
+#else
 #define DMACTRL_INIT_SETTINGS   0x000000c3
+#endif
 #define DMACTRL_GRS             0x00000010
 #define DMACTRL_GTS             0x00000008
 #define DMACTRL_LE		0x00008000
@@ -492,7 +497,11 @@ extern const char gfar_driver_version[];
 #define ATTR_BUFSTASH		0x00004000
 
 #define ATTR_SNOOPING		0x000000c0
+#ifdef CONFIG_SOC_LS1021A
+#define ATTR_INIT_SETTINGS      (is_ls1021a_rev1() ? 0 : ATTR_SNOOPING)
+#else
 #define ATTR_INIT_SETTINGS      ATTR_SNOOPING
+#endif
 
 #define ATTRELI_INIT_SETTINGS   0x0
 #define ATTRELI_EL_MASK		0x3fff0000
diff --git a/include/linux/platform_data/dcfg-ls1021a.h b/include/linux/platform_data/dcfg-ls1021a.h
new file mode 100644
index 0000000..4bc913d
--- /dev/null
+++ b/include/linux/platform_data/dcfg-ls1021a.h
@@ -0,0 +1,10 @@
+#ifndef __MACH_LS1021A_H
+#define __MACH_LS1021A_H
+
+#ifdef CONFIG_SOC_LS1021A
+int is_ls1021a_rev1(void);
+#else
+inline int is_ls1021a_rev1(void) { return 0; }
+#endif
+
+#endif
-- 
1.7.5.4

