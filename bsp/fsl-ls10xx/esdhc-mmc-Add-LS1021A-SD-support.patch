From cda01983d00d4fda4b945eae49a34d23e484dd09 Mon Sep 17 00:00:00 2001
From: Qiu Wujie <b49553@freescale.com>
Date: Fri, 24 Oct 2014 10:36:07 +0800
Subject: [PATCH 121/129] esdhc: mmc: Add LS1021A SD support.

Signed-off-by: Qiu Wujie <B49553@freescale.com>
[Xulin:Original patch taken from
Freescale-Linux-SDK-for-LS1021A-IOT-Rev2-v0.4-SOURCE-20150907-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/mmc/host/Kconfig          |    2 +-
 drivers/mmc/host/sdhci-of-esdhc.c |   15 +++++++++++++++
 2 files changed, 16 insertions(+), 1 deletions(-)

diff --git a/drivers/mmc/host/Kconfig b/drivers/mmc/host/Kconfig
index b1f837e..cd518d9 100644
--- a/drivers/mmc/host/Kconfig
+++ b/drivers/mmc/host/Kconfig
@@ -132,7 +132,7 @@ config MMC_SDHCI_OF_ARASAN
 config MMC_SDHCI_OF_ESDHC
 	tristate "SDHCI OF support for the Freescale eSDHC controller"
 	depends on MMC_SDHCI_PLTFM
-	depends on PPC
+	depends on PPC_OF || ARCH_MXC
 	select MMC_SDHCI_BIG_ENDIAN_32BIT_BYTE_SWAPPER
 	help
 	  This selects the Freescale eSDHC controller support.
diff --git a/drivers/mmc/host/sdhci-of-esdhc.c b/drivers/mmc/host/sdhci-of-esdhc.c
index d57b77b..a49304f 100644
--- a/drivers/mmc/host/sdhci-of-esdhc.c
+++ b/drivers/mmc/host/sdhci-of-esdhc.c
@@ -21,12 +21,17 @@
 #include <linux/mmc/host.h>
 #include "sdhci-pltfm.h"
 #include "sdhci-esdhc.h"
+
+#if defined CONFIG_PPC_OF
 #include <asm/mpc85xx.h>
+#endif
 
 #define VENDOR_V_22	0x12
 #define VENDOR_V_23	0x13
 
+#if defined CONFIG_PPC_OF
 static u32 svr;
+#endif
 
 static u32 esdhc_readl(struct sdhci_host *host, int reg)
 {
@@ -72,11 +77,13 @@ static u16 esdhc_readw(struct sdhci_host *host, int reg)
 	else
 		ret = (in_be32(host->ioaddr + base) >> shift) & 0xffff;
 
+#if defined CONFIG_PPC_OF	
 	/* T4240-R1.0-R2.0 had a incorrect vendor version and spec version */
 	if ((reg == SDHCI_HOST_VERSION) &&
 			((SVR_SOC_VER(svr) == SVR_T4240) &&
 			 (SVR_REV(svr) <= 0x20)))
 		ret = (VENDOR_V_23 << SDHCI_VENDOR_VER_SHIFT) | SDHCI_SPEC_200;
+#endif
 
 	return ret;
 }
@@ -187,6 +194,7 @@ static void esdhc_writeb(struct sdhci_host *host, u8 val, int reg)
 		if (!host->pwr || !val)
 			return;
 
+#if defined CONFIG_PPC_OF
 		if (SVR_SOC_VER(svr) == SVR_T4240) {
 			u8 vol;
 
@@ -197,6 +205,7 @@ static void esdhc_writeb(struct sdhci_host *host, u8 val, int reg)
 				vol |= ESDHC_VOL_SEL;
 		} else
 			return;
+#endif		
 	}
 
 	sdhci_be32bs_writeb(host, val, reg);
@@ -239,6 +248,7 @@ static void esdhci_of_adma_workaround(struct sdhci_host *host, u32 intmask)
 		return;
 	}
 
+#if defined CONFIG_PPC_OF
 	/*
 	 * Check for A-004388: eSDHC DMA might not stop if error
 	 * occurs on system transaction
@@ -263,6 +273,7 @@ static void esdhci_of_adma_workaround(struct sdhci_host *host, u32 intmask)
 		((SVR_SOC_VER(svr) == SVR_P5021) && (SVR_REV(svr) <= 0x21)) ||
 		((SVR_SOC_VER(svr) == SVR_P5040) && (SVR_REV(svr) <= 0x21))))
 		return;
+#endif
 
 	sdhci_reset(host, SDHCI_RESET_DATA);
 
@@ -428,7 +439,9 @@ static void esdhc_of_platform_init(struct sdhci_host *host)
 {
 	u32 vvn;
 
+#if defined CONFIG_PPC_OF	
 	svr =  mfspr(SPRN_SVR);
+#endif	
 	vvn = in_be32(host->ioaddr + SDHCI_SLOT_INT_STATUS);
 	vvn = (vvn & SDHCI_VENDOR_VER_MASK) >> SDHCI_VENDOR_VER_SHIFT;
 	if (vvn == VENDOR_V_22)
@@ -437,6 +450,7 @@ static void esdhc_of_platform_init(struct sdhci_host *host)
 	if (vvn > VENDOR_V_22)
 		host->quirks &= ~SDHCI_QUIRK_NO_BUSY_IRQ;
 
+#if defined CONFIG_PPC_OF
 	/*
 	 * Check for A-005055: A glitch is generated on the card clock
 	 * due to software reset or a clock change
@@ -463,6 +477,7 @@ static void esdhc_of_platform_init(struct sdhci_host *host)
 	    ((SVR_SOC_VER(svr) == SVR_P1014) && (SVR_REV(svr) == 0x10)) ||
 	    ((SVR_SOC_VER(svr) == SVR_P1010) && (SVR_REV(svr) == 0x10)))
 		host->quirks2 |= SDHCI_QUIRK2_DISABLE_CLOCK_BEFORE_RESET;
+#endif
 }
 
 static void esdhc_get_pltfm_irq(struct sdhci_host *host, u32 *irq)
-- 
1.7.5.4

