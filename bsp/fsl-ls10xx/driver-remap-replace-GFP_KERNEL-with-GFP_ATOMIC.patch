From b8c804316b6cdc48cf920cf9d2575dd99b9e6f2d Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Fri, 8 May 2015 13:41:44 +0800
Subject: [PATCH 070/129] driver:remap: replace GFP_KERNEL with GFP_ATOMIC

Replace the kmalloc type GFP_KERNEL with GFP_ATOMIC to avoid below calltrace
since this operation is executed on atomic context like this:

fsl_dcu_probe()
	|
	+ reset_total_layers()
		|
		+ regmap_write()
			|
			+ raw_spin_lock_irqsave()
			|
			+ regcache_rbtree_write
			|
			+ raw_spin_unlock_irqrestore()

calltrace:

[    4.541043] WARNING: CPU: 1 PID: 1 at kernel/locking/lockdep.c:2742 lockdep_trace_alloc+0xc8/0x104()
[    4.541055] DEBUG_LOCKS_WARN_ON(irqs_disabled_flags(flags))
[    4.541064] Modules linked in:
[    4.541089] CPU: 1 PID: 1 Comm: swapper/0 Not tainted
3.14.29ltsi-WR7.0.0.0_cgl #1
[    4.541115] [<8001865c>] (unwind_backtrace) from [<80012b2c>](show_stack+0x20/0x24)
[    4.541135] [<80012b2c>] (show_stack) from [<807ce844>](dump_stack+0x74/0xc0)
[    4.541156] [<807ce844>] (dump_stack) from [<80027acc>](warn_slowpath_common+0x7c/0xa0)
[    4.541176] [<80027acc>] (warn_slowpath_common) from [<80027b30>](warn_slowpath_fmt+0x40/0x48)
[    4.541195] [<80027b30>] (warn_slowpath_fmt) from [<8007ccb0>](lockdep_trace_alloc+0xc8/0x104)
[    4.541216] [<8007ccb0>] (lockdep_trace_alloc) from [<8015da28>](kmem_cache_alloc_trace+0x3c/0x398)
[    4.541237] [<8015da28>] (kmem_cache_alloc_trace) from [<804b3ee4>](regcache_rbtree_write+0x1f8/0x3bc)
[    4.541257] [<804b3ee4>] (regcache_rbtree_write) from [<804b29b0>](regcache_write+0x68/0x6c)
[    4.541276] [<804b29b0>] (regcache_write) from [<804b0fe0>](_regmap_raw_write+0x10c/0x940)
[    4.541295] [<804b0fe0>] (_regmap_raw_write) from [<804b1894>](_regmap_bus_raw_write+0x80/0x98)
[    4.541315] [<804b1894>] (_regmap_bus_raw_write) from [<804b0260>](_regmap_write+0x110/0x1fc)
[    4.541333] [<804b0260>] (_regmap_write) from [<804b1cf8>](regmap_write+0x50/0x70)
[    4.541354] [<804b1cf8>] (regmap_write) from [<8045cde4>](reset_total_layers.isra.11+0x30/0xf8)
[    4.541373] [<8045cde4>] (reset_total_layers.isra.11) from[<8045d88c>] (fsl_dcu_probe+0x328/0x614)
[    4.541392] [<8045d88c>] (fsl_dcu_probe) from [<804a41c8>](platform_drv_probe+0x28/0x5c)
[    4.541413] [<804a41c8>] (platform_drv_probe) from [<804a2800>](driver_probe_device+0xc0/0x204)
	............
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/base/regmap/regcache-rbtree.c |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/base/regmap/regcache-rbtree.c b/drivers/base/regmap/regcache-rbtree.c
index 56486d9..348119bb 100644
--- a/drivers/base/regmap/regcache-rbtree.c
+++ b/drivers/base/regmap/regcache-rbtree.c
@@ -292,14 +292,14 @@ static int regcache_rbtree_insert_to_block(struct regmap *map,
 
 	blk = krealloc(rbnode->block,
 		       blklen * map->cache_word_size,
-		       GFP_KERNEL);
+		       GFP_ATOMIC);
 	if (!blk)
 		return -ENOMEM;
 
 	if (BITS_TO_LONGS(blklen) > BITS_TO_LONGS(rbnode->blklen)) {
 		present = krealloc(rbnode->cache_present,
 				   BITS_TO_LONGS(blklen) * sizeof(*present),
-				   GFP_KERNEL);
+				   GFP_ATOMIC);
 		if (!present) {
 			kfree(blk);
 			return -ENOMEM;
@@ -336,7 +336,7 @@ regcache_rbtree_node_alloc(struct regmap *map, unsigned int reg)
 	const struct regmap_range *range;
 	int i;
 
-	rbnode = kzalloc(sizeof(*rbnode), GFP_KERNEL);
+	rbnode = kzalloc(sizeof(*rbnode), GFP_ATOMIC);
 	if (!rbnode)
 		return NULL;
 
@@ -362,12 +362,12 @@ regcache_rbtree_node_alloc(struct regmap *map, unsigned int reg)
 	}
 
 	rbnode->block = kmalloc(rbnode->blklen * map->cache_word_size,
-				GFP_KERNEL);
+				GFP_ATOMIC);
 	if (!rbnode->block)
 		goto err_free;
 
 	rbnode->cache_present = kzalloc(BITS_TO_LONGS(rbnode->blklen) *
-		sizeof(*rbnode->cache_present), GFP_KERNEL);
+		sizeof(*rbnode->cache_present), GFP_ATOMIC);
 	if (!rbnode->cache_present)
 		goto err_free_block;
 
-- 
1.7.5.4

