From 1c971df210e1fe7e682a3096e9a82433332f471a Mon Sep 17 00:00:00 2001
From: Ruchika Gupta <ruchika.gupta@freescale.com>
Date: Thu, 22 May 2014 13:58:56 +0530
Subject: [PATCH 118/255] crypot:caam - Add correct definition for
 reading/writing registers

Correct the definition of rd_reg64 and wr_reg64 for platforms
with Little Endian CAAM block

Signed-off-by: Ruchika Gupta <ruchika.gupta@freescale.com>
[Kevin: Original patch taken from
LS1021A-SDK-V1.1-ARM-SOURCE-20140815-yocto.iso]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/crypto/caam/regs.h | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/crypto/caam/regs.h b/drivers/crypto/caam/regs.h
index 333de58..24cfcdc 100644
--- a/drivers/crypto/caam/regs.h
+++ b/drivers/crypto/caam/regs.h
@@ -83,13 +83,26 @@
 #endif
 #endif
 
-#ifdef CONFIG_ARM
+#ifdef __LITTLE_ENDIAN
 /* These are common macros for Power, put here for ARMs */
 #define setbits32(_addr, _v) writel((readl(_addr) | (_v)), (_addr))
 #define clrbits32(_addr, _v) writel((readl(_addr) & ~(_v)), (_addr))
 #endif
 
 #ifndef CONFIG_64BIT
+#ifdef __LITTLE_ENDIAN
+static inline void wr_reg64(u64 __iomem *reg, u64 data)
+{
+	wr_reg32((u32 __iomem *)reg + 1, (data & 0xffffffff00000000ull) >> 32);
+	wr_reg32((u32 __iomem *)reg, data & 0x00000000ffffffffull);
+}
+
+static inline u64 rd_reg64(u64 __iomem *reg)
+{
+	return (((u64)rd_reg32((u32 __iomem *)reg + 1)) << 32) |
+		((u64)rd_reg32((u32 __iomem *)reg));
+}
+#else
 static inline void wr_reg64(u64 __iomem *reg, u64 data)
 {
 	wr_reg32((u32 __iomem *)reg, (data & 0xffffffff00000000ull) >> 32);
@@ -102,6 +115,7 @@ static inline u64 rd_reg64(u64 __iomem *reg)
 		((u64)rd_reg32((u32 __iomem *)reg + 1));
 }
 #endif
+#endif
 
 #ifdef CONFIG_ARCH_LAYERSCAPE
 #define CONFIG_64K_MEMORY_BLOCK
-- 
2.0.2

