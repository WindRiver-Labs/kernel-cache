From 0198c27b0b78f56bbeb5ab1a177fb2395d9d83cc Mon Sep 17 00:00:00 2001
From: Xiubo Li <Li.Xiubo@freescale.com>
Date: Fri, 1 Aug 2014 13:11:05 +0800
Subject: [PATCH 231/255] fb: release the useless memory mapped address spaces.

This patch will release the memory mapped address space, which won't
be used later. And also set back the bit reverse after setting the
pixel clock for DCU.

Signed-off-by: Xiubo Li <Li.Xiubo@freescale.com>
[Kevin: Original patch taken from
LS1021A-SDK-V1.1-ARM-SOURCE-20140815-yocto.iso]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/video/fsl-dcu-fb.c | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/drivers/video/fsl-dcu-fb.c b/drivers/video/fsl-dcu-fb.c
index 6593642..4482409 100644
--- a/drivers/video/fsl-dcu-fb.c
+++ b/drivers/video/fsl-dcu-fb.c
@@ -506,7 +506,7 @@ static void update_controller(struct fb_info *info)
 	unsigned int div;
 
 	div = fsl_dcu_calc_div(info);
-	dcu_writel(big_endian, (div - 1), base + DCU_DIV_RATIO);
+	dcu_writel(big_endian, div, base + DCU_DIV_RATIO);
 
 	dcu_writel(big_endian, DCU_DISP_SIZE_DELTA_Y(var->yres) |
 		DCU_DISP_SIZE_DELTA_X(var->xres / 16),
@@ -1002,11 +1002,14 @@ static int bypass_tcon(struct device_node *np, bool big_endian)
 	if (!res)
 		return -ENODEV;
 
-	tcon_reg = devm_ioremap_resource(&tcon_pdev->dev, res);
+	tcon_reg = ioremap(res->start, resource_size(res));
 	if (IS_ERR(tcon_reg))
 		return PTR_ERR(tcon_reg);
 
 	dcu_writel(big_endian, TCON_BYPASS_ENABLE, tcon_reg + TCON_CTRL1);
+
+	iounmap(tcon_reg);
+
 	return 0;
 }
 
@@ -1016,6 +1019,7 @@ static int scfg_config(struct device_node *np, bool big_endian)
 	struct platform_device *scfg_pdev;
 	struct resource *res;
 	void __iomem *scfg_reg;
+	u32 val;
 
 	scfg_np = of_parse_phandle(np, "scfg-controller", 0);
 	if (!scfg_np)
@@ -1029,12 +1033,16 @@ static int scfg_config(struct device_node *np, bool big_endian)
 	if (!res)
 		return -ENODEV;
 
-	scfg_reg = devm_ioremap_resource(&scfg_pdev->dev, res);
+	scfg_reg = ioremap(res->start, resource_size(res));
 	if (IS_ERR(scfg_reg))
 		return PTR_ERR(scfg_reg);
 
+	val = dcu_readl(big_endian, scfg_reg + 0x200);
 	dcu_writel(big_endian, 0xffffffff, scfg_reg + 0x200);
 	dcu_writel(big_endian, 0x80000000, scfg_reg + 0x028);
+	dcu_writel(big_endian, val, scfg_reg + 0x200);
+
+	iounmap(scfg_reg);
 
 	return 0;
 }
-- 
2.0.2

