From f79e2f0ec62ae695f336a9631c74b49790c579b3 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Mon, 24 Apr 2017 20:33:21 +0800
Subject: [PATCH] arch/arm/mach-axxia: fix conflicting types compile error

Add prepend to functions in arch/arm/mach-axxia/axxia-gic.c to avoid
conflict with functions in drivers/irqchip/irq-gic.c. This patch fix
compile error as below:

arch/arm/mach-axxia/axxia-gic.c:660:13: error: conflicting types for 'gic_dist_save'
static void gic_dist_save(void)
            ^~~~~~~~~~~~~
In file included from arch/arm/mach-axxia/axxia-gic.c:41:0:
include/linux/irqchip/arm-gic.h:110:6: note: previous declaration of 'gic_dist_save' was here
void gic_dist_save(struct gic_chip_data *gic);
     ^~~~~~~~~~~~~
arch/arm/mach-axxia/axxia-gic.c:695:13: error: conflicting types for 'gic_dist_restore'
static void gic_dist_restore(void)
            ^~~~~~~~~~~~~~~~
In file included from arch/arm/mach-axxia/axxia-gic.c:41:0:
include/linux/irqchip/arm-gic.h:111:6: note: previous declaration of 'gic_dist_restore' was here
void gic_dist_restore(struct gic_chip_data *gic);
     ^~~~~~~~~~~~~~~~
arch/arm/mach-axxia/axxia-gic.c:731:13: error: conflicting types for 'gic_cpu_save'
static void gic_cpu_save(void)
            ^~~~~~~~~~~~
In file included from arch/arm/mach-axxia/axxia-gic.c:41:0:
include/linux/irqchip/arm-gic.h:108:6: note: previous declaration of 'gic_cpu_save' was here
void gic_cpu_save(struct gic_chip_data *gic);
     ^~~~~~~~~~~~
arch/arm/mach-axxia/axxia-gic.c:757:13: error: conflicting types for 'gic_cpu_restore'
static void gic_cpu_restore(void)
            ^~~~~~~~~~~~~~~
In file included from arch/arm/mach-axxia/axxia-gic.c:41:0:
include/linux/irqchip/arm-gic.h:109:6: note: previous declaration of 'gic_cpu_restore' was here
void gic_cpu_restore(struct gic_chip_data *gic);
     ^~~~~~~~~~~~~~~

Signed-off-by: Wang Quanyang <quanyang.wang@windriver.com>
---
 arch/arm/mach-axxia/axxia-gic.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-axxia/axxia-gic.c b/arch/arm/mach-axxia/axxia-gic.c
index 3ed3f07..696be45 100644
--- a/arch/arm/mach-axxia/axxia-gic.c
+++ b/arch/arm/mach-axxia/axxia-gic.c
@@ -657,7 +657,7 @@ static u32 get_cluster_id(void)
  * this function, no interrupts will be delivered by the GIC, and another
  * platform-specific wakeup source must be enabled.
  */
-static void gic_dist_save(void)
+static void axxia_gic_dist_save(void)
 {
 	unsigned int gic_irqs;
 	void __iomem *dist_base;
@@ -692,7 +692,7 @@ static void gic_dist_save(void)
  * handled normally, but any edge interrupts that occured will not be seen by
  * the GIC and need to be handled by the platform-specific wakeup source.
  */
-static void gic_dist_restore(void)
+static void axxia_gic_dist_restore(void)
 {
 	unsigned int gic_irqs;
 	unsigned int i;
@@ -728,7 +728,7 @@ static void gic_dist_restore(void)
 	writel_relaxed(1, dist_base + GIC_DIST_CTRL);
 }
 
-static void gic_cpu_save(void)
+static void axxia_gic_cpu_save(void)
 {
 	int i;
 	u32 *ptr;
@@ -754,7 +754,7 @@ static void gic_cpu_save(void)
 
 }
 
-static void gic_cpu_restore(void)
+static void axxia_gic_cpu_restore(void)
 {
 	int i;
 	u32 *ptr;
@@ -790,18 +790,18 @@ static int _gic_notifier(struct notifier_block *self,
 {
 	switch (cmd) {
 	case CPU_PM_ENTER:
-		gic_cpu_save();
+		axxia_gic_cpu_save();
 		break;
 	case CPU_PM_ENTER_FAILED:
 	case CPU_PM_EXIT:
-		gic_cpu_restore();
+		axxia_gic_cpu_restore();
 		break;
 	case CPU_CLUSTER_PM_ENTER:
-		gic_dist_save();
+		axxia_gic_dist_save();
 		break;
 	case CPU_CLUSTER_PM_ENTER_FAILED:
 	case CPU_CLUSTER_PM_EXIT:
-		gic_dist_restore();
+		axxia_gic_dist_restore();
 		break;
 	}
 
-- 
1.9.1

