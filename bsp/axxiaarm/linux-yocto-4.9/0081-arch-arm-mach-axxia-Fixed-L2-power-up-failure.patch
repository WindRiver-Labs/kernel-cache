From a42fd9a00bd569b8c6e1859ad97a66a51473db89 Mon Sep 17 00:00:00 2001
From: Charlie Paul <cpaul.windriver@gmail.com>
Date: Wed, 29 Apr 2015 00:32:47 -0700
Subject: [PATCH 081/213] arch/arm/mach-axxia: Fixed L2 power up failure

This patch fixes the L2 power up failure. It insures
that there is only one allocation of the dickens
variable.

Signed-off-by: Charlie Paul <cpaul.windriver@gmail.com>
---
 arch/arm/mach-axxia/axxia.c                | 2 +-
 arch/arm/mach-axxia/ddr_retention.c        | 6 +++++-
 arch/arm/mach-axxia/lsi_power_management.c | 8 ++++----
 3 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-axxia/axxia.c b/arch/arm/mach-axxia/axxia.c
index cd00d1d..f209979 100644
--- a/arch/arm/mach-axxia/axxia.c
+++ b/arch/arm/mach-axxia/axxia.c
@@ -65,7 +65,7 @@
 
 #ifdef CONFIG_KEXEC
 
-static void __iomem *dickens;
+//static void __iomem *dickens;
 
 static void set_l3_pstate(u32 newstate)
 {
diff --git a/arch/arm/mach-axxia/ddr_retention.c b/arch/arm/mach-axxia/ddr_retention.c
index aef6007..9ef23a7 100644
--- a/arch/arm/mach-axxia/ddr_retention.c
+++ b/arch/arm/mach-axxia/ddr_retention.c
@@ -30,10 +30,14 @@
 #include <asm/io.h>
 #include <asm/cacheflush.h>
 #include <mach/ncr.h>
+#include "axxia.h"
 
 static void __iomem *nca;
 static void __iomem *apb;
-static void __iomem *dickens;
+#ifndef CONFIG_SMP
+void __iomem *dickens;
+#endif
+
 static int ddr_retention_enabled;
 
 enum {
diff --git a/arch/arm/mach-axxia/lsi_power_management.c b/arch/arm/mach-axxia/lsi_power_management.c
index 41e7159..ab4bed5 100644
--- a/arch/arm/mach-axxia/lsi_power_management.c
+++ b/arch/arm/mach-axxia/lsi_power_management.c
@@ -547,12 +547,12 @@ int pm_cpu_powerup(u32 cpu)
 	if (first_cpu) {
 
 		rval = pm_L2_logical_powerup(cluster, cpu);
-		if (rval)
-			pr_info("CPU %d is powered up with cluster: %d\n", reqcpu, cluster);
-		else {
+		if (rval) {
 			pr_err("CPU: Failed the logical L2 power up\n");
 			goto pm_power_up;
-		}
+		} else
+			pr_info("CPU %d is powered up with cluster: %d\n", reqcpu, cluster);
+
 		cluster_power_up[cluster] = true;
 		pm_clear_bits_syscon_register(NCP_SYSCON_GIC_DISABLE, cluster_mask);
 
-- 
1.9.1

