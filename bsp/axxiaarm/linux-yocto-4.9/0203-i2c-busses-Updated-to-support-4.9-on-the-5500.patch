From d73a3ed4aa236fd12cf25f2d47a061483a479d2b Mon Sep 17 00:00:00 2001
From: Charlie Paul <cpaul.windriver@gmail.com>
Date: Thu, 2 Feb 2017 15:09:29 -0800
Subject: [PATCH 203/213] i2c/busses: Updated to support 4.9 on the 5500

This patch updates the axxia 5500 code to support 4.9

Signed-off-by: Charlie Paul <cpaul.windriver@gmail.com>
---
 drivers/i2c/busses/i2c-axxia.c | 48 ++++++++++++++++++++++++++++++------------
 1 file changed, 34 insertions(+), 14 deletions(-)

diff --git a/drivers/i2c/busses/i2c-axxia.c b/drivers/i2c/busses/i2c-axxia.c
index 45d0fde..70ec66e 100644
--- a/drivers/i2c/busses/i2c-axxia.c
+++ b/drivers/i2c/busses/i2c-axxia.c
@@ -42,6 +42,10 @@ struct i2c_regs {
 	__le32 ibml_low_sext;
 	__le32 timer_clock_div;
 	__le32 i2c_bus_monitor;
+#define BM_SDAC				BIT(3)
+#define BM_SCLC				BIT(2)
+#define BM_SDAS				BIT(1)
+#define BM_SCLS				BIT(0)
 	__le32 soft_reset;
 	__le32 mst_command;
 #define CMD_MANUAL 0x08
@@ -70,21 +74,37 @@ struct i2c_regs {
 			MST_STATUS_AL  | \
 			MST_STATUS_IP  | \
 			MST_STATUS_TSS)
-
-#define MST_INT_ENABLE		0x48
-#define I2C_BUS_MONITOR		0x20
-#define   BM_SDAC		BIT(3)
-#define   BM_SCLC		BIT(2)
-#define   BM_SDAS		BIT(1)
-#define   BM_SCLS		BIT(0)
-
 	__le32 mst_tx_bytes_xfrd;
 	__le32 mst_rx_bytes_xfrd;
+	__le32 slv_addr_dec_ctl;
+	__le32 slv_addr_1;
+	__le32 slv_addr_2;
+	__le32 slv_rx_ctl;
+	__le32 slv_data;
+	__le32 slv_rx_fifo;
+	__le32 slv_int_enable;
+	__le32 slv_int_status;
+	__le32 slv_read_dummy;
+	__le32 reserved;
 	__le32 scl_high_period;
 	__le32 scl_low_period;
 	__le32 spike_fltr_len;
 	__le32 sda_setup_time;
 	__le32 sda_hold_time;
+	__le32 smb_alert;
+	__le32 udid_w7;
+	__le32 udid_w6;
+	__le32 udid_w5;
+	__le32 udid_w4;
+	__le32 udid_w3;
+	__le32 udid_w2;
+	__le32 udid_w1;
+	__le32 udid_w0;
+	__le32 arppec_cfg_stat;
+	__le32 slv_arp_int_enable;
+	__le32 slv_arp_int_status;
+	__le32 mst_arp_int_enable;
+	__le32 mst_arp_int_status;
 };
 
 
@@ -122,8 +142,8 @@ struct axxia_i2c_dev {
 {
 	u32 int_en;
 
-	int_en = readl(idev->base + MST_INT_ENABLE);
-	writel(int_en & ~mask, idev->base + MST_INT_ENABLE);
+	int_en = readl(&idev->regs->mst_int_enable);
+	writel(int_en & ~mask, &idev->regs->mst_int_enable);
 }
 
 static void
@@ -524,7 +544,7 @@ static int axxia_i2c_get_scl(struct i2c_adapter *adap)
 {
 	struct axxia_i2c_dev *idev = i2c_get_adapdata(adap);
 
-	return !!(readl(idev->base + I2C_BUS_MONITOR) & BM_SCLS);
+	return !!(readl(&idev->regs->i2c_bus_monitor) & BM_SCLS);
 }
 
 static void axxia_i2c_set_scl(struct i2c_adapter *adap, int val)
@@ -533,17 +553,17 @@ static void axxia_i2c_set_scl(struct i2c_adapter *adap, int val)
 	u32 tmp;
 
 	/* Preserve SDA Control */
-	tmp = readl(idev->base + I2C_BUS_MONITOR) & BM_SDAC;
+	tmp = readl(&idev->regs->i2c_bus_monitor) & BM_SDAC;
 	if (!val)
 		tmp |= BM_SCLC;
-	writel(tmp, idev->base + I2C_BUS_MONITOR);
+	writel(tmp, &idev->regs->i2c_bus_monitor);
 }
 
 static int axxia_i2c_get_sda(struct i2c_adapter *adap)
 {
 	struct axxia_i2c_dev *idev = i2c_get_adapdata(adap);
 
-	return !!(readl(idev->base + I2C_BUS_MONITOR) & BM_SDAS);
+	return !!(readl(&idev->regs->i2c_bus_monitor) & BM_SDAS);
 }
 
 static struct i2c_bus_recovery_info axxia_i2c_recovery_info = {
-- 
1.9.1

