From dbdd729d3147080e57748fad91c7b54391930690 Mon Sep 17 00:00:00 2001
From: Charlie Paul <cpaul.windriver@gmail.com>
Date: Thu, 19 Jan 2017 13:03:58 -0800
Subject: [PATCH 195/213] fs/vmfs: Updated to support the axxia on Linux 4.9

This patch updates the code so it compiles and runs under Linux
4.9

Signed-off-by: Charlie Paul <Charlie.Paul@windriver.com>
[Quanyang: Delete redundant part which not use on Linux 4.8]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 fs/vmfs/cache.c   |  2 +-
 fs/vmfs/dir.c     |  7 +++++--
 fs/vmfs/inode.c   |  4 ++--
 fs/vmfs/symlink.c | 21 +++++++--------------
 fs/vmfs/vmfs_fs.h |  7 +++++++
 5 files changed, 22 insertions(+), 19 deletions(-)

diff --git a/fs/vmfs/cache.c b/fs/vmfs/cache.c
index d7ac56d..78107e5 100644
--- a/fs/vmfs/cache.c
+++ b/fs/vmfs/cache.c
@@ -99,7 +99,7 @@ void vmfs_invalidate_dircache_entries(struct dentry *parent)
 
 	DEBUG1("name=%s\n", qname->name);
 
-	qname->hash = full_name_hash(qname->name, qname->len);
+	qname->hash = full_name_hash(NULL, qname->name, qname->len);
 
 	if (dentry->d_op && dentry->d_op->d_hash) {
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 38)
diff --git a/fs/vmfs/symlink.c b/fs/vmfs/symlink.c
index 441a240..7319e7b 100644
--- a/fs/vmfs/symlink.c
+++ b/fs/vmfs/symlink.c
@@ -32,11 +32,14 @@ int vmfs_symlink(struct inode *inode, struct dentry *dentry,
 	return vmfs_proc_symlink(server_from_dentry(dentry), dentry, oldname);
 }
 
-static void *vmfs_follow_link(struct dentry *dentry, struct nameidata *nd)
+const char *vmfs_get_link(struct dentry *dentry, struct inode *inode, struct delayed_call *done)
 {
 	char *link = __getname();
 
-	DEBUG1("followlink of %s/%s\n", DENTRY_PATH(dentry));
+	DEBUG1("get link of %s/%s\n", DENTRY_PATH(dentry));
+
+	if (!dentry)
+		return ERR_PTR(-ECHILD);
 
 	if (!link) {
 		link = ERR_PTR(-ENOMEM);
@@ -50,20 +53,10 @@ static void *vmfs_follow_link(struct dentry *dentry, struct nameidata *nd)
 			link[len] = 0;
 		}
 	}
-	nd_set_link(nd, link);
-	return NULL;
-}
-
-static void vmfs_put_link(struct dentry *dentry, struct nameidata *nd, void *p)
-{
-	char *s = nd_get_link(nd);
-
-	if (!IS_ERR(s))
-		__putname(s);
+	return d_inode(dentry)->i_private;
 }
 
 const struct inode_operations vmfs_link_inode_operations = {
 	.readlink = generic_readlink,
-	.follow_link = vmfs_follow_link,
-	.put_link = vmfs_put_link,
+	.get_link = vmfs_get_link,
 };
diff --git a/fs/vmfs/vmfs_fs.h b/fs/vmfs/vmfs_fs.h
index 95a03bf..6d3f2b3 100644
--- a/fs/vmfs/vmfs_fs.h
+++ b/fs/vmfs/vmfs_fs.h
@@ -61,6 +61,13 @@ struct vmfs_cache_head {
 	int eof;
 };
 
+#define PAGE_CACHE_SHIFT	PAGE_SHIFT
+#define PAGE_CACHE_SIZE		PAGE_SIZE
+#define PAGE_CACHE_MASK		PAGE_MASK
+#define PAGE_CACHE_ALIGN(addr)	(((addr)+PAGE_CACHE_SIZE-1)&PAGE_CACHE_MASK)
+
+#define page_cache_get(page)		get_page(page)
+#define page_cache_release(page)	put_page(page)
 #define VMFS_DIRCACHE_SIZE  ((int)(PAGE_CACHE_SIZE/sizeof(struct dentry *)))
 union vmfs_dir_cache {
 	struct vmfs_cache_head head;
-- 
1.9.1

