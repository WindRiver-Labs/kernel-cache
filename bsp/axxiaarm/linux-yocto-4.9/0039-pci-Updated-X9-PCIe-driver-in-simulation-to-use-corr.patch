From 8dcc8683cb75ffd93595dbfad135f021b823bc25 Mon Sep 17 00:00:00 2001
From: SangeethaRao <sangeetha.rao@intel.com>
Date: Wed, 17 Jun 2015 01:48:45 -0500
Subject: [PATCH 039/213] pci: Updated X9 PCIe driver in simulation to use
 correct iATU config

Signed-off-by: SangeethaRao <sangeetha.rao@intel.com>
---
 arch/arm64/boot/dts/intel/axm56xx.dtsi |  6 +++---
 drivers/pci/host/pcie-axxia.c          | 22 ++++++++++------------
 2 files changed, 13 insertions(+), 15 deletions(-)

diff --git a/arch/arm64/boot/dts/intel/axm56xx.dtsi b/arch/arm64/boot/dts/intel/axm56xx.dtsi
index a94c1bb..430b7b8 100644
--- a/arch/arm64/boot/dts/intel/axm56xx.dtsi
+++ b/arch/arm64/boot/dts/intel/axm56xx.dtsi
@@ -238,7 +238,7 @@
 			ranges = <0x00000000 0x000000c0 0x40000000
 				0xc0 0x40000000
 				0x00 0x10000000         /* config space */
-				0x03000000 0x00000000 0xa0000000
+				0x03000000 0x00000000 0x00000000
 				0xc0 0x00000000
 				0x00 0x40000000>;       /* outbound mem */
 			interrupts = <GIC_SPI 123 IRQ_TYPE_LEVEL_HIGH>;
@@ -258,7 +258,7 @@
 			ranges = <0x00000000 0x000000c8 0x40000000
 				0xc8 0x40000000
 				0x00 0x10000000         /* config space */
-				0x03000000 0x00000000 0xa0000000
+				0x03000000 0x00000000 0x00000000
 				0xc8 0x00000000
 				0x00 0x40000000>;       /* outbound mem */
 			interrupts = <GIC_SPI 124 IRQ_TYPE_LEVEL_HIGH>;
@@ -278,7 +278,7 @@
 			ranges = <0x00000000 0x000000d0 0x40000000
 				0xd0 0x40000000
 				0x00 0x10000000         /* config space */
-				0x03000000 0x00000000 0xa0000000
+				0x03000000 0x00000000 0x00000000
 				0xd0 0x00000000
 				0x00 0x40000000>;       /* outbound mem */
 			interrupts = <GIC_SPI 125 IRQ_TYPE_LEVEL_HIGH>;
diff --git a/drivers/pci/host/pcie-axxia.c b/drivers/pci/host/pcie-axxia.c
index 4e6a092..2d64efd 100644
--- a/drivers/pci/host/pcie-axxia.c
+++ b/drivers/pci/host/pcie-axxia.c
@@ -57,6 +57,8 @@
 #define PCIE_ATU_VIEWPORT               0x900
 #define PCIE_ATU_REGION_INBOUND         (0x1 << 31)
 #define PCIE_ATU_REGION_OUTBOUND        (0x0 << 31)
+#define PCIE_ATU_REGION_INDEX3          (0x3 << 0)
+#define PCIE_ATU_REGION_INDEX2          (0x2 << 0)
 #define PCIE_ATU_REGION_INDEX1          (0x1 << 0)
 #define PCIE_ATU_REGION_INDEX0          (0x0 << 0)
 #define PCIE_ATU_CR1                    0x904
@@ -169,7 +171,6 @@ static void axxia_pcie_prog_viewport_cfg0(struct pcie_port *pp, u32 busdev)
 		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX0,
 		PCIE_ATU_VIEWPORT);
 	axxia_pcie_writel_rc(pp, pp->cfg0_base, PCIE_ATU_LOWER_BASE);
-	axxia_pcie_writel_rc(pp, (pp->cfg0_base >> 32), PCIE_ATU_UPPER_BASE);
 	axxia_pcie_writel_rc(pp, pp->cfg0_base + pp->cfg0_size - 1,
 		PCIE_ATU_LIMIT);
 	axxia_pcie_writel_rc(pp, busdev, PCIE_ATU_LOWER_TARGET);
@@ -187,7 +188,6 @@ static void axxia_pcie_prog_viewport_cfg1(struct pcie_port *pp, u32 busdev)
 		PCIE_ATU_VIEWPORT);
 	axxia_pcie_writel_rc(pp, PCIE_ATU_TYPE_CFG1, PCIE_ATU_CR1);
 	axxia_pcie_writel_rc(pp, pp->cfg1_base, PCIE_ATU_LOWER_BASE);
-	axxia_pcie_writel_rc(pp, (pp->cfg1_base >> 32), PCIE_ATU_UPPER_BASE);
 	axxia_pcie_writel_rc(pp, pp->cfg1_base + pp->cfg1_size - 1,
 		PCIE_ATU_LIMIT);
 	axxia_pcie_writel_rc(pp, busdev, PCIE_ATU_LOWER_TARGET);
@@ -199,11 +199,10 @@ static void axxia_pcie_prog_viewport_mem_outbound(struct pcie_port *pp)
 {
 	/* Program viewport 0 : OUTBOUND : MEM */
 	axxia_pcie_writel_rc(pp,
-		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX0,
+		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX2,
 		PCIE_ATU_VIEWPORT);
 	axxia_pcie_writel_rc(pp, PCIE_ATU_TYPE_MEM, PCIE_ATU_CR1);
 	axxia_pcie_writel_rc(pp, pp->mem_mod_base, PCIE_ATU_LOWER_BASE);
-	axxia_pcie_writel_rc(pp, (pp->mem_mod_base >> 32), PCIE_ATU_UPPER_BASE);
 	axxia_pcie_writel_rc(pp, pp->mem_mod_base + pp->mem_size - 1,
 		PCIE_ATU_LIMIT);
 	axxia_pcie_writel_rc(pp, pp->mem_bus_addr, PCIE_ATU_LOWER_TARGET);
@@ -217,11 +216,10 @@ static void axxia_pcie_prog_viewport_io_outbound(struct pcie_port *pp)
 {
 	/* Program viewport 1 : OUTBOUND : IO */
 	axxia_pcie_writel_rc(pp,
-		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX1,
+		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX3,
 		PCIE_ATU_VIEWPORT);
 	axxia_pcie_writel_rc(pp, PCIE_ATU_TYPE_IO, PCIE_ATU_CR1);
 	axxia_pcie_writel_rc(pp, pp->io_mod_base, PCIE_ATU_LOWER_BASE);
-	axxia_pcie_writel_rc(pp, (pp->io_mod_base >> 32), PCIE_ATU_UPPER_BASE);
 	axxia_pcie_writel_rc(pp, pp->io_mod_base + pp->io_size - 1,
 		PCIE_ATU_LIMIT);
 	axxia_pcie_writel_rc(pp, pp->io_bus_addr, PCIE_ATU_LOWER_TARGET);
@@ -437,16 +435,13 @@ void axxia_pcie_setup_rc(struct pcie_port *pp)
 static int axxia_pcie_establish_link(struct pcie_port *pp)
 {
 
-	if (axxia_pcie_link_up(pp)) {
-		dev_err(pp->dev, "Link already up\n");
-		return 0;
-	}
-
 	/* setup root complex */
 	axxia_pcie_setup_rc(pp);
 
 	if (axxia_pcie_link_up(pp))
 		dev_info(pp->dev, "Link up\n");
+	else
+		return 1;
 
 	return 0;
 }
@@ -556,7 +551,10 @@ int __init axxia_pcie_host_init(struct pcie_port *pp)
 	}
 
 
-	axxia_pcie_establish_link(pp);
+	if (axxia_pcie_establish_link(pp)) {
+		dev_err(pp->dev, "axxia_pcie_establish_link failed\n");
+		return -EINVAL;
+	}
 
 
 	/* program correct class for RC */
-- 
1.9.1

