From 094de1261c00991947e943216fc5965692889e04 Mon Sep 17 00:00:00 2001
From: Wang Quanyang <quanyang.wang@windriver.com>
Date: Thu, 30 Jun 2016 13:00:14 +0000
Subject: [PATCH] lib/debugobjects.c: add kernel option to ODEBUG_POOL_SIZE

In RT-kernel's function "allocate_slab", it will keep irq-disable
state to alloc pages when both kmalloc with atomic flag and kernel
is in SYSTEM_BOOTING mode are satisfied. But "allocate_slab" will
call "buffered_rmqueue" which contain "local_spin_lock_irqsave".
It means that when at least 2 threads use kmalloc with atomic flag
to ask for memory, one of them might sleep in irq-disable state. And
when it is rescheduled to run, the irq state will be changed to enable
state.

When we perform a startup test on ftrace, it will cause that serveral
worker thread to call "fill_pool" in lib/debugobjects.c, "fill_pool"
will kmalloc new memory with atomic flag when it check that obj_pool_free
is smaller than ODEBUG_POOL_MIN_LEVEL.

To enlarge the obj_pool_free value will avoid this from happening. So
make a kernel option of ODEBUG_POOL_SIZE in order to set obj_pool_free
value. Or else it will occur the panic as below:

kernel BUG at /kernel-source/mm/slub.c:867!
Internal error: Oops - BUG: 0 [#1] PREEMPT SMP ARM
Modules linked in:
CPU: 3 PID: 45 Comm: kworker/3:1 Tainted: G W 4.1.21-rt13-WR8.0.0.0_preempt-rt #2
Hardware name: LSI Axxia
Workqueue: events update_pages_handler
task: ec11b900 ti: ec12c000 task.ti: ec12c000
PC is at check_slab+0x124/0x128
LR is at alloc_debug_processing+0x2c/0x170
pc : [<c05e5b1c>] lr : [<c05e8140>] psr: 60000113
sp : ec12da78 ip : ec12daa0 fp : ec12da9c
r10: 60000113 r9 : eec48148 r8 : ed006700
r7 : c05fb670 r6 : ed006700 r5 : eec48148 r4 : eec48148
r3 : 20000113 r2 : ece42000 r1 : eec48148 r0 : ed006700
Flags: nZCv IRQs on FIQs on Mode SVC_32 ISA ARM Segment kernel
Control: 30c5387d Table: 00403000 DAC: 55555555
Process kworker/3:1 (pid: 45, stack limit = 0xec12c218)
[<c05e5b1c>] (check_slab) from [<c05e8140>] (alloc_debug_processing+0x2c/0x170)
[<c05e8140>] (alloc_debug_processing) from [<c05e87e8>] (__slab_alloc.constprop.9+0x564/0x5d8)
[<c05e87e8>] (__slab_alloc.constprop.9) from [<c05eae20>] (kmem_cache_alloc+0x4b8/0x6d4)
[<c05eae20>] (kmem_cache_alloc) from [<c05fb670>] (create_object+0x48/0x258)
[<c05fb670>] (create_object) from [<c0e57fb0>] (kmemleak_alloc+0x70/0xd0)
[<c0e57fb0>] (kmemleak_alloc) from [<c05eadb4>] (kmem_cache_alloc+0x44c/0x6d4)
[<c05eadb4>] (kmem_cache_alloc) from [<c08e1d78>] (__debug_object_init+0x374/0x49c)
[<c08e1d78>] (__debug_object_init) from [<c08e24e4>] (debug_object_init+0x28/0x2c)
[<c08e24e4>] (debug_object_init) from [<c04b38e0>] (rcuhead_fixup_activate+0x34/0x4c)
[<c04b38e0>] (rcuhead_fixup_activate) from [<c08e26d0>] (debug_object_activate+0x1bc/0x1f0)
[<c08e26d0>] (debug_object_activate) from [<c04c86e0>] (__call_rcu+0x44/0xb50)
[<c04c86e0>] (__call_rcu) from [<c04c928c>] (call_rcu+0x30/0x38)
[<c04c928c>] (call_rcu) from [<c05fb950>] (put_object+0x60/0x78)
[<c05fb950>] (put_object) from [<c05fbb90>] (delete_object_full+0x30/0x34)
[<c05fbb90>] (delete_object_full) from [<c0e581b0>] (kmemleak_free+0x54/0xa4)
[<c0e581b0>] (kmemleak_free) from [<c05e7bfc>] (kfree+0x2e0/0x5c4)
[<c05e7bfc>] (kfree) from [<c0534858>] (rb_update_pages+0x278/0x314)
[<c0534858>] (rb_update_pages) from [<c053490c>] (update_pages_handler+0x18/0x24)
[<c053490c>] (update_pages_handler) from [<c04579f0>] (process_one_work+0x228/0xb7c)
[<c04579f0>] (process_one_work) from [<c0458398>] (worker_thread+0x54/0x520)
[<c0458398>] (worker_thread) from [<c045ea14>] (kthread+0xf4/0x10c)
[<c045ea14>] (kthread) from [<c0410c58>] (ret_from_fork+0x14/0x3c)
Code: e3a04001 e1a00004 e24bd018 e89da870 (e7f001f2)
 ---[ end trace 0000000000000002 ]---
 ------------[ cut here ]------------
 Kernel panic - not syncing: Fatal exception

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 lib/Kconfig.debug  |    8 ++++++++
 lib/debugobjects.c |    2 +-
 2 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/lib/Kconfig.debug b/lib/Kconfig.debug
index 3b106b0..49b157b 100644
--- a/lib/Kconfig.debug
+++ b/lib/Kconfig.debug
@@ -390,6 +390,14 @@ config DEBUG_OBJECTS
 	  kernel to track the life time of various objects and validate
 	  the operations on those objects.
 
+config ODEBUG_POOL_SIZE
+        int "debug_objects pool size (512-8192)"
+        range 512 8192
+        default "512"
+        depends on DEBUG_OBJECTS
+        help
+          Debug_objects pool size
+
 config DEBUG_OBJECTS_SELFTEST
 	bool "Debug objects selftest"
 	depends on DEBUG_OBJECTS
diff --git a/lib/debugobjects.c b/lib/debugobjects.c
index 8fcdbc2..b91d187 100644
--- a/lib/debugobjects.c
+++ b/lib/debugobjects.c
@@ -21,7 +21,7 @@
 #define ODEBUG_HASH_BITS	14
 #define ODEBUG_HASH_SIZE	(1 << ODEBUG_HASH_BITS)
 
-#define ODEBUG_POOL_SIZE	512
+#define ODEBUG_POOL_SIZE	CONFIG_ODEBUG_POOL_SIZE
 #define ODEBUG_POOL_MIN_LEVEL	256
 
 #define ODEBUG_CHUNK_SHIFT	PAGE_SHIFT
-- 
1.7.5.4

