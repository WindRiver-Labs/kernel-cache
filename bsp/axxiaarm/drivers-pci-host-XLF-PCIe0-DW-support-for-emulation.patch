From 1ead0d4a98664c16f8036b07beb62af6963d036a Mon Sep 17 00:00:00 2001
From: SangeethaRao <sangeetha.rao@intel.com>
Date: Wed, 19 Aug 2015 18:13:34 -0500
Subject: [PATCH 52/59] drivers/pci/host: XLF PCIe0 DW support for emulation

git://git.yoctoproject.org/linux-yocto-4.1 standard/axxia/base
	commit d63415b6b446984892dbabd890256b4f5eb7b887

Signed-off-by: SangeethaRao <sangeetha.rao@intel.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/pci/host/pcie-axxia.c |   24 +++++++++++++++++++++++-
 1 files changed, 23 insertions(+), 1 deletions(-)

diff --git a/drivers/pci/host/pcie-axxia.c b/drivers/pci/host/pcie-axxia.c
index 446abb7..6aff1f6f 100644
--- a/drivers/pci/host/pcie-axxia.c
+++ b/drivers/pci/host/pcie-axxia.c
@@ -96,6 +96,25 @@
 #define AXI_GPREG_MSTR		0x0
 #define CFG_MSI_MODE		(0x1 << 29)
 
+/* SYSCON */
+#define AXXIA_SYSCON_BASE             0x8002C00000
+
+static inline uint32_t axxia_mmio_read_32(uintptr_t addr)
+{
+	return *(uint32_t *)addr;
+}
+
+int
+axxia_is_x9(void)
+{
+	unsigned int pfuse;
+	static void __iomem *base;
+
+	base = ioremap(AXXIA_SYSCON_BASE, 0x1024);
+	pfuse = axxia_mmio_read_32((uintptr_t)(base + 0x34));
+	return (0xb == (pfuse & 0x1f));
+}
+
 struct axxia_pcie {
 	struct pcie_port	pp;
 };
@@ -189,6 +208,7 @@ static void axxia_pcie_prog_viewport_cfg0(struct pcie_port *pp, u32 busdev)
 		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX0,
 		PCIE_ATU_VIEWPORT);
 	axxia_pcie_writel_rc(pp, pp->cfg0_base, PCIE_ATU_LOWER_BASE);
+if (!axxia_is_x9())
 	axxia_pcie_writel_rc(pp, (pp->cfg0_base >> 32), PCIE_ATU_UPPER_BASE);
 	axxia_pcie_writel_rc(pp, pp->cfg0_base + pp->cfg0_size - 1,
 		PCIE_ATU_LIMIT);
@@ -207,6 +227,7 @@ static void axxia_pcie_prog_viewport_cfg1(struct pcie_port *pp, u32 busdev)
 		PCIE_ATU_VIEWPORT);
 	axxia_pcie_writel_rc(pp, PCIE_ATU_TYPE_CFG1, PCIE_ATU_CR1);
 	axxia_pcie_writel_rc(pp, pp->cfg1_base, PCIE_ATU_LOWER_BASE);
+if (!axxia_is_x9())
 	axxia_pcie_writel_rc(pp, (pp->cfg1_base >> 32), PCIE_ATU_UPPER_BASE);
 	axxia_pcie_writel_rc(pp, pp->cfg1_base + pp->cfg1_size - 1,
 		PCIE_ATU_LIMIT);
@@ -219,10 +240,11 @@ static void axxia_pcie_prog_viewport_mem_outbound(struct pcie_port *pp)
 {
 	/* Program viewport 0 : OUTBOUND : MEM */
 	axxia_pcie_writel_rc(pp,
-		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX0,
+		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX2,
 		PCIE_ATU_VIEWPORT);
 	axxia_pcie_writel_rc(pp, PCIE_ATU_TYPE_MEM, PCIE_ATU_CR1);
 	axxia_pcie_writel_rc(pp, pp->mem_mod_base, PCIE_ATU_LOWER_BASE);
+if (!axxia_is_x9())
 	axxia_pcie_writel_rc(pp, (pp->mem_mod_base >> 32), PCIE_ATU_UPPER_BASE);
 	axxia_pcie_writel_rc(pp, pp->mem_mod_base + pp->mem_size - 1,
 		PCIE_ATU_LIMIT);
-- 
1.7.5.4

