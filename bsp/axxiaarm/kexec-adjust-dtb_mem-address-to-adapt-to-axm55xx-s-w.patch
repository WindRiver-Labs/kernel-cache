From 4a222eb97c788d75890d846e8cb0bdda9fbed537 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Fri, 9 Jun 2017 10:08:13 +0800
Subject: [PATCH 2/4] kexec: adjust dtb_mem address to adapt to axm55xx's
 weird entry

When kexec load secondary kernel, it will calculate dtb_mem according to
the formula as below:
dtb_mem = kernel_entry + image_size * 5
But axm55xx's entry is not the default value 0x8000 but 0x408000, this will
result that when zImage as the secondary kernel decompresses,
kernel_entry + kernel_size + zImage_size > dtb_mem, and data of dtb file in
dtb_mem will be overlapped by zImage. So add 4M to dtb_mem to avoid this.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/arm/kernel/machine_kexec.c |   14 +++++++++++++-
 1 files changed, 13 insertions(+), 1 deletions(-)

diff --git a/arch/arm/kernel/machine_kexec.c b/arch/arm/kernel/machine_kexec.c
index b18c1ea..096b5db0 100644
--- a/arch/arm/kernel/machine_kexec.c
+++ b/arch/arm/kernel/machine_kexec.c
@@ -64,9 +64,21 @@ int machine_kexec_prepare(struct kimage *image)
 		err = get_user(header, (__be32*)current_segment->buf);
 		if (err)
 			return err;
-
+#ifdef CONFIG_ARCH_AXXIA
+		if (be32_to_cpu(header) == OF_DT_HEADER) {
+			/*
+			 * In axm55xx, kernel entry is not 0x8000 but 0x408000, this will
+			 * result that when secondary kernel boot, dtb will corrupt because
+			 * entry + kernel_size + zImage_size > dtb_mem, so add 4M to dtb_mem
+			 * to avoid this.
+			 */
+			current_segment->mem += 0x400000;
+			dt_mem = current_segment->mem;
+		}
+#else
 		if (be32_to_cpu(header) == OF_DT_HEADER)
 			dt_mem = current_segment->mem;
+#endif
 	}
 	return 0;
 }
-- 
1.7.5.4

