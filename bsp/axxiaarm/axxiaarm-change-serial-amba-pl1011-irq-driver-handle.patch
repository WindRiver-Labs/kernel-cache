From 033d88ac67dd631661e80e06c6ba4d6210a93fc7 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Wed, 9 Mar 2016 05:21:26 +0000
Subject: [PATCH] axxiaarm: change serial amba-pl1011 irq driver handler to
 oneshot

This is to fix the below hung call trace.

BUG: sleeping function called from invalid context at
kernel-source/kernel/locking/mutex.c:616
in_atomic(): 1, irqs_disabled(): 0, pid: 154, name: irq/88-uart-pl0
INFO: lockdep is turned off. Preemption disabled
at:[<(null)>](null)

CPU: 4 PID: 154 Comm: irq/88-uart-pl0 Not tainted 4.1.18-WR8.0.0.0_cgl #1
Hardware name: LSI Axxia
[<c0417344>] (unwind_backtrace) from [<c04127dc>] (show_stack+0x10/0x14)
[<c04127dc>] (show_stack) from [<c0a5cd48>] (dump_stack+0x98/0xd0)
[<c0a5cd48>] (dump_stack) from [<c044c930>] (__schedule_bug+0xac/0xd4)
[<c044c930>] (__schedule_bug) from [<c0a5ec10>] (__schedule+0x6c/0x5e8)
[<c0a5ec10>] (__schedule) from [<c0a5f22c>] (schedule+0xa0/0xb0)
[<c0a5f22c>] (schedule) from [<c0a5f6f8>](schedule_preempt_disabled+0x14/0x20)
[<c0a5f6f8>] (schedule_preempt_disabled) from [<c0a6059c>](mutex_lock_nested+0x27c/0x460)
[<c0a6059c>] (mutex_lock_nested) from [<c0479958>](irq_finalize_oneshot+0x34/0xcc)
[<c0479958>] (irq_finalize_oneshot) from [<c0479a5c>](irq_forced_thread_fn+0x38/0x54)
[<c0479a5c>] (irq_forced_thread_fn) from [<c0479cb4>](irq_thread+0x100/0x1a0)
[<c0479cb4>] (irq_thread) from [<c0447be0>] (kthread+0xe4/0xfc)
[<c0447be0>] (kthread) from [<c040eee8>] (ret_from_fork+0x14/0x2c)

For the interrupt controller driver axxia-gic.c, which uses the bus lock/unlock
mechanism to serializes all IRQ management interfaces and guarantees that
different callers cannot interfere for multiple clusters, based this mechanism
with the IRQ forced threading, the interrupt thread calling relationship is:
 irq_thread
	irq_forced_thread_fn
		local_bh_disable
			irq_finalize_oneshot
				chip_bus_lock
					==> mutex is taken
				local_bh_enable

In the preempt disable situation, the mutex is taken and would cause the BUG:
sleeping function called from invalid context, and here workaround the irq handler
to one shot to avoid this call trace.

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/tty/serial/amba-pl011.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/tty/serial/amba-pl011.c b/drivers/tty/serial/amba-pl011.c
index 8022853..8bf1b08 100644
--- a/drivers/tty/serial/amba-pl011.c
+++ b/drivers/tty/serial/amba-pl011.c
@@ -1636,7 +1636,7 @@ static int pl011_startup(struct uart_port *port)
 	/*
 	 * Allocate the IRQ
 	 */
-	retval = request_irq(uap->port.irq, pl011_int, 0, "uart-pl011", uap);
+	retval = request_irq(uap->port.irq, pl011_int, IRQF_ONESHOT, "uart-pl011", uap);
 	if (retval)
 		goto clk_dis;
 
-- 
1.7.5.4

