From 1bc8c8ffe069786b79ef6cc02c80aff82ab7735b Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Mon, 28 Dec 2015 04:12:33 -0500
Subject: [PATCH 3/4] dma:lsi-dma32.c: fix build warnings

Removed the redundant code to avoid below warnings:
lsi-dma32.c:670:12: warning: 'gpdma_device_control' defined but
not used [-Wunused-function]
  static int gpdma_device_control(struct dma_chan *chan,
	     ^
lsi-dma32.c:379:13: warning: 'flush_channel' defined but not used
[-Wunused-function]
  static void flush_channel(struct gpdma_channel *dmac)
	      ^
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/dma/lsi-dma32.c |   45 ---------------------------------------------
 1 files changed, 0 insertions(+), 45 deletions(-)

diff --git a/drivers/dma/lsi-dma32.c b/drivers/dma/lsi-dma32.c
index 7604039..038e536 100644
--- a/drivers/dma/lsi-dma32.c
+++ b/drivers/dma/lsi-dma32.c
@@ -376,22 +376,6 @@ static irqreturn_t gpdma_isr(int irqno, void *_dmac)
 	return IRQ_HANDLED;
 }
 
-static void flush_channel(struct gpdma_channel *dmac)
-{
-	unsigned long flags;
-	LIST_HEAD(head);
-
-	spin_lock_irqsave(&dmac->vc.lock, flags);
-	reset_channel(dmac);
-	if (dmac->active) {
-		free_descriptor(&dmac->active->vdesc);
-		dmac->active = NULL;
-	}
-	vchan_get_all_descriptors(&dmac->vc, &head);
-	spin_unlock_irqrestore(&dmac->vc.lock, flags);
-	vchan_dma_desc_free_list(&dmac->vc, &head);
-}
-
 /*
  * Perform soft reset procedure on DMA Engine.  Needed occasionally to work
  * around nasty bug ACP3400 sRIO HW.
@@ -660,34 +644,6 @@ static enum dma_status gpdma_tx_status(struct dma_chan *chan,
 {
 	return dma_cookie_status(chan, cookie, txstate);
 }
-
-
-/**
- * gpdma_device_control - Manipulate all pending operations on a channel,
- * returns zero or error code.
- *
- */
-static int gpdma_device_control(struct dma_chan *chan,
-				enum dma_ctrl_cmd cmd,
-				unsigned long arg)
-{
-	struct gpdma_channel *dmac = to_gpdma_chan(chan);
-
-	if (!dmac)
-		return -EINVAL;
-
-	switch (cmd) {
-	case DMA_TERMINATE_ALL:
-		flush_channel(dmac);
-		break;
-
-	default:
-		return -EOPNOTSUPP;
-	}
-
-	return 0;
-}
-
 static int setup_channel(struct gpdma_channel *dmac, struct device_node *child)
 {
 	struct gpdma_engine *engine = dmac->engine;
@@ -783,7 +739,6 @@ static int gpdma_of_probe(struct platform_device *op)
 	dma->device_prep_dma_memcpy = gpdma_prep_memcpy;
 	dma->device_prep_dma_sg = gpdma_prep_sg;
 	dma->device_issue_pending = gpdma_issue_pending;
-//	dma->device_control = gpdma_device_control;
 	INIT_LIST_HEAD(&dma->channels);
 
 	/* Map device I/O memory
-- 
1.7.5.4

