From 42bb8c73eca2c44da27e147f35555dd40d3b34b3 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Tue, 21 Jun 2016 10:01:57 +0800
Subject: [PATCH] irqchip: gic-v3: Fix access of cpu number's exceeds

In loop of for_each_cpu, the variable cpu can not exceed nr_cpumask_bits
and cpumask_check will check this point. But after call the routine
gic_compute_target_list, the variable cpu has been changed to equal to
nr_cpumask_bits, and then in cpumask_check it will throw out the warning
as below:

------------[ cut here ]------------
WARNING: CPU: 1 PID: 0 at include/linux/cpumask.h:117 gic_raise_softirq+0x154/0x1d8()
Modules linked in:
CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.1.21-rt13-WR8.0.0.0_preempt-rt #24
Hardware name: AXM56xx Simulator (DT)
Call trace:
[<ffffffc000089460>] dump_backtrace+0x0/0x128
[<ffffffc0000895ac>] show_stack+0x24/0x30
[<ffffffc0007cfe90>] dump_stack+0x8c/0xb0
[<ffffffc000099014>] warn_slowpath_common+0xac/0xf8
[<ffffffc000099194>] warn_slowpath_null+0x3c/0x50
[<ffffffc00044f4d4>] gic_raise_softirq+0x154/0x1d8
[<ffffffc000090a10>] smp_cross_call+0x50/0x148
[<ffffffc0000915e4>] smp_send_reschedule+0x3c/0x48
[<ffffffc0000c3918>] resched_curr_lazy+0x60/0x88
[<ffffffc0000cf7b8>] check_preempt_wakeup+0x188/0x208
[<ffffffc0000c3d28>] check_preempt_curr+0xc0/0xc8
[<ffffffc0000c478c>] ttwu_do_wakeup+0x3c/0x198
[<ffffffc0000c4940>] ttwu_do_activate.constprop.42+0x58/0x68
[<ffffffc0000c9290>] try_to_wake_up+0x2c0/0x528
[<ffffffc0000c96dc>] wake_up_state+0x2c/0x38
[<ffffffc0000ddcac>] __swait_wake_locked+0x4c/0xb8
[<ffffffc0000de1e8>] complete+0x48/0x68
[<ffffffc000090d4c>] secondary_start_kernel+0x114/0x178
---[ end trace 0000000000000001 ]---

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/irqchip/irq-gic-v3.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/drivers/irqchip/irq-gic-v3.c b/drivers/irqchip/irq-gic-v3.c
index 49875ad..19fb6f5 100644
--- a/drivers/irqchip/irq-gic-v3.c
+++ b/drivers/irqchip/irq-gic-v3.c
@@ -573,6 +573,8 @@ static void gic_raise_softirq(const struct cpumask *mask, unsigned int irq)
 
 		tlist = gic_compute_target_list(&cpu, mask, cluster_id);
 		gic_send_sgi(cluster_id, tlist, irq);
+		if (cpu >= nr_cpu_ids)
+			break;
 	}
 
 	/* Force the above writes to ICC_SGI1R_EL1 to be executed */
-- 
1.7.5.4

