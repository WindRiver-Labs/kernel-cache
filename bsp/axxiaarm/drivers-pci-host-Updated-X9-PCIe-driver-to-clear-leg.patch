From cdad74c0a4a9f3335d71db7f9c12a0e1c0624418 Mon Sep 17 00:00:00 2001
From: SangeethaRao <sangeetha.rao@intel.com>
Date: Mon, 21 Sep 2015 14:14:17 -0500
Subject: [PATCH 53/59] drivers/pci/host: Updated X9 PCIe driver to clear
 legacy interrupts

git://git.yoctoproject.org/linux-yocto-4.1 standard/axxia/base
	commit 36f88a97e845adb0244ba3d36aa2f5cb60bf6b1a

Signed-off-by: SangeethaRao <sangeetha.rao@intel.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 .../devicetree/bindings/vendor-prefixes.txt        |    1 +
 drivers/pci/host/Kconfig                           |    5 +++--
 drivers/pci/host/pcie-axxia.c                      |   17 +++++++++--------
 3 files changed, 13 insertions(+), 10 deletions(-)

diff --git a/Documentation/devicetree/bindings/vendor-prefixes.txt b/Documentation/devicetree/bindings/vendor-prefixes.txt
index 8033919..2571b33 100644
--- a/Documentation/devicetree/bindings/vendor-prefixes.txt
+++ b/Documentation/devicetree/bindings/vendor-prefixes.txt
@@ -163,6 +163,7 @@ realtek Realtek Semiconductor Corp.
 renesas	Renesas Electronics Corporation
 ricoh	Ricoh Co. Ltd.
 rockchip	Fuzhou Rockchip Electronics Co., Ltd
+rohm Rohm Semiconductor
 samsung	Samsung Semiconductor
 sandisk	Sandisk Corporation
 sbs	Smart Battery System
diff --git a/drivers/pci/host/Kconfig b/drivers/pci/host/Kconfig
index ded9c47..1874435 100644
--- a/drivers/pci/host/Kconfig
+++ b/drivers/pci/host/Kconfig
@@ -6,8 +6,9 @@ config PCI_AXXIA
 	depends on ARCH_AXXIA
 	default ARCH_AXXIA
 	help
-	 Enables support for the Axxia PCIe controller. There are three PEI
-	 controllers on X9. Only RootComplex mode is supported.
+	 Enables support for the Axxia X7 PCIe controller.
+	 There are two PEI controllers on X7. Only RootComplex
+	 mode is supported.
 
 config PCI_AXXIA_DW
 	bool "AXXIA PCIe controller"
diff --git a/drivers/pci/host/pcie-axxia.c b/drivers/pci/host/pcie-axxia.c
index 6aff1f6f..28d4ccc 100644
--- a/drivers/pci/host/pcie-axxia.c
+++ b/drivers/pci/host/pcie-axxia.c
@@ -57,6 +57,8 @@
 #define PCIE_ATU_VIEWPORT               0x900
 #define PCIE_ATU_REGION_INBOUND         (0x1 << 31)
 #define PCIE_ATU_REGION_OUTBOUND        (0x0 << 31)
+#define PCIE_ATU_REGION_INDEX3          (0x3 << 0)
+#define PCIE_ATU_REGION_INDEX2          (0x2 << 0)
 #define PCIE_ATU_REGION_INDEX1          (0x1 << 0)
 #define PCIE_ATU_REGION_INDEX0          (0x0 << 0)
 #define PCIE_ATU_CR1                    0x904
@@ -259,11 +261,10 @@ static void axxia_pcie_prog_viewport_io_outbound(struct pcie_port *pp)
 {
 	/* Program viewport 1 : OUTBOUND : IO */
 	axxia_pcie_writel_rc(pp,
-		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX1,
+		PCIE_ATU_REGION_OUTBOUND | PCIE_ATU_REGION_INDEX3,
 		PCIE_ATU_VIEWPORT);
 	axxia_pcie_writel_rc(pp, PCIE_ATU_TYPE_IO, PCIE_ATU_CR1);
 	axxia_pcie_writel_rc(pp, pp->io_mod_base, PCIE_ATU_LOWER_BASE);
-	axxia_pcie_writel_rc(pp, (pp->io_mod_base >> 32), PCIE_ATU_UPPER_BASE);
 	axxia_pcie_writel_rc(pp, pp->io_mod_base + pp->io_size - 1,
 		PCIE_ATU_LIMIT);
 	axxia_pcie_writel_rc(pp, pp->io_bus_addr, PCIE_ATU_LOWER_TARGET);
@@ -489,7 +490,7 @@ int axxia_pcie_link_up(struct pcie_port *pp)
 
 	axxia_cc_gpreg_readl(pp, PEI_SII_PWR_MGMT_REG, &smlh_state);
 	smlh_state = (smlh_state & PEI_SMLH_LINK_STATE) >> 4;
-	if (smlh_state != 0xb) {
+	if (smlh_state != 0x11) {
 		pr_info("smlh_state = 0x%x\n", smlh_state);
 		pr_err("PCIe LINK IS NOT UP\n");
 		return 0;
@@ -564,16 +565,13 @@ void axxia_pcie_setup_rc(struct pcie_port *pp)
 static int axxia_pcie_establish_link(struct pcie_port *pp)
 {
 
-	if (axxia_pcie_link_up(pp)) {
-		dev_err(pp->dev, "Link already up\n");
-		return 0;
-	}
-
 	/* setup root complex */
 	axxia_pcie_setup_rc(pp);
 
 	if (axxia_pcie_link_up(pp))
 		dev_info(pp->dev, "Link up\n");
+	else
+		return 1;
 
 	return 0;
 }
@@ -601,6 +599,9 @@ static irqreturn_t axxia_pcie_irq_handler(int irq, void *arg)
 		pr_info("RADM_INTB_ASSERTED\n");
 	if (val & RADM_INTA_ASSERTED)
 		pr_info("RADM_INTA_ASSERTED\n");
+	/* Clear the legacy interrupts */
+	axxia_cc_gpreg_writel(pp, val,
+				CC_GPREG_EDG_IRQ_STAT);
 
 	if (IS_ENABLED(CONFIG_PCI_MSI)) {
 		axxia_cc_gpreg_readl(pp, CC_GPREG_EDG_IRQ_STAT_HI, &val);
-- 
1.7.5.4

