From 9e938976ceb084064e9ba7887bb085c89d10a682 Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Wed, 28 Aug 2013 10:53:53 -0400
Subject: [PATCH 0166/1072] ENGR00276845-1 ARM: imx: No need to wait for PLL
 lock when PLL is power down

git://git.freescale.com/imx/linux-2.6-imx.git imx_3.10.17_1.0.0_beta
commit aea0353ab1074740bd20072bef7478a21723e4d3

Add the check for PLL power status before wait for PLL to be locked.
It will not do further operation when PLL is powered down.

Signed-off-by: Anson Huang <b20788@freescale.com>
Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 arch/arm/mach-imx/clk-pllv3.c |   19 ++++++++++++-------
 1 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-imx/clk-pllv3.c b/arch/arm/mach-imx/clk-pllv3.c
index f98674c..21f64e0 100644
--- a/arch/arm/mach-imx/clk-pllv3.c
+++ b/arch/arm/mach-imx/clk-pllv3.c
@@ -45,19 +45,24 @@ struct clk_pllv3 {
 
 #define to_clk_pllv3(_hw) container_of(_hw, struct clk_pllv3, hw)
 
-static int clk_pllv3_wait_for_lock(void __iomem *base, u32 timeout_ms)
+static int clk_pllv3_wait_for_lock(struct clk_pllv3 *pll, u32 timeout_ms)
 {
 	unsigned long timeout = jiffies + msecs_to_jiffies(timeout_ms);
+	u32 val = readl_relaxed(pll->base) & BM_PLL_POWER;
+
+	/* No need to wait for lock when pll is power down */
+	if ((pll->powerup_set && !val) || (!pll->powerup_set && val))
+		return 0;
 
 	/* Wait for PLL to lock */
 	do {
-		if (readl_relaxed(base) & BM_PLL_LOCK)
+		if (readl_relaxed(pll->base) & BM_PLL_LOCK)
 			break;
 		if (time_after(jiffies, timeout))
 			break;
 	} while (1);
 
-	if (readl_relaxed(base) & BM_PLL_LOCK)
+	if (readl_relaxed(pll->base) & BM_PLL_LOCK)
 		return 0;
 	else
 		return -ETIMEDOUT;
@@ -76,7 +81,7 @@ static int clk_pllv3_prepare(struct clk_hw *hw)
 		val &= ~BM_PLL_POWER;
 	writel_relaxed(val, pll->base);
 
-	return clk_pllv3_wait_for_lock(pll->base, 10);
+	return clk_pllv3_wait_for_lock(pll, 10);
 }
 
 static void clk_pllv3_unprepare(struct clk_hw *hw)
@@ -151,7 +156,7 @@ static int clk_pllv3_set_rate(struct clk_hw *hw, unsigned long rate,
 	val |= div;
 	writel_relaxed(val, pll->base);
 
-	return clk_pllv3_wait_for_lock(pll->base, 10);
+	return clk_pllv3_wait_for_lock(pll, 10);
 }
 
 static const struct clk_ops clk_pllv3_ops = {
@@ -207,7 +212,7 @@ static int clk_pllv3_sys_set_rate(struct clk_hw *hw, unsigned long rate,
 	val |= div;
 	writel_relaxed(val, pll->base);
 
-	return clk_pllv3_wait_for_lock(pll->base, 10);
+	return clk_pllv3_wait_for_lock(pll, 10);
 }
 
 static const struct clk_ops clk_pllv3_sys_ops = {
@@ -281,7 +286,7 @@ static int clk_pllv3_av_set_rate(struct clk_hw *hw, unsigned long rate,
 	writel_relaxed(mfn, pll->base + PLL_NUM_OFFSET);
 	writel_relaxed(mfd, pll->base + PLL_DENOM_OFFSET);
 
-	return clk_pllv3_wait_for_lock(pll->base, 10);
+	return clk_pllv3_wait_for_lock(pll, 10);
 }
 
 static const struct clk_ops clk_pllv3_av_ops = {
-- 
1.7.5.4

