From fabd78756a32fee09b78324d24de0bc9f0c7dc05 Mon Sep 17 00:00:00 2001
From: Nicolin Chen <b42378@freescale.com>
Date: Fri, 22 Nov 2013 20:22:47 +0800
Subject: [PATCH 0612/1072] ENGR00289381 mxc: asrc: Fix RCU stall in
 output_task_worker

git://git.freescale.com/imx/linux-2.6-imx.git imx_3.10.17_1.0.0_beta
commit 5b35fca56107cb04bdf342969887b386683da901

In kernel 3.10.17, RCU has its threshold to detect RCU stall. So it might be
risky for us to use a whole second to wait for the completion, which would
be surely returned within 100ms. Thus, we shrink the wait period so as to
circumvent some potential RCU stall issue.

This patch also moved pair_hold into spin_lock protection due to a race with
pair_hold in close() and release().

Signed-off-by: Nicolin Chen <b42378@freescale.com>
Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 drivers/mxc/asrc/mxc_asrc.c |    9 +++++----
 1 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/drivers/mxc/asrc/mxc_asrc.c b/drivers/mxc/asrc/mxc_asrc.c
index 7c1dd8f..a910848 100644
--- a/drivers/mxc/asrc/mxc_asrc.c
+++ b/drivers/mxc/asrc/mxc_asrc.c
@@ -737,10 +737,7 @@ static void asrc_output_task_worker(struct work_struct *w)
 	enum asrc_pair_index index = params->index;
 	unsigned long lock_flags;
 
-	if (!params->pair_hold)
-		return;
-
-	if (!wait_for_completion_interruptible_timeout(&params->output_complete, HZ)) {
+	if (!wait_for_completion_interruptible_timeout(&params->output_complete, HZ / 10)) {
 		pair_err("output dma task timeout\n");
 		return;
 	}
@@ -748,6 +745,10 @@ static void asrc_output_task_worker(struct work_struct *w)
 	init_completion(&params->output_complete);
 
 	spin_lock_irqsave(&pair_lock, lock_flags);
+	if (!params->pair_hold) {
+		spin_unlock_irqrestore(&pair_lock, lock_flags);
+		return;
+	}
 	asrc_read_output_FIFO(params);
 	spin_unlock_irqrestore(&pair_lock, lock_flags);
 
-- 
1.7.5.4

