From 96ea3b46b525469f43e4a9ffc15b26ec90a816f2 Mon Sep 17 00:00:00 2001
From: Nicolin Chen <b42378@freescale.com>
Date: Tue, 24 Sep 2013 11:01:37 +0800
Subject: [PATCH 0586/1072] ENGR00280852-1 mxc: asrc: Add spba clock control
 for sdma shp script

git://git.freescale.com/imx/linux-2.6-imx.git imx_3.10.17_1.0.0_beta
commit b4930140f9dca296d065a546cca6db9077c7af63

ASRC is using shp_2_mcu and mcu_2_shp sdma scripts that use spba bus to
transfer data, while the driver hasn't include the control code of spba
clock.

This would cause multiple pair conversion failed in most of time. Thus
we need to add its support.

Signed-off-by: Nicolin Chen <b42378@freescale.com>
Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 arch/arm/boot/dts/imx6qdl.dtsi |    4 ++--
 drivers/mxc/asrc/mxc_asrc.c    |   15 +++++++++++++--
 include/linux/mxc_asrc.h       |    1 +
 3 files changed, 16 insertions(+), 4 deletions(-)

diff --git a/arch/arm/boot/dts/imx6qdl.dtsi b/arch/arm/boot/dts/imx6qdl.dtsi
index 5fbdab0..1df20df 100644
--- a/arch/arm/boot/dts/imx6qdl.dtsi
+++ b/arch/arm/boot/dts/imx6qdl.dtsi
@@ -280,8 +280,8 @@
 					compatible = "fsl,imx6q-asrc";
 					reg = <0x02034000 0x4000>;
 					interrupts = <0 50 0x04>;
-					clocks = <&clks 107>;
-					clock-names = "core";
+					clocks = <&clks 107>, <&clks 156>;
+					clock-names = "core", "dma";
 					dmas = <&sdma 17 20 0>, <&sdma 18 20 0>, <&sdma 19 20 0>,
 					     <&sdma 20 20 0>, <&sdma 21 20 0>, <&sdma 22 20 0>;
 					dma-names = "rxa", "rxb", "rxc",
diff --git a/drivers/mxc/asrc/mxc_asrc.c b/drivers/mxc/asrc/mxc_asrc.c
index 5ae4221..1d00ed3 100644
--- a/drivers/mxc/asrc/mxc_asrc.c
+++ b/drivers/mxc/asrc/mxc_asrc.c
@@ -370,8 +370,10 @@ int asrc_req_pair(int chn_num, enum asrc_pair_index *index)
 
 	spin_unlock_irqrestore(&data_lock, lock_flags);
 
-	if (!ret)
+	if (!ret) {
 		clk_enable(asrc->asrc_clk);
+		clk_enable(asrc->dma_clk);
+	}
 
 	return ret;
 }
@@ -618,6 +620,7 @@ EXPORT_SYMBOL(asrc_stop_conv);
 
 void asrc_finish_conv(enum asrc_pair_index index)
 {
+	clk_disable(asrc->dma_clk);
 	clk_disable(asrc->asrc_clk);
 	return;
 }
@@ -1925,13 +1928,20 @@ static int mxc_asrc_probe(struct platform_device *pdev)
 		goto err_iomap;
 	}
 
-	asrc->asrc_clk = devm_clk_get(&pdev->dev, NULL);
+	asrc->asrc_clk = devm_clk_get(&pdev->dev, "core");
 	if (IS_ERR(asrc->asrc_clk)) {
 		ret = PTR_ERR(asrc->asrc_clk);
 		goto err_iomap;
 	}
+
+	asrc->dma_clk = devm_clk_get(&pdev->dev, "dma");
+	if (IS_ERR(asrc->dma_clk)) {
+		ret = PTR_ERR(asrc->dma_clk);
+		goto err_iomap;
+	}
 #ifndef ASRC_USE_REGMAP
 	clk_prepare(asrc->asrc_clk);
+	clk_prepare(asrc->dma_clk);
 #endif
 
 	ret = of_property_read_u32_array(pdev->dev.of_node,
@@ -1989,6 +1999,7 @@ err_iomap:
 static int mxc_asrc_remove(struct platform_device *pdev)
 {
 #ifndef ASRC_USE_REGMAP
+	clk_unprepare(asrc->dma_clk);
 	clk_unprepare(asrc->asrc_clk);
 #endif
 	asrc_proc_remove();
diff --git a/include/linux/mxc_asrc.h b/include/linux/mxc_asrc.h
index ecee963..ef56f32 100644
--- a/include/linux/mxc_asrc.h
+++ b/include/linux/mxc_asrc.h
@@ -354,6 +354,7 @@ struct asrc_data {
 	struct class *asrc_class;
 	int asrc_major;
 	struct clk *asrc_clk;
+	struct clk *dma_clk;
 	unsigned int channel_bits;
 	int clk_map_ver;
 	int irq;
-- 
1.7.5.4

