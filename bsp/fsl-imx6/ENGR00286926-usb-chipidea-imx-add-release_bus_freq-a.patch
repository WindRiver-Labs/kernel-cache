From 272a2822bc5df3f9842a47630ed4bb35e78eacba Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Fri, 8 Nov 2013 10:14:18 +0800
Subject: [PATCH 0734/1072] ENGR00286926 usb: chipidea: imx: add
 release_bus_freq at failure path

git://git.freescale.com/imx/linux-2.6-imx.git imx_3.10.17_1.0.0_beta
commit e7912c6a6c842ed90bcacb411b2631bdcbd72330

If not, the request{release}_bus_freq will be mismatch if
fail occurs.

Signed-off-by: Peter Chen <peter.chen@freescale.com>
Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 drivers/usb/chipidea/ci_hdrc_imx.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/chipidea/ci_hdrc_imx.c b/drivers/usb/chipidea/ci_hdrc_imx.c
index c429f35..bf52352 100644
--- a/drivers/usb/chipidea/ci_hdrc_imx.c
+++ b/drivers/usb/chipidea/ci_hdrc_imx.c
@@ -138,7 +138,6 @@ static int ci_hdrc_imx_probe(struct platform_device *pdev)
 	if (IS_ERR(data->usbmisc_data))
 		return PTR_ERR(data->usbmisc_data);
 
-	request_bus_freq(BUS_FREQ_HIGH);
 	data->clk = devm_clk_get(&pdev->dev, NULL);
 	if (IS_ERR(data->clk)) {
 		dev_err(&pdev->dev,
@@ -146,8 +145,10 @@ static int ci_hdrc_imx_probe(struct platform_device *pdev)
 		return PTR_ERR(data->clk);
 	}
 
+	request_bus_freq(BUS_FREQ_HIGH);
 	ret = clk_prepare_enable(data->clk);
 	if (ret) {
+		release_bus_freq(BUS_FREQ_HIGH);
 		dev_err(&pdev->dev,
 			"Failed to prepare or enable clock, err=%d\n", ret);
 		return ret;
@@ -230,6 +231,7 @@ disable_device:
 	ci_hdrc_remove_device(data->ci_pdev);
 err_clk:
 	clk_disable_unprepare(data->clk);
+	release_bus_freq(BUS_FREQ_HIGH);
 	return ret;
 }
 
@@ -289,8 +291,10 @@ static int imx_controller_resume(struct device *dev)
 
 	request_bus_freq(BUS_FREQ_HIGH);
 	ret = clk_prepare_enable(data->clk);
-	if (ret)
+	if (ret) {
+		release_bus_freq(BUS_FREQ_HIGH);
 		return ret;
+	}
 
 	data->in_lpm = false;
 
@@ -309,6 +313,7 @@ static int imx_controller_resume(struct device *dev)
 
 clk_disable:
 	clk_disable_unprepare(data->clk);
+	release_bus_freq(BUS_FREQ_HIGH);
 
 	return ret;
 }
-- 
1.7.5.4

