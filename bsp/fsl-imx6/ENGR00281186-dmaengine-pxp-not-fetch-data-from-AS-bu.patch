From 06272bcca268a3621badc7c0f05cf36043dcba31 Mon Sep 17 00:00:00 2001
From: Robby Cai <R63905@freescale.com>
Date: Wed, 25 Sep 2013 13:35:46 +0800
Subject: [PATCH 0837/1072] ENGR00281186 dmaengine: pxp: not fetch data from
 AS buffer if it's not used

git://git.freescale.com/imx/linux-2.6-imx.git imx_3.10.17_1.0.0_beta
commit 6397cd76bedea2de85949cada4cabf7cbf27577a

There's no explicit BIT in PxP register to disable AS buffer.
The right way to disable AS is to set ULC to a higher value than the LRC.
It has been done once in probe time, but not in run time.
This could cause one potential problem because even when ULC, LRC
and buffer address is set to 0 PxP will still fetch one pixel data from addr 0.
This patch fixes it by set ULC higher than LRC for AS if it's not used (i.e.,
no alpha-blending) at run time.

Signed-off-by: Robby Cai <R63905@freescale.com>
Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 drivers/dma/pxp/pxp_dma_v2.c |   18 +++++++++++-------
 1 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/dma/pxp/pxp_dma_v2.c b/drivers/dma/pxp/pxp_dma_v2.c
index e4733b3..cf0254c 100644
--- a/drivers/dma/pxp/pxp_dma_v2.c
+++ b/drivers/dma/pxp/pxp_dma_v2.c
@@ -398,11 +398,16 @@ static void pxp_set_oln(int layer_no, struct pxps *pxp)
 	dma_addr_t phys_addr = olparams_data->paddr;
 	__raw_writel(phys_addr, pxp->base + HW_PXP_AS_BUF);
 
-	/* Fixme */
-	__raw_writel(0x0, pxp->base + HW_PXP_OUT_AS_ULC);
-	__raw_writel(BF_PXP_OUT_AS_LRC_X(olparams_data->width) |
-		     BF_PXP_OUT_AS_LRC_Y(olparams_data->height),
-		     pxp->base + HW_PXP_OUT_AS_LRC);
+	if (olparams_data->combine_enable) {
+		__raw_writel(0x0, pxp->base + HW_PXP_OUT_AS_ULC);
+		__raw_writel(BF_PXP_OUT_AS_LRC_X(olparams_data->width - 1) |
+			     BF_PXP_OUT_AS_LRC_Y(olparams_data->height - 1),
+			     pxp->base + HW_PXP_OUT_AS_LRC);
+	} else {
+		/* will not fetch data from AS if ULC is at left top of LRC */
+		__raw_writel(0xFFFFFFFF, pxp->base + HW_PXP_OUT_AS_ULC);
+		__raw_writel(0x0, pxp->base + HW_PXP_OUT_AS_LRC);
+	}
 
 	if (olparams_data->pixel_fmt == PXP_PIX_FMT_RGB24)
 		__raw_writel(olparams_data->width << 2,
@@ -431,8 +436,7 @@ static void pxp_set_olparam(int layer_no, struct pxps *pxp)
 		    (BV_PXP_AS_CTRL_ALPHA_CTRL__Override);
 	if (olparams_data->color_key_enable)
 		olparam |= BM_PXP_AS_CTRL_ENABLE_COLORKEY;
-	if (olparams_data->combine_enable)
-		;
+
 	__raw_writel(olparam, pxp->base + HW_PXP_AS_CTRL);
 }
 
-- 
1.7.5.4

