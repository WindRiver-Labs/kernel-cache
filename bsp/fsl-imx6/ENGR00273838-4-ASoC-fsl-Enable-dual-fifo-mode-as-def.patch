From b8e8a4b8e9f246d64c2b1b6a9a0d74a494d6b4ad Mon Sep 17 00:00:00 2001
From: Nicolin Chen <b42378@freescale.com>
Date: Mon, 5 Aug 2013 14:47:59 +0800
Subject: [PATCH 0489/1072] ENGR00273838-4 ASoC: fsl: Enable dual-fifo mode as
 default

git://git.freescale.com/imx/linux-2.6-imx.git imx_3.10.17_1.0.0_beta
commit d523a89222f099b4aae971fc933cc1d2661634b5

Enable dual-fifo to reduce underrun and channel-swap issue.

Acked-by: Wang Shengjiu <b02247@freescale.com>
Signed-off-by: Nicolin Chen <b42378@freescale.com>
Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 sound/soc/fsl/fsl_ssi.c |   19 ++++++++++++++++++-
 1 files changed, 18 insertions(+), 1 deletions(-)

diff --git a/sound/soc/fsl/fsl_ssi.c b/sound/soc/fsl/fsl_ssi.c
index c4452a3..7cef35d 100644
--- a/sound/soc/fsl/fsl_ssi.c
+++ b/sound/soc/fsl/fsl_ssi.c
@@ -138,6 +138,7 @@ struct fsl_ssi_private {
 
 	bool new_binding;
 	bool ssi_on_imx;
+	bool use_dual_fifo;
 	struct clk *clk;
 	struct snd_dmaengine_dai_dma_data dma_params_tx;
 	struct snd_dmaengine_dai_dma_data dma_params_rx;
@@ -386,9 +387,22 @@ static int fsl_ssi_startup(struct snd_pcm_substream *substream,
 		 * data will be written to memory as soon as it's available.
 		 */
 		write_ssi(CCSR_SSI_SFCSR_TFWM0(ssi_private->fifo_depth - 2) |
-			CCSR_SSI_SFCSR_RFWM0(ssi_private->fifo_depth - 2),
+			CCSR_SSI_SFCSR_RFWM0(ssi_private->fifo_depth - 2) |
+			CCSR_SSI_SFCSR_TFWM1(ssi_private->fifo_depth - 2) |
+			CCSR_SSI_SFCSR_RFWM1(ssi_private->fifo_depth - 2),
 			&ssi->sfcsr);
 
+		/* Select Single/Dual fifo mode */
+		if (ssi_private->use_dual_fifo) {
+			write_ssi_mask(&ssi->srcr, 0, CCSR_SSI_SRCR_RFEN1);
+			write_ssi_mask(&ssi->stcr, 0, CCSR_SSI_STCR_TFEN1);
+			write_ssi_mask(&ssi->scr, 0, CCSR_SSI_SCR_TCH_EN);
+		} else {
+			write_ssi_mask(&ssi->srcr, CCSR_SSI_SRCR_RFEN1, 0);
+			write_ssi_mask(&ssi->stcr, CCSR_SSI_STCR_TFEN1, 0);
+			write_ssi_mask(&ssi->scr, CCSR_SSI_SCR_TCH_EN, 0);
+		}
+
 		/*
 		 * We keep the SSI disabled because if we enable it, then the
 		 * DMA controller will start.  It's not supposed to start until
@@ -811,6 +825,9 @@ static int fsl_ssi_probe(struct platform_device *pdev)
 			goto error_dev;
 	}
 
+	/* Enable dual fifo feature as default */
+	ssi_private->use_dual_fifo = true;
+
 	/*
 	 * If codec-handle property is missing from SSI node, we assume
 	 * that the machine driver uses new binding which does not require
-- 
1.7.5.4

