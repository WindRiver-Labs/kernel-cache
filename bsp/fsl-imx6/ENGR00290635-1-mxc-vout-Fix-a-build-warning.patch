From 6705ec74dce97fd9b79c2e1e74dd407e0b57eeca Mon Sep 17 00:00:00 2001
From: Liu Ying <Ying.Liu@freescale.com>
Date: Wed, 4 Dec 2013 11:26:12 +0800
Subject: [PATCH 0867/1072] ENGR00290635-1 mxc vout:Fix a build warning
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

git://git.freescale.com/imx/linux-2.6-imx.git imx_3.10.17_1.0.0_beta
commit a72bba5a6ef39a7ef3c8475050e9fc300428aaa6

This patch fixes the following build warning by allocating
a block of virtual memory to cache an instance of the structure
mxc_vout_output instead of using the stack frame.
drivers/media/platform/mxc/output/mxc_vout.c: In function ‘mxc_vidioc_s_crop’:
drivers/media/platform/mxc/output/mxc_vout.c:1529:1: warning: the frame size of 1040 bytes is larger than 1024 bytes [-Wframe-larger-than=]

Signed-off-by: Liu Ying <Ying.Liu@freescale.com>
(cherry picked from commit 2f545daca1b178e72b335545a2997512871b355b)
Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 drivers/media/platform/mxc/output/mxc_vout.c |   22 ++++++++++++++++------
 1 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/drivers/media/platform/mxc/output/mxc_vout.c b/drivers/media/platform/mxc/output/mxc_vout.c
index a9f6305..05b9d93 100644
--- a/drivers/media/platform/mxc/output/mxc_vout.c
+++ b/drivers/media/platform/mxc/output/mxc_vout.c
@@ -1413,7 +1413,7 @@ static int mxc_vidioc_g_crop(struct file *file, void *fh,
 static int mxc_vidioc_s_crop(struct file *file, void *fh,
 				const struct v4l2_crop *crop)
 {
-	struct mxc_vout_output *vout = fh, pre_vout;
+	struct mxc_vout_output *vout = fh, *pre_vout;
 	struct v4l2_rect *b = &vout->crop_bounds;
 	struct v4l2_crop fix_up_crop;
 	int ret = 0;
@@ -1476,13 +1476,17 @@ static int mxc_vidioc_s_crop(struct file *file, void *fh,
 			return 0;
 	}
 
+	pre_vout = vmalloc(sizeof(*pre_vout));
+	if (!pre_vout)
+		return -ENOMEM;
+
 	/* wait current work finish */
 	if (vout->vbq.streaming)
 		flush_workqueue(vout->v4l_wq);
 
 	mutex_lock(&vout->task_lock);
 
-	memcpy(&pre_vout, vout, sizeof(*vout));
+	memcpy(pre_vout, vout, sizeof(*vout));
 
 	if (vout->disp_support_windows) {
 		vout->task.output.crop.pos.x = 0;
@@ -1514,7 +1518,7 @@ static int mxc_vidioc_s_crop(struct file *file, void *fh,
 			goto done;
 		}
 
-		if (mxc_vout_need_fb_reconfig(vout, &pre_vout)) {
+		if (mxc_vout_need_fb_reconfig(vout, pre_vout)) {
 			ret = config_disp_output(vout);
 			if (ret < 0)
 				v4l2_err(vout->vfd->v4l2_dev,
@@ -1523,6 +1527,7 @@ static int mxc_vidioc_s_crop(struct file *file, void *fh,
 	}
 
 done:
+	vfree(pre_vout);
 	mutex_unlock(&vout->task_lock);
 
 	return ret;
@@ -1626,7 +1631,11 @@ static int mxc_vidioc_s_ctrl(struct file *file, void *fh,
 				struct v4l2_control *ctrl)
 {
 	int ret = 0;
-	struct mxc_vout_output *vout = fh, pre_vout;
+	struct mxc_vout_output *vout = fh, *pre_vout;
+
+	pre_vout = vmalloc(sizeof(*pre_vout));
+	if (!pre_vout)
+		return -ENOMEM;
 
 	/* wait current work finish */
 	if (vout->vbq.streaming)
@@ -1634,7 +1643,7 @@ static int mxc_vidioc_s_ctrl(struct file *file, void *fh,
 
 	mutex_lock(&vout->task_lock);
 
-	memcpy(&pre_vout, vout, sizeof(*vout));
+	memcpy(pre_vout, vout, sizeof(*vout));
 
 	switch (ctrl->id) {
 	case V4L2_CID_ROTATE:
@@ -1677,7 +1686,7 @@ static int mxc_vidioc_s_ctrl(struct file *file, void *fh,
 			goto done;
 		}
 
-		if (mxc_vout_need_fb_reconfig(vout, &pre_vout)) {
+		if (mxc_vout_need_fb_reconfig(vout, pre_vout)) {
 			ret = config_disp_output(vout);
 			if (ret < 0)
 				v4l2_err(vout->vfd->v4l2_dev,
@@ -1686,6 +1695,7 @@ static int mxc_vidioc_s_ctrl(struct file *file, void *fh,
 	}
 
 done:
+	vfree(pre_vout);
 	mutex_unlock(&vout->task_lock);
 
 	return ret;
-- 
1.7.5.4

