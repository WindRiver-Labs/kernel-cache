From 539624562d3d11684fea7d8539b9095f871c4ef6 Mon Sep 17 00:00:00 2001
From: Nicolin Chen <b42378@freescale.com>
Date: Fri, 27 Sep 2013 17:04:53 +0800
Subject: [PATCH 0534/1072] ENGR00280852 ASoC: fsl: Use generic function
 dmaengine_prep_dma_cyclic()

git://git.freescale.com/imx/linux-2.6-imx.git imx_3.10.17_1.0.0_beta
commit 69df0fbfb14eaf4584455cbdc54eff3141b1ccef

Use generic dmaengine_prep_dma_cyclic() in imx-hdmi-dma.c and fsl-asrc.c

Signed-off-by: Nicolin Chen <b42378@freescale.com>
Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 sound/soc/fsl/fsl_asrc.c     |   10 ++--------
 sound/soc/fsl/imx-hdmi-dma.c |    6 ++----
 2 files changed, 4 insertions(+), 12 deletions(-)

diff --git a/sound/soc/fsl/fsl_asrc.c b/sound/soc/fsl/fsl_asrc.c
index 13097a5..dc230ff 100644
--- a/sound/soc/fsl/fsl_asrc.c
+++ b/sound/soc/fsl/fsl_asrc.c
@@ -133,14 +133,8 @@ static int asrc_p2p_request_channel(struct snd_pcm_substream *substream)
 		dev_err(rtd->card->dev, "can not config dma channel\n");
 		goto error;
 	}
-	asrc_p2p->asrc_p2p_desc = chan->device->device_prep_dma_cyclic(
-						chan,
-						0xffff,
-						64,
-						64,
-						DMA_DEV_TO_DEV,
-						0,
-						NULL);
+	asrc_p2p->asrc_p2p_desc = dmaengine_prep_dma_cyclic(chan, 0xffff, 64,
+							64, DMA_DEV_TO_DEV, 0);
 	if (!asrc_p2p->asrc_p2p_desc) {
 		dev_err(&chan->dev->device,
 				"cannot prepare slave dma\n");
diff --git a/sound/soc/fsl/imx-hdmi-dma.c b/sound/soc/fsl/imx-hdmi-dma.c
index b76bd79..8f99d16 100644
--- a/sound/soc/fsl/imx-hdmi-dma.c
+++ b/sound/soc/fsl/imx-hdmi-dma.c
@@ -674,7 +674,6 @@ static int hdmi_sdma_config(struct snd_pcm_substream *substream,
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct device *dai_dev = &params->pdev->dev;
 	struct device *dev = rtd->platform->dev;
-	struct dma_device *dmac_dev;
 	struct dma_slave_config slave_config;
 	int ret;
 
@@ -698,9 +697,8 @@ static int hdmi_sdma_config(struct snd_pcm_substream *substream,
 		return -EINVAL;
 	}
 
-	dmac_dev = params->dma_channel->device;
-	params->desc = dmac_dev->device_prep_dma_cyclic(params->dma_channel,
-			0, 0, 0, DMA_TRANS_NONE, 0, NULL);
+	params->desc = dmaengine_prep_dma_cyclic(params->dma_channel, 0, 0, 0,
+						DMA_TRANS_NONE, 0);
 	if (!params->desc) {
 		dev_err(dev, "failed to prepare slave dma\n");
 		return -EINVAL;
-- 
1.7.5.4

