From d535bcd87144e38cb4d2765883e8fcac97439546 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Mon, 10 Feb 2014 11:12:44 +0800
Subject: [PATCH 1064/1072] clock: fix the build fail for the clk

Since commit 90f8000 change the width to mask, So correct
the value.

commit 90f80008b4cc690edeb4ec77427148f877a7355a
Author: Mike Turquette <mturquette@linaro.org>
Date:   Wed Aug 21 22:53:09 2013 -0700

    clk: divider: replace bitfield width with mask

    The forthcoming Device Tree binding for the divider clock type will use
    a bitfield mask instead of bitfield width, which is what the current
    basic divider implementation uses.

    This patch replaces the u8 width in struct clk_divider with a u32 mask.
    The divider code is updated to use the bit mask internally but the two
    registration functions still accept the width to maintain compatibility
    with existing users.

    Also updated in this patch is the clk-private.h divider macro and two
    Freescale clock divider implementations that are based on struct
    clk_divider.

    Signed-off-by: Mike Turquette <mturquette@linaro.org>
    Tested-by: Shawn Guo <shawn.guo@linaro.org>
    Tested-by: Heiko Stuebner <heiko@sntech.de>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    (cherry picked from commit 3246b343e49608ebfb116aeb443c82bb5035c435)
    Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-imx/clk-busy.c      |    2 +-
 arch/arm/mach-imx/clk-fixup-div.c |    8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-imx/clk-busy.c b/arch/arm/mach-imx/clk-busy.c
index 4bb1bc4..2d56b62 100644
--- a/arch/arm/mach-imx/clk-busy.c
+++ b/arch/arm/mach-imx/clk-busy.c
@@ -95,7 +95,7 @@ struct clk *imx_clk_busy_divider(const char *name, const char *parent_name,
 
 	busy->div.reg = reg;
 	busy->div.shift = shift;
-	busy->div.width = width;
+	busy->div.mask = ((1 << width) - 1);
 	busy->div.lock = &imx_ccm_lock;
 	busy->div_ops = &clk_divider_ops;
 
diff --git a/arch/arm/mach-imx/clk-fixup-div.c b/arch/arm/mach-imx/clk-fixup-div.c
index 21db020..d63768e 100644
--- a/arch/arm/mach-imx/clk-fixup-div.c
+++ b/arch/arm/mach-imx/clk-fixup-div.c
@@ -70,13 +70,13 @@ static int clk_fixup_div_set_rate(struct clk_hw *hw, unsigned long rate,
 	/* Zero based divider */
 	value = divider - 1;
 
-	if (value > div_mask(div))
-		value = div_mask(div);
+	if (value > div->mask)
+		value = div->mask;
 
 	spin_lock_irqsave(div->lock, flags);
 
 	val = readl(div->reg);
-	val &= ~(div_mask(div) << div->shift);
+	val &= ~(div->mask << div->shift);
 	val |= value << div->shift;
 	fixup_div->fixup(&val);
 	writel(val, div->reg);
@@ -115,7 +115,7 @@ struct clk *imx_clk_fixup_divider(const char *name, const char *parent,
 
 	fixup_div->divider.reg = reg;
 	fixup_div->divider.shift = shift;
-	fixup_div->divider.width = width;
+	fixup_div->divider.mask = ((1 << width) - 1);
 	fixup_div->divider.lock = &imx_ccm_lock;
 	fixup_div->divider.hw.init = &init;
 	fixup_div->ops = &clk_divider_ops;
-- 
1.7.5.4

