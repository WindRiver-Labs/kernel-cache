From a010ca31b796887c6758ac3f9b876b380836f59b Mon Sep 17 00:00:00 2001
From: Robby Cai <R63905@freescale.com>
Date: Wed, 11 Sep 2013 10:37:07 +0800
Subject: [PATCH 0853/1072] ENGR00279087-1 camera: enable mclk before read the
 camera ID

git://git.freescale.com/imx/linux-2.6-imx.git imx_3.10.17_1.0.0_beta
commit 159b213d02c58be641d0616519f90486a5d6a20f

When the camera driver is built as module and done 'insmod' command,
the camera will not be detected. The error message is as follows.

$ insmod ov5640_camera.ko
ov5640 2-003c: cannot get io voltage
ov5640_read_reg:write reg error:reg=300a
camera ov5640 is not found

The reason is the mclk need to be enabled before read camera registers.
This patch fixes it.

To balance the usecount for the mclk, we need disable the mclk afterwards.

Signed-off-by: Robby Cai <R63905@freescale.com>
Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 drivers/media/platform/mxc/capture/ov5640.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/drivers/media/platform/mxc/capture/ov5640.c b/drivers/media/platform/mxc/capture/ov5640.c
index cfb86ed..4759b9a 100644
--- a/drivers/media/platform/mxc/capture/ov5640.c
+++ b/drivers/media/platform/mxc/capture/ov5640.c
@@ -1877,6 +1877,8 @@ static int ov5640_probe(struct i2c_client *client,
 		return retval;
 	}
 
+	clk_prepare_enable(ov5640_data.sensor_clk);
+
 	ov5640_data.io_init = ov5640_reset;
 	ov5640_data.i2c_client = client;
 	ov5640_data.pix.pixelformat = V4L2_PIX_FMT_YUYV;
@@ -1896,17 +1898,21 @@ static int ov5640_probe(struct i2c_client *client,
 
 	retval = ov5640_read_reg(OV5640_CHIP_ID_HIGH_BYTE, &chip_id_high);
 	if (retval < 0 || chip_id_high != 0x56) {
+		clk_disable_unprepare(ov5640_data.sensor_clk);
 		pr_warning("camera ov5640 is not found\n");
 		return -ENODEV;
 	}
 	retval = ov5640_read_reg(OV5640_CHIP_ID_LOW_BYTE, &chip_id_low);
 	if (retval < 0 || chip_id_low != 0x40) {
+		clk_disable_unprepare(ov5640_data.sensor_clk);
 		pr_warning("camera ov5640 is not found\n");
 		return -ENODEV;
 	}
 
 	ov5640_power_down(1);
 
+	clk_disable_unprepare(ov5640_data.sensor_clk);
+
 	ov5640_int_device.priv = &ov5640_data;
 	retval = v4l2_int_device_register(&ov5640_int_device);
 
-- 
1.7.5.4

