From 52fd1f7c62a5d32450abc211e5799c6d29a1520b Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Thu, 20 Feb 2014 17:20:36 +0800
Subject: [PATCH 1/2] fsl-imx6: Fix the pci calltrace

The pci_bus_read_config_word get the raw_spinlock of the pci_lock,
When pci_bus_read_config_word call dw_pcie_rd_conf, The dw_pcie_rd_conf
use spin_lock_irqsave to save the critical area. So the calltrace
will generate.

pci_bus_read_config_word(raw_spin_lock_irqsave) -> dw_pcie_rd_conf(spin_lock_irqsave)

BUG: sleeping function called from invalid context at linux/kernel/rtmutex.c:659
in_atomic(): 1, irqs_disabled(): 128, pid: 33, name: kworker/1:1
4 locks held by kworker/1:1/33:
 #0:  (events){......}, at: [<8004d21c>] process_one_work+0x13c/0x57c
 #1:  ((&fw_work->work)){......}, at: [<8004d21c>] process_one_work+0x13c/0x57c
 #2:  (&__lockdep_no_validate__){......}, at: [<803eb3ac>] device_release_driver+0x24/0x38
 #3:  (pci_lock){......}, at: [<8034f198>] pci_bus_read_config_word+0x50/0xa0
Preemption disabled at:[<8034f198>] pci_bus_read_config_word+0x50/0xa0

CPU: 1 PID: 33 Comm: kworker/1:1 Not tainted 3.10.19-rt11-WR6.0.0.0_preempt-rt #5
Workqueue: events request_firmware_work_func
Backtrace:
[<80013360>] (dump_backtrace+0x0/0x118) from [<800135d4>] (show_stack+0x20/0x24)
 r6:ac358000 r5:00000000 r4:ac358000 r3:00000000
[<800135b4>] (show_stack+0x0/0x24) from [<807fe09c>] (dump_stack+0x24/0x28)
[<807fe078>] (dump_stack+0x0/0x28) from [<8006195c>] (__might_sleep+0x12c/0x188)
[<80061830>] (__might_sleep+0x0/0x188) from [<808044d4>] (rt_spin_lock+0x34/0x68)
 r6:00000000 r5:803622fc r4:ac5c0670
[<808044a0>] (rt_spin_lock+0x0/0x68) from [<803622fc>] (dw_pcie_rd_conf+0x78/0x110)
 r5:ac5c0630 r4:ac683800
[<80362284>] (dw_pcie_rd_conf+0x0/0x110) from [<8034f1c0>] (pci_bus_read_config_word+0x78/0xa0)
[<8034f148>] (pci_bus_read_config_word+0x0/0xa0) from [<803569a0>] (do_pci_disable_device+0x30/0x6c)
 r6:80fa3698 r5:00000000 r4:ac24d000
[<80356970>] (do_pci_disable_device+0x0/0x6c) from [<80356a48>] (pci_disable_device+0x6c/0xc0)
 r4:ac24d000
[<803569dc>] (pci_disable_device+0x0/0xc0) from [<8049e398>] (iwl_trans_pcie_free+0x6c/0x80)
 r5:000019f4 r4:ace12000
[<8049e32c>] (iwl_trans_pcie_free+0x0/0x80) from [<80497544>] (iwl_pci_remove+0x38/0x48)
 r5:ace12000 r4:ac24d068
[<8049750c>] (iwl_pci_remove+0x0/0x48) from [<80358700>] (pci_device_remove+0x48/0xcc)
 r5:ac24d000 r4:ac24d068
[<803586b8>] (pci_device_remove+0x0/0xcc) from [<803eb32c>] (__device_release_driver+0x80/0xdc)
 r6:00000005 r5:80fa36cc r4:ac24d068 r3:803586b8
[<803eb2ac>] (__device_release_driver+0x0/0xdc) from [<803eb3b4>] (device_release_driver+0x2c/0x38)
 r5:ac24d068 r4:ac24d09c
[<803eb388>] (device_release_driver+0x0/0x38) from [<8049481c>] (iwl_req_fw_callback+0x65c/0xab0)
 r5:00000000 r4:ac6a6600
[<804941c0>] (iwl_req_fw_callback+0x0/0xab0) from [<803fb290>] (request_firmware_work_func+0x48/0x68)
[<803fb248>] (request_firmware_work_func+0x0/0x68) from [<8004d2b0>] (process_one_work+0x1d0/0x57c)
 r4:ad91d140
[<8004d0e0>] (process_one_work+0x0/0x57c) from [<8004ded8>] (worker_thread+0x148/0x404)
[<8004dd90>] (worker_thread+0x0/0x404) from [<800547ec>] (kthread+0xb4/0xb8)
[<80054738>] (kthread+0x0/0xb8) from [<8000e7a8>] (ret_from_fork+0x14/0x20)
 r7:00000000 r6:00000000 r5:80054738 r4:ac1bfe04

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/pci/host/pci-imx6.c        |    2 +-
 drivers/pci/host/pcie-designware.c |    8 ++++----
 drivers/pci/host/pcie-designware.h |    2 +-
 3 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/pci/host/pci-imx6.c b/drivers/pci/host/pci-imx6.c
index 0b963c8..c57fb17 100644
--- a/drivers/pci/host/pci-imx6.c
+++ b/drivers/pci/host/pci-imx6.c
@@ -435,7 +435,7 @@ static int imx6_add_pcie_port(struct pcie_port *pp,
 	pp->root_bus_nr = -1;
 	pp->ops = &imx6_pcie_host_ops;
 
-	spin_lock_init(&pp->conf_lock);
+	raw_spin_lock_init(&pp->conf_lock);
 	ret = dw_pcie_host_init(pp);
 	if (ret) {
 		dev_err(&pdev->dev, "failed to initialize host\n");
diff --git a/drivers/pci/host/pcie-designware.c b/drivers/pci/host/pcie-designware.c
index e7a82ee..1af30e3 100644
--- a/drivers/pci/host/pcie-designware.c
+++ b/drivers/pci/host/pcie-designware.c
@@ -586,13 +586,13 @@ static int dw_pcie_rd_conf(struct pci_bus *bus, u32 devfn, int where,
 		return PCIBIOS_DEVICE_NOT_FOUND;
 	}
 
-	spin_lock_irqsave(&pp->conf_lock, flags);
+	raw_spin_lock_irqsave(&pp->conf_lock, flags);
 	if (bus->number != pp->root_bus_nr)
 		ret = dw_pcie_rd_other_conf(pp, bus, devfn,
 						where, size, val);
 	else
 		ret = dw_pcie_rd_own_conf(pp, where, size, val);
-	spin_unlock_irqrestore(&pp->conf_lock, flags);
+	raw_spin_unlock_irqrestore(&pp->conf_lock, flags);
 
 	return ret;
 }
@@ -612,13 +612,13 @@ static int dw_pcie_wr_conf(struct pci_bus *bus, u32 devfn,
 	if (dw_pcie_valid_config(pp, bus, PCI_SLOT(devfn)) == 0)
 		return PCIBIOS_DEVICE_NOT_FOUND;
 
-	spin_lock_irqsave(&pp->conf_lock, flags);
+	raw_spin_lock_irqsave(&pp->conf_lock, flags);
 	if (bus->number != pp->root_bus_nr)
 		ret = dw_pcie_wr_other_conf(pp, bus, devfn,
 						where, size, val);
 	else
 		ret = dw_pcie_wr_own_conf(pp, where, size, val);
-	spin_unlock_irqrestore(&pp->conf_lock, flags);
+	raw_spin_unlock_irqrestore(&pp->conf_lock, flags);
 
 	return ret;
 }
diff --git a/drivers/pci/host/pcie-designware.h b/drivers/pci/host/pcie-designware.h
index 5daa36a..9fc3043 100644
--- a/drivers/pci/host/pcie-designware.h
+++ b/drivers/pci/host/pcie-designware.h
@@ -83,7 +83,7 @@ struct pcie_port {
 	void __iomem		*va_cfg1_base;
 	u64			io_base;
 	u64			mem_base;
-	spinlock_t		conf_lock;
+	raw_spinlock_t		conf_lock;
 	struct resource		cfg;
 	struct resource		io;
 	struct resource		mem;
-- 
1.7.5.4

