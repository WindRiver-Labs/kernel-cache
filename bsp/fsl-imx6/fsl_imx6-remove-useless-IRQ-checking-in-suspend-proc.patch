From 49621b2e5ab41c830a17312eaf6fb44f109ad318 Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Mon, 25 May 2015 17:41:36 +0800
Subject: [PATCH] fsl_imx6: remove useless IRQ checking in suspend process

Original "enter" handler of the suspend_ops will check to see if
there are wakeup interrupt firstly, if so, stop the suspend
process. The wakeup interrupt can also been pend after the checking and
even if there is no such checking, the system can also be waken
up immediately. So remove this checking.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 arch/arm/mach-mx6/pm.c |   17 -----------------
 1 files changed, 0 insertions(+), 17 deletions(-)

diff --git a/arch/arm/mach-mx6/pm.c b/arch/arm/mach-mx6/pm.c
index ca22b22..88439a5 100644
--- a/arch/arm/mach-mx6/pm.c
+++ b/arch/arm/mach-mx6/pm.c
@@ -279,7 +279,6 @@ static void mx6_suspend_restore(void)
 
 static int mx6_suspend_enter(suspend_state_t state)
 {
-	unsigned int wake_irq_isr[4];
 	unsigned int cpu_type;
 	bool arm_pg = false;
 	extern void printascii(const char *);
@@ -291,22 +290,6 @@ static int mx6_suspend_enter(suspend_state_t state)
 	else
 		cpu_type = MXC_CPU_MX6SL;
 
-	wake_irq_isr[0] = __raw_readl(gpc_base +
-			GPC_ISR1_OFFSET) & gpc_wake_irq[0];
-	wake_irq_isr[1] = __raw_readl(gpc_base +
-			GPC_ISR2_OFFSET) & gpc_wake_irq[1];
-	wake_irq_isr[2] = __raw_readl(gpc_base +
-			GPC_ISR3_OFFSET) & gpc_wake_irq[2];
-	wake_irq_isr[3] = __raw_readl(gpc_base +
-			GPC_ISR4_OFFSET) & gpc_wake_irq[3];
-	if (wake_irq_isr[0] | wake_irq_isr[1] |
-			wake_irq_isr[2] | wake_irq_isr[3]) {
-		printk(KERN_INFO "There are wakeup irq pending,system resume!\n");
-		printk(KERN_INFO "wake_irq_isr[0-3]: 0x%x, 0x%x, 0x%x, 0x%x\n",
-				wake_irq_isr[0], wake_irq_isr[1],
-				wake_irq_isr[2], wake_irq_isr[3]);
-		return 0;
-	}
 	mx6_suspend_store();
 
 	/*
-- 
1.7.5.4

