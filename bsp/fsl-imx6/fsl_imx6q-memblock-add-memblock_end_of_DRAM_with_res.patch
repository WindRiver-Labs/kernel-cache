From 19ca34758c9f70a010e1c7fd6b10994e3dd44a4d Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Fri, 19 Jul 2013 09:40:45 +0800
Subject: [PATCH 34/38] fsl_imx6q: memblock: add
 memblock_end_of_DRAM_with_reserved() function.

Source: Extract from vendor-drop package, L3.0.35_4.0.0_130424_source.tar.gz

add a function to check the end address including reserved memory,
this API can provide the top address of phy memory,
it can be used to check if the phy memory is valild in some driver
like VPU.

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 include/linux/memblock.h |    1 +
 mm/memblock.c            |   18 ++++++++++++++++++
 2 files changed, 19 insertions(+), 0 deletions(-)

diff --git a/include/linux/memblock.h b/include/linux/memblock.h
index c948c440..d81db2e 100644
--- a/include/linux/memblock.h
+++ b/include/linux/memblock.h
@@ -158,6 +158,7 @@ phys_addr_t __memblock_alloc_base(phys_addr_t size, phys_addr_t align,
 phys_addr_t memblock_phys_mem_size(void);
 phys_addr_t memblock_start_of_DRAM(void);
 phys_addr_t memblock_end_of_DRAM(void);
+extern phys_addr_t memblock_end_of_DRAM_with_reserved(void);
 void memblock_enforce_memory_limit(phys_addr_t memory_limit);
 int memblock_is_memory(phys_addr_t addr);
 int memblock_is_region_memory(phys_addr_t base, phys_addr_t size);
diff --git a/mm/memblock.c b/mm/memblock.c
index 11e5bd1..dd13290d 100644
--- a/mm/memblock.c
+++ b/mm/memblock.c
@@ -838,6 +838,24 @@ phys_addr_t __init_memblock memblock_end_of_DRAM(void)
 	return (memblock.memory.regions[idx].base + memblock.memory.regions[idx].size);
 }
 
+phys_addr_t __init_memblock memblock_end_of_DRAM_with_reserved(void)
+{
+	int idx = memblock.memory.cnt - 1;
+	phys_addr_t top_addr = 0;
+	int i;
+
+	for (i = 0; i < memblock.reserved.cnt; i++) {
+		phys_addr_t t;
+		t = memblock.reserved.regions[i].base
+			+ memblock.reserved.regions[i].size;
+		top_addr = max(t, top_addr);
+	}
+
+	return max(top_addr,
+		   memblock.memory.regions[idx].base
+		   + memblock.memory.regions[idx].size);
+}
+
 void __init memblock_enforce_memory_limit(phys_addr_t limit)
 {
 	unsigned long i;
-- 
1.7.5.4

