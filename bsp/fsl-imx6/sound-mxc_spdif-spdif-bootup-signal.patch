From 9d6fd9bf7ac77d0748e02d716a72df1dce54c0f8 Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Mon, 1 Jun 2015 17:49:22 +0800
Subject: [PATCH] sound/mxc_spdif: spdif bootup signal

the patch comes from:
https://community.freescale.com/thread/314110
https://community.freescale.com/servlet/JiveServlet/download/358496-267317/spdif_bootup_signal.patch.zip

test case:
aplay xxx.wav (1 second)

Signed-off-by: Li Wang <li.wang@windriver.com>
---
 sound/soc/codecs/mxc_spdif.c |   42 +++++++++++++++++++-----------------------
 1 files changed, 19 insertions(+), 23 deletions(-)

diff --git a/sound/soc/codecs/mxc_spdif.c b/sound/soc/codecs/mxc_spdif.c
index eaa7e6e..e5b7c97 100644
--- a/sound/soc/codecs/mxc_spdif.c
+++ b/sound/soc/codecs/mxc_spdif.c
@@ -573,23 +573,13 @@ static int mxc_spdif_playback_start(struct snd_pcm_substream *substream,
 
 	spdif_priv->tx_active = true;
 	regval = __raw_readl(spdif_base_addr + SPDIF_REG_SCR);
-	regval &= 0xfc33e3;
-	regval &= ~SCR_LOW_POWER;
+	regval &= 0xfc33ff;
 	regval |= SCR_TXFIFO_AUTOSYNC | SCR_TXFIFO_NORMAL |
 	    SCR_TXSEL_NORMAL | SCR_USRC_SEL_CHIP | (2 << SCR_TXFIFO_ESEL_BIT);
 	__raw_writel(regval, SPDIF_REG_SCR + spdif_base_addr);
 
-	/* Default clock source from EXTAL, divider by 8, generate 44.1kHz
-	   sample rate */
-	__raw_writel(0x07, SPDIF_REG_STC + spdif_base_addr);
-
 	spdif_intr_enable(INT_TXFIFO_RESYNC, 1);
 
-	err = spdif_set_sample_rate(codec, runtime->rate);
-	if (err < 0) {
-		pr_info("%s - err < 0\n", __func__);
-		return err;
-	}
 	spdif_set_clk_accuracy(IEC958_AES3_CON_CLOCK_1000PPM);
 	spdif_write_channel_status();
 
@@ -622,16 +612,8 @@ static int mxc_spdif_playback_stop(struct snd_pcm_substream *substream,
 	spdif_intr_status();
 	spdif_intr_enable(INT_TXFIFO_RESYNC, 0);
 
-	regval = __raw_readl(SPDIF_REG_SCR + spdif_base_addr) & 0xffffe3;
-	regval |= SCR_TXSEL_OFF;
-	__raw_writel(regval, SPDIF_REG_SCR + spdif_base_addr);
-	regval = __raw_readl(SPDIF_REG_STC + spdif_base_addr) & ~0x7FF;
-	regval |= (0x7 << STC_TXCLK_SRC_OFFSET);
-	__raw_writel(regval, SPDIF_REG_STC + spdif_base_addr);
-
 	regval = __raw_readl(SPDIF_REG_SCR + spdif_base_addr);
 	regval &= ~SCR_DMA_TX_EN;
-	regval |= SCR_LOW_POWER;
 	__raw_writel(regval, SPDIF_REG_SCR + spdif_base_addr);
 
 	spdif_priv->tx_active = false;
@@ -1180,10 +1162,6 @@ static int mxc_spdif_startup(struct snd_pcm_substream *substream,
 	if (ret < 0)
 		goto failed_clk;
 
-	spdif_softreset();
-	/* disable all the interrupts */
-	spdif_intr_enable(0xffffff, 0);
-
 	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
 		ret = mxc_spdif_playback_startup(substream, dai);
 	else
@@ -1254,6 +1232,7 @@ static int __devinit mxc_spdif_probe(struct platform_device *pdev)
 	    (struct mxc_spdif_platform_data *)pdev->dev.platform_data;
 	struct resource *res;
 	struct mxc_spdif_priv *spdif_priv;
+	u32 clk, div, regval;
 	int err, irq;
 	int ret = 0;
 
@@ -1342,6 +1321,23 @@ static int __devinit mxc_spdif_probe(struct platform_device *pdev)
 		goto card_err;
 	}
 
+
+	clk_enable(plat_data->spdif_core_clk);
+	clk_enable(plat_data->spdif_clk);
+	spdif_softreset();
+	spdif_intr_enable(0xffffff, 0);
+	regval = __raw_readl(spdif_base_addr + SPDIF_REG_SCR);
+	regval &= ~((0x7 << 2) | (0x3 << 10) | SCR_LOW_POWER);
+	regval |= SCR_TXSEL_NORMAL | SCR_TXFIFO_ZERO;
+	__raw_writel(regval, spdif_base_addr + SPDIF_REG_SCR);
+	clk = plat_data->spdif_clk_44100;
+	div = plat_data->spdif_div_44100;
+	plat_data->spdif_clk_set_rate(plat_data->spdif_clk,
+					      64 * 44100 * (div + 1));
+	regval = __raw_readl(SPDIF_REG_STC + spdif_base_addr) & ~0x7FF;
+	regval |= STC_TXCLK_SRC_EN | (clk << STC_TXCLK_SRC_OFFSET) | (div - 1);
+	__raw_writel(regval, SPDIF_REG_STC + spdif_base_addr);
+
 	dumpregs(spdif_priv);
 
 	return 0;
-- 
1.7.5.4

