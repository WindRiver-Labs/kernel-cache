From e90860e5a318b43a98a2f56fca2a8467fb359b69 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Wed, 13 Mar 2013 17:34:21 +0800
Subject: [PATCH 12/13] ARM: imx6: spin the cpu until hardware takes it down

commit: c944b0b9354ea06ffb0c8a7178949f1185f9f499 upstream

Though commit 602bf40 (ARM: imx6: exit coherency when shutting down
a cpu) improves the stability of imx6q cpu hotplug a lot, there are
still hangs seen with a more stressful hotplug testing.

It's expected that once imx_enable_cpu(cpu, false) is called, the cpu
will be taken down by hardware immediately, and the code after that
will not get any chance to execute.  However, this is not always the
case from the testing.  The cpu could possibly be alive for a few
cycles before hardware actually takes it down.  So rather than letting
cpu execute some code that could cause a hang in these cycles, let's
make the cpu spin there and wait for hardware to take it down.

Cc: <stable@vger.kernel.org>
Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-mx6/plat_hotplug.c |   28 +++-------------------------
 1 files changed, 3 insertions(+), 25 deletions(-)

diff --git a/arch/arm/mach-mx6/plat_hotplug.c b/arch/arm/mach-mx6/plat_hotplug.c
index d916cc5..ab2be5f 100644
--- a/arch/arm/mach-mx6/plat_hotplug.c
+++ b/arch/arm/mach-mx6/plat_hotplug.c
@@ -65,22 +65,6 @@ static inline void cpu_enter_lowpower(void)
 	  : "cc");
 }
 
-static inline void cpu_leave_lowpower(void)
-{
-	unsigned int v;
-
-	asm volatile(
-		"mrc	p15, 0, %0, c1, c0, 0\n"
-	"	orr	%0, %0, %1\n"
-	"	mcr	p15, 0, %0, c1, c0, 0\n"
-	"	mrc	p15, 0, %0, c1, c0, 1\n"
-	"	orr	%0, %0, %2\n"
-	"	mcr	p15, 0, %0, c1, c0, 1\n"
-	  : "=&r" (v)
-	  : "ir" (CR_C), "ir" (0x40)
-	  : "cc");
-}
-
 /*
  * platform-specific code to shutdown a CPU
  * Called with IRQs disabled
@@ -89,15 +73,9 @@ void platform_cpu_die(unsigned int cpu)
 {
 	cpu_enter_lowpower();
 
-	/* tell cpu0 to kill me */
-	for (;;) {
-		/*
-		 * Execute WFI
-		 */
-		cpu_do_idle();
-	}
-
-	cpu_leave_lowpower();
+	/* spin here until hardware takes it down */
+	while (1)
+	;
 }
 
 int platform_cpu_disable(unsigned int cpu)
-- 
1.7.0

