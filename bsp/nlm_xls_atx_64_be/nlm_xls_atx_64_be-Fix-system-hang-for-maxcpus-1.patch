From f7d6426ed0f4c48b92834cf3e8e873b201acc4db Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Sun, 10 Apr 2011 22:30:44 +0800
Subject: [PATCH] nlm_xls_atx_64_be: Fix system hang for maxcpus=1

The old phoenix_smp_logical_to_hw_mask() implementation is a little
confused and it has introduced a bug: when maxcpus=1 passed, the hw_mask
set by pic_set_affinity() should be 1 to ensure the interrupts sent to
cpu 0, but printk shows hw_mask is 0, which is completely wrong.

This reimplements the phoenix_smp_logical_to_hw_mask() and ensure it
works as expected.

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 arch/mips/rmi/ptr/smp.c |   26 ++++++++++----------------
 1 files changed, 10 insertions(+), 16 deletions(-)

diff --git a/arch/mips/rmi/ptr/smp.c b/arch/mips/rmi/ptr/smp.c
index e57ec02..56270fc 100644
--- a/arch/mips/rmi/ptr/smp.c
+++ b/arch/mips/rmi/ptr/smp.c
@@ -168,21 +168,18 @@ unsigned int fast_syscall_cpumask_phy = 0x1;
 extern __u32 ipi_3_counter_tx[NR_CPUS][NR_CPUS];
 extern __u32 ipi_3_counter_rx[NR_CPUS];
 
-static uint32_t phoenix_logical_hi_mask;
-
 uint32_t phoenix_smp_logical_to_hw_mask(const cpumask_t *mask)
 {
-	uint32_t hw_mask, logical_mask;
-
-	/* The boot cpu is always at index 0 of the logical map; following
-	* are CPUs 0 to <boot cpu-1>, then CPUs <boot cpu+1> to 31.
-	* We have to take that map and find the map of physical CPUs that
-	* are online.
-	*/
-	logical_mask = (uint32_t)(mask->bits[0]);
-	hw_mask = (logical_mask & ~phoenix_logical_hi_mask) >> 1;
-	hw_mask |= logical_mask & phoenix_logical_hi_mask;
-	return hw_mask;
+	uint32_t physmap = 0;
+	int i;
+
+	/* Set affinity comes with logical cpu ids, move this to physical cpu ids */
+	for (i = 0; i < NR_CPUS; i++) {
+		if ((1 << i) & (uint32_t) mask->bits[0])
+			physmap |= (1 << cpu_logical_map(i));
+	}
+
+	return physmap;
 }
 
 void __init rmi_smp_setup(void)
@@ -226,9 +223,6 @@ void __init rmi_smp_setup(void)
 	}
 	cpu_present_map = cpu_possible_map;
 
-	for (i = boot_cpu + 1; i < NR_CPUS; i++)
-		phoenix_logical_hi_mask |= (1 << i);
-
 	fast_syscall_cpumask_phy = (unsigned int)phys_cpu_present_map.bits[0];
 
 	printk("Phys CPU present map: %lx, possible map %lx\n", 
-- 
1.6.5.2

