From d613e2eb5f3ed763e0280d03f02857bf94ab827c Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Mon, 7 Mar 2011 10:48:47 +0800
Subject: [PATCH 1/3] nlm_xls_atx_64_be: Clean up rmi_smp_setup

This clears the cpu_possible_map and adds phys_cpu_present_map,
cpu_present_map.

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 arch/mips/rmi/ptr/smp.c |   20 +++++++++++---------
 1 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/arch/mips/rmi/ptr/smp.c b/arch/mips/rmi/ptr/smp.c
index 09a1301..8ba3f89 100644
--- a/arch/mips/rmi/ptr/smp.c
+++ b/arch/mips/rmi/ptr/smp.c
@@ -123,13 +123,14 @@ extern __u32 ipi_3_counter_rx[NR_CPUS];
 
 void __init rmi_smp_setup(void)
 {
-	int num_cpus = 1;
+	cpumask_t phys_cpu_present_map;	/* Bitmask of available CPUs */
+	int num_cpus;
+	int i, j;
 	__u32 boot_cpu_online_map = 0, boot_cpu = 0x0;
 
-	int i = 0, j = 0;
-
 	boot_cpu = hard_smp_processor_id();
 
+	cpus_clear(phys_cpu_present_map);
 	cpus_clear(cpu_possible_map);
 
 	/* Initialize the ipi debug stat variables */
@@ -145,25 +146,26 @@ void __init rmi_smp_setup(void)
 
 	/* Fill the entries for boot cpu */
 	boot_cpu_online_map &= (~(1 << boot_cpu));
-	cpu_set(boot_cpu, cpu_possible_map);
+	cpu_set(boot_cpu, phys_cpu_present_map);
 	__cpu_number_map[boot_cpu] = 0;
 	__cpu_logical_map[0] = boot_cpu;
 	cpu_set(0, cpu_possible_map);
 
+	num_cpus = 1;
 	for(i = 0; i < NR_CPUS; i++) {
 		if (boot_cpu_online_map & (1<<i)) {
-			cpu_set(i, cpu_possible_map);
+			cpu_set(num_cpus, cpu_possible_map);
 			__cpu_number_map[i] = num_cpus;
 			__cpu_logical_map[num_cpus] = i;
-			cpu_set(num_cpus, cpu_possible_map);
-			++num_cpus;
+			num_cpus++;
 		}
 	}
+	cpu_present_map = cpu_possible_map;
 
-	fast_syscall_cpumask_phy = (unsigned int)cpu_possible_map.bits[0];
+	fast_syscall_cpumask_phy = (unsigned int)phys_cpu_present_map.bits[0];
 
 	printk("Phys CPU present map: %lx, possible map %lx\n", 
-	       (unsigned long)cpu_possible_map.bits[0], 
+	       (unsigned long)phys_cpu_present_map.bits[0],
 	       (unsigned long)cpu_possible_map.bits[0]);
 
 	printk("Detected %i Slave CPU(s)\n", num_cpus);
-- 
1.6.5.2

