From 9ca5ded02bc101b4329cee0e86d385ec9bc8361f Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Wed, 19 May 2010 23:57:28 +0800
Subject: [PATCH 01/38] nlm_xls_atx_64_be: platform cpu type support

XLS (aka: phoenix) support wait instruction, so add support for it.

XLS processor implements the MIPS64 R1 instruction set and has some
enhancements. (Atomic Swap, Atomic Load and Add, Message send etc ...)
So add a new cpu type CPU_PHOENIX not use the CPU_MIPS64.

XLS's cache is diffrent from the legency 4K processor's which is
marked as MIPS_CPU_4K_CACHE in linux kernel, so add a new cache
type MIPS_CPU_PHOENIX_CACHE.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/include/asm/cpu-features.h |    3 ++
 arch/mips/include/asm/cpu.h          |    4 ++-
 arch/mips/kernel/cpu-probe.c         |   48 ++++++++++++++++++++++++++++++++++
 3 files changed, 54 insertions(+), 1 deletions(-)

diff --git a/arch/mips/include/asm/cpu-features.h b/arch/mips/include/asm/cpu-features.h
index ac73ced..fcd1031 100644
--- a/arch/mips/include/asm/cpu-features.h
+++ b/arch/mips/include/asm/cpu-features.h
@@ -41,6 +41,9 @@
 #ifndef cpu_has_octeon_cache
 #define cpu_has_octeon_cache	0
 #endif
+#ifndef cpu_has_phoenix_cache
+#define cpu_has_phoenix_cache	(cpu_data[0].options & MIPS_CPU_PHOENIX_CACHE)
+#endif
 #ifndef cpu_has_fpu
 #define cpu_has_fpu		(current_cpu_data.options & MIPS_CPU_FPU)
 #define raw_cpu_has_fpu		(raw_current_cpu_data.options & MIPS_CPU_FPU)
diff --git a/arch/mips/include/asm/cpu.h b/arch/mips/include/asm/cpu.h
index a5acda4..968f3f4 100644
--- a/arch/mips/include/asm/cpu.h
+++ b/arch/mips/include/asm/cpu.h
@@ -33,6 +33,7 @@
 #define PRID_COMP_TOSHIBA	0x070000
 #define PRID_COMP_LSI		0x080000
 #define PRID_COMP_LEXRA		0x0b0000
+#define PRID_COMP_RMI		0x0c0000
 #define PRID_COMP_CAVIUM	0x0d0000
 
 
@@ -224,7 +225,7 @@ enum cpu_type_enum {
 	 * MIPS64 class processors
 	 */
 	CPU_5KC, CPU_20KC, CPU_25KF, CPU_SB1, CPU_SB1A, CPU_LOONGSON2,
-	CPU_CAVIUM_OCTEON, CPU_CAVIUM_OCTEON_PLUS,
+	CPU_CAVIUM_OCTEON, CPU_CAVIUM_OCTEON_PLUS, CPU_PHOENIX,
 
 	CPU_LAST
 };
@@ -274,6 +275,7 @@ enum cpu_type_enum {
 #define MIPS_CPU_VINT		0x00080000 /* CPU supports MIPSR2 vectored interrupts */
 #define MIPS_CPU_VEIC		0x00100000 /* CPU supports MIPSR2 external interrupt controller mode */
 #define MIPS_CPU_ULRI		0x00200000 /* CPU has ULRI feature */
+#define MIPS_CPU_PHOENIX_CACHE	0x00400000 /* CPU has ULRI feature */
 
 /*
  * CPU ASE encodings
diff --git a/arch/mips/kernel/cpu-probe.c b/arch/mips/kernel/cpu-probe.c
index 7e1e51b..a27733a 100644
--- a/arch/mips/kernel/cpu-probe.c
+++ b/arch/mips/kernel/cpu-probe.c
@@ -25,6 +25,8 @@
 #include <asm/system.h>
 #include <asm/watch.h>
 #include <asm/spram.h>
+
+#include <asm/rmi/sim.h>
 /*
  * Not all of the MIPS CPUs have the "wait" instruction available. Moreover,
  * the implementation of the "wait" feature differs between CPU families. This
@@ -116,6 +118,17 @@ static void au1k_wait(void)
 		: : "r" (au1k_wait));
 }
 
+static void phoenix_wait(void)
+{
+	__asm__(
+		".set push\n\t"
+		".set\tmips3\n\t"
+		".set noreorder\n\t"
+		"c0 0x60\n\t"
+		".set pop\n\t"
+		);
+}
+
 static int __initdata nowait;
 
 static int __init wait_disable(char *s)
@@ -189,6 +202,9 @@ void __init check_wait(void)
 	case CPU_TX49XX:
 		cpu_wait = r4k_wait_irqoff;
 		break;
+	case CPU_PHOENIX:
+		cpu_wait = phoenix_wait;
+		break;
 	case CPU_ALCHEMY:
 		cpu_wait = au1k_wait;
 		break;
@@ -934,6 +950,35 @@ platform:
 	}
 }
 
+static __inline__ void cpu_probe_rmi(struct cpuinfo_mips *c, unsigned int cpu)
+{
+	decode_configs(c);
+
+	c->options &= ~MIPS_CPU_4K_CACHE;
+
+	switch (c->processor_id & 0xff00) {
+
+	default:
+		c->cputype = CPU_PHOENIX;
+		__cpu_name[cpu] = "XLS416 Rev B0";
+
+		/* setup the xls chip family types */
+		set_xls_chip_family_types();
+
+		c->isa_level = MIPS_CPU_ISA_M64R1;
+		c->options = (MIPS_CPU_TLB     |
+		  MIPS_CPU_4KEX    |
+		  MIPS_CPU_COUNTER |
+		  MIPS_CPU_DIVEC   |
+		  MIPS_CPU_WATCH   |
+		  MIPS_CPU_PREFETCH |
+		  MIPS_CPU_EJTAG   |
+		  MIPS_CPU_PHOENIX_CACHE |
+		  MIPS_CPU_LLSC);
+		break;
+	}
+}
+
 const char *__cpu_name[NR_CPUS];
 const char *__elf_platform;
 
@@ -975,6 +1020,9 @@ __cpuinit void cpu_probe(void)
 	case PRID_COMP_CAVIUM:
 		cpu_probe_cavium(c, cpu);
 		break;
+	case PRID_COMP_RMI:
+		cpu_probe_rmi(c, cpu);
+		break;
 	}
 
 	BUG_ON(!__cpu_name[cpu]);
-- 
1.6.5.2

