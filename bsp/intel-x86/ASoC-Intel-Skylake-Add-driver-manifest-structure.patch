From 0c7cc64e72d9063bb48f8ad9f026a2a3c6a90a59 Mon Sep 17 00:00:00 2001
From: Shreyas NC <shreyas.nc@intel.com>
Date: Sun, 5 Feb 2017 16:34:53 +0530
Subject: [PATCH 4084/4301] ASoC: Intel: Skylake: Add driver manifest
 structure

commit 23a0f5f4301923fdf47470a75382dc621d5fda05 from
git://git@github.com:01org/linux-intel-4.9.git

The topology manifest would include module common data including
resource and interface table.

So, define the structure accordingly to represent topology manifest
data for the driver.

Change-Id: I1d8f6a4eae674fc4630f2b01bb21a32a7a4ffbf4
Signed-off-by: Shreyas NC <shreyas.nc@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/13455
Reviewed-by: Kale, Sanyog R <sanyog.r.kale@intel.com>
Reviewed-by: Singh, Guneshwor O <guneshwor.o.singh@intel.com>
Reviewed-by: Diwakar, Praveen <praveen.diwakar@intel.com>
Tested-by: Sm, Bhadur A <bhadur.a.sm@intel.com>
---
 sound/soc/intel/skylake/skl-sst-ipc.h        |   10 ++
 sound/soc/intel/skylake/skl-topology.h       |   14 +---
 sound/soc/intel/skylake/skl-tplg-interface.h |    7 +-
 sound/soc/intel/skylake/skl.c                |    3 +-
 sound/soc/intel/skylake/skl.h                |  118 ++++++++++++++++++++++++++
 5 files changed, 138 insertions(+), 14 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-sst-ipc.h b/sound/soc/intel/skylake/skl-sst-ipc.h
index 28875df..a2fd42b 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.h
+++ b/sound/soc/intel/skylake/skl-sst-ipc.h
@@ -80,6 +80,16 @@ struct skl_d0i3_data {
 struct skl_lib_info {
 	char name[SKL_LIB_NAME_LENGTH];
 	const struct firmware *fw;
+	u32 pre_load_pgs;
+	u16 man_major;
+	u16 man_minor;
+	u16 man_hotfix;
+	u16 man_build;
+	u16 ext_man_major;
+	u16 ext_man_minor;
+	u8 man_nr_modules;
+	u8 ext_man_nr_modules;
+	u8 binary_type;
 };
 
 struct injector_data {
diff --git a/sound/soc/intel/skylake/skl-topology.h b/sound/soc/intel/skylake/skl-topology.h
index 01760cc..513b5e1 100644
--- a/sound/soc/intel/skylake/skl-topology.h
+++ b/sound/soc/intel/skylake/skl-topology.h
@@ -45,6 +45,9 @@
 #define SKL_DEFAULT_MIC_SEL_GAIN	0x3FF
 #define SKL_MIC_SEL_SWITCH	0x3
 
+#define SKL_OUTPUT_PIN 0
+#define SKL_INPUT_PIN  1
+
 enum skl_channel_index {
 	SKL_CHANNEL_LEFT = 0,
 	SKL_CHANNEL_RIGHT = 1,
@@ -209,17 +212,6 @@ union skl_connector_node_id {
 	} node;
 };
 
-struct skl_module_fmt {
-	u32 channels;
-	u32 s_freq;
-	u32 bit_depth;
-	u32 valid_bit_depth;
-	u32 ch_cfg;
-	u32 interleaving_style;
-	u32 sample_type;
-	u32 ch_map;
-};
-
 struct skl_module_cfg;
 
 struct skl_mod_inst_map {
diff --git a/sound/soc/intel/skylake/skl-tplg-interface.h b/sound/soc/intel/skylake/skl-tplg-interface.h
index ae0dc56..bcebc34 100644
--- a/sound/soc/intel/skylake/skl-tplg-interface.h
+++ b/sound/soc/intel/skylake/skl-tplg-interface.h
@@ -29,8 +29,11 @@
 #define SKL_CONTROL_TYPE_BYTE_PROBE	0x101
 
 #define HDA_SST_CFG_MAX	900 /* size of copier cfg*/
-#define MAX_IN_QUEUE 8
-#define MAX_OUT_QUEUE 8
+#define SKL_MAX_MODULES	32
+#define SKL_MAX_PATH_CONFIGS	8
+#define SKL_MAX_MODULES_IN_PIPE	8
+#define SKL_MAX_NAME_LENGTH	16
+#define SKL_MOD_NAME 40 /* Length of GUID string */
 
 #define SDW_MAX_MASTERS 4
 
diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index 4a13cca..64e5290 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -33,9 +33,10 @@
 #include <sound/hdaudio.h>
 #include <sound/hda_i915.h>
 #include <sound/compress_driver.h>
-#include "skl.h"
+
 #include "skl-sst-dsp.h"
 #include "skl-sst-ipc.h"
+#include "skl.h"
 
 static struct skl_machine_pdata skl_dmic_data;
 
diff --git a/sound/soc/intel/skylake/skl.h b/sound/soc/intel/skylake/skl.h
index cc1915f..3c72176 100644
--- a/sound/soc/intel/skylake/skl.h
+++ b/sound/soc/intel/skylake/skl.h
@@ -24,6 +24,7 @@
 #include <sound/hda_register.h>
 #include <sound/hdaudio_ext.h>
 #include "skl-nhlt.h"
+#include "skl-sst-ipc.h"
 
 #define SKL_SUSPEND_DELAY 2000
 
@@ -35,6 +36,13 @@
 #define AZX_REG_VS_D0I3C_CIP      0x1 /* Command in progress */
 #define AZX_REG_VS_D0I3C_I3       0x4 /* D0i3 enable */
 
+#define SKL_MAX_MODULE_RESOURCES 8
+#define SKL_MAX_MODULE_FORMATS 8
+#define SKL_MAX_IN_QUEUE 8
+#define SKL_MAX_OUT_QUEUE 8
+#define SKL_MAX_LL_SRC_CFG  8
+#define SKL_MAX_DMA_CFG    24
+
 struct skl_dsp_resource {
 	u32 max_mcps;
 	u32 max_mem;
@@ -45,6 +53,112 @@ struct skl_dsp_resource {
 struct skl_debug;
 struct snd_soc_dapm_widget;
 
+struct skl_module_fmt {
+	u32 channels;
+	u32 s_freq;
+	u32 bit_depth;
+	u32 valid_bit_depth;
+	u32 ch_cfg;
+	u32 interleaving_style;
+	u32 sample_type;
+	u32 ch_map;
+};
+
+struct skl_module_pin_fmt {
+	u8 pin_id;
+	struct skl_module_fmt pin_fmt;
+};
+
+struct skl_module_intf {
+	u8 fmt_idx;
+	u8 nr_input_fmt;
+	u8 nr_output_fmt;
+	struct skl_module_pin_fmt input[SKL_MAX_IN_QUEUE];
+	struct	skl_module_pin_fmt output[SKL_MAX_OUT_QUEUE];
+};
+
+struct skl_module_pin_resources {
+	u8 pin_index;
+	u32 buf_size;
+};
+
+struct skl_module_res {
+	u8 res_idx;
+	u32 is_pages;
+	u32 cps;
+	u32 ibs;
+	u32 obs;
+	u32 dma_buffer_size;
+	u32 cpc;
+	u32 mod_flags;
+	u32 obls;
+	u8 nr_input_pins;
+	u8 nr_output_pins;
+	struct skl_module_pin_resources input[SKL_MAX_IN_QUEUE];
+	struct skl_module_pin_resources output[SKL_MAX_OUT_QUEUE];
+};
+
+struct skl_module {
+	u16 major_version;
+	u16 minor_version;
+	u16 hotfix_version;
+	u16 build_version;
+	uuid_le uuid;
+	u8 loadable;
+	u8 input_pin_type;
+	u8 output_pin_type;
+	u8 auto_start;
+	u8 max_input_pins;
+	u8 max_output_pins;
+	u8 max_instance_count;
+	char library_name[SKL_LIB_NAME_LENGTH];
+	u8 nr_resources;
+	u8 nr_interfaces;
+	struct skl_module_res resources[SKL_MAX_MODULE_RESOURCES];
+	struct skl_module_intf formats[SKL_MAX_MODULE_FORMATS];
+};
+
+struct skl_dma_config {
+	u32 min_size;
+	u32 max_size;
+} __packed;
+
+struct skl_mem_status {
+	u32 type;
+	u32 size;
+	u32 mem_reclaim;
+} __packed;
+
+struct skl_dsp_freq {
+	u32 type;
+	u32 size;
+	u32 freq;
+} __packed;
+
+struct skl_dma_buff_cfg {
+	u32 type;
+	u32 size;
+	struct skl_dma_config dma_cfg[SKL_MAX_DMA_CFG];
+} __packed;
+
+struct skl_sch_config {
+	u32 type;
+	u32 length;
+	u32 sys_tick_mul;
+	u32 sys_tick_div;
+	u32 ll_src;
+	u32 num_cfg;
+	u32 node_info[SKL_MAX_LL_SRC_CFG];
+} __packed;
+
+struct skl_fw_cfg_info {
+	struct skl_mem_status mem_sts;
+	struct skl_dsp_freq slw_frq;
+	struct skl_dsp_freq fst_frq;
+	struct skl_dma_buff_cfg dmacfg;
+	struct skl_sch_config sch_cfg;
+} __packed;
+
 struct skl {
 	struct hdac_ext_bus ebus;
 	struct pci_dev *pci;
@@ -72,6 +186,10 @@ struct skl {
 	struct skl_debug *debugfs;
 	bool nhlt_override;
 	bool mod_set_get_status;
+	struct skl_fw_cfg_info cfg;
+	u8 nr_modules;
+	u8 conf_version;
+	struct skl_module *modules;
 };
 
 #define skl_to_ebus(s)	(&(s)->ebus)
-- 
1.7.5.4

