From ac0fb48500598b548680b098f17cf19d99464030 Mon Sep 17 00:00:00 2001
From: Hardik T Shah <hardik.t.shah@intel.com>
Date: Wed, 9 Mar 2016 22:45:29 +0530
Subject: [PATCH 3840/4301] SoundWire: Add API to enable and disable the
 stream.

commit 2f3222eadbc0a4053cbfd927ff3cbb6099d483aa from
git://git@github.com:01org/linux-intel-4.9.git

This patch implement bus driver API to enable and disable
the stream. All the ports of all the masters and slaves
part of the stream tag gets enabled or disable simultaneously
with bank switch.

Change-Id: Ie205402a78a1e417f49962bacef529f6e9491fac
Signed-off-by: Hardik T Shah <hardik.t.shah@intel.com>
---
 drivers/sdw/sdw.c |   59 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 59 insertions(+), 0 deletions(-)

diff --git a/drivers/sdw/sdw.c b/drivers/sdw/sdw.c
index c37fb6c..e71b940 100644
--- a/drivers/sdw/sdw.c
+++ b/drivers/sdw/sdw.c
@@ -1684,6 +1684,65 @@ int sdw_config_port(struct sdw_master *mstr,
 }
 EXPORT_SYMBOL_GPL(sdw_config_port);
 
+int sdw_prepare_and_enable(int stream_tag, bool enable)
+{
+
+	int i;
+	struct sdw_stream_tag *stream_tags = sdw_core.stream_tags;
+	struct sdw_stream_tag *stream = NULL;
+
+	/* TBD: SRK, Check with hardik whether both locks needed
+	 * stream and core??
+	 */
+	mutex_lock(&sdw_core.core_lock);
+
+	for (i = 0; i < SDW_NUM_STREAM_TAGS; i++) {
+		if (stream_tag == stream_tags[i].stream_tag) {
+			stream = &stream_tags[i];
+			break;
+		}
+	}
+	if (stream == NULL) {
+		mutex_unlock(&sdw_core.core_lock);
+		WARN_ON(1); /* Return from here after unlocking core*/
+		return -EINVAL;
+	}
+	mutex_lock(&stream->stream_lock);
+	/* Next patch adds real function here */
+	mutex_unlock(&stream->stream_lock);
+	mutex_unlock(&sdw_core.core_lock);
+	return 0;
+}
+EXPORT_SYMBOL_GPL(sdw_prepare_and_enable);
+
+int sdw_disable_and_unprepare(int stream_tag, bool unprepare)
+{
+	int i;
+	struct sdw_stream_tag *stream_tags = sdw_core.stream_tags;
+	struct sdw_stream_tag *stream = NULL;
+
+	mutex_lock(&sdw_core.core_lock);
+
+	for (i = 0; i < SDW_NUM_STREAM_TAGS; i++) {
+		if (stream_tag == stream_tags[i].stream_tag) {
+			stream = &stream_tags[i];
+			break;
+		}
+	}
+	if (stream == NULL) {
+		mutex_unlock(&sdw_core.core_lock);
+		WARN_ON(1); /* Return from here after unlocking core*/
+		return -EINVAL;
+	}
+	mutex_lock(&stream->stream_lock);
+	/* Next patch adds real function here */
+	mutex_unlock(&stream->stream_lock);
+
+	mutex_unlock(&sdw_core.core_lock);
+	return 0;
+}
+EXPORT_SYMBOL_GPL(sdw_disable_and_unprepare);
+
 static void sdw_exit(void)
 {
 	device_unregister(&sdw_slv);
-- 
1.7.5.4

