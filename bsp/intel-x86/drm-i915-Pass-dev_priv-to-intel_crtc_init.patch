From 839d4e3e0f800e10ffdf37aee4fde486d62feb4b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ville=20Syrj=C3=A4l=C3=A4?= <ville.syrjala@linux.intel.com>
Date: Mon, 31 Oct 2016 22:37:11 +0200
Subject: [PATCH 1695/4301] drm/i915: Pass dev_priv to intel_crtc_init()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

commit 5ab0d85b6bf01a9e47e74ebc2876534115444c6e upstream

Unify our approach to things by passing around dev_priv instead of dev.

Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
Link: http://patchwork.freedesktop.org/patch/msgid/1477946245-14134-13-git-send-email-ville.syrjala@linux.intel.com
Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
---
 drivers/gpu/drm/i915/intel_display.c |   11 +++++------
 1 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 1673ec1..697f93e 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -15274,9 +15274,8 @@ static void skl_init_scalers(struct drm_i915_private *dev_priv,
 	scaler_state->scaler_id = -1;
 }
 
-static int intel_crtc_init(struct drm_device *dev, enum pipe pipe)
+static int intel_crtc_init(struct drm_i915_private *dev_priv, enum pipe pipe)
 {
-	struct drm_i915_private *dev_priv = to_i915(dev);
 	struct intel_crtc *intel_crtc;
 	struct intel_crtc_state *crtc_state = NULL;
 	struct intel_plane *primary = NULL;
@@ -15297,7 +15296,7 @@ static int intel_crtc_init(struct drm_device *dev, enum pipe pipe)
 	crtc_state->base.crtc = &intel_crtc->base;
 
 	/* initialize shared scalers */
-	if (INTEL_INFO(dev)->gen >= 9) {
+	if (INTEL_GEN(dev_priv) >= 9) {
 		if (pipe == PIPE_C)
 			intel_crtc->num_scalers = 1;
 		else
@@ -15328,7 +15327,7 @@ static int intel_crtc_init(struct drm_device *dev, enum pipe pipe)
 		goto fail;
 	}
 
-	ret = drm_crtc_init_with_planes(dev, &intel_crtc->base,
+	ret = drm_crtc_init_with_planes(&dev_priv->drm, &intel_crtc->base,
 					&primary->base, &cursor->base,
 					&intel_crtc_funcs,
 					"pipe %c", pipe_name(pipe));
@@ -15341,7 +15340,7 @@ static int intel_crtc_init(struct drm_device *dev, enum pipe pipe)
 	 */
 	intel_crtc->pipe = pipe;
 	intel_crtc->plane = (enum plane) pipe;
-	if (HAS_FBC(dev) && INTEL_INFO(dev)->gen < 4) {
+	if (HAS_FBC(dev_priv) && INTEL_GEN(dev_priv) < 4) {
 		DRM_DEBUG_KMS("swapping pipes & planes for FBC\n");
 		intel_crtc->plane = !pipe;
 	}
@@ -16604,7 +16603,7 @@ int intel_modeset_init(struct drm_device *dev)
 	for_each_pipe(dev_priv, pipe) {
 		int ret;
 
-		ret = intel_crtc_init(dev, pipe);
+		ret = intel_crtc_init(dev_priv, pipe);
 		if (ret) {
 			drm_mode_config_cleanup(dev);
 			return ret;
-- 
1.7.5.4

