From a327efd7406ee904dab7eaf30c6884b38d8e9575 Mon Sep 17 00:00:00 2001
From: Hardik T Shah <hardik.t.shah@intel.com>
Date: Wed, 9 Mar 2016 14:28:50 +0530
Subject: [PATCH 3829/4301] SoundWire: Add PM support to bus driver.

commit b87f3488105f77aea99d2236270ae250b534a0f1 from
git://git@github.com:01org/linux-intel-4.9.git

This patch adds PM support to bus driver. This adds both
Runtime PM and Legacy PM support.

Change-Id: I9e34c4c06fe41e5da04ce58e6d335f0f29aca6b8
Signed-off-by: Hardik T Shah <hardik.t.shah@intel.com>
---
 drivers/sdw/sdw.c |   70 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 70 insertions(+), 0 deletions(-)

diff --git a/drivers/sdw/sdw.c b/drivers/sdw/sdw.c
index 0bcd470..da48f2f 100644
--- a/drivers/sdw/sdw.c
+++ b/drivers/sdw/sdw.c
@@ -314,12 +314,82 @@ static int sdw_match(struct device *dev, struct device_driver *driver)
 
 }
 
+#ifdef CONFIG_PM_SLEEP
+static int sdw_legacy_suspend(struct device *dev, pm_message_t mesg)
+{
+	struct sdw_slave *sdw_slv = NULL;
+	struct sdw_slave_driver *driver;
+
+	if (dev->type == &sdw_slv_type)
+		sdw_slv = to_sdw_slave(dev);
+
+	if (!sdw_slv || !dev->driver)
+		return 0;
+
+	driver = to_sdw_slave_driver(dev->driver);
+	if (!driver->suspend)
+		return 0;
+
+	return driver->suspend(sdw_slv, mesg);
+}
+
+static int sdw_legacy_resume(struct device *dev)
+{
+	struct sdw_slave *sdw_slv = NULL;
+	struct sdw_slave_driver *driver;
+
+	if (dev->type == &sdw_slv_type)
+		sdw_slv = to_sdw_slave(dev);
+
+	if (!sdw_slv || !dev->driver)
+		return 0;
+
+	driver = to_sdw_slave_driver(dev->driver);
+	if (!driver->resume)
+		return 0;
+
+	return driver->resume(sdw_slv);
+}
+
+static int sdw_pm_suspend(struct device *dev)
+{
+	const struct dev_pm_ops *pm = dev->driver ? dev->driver->pm : NULL;
+
+	if (pm)
+		return pm_generic_suspend(dev);
+	else
+		return sdw_legacy_suspend(dev, PMSG_SUSPEND);
+}
+
+static int sdw_pm_resume(struct device *dev)
+{
+	const struct dev_pm_ops *pm = dev->driver ? dev->driver->pm : NULL;
+
+	if (pm)
+		return pm_generic_resume(dev);
+	else
+		return sdw_legacy_resume(dev);
+}
+
+static const struct dev_pm_ops soundwire_pm = {
+	.suspend = sdw_pm_suspend,
+	.resume = sdw_pm_resume,
+	.runtime_suspend = pm_generic_runtime_suspend,
+	.runtime_resume = pm_generic_runtime_resume,
+};
+
+#else
+#define sdw_pm_suspend		NULL
+#define sdw_pm_resume		NULL
+#endif
+
 struct bus_type sdw_bus_type = {
 	.name		= "soundwire",
 	.match		= sdw_match,
 	.probe		= sdw_probe,
 	.remove		= sdw_remove,
 	.shutdown	= sdw_shutdown,
+	.pm		= &soundwire_pm,
 };
 EXPORT_SYMBOL_GPL(sdw_bus_type);
 
-- 
1.7.5.4

