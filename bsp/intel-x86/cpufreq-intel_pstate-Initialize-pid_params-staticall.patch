From 28e9fc5c51baffba2aef10fedcc9c22f118e486c Mon Sep 17 00:00:00 2001
From: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
Date: Tue, 28 Mar 2017 00:05:44 +0200
Subject: [PATCH 41/45] cpufreq: intel_pstate: Initialize pid_params
 statically

commit 5c43905369bb85fd518363e743b68e2407d83f7c upstream

Notice that both the existing struct cpu_defaults instances in which
PID parameters are actually initialized use the same values of those
parameters, so it is not really necessary to copy them over to
pid_params dynamically.

Instead, initialize pid_params statically with those values and
drop the unused pid_policy member from struct cpu_defaults along
with copy_pid_params() used for initializing it.

Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
[Xulin: some changes to apply the patch]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/cpufreq/intel_pstate.c |   16 ----------------
 1 files changed, 0 insertions(+), 16 deletions(-)

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index cea2af6..8fe5150 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -1601,17 +1601,6 @@ static int __init intel_pstate_msrs_not_valid(void)
 	return 0;
 }
 
-static void __init copy_pid_params(struct pstate_adjust_policy *policy)
-{
-	pid_params.sample_rate_ms = policy->sample_rate_ms;
-	pid_params.sample_rate_ns = pid_params.sample_rate_ms * NSEC_PER_MSEC;
-	pid_params.p_gain_pct = policy->p_gain_pct;
-	pid_params.i_gain_pct = policy->i_gain_pct;
-	pid_params.d_gain_pct = policy->d_gain_pct;
-	pid_params.deadband = policy->deadband;
-	pid_params.setpoint = policy->setpoint;
-}
-
 static void __init copy_cpu_funcs(struct pstate_funcs *funcs)
 {
 	pstate_funcs.get_max   = funcs->get_max;
@@ -1764,13 +1753,8 @@ static int __init intel_pstate_init(void)
 	if (!id)
 		return -ENODEV;
 
-	cpu_def = (struct cpu_defaults *)id->driver_data;
-
 	copy_cpu_funcs((struct pstate_funcs *)id->driver_data);
 	
-	if (pstate_funcs.get_target_pstate == get_target_pstate_use_performance)
-		copy_pid_params(&cpu_def->pid_policy);
-
 	if (intel_pstate_msrs_not_valid())
 		return -ENODEV;
 
-- 
1.7.5.4

