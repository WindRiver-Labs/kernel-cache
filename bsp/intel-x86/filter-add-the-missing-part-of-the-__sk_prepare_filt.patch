From 1fa715e2ade08b4dd2ccf948d82023f267aef069 Mon Sep 17 00:00:00 2001
From: Liwei Song <liwei.song@windriver.com>
Date: Wed, 15 Jul 2015 16:31:00 +0800
Subject: [PATCH] filter: add the missing part of the __sk_prepare_filter

The following calltrace has been observed:

Call Trace:
 [<ffffffff817cd2ad>] ? sk_filter+0x3d/0xb0
 [<ffffffff817a42ad>] sock_queue_rcv_skb+0x5d/0x240
 [<ffffffff8188c179>] packet_rcv_spkt+0x129/0x190
 [<ffffffff817b807c>] __netif_receive_skb_core+0x2bc/0x810
 [<ffffffff817b85ed>] __netif_receive_skb+0x1d/0x60
 [<ffffffff817b865d>] netif_receive_skb+0x2d/0xa0
 [<ffffffff817b8da0>] napi_gro_receive+0x80/0xb0
 [<ffffffff816083af>] e1000_receive_skb+0x7f/0xe0
 [<ffffffff816094d2>] e1000_clean_rx_irq+0x252/0x3e0
 [<ffffffff81075968>] ? update_rq_clock.part.71+0x18/0x40
 [<ffffffff8161097d>] e1000e_poll+0x6d/0x300
 [<ffffffff817b9912>] net_rx_action+0x122/0x250
 [<ffffffff8104ae82>] do_current_softirqs+0x182/0x340
 [<ffffffff810c8a80>] ? irq_thread_fn+0x50/0x50
 [<ffffffff8104b0a6>] local_bh_enable+0x66/0x80
 [<ffffffff810c8abb>] irq_forced_thread_fn+0x3b/0x70
 [<ffffffff810c8cdf>] irq_thread+0x10f/0x150
 [<ffffffff810c8d20>] ? irq_thread+0x150/0x150
 [<ffffffff810c8bd0>] ? wake_threads_waitq+0x40/0x40
 [<ffffffff81069362>] kthread+0xb2/0xc0
 [<ffffffff810692b0>] ? kthread_worker_fn+0x1b0/0x1b0
 [<ffffffff8191eef8>] ret_from_fork+0x58/0x90
 [<ffffffff810692b0>] ? kthread_worker_fn+0x1b0/0x1b0

Fix the missing change when merge upstream commit:
f8bbbfc3b97f4c7a6c7c23185e520b22bfc3a21d

this patch is part of this upstream commit.
Use to control the use of the function __sk_migrate_filter(); without this
init function, fp->bpf_func will become null, then calltrace happen.

Signed-off-by: Liwei Song <liwei.song@windriver.com>
---
 net/core/filter.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/net/core/filter.c b/net/core/filter.c
index 9e04163..21f12d0 100644
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@ -1547,6 +1547,7 @@ static struct sk_filter *__sk_prepare_filter(struct sk_filter *fp,
 	int err;
 
 	fp->bpf_func = NULL;
+	fp->jited = 0;
 
 	err = sk_chk_filter(fp->insns, fp->len);
 	if (err)
-- 
1.7.5.4

