From 710cda1165cd2fa6f4ebc00f3ec2a08267f9bada Mon Sep 17 00:00:00 2001
From: Hardik T Shah <hardik.t.shah@intel.com>
Date: Wed, 23 Mar 2016 13:03:04 +0530
Subject: [PATCH 3891/4301] SoundWire: Add support to re-enumerate slave.

commit 1142797438ccdc050db00cf71317f67da2a8bc24 from
git://git@github.com:01org/linux-intel-4.9.git

Slaves might get un-attached because of the link
going down due to power management or due to the
glitch in clock, where sync is lost. Add support
to re-enumerate the slave with same slave number.

Change-Id: I443d060cf96c7e7df4e05a188079443f71f0af76
Signed-off-by: Hardik T Shah <hardik.t.shah@intel.com>
---
 drivers/sdw/sdw.c |   35 +++++++++++++++++++++++++++++++++++
 1 files changed, 35 insertions(+), 0 deletions(-)

diff --git a/drivers/sdw/sdw.c b/drivers/sdw/sdw.c
index 5fdeebf..6eb90f2 100644
--- a/drivers/sdw/sdw.c
+++ b/drivers/sdw/sdw.c
@@ -486,6 +486,29 @@ static int sdw_program_slv_address(struct sdw_master *mstr,
 	return 0;
 }
 
+static int sdw_find_slave(struct sdw_master *mstr, struct sdw_msg
+						*msg, bool *found)
+{
+	struct sdw_slv_addr *sdw_addr;
+	int ret = 0, i, comparison;
+	*found = false;
+
+	sdw_lock_mstr(mstr);
+	sdw_addr = mstr->sdw_addr;
+	for (i = 1; i <= SOUNDWIRE_MAX_DEVICES; i++) {
+		comparison = memcmp(sdw_addr[i].dev_id, msg->buf,
+				SDW_NUM_DEV_ID_REGISTERS);
+		if ((!comparison) && (sdw_addr[i].assigned == true)) {
+				*found = true;
+				break;
+		}
+	}
+	sdw_unlock_mstr(mstr);
+	if (*found == true)
+		ret = sdw_program_slv_address(mstr, sdw_addr[i].slv_number);
+	return ret;
+}
+
 static void sdw_free_slv_number(struct sdw_master *mstr,
 		int slv_number)
 {
@@ -508,6 +531,7 @@ static int sdw_register_slave(struct sdw_master *mstr)
 	u8 buf[6] = {0};
 	struct sdw_slave *sdw_slave;
 	int slv_number = -1;
+	bool found = false;
 
 
 	msg.ssp_tag = 0;
@@ -520,6 +544,17 @@ static int sdw_register_slave(struct sdw_master *mstr)
 	msg.addr_page2 = 0x0;
 
 	while ((ret = (sdw_slave_transfer(mstr, &msg, 1)) == 1)) {
+		ret = sdw_find_slave(mstr, &msg, &found);
+		if (found && !ret) {
+			dev_info(&mstr->dev, "Slave already registered\n");
+			continue;
+		/* Even if slave registering fails we continue for other
+		 * slave status, but we flag error
+		 */
+		} else if (ret) {
+			dev_err(&mstr->dev, "Re-registering slave failed");
+			continue;
+		}
 		slv_number = sdw_assign_slv_number(mstr, &msg);
 		if (slv_number <= 0) {
 			dev_err(&mstr->dev, "Failed to assign slv_number\n");
-- 
1.7.5.4

