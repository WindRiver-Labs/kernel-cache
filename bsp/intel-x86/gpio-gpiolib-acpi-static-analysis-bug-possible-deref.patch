From c2ae4e05f7543f96bfa099ec25eac3879194679e Mon Sep 17 00:00:00 2001
From: rgduran <randy.g.duran@intel.com>
Date: Thu, 3 Nov 2016 16:39:57 -0700
Subject: [PATCH 1154/4301] gpio: gpiolib-acpi: static analysis bug possible
 dereference to a NULL

commit 02ca9c33633aff56b9126fddfa7ba8322474e7d7 from
git://git@github.com:01org/linux-intel-4.9.git

adev struct ptr may return with NULL from func to_acpi_device_node.
added a NULL check before derefencing driver_gpios with an error on
exit.

BUG: 32795727

Change-Id: I78791d5b8b03a265cbb443e40d90b7cca478b80f
Signed-off-by: rgduran <randy.g.duran@intel.com>
Signed-off-by: Bruce Beare <bruce.j.beare@intel.com>
---
 drivers/gpio/gpiolib-acpi.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/drivers/gpio/gpiolib-acpi.c b/drivers/gpio/gpiolib-acpi.c
index 14f2d98..48d068f 100644
--- a/drivers/gpio/gpiolib-acpi.c
+++ b/drivers/gpio/gpiolib-acpi.c
@@ -905,10 +905,14 @@ int acpi_gpio_count(struct device *dev, const char *con_id)
 	const union acpi_object *obj;
 	const struct acpi_gpio_mapping *gm;
 	int count = -ENOENT;
-	int ret;
+	int ret, err_type;
 	char propname[32];
 	unsigned int i;
 
+	if (adev == NULL) {
+		err_type = -ENOMEM;
+		goto exit_err;
+	}
 	/* Try first from _DSD */
 	for (i = 0; i < ARRAY_SIZE(gpio_suffixes); i++) {
 		if (con_id && strcmp(con_id, "gpios"))
@@ -949,6 +953,8 @@ int acpi_gpio_count(struct device *dev, const char *con_id)
 			count = crs_count;
 	}
 	return count;
+exit_err:
+	return err_type;
 }
 
 struct acpi_crs_lookup {
-- 
1.7.5.4

