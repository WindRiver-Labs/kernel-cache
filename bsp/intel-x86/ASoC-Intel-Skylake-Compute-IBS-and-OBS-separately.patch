From f504ef8930ff1f9a5c1b0f39e545315db856cae8 Mon Sep 17 00:00:00 2001
From: Mousumi Jana <mousumix.jana@intel.com>
Date: Wed, 10 Feb 2016 02:25:44 +0530
Subject: [PATCH 3925/4301] ASoC: Intel: Skylake: Compute IBS and OBS
 separately

commit b1610194b5b2aaee93068daf102b8994b8687796 from
git://git@github.com:01org/linux-intel-4.9.git

IBS and OBS of all algorithms need not be the same. Algorithms
like SRC when operating in DP need larger output buffers
especially for fractional rates. Hence there is a need
to compute them seperately from two different params
from the XML.
For example, SRC operating in DP for 11025Hz needs
2ms of buffer at input and 3ms of buffer at output when conveted
to 48Khz.

Change-Id: Ia38bce52fe7ea72e4d36dec61775fb0cb4e6af10
Signed-off-by: Mousumi Jana <mousumix.jana@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8129
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/skl-topology.c |   20 +++++++++++++++-----
 1 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-topology.c b/sound/soc/intel/skylake/skl-topology.c
index e6a1879..01f880b 100644
--- a/sound/soc/intel/skylake/skl-topology.c
+++ b/sound/soc/intel/skylake/skl-topology.c
@@ -312,6 +312,7 @@ static void skl_tplg_update_buffer_size(struct skl_sst *ctx,
 {
 	int multiplier = 1;
 	struct skl_module_fmt *in_fmt, *out_fmt;
+	int in_rate, out_rate;
 
 	/* Since fixups is applied to pin 0 only, ibs, obs needs
 	 * change for pin 0 only
@@ -322,12 +323,22 @@ static void skl_tplg_update_buffer_size(struct skl_sst *ctx,
 	if (mcfg->m_type == SKL_MODULE_TYPE_SRCINT)
 		multiplier = 5;
 
-	mcfg->ibs = DIV_ROUND_UP(in_fmt->s_freq, 1000) *
-			in_fmt->channels * (in_fmt->bit_depth >> 3) *
+	if (in_fmt->s_freq % 1000)
+		in_rate = (in_fmt->s_freq / 1000) + 1;
+	else
+		in_rate = (in_fmt->s_freq / 1000);
+
+	mcfg->ibs = in_rate * (mcfg->in_fmt->channels) *
+			(mcfg->in_fmt->bit_depth >> 3) *
 			multiplier;
 
-	mcfg->obs = DIV_ROUND_UP(out_fmt->s_freq, 1000) *
-			out_fmt->channels * (out_fmt->bit_depth >> 3) *
+	if (mcfg->out_fmt->s_freq % 1000)
+		out_rate = (mcfg->out_fmt->s_freq / 1000) + 1;
+	else
+		out_rate = (mcfg->out_fmt->s_freq / 1000);
+
+	mcfg->obs = out_rate * (mcfg->out_fmt->channels) *
+			(mcfg->out_fmt->bit_depth >> 3) *
 			multiplier;
 }
 
@@ -2151,7 +2162,6 @@ static int skl_tplg_get_token(struct device *dev,
 		dir = tkn_elem->value & SKL_IN_DIR_BIT_MASK;
 		pin_index = (tkn_elem->value &
 			SKL_PIN_COUNT_MASK) >> 4;
-
 		break;
 
 	case SKL_TKN_U32_FMT_CH:
-- 
1.7.5.4

