From 5ed4d79e3f9dc7249d9690907d9b166743a94def Mon Sep 17 00:00:00 2001
From: Hardik T Shah <hardik.t.shah@intel.com>
Date: Thu, 10 Mar 2016 20:08:50 +0530
Subject: [PATCH 3858/4301] SoundWire:Intel: Add function to power up and down
 the link.

commit 7546816e2ed41c89c8371fc45f307cbfc994d11e from
git://git@github.com:01org/linux-intel-4.9.git

Change-Id: Ib47835a83963985282e7669dc0d2857f6e7eb7ca
Signed-off-by: Hardik T Shah <hardik.t.shah@intel.com>
---
 drivers/sdw/sdw_cnl.c |   63 +++++++++++++++++++++++++++++++++++++++++++++++-
 1 files changed, 61 insertions(+), 2 deletions(-)

diff --git a/drivers/sdw/sdw_cnl.c b/drivers/sdw/sdw_cnl.c
index 88457b2..62ce51b 100644
--- a/drivers/sdw/sdw_cnl.c
+++ b/drivers/sdw/sdw_cnl.c
@@ -107,12 +107,71 @@ struct cnl_sdw {
 
 static int sdw_power_up_link(struct cnl_sdw *sdw)
 {
-	return 0;
+	volatile int link_control;
+	struct sdw_master *mstr = sdw->mstr;
+	struct cnl_sdw_data *data = &sdw->data;
+	/* Try 10 times before timing out */
+	int timeout = 10;
+	int spa_mask, cpa_mask;
+
+	link_control = cnl_sdw_reg_readl(data->sdw_shim, SDW_CNL_LCTL);
+	spa_mask = (CNL_LCTL_SPA_MASK << (data->inst_id + CNL_LCTL_SPA_SHIFT));
+	cpa_mask = (CNL_LCTL_CPA_MASK << (data->inst_id + CNL_LCTL_CPA_SHIFT));
+	link_control |=  spa_mask;
+	cnl_sdw_reg_writel(data->sdw_shim, SDW_CNL_LCTL, link_control);
+	do {
+		link_control = cnl_sdw_reg_readl(data->sdw_shim, SDW_CNL_LCTL);
+		if (link_control & cpa_mask)
+			break;
+		timeout--;
+		/* Wait 20ms before each time */
+		msleep(20);
+	} while (timeout != 0);
+	/* Read once again to confirm */
+	link_control = cnl_sdw_reg_readl(data->sdw_shim, SDW_CNL_LCTL);
+	if (link_control & cpa_mask) {
+		dev_info(&mstr->dev, "SoundWire ctrl %d Powered Up\n",
+						data->inst_id);
+		sdw->sdw_link_status = 1;
+		return 0;
+	}
+	dev_err(&mstr->dev, "Failed to Power Up the SDW ctrl %d\n",
+								data->inst_id);
+	return -EIO;
 }
 
 static void sdw_power_down_link(struct cnl_sdw *sdw)
 {
-
+	volatile int link_control;
+	struct sdw_master *mstr = sdw->mstr;
+	struct cnl_sdw_data *data = &sdw->data;
+	/* Retry 10 times before giving up */
+	int timeout = 10;
+	int spa_mask, cpa_mask;
+
+	link_control = cnl_sdw_reg_readl(data->sdw_shim, SDW_CNL_LCTL);
+	spa_mask = ~(CNL_LCTL_SPA_MASK << (data->inst_id + CNL_LCTL_SPA_SHIFT));
+	cpa_mask = (CNL_LCTL_CPA_MASK << (data->inst_id + CNL_LCTL_CPA_SHIFT));
+	link_control &=  spa_mask;
+	cnl_sdw_reg_writel(data->sdw_shim, SDW_CNL_LCTL, link_control);
+	do {
+		link_control = cnl_sdw_reg_readl(data->sdw_shim, SDW_CNL_LCTL);
+		if (!(link_control & cpa_mask))
+			break;
+		timeout--;
+		/* Wait for 20ms before each retry */
+		msleep(20);
+	} while (timeout != 0);
+	/* Read once again to confirm */
+	link_control = cnl_sdw_reg_readl(data->sdw_shim, SDW_CNL_LCTL);
+	if (!(link_control & cpa_mask)) {
+		dev_info(&mstr->dev, "SoundWire ctrl %d Powered Down\n",
+						data->inst_id);
+		sdw->sdw_link_status = 0;
+		return;
+	}
+	dev_err(&mstr->dev, "Failed to Power Down the SDW ctrl %d\n",
+								data->inst_id);
 }
 
 static void sdw_init_phyctrl(struct cnl_sdw *sdw)
-- 
1.7.5.4

