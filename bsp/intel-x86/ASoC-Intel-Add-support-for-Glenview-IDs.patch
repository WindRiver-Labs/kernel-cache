From 5958aa2a066240ac58b1b9e2eeab23e7f8178bca Mon Sep 17 00:00:00 2001
From: "Diwakar, Praveen" <praveen.diwakar@intel.com>
Date: Mon, 5 Dec 2016 16:34:16 +0530
Subject: [PATCH 4047/4301] ASoC: Intel: Add support for Glenview IDs

commit a2f007ef889f10287254d7f106cec98dafff570c from
git://git@github.com:01org/linux-intel-4.9.git

Glenview is next gen SoC, so add the IDs for Glenview

Change-Id: I800bbb4147b869dde9f666ae017491ace147b778
Signed-off-by: Diwakar, Praveen <praveen.diwakar@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/12273
Reviewed-by: Kale, Sanyog R <sanyog.r.kale@intel.com>
Reviewed-by: Koul, Vinod <vinod.koul@intel.com>
Tested-by: Avati, Santosh Kumar <santosh.kumar.avati@intel.com>
---
 sound/soc/intel/skylake/skl-messages.c |    7 +++++++
 sound/soc/intel/skylake/skl.c          |   13 ++++++++++---
 2 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index 121a0c2..66491db 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -289,6 +289,13 @@ static const struct skl_dsp_ops dsp_ops[] = {
 		.init_fw = cnl_sst_init_fw,
 		.cleanup = cnl_sst_dsp_cleanup
 	},
+	{
+		.id = 0x24f0,
+		.loader_ops = bxt_get_loader_ops,
+		.init = cnl_sst_dsp_init,
+		.init_fw = cnl_sst_init_fw,
+		.cleanup = cnl_sst_dsp_cleanup
+	},
 };
 
 static int cnl_sdw_bra_pipe_trigger(struct skl_sst *ctx, bool enable,
diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index 285534b..a0703e6 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -479,6 +479,10 @@ static struct sst_acpi_mach sst_cnl_devdata[] = {
 	},
 };
 
+static struct sst_acpi_mach sst_glv_devdata[] = {
+	{ "dummy", "glv_wm8281", "intel/dsp_fw_glv.bin", NULL, NULL, NULL },
+};
+
 static int skl_machine_device_register(struct skl *skl, void *driver_data)
 {
 	struct hdac_bus *bus = ebus_to_hbus(&skl->ebus);
@@ -486,8 +490,8 @@ static int skl_machine_device_register(struct skl *skl, void *driver_data)
 	struct sst_acpi_mach *mach = driver_data;
 	int ret;
 
-	if (skl->pci->device == 0x9df0 || skl->pci->device == 0x9dc8
-		|| (skl->pci->device == 0x23f0))
+	if ((skl->pci->device == 0x9df0) || (skl->pci->device == 0x9dc8)
+	    || (skl->pci->device == 0x23f0) || (skl->pci->device == 0x24f0))
 		goto out;
 
 	mach = sst_acpi_find_machine(mach);
@@ -661,7 +665,7 @@ static void skl_probe_work(struct work_struct *work)
 		dev_info(bus->dev, "no hda codecs found!\n");
 
 	if (!(skl->pci->device == 0x9df0 || skl->pci->device == 0x9dc8 ||
-		skl->pci->device == 0x23f0)) {
+	      skl->pci->device == 0x23f0 || skl->pci->device == 0x24f0)) {
 		/* create codec instances */
 		err = skl_codec_create(ebus);
 		if (err < 0)
@@ -1079,6 +1083,9 @@ static const struct pci_device_id skl_ids[] = {
 	/* ICL */
 	{ PCI_DEVICE(0x8086, 0x23f0),
 		.driver_data = (unsigned long)&sst_icl_devdata},
+	/* GLV */
+	{ PCI_DEVICE(0x8086, 0x24f0),
+		.driver_data = (unsigned long)&sst_glv_devdata},
 	{ 0, }
 };
 MODULE_DEVICE_TABLE(pci, skl_ids);
-- 
1.7.5.4

