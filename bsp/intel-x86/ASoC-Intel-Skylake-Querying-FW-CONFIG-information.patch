From 269f4f5d595f6ac278e86296a2b0bf283fd2e239 Mon Sep 17 00:00:00 2001
From: Leoni Prodduvaka <leoni.prodduvaka@intel.com>
Date: Tue, 7 Feb 2017 18:42:40 +0530
Subject: [PATCH 4110/4301] ASoC: Intel: Skylake: Querying FW CONFIG
 information

commit 7685ecf79e6dfc10dd29fa7264754fe955ecbbde from
git://git@github.com:01org/linux-intel-4.9.git

FW Config information is queried from the firmware.
This information is useful to set the behavior of the driver.
[Ex: Memory reclaim]

Change-Id: Idba891a1db4f61bdcce26120974409ffc484770c
Signed-off-by: Leoni Prodduvaka <leoni.prodduvaka@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/13480
Reviewed-by: Nc, Shreyas <shreyas.nc@intel.com>
Reviewed-by: R, Dharageswari <dharageswari.r@intel.com>
Reviewed-by: Koul, Vinod <vinod.koul@intel.com>
Reviewed-by: Diwakar, Praveen <praveen.diwakar@intel.com>
Tested-by: Sm, Bhadur A <bhadur.a.sm@intel.com>
---
 sound/soc/intel/skylake/skl-sst-dsp.h   |    1 +
 sound/soc/intel/skylake/skl-sst-utils.c |   26 ++++++++++++++++++++++++++
 2 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-sst-dsp.h b/sound/soc/intel/skylake/skl-sst-dsp.h
index e39cc37..9767bf1 100644
--- a/sound/soc/intel/skylake/skl-sst-dsp.h
+++ b/sound/soc/intel/skylake/skl-sst-dsp.h
@@ -262,5 +262,6 @@ int skl_prepare_lib_load(struct skl_sst *skl, struct skl_lib_info *linfo,
 void skl_release_library(struct skl_lib_info *linfo, int lib_count);
 
 int snd_skl_add_mod_data(struct skl_sst *ctx);
+int skl_get_firmware_configuration(struct sst_dsp *ctx);
 
 #endif /*__SKL_SST_DSP_H__*/
diff --git a/sound/soc/intel/skylake/skl-sst-utils.c b/sound/soc/intel/skylake/skl-sst-utils.c
index f617d70..7ed8497 100644
--- a/sound/soc/intel/skylake/skl-sst-utils.c
+++ b/sound/soc/intel/skylake/skl-sst-utils.c
@@ -478,3 +478,29 @@ void skl_release_library(struct skl_lib_info *linfo, int lib_count)
 		}
 	}
 }
+
+int skl_get_firmware_configuration(struct sst_dsp *ctx)
+{
+	struct skl_ipc_large_config_msg msg;
+	struct skl_sst *skl = ctx->thread_context;
+	u8 *ipc_data;
+	int ret = 0;
+	size_t rx_bytes;
+
+	ipc_data = kzalloc(DSP_BUF, GFP_KERNEL);
+	if (!ipc_data)
+		return -ENOMEM;
+
+	msg.module_id = 0;
+	msg.instance_id = 0;
+	msg.large_param_id = FIRMWARE_CONFIG;
+	msg.param_data_size = DSP_BUF;
+
+	ret = skl_ipc_get_large_config(&skl->ipc, &msg,
+			(u32 *)ipc_data, NULL, 0, &rx_bytes);
+	if (ret < 0)
+		dev_err(ctx->dev, "failed to get fw configuration !!!\n");
+
+	kfree(ipc_data);
+	return ret;
+}
-- 
1.7.5.4

