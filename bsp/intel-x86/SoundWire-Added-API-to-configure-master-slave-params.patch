From 508d6938e4f512e705fcf6d8aa5e473cac4e9254 Mon Sep 17 00:00:00 2001
From: Sanyog Kale <sanyog.r.kale@intel.com>
Date: Thu, 10 Mar 2016 10:11:28 +0530
Subject: [PATCH 3845/4301] SoundWire: Added API to configure master/slave
 params

commit ed0ca807088f2f9061b5884d3ab8cead00b22900 from
git://git@github.com:01org/linux-intel-4.9.git

Added API which sets xport params of master/slave
port and prepare/unprepare, enable/disable channels.
This all APIs will be called from
sdw_bus_calc_bw & sdw_bus_calc_bw_dis API.

Change-Id: I5f94b3a1ebee827634dbc3e1475eeed88a2fc716
Signed-off-by: Sanyog Kale <sanyog.r.kale@intel.com>
---
 drivers/sdw/sdw_bwcalc.c |   72 ++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 72 insertions(+), 0 deletions(-)

diff --git a/drivers/sdw/sdw_bwcalc.c b/drivers/sdw/sdw_bwcalc.c
index 6dafb07..661401d 100644
--- a/drivers/sdw/sdw_bwcalc.c
+++ b/drivers/sdw/sdw_bwcalc.c
@@ -130,6 +130,78 @@ int sdw_configure_frmshp_bnkswtch(struct sdw_bus *mstr_bs, int col, int row)
 }
 
 
+/*
+ * sdw_cfg_bs_params - returns Success
+ * -EINVAL - In case of error.
+ *
+ *
+ * This function performs master/slave transport
+ * params config, set SSP interval, set Clock
+ * frequency, enable channel. This API is called
+ * from sdw_bus_calc_bw & sdw_bus_calc_bw_dis API.
+ *
+ */
+int sdw_cfg_bs_params(struct sdw_bus *sdw_mstr_bs,
+		struct sdw_mstr_runtime *sdw_mstr_bs_rt,
+		bool is_strm_cpy)
+{
+
+	return 0;
+}
+
+/*
+ * sdw_dis_chan - returns Success
+ * -EINVAL - In case of error.
+ *
+ *
+ * This function disables channel on alternate
+ * bank. This API is called from sdw_bus_calc_bw
+ * & sdw_bus_calc_bw_dis when channel on current
+ * bank is enabled.
+ *
+ */
+int sdw_dis_chan(struct sdw_bus *sdw_mstr_bs,
+	struct sdw_mstr_runtime *sdw_mstr_bs_rt)
+{
+
+	return 0;
+}
+
+
+/*
+ * sdw_prep_unprep_mstr_slv - returns Success
+ * -EINVAL - In case of error.
+ *
+ *
+ * This function call master/slave prepare/unprepare
+ * port configuration API's, called from sdw_bus_calc_bw
+ * & sdw_bus_calc_bw_dis API's.
+ */
+int sdw_prep_unprep_mstr_slv(struct sdw_bus *sdw_mstr_bs,
+		struct sdw_runtime *sdw_rt, bool is_prep)
+{
+
+	return 0;
+}
+
+
+/*
+ * sdw_en_dis_mstr_slv - returns Success
+ * -EINVAL - In case of error.
+ *
+ *
+ * This function call master/slave enable/disable
+ * channel API's, called from sdw_bus_calc_bw
+ * & sdw_bus_calc_bw_dis API's.
+ */
+int sdw_en_dis_mstr_slv(struct sdw_bus *sdw_mstr_bs,
+		struct sdw_runtime *sdw_rt, bool is_act)
+{
+
+	return 0;
+}
+
+
 /**
  * sdw_bus_calc_bw - returns Success
  * -EINVAL - In case of error.
-- 
1.7.5.4

