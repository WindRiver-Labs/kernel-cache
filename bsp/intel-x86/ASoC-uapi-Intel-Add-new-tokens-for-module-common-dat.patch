From 06919cc6360472994fd849d5833506e3f4f3b2be Mon Sep 17 00:00:00 2001
From: Shreyas NC <shreyas.nc@intel.com>
Date: Mon, 28 Nov 2016 08:00:57 +0530
Subject: [PATCH 4082/4301] ASoC: uapi: Intel: Add new tokens for module
 common data

commit 25f27bb55fa943bcd46d02b27027bd3635ec081a from
git://git@github.com:01org/linux-intel-4.9.git

The module private data can be modelled independent
of its instances. So, move module data to common manifest
which can be referenced by the module instances.

This requires new tokens to be defined to accommodate these
changes.

Change-Id: Ibc8d191ef5946f3979f9fd73693ddf8e0bc922b8
Signed-off-by: Shreyas NC <shreyas.nc@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/13453
Reviewed-by: Kale, Sanyog R <sanyog.r.kale@intel.com>
Reviewed-by: Singh, Guneshwor O <guneshwor.o.singh@intel.com>
Reviewed-by: Diwakar, Praveen <praveen.diwakar@intel.com>
Tested-by: Sm, Bhadur A <bhadur.a.sm@intel.com>
---
 include/uapi/sound/snd_sst_tokens.h |  232 ++++++++++++++++++++++++++++++++++-
 1 files changed, 231 insertions(+), 1 deletions(-)

diff --git a/include/uapi/sound/snd_sst_tokens.h b/include/uapi/sound/snd_sst_tokens.h
index 89b82f6..d72d9e1 100644
--- a/include/uapi/sound/snd_sst_tokens.h
+++ b/include/uapi/sound/snd_sst_tokens.h
@@ -161,8 +161,159 @@
  *
  * %SKL_TKL_U32_D0I3_CAPS:	Specifies the D0i3 capability for module
  *
+ * %SKL_TKN_U8_PDI_TYPE:        Specifies PDI type. Can be PCM or PDM
+ *
+ * %SKL_TKN_U8_CONF_VERSION:    Version of topology conf file format
+ *
+ * %SKL_TKN_STR_PIPE_NAME:      Name of the pipe
+ *
+ * %SKL_TKN_STR_BE_PIPE_DEVICE: Port name when pipeline is connected to link.
+ *                              Should match BE AIF widget name.
+ *
+ * %SKL_TKN_STR_FE_PIPE_DEVICE: Device name when pipeline is connected to
+ *                              host dma.
+ *                              Should match BE AIF widget name.
+ *
+ * %SKL_TKN_U32_PIPE_CREATE_PRIORITY:
+ *                              Set this ito override the default priority
+ *                              of scheduling the pipes. If the priority is
+ *                              set to 0, they get scheduled in order of
+ *                              creation.
+ *
+ * %SKL_TKN_U32_PIPE_DIR:       Specifies pipe direction. Can be
+ *                              playback/capture.
+ *
+ * %SKL_TKN_U32_PIPE_ORDER:     Pipe order from Source to Sink.
+ *
+ * %SKL_TKN_U32_PIPE_LINK_TYPE: Link type between modules of the pipe.
+ *                              "direct" means its statically connected,
+ *                              "mixer" means Mixer user control needs to be
+ *                              created to connect modules.
+ *
+ * %SKL_TKN_U32_PIPE_MODE:      Configuration in which pipe can be run.
+ *                              Can be epmode: where pipeline FE parameters
+ *                              are propogated upto the Link
+ *                              or can be dspmode: pipeline is routed via
+ *                              dsp and user sets the params.
+ *
+ * %SKL_TKN_U32_PIPE_NUM_MODULES:
+ *                              Number of modules in the pipe
+ *
+ * %SKL_TKN_U32_NUM_CONFIGS:    Number of pipe configs
+ *
+ * %SKL_TKN_STR_CONFIG_NAME:    Name of the pipe config
+ *
+ * %SKL_TKN_U32_PIPE_CONFIG_ID: Config id for the modules in the pipe
+ *                              and PCM params supported by that pipe
+ *                              config. This is used as index to fill
+ *                              up the pipe config and module config
+ *                              structure.
+ *
+ * %SKL_TKN_U32_PATH_MEM_PGS:   Memory pages for the path
+ *
+ * %SKL_TKN_U32_CFG_FREQ:
+ * %SKL_TKN_U8_CFG_CHAN:
+ * %SKL_TKN_U8_CFG_BPS:         PCM params (freq, channels, bits per sample)
+ *                              supported for each of the pipe configs.
+ *
+ * %SKL_TKN_CFG_MOD_RES_ID:     Module's resource index for each of the
+ *                              pipe config
+ *
+ * %SKL_TKN_CFG_MOD_RES_ID:     Module's interface index for each of the
+ *                              pipe config
+ *
+ * %SKL_TKN_U8_NUM_MOD:         Number of modules in the manifest
+ *
+ * %SKL_TKN_U8_LIB_IDX:         Index for library structure
+ *
+ * %SKL_TKN_NUM_FW_BINS:        Number of firmware binaries
+ *
+ * %SKL_TKN_U32_MAN_CFG_IDX:    Config index to fill up FW config info
+ *                              from the manifest.
+ *
+ * %SKL_TKN_U32_MEM_TYPE:
+ * %SKL_TKN_U32_SCH_TYPE:
+ * %SKL_TKN_U32_DMA_TYPE:       Type information for TLVs
+ *
+ * %SKL_TKN_U32_MEM_SIZE:
+ * %SKL_TKN_U32_SCH_SIZE:
+ * %SKL_TKN_U32_DMA_SIZE:       Size information for TLV
+ *
+ * %SKL_TKN_U32_MEM_STAT_RECLAIM:
+ *                              Indicates whether legacy DMA memory is
+ *                              managed by DSP.
+ *
+ * %SKL_TKN_U32_DMA_MAX_SIZE:
+ *                              Maximum DMA buffer size
+ *
+ * %SKL_TKN_U32_DMA_MIN_SIZE:
+ *                              Minimum DMA buffer size
+ *
+ * %SKL_TKN_U32_SCH_TICK_MUL:   FW Scheduler tick multiplier
+ *
+ * %SKL_TKN_U32_SCH_TICK_DIV:   FW scheduler tick divider
+ *
+ * %SKL_TKN_U32_SCH_LL_SRC:     Low latency interrupt source
+ *
+ * %SKL_TKN_U32_SCH_NUM_CONF:   Number of configs
+ *
+ * %SKL_TKN_MM_U8_MAJOR_VER:    Major version of firmware extended manifest
+ *
+ * %SKL_TKN_MM_U8_MINOR_VER:    Minor version of firmware extended manifest
+ *
+ * %SKL_TKN_MM_U8_HOTFIX_VER:   Firmware version
+ *
+ * %SKL_TKN_MM_U8_AUTO_START:   Module instance should be created
+ *                              automatically at the start of the base
+ *                              firmware.
+ *
+ * %SKL_TKN_MM_U8_MAX_PINS:     Max in/out pins for the module
+ *
+ * %SKL_TKN_MM_U8_MAX_INST_COUNT:
+ *                              Max allowed instance count for modules
+ *
+ * %SKL_TKN_MM_U8_NUM_RES:      Number of resources for the module
+ *
+ * %SKL_TKN_MM_U8_NUM_INTF:     Number of interfaces for the module
+ *
+ * %SKL_TKN_MM_U32_RES_ID:      Resource index for the resource info to
+ *                              be filled into.
+ *                              A module can support multiple resource
+ *                              configuration and is represnted as a
+ *                              resource table. This index is used to
+ *                              fill information into appropriate index.
+ *
+ * %SKL_TKN_MM_U32_CPS:         DSP cycles
+ *
+ * %SKL_TKN_MM_U32_DMA_SIZE:    Allocated buffer size for gateway DMA
+ *
+ * %SKL_TKN_MM_U32_CPC:         DSP cycles allocated per frame
+ *
+ * %SKL_TKN_MM_U32_MOD_FLAGS:   Flags for the module
+ *
+ * %SKL_TKN_MM_U32_OBLS:        Output Block size
+ *
+ * %SKL_TKN_MM_U32_NUM_PIN:     Total number of input/output pins
+ *
+ * %SKL_TKN_MM_U32_RES_PIN_ID:  Resource pin id
+ *
+ * %SKL_TKN_MM_U32_INTF_PIN_ID: Pin index in the module
+ *
+ * %SKL_TKN_MM_U32_PIN_BUF:     Pin buffer size
+ *
+ * %SKL_TKN_MM_U32_FMT_ID:      Format index for each of the interface/
+ *                              format information to be filled into.
+ *
+ * %SKL_TKN_MM_U32_NUM_IN_FMT:
+ * %SKL_TKN_MM_U32_NUM_OUT_FMT: Number of input/output formats
+ *
  * module_id and loadable flags dont have tokens as these values will be
  * read from the DSP FW manifest
+ *
+ * Tokens defined can be used either in the manifest or widget private data.
+ *
+ * SKL_TKN_MM is used as a suffix for all tokens that represent
+ * module data in the manifest.
  */
 enum SKL_TKNS {
 	SKL_TKN_UUID = 1,
@@ -215,7 +366,86 @@ enum SKL_TKNS {
 	SKL_TKN_U32_PMODE,
 	SKL_TKL_U32_D0I3_CAPS, /* Typo added at v4.10 */
 	SKL_TKN_U32_D0I3_CAPS = SKL_TKL_U32_D0I3_CAPS,
-	SKL_TKN_MAX = SKL_TKN_U32_D0I3_CAPS,
+	SKL_TKN_U8_PDI_TYPE,
+
+	SKL_TKN_U8_CONF_VERSION,
+	SKL_TKN_STR_PIPE_NAME,
+	SKL_TKN_STR_PIPE_PORT,
+	SKL_TKN_STR_PIPE_DEVICE,
+	SKL_TKN_U32_PIPE_CREATE_PRIORITY,
+	SKL_TKN_U32_PIPE_DIRECTION,
+	SKL_TKN_U32_PIPE_ORDER,
+	SKL_TKN_U32_PIPE_LINK_TYPE,
+	SKL_TKN_U32_PIPE_MODE,
+	SKL_TKN_U32_PIPE_NUM_MODULES,
+	SKL_TKN_U32_PIPE_CONFIG_ID,
+	SKL_TKN_U32_NUM_CONFIGS,
+	SKL_TKN_STR_CONFIG_NAME,
+
+	SKL_TKN_U32_PATH_MEM_PGS,
+
+	SKL_TKN_U32_CFG_FREQ,
+	SKL_TKN_U8_CFG_CHAN,
+	SKL_TKN_U8_CFG_BPS,
+	SKL_TKN_CFG_MOD_RES_ID,
+	SKL_TKN_CFG_MOD_FMT_IDX,
+	SKL_TKN_U8_NUM_MOD,
+	SKL_TKN_U8_LIB_IDX,
+	SKL_TKN_NUM_FW_BINS,
+
+	SKL_TKN_U32_MAN_CFG_IDX,
+	SKL_TKN_U32_MEM_TYPE,
+	SKL_TKN_U32_MEM_SIZE,
+	SKL_TKN_U32_MEM_STAT_RECLAIM,
+	SKL_TKN_U32_DMA_TYPE,
+	SKL_TKN_U32_DMA_SIZE,
+	SKL_TKN_U32_DMA_MAX_SIZE,
+	SKL_TKN_U32_DMA_MIN_SIZE,
+	SKL_TKN_U32_SCH_TYPE,
+	SKL_TKN_U32_SCH_SIZE,
+	SKL_TKN_U32_SCH_TICK_MUL,
+	SKL_TKN_U32_SCH_TICK_DIV,
+	SKL_TKN_U32_SCH_LL_SRC,
+	SKL_TKN_U32_SCH_NODE_INFO,
+	SKL_TKN_U32_SCH_NUM_CONF,
+
+	SKL_TKN_U8_NR_MODS,
+	SKL_TKN_U8_MAJOR_VER,
+	SKL_TKN_U8_MINOR_VER,
+	SKL_TKN_U8_HOTFIX_VER,
+	SKL_TKN_U8_BUILD_VER,
+	SKL_TKN_U8_EXT_NR_MODS,
+	SKL_TKN_U8_EXT_MAJOR_VER,
+	SKL_TKN_U8_EXT_MINOR_VER,
+	SKL_TKN_U8_PRE_LOAD_PGS,
+
+	SKL_TKN_MM_U8_MOD_IDX,
+	SKL_TKN_MM_U8_MAJOR_VER,
+	SKL_TKN_MM_U8_MINOR_VER,
+	SKL_TKN_MM_U8_HOTFIX_VER,
+	SKL_TKN_MM_U8_BUILD_VER,
+	SKL_TKN_MM_U8_AUTO_START,
+	SKL_TKN_MM_U8_BINARY_TYPE,
+	SKL_TKN_STR_MOD_LIB_NAME,
+	SKL_TKN_MM_U8_MAX_PINS,
+	SKL_TKN_MM_U8_MAX_INST_COUNT,
+	SKL_TKN_MM_U8_NUM_RES,
+	SKL_TKN_MM_U8_NUM_INTF,
+	SKL_TKN_MM_U32_RES_ID,
+	SKL_TKN_MM_U32_CPS,
+	SKL_TKN_MM_U32_DMA_SIZE,
+	SKL_TKN_MM_U32_CPC,
+	SKL_TKN_MM_U32_MOD_FLAGS,
+	SKL_TKN_MM_U32_OBLS,
+	SKL_TKN_MM_U32_NUM_PIN,
+	SKL_TKN_MM_U32_RES_PIN_ID,
+	SKL_TKN_MM_U32_INTF_PIN_ID,
+	SKL_TKN_MM_U32_PIN_BUF,
+	SKL_TKN_MM_U32_FMT_ID,
+	SKL_TKN_MM_U32_NUM_IN_FMT,
+	SKL_TKN_MM_U32_NUM_OUT_FMT,
+
+	SKL_TKN_MAX = SKL_TKN_MM_U32_NUM_OUT_FMT,
 };
 
 #endif
-- 
1.7.5.4

