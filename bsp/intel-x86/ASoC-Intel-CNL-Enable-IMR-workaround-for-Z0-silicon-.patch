From a7d0838adebf7c559dcd21a69ba1e3fe5837d314 Mon Sep 17 00:00:00 2001
From: Hardik Shah <hardik.t.shah@intel.com>
Date: Wed, 23 Nov 2016 10:15:10 +0530
Subject: [PATCH 4030/4301] ASoC: Intel: CNL: Enable IMR workaround for Z0
 silicon as well.

commit a3ef751bd86d2778ca28bf74b3270735d5c53fe2 from
git://git@github.com:01org/linux-intel-4.9.git

IMR work around for DSP firmware download was required for FPGA. Now
required for CNL Z0 silicon as well.

Change-Id: I7f23c2704d4652eb65378e1dbcf1b16190e1b8eb
Signed-off-by: Hardik Shah <hardik.t.shah@intel.com>
---
 sound/soc/intel/common/sst-dsp-priv.h |    2 --
 sound/soc/intel/skylake/cnl-sst.c     |    9 ++-------
 2 files changed, 2 insertions(+), 9 deletions(-)

diff --git a/sound/soc/intel/common/sst-dsp-priv.h b/sound/soc/intel/common/sst-dsp-priv.h
index 9e40b23..d5efbb3 100644
--- a/sound/soc/intel/common/sst-dsp-priv.h
+++ b/sound/soc/intel/common/sst-dsp-priv.h
@@ -357,9 +357,7 @@ struct sst_dsp {
 	u32 intr_status;
 	const struct firmware *fw;
 	struct snd_dma_buffer dmab;
-#if IS_ENABLED(CONFIG_SND_SOC_INTEL_CNL_FPGA)
 	struct snd_dma_buffer dsp_fw_buf;
-#endif
 };
 
 /* Size optimised DRAM/IRAM memcpy */
diff --git a/sound/soc/intel/skylake/cnl-sst.c b/sound/soc/intel/skylake/cnl-sst.c
index 2b800ee..4d07276 100644
--- a/sound/soc/intel/skylake/cnl-sst.c
+++ b/sound/soc/intel/skylake/cnl-sst.c
@@ -114,8 +114,6 @@ void cnl_ipc_free(struct sst_generic_ipc *ipc)
 	sst_ipc_fini(ipc);
 }
 
-#if IS_ENABLED(CONFIG_SND_SOC_INTEL_CNL_FPGA)
-
 #define CNL_IMR_MEMSIZE					0x400000  /*4MB*/
 #define HDA_ADSP_REG_ADSPCS_IMR_CACHED_TLB_START	0x100
 #define HDA_ADSP_REG_ADSPCS_IMR_UNCACHED_TLB_START	0x200
@@ -161,7 +159,6 @@ static inline void cnl_fpga_free_imr(struct sst_dsp *ctx)
 	ctx->dsp_ops.free_dma_buf(ctx->dev, &ctx->dsp_fw_buf);
 }
 
-#endif
 static int cnl_prepare_fw(struct sst_dsp *ctx, const void *fwdata,
 		u32 fwsize)
 {
@@ -170,11 +167,11 @@ static int cnl_prepare_fw(struct sst_dsp *ctx, const void *fwdata,
 	u32 reg;
 	u32 pages;
 
-#if IS_ENABLED(CONFIG_SND_SOC_INTEL_CNL_FPGA)
+	/* This is required for FPGA and silicon both as of now */
 	ret = cnl_fpga_alloc_imr(ctx);
 	if (ret < 0)
 		return ret;
-#endif
+
 	dev_dbg(ctx->dev, "Starting to prepare host dma fwsize=0x%x\n", fwsize);
 	stream_tag = ctx->dsp_ops.prepare(ctx->dev, 0x40, fwsize, &ctx->dmab);
 	if (stream_tag <= 0) {
@@ -243,9 +240,7 @@ static int cnl_prepare_fw(struct sst_dsp *ctx, const void *fwdata,
 base_fw_load_failed:
 	cnl_dsp_disable_core(ctx, SKL_DSP_CORE_MASK(0));
 	ctx->dsp_ops.cleanup(ctx->dev, &ctx->dmab, stream_tag);
-#if IS_ENABLED(CONFIG_SND_SOC_INTEL_CNL_FPGA)
 	cnl_fpga_free_imr(ctx);
-#endif
 	return ret;
 }
 
-- 
1.7.5.4

