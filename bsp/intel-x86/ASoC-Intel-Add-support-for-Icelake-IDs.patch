From 19b99da3295a6b012f8c5a753197ff5b5c94158c Mon Sep 17 00:00:00 2001
From: Jeeja KP <jeeja.kp@intel.com>
Date: Wed, 6 Dec 2006 11:31:41 +0530
Subject: [PATCH 4045/4301] ASoC: Intel: Add support for Icelake IDs

commit daf5016828dd0fd3420b429e5b3af3c4355dd321 from
git://git@github.com:01org/linux-intel-4.9.git

Icelake is next gen SoC, so add the IDs for Icelake

Change-Id: I1210d2ea5c1d19137cd0829bd0b86a13a8fcd4f
Signed-off-by: Dharageswari R <dharageswari.r@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/12271
Reviewed-by: Diwakar, Praveen <praveen.diwakar@intel.com>
Reviewed-by: Singh, Guneshwor O <guneshwor.o.singh@intel.com>
Reviewed-by: Kale, Sanyog R <sanyog.r.kale@intel.com>
Tested-by: Avati, Santosh Kumar <santosh.kumar.avati@intel.com>
Reviewed-by: Prusty, Subhransu S <subhransu.s.prusty@intel.com>
Reviewed-by: Kp, Jeeja <jeeja.kp@intel.com>
---
 sound/soc/intel/skylake/skl-messages.c |    7 +++++++
 sound/soc/intel/skylake/skl.c          |   14 ++++++++++++--
 2 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index 39e5e2b..121a0c2 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -282,6 +282,13 @@ static const struct skl_dsp_ops dsp_ops[] = {
 		.init_fw = cnl_sst_init_fw,
 		.cleanup = cnl_sst_dsp_cleanup
 	},
+	{
+		.id = 0x23f0,
+		.loader_ops = bxt_get_loader_ops,
+		.init = cnl_sst_dsp_init,
+		.init_fw = cnl_sst_init_fw,
+		.cleanup = cnl_sst_dsp_cleanup
+	},
 };
 
 static int cnl_sdw_bra_pipe_trigger(struct skl_sst *ctx, bool enable,
diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index f4b9b7a..285534b 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -486,7 +486,8 @@ static int skl_machine_device_register(struct skl *skl, void *driver_data)
 	struct sst_acpi_mach *mach = driver_data;
 	int ret;
 
-	if (skl->pci->device == 0x9df0 || skl->pci->device == 0x9dc8)
+	if (skl->pci->device == 0x9df0 || skl->pci->device == 0x9dc8
+		|| (skl->pci->device == 0x23f0))
 		goto out;
 
 	mach = sst_acpi_find_machine(mach);
@@ -659,7 +660,8 @@ static void skl_probe_work(struct work_struct *work)
 	if (!bus->codec_mask)
 		dev_info(bus->dev, "no hda codecs found!\n");
 
-	if (!(skl->pci->device == 0x9df0 || skl->pci->device == 0x9dc8)) {
+	if (!(skl->pci->device == 0x9df0 || skl->pci->device == 0x9dc8 ||
+		skl->pci->device == 0x23f0)) {
 		/* create codec instances */
 		err = skl_codec_create(ebus);
 		if (err < 0)
@@ -1046,6 +1048,11 @@ static struct sst_acpi_mach sst_glk_devdata[] = {
 	},
 };
 
+static struct sst_acpi_mach sst_icl_devdata[] = {
+	{ "dummy", "icl_wm8281", "intel/dsp_fw_icl.bin", NULL, NULL, NULL },
+	{}
+};
+
 /* PCI IDs */
 static const struct pci_device_id skl_ids[] = {
 	/* Sunrise Point-LP */
@@ -1069,6 +1076,9 @@ static const struct pci_device_id skl_ids[] = {
 	/* CNL Z0 */
 	{ PCI_DEVICE(0x8086, 0x9dc8),
 		.driver_data = (unsigned long)&sst_cnl_devdata},
+	/* ICL */
+	{ PCI_DEVICE(0x8086, 0x23f0),
+		.driver_data = (unsigned long)&sst_icl_devdata},
 	{ 0, }
 };
 MODULE_DEVICE_TABLE(pci, skl_ids);
-- 
1.7.5.4

