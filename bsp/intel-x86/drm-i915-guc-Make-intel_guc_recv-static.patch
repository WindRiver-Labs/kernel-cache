From 92bfc6f0486731c27baf75bf2249531b09b29907 Mon Sep 17 00:00:00 2001
From: Michal Wajdeczko <michal.wajdeczko@intel.com>
Date: Tue, 20 Dec 2016 11:55:31 +0000
Subject: [PATCH 2308/4301] drm/i915/guc: Make intel_guc_recv static.

commit bae3fdce06146ea98c86f4659aa3ca7bced8588e upstream

This function is only used by intel_guc_send() and it doesn't
need to be exposed outside of intel_uc.o file. Also when defined
as static, compiler will generate smaller code. Additionally let
it take guc param instead dev_priv to match function name.

Signed-off-by: Michal Wajdeczko <michal.wajdeczko@intel.com>
Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
Cc: Arkadiusz Hiler <arkadiusz.hiler@intel.com>
Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
Link: http://patchwork.freedesktop.org/patch/msgid/20161220115531.76120-1-michal.wajdeczko@intel.com
---
 drivers/gpu/drm/i915/intel_uc.c |    8 +++++---
 drivers/gpu/drm/i915/intel_uc.h |    1 -
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_uc.c b/drivers/gpu/drm/i915/intel_uc.c
index 8ae6795..c6be352 100644
--- a/drivers/gpu/drm/i915/intel_uc.c
+++ b/drivers/gpu/drm/i915/intel_uc.c
@@ -34,8 +34,10 @@ void intel_uc_init_early(struct drm_i915_private *dev_priv)
  * Read GuC command/status register (SOFT_SCRATCH_0)
  * Return true if it contains a response rather than a command
  */
-bool intel_guc_recv(struct drm_i915_private *dev_priv, u32 *status)
+static bool intel_guc_recv(struct intel_guc *guc, u32 *status)
 {
+	struct drm_i915_private *dev_priv = guc_to_i915(guc);
+
 	u32 val = I915_READ(SOFT_SCRATCH(0));
 	*status = val;
 	return INTEL_GUC_RECV_IS_RESPONSE(val);
@@ -69,9 +71,9 @@ int intel_guc_send(struct intel_guc *guc, const u32 *action, u32 len)
 	 * up to that length of time, then switch to a slower sleep-wait loop.
 	 * No inte_guc_send command should ever take longer than 10ms.
 	 */
-	ret = wait_for_us(intel_guc_recv(dev_priv, &status), 10);
+	ret = wait_for_us(intel_guc_recv(guc, &status), 10);
 	if (ret)
-		ret = wait_for(intel_guc_recv(dev_priv, &status), 10);
+		ret = wait_for(intel_guc_recv(guc, &status), 10);
 	if (status != INTEL_GUC_STATUS_SUCCESS) {
 		/*
 		 * Either the GuC explicitly returned an error (which
diff --git a/drivers/gpu/drm/i915/intel_uc.h b/drivers/gpu/drm/i915/intel_uc.h
index d556215..3b1e39b 100644
--- a/drivers/gpu/drm/i915/intel_uc.h
+++ b/drivers/gpu/drm/i915/intel_uc.h
@@ -172,7 +172,6 @@ struct intel_guc {
 
 /* intel_uc.c */
 void intel_uc_init_early(struct drm_i915_private *dev_priv);
-bool intel_guc_recv(struct drm_i915_private *dev_priv, u32 *status);
 int intel_guc_send(struct intel_guc *guc, const u32 *action, u32 len);
 int intel_guc_sample_forcewake(struct intel_guc *guc);
 int intel_guc_log_flush_complete(struct intel_guc *guc);
-- 
1.7.5.4

