From 0a736b889b020c931400da4109ed2c55096e2fd1 Mon Sep 17 00:00:00 2001
From: Leoni Prodduvaka <leoni.prodduvaka@intel.com>
Date: Wed, 15 Feb 2017 17:04:40 +0530
Subject: [PATCH 4115/4301] ASoC: Intel: Skylake: Add D0i3 support for Icelake
 platform

commit f48584cf7d200e1bb8dc5a3be540291d148a005d from
git://git@github.com:01org/linux-intel-4.9.git

The driver needs two DSP callback, one to set D0i0 (active) and D0i3
(low-power) states.

Add these callbacks in icelake dsp ops.

Change-Id: Ibd077dd4bef1a617a9d86f2c2e639f47ce6b5f25
Signed-off-by: Leoni Prodduvaka <leoni.prodduvaka@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/14126
Reviewed-by: Koul, Vinod <vinod.koul@intel.com>
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Reviewed-by: R, Dharageswari <dharageswari.r@intel.com>
Reviewed-by: Diwakar, Praveen <praveen.diwakar@intel.com>
Reviewed-by: Kp, Jeeja <jeeja.kp@intel.com>
Tested-by: Sm, Bhadur A <bhadur.a.sm@intel.com>
---
 sound/soc/intel/skylake/bxt-sst.c     |    6 +++---
 sound/soc/intel/skylake/cnl-sst.c     |    6 ++++++
 sound/soc/intel/skylake/skl-sst-dsp.h |    5 +++++
 3 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/sound/soc/intel/skylake/bxt-sst.c b/sound/soc/intel/skylake/bxt-sst.c
index 160d57c..d0ad998 100644
--- a/sound/soc/intel/skylake/bxt-sst.c
+++ b/sound/soc/intel/skylake/bxt-sst.c
@@ -305,7 +305,7 @@ static int bxt_d0i3_target_state(struct sst_dsp *ctx)
 		return SKL_DSP_D0I3_NONE;
 }
 
-static void bxt_set_dsp_D0i3(struct work_struct *work)
+void bxt_set_dsp_D0i3(struct work_struct *work)
 {
 	int ret;
 	struct skl_ipc_d0ix_msg msg;
@@ -350,7 +350,7 @@ static void bxt_set_dsp_D0i3(struct work_struct *work)
 	skl->cores.state[SKL_DSP_CORE0_ID] = SKL_DSP_RUNNING_D0I3;
 }
 
-static int bxt_schedule_dsp_D0i3(struct sst_dsp *ctx)
+int bxt_schedule_dsp_D0i3(struct sst_dsp *ctx)
 {
 	struct skl_sst *skl = ctx->thread_context;
 	struct skl_d0i3_data *d0i3 = &skl->d0i3;
@@ -367,7 +367,7 @@ static int bxt_schedule_dsp_D0i3(struct sst_dsp *ctx)
 	return 0;
 }
 
-static int bxt_set_dsp_D0i0(struct sst_dsp *ctx)
+int bxt_set_dsp_D0i0(struct sst_dsp *ctx)
 {
 	int ret;
 	struct skl_ipc_d0ix_msg msg;
diff --git a/sound/soc/intel/skylake/cnl-sst.c b/sound/soc/intel/skylake/cnl-sst.c
index 87b6e9a..5910536 100644
--- a/sound/soc/intel/skylake/cnl-sst.c
+++ b/sound/soc/intel/skylake/cnl-sst.c
@@ -425,6 +425,8 @@ static unsigned int cnl_get_errorcode(struct sst_dsp *ctx)
 static struct skl_dsp_fw_ops cnl_fw_ops = {
 	.set_state_D0 = cnl_set_dsp_D0,
 	.set_state_D3 = cnl_set_dsp_D3,
+	.set_state_D0i3 = bxt_schedule_dsp_D0i3,
+	.set_state_D0i0 = bxt_set_dsp_D0i0,
 	.load_fw = cnl_load_base_firmware,
 	.get_fw_errcode = cnl_get_errorcode,
 	.load_library = bxt_load_library,
@@ -777,9 +779,13 @@ int cnl_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
 	if (ret)
 		return ret;
 
+	/* set the D0i3 check */
+	cnl->ipc.ops.check_dsp_lp_on = skl_ipc_check_D0i0;
 	cnl->boot_complete = false;
 	init_waitqueue_head(&cnl->boot_wait);
 	cnl->is_first_boot = true;
+	INIT_DELAYED_WORK(&cnl->d0i3.work, bxt_set_dsp_D0i3);
+	cnl->d0i3.state = SKL_DSP_D0I3_NONE;
 
 	if (dsp)
 		*dsp = cnl;
diff --git a/sound/soc/intel/skylake/skl-sst-dsp.h b/sound/soc/intel/skylake/skl-sst-dsp.h
index 0973e52..d8e18c9 100644
--- a/sound/soc/intel/skylake/skl-sst-dsp.h
+++ b/sound/soc/intel/skylake/skl-sst-dsp.h
@@ -296,4 +296,9 @@ void skl_release_library(struct skl_lib_info *linfo, int lib_count);
 int snd_skl_add_mod_data(struct skl_sst *ctx);
 int skl_get_firmware_configuration(struct sst_dsp *ctx);
 
+int bxt_set_dsp_D0i0(struct sst_dsp *ctx);
+
+int bxt_schedule_dsp_D0i3(struct sst_dsp *ctx);
+
+void bxt_set_dsp_D0i3(struct work_struct *work);
 #endif /*__SKL_SST_DSP_H__*/
-- 
1.7.5.4

