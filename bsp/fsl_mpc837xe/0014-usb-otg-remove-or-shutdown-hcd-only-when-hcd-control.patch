From 21e33f7c4ab6cff1fdea67a94c1da501c196940c Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Fri, 28 Aug 2009 16:36:18 +0800
Subject: [PATCH 14/38] usb/otg: remove or shutdown hcd only when hcd controller is active in otg mode

Since in OTG mode the USB controller can be busy, and the HCD
already removed we have to do additional checks in remove and shutdown
functions to handle these special cases.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/usb/host/ehci-fsl.c |   21 ++++++++++++++++++---
 1 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/drivers/usb/host/ehci-fsl.c b/drivers/usb/host/ehci-fsl.c
index 38dda36..cb8d85b 100644
--- a/drivers/usb/host/ehci-fsl.c
+++ b/drivers/usb/host/ehci-fsl.c
@@ -281,11 +281,14 @@ int usb_hcd_fsl_probe(const struct hc_driver *driver,
  */
 void usb_hcd_fsl_remove(struct usb_hcd *hcd, struct platform_device *pdev)
 {
-	usb_remove_hcd(hcd);
-	iounmap(hcd->regs);
 #if !defined(CONFIG_FSL_USB_OTG) && !defined(CONFIG_FSL_USB_OTG_MODULE)
 	release_mem_region(hcd->rsrc_start, hcd->rsrc_len);
+	usb_remove_hcd(hcd);
+#else
+	if (have_hcd)
+		usb_remove_hcd(hcd);
 #endif
+	iounmap(hcd->regs);
 	usb_put_hcd(hcd);
 }
 
@@ -485,12 +488,24 @@ static int ehci_fsl_drv_resume(struct platform_device *pdev)
 	return 0;
 }
 
+static void ehci_fsl_drv_shutdown(struct platform_device *pdev)
+{
+#if defined(CONFIG_FSL_USB_OTG) || defined(CONFIG_FSL_USB_OTG_MODULE)
+	if (have_hcd)
+		usb_hcd_platform_shutdown(pdev);
+#else
+	usb_hcd_platform_shutdown(pdev);
+#endif
+
+	return;
+}
+
 MODULE_ALIAS("platform:fsl-ehci");
 
 static struct platform_driver ehci_fsl_driver = {
 	.probe = ehci_fsl_drv_probe,
 	.remove = ehci_fsl_drv_remove,
-	.shutdown = usb_hcd_platform_shutdown,
+	.shutdown = ehci_fsl_drv_shutdown,
 	.suspend = ehci_fsl_drv_suspend,
 	.resume = ehci_fsl_drv_resume,
 	.driver = {
-- 
1.6.3.3

