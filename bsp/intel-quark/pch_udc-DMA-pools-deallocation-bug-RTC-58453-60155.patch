From 4186ebc1e950864b3cf4c1d5a7ee88ad242c387c Mon Sep 17 00:00:00 2001
From: Jose Luis Martin <josex.l.martin@intel.com>
Date: Thu, 27 Nov 2014 13:26:19 +0000
Subject: [PATCH 35/42] pch_udc: DMA pools deallocation bug - RTC #58453,
 #60155

- At module unload time, DMA pools resources for setup and data endpoints
  deallocated and destroyed as it follow (reversing probe time creation -
  allocation): dealloc data - dealloc setup - destroy setup - destroy data

Signed-off-by: Jose Luis Martin <josex.l.martin@intel.com>

Change-Id: I1ba2bd5b8958a6b54867d19f8baf2495ca3a130a
(cherry picked from commit 1b34e13470355a9a38d59cbe6234d521bdd19fdb)

Signed-off-by: Dheeraj Jamwal <dheerajx.s.jamwal@intel.com>
Change-Id: I28577de52390c2894560d0177963c978c5ce0aeb
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/4784
Tested-by: Tan, Raymond <raymond.tan@intel.com>
Reviewed-by: Tan, Raymond <raymond.tan@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/usb/gadget/pch_udc.c |   21 ++++++++++++---------
 1 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/drivers/usb/gadget/pch_udc.c b/drivers/usb/gadget/pch_udc.c
index 6108dcc..0f2ec38 100644
--- a/drivers/usb/gadget/pch_udc.c
+++ b/drivers/usb/gadget/pch_udc.c
@@ -3146,9 +3146,14 @@ static void pch_udc_remove(struct pci_dev *pdev)
 		dev_err(&pdev->dev,
 			"%s: gadget driver still bound!!!\n", __func__);
 	/* dma pool cleanup */
-	if (dev->data_requests)
-		pci_pool_destroy(dev->data_requests);
-
+	if (dev->data_requests) {
+		/* cleanup DMA desc's for ep0in */
+		if (dev->ep[UDC_EP0OUT_IDX].td_data) {
+			pci_pool_free(dev->data_requests,
+				dev->ep[UDC_EP0OUT_IDX].td_data,
+				dev->ep[UDC_EP0OUT_IDX].td_data_phys);
+		}
+	}
 	if (dev->stp_requests) {
 		/* cleanup DMA desc's for ep0in */
 		if (dev->ep[UDC_EP0OUT_IDX].td_stp) {
@@ -3156,13 +3161,11 @@ static void pch_udc_remove(struct pci_dev *pdev)
 				dev->ep[UDC_EP0OUT_IDX].td_stp,
 				dev->ep[UDC_EP0OUT_IDX].td_stp_phys);
 		}
-		if (dev->ep[UDC_EP0OUT_IDX].td_data) {
-			pci_pool_free(dev->stp_requests,
-				dev->ep[UDC_EP0OUT_IDX].td_data,
-				dev->ep[UDC_EP0OUT_IDX].td_data_phys);
-		}
-		pci_pool_destroy(dev->stp_requests);
 	}
+	if (dev->stp_requests)
+		pci_pool_destroy(dev->stp_requests);
+	if (dev->data_requests)
+		pci_pool_destroy(dev->data_requests);
 
 	if (dev->dma_addr)
 		dma_unmap_single(&dev->pdev->dev, dev->dma_addr,
-- 
1.7.5.4

