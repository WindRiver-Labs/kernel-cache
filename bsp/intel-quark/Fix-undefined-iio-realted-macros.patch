From 40bbaa922ac5e789399043ff5445c3a965910815 Mon Sep 17 00:00:00 2001
From: Lans Zhang <jia.zhang@windriver.com>
Date: Sun, 4 Jan 2015 11:07:41 +0800
Subject: [PATCH 21/31] Fix undefined iio realted macros.

This fix resolves the similar build errors for 3 iio drivers, e.g:

error: 'IIO_CHAN_INFO_RAW_SEPARATE_BIT' undeclared here (not in a function)
    .info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT  \
                 ^

IIO_CHAN_INFO_RAW_SEPARATE_BIT and IIO_CHAN_INFO_SCALE_SEPARATE_BIT are not
defined and used any more since 3.10. Instead, the single bitfield
"info_mask" now is splited into info_mask_separate and
info_mask_shared_by_type separately.

Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
---
 drivers/iio/accel/lis331dlh_intel_qrk.c  |    4 +-
 drivers/iio/adc/adc1x8s102.c             |    4 +-
 drivers/staging/iio/adc/max78m6610_lmu.c |  116 +++++++++++++++---------------
 3 files changed, 62 insertions(+), 62 deletions(-)

diff --git a/drivers/iio/accel/lis331dlh_intel_qrk.c b/drivers/iio/accel/lis331dlh_intel_qrk.c
index 38d9ffa..c6d4fff 100644
--- a/drivers/iio/accel/lis331dlh_intel_qrk.c
+++ b/drivers/iio/accel/lis331dlh_intel_qrk.c
@@ -115,8 +115,8 @@
 { \
 	.type = device_type, \
 	.modified = 1, \
-	.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT | \
-			IIO_CHAN_INFO_SCALE_SEPARATE_BIT, \
+	.info_mask_separate = BIT(IIO_CHAN_INFO_RAW) | \
+			BIT(IIO_CHAN_INFO_SCALE), \
 	.scan_index = index, \
 	.channel = mod, \
 	.channel2 = mod, \
diff --git a/drivers/iio/adc/adc1x8s102.c b/drivers/iio/adc/adc1x8s102.c
index b05ae8b..f425b3b 100644
--- a/drivers/iio/adc/adc1x8s102.c
+++ b/drivers/iio/adc/adc1x8s102.c
@@ -86,8 +86,8 @@ struct adc1x8s102_state {
 		.type = IIO_VOLTAGE,					\
 		.indexed = 1,						\
 		.channel = index,					\
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |		\
-			IIO_CHAN_INFO_SCALE_SEPARATE_BIT,		\
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW) |		\
+				      BIT(IIO_CHAN_INFO_SCALE),		\
 		.address = index,					\
 		.scan_index = index,					\
 		.scan_type = {						\
diff --git a/drivers/staging/iio/adc/max78m6610_lmu.c b/drivers/staging/iio/adc/max78m6610_lmu.c
index 074e9ec..ee5cfe3 100644
--- a/drivers/staging/iio/adc/max78m6610_lmu.c
+++ b/drivers/staging/iio/adc/max78m6610_lmu.c
@@ -188,8 +188,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "inst",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = INSTAN_VA,
 		.scan_index = 0,
 		.scan_type = {
@@ -204,8 +204,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "rms",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = IA_RMS,
 		.scan_index = 1,
 		.scan_type = {
@@ -220,8 +220,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "inst_act",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = INSTAN_PA,
 		.scan_index = 2,
 		.scan_type = {
@@ -236,8 +236,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "inst_react",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = INSTAN_PQA,
 		.scan_index = 3,
 		.scan_type = {
@@ -255,8 +255,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		/* IIO_CHAN_INFO_AVERAGE_RAW is not used here,
 		 * this average value is provide by HW register,
 		 */
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = WATT_A,
 		.scan_index = 4,
 		.scan_type = {
@@ -271,8 +271,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "avg_react",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = VAR_A,
 		.scan_index = 5,
 		.scan_type = {
@@ -287,8 +287,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "apparent",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = VA_A,
 		.scan_index = 6,
 		.scan_type = {
@@ -303,8 +303,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "factor",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = PFA,
 		.scan_index = 7,
 		.scan_type = {
@@ -319,8 +319,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "rms",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = VA_RMS,
 		.scan_index = 8,
 		.scan_type = {
@@ -337,8 +337,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "inst",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = INSTAN_VB,
 		.scan_index = 9,
 		.scan_type = {
@@ -353,8 +353,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "rms",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = IB_RMS,
 		.scan_index = 10,
 		.scan_type = {
@@ -369,8 +369,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "inst_act",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = INSTAN_PB,
 		.scan_index = 11,
 		.scan_type = {
@@ -385,8 +385,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "inst_react",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = INSTAN_PQB,
 		.scan_index = 12,
 		.scan_type = {
@@ -401,8 +401,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "avg_act",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = WATT_B,
 		.scan_index = 13,
 		.scan_type = {
@@ -417,8 +417,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "avg_react",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = VAR_B,
 		.scan_index = 14,
 		.scan_type = {
@@ -433,8 +433,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "apparent",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = VA_B,
 		.scan_index = 15,
 		.scan_type = {
@@ -449,8 +449,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "factor",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = PFB,
 		.scan_index = 16,
 		.scan_type = {
@@ -465,8 +465,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "rms",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = VB_RMS,
 		.scan_index = 17,
 		.scan_type = {
@@ -481,8 +481,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "inst",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = INSTAN_IA,
 		.scan_index = 18,
 		.scan_type = {
@@ -497,8 +497,8 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "inst",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT |
-				IIO_CHAN_INFO_SCALE_SHARED_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE),
 		.address = INSTAN_IB,
 		.scan_index = 19,
 		.scan_type = {
@@ -513,7 +513,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "phasecomp",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = PHASECOMP1,
 		.scan_index = -1,
 		.scan_type = {
@@ -529,7 +529,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "phasecomp",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = PHASECOMP3,
 		.scan_index = -1,
 		.scan_type = {
@@ -545,7 +545,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "calib_target_rms",
-		.info_mask = IIO_CHAN_INFO_SHARED_BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_RAW),
 		.address = VTARGET,
 		.scan_index = -1,
 		.scan_type = {
@@ -561,7 +561,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "calib_target_rms",
-		.info_mask = IIO_CHAN_INFO_SHARED_BIT(IIO_CHAN_INFO_RAW),
+		.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_RAW),
 		.address = ITARGET,
 		.scan_index = -1,
 		.scan_type = {
@@ -577,7 +577,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "calib_gain",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = S0_GAIN,
 		.scan_index = -1,
 		.scan_type = {
@@ -593,7 +593,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "calib_gain",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = S2_GAIN,
 		.scan_index = -1,
 		.scan_type = {
@@ -609,7 +609,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "calib_gain",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = S1_GAIN,
 		.scan_index = -1,
 		.scan_type = {
@@ -625,7 +625,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "calib_gain",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = S3_GAIN,
 		.scan_index = -1,
 		.scan_type = {
@@ -641,7 +641,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "calib_offset",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = S0_OFFSET,
 		.scan_index = -1,
 		.scan_type = {
@@ -657,7 +657,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "calib_offset",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = S2_OFFSET,
 		.scan_index = -1,
 		.scan_type = {
@@ -673,7 +673,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 0,
 		.extend_name = "calib_offset",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = S1_OFFSET,
 		.scan_index = -1,
 		.scan_type = {
@@ -689,7 +689,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 1,
 		.channel = 1,
 		.extend_name = "calib_offset",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = S3_OFFSET,
 		.scan_index = -1,
 		.scan_type = {
@@ -705,7 +705,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 0,
 		.channel = 0,
 		.extend_name = "surge_threshold",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = VSURG_VAL,
 		.scan_index = -1,
 		.scan_type = {
@@ -721,7 +721,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 0,
 		.channel = 0,
 		.extend_name = "sag_threshold",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = VSAG_VAL,
 		.scan_index = -1,
 		.scan_type = {
@@ -737,7 +737,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 0,
 		.channel = 0,
 		.extend_name = "rms_min_threshold",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = VRMS_MIN,
 		.scan_index = -1,
 		.scan_type = {
@@ -753,7 +753,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 0,
 		.channel = 0,
 		.extend_name = "rms_max_threshold",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = VRMS_MAX,
 		.scan_index = -1,
 		.scan_type = {
@@ -769,7 +769,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 0,
 		.channel = 0,
 		.extend_name = "rms_max_threshold",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = IRMS_MAX,
 		.scan_index = -1,
 		.scan_type = {
@@ -785,7 +785,7 @@ static const struct iio_chan_spec max78m6610_lmu_channels[] = {
 		.indexed = 0,
 		.channel = 0,
 		.extend_name = "active_max_threshold",
-		.info_mask = IIO_CHAN_INFO_RAW_SEPARATE_BIT,
+		.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),
 		.address = WATT_MAX,
 		.scan_index = -1,
 		.scan_type = {
-- 
1.7.5.4

