From a169f5842a186e0540e6c3172db7d897c1d0ec17 Mon Sep 17 00:00:00 2001
From: Dheeraj Jamwal <dheerajx.s.jamwal@intel.com>
Date: Thu, 30 Jul 2015 11:18:32 +0800
Subject: [PATCH 1/8] net:can:j1939: Fix for Defect 99141,Failed to complete
 some performance, Stress and Soak test for J1939.

Reverting the changes of using helper functions for sock reference assignments making it similar to 3.8 kernel

Change-Id: I05c507869f2175d6bf563f31a6f4a13a0929c1e2
signed-off-by: Dheeraj jamwal <dheerajx.s.jamwal@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/5919
Reviewed-by: Fung, Joshua <joshua.fung@intel.com>

Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 net/can/j1939/socket.c    |    3 +--
 net/can/j1939/transport.c |    3 ++-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/net/can/j1939/socket.c b/net/can/j1939/socket.c
index b8973cb..c101624 100644
--- a/net/can/j1939/socket.c
+++ b/net/can/j1939/socket.c
@@ -795,8 +795,7 @@ static int j1939sk_sendmsg(struct kiocb *iocb, struct socket *sock,
 	if (ret < 0)
 		goto free_skb;
 	skb->dev = dev;
-	can_skb_set_owner(skb, sk);
-
+	skb->sk = sk;
 	BUILD_BUG_ON(sizeof(skb->cb) < sizeof(*skb_cb));
 
 	skb_cb = (void *) skb->cb;
diff --git a/net/can/j1939/transport.c b/net/can/j1939/transport.c
index 0177bf9..418f434 100644
--- a/net/can/j1939/transport.c
+++ b/net/can/j1939/transport.c
@@ -352,7 +352,7 @@ static int j1939tp_tx_dat(struct session *related,
 	skb->pkt_type = related->skb->pkt_type;
 	skb->ip_summed = related->skb->ip_summed;
 
-	can_skb_set_owner(skb, related->skb->sk);
+	skb->sk = related->skb->sk;
 	skb_cb = (void *)skb->cb;
 	*skb_cb = *(related->cb);
 	fix_cb(skb_cb);
@@ -387,6 +387,7 @@ static int j1939xtp_do_tx_ctl(struct sk_buff *related, int extd,
 	skb->protocol = related->protocol;
 	skb->pkt_type = related->pkt_type;
 	skb->ip_summed = related->ip_summed;
+	skb->sk = related->sk;
 	can_skb_set_owner(skb, related->sk);
 
 	skb_cb = (void *)skb->cb;
-- 
1.7.5.4

