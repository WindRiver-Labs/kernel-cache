From 4d325a7d2cf66566ad61155f3ced84aa12f6019e Mon Sep 17 00:00:00 2001
From: Lans Zhang <jia.zhang@windriver.com>
Date: Wed, 9 Oct 2013 17:55:49 +0800
Subject: [PATCH 1183/1187] Fix IMR3 violation.

The symptom of this problem makes using usb/sd as rootfs causing IMR 3
violation. This problem results in a chain of failure:

The failure of ioremap() -> no cln-plat -> cannot get platform id item
within mfh -> intel_cln_plat_get_id() returns CLANTON_PLAT_UNDEFINED ->
intel_cln_imr_runt_oldkern_teardown() not called.

To fix this issue from root, be aware of using a proper value of mapped
area determined by the maximum size of MFH and platform data area,
which cannot conflict with other MFH items.

Additionally, a proper calculation to the end of a resource requiring
plus 1 is required.

Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
---
 arch/x86/platform/cln/intel_cln_board_data.c |    7 ++++---
 arch/x86/platform/cln/intel_cln_plat_data.c  |    3 ++-
 2 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/arch/x86/platform/cln/intel_cln_board_data.c b/arch/x86/platform/cln/intel_cln_board_data.c
index 180ec5e..57ce766 100644
--- a/arch/x86/platform/cln/intel_cln_board_data.c
+++ b/arch/x86/platform/cln/intel_cln_board_data.c
@@ -41,7 +41,7 @@
 #define MTD_PART_LEN				0x00040000
 #define MFH_PADDING				0x1E8
 #define MFH_MAGIC				0x5F4D4648
-#define FLASH_SIZE				0x00400000
+#define FLASH_SIZE				(PLATFORM_DATA_OFFSET + 0x1000)
 
 /* MFH types supported @ version #1 */
 #define MFH_ITEM_FW_STAGE1			0x00000000
@@ -200,8 +200,9 @@ static int __init intel_cln_board_data_init(void)
 
 		/* Platform data */
 		plat_res.start = SPIFLASH_BASEADDR + PLATFORM_DATA_OFFSET;
-		count = *(uint32_t*)(spi_data + PLATFORM_DATA_OFFSET + sizeof(uint32_t));
-		plat_res.end = count;
+		/* Hardcode the size of header. */
+		count = 12 + *(uint32_t*)(spi_data + PLATFORM_DATA_OFFSET + sizeof(uint32_t));
+		plat_res.end = plat_res.start + count - 1;
 		platform_device_register(&plat_pdev);
 	}
 
diff --git a/arch/x86/platform/cln/intel_cln_plat_data.c b/arch/x86/platform/cln/intel_cln_plat_data.c
index 12e6b27..dcaaa9f 100644
--- a/arch/x86/platform/cln/intel_cln_plat_data.c
+++ b/arch/x86/platform/cln/intel_cln_plat_data.c
@@ -251,7 +251,8 @@ static int intel_cln_plat_probe(struct platform_device *pdev)
 	}
 
 	/* Validate length is sane */
-	if ((char*)plat_hdr + plat_hdr->length > end_addr ||
+	if ((char*)plat_hdr + sizeof(struct cln_plat_dat_hdr) +
+		plat_hdr->length > end_addr ||
 		plat_hdr->length < sizeof(struct cln_plat_data)){
 		pr_err(PREFIX"Invalid length 0x%08lx\n",
 			(unsigned long)plat_hdr->length);
-- 
1.7.5.4

