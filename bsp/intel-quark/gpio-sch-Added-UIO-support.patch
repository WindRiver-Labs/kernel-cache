From 69950e2a5f3c42ac9ff4cae1d26076bbd992f573 Mon Sep 17 00:00:00 2001
From: William Rafferty <william.a.rafferty@intel.com>
Date: Thu, 18 Jun 2015 14:57:54 +0100
Subject: [PATCH 46/65] gpio-sch: Added UIO support

Signed-off-by: William Rafferty <william.a.rafferty@intel.com>
Change-Id: Icc7771b05ca3120a2885e1beedbe22549801c0f2
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/5356
Reviewed-by: Fung, Joshua <joshua.fung@intel.com>
Tested-by: Tan, Raymond <raymond.tan@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/gpio/gpio-sch.c |   20 ++++++++++++++++++++
 1 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/drivers/gpio/gpio-sch.c b/drivers/gpio/gpio-sch.c
index 621d422..63983ac 100755
--- a/drivers/gpio/gpio-sch.c
+++ b/drivers/gpio/gpio-sch.c
@@ -31,6 +31,7 @@
 #include <linux/irq.h>
 
 #include <linux/gpio.h>
+#include <linux/uio_driver.h>
 
 #define GEN	0x00
 #define GIO	0x04
@@ -73,6 +74,7 @@ struct sch_gpio {
 	int irq_base;
 	bool irq_support;
 	DECLARE_BITMAP(wake_irqs, MAX_GPIO);
+	struct uio_info info;
 };
 
 #define to_sch_gpio(gc)		container_of(gc, struct sch_gpio, chip)
@@ -520,8 +522,24 @@ static int sch_gpio_probe(struct platform_device *pdev)
 
 	platform_set_drvdata(pdev, sch);
 
+	/* UIO */
+	sch->info.port[0].name = "gpio_regs";
+	sch->info.port[0].start = res->start;
+	sch->info.port[0].size = resource_size(res);
+	sch->info.port[0].porttype = UIO_PORT_X86;
+	sch->info.name = "sch_gpio";
+	sch->info.version = "0.0.1";
+
+	if (uio_register_device(&pdev->dev, &sch->info))
+		goto err_sch_uio_register;
+
+	pr_info("%s UIO port addr 0x%04x size %lu porttype %d\n",
+		__func__, (unsigned int)sch->info.port[0].start,
+		sch->info.port[0].size, sch->info.port[0].porttype);
+
 	return 0;
 
+err_sch_uio_register:
 err_sch_request_irq:
 	irq_free_descs(sch->irq_base, sch->chip.ngpio);
 
@@ -535,6 +553,8 @@ static int sch_gpio_remove(struct platform_device *pdev)
 {
 	struct sch_gpio *sch = platform_get_drvdata(pdev);
 
+	uio_unregister_device(&sch->info);
+
 	if (sch->irq_support) {
 		if (sch->irq >= 0)
 			free_irq(sch->irq, sch);
-- 
1.7.5.4

