From 939701ec19e1c7374bd1e50f7e866edf959204b4 Mon Sep 17 00:00:00 2001
From: Bogdan Pricop <bogdan.pricop@emutex.com>
Date: Mon, 5 Jan 2015 11:26:30 +0000
Subject: [PATCH 06/42] tty: serial: sc16is7xx: Implement
 SER_RS485_RTS_ON_SEND flag support

* Change the value of "auto RS-485 RTS output inversion" bit according to
  value of SER_RS485_RTS_ON_SEND flag.

Signed-off-by: Bogdan Pricop <bogdan.pricop@emutex.com>
Signed-off-by: Dan O'Donovan <dan@emutex.com>
Signed-off-by: Kartikey Parmar <kartikeyx.r.parmar@intel.com>
Change-Id: I67d8aa9d65689721ace47d60a75e46a4cd73e61a
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/4644
Reviewed-by: Fung, Joshua <joshua.fung@intel.com>
Tested-by: Fung, Joshua <joshua.fung@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/tty/serial/sc16is7xx.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/drivers/tty/serial/sc16is7xx.c b/drivers/tty/serial/sc16is7xx.c
index e60e249..817def0 100644
--- a/drivers/tty/serial/sc16is7xx.c
+++ b/drivers/tty/serial/sc16is7xx.c
@@ -815,6 +815,7 @@ static void sc16is7xx_config_rs485(struct uart_port *port,
 				   struct serial_rs485 *rs485)
 {
 	struct sc16is7xx_one *one = to_sc16is7xx_one(port, port);
+	u8 val;
 
 	one->rs485 = *rs485;
 
@@ -827,6 +828,15 @@ static void sc16is7xx_config_rs485(struct uart_port *port,
 				      SC16IS7XX_EFCR_AUTO_RS485_BIT,
 				      0);
 	}
+	/* Configure auto-RS485 RTS output inversion */
+	if ((!!(one->rs485.flags & SER_RS485_RTS_ON_SEND)) ==
+		(!!(one->rs485.flags & SER_RS485_RTS_AFTER_SEND)))
+		dev_warn(port->dev, "SER_RS485_RTS_ON_SEND and SER_RS485_RTS_AFTER_SEND flags have the same value!");
+	val = one->rs485.flags & SER_RS485_RTS_ON_SEND ?
+		SC16IS7XX_EFCR_RTS_INVERT_BIT : 0;
+	sc16is7xx_port_update(port, SC16IS7XX_EFCR_REG,
+			SC16IS7XX_EFCR_RTS_INVERT_BIT,
+			val);
 }
 #endif
 
-- 
1.7.5.4

