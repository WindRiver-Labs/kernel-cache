From dcab4f172e8368a64155eedb75a85e5d066cba58 Mon Sep 17 00:00:00 2001
From: Mat Martineau <mathewm@codeaurora.org>
Date: Mon, 14 May 2012 11:24:33 -0700
Subject: [PATCH 0110/1187] Bluetooth: Update tx_send_head when sending ERTM
 data

commit 577cfaeb864874011386a05ab4f5580a6a2aeb11	upstream

Commit 94122bbe9c8c4ad7ba9f02f9a30bfc95672c404e introduced a problem
where tx_send_head was not set to point to the first skb in the ERTM
transmit queue, which stalled data transmission.  This change sets
that pointer when transmission is not already in progress.

Reported-by: Andrei Emeltchenko <andrei.emeltchenko@intel.com>
Signed-off-by: Mat Martineau <mathewm@codeaurora.org>
Signed-off-by: Gustavo Padovan <gustavo@padovan.org>
Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
---
 net/bluetooth/l2cap_core.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/net/bluetooth/l2cap_core.c b/net/bluetooth/l2cap_core.c
index 20bd054..a8b8018 100644
--- a/net/bluetooth/l2cap_core.c
+++ b/net/bluetooth/l2cap_core.c
@@ -2106,7 +2106,10 @@ int l2cap_chan_send(struct l2cap_chan *chan, struct msghdr *msg, size_t len,
 		if (err)
 			break;
 
+		if (chan->mode == L2CAP_MODE_ERTM && chan->tx_send_head == NULL)
+			chan->tx_send_head = seg_queue.next;
 		skb_queue_splice_tail_init(&seg_queue, &chan->tx_q);
+
 		if (chan->mode == L2CAP_MODE_ERTM)
 			err = l2cap_ertm_send(chan);
 		else
-- 
1.7.5.4

