From bef100cca78cdff01d826894efeb31b8c5541065 Mon Sep 17 00:00:00 2001
From: Adrian Burns <adrian.burns@intel.com>
Date: Thu, 8 May 2014 14:28:54 +0100
Subject: [PATCH 38/42] g_serial pch_udc_isr fix - RTC #73384

dont let isr return IRQ_NONE if isr was handled previously in do while loop
(cherry picked from commit 56cd634ea6a000c7d258e890de2f1c8bd3ce98d9)

Signed-off-by: Dheeraj Jamwal <dheerajx.s.jamwal@intel.com>
Change-Id: If434a4f03f309de8c59b21be395f5fc989048dcd
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/4787
Tested-by: Tan, Raymond <raymond.tan@intel.com>
Reviewed-by: Tan, Raymond <raymond.tan@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/usb/gadget/pch_udc.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/gadget/pch_udc.c b/drivers/usb/gadget/pch_udc.c
index 0f2ec38..3371248 100644
--- a/drivers/usb/gadget/pch_udc.c
+++ b/drivers/usb/gadget/pch_udc.c
@@ -2872,7 +2872,7 @@ static irqreturn_t pch_udc_isr(int irq, void *pdev)
 {
 	struct pch_udc_dev *dev = (struct pch_udc_dev *) pdev;
 	u32 dev_intr, ep_intr;
-	int i, events = 0;
+	int i, events = 0, count = 0;
 
 	mask_pvm(dev->pdev);
 	do {
@@ -2893,15 +2893,20 @@ static irqreturn_t pch_udc_isr(int irq, void *pdev)
 			/* Clear device interrupts */
 			pch_udc_write_device_interrupts(dev, dev_intr);
 			events = 1;
+			count = 1;
 		}
 		if (ep_intr) {
 			/* Clear ep interrupts */
 			pch_udc_write_ep_interrupts(dev, ep_intr);
 			events = 1;
+			count = 1;
 		}
 		if (!dev_intr && !ep_intr) {
 			unmask_pvm(dev->pdev);
-			return IRQ_NONE;
+			if (count)
+				return IRQ_HANDLED;
+			else
+				return IRQ_NONE;
 		}
 		spin_lock(&dev->lock);
 		if (dev_intr)
-- 
1.7.5.4

