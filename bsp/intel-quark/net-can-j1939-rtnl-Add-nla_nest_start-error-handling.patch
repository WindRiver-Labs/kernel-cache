From 49aaa56e703968299abdac1faadb2d7e1d379074 Mon Sep 17 00:00:00 2001
From: "Chew, Kean Ho" <kean.ho.chew@intel.com>
Date: Tue, 4 Nov 2014 15:26:08 +0800
Subject: [PATCH 16/65] net: can: j1939: rtnl: Add nla_nest_start error
 handling

Klocwork #26058 found out that nla_nest_start has no handling against
null pointer and it is being sent directly to nla_nest_end. This is
a critical (1) issue and need to be addressed.

This patch is created to solve this issue. Upon detecting nla_nest_start
is providing a NULL pointer, the error handling will be jump to nla_failure.

Signed-off-by: Chew, Kean Ho <kean.ho.chew@intel.com>
(cherry picked from kernel 3.8 commit 302b83aa65485ebbaf148118c324bec31dcbecfe)

Signed-off-by: Dheeraj Jamwal <dheerajx.s.jamwal@intel.com>
Change-Id: If3a275793fcb4d18fe995dff3722c8d1ec1eb31c
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/4680
Reviewed-by: Tan, Raymond <raymond.tan@intel.com>
Tested-by: Tan, Raymond <raymond.tan@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 net/can/j1939/rtnl.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/net/can/j1939/rtnl.c b/net/can/j1939/rtnl.c
index b80ac70..1e18317 100644
--- a/net/can/j1939/rtnl.c
+++ b/net/can/j1939/rtnl.c
@@ -158,6 +158,9 @@ static int j1939rtnl_fill_ifaddr(struct sk_buff *skb, int ifindex,
 	ifm->ifa_index = ifindex;
 
 	nla = nla_nest_start(skb, IFA_LOCAL);
+	if (!nla)
+		goto nla_failure;
+
 	if (j1939_address_is_unicast(addr))
 		if (nla_put_u8(skb, IFA_J1939_ADDR, addr) < 0)
 			goto nla_failure;
@@ -167,6 +170,7 @@ static int j1939rtnl_fill_ifaddr(struct sk_buff *skb, int ifindex,
 	nla_nest_end(skb, nla);
 
 	return nlmsg_end(skb, nlh);
+
 nla_failure:
        nlmsg_cancel(skb, nlh);
        return -EMSGSIZE;
-- 
1.7.5.4

