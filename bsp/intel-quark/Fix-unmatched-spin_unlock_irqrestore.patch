From 3e44871fda69cb801bb7a5e3f75389142a50de38 Mon Sep 17 00:00:00 2001
From: Pengyu Ma <pengyu.ma@windriver.com>
Date: Wed, 10 Jun 2015 16:38:09 +0800
Subject: [PATCH 40/42] Fix unmatched spin_unlock_irqrestore

This typo was introduced by commit:
"gpio: sch: Enable IRQ support for Quark X1000"

When load gpio-sch module BUG show:
BUG: workqueue leaked lock or atomic: kworker/u2:1/0x00000004/31
ion: deferred_probe_work_func
CPU: 0 PID: 31 Comm: kworker/u2:1 Tainted: G        W    3.14.29ltsi-WR7.0.0.0_standard #12
Hardware name: Intel Corp. QUARK/CrossHill, BIOS 0x010100F5 01/01/2014
Workqueue: deferwq deferred_probe_work_func
 c1419be0 c1419be0 f36e9f0c c15cf60a f36e9f44 c1048316 c16e071c f68b6680
 00000004 0000001f c1419be0 f36e9f30 00000000 00199000 f647fd00 f36bf618
 f36bf600 c0199000 f36e9f74 c1048b41 c01bbeec 00000000 00000001 f68b6400
Call Trace:
 [<c1419be0>] ? dev_set_drvdata+0x10/0x10
 [<c1419be0>] ? dev_set_drvdata+0x10/0x10
 [<c15cf60a>] dump_stack+0x16/0x18
 [<c1048316>] process_one_work+0x376/0x3f0
 [<c1419be0>] ? dev_set_drvdata+0x10/0x10
 [<c1048b41>] worker_thread+0x41/0x550
 [<c1048b00>] ? init_pwq.part.33+0x10/0x10
 [<c104dfa5>] kthread+0xa5/0xc0
 [<c15d971b>] ret_from_kernel_thread+0x1b/0x30
 [<c104df00>] ? flush_kthread_worker+0x60/0x60

Fix spin_unlock_irqrestore will fix this BUG

Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/gpio/gpio-sch.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/gpio/gpio-sch.c b/drivers/gpio/gpio-sch.c
index 48b03e3..65cb162 100644
--- a/drivers/gpio/gpio-sch.c
+++ b/drivers/gpio/gpio-sch.c
@@ -149,7 +149,7 @@ static void sch_gpio_set(struct gpio_chip *gc, unsigned gpio_num, int val)
 
 	spin_lock_irqsave(&sch->lock, flags);
 	sch_gpio_reg_set(gc, gpio_num, GLV, val);
-	spin_lock_irqsave(&sch->lock, flags);
+	spin_unlock_irqrestore(&sch->lock, flags);
 }
 
 static int sch_gpio_direction_out(struct gpio_chip *gc, unsigned gpio_num,
@@ -160,7 +160,7 @@ static int sch_gpio_direction_out(struct gpio_chip *gc, unsigned gpio_num,
 
 	spin_lock_irqsave(&sch->lock, flags);
 	sch_gpio_reg_set(gc, gpio_num, GIO, 0);
-	spin_lock_irqsave(&sch->lock, flags);
+	spin_unlock_irqrestore(&sch->lock, flags);
 
 	/*
 	 * according to the datasheet, writing to the level register has no
-- 
1.7.5.4

