From 050fa346998b89e3c1e6fcc14a2db40c2530ce62 Mon Sep 17 00:00:00 2001
From: "Tan, Raymond" <raymond.tan@intel.com>
Date: Mon, 23 Mar 2015 17:01:00 +0800
Subject: [PATCH 07/32] gpiolib: undo retval changes of gpiochip_remove

This patch is added to undo the gpiochip_remove retval which was
not available during the development of Quark FFRD drivers based on
kernel 3.8.

However, while enabling the latest GPIO Designware Driver, which is
based on kernel 3.18, this gpiochip_remove function signature has
been changed to return type void.

Thus, there's this need to temporary revert the retval to int that
was introduced after the development of some Quark FFRD Drivers.

Signed-off-by: Tan, Raymond <raymond.tan@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/gpio/gpiolib.c      |   24 +++++++++++++++++-------
 include/linux/gpio/driver.h |    2 +-
 2 files changed, 18 insertions(+), 8 deletions(-)

diff --git a/drivers/gpio/gpiolib.c b/drivers/gpio/gpiolib.c
index 5f04b46..3db4f2c 100644
--- a/drivers/gpio/gpiolib.c
+++ b/drivers/gpio/gpiolib.c
@@ -307,9 +307,10 @@ static void gpiochip_irqchip_remove(struct gpio_chip *gpiochip);
  *
  * A gpio_chip with any GPIOs still requested may not be removed.
  */
-void gpiochip_remove(struct gpio_chip *chip)
+int gpiochip_remove(struct gpio_chip *chip)
 {
 	unsigned long	flags;
+	int		status = 0;
 	unsigned	id;
 
 	acpi_gpiochip_remove(chip);
@@ -321,15 +322,24 @@ void gpiochip_remove(struct gpio_chip *chip)
 	of_gpiochip_remove(chip);
 
 	for (id = 0; id < chip->ngpio; id++) {
-		if (test_bit(FLAG_REQUESTED, &chip->desc[id].flags))
-			dev_crit(chip->dev, "REMOVING GPIOCHIP WITH GPIOS STILL REQUESTED\n");
+		if (test_bit(FLAG_REQUESTED, &chip->desc[id].flags)) {
+			status = -EBUSY;
+			break;
+		}
+	}
+	if (status ==0) {
+		for (id = 0; id < chip->ngpio; id++)
+			chip->desc[id].chip = NULL;
+
+		list_del(&chip->list);
 	}
-	for (id = 0; id < chip->ngpio; id++)
-		chip->desc[id].chip = NULL;
 
-	list_del(&chip->list);
 	spin_unlock_irqrestore(&gpio_lock, flags);
-	gpiochip_unexport(chip);
+
+	if (status ==0)
+		gpiochip_unexport(chip);
+
+	return status;
 }
 EXPORT_SYMBOL_GPL(gpiochip_remove);
 
diff --git a/include/linux/gpio/driver.h b/include/linux/gpio/driver.h
index 19722e8..df749d7 100644
--- a/include/linux/gpio/driver.h
+++ b/include/linux/gpio/driver.h
@@ -144,7 +144,7 @@ extern const char *gpiochip_is_requested(struct gpio_chip *chip,
 
 /* add/remove chips */
 extern int gpiochip_add(struct gpio_chip *chip);
-extern void gpiochip_remove(struct gpio_chip *chip);
+extern int gpiochip_remove(struct gpio_chip *chip);
 extern struct gpio_chip *gpiochip_find(void *data,
 			      int (*match)(struct gpio_chip *chip, void *data));
 
-- 
1.7.5.4

