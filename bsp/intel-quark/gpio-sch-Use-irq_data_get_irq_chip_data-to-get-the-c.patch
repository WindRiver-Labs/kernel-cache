From b6604da07bc5f0a642af18a4460156e17431e636 Mon Sep 17 00:00:00 2001
From: "Arumugam,Kamenee" <kamenee.arumugam@intel.com>
Date: Tue, 19 May 2015 11:16:31 +0800
Subject: [PATCH 07/65] gpio-sch : Use irq_data_get_irq_chip_data to get the
 context

We set the context as chip_data to the irq through irq_set_chip_data,
thus we need to retrieve the context through the usage of
irq_data_get_irq_chip_data.

Signed-off-by: Arumugam,Kamenee <kamenee.arumugam@intel.com>
Change-Id: If9e20879376daf7147e7b41867b30e148a264460
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/4995
Reviewed-by: Tan, Raymond <raymond.tan@intel.com>
Tested-by: Tan, Raymond <raymond.tan@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/gpio/gpio-sch.c |   11 +++++------
 1 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/gpio/gpio-sch.c b/drivers/gpio/gpio-sch.c
index 47d2807..1a8f9c0 100644
--- a/drivers/gpio/gpio-sch.c
+++ b/drivers/gpio/gpio-sch.c
@@ -61,7 +61,6 @@ struct sch_gpio_context {
 
 struct sch_gpio {
 	struct gpio_chip chip;
-	struct irq_data data;
 	struct sch_gpio_context context;
 	spinlock_t lock;
 	unsigned short iobase;
@@ -195,7 +194,7 @@ static struct gpio_chip sch_gpio_chip = {
 
 static void sch_gpio_irq_enable(struct irq_data *d)
 {
-	struct sch_gpio *sch = container_of(d, struct sch_gpio, data);
+	struct sch_gpio *sch = irq_data_get_irq_chip_data(d);
 	struct sch_gpio_context *regs = &sch->context;
 	u32 gpio_num;
 	unsigned long flags;
@@ -215,7 +214,7 @@ static void sch_gpio_irq_enable(struct irq_data *d)
 
 static void sch_gpio_irq_disable(struct irq_data *d)
 {
-	struct sch_gpio *sch = container_of(d, struct sch_gpio, data);
+	struct sch_gpio *sch = irq_data_get_irq_chip_data(d);
 	u32 gpio_num;
 	unsigned long flags;
 
@@ -233,7 +232,7 @@ static void sch_gpio_irq_disable(struct irq_data *d)
 
 static void sch_gpio_irq_ack(struct irq_data *d)
 {
-	struct sch_gpio *sch = container_of(d, struct sch_gpio, data);
+	struct sch_gpio *sch = irq_data_get_irq_chip_data(d);
 	u32 gpio_num;
 	unsigned long flags;
 
@@ -245,7 +244,7 @@ static void sch_gpio_irq_ack(struct irq_data *d)
 
 static int sch_gpio_irq_type(struct irq_data *d, unsigned type)
 {
-	struct sch_gpio *sch = container_of(d, struct sch_gpio, data);
+	struct sch_gpio *sch = irq_data_get_irq_chip_data(d);
 	struct sch_gpio_context *regs = &sch->context;
 	unsigned long flags;
 	u32 gpio_num;
@@ -301,7 +300,7 @@ static int sch_gpio_irq_type(struct irq_data *d, unsigned type)
  */
 int sch_gpio_resume_irq_set_wake(struct irq_data *d, unsigned int on)
 {
-	struct sch_gpio *sch = container_of(d, struct sch_gpio, data);
+	struct sch_gpio *sch = irq_data_get_irq_chip_data(d);
 	u32 gpio_num = 0;
 	int ret = 0;
 
-- 
1.7.5.4

