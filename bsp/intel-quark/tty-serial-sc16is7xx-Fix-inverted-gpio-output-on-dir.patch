From 5d60c90ab0df7291596aef2b567bf47eeda06e69 Mon Sep 17 00:00:00 2001
From: Dan O'Donovan <dan@emutex.com>
Date: Fri, 13 Feb 2015 11:21:59 +0000
Subject: [PATCH 12/42] tty: serial: sc16is7xx: Fix inverted gpio output on
 direction change

When changing the direction of a GPIO pin from input to output,
the initial logic level on the GPIO output may be incorrect.

It appears that the setting of the output state does not take effect
unless the pin direction is actually set to output first.

This patch switches the order in which the IODir and IOState register
are updated when changing the GPIO pin direction to output.

Alas, it is not possible to set the initial state of the GPIO output
immediately when the direction is set to output - some delay will occur.

Signed-off-by: Dan O'Donovan <dan@emutex.com>
Signed-off-by: Kartikey Parmar <kartikeyx.r.parmar@intel.com>
Change-Id: I907cc54d64cb6ef474b529aba8ed8adad2782292
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/4648
Reviewed-by: Fung, Joshua <joshua.fung@intel.com>
Tested-by: Fung, Joshua <joshua.fung@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/tty/serial/sc16is7xx.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/tty/serial/sc16is7xx.c b/drivers/tty/serial/sc16is7xx.c
index 618e7e0..ecfca75 100644
--- a/drivers/tty/serial/sc16is7xx.c
+++ b/drivers/tty/serial/sc16is7xx.c
@@ -1054,10 +1054,15 @@ static int sc16is7xx_gpio_direction_output(struct gpio_chip *chip,
 						gpio);
 	struct uart_port *port = &s->p[0].port;
 
-	sc16is7xx_port_update(port, SC16IS7XX_IOSTATE_REG, BIT(offset),
-			      val ? BIT(offset) : 0);
+	/* Writes to IOState bits are effectively ignored when the corresponding
+	 * bits in IODir are 0, so IODir is updated first
+	 *
+	 * i.e. A short delay may occur before the output level is set correctly
+	 */
 	sc16is7xx_port_update(port, SC16IS7XX_IODIR_REG, BIT(offset),
 			      BIT(offset));
+	sc16is7xx_port_update(port, SC16IS7XX_IOSTATE_REG, BIT(offset),
+			      val ? BIT(offset) : 0);
 
 	return 0;
 }
-- 
1.7.5.4

