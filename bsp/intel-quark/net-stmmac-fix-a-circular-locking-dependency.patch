From 4a73ae6eafbd56598e6fd6f067ac0651f11c3975 Mon Sep 17 00:00:00 2001
From: Lans Zhang <jia.zhang@windriver.com>
Date: Tue, 6 Jan 2015 09:44:18 +0800
Subject: [PATCH 28/31] net: stmmac: fix a circular locking dependency

netif_tx_lock spinlock as A, the tx_lock of stmmac's private
structure as B. In ndo_start_xmit process, A->B. While in function
stmmac_tx_clean, changed to B->A. In fact, it is not necessary
to hold the tx_lock for all the function stmmac_tx_clean.
Shrink its scope to avoid the conflict.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index cc1417c..0fd655a 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -1325,6 +1325,7 @@ static void stmmac_tx_clean(struct stmmac_priv *priv)
 
 		priv->dirty_tx++;
 	}
+	spin_unlock(&priv->tx_lock);
 	if (unlikely(netif_queue_stopped(priv->dev) &&
 		     stmmac_tx_avail(priv) > STMMAC_TX_THRESH(priv))) {
 		netif_tx_lock(priv->dev);
@@ -1340,7 +1341,6 @@ static void stmmac_tx_clean(struct stmmac_priv *priv)
 		stmmac_enable_eee_mode(priv);
 		mod_timer(&priv->eee_ctrl_timer, STMMAC_LPI_T(eee_timer));
 	}
-	spin_unlock(&priv->tx_lock);
 }
 
 static inline void stmmac_enable_dma_irq(struct stmmac_priv *priv)
-- 
1.7.5.4

