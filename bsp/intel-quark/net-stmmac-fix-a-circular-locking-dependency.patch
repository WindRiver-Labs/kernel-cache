From a53e09b3f325b9fc951e5460126c32e6fc0c07f4 Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Wed, 30 Jul 2014 10:45:11 +0800
Subject: [PATCH] net: stmmac: fix a circular locking dependency

netif_tx_lock spinlock as A, the tx_lock of stmmac's private
structure as B. In ndo_start_xmit process, A->B. While in function
stmmac_tx_clean, changed to B->A. In fact, it is not necessary
to hold the tx_lock for all the function stmmac_tx_clean.
Shrink its scope to avoid the conflict.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index cb289f7..aa287d6 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -696,6 +696,7 @@ static void stmmac_tx_clean(struct stmmac_priv *priv)
 
 		priv->dirty_tx++;
 	}
+	spin_unlock(&priv->tx_lock);
 	if (unlikely(netif_queue_stopped(priv->dev) &&
 		     stmmac_tx_avail(priv) > STMMAC_TX_THRESH(priv))) {
 		netif_tx_lock(priv->dev);
@@ -706,7 +707,6 @@ static void stmmac_tx_clean(struct stmmac_priv *priv)
 		}
 		netif_tx_unlock(priv->dev);
 	}
-	spin_unlock(&priv->tx_lock);
 }
 
 static inline void stmmac_enable_dma_irq(struct stmmac_priv *priv)
-- 
1.7.5.4

