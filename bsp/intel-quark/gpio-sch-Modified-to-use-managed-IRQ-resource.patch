From 18aac44ca368779c712bdae630ddf3176ec8db37 Mon Sep 17 00:00:00 2001
From: William Rafferty <william.a.rafferty@intel.com>
Date: Thu, 18 Jun 2015 16:26:03 +0100
Subject: [PATCH 48/65] gpio-sch: Modified to use managed IRQ resource

Signed-off-by: William Rafferty <william.a.rafferty@intel.com>
Change-Id: I5cf2c64eb5274f7be60fe1085f98be52f839e2c9
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/5358
Reviewed-by: Fung, Joshua <joshua.fung@intel.com>
Tested-by: Tan, Raymond <raymond.tan@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/gpio/gpio-sch.c |   19 +++++++++----------
 1 files changed, 9 insertions(+), 10 deletions(-)

diff --git a/drivers/gpio/gpio-sch.c b/drivers/gpio/gpio-sch.c
index 78f4782..2379a96 100755
--- a/drivers/gpio/gpio-sch.c
+++ b/drivers/gpio/gpio-sch.c
@@ -423,7 +423,7 @@ static irqreturn_t sch_gpio_irq_handler(int irq, void *dev_id)
 static int sch_gpio_probe(struct platform_device *pdev)
 {
 	struct sch_gpio *sch;
-	struct resource *res;
+	struct resource *res, *res_irq;
 	int err = 0;
 	int ret;
 
@@ -439,8 +439,9 @@ static int sch_gpio_probe(struct platform_device *pdev)
 				 pdev->name))
 		return -EBUSY;
 
-	sch->irq = platform_get_irq(pdev, 0);
-	if (sch->irq >= 0) {
+	res_irq = platform_get_resource(pdev, IORESOURCE_IRQ, 0);
+	if (res_irq) {
+		sch->irq = res_irq->start;
 		sch->irq_support = true;
 	} else {
 		dev_warn(&pdev->dev,
@@ -510,8 +511,10 @@ static int sch_gpio_probe(struct platform_device *pdev)
 		/* disable interrupts */
 		sch_gpio_irq_disable_all(sch);
 
-		err = request_irq(sch->irq, sch_gpio_irq_handler, IRQF_SHARED,
-				  KBUILD_MODNAME, sch);
+		err = devm_request_irq(&pdev->dev, sch->irq,
+				       sch_gpio_irq_handler, IRQF_SHARED,
+				       KBUILD_MODNAME, sch);
+
 		if (err) {
 			dev_err(&pdev->dev,
 				"failed to request IRQ\n");
@@ -557,12 +560,8 @@ static int sch_gpio_remove(struct platform_device *pdev)
 
 	uio_unregister_device(&sch->info);
 
-	if (sch->irq_support) {
-		if (sch->irq >= 0)
-			free_irq(sch->irq, sch);
-
+	if (sch->irq_support)
 		irq_free_descs(sch->irq_base, sch->chip.ngpio);
-	}
 
 	ret = gpiochip_remove(&sch->chip);
 
-- 
1.7.5.4

