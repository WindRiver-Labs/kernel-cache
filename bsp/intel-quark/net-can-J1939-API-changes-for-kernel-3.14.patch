From 58aee62bc72e99c5c46ae2691216e8d586dbdebc Mon Sep 17 00:00:00 2001
From: Dheeraj Jamwal <dheerajx.s.jamwal@intel.com>
Date: Tue, 7 Apr 2015 13:50:14 +0800
Subject: [PATCH 17/65] net: can: J1939:API changes for kernel 3.14.

Changes made to can_rtnl_doit API  and  write_proc which is no more a member in the proc_dir_entry is removed.

Signed-off-by: Dheeraj Jamwal <dheerajx.s.jamwal@intel.com>
Signed-off-by: Naveen Kumar <naveen.kumarx.saini@intel.com>
Change-Id: I37a973f90ba79592bb95f926cf9646798d20c578
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/4681
Reviewed-by: Tan, Raymond <raymond.tan@intel.com>
Tested-by: Tan, Raymond <raymond.tan@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 net/can/af_can.c           |    2 +-
 net/can/j1939/j1939-priv.h |    6 +++---
 net/can/j1939/proc.c       |   16 +++++++++++++---
 net/can/j1939/rtnl.c       |    4 ++--
 4 files changed, 19 insertions(+), 9 deletions(-)

diff --git a/net/can/af_can.c b/net/can/af_can.c
index 4ea3a3b..c3aaf44 100644
--- a/net/can/af_can.c
+++ b/net/can/af_can.c
@@ -896,7 +896,7 @@ static int can_rtnl_doit(struct sk_buff *skb, struct nlmsghdr *nlh, void *arg)
 		break;
 	}
 	if (fn)
-		ret = fn(skb, nlh, arg);
+		ret = fn(skb, nlh);
 	else
 		ret = -EPROTONOSUPPORT;
 	can_put_proto(cp);
diff --git a/net/can/j1939/j1939-priv.h b/net/can/j1939/j1939-priv.h
index 5adc8bf..f33898e 100644
--- a/net/can/j1939/j1939-priv.h
+++ b/net/can/j1939/j1939-priv.h
@@ -179,7 +179,7 @@ extern void j1939_get_promisc_receiver(int ifindex);
 
 extern int j1939_proc_add(const char *file,
 		int (*seq_show)(struct seq_file *sqf, void *v),
-		write_proc_t write);
+		void *write);
 extern void j1939_proc_remove(const char *file);
 
 extern const char j1939_procname[];
@@ -308,8 +308,8 @@ extern void j1939tp_module_exit(void);
 
 /* rtnetlink */
 extern const struct rtnl_af_ops j1939_rtnl_af_ops;
-extern int j1939rtnl_new_addr(struct sk_buff *, struct nlmsghdr *, void *arg);
-extern int j1939rtnl_del_addr(struct sk_buff *, struct nlmsghdr *, void *arg);
+extern int j1939rtnl_new_addr(struct sk_buff *, struct nlmsghdr *);
+extern int j1939rtnl_del_addr(struct sk_buff *, struct nlmsghdr *);
 extern int j1939rtnl_dump_addr(struct sk_buff *, struct netlink_callback *);
 
 #endif /* _J1939_PRIV_H_ */
diff --git a/net/can/j1939/proc.c b/net/can/j1939/proc.c
index 76acfa0..5ea4002 100644
--- a/net/can/j1939/proc.c
+++ b/net/can/j1939/proc.c
@@ -14,6 +14,7 @@
 #include <linux/seq_file.h>
 #include <linux/proc_fs.h>
 #include <linux/uaccess.h>
+#include <../../../fs/proc/internal.h>
 
 #include "j1939-priv.h"
 
@@ -38,12 +39,16 @@ proc_file_write(struct file *file, const char __user *buffer,
 	struct proc_dir_entry *dp;
 
 	dp = PDE(inode);
-
+/* FixMe: In 3.14 kernel write_proc support is removed
+*  from the proc_dir_entry structure.
+*/
+#if 0
 	if (!dp->write_proc)
 		return -EIO;
 
 	/* FIXME: does this routine need ppos?  probably... */
 	return dp->write_proc(file, buffer, count, dp->data);
+#endif
 }
 
 static const struct file_operations j1939_proc_ops = {
@@ -57,7 +62,7 @@ static const struct file_operations j1939_proc_ops = {
 
 int j1939_proc_add(const char *file,
 		int (*seq_show)(struct seq_file *sqf, void *v),
-		write_proc_t write)
+		void *write)
 {
 	struct proc_dir_entry *pde;
 	int mode = 0;
@@ -73,7 +78,12 @@ int j1939_proc_add(const char *file,
 	if (!pde)
 		goto fail_create;
 	pde->data = seq_show;
+/* FixMe: In 3.14 kernel write_proc support is removed
+*  from the proc_dir_entry structure.
+*/
+#if 0
 	pde->write_proc = write;
+#endif
 	return 0;
 
 fail_create:
@@ -99,6 +109,6 @@ __init int j1939_proc_module_init(void)
 void j1939_proc_module_exit(void)
 {
 	if (rootdir)
-		proc_net_remove(&init_net, j1939_procname);
+		remove_proc_entry(j1939_procname, init_net.proc_net);
 }
 
diff --git a/net/can/j1939/rtnl.c b/net/can/j1939/rtnl.c
index 1e18317..6a9bc43 100644
--- a/net/can/j1939/rtnl.c
+++ b/net/can/j1939/rtnl.c
@@ -26,7 +26,7 @@ static const struct nla_policy j1939_ifa_policy[IFA_J1939_MAX] = {
 	[IFA_J1939_NAME] = { .type = NLA_U64, },
 };
 
-int j1939rtnl_del_addr(struct sk_buff *skb, struct nlmsghdr *nlh, void *arg)
+int j1939rtnl_del_addr(struct sk_buff *skb, struct nlmsghdr *nlh)
 {
 	int ret;
 	struct ifaddrmsg *ifm;
@@ -86,7 +86,7 @@ int j1939rtnl_del_addr(struct sk_buff *skb, struct nlmsghdr *nlh, void *arg)
 	return ret;
 }
 
-int j1939rtnl_new_addr(struct sk_buff *skb, struct nlmsghdr *nlh, void *arg)
+int j1939rtnl_new_addr(struct sk_buff *skb, struct nlmsghdr *nlh)
 {
 	struct ifaddrmsg *ifm;
 	struct j1939_segment *jseg;
-- 
1.7.5.4

