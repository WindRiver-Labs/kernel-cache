From 69fb27bd33a3101f92323fec9ebefc8c8c2c43c3 Mon Sep 17 00:00:00 2001
From: Lans Zhang <jia.zhang@windriver.com>
Date: Sun, 27 Apr 2014 18:16:45 +0800
Subject: [PATCH 3/3] Fix NULL pointer reference if UIO=m.

gpio-sch driver registers an UIO device where uio core may be not
initialized yet. To fix this issue, introduce uio_initialized to
record when uio core is available to the external.

Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
---
 drivers/gpio/gpio-sch.c    |    5 +++++
 drivers/uio/uio.c          |    8 +++++++-
 include/linux/uio_driver.h |    2 ++
 3 files changed, 14 insertions(+), 1 deletions(-)

diff --git a/drivers/gpio/gpio-sch.c b/drivers/gpio/gpio-sch.c
index e04772d..126e207 100755
--- a/drivers/gpio/gpio-sch.c
+++ b/drivers/gpio/gpio-sch.c
@@ -728,6 +728,11 @@ static int __devinit sch_gpio_probe(struct platform_device *pdev)
 	info->name = "sch_gpio";
 	info->version = "0.0.1";
 
+	if (!uio_initialized) {
+		dev_info(&pdev->dev, "uio core is not ready yet. Deferring..\n");
+		goto err_sch_uio_register;
+	}
+
 	if (uio_register_device(&pdev->dev, info))
 		goto err_sch_uio_register;
 
diff --git a/drivers/uio/uio.c b/drivers/uio/uio.c
index a783d53..50e4ca1 100644
--- a/drivers/uio/uio.c
+++ b/drivers/uio/uio.c
@@ -26,6 +26,8 @@
 #include <linux/cdev.h>
 #include <linux/uio_driver.h>
 
+int uio_initialized;
+
 #define UIO_MAX_DEVICES		(1U << MINORBITS)
 
 struct uio_device {
@@ -894,7 +896,11 @@ EXPORT_SYMBOL_GPL(uio_unregister_device);
 
 static int __init uio_init(void)
 {
-	return init_uio_class();
+	int ret = init_uio_class();
+
+	uio_initialized = !ret;
+
+	return ret;
 }
 
 static void __exit uio_exit(void)
diff --git a/include/linux/uio_driver.h b/include/linux/uio_driver.h
index 1ad4724..ef81ef3 100644
--- a/include/linux/uio_driver.h
+++ b/include/linux/uio_driver.h
@@ -17,6 +17,8 @@
 #include <linux/fs.h>
 #include <linux/interrupt.h>
 
+extern int uio_initialized;
+
 struct module;
 struct uio_map;
 
-- 
1.7.5.4

