From f7f233e9210b80bfdfe1a3b02404a6e6566aa5c5 Mon Sep 17 00:00:00 2001
From: Dan O'Donovan <dan@emutex.com>
Date: Fri, 6 Feb 2015 12:26:52 +0000
Subject: [PATCH 07/42] tty: serial: sc16is7xx: Preserve RS485 config when
 port is closed

RS485 configuration bits in the EFCR register were reset when
the port was closed.  This appears inconsistent with other RS485-aware
drivers (e.g. atmel_serial.c) so updated code to leave those bits intact.

Also added code to set/clear the 9-bit mode bit in the EFCR register if RS485
is enabled/disabled.

Signed-off-by: Dan O'Donovan <dan@emutex.com>
Signed-off-by: Kartikey Parmar <kartikeyx.r.parmar@intel.com>
Change-Id: I71eda53b785c10c568fe9ca60e461c102be13c3c
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/4645
Reviewed-by: Fung, Joshua <joshua.fung@intel.com>
Tested-by: Fung, Joshua <joshua.fung@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/tty/serial/sc16is7xx.c |   17 +++++++++++------
 1 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/drivers/tty/serial/sc16is7xx.c b/drivers/tty/serial/sc16is7xx.c
index 817def0..74c379b 100644
--- a/drivers/tty/serial/sc16is7xx.c
+++ b/drivers/tty/serial/sc16is7xx.c
@@ -821,11 +821,14 @@ static void sc16is7xx_config_rs485(struct uart_port *port,
 
 	if (one->rs485.flags & SER_RS485_ENABLED) {
 		sc16is7xx_port_update(port, SC16IS7XX_EFCR_REG,
-				      SC16IS7XX_EFCR_AUTO_RS485_BIT,
-				      SC16IS7XX_EFCR_AUTO_RS485_BIT);
+				      SC16IS7XX_EFCR_AUTO_RS485_BIT |
+				      SC16IS7XX_EFCR_9BIT_MODE_BIT,
+				      SC16IS7XX_EFCR_AUTO_RS485_BIT |
+				      SC16IS7XX_EFCR_9BIT_MODE_BIT);
 	} else {
 		sc16is7xx_port_update(port, SC16IS7XX_EFCR_REG,
-				      SC16IS7XX_EFCR_AUTO_RS485_BIT,
+				      SC16IS7XX_EFCR_AUTO_RS485_BIT |
+				      SC16IS7XX_EFCR_9BIT_MODE_BIT,
 				      0);
 	}
 	/* Configure auto-RS485 RTS output inversion */
@@ -926,9 +929,11 @@ static void sc16is7xx_shutdown(struct uart_port *port)
 	/* Disable all interrupts */
 	sc16is7xx_port_write(port, SC16IS7XX_IER_REG, 0);
 	/* Disable TX/RX */
-	sc16is7xx_port_write(port, SC16IS7XX_EFCR_REG,
-			     SC16IS7XX_EFCR_RXDISABLE_BIT |
-			     SC16IS7XX_EFCR_TXDISABLE_BIT);
+	sc16is7xx_port_update(port, SC16IS7XX_EFCR_REG,
+			      SC16IS7XX_EFCR_RXDISABLE_BIT |
+			      SC16IS7XX_EFCR_TXDISABLE_BIT,
+			      SC16IS7XX_EFCR_RXDISABLE_BIT |
+			      SC16IS7XX_EFCR_TXDISABLE_BIT);
 
 	sc16is7xx_power(port, 0);
 }
-- 
1.7.5.4

