From a313c3c54dfa7c553a36125df1927ad521f4a0ad Mon Sep 17 00:00:00 2001
From: Lans Zhang <jia.zhang@windriver.com>
Date: Sun, 11 Jan 2015 13:10:53 +0800
Subject: [PATCH 2/3] spi-pxa2xx-pci: remove the dependency of COMMON_CLK for
 quark.

Upstream commit afa93c9 estibalishes the dependency between spi-pxa2xx-pci
and COMMON_CLK. However, COMMON_CLK is not supported bt Quark SoC.

Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
---
 drivers/spi/Kconfig          |    2 +-
 drivers/spi/spi-pxa2xx-pci.c |   21 ++++++++++++++++++++-
 2 files changed, 21 insertions(+), 2 deletions(-)

diff --git a/drivers/spi/Kconfig b/drivers/spi/Kconfig
index ce0655b..360c232 100644
--- a/drivers/spi/Kconfig
+++ b/drivers/spi/Kconfig
@@ -337,7 +337,7 @@ config SPI_PXA2XX
 	  additional documentation can be found a Documentation/spi/pxa2xx.
 
 config SPI_PXA2XX_PCI
-	def_tristate SPI_PXA2XX && PCI && COMMON_CLK
+	def_tristate SPI_PXA2XX && PCI && (COMMON_CLK || INTEL_QUARK_X1000_SOC)
 
 config SPI_RSPI
 	tristate "Renesas RSPI controller"
diff --git a/drivers/spi/spi-pxa2xx-pci.c b/drivers/spi/spi-pxa2xx-pci.c
index a906c9e..9f22924 100644
--- a/drivers/spi/spi-pxa2xx-pci.c
+++ b/drivers/spi/spi-pxa2xx-pci.c
@@ -7,8 +7,10 @@
 #include <linux/of_device.h>
 #include <linux/module.h>
 #include <linux/spi/pxa2xx_spi.h>
+#ifdef CONFIG_COMMON_CLK
 #include <linux/clk.h>
 #include <linux/clk-provider.h>
+#endif
 
 enum {
 	PORT_CE4100,
@@ -24,7 +26,9 @@ struct pxa_spi_info {
 	int tx_chan_id;
 	int rx_slave_id;
 	int rx_chan_id;
+#ifdef CONFIG_COMMON_CLK
 	unsigned long max_clk_rate;
+#endif
 };
 
 static struct pxa_spi_info spi_info_configs[] = {
@@ -36,7 +40,9 @@ static struct pxa_spi_info spi_info_configs[] = {
 		.tx_chan_id = -1,
 		.rx_slave_id = -1,
 		.rx_chan_id = -1,
+#ifdef CONFIG_COMMON_CLK
 		.max_clk_rate = 3686400,
+#endif
 	},
 	[PORT_BYT] = {
 		.type = LPSS_SSP,
@@ -46,13 +52,17 @@ static struct pxa_spi_info spi_info_configs[] = {
 		.tx_chan_id = 0,
 		.rx_slave_id = 1,
 		.rx_chan_id = 1,
+#ifdef CONFIG_COMMON_CLK
 		.max_clk_rate = 50000000,
+#endif
 	},
 	[PORT_QUARK_X1000] = {
 		.type = QUARK_X1000_SSP,
 		.port_id = -1,
 		.num_chipselect = 1,
+#ifdef CONFIG_COMMON_CLK
 		.max_clk_rate = 50000000,
+#endif
 	},
 };
 
@@ -65,7 +75,9 @@ static int pxa2xx_spi_pci_probe(struct pci_dev *dev,
 	struct pxa2xx_spi_master spi_pdata;
 	struct ssp_device *ssp;
 	struct pxa_spi_info *c;
+#ifdef CONFIG_COMMON_CLK
 	char buf[40];
+#endif
 
 	ret = pcim_enable_device(dev);
 	if (ret)
@@ -97,11 +109,13 @@ static int pxa2xx_spi_pci_probe(struct pci_dev *dev,
 	ssp->port_id = (c->port_id >= 0) ? c->port_id : dev->devfn;
 	ssp->type = c->type;
 
+#ifdef CONFIG_COMMON_CLK
 	snprintf(buf, sizeof(buf), "pxa2xx-spi.%d", ssp->port_id);
 	ssp->clk = clk_register_fixed_rate(&dev->dev, buf , NULL,
 					CLK_IS_ROOT, c->max_clk_rate);
 	 if (IS_ERR(ssp->clk))
 		return PTR_ERR(ssp->clk);
+#endif
 
 	memset(&pi, 0, sizeof(pi));
 	pi.parent = &dev->dev;
@@ -112,7 +126,9 @@ static int pxa2xx_spi_pci_probe(struct pci_dev *dev,
 
 	pdev = platform_device_register_full(&pi);
 	if (IS_ERR(pdev)) {
+#ifdef CONFIG_COMMON_CLK
 		clk_unregister(ssp->clk);
+#endif
 		return PTR_ERR(pdev);
 	}
 
@@ -124,13 +140,16 @@ static int pxa2xx_spi_pci_probe(struct pci_dev *dev,
 static void pxa2xx_spi_pci_remove(struct pci_dev *dev)
 {
 	struct platform_device *pdev = pci_get_drvdata(dev);
+#ifdef CONFIG_COMMON_CLK
 	struct pxa2xx_spi_master *spi_pdata;
 
 	spi_pdata = dev_get_platdata(&pdev->dev);
-
+#endif
 	platform_device_unregister(pdev);
+#ifdef CONFIG_COMMON_CLK
 	clk_unregister(spi_pdata->ssp.clk);
 	pci_set_drvdata(dev, NULL);
+#endif
 }
 
 static const struct pci_device_id pxa2xx_spi_pci_devices[] = {
-- 
1.7.5.4

