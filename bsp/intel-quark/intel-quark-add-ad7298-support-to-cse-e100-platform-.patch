From e80a990962b7e4a0e0e4f3e85a3af9bfda401812 Mon Sep 17 00:00:00 2001
From: Genli Pan <genli.pan@windriver.com>
Date: Mon, 2 Mar 2015 16:58:50 +0800
Subject: [PATCH] intel-quark: add ad7298 support to cse-e100 platform driver

intel-quark ODM board cse-e100 (supermicro) has ADC hardware (ADS8028), but
cse-e100 platform driver doesn't support it. Since cse-e100 is very similar
to cross-hill and ad7298 driver works for cse-e100 ADC, so directly replicated
ad7298 support to cse-e100 from cross-hill.

Signed-off-by: Genli Pan <genli.pan@windriver.com>
---
 .../platform/x86/quark/intel_qrk_plat_cse_e100.c   |   49 ++++++++++++++++++++
 1 files changed, 49 insertions(+), 0 deletions(-)

diff --git a/drivers/platform/x86/quark/intel_qrk_plat_cse_e100.c b/drivers/platform/x86/quark/intel_qrk_plat_cse_e100.c
index 92c26d9..b8d7b74 100644
--- a/drivers/platform/x86/quark/intel_qrk_plat_cse_e100.c
+++ b/drivers/platform/x86/quark/intel_qrk_plat_cse_e100.c
@@ -114,6 +114,22 @@ static struct gpio reserved_gpios[] = {
 };
 
 /******************************************************************************
+ *             Analog Devices AD7298 SPI Device Platform Data
+ ******************************************************************************/
+#include "linux/platform_data/ad7298.h"
+
+/* Maximum input voltage allowed for each ADC input, in milliVolts */
+#define AD7298_MAX_EXT_VIN 5000
+
+static const struct ad7298_platform_data ad7298_platform_data = {
+	.ext_ref = false,
+	.ext_vin_max = { AD7298_MAX_EXT_VIN, AD7298_MAX_EXT_VIN,
+		AD7298_MAX_EXT_VIN, AD7298_MAX_EXT_VIN,
+		AD7298_MAX_EXT_VIN, AD7298_MAX_EXT_VIN,
+		AD7298_MAX_EXT_VIN, AD7298_MAX_EXT_VIN }
+};
+
+/******************************************************************************
  *             Maxim 78M6610+LMU SPI Device Platform Data
  ******************************************************************************/
 #include "linux/platform_data/max78m6610_lmu.h"
@@ -125,6 +141,10 @@ static const struct max78m6610_lmu_platform_data max78m6610_lmu_pdata = {
 /******************************************************************************
  *                 Intel Quark SPI Controller Data
  ******************************************************************************/
+static struct pxa2xx_spi_chip qrk_ffrd_spi_0_cs_0 = {
+	.gpio_cs = 8,
+};
+
 static struct pxa2xx_spi_chip qrk_ffrd_spi_1_cs_0 = {
 	.gpio_cs = 10,
 };
@@ -216,6 +236,31 @@ err:
 	return ret;
 }
 
+/**
+ * intel_qrk_spi_add_onboard_devs
+ *
+ * @return 0 on success or standard errnos on failure
+ *
+ * Registers onboard SPI device(s) present on the Cross Hill platform
+ */
+static int intel_qrk_spi_add_onboard_devs(void)
+{
+	struct spi_board_info spi_onboard_devs[] = {
+		{
+			.modalias = "ad7298",
+			.max_speed_hz = 5000000,
+			.platform_data = &ad7298_platform_data,
+			.mode = SPI_MODE_2,
+			.bus_num = 0,
+			.chip_select = 0,
+			.controller_data = &qrk_ffrd_spi_0_cs_0,
+		},
+	};
+
+	return spi_register_board_info(spi_onboard_devs,
+			ARRAY_SIZE(spi_onboard_devs));
+}
+
 
 /**
  * intel_qrk_spi_get_bpeak_id
@@ -369,6 +414,10 @@ static int intel_qrk_spi_devs_addon(void)
 
 	if (cse_e100_probe != 1) {
 
+		ret = intel_qrk_spi_add_onboard_devs();
+		if (ret)
+			return ret;
+
 		ret = intel_qrk_spi_add_bpeak_devs();
 
 		cse_e100_probe = 1;
-- 
1.7.5.4

