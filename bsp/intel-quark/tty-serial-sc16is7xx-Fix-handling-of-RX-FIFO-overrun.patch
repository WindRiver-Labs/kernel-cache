From 4cb5d784fb56dce81cf1608854a12eafc4fb5cbf Mon Sep 17 00:00:00 2001
From: Dan O'Donovan <dan@emutex.com>
Date: Thu, 12 Feb 2015 17:00:53 +0000
Subject: [PATCH 11/42] tty: serial: sc16is7xx: Fix handling of RX FIFO
 overrun

If an RX FIFO overrun occurs, the IRQ handler for the
SC16IS7xx device will never return because the overrun
condition is not properly cleared.

In addition, the overrun is unlikely to be flagged to the
UART driver core in most cases because of an assumption in
the driver that bit 7 of the LSR register would be asserted
when the overrun error occurs, but this is not the case.

This patch adds a check for overrun on bit 1 of the LSR
register if overrun is suspected, and resets the RX FIFO
if the overrun condition is confirmed.

Signed-off-by: Dan O'Donovan <dan@emutex.com>
Signed-off-by: Kartikey Parmar <kartikeyx.r.parmar@intel.com>
Change-Id: Ibffb2917c895df027c3b417800f813b187f8f06d
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/4647
Reviewed-by: Fung, Joshua <joshua.fung@intel.com>
Tested-by: Fung, Joshua <joshua.fung@intel.com>
Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 drivers/tty/serial/sc16is7xx.c |   13 ++++++++++++-
 1 files changed, 12 insertions(+), 1 deletions(-)

diff --git a/drivers/tty/serial/sc16is7xx.c b/drivers/tty/serial/sc16is7xx.c
index db3bbb7..618e7e0 100644
--- a/drivers/tty/serial/sc16is7xx.c
+++ b/drivers/tty/serial/sc16is7xx.c
@@ -457,13 +457,15 @@ static void sc16is7xx_handle_rx(struct uart_port *port, unsigned int rxlen,
 		port->icount.buf_overrun++;
 		/* Ensure sanity of RX level */
 		rxlen = sizeof(s->buf);
+		read_lsr = true;
 	}
 
 	while (rxlen) {
 		/* Only read lsr if there are possible errors in FIFO */
 		if (read_lsr) {
 			lsr = sc16is7xx_port_read(port, SC16IS7XX_LSR_REG);
-			if (!(lsr & SC16IS7XX_LSR_FIFOE_BIT))
+			if (!(lsr & (SC16IS7XX_LSR_FIFOE_BIT |
+				     SC16IS7XX_LSR_OE_BIT)))
 				read_lsr = false; /* No errors left in FIFO */
 		} else
 			lsr = 0;
@@ -521,6 +523,15 @@ static void sc16is7xx_handle_rx(struct uart_port *port, unsigned int rxlen,
 					 flag);
 		}
 		rxlen -= bytes_read;
+
+		if (unlikely(lsr & SC16IS7XX_LSR_OE_BIT)) {
+			/* Reset Rx FIFO to clear overrun status */
+			dev_warn(port->dev, "Resetting RX FIFO due to overrun");
+			sc16is7xx_port_update(port, SC16IS7XX_FCR_REG,
+					      SC16IS7XX_FCR_RXRESET_BIT,
+					      SC16IS7XX_FCR_RXRESET_BIT);
+			break;
+		}
 	}
 
 	tty_flip_buffer_push(port->state->port.tty);
-- 
1.7.5.4

