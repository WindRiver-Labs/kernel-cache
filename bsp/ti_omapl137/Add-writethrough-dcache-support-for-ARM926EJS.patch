From 4500368be43c6abf70c505ffc0e301da3c83bb07 Mon Sep 17 00:00:00 2001
From: Tonyliu <Bo.Liu@windriver.com>
Date: Thu, 22 Oct 2009 16:57:24 +0800
Subject: [PATCH 01/14] Add writethrough dcache support for ARM926EJS

Commit 0a72bfa0fe656cb8edaf4f3b66bc9f998476a296 from
git://git.kernel.org/pub/scm/linux/kernel/git/khilman/linux-davinci.git

The ARM kernel supports writethrough data cache via the
CONFIG_CPU_DCACHE_WRITETHROUGH option.  However, that
functionality wasn't implemented in the arch/arm/boot/compressed
code.  It is now necessary due to a new ARM926EJS processor
that has an issue with writeback data cache.

Signed-off-by: Mark A. Greer <mgreer@mvista.com>

Integrated-by: Tonyliu <Bo.Liu@windriver.com>
---
 arch/arm/boot/compressed/head.S |   15 +++++++++++++++
 1 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/arch/arm/boot/compressed/head.S b/arch/arm/boot/compressed/head.S
index d42f89b..30fd191 100644
--- a/arch/arm/boot/compressed/head.S
+++ b/arch/arm/boot/compressed/head.S
@@ -399,7 +399,11 @@ __setup_mmu:	sub	r3, r4, #16384		@ Page directory size
 		orr	r1, r1, #3 << 10
 		add	r2, r3, #16384
 1:		cmp	r1, r9			@ if virt > start of RAM
+#ifdef CONFIG_CPU_DCACHE_WRITETHROUGH
+		orrhs   r1, r1, #0x08       @ set cacheable
+#else
 		orrhs	r1, r1, #0x0c		@ set cacheable, bufferable
+#endif
 		cmp	r1, r10			@ if virt > end of RAM
 		bichs	r1, r1, #0x0c		@ clear cacheable, bufferable
 		str	r1, [r0], #4		@ 1:1 mapping
@@ -422,6 +426,11 @@ __setup_mmu:	sub	r3, r4, #16384		@ Page directory size
 		str	r1, [r0]
 		mov	pc, lr
 
+__arm926ejs_mmu_cache_on:
+#ifdef CONFIG_CPU_DCACHE_WRITETHROUGH
+		mov r0, #4          @ put dcache in WT mode
+		mcr p15, 7, r0, c15, c0, 0
+#endif
 __armv4_mmu_cache_on:
 		mov	r12, lr
 		bl	__setup_mmu
@@ -603,6 +612,12 @@ proc_types:
 		b	__armv4_mpu_cache_off
 		b	__armv4_mpu_cache_flush
 
+		.word   0x41069260      @ ARM926EJ-S (v5TEJ)
+		.word   0xff0ffff0
+		b   __arm926ejs_mmu_cache_on
+		b   __armv4_mmu_cache_off
+		b   __armv5tej_mmu_cache_flush
+
 		.word	0x00007000		@ ARM7 IDs
 		.word	0x0000f000
 		mov	pc, lr
-- 
1.6.5.2

