From 4b9d8c0a9b6ebd6b917706dc71beaa1f85dbfdb9 Mon Sep 17 00:00:00 2001
From: Liu Changhui <changhui.liu@windriver.com>
Date: Fri, 29 Jan 2010 13:27:38 +0800
Subject: [PATCH] Platform: Add rmi cpu type support

XLS processor implements the MIPS64 R1 instruction set and has some
enhancements. (Atomic Swap, Atomic Load and Add, Messagesend etc ...)
So add a new cpu type CPU_PHOENIX not use the CPU_MIPS64.

XLS's cache is different from the legency 4K processor's which is
marked as MIPS_CPU_4K_CACHE in linux kernel, so add a new cache
type MIPS_CPU_PHOENIX_CACHE.

source: from RMI SDK1.7

Signed-off-by: shuo.kang <shuo.kang@windriver.com>
---
 arch/mips/kernel/cpu-probe.c    |   46 +++++++++++++++++++++++++++++++++++++++
 include/asm-mips/cpu-features.h |    3 ++
 include/asm-mips/cpu.h          |    3 ++
 3 files changed, 52 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/cpu-probe.c b/arch/mips/kernel/cpu-probe.c
index ef7ed93..ba6265d 100644
--- a/arch/mips/kernel/cpu-probe.c
+++ b/arch/mips/kernel/cpu-probe.c
@@ -22,6 +22,7 @@
 #include <asm/mipsregs.h>
 #include <asm/system.h>
 
+#include <asm/rmi/sim.h>
 /*
  * Not all of the MIPS CPUs have the "wait" instruction available. Moreover,
  * the implementation of the "wait" feature differs between CPU families. This
@@ -112,6 +113,17 @@ static void au1k_wait(void)
 		: : "r" (au1k_wait));
 }
 
+static void phoenix_wait(void)
+{
+	__asm__(
+		".set push\n\t"
+		".set\tmips3\n\t"
+		".set noreorder\n\t"
+		"c0 0x60\n\t"
+		".set pop\n\t"
+		);
+}
+
 static int __initdata nowait = 0;
 
 static int __init wait_disable(char *s)
@@ -179,6 +191,9 @@ void __init check_wait(void)
 	case CPU_TX49XX:
 		cpu_wait = r4k_wait_irqoff;
 		break;
+	case CPU_PHOENIX:
+		cpu_wait = phoenix_wait;
+		break;
 	case CPU_AU1000:
 	case CPU_AU1100:
 	case CPU_AU1500:
@@ -814,6 +829,33 @@ static inline void cpu_probe_broadcom(struct cpuinfo_mips *c)
 		break;
 	}
 }
+static __inline__ void cpu_probe_rmi(struct cpuinfo_mips *c)
+{
+	decode_configs(c);
+
+	c->options &= ~MIPS_CPU_4K_CACHE;
+
+	switch (c->processor_id & 0xff00) {
+
+	default:
+		c->cputype = CPU_PHOENIX;
+
+		/* setup the xls chip family types */
+		set_xls_chip_family_types();
+
+		c->isa_level = MIPS_CPU_ISA_M64R1;
+		c->options = (MIPS_CPU_TLB     |
+		  MIPS_CPU_4KEX    |
+		  MIPS_CPU_COUNTER |
+		  MIPS_CPU_DIVEC   |
+		  MIPS_CPU_WATCH   |
+		  MIPS_CPU_PREFETCH |
+		  MIPS_CPU_EJTAG   |
+		  MIPS_CPU_PHOENIX_CACHE |
+		  MIPS_CPU_LLSC);
+		break;
+	}
+}
 
 const char *__cpu_name[NR_CPUS];
 
@@ -896,6 +938,7 @@ static __cpuinit const char *cpu_to_name(struct cpuinfo_mips *c)
 	case CPU_BCM4710:	name = "Broadcom BCM4710"; break;
 	case CPU_PR4450:	name = "Philips PR4450"; break;
 	case CPU_LOONGSON2:	name = "ICT Loongson-2"; break;
+	case CPU_PHOENIX:	name = "XLS416 Rev B0"; break;
 	default:
 		BUG();
 	}
@@ -938,6 +981,9 @@ __cpuinit void cpu_probe(void)
 	case PRID_COMP_NXP:
 		cpu_probe_nxp(c);
 		break;
+	case PRID_COMP_RMI:
+		cpu_probe_rmi(c);
+		break;
 	default:
 		c->cputype = CPU_UNKNOWN;
 	}
diff --git a/include/asm-mips/cpu-features.h b/include/asm-mips/cpu-features.h
index 5ea701f..1c38a45 100644
--- a/include/asm-mips/cpu-features.h
+++ b/include/asm-mips/cpu-features.h
@@ -38,6 +38,9 @@
 #ifndef cpu_has_tx39_cache
 #define cpu_has_tx39_cache	(cpu_data[0].options & MIPS_CPU_TX39_CACHE)
 #endif
+#ifndef cpu_has_phoenix_cache
+#define cpu_has_phoenix_cache	(cpu_data[0].options & MIPS_CPU_PHOENIX_CACHE)
+#endif
 #ifndef cpu_has_fpu
 #define cpu_has_fpu		(current_cpu_data.options & MIPS_CPU_FPU)
 #define raw_cpu_has_fpu		(raw_current_cpu_data.options & MIPS_CPU_FPU)
diff --git a/include/asm-mips/cpu.h b/include/asm-mips/cpu.h
index 229a786..ad55cb0 100644
--- a/include/asm-mips/cpu.h
+++ b/include/asm-mips/cpu.h
@@ -33,6 +33,7 @@
 #define PRID_COMP_TOSHIBA	0x070000
 #define PRID_COMP_LSI		0x080000
 #define PRID_COMP_LEXRA		0x0b0000
+#define PRID_COMP_RMI		0x0c0000
 
 
 /*
@@ -204,6 +205,7 @@ enum cpu_type_enum {
 	 */
 	CPU_5KC, CPU_20KC, CPU_25KF, CPU_SB1, CPU_SB1A, CPU_LOONGSON2,
 
+	CPU_PHOENIX,
 	CPU_LAST
 };
 
@@ -252,6 +254,7 @@ enum cpu_type_enum {
 #define MIPS_CPU_VINT		0x00080000 /* CPU supports MIPSR2 vectored interrupts */
 #define MIPS_CPU_VEIC		0x00100000 /* CPU supports MIPSR2 external interrupt controller mode */
 #define MIPS_CPU_ULRI		0x00200000 /* CPU has ULRI feature */
+#define MIPS_CPU_PHOENIX_CACHE	0x00400000 /* CPU has ULRI feature */
 
 /*
  * CPU ASE encodings
-- 
1.6.0.4

