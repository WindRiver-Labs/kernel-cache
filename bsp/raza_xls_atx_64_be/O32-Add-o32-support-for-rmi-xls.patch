From 46cf72813a839df46e58acc5c97f3e7be1e5e503 Mon Sep 17 00:00:00 2001
From: Liu Changhui <changhui.liu@windriver.com>
Date: Fri, 29 Jan 2010 13:27:56 +0800
Subject: [PATCH] O32: Add o32 support for rmi xls

Add old 32bit elf format support for rmi xls platform.

source: from RMI SDK1.7

Signed-off-by: shuo.kang <shuo.kang@windriver.com>
---
 arch/mips/kernel/binfmt_elfo32.c |   59 +++++++++++++++++++++++++++++--------
 arch/mips/kernel/scall64-n32.S   |    4 +-
 arch/mips/kernel/scall64-o32.S   |    2 +-
 fs/dcookies.c                    |   37 +++++++++++++++++++++++
 kernel/sys_ni.c                  |    1 +
 5 files changed, 87 insertions(+), 16 deletions(-)

diff --git a/arch/mips/kernel/binfmt_elfo32.c b/arch/mips/kernel/binfmt_elfo32.c
index ff44823..1f77a1c 100644
--- a/arch/mips/kernel/binfmt_elfo32.c
+++ b/arch/mips/kernel/binfmt_elfo32.c
@@ -52,6 +52,11 @@ typedef elf_fpreg_t elf_fpregset_t[ELF_NFPREG];
 #undef ELF_ET_DYN_BASE
 #define ELF_ET_DYN_BASE         (TASK32_SIZE / 3 * 2)
 
+#include <asm/elf.h>
+#undef ELF_CORE_COPY_REGS
+void elf32_core_copy_regs(elf_gregset_t grp, struct pt_regs *regs);
+#define ELF_CORE_COPY_REGS(_dest,_regs) elf32_core_copy_regs(_dest,_regs);
+
 #include <asm/processor.h>
 
 /*
@@ -74,8 +79,14 @@ extern void elf32_core_copy_regs(elf_gregset_t grp, struct pt_regs *regs);
 #include <linux/elfcore.h>
 #include <linux/compat.h>
 #include <linux/math64.h>
+#include <asm/war.h>
 
 #define elf_prstatus elf_prstatus32
+
+static inline int rmi_xls_war(void)
+{
+	return RMI_XLS_WAR;
+}
 struct elf_prstatus32
 {
 	struct elf_siginfo pr_info;	/* Info associated with signal */
@@ -126,24 +137,46 @@ jiffies_to_compat_timeval(unsigned long jiffies, struct compat_timeval *value)
 	value->tv_sec = div_u64_rem(nsec, NSEC_PER_SEC, &rem);
 	value->tv_usec = rem / NSEC_PER_USEC;
 }
+int elf32_dump_task_regs (struct task_struct *tsk, elf_gregset_t *regs)
+{
+	elf32_core_copy_regs(*regs, task_pt_regs(tsk));
+	return 1;
+}
+#define COMPAT_REG_BASE 6
 
 void elf32_core_copy_regs(elf_gregset_t grp, struct pt_regs *regs)
 {
 	int i;
 
-	for (i = 0; i < EF_R0; i++)
-		grp[i] = 0;
-	grp[EF_R0] = 0;
-	for (i = 1; i <= 31; i++)
-		grp[EF_R0 + i] = (elf_greg_t) regs->regs[i];
-	grp[EF_R26] = 0;
-	grp[EF_R27] = 0;
-	grp[EF_LO] = (elf_greg_t) regs->lo;
-	grp[EF_HI] = (elf_greg_t) regs->hi;
-	grp[EF_CP0_EPC] = (elf_greg_t) regs->cp0_epc;
-	grp[EF_CP0_BADVADDR] = (elf_greg_t) regs->cp0_badvaddr;
-	grp[EF_CP0_STATUS] = (elf_greg_t) regs->cp0_status;
-	grp[EF_CP0_CAUSE] = (elf_greg_t) regs->cp0_cause;
+	if (rmi_xls_war()){
+		for (i = 0; i < COMPAT_REG_BASE; i++)
+			grp[i] = 0;
+		grp[COMPAT_REG_BASE] = 0;
+		for (i = 1; i <= 31; i++)
+			grp[COMPAT_REG_BASE + i] = (elf_greg_t) regs->regs[i];
+		grp[EF_R26 + COMPAT_REG_BASE] = 0;
+		grp[EF_R27 + COMPAT_REG_BASE] = 0;
+		grp[EF_LO + COMPAT_REG_BASE] = (elf_greg_t) regs->lo;
+		grp[EF_HI + COMPAT_REG_BASE] = (elf_greg_t) regs->hi;
+		grp[EF_CP0_EPC + COMPAT_REG_BASE] = (elf_greg_t) regs->cp0_epc;
+		grp[EF_CP0_BADVADDR + COMPAT_REG_BASE] = (elf_greg_t) regs->cp0_badvaddr;
+		grp[EF_CP0_STATUS + COMPAT_REG_BASE] = (elf_greg_t) regs->cp0_status;
+		grp[EF_CP0_CAUSE + COMPAT_REG_BASE] = (elf_greg_t) regs->cp0_cause;
+	} else {
+		for (i = 0; i < EF_R0; i++)
+	        	grp[i] = 0;
+		grp[EF_R0] = 0;
+	    	for (i = 1; i <= 31; i++)
+			grp[EF_R0 + i] = (elf_greg_t) regs->regs[i];
+		grp[EF_R26] = 0;
+		grp[EF_R27] = 0;
+		grp[EF_LO] = (elf_greg_t) regs->lo;
+		grp[EF_HI] = (elf_greg_t) regs->hi;
+		grp[EF_CP0_EPC] = (elf_greg_t) regs->cp0_epc;
+		grp[EF_CP0_BADVADDR] = (elf_greg_t) regs->cp0_badvaddr;
+		grp[EF_CP0_STATUS] = (elf_greg_t) regs->cp0_status;
+		grp[EF_CP0_CAUSE] = (elf_greg_t) regs->cp0_cause;
+	}
 #ifdef EF_UNUSED0
 	grp[EF_UNUSED0] = 0;
 #endif
diff --git a/arch/mips/kernel/scall64-n32.S b/arch/mips/kernel/scall64-n32.S
index 082128d..4036745 100644
--- a/arch/mips/kernel/scall64-n32.S
+++ b/arch/mips/kernel/scall64-n32.S
@@ -328,7 +328,7 @@ EXPORT(sysn32_call_table)
 	PTR	sys_io_submit
 	PTR	sys_io_cancel
 	PTR	sys_exit_group			/* 6205 */
-	PTR	sys_lookup_dcookie
+	PTR	compat_sys_lookup_dcookie
 	PTR	sys_epoll_create
 	PTR	sys_epoll_ctl
 	PTR	sys_epoll_wait
@@ -387,7 +387,7 @@ EXPORT(sysn32_call_table)
 	PTR	sys_fchmodat
 	PTR	sys_faccessat
 	PTR	compat_sys_pselect6
-	PTR	sys_ppoll			/* 6265 */
+	PTR	compat_sys_ppoll		/* 6265 */
 	PTR	sys_unshare
 	PTR	sys_splice
 	PTR	sys_sync_file_range
diff --git a/arch/mips/kernel/scall64-o32.S b/arch/mips/kernel/scall64-o32.S
index ba95441..73d6c30 100644
--- a/arch/mips/kernel/scall64-o32.S
+++ b/arch/mips/kernel/scall64-o32.S
@@ -477,7 +477,7 @@ EXPORT(sys_call_table)
 	PTR	sys_io_submit
 	PTR	sys_io_cancel			/* 4245 */
 	PTR	sys_exit_group
-	PTR	sys32_lookup_dcookie
+	PTR compat_sys_lookup_dcookie
 	PTR	sys_epoll_create
 	PTR	sys_epoll_ctl
 	PTR	sys_epoll_wait			/* 4250 */
diff --git a/fs/dcookies.c b/fs/dcookies.c
index f0da95b..64c975a 100644
--- a/fs/dcookies.c
+++ b/fs/dcookies.c
@@ -201,6 +201,43 @@ asmlinkage long SyS_lookup_dcookie(u64 cookie64, long buf, long len)
 SYSCALL_ALIAS(sys_lookup_dcookie, SyS_lookup_dcookie);
 #endif
 
+#if defined (CONFIG_64BIT) && defined (CONFIG_RMI_PHOENIX)
+#if defined (CONFIG_MIPS32_O32) || defined (CONFIG_MIPS32_N32)
+#ifdef CONFIG_HAVE_SYSCALL_WRAPPERS
+compat_SyS_lookup_dcookie(u32 cookie_msb, u32 cookie_lsb,
+        compat_uptr_t buf, compat_size_t len)
+{
+	u64 cookie;
+	char __user *user_buf;
+	size_t size;
+
+	size = (size_t)len;
+
+	user_buf = compat_ptr(buf);
+	cookie = (((u64)cookie_msb) << 32) | (u64)cookie_lsb;
+
+	return SYSC_lookup_dcookie(cookie, user_buf, size);
+}
+SYSCALL_ALIAS(compat_sys_lookup_dcookie, compat_SyS_lookup_dcookie);
+#else
+compat_sys_lookup_dcookie(u32 cookie_msb, u32 cookie_lsb,
+        compat_uptr_t buf, compat_size_t len)
+{
+	u64 cookie;
+	char __user *user_buf;
+	size_t size;
+
+	size = (size_t)len;
+
+	user_buf = compat_ptr(buf);
+	cookie = (((u64)cookie_msb) << 32) | (u64)cookie_lsb;
+
+	return sys_lookup_dcookie(cookie, user_buf, size);
+}
+#endif
+#endif
+#endif
+
 static int dcookie_init(void)
 {
 	struct list_head * d;
diff --git a/kernel/sys_ni.c b/kernel/sys_ni.c
index 2fba5eb..1fa86fa 100644
--- a/kernel/sys_ni.c
+++ b/kernel/sys_ni.c
@@ -21,6 +21,7 @@ cond_syscall(sys_quotactl);
 cond_syscall(sys32_quotactl);
 cond_syscall(sys_acct);
 cond_syscall(sys_lookup_dcookie);
+cond_syscall(compat_sys_lookup_dcookie);
 cond_syscall(sys_swapon);
 cond_syscall(sys_swapoff);
 cond_syscall(sys_kexec_load);
-- 
1.7.0

