From dd51bc88020655629d82ebea24df22d3d6b2ad78 Mon Sep 17 00:00:00 2001
From: Liu Changhui <changhui.liu@windriver.com>
Date: Fri, 29 Jan 2010 13:27:47 +0800
Subject: [PATCH] Platform: Add specific clz instruction for rmi xls

Add specific clz instruction for rmi xls, which saves the assembley
directive setting.

source: from RMI SDK1.7

Signed-off-by: shuo.kang <shuo.kang@windriver.com>
---
 include/asm-mips/bitops.h |   22 ++++++++++++++++++++--
 1 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/include/asm-mips/bitops.h b/include/asm-mips/bitops.h
index 49df8c4..8326d5d 100644
--- a/include/asm-mips/bitops.h
+++ b/include/asm-mips/bitops.h
@@ -558,7 +558,8 @@ static inline void __clear_bit_unlock(unsigned long nr, volatile unsigned long *
 	__clear_bit(nr, addr);
 }
 
-#if defined(CONFIG_CPU_MIPS32) || defined(CONFIG_CPU_MIPS64)
+#if defined(CONFIG_CPU_MIPS32) || defined(CONFIG_CPU_MIPS64) || \
+					defined(CONFIG_CPU_PHOENIX)
 
 /*
  * Return the bit position (0..63) of the most significant 1 bit in a word
@@ -614,15 +615,32 @@ static inline unsigned long __ffs(unsigned long word)
  */
 static inline int fls(int word)
 {
+#ifdef CONFIG_CPU_PHOENIX
+	__asm__("	.set push			\n" 
+		"	.set mips32			\n" 
+		"	clz %0, %1			\n" 
+		"	.set pop			\n"
+		: "=r" (word) : "r" (word));
+#else
 	__asm__("clz %0, %1" : "=r" (word) : "r" (word));
+#endif
 
 	return 32 - word;
 }
 
-#if defined(CONFIG_64BIT) && defined(CONFIG_CPU_MIPS64)
+#if defined(CONFIG_64BIT) && (defined(CONFIG_CPU_MIPS64) || \
+		defined(CONFIG_CPU_PHOENIX))
 static inline int fls64(__u64 word)
 {
+#ifdef CONFIG_CPU_PHOENIX
+	__asm__("	.set push		\n"
+		"	.set mips64		\n"
+		"	dclz %0, %1		\n"
+		"	.set pop		\n"
+		: "=r" (word) : "r" (word));
+#else
 	__asm__("dclz %0, %1" : "=r" (word) : "r" (word));
+#endif
 
 	return 64 - word;
 }
-- 
1.6.0.4

