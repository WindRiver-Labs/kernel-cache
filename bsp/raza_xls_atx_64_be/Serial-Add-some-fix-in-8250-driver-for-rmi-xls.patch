From 8e99f07681164510ea35d32ae8c0927f2303fd42 Mon Sep 17 00:00:00 2001
From: Liu Changhui <changhui.liu@windriver.com>
Date: Fri, 29 Jan 2010 13:28:00 +0800
Subject: [PATCH] Serial: Add some fix in 8250 driver for rmi xls

Add some fix in 8250 driver for rmi xls platform.

source: from RMI SDK1.7

Signed-off-by: Liu Changhui <changhui.liu@windriver.com>
---
 drivers/serial/8250.c |   62 +++++++++++++++++++++++++++++++++++++++++-------
 drivers/serial/8250.h |    1 +
 2 files changed, 54 insertions(+), 9 deletions(-)

diff --git a/drivers/serial/8250.c b/drivers/serial/8250.c
index 537a245..5902b28 100644
--- a/drivers/serial/8250.c
+++ b/drivers/serial/8250.c
@@ -38,6 +38,7 @@
 #include <linux/serial_8250.h>
 #include <linux/nmi.h>
 #include <linux/mutex.h>
+#include <asm/rmi/iomap.h>
 
 #include <asm/io.h>
 #include <asm/irq.h>
@@ -359,6 +360,11 @@ static unsigned int serial_in(struct uart_8250_port *up, int offset)
 		return inb(up->port.iobase + 1);
 
 	case UPIO_MEM:
+		if (up->bugs & UART_BUG_RMI) {
+			return phoenix_read_reg((phoenix_reg_t *)(up->port.membase + offset), 0);
+		} else {
+			return readb(up->port.membase + offset);
+		}
 	case UPIO_DWAPB:
 		return readb(up->port.membase + offset);
 
@@ -397,7 +403,11 @@ serial_out(struct uart_8250_port *up, int offset, int value)
 		break;
 
 	case UPIO_MEM:
-		writeb(value, up->port.membase + offset);
+		if (up->bugs & UART_BUG_RMI) {
+			phoenix_write_reg((phoenix_reg_t *)(up->port.membase + offset), 0, value);
+		} else {
+			writeb(value, up->port.membase + offset);
+		}
 		break;
 
 	case UPIO_RM9000:
@@ -1004,6 +1014,10 @@ static void autoconfig(struct uart_8250_port *up, unsigned int probeflags)
 	up->capabilities = 0;
 	up->bugs = 0;
 
+#ifdef CONFIG_RMI_PHOENIX
+	up->bugs |= UART_BUG_RMI;
+#endif
+
 	if (!(up->port.flags & UPF_BUGGY_UART)) {
 		/*
 		 * Do a simple existence test first; if we fail this,
@@ -1058,7 +1072,11 @@ static void autoconfig(struct uart_8250_port *up, unsigned int probeflags)
 	 */
 	if (!(up->port.flags & UPF_SKIP_TEST)) {
 		serial_outp(up, UART_MCR, UART_MCR_LOOP | 0x0A);
-		status1 = serial_inp(up, UART_MSR) & 0xF0;
+		if (up->bugs & UART_BUG_RMI) {
+			status1 = (serial_inp(up, UART_MSR) ^ 0xF0) & 0xF0;
+		} else {
+			status1 = serial_inp(up, UART_MSR) & 0xF0;
+		}
 		serial_outp(up, UART_MCR, save_mcr);
 		if (status1 != 0x90) {
 			DEBUG_AUTOCONF("LOOP test failed (%02x) ",
@@ -1184,11 +1202,19 @@ static void autoconfig_irq(struct uart_8250_port *up)
 	serial_outp(up, UART_MCR, 0);
 	udelay(10);
 	if (up->port.flags & UPF_FOURPORT) {
-		serial_outp(up, UART_MCR,
-			    UART_MCR_DTR | UART_MCR_RTS);
+		if (up->bugs & UART_BUG_RMI) {
+	        serial_outp(up, UART_MCR, (UART_MCR_DTR^0x1) | (UART_MCR_RTS^0x1));
+		} else {
+			serial_outp(up, UART_MCR, UART_MCR_DTR | UART_MCR_RTS);
+		}
 	} else {
-		serial_outp(up, UART_MCR,
-			    UART_MCR_DTR | UART_MCR_RTS | UART_MCR_OUT2);
+		if (up->bugs & UART_BUG_RMI) {
+			serial_outp(up, UART_MCR,
+            	(UART_MCR_DTR^0x1) | (UART_MCR_RTS^0x1)|UART_MCR_OUT2); 
+		} else {
+			serial_outp(up, UART_MCR,
+				UART_MCR_DTR | UART_MCR_RTS | UART_MCR_OUT2);
+		}
 	}
 	serial_outp(up, UART_IER, 0x0f);	/* enable all intrs */
 	(void)serial_inp(up, UART_LSR);
@@ -1404,7 +1430,12 @@ static void transmit_chars(struct uart_8250_port *up)
 
 static unsigned int check_modem_status(struct uart_8250_port *up)
 {
-	unsigned int status = serial_in(up, UART_MSR);
+	unsigned int status;
+	if (up->bugs & UART_BUG_RMI) {
+		status = serial_in(up, UART_MSR)^0xF0; 
+	} else {
+		status = serial_in(up, UART_MSR);
+	}
 
 	status |= up->msr_saved_flags;
 	up->msr_saved_flags = 0;
@@ -1708,7 +1739,11 @@ static void serial8250_set_mctrl(struct uart_port *port, unsigned int mctrl)
 	if (mctrl & TIOCM_LOOP)
 		mcr |= UART_MCR_LOOP;
 
-	mcr = (mcr & up->mcr_mask) | up->mcr_force | up->mcr;
+	if (up->bugs & UART_BUG_RMI) {
+		mcr = ((mcr & up->mcr_mask) | up->mcr_force | up->mcr)^0x3; 
+	} else {
+		mcr = (mcr & up->mcr_mask) | up->mcr_force | up->mcr;
+	}
 
 	serial_out(up, UART_MCR, mcr);
 }
@@ -1751,7 +1786,12 @@ static inline void wait_for_xmitr(struct uart_8250_port *up, int bits)
 	if (up->port.flags & UPF_CONS_FLOW) {
 		unsigned int tmout;
 		for (tmout = 1000000; tmout; tmout--) {
-			unsigned int msr = serial_in(up, UART_MSR);
+			unsigned int msr;
+			if (up->bugs & UART_BUG_RMI) {
+				msr = serial_in(up, UART_MSR)^0xF0;
+			} else {
+				msr = serial_in(up, UART_MSR);
+			}
 			up->msr_saved_flags |= msr & MSR_SAVE_FLAGS;
 			if (msr & UART_MSR_CTS)
 				break;
@@ -2547,6 +2587,10 @@ static void __init serial8250_isa_init_ports(void)
 		up->mcr_force = ALPHA_KLUDGE_MCR;
 
 		up->port.ops = &serial8250_pops;
+
+#ifdef  CONFIG_RMI_PHOENIX
+		up->bugs |= UART_BUG_RMI;
+#endif
 	}
 
 	for (i = 0, up = serial8250_ports;
diff --git a/drivers/serial/8250.h b/drivers/serial/8250.h
index cba3f46..a89086d 100644
--- a/drivers/serial/8250.h
+++ b/drivers/serial/8250.h
@@ -54,6 +54,7 @@ struct serial8250_config {
 #define UART_BUG_NOMSR	(1 << 2)	/* UART has buggy MSR status bits (Au1x00) */
 #define UART_BUG_THRE	(1 << 3)	/* UART has buggy THRE reassertion */
 #define UART_BUG_PPC	(1 << 4)	/* UART has buggy PPC break IRQ storm */
+#define UART_BUG_RMI	(1 << 5)	/* UART has buggy RMI */
 
 #define PROBE_RSA	(1 << 0)
 #define PROBE_ANY	(~0)
-- 
1.6.0.4

