From 693bafe99c82131fcb49c2e335de933638032c2b Mon Sep 17 00:00:00 2001
From: Liu Changhui <changhui.liu@windriver.com>
Date: Fri, 29 Jan 2010 13:27:50 +0800
Subject: [PATCH] Platform: Add unaligned support for rmi xls

The AdELOAD macro is changed to use ll instructions instead of the lw
instruction so that it generates unaligned access exceptions on all XLR/XLS
processors.

source: from RMI SDK1.7

Signed-off-by: shuo.kang <shuo.kang@windriver.com>
---
 arch/mips/math-emu/dsemul.h |   10 +++++++++-
 1 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/arch/mips/math-emu/dsemul.h b/arch/mips/math-emu/dsemul.h
index 091f0e7..f3cf496 100644
--- a/arch/mips/math-emu/dsemul.h
+++ b/arch/mips/math-emu/dsemul.h
@@ -2,7 +2,15 @@ extern int mips_dsemul(struct pt_regs *regs, mips_instruction ir, unsigned long
 extern int do_dsemulret(struct pt_regs *xcp);
 
 /* Instruction which will always cause an address error */
-#define AdELOAD 0x8c000001	/* lw $0,1($0) */
+#ifdef CONFIG_RMI_PHOENIX
+/* Some revisions of XLR support unaligned accesses for
+ * lb/lh/lw/ld but not ll. So, use ll for all XLR revisions
+ * instead
+ */
+#define AdELOAD 0xc0000001	/* ll $0,1($0) */
+#else
+#define AdELOAD 0x8c000001     /* lw $0,1($0) */
+#endif
 /* Instruction which will plainly cause a CP1 exception when FPU is disabled */
 #define CP1UNDEF 0x44400001    /* cfc1 $0,$0 undef  */
 
-- 
1.6.0.4

