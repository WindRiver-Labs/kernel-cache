From e1a9b6c4c96e7ea334ec643a30f563a1ded8f4d8 Mon Sep 17 00:00:00 2001
From: Bin Jiang <bin.jiang@windriver.com>
Date: Thu, 5 Jun 2014 19:22:57 +0800
Subject: [PATCH] JFFS2: Fix crash when unmounting mtd partition which doesn't
 support write-buffering

If a mtd partition doesn't support write-buffering, umounting it causes following
call trace:
[<c0017b2c>] (unwind_backtrace+0x0/0x100) from [<c0012cd4>] (show_stack+0x20/0x24)
[<c0012cd4>] (show_stack+0x20/0x24) from [<c05c45ac>] (dump_stack+0x24/0x28)
[<c05c45ac>] (dump_stack+0x24/0x28) from [<c007a0c0>] (__lock_acquire.isra.22+0x9e8/0xda0)
[<c007a0c0>] (__lock_acquire.isra.22+0x9e8/0xda0) from [<c007a520>] (lock_acquire+0xa8/0x158)
[<c007a520>] (lock_acquire+0xa8/0x158) from [<c0043130>] (flush_work+0x4c/0x300)
[<c0043130>] (flush_work+0x4c/0x300) from [<c00440c4>] (__cancel_work_timer+0xd4/0x1a8)
[<c00440c4>] (__cancel_work_timer+0xd4/0x1a8) from [<c00441d4>] (cancel_delayed_work_sync+0x1c/0x20)
[<c00441d4>] (cancel_delayed_work_sync+0x1c/0x20) from [<c02074d0>] (jffs2_sync_fs+0x24/0x44)
[<c02074d0>] (jffs2_sync_fs+0x24/0x44) from [<c0155378>] (sync_filesystem+0x60/0xbc)
[<c0155378>] (sync_filesystem+0x60/0xbc) from [<c0128c18>] (generic_shutdown_super+0x34/0xe0)
[<c0128c18>] (generic_shutdown_super+0x34/0xe0) from [<c0398d14>] (kill_mtd_super+0x1c/0x30)
[<c0398d14>] (kill_mtd_super+0x1c/0x30) from [<c0207348>] (jffs2_kill_sb+0x38/0x44)
[<c0207348>] (jffs2_kill_sb+0x38/0x44) from [<c01293e0>] (deactivate_locked_super+0x58/0x78)
[<c01293e0>] (deactivate_locked_super+0x58/0x78) from [<c012a428>] (deactivate_super+0x70/0x78)
[<c012a428>] (deactivate_super+0x70/0x78) from [<c0146880>] (mntput_no_expire+0x128/0x190)
[<c0146880>] (mntput_no_expire+0x128/0x190) from [<c0147aac>] (SyS_umount+0xa0/0x3b0)
[<c0147aac>] (SyS_umount+0xa0/0x3b0) from [<c000e640>] (ret_fast_syscall+0x0/0x48)

Above call trace is caused by locking an uninitialized lock(wbuf_dwork_lock).
If a flash doesn't support write-buffering, the wbuf_dwork work and
wbuf_dwork_lock lock are not initialized. So add a condition to check
write-buffering.

Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 fs/jffs2/super.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/fs/jffs2/super.c b/fs/jffs2/super.c
index 0defb1c..b116d46 100644
--- a/fs/jffs2/super.c
+++ b/fs/jffs2/super.c
@@ -101,7 +101,8 @@ static int jffs2_sync_fs(struct super_block *sb, int wait)
 	struct jffs2_sb_info *c = JFFS2_SB_INFO(sb);
 
 #ifdef CONFIG_JFFS2_FS_WRITEBUFFER
-	cancel_delayed_work_sync(&c->wbuf_dwork);
+	if (jffs2_is_writebuffered(c))
+		cancel_delayed_work_sync(&c->wbuf_dwork);
 #endif
 
 	mutex_lock(&c->alloc_sem);
-- 
1.7.5.4

