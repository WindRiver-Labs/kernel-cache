From 93449b32fbfccf92d707f0c7df79db706e072fd4 Mon Sep 17 00:00:00 2001
From: Bin Jiang <bin.jiang@windriver.com>
Date: Fri, 6 Jun 2014 09:44:24 +0800
Subject: [PATCH] spi: iProc: apply the spinlock to the required critical
 section

Several different iProc spi interrupts call same interrupt handler which
includes some global variables. So in irq threading, the spinlock is
required to protect global variables.

Signed-off-by: Bin Jiang <bin.jiang@windriver.com
---
 drivers/spi/qspi_iproc.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/drivers/spi/qspi_iproc.c b/drivers/spi/qspi_iproc.c
index 7642ea2..2c5ee93 100644
--- a/drivers/spi/qspi_iproc.c
+++ b/drivers/spi/qspi_iproc.c
@@ -1156,6 +1156,7 @@ static irqreturn_t bcmspi_interrupt(int irq, void *dev_id)
 {
     struct bcmspi_priv *priv = dev_id;
 
+    spin_lock(&priv->lock);
     if (priv->bspi_enabled && priv->cur_xfer) {
         int done = 0;
         u32 status = bcmspi_read_interrupt(priv);
@@ -1193,6 +1194,7 @@ static irqreturn_t bcmspi_interrupt(int irq, void *dev_id)
                 /* Continuation for reading across 16MB boundary */
                 bcmspi_disable_interrupt(priv, BSPI_LR_INTERRUPTS_ALL);
                 bcmspi_emulate_flash_read(priv, NULL);
+                spin_unlock(&priv->lock);
                 return IRQ_HANDLED;
                 
             } else {
@@ -1220,6 +1222,7 @@ static irqreturn_t bcmspi_interrupt(int irq, void *dev_id)
             priv->cur_msg = NULL;
         }
         bcmspi_clear_interrupt(priv, status);
+        spin_unlock(&priv->lock);
         return IRQ_HANDLED;
     }
 
@@ -1228,10 +1231,13 @@ static irqreturn_t bcmspi_interrupt(int irq, void *dev_id)
         priv->mspi_hw->mspi_status &= ~1;
         bcmspi_clear_interrupt(priv, QSPI_INTR_MSPI_DONE_MASK);
 
+        spin_unlock(&priv->lock);
         tasklet_schedule(&priv->tasklet);
         return IRQ_HANDLED;
-    } else
+    } else {
+        spin_unlock(&priv->lock);
         return IRQ_NONE;
+    }
 }
 
 static void bcmspi_complete(void *arg)
-- 
1.7.5.4

