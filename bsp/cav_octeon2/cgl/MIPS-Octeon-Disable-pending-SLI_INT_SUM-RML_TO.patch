From a2c3bbf5d6ec2c0f79ce51f512e33e90e4c0987a Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Sun, 1 Apr 2012 15:10:50 +0800
Subject: [PATCH 176/238] MIPS: Octeon: Disable pending SLI_INT_SUM[RML_TO].

Source: Cavium SDK 2.3-427

Disable any pending RML_TO interrupt bit before enabling SLI interrupts.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
Integrated-by: Jiang Bin <bin.jiang@windriver.com>
---
 arch/mips/cavium-octeon/setup.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index cf817e3..13beb4d 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -44,6 +44,7 @@
 #include <asm/octeon/cvmx-error.h>
 #include <asm/octeon/cvmx-debug.h>
 #include <asm/octeon/cvmx-pcie.h>
+#include <asm/octeon/cvmx-pexp-defs.h>
 #include <asm/octeon/cvmx-sso-defs.h>
 
 #ifdef CONFIG_KEXEC
@@ -1228,6 +1229,11 @@ void prom_free_prom_memory(void)
 					"KEY RML_RSL", octeon_rml_interrupt)) {
 			panic("Unable to request_irq(OCTEON_IRQ_KEY)\n");
 		}
+		/* Disable any pending SLI interrupt */
+		if (cvmx_read_csr(CVMX_PEXP_SLI_INT_SUM) & 0x1) {
+			pr_info("clearing pending SLI_INT_SUM[RML_TO] (ignore)\n");
+			cvmx_write_csr(CVMX_PEXP_SLI_INT_SUM, 1);
+		}
 		if (request_irq(OCTEON_IRQ_SLI, octeon_rml_interrupt, IRQF_SHARED,
 					"SLI RML/RSL", octeon_rml_interrupt)) {
 			panic("Unable to request_irq(OCTEON_IRQ_SLI)\n");
-- 
1.7.0

