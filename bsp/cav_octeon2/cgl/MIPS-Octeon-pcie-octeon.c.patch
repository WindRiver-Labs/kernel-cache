From 6d611c339e9827d2883100b162d07229be78fb5b Mon Sep 17 00:00:00 2001
From: David Daney <ddaney@caviumnetworks.com>
Date: Thu, 5 May 2011 10:33:55 -0700
Subject: [PATCH 038/238] MIPS: Octeon: pcie-octeon.c

Source: Cavium SDK 2.1.0-407

Check array bounds and cleanup.

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
Integrated-by: Phil Staub <Phil.Staub@windriver.com>
---
 arch/mips/pci/pcie-octeon.c |   51 ++++++++++++++++++++++--------------------
 1 files changed, 27 insertions(+), 24 deletions(-)

diff --git a/arch/mips/pci/pcie-octeon.c b/arch/mips/pci/pcie-octeon.c
index 7fc0a2e..0252d89 100644
--- a/arch/mips/pci/pcie-octeon.c
+++ b/arch/mips/pci/pcie-octeon.c
@@ -3,7 +3,7 @@
  * License.  See the file "COPYING" in the main directory of this archive
  * for more details.
  *
- * Copyright (C) 2007, 2008 Cavium Networks
+ * Copyright (C) 2007, 2008, 2011 Cavium Networks
  */
 #include <linux/kernel.h>
 #include <linux/init.h>
@@ -64,7 +64,8 @@ int __init octeon_pcie_pcibios_map_irq(const struct pci_dev *dev,
 		 */
 		while (dev->bus && dev->bus->parent)
 			dev = to_pci_dev(dev->bus->bridge);
-		/* If the root bus is number 0 and the PEX 8114 is the
+		/*
+		 * If the root bus is number 0 and the PEX 8114 is the
 		 * root, assume we are behind the miswired bus. We
 		 * need to correct the swizzle level by two. Yuck.
 		 */
@@ -142,9 +143,9 @@ static int is_cfg_retry(void)
  * @val:
  * Returns
  */
-static inline int octeon_pcie_read_config(int pcie_port, struct pci_bus *bus,
-					  unsigned int devfn, int reg, int size,
-					  u32 *val)
+static int octeon_pcie_read_config(unsigned int pcie_port, struct pci_bus *bus,
+				   unsigned int devfn, int reg, int size,
+				   u32 *val)
 {
 	union octeon_cvmemctl cvmmemctl;
 	union octeon_cvmemctl cvmmemctl_save;
@@ -154,8 +155,12 @@ static inline int octeon_pcie_read_config(int pcie_port, struct pci_bus *bus,
 	int max_retry_cnt = 10;
 	u32 cfg_retry_cnt = 0;
 
-	/* For the top level bus make sure our hardware bus number matches the
-		software one */
+
+	BUG_ON(pcie_port >= ARRAY_SIZE(enable_pcie_bus_num_war));
+	/*
+	 * For the top level bus make sure our hardware bus number
+	 * matches the software one
+	 */
 	if (bus->parent == NULL) {
 		if (enable_pcie_bus_num_war[pcie_port])
 			bus_number = 0;
@@ -339,12 +344,14 @@ static int octeon_dummy_read_config(struct pci_bus *bus, unsigned int devfn,
  * @val:
  * Returns
  */
-static inline int octeon_pcie_write_config(int pcie_port, struct pci_bus *bus,
-					   unsigned int devfn, int reg,
-					   int size, u32 val)
+static int octeon_pcie_write_config(unsigned int pcie_port, struct pci_bus *bus,
+				    unsigned int devfn, int reg,
+				    int size, u32 val)
 {
 	int bus_number = bus->number;
 
+	BUG_ON(pcie_port >= ARRAY_SIZE(enable_pcie_bus_num_war));
+
 	if ((bus->parent == NULL) && (enable_pcie_bus_num_war[pcie_port]))
 		bus_number = 0;
 
@@ -370,8 +377,10 @@ static inline int octeon_pcie_write_config(int pcie_port, struct pci_bus *bus,
 		return PCIBIOS_FUNC_NOT_SUPPORTED;
 	}
 #if PCI_CONFIG_SPACE_DELAY
-	/* Delay on writes so that devices have time to come up. Some bridges
-	 * need this to allow time for the secondary busses to work
+	/*
+	 * Delay on writes so that devices have time to come up. Some
+	 * bridges need this to allow time for the secondary busses to
+	 * work
 	 */
 	udelay(PCI_CONFIG_SPACE_DELAY);
 #endif
@@ -496,12 +505,6 @@ static int __init octeon_pcie_setup(void)
 	/* Point pcibios_map_irq() to the PCIe version of it */
 	octeon_pcibios_map_irq = octeon_pcie_pcibios_map_irq;
 
-#if 0
-	/* Mark the Octeon CSR region as IO */
-	/* This is missing, for now commenting out. */
-	iomem_resource.end = (2ull << 48) - 1;
-#endif
-
 	/*
 	 * PCIe I/O range. It is based on port 0 but includes up until
 	 * port 1's end.
@@ -683,11 +686,12 @@ static int __init octeon_pcie_setup(void)
 		}
 	}
 
-	/* CN63XX pass 1_x/2.0 errata PCIe-15205 requires setting all of
-	* SRIO MACs SLI_CTL_PORT*[INT*_MAP] to similar value and all of PCIe
-	* Macs SLI_CTL_PORT*[INT*_MAP] different value from the previous
-	* set values
-	*/
+	/*
+	 * CN63XX pass 1_x/2.0 errata PCIe-15205 requires setting all
+	 * of SRIO MACs SLI_CTL_PORT*[INT*_MAP] to similar value and
+	 * all of PCIe Macs SLI_CTL_PORT*[INT*_MAP] to different value
+	 * from the previous set values
+	 */
 	if (OCTEON_IS_MODEL(OCTEON_CN63XX_PASS1_X) ||
 		OCTEON_IS_MODEL(OCTEON_CN63XX_PASS2_0)) {
 		if (srio_war15205 == 1) {
@@ -713,5 +717,4 @@ static int __init octeon_pcie_setup(void)
 
 	return 0;
 }
-
 arch_initcall(octeon_pcie_setup);
-- 
1.7.0

