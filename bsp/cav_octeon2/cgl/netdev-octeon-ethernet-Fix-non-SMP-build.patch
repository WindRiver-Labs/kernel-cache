From e83aac252cb68dbd26546a17270d871cd0273434 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Mon, 19 Sep 2011 11:06:40 -0700
Subject: [PATCH 152/238] netdev: octeon-ethernet: Fix non-SMP build.

Source: Cavium SDK 2.2-414

Signed-off-by: David Daney <david.daney@cavium.com>
Integrated-by: Yang Shi <yang.shi@windrier.com>
---
 drivers/net/octeon/ethernet-rx.c |   16 +++++++++++++++-
 1 files changed, 15 insertions(+), 1 deletions(-)

diff --git a/drivers/net/octeon/ethernet-rx.c b/drivers/net/octeon/ethernet-rx.c
index 03d35ca..1e1fb73 100644
--- a/drivers/net/octeon/ethernet-rx.c
+++ b/drivers/net/octeon/ethernet-rx.c
@@ -88,7 +88,9 @@ struct cvm_oct_core_state {
 
 static struct cvm_oct_core_state core_state __cacheline_aligned_in_smp;
 
+#ifdef CONFIG_SMP
 static int cvm_oct_enable_one_message;
+#endif
 
 static void cvm_oct_enable_napi(void)
 {
@@ -109,7 +111,15 @@ static void cvm_oct_enable_one_cpu(void)
 			cvm_oct_napi[cpu].available--;
 			core_state.active_cores++;
 			spin_unlock_irqrestore(&core_state.lock, flags);
-			octeon_send_ipi_single(cpu, cvm_oct_enable_one_message);
+			if (cpu == smp_processor_id()) {
+				cvm_oct_enable_napi();
+			} else {
+#ifdef CONFIG_SMP
+				octeon_send_ipi_single(cpu, cvm_oct_enable_one_message);
+#else
+				BUG();
+#endif
+			}
 			goto out;
 		}
 	}
@@ -352,9 +362,11 @@ void cvm_oct_rx_initialize(int num_wqe)
 	if (list_empty(&cvm_oct_list))
 		panic("No net_devices were allocated.");
 
+#ifdef CONFIG_SMP
 	cvm_oct_enable_one_message = octeon_request_ipi_handler(cvm_oct_enable_napi);
 	if (cvm_oct_enable_one_message < 0)
 		panic("cvm_oct_rx_initialize: No IPI handler handles available\n");
+#endif
 
 	if (OCTEON_IS_MODEL(OCTEON_CN68XX))
 		cvm_oct_napi_poll = cvm_oct_napi_poll_68;
@@ -490,7 +502,9 @@ void cvm_oct_rx_shutdown0(void)
 	/* Free the interrupt handler */
 	free_irq(OCTEON_IRQ_WORKQ0 + pow_receive_group, &cvm_oct_list);
 
+#ifdef CONFIG_SMP
 	octeon_release_ipi_handler(cvm_oct_enable_one_message);
+#endif
 
 	/* Shutdown all of the NAPIs */
 	for_each_possible_cpu(i)
-- 
1.7.0

