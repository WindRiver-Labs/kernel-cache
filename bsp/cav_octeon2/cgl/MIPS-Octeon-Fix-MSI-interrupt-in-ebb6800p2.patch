From a4099f862f5d5e3763acbe2e5b2c3ebb82239cfc Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@cavium.com>
Date: Thu, 16 Feb 2012 16:48:17 -0800
Subject: [PATCH 195/238] MIPS: Octeon: Fix MSI interrupt in ebb6800p2.

Source: Cavium SDK 2.3-427

The ebb6800p2 uses MSIRED interrupt method for MSI.
Fixed the following to work properly:
  - Enable MSIRED CIU2 interrupt.
  - Read some CSR for write to complete immediately.
  - Some cleanup.

Signed-off-by: Chandrakala Chavva <cchavva@cavium.com>
Integrated-by: Jiang Bin <bin.jiang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c |    6 ++++++
 arch/mips/pci/msi-octeon.c           |   13 +++++++++----
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index 36ed0ff..082e7dd 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -877,7 +877,13 @@ static bool octeon_irq_use_ip4;
 
 static void __cpuinit octeon_irq_local_enable_ip4(void *arg)
 {
+	int coreid = cvmx_get_core_num();
+
 	set_c0_status(STATUSF_IP4);
+
+	/* Enable MSIRED interrupt */
+	cvmx_write_csr(CVMX_CIU2_EN_PPX_IP4_IO_W1S(coreid), 1<<12);
+	cvmx_read_csr(CVMX_CIU2_SUM_PPX_IP2(coreid));
 }
 
 static void octeon_irq_ip4_mask(void)
diff --git a/arch/mips/pci/msi-octeon.c b/arch/mips/pci/msi-octeon.c
index 6bf3fdf..6b232b5 100644
--- a/arch/mips/pci/msi-octeon.c
+++ b/arch/mips/pci/msi-octeon.c
@@ -230,6 +230,9 @@ void arch_teardown_msi_irq(unsigned int irq)
 	int index = 0;
 	int irq0;
 
+	if (OCTEON_IS_MODEL(OCTEON_CN68XX) && !OCTEON_IS_MODEL(OCTEON_CN68XX_PASS1_X))
+		return;
+
 	if ((irq < OCTEON_IRQ_MSI_BIT0)
 		|| (irq > msi_irq_size + OCTEON_IRQ_MSI_BIT0))
 		panic("arch_teardown_msi_irq: Attempted to teardown illegal "
@@ -469,6 +472,8 @@ static void octeon_msi_ciu2_enable_on_cpu(unsigned int irq, int cpu)
 	sel.s.ip_num = 2; /* IP4 */
 	sel.s.en = 1;
 	cvmx_write_csr(CVMX_CIU2_MSI_SELX(msi), sel.u64);
+	/* Read back some CSR for write to complete. */
+	cvmx_read_csr(CVMX_CIU2_SUM_PPX_IP2(core));
 }
 
 static void octeon_msi_ciu2_enable(unsigned int irq)
@@ -490,17 +495,17 @@ static void octeon_msi_ciu2_disable(unsigned int irq)
 	union cvmx_ciu2_msi_selx sel;
 
 	sel.u64 = cvmx_read_csr(CVMX_CIU2_MSI_SELX(msi));
-	cvmx_write_csr(CVMX_CIU2_MSI_SELX(msi), 0);
-	cvmx_read_csr(CVMX_CIU2_ACK_PPX_IP4(sel.s.pp_num));
+	sel.s.en = 0;
+	cvmx_write_csr(CVMX_CIU2_MSI_SELX(msi), sel.u64);
+	cvmx_read_csr(CVMX_CIU2_INTR_CIU_READY);
 }
 
 static void octeon_msi_ciu2_ack(unsigned int irq)
 {
 	int msi = irq - OCTEON_IRQ_MSI_BIT0;
-	int core = cvmx_get_core_num();
 
 	cvmx_write_csr(CVMX_CIU2_MSI_RCVX(msi), 0);
-	cvmx_read_csr(CVMX_CIU2_ACK_PPX_IP4(core));
+	cvmx_read_csr(CVMX_CIU2_INTR_CIU_READY);
 }
 
 #ifdef CONFIG_SMP
-- 
1.7.0

