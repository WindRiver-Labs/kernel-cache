From 22013a7fad7e303c3600a802cd910e45af04db0f Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Wed, 16 Nov 2011 10:46:35 -0800
Subject: [PATCH 164/238] net: phy: Fix mdio mux read/write function to follow mdio new API

A new 'device address' parameter is added to mdio bus read/write
function to support 10G phy. So, for mdio mux bus read/write
function, we need follow the new API as well.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 drivers/net/phy/mdio-mux.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/net/phy/mdio-mux.c b/drivers/net/phy/mdio-mux.c
index a940296..25e35bb 100644
--- a/drivers/net/phy/mdio-mux.c
+++ b/drivers/net/phy/mdio-mux.c
@@ -35,7 +35,7 @@ struct mdio_mux_child_bus {
 /*
  * The parent bus' lock is used to order access to the switch_fn.
  */
-static int mdio_mux_read(struct mii_bus *bus, int phy_id, int regnum)
+static int mdio_mux_read(struct mii_bus *bus, int phy_id, int devad, int regnum)
 {
 	struct mdio_mux_child_bus *cb = bus->priv;
 	struct mdio_mux_parent_bus *pb = cb->parent;
@@ -48,7 +48,7 @@ static int mdio_mux_read(struct mii_bus *bus, int phy_id, int regnum)
 
 	pb->current_child = cb->bus_number;
 
-	r = pb->mii_bus->read(pb->mii_bus, phy_id, regnum);
+	r = pb->mii_bus->read(pb->mii_bus, phy_id, devad, regnum);
 out:
 	mutex_unlock(&pb->mii_bus->mdio_lock);
 
@@ -58,7 +58,7 @@ out:
 /*
  * The parent bus' lock is used to order access to the switch_fn.
  */
-static int mdio_mux_write(struct mii_bus *bus, int phy_id,
+static int mdio_mux_write(struct mii_bus *bus, int phy_id, int devad,
 			  int regnum, u16 val)
 {
 	struct mdio_mux_child_bus *cb = bus->priv;
@@ -73,7 +73,7 @@ static int mdio_mux_write(struct mii_bus *bus, int phy_id,
 
 	pb->current_child = cb->bus_number;
 
-	r = pb->mii_bus->write(pb->mii_bus, phy_id, regnum, val);
+	r = pb->mii_bus->write(pb->mii_bus, phy_id, devad, regnum, val);
 out:
 	mutex_unlock(&pb->mii_bus->mdio_lock);
 
-- 
1.7.0

