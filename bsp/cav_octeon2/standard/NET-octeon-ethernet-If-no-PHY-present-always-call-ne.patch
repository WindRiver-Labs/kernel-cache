From 592f8f3220c3820233fa834a53d2485efb3eaadb Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Wed, 7 Dec 2011 11:20:48 -0800
Subject: [PATCH 208/236] NET: octeon-ethernet: If no PHY present, always call netif_carrier_on().

Source: Cavium SDK 2.3-427

In the simulator, or other environments where there is no PHY device
connected to a port (direct connection to another MAC for example), we
still want to pass packets, so call netif_carrier_on() to allow tell
the network core that we are up.

Signed-off-by: David Daney <david.daney@cavium.com>
Integrated-by: Jiang Bin <bin.jiang@windriver.com>
---
 drivers/net/octeon/ethernet-mdio.c |   11 +++++++++--
 1 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/net/octeon/ethernet-mdio.c b/drivers/net/octeon/ethernet-mdio.c
index 11c1410..a027b53 100644
--- a/drivers/net/octeon/ethernet-mdio.c
+++ b/drivers/net/octeon/ethernet-mdio.c
@@ -411,11 +411,11 @@ int cvm_oct_phy_setup_device(struct net_device *dev)
 	int ret = 0;
 
 	if (!priv->of_node)
-		return 0;
+		goto no_phy;
 
 	phy_node = of_parse_phandle(priv->of_node, "phy-handle", 0);
 	if (!phy_node)
-		return 0;
+		goto no_phy;
 
 	priv->phydev = of_phy_find_device(phy_node);
 	if (priv->phydev == NULL)
@@ -433,4 +433,11 @@ int cvm_oct_phy_setup_device(struct net_device *dev)
 	phy_start_aneg(priv->phydev);
 err:
 	return ret;
+no_phy:
+	/*
+	 * If there is no phy, assume a direct connection and that the
+	 * link is up.
+	 */
+	netif_carrier_on(dev);
+	return 0;
 }
-- 
1.7.0

