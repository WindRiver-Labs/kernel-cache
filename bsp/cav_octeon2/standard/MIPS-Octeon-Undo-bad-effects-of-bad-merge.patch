From 81f3be6de54c15f85e4b61c69cb236a288d3337b Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Mon, 12 Sep 2011 14:49:00 -0700
Subject: [PATCH 144/236] MIPS: Octeon: Undo bad effects of bad merge.

Source: Cavium SDK 2.2-414

Also properly indent and get rid of commented out code.

Signed-off-by: David Daney <david.daney@cavium.com>
Integrated-by: Yang Shi <yang.shi@windriver.com>
---
 drivers/net/octeon/ethernet-napi.c |   16 +++++++---------
 drivers/net/octeon/ethernet-srio.c |   12 ++++++------
 drivers/net/octeon/ethernet.c      |    4 ++++
 3 files changed, 17 insertions(+), 15 deletions(-)

diff --git a/drivers/net/octeon/ethernet-napi.c b/drivers/net/octeon/ethernet-napi.c
index 49d2d16..ed811f2 100644
--- a/drivers/net/octeon/ethernet-napi.c
+++ b/drivers/net/octeon/ethernet-napi.c
@@ -282,22 +282,20 @@ static int CVM_OCT_NAPI_POLL(struct napi_struct *napi, int budget)
 			else
 				priv = cvm_oct_by_pkind[port];
 		} else {
-			priv = cvm_oct_by_pkind[port];
-
                         /* srio priv is based on mbox, not port */
-                        if (port == 40 || port == 41)
-                        {
-                            const cvmx_srio_rx_message_header_t *rx_header = (const cvmx_srio_rx_message_header_t *)skb->data;
-                            priv = cvm_oct_by_srio_mbox[(port - 40) >> 1][rx_header->word0.s.mbox];
-                        }
+			if (port == 40 || port == 41) {
+				const cvmx_srio_rx_message_header_t *rx_header =
+					(const cvmx_srio_rx_message_header_t *)skb->data;
+				priv = cvm_oct_by_srio_mbox[(port - 40) >> 1][rx_header->word0.s.mbox];
+			} else {
+				priv = cvm_oct_by_pkind[port];
+			}
 		}
 
 		if (likely(priv)) {
 #ifdef CONFIG_RAPIDIO
 			if (unlikely(priv->imode == CVMX_HELPER_INTERFACE_MODE_SRIO)) {
-//				const cvmx_srio_rx_message_header_t *rx_header = (const cvmx_srio_rx_message_header_t *)skb->data;
                                 __skb_pull(skb, sizeof(cvmx_srio_rx_message_header_t));
-//				priv = cvm_oct_by_srio_mbox[(port - 40) >> 1][rx_header->word0.s.mbox];
 
 				atomic64_add(1, (atomic64_t *)&priv->netdev->stats.rx_packets);
 				atomic64_add(skb->len, (atomic64_t *)&priv->netdev->stats.rx_bytes);
diff --git a/drivers/net/octeon/ethernet-srio.c b/drivers/net/octeon/ethernet-srio.c
index bfdf02b..68791b2 100644
--- a/drivers/net/octeon/ethernet-srio.c
+++ b/drivers/net/octeon/ethernet-srio.c
@@ -120,12 +120,12 @@ int cvm_oct_xmit_srio(struct sk_buff *skb, struct net_device *dev)
 		return 0;
 	}
 
-        /* srio message length needs to be a multiple of 8 */
-        if (unlikely(skb_tailroom(skb) < 8))
-            /* can optionally allocate a larger sk_buff and do a copy */
-            skb->len = skb->len;
-        else
-            skb->len = ((skb->len >> 3) + 1) << 3;
+	/* srio message length needs to be a multiple of 8 */
+	if (unlikely(skb_tailroom(skb) < 8))
+		/* can optionally allocate a larger sk_buff and do a copy */
+		skb->len = skb->len;
+	else
+		skb->len = ((skb->len >> 3) + 1) << 3;
 
 	tx_header.u64 = priv->srio_tx_header;
 	/* Use the socket priority if it is available */
diff --git a/drivers/net/octeon/ethernet.c b/drivers/net/octeon/ethernet.c
index 14bac5c..c64f8ca 100644
--- a/drivers/net/octeon/ethernet.c
+++ b/drivers/net/octeon/ethernet.c
@@ -1089,5 +1089,9 @@ static void __exit cvm_oct_cleanup_module(void)
 MODULE_LICENSE("GPL");
 MODULE_AUTHOR("Cavium Networks <support@caviumnetworks.com>");
 MODULE_DESCRIPTION("Cavium Networks Octeon ethernet driver.");
+#ifdef MODULE
 module_init(cvm_oct_init_module);
+#else
+late_initcall(cvm_oct_init_module);
+#endif
 module_exit(cvm_oct_cleanup_module);
-- 
1.7.0

