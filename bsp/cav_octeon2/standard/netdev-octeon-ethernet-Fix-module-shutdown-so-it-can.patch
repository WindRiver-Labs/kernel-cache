From 92bccc0341505476985e2b142817e1ef2592f943 Mon Sep 17 00:00:00 2001
From: David Daney <ddaney@caviumnetworks.com>
Date: Fri, 22 Apr 2011 10:48:35 -0700
Subject: [PATCH 068/236] netdev: octeon-ethernet: Fix module shutdown so it can be reloaded.

Source: Cavium SDK 2.1.0-407

Occasionally upon module unloading, the GMX would get stuck in a state
of continuously asserting back pressure.  We can avoid this condition by
shutting down the GMX before disabling IPD.

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
Integrated-by: Phil Staub <Phil.Staub@windriver.com>
---
 drivers/net/octeon/ethernet.c |   36 ++++++++++++++++++++++++++++++++----
 1 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/drivers/net/octeon/ethernet.c b/drivers/net/octeon/ethernet.c
index 4877676..c70562e 100644
--- a/drivers/net/octeon/ethernet.c
+++ b/drivers/net/octeon/ethernet.c
@@ -982,20 +982,48 @@ static void __exit cvm_oct_cleanup_module(void)
 	struct octeon_ethernet *priv;
 	struct octeon_ethernet *tmp;
 
+
+
+	/*
+	 * Put both taking the interface down and unregistering it
+	 * under the lock.  That way the devices cannot be taken back
+	 * up in the middle of everything.
+	 */
+	rtnl_lock();
+
+	/*
+	 * Take down all the interfaces, this disables the GMX and
+	 * prevents it from getting into a Bad State when IPD is
+	 * disabled.
+	 */
+	list_for_each_entry(priv, &cvm_oct_list, list) {
+		unsigned int f = dev_get_flags(priv->netdev);
+		dev_change_flags(priv->netdev, f & ~IFF_UP);
+	}
+
+	mdelay(10);
+
 	cvmx_ipd_disable();
 
+	mdelay(10);
+
 	atomic_inc_return(&cvm_oct_poll_queue_stopping);
 	cancel_delayed_work_sync(&cvm_oct_rx_refill_work);
 
 	cvm_oct_rx_shutdown(num_packet_buffers + num_devices_extra_wqe * PER_DEVICE_EXTRA_WQE);
 
+	/* unregister the ethernet devices */
+	list_for_each_entry(priv, &cvm_oct_list, list) {
+		cancel_delayed_work_sync(&priv->port_periodic_work);
+		unregister_netdevice(priv->netdev);
+	}
+
+	rtnl_unlock();
+
 	/* Free the ethernet devices */
 	list_for_each_entry_safe_reverse(priv, tmp, &cvm_oct_list, list) {
 		list_del(&priv->list);
-		cancel_delayed_work_sync(&priv->port_periodic_work);
-		unregister_netdev(priv->netdev);
-
-		free_netdev(priv->netdev);
+		kfree(priv->netdev);
 	}
 
 	destroy_workqueue(cvm_oct_poll_queue);
-- 
1.7.0

