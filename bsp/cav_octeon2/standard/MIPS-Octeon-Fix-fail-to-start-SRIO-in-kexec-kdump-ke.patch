From 9b167caa01f20d39c8cda17a297e1e8704b32faa Mon Sep 17 00:00:00 2001
From: Jiang Bin <bin.jiang@windriver.com>
Date: Tue, 7 Aug 2012 10:08:03 +0800
Subject: [PATCH 235/236] MIPS: Octeon: Fix fail to start SRIO in kexec/kdump kernels.

kexec/kdump kernels boot with "reset_devices" which requires to reset SRIO
devices, otherwise SRIO can't work.

Signed-off-by: Jiang Bin <bin.jiang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-rapidio.c |   39 ++++++++++++++++++++++++++++++
 1 files changed, 39 insertions(+), 0 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-rapidio.c b/arch/mips/cavium-octeon/octeon-rapidio.c
index 1d9ae03..4a06e95 100644
--- a/arch/mips/cavium-octeon/octeon-rapidio.c
+++ b/arch/mips/cavium-octeon/octeon-rapidio.c
@@ -695,6 +695,41 @@ static irqreturn_t octeon_rio_irq(int irq, void *irq_arg)
 extern int cvm_oct_mem_fill_fpa(int pool, int elements);
 extern int cvm_oct_alloc_fpa_pool(int pool, int size);
 
+#if defined(CONFIG_KEXEC) || defined(CONFIG_CRASH_DUMP)
+/**
+ * Disable SRIO.
+ */
+void octeon_disable_srio_hw(void)
+{
+	int interface, num_ints, num_ports = 0;
+	cvmx_sriox_omsg_portx_t sriox_omsg_portx;
+
+	num_ints = cvmx_helper_get_number_of_interfaces();
+	for (interface = 0; interface < num_ints; interface++) {
+		cvmx_helper_interface_mode_t mode =
+			cvmx_helper_interface_get_mode(interface);
+
+		/* Check whether the interface is SRIO */
+		if (mode == CVMX_HELPER_INTERFACE_MODE_SRIO) {
+			int srio_port = interface - 4;
+			int index;
+			cvmx_helper_interface_probe(interface);
+			num_ports = cvmx_helper_ports_on_interface(interface);
+			for (index = 0; index < num_ports; index++) {
+				sriox_omsg_portx.u64 = cvmx_read_csr(CVMX_SRIOX_OMSG_PORTX(index, srio_port));
+				sriox_omsg_portx.s.port = (srio_port) * 2 + index;
+				sriox_omsg_portx.s.enable = 0;
+				cvmx_write_csr(CVMX_SRIOX_OMSG_PORTX(index, srio_port), sriox_omsg_portx.u64);
+			}
+		}
+
+	}
+
+	/* free the cvmx_cmd_queues */
+	cvmx_bootmem_free_named("cvmx_cmd_queues");
+}
+#endif
+
 /**
  * Initialize the RapidIO system
  *
@@ -712,6 +747,10 @@ static int __init octeon_rio_init(void)
 	if (!octeon_has_feature(OCTEON_FEATURE_SRIO))
 		return 0;
 
+#if defined(CONFIG_KEXEC) || defined(CONFIG_CRASH_DUMP)
+	if (reset_devices)
+		octeon_disable_srio_hw();
+#endif
 	memset(&srio_ops, 0, sizeof(srio_ops));
 	srio_ops.lcread = octeon_rio_lcread;
 	srio_ops.lcwrite = octeon_rio_lcwrite;
-- 
1.7.0

