From 45edf546a46fadddbb760dcbd328d2e77c7c39ad Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Fri, 11 Nov 2011 12:03:57 -0800
Subject: [PATCH 143/236] ping over srio worked. tested with 2 ebb6300 boards

Source: Cavium SDK 2.2-414

Integrated-by: Yang Shi <yang.shi@windriver.com>
---
 drivers/net/octeon/ethernet-napi.c |   11 +++++++++--
 drivers/net/octeon/ethernet-srio.c |   10 +++++++++-
 drivers/net/octeon/ethernet.c      |    6 +-----
 3 files changed, 19 insertions(+), 8 deletions(-)

diff --git a/drivers/net/octeon/ethernet-napi.c b/drivers/net/octeon/ethernet-napi.c
index e475fa4..49d2d16 100644
--- a/drivers/net/octeon/ethernet-napi.c
+++ b/drivers/net/octeon/ethernet-napi.c
@@ -283,14 +283,21 @@ static int CVM_OCT_NAPI_POLL(struct napi_struct *napi, int budget)
 				priv = cvm_oct_by_pkind[port];
 		} else {
 			priv = cvm_oct_by_pkind[port];
+
+                        /* srio priv is based on mbox, not port */
+                        if (port == 40 || port == 41)
+                        {
+                            const cvmx_srio_rx_message_header_t *rx_header = (const cvmx_srio_rx_message_header_t *)skb->data;
+                            priv = cvm_oct_by_srio_mbox[(port - 40) >> 1][rx_header->word0.s.mbox];
+                        }
 		}
 
 		if (likely(priv)) {
 #ifdef CONFIG_RAPIDIO
 			if (unlikely(priv->imode == CVMX_HELPER_INTERFACE_MODE_SRIO)) {
-				const cvmx_srio_rx_message_header_t *rx_header = (const cvmx_srio_rx_message_header_t *)skb->data;
+//				const cvmx_srio_rx_message_header_t *rx_header = (const cvmx_srio_rx_message_header_t *)skb->data;
                                 __skb_pull(skb, sizeof(cvmx_srio_rx_message_header_t));
-				priv = cvm_oct_by_srio_mbox[(port - 40) >> 1][rx_header->word0.s.mbox];
+//				priv = cvm_oct_by_srio_mbox[(port - 40) >> 1][rx_header->word0.s.mbox];
 
 				atomic64_add(1, (atomic64_t *)&priv->netdev->stats.rx_packets);
 				atomic64_add(skb->len, (atomic64_t *)&priv->netdev->stats.rx_bytes);
diff --git a/drivers/net/octeon/ethernet-srio.c b/drivers/net/octeon/ethernet-srio.c
index 668039a..bfdf02b 100644
--- a/drivers/net/octeon/ethernet-srio.c
+++ b/drivers/net/octeon/ethernet-srio.c
@@ -120,6 +120,13 @@ int cvm_oct_xmit_srio(struct sk_buff *skb, struct net_device *dev)
 		return 0;
 	}
 
+        /* srio message length needs to be a multiple of 8 */
+        if (unlikely(skb_tailroom(skb) < 8))
+            /* can optionally allocate a larger sk_buff and do a copy */
+            skb->len = skb->len;
+        else
+            skb->len = ((skb->len >> 3) + 1) << 3;
+
 	tx_header.u64 = priv->srio_tx_header;
 	/* Use the socket priority if it is available */
 	if (skb->sk) {
@@ -168,7 +175,8 @@ int cvm_oct_xmit_srio(struct sk_buff *skb, struct net_device *dev)
 		return NETDEV_TX_OK;
 	} else {
 		/* Use the low two bytes of the destination MAC as the SRIO destination */
-		tx_header.s.did = *(uint16_t *)(skb->data + 4);
+		//tx_header.s.did = *(uint16_t *)(skb->data + 4);
+		tx_header.s.did = *(u8 *)(skb->data + 5);
 		if (unlikely(skb_headroom(skb) < 8)) {
 			struct sk_buff *new_skb = skb_copy(skb, GFP_ATOMIC);
 			dev_kfree_skb(skb);
diff --git a/drivers/net/octeon/ethernet.c b/drivers/net/octeon/ethernet.c
index 383f3eb..14bac5c 100644
--- a/drivers/net/octeon/ethernet.c
+++ b/drivers/net/octeon/ethernet.c
@@ -862,7 +862,7 @@ static int __init cvm_oct_init_module(void)
                                 int mbox = cvmx_helper_get_ipd_port(interface, interface_port) - cvmx_helper_get_ipd_port(interface, 0);
 				cvmx_srio_tx_message_header_t tx_header;
 				tx_header.u64 = 0;
-				tx_header.s.tt = 1;
+				tx_header.s.tt = 0;
 				tx_header.s.ssize = 0xe;
 				tx_header.s.mbox = mbox;
 				tx_header.s.lns = 1;
@@ -1089,9 +1089,5 @@ static void __exit cvm_oct_cleanup_module(void)
 MODULE_LICENSE("GPL");
 MODULE_AUTHOR("Cavium Networks <support@caviumnetworks.com>");
 MODULE_DESCRIPTION("Cavium Networks Octeon ethernet driver.");
-#ifdef MODULE
 module_init(cvm_oct_init_module);
-#else
-late_initcall(cvm_oct_init_module);
-#endif
 module_exit(cvm_oct_cleanup_module);
-- 
1.7.0

