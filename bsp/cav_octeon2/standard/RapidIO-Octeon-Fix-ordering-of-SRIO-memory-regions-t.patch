From ec8969db064bbafdf32fe86297e3e07f4ece0b8c Mon Sep 17 00:00:00 2001
From: Chad Reese <kreese@caviumnetworks.com>
Date: Wed, 1 Sep 2010 14:43:02 -0700
Subject: [PATCH 041/236] RapidIO: Octeon: Fix ordering of SRIO memory regions to respect alignment.

Source: Cavium SDK 2.1.0-407

Bar1 was incorrectly being put directly after MAIN, which would cause
the alignment of Bar1 to be invalid. The new order is Bar1, MAINT, and
Bar0.

Signed-off-by: Chad Reese <kreese@caviumnetworks.com>
Integrated-by: Phil Staub <Phil.Staub@windriver.com>
---
 drivers/rapidio/devices/cn6xxx.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/rapidio/devices/cn6xxx.c b/drivers/rapidio/devices/cn6xxx.c
index 82b6d82..4921581 100644
--- a/drivers/rapidio/devices/cn6xxx.c
+++ b/drivers/rapidio/devices/cn6xxx.c
@@ -19,12 +19,12 @@
 /* The defines below control the SRIO memory address map configured
     on CN6XXX. All possible regions are packed together in desending
     size. This way all alignments are honored */
-#define MAINT_ADDRESS   0ull
-#define MAINT_SIZE      (1ull<<24)
-#define BAR1_ADDRESS    (MAINT_ADDRESS + MAINT_SIZE)
+#define BAR1_ADDRESS    0ull
 #define BAR1_SHIFT      7 /* 128MB */
 #define BAR1_SIZE       (1ull<<(20 + BAR1_SHIFT))
-#define BAR0_ADDRESS    (BAR1_ADDRESS + BAR1_SIZE)
+#define MAINT_ADDRESS   (BAR1_ADDRESS + BAR1_SIZE)
+#define MAINT_SIZE      (1ull<<24)
+#define BAR0_ADDRESS    (MAINT_ADDRESS + MAINT_SIZE)
 #define BAR0_SIZE       16384ull
 #define BAR2_ADDRESS    (1ull<<41)
 #define BAR2_SIZE       (1ull<<41)
@@ -121,12 +121,12 @@ static int cn6xxx_probe(struct rio_dev *dev, const struct rio_device_id *id)
 	sriomaintx_lcs_ba0.u32 = 0;
 	sriomaintx_lcs_ba0.s.lcsba = MAINT_ADDRESS >> 35;
 	sriomaintx_lcs_ba1.u32 = 0;
-	sriomaintx_lcs_ba1.s.lcsba = (MAINT_ADDRESS >> 24) & 0x7fff;
+	sriomaintx_lcs_ba1.s.lcsba = (MAINT_ADDRESS >> 24) & 0x7ff;
 	if (rio_write_config_32(dev, CVMX_SRIOMAINTX_LCS_BA0(0),
 		sriomaintx_lcs_ba0.u32))
 		return -1;
 	if (rio_write_config_32(dev, CVMX_SRIOMAINTX_LCS_BA1(0),
-		sriomaintx_lcs_ba0.u32))
+		sriomaintx_lcs_ba1.u32))
 		return -1;
 	dev_info(&dev->dev, "Maintenance 0x%016llx - 0x%016llx\n",
 		MAINT_ADDRESS, MAINT_ADDRESS + MAINT_SIZE - 1);
-- 
1.7.0

