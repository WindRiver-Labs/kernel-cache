From 62717362606fb2aceb842679bf7ad81443f0aa3a Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Wed, 14 Sep 2011 17:35:43 +0800
Subject: [PATCH 1/3] ARM:CNS3xxx:Add OHCI driver

The USB1 port on CNS34xx VB board is a USB2.0 port, the patch add
a USB OHCI driver for cns34xx board.

Extract from vendor drop CNS3xxx-sdk-201102161603-v1.1_20110224.

Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 arch/arm/mach-cns3xxx/cns3420vb.c |   30 ++++++++++
 drivers/usb/Kconfig               |    1 +
 drivers/usb/host/Kconfig          |    6 ++
 drivers/usb/host/ohci-cns3xxx.c   |  112 +++++++++++++++++++++++++++++++++++++
 drivers/usb/host/ohci-hcd.c       |    5 ++
 5 files changed, 154 insertions(+), 0 deletions(-)
 create mode 100644 drivers/usb/host/ohci-cns3xxx.c

diff --git a/arch/arm/mach-cns3xxx/cns3420vb.c b/arch/arm/mach-cns3xxx/cns3420vb.c
index e1e0a26..540fa13 100644
--- a/arch/arm/mach-cns3xxx/cns3420vb.c
+++ b/arch/arm/mach-cns3xxx/cns3420vb.c
@@ -352,6 +352,30 @@ static struct platform_device cns3xxx_ahci_device = {
 	.num_resources	= ARRAY_SIZE(cns3xxx_ahci_resource),
 };
 
+static struct resource cns3xxx_usb_ohci_resource[] = {
+	[0] = {
+		.start = CNS3XXX_USB_OHCI_BASE,
+		.end = CNS3XXX_USB_OHCI_BASE + SZ_16M - 1,
+		.flags = IORESOURCE_MEM,
+	},
+	[1] = {
+		.start = IRQ_CNS3XXX_USB_OHCI,
+		.flags = IORESOURCE_IRQ,
+	},
+};
+
+static u64 cns3xxx_usb_ohci_dma_mask = 0xffffffffULL;
+
+static struct platform_device cns3xxx_usb_ohci_device = {
+	.name = "cns3xxx-ohci",
+	.dev = {
+		.dma_mask = &cns3xxx_usb_ohci_dma_mask,
+		.coherent_dma_mask = 0xffffffffULL,
+	 },
+	.num_resources = 2,
+	.resource = cns3xxx_usb_ohci_resource,
+};
+
 /*
  * Initialization
  */
@@ -363,6 +387,7 @@ static struct platform_device *cns3420_pdevs[] __initdata = {
 	&cns3xxx_spi_controller_device,
 	&cns3xxx_i2c_controller_device,
 	&cns3xxx_usb_ehci_device,
+	&cns3xxx_usb_ohci_device,
 	&cns3xxx_usb_otg_device,
 	&cns3xxx_sdhci_device,
 	&cns3xxx_ahci_device,
@@ -416,6 +441,11 @@ static struct map_desc cns3420_io_desc[] __initdata = {
 		.pfn		= __phys_to_pfn(CNS3XXX_USB_BASE),
 		.length		= SZ_4K,
 		.type		= MT_DEVICE,
+	}, {
+		.virtual	= CNS3XXX_USB_OHCI_BASE_VIRT,
+		.pfn		= __phys_to_pfn(CNS3XXX_USB_OHCI_BASE),
+		.length		= PAGE_SIZE,
+		.type		= MT_DEVICE,
 	},
 };
 
diff --git a/drivers/usb/Kconfig b/drivers/usb/Kconfig
index cec8f91..b6fd6d2 100644
--- a/drivers/usb/Kconfig
+++ b/drivers/usb/Kconfig
@@ -41,6 +41,7 @@ config USB_ARCH_HAS_OHCI
 	default y if MFD_TC6393XB
 	default y if ARCH_W90X900
 	default y if ARCH_DAVINCI_DA8XX
+	default y if ARCH_CNS3XXX
 	# PPC:
 	default y if STB03xxx
 	default y if PPC_MPC52xx
diff --git a/drivers/usb/host/Kconfig b/drivers/usb/host/Kconfig
index 6af8bee..d76ce7b 100644
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@ -267,6 +267,12 @@ config USB_OHCI_HCD_SSB
 
 	  If unsure, say N.
 
+config USB_CNS3XXX_OHCI
+	bool "Cavium CNS3XXX OHCI Module"
+	depends on USB_OHCI_HCD
+	---help---
+	  Cavium CNS3XXX USB OHCI Chipset support
+
 config USB_OHCI_BIG_ENDIAN_DESC
 	bool
 	depends on USB_OHCI_HCD
diff --git a/drivers/usb/host/ohci-cns3xxx.c b/drivers/usb/host/ohci-cns3xxx.c
new file mode 100644
index 0000000..9815358
--- /dev/null
+++ b/drivers/usb/host/ohci-cns3xxx.c
@@ -0,0 +1,112 @@
+
+#include <linux/platform_device.h>
+#include <mach/cns3xxx.h>
+
+static int __devinit cns3xxx_ohci_start(struct usb_hcd *hcd)
+{
+	struct ohci_hcd	*ohci = hcd_to_ohci(hcd);
+	int ret;
+
+	ret = ohci_init(ohci);
+	if (ret < 0)
+		return ret;
+
+	ohci->num_ports = 1;
+
+	ret = ohci_run(ohci);
+	if (ret < 0) {
+		err("can't start %s", hcd->self.bus_name);
+		ohci_stop(hcd);
+		return ret;
+	}
+	return 0;
+}
+
+static const struct hc_driver cns3xxx_ohci_hc_driver = {
+	.description = hcd_name,
+	.product_desc = "CNS3XXX OHCI Host controller",
+	.hcd_priv_size  = sizeof(struct ohci_hcd),
+	.irq = ohci_irq,
+	.flags = HCD_USB11 | HCD_MEMORY,
+	.start = cns3xxx_ohci_start,
+	.stop = ohci_stop,
+	.shutdown = ohci_shutdown,
+	.urb_enqueue = ohci_urb_enqueue,
+	.urb_dequeue = ohci_urb_dequeue,
+	.endpoint_disable = ohci_endpoint_disable,
+	.get_frame_number = ohci_get_frame,
+	.hub_status_data = ohci_hub_status_data,
+	.hub_control = ohci_hub_control,
+#ifdef CONFIG_PM
+	.bus_suspend = ohci_bus_suspend,
+	.bus_resume = ohci_bus_resume,
+#endif
+	.start_port_reset = ohci_start_port_reset,
+};
+
+static int cns3xxx_ohci_probe(struct platform_device *pdev)
+{
+	struct usb_hcd *hcd = NULL;
+	const struct hc_driver *driver = &cns3xxx_ohci_hc_driver;
+	struct resource *res;
+	int irq;
+	int retval;
+
+	if (usb_disabled())
+		return -ENODEV;
+
+	res = platform_get_resource(pdev, IORESOURCE_IRQ, 0);
+	if (!res) {
+		dev_err(&pdev->dev,
+			"Found HC with no IRQ. Check %s setup!\n",
+			dev_name(&pdev->dev));
+		return -ENODEV;
+	}
+	irq = res->start;
+
+	hcd = usb_create_hcd(driver, &pdev->dev, dev_name(&pdev->dev));
+	if (!hcd)
+		return -ENOMEM;
+
+	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	if (!res) {
+		dev_err(&pdev->dev,
+			"Found HC with no register addr. Check setup!\n");
+		retval = -ENODEV;
+		goto err1;
+	}
+	hcd->rsrc_start = res->start;
+	hcd->rsrc_len = res->end - res->start + 1;
+
+	hcd->regs = (void __iomem *) CNS3XXX_USB_OHCI_BASE_VIRT;
+
+	ohci_hcd_init(hcd_to_ohci(hcd));
+
+	retval = usb_add_hcd(hcd, irq, IRQF_SHARED);
+	if (retval == 0)
+		return retval;
+
+err1:
+	usb_put_hcd(hcd);
+	return retval;
+}
+
+static int cns3xxx_ohci_remove(struct platform_device *pdev)
+{
+	struct usb_hcd *hcd = platform_get_drvdata(pdev);
+
+	usb_remove_hcd(hcd);
+	usb_put_hcd(hcd);
+
+	return 0;
+}
+
+MODULE_ALIAS("platform:cns3xxx-ohci");
+
+static struct platform_driver ohci_hcd_cns3xxx_driver = {
+	.probe = cns3xxx_ohci_probe,
+	.remove = cns3xxx_ohci_remove,
+	.driver = {
+		.name = "cns3xxx-ohci",
+	},
+};
diff --git a/drivers/usb/host/ohci-hcd.c b/drivers/usb/host/ohci-hcd.c
index c8b5064..d1969a7 100644
--- a/drivers/usb/host/ohci-hcd.c
+++ b/drivers/usb/host/ohci-hcd.c
@@ -1114,6 +1114,11 @@ MODULE_LICENSE ("GPL");
 #define TMIO_OHCI_DRIVER	ohci_hcd_tmio_driver
 #endif
 
+#ifdef CONFIG_USB_CNS3XXX_OHCI
+#include "ohci-cns3xxx.c"
+#define PLATFORM_DRIVER		ohci_hcd_cns3xxx_driver
+#endif
+
 #if	!defined(PCI_DRIVER) &&		\
 	!defined(PLATFORM_DRIVER) &&	\
 	!defined(OF_PLATFORM_DRIVER) &&	\
-- 
1.7.0

