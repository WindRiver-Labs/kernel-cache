From 912ca6238df16926c3e490daee3fe2a4c4f9cd01 Mon Sep 17 00:00:00 2001
From: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
Date: Sat, 5 Jun 2010 21:33:10 -0400
Subject: [PATCH] WRHV/SMP: minor tweaks need for SMP

These are the minor changes that are needed to get SMP working.

_OBVIOUSLY_ this is what the problem was.. <eyes rolling>

----- This patch should get squashed into this commit ----

    WRHV/mpc8572ds: Support SMP

    From b866b7787e1b12ee1817690f4fa96b0f9e2b910a Mon Sep 17 00:00:00 2001
    Subject: [PATCH] WRHV/mpc8572ds: Support SMP
    1> Add power.save
    2> Support HOT_PLUG
    3> Extend swapper_pg_dir space for VMMU
    4> Separate WRHV_SPRNS per core to keep thread infor
    5> Create VMMU for secondary core

Signed-off-by: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
---
 arch/powerpc/include/asm/reg_wrhv.h |    8 +++++---
 arch/powerpc/kernel/head_wrhv.S     |   29 +++++++++++++++--------------
 arch/powerpc/kernel/wrhv_entry_32.S |   16 ----------------
 3 files changed, 20 insertions(+), 33 deletions(-)

diff --git a/arch/powerpc/include/asm/reg_wrhv.h b/arch/powerpc/include/asm/reg_wrhv.h
index 805a5c6..cbf1acc 100644
--- a/arch/powerpc/include/asm/reg_wrhv.h
+++ b/arch/powerpc/include/asm/reg_wrhv.h
@@ -40,9 +40,11 @@
 #define PARAVIRT_CLEAR_INST_COMPLETION                 do{ } while (0)
 
 #ifdef __ASSEMBLY__
-.extern	var(wrhv_sprg3)
-.extern	var(wrhv_user)
-.extern var(wrhv_pir)
+
+#define wrhv_supervisor (0xF0002000 +VB_CONTROL_RESERVED7)
+#define WRHV_INITSUPERVISOR(rs,tmpr)		\
+	lis     tmpr,wrhv_supervisor@ha;	\
+	stw     rs,wrhv_supervisor@l(tmpr)
 
 #ifdef CONFIG_SMP
 /*temporary solution for MFSPRG3,PIR ,wrhv-reserverd:0xf0002068 */
diff --git a/arch/powerpc/kernel/head_wrhv.S b/arch/powerpc/kernel/head_wrhv.S
index 621ce6a..78bc9fd 100644
--- a/arch/powerpc/kernel/head_wrhv.S
+++ b/arch/powerpc/kernel/head_wrhv.S
@@ -100,15 +100,6 @@ _ENTRY(_start);
  */
 
 _ENTRY(__early_start)
-	/* Establish the interrupt vector base */
-	lis	r0,VBI_SYS_hyIoctl@h
-	ori     r0,r0,VBI_SYS_hyIoctl@l
-	lis	r3,VBI_HYIOCTL_EXCBASE@h
-	ori	r3,r3,VBI_HYIOCTL_EXCBASE@l
-	lis	r4,_start@h
-	ori	r4,r4,_start@l
-	sc
-
 #ifdef CONFIG_SMP
 	/* Check to see if we're the second processor, and jump
 	 * to the secondary_start code if so
@@ -120,10 +111,21 @@ _ENTRY(__early_start)
 	bne	__secondary_start
 #endif
 
+	/* Establish the interrupt vector base */
+	lis	r0,VBI_SYS_hyIoctl@h
+	ori     r0,r0,VBI_SYS_hyIoctl@l
+	lis	r3,VBI_HYIOCTL_EXCBASE@h
+	ori	r3,r3,VBI_HYIOCTL_EXCBASE@l
+	lis	r4,_start@h
+	ori	r4,r4,_start@l
+	sc
+
 	/* ptr to current */
 	lis	r2,init_task@h
 	ori	r2,r2,init_task@l
 
+	li	r4,1
+	WRHV_INITSUPERVISOR(r4,r1)
 	/* ptr to current thread */
 	addi	r4,r2,THREAD	/* init task's THREAD */
 	WRHV_MTSPRG3(r4,r1)
@@ -342,11 +344,6 @@ interrupt_base:
         rlwinm  r13, r13, 0, 1, 31      /* Clear Valid bit */
         mtspr   SPRN_MAS1, r13
 
-        /* We have to restore GPA to MAS3 when execute continuously
-         * tlb instruction.
-         */
-        mtspr   SPRN_MAS3,r10
-
         tlbwe
 
         b       5b              /* Try again */
@@ -858,12 +855,16 @@ __secondary_start:
 	li	r0,0
 	stw	r0,0(r1)
 
+	li	r4,1
+	WRHV_INITSUPERVISOR(r4,r3)
+
 	/* ptr to current thread */
 	addi	r4,r2,THREAD	/* address of our thread_struct */
 	WRHV_MTSPRG3(r4,r3)
 
 	/* Jump to start_secondary */
 	b	wrhv_start_secondary
+	sync
 
 	.globl __secondary_hold_acknowledge
 __secondary_hold_acknowledge:
diff --git a/arch/powerpc/kernel/wrhv_entry_32.S b/arch/powerpc/kernel/wrhv_entry_32.S
index cf895a1..0660096 100644
--- a/arch/powerpc/kernel/wrhv_entry_32.S
+++ b/arch/powerpc/kernel/wrhv_entry_32.S
@@ -46,22 +46,6 @@
 #undef VMMU  /* just for debugging */
 #endif /* CONFIG_WRHV */
 
-#ifdef	CONFIG_WRHV
-	.data
-	.globl	wrhv_sprg3
-wrhv_sprg3:
-	.long	0
-	.globl	wrhv_supervisor
-wrhv_supervisor:
-	.long	1
-#ifdef CONFIG_SMP
-	.globl wrhv_pir
-wrhv_pir:
-	.long	0
-#endif
-	.text
-#endif	/* CONFIG_WRHV */
-
 /*
  * MSR_KERNEL is > 0x10000 on 4xx/Book-E since it include MSR_CE.
  */
-- 
1.6.0.3

