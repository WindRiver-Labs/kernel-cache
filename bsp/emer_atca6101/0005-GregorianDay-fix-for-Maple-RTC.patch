From 42d29d4e819f7cc44f9ef8939f9ad652f139a7d3 Mon Sep 17 00:00:00 2001
Message-Id: <42d29d4e819f7cc44f9ef8939f9ad652f139a7d3.1224568101.git.weiwei.wang@windriver.com>
In-Reply-To: <f05fc30d72d7287662a889ddd870105998b697dc.1224568101.git.weiwei.wang@windriver.com>
References: <f05fc30d72d7287662a889ddd870105998b697dc.1224568101.git.weiwei.wang@windriver.com>
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Tue, 21 Oct 2008 13:48:09 +0800
Subject: [PATCH 5/5] GregorianDay fix for Maple RTC

The options to GregorianDay() are slightly different than what
needs to be in the rtc_time struct. Received from Motorola,
this patch ensures the proper values are passed.

Signed-off-by: Amy Fong <amy.fong@windriver.com>
Integrated-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 arch/powerpc/platforms/maple/time.c |   20 +++++++++++++++-----
 1 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/platforms/maple/time.c b/arch/powerpc/platforms/maple/time.c
index ad74c9a..2c32a22 100644
--- a/arch/powerpc/platforms/maple/time.c
+++ b/arch/powerpc/platforms/maple/time.c
@@ -59,6 +59,7 @@ static void maple_clock_write(unsigned long val, int addr)
 void maple_get_rtc_time(struct rtc_time *tm)
 {
 	int century = 0;
+	struct rtc_time gd;
 
 	if (maple_time_init)
 		mdelay(5);
@@ -89,13 +90,19 @@ void maple_get_rtc_time(struct rtc_time *tm)
 	tm->tm_mon--;
 	tm->tm_year += century * 100 - 1900;
 
-	GregorianDay(tm);
+	memcpy(&gd, tm, sizeof(gd));
+	/* GregorianDay() expects tm_year to be full (e.g., 1970, not 70) */
+	gd.tm_year = (century * 100) + (tm->tm_year % 100);
+	gd.tm_mon++; /* Jan = 1, Feb = 2, etc. */
+	GregorianDay(&gd);
+	tm->tm_wday = gd.tm_wday;
 }
 
 int maple_set_rtc_time(struct rtc_time *tm)
 {
 	unsigned char save_control, save_freq_select;
 	int sec, min, hour, mon, mday, year, century, wday;
+	struct rtc_time gd;
 
 	spin_lock(&rtc_lock);
 
@@ -115,10 +122,13 @@ int maple_set_rtc_time(struct rtc_time *tm)
 	year = tm->tm_year % 100;
    century = (tm->tm_year + 1900) / 100;
 
-	GregorianDay(tm);
-	wday = tm->tm_wday - 2;
-	if (wday < 1)
-		wday += 7;
+	memcpy(&gd, tm, sizeof(gd));
+	/* GregorianDay() expects tm_year to be full (e.g., 1970, not 70) */
+	gd.tm_year = (century * 100) + (tm->tm_year % 100);
+	gd.tm_mon++; /* Jan = 1, Feb = 2, etc. */
+	GregorianDay(&gd);
+	tm->tm_wday = gd.tm_wday; /* Sun = 0, Mon = 1 ... Sat = 6 */
+	wday = tm->tm_wday + 1;   /* Sun = 1, Mon = 2 ... Sat = 7 */
 
 	if (!(save_control & RTC_DM_BINARY) || RTC_ALWAYS_BCD) {
 		BIN_TO_BCD(sec);
-- 
1.5.5.1

