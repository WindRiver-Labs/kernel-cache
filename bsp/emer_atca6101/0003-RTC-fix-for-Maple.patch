From 6e2dfb99edc79e91540f56c3a79fc19740cdb9ac Mon Sep 17 00:00:00 2001
Message-Id: <6e2dfb99edc79e91540f56c3a79fc19740cdb9ac.1224568101.git.weiwei.wang@windriver.com>
In-Reply-To: <f05fc30d72d7287662a889ddd870105998b697dc.1224568101.git.weiwei.wang@windriver.com>
References: <f05fc30d72d7287662a889ddd870105998b697dc.1224568101.git.weiwei.wang@windriver.com>
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Tue, 21 Oct 2008 13:46:29 +0800
Subject: [PATCH 3/5] RTC fix for Maple

1. The RTC reports the month datum in the range [1..12], but kernel
date calculations expect [0..11], fix it.
2. Add code to set and get the RTC century datum. There is no century
field in the the rtc_time struct, so the century is folded into the
year.
3. Add code to set the RTC day of week datum.

Signed-off-by: Amy Fong <amy.fong@windriver.com>
Integrated-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 arch/powerpc/platforms/maple/time.c |   25 ++++++++++++++++++++-----
 include/linux/mc146818rtc.h         |    1 +
 2 files changed, 21 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/platforms/maple/time.c b/arch/powerpc/platforms/maple/time.c
index 53bca13..80c0fe4 100644
--- a/arch/powerpc/platforms/maple/time.c
+++ b/arch/powerpc/platforms/maple/time.c
@@ -57,6 +57,8 @@ static void maple_clock_write(unsigned long val, int addr)
 
 void maple_get_rtc_time(struct rtc_time *tm)
 {
+	int century = 0;
+
 	do {
 		tm->tm_sec = maple_clock_read(RTC_SECONDS);
 		tm->tm_min = maple_clock_read(RTC_MINUTES);
@@ -64,6 +66,7 @@ void maple_get_rtc_time(struct rtc_time *tm)
 		tm->tm_mday = maple_clock_read(RTC_DAY_OF_MONTH);
 		tm->tm_mon = maple_clock_read(RTC_MONTH);
 		tm->tm_year = maple_clock_read(RTC_YEAR);
+		century = maple_clock_read(RTC_CENTURY);
 	} while (tm->tm_sec != maple_clock_read(RTC_SECONDS));
 
 	if (!(maple_clock_read(RTC_CONTROL) & RTC_DM_BINARY)
@@ -74,9 +77,11 @@ void maple_get_rtc_time(struct rtc_time *tm)
 		BCD_TO_BIN(tm->tm_mday);
 		BCD_TO_BIN(tm->tm_mon);
 		BCD_TO_BIN(tm->tm_year);
+		BCD_TO_BIN(century);
 	  }
-	if ((tm->tm_year + 1900) < 1970)
-		tm->tm_year += 100;
+
+	tm->tm_mon--;
+	tm->tm_year += century * 100 - 1900;
 
 	GregorianDay(tm);
 }
@@ -84,7 +89,7 @@ void maple_get_rtc_time(struct rtc_time *tm)
 int maple_set_rtc_time(struct rtc_time *tm)
 {
 	unsigned char save_control, save_freq_select;
-	int sec, min, hour, mon, mday, year;
+	int sec, min, hour, mon, mday, year, century, wday;
 
 	spin_lock(&rtc_lock);
 
@@ -99,9 +104,15 @@ int maple_set_rtc_time(struct rtc_time *tm)
 	sec = tm->tm_sec;
 	min = tm->tm_min;
 	hour = tm->tm_hour;
-	mon = tm->tm_mon;
+	mon = tm->tm_mon + 1;
 	mday = tm->tm_mday;
-	year = tm->tm_year;
+	year = tm->tm_year % 100;
+   century = (tm->tm_year + 1900) / 100;
+
+	GregorianDay(tm);
+	wday = tm->tm_wday - 2;
+	if (wday < 1)
+		wday += 7;
 
 	if (!(save_control & RTC_DM_BINARY) || RTC_ALWAYS_BCD) {
 		BIN_TO_BCD(sec);
@@ -110,6 +121,8 @@ int maple_set_rtc_time(struct rtc_time *tm)
 		BIN_TO_BCD(mon);
 		BIN_TO_BCD(mday);
 		BIN_TO_BCD(year);
+		BIN_TO_BCD(century);
+		BIN_TO_BCD(wday);
 	}
 	maple_clock_write(sec, RTC_SECONDS);
 	maple_clock_write(min, RTC_MINUTES);
@@ -117,6 +130,8 @@ int maple_set_rtc_time(struct rtc_time *tm)
 	maple_clock_write(mon, RTC_MONTH);
 	maple_clock_write(mday, RTC_DAY_OF_MONTH);
 	maple_clock_write(year, RTC_YEAR);
+	maple_clock_write(century, RTC_CENTURY);
+	maple_clock_write(wday, RTC_DAY_OF_WEEK);
 
 	/* The following flags have to be released exactly in this order,
 	 * otherwise the DS12887 (popular MC146818A clone with integrated
diff --git a/include/linux/mc146818rtc.h b/include/linux/mc146818rtc.h
index 2f4e957..6b30b09 100644
--- a/include/linux/mc146818rtc.h
+++ b/include/linux/mc146818rtc.h
@@ -53,6 +53,7 @@ struct cmos_rtc_board_info {
 #define RTC_DAY_OF_MONTH	7
 #define RTC_MONTH		8
 #define RTC_YEAR		9
+#define RTC_CENTURY		0x7F
 
 /* control registers - Moto names
  */
-- 
1.5.5.1

