From 7a153382bca94bc4ffce3b21936c37083655c786 Mon Sep 17 00:00:00 2001
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Wed, 3 Aug 2011 13:39:52 -0400
Subject: [PATCH 09/10] wrhv: arm: mach-vexpress changes to support GOS

Notable changes:
Not all devices are enabled in the GOS yet

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 arch/arm/mach-vexpress/Makefile               |    1 +
 arch/arm/mach-vexpress/include/mach/memory.h  |    4 ++++
 arch/arm/mach-vexpress/include/mach/vmalloc.h |    4 ++++
 arch/arm/mach-vexpress/platsmp.c              |   12 +++++++++++-
 arch/arm/mach-vexpress/v2m.c                  |   18 +++++++++++++++++-
 5 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-vexpress/Makefile b/arch/arm/mach-vexpress/Makefile
index 2c0ac7d..2c1c9e2 100644
--- a/arch/arm/mach-vexpress/Makefile
+++ b/arch/arm/mach-vexpress/Makefile
@@ -7,3 +7,4 @@ obj-$(CONFIG_ARCH_VEXPRESS_CA9X4)	+= ct-ca9x4.o
 obj-$(CONFIG_SMP)			+= platsmp.o headsmp.o
 obj-$(CONFIG_HOTPLUG_CPU)		+= hotplug.o
 obj-$(CONFIG_LOCAL_TIMERS)		+= localtimer.o
+obj-$(CONFIG_HOTPLUG)			+= hotplug.o
diff --git a/arch/arm/mach-vexpress/include/mach/memory.h b/arch/arm/mach-vexpress/include/mach/memory.h
index be28232..0857058 100644
--- a/arch/arm/mach-vexpress/include/mach/memory.h
+++ b/arch/arm/mach-vexpress/include/mach/memory.h
@@ -20,6 +20,10 @@
 #ifndef __ASM_ARCH_MEMORY_H
 #define __ASM_ARCH_MEMORY_H
 
+#ifdef CONFIG_WRHV
+#define PHYS_OFFSET		UL(0x00000000)
+#else
 #define PHYS_OFFSET		UL(0x60000000)
+#endif
 
 #endif
diff --git a/arch/arm/mach-vexpress/include/mach/vmalloc.h b/arch/arm/mach-vexpress/include/mach/vmalloc.h
index f43a36e..08222b8 100644
--- a/arch/arm/mach-vexpress/include/mach/vmalloc.h
+++ b/arch/arm/mach-vexpress/include/mach/vmalloc.h
@@ -18,4 +18,8 @@
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  */
+#ifdef CONFIG_WRHV
+#define VMALLOC_END		0xf0000000UL
+#else
 #define VMALLOC_END		0xf8000000UL
+#endif
diff --git a/arch/arm/mach-vexpress/platsmp.c b/arch/arm/mach-vexpress/platsmp.c
index 6709706..9074d3b 100644
--- a/arch/arm/mach-vexpress/platsmp.c
+++ b/arch/arm/mach-vexpress/platsmp.c
@@ -112,11 +112,15 @@ int __cpuinit boot_secondary(unsigned int cpu, struct task_struct *idle)
 	return pen_release != -1 ? -ENOSYS : 0;
 }
 
+
+void paravirt_smp_init_cpus(void)
+	__attribute__((weak, alias("native_smp_init_cpus")));
+
 /*
  * Initialise the CPU possible map early - this describes the CPUs
  * which may be present or become present in the system.
  */
-void __init smp_init_cpus(void)
+void __init native_smp_init_cpus(void)
 {
 	void __iomem *scu_base = scu_base_addr();
 	unsigned int i, ncores;
@@ -143,6 +147,12 @@ void __init smp_init_cpus(void)
 		set_cpu_possible(i, true);
 }
 
+void __init smp_init_cpus(void)
+{
+	paravirt_smp_init_cpus();
+}
+
+
 void __init smp_prepare_cpus(unsigned int max_cpus)
 {
 	unsigned int ncores = num_possible_cpus();
diff --git a/arch/arm/mach-vexpress/v2m.c b/arch/arm/mach-vexpress/v2m.c
index af96564..03d55ac 100644
--- a/arch/arm/mach-vexpress/v2m.c
+++ b/arch/arm/mach-vexpress/v2m.c
@@ -118,6 +118,7 @@ int v2m_cfg_read(u32 devfn, u32 *data)
 }
 
 
+#ifndef CONFIG_WRHV
 static struct resource v2m_pcie_i2c_resource = {
 	.start	= V2M_SERIAL_BUS_PCI,
 	.end	= V2M_SERIAL_BUS_PCI + SZ_4K - 1,
@@ -143,6 +144,7 @@ static struct platform_device v2m_ddc_i2c_device = {
 	.num_resources	= 1,
 	.resource	= &v2m_ddc_i2c_resource,
 };
+#endif
 
 static struct resource v2m_eth_resources[] = {
 	{
@@ -200,6 +202,7 @@ static struct platform_device v2m_usb_device = {
 	.dev.platform_data = &v2m_usb_config,
 };
 
+#ifndef CONFIG_WRHV
 static int v2m_flash_init(void)
 {
 	writel(0, MMIO_P2V(V2M_SYS_FLASH));
@@ -274,23 +277,30 @@ static AMBA_DEVICE(aaci,  "mb:aaci",  V2M_AACI, NULL);
 static AMBA_DEVICE(mmci,  "mb:mmci",  V2M_MMCI, &v2m_mmci_data);
 static AMBA_DEVICE(kmi0,  "mb:kmi0",  V2M_KMI0, NULL);
 static AMBA_DEVICE(kmi1,  "mb:kmi1",  V2M_KMI1, NULL);
+#endif
 static AMBA_DEVICE(uart0, "mb:uart0", V2M_UART0, NULL);
 static AMBA_DEVICE(uart1, "mb:uart1", V2M_UART1, NULL);
 static AMBA_DEVICE(uart2, "mb:uart2", V2M_UART2, NULL);
 static AMBA_DEVICE(uart3, "mb:uart3", V2M_UART3, NULL);
+#ifndef CONFIG_WRHV
 static AMBA_DEVICE(wdt,   "mb:wdt",   V2M_WDT, NULL);
+#endif
 static AMBA_DEVICE(rtc,   "mb:rtc",   V2M_RTC, NULL);
 
 static struct amba_device *v2m_amba_devs[] __initdata = {
+#ifndef CONFIG_WRHV
 	&aaci_device,
 	&mmci_device,
 	&kmi0_device,
 	&kmi1_device,
+#endif
 	&uart0_device,
 	&uart1_device,
 	&uart2_device,
 	&uart3_device,
+#ifndef CONFIG_WRHV
 	&wdt_device,
+#endif
 	&rtc_device,
 };
 
@@ -360,6 +370,7 @@ static struct clk_lookup v2m_lookups[] = {
 	},
 };
 
+#ifndef CONFIG_WRHV
 static void v2m_power_off(void)
 {
 	if (v2m_cfg_write(SYS_CFG_SHUTDOWN | SYS_CFG_SITE_MB, 0))
@@ -371,6 +382,7 @@ static void v2m_restart(char str, const char *cmd)
 	if (v2m_cfg_write(SYS_CFG_REBOOT | SYS_CFG_SITE_MB, 0))
 		printk(KERN_EMERG "Unable to reboot\n");
 }
+#endif
 
 static int __init v2m_init(void)
 {
@@ -378,17 +390,21 @@ static int __init v2m_init(void)
 
 	clkdev_add_table(v2m_lookups, ARRAY_SIZE(v2m_lookups));
 
+#ifndef CONFIG_WRHV
 	platform_device_register(&v2m_pcie_i2c_device);
 	platform_device_register(&v2m_ddc_i2c_device);
 	platform_device_register(&v2m_flash_device);
-	platform_device_register(&v2m_eth_device);
+#endif
 	platform_device_register(&v2m_usb_device);
+	platform_device_register(&v2m_eth_device);
 
 	for (i = 0; i < ARRAY_SIZE(v2m_amba_devs); i++)
 		amba_device_register(v2m_amba_devs[i], &iomem_resource);
 
+#ifndef CONFIG_WRHV
 	pm_power_off = v2m_power_off;
 	arm_pm_restart = v2m_restart;
+#endif
 
 	return 0;
 }
-- 
1.7.0.4

