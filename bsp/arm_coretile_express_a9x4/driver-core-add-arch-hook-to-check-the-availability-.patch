From 7092998ba5974222b3aaeb9afdc1ecd5e25ee17c Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Mon, 4 Jul 2011 13:17:44 +0800
Subject: [PATCH 2/3] driver core: add arch hook to check the availability of amba and
 platform device

On some architectures, such as ARM, all the amba and platform devices
are hardcoded in the kernel file. But in some cases, we would like to
exclude some of them. So add a arch hook in amba and platform bus for
this purpose.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/amba/bus.c      |   12 ++++++++++++
 drivers/base/platform.c |   12 ++++++++++++
 2 files changed, 24 insertions(+), 0 deletions(-)

diff --git a/drivers/amba/bus.c b/drivers/amba/bus.c
index d31590e..765dd14 100644
--- a/drivers/amba/bus.c
+++ b/drivers/amba/bus.c
@@ -233,6 +233,15 @@ static void amba_device_release(struct device *dev)
 	kfree(d);
 }
 
+/*
+ * Weak alias for checking the availability of a arma device,
+ * can be overridden by architecture when needed.
+ */
+int __weak arch_amba_device_is_available(struct amba_device *dev)
+{
+	return 1;
+}
+
 /**
  *	amba_device_register - register an AMBA device
  *	@dev: AMBA device to register
@@ -248,6 +257,9 @@ int amba_device_register(struct amba_device *dev, struct resource *parent)
 	void __iomem *tmp;
 	int i, ret;
 
+	if (!arch_amba_device_is_available(dev))
+		return -ENODEV;
+
 	device_initialize(&dev->dev);
 
 	/*
diff --git a/drivers/base/platform.c b/drivers/base/platform.c
index f104b83..372f979 100644
--- a/drivers/base/platform.c
+++ b/drivers/base/platform.c
@@ -226,6 +226,15 @@ int platform_device_add_data(struct platform_device *pdev, const void *data,
 }
 EXPORT_SYMBOL_GPL(platform_device_add_data);
 
+/*
+ * Weak alias for checking the availability of a platform device,
+ * can be overridden by architecture when needed.
+ */
+int __weak arch_platform_device_is_available(struct platform_device *dev)
+{
+	return 1;
+}
+
 /**
  * platform_device_add - add a platform device to device hierarchy
  * @pdev: platform device we're adding
@@ -240,6 +249,9 @@ int platform_device_add(struct platform_device *pdev)
 	if (!pdev)
 		return -EINVAL;
 
+	if (!arch_platform_device_is_available(pdev))
+		return -ENODEV;
+
 	if (!pdev->dev.parent)
 		pdev->dev.parent = &platform_bus;
 
-- 
1.7.0.4

