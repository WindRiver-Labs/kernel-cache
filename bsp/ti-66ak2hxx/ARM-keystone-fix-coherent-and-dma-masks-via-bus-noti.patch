From 236231461ec0216f6e67fd4a4ef05fb700458ea2 Mon Sep 17 00:00:00 2001
From: Guoqing Jiang <Guoqing.Jiang@windriver.com>
Date: Mon, 22 Jul 2013 14:57:04 +0800
Subject: [PATCH 40/61] ARM: keystone: fix coherent and dma masks via bus
 notifier

Commit 682e83cecf2bfe8f459b5220a15042fe42377bfe from arago tree
git://arago-project.org/git/projects/linux-keystone.git releases/03.00.00.11/master

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
Signed-off-by: Cyril Chemparathy <cyril@ti.com>
Signed-off-by: Guoqing Jiang <Guoqing.Jiang@windriver.com>
---
 arch/arm/mach-keystone/keystone.c |   38 ++++++++++++++++++++++++------------
 1 files changed, 25 insertions(+), 13 deletions(-)

diff --git a/arch/arm/mach-keystone/keystone.c b/arch/arm/mach-keystone/keystone.c
index 4a1cf61..33ccbee 100644
--- a/arch/arm/mach-keystone/keystone.c
+++ b/arch/arm/mach-keystone/keystone.c
@@ -18,6 +18,7 @@
 #include <linux/io.h>
 #include <linux/of.h>
 #include <linux/init.h>
+#include <linux/slab.h>
 #include <linux/of_irq.h>
 #include <linux/of_platform.h>
 #include <linux/of_address.h>
@@ -39,6 +40,14 @@
 #define RSTMUX8_OMODE_DEVICE_RESET_SHIFT	1
 #define RSTMUX8_OMODE_DEVICE_RESET_MASK		(BIT(1) | BIT(2) | BIT(3))
 #define RSTMUX8_LOCK_MASK			BIT(0)
+
+unsigned long __arch_dma_pfn_offset;
+
+#ifdef CONFIG_ZONE_DMA
+extern phys_addr_t arm_dma_limit;
+extern unsigned long arm_dma_zone_size;
+#endif
+
 #define reg_dump(addr, mask) \
 		pr_debug("reg %p has value %x\n", (void *)addr, \
 				(__raw_readl(addr) & ~mask))
@@ -287,14 +296,24 @@ static bool is_coherent(struct device *dev)
 }
 
 static int keystone_platform_notifier(struct notifier_block *nb,
-				      unsigned long event, void *dev)
+				      unsigned long event, void *_dev)
 {
-	if (event != BUS_NOTIFY_ADD_DEVICE)
-		return NOTIFY_DONE;
+	struct device *dev = _dev;
 
-	is_coherent(dev);
-
-	return NOTIFY_OK;
+#ifdef CONFIG_ZONE_DMA
+	if (event == BUS_NOTIFY_ADD_DEVICE) {
+		dev->dma_mask = kmalloc(sizeof(*dev->dma_mask), GFP_KERNEL);
+		dev->coherent_dma_mask = arm_dma_limit;
+		if (dev->dma_mask)
+			*dev->dma_mask = arm_dma_limit;
+		is_coherent(dev);
+		return NOTIFY_OK;
+	} else if (event == BUS_NOTIFY_DEL_DEVICE) {
+		kfree(dev->dma_mask);
+		return NOTIFY_OK;
+	}
+#endif
+	return NOTIFY_DONE;
 }
 
 static struct notifier_block keystone_platform_nb = {
@@ -367,13 +386,6 @@ static const char *keystone2_match[] __initconst = {
 	NULL,
 };
 
-unsigned long __arch_dma_pfn_offset;
-
-#ifdef CONFIG_ZONE_DMA
-extern phys_addr_t arm_dma_limit;
-extern unsigned long arm_dma_zone_size;
-#endif
-
 static void __init keystone_init_meminfo(void)
 {
 	bool lpae = IS_ENABLED(CONFIG_ARM_LPAE);
-- 
1.7.5.4

