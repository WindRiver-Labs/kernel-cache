From fdb9328ecf342f7e87c29cbcc16977e7667640c3 Mon Sep 17 00:00:00 2001
From: Guoqing Jiang <Guoqing.Jiang@windriver.com>
Date: Mon, 22 Jul 2013 15:01:31 +0800
Subject: [PATCH 41/61] ARM: keystone: enable soc to boot up when mem_lpae is
 not set

Commit 5965ef3f6d03baf1c76a07ede2c232272c3977ac from arago tree
git://arago-project.org/git/projects/linux-keystone.git releases/03.00.00.11/master

When we set mem_lpae is equal to zero in u-boot and when the dma-coherent
binding is defined in the device tree, the soc does not boot up.
This patch enables the kernel to boot up successfully even when mem_lpae is
set to 0

Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>
Signed-off-by: Guoqing Jiang <Guoqing.Jiang@windriver.com>
---
 arch/arm/mach-keystone/keystone.c |   12 +++++-------
 1 files changed, 5 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-keystone/keystone.c b/arch/arm/mach-keystone/keystone.c
index 33ccbee..08d6849 100644
--- a/arch/arm/mach-keystone/keystone.c
+++ b/arch/arm/mach-keystone/keystone.c
@@ -300,7 +300,6 @@ static int keystone_platform_notifier(struct notifier_block *nb,
 {
 	struct device *dev = _dev;
 
-#ifdef CONFIG_ZONE_DMA
 	if (event == BUS_NOTIFY_ADD_DEVICE) {
 		dev->dma_mask = kmalloc(sizeof(*dev->dma_mask), GFP_KERNEL);
 		dev->coherent_dma_mask = arm_dma_limit;
@@ -312,13 +311,10 @@ static int keystone_platform_notifier(struct notifier_block *nb,
 		kfree(dev->dma_mask);
 		return NOTIFY_OK;
 	}
-#endif
 	return NOTIFY_DONE;
 }
 
-static struct notifier_block keystone_platform_nb = {
-	.notifier_call = keystone_platform_notifier,
-};
+static struct notifier_block keystone_platform_nb;
 
 static void __init keystone_init(void)
 {
@@ -326,8 +322,10 @@ static void __init keystone_init(void)
 	const struct of_device_id *of_id;
 	void (*func)(struct device_node *);
 
+	if (keystone_platform_nb.notifier_call)
+		bus_register_notifier(&platform_bus_type, &keystone_platform_nb);
+
 	keystone_pm_runtime_init();
-	bus_register_notifier(&platform_bus_type, &keystone_platform_nb);
 	of_platform_populate(NULL, keystone_dt_match_table, NULL, NULL);
 
 	/* Initialize PCIE serdes */
@@ -424,8 +422,8 @@ static void __init keystone_init_meminfo(void)
 					 KEYSTONE_LOW_PHYS_START);
 #ifdef CONFIG_ZONE_DMA
 	arm_dma_limit = __pv_phys_offset + arm_dma_zone_size - 1;
+	keystone_platform_nb.notifier_call = keystone_platform_notifier;
 #endif
-
 }
 
 void keystone_restart(char mode, const char *cmd)
-- 
1.7.5.4

