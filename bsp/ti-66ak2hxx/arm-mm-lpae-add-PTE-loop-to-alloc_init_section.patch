From 0617cd8ee60562582931427363f4c1bcc6427d4d Mon Sep 17 00:00:00 2001
From: Guoqing Jiang <Guoqing.Jiang@windriver.com>
Date: Tue, 16 Jul 2013 13:38:44 +0800
Subject: [PATCH 12/61] arm: mm: lpae: add PTE loop to alloc_init_section

Commit eca729fa40f05845d6a67bbc2890e921eded0b42 from arago tree
git://arago-project.org/git/projects/linux-keystone.git releases/03.00.00.11/master

Without enabled LPAE the alloc_init_pud never calls the alloc_init_section
to map more then one segment. In that case the alloc_init_section doesn't
need the loop when makes pte mapping. The loop is required when LPAE is
enabled and alloc_init_pud may ask to map multiple sections.

This patch adds the loop.

Signed-off-by: Vitaly Andrianov <vitalya@ti.com>
Signed-off-by: Guoqing Jiang <Guoqing.Jiang@windriver.com>
---
 arch/arm/mm/mmu.c |    9 +++++++++
 1 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mm/mmu.c b/arch/arm/mm/mmu.c
index 95f8b47..77d2c7d 100644
--- a/arch/arm/mm/mmu.c
+++ b/arch/arm/mm/mmu.c
@@ -619,11 +619,20 @@ static void __init alloc_init_section(pud_t *pud, unsigned long addr,
 
 		flush_pmd_entry(p);
 	} else {
+#ifndef CONFIG_ARM_LPAE
 		/*
 		 * No need to loop; pte's aren't interested in the
 		 * individual L1 entries.
 		 */
 		alloc_init_pte(pmd, addr, end, __phys_to_pfn(phys), type);
+#else
+		unsigned long next;
+		do {
+			next = pmd_addr_end(addr, end);
+			alloc_init_pte(pmd, addr, next, __phys_to_pfn(phys), type);
+			phys += next - addr;
+		} while (pmd++, addr=next, addr != end);
+#endif
 	}
 }
 
-- 
1.7.5.4

