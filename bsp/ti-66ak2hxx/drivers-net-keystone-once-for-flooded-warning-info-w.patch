From a36e56c24f030201539a35520080b060dda6c662 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 13 Nov 2013 17:06:49 +0800
Subject: [PATCH 2/2] drivers: net: keystone: once for flooded warning info
 when add more

From driver limitation, there are about 64 addresses available in
keystone pa_lut buffer, which added by __dev_mc_add from IP level
explicitly, and deleted by __dev_mc_dec.(when we do ifconfig eth0
del).

And it seems many embedded-ethernet drivers(mcast table supported)
just ignore when there is no address entry available for a new addr
(return -ENOMEM from allocate function); And on the other hand, I
guess several ip addresses can be acceptable for one network card,
but it might go nuts if there are many ip addresses for the same one.

In this patch, we won't ignore ENOMEM, and just give once warnings
when limitation is broke to avoid WARN_ON every time.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/ti/keystone_net_core.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/ti/keystone_net_core.c b/drivers/net/ethernet/ti/keystone_net_core.c
index 81abea1..d27b49d 100644
--- a/drivers/net/ethernet/ti/keystone_net_core.c
+++ b/drivers/net/ethernet/ti/keystone_net_core.c
@@ -1234,7 +1234,8 @@ static void netcp_addr_sweep_add(struct netcp_priv *netcp)
 			if (!module->add_addr)
 				continue;
 			error = module->add_addr(priv->module_priv, naddr);
-			WARN_ON(error);
+			WARN_ONCE(error, "%s %d, too much for this driver!\n",
+				  __func__,__LINE__);
 		}
 	}
 }
-- 
1.8.4.93.g57e4c17

