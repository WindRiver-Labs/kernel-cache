From 8c681c43cfbc5e8c6f4f553f2ef6c2594889fef0 Mon Sep 17 00:00:00 2001
From: Guoqing Jiang <Guoqing.Jiang@windriver.com>
Date: Thu, 18 Jul 2013 14:04:43 +0800
Subject: [PATCH 15/20] SPI: reuse spi-davinci driver for keystone2 platform

1. Modify the Kconfig accordingly since SPI_DAVINCI is also used by keystone.
2. Add of support for davinci spi.
3. switch to use common clock framework.

Refer to the following commits from arago tree
git://arago-project.org/git/projects/linux-keystone.git releases/03.00.00.11/master

ed48afc spi: davinci: remove DaVinci architecture dependency
456005f spi: davinci: updates to SPI OF support
f7f0ce9 spi: davinci: add OF support for the spi controller
b3d7ecd spi:clk: preparation for switch to common clock framework.

Signed-off-by: Guoqing Jiang <Guoqing.Jiang@windriver.com>
---
 drivers/spi/Kconfig                       |  3 +--
 drivers/spi/spi-davinci.c                 | 34 ++++++++++---------------------
 include/linux/platform_data/spi-davinci.h |  2 +-
 3 files changed, 13 insertions(+), 26 deletions(-)

diff --git a/drivers/spi/Kconfig b/drivers/spi/Kconfig
index 92a9345..20fd67f 100644
--- a/drivers/spi/Kconfig
+++ b/drivers/spi/Kconfig
@@ -151,9 +151,8 @@ config SPI_COLDFIRE_QSPI
 
 config SPI_DAVINCI
 	tristate "Texas Instruments DaVinci/DA8x/OMAP-L/AM1x SoC SPI controller"
-	depends on ARCH_DAVINCI
+	depends on ARCH_DAVINCI || ARCH_KEYSTONE
 	select SPI_BITBANG
-	select TI_EDMA
 	help
 	  SPI master controller for DaVinci/DA8x/OMAP-L/AM1x SPI modules.
 
diff --git a/drivers/spi/spi-davinci.c b/drivers/spi/spi-davinci.c
index df0aacc..75357ce 100644
--- a/drivers/spi/spi-davinci.c
+++ b/drivers/spi/spi-davinci.c
@@ -610,7 +610,7 @@ static int davinci_spi_bufs(struct spi_device *spi, struct spi_transfer *t)
 		else
 			buf = (void *)t->tx_buf;
 		t->tx_dma = dma_map_single(&spi->dev, buf,
-				t->len, DMA_TO_DEVICE);
+				t->len, DMA_FROM_DEVICE);
 		if (!t->tx_dma) {
 			ret = -EFAULT;
 			goto err_tx_map;
@@ -702,19 +702,6 @@ err_alloc_dummy_buf:
 }
 
 /**
- * dummy_thread_fn - dummy thread function
- * @irq: IRQ number for this SPI Master
- * @context_data: structure for SPI Master controller davinci_spi
- *
- * This is to satisfy the request_threaded_irq() API so that the irq
- * handler is called in interrupt context.
- */
-static irqreturn_t dummy_thread_fn(s32 irq, void *data)
-{
-	return IRQ_HANDLED;
-}
-
-/**
  * davinci_spi_irq - Interrupt handler for SPI Master Controller
  * @irq: IRQ number for this SPI Master
  * @context_data: structure for SPI Master controller davinci_spi
@@ -776,15 +763,15 @@ rx_dma_failed:
 #if defined(CONFIG_OF)
 static const struct of_device_id davinci_spi_of_match[] = {
 	{
-		.compatible = "ti,dm6441-spi",
+		.compatible = "ti,davinci-spi-v1",
 	},
 	{
-		.compatible = "ti,da830-spi",
+		.compatible = "ti,davinci-spi-v2",
 		.data = (void *)SPI_VERSION_2,
 	},
 	{ },
 };
-MODULE_DEVICE_TABLE(of, davinci_spi_of_match);
+MODULE_DEVICE_TABLE(of, davini_spi_of_match);
 
 /**
  * spi_davinci_get_pdata - Get platform data from DTS binding
@@ -821,7 +808,7 @@ static int spi_davinci_get_pdata(struct platform_device *pdev,
 	 * supported yet in DT bindings.
 	 */
 	num_cs = 1;
-	of_property_read_u32(node, "num-cs", &num_cs);
+	of_property_read_u32(node, "ti,davinci-spi-num-cs", &num_cs);
 	pdata->num_chipselect = num_cs;
 	of_property_read_u32(node, "ti,davinci-spi-intr-line", &intr_line);
 	pdata->intr_line = intr_line;
@@ -850,12 +837,12 @@ static struct davinci_spi_platform_data
  */
 static int davinci_spi_probe(struct platform_device *pdev)
 {
+	resource_size_t dma_rx_chan = SPI_NO_RESOURCE;
+	resource_size_t	dma_tx_chan = SPI_NO_RESOURCE;
+	struct davinci_spi_platform_data *pdata;
 	struct spi_master *master;
 	struct davinci_spi *dspi;
-	struct davinci_spi_platform_data *pdata;
 	struct resource *r, *mem;
-	resource_size_t dma_rx_chan = SPI_NO_RESOURCE;
-	resource_size_t	dma_tx_chan = SPI_NO_RESOURCE;
 	int i = 0, ret = 0;
 	u32 spipc0;
 
@@ -906,14 +893,15 @@ static int davinci_spi_probe(struct platform_device *pdev)
 		goto release_region;
 	}
 
+	/* first get irq through resource table, else try of irq method */
 	dspi->irq = platform_get_irq(pdev, 0);
 	if (dspi->irq <= 0) {
 		ret = -EINVAL;
 		goto unmap_io;
 	}
 
-	ret = request_threaded_irq(dspi->irq, davinci_spi_irq, dummy_thread_fn,
-				 0, dev_name(&pdev->dev), dspi);
+	ret = request_irq(dspi->irq, davinci_spi_irq, 0, dev_name(&pdev->dev),
+									dspi);
 	if (ret)
 		goto unmap_io;
 
diff --git a/include/linux/platform_data/spi-davinci.h b/include/linux/platform_data/spi-davinci.h
index 7af305b..8dc2fa47 100644
--- a/include/linux/platform_data/spi-davinci.h
+++ b/include/linux/platform_data/spi-davinci.h
@@ -19,7 +19,7 @@
 #ifndef __ARCH_ARM_DAVINCI_SPI_H
 #define __ARCH_ARM_DAVINCI_SPI_H
 
-#include <mach/edma.h>
+#include <linux/platform_data/edma.h>
 
 #define SPI_INTERN_CS	0xFF
 
-- 
1.8.4.93.g57e4c17

