From 72ca7d992d2094b9ec6838c57e1c212c1ec2ec87 Mon Sep 17 00:00:00 2001
From: Tomas Winkler <tomas.winkler@intel.com>
Date: Sun, 30 Oct 2016 23:36:00 +0200
Subject: [PATCH 4634/4706] mei: dal: remove blank unnecessary blank lines

commit 69fda01e0eb6c752999bdaee440f39842f370d79 from
git://git.yoctoproject.org/linux-yocto-4.1

Change-Id: I8f8c062c9514098d179916e5d135f4c391c78808
Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
---
 drivers/misc/mei/dal/bh_acp_exp.h    |    1 -
 drivers/misc/mei/dal/bh_acp_format.h |    1 -
 drivers/misc/mei/dal/bh_types.h      |    3 ---
 drivers/misc/mei/dal/bhp_exp.h       |    1 -
 drivers/misc/mei/dal/bhp_heci.h      |    1 -
 drivers/misc/mei/dal/bhp_impl.c      |    9 ++-------
 drivers/misc/mei/dal/bhp_impl_ta.c   |    1 -
 drivers/misc/mei/dal/dal_dev.h       |    1 -
 8 files changed, 2 insertions(+), 16 deletions(-)

diff --git a/drivers/misc/mei/dal/bh_acp_exp.h b/drivers/misc/mei/dal/bh_acp_exp.h
index 0eaa940..9fce3ba 100644
--- a/drivers/misc/mei/dal/bh_acp_exp.h
+++ b/drivers/misc/mei/dal/bh_acp_exp.h
@@ -75,7 +75,6 @@ struct ac_ins_jta_prop_ext {
 	char *jeff_pack;
 } __packed;
 
-
 int acp_pload_ins_jta(const void *raw_data, unsigned int size,
 		      struct ac_ins_jta_pack_ext *pack);
 
diff --git a/drivers/misc/mei/dal/bh_acp_format.h b/drivers/misc/mei/dal/bh_acp_format.h
index 316f2c7..7cacf24 100644
--- a/drivers/misc/mei/dal/bh_acp_format.h
+++ b/drivers/misc/mei/dal/bh_acp_format.h
@@ -69,7 +69,6 @@
 #define BH_MAX_ACP_PROPS_LENGTH 2048
 
 enum ac_cmd_id {
-
 	AC_CMD_INVALID,
 	AC_INSTALL_SD,
 	AC_UNINSTALL_SD,
diff --git a/drivers/misc/mei/dal/bh_types.h b/drivers/misc/mei/dal/bh_types.h
index e90d519..b428c45 100644
--- a/drivers/misc/mei/dal/bh_types.h
+++ b/drivers/misc/mei/dal/bh_types.h
@@ -57,8 +57,6 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  *****************************************************************************/
-
-
 #ifndef __BH_SHARED_TYPES_H
 #define __BH_SHARED_TYPES_H
 
@@ -100,4 +98,3 @@ struct _bh_ta_install_condition_list_t {
 };
 
 #endif /* __BH_SHARED_TYPES_H */
-
diff --git a/drivers/misc/mei/dal/bhp_exp.h b/drivers/misc/mei/dal/bhp_exp.h
index 0e90b41..df5878d 100644
--- a/drivers/misc/mei/dal/bhp_exp.h
+++ b/drivers/misc/mei/dal/bhp_exp.h
@@ -86,7 +86,6 @@ struct bhp_transport {
  */
 int bhp_init_internal(const struct bhp_transport *transport);
 
-
 /**
  * Invoke this function before exiting.
  * If BHP_Init is not called, this function will do nothing.
diff --git a/drivers/misc/mei/dal/bhp_heci.h b/drivers/misc/mei/dal/bhp_heci.h
index 68078da..df74dd8 100644
--- a/drivers/misc/mei/dal/bhp_heci.h
+++ b/drivers/misc/mei/dal/bhp_heci.h
@@ -78,7 +78,6 @@
 #define BHP_MSG_RESPONSE_MAGIC "\xff\xa5\xaa\x55"
 
 enum bhp_command_id {
-
 	BHP_CMD_INIT = 0,
 	BHP_CMD_DEINIT,
 	BHP_CMD_VERIFY_JAVATA,
diff --git a/drivers/misc/mei/dal/bhp_impl.c b/drivers/misc/mei/dal/bhp_impl.c
index 71379ee..c49ce7e 100644
--- a/drivers/misc/mei/dal/bhp_impl.c
+++ b/drivers/misc/mei/dal/bhp_impl.c
@@ -95,7 +95,6 @@ static u64 increment_sequence_number(void)
 	return ret;
 }
 
-
 struct RR_MAP_INFO {
 	struct list_head link;
 	u64 seq;
@@ -319,7 +318,6 @@ static void session_kill(int conn_idx, struct bh_response_record *session,
 	mutex_enter(connections[conn_idx].bhm_rrmap);
 	session->killed = true;
 	if (session->count == 0) {
-
 		rrmap_remove(conn_idx, seq, true);
 		destroy_session(session);
 		if (conn_idx >= CONN_IDX_SVM)
@@ -331,11 +329,9 @@ static void session_kill(int conn_idx, struct bh_response_record *session,
 	 * only for connected SVM
 	 */
 	if (close_vm_conn) {
-
-		if (!is_caller_svm_recv_thread)
+		if (!is_caller_svm_recv_thread) {
 			bh_do_close_vm(conn_idx);
-
-		else {
+		} else {
 			mutex_enter(connections[conn_idx].lock);
 			if (connections[conn_idx].conn_count != 1)
 				connections[conn_idx].conn_count--;
@@ -393,7 +389,6 @@ static int bh_transport_send(unsigned int handle, const void *buffer,
 		return BPE_COMMS_ERROR;
 
 	while (size - count > 0) {
-
 		written = min_t(u32, size - count, DAL_MAX_BUFFER_SIZE);
 		status = bhp_transport.send(handle,
 				(unsigned char *)buffer + count, written, seq);
diff --git a/drivers/misc/mei/dal/bhp_impl_ta.c b/drivers/misc/mei/dal/bhp_impl_ta.c
index 279596e..b6c48e3 100644
--- a/drivers/misc/mei/dal/bhp_impl_ta.c
+++ b/drivers/misc/mei/dal/bhp_impl_ta.c
@@ -561,7 +561,6 @@ int bhp_send_and_recv(const u64 handle, int command_id,
 
 				} else
 					ret = BHE_APPLET_SMALL_BUFFER;
-
 			}
 
 			*output_length = len;
diff --git a/drivers/misc/mei/dal/dal_dev.h b/drivers/misc/mei/dal/dal_dev.h
index d919727..02383d6 100644
--- a/drivers/misc/mei/dal/dal_dev.h
+++ b/drivers/misc/mei/dal/dal_dev.h
@@ -219,7 +219,6 @@ struct dal_client {
 ssize_t dal_write(struct dal_client *dc, size_t count, u64 seq);
 ssize_t dal_read(struct  dal_client *dc);
 
-
 struct device *dal_find_dev(enum dal_dev_type device_id);
 
 void dal_dc_print(struct device *dev, struct dal_client *dc);
-- 
1.7.5.4

