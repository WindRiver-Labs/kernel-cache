From 5ba7549d36b8b3cdf5a02d60b75c4c3d51e2e9ec Mon Sep 17 00:00:00 2001
From: Chris Wilson <chris@chris-wilson.co.uk>
Date: Thu, 21 May 2015 21:01:45 +0100
Subject: [PATCH 0422/4706] drm/i915: Use the correct destructor for freeing
 requests on error

commit 9a0c1e2770b839b806bae6bc8f93001f86bc0cf3 upstream

After allocating from the slab cache, we then need to free the request
back into the slab cache upon error (and not call kfree as that leads
to eventual memory corruption).

Fixes regression from
commit efab6d8dd158fdccbe6a030f89fbf9ca0a9564e4
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Tue Apr 7 16:20:57 2015 +0100

    drm/i915: Use a separate slab for requests

Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
---
 drivers/gpu/drm/i915/i915_gem.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_gem.c b/drivers/gpu/drm/i915/i915_gem.c
index d6f2fb2..885c19b 100644
--- a/drivers/gpu/drm/i915/i915_gem.c
+++ b/drivers/gpu/drm/i915/i915_gem.c
@@ -2653,10 +2653,8 @@ int i915_gem_request_alloc(struct intel_engine_cs *ring,
 	req->i915 = dev_priv;
 
 	ret = i915_gem_get_seqno(ring->dev, &req->seqno);
-	if (ret) {
-		kfree(req);
-		return ret;
-	}
+	if (ret)
+		goto err;
 
 	req->ring = ring;
 
@@ -2664,13 +2662,15 @@ int i915_gem_request_alloc(struct intel_engine_cs *ring,
 		ret = intel_logical_ring_alloc_request_extras(req, ctx);
 	else
 		ret = intel_ring_alloc_request_extras(req);
-	if (ret) {
-		kfree(req);
-		return ret;
-	}
+	if (ret)
+		goto err;
 
 	ring->outstanding_lazy_request = req;
 	return 0;
+
+err:
+	kmem_cache_free(dev_priv->requests, req);
+	return ret;
 }
 
 struct drm_i915_gem_request *
-- 
1.7.5.4

