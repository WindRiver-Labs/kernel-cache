From 38554189ae205382cfae60b320a01e4e5d95e80d Mon Sep 17 00:00:00 2001
From: Damien Lespiau <damien.lespiau@intel.com>
Date: Mon, 18 Jan 2016 20:45:39 +0530
Subject: [PATCH 4439/4706] drm/i915/gen9: Add support for color-based
 blending modes (v2)

commit 6ab0cd936d300c795a090445034c67fefab1a754 from
git://git.yoctoproject.org/linux-yocto-4.1

This patch adds support for blending modes involving
color.

v2 (by Matt):
 - Squash in patch to drop alpha for non-ARGB modes
 - Squash in support for primary plane
 - Transition to drm_rgba infrastructure
 - Rework for changes to general blending mode changes

Signed-off-by: Damien Lespiau <damien.lespiau@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/i915_reg.h           |    4 +++
 drivers/gpu/drm/i915/intel_atomic_plane.c |    3 ++
 drivers/gpu/drm/i915/intel_display.c      |   36 +++++++++++++++++++++++++++++
 drivers/gpu/drm/i915/intel_drv.h          |    1 +
 drivers/gpu/drm/i915/intel_sprite.c       |   12 +++++----
 5 files changed, 51 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index b0d5b29..75a8c6c 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -5651,6 +5651,10 @@ enum {
 #define PLANE_KEYMAX(pipe, plane)	\
 	_MMIO_PLANE(plane, _PLANE_KEYMAX_1(pipe), _PLANE_KEYMAX_2(pipe))
 
+#define PLANE_KEYMAX_ALPHA_MASK			0x00ffffff
+#define PLANE_KEY_MASK_ALPHA_EN			31
+#define PLANE_KEY_MAX_ALPHA_SHIFT		24
+
 #define _PLANE_BUF_CFG_1_B			0x7127c
 #define _PLANE_BUF_CFG_2_B			0x7137c
 #define _PLANE_BUF_CFG_1(pipe)	\
diff --git a/drivers/gpu/drm/i915/intel_atomic_plane.c b/drivers/gpu/drm/i915/intel_atomic_plane.c
index 6aad834..2ae7c90 100644
--- a/drivers/gpu/drm/i915/intel_atomic_plane.c
+++ b/drivers/gpu/drm/i915/intel_atomic_plane.c
@@ -57,6 +57,9 @@ intel_create_plane_state(struct drm_plane *plane)
 	state->base.plane = plane;
 	state->base.rotation = DRM_ROTATE_0;
 	state->base.blend_mode.func = DRM_BLEND_FUNC(AUTO, AUTO);
+	state->base.blend_mode.color = drm_rgba(16,
+						0xffff, 0xffff,
+						0xffff, 0xffff);
 	state->ckey.flags = I915_SET_COLORKEY_NONE;
 
 	return state;
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index b728f87..db035a5 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -3398,6 +3398,8 @@ static void skylake_update_primary_plane(struct drm_plane *plane,
 	struct intel_crtc *intel_crtc = to_intel_crtc(crtc_state->base.crtc);
 	struct drm_framebuffer *fb = plane_state->base.fb;
 	const struct skl_wm_values *wm = &dev_priv->wm.skl_results;
+	const struct drm_intel_sprite_colorkey *key =
+		&to_intel_plane_state(plane->state)->ckey;
 	int pipe = intel_crtc->pipe;
 	u32 plane_ctl;
 	unsigned int rotation = plane_state->base.rotation;
@@ -3477,6 +3479,15 @@ static void skylake_update_primary_plane(struct drm_plane *plane,
 				   temp & ~HSW_FBCQ_DIS);
 	}
 
+	I915_WRITE(PLANE_KEYMAX(pipe, 0),
+		   (DRM_RGBA_ALPHABITS(plane_state->base.blend_mode.color, 8)
+				<< PLANE_KEY_MAX_ALPHA_SHIFT) |
+		   (key->max_value & PLANE_KEYMAX_ALPHA_MASK));
+	I915_WRITE(PLANE_KEYMSK(pipe, 0),
+			(plane_state->use_plane_alpha
+				<< PLANE_KEY_MASK_ALPHA_EN) |
+			(key->channel_mask & GENMASK(0, 26)));
+
 	if (scaler_id >= 0) {
 		uint32_t ps_ctrl = 0;
 
@@ -12582,15 +12593,35 @@ static int intel_plane_state_check_blend(struct drm_plane_state *plane_state)
 	case DRM_BLEND_FUNC(ONE, ONE_MINUS_SRC_ALPHA):
 		state->alpha = has_per_pixel_blending ?
 			I915_ALPHA_PREMUL : I915_ALPHA_NONE;
+		state->use_plane_alpha = false;
 		break;
 	/* fbs without an alpha channel, or dropping the alpha channel */
 	case DRM_BLEND_FUNC(ONE, ZERO):
 		state->alpha = I915_ALPHA_NONE;
+		state->use_plane_alpha = false;
 		break;
 	/* non pre-multiplied alpha */
 	case DRM_BLEND_FUNC(SRC_ALPHA, ONE_MINUS_SRC_ALPHA):
 		state->alpha = has_per_pixel_blending ?
 			I915_ALPHA_NON_PREMUL : I915_ALPHA_NONE;
+		state->use_plane_alpha = false;
+		break;
+	/* plane alpha */
+	case DRM_BLEND_FUNC(CONSTANT_ALPHA, ONE_MINUS_CONSTANT_ALPHA):
+		state->alpha = I915_ALPHA_NONE;
+		state->use_plane_alpha = true;
+		break;
+	/* plane alpha, pre-multiplied fb */
+	case DRM_BLEND_FUNC(CONSTANT_ALPHA,
+			    ONE_MINUS_CONSTANT_ALPHA_TIMES_SRC_ALPHA):
+		state->alpha = I915_ALPHA_PREMUL;
+		state->use_plane_alpha = true;
+		break;
+	/* plane alpha, non pre-multiplied fb */
+	case DRM_BLEND_FUNC(CONSTANT_ALPHA_TIMES_SRC_ALPHA,
+			    ONE_MINUS_CONSTANT_ALPHA_TIMES_SRC_ALPHA):
+		state->alpha = I915_ALPHA_NON_PREMUL;
+		state->use_plane_alpha = true;
 		break;
 	default:
 		return -EINVAL;
@@ -15349,6 +15380,11 @@ void intel_plane_add_blend_properties(struct intel_plane *plane)
 	if (prop)
 		drm_object_attach_property(&plane->base.base, prop,
 					   DRM_BLEND_FUNC(AUTO, AUTO));
+
+	prop = dev->mode_config.prop_blend_color;
+	if (prop)
+		drm_object_attach_property(&plane->base.base, prop,
+					   plane->base.state->blend_mode.color.v);
 }
 
 static int
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 62fe456..cadaf3a 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -410,6 +410,7 @@ struct intel_plane_state {
 	 * blending related hw states
 	 */
 	enum i915_alpha alpha;
+	bool use_plane_alpha;
 
 	struct drm_intel_sprite_colorkey ckey;
 
diff --git a/drivers/gpu/drm/i915/intel_sprite.c b/drivers/gpu/drm/i915/intel_sprite.c
index ccfcde3..ada8f7a 100644
--- a/drivers/gpu/drm/i915/intel_sprite.c
+++ b/drivers/gpu/drm/i915/intel_sprite.c
@@ -252,12 +252,14 @@ skl_update_plane(struct drm_plane *drm_plane,
 	if (wm->dirty_pipes & drm_crtc_mask(crtc))
 		skl_write_plane_wm(intel_crtc, wm, plane);
 
-	if (key->flags) {
+	I915_WRITE(PLANE_KEYMAX(pipe, plane),
+		   (DRM_RGBA_ALPHABITS(plane_state->base.blend_mode.color, 8)
+			<< 24) | (key->max_value & 0x00ffffff));
+	I915_WRITE(PLANE_KEYMSK(pipe, plane),
+		   (plane_state->use_plane_alpha << 31) |
+		   (key->channel_mask & GENMASK(0, 26)));
+	if (key->flags)
 		I915_WRITE(PLANE_KEYVAL(pipe, plane), key->min_value);
-		I915_WRITE(PLANE_KEYMAX(pipe, plane), key->max_value);
-		I915_WRITE(PLANE_KEYMSK(pipe, plane), key->channel_mask);
-	}
-
 	if (key->flags & I915_SET_COLORKEY_DESTINATION)
 		plane_ctl |= PLANE_CTL_KEY_ENABLE_DESTINATION;
 	else if (key->flags & I915_SET_COLORKEY_SOURCE)
-- 
1.7.5.4

