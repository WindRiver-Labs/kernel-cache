From 1a310e4cb97c4e3486cb59036df8b8702fb00e39 Mon Sep 17 00:00:00 2001
From: Sagar Arun Kamble <sagar.a.kamble@intel.com>
Date: Fri, 13 Jan 2017 09:45:43 -0800
Subject: [PATCH 4471/4706] drm/i915: Forklift fixes for i915_gem_stolen.c

commit ab11fa827a446e6d267f7f59c64813e990e1a7b1 from
git://git.yoctoproject.org/linux-yocto-4.1

Signed-off-by: Sagar Arun Kamble <sagar.a.kamble@intel.com>
Signed-off-by: Jeff McGee <jeff.mcgee@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/i915_gem_stolen.c |   26 ++++++++++++++------------
 1 files changed, 14 insertions(+), 12 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_gem_stolen.c b/drivers/gpu/drm/i915/i915_gem_stolen.c
index 77a079a..bf84859 100644
--- a/drivers/gpu/drm/i915/i915_gem_stolen.c
+++ b/drivers/gpu/drm/i915/i915_gem_stolen.c
@@ -679,7 +679,7 @@ found:
 
 		if (drm_mm_scan_remove_block(&obj->stolen->base)) {
 			list_add(&obj->tmp_link, &evict);
-			i915_gem_object_put(obj);
+			i915_gem_object_get(obj);
 		}
 	}
 
@@ -858,17 +858,19 @@ i915_gem_object_create_stolen_for_preallocated(struct drm_device *dev,
 	vma->node.start = gtt_offset;
 	vma->node.size = size;
 
-	ret = drm_mm_reserve_node(&ggtt->base.mm, &vma->node);
-	if (ret) {
-		DRM_DEBUG_KMS("failed to allocate stolen GTT space\n");
-		goto err;
-	}
+	if (drm_mm_initialized(&ggtt->base.mm)) {
+		ret = drm_mm_reserve_node(&ggtt->base.mm, &vma->node);
+		if (ret) {
+			DRM_DEBUG_KMS("failed to allocate stolen GTT space\n");
+			goto err;
+		}
 
-	vma->pages = obj->pages;
-	vma->flags |= I915_VMA_GLOBAL_BIND;
-	__i915_vma_set_map_and_fenceable(vma);
-	list_move_tail(&vma->vm_link, &ggtt->base.inactive_list);
-	obj->bind_count++;
+		vma->pages = obj->pages;
+		vma->flags |= I915_VMA_GLOBAL_BIND;
+		__i915_vma_set_map_and_fenceable(vma);
+		list_move_tail(&vma->vm_link, &ggtt->base.inactive_list);
+		obj->bind_count++;
+	}
 
 	list_add_tail(&obj->global_list, &dev_priv->mm.bound_list);
 	i915_gem_object_pin_pages(obj);
@@ -911,7 +913,7 @@ int i915_gem_stolen_freeze(struct drm_i915_private *i915)
 			 * This is similar to the strategy required whilst
 			 * shrinking or evicting objects (for the same reason).
 			 */
-			i915_gem_object_put(obj);
+			i915_gem_object_get(obj);
 			list_move(&obj->global_list, &migrate);
 		}
 
-- 
1.7.5.4

