From 012ed00026388d3414280f583ebc900dfc50d782 Mon Sep 17 00:00:00 2001
From: Pramod Kumar Yadav <pramodx.k.yadav@intel.com>
Date: Tue, 31 May 2016 17:51:50 +0530
Subject: [PATCH 1978/2508] ASoC: Intel: Skylake: Enable power management
 during logging

commit 91f44f99ade7838fa0fccb354fae8cf297e35540 from
https://github.com/01org/linux-apollolake-i

Turn the DSP On at the start of logging and turn it off at
the end of logging. This is to make sure that logging can be
started even when no use case is running.

Change-Id: Ief2a0ee92d47a9bed8269c81c1942989b34b2579
Signed-off-by: Pramod Kumar Yadav <pramodx.k.yadav@intel.com>
Signed-off-by: Jayachandran B <jayachandran.b@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/9483
Reviewed-by: Panwar, Ashish <ashish.panwar@intel.com>
Reviewed-by: R, Dharageswari <dharageswari.r@intel.com>
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Reviewed-by: Shah, Hardik T <hardik.t.shah@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/skl-pcm.c |   34 ++++++++++++++++++++++++++++++++++
 1 files changed, 34 insertions(+), 0 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index 127e378..f6c4a05 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -622,6 +622,36 @@ static struct skl_sst *skl_get_sst_compr(struct snd_compr_stream *stream)
 	return sst;
 }
 
+static int skl_trace_compr_open(struct snd_compr_stream *substream,
+		struct snd_soc_dai *dai)
+{
+	struct skl_sst *skl_sst = skl_get_sst_compr(substream);
+	struct sst_dsp *sst = skl_sst->dsp;
+	int core = skl_get_compr_core(substream);
+	int ret;
+
+	if (!skl_is_logging_core(core))
+		return -EINVAL;
+
+	ret = pm_runtime_get_sync(skl_sst->dev);
+	if (ret < 0) {
+		dev_err(skl_sst->dev,"trace open:pm_runtime_get failed\n");
+		return ret;
+	}
+
+
+	if (core != SKL_DSP_CORE0_ID) {
+		ret = skl_dsp_get_core(sst, core);
+		if (ret) {
+			dev_err(skl_sst->dev,
+					"trace open:get core%d failed\n", core);
+			pm_runtime_put_sync(skl_sst->dev);
+		}
+	}
+
+
+	return ret;
+}
 static int skl_trace_compr_set_params(struct snd_compr_stream *stream,
 					struct snd_compr_params *params,
 						struct snd_soc_dai *cpu_dai)
@@ -707,6 +737,9 @@ static int skl_trace_compr_free(struct snd_compr_stream *stream,
 		skl_dsp_put_log_buff(sst, core);
 		skl_dsp_done_log_buffer(sst, core);
 	}
+	if (core != SKL_DSP_CORE0_ID)
+		skl_dsp_put_core(sst, core);
+	pm_runtime_put_sync(ipc->dev);
 	return 0;
 }
 
@@ -724,6 +757,7 @@ static struct snd_soc_cdai_ops skl_probe_compr_ops = {
 };
 
 static struct snd_soc_cdai_ops skl_trace_compr_ops = {
+	.startup = skl_trace_compr_open,
 	.shutdown = skl_trace_compr_free,
 	.pointer = skl_trace_compr_tstamp,
 	.set_params = skl_trace_compr_set_params,
-- 
1.7.5.4

