From 1748522f89c0e20818cd9a7382278805f6b1e464 Mon Sep 17 00:00:00 2001
From: Peter Antoine <peter.antoine@intel.com>
Date: Fri, 19 Aug 2016 13:12:47 -0700
Subject: [PATCH 45/68] drm/i915/get_params: Add GuC status to getparams

commit 157d64f4db6c65c20c12631534b16cb5d88ea80b from
git://git.yoctoproject.org/linux-yocto-4.1

This patch returns the GuC status to the caller. It is used so
that the userspace knows if the GuC has been loaded.

Signed-off-by: Peter Antoine <peter.antoine@intel.com>
Signed-off-by: Jeff McGee <jeff.mcgee@intel.com>
Signed-off-by: Bob Paauwe <bob.j.paauwe@intel.com>

Conflicts:
	drivers/gpu/drm/i915/i915_dma.c
	include/uapi/drm/i915_drm.h
---
 drivers/gpu/drm/i915/i915_dma.c         |    4 ++++
 drivers/gpu/drm/i915/intel_guc.h        |    1 +
 drivers/gpu/drm/i915/intel_guc_loader.c |   18 ++++++++++++++++++
 include/uapi/drm/i915_drm.h             |    1 +
 4 files changed, 24 insertions(+), 0 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_dma.c b/drivers/gpu/drm/i915/i915_dma.c
index 8082122..f056fef 100644
--- a/drivers/gpu/drm/i915/i915_dma.c
+++ b/drivers/gpu/drm/i915/i915_dma.c
@@ -51,6 +51,7 @@
 #include <linux/pm_runtime.h>
 #include <linux/oom.h>
 #include "i915_ext_ioctl.h"
+#include "intel_guc.h"
 #include "iotg_build.h"
 
 static unsigned int i915_load_fail_count;
@@ -244,6 +245,9 @@ static int i915_getparam(struct drm_device *dev, void *data,
 	case I915_PARAM_MIN_EU_IN_POOL:
 		value = INTEL_INFO(dev)->min_eu_in_pool;
 		break;
+	case I915_PARAM_HAS_GUC:
+		value = intel_is_guc_valid(dev);
+		break;
 	default:
 		DRM_DEBUG("Unknown parameter %d\n", param->param);
 		return -EINVAL;
diff --git a/drivers/gpu/drm/i915/intel_guc.h b/drivers/gpu/drm/i915/intel_guc.h
index 4b24a21..8159793 100644
--- a/drivers/gpu/drm/i915/intel_guc.h
+++ b/drivers/gpu/drm/i915/intel_guc.h
@@ -133,6 +133,7 @@ extern const char *intel_uc_fw_status_repr(enum intel_uc_fw_status status);
 extern int intel_guc_suspend(struct drm_device *dev);
 extern int intel_guc_resume(struct drm_device *dev);
 void intel_uc_fw_fetch(struct drm_device *dev, struct intel_uc_fw *uc_fw);
+int intel_is_guc_valid(struct drm_device *dev);
 
 /* i915_guc_submission.c */
 int i915_guc_submission_init(struct drm_device *dev);
diff --git a/drivers/gpu/drm/i915/intel_guc_loader.c b/drivers/gpu/drm/i915/intel_guc_loader.c
index 61d187e..19b0142 100644
--- a/drivers/gpu/drm/i915/intel_guc_loader.c
+++ b/drivers/gpu/drm/i915/intel_guc_loader.c
@@ -763,3 +763,21 @@ void intel_guc_ucode_fini(struct drm_device *dev)
 
 	guc_fw->fetch_status = UC_FIRMWARE_NONE;
 }
+
+/**
+ * intel_is_guc_valid() - Check to see if the GuC is fully loaded.
+ * @dev:	drm dedvice to check.
+ *
+ * This function will return true if the guc has been loaded and
+ * has valid firmware.
+ */
+int intel_is_guc_valid(struct drm_device *dev)
+{
+	struct drm_i915_private *dev_priv = dev->dev_private;
+	struct intel_uc_fw *guc_fw = &dev_priv->guc.guc_fw;
+
+	if (guc_fw->load_status == UC_FIRMWARE_SUCCESS)
+		return 1;
+	else
+		return 0;
+}
diff --git a/include/uapi/drm/i915_drm.h b/include/uapi/drm/i915_drm.h
index 6b90a24..86d3774 100644
--- a/include/uapi/drm/i915_drm.h
+++ b/include/uapi/drm/i915_drm.h
@@ -400,6 +400,7 @@ typedef struct drm_i915_irq_wait {
 #define I915_PARAM_HAS_POOLED_EU         0x800
 #define I915_PARAM_MIN_EU_IN_POOL        0x801
 #define I915_PARAM_HAS_GET_APERTURE2     0x802
+#define I915_PARAM_HAS_GUC               0x803
 
 typedef struct drm_i915_getparam {
 	__s32 param;
-- 
1.7.5.4

