From 9acbe495997f77ab132ae15e42304d1ba0ff749e Mon Sep 17 00:00:00 2001
From: Mousumi Jana <mousumix.jana@intel.com>
Date: Sun, 8 Nov 2015 19:12:28 +0530
Subject: [PATCH 1817/2508] ASoC: Intel: Skylake:fix for large get config api

commit 83982b860f6f08c689b6531a80a7e46e68f54808 from
https://github.com/01org/linux-apollolake-i

This patch adds support for get large config API
when need to send the tx parameter to retrieve one or
more configuration parameters from specified module instance.

Change-Id: I3db4398e52e63176cb25ec37ff06db2b8f73f72b
Signed-off-by: Mousumi Jana <mousumix.jana@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/7601
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/skl-messages.c |    2 +-
 sound/soc/intel/skylake/skl-sst-ipc.c  |   24 +++++++++++++++---------
 sound/soc/intel/skylake/skl-sst-ipc.h  |    3 ++-
 3 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index f3e024e..6916576 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -1102,5 +1102,5 @@ int skl_get_module_params(struct skl_sst *ctx, u32 *params, int size,
 	msg.large_param_id = param_id;
 
 	dev_dbg(ctx->dev, "getting module params size=%d\n", size);
-	return skl_ipc_get_large_config(&ctx->ipc, &msg, params);
+	return skl_ipc_get_large_config(&ctx->ipc, &msg, params, NULL, 0);
 }
diff --git a/sound/soc/intel/skylake/skl-sst-ipc.c b/sound/soc/intel/skylake/skl-sst-ipc.c
index 87c2e00..523d331 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.c
+++ b/sound/soc/intel/skylake/skl-sst-ipc.c
@@ -844,14 +844,14 @@ int skl_ipc_set_large_config(struct sst_generic_ipc *ipc,
 }
 EXPORT_SYMBOL_GPL(skl_ipc_set_large_config);
 
-
 int skl_ipc_get_large_config(struct sst_generic_ipc *ipc,
-		struct skl_ipc_large_config_msg *msg, u32 *param)
+		struct skl_ipc_large_config_msg *msg, u32 *param,
+		u32 *txparam, u32 size)
 {
 	struct skl_ipc_header header = {0};
 	u64 *ipc_header = (u64 *)(&header);
 	int ret = 0;
-	size_t sz_remaining, rx_size, data_offset;
+	size_t sz_remaining, rx_size, data_offset, inbox_sz;
 
 	header.primary = IPC_MSG_TARGET(IPC_MOD_MSG);
 	header.primary |= IPC_MSG_DIR(IPC_MSG_REQUEST);
@@ -866,10 +866,14 @@ int skl_ipc_get_large_config(struct sst_generic_ipc *ipc,
 
 	sz_remaining = msg->param_data_size;
 	data_offset = 0;
+	inbox_sz = ipc->dsp->mailbox.in_size;
+
+	if (msg->param_data_size >= inbox_sz)
+		header.extension |= IPC_FINAL_BLOCK(0);
 
 	while (sz_remaining != 0) {
-		rx_size = sz_remaining > SKL_ADSP_W1_SZ
-				? SKL_ADSP_W1_SZ : sz_remaining;
+		rx_size = sz_remaining > inbox_sz
+				? inbox_sz : sz_remaining;
 		if (rx_size == sz_remaining)
 			header.extension |= IPC_FINAL_BLOCK(1);
 
@@ -877,9 +881,11 @@ int skl_ipc_get_large_config(struct sst_generic_ipc *ipc,
 			header.primary, header.extension);
 		dev_dbg(ipc->dev, "receiving offset: %#x, size: %#x\n",
 			(unsigned)data_offset, (unsigned)rx_size);
-		ret = sst_ipc_tx_message_wait(ipc, *ipc_header, NULL, 0,
-					      ((char *)param) + data_offset,
-					      msg->param_data_size);
+
+		ret = sst_ipc_tx_message_wait(ipc, *ipc_header,
+			((char *)txparam), size, ((char *)param) + data_offset,
+					      rx_size);
+
 		if (ret < 0) {
 			dev_err(ipc->dev,
 				"ipc: get large config fail, err: %d\n", ret);
@@ -892,7 +898,7 @@ int skl_ipc_get_large_config(struct sst_generic_ipc *ipc,
 		header.extension &= IPC_INITIAL_BLOCK_CLEAR;
 		header.extension &= IPC_DATA_OFFSET_SZ_CLEAR;
 		/* fill the fields */
-		header.extension |= IPC_INITIAL_BLOCK(1);
+		header.extension |= IPC_INITIAL_BLOCK(0);
 		header.extension |= IPC_DATA_OFFSET_SZ(data_offset);
 	}
 
diff --git a/sound/soc/intel/skylake/skl-sst-ipc.h b/sound/soc/intel/skylake/skl-sst-ipc.h
index 36da74d..f1fb159 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.h
+++ b/sound/soc/intel/skylake/skl-sst-ipc.h
@@ -122,7 +122,8 @@ int skl_ipc_set_large_config(struct sst_generic_ipc *ipc,
 		struct skl_ipc_large_config_msg *msg, u32 *param);
 
 int skl_ipc_get_large_config(struct sst_generic_ipc *ipc,
-		struct skl_ipc_large_config_msg *msg, u32 *param);
+		struct skl_ipc_large_config_msg *msg, u32 *param,
+		u32 *txparam, u32 size);
 
 void skl_ipc_int_enable(struct sst_dsp *dsp);
 void skl_ipc_op_int_enable(struct sst_dsp *ctx);
-- 
1.7.5.4

