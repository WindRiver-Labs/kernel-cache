From c418655c23a0d0bfc7675bf11cefca567b56a360 Mon Sep 17 00:00:00 2001
From: Ramesh Babu <ramesh.babu@intel.com>
Date: Thu, 18 Feb 2016 21:08:44 +0530
Subject: [PATCH 1872/2508] ASoC: Intel: Skylake: fix locking in irq thread

commit ba52e00f7b8f0354ea60c76a92a2f61a752b8933 from
https://github.com/01org/linux-apollolake-i

Use spinlock irqsave/restore api while acquiring
lock, since it is used both in irq and non-irq
context.

Change-Id: I7fb2377b6e8feb92d0dbd1c790bc9868c0566b81
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-20757
Signed-off-by: Ramesh Babu <ramesh.babu@intel.com>
Reviewed-on: https://android.intel.com:443/472295
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8256
---
 sound/soc/intel/skylake/skl.c |    9 ++++-----
 1 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index 904250f..40c28eb 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -172,9 +172,8 @@ static irqreturn_t skl_threaded_handler(int irq, void *dev_id)
 {
 	struct hdac_ext_bus *ebus = dev_id;
 	struct hdac_bus *bus = ebus_to_hbus(ebus);
-	u32 status;
-	u32 int_enable;
-	u32 mask;
+	u32 status, int_enable, mask;
+	unsigned long flags;
 
 	status = snd_hdac_chip_readl(bus, INTSTS);
 
@@ -182,10 +181,10 @@ static irqreturn_t skl_threaded_handler(int irq, void *dev_id)
 
 	/* Re-enable stream interrupts */
 	mask = (0x1 << ebus->num_streams) - 1;
-	spin_lock(&bus->reg_lock);
+	spin_lock_irqsave(&bus->reg_lock, flags);
 	int_enable = snd_hdac_chip_readl(bus, INTCTL);
 	snd_hdac_chip_writel(bus, INTCTL, (int_enable | mask));
-	spin_unlock(&bus->reg_lock);
+	spin_unlock_irqrestore(&bus->reg_lock, flags);
 	return IRQ_HANDLED;
 }
 
-- 
1.7.5.4

