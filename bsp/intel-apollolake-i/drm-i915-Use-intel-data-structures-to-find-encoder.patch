From ef4fe841be98460ae79dea0af5508e696f678637 Mon Sep 17 00:00:00 2001
From: Bob Paauwe <bob.j.paauwe@intel.com>
Date: Tue, 24 Jan 2017 14:22:56 -0800
Subject: [PATCH 4490/4706] drm/i915: Use intel data structures to find
 encoder

commit 8756098308ef035621677c046f5038ca56b6bb58 from
git://git.yoctoproject.org/linux-yocto-4.1

This early in the initialization, the drm_connector structures don't
always have an encoder associated with them.  However, the equivelent
intel_connector structures do have an intel_encoder attached.  Use
the intel data structures to get at the drm_encoder.

Signed-off-by: Bob Paauwe <bob.j.paauwe@intel.com>
Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/intel_initial_modeset.c |   17 +++++++++++++----
 1 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_initial_modeset.c b/drivers/gpu/drm/i915/intel_initial_modeset.c
index 5e7eac0..63d5614 100644
--- a/drivers/gpu/drm/i915/intel_initial_modeset.c
+++ b/drivers/gpu/drm/i915/intel_initial_modeset.c
@@ -54,6 +54,15 @@ MODULE_PARM_DESC(splash,
 		 "Load a splash screen binary image for a specific display."
 		 "splash=<connector>:<image>:w,h,pitch,crtc_x,crtc_y,crtc_w,crtc_h");
 
+static inline struct drm_encoder *get_encoder(struct drm_connector *connector)
+{
+	struct intel_encoder *encoder;
+
+	encoder = intel_attached_encoder(connector);
+
+	return &encoder->base;
+}
+
 /*
  * This makes use of the video= kernel command line to determine what
  * connectors to configure. See Documentation/fb/modedb.txt for details
@@ -450,8 +459,8 @@ static int update_atomic_state(struct drm_device *dev,
 	int ret;
 	struct splash_screen_info *splash_info;
 
-	if (connector->encoder)
-		crtc = connector->encoder->crtc;
+	if (get_encoder(connector))
+		crtc = get_encoder(connector)->crtc;
 	else
 		return -EINVAL;
 
@@ -538,7 +547,7 @@ static void modeset_config_fn(struct work_struct *work)
 	mutex_lock(&dev->mode_config.mutex);
 	drm_for_each_connector(connector, dev) {
 		if (use_connector(connector)) {
-			if (!(encoder = connector->encoder))
+			if (!(encoder = get_encoder(connector)))
 				continue;
 			if (!attach_crtc(dev, encoder, &used_crtcs))
 				continue;
@@ -559,7 +568,7 @@ static void modeset_config_fn(struct work_struct *work)
 			connector->status = connector->funcs->detect(connector,
 								     true);
 			if (connector->status == connector_status_connected) {
-				if (!(encoder = connector->encoder))
+				if (!(encoder = get_encoder(connector)))
 					continue;
 				if (!attach_crtc(dev, encoder, &used_crtcs))
 					continue;
-- 
1.7.5.4

