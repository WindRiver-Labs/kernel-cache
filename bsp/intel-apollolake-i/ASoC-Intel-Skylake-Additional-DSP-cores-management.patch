From fdeb6e4746c8a203e1be217ef22bf883eeffcb84 Mon Sep 17 00:00:00 2001
From: Pardha Saradhi K <pardha.saradhi.kesapragada@intel.com>
Date: Thu, 17 Mar 2016 16:35:54 +0530
Subject: [PATCH 1934/2508] ASoC: Intel: Skylake: Additional DSP cores
 management

commit 2757baabef9c5eca7df056ef11144b02d750b492 from
https://github.com/01org/linux-apollolake-i

This patch adds support to manage additional cores on a
need basis. For example, if an algorithm is scheduled to
run on a different core, it would be powered up so
as to enable execution. Once the usecase is complete,
the same would be powered down/usage counter is decremented

Change-Id: I8a195e7b3354bc80031093207d3028e818eaed44
Signed-off-by: Pardha Saradhi K <pardha.saradhi.kesapragada@intel.com>
---
 sound/soc/intel/skylake/skl-topology.c |   22 ++++++++++++++++++++--
 1 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-topology.c b/sound/soc/intel/skylake/skl-topology.c
index 0420f34..456715b 100644
--- a/sound/soc/intel/skylake/skl-topology.c
+++ b/sound/soc/intel/skylake/skl-topology.c
@@ -452,6 +452,15 @@ skl_tplg_init_pipe_modules(struct skl *skl, struct skl_pipe *pipe)
 		skl_tplg_update_module_params(w, ctx);
 
 		skl_tplg_set_module_init_data(w);
+
+		ret = skl_dsp_get_core(ctx->dsp, mconfig->core_id);
+
+		if (ret < 0) {
+			dev_err(ctx->dev, "Failed to wake up core %d ret=%d\n",
+						mconfig->core_id, ret);
+			return ret;
+		}
+
 		ret = skl_init_module(ctx, mconfig);
 		if (ret < 0)
 			return ret;
@@ -469,6 +478,7 @@ static int skl_tplg_unload_pipe_modules(struct skl_sst *ctx,
 {
 	struct skl_pipe_module *w_module = NULL;
 	struct skl_module_cfg *mconfig = NULL;
+	int ret = 0;
 
 	dev_dbg(ctx->dev, "%s: pipe=%d\n", __func__, pipe->ppl_id);
 	list_for_each_entry(w_module, &pipe->w_list, node) {
@@ -476,10 +486,18 @@ static int skl_tplg_unload_pipe_modules(struct skl_sst *ctx,
 		dev_dbg(ctx->dev, "unload module_id=%d\n", mconfig->id.module_id);
 
 		if (mconfig->is_loadable)
-			return skl_unload_modules(ctx, mconfig);
+			ret = skl_unload_modules(ctx, mconfig);
+
+		ret = skl_dsp_put_core(ctx->dsp, mconfig->core_id);
+		if (ret < 0) {
+			/* notify error, continue with other modules */
+			dev_err(ctx->dev, "Failed to sleep core %d ret=%d\n",
+					mconfig->core_id, ret);
+
+		}
 	}
 
-	return 0;
+	return ret;
 }
 
 /*
-- 
1.7.5.4

