From c7241bec50263f9bfa00f9562fb84466e7c49143 Mon Sep 17 00:00:00 2001
From: Hardik T Shah <hardik.t.shah@intel.com>
Date: Sat, 12 Mar 2016 14:17:17 +0530
Subject: [PATCH 1930/2508] Asoc:SKL: Split HW and FW DSP initialization.

commit 16ec5203f8affd159b98e820c37c26482de11eeb from
https://github.com/01org/linux-apollolake-i

DSP initialization is split into two
Hardware initialization and Firmware initialization.
HW initialization is done during controller probe.
FW initialization is done as part of soc_probe
since firmware library is downloaded after the
toplogy downloaded.

Change-Id: Ie7e07dd258170f2da4494ec6be84872aed6c58c0
Signed-off-by: Hardik T Shah <hardik.t.shah@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8400
Reviewed-by: B, Jayachandran <jayachandran.b@intel.com>
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/bxt-sst.c      |   27 +++++++++++-----
 sound/soc/intel/skylake/cnl-sst-dsp.h  |    4 ++-
 sound/soc/intel/skylake/cnl-sst.c      |   23 ++++++++++---
 sound/soc/intel/skylake/skl-messages.c |   54 ++++++++++++++++++++++++--------
 sound/soc/intel/skylake/skl-pcm.c      |    3 +-
 sound/soc/intel/skylake/skl-sst-dsp.h  |   11 ++++--
 sound/soc/intel/skylake/skl-sst.c      |   22 ++++++++-----
 sound/soc/intel/skylake/skl.c          |    5 +++
 sound/soc/intel/skylake/skl.h          |    8 +++--
 9 files changed, 111 insertions(+), 46 deletions(-)

diff --git a/sound/soc/intel/skylake/bxt-sst.c b/sound/soc/intel/skylake/bxt-sst.c
index 7f04697..ad15224 100644
--- a/sound/soc/intel/skylake/bxt-sst.c
+++ b/sound/soc/intel/skylake/bxt-sst.c
@@ -102,9 +102,8 @@ static struct sst_dsp_device skl_dev = {
 	.ops = &skl_ops,
 };
 
-int bxt_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
-		struct skl_dsp_loader_ops dsp_ops, struct skl_sst **dsp,
-		struct skl_dfw_manifest *minfo)
+int bxt_sst_dsp_init_hw(struct device *dev, void __iomem *mmio_base, int irq,
+		struct skl_dsp_loader_ops dsp_ops, struct skl_sst **dsp)
 {
 	struct skl_sst *skl;
 	struct sst_dsp *sst;
@@ -158,26 +157,38 @@ int bxt_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
 
 	INIT_DELAYED_WORK(&skl->d0i3_data.d0i3_work, bxt_set_dsp_D0i3);
 
-	ret = sst->fw_ops.load_fw(sst);
+	if (dsp)
+		*dsp = skl;
+	dev_dbg(dev, "Exit %s\n", __func__);
+	return 0;
+}
+EXPORT_SYMBOL_GPL(bxt_sst_dsp_init_hw);
+
+int bxt_sst_dsp_init_fw(struct device *dev, struct skl_sst *ctx,
+			struct skl_dfw_manifest *minfo)
+{
+	int ret;
+
+	dev_dbg(dev, "In %s\n", __func__);
+
+	ret = ctx->dsp->fw_ops.load_fw(ctx->dsp);
 	if (ret < 0) {
 		dev_err(dev, "Load base fw failed : %x", ret);
 		return ret;
 	}
 
 	if (minfo->lib_count > 1) {
-		ret = sst->fw_ops.load_library(sst, minfo);
+		ret = ctx->dsp->fw_ops.load_library(ctx->dsp, minfo);
 		if (ret < 0) {
 			dev_err(dev, "Load Library failed : %x", ret);
 			return ret;
 		}
 	}
 
-	if (dsp)
-		*dsp = skl;
 	dev_dbg(dev, "Exit %s\n", __func__);
 	return 0;
 }
-EXPORT_SYMBOL_GPL(bxt_sst_dsp_init);
+EXPORT_SYMBOL_GPL(bxt_sst_dsp_init_fw);
 
 
 /* First boot sequence has some extra steps due to a ROM bug on BXT.
diff --git a/sound/soc/intel/skylake/cnl-sst-dsp.h b/sound/soc/intel/skylake/cnl-sst-dsp.h
index 3f03f2f..974905e 100644
--- a/sound/soc/intel/skylake/cnl-sst-dsp.h
+++ b/sound/soc/intel/skylake/cnl-sst-dsp.h
@@ -119,8 +119,10 @@ int cnl_dsp_disable_core(struct sst_dsp *ctx);
 irqreturn_t cnl_dsp_sst_interrupt(int irq, void *dev_id);
 void cnl_dsp_free(struct sst_dsp *dsp);
 
-int cnl_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
+int cnl_sst_dsp_init_hw(struct device *dev, void __iomem *mmio_base, int irq,
 		struct skl_dsp_loader_ops dsp_ops, struct skl_sst **dsp);
+int cnl_sst_dsp_init_fw(struct device *dev,
+	struct skl_sst *ctx, struct skl_dfw_manifest *minfo);
 void cnl_sst_dsp_cleanup(struct device *dev, struct skl_sst *ctx);
 
 void cnl_ipc_int_disable(struct sst_dsp *ctx);
diff --git a/sound/soc/intel/skylake/cnl-sst.c b/sound/soc/intel/skylake/cnl-sst.c
index ddd77d5..347ef62 100644
--- a/sound/soc/intel/skylake/cnl-sst.c
+++ b/sound/soc/intel/skylake/cnl-sst.c
@@ -521,7 +521,7 @@ static int cnl_ipc_init(struct device *dev, struct skl_sst *cnl)
 	return 0;
 }
 
-int cnl_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
+int cnl_sst_dsp_init_hw(struct device *dev, void __iomem *mmio_base, int irq,
 		struct skl_dsp_loader_ops dsp_ops, struct skl_sst **dsp)
 {
 	struct skl_sst *cnl;
@@ -566,18 +566,29 @@ int cnl_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
 	cnl->boot_complete = false;
 	init_waitqueue_head(&cnl->boot_wait);
 
-	ret = sst->fw_ops.load_fw(sst);
+	if (dsp)
+		*dsp = cnl;
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(cnl_sst_dsp_init_hw);
+
+int cnl_sst_dsp_init_fw(struct device *dev,
+			struct skl_sst *ctx, struct skl_dfw_manifest *minfo)
+{
+	int ret;
+
+	ret = ctx->dsp->fw_ops.load_fw(ctx->dsp);
 	if (ret < 0) {
 		dev_err(dev, "Load base fw failed : %d", ret);
 		return ret;
 	}
 
-	if (dsp)
-		*dsp = cnl;
-
 	return 0;
 }
-EXPORT_SYMBOL_GPL(cnl_sst_dsp_init);
+EXPORT_SYMBOL_GPL(cnl_sst_dsp_init_fw);
+
+
 
 void cnl_sst_dsp_cleanup(struct device *dev, struct skl_sst *ctx)
 {
diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index a5c178f..c8b2edd 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -222,11 +222,16 @@ static struct skl_dsp_loader_ops bxt_get_loader_ops(void)
 };
 
 static const struct skl_dsp_ops dsp_ops[] = {
-{.id = 0x9d70, .loader_ops = skl_get_loader_ops, .init = skl_sst_dsp_init, .cleanup = skl_sst_dsp_cleanup},
-{.id = 0x0a98, .loader_ops = bxt_get_loader_ops, .init = bxt_sst_dsp_init, .cleanup = bxt_sst_dsp_cleanup},
-{.id = 0x5a98, .loader_ops = bxt_get_loader_ops, .init = bxt_sst_dsp_init, .cleanup = bxt_sst_dsp_cleanup},
-{.id = 0x9df0, .loader_ops = bxt_get_loader_ops, .init = cnl_sst_dsp_init, .cleanup = cnl_sst_dsp_cleanup},
-{.id = 0x1a98, .loader_ops = bxt_get_loader_ops, .init = bxt_sst_dsp_init, .cleanup = bxt_sst_dsp_cleanup},
+{.id = 0x9d70, .loader_ops = skl_get_loader_ops, .init_hw = skl_sst_dsp_init_hw,
+		.init_fw = skl_sst_dsp_init_fw, .cleanup = skl_sst_dsp_cleanup},
+{.id = 0x0a98, .loader_ops = bxt_get_loader_ops, .init_hw = bxt_sst_dsp_init_hw,
+		.init_fw = bxt_sst_dsp_init_fw, .cleanup = bxt_sst_dsp_cleanup},
+{.id = 0x5a98, .loader_ops = bxt_get_loader_ops, .init_hw = bxt_sst_dsp_init_hw,
+		.init_fw = bxt_sst_dsp_init_fw, .cleanup = bxt_sst_dsp_cleanup},
+{.id = 0x9df0, .loader_ops = bxt_get_loader_ops, .init_hw = cnl_sst_dsp_init_hw,
+		.init_fw = cnl_sst_dsp_init_fw, .cleanup = cnl_sst_dsp_cleanup},
+{.id = 0x1a98, .loader_ops = bxt_get_loader_ops, .init_hw = bxt_sst_dsp_init_hw,
+		.init_fw = bxt_sst_dsp_init_fw, .cleanup = bxt_sst_dsp_cleanup},
 {}
 };
 
@@ -242,7 +247,7 @@ static int skl_get_dsp_ops(int pci_id)
 	return -EINVAL;
 }
 
-int skl_init_dsp(struct skl *skl)
+int skl_init_dsp_hw(struct skl *skl)
 {
 	void __iomem *mmio_base;
 	struct hdac_ext_bus *ebus = &skl->ebus;
@@ -251,7 +256,6 @@ int skl_init_dsp(struct skl *skl)
 	int irq = bus->irq;
 	int ret, index;
 
-	pm_runtime_get_sync(bus->dev);
 	/* enable ppcap interrupt */
 	snd_hdac_ext_bus_ppcap_enable(&skl->ebus, true);
 	snd_hdac_ext_bus_ppcap_int_enable(&skl->ebus, true);
@@ -271,17 +275,41 @@ int skl_init_dsp(struct skl *skl)
 	}
 
 	loader_ops = dsp_ops[index].loader_ops();
-	ret = dsp_ops[index].init(bus->dev, mmio_base, irq,
-		loader_ops, &skl->skl_sst, &skl->manifest);
+	ret = dsp_ops[index].init_hw(bus->dev, mmio_base, irq,
+		loader_ops, &skl->skl_sst);
+dsp_init_exit:
+	dev_dbg(bus->dev, "dsp registration status=%d\n", ret);
 
-	if (ret < 0)
-		goto dsp_init_exit;
+	return ret;
+}
+
+int skl_init_dsp_fw(struct skl *skl)
+{
+	struct hdac_ext_bus *ebus = &skl->ebus;
+	struct hdac_bus *bus = ebus_to_hbus(ebus);
+	int ret, index;
+
+	pm_runtime_get_sync(bus->dev);
+
+	index  = skl_get_dsp_ops(skl->pci->device);
+	if (index  < 0) {
+		ret = -EINVAL;
+		pm_runtime_put_sync(bus->dev);
+		return ret;
+	}
+
+	ret = dsp_ops[index].init_fw(bus->dev, skl->skl_sst, &skl->manifest);
+
+	if (ret < 0) {
+		skl_free_dsp(skl);
+		dev_err(bus->dev, "Firmware load failed\n");
+		pm_runtime_put_sync(bus->dev);
+		return ret;
+	}
 
 	skl_dsp_enable_notification(skl->skl_sst, false);
-dsp_init_exit:
 	pm_runtime_put_sync(bus->dev);
 	dev_dbg(bus->dev, "dsp registration status=%d\n", ret);
-
 	return ret;
 }
 
diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index 45d8a0c0..979e594 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -1367,7 +1367,7 @@ static int skl_platform_soc_probe(struct snd_soc_platform *platform)
 			return ret;
 		}
 
-		ret = skl_init_dsp(skl);
+		ret = skl_init_dsp_fw(skl);
 		if (ret < 0) {
 			dev_dbg(bus->dev, "error failed to register dsp\n");
 			goto out_free;
@@ -1396,7 +1396,6 @@ static int skl_platform_soc_probe(struct snd_soc_platform *platform)
 	return ret;
 out_free:
 	skl->init_failed = 1;
-	skl_free(ebus);
 	return ret;
 }
 
diff --git a/sound/soc/intel/skylake/skl-sst-dsp.h b/sound/soc/intel/skylake/skl-sst-dsp.h
index 18fc0df..32c003b 100644
--- a/sound/soc/intel/skylake/skl-sst-dsp.h
+++ b/sound/soc/intel/skylake/skl-sst-dsp.h
@@ -205,11 +205,14 @@ int skl_dsp_get_core(struct sst_dsp *ctx, unsigned int core_id);
 int skl_dsp_put_core(struct sst_dsp *ctx, unsigned int core_id);
 
 int skl_dsp_boot(struct sst_dsp *ctx);
-int skl_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
+int skl_sst_dsp_init_hw(struct device *dev, void __iomem *mmio_base, int irq,
 		struct skl_dsp_loader_ops dsp_ops, struct skl_sst **dsp);
-int bxt_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
-		struct skl_dsp_loader_ops dsp_ops, struct skl_sst **dsp,
-		struct skl_dfw_manifest *minfo);
+int bxt_sst_dsp_init_hw(struct device *dev, void __iomem *mmio_base, int irq,
+		struct skl_dsp_loader_ops dsp_ops, struct skl_sst **dsp);
+int skl_sst_dsp_init_fw(struct device *dev,
+	struct skl_sst *ctx, struct skl_dfw_manifest *minfo);
+int bxt_sst_dsp_init_fw(struct device *dev,
+	struct skl_sst *ctx, struct skl_dfw_manifest *minfo);
 void skl_sst_dsp_cleanup(struct device *dev, struct skl_sst *ctx);
 void bxt_sst_dsp_cleanup(struct device *dev, struct skl_sst *ctx);
 
diff --git a/sound/soc/intel/skylake/skl-sst.c b/sound/soc/intel/skylake/skl-sst.c
index 7f5f8738..5c57a6d 100644
--- a/sound/soc/intel/skylake/skl-sst.c
+++ b/sound/soc/intel/skylake/skl-sst.c
@@ -436,7 +436,7 @@ static struct sst_dsp_device skl_dev = {
 	.ops = &skl_ops,
 };
 
-int skl_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
+int skl_sst_dsp_init_hw(struct device *dev, void __iomem *mmio_base, int irq,
 		struct skl_dsp_loader_ops dsp_ops, struct skl_sst **dsp)
 {
 	struct skl_sst *skl;
@@ -481,22 +481,26 @@ int skl_sst_dsp_init(struct device *dev, void __iomem *mmio_base, int irq,
 
 	sst->core_info.cores = 2;
 
-	ret = sst->fw_ops.load_fw(sst);
-	if (ret < 0) {
-		dev_err(dev, "Load base fw failed : %d", ret);
-		goto cleanup;
-	}
 
 	if (dsp)
 		*dsp = skl;
 
 	return ret;
+}
+EXPORT_SYMBOL_GPL(skl_sst_dsp_init_hw);
+
+int skl_sst_dsp_init_fw(struct device *dev,
+		struct skl_sst *ctx, struct skl_dfw_manifest *minfo)
+{
+	int ret;
+
+	ret = ctx->dsp->fw_ops.load_fw(ctx->dsp);
+	if (ret < 0)
+		dev_err(dev, "Load base fw failed : %d", ret);
 
-cleanup:
-	skl_sst_dsp_cleanup(dev, skl);
 	return ret;
 }
-EXPORT_SYMBOL_GPL(skl_sst_dsp_init);
+EXPORT_SYMBOL_GPL(skl_sst_dsp_init_fw);
 
 void skl_sst_dsp_cleanup(struct device *dev, struct skl_sst *ctx)
 {
diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index fc3542b..51b1046 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -677,6 +677,11 @@ static int skl_probe(struct pci_dev *pci,
 
 	/* check if dsp is there */
 	if (ebus->ppcap) {
+		err = skl_init_dsp_hw(skl);
+		if (err) {
+			dev_err(bus->dev, "DSP HW Init failed\n");
+			goto out_free;
+		}
 		/*TODO  machine name need to be read from DSDT entry*/
 		err = skl_machine_device_register(skl,
 						  (void *)pci_id->driver_data);
diff --git a/sound/soc/intel/skylake/skl.h b/sound/soc/intel/skylake/skl.h
index e20d604..43ee0739 100644
--- a/sound/soc/intel/skylake/skl.h
+++ b/sound/soc/intel/skylake/skl.h
@@ -108,8 +108,9 @@ struct skl_dsp_ops {
 	int id;
 	struct skl_dsp_loader_ops (*loader_ops)(void);
 
-	int (*init)(struct device *dev, void __iomem *mmio_base, int irq,
-		struct skl_dsp_loader_ops loader_ops, struct skl_sst **skl_sst,
+	int (*init_hw)(struct device *dev, void __iomem *mmio_base, int irq,
+		struct skl_dsp_loader_ops loader_ops, struct skl_sst **skl_sst);
+	int (*init_fw)(struct device *dev, struct skl_sst *ctx,
 		struct skl_dfw_manifest *minfo);
 	void (*cleanup)(struct device *dev, struct skl_sst *ctx);
 };
@@ -122,7 +123,8 @@ void skl_nhlt_free(void __iomem *addr);
 struct nhlt_specific_cfg *skl_get_ep_blob(struct skl *skl, u32 instance,
 			u8 link_type, u8 s_fmt, u8 no_ch, u32 s_rate, u8 dirn);
 
-int skl_init_dsp(struct skl *skl);
+int skl_init_dsp_hw(struct skl *skl);
+int skl_init_dsp_fw(struct skl *skl);
 int skl_free_dsp(struct skl *skl);
 int skl_suspend_dsp(struct skl *skl);
 int skl_resume_dsp(struct skl *skl);
-- 
1.7.5.4

