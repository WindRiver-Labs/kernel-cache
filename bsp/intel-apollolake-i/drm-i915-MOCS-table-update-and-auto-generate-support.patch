From d855081fa24056769eefdc34b8b2fd18d87fe347 Mon Sep 17 00:00:00 2001
From: Peter Antoine <peter.antoine@intel.com>
Date: Wed, 28 Oct 2015 14:04:28 -0700
Subject: [PATCH 4389/4706] drm/i915: MOCS table update and auto-generate
 support

commit e2a2f940653e0eb89d1d14e3ae42c209e84a764a from
git://git.yoctoproject.org/linux-yocto-4.1

The MOCS on Android must match the table within GmmLib. So this table will
need to match the version of GmmLib that it is intended to ship with. If
the tables do not match it will not break the system, just make it not as
preferment as it could be.

This change allows for the tables that are now generated by the UFO build
to be added easily with only updating a single standalone file. This file
is generated by the UFO build.

MUST_REBASE: This change is required for supporting android so that GmmLib
userspace based applications work as expected and is divergent from the
tables (and code) that is used in the upstream Linux kernel.

Change-Id: Ib0c9e9fb2c5c732bd7c9047e68606009925d5994
For: GMINL-13168
Signed-off-by: Peter Antoine <peter.antoine@intel.com>
[Jeff: Original patch included much of the base MOCS programming
implementation which is already present in this drm/i915 - that was
removed in the rebasing. Also excluded programming of the MOCS registers
in the GuC and WiDi spaces - revisit if/when necessary.]
Signed-off-by: Jeff McGee <jeff.mcgee@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/Makefile     |    1 +
 drivers/gpu/drm/i915/intel_mocs.c |   54 -------------------------------------
 drivers/gpu/drm/i915/intel_mocs.h |   13 +++++++++
 3 files changed, 14 insertions(+), 54 deletions(-)

diff --git a/drivers/gpu/drm/i915/Makefile b/drivers/gpu/drm/i915/Makefile
index 4f8e853..dde978d 100644
--- a/drivers/gpu/drm/i915/Makefile
+++ b/drivers/gpu/drm/i915/Makefile
@@ -44,6 +44,7 @@ i915-y += i915_cmd_parser.o \
 	  intel_engine_cs.o \
 	  intel_lrc.o \
 	  intel_mocs.o \
+	  intel_mocs_gmm_table.o \
 	  intel_ringbuffer.o \
 	  intel_uncore.o
 
diff --git a/drivers/gpu/drm/i915/intel_mocs.c b/drivers/gpu/drm/i915/intel_mocs.c
index 80bb924..3f65e504 100644
--- a/drivers/gpu/drm/i915/intel_mocs.c
+++ b/drivers/gpu/drm/i915/intel_mocs.c
@@ -24,17 +24,6 @@
 #include "intel_lrc.h"
 #include "intel_ringbuffer.h"
 
-/* structures required */
-struct drm_i915_mocs_entry {
-	u32 control_value;
-	u16 l3cc_value;
-};
-
-struct drm_i915_mocs_table {
-	u32 size;
-	const struct drm_i915_mocs_entry *table;
-};
-
 /* Defines for the tables (XXX_MOCS_0 - XXX_MOCS_63) */
 #define LE_CACHEABILITY(value)	((value) << 0)
 #define LE_TGT_CACHE(value)	((value) << 2)
@@ -161,49 +150,6 @@ static const struct drm_i915_mocs_entry broxton_mocs_table[] = {
 	},
 };
 
-/**
- * get_mocs_settings()
- * @dev_priv:	i915 device.
- * @table:      Output table that will be made to point at appropriate
- *	      MOCS values for the device.
- *
- * This function will return the values of the MOCS table that needs to
- * be programmed for the platform. It will return the values that need
- * to be programmed and if they need to be programmed.
- *
- * Return: true if there are applicable MOCS settings for the device.
- */
-static bool get_mocs_settings(struct drm_i915_private *dev_priv,
-			      struct drm_i915_mocs_table *table)
-{
-	bool result = false;
-
-	if (IS_SKYLAKE(dev_priv) || IS_KABYLAKE(dev_priv)) {
-		table->size  = ARRAY_SIZE(skylake_mocs_table);
-		table->table = skylake_mocs_table;
-		result = true;
-	} else if (IS_BROXTON(dev_priv)) {
-		table->size  = ARRAY_SIZE(broxton_mocs_table);
-		table->table = broxton_mocs_table;
-		result = true;
-	} else {
-		WARN_ONCE(INTEL_INFO(dev_priv)->gen >= 9,
-			  "Platform that should have a MOCS table does not.\n");
-	}
-
-	/* WaDisableSkipCaching:skl,bxt,kbl */
-	if (IS_GEN9(dev_priv)) {
-		int i;
-
-		for (i = 0; i < table->size; i++)
-			if (WARN_ON(table->table[i].l3cc_value &
-				    (L3_ESC(1) | L3_SCC(0x7))))
-				return false;
-	}
-
-	return result;
-}
-
 static i915_reg_t mocs_register(enum intel_engine_id engine_id, int index)
 {
 	switch (engine_id) {
diff --git a/drivers/gpu/drm/i915/intel_mocs.h b/drivers/gpu/drm/i915/intel_mocs.h
index a8bd9f7..e9f76bb 100644
--- a/drivers/gpu/drm/i915/intel_mocs.h
+++ b/drivers/gpu/drm/i915/intel_mocs.h
@@ -52,6 +52,19 @@
 #include <drm/drmP.h>
 #include "i915_drv.h"
 
+struct drm_i915_mocs_entry {
+	u32	control_value;
+	u16	l3cc_value;
+};
+
+struct drm_i915_mocs_table {
+	u32					size;
+	const struct drm_i915_mocs_entry	*table;
+};
+
+bool get_mocs_settings(struct drm_i915_private *dev_priv,
+		       struct drm_i915_mocs_table *table);
+
 int intel_rcs_context_init_mocs(struct drm_i915_gem_request *req);
 void intel_mocs_init_l3cc_table(struct drm_device *dev);
 int intel_mocs_init_engine(struct intel_engine_cs *engine);
-- 
1.7.5.4

