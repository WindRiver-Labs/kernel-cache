From d4d962b98f4c74cf2b73f3178fa6b6324bdfe37d Mon Sep 17 00:00:00 2001
From: Pardha Saradhi K <pardha.saradhi.kesapragada@intel.com>
Date: Wed, 9 Dec 2015 12:06:16 +0530
Subject: [PATCH 1810/2508] ASoC: Intel: Code cleanup for IVI RSE Machine
 driver

commit 0c4dfacba3c7dda3d213574d79101a608d23b3fa from
https://github.com/01org/linux-apollolake-i

Remove unwanted code from the IVI RSE machine driver related
to RT298. This codec/SSP is not used in this machine at all.
Also, the name of the module is changed to reflect the
RSE configuration
Kconfig file has been modified to remove the RT298 and DMIC
dependancies.

Change-Id: Iad717955a26f13bde53fef214f6edc37c4e1dc97
Signed-off-by: Pardha Saradhi K <pardha.saradhi.kesapragada@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/7816
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/Kconfig                     |    2 -
 sound/soc/intel/boards/bxtp_ivi_rse_rt298.c |  111 ++-------------------------
 2 files changed, 6 insertions(+), 107 deletions(-)

diff --git a/sound/soc/intel/Kconfig b/sound/soc/intel/Kconfig
index 7087cf4..3a57a8e 100644
--- a/sound/soc/intel/Kconfig
+++ b/sound/soc/intel/Kconfig
@@ -184,8 +184,6 @@ config SND_SOC_INTEL_BXTP_IVI_RSE_MACH
         tristate "ASoC Audio driver for BXTP IVI RSE with Dummy Codecs"
         select SND_SOC_INTEL_SST
         select SND_SOC_INTEL_SKYLAKE
-        select SND_SOC_RT298
-        select SND_SOC_DMIC
         default n
         help
         This adds support for ASoC machine driver for Broxton-P platforms
diff --git a/sound/soc/intel/boards/bxtp_ivi_rse_rt298.c b/sound/soc/intel/boards/bxtp_ivi_rse_rt298.c
index b821d4e..f03bc32 100644
--- a/sound/soc/intel/boards/bxtp_ivi_rse_rt298.c
+++ b/sound/soc/intel/boards/bxtp_ivi_rse_rt298.c
@@ -25,26 +25,6 @@
 #include <sound/jack.h>
 #include <sound/pcm_params.h>
 
-#include "../../codecs/rt298.h"
-
-static struct snd_soc_jack broxton_headset;
-/* Headset jack detection DAPM pins */
-static struct snd_soc_jack_pin broxton_headset_pins[] = {
-	{
-		.pin = "Mic Jack",
-		.mask = SND_JACK_MICROPHONE,
-	},
-	{
-		.pin = "Headphone Jack",
-		.mask = SND_JACK_HEADPHONE,
-	},
-};
-
-static const struct snd_kcontrol_new broxton_controls[] = {
-	SOC_DAPM_PIN_SWITCH("Speaker"),
-	SOC_DAPM_PIN_SWITCH("Headphone Jack"),
-	SOC_DAPM_PIN_SWITCH("Mic Jack"),
-};
 
 static const struct snd_soc_dapm_widget broxton_widgets[] = {
 	SND_SOC_DAPM_HP("Headphone Jack", NULL),
@@ -72,26 +52,6 @@ static const struct snd_soc_dapm_route broxton_rt298_map[] = {
 	{ "ssp0 Rx", NULL, "Dummy Capture1" },
 };
 
-static int broxton_rt298_codec_init(struct snd_soc_pcm_runtime *rtd)
-{
-	struct snd_soc_codec *codec = rtd->codec;
-	int ret = 0;
-	char *gpio_addr, *mclk_addr;
-	u32 gpio_value = 0x44000800;
-	u32 mclk_value = 0x44000400;
-
-	ret = snd_soc_card_jack_new(rtd->card, "Headset",
-		SND_JACK_HEADSET | SND_JACK_BTN_0,
-		&broxton_headset,
-		broxton_headset_pins, ARRAY_SIZE(broxton_headset_pins));
-
-	if (ret)
-		return ret;
-
-	return 0;
-
-}
-
 static int broxton_ssp0_fixup(struct snd_soc_pcm_runtime *rtd,
 			struct snd_pcm_hw_params *params)
 {
@@ -157,46 +117,6 @@ static int broxton_ssp4_fixup(struct snd_soc_pcm_runtime *rtd,
 	return 0;
 }
 
-static int broxton_ssp5_fixup(struct snd_soc_pcm_runtime *rtd,
-			struct snd_pcm_hw_params *params)
-{
-	struct snd_interval *rate = hw_param_interval(params,
-			SNDRV_PCM_HW_PARAM_RATE);
-	struct snd_interval *channels = hw_param_interval(params,
-						SNDRV_PCM_HW_PARAM_CHANNELS);
-
-	/* The ADSP will covert the FE rate to 48k, stereo */
-	rate->min = rate->max = 48000;
-	channels->min = channels->max = 2;
-
-	/* set SSP5 to 16 bit */
-	snd_mask_set(&params->masks[SNDRV_PCM_HW_PARAM_FORMAT -
-				    SNDRV_PCM_HW_PARAM_FIRST_MASK],
-				    SNDRV_PCM_FORMAT_S16_LE);
-	return 0;
-}
-
-static int broxton_rt298_hw_params(struct snd_pcm_substream *substream,
-	struct snd_pcm_hw_params *params)
-{
-	struct snd_soc_pcm_runtime *rtd = substream->private_data;
-	struct snd_soc_dai *codec_dai = rtd->codec_dai;
-	int ret;
-
-	ret = snd_soc_dai_set_sysclk(codec_dai, RT298_SCLK_S_PLL, 19200000,
-		SND_SOC_CLOCK_IN);
-	if (ret < 0) {
-		dev_err(rtd->dev, "can't set codec sysclk configuration\n");
-		return ret;
-	}
-
-	return ret;
-}
-
-static struct snd_soc_ops broxton_rt298_ops = {
-	.hw_params = broxton_rt298_hw_params,
-};
-
 /* broxton digital audio interface glue - connects codec <--> CPU */
 static struct snd_soc_dai_link broxton_rt298_dais[] = {
 	/* Front End DAI links */
@@ -255,7 +175,7 @@ static struct snd_soc_dai_link broxton_rt298_dais[] = {
 	{
 		.name = "Bxt Audio Capture Port",
 		.stream_name = "Audio Record MCH",
-		.cpu_dai_name = "HDMI Capture Pin",
+		.cpu_dai_name = "System Pin 5",
 		.platform_name = "0000:00:0e.0",
 		.nonatomic = 1,
 		.dynamic = 1,
@@ -334,35 +254,16 @@ static struct snd_soc_dai_link broxton_rt298_dais[] = {
 		.be_hw_params_fixup = broxton_ssp4_fixup,
 		.dpcm_playback = 1,
 	},
-	{
-		/* SSP5 - Codec */
-		.name = "SSP5-Codec",
-		.be_id = 4,
-		.cpu_dai_name = "SSP5 Pin",
-		.platform_name = "0000:00:0e.0",
-		.no_pcm = 1,
-		.codec_name = "i2c-INT343A:00",
-		.codec_dai_name = "rt298-aif1",
-		.init = broxton_rt298_codec_init,
-		.dai_fmt = SND_SOC_DAIFMT_I2S | SND_SOC_DAIFMT_NB_NF |
-			SND_SOC_DAIFMT_CBS_CFS,
-		.ignore_suspend = 1,
-		.ignore_pmdown_time = 1,
-		.be_hw_params_fixup = broxton_ssp5_fixup,
-		.ops = &broxton_rt298_ops,
-		.dpcm_playback = 1,
-		.dpcm_capture = 1,
-	},
 };
 
 /* broxton audio machine driver for SPT + RT298S */
 static struct snd_soc_card broxton_rt298 = {
-	.name = "broxton-rt298",
+	.name = "broxton-ivi-rse",
 	.owner = THIS_MODULE,
 	.dai_link = broxton_rt298_dais,
 	.num_links = ARRAY_SIZE(broxton_rt298_dais),
-	.controls = broxton_controls,
-	.num_controls = ARRAY_SIZE(broxton_controls),
+	.controls = NULL,
+	.num_controls = 0,
 	.dapm_widgets = broxton_widgets,
 	.num_dapm_widgets = ARRAY_SIZE(broxton_widgets),
 	.dapm_routes = broxton_rt298_map,
@@ -387,7 +288,7 @@ static struct platform_driver broxton_audio = {
 	.probe = broxton_audio_probe,
 	.remove = broxton_audio_remove,
 	.driver = {
-		.name = "bxt_alc298s_i2s",
+		.name = "bxt_ivi_rse_i2s",
 	},
 };
 
@@ -399,4 +300,4 @@ MODULE_AUTHOR("Ramesh Babu <Ramesh.Babu@intel.com>");
 MODULE_AUTHOR("Senthilnathan Veppur <senthilnathanx.veppur@intel.com>");
 MODULE_DESCRIPTION("Intel SST Audio for Broxton");
 MODULE_LICENSE("GPL v2");
-MODULE_ALIAS("platform:bxt_alc298s_i2s");
+MODULE_ALIAS("platform:bxt_ivi_rse_i2s");
-- 
1.7.5.4

