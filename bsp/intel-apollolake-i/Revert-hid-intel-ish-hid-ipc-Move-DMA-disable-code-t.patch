From 9a129fb89c5b6b40321764ada27298e26b733f6d Mon Sep 17 00:00:00 2001
From: "Ooi, Joyce" <joyce.ooi@intel.com>
Date: Fri, 2 Dec 2016 10:57:47 +0800
Subject: [PATCH 4558/4706] Revert "hid: intel-ish-hid: ipc: Move DMA disable
 code to new function"

commit 66612a8473e73fd850d011aa94c3a92b06dff495 from
git://git.yoctoproject.org/linux-yocto-4.1

This reverts commit 399e33340999 ("hid: intel-ish-hid: ipc: Move DMA
disable code to new function").
Patches related to ISH drivers are reverted to pick up upstream ISH
drivers.

Signed-off-by: Ooi, Joyce <joyce.ooi@intel.com>
---
 drivers/hid/intel-ish-hid/ipc/ipc.c |   42 ++++++++--------------------------
 1 files changed, 10 insertions(+), 32 deletions(-)

diff --git a/drivers/hid/intel-ish-hid/ipc/ipc.c b/drivers/hid/intel-ish-hid/ipc/ipc.c
index 8f933cb..2b5d32d 100644
--- a/drivers/hid/intel-ish-hid/ipc/ipc.c
+++ b/drivers/hid/intel-ish-hid/ipc/ipc.c
@@ -522,36 +522,6 @@ eoi:
 }
 
 /**
- * ish_disable_dma() - disable dma communication between host and ISHFW
- * @dev: ishtp device pointer
- *
- * Clear the dma enable bit and wait for dma inactive
- *
- * Return: 0 for success else error fault code
- */
-static int ish_disable_dma(struct ishtp_device *dev)
-{
-	unsigned int dma_delay;
-
-	/* Clear the dma enable bit */
-	ish_reg_write(dev, IPC_REG_ISH_RMP2, 0);
-
-	/* Wait for dma inactive */
-	for (dma_delay = 0; (dma_delay < MAX_DMA_DELAY) &&
-	     (_ish_read_fw_sts_reg(dev) & (IPC_ISH_IN_DMA));
-	     dma_delay += 5)
-		mdelay(5);
-
-	if (dma_delay >= MAX_DMA_DELAY) {
-		dev_err(dev->devc,
-			"Wait for DMA inactive timeout\n");
-		return -EBUSY;
-	}
-
-	return 0;
-}
-
-/**
  * ish_wakeup() - wakeup ishfw from waiting-for-host state
  * @dev: ishtp device pointer
  *
@@ -577,6 +547,7 @@ static int _ish_hw_reset(struct ishtp_device *dev)
 {
 	struct pci_dev *pdev = dev->pdev;
 	int	rv;
+	unsigned int	dma_delay;
 	uint16_t csr;
 
 	if (!pdev)
@@ -591,8 +562,15 @@ static int _ish_hw_reset(struct ishtp_device *dev)
 		return	-EINVAL;
 	}
 
-	/* Disable dma communication between FW and host */
-	if (ish_disable_dma(dev)) {
+	/* Now trigger reset to FW */
+	ish_reg_write(dev, IPC_REG_ISH_RMP2, 0);
+
+	for (dma_delay = 0; dma_delay < MAX_DMA_DELAY &&
+		_ish_read_fw_sts_reg(dev) & (IPC_ISH_IN_DMA);
+		dma_delay += 5)
+		mdelay(5);
+
+	if (dma_delay >= MAX_DMA_DELAY) {
 		dev_err(&pdev->dev,
 			"Can't reset - stuck with DMA in-progress\n");
 		return	-EBUSY;
-- 
1.7.5.4

