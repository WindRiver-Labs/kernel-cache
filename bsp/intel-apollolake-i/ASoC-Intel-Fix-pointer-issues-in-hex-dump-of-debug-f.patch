From da0656d3928ae3b5b0aa2564026eec68975496b2 Mon Sep 17 00:00:00 2001
From: Pardha Saradhi K <pardha.saradhi.kesapragada@intel.com>
Date: Wed, 3 Feb 2016 18:12:46 +0530
Subject: [PATCH 1852/2508] ASoC: Intel: Fix pointer issues in hex dump of
 debug features

commit b04839eca81a075fb184848db044756b54735f8d from
https://github.com/01org/linux-apollolake-i

Fix pointer offset issues in the hex dump of debug data.
The function prints a bunch of bytes but the pointer is
incremented in u32 which is causing the utlity to miss data.

Hence correct the pointer arithmetic so as to prevent
data loss in printing

Change-Id: I7fb4b3a8b490e23430c626920f8aed1ee298e432
Signed-off-by: Pardha Saradhi K <pardha.saradhi.kesapragada@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8090
Reviewed-by: Jana, MousumiX <mousumix.jana@intel.com>
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/skl-debug.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-debug.c b/sound/soc/intel/skylake/skl-debug.c
index 7ffa875..1bf0c20 100644
--- a/sound/soc/intel/skylake/skl-debug.c
+++ b/sound/soc/intel/skylake/skl-debug.c
@@ -177,7 +177,7 @@ static ssize_t mod_control_read(struct file *file,
 
 	for (ofs = 0 ; ofs < d->ipc_data[0] ; ofs += 16) {
 		ret += snprintf(buf1 + ret, MOD_BUF1 - ret, "0x%.4x : ", ofs);
-		hex_dump_to_buffer(&(d->ipc_data[1]) + ofs, 16, 16, 4,
+		hex_dump_to_buffer((u8 *)(&(d->ipc_data[1])) + ofs, 16, 16, 4,
 					buf1 + ret, MOD_BUF1 - ret, 0);
 		ret += strlen(buf1 + ret);
 		if (MOD_BUF1 - ret > 0)
@@ -503,7 +503,7 @@ static ssize_t adsp_control_read(struct file *file,
 	for (ofs = 0 ; ofs < replysz ; ofs += 16) {
 		ret += snprintf(buf1 + ret, MOD_BUF1 - ret,
 			"0x%.4x : ", ofs);
-		hex_dump_to_buffer(&(d->fw_ipc_data.mailbx[0]) + ofs, 16, 16, 4,
+		hex_dump_to_buffer((u8 *)(&(d->fw_ipc_data.mailbx[0])) + ofs, 16, 16, 4,
 				buf1 + ret, MOD_BUF1 - ret, 0);
 		ret += strlen(buf1 + ret);
 		if (MOD_BUF1 - ret > 0)
-- 
1.7.5.4

