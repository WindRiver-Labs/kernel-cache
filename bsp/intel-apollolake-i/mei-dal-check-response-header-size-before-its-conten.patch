From c594f1b3b446144bc94ada5c8d6d669085c1525e Mon Sep 17 00:00:00 2001
From: Yael Samet <yael.samet@intel.com>
Date: Sun, 27 Nov 2016 14:40:40 +0200
Subject: [PATCH 4647/4706] mei: dal: check response header size before its
 content

commit ee1c5fe42d7598237ba142001a41ece545e389df from
git://git.yoctoproject.org/linux-yocto-4.1

Check if a message  has response header
only if its length is bigger than MAGIC header size.

Change-Id: If5b32174ccb38417a2ad8cb5b643035a77a46d40
Signed-off-by: Yael Samet <yael.samet@intel.com>
Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
---
 drivers/misc/mei/dal/bhp_impl.h    |    2 +-
 drivers/misc/mei/dal/bhp_impl_ta.c |    5 +++--
 drivers/misc/mei/dal/dal_class.c   |   10 +++-------
 3 files changed, 7 insertions(+), 10 deletions(-)

diff --git a/drivers/misc/mei/dal/bhp_impl.h b/drivers/misc/mei/dal/bhp_impl.h
index b43cac6..704397d 100644
--- a/drivers/misc/mei/dal/bhp_impl.h
+++ b/drivers/misc/mei/dal/bhp_impl.h
@@ -194,7 +194,7 @@ void bh_prep_access_denied_response(const char *cmd,
 				    struct bhp_response_header *res);
 
 bool bh_msg_is_cmd(const char *msg, size_t len);
-bool bh_msg_is_response(const char *hdr);
+bool bh_msg_is_response(const char *msg, size_t len);
 
 #define mutex_enter(s) {}
 #define mutex_exit(s)  {}
diff --git a/drivers/misc/mei/dal/bhp_impl_ta.c b/drivers/misc/mei/dal/bhp_impl_ta.c
index ac70d092..2225389 100644
--- a/drivers/misc/mei/dal/bhp_impl_ta.c
+++ b/drivers/misc/mei/dal/bhp_impl_ta.c
@@ -117,9 +117,10 @@ static const u8 BH_MSG_RESP_MAGIC[]  = {0xff, 0xa5, 0xaa, 0x55};
 static const u8 BH_MSG_CMD_MAGIC[]   = {0xff, 0xa3, 0xaa, 0x55};
 
 /* Check for response msg */
-bool bh_msg_is_response(const char *hdr)
+bool bh_msg_is_response(const char *msg, size_t len)
 {
-	return !memcmp(hdr, BH_MSG_RESP_MAGIC, sizeof(BH_MSG_RESP_MAGIC));
+	return (len >= sizeof(struct bhp_response_header)) &&
+		!memcmp(msg, BH_MSG_RESP_MAGIC, sizeof(BH_MSG_CMD_MAGIC));
 }
 
 /* Check for command msg */
diff --git a/drivers/misc/mei/dal/dal_class.c b/drivers/misc/mei/dal/dal_class.c
index 4567591..b4c246f 100644
--- a/drivers/misc/mei/dal/dal_class.c
+++ b/drivers/misc/mei/dal/dal_class.c
@@ -404,7 +404,7 @@ static void dal_dc_update_read_state(struct dal_client *dc, ssize_t len)
 			(struct transport_msg_header *)dc->ddev->bh_fw_msg.msg;
 
 	/* check BH msg magic, if it exists this is the header */
-	if (bh_msg_is_response(ddev->bh_fw_msg.msg)) {
+	if (bh_msg_is_response(ddev->bh_fw_msg.msg, len)) {
 		dc->expected_msg_size_from_fw = header->length;
 		dev_dbg(&ddev->dev, "expected_msg_size_from_fw = %d bytes read = %zd",
 			dc->expected_msg_size_from_fw, len);
@@ -471,12 +471,8 @@ static void dal_recv_cb(struct mei_cl_device *cldev, u32 events, void *context)
 	/* save msg len */
 	ddev->bh_fw_msg.len = len;
 
-	/*
-	 * set to where the msg should sent.
-	 *
-	 * Do not change the order of this ifs
-	 */
-	if (bh_msg_is_response(ddev->bh_fw_msg.msg)) {
+	/* set to which interface the msg should be sent */
+	if (bh_msg_is_response(ddev->bh_fw_msg.msg, len)) {
 		intf = get_client_by_squence_number(ddev);
 		dev_dbg(&ddev->dev, "recv_cb(): Client set by sequence number");
 		dc = ddev->clients[intf];
-- 
1.7.5.4

