From efae50cf61609786d55ed7e1cc12925d553daf56 Mon Sep 17 00:00:00 2001
From: Jayachandran B <jayachandran.b@intel.com>
Date: Fri, 1 Jul 2016 11:30:32 +0530
Subject: [PATCH 2058/2508] ASoC: Intel: Skylake: initialize boot complete
 flag appropriately.

commit b04ed733e8518360d06cde30fc94378fbdbadd47 from
https://github.com/01org/linux-apollolake-i

boot_complete flag should be initialized to false before waiting for
FW READY message.

Change-Id: I5ed7ffa6624fa2bc4fc647a77607e14a0408fd7c
Signed-off-by: Jayachandran B <jayachandran.b@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/9990
Reviewed-by: Shah, Hardik T <hardik.t.shah@intel.com>
Tested-by: Shah, Hardik T <hardik.t.shah@intel.com>
---
 sound/soc/intel/skylake/bxt-sst.c |    2 ++
 sound/soc/intel/skylake/cnl-sst.c |    4 +++-
 2 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/sound/soc/intel/skylake/bxt-sst.c b/sound/soc/intel/skylake/bxt-sst.c
index 64090c8..4d14b87 100644
--- a/sound/soc/intel/skylake/bxt-sst.c
+++ b/sound/soc/intel/skylake/bxt-sst.c
@@ -547,6 +547,8 @@ static int bxt_load_base_firmware(struct sst_dsp *ctx)
 
 	dev_dbg(ctx->dev, "In %s\n", __func__);
 
+	skl->boot_complete = false;
+
 	ret = request_firmware(&fw, "dsp_fw_release.bin", ctx->dev);
 	if (ret < 0) {
 		dev_err(ctx->dev, "Request firmware failed %d\n", ret);
diff --git a/sound/soc/intel/skylake/cnl-sst.c b/sound/soc/intel/skylake/cnl-sst.c
index c1dedde..74399a0 100644
--- a/sound/soc/intel/skylake/cnl-sst.c
+++ b/sound/soc/intel/skylake/cnl-sst.c
@@ -269,6 +269,8 @@ static int cnl_load_base_firmware(struct sst_dsp *ctx)
 	u32 size;
 	const void *data;
 
+	cnl->boot_complete = false;
+
 	ret = request_firmware(&ctx->fw, "dsp_fw_release.bin", ctx->dev);
 	if (ret < 0) {
 		dev_err(ctx->dev, "Request firmware failed: 0x%x\n", ret);
@@ -411,7 +413,6 @@ static int cnl_set_dsp_D0(struct sst_dsp *ctx, unsigned int core_id)
 	unsigned core_mask = SKL_DSP_CORE_MASK(core_id);
 	struct skl_ipc_dxstate_info dx;
 
-	cnl->boot_complete = false;
 
 	/* Re-download FW and library if needed. e.g. on coming back from S3 */
 	if (cnl->fw_loaded == false) {
@@ -427,6 +428,7 @@ static int cnl_set_dsp_D0(struct sst_dsp *ctx, unsigned int core_id)
 	}
 
 	if (core_id == 0) {
+		cnl->boot_complete = false;
 		/* enable interrupt */
 		cnl_ipc_int_enable(ctx);
 		cnl_ipc_op_int_enable(ctx);
-- 
1.7.5.4

