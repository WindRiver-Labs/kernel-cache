From c26083e64a48c6fd21bfb65924dfdf328a9524cc Mon Sep 17 00:00:00 2001
From: Dave Gordon <david.s.gordon@intel.com>
Date: Fri, 8 Apr 2016 13:53:32 -0700
Subject: [PATCH 1378/2508] Tweaking PIPE_CONTROL instructions

commit a567274fc23f0a8a998513700f261de45be4396e from
https://github.com/01org/linux-apollolake-i

Conflicts:
	drivers/gpu/drm/i915/intel_lrc.c
	drivers/gpu/drm/i915/intel_ringbuffer.c

Signed-off-by: Dave Gordon <david.s.gordon@intel.com>
Signed-off-by: Jeff McGee <jeff.mcgee@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/intel_lrc.c        |   44 +++++++++++++++++++++++++++---
 drivers/gpu/drm/i915/intel_ringbuffer.c |   15 +++++++---
 2 files changed, 50 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_lrc.c b/drivers/gpu/drm/i915/intel_lrc.c
index 46e5db2..80221bd 100644
--- a/drivers/gpu/drm/i915/intel_lrc.c
+++ b/drivers/gpu/drm/i915/intel_lrc.c
@@ -1570,6 +1570,14 @@ static inline int gen8_emit_flush_coherentl3_wa(struct intel_engine_cs *engine,
 
 	wa_ctx_emit(batch, index, GFX_OP_PIPE_CONTROL(6));
 	wa_ctx_emit(batch, index, (PIPE_CONTROL_CS_STALL |
+				   PIPE_CONTROL_STALL_AT_SCOREBOARD));
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+
+	wa_ctx_emit(batch, index, GFX_OP_PIPE_CONTROL(6));
+	wa_ctx_emit(batch, index, (PIPE_CONTROL_CS_STALL |
 				   PIPE_CONTROL_L3_DC_FLUSH));
 	wa_ctx_emit(batch, index, 0);
 	wa_ctx_emit(batch, index, 0);
@@ -1582,6 +1590,14 @@ static inline int gen8_emit_flush_coherentl3_wa(struct intel_engine_cs *engine,
 	wa_ctx_emit(batch, index, engine->scratch.gtt_offset + 256);
 	wa_ctx_emit(batch, index, 0);
 
+	wa_ctx_emit(batch, index, GFX_OP_PIPE_CONTROL(6));
+	wa_ctx_emit(batch, index, (PIPE_CONTROL_CS_STALL |
+				   PIPE_CONTROL_POSTSYNC_FLUSH));
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+
 	return index;
 }
 
@@ -1656,10 +1672,27 @@ static int gen8_init_indirectctx_bb(struct intel_engine_cs *engine,
 	scratch_addr = engine->scratch.gtt_offset + 2*CACHELINE_BYTES;
 
 	wa_ctx_emit(batch, index, GFX_OP_PIPE_CONTROL(6));
-	wa_ctx_emit(batch, index, (PIPE_CONTROL_FLUSH_L3 |
-				   PIPE_CONTROL_GEN7_GLOBAL_GTT |
-				   PIPE_CONTROL_CS_STALL |
-				   PIPE_CONTROL_QW_WRITE));
+	wa_ctx_emit(batch, index, (PIPE_CONTROL_CS_STALL |
+				   PIPE_CONTROL_STALL_AT_SCOREBOARD));
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+
+	wa_ctx_emit(batch, index, GFX_OP_PIPE_CONTROL(6));
+	wa_ctx_emit(batch, index, (PIPE_CONTROL_CS_STALL |
+				   PIPE_CONTROL_L3_DC_FLUSH |
+				   PIPE_CONTROL_FLUSH_L3));
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+	wa_ctx_emit(batch, index, 0);
+
+	wa_ctx_emit(batch, index, GFX_OP_PIPE_CONTROL(6));
+	wa_ctx_emit(batch, index, (PIPE_CONTROL_CS_STALL |
+				   PIPE_CONTROL_POSTSYNC_FLUSH |
+				   PIPE_CONTROL_QW_WRITE |
+				   PIPE_CONTROL_GEN7_GLOBAL_GTT));
 	wa_ctx_emit(batch, index, scratch_addr);
 	wa_ctx_emit(batch, index, 0);
 	wa_ctx_emit(batch, index, 0);
@@ -2179,7 +2212,8 @@ static int gen8_emit_flush_render(struct drm_i915_gem_request *request,
 
 	if (vf_flush_wa) {
 		intel_logical_ring_emit(ringbuf, GFX_OP_PIPE_CONTROL(6));
-		intel_logical_ring_emit(ringbuf, 0);
+		intel_logical_ring_emit(ringbuf, (PIPE_CONTROL_CS_STALL |
+						  PIPE_CONTROL_STALL_AT_SCOREBOARD));
 		intel_logical_ring_emit(ringbuf, 0);
 		intel_logical_ring_emit(ringbuf, 0);
 		intel_logical_ring_emit(ringbuf, 0);
diff --git a/drivers/gpu/drm/i915/intel_ringbuffer.c b/drivers/gpu/drm/i915/intel_ringbuffer.c
index ddf4d2c..f6c1b0c 100644
--- a/drivers/gpu/drm/i915/intel_ringbuffer.c
+++ b/drivers/gpu/drm/i915/intel_ringbuffer.c
@@ -293,15 +293,18 @@ gen7_render_ring_cs_stall_wa(struct drm_i915_gem_request *req)
 	struct intel_engine_cs *engine = req->engine;
 	int ret;
 
-	ret = intel_ring_begin(req, 4);
+	ret = intel_ring_begin(req, 6);
 	if (ret)
 		return ret;
 
-	intel_ring_emit(engine, GFX_OP_PIPE_CONTROL(4));
+	intel_ring_emit(engine, GFX_OP_PIPE_CONTROL(5));
 	intel_ring_emit(engine, PIPE_CONTROL_CS_STALL |
 			      PIPE_CONTROL_STALL_AT_SCOREBOARD);
 	intel_ring_emit(engine, 0);
 	intel_ring_emit(engine, 0);
+	intel_ring_emit(engine, 0);
+	intel_ring_emit(engine, MI_NOOP);
+
 	intel_ring_advance(engine);
 
 	return 0;
@@ -358,14 +361,17 @@ gen7_render_ring_flush(struct drm_i915_gem_request *req,
 		gen7_render_ring_cs_stall_wa(req);
 	}
 
-	ret = intel_ring_begin(req, 4);
+	ret = intel_ring_begin(req, 6);
 	if (ret)
 		return ret;
 
-	intel_ring_emit(engine, GFX_OP_PIPE_CONTROL(4));
+	intel_ring_emit(engine, GFX_OP_PIPE_CONTROL(5));
 	intel_ring_emit(engine, flags);
 	intel_ring_emit(engine, scratch_addr);
 	intel_ring_emit(engine, 0);
+	intel_ring_emit(engine, 0);
+	intel_ring_emit(engine, MI_NOOP);
+
 	intel_ring_advance(engine);
 
 	return 0;
@@ -388,6 +394,7 @@ gen8_emit_pipe_control(struct drm_i915_gem_request *req,
 	intel_ring_emit(engine, 0);
 	intel_ring_emit(engine, 0);
 	intel_ring_emit(engine, 0);
+
 	intel_ring_advance(engine);
 
 	return 0;
-- 
1.7.5.4

