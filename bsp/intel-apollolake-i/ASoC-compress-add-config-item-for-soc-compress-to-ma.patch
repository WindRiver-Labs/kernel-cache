From 063f3ef1a2f1f04622abb1af41d24d7e641f376f Mon Sep 17 00:00:00 2001
From: Jie Yang <yang.jie@intel.com>
Date: Tue, 13 Oct 2015 23:41:00 +0800
Subject: [PATCH 2025/2508] ASoC: compress: add config item for soc-compress
 to make it compiled only when needed

commit 78bda2c9dd21a0382428f48616343301dcd33d14 from
https://github.com/01org/linux-apollolake-i

We don't always need soc-compress in soc, here add a config item
SND_SOC_COMPRESS, when nobody select it, the soc-compress will
not be compiled.

Here also change Kconfig to 'select SND_SOC_COMPRESS' for drivers
that needed soc-compress.

Change-Id: I436b9875e46bd9acccaab4417e76bdc7b5784d7d
Signed-off-by: Jie Yang <yang.jie@intel.com>
Signed-off-by: Mark Brown <broonie@kernel.org>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/9682
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Jayanti, Satya Charitardha <satya.charitardha.jayanti@intel.com>
---
 include/sound/soc-dai.h                      |    2 +-
 include/sound/soc.h                          |    4 +++-
 sound/soc/Kconfig                            |    6 +++++-
 sound/soc/Makefile                           |    4 +++-
 sound/soc/intel/Kconfig                      |    6 ++++++
 sound/soc/intel/atom/sst-mfld-platform-pcm.c |    2 +-
 sound/soc/intel/skylake/skl-pcm.c            |   12 ++++++------
 sound/soc/soc-compress.c                     |   12 ++++++++++--
 sound/soc/soc-core.c                         |    4 ++--
 9 files changed, 37 insertions(+), 15 deletions(-)

diff --git a/include/sound/soc-dai.h b/include/sound/soc-dai.h
index 592e08f..278d9e8 100644
--- a/include/sound/soc-dai.h
+++ b/include/sound/soc-dai.h
@@ -238,7 +238,7 @@ struct snd_soc_dai_driver {
 	int (*suspend)(struct snd_soc_dai *dai);
 	int (*resume)(struct snd_soc_dai *dai);
 	/* compress dai */
-	bool compress_dai;
+	int (*compress_new)(struct snd_soc_pcm_runtime *rtd, int num);
 	/* DAI is also used for the control bus */
 	bool bus_control;
 
diff --git a/include/sound/soc.h b/include/sound/soc.h
index 04f4d81..f02fa55 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -440,7 +440,9 @@ int snd_soc_platform_read(struct snd_soc_platform *platform,
 int snd_soc_platform_write(struct snd_soc_platform *platform,
 					unsigned int reg, unsigned int val);
 int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num);
-int soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num);
+#ifdef CONFIG_SND_SOC_COMPRESS
+int snd_soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num);
+#endif
 
 struct snd_pcm_substream *snd_soc_get_dai_substream(struct snd_soc_card *card,
 		const char *dai_link, int stream);
diff --git a/sound/soc/Kconfig b/sound/soc/Kconfig
index 3ba52da..91f499c 100644
--- a/sound/soc/Kconfig
+++ b/sound/soc/Kconfig
@@ -9,7 +9,6 @@ menuconfig SND_SOC
 	select SND_JACK if INPUT=y || INPUT=SND
 	select REGMAP_I2C if I2C
 	select REGMAP_SPI if SPI_MASTER
-	select SND_COMPRESS_OFFLOAD
 	---help---
 
 	  If you want ASoC support, you should say Y here and also to the
@@ -30,6 +29,11 @@ config SND_SOC_GENERIC_DMAENGINE_PCM
 	bool
 	select SND_DMAENGINE_PCM
 
+config SND_SOC_COMPRESS
+	bool
+	select SND_COMPRESS_OFFLOAD
+
+
 # All the supported SoCs
 source "sound/soc/adi/Kconfig"
 source "sound/soc/atmel/Kconfig"
diff --git a/sound/soc/Makefile b/sound/soc/Makefile
index c2ef1ec..e58b2f3 100644
--- a/sound/soc/Makefile
+++ b/sound/soc/Makefile
@@ -1,6 +1,8 @@
 snd-soc-core-objs := soc-core.o soc-dapm.o soc-jack.o soc-cache.o soc-utils.o
-snd-soc-core-objs += soc-pcm.o soc-compress.o soc-io.o soc-devres.o soc-ops.o
+snd-soc-core-objs += soc-pcm.o soc-io.o soc-devres.o soc-ops.o
 snd-soc-core-objs += soc-topology.o
+snd-soc-core-$(CONFIG_SND_SOC_COMPRESS) += soc-compress.o
+
 
 ifneq ($(CONFIG_SND_SOC_GENERIC_DMAENGINE_PCM),)
 snd-soc-core-objs += soc-generic-dmaengine-pcm.o
diff --git a/sound/soc/intel/Kconfig b/sound/soc/intel/Kconfig
index b3cf2a6..00c540f 100644
--- a/sound/soc/intel/Kconfig
+++ b/sound/soc/intel/Kconfig
@@ -12,6 +12,7 @@ config SND_MFLD_MACHINE
 
 config SND_SST_MFLD_PLATFORM
 	tristate
+	select SND_SOC_COMPRESS
 
 config SND_SST_IPC
 	tristate
@@ -162,6 +163,7 @@ config SND_SOC_INTEL_BXT_MRGFLD_MACH
 	select SND_SOC_INTEL_SKYLAKE
 	select SND_SOC_DMIC
 	select SND_SOC_HDAC_HDMI
+	select SND_SOC_COMPRESS
         help
         This adds support for ASoC machine driver . This will create an alsa
         sound card.
@@ -172,6 +174,7 @@ config SND_SOC_INTEL_BXTP_IVI_HU_MACH
         tristate "ASoC Audio driver for BXTP IVI HU with Dummy Codec"
         select SND_SOC_INTEL_SST
         select SND_SOC_INTEL_SKYLAKE
+	select SND_SOC_COMPRESS
         default n
         help
         This adds support for ASoC machine driver for Broxton-P platforms
@@ -183,6 +186,7 @@ config SND_SOC_INTEL_BXTP_IVI_RSE_MACH
         tristate "ASoC Audio driver for BXTP IVI RSE with Dummy Codecs"
         select SND_SOC_INTEL_SST
         select SND_SOC_INTEL_SKYLAKE
+	select SND_SOC_COMPRESS
         default n
         help
         This adds support for ASoC machine driver for Broxton-P platforms
@@ -221,6 +225,7 @@ config SND_SOC_INTEL_BXT_RT298_MACH
         select SND_SOC_INTEL_SKYLAKE
         select SND_SOC_RT298
         select SND_SOC_DMIC
+	select SND_SOC_COMPRESS
         default n
         help
         This adds support for ASoC machine driver for Broxton platforms
@@ -242,6 +247,7 @@ config SND_SOC_INTEL_CNL_WM8281_MACH
 	select SND_SOC_INTEL_SST
 	select SND_SOC_INTEL_SKYLAKE
 	select SND_SOC_DMIC
+	select SND_SOC_COMPRESS
         help
         This adds support for ASoC machine driver . This will create an alsa
         sound card.
diff --git a/sound/soc/intel/atom/sst-mfld-platform-pcm.c b/sound/soc/intel/atom/sst-mfld-platform-pcm.c
index dc1ef62..0f309f8 100644
--- a/sound/soc/intel/atom/sst-mfld-platform-pcm.c
+++ b/sound/soc/intel/atom/sst-mfld-platform-pcm.c
@@ -488,7 +488,7 @@ static struct snd_soc_dai_driver sst_platform_dai[] = {
 },
 {
 	.name = "compress-cpu-dai",
-	.compress_dai = 1,
+	.compress_new = snd_soc_new_compress,
 	.ops = &sst_compr_dai_ops,
 	.playback = {
 		.stream_name = "Compress Playback",
diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index 0bbbfc0..6030563 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -883,7 +883,7 @@ struct skl_dsp_notify_ops cb_ops = {
 static struct snd_soc_dai_driver skl_platform_dai[] = {
 {
 	.name = "TraceBuffer0 Pin",
-	.compress_dai = 1,
+	.compress_new = snd_soc_new_compress,
 	.cops = &skl_trace_compr_ops,
 	.capture = {
 		.stream_name = "TraceBuffer0 Capture",
@@ -893,7 +893,7 @@ static struct snd_soc_dai_driver skl_platform_dai[] = {
 },
 {
 	.name = "TraceBuffer1 Pin",
-	.compress_dai = 1,
+	.compress_new = snd_soc_new_compress,
 	.cops = &skl_trace_compr_ops,
 	.capture = {
 		.stream_name = "TraceBuffer1 Capture",
@@ -903,7 +903,7 @@ static struct snd_soc_dai_driver skl_platform_dai[] = {
 },
 {
 	.name = "TraceBuffer2 Pin",
-	.compress_dai = 1,
+	.compress_new = snd_soc_new_compress,
 	.cops = &skl_trace_compr_ops,
 	.capture = {
 		.stream_name = "TraceBuffer2 Capture",
@@ -913,7 +913,7 @@ static struct snd_soc_dai_driver skl_platform_dai[] = {
 },
 {
 	.name = "TraceBuffer3 Pin",
-	.compress_dai = 1,
+	.compress_new = snd_soc_new_compress,
 	.cops = &skl_trace_compr_ops,
 	.capture = {
 		.stream_name = "TraceBuffer3 Capture",
@@ -970,7 +970,7 @@ static struct snd_soc_dai_driver skl_platform_dai[] = {
 },
 {
 	.name = "Compress Probe0 Pin",
-	.compress_dai = 1,
+	.compress_new = snd_soc_new_compress,
 	.cops = &skl_probe_compr_ops,
 	.playback = {
 		.stream_name = "Probe Playback",
@@ -979,7 +979,7 @@ static struct snd_soc_dai_driver skl_platform_dai[] = {
 },
 {
 	.name = "Compress Probe1 Pin",
-	.compress_dai = 1,
+	.compress_new = snd_soc_new_compress,
 	.cops = &skl_probe_compr_ops,
 	.capture = {
 			.stream_name = "Probe Capture",
diff --git a/sound/soc/soc-compress.c b/sound/soc/soc-compress.c
index 5ebbe4e..ef58daa 100644
--- a/sound/soc/soc-compress.c
+++ b/sound/soc/soc-compress.c
@@ -705,8 +705,15 @@ static struct snd_compr_ops soc_compr_dyn_ops = {
 	.get_codec_caps = soc_compr_get_codec_caps
 };
 
-/* create a new compress */
-int soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num)
+/**
+ * snd_soc_new_compress - create a new compress.
+ *
+ * @rtd: The runtime for which we will create compress
+ * @num: the device index number (zero based - shared with normal PCMs)
+ *
+ * Return: 0 for success, else error.
+ */
+int snd_soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num)
 {
 	struct snd_soc_codec *codec = rtd->codec;
 	struct snd_soc_platform *platform = rtd->platform;
@@ -819,3 +826,4 @@ compr_err:
 	kfree(compr);
 	return ret;
 }
+EXPORT_SYMBOL_GPL(snd_soc_new_compress);
diff --git a/sound/soc/soc-core.c b/sound/soc/soc-core.c
index adb5a31..89203c1 100644
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@ -1387,9 +1387,9 @@ static int soc_probe_link_dais(struct snd_soc_card *card, int num, int order)
 		soc_dpcm_debugfs_add(rtd);
 #endif
 
-	if (cpu_dai->driver->compress_dai) {
+	if (cpu_dai->driver->compress_new) {
 		/*create compress_device"*/
-		ret = soc_new_compress(rtd, num);
+		ret = cpu_dai->driver->compress_new(rtd, num);
 		if (ret < 0) {
 			dev_err(card->dev, "ASoC: can't create compress %s\n",
 					 dai_link->stream_name);
-- 
1.7.5.4

