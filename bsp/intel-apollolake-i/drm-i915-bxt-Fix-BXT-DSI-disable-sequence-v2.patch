From e5c6a2b1689acf81c255c252aba767bf0cd6b311 Mon Sep 17 00:00:00 2001
From: Uma Shankar <uma.shankar@intel.com>
Date: Tue, 20 Dec 2016 10:24:28 -0800
Subject: [PATCH 4457/4706] drm/i915/bxt: Fix BXT DSI disable sequence (v2)

commit 4b0522198825c7ca9dcf2dff2531187c2f86ad57 from
git://git.yoctoproject.org/linux-yocto-4.1

Fix BXT DSI disable sequence as per latest updates in bspec.

v2: rebased on IOTG release (Bob)

Signed-off-by: Uma Shankar <uma.shankar@intel.com>
Signed-off-by: Deepak M <m.deepak@intel.com>
Signed-off-by: Bob Paauwe <bob.j.paauwe@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi.c |   28 +++++++++++++++++++++++-----
 1 files changed, 23 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index 9495767..ed7eab7 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -631,8 +631,10 @@ static void intel_dsi_disable(struct intel_encoder *encoder)
 		for_each_dsi_port(port, intel_dsi->ports)
 			wait_for_dsi_fifo_empty(intel_dsi, port);
 
-		intel_dsi_port_disable(encoder);
-		msleep(2);
+		if (!IS_BROXTON(dev)) {
+			intel_dsi_port_disable(encoder);
+			msleep(2);
+		}
 	}
 
 	for_each_dsi_port(port, intel_dsi->ports) {
@@ -640,7 +642,8 @@ static void intel_dsi_disable(struct intel_encoder *encoder)
 		I915_WRITE(MIPI_DEVICE_READY(port), 0x0);
 
 		intel_dsi_reset_clocks(encoder, port);
-		I915_WRITE(MIPI_EOT_DISABLE(port), CLOCKSTOP);
+		if (intel_dsi->clock_stop)
+			I915_WRITE(MIPI_EOT_DISABLE(port), CLOCKSTOP);
 
 		temp = I915_READ(MIPI_DSI_FUNC_PRG(port));
 		temp &= ~VID_MODE_FORMAT_MASK;
@@ -713,7 +716,20 @@ static void intel_dsi_post_disable(struct intel_encoder *encoder,
 
 	intel_dsi_disable(encoder);
 
-	intel_dsi_clear_device_ready(encoder);
+	if (IS_BROXTON(dev_priv)) {
+		enum port port;
+		/*
+		 * Reset the DSI Device ready first for both ports
+		 * and then port control registers for both ports
+		 */
+		for_each_dsi_port(port, intel_dsi->ports)
+			I915_WRITE(MIPI_DEVICE_READY(port), 0);
+
+		for_each_dsi_port(port, intel_dsi->ports)
+			I915_WRITE(BXT_MIPI_PORT_CTRL(port), 0);
+	} else {
+		intel_dsi_clear_device_ready(encoder);
+	}
 
 	if (IS_VALLEYVIEW(dev_priv) || IS_CHERRYVIEW(dev_priv)) {
 		u32 val;
@@ -724,9 +740,11 @@ static void intel_dsi_post_disable(struct intel_encoder *encoder,
 	}
 
 	drm_panel_unprepare(intel_dsi->panel);
-
 	msleep(intel_dsi->panel_off_delay);
 
+	intel_disable_dsi_pll(encoder);
+	msleep(intel_dsi->panel_pwr_cycle_delay);
+
 	/* Panel Disable over CRC PMIC */
 	if (intel_dsi->gpio_panel)
 		gpiod_set_value_cansleep(intel_dsi->gpio_panel, 0);
-- 
1.7.5.4

