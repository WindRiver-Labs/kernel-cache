From e8f86b6eec12ce923d042c0adb391f57764d74fc Mon Sep 17 00:00:00 2001
From: Adrian Hunter <adrian.hunter@intel.com>
Date: Thu, 6 Oct 2016 14:24:36 +0300
Subject: [PATCH 05/68] mmc: mmc: Relax checking for switch errors after eMMC
 timing switches

commit f6ce271205aff11bf12818521e080aae417580b8 from
git://git.yoctoproject.org/linux-yocto-4.1

In some cases, some eMMC will produce CRC errors when checking for switch
errors after timing switches but before the final bus conditions are set.
CRC error means any of the response bits might be flipped, so checking the
SWITCH_ERROR bit (or other bits) is not meaningful. Equally, SWITCH_ERROR
is cleared as soon the response is sent, so retrying is pointless. The
options are to treat it as a fatal error, or to assume the switch was
successful and continue. The best option is to continue noting that the
block driver will anyway attempt a full reset if there are ongoing errors.

Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
Signed-off-by: Lim Key Seong <key.seong.lim@intel.com>
---
 drivers/mmc/core/mmc.c |   14 +++++++++++++-
 1 files changed, 13 insertions(+), 1 deletions(-)

diff --git a/drivers/mmc/core/mmc.c b/drivers/mmc/core/mmc.c
index 5d504f6..6400c10 100644
--- a/drivers/mmc/core/mmc.c
+++ b/drivers/mmc/core/mmc.c
@@ -1054,7 +1054,19 @@ static int mmc_switch_status(struct mmc_card *card)
 	u32 status;
 	int err;
 
-	err = mmc_send_status(card, &status);
+	err = mmc_send_status_no_retries(card, &status);
+	/*
+	 * CRC error means any of the response bits might be flipped, so
+	 * checking the SWITCH_ERROR bit (or other bits) is not meaningful.
+	 * Equally, SWITCH_ERROR is cleared as soon the response is sent, so
+	 * retrying is pointless. Best option is to assume no error.
+	 */
+	if (err == -EILSEQ) {
+		pr_debug("%s: Ignoring CMD13 CRC error and status response\n",
+			 mmc_hostname(card->host));
+		return 0;
+	}
+
 	if (err)
 		return err;
 
-- 
1.7.5.4

