From d5ab51b7333234dea63b7a1cbc46edba66f361ea Mon Sep 17 00:00:00 2001
From: G Kranthi <gudishax.kranthikumar@intel.com>
Date: Wed, 8 Jun 2016 11:13:14 +0530
Subject: [PATCH 2088/2508] ASoC: Intel: Skylake: Fix large config read

commit 5ad49ba28b5bcf643b14b7a09b2562e7c36fe9f8 from
https://github.com/01org/linux-apollolake-i

If widget status is ON, then read request for getting large
params is sent to DSP. The read request IPC should have
type and length in it's payload. So fix existing read
request by sending right payload.

Change-Id: Ic042454faa5459036a0b077f21bcbcbed36307bf
Signed-off-by: G Kranthi <gudishax.kranthikumar@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/9545
Reviewed-by: Jayanti, Satya Charitardha <satya.charitardha.jayanti@intel.com>
Tested-by: Jayanti, Satya Charitardha <satya.charitardha.jayanti@intel.com>
---
 sound/soc/intel/skylake/skl-sst-ipc.h  |    5 +++++
 sound/soc/intel/skylake/skl-topology.c |   21 ++++++++++++++++++---
 2 files changed, 23 insertions(+), 3 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-sst-ipc.h b/sound/soc/intel/skylake/skl-sst-ipc.h
index e2059c2..e0b0554 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.h
+++ b/sound/soc/intel/skylake/skl-sst-ipc.h
@@ -133,6 +133,11 @@ struct skl_ipc_bind_unbind_msg {
 	bool bind;
 };
 
+struct skl_ipc_large_payload {
+	u32 module_id;
+	u32 param_data_size;
+};
+
 struct skl_ipc_large_config_msg {
 	u32 module_id;
 	u32 instance_id;
diff --git a/sound/soc/intel/skylake/skl-topology.c b/sound/soc/intel/skylake/skl-topology.c
index 6cf9851..3933e29 100644
--- a/sound/soc/intel/skylake/skl-topology.c
+++ b/sound/soc/intel/skylake/skl-topology.c
@@ -1553,13 +1553,28 @@ static int skl_tplg_tlv_control_get(struct snd_kcontrol *kcontrol,
 	struct skl *skl = get_skl_ctx(dapm->dev);
 	struct skl_notify_data *notify_data;
 	int ret = 0;
+	struct skl_ipc_large_config_msg msg;
+	struct skl_ipc_large_payload tx_param;
 
 	dev_dbg(dapm->dev, "In%s control_name=%s, id=%u\n", __func__, kcontrol->id.name, bc->param_id);
 	dev_dbg(dapm->dev, "size = %u (%#x), max = %#x\n", size, size, bc->max);
 
-	if (w->power)
-		skl_get_module_params(skl->skl_sst, (void *)bc->params,
-				      bc->max, bc->param_id, mconfig);
+	if (w->power) {
+		if (bc->param_id == 0xFF){
+			msg.module_id = mconfig->id.module_id;
+			msg.instance_id = mconfig->id.instance_id;
+			msg.param_data_size = bc->max;
+			msg.large_param_id = bc->param_id;
+			memcpy(&tx_param.module_id, bc->params, sizeof(u32));
+			memcpy(&tx_param.param_data_size, &bc->max, sizeof(u32));
+			dev_dbg(dapm->dev, "getting module params size=%d\n", bc->max);
+			skl_ipc_get_large_config(&skl->skl_sst->ipc, &msg, (u32 *)bc->params,
+							(u32 *)&tx_param, sizeof(tx_param));
+		} else {
+			skl_get_module_params(skl->skl_sst, (void *)bc->params,
+				bc->max, bc->param_id, mconfig);
+		}
+	}
 
 	/* decrement size for TLV header */
 	size -= 2 * sizeof(u32);
-- 
1.7.5.4

