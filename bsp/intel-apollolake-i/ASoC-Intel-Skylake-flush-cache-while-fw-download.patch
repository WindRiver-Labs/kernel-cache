From 0296403c12b0089a5aff014ba1e4bf47ecafac19 Mon Sep 17 00:00:00 2001
From: Pramod Kumar Yadav <pramodx.k.yadav@intel.com>
Date: Tue, 1 Mar 2016 09:45:25 +0530
Subject: [PATCH 1876/2508] ASoC: Intel: Skylake: flush cache while fw
 download

commit 21a1e9a7c06919875dbbf96a94a7dca855c982b7 from
https://github.com/01org/linux-apollolake-i

    Although memory allcoated for Firmware binary copy is
    uncacheble, firmware download process fails during
    security authentication. This is root caused to
    cache coherency issues.

    Flush the cache explicitely before starting the
    DMA.
    Also increase the FW download timeout, since security
    authentication requires more time.
    Add some more logging around FW download cases.

Change-Id: Id3019036d47cea8bb9c680c66d041ef7b7dc75c9
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8308
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/bxt-sst.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/sound/soc/intel/skylake/bxt-sst.c b/sound/soc/intel/skylake/bxt-sst.c
index 569a1c2..1374c1c 100644
--- a/sound/soc/intel/skylake/bxt-sst.c
+++ b/sound/soc/intel/skylake/bxt-sst.c
@@ -24,6 +24,7 @@
 #include <linux/firmware.h>
 #include <linux/kernel.h>
 #include <linux/device.h>
+#include <asm/cacheflush.h>
 
 #include "../common/sst-dsp.h"
 #include "../common/sst-ipc.h"
@@ -33,7 +34,7 @@
 
 #define FW_ROM_INIT_DONE                0x1
 
-#define BXT_FW_ROM_BASEFW_ENTERED_TIMEOUT	300
+#define BXT_FW_ROM_BASEFW_ENTERED_TIMEOUT	3000
 #define BXT_ROM_INIT_HIPCIE_TIMEOUT	500
 #define BXT_ROM_INIT_DONE_TIMEOUT	500
 #define BXT_IPC_PURGE_FW	0x01004000
@@ -265,6 +266,8 @@ static int sst_bxt_prepare_fw(struct sst_dsp *ctx, const void *fwdata,
 
 	ctx->dsp_ops.stream_tag = stream_tag;
 	memcpy(ctx->dmab.area, fwdata, fwsize);
+	/* make sure FW is flushed to DDR */
+	clflush_cache_range(ctx->dmab.area, fwsize);
 
 #ifdef BXT_ROM_BUG_WA
 	/* Step 1.a: Power up core 0 and core1 (Extra step due to ROM bug) */
@@ -622,6 +625,9 @@ static int bxt_load_base_firmware(struct sst_dsp *ctx)
 
 	if (ret < 0) {
 		dev_err(ctx->dev, "Transfer firmware failed %d\n", ret);
+		dev_info(ctx->dev, "Error code=0x%x: FW status=0x%x\n",
+				sst_dsp_shim_read(ctx, BXT_ADSP_ERROR_CODE),
+				sst_dsp_shim_read(ctx, BXT_ADSP_REG_FW_STATUS));
 		skl_dsp_disable_core(ctx, SKL_DSP_CORE0_MASK);
 	} else {
 		dev_dbg(ctx->dev, "Firmware download successful\n");
-- 
1.7.5.4

