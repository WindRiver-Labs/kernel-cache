From 8265742a1753e58e59b665be54c1469cef912d58 Mon Sep 17 00:00:00 2001
From: Jayachandran B <jayachandran.b@intel.com>
Date: Tue, 8 Mar 2016 12:38:26 +0530
Subject: [PATCH 1910/2508] ASoC: Intel: common: Add IPC Tx API with user
 specified timeout

commit b97d97b6ecdb9a330c160d277874c00343922945 from
https://github.com/01org/linux-apollolake-i

The current IPC library API for IPC Tx internally uses a default
timeout of 300ms. But this timeout value may not be applicable
for all IPCs. Hence provide an API with the facility for the API
user to specify the timeout value.

Signed-off-by: Jayachandran B <jayachandran.b@intel.com>
Change-Id: I6ad0672024a4f72630f0e0ed0d495d029512483e
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-23222
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8361
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/common/sst-ipc.c |   26 ++++++++++++++++++++------
 sound/soc/intel/common/sst-ipc.h |    4 ++++
 2 files changed, 24 insertions(+), 6 deletions(-)

diff --git a/sound/soc/intel/common/sst-ipc.c b/sound/soc/intel/common/sst-ipc.c
index 9e17878..b37040a 100644
--- a/sound/soc/intel/common/sst-ipc.c
+++ b/sound/soc/intel/common/sst-ipc.c
@@ -53,14 +53,14 @@ static struct ipc_message *msg_get_empty(struct sst_generic_ipc *ipc)
 }
 
 static int tx_wait_done(struct sst_generic_ipc *ipc,
-	struct ipc_message *msg, void *rx_data)
+	struct ipc_message *msg, void *rx_data, int timeout)
 {
 	unsigned long flags;
 	int ret;
 
 	/* wait for DSP completion (in all cases atm inc pending) */
 	ret = wait_event_timeout(msg->waitq, msg->complete,
-		msecs_to_jiffies(IPC_TIMEOUT_MSECS));
+		msecs_to_jiffies(timeout));
 
 	spin_lock_irqsave(&ipc->dsp->spinlock, flags);
 	if (ret == 0) {
@@ -84,7 +84,7 @@ static int tx_wait_done(struct sst_generic_ipc *ipc,
 
 static int ipc_tx_message(struct sst_generic_ipc *ipc, u64 header,
 	void *tx_data, size_t tx_bytes, void *rx_data,
-	size_t rx_bytes, int wait)
+	size_t rx_bytes, int wait, int timeout)
 {
 	struct ipc_message *msg;
 	unsigned long flags;
@@ -114,7 +114,7 @@ static int ipc_tx_message(struct sst_generic_ipc *ipc, u64 header,
 	queue_kthread_work(&ipc->kworker, &ipc->kwork);
 
 	if (wait)
-		return tx_wait_done(ipc, msg, rx_data);
+		return tx_wait_done(ipc, msg, rx_data, timeout);
 	else
 		return 0;
 }
@@ -191,19 +191,33 @@ static void ipc_tx_msgs(struct kthread_work *work)
 	spin_unlock_irqrestore(&ipc->dsp->spinlock, flags);
 }
 
+/*
+ * Tx message with wait, with default timeout specified by
+ * IPC_TIMEOUT_MSECS
+ */
 int sst_ipc_tx_message_wait(struct sst_generic_ipc *ipc, u64 header,
 	void *tx_data, size_t tx_bytes, void *rx_data, size_t rx_bytes)
 {
 	return ipc_tx_message(ipc, header, tx_data, tx_bytes,
-		rx_data, rx_bytes, 1);
+		rx_data, rx_bytes, 1, IPC_TIMEOUT_MSECS);
 }
 EXPORT_SYMBOL_GPL(sst_ipc_tx_message_wait);
 
+ /* Tx message with wait, with timeout specified by the caller */
+int sst_ipc_tx_message_wait_timeout(struct sst_generic_ipc *ipc, u64 header,
+	void *tx_data, size_t tx_bytes, void *rx_data, size_t rx_bytes,
+	int timeout)
+{
+	return ipc_tx_message(ipc, header, tx_data, tx_bytes,
+		rx_data, rx_bytes, 1, timeout);
+}
+EXPORT_SYMBOL_GPL(sst_ipc_tx_message_wait_timeout);
+
 int sst_ipc_tx_message_nowait(struct sst_generic_ipc *ipc, u64 header,
 	void *tx_data, size_t tx_bytes)
 {
 	return ipc_tx_message(ipc, header, tx_data, tx_bytes,
-		NULL, 0, 0);
+		NULL, 0, 0, 0);
 }
 EXPORT_SYMBOL_GPL(sst_ipc_tx_message_nowait);
 
diff --git a/sound/soc/intel/common/sst-ipc.h b/sound/soc/intel/common/sst-ipc.h
index ceb7e46..2926f75 100644
--- a/sound/soc/intel/common/sst-ipc.h
+++ b/sound/soc/intel/common/sst-ipc.h
@@ -78,6 +78,10 @@ struct sst_generic_ipc {
 int sst_ipc_tx_message_wait(struct sst_generic_ipc *ipc, u64 header,
 	void *tx_data, size_t tx_bytes, void *rx_data, size_t rx_bytes);
 
+int sst_ipc_tx_message_wait_timeout(struct sst_generic_ipc *ipc, u64 header,
+	void *tx_data, size_t tx_bytes, void *rx_data, size_t rx_bytes,
+	int timeout);
+
 int sst_ipc_tx_message_nowait(struct sst_generic_ipc *ipc, u64 header,
 	void *tx_data, size_t tx_bytes);
 
-- 
1.7.5.4

