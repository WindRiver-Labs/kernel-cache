From 7ab57d88ba740dfdfb8ddc3d2f91af2913417362 Mon Sep 17 00:00:00 2001
From: Matt Roper <matthew.d.roper@intel.com>
Date: Wed, 14 Dec 2016 15:16:07 -0800
Subject: [PATCH 4007/4706] Revert "drm/i915: Use SSE4.1 movntdqa to
 accelerate reads from WC memory"

commit 19074e549599e2d1197e04157c37db920a6c21bb from
git://git.yoctoproject.org/linux-yocto-4.1

This reverts commit 10c57d1da8a255c96330593f7bf465a066809854.
---
 drivers/gpu/drm/i915/Makefile      |    3 -
 drivers/gpu/drm/i915/i915_drv.c    |    2 -
 drivers/gpu/drm/i915/i915_drv.h    |    3 -
 drivers/gpu/drm/i915/i915_memcpy.c |  101 ------------------------------------
 4 files changed, 0 insertions(+), 109 deletions(-)
 delete mode 100644 drivers/gpu/drm/i915/i915_memcpy.c

diff --git a/drivers/gpu/drm/i915/Makefile b/drivers/gpu/drm/i915/Makefile
index 3412413..dda724f 100644
--- a/drivers/gpu/drm/i915/Makefile
+++ b/drivers/gpu/drm/i915/Makefile
@@ -3,15 +3,12 @@
 # Direct Rendering Infrastructure (DRI) in XFree86 4.1.0 and higher.
 
 subdir-ccflags-$(CONFIG_DRM_I915_WERROR) := -Werror
-subdir-ccflags-y += \
-	$(call as-instr,movntdqa (%eax)$(comma)%xmm0,-DCONFIG_AS_MOVNTDQA)
 
 # Please keep these build lists sorted!
 
 # core driver code
 i915-y := i915_drv.o \
 	  i915_irq.o \
-	  i915_memcpy.o \
 	  i915_params.o \
 	  i915_pci.o \
           i915_suspend.o \
diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index e076e39..cad92ce 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -827,8 +827,6 @@ static int i915_driver_init_early(struct drm_i915_private *dev_priv,
 	mutex_init(&dev_priv->wm.wm_mutex);
 	mutex_init(&dev_priv->pps_mutex);
 
-	i915_memcpy_init_early(dev_priv);
-
 	ret = i915_workqueues_init(dev_priv);
 	if (ret < 0)
 		return ret;
diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index f32073c..4e8feef 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -3926,9 +3926,6 @@ static inline bool __i915_request_irq_complete(struct drm_i915_gem_request *req)
 	return false;
 }
 
-void i915_memcpy_init_early(struct drm_i915_private *dev_priv);
-bool i915_memcpy_from_wc(void *dst, const void *src, unsigned long len);
-
 #define ptr_unpack_bits(ptr, bits) ({					\
 	unsigned long __v = (unsigned long)(ptr);			\
 	(bits) = __v & ~PAGE_MASK;					\
diff --git a/drivers/gpu/drm/i915/i915_memcpy.c b/drivers/gpu/drm/i915/i915_memcpy.c
deleted file mode 100644
index 6f1df0e..0000000
--- a/drivers/gpu/drm/i915/i915_memcpy.c
+++ /dev/null
@@ -1,101 +0,0 @@
-/*
- * Copyright Â© 2016 Intel Corporation
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice (including the next
- * paragraph) shall be included in all copies or substantial portions of the
- * Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
- * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
- * IN THE SOFTWARE.
- *
- */
-
-#include <linux/kernel.h>
-#include <asm/fpu/api.h>
-
-#include "i915_drv.h"
-
-DEFINE_STATIC_KEY_FALSE(has_movntdqa);
-
-#ifdef CONFIG_AS_MOVNTDQA
-static void __memcpy_ntdqa(void *dst, const void *src, unsigned long len)
-{
-	kernel_fpu_begin();
-
-	len >>= 4;
-	while (len >= 4) {
-		asm("movntdqa   (%0), %%xmm0\n"
-		    "movntdqa 16(%0), %%xmm1\n"
-		    "movntdqa 32(%0), %%xmm2\n"
-		    "movntdqa 48(%0), %%xmm3\n"
-		    "movaps %%xmm0,   (%1)\n"
-		    "movaps %%xmm1, 16(%1)\n"
-		    "movaps %%xmm2, 32(%1)\n"
-		    "movaps %%xmm3, 48(%1)\n"
-		    :: "r" (src), "r" (dst) : "memory");
-		src += 64;
-		dst += 64;
-		len -= 4;
-	}
-	while (len--) {
-		asm("movntdqa (%0), %%xmm0\n"
-		    "movaps %%xmm0, (%1)\n"
-		    :: "r" (src), "r" (dst) : "memory");
-		src += 16;
-		dst += 16;
-	}
-
-	kernel_fpu_end();
-}
-#endif
-
-/**
- * i915_memcpy_from_wc: perform an accelerated *aligned* read from WC
- * @dst: destination pointer
- * @src: source pointer
- * @len: how many bytes to copy
- *
- * i915_memcpy_from_wc copies @len bytes from @src to @dst using
- * non-temporal instructions where available. Note that all arguments
- * (@src, @dst) must be aligned to 16 bytes and @len must be a multiple
- * of 16.
- *
- * To test whether accelerated reads from WC are supported, use
- * i915_memcpy_from_wc(NULL, NULL, 0);
- *
- * Returns true if the copy was successful, false if the preconditions
- * are not met.
- */
-bool i915_memcpy_from_wc(void *dst, const void *src, unsigned long len)
-{
-	if (unlikely(((unsigned long)dst | (unsigned long)src | len) & 15))
-		return false;
-
-#ifdef CONFIG_AS_MOVNTDQA
-	if (static_branch_likely(&has_movntdqa)) {
-		if (likely(len))
-			__memcpy_ntdqa(dst, src, len);
-		return true;
-	}
-#endif
-
-	return false;
-}
-
-void i915_memcpy_init_early(struct drm_i915_private *dev_priv)
-{
-	if (static_cpu_has(X86_FEATURE_XMM4_1))
-		static_branch_enable(&has_movntdqa);
-}
-- 
1.7.5.4

