From 1aeaf8a10ce2167fd1a7bff3f13aa7e884cafc05 Mon Sep 17 00:00:00 2001
From: Yael Samet <yael.samet@intel.com>
Date: Sun, 15 Jan 2017 12:40:16 +0200
Subject: [PATCH 4667/4706] mei: dal: remove space between cast to variable

commit 4210261387c474d5cca0ca452e9f759375d08e61 from
git://git.yoctoproject.org/linux-yocto-4.1

Remove space between cast to variable in bhp code.

Change-Id: Id7a1896a412b250fd8dc815ff2db3abee4873002
Signed-off-by: Yael Samet <yael.samet@intel.com>
---
 drivers/misc/mei/dal/bhp_impl.c    |    8 ++++----
 drivers/misc/mei/dal/bhp_impl_ta.c |   28 ++++++++++++++--------------
 2 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/drivers/misc/mei/dal/bhp_impl.c b/drivers/misc/mei/dal/bhp_impl.c
index ac7163f..48b2b59 100644
--- a/drivers/misc/mei/dal/bhp_impl.c
+++ b/drivers/misc/mei/dal/bhp_impl.c
@@ -427,13 +427,13 @@ static int bh_send_message(int conn_idx, void *cmd, unsigned int clen,
 
 	memcpy(cmd, BHP_MSG_CMD_MAGIC, BHP_MSG_MAGIC_LENGTH);
 
-	h = (struct bhp_command_header *) cmd;
+	h = (struct bhp_command_header *)cmd;
 	h->h.length = clen + dlen;
 	h->seq = seq;
 
 	ret = bh_transport_send(conn_idx, cmd, clen, seq);
 	if (!ret && dlen > 0)
-		ret = bh_transport_send(conn_idx, (void *) data, dlen, seq);
+		ret = bh_transport_send(conn_idx, (void *)data, dlen, seq);
 
 	if (ret)
 		rrmap_remove(conn_idx, seq, false);
@@ -453,7 +453,7 @@ static int bh_recv_message(int conn_idx, u64 *seq)
 	struct bh_response_record *rr = NULL;
 	int session_killed;
 
-	ret = bh_transport_recv(conn_idx, (char *) head,
+	ret = bh_transport_recv(conn_idx, (char *)head,
 				sizeof(struct bhp_response_header));
 	if (ret)
 		return ret;
@@ -479,7 +479,7 @@ static int bh_recv_message(int conn_idx, u64 *seq)
 		rr->length = dlen;
 
 		if (!ret)
-			rr->code = (int) head->code;
+			rr->code = (int)head->code;
 		else
 			rr->code = ret;
 
diff --git a/drivers/misc/mei/dal/bhp_impl_ta.c b/drivers/misc/mei/dal/bhp_impl_ta.c
index 018c495..2b8aebb 100644
--- a/drivers/misc/mei/dal/bhp_impl_ta.c
+++ b/drivers/misc/mei/dal/bhp_impl_ta.c
@@ -187,9 +187,9 @@ static int bh_proxy_get_sd_by_ta(uuid_be taid, uuid_be *sdid)
 {
 	int ret;
 	char cmdbuf[CMDBUF_SIZE];
-	struct bhp_command_header *h = (struct bhp_command_header *) cmdbuf;
+	struct bhp_command_header *h = (struct bhp_command_header *)cmdbuf;
 	struct bhp_get_sd_by_ta_cmd *cmd =
-			(struct bhp_get_sd_by_ta_cmd *) h->cmd;
+			(struct bhp_get_sd_by_ta_cmd *)h->cmd;
 	struct bh_response_record rr;
 
 	memset(cmdbuf, 0, sizeof(cmdbuf));
@@ -201,7 +201,7 @@ static int bh_proxy_get_sd_by_ta(uuid_be taid, uuid_be *sdid)
 	h->id = BHP_CMD_GET_SD_BY_TA;
 	cmd->taid = taid;
 
-	ret = bh_cmd_transfer(CONN_IDX_SDM, (char *) h,
+	ret = bh_cmd_transfer(CONN_IDX_SDM, (char *)h,
 			      sizeof(*h) + sizeof(*cmd), NULL, 0,
 			      rrmap_add(CONN_IDX_SDM, &rr));
 
@@ -214,7 +214,7 @@ static int bh_proxy_get_sd_by_ta(uuid_be taid, uuid_be *sdid)
 	if (rr.buffer && rr.length ==
 			sizeof(struct bhp_get_sd_by_ta_response)) {
 		struct bhp_get_sd_by_ta_response *resp =
-				(struct bhp_get_sd_by_ta_response *) rr.buffer;
+				(struct bhp_get_sd_by_ta_response *)rr.buffer;
 		*sdid = resp->sdid;
 	} else
 		ret = -EBADMSG;
@@ -229,9 +229,9 @@ static int bh_proxy_check_svl_ta_blocked_state(uuid_be taid)
 {
 	int ret;
 	char cmdbuf[CMDBUF_SIZE];
-	struct bhp_command_header *h = (struct bhp_command_header *) cmdbuf;
+	struct bhp_command_header *h = (struct bhp_command_header *)cmdbuf;
 	struct bhp_check_svl_ta_blocked_state_cmd *cmd =
-			(struct bhp_check_svl_ta_blocked_state_cmd *) h->cmd;
+			(struct bhp_check_svl_ta_blocked_state_cmd *)h->cmd;
 	struct bh_response_record rr;
 
 	memset(cmdbuf, 0, sizeof(cmdbuf));
@@ -242,7 +242,7 @@ static int bh_proxy_check_svl_ta_blocked_state(uuid_be taid)
 	memcpy(&cmd->taid, &taid,
 	       sizeof(struct bhp_check_svl_ta_blocked_state_cmd));
 
-	ret = bh_cmd_transfer(CONN_IDX_SDM, (char *) h,
+	ret = bh_cmd_transfer(CONN_IDX_SDM, (char *)h,
 			      sizeof(*h) + sizeof(*cmd), NULL, 0,
 			      rrmap_add(CONN_IDX_SDM, &rr));
 	if (!ret)
@@ -258,7 +258,7 @@ static int bh_proxy_listJTAPackages(int conn_idx, int *count,
 {
 	int ret;
 	char cmdbuf[CMDBUF_SIZE];
-	struct bhp_command_header *h = (struct bhp_command_header *) cmdbuf;
+	struct bhp_command_header *h = (struct bhp_command_header *)cmdbuf;
 	struct bh_response_record rr;
 	struct bhp_list_ta_packages_response *resp;
 	uuid_be *outbuf;
@@ -327,9 +327,9 @@ static int bh_proxy_download_javata(int conn_idx,
 {
 	int ret;
 	char cmdbuf[CMDBUF_SIZE];
-	struct bhp_command_header *h = (struct bhp_command_header *) cmdbuf;
+	struct bhp_command_header *h = (struct bhp_command_header *)cmdbuf;
 	struct bhp_download_javata_cmd *cmd =
-			(struct bhp_download_javata_cmd *) h->cmd;
+			(struct bhp_download_javata_cmd *)h->cmd;
 	struct bh_response_record rr;
 
 	memset(cmdbuf, 0, sizeof(cmdbuf));
@@ -341,7 +341,7 @@ static int bh_proxy_download_javata(int conn_idx,
 	h->id = BHP_CMD_DOWNLOAD_JAVATA;
 	cmd->appid = ta_id;
 
-	ret = bh_cmd_transfer(conn_idx, (char *) h, sizeof(*h) + sizeof(*cmd),
+	ret = bh_cmd_transfer(conn_idx, (char *)h, sizeof(*h) + sizeof(*cmd),
 			      ta_pkg, pkg_len, rrmap_add(conn_idx, &rr));
 
 	if (!ret)
@@ -527,7 +527,7 @@ int bhp_send_and_recv(const u64 handle, int command_id,
 	char cmdbuf[CMDBUF_SIZE];
 	struct bhp_command_header *h = (struct bhp_command_header *)cmdbuf;
 	struct bhp_snr_cmd *cmd = (struct bhp_snr_cmd *)h->cmd;
-	u64 seq = (u64) handle;
+	u64 seq = (u64)handle;
 	struct bh_response_record *rr = NULL;
 	int conn_idx = 0;
 	unsigned int len;
@@ -557,7 +557,7 @@ int bhp_send_and_recv(const u64 handle, int command_id,
 	cmd->outlen = *output_length;
 
 	ret = bh_cmd_transfer(conn_idx, (char *)h, sizeof(*h) + sizeof(*cmd),
-			      (char *) input, length, seq);
+			      (char *)input, length, seq);
 	if (!ret)
 		ret = rr->code;
 
@@ -634,7 +634,7 @@ int bhp_close_ta_session(const u64 handle)
 	h->id = BHP_CMD_CLOSE_JTASESSION;
 	cmd->ta_session_id = rr->addr;
 
-	ret = bh_cmd_transfer(conn_idx, (char *) h, sizeof(*h) + sizeof(*cmd),
+	ret = bh_cmd_transfer(conn_idx, (char *)h, sizeof(*h) + sizeof(*cmd),
 			      NULL, 0, seq);
 
 	if (!ret)
-- 
1.7.5.4

