From 85f79c0fc3498d6f6b4bca61fc5b93c90592c3fd Mon Sep 17 00:00:00 2001
From: Weifeng Voon <weifeng.voon@intel.com>
Date: Fri, 24 Jun 2016 15:17:48 +0800
Subject: [PATCH 2247/2508] spi:pxa2xx: auto switch between PIO and DMA with
 configurable threshold size

commit 5ae9a84b0690237db227f298013c0f7f4dd01a11 from
https://github.com/01org/linux-apollolake-i

It is not efficient to transfer small data size using dma. Hence,
pio_dma_threshold is introduced in struct pxa2xx_spi_chip. By configuring
pio_dma_threshold in spi_board_info, the driver will automatically be in
PIO mode/DMA mode depending on the logic below:

PIO mode when:
transfer length < pio_dma_threshold

DMA mode when:
transfer length >= pio_dma_threshold

Signed-off-by: Weifeng Voon <weifeng.voon@intel.com>
---
 drivers/spi/spi-pxa2xx-dma.c   |    3 +++
 drivers/spi/spi-pxa2xx.c       |    2 ++
 drivers/spi/spi-pxa2xx.h       |    1 +
 include/linux/spi/pxa2xx_spi.h |    1 +
 4 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/drivers/spi/spi-pxa2xx-dma.c b/drivers/spi/spi-pxa2xx-dma.c
index bd8b369..3ea9bcb 100644
--- a/drivers/spi/spi-pxa2xx-dma.c
+++ b/drivers/spi/spi-pxa2xx-dma.c
@@ -227,6 +227,9 @@ int pxa2xx_spi_map_dma_buffers(struct driver_data *drv_data)
 	if (drv_data->len < chip->dma_burst_size)
 		return 0;
 
+	if (drv_data->len < chip->pio_dma_threshold)
+		return 0;
+
 	ret = pxa2xx_spi_map_dma_buffer(drv_data, DMA_TO_DEVICE);
 	if (ret <= 0) {
 		dev_warn(&drv_data->pdev->dev, "failed to DMA map TX\n");
diff --git a/drivers/spi/spi-pxa2xx.c b/drivers/spi/spi-pxa2xx.c
index ce66cf4..bc6bd21 100644
--- a/drivers/spi/spi-pxa2xx.c
+++ b/drivers/spi/spi-pxa2xx.c
@@ -1228,6 +1228,8 @@ static int setup(struct spi_device *spi)
 		chip->dma_threshold = 0;
 		if (chip_info->enable_loopback)
 			chip->cr1 = SSCR1_LBM;
+		if (chip_info->pio_dma_threshold)
+			chip->pio_dma_threshold = chip_info->pio_dma_threshold;
 	} else if (ACPI_HANDLE(&spi->dev)) {
 		/*
 		 * Slave devices enumerated from ACPI namespace don't
diff --git a/drivers/spi/spi-pxa2xx.h b/drivers/spi/spi-pxa2xx.h
index 8e781c8..c533f8d 100644
--- a/drivers/spi/spi-pxa2xx.h
+++ b/drivers/spi/spi-pxa2xx.h
@@ -93,6 +93,7 @@ struct chip_data {
 	u16 lpss_rx_threshold;
 	u16 lpss_tx_threshold;
 	u8 enable_dma;
+	u32 pio_dma_threshold;
 	union {
 		int gpio_cs;
 		unsigned int frm;
diff --git a/include/linux/spi/pxa2xx_spi.h b/include/linux/spi/pxa2xx_spi.h
index 6d36dac..1ed7b35 100644
--- a/include/linux/spi/pxa2xx_spi.h
+++ b/include/linux/spi/pxa2xx_spi.h
@@ -48,6 +48,7 @@ struct pxa2xx_spi_chip {
 	u8 enable_loopback;
 	int gpio_cs;
 	void (*cs_control)(u32 command);
+	u32 pio_dma_threshold;
 };
 
 #if defined(CONFIG_ARCH_PXA) || defined(CONFIG_ARCH_MMP)
-- 
1.7.5.4

