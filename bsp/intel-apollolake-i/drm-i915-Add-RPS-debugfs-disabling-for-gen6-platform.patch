From 3e377b3fd89e37e9ac75ac132bd0b588ee2f1c6c Mon Sep 17 00:00:00 2001
From: Ankitprasad Sharma <ankitprasad.r.sharma@intel.com>
Date: Fri, 13 Jan 2017 15:40:49 -0800
Subject: [PATCH 4477/4706] drm/i915: Add RPS debugfs disabling for gen6+
 platforms

commit 735ebaf5408ed6a779b337fb8a311a2c3fa3b3f0 from
git://git.yoctoproject.org/linux-yocto-4.1

This patch exposes a new debugfs interface 'i915_rps_disable'
Following 2 values shall be echoed into this file.
'0' - RPS explicitly enabled .
'1' - RPS explicitly disabled.

v2: Added RPM get/put

This interface provides capabilty to enable/disable Turbo feature
at runtime, which is needed for its validation.

Change-Id: I4edd78d7b62322f914dc507ee677115f39355ce4
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-26413
Upstream-repo: https://patchwork.freedesktop.org/patch/74259/
Signed-off-by: Deepak S <deepak.s@intel.com>
Signed-off-by: Praveen Paneri <praveen.paneri@intel.com>
Signed-off-by: Ankitprasad Sharma <ankitprasad.r.sharma@intel.com>
Reviewed-on: https://android.intel.com:443/472046
Signed-off-by: Jeff McGee <jeff.mcgee@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/i915_debugfs.c |   18 +++++++++++++++---
 1 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_debugfs.c b/drivers/gpu/drm/i915/i915_debugfs.c
index 30e3316..f8f090b 100644
--- a/drivers/gpu/drm/i915/i915_debugfs.c
+++ b/drivers/gpu/drm/i915/i915_debugfs.c
@@ -5260,7 +5260,7 @@ static int i915_rps_disable_get(void *data, u64 *val)
 	struct drm_device *dev = data;
 	struct drm_i915_private *dev_priv = dev->dev_private;
 
-	if (!IS_VALLEYVIEW(dev))
+	if (INTEL_INFO(dev)->gen < 6)
 		return -ENODEV;
 
 	*val = dev_priv->rps.rps_disable;
@@ -5274,19 +5274,31 @@ static int i915_rps_disable_set(void *data, u64 val)
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int ret;
 
-	if (!IS_VALLEYVIEW(dev))
+	if (INTEL_INFO(dev)->gen < 6)
 		return -ENODEV;
 
 	DRM_DEBUG_DRIVER("Setting RPS disable %s\n",
 			 val ? "true" : "false");
 
+	intel_runtime_pm_get(dev_priv);
 	ret = mutex_lock_interruptible(&dev_priv->rps.hw_lock);
 	if (ret)
 		return ret;
 
-	vlv_set_rps_mode(dev_priv, val);
+	dev_priv->rps.rps_disable = val;
+
+	if (val)
+		I915_WRITE(GEN6_RP_CONTROL, 0);
+	else
+		I915_WRITE(GEN6_RP_CONTROL, GEN6_RP_MEDIA_TURBO |
+				GEN6_RP_MEDIA_HW_NORMAL_MODE |
+				GEN6_RP_MEDIA_IS_GFX |
+				GEN6_RP_ENABLE |
+				GEN6_RP_UP_BUSY_AVG |
+				GEN6_RP_DOWN_IDLE_AVG);
 
 	mutex_unlock(&dev_priv->rps.hw_lock);
+	intel_runtime_pm_put(dev_priv);
 
 	return 0;
 }
-- 
1.7.5.4

