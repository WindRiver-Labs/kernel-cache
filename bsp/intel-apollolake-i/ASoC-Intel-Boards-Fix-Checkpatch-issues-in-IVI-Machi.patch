From 7b901a748807f235dc09f22bfd40999484d11eec Mon Sep 17 00:00:00 2001
From: Pardha Saradhi K <pardha.saradhi.kesapragada@intel.com>
Date: Fri, 8 Jul 2016 15:30:10 +0530
Subject: [PATCH 2130/2508] ASoC: Intel: Boards: Fix Checkpatch issues in IVI
 Machine driver files

commit 8038d310dac94bf24314b25dab32c6695d53642c from
https://github.com/01org/linux-apollolake-i

Fix checkpatch errors in machine driver files related to IVI. Removed
whitespaces and printk statements to comply with upstream code
quality

Change-Id: I05c02ce27b23df878bd9f1dfdb7fdfc64df09e43
Signed-off-by: Pardha Saradhi K <pardha.saradhi.kesapragada@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/10158
Reviewed-by: Jayanti, Satya Charitardha <satya.charitardha.jayanti@intel.com>
Tested-by: Jayanti, Satya Charitardha <satya.charitardha.jayanti@intel.com>
---
 sound/soc/intel/boards/bxtp_ivi_hu_rt298.c  |   32 ++++-----
 sound/soc/intel/boards/bxtp_ivi_rse_rt298.c |   93 ++++++++++-----------------
 2 files changed, 49 insertions(+), 76 deletions(-)

diff --git a/sound/soc/intel/boards/bxtp_ivi_hu_rt298.c b/sound/soc/intel/boards/bxtp_ivi_hu_rt298.c
index ab5a542..73ef1b7 100644
--- a/sound/soc/intel/boards/bxtp_ivi_hu_rt298.c
+++ b/sound/soc/intel/boards/bxtp_ivi_hu_rt298.c
@@ -99,10 +99,8 @@ static int bxtp_ssp0_gpio_init(struct snd_soc_pcm_runtime *rtd)
 	u32 gpio_value2 = 0x44000600;
 
 	gpio_addr = (void *)ioremap_nocache(0xd0c40610, 0x30);
-        if (gpio_addr == NULL) {
-                printk("failed to remap the address for SSP0\n");
-                return(-EIO);
-        }
+	if (gpio_addr == NULL)
+		return(-EIO);
 
 	memcpy_toio(gpio_addr + 0x8, &gpio_value1, sizeof(gpio_value1));
 	memcpy_toio(gpio_addr + 0x10, &gpio_value2, sizeof(gpio_value2));
@@ -182,22 +180,22 @@ static struct snd_soc_dai_link broxton_rt298_dais[] = {
 		.name = "Bxt Compress Probe playback",
 		.stream_name = "Probe Playback",
 		.cpu_dai_name = "Compress Probe0 Pin",
-                .codec_name = "snd-soc-dummy",
-                .codec_dai_name = "snd-soc-dummy-dai",
-                .platform_name = "0000:00:0e.0",
-                .init = NULL,
-                .nonatomic = 1,
-        },
-        {
+		.codec_name = "snd-soc-dummy",
+		.codec_dai_name = "snd-soc-dummy-dai",
+		.platform_name = "0000:00:0e.0",
+		.init = NULL,
+		.nonatomic = 1,
+	},
+	{
 		.name = "Bxt Compress Probe capture",
 		.stream_name = "Probe Capture",
 		.cpu_dai_name = "Compress Probe1 Pin",
-                .codec_name = "snd-soc-dummy",
-                .codec_dai_name = "snd-soc-dummy-dai",
-                .platform_name = "0000:00:0e.0",
-                .init = NULL,
-                .nonatomic = 1,
-        },
+		.codec_name = "snd-soc-dummy",
+		.codec_dai_name = "snd-soc-dummy-dai",
+		.platform_name = "0000:00:0e.0",
+		.init = NULL,
+		.nonatomic = 1,
+	},
 
 
 	/* Back End DAI links */
diff --git a/sound/soc/intel/boards/bxtp_ivi_rse_rt298.c b/sound/soc/intel/boards/bxtp_ivi_rse_rt298.c
index 34d4209..df1e8b7 100644
--- a/sound/soc/intel/boards/bxtp_ivi_rse_rt298.c
+++ b/sound/soc/intel/boards/bxtp_ivi_rse_rt298.c
@@ -60,82 +60,57 @@ static int bxtp_ssp0_gpio_init(struct snd_soc_pcm_runtime *rtd)
 	u32 gpio_value2 = 0x44000600;
 
 	gpio_addr = (void *)ioremap_nocache(0xd0c40610, 0x30);
-        if (gpio_addr == NULL) {
-                printk("failed to remap the address for SSP0\n");
-                return(-EIO);
-        }
+	if (gpio_addr == NULL)
+		return(-EIO);
 
 	memcpy_toio(gpio_addr + 0x8, &gpio_value1, sizeof(gpio_value1));
 	memcpy_toio(gpio_addr + 0x10, &gpio_value2, sizeof(gpio_value2));
 	memcpy_toio(gpio_addr + 0x18, &gpio_value2, sizeof(gpio_value2));
 	memcpy_toio(gpio_addr + 0x20, &gpio_value2, sizeof(gpio_value2));
 
-        printk("SSP0: %p has %#x\n", gpio_addr + 0x8, *(u32 *)(gpio_addr + 0x8));
-        printk("SSP0: %p has %#x\n", gpio_addr + 0x10, *(u32 *)(gpio_addr + 0x10));
-        printk("SSP0: %p has %#x\n", gpio_addr + 0x18, *(u32 *)(gpio_addr + 0x18));
-        printk("SSP0: %p has %#x\n", gpio_addr + 0x20, *(u32 *)(gpio_addr + 0x20));
-
-        iounmap(gpio_addr);
-        return 0;
-
+	iounmap(gpio_addr);
+	return 0;
 }
 
 static int bxtp_ssp1_gpio_init(struct snd_soc_pcm_runtime *rtd)
 {
-        int ret = 0;
-        char *gpio_addr;
-        u32 gpio_value1 = 0x44000400;
-
-        gpio_addr = (void *)ioremap_nocache(0xd0c40660, 0x30);
-        if (gpio_addr == NULL) {
-                printk("failed to remap the address for SSP1\n");
-                return(-EIO);
-        }
-
-        printk("%p has %#x\n", gpio_addr, *(u32 *)gpio_addr);
 
-        memcpy_toio(gpio_addr + 0x8, &gpio_value1, sizeof(gpio_value1));
-        memcpy_toio(gpio_addr + 0x10, &gpio_value1, sizeof(gpio_value1));
-        memcpy_toio(gpio_addr + 0x18, &gpio_value1, sizeof(gpio_value1));
-        memcpy_toio(gpio_addr + 0x20, &gpio_value1, sizeof(gpio_value1));
+	int ret = 0;
+	char *gpio_addr;
+	u32 gpio_value1 = 0x44000400;
 
-        printk("SSP1: %p has %#x\n", gpio_addr + 0x8, *(u32 *)(gpio_addr + 0x8));
-        printk("SSP1: %p has %#x\n", gpio_addr + 0x10, *(u32 *)(gpio_addr + 0x10));
-        printk("SSP1: %p has %#x\n", gpio_addr + 0x18, *(u32 *)(gpio_addr + 0x18));
-        printk("SSP1: %p has %#x\n", gpio_addr + 0x20, *(u32 *)(gpio_addr + 0x20));
+	gpio_addr = (void *)ioremap_nocache(0xd0c40660, 0x30);
+	if (gpio_addr == NULL)
+		return(-EIO);
 
-        iounmap(gpio_addr);
-        return 0;
+	memcpy_toio(gpio_addr + 0x8, &gpio_value1, sizeof(gpio_value1));
+	memcpy_toio(gpio_addr + 0x10, &gpio_value1, sizeof(gpio_value1));
+	memcpy_toio(gpio_addr + 0x18, &gpio_value1, sizeof(gpio_value1));
+	memcpy_toio(gpio_addr + 0x20, &gpio_value1, sizeof(gpio_value1));
 
+	iounmap(gpio_addr);
+	return 0;
 }
 
 static int bxtp_ssp4_gpio_init(struct snd_soc_pcm_runtime *rtd)
 {
-        int ret = 0;
-        char *gpio_addr;
-        u32 gpio_value1 = 0x44000A00;
-        u32 gpio_value2 = 0x44000800;
-
-        gpio_addr = (void *)ioremap_nocache(0xd0c705A0, 0x30);
-        if (gpio_addr == NULL) {
-                printk("failed to remap the address for SSP4\n");
-                return(-EIO);
-        }
 
-        printk("%p has %#x\n", gpio_addr, *(u32 *)gpio_addr);
+	int ret = 0;
+	char *gpio_addr;
+	u32 gpio_value1 = 0x44000A00;
+	u32 gpio_value2 = 0x44000800;
 
-        memcpy_toio(gpio_addr, &gpio_value1, sizeof(gpio_value1));
-        memcpy_toio(gpio_addr + 0x8, &gpio_value1, sizeof(gpio_value1));
-        memcpy_toio(gpio_addr + 0x10, &gpio_value1, sizeof(gpio_value1));
-        memcpy_toio(gpio_addr + 0x18, &gpio_value2, sizeof(gpio_value2));
+	gpio_addr = (void *)ioremap_nocache(0xd0c705A0, 0x30);
+	if (gpio_addr == NULL)
+		return(-EIO);
 
-        printk("SSP4: %p has %#x\n", gpio_addr, *(u32 *)(gpio_addr));
-        printk("SSP4: %p has %#x\n", gpio_addr + 0x8, *(u32 *)(gpio_addr + 0x8));
-        printk("SSP4: %p has %#x\n", gpio_addr + 0x10, *(u32 *)(gpio_addr + 0x10));
-        printk("SSP4: %p has %#x\n", gpio_addr + 0x18, *(u32 *)(gpio_addr + 0x18));
+	memcpy_toio(gpio_addr, &gpio_value1, sizeof(gpio_value1));
+	memcpy_toio(gpio_addr + 0x8, &gpio_value1, sizeof(gpio_value1));
+	memcpy_toio(gpio_addr + 0x10, &gpio_value1, sizeof(gpio_value1));
+	memcpy_toio(gpio_addr + 0x18, &gpio_value2, sizeof(gpio_value2));
 
-        iounmap(gpio_addr);
-        return 0;
+	iounmap(gpio_addr);
+	return 0;
 
 }
 
@@ -308,11 +283,11 @@ static struct snd_soc_dai_link broxton_rt298_dais[] = {
 		.stream_name = "Probe Capture",
 		.cpu_dai_name = "Compress Probe1 Pin",
 		.codec_name = "snd-soc-dummy",
-                .codec_dai_name = "snd-soc-dummy-dai",
-                .platform_name = "0000:00:0e.0",
-                .init = NULL,
-                .nonatomic = 1,
-        },
+		.codec_dai_name = "snd-soc-dummy-dai",
+		.platform_name = "0000:00:0e.0",
+		.init = NULL,
+		.nonatomic = 1,
+	},
 
 
 
-- 
1.7.5.4

