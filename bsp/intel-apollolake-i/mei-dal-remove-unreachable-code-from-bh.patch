From 2676fc0c24e3d9e2e005abeb0142692d30ac6c6f Mon Sep 17 00:00:00 2001
From: Evyatar Vaalani <evyatar.vaalani@intel.com>
Date: Sun, 15 Jan 2017 11:47:30 +0200
Subject: [PATCH 4664/4706] mei: dal: remove unreachable code from bh.

commit 725bce189f104dc00b12a0950b10ddee5fb83b07 from
git://git.yoctoproject.org/linux-yocto-4.1

Removed code from bh files that is not used by kdi.

Change-Id: Id24b188fd2687ca14b25df64bb9611c86224772c
Signed-off-by: Evyatar Vaalani <vyatar.vaalani@intel.com>
Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
---
 drivers/misc/mei/dal/admin_pack_ext.c |   33 ---------------------------------
 drivers/misc/mei/dal/bh_acp_exp.h     |    5 -----
 drivers/misc/mei/dal/bh_acp_format.h  |   11 -----------
 drivers/misc/mei/dal/bh_types.h       |   16 ----------------
 drivers/misc/mei/dal/bhp_exp.h        |    8 --------
 drivers/misc/mei/dal/bhp_heci.h       |    9 ---------
 6 files changed, 0 insertions(+), 82 deletions(-)

diff --git a/drivers/misc/mei/dal/admin_pack_ext.c b/drivers/misc/mei/dal/admin_pack_ext.c
index 5f22717..3f2c174 100644
--- a/drivers/misc/mei/dal/admin_pack_ext.c
+++ b/drivers/misc/mei/dal/admin_pack_ext.c
@@ -128,36 +128,3 @@ int acp_pload_ins_jta(const void *raw_data, unsigned int size,
 	return ret;
 }
 
-int acp_pload_ins_jta_prop(const void *raw_data, unsigned int size,
-			   struct ac_ins_jta_prop_ext *pack)
-{
-	if (!raw_data || !pack)
-		return -EINVAL;
-
-	return acp_load_pack(raw_data, size, AC_INSTALL_JTA_PROP,
-			     (struct ac_pack *)pack);
-}
-
-int acp_get_cmd_id(const void *raw_data, unsigned int size, int *cmd_id)
-{
-	int ret;
-	struct pack_reader pr;
-	struct ac_pack_header *ph = NULL;
-
-	if (!raw_data || size <= BH_ACP_CSS_HEADER_LENGTH || !cmd_id)
-		return BHE_BAD_PARAMETER;
-
-	*cmd_id = AC_CMD_INVALID;
-
-	ret = pr_init(&pr, raw_data + BH_ACP_CSS_HEADER_LENGTH,
-		      size - BH_ACP_CSS_HEADER_LENGTH);
-	if (ret != BH_SUCCESS)
-		return BHE_INVALID_BPK_FILE;
-
-	ret = acp_load_pack_head(&pr, &ph);
-	if (ret != BH_SUCCESS)
-		return ret;
-
-	*cmd_id = ph->cmd_id;
-	return BH_SUCCESS;
-}
diff --git a/drivers/misc/mei/dal/bh_acp_exp.h b/drivers/misc/mei/dal/bh_acp_exp.h
index 9fce3ba..c0bd332 100644
--- a/drivers/misc/mei/dal/bh_acp_exp.h
+++ b/drivers/misc/mei/dal/bh_acp_exp.h
@@ -78,9 +78,4 @@ struct ac_ins_jta_prop_ext {
 int acp_pload_ins_jta(const void *raw_data, unsigned int size,
 		      struct ac_ins_jta_pack_ext *pack);
 
-int acp_pload_ins_jta_prop(const void *raw_data, unsigned int size,
-			   struct ac_ins_jta_prop_ext *pack);
-
-int acp_get_cmd_id(const void *raw_data, unsigned int size, int *cmd_id);
-
 #endif /* __BH_ACP_EXP_H */
diff --git a/drivers/misc/mei/dal/bh_acp_format.h b/drivers/misc/mei/dal/bh_acp_format.h
index 2e1885d..4591ede 100644
--- a/drivers/misc/mei/dal/bh_acp_format.h
+++ b/drivers/misc/mei/dal/bh_acp_format.h
@@ -82,12 +82,6 @@ enum ac_cmd_id {
 	AC_CMD_NUM
 };
 
-enum ac_ta_type {
-	AC_TA_TYPE_BOTH,
-	AC_TA_TYPE_JAVA,
-	AC_TA_TYPE_NATIVE,
-};
-
 struct ac_pack_header {
 	/*ACP Header*/
 	u8 magic[4];
@@ -105,11 +99,6 @@ struct ac_pack_header {
 	u32 idx_data;
 } __packed;
 
-struct ac_name {
-	u8 len;/*the size of data in byte*/
-	s8 data[0];
-} __packed;
-
 struct bh_ta_id_list {
 	u32 num;
 	uuid_be list[0];
diff --git a/drivers/misc/mei/dal/bh_types.h b/drivers/misc/mei/dal/bh_types.h
index cf5170e..663e650 100644
--- a/drivers/misc/mei/dal/bh_types.h
+++ b/drivers/misc/mei/dal/bh_types.h
@@ -67,20 +67,4 @@ struct bh_pack_hash {
 	u8 data[BH_MAX_PACK_HASH_LEN];
 };
 
-/**
- * struct _bh_ta_install_condition_list_t:
- *	 install_condition is like properties,
- *	 and formatted as "type\0key\0value\0".
- *	 Example: "string\0name\0Tom\0int\0Age\013\0"
- *
- * @is_user_space_client: number of properties
- * @read_buffer: the size of data in byte
- * @data: the data
- */
-struct _bh_ta_install_condition_list_t {
-	u32 num;
-	u32 len;
-	s8 data[0];
-};
-
 #endif /* __BH_SHARED_TYPES_H */
diff --git a/drivers/misc/mei/dal/bhp_exp.h b/drivers/misc/mei/dal/bhp_exp.h
index d35f1a9..5174b0a 100644
--- a/drivers/misc/mei/dal/bhp_exp.h
+++ b/drivers/misc/mei/dal/bhp_exp.h
@@ -90,14 +90,6 @@ int bhp_init_internal(void);
 int bhp_deinit_internal(void);
 
 /**
- * Send Reset command to SDM, Launcher and VM, to let them enter initial state.
- * This function will be blocked until receiving all the responses.
- *
- * @return BH_SUCCESS if success.
- */
-int bhp_reset(void);
-
-/**
  * Open Session to specified Java TA.
  * The Firmware side might need to spawn the VM process,
  * and create the TA instance.
diff --git a/drivers/misc/mei/dal/bhp_heci.h b/drivers/misc/mei/dal/bhp_heci.h
index d0cab8f..5fae36c 100644
--- a/drivers/misc/mei/dal/bhp_heci.h
+++ b/drivers/misc/mei/dal/bhp_heci.h
@@ -167,11 +167,6 @@ struct bhp_check_svl_ta_blocked_state_cmd {
 	uuid_be taid;
 };
 
-struct bhp_reset_launcher_response {
-	u32 count; /* count of svm heci ports */
-	s32 vm_heci_port_list[0];
-};
-
 struct bhp_get_sd_by_ta_cmd {
 	uuid_be taid;
 };
@@ -180,10 +175,6 @@ struct bhp_get_sd_by_ta_response {
 	uuid_be sdid;
 };
 
-struct bhp_get_isd_response {
-	uuid_be sdid;
-};
-
 struct bhp_snr_response {
 	/* field response comes from java BIG endian */
 	__be32 response;
-- 
1.7.5.4

