From 39d83b36a1f456aabab1129fe7fcb135b1d5fba2 Mon Sep 17 00:00:00 2001
From: Uma Shankar <uma.shankar@intel.com>
Date: Tue, 20 Dec 2016 10:24:32 -0800
Subject: [PATCH 4461/4706] drm/i915: Enable DSI reset sequence (v2)

commit 720ce33d3f18c8f330819c5d576cf9174693e6ff from
git://git.yoctoproject.org/linux-yocto-4.1

Enable the call back for MIPI reset sequence. This is needed to
reset the panel GPIO, and is part of the VBT spec.

v2: rebased on IOTG release (Bob)

Signed-off-by: Uma Shankar <uma.shankar@intel.com>
Signed-off-by: Deepak M <m.deepak@intel.com>
Signed-off-by: Bob Paauwe <bob.j.paauwe@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi.c           |    2 ++
 drivers/gpu/drm/i915/intel_dsi_panel_vbt.c |   11 +++++++++--
 include/drm/drm_panel.h                    |   18 ++++++++++++++++++
 3 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index cf07b4d..c4b0948 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -587,6 +587,8 @@ static void intel_dsi_pre_enable(struct intel_encoder *encoder,
 		I915_WRITE(BXT_DSI_TXCNTRL, HS_IO_CONTROL_SELECT);
 	}
 
+	drm_panel_reset(intel_dsi->panel);
+
 	/* put device in ready state */
 	intel_dsi_device_ready(encoder);
 
diff --git a/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c b/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
index c56cbc4..57fc2c8 100644
--- a/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
+++ b/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
@@ -492,8 +492,6 @@ static void generic_exec_sequence(struct drm_panel *panel, enum mipi_seq seq_id)
 
 static int vbt_panel_prepare(struct drm_panel *panel)
 {
-	generic_exec_sequence(panel, MIPI_SEQ_ASSERT_RESET);
-	generic_exec_sequence(panel, MIPI_SEQ_DEASSERT_RESET);
 	generic_exec_sequence(panel, MIPI_SEQ_INIT_OTP);
 
 	return 0;
@@ -558,10 +556,19 @@ static int vbt_panel_power_off(struct drm_panel *panel)
 	return 0;
 }
 
+static int vbt_panel_reset(struct drm_panel *panel)
+{
+	generic_exec_sequence(panel, MIPI_SEQ_ASSERT_RESET);
+	generic_exec_sequence(panel, MIPI_SEQ_DEASSERT_RESET);
+
+	return 0;
+}
+
 static const struct drm_panel_funcs vbt_panel_funcs = {
 	.disable = vbt_panel_disable,
 	.unprepare = vbt_panel_unprepare,
 	.prepare = vbt_panel_prepare,
+	.reset = vbt_panel_reset,
 	.power_on = vbt_panel_power_on,
 	.power_off = vbt_panel_power_off,
 	.enable = vbt_panel_enable,
diff --git a/include/drm/drm_panel.h b/include/drm/drm_panel.h
index f883c12..e808d34 100644
--- a/include/drm/drm_panel.h
+++ b/include/drm/drm_panel.h
@@ -69,6 +69,7 @@ struct drm_panel_funcs {
 	int (*disable)(struct drm_panel *panel);
 	int (*unprepare)(struct drm_panel *panel);
 	int (*prepare)(struct drm_panel *panel);
+	int (*reset)(struct drm_panel *panel);
 	int (*power_on)(struct drm_panel *panel);
 	int (*power_off)(struct drm_panel *panel);
 	int (*enable)(struct drm_panel *panel);
@@ -203,6 +204,23 @@ static inline int drm_panel_power_off(struct drm_panel *panel)
 }
 
 /**
+ * drm_panel_reset - panel reset
+ * @panel: DRM panel
+ *
+ * Calling this function will toggle the panel reset pin to
+ * force a reset.
+ *
+ * Return: 0 on success or a negative error code on failure.
+ */
+static inline int drm_panel_reset(struct drm_panel *panel)
+{
+	if (panel && panel->funcs && panel->funcs->reset)
+		return panel->funcs->reset(panel);
+
+	return panel ? -ENOSYS : -EINVAL;
+}
+
+/**
  * drm_panel_get_modes - probe the available display modes of a panel
  * @panel: DRM panel
  *
-- 
1.7.5.4

