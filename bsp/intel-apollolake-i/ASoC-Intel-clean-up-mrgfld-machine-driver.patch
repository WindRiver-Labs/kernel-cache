From f16c6e2924a945a15cc711e930de6f9ba6db62b7 Mon Sep 17 00:00:00 2001
From: Ramesh Babu <ramesh.babu@intel.com>
Date: Mon, 11 Jan 2016 21:44:51 +0530
Subject: [PATCH 1866/2508] ASoC: Intel: clean-up mrgfld machine driver

commit 082e262413403dfa965dd42fcba728fdaf247c2b from
https://github.com/01org/linux-apollolake-i

Removes some dead code, use correct log level
and removes unused variables.

Change-Id: I0fd537c87544bdcef69be0a0182e45b850b59e3d
Signed-off-by: Ramesh Babu <ramesh.babu@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-15919
Signed-off-by: Andy Ross <andrew.j.ross@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8277
---
 sound/soc/intel/boards/mrgfld_dpcm_florida.c |   35 +++----------------------
 1 files changed, 5 insertions(+), 30 deletions(-)

diff --git a/sound/soc/intel/boards/mrgfld_dpcm_florida.c b/sound/soc/intel/boards/mrgfld_dpcm_florida.c
index 5c4e415..56a6d6d 100644
--- a/sound/soc/intel/boards/mrgfld_dpcm_florida.c
+++ b/sound/soc/intel/boards/mrgfld_dpcm_florida.c
@@ -526,7 +526,6 @@ static int mrgfld_florida_btfm_fixup(struct snd_soc_pcm_runtime *rtd,
 						SNDRV_PCM_HW_PARAM_CHANNELS);
 
 	pr_debug("Invoked %s for dailink %s\n", __func__, rtd->dai_link->name);
-	slot_width = 16;
 	rate->min  = 8000;
 	rate->max  = 48000;
 	channels->min = 1;
@@ -535,8 +534,7 @@ static int mrgfld_florida_btfm_fixup(struct snd_soc_pcm_runtime *rtd,
 	snd_mask_set(hw_param_mask(params, SNDRV_PCM_HW_PARAM_FORMAT),
 						SNDRV_PCM_FORMAT_S16_LE);
 
-	pr_info("Slot width = %d\n", slot_width);
-	pr_info("param width set to:0x%x\n",
+	pr_debug("param width set to:%#x\n",
 				snd_pcm_format_width(params_format(params)));
 
 	return 0;
@@ -544,45 +542,22 @@ static int mrgfld_florida_btfm_fixup(struct snd_soc_pcm_runtime *rtd,
 static int mrgfld_florida_codec_fixup(struct snd_soc_pcm_runtime *rtd,
 			    struct snd_pcm_hw_params *params)
 {
-	struct snd_soc_dai *be_cpu_dai;
-	int slot_width = 24;
-	int ret = 0;
-	int fmt;
 	struct snd_interval *rate = hw_param_interval(params,
 			SNDRV_PCM_HW_PARAM_RATE);
 	struct snd_interval *channels = hw_param_interval(params,
 						SNDRV_PCM_HW_PARAM_CHANNELS);
 
 	pr_debug("Invoked %s for dailink %s\n", __func__, rtd->dai_link->name);
-	slot_width = 24;
 	rate->min = rate->max = 48000;
 	channels->min = channels->max = 2;
 	snd_mask_none(hw_param_mask(params, SNDRV_PCM_HW_PARAM_FORMAT));
 	snd_mask_set(hw_param_mask(params, SNDRV_PCM_HW_PARAM_FORMAT),
 						SNDRV_PCM_FORMAT_S24_LE);
 
-	pr_info("param width set to:0x%x\n",
+	pr_debug("param width set to:0x%x\n",
 			snd_pcm_format_width(params_format(params)));
-	pr_info("Slot width = %d\n", slot_width);
 
-	be_cpu_dai = rtd->cpu_dai;
 	return 0;
-	ret = snd_soc_dai_set_tdm_slot(be_cpu_dai, SLOT_MASK(4), SLOT_MASK(4), 4, slot_width);
-	if (ret < 0) {
-		pr_err("can't set cpu dai pcm format %d\n", ret);
-		return ret;
-	}
-
-	/* bit clock inverse not required */
-	fmt =   SND_SOC_DAIFMT_DSP_A | SND_SOC_DAIFMT_NB_NF
-		| SND_SOC_DAIFMT_CBM_CFM;
-	ret = snd_soc_dai_set_fmt(be_cpu_dai, fmt);
-	if (ret < 0) {
-		pr_err("can't set codec DAI configuration %d\n", ret);
-		return ret;
-	}
-
-	return ret;
 }
 
 static const struct snd_soc_pcm_stream mrgfld_florida_dai_params = {
@@ -980,11 +955,11 @@ static int snd_mrgfld_florida_mc_probe(struct platform_device *pdev)
 	}
 
 	if (strncmp(codec_id, "INT34C1", strlen("INT34C1")) == 0) {
-		pr_err("GP:: ========================================CODEC WM8281==================================== \n");
+		pr_info("Audio: Detected HW codec WM8281\n");
 		is_codec8998 = false;
 		card_mrgfld = &snd_soc_card_mrgfld;
 	} else if (strncmp(codec_id, "INT34E0", strlen("INT34E0")) == 0) {
-		pr_err("GP:: ******************************************CODEC WM8998****************************** \n");
+		pr_info("Audio: Detected HW codec WM8998\n");
 		is_codec8998 = true;
 		card_mrgfld = &snd_soc_card_wm8998_mrgfld;
 	} else
@@ -1042,7 +1017,7 @@ static struct platform_driver snd_mrgfld_florida_mc_driver = {
 
 static int snd_mrgfld_florida_driver_init(void)
 {
-	pr_info("Morganfield Machine Driver mrgfld_florida: wm8280 registered\n");
+	pr_info("Morganfield Machine Driver mrgfld_florida registered\n");
 	return platform_driver_register(&snd_mrgfld_florida_mc_driver);
 }
 module_init(snd_mrgfld_florida_driver_init);
-- 
1.7.5.4

