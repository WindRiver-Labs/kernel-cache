From 7c762b2982d25ac9d6eef00f998edae4bd44b4b5 Mon Sep 17 00:00:00 2001
From: Jeff McGee <jeff.mcgee@intel.com>
Date: Tue, 10 May 2016 11:40:45 -0700
Subject: [PATCH 4379/4706] drm/i915/guc: WA for Broxton GuC load failures

commit ca13d2e094abf9980f357cd7711d304fafd5295a from
git://git.yoctoproject.org/linux-yocto-4.1

There seems to be an issue on Broxton where booting of firmware fails
if RC6 has been enabled by BIOS, but an RC6 state transition has never
occurred. We workaround the issue by going into RC6 for a time if
necessary and back out.

Signed-off-by: Jeff McGee <jeff.mcgee@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/i915_reg.h         |    1 +
 drivers/gpu/drm/i915/intel_guc_loader.c |   21 +++++++++++++++++++++
 2 files changed, 22 insertions(+), 0 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index d4a5964..f3d38fd 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -7063,6 +7063,7 @@ enum {
 #define GEN6_RPDEUC				_MMIO(0xA084)
 #define GEN6_RPDEUCSW				_MMIO(0xA088)
 #define GEN6_RC_STATE				_MMIO(0xA094)
+#define   RC6_STATE                             (1 << 18)
 #define   RC_SW_TARGET_STATE_SHIFT		16
 #define   RC_SW_TARGET_STATE_MASK		(7 << RC_SW_TARGET_STATE_SHIFT)
 #define GEN6_RC1_WAKE_RATE_LIMIT		_MMIO(0xA098)
diff --git a/drivers/gpu/drm/i915/intel_guc_loader.c b/drivers/gpu/drm/i915/intel_guc_loader.c
index 6fd39ef..a9572ea 100644
--- a/drivers/gpu/drm/i915/intel_guc_loader.c
+++ b/drivers/gpu/drm/i915/intel_guc_loader.c
@@ -719,6 +719,7 @@ void intel_guc_init(struct drm_device *dev)
 	struct drm_i915_private *dev_priv = to_i915(dev);
 	struct intel_guc_fw *guc_fw = &dev_priv->guc.guc_fw;
 	const char *fw_path;
+	bool is_forced_rc6 = false;
 
 	/* A negative value means "use platform default" */
 	if (i915.enable_guc_loading < 0)
@@ -759,8 +760,28 @@ void intel_guc_init(struct drm_device *dev)
 
 	guc_fw->guc_fw_fetch_status = GUC_FIRMWARE_PENDING;
 	DRM_DEBUG_DRIVER("GuC firmware pending, path %s\n", fw_path);
+
+	/*
+	 * We are about to fetch GuC firmware, and if successful, will later
+	 * load for booting. There seems to be an issue on Broxton where
+	 * booting of firmware fails if RC6 has been enabled by BIOS, but an
+	 * RC6 state transition has never occurred. We workaround the issue by
+	 * going into RC6 for a time if necessary and back out. We do it now
+	 * because the load/boot stage occurs under forcewake.
+	 */
+	if (IS_BROXTON(dev) && !(I915_READ(GEN6_RC_STATE) & RC6_STATE)) {
+		DRM_DEBUG_DRIVER("Begin Broxton GuC load WA: enter RC6\n");
+		I915_WRITE(GEN6_RC_STATE, I915_READ(GEN6_RC_STATE) | RC6_STATE);
+		is_forced_rc6 = true;
+	}
+
 	guc_fw_fetch(dev, guc_fw);
 	/* status must now be FAIL or SUCCESS */
+
+	if (is_forced_rc6) {
+		DRM_DEBUG_DRIVER("End Broxton GuC load WA: exit RC6\n");
+		I915_WRITE(GEN6_RC_STATE, I915_READ(GEN6_RC_STATE) & ~RC6_STATE);
+	}
 }
 
 /**
-- 
1.7.5.4

