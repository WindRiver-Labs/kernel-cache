From abb4e1f595457aeedb99906d1553712d0631f915 Mon Sep 17 00:00:00 2001
From: Bob Paauwe <bob.j.paauwe@intel.com>
Date: Tue, 19 Apr 2016 14:46:29 -0700
Subject: [PATCH 1252/2508] drm/i915/profiling: Update the GUC profile.

commit 16d2de1757bb6832772805614b7d5893f2971aec from
https://github.com/01org/linux-apollolake-i

Record both the init time (time to load firmware) and the time to
load the firmware into the GUC.

Signed-off-by: Bob Paauwe <bob.j.paauwe@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/i915_debugfs.c     |    6 ++++--
 drivers/gpu/drm/i915/i915_drv.h         |    1 +
 drivers/gpu/drm/i915/intel_guc_loader.c |    7 ++++---
 3 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_debugfs.c b/drivers/gpu/drm/i915/i915_debugfs.c
index 94add4c..15c09f1 100644
--- a/drivers/gpu/drm/i915/i915_debugfs.c
+++ b/drivers/gpu/drm/i915/i915_debugfs.c
@@ -2398,10 +2398,12 @@ static int i915_timing_info(struct seq_file *m, void *data)
 	seq_printf(m, "Timing info\n");
 	seq_printf(m, "  Driver load time: %lldms\n",
 		   (dev_priv->profile.driver_load / 1000000));
+	seq_printf(m, "    GUC firmware init time:             %lldms\n",
+		   (dev_priv->profile.guc_init / 1000000));
+	seq_printf(m, "    GUC firmware load time:             %lldms\n",
+		   (dev_priv->profile.guc_load / 1000000));
 	seq_printf(m, "  Frambuffer device load time: %lldms\n",
 		   (dev_priv->profile.fbdev_load / 1000000));
-	seq_printf(m, "  GUC firmware load time: %lldms\n",
-		   (dev_priv->profile.guc_load / 1000000));
 	seq_printf(m, "  CSR firmware load time: %lldms\n",
 		   (dev_priv->profile.csr_load / 1000000));
 
diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index 7227929..068e150 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -1638,6 +1638,7 @@ struct intel_pipe_crc {
 struct intel_load_profiles {
 	unsigned long long driver_load;
 	unsigned long long fbdev_load;
+	unsigned long long guc_init;
 	unsigned long long guc_load;
 	unsigned long long csr_load;
 };
diff --git a/drivers/gpu/drm/i915/intel_guc_loader.c b/drivers/gpu/drm/i915/intel_guc_loader.c
index fe2f558..790ba39 100644
--- a/drivers/gpu/drm/i915/intel_guc_loader.c
+++ b/drivers/gpu/drm/i915/intel_guc_loader.c
@@ -370,6 +370,7 @@ int intel_guc_ucode_load(struct drm_device *dev)
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	struct intel_guc_fw *guc_fw = &dev_priv->guc.guc_fw;
 	int err = 0;
+	unsigned long long start = sched_clock();
 
 	if (!i915.enable_guc_submission)
 		return 0;
@@ -437,6 +438,7 @@ int intel_guc_ucode_load(struct drm_device *dev)
 		direct_interrupts_to_guc(dev_priv);
 	}
 
+	dev_priv->profile.guc_load = sched_clock() - start;
 	return 0;
 
 fail:
@@ -587,7 +589,7 @@ void intel_guc_ucode_init(struct drm_device *dev)
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	struct intel_guc_fw *guc_fw = &dev_priv->guc.guc_fw;
 	const char *fw_path;
-	unsigned long long start;
+	unsigned long long start = sched_clock();
 
 	if (!HAS_GUC_SCHED(dev))
 		i915.enable_guc_submission = false;
@@ -620,12 +622,11 @@ void intel_guc_ucode_init(struct drm_device *dev)
 		return;
 	}
 
-	start = sched_clock();
 	guc_fw->guc_fw_fetch_status = GUC_FIRMWARE_PENDING;
 	DRM_DEBUG_DRIVER("GuC firmware pending, path %s\n", fw_path);
 	guc_fw_fetch(dev, guc_fw);
+	dev_priv->profile.guc_init = sched_clock() - start;
 	/* status must now be FAIL or SUCCESS */
-	dev_priv->profile.guc_load = sched_clock() - start;
 }
 
 /**
-- 
1.7.5.4

