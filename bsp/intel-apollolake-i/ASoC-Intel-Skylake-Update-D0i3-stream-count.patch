From 0be9bd069cb017a254894af30d8f71164feb29c7 Mon Sep 17 00:00:00 2001
From: Jayachandran B <jayachandran.b@intel.com>
Date: Thu, 7 Jan 2016 16:42:50 +0530
Subject: [PATCH 1847/2508] ASoC: Intel: Skylake: Update D0i3 stream count

commit ed4509f8aa79b1c29b0d117b8d3a234382a3ec6e from
https://github.com/01org/linux-apollolake-i

D0i3 entry is practicable only for streams that can have data
transferred to DSP in large bursts and the DMA kept inoperative
for long durations. This means the DSP DMA FIFO size
should be large (deep buffering) and the stream should be able
to afford correspondingly large latency. It is worthless to
attempt D0i3 when normal lower latency streams are running.
This patch provides facility to keep count of the normal streams
and large latency streams so that D0i3 entry decision can be made
based on the respective counts.

Once mature SPIB (and no-rewind flag) infrastructure code is
available the stream(DAI name) based decision made in this patch
can be changed to a more generic no-rewind flag based decision.

Change-Id: I250b076d40d6f1db61bb04d4b93350192de6442d
Signed-off-by: Jayachandran B <jayachandran.b@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/7980
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/skl-pcm.c      |    4 ++++
 sound/soc/intel/skylake/skl-sst-ipc.h  |    7 +++++++
 sound/soc/intel/skylake/skl-topology.c |   25 +++++++++++++++++++++++++
 sound/soc/intel/skylake/skl-topology.h |    2 ++
 4 files changed, 38 insertions(+), 0 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index 3f2f56d..1879afc 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -185,6 +185,8 @@ static int skl_pcm_open(struct snd_pcm_substream *substream,
 				 dma_params->stream_tag);
 	snd_pcm_set_sync(substream);
 
+	skl_tplg_update_d0i3_stream_count(dai, true);
+
 	return 0;
 }
 
@@ -299,6 +301,8 @@ static void skl_pcm_close(struct snd_pcm_substream *substream,
 	 */
 	snd_soc_dai_set_dma_data(dai, substream, NULL);
 
+	skl_tplg_update_d0i3_stream_count(dai, false);
+
 	kfree(dma_params);
 }
 
diff --git a/sound/soc/intel/skylake/skl-sst-ipc.h b/sound/soc/intel/skylake/skl-sst-ipc.h
index b7a3f9d..cf4fb71 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.h
+++ b/sound/soc/intel/skylake/skl-sst-ipc.h
@@ -45,6 +45,11 @@ struct skl_ipc_header {
 	u32 extension;
 };
 
+struct skl_d0i3_data {
+	int d0i3_stream_count;
+	int non_d0i3_stream_count;
+};
+
 struct skl_sst {
 	struct device *dev;
 	struct sst_dsp *dsp;
@@ -56,6 +61,8 @@ struct skl_sst {
 	/* IPC messaging */
 	struct sst_generic_ipc ipc;
 
+	struct skl_d0i3_data d0i3_data;
+
 	/* Callback to update D0i3C register */
 	void (*update_d0i3c)(struct device *dev,  bool enable);
 };
diff --git a/sound/soc/intel/skylake/skl-topology.c b/sound/soc/intel/skylake/skl-topology.c
index 4aa00ce..c6dab0b 100644
--- a/sound/soc/intel/skylake/skl-topology.c
+++ b/sound/soc/intel/skylake/skl-topology.c
@@ -31,6 +31,31 @@
 #define SKL_RATE_FIXUP_MASK		(1 << 1)
 #define SKL_FMT_FIXUP_MASK		(1 << 2)
 
+/* Update the count of streams for which D0i3 can be attempted and that of
+ * streams for which D0i3 can not be attempted. In the streaming case
+ * D0i3 can be attempted for streams that can afford large latency/large
+ * DMA FIFO */
+void skl_tplg_update_d0i3_stream_count(struct snd_soc_dai *dai, bool open)
+{
+
+	struct skl *skl = get_skl_ctx(dai->dev);
+	struct skl_d0i3_data *d0i3_data =  &skl->skl_sst->d0i3_data;
+
+	if (open) {
+		if (!strncmp(dai->name, "Deepbuffer Pin", 14))
+			d0i3_data->d0i3_stream_count++;
+		else
+			d0i3_data->non_d0i3_stream_count++;
+	} else {
+		if (!strncmp(dai->name, "Deepbuffer Pin", 14))
+			d0i3_data->d0i3_stream_count--;
+		else
+			d0i3_data->non_d0i3_stream_count--;
+	}
+	dev_dbg(dai->dev, "%s:d0i3_count= %d ; non_d0i3_count= %d\n", __func__,
+			d0i3_data->d0i3_stream_count, d0i3_data->non_d0i3_stream_count);
+}
+
 /*
  * SKL DSP driver modelling uses only few DAPM widgets so for rest we will
  * ignore. This helpers checks if the SKL driver handles this widget type
diff --git a/sound/soc/intel/skylake/skl-topology.h b/sound/soc/intel/skylake/skl-topology.h
index af82b2b..e8e456a 100644
--- a/sound/soc/intel/skylake/skl-topology.h
+++ b/sound/soc/intel/skylake/skl-topology.h
@@ -358,6 +358,8 @@ struct skl_module_cfg *skl_tplg_fe_get_cpr_module(
 int skl_tplg_update_pipe_params(struct device *dev,
 		struct skl_module_cfg *mconfig, struct skl_pipe_params *params);
 
+void skl_tplg_update_d0i3_stream_count(struct snd_soc_dai *dai, bool open);
+
 int skl_create_pipeline(struct skl_sst *ctx, struct skl_pipe *pipe);
 
 int skl_run_pipe(struct skl_sst *ctx, struct skl_pipe *pipe);
-- 
1.7.5.4

