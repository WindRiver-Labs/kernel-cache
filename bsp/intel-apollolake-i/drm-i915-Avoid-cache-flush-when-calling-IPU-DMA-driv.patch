From 0b2a104f439a4810500a53e1222f7e6e5e712362 Mon Sep 17 00:00:00 2001
From: Yang Haiping <haipingx.yang@intel.com>
Date: Mon, 11 Apr 2016 18:20:20 -0400
Subject: [PATCH 4469/4706] drm/i915:Avoid cache flush when calling IPU DMA
 driver

commit 7d5a76629807a6a9e4489fe9428348148de267d2 from
git://git.yoctoproject.org/linux-yocto-4.1

In the case of DMA buffer sharing by GFX to ISYS, no CPU touch on
those buffers when streaming, so no need to do time consuming
cache flush.

Signed-off-by: Yi Hongyu <hongyu.yi@intel.com>
(cherry picked from commit d0586e981e38b320d8b42232ab8ced88e845d141)
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/i915_gem_dmabuf.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_gem_dmabuf.c b/drivers/gpu/drm/i915/i915_gem_dmabuf.c
index 97c9d68..374520b 100644
--- a/drivers/gpu/drm/i915/i915_gem_dmabuf.c
+++ b/drivers/gpu/drm/i915/i915_gem_dmabuf.c
@@ -43,6 +43,7 @@ static struct sg_table *i915_gem_map_dma_buf(struct dma_buf_attachment *attachme
 	struct sg_table *st;
 	struct scatterlist *src, *dst;
 	int ret, i;
+	DEFINE_DMA_ATTRS(attrs);
 
 	ret = i915_mutex_lock_interruptible(obj->base.dev);
 	if (ret)
@@ -73,7 +74,8 @@ static struct sg_table *i915_gem_map_dma_buf(struct dma_buf_attachment *attachme
 		src = sg_next(src);
 	}
 
-	if (!dma_map_sg(attachment->dev, st->sgl, st->nents, dir)) {
+	dma_set_attr(DMA_ATTR_SKIP_CPU_SYNC, &attrs);
+	if (!dma_map_sg_attrs(attachment->dev, st->sgl, st->nents, dir, &attrs)) {
 		ret =-ENOMEM;
 		goto err_free_sg;
 	}
@@ -99,7 +101,10 @@ static void i915_gem_unmap_dma_buf(struct dma_buf_attachment *attachment,
 {
 	struct drm_i915_gem_object *obj = dma_buf_to_obj(attachment->dmabuf);
 
-	dma_unmap_sg(attachment->dev, sg->sgl, sg->nents, dir);
+	DEFINE_DMA_ATTRS(attrs);
+
+	dma_set_attr(DMA_ATTR_SKIP_CPU_SYNC, &attrs);
+	dma_unmap_sg_attrs(attachment->dev, sg->sgl, sg->nents, dir, &attrs);
 	sg_free_table(sg);
 	kfree(sg);
 
-- 
1.7.5.4

