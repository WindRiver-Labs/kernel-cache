From 76558c3960acea42485b052caf9108bd06079be1 Mon Sep 17 00:00:00 2001
From: James Xiong <james.xiong@intel.com>
Date: Mon, 10 Oct 2016 16:16:52 -0700
Subject: [PATCH 67/68] drm/i915: Return the error code for sync mode flip if
 prepare commit failed

commit 1fc9d5a217630d3ed43edf173c6cca865ff4df4c from
git://git.yoctoproject.org/linux-yocto-4.1

For sync mode flip, when intel_atomic_prepare_commit failed, return
the error code so that the UMD has chance to handle the error.
(as per Matt's suggestion.)

Fixes: 43c6c5fa5ce ("drm/i915: wait till the renderings to the FBs complete for async atomic flip")
Signed-off-by: James Xiong <james.xiong@intel.com>
Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   34 ++++++++++++++++++++++++++++++++++
 1 files changed, 34 insertions(+), 0 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 37b47d4..55c0d21 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -13587,7 +13587,9 @@ static int intel_atomic_prepare_commit(struct drm_device *dev,
 				       bool async)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
+	struct drm_plane_state *plane_state;
 	struct drm_crtc_state *crtc_state;
+	struct drm_plane *plane;
 	struct drm_crtc *crtc;
 	int i, ret;
 
@@ -13608,6 +13610,38 @@ static int intel_atomic_prepare_commit(struct drm_device *dev,
 		return ret;
 
 	ret = drm_atomic_helper_prepare_planes(dev, state);
+	if (!ret && !async && !i915_reset_in_progress(&dev_priv->gpu_error)) {
+		u32 reset_counter;
+
+		reset_counter = atomic_read(&dev_priv->gpu_error.reset_counter);
+		mutex_unlock(&dev->struct_mutex);
+
+		for_each_plane_in_state(state, plane, plane_state, i) {
+			struct intel_plane_state *intel_plane_state =
+				to_intel_plane_state(plane_state);
+
+			if (!intel_plane_state->wait_req)
+				continue;
+
+			ret = __i915_wait_request(intel_plane_state->wait_req,
+					  reset_counter,
+					  I915_WAIT_REQUEST_INTERRUPTIBLE,
+					  NULL, NULL);
+
+			/* Swallow -EIO errors to allow updates during hw lockup. */
+			if (ret == -EIO)
+				ret = 0;
+
+			if (ret)
+				break;
+		}
+
+		if (!ret)
+			return 0;
+
+		mutex_lock(&dev->struct_mutex);
+		drm_atomic_helper_cleanup_planes(dev, state);
+	}
 
 	mutex_unlock(&dev->struct_mutex);
 	return ret;
-- 
1.7.5.4

