From ea4d40f157804af5f30d00a20fb198e0dcc74376 Mon Sep 17 00:00:00 2001
From: Peter Antoine <peter.antoine@intel.com>
Date: Fri, 19 Aug 2016 13:12:48 -0700
Subject: [PATCH 46/68] drm/i915/get_params: Add HuC status to getparams

commit be66f680ced1bc710187abcad4e72e38457cf53d from
git://git.yoctoproject.org/linux-yocto-4.1

This patch will allow for getparams to return the status of the HuC.
As the HuC has to be validated by the GuC this patch uses the validated
status to show when the HuC is loaded and ready for use. You cannot use
the loaded status as with the GuC as the HuC is verified after it is
loaded and is not usable until it is verified.

v2: removed the forewakes as the registers are already force-woken.
     (T.Ursulin)

Signed-off-by: Peter Antoine <peter.antoine@intel.com>
Signed-off-by: Jeff McGee <jeff.mcgee@intel.com>
Signed-off-by: Bob Paauwe <bob.j.paauwe@intel.com>

Conflicts:
	drivers/gpu/drm/i915/i915_dma.c
---
 drivers/gpu/drm/i915/i915_dma.c         |    4 ++++
 drivers/gpu/drm/i915/intel_huc.h        |    2 +-
 drivers/gpu/drm/i915/intel_huc_loader.c |   15 +++++++++++++++
 include/uapi/drm/i915_drm.h             |    1 +
 4 files changed, 21 insertions(+), 1 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_dma.c b/drivers/gpu/drm/i915/i915_dma.c
index f056fef..59ecf85 100644
--- a/drivers/gpu/drm/i915/i915_dma.c
+++ b/drivers/gpu/drm/i915/i915_dma.c
@@ -52,6 +52,7 @@
 #include <linux/oom.h>
 #include "i915_ext_ioctl.h"
 #include "intel_guc.h"
+#include "intel_huc.h"
 #include "iotg_build.h"
 
 static unsigned int i915_load_fail_count;
@@ -248,6 +249,9 @@ static int i915_getparam(struct drm_device *dev, void *data,
 	case I915_PARAM_HAS_GUC:
 		value = intel_is_guc_valid(dev);
 		break;
+	case I915_PARAM_HAS_HUC:
+		value = intel_is_huc_valid(dev);
+		break;
 	default:
 		DRM_DEBUG("Unknown parameter %d\n", param->param);
 		return -EINVAL;
diff --git a/drivers/gpu/drm/i915/intel_huc.h b/drivers/gpu/drm/i915/intel_huc.h
index 946caa7..8c1847a 100644
--- a/drivers/gpu/drm/i915/intel_huc.h
+++ b/drivers/gpu/drm/i915/intel_huc.h
@@ -40,5 +40,5 @@ extern void intel_huc_init(struct drm_device *dev);
 extern int intel_huc_load(struct drm_device *dev);
 extern void intel_huc_auth(struct drm_device *dev);
 extern void intel_huc_fini(struct drm_device *dev);
-
+extern int intel_is_huc_valid(struct drm_device *dev);
 #endif
diff --git a/drivers/gpu/drm/i915/intel_huc_loader.c b/drivers/gpu/drm/i915/intel_huc_loader.c
index cd6c457..b503c9b 100644
--- a/drivers/gpu/drm/i915/intel_huc_loader.c
+++ b/drivers/gpu/drm/i915/intel_huc_loader.c
@@ -278,3 +278,18 @@ void intel_huc_fini(struct drm_device *dev)
 
 	huc_fw->fetch_status = UC_FIRMWARE_NONE;
 }
+
+/**
+ * intel_is_huc_valid() - Check to see if the HuC is fully loaded.
+ * @dev: the drm device to check.
+ *
+ * This function will return true if the guc has been loaded and
+ * has valid firmware. The simplest way of doing this is to check
+ * if the HuC has been validated, if so it must have been loaded.
+ */
+int intel_is_huc_valid(struct drm_device *dev)
+{
+	struct drm_i915_private *dev_priv = to_i915(dev);
+
+	return ((I915_READ(HUC_STATUS2) & HUC_FW_VERIFIED) != 0);
+}
diff --git a/include/uapi/drm/i915_drm.h b/include/uapi/drm/i915_drm.h
index 86d3774..116244a 100644
--- a/include/uapi/drm/i915_drm.h
+++ b/include/uapi/drm/i915_drm.h
@@ -401,6 +401,7 @@ typedef struct drm_i915_irq_wait {
 #define I915_PARAM_MIN_EU_IN_POOL        0x801
 #define I915_PARAM_HAS_GET_APERTURE2     0x802
 #define I915_PARAM_HAS_GUC               0x803
+#define I915_PARAM_HAS_HUC               0x804
 
 typedef struct drm_i915_getparam {
 	__s32 param;
-- 
1.7.5.4

