From 1dca2af44755be83b52cf4f922f4fd45e0b24399 Mon Sep 17 00:00:00 2001
From: Mousumi Jana <mousumix.jana@intel.com>
Date: Thu, 3 Dec 2015 02:21:50 +0530
Subject: [PATCH 1792/2508] ASoC: Intel: Skylake: Add support for cpr fast
 mode

commit be11a1eb2d13627a7db21256f89e3b5c3204ad18 from
https://github.com/01org/linux-apollolake-i

Added support for fast mode of operation for a copier.
In some scenarios, the copier is expected to operate
on a fast mode, wherein it consumes the available input
data and produces an equivalent output data. This mode
is different from a normal mode of operation where
the copier consumes 1 frame of data.

This is passed from the XML as an attribute and is
available in the mconfig. For copier, this value
is passed to the FW as cpr_feature_mask. This is
scalable to be extended to other modules if needed.

Change-Id: Ied1fcadcb36b23719c9a6d5e53979b56f245f639
Signed-off-by: Mousumi Jana <mousumix.jana@intel.com>
Signed-off-by: Pardha Saradhi K <pardha.saradhi.kesapragada@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/7648
Reviewed-by: Jayanti, Satya Charitardha <satya.charitardha.jayanti@intel.com>
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/skl-messages.c       |    4 ++--
 sound/soc/intel/skylake/skl-topology.c       |    1 +
 sound/soc/intel/skylake/skl-topology.h       |    1 +
 sound/soc/intel/skylake/skl-tplg-interface.h |    3 ++-
 4 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index 5462be4..5148a4a 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -455,7 +455,7 @@ static void skl_setup_cpr_gateway_cfg(struct skl_sst *ctx,
 
 	default:
 		cpr_mconfig->gtw_cfg.node_id = SKL_NON_GATEWAY_CPR_NODE_ID;
-		cpr_mconfig->cpr_feature_mask = 0;
+		cpr_mconfig->cpr_feature_mask = mconfig->fast_mode;
 		return;
 	}
 
@@ -466,7 +466,7 @@ static void skl_setup_cpr_gateway_cfg(struct skl_sst *ctx,
 	else
 		cpr_mconfig->gtw_cfg.dma_buffer_size = 2 * mconfig->ibs;
 
-	cpr_mconfig->cpr_feature_mask = 0;
+	cpr_mconfig->cpr_feature_mask = mconfig->fast_mode;
 	cpr_mconfig->gtw_cfg.config_length  = 0;
 
 	skl_copy_copier_caps(mconfig, cpr_mconfig);
diff --git a/sound/soc/intel/skylake/skl-topology.c b/sound/soc/intel/skylake/skl-topology.c
index 2bb4f6f..c070021 100644
--- a/sound/soc/intel/skylake/skl-topology.c
+++ b/sound/soc/intel/skylake/skl-topology.c
@@ -1352,6 +1352,7 @@ static int skl_tplg_widget_load(struct snd_soc_component *cmpnt,
 	mconfig->m_type = dfw_config->module_type;
 	mconfig->vbus_id = dfw_config->vbus_id;
 	mconfig->mem_pages = dfw_config->mem_pages;
+	mconfig->fast_mode = dfw_config->fast_mode;
 
 	pipe = skl_tplg_add_pipe(bus->dev, skl, &dfw_config->pipe);
 	if (pipe)
diff --git a/sound/soc/intel/skylake/skl-topology.h b/sound/soc/intel/skylake/skl-topology.h
index 4eea5be..e749375 100644
--- a/sound/soc/intel/skylake/skl-topology.h
+++ b/sound/soc/intel/skylake/skl-topology.h
@@ -283,6 +283,7 @@ struct skl_module_cfg {
 	u32 converter;
 	u32 vbus_id;
 	u32 mem_pages;
+	u32 fast_mode;
 	struct skl_module_pin *m_in_pin;
 	struct skl_module_pin *m_out_pin;
 	enum skl_module_type m_type;
diff --git a/sound/soc/intel/skylake/skl-tplg-interface.h b/sound/soc/intel/skylake/skl-tplg-interface.h
index 99cc693..3dec663 100644
--- a/sound/soc/intel/skylake/skl-tplg-interface.h
+++ b/sound/soc/intel/skylake/skl-tplg-interface.h
@@ -207,7 +207,8 @@ struct skl_dfw_module {
 	u32 is_dynamic_in_pin:1;
 	u32 is_dynamic_out_pin:1;
 	u32 is_loadable:1;
-	u32 rsvd3:11;
+	u32 fast_mode:1;
+	u32 rsvd3:10;
 
 	struct skl_dfw_pipe pipe;
 	struct skl_dfw_module_fmt in_fmt[MAX_IN_QUEUE];
-- 
1.7.5.4

