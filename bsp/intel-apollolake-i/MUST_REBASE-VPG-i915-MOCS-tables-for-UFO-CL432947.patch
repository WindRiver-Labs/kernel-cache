From ce8323d663b9e16fb8b6a145a89faa8a47203b05 Mon Sep 17 00:00:00 2001
From: Peter Antoine <peter.antoine@intel.com>
Date: Tue, 3 Nov 2015 16:18:45 -0800
Subject: [PATCH 1288/2508] MUST_REBASE [VPG]: i915: MOCS tables for UFO
 CL432947

commit e26236c4d92004b23351da98f1e5a44e20536aeb from
https://github.com/01org/linux-apollolake-i

The MOCS table generated from GmmLib derived tables for the given CL.

Tracked-On:
Change-Id: I6b02b334d2fe8dcdc50887c682cee4f0c115f336
For: GMINL-13168
Signed-off-by: Peter Antoine <peter.antoine@intel.com>
[Jeff: Remove extraneous Gen support and comments.]
Signed-off-by: Jeff McGee <jeff.mcgee@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/intel_mocs_gmm_table.c |   74 +++++++++++++++++++++++++++
 1 files changed, 74 insertions(+), 0 deletions(-)
 create mode 100644 drivers/gpu/drm/i915/intel_mocs_gmm_table.c

diff --git a/drivers/gpu/drm/i915/intel_mocs_gmm_table.c b/drivers/gpu/drm/i915/intel_mocs_gmm_table.c
new file mode 100644
index 0000000..d0af5af
--- /dev/null
+++ b/drivers/gpu/drm/i915/intel_mocs_gmm_table.c
@@ -0,0 +1,74 @@
+/*
+ * Copyright (c) 2015 Intel Corporation
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice (including the next
+ * paragraph) shall be included in all copies or substantial portions of the
+ * Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
+ * IN THE SOFTWARE.
+ *
+ */
+#include "i915_drv.h"
+#include "intel_mocs.h"
+
+static const struct drm_i915_mocs_entry gen_9_mocs_table[] = {
+	{0x00000009, 0x0010}, /* ED_UC LLC/eLLC EDSCC:0 L3SCC:0 L3_UC */
+	{0x0000003b, 0x0030}, /* ED_WB LLC/eLLC LRU_L EDSCC:0 L3SCC:0 L3_WB */
+	{0x00000039, 0x0010}, /* ED_UC LLC/eLLC LRU_L EDSCC:0 L3SCC:0 L3_UC */
+	{0x0000003b, 0x0010}, /* ED_WB LLC/eLLC LRU_L EDSCC:0 L3SCC:0 L3_UC */
+	{0x00000039, 0x0030}, /* ED_UC LLC/eLLC LRU_L EDSCC:0 L3SCC:0 L3_WB */
+	{0x00000033, 0x0030}, /* ED_WB eLLC LRU_L EDSCC:0 L3SCC:0 L3_WB */
+	{0x00000037, 0x0030}, /* ED_WB LLC LRU_L EDSCC:0 L3SCC:0 L3_WB */
+	{0x00000033, 0x0010}, /* ED_WB eLLC LRU_L EDSCC:0 L3SCC:0 L3_UC */
+	{0x00000037, 0x0010}, /* ED_WB LLC LRU_L EDSCC:0 L3SCC:0 L3_UC */
+	{0x00000017, 0x0030}, /* ED_WB LLC LRU_S EDSCC:0 L3SCC:0 L3_WB */
+	{0x00000017, 0x0010}, /* ED_WB LLC LRU_S EDSCC:0 L3SCC:0 L3_UC */
+	{0x00000019, 0x0010}, /* ED_UC LLC/eLLC LRU_S EDSCC:0 L3SCC:0 L3_UC */
+};
+
+static const struct drm_i915_mocs_entry broxton_mocs_table[] = {
+	{0x00000001, 0x0010}, /* ED_UC eLLC EDSCC:0 L3SCC:0 L3_UC */
+	{0x00000005, 0x0010}, /* ED_UC LLC EDSCC:0 L3SCC:0 L3_UC */
+	{0x00000005, 0x0030}, /* ED_UC LLC EDSCC:0 L3SCC:0 L3_WB */
+};
+
+/**
+ * get_mocs_settings
+ *
+ * This function will return the values of the MOCS table that needs to
+ * be programmed for the platform. It will return the values that need
+ * to be programmed and if they need to be programmed.
+ *
+ * If the return values is false then the registers do not need programming.
+ */
+bool get_mocs_settings(struct drm_device *dev,
+			struct drm_i915_mocs_table *table) {
+	bool	result = false;
+
+	if (INTEL_INFO(dev)->gen == 9) {
+		if (IS_BROXTON(dev)) {
+			table->size = ARRAY_SIZE(broxton_mocs_table);
+			table->table = broxton_mocs_table;
+			result = true;
+		} else {
+			table->size = ARRAY_SIZE(gen_9_mocs_table);
+			table->table = gen_9_mocs_table;
+			result = true;
+		}
+	}
+	return result;
+
+}
-- 
1.7.5.4

