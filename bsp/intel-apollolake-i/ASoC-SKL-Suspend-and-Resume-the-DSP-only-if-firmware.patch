From b5d2d7b5bca47ac303b0c6f72abd30d49e27d948 Mon Sep 17 00:00:00 2001
From: Hardik T Shah <hardik.t.shah@intel.com>
Date: Mon, 14 Mar 2016 17:45:54 +0530
Subject: [PATCH 1931/2508] ASoC: SKL: Suspend and Resume the DSP only if
 firmware is loaded.

commit 45f62eece19819d3cdcdf743702179d25200584e from
https://github.com/01org/linux-apollolake-i

Since now DSP HW initialization is split into two. HW
and Firmware initialization, Suspend and resume can be called
between the HW and FW initialization. Make sure that DSP is
suspended and resume only if it FW inilialization is done.

Change-Id: I849bea23889794e0adddd63542acfcd1f74ca2c3
Signed-off-by: Hardik T Shah <hardik.t.shah@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8401
Reviewed-by: B, Jayachandran <jayachandran.b@intel.com>
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/bxt-sst.c      |    2 +-
 sound/soc/intel/skylake/cnl-sst.c      |    2 +-
 sound/soc/intel/skylake/skl-messages.c |    4 ++--
 sound/soc/intel/skylake/skl-sst-ipc.h  |    2 ++
 sound/soc/intel/skylake/skl-sst.c      |    2 ++
 5 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/sound/soc/intel/skylake/bxt-sst.c b/sound/soc/intel/skylake/bxt-sst.c
index ad15224..03a8ab1 100644
--- a/sound/soc/intel/skylake/bxt-sst.c
+++ b/sound/soc/intel/skylake/bxt-sst.c
@@ -176,7 +176,7 @@ int bxt_sst_dsp_init_fw(struct device *dev, struct skl_sst *ctx,
 		dev_err(dev, "Load base fw failed : %x", ret);
 		return ret;
 	}
-
+	ctx->fw_loaded = true;
 	if (minfo->lib_count > 1) {
 		ret = ctx->dsp->fw_ops.load_library(ctx->dsp, minfo);
 		if (ret < 0) {
diff --git a/sound/soc/intel/skylake/cnl-sst.c b/sound/soc/intel/skylake/cnl-sst.c
index 347ef62..abcf045 100644
--- a/sound/soc/intel/skylake/cnl-sst.c
+++ b/sound/soc/intel/skylake/cnl-sst.c
@@ -583,7 +583,7 @@ int cnl_sst_dsp_init_fw(struct device *dev,
 		dev_err(dev, "Load base fw failed : %d", ret);
 		return ret;
 	}
-
+	ctx->fw_loaded = true;
 	return 0;
 }
 EXPORT_SYMBOL_GPL(cnl_sst_dsp_init_fw);
diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index c8b2edd..72de419 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -343,7 +343,7 @@ int skl_suspend_dsp(struct skl *skl)
 	if (!skl->ebus.ppcap)
 		return 0;
 
-	if (ctx) {
+	if (ctx && ctx->fw_loaded) {
 		ret = skl_dsp_sleep(ctx->dsp);
 		if (ret < 0)
 			return ret;
@@ -369,7 +369,7 @@ int skl_resume_dsp(struct skl *skl)
 	snd_hdac_ext_bus_ppcap_enable(&skl->ebus, true);
 	snd_hdac_ext_bus_ppcap_int_enable(&skl->ebus, true);
 
-	if (ctx) {
+	if (ctx && ctx->fw_loaded) {
 		ret = skl_dsp_wake(ctx->dsp);
 		if (ret < 0)
 			return ret;
diff --git a/sound/soc/intel/skylake/skl-sst-ipc.h b/sound/soc/intel/skylake/skl-sst-ipc.h
index 3ade699..ec4eddb 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.h
+++ b/sound/soc/intel/skylake/skl-sst-ipc.h
@@ -54,6 +54,8 @@ struct skl_d0i3_data {
 struct skl_sst {
 	struct device *dev;
 	struct sst_dsp *dsp;
+	/* Flag to indicate if fw is loaded or not */
+	bool fw_loaded;
 
 	/* boot */
 	wait_queue_head_t boot_wait;
diff --git a/sound/soc/intel/skylake/skl-sst.c b/sound/soc/intel/skylake/skl-sst.c
index 5c57a6d..a2be084 100644
--- a/sound/soc/intel/skylake/skl-sst.c
+++ b/sound/soc/intel/skylake/skl-sst.c
@@ -497,6 +497,8 @@ int skl_sst_dsp_init_fw(struct device *dev,
 	ret = ctx->dsp->fw_ops.load_fw(ctx->dsp);
 	if (ret < 0)
 		dev_err(dev, "Load base fw failed : %d", ret);
+	else
+		ctx->fw_loaded = true;
 
 	return ret;
 }
-- 
1.7.5.4

