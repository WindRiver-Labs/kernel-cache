From fe7a27fbda150d73f1dab5e8c1e9c256bfc584a0 Mon Sep 17 00:00:00 2001
From: "Panwar, Ashish" <ashish.panwar@intel.com>
Date: Fri, 4 Mar 2016 11:01:24 +0530
Subject: [PATCH 1894/2508] ASoC: Intel: Skylake: Fix false positive underruns
 in log buffer

commit b10a692906183caea5a763ffe6708aaf99aadf55 from
https://github.com/01org/linux-apollolake-i

Compress offload expects cumulative count for total bytes available.
This patch copied cumulative count in tstamp. It also removes
stream state fiddling from the platform driver.

Change-Id: Id26df50f0a8c24bc89fbbcfa2ccae317223ece71
Signed-off-by: Panwar, Ashish <ashish.panwar@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8331
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/common/sst-dsp-priv.h |    1 +
 sound/soc/intel/skylake/skl-fwlog.c   |    7 +++++--
 sound/soc/intel/skylake/skl-fwlog.h   |    2 +-
 sound/soc/intel/skylake/skl-pcm.c     |    4 ----
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/sound/soc/intel/common/sst-dsp-priv.h b/sound/soc/intel/common/sst-dsp-priv.h
index 59e9dcf..515503f 100644
--- a/sound/soc/intel/common/sst-dsp-priv.h
+++ b/sound/soc/intel/common/sst-dsp-priv.h
@@ -105,6 +105,7 @@ struct sst_mailbox {
 struct sst_dbg_rbuffer {
 	DECLARE_KFIFO_PTR(fifo_dsp, u32);
 	struct kref	refcount;
+	unsigned long	total_avail;
 	/* To set the state of the stream incase of XRUN */
 	struct snd_compr_stream *stream;
 };
diff --git a/sound/soc/intel/skylake/skl-fwlog.c b/sound/soc/intel/skylake/skl-fwlog.c
index f071736..60c9b62 100644
--- a/sound/soc/intel/skylake/skl-fwlog.c
+++ b/sound/soc/intel/skylake/skl-fwlog.c
@@ -73,6 +73,7 @@ int skl_dsp_init_log_buffer(struct sst_dsp *sst, int size,	int core,
 	ret = kfifo_alloc(&tmp->fifo_dsp, size, GFP_KERNEL);
 	if (!ret) {
 		tmp->stream = stream;
+		tmp->total_avail = 0;
 		kref_init(&tmp->refcount);
 		sst->trace_wind.dbg_buffers[core] = tmp;
 	} else
@@ -82,13 +83,14 @@ int skl_dsp_init_log_buffer(struct sst_dsp *sst, int size,	int core,
 }
 EXPORT_SYMBOL_GPL(skl_dsp_init_log_buffer);
 
-int skl_dsp_log_avail(struct sst_dsp *sst, int core)
+unsigned long skl_dsp_log_avail(struct sst_dsp *sst, int core)
 {
 	struct sst_dbg_rbuffer *buff = sst->trace_wind.dbg_buffers[core];
 
 	if (buff->stream->runtime->state == SNDRV_PCM_STATE_XRUN)
 		return 0;
-	return kfifo_len(&buff->fifo_dsp) * sizeof(u32);
+
+	return buff->total_avail;
 }
 EXPORT_SYMBOL(skl_dsp_log_avail);
 
@@ -118,6 +120,7 @@ void skl_dsp_write_log(struct sst_dsp *sst, void __iomem *src, int core,
 		}
 		data++;
 	}
+	buff->total_avail += count;
 }
 
 int skl_dsp_copy_log_user(struct sst_dsp *sst, int core,
diff --git a/sound/soc/intel/skylake/skl-fwlog.h b/sound/soc/intel/skylake/skl-fwlog.h
index b84be53..46caea9 100644
--- a/sound/soc/intel/skylake/skl-fwlog.h
+++ b/sound/soc/intel/skylake/skl-fwlog.h
@@ -4,7 +4,7 @@ int skl_dsp_init_trace_window(struct sst_dsp *sst, u32 *wp, u32 offset,
 				u32 size, int nr_cores);
 int skl_dsp_init_log_buffer(struct sst_dsp *sst, int size,
 				int core, struct snd_compr_stream *stream);
-int skl_dsp_log_avail(struct sst_dsp *sst, int core);
+unsigned long skl_dsp_log_avail(struct sst_dsp *sst, int core);
 void skl_dsp_write_log(struct sst_dsp *sst, void __iomem *src, int core,
 			int count);
 int skl_dsp_copy_log_user(struct sst_dsp *sst, int core, void __user *dest,
diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index 6baaba6..4cad4ae 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -653,10 +653,6 @@ static int skl_trace_compr_tstamp(struct snd_compr_stream *stream,
 		return -EINVAL;
 
 	tstamp->copied_total = skl_dsp_log_avail(sst, core);
-
-	if (tstamp->copied_total)
-		stream->runtime->state = SNDRV_PCM_STATE_RUNNING;
-
 	return 0;
 }
 
-- 
1.7.5.4

