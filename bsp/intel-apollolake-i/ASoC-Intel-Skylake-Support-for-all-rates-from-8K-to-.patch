From d251321a02f32323bddf777c8a80446f10cb5757 Mon Sep 17 00:00:00 2001
From: Mousumi Jana <mousumix.jana@intel.com>
Date: Wed, 20 Jan 2016 20:38:34 +0530
Subject: [PATCH 1838/2508] ASoC: Intel: Skylake: Support for all rates from
 8K to 192K

commit 6970116cbd1967f35aeb67bc132396e48e4955dd from
https://github.com/01org/linux-apollolake-i

Add support for all sample rates in FE pipelines which are
required for IVI usecases.

Platform capabilities have been changed to support all rates
via SNDRV_PCM_RATE_KNOT. Supported rates are validated
against a constraint list. The list contains the rates supported
by the DSP FW's rate conversion algorithm.

Change-Id: I88906a70422c84a8d62eefce37f9d4085d25839e
Signed-off-by: Mousumi Jana <mousumix.jana@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/8010
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/skl-pcm.c |   41 +++++++++++++++++++++++++++----------
 1 files changed, 30 insertions(+), 11 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index 0a3688f..75d4a64 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -45,15 +45,7 @@ static struct snd_pcm_hardware azx_pcm_hw = {
 				 SNDRV_PCM_INFO_HAS_LINK_ATIME |
 				 SNDRV_PCM_INFO_NO_PERIOD_WAKEUP),
 	.formats =		SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S24_LE,
-	.rates =		SNDRV_PCM_RATE_192000 |
-				SNDRV_PCM_RATE_176400 |
-				SNDRV_PCM_RATE_96000 |
-				SNDRV_PCM_RATE_88200 |
-				SNDRV_PCM_RATE_64000 |
-				SNDRV_PCM_RATE_48000 |
-				SNDRV_PCM_RATE_32000 |
-				SNDRV_PCM_RATE_16000 |
-				SNDRV_PCM_RATE_8000,
+	.rates =		SNDRV_PCM_RATE_8000_192000 | SNDRV_PCM_RATE_KNOT,
 	.rate_min =		8000,
 	.rate_max =		192000,
 	.channels_min =		1,
@@ -126,6 +118,30 @@ static enum hdac_ext_stream_type skl_get_host_stream_type(struct hdac_ext_bus *e
 		return HDAC_EXT_STREAM_TYPE_COUPLED;
 }
 
+static unsigned int rates[] = {
+	8000,
+	11025,
+	12000,
+	16000,
+	22050,
+	24000,
+	32000,
+	44100,
+	48000,
+	64000,
+	88200,
+	96000,
+	128000,
+	176400,
+	192000,
+};
+
+static struct snd_pcm_hw_constraint_list hw_rates = {
+	.count = ARRAY_SIZE(rates),
+	.list = rates,
+	.mask = 0,
+};
+
 static int skl_pcm_open(struct snd_pcm_substream *substream,
 		struct snd_soc_dai *dai)
 {
@@ -143,6 +159,10 @@ static int skl_pcm_open(struct snd_pcm_substream *substream,
 
 	skl_set_pcm_constrains(ebus, runtime);
 
+	snd_pcm_hw_constraint_list(runtime, 0,
+					SNDRV_PCM_HW_PARAM_RATE,
+					&hw_rates);
+
 	/*
 	 * disable WALLCLOCK timestamps for capture streams
 	 * until we figure out how to handle digital inputs
@@ -562,8 +582,7 @@ static struct snd_soc_dai_driver skl_platform_dai[] = {
 		.stream_name = "System Playback",
 		.channels_min = HDA_MONO,
 		.channels_max = HDA_STEREO,
-		.rates = SNDRV_PCM_RATE_48000 | SNDRV_PCM_RATE_32000 |
-			SNDRV_PCM_RATE_16000 | SNDRV_PCM_RATE_8000,
+		.rates = SNDRV_PCM_RATE_8000_192000 | SNDRV_PCM_RATE_KNOT,
 		.formats = SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S24_LE,
 	},
 	.capture = {
-- 
1.7.5.4

