From 9f75200c8f66ffa34211f9533a80782938ae50e9 Mon Sep 17 00:00:00 2001
From: Bob Paauwe <bob.j.paauwe@intel.com>
Date: Tue, 19 Apr 2016 14:46:29 -0700
Subject: [PATCH 4382/4706] drm/i915/profiling: Update the GUC profile.

commit 9da3243a97bb90ca8f1ee5ca2eb7971cba92e1b7 from
git://git.yoctoproject.org/linux-yocto-4.1

Record both the init time (time to load firmware) and the time to
load the firmware into the GUC.

Signed-off-by: Bob Paauwe <bob.j.paauwe@intel.com>
Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
[Kevin: Just some minor context mods in order to port to wrlinux]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/gpu/drm/i915/i915_debugfs.c     |    6 ++++--
 drivers/gpu/drm/i915/i915_drv.h         |    1 +
 drivers/gpu/drm/i915/intel_guc_loader.c |    7 ++++---
 3 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_debugfs.c b/drivers/gpu/drm/i915/i915_debugfs.c
index 2d2ed88..3705d89 100644
--- a/drivers/gpu/drm/i915/i915_debugfs.c
+++ b/drivers/gpu/drm/i915/i915_debugfs.c
@@ -2396,10 +2396,12 @@ static int i915_timing_info(struct seq_file *m, void *data)
 	seq_printf(m, "Timing info\n");
 	seq_printf(m, "  Driver load time: %lldms\n",
 		   (dev_priv->profile.driver_load / 1000000));
+	seq_printf(m, "    GUC firmware init time:             %lldms\n",
+		   (dev_priv->profile.guc_init / 1000000));
+	seq_printf(m, "    GUC firmware load time:             %lldms\n",
+		   (dev_priv->profile.guc_load / 1000000));
 	seq_printf(m, "  Frambuffer device load time: %lldms\n",
 		   (dev_priv->profile.fbdev_load / 1000000));
-	seq_printf(m, "  GUC firmware load time: %lldms\n",
-		   (dev_priv->profile.guc_load / 1000000));
 	seq_printf(m, "  CSR firmware load time: %lldms\n",
 		   (dev_priv->profile.csr_load / 1000000));
 
diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index 1689edc..48b1c3b 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -1704,6 +1704,7 @@ struct intel_pipe_crc {
 struct intel_load_profiles {
 	unsigned long long driver_load;
 	unsigned long long fbdev_load;
+	unsigned long long guc_init;
 	unsigned long long guc_load;
 	unsigned long long csr_load;
 };
diff --git a/drivers/gpu/drm/i915/intel_guc_loader.c b/drivers/gpu/drm/i915/intel_guc_loader.c
index 140b5ba..7db1816 100644
--- a/drivers/gpu/drm/i915/intel_guc_loader.c
+++ b/drivers/gpu/drm/i915/intel_guc_loader.c
@@ -453,6 +453,7 @@ int intel_guc_setup(struct drm_device *dev)
 	struct intel_guc_fw *guc_fw = &dev_priv->guc.guc_fw;
 	const char *fw_path = guc_fw->guc_fw_path;
 	int retries, ret, err;
+	unsigned long long start = sched_clock();
 
 	DRM_DEBUG_DRIVER("GuC fw status: path %s, fetch %s, load %s\n",
 		fw_path,
@@ -534,6 +535,7 @@ int intel_guc_setup(struct drm_device *dev)
 		guc_interrupts_capture(dev_priv);
 	}
 
+	dev_priv->profile.guc_load = sched_clock() - start;
 	return 0;
 
 fail:
@@ -720,7 +722,7 @@ void intel_guc_init(struct drm_device *dev)
 	struct intel_guc_fw *guc_fw = &dev_priv->guc.guc_fw;
 	const char *fw_path;
 	bool is_forced_rc6 = false;
-	unsigned long long start;
+	unsigned long long start = sched_clock();
 
 	/* A negative value means "use platform default" */
 	if (i915.enable_guc_loading < 0)
@@ -759,7 +761,6 @@ void intel_guc_init(struct drm_device *dev)
 	if (*fw_path == '\0')
 		return;
 
-	start = sched_clock();
 	guc_fw->guc_fw_fetch_status = GUC_FIRMWARE_PENDING;
 	DRM_DEBUG_DRIVER("GuC firmware pending, path %s\n", fw_path);
 
@@ -778,13 +779,13 @@ void intel_guc_init(struct drm_device *dev)
 	}
 
 	guc_fw_fetch(dev, guc_fw);
+	dev_priv->profile.guc_init = sched_clock() - start;
 	/* status must now be FAIL or SUCCESS */
 
 	if (is_forced_rc6) {
 		DRM_DEBUG_DRIVER("End Broxton GuC load WA: exit RC6\n");
 		I915_WRITE(GEN6_RC_STATE, I915_READ(GEN6_RC_STATE) & ~RC6_STATE);
 	}
-	dev_priv->profile.guc_load = sched_clock() - start;
 }
 
 /**
-- 
1.7.5.4

