From 878552368bdd25412379e3ccf439512d0a5931f1 Mon Sep 17 00:00:00 2001
From: Mousumi Jana <mousumix.jana@intel.com>
Date: Wed, 13 Jul 2016 00:23:36 +0530
Subject: [PATCH 2133/2508] ASoC: Intel: Skylake: Add support for topology
 change notification

commit 96258cf4fefca8ae7d04f74cc2465402f65339b2 from
https://github.com/01org/linux-apollolake-i

Some events like Pipeline start, pipeline deletion, DSP D0/D3
need to be notified to the user, in order to convey a
change in the topology. Support for notifying such events has
been added by the way of a kcontrol. This kcontrol has the
time at which the last change occurred in the topology.

Change-Id: I9b0d4fbf48e3ba614c52aece12b33810c8a4ec56
Signed-off-by: Mousumi Jana <mousumix.jana@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/10167
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Jayanti, Satya Charitardha <satya.charitardha.jayanti@intel.com>
---
 sound/soc/intel/skylake/bxt-sst.c            |    4 +++
 sound/soc/intel/skylake/skl-fwlog.c          |   25 ++++++++++++++++++++++++
 sound/soc/intel/skylake/skl-fwlog.h          |    1 +
 sound/soc/intel/skylake/skl-messages.c       |    6 ++++-
 sound/soc/intel/skylake/skl-pcm.c            |   25 ++++++++++++++++++++---
 sound/soc/intel/skylake/skl-sst-dsp.h        |   13 ++++++++++++
 sound/soc/intel/skylake/skl-topology.c       |   27 ++++++++++++++++++++++++++
 sound/soc/intel/skylake/skl-topology.h       |    1 +
 sound/soc/intel/skylake/skl-tplg-interface.h |    1 +
 9 files changed, 98 insertions(+), 5 deletions(-)

diff --git a/sound/soc/intel/skylake/bxt-sst.c b/sound/soc/intel/skylake/bxt-sst.c
index 6922f05..1ae8b91 100644
--- a/sound/soc/intel/skylake/bxt-sst.c
+++ b/sound/soc/intel/skylake/bxt-sst.c
@@ -506,6 +506,8 @@ int bxt_set_dsp_D0(struct sst_dsp *ctx, unsigned int core_id)
 	}
 
 	ctx->core_info.core_state[core_id] = SKL_DSP_RUNNING;
+	skl_update_topology_change_event_data(skl, SKL_TPLG_CHG_NOTIF_DSP_D0);
+
 	return 0;
 err:
 	skl_dsp_disable_core(ctx, core_mask);
@@ -540,6 +542,8 @@ static int bxt_set_dsp_D3(struct sst_dsp *ctx, unsigned int core_id)
 		return ret;
 
 	ctx->core_info.core_state[core_id] = SKL_DSP_RESET;
+	skl_update_topology_change_event_data(skl, SKL_TPLG_CHG_NOTIF_DSP_D3);
+
 	return 0;
 
 }
diff --git a/sound/soc/intel/skylake/skl-fwlog.c b/sound/soc/intel/skylake/skl-fwlog.c
index cdaaf6d..564c58b 100644
--- a/sound/soc/intel/skylake/skl-fwlog.c
+++ b/sound/soc/intel/skylake/skl-fwlog.c
@@ -22,6 +22,7 @@
 #include "../common/sst-dsp-priv.h"
 #include "skl-sst-ipc.h"
 #include "skl.h"
+#include "skl-topology.h"
 
 #define DEF_LOG_PRIORITY 3
 
@@ -192,6 +193,30 @@ void skl_dsp_done_log_buffer(struct sst_dsp *sst, int core)
 }
 EXPORT_SYMBOL_GPL(skl_dsp_done_log_buffer);
 
+int skl_update_topology_change_event_data(struct skl_sst *ctx, int type)
+{
+	struct skl_notify_data *notify_data;
+	struct skl_tcn_events tcn_data;
+
+	notify_data = kzalloc((sizeof(struct skl_notify_data)
+				+ sizeof(struct skl_tcn_events)), GFP_KERNEL);
+
+	if (!notify_data)
+		return -ENOMEM;
+	tcn_data.type = type;
+	do_gettimeofday(&(tcn_data.tv));
+
+	/* Copying tcn event specific data */
+	memcpy(notify_data->data, &tcn_data, sizeof(struct skl_tcn_events));
+	notify_data->length = sizeof(struct skl_tcn_events);
+	notify_data->type = 0xFF;
+	ctx->notify_ops.notify_cb(ctx, SKL_TPLG_CHG_NOTIFY, notify_data);
+	kfree(notify_data);
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(skl_update_topology_change_event_data);
+
 /* Module Information */
 MODULE_AUTHOR("Ashish Panwar <ashish.panwar@intel.com");
 MODULE_DESCRIPTION("Intel SST FW Log Tracing");
diff --git a/sound/soc/intel/skylake/skl-fwlog.h b/sound/soc/intel/skylake/skl-fwlog.h
index fbaf8ad..a10c258 100644
--- a/sound/soc/intel/skylake/skl-fwlog.h
+++ b/sound/soc/intel/skylake/skl-fwlog.h
@@ -15,3 +15,4 @@ void skl_dsp_done_log_buffer(struct sst_dsp *sst, int core);
 int skl_dsp_get_buff_users(struct sst_dsp *sst, int core);
 int update_dsp_log_priority(int value, struct skl *skl);
 int get_dsp_log_priority(struct skl *skl);
+int skl_update_topology_change_event_data(struct skl_sst *ctx, int type);
diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index 7f49ec3..2071a00f 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -31,6 +31,7 @@
 #include "../common/sst-dsp-priv.h"
 #include "skl-topology.h"
 #include "skl-tplg-interface.h"
+#include "skl-fwlog.h"
 
 static int skl_alloc_dma_buf(struct device *dev,
 		struct snd_dma_buffer *dmab, size_t size)
@@ -1245,8 +1246,9 @@ int skl_delete_pipe(struct skl_sst *ctx, struct skl_pipe *pipe)
 		dev_err(ctx->dev, "Failed to delete pipeline\n");
 		return ret;
 	}
-
 	pipe->state = SKL_PIPE_INVALID;
+	skl_update_topology_change_event_data(ctx,
+			SKL_TPLG_CHG_NOTIF_PIPELINE_STOP);
 
 	return ret;
 }
@@ -1283,6 +1285,8 @@ int skl_run_pipe(struct skl_sst *ctx, struct skl_pipe *pipe)
 
 	pipe->state = SKL_PIPE_STARTED;
 
+	skl_update_topology_change_event_data(ctx,
+		SKL_TPLG_CHG_NOTIF_PIPELINE_START);
 	return 0;
 }
 
diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index e952296..7c62213 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -886,6 +886,23 @@ static int skl_dsp_cb_event(struct skl_sst *skl, unsigned int event,
 		param_length = sizeof(struct skl_notify_data) + sizeof(struct skl_hwd_event);
 		memcpy(bc->params, (char *)notify_data, param_length);
 		snd_ctl_notify(card->snd_card, SNDRV_CTL_EVENT_MASK_VALUE, &kcontrol->id);
+		break;
+
+	case SKL_TPLG_CHG_NOTIFY:
+		card = soc_platform->component.card;
+		kcontrol = snd_soc_card_get_kcontrol(card,
+				"Topology Change Notification");
+		if (!kcontrol) {
+			dev_err(skl->dev, " NOTIFICATION Controls not found\n");
+			return -EINVAL;
+		}
+
+		sb = (struct soc_bytes_ext *)kcontrol->private_value;
+		memcpy(sb->dobj.private, (void *)(notify_data->data),
+						sizeof(struct skl_tcn_events));
+		snd_ctl_notify(card->snd_card, SNDRV_CTL_EVENT_MASK_VALUE,
+					&kcontrol->id);
+		break;
 	}
 	return 0;
 }
@@ -1617,16 +1634,16 @@ static int skl_platform_soc_probe(struct snd_soc_platform *platform)
 			dev_dbg(bus->dev, "error failed while initializing topology\n");
 			return ret;
 		}
+		skl->skl_sst->update_d0i3c = skl_update_d0i3c;
+		skl->skl_sst->platform = platform;
+		skl->skl_sst->notify_ops = cb_ops;
+		skl->skl_sst->enable_miscbdcge = skl_enable_miscbdcge;
 
 		ret = skl_init_dsp_fw(skl);
 		if (ret < 0) {
 			dev_dbg(bus->dev, "error failed to register dsp\n");
 			goto out_free;
 		}
-		skl->skl_sst->update_d0i3c = skl_update_d0i3c;
-		skl->skl_sst->platform = platform;
-		skl->skl_sst->notify_ops = cb_ops;
-		skl->skl_sst->enable_miscbdcge = skl_enable_miscbdcge;
 	}
 
 	skl_get_probe_widget(platform, skl);
diff --git a/sound/soc/intel/skylake/skl-sst-dsp.h b/sound/soc/intel/skylake/skl-sst-dsp.h
index ac5c9dc..16607a7 100644
--- a/sound/soc/intel/skylake/skl-sst-dsp.h
+++ b/sound/soc/intel/skylake/skl-sst-dsp.h
@@ -19,6 +19,7 @@
 #include <linux/interrupt.h>
 #include <sound/memalloc.h>
 #include "skl-sst-cldma.h"
+#include <linux/time.h>
 
 struct sst_dsp;
 struct skl_sst;
@@ -181,6 +182,18 @@ struct skl_dsp_notify_ops {
 	int (*notify_cb)(struct skl_sst *skl, unsigned int event, struct skl_notify_data *notify_data);
 };
 
+enum skl_event_type {
+	SKL_TPLG_CHG_NOTIF_PIPELINE_START = 1,
+	SKL_TPLG_CHG_NOTIF_PIPELINE_STOP,
+	SKL_TPLG_CHG_NOTIF_DSP_D0,
+	SKL_TPLG_CHG_NOTIF_DSP_D3,
+};
+
+struct skl_tcn_events {
+	enum skl_event_type type;
+	struct timeval tv;
+};
+
 struct skl_load_module_info {
 	u16 mod_id;
 	const struct firmware *fw;
diff --git a/sound/soc/intel/skylake/skl-topology.c b/sound/soc/intel/skylake/skl-topology.c
index a2b2133..d47d7ba 100644
--- a/sound/soc/intel/skylake/skl-topology.c
+++ b/sound/soc/intel/skylake/skl-topology.c
@@ -2093,6 +2093,30 @@ int skl_tplg_be_update_params(struct snd_soc_dai *dai,
 	return 0;
 }
 
+static int skl_tplg_notification_log_get(struct snd_kcontrol *kcontrol,
+		unsigned int __user *data, unsigned int size)
+{
+	struct skl_tcn_events *events;
+	struct soc_bytes_ext *sb = (struct soc_bytes_ext *) kcontrol->private_value;
+	int ret, type = 0xff;
+
+	events = (struct skl_tcn_events *)sb->dobj.private;
+	ret = copy_to_user(data, &type, sizeof(u32));
+	ret = copy_to_user(((unsigned char *)data) + sizeof(u32),
+				sb->max, sizeof(u32));
+	ret = copy_to_user(((unsigned char *)data) + 2*sizeof(u32),
+				events, sizeof(struct skl_tcn_events));
+
+	memset(events, 0, sizeof(struct skl_tcn_events));
+	return ret;
+}
+
+static int skl_tplg_notification_log_put(struct snd_kcontrol *kcontrol,
+		unsigned int __user *data, unsigned int size)
+{
+	return 0;
+}
+
 static const struct snd_soc_tplg_widget_events skl_tplg_widget_ops[] = {
 	{SKL_MIXER_EVENT, skl_tplg_mixer_event},
 	{SKL_VMIXER_EVENT, skl_tplg_vmixer_event},
@@ -2104,7 +2128,10 @@ const struct snd_soc_tplg_bytes_ext_ops skl_tlv_ops[] = {
 					skl_tplg_tlv_control_set},
 	{SKL_CONTROL_TYPE_BYTE_PROBE, skl_tplg_tlv_control_get,
 					skl_tplg_tlv_probe_set},
+	{SKL_CONTROL_TYPE_NOTIFICATION_LOG, skl_tplg_notification_log_get,
+					skl_tplg_notification_log_get},
 };
+
 static const struct snd_soc_tplg_kcontrol_ops skl_tplg_kcontrol_ops[] = {
 	{SKL_CONTROL_TYPE_VOLUME, skl_tplg_volume_get,
 					skl_tplg_volume_set},
diff --git a/sound/soc/intel/skylake/skl-topology.h b/sound/soc/intel/skylake/skl-topology.h
index b03ed7e..48fa5f0 100644
--- a/sound/soc/intel/skylake/skl-topology.h
+++ b/sound/soc/intel/skylake/skl-topology.h
@@ -40,6 +40,7 @@
 
 #define MODULE_MAX_IN_PINS	8
 #define MODULE_MAX_OUT_PINS	8
+#define SKL_TPLG_CHG_NOTIFY	3
 
 enum skl_channel_index {
 	SKL_CHANNEL_LEFT = 0,
diff --git a/sound/soc/intel/skylake/skl-tplg-interface.h b/sound/soc/intel/skylake/skl-tplg-interface.h
index cbfdf30..bcfd5a1 100644
--- a/sound/soc/intel/skylake/skl-tplg-interface.h
+++ b/sound/soc/intel/skylake/skl-tplg-interface.h
@@ -26,6 +26,7 @@
 #define SKL_CONTROL_TYPE_RAMP_DURATION  0x103
 #define SKL_CONTROL_TYPE_RAMP_TYPE      0x104
 #define SKL_CONTROL_TYPE_DSP_LOG      0x105
+#define SKL_CONTROL_TYPE_NOTIFICATION_LOG  0x106
 #define SKL_CONTROL_TYPE_BYTE_PROBE	0x101
 
 #define HDA_SST_CFG_MAX	900 /* size of copier cfg*/
-- 
1.7.5.4

