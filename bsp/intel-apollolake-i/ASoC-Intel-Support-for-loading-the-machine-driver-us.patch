From 984b65a4d0a36174450db5e3c5a81cfd33976e14 Mon Sep 17 00:00:00 2001
From: Mousumi Jana <mousumix.jana@intel.com>
Date: Fri, 11 Dec 2015 00:01:50 +0530
Subject: [PATCH 1812/2508] ASoC: Intel: Support for loading the machine
 driver using module parameter

commit 7ce4f41befb221aeb2f6571bd801b14190df5276 from
https://github.com/01org/linux-apollolake-i

Added support for loading the machine driver for RSE and HU using
module parameter.For loading the RSE or HU machine driver
"bxt_ivi_rse_i2s" or "bxt_ivi_hu_i2s" parameter should be
passed as a module parameter.

Change-Id: Icc948a9dfdf24d9b1f305fb0f9d784e077566102
Signed-off-by: Mousumi Jana <mousumix.jana@intel.com>
Reviewed-on: https://git-gar-1.devtools.intel.com/gerrit/7818
Reviewed-by: Babu, Ramesh <ramesh.babu@intel.com>
Tested-by: Babu, Ramesh <ramesh.babu@intel.com>
---
 sound/soc/intel/skylake/skl.c |   28 +++++++++++++++++++++++-----
 1 files changed, 23 insertions(+), 5 deletions(-)

diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index c4045aa..57ccc84 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -31,6 +31,12 @@
 #include <sound/hda_i915.h>
 #include "skl.h"
 
+static char *machine = NULL;
+
+module_param(machine, charp, 0444);
+MODULE_PARM_DESC(machine, "machine driver string for Intel soundcard.");
+
+
 struct sst_machines {
 	char *codec_id;
 	char *machine;
@@ -285,13 +291,22 @@ static int skl_machine_device_register(struct skl *skl, void *driver_data)
 {
 	struct hdac_bus *bus = ebus_to_hbus(&skl->ebus);
 	struct platform_device *pdev;
-	struct sst_machines *mach = driver_data;
+	struct sst_machines *mach = NULL;
 	int ret;
 
-	mach = sst_acpi_find_machine(mach);
-	if (mach == NULL) {
-		dev_err(bus->dev, "No matching machine driver found\n");
-		return -ENODEV;
+	if (machine) {
+		mach = kzalloc(sizeof(*mach), GFP_KERNEL);
+		if (!mach)
+			return -ENOMEM;
+		mach->machine = machine;
+	} else {
+		mach = driver_data;
+		mach = sst_acpi_find_machine(mach);
+		if (mach == NULL) {
+			dev_err(bus->dev, "No matching machine driver found\n");
+			return -ENODEV;
+		}
+
 	}
 
 	dev_dbg(bus->dev, "Machine driver found:%s\n", mach->machine);
@@ -308,6 +323,9 @@ static int skl_machine_device_register(struct skl *skl, void *driver_data)
 		return -EIO;
 	}
 	skl->i2s_dev = pdev;
+	if (machine)
+		kfree(mach);
+
 	return 0;
 }
 
-- 
1.7.5.4

