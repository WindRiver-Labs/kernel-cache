From afe94d2cbf1296c239c8a14bb9271b7790bd69cd Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Wed, 25 Jan 2017 03:38:25 +0000
Subject: [PATCH 1/3] Revert "NS2 SOC-4414 Preserve AxCACHE on Linux USBDRD
 phy setup"

This reverts commit bbdd8f473d90e192239a7d144e616b2749c84e6b.
Discarded the usb core files changing and replaced with the subsequent patch
"Fix the device treee to get USB working".

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 arch/arm64/boot/dts/broadcom/ns2-svk.dts |  113 +++++++++++++++++-------------
 arch/arm64/boot/dts/broadcom/ns2.dtsi    |   44 ++----------
 drivers/extcon/extcon.c                  |   20 +++++
 drivers/phy/phy-bcm-ns2-usbdrd.c         |   11 +---
 drivers/usb/core/hcd.c                   |   76 +++++++-------------
 drivers/usb/host/xhci-plat.c             |   13 +---
 include/linux/extcon.h                   |   51 -------------
 include/linux/usb/hcd.h                  |    2 -
 8 files changed, 121 insertions(+), 209 deletions(-)

diff --git a/arch/arm64/boot/dts/broadcom/ns2-svk.dts b/arch/arm64/boot/dts/broadcom/ns2-svk.dts
index c134d0d..702bafb 100644
--- a/arch/arm64/boot/dts/broadcom/ns2-svk.dts
+++ b/arch/arm64/boot/dts/broadcom/ns2-svk.dts
@@ -56,18 +56,6 @@
 	};
 };
 
-&ehci0 {
-	status = "ok";
-};
-
-&ehci1 {
-	status = "ok";
-};
-
-&ehci2 {
-	status = "ok";
-};
-
 &enet {
 	status = "ok";
 };
@@ -149,11 +137,25 @@
 	status = "ok";
 };
 
-&udc_dwc {
-	status = "ok";
-};
 &ssp0 {
 	status = "ok";
+
+	slic@0 {
+		compatible = "silabs,si3226x";
+		reg = <0>;
+		spi-max-frequency = <5000000>;
+		spi-cpha = <1>;
+		spi-cpol = <1>;
+		pl022,hierarchy = <0>;
+		pl022,interface = <0>;
+		pl022,slave-tx-disable = <0>;
+		pl022,com-mode = <0>;
+		pl022,rx-level-trig = <1>;
+		pl022,tx-level-trig = <1>;
+		pl022,ctrl-len = <11>;
+		pl022,wait-state = <0>;
+		pl022,duplex = <0>;
+	};
 };
 
 &ssp1 {
@@ -182,28 +184,33 @@
 
 &pinctrl {
 	pinctrl-names = "default";
-	pinctrl-0 = <&nand_sel &usb2_sel>;
+	pinctrl-0 = <&nand_sel &uart0_sel &uart1_sel &uart2_sel &usb2_sel>;
 	nand_sel: nand_sel {
 		function = "nand";
 		groups = "nand_grp";
 	};
 
-	usb2_sel: usb2_sel {
-		pins = "usb2_presence_indication";
-		bias-pull-up;
+	uart0_sel: uart0_sel {
+		function = "uart0";
+		groups = "uart0_rts_cts_grp", "uart0_in_out_grp",
+			 "uart0_modem_grp";
 	};
-};
 
-&ohci0 {
-	status = "ok";
-};
+	uart1_sel: uart1_sel {
+		function = "uart1";
+		groups = "uart1_dcd_dsr_grp", "uart1_ri_dtr_grp",
+			 "uart1_rts_cts_grp", "uart1_in_out_grp";
+	};
 
-&ohci1 {
-	status = "ok";
-};
+	uart2_sel: uart2_sel {
+		function = "uart2";
+		groups = "uart2_rts_cts_grp";
+	};
 
-&ohci2 {
-	status = "ok";
+	usb2_sel: usb2_sel {
+		pins = "usb2_presence_indication";
+		bias-pull-up;
+	};
 };
 
 &sata_phy0 {
@@ -320,30 +327,36 @@
 	};
 };
 
-&usbphy0 {
-	status = "ok";
-};
-
-&usbphy1 {
-	status = "ok";
-};
-
-&usbdrd_phy {
-	status = "ok";
-};
+&qspi {
+	bspi-sel = <0>;
+	flash: m25p80@0 {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "m25p80";
+		reg = <0x0>;
+		spi-max-frequency = <12500000>;
+		m25p,fast-read;
+		spi-cpol;
+		spi-cpha;
 
-&usb3_phy0 {
-	status = "ok";
-};
+		partition@0 {
+			label = "boot";
+			reg = <0x00000000 0x000a0000>;
+		};
 
-&usb3_phy1 {
-	status = "ok";
-};
+		partition@a0000 {
+			label = "env";
+			reg = <0x000a0000 0x00060000>;
+		};
 
-&xhci0 {
-	status = "ok";
-};
+		partition@100000 {
+			label = "system";
+			reg = <0x00100000 0x00600000>;
+		};
 
-&xhci1 {
-	status = "ok";
+		partition@700000 {
+			label = "rootfs";
+			reg = <0x00700000 0x01900000>;
+		};
+	};
 };
diff --git a/arch/arm64/boot/dts/broadcom/ns2.dtsi b/arch/arm64/boot/dts/broadcom/ns2.dtsi
index d8de7c7..e6b2d5a 100644
--- a/arch/arm64/boot/dts/broadcom/ns2.dtsi
+++ b/arch/arm64/boot/dts/broadcom/ns2.dtsi
@@ -30,8 +30,6 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
-/memreserve/ 0x81000000 0x00200000;
-
 #include <dt-bindings/interrupt-controller/arm-gic.h>
 #include <dt-bindings/clock/bcm-ns2.h>
 
@@ -236,7 +234,6 @@
 			#dma-cells = <1>;
 			#dma-channels = <8>;
 			#dma-requests = <32>;
-			dma-coherent;
 			clocks = <&iprocslow>;
 			clock-names = "apb_pclk";
 		};
@@ -279,31 +276,7 @@
 				     <GIC_SPI 260 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 261 IRQ_TYPE_LEVEL_HIGH>,
 				     <GIC_SPI 262 IRQ_TYPE_LEVEL_HIGH>;
-			mmu-masters = <&dma1 0x408>;
-			#iommu-cells = <0>;
-		};
-
-		dma1: dma@66330000 {
-			compatible = "arm,pl330", "arm,primecell";
-			reg = <0x66330000 0x1000>;
-			interrupts = <GIC_SPI 410 IRQ_TYPE_LEVEL_HIGH>,
-					<GIC_SPI 411 IRQ_TYPE_LEVEL_HIGH>,
-					<GIC_SPI 412 IRQ_TYPE_LEVEL_HIGH>,
-					<GIC_SPI 413 IRQ_TYPE_LEVEL_HIGH>,
-					<GIC_SPI 414 IRQ_TYPE_LEVEL_HIGH>,
-					<GIC_SPI 415 IRQ_TYPE_LEVEL_HIGH>,
-					<GIC_SPI 416 IRQ_TYPE_LEVEL_HIGH>,
-					<GIC_SPI 417 IRQ_TYPE_LEVEL_HIGH>,
-					<GIC_SPI 418 IRQ_TYPE_LEVEL_HIGH>;
-			#dma-cells = <1>;
-			#dma-channels = <8>;
-			#dma-requests = <32>;
-			dma-coherent;
-			copy_align = <7>;
-			clocks = <&iprocslow>;
-			clock-names = "apb_pclk";
-			#stream-id-cells = <1>;
-			iommus = <&smmu>;
+			#iommu-cells = <1>;
 		};
 
 		pinctrl: pinctrl@6501d130 {
@@ -681,7 +654,7 @@
 			reg = <0x66300000 0xcf0>;
 			interrupts = <GIC_SPI 429 IRQ_TYPE_LEVEL_HIGH>;
 			phys = <&usb3_phy0>;
-			phy-names = "usb";
+			phy-names = "usb3-phy";
 			dma-coherent;
 			needs-reset-on-resume;
 			status = "disabled";
@@ -698,7 +671,7 @@
 			reg = <0x66310000 0xcf0>;
 			interrupts = <GIC_SPI 433 IRQ_TYPE_LEVEL_HIGH>;
 			phys = <&usb3_phy1>;
-			phy-names = "usb";
+			phy-names = "usb3-phy";
 			dma-coherent;
 			needs-reset-on-resume;
 			status = "disabled";
@@ -710,11 +683,11 @@
 			reg = <0x66310e00 0x1ac>;
 		};
 
-               sata_phy: sata_phy@663f0100 {
-                       compatible = "brcm,iproc-ns2-sata-phy";
-                       reg = <0x663f0100 0x1f00>,
-                             <0x663f004c 0x10>;
-                       reg-names = "phy", "phy-ctrl";
+		sata_phy: sata_phy@663f0100 {
+			compatible = "brcm,iproc-ns2-sata-phy";
+			reg = <0x663f0100 0x1f00>,
+			      <0x663f004c 0x10>;
+			reg-names = "phy", "phy-ctrl";
 			#address-cells = <1>;
 			#size-cells = <0>;
 
@@ -872,7 +845,6 @@
 			phys = <&usbdrd_phy>;
 			phy-names = "usb2drd";
 			extcon = <&usbdrd_phy>;
-			dma-coherent;
 			status = "disabled";
 		};
 
diff --git a/drivers/extcon/extcon.c b/drivers/extcon/extcon.c
index bc93cc0..8682efc 100644
--- a/drivers/extcon/extcon.c
+++ b/drivers/extcon/extcon.c
@@ -77,6 +77,26 @@ static const char *extcon_name[] =  {
 	NULL,
 };
 
+/**
+ * struct extcon_cable - An internal data for each cable of extcon device.
+ * @edev:		The extcon device
+ * @cable_index:	Index of this cable in the edev
+ * @attr_g:		Attribute group for the cable
+ * @attr_name:		"name" sysfs entry
+ * @attr_state:		"state" sysfs entry
+ * @attrs:		Array pointing to attr_name and attr_state for attr_g
+ */
+struct extcon_cable {
+	struct extcon_dev *edev;
+	int cable_index;
+
+	struct attribute_group attr_g;
+	struct device_attribute attr_name;
+	struct device_attribute attr_state;
+
+	struct attribute *attrs[3]; /* to be fed to attr_g.attrs */
+};
+
 static struct class *extcon_class;
 #if defined(CONFIG_ANDROID)
 static struct class_compat *switch_class;
diff --git a/drivers/phy/phy-bcm-ns2-usbdrd.c b/drivers/phy/phy-bcm-ns2-usbdrd.c
index aa0830f..9c4b0f7 100644
--- a/drivers/phy/phy-bcm-ns2-usbdrd.c
+++ b/drivers/phy/phy-bcm-ns2-usbdrd.c
@@ -55,12 +55,7 @@
 #define DRD_HOST_VAL		0x803
 #define DRD_DEV_VAL		0x807
 #define DRD_AFE_VAL		0xc0000001
-/* DRD_IOTCTRL_VAL does not include AxCACHE, which is preserved */
 #define DRD_IOCTRL_VAL		0x3dee001
-#define DRD_IOCTL_ARCACHE_W	4
-#define DRD_IOCTL_ARCACHE_R	6
-#define DRD_IOCTL_AWCACHE_W	4
-#define DRD_IOCTL_AWCACHE_R	2
 #define STRAP_CTRL_VAL		0x7ff0001
 #define GPIO_DELAY		20
 #define PHY_WQ_DELAY		msecs_to_jiffies(550)
@@ -144,11 +139,7 @@ static int ns2_drd_phy_init(struct phy *phy)
 	writel(DRD_AFE_VAL, driver->icfgdrd_regs + ICFG_DRD_AFE);
 
 	/* Configure IDM IO control register*/
-	/* preserve AxCACHE settings */
-	val = readl(driver->idmdrd_io_ctrl);
-	val &= ((((1 << DRD_IOCTL_ARCACHE_W) - 1) << DRD_IOCTL_ARCACHE_R) |
-		(((1 << DRD_IOCTL_AWCACHE_W) - 1) << DRD_IOCTL_AWCACHE_R));
-	writel(DRD_IOCTRL_VAL | val, driver->idmdrd_io_ctrl);
+	writel(DRD_IOCTRL_VAL, driver->idmdrd_io_ctrl);
 
 	val = readl(driver->icfgdrd_regs + ICFG_FSM_CTRL);
 
diff --git a/drivers/usb/core/hcd.c b/drivers/usb/core/hcd.c
index 52d7b4b..2a2728f 100644
--- a/drivers/usb/core/hcd.c
+++ b/drivers/usb/core/hcd.c
@@ -2715,9 +2715,21 @@ static void usb_put_invalidate_rhdev(struct usb_hcd *hcd)
 	usb_put_dev(rhdev);
 }
 
-int usb_hcd_phy_init(struct usb_hcd *hcd)
+/**
+ * usb_add_hcd - finish generic HCD structure initialization and register
+ * @hcd: the usb_hcd structure to initialize
+ * @irqnum: Interrupt line to allocate
+ * @irqflags: Interrupt type flags
+ *
+ * Finish the remaining parts of generic HCD initialization: allocate the
+ * buffers of consistent memory, register the bus, request the IRQ line,
+ * and call the driver's reset() and start() routines.
+ */
+int usb_add_hcd(struct usb_hcd *hcd,
+		unsigned int irqnum, unsigned long irqflags)
 {
-	int retval = 0;
+	int retval;
+	struct usb_device *rhdev;
 
 	if (IS_ENABLED(CONFIG_USB_PHY) && !hcd->usb_phy) {
 		struct usb_phy *phy = usb_get_phy_dev(hcd->self.controller, 0);
@@ -2743,65 +2755,23 @@ int usb_hcd_phy_init(struct usb_hcd *hcd)
 		if (IS_ERR(phy)) {
 			retval = PTR_ERR(phy);
 			if (retval == -EPROBE_DEFER)
-				return retval;
+				goto err_phy;
 		} else {
 			retval = phy_init(phy);
 			if (retval) {
 				phy_put(phy);
-				return retval;
+				goto err_phy;
 			}
 			retval = phy_power_on(phy);
 			if (retval) {
 				phy_exit(phy);
 				phy_put(phy);
-				return retval;
+				goto err_phy;
 			}
 			hcd->phy = phy;
 			hcd->remove_phy = 1;
 		}
 	}
-	return 0;
-}
-EXPORT_SYMBOL_GPL(usb_hcd_phy_init);
-
-void usb_hcd_phy_exit(struct usb_hcd *hcd)
-{
-	if (IS_ENABLED(CONFIG_GENERIC_PHY) && hcd->remove_phy && hcd->phy) {
-		phy_power_off(hcd->phy);
-		phy_exit(hcd->phy);
-		phy_put(hcd->phy);
-		hcd->phy = NULL;
-	}
-	if (hcd->remove_phy && hcd->usb_phy) {
-		usb_phy_shutdown(hcd->usb_phy);
-		usb_put_phy(hcd->usb_phy);
-		hcd->usb_phy = NULL;
-	}
-}
-EXPORT_SYMBOL_GPL(usb_hcd_phy_exit);
-
-/**
- * usb_add_hcd - finish generic HCD structure initialization and register
- * @hcd: the usb_hcd structure to initialize
- * @irqnum: Interrupt line to allocate
- * @irqflags: Interrupt type flags
- *
- * Finish the remaining parts of generic HCD initialization: allocate the
- * buffers of consistent memory, register the bus, request the IRQ line,
- * and call the driver's reset() and start() routines.
- */
-int usb_add_hcd(struct usb_hcd *hcd,
-		unsigned int irqnum, unsigned long irqflags)
-{
-	int retval;
-	struct usb_device *rhdev;
-
-	retval = usb_hcd_phy_init(hcd);
-	if (retval != 0) {
-		dev_err(hcd->self.controller,
-			"%s: phy init failed\n", __func__);
-		goto err_phy;
-	}
 
 	dev_info(hcd->self.controller, "%s\n", hcd->product_desc);
 
@@ -3051,7 +3021,17 @@ void usb_remove_hcd(struct usb_hcd *hcd)
 	usb_deregister_bus(&hcd->self);
 	hcd_buffer_destroy(hcd);
 
-	usb_hcd_phy_exit(hcd);
+	if (IS_ENABLED(CONFIG_GENERIC_PHY) && hcd->remove_phy && hcd->phy) {
+		phy_power_off(hcd->phy);
+		phy_exit(hcd->phy);
+		phy_put(hcd->phy);
+		hcd->phy = NULL;
+	}
+	if (hcd->remove_phy && hcd->usb_phy) {
+		usb_phy_shutdown(hcd->usb_phy);
+		usb_put_phy(hcd->usb_phy);
+		hcd->usb_phy = NULL;
+	}
 
 	usb_put_invalidate_rhdev(hcd);
 }
diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index 229e036..a66f6e2 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -303,7 +303,6 @@ static int xhci_plat_suspend(struct device *dev)
 {
 	struct usb_hcd	*hcd = dev_get_drvdata(dev);
 	struct xhci_hcd	*xhci = hcd_to_xhci(hcd);
-	int retval;
 
 	/*
 	 * xhci_suspend() needs `do_wakeup` to know whether host is allowed
@@ -313,14 +312,7 @@ static int xhci_plat_suspend(struct device *dev)
 	 * reconsider this when xhci_plat_suspend enlarges its scope, e.g.,
 	 * also applies to runtime suspend.
 	 */
-       retval = xhci_suspend(xhci, device_may_wakeup(dev));
-       if (retval)
-               return retval;
-
-       usb_hcd_phy_exit(xhci->shared_hcd);
-       usb_hcd_phy_exit(hcd);
-
-       return 0;
+	return xhci_suspend(xhci, device_may_wakeup(dev));
 }
 
 static int xhci_plat_resume(struct device *dev)
@@ -328,9 +320,6 @@ static int xhci_plat_resume(struct device *dev)
 	struct usb_hcd	*hcd = dev_get_drvdata(dev);
 	struct xhci_hcd	*xhci = hcd_to_xhci(hcd);
 
-        usb_hcd_phy_init(hcd);
-        usb_hcd_phy_init(xhci->shared_hcd);
-
 	return xhci_resume(xhci, 0);
 }
 
diff --git a/include/linux/extcon.h b/include/linux/extcon.h
index ff2add9..6100441 100644
--- a/include/linux/extcon.h
+++ b/include/linux/extcon.h
@@ -126,26 +126,6 @@ struct extcon_dev {
 	struct device_attribute *d_attrs_muex;
 };
 
-/**
- * struct extcon_cable - An internal data for each cable of extcon device.
- * @edev:		The extcon device
- * @cable_index:	Index of this cable in the edev
- * @attr_g:		Attribute group for the cable
- * @attr_name:		"name" sysfs entry
- * @attr_state:		"state" sysfs entry
- * @attrs:		Array pointing to attr_name and attr_state for attr_g
- */
-struct extcon_cable {
-	struct extcon_dev *edev;
-	int cable_index;
-
-	struct attribute_group attr_g;
-	struct device_attribute attr_name;
-	struct device_attribute attr_state;
-
-	struct attribute *attrs[3]; /* to be fed to attr_g.attrs */
-};
-
 #if IS_ENABLED(CONFIG_EXTCON)
 
 /*
@@ -191,11 +171,6 @@ extern int extcon_get_cable_state_(struct extcon_dev *edev, unsigned int id);
 extern int extcon_set_cable_state_(struct extcon_dev *edev, unsigned int id,
 				   bool cable_state);
 
-extern int extcon_get_cable_state(struct extcon_dev *edev,
-				  const char *cable_name);
-extern int extcon_set_cable_state(struct extcon_dev *edev,
-				  const char *cable_name, bool cable_state);
-
 /*
  * Following APIs are to monitor every action of a notifier.
  * Registrar gets notified for every external port of a connection device.
@@ -285,18 +260,6 @@ static inline int extcon_set_cable_state_(struct extcon_dev *edev,
 	return 0;
 }
 
-static inline int extcon_get_cable_state(struct extcon_dev *edev,
-			const char *cable_name)
-{
-	return 0;
-}
-
-static inline int extcon_set_cable_state(struct extcon_dev *edev,
-			const char *cable_name, int state)
-{
-	return 0;
-}
-
 static inline struct extcon_dev *extcon_get_extcon_dev(const char *extcon_name)
 {
 	return NULL;
@@ -327,20 +290,6 @@ static inline  void devm_extcon_unregister_notifier(struct device *dev,
 				struct extcon_dev *edev, unsigned int id,
 				struct notifier_block *nb) { }
 
-static inline int extcon_register_interest(struct extcon_specific_cable_nb *obj,
-					   const char *extcon_name,
-					   const char *cable_name,
-					   struct notifier_block *nb)
-{
-	return 0;
-}
-
-static inline int extcon_unregister_interest(struct extcon_specific_cable_nb
-						    *obj)
-{
-	return 0;
-}
-
 static inline struct extcon_dev *extcon_get_edev_by_phandle(struct device *dev,
 							    int index)
 {
diff --git a/include/linux/usb/hcd.h b/include/linux/usb/hcd.h
index 311dede..66fc137 100644
--- a/include/linux/usb/hcd.h
+++ b/include/linux/usb/hcd.h
@@ -445,8 +445,6 @@ extern struct usb_hcd *usb_create_shared_hcd(const struct hc_driver *driver,
 extern struct usb_hcd *usb_get_hcd(struct usb_hcd *hcd);
 extern void usb_put_hcd(struct usb_hcd *hcd);
 extern int usb_hcd_is_primary_hcd(struct usb_hcd *hcd);
-int usb_hcd_phy_init(struct usb_hcd *hcd);
-void usb_hcd_phy_exit(struct usb_hcd *hcd);
 extern int usb_add_hcd(struct usb_hcd *hcd,
 		unsigned int irqnum, unsigned long irqflags);
 extern void usb_remove_hcd(struct usb_hcd *hcd);
-- 
1.7.5.4

