From 6dafa7f3ddf9d80827ccab692fe27142c84ce05b Mon Sep 17 00:00:00 2001
From: Peter Spreadborough <peter.spreadborough@broadcom.com>
Date: Mon, 27 Feb 2017 15:33:59 -0500
Subject: [PATCH 07/11] SOC-5000: Use no-tick-in-suspend for NS2 clock

Arm clock does not run during deep sleep. Use DTS option
to select clock flag to indicate if clock does or does not
run durring suspend.

SOC-5160: ARM no tick on suspend flag

Suport no-tick-on-suspend flag and other misc DTS changes.

Bug: SOC-5000
Bug: SOC-5160
Change-Id: Iffed25680f9b27d94c26cefe4244330c87ee9f0c
Reviewed-on: http://gerrit-ccxsw.broadcom.net/37926
Tested-by: Peter Spreadborough <peter.spreadborough@broadcom.com>
Reviewed-by: Andrew Gospodarek <gospo@broadcom.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 arch/arm64/boot/dts/broadcom/ns2.dtsi |    1 +
 drivers/clocksource/arm_arch_timer.c  |   10 ++++++++--
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/arch/arm64/boot/dts/broadcom/ns2.dtsi b/arch/arm64/boot/dts/broadcom/ns2.dtsi
index 979e5fc..fa1da75 100644
--- a/arch/arm64/boot/dts/broadcom/ns2.dtsi
+++ b/arch/arm64/boot/dts/broadcom/ns2.dtsi
@@ -87,6 +87,7 @@
 
 	timer {
 		compatible = "arm,armv8-timer";
+		arm,no-tick-in-suspend;
 		interrupts = <GIC_PPI 13 (GIC_CPU_MASK_RAW(0xff) |
 			      IRQ_TYPE_EDGE_RISING)>,
 			     <GIC_PPI 14 (GIC_CPU_MASK_RAW(0xff) |
diff --git a/drivers/clocksource/arm_arch_timer.c b/drivers/clocksource/arm_arch_timer.c
index 5770054..9bc4b79 100644
--- a/drivers/clocksource/arm_arch_timer.c
+++ b/drivers/clocksource/arm_arch_timer.c
@@ -81,6 +81,7 @@ static struct clock_event_device __percpu *arch_timer_evt;
 static enum ppi_nr arch_timer_uses_ppi = VIRT_PPI;
 static bool arch_timer_c3stop;
 static bool arch_timer_mem_use_virtual;
+static bool arch_counter_suspend_stop;
 
 static bool evtstrm_enable = IS_ENABLED(CONFIG_ARM_ARCH_TIMER_EVTSTREAM);
 
@@ -490,7 +491,7 @@ static struct clocksource clocksource_counter = {
 	.rating	= 400,
 	.read	= arch_counter_read,
 	.mask	= CLOCKSOURCE_MASK(56),
-	.flags	= CLOCK_SOURCE_IS_CONTINUOUS | CLOCK_SOURCE_SUSPEND_NONSTOP,
+	.flags	= CLOCK_SOURCE_IS_CONTINUOUS,
 };
 
 static struct cyclecounter cyclecounter = {
@@ -526,6 +527,8 @@ static void __init arch_counter_register(unsigned type)
 		clocksource_counter.name = "arch_mem_counter";
 	}
 
+	if (!arch_counter_suspend_stop)
+		clocksource_counter.flags |= CLOCK_SOURCE_SUSPEND_NONSTOP;
 	start_count = arch_timer_read_counter();
 	clocksource_register_hz(&clocksource_counter, arch_timer_rate);
 	cyclecounter.mult = clocksource_counter.mult;
@@ -779,7 +782,7 @@ static int __init arch_timer_init(void)
 		return ret;
 
 	arch_timer_kvm_info.virtual_irq = arch_timer_ppi[VIRT_PPI];
-	
+
 	return 0;
 }
 
@@ -808,6 +811,9 @@ static int __init arch_timer_of_init(struct device_node *np)
 	    of_property_read_bool(np, "arm,cpu-registers-not-fw-configured"))
 		arch_timer_uses_ppi = PHYS_SECURE_PPI;
 
+		/* On some systems, the counter stops ticking when in suspend. */
+	arch_counter_suspend_stop = of_property_read_bool(np,
+					"arm,no-tick-in-suspend");
 	return arch_timer_init();
 }
 CLOCKSOURCE_OF_DECLARE(armv7_arch_timer, "arm,armv7-timer", arch_timer_of_init);
-- 
1.7.5.4

