From 7d2702f8278e757748aa0306b1ed19fb112fb8cf Mon Sep 17 00:00:00 2001
From: Zhixiong Chi <zhixiong.chi@windriver.com>
Date: Wed, 16 Aug 2017 14:44:44 +0800
Subject: [PATCH] phy-ns2-usb2: USB PHY sleep and suspend override

Single PHY is used for EHCI and OHCI controller.
If EHCI controller goes to suspend, PHY also enters to
Suspend. By that time OHCI controller might be still active.
If OHCI Controller tries to enters to suspend, kernel crash
is observed.
we add the settings overwrites the Controller UTMI suspend and
sleep signals going to PHY.
As a result, we can avoid the kernel panic as belows:

  Bad mode in Error handler detected on CPU3, code 0xbf000002 -- SError
  CPU: 3 PID: 362 Comm: rrdcached Not tainted 4.8.18-rt10-WR9.0.0.4_preempt-rt #1
  Hardware name: Broadcom NS2 SVK (DT)
  Call trace:
  [<ffffff8008088318>] dump_backtrace+0x0/0x1d0
  [<ffffff800808850c>] show_stack+0x24/0x30
  [<ffffff800842fe14>] dump_stack+0x90/0xb4
  [<ffffff80080c36d0>] ___might_sleep+0x108/0x170
  [<ffffff80087f7054>] rt_spin_lock+0x2c/0x88
  [<ffffff80080a9bc0>] do_force_sig_info+0x30/0xe0
  [<ffffff80080aa434>] force_sig_info+0x34/0x48
  [<ffffff800808880c>] arm64_notify_die+0x7c/0x90
  [<ffffff8008088c48>] bad_mode+0xb0/0xc8
  [<0000007f919599dc>] 0x7f919599dc
  Internal error: Attempting to execute userspace memory: 8600000f [#1] PREEMPT SMP

There is no the author info of the patch in the LDK tarball.

[cherry-picked from broadcom ns2 LDK 5.0.12 tarball]
Signed-off-by: Zhixiong Chi <zhixiong.chi@windriver.com>
---
 drivers/phy/phy-bcm-ns2-usb2.c |   22 +++++++++++++++++++++-
 1 files changed, 21 insertions(+), 1 deletions(-)

diff --git a/drivers/phy/phy-bcm-ns2-usb2.c b/drivers/phy/phy-bcm-ns2-usb2.c
index 510b6fa..8be346d 100644
--- a/drivers/phy/phy-bcm-ns2-usb2.c
+++ b/drivers/phy/phy-bcm-ns2-usb2.c
@@ -24,6 +24,9 @@
 
 #define USB2H_IDM_IDM_RESET_CONTROL__RESET 0
 #define USB2H_IDM_IDM_IO_CONTROL_DIRECT__clk_enable 0
+#define USB2H_IDM_IDM_IO_CONTROL_DIRECT_l1_sleepm_override     BIT(15)
+#define USB2H_IDM_IDM_IO_CONTROL_DIRECT_l1_suspendm_override   BIT(14)
+#define USB2H_IDM_IDM_IO_CONTROL_DIRECT_l2_suspendm_override   BIT(13)
 #define USB2H_Ohci_Ehci_Strap__ohci_app_port_ovrcur_pol 11
 #define USB2H_Ohci_Ehci_Strap__ppc_inversion 12
 #define ICFG_USB2H_PHY_MISC_STATUS_PLLLOCK    0
@@ -149,12 +152,29 @@ static int bcm_phy_init(struct phy *phy)
 			(0x3 << USB2H_Phy_Ctrl_P0__PHY_Test_port_UTMI_Pwr_Dn) |
 			(0x3 << USB2H_Phy_Ctrl_P0__PHY_PLL_Pwr_Dn)),
 		iphy->phy_ctrl_p0);
+
+       /*
+        * USB PHY Sleep and Suspend override.
+        * Single PHY is used for EHCI and OHCI controller.
+        * If EHCI controller goes to suspend, PHY also enters to
+        * Suspend. By that time OHCI controller might be still active.
+        * If OHCI Controller tries to enters to suspend, kernel crash
+        * is observed.
+        * The following settings overwrites the Controller UTMI suspend and
+        * sleep signals going to PHY.
+        */
+       reg_data = readl(iphy->idm_io_ctl_direct);
+       reg_data |= USB2H_IDM_IDM_IO_CONTROL_DIRECT_l1_sleepm_override;
+       reg_data |= USB2H_IDM_IDM_IO_CONTROL_DIRECT_l1_suspendm_override;
+       reg_data |= USB2H_IDM_IDM_IO_CONTROL_DIRECT_l2_suspendm_override;
+       writel(reg_data, iphy->idm_io_ctl_direct);
+
 	return 0;
 }
 
 static struct phy_ops ops = {
 	.init		= bcm_phy_init,
-	.power_off	= ns2_usb2_phy_shutdown,
+	.exit		= ns2_usb2_phy_shutdown,
 };
 
 static int bcm_phy_probe(struct platform_device *pdev)
-- 
1.7.5.4

