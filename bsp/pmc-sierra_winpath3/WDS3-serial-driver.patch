From d8f2ffbf1967b1c539314fc3896e3b4bed88e161 Mon Sep 17 00:00:00 2001
From: Jiang, Bin <bin.jiang@windriver.com>
Date: Wed, 6 Apr 2011 17:09:47 +0800
Subject: [PATCH 09/13] WDS3: serial driver

Extracted from vendor drop(linux-mti-2.6.29.4-1 with modifications for WDS3).

Serial driver for WDS3 board.

Can't configure serial with 38400 baud rate. Because the flag of serial
port is set with UPF_SPD_VHI, the 38400 will be changed to 115200 when
initializing serial.
Remove UPF_SPD_VHI to enable 38400 baud rate and set default baud rate
as 115200.

Signed-off-by: Jiang Bin <bin.jiang@windriver.com>
---
 arch/mips/include/asm/wintegra/winpath3.h |   15 +++++++
 arch/mips/wintegra/Kconfig                |    6 +++
 arch/mips/wintegra/wds3/wds3-init.c       |   44 +++++++++++++++++++++
 drivers/serial/8250.c                     |   60 +++++++++++++++++++++++++++++
 drivers/serial/8250.h                     |    1 +
 drivers/serial/8250_winpath.c             |   45 +++++++++++++++++++++
 drivers/serial/Makefile                   |    1 +
 7 files changed, 172 insertions(+), 0 deletions(-)
 create mode 100644 drivers/serial/8250_winpath.c

diff --git a/arch/mips/include/asm/wintegra/winpath3.h b/arch/mips/include/asm/wintegra/winpath3.h
index 34856f6..9e7ea1b 100644
--- a/arch/mips/include/asm/wintegra/winpath3.h
+++ b/arch/mips/include/asm/wintegra/winpath3.h
@@ -189,6 +189,21 @@ typedef struct wm_ta {
 #define MAP_CLK_MIPS_PLLCFG1     (0xfe04)
 
 /*
+ * UART registers
+ */
+#define WINPATH_UART_BASE       0xC500
+#define WINPATH_UART_RBR        0
+#define WINPATH_UART_TBR        0x4
+#define WINPATH_UART_IER        0x8
+#define WINPATH_UART_IIR        0xc
+#define WINPATH_UART_FCR        0x10
+#define WINPATH_UART_LCR        0x14
+#define WINPATH_UART_MCR        0x18
+#define WINPATH_UART_LSR        0x1c
+#define WINPATH_UART_SCRATCH    0x24
+#define WINPATH_UART_CLKDIV     0x28
+
+/*
  * ASRAM
  */
 #define SIU4X_MC_B_1_MTC 0xbe010808
diff --git a/arch/mips/wintegra/Kconfig b/arch/mips/wintegra/Kconfig
index 316a533..cfe11ec 100644
--- a/arch/mips/wintegra/Kconfig
+++ b/arch/mips/wintegra/Kconfig
@@ -25,3 +25,9 @@ config WINTEGRA_WDS3
         depends on WINTEGRA_WINPATH3
         help
           Select WINTEGRA_WDS3 if configuring a Wintegra WDS3 board.
+
+config SERIAL_8250_WINPATH
+        bool "Support WinPath UART interface"
+        depends on SERIAL_8250 && WINTEGRA_WINPATH
+        help
+          Say Y here if you have a WinPath based board.
diff --git a/arch/mips/wintegra/wds3/wds3-init.c b/arch/mips/wintegra/wds3/wds3-init.c
index d71aff2..63956aa 100644
--- a/arch/mips/wintegra/wds3/wds3-init.c
+++ b/arch/mips/wintegra/wds3/wds3-init.c
@@ -214,6 +214,47 @@ int prom_putchar(char c)
   return WinMon_putchar(c);
 }
 
+#ifdef CONFIG_SERIAL_8250_CONSOLE
+static void __init console_config(void)
+{
+	char console_string[40];
+	int baud = 0;
+	char parity = '\0', bits = '\0', flow = '\0';
+	char *s;
+
+	if ((strstr(prom_getcmdline(), "console=")) == NULL) {
+		s = WinMon_getenv("modetty0");
+		if (s) {
+			while (*s >= '0' && *s <= '9')
+				baud = baud*10 + *s++ - '0';
+			if (*s == ',')
+				s++;
+			if (*s)
+				parity = *s++;
+			if (*s == ',')
+				s++;
+			if (*s)
+				bits = *s++;
+			if (*s == ',')
+				s++;
+			if (*s == 'h')
+				flow = 'r';
+		}
+		if (baud == 0)
+			baud = 115200;
+		if (parity != 'n' && parity != 'o' && parity != 'e')
+			parity = 'n';
+		if (bits != '7' && bits != '8')
+			bits = '8';
+		if (flow == '\0')
+			flow = 'r';
+		sprintf(console_string, " console=ttyS0,%d%c%c%c", baud, parity, bits, flow);
+		strcat(prom_getcmdline(), console_string);
+		pr_info("Config serial console:%s\n", console_string);
+	}
+}
+#endif
+
 static void __init mips_nmi_setup(void)
 {
 	void *base;
@@ -260,6 +301,9 @@ void __init prom_init(void)
 
   prom_init_cmdline();
   prom_meminit();
+#ifdef CONFIG_SERIAL_8250_CONSOLE
+  console_config();
+#endif
 
 #ifdef CONFIG_MIPS_CMP
   if (result)
diff --git a/drivers/serial/8250.c b/drivers/serial/8250.c
index c1c7aaf..4dd72c0 100644
--- a/drivers/serial/8250.c
+++ b/drivers/serial/8250.c
@@ -118,6 +118,9 @@ static unsigned int skip_txen_test; /* force skip of txen test at init time */
 #if defined(CONFIG_WRHV) && defined(CONFIG_X86)
 #include <asm/wrhv_serial.h>
 #endif
+#if defined(CONFIG_SERIAL_8250_WINPATH)
+#include "asm/wintegra/winpath.h"
+#endif
 /*
  * SERIAL_PORT_DFNS tells us about built-in ports that have no
  * standard enumeration mechanism.   Platforms that can find all
@@ -388,6 +391,44 @@ static inline int map_8250_out_reg(struct uart_port *p, int offset)
 	return regmap_out[offset];
 }
 
+#elif defined(CONFIG_SERIAL_8250_WINPATH)
+
+static const u8
+	regmap_in[8] = {
+		[UART_RX]       = WINPATH_UART_RBR,
+		[UART_IER]      = WINPATH_UART_IER,
+		[UART_IIR]      = WINPATH_UART_IIR,
+		[UART_LCR]      = WINPATH_UART_LCR,
+		[UART_MCR]      = WINPATH_UART_SCRATCH,
+		[UART_LSR]      = WINPATH_UART_LSR,
+		[UART_MSR]      = WINPATH_UART_SCRATCH,
+		[UART_SCR]      = WINPATH_UART_SCRATCH
+	},
+	regmap_out[8] = {
+		[UART_TX]       = WINPATH_UART_TBR,
+		[UART_IER]      = WINPATH_UART_IER,
+		[UART_FCR]      = WINPATH_UART_FCR,
+		[UART_LCR]      = WINPATH_UART_LCR,
+		[UART_MCR]      = WINPATH_UART_SCRATCH,
+		[UART_LSR]      = WINPATH_UART_LSR,
+		[UART_MSR]      = WINPATH_UART_SCRATCH,
+		[UART_SCR]      = WINPATH_UART_SCRATCH
+	};
+
+static inline int map_8250_in_reg(struct uart_port *p, int offset)
+{
+	if (offset == WINPATH_UART_CLKDIV)
+		return offset;
+	return regmap_in[offset];
+}
+
+static inline int map_8250_out_reg(struct uart_port *p, int offset)
+{
+	if (offset == WINPATH_UART_CLKDIV)
+		return offset;
+	return regmap_out[offset];
+}
+
 #else
 
 /* sane hardware needs no mapping */
@@ -765,6 +806,16 @@ static void serial_dl_write(struct uart_8250_port *up, int value)
 		_serial_dl_write(up, value);
 	}
 }
+#elif defined(CONFIG_SERIAL_8250_WINPATH)
+static int serial_dl_read(struct uart_8250_port *up)
+{
+	return serial_inp(up, WINPATH_UART_CLKDIV);
+}
+
+static void serial_dl_write(struct uart_8250_port *up, int value)
+{
+	serial_outp(up, WINPATH_UART_CLKDIV, value);
+}
 #else
 #define serial_dl_read(up) _serial_dl_read(up)
 #define serial_dl_write(up, value) _serial_dl_write(up, value)
@@ -941,6 +992,8 @@ static unsigned int autoconfig_read_divisor_id(struct uart_8250_port *p)
 	unsigned char old_dll, old_dlm, old_lcr;
 	unsigned int id;
 
+	if (p->bugs & UART_BUG_NOID)
+		return 0;
 	old_lcr = serial_inp(p, UART_LCR);
 	serial_outp(p, UART_LCR, UART_LCR_DLAB);
 
@@ -1263,6 +1316,9 @@ static void autoconfig(struct uart_8250_port *up, unsigned int probeflags)
 
 	up->capabilities = 0;
 	up->bugs = 0;
+#ifdef CONFIG_SERIAL_8250_WINPATH
+	up->bugs |= UART_BUG_NOMSR | UART_BUG_NOID;
+#endif
 
 	if (!(up->port.flags & UPF_BUGGY_UART)) {
 		/*
@@ -1873,7 +1929,11 @@ static int serial_link_irq_chain(struct uart_8250_port *up)
 		INIT_LIST_HEAD(&up->list);
 		i->head = &up->list;
 		spin_unlock_irq(&i->lock);
+#if defined(CONFIG_SERIAL_8250_WINPATH)
+		irq_flags |= IRQF_DISABLED;
+#else
 		irq_flags |= up->port.irqflags;
+#endif
 		ret = request_irq(up->port.irq, serial8250_interrupt,
 				  irq_flags, "serial", i);
 		if (ret < 0)
diff --git a/drivers/serial/8250.h b/drivers/serial/8250.h
index 2074ce1..05bd534 100644
--- a/drivers/serial/8250.h
+++ b/drivers/serial/8250.h
@@ -50,6 +50,7 @@ struct serial8250_config {
 #define UART_BUG_NOMSR	(1 << 2)	/* UART has buggy MSR status bits (Au1x00) */
 #define UART_BUG_THRE	(1 << 3)	/* UART has buggy THRE reassertion */
 #define UART_BUG_PPC	(1 << 4)	/* UART has buggy PPC break IRQ storm */
+#define UART_BUG_NOID	(1 << 5)	/* UART has buggy ID (WinPath3) */
 
 #define PROBE_RSA	(1 << 0)
 #define PROBE_ANY	(~0)
diff --git a/drivers/serial/8250_winpath.c b/drivers/serial/8250_winpath.c
new file mode 100644
index 0000000..722b389
--- /dev/null
+++ b/drivers/serial/8250_winpath.c
@@ -0,0 +1,45 @@
+/*
+ *  linux/drivers/serial/8250_accent.c
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#include <linux/module.h>
+#include <linux/init.h>
+#include <linux/serial_8250.h>
+
+#include <asm/wintegra/winpath.h>
+#include <asm/wintegra/wds.h>
+
+static struct plat_serial8250_port winpath_data[] = {
+  {
+	.membase	= (char *)WINPATH_UART_BASE,
+	.irq		= WINPATH_IRQ_BASE+IV_UART_VEC,
+	.uartclk	= 0,
+	.iotype		= UPIO_MEM32,
+	.flags		= UPF_BOOT_AUTOCONF |
+				UPF_SKIP_TEST,
+	.regshift       = 0,
+  },
+	{ }
+};
+
+static struct platform_device winpath_device = {
+	.name			= "serial8250",
+	.id			= PLAT8250_DEV_PLATFORM,
+	.dev			= { .platform_data = winpath_data, },
+};
+
+static int __init winpath_uart_init(void)
+{
+	winpath_data[0].membase += wds.wds_winpath_phys_rif_base;
+	winpath_data[0].uartclk = getHostSystemClock(0);
+	return platform_device_register(&winpath_device);
+}
+
+module_init(winpath_uart_init);
+
+MODULE_AUTHOR("Arnon Mordoh");
+MODULE_DESCRIPTION("8250 serial probe module for Wintegra WinPath cards");
+MODULE_LICENSE("GPL");
diff --git a/drivers/serial/Makefile b/drivers/serial/Makefile
index dca82c3..6fdb04b 100644
--- a/drivers/serial/Makefile
+++ b/drivers/serial/Makefile
@@ -28,6 +28,7 @@ obj-$(CONFIG_SERIAL_8250_BOCA) += 8250_boca.o
 obj-$(CONFIG_SERIAL_8250_EXAR_ST16C554) += 8250_exar_st16c554.o
 obj-$(CONFIG_SERIAL_8250_HUB6) += 8250_hub6.o
 obj-$(CONFIG_SERIAL_8250_MCA) += 8250_mca.o
+obj-$(CONFIG_SERIAL_8250_WINPATH) += 8250_winpath.o
 obj-$(CONFIG_SERIAL_AMBA_PL010) += amba-pl010.o
 obj-$(CONFIG_SERIAL_AMBA_PL011) += amba-pl011.o
 obj-$(CONFIG_SERIAL_CLPS711X) += clps711x.o
-- 
1.7.0.4

