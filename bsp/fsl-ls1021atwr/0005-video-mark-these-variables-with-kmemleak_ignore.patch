From f6dd044e6cde303cc16f5881eab34bf0c41573a9 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Fri, 14 Jul 2017 11:40:53 +0800
Subject: [PATCH 5/5] video: mark these variables with kmemleak_ignore

These variables will be release if failure, so ignore the following
calltrace:

unreferenced object 0xbdbddd80 (size 64):
  comm "swapper/0", pid 1, jiffies 4294937796 (age 1038.590s)
  hex dump (first 32 bytes):
    01 00 00 00 00 00 00 00 c0 dd bd bd 00 00 00 00  ................
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  backtrace:
    [<801b8be8>] kmem_cache_alloc_trace+0x3c4/0x5bc
    [<804d107c>] of_get_display_timings+0x48/0x21c
    [<804cef7c>] fsl_dcu_probe+0x3b4/0x75c
    [<80520f9c>] platform_drv_probe+0x54/0xbc
    [<8051e814>] driver_probe_device+0x184/0x2c4
    [<8051ea44>] __driver_attach+0x9c/0xa0
    [<8051c954>] bus_for_each_dev+0x78/0xac
    [<8051e21c>] driver_attach+0x2c/0x30
    [<8051de80>] bus_add_driver+0x15c/0x204
    [<8051fca0>] driver_register+0x88/0x108
    [<80520ec8>] __platform_driver_register+0x64/0x6c
    [<80c6b77c>] fsl_dcu_driver_init+0x1c/0x20
    [<800097c0>] do_one_initcall+0x9c/0x1e8
    [<80c39020>] kernel_init_freeable+0x294/0x36c
    [<8090bda8>] kernel_init+0x1c/0xf8
    [<8000fe28>] ret_from_fork+0x14/0x2c

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/video/of_display_timing.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/video/of_display_timing.c b/drivers/video/of_display_timing.c
index 32d8275..feaa1a7 100644
--- a/drivers/video/of_display_timing.c
+++ b/drivers/video/of_display_timing.c
@@ -151,6 +151,7 @@ struct display_timings *of_get_display_timings(struct device_node *np)
 	}
 
 	disp = kzalloc(sizeof(*disp), GFP_KERNEL);
+	kmemleak_ignore(disp);
 	if (!disp) {
 		pr_err("%s: could not allocate struct disp'\n",
 			of_node_full_name(np));
@@ -182,6 +183,7 @@ struct display_timings *of_get_display_timings(struct device_node *np)
 
 	disp->timings = kzalloc(sizeof(struct display_timing *) *
 				disp->num_timings, GFP_KERNEL);
+	kmemleak_ignore(disp->timings);
 	if (!disp->timings) {
 		pr_err("%s: could not allocate timings array\n",
 			of_node_full_name(np));
@@ -201,7 +203,7 @@ struct display_timings *of_get_display_timings(struct device_node *np)
 					of_node_full_name(np));
 			goto timingfail;
 		}
-
+		kmemleak_ignore(dt);
 		r = of_parse_display_timing(entry, dt);
 		if (r) {
 			/*
-- 
2.9.3

