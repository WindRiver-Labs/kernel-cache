From 502bfe0f7882fe115cd4ed3ba136f46c2db92c74 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 21 Aug 2017 13:20:02 +0800
Subject: [PATCH 1/1] video: fbdev: fsl: fix a deadlock from console_lock and
 blank.rwsem

This patch is to partly fix this deadlock detected by kernel:

1. Using devcies blank function to replace the common blank, meanwhile
   removing console_lock since no one using console_lock on specific
   device blank function.

2. Still not find a way to set_var.

=============================================
[ INFO: possible recursive locking detected ]
4.1.21-rt13-WR8.0.0.0_preempt-rt #2 Not tainted
---------------------------------------------
kworker/0:1/37 is trying to acquire lock:
 ((fb_notifier_list).rwsem){.+.+.+}, at: [<80095e70>] rt_down_read+0x1c/0x20

but task is already holding lock:
 ((fb_notifier_list).rwsem){.+.+.+}, at: [<80095e70>] rt_down_read+0x1c/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock((fb_notifier_list).rwsem);
  lock((fb_notifier_list).rwsem);

 *** DEADLOCK ***

 May be due to missing lock nesting notation

4 locks held by kworker/0:1/37:
 #0:  ("events"){.+.+.+}, at: [<80054dec>] process_one_work+0x130/0xa94
 #1:  ((&(&(sii902x->det_work))->work)){+.+.+.}, at: [<80054dec>] process_one_work+0x130/0xa94
 #2:  (console_lock){+.+.+.}, at: [<804d182c>] det_worker+0x9c/0x228
 #3:  ((fb_notifier_list).rwsem){.+.+.+}, at: [<80095e70>] rt_down_read+0x1c/0x20

stack backtrace:
CPU: 0 PID: 37 Comm: kworker/0:1 Not tainted 4.1.21-rt13-WR8.0.0.0_preempt-rt #2
Hardware name: Freescale LS1021A
Workqueue: events det_worker
[<8001b4a8>] (unwind_backtrace) from [<80014c28>] (show_stack+0x20/0x24)
[<80014c28>] (show_stack) from [<80915888>] (dump_stack+0xb4/0xe4)
[<80915888>] (dump_stack) from [<80090de0>] (__lock_acquire+0x163c/0x17ec)
[<80090de0>] (__lock_acquire) from [<800918a0>] (lock_acquire+0xfc/0x404)
[<800918a0>] (lock_acquire) from [<80095e18>] (__rt_down_read+0x38/0x74)
[<80095e18>] (__rt_down_read) from [<80095e70>] (rt_down_read+0x1c/0x20)
[<80095e70>] (rt_down_read) from [<8005da60>] (__blocking_notifier_call_chain+0x3c/0x70)
[<8005da60>] (__blocking_notifier_call_chain) from [<8005dabc>] (blocking_notifier_call_chain+0x28/0x30)
[<8005dabc>] (blocking_notifier_call_chain) from [<804c7db0>] (fb_notifier_call_chain+0x28/0x2c)
[<804c7db0>] (fb_notifier_call_chain) from [<804c8710>] (fb_blank+0x44/0xb8)
[<804c8710>] (fb_blank) from [<804c2264>] (fbcon_blank+0x238/0x2b8)
[<804c2264>] (fbcon_blank) from [<804fd880>] (do_blank_screen+0x1e8/0x29c)
[<804fd880>] (do_blank_screen) from [<804c5e04>] (fbcon_event_notify+0x964/0x990)
[<804c5e04>] (fbcon_event_notify) from [<8005d5f8>] (notifier_call_chain+0x5c/0x9c)
[<8005d5f8>] (notifier_call_chain) from [<8005da7c>] (__blocking_notifier_call_chain+0x58/0x70)
[<8005da7c>] (__blocking_notifier_call_chain) from [<8005dabc>] (blocking_notifier_call_chain+0x28/0x30)
[<8005dabc>] (blocking_notifier_call_chain) from [<804c7db0>] (fb_notifier_call_chain+0x28/0x2c)
[<804c7db0>] (fb_notifier_call_chain) from [<804c8770>] (fb_blank+0xa4/0xb8)
[<804c8770>] (fb_blank) from [<804d1838>] (det_worker+0xa8/0x228)
[<804d1838>] (det_worker) from [<80054eb4>] (process_one_work+0x1f8/0xa94)
[<80054eb4>] (process_one_work) from [<800557a4>] (worker_thread+0x54/0x58c)
[<800557a4>] (worker_thread) from [<8005bc90>] (kthread+0xf0/0x108)
[<8005bc90>] (kthread) from [<8000fe28>] (ret_from_fork+0x14/0x2c)

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/video/fbdev/fsl-sii902x.c | 15 ++++++---------
 1 file changed, 6 insertions(+), 9 deletions(-)

diff --git a/drivers/video/fbdev/fsl-sii902x.c b/drivers/video/fbdev/fsl-sii902x.c
index 6867545..8115336 100644
--- a/drivers/video/fbdev/fsl-sii902x.c
+++ b/drivers/video/fbdev/fsl-sii902x.c
@@ -291,9 +291,8 @@ static void det_worker(struct work_struct *work)
 		}
 
 		/* make sure fb is powerdown */
-		console_lock();
-		fb_blank(fbi, FB_BLANK_POWERDOWN);
-		console_unlock();
+		if (fbi->fbops->fb_blank)
+			fbi->fbops->fb_blank(FB_BLANK_POWERDOWN, fbi);
 
 		if (monspecs->modedb_len > 0) {
 			int i;
@@ -324,15 +323,13 @@ static void det_worker(struct work_struct *work)
 			console_unlock();
 		}
 
-		console_lock();
-		fb_blank(fbi, FB_BLANK_UNBLANK);
-		console_unlock();
+		if (fbi->fbops->fb_blank)
+			fbi->fbops->fb_blank(FB_BLANK_UNBLANK, fbi);
 	} else {
 		sii902x->cable_plugin = 0;
 		sprintf(event_string, "EVENT=plugout");
-		console_lock();
-		fb_blank(fbi, FB_BLANK_POWERDOWN);
-		console_unlock();
+		if (fbi->fbops->fb_blank)
+			fbi->fbops->fb_blank(FB_BLANK_POWERDOWN, fbi);
 	}
 	kobject_uevent_env(&sii902x->client->dev.kobj,
 			KOBJ_CHANGE, envp);
-- 
2.9.3

