From e9f91f2a3080b9ba7396c314447d4dea64ef1e5a Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 30 Oct 2017 09:34:58 +0800
Subject: [PATCH 1/1] ARM: 8690/1: lpae: build TTB control register value from scratch in v7_ttb_setup when kexec

There is already a related patch in upstream, so we quote it as follows:

commit f26fee5f111d7221b5b0724a1a54a066dc8cf410 upstream

Reading TTBCR in early boot stage might return the value of the previous
kernel's configuration, especially in case of kexec. For example, if
normal kernel (first kernel) had run on a configuration of PHYS_OFFSET <=
PAGE_OFFSET and crash kernel (second kernel) is running on a configuration
PHYS_OFFSET > PAGE_OFFSET, which can happen because it depends on the
reserved area for crash kernel, reading TTBCR and using the value to OR
other bit fields might be risky because it doesn't have a reset value for TTBCR.

Reason to add limitation by KEXEC from two considerations(SW and HW):

1. Linux kernel can be a virtual machine booted from the agent, like
   u-boot, or a hypervisor, and they might want to set TTBCR in secure
   mode.
2. From IP policy, arm core(with LPAE) can be customized by the vendor
   to use these UNK/SBZP bits.

Suggested-by: Robin Murphy <robin.murphy@arm.com>
Signed-off-by: Hoeun Ryu <hoeun.ryu@gmail.com>
Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---

 arch/arm/mm/proc-v7-3level.S | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/arch/arm/mm/proc-v7-3level.S b/arch/arm/mm/proc-v7-3level.S
index d3daed0..cd61d3e 100644
--- a/arch/arm/mm/proc-v7-3level.S
+++ b/arch/arm/mm/proc-v7-3level.S
@@ -130,8 +130,12 @@ ENDPROC(cpu_v7_set_pte_ext)
 	ldr	\tmp, =swapper_pg_dir		@ swapper_pg_dir virtual address
 	mov	\tmp, \tmp, lsr #ARCH_PGD_SHIFT
 	cmp	\ttbr1, \tmp			@ PHYS_OFFSET > PAGE_OFFSET?
+#ifdef CONFIG_KEXEC
+	mov	\tmp, #TTB_EAE
+#else
 	mrc	p15, 0, \tmp, c2, c0, 2		@ TTB control register
 	orr	\tmp, \tmp, #TTB_EAE
+#endif
 	ALT_SMP(orr	\tmp, \tmp, #TTB_FLAGS_SMP)
 	ALT_UP(orr	\tmp, \tmp, #TTB_FLAGS_UP)
 	ALT_SMP(orr	\tmp, \tmp, #TTB_FLAGS_SMP << 16)
-- 
2.9.3

