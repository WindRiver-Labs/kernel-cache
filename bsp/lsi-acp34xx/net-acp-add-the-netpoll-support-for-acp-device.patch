From 6b79c79bf67b96997c8ecbef4c6baa1e4912f27c Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Thu, 23 Aug 2012 10:34:05 +0800
Subject: [PATCH] net/acp: add the netpoll support for acp device

Add the ndo_poll_controller hook function for acp device. Also
replace spin_{lock,unlock}_irq with spin_{lock,unlock}_irq{save, restore}
since appnic_hard_start_xmit may be invoked by netpoll with irq
disabled.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/lsi/acp/net.c |   46 ++++++++++++++++++++++++++++++++--------------
 1 file changed, 32 insertions(+), 14 deletions(-)

diff --git a/drivers/lsi/acp/net.c b/drivers/lsi/acp/net.c
index 69d94f4..a4007f6 100644
--- a/drivers/lsi/acp/net.c
+++ b/drivers/lsi/acp/net.c
@@ -1262,18 +1262,19 @@ static struct timer_list appnic_timer_;
 #define appnic_special_trylock(lock)            \
   ({                                            \
         int __ret;                              \
-        local_irq_disable();                    \
+        unsigned long flags;			\
+        local_irq_save(flags);                  \
         __ret = spin_trylock(lock);             \
         if (!__ret)                             \
-        local_irq_enable();                     \
+        local_irq_restore(flags);               \
         __ret;                                  \
   })
-#define appnic_special_lock(lock)               spin_lock_irq(lock)
-#define appnic_special_unlock(lock)             spin_unlock_irq(lock)
+#define appnic_special_lock(lock, flags)	spin_lock_irqsave(lock, flags)
+#define appnic_special_unlock(lock, flags)	spin_unlock_irqrestore(lock, flags)
 #else
 #define appnic_special_trylock(lock)            (1)
-#define appnic_special_lock(lock)               do { } while (0)
-#define appnic_special_unlock(lock)             do { } while (0)
+#define appnic_special_lock(lock, flags)	do { } while (0)
+#define appnic_special_unlock(lock, flags)	do { } while (0)
 #endif
 
 /*
@@ -2816,7 +2817,6 @@ static irqreturn_t appnic_isr_( int irq, void * device_id ) {
                     APPNIC_DMA_INTERRUPT_ENABLE );
         __napi_schedule(&dev_->napi);
       } else {
-        ERROR_PRINT( "NAPI bug! interrupt while in poll\n");
         write_mac_( APPNIC_DMA_INTERRUPT_ENABLE_TRANSMIT , 
                     APPNIC_DMA_INTERRUPT_ENABLE );
       }
@@ -2845,6 +2845,19 @@ static irqreturn_t appnic_isr_( int irq, void * device_id ) {
 
 }
 
+#ifdef CONFIG_NET_POLL_CONTROLLER
+/*
+ * Polling receive - used by netconsole and other diagnostic tools
+ * to allow network i/o with interrupts disabled.
+ */
+static void appnic_poll_controller(struct net_device *dev)
+{
+	disable_irq(dev->irq);
+	appnic_isr_(dev->irq, dev);
+	enable_irq(dev->irq);
+}
+
+#endif
 /*
   ----------------------------------------------------------------------
   appnic_open
@@ -3101,6 +3114,7 @@ appnic_hard_start_xmit( struct sk_buff * skb,
   appnic_device_t * adapter = netdev_priv( device );
   int length_;
   int buf_per_desc_;
+  unsigned long flags;
 
 #ifdef __APPNIC_C_PROFILE__
   unsigned long beginning_;
@@ -3112,7 +3126,7 @@ appnic_hard_start_xmit( struct sk_buff * skb,
 #endif /* __APPNIC_C_PROFILE__ */
 
   LSINET_COUNTS_INC( LSINET_COUNTS_HST_START );
-  appnic_special_lock( & adapter->lock );
+  appnic_special_lock( & adapter->lock, flags );
   length_ = skb->len < ETH_ZLEN ? ETH_ZLEN : skb->len;
   buf_per_desc_ = adapter->tx_buf_sz / adapter->tx_num_desc;
 
@@ -3198,7 +3212,7 @@ appnic_hard_start_xmit( struct sk_buff * skb,
     ERROR_PRINT( "No transmit descriptors available!\n" );
   }
 
-  appnic_special_unlock( & adapter->lock );
+  appnic_special_unlock( & adapter->lock, flags );
   /* free the socket buffer */
   dev_kfree_skb( skb );
 
@@ -3392,6 +3406,7 @@ appnic_set_mac_address(struct net_device *device, void *data) {
 static int
 appnic_get_settings( struct net_device * device, struct ethtool_cmd * command )
 {
+  unsigned long flags;
   appnic_device_t * appnic_device_ = netdev_priv( device );
 
   memset( command, 0, sizeof( struct ethtool_cmd ) );
@@ -3404,7 +3419,7 @@ appnic_get_settings( struct net_device * device, struct ethtool_cmd * command )
       SUPPORTED_100baseT_Full );
 
   /* Acquire the device lock. */
-  appnic_special_lock( & appnic_device_->lock );
+  appnic_special_lock( & appnic_device_->lock, flags );
 
 #ifndef PHYLESS
 
@@ -3417,7 +3432,7 @@ appnic_get_settings( struct net_device * device, struct ethtool_cmd * command )
     if( 0 != phy_read_( phy_address_, PHY_AUTONEG_ADVERTISE, & ad_value_ ) ) {
 
       ERROR_PRINT( "PHY read failed!" );
-      appnic_special_unlock( & appnic_device_->lock );
+      appnic_special_unlock( & appnic_device_->lock, flags );
       return -EIO;
 
     }
@@ -3462,7 +3477,7 @@ appnic_get_settings( struct net_device * device, struct ethtool_cmd * command )
     if( -1 == ( speed_ = phy_speed_( phy_address_ ) ) ) {
 
       ERROR_PRINT( "PHY read failed!" );
-      appnic_special_unlock( & appnic_device_->lock );
+      appnic_special_unlock( & appnic_device_->lock, flags );
       return -EIO;
 
     }
@@ -3488,7 +3503,7 @@ appnic_get_settings( struct net_device * device, struct ethtool_cmd * command )
     if( -1 == ( duplex_ = phy_duplex_( phy_address_ ) ) ) {
 
       ERROR_PRINT( "PHY read failed!" );
-      appnic_special_unlock( & appnic_device_->lock );
+      appnic_special_unlock( & appnic_device_->lock, flags );
       return -EIO;
 
     }
@@ -3511,7 +3526,7 @@ appnic_get_settings( struct net_device * device, struct ethtool_cmd * command )
   command->autoneg = AUTONEG_ENABLE;
 
   /* Unlock and return success. */
-  appnic_special_unlock( & appnic_device_->lock );
+  appnic_special_unlock( & appnic_device_->lock, flags );
 
   return 0;
 
@@ -3545,6 +3560,9 @@ static const struct net_device_ops appnic_netdev_ops = {
        .ndo_get_stats = appnic_get_stats,
        .ndo_set_mac_address = appnic_set_mac_address,
        .ndo_start_xmit = appnic_hard_start_xmit,
+#ifdef CONFIG_NET_POLL_CONTROLLER
+	.ndo_poll_controller	= appnic_poll_controller,
+#endif
 };
 #endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29) */
 
-- 
1.7.9.7

