From 41d82c509dbd62cfc030ad8931639a06a9fcd780 Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Sun, 23 Aug 2015 20:58:14 -0700
Subject: [PATCH 046/188] remoteproc: zynqmp_r5_remoteproc: use devm_ioremap
 for mem res

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

the devm_ioremap_resource() does not allow to have two instances
use the memory resource of the same memory address.

In RPU remoteproc case, two RPUs will need to share the same
IPI registers, RPU control registers and APB registers, and thus,
we need to use devm_ioremap instead of devm_ioremap_resourc to get
the memory resources for the IPI, RPU control registers and APB
registers.

Signed-off-by: Wendy Liang <jliang@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 48f31c3e9a81df924d9bd03235c05d60ec3866a7)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/remoteproc/zynqmp_r5_remoteproc.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/remoteproc/zynqmp_r5_remoteproc.c b/drivers/remoteproc/zynqmp_r5_remoteproc.c
index a9d53ab..2fd3b83 100644
--- a/drivers/remoteproc/zynqmp_r5_remoteproc.c
+++ b/drivers/remoteproc/zynqmp_r5_remoteproc.c
@@ -674,7 +674,7 @@ static int zynqmp_r5_remoteproc_probe(struct platform_device *pdev)
 	if (method == HW) {
 		res = platform_get_resource_byname(pdev, IORESOURCE_MEM,
 			"rpu_base");
-		local->rpu_base = devm_ioremap_resource(&pdev->dev, res);
+		local->rpu_base = devm_ioremap(&pdev->dev, res->start, resource_size(res));
 		if (IS_ERR(local->rpu_base)) {
 			dev_err(&pdev->dev, "Unable to map RPU I/O memory\n");
 			ret = PTR_ERR(local->rpu_base);
@@ -683,7 +683,7 @@ static int zynqmp_r5_remoteproc_probe(struct platform_device *pdev)
 
 		res = platform_get_resource_byname(pdev, IORESOURCE_MEM,
 			"apb_base");
-		local->crl_apb_base = devm_ioremap_resource(&pdev->dev, res);
+		local->crl_apb_base = devm_ioremap(&pdev->dev, res->start, resource_size(res));
 		if (IS_ERR(local->crl_apb_base)) {
 			dev_err(&pdev->dev, "Unable to map CRL_APB I/O memory\n");
 			ret = PTR_ERR(local->crl_apb_base);
@@ -691,7 +691,7 @@ static int zynqmp_r5_remoteproc_probe(struct platform_device *pdev)
 		}
 
 		res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "ipi");
-		local->ipi_base = devm_ioremap_resource(&pdev->dev, res);
+		local->ipi_base = devm_ioremap(&pdev->dev, res->start, resource_size(res));
 		if (IS_ERR(local->ipi_base)) {
 			pr_err("%s: Unable to map IPI\n", __func__);
 			ret = PTR_ERR(local->ipi_base);
-- 
2.0.2

