From f7fdcdacdb38fe8f673495ef19a7ffbe684652b1 Mon Sep 17 00:00:00 2001
From: Michael Gill <michael.gill@xilinx.com>
Date: Wed, 10 Aug 2016 16:24:39 -0700
Subject: [PATCH 118/188] staging: apf: Modifications to migrate to kernel v4.6

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

This patch adapts to minor API changes introduces as a result
of the move from v4.4 to v4.6.

Signed-off-by: Michael Gill <gill@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 120489a1835c71e8ad50b2f5f66d9ce610a6b66b)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/staging/apf/xilinx-dma-apf.c |  6 +++---
 drivers/staging/apf/xlnk.c           | 10 ++++------
 2 files changed, 7 insertions(+), 9 deletions(-)

diff --git a/drivers/staging/apf/xilinx-dma-apf.c b/drivers/staging/apf/xilinx-dma-apf.c
index 31ddc0f..7e4c6cf 100644
--- a/drivers/staging/apf/xilinx-dma-apf.c
+++ b/drivers/staging/apf/xilinx-dma-apf.c
@@ -661,7 +661,7 @@ static int pin_user_pages(xlnk_intptr_type uaddr,
 	}
 
 	down_read(&mm->mmap_sem);
-	status = get_user_pages(curr_task, mm, uaddr, num_pages, write, 1,
+	status = get_user_pages(uaddr, num_pages, write, 1,
 				mapped_pages, NULL);
 	up_read(&mm->mmap_sem);
 
@@ -707,7 +707,7 @@ static int pin_user_pages(xlnk_intptr_type uaddr,
 	} else {
 		pr_err("Failed to pin user pages\n");
 		for (pgidx = 0; pgidx < status; pgidx++) {
-			page_cache_release(mapped_pages[pgidx]);
+			put_page(mapped_pages[pgidx]);
 		}
 		return -ENOMEM;
 	}
@@ -724,7 +724,7 @@ static int unpin_user_pages(struct scatterlist *sglist, unsigned int cnt)
 	for (i = 0; i < cnt; i++) {
 		pg = sg_page(sglist + i);
 		if (pg) {
-			page_cache_release(pg);
+			put_page(pg);
 		}
 	}
 
diff --git a/drivers/staging/apf/xlnk.c b/drivers/staging/apf/xlnk.c
index 83d5c80..f123155 100644
--- a/drivers/staging/apf/xlnk.c
+++ b/drivers/staging/apf/xlnk.c
@@ -1081,9 +1081,7 @@ static int xlnk_dmasubmit_ioctl(struct file *filp, unsigned int code,
 			}
 			down_read(&current->mm->mmap_sem);
 			locked_page_count =
-				get_user_pages(current,
-					       current->mm,
-					       first_page * PAGE_SIZE,
+				get_user_pages(first_page * PAGE_SIZE,
 					       t->sg_list_size, 1, 1,
 					       xlnk_page_store, NULL);
 			up_read(&current->mm->mmap_sem);
@@ -1092,7 +1090,7 @@ static int xlnk_dmasubmit_ioctl(struct file *filp, unsigned int code,
 
 				pr_err("could not get user pages");
 				for (i = 0; i < locked_page_count; i++)
-					page_cache_release(xlnk_page_store[i]);
+					put_page(xlnk_page_store[i]);
 				kfree(t->sg_list);
 				vfree(t);
 				return -EFAULT;
@@ -1130,7 +1128,7 @@ static int xlnk_dmasubmit_ioctl(struct file *filp, unsigned int code,
 
 				pr_err("could not map user pages");
 				for (i = 0; i < locked_page_count; i++)
-					page_cache_release(xlnk_page_store[i]);
+					put_page(xlnk_page_store[i]);
 				kfree(t->sg_list);
 				vfree(t);
 				return -EFAULT;
@@ -1236,7 +1234,7 @@ static int xlnk_dmawait_ioctl(struct file *filp, unsigned int code,
 				     t->sg_list_size,
 				     t->transfer_direction);
 			for (i = 0; i < t->sg_list_size; i++)
-				page_cache_release(sg_page(t->sg_list + i));
+				put_page(sg_page(t->sg_list + i));
 		}
 		kfree(t->sg_list);
 		vfree(t);
-- 
2.0.2

