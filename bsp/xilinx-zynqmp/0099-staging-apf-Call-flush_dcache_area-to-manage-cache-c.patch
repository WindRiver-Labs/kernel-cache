From 4a4510814cf11f5632d50a7aa0eceb9131a429b2 Mon Sep 17 00:00:00 2001
From: Yogesh Chobe <yogesh.chobe@xilinx.com>
Date: Fri, 18 Mar 2016 16:41:20 -0700
Subject: [PATCH 099/188] staging: apf: Call flush_dcache_area() to manage
 cache coherence

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

This patch adds in calls that sync L1 cache and replace the
dmac_{map,unmap}_area calls that were removed in a previous patch.

Signed-off-by: Michael Gill <gill@xilinx.com>
Signed-off-by: Yogesh Chobe <yogesh.chobe@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit dcec67a6b45a87b1de79447c6d36a47bc46f4634)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/staging/apf/xilinx-dma-apf.c | 2 ++
 drivers/staging/apf/xlnk.c           | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/drivers/staging/apf/xilinx-dma-apf.c b/drivers/staging/apf/xilinx-dma-apf.c
index 8d5fa28..21328a6 100644
--- a/drivers/staging/apf/xilinx-dma-apf.c
+++ b/drivers/staging/apf/xilinx-dma-apf.c
@@ -831,6 +831,7 @@ int xdma_submit(struct xdma_chan *chan,
 		if (user_flags & CF_FLAG_CACHE_FLUSH_INVALIDATE) {
 			kaddr = phys_to_virt((phys_addr_t)userbuf);
 			if (dmadir == DMA_TO_DEVICE) {
+				__cpuc_flush_dcache_area(kaddr, size);
 				outer_clean_range((phys_addr_t)userbuf,
 						(u32)userbuf + size);
 			}
@@ -926,6 +927,7 @@ int xdma_wait(struct xdma_head *dmahead, unsigned int user_flags)
 			size = dmahead->size;
 			kaddr = phys_to_virt((phys_addr_t)paddr);
 			if (dmahead->dmadir != DMA_TO_DEVICE) {
+				__cpuc_flush_dcache_area(kaddr, size);
 				outer_inv_range((phys_addr_t)paddr,
 						(u32)paddr + size);
 			}
diff --git a/drivers/staging/apf/xlnk.c b/drivers/staging/apf/xlnk.c
index a471afd..5b58793 100644
--- a/drivers/staging/apf/xlnk.c
+++ b/drivers/staging/apf/xlnk.c
@@ -1160,10 +1160,12 @@ static int xlnk_cachecontrol_ioctl(struct file *filp, unsigned int code,
 
 	if (temp_args.cachecontrol.action == 0) {
 		/* flush cache */
+		__cpuc_flush_dcache_area(kaddr, size);
 		outer_clean_range((unsigned int)paddr,
 				  (unsigned int)(paddr + size));
 	} else {
 		/* invalidate cache */
+		__cpuc_flush_dcache_area(kaddr, size);
 		outer_inv_range((unsigned int)paddr,
 				(unsigned int)(paddr + size));
 	}
-- 
2.0.2

