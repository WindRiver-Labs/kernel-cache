From 3799044167c3d60b133d0f4bf9b4ad7f88dc0d9c Mon Sep 17 00:00:00 2001
From: Michael Gill <michael.gill@xilinx.com>
Date: Fri, 8 Apr 2016 14:13:29 -0700
Subject: [PATCH 104/188] staging: apf: Modifications to match user-space xlnk
 lib changes

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Modified apf driver to conform to changes made in xlnk lib user-space
code.  Primarily this involves changes in internal DMA naming conventions
and layout of structures used in ioctl calls.

Signed-off-by: Michael Gill <gill@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit f9dd59dfc6a0d659665661c3f352f425dfc0153c)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/staging/apf/xilinx-dma-apf.c |  6 +++---
 drivers/staging/apf/xilinx-dma-apf.h |  3 ++-
 drivers/staging/apf/xlnk.c           | 31 +++++++++++++++++--------------
 drivers/staging/apf/xlnk.h           | 12 ++++++------
 4 files changed, 28 insertions(+), 24 deletions(-)

diff --git a/drivers/staging/apf/xilinx-dma-apf.c b/drivers/staging/apf/xilinx-dma-apf.c
index 88f33cf..b0de6a2 100644
--- a/drivers/staging/apf/xilinx-dma-apf.c
+++ b/drivers/staging/apf/xilinx-dma-apf.c
@@ -1051,9 +1051,9 @@ static int xdma_probe(struct platform_device *pdev)
 		chan->dev = xdev->dev;
 		chan->max_len = XDMA_MAX_TRANS_LEN;
 		chan->direction = dma_chan_dir;
-		sprintf(chan->name, "%schan%d", dev_name(&pdev->dev), chan->id);
-		pr_info("  chan%d name: %s\n", chan->id, chan->name);
-		pr_info("  chan%d direction: %s\n", chan->id,
+		sprintf(chan->name, "%s:%d", dma_config->name, chan->id);
+		pr_info("  chan %d name: %s\n", chan->id, chan->name);
+		pr_info("  chan %d direction: %s\n", chan->id,
 			dma_chan_dir == DMA_FROM_DEVICE ?
 				"FROM_DEVICE" : "TO_DEVICE");
 
diff --git a/drivers/staging/apf/xilinx-dma-apf.h b/drivers/staging/apf/xilinx-dma-apf.h
index 1ce2e2d..65c9463 100644
--- a/drivers/staging/apf/xilinx-dma-apf.h
+++ b/drivers/staging/apf/xilinx-dma-apf.h
@@ -107,6 +107,7 @@ struct dma_channel_config {
 };
 struct dma_device_config {
 	char *type;
+	char *name;
 	unsigned int include_sg;
 	unsigned int sg_include_stscntrl_strm;  /* dma only */
 	unsigned int channel_count;
@@ -124,8 +125,8 @@ struct xdma_desc_hw {
 	u32 status;     /* 0x1c */
 	u32 app[5];      /* 0x20 */
 	u32 dmahead;
-	u32 sw_flag;	/* 0x38 */
 	u32 Reserved0;
+	u32 sw_flag;	/* 0x3C */
 } __aligned(64);
 
 /* shared by all Xilinx DMA engines */
diff --git a/drivers/staging/apf/xlnk.c b/drivers/staging/apf/xlnk.c
index 24b6417..4243586 100644
--- a/drivers/staging/apf/xlnk.c
+++ b/drivers/staging/apf/xlnk.c
@@ -573,7 +573,7 @@ static int xlnk_devregister(char *name, unsigned int id,
 	devpack->pdev.id = id;
 
 	devpack->pdev.dev.dma_mask = &dma_mask;
-	devpack->pdev.dev.coherent_dma_mask = 0xFFFFFFFF;
+	devpack->pdev.dev.coherent_dma_mask = dma_mask;
 
 	devpack->res[0].start = base;
 	devpack->res[0].end = base + size - 1;
@@ -620,11 +620,11 @@ static int xlnk_dmaregister(char *name, unsigned int id,
 
 	struct xlnk_device_pack *devpack;
 
-	if (strcmp(name, "xilinx-axidma"))
-		return -EINVAL;
-
-	if (chan_num < 1 || chan_num > 2)
+	if (chan_num < 1 || chan_num > 2) {
+		pr_err("%s: Expected either 1 or 2 channels, got %d\n",
+		       __func__, chan_num);
 		return -EINVAL;
+	}
 
 	devpack = xlnk_devpacks_find(base);
 	if (devpack) {
@@ -637,8 +637,7 @@ static int xlnk_dmaregister(char *name, unsigned int id,
 	if (!devpack)
 		return -ENOMEM;
 
-	strcpy(devpack->name, name);
-	devpack->pdev.name = devpack->name;
+	devpack->pdev.name = "xilinx-axidma";
 
 	devpack->pdev.id = id;
 
@@ -646,7 +645,8 @@ static int xlnk_dmaregister(char *name, unsigned int id,
 	devpack->dma_chan_cfg[0].datawidth   = chan0_data_width;
 	devpack->dma_chan_cfg[0].irq = chan0_irq;
 	devpack->dma_chan_cfg[0].poll_mode   = chan0_poll_mode;
-	devpack->dma_chan_cfg[0].type = chan0_dir ?
+	devpack->dma_chan_cfg[0].type =
+		(chan0_dir == XLNK_DMA_FROM_DEVICE) ?
 					"axi-dma-s2mm-channel" :
 					"axi-dma-mm2s-channel";
 
@@ -655,11 +655,13 @@ static int xlnk_dmaregister(char *name, unsigned int id,
 		devpack->dma_chan_cfg[1].datawidth   = chan1_data_width;
 		devpack->dma_chan_cfg[1].irq = chan1_irq;
 		devpack->dma_chan_cfg[1].poll_mode   = chan1_poll_mode;
-		devpack->dma_chan_cfg[1].type = chan1_dir ?
+		devpack->dma_chan_cfg[1].type =
+			(chan1_dir == XLNK_DMA_FROM_DEVICE) ?
 						"axi-dma-s2mm-channel" :
 						"axi-dma-mm2s-channel";
 	}
 
+	devpack->dma_dev_cfg.name = devpack->name;
 	devpack->dma_dev_cfg.type = "axi-dma";
 	devpack->dma_dev_cfg.include_sg = 1;
 	devpack->dma_dev_cfg.sg_include_stscntrl_strm = 1;
@@ -669,7 +671,7 @@ static int xlnk_dmaregister(char *name, unsigned int id,
 	devpack->pdev.dev.platform_data = &devpack->dma_dev_cfg;
 
 	devpack->pdev.dev.dma_mask = &dma_mask;
-	devpack->pdev.dev.coherent_dma_mask = 0xFFFFFFFF;
+	devpack->pdev.dev.coherent_dma_mask = dma_mask;
 
 	devpack->res[0].start = base;
 	devpack->res[0].end = base + size - 1;
@@ -730,7 +732,7 @@ static int xlnk_mcdmaregister(char *name, unsigned int id,
 
 	devpack->pdev.dev.platform_data	 = &devpack->mcdma_dev_cfg;
 	devpack->pdev.dev.dma_mask = &dma_mask;
-	devpack->pdev.dev.coherent_dma_mask = 0xFFFFFFFF;
+	devpack->pdev.dev.coherent_dma_mask = dma_mask;
 	devpack->pdev.dev.release = xdma_if_device_release,
 
 	devpack->res[0].start = base;
@@ -778,10 +780,11 @@ static int xlnk_allocbuf_ioctl(struct file *filp, unsigned int code,
 	if (id <= 0)
 		return -ENOMEM;
 
-	put_user(id, temp_args.allocbuf.idptr);
-	put_user((u32)(xlnk_phyaddr[id]), temp_args.allocbuf.phyaddrptr);
+	temp_args.allocbuf.id = id;
+	temp_args.allocbuf.phyaddr = xlnk_phyaddr[id];
+	status = copy_to_user(args, &temp_args, sizeof(union xlnk_args));
 
-	return 0;
+	return status;
 }
 
 static int xlnk_freebuf(int id)
diff --git a/drivers/staging/apf/xlnk.h b/drivers/staging/apf/xlnk.h
index e99d4c7..2939e63 100644
--- a/drivers/staging/apf/xlnk.h
+++ b/drivers/staging/apf/xlnk.h
@@ -40,9 +40,9 @@ struct xlnk_dmabuf_reg {
 union xlnk_args {
 	struct {
 		unsigned int len;
-		unsigned int __user *idptr;
-		unsigned int __user *phyaddrptr;
-		unsigned int cacheable;
+		int id;
+		unsigned int phyaddr;
+		unsigned char cacheable;
 	} allocbuf;
 	struct {
 		unsigned int id;
@@ -87,7 +87,7 @@ union xlnk_args {
 		u32 dmachan;
 	} dmarelease;
 	struct {
-		unsigned long base;
+		unsigned int base;
 		unsigned int size;
 		unsigned int irqs[8];
 		char name[32];
@@ -99,7 +99,7 @@ union xlnk_args {
 	struct {
 		char name[32];
 		unsigned int id;
-		unsigned long base;
+		unsigned int base;
 		unsigned int size;
 		unsigned int chan_num;
 		unsigned int chan0_dir;
@@ -116,7 +116,7 @@ union xlnk_args {
 	struct {
 		char name[32];
 		unsigned int id;
-		unsigned long base;
+		unsigned int base;
 		unsigned int size;
 		unsigned int mm2s_chan_num;
 		unsigned int mm2s_chan_irq;
-- 
2.0.2

