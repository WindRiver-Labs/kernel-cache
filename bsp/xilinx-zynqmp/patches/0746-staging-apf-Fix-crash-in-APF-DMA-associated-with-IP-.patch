From fdef044bd4c52ca5e0b0574cb6c46dd1405f2493 Mon Sep 17 00:00:00 2001
From: Michael Gill <michael.gill@xilinx.com>
Date: Thu, 23 Jun 2016 09:55:24 -0700
Subject: [PATCH 746/827] staging: apf: Fix crash in APF DMA associated with IP change

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

The SG-DMA IP changed slightly, causing the APF DMA to occasionally
fail to correctly write 64-bit addresses to IP registers.  This
change corrects that problem.

Signed-off-by: Michael Gill <gill@xilinx.com>
Tested-by: Christian Kohn <christian.kohn@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit e3713baaa51132b6c7f6f714fb3bd1b97d96121f)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/staging/apf/xilinx-dma-apf.c | 14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

diff --git a/drivers/staging/apf/xilinx-dma-apf.c b/drivers/staging/apf/xilinx-dma-apf.c
index f6dbcbf..48a0844 100644
--- a/drivers/staging/apf/xilinx-dma-apf.c
+++ b/drivers/staging/apf/xilinx-dma-apf.c
@@ -48,6 +48,7 @@
 static DEFINE_MUTEX(dma_list_mutex);
 static LIST_HEAD(dma_device_list);
 /* IO accessors */
+#define DMA_OUT_64(addr, val)   (writeq(val, addr))
 #define DMA_OUT(addr, val)      (iowrite32(val, addr))
 #define DMA_IN(addr)            (ioread32(addr))
 
@@ -354,8 +355,8 @@ static void xdma_start_transfer(struct xdma_chan *chan,
 				int start_index,
 				int end_index)
 {
-	dma_addr_t cur_phys;
-	dma_addr_t tail_phys;
+	xlnk_intptr_type cur_phys;
+	xlnk_intptr_type tail_phys;
 	u32 regval;
 
 	if (chan->err)
@@ -370,8 +371,7 @@ static void xdma_start_transfer(struct xdma_chan *chan,
 #if XLNK_SYS_BIT_WIDTH == 32
 		DMA_OUT(&chan->regs->tdr, tail_phys);
 #else
-		DMA_OUT(&chan->regs->tdr_hi, GET_HI(tail_phys));
-		DMA_OUT(&chan->regs->tdr, GET_LOW(tail_phys));
+		DMA_OUT_64(&chan->regs->tdr, tail_phys);
 #endif
 		return;
 	}
@@ -379,8 +379,7 @@ static void xdma_start_transfer(struct xdma_chan *chan,
 #if XLNK_SYS_BIT_WIDTH == 32
 	DMA_OUT(&chan->regs->cdr, cur_phys);
 #else
-	DMA_OUT(&chan->regs->cdr_hi, GET_HI(cur_phys));
-	DMA_OUT(&chan->regs->cdr, GET_LOW(cur_phys));
+	DMA_OUT_64(&chan->regs->cdr, cur_phys);
 #endif
 
 	dma_start(chan);
@@ -395,8 +394,7 @@ static void xdma_start_transfer(struct xdma_chan *chan,
 #if XLNK_SYS_BIT_WIDTH == 32
 	DMA_OUT(&chan->regs->tdr, tail_phys);
 #else
-	DMA_OUT(&chan->regs->tdr_hi, GET_HI(tail_phys));
-	DMA_OUT(&chan->regs->tdr, GET_LOW(tail_phys));
+	DMA_OUT_64(&chan->regs->tdr, tail_phys);
 #endif
 }
 
-- 
2.9.3

