From f3b657699180f8952b24fb7ac3e9b493237a0830 Mon Sep 17 00:00:00 2001
From: Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
Date: Wed, 10 Aug 2016 21:45:39 +0530
Subject: [PATCH 755/827] phy: zynqmp: Add scrambler/descrambler and 8b/10b encoder/decoder bypass routines

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

This patch adds separate function for bypassing scrambler/descrambler and
encoder/decoder feature.

Signed-off-by: Anurag Kumar Vulisha <anuragku@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 4e8a030619baed40d290463a1a1be4228f4307a9)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/phy/phy-zynqmp.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/drivers/phy/phy-zynqmp.c b/drivers/phy/phy-zynqmp.c
index 4addea9..be65bac 100644
--- a/drivers/phy/phy-zynqmp.c
+++ b/drivers/phy/phy-zynqmp.c
@@ -609,6 +609,34 @@ int xpsgtr_wait_pll_lock(struct phy *phy)
 EXPORT_SYMBOL_GPL(xpsgtr_wait_pll_lock);
 
 /**
+ * xpsgtr_bypass_scramenc - This bypasses scrambler and 8b/10b encoder feature
+ * @gtr_phy: pointer to lane
+ */
+static void xpsgtr_bypass_scramenc(struct xpsgtr_phy *gtr_phy)
+{
+	u32 offset;
+	struct xpsgtr_dev *gtr_dev = gtr_phy->data;
+
+	/* bypass Scrambler and 8b/10b Encoder */
+	offset = gtr_phy->lane * TX_DIG_61_OFFSET + L0_TX_DIG_61;
+	writel(TM_DISABLE_SCRAMBLE_ENCODER, gtr_dev->serdes + offset);
+}
+
+/**
+ * xpsgtr_bypass_descramdec - bypasses descrambler and 8b/10b encoder feature
+ * @gtr_phy: pointer to lane
+ */
+static void xpsgtr_bypass_descramdec(struct xpsgtr_phy *gtr_phy)
+{
+	u32 offset;
+	struct xpsgtr_dev *gtr_dev = gtr_phy->data;
+
+	/* bypass Descrambler and 8b/10b decoder */
+	offset = gtr_phy->lane * TM_DIG_6_OFFSET + L0_TM_DIG_6;
+	writel(TM_DISABLE_DESCRAMBLE_DECODER, gtr_dev->serdes + offset);
+}
+
+/**
  * xpsgtr_misc_sata - miscellaneous settings for SATA
  * @gtr_phy: pointer to lane
  */
-- 
2.9.3

