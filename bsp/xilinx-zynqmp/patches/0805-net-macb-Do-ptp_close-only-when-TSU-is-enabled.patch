From 6ce2e6e67c536df16fcb7d5878e79de88ea2d5fb Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Sat, 10 Oct 2015 00:37:53 +0530
Subject: [PATCH 805/827] net: macb: Do ptp_close only when TSU is enabled

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Call ptp_close (and ptp_clock_unregister in it) only when TSU capability
is present. ptp_init is already done this way.
This fixes issues caused when TSU caps is not present.

Signed-off-by: Harini Katakam <harinik@xilinx.com>
Reviewed-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit f487868d3f26ed588e7bd55f8af73e29316a47dc)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/cadence/macb.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/cadence/macb.c b/drivers/net/ethernet/cadence/macb.c
index 0576b9c..356369f 100644
--- a/drivers/net/ethernet/cadence/macb.c
+++ b/drivers/net/ethernet/cadence/macb.c
@@ -2158,7 +2158,9 @@ static int macb_close(struct net_device *dev)
 
 	spin_lock_irqsave(&bp->lock, flags);
 	macb_reset_hw(bp);
-	macb_ptp_close(bp);
+	if ((gem_readl(bp, DCFG5) & GEM_BIT(TSU)) &&
+	    (bp->caps & MACB_CAPS_TSU))
+		macb_ptp_close(bp);
 	netif_carrier_off(dev);
 	spin_unlock_irqrestore(&bp->lock, flags);
 
-- 
2.9.3

