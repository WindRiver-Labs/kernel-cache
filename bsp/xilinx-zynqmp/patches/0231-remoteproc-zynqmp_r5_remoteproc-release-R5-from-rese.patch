From 7ec6d6bb9a9d201ae3d3098cd3dbb02d47ff0657 Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Thu, 13 Aug 2015 07:23:11 -0700
Subject: [PATCH 231/827] remoteproc: zynqmp_r5_remoteproc: release R5 from reset before fw loading

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

In case firmware uses TCM, in order to load part of firmware to TCM,
need to release R5 from reset before loading the firmware.

Kernel will not be able to access TCM if it is secure.
There is on going discussion on loading secure firmware, it is not
covered in this implementation.

Signed-off-by: Wendy Liang <jliang@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 793c5f1a5b773f0cbb3039e17775c61d34ca8e13)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/remoteproc/zynqmp_r5_remoteproc.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/drivers/remoteproc/zynqmp_r5_remoteproc.c b/drivers/remoteproc/zynqmp_r5_remoteproc.c
index 6b594ff..8592d8d 100644
--- a/drivers/remoteproc/zynqmp_r5_remoteproc.c
+++ b/drivers/remoteproc/zynqmp_r5_remoteproc.c
@@ -545,6 +545,24 @@ static struct rproc_ops zynqmp_r5_rproc_ops = {
 	.kick		= zynqmp_r5_rproc_kick,
 };
 
+/* Release R5 from reset and make it halted.
+ * In case the firmware uses TCM, in order to load firmware to TCM,
+ * will need to release R5 from reset and stay in halted state.
+ */
+static void zynqmp_r5_rproc_init(struct rproc *rproc)
+{
+	struct device *dev = rproc->dev.parent;
+	struct platform_device *pdev = to_platform_device(dev);
+	struct zynqmp_r5_rproc_pdata *local = platform_get_drvdata(pdev);
+	void *r5_mem_ptr = 0;
+
+	dev_dbg(dev, "%s\n", __func__);
+
+	local->rpu_ops->en_reset(local, true);
+	local->rpu_ops->halt(local, true);
+	local->rpu_ops->en_reset(local, false);
+}
+
 static irqreturn_t r5_remoteproc_interrupt(int irq, void *dev_id)
 {
 	struct device *dev = dev_id;
@@ -698,6 +716,7 @@ static int zynqmp_r5_remoteproc_probe(struct platform_device *pdev)
 		goto rproc_fault;
 	}
 
+	zynqmp_r5_rproc_init(local->rproc);
 	ret = rproc_add(local->rproc);
 	if (ret) {
 		dev_err(&pdev->dev, "rproc registration failed\n");
-- 
2.9.3

