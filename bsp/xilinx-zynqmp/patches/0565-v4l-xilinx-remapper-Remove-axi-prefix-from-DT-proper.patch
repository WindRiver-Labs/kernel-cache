From 481d4ae5eceeca9beab7e13c2b80b4d8198718f0 Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Thu, 25 Sep 2014 16:07:57 +0300
Subject: [PATCH 565/827] v4l: xilinx: remapper: Remove axi- prefix from DT properties

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

The prefix has been removed from the compatible strings, remove it from
the video-width and video-format properties as well.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
(cherry picked from commit 6f269fcf5ff7196243350bbcbdcdac34e41477e5)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../bindings/media/xilinx/xlnx,v-remapper.txt          | 18 +++++++++---------
 drivers/media/platform/xilinx/xilinx-remapper.c        | 16 ++++++++--------
 2 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/Documentation/devicetree/bindings/media/xilinx/xlnx,v-remapper.txt b/Documentation/devicetree/bindings/media/xilinx/xlnx,v-remapper.txt
index 73c38fa..c8dff382 100644
--- a/Documentation/devicetree/bindings/media/xilinx/xlnx,v-remapper.txt
+++ b/Documentation/devicetree/bindings/media/xilinx/xlnx,v-remapper.txt
@@ -8,15 +8,15 @@ Required properties:
 
 - compatible: Must be "xlnx,v-remapper".
 
-- xlnx,axi-video-width: Video pixel component width, as defined in video.txt.
+- xlnx,video-width: Video pixel component width, as defined in video.txt.
 
-- #xlnx,axi-s-components: Number of components per pixel at the input port
+- #xlnx,s-components: Number of components per pixel at the input port
   (between 1 and 4 inclusive).
 
-- #xlnx,axi-m-components: Number of components per pixel at the output port
+- #xlnx,m-components: Number of components per pixel at the output port
   (between 1 and 4 inclusive).
 
-- xlnx,axi-component-maps: Remapping configuration represented as an array of
+- xlnx,component-maps: Remapping configuration represented as an array of
   integers. The array contains one entry per output component, in the low to
   high order. Each entry corresponds to the zero-based position of the
   corresponding input component, or the value 4 to drive a constant value on
@@ -28,14 +28,14 @@ Required properties:
 
 Example: RBG to xRGB remapper
 
-	axi_remapper_0: axi_remapper {
+	remapper_0: remapper {
 		compatible = "xlnx,v-remapper";
 
-		xlnx,axi-video-width = <8>;
+		xlnx,video-width = <8>;
 
-		#xlnx,axi-s-components = <3>;
-		#xlnx,axi-m-components = <4>;
-		xlnx,axi-component-maps = <1 0 2 4>;
+		#xlnx,s-components = <3>;
+		#xlnx,m-components = <4>;
+		xlnx,component-maps = <1 0 2 4>;
 
 		ports {
 			#address-cells = <1>;
diff --git a/drivers/media/platform/xilinx/xilinx-remapper.c b/drivers/media/platform/xilinx/xilinx-remapper.c
index fd11a61..26e354c 100644
--- a/drivers/media/platform/xilinx/xilinx-remapper.c
+++ b/drivers/media/platform/xilinx/xilinx-remapper.c
@@ -374,36 +374,36 @@ static int xremap_parse_of(struct xremap_device *xremap)
 	int ret;
 
 	/* Parse the DT properties. */
-	ret = of_property_read_u32(node, "xlnx,axi-video-width",
+	ret = of_property_read_u32(node, "xlnx,video-width",
 				   &xremap->config.width);
 	if (ret < 0) {
 		dev_dbg(xremap->xvip.dev, "unable to parse %s property\n",
-			"xlnx,axi-video-width");
+			"xlnx,video-width");
 		return -EINVAL;
 	}
 
-	ret = of_property_read_u32(node, "#xlnx,axi-s-components",
+	ret = of_property_read_u32(node, "#xlnx,s-components",
 				   &xremap->config.num_s_components);
 	if (ret < 0) {
 		dev_dbg(xremap->xvip.dev, "unable to parse %s property\n",
-			"#xlnx,axi-s-components");
+			"#xlnx,s-components");
 		return -EINVAL;
 	}
 
-	ret = of_property_read_u32(node, "#xlnx,axi-m-components",
+	ret = of_property_read_u32(node, "#xlnx,m-components",
 				   &xremap->config.num_m_components);
 	if (ret < 0) {
 		dev_dbg(xremap->xvip.dev, "unable to parse %s property\n",
-			"#xlnx,axi-m-components");
+			"#xlnx,m-components");
 		return -EINVAL;
 	}
 
-	ret = of_property_read_u32_array(node, "xlnx,axi-component-maps",
+	ret = of_property_read_u32_array(node, "xlnx,component-maps",
 					 xremap->config.component_maps,
 					 xremap->config.num_m_components);
 	if (ret < 0) {
 		dev_dbg(xremap->xvip.dev, "unable to parse %s property\n",
-			"xlnx,axi-component-maps");
+			"xlnx,component-maps");
 		return -EINVAL;
 	}
 
-- 
2.9.3

