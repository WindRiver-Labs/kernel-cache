From 029fdca45f1ebfce2a51316e841992e425340405 Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Thu, 27 Nov 2014 04:03:15 +0200
Subject: [PATCH 586/827] v4l: xilinx: switch: Use xvip_init_resources()

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Replace the manual ioremap by a call to xvip_init_resources(), which
also handles the functional clock.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
(cherry picked from commit c29cd9bd5331bfc65d108ccdebb548a1e8443311)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../bindings/media/xilinx/xlnx,v-switch.txt        |  3 +++
 drivers/media/platform/xilinx/xilinx-switch.c      | 24 +++++++++++++---------
 2 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/Documentation/devicetree/bindings/media/xilinx/xlnx,v-switch.txt b/Documentation/devicetree/bindings/media/xilinx/xlnx,v-switch.txt
index 9aee659..fde86d7 100644
--- a/Documentation/devicetree/bindings/media/xilinx/xlnx,v-switch.txt
+++ b/Documentation/devicetree/bindings/media/xilinx/xlnx,v-switch.txt
@@ -7,6 +7,8 @@ Required properties:
 
   - reg: Physical base address and length of the registers set for the device.
 
+  - clocks: Reference to the video core clock.
+
   - #xlnx,inputs: Number of input ports
   - #xlnx,outputs: Number of outputs ports
 
@@ -17,6 +19,7 @@ Example:
 	axi_switch: axi_switch@43c10000 {
 		compatible = "xlnx,v-switch-1.0";
 		reg = <0x43c10000 0x10000>;
+		clocks = <&clkc 15>;
 
 		#xlnx,inputs = <2>;
 		#xlnx,outputs = <2>;
diff --git a/drivers/media/platform/xilinx/xilinx-switch.c b/drivers/media/platform/xilinx/xilinx-switch.c
index 1e63157..d6d178c 100644
--- a/drivers/media/platform/xilinx/xilinx-switch.c
+++ b/drivers/media/platform/xilinx/xilinx-switch.c
@@ -348,7 +348,6 @@ static int xsw_probe(struct platform_device *pdev)
 {
 	struct v4l2_subdev *subdev;
 	struct xswitch_device *xsw;
-	struct resource *res;
 	unsigned int npads;
 	unsigned int i;
 	int ret;
@@ -363,10 +362,9 @@ static int xsw_probe(struct platform_device *pdev)
 	if (ret < 0)
 		return ret;
 
-	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-	xsw->xvip.iomem = devm_ioremap_resource(&pdev->dev, res);
-	if (IS_ERR(xsw->xvip.iomem))
-		return PTR_ERR(xsw->xvip.iomem);
+	ret = xvip_init_resources(&xsw->xvip);
+	if (ret < 0)
+		return ret;
 
 	/* Initialize V4L2 subdevice and media entity. Pad numbers depend on the
 	 * number of pads.
@@ -375,7 +373,7 @@ static int xsw_probe(struct platform_device *pdev)
 	xsw->pads = devm_kzalloc(&pdev->dev, npads * sizeof(*xsw->pads),
 				 GFP_KERNEL);
 	if (!xsw->pads)
-		return -ENOMEM;
+		goto error;
 
 	for (i = 0; i < xsw->nsinks; ++i)
 		xsw->pads[i].flags = MEDIA_PAD_FL_SINK;
@@ -386,7 +384,7 @@ static int xsw_probe(struct platform_device *pdev)
 				    xsw->nsinks * sizeof(*xsw->formats),
 				    GFP_KERNEL);
 	if (!xsw->formats)
-		return -ENOMEM;
+		goto error;
 
 	for (i = 0; i < xsw->nsources; ++i)
 		xsw->routing[i] = i < xsw->nsinks ? i : -1;
@@ -404,7 +402,7 @@ static int xsw_probe(struct platform_device *pdev)
 
 	ret = media_entity_init(&subdev->entity, npads, xsw->pads, 0);
 	if (ret < 0)
-		return ret;
+		goto error;
 
 	platform_set_drvdata(pdev, xsw);
 
@@ -413,11 +411,15 @@ static int xsw_probe(struct platform_device *pdev)
 	ret = v4l2_async_register_subdev(subdev);
 	if (ret < 0) {
 		dev_err(&pdev->dev, "failed to register subdev\n");
-		media_entity_cleanup(&subdev->entity);
-		return ret;
+		goto error;
 	}
 
 	return 0;
+
+error:
+	media_entity_cleanup(&subdev->entity);
+	xvip_cleanup_resources(&xsw->xvip);
+	return ret;
 }
 
 static int xsw_remove(struct platform_device *pdev)
@@ -428,6 +430,8 @@ static int xsw_remove(struct platform_device *pdev)
 	v4l2_async_unregister_subdev(subdev);
 	media_entity_cleanup(&subdev->entity);
 
+	xvip_cleanup_resources(&xsw->xvip);
+
 	return 0;
 }
 
-- 
2.9.3

