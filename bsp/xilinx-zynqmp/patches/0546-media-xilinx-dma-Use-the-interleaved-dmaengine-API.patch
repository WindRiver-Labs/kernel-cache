From d63c0e4fb388aa08c6a42b06346d922a4a6d5b4c Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Fri, 25 Jul 2014 16:44:58 -0700
Subject: [PATCH 546/827] media: xilinx: dma: Use the interleaved dmaengine API

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

The Xilinx VDMA driver is implemented based on the interleaved dmaengine
API, so the Xilinx V4L2 is updated accordingly.

Signed-off-by: Hyun Kwon <hyunk@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit bf69cce5a7ca40ac5190ef17e33c2843aee345ca)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-dma.c | 23 ++++++++++++++---------
 drivers/media/platform/xilinx/xilinx-dma.h |  5 +++++
 2 files changed, 19 insertions(+), 9 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-dma.c b/drivers/media/platform/xilinx/xilinx-dma.c
index 119ecc6..75ad491 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-dma.c
@@ -11,7 +11,6 @@
  */
 
 #include <linux/amba/xilinx_dma.h>
-#include <linux/dmaengine.h>
 #include <linux/lcm.h>
 #include <linux/list.h>
 #include <linux/module.h>
@@ -374,19 +373,28 @@ static void xvip_dma_buffer_queue(struct vb2_buffer *vb)
 	struct xvip_dma *dma = vb2_get_drv_priv(vb->vb2_queue);
 	struct xvip_dma_buffer *buf = to_xvip_dma_buffer(vb);
 	struct dma_async_tx_descriptor *desc;
-	enum dma_transfer_direction dir;
 	u32 flags;
 
 	if (dma->queue.type == V4L2_BUF_TYPE_VIDEO_CAPTURE) {
 		flags = DMA_PREP_INTERRUPT | DMA_CTRL_ACK;
-		dir = DMA_DEV_TO_MEM;
+		dma->xt.dir = DMA_DEV_TO_MEM;
+		dma->xt.src_sgl = false;
+		dma->xt.dst_sgl = true;
+		dma->xt.dst_start = buf->addr;
 	} else {
 		flags = DMA_PREP_INTERRUPT | DMA_CTRL_ACK;
-		dir = DMA_MEM_TO_DEV;
+		dma->xt.dir = DMA_MEM_TO_DEV;
+		dma->xt.src_sgl = true;
+		dma->xt.dst_sgl = false;
+		dma->xt.src_start = buf->addr;
 	}
 
-	desc = dmaengine_prep_slave_single(dma->dma, buf->addr, buf->length,
-					   dir, flags);
+	dma->xt.frame_size = 1;
+	dma->sgl[0].size = dma->format.width * dma->fmtinfo->bpp;
+	dma->sgl[0].icg = dma->format.bytesperline - dma->sgl[0].size;
+	dma->xt.numf = dma->format.height;
+
+	desc = dmaengine_prep_interleaved_dma(dma->dma, &dma->xt, flags);
 	if (!desc) {
 		dev_err(dma->xdev->dev, "Failed to prepare DMA transfer\n");
 		vb2_buffer_done(&buf->buf, VB2_BUF_STATE_ERROR);
@@ -643,9 +651,6 @@ xvip_dma_set_format(struct file *file, void *fh, struct v4l2_format *format)
 
 	config.park = 1;
 	config.park_frm = 0;
-	config.vsize = dma->format.height;
-	config.hsize = dma->format.width * info->bpp;
-	config.stride = dma->format.bytesperline;
 	config.ext_fsync = 2;
 
 	dmaengine_device_control(dma->dma, DMA_SLAVE_CONFIG,
diff --git a/drivers/media/platform/xilinx/xilinx-dma.h b/drivers/media/platform/xilinx/xilinx-dma.h
index ecb50d4..8eb4c8d 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.h
+++ b/drivers/media/platform/xilinx/xilinx-dma.h
@@ -13,6 +13,7 @@
 #ifndef __XILINX_VIP_DMA_H__
 #define __XILINX_VIP_DMA_H__
 
+#include <linux/dmaengine.h>
 #include <linux/mutex.h>
 #include <linux/videodev2.h>
 
@@ -65,6 +66,8 @@ static inline struct xvip_pipeline *to_xvip_pipeline(struct media_entity *e)
  * @sequence: V4L2 buffers sequence number
  * @dma: DMA engine channel
  * @align: transfer alignment required by the DMA channel (in bytes)
+ * @xt: dma interleaved template for dma configuration
+ * @sgl: data chunk structure for dma_interleaved_template
  */
 struct xvip_dma {
 	struct list_head list;
@@ -85,6 +88,8 @@ struct xvip_dma {
 
 	struct dma_chan *dma;
 	unsigned int align;
+	struct dma_interleaved_template xt;
+	struct data_chunk sgl[1];
 };
 
 #define to_xvip_dma(vdev)	container_of(vdev, struct xvip_dma, video)
-- 
2.9.3

