From 2c3793cf3b4f438ff1c3d0cfba6f7e763ecb5e35 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Thu, 29 Sep 2016 08:34:05 +0800
Subject: [PATCH 819/827] drm: xilinx: get rid of the compiling warnings

drivers/gpu/drm/xilinx/xilinx_drm_drv.c:418:2: warning: initialization from incompatible pointer type
  .get_vblank_counter  = drm_vblank_no_hw_counter,
  ^
drivers/gpu/drm/xilinx/xilinx_drm_drv.c:418:2: warning: (near initialization for 'xilinx_drm_driver.get_vblank_counter')
drivers/gpu/drm/xilinx/xilinx_drm_drv.c:419:2: warning: initialization from incompatible pointer type
  .enable_vblank   = xilinx_drm_enable_vblank,
  ^
drivers/gpu/drm/xilinx/xilinx_drm_drv.c:419:2: warning: (near initialization for 'xilinx_drm_driver.enable_vblank')
drivers/gpu/drm/xilinx/xilinx_drm_drv.c:420:2: warning: initialization from incompatible pointer type
  .disable_vblank   = xilinx_drm_disable_vblank,
  ^
drivers/gpu/drm/xilinx/xilinx_drm_drv.c:420:2: warning: (near initialization for 'xilinx_drm_driver.disable_vblank')

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 include/drm/drmP.h | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/include/drm/drmP.h b/include/drm/drmP.h
index b207eb7..785ef08 100644
--- a/include/drm/drmP.h
+++ b/include/drm/drmP.h
@@ -125,6 +125,7 @@ struct dma_buf_attachment;
 #define DRM_UT_KMS		0x04
 #define DRM_UT_PRIME		0x08
 #define DRM_UT_ATOMIC		0x10
+#define DRM_UT_VBL		0x20
 
 extern __printf(2, 3)
 void drm_ut_debug_printk(const char *function_name,
@@ -217,6 +218,11 @@ void drm_err(const char *format, ...);
 		if (unlikely(drm_debug & DRM_UT_ATOMIC))		\
 			drm_ut_debug_printk(__func__, fmt, ##args);	\
 	} while (0)
+#define DRM_DEBUG_VBL(fmt, args...)					\
+	do {								\
+		if (unlikely(drm_debug & DRM_UT_VBL))			\
+			drm_ut_debug_printk(__func__, fmt, ##args);	\
+	} while (0)
 
 /*@}*/
 
@@ -426,12 +432,12 @@ struct drm_driver {
 	 * RETURNS
 	 * Raw vblank counter value.
 	 */
-	u32 (*get_vblank_counter) (struct drm_device *dev, int crtc);
+	u32 (*get_vblank_counter) (struct drm_device *dev, unsigned int pipe);
 
 	/**
 	 * enable_vblank - enable vblank interrupt events
 	 * @dev: DRM device
-	 * @crtc: which irq to enable
+	 * @pipe: which irq to enable
 	 *
 	 * Enable vblank interrupts for @crtc.  If the device doesn't have
 	 * a hardware vblank counter, this routine should be a no-op, since
@@ -441,18 +447,18 @@ struct drm_driver {
 	 * Zero on success, appropriate errno if the given @crtc's vblank
 	 * interrupt cannot be enabled.
 	 */
-	int (*enable_vblank) (struct drm_device *dev, int crtc);
+	int (*enable_vblank) (struct drm_device *dev, unsigned int pipe);
 
 	/**
 	 * disable_vblank - disable vblank interrupt events
 	 * @dev: DRM device
-	 * @crtc: which irq to enable
+	 * @pipe: which irq to enable
 	 *
 	 * Disable vblank interrupts for @crtc.  If the device doesn't have
 	 * a hardware vblank counter, this routine should be a no-op, since
 	 * interrupts will have to stay on to keep the count accurate.
 	 */
-	void (*disable_vblank) (struct drm_device *dev, int crtc);
+	void (*disable_vblank) (struct drm_device *dev, unsigned int pipe);
 
 	/**
 	 * Called by \c drm_device_is_agp.  Typically used to determine if a
-- 
2.9.3

