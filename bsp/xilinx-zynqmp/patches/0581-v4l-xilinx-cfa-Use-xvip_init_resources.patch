From d85c97c14d8f6ae9a299dd598d41c683719046a5 Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Thu, 27 Nov 2014 04:03:15 +0200
Subject: [PATCH 581/827] v4l: xilinx: cfa: Use xvip_init_resources()

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Replace the manual ioremap by a call to xvip_init_resources(), which
also handles the functional clock.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
(cherry picked from commit a23a69950ea014a8e153a3c33cadbdbb03d56fb1)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../devicetree/bindings/media/xilinx/xlnx,v-cfa.txt         |  4 +++-
 drivers/media/platform/xilinx/xilinx-cfa.c                  | 13 +++++++------
 2 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/Documentation/devicetree/bindings/media/xilinx/xlnx,v-cfa.txt b/Documentation/devicetree/bindings/media/xilinx/xlnx,v-cfa.txt
index 653bfca..dbe0626 100644
--- a/Documentation/devicetree/bindings/media/xilinx/xlnx,v-cfa.txt
+++ b/Documentation/devicetree/bindings/media/xilinx/xlnx,v-cfa.txt
@@ -7,6 +7,8 @@ Required properties:
 
 - reg: Physical base address and length of the registers set for the device.
 
+- clocks: Reference to the video core clock.
+
 - ports: Video ports, using the DT bindings defined in ../video-interfaces.txt.
   The cfa has an input port (0) and an output port (1).
 
@@ -22,7 +24,7 @@ Example:
 	axi_cfa_0: axi_cfa {
 		compatible = "xlnx,v-cfa-7.0";
 		reg = <0x400b0000 0x10000>;
-
+		clocks = <&clkc 15>;
 
 		ports {
 			#address-cells = <1>;
diff --git a/drivers/media/platform/xilinx/xilinx-cfa.c b/drivers/media/platform/xilinx/xilinx-cfa.c
index 89cadc8..3249b5a 100644
--- a/drivers/media/platform/xilinx/xilinx-cfa.c
+++ b/drivers/media/platform/xilinx/xilinx-cfa.c
@@ -285,7 +285,6 @@ static int xcfa_parse_of(struct xcfa_device *xcfa)
 static int xcfa_probe(struct platform_device *pdev)
 {
 	struct xcfa_device *xcfa;
-	struct resource *res;
 	struct v4l2_subdev *subdev;
 	struct v4l2_mbus_framefmt *default_format;
 	int ret;
@@ -300,10 +299,9 @@ static int xcfa_probe(struct platform_device *pdev)
 	if (ret < 0)
 		return ret;
 
-	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-	xcfa->xvip.iomem = devm_ioremap_resource(&pdev->dev, res);
-	if (IS_ERR(xcfa->xvip.iomem))
-		return PTR_ERR(xcfa->xvip.iomem);
+	ret = xvip_init_resources(&xcfa->xvip);
+	if (ret < 0)
+		return ret;
 
 	/* Reset and initialize the core */
 	xvip_reset(&xcfa->xvip);
@@ -337,7 +335,7 @@ static int xcfa_probe(struct platform_device *pdev)
 	subdev->entity.ops = &xcfa_media_ops;
 	ret = media_entity_init(&subdev->entity, 2, xcfa->pads, 0);
 	if (ret < 0)
-		return ret;
+		goto error;
 
 	platform_set_drvdata(pdev, xcfa);
 
@@ -353,6 +351,7 @@ static int xcfa_probe(struct platform_device *pdev)
 
 error:
 	media_entity_cleanup(&subdev->entity);
+	xvip_cleanup_resources(&xcfa->xvip);
 	return ret;
 }
 
@@ -364,6 +363,8 @@ static int xcfa_remove(struct platform_device *pdev)
 	v4l2_async_unregister_subdev(subdev);
 	media_entity_cleanup(&subdev->entity);
 
+	xvip_cleanup_resources(&xcfa->xvip);
+
 	return 0;
 }
 
-- 
2.9.3

