From edf899ff45477070c5af9b7d9d54f749a3e531d5 Mon Sep 17 00:00:00 2001
From: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Date: Wed, 13 Jul 2016 16:46:07 +0530
Subject: [PATCH 244/827] uio: apm: Add clock support

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Adding clock support to the APM module.

Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 8742615eaaf0f48ccc816c2b65fd95f71311d56c)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../devicetree/bindings/uio/xilinx_apm.txt         |  2 ++
 drivers/uio/uio_xilinx_apm.c                       | 26 +++++++++++++++++++---
 2 files changed, 25 insertions(+), 3 deletions(-)

diff --git a/Documentation/devicetree/bindings/uio/xilinx_apm.txt b/Documentation/devicetree/bindings/uio/xilinx_apm.txt
index 7d332bc..d8e302a 100644
--- a/Documentation/devicetree/bindings/uio/xilinx_apm.txt
+++ b/Documentation/devicetree/bindings/uio/xilinx_apm.txt
@@ -15,6 +15,7 @@ Required properties:
 - xlnx,metric-count-width: Metric Counter width (32/64)
 - xlnx,metrics-sample-count-width: Sampled metric counter width
 - xlnx,global-count-width: Global Clock counter width
+- clocks: Input clock specifier.
 
 Example:
 ++++++++
@@ -24,6 +25,7 @@ apm: apm@44a00000 {
     interrupt-parent = <&axi_intc_1>;
     interrupts = <1 2>;
     reg = <0x44a00000 0x1000>;
+    clocks = <&clkc 15>;
     xlnx,enable-profile = <0>;
     xlnx,enable-trace = <0>;
     xlnx,num-monitor-slots = <4>;
diff --git a/drivers/uio/uio_xilinx_apm.c b/drivers/uio/uio_xilinx_apm.c
index efbfc60..b60effc 100644
--- a/drivers/uio/uio_xilinx_apm.c
+++ b/drivers/uio/uio_xilinx_apm.c
@@ -23,6 +23,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
+#include <linux/clk.h>
 #include <linux/io.h>
 #include <linux/module.h>
 #include <linux/of.h>
@@ -51,6 +52,7 @@
  * @globalcntwidth: Global Clock counter width
  * @scalefactor: Scaling factor
  * @isr: Interrupts info shared to userspace
+ * @clk: Clock handle
  */
 struct xapm_param {
 	u32 mode;
@@ -65,6 +67,7 @@ struct xapm_param {
 	u32 scalefactor;
 	u32 isr;
 	bool is_32bit_filter;
+	struct clk *clk;
 };
 
 /**
@@ -218,13 +221,24 @@ static int xapm_probe(struct platform_device *pdev)
 		return -ENOMEM;
 	}
 
+	xapm->param.clk = devm_clk_get(&pdev->dev, NULL);
+	if (IS_ERR(xapm->param.clk)) {
+			dev_err(&pdev->dev, "axi clock error\n");
+			return PTR_ERR(xapm->param.clk);
+	}
+
+	ret = clk_prepare_enable(xapm->param.clk);
+	if (ret) {
+		dev_err(&pdev->dev, "Unable to enable clock.\n");
+		return ret;
+	}
 	/* Initialize mode as Advanced so that if no mode in dts, default
 	 * is Advanced
 	 */
 	xapm->param.mode = XAPM_MODE_ADVANCED;
 	ret = xapm_getprop(pdev, &xapm->param);
 	if (ret < 0)
-		return ret;
+		goto err_clk_dis;
 
 	xapm->info.mem[0].name = "xilinx_apm";
 	xapm->info.mem[0].addr = res->start;
@@ -243,7 +257,8 @@ static int xapm_probe(struct platform_device *pdev)
 	irq = platform_get_irq(pdev, 0);
 	if (irq < 0) {
 		dev_err(&pdev->dev, "unable to get irq\n");
-		return irq;
+		ret = irq;
+		goto err_clk_dis;
 	}
 
 	xapm->info.irq = irq;
@@ -255,7 +270,7 @@ static int xapm_probe(struct platform_device *pdev)
 	ret = uio_register_device(&pdev->dev, &xapm->info);
 	if (ret < 0) {
 		dev_err(&pdev->dev, "unable to register to UIO\n");
-		return ret;
+		goto err_clk_dis;
 	}
 
 	platform_set_drvdata(pdev, xapm);
@@ -263,6 +278,10 @@ static int xapm_probe(struct platform_device *pdev)
 	dev_info(&pdev->dev, "Probed Xilinx APM\n");
 
 	return 0;
+
+err_clk_dis:
+	clk_disable_unprepare(&xapm->param.clk);
+	return ret;
 }
 
 /**
@@ -276,6 +295,7 @@ static int xapm_remove(struct platform_device *pdev)
 	struct xapm_dev *xapm = platform_get_drvdata(pdev);
 
 	uio_unregister_device(&xapm->info);
+	clk_disable_unprepare(&xapm->param.clk);
 
 	return 0;
 }
-- 
2.9.3

