From d456e5b78f45d8ab810b92c21e573cc158e57ecb Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Mon, 23 Nov 2015 17:12:47 -0800
Subject: [PATCH 648/827] drm: xilinx: dp: Program the filter value

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Depending on the aclk frequency, the filter register should be programmed
accordingly. Per the DP spec, the AUX signal width should be between
0.4 and 0.6 usec.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit e9a28f0cfcaa5710c92487721502fef02d8bc3a6)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_dp.c | 20 ++++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_dp.c b/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
index 3c78c95..47b7c11 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
@@ -85,6 +85,7 @@
 #define XILINX_DP_TX_AUX_ADDRESS			0x108
 #define XILINX_DP_TX_CLK_DIVIDER			0x10c
 #define XILINX_DP_TX_CLK_DIVIDER_MHZ			1000000
+#define XILINX_DP_TX_CLK_DIVIDER_AUX_FILTER_SHIFT	8
 #define XILINX_DP_TX_INTR_SIGNAL_STATE			0x130
 #define XILINX_DP_TX_INTR_SIGNAL_STATE_HPD		(1 << 0)
 #define XILINX_DP_TX_INTR_SIGNAL_STATE_REQUEST		(1 << 1)
@@ -1070,6 +1071,7 @@ static int xilinx_drm_dp_encoder_init(struct platform_device *pdev,
 {
 	struct xilinx_drm_dp *dp = platform_get_drvdata(pdev);
 	int clock_rate;
+	u32 reg, w;
 
 	encoder->slave_priv = dp;
 	encoder->slave_funcs = &xilinx_drm_dp_encoder_funcs;
@@ -1083,8 +1085,22 @@ static int xilinx_drm_dp_encoder_init(struct platform_device *pdev,
 		return -EINVAL;
 	}
 
-	xilinx_drm_writel(dp->iomem, XILINX_DP_TX_CLK_DIVIDER,
-			  clock_rate / XILINX_DP_TX_CLK_DIVIDER_MHZ);
+	/* Allowable values for this register are: 8, 16, 24, 32, 40, 48 */
+	for (w = 8; w <= 48; w += 8) {
+		/* AUX pulse width should be between 0.4 to 0.6 usec */
+		if (w >= (4 * clock_rate / 10000000) &&
+		    w <= (6 * clock_rate / 10000000))
+			break;
+	}
+
+	if (w > 48) {
+		DRM_ERROR("aclk frequency too high\n");
+		return -EINVAL;
+	}
+	reg = w << XILINX_DP_TX_CLK_DIVIDER_AUX_FILTER_SHIFT;
+
+	reg |= clock_rate / XILINX_DP_TX_CLK_DIVIDER_MHZ;
+	xilinx_drm_writel(dp->iomem, XILINX_DP_TX_CLK_DIVIDER, reg);
 	xilinx_drm_clr(dp->iomem, XILINX_DP_TX_PHY_CONFIG,
 		       XILINX_DP_TX_PHY_CONFIG_ALL_RESET);
 
-- 
2.9.3

