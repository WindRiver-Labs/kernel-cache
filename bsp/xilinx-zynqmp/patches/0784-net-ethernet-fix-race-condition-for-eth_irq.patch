From 3005710fd206f783efa7b46328418daf2ea64cf6 Mon Sep 17 00:00:00 2001
From: Kedareswara rao Appana <appana.durga.rao@xilinx.com>
Date: Fri, 29 Apr 2016 15:34:21 +0530
Subject: [PATCH 784/827] net: ethernet: fix race condition for eth_irq

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

eth_irq is valid only for 1G Ethernet case.
For 10G MAC this interrupt won't be available.
Fix if condition checks around eth_irq for the same.

Signed-off-by: Kedareswara rao Appana <appanad@xilinx.com>
Acked-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 049400ee4a64588b3563d1b7d86467bbc8b4a016)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_axienet_main.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
index 5f8014d..7e695a4 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
@@ -1284,7 +1284,7 @@ static int axienet_open(struct net_device *ndev)
 	if (ret)
 		goto err_rx_irq;
 
-	if (!lp->eth_hasnobuf) {
+	if (!lp->eth_hasnobuf && !lp->is_10Gmac) {
 		/* Enable interrupts for Axi Ethernet */
 		ret = request_irq(lp->eth_irq, axienet_err_irq, 0, ndev->name,
 				  ndev);
@@ -1341,7 +1341,7 @@ static int axienet_stop(struct net_device *ndev)
 	free_irq(lp->tx_irq, ndev);
 	free_irq(lp->rx_irq, ndev);
 
-	if (!lp->eth_hasnobuf)
+	if (!lp->eth_hasnobuf && !lp->is_10Gmac)
 		free_irq(lp->eth_irq, ndev);
 
 	if (lp->phy_dev)
@@ -2098,7 +2098,7 @@ static int axienet_probe(struct platform_device *pdev)
 	lp->eth_hasnobuf = of_property_read_bool(pdev->dev.of_node,
 						 "xlnx,eth-hasnobuf");
 
-	if (!lp->eth_hasnobuf)
+	if (!lp->eth_hasnobuf && !lp->is_10Gmac)
 		lp->eth_irq = platform_get_irq(pdev, 0);
 
 #ifdef CONFIG_XILINX_AXI_EMAC_HWTSTAMP
-- 
2.9.3

