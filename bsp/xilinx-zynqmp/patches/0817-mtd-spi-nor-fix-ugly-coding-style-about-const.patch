From a3bf7cbb339d1e7be41090bb1942a964070900fd Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 28 Sep 2016 21:31:13 +0800
Subject: [PATCH 817/827] mtd: spi-nor: fix ugly coding style about const

drivers/mtd/spi-nor/spi-nor.c: In function 'spi_nor_scan':
drivers/mtd/spi-nor/spi-nor.c:1690:8: warning: assignment discards 'const' qualifier from pointer target type
   info = spi_nor_match_id(name);
        ^
drivers/mtd/spi-nor/spi-nor.c:1693:8: warning: assignment discards 'const' qualifier from pointer target type
   info = spi_nor_read_id(nor);
        ^
drivers/mtd/spi-nor/spi-nor.c:1717:9: warning: assignment discards 'const' qualifier from pointer target type
    info = jinfo;
         ^

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/mtd/spi-nor/spi-nor.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index e224b16..e174632 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -77,7 +77,7 @@ struct flash_info {
 
 #define JEDEC_MFR(info)	((info)->id[0])
 
-static const struct flash_info *spi_nor_match_id(const char *name);
+static struct flash_info *spi_nor_match_id(const char *name);
 
 /*
  * Read the status register, returning its value in the location
@@ -1223,11 +1223,11 @@ static const struct flash_info spi_nor_ids[] = {
 	{ },
 };
 
-static const struct flash_info *spi_nor_read_id(struct spi_nor *nor)
+static struct flash_info *spi_nor_read_id(struct spi_nor *nor)
 {
 	int			tmp;
 	u8			id[SPI_NOR_MAX_ID_LEN];
-	const struct flash_info	*info;
+	struct flash_info	*info;
 	nor->spi->master->flags &= ~SPI_BOTH_FLASH;
 
 	/* If more than one flash are present,need to read id of second flash */
@@ -1238,10 +1238,10 @@ static const struct flash_info *spi_nor_read_id(struct spi_nor *nor)
 	}
 
 	for (tmp = 0; tmp < ARRAY_SIZE(spi_nor_ids) - 1; tmp++) {
-		info = &spi_nor_ids[tmp];
+		info = (struct flash_info *)&spi_nor_ids[tmp];
 		if (info->id_len) {
 			if (!memcmp(info->id, id, info->id_len))
-				return &spi_nor_ids[tmp];
+				return info; 
 		}
 	}
 	dev_err(nor->dev, "unrecognized JEDEC id bytes: %02x, %2x, %2x\n",
@@ -1699,7 +1699,7 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 	 * detected using JEDEC, let's verify it.
 	 */
 	if (name && info->id_len) {
-		const struct flash_info *jinfo;
+		struct flash_info *jinfo;
 
 		jinfo = spi_nor_read_id(nor);
 		if (IS_ERR(jinfo)) {
@@ -1998,9 +1998,9 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 }
 EXPORT_SYMBOL_GPL(spi_nor_scan);
 
-static const struct flash_info *spi_nor_match_id(const char *name)
+static struct flash_info *spi_nor_match_id(const char *name)
 {
-	const struct flash_info *id = spi_nor_ids;
+	struct flash_info *id = (struct flash_info *)spi_nor_ids;
 
 	while (id->name) {
 		if (!strcmp(name, id->name))
-- 
2.9.3

