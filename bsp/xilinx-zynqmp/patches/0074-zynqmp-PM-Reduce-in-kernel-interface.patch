From 4cbd4f4743e0c1eff42ea864d9215fc9bdadfd80 Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Thu, 27 Aug 2015 14:41:06 -0700
Subject: [PATCH 074/827] zynqmp: PM: Reduce in-kernel interface

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Don't export certain functions that shouldn't be used by anything but
the debugfs interface.
 - Suspend is handled through PSCI
 - callbacks need a proper implementation for in-kernel users to receive
   callbaks through the API driver, if necessary

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit f03fa3364e2374c1aeba7ef265c49b4f410c833d)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/soc/xilinx/zynqmp/pm.c       | 17 ++++++-----------
 include/linux/soc/xilinx/zynqmp/pm.h |  8 --------
 2 files changed, 6 insertions(+), 19 deletions(-)

diff --git a/drivers/soc/xilinx/zynqmp/pm.c b/drivers/soc/xilinx/zynqmp/pm.c
index 0a61501..9b8c969 100644
--- a/drivers/soc/xilinx/zynqmp/pm.c
+++ b/drivers/soc/xilinx/zynqmp/pm.c
@@ -242,13 +242,12 @@ static int invoke_pm_fn(u32 pm_api_id, u32 arg0, u32 arg1, u32 arg2, u32 arg3,
  *
  * Return:	Returns status, either success or error+reason
  */
-int zynqmp_pm_self_suspend(const u32 node,
-				       const u32 latency,
-				       const u32 state)
+static int zynqmp_pm_self_suspend(const u32 node,
+				  const u32 latency,
+				  const u32 state)
 {
 	return invoke_pm_fn(SELF_SUSPEND, node, latency, state, 0, NULL);
 }
-EXPORT_SYMBOL_GPL(zynqmp_pm_self_suspend);
 
 /**
  * zynqmp_pm_request_suspend - PM call to request for another PU or subsystem to
@@ -292,11 +291,10 @@ EXPORT_SYMBOL_GPL(zynqmp_pm_force_powerdown);
  *
  * Return:	Returns status, either success or error+reason
  */
-int zynqmp_pm_abort_suspend(const enum zynqmp_pm_abort_reason reason)
+static int zynqmp_pm_abort_suspend(const enum zynqmp_pm_abort_reason reason)
 {
 	return invoke_pm_fn(ABORT_SUSPEND, reason, 0, 0, 0, NULL);
 }
-EXPORT_SYMBOL_GPL(zynqmp_pm_abort_suspend);
 
 /**
  * zynqmp_pm_request_wakeup - PM call for to wake up selected master or subsystem
@@ -488,15 +486,12 @@ EXPORT_SYMBOL_GPL(zynqmp_pm_get_operating_characteristic);
  *
  * Return:	Returns status, either success or error+reason
  */
-int zynqmp_pm_register_notifier(const u32 node,
-					    const u32 event,
-					    const u32 wake,
-					    const u32 enable)
+static int zynqmp_pm_register_notifier(const u32 node, const u32 event,
+				       const u32 wake, const u32 enable)
 {
 	return invoke_pm_fn(REGISTER_NOTIFIER, node, event,
 						wake, enable, NULL);
 }
-EXPORT_SYMBOL_GPL(zynqmp_pm_register_notifier);
 
 /* Direct-Control API functions */
 
diff --git a/include/linux/soc/xilinx/zynqmp/pm.h b/include/linux/soc/xilinx/zynqmp/pm.h
index 0df2ff0..41c3c1d 100644
--- a/include/linux/soc/xilinx/zynqmp/pm.h
+++ b/include/linux/soc/xilinx/zynqmp/pm.h
@@ -77,10 +77,6 @@ int zynqmp_pm_request_suspend(const u32 node,
 				      const enum zynqmp_pm_request_ack ack,
 				      const u32 latency,
 				      const u32 state);
-int zynqmp_pm_self_suspend(const u32 node,
-				const u32 latency,
-				const u32 state);
-int zynqmp_pm_abort_suspend(const enum zynqmp_pm_abort_reason reason);
 int zynqmp_pm_request_wakeup(const u32 node,
 				     const enum zynqmp_pm_request_ack ack);
 int zynqmp_pm_set_wakeup_source(const u32 target,
@@ -110,10 +106,6 @@ int zynqmp_pm_set_max_latency(const u32 node,
 int zynqmp_pm_get_api_version(u32 *version);
 int zynqmp_pm_set_configuration(const u32 physical_addr);
 int zynqmp_pm_get_node_status(const u32 node);
-int zynqmp_pm_register_notifier(const u32 node,
-					const u32 event,
-					const u32 wake,
-					const u32 enable);
 int zynqmp_pm_get_operating_characteristic(const u32 node,
 					const enum zynqmp_pm_opchar_type type);
 
-- 
2.9.3

