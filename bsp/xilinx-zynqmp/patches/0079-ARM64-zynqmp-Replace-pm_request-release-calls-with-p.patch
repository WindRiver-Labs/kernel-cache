From 682cd2db4a5c6533909b06276a18201e2065c4a0 Mon Sep 17 00:00:00 2001
From: Filip Drazic <filip.drazic@aggios.com>
Date: Wed, 3 Feb 2016 17:29:36 +0100
Subject: [PATCH 079/827] ARM64: zynqmp: Replace pm_request/release calls with pm_set_requirement

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Call zynqmp_pm_set_requirement instead of zynqmp_pm_request_node/
release_node to trigger power state change of a resource.

Signed-off-by: Filip Drazic <filip.drazic@aggios.com>
Acked-by: SÃ¶ren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 179ccf27cc945948e38106accd7fd7d8c8c2c349)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/soc/xilinx/zynqmp/pm_domains.c | 19 +++++++++----------
 1 file changed, 9 insertions(+), 10 deletions(-)

diff --git a/drivers/soc/xilinx/zynqmp/pm_domains.c b/drivers/soc/xilinx/zynqmp/pm_domains.c
index c225591..a34f51e 100644
--- a/drivers/soc/xilinx/zynqmp/pm_domains.c
+++ b/drivers/soc/xilinx/zynqmp/pm_domains.c
@@ -40,17 +40,16 @@ struct zynqmp_pm_domain {
 };
 
 /**
- * zynqmp_gpd_req_device - request/release device in PM domain
+ * zynqmp_gpd_set_power - power on/off PM domain
  * @domain:	Generic PM domain
  * @power_on:	Flag to specify whether to power on or off PM domain
  *
- * Depending on power_on flag, this functions calls zynqmp_pm_req/release_node
- * to inform PM firmware if it needs a resource (device inside PM domain).
+ * This functions calls zynqmp_pm_set_requirement to trigger power state change
+ * of a resource (device inside PM domain), depending on power_on flag.
  *
  * Return:	0 on success, error code otherwise.
  */
-static int zynqmp_gpd_req_device(struct generic_pm_domain *domain,
-				 bool power_on)
+static int zynqmp_gpd_set_power(struct generic_pm_domain *domain, bool power_on)
 {
 	int status;
 	struct zynqmp_pm_domain *pd;
@@ -63,10 +62,10 @@ static int zynqmp_gpd_req_device(struct generic_pm_domain *domain,
 	}
 
 	if (!power_on)
-		status = zynqmp_pm_release_node(pd->node_id,
-						ZYNQMP_PM_MAX_LATENCY);
+		status = zynqmp_pm_set_requirement(pd->node_id, 0, 0,
+						ZYNQMP_PM_REQUEST_ACK_NO);
 	else
-		status = zynqmp_pm_request_node(pd->node_id,
+		status = zynqmp_pm_set_requirement(pd->node_id,
 						ZYNQMP_PM_CAPABILITY_ACCESS,
 						ZYNQMP_PM_MAX_QOS,
 						ZYNQMP_PM_REQUEST_ACK_NO);
@@ -84,7 +83,7 @@ static int zynqmp_gpd_req_device(struct generic_pm_domain *domain,
  */
 static int zynqmp_gpd_power_on(struct generic_pm_domain *domain)
 {
-	return zynqmp_gpd_req_device(domain, true);
+	return zynqmp_gpd_set_power(domain, true);
 }
 
 /**
@@ -98,7 +97,7 @@ static int zynqmp_gpd_power_on(struct generic_pm_domain *domain)
  */
 static int zynqmp_gpd_power_off(struct generic_pm_domain *domain)
 {
-	return zynqmp_gpd_req_device(domain, false);
+	return zynqmp_gpd_set_power(domain, false);
 }
 
 /**
-- 
2.9.3

