From ef80a514092d78fb3543bf088d244c53b82dd904 Mon Sep 17 00:00:00 2001
From: Ranjit Waghmode <ranjit.waghmode@xilinx.com>
Date: Fri, 3 Jul 2015 12:15:18 +0530
Subject: [PATCH 249/827] spi: zynqmp: gqspi: add checks on clock API return codes

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

This patch does following:

- Adds checks on clock API return values inside

- Factors the clk_get_rate() out of the loop rather than repeatedly
  calling the clk API

Signed-off-by: Ranjit Waghmode <ranjit.waghmode@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 282083e0597b33c157f72ccdb2b88fc01df09816)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/spi/spi-zynqmp-gqspi.c | 20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/drivers/spi/spi-zynqmp-gqspi.c b/drivers/spi/spi-zynqmp-gqspi.c
index 3454a06..4029079 100644
--- a/drivers/spi/spi-zynqmp-gqspi.c
+++ b/drivers/spi/spi-zynqmp-gqspi.c
@@ -353,16 +353,25 @@ static void zynqmp_qspi_copy_read_data(struct zynqmp_qspi *xqspi,
  *
  * This function enables SPI master controller.
  *
- * Return:	Always 0
+ * Return:	0 on success; error value otherwise
  */
 static int zynqmp_prepare_transfer_hardware(struct spi_master *master)
 {
 	struct zynqmp_qspi *xqspi = spi_master_get_devdata(master);
+	int ret;
+
+	ret = clk_enable(xqspi->refclk);
+	if (ret)
+		goto clk_err;
+
+	ret = clk_enable(xqspi->pclk);
+	if (ret)
+		goto clk_err;
 
-	clk_enable(xqspi->refclk);
-	clk_enable(xqspi->pclk);
 	zynqmp_gqspi_write(xqspi, GQSPI_EN_OFST, GQSPI_EN_MASK);
 	return 0;
+clk_err:
+	return ret;
 }
 
 /**
@@ -466,6 +475,7 @@ static int zynqmp_qspi_setup_transfer(struct spi_device *qspi,
 				      struct spi_transfer *transfer)
 {
 	struct zynqmp_qspi *xqspi = spi_master_get_devdata(qspi->master);
+	ulong clk_rate;
 	u32 config_reg, req_hz, baud_rate_val = 0;
 
 	if (transfer)
@@ -475,8 +485,10 @@ static int zynqmp_qspi_setup_transfer(struct spi_device *qspi,
 
 	/* Set the clock frequency */
 	/* If req_hz == 0, default to lowest speed */
+	clk_rate = clk_get_rate(xqspi->refclk);
+
 	while ((baud_rate_val < GQSPI_BAUD_DIV_MAX) &&
-	       (clk_get_rate(xqspi->refclk) /
+	       (clk_rate /
 		(GQSPI_BAUD_DIV_SHIFT << baud_rate_val)) > req_hz)
 		baud_rate_val++;
 
-- 
2.9.3

