From 315d4ce046b53a6803b38808d86b025272a57220 Mon Sep 17 00:00:00 2001
From: Subbaraya Sundeep Bhatta <subbaraya.sundeep.bhatta@xilinx.com>
Date: Wed, 27 Jan 2016 19:58:41 +0530
Subject: [PATCH 302/827] usb: dwc3: update GFLADJ_REFCLK_FLADJ in dwc3_frame_length_adjustment

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Modified dwc3_frame_length_adjustment function to update
GFLADJ_REFCLK_FLADJ field as per dts

Signed-off-by: Subbaraya Sundeep Bhatta <sbhatta@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit ca57f87d55039d2a5f6067bb33ec91d3e0d828c7)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/usb/dwc3/core.c          | 21 ++++++++++++++++++---
 drivers/usb/dwc3/core.h          |  1 +
 drivers/usb/dwc3/platform_data.h |  1 +
 3 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index 22b47973..b85f125 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -147,9 +147,11 @@ static int dwc3_soft_reset(struct dwc3 *dwc)
 /*
  * dwc3_frame_length_adjustment - Adjusts frame length if required
  * @dwc3: Pointer to our controller context structure
- * @fladj: Value of GFLADJ_30MHZ to adjust frame length
+ * @fladj: Value of GFLADJ_30MHZ and GFLADJ_REFCLK_FLADJ to adjust frame length
+ * @refclk_fladj: Boolean to update GFLADJ_REFCLK_FLADJ field also
  */
-static void dwc3_frame_length_adjustment(struct dwc3 *dwc, u32 fladj)
+static void dwc3_frame_length_adjustment(struct dwc3 *dwc, u32 fladj,
+					bool refclk_fladj)
 {
 	u32 reg;
 	u32 dft;
@@ -161,6 +163,16 @@ static void dwc3_frame_length_adjustment(struct dwc3 *dwc, u32 fladj)
 		return;
 
 	reg = dwc3_readl(dwc->regs, DWC3_GFLADJ);
+
+	if (refclk_fladj) {
+		if (!dev_WARN_ONCE(dwc->dev, (reg & DWC3_GFLADJ_REFCLK_FLADJ ==
+		    fladj & DWC3_GFLADJ_REFCLK_FLADJ),
+		    "refclk fladj request value same as default, ignoring\n")) {
+			reg &= ~DWC3_GFLADJ_REFCLK_FLADJ;
+			reg |= (fladj & DWC3_GFLADJ_REFCLK_FLADJ);
+		}
+	}
+
 	dft = reg & DWC3_GFLADJ_30MHZ_MASK;
 	if (!dev_WARN_ONCE(dwc->dev, dft == fladj,
 	    "request value same as default, ignoring\n")) {
@@ -815,6 +827,7 @@ static int dwc3_probe(struct platform_device *pdev)
 	u8			tx_de_emphasis;
 	u8			hird_threshold;
 	u32			fladj = 0;
+	bool                    refclk_fladj = false;
 
 	int			ret;
 
@@ -926,6 +939,7 @@ static int dwc3_probe(struct platform_device *pdev)
 				    &dwc->hsphy_interface);
 	device_property_read_u32(dev, "snps,quirk-frame-length-adjustment",
 				 &fladj);
+	refclk_fladj = device_property_read_bool(dev, "snps,refclk_fladj");
 
 	if (pdata) {
 		dwc->maximum_speed = pdata->maximum_speed;
@@ -958,6 +972,7 @@ static int dwc3_probe(struct platform_device *pdev)
 
 		dwc->hsphy_interface = pdata->hsphy_interface;
 		fladj = pdata->fladj_value;
+		refclk_fladj = pdata->refclk_fladj;
 	}
 
 	/* default to superspeed if no maximum_speed passed */
@@ -1015,7 +1030,7 @@ static int dwc3_probe(struct platform_device *pdev)
 	}
 
 	/* Adjust Frame Length */
-	dwc3_frame_length_adjustment(dwc, fladj);
+	dwc3_frame_length_adjustment(dwc, fladj, refclk_fladj);
 
 	usb_phy_set_suspend(dwc->usb2_phy, 0);
 	usb_phy_set_suspend(dwc->usb3_phy, 0);
diff --git a/drivers/usb/dwc3/core.h b/drivers/usb/dwc3/core.h
index 78be201..50e5df1 100644
--- a/drivers/usb/dwc3/core.h
+++ b/drivers/usb/dwc3/core.h
@@ -242,6 +242,7 @@
 /* Global Frame Length Adjustment Register */
 #define DWC3_GFLADJ_30MHZ_SDBND_SEL		(1 << 7)
 #define DWC3_GFLADJ_30MHZ_MASK			0x3f
+#define DWC3_GFLADJ_REFCLK_FLADJ		(0x3fff << 8)
 
 /* Device Configuration Register */
 #define DWC3_DCFG_DEVADDR(addr)	((addr) << 3)
diff --git a/drivers/usb/dwc3/platform_data.h b/drivers/usb/dwc3/platform_data.h
index 2bb4d3a..118ccbc 100644
--- a/drivers/usb/dwc3/platform_data.h
+++ b/drivers/usb/dwc3/platform_data.h
@@ -48,6 +48,7 @@ struct dwc3_platform_data {
 	unsigned tx_de_emphasis:2;
 
 	u32 fladj_value;
+	bool refclk_fladj;
 
 	const char *hsphy_interface;
 };
-- 
2.9.3

