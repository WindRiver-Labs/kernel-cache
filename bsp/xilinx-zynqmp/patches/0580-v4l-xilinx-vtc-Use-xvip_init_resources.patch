From ff2e73b2420f22c16af31014e1e1d8cb0d9f9837 Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Thu, 27 Nov 2014 04:03:15 +0200
Subject: [PATCH 580/827] v4l: xilinx: vtc: Use xvip_init_resources()

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Replace the manual ioremap by a call to xvip_init_resources(), which
also handles the functional clock.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
(cherry picked from commit a10bd6de2c5dcdd31098937baecbcef3231ed219)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-vtc.c | 20 +++++++-------------
 1 file changed, 7 insertions(+), 13 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-vtc.c b/drivers/media/platform/xilinx/xilinx-vtc.c
index cae4b8f..a5f6199 100644
--- a/drivers/media/platform/xilinx/xilinx-vtc.c
+++ b/drivers/media/platform/xilinx/xilinx-vtc.c
@@ -146,7 +146,6 @@
  * struct xvtc_device - Xilinx Video Timing Controller device structure
  * @xvip: Xilinx Video IP device
  * @list: entry in the global VTC list
- * @clk: video clock
  * @has_detector: the VTC has a timing detector
  * @has_generator: the VTC has a timing generator
  * @config: generator timings configuration
@@ -154,7 +153,6 @@
 struct xvtc_device {
 	struct xvip_device xvip;
 	struct list_head list;
-	struct clk *clk;
 
 	bool has_detector;
 	bool has_generator;
@@ -182,7 +180,7 @@ int xvtc_generator_start(struct xvtc_device *xvtc,
 	if (!xvtc->has_generator)
 		return -ENXIO;
 
-	ret = clk_prepare_enable(xvtc->clk);
+	ret = clk_prepare_enable(xvtc->xvip.clk);
 	if (ret < 0)
 		return ret;
 
@@ -245,7 +243,7 @@ int xvtc_generator_stop(struct xvtc_device *xvtc)
 
 	xvip_write(&xvtc->xvip, XVIP_CTRL_CONTROL, 0);
 
-	clk_disable_unprepare(xvtc->clk);
+	clk_disable_unprepare(xvtc->xvip.clk);
 
 	return 0;
 }
@@ -322,7 +320,6 @@ static int xvtc_parse_of(struct xvtc_device *xvtc)
 static int xvtc_probe(struct platform_device *pdev)
 {
 	struct xvtc_device *xvtc;
-	struct resource *res;
 	int ret;
 
 	xvtc = devm_kzalloc(&pdev->dev, sizeof(*xvtc), GFP_KERNEL);
@@ -335,14 +332,9 @@ static int xvtc_probe(struct platform_device *pdev)
 	if (ret < 0)
 		return ret;
 
-	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-	xvtc->xvip.iomem = devm_ioremap_resource(&pdev->dev, res);
-	if (IS_ERR(xvtc->xvip.iomem))
-		return PTR_ERR(xvtc->xvip.iomem);
-
-	xvtc->clk = devm_clk_get(&pdev->dev, NULL);
-	if (IS_ERR(xvtc->clk))
-		return PTR_ERR(xvtc->clk);
+	ret = xvip_init_resources(&xvtc->xvip);
+	if (ret < 0)
+		return ret;
 
 	platform_set_drvdata(pdev, xvtc);
 
@@ -359,6 +351,8 @@ static int xvtc_remove(struct platform_device *pdev)
 
 	xvtc_unregister_device(xvtc);
 
+	xvip_cleanup_resources(&xvtc->xvip);
+
 	return 0;
 }
 
-- 
2.9.3

