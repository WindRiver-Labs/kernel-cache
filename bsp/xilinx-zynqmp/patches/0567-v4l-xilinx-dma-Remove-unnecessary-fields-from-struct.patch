From 9294a726a27c74f3a8a05516aaf06d5adad8edaa Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Sat, 1 Nov 2014 15:24:56 +0200
Subject: [PATCH 567/827] v4l: xilinx: dma: Remove unnecessary fields from struct xvip_dma_buffer

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

The addr, length and bytesused fields are either unused, or used to
store information that can as easily be retrieved through other means.
Remove them.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
(cherry picked from commit f5a2de68bc6ccfb790dd580ca0e95642092036eb)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-dma.c | 18 ++++--------------
 1 file changed, 4 insertions(+), 14 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-dma.c b/drivers/media/platform/xilinx/xilinx-dma.c
index 0b3a093..a81cdbe 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-dma.c
@@ -314,19 +314,11 @@ done:
  * @buf: vb2 buffer base object
  * @queue: buffer list entry in the DMA engine queued buffers list
  * @dma: DMA channel that uses the buffer
- * @addr: DMA bus address for the buffer memory
- * @length: total length of the buffer in bytes
- * @bytesused: number of bytes used in the buffer
  */
 struct xvip_dma_buffer {
 	struct vb2_buffer buf;
 	struct list_head queue;
-
 	struct xvip_dma *dma;
-
-	dma_addr_t addr;
-	unsigned int length;
-	unsigned int bytesused;
 };
 
 #define to_xvip_dma_buffer(vb)	container_of(vb, struct xvip_dma_buffer, buf)
@@ -342,7 +334,7 @@ static void xvip_dma_complete(void *param)
 
 	buf->buf.v4l2_buf.sequence = dma->sequence++;
 	v4l2_get_timestamp(&buf->buf.v4l2_buf.timestamp);
-	vb2_set_plane_payload(&buf->buf, 0, buf->length);
+	vb2_set_plane_payload(&buf->buf, 0, dma->format.sizeimage);
 	vb2_buffer_done(&buf->buf, VB2_BUF_STATE_DONE);
 }
 
@@ -367,9 +359,6 @@ static int xvip_dma_buffer_prepare(struct vb2_buffer *vb)
 	struct xvip_dma_buffer *buf = to_xvip_dma_buffer(vb);
 
 	buf->dma = dma;
-	buf->addr = vb2_dma_contig_plane_dma_addr(vb, 0);
-	buf->length = vb2_plane_size(vb, 0);
-	buf->bytesused = 0;
 
 	return 0;
 }
@@ -379,6 +368,7 @@ static void xvip_dma_buffer_queue(struct vb2_buffer *vb)
 	struct xvip_dma *dma = vb2_get_drv_priv(vb->vb2_queue);
 	struct xvip_dma_buffer *buf = to_xvip_dma_buffer(vb);
 	struct dma_async_tx_descriptor *desc;
+	dma_addr_t addr = vb2_dma_contig_plane_dma_addr(vb, 0);
 	u32 flags;
 
 	if (dma->queue.type == V4L2_BUF_TYPE_VIDEO_CAPTURE) {
@@ -386,13 +376,13 @@ static void xvip_dma_buffer_queue(struct vb2_buffer *vb)
 		dma->xt.dir = DMA_DEV_TO_MEM;
 		dma->xt.src_sgl = false;
 		dma->xt.dst_sgl = true;
-		dma->xt.dst_start = buf->addr;
+		dma->xt.dst_start = addr;
 	} else {
 		flags = DMA_PREP_INTERRUPT | DMA_CTRL_ACK;
 		dma->xt.dir = DMA_MEM_TO_DEV;
 		dma->xt.src_sgl = true;
 		dma->xt.dst_sgl = false;
-		dma->xt.src_start = buf->addr;
+		dma->xt.src_start = addr;
 	}
 
 	dma->xt.frame_size = 1;
-- 
2.9.3

