From 9f0b871631b1ce97c4bd8952490e4a842fee5e14 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Mon, 5 May 2014 19:52:29 -0700
Subject: [PATCH 437/827] drm: xilinx: encoder: Remove dependency on adv7511

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

The previous adv7511 patch moves the dependency code to inside the adv7511
driver. This makes the xilinx encoder more generic to have other encoders.
Do not call encoder_sfuncs->set_config() when a mode is set, as the adv7511
driver handles it internally.

Signed-off-by: Hyun Kwon <hyunk@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 4d0f5ef143ed000d7353e1ad5040fba75e23f870)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/xilinx/Kconfig              |  1 -
 drivers/gpu/drm/xilinx/xilinx_drm_encoder.c | 67 -----------------------------
 2 files changed, 68 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/Kconfig b/drivers/gpu/drm/xilinx/Kconfig
index f30926e..58e7a08 100644
--- a/drivers/gpu/drm/xilinx/Kconfig
+++ b/drivers/gpu/drm/xilinx/Kconfig
@@ -4,7 +4,6 @@ config DRM_XILINX
 	select DRM_KMS_HELPER
 	select DRM_KMS_CMA_HELPER
 	select DRM_GEM_CMA_HELPER
-	select DRM_ENCODER_ADV7511
 	select XILINX_AXIVDMA
 	help
 	  DRM display driver for Xilinx IP based pipelines.
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_encoder.c b/drivers/gpu/drm/xilinx/xilinx_drm_encoder.c
index 2b7988e..fbb9173 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_encoder.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_encoder.c
@@ -19,9 +19,7 @@
 #include <drm/drm_crtc.h>
 #include <drm/drm_crtc_helper.h>
 #include <drm/drm_encoder_slave.h>
-#include <drm/i2c/adv7511.h>
 
-#include <linux/hdmi.h>
 #include <linux/err.h>
 #include <linux/i2c.h>
 #include <linux/of.h>
@@ -33,20 +31,12 @@
 struct xilinx_drm_encoder {
 	struct drm_encoder_slave slave;
 	struct i2c_client *i2c_slave;
-	bool rgb;
 	int dpms;
 };
 
 #define to_xilinx_encoder(x)	\
 	container_of(x, struct xilinx_drm_encoder, slave)
 
-/* coefficients for adv7511 color space conversion */
-static const uint16_t adv7511_csc_ycbcr_to_rgb[] = {
-	0x0734, 0x04ad, 0x0000, 0x1c1b,
-	0x1ddc, 0x04ad, 0x1f24, 0x0135,
-	0x0000, 0x04ad, 0x087c, 0x1b77,
-};
-
 /* set encoder dpms */
 static void xilinx_drm_encoder_dpms(struct drm_encoder *base_encoder, int dpms)
 {
@@ -92,14 +82,8 @@ static void xilinx_drm_encoder_mode_set(struct drm_encoder *base_encoder,
 					struct drm_display_mode *mode,
 					struct drm_display_mode *adjusted_mode)
 {
-	struct xilinx_drm_encoder *encoder;
-	struct drm_device *dev = base_encoder->dev;
 	struct drm_encoder_slave *encoder_slave;
 	struct drm_encoder_slave_funcs *encoder_sfuncs;
-	struct drm_connector *iter;
-	struct drm_connector *connector = NULL;
-	struct adv7511_video_config config;
-	struct edid *edid;
 
 	DRM_DEBUG_KMS("h: %d, v: %d\n",
 		      adjusted_mode->hdisplay, adjusted_mode->vdisplay);
@@ -107,56 +91,7 @@ static void xilinx_drm_encoder_mode_set(struct drm_encoder *base_encoder,
 		      adjusted_mode->vrefresh, adjusted_mode->clock);
 
 	encoder_slave = to_encoder_slave(base_encoder);
-	encoder = to_xilinx_encoder(encoder_slave);
-
-	/* search for a connector for this encoder.
-	 * assume there's only one connector for this encoder
-	 */
-	list_for_each_entry(iter, &dev->mode_config.connector_list, head) {
-		if (iter->encoder == base_encoder) {
-			connector = iter;
-			break;
-		}
-	}
-	if (!connector) {
-		DRM_ERROR("failed to find a connector\n");
-		return;
-	}
-
-	edid = adv7511_get_edid(base_encoder);
-	if (edid) {
-		config.hdmi_mode = drm_detect_hdmi_monitor(edid);
-		kfree(edid);
-	} else
-		config.hdmi_mode = false;
-
-	hdmi_avi_infoframe_init(&config.avi_infoframe);
-
-	config.avi_infoframe.scan_mode = HDMI_SCAN_MODE_UNDERSCAN;
-
-	if (encoder->rgb) {
-		config.csc_enable = false;
-		config.avi_infoframe.colorspace = HDMI_COLORSPACE_RGB;
-	} else {
-		config.csc_scaling_factor = ADV7511_CSC_SCALING_4;
-		config.csc_coefficents = adv7511_csc_ycbcr_to_rgb;
-
-		if ((connector->display_info.color_formats &
-		     DRM_COLOR_FORMAT_YCRCB422) &&
-		    config.hdmi_mode) {
-			config.csc_enable = false;
-			config.avi_infoframe.colorspace =
-				HDMI_COLORSPACE_YUV422;
-		} else {
-			config.csc_enable = true;
-			config.avi_infoframe.colorspace = HDMI_COLORSPACE_RGB;
-		}
-	}
-
 	encoder_sfuncs = encoder_slave->slave_funcs;
-	if (encoder_sfuncs->set_config)
-		encoder_sfuncs->set_config(base_encoder, &config);
-
 	if (encoder_sfuncs->mode_set)
 		encoder_sfuncs->mode_set(base_encoder, mode, adjusted_mode);
 }
@@ -261,8 +196,6 @@ struct drm_encoder *xilinx_drm_encoder_create(struct drm_device *drm)
 		goto err_out;
 	}
 
-	encoder->rgb = of_property_read_bool(drm->dev->of_node, "adi,is-rgb");
-
 	/* initialize encoder */
 	encoder->slave.base.possible_crtcs = 1;
 	ret = drm_encoder_init(drm, &encoder->slave.base,
-- 
2.9.3

