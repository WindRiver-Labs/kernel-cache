From 50a6ec9b840a09a750b5583e80d598768c36aa5f Mon Sep 17 00:00:00 2001
From: Michael Gill <michael.gill@xilinx.com>
Date: Fri, 8 Apr 2016 14:11:52 -0700
Subject: [PATCH 100/188] staging: apf: Making regular use of constant for DMA
 structure sizes

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Originally a constant was defined to specify sizes of structures
that track DMA state.  This constant was not used, and instead
a literal integer was used when interacting with these structures as
a bound.  This patch makes proper use of the defined constant, and
abandons the literal.

Signed-off-by: Michael Gill <gill@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 9b663ba03481c4e983895b36bdd8b35f97b04a50)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/staging/apf/xlnk.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/apf/xlnk.c b/drivers/staging/apf/xlnk.c
index 5b58793..ebec9af 100644
--- a/drivers/staging/apf/xlnk.c
+++ b/drivers/staging/apf/xlnk.c
@@ -136,12 +136,12 @@ struct xlnk_device_pack {
 
 };
 
-static struct xlnk_device_pack *xlnk_devpacks[16];
+static struct xlnk_device_pack *xlnk_devpacks[MAX_XLNK_DMAS];
 static void xlnk_devpacks_init(void)
 {
 	unsigned int i;
 
-	for (i = 0; i < 16; i++)
+	for (i = 0; i < MAX_XLNK_DMAS; i++)
 		xlnk_devpacks[0] = NULL;
 
 }
@@ -150,7 +150,7 @@ static void xlnk_devpacks_delete(struct xlnk_device_pack *devpack)
 {
 	unsigned int i;
 
-	for (i = 0; i < 16; i++) {
+	for (i = 0; i < MAX_XLNK_DMAS; i++) {
 		if (xlnk_devpacks[i] == devpack)
 			xlnk_devpacks[i] = NULL;
 	}
@@ -160,7 +160,7 @@ static void xlnk_devpacks_add(struct xlnk_device_pack *devpack)
 {
 	unsigned int i;
 
-	for (i = 0; i < 16; i++) {
+	for (i = 0; i < MAX_XLNK_DMAS; i++) {
 		if (xlnk_devpacks[i] == NULL) {
 			xlnk_devpacks[i] = devpack;
 			break;
@@ -172,7 +172,7 @@ static struct xlnk_device_pack *xlnk_devpacks_find(unsigned long base)
 {
 	unsigned int i;
 
-	for (i = 0; i < 16; i++) {
+	for (i = 0; i < MAX_XLNK_DMAS; i++) {
 		if (xlnk_devpacks[i]
 			&& xlnk_devpacks[i]->res[0].start == base)
 			return xlnk_devpacks[i];
@@ -197,7 +197,7 @@ static void xlnk_devpacks_free_all(void)
 	struct xlnk_device_pack *devpack;
 	unsigned int i;
 
-	for (i = 0; i < 16; i++) {
+	for (i = 0; i < MAX_XLNK_DMAS; i++) {
 		devpack = xlnk_devpacks[i];
 		if (devpack) {
 			platform_device_unregister(&devpack->pdev);
-- 
2.0.2

