From ade4c85ca4c53201e55cc17b045a3f2fb09be3f9 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Sat, 18 Feb 2012 19:38:58 +0800
Subject: [PATCH 13/16] kbc_km2m806: Invert x value for accelerometer

Source: SDK 1.6 for Kontron M2M Smart Services Developer Kit

Signed-off-by: Gennady Kuznetsov <kuznetsovg@dev.rtsoft.ru>
Integrated-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/staging/iio/accel/lis331dlh_core.c |    5 +++--
 drivers/staging/iio/accel/lis331dlh_ring.c |   11 +++++++++++
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/iio/accel/lis331dlh_core.c b/drivers/staging/iio/accel/lis331dlh_core.c
index 6fd107c..4b5a809 100644
--- a/drivers/staging/iio/accel/lis331dlh_core.c
+++ b/drivers/staging/iio/accel/lis331dlh_core.c
@@ -233,7 +233,7 @@ static ssize_t lis331dlh_read_accel_xyz(struct lis331dlh_state *st,
 	}
 	return sprintf(buf, "0x%02x %d %d %d 0x%02x\n", /* "STATUS OUT_X OUT_Y OUT_Z NEW_STATUS" */
 		       data[0],
-		       (s16)(data[1]) | (s16)(data[2] << 8),
+		       -((s16)(data[1]) | (s16)(data[2] << 8)),
 		       (s16)(data[3]) | (s16)(data[4] << 8),
 		       (s16)(data[5]) | (s16)(data[6] << 8),
 		       (unsigned char)ret);
@@ -254,7 +254,8 @@ static ssize_t lis331dlh_read_accel_one(struct lis331dlh_state *st,
 		return ret;
 	}
 
-	return sprintf(buf, "%d\n", (s16)ret);
+	return sprintf(buf, "%d\n",
+		(addr == LIS331LDH_OUT_X_L_REG) ? (-(s16)ret) : (s16)ret);
 }
 
 /* This (cat /sys/class/iio/device0/accel_*) doesn't work in
diff --git a/drivers/staging/iio/accel/lis331dlh_ring.c b/drivers/staging/iio/accel/lis331dlh_ring.c
index a7ebd89..705b2d8 100644
--- a/drivers/staging/iio/accel/lis331dlh_ring.c
+++ b/drivers/staging/iio/accel/lis331dlh_ring.c
@@ -59,6 +59,15 @@ static int lis331dlh_data_rdy_trig_poll(struct iio_dev *dev_info,
 /* This is an event as it is a response to a physical interrupt */
 IIO_EVENT_SH(data_rdy_trig, &lis331dlh_data_rdy_trig_poll);
 
+static void lis331dlh_invert16(u8 *pd)
+{
+	__s16 x;
+
+	x = -((__s16)(pd[0]) | (__s16)(pd[1] << 8));
+	pd[0] = (u8)(x & 0xff);
+	pd[1] = (u8)((x >> 8) & 0xff);
+}
+
 static void lis331dlh_trigger_bh_to_ring(struct work_struct *work_s)
 {
 	struct lis331dlh_state *st;
@@ -79,6 +88,8 @@ static void lis331dlh_trigger_bh_to_ring(struct work_struct *work_s)
 			ret);
 		return;
 	}
+	/* invert the X reading: */
+	lis331dlh_invert16(&d.data[1]);
 	st->indio_dev->ring->access.store_to(st->indio_dev->ring,
 					     (u8 *)(&d),
 					     st->last_timestamp);
-- 
1.7.0

