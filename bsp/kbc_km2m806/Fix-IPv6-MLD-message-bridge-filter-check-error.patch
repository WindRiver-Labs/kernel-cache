From 1fc8188c4a27adec76dc6ff1d2372db6b444a88c Mon Sep 17 00:00:00 2001
From: Feng Mu <Feng.Mu@windriver.com>
Date: Fri, 3 Aug 2012 16:42:05 +0800
Subject: [PATCH] Fix IPv6 MLD message bridge filter check error.

Try to pull sk_buff again before hop by hop header length check in order
to provide enough data for header check.

Signed-off-by: Feng Mu <Feng.Mu@windriver.com>
---
 net/bridge/br_netfilter.c |   14 ++++++++++++--
 1 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/net/bridge/br_netfilter.c b/net/bridge/br_netfilter.c
index 641d662..a651034 100644
--- a/net/bridge/br_netfilter.c
+++ b/net/bridge/br_netfilter.c
@@ -442,15 +442,25 @@ static struct net_device *setup_pre_routing(struct sk_buff *skb)
 }
 
 /* We only check the length. A bridge shouldn't do any hop-by-hop stuff anyway */
+#define HBH_HEADER_LEN 48
 static int check_hbh_len(struct sk_buff *skb)
 {
 	unsigned char *raw = (u8 *)(ipv6_hdr(skb) + 1);
 	u32 pkt_len;
 	const unsigned char *nh = skb_network_header(skb);
 	int off = raw - nh;
-	int len = (raw[1] + 1) << 3;
+	int len, hbh_len;
 
-	if ((raw + len) - skb->data > skb_headlen(skb))
+	if (!pskb_may_pull(skb, HBH_HEADER_LEN))
+		goto bad;
+
+	len = (raw[1] + 1) << 3;
+	hbh_len = (raw + len) - skb->data;
+
+	if (hbh_len > HBH_HEADER_LEN && !pskb_may_pull(skb, hbh_len))
+		goto bad;
+
+	if (hbh_len > skb_headlen(skb))
 		goto bad;
 
 	off += 2;
-- 
1.7.0.5

