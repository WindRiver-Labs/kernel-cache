From 0c6d6bb21567561abdef5776b1bc779816093745 Mon Sep 17 00:00:00 2001
From: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Date: Fri, 22 Oct 2010 14:27:27 -0700
Subject: [PATCH 210/761] Bug fix for initiailing MMU_SETUP

Based on Broadcom SDK 2.3.

Signed-off-by: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/cpu_control.c     |   21 ---------------------
 arch/mips/netlogic/xlp/cpu_control_asm.S |   12 ------------
 arch/mips/netlogic/xlp/smp.c             |   24 ++++++++++++++++++++++++
 3 files changed, 24 insertions(+), 33 deletions(-)

diff --git a/arch/mips/netlogic/xlp/cpu_control.c b/arch/mips/netlogic/xlp/cpu_control.c
index 74f33b7..c855a08 100644
--- a/arch/mips/netlogic/xlp/cpu_control.c
+++ b/arch/mips/netlogic/xlp/cpu_control.c
@@ -89,25 +89,6 @@ static inline void config_lsu(void)
 	);
 }
 
-/* Setup MMU */
-static inline void setup_mmu(void)
-{
-	uint32_t tmp0;
-
-	/*
-	 * Dummy write for A0 bug in MMU
-	 */
-	__asm__ __volatile__ (
-		".set push\n"
-		".set noreorder\n"
-		"li      %0, "STR(MMU_SETUP)"\n"
-		"mtcr    $0, %0\n"
-		"ehb\n"
-		".set pop\n"
-		: "=r" (tmp0)
-	);
-}
-
 static void enable_cores(unsigned int node, unsigned int cores_bitmap)
 {
 	uint32_t core, value;
@@ -164,8 +145,6 @@ void enable_cpus(unsigned int node, unsigned int node_cpumask)
 
 		config_lsu();
 
-		setup_mmu();
-
 		/* Linux runs out of KSEG2. Setup TLBs
 		 * for other threads, by running from
 		 * KSEG0. Then, jump back into KSEG2.
diff --git a/arch/mips/netlogic/xlp/cpu_control_asm.S b/arch/mips/netlogic/xlp/cpu_control_asm.S
index bbeab31..6385c8f 100644
--- a/arch/mips/netlogic/xlp/cpu_control_asm.S
+++ b/arch/mips/netlogic/xlp/cpu_control_asm.S
@@ -77,15 +77,6 @@
 	.set pop
 .endm
 
-.macro __setup_mmu
-	/*
-	 * Dummy write for A0 bug in MMU
-	 */
-	li      t0, MMU_SETUP
-	mtcr    zero, t0
-	ehb
-.endm
-
 	/* T0 of Non-0 Cores jump
 	 * here, from enable_cores
 	 * This code sits in KSEG0
@@ -116,9 +107,6 @@ EXPORT(reset_entry)
 	/* Configure LSU on Non-0 Cores. */
 	__config_lsu
 
-	/* Setup MMU on Non-0 Cores. */
-	__setup_mmu
-
 	dla     t1, boot_siblings_start
 	dla     t2, __boot_siblings
 	subu	t2, t2, t1		/* t2 now has the jump offset */
diff --git a/arch/mips/netlogic/xlp/smp.c b/arch/mips/netlogic/xlp/smp.c
index e15e2c0..cd045cd 100644
--- a/arch/mips/netlogic/xlp/smp.c
+++ b/arch/mips/netlogic/xlp/smp.c
@@ -185,6 +185,25 @@ extern int xen_enable_cpus(int node, uint32_t onlinemask);
 #define hw_enable_cpus enable_cpus
 #endif
 
+/* Config MMU */
+static inline void config_mmu(void)
+{
+	uint32_t tmp0;
+
+	/*
+	 * Dummy write for A0 bug in MMU
+	 */
+	__asm__ __volatile__ (
+		".set push\n"
+		".set noreorder\n"
+		"li      %0, "STR(MMU_SETUP)"\n"
+		"mtcr    $0, %0\n"
+		"ehb\n"
+		".set pop\n"
+		: "=r" (tmp0)
+	);
+}
+
 int wakeup_secondary_cpus(void)
 {
 	cpumask_t mask32;
@@ -212,6 +231,9 @@ int wakeup_secondary_cpus(void)
 		printk("Enabled cpus (0x%08x) on node@%d\n", onlinemask, node);
 	}
 
+	/* only n0c0t0 initializes MMU */
+	config_mmu();
+
 	return 0;
 }
 
@@ -247,6 +269,8 @@ void prom_boot_cpus_secondary(void *args)
 
 	prom_reconfigure_thr_resources();
 
+	if (netlogic_thr_id() == 0) config_mmu();
+
         setup_mapped_kernel_tlbs(TRUE, FALSE);
         setup_mapped_kernel_tlbs(FALSE, FALSE);
 
-- 
1.7.10.4

