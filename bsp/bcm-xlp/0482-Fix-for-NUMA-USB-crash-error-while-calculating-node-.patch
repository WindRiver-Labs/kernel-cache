From 92d702f2444ea12e50875170a9da876a8e205bb5 Mon Sep 17 00:00:00 2001
From: Sreenidhi BR <sreenidhibr@netlogicmicro.com>
Date: Wed, 16 Nov 2011 18:30:34 +0530
Subject: [PATCH 482/762] Fix for NUMA USB crash, error while calculating node ID (pa_to_nid): 1. check for node onlne and valid PFN values in NODE_MEM_DATA 2. failsafe case, get node ID from dram_map info

Based on Broadcom SDK 2.3.

Signed-off-by: Sreenidhi BR <sreenidhibr@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/mach-netlogic/mmzone.h |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/arch/mips/include/asm/mach-netlogic/mmzone.h b/arch/mips/include/asm/mach-netlogic/mmzone.h
index 245c770..1add4c8 100644
--- a/arch/mips/include/asm/mach-netlogic/mmzone.h
+++ b/arch/mips/include/asm/mach-netlogic/mmzone.h
@@ -44,6 +44,8 @@ extern struct nlm_node_data *__node_data[];
 #define NODE_CPU_MASK(nid)	(&__node_data[nid]->cpu.mask)
 #define NODE_MEM_DATA(nid)	(&__node_mem_data[nid])
 
+extern int get_node(unsigned long pfn);
+
 static inline unsigned int pa_to_nid(unsigned long addr)
 {
 	unsigned int  i;
@@ -51,10 +53,22 @@ static inline unsigned int pa_to_nid(unsigned long addr)
 
 	/* TODO: Implement this using NODE_DATA */
 	for (i = 0; i < NLM_MAX_CPU_NODE; i++) {
+
+		if ((!node_online(i)) || ((NODE_MEM_DATA(i)->low_pfn == 0) && (NODE_MEM_DATA(i)->high_pfn == 0)))
+			continue;
+
 		if (pfn >= NODE_MEM_DATA(i)->low_pfn && pfn <= NODE_MEM_DATA(i)->high_pfn)
 			return i;
 	}
 
+	/* special case: get node ID from dram_map info */
+	if (addr == 0)
+	{
+		i = get_node(pfn);
+		// printk("** special case: returning node %d.\n", i);
+		return i;
+	}
+
 	/* it should not really reach here */
 	printk("Invalid address is %lx\n", addr);
 	panic("Invalid address in pa_to_nid\n");
-- 
1.7.0.4

