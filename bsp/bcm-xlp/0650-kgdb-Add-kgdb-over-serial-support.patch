From e48d5048041db20152eed1db5acb32efbf8143c1 Mon Sep 17 00:00:00 2001
From: Ashok Kumar <ashoks@broadcom.com>
Date: Fri, 28 Dec 2012 16:49:38 +0530
Subject: [PATCH 650/762] kgdb: Add kgdb over serial support.

Based on Broadcom SDK 2.3.

Signed-off-by: Ashok Kumar <ashoks@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/netlogic/xlp_irq.h     |    2 +-
 arch/mips/include/asm/netlogic/xlp_irq_map.h |    3 ++-
 arch/mips/kernel/kgdb.c                      |   17 +++++++++++++++--
 arch/mips/netlogic/xlp/smp.c                 |    6 +++---
 4 files changed, 21 insertions(+), 7 deletions(-)

diff --git a/arch/mips/include/asm/netlogic/xlp_irq.h b/arch/mips/include/asm/netlogic/xlp_irq.h
index 1e48184..6b07d61 100644
--- a/arch/mips/include/asm/netlogic/xlp_irq.h
+++ b/arch/mips/include/asm/netlogic/xlp_irq.h
@@ -26,6 +26,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #ifndef _ASM_BRCM_XLP_IRQ_H
 #define _ASM_BRCM_XLP_IRQ_H
 
+#include <asm/netlogic/xlp_irq_map.h>
 #if defined __ASSEMBLY__
 #define ASM_XLP_IO_PIC_OFFSET        0xffffffffb8004100 /* TODO: This will change in to function */
 #define C_XLP_IO_PIC_OFFSET        0xffffffffb8004100ULL /* TODO: This will change in to function */
@@ -33,7 +34,6 @@ THE POSSIBILITY OF SUCH DAMAGE.
 
 #else
 #include <asm/netlogic/xlp_pic.h>
-#include <asm/netlogic/xlp_irq_map.h>
 /*
  *     Register Offsets
  */
diff --git a/arch/mips/include/asm/netlogic/xlp_irq_map.h b/arch/mips/include/asm/netlogic/xlp_irq_map.h
index b052d75..2b4bfb9 100644
--- a/arch/mips/include/asm/netlogic/xlp_irq_map.h
+++ b/arch/mips/include/asm/netlogic/xlp_irq_map.h
@@ -1,7 +1,6 @@
 #ifndef _XLP_IRQ_MAP_H
 #define _XLP_IRQ_MAP_H
 
-#define SMP_CALL_KGDB_HOOK_RVEC			2
 #define XLP_IRQ_IPI_SMP_FUNCTION_RVEC		3
 #define XLP_IRQ_IPI_SMP_RESCHEDULE_RVEC		4
 #define XLP_IRQ_MSGRING_RVEC			5
@@ -18,6 +17,7 @@
 #define XLP_IRQ_RESERVED_MAX			10
 #define XLP_PIC_WATCHDOG_TIMERS_RVEC    	(XLP_IRQ_RESERVED_MAX + 1)
 
+#ifndef  __ASSEMBLY__
 struct pic_dev;
 void xlp_init_irqmap(struct pic_dev *pic);
 void __xlp_irq_mask(struct pic_dev *pic, unsigned int irq);
@@ -49,4 +49,5 @@ int xlp_rvec_from_irq(int irq);
 		(msix % XLP_IRQS_PER_NODE) - XLP_MSIX_INDEX_START)
 #define xlp_msix_to_irt(msix) ((msix % XLP_IRQS_PER_NODE) - XLP_MSIX_INDEX_START + XLP_MSIX_IRT_START)
 
+#endif // !__ASSEMBLY__
 #endif
diff --git a/arch/mips/kernel/kgdb.c b/arch/mips/kernel/kgdb.c
index 185a727..edbc42c 100644
--- a/arch/mips/kernel/kgdb.c
+++ b/arch/mips/kernel/kgdb.c
@@ -258,9 +258,22 @@ void nlm_kgdb_smp_hook(void)
 	spin_unlock_irqrestore(&nlm_kgdb_lock, flags);
 }
 
-void nlm_kgdb_call_nmi_hook(void)
+void nlm_kgdb_call_nmi_hook(unsigned int irq, struct pt_regs *regs)
 {
-	kgdb_nmicallback(raw_smp_processor_id(), NULL);
+	/* In addition to the nmi exception, eirr is also
+	 * set for XLP_IRQ_IPI_SMP_KGDB_RVEC. when the interrupts
+	 * are enabled back after nmi exception handler, interrupt
+	 * is raised for XLP_IRQ_IPI_SMP_KGDB_RVEC but there is no handler 
+	 * registered for the same resulting in a NULL pointer access. 
+	 *
+	 * clearing XLP_IRQ_IPI_SMP_KGDB_RVEC in eirr hereitself
+	 * so as to avoid raising an interrupt unnecessarily
+	 * where we aren't going to do anything there but just return.
+	 *
+	 * */
+
+	write_64bit_cp0_eirr(1ULL << XLP_IRQ_IPI_SMP_KGDB_RVEC);
+	kgdb_nmicallback(raw_smp_processor_id(), regs);
 }
 #endif
 
diff --git a/arch/mips/netlogic/xlp/smp.c b/arch/mips/netlogic/xlp/smp.c
index 29a15ca..2a5d161 100644
--- a/arch/mips/netlogic/xlp/smp.c
+++ b/arch/mips/netlogic/xlp/smp.c
@@ -93,11 +93,11 @@ void nlm_send_ipi_single(int lcpu, unsigned int action)
                 ipi |= XLP_IRQ_IPI_SMP_FUNCTION_RVEC;
 	} else if (action & SMP_RESCHEDULE_YOURSELF) {
                 ipi |= XLP_IRQ_IPI_SMP_RESCHEDULE_RVEC;
-	} else if (action & SMP_CALL_KGDB_HOOK_RVEC) {
-                ipi |= XLP_IRQ_IPI_SMP_KGDB_RVEC;
+	} else if (action & SMP_CALL_KGDB_HOOK) {
+		ipi |= XLP_IRQ_IPI_SMP_KGDB_RVEC;
 		/* for KGDB enable NMI also */
 		nmi = 1;
-        } else
+	} else
 		return;
 
 	smp_mb();
-- 
1.7.0.4

