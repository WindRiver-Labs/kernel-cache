From 1b14de5394538dc46fc4974bada39a164c7b0a47 Mon Sep 17 00:00:00 2001
From: Om Narasimhan <onarasimhan@netlogicmicro.com>
Date: Wed, 18 Aug 2010 18:10:41 -0700
Subject: [PATCH 145/761] Changes for making serial console work on both ports
 of UART

Need a way to have configurable UART ports using FDT. Currently,
values are not taken from the fdt blob. This patch changes
1. nlm_early_serial_setup
    	now includes uart_id from the caller
2. fdt_process
    	now checks the uart from dom0 node
3. NS16550_putc
        now has a switch to make sure the intended console is
	used in early_printk

Based on Broadcom SDK 2.3.

Signed-off-by: Om Narasimhan <onarasimhan@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/setup.c |   61 ++++++++++++++++++++++++++++------------
 1 file changed, 43 insertions(+), 18 deletions(-)

diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index 7078ad1..cbaa50e 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -86,6 +86,7 @@
 #define DEF_PHYMEM_START_ADDR 			0x100000
 #define DEF_PHYMEM_SIZE 			0x0ff00000
 
+static unsigned int xlp_uart_portid = 0;
 unsigned long nlm_common_ebase = 0x0;
 
 static char prop_buf[MAX_PROP_LEN];
@@ -371,35 +372,45 @@ void __init nlm_nmi_setup (void)
 /* setup early serial port driver */
 #ifdef CONFIG_SERIAL_8250
 #define UART_CLK 133333333
-
-static void nlm_early_serial_setup(void)
+static void nlm_early_serial_setup(int uart_id)
 {
 	struct uart_port s;
 	extern int __init early_serial_setup(struct uart_port *port);
 
 	memset(&s, 0, sizeof(s));
-
 	s.flags = ASYNC_BOOT_AUTOCONF | ASYNC_SKIP_TEST;
 	s.iotype = UPIO_NLM;
-	/* registers are 4 bytes wide */
-	s.regshift = 2;
+	s.regshift = 2; /* registers are 4 bytes wide */
 	/* hardware int 4 - the serial int, is CPU int 6
 	 but poll for now */
-	s.irq =  PIC_UART_0_IRQ;
 	s.uartclk = UART_CLK;
-	s.membase = (unsigned char __iomem *)(DEFAULT_NETLOGIC_IO_BASE+NETLOGIC_IO_UART_0_OFFSET);
-	s.mapbase = (DEFAULT_NETLOGIC_IO_BASE+NETLOGIC_IO_UART_0_OFFSET);
+	switch(uart_id){
+		default:
+		case 0:
+			s.irq =  PIC_UART_0_IRQ;
+			s.membase = (unsigned char __iomem *)
+			(DEFAULT_NETLOGIC_IO_BASE + NETLOGIC_IO_UART_0_OFFSET);
+			s.mapbase = (DEFAULT_NETLOGIC_IO_BASE +
+					NETLOGIC_IO_UART_0_OFFSET);
+			s.line = 0;
+			break;
+		case 1:
+			s.irq =  PIC_UART_1_IRQ;
+			s.membase = (unsigned char __iomem *)
+			(DEFAULT_NETLOGIC_IO_BASE + NETLOGIC_IO_UART_1_OFFSET);
+			s.mapbase = (DEFAULT_NETLOGIC_IO_BASE +
+					NETLOGIC_IO_UART_1_OFFSET);
+			s.line = 1;
+			break;
+	}
 	s.serial_in	= xlp_uart_in;
 	s.serial_out	= xlp_uart_out;
-
 	if (early_serial_setup(&s) != 0) {
 		printk(KERN_ERR "Serial setup failed!\n");
 	}
-
-
 }
 #else
-static void nlm_early_serial_setup(void) {}
+static void nlm_early_serial_setup(int uart_id) {}
 #endif /* CONFIG_SERIAL_8250 */
 
 extern struct plat_smp_ops nlm_smp_ops;
@@ -509,6 +520,14 @@ static int fdt_process(void)
 		onlinemask = 0x1;
 
 	xlp_linux_cpu_mask = onlinemask;
+	sprintf(domstr, "/doms/dom@%d/uart", domain);
+	node = finddevice(domstr);
+	if(node){
+		if(getprop(node, "id", &xlp_uart_portid, sizeof(xlp_uart_portid))
+				< 0){
+			return -1;
+		}
+	}
 	return 0;
 }
 
@@ -534,7 +553,7 @@ void __init prom_init(void)
 	prom_reconfigure_thr_resources();
 
 	/* setup early serial port driver */
-	nlm_early_serial_setup();
+	nlm_early_serial_setup(xlp_uart_portid);
 
 	register_smp_ops(&nlm_smp_ops);
 }
@@ -547,12 +566,18 @@ void prom_free_prom_memory(void)
 #ifdef CONFIG_EARLY_PRINTK
 static void NS16550_putc(char c)
 {
-        nlm_reg_t *mmio =
-                netlogic_io_mmio(NETLOGIC_IO_UART_0_OFFSET);
-
+        nlm_reg_t *mmio;
+	switch(xlp_uart_portid){
+		default:
+		case 0:
+			mmio = netlogic_io_mmio(NETLOGIC_IO_UART_0_OFFSET);
+			break;
+		case 1:
+			mmio = netlogic_io_mmio(NETLOGIC_IO_UART_1_OFFSET);
+			break;
+	}
         while (netlogic_read_reg( mmio, 0x5) == 0);
-        	netlogic_write_reg( mmio, 0x0, c);
-
+		netlogic_write_reg( mmio, 0x0, c);
 }
 
 void prom_putchar(char c)
-- 
1.7.10.4

