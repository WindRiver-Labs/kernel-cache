From c9780ab74eb9e945d7aa15a37b212df5ee5cba7b Mon Sep 17 00:00:00 2001
From: Zi Shen Lim <zlim@netlogicmicro.com>
Date: Thu, 29 Sep 2011 16:24:21 -0700
Subject: [PATCH 403/762] Resolve merge conflict: merge

use latest implementation in mainline.

Based on Broadcom SDK 2.3.

Signed-off-by: Zi Shen Lim <zlim@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 net/ipv4/netfilter/ip_queue.c |   40 +++++++++++++++++++++++++++++++++++++---
 1 files changed, 37 insertions(+), 3 deletions(-)

diff --git a/net/ipv4/netfilter/ip_queue.c b/net/ipv4/netfilter/ip_queue.c
index 6a5220b..5460413 100644
--- a/net/ipv4/netfilter/ip_queue.c
+++ b/net/ipv4/netfilter/ip_queue.c
@@ -38,12 +38,18 @@
 #define NET_IPQ_QMAX 2088
 #define NET_IPQ_QMAX_NAME "ip_queue_maxlen"
 
+#undef  NLM_IPQ_DEBUG
+
 typedef int (*ipq_cmpfn)(struct nf_queue_entry *, unsigned long);
 
 static unsigned char copy_mode __read_mostly = IPQ_COPY_NONE;
 static unsigned int queue_maxlen __read_mostly = IPQ_QMAX_DEFAULT;
 static DEFINE_SPINLOCK(queue_lock);
+#ifdef CONFIG_NLMCOMMON_IP_QUEUE_AFFINITY
+static int peer_pid[NR_CPUS];
+#else
 static int peer_pid __read_mostly;
+#endif /* CONFIG_NLMCOMMON_IP_QUEUE_AFFINITY */
 static unsigned int copy_range __read_mostly;
 static unsigned int queue_total;
 static unsigned int queue_dropped = 0;
@@ -93,16 +99,16 @@ __ipq_reset(void)
 #ifdef CONFIG_NLMCOMMON_IP_QUEUE_AFFINITY
 	int i;
 	int total = 0;
-#ifdef NLM_IPQ_DEBUG	
+#ifdef NLM_IPQ_DEBUG
 	printk(KERN_ALERT "%s: Removing PID %d from core %d\n",
 			__FUNCTION__, peer_pid[smp_processor_id()], smp_processor_id());
 #endif
 	peer_pid[smp_processor_id()] = 0;
-	
+
 	for (i = 0; i < NR_CPUS; i++) {
 		total |= peer_pid[i];
 	}
-	
+
 	if (total == 0) {
 		net_disable_timestamp();
 		__ipq_set_mode(IPQ_COPY_NONE, 0);
@@ -552,7 +558,11 @@ ipq_rcv_nl_event(struct notifier_block *this,
 
 	if (event == NETLINK_URELEASE && n->protocol == NETLINK_FIREWALL) {
 		spin_lock_bh(&queue_lock);
+#ifdef CONFIG_NLMCOMMON_IP_QUEUE_AFFINITY
+		if ((net_eq(n->net, &init_net)) && (n->pid == peer_pid[smp_processor_id()]))
+#else
 		if ((net_eq(n->net, &init_net)) && (n->pid == peer_pid))
+#endif
 			__ipq_reset();
 		spin_unlock_bh(&queue_lock);
 	}
@@ -581,8 +591,32 @@ static ctl_table ipq_table[] = {
 #ifdef CONFIG_PROC_FS
 static int ip_queue_show(struct seq_file *m, void *v)
 {
+#ifdef CONFIG_NLMCOMMON_IP_QUEUE_AFFINITY
+	int i;
+#endif /* CONFIG_NLMCOMMON_IP_QUEUE_AFFINITY */
+
 	spin_lock_bh(&queue_lock);
 
+#ifdef CONFIG_NLMCOMMON_IP_QUEUE_AFFINITY
+	seq_printf(m, "Peer PIDs: \n");
+	for (i = 0; i < NR_CPUS; i++)
+		seq_printf(m, "%d", peer_pid[i]);
+
+	seq_printf(m, "\n");
+	seq_printf(m,
+		      "Copy mode         : %hu\n"
+		      "Copy range        : %u\n"
+		      "Queue length      : %u\n"
+		      "Queue max. length : %u\n"
+		      "Queue dropped     : %u\n"
+		      "Netlink dropped   : %u\n",
+		      copy_mode,
+		      copy_range,
+		      queue_total,
+		      queue_maxlen,
+		      queue_dropped,
+		      queue_user_dropped);
+#else
 	seq_printf(m,
 		      "Peer PID          : %d\n"
 		      "Copy mode         : %hu\n"
-- 
1.7.0.4

