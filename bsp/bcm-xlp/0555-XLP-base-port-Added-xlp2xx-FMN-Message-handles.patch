From 39c517c8d66a155388811b478430be9d4db0099b Mon Sep 17 00:00:00 2001
From: Jayanthi A <jayanthi.annadurai@broadcom.com>
Date: Thu, 19 Jul 2012 21:52:55 +0530
Subject: [PATCH 555/762] XLP base port: Added xlp2xx FMN Message handles

Based on Broadcom SDK 2.3.

Signed-off-by: Jayanthi A <jayanthi.annadurai@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/on_chip.c |   41 +++++++++++++++++++++++++++++++------
 1 files changed, 34 insertions(+), 7 deletions(-)

diff --git a/arch/mips/netlogic/xlp/on_chip.c b/arch/mips/netlogic/xlp/on_chip.c
index 4f374dc..d986784 100644
--- a/arch/mips/netlogic/xlp/on_chip.c
+++ b/arch/mips/netlogic/xlp/on_chip.c
@@ -53,8 +53,6 @@ extern int xlp_rvec_from_irq(int);
 unsigned long netlogic_io_base = (unsigned long)(DEFAULT_NETLOGIC_IO_BASE);
 EXPORT_SYMBOL(netlogic_io_base);
 
-extern int hwemul;
-
 extern void nlm_cpu_stat_update_msgring_int(void);
 extern void nlm_cpu_stat_update_msgring_cycles(__u32 cycles);
 extern void nlm_cpu_stat_update_msgring_pic_int(void);
@@ -223,6 +221,31 @@ static uint16_t xlp3xx_vc_to_handle_map[MAX_VC] = {
 	[512 ... 4095]= XLP_MSG_HANDLE_INVALID
 };
 
+static uint16_t xlp2xx_vc_to_handle_map[MAX_VC] = {
+	[0 ... 15] = XLP_MSG_HANDLE_CPU0,
+	[16 ... 31] = XLP_MSG_HANDLE_CPU1,
+	[32 ... 127] = XLP_MSG_HANDLE_INVALID,
+	[128 ... 143] = XLP_MSG_HANDLE_CPU0,
+	[144 ... 159] = XLP_MSG_HANDLE_CPU1,
+	[160 ... 255] = XLP_MSG_HANDLE_INVALID,
+	[256 ... 257] = XLP_MSG_HANDLE_PCIE0,
+	[258 ... 259] = XLP_MSG_HANDLE_PCIE1,
+	[260 ... 261] = XLP_MSG_HANDLE_PCIE2,
+	[262 ... 263] = XLP_MSG_HANDLE_PCIE3,
+	[264 ... 265] = XLP_MSG_HANDLE_DTRE,
+	[266 ... 267] = XLP_MSG_HANDLE_CMP,
+	[268 ... 271] = XLP_MSG_HANDLE_REGX,
+	[272 ... 272] = XLP_MSG_HANDLE_RSA_ECC,
+	[273 ... 275] = XLP_MSG_HANDLE_INVALID,
+	[276 ... 276] = XLP_MSG_HANDLE_CRYPTO,
+	[277 ... 383] = XLP_MSG_HANDLE_INVALID,
+	[384 ... 391] = XLP_MSG_HANDLE_NAE_0,
+	[392 ... 431] = XLP_MSG_HANDLE_INVALID,
+	[432 ... 503] = XLP_MSG_HANDLE_NAE_0,
+	[504 ... 4095]= XLP_MSG_HANDLE_INVALID
+
+};
+
 /******************************************************************************************
  *  dummy_handler 
  *
@@ -347,7 +370,10 @@ void nlm_xlp_msgring_int_handler(unsigned int irq, struct pt_regs *regs)
 			if(status != 0)
 				continue;
 
-			if (is_nlm_xlp3xx()) {
+			if (is_nlm_xlp2xx()) {
+				handler = &msg_handler_map[xlp2xx_vc_to_handle_map[src_id]];
+			}
+			else if (is_nlm_xlp3xx()) {
 				handler = &msg_handler_map[xlp3xx_vc_to_handle_map[src_id]];
 			}
 			else {
@@ -359,14 +385,15 @@ void nlm_xlp_msgring_int_handler(unsigned int irq, struct pt_regs *regs)
 					  msg0, msg1, msg2, msg3, handler->dev_id);
 
 		}
-
-		/* Simulator currently doesn't simulate vc_empty_status1 bits! */
-		//if (!hwemul) break;
 	}
 	nlm_cpu_stat_update_msgring_cycles(read_c0_count() - cycles);
 
 	/* Clear VC interrupt status by writing 1s */
-	xlp_write_status1( (msg_status1 | (pop_vc_mask << 16)) );
+        if (is_cpu_core_xlp_ii) {
+                xlp_write_msg_int((pop_vc_mask));
+        } else {
+                xlp_write_status1( (msg_status1 | (pop_vc_mask << 16)) );
+        }
 
         msgrng_access_disable(mflags);
 
-- 
1.7.0.4

