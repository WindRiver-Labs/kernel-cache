From 035eb20db18ff89cec1ae44dab4b20ad7b9d52b5 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Thu, 12 Dec 2013 12:36:46 +0800
Subject: [PATCH 1/3] NETL7: use bootmem when this driver is builtin

Initialize the page table and page to point to a couple of allocated
pages if NELL7 is built-in.
This can save the middle stage memory, else sometimes system will be
out-of-memory during system boot.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/kernel/setup.c               |   15 +++++++++++++++
 drivers/misc/netl7driver/netl7driver.c |   17 +++++++++++++++++
 drivers/misc/netl7driver/netl7driver.h |    4 ++++
 3 files changed, 36 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/setup.c b/arch/mips/kernel/setup.c
index 3432c56..4bacf86 100644
--- a/arch/mips/kernel/setup.c
+++ b/arch/mips/kernel/setup.c
@@ -687,6 +687,12 @@ static void __init resource_init(void)
 	}
 }
 
+#if IS_BUILTIN(CONFIG_XLP_NETL7)
+struct page *netl7_empty_zero_page;
+EXPORT_SYMBOL(netl7_empty_zero_page);
+/* The default size of NETL7 dynamic chunk we will look for */
+#define NETL7_NLM_DEFAULT_PHYS_MEM_SIZE (256 * 1024 * 1024)
+#endif
 void __init setup_arch(char **cmdline_p)
 {
         /* the variable later on will be used in macros as well */
@@ -714,6 +720,15 @@ void __init setup_arch(char **cmdline_p)
 	arch_mem_init(cmdline_p);
 
 	resource_init();
+#if IS_BUILTIN(CONFIG_XLP_NETL7)
+	netl7_empty_zero_page =
+		alloc_bootmem_pages(NETL7_NLM_DEFAULT_PHYS_MEM_SIZE);
+	if (netl7_empty_zero_page != NULL)
+		memset((void *)netl7_empty_zero_page, 0,
+				NETL7_NLM_DEFAULT_PHYS_MEM_SIZE);
+	else
+		pr_err("Failed to allocate boot memory for NETL7\n");
+#endif
 	plat_smp_setup();
 }
 
diff --git a/drivers/misc/netl7driver/netl7driver.c b/drivers/misc/netl7driver/netl7driver.c
index 7927d6b..68829fe 100644
--- a/drivers/misc/netl7driver/netl7driver.c
+++ b/drivers/misc/netl7driver/netl7driver.c
@@ -1101,6 +1101,23 @@ static int dynamic_memory_init(void)
 	ulong size;
 	struct mem_desc *chunklist, *chunk;
 
+#if IS_BUILTIN(CONFIG_XLP_NETL7)
+	if (!netl7_empty_zero_page)
+		return -ENOMEM;
+	/*
+	 * Initialize the page table and page to point
+	 * to a couple of allocated pages if NELL7 is built-in.
+	 * This can save the middle stage memory during system boot.
+	 */
+	size = PAGE_ALIGN(NLM_DEFAULT_PHYS_MEM_SIZE);
+	chunk = (struct mem_desc *)netl7_empty_zero_page;
+	chunk->next = NULL;
+	chunk->npages = size/PAGE_SIZE;
+	chunklist = insert_into_sorted_list(chunklist, chunk);
+	return fixed_memory_chunking((ulong)virt_to_phys(chunklist),
+				size, dmamem_size);
+#endif
+
 	err = find_free_chunks(&chunklist);
 	if (err)
 		return err;
diff --git a/drivers/misc/netl7driver/netl7driver.h b/drivers/misc/netl7driver/netl7driver.h
index c234d85..1a62b02 100644
--- a/drivers/misc/netl7driver/netl7driver.h
+++ b/drivers/misc/netl7driver/netl7driver.h
@@ -50,4 +50,8 @@ struct nlm_sys_cfg {
 #define NLM_FMS_PROC_PATH          "/proc/NetL7/fms.%01d.r%01d"
 #define NLM_MARS3_PROC_PATH        "/proc/NetL7/mars3.%01d"
 
+#if IS_BUILTIN(CONFIG_XLP_NETL7)
+extern struct page *netl7_empty_zero_page;
+#endif
+
 #endif /* NLM_NETL7DRIVER_H */
-- 
1.7.5.4

