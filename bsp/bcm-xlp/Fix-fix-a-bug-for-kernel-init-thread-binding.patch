From ed6d237803eb6332927ed2d1238f7f19c3560624 Mon Sep 17 00:00:00 2001
From: Yonghong Song <ysong@broadcom.com>
Date: Fri, 16 Nov 2012 10:01:18 -0800
Subject: [PATCH 627/761] Fix: fix a bug for kernel init thread binding

  o This bug caused hackbench to run significantly slower if booted other
    than 1c1t, because it ultimately binds the init thread to vcpu 0.
  o The fix is to restore the original cpumask after kernel setup so that
    the init thread can be run on any available cpus.

Based on Broadcom SDK 2.3.

Signed-off-by: Yonghong Song <ysong@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 init/main.c |   14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

diff --git a/init/main.c b/init/main.c
index 7d74ab1..38e9d2a 100644
--- a/init/main.c
+++ b/init/main.c
@@ -849,7 +849,7 @@ static noinline int init_post(void)
 static int __init kernel_init(void * unused)
 {
 #ifdef CONFIG_NLM_XLP
-	struct cpumask cpumask;
+	struct cpumask old_mask, new_mask;
 #endif
 	struct stat console_stat;
 	/*
@@ -882,16 +882,14 @@ static int __init kernel_init(void * unused)
 #if defined(CONFIG_NLM_XLP)
 	/* On XLP Ax, PIC device specific registers cannot be accessed
 	 * cross different nodes. So the kernel_init has to run on node 0.
-	 * On XLP B0, the flash device cannot be accessed cross node, so flash
+	 * On XLP Bx, the flash device cannot be accessed cross node, so flash
 	 * driver has to run on node 0.
 	 * For simplicity, just let is run on vcpu 0.
 	 */
-	{
-		struct cpumask new_mask;
-		cpumask_clear(&new_mask);
-		cpumask_set_cpu(0, &new_mask);
-		set_cpus_allowed_ptr(current, &new_mask);
-	}
+	cpumask_copy(&old_mask, &current->cpus_allowed);
+	cpumask_clear(&new_mask);
+	cpumask_set_cpu(0, &new_mask);
+	set_cpus_allowed_ptr(current, &new_mask);
 #endif
 
 	do_basic_setup();
-- 
1.7.10.4

