From ecdf1125731b0123fe4e9ee2ddf45620aeb8dd85 Mon Sep 17 00:00:00 2001
From: Nebu Philips <nphilips@jakarta.razamicroelectronics.com>
Date: Wed, 19 May 2010 15:11:46 -0700
Subject: [PATCH 032/762] Follow-up to previous FDT changeset

Commiting locally modified files for FDT.

Based on Broadcom SDK 2.3.

Signed-off-by: Nebu Philips <nphilips@jakarta.razamicroelectronics.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/Kconfig                         |   13 ++++++++++
 arch/mips/Makefile                        |    4 ++-
 arch/mips/include/asm/netlogic/bootinfo.h |    6 ++++-
 arch/mips/include/asm/netlogic/iomap.h    |    1 +
 arch/mips/netlogic/boot/Makefile          |    8 +++++-
 arch/mips/netlogic/common/nlm_hal.c       |   18 +-------------
 arch/mips/netlogic/xlp/Makefile           |   20 +++++-----------
 arch/mips/netlogic/xlp/smp.c              |   36 +++++-----------------------
 8 files changed, 42 insertions(+), 64 deletions(-)

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index 085cd51..7b57533 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -1029,6 +1029,19 @@ config DMA_NONCOHERENT
 config NEED_DMA_MAP_STATE
 	bool
 
+config FDT
+	bool "Flattened Device Tree Support"
+	depends on NLM_XLP
+	default y
+	help
+	  When using Bootloaders such as U-Boot, firmware
+	  configuration is passed through to Linux using 
+	  an FDT. Although similar in nature to the Open
+	  Firmware DeviceTree framework, the scope of FDT
+	  support for NetLogic Kernels is mostly limited
+	  to a model of passing/parsing firmware info. 
+	  Similar to the PowerPC port.
+
 config SYS_HAS_EARLY_PRINTK
 	bool
 
diff --git a/arch/mips/Makefile b/arch/mips/Makefile
index 0de78a2..a903746 100644
--- a/arch/mips/Makefile
+++ b/arch/mips/Makefile
@@ -211,7 +211,9 @@ include $(srctree)/arch/mips/Kbuild.platforms
 #
 # NETLOGIC XLP Soc, Simulator and boards
 #
-cflags-$(CONFIG_NLM_XLP)	+= -DXLP
+core-$(CONFIG_NLM_XLP) 		+= arch/mips/netlogic/boot/
+cflags-$(CONFIG_NLM_XLP)	+= -DXLP -I$(srctree)/arch/mips/include/asm/netlogic/hal
+cflags-$(CONFIG_NLM_XLP)	+= -I$(srctree)/arch/mips/netlogic/boot
 
 cflags-y			+= -I$(srctree)/arch/mips/include/asm/mach-generic
 drivers-$(CONFIG_PCI)		+= arch/mips/pci/
diff --git a/arch/mips/include/asm/netlogic/bootinfo.h b/arch/mips/include/asm/netlogic/bootinfo.h
index 1454abc..8d644cf 100644
--- a/arch/mips/include/asm/netlogic/bootinfo.h
+++ b/arch/mips/include/asm/netlogic/bootinfo.h
@@ -14,7 +14,11 @@ extern int read_prominfo(void);
 extern int read_dram_info(void);
 extern int read_physaddr_map(void);
 
+#ifdef CONFIG_FDT
+extern int wakeup_secondary_cpus(void);
+#else
 extern int wakeup_secondary_cpus(void (*wakeup)(void *, void *, __u32), 
-								 struct psb_info *prom_info);
+		struct psb_info *prom_info);
+#endif
 
 #endif
diff --git a/arch/mips/include/asm/netlogic/iomap.h b/arch/mips/include/asm/netlogic/iomap.h
index 56ad07e..6fcde45 100644
--- a/arch/mips/include/asm/netlogic/iomap.h
+++ b/arch/mips/include/asm/netlogic/iomap.h
@@ -45,6 +45,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #define NETLOGIC_IO_PIC_OFFSET             0x04000
 #define NETLOGIC_IO_UART_0_OFFSET          0x30100
 #define NETLOGIC_IO_UART_1_OFFSET          0x31100
+#define NETLOGIC_IO_SYS_OFFSET             0x35100
 #endif /* CONFIG_NLM_XLP */
 
 #define NETLOGIC_IO_SIZE                   0x1000
diff --git a/arch/mips/netlogic/boot/Makefile b/arch/mips/netlogic/boot/Makefile
index 3fceae5..698b8c5 100644
--- a/arch/mips/netlogic/boot/Makefile
+++ b/arch/mips/netlogic/boot/Makefile
@@ -1,3 +1,7 @@
-obj-y  = boot.o bootloader.o
+#
+# Makefile for the Flattened Device Tree for Netlogic XLP Kernels
+#
 
-EXTRA_AFLAGS := $(CFLAGS)
+obj-$(CONFIG_FDT)  += simple_alloc.o
+obj-$(CONFIG_FDT)  += libfdt-wrapper.o
+obj-$(CONFIG_FDT)  += fdt.o fdt_ro.o fdt_wip.o fdt_sw.o fdt_rw.o fdt_strerror.o
diff --git a/arch/mips/netlogic/common/nlm_hal.c b/arch/mips/netlogic/common/nlm_hal.c
index 0c51f96..a4037ee 100644
--- a/arch/mips/netlogic/common/nlm_hal.c
+++ b/arch/mips/netlogic/common/nlm_hal.c
@@ -93,10 +93,8 @@
 #include "nlm_hal_crypto.h"
 #include "nlm_hal_xlp_dev.h"
 #include "nlm_hal_sys.h"
-#if 0
 #include "libfdt.h"
-#include "fdt_helper.h"
-#endif
+//#include "fdt_helper.h"
 
 /* These addresses are computed by the nlm_hal_init() */
 unsigned long xlp_io_base;
@@ -483,8 +481,6 @@ __inline__ int nlm_hal_is_xlp_le(void)
 	return little_endian;
 }
 
-#define fdt32_to_cpu(x) be32_to_cpu(x)
-
 enum prop_type {
         PROP_STR = 0,
         PROP_CELL
@@ -496,18 +492,6 @@ int copy_fdt_prop(void *fdt, const char *path, const char *prop,
 	return 0;
 }
 
-int fdt_path_offset(const void *fdt, const char *path)
-{
-	return 0;
-}
-
-const void *fdt_getprop(const void *fdt, int nodeoffset,
-			const char *name, int *lenp)
-{
-	return 0;
-}
-
-
 /*
  * @brief nlm_hal_get_fdt_freq function is used to read the frequency specified in the fdt file.
  *
diff --git a/arch/mips/netlogic/xlp/Makefile b/arch/mips/netlogic/xlp/Makefile
index 2acd5eb..cdc5260 100644
--- a/arch/mips/netlogic/xlp/Makefile
+++ b/arch/mips/netlogic/xlp/Makefile
@@ -1,18 +1,10 @@
 EXTRA_CFLAGS := -Werror
 EXTRA_CFLAGS := $(CFLAGS) -DNLM_HAL_LINUX_KERNEL -Iarch/mips/include/asm/netlogic/hal
 
-obj-y				:= setup.o platform.o
-obj-$(CONFIG_SMP)		+= wakeup.o
-
-
-obj-y                   += config_net.o
-obj-y += irq.o time.o on_chip.o mmu.o
-obj-$(CONFIG_NLM_XLP) += platform-xlp.o
-obj-$(CONFIG_SMP)      += smp.o smpboot.o
+obj-y                    = setup.o config_net.o
+obj-y 				   	+= irq.o time.o on_chip.o mmu.o
+obj-$(CONFIG_NLM_XLP) 	+= platform-xlp.o
+obj-$(CONFIG_SMP)       += smp.o smpboot.o
 obj-$(CONFIG_KGDB)      += nmi.o
-
-ifeq ($(CONFIG_XEN),y)
-obj-y += xenbootinfo.o
-else
-obj-y += bootinfo.o
-endif
+obj-$(CONFIG_NLM_XLP) 	+= cpu_control.o cpu_control_asm.o
+obj-y				    += bootinfo.o
diff --git a/arch/mips/netlogic/xlp/smp.c b/arch/mips/netlogic/xlp/smp.c
index 203ac91..23db959 100644
--- a/arch/mips/netlogic/xlp/smp.c
+++ b/arch/mips/netlogic/xlp/smp.c
@@ -31,7 +31,6 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #include <asm/mipsregs.h>
 #include <asm/mmu_context.h>
 #include <asm/atomic.h>
-//#include <asm/cpumask.h>
 
 #include <asm/netlogic/sim.h>
 #include <asm/netlogic/msgring.h>
@@ -49,6 +48,8 @@ THE POSSIBILITY OF SUCH DAMAGE.
 extern int xlr_loader_support;
 extern volatile cpumask_t cpu_callin_map;
 
+extern int onlinemask;
+
 extern void smp_tune_scheduling (void);
 extern void ptr_smp_boot(unsigned long, unsigned long, unsigned long);
 struct smp_boot_info smp_boot;
@@ -61,6 +62,8 @@ cpumask_t phys_cpu_present_map;
 extern void asmlinkage smp_bootstrap(void);
 extern void core_send_ipi(int cpu, unsigned int action);
 
+extern void enable_cpus(unsigned long thread_bitmask);
+
 void nlm_send_ipi_single(int cpu, unsigned int action)
 {
     core_send_ipi(cpu, action);
@@ -235,35 +238,10 @@ extern uint32_t xlr_linux_cpu_mask;
 #define secondary_cpus_bootup_func prom_pre_boot_secondary_cpus
 #endif
 
-int wakeup_secondary_cpus(void (*wakeup)(void *, void *, __u32), struct psb_info *prom_info)
+int wakeup_secondary_cpus(void)
 {
-	__u32 wakeup_mask;
-#if defined(CONFIG_NLM_XLP_SIM)
-	unsigned int wait_count = 0;
-#endif
-
-	if (xlr_loader_support) {
-		wakeup_mask = xlr_linux_cpu_mask | nlm_common_loader_mask;
-		if (wakeup != NULL)
-			wakeup((void *)secondary_cpus_bootup_func, 0, wakeup_mask);
-	} 
-	else {
-		if (wakeup != NULL) {
-			wakeup((void *)secondary_cpus_bootup_func, 0, 
-				   (__u32)prom_info->nlm_cpu_online_map & (~smp_boot.online_map));
-#if defined(CONFIG_NLM_XLP_SIM)
-			while (smp_boot.online_map != prom_info->nlm_cpu_online_map) {
-				if ((wait_count++ % 1000000) == 0) {
-					printk("[%s%d]: Master cpu waiting for slave cpus to wakeup from bootloader (%x != %llx)\n",
-					       __FUNCTION__, __LINE__, smp_boot.online_map, 
-						   (unsigned long long) prom_info->nlm_cpu_online_map);
-				}
-			}
-			printk("[%s@%d]: woke up prom_info->nlm_cpu_online_map=%016llx\n", __FILE__, __LINE__, 
-				   (unsigned long long) prom_info->nlm_cpu_online_map);
-#endif
-		}
-	}
+	printk("Enabling CPU Mask [0x%x]\n", onlinemask);
+	enable_cpus(onlinemask);
 
 	return 0;
 }
-- 
1.7.0.4

