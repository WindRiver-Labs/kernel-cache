From 484a9589dc344630e00188fcd5da9587b391aa3f Mon Sep 17 00:00:00 2001
From: Zi Shen Lim <zlim@netlogicmicro.com>
Date: Tue, 4 Oct 2011 16:54:21 -0700
Subject: [PATCH 441/762] Resolve merge conflict: pick linux-3.0-stable

Based on Broadcom SDK 2.3.

Signed-off-by: Zi Shen Lim <zlim@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/pci/pci.h    |    2 +-
 drivers/pci/quirks.c |    2 +-
 include/linux/pci.h  |   12 ++----------
 3 files changed, 4 insertions(+), 12 deletions(-)

diff --git a/drivers/pci/pci.h b/drivers/pci/pci.h
index d6e7ea6..e494347 100644
--- a/drivers/pci/pci.h
+++ b/drivers/pci/pci.h
@@ -141,7 +141,7 @@ extern raw_spinlock_t pci_lock;
 
 extern unsigned int pci_pm_d3_delay;
 
-#if defined(CONFIG_PCI_MSI)
+#ifdef CONFIG_PCI_MSI
 void pci_no_msi(void);
 extern void pci_msi_init_pci_dev(struct pci_dev *dev);
 #else
diff --git a/drivers/pci/quirks.c b/drivers/pci/quirks.c
index ce042c4..680dbfa 100644
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@ -2162,7 +2162,7 @@ static void __devinit quirk_tile_plx_gen1(struct pci_dev *dev)
 DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_PLX, 0x8624, quirk_tile_plx_gen1);
 #endif /* CONFIG_TILE */
 
-#if defined(CONFIG_PCI_MSI)
+#ifdef CONFIG_PCI_MSI
 /* Some chipsets do not support MSI. We cannot easily rely on setting
  * PCI_BUS_FLAGS_NO_MSI in its bus flags because there are actually
  * some other busses controlled by the chipset even if Linux is not
diff --git a/include/linux/pci.h b/include/linux/pci.h
index 49b50cf..e444f5b 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -1,11 +1,3 @@
-/***********************************************************************
-Copyright 2003-2010 Netlogic Microsystems Inc. (“Netlogic”).
-This is a derived work from software originally provided by the external
-entity identified below. The licensing terms and warranties specified in
-the header of the original work apply to this derived work.
-
-*****************************#NETL_1#********************************/
-
 /*
  *	pci.h
  *
@@ -341,7 +333,7 @@ struct pci_dev {
 	int rom_attr_enabled;		/* has display of the rom attribute been enabled? */
 	struct bin_attribute *res_attr[DEVICE_COUNT_RESOURCE]; /* sysfs file for resources */
 	struct bin_attribute *res_attr_wc[DEVICE_COUNT_RESOURCE]; /* sysfs file for WC mapping of resources */
-#if defined(CONFIG_PCI_MSI)
+#ifdef CONFIG_PCI_MSI
 	struct list_head msi_list;
 	struct kset *msi_kset;
 #endif
@@ -1019,7 +1011,7 @@ struct msix_entry {
 };
 
 
-#if !defined(CONFIG_PCI_MSI)
+#ifndef CONFIG_PCI_MSI
 static inline int pci_enable_msi_block(struct pci_dev *dev, unsigned int nvec)
 {
 	return -1;
-- 
1.7.0.4

