From e92a0dacb20ca1ed66d20a140f54c5feffbb8b8e Mon Sep 17 00:00:00 2001
From: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Date: Wed, 6 Oct 2010 10:59:46 -0700
Subject: [PATCH 194/762] Fix compile warnings

Based on Broadcom SDK 2.3.

Signed-off-by: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/irq.c     |   29 +++++++----------------------
 arch/mips/netlogic/xlp/on_chip.c |    1 +
 arch/mips/netlogic/xlp/setup.c   |    1 +
 3 files changed, 9 insertions(+), 22 deletions(-)

diff --git a/arch/mips/netlogic/xlp/irq.c b/arch/mips/netlogic/xlp/irq.c
index 6ab54bf..9eb894b 100644
--- a/arch/mips/netlogic/xlp/irq.c
+++ b/arch/mips/netlogic/xlp/irq.c
@@ -65,25 +65,6 @@ struct pic_tmask pic_tmask[PIC_NUM_IRTS];
 uint64_t nlm_xlp_irq_mask;
 spinlock_t nlm_common_pic_lock = SPIN_LOCK_UNLOCKED;
 
-void dump_irt_entry(short no)
-{
-	nlm_reg_t reg;
-	pic_reg_t *mmio = (pic_reg_t *) XLP_IO_PIC_OFFSET;
-	reg = nlm_hal_read_pic_reg(mmio, PIC_IRT(no));
-	printk("%d:\t%d\t%d\t%d\t%d\n",no, reg>>31,(reg>>20)&0x3f, (reg>>16)&0x3, reg&0xffff);
-
-}
-
-void dumpall_irt_entry(void)
-{
-	short i;
-
-	printk("IRT:\tEn\tRVec\tDB\tDTE\n");
-
-	for (i = 0; i < PIC_NUM_IRTS; i++)
-		dump_irt_entry(i);
-}
-
 static unsigned int pic_startup(unsigned int irq)
 {
 	pic_reg_t *mmio = (pic_reg_t *) XLP_IO_PIC_OFFSET;
@@ -138,7 +119,8 @@ static void pic_unmask(unsigned int irq)
 	 */
 	reg = nlm_hal_read_pic_reg(mmio, PIC_IRT(irt));
 	/* By default all the interrupts are initialized as level senstive - fix for the PCMCIA flash */
-	nlm_hal_write_pic_reg(mmio, PIC_IRT(irt), reg | (1 << 28) | (1 << 31));
+	nlm_hal_write_pic_reg(mmio, PIC_IRT(nlm_hal_irq_to_irt(irq)),
+		      reg | (1 << 28) | (1 << 31));
 
 	spin_unlock_irqrestore(&nlm_common_pic_lock, flags);
 
@@ -166,7 +148,6 @@ static void pic_ack(unsigned int irq)
 	 */
 	if (PIC_IRQ_IS_EDGE_TRIGGERED(irq)) {
 		spin_lock_irqsave(&nlm_common_pic_lock, flags);
-
 		nlm_hal_ack_pic(irt);
 		spin_unlock_irqrestore(&nlm_common_pic_lock, flags);
 	}
@@ -190,7 +171,7 @@ static void pic_end(unsigned int irq)
 	/* If level triggered, ack it after the device condition is cleared */
 	if (!PIC_IRQ_IS_EDGE_TRIGGERED(irq)) {
 		spin_lock_irqsave(&nlm_common_pic_lock, flags);
-		nlm_hal_ack_pic(irt);
+		nlm_hal_ack_pic(nlm_hal_irq_to_irt(irq));
 		spin_unlock_irqrestore(&nlm_common_pic_lock, flags);
 	}
 }
@@ -383,6 +364,10 @@ void do_nlm_common_IRQ(unsigned int irq, struct pt_regs *regs)
 
 void __cpuinit nlm_smp_irq_init(void)
 {
+#ifdef XLP_MERGE_TODO
+	/* Set up kseg0 to be cachable coherent */
+	change_c0_config(CONF_CM_CMASK, CONF_CM_DEFAULT);
+#endif
 	/* set interrupt mask for non-zero cpus */
 	write_64bit_cp0_eimr(nlm_xlp_irq_mask | (1 << IRQ_TIMER));
 }
diff --git a/arch/mips/netlogic/xlp/on_chip.c b/arch/mips/netlogic/xlp/on_chip.c
index 346f2a8..8a8f8f7 100644
--- a/arch/mips/netlogic/xlp/on_chip.c
+++ b/arch/mips/netlogic/xlp/on_chip.c
@@ -335,6 +335,7 @@ atomic_t nlm_common_counters[NR_CPUS][NLM_MAX_COUNTERS] __cacheline_aligned;
  *  nlm_usb_init 
  *
  ********************************************************************/
+static void nlm_usb_init (void) __attribute__((unused));
 static void nlm_usb_init (void)
 {
 	volatile unsigned int value;
diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index c61a277..63ee181 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -322,6 +322,7 @@ struct nlm_common_name_value_struct {
 	uint32_t *val;
 };
 
+static void prom_add_memory(uint64_t start, uint64_t size) __attribute__((unused));
 static void prom_add_memory(uint64_t start, uint64_t size)
 {
 	__u64 pref_backup = 512;
-- 
1.7.0.4

