From 67449c5e2bc07a6423a4a6d632841f822439dc96 Mon Sep 17 00:00:00 2001
From: Ashwin Sekhar T K <ashwin@broadcom.com>
Date: Mon, 8 Dec 2014 18:26:28 +0530
Subject: numa: Fix totalram_pages calculation in mem_init()

setup_zero_pages() was changed to return void by commit
05922613dfc59402cd6f3a1b019bc2138ff47 (mm/MIPS: use common help functions
to free reserved pages)

Update usage in xlp/numa.c so that totalram_pages are computed correctly.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/xlp/numa.c b/arch/mips/netlogic/xlp/numa.c
index d10d81a..b844af4 100644
--- a/arch/mips/netlogic/xlp/numa.c
+++ b/arch/mips/netlogic/xlp/numa.c
@@ -156,8 +156,6 @@ fail:
 	panic("Invalid memory config!\n");
 }
 
-extern unsigned long setup_zero_pages(void);
-
 void __init paging_init(void)
 {
 	unsigned long zones_size[MAX_NR_ZONES] = {0, };
@@ -177,6 +175,8 @@ void __init paging_init(void)
 	free_area_init_nodes(zones_size);
 }
 
+extern void setup_zero_pages(void);
+
 void __init mem_init(void)
 {
 	unsigned long codesize, datasize, initsize, tmp;
@@ -191,7 +191,7 @@ void __init mem_init(void)
 		totalram_pages += free_all_bootmem_node(NODE_DATA(node));
 	}
 
-	totalram_pages -= setup_zero_pages();	/* This comes from node 0 */
+	setup_zero_pages();	/* This comes from node 0 */
 
 	codesize =  (unsigned long) &_etext - (unsigned long) &_text;
 	datasize =  (unsigned long) &_edata - (unsigned long) &_etext;
-- 
1.7.1

