From 14656fad2b99ebbae587fa4ef74fbb7fd771933f Mon Sep 17 00:00:00 2001
From: Tanmay Jagdale <tanmayj@broadcom.com>
Date: Thu, 4 Dec 2014 15:16:49 +0530
Subject: fdtconf: multi-node nae fixes

 - Fixed the ownership mask in case of multi-node setups.
 - Added ucore code into the dtb for NAE blocks on all nodes.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/misc/netlogic/fdtconf/fdtconf.c b/drivers/misc/netlogic/fdtconf/fdtconf.c
index 2e4254b..d8e192c 100644
--- a/drivers/misc/netlogic/fdtconf/fdtconf.c
+++ b/drivers/misc/netlogic/fdtconf/fdtconf.c
@@ -37,6 +37,7 @@
 #include <linux/platform_device.h>
 #include <linux/firmware.h>
 
+#include <asm/mach-netlogic/multi-node.h>
 #include "libfdt.h"
 #include "nlm_hal.h"
 
@@ -49,9 +50,9 @@
 #define	LINUX_UCORE	"linux-ucore.hex"
 
 /* Path to ucore code in device tree */
-#define	UCORE_0		"/soc/net@node-0/nae-0/ucore/src@1"
-#define	UCORE_1		"/soc/net@node-0/nae-1/ucore/src@1"
-#define	UCORE		"/soc/nae@node-0/ucore/src@1"
+#define	XLP9XX_UCORE	"/soc/net@node-%d/nae-%d/ucore/src@1"
+#define	UCORE		"/soc/nae@node-%d/ucore/src@1"
+#define	MAX_NAE		(is_nlm_xlp9xx() ? 2 : 1)
 
 /*
  * Max no of instructions x size of an instruction
@@ -581,13 +582,16 @@ static void *fdt_expand_into(const struct firmware *fw, int sizeincr)
 	return buf;
 }
 
+
 /*
  * Init function.
  */
 static int __init fdtconf_init(void)
 {
 	const struct firmware *fw;
-	int err, ret = 0, node;
+	int err, ret = 0, node, n, nae;
+	uint32_t nmask = 0;
+	char buf[128];
 
 	/* Register a platform device */
 	fdtdev = platform_device_register_simple("fdtconf", -1, NULL, 0);
@@ -650,27 +654,39 @@ static int __init fdtconf_init(void)
 	 */
 	release_firmware(fw);
 
+	/* Check for multinode */
+	nmask = (0x1 << NLM_NR_NODES) - 1;
+	nmask = cpu_to_fdt32(nmask);
+	if (nmask > 1) {
+		node = fdt_path_offset(fdt, "/doms/dom@0/owner-config");
+		if (node >= 0) {
+			fdt_setprop(fdt, node, "fmn", &nmask, sizeof(nmask));
+			fdt_setprop(fdt, node, "nae", &nmask, sizeof(nmask));
+		}
+	}
+
 	/*
 	 * Insert the default ucore code into the dtb.
 	 */
-	if (is_nlm_xlp9xx() || is_nlm_xlp5xx())
-		node = fdt_path_offset(fdt, UCORE_0);
-	else
-		node = fdt_path_offset(fdt, UCORE);
-
-	if (node >= 0) {
-		err = handle_opcodes(node, LINUX_UCORE);
-		if (err)
-			goto err_free;
-	}
-
-	/* Load default ucore code for NAE-1 in XLP9XX */
-	if (is_nlm_xlp9xx()) {
-		node = fdt_path_offset(fdt, UCORE_1);
-		if (node >= 0) {
+	for (n = 0; n < NLM_NR_NODES; n++) {
+		for (nae = 0; nae < MAX_NAE; nae++) {
+			if (is_nlm_xlp9xx() || is_nlm_xlp5xx())
+				sprintf(buf, XLP9XX_UCORE, n, nae);
+			else
+				sprintf(buf, UCORE, n);
+
+			node = fdt_path_offset(fdt, buf);
+			if (node < 0) {
+				dev_err(&fdtdev->dev, "Could not add ucore "
+					"code for NAE-%d on NODE-%d\n", n, nae);
+				continue;
+			}
 			err = handle_opcodes(node, LINUX_UCORE);
-			if (err)
-				goto err_free;
+			if (err) {
+				dev_err(&fdtdev->dev, "Could not add ucore "
+					"code for NAE-%d on NODE-%d\n", n, nae);
+				continue;
+			}
 		}
 	}
 
-- 
1.7.1

