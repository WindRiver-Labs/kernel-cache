From f81dc9232e45b83bd673e6dbfdcb96b64889787b Mon Sep 17 00:00:00 2001
From: Xiaoyi Liu <xiaoyi@broadcom.com>
Date: Wed, 4 Sep 2013 04:51:08 -0400
Subject: syslib: add bus number (1<<20) to xlp_sae_base and xlp_rsa_base defintion.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h
index 342f6f2..854799e 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h
@@ -508,6 +508,7 @@ extern int is_nlm_xlp(unsigned int chipid, unsigned int rev,  unsigned int ext);
 
 #define XLP_MAXDEV_PERNODE		8
 
+#define XLP9XX_SAE_RSA_BUS_NUM		(1<<20)
 #define XLP9XX_PCIE_DEV_BASE(SOC)		(((SOC##_DEVICE) << 15) | (SOC##_FUNC << 12))
 #define XLP_PCIE_DEV_BASE(node, SOC)                ((((node * XLP_MAXDEV_PERNODE) + SOC##_DEVICE) << 15) | (SOC##_FUNC << 12))
 
diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
index 445eb0c..f05e262 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
@@ -409,8 +409,8 @@ __inline__ void nlm_hal_init(void)
 			xlp_poe_base_pcie[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_POE)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 			xlp_sys_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE( XLP_SYS)) & 0x1fffffff; /*For now . Will be fixed soon.*/
 
-			xlp_sae_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_SAE)) & 0x1fffffff; /*For now . Will be fixed soon.*/
-			xlp_rsa_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
+			xlp_sae_base[node] = (xlp_io_base | XLP9XX_SAE_RSA_BUS_NUM | XLP9XX_PCIE_DEV_BASE(XLP_SAE)) & 0x1fffffff; /*For now . Will be fixed soon.*/
+			xlp_rsa_base[node] = (xlp_io_base | XLP9XX_SAE_RSA_BUS_NUM | XLP9XX_PCIE_DEV_BASE(XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 		} else
 		{
 			xlp_fmn_base[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(node, XLP_FMN)), PCI_MEM_BAR_0);
@@ -1167,16 +1167,16 @@ void nlm_hal_set_rsa_cge(int node, int enable)
 
 void nlm_hal_set_rsa_data_mode(int node, int bigend_fmt)
 {
-	unsigned long rsa_base = xlp_rsa_base[node] | 1 << 20; //bus is 1
+	unsigned long rsa_base = xlp_rsa_base[node];
 	uint64_t d64 = nlm_hal_read_64bit_reg(rsa_base, 0x20);
-//	nlm_print("%s %d in, %llx\n", __FUNCTION__, __LINE__, d64);
+	//nlm_print("%s %d in, %llx\n", __FUNCTION__, __LINE__, d64);
 	if(!bigend_fmt)
 		d64 |= (1ULL<<20);
 	else
 		d64 &= ~(1ULL<<20);
 	nlm_hal_write_64bit_reg(rsa_base, 0x20, d64);
 	d64 = nlm_hal_read_64bit_reg(rsa_base, 0x20);
-//	nlm_print("%s %d out, %llx\n", __FUNCTION__, __LINE__, d64);
+	//nlm_print("%s %d out, %llx\n", __FUNCTION__, __LINE__, d64);
 }
 
 #define NLM_SAE_ENGINE_SELECT_REG_0 0x41
@@ -1215,9 +1215,8 @@ void nlm_hal_set_rsa_engine_sel(int node)
 	}
 
 	if (is_nlm_xlp9xx())  {
-		n = 3;
-		val = 0xffffffff; /* got it from verification code */
-
+            /* XLP9XX configure RSA engine selection as default value */
+            return;
 	} else if(is_nlm_xlp3xx()) {
 		n = 1;
 		val = 0xffff;
-- 
1.7.1

