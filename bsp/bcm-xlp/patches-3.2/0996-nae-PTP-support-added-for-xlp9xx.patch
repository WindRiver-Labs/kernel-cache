From cfcbcc833886b971e8cf2f0f2e214cfa6e87063b Mon Sep 17 00:00:00 2001
From: ajesh <ajesh@broadcom.com>
Date: Thu, 24 Jul 2014 16:18:27 +0530
Subject: nae: PTP support added for xlp9xx

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_dev.h b/arch/mips/netlogic/lib/netlib/include/netsoc_dev.h
index efae472..7897cf9 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_dev.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_dev.h
@@ -179,8 +179,8 @@ PTP_TMR3_HI		            = 0x791,
 PTP_TMR3_LO		            = 0x792,
 
 IOSYS_RTC_CMD      = 0x7C0,
-IOSYS_RTC_RDATA_HI = 0x7C1,
-IOSYS_RTC_RDATA_LO = 0x7C2,
+IOSYS_RTC_RDATA_LO = 0x7C1,
+IOSYS_RTC_RDATA_HI = 0x7C2,
 
 };
 
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
index 1c2e8d3..1531cab 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
@@ -519,49 +519,63 @@ static inline void __netsoc_1588_ptp_clk_sel(nae_t *nae, int clk_type)
 
 static inline void __netsoc_1588_ld_user_val(nae_t *nae, uint32_t user_val_hi,  uint32_t user_val_lo)
 {
-        uint32_t val;
-        netsoc_write_nae_reg(nae->nae_base, PTP_USER_VALUE_HI, user_val_hi);
-        netsoc_write_nae_reg(nae->nae_base, PTP_USER_VALUE_LO, user_val_lo);
-        val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
-        netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, val|(1<<6));
+	uint32_t val;
+	netsoc_write_nae_reg(nae->nae_base, PTP_USER_VALUE_HI, user_val_hi);
+	netsoc_write_nae_reg(nae->nae_base, PTP_USER_VALUE_LO, user_val_lo);
+	val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
+	netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, val|(1<<6));
+	nlm_mdelay(2);
+	val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
+	netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, (val & ~(1<<6)));
 }
 
 static inline void __netsoc_1588_ld_offs(nae_t *nae, uint32_t ptp_off_hi,  uint32_t ptp_off_lo)
 {
-        uint32_t val;
-        netsoc_write_nae_reg(nae->nae_base, PTP_OFFSET_HI, ptp_off_hi);
-        netsoc_write_nae_reg(nae->nae_base, PTP_OFFSET_LO, ptp_off_lo);
-        val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
-        netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, val|(1<<2));
+	uint32_t val;
+	netsoc_write_nae_reg(nae->nae_base, PTP_OFFSET_HI, ptp_off_hi);
+	netsoc_write_nae_reg(nae->nae_base, PTP_OFFSET_LO, ptp_off_lo);
+	val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
+	netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, val|(1<<2));
+	nlm_mdelay(2);
+	val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
+	netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, (val & ~(1<<2)));
 }
 
 static inline void __netsoc_1588_ld_freq_mul(nae_t *nae, uint32_t ptp_inc_den, uint32_t ptp_inc_num,
                                         uint32_t ptp_inc_intg)
 {
-        uint32_t val;
-        netsoc_write_nae_reg(nae->nae_base, PTP_INC_DEN, ptp_inc_den);
-        netsoc_write_nae_reg(nae->nae_base, PTP_INC_NUM, ptp_inc_num);
-        netsoc_write_nae_reg(nae->nae_base, PTP_INC_INTG, ptp_inc_intg);
-        val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
-        netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, val|(1<<1));
+	uint32_t val;
+	netsoc_write_nae_reg(nae->nae_base, PTP_INC_DEN, ptp_inc_den);
+	netsoc_write_nae_reg(nae->nae_base, PTP_INC_NUM, ptp_inc_num);
+	netsoc_write_nae_reg(nae->nae_base, PTP_INC_INTG, ptp_inc_intg);
+	val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
+	netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, val|(1<<1));
+	nlm_mdelay(2);
+	val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
+	netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, (val & ~(1<<1)));
 }
 
 static inline void __netsoc_reset_1588_accum(nae_t *nae)
 {
-        uint32_t val;
-        val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
-        netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, val|0x1);
+	uint32_t val;
+	val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
+	netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, val|0x1);
+	nlm_mdelay(2);
+	val = netsoc_read_nae_reg(nae->nae_base, PTP_CONTROL);
+	netsoc_write_nae_reg(nae->nae_base, PTP_CONTROL, (val & ~(0x1)));
+	val = netsoc_read_nae_reg(nae->nae_base, 0x7bf);
+	netsoc_write_nae_reg(nae->nae_base, 0x7bf, (val & ~(0x1 << 3)));
 }
 
 static inline void __netsoc_prepad_enable(nae_t *nae, int size)
 {
-        uint32_t val;
-        val = netsoc_read_nae_reg(nae->nae_base, RX_CONFIG);
-        val |= (1 << 13); /* prepad enable */
+	uint32_t val;
+	val = netsoc_read_nae_reg(nae->nae_base, RX_CONFIG);
+	val |= (1 << 13); /* prepad enable */
 	val &= ~(0xFF << 14);
-	val |= (3<<20) | (2 << 18) | (1<< 16) | (0<<14);
-        val |= ((((size / 16) - 1) & 0x3) << 22); /* prepad size */
-        netsoc_write_nae_reg(nae->nae_base, RX_CONFIG, val);
+	val |= (uint32_t)((3<<20) | (2 << 18) | (1<< 16) | (0<<14));
+	val |= (uint32_t)((((size / 16) - 1) & 0x3) << 22); 
+	netsoc_write_nae_reg(nae->nae_base, RX_CONFIG, val);
 }
 
 static inline uint32_t __netsoc_get_rtc(nae_t *nae, uint32_t* p_val_hi,  uint32_t* p_val_lo)
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index f4531b4..cb29995 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -1397,7 +1397,11 @@ void __netsoc_config_parserfifo(nae_t *nae, int hw_port_id, uint32_t start, uint
 	val = netsoc_read_nae_reg(nae->nae_base, PARSER_SEQ_FIFOTH_CFG);
 	netsoc_api_print(NETSOC_APIDBG_CONFIG,"PARSER_SEQ_FIFOTH_CFG xoff %d xon %d \n",
 			((val >> 12) & 0xfff), (val & 0xfff));
-	val = ~(1<<31) | (hw_port_id & 0x1f);
+	val = netsoc_read_nae_reg(nae->nae_base, PARSER_SEQ_FIFO_CFG);
+	val &= ~(1<<31);
+	if (nae->ptp1588_enabled) {
+		val &= ~(1 << 30);
+	}
 	netsoc_write_nae_reg(nae->nae_base, PARSER_SEQ_FIFO_CFG, val);
 }
 
-- 
1.7.1

