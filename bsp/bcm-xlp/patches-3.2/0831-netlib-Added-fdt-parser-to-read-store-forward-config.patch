From e598e334ad0a3d60e5a7afb49b0fc5cfe8c7271b Mon Sep 17 00:00:00 2001
From: Jayanthi A <jayanthi.annadurai@broadcom.com>
Date: Sat, 2 Nov 2013 05:32:50 -0700
Subject: netlib: Added fdt parser to read store-forward configuration from dts file. Fixed FRIN fifo threshold

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
index 7e420dc..4b3076d 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
@@ -358,6 +358,12 @@ static inline uint32_t update_rx_buf_size(nae_t *nae, uint32_t *size)
 	return 0;
 }
 
+static inline uint32_t update_intf_buf_size(nae_t *nae, uint32_t *size)
+{
+	*size = (current_netsoc->ingress.max_if_fifo / nae->num_ports);
+        return 0;
+}
+
 static inline uint32_t get_rx_buf_size(uint32_t intf_type)
 {
         switch(intf_type) {
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c b/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
index 41ca6b3..10c5c26 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
@@ -980,7 +980,7 @@ static int fdt_parse_port_config(void *fdt, nae_t *nae_cfg)
 		}
 		else if (intf_type == XLAUI_IF) {
 			if (!socnet_version_v0) {
-				sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/xgmac", node, nae_cfg->nae_id, block);
+				sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/xlgmac", node, nae_cfg->nae_id, block);
 			}
 
 			fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
@@ -1420,6 +1420,27 @@ int fdt_get_nae_ptp_config(void *fdt, nae_t *nae)
         return 0;
 }
 
+
+int fdt_get_nae_strfwd_config(void *fdt, nae_t *nae)
+{
+        int nodeoffset, plen;
+        char path_str[50];
+        uint32_t *pval;
+
+        sprintf(path_str, "/soc/net@node-%d/nae-%d", nae->node, nae->nae_id);
+        nodeoffset = fdt_path_offset(fdt, path_str);
+        if (nodeoffset >= 0) {
+              pval = (uint32_t *)fdt_getprop(fdt, nodeoffset, "strfwd-enable", &plen);
+              if (pval != NULL) {
+                      nae->str_fwd_enabled = fdt32_to_cpu(*(uint32_t *)(pval));
+              } 
+              else {  
+                      nae->str_fwd_enabled = 0;
+              }
+        }
+        return 0;
+}
+
 int fdt_get_nae_frindesc_mode(void *fdt, nae_t *nae)
 {
         int nodeoffset, plen;
@@ -1450,6 +1471,7 @@ int fdt_parse_netsoc_nae_config(void *fdt, int dom_id, nae_t *nae)
 
         if (is_nlm_xlp9xx()) {
              fdt_get_nae_frequency(fdt, nae);
+	     fdt_get_nae_strfwd_config(fdt, nae);
         }
         else {
              nae->frequency = nlm_hal_get_fdt_freq(fdt, NLM_NAE);
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index 0004a8f..dcf967e 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -1418,6 +1418,7 @@ void __netsoc_config_ingress_fifo(nae_t *nae)
 
 		if (nae->sgmii_complex_map == 0) {
 			update_rx_buf_size(nae, &rx_buf_size);
+			update_intf_buf_size(nae, &nae->ports[port].intf_fifo_size);
 			nae->ports[port].rx_buf_size = rx_buf_size;
 		}
 
@@ -2505,7 +2506,12 @@ static int __netsoc_init_netior(nae_t *nae)
 			complex_mask |= (0xf << (block * 4));
 		}
 		else if (nae->xlgmac_complex_map & (1 << block)) {
-			ifcredit_val = get_iface_credit(XLAUI_IF);
+			if (nae->sgmii_complex_map == 0) {
+                        	update_intf_buf_size(nae, &ifcredit_val);   	
+				ifcredit_val = ifcredit_val - 1;
+			}
+			else
+			   	ifcredit_val = get_iface_credit(XLAUI_IF);
 			ifcredit |= (ifcredit_val << (block * 8));
 			complex_mask |= (0xf << (block * 4));
 		}
@@ -3837,7 +3843,7 @@ int __netsoc_pcs_init(nae_t *nae)
 static int __netsoc_config_freein_fifo(nae_t *nae)
 {
         uint32_t reg, size, spillsz;
-        int start = 0, i,  th_hi, th_lo;
+        int start = 0, i,  th_hi, th_lo, minsz;
         uint64_t spill_addr, spill_mem_addr, spill_mem_size;
         int freein_fifo_total_queues = nae->frin_total_queue;
         void *buf;
@@ -3937,9 +3943,23 @@ static int __netsoc_config_freein_fifo(nae_t *nae)
                 }
         }
 
+	for(i=0; i < freein_fifo_total_queues; i++) {
+		if (i == 0)
+			minsz = nae->freein_fifo_onchip_num_descs[i];
+		if ((nae->freein_fifo_onchip_num_descs[i]) && (nae->freein_fifo_onchip_num_descs[i]) < minsz)
+			minsz = nae->freein_fifo_onchip_num_descs[i];
+	}
+	minsz /= 2;
+
         if(spillsz) {
-                th_hi = 6; /* Defualt value */
-                th_lo = 0xe; /* Default value */
+		if (is_nlm_xlp9xx()) {
+			th_hi = minsz / 4;
+			th_hi = minsz / 2;
+		}
+		else {
+	                th_hi = 6; /* Defualt value */
+        	        th_lo = 0xe; /* Default value */
+		}
                 /* spill credits [27:24] has to be 2 */
                 reg = (2 << 24) | th_lo | (th_hi << 12);
                 netsoc_write_nae_reg(nae->nae_base, FREE_FIFO_THRESHOLD_CFG, reg);
@@ -4127,7 +4147,8 @@ int __netsoc_init_nae(nae_t *nae)
 
         	/* Disable RX enable bit in RX_CONFIG */
 	        rx_config = netsoc_read_nae_reg(nae->nae_base, RX_CONFIG);
-        	rx_config &= 0xfffffffe;
+        	rx_config &= 0xffeffe;
+		rx_config |= (2<<24);
 		if (nae->freein_uniq_sz)
 			rx_config |= (1<<31);
 	        netsoc_write_nae_reg(nae->nae_base, RX_CONFIG, rx_config);
@@ -4146,9 +4167,10 @@ int __netsoc_init_nae(nae_t *nae)
 
 		if (is_nlm_xlp9xx()) {
 		      /* Configured for default MTU. This may not work for ports with different MTU size. */
-		      netsoc_write_nae_reg(nae->nae_base, RX_ST_FWD_MODE, (1<<10) | (1536/16));
+		       if (nae->str_fwd_enabled)
+		       		netsoc_write_nae_reg(nae->nae_base, RX_ST_FWD_MODE, (1<<10) | (1536/16));
 
-		      __netsoc_drop_runt_pkts(nae, 1);
+		       __netsoc_drop_runt_pkts(nae, 1);
                       /* Disable WRED discard for now. No PRM/document available to know how to configure WRED thresholds */
                       __netsoc_config_wred_disable(nae);
                 }
-- 
1.7.1

