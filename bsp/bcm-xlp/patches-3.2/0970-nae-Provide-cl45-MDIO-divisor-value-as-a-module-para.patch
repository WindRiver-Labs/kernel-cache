From 6e698075a0ae1fc3af1c2fd73c29323d8f2bb52e Mon Sep 17 00:00:00 2001
From: P. Sadik <psadik@broadcom.com>
Date: Tue, 13 May 2014 15:50:16 +0530
Subject: nae: Provide cl45 MDIO divisor value as a module param for Linux module.

The default value is 3 which the highest possible. With this, the RXAUI
initialization will take considerable time. On systems that has better
MDIO clocking, the value could be lowered.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index b6d1603..44e7ca2 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -36,8 +36,16 @@
 #include "netsoc_libiface.h"
 #include "ext_phy.h"
 
+int cl45_div = 3;
+#ifdef NLM_HAL_LINUX_KERNEL
+#include <linux/module.h>
+module_param(cl45_div, int, 0);
+#endif
+
+
 /*#define KVM_GUEST_MODE_EN	1*/
 
+
 static unsigned int ucore_shared_scratch[NLM_MAX_NODES][XLP9XX_MAX_NAE_PERNODE][256];
 static unsigned int ucore_shared_scratch_words[NLM_MAX_NODES][XLP9XX_MAX_NAE_PERNODE];
 
@@ -116,7 +124,7 @@ static uint32_t nae_get_INT_MDIO_DIV(void)
 
 static uint32_t nae_get_EXT_XG_MDIO_DIV(void)
 {
-	return ((0x7F << EXT_XG_MDIO_CTRL_XDIV_POS) | (3 << EXT_XG_MDIO_CTRL_MCDIV_POS));
+	return ((0x7F << EXT_XG_MDIO_CTRL_XDIV_POS) | (cl45_div << EXT_XG_MDIO_CTRL_MCDIV_POS));
 }
 
 /*
@@ -1012,7 +1020,7 @@ void __netsoc_config_flow_base(nae_t *nae)
 
 	if (IS_NLM_XLP9XX_FAMILY)
 		per_port_num_flows = XLP9XX_MAX_FLOWS / nae->num_ports;
-	else	
+	else
 		per_port_num_flows = XLP_MAX_FLOWS / nae->num_ports;
 
 	for (port = 0, hw_port = 0 ; port < nae->num_ports; hw_port++) {
@@ -1196,7 +1204,7 @@ void __netsoc_config_context_xoff_thr(nae_t *nae, net_port_t *netport, int thgrp
 			}else if(netport->iftype == XFI_IF){
 				val = maxbuf / 16 ;
 				xoff = ((val * 4) << 2);
-				xon = ((val * 2) << 2);	
+				xon = ((val * 2) << 2);
 			}else if(netport->iftype == RXAUI_IF){
 				val = maxbuf / 16 ;
 				xoff = ((val * 8) << 2);
@@ -1204,7 +1212,7 @@ void __netsoc_config_context_xoff_thr(nae_t *nae, net_port_t *netport, int thgrp
 			}else if(netport->iftype == SGMII_IF){
 				val = maxbuf / 16 ;
 				xoff = ((val * 4) << 2);
-				xon = ((val * 2) << 2);	
+				xon = ((val * 2) << 2);
 			}
 		}else{
 			val = maxbuf / 4;
@@ -1213,7 +1221,7 @@ void __netsoc_config_context_xoff_thr(nae_t *nae, net_port_t *netport, int thgrp
 		}
 		val = (xoff << 3) | (xon << 17) | thgrp;
 	}
-	
+
 	else {
 		maxbuf=maxbuf<<2;
 		if (netport->iftype == SGMII_IF)
@@ -1295,7 +1303,7 @@ void __netsoc_config_rxbuffer(nae_t *nae, int context_base, int num_channels, ui
 				context_base + offset, base, size, thrgrp);
 		val = 0x80000000 | ((base << 2) & 0x3fff); /* base */
                 val |= (((size << 2)  & 0x3fff) << 16); /* size */
-		if ((IS_NLM_XLP9XX_FAMILY) && (nae->str_fwd_enabled)) 
+		if ((IS_NLM_XLP9XX_FAMILY) && (nae->str_fwd_enabled))
 			val |= (1<<15);
                 netsoc_write_nae_reg(nae_base, RX_BUFFER_BASE_DEPTH_REG, val);
 
@@ -1319,7 +1327,7 @@ void __netsoc_config_parserfifo(nae_t *nae, int hw_port_id, uint32_t start, uint
 	uint32_t xon, xoff, inflight_len;
         static uint32_t prev_size = 0;
 
-	if (nae->ptp1588_enabled) { 
+	if (nae->ptp1588_enabled) {
                 // MD is zero, 1024 entries
                 val = 0;
         }
@@ -1361,7 +1369,7 @@ void __netsoc_config_parserfifo(nae_t *nae, int hw_port_id, uint32_t start, uint
 		if (IS_NLM_XLP9XX_FAMILY) {
                         xoff = size - 30 ;
                         xon = xoff/2;
-	
+
                         val = (xoff<<12) | (xon);
                 }
                 else {
@@ -1560,7 +1568,7 @@ int __netsoc_config_nae_global(nae_t *nae)
 	netsoc_write_nae_reg(nae->nae_base, RX_FREE_LIFO_TH, (8 << 8) | (2 * current_netsoc->max_ucores));
 
 	__netsoc_config_ingress_fifo(nae);
-	
+
 	__netsoc_config_rx_calendar(nae);
 	if (!is_nlm_xlp8xx_ax())
 		__netsoc_config_tx_calendar(nae);
@@ -2027,7 +2035,7 @@ void __netsoc_set_xlgmac_enable(net_port_t *netport)
         __netsoc_write_xlgmac_reg(netport, XLAUI_RX_FIFO_SECTIONS, val);
 
 	val = 0x220d3; // PFC disable
-        if (netport->vlan_pri_en) {  
+        if (netport->vlan_pri_en) {
 		val |= (1<<19); /*PFC enable*/
 	}
         __netsoc_write_xlgmac_reg(netport, XLAUI_COMMNAD_CONFIG, val);
@@ -2115,7 +2123,7 @@ static void __netsoc_config_sgmii(net_port_t *netport)
 
         // Read PHY status from extended status
         __netsoc_get_phy_status(netport, &speed, &duplex);
-		
+
 		if(is_nlm_xlp8xx_b0())
 		{
 			speed = SPEED_1000M;
@@ -2288,9 +2296,9 @@ static void __netsoc_config_xaui(net_port_t *netport)
 
                 /*
                  * Configuring the OFF/ON timer
-                 * 31:16  - In PFC mode is used as the Xoff value                                     
-                 * 15:0   - In PFC mode is used as the Xon value                                      
-                 *        - in Link level FC mode, is used as the Xoff value.                         
+                 * 31:16  - In PFC mode is used as the Xoff value
+                 * 15:0   - In PFC mode is used as the Xon value
+                 *        - in Link level FC mode, is used as the Xoff value.
                  */
            if (netport->vlan_pri_en) {
                 /* PFC mode:  OffTimer = minval,  OnTimer = 0x0000 */
@@ -2300,7 +2308,7 @@ static void __netsoc_config_xaui(net_port_t *netport)
                 val = (minval & 0x0000ffff);
            }
            netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL2, val);
-	}		
+	}
 
         /* set xaui tx threshold */
         val = netsoc_read_mac_reg(mac_base, NETIOR_XGMAC_CTRL3);
@@ -2309,19 +2317,19 @@ static void __netsoc_config_xaui(net_port_t *netport)
 	if(IS_NLM_XLP9XX_FAMILY){
 		if(rxaui_en)
 	        	val |= ((5 << 10) & 0x00007c00);
-		else 
-	        	val |= ((7 << 10) & 0x00007c00); 
+		else
+	        	val |= ((7 << 10) & 0x00007c00);
 	}
 	else{
         	val |= (15 << 10);
 	}
-        netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL3, val); 
-        
+        netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL3, val);
+
 	val = netsoc_read_mac_reg(mac_base, NETIOR_XGMAC_CTRL3);
 	val &= 0xfffffc00;
 	val |= netport->context_base;
 
-        netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL3, val); 
+        netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL3, val);
 	netsoc_api_print(NETSOC_APIDBG_PORT, "%s XAUI Config Complete block %d \n", __func__, netport->hw_port_id >> 2); return;
 }
 
@@ -2369,8 +2377,8 @@ static void __netsoc_config_xlgmac(net_port_t *netport)
 	//__netsoc_xlgmac_fec_enable(netport);
 	__netsoc_set_xlgmac_enable(netport);
 	__netsoc_set_xlgmac_pause_config(netport);
-        if (netport->vlan_pri_en) {  
-		uint32_t val = 0;	
+        if (netport->vlan_pri_en) {
+		uint32_t val = 0;
 		val = netsoc_read_nae_reg(nae->nae_base, CH_CLASS_PORT_EN);
 		netsoc_write_nae_reg(nae->nae_base, CH_CLASS_PORT_EN, val | (1<<netport->hw_port_id));
 		val = netsoc_read_nae_reg(nae->nae_base, CH_CLASS_USE_VLAN_PRI);
@@ -2417,7 +2425,7 @@ static void __netsoc_config_xfi(net_port_t *netport)
 	lane_cfg = netsoc_read_mac_reg(netior_base, LANE_CFG_CPLX_4);
 	if ((netport->hw_port_id / 4) == 0) {
 		lane_cfg |= (1<<17);
-	}	
+	}
 	else if ((netport->hw_port_id / 4) == 1) {
 		lane_cfg |= (1<<19);
 	}
@@ -2464,8 +2472,8 @@ static void __netsoc_config_xfi(net_port_t *netport)
                 val = 0x0000F123;          // Link level FC: OffTimer = 0xF123
         }
 
-	if (netport->vlan_pri_en) {  
-		uint32_t val = 0;	
+	if (netport->vlan_pri_en) {
+		uint32_t val = 0;
 		val = netsoc_read_nae_reg(nae->nae_base, CH_CLASS_PORT_EN);
 		netsoc_write_nae_reg(nae->nae_base, CH_CLASS_PORT_EN, val | (1<<netport->hw_port_id));
 		val = netsoc_read_nae_reg(nae->nae_base, CH_CLASS_USE_VLAN_PRI);
@@ -2642,7 +2650,7 @@ static int __netsoc_init_netior(nae_t *nae)
 		}
 		else if (nae->xlgmac_complex_map & (1 << block)) {
 			if (nae->sgmii_complex_map == 0) {
-                        	update_intf_buf_size(nae, &ifcredit_val);   	
+                        	update_intf_buf_size(nae, &ifcredit_val);
 				ifcredit_val = ifcredit_val - 1;
 			}
 			else
@@ -3189,7 +3197,7 @@ int __netsoc_config_flow_control(net_port_t *netport, uint32_t enable)
                                 else
                                         val |= (1 << NETIOR_GMAC_TX_PAUSE_POS);
                                 netsoc_write_mac_reg(mac_base, NETIOR_GMAC_CTRL1, val);
-                                netsoc_write_mac_reg(mac_base, NETIOR_GMAC_CTRL2,  0xF1230000);		
+                                netsoc_write_mac_reg(mac_base, NETIOR_GMAC_CTRL2,  0xF1230000);
         			netsoc_write_nae_iface_reg(nae_base, GMAC_PFC_REPEAT , (unsigned int)((0x40 << 22) | 0xff));
                         }
                         else {
@@ -3231,11 +3239,11 @@ int __netsoc_config_flow_control(net_port_t *netport, uint32_t enable)
 					netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL1, val);
 				}
 				if(is_nlm_xlp9xx()){
-					if(netport->iftype != XFI_IF)	
+					if(netport->iftype != XFI_IF)
 	        				netsoc_write_nae_iface_reg(nae_base, XGMAC_PFC_REPEAT , (unsigned int)((0x3 << 22) | 0x70000));
 					else
 	        				netsoc_write_nae_iface_reg(nae_base, XGMAC_PFC_REPEAT , (unsigned int)((0x3 << 22) | 0x8000));
-				}	
+				}
                         }
                         else {
 			        if (netport->iftype != XFI_IF) {
@@ -4056,7 +4064,7 @@ static int __netsoc_config_freein_fifo(nae_t *nae)
                                }
                                blk_cmplx_map = blk_cmplx_map >> 1;
                                sfifo = i * MAX_PORTS_PERBLOCK;
-                               nae->freein_fifo_onchip_num_descs[sfifo] = nae->freein_fifo_onchip_num_descs[sfifo+2] = nae->freein_fifo_onchip_num_descs[sfifo]/2;             
+                               nae->freein_fifo_onchip_num_descs[sfifo] = nae->freein_fifo_onchip_num_descs[sfifo+2] = nae->freein_fifo_onchip_num_descs[sfifo]/2;
 			}
                        /*rest make them zero*/
 			sfifo = current_netsoc->max_ports;
@@ -4136,7 +4144,7 @@ static int __netsoc_config_freein_fifo(nae_t *nae)
                 }
         }
 
-#ifdef KVM_GUEST_MODE_EN 
+#ifdef KVM_GUEST_MODE_EN
 	netsoc_write_nae_reg(nae->nae_base, 0x90, 0);
 #endif
 
@@ -4380,9 +4388,6 @@ int __netsoc_init_nae(nae_t *nae)
                 __netsoc_init_netior(nae);
 
 		__netsoc_init_all_ports(nae);
-		
-//		if(IS_NLM_XLP9XX_FAMILY)
-//			__netsoc_bkpl_ether_init(nae); /*do KR/KR4 lane configuration*/	
 
 		if (nae->freein_uniq_sz) {
 		        for (frin_q = 0; frin_q < __netsoc_get_max_frinqs(); frin_q++) {
-- 
1.7.1

