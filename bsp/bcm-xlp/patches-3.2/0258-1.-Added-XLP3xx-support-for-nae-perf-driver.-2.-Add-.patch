From 12ba3fdf6eb37c906c5352603249e99847518d88 Mon Sep 17 00:00:00 2001
From: Mehul Vora <vmehul@netlogicmicro.com>
Date: Tue, 4 Oct 2011 02:54:27 -0700
Subject: 1. Added XLP3xx support for nae-perf driver. 2. Add frin-queue-base and frin-total-queue information in the fdt.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/boot/dts/linux-perf.dts b/arch/mips/boot/dts/linux-perf.dts
index 8d96610..ef2993b 100644
--- a/arch/mips/boot/dts/linux-perf.dts
+++ b/arch/mips/boot/dts/linux-perf.dts
@@ -41,7 +41,7 @@
 					0x20000000 0x60000000>;  // 2586M at 512M
 			};
                         fmn {
-                                node_0_vc_mask = <0xffffffff 0xffffffff 0xffffffff 0xffffffff>;
+                                node_0_vc_mask = <0x00000000 0x00000000 0x00000000 0x00000000>;
                                 node_1_vc_mask = <0xffffffff 0xffffffff 0xffffffff 0xffffffff>;
                                 node_2_vc_mask = <0xffffffff 0xffffffff 0xffffffff 0xffffffff>;
                                 node_3_vc_mask = <0xffffffff 0xffffffff 0xffffffff 0xffffffff>;
diff --git a/arch/mips/boot/dts/storm-linux-perf-nae.dts b/arch/mips/boot/dts/storm-linux-perf-nae.dts
new file mode 100644
index 0000000..c16173f
--- /dev/null
+++ b/arch/mips/boot/dts/storm-linux-perf-nae.dts
@@ -0,0 +1,125 @@
+/* XLP8XX Device Tree Source 
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "MIPS,XLP3XX NAE CFG";
+	compatible = "NETL,XLP3XX";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-map = <
+		     // NAE -> CPU mapping 
+		     // Freeback VC = 0
+		      0   1  1   5  2   9  3  13
+		      4  17  5  21  6  25  7  29
+		      8  33  9  37 10  41 11  45
+	 	     12  49 13  53 14  57 15  61
+
+		     // NAE -> NAE mapping 
+		     32	496 33 497 34 498 35 499
+		     36	500 37 501 38 502 39 503
+
+		     // NULL FBID Should map to cpu0 to detect NAE send message errors 
+		     127 0
+
+
+		>;
+        // FLOW Table Generation: CRC16 polynomial
+  	flow_crc_poly = <0xffff>;
+
+	ucore {
+		src@1 {
+			file = "perf-ucore.c";
+			mask = <0xff>;
+		};
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		// Supported modes are 'enque', 'serial', 'bypass'
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+
+	};
+	
+    complex@0 {
+                device_type = "nae-complex";
+                mode = "xaui";
+
+                loopback_mode = <0>;
+
+                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                iface_fifo_sizes = <52>;
+
+                // Max parser sequence fifo size 1024 packets
+                // (if 1588 Timestamp is not required, then max size increases to 2048)
+                num_channels = < 1>;
+                parser_sequence_fifo_sizes = <120>;
+                //parser_sequence_fifo_sizes = <62 >;
+
+                // Since rx_buffer is per context, we can have a few different ways
+                //  to populate the operand
+                rx_buffer_sizes = <944>;
+
+                // Max available descriptors are 1024 (across all complexes).
+                // Per port num_free_descriptors must be even number
+                num_free_descs = < 150 >;
+                free_desc_sizes = < 2048 >;
+                ucore_mask = <0xff>;
+        };
+
+	complex@1 {
+                device_type = "nae-complex";
+                mode = "xaui";
+
+                loopback_mode = <0>;
+
+                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                iface_fifo_sizes = <52>;
+
+                // Max parser sequence fifo size 1024 packets
+                // (if 1588 Timestamp is not required, then max size increases to 2048)
+                num_channels = < 1>;
+                parser_sequence_fifo_sizes = <120>;
+                //parser_sequence_fifo_sizes = <62 >;
+
+                // Since rx_buffer is per context, we can have a few different ways
+                //  to populate the operand
+                rx_buffer_sizes = <944>;
+
+                // Max available descriptors are 1024 (across all complexes).
+                // Per port num_free_descriptors must be even number
+                num_free_descs = < 150 >;
+                free_desc_sizes = < 2048 >;
+                ucore_mask = <0xff>;
+        };
+};
diff --git a/arch/mips/boot/dts/storm-linux-perf.dts b/arch/mips/boot/dts/storm-linux-perf.dts
new file mode 100644
index 0000000..3613ff2
--- /dev/null
+++ b/arch/mips/boot/dts/storm-linux-perf.dts
@@ -0,0 +1,78 @@
+/* XLP8XX Device Tree Source
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "MIPS,XLP3XX";
+	compatible = "NETL,XLP3XX_A0";
+
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <0>;
+		bootargs = "ncores=4 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0xffff -- ";
+		domain_heap = <0x80000000 0x20000000>;
+	};
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			cpu {
+				onlinemask = <0xffff>;
+                                nae-rx-vc = <0>;
+                                nae-fb-vc = <1>;
+			};
+			uart {
+				id = <0>;
+				owner = <1>;
+				sharedcfg = <0x1f000000>;
+			};
+			memory {
+				reg = <0x01000000 0x0B000000	// 176M at 16M
+					0x20000000 0x60000000>;  // 2586M at 512M
+			};
+                        fmn {
+								node_0_vc_mask = <0x00000000 0x00000000 0x00000000 0x00000000>;
+                                node_1_vc_mask = <0xffffffff 0xffffffff 0xffffffff 0xffffffff>;
+                                node_2_vc_mask = <0xffffffff 0xffffffff 0xffffffff 0xffffffff>;
+                                node_3_vc_mask = <0xffffffff 0xffffffff 0xffffffff 0xffffffff>;
+                        };
+			pic {
+			};
+		};
+	};
+
+	chosen {
+		bootargs = " xlp_noi2c console=ttyS0,115200 rdinit=/sbin/init rhash_entries=1048576";
+	};
+
+	/* These binaries are downloaded at the resp physical memory locations
+	 * by their corresponding bootstrapping loaders. For example,
+	 * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
+	 * at 1M, hypervisor by u-boot hypervisor at 136M.
+	 * On simulator all these binaries are pre-loaded by using '-F' option
+	 * for convenience. On silicon, they will be loaded by their corresponding
+	 * temporary download locations the stage-1/stage-2 firmware
+	 */
+	firmware-download {
+		u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
+		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
+		dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
+		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
+	};
+
+	soc {
+
+	};
+};
+
-- 
1.7.1

