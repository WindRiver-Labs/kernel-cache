From befba62d5a46821e3352d3d1725836592c044a09 Mon Sep 17 00:00:00 2001
From: P. Sadik <psadik@broadcom.com>
Date: Wed, 10 Jul 2013 17:19:05 +0530
Subject: CDE: Modified cde code and cde test application for xlp9xx.

     Modified on_chip.c to have interrupt handler for xlp9xx.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/misc/netlogic/nlm_cde/cdetest.c b/drivers/misc/netlogic/nlm_cde/cdetest.c
index 7fdf917..484350d 100644
--- a/drivers/misc/netlogic/nlm_cde/cdetest.c
+++ b/drivers/misc/netlogic/nlm_cde/cdetest.c
@@ -63,7 +63,7 @@ void test()
 static int cde_op(int op, char *buf, int len)
 {
         int ret;
-       
+
         ret = ioctl(dfd, op, (unsigned long)&cde);
 
 	if (ret < 0) {
@@ -122,7 +122,7 @@ int main(int argc, char *argv[])
 	}
 	else {
 	   	printf("read %d bytes of data from test file\n", data_len);
-	}	
+	}
 
 	char *dev_name = "/dev/nlm_cde";
 	dfd = open(dev_name, O_RDWR);
@@ -195,8 +195,8 @@ printf("\n size = %d\n", size);
         }
         return 0;
         }
-        
-	do 
+
+	do
         {
 		ret = cde_op(0xf0002, buf, data_len);//deflate
 	        //if (ret < 0) break;
@@ -212,22 +212,22 @@ printf("\n size = %d\n", size);
 
 		ret = cde_op(0xf0001, buf1, ret); //inflate
 	        if (ret < 0) break;
-	
+
 	        usleep(sleep_usec);
 
 	 	ret = cde_result(buf2, LEN);
 	        if (ret < 0) break;
                 write(vfd, buf2, ret);
-	} 
+	}
         while (0);
 
-	close(dfd);	
+	close(dfd);
 
 	if (ret <= 0) {
 	         printf("test aborted !\n");
 	         return -1;
         }
-	
+
         if (ret != data_len) {
 	         printf("test failed: size mismatch !\n");
 	         return -1;
@@ -239,7 +239,7 @@ printf("\n size = %d\n", size);
 	         return -1;
         }
 
-	printf("test passed !\n");	       
+	printf("test passed !\n");
         return 0;
 }
 
diff --git a/drivers/misc/netlogic/soc_interface/on_chip.c b/drivers/misc/netlogic/soc_interface/on_chip.c
index 4df329e..94dcf09 100644
--- a/drivers/misc/netlogic/soc_interface/on_chip.c
+++ b/drivers/misc/netlogic/soc_interface/on_chip.c
@@ -104,6 +104,41 @@ static int xlp_napi_vc_count = 0;
 static int xlp_fmn_init_done = 0;
 extern unsigned int xlp_napi_vc_mask;
 
+/* This structure will work for CDE. It will work for NAE also but it is not correfcft.
+   Need to fill all valid station numbers*/
+static uint16_t xlp9xx_vc_to_handle_map[MAX_VC] = {
+	[0 ... 15] = XLP_MSG_HANDLE_CPU0,
+	[16 ... 31] = XLP_MSG_HANDLE_CPU1,
+	[32 ... 47] = XLP_MSG_HANDLE_CPU2,
+	[48 ... 63] = XLP_MSG_HANDLE_CPU3,
+	[64 ... 79] = XLP_MSG_HANDLE_CPU4,
+	[80 ... 95] = XLP_MSG_HANDLE_CPU5,
+	[96 ... 111] = XLP_MSG_HANDLE_CPU6,
+	[112 ... 127] = XLP_MSG_HANDLE_CPU7,
+	[128 ... 143] = XLP_MSG_HANDLE_CPU0,
+	[144 ... 159] = XLP_MSG_HANDLE_CPU1,
+	[160 ... 175] = XLP_MSG_HANDLE_CPU2,
+	[176 ... 191] = XLP_MSG_HANDLE_CPU3,
+	[192 ... 207] = XLP_MSG_HANDLE_CPU4,
+	[208 ... 223] = XLP_MSG_HANDLE_CPU5,
+	[224 ... 239] = XLP_MSG_HANDLE_CPU6,
+	[240 ... 255] = XLP_MSG_HANDLE_CPU7,
+	[256 ... 257] = XLP_MSG_HANDLE_PCIE0,
+	[258 ... 259] = XLP_MSG_HANDLE_PCIE1,
+	[260 ... 261] = XLP_MSG_HANDLE_PCIE2,
+	[262 ... 263] = XLP_MSG_HANDLE_PCIE3,
+	[264 ... 267] = XLP_MSG_HANDLE_DTRE,
+	[268 ... 271] = XLP_MSG_HANDLE_GDX,
+	[272 ... 280] = XLP_MSG_HANDLE_RSA_ECC,
+	[281 ... 296] = XLP_MSG_HANDLE_CRYPTO,
+	[400 ... 406] = XLP_MSG_HANDLE_CMP,
+	[305 ... 383] = XLP_MSG_HANDLE_INVALID,
+	[384 ... 391] = XLP_MSG_HANDLE_NAE_0,
+//	[392 ... 475] = XLP_MSG_HANDLE_INVALID,
+	[476 ... 1019] = XLP_MSG_HANDLE_NAE_0,
+	[1020 ... 1023] = XLP_MSG_HANDLE_INVALID,
+};
+
 static uint16_t vc_to_handle_map[MAX_VC] = {
 	[0 ... 15] = XLP_MSG_HANDLE_CPU0,
 	[16 ... 31] = XLP_MSG_HANDLE_CPU1,
@@ -612,7 +647,6 @@ int register_xlp_msgring_handler(int major,
 		       __FUNCTION__, __LINE__, major, XLP_MAX_TX_STNS, action);
 		return ret;
 	}
-
 	/* Check if the message station is valid, if not return error */
 	spin_lock_irqsave(&msgrng_lock, flags);
 
@@ -1065,7 +1099,7 @@ static int __init on_chip_init(void)
 		vc_to_handle = xlp2xx_vc_to_handle_map;
 	else if (is_nlm_xlp3xx())
 		vc_to_handle = xlp3xx_vc_to_handle_map;
-	else if (is_nlm_xlp9xx())
+	else if(is_nlm_xlp9xx())
 		vc_to_handle = xlp9xx_vc_to_handle_map;
 	else
 		vc_to_handle = vc_to_handle_map;
-- 
1.7.1

