From 26c52d5b82c8f16ad38d90b0f5cd1fa253c8ad2b Mon Sep 17 00:00:00 2001
From: Subhendu Sekhar Behera <sbehera@broadcom.com>
Date: Wed, 28 May 2014 16:34:15 +0530
Subject: syslib: Preserve other device frequencies while writing to DEV_SEL & DEV_DIV regs. Also use DEV_SEL_STAT & DEV_DIV_STAT to read the device frequencies.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/syslib/include/xlp9xx_sys.h b/arch/mips/netlogic/lib/syslib/include/xlp9xx_sys.h
index e3e9fc1..77d56e4 100644
--- a/arch/mips/netlogic/lib/syslib/include/xlp9xx_sys.h
+++ b/arch/mips/netlogic/lib/syslib/include/xlp9xx_sys.h
@@ -139,8 +139,8 @@ static inline uint64_t get_nae_frequency(int node)
     uint32_t clk_freq;
     uint64_t sys_clk_base = xlp9xx_sys_clk_base[node];
 
-    sel = (syssoc_read_reg(sys_clk_base, CLK_DEVSEL) >> dev_shift) & 0x3;
-    div = (syssoc_read_reg(sys_clk_base, CLK_DEVDIV) >> dev_shift) & 0x3;
+    sel = (syssoc_read_reg(sys_clk_base, CLK_DEVSEL_STAT) >> dev_shift) & 0x3;
+    div = (syssoc_read_reg(sys_clk_base, CLK_DEVDIV_STAT) >> dev_shift) & 0x3;
 
     switch (sel) {
         case 0: pll_out = 133; break;
@@ -169,10 +169,12 @@ static inline void xlp9xx_set_clkdev(int node, int dev_id, int sel, int div)
 
 	dev_shift = dev_id * 2;
 	/* Write the div and select register */
-	val = ((sel & 0x3) << dev_shift);
+	val = syssoc_read_reg(sys_clk_base, CLK_DEVSEL) & ~(0x3 << dev_shift);
+	val = val | ((sel & 0x3) << dev_shift);
 	syssoc_write_reg(sys_clk_base, CLK_DEVSEL, val);
 
-	val = ((div & 0x3) << dev_shift);
+	val = syssoc_read_reg(sys_clk_base, CLK_DEVDIV) & ~(0x3 << dev_shift);
+	val = val | ((div & 0x3) << dev_shift);
 	syssoc_write_reg(sys_clk_base, CLK_DEVDIV, val);
 
 	/* This register determines which device's CLK_DEVSEL will be changed, device mapping  same as CLK_DEVDIS register,hardware deasserts this bit when done */
@@ -230,11 +232,13 @@ static inline int xlp9xx_set_gbu_frequency(int node, uint64_t freq)
     }
 
     dev_shift = dev_id * 2;	
-    // Write the div and select register	
-    val = ((sel & 0x3) << dev_shift);
+    // Write the div and select register
+    val = syssoc_read_reg(sys_clk_base, CLK_DEVSEL) & ~(0x3 << dev_shift);	
+    val = val | ((sel & 0x3) << dev_shift);
     syssoc_write_reg(sys_clk_base, CLK_DEVSEL, val);
-	
-    val = ((div & 0x3) << dev_shift);  
+
+    val = syssoc_read_reg(sys_clk_base, CLK_DEVDIV) & ~(0x3 << dev_shift);	
+    val = val | ((div & 0x3) << dev_shift);  
     syssoc_write_reg(sys_clk_base, CLK_DEVDIV, val);
 	
     // Poll Change register
@@ -291,7 +295,7 @@ static inline int xlp9xx_config_dev_freq(int node, unsigned int freq, int *devcl
 			dev_clock_freq = 133;
 		}else{
 			mul = syssoc_read_reg(sys_clk_base, DEV_PLLCTRL_1 + (4*(sel-1)));
-			nlm_print("Mul calc for sel = %d is = %d\n", sel, mul);
+			//nlm_print("Mul calc for sel = %d is = %d\n", sel, mul);
 			dev_clock_freq = 400 + 33*mul;
 		}
 
@@ -299,12 +303,12 @@ static inline int xlp9xx_config_dev_freq(int node, unsigned int freq, int *devcl
 			
 			cal_freq = dev_clock_freq;
 			NLM_HAL_DO_DIV(cal_freq, (1<<division)) 
-			nlm_print(" Fre to bse set= %d and cal_freq= %d\n", freq, cal_freq);
+			//nlm_print(" Fre to bse set= %d and cal_freq= %d\n", freq, cal_freq);
 			delta = cal_freq - freq;
 			if ( ( delta <= 4) && (delta >= -4) ) {
 				*devclock = sel; /* 0 is system clk */
 				*div = division;
-				nlm_print("Found the match for frq with sel = %d and div= %d\n", sel, division);	
+				//nlm_print("Found the match for frq with sel = %d and div= %d\n", sel, division);	
 				return 0;
 			}
 		}
@@ -328,8 +332,8 @@ static inline uint64_t get_crypto_block_frequency(int node, int dev_id)
     else 
         dev_shift = XLP9XX_CLKDEV_RSA * 2;
 
-    sel = (syssoc_read_reg(sys_clk_base, CLK_DEVSEL) >> dev_shift) & 0x3;
-    div = (syssoc_read_reg(sys_clk_base, CLK_DEVDIV) >> dev_shift) & 0x3;
+    sel = (syssoc_read_reg(sys_clk_base, CLK_DEVSEL_STAT) >> dev_shift) & 0x3;
+    div = (syssoc_read_reg(sys_clk_base, CLK_DEVDIV_STAT) >> dev_shift) & 0x3;
 
     switch (sel) {
         case 0: pll_out = 133; break;
@@ -389,10 +393,12 @@ static inline int set_crypto_block_frequency(int node, int dev_id, uint64_t freq
     }
     dev_shift = dev_id * 2;
     // Write the div and select register
-    val = ((sel & 0x3) << dev_shift);
+    val = syssoc_read_reg(sys_clk_base, CLK_DEVSEL) & ~(0x3 << dev_shift);
+    val = val | ((sel & 0x3) << dev_shift);
     syssoc_write_reg(sys_clk_base, CLK_DEVSEL, val);
 
-    val = ((div & 0x3) << dev_shift);
+    val = syssoc_read_reg(sys_clk_base, CLK_DEVDIV) & ~(0x3 << dev_shift);
+    val = val | ((div & 0x3) << dev_shift);
     syssoc_write_reg(sys_clk_base, CLK_DEVDIV, val);
 
     // Poll Change register
@@ -432,8 +438,8 @@ static inline uint64_t get_dtre_frequency(int node)
 //    uint64_t sys_clk_base = XLP9XX_SYS_CLKDEV_BASE(node);
    uint64_t sys_clk_base = xlp9xx_sys_clk_base[node];
 
-    sel = (syssoc_read_reg(sys_clk_base, CLK_DEVSEL) >> dev_shift) & 0x3;
-    div = (syssoc_read_reg(sys_clk_base, CLK_DEVDIV) >> dev_shift) & 0x3;
+    sel = (syssoc_read_reg(sys_clk_base, CLK_DEVSEL_STAT) >> dev_shift) & 0x3;
+    div = (syssoc_read_reg(sys_clk_base, CLK_DEVDIV_STAT) >> dev_shift) & 0x3;
 
     switch (sel) {
         case 0: pll_out = 133; break;
@@ -504,10 +510,12 @@ static inline int xlp9xx_set_dtre_frequency(int node, uint64_t freq)
 
     dev_shift = dev_id * 2;
     /* Write the div and select register */
-    val = ((sel & 0x3) << dev_shift);
+    val = syssoc_read_reg(sys_clk_base, CLK_DEVSEL) & ~(0x3 << dev_shift);
+    val = val | ((sel & 0x3) << dev_shift);
     syssoc_write_reg(sys_clk_base, CLK_DEVSEL, val);
 
-    val = ((div & 0x3) << dev_shift);
+    val = syssoc_read_reg(sys_clk_base, CLK_DEVDIV) & ~(0x3 << dev_shift);
+    val = val | ((div & 0x3) << dev_shift);
     syssoc_write_reg(sys_clk_base, CLK_DEVDIV, val);
 
     /* This register determines which device's CLK_DEVSEL will be changed, device mapping  same as CLK_DEVDIS register,hardware deasserts this bit when done */
diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
index be41aa7..a34f363 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
@@ -420,7 +420,7 @@ int xlp9xx_set_nae_frequency(int node, uint64_t freq)
 	
 	nae_freq = xlp9xx_get_dev_freq(node, XLP9XX_CLKDEV_NET);
 	NLM_HAL_DO_DIV(nae_freq, mhz);
-	nlm_print("NAE frequency changed to %llu MHz\n", (unsigned long long)nae_freq);
+	nlm_print("NAE frequency changed to approx %llu MHz\n", (unsigned long long)nae_freq);
 
 	return 0;
 }
@@ -472,8 +472,8 @@ uint64_t xlp9xx_get_dev_freq(int node, int dev_id)
 	uint32_t dev_shift = dev_id << 1;
 	uint64_t sys_clk_base = xlp9xx_sys_clk_base[node];
 
-	sel = (syssoc_read_reg(sys_clk_base, CLK_DEVSEL) >> dev_shift) & 0x3;
-	div = (syssoc_read_reg(sys_clk_base, CLK_DEVDIV) >> dev_shift) & 0x3;
+	sel = (syssoc_read_reg(sys_clk_base, CLK_DEVSEL_STAT) >> dev_shift) & 0x3;
+	div = (syssoc_read_reg(sys_clk_base, CLK_DEVDIV_STAT) >> dev_shift) & 0x3;
 	mul = syssoc_read_reg(sys_clk_base, DEV_PLLCTRL_1 + (4*(sel-1)));
 
 	if (sel)
-- 
1.7.1

