From 35f964af2f76dc5011385c6a5e085bf323376212 Mon Sep 17 00:00:00 2001
From: Abhishek Joshi <abjoshi@broadcom.com>
Date: Thu, 12 Dec 2013 14:30:39 +0530
Subject: Cleanup: cleaned up netos code

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/fdt/libfdt/contrib/fdt_helper.c b/arch/mips/netlogic/lib/fdt/libfdt/contrib/fdt_helper.c
index 310ca7f..31d3171 100644
--- a/arch/mips/netlogic/lib/fdt/libfdt/contrib/fdt_helper.c
+++ b/arch/mips/netlogic/lib/fdt/libfdt/contrib/fdt_helper.c
@@ -36,7 +36,7 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <unistd.h>
-#if !defined(NLM_HAL_NETLBOOT) && !defined(NLM_HAL_NETOS)
+#if !defined(NLM_HAL_NETLBOOT)
 #include <sys/mman.h>
 #endif
 #endif
@@ -71,7 +71,7 @@ int set_fdt_helper_print(int val)
 	return old_val;
 }
 
-#if !defined(__KERNEL__) && !defined(NLM_HAL_NETOS) && !defined(NLM_HAL_NETLBOOT)
+#if !defined(__KERNEL__) && !defined(NLM_HAL_NETLBOOT)
 void *open_fdt(int fd)
 {
 	struct stat st;
diff --git a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
index d9ad8b8..d1cdbd7 100644
--- a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
+++ b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
@@ -1125,7 +1125,7 @@ static void nlm_hal_write_fmn_credit(int node, int max_nodes)
  * setup 1024 outq, set credit from cpu to io,  io to io, and io to
  * cpu
  ********************************************************************/
-#if defined(NLM_HAL_UBOOT) || defined(NLM_HAL_NETLBOOT) || defined(NLM_HAL_NETOS)
+#if defined(NLM_HAL_UBOOT) || defined(NLM_HAL_NETLBOOT)
 
 #define OUT_Q_INIT	0
 
diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal_kbp.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal_kbp.h
index 75c5362..7e8c5c7 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal_kbp.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal_kbp.h
@@ -336,8 +336,8 @@ uint16_t nlm_hal_kbp_cpld_reg_read( uint32_t node, uint16_t addr ){
 
     data = nlm_hal_read_16bit_reg( ( cpld_base << 8 ), ( addr >> 1 ) );
 
-    /* NetOS and HELinux needs byte swap */
-#if defined(NLM_HAL_NETOS) | defined(NLM_HAL_LINUX_USER)
+    /* HELinux needs byte swap */
+#if defined(NLM_HAL_LINUX_USER)
     data = ( data << 8 ) | ( data >> 8 );
 #endif
 
@@ -359,8 +359,8 @@ void nlm_hal_kbp_cpld_reg_write( uint32_t node, uint16_t addr, uint16_t data ){
         nlm_hal_write_32bit_reg( mmio, 0x42, DEFAULT_CPLD_MEM_BAR );
     /* end if */
 
-    /* NetOS and HELinux needs byte swap */
-#if defined(NLM_HAL_NETOS) | defined(NLM_HAL_LINUX_USER)
+    /* HELinux needs byte swap */
+#if defined(NLM_HAL_LINUX_USER)
     data = ( data << 8 ) | ( data >> 8 );
 #endif
 
diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal_macros.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal_macros.h
index 89e9b4d..149c2f7 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal_macros.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal_macros.h
@@ -159,47 +159,6 @@ static inline unsigned long nlm_spill_alloc(int node, uint64_t size)
 
 #endif /* __ASSEMBLY__ */
 
-#elif defined(NLM_HAL_NETOS) /* Netos */
-
-#ifndef __ASSEMBLY__
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <inttypes.h>
-
-#define nlm_print printf
-#define nlm_malloc malloc
-#define nlm_free  free
-#define nlm_udelay(x)	_netos_delay(x) /* Temporary implementation for netos-hyperex */
-#define nlm_mdelay(n) 	nlm_udelay(n * 1000)
-static __inline__ void _netos_delay(unsigned int x)
-{
-        unsigned long int i;
-
-        /* compilers beyond gcc 4.0 will remove off tight loops
-         * when optimization is enabled. This asm call is
-         * supposedly the standard way to work around this.
-         */
-        for (i = 0; i<(1000 * x) ; i++)
-                __asm__ __volatile__ ("");
-}
-#endif /* __ASSEMBLY__ */
-
-#if (_MIPS_SIM == _MIPS_SIM_ABI32) || (_MIPS_SIM == _MIPS_SIM_NABI32) || \
-    (_MIPS_SZLONG == 32)
-#define KSEG0     0x80000000
-#define KSEG1     0xA0000000
-#define KSEG2     0xC0000000
-#define KSEG3     0xE0000000
-#define KSEG0_PHY_BOUNDARY 0x10000000    /* 256 MB */
-#else
-#define KSEG0     (0xffffffff80000000)
-#define KSEG1     (0xffffffffA0000000)
-#define KSEG2     (0xffffffffC0000000)
-#define KSEG3     (0xffffffffE0000000)
-#define KSEG0_PHY_BOUNDARY 0x10000000    /* 256 MB */
-#endif
-
 #elif defined(NLM_HAL_UBOOT) /* u-boot */
 
 #include <common.h>
@@ -1265,8 +1224,8 @@ static __inline__ uint32_t nlm_read_ebase(void)
 #define nlh_recv_msg1(dst, src, size, code, data0)	\
   nlm_uaccess_msgrcv_1(dst, src, size, code, data0)
 
-/* NETOS and Linux Kernel Mdoe */
-#elif defined(NLM_HAL_NETOS) || defined(NLM_HAL_LINUX_KERNEL) \
+/* Linux Kernel Mdoe */
+#elif defined(NLM_HAL_LINUX_KERNEL) \
 	|| defined(NLM_HAL_UBOOT) || defined(NLM_HAL_NETLBOOT) || defined(NLM_HAL_XLOADER)
 
 #define nlh_read_cfg_reg16(addr)       lh_40bit_phys_uncached(addr)
-- 
1.7.1

