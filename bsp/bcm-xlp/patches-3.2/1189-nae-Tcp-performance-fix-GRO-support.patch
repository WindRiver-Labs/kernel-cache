From 166e65126878bd96714166d9c7ede1ebb5c36412 Mon Sep 17 00:00:00 2001
From: Hareesh R <hareeshr@broadcom.com>
Date: Mon, 7 Oct 2013 03:48:22 -0700
Subject: nae : Tcp performance fix, GRO support

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/misc/netlogic/soc_interface/on_chip.c b/drivers/misc/netlogic/soc_interface/on_chip.c
index 93e77b2..17c8c3c 100644
--- a/drivers/misc/netlogic/soc_interface/on_chip.c
+++ b/drivers/misc/netlogic/soc_interface/on_chip.c
@@ -81,7 +81,7 @@ uint32_t nlm_cpu_vc_mask[NLM_MAX_CPU_NODE_9XX*NLM_MAX_CPU_PER_NODE_9XX] = {0};
 uint32_t nlm_l1_lock[NR_CPUS/4] = {0};
 
 #ifdef CONFIG_XLP_FMN_SUPPORT
-typedef int (*vchandler)(int vc, int budget);
+typedef int (*vchandler)(void *arg, int vc, int budget);
 static vchandler xlp_napi_vc_handlers[NLM_MAX_VC_PER_THREAD];
 
 typedef int (*intr_vchandler)(int vc);
@@ -1130,7 +1130,7 @@ int xlp_fmn_poll(struct napi_struct *napi, int budget)
 			/* Explicit per vc napi handlers. Here the vc handler does the polling of
 			 all the packets */
 			if(xlp_napi_vc_handlers[vc]) {
-				rv = (xlp_napi_vc_handlers)[vc](vc, budget);
+				rv = (xlp_napi_vc_handlers)[vc]((void *)napi, vc, budget);
 				count += rv;
 				if(rv == 0)
 					no_msg++;
@@ -1174,9 +1174,11 @@ int xlp_fmn_poll(struct napi_struct *napi, int budget)
 	if(count < budget) {
 		uint32_t val;
 		unsigned long flags;
+
+		napi_complete(napi);
+
 		local_irq_save(flags);
 		msgrng_access_enable(mflags);
-                napi_complete(napi);
 
 		if (is_cpu_core_xlp_ii) {
                 	xlp_write_msg_int(napi_vc_mask);
@@ -1190,6 +1192,7 @@ int xlp_fmn_poll(struct napi_struct *napi, int budget)
 		}
 		msgrng_access_disable(mflags);
 		local_irq_restore(flags);
+
 		return count;
 	}
 	return budget;
-- 
1.7.1

