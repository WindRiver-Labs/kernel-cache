From dfac4920b3957a5753e888bfb41eda721d92dadf Mon Sep 17 00:00:00 2001
From: P. Sadik <psadik@broadcom.com>
Date: Tue, 24 Sep 2013 16:59:23 +0530
Subject: xlp9xx: Remove L2 cache flush routine.

This commit reverts f082b821689059c6b74b7a1d9e0bb54e6b07644c.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
index b8a11e5..aad091a 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
@@ -46,7 +46,6 @@
 extern struct dev_data *last_rcvd_priv[NR_CPUS * 8] ____cacheline_aligned;
 #endif
 //#include <asm/netlogic/kvm_xlp.h>
-extern void nlm_flush_cache_L2_local (unsigned long, unsigned long);
 
 uint64_t fast_replenish_count[NR_CPUS * 8] __cacheline_aligned;
 uint64_t slow_replenish_count[NR_CPUS * 8] __cacheline_aligned;
@@ -68,7 +67,7 @@ int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 	unsigned long __attribute__ ((unused)) mflags;
 	uint32_t msec_port, send_msec = 0;
 	uint32_t pad_len = 0, icv_len = 0, param_index = 0 ;
-	unsigned char *buf, sec_tag_hdr[16], icv[16]; 
+	unsigned char *buf, sec_tag_hdr[16], icv[16];
 
 	nae_t* nae_cfg = priv->nae;
 
@@ -102,7 +101,7 @@ int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 			skb->len, ether_type);
 #endif
 		/* Enable Macsec processing */
-//		if((ether_type & 0xffff) == PROTOCOL_TYPE_IP) 
+//		if((ether_type & 0xffff) == PROTOCOL_TYPE_IP)
 		{
 			send_msec = 1;
 			/* param_index should be between 1 - 7 */
@@ -155,7 +154,7 @@ int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 
 		fast_replenish_count[CPU_INDEX(cpu)]++;
 	}
-	else 
+	else
 #endif
 	{
 		qid = nae_cfg->vfbtbl_sw_offset + (cpu % num_cpus_per_node);
@@ -164,18 +163,18 @@ int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 		Message("Tx, tx complete to cpu, cpu %d len %d qid %d\n",
 			cpu, skb->len, qid);
 	}
-	
+
 	{
 		if(send_msec)
 		{
 			buf = kmalloc(skb->len, GFP_KERNEL);
 			memcpy(buf, &skb->data[MAC_HEADER_LEN], (skb->len - MAC_HEADER_LEN));
-			memcpy(&skb->data[MAC_HEADER_LEN], sec_tag_hdr, pad_len); 		
-			memcpy(&skb->data[MAC_HEADER_LEN + pad_len], buf, (skb->len - MAC_HEADER_LEN)); 		
-			memcpy(&skb->data[skb->len+pad_len], icv, icv_len); 		
+			memcpy(&skb->data[MAC_HEADER_LEN], sec_tag_hdr, pad_len);
+			memcpy(&skb->data[MAC_HEADER_LEN + pad_len], buf, (skb->len - MAC_HEADER_LEN));
+			memcpy(&skb->data[skb->len+pad_len], icv, icv_len);
 			skb->len +=(pad_len + icv_len);
 			kfree(buf);
-				
+
 		}
 		msg1 = nae_tx_desc(DESC_TYPE_P2DEOP, NULL_VFBID, skb->len,
 			       virt_to_bus(skb->data));
@@ -197,9 +196,6 @@ int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 		mac_put_skb_back_ptr(skb); */
 		skb_reserve(skb, SKB_BACK_PTR_SIZE);
 	}
-	
-	if(is_nlm_xlp9xx())	
-	       nlm_flush_cache_L2_local((virt_to_bus((unsigned long)skb->data) & ~(64 -1)) ,  256);        
 
 
 retry_send:
-- 
1.7.1

