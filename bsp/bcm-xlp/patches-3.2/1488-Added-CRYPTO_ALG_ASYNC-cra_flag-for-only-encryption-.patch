From 788ceffb33116a5a5382cb12673539c02f9f5fee Mon Sep 17 00:00:00 2001
From: Mehul <vmehul@netlogicmicro.com>
Date: Mon, 19 Dec 2011 19:22:12 +0530
Subject: Added CRYPTO_ALG_ASYNC cra_flag for only encryption algorithms.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/crypto/sae/nlm_aead.c b/drivers/crypto/sae/nlm_aead.c
index 9a812ac..3a90dbc 100755
--- a/drivers/crypto/sae/nlm_aead.c
+++ b/drivers/crypto/sae/nlm_aead.c
@@ -590,6 +590,7 @@ static void aead_request_callback(struct nlm_async_crypto *async, uint64_t msg1)
 		printk("\n Error: entry1 is %llx",msg1);
 		err = -EIO;
 		base->complete(base, err);
+		return;
 	}
 	if (async->op){
 		memcpy(async->actual_tag, async->hash_addr, async->authsize);
diff --git a/drivers/crypto/sae/nlm_crypto.c b/drivers/crypto/sae/nlm_crypto.c
index 42116d4..4de3b8e 100644
--- a/drivers/crypto/sae/nlm_crypto.c
+++ b/drivers/crypto/sae/nlm_crypto.c
@@ -572,18 +572,23 @@ xlp_sae_init(void)
 	return xlp_sae_major;
     }
     //  printk (KERN_ERR ",XLP SAE MAJOR %d\n", xlp_sae_major);
-    if ( (ipsec_async_vc == 1) && (ipsec_sync_vc == -1) )  {
-		printk(KERN_ERR "XLP_SAE - cannot be loaeded,Please set ipsec-async-vc and ipsec-sync-vc in the dts file\n");
+    if ( (ipsec_async_vc == -1) && (ipsec_sync_vc == -1) )  {
+	printk(KERN_ERR "XLP_SAE - cannot be loaeded,Please set ipsec-async-vc and ipsec-sync-vc in the dts file\n");
+    	return -1;
     }
-	
     nlm_crypto_init();
-    xlp_crypt_alg_init();
-    xlp_aead_alg_init();
-    if ( ipsec_sync_vc == -1 ) {
+    if(ipsec_async_vc != -1){
+    	xlp_crypt_alg_init();
+    	xlp_aead_alg_init();
+    }else{
+	printk(KERN_ERR "Cannot perform aead/enc operation, Please set ipsec-async-vc in the dts file\n");
+    }
+    if(ipsec_sync_vc != -1){
+    	xlp_auth_alg_init();
+    }else{
 	printk(KERN_ERR "Cannot perform auth operation, Please exclude ipsec_sync_vc from the node-vc-mask in dts\n");	
 	return 0;
     }
-    xlp_auth_alg_init();
 
     return 0;
 }
diff --git a/drivers/crypto/sae/nlm_enc.c b/drivers/crypto/sae/nlm_enc.c
index 2d2dc93..4eafea3 100755
--- a/drivers/crypto/sae/nlm_enc.c
+++ b/drivers/crypto/sae/nlm_enc.c
@@ -35,7 +35,6 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #include <nlm_hal_fmn.h>
 #include <asm/netlogic/hal/nlm_hal.h>
 
-
 /*#include <linux/pci.h>
 #include <linux/pci_ids.h>
 #include <asm/io.h>
@@ -211,22 +210,23 @@ void enc_request_callback(struct nlm_async_crypto *async, uint64_t msg1 )
 {
 	struct crypto_async_request * base = (struct crypto_async_request *)async->args; 
 	int err =0;
-	int cpu = nlm_processor_id();
+	int cpu = hard_smp_processor_id();
 	int stat = async->stat;
 
 	if (msg1 & 0x7ff80) {
 		printk("\n Error: entry1 is %llx",msg1);
 		err = -EIO;
 		base->complete(base, err);
+		return;
 	}
 	crypto_stat[cpu].enc[stat]++;
 	crypto_stat[cpu].enc_tbytes[stat]+= async->bytes;
+	
 	base->complete(base, err);
 }
 static int
 xlp_crypt(struct ablkcipher_request *req, unsigned int enc, int iv_size, struct nlm_crypto_pkt_ctrl *ctrl, uint16_t stat)
 {
-
 	int seg = 0;
 	int i;
 	uint64_t msg0, msg1;
@@ -295,6 +295,8 @@ xlp_crypt(struct ablkcipher_request *req, unsigned int enc, int iv_size, struct
 	}
 
 	pktdescsize = 32 + seg * 16;
+
+	preempt_disable();
 	fb_vc = crypto_get_fb_vc(); 
 
 	msg0 = nlm_crypto_form_pkt_fmn_entry0(fb_vc, 0, 0, ctrl->cipherkeylen,
@@ -310,9 +312,10 @@ xlp_crypt(struct ablkcipher_request *req, unsigned int enc, int iv_size, struct
 	async->args = &req->base;
 	async->stat = stat; 
 	async->bytes = req->nbytes; 
+	mb();
 	while( nlm_hal_send_msg3(crypto_vc_base, 0 /*code */ , msg0, msg1, (unsigned long )async) != 0 );
+	preempt_enable();
 	return -EINPROGRESS;
-
 }
 
 static int
@@ -353,7 +356,7 @@ static struct crypto_alg xlp_cbc_aes_alg = {
 	.cra_name = "cbc(aes)",
 	.cra_driver_name = "cbc-aes-xlp",
 	.cra_priority = XLP_CRYPT_PRIORITY,
-	.cra_flags = CRYPTO_ALG_TYPE_ABLKCIPHER,
+	.cra_flags = CRYPTO_ALG_TYPE_ABLKCIPHER|CRYPTO_ALG_ASYNC,
 	.cra_blocksize = AES_BLOCK_SIZE,
 	.cra_ctxsize = CTRL_DESC_SIZE,
 	.cra_alignmask = 15,
@@ -378,7 +381,7 @@ static struct crypto_alg xlp_cbc_des_alg = {
 	.cra_name = "cbc(des)",
 	.cra_driver_name = "cbc-des-xlp",
 	.cra_priority = XLP_CRYPT_PRIORITY,
-	.cra_flags = CRYPTO_ALG_TYPE_ABLKCIPHER,
+	.cra_flags = CRYPTO_ALG_TYPE_ABLKCIPHER | CRYPTO_ALG_ASYNC,
 	.cra_blocksize = DES_BLOCK_SIZE,
 	.cra_ctxsize = CTRL_DESC_SIZE,
 	.cra_alignmask = 15,
@@ -403,7 +406,7 @@ static struct crypto_alg xlp_cbc_des3_alg = {
 	.cra_name = "cbc(des3_ede)",
 	.cra_driver_name = "cbc-des3-ede-xlp",
 	.cra_priority = XLP_CRYPT_PRIORITY,
-	.cra_flags = CRYPTO_ALG_TYPE_ABLKCIPHER,
+	.cra_flags = CRYPTO_ALG_TYPE_ABLKCIPHER|CRYPTO_ALG_ASYNC,
 	.cra_blocksize = DES3_EDE_BLOCK_SIZE,
 	.cra_ctxsize = DES3_CTRL_DESC_SIZE,
 	.cra_alignmask = 15,
-- 
1.7.1

