From c43d71f51bd37421051d648643007da64bede6db Mon Sep 17 00:00:00 2001
From: Rahul Jain <rajain@netlogicmicro.com>
Date: Wed, 8 Feb 2012 12:56:12 +0530
Subject: xlp3xx fixes for nae-perf

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/misc/netlogic/nae-perf/xlp_nae.c b/drivers/misc/netlogic/nae-perf/xlp_nae.c
index 62fa0fd..d90b231 100755
--- a/drivers/misc/netlogic/nae-perf/xlp_nae.c
+++ b/drivers/misc/netlogic/nae-perf/xlp_nae.c
@@ -114,6 +114,8 @@
 /*Enable sanity checks while receiving or transmitting buffer */
 #undef ENABLE_SANITY_CHECKS
 
+#define NUM_XLP8XX_MGMT_PORTS	2
+
 static int debug = 0;
 /* Module Parameters */
 
@@ -142,8 +144,8 @@ static uint32_t frin_total_queue = 18;
 static uint32_t nae_rx_vc = 0;
 static uint32_t nae_fb_vc = 0;
 static uint32_t napi_vc_mask;
-static uint32_t num_cpu_share_freein = 4;
-static uint32_t jumbo_freein_offset = 8;
+static uint32_t num_cpu_share_freein = 2;
+static uint32_t jumbo_freein_offset = 0;
 /***************************************************************/
 
 unsigned char eth_hw_addr[18][6] = {
@@ -1079,12 +1081,12 @@ void nlm_spawn_kthread(void)
 
 static void nlm_update_ucore_shared_memory(int node)
 {
-	uint32_t data[34] = {0};
+	uint32_t data[35] = {0};
 	int i = 0;
 	int j = 0;
 
 	while(i < 32){
-		for(j=0; j<NR_CPUS && i<32; j++){
+		for(j=0; j < NR_CPUS && i < 32; j++){
 			if(!cpu_isset(j, cpu_present_map))
 				continue;
 			data[i] = j*4 + nae_rx_vc;
@@ -1097,6 +1099,13 @@ static void nlm_update_ucore_shared_memory(int node)
 		data[32] = NLM_RT_MODE;
 
 	data[33] = enable_jumbo;
+
+	/* jumbo_freein_offset */
+	if (is_nlm_xlp3xx())
+		data[34] = 4;
+	else
+		data[34] = 8;
+
 	nlm_hal_write_ucore_shared_mem(data, sizeof(data)/sizeof(uint32_t));
 }
 
@@ -1110,7 +1119,7 @@ static void nlm_replenish_per_cpu_buffer(int qindex, int bufcnt)
 	int ret = 0;
 	int size = 0;
 
-	if (!enable_jumbo || qindex < 8 || qindex > 15)
+	if (!enable_jumbo || (qindex < jumbo_freein_offset) || (qindex >= (jumbo_freein_offset * 2)))
 		size = NLM_RX_BUF_SIZE;
 	else
 		size = NLM_RX_JUMBO_BUF_SIZE;
@@ -1260,7 +1269,6 @@ static void nlm_xlp_nae_init(void)
 		nlm_mode[LAST_RCVD_INDEX(i)] = perf_mode;
 
 	/*Disable interrupts for VC - 0-127*/
-
 	for(i=0; i<NR_CPUS; i++){
 		if(!cpu_isset(i, cpu_present_map))
 			continue;
@@ -1268,6 +1276,7 @@ static void nlm_xlp_nae_init(void)
 			nlm_hal_disable_vc_intr((i/32), ((i*4 + vc) & 0x7f));
 	}
 
+	/* This function has to be called before initialize_nae */
 	nlm_update_ucore_shared_memory(node);
 
 	if(perf_mode == NLM_TCP_MODE)
@@ -1291,9 +1300,18 @@ static void nlm_xlp_nae_init(void)
 
 	/* Update RX_CONFIG for desc size */
 	if(enable_jumbo)
+	{
 		nlm_hal_init_ingress (node, DEFAULT_JUMBO_MTU);
+		num_cpu_share_freein = 4;
+		if (is_nlm_xlp8xx())
+			jumbo_freein_offset = (frin_total_queue - NUM_XLP8XX_MGMT_PORTS)/2;
+		else
+			jumbo_freein_offset = frin_total_queue/2;
+	}
+
 
 	printk("nae_cfg frin_queue_base %d, frin_total_queue %d\n",nae_cfg->frin_queue_base, nae_cfg->frin_total_queue);
+	printk("jumbo_freein_offset %d, num_cpu_share_freein %d\n",jumbo_freein_offset, num_cpu_share_freein);
 
 	nlm_initialize_vfbid();
 
-- 
1.7.1

