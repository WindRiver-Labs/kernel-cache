From 8f70ca0afea0316011b0f66c3f55f504b19f585a Mon Sep 17 00:00:00 2001
From: Hareesh R <hareeshr@broadcom.com>
Date: Fri, 21 Jun 2013 14:42:55 +0530
Subject: xlp9xx : RSA ucode & engine selection

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/seclib/rsasoc_ucode.h b/arch/mips/netlogic/lib/seclib/rsasoc_ucode.h
index f744f0b..427352d 100644
--- a/arch/mips/netlogic/lib/seclib/rsasoc_ucode.h
+++ b/arch/mips/netlogic/lib/seclib/rsasoc_ucode.h
@@ -960,7 +960,882 @@ static uint64_t  rsasoc_gen1_ucode_data [] = {
 };
 
 static uint64_t  rsasoc_gen2_ucode_data [] = {
-
+0x0000000000000000ULL,
+0x00000000503840ecULL,
+0x00000001d03800ecULL,
+0x00000002d03820ecULL,
+0x00000036a0000044ULL,
+0x0000000000000014ULL,
+0x000000063000000cULL,
+0x000000075000010cULL,
+0x0000001760000c0cULL,
+0x00000000f03fc0ecULL,
+0x00000001303fc1ecULL,
+0x00000001603fc2ecULL,
+0x00000001903fc3ecULL,
+0x00000001903fc4ecULL,
+0x00000036a0000044ULL,
+0x00000016f0000c0cULL,
+0x000000001000003cULL,
+0x0000000bd000030cULL,
+0x0000000550000044ULL,
+0x000000001800003cULL,
+0x0000000d0000030cULL,
+0x0000000550000044ULL,
+0x000000003000003cULL,
+0x0000000e7000030cULL,
+0x0000000550000044ULL,
+0x00000000603fc33cULL,
+0x00000000c03fc43cULL,
+0x000000104000030cULL,
+0x0000000550000044ULL,
+0x0000000000000014ULL,
+0x000000063000000cULL,
+0x00000017f000070cULL,
+0x0000001e90000d0cULL,
+0x0000002150000e0cULL,
+0x00000027d0000f0cULL,
+0x00000002903e00ecULL,
+0x00000002903f84ecULL,
+0x00000002b03f85ecULL,
+0x00000002b03f06ecULL,
+0x00000002b03f88ecULL,
+0x00000036a0000044ULL,
+0x00000007e000010cULL,
+0x00000003d0000044ULL,
+0x000000085000010cULL,
+0x0000000490000044ULL,
+0x000000000000001cULL,
+0x00000006b000000cULL,
+0x00000017f000070cULL,
+0x0000002020000d0cULL,
+0x0000002360000e0cULL,
+0x0000002880000f0cULL,
+0x00000003903e20ecULL,
+0x00000003903fa4ecULL,
+0x00000003b03fa5ecULL,
+0x00000003b03f26ecULL,
+0x00000003b03fa8ecULL,
+0x00000036a0000044ULL,
+0x00000008e000010cULL,
+0x00000003d0000044ULL,
+0x000000098000010cULL,
+0x0000000490000044ULL,
+0x000000000800003cULL,
+0x0000000a7000020cULL,
+0x0000000b4000030cULL,
+0x000000121000040cULL,
+0x00000014c000050cULL,
+0x00000015b000060cULL,
+0x0000001bd000080cULL,
+0x0000001c0000090cULL,
+0x0000001d40000a0cULL,
+0x0000001c30000b0cULL,
+0x00000016a0000c0cULL,
+0x00000005a0000044ULL,
+0x000000001000003cULL,
+0x0000000ad000020cULL,
+0x0000000bd000030cULL,
+0x00000012f000040cULL,
+0x000000152000050cULL,
+0x000000161000060cULL,
+0x0000001be000080cULL,
+0x0000001c1000090cULL,
+0x0000001dc0000a0cULL,
+0x0000001c90000b0cULL,
+0x00000016f0000c0cULL,
+0x00000005a0000044ULL,
+0x000000000000000aULL,
+0x0000000000000024ULL,
+0x00000029401f80e4ULL,
+0x0000002f101f81e4ULL,
+0x00000036a0000044ULL,
+0x000000000000000aULL,
+0x0000000000000024ULL,
+0x0000002ff01f00e4ULL,
+0x0000002ff01f82e4ULL,
+0x00000033a01f83e4ULL,
+0x00000034601e04e4ULL,
+0x00000036501f88e4ULL,
+0x00000034601f89e4ULL,
+0x00000036a0000044ULL,
+0x0000000000000074ULL,
+0x000000320000008cULL,
+0x00000008000000a4ULL,
+0x000000080400007bULL,
+0x000000220000008cULL,
+0x00000008000000a4ULL,
+0x000000080400007bULL,
+0x00000000000000c4ULL,
+0x0000000000000074ULL,
+0x0000000c000000a4ULL,
+0x0000000004004071ULL,
+0x0000002e0000008cULL,
+0x00000008000000a4ULL,
+0x000000080400007bULL,
+0x000000220000008cULL,
+0x00000008000000a4ULL,
+0x000000080400007bULL,
+0x00000000000000c4ULL,
+0x000000034c0b4091ULL,
+0x0000000b040b0093ULL,
+0x00000008000000a4ULL,
+0x0000000004000802ULL,
+0x00000002c88b0021ULL,
+0x0000000a828b0423ULL,
+0x00000010000000a4ULL,
+0x000000079000006cULL,
+0x00000000000000c4ULL,
+0x000000004c0b4091ULL,
+0x00000008000000a4ULL,
+0x0000000002000402ULL,
+0x000000004a8b0021ULL,
+0x00000010000000a4ULL,
+0x000000081000006cULL,
+0x00000000000000c4ULL,
+0x000000034c0b4091ULL,
+0x0000000b040b0093ULL,
+0x00000008000000a4ULL,
+0x0000000002000402ULL,
+0x00000002c88b0021ULL,
+0x0000000a828b0423ULL,
+0x00000010000000a4ULL,
+0x000000089000006cULL,
+0x00000000000000c4ULL,
+0x000000004c0b4091ULL,
+0x00000008000000a4ULL,
+0x0000000002000402ULL,
+0x000000004a8b0021ULL,
+0x00000010000000a4ULL,
+0x0000000910000064ULL,
+0x000000004a8b0021ULL,
+0x0000000000898611ULL,
+0x0000000c000000a4ULL,
+0x00000000000000c4ULL,
+0x000000034c0b4091ULL,
+0x0000000b040b0093ULL,
+0x00000008000000a4ULL,
+0x0000000002000402ULL,
+0x00000002c88b0021ULL,
+0x0000000a828b0423ULL,
+0x00000010000000a4ULL,
+0x00000009c0000064ULL,
+0x0000000088800021ULL,
+0x0000000880800423ULL,
+0x00000000001004a1ULL,
+0x0000000c000000a4ULL,
+0x00000002c88b0061ULL,
+0x0000000a808b0463ULL,
+0x00000000000000c4ULL,
+0x00000000058f0011ULL,
+0x0000000001860002ULL,
+0x00000010000000a4ULL,
+0x00000000000000ccULL,
+0x000000004d8f0021ULL,
+0x0000000a90000044ULL,
+0x00000007058f0013ULL,
+0x0000000001860002ULL,
+0x00000010000000a4ULL,
+0x00000000000000ccULL,
+0x000000034c0f0021ULL,
+0x0000000b058f0423ULL,
+0x0000000af0000044ULL,
+0x0000000000180001ULL,
+0x000000000b600031ULL,
+0x00000008000000a4ULL,
+0x0000000004800041ULL,
+0x00000008000000a4ULL,
+0x0000000007c03f41ULL,
+0x00000000440ac491ULL,
+0x00000004000000a4ULL,
+0x00000000000000c4ULL,
+0x0000000010180001ULL,
+0x0000000088a00031ULL,
+0x00000002c3430431ULL,
+0x00000004000000a4ULL,
+0x0000000204938041ULL,
+0x00000008000000a4ULL,
+0x000000012c002b41ULL,
+0x0000000117982861ULL,
+0x0000000088a03631ULL,
+0x00000002c3430c31ULL,
+0x00000004000000a4ULL,
+0x0000000204938041ULL,
+0x00000008000000a4ULL,
+0x000000012c002b41ULL,
+0x0000000347cb2861ULL,
+0x000000034c09f691ULL,
+0x00000003040a8491ULL,
+0x0000000000000000ULL,
+0x00000000000000c4ULL,
+0x0000000010180001ULL,
+0x0000000088a00031ULL,
+0x00000002c0830431ULL,
+0x0000000283430431ULL,
+0x000000080000009cULL,
+0x0000000204938041ULL,
+0x00000008000000a4ULL,
+0x000000012c002b41ULL,
+0x0000000104202861ULL,
+0x0000000117d82861ULL,
+0x0000000088a02f31ULL,
+0x00000002c0833c31ULL,
+0x0000002283430c3bULL,
+0x0000000000000000ULL,
+0x0000000204938041ULL,
+0x00000008000000a4ULL,
+0x000000012c002b41ULL,
+0x00000003442b2861ULL,
+0x0000000307cb2861ULL,
+0x000000034c09ef91ULL,
+0x000000030409bc91ULL,
+0x00000003040a8491ULL,
+0x00000000000000c4ULL,
+0x0000000010180001ULL,
+0x0000000088a00031ULL,
+0x00000002c0830431ULL,
+0x0000000280830431ULL,
+0x0000000280c30431ULL,
+0x0000000004900041ULL,
+0x0000000280830531ULL,
+0x0000000283430431ULL,
+0x0000000a00038007ULL,
+0x000000012c002b41ULL,
+0x0000000344202861ULL,
+0x0000001304032863ULL,
+0x0000000317db2861ULL,
+0x00000002b8a3ab31ULL,
+0x00000002c0832831ULL,
+0x0000000280832831ULL,
+0x0000000280c32831ULL,
+0x0000000004900041ULL,
+0x0000000280832931ULL,
+0x0000002e83430c3bULL,
+0x0000000200038000ULL,
+0x000000012c002b41ULL,
+0x00000003442b2861ULL,
+0x00000013040b2863ULL,
+0x0000000307cb2861ULL,
+0x000000037c09eb91ULL,
+0x000000130409a893ULL,
+0x000000030409bc91ULL,
+0x00000003040a849dULL,
+0x0000000010180001ULL,
+0x0000000088a00031ULL,
+0x00000002c0830431ULL,
+0x0000000280830431ULL,
+0x0000000280c30431ULL,
+0x0000000004900041ULL,
+0x0000000280830531ULL,
+0x0000001e80830433ULL,
+0x0000000283430431ULL,
+0x0000000b2c03ab67ULL,
+0x0000000344202861ULL,
+0x0000001304032863ULL,
+0x0000000317db2861ULL,
+0x00000002b8a3ab31ULL,
+0x00000002c0832831ULL,
+0x0000000280832831ULL,
+0x0000000280c32831ULL,
+0x0000000004900041ULL,
+0x0000000280832931ULL,
+0x0000001e80832833ULL,
+0x0000002e83430c3bULL,
+0x000000032c03ab61ULL,
+0x00000003442b2861ULL,
+0x00000013040b2863ULL,
+0x0000000307cb2861ULL,
+0x000000037c09eb91ULL,
+0x000000130409a893ULL,
+0x000000030409bc91ULL,
+0x00000003040a849dULL,
+0x0000000000140001ULL,
+0x0000004000140001ULL,
+0x000000000b600061ULL,
+0x000000400b600061ULL,
+0x00000004000000a4ULL,
+0x0000000004800041ULL,
+0x0000004004800041ULL,
+0x00000004000000a4ULL,
+0x0000000007c03f41ULL,
+0x0000004007c03f41ULL,
+0x00000000440ac591ULL,
+0x00000040440ac591ULL,
+0x0000000000000000ULL,
+0x00000000000000c4ULL,
+0x0000000010140001ULL,
+0x0000004010140001ULL,
+0x0000000088e00061ULL,
+0x0000004088e00061ULL,
+0x00000002c3430561ULL,
+0x00000042c3430561ULL,
+0x0000000204938041ULL,
+0x0000004204938041ULL,
+0x00000004000000a4ULL,
+0x000000012c402b41ULL,
+0x000000412c402b41ULL,
+0x0000000117f42961ULL,
+0x0000004117f42961ULL,
+0x0000000088e03f61ULL,
+0x0000004088e03f61ULL,
+0x00000002c3430d61ULL,
+0x00000042c3430d61ULL,
+0x0000000204938041ULL,
+0x0000004204938041ULL,
+0x00000004000000a4ULL,
+0x000000012c402b41ULL,
+0x000000412c402b41ULL,
+0x0000000347eb2961ULL,
+0x0000004347eb2961ULL,
+0x000000034c7dff91ULL,
+0x000000434c7dff91ULL,
+0x00000003040a0591ULL,
+0x00000043040a0591ULL,
+0x00000000000000c4ULL,
+0x0000000048840011ULL,
+0x00000000028b3691ULL,
+0x000000000e09c691ULL,
+0x000000000c09c691ULL,
+0x0000000000000000ULL,
+0x00000000000000c4ULL,
+0x00000000c8840011ULL,
+0x0000000212ab3691ULL,
+0x0000000080800411ULL,
+0x0000000002cb3691ULL,
+0x000000034c29ef91ULL,
+0x0000000006098491ULL,
+0x000000034c09ef91ULL,
+0x0000000004098491ULL,
+0x00000000000000c4ULL,
+0x0000000048841011ULL,
+0x00000000068b7691ULL,
+0x000000000e099611ULL,
+0x000000000c098611ULL,
+0x0000000000000000ULL,
+0x00000000000000c4ULL,
+0x00000000c8840011ULL,
+0x0000000216ab7691ULL,
+0x0000000080801411ULL,
+0x0000000006cb3691ULL,
+0x000000034c29af11ULL,
+0x0000000006099411ULL,
+0x000000034c09af11ULL,
+0x0000000004098411ULL,
+0x00000000000000c4ULL,
+0x0000000c000000d4ULL,
+0x0000000000000000ULL,
+0x000000004a801011ULL,
+0x000000000e004691ULL,
+0x000000000009800dULL,
+0x0000000c000000d4ULL,
+0x000000004a801011ULL,
+0x000000018c004691ULL,
+0x0000000000800411ULL,
+0x0000000006003691ULL,
+0x0000000200098001ULL,
+0x000000000009800dULL,
+0x0000000c000000d4ULL,
+0x000000004a801011ULL,
+0x000000018c004691ULL,
+0x0000000c00800415ULL,
+0x0000000584003699ULL,
+0x0000000000800411ULL,
+0x0000000006003691ULL,
+0x0000000a00098003ULL,
+0x000000000009800dULL,
+0x000000200000302aULL,
+0x00000000000e0012ULL,
+0x0000000000100211ULL,
+0x0000000002000002ULL,
+0x00000006000b0003ULL,
+0x0000000000000000ULL,
+0x00000000000000ccULL,
+0x0000000006000302ULL,
+0x00000002810b0011ULL,
+0x0000000a808b0013ULL,
+0x0000000002010002ULL,
+0x00000006108b0093ULL,
+0x0000000002800002ULL,
+0x00000007040b0013ULL,
+0x0000000006800002ULL,
+0x00000007040b0013ULL,
+0x0000000003000002ULL,
+0x0000000000090101ULL,
+0x0000000200098001ULL,
+0x0000000a000b0003ULL,
+0x0000000007000302ULL,
+0x0000000400890015ULL,
+0x0000000784098019ULL,
+0x0000000007800002ULL,
+0x0000000000090001ULL,
+0x0000000000098101ULL,
+0x00000019b000006cULL,
+0x000000280300060aULL,
+0x0000000000000000ULL,
+0x0000000000000e02ULL,
+0x0000000001000011ULL,
+0x00000010000000a4ULL,
+0x00000019a0000064ULL,
+0x0000000000000f02ULL,
+0x0000000001000011ULL,
+0x0000000002000602ULL,
+0x0000000680890013ULL,
+0x0000000002806002ULL,
+0x0000000004000011ULL,
+0x000000031489f691ULL,
+0x0000000804000415ULL,
+0x000000071489b699ULL,
+0x0000000006000e02ULL,
+0x0000000680890013ULL,
+0x0000000006800e02ULL,
+0x0000000680898013ULL,
+0x0000002c0300540aULL,
+0x0000000007800012ULL,
+0x00000000000b8000ULL,
+0x000000000700cd42ULL,
+0x0000000000800011ULL,
+0x000000029489f691ULL,
+0x0000000800800415ULL,
+0x000000069489b699ULL,
+0x000000200000e02aULL,
+0x00000000000000fcULL,
+0x0000000c000000a4ULL,
+0x00000019a0000064ULL,
+0x000000240000c02aULL,
+0x0000000002000012ULL,
+0x0000000600090003ULL,
+0x00000000000000c4ULL,
+0x000000001680409dULL,
+0x0000000014804091ULL,
+0x000000001680049dULL,
+0x000000001680419dULL,
+0x0000000014804191ULL,
+0x000000001680049dULL,
+0x0000000000800011ULL,
+0x00000000068b5691ULL,
+0x0000000004098611ULL,
+0x000000000700dc22ULL,
+0x0000000000800011ULL,
+0x0000000296cb569dULL,
+0x0000000000800011ULL,
+0x0000000294ab7691ULL,
+0x0000000000801411ULL,
+0x00000000068b3691ULL,
+0x000000034409af11ULL,
+0x0000000004098411ULL,
+0x000000000700dc22ULL,
+0x0000000000800011ULL,
+0x00000002948b7691ULL,
+0x0000000000801411ULL,
+0x0000000296cb369dULL,
+0x0000000001000011ULL,
+0x0000000006098611ULL,
+0x0000000000000000ULL,
+0x0000000007000e02ULL,
+0x0000000000888061ULL,
+0x0000000003000602ULL,
+0x0000000000888061ULL,
+0x00000000000984edULL,
+0x0000000001000011ULL,
+0x0000000b8409b615ULL,
+0x0000000400800419ULL,
+0x000000000609b611ULL,
+0x0000000007000e02ULL,
+0x0000000080800061ULL,
+0x0000000200cb0461ULL,
+0x00000000000b8000ULL,
+0x0000000003000602ULL,
+0x0000000080800061ULL,
+0x0000000200cb0461ULL,
+0x00000000000b8001ULL,
+0x00000000000985edULL,
+0x0000000002800002ULL,
+0x000000500220220aULL,
+0x000000140606550aULL,
+0x000000140606c50aULL,
+0x0000000002a01202ULL,
+0x000000500680100aULL,
+0x000000140286550aULL,
+0x000000000300d502ULL,
+0x000000500220340aULL,
+0x000000140306660aULL,
+0x000000140686c40aULL,
+0x000000140206660aULL,
+0x000000000600dd02ULL,
+0x000000500720550aULL,
+0x0000001806064c0aULL,
+0x000000180306c60aULL,
+0x0000000002001102ULL,
+0x000000500020c50aULL,
+0x000000000600e402ULL,
+0x000000500220440aULL,
+0x000000140606cc0aULL,
+0x000000000320d602ULL,
+0x000000500100e50aULL,
+0x000000180086c60aULL,
+0x00000000000000c4ULL,
+0x0000000002000002ULL,
+0x0000005002a0210aULL,
+0x000000140280540aULL,
+0x0000000003005502ULL,
+0x000000500620200aULL,
+0x000000140680c50aULL,
+0x0000000002004402ULL,
+0x0000005003a0cc0aULL,
+0x0000000002a03702ULL,
+0x000000500700c50aULL,
+0x000000140280650aULL,
+0x000000140280e50aULL,
+0x000000000000c502ULL,
+0x000000500120c70aULL,
+0x000000000200c402ULL,
+0x0000005000a0d50aULL,
+0x0000000000000000ULL,
+0x000000140080410aULL,
+0x00000000000000c4ULL,
+0x0000000006009202ULL,
+0x000000500220a10aULL,
+0x0000001806064c0aULL,
+0x0000000002808202ULL,
+0x0000005006a0a00aULL,
+0x000000180706d50aULL,
+0x000000000320cc02ULL,
+0x000000500280ee0aULL,
+0x0000000006a0d502ULL,
+0x000000500780a20aULL,
+0x000000140386dd0aULL,
+0x000000000300f602ULL,
+0x0000005002a0e50aULL,
+0x000000180306560aULL,
+0x0000000000000000ULL,
+0x000000180306760aULL,
+0x0000001806866d0aULL,
+0x000000000280f502ULL,
+0x0000005007a0450aULL,
+0x0000000000000000ULL,
+0x0000000003810502ULL,
+0x00000006808b0013ULL,
+0x000000300281050aULL,
+0x00000008000000a4ULL,
+0x000000200000502aULL,
+0x00000000000000fcULL,
+0x0000000c000000a4ULL,
+0x00000025d000006cULL,
+0x000000000600dc02ULL,
+0x000000500020e60aULL,
+0x000000180086fc0aULL,
+0x000000140107170aULL,
+0x00000000000000c4ULL,
+0x000000000200a102ULL,
+0x000000500620920aULL,
+0x000000140600c40aULL,
+0x000000000200a002ULL,
+0x0000005006a0820aULL,
+0x000000140680d40aULL,
+0x000000140200dc0aULL,
+0x000000000700a202ULL,
+0x0000005002a0dd0aULL,
+0x000000000300c402ULL,
+0x0000005003a0350aULL,
+0x0000000000000000ULL,
+0x000000140300670aULL,
+0x000000000380d502ULL,
+0x0000005007a0e60aULL,
+0x0000000000000000ULL,
+0x0000001407807f0aULL,
+0x000000000380d102ULL,
+0x000000500320c00aULL,
+0x0000000000000000ULL,
+0x000000140380760aULL,
+0x0000000003007502ULL,
+0x0000005002a0d50aULL,
+0x000000000200f402ULL,
+0x0000005002a0e50aULL,
+0x0000000000000000ULL,
+0x0000000003810502ULL,
+0x00000006808b0013ULL,
+0x000000300281050aULL,
+0x00000008000000a4ULL,
+0x000000200000502aULL,
+0x00000000000000fcULL,
+0x0000000c000000a4ULL,
+0x00000025d000006cULL,
+0x000000000000df02ULL,
+0x0000005000a0a60aULL,
+0x000000140101170aULL,
+0x000000140080410aULL,
+0x00000000000000c4ULL,
+0x0000000002810202ULL,
+0x00000006808b0013ULL,
+0x0000000000000000ULL,
+0x000000300281050aULL,
+0x0000000006810a02ULL,
+0x00000006808b0013ULL,
+0x0000000000000000ULL,
+0x0000003006810d0aULL,
+0x0000003006010c0aULL,
+0x000000200000502aULL,
+0x00000000000000fcULL,
+0x0000000c000000a4ULL,
+0x000000278000006cULL,
+0x000000200000d02aULL,
+0x00000000000000fcULL,
+0x0000000c000000a4ULL,
+0x00000027c000006cULL,
+0x000000200000c02aULL,
+0x00000000000000fcULL,
+0x0000000c000000a4ULL,
+0x0000002740000064ULL,
+0x00000034000000d4ULL,
+0x00000000000000c4ULL,
+0x0000000001000002ULL,
+0x00000006000b0003ULL,
+0x0000000000000000ULL,
+0x00000000000000c4ULL,
+0x000000140001180aULL,
+0x000000140081190aULL,
+0x0000001401011a0aULL,
+0x00000000000000c4ULL,
+0x00000000000000c4ULL,
+0x0000000001810302ULL,
+0x0000005005a10b0aULL,
+0x0000000002000002ULL,
+0x000000500620110aULL,
+0x000000140206340aULL,
+0x000000180606cb0aULL,
+0x0000000002000402ULL,
+0x0000005006210c0aULL,
+0x000000140206c40aULL,
+0x000000300201040aULL,
+0x00000000000000c4ULL,
+0x0000000002801002ULL,
+0x0000005005a10b0aULL,
+0x000000140286b50aULL,
+0x000000140186300aULL,
+0x0000000002000002ULL,
+0x000000500620110aULL,
+0x000000140606c50aULL,
+0x0000000002003402ULL,
+0x0000005006210c0aULL,
+0x000000140206c40aULL,
+0x000000300201040aULL,
+0x00000000000000c4ULL,
+0x000000040400000aULL,
+0x000000000000002cULL,
+0x0000000c0000800eULL,
+0x0000000c0400880aULL,
+0x000000080000007cULL,
+0x00000008000000a4ULL,
+0x0000000040000002ULL,
+0x0000000000400024ULL,
+0x0000000000400034ULL,
+0x0000000c0400000aULL,
+0x0000000c0400880aULL,
+0x0000000c0400880aULL,
+0x00000008000000a4ULL,
+0x0000000000000802ULL,
+0x0000000000400024ULL,
+0x0000000000400034ULL,
+0x0000000c0400800aULL,
+0x00000008000000a4ULL,
+0x0000000008000802ULL,
+0x0000000000400024ULL,
+0x0000000000400034ULL,
+0x0000000c0400800aULL,
+0x00000008000000a4ULL,
+0x0000000010000802ULL,
+0x0000000000400024ULL,
+0x0000000000400034ULL,
+0x0000000c0400800aULL,
+0x00000008000000a4ULL,
+0x0000000018000802ULL,
+0x0000000000400024ULL,
+0x0000000000400034ULL,
+0x0000000c0400800aULL,
+0x00000008000000a4ULL,
+0x0000000020000802ULL,
+0x0000000000400024ULL,
+0x0000000000400034ULL,
+0x0000000c0400800aULL,
+0x00000008000000a4ULL,
+0x0000000028000802ULL,
+0x0000000000400024ULL,
+0x0000000000400034ULL,
+0x0000000c0400800aULL,
+0x00000008000000a4ULL,
+0x0000000030000802ULL,
+0x0000000000400024ULL,
+0x0000000000400034ULL,
+0x0000000c0400800aULL,
+0x00000008000000a4ULL,
+0x0000000038000802ULL,
+0x0000000000400024ULL,
+0x0000000000400034ULL,
+0x0000000000000034ULL,
+0x0000000000000002ULL,
+0x0000002ce000005cULL,
+0x0000002c7000004cULL,
+0x00000002000b0101ULL,
+0x0000000a000b0003ULL,
+0x00000036a0000044ULL,
+0x0000002e50400444ULL,
+0x0000000000000034ULL,
+0x0000000c0000000aULL,
+0x0000002ce0000054ULL,
+0x0000000c0000000aULL,
+0x0000000c0000000aULL,
+0x0000000c0000000aULL,
+0x000000000040000cULL,
+0x0000000000000034ULL,
+0x0000000000000000ULL,
+0x000000000040041cULL,
+0x0000000000000034ULL,
+0x0000000000000000ULL,
+0x000000000040021cULL,
+0x0000000000000034ULL,
+0x0000000000000000ULL,
+0x000000000040011cULL,
+0x00000008000000a4ULL,
+0x000000007c000002ULL,
+0x000000000040002cULL,
+0x000000000040003cULL,
+0x0000000c0000800aULL,
+0x0000002ce0000044ULL,
+0x00000008000000a4ULL,
+0x0000000044000002ULL,
+0x000000000040002cULL,
+0x000000000040003cULL,
+0x0000002ee0000044ULL,
+0x0000000000000034ULL,
+0x0000000c0000000aULL,
+0x0000002ee0000054ULL,
+0x0000000c0000800aULL,
+0x0000002ea000004cULL,
+0x00000035801800f4ULL,
+0x0000003560000044ULL,
+0x0000000c0000800aULL,
+0x000000040400000aULL,
+0x000000000000002cULL,
+0x0000000c0000800eULL,
+0x0000000c0400880aULL,
+0x000000080000007cULL,
+0x000000040400000aULL,
+0x000000000000002cULL,
+0x0000000c0000800eULL,
+0x0000000c0400880aULL,
+0x000000080000007cULL,
+0x00000035801800f4ULL,
+0x0000003560000044ULL,
+0x00000036a0000044ULL,
+0x000000080180000aULL,
+0x0000000001820002ULL,
+0x00000007040b0013ULL,
+0x000000040200000aULL,
+0x000000000000002cULL,
+0x0000000c0180430eULL,
+0x0000000c0200440aULL,
+0x000000080000007cULL,
+0x0000000001010002ULL,
+0x00000006108b0093ULL,
+0x0000000005010002ULL,
+0x00000006108b0093ULL,
+0x0000000000000000ULL,
+0x00000032001f80e4ULL,
+0x00000033601f81e4ULL,
+0x00000033801f82e4ULL,
+0x0000000c0181020aULL,
+0x0000000c0181030aULL,
+0x0000001c000000d4ULL,
+0x0000000001004252ULL,
+0x0000005000a0410aULL,
+0x0000000000004002ULL,
+0x000000500121020aULL,
+0x000000300021000aULL,
+0x000000300081010aULL,
+0x000000200000202aULL,
+0x00000000000000fcULL,
+0x0000000c000000a4ULL,
+0x0000000000000002ULL,
+0x0000000600098003ULL,
+0x0000000000810002ULL,
+0x0000000610898093ULL,
+0x00000036a0000044ULL,
+0x0000000004000002ULL,
+0x00000006808b0013ULL,
+0x0000000004800102ULL,
+0x00000006808b0013ULL,
+0x0000000005000202ULL,
+0x00000006808b0013ULL,
+0x0000000000000034ULL,
+0x0000000000000002ULL,
+0x000000334000005cULL,
+0x000000326000004cULL,
+0x0000000800000084ULL,
+0x00000006000b0009ULL,
+0x00000002000b0101ULL,
+0x0000001000000084ULL,
+0x00000006000b0009ULL,
+0x00000036a0000044ULL,
+0x0000000000000034ULL,
+0x00000034000000d4ULL,
+0x0000003340000054ULL,
+0x00000038000000d4ULL,
+0x000000330000004cULL,
+0x00000030f0000044ULL,
+0x00000038000000d4ULL,
+0x00000030f0000044ULL,
+0x00000034000000d4ULL,
+0x00000030f0000044ULL,
+0x000000080180000aULL,
+0x0000000001820002ULL,
+0x00000007040b0013ULL,
+0x0000000005840052ULL,
+0x00000007040b0013ULL,
+0x0000003c000000d4ULL,
+0x00000004000000a4ULL,
+0x000000200000402aULL,
+0x0000000000000012ULL,
+0x00000000000b0001ULL,
+0x0000000000098101ULL,
+0x00000036a0000044ULL,
+0x000000040200000aULL,
+0x000000000000002cULL,
+0x0000000c0000400eULL,
+0x0000000c0200440aULL,
+0x000000080000007cULL,
+0x00000036001f87e4ULL,
+0x00000035801f89e4ULL,
+0x000000040200000aULL,
+0x000000000000002cULL,
+0x0000000c0400480eULL,
+0x0000000c0200440aULL,
+0x000000080000007cULL,
+0x00000035e01f86e4ULL,
+0x000000080180000aULL,
+0x00000035a01f84e4ULL,
+0x00000035c01f85e4ULL,
+0x000000300001000aULL,
+0x00000036a0000044ULL,
+0x000000300001005aULL,
+0x00000036a0000044ULL,
+0x000000140006805aULL,
+0x0000003560000044ULL,
+0x000000180006805aULL,
+0x0000003560000044ULL,
+0x0000000c0000805aULL,
+0x0000003560000044ULL,
+0x0000000c0181080aULL,
+0x0000001c000000d4ULL,
+0x00000004000000a4ULL,
+0x0000000c0000405aULL,
+0x0000003560000044ULL,
+0x0000000c0181000aULL,
+0x0000001c000000d4ULL,
+0x00000004000000a4ULL,
+0x000000140001145aULL,
+0x0000003560000044ULL,
+0x0000000c000000a4ULL,
+0x0000000000000044ULL,
 };
 
 #endif				/**/
diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
index 467edea..baea9c8 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
@@ -148,7 +148,7 @@ extern uint32_t get_proc_id(void);
 
 extern void nlm_hal_set_rsa_cge(int node, int enable);
 extern void nlm_hal_set_sae_engine_sel(int node);
-extern void nlm_hal_set_rsa_engine_sel(void);
+extern void nlm_hal_set_rsa_engine_sel(int node);
 extern void nlm_hal_set_sae_freq(int node, int freq);
 extern int  nlm_hal_get_sae_chip_feature(void);
 extern void nlm_hal_set_rsa_freq(int node, int freq);
diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h
index 474e13c..77cd9a2 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h
@@ -1123,11 +1123,11 @@ enum xlp2xx_sys_cfg_regs {
 #define nlm_hal_write_sys_reg(node, index, val) \
         nlm_hal_write_32bit_reg((xlp_sys_base[node] + 0x100), (index), (val))
 
-#define nlm_hal_read_rsa_reg(reg) \
-        nlm_hal_read_32bit_reg((xlp_rsa_base), (reg))
+#define nlm_hal_read_rsa_reg(node, reg) \
+        nlm_hal_read_32bit_reg((xlp_rsa_base[node]), (reg))
 
-#define nlm_hal_write_rsa_reg(reg, val) \
-        nlm_hal_write_32bit_reg ((xlp_rsa_base), (reg), (val))
+#define nlm_hal_write_rsa_reg(node, reg, val) \
+        nlm_hal_write_32bit_reg ((xlp_rsa_base[node]), (reg), (val))
 
 #define nlm_hal_read_sae_reg(node, reg) \
         nlm_hal_read_32bit_reg((xlp_sae_base[node]), (reg))
@@ -1135,15 +1135,6 @@ enum xlp2xx_sys_cfg_regs {
 #define nlm_hal_write_sae_reg(node, reg, val) \
         nlm_hal_write_32bit_reg ((xlp_sae_base[node]), (reg), (val))
 
-#if 0
-#define nlm_hal_read_rsa_reg(node, reg) \
-        nlm_hal_read_32bit_reg((xlp_rsa_base[node]), (reg))
-
-#define nlm_hal_write_rsa_reg(node, reg, val) \
-        nlm_hal_write_32bit_reg ((xlp_rsa_base[node]), (reg), (val))
-
-#endif
-
 /* SPI */
 #define XLP_SPI_CONFIG			0x40
     #define XLP_SPI_CPHA		0x01
diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
index 9341d26..e429237 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
@@ -72,7 +72,7 @@ unsigned long xlp_io_base;
 unsigned long xlp_fmn_base[NLM_MAX_NODES];
 unsigned long xlp_nae_base[NLM_MAX_NODES];
 unsigned long xlp_sae_base[NLM_MAX_NODES];
-unsigned long xlp_rsa_base;
+unsigned long xlp_rsa_base[NLM_MAX_NODES];
 unsigned long xlp_mac_base[NLM_MAX_NODES];
 unsigned long xlp_poe_base_pcie[NLM_MAX_NODES];
 unsigned long xlp_poe_base_pcim[NLM_MAX_NODES];
@@ -408,6 +408,9 @@ __inline__ void nlm_hal_init(void)
 			xlp_poe_base_pcim[node] = (uint64_t)xlp9xx_cpu_mem_base(-1, XLP9XX_PCIE_DEV_BASE(XLP_POE));
 			xlp_poe_base_pcie[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_POE)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 			xlp_sys_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE( XLP_SYS)) & 0x1fffffff; /*For now . Will be fixed soon.*/
+
+			xlp_sae_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_SAE)) & 0x1fffffff; /*For now . Will be fixed soon.*/
+			xlp_rsa_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 		} else 
 		{
 			xlp_fmn_base[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(node, XLP_FMN)), PCI_MEM_BAR_0);
@@ -421,12 +424,12 @@ __inline__ void nlm_hal_init(void)
 			
 			xlp_sys_base[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_SYS)) & 0x1fffffff; /*For now . Will be fixed soon.*/
 			xlp_sae_base[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_SAE)) & 0x1fffffff; /* For now . Will be fixed soon.*/
+			xlp_rsa_base[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 
 		}
 
 	}
 	if(!is_nlm_xlp9xx()){
-		xlp_rsa_base = (xlp_io_base | XLP_PCIE_DEV_BASE(0, XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 		if ( is_nlm_xlp3xx() || is_nlm_xlp2xx() ) {
 			xlp_regex_base_pcie = (xlp_io_base | (XLP_PCIE_DEV_BASE(0, XLP_3XX_REGEX))) & 0x1fffffff;
 			xlp_regex_base_pcim = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(0, XLP_3XX_REGEX)), PCI_MEM_BAR_0);
@@ -1142,36 +1145,42 @@ uint32_t get_dom_owner_mask(void *fdt, int dom_id, char *module)
 void nlm_hal_set_rsa_cge(int node, int enable)
 {
 #define NLM_RSA_CFG_REG 0x40
-	uint32_t d32 = nlm_hal_read_rsa_reg(NLM_RSA_CFG_REG);
+	uint32_t d32 = nlm_hal_read_rsa_reg(node, NLM_RSA_CFG_REG);
 	if(enable)
 		d32 |= 1<<9;
 	else
 		d32 &= ~(1<<9);
-	nlm_hal_write_rsa_reg(NLM_RSA_CFG_REG, d32);
+	nlm_hal_write_rsa_reg(node, NLM_RSA_CFG_REG, d32);
 }
 
 #define NLM_SAE_ENGINE_SELECT_REG_0 0x41
 void nlm_hal_set_sae_engine_sel(int node)
 {
 	int i, n;
+	unsigned int val;
+
 	if(is_nlm_xlp2xx()) {
 		return;
 	}
 	if (is_nlm_xlp9xx())  {
-		/* SEC-TODO */
+		/* There are 8 vcs, pipes 16 */
+		n = 8;
+		val  = 0xffff;
 
-	} else if(is_nlm_xlp3xx())
+	} else if(is_nlm_xlp3xx()) {
 		n = 1;
-	else
+		val =  0x00FFFFFF;
+	} else {
 		n = 8;
-
+		val =  0x00FFFFFF;
+	}
 	for (i = 0; i < n; i++) {
-		nlm_hal_write_sae_reg(node, NLM_SAE_ENGINE_SELECT_REG_0 + i, 0x00FFFFFF);
+		nlm_hal_write_sae_reg(node, NLM_SAE_ENGINE_SELECT_REG_0 + i, val);
 	}
 }
 
 #define NLM_RSA_ENGINE_SELECT_REG_0 0x41
-void nlm_hal_set_rsa_engine_sel(void)
+void nlm_hal_set_rsa_engine_sel(int node)
 {
 	int i, n;
 	unsigned int val;
@@ -1180,7 +1189,8 @@ void nlm_hal_set_rsa_engine_sel(void)
 	}
 
 	if (is_nlm_xlp9xx())  {
-		/* SEC-TODO */
+		n = 3;
+		val = 0xffffffff; /* got it from verification code */
 
 	} else if(is_nlm_xlp3xx()) {
 		n = 1;
@@ -1190,7 +1200,7 @@ void nlm_hal_set_rsa_engine_sel(void)
 		val = 0x7ffffff;
 	}
 	for (i = 0; i < n; i++) {
-		nlm_hal_write_rsa_reg(NLM_RSA_ENGINE_SELECT_REG_0 + i, val);
+		nlm_hal_write_rsa_reg(node, NLM_RSA_ENGINE_SELECT_REG_0 + i, val);
 	}
 }
 
@@ -1198,8 +1208,8 @@ void nlm_hal_get_crypto_vc_nums(int *vcbase, int *vclimit)
 {
 
 	if (is_nlm_xlp9xx())  {
-		/* SEC-TODO */
-
+		*vcbase = XLP_9XX_SEC_VC_BASE;
+		*vclimit = XLP_9XX_SEC_VC_LIMIT;
 	} else if(is_nlm_xlp3xx()) {
 		*vcbase = XLP_3XX_CRYPTO_VC_BASE;
 		*vclimit = XLP_3XX_CRYPTO_VC_LIMIT;
@@ -1215,8 +1225,8 @@ void nlm_hal_get_crypto_vc_nums(int *vcbase, int *vclimit)
 void nlm_hal_get_rsa_vc_nums(int *vcbase, int *vclimit)
 {
 	if (is_nlm_xlp9xx())  {
-		/* SEC-TODO */
-
+		*vcbase = XLP_9XX_RSA_VC_BASE;
+		*vclimit = XLP_9XX_RSA_VC_LIMIT;
 	} else if(is_nlm_xlp3xx()) {
 		*vcbase  = XLP_3XX_RSA_ECC_VC_BASE;
 		*vclimit = XLP_3XX_RSA_ECC_VC_LIMIT;
-- 
1.7.1

