From 1bcc5916db505f6b30d8137f8b9080528db5841b Mon Sep 17 00:00:00 2001
From: Pranav Bhalerao <pranavb@broadcom.com>
Date: Thu, 30 Oct 2014 12:14:35 +0530
Subject: seclib: Changes to calculate payload offset for Griffin B0 board.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/seclib/saesoc_lib.h b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
index ef9a67b..800dcfa 100644
--- a/arch/mips/netlogic/lib/seclib/saesoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
@@ -104,6 +104,8 @@ struct saesoc_sdesc_priv_data {
 	*  based on the ivdescs count */
 	int frag_idx;
 	int addl_hash_len;
+        int aad_offset;
+        int payload_offset;
 	_uint64_t ddesc[6]; /* valid for gen1 only */
 };
 
@@ -555,6 +557,7 @@ static inline int saesoc_new_session(
 
 			/* copy the init info to the private structure */
 			spriv->hash_en = 1;
+                        spriv->aad_offset = initp->hash.aad_offset;
 			if(initp->hash.iv_mode == SAESOC_IV_FROM_PKT_DESC) {
 				/* IV can be 8 byte or 16 byte (space is for 128 bit always) */
 				spriv->hash_iv_descs = 2;
@@ -613,6 +616,7 @@ static inline int saesoc_new_session(
 		saesoc_gen2_set_tls(sd->descs[0], 
 				(initp->flags & SAESOC_IF_TLS_ON) == 0 ? 0 :1);
 		saesoc_gen2_set_payload_offset(sd->descs[1], initp->payload_offset);
+                spriv->payload_offset = initp->payload_offset;
 
 		/* copy the init info to the private structure */
 		spriv->ldesc = keyidx;
@@ -1591,16 +1595,17 @@ static inline int saesoc_set_aad_len(
                 IF_SAESOC_PTYPE_IS_GEN2_BX
                 { 
                     struct saesoc_ddesc_priv_data *dpriv;
-                    struct saesoc_session_desc    *sdesc;  
+                    struct saesoc_session_desc    *sdesc; 
+                    struct saesoc_sdesc_priv_data *spriv; 
                     int aad_offset = 0;
                     int payload_offset = 0;
                     
                     dpriv = (struct saesoc_ddesc_priv_data *)ddesc->lib_priv;
                     sdesc = (struct saesoc_session_desc    *)dpriv->sdesc;
-                    aad_offset = SAESOC_GEN2_GET_BITS(sdesc->descs[0],  
-                                    AAD_OFFSET);
-                    payload_offset = SAESOC_GEN2_GET_BITS(sdesc->descs[1],
-                                    PAYLOAD_OFFSET);
+                    spriv = (struct saesoc_sdesc_priv_data *)sdesc->lib_priv;
+                    aad_offset = spriv->aad_offset;
+                    payload_offset = spriv->payload_offset;
+
                     if ((aad_offset + aad_len) <= payload_offset) {
                             payload_offset -= (aad_offset + aad_len);
                             saesoc_gen2_set_payload_offset(sdesc->descs[1],
-- 
1.7.1

