From 8af83b64403a11c96bd4cd27e6d1b3c96762c56d Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Mon, 6 May 2013 11:50:00 +0530
Subject: kernel: Add memcpy_xxio functions.

 The original memcpy_xxio functions returns swapped data. This cuases drivers
like sata_sil24 to fail.

 Added a new definitions for memcpy_xxio() which internally uses  readb().
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/include/asm/io.h b/arch/mips/include/asm/io.h
index b84e1fb..8831fd9 100644
--- a/arch/mips/include/asm/io.h
+++ b/arch/mips/include/asm/io.h
@@ -546,6 +546,11 @@ BUILDSTRING(q, u64)
 #define mmiowb() asm volatile ("sync" ::: "memory")
 #endif
 
+#if defined(CONFIG_CPU_XLP) || defined(CONFIG_CPU_XLR)
+extern void memcpy_fromio(void *dst, const volatile void __iomem *src, long count);
+extern void memcpy_toio(volatile void __iomem *dst, const void *src, long count);
+extern void memset_io(volatile void __iomem *addr, int c, long count);
+#else
 static inline void memset_io(volatile void __iomem *addr, unsigned char val, int count)
 {
 	memset((void __force *) addr, val, count);
@@ -558,6 +563,7 @@ static inline void memcpy_toio(volatile void __iomem *dst, const void *src, int
 {
 	memcpy((void __force *) dst, src, count);
 }
+#endif
 
 /*
  * The caches on some architectures aren't dma-coherent and have need to
diff --git a/arch/mips/netlogic/common/Makefile b/arch/mips/netlogic/common/Makefile
index 44b0e7e..324347c 100644
--- a/arch/mips/netlogic/common/Makefile
+++ b/arch/mips/netlogic/common/Makefile
@@ -2,5 +2,6 @@ obj-y				+= irq.o time.o
 obj-y				+= nlm-dma.o
 obj-y				+= reset.o
 obj-y				+= memory.o
+obj-y				+= io.o
 obj-$(CONFIG_SMP)		+= smp.o smpboot.o
 obj-$(CONFIG_EARLY_PRINTK)	+= earlycons.o
diff --git a/arch/mips/netlogic/common/io.c b/arch/mips/netlogic/common/io.c
new file mode 100644
index 0000000..527ac26
--- /dev/null
+++ b/arch/mips/netlogic/common/io.c
@@ -0,0 +1,41 @@
+#include <linux/module.h>
+#include <linux/types.h>
+
+#include <asm/io.h>
+
+/* Based on arch/ia64/lib/io.c */
+
+void memcpy_fromio(void *dst, const volatile void __iomem *src, long count)
+{
+        char *to = dst;
+
+        while (count) {
+                count--;
+                *to++ = readb(src++);
+        }
+}
+EXPORT_SYMBOL(memcpy_fromio);
+
+void memcpy_toio(volatile void __iomem *dst, const void *src, long count)
+{
+        const char *from = src;
+
+        while (count) {
+                count--;
+                writeb(*from++, dst++);
+        }
+}
+EXPORT_SYMBOL(memcpy_toio);
+
+void memset_io(volatile void __iomem *dst, int c, long count)
+{
+        unsigned char ch = (char)(c & 0xff);
+
+        while (count) {
+                count--;
+                writeb(ch, dst);
+                dst++;
+        }
+}
+EXPORT_SYMBOL(memset_io);
+
-- 
1.7.1

