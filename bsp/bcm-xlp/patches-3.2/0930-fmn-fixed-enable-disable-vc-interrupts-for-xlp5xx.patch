From e48bb298e796b7b5d8534b1e9132f20efc798386 Mon Sep 17 00:00:00 2001
From: Virendra Pathak <vpathak@broadcom.com>
Date: Tue, 11 Feb 2014 16:35:51 +0530
Subject: fmn: fixed enable/disable vc interrupts for xlp5xx

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
index 534fddc..f54a828 100644
--- a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
+++ b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
@@ -780,7 +780,7 @@ unsigned long long stids[16];
 void nlm_hal_enable_vc_intr(int node, int vc)
 {
 	uint64_t val = 0;
-	if (is_nlm_xlp9xx()) {
+	if (IS_NLM_XLP9XX_FAMILY) {
 		val =  (0ULL << 7) | (0x2ULL << 5) | (0x0ULL << 2) | (0x1ULL << 0);
 		//*(uint64_t *)(xlp_fmn_base[node] + (1 << 13) + (vc << 3)) = val;
 		nlh_write_cfg_reg64(xlp_fmn_base[node] + (1 << 13) + (vc << 3), val);
@@ -798,7 +798,7 @@ void nlm_hal_enable_vc_intr(int node, int vc)
 void nlm_hal_disable_vc_intr(int node, int vc)
 {
 	uint64_t val = 0;
-	if (is_nlm_xlp9xx()) {
+	if (IS_NLM_XLP9XX_FAMILY) {
 		//*(uint64_t *)(xlp_fmn_base[node] + (1 << 13) + (vc << 3)) = 0x0;
 		nlh_write_cfg_reg64(xlp_fmn_base[node] + (1 << 13) + (vc << 3), 0);
 	} else {
diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_xlp.h b/arch/mips/netlogic/lib/syslib/include/nlm_xlp.h
index 8cc7d31..fd4edfa 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_xlp.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_xlp.h
@@ -25,6 +25,12 @@ extern cpumask_t phys_cpu_present_map;
 #define NLM_MAX_COREPAIR_PER_NODE_9XX	10
 #define NLM_MAX_VC_MASK_9XX		0x1ff	/* 0x1ff for 320 vc in xlp9xx per node*/
 
+#define NLM_MAX_CPU_NODE_5XX		1
+#define NLM_MAX_CPU_PER_NODE_5XX	32
+#define NLM_MAX_VC_PER_THREAD_5XX	4
+#define NLM_MAX_COREPAIR_PER_NODE_5XX	4
+#define NLM_MAX_VC_MASK_5XX		0x7f	/* 0x7f for 128 vc in xlp5xx per node*/
+
 typedef struct _big_mask_9xx {
 	uint64_t map[NLM_MAX_CPU_NODE_9XX][NUM_CPUMASK_WORDS_9XX];
 } big_mask_t;
diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
index 37b0c73..af777e4 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
@@ -431,18 +431,18 @@ __inline__ void nlm_hal_init(void)
 
 			xlp_sae_base[node] = (xlp_io_base | XLP9XX_SAE_RSA_BUS_NUM | XLP9XX_PCIE_DEV_BASE(XLP_SAE)) & 0x1fffffff; /*For now . Will be fixed soon.*/
 			xlp_rsa_base[node] = (xlp_io_base | XLP9XX_SAE_RSA_BUS_NUM | XLP9XX_PCIE_DEV_BASE(XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
-		} else if (is_nlm_xlp5xx()) {
-
-			xlp5xx_mac0_base[0] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_NAE0));
-			xlp5xx_mac1_base[0] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_NAE1));
-			xlp5xx_poe0_base[0] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_POE0));
-			xlp5xx_poe1_base[0] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_POE1));
-			xlp5xx_fmn_base[0] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP_FMN));
-			xlp_sys_base[0] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_SYS));
-			xlp5xx_sys_clk_base[0] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_CLK));
-
-			xlp_sae_base[0] = (xlp_io_base | XLP9XX_SAE_RSA_BUS_NUM | XLP9XX_PCIE_DEV_BASE(XLP_SAE)) & 0x1fffffff; /*For now . Will be fixed soon.*/
-			xlp_rsa_base[0] = (xlp_io_base | XLP9XX_SAE_RSA_BUS_NUM | XLP9XX_PCIE_DEV_BASE(XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
+		} else if ((is_nlm_xlp5xx()) && (node == 0)) { /* xlp5xx have single node only */
+
+			xlp5xx_mac0_base[node] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_NAE0));
+			xlp5xx_mac1_base[node] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_NAE1));
+			xlp5xx_poe0_base[node] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_POE0));
+			xlp5xx_poe1_base[node] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_POE1));
+			xlp5xx_fmn_base[node] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP_FMN));
+			xlp_sys_base[node] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_SYS));
+			xlp5xx_sys_clk_base[node] = (uint64_t)xlp9xx_cpu_io(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_CLK));
+
+			xlp_sae_base[node] = (xlp_io_base | XLP9XX_SAE_RSA_BUS_NUM | XLP9XX_PCIE_DEV_BASE(XLP_SAE)) & 0x1fffffff; /*For now . Will be fixed soon.*/
+			xlp_rsa_base[node] = (xlp_io_base | XLP9XX_SAE_RSA_BUS_NUM | XLP9XX_PCIE_DEV_BASE(XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 		} else
 		{
 			xlp_fmn_base[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(node, XLP_FMN)), PCI_MEM_BAR_0);
-- 
1.7.1

