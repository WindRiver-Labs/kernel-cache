From 40bb0094ed4640503d98045bfff956e717536b24 Mon Sep 17 00:00:00 2001
From: Saswat Kumar Dash <saswat.dash@broadcom.com>
Date: Tue, 13 May 2014 22:03:30 -0700
Subject: xlp5xx: add support for lookup app

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/alelib/ale_api.h b/arch/mips/netlogic/lib/alelib/ale_api.h
index 5afeb94..26d129c 100644
--- a/arch/mips/netlogic/lib/alelib/ale_api.h
+++ b/arch/mips/netlogic/lib/alelib/ale_api.h
@@ -209,10 +209,16 @@ ale_direct_search_req(ale_t* ale,              //ale pointer
 
     ale_print(ALE_DBG_INFO, "%s: Prefix: %x %x %x %x\n",
               __func__, str_ptr[0], str_ptr[1], str_ptr[2], str_ptr[3]);
-    desc[i++] = (uint64_t)reverse_32(str_ptr[1]) << 32 | (uint64_t)reverse_32(str_ptr[0]); 
-    if(str_len > 64)
-        desc[i++] = (uint64_t)reverse_32(str_ptr[3]) << 32 | (uint64_t)reverse_32(str_ptr[2]); 
-
+    if (is_nlm_xlp9xx()) {
+    	desc[i++] = (uint64_t)reverse_32(str_ptr[1]) << 32 | (uint64_t)reverse_32(str_ptr[0]); 
+    	if(str_len > 64)
+        	desc[i++] = (uint64_t)reverse_32(str_ptr[3]) << 32 | (uint64_t)reverse_32(str_ptr[2]); 
+     }else if (is_nlm_xlp5xx()) {
+	desc[i++] = (uint64_t)(str_ptr[0]) << 32 | (uint64_t)(str_ptr[1]);
+	if (str_len > 64)
+		desc[i++] = (uint64_t)(str_ptr[2]) << 32 | (uint64_t)(str_ptr[3]);
+    }
+	
     if (i == 2) {
         while (nlm_hal_send_msg2(ALE_VC, 0, desc[0], desc[1]));   
     } else if (i == 3) {
@@ -254,7 +260,7 @@ ale_memory_search_req(ale_t* ale,             //ale pointer
                      ){
 
     uint32_t* str_ptr;
-    int       str_len, i;
+    int       str_len = 0, i;
     int       req_cnt = 0, desc_cnt = 0;
     uint64_t  desc0, desc2;
     uint64_t  req_ptr_phys = ale_virt_to_phys(req_ptr);
@@ -272,19 +278,29 @@ ale_memory_search_req(ale_t* ale,             //ale pointer
 
         str_ptr = prefix->prefix_string;
 
-        ale_print(ALE_DBG_INFO, "%s: Prefix[%d]: %x %x %x %x\n",
+       ale_print(ALE_DBG_INFO, "%s: Prefix[%d]: %x %x %x %x\n",
                   __func__, i, str_ptr[0], str_ptr[1], str_ptr[2], str_ptr[3]);
 
-        *req_ptr++ = (uint64_t)reverse_32(str_ptr[1]) << 32 | (uint64_t)reverse_32(str_ptr[0]);  
-        desc_cnt++;
-        if(str_len > 64){
-            *req_ptr++ = (uint64_t)reverse_32(str_ptr[3]) << 32 | (uint64_t)reverse_32(str_ptr[2]);
-            desc_cnt++;
+	if (is_nlm_xlp9xx()) {
+        	*req_ptr++ = (uint64_t)reverse_32(str_ptr[1]) << 32 | (uint64_t)reverse_32(str_ptr[0]);  
+        	desc_cnt++;
+        	if(str_len > 64){
+            	*req_ptr++ = (uint64_t)reverse_32(str_ptr[3]) << 32 | (uint64_t)reverse_32(str_ptr[2]);
+            	desc_cnt++;
         }  
         req_cnt++;
         prefix++;
+    }else if (is_nlm_xlp5xx()) {
+	*req_ptr++ = (uint64_t)(str_ptr[0]) << 32 | (uint64_t)(str_ptr[1]);
+	desc_cnt++;
+	if (str_len > 64) {
+		*req_ptr++ = (uint64_t)(str_ptr[2]) << 32 | (uint64_t)(str_ptr[3]);
+		desc_cnt++;
+	}
+	req_cnt++;
+	prefix++;
     }
-    
+}
     ale_print(ALE_DBG_INFO, "%s: req_ptr %llx, rsp_ptr %llx\n",
               __func__, (long long unsigned int)req_ptr_phys,
               (long long unsigned int)ale_virt_to_phys(rsp_ptr));
-- 
1.7.1

