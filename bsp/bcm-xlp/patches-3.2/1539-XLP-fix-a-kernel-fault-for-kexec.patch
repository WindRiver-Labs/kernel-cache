From 3e583e2408851b66ee3e517749c2685d234e2f8f Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Tue, 29 Jul 2014 11:28:25 +0800
Subject: XLP:fix a kernel fault for kexec

When performing kexec, following fault message would seen:

CPU 0 Unable to handle kernel paging request at virtual address 0000000000000000, epc == ffffffff8123b64c, ra == ffffffff81240188
Oops[#1]:
CPU: 0 PID: 0 Comm: swapper/0 Not tainted 3.10.38-ltsi-WR6.0.0.0_cgl #33
task: ffffffff81c6b430 ti: ffffffff81b80000 task.ti: ffffffff81b80000
$ 0   : 0000000000000000 ffffffff81240188 0000000000010001 0000000000000005
$ 4   : ffffffff81b90600 0000000000000000 ffffffff81c655c0 ffffffffffffffc0
$ 8   : 00000000000164c0 000000000000041d 0000000000000001 0000000000000000
$12   : ffffffff81b8fc18 000000001000001f 0000000000000000 ffffffff81ff0000
$16   : 0000000000000000 0000000000000005 ffffffff81d33bb0 0000000000000000
$20   : 0000000000000000 ffffffff81cde9f0 ffffffff81cdea18 0000000000000001
$24   : 0000000000000003 0000000000000001
$28   : ffffffff81b80000 ffffffff81b8fbc0 ffffffff81b8fbc0 ffffffff81240188
Hi    : 0000000000000000
Lo    : 4733333380000000
epc   : ffffffff8123b64c handle_irq_event_percpu+0x74/0x318
    Not tainted
ra    : ffffffff81240188 handle_percpu_irq+0xa0/0xe8
Status: 5400f8e2KX SX UX KERNEL EXL
Cause : 00800008
BadVA : 0000000000000000
PrId  : 000c1501 (Broadcom XLPII)
Modules linked in:
Process swapper/0 (pid: 0, threadinfo=ffffffff81b80000, task=ffffffff81c6b430, tls=0000000000000000)
*HwTLS: fffffffffadebeef
Stack : ffffffff81b90600 0000000000000005 ffffffff81b90600 ffffffff81c6d040
  ffffffff81d33bb0 0000000000000004 c000000002170000 0000000000000000
  0000000000000000 0000000000000001 ffffffff81b8fc20 ffffffff81240188
  0000000000000000 ffffffff81dc0000 ffffffff81b8fc40 ffffffff8123aa8c
  ffffffff81b8fc50 ffffffff819b4d24 0000000000000005 000000000000000d
  ffffffff81b8fdf8 ffffffff8116e560 0000000000000000 ffffffff81992c28
  ffffffff81c60000 0000000000000001 ffffffff81c70ef0 ffffffff81cde5b8
  0000000000000000 ffffffffffffffc0 00000000000164c0 000000000000041d
  0000000000000001 0000000000000000 0000000000000000 ffffffff815c7668
  0000000000000000 ffffffff81ff0000 ffffffff81d30000 ffffffff81dc0000
  ...
Call Trace:
[<ffffffff8123b64c>] handle_irq_event_percpu+0x74/0x318
[<ffffffff81240188>] handle_percpu_irq+0xa0/0xe8
[<ffffffff8123aa8c>] generic_handle_irq+0x4c/0x80
[<ffffffff819b4d24>] do_IRQ+0x2c/0x40
[<ffffffff8116e560>] ret_from_irq+0x0/0x4
[<ffffffff81cf08f4>] start_kernel+0x2ac/0x4c8

Add a check to prevent above fault.

Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/kernel/irq/handle.c b/kernel/irq/handle.c
index 7f50c55..b34183c 100644
--- a/kernel/irq/handle.c
+++ b/kernel/irq/handle.c
@@ -141,6 +141,10 @@ handle_irq_event_percpu(struct irq_desc *desc, struct irqaction *action)
 		irqreturn_t res;
 
 		trace_irq_handler_entry(irq, action);
+#ifdef CONFIG_CPU_XLP
+		if ((!action) || (!action->handler))
+			break;
+#endif
 		res = action->handler(irq, action->dev_id);
 		trace_irq_handler_exit(irq, action, res);
 
-- 
1.7.1

