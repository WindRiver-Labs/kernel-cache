From 2d58c29356f89b7b50fa075d13eb04b3fe863d11 Mon Sep 17 00:00:00 2001
From: Jayachandran C <jchandra@broadcom.com>
Date: Fri, 4 Oct 2013 10:00:48 +0530
Subject: nmiprof: review changes

Changes:
* move static function to .c file
* make inlines static in header file
* return error code
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/misc/netlogic/nmiprof/nmiprof-sys.c b/drivers/misc/netlogic/nmiprof/nmiprof-sys.c
index e5809e9..6299afd 100644
--- a/drivers/misc/netlogic/nmiprof/nmiprof-sys.c
+++ b/drivers/misc/netlogic/nmiprof/nmiprof-sys.c
@@ -56,6 +56,11 @@ static ssize_t nlm_nmiprofcontrol_read(struct file *filp, struct kobject *kobj,
 	return count;
 }
 
+static void nlm_config_cpu(void *data)
+{
+	write_c0_scratch(5, (u64 *)data);
+}
+
 static ssize_t nlm_nmiprofcontrol_write(struct file *filp, struct kobject *kobj,
 		struct bin_attribute *bin_attr,
 		char *buf, loff_t pos, size_t size)
@@ -75,7 +80,7 @@ static ssize_t nlm_nmiprofcontrol_write(struct file *filp, struct kobject *kobj,
 		pr_info("nmiprof running on cpu %d\n", jdev->nlm_cpu);
 		pr_info("Help : cpu mask on XLP8xx 0-31 and on XLP9xx 0-79\n");
 		pr_info("	To stop nmiprof -1\n");
-		return size + 1;
+		return -EINVAL;
 	}
 
 	jdev->nlm_cpu = use_cpu;
diff --git a/drivers/misc/netlogic/nmiprof/nmiprof.h b/drivers/misc/netlogic/nmiprof/nmiprof.h
index c7986dd..8bbd67e 100644
--- a/drivers/misc/netlogic/nmiprof/nmiprof.h
+++ b/drivers/misc/netlogic/nmiprof/nmiprof.h
@@ -207,7 +207,8 @@ nlm_9xx_pic_write_irt(uint64_t base, int irt_num, int en, int nmi,
 	nlm_write_pic_reg(base, PIC_9XX_IRT(irt_num), val);
 }
 
-inline void nlm_pic_write_irt(uint64_t base, int irt_num, int en,
+static inline void
+nlm_pic_write_irt(uint64_t base, int irt_num, int en,
 		int nmi, int sch, int vec, int dt, int db, int dte)
 {
 	uint64_t val;
@@ -220,7 +221,7 @@ inline void nlm_pic_write_irt(uint64_t base, int irt_num, int en,
 	nlm_write_pic_reg(base, PIC_IRT(irt_num), val);
 }
 
-inline void
+static inline void
 nlm_pic_write_irt_direct(uint64_t base, int irt_num, int en, int nmi,
 	int sch, int vec, int cpu)
 {
@@ -233,7 +234,7 @@ nlm_pic_write_irt_direct(uint64_t base, int irt_num, int en, int nmi,
 			1 << (cpu & 0xf));	/* thread mask */
 }
 
-inline void
+static inline void
 nlm_pic_set_timer(uint64_t base, int timer, uint64_t value, int irq, int cpu)
 {
 	uint64_t pic_ctrl;
@@ -255,9 +256,3 @@ nlm_pic_set_timer(uint64_t base, int timer, uint64_t value, int irq, int cpu)
 	pic_ctrl |= (1 << (PIC_CTRL_STE + timer));
 	nlm_write_pic_reg(base, PIC_CTRL, pic_ctrl);
 }
-
-static void nlm_config_cpu(void *data)
-{
-	write_c0_scratch(5, (u64 *)data);
-}
-
-- 
1.7.1

