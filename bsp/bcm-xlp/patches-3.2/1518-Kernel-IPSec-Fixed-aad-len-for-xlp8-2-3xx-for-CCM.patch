From 79c966e6ecc17a0ea645befa3da3881c0b440736 Mon Sep 17 00:00:00 2001
From: Manoj Vellala <manojv@broadcom.com>
Date: Thu, 6 Mar 2014 20:20:33 -0800
Subject: Kernel IPSec: Fixed aad len for xlp8/2/3xx for CCM.

	For XLP8xx for CCM (authB0+a) is part of
	aad/hash input. that is
	aad = 16 byte auth B0 + 2 byte 'a' + esp-iv(assoclen)+
	      padding. Padding is added so that aad ends
	      on a 16 byte boundry.
	Hash input = aad + cipher_payload.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/crypto/sae/nlm_aead.c b/drivers/crypto/sae/nlm_aead.c
index c21e798..5cdc085 100755
--- a/drivers/crypto/sae/nlm_aead.c
+++ b/drivers/crypto/sae/nlm_aead.c
@@ -1281,7 +1281,7 @@ static int aead_crypt_ccm(struct aead_request *req, unsigned int op)
 
 	/* add all those extra bytes for auth excluding assoc */
 	
-	saesoc_set_aad_len(d_desc,req->assoclen + cipher_extralen +  2 + 6 );
+        saesoc_set_aad_len(d_desc, req->assoclen + auth_iv_frag_len + extralen);
         if (cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN2)
 		saesoc_set_aad_len(d_desc,req->assoclen);
 
-- 
1.7.1

