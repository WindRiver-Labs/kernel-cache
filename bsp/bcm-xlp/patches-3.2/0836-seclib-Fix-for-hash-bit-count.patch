From 528a5218f84a06e55f38000c62ed4dbe674282de Mon Sep 17 00:00:00 2001
From: Hareesh R <hareeshr@broadcom.com>
Date: Thu, 7 Nov 2013 17:44:46 +0530
Subject: seclib:Fix for hash bit count

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/seclib/cryptosoc_lib.c b/arch/mips/netlogic/lib/seclib/cryptosoc_lib.c
index 622a385..c43d766 100644
--- a/arch/mips/netlogic/lib/seclib/cryptosoc_lib.c
+++ b/arch/mips/netlogic/lib/seclib/cryptosoc_lib.c
@@ -184,22 +184,25 @@ int cryptosoc_lib_init(struct cryptosoc_lib_params *params,
 	cryptosoc_mem_alloc = mem_alloc;
 	cryptosoc_mem_free	= mem_free;
 
+	params->saesoc_feature_set = 0;
+	params->saesoc_per_pkt_update_set = 0;
+
 	/* gen type should be filled by the priv init 
 	implementation specific init routine */
-	if(cryptosoc_lib_priv_init() < 0)
+	if(cryptosoc_lib_priv_init(params) < 0)
 		return  -CRYPTOSOC_EINVAL;
 
 	if(cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN2) {
 		/* for griffin and associated versions */
-		params->saesoc_feature_set = SAESOC_FF_GEN2_PTYPE;
-		params->saesoc_per_pkt_update_set = 0;
+		params->saesoc_feature_set |= SAESOC_FF_GEN2_PTYPE;
+		params->saesoc_per_pkt_update_set |= 0;
 	} else { 
 		/* For eagle and associated versions */
 		//params->saesoc_feature_set = SAESOC_FF_GEN1_PTYPE | 
 		  //SAESOC_FF_3DES_KEY_SWAP_SUPPORT | SAESOC_FF_CIPHER_ZUC_SUPPORT;
-		params->saesoc_feature_set = SAESOC_FF_GEN1_PTYPE;
+		params->saesoc_feature_set |= SAESOC_FF_GEN1_PTYPE;
 		/* TODO : If xlp 3xx add zuc support */
-		params->saesoc_per_pkt_update_set = SAESOC_PER_PKT_UF_GEN1_PTYPE;
+		params->saesoc_per_pkt_update_set |= SAESOC_PER_PKT_UF_GEN1_PTYPE;
 	}
 
 	for(i = 0; i < CRYPTOSOC_TYPE_MAX; i++)
diff --git a/arch/mips/netlogic/lib/seclib/saesoc_lib.h b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
index 5e25f61..668f73b 100644
--- a/arch/mips/netlogic/lib/seclib/saesoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
@@ -1422,10 +1422,10 @@ static inline int  saesoc_set_payload_bitcnt(
 			return -CRYPTOSOC_EINVAL;
 		dpriv = (struct saesoc_ddesc_priv_data *)ddesc->lib_priv;
 		spriv = (struct saesoc_sdesc_priv_data *)dpriv->sdesc->lib_priv;
-		if ( spriv->cipher_key_len_in_dw )
-		saesoc_gen1_set_hash_bitcnt(ddesc->descs[2],payload_bitcnt);
-		if ( spriv->hash_en )
-		saesoc_gen1_set_cipher_bitcnt(ddesc->descs[2],payload_bitcnt);
+		if(spriv->cipher_key_len_in_dw)
+			saesoc_gen1_set_cipher_bitcnt(ddesc->descs[2],payload_bitcnt);
+		if(spriv->hash_en)
+			saesoc_gen1_set_hash_bitcnt(ddesc->descs[2],payload_bitcnt);
 		return CRYPTOSOC_OK;
 	}
 #endif
-- 
1.7.1

