From de3faaf71a256bcf01a1221be3118044b2880c67 Mon Sep 17 00:00:00 2001
From: Sreenidhi B R <sreenira@broadcom.com>
Date: Mon, 13 May 2013 13:17:11 +0530
Subject: fmnlib: add nlm_hal_send* and nlm_hal_recv* APIS.

macros calling actual function, added for backward compatibility.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn.h b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn.h
index 568e0f8..4f061bd 100644
--- a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn.h
+++ b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn.h
@@ -244,14 +244,6 @@ static inline int nlm_hal_pop_send (uint32_t popq)
 
 #endif				/* __ASSEMBLY__ */
 
-/* Returns the TxStatus reg, if unsuccessful, 0 if success */
-extern uint32_t nlm_hal_send_msg4(uint32_t dst, uint32_t code, uint64_t data0, uint64_t data1, uint64_t data2, uint64_t data3);
-extern uint32_t nlm_hal_send_msg3(uint32_t dst, uint32_t code, uint64_t data0, uint64_t data1, uint64_t data2);
-extern uint32_t nlm_hal_send_msg2(uint32_t dst, uint32_t code, uint64_t data0, uint64_t data1);
-extern uint32_t nlm_hal_send_msg1(uint32_t dst, uint32_t code, uint64_t data0);
-/* Returns the RxStatus reg */
-extern uint32_t nlm_hal_recv_msg2(uint32_t dst, uint32_t *src, uint32_t *size, uint32_t *code, uint64_t *data0, uint64_t *data1);
-extern uint32_t nlm_hal_recv_msg1(uint32_t dst, uint32_t *src, uint32_t *size, uint32_t *code, uint64_t *data0);
 
 static __inline__ int fmn_level_int_type(uint64_t outq_config)
 {
diff --git a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_dp.h b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_dp.h
index e90fb36..9685906 100644
--- a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_dp.h
+++ b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_dp.h
@@ -986,6 +986,26 @@ static inline int xlp_message_receive(uint32_t vc, uint32_t *src_id,
 	return 0;
 }
 
+/*
+   Applications can use the fast path (inlined) APIs directly.
+   However, for other application which have historically used these APIs, the same
+   have been added for backward compatibility.
+   */
+
+#define nlm_hal_send_msg1(dst, code, data0) \
+	xlp_message_send_1(dst, code, data0)
+#define nlm_hal_send_msg2(dst, code, data0, data1) \
+	xlp_message_send_2(dst, code, data0, data1)
+#define nlm_hal_send_msg3(dst, code, data0, data1, data2) \
+	xlp_message_send_3(dst, code, data0, data1, data2)
+#define nlm_hal_send_msg4(dst, code, data0, data1, data2, data3) \
+	xlp_message_send_4(dst, code, data0, data1, data2, data3)
+
+#define nlm_hal_recv_msg1(dst, src, size, code, data0) \
+	xlp_message_receive_1(dst, src, size, code, data0)
+#define nlm_hal_recv_msg2(dst, src, size, code, data0, data1) \
+	xlp_message_receive_2(dst, src, size, code, data0, data1)
+
 /**
 * @brief xlp_message_receive_gid_1 function is used to receive a single entry message from a VC of the CPU. It also reads the 8b guest ID. Size should be used to determine how other 64b messages were available with data.
 *
-- 
1.7.1

