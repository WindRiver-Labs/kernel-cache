From 31e7a5c355fe2008f789eec2608ccf27c37a42a1 Mon Sep 17 00:00:00 2001
From: Jayachandran C <jchandra@broadcom.com>
Date: Mon, 15 Apr 2013 19:57:04 +0530
Subject: linux-3.7: Changes for compiling linux-userspace against linux-3.7.

1. Add soc_interface

   a. Imported the following files from SDK Linux-3.0

      arch/mips/netlogic/common/on_chip.c -> on_chip.c
      arch/mips/include/asm/netlogic/debug.h -> nlm_debug.h
      arch/mips/include/asm/netlogic/cpumask.h -> nlm_cpumask.h
      arch/mips/netlogic/boot/ops.h -> ops.h
      arch/mips/netlogic/boot/libfdt-wrapper.c -> libfdt-wrapper.c

   b. Build a module around on_chip.c

      Convert on_chip.c to a module that does FMN and other initialization
      which was done in kernel bootup.

      The changes are:
      	  * Add Makefile for building soc_interface module
	  * Remove most of cpu_proc.c and debug.h and add only needed stubs
	  * Update libfdt-wrapper.c to comment out the memory alloc code, this
	    is not needed in our implementation
	    * Update ops.h to take out unneeded headers
	    * Update nlm_cpumask.h and nlm_debug.h to use the correct defines
	      for XLP
	  * Many updates for on_chip.c :
	    - updated add_timer API use
	    - derive phys_cpu_present_map bitmask using cpu_logical_map()
	    - import parse_fmn_config() and parse_fdt_sae_vc_config() from
	      SDK linux codebase
	    - import other SDK specific code, nlm_proc_setup(), fmn_config()
	        nlm_fmn_init() from SDK linux codebase
	    - move from cpu map to cpumask interface
	    - export symbols needed for accelerator modules

    c. soc_interface: Read dts and assign xlp_napi_vc_mask.

       Also add cop2 access as CONFIG_NLM_ENABLE_COP2 is not yet
       supported. msgrng_flags_save/restore does nothing if
       CONFIG_NLM_ENABLE_COP2 is defined. so no need to put it
       under CONFIG_32BIT

2.nae : Changes for linux-3.7

      * Makefile updated for updated HAL and nlm_sdklib
      * Header files are no longer in kernel, use the HAL paths
      * Comment out code which needs update e.g MacSec
      * use cpumask methods instead of cpumap
      * in tso_xmit_skb, use skb_frag_page()

3. linux-3.7: Build framework updates.

   The kmod/Makefile no longer builds the libraries.
   The libraries are to be built separately.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_board.c b/drivers/net/ethernet/broadcom/nae/xlpge_board.c
index bdb2e45..aa832ea 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_board.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_board.c
@@ -35,8 +35,8 @@
 #include <linux/clocksource.h>
 #include <linux/timecompare.h>
 
-#include <asm/netlogic/hal/nlm_hal_nae.h>
-#include <asm/netlogic/hal/nlm_eeprom.h>
+#include <nlm_hal_nae.h>
+#include <nlm_eeprom.h>
 #include "xlpge.h"
 
 extern struct eeprom_data * get_nlm_eeprom(void);
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c b/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c
index 7e4745d..5ae298b 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c
@@ -33,7 +33,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
-#include <asm/netlogic/hal/nlm_eeprom.h>
+#include <nlm_eeprom.h>
 
 struct eeprom_data nlm_eeprom;
 struct eeprom_data *get_nlm_eeprom(void)
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
index 94bb680..1f622fc 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
@@ -37,8 +37,8 @@
 #include <linux/ethtool.h>
 #include <linux/mii.h>
 
-#include <asm/netlogic/hal/nlm_hal_nae.h>
-#include <asm/netlogic/hal/nlm_eeprom.h>
+#include <nlm_hal_nae.h>
+#include <nlm_eeprom.h>
 #include "xlpge.h"
 static u32 xlp_get_link(struct net_device *dev);
 extern struct eeprom_data * get_nlm_eeprom(void);
@@ -439,10 +439,12 @@ static struct ethtool_ops xlp_ethtool_ops = {
 	.get_eeprom_len		= xlp_get_eeprom_len,
 	.get_eeprom		= xlp_get_eeprom,
 	.set_eeprom		= xlp_set_eeprom,
+#ifdef NOTYET
 	.msec_tx_config		= xlp_config_msec_tx,
 	.msec_tx_mem_config	= xlp_config_msec_tx_mem,
 	.msec_rx_config		= xlp_config_msec_rx,
 	.msec_rx_mem_config	= xlp_config_msec_rx_mem,
+#endif
 };
 
 void xlp_set_ethtool_ops(struct net_device *netdev)
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_lro.c b/drivers/net/ethernet/broadcom/nae/xlpge_lro.c
index 5f67a58..128c648 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_lro.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_lro.c
@@ -34,6 +34,7 @@
 #include <linux/clocksource.h>
 #include <linux/timecompare.h>
 
+#include <nlm_xlp.h>
 #include "xlpge.h"
 
 #ifdef CONFIG_INET_LRO
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_msec.c b/drivers/net/ethernet/broadcom/nae/xlpge_msec.c
index 5eca3dc..0417279 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_msec.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_msec.c
@@ -36,6 +36,7 @@
 
 #include "xlpge.h"
 
+#ifdef NOTYET
 int xlp_config_msec_tx(struct net_device *dev, struct ethtool_cmd *cmd)
 {
 	if(is_nlm_xlp2xx())
@@ -75,3 +76,4 @@ int xlp_config_msec_rx_mem(struct net_device *dev,
 
 	return 0;
 }
+#endif
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index dc0f9b3..8ca0da2 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -36,10 +36,10 @@
 #include <linux/timecompare.h>
 #include <linux/proc_fs.h>
 #include <linux/timer.h>
-#include <asm/netlogic/xlp.h>
-#include <asm/netlogic/msgring.h>
-#include <asm/netlogic/hal/nlm_hal_fmn.h>
-#include <asm/netlogic/hal/nlm_eeprom.h>
+#include <nlm_xlp.h>
+#include <nlm_msgring.h>
+#include <nlm_hal_fmn.h>
+#include <nlm_eeprom.h>
 
 #include "xlpge.h"
 
@@ -1042,6 +1042,7 @@ static int  nlm_xlp_nae_stop (struct net_device *dev)
 	return 0;
 }
 
+#ifdef NOTYET
 /**********************************************************************
  * nlm_xlp_set_multicast_list
  *
@@ -1088,6 +1089,7 @@ static void  nlm_xlp_set_multicast_list (struct net_device *dev)
 	}	
 	return;
 }
+#endif
 
 static void xlp_mac_setup_hwaddr(struct dev_data *priv)
 {
@@ -1315,7 +1317,9 @@ static const struct net_device_ops nlm_xlp_nae_ops = {
 	.ndo_open			= nlm_xlp_nae_open,
 	.ndo_stop			= nlm_xlp_nae_stop,
 	.ndo_start_xmit			= nlm_xlp_nae_start_xmit,
+#ifdef NOTYET
 	.ndo_set_multicast_list		= nlm_xlp_set_multicast_list,
+#endif
 	.ndo_do_ioctl			= nlm_xlp_nae_ioctl,
 	.ndo_tx_timeout 		= nlm_xlp_nae_tx_timeout,
 	.ndo_change_mtu			= nlm_xlp_nae_change_mtu,
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
index 15ee9fd..f4bd070 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
@@ -36,9 +36,9 @@
 #include <linux/timecompare.h>
 #include <linux/kthread.h>
 
-#include <asm/netlogic/xlp.h>
-#include <asm/netlogic/msgring.h>
-#include <asm/netlogic/hal/nlm_hal_fmn.h>
+#include <nlm_xlp.h>
+#include <nlm_msgring.h>
+#include <nlm_hal_fmn.h>
 
 #include "xlpge.h"
 
@@ -139,7 +139,7 @@ static int nlm_dump_load_balance_stats(struct seq_file *m, void *v)
 		cpu_weight[*(ucore_shared_data + i)]++;
 
 	for (i = 0; i < NUM_LOAD_BALANCE_CPU; i++) {
-		if (!cpu_isset(i, phys_cpu_present_map))
+		if (!cpumask_test_cpu(i, &phys_cpu_present_map))
 			continue;
 		dump_cpu_active_flow_info(i, m,
 			cpu_weight[__cpu_number_map[i]]);
@@ -220,7 +220,7 @@ static void setup_search_path(void)
 #endif
 
 	for (i = 0; i < NUM_LOAD_BALANCE_CPU; i++) {
-		if (!cpu_isset(i, phys_cpu_present_map))
+		if (!cpumask_test_cpu(i, &phys_cpu_present_map))
 			continue;
 		nlm_pcpu_mask |= (1UL << i);
 		num_phy_cpu++;
@@ -322,7 +322,7 @@ static void nlm_load_balance_timer_func(unsigned long arg)
 	borrow few flows from it.
 	*/
 	for (i = 0; i < (NUM_LOAD_BALANCE_CPU - 1); i++) {
-		if (!cpu_isset(i, phys_cpu_present_map))
+		if (!cpumask_test_cpu(i, &phys_cpu_present_map))
 			continue;
 		afl = nlm_active_flow_list +
 			nlm_load_balance_search_cpu[cpu][i];
@@ -454,7 +454,7 @@ void nlm_init_load_balance(void)
 		(nlm_flow_meta_info+i)->cpu_owner = -1;
 
 	for (i = 0; i < NUM_LOAD_BALANCE_CPU; i++) {
-		if (!cpu_isset(i, phys_cpu_present_map))
+		if (!cpumask_test_cpu(i, &phys_cpu_present_map))
 			continue;
 		/* Register a timer for each cpu to calculate the flow rate */
 		setup_timer(&nlm_load_balance_timer[i],
@@ -928,7 +928,7 @@ void nlm_spawn_kthread(void)
     nr_cpus = nlm_node_cfg.num_nodes * NLM_NCPUS_PER_NODE;	
     /*Spawn kthread*/
     for (i = 0; i < nr_cpus; i++) {
-	if (!cpu_isset(i, cpu_present_map))
+	if (!cpumask_test_cpu(i, cpu_present_mask))
 		continue;
         sprintf(buf,"nae_task_%d",i);
         task[i] = kthread_create(xlp_nae_poll, (void *)(long)i, (void *)&buf);
@@ -937,7 +937,7 @@ void nlm_spawn_kthread(void)
     }
     if (i == nr_cpus) {
         for (i = 0; i < nr_cpus; i++) {
-	    if (!cpu_isset(i, cpu_present_map))
+	    if (!cpumask_test_cpu(i, cpu_present_mask))
 		    continue;
             kthread_bind(task[i], i);
             wake_up_process(task[i]);
@@ -987,7 +987,7 @@ int nlm_xlp_disable_napi(void)
 {
 	int node, i, coff;
 	for (i = 0; i < NR_CPUS; i++) {
-		if (!cpu_isset(i, phys_cpu_present_map))
+		if (!cpumask_test_cpu(i, &phys_cpu_present_map))
 			continue;
 		node = i / 32;
 		coff = i * NLM_MAX_VC_PER_THREAD;
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_tso.c b/drivers/net/ethernet/broadcom/nae/xlpge_tso.c
index 53ef6b5..94fa7b3 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_tso.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_tso.c
@@ -33,9 +33,11 @@
 #include <linux/inet_lro.h>
 #include <linux/clocksource.h>
 #include <linux/timecompare.h>
+#include <linux/ethtool.h>
 
-#include <asm/netlogic/msgring.h>
-#include <asm/netlogic/hal/nlm_hal_fmn.h>
+#include <nlm_msgring.h>
+#include <nlm_xlp.h>
+#include <nlm_hal_fmn.h>
 
 #include "xlpge.h"
 
@@ -229,7 +231,7 @@ inline int tso_xmit_skb(struct sk_buff *skb, struct net_device *dev)
 	for (i = 0; i < sp->nr_frags; i++)  {
 		skb_frag_t *fp = &sp->frags[i];
 		idx = create_p2p_desc(virt_to_bus(((char *)
-				page_address(fp->page)) + fp->page_offset),
+				page_address(skb_frag_page(fp))) + fp->page_offset),
 				fp->size, p2pdesc, idx);
 	}
 
@@ -285,12 +287,15 @@ out_unlock:
 
 int tso_enable(struct net_device *dev, u32 data)
 {
-	int rv;
+	int rv = 0;
+
+#ifdef NOTYET
 	rv = ethtool_op_set_tso(dev, data);
 	if(rv == 0)
 		rv = ethtool_op_set_tx_csum(dev, data);
 	if(rv == 0)
 		rv = ethtool_op_set_sg(dev, data);
+#endif
 	dev->features |= NETIF_F_FRAGLIST | NETIF_F_HIGHDMA;
 	return rv;
 }
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
index 4ccb95d..04476ba 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
@@ -36,8 +36,9 @@
 #include <linux/timecompare.h>
 #include <linux/kthread.h>
 
-#include <asm/netlogic/msgring.h>
-#include <asm/netlogic/hal/nlm_hal_fmn.h>
+#include <nlm_msgring.h>
+#include <nlm_xlp.h>
+#include <nlm_hal_fmn.h>
 
 #include "xlpge.h"
 
-- 
1.7.1

