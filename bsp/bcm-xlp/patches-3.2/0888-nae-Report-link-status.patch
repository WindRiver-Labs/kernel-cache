From 052efafafd2d825f68a7b50e840edd24fee84a8d Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Fri, 31 Jan 2014 16:48:08 +0530
Subject: nae: Report link status.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c b/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c
index 34708a9..0233b56 100644
--- a/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c
+++ b/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c
@@ -82,6 +82,7 @@ static int bcm_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *du
         int status=0;
         int phyaddr = netport->ext_phy_addr;
         int bus = netport->ext_phy_bus;
+	uint32_t prev_link_stat;
 	nae_t *nae = netport->nae;
 	nae_t *nae_ext = NULL;
 
@@ -133,11 +134,11 @@ static int bcm_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *du
                 break;
 
                 default:
-                        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Unknown operating speed, auxstatus = 0x%04x\n", aux_status);
+        //                netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Unknown operating speed, auxstatus = 0x%04x\n", aux_status);
                 break;
         }
 
-//#ifdef PHY_DEBUG
+#ifdef PHY_DEBUG
         if(*speed==SPEED_1000M)
                 netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Configured with Speed  1000M");
         if(*speed==SPEED_100M)
@@ -151,15 +152,20 @@ static int bcm_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *du
 	else {
 		netsoc_api_print(NETSOC_APIDBG_DEFAULT, "Half duplex\n");
 	}
-//#endif
+#endif
         status = __netsoc_mdio_rd(nae_ext, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1);
         status = __netsoc_mdio_rd(nae_ext, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1);
+	prev_link_stat=netport->link_stat;
         if(status & (1<<2)){
-                netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Link is up : %x\n", status);
+		netport->link_stat=1;
+		if(netport->link_stat!=prev_link_stat)
+        	        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Link is up : %x\n", status);
                 //netsoc_api_print(NETSOC_APIDBG_DEFAULT,"%s: exit\n", __func__);
                 return 1;
         }else{
-                netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Link is down : %x\n", status);
+		netport->link_stat=0;
+		if(netport->link_stat!=prev_link_stat)
+        	        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Link is down : %x\n", status);
                 //netsoc_api_print(NETSOC_APIDBG_DEFAULT,"%s: exit\n", __func__);
                 return 0;
         }
@@ -197,7 +203,7 @@ static void bcm_start_an(net_port_t *netport)
 	}
 #endif
 
-        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Starting auto-negotiation on port %d, external mdio bus %d, phy address %d\n", int_inf,  bus, phyaddr);
+//        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Starting auto-negotiation on port %d, external mdio bus %d, phy address %d\n", int_inf,  bus, phyaddr);
 
         status = __netsoc_mdio_rd(nae, NLM_HAL_INT_MDIO, 0, int_inf,  0x0);
         __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, status|(1<<9)); // Restart XLP AN
@@ -216,7 +222,7 @@ static void bcm_start_an(net_port_t *netport)
                 __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, status|(1<<9)); // Restart XLP AN
         }while(count<100);
 
-        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Autonegotiation is NOT OK for PHY-SGMII inf=0x%x int_inf =0x%x\n", phyaddr, int_inf);
+      //  netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Autonegotiation is NOT OK for PHY-SGMII inf=0x%x int_inf =0x%x\n", phyaddr, int_inf);
         return;
 }
 
diff --git a/arch/mips/netlogic/lib/netlib/external/ext_phy_mvl.c b/arch/mips/netlogic/lib/netlib/external/ext_phy_mvl.c
index 3d42bfc..f696141 100644
--- a/arch/mips/netlogic/lib/netlib/external/ext_phy_mvl.c
+++ b/arch/mips/netlogic/lib/netlib/external/ext_phy_mvl.c
@@ -67,18 +67,23 @@ static int mvl_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *du
         uint16_t extstatus;
         int phyaddr = netport->ext_phy_addr;
         int bus = netport->ext_phy_bus;
+	uint32_t prev_link_stat;
 	nae_t *nae = netport->nae;
-
         __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 22, 0);
         extstatus = __netsoc_mdio_rd(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 17);
         *speed = (extstatus >> 14) & 0x3;
         *duplex =  (extstatus >> 13) & 0x1;
+	prev_link_stat=netport->link_stat;
         if (extstatus & 0x0400) {
-                netsoc_api_print(NETSOC_APIDBG_ERROR, "bus:%d phy:%d Link is up : %x\n", bus, phyaddr, extstatus);
+		netport->link_stat=1;
+                if(netport->link_stat!=prev_link_stat)
+			netsoc_api_print(NETSOC_APIDBG_DEFAULT, "bus:%d phy:%d Link is up : %x\n", bus, phyaddr, extstatus);
                 return 1;
         }
         else {
-                netsoc_api_print(NETSOC_APIDBG_ERROR, "bus:%d phy:%d Link is down : %x\n",bus, phyaddr, extstatus);
+		netport->link_stat=0;
+                if(netport->link_stat!=prev_link_stat)
+	                netsoc_api_print(NETSOC_APIDBG_DEFAULT, "bus:%d phy:%d Link is down : %x\n",bus, phyaddr, extstatus);
                 return 0;
         }
 
diff --git a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
index 18a854e..654e452 100644
--- a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
@@ -332,6 +332,7 @@ struct nlm_hal_nae_port {
 	uint32_t  rxaui_mode;      
         uint32_t  loopback;
 	uint32_t poe_queue_base;
+	uint32_t link_stat;
 	nae_t *nae;
 };
 
-- 
1.7.1

