From 89870e26a224af6674f104079dee15cddef7240d Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Thu, 4 Oct 2012 02:15:08 +0530
Subject: ethtool: Add ethtool support.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge.h b/drivers/net/ethernet/broadcom/nae/xlpge.h
index f79fb23..aee6877 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge.h
+++ b/drivers/net/ethernet/broadcom/nae/xlpge.h
@@ -366,6 +366,7 @@ static __inline__ void print_fmn_send_error(const char *str,
 
 void nlm_xlp_nae_init(void);
 void nlm_xlp_nae_remove(void);
+extern int xlpge_eeprom_init(void);
 inline void process_tx_complete(int , uint32_t , uint64_t);
 inline void napi_lro_flush(int);
 struct eeprom_data * get_nlm_eeprom(void);
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_board.c b/drivers/net/ethernet/broadcom/nae/xlpge_board.c
index 6f1aaea..bdb2e45 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_board.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_board.c
@@ -36,23 +36,54 @@
 #include <linux/timecompare.h>
 
 #include <asm/netlogic/hal/nlm_hal_nae.h>
-
+#include <asm/netlogic/hal/nlm_eeprom.h>
 #include "xlpge.h"
 
+extern struct eeprom_data * get_nlm_eeprom(void);
 unsigned char eth_hw_addr[NLM_MAX_NODES][MAX_GMAC_PORT][6];
 
 void gen_mac_address(void)
 {
-	int i, j;
-	unsigned char mac_base[6];
-
-	memset(mac_base, '0', 6);
-	random_ether_addr(mac_base);
-
-	for (i = 0; i < NLM_MAX_NODES; i++) {
-		for (j = 0; j < 18; j++) {
-			memcpy(eth_hw_addr[i][j], mac_base, 6);
-			mac_base[5] += 1;
-		}
-	}
+	struct eeprom_data *nlm_eeprom=NULL;
+        unsigned char mac_base[6],temp,buf_write[2],buf0_read[2],buf1_read[2];
+        int if_mac_set=0,mac0_set=0, mac1_set=0;
+        int i,j;
+        buf_write[0]= MAC_MAGIC_BYTE0;
+        buf_write[1]= MAC_MAGIC_BYTE1;
+
+        memset(mac_base, '0', 6);
+        nlm_eeprom = get_nlm_eeprom();
+
+        eeprom_get_magic_bytes(nlm_eeprom,buf0_read,0);/* signature*/
+        eeprom_get_magic_bytes(nlm_eeprom,buf1_read,1);
+
+        if((buf0_read[0]==buf_write[0]) && (buf0_read[1]==buf_write[1]))/*match the signature*/
+        {
+                mac0_set=1;
+                eeprom_get_mac_addr(nlm_eeprom, mac_base,0);/* get the mac address*/
+        }
+        else if((buf1_read[0]==buf_write[0]) && (buf1_read[1]==buf_write[1]))
+        {
+                mac1_set=1;
+                eeprom_get_mac_addr(nlm_eeprom, mac_base,1);/* get the mac address*/
+        }
+
+        for(temp=0;temp<6;temp++)
+        {
+                if(mac_base[temp]!=0)
+                {
+                        if_mac_set=1;
+                }
+        }
+        if( ((mac0_set | mac1_set) && if_mac_set) == 0){
+                random_ether_addr(mac_base);
+        }
+
+	for(i=0 ; i<NLM_MAX_NODES; i++){ /*poppulate the eth_hw_add array according to the get mac address*/
+                for(j=0;j<18;j++){
+                        memcpy(eth_hw_addr[i][j], mac_base, 6);
+                        mac_base[5] += 1;
+                }
+        }
+
 }
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c b/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c
new file mode 100644
index 0000000..4011d25
--- /dev/null
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c
@@ -0,0 +1,68 @@
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/jiffies.h>
+#include <linux/i2c.h>
+#include <linux/mutex.h>
+#include <asm/netlogic/hal/nlm_eeprom.h>
+
+struct eeprom_data nlm_eeprom;
+struct eeprom_data *get_nlm_eeprom(void)
+{
+        return &nlm_eeprom;
+}
+EXPORT_SYMBOL(get_nlm_eeprom);
+int eeprom_read (int devaddr, int addr, int alen, u8 * rd_buf, int len);
+int eeprom_write (int devaddr, int addr, int alen,u8 * wr_buf, int len);
+struct i2c_client *global_client;
+
+int eeprom_write (int devaddr, int addr, int alen, u8 * wr_buf, int len)
+{
+	struct i2c_client *client;
+        client=global_client;   
+       	memset(wr_buf, '0', sizeof(wr_buf)); 
+	i2c_smbus_write_i2c_block_data(client, addr, len, wr_buf);	
+	return 0;
+}
+int eeprom_read (int devaddr, int addr, int alen, u8 *rd_buf, int len)
+{
+	struct i2c_client *client;
+	client=global_client;	
+	memset(rd_buf, '0', sizeof(rd_buf));	
+	i2c_smbus_read_i2c_block_data(client, addr, len, rd_buf);
+	return 0;
+}
+
+static int xlpge_eeprom_probe(struct i2c_client *client,
+			const struct i2c_device_id *id)	
+{
+	struct eeprom_data *nlm_eeprom=NULL;
+	nlm_eeprom=get_nlm_eeprom();
+	nlm_eeprom->i2c_dev_addr=0x57;
+  	
+	global_client=client;
+        nlm_eeprom->eeprom_i2c_read_bytes = (void *)eeprom_read;
+	nlm_eeprom->eeprom_i2c_write_bytes = (void *)eeprom_write;	
+	return 0;
+}
+
+static const struct i2c_device_id xlpge_eeprom_id[] = {
+        { "xlpge_eeprom", 0 },
+        { }
+};
+
+static struct i2c_driver xlpge_eeprom_driver = {
+        .driver = {
+                .name   = "xlpge_eeprom",
+        },
+        .probe          = xlpge_eeprom_probe,
+        .id_table       = xlpge_eeprom_id,
+};
+
+
+extern int xlpge_eeprom_init(void)
+{
+        return i2c_add_driver(&xlpge_eeprom_driver);
+}
+EXPORT_SYMBOL(xlpge_eeprom_init);
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
index 88289e9..478def3 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
@@ -38,9 +38,9 @@
 #include <linux/mii.h>
 
 #include <asm/netlogic/hal/nlm_hal_nae.h>
-
+#include <asm/netlogic/hal/nlm_eeprom.h>
 #include "xlpge.h"
-
+extern struct eeprom_data * get_nlm_eeprom(void);
 #define	NLM_STATS_KEY_LEN	\
 	(sizeof(struct net_device_stats) / sizeof(ulong))
 
@@ -156,12 +156,11 @@ static int xlp_get_eeprom_len(struct net_device *dev)
 static int xlp_get_eeprom(struct net_device *dev,
 			  struct ethtool_eeprom *eeprom, u8* temp)
 {
-#if 0
-	struct eeprom_data *nlm_eeprom;
+	int i=0;
+	struct eeprom_data *nlm_eeprom=NULL;
 	struct dev_data *priv = netdev_priv(dev);
 	ulong flags;
 	u8 buff[50];
-	int i;
 
 	nlm_eeprom = get_nlm_eeprom();
 
@@ -173,7 +172,6 @@ static int xlp_get_eeprom(struct net_device *dev,
 		temp[i] = buff[i];
 
 	spin_unlock_irqrestore(&priv->lock, flags);
-#endif
 
 	return 0;
 }
@@ -181,8 +179,7 @@ static int xlp_get_eeprom(struct net_device *dev,
 static int xlp_set_eeprom(struct net_device *dev,
 			  struct ethtool_eeprom *eeprom, u8* temp)
 {
-#if 0
-	struct eeprom_data *nlm_eeprom;
+	struct eeprom_data *nlm_eeprom=NULL;
 	struct dev_data *priv = netdev_priv(dev);
 	ulong flags;
 	u8 data[6];
@@ -199,7 +196,6 @@ static int xlp_set_eeprom(struct net_device *dev,
 	}
 
 	spin_unlock_irqrestore(&priv->lock, flags);
-#endif
 
 	return 0;
 }
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_main.c b/drivers/net/ethernet/broadcom/nae/xlpge_main.c
index 3679bcf..39022c9 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_main.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_main.c
@@ -66,6 +66,7 @@ static struct pci_driver brcmxlp_nae_driver = {
 
 static int __init brcmxlp_nae_init(void)
 {
+	xlpge_eeprom_init();
 	/* TODO:XXX Move to pci init? */
 	nlm_xlp_nae_init();
 
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index 62ad497..c82b963 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -39,6 +39,7 @@
 #include <asm/netlogic/xlp.h>
 #include <asm/netlogic/msgring.h>
 #include <asm/netlogic/hal/nlm_hal_fmn.h>
+#include <asm/netlogic/hal/nlm_eeprom.h>
 
 #include "xlpge.h"
 
-- 
1.7.1

