From 4811a69231bd61bbccbd65617aea002390656ba4 Mon Sep 17 00:00:00 2001
From: Vikas Gupta <vikas.gupta@broadcom.com>
Date: Wed, 12 Jun 2013 14:52:46 -0700
Subject: xlp9xx: XFI support updated.

	1) XFI support updated.
	2) cleanups for xgmac base function
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
index bf421a6..e291830 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
@@ -231,6 +231,10 @@ static inline uint32_t get_numfree_desc(uint32_t intf_type)
 	switch(intf_type) {
 	case SGMII_IF:
 		return DEFAULT_SGMII_NUM_FREEDESC;
+
+	case XFI_IF: 
+		return DEFAULT_XAUI_NUM_FREEDESC/2;
+		
 	case XAUI_IF:
 	case RXAUI_IF:
 		return DEFAULT_XAUI_NUM_FREEDESC;
@@ -265,6 +269,7 @@ static inline uint32_t get_free_desc_size(uint32_t intf_type)
         switch(intf_type) {
         case SGMII_IF:
                 return DEFAULT_SGMII_FREEDESC_SZ;
+	case XFI_IF:
         case XAUI_IF:
         case RXAUI_IF:
                 return DEFAULT_XAUI_FREEDESC_SZ;
@@ -278,6 +283,7 @@ static inline uint32_t get_free_desc_size(uint32_t intf_type)
 static inline uint32_t get_intf_fifo_size(uint32_t intf_type)
 {
         switch(intf_type) {
+	case XFI_IF:
         case SGMII_IF:
                 return (current_netsoc->ingress.max_if_fifo / current_netsoc->max_ports);
         case XAUI_IF:
@@ -302,6 +308,7 @@ static inline uint32_t get_iface_credit(uint32_t intf_type)
 static inline uint32_t get_prsr_seq_fifo_size(uint32_t intf_type)
 {
         switch(intf_type) {
+	case XFI_IF:
         case SGMII_IF:
                 return DEFAULT_SGMII_PARSERSEQFIFO_SZ;
         case XAUI_IF:
@@ -320,6 +327,7 @@ static inline uint32_t get_prsr_seq_fifo_size(uint32_t intf_type)
 static inline uint32_t get_rx_buf_size(uint32_t intf_type)
 {
         switch(intf_type) {
+	case XFI_IF:
         case SGMII_IF:
                 return DEFAULT_SGMII_RXFIFO_SZ;
         case XAUI_IF:
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
index 9e47fd3..442b03f 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
@@ -830,7 +830,7 @@ static inline uint64_t __netsoc_get_xgmac_base(net_port_t *netport)
 {
 	nae_t *nae = netport->nae;
 	uint64_t mac_base;
-	switch (netport->hw_port_id/MAX_PORTS_PERBLOCK) {
+	switch (netport->hw_port_id%MAX_PORTS_PERBLOCK) {
             case 0: mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id); break;
             case 1: mac_base = netsoc_get_macreg_base_for_xgmac1(nae->mac_base, netport->hw_port_id); break;
             case 2: mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id); break;
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
index a826c15..c8342a9 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
@@ -434,6 +434,7 @@ int netsoc_get_port_stats(net_port_t *netport, uint32_t mac_stat)
 {
         if (netport == NULL)
                 return -NAE_PORT_INSTANCE_INVALID;
+	return 0;
 	//return 	__netsoc_read_mac_statistics(netport, mac_stat);
 }
 // UCORE 
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_config.c b/arch/mips/netlogic/lib/netlib/src/netsoc_config.c
index cd9ebd6..84d7953 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_config.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_config.c
@@ -29,6 +29,7 @@
 
 
 #include "nlm_hal.h"
+#include "nlm_hal_xlp_dev.h"
 #include "nlm_nae.h"
 #include "netsoc_nae.h"
 #include "netsoc_haliface.h"
@@ -224,8 +225,6 @@ net_port_t **cntx2netport[NLM_MAX_NODES][MAX_POE_BLOCKS];
 uint32_t socnet_version_v0 = 1;
 // ale_t *xlp_ale[MAX_NODES][MAC_ALE_BLOCKS];
 
-#define PCI_MEM_BAR_0 0x4
-
 void update_netsoc_info(void)
 {
 	int node, id;
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index acbae3a..f3b6006 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -30,6 +30,7 @@
 #include "nlm_hal.h"
 #include "nlm_nae.h"
 #include "nlm_hal_sys.h"
+#include "nlm_hal_xlp_dev.h"
 #include "netsoc_nae.h"
 #include "netsoc_haliface.h"
 #include "netsoc_libiface.h"
@@ -1271,6 +1272,8 @@ void __netsoc_config_ingress_fifo(nae_t *nae)
 		//TODO: Verify the values	
 		   case XFI_IF:
 			fifo_xoff_thresh = 6;
+			//TODO: check thgrp	
+			thrgrp = 3;
 			break;
 		   case SGMII_IF:
 			fifo_xoff_thresh = 6;
@@ -1894,14 +1897,9 @@ static void __netsoc_config_xaui(net_port_t *netport)
         int rxaui_en = ((netport->rxaui_mode == NLP1042_PHY_10G_RXAUI_MODE1) ||
                         (netport->rxaui_mode == NLP1042_PHY_10G_RXAUI_MODE2)) ? 1 : 0;
 	
-	uint64_t mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
-	if(netport->iftype==RXAUI_IF){
-		if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
-			mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
-		}else{
-			printk("OOPPPS port   id= %d set to old mac_base \n", netport->hw_port_id);
-		}
-	}
+	uint64_t mac_base = __netsoc_get_xgmac_base(netport);
+	printk("MAC BASE for RXAUI = 0x%llx\n", mac_base);
+	
 	higig_type = nae->higig_mode[netport->hw_port_id >> 2];
         if(higig_type){
                 /*enable higig */
@@ -2386,12 +2384,15 @@ int __netsoc_config_port(net_port_t *netport)
 		case XAUI_IF:
 		case RXAUI_IF:
 			// block is a complex number
-			mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			//mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			mac_base = __netsoc_get_xgmac_base(netport);
+#if 0
 			if(netport->iftype==RXAUI_IF){
 				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
 					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
 				}
 			}
+#endif
 
 			netwk_inf = netsoc_read_mac_reg(mac_base, NETIOR_XGMAC_CTRL1);
 			netwk_inf |= (1 << NETIOR_XGMAC_STATS_CLR_POS);
@@ -2409,12 +2410,7 @@ int __netsoc_config_port(net_port_t *netport)
 			break;
 		case XFI_IF:
 			/*Clear all statistics */
-			switch (netport->hw_port_id/MAX_PORTS_PERBLOCK) {
-        	    		case 0: mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id); break;
-		        	case 1: mac_base = netsoc_get_macreg_base_for_xgmac1(nae->mac_base, netport->hw_port_id); break;
-			        case 2: mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id); break;
-			        case 3: mac_base = netsoc_get_macreg_base_for_xgmac3(nae->mac_base, netport->hw_port_id); break;
-        		}
+			mac_base = __netsoc_get_xgmac_base(netport);
 			netwk_inf = netsoc_read_mac_reg(mac_base, NETIOR_XGMAC_CTRL1);
 			netwk_inf |= (1 << NETIOR_XGMAC_STATS_CLR_POS);
 			netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL1, netwk_inf);
@@ -2515,7 +2511,7 @@ void __netsoc_mac_disable(net_port_t *netport)
 			break;
 		case XAUI_IF:
 		case RXAUI_IF:
-			mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			mac_base = __netsoc_get_xgmac_base(netport);
 			if(netport->iftype==RXAUI_IF){
 				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
 					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
@@ -2564,12 +2560,9 @@ void __netsoc_mac_enable(net_port_t *netport)
                         break;
                 case XAUI_IF:
                 case RXAUI_IF:
-			mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
-			if(netport->iftype==RXAUI_IF){
-				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
-					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
-				}
-			}
+			//mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			mac_base = __netsoc_get_xgmac_base(netport);
+			
 			netsoc_api_print(NETSOC_APIDBG_PORT,"%s: XGMAC enabling.. XAUI_CONFIG_1 0x%x\n",__func__, xaui_cfg);
 			xaui_cfg=netsoc_read_mac_reg(mac_base, XAUI_CONFIG_1);
 	                netsoc_write_mac_reg(mac_base, XAUI_CONFIG_1, xaui_cfg |
@@ -2624,12 +2617,7 @@ int __netsoc_config_frame_size(net_port_t *netport, uint32_t size)
 			break;
 		case XAUI_IF:
                 case RXAUI_IF:
-                        mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
-			if(netport->iftype==RXAUI_IF){
-				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
-					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
-				}
-			}
+			mac_base = __netsoc_get_xgmac_base(netport);
 			netsoc_write_mac_reg(mac_base, XAUI_MAX_FRAME_LEN , ((size/4) << 16) | size);
 			break;
 		default:
@@ -2670,7 +2658,7 @@ int __netsoc_config_flow_control(net_port_t *netport, uint32_t enable)
 			break;
 		case XAUI_IF:
 		case RXAUI_IF:		
-			mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			mac_base = __netsoc_get_xgmac_base(netport);
 			if(netport->iftype==RXAUI_IF){
 				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
 					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
@@ -3652,8 +3640,6 @@ static uint32_t membar_fixup(uint32_t l)
 #define membar_fixup(x) (x)
 #endif
 
-#define PCI_MEM_BAR_0 0x4
-
 int __netsoc_init_nae(nae_t *nae)
 {
 	uint64_t bar0;
-- 
1.7.1

