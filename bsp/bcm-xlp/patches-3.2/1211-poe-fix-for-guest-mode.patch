From 48002b5ebc851ffae27d4c0dc7cd01a23d416bf8 Mon Sep 17 00:00:00 2001
From: Abhishek Joshi <abjoshi@broadcom.com>
Date: Thu, 20 Mar 2014 13:06:35 +0530
Subject: poe: fix for guest mode

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/misc/netlogic/halx_netio/halx_netio_iface.h b/drivers/misc/netlogic/halx_netio/halx_netio_iface.h
index 0dad715..43d5f92 100644
--- a/drivers/misc/netlogic/halx_netio/halx_netio_iface.h
+++ b/drivers/misc/netlogic/halx_netio/halx_netio_iface.h
@@ -43,7 +43,13 @@
 #define HALX_CMD_DEV_INFO		_IOWR(NETIF_IOC, 6, unsigned long long)
 #define HALX_CMD_PKT_ENGINE		_IOWR(NETIF_IOC, 7, unsigned long long)
 #define HALX_CMD_PKT_PARSER		_IOWR(NETIF_IOC, 8, unsigned long long)
-#define HALX_CMD_MSG_INIT		_IOWR(NETIF_IOC, 9, unsigned long long) 
-#define HALX_CMD_POE_ENQ_STORAGE        _IOWR(NETIF_IOC, 11, unsigned long long)
+#define HALX_CMD_MSG_INIT		_IOWR(NETIF_IOC, 9, unsigned long long)
+#define HALX_CMD_DTR_INIT               _IOWR(NETIF_IOC, 10, unsigned long long)
+#define HALX_CMD_CDE_INIT               _IOWR(NETIF_IOC, 11, unsigned long long)
+#define HALX_CMD_CDE_COMPRESS           _IOWR(NETIF_IOC, 12, unsigned long long)
+#define HALX_CMD_CDE_DECOMPRESS         _IOWR(NETIF_IOC, 13, unsigned long long)
+#define HALX_CMD_CDE_RESULT             _IOWR(NETIF_IOC, 14, unsigned long long)
+#define HALX_CMD_CDE_CLEANUP            _IOWR(NETIF_IOC, 15, unsigned long long)
+#define HALX_CMD_POE_ENQ_STORAGE        _IOWR(NETIF_IOC, 16, unsigned long long)
 
 #endif
diff --git a/drivers/misc/netlogic/halx_netio/halx_netio_main.c b/drivers/misc/netlogic/halx_netio/halx_netio_main.c
index 4aa8f1d..5fbf90a 100644
--- a/drivers/misc/netlogic/halx_netio/halx_netio_main.c
+++ b/drivers/misc/netlogic/halx_netio/halx_netio_main.c
@@ -378,27 +378,35 @@ static long halx_netio_ioctl(struct file *filp, unsigned int cmd, unsigned long
 	{
 		uint64_t ret = 0;
 		unsigned long phy_ctx_dom_data = 0;
-		halx_domain_t *ctx_dom_data = (halx_domain_t *)kmalloc(sizeof(halx_domain_t), GFP_KERNEL);
+		halx_dev_t *u_ctx = NULL;
+		halx_dev_t *ctx_dom_data = (halx_dev_t *)kmalloc(sizeof(halx_dev_t), GFP_KERNEL);
 
 		if (ctx_dom_data == NULL) {
-			printk(KERN_ERR "halx_netio: kmalloc returning NULL in HALX_CMD_REGISTER\n");
+			printk(KERN_ERR "halx_netio: kmalloc returning NULL in HALX_CMD_MSG_INIT\n");
 			return -1;
 		}
 
-		retval = copy_from_user(ctx_dom_data, (halx_domain_t *)arg, sizeof(halx_domain_t));
+		retval = copy_from_user(&u_ctx, argp, sizeof(&u_ctx));
+
+		if (retval) {
+			printk(KERN_ERR "%s %d: %d bytes not copied from userspace\n", __func__, __LINE__, retval);
+		}
+
+		retval = copy_from_user(ctx_dom_data, u_ctx, sizeof(halx_dev_t));
+
 		if (retval) {
 			printk(KERN_ERR "%s %d: %d bytes not copied from userspace\n", __func__, __LINE__, retval);
 		}
 		phy_ctx_dom_data = virt_to_phys(ctx_dom_data);
 #ifdef HALX_NETIO_DEBUG
-		printk("halx_netio: HALX_CMD_REGISTER phy_ctx_dom_data: 0x%lx\n", phy_ctx_dom_data);
+		printk("halx_netio: HALX_CMD_MSG_INIT phy_ctx_dom_data: 0x%lx\n", phy_ctx_dom_data);
 #endif
 
 		if (do_hypcall_p2r1(KVM_HC_HALX_NETSOC, phy_ctx_dom_data, CMD_HALX_MSG_INIT, &ret)) {
-			printk(KERN_ERR "halx_netio: failure to register halx\n");
+			printk(KERN_ERR "halx_netio: failure to HALX_CMD_MSG_INIT\n");
 			rc = -1;
 		} else {
-			retval = copy_to_user((halx_domain_t *)arg, ctx_dom_data, sizeof(halx_domain_t));
+			retval = copy_to_user(u_ctx, ctx_dom_data, sizeof(halx_dev_t));
 			if (retval) {
 				printk("halx_netio: halif %d bytes not copied to user space \n",retval);
 			}
-- 
1.7.1

