From 19e58ef56ff41ed5d557298f5da69a5d51423ddb Mon Sep 17 00:00:00 2001
From: Pavani Reddy <pavani@broadcom.com>
Date: Mon, 15 Dec 2014 19:54:33 +0530
Subject: Nae : fix the skb allocation in work queue for multinode scenario.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
index c28312f..31bbd74 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
@@ -69,7 +69,7 @@ uint64_t receive_count[NR_CPUS * 8] __cacheline_aligned;
 //
 void fill_alloc_failed(struct work_struct *work)
 {
-	int cpu = hard_smp_processor_id(), node_cpu;
+	int cpu = smp_processor_id();
 	unsigned int frq_num, ret, abs_frq_num, buf_size;
 	struct sk_buff * skb;
 	int nodes = nlm_hal_get_num_nodes();
@@ -85,7 +85,6 @@ void fill_alloc_failed(struct work_struct *work)
 		int bad_allocs = atomic_read(&priv->cpu_alloc_fail[cpu][frq_num]);
 		int bad_cnt = 0;
 		ulong __attribute__ ((unused)) mflags;
-		node_cpu = phys_cpu_to_log_map[node][nae_no][cpu];
 
 		while(bad_allocs !=0){
 			if (bad_allocs < 0) {
@@ -130,6 +129,7 @@ static inline int mac_refill_frin_one_buffer(struct net_device *dev, int cpu,
 	int node = nae_cfg->node;
 	int hw_port_id = priv->hw_port_id; 
 	node_cpu = phys_cpu_to_log_map[node][nae_id][cpu];
+	int lcpu = smp_processor_id();
 	
 	if (enable_jumbo)
 		if(truesize > NLM_RX_JUMBO_BUF_SIZE)
@@ -144,13 +144,13 @@ static inline int mac_refill_frin_one_buffer(struct net_device *dev, int cpu,
 
 	skb = nlm_xlp_alloc_skb_atomic(buf_size, priv->node);
 	if (!skb) {
-		atomic_inc(&priv->cpu_alloc_fail[cpu][qid]);
-		printk(KERN_NOTICE "%s: Low memory, packet dropped. free cnt = %d\n", dev->name,  atomic_read(&priv->cpu_alloc_fail[cpu][qid]));
-		schedule_delayed_work_on(cpu, &priv->alloc_failed_work[cpu], 0);
-		//schedule_delayed_work(&priv->alloc_failed_work[cpu], HZ);
+		atomic_inc(&priv->cpu_alloc_fail[lcpu][qid]);
+		printk(KERN_NOTICE "%s: Low memory, packet dropped. free cnt = %d\n", dev->name,  atomic_read(&priv->cpu_alloc_fail[lcpu][qid]));
+		schedule_delayed_work_on(lcpu, &priv->alloc_failed_work[lcpu], 0);
 		return -ENOMEM;
 	}
 
+
 	//skb->dev = dev;
 
 	mac_put_skb_back_ptr(skb, nae_cfg);
-- 
1.7.1

