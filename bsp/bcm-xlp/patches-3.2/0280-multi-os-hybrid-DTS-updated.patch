From c9ccf156e0ff2a1e299efb549352077856e0d300 Mon Sep 17 00:00:00 2001
From: Rahul Jain <rajain@netlogicmicro.com>
Date: Tue, 10 Jan 2012 12:03:47 +0530
Subject: multi-os-hybrid DTS updated

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/boot/dts/hybrid-nae.dts b/arch/mips/boot/dts/hybrid-nae.dts
index 5c1ea9e..832c7ca 100644
--- a/arch/mips/boot/dts/hybrid-nae.dts
+++ b/arch/mips/boot/dts/hybrid-nae.dts
@@ -1,4 +1,4 @@
-/* XLP8XX Device Tree Source 
+/* XLP8XX Device Tree Source
  *
  */
 
@@ -14,27 +14,41 @@
 	// (each entry is a pair of (vfbid , dest-vc)
 	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
 	vfbid-map = <
-		     // NAE -> CPU mapping 
-		      0   1  1   5  2  9   3  13
-		      4  17  5  21  6  25  7  29
-		      8  33  9  37 10  41 11  45
-	 	     12  49 13  53 14  57 15  61
-		     16  65 17  69 18  73 19  77
-		     20  81 21  85 22  89 23  93
-		     24  97 25 101 26 105 27 109
-		     28 113 29 117 30 121 31 125
-		     // NAE -> NAE mapping 
-		     32	1000 33 1001 34 1002 35 1003
-		     36	1004 37 1005 38 1006 39 1007
-		     40	1008 41 1009 42 1010 43 1011
-		     44	1012 45 1013 46 1014 47 1015
-		     48	1016 49 1017 50 1018 51 1019
-
-		     // NULL FBID Should map to cpu0 to detect NAE send message errors 
-		     127 0
+			// NAE -> CPU mapping
+			// Each thread uses vc 1 as freeback VC.
+			// This is tied with fb-vc field.
+			0    1    1    5    2   9    3    13
+			4    17   5    21   6   25   7    29
+			8    33   9    37   10  41   11   45
+			12   49   13   53   14  57   15   61
+			16   65   17   69   18  73   19   77
+			20   81   21   85   22  89   23   93
+			24   97   25  101   26 105   27  109
+			28  113   29  117   30 121   31  125
+/*
+		     // NAE -> CPU mapping
+		     // Freeback VC = 0
+		      0   0  1   4  2   8  3  12
+		      4  16  5  20  6  24  7  28
+		      8  32  9  36 10  40 11  44
+		     12  48 13  52 14  56 15  60
+		     16  64 17  68 18  72 19  76
+		     20  80 21  84 22  88 23  92
+		     24  96 25 100 26 104 27 108
+		     28 112 29 116 30 120 31 124
+*/
+			// NAE -> NAE mapping
+			32 1000 33 1001 34 1002 35 1003
+			36 1004 37 1005 38 1006 39 1007
+			40 1008 41 1009 42 1010 43 1011
+			44 1012 45 1013 46 1014 47 1015
+			48 1016 49 1017 50 1018 51 1019
+
+			// NULL FBID Should map to cpu0 to detect NAE send message errors
+			127 0
 		>;
 
-        // FLOW Table Generation: CRC16 polynomial
+	// FLOW Table Generation: CRC16 polynomial
   	flow_crc_poly = <0xffff>;
 
 	ucore {
@@ -72,6 +86,7 @@
 				     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
 				     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
 		};
+
 	};
 
 	complex@0 {
@@ -82,14 +97,14 @@
 		// Max ingress fifo size 256 units (size of one unit is 64 byte)
 		iface_fifo_sizes = <55>;
 
-		// Max parser sequence fifo size 1024 packets 
+		// Max parser sequence fifo size 1024 packets
 		// (if 1588 Timestamp is not required, then max size increases to 2048)
 		parser_sequence_fifo_sizes = <225>;
 
 		// Since rx_buffer is per context, we can have a few different ways
 		//  to populate the operand
-//		num_channels = <8>;
-//		rx_buffer_sizes = <118 118 118 118 118 118 118 118>;
+//		num_channels = <4>;
+//		rx_buffer_sizes = <240 240 240 240>;
 		num_channels = <1>;
 		rx_buffer_sizes = <944>;
 
@@ -107,14 +122,14 @@
 		// Max ingress fifo size 256 units (size of one unit is 64 byte)
 		iface_fifo_sizes = <55>;
 
-		// Max parser sequence fifo size 1024 packets 
+		// Max parser sequence fifo size 1024 packets
 		// (if 1588 Timestamp is not required, then max size increases to 2048)
 		parser_sequence_fifo_sizes = <225>;
 
 		// Since rx_buffer is per context, we can have a few different ways
 		//  to populate the operand
-//		num_channels = <8>;
-//		rx_buffer_sizes = <118 118 118 118 118 118 118 118>;
+//		num_channels = <4>;
+//		rx_buffer_sizes = <240 240 240 240>;
 		num_channels = <1>;
 		rx_buffer_sizes = <944>;
 
@@ -132,14 +147,14 @@
 		// Max ingress fifo size 256 units (size of one unit is 64 byte)
 		iface_fifo_sizes = <55>;
 
-		// Max parser sequence fifo size 1024 packets 
+		// Max parser sequence fifo size 1024 packets
 		// (if 1588 Timestamp is not required, then max size increases to 2048)
 		parser_sequence_fifo_sizes = <225>;
 
 		// Since rx_buffer is per context, we can have a few different ways
 		//  to populate the operand
-//		num_channels = <8>;
-//		rx_buffer_sizes = <118 118 118 118 118 118 118 118>;
+//		num_channels = <4>;
+//		rx_buffer_sizes = <240 240 240 240>;
 		num_channels = <1>;
 		rx_buffer_sizes = <944>;
 
@@ -157,14 +172,14 @@
 		// Max ingress fifo size 256 units (size of one unit is 64 byte)
 		iface_fifo_sizes = <55>;
 
-		// Max parser sequence fifo size 1024 packets 
+		// Max parser sequence fifo size 1024 packets
 		// (if 1588 Timestamp is not required, then max size increases to 2048)
 		parser_sequence_fifo_sizes = <225>;
 
 		// Since rx_buffer is per context, we can have a few different ways
 		//  to populate the operand
-//		num_channels = <8>;
-//		rx_buffer_sizes = <118 118 118 118 118 118 118 118>;
+//		num_channels = <4>;
+//		rx_buffer_sizes = <240 240 240 240>;
 		num_channels = <1>;
 		rx_buffer_sizes = <944>;
 
@@ -183,17 +198,18 @@
 		// Max ingress fifo size 256 units (size of one unit is 64 byte)
 		iface_fifo_sizes = <13 13>;
 
-		// Max parser sequence fifo size 1024 packets 
+		ext_phy_addr = <17 16>;
+		ext_phy_bus = <0 0>;
+
+		// Max parser sequence fifo size 1024 packets
 		// (if 1588 Timestamp is not required, then max size increases to 2048)
 		num_channels = <1 1>;
 		parser_sequence_fifo_sizes = <62 62>;
 
 		// Since rx_buffer is per context, we can have a few different ways
 		//  to populate the operand
-		rx_buffer_sizes = <160 160>;
-                ext_phy_addr = <9 10>;
-                ext_phy_bus = <0 0> ;
-				   
+		rx_buffer_sizes = <128 128>;
+
 
 		// Max available descriptors are 1024 (across all complexes).
 		// Per port num_free_descriptors must be even number
@@ -202,3 +218,123 @@
 		ucore_mask = <0xffff 0xffff>;
 	};
 };
+
+
+/*
+	// XLP - SGMII Daughter card support
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		loopback_mode = <0 0 0 0>;
+
+		// Max ingress fifo size 256 units (size of one unit is 64 byte)
+		iface_fifo_sizes = <13 13 13 13>;
+
+		ext_phy_addr = <5 6 7 4>;
+		ext_phy_bus = <1 1 1 1>;
+
+		// Max parser sequence fifo size 1024 packets
+		// (if 1588 Timestamp is not required, then max size increases to 2048)
+		num_channels = <1 1 1 1>;
+		parser_sequence_fifo_sizes = <62 62 62 62>;
+
+		// Since rx_buffer is per context, we can have a few different ways
+		//  to populate the operand
+		rx_buffer_sizes = <128 128 128 128>;
+
+
+		// Max available descriptors are 1024 (across all complexes).
+		// Per port num_free_descriptors must be even number
+		num_free_descs = <52 52 52 52>;
+		free_desc_sizes = <2048 2048 2048 2048>;
+		ucore_mask = <0xffff 0xffff 0xffff 0xffff>;
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		loopback_mode = <0 0 0 0>;
+
+		// Max ingress fifo size 256 units (size of one unit is 64 byte)
+		iface_fifo_sizes = <13 13 13 13>;
+
+		ext_phy_addr = <9 10 11 8>;
+		ext_phy_bus = <1 1 1 1>;
+
+		// Max parser sequence fifo size 1024 packets
+		// (if 1588 Timestamp is not required, then max size increases to 2048)
+		num_channels = <1 1 1 1>;
+		parser_sequence_fifo_sizes = <62 62 62 62>;
+
+		// Since rx_buffer is per context, we can have a few different ways
+		//  to populate the operand
+		rx_buffer_sizes = <128 128 128 128>;
+
+
+		// Max available descriptors are 1024 (across all complexes).
+		// Per port num_free_descriptors must be even number
+		num_free_descs = <52 52 52 52>;
+		free_desc_sizes = <2048 2048 2048 2048>;
+		ucore_mask = <0xffff 0xffff 0xffff 0xffff>;
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		loopback_mode = <0 0 0 0>;
+
+		// Max ingress fifo size 256 units (size of one unit is 64 byte)
+		iface_fifo_sizes = <13 13 13 13>;
+
+		ext_phy_addr = <1 2 3 0>;
+		ext_phy_bus = <1 1 1 1>;
+
+		// Max parser sequence fifo size 1024 packets
+		// (if 1588 Timestamp is not required, then max size increases to 2048)
+		num_channels = <1 1 1 1>;
+		parser_sequence_fifo_sizes = <62 62 62 62>;
+
+		// Since rx_buffer is per context, we can have a few different ways
+		//  to populate the operand
+		rx_buffer_sizes = <128 128 128 128>;
+
+
+		// Max available descriptors are 1024 (across all complexes).
+		// Per port num_free_descriptors must be even number
+		num_free_descs = <52 52 52 52>;
+		free_desc_sizes = <2048 2048 2048 2048>;
+		ucore_mask = <0xffff 0xffff 0xffff 0xffff>;
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		loopback_mode = <0 0 0 0>;
+
+		// Max ingress fifo size 256 units (size of one unit is 64 byte)
+		iface_fifo_sizes = <13 13 13 13>;
+
+		ext_phy_addr = <13 14 15 12>;
+		ext_phy_bus = <1 1 1 1>;
+
+		// Max parser sequence fifo size 1024 packets
+		// (if 1588 Timestamp is not required, then max size increases to 2048)
+		num_channels = <1 1 1 1>;
+		parser_sequence_fifo_sizes = <62 62 62 62>;
+
+		// Since rx_buffer is per context, we can have a few different ways
+		//  to populate the operand
+		rx_buffer_sizes = <128 128 128 128>;
+
+
+		// Max available descriptors are 1024 (across all complexes).
+		// Per port num_free_descriptors must be even number
+		num_free_descs = <52 52 52 52>;
+		free_desc_sizes = <2048 2048 2048 2048>;
+		ucore_mask = <0xffff 0xffff 0xffff 0xffff>;
+	};
+
+*/
+
diff --git a/arch/mips/boot/dts/multi-os-hybrid.dts b/arch/mips/boot/dts/multi-os-hybrid.dts
index 74684de..888e530 100644
--- a/arch/mips/boot/dts/multi-os-hybrid.dts
+++ b/arch/mips/boot/dts/multi-os-hybrid.dts
@@ -13,7 +13,7 @@
 	hypervisor {
 		hypervisor-name = "Xen";
 		alloc_dom0_memory = <0>;
-		bootargs = "ncores=8 dom0_loadaddr=0xf8000000 dom0_size=0x1c000000 dom0_cpumask=0x0f -- ";
+		bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0x0f -- ";
 		domain_heap = <0x30000000 0x20000000>; /* 0.75 GB -> 1.25 GB */
 	};
 	doms {
@@ -28,8 +28,8 @@
 
 			cpu {
 				onlinemask = <0x0f>;
-                                nae-rx-vc = <0>;
-                                nae-fb-vc = <1>;
+				nae-rx-vc = <0>;
+				nae-fb-vc = <1>;
 				napi-vc-mask = <0x3>;
 			};
 			uart {
@@ -38,27 +38,24 @@
 				sharedcfg = <0x1f000000>;
 			};
 			memory {
-				reg = <0x04000000 0x08000000	// 128M at 64M
+				reg = <	0x04000000 0x08000000    // 128M at 64M
 					0x20000000 0x20000000>;  // 512M at 512M
+
 			};
 			pic {
 			};
-			app-param{
-				shmem = <0x1 0x40000000 		// START ADDR <MSB LSB> 5GB
-					0x0 0x80000000>;  // SIZE <MSB LSB> 2GB
-			};
 		};
 		dom@1 {
 			device_type = "domain";
 			os = "netos";
 
-			heap-size = <0x0 0x2000000>;                   // 32M
+			heap-size = <0x0 0x2000000>;		   // 32M
 			shared-mem = <0x0 0xe0000000 0x0 0x04000000>;  // 3584MB -> 3648 MB (64MB)
 
 			#address-cells = <1>;
 			#size-cells = <1>;
 
-			app-bootcmd = "ampload";
+			app-bootcmd = "smpload";
 			app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
 
 			kernel {
@@ -69,13 +66,13 @@
 				location = "/tmp/xen/netos.elf";
 
 				/* Domain destroy currently doesn't work with hyperexec */
-				dom_destroy_hack = <1>;
+				dom_destroy_hack = <0>;
 			};
 
 			cpu {
 				onlinemask = <0xf0>;
-                                nae-rx-vc = <0>;
-                                nae-fb-vc = <1>;
+				nae-rx-vc = <0>;
+				nae-fb-vc = <1>;
 			};
 			uart {
 				id = <0>;
@@ -84,61 +81,17 @@
 			memory {
 				reg = <0x50000000 0x10000000>;  // 1280M -> 1536M (256M)
 			};
-			nae{
+			nae {
 				owner = <0>;
 			};
-		};
-		dom@2 {
-			device_type = "domain";
-			os = "netos";
-
-			heap-size = <0x0 0x2000000>;                   // 32M
-			shared-mem = <0x0 0xe4000000 0x0 0x04000000>;  // 3648MB -> 3712 (64MB)
-
-			#address-cells = <1>;
-			#size-cells = <1>;
-
-			app-bootcmd = "smpload";
-			app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
-
-		       	kernel {
-				/* Kernel Memory allocated from xen domain-heap */
-				size = <0x02000000>;  // 32M
-
-				/* Location in Dom0 ramdisk */
-				location = "/tmp/xen/netos.elf";
-
-				/* Domain destroy currently doesn't work with hyperexec */
-				dom_destroy_hack = <0>;
-			};
 
-			cpu {
-				onlinemask = <0xfffffff0>;
-                                nae-rx-vc = <0>;
-                                nae-fb-vc = <1>;
-				/* Setting this to '1' makes NAE driver to skip buf alloction and initial
-                        	   sending of packet buffers*/
-				nae-buf-alloc-by-app = <1>; 
-			};
-			uart {
-				id = <0>;
-				sharedcfg = <0x1f000000>;
-			};
-			memory {
-				reg = <0x60000000 0x60000000>;  // 1536M -> 3072M (1536M)
-			};
-			nae{
-				owner = <0>;
-			};
 			app-param{
-				shmem = <0x1 0x40000000 	// START ADDR <MSB LSB> 5GB
-					0x0 0x80000000>;  // SIZE <MSB LSB> 2GB
-				linux-mem = <0x00000000 0x04000000	// START ADDR <MSB LSB> 
-					0x00000000 0x3C000000>;  // SIZE <MSB LSB>
+				linux-mem = <	0x00000000 0x04000000	// START ADDR <MSB LSB> 64MB
+						0x00000000 0x3C000000>;	// SIZE <MSB LSB> 960 MB
 				/* CP -> control plane
 				   FP - Fast path
 				*/
-				nae-rx-vc = <0>;//VC for FP and CP for nae rx 
+				nae-rx-vc = <0>;//VC for FP and CP for nae rx
 				sae-rx-vc = <1>; //VC for FP and CP for sae rx
 				io-fb-vc = <2>;//IO freeeback VC for FP and CP
 				cp-fp-vc = <3>;//VC for receiving msgs from cp/fp
@@ -146,47 +99,6 @@
 				fp-to-cp-dst = <3>;//CP cpu 0 will process
 			};
 		};
-		dom@3 {
-			device_type = "domain";
-			os = "netos";
-
-			heap-size = <0x0 0x2000000>;                   // 32M
-			shared-mem = <0x0 0xe8000000 0x0 0x04000000>;  // 3712MB -> 3776 MB (64MB)
-
-			#address-cells = <1>;
-			#size-cells = <1>;
-
-			app-bootcmd = "ampload";
-			app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
-
-			kernel {
-				/* Kernel Memory allocated from xen domain-heap */
-				size = <0x02000000>;  // 32M
-
-				/* Location in Dom0 ramdisk */
-				location = "/tmp/xen/netos.elf";
-
-				/* Domain destroy currently doesn't work with hyperexec */
-				dom_destroy_hack = <0>;
-			};
-
-			cpu {
-				onlinemask = <0xfff00000>;
-                                nae-rx-vc = <0>;
-                                nae-fb-vc = <1>;
-			};
-			uart {
-				id = <0>;
-				sharedcfg = <0x1f000000>;
-			};
-			memory {
-				reg = <0x90000000 0x30000000>;  // 2304M -> 3072M (768MB)
-			};
-			nae{
-				owner = <0>;
-			};
-		};
-
 	};
 
 	chosen {
@@ -202,10 +114,10 @@
 	 * temporary download locations the stage-1/stage-2 firmware
 	 */
 	firmware-download {
-		u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+		u-boot	= <0x0c100000 0x3f00000>;  /* 63M @ 193M */
 		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
 		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
-		dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
+		dom0	  = <0x09000000 0x03000000>; /* 48M @ 144M */
 		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
 	};
 
-- 
1.7.1

