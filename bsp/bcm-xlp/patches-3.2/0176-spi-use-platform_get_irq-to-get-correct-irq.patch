From b66db46d23864d66e59352bb16ac75284b26ecb9 Mon Sep 17 00:00:00 2001
From: Kamlakant Patel <kamlakant.patel@broadcom.com>
Date: Fri, 12 Dec 2014 11:04:02 +0530
Subject: spi: use platform_get_irq to get correct irq

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/spi/spi-xlp.c b/drivers/spi/spi-xlp.c
index 6077373..775c262 100644
--- a/drivers/spi/spi-xlp.c
+++ b/drivers/spi/spi-xlp.c
@@ -92,6 +92,8 @@
 #define XLP_SPI_FIFO_SIZE		8
 #define XLP_SPI_MAX_CS			4
 
+#define NR_IRQS_PER_NODE                1024
+
 struct xlp_spi_priv {
 	void __iomem		*base;
 	/* data buffers */
@@ -424,20 +426,13 @@ static int xlp_spi_probe(struct platform_device *pdev)
 	struct spi_master *master;
 	struct xlp_spi_priv *xspi;
 	struct resource *res;
-	const __be32 *prop;
-	int irq, ret = 0;
+	int irq, node, ret = 0;
 
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	if (!res)
 		return -ENODEV;
 
-	prop = of_get_property(pdev->dev.of_node, "interrupts", NULL);
-	if (prop == NULL) {
-		dev_err(&pdev->dev, "No \"interrupts\" property!\n");
-		return -ENXIO;
-	}
-
-	irq = be32_to_cpu(*prop);
+	irq = platform_get_irq(pdev, 0);
 	if (!irq) {
 		dev_err(&pdev->dev, "no irq\n");
 		return -ENXIO;
@@ -452,7 +447,9 @@ static int xlp_spi_probe(struct platform_device *pdev)
 	xspi = spi_master_get_devdata(master);
 	platform_set_drvdata(pdev, xspi);
 
-	master->bus_num = 0;
+	node = irq/NR_IRQS_PER_NODE;
+
+	master->bus_num = node;
 	master->num_chipselect = XLP_SPI_MAX_CS;
 	master->mode_bits = SPI_CPOL | SPI_CPHA | SPI_CS_HIGH;
 	master->setup = xlp_spi_setup;
@@ -475,6 +472,7 @@ static int xlp_spi_probe(struct platform_device *pdev)
 	spi_master_set_devdata(master, xspi);
 	xlp_spi_slave_reset(xspi);
 	/* register our spi controller */
+	dev_info(&pdev->dev, "Registering for Node %d!\n", node);
 	ret = spi_register_master(master);
 	if (ret) {
 		dev_err(&pdev->dev, "spi register master failed!\n");
-- 
1.7.1

