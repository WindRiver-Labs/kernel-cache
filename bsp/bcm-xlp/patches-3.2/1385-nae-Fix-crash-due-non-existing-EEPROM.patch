From 63dd8416f5ad8d96abfc3db25d0b8c8bd1275163 Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Thu, 13 Dec 2012 19:41:57 +0530
Subject: nae: Fix crash due non-existing EEPROM.

     NAE reads MAC Addresses from EEPROM and if the EEPROM doesn't exist,
it should assign a Randorm EEPROM Address.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c b/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c
index 4011d25..3d1a17e 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_eeprom.c
@@ -15,20 +15,27 @@ struct eeprom_data *get_nlm_eeprom(void)
 EXPORT_SYMBOL(get_nlm_eeprom);
 int eeprom_read (int devaddr, int addr, int alen, u8 * rd_buf, int len);
 int eeprom_write (int devaddr, int addr, int alen,u8 * wr_buf, int len);
-struct i2c_client *global_client;
+struct i2c_client *global_client=NULL;
 
 int eeprom_write (int devaddr, int addr, int alen, u8 * wr_buf, int len)
 {
 	struct i2c_client *client;
         client=global_client;   
-       	memset(wr_buf, '0', sizeof(wr_buf)); 
+       	if(client==NULL){
+		return -1;
+	}
+	memset(wr_buf, '0', sizeof(wr_buf)); 
 	i2c_smbus_write_i2c_block_data(client, addr, len, wr_buf);	
 	return 0;
 }
+
 int eeprom_read (int devaddr, int addr, int alen, u8 *rd_buf, int len)
 {
 	struct i2c_client *client;
 	client=global_client;	
+       	if(client==NULL){
+		return -1;
+	}
 	memset(rd_buf, '0', sizeof(rd_buf));	
 	i2c_smbus_read_i2c_block_data(client, addr, len, rd_buf);
 	return 0;
@@ -37,13 +44,8 @@ int eeprom_read (int devaddr, int addr, int alen, u8 *rd_buf, int len)
 static int xlpge_eeprom_probe(struct i2c_client *client,
 			const struct i2c_device_id *id)	
 {
-	struct eeprom_data *nlm_eeprom=NULL;
-	nlm_eeprom=get_nlm_eeprom();
-	nlm_eeprom->i2c_dev_addr=0x57;
   	
 	global_client=client;
-        nlm_eeprom->eeprom_i2c_read_bytes = (void *)eeprom_read;
-	nlm_eeprom->eeprom_i2c_write_bytes = (void *)eeprom_write;	
 	return 0;
 }
 
@@ -61,8 +63,14 @@ static struct i2c_driver xlpge_eeprom_driver = {
 };
 
 
-extern int xlpge_eeprom_init(void)
+int xlpge_eeprom_init(void)
 {
+	struct eeprom_data *nlm_eeprom=NULL;
+	
+	nlm_eeprom=get_nlm_eeprom();
+	nlm_eeprom->i2c_dev_addr=0x57;
+        nlm_eeprom->eeprom_i2c_read_bytes = (void *)eeprom_read;
+	nlm_eeprom->eeprom_i2c_write_bytes = (void *)eeprom_write;	
         return i2c_add_driver(&xlpge_eeprom_driver);
 }
 EXPORT_SYMBOL(xlpge_eeprom_init);
-- 
1.7.1

