From 9b984dd1e4e0e009a8d8d1e22fcdb47acf498d97 Mon Sep 17 00:00:00 2001
From: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Date: Sat, 2 Oct 2010 15:57:19 -0700
Subject: Bringup NAE updates

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/net/ethernet/broadcom/nae/init_nae.c b/drivers/net/ethernet/broadcom/nae/init_nae.c
index 9ed891e..1a20e21 100644
--- a/drivers/net/ethernet/broadcom/nae/init_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/init_nae.c
@@ -223,21 +223,6 @@ void initialize_nae(void)
 		return;
 	}
 
-#if 0
-	/* Before doing anything, reset crap left over by firmware in the nae */
-	nlm_hal_write_nae_reg(0x62, (1 << 16));
-	for (i = 0; i < 10000000; i++) {
-		val = nlm_hal_read_nae_reg(0x62);
-		if (val) break;
-	}
-	if (val) {
-		printk("[%s] reset of port 16 successful!\n", __func__);
-	}
-	else {
-		printk("[%s] reset of port 16 failed!\n", __func__);
-	}
-#endif
-
 	printk("Configuring ucore...\n");
 	parse_ucore_config();
 
diff --git a/drivers/net/ethernet/broadcom/nae/xlp_nae.c b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
index c691faf..7dcc7cf 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
@@ -96,6 +96,7 @@ module_param(debug, int, 0);
 
 static int drop_uboot_pkt = 1;
 module_param(drop_uboot_pkt, int, 0);
+static unsigned long stats_uboot_pkts;
 
 extern int hwemul;
 module_param(hwemul, int, 0);
@@ -200,6 +201,7 @@ static __inline__ void cpu_halt(void)
 
 static __inline__ void print_fmn_send_error(const char *str, uint32_t send_result)
 {
+#if 0
 	if(send_result & MSG_DST_FC_FAIL)
 	{
 		printk("[%s] Msg Destination flow control credit fail(send_result=%08x)\n",
@@ -211,6 +213,10 @@ static __inline__ void print_fmn_send_error(const char *str, uint32_t send_resul
 	else if (send_result & MSG_TXQ_FULL) {
 		printk("[%s] TX message Q full(send_result=%08x)\n", __func__, send_result);
 	}
+	else {
+		printk("[%s] Unknown send error type(send_result=%08x)\n", __func__, send_result);
+	}
+#endif
 }
 
 static __inline__ struct sk_buff *mac_get_skb_back_ptr(uint64_t addr)
@@ -321,10 +327,12 @@ static void mac_refill_frin_desc(unsigned long dev)
 	priv = netdev_priv(ndev);
 	ret = 0;
 
+	priv->num_replenishes++;
+
 	/* TODO ALERT: priv->num_desc access needs to atomic */
 	limit = max_num_desc - priv->num_desc;
 
-	for(i=1; i <= limit; i++)
+	for(i = 0; i < limit; i++)
 	{
 		skb = nlm_xlp_alloc_skb();
 		if(!skb)
@@ -355,6 +363,7 @@ static void mac_refill_frin_desc(unsigned long dev)
                 }
 		msgrng_access_disable(mflags);
 		priv->num_desc += 1;
+		priv->frin_sent++;
 	}
         return;
 }
@@ -406,6 +415,8 @@ static void nlm_xlp_nae_init(void)
 		dev->dev_addr = eth_hw_addr[i];
 		priv->port	= i;
 		priv->num_desc  = 0;
+		priv->num_replenishes = 0;
+		priv->frin_sent  = 0;
 		priv->inited	= 0;
 		priv->block 	=(i & 0xff) >> 2;
 		priv->index 	= i & 0x3;
@@ -463,7 +474,7 @@ static int  nlm_xlp_nae_open (struct net_device *dev)
 
 	/* set timer to test rx routine */
 	init_timer(&priv->link_timer);
-	priv->link_timer.expires = jiffies + HZ/100 ;
+	priv->link_timer.expires = jiffies + HZ ; /* First timer after 1 sec */
 	priv->link_timer.data    = (unsigned long) priv->port;
 	priv->link_timer.function = &nlm_xlp_mac_timer;
 	priv->phy_oldlinkstat = -1;
@@ -568,7 +579,7 @@ static int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
         {
 		print_fmn_send_error(__func__, ret);
 		if (debug) printk("[%s]: retrying message send...\n", __func__);
-		printk("[%s] HACK ALERT! dropping packet(skb=%p)!\n", __func__, skb);
+		//printk("[%s] HACK ALERT! dropping packet(skb=%p)!\n", __func__, skb);
 		dev_kfree_skb_any(skb);
 		//goto retry_send;
         }
@@ -794,6 +805,7 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 		if (drop_uboot_pkt) {
 			if ( (addr >= (192<<20)) && (addr < (256 << 20)) ) {
 				printk("Dropping firmware network packet (addr=%llx)!\n", addr);
+				stats_uboot_pkts++;
 				return;
 			}
 		}
@@ -851,6 +863,7 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 			if( priv->num_desc < MIN_FRIN_DESC_THRESHD)
 			{
 				tasklet_schedule(&mac_refill_task[port]);
+				//mac_refill_frin_desc((unsigned long) skb->dev) ;
 			}
 		}
 		else
@@ -886,6 +899,7 @@ static int xlp_mac_proc_read(char *page, char **start, off_t off,
 	struct net_device *dev = 0;
 	struct dev_data *priv = 0;
 
+	len += sprintf(page + len, "uboot_pkts = %ld\n", stats_uboot_pkts);
 
 	for (i = 0; i < MAX_GMAC_PORT; i++) {
 
@@ -895,19 +909,26 @@ static int xlp_mac_proc_read(char *page, char **start, off_t off,
 
 		priv = netdev_priv(dev);
 
+		len += sprintf(page + len, "per port@%d: num_desc = %ld num_replenishes = %ld frin_sent = %ld\n",
+			       i, priv->num_desc, priv->num_replenishes, priv->frin_sent);
+
 		len += sprintf(page + len,
-			       "per port-%d: %lu %lu %lu %lu\n",
+			       "per port@%d: %lu(rxp) %lu(rxb) %lu(txp) %lu(txb)\n",
 			       i,
 			       priv->stats.rx_packets, priv->stats.rx_bytes,
 			       priv->stats.tx_packets, priv->stats.tx_bytes);
-	}
-	for (cpu = 0; cpu < NR_CPUS ; cpu++) {
-		len += sprintf(page + len, "per cpu-%d: %lu %lu %lu %lu\n",
-			       cpu,
-			       priv->cpu_stats[cpu].tx_packets,
-			       priv->cpu_stats[cpu].txc_packets,
-			       priv->cpu_stats[cpu].rx_packets,
-			       priv->cpu_stats[cpu].interrupts);
+
+		for (cpu = 0; cpu < NR_CPUS ; cpu++) {
+			unsigned long tx = priv->cpu_stats[cpu].tx_packets;
+			unsigned long txc = priv->cpu_stats[cpu].txc_packets;
+			unsigned long rx = priv->cpu_stats[cpu].rx_packets;
+			unsigned long ints = priv->cpu_stats[cpu].interrupts;
+
+			if (!tx && !txc && !rx && !ints) continue;
+
+			len += sprintf(page + len, "per cpu@%d: %lu(txp) %lu(txcp) %lu(rxp) %lu(int)\n",
+				       cpu, tx, txc, rx, ints);
+		}
 	}
 
 	*eof = 1;
@@ -923,6 +944,7 @@ static int xlp_mac_proc_read(char *page, char **start, off_t off,
 }
 
 
+extern void nlm_xlp_msgring_int_handler(unsigned int irq, struct pt_regs *regs);
 /**********************************************************************
  * nlm_xlp_mac_timer - interrupt handler routine
  * @data - parameter passed in when timer interrupt handler is called.
@@ -932,9 +954,12 @@ static void nlm_xlp_mac_timer(unsigned long data)
 	unsigned port = data;
         struct net_device *dev = (struct net_device *)dev_mac[port];
         struct dev_data *priv = netdev_priv(dev);
-        int next_tick = HZ;
+        int next_tick = HZ / 100; /* 10ms */
 
-        priv->link_timer.expires = jiffies + next_tick/10;
+	/* printk("[%s] A0 Workaround, forcing FMN int handling \n",__func__); */
+	nlm_xlp_msgring_int_handler(IRQ_MSGRING, NULL);
+
+        priv->link_timer.expires = jiffies + next_tick;
         add_timer(&priv->link_timer);
 }
 
@@ -986,6 +1011,8 @@ static int __init nlm_xlp_mac_init(void)
 static void __exit nlm_xlp_mac_exit(void)
 {
 	/* unregister mac driver */
+
+
 	nlm_xlp_nae_remove();
 
 	pci_unregister_driver(&soc_driver);
diff --git a/drivers/net/ethernet/broadcom/nae/xlp_nae.h b/drivers/net/ethernet/broadcom/nae/xlp_nae.h
index 8af7295..bddbb96 100644
--- a/drivers/net/ethernet/broadcom/nae/xlp_nae.h
+++ b/drivers/net/ethernet/broadcom/nae/xlp_nae.h
@@ -65,6 +65,8 @@ struct dev_data
         struct sk_buff* skb;
         int phy_oldlinkstat;
         unsigned long num_desc;
+	unsigned long num_replenishes;
+	unsigned long frin_sent;
         __u8 hwaddr[6];
 
         xlp_mac_speed_t speed;  /* current speed */
-- 
1.7.1

