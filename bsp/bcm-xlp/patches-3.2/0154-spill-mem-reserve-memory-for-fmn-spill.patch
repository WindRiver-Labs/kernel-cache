From 57e81d0c1a33440b468a4ddc38342bdb774d97ba Mon Sep 17 00:00:00 2001
From: Saswat Kumar Dash <saswat.dash@broadcom.com>
Date: Mon, 1 Dec 2014 04:54:21 -0800
Subject: spill-mem : reserve memory for fmn spill

Introduced netlogic,spill-mem parameter in chosen section
of dts file.
This memory is allocated using alloc_bootmem().
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/xlp/dt.c b/arch/mips/netlogic/xlp/dt.c
index eef60df..7c127d4 100644
--- a/arch/mips/netlogic/xlp/dt.c
+++ b/arch/mips/netlogic/xlp/dt.c
@@ -97,6 +97,10 @@ unsigned long frin_fifo_address;
 EXPORT_SYMBOL(frin_fifo_address);
 unsigned long frin_fifo_size;
 EXPORT_SYMBOL(frin_fifo_size);
+unsigned long spill_mem_size;
+EXPORT_SYMBOL(spill_mem_size);
+unsigned long spill_mem_address;
+EXPORT_SYMBOL(spill_mem_address);
 
 static int __init xlp_reserve_memory(unsigned long node, const char *uname,
 					int depth, void *data)
@@ -138,6 +142,30 @@ static int __init xlp_reserve_memory(unsigned long node, const char *uname,
 	}
 	frin_fifo_address = virt_to_phys(addr);
 	pr_info("Reserved %ld MB at %p for freein_fifo\n", val, addr);
+
+	/* Reserve memory for fmn spill */
+	p = of_get_flat_dt_prop(node, "netlogic,spill-mem", &size);
+	if (p == NULL)
+		return 0;
+	val = be32_to_cpup(p);
+	if (val == 0UL) {
+		spill_mem_address = 0;
+		spill_mem_size = 0;
+		return 0;
+	}
+	if (val > 512) {
+		pr_info("Allocating maximum allowed spill_mem\n");
+		val = 512;
+	}
+	spill_mem_size = val * 1024 * 1024;
+	addr = alloc_bootmem(spill_mem_size);
+	if (addr == NULL) {
+		pr_err("Alloc spill-mem failed for %ld MB\n", val);
+		return 0;
+	}
+	spill_mem_address = virt_to_phys(addr);
+	pr_info("Reserved %ld MB at %p for fmn spill\n", val, addr);
+
 	return 0;
 }
 
-- 
1.7.1

