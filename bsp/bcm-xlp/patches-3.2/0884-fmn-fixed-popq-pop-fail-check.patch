From 03463d9311fb6c8314630aeacf70af426348bd69 Mon Sep 17 00:00:00 2001
From: Virendra Pathak <vpathak@broadcom.com>
Date: Fri, 31 Jan 2014 13:14:30 +0530
Subject: fmn: fixed popq pop fail check

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_dp.h b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_dp.h
index 214c6b1..361e1df 100644
--- a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_dp.h
+++ b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_dp.h
@@ -58,12 +58,12 @@
 #define XLP_MSG_INT_REG         $8
 
 enum xlp_rcv_return_t {
-	EPOPQ_EMPTY = -2,
+	MSG_SUCCESS = 0,
 	ELD_FAILURE,
-	MSG_SUCCESS
+	EPOPQ_EMPTY
 };
 
-#define POP_CHECK_BIT	1
+#define POPQ_CHECK_MASK 	0x3
 
 
 #define _read_32bit_cp2_register(source)                        \
@@ -880,10 +880,10 @@ static inline int xlp_message_receive_1(uint32_t vc, uint32_t *src_id,
 	rx = xlp_receive(vc);
 	status = xlp_read_rx_status();	
 	if (!rx) {
-		if (status & (1 << POP_CHECK_BIT)) {
-			return EPOPQ_EMPTY;
+		if ((status & POPQ_CHECK_MASK) == EPOPQ_EMPTY) {
+			return -EPOPQ_EMPTY;
 		} else {
-			return ELD_FAILURE;
+			return -ELD_FAILURE;
 		}
 	}
 
@@ -917,10 +917,10 @@ static inline int xlp_message_receive_2(uint32_t vc, uint32_t *src_id,
 	rx = xlp_receive(vc);
 	status = xlp_read_rx_status();
 	if (!rx) {
-		if (status & (1 << POP_CHECK_BIT)) {
-			return EPOPQ_EMPTY;
+		if ((status & POPQ_CHECK_MASK) == EPOPQ_EMPTY) {
+			return -EPOPQ_EMPTY;
 		} else {
-			return ELD_FAILURE;
+			return -ELD_FAILURE;
 		}
 	}
 
@@ -957,10 +957,10 @@ static inline int xlp_message_receive_3(uint32_t vc, uint32_t *src_id,
 	rx = xlp_receive(vc);
 	status = xlp_read_rx_status();
 	if (!rx) {
-		if (status & (1 << POP_CHECK_BIT)) {
-			return EPOPQ_EMPTY;
+		if ((status & POPQ_CHECK_MASK) == EPOPQ_EMPTY) {
+			return -EPOPQ_EMPTY;
 		} else {
-			return ELD_FAILURE;
+			return -ELD_FAILURE;
 		}
 	}
 
@@ -1001,10 +1001,10 @@ static inline int xlp_message_receive(uint32_t vc, uint32_t *src_id,
 	rx = xlp_receive(vc);
 	status = xlp_read_rx_status();
 	if (!rx) {
-		if (status & (1 << POP_CHECK_BIT)) {
-			return EPOPQ_EMPTY;
+		if ((status & POPQ_CHECK_MASK) == EPOPQ_EMPTY) {
+			return -EPOPQ_EMPTY;
 		} else {
-			return ELD_FAILURE;
+			return -ELD_FAILURE;
 		}
 	}
 
@@ -1064,10 +1064,10 @@ static inline int xlp_message_receive_gid_1(uint32_t vc, uint32_t *src_id,
 	rx = xlp_receive(vc);
 	status = xlp_read_rx_status();
 	if (!rx) {
-		if (status & (1 << POP_CHECK_BIT)) {
-			return EPOPQ_EMPTY;
+		if ((status & POPQ_CHECK_MASK) == EPOPQ_EMPTY) {
+			return -EPOPQ_EMPTY;
 		} else {
-			return ELD_FAILURE;
+			return -ELD_FAILURE;
 		}
 	}
 
@@ -1103,10 +1103,10 @@ static inline int xlp_message_receive_gid_2(uint32_t vc, uint32_t *src_id,
 	rx = xlp_receive(vc);
 	status = xlp_read_rx_status();
 	if (!rx) {
-		if (status & (1 << POP_CHECK_BIT)) {
-			return EPOPQ_EMPTY;
+		if ((status & POPQ_CHECK_MASK) == EPOPQ_EMPTY) {
+			return -EPOPQ_EMPTY;
 		} else {
-			return ELD_FAILURE;
+			return -ELD_FAILURE;
 		}
 	}
 
@@ -1146,10 +1146,10 @@ static inline int xlp_message_receive_gid_3(uint32_t vc, uint32_t *src_id,
 	rx = xlp_receive(vc);
 	status = xlp_read_rx_status();
 	if (!rx) {
-		if (status & (1 << POP_CHECK_BIT)) {
-			return EPOPQ_EMPTY;
+		if ((status & POPQ_CHECK_MASK) == EPOPQ_EMPTY) {
+			return -EPOPQ_EMPTY;
 		} else {
-			return ELD_FAILURE;
+			return -ELD_FAILURE;
 		}
 	}
 
@@ -1192,10 +1192,10 @@ static inline int xlp_message_receive_gid(uint32_t vc, uint32_t *src_id,
 	rx = xlp_receive(vc);
 	status = xlp_read_rx_status();
 	if (!rx) {
-		if (status & (1 << POP_CHECK_BIT)) {
-			return EPOPQ_EMPTY;
+		if ((status & POPQ_CHECK_MASK) == EPOPQ_EMPTY) {
+			return -EPOPQ_EMPTY;
 		} else {
-			return ELD_FAILURE;
+			return -ELD_FAILURE;
 		}
 	}
 
-- 
1.7.1

