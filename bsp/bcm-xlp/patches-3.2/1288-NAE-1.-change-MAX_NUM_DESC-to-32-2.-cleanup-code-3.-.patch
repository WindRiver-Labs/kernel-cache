From 032d455aca933250e0a542a670b7e12b4d4aed0a Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Sat, 4 Sep 2010 14:55:21 -0700
Subject: NAE: 1. change MAX_NUM_DESC to 32 2. cleanup code 3. Freeback ID message don't contain context id, only receive data from nae-rx-->poe contain context info. Fix it

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/net/ethernet/broadcom/nae/xlp_nae.c b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
index 584cfd7..36bcbea 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
@@ -58,7 +58,7 @@
 #include "xlp_nae.h"
 
 #define XLP_SOC_MAC_DRIVER "XLP Mac Driver"
-#define MAX_NUM_MACS 1
+#define MAX_NUM_MACS 			1
 #define PCI_NETL_VENDOR			0xfecc
 #define PCI_DEVID_BASE			0
 #define PCI_DEVID_OFF_NET		0
@@ -67,7 +67,7 @@
 #define NUM_FREE_DESC			18
 #define FREE_DESC_POOL_WIDTH		20
 #define NUM_FREEIN_QUEUE		18
-#define MAX_NUM_DESC                    128
+#define MAX_NUM_DESC			32
 #define MIN_FRIN_DESC_THRESHD		16
 #define MAX_NET_INF             	18
 #define XLP_SGMII_RCV_CONTEXT_NUM	8
@@ -437,12 +437,9 @@ static void nlm_xlp_nae_init(void)
 	/* initial 18 gmac block */
         for(i = 0; i < 1/*MAX_NET_INF*/; i++)
 	{
-		/*init_gmac(i);*/
-		nlm_hal_open_if(GMAC_IF, i);
+		init_gmac(i);
 	}
 
-
-#if 1
 	/* init tx if credit */
 	init_tx_if_credit( 0, 0x7FFFF );
 
@@ -451,13 +448,11 @@ static void nlm_xlp_nae_init(void)
 	{
 		init_ucore(0xffffUL, i);
 	}
-#endif
+
 	ucore_load_apps(0xffffUL);
-#if 1
 	/*  init egress and igress interface */
 	init_ingress();
 	init_egress();
-#endif
 	spin_unlock_irq(&nlm_xlp_nae_lock);
 
 	for(i = 0; i< xlp_sgmii_ports /*MAX_GMAC_PORT*/; i++)
@@ -886,15 +881,12 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 	cpu = vc >> 4;
 	vc = vc & 0x03;
 
-	/* printk("[%s] vc = %d, size = %d\n", __func__, vc, size); */
 	if( vc == 1 && size == 1)
 	{
 		/* Transmit Complete */
-                addr = msg0 & 0xffffffffffULL;
-
-		/*context is XLP_SGMII_RCV_CONTEXT_NUM + three bit vlan type or vlan priority*/
-		context = (msg0 >> 40) & 0x3ff;
-		port = context / XLP_SGMII_RCV_CONTEXT_NUM;
+		addr = msg0 & 0xfffffffff0ULL;
+		port = msg0 & 0x0f;
+		len = (msg0 >> 40) & 0x3fff;
 
 		/* update dev and port to be accurate */
 		if(port < 0 || port >= MAX_GMAC_PORT)
@@ -902,58 +894,22 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 			port = 0;
 		}
 
-		pdev = (struct net_device*)dev_mac[port];
-		if(!pdev) {
-			printk("[%s]: [txc] wrong port=%d? pdev = NULL!\n", __func__, port);
-			return;
-		}
-		priv = netdev_priv(pdev);
-
-		skb = (struct sk_buff *)bus_to_virt(addr);
-		if(skb)
-		{
-			dev_kfree_skb_any(skb);
-		}
-		else {
-			printk("[%s]: [txc] wrong addr = %llx\n", __func__, addr);
-		}
-		port = msg0 & 0x0f;
-                addr = msg0 & 0xfffffffff0ULL;
-                len = (msg0 >> 40) & 0x3fff;
-#ifdef RUN_ON_SIM_ONLY
-		freedesc = len;
-		len = 0;
-#endif
-                if(addr && (len==0))
+                if(addr)
                 {
 			pdev = (struct net_device*)dev_mac[port];
 			if(!pdev)
 				return;
 			priv = netdev_priv(pdev);
-#ifdef RUN_ON_SIM_ONLY
-			if(priv->num_desc > freedesc)
-				priv->num_desc = freedesc;
-#endif
 
                         skb = (struct sk_buff *)bus_to_virt(addr);
                         if(skb)
                         {
-                                priv->stats.rx_packets++;
-                                if(priv->stats.rx_packets % MIN_FRIN_DESC_THRESHD == 15){
-                                       netif_tx_wake_all_queues(pdev);
-                                }
                                 dev_kfree_skb_any(skb);
                         }
-			if( priv->num_desc < MIN_FRIN_DESC_THRESHD)
-			{
-				tasklet_schedule(&mac_refill_task[port]);
+			else {
+				printk("[%s]: [txc] wrong addr = %llx\n", __func__, addr);
 			}
                 }
-                else if(addr == 0)
-                {
-                        /* case tx queue is stopped */
-                        netif_tx_wake_all_queues(pdev);
-                }
 	}
 	else if(vc == 0 && size == 2)
 	{
@@ -984,7 +940,7 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 		printk("RX: port:%d src_id: %d context: %d recv buf: 0x%llx len:%d addr:0x%010llx  \n",
 		       priv->port,src_id,context,(uint64_t)buf, len, vaddr);
 
-		//DUMP_PKT(buf , len);
+		/* DUMP_PKT(buf , len); */
 #endif
 
 		len = len  - MAC_CRC_LEN;
@@ -1006,7 +962,6 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
                         skb->protocol = eth_type_trans(skb, dev_mac[port]);
                         skb->dev->last_rx = jiffies;
 
-			/* printk("[%s]: sending rx packet up the stack\n", __func__); */
 			/* Pass the packet to Network stack */
 			netif_rx (skb);
 
@@ -1016,14 +971,11 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 			priv->cpu_stats[cpu].rx_packets++;
 
 			priv->num_desc -= 1;
-			/* printk("[%s] priv->num_desc = %d\n", __func__, priv->num_desc); */
 			if( priv->num_desc < MIN_FRIN_DESC_THRESHD)
 			{
 				tasklet_schedule(&mac_refill_task[port]);
 			}
 
-			/* refill one freein desc */
-			mac_send_one_desc(pdev);
 #if DUMP_RCV_PKT
 			DUMP_PKT(skb->data, skb->len);
 #endif
-- 
1.7.1

