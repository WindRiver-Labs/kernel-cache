From 3e9102cc81f56c89791c41986220898174722fef Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Wed, 18 Aug 2010 00:04:49 -0700
Subject: NAE: remove common.h fmn_credit.h init_fmn.c unused files

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/net/ethernet/broadcom/nae/common.h b/drivers/net/ethernet/broadcom/nae/common.h
deleted file mode 100644
index 6fd2138..0000000
--- a/drivers/net/ethernet/broadcom/nae/common.h
+++ /dev/null
@@ -1,16 +0,0 @@
-#ifndef _COMMON_H
-#define _COMMON_H
-
-extern  unsigned long long netlib_vaddrb;
-extern unsigned long long netlib_paddrb;
-#define PADDR_BASE 0x100000ULL
-#define PADDR_SIZE 0x200000
-#define INIT_VBASE( vbase, pbase) {netlib_vaddrb = vbase ; netlib_paddrb = pbase;}
-//#define PHYS_TO_VIRT(paddr) (uint64_t)((paddr) - (PADDR_BASE) + (vaddr_base))
-//#define VIRT_TO_PHYS(vaddr) (uint64_t)((vaddr) - (vaddr_base) + (PADDR_BASE))
-#define PHYS_TO_VIRT(paddr) (uint64_t)((paddr) - (netlib_paddrb) + (netlib_vaddrb))
-#define VIRT_TO_PHYS(vaddr) (uint64_t)((vaddr) - (netlib_vaddrb) + (netlib_paddrb))
-#define CACHELINE_SIZE          (1ULL << 6)
-#define CACHELINE_ALIGNED(addr) ( ((addr) + (CACHELINE_SIZE-1)) & ~(CACHELINE_SIZE-1) )
-
-#endif
diff --git a/drivers/net/ethernet/broadcom/nae/fmn_credit.h b/drivers/net/ethernet/broadcom/nae/fmn_credit.h
deleted file mode 100644
index 811e037..0000000
--- a/drivers/net/ethernet/broadcom/nae/fmn_credit.h
+++ /dev/null
@@ -1,385 +0,0 @@
-#ifndef FMN_CREDIT_H
-#define FMN_CREDIT_H
-
-const fmn_credit_type g_credit[] = {
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+0,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+1,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+2,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+3,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+4,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+5,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+6,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+7,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+8,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+9,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+10,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+11,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+12,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+13,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+14,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+15,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+16,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* CPU0 -->  TX*/
-{
-       CPU_Q_ID(0, 0, 0),
-        XLP_NET_TX_VC_BASE+17,
-        SET_UP_CREDITS|SET_UP_QUEUE,
-        FMN_QLEN_USE_DEFAULT,
-        FMN_CREDIT_DEFAULT
- },
-
-
-/* TX -->  CPU FREE out*/
-{
-      XLP_NET_TX_VC_BASE,
-      CPU_Q_ID(0, 0, 1),
-      SET_UP_CREDITS|SET_UP_QUEUE,
-      18*FMN_QLEN_USE_DEFAULT,
-      18*FMN_CREDIT_DEFAULT,
-  },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+0,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+1,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+2,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+3,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+4,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+5,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+6,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+7,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+8,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+9,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+10,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+11,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+12,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+13,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+14,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+15,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+16,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-/* CPU --> RX FREE IN */
- {
-     CPU_Q_ID( 0, 0, 0),
-      XLP_NET_RX_VC_BASE+17,
-      SET_UP_QUEUE|SET_UP_CREDITS,
-      FMN_QLEN_USE_DEFAULT,
-      FMN_CREDIT_DEFAULT
-      },
-
-
-{
-XLP_POE_VC_BASE,
-      CPU_Q_ID( 0, 0, 0),
-      SET_UP_CREDITS|SET_UP_QUEUE,
-      FMN_QLEN_USE_DEFAULT *18,
-      FMN_POE_CREDIT_DEFAULT *18
- },
-
-
-{ MAX_FMN_CODE,      MAX_FMN_CODE,     MAX_FMN_CODE,     MAX_FMN_CODE,     MAX_FMN_CODE} };
-#endif
diff --git a/drivers/net/ethernet/broadcom/nae/init_fmn.c b/drivers/net/ethernet/broadcom/nae/init_fmn.c
deleted file mode 100644
index 4a2361f..0000000
--- a/drivers/net/ethernet/broadcom/nae/init_fmn.c
+++ /dev/null
@@ -1,83 +0,0 @@
-#include <linux/types.h>
-#include <linux/kernel.h>
-#include <asm/netlogic/hal/nlm_hal_fmn.h>
-#include "net_common.h"
-#include "common.h"
-
-/*
- * Egress :
- *          [CPU]->[NA_TX]
- * Ingress
- *          [NA_RX]->[POE]->[CPU]
- * */
-
-int fmn_init(const fmn_credit_type *credit)
-{
-  int i = 0;
-  uint64_t q_cfg = 0;
-
-     while(credit[i].s_qid != MAX_FMN_CODE)
-     {
-
-        if( credit[i].q_len == FMN_CREDIT_DEFAULT ) {
-
-            q_cfg = OUTQ_ENABLE;
-
-        } else {
-
-            /*TODO:
-             * do the spill configuration and queue information
-             * do the input validation
-             *  */
-
-            q_cfg = OUTQ_ENABLE;
-
-         }
-
-        if(credit[i].flag & SET_UP_QUEUE )
-	   nlm_hal_write_outq_config(credit[i].d_qid, q_cfg);
-
-        if(credit[i].flag & SET_UP_CREDITS)
-		nlm_hal_write_credit( credit[i].s_qid, credit[i].d_qid, credit[i].credit);
-
-        i++;
-
-     }
-
- return SUCCESS;
-}
-
-
-void *init_nae_free_pool(int num_queue, unsigned char *pktmem , int num_bytes, int num_desc)
-{
-	struct xlp_msg msg0 = { {0, 0, 0, 0} };
-    unsigned char  *buf = pktmem;
-    int nae_rx_qid = XLP_NET_RX_VC_BASE;
-    int q = 0, i = 0;
-    int  code = 0;
-
-    for( q = 0 ; q < num_queue ; q++)
-    {
-
-	   for( i= 0; i < num_desc ; i ++ )
-        {
-
-             msg0.entry[0] = (unsigned long long)buf &0xffffffffc0ULL;
-             msg_print(1, 0, nae_rx_qid, &msg0);
-
-#if 1
-             if (nlm_hal_send_msg1( nae_rx_qid,
-                                    code,
-                                    msg0.entry[0])) {
-
-                   log_err("send failed!\n");
-                   return NULL;
-               }
-#endif
-                buf += num_bytes;
-        }
-        nae_rx_qid ++;
-    }
-
-return (void *)buf;
-}
-- 
1.7.1

