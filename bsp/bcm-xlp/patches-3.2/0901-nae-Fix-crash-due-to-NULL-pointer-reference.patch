From e7ed8f1f372ce3cd910eb08ab724b5b5d055ca4a Mon Sep 17 00:00:00 2001
From: P. Sadik <psadik@broadcom.com>
Date: Tue, 4 Mar 2014 13:19:01 +0530
Subject: nae: Fix crash due to NULL pointer reference.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
index 11d6ca1..ad6f91e 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
@@ -246,7 +246,7 @@ static inline void __netsoc_reset_nae(nae_t *nae)
 {
         int reset_bit = 9;
         /* Reset NAE */
-	
+
 	if (is_nlm_xlp9xx()) {
                 if (nae->nae_id == 0)
                     reset_bit = 21;
@@ -319,10 +319,10 @@ static inline uint32_t __netsoc_read_kr_reg(uint64_t mac_base, uint32_t lane_no,
 	volatile uint32_t cmd_data;
 	uint32_t data;
 
-	addr &= 0x1FF; 
+	addr &= 0x1FF;
 	cmd_data = (0x1 << 29) | (0x1 << 30) | (addr + (lane_no * 0x10));
-	netsoc_write_mac_reg(mac_base, KR_CMD, cmd_data);	
-	cmd_data = KR_CMD_PENDING; 
+	netsoc_write_mac_reg(mac_base, KR_CMD, cmd_data);
+	cmd_data = KR_CMD_PENDING;
 	while ((cmd_data & KR_CMD_PENDING) == KR_CMD_PENDING) {
 		cmd_data = netsoc_read_mac_reg(mac_base, KR_CMD);
 	}
@@ -1174,7 +1174,7 @@ static inline int __netsoc_nae_config_txrx(nae_t *nae, uint32_t enable, uint32_t
 /*
  Tries to map the passed context to the desired class.
  If cpu_enqueue mode is enabled, checks for the validity
- of the class. Traffic should be stopped before calling 
+ of the class. Traffic should be stopped before calling
  this function.
 */
 
@@ -1397,6 +1397,8 @@ static inline int __netsoc_disable_deepfifo(nae_t *nae, uint32_t context)
 
 static inline int  __netsoc_validate_lib_param (struct netsoc_lib_param *param)
 {
+	 if(param == NULL) return 0;
+
         if(!(is_nlm_xlp9xx()) && (param->kr_en)){
                         return -1;
         }else{
-- 
1.7.1

