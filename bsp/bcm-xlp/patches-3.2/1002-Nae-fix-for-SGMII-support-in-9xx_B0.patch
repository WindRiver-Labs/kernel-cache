From 429b121518c44cd2db9ea989d10da5ec156169ce Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Tue, 23 Sep 2014 12:33:58 +0530
Subject: Nae: fix for SGMII support in 9xx_B0.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
index ae57520..f592b2d 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
@@ -35,7 +35,6 @@
 #include "netsoc_haliface.h"
 #include "netsoc_libiface.h"
 #include "ext_phy.h"
-
 #if !defined(XLP_SIM) || defined(NLM_BOARD)
 
 
@@ -781,7 +780,11 @@ void xlp9xx_nae_write_pma2p0_mem(uint64_t mac_base, int block, int xgmii_speed,
 		pma2p0_config &= ~(PMA2P0_LANE2_RXTX_HARD_RESET | PMA2P0_LANE2_SYNTH_HARD_RESET);
 		pma2p0_config &= ~(PMA2P0_LANE3_RXTX_HARD_RESET | PMA2P0_LANE3_SYNTH_HARD_RESET);
 	}else{
-		pma2p0_config &= ~(PMA2P0_CTL_POR | PMA2P0_CTL_SYNTH_RST | PMA2P0_CTL_RTHR);
+		if(!is_nlm_xlp9xx_b0())
+                	pma2p0_config &= ~(PMA2P0_CTL_POR | PMA2P0_CTL_SYNTH_RST | PMA2P0_CTL_RTHR);
+               	else
+                       pma2p0_config &= 0xF0FF03FF;
+
 	}
 	netsoc_write_mac_reg(mac_base, PMA2P0_CTL0, pma2p0_config);
 
@@ -827,6 +830,7 @@ static void xlp9xx_config_pma2p0_serdes(nae_t *nae, uint32_t block, uint32_t pma
 
 	uint32_t delay, pma2p0_config, lane_no, max_lanes =4;
 	uint64_t mac_base = netsoc_get_macreg_base_for_phy(nae->mac_base, block);
+	
 	if(block==2 && (phymode == PHYMODE_SGMII)){
 		max_lanes =1;
 	}
@@ -853,8 +857,14 @@ static void xlp9xx_config_pma2p0_serdes(nae_t *nae, uint32_t block, uint32_t pma
 		pma2p0_config |= (PMA2P0_LANE3_RXTX_HARD_RESET | PMA2P0_LANE3_SYNTH_HARD_RESET | PMA2P0_LANE3_POWER_ON_RESET | PMA2P0_LANE3_REG_RESET);
 
 	}else{
-		pma2p0_config &= 0xFFFF01FF;
-		pma2p0_config |= PMA2P0_CTL_POR | PMA2P0_CTL_SYNTH_RST | PMA2P0_CTL_RTHR | (1<<16);
+		if(!is_nlm_xlp9xx_b0()) {
+                       pma2p0_config &= 0xFFFF01FF;
+                       pma2p0_config |= PMA2P0_CTL_POR | PMA2P0_CTL_SYNTH_RST | PMA2P0_CTL_RTHR | (1<<16);
+               	} else {
+                       pma2p0_config &= 0x00FF0FFF;
+                       pma2p0_config |= ~0x00FF0FFF;
+               	}
+
 	}
 	netsoc_write_mac_reg(mac_base, PMA2P0_CTL0, pma2p0_config);
 
@@ -868,8 +878,12 @@ static void xlp9xx_config_pma2p0_serdes(nae_t *nae, uint32_t block, uint32_t pma
 		pma2p0_config &= ~(PMA2P0_LANE3_TX_POWER_DOWN | PMA2P0_LANE3_RX_POWER_DOWN | PMA2P0_LANE3_SYNTH_POWER_DOWN | PMA2P0_LANE3_POWER_ON_RESET | PMA2P0_LANE3_REG_RESET);
 
 	}else{
-		pma2p0_config &= ~(PMA2P0_CTL_POR | (1<<16));
-		pma2p0_config &= 0xFFFFFE00;
+		if(!is_nlm_xlp9xx_b0()) {
+                       pma2p0_config &= ~(PMA2P0_CTL_POR | (1<<16));
+                       pma2p0_config &= 0xFFFFFE00;
+               } else 
+                       pma2p0_config &= 0x0F0FFF00;
+
 	}
 	netsoc_write_mac_reg(mac_base, PMA2P0_CTL0, pma2p0_config);
 
diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h
index da2f09c..0e5cbc2 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal_xlp_dev.h
@@ -203,12 +203,13 @@ extern int is_nlm_xlp(unsigned int chipid, unsigned int rev,  unsigned int ext);
 #define is_nlm_xlp3xx_201a()      ( is_nlm_xlp(0x3011, XLP_REVISION_ANY, CPU_EXTPID_XLP_201a))
 #define is_nlm_xlp3xx_101a()      ( is_nlm_xlp(0x3011, XLP_REVISION_ANY, CPU_EXTPID_XLP_101a))
 
-#define is_nlm_xlp3xx_lite()  (is_nlm_xlp3xx() && (!is_nlm_xlp3xx_B(XLP_REVISION_ANY)) )
+#define is_nlm_xlp3xx_lite()  	(is_nlm_xlp3xx() && (!is_nlm_xlp3xx_B(XLP_REVISION_ANY)) )
 
-#define is_nlm_xlp2xx()	    is_nlm_xlp(0x2000, XLP_REVISION_ANY,  0)
-#define is_nlm_xlp2xx_b0()	    is_nlm_xlp(0x2000, XLP_REVISION_B0,  0)
-#define is_nlm_xlp9xx()	    is_nlm_xlp(0x9000, XLP_REVISION_ANY,  0)
+#define is_nlm_xlp2xx()	    	is_nlm_xlp(0x2000, XLP_REVISION_ANY,  0)
+#define is_nlm_xlp2xx_b0()    	is_nlm_xlp(0x2000, XLP_REVISION_B0,  0)
+#define is_nlm_xlp9xx()	    	is_nlm_xlp(0x9000, XLP_REVISION_ANY,  0)
 #define is_nlm_xlp9xx_ax()	is_nlm_xlp(0x9000, XLP_REVISION_AX,  0)
+#define is_nlm_xlp9xx_b0()   	is_nlm_xlp(0x9000, XLP_REVISION_B0, 0)
 
 #define is_nlm_xlp5xx_B(rev)      ( is_nlm_xlp(0x5000, rev, CPU_EXTPID_XLP_5XX_BASE))
 #define is_nlm_xlp532_B(rev)      ( is_nlm_xlp(0x5084, rev, CPU_EXTPID_XLP_5XX_BASE))
-- 
1.7.1

