From bec7a4fa77ab83c81a588be66c84d025c6a761f4 Mon Sep 17 00:00:00 2001
From: Kancherla Tejaswi <ktejaswi@broadcom.com>
Date: Wed, 26 Nov 2014 16:32:57 +0530
Subject: syslib : added api to check if node is online

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
index a79e8da..a6964aa 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
@@ -51,7 +51,6 @@
 
 struct nlm_node_config
 {
-        int valid;
         int num_nodes;  // Number of nodes
         void *nae_cfg[NLM_MAX_NODES];      // NAE configuration
         struct fmn_cfg *fmn_cfg[NLM_MAX_NODES];
@@ -105,6 +104,7 @@ extern int naecfg_hack;
 extern int nlm_hal_is_xlp_a0(void);
 extern int nlm_hal_is_xlp_le(void);
 extern void nlm_hal_xlp_pcie_rc_init(void);
+extern int nlm_hal_is_node_online(int node);
 
 extern void nlm_hal_cpld_init(int node);
 /* #define SKIP_INTERFACE_TYPE_FROMCPLD 1 */
diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
index 1956298..32cf64c 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
@@ -67,6 +67,7 @@
 #include "libfdt.h"
 #include "fdt_helper.h"
 #include "xlp9xx_sys.h"
+#include "brcm_xlp_cpu.h"
 
 /* These addresses are computed by the nlm_hal_init() */
 unsigned long xlp_io_base;
@@ -158,32 +159,49 @@ __inline__ void nlm_hal_enumerate_pci(void)
  */
  int nlm_hal_get_num_nodes(void)
 {
+	uint32_t active_nodes=0;
+	int node = 0;
+	int max_nodes = 0;
+	if(IS_NLM_XLP9XX_FAMILY)
+		max_nodes = XLP9XX_MAX_NODES;
+	else
+		max_nodes = NLM_MAX_NODES;
+	for(node = 0 ; node < max_nodes ; node++)
+	{
+		if(nlm_hal_is_node_online(node))
+			active_nodes++;
+	}
+	return active_nodes;
+}
 
-        int max_nodes = 0;
-        int node = 0;
-        uint32_t active_nodes=1;
-        int ret;
-        max_nodes = NLM_MAX_NODES;
-
-        xlp_io_base = KSEG1 + 0x18000000;
-
-        for(node = 1; node < max_nodes; node++)
-        {
-
-                if(is_nlm_xlp9xx()) {
-                        ret = (nlm_hal_read_32bit_reg(nlm_hal_get_dev_base(0, 0, 0, node), 0x6 ) >> 8 ) & 0xff;
-                        if(ret == 0)
-                                break;
-                } else {
-                        ret = nlm_hal_read_32bit_reg(nlm_hal_get_dev_base(node, 0, XLP_SYS_DEVICE, XLP_SYS_FUNC), 0x0);
-                        if(ret == 0xffffffff)
-                                break;
-                }
-                active_nodes++;
-        }
-
-        return active_nodes;
-
+/**
+* @brief nlm_hal_is_node_online is used to know whether a node is online or not
+*
+* @param [in] the number of the node to be checked if online
+*
+* @return
+* - 0 if node is not online , 1 if node is online
+*
+* @ingroup hal
+*/
+int nlm_hal_is_node_online(int node)
+{
+	int ret, base;
+	if(IS_NLM_XLP9XX_FAMILY) {
+		/* the system function value is same as the node value */
+		base = nlm_hal_get_dev_base(0, 0, 0, node);
+		if(!((nlm_hal_read_32bit_reg(base, 0x6 ) >> 8 ) & 0xff))
+			return 0;
+		else
+			return 1;
+	} else {
+		base = nlm_hal_get_dev_base(node, 0, XLP_SYS_DEVICE, XLP_SYS_FUNC);
+		ret = nlm_hal_read_32bit_reg(base, 0x0);
+		if(ret == 0xffffffff)
+			return 0;
+		else
+			return 1;
+	}
 }
 
 #ifndef NLM_HAL_XLOADER
@@ -614,28 +632,28 @@ __inline__ void nlm_hal_init(void)
 {
 	unsigned long long mask = ~0xf;
 	int node = 0;
+	int max_nodes = 0;
 #if !defined(NLM_HAL_LINUX_USER)
 	unsigned int flags = 0;
 	enable_KX(flags);
 #endif
 	nlm_hal_enumerate_pci();
-
-	nlm_node_cfg.valid = 1;
-	nlm_node_cfg.num_nodes = 1; 
-
+	if(IS_NLM_XLP9XX_FAMILY)
+		max_nodes = XLP9XX_MAX_NODES;
+	else
+		max_nodes = NLM_MAX_NODES;
+	xlp_io_base = KSEG1 + 0x18000000;
 	nlm_node_cfg.num_nodes = nlm_hal_get_num_nodes();
 	nlm_print("Active Nodes: %d\n",nlm_node_cfg.num_nodes);
 
- 	for(node = 0; node < NLM_MAX_NODES; node++)
+	for(node = 0; node < max_nodes; node++)
 	{
 		nlm_node_cfg.nae_cfg[node] = NULL;
 		nlm_node_cfg.fmn_cfg[node] = NULL;
 		
-		if(node >= nlm_node_cfg.num_nodes)
+		if(!nlm_hal_is_node_online(node))
 			continue;
 
-		xlp_io_base = KSEG1 + 0x18000000;
-
         	/* PCI enumeration of supported devices*/
 
 		if (IS_NLM_XLP9XX_FAMILY) {
-- 
1.7.1

