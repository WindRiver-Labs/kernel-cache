From a81dcead22f14bc4125d5c7fb56b69d9d34d3f39 Mon Sep 17 00:00:00 2001
From: Siva Pochiraju <sivap@netlogicmicro.com>
Date: Mon, 1 Nov 2010 14:13:37 -0700
Subject: Commented out print_fdt_prop temporarily

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/libfdt/contrib/fdt_helper.c b/libfdt/contrib/fdt_helper.c
index 6589a84..0f24d59 100644
--- a/libfdt/contrib/fdt_helper.c
+++ b/libfdt/contrib/fdt_helper.c
@@ -36,7 +36,7 @@
 #include "libfdt.h"
 #include "fdt_helper.h"
 
-static int fdt_helper_print = 1;
+static int fdt_helper_print  = 1;
 
 #if !defined(__KERNEL__)
 #define fdtprint(x...) do {   \
@@ -57,7 +57,7 @@ int set_fdt_helper_print(int val)
 	return old_val;
 }
 
-#if !defined(__KERNEL__)
+#if !defined(__KERNEL__) && !defined(NLM_HAL_NETOS)
 void *open_fdt(int fd)
 {
 	struct stat st;
@@ -81,6 +81,7 @@ void *open_fdt(int fd) { return NULL; }
 static void print_fdt_prop(const char *path, const char *prop,
 	enum prop_type type, const void *buf, int len)
 {
+#if 0
 	fdtprint("FDT: parsed %s.%s: ", path, prop);
 	if (type == PROP_CELL) {
 		const uint32_t *dst = (const uint32_t *)buf;
@@ -96,6 +97,7 @@ static void print_fdt_prop(const char *path, const char *prop,
 		fdtprint("len=%d val=%s", len, (const char *)buf);
 	}
 	fdtprint("\n");
+#endif
 }
 
 int copy_fdt_prop(void *fdt, const char *path, const char *prop,
@@ -106,6 +108,11 @@ int copy_fdt_prop(void *fdt, const char *path, const char *prop,
 	int plen;
 	int copylen;
 
+	if (len <= 0)  {
+		fdtprint("Warning: Len is 0 while copying %s/%s\n", path, prop);
+		return -1;
+	}
+
 	nodeoffset = fdt_path_offset(fdt, path);
 	if (nodeoffset < 0) {
 		fdtprint("%s: Failed to parse path %s\n",
@@ -121,8 +128,8 @@ int copy_fdt_prop(void *fdt, const char *path, const char *prop,
 	}
 
 	if (plen > len) {
-		fdtprint("WARNING: buf of %d is insufficient to store %d",
-		         len, plen);
+		fdtprint("WARNING: buf of %d is insufficient to store %d (%s/%s)\n",
+		         len, plen, path, prop);
 		copylen = len;
 	}
 	else {
@@ -141,7 +148,7 @@ int copy_fdt_prop(void *fdt, const char *path, const char *prop,
 		memcpy(buf, pval, copylen);
 	}
 
-	print_fdt_prop(path, prop, type, buf, copylen);
+ 	print_fdt_prop(path, prop, type, buf, copylen); 
 
 	return copylen;
 }
-- 
1.7.1

