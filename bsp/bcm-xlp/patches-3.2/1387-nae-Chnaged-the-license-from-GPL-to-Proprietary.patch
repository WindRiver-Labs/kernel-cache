From 6f7a2f7ba70bf4401eff6fa9bbd574881869d930 Mon Sep 17 00:00:00 2001
From: Vikas Gupta <vikas.gupta@broadcom.com>
Date: Mon, 24 Dec 2012 02:34:24 -0800
Subject: nae: Chnaged the license from GPL to Proprietary.

Also removed PTP support
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge.h b/drivers/net/ethernet/broadcom/nae/xlpge.h
index fb5c6b7..d5c27ee 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge.h
+++ b/drivers/net/ethernet/broadcom/nae/xlpge.h
@@ -63,9 +63,7 @@
 #define	RX_PPAD_SZ			3
 #endif
 /* TODO XXX: default enable prepad */
-#ifdef	IEEE_1588_PTP_ENABLED
-#define	PREPAD_LEN			64
-#elif defined(CONFIG_NLM_ENABLE_LOAD_BALANCING)
+#ifdef CONFIG_NLM_ENABLE_LOAD_BALANCING
 #define	PREPAD_LEN			16
 #define	NLM_LOAD_BALANCING_MAGIC	0xdeadbeefU
 #else
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_main.c b/drivers/net/ethernet/broadcom/nae/xlpge_main.c
index 39022c9..4808854 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_main.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_main.c
@@ -84,5 +84,5 @@ module_exit(brcmxlp_nae_exit);
 
 MODULE_AUTHOR("Broadcom");
 MODULE_DESCRIPTION("Broadcom XLP SoC Network Driver");
-MODULE_LICENSE("GPL v2");
+MODULE_LICENSE("Proprietary");
 MODULE_VERSION(DRV_VERSION);
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index da03f07..dbab08e 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -426,9 +426,6 @@ static int initialize_nae_per_node(int node, uint32_t *phys_cpu_map, int mode,
 		nlm_hal_restart_ucore(node, fdt);
 	}
 
-#ifdef IEEE_1588_PTP_ENABLED
-	nlm_hal_prepad_enable(node, 3);
-#endif
 
 	/* initialize my vfbid table */
 	if (!(nae_cfg->flags & VFBID_FROM_FDT))
@@ -1319,36 +1316,6 @@ static int nlm_per_port_nae_init(int node, int port,
 	for (cpu = 0; cpu < NR_CPUS; cpu++)
 		per_cpu_netdev[node][cpu][port] = dev;
 
-	printk("configuring PTP realted params\n");
-
-	if(node==0)
-		 priv->cycles.read = nlm_1588_read_clock0;
-	if(node==1)
-		 priv->cycles.read = nlm_1588_read_clock1;
-	if(node==2)
-		 priv->cycles.read = nlm_1588_read_clock2;
-	if(node==3)
-		 priv->cycles.read = nlm_1588_read_clock3;
-
-	priv->cycles.mask = CLOCKSOURCE_MASK(64);
-
-	if (is_nlm_xlp3xx() || is_nlm_xlp2xx())
-		priv->cycles.mult = 1000 / XLP3XX_MAX_NAE_FREQUENCY; /* Mhz */
-	else
-		priv->cycles.mult = 0x2; /*500 Mhz*/
-
-	priv->cycles.shift = 0;
-
-	timecounter_init(&priv->clock, &priv->cycles,
-		ktime_to_ns(ktime_get_real()));
-
-	memset(&priv->compare, 0, sizeof(priv->compare));
-	priv->compare.source = &priv->clock;
-	priv->compare.target = ktime_get_real;
-	/* no cyclecounter registered: cannot afford more samples */
-	priv->compare.num_samples = 0;
-	timecompare_update(&priv->compare,0);
-
 	return 0;
 }
 
@@ -1402,10 +1369,6 @@ void nlm_xlp_nae_init(void)
 		for(i = 0; i < nae_cfg->num_ports; i++)
 			nlm_per_port_nae_init(node, i, nae_cfg, maxnae);
 
-		nlm_hal_1588_ptp_clk_sel(node, NET_SYS_CLK);
-		nlm_hal_reset_1588_accum(node);
-		nlm_hal_1588_ld_user_val(node, 0, 0);
-		nlm_hal_1588_ld_freq_mul(node, 0x1, 0x0, 0x1);
 	}
 
 	entry = create_proc_read_entry("mac_stats",
@@ -1437,8 +1400,6 @@ void nlm_xlp_nae_init(void)
 #ifdef CONFIG_NLM_ENABLE_LOAD_BALANCING
 	if (perf_mode == NLM_TCP_MODE)
 		nlm_prepad_len = PREPAD_LEN;
-#elif defined(IEEE_1588_PTP_ENABLED)
-	nlm_prepad_len = PREPAD_LEN;
 #endif
 
 #ifdef CONFIG_NLM_ENABLE_LOAD_BALANCING
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
index 2523438..346ad37 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
@@ -84,12 +84,6 @@ inline void process_tx_complete(int cpu, uint32_t src_id, uint64_t msg0)
 
         if(skb)
         {
-#ifdef IEEE_1588_PTP_ENABLED
-                if(skb->sk &&
-                        sock_flag(skb->sk, SOCK_TIMESTAMPING_TX_HARDWARE))
-                        nlm_1588_ptp_hwtstamp_tx(skb);
-#endif
-
                 dev_kfree_skb_any(skb);
         }
         else {
@@ -576,11 +570,6 @@ static inline void process_rx_packets(int cpu, unsigned int src_id,
 	struct dev_data *priv = NULL;
 	uint64_t vaddr;
 	struct sk_buff* skb;
-#ifdef IEEE_1588_PTP_ENABLED
-	char *prepad = NULL;
-	uint64_t ns;
-	struct skb_shared_hwtstamps *shhwtstamps;
-#endif
 	nlm_nae_config_ptr nae_cfg;
 	uint32_t msec_port;
 
@@ -642,18 +631,7 @@ static inline void process_rx_packets(int cpu, unsigned int src_id,
 	}
 #endif
 
-#ifdef IEEE_1588_PTP_ENABLED
-	prepad = (char *)skb->data + 56; /*ieee-1588 timestamp in prepad*/
-	shhwtstamps = skb_hwtstamps(skb);
-	ns = timecounter_cyc2time(&priv->clock,
-		be64_to_cpu (*(unsigned long*)prepad));
-	acc_1588[node] = (be64_to_cpu (*(unsigned long*)prepad));
-	timecompare_update(&priv->compare, ns);
-	memset(shhwtstamps, 0, sizeof(*shhwtstamps));
-	shhwtstamps->hwtstamp = ns_to_ktime(ns);
-	shhwtstamps->syststamp = timecompare_transform(&priv->compare, ns);
-	skb_reserve(skb, nlm_prepad_len);
-#elif defined(CONFIG_NLM_ENABLE_LOAD_BALANCING)
+#ifdef CONFIG_NLM_ENABLE_LOAD_BALANCING
 	if (!priv->mgmt_port)
 		nlm_update_flow_stats((unsigned int *)vaddr, len, context);
 	skb_reserve(skb, nlm_prepad_len);
@@ -777,10 +755,6 @@ void xlp_poll_upper(int cpu)
 			if(status) break;
 			__sync();
 
-			/* check ieee-1588 timestamp */
-			if(msg0 & (0x200000000000000ULL))
-				return;				
-
 			Message("poll upper cpu %d src_id %d size %d\n",
 				cpu, src_id, size);
 			process_tx_complete(cpu, src_id, msg0);
@@ -818,9 +792,7 @@ static int xlp_poll_lower(int budget, int cpu)
 			continue;
 		}
 #endif
-		if (msg0 & (0x200000000000000ULL))
-			continue;
-		else if (size == 2)
+		if (size == 2)
 			process_rx_packets(cpu, src_id, msg0, msg1);
 		else if (size == 1)
 			process_tx_complete(cpu, src_id, msg0);
@@ -856,9 +828,6 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 		 process_rx_packets(cpu, src_id, msg0, msg1);
 	else if (vc == nae_fb_vc && size == 1)
 		process_tx_complete(cpu, src_id, msg0);
-	else if (msg0 & (0x200000000000000ULL)){
-		return;
-	}
 	else {
 		printk("%s , Error invalid message, vc %d size %d\n",
 			__func__, vc, size);
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_tso.c b/drivers/net/ethernet/broadcom/nae/xlpge_tso.c
index 93cf493..53ef6b5 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_tso.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_tso.c
@@ -93,12 +93,6 @@ inline int tso_xmit_skb(struct sk_buff *skb, struct net_device *dev)
 	int  ret, retry_cnt = 0, qid;
 	nlm_nae_config_ptr nae_cfg = nlm_node_cfg.nae_cfg[priv->node];
 	unsigned long __attribute__ ((unused)) mflags;
-#ifdef IEEE_1588_PTP_ENABLED
-	uint64_t msg1;
-	union skb_shared_tx *shtx;
-	int is_skbts = skb->sk && sock_flag(skb->sk,
-		SOCK_TIMESTAMPING_TX_HARDWARE);
-#endif
 	uint32_t msec_port, send_msec = 0, msec_bypass = 0;
 	uint32_t pad_len = 0, icv_len = 0, param_index = 0;
 
@@ -226,12 +220,10 @@ inline int tso_xmit_skb(struct sk_buff *skb, struct net_device *dev)
 				param_index = %d\n", len, pad_len, icv_len,
 				param_index);
 #endif
-		} else
-#ifdef IEEE_1588_PTP_ENABLED	
-		if(!is_skbts)
-#endif
-		idx = create_p2p_desc(virt_to_bus((char *)skb->data), len,
+		} else{
+			idx = create_p2p_desc(virt_to_bus((char *)skb->data), len,
 			p2pdesc, idx);
+		 }
 	}
 
 	for (i = 0; i < sp->nr_frags; i++)  {
@@ -250,16 +242,6 @@ inline int tso_xmit_skb(struct sk_buff *skb, struct net_device *dev)
 
 
 	qid = nae_cfg->vfbtbl_sw_offset + (cpu % NLM_NCPUS_PER_NODE);
-#ifdef IEEE_1588_PTP_ENABLED
-	if (is_skbts) {
-                p2pdesc[P2P_SKB_OFF] = (uint64_t)skb;
-                msg = nae_tx_desc (P2D_NEOP, 0, qid, 0, virt_to_bus(p2pdesc));
-                msg1 = nae_tx_desc (P2D_EOP, 0, 126, len,
-				virt_to_bus((char *)skb->data));
-		shtx = skb_tx(skb);
-		shtx->in_progress = 1;
-	}else
-#endif
 	{
 		create_last_p2p_desc(p2pdesc, skb, idx);
 		msg = nae_tx_desc(P2P, 0, qid, idx, virt_to_bus(p2pdesc));
@@ -275,11 +257,6 @@ retry_send:
 				mscmsg1, msg);
 	else if(skb->ip_summed == CHECKSUM_PARTIAL)
 		ret = nlm_hal_send_msg2(priv->nae_tx_qid, 0, mscmsg0, msg);
-#ifdef IEEE_1588_PTP_ENABLED	
-	else if(is_skbts){
-		ret = nlm_hal_send_msg2(priv->nae_tx_qid, 0, msg, msg1);	
-	} 
-#endif
 	else if (send_msec || msec_bypass)
 		ret = nlm_hal_send_msg2(priv->nae_tx_qid, 0, mscmsg0, msg);
 	else
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
index 326f038..8a49647 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
@@ -59,9 +59,6 @@ int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 	volatile int hw_repl = 0;
 	int  offset, qid;
 	unsigned long __attribute__ ((unused)) mflags;
-#ifdef IEEE_1588_PTP_ENABLED	
-	union skb_shared_tx *shtx;
-#endif
 
 	nlm_nae_config_ptr nae_cfg = nlm_node_cfg.nae_cfg[priv->node];
 
@@ -110,16 +107,6 @@ int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 			cpu, skb->len, qid);
 	}
 	
-#ifdef IEEE_1588_PTP_ENABLED
-	if(skb->sk && sock_flag(skb->sk, SOCK_TIMESTAMPING_TX_HARDWARE)) {
-		msg1 = nae_tx_desc (P2D_EOP, 0, 126, skb->len,
-				virt_to_bus((char *)skb->data));
-		shtx = skb_tx(skb);
-		shtx->in_progress = 1;
-		
-	}
-	else
-#endif
 	{
 		msg1 = nae_tx_desc(P2D_EOP, 0, NULL_VFBID, skb->len,
 			       virt_to_bus(skb->data));
-- 
1.7.1

