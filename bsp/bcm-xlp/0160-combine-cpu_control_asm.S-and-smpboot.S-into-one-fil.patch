From 602c3007a997a879d74cfde622cf643d11e03162 Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Tue, 31 Aug 2010 03:35:06 -0700
Subject: [PATCH 160/762] combine cpu_control_asm.S and smpboot.S into one file cpu_control_asm.S

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/Makefile          |    4 +-
 arch/mips/netlogic/xlp/cpu_control_asm.S |   45 +++++++++++++++++++++++++++--
 2 files changed, 43 insertions(+), 6 deletions(-)

diff --git a/arch/mips/netlogic/xlp/Makefile b/arch/mips/netlogic/xlp/Makefile
index 61172ef..7e668b1 100644
--- a/arch/mips/netlogic/xlp/Makefile
+++ b/arch/mips/netlogic/xlp/Makefile
@@ -4,8 +4,8 @@ EXTRA_CFLAGS := $(CFLAGS) -DNLM_HAL_LINUX_KERNEL -Iarch/mips/include/asm/netlogi
 obj-y                    = setup.o 
 obj-y 			+= irq.o time.o on_chip.o mmu.o
 obj-$(CONFIG_NLM_XLP) 	+= platform-xlp.o
-obj-$(CONFIG_SMP)       += smp.o smpboot.o
+obj-$(CONFIG_SMP)       += smp.o 
 
 obj-$(CONFIG_KGDB)      += nmi.o
 obj-$(CONFIG_NLM_XLP) += cpu_control.o cpu_control_asm.o
-obj-y += bootinfo.o
+#obj-y += bootinfo.o
diff --git a/arch/mips/netlogic/xlp/cpu_control_asm.S b/arch/mips/netlogic/xlp/cpu_control_asm.S
index 0af94b3..ce78112 100644
--- a/arch/mips/netlogic/xlp/cpu_control_asm.S
+++ b/arch/mips/netlogic/xlp/cpu_control_asm.S
@@ -47,7 +47,7 @@
 #else
 	prog_c0_status 0 ST0_BEV
 #endif
-	mfc0 		t0, CP0_PRID, 1
+	mfc0 		t0, CP0_EBASE, 1
 	andi 		t0, 0x7f
 	PTR_LA		t1, xlp_stack_pages_temp
 	li   		t2, _THREAD_SIZE
@@ -79,8 +79,8 @@
 	 * (@0xbfc00000)
 	 */
 EXPORT(reset_entry)
-	mfc0    t0, CP0_PRID, 1
-	mfc0	t1, CP0_PRID, 1
+	mfc0    t0, CP0_EBASE, 1
+	mfc0	t1, CP0_EBASE, 1
 	andi	t1, 0x60
 	srl	t1,  5
 	li	t2, 0x40000  #load 0x40000
@@ -146,7 +146,7 @@ EXPORT(__boot_siblings)
 	/* threads (incl. T0) of this core 
 	 * start fetching from this point
 	 */
-	mfc0    t0, CP0_PRID, 1		/* EBASE, Select 1 	*/
+	mfc0    t0, CP0_EBASE, 1		/* EBASE, Select 1 	*/
 	andi    t0, 0x7f		/* Linear CPU ID	*/
 	beqz    t0, 2f
 	nop
@@ -159,3 +159,40 @@ EXPORT(__boot_siblings)
 	jr   ra
 	nop
 EXPORT(boot_siblings_end)
+
+NESTED(ptr_smp_boot, 16, sp)
+
+        move    sp, a1
+        move    gp, a2
+        jal     a0
+        nop
+
+END(ptr_smp_boot)
+
+/* Don't jump to linux function from Bootloader stack. Change it
+ * here. Kernel might allocate bootloader memory before all the CPUs are
+ * brought up (eg: Inode cache region) and we better don't overwrite this
+ * memory
+ */
+NESTED(prom_pre_boot_secondary_cpus, 16, sp)
+        SET_MIPS64
+        MAPPED_KERNEL_SETUP_TLB
+        mfc0 t0, CP0_EBASE, 1 #read ebase
+        andi t0, 0x7f #t0 has the processor_id()
+        PTR_LA  t1, xlp_stack_pages_temp
+        li   t2, _THREAD_SIZE
+        srl  t2, 2
+        mul  t3, t2, t0
+        nop
+        nop
+        nop
+        nop
+        nop
+        nop
+        PTR_ADDU  gp, t1, t3
+        PTR_ADDU       sp, gp, t2
+        PTR_ADDI       sp, sp, -32
+        PTR_LA t0, prom_boot_cpus_secondary
+        jr t0
+        nop
+END(prom_pre_boot_secondary_cpus)
-- 
1.7.0.4

