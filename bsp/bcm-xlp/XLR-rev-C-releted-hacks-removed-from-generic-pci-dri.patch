From 165f7c35540715e954b882c09d839df77dd7b936 Mon Sep 17 00:00:00 2001
From: Krishnamurthy D V <kmurthy@netlogicmicro.com>
Date: Mon, 19 Jul 2010 13:43:30 +0530
Subject: [PATCH 119/761] XLR rev C releted hacks removed from generic pci
 driver. Moved to mips/netl processor specific code.

Based on Broadcom SDK 2.3.

Signed-off-by: Krishnamurthy D V <kmurthy@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/mach-generic/pci-dma.h  |    5 ++++
 arch/mips/include/asm/mach-netlogic/pci-dma.h |    6 ++++
 arch/mips/include/asm/pci.h                   |    2 ++
 arch/mips/pci/pci-xlr.c                       |   38 +++++++++++++++++++++++++
 4 files changed, 51 insertions(+)
 create mode 100644 arch/mips/include/asm/mach-generic/pci-dma.h
 create mode 100644 arch/mips/include/asm/mach-netlogic/pci-dma.h

diff --git a/arch/mips/include/asm/mach-generic/pci-dma.h b/arch/mips/include/asm/mach-generic/pci-dma.h
new file mode 100644
index 0000000..b60098f
--- /dev/null
+++ b/arch/mips/include/asm/mach-generic/pci-dma.h
@@ -0,0 +1,5 @@
+#ifndef __ASM_MACH_GENERIC_PCI_DMA_H
+#define __ASM_MACH_GENERIC_PCI_DMA_H
+
+
+#endif  /* __ASM_MACH_GENERIC_PCI_DMA_H */
diff --git a/arch/mips/include/asm/mach-netlogic/pci-dma.h b/arch/mips/include/asm/mach-netlogic/pci-dma.h
new file mode 100644
index 0000000..c669ada
--- /dev/null
+++ b/arch/mips/include/asm/mach-netlogic/pci-dma.h
@@ -0,0 +1,6 @@
+#ifndef __ASM_MACH_NLM_PCI_DMA_H
+#define __ASM_MACH_NLM_PCI_DMA_H
+
+#define HAVE_ARCH_PCI_SET_DMA_MASK 1
+
+#endif  /* __ASM_MACH_NLM_PCI_DMA_H */
diff --git a/arch/mips/include/asm/pci.h b/arch/mips/include/asm/pci.h
index fcd4060..9b27624 100644
--- a/arch/mips/include/asm/pci.h
+++ b/arch/mips/include/asm/pci.h
@@ -125,6 +125,8 @@ static inline int pci_proc_domain(struct pci_bus *bus)
 
 /* implement the pci_ DMA API in terms of the generic device dma_ one */
 #include <asm-generic/pci-dma-compat.h>
+/* Give hook for any pci_ DMA API overrides. */
+#include <pci-dma.h>
 
 /* Do platform specific device initialization at pci_enable_device() time */
 extern int pcibios_plat_dev_init(struct pci_dev *dev);
diff --git a/arch/mips/pci/pci-xlr.c b/arch/mips/pci/pci-xlr.c
index 4dd75ac..542c5c6 100644
--- a/arch/mips/pci/pci-xlr.c
+++ b/arch/mips/pci/pci-xlr.c
@@ -748,6 +748,44 @@ void pci_iounmap(struct pci_dev *dev, void __iomem *addr)
 }
 #endif
 
+int
+pci_set_dma_mask(struct pci_dev *dev, u64 mask)
+{
+	if (!pci_dma_supported(dev, mask))
+		return -EIO;
+
+	if(mask > DMA_BIT_MASK(32))
+		return -EIO;
+
+	if(xlr_revision_c())
+		dev->dma_mask = mask & 0x7fffffffULL;
+	else
+		dev->dma_mask = mask;
+
+	dev_dbg(&dev->dev, "using %dbit DMA mask\n", fls64(mask));
+
+	return 0;
+}
+
+int
+pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
+{
+	if (!pci_dma_supported(dev, mask))
+		return -EIO;
+
+	if(mask > DMA_BIT_MASK(32))
+		return -EIO;
+
+	if(xlr_revision_c())
+		dev->dev.coherent_dma_mask = mask & 0x7fffffffULL;
+	else
+		dev->dev.coherent_dma_mask = mask;
+
+	dev_dbg(&dev->dev, "using %dbit consistent DMA mask\n", fls64(mask));
+
+	return 0;
+}
+
 arch_initcall(pcibios_init);
 
 struct pci_fixup pcibios_fixups[] = {
-- 
1.7.10.4

