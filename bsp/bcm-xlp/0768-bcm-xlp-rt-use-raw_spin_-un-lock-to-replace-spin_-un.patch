From fc62bf89dfb32cb55221ee46fb0c8afcb1ec136c Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Tue, 9 Jul 2013 15:35:52 +0800
Subject: [PATCH 1/2] bcm-xlp-rt: use raw_spin_(un)lock to replace spin_(un)lock

Use raw_spin_(un)lock to replace spin_(un)lock, else we would get
the below errors:

<3>BUG: sleeping function called from invalid context at ./kernel/rtmutex.c:658
<3>in_atomic(): 1, irqs_disabled(): 1, pid: 1009, name: irq/143-serial
Call Trace:
[<ffffffffc17c19f8>] dump_stack+0x1c/0x50
[<ffffffffc1135a70>] __might_sleep+0x140/0x148
[<ffffffffc17ce440>] rt_spin_lock+0x38/0x100
[<ffffffffc10d9648>] nlm_kgdb_smp_hook+0xa8/0x140
[<ffffffffc10d975c>] kgdb_roundup_cpus+0x24/0x38
[<ffffffffc117bd64>] kgdb_cpu_enter+0x6bc/0x910
[<ffffffffc117c274>] kgdb_handle_exception+0xa4/0x1f8
[<ffffffffc10d9130>] kgdb_mips_notify+0xf0/0x218
[<ffffffffc17d05c4>] notifier_call_chain+0x6c/0xc8
[<ffffffffc17d0670>] __atomic_notifier_call_chain+0x50/0x70
[<ffffffffc17d06b8>] atomic_notifier_call_chain+0x28/0x40
[<ffffffffc17d070c>] notify_die+0x3c/0x50
[<ffffffffc10c7ea4>] do_trap_or_bp+0x54/0x1c0
[<ffffffffc10c88a8>] do_bp+0x80/0x138
[<ffffffffc10c0284>] ret_from_exception+0x0/0x10
[<ffffffffc10d9584>] breakinst+0x0/0x1c
[<ffffffffc117ac88>] kgdb_breakpoint+0x48/0x78

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/kernel/kgdb.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/arch/mips/kernel/kgdb.c b/arch/mips/kernel/kgdb.c
index edbc42c..48740d9 100644
--- a/arch/mips/kernel/kgdb.c
+++ b/arch/mips/kernel/kgdb.c
@@ -236,7 +236,7 @@ static void kgdb_call_nmi_hook(void *ignored)
 
 #ifdef CONFIG_NLM_XLP
 #include <asm/netlogic/interrupt.h>
-DEFINE_SPINLOCK(nlm_kgdb_lock);
+DEFINE_RAW_SPINLOCK(nlm_kgdb_lock);
 
 void nlm_kgdb_smp_hook(void)
 {
@@ -251,11 +251,11 @@ void nlm_kgdb_smp_hook(void)
 	if (!cpus)
 		return;
 
-	spin_lock_irqsave(&nlm_kgdb_lock, flags);
+	raw_spin_lock_irqsave(&nlm_kgdb_lock, flags);
 	for (i = 0; i < NR_CPUS; i++)
 		if (cpu_online(i) && i != cpu)
 			mp_ops->send_ipi_single(i, SMP_CALL_KGDB_HOOK);
-	spin_unlock_irqrestore(&nlm_kgdb_lock, flags);
+	raw_spin_unlock_irqrestore(&nlm_kgdb_lock, flags);
 }
 
 void nlm_kgdb_call_nmi_hook(unsigned int irq, struct pt_regs *regs)
-- 
1.7.0.4

