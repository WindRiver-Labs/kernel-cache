From 8f595f1282ccf3bec706f95bc684110e4f15514b Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Tue, 29 Jun 2010 16:02:33 -0700
Subject: [PATCH 070/761] clean up msgring_xlp.c, make it can compile outside
 linux tree

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/common/msgring_xlp.c |   57 +++++++++++++++----------------
 1 file changed, 27 insertions(+), 30 deletions(-)

diff --git a/arch/mips/netlogic/common/msgring_xlp.c b/arch/mips/netlogic/common/msgring_xlp.c
index e0e71f2..2cc8651 100644
--- a/arch/mips/netlogic/common/msgring_xlp.c
+++ b/arch/mips/netlogic/common/msgring_xlp.c
@@ -27,17 +27,17 @@
   THE POSSIBILITY OF SUCH DAMAGE.
 
   *****************************#NLM_2#**********************************/
-
+#ifdef NLM_HAL_LINUX_KERNEL
 #include <linux/types.h>
 #include <linux/kernel.h>
-#include <asm/netlogic/interrupt.h>
 #include <asm/netlogic/hal/nlm_hal_fmn.h>
-#include <asm/netlogic/msgring.h>
+#else
+#include "nlm_hal_fmn.h"
+#endif
 
+#define INT_EN 		0x0800000000000000ULL
 #define OUTQ_EN		0x8000000000000000ULL
 #define SPILL_EN 	0x4000000000000000ULL
-#define INT_EN 		0x0800000000000000ULL
-
 #define OQ_BASE_START(x) ( ( x>> 5) & 0x1fULL)
 #define OQ_BASE_END(x)   ( ( (x >>5)  & 0x1fULL) << 5)
 #define OQ_BASE_1K(x)    ( ( (x >> 10) & 0x1fULL) << 10)
@@ -54,8 +54,17 @@ enum cpu_io_credit {
 	CPU_PCIE0_CREDIT 	= 2 
 };
 
+static void config_cpu_io_pushq_credit(uint8_t cpu);
+static void config_io_io_outq_credit(void);
+static void config_io_cpu_pushq_credit(uint8_t cpu, uint8_t thread, uint8_t vc);
+static void setup_outq(void);
+static void set_msgring_interrupt(void);
+void nlm_hal_fmn_init( uint32_t cpu_mask);
 
 /*********************************************************************
+ *  config_cpu_io_pushq_credit
+ *
+ *  @cpu		cpu number
  ********************************************************************/
 static void config_cpu_io_pushq_credit(uint8_t cpu)
 {	
@@ -63,7 +72,6 @@ static void config_cpu_io_pushq_credit(uint8_t cpu)
 	uint8_t s_qid = cpu;
 
 
-//	nlm_hal_write_outq_config(qid, val);
 	
 	//cpu to nae tx interface q
 	for( i = 0; i < 18; i++)
@@ -139,6 +147,8 @@ static void config_cpu_io_pushq_credit(uint8_t cpu)
 }
 
 /*********************************************************************
+ *  config_io_io_outq_credit
+ *
  ********************************************************************/
 static void config_io_io_outq_credit()
 {
@@ -158,16 +168,15 @@ static void config_io_io_outq_credit()
 }
 
 /*********************************************************************
+ *  config_io_cpu_pushq_credit
+ *  @cpu	cpu number
+ *  @thread  	0-3 thread inside cpu
+ *  @vc		0-3 vc per thread
  ********************************************************************/
 static void config_io_cpu_pushq_credit(uint8_t cpu, uint8_t thread, uint8_t vc)
 {
 	uint8_t d_qid = cpu << 4 | thread << 2 | vc;
 
-	if(d_qid >=256)
-	{
-		printk("Err d_qid: cpu %d thread %d vc %d",cpu, thread, vc);
-		return;
-	}
 /*
 	//PCIE0 station to vCPU		
 	nlm_hal_write_credit( XLP_STNID_PCIE0, d_qid, CPU_PCIE0_CREDIT);
@@ -191,13 +200,13 @@ static void config_io_cpu_pushq_credit(uint8_t cpu, uint8_t thread, uint8_t vc)
 	//NAE station to vCPU		
 	nlm_hal_write_credit( XLP_STNID_NAE_TX, d_qid, 18 * CPU_GMAC_TX_CREDIT);
 }
-
+#ifdef NLM_HAL_LINUX_KERNEL
 /*********************************************************************
  * dump_outq
  *
  * dump the outq config register value for debug purpose
  ********************************************************************/
-void dump_outq()
+static void dump_outq(void)
 {
 	int i;
         uint64_t val = 0;
@@ -278,6 +287,7 @@ void dump_outq()
 		printk("\t%d\t%llx\n", i, val);
 	}
 }
+#endif
 
 /*********************************************************************
  * setup_outq
@@ -296,18 +306,14 @@ static void setup_outq()
 	// 0 - 127 cpu push outputq , 8 cpu, each cpu has 4 threads, each thread has 4 vcs
 	q_base = 0;
 	val = OUTQ_EN|INT_EN|(0ULL<<56)|(0x2ULL<<54);
-//	val = OUTQ_EN|((uint64_t)HWM_NON_EMPTY<<56)|(((uint64_t)LVL_INT_HIGH_WM)<<54);
 	for( i = 0; i < 128; i++ )
 	{
 		val |= OQ_BASE_START(q_base) |  OQ_BASE_END((q_base)) |OQ_BASE_1K(q_base) ;
 		nlm_hal_write_outq_config(i, val);
 		q_base += 32;
-		if(i<4)
-		printk("\t%d\t%d\t%llx\n", i, q_base, val);
 	}
 	// 128-255 cpu pop queue 
 	val = OUTQ_EN;
-//	val = OUTQ_EN|INT_EN|((uint64_t)HWM_NON_EMPTY<<56)|(((uint64_t)LVL_INT_HIGH_WM)<<54);
 	for( i = 128; i < 256; i++ ) 
 	{
 		val |= OQ_BASE_START(q_base) |  OQ_BASE_END((q_base)) |OQ_BASE_1K(q_base) ;
@@ -421,14 +427,11 @@ static void set_msgring_interrupt()
 {
 	uint32_t val;
 	/* Need write interrupt vector to cp2 msgconfig register */
-//	val = read_64bit_cp0_eimr();
-//	val |= (1 << 6);
-//        write_64bit_cp0_eimr(val);
 	
-	val =  read_32bit_cp2_register($5);
+	val =  _read_32bit_cp2_register($5);
 	val &= ~(0x1f << 16);
-	val |= IRQ_MSGRING << 16;
-	write_32bit_cp2_register($5, val);
+	val |= 6 << 16;
+	_write_32bit_cp2_register($5, val);
 
 }
 
@@ -443,17 +446,11 @@ void nlm_hal_fmn_init( uint32_t cpu_mask)
 	int thrid, i, j, k;
 	//setup outq
 	
-//	set_msgring_interrupt();
+	set_msgring_interrupt();
 	
 	//verify out_q config
 	setup_outq();
-//	dump_outq();
 
-	//config cpu(0, 0, 0) to io credit
-	//config_cpu_io_pushq_credit(0, 0, 0);
-	//config_cpu_io_pushq_credit(0, 0, 1);
-	//config_io_io_pushq_credit();
-	//config_nae_cpu_pushq_credit(0, 0, 1);
 	// initial cpu to io q, 8 cpu, each has 4 thread, each thread has 4 vc
 	for( i = 0; i < 8; i++){
 		if( cpu_mask & (0xf <<(i*4)))
-- 
1.7.10.4

