From 543e280552a1748e493c965a0e3870235aa8fcab Mon Sep 17 00:00:00 2001
From: P. Sadik <psadik@broadcom.com>
Date: Fri, 11 Jan 2013 12:39:44 +0530
Subject: [PATCH 655/762] smscufx: increase timeout values.

      On XLP3xx, the Display comes out fine, but on XLP2xx, the driver
      came out with timeout error.

Based on Broadcom SDK 2.3.

Signed-off-by: P. Sadik <psadik@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/video/smscufx.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/video/smscufx.c b/drivers/video/smscufx.c
index 1e1e2d2..6ae56cf 100644
--- a/drivers/video/smscufx.c
+++ b/drivers/video/smscufx.c
@@ -63,7 +63,7 @@
 #define MAX_TRANSFER		(PAGE_SIZE*16 - BULK_SIZE)
 #define WRITES_IN_FLIGHT	(4)
 
-#define GET_URB_TIMEOUT		(HZ)
+#define GET_URB_TIMEOUT		(10*HZ)
 #define FREE_URB_TIMEOUT	(HZ*2)
 
 #define BPP			2
@@ -183,7 +183,7 @@ static int ufx_reg_write(struct ufx_data *dev, u32 index, u32 data)
 	ret = usb_control_msg(dev->udev, usb_sndctrlpipe(dev->udev, 0),
 		USB_VENDOR_REQUEST_WRITE_REGISTER,
 		USB_DIR_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE,
-		00, index, buf, 4, USB_CTRL_SET_TIMEOUT);
+		00, index, buf, 4, USB_CTRL_SET_TIMEOUT * HZ);
 
 	kfree(buf);
 
@@ -261,7 +261,7 @@ static int ufx_blank(struct ufx_data *dev, bool wait)
 	if (!wait)
 		return 0;
 
-	for (i = 0; i < 250; i++) {
+	for (i = 0; i < 25000; i++) {
 		status = ufx_reg_read(dev, 0x2004, &dc_sts);
 		check_warn_return(status, "ufx_blank error reading 0x2004");
 
@@ -298,7 +298,7 @@ static int ufx_unblank(struct ufx_data *dev, bool wait)
 	if (!wait)
 		return 0;
 
-	for (i = 0; i < 250; i++) {
+	for (i = 0; i < 25000; i++) {
 		status = ufx_reg_read(dev, 0x2004, &dc_sts);
 		check_warn_return(status, "ufx_unblank error reading 0x2004");
 
@@ -335,7 +335,7 @@ static int ufx_disable(struct ufx_data *dev, bool wait)
 	if (!wait)
 		return 0;
 
-	for (i = 0; i < 250; i++) {
+	for (i = 0; i < 25000; i++) {
 		status = ufx_reg_read(dev, 0x2004, &dc_sts);
 		check_warn_return(status, "ufx_disable error reading 0x2004");
 
@@ -372,7 +372,7 @@ static int ufx_enable(struct ufx_data *dev, bool wait)
 	if (!wait)
 		return 0;
 
-	for (i = 0; i < 250; i++) {
+	for (i = 0; i < 25000; i++) {
 		status = ufx_reg_read(dev, 0x2004, &dc_sts);
 		check_warn_return(status, "ufx_enable error reading 0x2004");
 
-- 
1.7.0.4

