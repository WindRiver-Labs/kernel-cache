From 124600b41ab931df8fc42bffeef87c988c6c1cf3 Mon Sep 17 00:00:00 2001
From: Mehul <vmehul@netlogicmicro.com>
Date: Fri, 2 Dec 2011 18:30:11 +0530
Subject: [PATCH 484/761] Added a new field 'netl_skb' in sk_buff structure.
 This will be used by nae-perf driver to decide to
 perform hardware replenishment or not.

Based on Broadcom SDK 2.3.

Signed-off-by: Mehul <vmehul@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 include/linux/skbuff.h |    3 +++
 net/core/skbuff.c      |    9 +++++++++
 2 files changed, 12 insertions(+)

diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 4587658..d683423 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -492,6 +492,9 @@ struct sk_buff {
 				*data;
 	unsigned int		truesize;
 	atomic_t		users;
+#ifdef CONFIG_NLM_NET_OPTS
+	struct sk_buff *netl_skb;
+#endif
 };
 
 #ifdef __KERNEL__
diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 1073768..fd816b9 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -213,6 +213,9 @@ struct sk_buff *__alloc_skb(unsigned int size, gfp_t gfp_mask,
 	skb->data = data;
 	skb_reset_tail_pointer(skb);
 	skb->end = skb->tail + size;
+#ifdef CONFIG_NLM_NET_OPTS
+	skb->netl_skb = NULL;
+#endif
 #ifdef NET_SKBUFF_DATA_USES_OFFSET
 	skb->mac_header = ~0U;
 #endif
@@ -233,6 +236,9 @@ struct sk_buff *__alloc_skb(unsigned int size, gfp_t gfp_mask,
 		atomic_set(fclone_ref, 1);
 
 		child->fclone = SKB_FCLONE_UNAVAILABLE;
+#ifdef CONFIG_NLM_NET_OPTS
+		child->netl_skb = NULL;
+#endif
 	}
 out:
 	return skb;
@@ -595,6 +601,9 @@ static void __copy_skb_header(struct sk_buff *new, const struct sk_buff *old)
 #ifdef CONFIG_XFRM
 	new->sp			= secpath_get(old->sp);
 #endif
+#ifdef CONFIG_NLM_NET_OPTS
+	new->netl_skb = NULL;
+#endif
 	memcpy(new->cb, old->cb, sizeof(old->cb));
 	new->csum		= old->csum;
 	new->local_df		= old->local_df;
-- 
1.7.10.4

