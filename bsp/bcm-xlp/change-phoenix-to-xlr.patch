From a18a5d4fa4dc4c40009071ddec3de262cfec27c6 Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Wed, 12 May 2010 17:17:46 -0700
Subject: [PATCH 015/761] change phoenix to xlr

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/mm/c-phoenix.c                      |    2 +-
 arch/mips/mm/cache.c                          |    4 ++--
 arch/mips/netlogic/msgcfg/msgring.cfg         |    4 ++--
 arch/mips/netlogic/msgcfg/msgring_ike.cfg     |    4 ++--
 arch/mips/netlogic/msgcfg/msgring_ike_xls.cfg |    2 +-
 arch/mips/netlogic/msgcfg/msgring_openssl.cfg |    4 ++--
 arch/mips/netlogic/msgcfg/msgring_shared.cfg  |    2 +-
 arch/mips/netlogic/msgcfg/msgring_xls.cfg     |    2 +-
 arch/mips/netlogic/xlp/smp.c                  |    4 +---
 arch/mips/oprofile/common.c                   |    4 ++--
 arch/mips/oprofile/op_model_mips_xlr.c        |    8 ++++----
 drivers/char/nlm_common_dummy_uart.c          |    8 ++++----
 drivers/char/nlm_common_loader.c              |    2 +-
 drivers/char/nlm_common_uart.c                |    8 ++++----
 drivers/char/nlm_xlr_msgring.c                |    2 +-
 drivers/i2c/chips/ds1374-rtc.c                |    4 ++--
 drivers/i2c/chips/max6657.c                   |    2 +-
 drivers/ide/phoenix_ide.c                     |    8 ++++----
 18 files changed, 36 insertions(+), 38 deletions(-)

diff --git a/arch/mips/mm/c-phoenix.c b/arch/mips/mm/c-phoenix.c
index b8ed9f8..f001bdd 100644
--- a/arch/mips/mm/c-phoenix.c
+++ b/arch/mips/mm/c-phoenix.c
@@ -371,7 +371,7 @@ static void update_kseg0_coherency(void)
 
 }
 
-void ld_mmu_phoenix(void)
+void ld_mmu_xlr(void)
 {
 	extern void build_clear_page(void);
 	extern void build_copy_page(void);
diff --git a/arch/mips/mm/cache.c b/arch/mips/mm/cache.c
index a3fc1e9..56d67ec 100644
--- a/arch/mips/mm/cache.c
+++ b/arch/mips/mm/cache.c
@@ -240,9 +240,9 @@ void __cpuinit cpu_cache_init(void)
 		tx39_cache_init();
 	}
 	if (cpu_has_nlm_cache) {
-		extern void __weak ld_mmu_phoenix(void);
+		extern void __weak ld_mmu_xlr(void);
 
-		ld_mmu_phoenix();
+		ld_mmu_xlr();
 	}
 
 	if (cpu_has_octeon_cache) {
diff --git a/arch/mips/netlogic/msgcfg/msgring.cfg b/arch/mips/netlogic/msgcfg/msgring.cfg
index 5cf6fa7b..179eba8 100644
--- a/arch/mips/netlogic/msgcfg/msgring.cfg
+++ b/arch/mips/netlogic/msgcfg/msgring.cfg
@@ -25,11 +25,11 @@ THE POSSIBILITY OF SUCH DAMAGE.
 
 
 /* 
- * This file defines the message ring configuration for phoenix-8. It tries to allow 
+ * This file defines the message ring configuration for xlr-8. It tries to allow 
  * many different point-point communications between the message stations on the message ring
  * and as result is _not_ the best configuration for performance
  *
- * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
+ * The message ring on xlr family of processors connects the cpus, gmacs, xgmac/spi4,
  * security engine and the general purpose DMA engines. It provides a high bandwidth,
  * low latency communication links. On traditional processors, this communication goes through
  * which inherently does not scale very well with increasing number of cpus. 
diff --git a/arch/mips/netlogic/msgcfg/msgring_ike.cfg b/arch/mips/netlogic/msgcfg/msgring_ike.cfg
index 4f4b3ef..ddcd683 100644
--- a/arch/mips/netlogic/msgcfg/msgring_ike.cfg
+++ b/arch/mips/netlogic/msgcfg/msgring_ike.cfg
@@ -25,11 +25,11 @@ THE POSSIBILITY OF SUCH DAMAGE.
 
 
 /* 
- * This file defines the message ring configuration for phoenix-8. It tries to allow 
+ * This file defines the message ring configuration for xlr-8. It tries to allow 
  * many different point-point communications between the message stations on the message ring
  * and as result is _not_ the best configuration for performance
  *
- * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
+ * The message ring on xlr family of processors connects the cpus, gmacs, xgmac/spi4,
  * security engine and the general purpose DMA engines. It provides a high bandwidth,
  * low latency communication links. On traditional processors, this communication goes through
  * which inherently does not scale very well with increasing number of cpus. 
diff --git a/arch/mips/netlogic/msgcfg/msgring_ike_xls.cfg b/arch/mips/netlogic/msgcfg/msgring_ike_xls.cfg
index e96fbdb..daf8794 100644
--- a/arch/mips/netlogic/msgcfg/msgring_ike_xls.cfg
+++ b/arch/mips/netlogic/msgcfg/msgring_ike_xls.cfg
@@ -29,7 +29,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
  * many different point-point communications between the message stations on the message ring
  * and as result is _not_ the best configuration for performance
  *
- * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
+ * The message ring on xlr family of processors connects the cpus, gmacs, xgmac/spi4,
  * security engine and the general purpose DMA engines. It provides a high bandwidth,
  * low latency communication links. On traditional processors, this communication goes through
  * which inherently does not scale very well with increasing number of cpus. 
diff --git a/arch/mips/netlogic/msgcfg/msgring_openssl.cfg b/arch/mips/netlogic/msgcfg/msgring_openssl.cfg
index 7b21645..4e79194 100644
--- a/arch/mips/netlogic/msgcfg/msgring_openssl.cfg
+++ b/arch/mips/netlogic/msgcfg/msgring_openssl.cfg
@@ -25,11 +25,11 @@ THE POSSIBILITY OF SUCH DAMAGE.
 
 
 /*
- * This file defines the message ring configuration for phoenix-8. It tries to allow
+ * This file defines the message ring configuration for xlr-8. It tries to allow
  * many different point-point communications between the message stations on the message ring
  * and as result is _not_ the best configuration for performance
  *
- * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
+ * The message ring on xlr family of processors connects the cpus, gmacs, xgmac/spi4,
  * security engine and the general purpose DMA engines. It provides a high bandwidth,
  * low latency communication links. On traditional processors, this communication goes through
  * which inherently does not scale very well with increasing number of cpus.
diff --git a/arch/mips/netlogic/msgcfg/msgring_shared.cfg b/arch/mips/netlogic/msgcfg/msgring_shared.cfg
index 631c898..9dc581f 100644
--- a/arch/mips/netlogic/msgcfg/msgring_shared.cfg
+++ b/arch/mips/netlogic/msgcfg/msgring_shared.cfg
@@ -24,7 +24,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
 *****************************#NETL_2#********************************/
 /*
  *
- * This file defines the message ring configuration for phoenix-8. It tries to allow
+ * This file defines the message ring configuration for xlr-8. It tries to allow
  * many different point-point communications between the message stations on the
  * message ring  and as result is _not_ the best configuration for performance
  *
diff --git a/arch/mips/netlogic/msgcfg/msgring_xls.cfg b/arch/mips/netlogic/msgcfg/msgring_xls.cfg
index 59f1692..371fcee 100644
--- a/arch/mips/netlogic/msgcfg/msgring_xls.cfg
+++ b/arch/mips/netlogic/msgcfg/msgring_xls.cfg
@@ -29,7 +29,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
  * many different point-point communications between the message stations on the message ring
  * and as result is _not_ the best configuration for performance
  *
- * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
+ * The message ring on xlr family of processors connects the cpus, gmacs, xgmac/spi4,
  * security engine and the general purpose DMA engines. It provides a high bandwidth,
  * low latency communication links. On traditional processors, this communication goes through
  * which inherently does not scale very well with increasing number of cpus. 
diff --git a/arch/mips/netlogic/xlp/smp.c b/arch/mips/netlogic/xlp/smp.c
index 516dbc2..75d6b86 100644
--- a/arch/mips/netlogic/xlp/smp.c
+++ b/arch/mips/netlogic/xlp/smp.c
@@ -48,8 +48,6 @@ THE POSSIBILITY OF SUCH DAMAGE.
 
 extern int xlr_loader_support;
 extern volatile cpumask_t cpu_callin_map;
-extern void __init phoenix_smp_init(void); 
-extern void phoenix_smp_finish(void);
 
 extern void smp_tune_scheduling (void);
 extern void ptr_smp_boot(unsigned long, unsigned long, unsigned long);
@@ -91,7 +89,7 @@ static void __cpuinit nlm_init_secondary(void)
 void nlm_smp_finish(void)
 {
 #if !defined(CONFIG_NLM_XLP)
-    phoenix_msgring_cpu_init();
+    nlm_common_msgring_cpu_init();
 #endif
 }
 
diff --git a/arch/mips/oprofile/common.c b/arch/mips/oprofile/common.c
index a8477db..4f131a4 100644
--- a/arch/mips/oprofile/common.c
+++ b/arch/mips/oprofile/common.c
@@ -26,7 +26,7 @@ the header of the original work apply to this derived work.
 extern struct op_mips_model op_model_mipsxx_ops __weak;
 extern struct op_mips_model op_model_rm9000_ops __weak;
 extern struct op_mips_model op_model_loongson2_ops __weak;
-extern struct op_mips_model op_model_phoenix __attribute__((weak));
+extern struct op_mips_model op_model_xlr __attribute__((weak));
 static struct op_mips_model *model;
 
 static struct op_counter_config ctr[20];
@@ -87,7 +87,7 @@ int __init oprofile_arch_init(struct oprofile_operations *ops)
 	switch (current_cpu_type()) {
 	case CPU_XLR:
 	case CPU_XLP:
-		lmodel = &op_model_phoenix;
+		lmodel = &op_model_xlr;
 		break;
 	case CPU_5KC:
 	case CPU_20KC:
diff --git a/arch/mips/oprofile/op_model_mips_xlr.c b/arch/mips/oprofile/op_model_mips_xlr.c
index c648245..cb6ac64 100644
--- a/arch/mips/oprofile/op_model_mips_xlr.c
+++ b/arch/mips/oprofile/op_model_mips_xlr.c
@@ -47,7 +47,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #define XLR_MAX_CPU_CORES 8
 #define XLR_MAX_CPUS 32
 
-extern struct op_mips_model op_model_phoenix;
+extern struct op_mips_model op_model_xlr;
 
 static struct nlm_common_register_config {
 	unsigned int control[XLR_MAX_PERF_COUNTERS];
@@ -133,7 +133,7 @@ static int nlm_common_pmc_owned(void)
 }
 static void nlm_common_reg_setup(struct op_counter_config *ctr)
 {
-	unsigned int counters = op_model_phoenix.num_counters;
+	unsigned int counters = op_model_xlr.num_counters;
 	int i;
 	unsigned long flags;
 
@@ -345,13 +345,13 @@ static void nlm_common_exit(void)
  * The following is assigned to the variable 
  * 'lmodel' in oprofile_arch_init()
  */
-struct op_mips_model op_model_phoenix = {
+struct op_mips_model op_model_xlr = {
 	.reg_setup	= nlm_common_reg_setup,
 	.cpu_setup	= netlogic_cpu_setup,
 	.init		= nlm_common_init,
 	.exit		= nlm_common_exit,
 	.cpu_start	= netlogic_cpu_start,
 	.cpu_stop	= netlogic_cpu_stop,
-	.cpu_type	= "mips/phoenix",
+	.cpu_type	= "mips/xlr",
 	.num_counters	= XLR_MAX_PERF_COUNTERS,
 };
diff --git a/drivers/char/nlm_common_dummy_uart.c b/drivers/char/nlm_common_dummy_uart.c
index 76e64e7..dc91d1d 100644
--- a/drivers/char/nlm_common_dummy_uart.c
+++ b/drivers/char/nlm_common_dummy_uart.c
@@ -205,10 +205,10 @@ int nlm_common_duart_init(void)
   serial_driver.init_termios = tty_std_termios;
   
   if (tty_register_driver(&serial_driver)) {
-    printk("Couldn't register phoenix duart serial driver\n");
+    printk("Couldn't register xlr duart serial driver\n");
     return -1;
   }
-  printk("Registered phoenix dummy uart driver\n");
+  printk("Registered xlr dummy uart driver\n");
   
   return 0;
 }
@@ -216,9 +216,9 @@ int nlm_common_duart_init(void)
 void nlm_common_duart_exit(void)
 {
   if (tty_unregister_driver(&serial_driver)) {
-    printk("Couldn't unregister phoenix duart serial driver\n");
+    printk("Couldn't unregister xlr duart serial driver\n");
   }
-  printk("unregistered phoenix duart serial driver\n");
+  printk("unregistered xlr duart serial driver\n");
   
 }
 
diff --git a/drivers/char/nlm_common_loader.c b/drivers/char/nlm_common_loader.c
index d7c4bff..1879863 100644
--- a/drivers/char/nlm_common_loader.c
+++ b/drivers/char/nlm_common_loader.c
@@ -609,7 +609,7 @@ static int nlm_common_loader_init(void)
 /*
 	nlm_common_start_loader_threads();
 
-	printk("Registered phoenix app loader driver: nlm_common_loader_major=%d\n", XLR_APP_LOADER_MAJOR);
+	printk("Registered xlr app loader driver: nlm_common_loader_major=%d\n", XLR_APP_LOADER_MAJOR);
 */
 	return 0;
 }
diff --git a/drivers/char/nlm_common_uart.c b/drivers/char/nlm_common_uart.c
index 4f5a4e0..384407b 100644
--- a/drivers/char/nlm_common_uart.c
+++ b/drivers/char/nlm_common_uart.c
@@ -591,10 +591,10 @@ int nlm_common_uart_init(void)
 #endif
   
   if (tty_register_driver(&serial_driver)) {
-    printk("Couldn't register phoenix uart serial driver\n");
+    printk("Couldn't register xlr uart serial driver\n");
     return -1;
   }
-  printk("Registered phoenix uart serial driver\n");
+  printk("Registered xlr uart serial driver\n");
   
   return 0;
 }
@@ -602,11 +602,11 @@ int nlm_common_uart_init(void)
 void nlm_common_uart_exit(void)
 {
   if (tty_unregister_driver(&serial_driver)) 
-    printk("Couldn't unregister phoenix uart serial driver\n");
+    printk("Couldn't unregister xlr uart serial driver\n");
   
   pci_unregister_driver(&nlm_common_serial_driver);
 
-  printk("unregistered phoenix uart serial driver\n");  
+  printk("unregistered xlr uart serial driver\n");  
 }
 
 module_init(nlm_common_uart_init);
diff --git a/drivers/char/nlm_xlr_msgring.c b/drivers/char/nlm_xlr_msgring.c
index ad2816f..b9f67ff 100644
--- a/drivers/char/nlm_xlr_msgring.c
+++ b/drivers/char/nlm_xlr_msgring.c
@@ -718,7 +718,7 @@ static int msgring_init(void)
 		return msgring_major;
 	}
 	msgring_major = XLR_MSGRING_SHM_MAJOR;
-	printk("Registered phoenix msgring driver: major=%d\n", msgring_major);
+	printk("Registered xlr msgring driver: major=%d\n", msgring_major);
 
 	return 0;
 }
diff --git a/drivers/i2c/chips/ds1374-rtc.c b/drivers/i2c/chips/ds1374-rtc.c
index 0e03c12..07cf362 100644
--- a/drivers/i2c/chips/ds1374-rtc.c
+++ b/drivers/i2c/chips/ds1374-rtc.c
@@ -443,10 +443,10 @@ static int __init ds1374_init(void)
 	if(xlr_noi2c)
 		return 0;
 
-	printk("Registering Phoenix I2C based RTC driver...\n");
+	printk("Registering Netlogic xlr I2C based RTC driver...\n");
 	ret = i2c_add_driver(&ds1374_driver);
 	if (ret) {
-		printk("Unable to register phoenix RTC driver!\n");
+		printk("Unable to register xlr RTC driver!\n");
 		return ret;		
 	}	
 
diff --git a/drivers/i2c/chips/max6657.c b/drivers/i2c/chips/max6657.c
index 53f92cf..3272a6f 100644
--- a/drivers/i2c/chips/max6657.c
+++ b/drivers/i2c/chips/max6657.c
@@ -253,7 +253,7 @@ static int __init max6657_init(void)
 	printk("Registering Phoenix I2C based Temperature Sensor driver...\n");
 	ret = i2c_add_driver(&max6657_driver);
 	if (ret) {
-		printk("Unable to register phoenix temperaturn sensor driver!\n");
+		printk("Unable to register xlr temperaturn sensor driver!\n");
 		return ret;		
 	}	
 
diff --git a/drivers/ide/phoenix_ide.c b/drivers/ide/phoenix_ide.c
index ccffbb4..62bb6dc 100644
--- a/drivers/ide/phoenix_ide.c
+++ b/drivers/ide/phoenix_ide.c
@@ -13,11 +13,11 @@ the header of the original work apply to this derived work.
  */
 
 /*
- * Boards with phoenix processors so far have supported IDE devices via
+ * Boards with xlr processors so far have supported IDE devices via
  * the Generic Bus, PCI bus, and built-in PCMCIA interface.  In all
  * cases, byte-swapping must be avoided for these devices (whereas
  * other PCI devices, for example, will require swapping).  Any
- * phoenix-targetted kernel including IDE support will include this
+ * xlr-targetted kernel including IDE support will include this
  * file.  Probing of a Generic Bus for an IDE device is controlled by
  * the definitions of "NETLOGIC_HAVE_IDE" and "IDE_PHYS", which are
  * provided by <asm/rmi/nlm_common_ide.h> for ATX1 boards.
@@ -457,7 +457,7 @@ static int __devinit nlm_common_ide_probe (struct platform_device *dev)
 		goto out;
 	}
 
-	printk ("Initializing Phoenix PCMCIA IDE...\n");
+	printk ("Initializing xlr PCMCIA IDE...\n");
 
 	memset(&hw, 0, sizeof(hw));
 	
@@ -499,7 +499,7 @@ static int nlm_common_ide_remove (struct platform_device *dev)
 
 static struct platform_driver nlm_common_ide_driver = {
 	.driver = {
-		.name = "phoenix-pcmcia",
+		.name = "xlr-pcmcia",
 		.owner = THIS_MODULE,
 	},
 	.probe          = nlm_common_ide_probe,
-- 
1.7.10.4

