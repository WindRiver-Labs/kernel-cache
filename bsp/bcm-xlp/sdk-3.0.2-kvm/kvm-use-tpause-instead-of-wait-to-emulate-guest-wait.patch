From bbb47813e6119023344eb7c000938bbdba1723f6 Mon Sep 17 00:00:00 2001
From: Yonghong Song <ysong@broadcom.com>
Date: Wed, 15 May 2013 11:00:41 -0700
Subject: [PATCH] kvm: use "tpause" instead of "wait" to emulate guest "wait"
 exception

Commit 2ea4da070675a1a961b353f11c6ca312c7c5e7d6 from Broadcom SDK 3.0.2

o "wait" can only be waken up by root interrupt
o "tpause" can be waken up by either root interrupt or the expiration of
  the pausetime. Once a root interrupt wakes up "tpause", the pausetime
  register will be cleared so that after interrupt returns, "tpause"
  will execute and retire without any further delay.

Signed-off-by: Yonghong Song <ysong@broadcom.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/netlogic/kvm/kvm_traps.c b/arch/mips/netlogic/kvm/kvm_traps.c
index 552f32b..53d0dfa 100644
--- a/arch/mips/netlogic/kvm/kvm_traps.c
+++ b/arch/mips/netlogic/kvm/kvm_traps.c
@@ -7,6 +7,7 @@
 #include <asm/kvm.h>
 #include <asm/kvm_host.h>
 #include <asm/netlogic/kvm_xlp.h>
+#include <asm/netlogic/mips-extns.h>
 
 /* Virtualization exceptions (as tagged in cause register) handled here */
 
@@ -35,6 +36,7 @@ static void process_psi(struct pt_regs *regs)
 		/* cop0 */
 		if ((badinstr & 0xfe00003f) == 0x42000020) {
 			struct kvm_vcpu_arch *vcpu_arch;
+			uint32_t val, cause;
 
 			vcpu_arch = kvm_get_vcpu_arch(regs);
 			if (vcpu_arch->nmi == 1) {
@@ -48,7 +50,19 @@ static void process_psi(struct pt_regs *regs)
 			/* We do not want to simply bounce back. As for SMT,
 			 * this will have performance implication.
 			 */
+#if 0
 			__asm__ __volatile__ ("wait" : : : "memory");
+#else
+			/* Let us do a tpause here */
+			/* compare - count */
+			val = __read_32bit_guest_c0_register($11, 0) -
+				__read_32bit_guest_c0_register($9,  0);
+			cause = __read_32bit_guest_c0_register($13, 0);
+			if (!((cause >> 30) & 0x1) && val > 500) {
+				write_xlp_pausetime(val - 500);
+				__asm__ __volatile__ ("tpause" : : : "memory");
+			}
+#endif
 			return; 
 		} else if (((badinstr >> 21) & 0x1f) == 0x0) {
 			/* MF */
-- 
1.9.1

