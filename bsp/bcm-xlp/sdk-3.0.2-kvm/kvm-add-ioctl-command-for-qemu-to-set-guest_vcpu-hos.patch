From 3eb184abe2f226729b970a78b94f95c48421a20a Mon Sep 17 00:00:00 2001
From: Yonghong Song <ysong@broadcom.com>
Date: Wed, 10 Jul 2013 08:44:17 -0700
Subject: [PATCH] kvm: add ioctl command for qemu to set guest_vcpu->host_vcpu
 binding

Commit 0bf119d171e5a02c44e4d467dd05bc26b1c5902a from Broadcom SDK 3.0.2

Signed-off-by: Yonghong Song <ysong@broadcom.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/include/asm/kvm.h b/arch/mips/include/asm/kvm.h
index dd7c6a5..fb23524 100644
--- a/arch/mips/include/asm/kvm.h
+++ b/arch/mips/include/asm/kvm.h
@@ -56,6 +56,7 @@ struct kvm_pktmem_info {
 #define KVM_MIPS_SYNC_GPA_MAP	  _IOW(KVMIO,  0xa3, int)
 #define KVM_MIPS_HUGEPAGE_SIZE	  _IOW(KVMIO,  0xa4, unsigned long long)
 #define KVM_MIPS_ADD_PKTMEM	  _IOW(KVMIO,  0xa5, struct kvm_pktmem_info)
+#define KVM_MIPS_SET_BINDING	  _IOW(KVMIO,  0xa6, int)
 
 /* Used to capture a guest state */
 struct kvm_regs {
diff --git a/arch/mips/include/asm/netlogic/kvm_para.h b/arch/mips/include/asm/netlogic/kvm_para.h
index 7e0f9c8..233615d 100644
--- a/arch/mips/include/asm/netlogic/kvm_para.h
+++ b/arch/mips/include/asm/netlogic/kvm_para.h
@@ -37,7 +37,7 @@
 
 extern int is_nlm_guest_os;
 
-#define KVM_HC_GET_CPUID	0x1  /* p1r1 */
+#define KVM_HC_GET_HARD_CPUID	0x1  /* p1r1 */
 
 static inline int do_hypcall_p1r1(int num, uint64_t param0, uint64_t *ret0)
 {
diff --git a/arch/mips/kvm/kvm.c b/arch/mips/kvm/kvm.c
index 6c50372..2d7294b3 100644
--- a/arch/mips/kvm/kvm.c
+++ b/arch/mips/kvm/kvm.c
@@ -371,7 +371,6 @@ int kvm_arch_vcpu_ioctl_run(struct kvm_vcpu *vcpu, struct kvm_run *run)
 		struct kvm_vcpu *vcpu_p;
 
 		vcpu->arch.gpa_pgd = vcpu->kvm->arch.gpa_pgd;
-		vcpu->arch.host_vcpuid = r->guest_ebase & 0x3ff;
 
 		/* go through all vcpus to register its vcpu pointer */
 		kvm_for_each_vcpu(i, vcpu_p, vcpu->kvm) {
@@ -536,6 +535,7 @@ int kvm_arch_vcpu_init(struct kvm_vcpu *vcpu)
 	vcpu->arch.hva_pgd = 0;
 	vcpu->arch.gpa_pgd = 0;
 	vcpu->arch.nmi = 0;
+	vcpu->arch.host_vcpuid = -1;
 #if 0
 	printk("Guest vcpu %p initialization\n", vcpu);
 #endif
@@ -807,6 +807,21 @@ long kvm_arch_vm_ioctl(struct file *filp, unsigned int ioctl, unsigned long arg)
 		kvm->arch.pktmem.size = pktmem.size;
 		break;
 	}
+	case KVM_MIPS_SET_BINDING:
+	{
+		int i, binding[32];
+		struct kvm_vcpu *vcpu;
+
+		if (copy_from_user(binding, argp, sizeof(binding))) {
+			r = -EFAULT;
+			break;
+		}
+
+		kvm_for_each_vcpu(i, vcpu, kvm) {
+			vcpu->arch.host_vcpuid = binding[vcpu->vcpu_id];
+		}
+		break;
+	}
 	default:
 		r = -EINVAL;
 		break;
diff --git a/arch/mips/netlogic/kvm/kvm_traps.c b/arch/mips/netlogic/kvm/kvm_traps.c
index 5d84ba1..a3cf8d7 100644
--- a/arch/mips/netlogic/kvm/kvm_traps.c
+++ b/arch/mips/netlogic/kvm/kvm_traps.c
@@ -352,7 +352,7 @@ static void process_hc(struct pt_regs *regs)
 
 	hc_num = regs->regs[2];
 	switch (hc_num) {
-	case KVM_HC_GET_CPUID:
+	case KVM_HC_GET_HARD_CPUID:
 	{
 		int i, guest_cpuid = regs->regs[3], host_cpuid = -1;
 		struct kvm *kvm;
@@ -361,7 +361,7 @@ static void process_hc(struct pt_regs *regs)
 		kvm = ((struct kvm_vcpu *)regs->cp0_osscratch7)->kvm;
 		kvm_for_each_vcpu(i, vcpu, kvm) {
 			if (vcpu->vcpu_id == guest_cpuid) {
-				host_cpuid = vcpu->arch.host_vcpuid;
+				host_cpuid = __cpu_logical_map[vcpu->arch.host_vcpuid];
 				break;
 			}
 		}
-- 
1.9.1

