From 05f80bcb7e4d4dc1d4bde8bb1c077849d3e27e9d Mon Sep 17 00:00:00 2001
From: Yonghong Song <ysong@broadcom.com>
Date: Tue, 4 Jun 2013 15:14:04 -0700
Subject: [PATCH] kvm: make guest "reboot -f" work as shutdowning the guest by
 itself

Commit ce87b85224f436e3fb0c1024014b57a1218d9366 from Broadcom SDK 3.0.2

Signed-off-by: Yonghong Song <ysong@broadcom.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/kvm/kvm.c b/arch/mips/kvm/kvm.c
index 0fac718..3749235 100644
--- a/arch/mips/kvm/kvm.c
+++ b/arch/mips/kvm/kvm.c
@@ -319,6 +319,10 @@ int kvm_arch_vcpu_ioctl_run(struct kvm_vcpu *vcpu, struct kvm_run *run)
 		run->exit_reason = ret >> 24;
 		run->mips_spawn_thread.start_hw_cpuid = ret & 0xff;
 		break;
+	case KVM_EXIT_REQUEST_QUIT:
+		/* quit kvm */
+		run->exit_reason = ret >> 24;
+		break;
 	case KVM_EXIT_QUIT_KVM:
 		/* quit kvm */
 		run->exit_reason = ret >> 24;
diff --git a/arch/mips/kvm/xlp.c b/arch/mips/kvm/xlp.c
index 7c962a0..d99d3c7 100644
--- a/arch/mips/kvm/xlp.c
+++ b/arch/mips/kvm/xlp.c
@@ -365,6 +365,9 @@ void kvm_uart_insert_char(struct kvm *kvm, char c)
 {
 	struct kvm_arch *arch = &kvm->arch;
 
+	if (arch->exit_request)
+		return;
+
 	if (arch->uart.input_size < KVM_MAX_UART_IN_SIZE) {
 		arch->uart.input_buf[arch->uart.input_size] = c;
 		arch->uart.input_size ++;
@@ -383,7 +386,9 @@ void kvm_xlp_check_exit_request(struct kvm_vcpu *vcpu)
 {
 	unsigned int val;
 
+#if 0
 	printk("Guest vcpu %lld exiting\n", vcpu->arch.guest.gpu.guest_ebase & 0x3ff);
+#endif
 
 	/* return to qemu for exit */
 	val = (KVM_EXIT_QUIT_KVM << 24);
diff --git a/arch/mips/netlogic/kvm/kvm_sysmgt.c b/arch/mips/netlogic/kvm/kvm_sysmgt.c
index c3f1016..14a2177 100644
--- a/arch/mips/netlogic/kvm/kvm_sysmgt.c
+++ b/arch/mips/netlogic/kvm/kvm_sysmgt.c
@@ -59,11 +59,8 @@ void kvm_handle_pcie_sysmgt(struct pt_regs *regs, unsigned long write,
 		if (write) {
 			int val;
 
-			/* Intention to exit. Make a mark here to notify other vcpus. */
-			arch->exit_request = 1;
-
-			printk("Guest vcpu %lu exiting ...\n", regs->guest_cp0_ebase & 0x3ff);
-			val = (KVM_EXIT_QUIT_KVM << 24);
+			printk("Guest vcpu %lu request exiting ...\n", regs->guest_cp0_ebase & 0x3ff);
+			val = (KVM_EXIT_REQUEST_QUIT << 24);
 			 __kvm_vcpu_leave_guest((struct kvm_vcpu *)regs->cp0_osscratch7, val);
 			return;
 		}
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index 5ac6c8f..57d860d 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -180,6 +180,7 @@ struct kvm_pit_config {
 #define	KVM_EXIT_ENABLE_CORE	  26
 #define	KVM_EXIT_QUIT_KVM	  27
 #define	KVM_EXIT_CHAR_PRINT	  28
+#define	KVM_EXIT_REQUEST_QUIT	  29
 #endif
 
 /* For KVM_EXIT_INTERNAL_ERROR */
-- 
1.9.1

