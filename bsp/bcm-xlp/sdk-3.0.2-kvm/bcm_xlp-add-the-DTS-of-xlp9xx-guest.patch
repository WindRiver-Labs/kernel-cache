From 93d35b93fe03dfcad86a5c31945142f4a1f0f66a Mon Sep 17 00:00:00 2001
From: Nam Ninh <nam.ninh@windriver.com>
Date: Fri, 28 Nov 2014 16:08:11 -0500
Subject: [PATCH] bcm_xlp: add the DTS of xlp9xx guest

Add new xlp9xx guest dts and 2 other missing dts

Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/arch/mips/boot/dts/xlp8xx-linux.dts b/arch/mips/boot/dts/xlp8xx-linux.dts
new file mode 100644
index 0000000..89155e3
--- /dev/null
+++ b/arch/mips/boot/dts/xlp8xx-linux.dts
@@ -0,0 +1,1361 @@
+/* XLP8XX Device Tree Source
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "netlogic,XLP-EVP";
+        compatible = "netlogic,xlp";
+        #address-cells = <2>;
+        #size-cells = <2>;
+	/*memory range for linux. This will not appear in dom0*/
+        memory {
+                device_type = "memory";
+                reg =  <0 0x00000000 0 0x0B000000
+                        0 0x20000000 0 0xa0000000
+                        0 0xe0000000 0 0x20000000>;
+        };
+
+	/* memory range for HEv2 pkt mem. Only one contig memory per node supported */
+	pktmem {
+		device_type = "pktmem";
+
+		/* format: node number, 64-bit addr, 64-bit size */
+		reg = <0 0x0 0x80000000 0x0 0x08000000
+	               1 0x0 0x0 0x0 0x0
+		       2 0x0 0x0 0x0 0x0
+		       3 0x0 0x0 0x0 0x0>;
+	};
+
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <0>;
+		bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0xffffffff -- ";
+		domain_heap = <0x80000000 0x20000000>;
+	};
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			cpu {
+				onlinemask = <0xffffffff>;
+                                nae-rx-vc = <0>;
+                                nae-fb-vc = <1>;
+				napi-vc-mask = <0xb>;
+				sae-rx-vc = <0>; /* sharing with nae */
+				sae-rx-sync-vc  = <3>; /* should be exclusive */
+				ipsec-async-vc  = <3>;
+				ipsec-sync-vc   = <2>;
+
+			};
+			uart {
+				id = <0>;
+				owner = <1>;
+				sharedcfg = <0x1f000000>;
+			};
+                        fmn {
+                                node_0_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_1_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_2_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_3_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                        };
+			nae {
+				/* Example for different values of nae-rx-cpu-mask
+				 * for 32 CPUs: nae-rx-cpu-mask = <0xffffffff>;
+				 * if left empty, it takes the value of onlinemask.
+				 */
+				nae-rx-cpu-mask = <>;
+				freein-fifo-mask = <0x3ffff 0 0 0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <32 32 32 32>;
+				/* hw entries */
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <20 20 20 20>;
+			};
+			owner-config {
+				nae = <0x1>;   // currently for node 0
+				sae = <0x1>;
+				rsa = <0x1>;
+				fmn = <0x1>;
+			};
+		};
+	};
+	chosen {
+		bootargs = " console=ttyS0,115200  rhash_entries=1048576";
+		netlogic,cpumask = <0xffffffff>;
+		/*linux,initrd-start=<0x00c00000>;
+		linux,initrd-end=<0x02c00000>;*/
+	};
+
+	/* These binaries are downloaded at the resp physical memory locations
+	 * by their corresponding bootstrapping loaders. For example,
+	 * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
+	 * at 1M, hypervisor by u-boot hypervisor at 136M.
+	 * On simulator all these binaries are pre-loaded by using '-F' option
+	 * for convenience. On silicon, they will be loaded by their corresponding
+	 * temporary download locations the stage-1/stage-2 firmware
+	 */
+	firmware-download {
+		u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
+		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
+		dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
+		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
+	};
+
+	soc {
+		#address-cells = <2>;
+		#size-cells = <1>;
+		compatible = "simple-bus";
+		ranges = <0 0  0 0x18000000  0x04000000   // PCIe CFG
+			  1 0  0 0x16000000  0x02000000>; // GBU chipselects
+
+		serial0: serial@30000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x30100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <133333333>;
+			interrupt-parent = <&pic>;
+			interrupts = <17>;
+		};
+		serial1: serial@31000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x31100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <133333333>;
+			interrupt-parent = <&pic>;
+			interrupts = <18>;
+		};
+		i2c0: ocores@32000 {
+			compatible = "opencores,i2c-ocores";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x32100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <32000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <30>;
+		};
+		i2c1: ocores@33000 {
+			compatible = "opencores,i2c-ocores";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x33100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <32000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <31>;
+
+			rtc@68 {
+				compatible = "dallas,ds1374";
+				reg = <0x68>;
+			};
+
+			dtt@4c {
+				compatible = "national,lm90";
+				reg = <0x4c>;
+			};
+
+ 			eeprom@57 {
+                                compatible = "xlpge_eeprom";
+                                reg = <0x57>;
+                        };
+		};
+		pic: pic@4000 {
+			interrupt-controller;
+			#address-cells = <0>;
+			#interrupt-cells = <1>;
+			reg = <0 0x4000 0x200>;
+		};
+
+		watchdog@0 {
+			compatible = "netlogic,nlm-wdt";
+		};
+
+		rng@0 {
+			compatible = "netlogic,nlm-drng";
+			reg = <0 0x2a000 0x30>;
+		};
+
+		nor_flash@1,0 {
+			compatible = "cfi-flash";
+			#address-cells = <1>;
+			#size-cells = <1>;
+			bank-width = <2>;
+			reg = <1 0 0x1000000>;
+
+			partition@0 {
+				label = "x-loader";
+				reg = <0x0 0x100000>; /* 1M */
+				read-only;
+			};
+
+			partition@100000 {
+				label = "u-boot";
+				reg = <0x100000 0x100000>; /* 1M */
+			};
+
+			partition@200000 {
+				label = "kernel";
+				reg = <0x200000 0x500000>; /* 5M */
+			};
+
+			partition@700000 {
+				label = "rootfs";
+				reg = <0x700000 0x800000>; /* 8M */
+			};
+
+			partition@f00000 {
+				label = "env";
+				reg = <0xf00000 0x100000>; /* 1M */
+				read-only;
+			};
+		};
+
+		nand_flash@0,0 {
+			compatible = "netlogic,xlp-nand";
+			#address-cells = <1>;
+			#size-cells = <1>;
+			reg = <0 0x39000 0x1000>;
+
+			interrupts = <43>;
+			interrupt-parent = <&pic>;
+			nand-ecc-mode = "hw";
+
+			partition@0 {
+				label = "firmware";
+				reg = <0x0 0x20000000>;
+			};
+
+			partition@1 {
+				label = "kernel";
+				reg = <0x20000000 0x20000000>;
+			};
+
+			partition@2 {
+				label = "user";
+				reg = <0x40000000 0x0>;
+			};
+		};
+
+		gpio: xlp_gpio@34000 {
+			compatible = "netlogic,xlp-gpio";
+			reg = <0 0x34100 0x1000>;
+			#gpio-cells = <2>;
+			gpio-controller;
+
+			#interrupt-cells = <1>;
+			interrupt-parent = <&pic>;
+			interrupts = <39>;
+			interrupt-controller;
+		};
+
+		spi: xlp_spi@13a000 {
+			compatible = "netlogic,xlp-spi";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x3a000 0x100>;
+
+			interrupts = <34>;
+			interrupt-parent = <&pic>;
+
+			spi_nor@1 {
+				compatible = "spansion,s25sl12801";
+				#address-cells = <1>;
+				#size-cells = <1>;
+
+				reg = <1>;		/* Chip Select */
+				spi-max-frequency = <40000000>;
+
+				partition@0 {
+					label = "x-loader";
+					reg = <0x0 0x200000>; /* 2M */
+					read-only;
+				};
+
+				partition@200000 {
+					label = "kernel";
+					reg = <0x200000 0x500000>; /* 5M */
+				};
+
+				partition@700000 {
+					label = "rootfs";
+					reg = <0x700000 0x800000>; /* 8M */
+				};
+
+				partition@f00000 {
+					label = "env";
+					reg = <0xf00000 0x100000>; /* 1M */
+					read-only;
+				};
+			};
+
+			spi_nand@2 {
+				compatible = "spinand,mt29f";
+				#address-cells = <1>;
+				#size-cells = <1>;
+				reg = <2>;	/* SPI NAND CS */
+				spi-max-frequency = <50000000>;
+
+				partition@0 {
+					label = "firmware";
+					reg = <0x0 0x1c00000>;
+				};
+
+				partition@1 {
+					label = "kernel";
+					reg = <0x1c00000 0x0>;
+				};
+			};
+		};
+fmn@node-0 {
+        default-credits = <50>;
+        default-queue-size = <28672>;
+        fmn-spill-mem-base = <0x00000000 0x10000000>; /*0 - dynamic allocation, only for 64 bit linux */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config {
+		/* credits from station     
+		   "cpu popq pcie0 pcie1 pcie2 pcie3 gdx gdx1 rsa crypto cmp poe nae regx srio lzs"
+		   The order and number of station should be matching with the list given above
+		   Here, credits 0 means the default credits. 
+		   Right now there is no way to configure credit of zero */
+
+                cpu {
+                        queue-size = <36864>; /* queue size for all the cpu vcs */
+                        credits-from {
+                                node-0 = <0 0 0 0 0 0 0 0 0 0 0 500 0 0 150 0>;
+                        };
+                };
+		srio {
+                       credits-from {
+                                node-0 = <150 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                        };
+               };
+
+	};
+};
+fmn@node-1{
+        default-credits = <50>;
+        default-queue-size = <28672>;
+        fmn-spill-mem-base = <0x00000000 0x00000000>; /*0 - dynamic allocation */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config{
+
+	};
+};
+fmn@node-2{
+
+};
+fmn@node-3{
+
+};
+  nae@node-0 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+			ucore {
+
+				src@1 {
+					num-opcodes = <0x242>;
+					path = "/sdk-base/buildroot/output/build/sysconfig/nae/ucore/linux-ucore.c";
+					timestamp = "Tue Aug 12 22:55:36 2014\n";
+					mask = <0xffff>;
+					opcodes = <0x3c1c0010 0x279cf808 0x3c020010 0x2442f808 0x3c030010 0x2463f808 0xac400000 0x43082b 0x1420fffd 0x24420004 0x3c1d0010 0x27bdf9c0 0x27a50020 0x27a60028 0xaca00000 0xacc00000 0xc000029 0x2021 0x1000ffff 0x0 0x3c020000 0x8c42093c 0x27bdffe0 0x2403ffff 0xafbf001c 0xafb10018 0x10430009 0xafb00014 0x3c100000 0x2610093c 0x2411ffff 0x40f809 0x2610fffc 0x8e020000 0x1451fffc 0x0 0x8fbf001c 0x8fb10018 0x8fb00014 0x3e00008 0x27bd0020 0x27bdffb8 0x3c030001 0xafa00030 0x34638000 0xafa0002c 0xafa00028 0xafa00024 0xafa00020 0xafa0001c 0xafa00018 0xafa00014 0xafa00010 0xafa0000c 0xafa00008 0x8c67000c 0xafb30044 0x30e40002 0x8c660000 0xafb20040 0xafb1003c 0xafb00038 0x8c620018 0x10800046 0x30e50001 0x3c08000f 0x30e70008 0x30c6000c 0x2405000c 0x240b0100 0x3504fe4c 0x3c0a0178 0x3c090170 0x34088004 0x10c50034 0x8d0c0000 0x8c880000 0x8fc02 0xafbf0008 0x8c930004 0x139402 0xafb2002c 0x908c0015 0x319900ff 0x322001a 0x4001f4 0xc010 0xafb80000 0x8fb80008 0x8fb9002c 0x8fae0000 0x25cd0006 0xd8880 0x718821 0x8e2f0004 0x8c700010 0x8c720004 0x8e2e0004 0x31e800ff 0x10fa00 0xe6a02 0x8e2e0004 0x8c700000 0x11f9821 0x136080 0x320f0002 0x1926021 0x11e00007 0x31ad00ff 0xe7402 0x31d000ff 0x2b3105dd 0x211680a 0x3b0f0800 0x20f680b 0x318c0fff 0xcca00 0x37380001 0x34088030 0xad180000 0x10e00009 0xd9380 0x34088000 0xad090000 0x34088004 0x14c5ffce 0x8d0c0000 0x34088034 0x800004c 0xad0b0000 0x24a6825 0x34088000 0x8000049 0xad0d0000 0x14a000db 0x3c0a000f 0x30eb0004 0x11600177 0x3c04dead 0x24633ffc 0x8000093 0x3484beef 0xafa00004 0x8fac0004 0x2d8e0064 0x15c0017b 0x0 0x8c730000 0x1664fff9 0x3c08dead 0x3c03000f 0x3c100001 0x3465fe4c 0x350abeff 0x3609c000 0x3c120178 0x3c110170 0x30e70008 0x30c6000c 0x240c000c 0x240f0100 0x24a3ffb4 0x254bfff0 0x2524c000 0x264e0008 0x262d0008 0x34088004 0x10cc00b7 0x8d180000 0x8cbf0000 0x1fcc02 0xafb90008 0x8ca80004 0x88c02 0xafb1002c 0x8cb00008 0x321300ff 0xafb30018 0x8c720000 0xafb20010 0x8c7f0004 0xafbf000c 0x8c790008 0xafb90020 0x8fa80018 0xaca8ffc0 0x90710001 0x90700002 0x119200 0x109c00 0x907f0000 0x90790003 0x30a4021 0x253c021 0x90730005 0x90720006 0x31f8021 0x198e00 0x13fa00 0x90790004 0x12c400 0x90730007 0x2118021 0x3f88821 0x239f821 0x90790009 0x9071000a 0x139600 0x3f2c021 0x199a00 0x907f0008 0x119400 0x9071000b 0x272c821 0x33f9021 0x119e00 0x253f821 0x308c021 0x3e84021 0x8cf02 0x88900 0x3319825 0x21f8023 0x2138026 0x10fe82 0x109180 0x3108823 0x1184021 0x3f2c025 0x311f826 0x1fce02 0x1f9a00 0x2088021 0x3339025 0x11f4023 0x2484026 0x88c02 0x8c400 0x2089823 0x238c825 0x333c826 0x3f0f821 0x199342 0x1984c0 0x2508825 0x3f9c023 0x11f9821 0x238c026 0x333c821 0x9071000f 0x2788023 0x184702 0x9073000e 0x18f900 0x11f9025 0x2508026 0x13fc00 0x9072000c 0x9073000d 0x114600 0x319c021 0x11f8821 0x232f821 0x134200 0x189482 0x189b80 0x3e88821 0x2534025 0x218f826 0x3e8f823 0x239c821 0x1f82c0 0x1f8d42 0x2309025 0x3f99826 0x2729823 0x13c9c2 0x134640 0x3288825 0x2788026 0x2118023 0x109402 0x10c400 0x258c825 0x21f4026 0x1194023 0x8ff02 0x88900 0x113c026 0x3f19025 0x312c823 0x199c82 0x19fb80 0x27f8825 0x330c026 0x3118023 0x2089826 0x109202 0x272c823 0x333f0fff 0xafbf0014 0x8fa80014 0xaca8ffb8 0xac6b0000 0x8fb80014 0x188880 0x2298021 0x8e120000 0x242001b 0x4001f4 0x9810 0xafb30000 0x8fb20008 0x8fb3002c 0x8fb90000 0x273f0006 0x1f4080 0x884021 0x8d180004 0x8c910010 0x331900ff 0x118200 0x8c9f0004 0x3308821 0x8d100004 0x11c080 0x10ca02 0x8d100004 0x8c910000 0x31fc021 0x323f0002 0x13e00007 0x333900ff 0x108c02 0x323000ff 0x2a7305dd 0x213c80a 0x3a520800 0x212c80b 0x331f0fff 0x1f4200 0x35180001 0x34088030 0xad180000 0x10e000bd 0x198380 0x34088000 0xad0d0000 0x34088004 0x14ccff4b 0x8d180000 0x34088034 0x80000a9 0xad0f0000 0x3544fe4c 0x3c099e37 0x30e70008 0x30c6000c 0x240b000c 0x240e0100 0x240a0006 0x2485ffb4 0x252979b9 0x3c0d0178 0x3c0c0170 0x34088004 0x10cb0077 0x8d0f0000 0x8c990000 0x194402 0xafa80008 0x8c980000 0x188a02 0x322f000f 0xafaf0030 0x8c900004 0x10fc02 0xafbf002c 0x8c930008 0x327200ff 0xafb20018 0x8fb90030 0x194080 0x1044021 0x8d18000c 0x188b02 0x322f000f 0xafaf0028 0x8d10000c 0x321f003f 0xafbf0024 0x8fb30018 0x126a0064 0x0 0x8cbf0000 0xafbf0010 0x8cb20004 0xafb2000c 0x8ca80008 0xafa80020 0x8fb80010 0x8fb3000c 0x8fa80020 0x3097821 0x269f821 0x1e88023 0x21f8823 0x8cb42 0x2398826 0x3e89023 0x251c023 0x119a00 0x2789826 0x1117823 0x1f3c823 0x138342 0x219c826 0x233f823 0x3f94023 0x199302 0x2489026 0x279c023 0x3127823 0x128c00 0x22f8826 0x3328023 0x2119823 0x11f942 0x3f39826 0x2514023 0x113c023 0x13c8c2 0x3389026 0x2337823 0x1f2f823 0x128280 0x21fc826 0x2724023 0x119c023 0x198bc2 0x2387826 0xafaf0014 0x8fb00014 0x202001b 0x4001f4 0xf810 0xafbf0000 0x8fb10008 0x8fb2002c 0x8fb90000 0x273f0006 0x1f4080 0x684021 0x8d0f0004 0x8c780010 0x8c7f0004 0x189a00 0x8d180004 0x31f000ff 0x213c821 0x188202 0x321800ff 0x8d100004 0x8c730000 0x197880 0x32790002 0x13200007 0x1ff7821 0x108402 0x321300ff 0x2a5205dd 0x272c00a 0x3a310800 0x271c00b 0x31ff0fff 0x1f4200 0x350f0001 0x34088030 0xad0f0000 0x10e00009 0x18cb80 0x34088000 0xad0c0000 0x34088004 0x14cbff8b 0x8d0f0000 0x34088034 0x8000170 0xad0e0000 0x32dc025 0x34088000 0x800016d 0xad180000 0x8fb30024 0x32720010 0x1240ff9a 0x0 0x8fb80028 0x8fb10030 0x8fbf002c 0x2387821 0xf8080 0x161fff93 0x0 0x8d130004 0x139402 0xafb2001c 0x8fb9001c 0x322001b 0x4001f4 0x4010 0x80001bf 0xafa80000 0x30e20020 0x10400017 0x30e60040 0x24030002 0x3c020170 0x34088004 0x8d040000 0x34088030 0xad030000 0x34088000 0x8000206 0xad020000 0x8faa0004 0x25490001 0xafa90004 0x8fa50004 0x2cad0064 0x11a0fe80 0x0 0x800020d 0x0 0x20ec825 0x34088000 0x80000a6 0xad190000 0x10c0000a 0x30ef0010 0x24030006 0x3c020170 0x34088004 0x8d040000 0x34088030 0xad030000 0x34088000 0x800021e 0xad020000 0x11e00009 0x24030004 0x3c020170 0x34088004 0x8d040000 0x34088030 0xad030000 0x34088000 0x8000228 0xad020000 0x30e70080 0x10e0000a 0x3c0b0020 0x25630001 0x3c020170 0x34088004 0x8d040000 0x34088030 0xad030000 0x34088000 0x8000234 0xad020000 0x1021 0x8fb30044 0x8fb20040 0x8fb1003c 0x8fb00038 0x3e00008 0x27bd0048>;
+				};
+			};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00200000>; // spill address is allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+		/* If port-fifo-en is not specified(0/1), it will be set to 1 
+		   while building the linux dtb file. For all the othercases it will be set to 0.
+		   See build-dtb.sh. If required, user can explicitly set the value here.
+		   */
+		port-fifo-en = <1>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+		class-map-mode = <0>;                       /* 0:All NAE, 1:Class 7-4 reserved for CPU, 2:Class 7-5 reserved for CPU,
+							    3:Class 7-6 reserved for CPU, 4:Class 7 reserved for CPU */
+
+//		poe-spill-address = <0xec00000>;
+//		poe-spill-length = <0x10000>;
+
+		// Comminting the actual value to be given to
+		// POE as POE is not getting called in the
+		// regular case
+		poe-spill-address = <0x0>;
+		poe-spill-length =  <0x0>;
+		
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+			submode  = <0>;
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <0>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <0>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+			mgmt-port = <0 0 0 0>;
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+        	        rx-buffer-size = <128 128 128 128>;
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to  <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable  = <0x0>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+			submode  = <0>;
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <4>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <4>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to  <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable  = <0x0>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+						submode  = <0>;
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+						ext-phy-addr = <8>;
+						ext-phy-bus = <1>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+						ext-phy-addr = <8>;
+                        ext-phy-bus = <1>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+			submode  = <0>;
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <12>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <12>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+                sgmii {
+                        loopback = <0 0 0 0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <13 13 13 13>;
+
+                        ext-phy-addr = <12 15 14 13>;
+                        ext-phy-bus = <1 1 1 1>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        num-channels = <1 1 1 1>;
+                        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        rx-buffer-size = <128 128 128 128>;
+
+
+                        // Max available descriptors are 1024 (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <52 52 52 52>;
+                        free-desc-size = <2048 2048 2048 2048>;
+                        ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+                };
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+	
+			mgmt-port = <1 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+                
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+   nae@node-1 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+			ucore {
+
+				src@1 {
+					num-opcodes = <0x242>;
+					path = "/sdk-base/buildroot/output/build/sysconfig/nae/ucore/linux-ucore.c";
+					timestamp = "Tue Aug 12 22:55:36 2014\n";
+					mask = <0xffff>;
+					opcodes = <0x3c1c0010 0x279cf808 0x3c020010 0x2442f808 0x3c030010 0x2463f808 0xac400000 0x43082b 0x1420fffd 0x24420004 0x3c1d0010 0x27bdf9c0 0x27a50020 0x27a60028 0xaca00000 0xacc00000 0xc000029 0x2021 0x1000ffff 0x0 0x3c020000 0x8c42093c 0x27bdffe0 0x2403ffff 0xafbf001c 0xafb10018 0x10430009 0xafb00014 0x3c100000 0x2610093c 0x2411ffff 0x40f809 0x2610fffc 0x8e020000 0x1451fffc 0x0 0x8fbf001c 0x8fb10018 0x8fb00014 0x3e00008 0x27bd0020 0x27bdffb8 0x3c030001 0xafa00030 0x34638000 0xafa0002c 0xafa00028 0xafa00024 0xafa00020 0xafa0001c 0xafa00018 0xafa00014 0xafa00010 0xafa0000c 0xafa00008 0x8c67000c 0xafb30044 0x30e40002 0x8c660000 0xafb20040 0xafb1003c 0xafb00038 0x8c620018 0x10800046 0x30e50001 0x3c08000f 0x30e70008 0x30c6000c 0x2405000c 0x240b0100 0x3504fe4c 0x3c0a0178 0x3c090170 0x34088004 0x10c50034 0x8d0c0000 0x8c880000 0x8fc02 0xafbf0008 0x8c930004 0x139402 0xafb2002c 0x908c0015 0x319900ff 0x322001a 0x4001f4 0xc010 0xafb80000 0x8fb80008 0x8fb9002c 0x8fae0000 0x25cd0006 0xd8880 0x718821 0x8e2f0004 0x8c700010 0x8c720004 0x8e2e0004 0x31e800ff 0x10fa00 0xe6a02 0x8e2e0004 0x8c700000 0x11f9821 0x136080 0x320f0002 0x1926021 0x11e00007 0x31ad00ff 0xe7402 0x31d000ff 0x2b3105dd 0x211680a 0x3b0f0800 0x20f680b 0x318c0fff 0xcca00 0x37380001 0x34088030 0xad180000 0x10e00009 0xd9380 0x34088000 0xad090000 0x34088004 0x14c5ffce 0x8d0c0000 0x34088034 0x800004c 0xad0b0000 0x24a6825 0x34088000 0x8000049 0xad0d0000 0x14a000db 0x3c0a000f 0x30eb0004 0x11600177 0x3c04dead 0x24633ffc 0x8000093 0x3484beef 0xafa00004 0x8fac0004 0x2d8e0064 0x15c0017b 0x0 0x8c730000 0x1664fff9 0x3c08dead 0x3c03000f 0x3c100001 0x3465fe4c 0x350abeff 0x3609c000 0x3c120178 0x3c110170 0x30e70008 0x30c6000c 0x240c000c 0x240f0100 0x24a3ffb4 0x254bfff0 0x2524c000 0x264e0008 0x262d0008 0x34088004 0x10cc00b7 0x8d180000 0x8cbf0000 0x1fcc02 0xafb90008 0x8ca80004 0x88c02 0xafb1002c 0x8cb00008 0x321300ff 0xafb30018 0x8c720000 0xafb20010 0x8c7f0004 0xafbf000c 0x8c790008 0xafb90020 0x8fa80018 0xaca8ffc0 0x90710001 0x90700002 0x119200 0x109c00 0x907f0000 0x90790003 0x30a4021 0x253c021 0x90730005 0x90720006 0x31f8021 0x198e00 0x13fa00 0x90790004 0x12c400 0x90730007 0x2118021 0x3f88821 0x239f821 0x90790009 0x9071000a 0x139600 0x3f2c021 0x199a00 0x907f0008 0x119400 0x9071000b 0x272c821 0x33f9021 0x119e00 0x253f821 0x308c021 0x3e84021 0x8cf02 0x88900 0x3319825 0x21f8023 0x2138026 0x10fe82 0x109180 0x3108823 0x1184021 0x3f2c025 0x311f826 0x1fce02 0x1f9a00 0x2088021 0x3339025 0x11f4023 0x2484026 0x88c02 0x8c400 0x2089823 0x238c825 0x333c826 0x3f0f821 0x199342 0x1984c0 0x2508825 0x3f9c023 0x11f9821 0x238c026 0x333c821 0x9071000f 0x2788023 0x184702 0x9073000e 0x18f900 0x11f9025 0x2508026 0x13fc00 0x9072000c 0x9073000d 0x114600 0x319c021 0x11f8821 0x232f821 0x134200 0x189482 0x189b80 0x3e88821 0x2534025 0x218f826 0x3e8f823 0x239c821 0x1f82c0 0x1f8d42 0x2309025 0x3f99826 0x2729823 0x13c9c2 0x134640 0x3288825 0x2788026 0x2118023 0x109402 0x10c400 0x258c825 0x21f4026 0x1194023 0x8ff02 0x88900 0x113c026 0x3f19025 0x312c823 0x199c82 0x19fb80 0x27f8825 0x330c026 0x3118023 0x2089826 0x109202 0x272c823 0x333f0fff 0xafbf0014 0x8fa80014 0xaca8ffb8 0xac6b0000 0x8fb80014 0x188880 0x2298021 0x8e120000 0x242001b 0x4001f4 0x9810 0xafb30000 0x8fb20008 0x8fb3002c 0x8fb90000 0x273f0006 0x1f4080 0x884021 0x8d180004 0x8c910010 0x331900ff 0x118200 0x8c9f0004 0x3308821 0x8d100004 0x11c080 0x10ca02 0x8d100004 0x8c910000 0x31fc021 0x323f0002 0x13e00007 0x333900ff 0x108c02 0x323000ff 0x2a7305dd 0x213c80a 0x3a520800 0x212c80b 0x331f0fff 0x1f4200 0x35180001 0x34088030 0xad180000 0x10e000bd 0x198380 0x34088000 0xad0d0000 0x34088004 0x14ccff4b 0x8d180000 0x34088034 0x80000a9 0xad0f0000 0x3544fe4c 0x3c099e37 0x30e70008 0x30c6000c 0x240b000c 0x240e0100 0x240a0006 0x2485ffb4 0x252979b9 0x3c0d0178 0x3c0c0170 0x34088004 0x10cb0077 0x8d0f0000 0x8c990000 0x194402 0xafa80008 0x8c980000 0x188a02 0x322f000f 0xafaf0030 0x8c900004 0x10fc02 0xafbf002c 0x8c930008 0x327200ff 0xafb20018 0x8fb90030 0x194080 0x1044021 0x8d18000c 0x188b02 0x322f000f 0xafaf0028 0x8d10000c 0x321f003f 0xafbf0024 0x8fb30018 0x126a0064 0x0 0x8cbf0000 0xafbf0010 0x8cb20004 0xafb2000c 0x8ca80008 0xafa80020 0x8fb80010 0x8fb3000c 0x8fa80020 0x3097821 0x269f821 0x1e88023 0x21f8823 0x8cb42 0x2398826 0x3e89023 0x251c023 0x119a00 0x2789826 0x1117823 0x1f3c823 0x138342 0x219c826 0x233f823 0x3f94023 0x199302 0x2489026 0x279c023 0x3127823 0x128c00 0x22f8826 0x3328023 0x2119823 0x11f942 0x3f39826 0x2514023 0x113c023 0x13c8c2 0x3389026 0x2337823 0x1f2f823 0x128280 0x21fc826 0x2724023 0x119c023 0x198bc2 0x2387826 0xafaf0014 0x8fb00014 0x202001b 0x4001f4 0xf810 0xafbf0000 0x8fb10008 0x8fb2002c 0x8fb90000 0x273f0006 0x1f4080 0x684021 0x8d0f0004 0x8c780010 0x8c7f0004 0x189a00 0x8d180004 0x31f000ff 0x213c821 0x188202 0x321800ff 0x8d100004 0x8c730000 0x197880 0x32790002 0x13200007 0x1ff7821 0x108402 0x321300ff 0x2a5205dd 0x272c00a 0x3a310800 0x271c00b 0x31ff0fff 0x1f4200 0x350f0001 0x34088030 0xad0f0000 0x10e00009 0x18cb80 0x34088000 0xad0c0000 0x34088004 0x14cbff8b 0x8d0f0000 0x34088034 0x8000170 0xad0e0000 0x32dc025 0x34088000 0x800016d 0xad180000 0x8fb30024 0x32720010 0x1240ff9a 0x0 0x8fb80028 0x8fb10030 0x8fbf002c 0x2387821 0xf8080 0x161fff93 0x0 0x8d130004 0x139402 0xafb2001c 0x8fb9001c 0x322001b 0x4001f4 0x4010 0x80001bf 0xafa80000 0x30e20020 0x10400017 0x30e60040 0x24030002 0x3c020170 0x34088004 0x8d040000 0x34088030 0xad030000 0x34088000 0x8000206 0xad020000 0x8faa0004 0x25490001 0xafa90004 0x8fa50004 0x2cad0064 0x11a0fe80 0x0 0x800020d 0x0 0x20ec825 0x34088000 0x80000a6 0xad190000 0x10c0000a 0x30ef0010 0x24030006 0x3c020170 0x34088004 0x8d040000 0x34088030 0xad030000 0x34088000 0x800021e 0xad020000 0x11e00009 0x24030004 0x3c020170 0x34088004 0x8d040000 0x34088030 0xad030000 0x34088000 0x8000228 0xad020000 0x30e70080 0x10e0000a 0x3c0b0020 0x25630001 0x3c020170 0x34088004 0x8d040000 0x34088030 0xad030000 0x34088000 0x8000234 0xad020000 0x1021 0x8fb30044 0x8fb20040 0x8fb1003c 0x8fb00038 0x3e00008 0x27bd0048>;
+				};
+			};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00200000>; // Spill address will be allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>;
+                freein-fifo-spill-num-descs = <1200>;
+
+		/* If port-fifo-en is not specified(0/1), it will be set to 1 
+		   while building the linux dtb file. For all the othercases it will be set to 0.
+		   See build-dtb.sh. If required, user can explicitly set the value here.
+		   */
+		port-fifo-en = <1>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+		
+		distribution-enable = <1>;
+		// 16 bit mask
+		dist-drop-enable = <0>;	 
+		// 8 bit mask
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+		class-map-mode = <0>;                       /* 0:All NAE, 1:Class 7-4 reserved for CPU, 2:Class 7-5 reserved for CPU,
+                                                           3:Class 7-6 reserved for CPU, 4:Class 7 reserved for CPU */
+
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        // Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;  
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+			mgmt-port = <1 0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+ 		               
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+nae@node-2 {
+
+};
+nae@node-3 {
+
+};
+		nodes {
+			num-nodes = <1>;
+		};
+
+	};
+	frequency-config {
+		nae = <500>;
+		sae = <500>;
+		rsa = <500>;
+		dtre = <250>;
+		cde = <250>;
+	};
+};
+
diff --git a/arch/mips/boot/dts/xlp9xx-helinux.dts b/arch/mips/boot/dts/xlp9xx-helinux.dts
new file mode 100644
index 0000000..1a41b36
--- /dev/null
+++ b/arch/mips/boot/dts/xlp9xx-helinux.dts
@@ -0,0 +1,130 @@
+/* XLP9XX Device Tree Source
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "netlogic,XLP-GVP";
+        compatible = "netlogic,xlp";
+        #address-cells = <2>;
+        #size-cells = <2>;
+
+        memory {
+                device_type = "memory";
+                reg =  <0 0x00100000 0 0x0FF00000       // 255M at 1M
+                        0 0x20000000 0 0x10000000>;     // 256M at 512M
+        };
+
+        /* memory range for HEv2 pkt mem. Only one contig memory per node supported */
+	/* size 0 will be ignored. */
+        pktmem {
+                device_type = "pktmem";
+
+                /* format: node number, 64-bit addr, 64-bit size */
+                reg = <0 0x0 0x30000000 0x0 0x1000000
+                       1 0x0 0x0 0x0 0x0
+                       2 0x0 0x0 0x0 0x0
+                       3 0x0 0x0 0x0 0x0>;
+        };
+
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			fmn {
+				node_0_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+				node_1_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+				node_2_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+				node_3_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+                        };
+			dtre {
+				dtre_init_only = <0>;
+			};
+			owner-config {
+				fmn = <0x1>;
+			};
+		};
+		dom@1 {
+			device_type = "domain";
+
+			cpu {   
+                                onlinemask = <0xffff>; 
+                                nae-rx-vc = <2>;
+			};
+			resource-allocation {
+				net@0 {
+					port-mask = <0x3 0 0 0>;
+					frinlifo-mask = <0xff 0 0 0>;
+					frinlifo-shared-mode = <0 0 0 0>;
+					vfbid-sw-offset = <0 0 0 0>;
+					vfbid-sw-entries = <0 0 0 0>;
+					ucore-mask = <0x2 0 0 0>;
+					sram-off = <0 0 0 0>;
+				};
+				net@1 {
+                                        port-mask = <0x3 0 0 0>;
+                                        frinlifo-mask = <0xff 0 0 0>;
+                                        frinlifo-shared-mode = <0 0 0 0>;
+                                        vfbid-sw-offset = <0 0 0 0>;
+                                        vfbid-sw-entries = <0 0 0 0>;
+                                        ucore-mask = <0x2 0 0 0>;
+                                        sram-off = <0 0 0 0>;
+                                };
+			};
+			app-param{
+                                onlinemask = <0xffff>;
+			};
+		};
+	};
+
+	chosen {
+		netlogic,cpumask = <0xffff>;
+		bootargs = " console=ttyS0,115200 clocksource=TSC rhash_entries=1048576 selinux=0 enforcing=0";
+		linux,initrd-start=<0x0>;
+		linux,initrd-end=<0x0>;
+	};
+
+	soc {
+		#address-cells = <2>;
+		#size-cells = <1>;
+		compatible = "simple-bus";
+		ranges = <0 0  0 0x18000000  0x04000000   // PCIe CFG
+			  1 0  0 0x16000000  0x02000000>; // GBU chipselects
+
+		serial0: serial@30000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x112100 0x20>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <125000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <17>;
+		};
+		serial1: serial@31000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x112120 0x20>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <125000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <18>;
+		};
+		pic: pic@11000 {
+			interrupt-controller;
+			#address-cells = <0>;
+			#interrupt-cells = <1>;
+			reg = <0 0x110000 0x200>;
+		};
+
+		nodes {
+			num-nodes = <1>;
+		};
+
+	};
+};
+
diff --git a/arch/mips/boot/dts/xlp9xx-linux-guest.dts b/arch/mips/boot/dts/xlp9xx-linux-guest.dts
new file mode 100644
index 0000000..ea98e43
--- /dev/null
+++ b/arch/mips/boot/dts/xlp9xx-linux-guest.dts
@@ -0,0 +1,103 @@
+/* XLP9XX Device Tree Source
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "netlogic,XLP-GVP";
+        compatible = "netlogic,xlp";
+        #address-cells = <2>;
+        #size-cells = <2>;
+
+        memory {
+                device_type = "memory";
+                reg =  <0 0x00100000 0 0x0FF00000       // 255M at 1M
+                        0 0x20000000 0 0x10000000>;     // 256M at 512M
+        };
+
+        /* memory range for HEv2 pkt mem. Only one contig memory per node supported */
+	/* size 0 will be ignored. */
+        pktmem {
+                device_type = "pktmem";
+
+                /* format: node number, 64-bit addr, 64-bit size */
+                reg = <0 0x0 0x30000000 0x0 0x1000000
+                       1 0x0 0x0 0x0 0x0
+                       2 0x0 0x0 0x0 0x0
+                       3 0x0 0x0 0x0 0x0>;
+        };
+
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			fmn {
+				node_0_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+				node_1_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+				node_2_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+				node_3_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+                        };
+			dtre {
+				dtre_init_only = <0>;
+			};
+			owner-config {
+				fmn = <0x1>;
+			};
+		};
+		dom@1 {
+			device_type = "domain";
+
+			cpu {   
+                                onlinemask = <0xffff>; 
+                                nae-rx-vc = <2>;
+			};
+			resource-allocation {
+				net@0 {
+					port-mask = <0x3 0 0 0>;
+					frinlifo-mask = <0xff 0 0 0>;
+					frinlifo-shared-mode = <0 0 0 0>;
+					vfbid-sw-offset = <0 0 0 0>;
+					vfbid-sw-entries = <0 0 0 0>;
+					ucore-mask = <0x2 0 0 0>;
+					sram-off = <0 0 0 0>;
+				};
+				net@1 {
+                                        port-mask = <0x3 0 0 0>;
+                                        frinlifo-mask = <0xff 0 0 0>;
+                                        frinlifo-shared-mode = <0 0 0 0>;
+                                        vfbid-sw-offset = <0 0 0 0>;
+                                        vfbid-sw-entries = <0 0 0 0>;
+                                        ucore-mask = <0x2 0 0 0>;
+                                        sram-off = <0 0 0 0>;
+                                };
+			};
+			app-param{
+                                onlinemask = <0xffff>;
+			};
+		};
+	};
+
+	chosen {
+		netlogic,cpumask = <0xffff>;
+		bootargs = " console=ttyS0,115200 clocksource=TSC rhash_entries=1048576 selinux=0 enforcing=0";
+		linux,initrd-start=<0x0>;
+		linux,initrd-end=<0x0>;
+	};
+
+	soc {
+		#address-cells = <2>;
+		#size-cells = <1>;
+		compatible = "simple-bus";
+		ranges = <0 0  0 0x18000000  0x04000000   // PCIe CFG
+			  1 0  0 0x16000000  0x02000000>; // GBU chipselects
+
+		nodes {
+			num-nodes = <1>;
+		};
+
+	};
+};
+
-- 
1.9.1

