From 9798a20df782e50c141356782753fabe0d5fac26 Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Tue, 17 Aug 2010 23:34:11 -0700
Subject: [PATCH 142/761] clean up smp.c mmu.c irq.c

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/irq.c |    8 --------
 arch/mips/netlogic/xlp/mmu.c |    2 +-
 arch/mips/netlogic/xlp/smp.c |   29 ++---------------------------
 3 files changed, 3 insertions(+), 36 deletions(-)

diff --git a/arch/mips/netlogic/xlp/irq.c b/arch/mips/netlogic/xlp/irq.c
index 9a8a783..4109086 100644
--- a/arch/mips/netlogic/xlp/irq.c
+++ b/arch/mips/netlogic/xlp/irq.c
@@ -496,19 +496,11 @@ void __init arch_init_irq(void)
 		return;
 #endif
 
-	/* TODO:
-	 * Initialize the irq registers on the PIC to route
-	 * interrupts to appropriate pins
-	 */
-
 	/* Initialize the irq descriptors */
 	init_nlm_common_irqs();
 
 	write_64bit_cp0_eimr(nlm_xlp_irq_mask);
 
-	/*
-		dumpall_irt_entry();
-	*/
 }
 
 asmlinkage void plat_irq_dispatch(void)
diff --git a/arch/mips/netlogic/xlp/mmu.c b/arch/mips/netlogic/xlp/mmu.c
index 9312ca1..ea902be 100644
--- a/arch/mips/netlogic/xlp/mmu.c
+++ b/arch/mips/netlogic/xlp/mmu.c
@@ -1,5 +1,5 @@
 /***********************************************************************
- * Copyright 2003-2010 Netlogic Microsystems (�~@~\Netlogic�~@~]). All rights
+ * Copyright 2003-2010 Netlogic Microsystems (�"Netlogic" ). All rights
  * reserved.
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are
diff --git a/arch/mips/netlogic/xlp/smp.c b/arch/mips/netlogic/xlp/smp.c
index 18fea75..f64e30d 100644
--- a/arch/mips/netlogic/xlp/smp.c
+++ b/arch/mips/netlogic/xlp/smp.c
@@ -1,5 +1,5 @@
 /***********************************************************************
-Copyright 2003-2010 Netlogic Microsystems (“Netlogic”). All rights
+Copyright 2003-2010 Netlogic Microsystems ( "Netlogic" ). All rights
 reserved.
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
@@ -81,8 +81,8 @@ void nlm_send_ipi_mask(const struct cpumask * mask, unsigned int action)
 extern void nlm_smp_irq_init(void);
 static void __cpuinit nlm_init_secondary(void)
 {
-    nlm_smp_irq_init();
     /* Time init for this cpu is done in mips_clockevent_init() */
+    nlm_smp_irq_init();
 }
 
 void nlm_smp_finish(void)
@@ -250,37 +250,12 @@ extern uint32_t xlp_linux_cpu_mask;
 
 int wakeup_secondary_cpus(void)
 {
-#if 1 
 	smp_node.onlinemask[0] = xlp_linux_cpu_mask;
 	smp_node.onlinemask[1] = 0x00000000;
 	smp_node.onlinemask[2] = 0x00000000;
 	smp_node.onlinemask[3] = 0x00000000;
 
 	enable_cpus( 0, smp_node.onlinemask[0]);
-#else
-	__u32 wakeup_mask;
-#if defined(CONFIG_NLM_XLP_SIM)
-	unsigned int wait_count = 0;
-#endif
-
-	{
-		if (wakeup != NULL) {
-			wakeup((void *)secondary_cpus_bootup_func, 0, 
-				   (__u32)prom_info->nlm_cpu_online_map & (~smp_boot.online_map));
-#if defined(CONFIG_NLM_XLP_SIM)
-			while (smp_boot.online_map != prom_info->nlm_cpu_online_map) {
-				if ((wait_count++ % 1000000) == 0) {
-					printk("[%s%d]: Master cpu waiting for slave cpus to wakeup from bootloader (%x != %llx)\n",
-					       __FUNCTION__, __LINE__, smp_boot.online_map, 
-						   (unsigned long long) prom_info->nlm_cpu_online_map);
-				}
-			}
-			printk("[%s@%d]: woke up prom_info->nlm_cpu_online_map=%016llx\n", __FILE__, __LINE__, 
-				   (unsigned long long) prom_info->nlm_cpu_online_map);
-#endif
-		}
-	}
-#endif
 	return 0;
 }
 
-- 
1.7.10.4

