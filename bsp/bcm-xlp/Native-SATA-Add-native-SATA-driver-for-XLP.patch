From 86d9df1335b965a0db0056510e50ca36428697a2 Mon Sep 17 00:00:00 2001
From: Anurag <anurag.gopinath@broadcom.com>
Date: Wed, 3 Oct 2012 18:27:50 +0530
Subject: [PATCH 598/761] Native SATA : Add native SATA driver for XLP

Based on Broadcom SDK 2.3.

Signed-off-by: Anurag <anurag.gopinath@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/netlogic/xlp_sata.h |   49 ++++++++++++++++
 arch/mips/netlogic/xlp/Makefile           |    1 +
 arch/mips/netlogic/xlp/irq.c              |    1 +
 arch/mips/netlogic/xlp/sata-init.c        |   91 +++++++++++++++++++++++++++++
 drivers/ata/ahci.c                        |    8 +++
 drivers/ata/ahci.h                        |    6 ++
 6 files changed, 156 insertions(+)
 create mode 100644 arch/mips/include/asm/netlogic/xlp_sata.h
 create mode 100644 arch/mips/netlogic/xlp/sata-init.c

diff --git a/arch/mips/include/asm/netlogic/xlp_sata.h b/arch/mips/include/asm/netlogic/xlp_sata.h
new file mode 100644
index 0000000..75c1839
--- /dev/null
+++ b/arch/mips/include/asm/netlogic/xlp_sata.h
@@ -0,0 +1,49 @@
+#ifndef CONFIG_NLM_XLP /* temporary tripwire */
+#error "Should only be used by XLP"
+#endif
+/***********************************************************************
+ * Copyright 2003-2010 Netlogic Microsystems ("Netlogic"). All rights
+ * reserved.
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are
+ * met:
+ * 1. Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in
+ * the documentation and/or other materials provided with the
+ * distribution.
+ * THIS SOFTWARE IS PROVIDED BY Netlogic Microsystems ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NETLOGIC OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ * *****************************#NETL_2#********************************/
+#ifndef __XLP_SATA_H
+#define __XLP_SATA_H
+
+#define PIC_IRT_SATA_0                  143
+
+int nlm_xlp_nativesata;
+
+static __inline__ int32_t sata_reg_read(int node, int regidx)
+{
+	volatile uint64_t mmio;
+	mmio = nlm_hal_get_dev_base(node, 0, SATA_DEV_NUM, SATA_FUNC_NUM);
+	return nlm_hal_read_32bit_reg(mmio, regidx);
+}
+
+static __inline__ void sata_reg_write(int node, int regidx, int32_t val)
+{
+	volatile uint64_t mmio;
+	mmio = nlm_hal_get_dev_base(node, 0, XLP_PCIE_USB_DEV, SATA_FUNC_NUM);
+	nlm_hal_write_32bit_reg(mmio, regidx, val);
+}
+
+#endif //__XLP_SATA_H
diff --git a/arch/mips/netlogic/xlp/Makefile b/arch/mips/netlogic/xlp/Makefile
index a24ed59..7361f0e 100644
--- a/arch/mips/netlogic/xlp/Makefile
+++ b/arch/mips/netlogic/xlp/Makefile
@@ -11,6 +11,7 @@ obj-$(CONFIG_PCI_MSI)		+= msi.o
 obj-$(CONFIG_KGDB)      += nmi.o
 obj-$(CONFIG_NLM_XLP) += cop2.o
 obj-$(CONFIG_XLP_CPUFREQ) += xlp-cpufreq.o
+obj-$(CONFIG_SATA_AHCI) += sata-init.o
 obj-$(CONFIG_RAPIDIO)  += xlp_srio.o
 
 ifeq ($(CONFIG_XEN),y)
diff --git a/arch/mips/netlogic/xlp/irq.c b/arch/mips/netlogic/xlp/irq.c
index ffe90d4..615b84f 100644
--- a/arch/mips/netlogic/xlp/irq.c
+++ b/arch/mips/netlogic/xlp/irq.c
@@ -548,6 +548,7 @@ void __init init_xlp_irqs(void)
 			(0x3ULL << (XLP_IRQ_RESERVED_MAX + 18)) |	/* nae */
 			(0x3ULL	<< (XLP_IRQ_RESERVED_MAX + 26))| /* uart */
 			(0x3ULL	<< (XLP_IRQ_RESERVED_MAX + 23))| /* uart on xlp3xx*/
+                        (0x1ULL << (XLP_IRQ_RESERVED_MAX + 29))| /* sata */
 	//		(0xfULL << 13) |	/* gpio */
 //			(0x1ULL << 31) |	/* SATA on xlp3xx */
 //			(0x1ULL << 30) |	/* SMSC  - xlp3xx */
diff --git a/arch/mips/netlogic/xlp/sata-init.c b/arch/mips/netlogic/xlp/sata-init.c
new file mode 100644
index 0000000..4be6346
--- /dev/null
+++ b/arch/mips/netlogic/xlp/sata-init.c
@@ -0,0 +1,91 @@
+/*
+ * Copyright (c) 2003-2012 Broadcom Corporation
+ * All Rights Reserved
+ *
+ * This software is available to you under a choice of one of two
+ * licenses.  You may choose to be licensed under the terms of the GNU
+ * General Public License (GPL) Version 2, available from the file
+ * COPYING in the main directory of this source tree, or the Broadcom
+ * license below:
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY BROADCOM ``AS IS'' AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL BROADCOM OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+ * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+ * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include <linux/dma-mapping.h>
+#include <linux/kernel.h>
+#include <linux/delay.h>
+#include <linux/init.h>
+#include <linux/pci.h>
+#include <linux/platform_device.h>
+
+#include <asm/netlogic/hal/nlm_hal.h>
+#include <asm/netlogic/xlp_irq.h>
+#include <asm/netlogic/xlp.h>
+#include <asm/netlogic/xlp_sata.h>
+
+extern void nlm_hal_sata_init(void);
+extern void nlm_hal_sata_intr_setup(void);
+
+__inline__ u32 sata_local_readl(volatile void __iomem *addr){
+        if(nlm_xlp_nativesata)
+                return __raw_readl(addr);
+        else
+                return __le32_to_cpu(__raw_readl(addr));
+}
+__inline__ void sata_local_writel(u32 val, volatile void __iomem *addr){
+        if(nlm_xlp_nativesata)
+                __raw_writel(val, addr);
+        else
+                __raw_writel(__cpu_to_le32(val), addr);
+}
+
+
+static int __init nlm_platform_sata_init(void)
+{
+	pr_info("Initializing SATA Interface\n");
+
+        nlm_hal_sata_init();
+	/* Enable PHY interrupts */
+        nlm_hal_sata_intr_setup();
+
+	return 0;
+}
+
+arch_initcall(nlm_platform_sata_init);
+
+static u64 xlp_sata_dmamask = ~(u32)0;
+
+/* Fixup the IRQ for SATA device which is exist on XLP SOC PCIE bus */
+static void nlm_sata_fixup_final(struct pci_dev *dev)
+{
+	dev->dev.dma_mask		= &xlp_sata_dmamask;
+	dev->dev.coherent_dma_mask	= DMA_BIT_MASK(32);
+	switch (dev->devfn) {
+	case 0x1A:
+	       dev->irq = xlp_irt_to_irq(0, PIC_IRT_SATA_0);
+	       break;
+	}
+}
+DECLARE_PCI_FIXUP_FINAL(PCI_NETL_VENDOR, 0x101A,
+		nlm_sata_fixup_final);
diff --git a/drivers/ata/ahci.c b/drivers/ata/ahci.c
index 71a4d04..c0e6d96 100644
--- a/drivers/ata/ahci.c
+++ b/drivers/ata/ahci.c
@@ -56,6 +56,7 @@ enum {
 	AHCI_PCI_BAR_ENMOTUS	= 2,
 	AHCI_PCI_BAR_STANDARD	= 5,
 };
+extern int nlm_xlp_nativesata;
 
 enum board_ids {
 	/* board IDs by feature in alphabetical order */
@@ -418,6 +419,8 @@ static const struct pci_device_id ahci_pci_tbl[] = {
 	{ PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID,
 	  PCI_CLASS_STORAGE_SATA_AHCI, 0xffffff, board_ahci },
 
+        { PCI_VDEVICE(NETLOGIC, 0x101a), board_ahci },
+
 	{ }	/* terminate list */
 };
 
@@ -1068,6 +1071,11 @@ static int ahci_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)
 	if (pdev->vendor == PCI_VENDOR_ID_MARVELL && !marvell_enable)
 		return -ENODEV;
 
+	if (pdev->vendor == PCI_VENDOR_ID_NETLOGIC && pdev->device == 0x101A) {
+		ahci_pci_bar = 0;
+                nlm_xlp_nativesata = 1;
+        }
+
 	/*
 	 * For some reason, MCP89 on MacBook 7,1 doesn't work with
 	 * ahci, use ata_generic instead.
diff --git a/drivers/ata/ahci.h b/drivers/ata/ahci.h
index bb26d5c..33678ab 100644
--- a/drivers/ata/ahci.h
+++ b/drivers/ata/ahci.h
@@ -48,6 +48,10 @@
 #define EM_MSG_LED_VALUE_OFF          0xfff80000
 #define EM_MSG_LED_VALUE_ON           0x00010000
 
+extern int nlm_xlp_nativesata;
+#define readl(x)        sata_local_readl(x)
+#define writel(x,y)     sata_local_writel(x,y)
+
 enum {
 	AHCI_MAX_PORTS		= 32,
 	AHCI_MAX_SG		= 168, /* hardware max is 64K */
@@ -365,5 +369,7 @@ static inline int ahci_nr_ports(u32 cap)
 {
 	return (cap & 0x1f) + 1;
 }
+u32 sata_local_readl(volatile void __iomem *addr);
+void sata_local_writel(u32 val, volatile void __iomem *addr);
 
 #endif /* _AHCI_H */
-- 
1.7.10.4

