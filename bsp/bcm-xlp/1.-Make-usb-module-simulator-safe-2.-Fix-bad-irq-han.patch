From e127ee2ab3b9c70a737523d1c5ecafc677800f4e Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Tue, 23 Nov 2010 17:05:50 -0800
Subject: [PATCH 223/761] 1. Make usb module simulator safe 2. Fix bad irq
 handler warning bug

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/platform.c |   55 +++++++++++++++++++------------------
 drivers/usb/host/ehci-pci.c       |    6 ++--
 drivers/usb/host/ohci-pci.c       |    6 ++--
 3 files changed, 35 insertions(+), 32 deletions(-)

diff --git a/arch/mips/netlogic/xlp/platform.c b/arch/mips/netlogic/xlp/platform.c
index e26ffb3..747ae86 100644
--- a/arch/mips/netlogic/xlp/platform.c
+++ b/arch/mips/netlogic/xlp/platform.c
@@ -45,7 +45,12 @@ THE POSSIBILITY OF SUCH DAMAGE.
 
 #define XLP_MAX_DEVICE		8
 #define XLP_MAX_FUNC		8
-#define MAX_DEV2DRV			10
+#define MAX_DEV2DRV		10
+#define MAX_NUM_UARTS		4
+#define UART_CLK 		133333333
+#define XLP_UART_PORTIO_OFFSET	0x1000
+
+static struct plat_serial8250_port xlp_uart_port[MAX_NUM_UARTS];
 
 static u64 xlp_dev_dmamask = DMA_BIT_MASK(32);
 
@@ -85,26 +90,22 @@ void xlp_uart_out(struct uart_port *p, int offset, int value)
 	netlogic_write_reg(mmio, 0, value);
 }
 
-#define PORT(_base, _irq) 					\
-{                                       	\
-	.iobase         = _base,                \
-	.membase        = (void __iomem *)_base,\
-	.mapbase        = _base,                \
-	.irq            = _irq,                 \
-	.regshift       = 2,                    \
-	.iotype         = UPIO_NLM,             \
-	.flags          = (UPF_SKIP_TEST|UPF_FIXED_TYPE|UPF_BOOT_AUTOCONF),\
-	.uartclk        = 133333333,          	\
-	.type           = PORT_16550A,          \
-	.serial_in      = xlp_uart_in,      	\
-	.serial_out     = xlp_uart_out,     	\
+static void xlp_init_uart(int port_id)
+{
+        xlp_uart_port[port_id].mapbase       = DEFAULT_NETLOGIC_IO_BASE 
+						+ NETLOGIC_IO_UART_0_OFFSET + port_id * XLP_UART_PORTIO_OFFSET;
+        xlp_uart_port[port_id].membase       = (void __iomem *)xlp_uart_port[port_id].mapbase;
+        xlp_uart_port[port_id].irq           = PIC_UART_0_IRQ + port_id;
+
+        xlp_uart_port[port_id].uartclk       = UART_CLK;
+        xlp_uart_port[port_id].iotype        = UPIO_NLM;
+        xlp_uart_port[port_id].flags         = UPF_SKIP_TEST|UPF_FIXED_TYPE|UPF_BOOT_AUTOCONF;
+        xlp_uart_port[port_id].type          = PORT_16550A;
+        xlp_uart_port[port_id].regshift      = 2;
+        xlp_uart_port[port_id].serial_in     = xlp_uart_in;
+        xlp_uart_port[port_id].serial_out    = xlp_uart_out;
 }
 
-static struct plat_serial8250_port xlp_uart_data[] = {
-	PORT(DEFAULT_NETLOGIC_IO_BASE+NETLOGIC_IO_UART_0_OFFSET, PIC_UART_0_IRQ),
-	PORT(DEFAULT_NETLOGIC_IO_BASE+NETLOGIC_IO_UART_1_OFFSET, PIC_UART_1_IRQ),
-};
-
 static void xlp_usb_hw_start(int ctrl_no)
 {
 	int val;
@@ -205,9 +206,8 @@ static int xlp_find_pci_dev(void)
 						}
 
 						if(devid == XLP_DEVID_UART) {
-							platform_device_add_data(pplatdev,
-								(const void*) &xlp_uart_data[dev2drv_table[idx].id], 
-								sizeof( struct plat_serial8250_port));	
+							pplatdev->dev.platform_data = &xlp_uart_port[dev2drv_table[idx].id];
+							xlp_init_uart(dev2drv_table[idx].id);
 						}
 
 						dev2drv_table[idx].id = dev2drv_table[idx].id + 1;	
@@ -217,7 +217,10 @@ static int xlp_find_pci_dev(void)
 						pres[0].flags	= IORESOURCE_MEM;
 
 						irt = (nlm_hal_read_32bit_reg(mmio, DEV_IRT_INFO) & 0xFFFF);
-						irq = nlm_hal_request_shared_irq(  irt & 0xFFFF);
+					   	if(nlm_hal_is_shared_irt(irt))
+							irq = nlm_hal_request_shared_irq(irt);
+						else
+							irq = nlm_hal_irt_to_irq(irt);
 
 						pres[1].start	= irq;
 						pres[1].end		= irq;
@@ -229,8 +232,7 @@ static int xlp_find_pci_dev(void)
 
 						pplatdev->dev.coherent_dma_mask = DMA_BIT_MASK(32);
 
-						if (devid != XLP_DEVID_UART)
-							platform_device_add( pplatdev);
+						platform_device_add( pplatdev);
 					}
 				}
 			}
@@ -243,9 +245,10 @@ static int xlp_find_pci_dev(void)
 static int __init platform_devinit(void)
 {
 	xlp_find_pci_dev();
+#ifdef CONFIG_USB
 	xlp_usb_hw_start(0);
 	xlp_usb_hw_start(3);
-
+#endif
 	return 0;
 }
 
diff --git a/drivers/usb/host/ehci-pci.c b/drivers/usb/host/ehci-pci.c
index 9c3688d..386fdd5 100644
--- a/drivers/usb/host/ehci-pci.c
+++ b/drivers/usb/host/ehci-pci.c
@@ -33,7 +33,7 @@
 /* defined here to avoid adding to pci_ids.h for single instance use */
 #define PCI_DEVICE_ID_INTEL_CE4100_USB	0x2e70
 
-#ifdef CONFIG_NLM_XLP
+#if defined(CONFIG_NLM_XLP) && defined(CONFIG_USB)
 
 #include <asm/netlogic/hal/nlm_hal.h>
 #include <asm/netlogic/hal/nlm_hal_pic.h>
@@ -590,7 +590,7 @@ static const struct hc_driver ehci_pci_hc_driver = {
 
 /* PCI driver selection metadata; PCI hotplugging uses this */
 static const struct pci_device_id pci_ids [] = { {
-#ifdef CONFIG_NLM_XLP
+#if defined(CONFIG_NLM_XLP) && defined(CONFIG_USB)
 	{
 		.vendor		 = PCI_VENDOR_ID_NETLOGIC,
 		.device		 = XLP_DEVID_EHCI,
@@ -617,7 +617,7 @@ MODULE_DEVICE_TABLE(pci, pci_ids);
 static struct pci_driver ehci_pci_driver = {
 	.name =		(char *) hcd_name,
 	.id_table =	pci_ids,
-#ifdef CONFIG_NLM_XLP
+#if defined(CONFIG_NLM_XLP) && defined(CONFIG_USB)
 	.probe =	xlp_ehci_hcd_pci_probe,
 #else
 	.probe =	usb_hcd_pci_probe,
diff --git a/drivers/usb/host/ohci-pci.c b/drivers/usb/host/ohci-pci.c
index efee824..23514be 100644
--- a/drivers/usb/host/ohci-pci.c
+++ b/drivers/usb/host/ohci-pci.c
@@ -30,7 +30,7 @@
 #include <linux/io.h>
 
 
-#ifdef CONFIG_NLM_XLP
+#if defined(CONFIG_NLM_XLP) && defined(CONFIG_USB)
 
 #include <asm/netlogic/hal/nlm_hal.h>
 #include <asm/netlogic/hal/nlm_hal_pic.h>
@@ -457,7 +457,7 @@ static const struct hc_driver ohci_pci_hc_driver = {
 
 
 static const struct pci_device_id pci_ids [] = { {
-#ifdef CONFIG_NLM_XLP
+#if defined(CONFIG_NLM_XLP) && defined(CONFIG_USB)
 	{
 		.vendor         = PCI_VENDOR_ID_NETLOGIC,
 		.device         = XLP_DEVID_OHCI,
@@ -484,7 +484,7 @@ MODULE_DEVICE_TABLE (pci, pci_ids);
 static struct pci_driver ohci_pci_driver = {
 	.name =		(char *) hcd_name,
 	.id_table =	pci_ids,
-#ifdef CONFIG_NLM_XLP
+#if defined(CONFIG_NLM_XLP) && defined(CONFIG_USB)
 	.probe =    xlp_ohci_hcd_pci_probe,
 #else
 	.probe =	usb_hcd_pci_probe,
-- 
1.7.10.4

