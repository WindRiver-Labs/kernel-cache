From 1bb9fbafe0c16054aad276cfe59d05ffd5908070 Mon Sep 17 00:00:00 2001
From: Zi Shen Lim <zlim@netlogicmicro.com>
Date: Mon, 9 Jan 2012 18:41:08 -0800
Subject: [PATCH 506/762] XLR: cleanup, purge redundant code

Based on Broadcom SDK 2.3.

Signed-off-by: Zi Shen Lim <zlim@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/netlogic/interrupt.h |   87 ++++++++----------
 arch/mips/include/asm/netlogic/pic.h       |   12 +--
 arch/mips/include/asm/netlogic/xlr_pic.h   |  133 ----------------------------
 3 files changed, 41 insertions(+), 191 deletions(-)
 delete mode 100644 arch/mips/include/asm/netlogic/xlr_pic.h

diff --git a/arch/mips/include/asm/netlogic/interrupt.h b/arch/mips/include/asm/netlogic/interrupt.h
index 5fa0d53..1bc085d 100644
--- a/arch/mips/include/asm/netlogic/interrupt.h
+++ b/arch/mips/include/asm/netlogic/interrupt.h
@@ -1,60 +1,51 @@
-/***********************************************************************
-Copyright 2003-2010 Netlogic Microsystems (“Netlogic”). All rights
-reserved.
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-1. Redistributions of source code must retain the above copyright
-notice, this list of conditions and the following disclaimer.
-2. Redistributions in binary form must reproduce the above copyright
-notice, this list of conditions and the following disclaimer in
-the documentation and/or other materials provided with the
-distribution.
-THIS SOFTWARE IS PROVIDED BY Netlogic Microsystems ``AS IS'' AND
-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
-PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NETLOGIC OR CONTRIBUTORS BE LIABLE
-FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
-THE POSSIBILITY OF SUCH DAMAGE.
-*****************************#NETL_2#********************************/
+/*
+ * Copyright 2003-2011 NetLogic Microsystems, Inc. (NetLogic). All rights
+ * reserved.
+ *
+ * This software is available to you under a choice of one of two
+ * licenses.  You may choose to be licensed under the terms of the GNU
+ * General Public License (GPL) Version 2, available from the file
+ * COPYING in the main directory of this source tree, or the NetLogic
+ * license below:
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY NETLOGIC ``AS IS'' AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL NETLOGIC OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+ * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+ * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
 
 #ifndef _ASM_NLM_INTERRUPT_H
 #define _ASM_NLM_INTERRUPT_H
 
 #ifdef CONFIG_NLM_XLP
 #include <asm/netlogic/xlp_irq.h>
-#else
-#include <asm/netlogic/pic.h>
+#else /* CONFIG_NLM_XLP */
 
 /* Defines for the IRQ numbers */
-#define NR_IRQS			256
-#define IRQ_DUMMY_UART           2
-#define IRQ_IPI_SMP_FUNCTION     3
-#define IRQ_IPI_SMP_RESCHEDULE   4
-#define IRQ_REMOTE_DEBUG         5
-#define IRQ_MSGRING              6
-#define IRQ_TIMER                7
-#define IRQ_IPI_SMP_KGDB   		50
-#define IRQ_IPI_OPROFILE        51
 
-#define IRQ_IPI_CRF_MGMT_IPI	NLM_MANAGEMENT_IPI /* */
-#define IRQ_IPI_CRF_EVENTQ_IPI  NLM_EVENTQ_IPI
+#define IRQ_IPI_SMP_FUNCTION	3
+#define IRQ_IPI_SMP_RESCHEDULE	4
+#define IRQ_MSGRING		6
+#define IRQ_TIMER		7
 
-#ifdef CONFIG_NLMCOMMON_IP_FLOW_AFFINITY
-
-#define IRQ_IPI_NETRX           49
-#define SMP_NETRX_IPI           32
-
-#endif /* CONFIG_NLMCOMMON_IP_FLOW_AFFINITY */
-
-
-#define SMP_CALL_KGDB_HOOK 	8
-#define SMP_OPROFILE_IPI        16
-#endif		// CONFIG_NLM_XLP
+#endif /* CONFIG_NLM_XLP */
 
 #endif
diff --git a/arch/mips/include/asm/netlogic/pic.h b/arch/mips/include/asm/netlogic/pic.h
index 177ec80..76a42f3 100644
--- a/arch/mips/include/asm/netlogic/pic.h
+++ b/arch/mips/include/asm/netlogic/pic.h
@@ -26,6 +26,8 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #ifndef _ASM_NLM_PIC_H
 #define _ASM_NLM_PIC_H
 
+#if defined(CONFIG_NLM_XLP)
+
 #include <asm/netlogic/iomap.h>
 
 #ifndef __ASSEMBLY__
@@ -41,21 +43,11 @@ struct pic_tmask {
 
 #endif
 
-#if defined(CONFIG_NLM_XLP)
-
 // can't do floating in the kernel, so use 64 as an approximation 
 #define PIC_CLKS_PER_SEC 133333333ULL
 #define PIC_CLKS_PER_USEC 133	//(PIC_CLKS_PER_SEC / 1000000)
 #define PIC_CLKS_PER_TIMER_TICK (PIC_CLKS_PER_SEC / HZ)
 
-#else
-// can't do floating in the kernel, so use 64 as an approximation 
-#define PIC_CLKS_PER_SEC 66666666ULL
-#define PIC_CLKS_PER_USEC 66	//(PIC_CLKS_PER_SEC / 1000000)
-#define PIC_CLKS_PER_TIMER_TICK (PIC_CLKS_PER_SEC / HZ)
-
-#include <asm/netlogic/xlr_pic.h>
-#include <asm/netlogic/hal/nlm_hal_pic.h>
 #endif /* CONFIG_NLM_XLP */
 
 #endif /* #ifndef _ASM_NLM_PIC_H */
diff --git a/arch/mips/include/asm/netlogic/xlr_pic.h b/arch/mips/include/asm/netlogic/xlr_pic.h
deleted file mode 100644
index dfadb0d..0000000
--- a/arch/mips/include/asm/netlogic/xlr_pic.h
+++ /dev/null
@@ -1,133 +0,0 @@
-/***********************************************************************
-Copyright 2003-2010 Netlogic Microsystems (“Netlogic”). All rights
-reserved.
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-1. Redistributions of source code must retain the above copyright
-notice, this list of conditions and the following disclaimer.
-2. Redistributions in binary form must reproduce the above copyright
-notice, this list of conditions and the following disclaimer in
-the documentation and/or other materials provided with the
-distribution.
-THIS SOFTWARE IS PROVIDED BY Netlogic Microsystems ``AS IS'' AND
-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
-PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NETLOGIC OR CONTRIBUTORS BE LIABLE
-FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
-THE POSSIBILITY OF SUCH DAMAGE.
-*****************************#NETL_2#********************************/
-
-#ifndef _ASM_NLM_XLR_PIC_H
-#define _ASM_NLM_XLR_PIC_H
-
-#include <asm/netlogic/iomap.h>
-
-#define PIC_CLKS_PER_SEC 66666666ULL
-#ifdef XLS
-#define PIC_CDE_IRQ              (PIC_IRQ_BASE + PIC_IRT_CDE_INDEX)
-#define PIC_BRIDGE_TB_XLS_IRQ    (PIC_IRQ_BASE + PIC_IRT_BRIDGE_TB_XLS_INDEX)
-#endif /* XLS */
-#define PIC_IRT_GMAC0_INDEX            17
-#define PIC_IRT_GMAC1_INDEX            18
-#define PIC_IRT_GMAC2_INDEX            19
-#define PIC_IRT_GMAC3_INDEX            20
-#define PIC_IRT_XGS0_INDEX             21
-#define PIC_IRT_XGS1_INDEX             22
-#define PIC_IRT_HYPER_FATAL_INDEX      23
-#define PIC_IRT_PCIX_FATAL_INDEX       24
-#define PIC_IRT_BRIDGE_AERR_INDEX      25
-#define PIC_IRT_BRIDGE_BERR_INDEX     26
-#define PIC_IRT_BRIDGE_TB_XLR_INDEX    27
-#define PIC_IRT_BRIDGE_AERR_NMI_INDEX  28
-
-
-#define PIC_IRT_GMAC4_INDEX            21
-#define PIC_IRT_GMAC5_INDEX            22
-#define PIC_IRT_GMAC6_INDEX            23
-#define PIC_IRT_GMAC7_INDEX            24
-#define PIC_GMAC_0_IRQ            (PIC_IRQ_BASE + PIC_IRT_GMAC0_INDEX)
-#define PIC_GMAC_1_IRQ            (PIC_IRQ_BASE + PIC_IRT_GMAC1_INDEX)
-#define PIC_GMAC_2_IRQ            (PIC_IRQ_BASE + PIC_IRT_GMAC2_INDEX)
-#define PIC_GMAC_3_IRQ            (PIC_IRQ_BASE + PIC_IRT_GMAC3_INDEX)
-#define PIC_XGS_0_IRQ             (PIC_IRQ_BASE + PIC_IRT_XGS0_INDEX)
-#define PIC_XGS_1_IRQ             (PIC_IRQ_BASE + PIC_IRT_XGS1_INDEX)
-#define PIC_HYPER_FATAL_IRQ      (PIC_IRQ_BASE + PIC_IRT_HYPER_FATAL_INDEX)
-#define PIC_PCIX_FATAL_IRQ       (PIC_IRQ_BASE + PIC_IRT_PCIX_FATAL_INDEX)
-#define PIC_BRIDGE_AERR_IRQ      (PIC_IRQ_BASE + PIC_IRT_BRIDGE_AERR_INDEX)
-#define PIC_BRIDGE_BERR_IRQ      (PIC_IRQ_BASE + PIC_IRT_BRIDGE_BERR_INDEX)
-#define PIC_BRIDGE_TB_XLR_IRQ    (PIC_IRQ_BASE + PIC_IRT_BRIDGE_TB_XLR_INDEX)
-#define PIC_BRIDGE_AERR_NMI_IRQ  (PIC_IRQ_BASE + PIC_IRT_BRIDGE_AERR_NMI_INDEX)
-#define PIC_IRT_LAST_XLR_IRQ     PIC_BRIDGE_AERR_NMI_IRQ
-#define PIC_GMAC_4_IRQ           (PIC_IRQ_BASE + PIC_IRT_GMAC4_INDEX)
-#define PIC_GMAC_5_IRQ           (PIC_IRQ_BASE + PIC_IRT_GMAC5_INDEX)
-#define PIC_GMAC_6_IRQ           (PIC_IRQ_BASE + PIC_IRT_GMAC6_INDEX)
-#define PIC_GMAC_7_IRQ           (PIC_IRQ_BASE + PIC_IRT_GMAC7_INDEX)
-#ifdef XLS
-#define PIC_BRIDGE_ERR_IRQ       (PIC_IRQ_BASE + PIC_IRT_BRIDGE_ERR_INDEX)
-#define PIC_PCIE_LINK0_IRQ       (PIC_IRQ_BASE + PIC_IRT_PCIE_LINK0_INDEX)
-#define PIC_PCIE_LINK1_IRQ       (PIC_IRQ_BASE + PIC_IRT_PCIE_LINK1_INDEX)
-#define PIC_PCIE_LINK2_IRQ       (PIC_IRQ_BASE + PIC_IRT_PCIE_LINK2_INDEX)
-#define PIC_PCIE_LINK3_IRQ       (PIC_IRQ_BASE + PIC_IRT_PCIE_LINK3_INDEX)
-#define PIC_PCIE_XLSB0_LINK2_IRQ (PIC_IRQ_BASE + PIC_IRT_PCIE_XLSB0_LINK2_INDEX)
-#define PIC_PCIE_XLSB0_LINK3_IRQ (PIC_IRQ_BASE + PIC_IRT_PCIE_XLSB0_LINK3_INDEX)
-#define PIC_SRIO_LINK0_IRQ       (PIC_IRQ_BASE + PIC_IRT_SRIO_LINK0_INDEX)
-#define PIC_SRIO_LINK1_IRQ       (PIC_IRQ_BASE + PIC_IRT_SRIO_LINK1_INDEX)
-#define PIC_SRIO_LINK2_IRQ       (PIC_IRQ_BASE + PIC_IRT_SRIO_LINK2_INDEX)
-#define PIC_SRIO_LINK3_IRQ       (PIC_IRQ_BASE + PIC_IRT_SRIO_LINK3_INDEX)
-#define PIC_PCIE_INT_IRQ         (PIC_IRQ_BASE + PIC_IRT_PCIE_INT__INDEX)
-#define PIC_PCIE_FATAL_IRQ       (PIC_IRQ_BASE + PIC_IRT_PCIE_FATAL_INDEX)
-#define PIC_GPIO_B_IRQ           (PIC_IRQ_BASE + PIC_IRT_GPIO_B_INDEX)
-#define PIC_USB_IRQ              (PIC_IRQ_BASE + PIC_IRT_USB_INDEX)
-#define PIC_IRT_LAST_XLS_IRQ  PIC_USB_IRQ
-#endif /* XLS */
-
-/***************************************************************/
-
-/**************************************************************/
-//#define NETLOGIC_IO_PIC (netlogic_io_base + NETLOGIC_IO_PIC_OFFSET)
-
-//#define NETLOGIC_IO_XLR_PIC_IPI (NETLOGIC_IO_PIC + (4 << 2))
-/***************************************************************/
-#ifndef __ASSEMBLY__
-#define XLR_PIC_CTRL    0x00
-#define XLR_PIC_IPI     0x04
-#define XLR_PIC_INT_ACK 0x06
-static __inline__ void pic_send_ipi(__u32 ipi)
-{
-  nlm_reg_t *mmio = netlogic_io_mmio(NETLOGIC_IO_PIC_OFFSET);
-  netlogic_write_reg(mmio, XLR_PIC_IPI, ipi);
-}
-
-static __inline__ __u32 pic_read_control(void)
-{
-  nlm_reg_t *mmio = netlogic_io_mmio(NETLOGIC_IO_PIC_OFFSET);
-  return netlogic_read_reg(mmio, XLR_PIC_CTRL);
-}
-
-static __inline__ void pic_write_control(__u32 control)
-{
-  nlm_reg_t *mmio = netlogic_io_mmio(NETLOGIC_IO_PIC_OFFSET);
-  netlogic_write_reg(mmio, XLR_PIC_CTRL, control);
-}
-static __inline__ void pic_update_control(__u32 control)
-{
-  nlm_reg_t *mmio = netlogic_io_mmio(NETLOGIC_IO_PIC_OFFSET);
-  netlogic_write_reg(mmio, XLR_PIC_CTRL, (control | netlogic_read_reg(mmio, XLR_PIC_CTRL)));
-}
-
-struct pt_regs;
-extern void nlm_common_ipi_handler(int irq, struct pt_regs *regs);
-extern void nlm_common_msgring_int_handler(unsigned int irq, struct pt_regs *regs);
-extern void pic_setup_threadmask(unsigned int irt, uint32_t threadmask);
-extern int rmik_alloc_timer(void);
-extern int rmik_get_uart_status(int);
-
-#endif
-
-#endif /* _ASM_NLM_XLR_PIC_H */
-- 
1.7.0.4

