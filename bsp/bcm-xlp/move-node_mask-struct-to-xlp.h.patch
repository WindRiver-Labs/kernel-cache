From e3017b7103d53cf2ff3c9100a438d481ff4218ad Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Fri, 27 Aug 2010 16:56:01 -0700
Subject: [PATCH 155/761] move node_mask struct to xlp.h

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/netlogic/xlp.h        |    3 +++
 arch/mips/netlogic/xlp/cpu_control_macros.h |    3 ---
 arch/mips/netlogic/xlp/on_chip.c            |    1 -
 arch/mips/netlogic/xlp/setup.c              |   30 ++++++++++++++++++---------
 4 files changed, 23 insertions(+), 14 deletions(-)

diff --git a/arch/mips/include/asm/netlogic/xlp.h b/arch/mips/include/asm/netlogic/xlp.h
index ab0f823..0bdd580 100644
--- a/arch/mips/include/asm/netlogic/xlp.h
+++ b/arch/mips/include/asm/netlogic/xlp.h
@@ -100,5 +100,8 @@ struct smp_boot_info {
 extern struct smp_boot_info smp_boot;
 extern void prom_boot_cpus_secondary(void *);
 
+struct node_mask{
+	uint32_t onlinemask[4];
+};
 
 #endif /*_ASM_XLP_H */ 
diff --git a/arch/mips/netlogic/xlp/cpu_control_macros.h b/arch/mips/netlogic/xlp/cpu_control_macros.h
index f6d4fce..11a62d4 100644
--- a/arch/mips/netlogic/xlp/cpu_control_macros.h
+++ b/arch/mips/netlogic/xlp/cpu_control_macros.h
@@ -148,8 +148,5 @@ enum processor_sys
 	SYS_DMCDFSCTRL                  = 24
 };
 
-struct node_mask {
-	uint32_t onlinemask[4];
-};
 #endif
 #endif /* __CPUCONTROL_MACROS_H__ */
diff --git a/arch/mips/netlogic/xlp/on_chip.c b/arch/mips/netlogic/xlp/on_chip.c
index d77190c..8100dc8 100644
--- a/arch/mips/netlogic/xlp/on_chip.c
+++ b/arch/mips/netlogic/xlp/on_chip.c
@@ -46,7 +46,6 @@ THE POSSIBILITY OF SUCH DAMAGE.
 unsigned long netlogic_io_base = (unsigned long)(DEFAULT_NETLOGIC_IO_BASE);
 EXPORT_SYMBOL(netlogic_io_base);
 
-extern uint32_t xlp_linux_cpu_mask;
 extern void nlm_cpu_stat_update_msgring_int(void);
 extern void nlm_cpu_stat_update_msgring_cycles(__u32 cycles);
 extern void nlm_cpu_stat_update_msgring_pic_int(void);
diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index cbaa50e..ad3352f 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -99,7 +99,6 @@ extern void *simple_alloc_init(char *base, unsigned long heap_size,
 extern unsigned int xlp_uart_in(struct uart_port *p, int offset);
 extern void xlp_uart_out(struct uart_port *p, int offset, int value);
 
-unsigned int onlinemask	= 0x1;
 int use_default_phymem 	= 0;
 struct boot_mem_map prom_map;
 
@@ -130,7 +129,6 @@ int xlp_sgmii_ports = 1;
 EXPORT_SYMBOL(chip_is_xls);
 EXPORT_SYMBOL(chip_is_xls_b0);
 EXPORT_SYMBOL(xlp_sgmii_ports);
-uint32_t xlp_linux_cpu_mask;
 
 void *nlm_common_psb_shm = 0;
 unsigned long nlm_common_psb_shm_size = 0;
@@ -141,6 +139,7 @@ unsigned long nlm_asid_mask = 0x3f;
 unsigned int nlm_shtlb = 1; /* by default shared TLB is enabled */
 #endif
 
+extern struct node_mask smp_node;
 extern struct psb_info *nlm_boot_info;
 struct psb_info *prom_info = NULL;
 struct psb_info prom_info_copy; /* Bootloader prom_info is saved here */
@@ -255,7 +254,7 @@ void prom_reconfigure_thr_resources(void)
 	uint32_t map;
 #endif
 
-	online_map = onlinemask;    /* from fdt */
+	online_map = smp_node.onlinemask[0];    /* from fdt */
 
 	thr_mask = online_map >> (netlogic_cpu_id()<<2);
 
@@ -506,20 +505,31 @@ static int fdt_process(void)
 	 * domain 0 (linux)
 	 */
 	sprintf(domstr, "/doms/dom@%d/cpu", domain);
+	
+	for(i = 0; i < 4; i++)
+		smp_node.onlinemask[i] = 0;
 
 	node = finddevice(domstr);
 	if (node) {
-		if (getprop(node, "onlinemask", &onlinemask,
-					sizeof(onlinemask)) < 0)
+		if (getprop(node, "onlinemask", &smp_node.onlinemask[0],
+					sizeof(smp_node.onlinemask[0])) < 0)
 			return -1;
-		onlinemask = fdt32_to_cpu(onlinemask);
+		smp_node.onlinemask[0] = fdt32_to_cpu(smp_node.onlinemask[0]);
+
+		getprop(node, "onlinemask1", &smp_node.onlinemask[1], sizeof(smp_node.onlinemask[1]));
+		smp_node.onlinemask[1] = fdt32_to_cpu(smp_node.onlinemask[1]);
+
+		getprop(node, "onlinemask2", &smp_node.onlinemask[2], sizeof(smp_node.onlinemask[2]));
+		smp_node.onlinemask[2] = fdt32_to_cpu(smp_node.onlinemask[2]);
+
+		getprop(node, "onlinemask3", &smp_node.onlinemask[3], sizeof(smp_node.onlinemask[3]));
+		smp_node.onlinemask[3] = fdt32_to_cpu(smp_node.onlinemask[3]);
 	}
 
-	if (!onlinemask)
+	if (!smp_node.onlinemask[0])
 		/* something went wrong ? */
-		onlinemask = 0x1;
+		smp_node.onlinemask[0] = 0x1;
 
-	xlp_linux_cpu_mask = onlinemask;
 	sprintf(domstr, "/doms/dom@%d/uart", domain);
 	node = finddevice(domstr);
 	if(node){
@@ -544,7 +554,6 @@ void __init prom_init(void)
 
 	smp_boot.online_map = (1 << hard_smp_processor_id());
 
-	wakeup_secondary_cpus();
 
 	board_nmi_handler_setup = nlm_nmi_setup;
 
@@ -556,6 +565,7 @@ void __init prom_init(void)
 	nlm_early_serial_setup(xlp_uart_portid);
 
 	register_smp_ops(&nlm_smp_ops);
+	wakeup_secondary_cpus();
 }
 
 void prom_free_prom_memory(void)
-- 
1.7.10.4

