From 3294385eeeed5dde3946a70f1b887358a218e3ac Mon Sep 17 00:00:00 2001
From: Vikas Gupta <vikas.gupta@broadcom.com>
Date: Wed, 13 Mar 2013 17:35:19 +0530
Subject: [PATCH 712/761] fdt: memory block moved to / instead of /dom/dom0

     This is to follow the Linux convention.

Based on Broadcom SDK 2.3.

Signed-off-by: Vikas Gupta <vikas.gupta@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/setup.c |   78 +++++++++++++++++++++++-----------------
 1 file changed, 46 insertions(+), 32 deletions(-)

diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index 89b234a..fcd0fa4 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -632,39 +632,22 @@ static int __init fdt_process(void)
 	/* extract memory ranges,
 	 * add to command line
 	 */
-	node = finddevice("/doms/dom@0");
-	if (node) {
-#ifdef CONFIG_NUMA
-		if (getprop(node, "#nodes", &nlm_nodes, sizeof(nlm_nodes)) < 0)
-			nlm_nodes = 1;
-		else
-			nlm_nodes = fdt32_to_cpu(nlm_nodes);
-#endif
-
-		if (getprop(node, "#address-cells", &na, sizeof(na)) < 0)
+	node=finddevice("/");
+	if (getprop(node, "#address-cells", &na, sizeof(na)) < 0)
 			na = 1;
-		else
-			na = fdt32_to_cpu(na);
-		if (na < 1 || na > 2)
-			printk("Can't cope with #address-cells == %d.\n\r", na);
-
-		if (getprop(node, "#size-cells", &ns, sizeof(ns)) < 0)
-			ns = 1;
-		else
-			ns = fdt32_to_cpu(ns);
-		if (ns < 1 || ns > 2)
-			printk("Can't cope with #size-cells == %d.\n\r", ns);
-
-		if (getprop(node, "#cpumask-cells", &cpu_cells, sizeof(cpu_cells)) < 0)
-			cpu_cells = 1;
-		else
-			cpu_cells = fdt32_to_cpu(cpu_cells);
-
-		if (cpu_cells < 1 || cpu_cells > MAX_CPUMASK_CELLS)
-			printk("Can't cope with #cpumask-cells == %d\n\r", cpu_cells);
-	}
-
-	node = finddevice("/doms/dom@0/memory");
+	else
+		na = fdt32_to_cpu(na);
+	if (na < 1 || na > 2)
+		printk("Can't cope with #address-cells == %d.\n\r", na);
+
+	if (getprop(node, "#size-cells", &ns, sizeof(ns)) < 0)
+		ns = 1;
+	else
+		ns = fdt32_to_cpu(ns);
+	if (ns < 1 || ns > 2)
+		printk("Can't cope with #size-cells == %d.\n\r", ns);
+
+	node = finddevice("/memory");
 	if (node) {
 		entries = (getprop(node, "reg", regs, MAX_PROP_LEN)) / sizeof(regs[0]);
 		if (!entries || (entries % (na+ns)))
@@ -698,6 +681,37 @@ static int __init fdt_process(void)
 
 	printk("FDT Cmdline: %s\n", arcs_cmdline);
 
+	node = finddevice("/doms/dom@0");
+	if (node) {
+#ifdef CONFIG_NUMA
+		if (getprop(node, "#nodes", &nlm_nodes, sizeof(nlm_nodes)) < 0)
+			nlm_nodes = 1;
+		else
+			nlm_nodes = fdt32_to_cpu(nlm_nodes);
+#endif
+
+		if (getprop(node, "#address-cells", &na, sizeof(na)) < 0)
+			na = 1;
+		else
+			na = fdt32_to_cpu(na);
+		if (na < 1 || na > 2)
+			printk("Can't cope with #address-cells == %d.\n\r", na);
+
+		if (getprop(node, "#size-cells", &ns, sizeof(ns)) < 0)
+			ns = 1;
+		else
+			ns = fdt32_to_cpu(ns);
+		if (ns < 1 || ns > 2)
+			printk("Can't cope with #size-cells == %d.\n\r", ns);
+
+		if (getprop(node, "#cpumask-cells", &cpu_cells, sizeof(cpu_cells)) < 0)
+			cpu_cells = 1;
+		else
+			cpu_cells = fdt32_to_cpu(cpu_cells);
+
+		if (cpu_cells < 1 || cpu_cells > MAX_CPUMASK_CELLS)
+			printk("Can't cope with #cpumask-cells == %d\n\r", cpu_cells);
+	}
 
 	/*
 	 * extract CPU online mask for domain 0 (linux)
-- 
1.7.10.4

