From cf657582c569af31b6f22c2cbcb319004056d73e Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Tue, 4 Jun 2013 11:00:44 +0800
Subject: [PATCH 748/761] bcm-xlp: take CP0_BADVADDR after
 do_hugetlb_invalidate

Take CP0_BADVADDR after do_hugetlb_invalidate(), else the value stored in
the register a2 will lose, then system throw a SIGSEGV exception.
This issue only happens when both HUGETLB and FTRACE are selected.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/mm/tlbex-fault.S |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/arch/mips/mm/tlbex-fault.S b/arch/mips/mm/tlbex-fault.S
index ca1369b..8590136 100644
--- a/arch/mips/mm/tlbex-fault.S
+++ b/arch/mips/mm/tlbex-fault.S
@@ -14,7 +14,6 @@
 	.macro tlb_do_page_fault, write
 	NESTED(tlb_do_page_fault_\write, PT_SIZE, sp)
 	SAVE_ALL
-	MFC0	a2, CP0_BADVADDR
 
 #ifdef CONFIG_HUGETLB_PAGE
 	/* invalidate the tlb entry in fixed tlb */
@@ -22,6 +21,8 @@
 	nop
 #endif
 
+	MFC0	a2, CP0_BADVADDR
+
 	KMODE
 	move	a0, sp
 	REG_S	a2, PT_BVADDR(sp)
-- 
1.7.10.4

