From 69f91acdb8eb6ae7c5f50ce5562b69ddeb8e0e0e Mon Sep 17 00:00:00 2001
From: Vikas Gupta <vikasg@netlogicmicro.com>
Date: Mon, 26 Sep 2011 19:42:57 +0530
Subject: [PATCH 336/761] 1)Fix sd clk calculations. 2)Increased f_max and
 f_min both.

Based on Broadcom SDK 2.3.

Signed-off-by: Vikas Gupta <vikasg@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/mmc/host/xlpmmc.c |   34 +++++++++++++++++++++++++++-------
 1 file changed, 27 insertions(+), 7 deletions(-)

diff --git a/drivers/mmc/host/xlpmmc.c b/drivers/mmc/host/xlpmmc.c
index d6a6774..62eab13 100644
--- a/drivers/mmc/host/xlpmmc.c
+++ b/drivers/mmc/host/xlpmmc.c
@@ -427,20 +427,40 @@ static void xlpmmc_cmd_complete(struct xlpmmc_host *host, u32 status)
 	host->status = HOST_S_DATA;
 }
 
+static int cal_range(int base_clk, int rate)
+{
+	if(rate<=(base_clk/256)) 
+		return 128;	
+	if(rate<=(base_clk/128) && (rate>(base_clk/256)))
+		return 64;	
+	if(rate<=(base_clk/64) && (rate>(base_clk/128)))
+		return 32;	
+	if(rate<=(base_clk/32) &&  (rate>(base_clk/64)))
+		return 16;	
+	if(rate<=(base_clk/16) &&  (rate>(base_clk/32)))
+		return 8;	
+	if(rate<=(base_clk/8) &&  (rate>(base_clk/16)))
+		return 4;	
+	if(rate<=(base_clk/4) &&  (rate>(base_clk/8)))
+		return 2;	
+	if(rate<=(base_clk/2) &&  (rate>(base_clk/4)))
+		return 1;	
+
+	return 0;
+}
+
 static void xlpmmc_set_clock(struct xlpmmc_host *host, int rate)
 {
 	u32 sd_bclk_fq;
-	u16 dsor = 0;
 	u16 sd_ck_fs = 0;
 	u16 hc_clk_ctl=0;
+	/* NOTE: 10 bit mode is not set. CAP1 doesn't say that*/
 	/* i) Read the base clock.
-	   ii) find the divisior.
-	   iii)TODO: Add boundry conditions for dsor if req */
+	   ii) find the divisior. */
 
 	sd_bclk_fq = (0x85)*1000; /* reset value 133 MHz */ 
 	rate= rate/1000;
-	dsor =  sd_bclk_fq / rate ;
-	sd_ck_fs = dsor>>1;
+	sd_ck_fs = cal_range(sd_bclk_fq, rate);
 	
 	hc_clk_ctl  = (sd_ck_fs<<SD_CLK_FRQ_SHT) |  HCC_INT_CLK_EN | HCC_SD_CLK_EN;
 	hc_wr16(host->base, HC_CLOCK_CTRL, hc_clk_ctl, 0);
@@ -739,8 +759,8 @@ static int __devinit xlpmmc_probe(struct platform_device *pdev)
 
 	mmc->ops = &xlpmmc_ops;
 
-	mmc->f_min =     260000; /* From bootloader */
-	mmc->f_max =   16667000;  
+	mmc->f_min =     1039000;
+	mmc->f_max =   133000000;  
 
 	mmc->max_blk_size = 512;
 	mmc->max_blk_count = 2048;
-- 
1.7.10.4

