From 689034aa45bf1ea0a6449dfd82c655572d044332 Mon Sep 17 00:00:00 2001
From: Kamlakant Patel <kamlakant.patel@broadcom.com>
Date: Thu, 6 Mar 2014 19:40:49 +0530
Subject: [PATCH 097/163] MIPS: Netlogic: cerr: fix cache error reporting for
 TCU

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/netlogic/xlp/c-xlp.c |   40 +++++++++++++++++++++-------------------
 1 file changed, 21 insertions(+), 19 deletions(-)

diff --git a/arch/mips/netlogic/xlp/c-xlp.c b/arch/mips/netlogic/xlp/c-xlp.c
index da7161a..3052c11 100644
--- a/arch/mips/netlogic/xlp/c-xlp.c
+++ b/arch/mips/netlogic/xlp/c-xlp.c
@@ -92,16 +92,16 @@
 #define SCU_ERR_TYP_MASK	0x3
 
 /* L3 Cache Error Registers */
-#define TCU_ERR_LOG0		0xfc
+#define TCU_ERR_LOG0		0x99
 #define TCU_OP_TYPE_SHIFT	4
 #define TCU_OP_TYPE_MASK	0x7
 
-#define TCU_ERR_LOG1		0xfd
-#define TCU_ERR_LOG2		0xfe
+#define TCU_ERR_LOG1		0x9a
+#define TCU_ERR_LOG2		0x9b
 
-#define XLP9XX_TCU_ERR_LOG0	0xd9
-#define XLP9XX_TCU_ERR_LOG1	0xda
-#define XLP9XX_TCU_ERR_LOG2	0xdb
+#define XLP9XX_TCU_ERR_LOG0	0xfc
+#define XLP9XX_TCU_ERR_LOG1	0xfd
+#define XLP9XX_TCU_ERR_LOG2	0xfe
 
 static void xlp9xx_err_info(uint32_t aerr_reg)
 {
@@ -113,32 +113,33 @@ static void xlp9xx_err_info(uint32_t aerr_reg)
 	err_val = (aerr_reg >> XLP9XX_REQ_SRC_SHIFT) &
 		XLP9XX_REQ_SRC_MASK;
 	pr_err("Error Source Info:\n");
-	pr_err("\tNode ID:\t%d\n", err_val & REQ_SRC_NODE_MASK);
-	pr_err("\tPCIe Func:\t%d\n", err_val & REQ_SRC_PCIE_FN_MASK);
+	pr_err("\tNode ID\t\t: %d\n", err_val & REQ_SRC_NODE_MASK);
+	pr_err("\tPCIe Func\t: %d\n", err_val & REQ_SRC_PCIE_FN_MASK);
 
 	val = (err_val >> REQ_SRC_ID_SHIFT) & REQ_SRC_ID_MASK;
-	pr_err("\tID:\t%s", val < 3 ? err_id[val] : "Unknown");
+	pr_err("\tID\t\t: %s", val < 3 ? err_id[val] : "Unknown");
 
 	val = (err_val >> REQ_SRC_RX_SHIFT) & REQ_SRC_RX_MASK;
-	pr_err("\tOperation:\t%s\n", val ? "RX" : "TX");
+	pr_err("\tOperation\t: %s\n", val ? "RX" : "TX");
 
 	val = (err_val >> REQ_SRC_PCIE_DEV_SHIFT) &
 		REQ_SRC_PCIE_DEV_MASK;
-	pr_err("\tPCIe Device:\t%x", val);
+	pr_err("\tPCIe Device\t: %x", val);
 
 	val = (err_val >> REQ_SRC_TYPE_SHIFT) & REQ_SRC_TYPE_MASK;
-	pr_err("\tType:\t%s", val ? "Slave" : "Master");
+	pr_err("\tType\t\t: %s\n", val ? "Slave" : "Master");
 
 	val = (err_val >> REQ_SRC_AGENT_SHIFT) & REQ_SRC_AGENT_MASK;
 	pr_err("Error Agent:\n");
 	switch (val) {
 	case REQ_SRC_CPU_MASK:
-		pr_err("\tCPU ID:\t%x", err_val & SRC_CPU_ID_MASK);
+		pr_err("\tCPU ID\t\t: %x", err_val & SRC_CPU_ID_MASK);
 		break;
 	case REQ_SRC_NBU_MASK:
 		val = (err_val >> SRC_NBU_TYPE_SHIFT) & SRC_NBU_TYPE_MASK;
 		pr_err("\tNBU:\n");
-		pr_err("\t\tType:\t%s\n", val < 4 ? nbu_err[val] : "Unknown");
+		pr_err("\t\tType\t\t: %s\n",
+				val < 4 ? nbu_err[val] : "Unknown");
 
 		val = (err_val >> SRC_TXVC_SHIFT) & SRC_TXVC_MASK;
 		if (val)
@@ -149,12 +150,12 @@ static void xlp9xx_err_info(uint32_t aerr_reg)
 			pr_err("\t\tRX_VC\n");
 
 		val = err_val & SRC_NBU_TILE_MASK;
-		pr_err("\t\tNBU Tile ID\n%x\n", val);
+		pr_err("\t\tNBU Tile ID\t: %x\n", val);
 
 		break;
 	case REQ_SRC_DMC_MASK:
 		val = err_val & SRC_DMC_TILE_MASK;
-		pr_err("\tDMC tile ID:\t%x\n", val);
+		pr_err("\tDMC tile ID\t: %x\n", val);
 		break;
 	case REQ_SRC_IO_MASK:
 		pr_err("\tIO\n");
@@ -318,12 +319,13 @@ static void check_tcu_error(void)
 		pr_err("TCU[L3] Error Registers:\n");
 		pr_err("\tL3_ERROR_LOG0\t: 0x%x\n", tcu_log0);
 		if (tcu_log0 & BIT(1))
-			pr_err("\tOv\t: Overflow\n");
+			pr_err("\tOv\t\t: Overflow\n");
 		if (tcu_log0 & BIT(2))
 			pr_err("\tErr Type\t: Uncorrectable\n");
 
 		val = (tcu_log0 >> TCU_OP_TYPE_SHIFT) & TCU_OP_TYPE_MASK;
-		pr_err("\tOperation Type\t: %s\n", err[val]);
+		pr_err("\tOperation Type\t: %s\n",
+				val < 3 ? err[val] : "Unknown");
 
 		if (cpu_is_xlp9xx())
 			pr_err("\tTCU LOG1: 0x%x, LOG2: 0x%x\n",
@@ -406,7 +408,7 @@ asmlinkage void nlm_cache_error(struct pt_regs *regs)
 	check_nbu_error();	/* NBU	*/
 	check_dram_error();	/* DRAM */
 
-	pr_err("CPU [%d]\tErrorEPC \t: 0x%lx\n",
+	pr_err("CPU [%d], ErrorEPC : 0x%lx\n",
 			read_c0_ebase() & 0x3ff, read_c0_errorepc());
 	die("Cache error exception", regs);
 }
-- 
1.7.9.5

