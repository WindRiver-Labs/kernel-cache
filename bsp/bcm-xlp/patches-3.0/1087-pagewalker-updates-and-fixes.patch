From a5e9ca4c1a567c5972877d7bc86134941f535fd8 Mon Sep 17 00:00:00 2001
From: Jayachandran C <jchandra@broadcom.com>
Date: Mon, 17 Feb 2014 23:20:18 +0530
Subject: [PATCH 087/163] pagewalker: updates and fixes

Move the call to pagewalker init to percpu trap init. The previous
call was too early to handle paramters.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/include/asm/mmu_context.h |    4 +++-
 arch/mips/kernel/traps.c            |    2 ++
 arch/mips/netlogic/xlp/pgwalker.c   |   14 ++++----------
 arch/mips/netlogic/xlp/setup.c      |    8 +++++++-
 4 files changed, 16 insertions(+), 12 deletions(-)

diff --git a/arch/mips/include/asm/mmu_context.h b/arch/mips/include/asm/mmu_context.h
index 9d4b52f..acce157 100644
--- a/arch/mips/include/asm/mmu_context.h
+++ b/arch/mips/include/asm/mmu_context.h
@@ -26,8 +26,10 @@
 
 #ifdef CONFIG_CPU_XLP
 extern void setup_hwp_user_pgd(unsigned long pgd);
+extern void plat_pgwalker_init(void);
 #else
-#define setup_hwp_user_pgd(pdg)
+static inline void setup_hwp_user_pgd(unsigned long pgd) {}
+extern void plat_pagewalker_init(void) {}
 #endif
 
 #ifdef CONFIG_MIPS_PGD_C0_CONTEXT
diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c
index 8db3cfd..d7ebd21 100644
--- a/arch/mips/kernel/traps.c
+++ b/arch/mips/kernel/traps.c
@@ -1758,6 +1758,8 @@ void __cpuinit per_cpu_trap_init(bool is_boot_cpu)
 	BUG_ON(current->mm);
 	enter_lazy_tlb(&init_mm, current);
 
+	plat_pgwalker_init();
+
 #ifdef CONFIG_MIPS_MT_SMTC
 	if (bootTC) {
 #endif /* CONFIG_MIPS_MT_SMTC */
diff --git a/arch/mips/netlogic/xlp/pgwalker.c b/arch/mips/netlogic/xlp/pgwalker.c
index 4a7311b..29f8783 100644
--- a/arch/mips/netlogic/xlp/pgwalker.c
+++ b/arch/mips/netlogic/xlp/pgwalker.c
@@ -43,13 +43,14 @@
 #include <asm/netlogic/common.h>
 #include <asm/netlogic/mips-extns.h>
 
+#include <asm/netlogic/kvm_para.h>	/* is_nlm_guest_os */
 #include <asm/netlogic/xlp-hal/cpucontrol.h>
 #include <asm/netlogic/xlp-hal/iomap.h>
 #include <asm/netlogic/xlp-hal/xlp.h>
 
 /* Hardware Pagewalker related configuration parameters */
 #define USER_SEG	0
-#define VMALLOC_SEG	1
+#define KERNEL_SEG	1
 #define NR_SEGMENTS	2  /* MUST be a power of 2 */
 
 enum {
@@ -94,19 +95,15 @@ void setup_hwp_user_pgd(unsigned long pgd)
 	setup_hwp_pgd(USER_SEG, pgd);
 }
 
-void xlp_pgwalker_init(void)
+void plat_pgwalker_init(void)
 {
 	int i = 0;
 	uint64_t pwbase_val = 0, pwfield_val = 0, pwsize_val = 0, bd_shift = 0;
 	uint32_t pwctl_val = 0;
 
-	/* Errata : turn off hardware page walker cache, workaround for xlp9xx */
-	if (cpu_is_xlp9xx())
-		nlm_mtcr(MMU_SETUP, nlm_mfcr(MMU_SETUP) | ((0x1 << 14)));
-
 	if (enable_pgwalker == 0) {
 		/* If the kernel is root, also disable nested page table walk. */
-		if (cpu_is_xlp9xx())
+		if (cpu_is_xlp9xx() && !is_nlm_guest_os)
 			nlm_mtcr(MMU_SETUP, nlm_mfcr(MMU_SETUP) | ((0x1 << 5)));
 
 		return;
@@ -186,8 +183,5 @@ void xlp_pgwalker_init(void)
 	__write_64bit_c0_register($5, 7, pwsize_val);
 	__write_32bit_c0_register($6, 6, pwctl_val);
 
-	get_cpu_var(pgd_bases)[VMALLOC_SEG] = (unsigned long)swapper_pg_dir;
-	put_cpu_var(pgd_bases);
-
 	printk("Initialized Page Walker on cpu@%d\n", hard_smp_processor_id());
 }
diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index bf05933..2f9e6a0 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -41,10 +41,12 @@
 #include <asm/bootinfo.h>
 
 #include <asm/netlogic/haldefs.h>
+#include <asm/netlogic/mips-extns.h>
 #include <asm/netlogic/common.h>
 #include <asm/netlogic/nlm_kexec.h>
 
 #include <asm/netlogic/xlp-hal/iomap.h>
+#include <asm/netlogic/xlp-hal/cpucontrol.h>
 #include <asm/netlogic/xlp-hal/xlp.h>
 #include <asm/netlogic/xlp-hal/sys.h>
 
@@ -161,7 +163,11 @@ void xlp_mmu_init(void)
 		/* XLPII series has extended pagesize in config 4 */
 		conf4 = read_c0_config4() & ~0x1f00u;
 		write_c0_config4(conf4 | ((PAGE_SHIFT - 10) / 2 << 8));
-		xlp_pgwalker_init();
+
+		/* XLP9xx Errata : turn off hardware page walker cache */
+		if (cpu_is_xlp9xx())
+			nlm_mtcr(MMU_SETUP, nlm_mfcr(MMU_SETUP) | ((0x1 << 14)));
+
 	} else {
 		/* enable extended TLB and Large Fixed TLB */
 		write_c0_config6(read_c0_config6() | 0x24);
-- 
1.7.9.5

