From 4ced67dc841ea92de2a34dcc19d72f0e3ec24f29 Mon Sep 17 00:00:00 2001
From: Subhendu Sekhar Behera <sbehera@broadcom.com>
Date: Mon, 24 Mar 2014 19:51:55 +0530
Subject: [PATCH 143/160] sleep: Use usleep_range in delay function.

      Use usleep_range instead of mdelay to schedule the thread.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
Signed-off-by: Jack Tan <jiankemeng@gmail.com>
---
 .../netlogic/lib/netlib/external/ext_phy_bcm.c     |   10 ++++------
 .../netlogic/lib/netlib/external/ext_phy_mvl.c     |    2 +-
 .../netlogic/lib/syslib/include/nlm_hal_macros.h   |    7 +++++--
 3 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c b/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c
index 634b9f5..95d905a 100644
--- a/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c
+++ b/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c
@@ -222,7 +222,7 @@ static void bcm_start_an(net_port_t *netport)
                 __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, status|(1<<9)); // Restart XLP AN
         }while(count<100);
 
-      //  netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Autonegotiation is NOT OK for PHY-SGMII inf=0x%x int_inf =0x%x\n", phyaddr, int_inf);
+	if (count == 100 )netsoc_api_print(NETSOC_APIDBG_DEFAULT, "Autonegotiation is NOT OK for PHY-SGMII inf=0x%x int_inf =0x%x\n", phyaddr, int_inf);
         return;
 }
 
@@ -258,8 +258,6 @@ static void bcm_init_phy(net_port_t *netport)
 		nae_ext = nae;
 	}
 
-        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"BCM_INIT_PHY \n ");
-
         __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x04, 0x01); // selector field
         __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, 0); // disable XLP AN
         __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, 0x8000); // soft reset
@@ -281,7 +279,7 @@ static void bcm_init_phy(net_port_t *netport)
         status &= ~(1<<11);
         //netsoc_api_print(NETSOC_APIDBG_DEFAULT,"writing phyaddr %d reg 0 =0x%x \n", phyaddr, status);
         __netsoc_mdio_wr(nae_ext, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x00, status); // Normal Operation
-        nlm_mdelay(100);
+        nlm_usleep(100000);
 
 
         /* setup LED control */
@@ -294,7 +292,7 @@ static void bcm_init_phy(net_port_t *netport)
         status = __netsoc_mdio_rd(nae_ext, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1C);
         __netsoc_mdio_wr(nae_ext, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x1c, (status | (1<<15)| (0x1)));
         __netsoc_mdio_wr(nae_ext, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x0, 0x100 ); /*Disable AN and power up SGMII side*/
-        nlm_mdelay(100);
+	nlm_usleep(100000);
 
         status = __netsoc_mdio_rd(nae_ext, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x0);
         __netsoc_mdio_wr(nae_ext, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x0, status | (1<<12) ); /*Enable AN on SGMMII side of PHY*/
@@ -303,7 +301,7 @@ static void bcm_init_phy(net_port_t *netport)
         /* wait up to 5 seconds for AN to complete on copper side */
         i=0;
         do {
-                nlm_mdelay(100);
+                nlm_usleep(100000);
                 aux_status = __netsoc_mdio_rd(nae_ext, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x19);
                 if (aux_status & 0x8000)
                         break;
diff --git a/arch/mips/netlogic/lib/netlib/external/ext_phy_mvl.c b/arch/mips/netlogic/lib/netlib/external/ext_phy_mvl.c
index f696141..7ca8b0c 100644
--- a/arch/mips/netlogic/lib/netlib/external/ext_phy_mvl.c
+++ b/arch/mips/netlogic/lib/netlib/external/ext_phy_mvl.c
@@ -129,7 +129,7 @@ static void mvl_start_an(net_port_t *netport)
                         netsoc_api_print(NETSOC_APIDBG_DEFAULT,"bus:%d phy:%d Autonegotiation ok:%X %X i:%d\n", bus, phyaddr, status, extstatus, i);
                         break;
                 }
-                nlm_mdelay(1);
+		nlm_usleep(1000);
                 i++;
         }while(i<5000);
         if(i==5000) netsoc_api_print(NETSOC_APIDBG_DEFAULT," bus:%d phy:%d auto negotiation timeout!\n", bus, phyaddr);
diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal_macros.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal_macros.h
index 149c2f7..41ef502 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal_macros.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal_macros.h
@@ -98,7 +98,8 @@ extern int is_nlm_xlp(unsigned int chipid, unsigned int rev, unsigned int ext);
 
 /* Adding a new macro for mdelay.  */
 #define nlm_udelay(n) 	usleep(n)
-#define nlm_mdelay(n) 	usleep(n * 1000) 
+#define nlm_mdelay(n) 	usleep(n * 1000)
+#define nlm_usleep(n)	usleep(n)
 				        
 
 #elif defined(NLM_HAL_LINUX_KERNEL) /* Linux Kenrel mode */
@@ -152,8 +153,8 @@ static inline unsigned long nlm_spill_alloc(int node, uint64_t size)
 #define KSEG3     (0xffffffffE0000000ULL)
 #define KSEG0_PHY_BOUNDARY 0x10000000ULL    /* 256 MB */
 #endif
-#define nlm_mdelay(n) mdelay(n)
 
+#define nlm_usleep(n)	usleep_range(n, n)
 #define nlm_udelay(n)	udelay(n)
 #define nlm_mdelay(n)  	mdelay(n)
 
@@ -170,6 +171,7 @@ static inline unsigned long nlm_spill_alloc(int node, uint64_t size)
 #define nlm_free  free
 #define nlm_udelay(n)	udelay(n)
 #define nlm_mdelay(n) 	udelay(n * 1000)
+#define nlm_usleep(n)	udelay(n)
 
 #if (_MIPS_SIM == _MIPS_SIM_ABI32) || (_MIPS_SIM == _MIPS_SIM_NABI32) || \
     (_MIPS_SZLONG == 32)
@@ -202,6 +204,7 @@ static inline unsigned long nlm_spill_alloc(int node, uint64_t size)
 #define nlm_free  free
 #define nlm_udelay(n)	udelay(n)
 #define nlm_mdelay(n) 	mdelay(n)
+#define nlm_usleep(n)	udelay(n)
 
 #else
 #error "Unsupported platform for NL HAL"
-- 
1.7.9.5

