From 3cb8da9060bc59342881b680b81e68c5a9a4e8c8 Mon Sep 17 00:00:00 2001
From: Jayachandran C <jchandra@broadcom.com>
Date: Fri, 4 Apr 2014 21:14:09 +0530
Subject: [PATCH 101/160] xlp_nand: use 64 bit DMA mask

Update the XLP PNAND driver to do DMA to 64 bit physical addresses.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
Signed-off-by: Jack Tan <jiankemeng@gmail.com>
---
 drivers/mtd/nand/xlp_nand.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/mtd/nand/xlp_nand.c b/drivers/mtd/nand/xlp_nand.c
index 9b9c093..d9eb1db 100644
--- a/drivers/mtd/nand/xlp_nand.c
+++ b/drivers/mtd/nand/xlp_nand.c
@@ -112,7 +112,7 @@
 #define BUF_SIZE	(16 * 1024)
 #define NAND_DEV_CS	1
 
-static u64 xlp_dev_dma_mask = DMA_BIT_MASK(32);
+static u64 xlp_dev_dma_mask = DMA_BIT_MASK(64);
 
 /* The oobsize is the area visible to software, and software will read/write
  * in this region. If hardware ecc is enabled, since our implementation of
@@ -716,7 +716,7 @@ static int of_xlp_nand_devices(void __iomem *io_base,
 	data->io_base = io_base;
 
 	pdev->dev.dma_mask = &xlp_dev_dma_mask;
-	pdev->dev.coherent_dma_mask = DMA_BIT_MASK(32);
+	pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
 
 	state		= info->nand_state;
 	state->last_cmd	= 0;
-- 
1.7.9.5

