From c1cf8c1fe6471853903067a345811bd2d09ba8de Mon Sep 17 00:00:00 2001
From: Alok Agrawat <alok@broadcom.com>
Date: Sun, 9 Feb 2014 23:17:54 -0800
Subject: [PATCH 117/160] FMN: Added FMN support for KBP.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
Signed-off-by: Jack Tan <jiankemeng@gmail.com>
---
 arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn.h        |    1 +
 arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c |    4 +++-
 arch/mips/netlogic/lib/syslib/src/nlm_evp_cpld.c   |   10 +++++++++-
 3 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn.h b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn.h
index 0bf80f4..4f4e489 100644
--- a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn.h
+++ b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn.h
@@ -83,6 +83,7 @@ enum FMN_MSG_BLKS {
 	XLP_MSG_BLK_POE_1 = XLP_MSG_BLK_MAX,
 	XLP_MSG_BLK_NAE_1,
         XLP_MSG_BLK_ALE,
+        XLP_MSG_BLK_KBP,
 	XLP9XX_MSG_BLK_MAX
 };
 
diff --git a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
index 923db70..9a32bd4 100644
--- a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
+++ b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
@@ -224,7 +224,7 @@ nlm_fmn_config_t xlp9xx_fmn_config[] = {
 
 extern struct nlm_node_config nlm_node_cfg;
 
-/* #define FMN_DEBUG 1 */ 
+//#define FMN_DEBUG 1 
 static int max_msg_blks = XLP_MSG_BLK_MAX;
 
 static unsigned int fmn_cfg_value[XLP_NET_VC_LIMIT + 1];
@@ -255,6 +255,7 @@ static struct fmn_qsize_credit_config fmn_qsize_credit_cfg[XLP9XX_MSG_BLK_MAX] =
         [XLP_MSG_BLK_POE_1] =  { "poe1",    XLP_9XX_POE1_VC_BASE,   XLP_9XX_POE1_VC_LIMIT, 1, 1 },
         [XLP_MSG_BLK_NAE_1] =  { "nae1",    XLP_9XX_NET1_VC_BASE,   XLP_9XX_NET1_VC_LIMIT, 1, 1 },
 	[XLP_MSG_BLK_ALE] =    { "ale",     XLP_9XX_ALE_VC_BASE,   XLP_9XX_ALE_VC_LIMIT, 1, 1 },
+	[XLP_MSG_BLK_KBP] =    { "kbp",     XLP_9XX_KBP_VC_BASE,   XLP_9XX_KBP_VC_LIMIT, 1, 1 },
 };
 
 
@@ -948,6 +949,7 @@ static void nlm_hal_write_fmn_credit(int node, int max_nodes)
 		fmn_invalidate_blocks(node, XLP_MSG_BLK_POE_1);
 		fmn_invalidate_blocks(node, XLP_MSG_BLK_NAE_1);
 		fmn_invalidate_blocks(node, XLP_MSG_BLK_ALE);
+		fmn_invalidate_blocks(node, XLP_MSG_BLK_KBP);
 
 	}
 
diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_evp_cpld.c b/arch/mips/netlogic/lib/syslib/src/nlm_evp_cpld.c
index afba70d..6efec71 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_evp_cpld.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_evp_cpld.c
@@ -84,9 +84,11 @@ uint16_t nlm_hal_cpld_read_16(int cs, uint16_t reg)
 			nlm_hal_nor_write(XLP_NOR_DEVPARAM + cs , 0x2f84);
 	}
 
+nlm_print("\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ %s %d\n", __FUNCTION__, __LINE__);
 	val = nlm_hal_read_16bit_reg(xlp_nor_dev[cs].base, reg);
         return (xlp_nor_dev[cs].swap ? le16_to_cpu(val): be16_to_cpu(val));
 #else
+nlm_print("\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ %s %d\n", __FUNCTION__, __LINE__);
 	return 0;
 #endif
 }
@@ -95,14 +97,17 @@ void nlm_hal_cpld_write_16(int cs, uint16_t val, uint16_t reg)
 {
 #ifndef CONFIG_N511
         uint16_t data = xlp_nor_dev[cs].swap ? cpu_to_le16(val): cpu_to_be16(val);
+nlm_print("\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ %s %d\n", __FUNCTION__, __LINE__);
 	if(!is_nlm_xlp9xx())
 	{
 		if ((cs == 3) || (cs ==4))
 	        	nlm_hal_nor_write(XLP_NOR_DEVPARAM + cs , 0x2d84);
 	}
 
+nlm_print("\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ %s %d\n", __FUNCTION__, __LINE__);
         nlm_hal_write_16bit_reg(xlp_nor_dev[cs].base, reg, data);
 #else
+nlm_print("\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ %s %d\n", __FUNCTION__, __LINE__);
 #endif
 }
 
@@ -204,7 +209,7 @@ int xlp_cpld_init(uint32_t cs)
 {
 	unsigned long base = xlp_nor_dev[cs].base;
 	unsigned long limit = base + xlp_nor_dev[cs].size - 1;
-
+nlm_print("\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ %s %d\n", __FUNCTION__, __LINE__);
 	if (cs > NLM_XLP_MAX_CS)
 		return -1;
 	if(cs == 3)
@@ -251,7 +256,9 @@ void nlm_hal_cpld_init(int node)
 {
 #if !defined(XLP_SIM) || defined(NLM_BOARD)
 	int i;
+nlm_print("\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ %s %d\n", __FUNCTION__, __LINE__);
 #if defined(NLM_CORTINA_SUPPORT)
+nlm_print("\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ %s %d\n", __FUNCTION__, __LINE__);
 	if(is_nlm_xlp9xx())
 		set_gbu_frequency(node, NLM_GBU_FREQ_ILK_9XX);
 	else
@@ -259,6 +266,7 @@ void nlm_hal_cpld_init(int node)
 #else
 	set_gbu_frequency(node, NLM_GBU_FREQ_DEFAULT);
 #endif
+nlm_print("\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ %s %d\n", __FUNCTION__, __LINE__);
 	for(i=2; i<5; i++)
         	xlp_cpld_init(i);
 #endif
-- 
1.7.9.5

