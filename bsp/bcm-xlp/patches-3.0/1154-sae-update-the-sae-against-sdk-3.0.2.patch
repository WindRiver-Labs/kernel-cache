From 7b36bfe6ca8420ee9e332c0f7d0c006c8ca12054 Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Thu, 19 Jun 2014 11:17:05 +0800
Subject: [PATCH 154/160] sae: update the sae against sdk 3.0.2

rebase the sae to sdk 3.0.2

Signed-off-by: Jack Tan <jack.tan@windriver.com>
Signed-off-by: Jack Tan <jiankemeng@gmail.com>
---
 drivers/netlogic/sae/cryptosoc_lib_priv.h |    2 +-
 drivers/netlogic/sae/nlm_aead.c           |    2 +-
 drivers/netlogic/sae/nlm_crypto.c         |    7 -------
 drivers/netlogic/sae/nlm_enc.c            |   19 +++++++++++++++++++
 4 files changed, 21 insertions(+), 9 deletions(-)

diff --git a/drivers/netlogic/sae/cryptosoc_lib_priv.h b/drivers/netlogic/sae/cryptosoc_lib_priv.h
index 3fb0d41..3f17cee 100644
--- a/drivers/netlogic/sae/cryptosoc_lib_priv.h
+++ b/drivers/netlogic/sae/cryptosoc_lib_priv.h
@@ -45,7 +45,7 @@ static inline int crypto_ctxt_shrd_wait_for_response(int fd)
 extern int crypto_ctxt_alloc(struct cryptosoc_ctx *ctx);
 extern int crypto_ctxt_free(struct cryptosoc_ctx *ctx);
 extern int crypto_get_soc_vc_numbers(enum cryptosoc_soc_type soc, int *basevc, int *lmtvc);
-extern int cryptosoc_lib_priv_init(struct cryptosoc_lib_params *params);
+extern int cryptosoc_lib_priv_init(struct cryptosoc_lib_params *param);
 extern int cryptosoc_lib_priv_finish(void);
 
 #endif
diff --git a/drivers/netlogic/sae/nlm_aead.c b/drivers/netlogic/sae/nlm_aead.c
index c21e798..5cdc085 100644
--- a/drivers/netlogic/sae/nlm_aead.c
+++ b/drivers/netlogic/sae/nlm_aead.c
@@ -1281,7 +1281,7 @@ static int aead_crypt_ccm(struct aead_request *req, unsigned int op)
 
 	/* add all those extra bytes for auth excluding assoc */
 	
-	saesoc_set_aad_len(d_desc,req->assoclen + cipher_extralen +  2 + 6 );
+        saesoc_set_aad_len(d_desc, req->assoclen + auth_iv_frag_len + extralen);
         if (cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN2)
 		saesoc_set_aad_len(d_desc,req->assoclen);
 
diff --git a/drivers/netlogic/sae/nlm_crypto.c b/drivers/netlogic/sae/nlm_crypto.c
index ba14c84..27abc1c9 100644
--- a/drivers/netlogic/sae/nlm_crypto.c
+++ b/drivers/netlogic/sae/nlm_crypto.c
@@ -424,13 +424,6 @@ void mem_free(void *addr)
 
 struct cryptosoc_lib_params lparam;
 
-#if 0
-int nlm_hal_get_sae_chip_feature()
-{
-	return 0;
-}
-#endif
-
 static int __init xlp_sae_init(void)
 {
     extern int ipsec_sync_vc;
diff --git a/drivers/netlogic/sae/nlm_enc.c b/drivers/netlogic/sae/nlm_enc.c
index 0afefb1..442ee6d 100644
--- a/drivers/netlogic/sae/nlm_enc.c
+++ b/drivers/netlogic/sae/nlm_enc.c
@@ -62,6 +62,8 @@ static int no_of_alg_registered = 0;
 
 extern struct nlm_crypto_stat crypto_stat[MAX_CPU];
 
+extern struct cryptosoc_lib_params lparam;
+
 static int enc_cra_init(struct crypto_tfm *tfm)
 { 
 	tfm->crt_ablkcipher.reqsize = PACKET_DESC_SIZE; //reqsize of 512 bytes for packet desc
@@ -80,6 +82,8 @@ xlp_setkey(struct crypto_ablkcipher *tfm, uint16_t stat)
 	struct nlm_enc_ctx *nlm_ctx = nlm_crypto_ablkcipher_ctx(tfm); 
 	int nsdescs = saesoc_calc_sdesc_cnt(&nlm_ctx->initp,NULL);
 	struct saesoc_session_desc *s_desc = &nlm_ctx->enc_s_desc;
+        struct saesoc_session_init_params *initp = &nlm_ctx->initp;
+
 	nlm_ctx->stat = stat;
 
 	if(saesoc_new_session(&nlm_ctx->initp,&s_desc,nsdescs, NULL) < 0)
@@ -89,6 +93,21 @@ xlp_setkey(struct crypto_ablkcipher *tfm, uint16_t stat)
 
 	s_desc = &nlm_ctx->dec_s_desc;
 
+        if((nlm_ctx->initp.cipher.type == SAESOC_CIPHER_TYPE_TDES) &&
+                               (!(nlm_ctx->initp.cipher.flags & SAESOC_CF_ENCRYPT)) && 
+                               (!(lparam.saesoc_feature_set & SAESOC_FF_3DES_KEY_SWAP_SUPPORT))) {
+
+                 /* Software needs to swap the keys for 3DES
+                  * as hardware has no support for key swap
+                  */
+                 unsigned long long  * key = (unsigned long long  *)nlm_ctx->initp.cipher.key;
+                 unsigned long long decrypt_key[3];
+                 decrypt_key[0] = key[2];
+                 decrypt_key[1] = key[1];
+                 decrypt_key[2] = key[0];
+                 nlm_ctx->initp.cipher.key = (char *)decrypt_key;
+        }
+
 	if(saesoc_new_session(&nlm_ctx->initp,&s_desc,nsdescs, NULL) < 0)
 		 printk("%s,%d Error \n", __FUNCTION__, __LINE__); 
 
-- 
1.7.9.5

