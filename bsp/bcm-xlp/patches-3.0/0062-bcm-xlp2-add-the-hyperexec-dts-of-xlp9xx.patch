From 12ec2ad644b10ad5aff08cf8ad159ad29f5da4d7 Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Fri, 7 Mar 2014 09:48:46 +0800
Subject: [PATCH 2/2] bcm-xlp2: add the hyperexec dts of xlp9xx

Based on SDK 3.0

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/boot/dts/mnxlp9xx-linux.dts | 2454 +++++++++++++++++++++++++++++++++
 1 file changed, 2454 insertions(+)

diff --git a/arch/mips/boot/dts/mnxlp9xx-linux.dts b/arch/mips/boot/dts/mnxlp9xx-linux.dts
new file mode 100644
index 0000000..090dba6
--- /dev/null
+++ b/arch/mips/boot/dts/mnxlp9xx-linux.dts
@@ -0,0 +1,2454 @@
+/* 
+ * XLP9XX Device Tree Source
+ */
+
+/dts-v1/;
+/ {
+	model = "netlogic,XLP-GVP";
+        compatible = "netlogic,xlp";
+        #address-cells = <2>;
+        #size-cells = <2>;
+
+	/* Memory ranges for linux. On multi-node, the range below should
+	 * include local memory of all the nodes.
+	 *
+	 * memory {
+	 *       device_type = "memory";
+	 *       reg =  <0 0x00000000 0 0x0B000000
+	 *               0 0x20000000 0 0xa0000000
+	 *               0 0xe0000000 0 0x20000000>;
+	 * };
+	 */
+
+        /* memory range for HEv2 pkt mem. Only one contig memory per node supported */
+        pktmem {
+                device_type = "pktmem";
+
+                /* format: node number, 64-bit addr, 64-bit size */
+                reg = <0 0x0 0xe0000000 0x0 0x20000000
+                       1 0x0 0x0 0x0 0x0
+                       2 0x0 0x0 0x0 0x0
+                       3 0x0 0x0 0x0 0x0>;
+        };
+
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <0>;
+		bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0xffffffff -- ";
+		domain_heap = <0x80000000 0x20000000>;
+	};
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+			#nodes = <1>;
+			#cpumask-cells=<3>;
+
+			cpu {
+				onlinemask = <0x1>; /* */
+                                nae-rx-vc = <0>;
+                                nae-fb-vc = <1>;
+				napi-vc-mask = <0xb>;
+				sae-rx-vc = <0>; /* sharing with nae */
+				sae-rx-sync-vc  = <2>; /* should be exclusive */
+				ipsec-async-vc  = <3>;
+				ipsec-sync-vc   = <2>;
+
+			};
+			uart {
+				id = <0>;
+				owner = <1>;
+				sharedcfg = <0x1f000000>;
+			};
+                        fmn {
+				node_0_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+				node_1_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+				node_2_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+				node_3_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+				node_4_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+				node_5_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+				node_6_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+				node_7_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                        };
+			pic {
+			};
+			nae-0 {
+				freein-fifo-mask = <0xffff 0 0 0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <80 32 32 80>;
+				/* hw entries */
+				vfbtbl-hw-offset = <80 32 32 80>;
+				vfbtbl-hw-nentries = <20 20 20 20>;
+				dummy-pktdata-addr = <0x0 0x0ff00000>; // 255 MB
+			};
+			nae-1 {
+				freein-fifo-mask = <0xffff 0 0 0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <80 80 80 80>;
+				/* hw entries */
+				vfbtbl-hw-offset = <80 80 80 80>;
+				vfbtbl-hw-nentries = <20 20 20 20>;
+				dummy-pktdata-addr = <0x0 0x0ff00000>; // 255 MB
+			};
+			owner-config {
+				nae = <0x1>;   // currently for node 0
+				sae = <0x1>;
+				rsa = <0x1>;
+				fmn = <0x1>;
+			};
+			resource-allocation {
+                                net@0 {
+                                        port-mask = <0x4 0 0 0>;
+                                        frinlifo-mask = <0xffff 0 0 0>;
+                                        frinlifo-shared-mode = <0 0 0 0>;
+                                        vfbid-sw-offset = <0 0 0 0>;
+                                        vfbid-sw-entries = <0 0 0 0>;
+                                        ucore-mask = <0x1 0 0 0>;
+                                        sram-off = <0 0 0 0>;
+                                };
+				net@1 { 
+                                        port-mask = <0x4 0 0 0>;
+                                        frinlifo-mask = <0xffff 0 0 0>;
+                                        frinlifo-shared-mode = <0 0 0 0>;
+                                        vfbid-sw-offset = <0 0 0 0>;
+                                        vfbid-sw-entries = <0 0 0 0>;
+                                        ucore-mask = <0x1 0 0 0>;
+                                        sram-off = <0 0 0 0>;
+                                };
+                        };
+		};
+		dom@1 {
+			device_type = "domain";
+
+			cpu {   
+                                onlinemask = <0xffff>; 
+                                nae-rx-vc = <2>;
+			};
+
+			resource-allocation {
+				net@0 {
+					port-mask = <0x3 0 0 0>;
+					frinlifo-mask = <0xff 0 0 0>;
+					frinlifo-shared-mode = <0 0 0 0>;
+					vfbid-sw-offset = <0 0 0 0>;
+					vfbid-sw-entries = <0 0 0 0>;
+					ucore-mask = <0x2 0 0 0>;
+					sram-off = <0 0 0 0>;
+				};
+				net@1 {
+                                        port-mask = <0 0 0 0>;
+                                        frinlifo-mask = <0 0 0 0>;
+                                        frinlifo-shared-mode = <0 0 0 0>;
+                                        vfbid-sw-offset = <0 0 0 0>;
+                                        vfbid-sw-entries = <0 0 0 0>;
+                                        ucore-mask = <0 0 0 0>;
+                                        sram-off = <0 0 0 0>;
+                                };
+			};
+			app-param{
+                                onlinemask = <0xffff>;
+			};
+		};
+                dom@2 { 
+                        device_type = "domain";
+
+                        cpu {   
+                                onlinemask = <0xffff0000 0x0 0x0>;
+                                nae-rx-vc = <2>;
+                        };
+
+                        resource-allocation {
+                                net@0 { 
+                                        port-mask = <0x0 0 0 0>;
+                                        frinlifo-mask = <0x00 0 0 0>;
+                                        frinlifo-shared-mode = <0 0 0 0>;
+                                        vfbid-sw-offset = <0 0 0 0>;
+                                        vfbid-sw-entries = <0 0 0 0>;
+                                        ucore-mask = <0x0 0 0 0>;
+                                        sram-off = <0 0 0 0>;
+					max-l3rules = <0 0 0 0>;
+					max-l4rules = <0 0 0 0>;
+                                };
+                                net@1 { 
+                                        port-mask = <0x3 0 0 0>;
+                                        frinlifo-mask = <0xff 0 0 0>;
+                                        frinlifo-shared-mode = <0xff 0 0 0>;
+                                        vfbid-sw-offset = <0 0 0 0>;
+                                        vfbid-sw-entries = <0 0 0 0>;
+                                        ucore-mask = <0xc 0 0 0>;
+                                        sram-off = <0 0 0 0>;
+					max-l3rules = <1 0 0 0>;
+					max-l4rules = <2 0 0 0>;
+                                };
+                        };
+			app-param{
+                                onlinemask = <0xffff0000>;
+                        };
+
+                };
+
+
+	};
+	chosen {
+		/* Examples for different core/thread models.
+		 * 16 core: netlogic,cpumask=<0xffffffff 0xffffffff>;
+		 * 20 core: netlogic,cpumask=<0 0xffff 0xffffffff 0xffffffff>;
+		 * 40 core: netlogic,cpumask=<0 0xffff 0xffffffff 0xffffffff
+		 *			     0 0xffff 0xffffffff 0xffffffff>;
+		 * 15 core(core 5 disabled): netlogic,cpumask=<0xffffffff 0xff0fffff>;
+		 */
+		bootargs = " console=ttyS0,115200  rhash_entries=1048576";
+		/*linux,initrd-start=<0x00c00000>;
+		linux,initrd-end=<0x02c00000>;*/
+	};
+
+	/* These binaries are downloaded at the resp physical memory locations
+	 * by their corresponding bootstrapping loaders. For example,
+	 * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
+	 * at 1M, hypervisor by u-boot hypervisor at 136M.
+	 * On simulator all these binaries are pre-loaded by using '-F' option
+	 * for convenience. On silicon, they will be loaded by their corresponding
+	 * temporary download locations the stage-1/stage-2 firmware
+	 */
+	firmware-download {
+		u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
+		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
+		dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
+		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
+	};
+
+	soc {
+		#address-cells = <2>;
+		#size-cells = <1>;
+		compatible = "simple-bus";
+		ranges = <0 0  0 0x18000000  0x04000000   // PCIe CFG
+			  1 0  0 0x16000000  0x02000000>; // GBU chipselects
+
+		serial0: serial@30000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x112100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <125000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <17>;
+		};
+		pic: pic@11000 {
+			interrupt-controller;
+			#address-cells = <0>;
+			#interrupt-cells = <1>;
+			reg = <0 0x110000 0x200>;
+		};
+
+		i2c0: i2c@113100 {
+			compatible = "netlogic,xlp9xx-i2c";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x113100 0x100>;
+			clock-frequency = <133000000>;
+		};
+		i2c1: i2c@113300 {
+			compatible = "netlogic,xlp9xx-i2c";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x113300 0x100>;
+			clock-frequency = <133000000>;
+
+			rtc@68 {
+				compatible = "dallas,ds1374";
+				reg = <0x68>;
+			};
+			
+			eeprom@57 {
+                                compatible = "xlpge_eeprom";
+                                reg = <0x57>;
+                        };
+
+		};
+		i2c2: i2c@113500 {
+			compatible = "netlogic,xlp9xx-i2c";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x113500 0x100>;
+			clock-frequency = <133000000>;
+		};
+		i2c3: i2c@113700 {
+			compatible = "netlogic,xlp9xx-i2c";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x113700 0x100>;
+			clock-frequency = <133000000>;
+		};
+
+		spi: xlp_spi@13a000 {
+			compatible = "netlogic,xlp-spi";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x13a000 0x100>;
+
+			spi_nor@1 {
+				compatible = "spansion,s25sl12801";
+				#address-cells = <1>;
+				#size-cells = <1>;
+
+				reg = <1>;		/* Chip Select */
+
+				spi-max-frequency = <40000000>;
+
+				partition@0 {
+					label = "x-loader";
+					reg = <0x0 0x200000>; /* 2M */
+					read-only;
+				};
+
+				partition@200000 {
+					label = "kernel";
+					reg = <0x200000 0x500000>; /* 5M */
+				};
+
+				partition@700000 {
+					label = "rootfs";
+					reg = <0x700000 0x800000>; /* 8M */
+				};
+
+				partition@f00000 {
+					label = "env";
+					reg = <0xf00000 0x100000>; /* 1M */
+					read-only;
+				};
+			};
+			spi_nand@2 {
+				compatible = "spinand,mt29f";
+				#address-cells = <1>;
+				#size-cells = <1>;
+				reg = <2>;	/* SPI NAND CS */
+				spi-max-frequency = <50000000>;
+
+				partition@0 {
+					label = "firmware";
+					reg = <0x0 0x1c00000>;
+				};
+
+				partition@1 {
+					label = "kernel";
+					reg = <0x1c00000 0x0>;
+				};
+			};
+		};
+		nor_flash@1,0 {
+			compatible = "cfi-flash";
+			#address-cells = <1>;
+			#size-cells = <1>;
+			bank-width = <2>;
+			reg = <1 0 0x1000000>;
+
+			partition@0 {
+				label = "x-loader";
+				reg = <0x0 0x100000>; /* 1M */
+				read-only;
+			};
+
+			partition@100000 {
+				label = "u-boot";
+				reg = <0x100000 0x100000>; /* 1M */
+			};
+
+			partition@200000 {
+				label = "kernel";
+				reg = <0x200000 0x500000>; /* 5M */
+			};
+
+			partition@700000 {
+				label = "rootfs";
+				reg = <0x700000 0x800000>; /* 8M */
+			};
+
+			partition@f00000 {
+				label = "env";
+				reg = <0xf00000 0x100000>; /* 1M */
+				read-only;
+			};
+		};
+fmn@node-0 {
+        default-credits = <50>;
+        default-queue-size = <28672>;
+        fmn-spill-mem-base = <0x00000000 0x10000000>; /*0 - dynamic allocation, only for 64 bit linux */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config {
+		/* credits from station     
+		   "cpu popq pcie0 pcie1 pcie2 pcie3 gdx gdx1 rsa crypto cmp poe nae regx srio lzs"
+		   The order and number of station should be matching with the list given above
+		   Here, credits 0 means the default credits. 
+		   Right now there is no way to configure credit of zero */
+
+                cpu {
+                        queue-size = <36864>; /* queue size for all the cpu vcs */
+                        credits-from {
+                                node-0 = <0 0 0 0 0 0 0 0 0 0 0 500 0 0 150 0>;
+                        };
+                };
+
+	};
+};
+fmn@node-1{
+        default-credits = <50>;
+        default-queue-size = <28672>;
+        fmn-spill-mem-base = <0x00000000 0x00000000>; /*0 - dynamic allocation */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config{
+
+	};
+};
+fmn@node-2{
+
+};
+fmn@node-3{
+
+};
+  nae@node-0 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	ucore {
+		src@1 {
+			num-opcodes = <533>;
+			path = "/work/bsp/xlp9xx/sdk-base-3.0/buildroot/output/build/sysconfig/nae/ucore/linux-ucore.c";
+			timestamp = "Sun Oct 13 02:42:55 2013
+";
+			mask = <0xffff>;
+			opcodes = <
+				0x3c1c0010 
+				0x279cf808 
+				0x3c020010 
+				0x2442f808 
+				0x3c030010 
+				0x2463f808 
+				0xac400000 
+				0x0043082b 
+				0x1420fffd 
+				0x24420004 
+				0x3c1d0010 
+				0x27bdf9c0 
+				0x27a50020 
+				0x27a60028 
+				0xaca00000 
+				0xacc00000 
+				0x0c000029 
+				0x00002021 
+				0x1000ffff 
+				0x00000000 
+				0x3c020000 
+				0x8c420888 
+				0x27bdffe0 
+				0x2403ffff 
+				0xafbf001c 
+				0xafb10018 
+				0x10430009 
+				0xafb00014 
+				0x3c100000 
+				0x26100888 
+				0x2411ffff 
+				0x0040f809 
+				0x2610fffc 
+				0x8e020000 
+				0x1451fffc 
+				0x00000000 
+				0x8fbf001c 
+				0x8fb10018 
+				0x8fb00014 
+				0x03e00008 
+				0x27bd0020 
+				0x27bdffb8 
+				0x3c030001 
+				0xafa00030 
+				0x34638000 
+				0xafa0002c 
+				0xafa00028 
+				0xafa00024 
+				0xafa00020 
+				0xafa0001c 
+				0xafa00018 
+				0xafa00014 
+				0xafa00010 
+				0xafa0000c 
+				0xafa00008 
+				0x8c67000c 
+				0xafb30044 
+				0x30e40002 
+				0x8c660000 
+				0xafb20040 
+				0xafb1003c 
+				0xafb00038 
+				0x8c620018 
+				0x10800046 
+				0x30e50001 
+				0x3c08000f 
+				0x30e70008 
+				0x30c6000c 
+				0x2405000c 
+				0x240b0100 
+				0x3504fe4c 
+				0x3c0a0178 
+				0x3c090170 
+				0x34088004 
+				0x10c50034 
+				0x8d0c0000 
+				0x8c880000 
+				0x0008fc02 
+				0xafbf0008 
+				0x8c930004 
+				0x00139402 
+				0xafb2002c 
+				0x908c0015 
+				0x319900ff 
+				0x0322001a 
+				0x004001f4 
+				0x0000c010 
+				0xafb80000 
+				0x8fb80008 
+				0x8fb9002c 
+				0x8fae0000 
+				0x25cd0006 
+				0x000d8880 
+				0x00718821 
+				0x8e2f0004 
+				0x8c700010 
+				0x8c720004 
+				0x8e2e0004 
+				0x31e800ff 
+				0x0010fa00 
+				0x000e6a02 
+				0x8e2e0004 
+				0x8c700000 
+				0x011f9821 
+				0x00136080 
+				0x320f0002 
+				0x01926021 
+				0x11e00007 
+				0x31ad00ff 
+				0x000e7402 
+				0x31d000ff 
+				0x2b3105dd 
+				0x0211680a 
+				0x3b0f0800 
+				0x020f680b 
+				0x318c0fff 
+				0x000cca00 
+				0x37380001 
+				0x34088030 
+				0xad180000 
+				0x10e00009 
+				0x000d9380 
+				0x34088000 
+				0xad090000 
+				0x34088004 
+				0x14c5ffce 
+				0x8d0c0000 
+				0x34088034 
+				0x0800004c 
+				0xad0b0000 
+				0x024a6825 
+				0x34088000 
+				0x08000049 
+				0xad0d0000 
+				0x14a000db 
+				0x3c0a000f 
+				0x30eb0004 
+				0x11600184 
+				0x3c04dead 
+				0x24633ffc 
+				0x08000093 
+				0x3484beef 
+				0xafa00004 
+				0x8fac0004 
+				0x2d8e0064 
+				0x15c0016f 
+				0x00000000 
+				0x8c730000 
+				0x1664fff9 
+				0x3c08dead 
+				0x3c03000f 
+				0x3c100001 
+				0x3465fe4c 
+				0x350abeff 
+				0x3609c000 
+				0x3c120178 
+				0x3c110170 
+				0x30e70008 
+				0x30c6000c 
+				0x240c000c 
+				0x240f0100 
+				0x24a3ffb4 
+				0x254bfff0 
+				0x2524c000 
+				0x264e0008 
+				0x262d0008 
+				0x34088004 
+				0x10cc00b7 
+				0x8d180000 
+				0x8cbf0000 
+				0x001fcc02 
+				0xafb90008 
+				0x8ca80004 
+				0x00088c02 
+				0xafb1002c 
+				0x8cb00008 
+				0x321300ff 
+				0xafb30018 
+				0x8c720000 
+				0xafb20010 
+				0x8c7f0004 
+				0xafbf000c 
+				0x8c790008 
+				0xafb90020 
+				0x8fa80018 
+				0xaca8ffc0 
+				0x90710001 
+				0x90700002 
+				0x00119200 
+				0x00109c00 
+				0x907f0000 
+				0x90790003 
+				0x030a4021 
+				0x0253c021 
+				0x90730005 
+				0x90720006 
+				0x031f8021 
+				0x00198e00 
+				0x0013fa00 
+				0x90790004 
+				0x0012c400 
+				0x90730007 
+				0x02118021 
+				0x03f88821 
+				0x0239f821 
+				0x90790009 
+				0x9071000a 
+				0x00139600 
+				0x03f2c021 
+				0x00199a00 
+				0x907f0008 
+				0x00119400 
+				0x9071000b 
+				0x0272c821 
+				0x033f9021 
+				0x00119e00 
+				0x0253f821 
+				0x0308c021 
+				0x03e84021 
+				0x0008cf02 
+				0x00088900 
+				0x03319825 
+				0x021f8023 
+				0x02138026 
+				0x0010fe82 
+				0x00109180 
+				0x03108823 
+				0x01184021 
+				0x03f2c025 
+				0x0311f826 
+				0x001fce02 
+				0x001f9a00 
+				0x02088021 
+				0x03339025 
+				0x011f4023 
+				0x02484026 
+				0x00088c02 
+				0x0008c400 
+				0x02089823 
+				0x0238c825 
+				0x0333c826 
+				0x03f0f821 
+				0x00199342 
+				0x001984c0 
+				0x02508825 
+				0x03f9c023 
+				0x011f9821 
+				0x0238c026 
+				0x0333c821 
+				0x9071000f 
+				0x02788023 
+				0x00184702 
+				0x9073000e 
+				0x0018f900 
+				0x011f9025 
+				0x02508026 
+				0x0013fc00 
+				0x9072000c 
+				0x9073000d 
+				0x00114600 
+				0x0319c021 
+				0x011f8821 
+				0x0232f821 
+				0x00134200 
+				0x00189482 
+				0x00189b80 
+				0x03e88821 
+				0x02534025 
+				0x0218f826 
+				0x03e8f823 
+				0x0239c821 
+				0x001f82c0 
+				0x001f8d42 
+				0x02309025 
+				0x03f99826 
+				0x02729823 
+				0x0013c9c2 
+				0x00134640 
+				0x03288825 
+				0x02788026 
+				0x02118023 
+				0x00109402 
+				0x0010c400 
+				0x0258c825 
+				0x021f4026 
+				0x01194023 
+				0x0008ff02 
+				0x00088900 
+				0x0113c026 
+				0x03f19025 
+				0x0312c823 
+				0x00199c82 
+				0x0019fb80 
+				0x027f8825 
+				0x0330c026 
+				0x03118023 
+				0x02089026 
+				0x00109a02 
+				0x0253c823 
+				0x333f0fff 
+				0xafbf0014 
+				0x8fa80014 
+				0xaca8ffb8 
+				0xac6b0000 
+				0x8fb80014 
+				0x00188880 
+				0x02298021 
+				0x8e120000 
+				0x0242001b 
+				0x004001f4 
+				0x00009810 
+				0xafb30000 
+				0x8fb20008 
+				0x8fb3002c 
+				0x8fb90000 
+				0x273f0006 
+				0x001f4080 
+				0x00884021 
+				0x8d180004 
+				0x8c910010 
+				0x331900ff 
+				0x00118200 
+				0x8c9f0004 
+				0x03308821 
+				0x8d100004 
+				0x0011c080 
+				0x0010ca02 
+				0x8d100004 
+				0x8c910000 
+				0x031fc021 
+				0x323f0002 
+				0x13e00007 
+				0x333900ff 
+				0x00108c02 
+				0x323000ff 
+				0x2a7305dd 
+				0x0213c80a 
+				0x3a520800 
+				0x0212c80b 
+				0x331f0fff 
+				0x001f4200 
+				0x35180001 
+				0x34088030 
+				0xad180000 
+				0x10e000b1 
+				0x00198380 
+				0x34088000 
+				0xad0d0000 
+				0x34088004 
+				0x14ccff4b 
+				0x8d180000 
+				0x34088034 
+				0x080000a9 
+				0xad0f0000 
+				0x3544fe4c 
+				0x3c099e37 
+				0x30e70008 
+				0x30c6000c 
+				0x240b000c 
+				0x240e0100 
+				0x240a0006 
+				0x2485ffb4 
+				0x252979b9 
+				0x3c0d0178 
+				0x3c0c0170 
+				0x34088004 
+				0x10cb0077 
+				0x8d0f0000 
+				0x8c990000 
+				0x00194402 
+				0xafa80008 
+				0x8c980000 
+				0x00188a02 
+				0x322f000f 
+				0xafaf0030 
+				0x8c900004 
+				0x0010fc02 
+				0xafbf002c 
+				0x8c930008 
+				0x327200ff 
+				0xafb20018 
+				0x8fb90030 
+				0x00194080 
+				0x01044021 
+				0x8d18000c 
+				0x00188b02 
+				0x322f000f 
+				0xafaf0028 
+				0x8d10000c 
+				0x321f003f 
+				0xafbf0024 
+				0x8fb30018 
+				0x126a0064 
+				0x00000000 
+				0x8cbf0000 
+				0xafbf0010 
+				0x8cb20004 
+				0xafb2000c 
+				0x8ca80008 
+				0xafa80020 
+				0x8fb80010 
+				0x8fb3000c 
+				0x8fa80020 
+				0x03097821 
+				0x0269f821 
+				0x01e88023 
+				0x021f8823 
+				0x0008cb42 
+				0x02398826 
+				0x03e89023 
+				0x0251c023 
+				0x00119a00 
+				0x02789826 
+				0x01117823 
+				0x01f3c823 
+				0x00138342 
+				0x0219c826 
+				0x0233f823 
+				0x03f94023 
+				0x00199302 
+				0x02489026 
+				0x0279c023 
+				0x03127823 
+				0x00128c00 
+				0x022f8826 
+				0x03328023 
+				0x02119823 
+				0x0011f942 
+				0x03f39826 
+				0x02514023 
+				0x0113c023 
+				0x0013c8c2 
+				0x03389026 
+				0x02337823 
+				0x01f2f823 
+				0x00128280 
+				0x021fc826 
+				0x02724023 
+				0x0119c023 
+				0x00198bc2 
+				0x02387826 
+				0xafaf0014 
+				0x8fb00014 
+				0x0202001b 
+				0x004001f4 
+				0x0000f810 
+				0xafbf0000 
+				0x8fb10008 
+				0x8fb2002c 
+				0x8fb90000 
+				0x273f0006 
+				0x001f4080 
+				0x00684021 
+				0x8d0f0004 
+				0x8c780010 
+				0x8c7f0004 
+				0x00189a00 
+				0x8d180004 
+				0x31f000ff 
+				0x0213c821 
+				0x00188202 
+				0x321800ff 
+				0x8d100004 
+				0x8c730000 
+				0x00197880 
+				0x32790002 
+				0x13200007 
+				0x01ff7821 
+				0x00108402 
+				0x321300ff 
+				0x2a5205dd 
+				0x0272c00a 
+				0x3a310800 
+				0x0271c00b 
+				0x31ff0fff 
+				0x001f4200 
+				0x350f0001 
+				0x34088030 
+				0xad0f0000 
+				0x10e00009 
+				0x0018cb80 
+				0x34088000 
+				0xad0c0000 
+				0x34088004 
+				0x14cbff8b 
+				0x8d0f0000 
+				0x34088034 
+				0x08000170 
+				0xad0e0000 
+				0x032dc025 
+				0x34088000 
+				0x0800016d 
+				0xad180000 
+				0x8fb30024 
+				0x32720010 
+				0x1240ff9a 
+				0x00000000 
+				0x8fb80028 
+				0x8fb10030 
+				0x8fbf002c 
+				0x02387821 
+				0x000f8080 
+				0x161fff93 
+				0x00000000 
+				0x8d130004 
+				0x00139402 
+				0xafb2001c 
+				0x8fb9001c 
+				0x0322001b 
+				0x004001f4 
+				0x00004010 
+				0x080001bf 
+				0xafa80000 
+				0x8faa0004 
+				0x25490001 
+				0xafa90004 
+				0x8fa50004 
+				0x2cad0064 
+				0x11a0fe8c 
+				0x00000000 
+				0x08000201 
+				0x00000000 
+				0x020ec825 
+				0x34088000 
+				0x080000a6 
+				0xad190000 
+				0x00001021 
+				0x8fb30044 
+				0x8fb20040 
+				0x8fb1003c 
+				0x8fb00038 
+				0x03e00008 
+				0x27bd0048 
+			>;
+		};
+	};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00200000>; // spill address is allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+		/* If port-fifo-en is not specified(0/1), it will be set to 1 
+		   while building the linux dtb file. For all the othercases it will be set to 0.
+		   See build-dtb.sh. If required, user can explicitly set the value here.
+		   */
+		port-fifo-en = <1>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+
+//		poe-spill-address = <0xec00000>;
+//		poe-spill-length = <0x10000>;
+
+		// Comminting the actual value to be given to
+		// POE as POE is not getting called in the
+		// regular case
+		poe-spill-address = <0x0>;
+		poe-spill-length =  <0x0>;
+		
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+			mgmt-port = <0 0 0 0>;
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+        	        rx-buffer-size = <128 128 128 128>;
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to  <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable  = <0x0>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to  <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable  = <0x0>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+                sgmii {
+                        loopback = <0 0 0 0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <13 13 13 13>;
+
+                        ext-phy-addr = <12 15 14 13>;
+                        ext-phy-bus = <1 1 1 1>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        num-channels = <1 1 1 1>;
+                        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        rx-buffer-size = <128 128 128 128>;
+
+
+                        // Max available descriptors are 1024 (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <52 52 52 52>;
+                        free-desc-size = <2048 2048 2048 2048>;
+                        ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+                };
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+	
+			mgmt-port = <1 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+                
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+   nae@node-1 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	ucore {
+		src@1 {
+			num-opcodes = <533>;
+			path = "/sdk-base-3.0/buildroot/output/build/sysconfig/nae/ucore/linux-ucore.c";
+			timestamp = "Sun Oct 13 02:42:55 2013
+";
+			mask = <0xffff>;
+			opcodes = <
+				0x3c1c0010 
+				0x279cf808 
+				0x3c020010 
+				0x2442f808 
+				0x3c030010 
+				0x2463f808 
+				0xac400000 
+				0x0043082b 
+				0x1420fffd 
+				0x24420004 
+				0x3c1d0010 
+				0x27bdf9c0 
+				0x27a50020 
+				0x27a60028 
+				0xaca00000 
+				0xacc00000 
+				0x0c000029 
+				0x00002021 
+				0x1000ffff 
+				0x00000000 
+				0x3c020000 
+				0x8c420888 
+				0x27bdffe0 
+				0x2403ffff 
+				0xafbf001c 
+				0xafb10018 
+				0x10430009 
+				0xafb00014 
+				0x3c100000 
+				0x26100888 
+				0x2411ffff 
+				0x0040f809 
+				0x2610fffc 
+				0x8e020000 
+				0x1451fffc 
+				0x00000000 
+				0x8fbf001c 
+				0x8fb10018 
+				0x8fb00014 
+				0x03e00008 
+				0x27bd0020 
+				0x27bdffb8 
+				0x3c030001 
+				0xafa00030 
+				0x34638000 
+				0xafa0002c 
+				0xafa00028 
+				0xafa00024 
+				0xafa00020 
+				0xafa0001c 
+				0xafa00018 
+				0xafa00014 
+				0xafa00010 
+				0xafa0000c 
+				0xafa00008 
+				0x8c67000c 
+				0xafb30044 
+				0x30e40002 
+				0x8c660000 
+				0xafb20040 
+				0xafb1003c 
+				0xafb00038 
+				0x8c620018 
+				0x10800046 
+				0x30e50001 
+				0x3c08000f 
+				0x30e70008 
+				0x30c6000c 
+				0x2405000c 
+				0x240b0100 
+				0x3504fe4c 
+				0x3c0a0178 
+				0x3c090170 
+				0x34088004 
+				0x10c50034 
+				0x8d0c0000 
+				0x8c880000 
+				0x0008fc02 
+				0xafbf0008 
+				0x8c930004 
+				0x00139402 
+				0xafb2002c 
+				0x908c0015 
+				0x319900ff 
+				0x0322001a 
+				0x004001f4 
+				0x0000c010 
+				0xafb80000 
+				0x8fb80008 
+				0x8fb9002c 
+				0x8fae0000 
+				0x25cd0006 
+				0x000d8880 
+				0x00718821 
+				0x8e2f0004 
+				0x8c700010 
+				0x8c720004 
+				0x8e2e0004 
+				0x31e800ff 
+				0x0010fa00 
+				0x000e6a02 
+				0x8e2e0004 
+				0x8c700000 
+				0x011f9821 
+				0x00136080 
+				0x320f0002 
+				0x01926021 
+				0x11e00007 
+				0x31ad00ff 
+				0x000e7402 
+				0x31d000ff 
+				0x2b3105dd 
+				0x0211680a 
+				0x3b0f0800 
+				0x020f680b 
+				0x318c0fff 
+				0x000cca00 
+				0x37380001 
+				0x34088030 
+				0xad180000 
+				0x10e00009 
+				0x000d9380 
+				0x34088000 
+				0xad090000 
+				0x34088004 
+				0x14c5ffce 
+				0x8d0c0000 
+				0x34088034 
+				0x0800004c 
+				0xad0b0000 
+				0x024a6825 
+				0x34088000 
+				0x08000049 
+				0xad0d0000 
+				0x14a000db 
+				0x3c0a000f 
+				0x30eb0004 
+				0x11600184 
+				0x3c04dead 
+				0x24633ffc 
+				0x08000093 
+				0x3484beef 
+				0xafa00004 
+				0x8fac0004 
+				0x2d8e0064 
+				0x15c0016f 
+				0x00000000 
+				0x8c730000 
+				0x1664fff9 
+				0x3c08dead 
+				0x3c03000f 
+				0x3c100001 
+				0x3465fe4c 
+				0x350abeff 
+				0x3609c000 
+				0x3c120178 
+				0x3c110170 
+				0x30e70008 
+				0x30c6000c 
+				0x240c000c 
+				0x240f0100 
+				0x24a3ffb4 
+				0x254bfff0 
+				0x2524c000 
+				0x264e0008 
+				0x262d0008 
+				0x34088004 
+				0x10cc00b7 
+				0x8d180000 
+				0x8cbf0000 
+				0x001fcc02 
+				0xafb90008 
+				0x8ca80004 
+				0x00088c02 
+				0xafb1002c 
+				0x8cb00008 
+				0x321300ff 
+				0xafb30018 
+				0x8c720000 
+				0xafb20010 
+				0x8c7f0004 
+				0xafbf000c 
+				0x8c790008 
+				0xafb90020 
+				0x8fa80018 
+				0xaca8ffc0 
+				0x90710001 
+				0x90700002 
+				0x00119200 
+				0x00109c00 
+				0x907f0000 
+				0x90790003 
+				0x030a4021 
+				0x0253c021 
+				0x90730005 
+				0x90720006 
+				0x031f8021 
+				0x00198e00 
+				0x0013fa00 
+				0x90790004 
+				0x0012c400 
+				0x90730007 
+				0x02118021 
+				0x03f88821 
+				0x0239f821 
+				0x90790009 
+				0x9071000a 
+				0x00139600 
+				0x03f2c021 
+				0x00199a00 
+				0x907f0008 
+				0x00119400 
+				0x9071000b 
+				0x0272c821 
+				0x033f9021 
+				0x00119e00 
+				0x0253f821 
+				0x0308c021 
+				0x03e84021 
+				0x0008cf02 
+				0x00088900 
+				0x03319825 
+				0x021f8023 
+				0x02138026 
+				0x0010fe82 
+				0x00109180 
+				0x03108823 
+				0x01184021 
+				0x03f2c025 
+				0x0311f826 
+				0x001fce02 
+				0x001f9a00 
+				0x02088021 
+				0x03339025 
+				0x011f4023 
+				0x02484026 
+				0x00088c02 
+				0x0008c400 
+				0x02089823 
+				0x0238c825 
+				0x0333c826 
+				0x03f0f821 
+				0x00199342 
+				0x001984c0 
+				0x02508825 
+				0x03f9c023 
+				0x011f9821 
+				0x0238c026 
+				0x0333c821 
+				0x9071000f 
+				0x02788023 
+				0x00184702 
+				0x9073000e 
+				0x0018f900 
+				0x011f9025 
+				0x02508026 
+				0x0013fc00 
+				0x9072000c 
+				0x9073000d 
+				0x00114600 
+				0x0319c021 
+				0x011f8821 
+				0x0232f821 
+				0x00134200 
+				0x00189482 
+				0x00189b80 
+				0x03e88821 
+				0x02534025 
+				0x0218f826 
+				0x03e8f823 
+				0x0239c821 
+				0x001f82c0 
+				0x001f8d42 
+				0x02309025 
+				0x03f99826 
+				0x02729823 
+				0x0013c9c2 
+				0x00134640 
+				0x03288825 
+				0x02788026 
+				0x02118023 
+				0x00109402 
+				0x0010c400 
+				0x0258c825 
+				0x021f4026 
+				0x01194023 
+				0x0008ff02 
+				0x00088900 
+				0x0113c026 
+				0x03f19025 
+				0x0312c823 
+				0x00199c82 
+				0x0019fb80 
+				0x027f8825 
+				0x0330c026 
+				0x03118023 
+				0x02089026 
+				0x00109a02 
+				0x0253c823 
+				0x333f0fff 
+				0xafbf0014 
+				0x8fa80014 
+				0xaca8ffb8 
+				0xac6b0000 
+				0x8fb80014 
+				0x00188880 
+				0x02298021 
+				0x8e120000 
+				0x0242001b 
+				0x004001f4 
+				0x00009810 
+				0xafb30000 
+				0x8fb20008 
+				0x8fb3002c 
+				0x8fb90000 
+				0x273f0006 
+				0x001f4080 
+				0x00884021 
+				0x8d180004 
+				0x8c910010 
+				0x331900ff 
+				0x00118200 
+				0x8c9f0004 
+				0x03308821 
+				0x8d100004 
+				0x0011c080 
+				0x0010ca02 
+				0x8d100004 
+				0x8c910000 
+				0x031fc021 
+				0x323f0002 
+				0x13e00007 
+				0x333900ff 
+				0x00108c02 
+				0x323000ff 
+				0x2a7305dd 
+				0x0213c80a 
+				0x3a520800 
+				0x0212c80b 
+				0x331f0fff 
+				0x001f4200 
+				0x35180001 
+				0x34088030 
+				0xad180000 
+				0x10e000b1 
+				0x00198380 
+				0x34088000 
+				0xad0d0000 
+				0x34088004 
+				0x14ccff4b 
+				0x8d180000 
+				0x34088034 
+				0x080000a9 
+				0xad0f0000 
+				0x3544fe4c 
+				0x3c099e37 
+				0x30e70008 
+				0x30c6000c 
+				0x240b000c 
+				0x240e0100 
+				0x240a0006 
+				0x2485ffb4 
+				0x252979b9 
+				0x3c0d0178 
+				0x3c0c0170 
+				0x34088004 
+				0x10cb0077 
+				0x8d0f0000 
+				0x8c990000 
+				0x00194402 
+				0xafa80008 
+				0x8c980000 
+				0x00188a02 
+				0x322f000f 
+				0xafaf0030 
+				0x8c900004 
+				0x0010fc02 
+				0xafbf002c 
+				0x8c930008 
+				0x327200ff 
+				0xafb20018 
+				0x8fb90030 
+				0x00194080 
+				0x01044021 
+				0x8d18000c 
+				0x00188b02 
+				0x322f000f 
+				0xafaf0028 
+				0x8d10000c 
+				0x321f003f 
+				0xafbf0024 
+				0x8fb30018 
+				0x126a0064 
+				0x00000000 
+				0x8cbf0000 
+				0xafbf0010 
+				0x8cb20004 
+				0xafb2000c 
+				0x8ca80008 
+				0xafa80020 
+				0x8fb80010 
+				0x8fb3000c 
+				0x8fa80020 
+				0x03097821 
+				0x0269f821 
+				0x01e88023 
+				0x021f8823 
+				0x0008cb42 
+				0x02398826 
+				0x03e89023 
+				0x0251c023 
+				0x00119a00 
+				0x02789826 
+				0x01117823 
+				0x01f3c823 
+				0x00138342 
+				0x0219c826 
+				0x0233f823 
+				0x03f94023 
+				0x00199302 
+				0x02489026 
+				0x0279c023 
+				0x03127823 
+				0x00128c00 
+				0x022f8826 
+				0x03328023 
+				0x02119823 
+				0x0011f942 
+				0x03f39826 
+				0x02514023 
+				0x0113c023 
+				0x0013c8c2 
+				0x03389026 
+				0x02337823 
+				0x01f2f823 
+				0x00128280 
+				0x021fc826 
+				0x02724023 
+				0x0119c023 
+				0x00198bc2 
+				0x02387826 
+				0xafaf0014 
+				0x8fb00014 
+				0x0202001b 
+				0x004001f4 
+				0x0000f810 
+				0xafbf0000 
+				0x8fb10008 
+				0x8fb2002c 
+				0x8fb90000 
+				0x273f0006 
+				0x001f4080 
+				0x00684021 
+				0x8d0f0004 
+				0x8c780010 
+				0x8c7f0004 
+				0x00189a00 
+				0x8d180004 
+				0x31f000ff 
+				0x0213c821 
+				0x00188202 
+				0x321800ff 
+				0x8d100004 
+				0x8c730000 
+				0x00197880 
+				0x32790002 
+				0x13200007 
+				0x01ff7821 
+				0x00108402 
+				0x321300ff 
+				0x2a5205dd 
+				0x0272c00a 
+				0x3a310800 
+				0x0271c00b 
+				0x31ff0fff 
+				0x001f4200 
+				0x350f0001 
+				0x34088030 
+				0xad0f0000 
+				0x10e00009 
+				0x0018cb80 
+				0x34088000 
+				0xad0c0000 
+				0x34088004 
+				0x14cbff8b 
+				0x8d0f0000 
+				0x34088034 
+				0x08000170 
+				0xad0e0000 
+				0x032dc025 
+				0x34088000 
+				0x0800016d 
+				0xad180000 
+				0x8fb30024 
+				0x32720010 
+				0x1240ff9a 
+				0x00000000 
+				0x8fb80028 
+				0x8fb10030 
+				0x8fbf002c 
+				0x02387821 
+				0x000f8080 
+				0x161fff93 
+				0x00000000 
+				0x8d130004 
+				0x00139402 
+				0xafb2001c 
+				0x8fb9001c 
+				0x0322001b 
+				0x004001f4 
+				0x00004010 
+				0x080001bf 
+				0xafa80000 
+				0x8faa0004 
+				0x25490001 
+				0xafa90004 
+				0x8fa50004 
+				0x2cad0064 
+				0x11a0fe8c 
+				0x00000000 
+				0x08000201 
+				0x00000000 
+				0x020ec825 
+				0x34088000 
+				0x080000a6 
+				0xad190000 
+				0x00001021 
+				0x8fb30044 
+				0x8fb20040 
+				0x8fb1003c 
+				0x8fb00038 
+				0x03e00008 
+				0x27bd0048 
+			>;
+		};
+	};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00200000>; // Spill address will be allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>;
+                freein-fifo-spill-num-descs = <1200>;
+
+		/* If port-fifo-en is not specified(0/1), it will be set to 1 
+		   while building the linux dtb file. For all the othercases it will be set to 0.
+		   See build-dtb.sh. If required, user can explicitly set the value here.
+		   */
+		port-fifo-en = <1>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+		
+		distribution-enable = <1>;
+		// 16 bit mask
+		dist-drop-enable = <0>;	 
+		// 8 bit mask
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+ 
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        // Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;  
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+			mgmt-port = <1 0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+ 		               
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+nae@node-2 {
+
+};
+nae@node-3 {
+
+};
+		nodes {
+			num-nodes = <1>;
+		};
+
+	};
+};
+
-- 
1.7.9.5

