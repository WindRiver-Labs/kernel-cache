From f6e0746e9699ba5e54d02220cf1f8518ac6ac09b Mon Sep 17 00:00:00 2001
From: Alok Agrawat <alok@broadcom.com>
Date: Mon, 18 Nov 2013 05:00:33 -0800
Subject: [PATCH 050/163] netlib: fixed issue with lane mode. removed lane
 reset.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c |   66 +-----------------------
 1 file changed, 2 insertions(+), 64 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
index 8b041ca..32b4f7f 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
@@ -769,15 +769,12 @@ static void xlp9xx_config_pma2p0_serdes(nae_t *nae, uint32_t block, uint32_t pma
 	uint32_t delay, pma2p0_config;
 	uint64_t mac_base = netsoc_get_macreg_base_for_phy(nae->mac_base, block);
         int lane_enable = 0;
-	uint64_t lane_mac_base = netsoc_get_macreg_base_for_lanecfg(nae->mac_base);
 
 	       	if(!pma2p0_por){
                         pma2p0_config = netsoc_read_mac_reg(netsoc_get_macreg_base_for_phy(nae->mac_base, 2), PMA2P0_CTL0);
                         pma2p0_config &= ~PMA2P0_CTL_POR;
                         netsoc_write_mac_reg(netsoc_get_macreg_base_for_phy(nae->mac_base, 2), PMA2P0_CTL0, pma2p0_config);
                	}
-		netsoc_write_mac_reg(lane_mac_base, LANE_CFG_CPLX_0_1,  lane_enable);	
-		netsoc_write_mac_reg(lane_mac_base, LANE_CFG_CPLX_2_3,  lane_enable);	
                
 		pma2p0_config = netsoc_read_mac_reg(mac_base, PMA2P0_CTL0);
                 pma2p0_config &= 0xFFFF01FF;
@@ -1214,46 +1211,7 @@ static void xlp9xx_ilk_pcs_init(nae_t *nae, uint32_t ilk_complex_map)
 	uint64_t mac_base = netsoc_get_macreg_base_for_lanecfg(nae->mac_base);
 	int ilk_num_lanes, ilk_rate;
 	uint32_t phymode = PHYMODE_IL;
-	//uint32_t phymode = PHYMODE_RXAUI;
 
-	netsoc_api_print(NETSOC_APIDBG_TRACE,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^#################%s ilk_complex_map = %x\n",__FUNCTION__,  ilk_complex_map);
-#if 0
-	for(block=0; block < XLP9XX_MAX_NAE_COMPLEX; block+=2) {
-		if (ilk_complex_map & (1<<block)) {
-			ilk_num_lanes = nae->num_lanes[block/2];
-			ilk_rate = nae->lane_rate[block/2];
-
-	netsoc_api_print(NETSOC_APIDBG_TRACE,"\n^^^^^^^^^^^^^^^^^^^^^^^^^^block = %d ilk_num_lanes = %d, ilk_rate = %d ",block, ilk_num_lanes, ilk_rate); 	
-
-			lane_cfg_reg =  ((block < 2) ? LANE_CFG_CPLX_0_1 : LANE_CFG_CPLX_2_3);
-
-        		max_block = block ;
-        		max_block += ((ilk_num_lanes > MAX_LANE_PER_CPLX ) ? 2 : 1);
-
-			for(; temp_block < max_block ; temp_block++ ) {
-				if (temp_block % 2) {
-					ilk_lane_eable <<= 16;
-					lane_mask <<= 16;
-				}
-				else {
-				ilk_lane_eable = (LM_IL << LANE_CFG_LANE_3_POS) |
-						(LM_IL << LANE_CFG_LANE_2_POS) |
-						(LM_IL << LANE_CFG_LANE_1_POS) | LM_IL;
-					lane_mask = 0xFFFFFFFF;
-//						ilk_lane_eable = 0x3333;
-	netsoc_api_print(NETSOC_APIDBG_TRACE,"\n^^^^^^^^^^^^^^^^^^^^^^^^^^ %s else part ilk_lane_eable = %x\n ",__FUNCTION__, ilk_lane_eable); 	
-				}
-				lane_config = netsoc_read_mac_reg(mac_base, lane_cfg_reg);
-				netsoc_write_mac_reg(mac_base, lane_cfg_reg, lane_config & (~lane_mask));
-
-				lane_config = netsoc_read_mac_reg(mac_base, lane_cfg_reg);
-				lane_config |= ilk_lane_eable;
-				netsoc_write_mac_reg(mac_base, lane_cfg_reg, lane_config | ilk_lane_eable);
-			}
-		}
-	}
-#endif
-//ilk_complex_map = 3;
 	for( block = 0; block < 4; block++)
 	{
 		int speed = 10;//nae->xgmii_speed[block];
@@ -1263,31 +1221,18 @@ static void xlp9xx_ilk_pcs_init(nae_t *nae, uint32_t ilk_complex_map)
                 }
 		netsoc_api_print(NETSOC_APIDBG_TRACE,"\n################# xaui_speed = %d\n", speed );
 		netsoc_api_print(NETSOC_APIDBG_PORT,"VSEMI: config data for Interlaken \n");
-               nlm_hal_config_pma2p0_mem_rxaui_4page();
+        	       nlm_hal_config_pma2p0_mem_rxaui_4page();
                 nlm_hal_config_pma2p0_mem_rxaui();
-		//nlm_hal_config_pma2p0_mem_10G_lane_4page();
-		//nlm_hal_config_pma2p0_mem_10G_lane();
 		
-netsoc_api_print(NETSOC_APIDBG_TRACE,"\n################# vsemi config done ###############\n");
+		netsoc_api_print(NETSOC_APIDBG_TRACE,"\n################# vsemi config done ###############\n");
 		/*config PMA2P0 block */
 		xlp9xx_config_pma2p0_serdes(nae, block, nae->serdes_init_cnt, speed, phymode);
 		nae->serdes_init_cnt++;	
 
-#if 0
-		for( lane_ctrl = PHY_LANE_0_CTRL; lane_ctrl <= PHY_LANE_3_CTRL; lane_ctrl++){
-			xlp9xx_lane_reset(nae, block, lane_ctrl, phymode);
-		}
-#endif
-//	}
-//ilk_complex_map = 1;
-#if 1
-	//for(block=0; block < XLP9XX_MAX_NAE_COMPLEX; block+=2) {
 		if (ilk_complex_map & (1<<block)) {
 			ilk_num_lanes = nae->num_lanes[block/2];
 			ilk_rate = nae->lane_rate[block/2];
 
-	netsoc_api_print(NETSOC_APIDBG_TRACE,"\n^^^^^^^^^^^^^^^^^^^^^^^^^^block = %d ilk_num_lanes = %d, ilk_rate = %d ",block, ilk_num_lanes, ilk_rate); 	
-
 			lane_cfg_reg =  ((block < 2) ? LANE_CFG_CPLX_0_1 : LANE_CFG_CPLX_2_3);
 
         		max_block = block ;
@@ -1303,8 +1248,6 @@ netsoc_api_print(NETSOC_APIDBG_TRACE,"\n################# vsemi config done ####
 						(LM_IL << LANE_CFG_LANE_2_POS) |
 						(LM_IL << LANE_CFG_LANE_1_POS) | LM_IL;
 					lane_mask = 0xFFFFFFFF;
-//						ilk_lane_eable = 0x3333;
-	netsoc_api_print(NETSOC_APIDBG_TRACE,"\n^^^^^^^^^^^^^^^^^^^^^^^^^^ %s else part ilk_lane_eable = %x\n ",__FUNCTION__, ilk_lane_eable); 	
 				}
 				lane_config = netsoc_read_mac_reg(mac_base, lane_cfg_reg);
 				netsoc_write_mac_reg(mac_base, lane_cfg_reg, lane_config & (~lane_mask));
@@ -1314,10 +1257,6 @@ netsoc_api_print(NETSOC_APIDBG_TRACE,"\n################# vsemi config done ####
 				netsoc_write_mac_reg(mac_base, lane_cfg_reg, lane_config | ilk_lane_eable);
 			}
 		}
-//	}
-#endif
-//	for( block = 0; block < 4; block++)
-//	{
 		for( lane_ctrl = PHY_LANE_0_CTRL; lane_ctrl <= PHY_LANE_3_CTRL; lane_ctrl++){
 			xlp9xx_lane_reset(nae, block, lane_ctrl, phymode);
 		}
@@ -1666,7 +1605,6 @@ int __netsoc_interlaken_pcs_init(nae_t *nae, uint32_t ilk_complex_map)
 
 	if(is_nlm_xlp9xx())
 	{
-		netsoc_api_print(NETSOC_APIDBG_TRACE,"\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^%s  %d",__FUNCTION__, __LINE__);
 		xlp9xx_ilk_pcs_init(nae, ilk_complex_map);
 	}
 	else
-- 
1.7.9.5

