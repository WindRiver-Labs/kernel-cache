From 4ca40320c4c87730de86633b401542b0520d14ed Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Tue, 11 Feb 2014 18:57:39 +0800
Subject: [PATCH 04/58] bcm-xlp: enables cop2 access for both user and kernel
 space

XLP use the COP2 as the message ring interface.

Based on SDK 3.0 (2013-10-29)

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/include/asm/stackframe.h  |   15 +++++++++++++++
 arch/mips/include/uapi/asm/ptrace.h |    9 +++++++++
 arch/mips/kernel/asm-offsets.c      |    9 +++++++++
 arch/mips/kernel/r4k_switch.S       |    4 ++++
 arch/mips/kernel/traps.c            |    5 +++++
 5 files changed, 42 insertions(+)

diff --git a/arch/mips/include/asm/stackframe.h b/arch/mips/include/asm/stackframe.h
index a89d1b1..65ef2ec 100644
--- a/arch/mips/include/asm/stackframe.h
+++ b/arch/mips/include/asm/stackframe.h
@@ -217,6 +217,14 @@
 		LONG_S	$31, PT_R31(sp)
 		ori	$28, sp, _THREAD_MASK
 		xori	$28, _THREAD_MASK
+#ifdef CONFIG_NLM_ENABLE_COP2
+		.set    mips64
+		dla k0, nlm_cop2_save
+		jalr k0
+		nop
+		LONG_L  ra, PT_R31(sp)
+		LONG_L  k0, PT_R29(sp)
+#endif
 #ifdef CONFIG_CPU_CAVIUM_OCTEON
 		.set	mips64
 		pref	0, 0($28)	/* Prefetch the current pointer */
@@ -368,7 +376,14 @@
 		ori	a0, STATMASK
 		xori	a0, STATMASK
 		mtc0	a0, CP0_STATUS
+#ifdef CONFIG_NLM_ENABLE_COP2
+		dla	v1, nlm_cop2_restore
+		jalr	v1
+		nop
+		li	v1, 0xff00|ST0_CU2
+#else  
 		li	v1, 0xff00
+#endif 
 		and	a0, v1
 		LONG_L	v0, PT_STATUS(sp)
 		nor	v1, $0, v1
diff --git a/arch/mips/include/uapi/asm/ptrace.h b/arch/mips/include/uapi/asm/ptrace.h
index b26f7e3..0868a1606 100644
--- a/arch/mips/include/uapi/asm/ptrace.h
+++ b/arch/mips/include/uapi/asm/ptrace.h
@@ -38,6 +38,15 @@ struct pt_regs {
 	unsigned long cp0_badvaddr;
 	unsigned long cp0_cause;
 	unsigned long cp0_epc;
+#ifdef CONFIG_NLM_ENABLE_COP2
+	unsigned long long tx_buf[4];
+	unsigned long long rx_buf[4];
+	unsigned int tx_msg_status;
+	unsigned int rx_msg_status;
+	unsigned int misc_status;
+	unsigned int msg_config;
+	unsigned int msg_err;
+#endif
 } __attribute__ ((aligned (8)));
 #endif /* __KERNEL__ */
 
diff --git a/arch/mips/kernel/asm-offsets.c b/arch/mips/kernel/asm-offsets.c
index 0845091..bac2dff 100644
--- a/arch/mips/kernel/asm-offsets.c
+++ b/arch/mips/kernel/asm-offsets.c
@@ -70,6 +70,15 @@ void output_ptreg_defines(void)
 	OFFSET(PT_MPL, pt_regs, mpl);
 	OFFSET(PT_MTP, pt_regs, mtp);
 #endif /* CONFIG_CPU_CAVIUM_OCTEON */
+#ifdef CONFIG_NLM_ENABLE_COP2
+	OFFSET(NLM_COP2_TX_BUF, pt_regs, tx_buf);
+	OFFSET(NLM_COP2_RX_BUF, pt_regs, rx_buf);
+	OFFSET(NLM_COP2_TX_MSG_STATUS, pt_regs, tx_msg_status);
+	OFFSET(NLM_COP2_RX_MSG_STATUS, pt_regs, rx_msg_status);
+	OFFSET(NLM_COP2_MISC_STATUS, pt_regs, misc_status);
+	OFFSET(NLM_COP2_MSG_CONFIG, pt_regs, msg_config);
+	OFFSET(NLM_COP2_MSG_ERR, pt_regs, msg_err);
+#endif
 	DEFINE(PT_SIZE, sizeof(struct pt_regs));
 	BLANK();
 }
diff --git a/arch/mips/kernel/r4k_switch.S b/arch/mips/kernel/r4k_switch.S
index 5e51219..4381dc3 100644
--- a/arch/mips/kernel/r4k_switch.S
+++ b/arch/mips/kernel/r4k_switch.S
@@ -90,7 +90,11 @@
 	move	ra,t1
 #endif /* CONFIG_MIPS_MT_SMTC */
 	mfc0	t1, CP0_STATUS		/* Do we really need this? */
+#ifdef CONFIG_NLM_ENABLE_COP2
+	li	a3, 0xff01|ST0_CU2
+#else
 	li	a3, 0xff01
+#endif
 	and	t1, a3
 	LONG_L	a2, THREAD_STATUS(a1)
 	nor	a3, $0, a3
diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c
index a75ae40..b7abb3c 100644
--- a/arch/mips/kernel/traps.c
+++ b/arch/mips/kernel/traps.c
@@ -1687,6 +1687,11 @@ void __cpuinit per_cpu_trap_init(bool is_boot_cpu)
 	if (cpu_has_dsp)
 		status_set |= ST0_MX;
 
+#ifdef CONFIG_NLM_ENABLE_COP2
+	/* Enable Cop2 Access */
+	status_set |= ST0_CU2;
+#endif
+
 	change_c0_status(ST0_CU|ST0_MX|ST0_RE|ST0_FR|ST0_BEV|ST0_TS|ST0_KX|ST0_SX|ST0_UX,
 			 status_set);
 
-- 
1.7.9.5

