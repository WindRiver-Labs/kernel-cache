From 28e6dd506fb5ecb0bc19581b51dd1cf0a5fc17a6 Mon Sep 17 00:00:00 2001
From: Hareesh R <hareeshr@broadcom.com>
Date: Mon, 18 Nov 2013 12:42:06 +0530
Subject: [PATCH 075/163] kmod/nae: Enabling GSO option by default for all
 processors except 2xx B0 and 9xx. TSO will be
 enabled by default on 2xx B0 and 9xx. "force_tso"
 option is added to force enable TSO on any
 processor.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 drivers/netlogic/nae/xlpge_nae.c |    6 +++++-
 drivers/netlogic/nae/xlpge_rx.c  |    2 ++
 drivers/netlogic/nae/xlpge_tso.h |   12 ++++++++++--
 3 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/drivers/netlogic/nae/xlpge_nae.c b/drivers/netlogic/nae/xlpge_nae.c
index d66923d..2da4ea37 100644
--- a/drivers/netlogic/nae/xlpge_nae.c
+++ b/drivers/netlogic/nae/xlpge_nae.c
@@ -85,6 +85,10 @@ int lro_flush_priv_cnt[NR_CPUS];
 int lro_flush_needed[NR_CPUS][20];
 struct dev_data *lro_flush_priv[NR_CPUS][20];
 
+/* Tso will be enabled depending on the chip type,
+*  Setting this to 1 will enable it irrespctive of the chip type */
+int force_tso=0;
+module_param(force_tso, int, 0);
 
 static uint32_t lnx_frfifo_normal_mask[NLM_MAX_NODES][MAX_NAE_PERNODE];
 static uint32_t lnx_frfifo_jumbo_mask[NLM_MAX_NODES][MAX_NAE_PERNODE];
@@ -1039,7 +1043,7 @@ static int  nlm_xlp_nae_open (struct net_device *dev)
 		else 
 			priv->flow_ctrl=0;
 		//nlm_xlp_mac_set_enable(priv, 1);
-		//netsoc_disable_flow_control(priv->nae_port);
+		netsoc_disable_flow_control(priv->nae_port);
 
 	return ret;
 }
diff --git a/drivers/netlogic/nae/xlpge_rx.c b/drivers/netlogic/nae/xlpge_rx.c
index e70c0a9..36f11c8 100644
--- a/drivers/netlogic/nae/xlpge_rx.c
+++ b/drivers/netlogic/nae/xlpge_rx.c
@@ -806,9 +806,11 @@ static inline void process_rx_packets(void *arg, int cpu, unsigned int src_id,
 	} else
 #endif
 	{
+#if 0
 		if ((skb->dev->features & NETIF_F_GRO) && napi)
 			napi_gro_receive(napi, skb);
 		else
+#endif
 			netif_receive_skb(skb);
 	}
 
diff --git a/drivers/netlogic/nae/xlpge_tso.h b/drivers/netlogic/nae/xlpge_tso.h
index 93a1f55..f7f390c 100644
--- a/drivers/netlogic/nae/xlpge_tso.h
+++ b/drivers/netlogic/nae/xlpge_tso.h
@@ -43,6 +43,7 @@
 #include "xlpge.h"
 //#define MACSEC_DEBUG	1
 extern struct p2p_desc_mem p2p_desc_mem[NR_CPUS];
+extern int force_tso;
 
 static __inline__ uint64_t nae_tso_desc0(
 		unsigned int type,
@@ -351,10 +352,17 @@ out_unlock:
 static int __maybe_unused tso_enable(struct net_device *dev, u32 data)
 {
 	int rv = 0;
-
 	dev->hw_features = NETIF_F_SG | NETIF_F_IP_CSUM | NETIF_F_TSO;
-	dev->features = dev->hw_features;
+	dev->features |= dev->hw_features;
 	dev->features |= NETIF_F_HIGHDMA;
+	if(!(is_nlm_xlp2xx_b0() || is_nlm_xlp9xx())) {
+		/* If force tso is not set, enable gso in that case */
+		if(!force_tso) {
+			printk("Disabling TSO & Enabling GSO \n");
+			dev->features = (dev->features & ~NETIF_F_TSO) | NETIF_F_GSO;
+			dev->hw_features = (dev->hw_features & ~NETIF_F_TSO) | NETIF_F_GSO;
+		}
+	}
 	return rv;
 }
 #endif //TSO_H_
-- 
1.7.9.5

