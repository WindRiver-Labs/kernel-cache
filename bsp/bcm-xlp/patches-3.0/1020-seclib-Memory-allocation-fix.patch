From 72562f34f4d7adb31732ac39b544dc209b55eddb Mon Sep 17 00:00:00 2001
From: Hareesh R <hareeshr@broadcom.com>
Date: Tue, 29 Oct 2013 13:53:25 +0530
Subject: [PATCH 020/163] seclib:Memory allocation fix

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 .../netlogic/lib/seclib/eccsoc_gen1_hal_defs.h     |    1 -
 arch/mips/netlogic/lib/seclib/eccsoc_lib.h         |    8 +++++---
 arch/mips/netlogic/lib/seclib/rsasoc_lib.h         |    7 ++++---
 .../netlogic/lib/seclib/saesoc_gen1_hal_defs.h     |    2 +-
 arch/mips/netlogic/lib/seclib/saesoc_lib.h         |   13 ++++++++-----
 5 files changed, 18 insertions(+), 13 deletions(-)

diff --git a/arch/mips/netlogic/lib/seclib/eccsoc_gen1_hal_defs.h b/arch/mips/netlogic/lib/seclib/eccsoc_gen1_hal_defs.h
index 4989c0d..3ebadaf 100644
--- a/arch/mips/netlogic/lib/seclib/eccsoc_gen1_hal_defs.h
+++ b/arch/mips/netlogic/lib/seclib/eccsoc_gen1_hal_defs.h
@@ -145,7 +145,6 @@ static inline char *eccsoc_get_op_func(int val, char *buf)
 
 static inline void eccsoc_gen1_dump_fmnentry(_uint64_t entry0, _uint64_t entry1)
 {
-	char buf[32], buf1[32];
 	cryptosoc_dbg_print("\nFmn Info entry0 %llx entry1 %llx\n",entry0, entry1);
 	cryptosoc_dbg_print("  %-16s %-16s %-16s %-16s\n",
 			"SrcL3Alloc","Type", "Func", "SrcAddr");
diff --git a/arch/mips/netlogic/lib/seclib/eccsoc_lib.h b/arch/mips/netlogic/lib/seclib/eccsoc_lib.h
index cf5c4bf..e06dc0c 100644
--- a/arch/mips/netlogic/lib/seclib/eccsoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/eccsoc_lib.h
@@ -484,7 +484,7 @@ static inline struct eccsoc_request_desc *eccsoc_create_new_desc(
 					dpriv->req_info[req_num].inp_size, inp_size);
 			if(dpriv->req_info[req_num].inp_alloc)
 				cryptosoc_mem_free(dpriv->req_info[req_num].inp);
-			dpriv->req_info[req_num].inp = cryptosoc_mem_alloc(8, inp_size);
+			dpriv->req_info[req_num].inp = cryptosoc_mem_alloc(1024, inp_size);
 			if(!dpriv->req_info[req_num].inp)
 				return NULL;
 			dpriv->req_info[req_num].inp_alloc = 1;
@@ -498,7 +498,7 @@ static inline struct eccsoc_request_desc *eccsoc_create_new_desc(
 					dpriv->req_info[req_num].res_size, res_size);
 			if(dpriv->req_info[req_num].res_alloc)
 				cryptosoc_mem_free(dpriv->req_info[req_num].res);
-			dpriv->req_info[req_num].res = cryptosoc_mem_alloc(8, res_size);
+			dpriv->req_info[req_num].res = cryptosoc_mem_alloc(1024, res_size);
 			if(!dpriv->req_info[req_num].res)
 				return NULL;
 			dpriv->req_info[req_num].res_alloc = 1;
@@ -508,7 +508,9 @@ static inline struct eccsoc_request_desc *eccsoc_create_new_desc(
 		int req_info_sz = max_reqs * sizeof(struct eccsoc_req_info);
 		int size = inp_size + res_size + req_info_sz;
 		void *mbase;
-		desc = cryptosoc_mem_alloc(CRYPTOSOC_CACHELINE_SZ, sizeof(*desc) + size);
+		/* ecc max blk size is 72 bytes, 6 req and 2 res args ,
+		*  total 128 * 8 = 1024 */
+		desc = cryptosoc_mem_alloc(1024 * max_reqs, sizeof(*desc) + size);
 		if(!desc)
 			return NULL; 
 		dpriv = (struct eccsoc_req_desc_priv_data *)desc->lib_priv;
diff --git a/arch/mips/netlogic/lib/seclib/rsasoc_lib.h b/arch/mips/netlogic/lib/seclib/rsasoc_lib.h
index 958b01b..c9c942d 100644
--- a/arch/mips/netlogic/lib/seclib/rsasoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/rsasoc_lib.h
@@ -240,7 +240,7 @@ static inline struct rsasoc_request_desc *rsasoc_create_new_desc(
 		if(inp_size && (dpriv->req_info[req_num].inp_size < inp_size)) {
 			if(dpriv->req_info[req_num].inp_alloc)
 				cryptosoc_mem_free(dpriv->req_info[req_num].inp);
-			dpriv->req_info[req_num].inp = cryptosoc_mem_alloc(8, inp_size);
+			dpriv->req_info[req_num].inp = cryptosoc_mem_alloc(inp_size * 2, inp_size);
 			if(!dpriv->req_info[req_num].inp)
 				return NULL;
 			dpriv->req_info[req_num].inp_alloc = 1;
@@ -251,7 +251,7 @@ static inline struct rsasoc_request_desc *rsasoc_create_new_desc(
 		if(res_size && (dpriv->req_info[req_num].res_size < res_size)) {
 			if(dpriv->req_info[req_num].res_alloc)
 				cryptosoc_mem_free(dpriv->req_info[req_num].res);
-			dpriv->req_info[req_num].res = cryptosoc_mem_alloc(8, res_size);
+			dpriv->req_info[req_num].res = cryptosoc_mem_alloc(res_size, res_size);
 			if(!dpriv->req_info[req_num].res)
 				return NULL;
 			dpriv->req_info[req_num].res_alloc = 1;
@@ -261,7 +261,8 @@ static inline struct rsasoc_request_desc *rsasoc_create_new_desc(
 		int req_info_sz = max_reqs * sizeof(struct rsasoc_req_info);
 		int size = inp_size + res_size + req_info_sz;
 		void *mbase;
-		desc = cryptosoc_mem_alloc(CRYPTOSOC_CACHELINE_SZ, sizeof(*desc) + size);
+		/* max blk in rsa is 8192(1024 bytes) - 2048 for the result, 2 for req args */
+		desc = cryptosoc_mem_alloc(2048 * 2 * max_reqs, sizeof(*desc) + size);
 		if(!desc)
 			return NULL; 
 		dpriv = (struct rsasoc_req_desc_priv_data *)desc->lib_priv;
diff --git a/arch/mips/netlogic/lib/seclib/saesoc_gen1_hal_defs.h b/arch/mips/netlogic/lib/seclib/saesoc_gen1_hal_defs.h
index d100a59..f584123 100644
--- a/arch/mips/netlogic/lib/seclib/saesoc_gen1_hal_defs.h
+++ b/arch/mips/netlogic/lib/seclib/saesoc_gen1_hal_defs.h
@@ -903,7 +903,7 @@ static inline _uint64_t  saesoc_gen1_form_fmn_entry0(
 		unsigned int cipher_key_len_in_dw, _uint64_t ctrl_desc_addr)
 {
 	return( SAESOC_GEN1_SET_BITS(reg_fb_dst_id, REG_FB_DEST_ID) |
-		SAESOC_GEN1_SET_BITS(des_fb_len - 1, DESIGN_FB_LEN) | 
+		SAESOC_GEN1_SET_BITS((des_fb_len - 1), DESIGN_FB_LEN) | 
 		SAESOC_GEN1_SET_BITS(des_fb_en, DESIGN_FB_EN) |
 		SAESOC_GEN1_SET_BITS(cipher_key_len_in_dw, CIPHER_KEY_LEN) | 
 		SAESOC_GEN1_SET_BITS(ctrl_desc_addr, CTRL_DESC_ADDR));
diff --git a/arch/mips/netlogic/lib/seclib/saesoc_lib.h b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
index bc77cfe..5e25f61 100644
--- a/arch/mips/netlogic/lib/seclib/saesoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
@@ -475,7 +475,7 @@ static inline int saesoc_new_session(
 		/* take the maximum of it*/
 		dcnt = ndescs > dcnt ? ndescs : dcnt;
 
-		*sdesc = cryptosoc_mem_alloc(CRYPTOSOC_CACHELINE_SZ,
+		*sdesc = cryptosoc_mem_alloc((((dcnt * 8)/256) + 2) * 256,
 				sizeof(struct saesoc_session_desc) + dcnt * sizeof(_uint64_t));
 		if(*sdesc == NULL)
 			return -CRYPTOSOC_ENOMEM;
@@ -860,7 +860,7 @@ static inline int saesoc_new_data_desc(
 #endif
 
 	if(*ddesc == NULL) {
-		*ddesc = cryptosoc_mem_alloc(CRYPTOSOC_CACHELINE_SZ,
+		*ddesc = cryptosoc_mem_alloc((((ndescs * 8)/256) + 2) * 256,
 				sizeof(struct saesoc_data_desc) + ndescs * sizeof(_uint64_t));
 		if(*ddesc == NULL)
 			return -CRYPTOSOC_ENOMEM;
@@ -978,7 +978,7 @@ static inline int saesoc_add_frags(
 		/* TODO : Error checks */
 		/* we will do alternate src & dst fragments if both are present */
 		max = slen > dlen ? slen : dlen;
-		for(i = 0; i < max; i++) {
+		for(i = 0; i < max; ) {
 				sl = 0; dl = 0;
 				if(slen > i) {
 					sl = slen - i > maxfraglen ? maxfraglen : slen - i;
@@ -1030,7 +1030,7 @@ static inline int saesoc_add_frags(
 		/* TODO : Error checks */
 		/* we will do alternate src & dst fragments if both are present */
 		max = slen > dlen ? slen : dlen;
-		for(i = 0; i < max; i++) {
+		for(i = 0; i < max; ) {
 				sl = 0; dl = 0;
 				if(slen > i) {
 					ddesc->descs[nf] = spriv->ddesc[4];
@@ -1322,7 +1322,7 @@ static inline int saesoc_copy_ddesc(
 
 
 	if(*ddesc_new == NULL) {
-		*ddesc_new = cryptosoc_mem_alloc(CRYPTOSOC_CACHELINE_SZ,
+		*ddesc_new = cryptosoc_mem_alloc((((ndescs_new * 8)/256) + 2) * 256,
 			sizeof(struct saesoc_data_desc) + ndescs_new * sizeof(_uint64_t));
 		if(*ddesc_new == NULL)
 			return -CRYPTOSOC_ENOMEM;
@@ -1908,6 +1908,9 @@ static inline int saesoc_process_request(
 
 		fmnentry2 = mparam != NULL ? mparam->async_rsp_arg : 0ULL;
 
+		//saesoc_dump_desc_info(sdesc, ddesc);
+		//saesoc_gen1_dump_fmnentry(fmnentry0, fmnentry1);
+
 		goto send_req;
 
 	}
-- 
1.7.9.5

