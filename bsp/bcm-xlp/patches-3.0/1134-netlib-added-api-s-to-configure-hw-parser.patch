From f89f56a2341a8bcedf8b3ed6564ddc5669c0b5a9 Mon Sep 17 00:00:00 2001
From: Prasanna Mumabi <prasanna.mumbai@broadcom.com>
Date: Mon, 3 Feb 2014 01:08:21 -0800
Subject: [PATCH 134/160] netlib: added api's to configure hw parser

Signed-off-by: Jack Tan <jack.tan@windriver.com>
Signed-off-by: Jack Tan <jiankemeng@gmail.com>
---
 arch/mips/netlogic/lib/netlib/include/export_sym.h |    1 +
 .../netlogic/lib/netlib/include/netsoc_haliface.h  |    1 +
 .../netlogic/lib/netlib/include/netsoc_libiface.h  |    1 +
 arch/mips/netlogic/lib/netlib/include/nlm_nae.h    |    8 +++
 arch/mips/netlogic/lib/netlib/src/netsoc_api.c     |   19 ++++++
 arch/mips/netlogic/lib/netlib/src/netsoc_parser.c  |   68 ++++++++++++++++++++
 6 files changed, 98 insertions(+)

diff --git a/arch/mips/netlogic/lib/netlib/include/export_sym.h b/arch/mips/netlogic/lib/netlib/include/export_sym.h
index b3605b0..a50346c 100644
--- a/arch/mips/netlogic/lib/netlib/include/export_sym.h
+++ b/arch/mips/netlogic/lib/netlib/include/export_sym.h
@@ -61,6 +61,7 @@ EXPORT_SYMBOL(netsoc_config_nae_l2parser_perport);
 EXPORT_SYMBOL(netsoc_config_nae_l2parser);
 EXPORT_SYMBOL(netsoc_disable_nae_hwparser);
 EXPORT_SYMBOL(netsoc_enable_nae_hwparser);
+EXPORT_SYMBOL(netsoc_configure_nae_hwparser);
 EXPORT_SYMBOL(netsoc_config_nae_l4parser);
 EXPORT_SYMBOL(netsoc_config_nae_l3parser);
 EXPORT_SYMBOL(netsoc_lib_writel);
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
index e6de287..a197015 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
@@ -103,6 +103,7 @@ extern int __netsoc_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_
 extern int __netsoc_ext_phy_an(net_port_t *netport);
 extern void __netsoc_init_ext_phy(net_port_t *netport);
 extern int __netsoc_enable_nae_hwparser(nae_t *nae);
+extern int __netsoc_configure_nae_hwparser(nae_t *nae, parser_config_t *parser_config);
 extern int __netsoc_disable_nae_hwparser(nae_t *nae);
 extern int __netsoc_config_nae_l2parser_perport(nae_t *nae, l2_parser_config_t *l2, uint32_t portnum);
 extern int __netsoc_config_nae_l2parser(nae_t *nae, l2_parser_config_t *l2);
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
index 582dfb4..22ce6f6 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
@@ -564,6 +564,7 @@ extern int netsoc_enable_flow_control(net_port_t *netport);
 extern int netsoc_flow_control_status(nae_t *nae, uint32_t port);
 extern int netsoc_mdio_write(net_port_t *netport, uint32_t type, uint32_t phyaddr, uint32_t regidx, uint32_t val);
 extern int netsoc_mdio_read(net_port_t *netport, uint32_t type, uint32_t phyaddr, uint32_t regidx);
+extern int netsoc_configure_nae_hwparser(nae_t *nae, parser_config_t *parser_config);
 extern int netsoc_enable_nae_hwparser(nae_t *nae);
 extern int netsoc_disable_nae_hwparser(nae_t *nae);
 extern int netsoc_config_nae_l2parser_perport(nae_t *nae, l2_parser_config_t *l2, uint32_t port);
diff --git a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
index 47618f3..88f7ec4 100644
--- a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
@@ -258,6 +258,14 @@ typedef struct {
 }l4_parser_config_t;
 
 typedef struct {
+	l2_parser_config_t l2;
+	l3_parser_config_t l3;
+	l4_parser_config_t l4;
+	uint32_t rx_vc;
+	uint8_t mask[80];
+}parser_config_t;
+
+typedef struct {
 	uint64_t spill_base;
 	uint64_t spill_size;
 	uint32_t spill_num_descs;
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
index fcffeb8..ce3c419 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
@@ -1092,6 +1092,25 @@ int netsoc_disable_nae_hwparser(nae_t *nae)
 	return __netsoc_disable_nae_hwparser(nae);
 }
 
+/**
+* @brief netsoc_configure_nae_hwparser function is used to enable hardware parser
+* 
+* @param [in] nae Pointer to nae_t
+* @param [in] parser_config Pointer to parser_config_t
+*
+* @return
+*       - NETSOC_API_SUCCESS on success
+*       - < 0 on error
+* 
+* @ingroup hal_nae
+*
+*/
+
+int netsoc_configure_nae_hwparser(nae_t *nae, parser_config_t *parser_config)
+{
+	return __netsoc_configure_nae_hwparser(nae, parser_config);
+}
+
 
 /**
 * @brief netsoc_config_nae_l2parser function is used to configure layer 2 parsing
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_parser.c b/arch/mips/netlogic/lib/netlib/src/netsoc_parser.c
index a96b8bf..f6670fc 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_parser.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_parser.c
@@ -33,10 +33,14 @@
 #include "netsoc_parser.h"
 #include "netsoc_libiface.h"
 
+#define ONLINEMASK_WORD_SIZE	80
+#define ONLINEMASK_PER_INDEX_SZ	8
 
 int __netsoc_enable_nae_hwparser(nae_t *nae)
 {
 	uint32_t val;
+	netsoc_api_print(1, "Enabling parser for nae node %d naeid %d\n",
+			nae->node, nae->nae_id);
 
 	val = netsoc_read_nae_reg(nae->nae_base, RX_CONFIG);
 	val |= (1 << 12);
@@ -106,9 +110,73 @@ int __netsoc_config_nae_l4parser(nae_t *nae, l4_parser_config_t *l4_cfg, int ent
 	netsoc_write_nae_reg(nae->nae_base, L4_CTABLE_0_0 + (entry * 2), val);
 	val = l4_parser_cfg2reg_odd(l4_cfg);
 	netsoc_write_nae_reg(nae->nae_base, L4_CTABLE_0_1 + (entry * 2), val);
+
 	return NETSOC_API_SUCCESS;	
 }
 
+int __netsoc_config_enable_flow_table(nae_t *nae, parser_config_t *cfg_parser)
+{
+	uint32_t val;
+	int port = 0;
+	int l2proto = 1;
+	uint32_t dest_vc, max_vc;
+	int i = 0, cpu = 0, shift = 0;
+	int word_num;
+
+	max_vc = XLP9XX_MAX_CPU_PER_NODE * MAX_VC_PERTHREAD;
+	/* update destination FLOW_TABLE1_CFG and FLOW_TABLE3_CFG */
+	for (i=0; i<20; i++)
+	{
+		val = (0<<31) | (i<<0); /* write operation */
+		netsoc_write_nae_reg(nae->nae_base, FLOW_TABLE1_CFG, val);
+
+		/* base = 0 and size = 512 */
+		val = (512<<20) | (i<<0);
+		netsoc_write_nae_reg(nae->nae_base, FLOW_TABLE1_CFG, val);
+	}
+	/* FLOW_TABLE3_CFG has 9-bit index, hence 512 entries */
+	/*
+	   Using hash based distribution.
+	   Configure the flow table to send packets to the nae_rx_vc of each online cpu */
+	for (i = 0; i < 512;)
+	{
+		cpu = dest_vc / MAX_VC_PERTHREAD;
+		word_num = (ONLINEMASK_WORD_SIZE -1) - (cpu / ONLINEMASK_PER_INDEX_SZ);
+		shift = cpu % ONLINEMASK_PER_INDEX_SZ;
+		/*
+		 * configuring for online cpu's
+	         **/	 
+		if (cfg_parser->mask[word_num] & (1 << shift))
+		{
+			val = (0<<31) | (i<<0); /* write operation */
+			netsoc_write_nae_reg(nae->nae_base, FLOW_TABLE3_CFG, val);
+			val = (dest_vc<<12) | (i<<0);
+			netsoc_write_nae_reg(nae->nae_base, FLOW_TABLE3_CFG, val);
+			i++;
+		}
+		dest_vc += MAX_VC_PERTHREAD;
+		if (dest_vc >= max_vc) { /* max vcs in a core */
+			dest_vc = cfg_parser->rx_vc;
+		}
+
+	}
+
+}
+
+int __netsoc_configure_nae_hwparser(nae_t *nae, parser_config_t *parser_config)
+{
+	netsoc_api_print(1, "Configuring parser for nae node %d naeid %d\n",
+			nae->node, nae->nae_id);
+	netsoc_api_print(1, "nae:%p nae->nae_base:%p nae->num_ports:%d nae->node:%d nae->nae_id:%d\n",
+			nae, nae->nae_base, nae->num_ports,  nae->node, nae->nae_id);
+
+	__netsoc_config_nae_l2parser(nae, &parser_config->l2);
+	__netsoc_config_nae_l3parser(nae, &parser_config->l3, 0);
+	__netsoc_config_nae_l4parser(nae, &parser_config->l4, 0);
+	__netsoc_config_enable_flow_table(nae, parser_config);
+
+	return NETSOC_API_SUCCESS;
+}
 
 int __netsoc_config_nae_l2parser_perport(nae_t *nae, l2_parser_config_t *l2, uint32_t portnum)
 {
-- 
1.7.9.5

