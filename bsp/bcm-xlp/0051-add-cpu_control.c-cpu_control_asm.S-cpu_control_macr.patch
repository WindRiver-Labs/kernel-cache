From d573a8e8d6d51c79fef6434156ce3647d3bcf63a Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Mon, 31 May 2010 03:24:07 -0700
Subject: [PATCH 051/762] add cpu_control.c cpu_control_asm.S cpu_control_macros.h

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/Makefile      |    4 ++--
 arch/mips/netlogic/xlp/cpu_control.c |    5 ++++-
 arch/mips/netlogic/xlp/smp.c         |   30 +-----------------------------
 3 files changed, 7 insertions(+), 32 deletions(-)

diff --git a/arch/mips/netlogic/xlp/Makefile b/arch/mips/netlogic/xlp/Makefile
index cdc5260..8973c90 100644
--- a/arch/mips/netlogic/xlp/Makefile
+++ b/arch/mips/netlogic/xlp/Makefile
@@ -6,5 +6,5 @@ obj-y 				   	+= irq.o time.o on_chip.o mmu.o
 obj-$(CONFIG_NLM_XLP) 	+= platform-xlp.o
 obj-$(CONFIG_SMP)       += smp.o smpboot.o
 obj-$(CONFIG_KGDB)      += nmi.o
-obj-$(CONFIG_NLM_XLP) 	+= cpu_control.o cpu_control_asm.o
-obj-y				    += bootinfo.o
+obj-$(CONFIG_NLM_XLP) += cpu_control.o cpu_control_asm.o
+obj-y += bootinfo.o
diff --git a/arch/mips/netlogic/xlp/cpu_control.c b/arch/mips/netlogic/xlp/cpu_control.c
index 9b7c8ee..7a0b81c 100644
--- a/arch/mips/netlogic/xlp/cpu_control.c
+++ b/arch/mips/netlogic/xlp/cpu_control.c
@@ -1,5 +1,5 @@
 /***********************************************************************
-Copyright 2003-2010 Netlogic Microsystems (�~@~\Netlogic�~@~]). All rights
+Copyright 2003-2010 Netlogic Microsystems (Netlogic). All rights
 reserved.
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
@@ -49,6 +49,8 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #define XLP_SYS_DEV_BASE        0x35000
 
 
+
+
 /* Globals Section 
  */ 
 uint32_t cores_bitmap = 0x1;	/* Bitmap of cores to enable  */
@@ -98,6 +100,7 @@ void enable_cores(unsigned int node, unsigned int cbitmap, unsigned int thread_n
 			value = (thread_num-1) << (i*2);
 			nlm_hal_write_32bit_reg(sys_mmio, 0x4C, value);
 		}
+
 		if (cbitmap & core) {
 
 			/* Enable CPU clock 
diff --git a/arch/mips/netlogic/xlp/smp.c b/arch/mips/netlogic/xlp/smp.c
index e99f85c..437decc 100644
--- a/arch/mips/netlogic/xlp/smp.c
+++ b/arch/mips/netlogic/xlp/smp.c
@@ -232,39 +232,11 @@ extern uint32_t xlp_linux_cpu_mask;
 #else
 #define secondary_cpus_bootup_func prom_pre_boot_secondary_cpus
 #endif
+extern void enable_cpus(int online_mask);
 
 int wakeup_secondary_cpus(void)
 {
-	printk("Enabling CPU Mask [0x%x]\n", onlinemask);
 	enable_cpus(onlinemask);
-	__u32 wakeup_mask;
-#if defined(CONFIG_NLM_XLP_SIM)
-	unsigned int wait_count = 0;
-#endif
-
-	if (xlr_loader_support) {
-		wakeup_mask = xlp_linux_cpu_mask | nlm_common_loader_mask;
-		if (wakeup != NULL)
-			wakeup((void *)secondary_cpus_bootup_func, 0, wakeup_mask);
-	} 
-	else {
-		if (wakeup != NULL) {
-			wakeup((void *)secondary_cpus_bootup_func, 0, 
-				   (__u32)prom_info->nlm_cpu_online_map & (~smp_boot.online_map));
-#if defined(CONFIG_NLM_XLP_SIM)
-			while (smp_boot.online_map != prom_info->nlm_cpu_online_map) {
-				if ((wait_count++ % 1000000) == 0) {
-					printk("[%s%d]: Master cpu waiting for slave cpus to wakeup from bootloader (%x != %llx)\n",
-					       __FUNCTION__, __LINE__, smp_boot.online_map, 
-						   (unsigned long long) prom_info->nlm_cpu_online_map);
-				}
-			}
-			printk("[%s@%d]: woke up prom_info->nlm_cpu_online_map=%016llx\n", __FILE__, __LINE__, 
-				   (unsigned long long) prom_info->nlm_cpu_online_map);
-#endif
-		}
-	}
-
 	return 0;
 }
 
-- 
1.7.0.4

