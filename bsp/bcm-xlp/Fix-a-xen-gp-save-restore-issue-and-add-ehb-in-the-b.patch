From 8fb0ad1c02e95ced4d3d4fb9172b1bc8f20ee40e Mon Sep 17 00:00:00 2001
From: Yonghong Song <ysong@netlogicmicro.com>
Date: Thu, 6 Oct 2011 22:20:36 -0700
Subject: [PATCH 443/761] Fix a xen gp save/restore issue and add "ehb" in the
 beginning of interrupt handler

Based on Broadcom SDK 2.3.

Signed-off-by: Yonghong Song <ysong@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/xen/hypercall.h |   60 ++++++++++++++++++++++-----------
 arch/mips/xen/enlighten.c             |    2 --
 2 files changed, 41 insertions(+), 21 deletions(-)

diff --git a/arch/mips/include/asm/xen/hypercall.h b/arch/mips/include/asm/xen/hypercall.h
index e06a331..865f2ad 100644
--- a/arch/mips/include/asm/xen/hypercall.h
+++ b/arch/mips/include/asm/xen/hypercall.h
@@ -93,8 +93,6 @@
  * 6. restore gp
  */
 
-DECLARE_PER_CPU(unsigned long, gpctx);
-
 extern struct { unsigned long _entry; } hypercall_page[];
 
 #define load_gp(var) \
@@ -120,13 +118,16 @@ extern struct { unsigned long _entry; } hypercall_page[];
         ); \
 })
 
-#define switch_xen_linux_stacks() \
+#define switch_xen_linux_stacks(v_temp, temp) \
 ({ \
-	load_gp(__get_cpu_var(gpctx)); \
+	load_gp(temp);	v_temp = temp;  \
 	store_gp((*(HYPERVISOR_shared_info->arch.xensp[hard_smp_processor_id()])) & ~(XEN_PAGE_SIZE - 1)); \
 })
 
-#define restore_linux_stack() store_gp(__get_cpu_var(gpctx))
+#define restore_linux_stack(v_temp, temp) \
+({ \
+	temp = v_temp; store_gp(temp);	  \
+})
 
 #define __HYPERCALL                                                     \
         ".set\tpush\n.set\tnoreorder\njalr\t%[func]\nnop\n.set\tpop\n"
@@ -177,79 +178,97 @@ extern struct { unsigned long _entry; } hypercall_page[];
 
 #define _hypercall0(type, name)						\
 ({									\
+	volatile unsigned long v_temp;					\
+	unsigned long temp; 						\
+									\
 	__HYPERCALL_DECLS;						\
 	__HYPERCALL_0ARG();						\
-	switch_xen_linux_stacks(); \
+	switch_xen_linux_stacks(v_temp, temp); \
 	asm volatile (__HYPERCALL					\
 		      : __HYPERCALL_0PARAM				\
 		      : __HYPERCALL_ENTRY(name)				\
 		      : __HYPERCALL_CLOBBER0);				\
-	restore_linux_stack(); \
+	restore_linux_stack(v_temp, temp); 				\
 	(type)__res;							\
 })
 
 #define _hypercall1(type, name, a1)					\
 ({									\
+	volatile unsigned long v_temp;					\
+	unsigned long temp; 						\
+									\
 	__HYPERCALL_DECLS;						\
 	__HYPERCALL_1ARG(a1);						\
-	switch_xen_linux_stacks(); \
+	switch_xen_linux_stacks(v_temp, temp); \
 	asm volatile (__HYPERCALL					\
 		      : __HYPERCALL_1PARAM				\
 		      : __HYPERCALL_ENTRY(name)				\
 		      : __HYPERCALL_CLOBBER1);				\
-	restore_linux_stack(); \
+	restore_linux_stack(v_temp, temp); 				\
 	(type)__res;							\
 })
 
 #define _hypercall2(type, name, a1, a2)					\
 ({									\
+	volatile unsigned long v_temp;					\
+	unsigned long temp; 						\
+									\
 	__HYPERCALL_DECLS;						\
 	__HYPERCALL_2ARG(a1, a2);					\
-	switch_xen_linux_stacks(); \
+	switch_xen_linux_stacks(v_temp, temp); \
 	asm volatile (__HYPERCALL					\
 		      : __HYPERCALL_2PARAM				\
 		      : __HYPERCALL_ENTRY(name)				\
 		      : __HYPERCALL_CLOBBER2);				\
-	restore_linux_stack(); \
+	restore_linux_stack(v_temp, temp); 				\
 	(type)__res;							\
 })
 
 #define _hypercall3(type, name, a1, a2, a3)				\
 ({									\
+	volatile unsigned long v_temp;					\
+	unsigned long temp; 						\
+									\
 	__HYPERCALL_DECLS;						\
 	__HYPERCALL_3ARG(a1, a2, a3);					\
-	switch_xen_linux_stacks(); \
+	switch_xen_linux_stacks(v_temp, temp); \
 	asm volatile (__HYPERCALL					\
 		      : __HYPERCALL_3PARAM				\
 		      : __HYPERCALL_ENTRY(name)				\
 		      : __HYPERCALL_CLOBBER3);				\
-	restore_linux_stack(); \
+	restore_linux_stack(v_temp, temp); 				\
 	(type)__res;							\
 })
 
 #define _hypercall4(type, name, a1, a2, a3, a4)				\
 ({									\
+	volatile unsigned long v_temp;					\
+	unsigned long temp; 						\
+									\
 	__HYPERCALL_DECLS;						\
 	__HYPERCALL_4ARG(a1, a2, a3, a4);				\
-	switch_xen_linux_stacks(); \
+	switch_xen_linux_stacks(v_temp, temp); \
 	asm volatile (__HYPERCALL					\
 		      : __HYPERCALL_4PARAM				\
 		      : __HYPERCALL_ENTRY(name)				\
 		      : __HYPERCALL_CLOBBER4);				\
-	restore_linux_stack(); \
+	restore_linux_stack(v_temp, temp); 				\
 	(type)__res;							\
 })
 
 #define _hypercall5(type, name, a1, a2, a3, a4, a5)			\
 ({									\
+	volatile unsigned long v_temp;					\
+	unsigned long temp; 						\
+									\
 	__HYPERCALL_DECLS;						\
 	__HYPERCALL_5ARG(a1, a2, a3, a4, a5);				\
-	switch_xen_linux_stacks(); \
+	switch_xen_linux_stacks(v_temp, temp); \
 	asm volatile (__HYPERCALL					\
 		      : __HYPERCALL_5PARAM				\
 		      : __HYPERCALL_ENTRY(name)				\
 		      : __HYPERCALL_CLOBBER5);				\
-	restore_linux_stack(); \
+	restore_linux_stack(v_temp, temp); 				\
 	(type)__res;							\
 })
 
@@ -259,15 +278,18 @@ privcmd_call(unsigned call,
 	     unsigned long a3, unsigned long a4,
 	     unsigned long a5)
 {
+	volatile unsigned long v_temp;					\
+	unsigned long temp; 						\
+									\
 	__HYPERCALL_DECLS;
 	__HYPERCALL_5ARG(a1, a2, a3, a4, a5);
 
-	switch_xen_linux_stacks();
+	switch_xen_linux_stacks(v_temp, temp);
 	asm volatile(__HYPERCALL
 		     : __HYPERCALL_5PARAM
 		     : [func] "r" (hypercall_page[call]._entry)
 		     : __HYPERCALL_CLOBBER5);
-	restore_linux_stack();
+	restore_linux_stack(v_temp, temp);
 
 	return (long)__res;
 }
diff --git a/arch/mips/xen/enlighten.c b/arch/mips/xen/enlighten.c
index 3a7f68a..c7310ae 100644
--- a/arch/mips/xen/enlighten.c
+++ b/arch/mips/xen/enlighten.c
@@ -73,8 +73,6 @@ struct shared_info xen_dummy_shared_info;
  */
 struct shared_info *HYPERVISOR_shared_info = (void *)&xen_dummy_shared_info;
 
-DEFINE_PER_CPU(unsigned long, gpctx);
-
 unsigned long get_phys_to_machine(unsigned long pfn)
 {
 	return pfn;
-- 
1.7.10.4

