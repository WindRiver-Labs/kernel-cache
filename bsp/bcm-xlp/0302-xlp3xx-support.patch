From 41b132a5406a93bbc2470106a3d45c01c7f8520e Mon Sep 17 00:00:00 2001
From: Yonghong Song <ysong@netlogicmicro.com>
Date: Tue, 21 Jun 2011 11:12:40 -0700
Subject: [PATCH 302/762] xlp3xx support

Based on Broadcom SDK 2.3.

Signed-off-by: Yonghong Song <ysong@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/on_chip.c |   45 ++++++++++++++++++++++++++++++++++---
 1 files changed, 41 insertions(+), 4 deletions(-)

diff --git a/arch/mips/netlogic/xlp/on_chip.c b/arch/mips/netlogic/xlp/on_chip.c
index 3555ca2..9cb2e79 100644
--- a/arch/mips/netlogic/xlp/on_chip.c
+++ b/arch/mips/netlogic/xlp/on_chip.c
@@ -133,6 +133,39 @@ static uint16_t vc_to_handle_map[MAX_VC] = {
 	[1020 ... 4095] = XLP_MSG_HANDLE_INVALID
 };
 
+static uint16_t xlp3xx_vc_to_handle_map[MAX_VC] = {
+	[0 ... 15] = XLP_MSG_HANDLE_CPU0,
+	[16 ... 31] = XLP_MSG_HANDLE_CPU1,
+	[32 ... 47] = XLP_MSG_HANDLE_CPU2,
+	[48 ... 63] = XLP_MSG_HANDLE_CPU3,
+	[64 ... 79] = XLP_MSG_HANDLE_INVALID,
+	[80 ... 95] = XLP_MSG_HANDLE_INVALID,
+	[96 ... 111] = XLP_MSG_HANDLE_INVALID,
+	[112 ... 127] = XLP_MSG_HANDLE_INVALID,
+	[128 ... 143] = XLP_MSG_HANDLE_CPU0,
+	[144 ... 159] = XLP_MSG_HANDLE_CPU1,
+	[160 ... 175] = XLP_MSG_HANDLE_CPU2,
+	[176 ... 191] = XLP_MSG_HANDLE_CPU3,
+	[192 ... 207] = XLP_MSG_HANDLE_INVALID,
+	[208 ... 223] = XLP_MSG_HANDLE_INVALID,
+	[224 ... 239] = XLP_MSG_HANDLE_INVALID,
+	[240 ... 255] = XLP_MSG_HANDLE_INVALID,
+	[256 ... 257] = XLP_MSG_HANDLE_PCIE0,
+	[258 ... 259] = XLP_MSG_HANDLE_PCIE1,
+	[260 ... 261] = XLP_MSG_HANDLE_PCIE2,
+	[262 ... 263] = XLP_MSG_HANDLE_PCIE3,
+	[264 ... 267] = XLP_MSG_HANDLE_GDX,
+	[268 ... 271] = XLP_MSG_HANDLE_REGX,
+	[272 ... 275] = XLP_MSG_HANDLE_RSA_ECC,
+	[276 ... 279] = XLP_MSG_HANDLE_CRYPTO,
+	[280 ... 288] = XLP_MSG_HANDLE_SRIO,
+	[289 ... 383] = XLP_MSG_HANDLE_INVALID,
+	[384 ... 391] = XLP_MSG_HANDLE_NAE_0,
+	[392 ... 431] = XLP_MSG_HANDLE_INVALID,
+	[432 ... 511] = XLP_MSG_HANDLE_NAE_0,
+	[512 ... 4095]= XLP_MSG_HANDLE_INVALID
+};
+
 /******************************************************************************************
  *  dummy_handler 
  *
@@ -202,14 +235,13 @@ void nlm_xlp_msgring_int_handler(unsigned int irq, struct pt_regs *regs)
         msgrng_access_enable(mflags);
 	cycles = read_c0_count();
 
-	/* Don't loop forever, it may increase interrupt latency */
-	for (loop = 0; loop < 16; loop++) {
+	for (;;) {
 
 		/* Read latest VC empty mask */
 		msg_status1 = xlp_read_status1();
 
 		vc_empty_status = (msg_status1 >> 24) & pop_vc_mask;
-		if (vc_empty_status == pop_vc_mask) break;
+		if (vc_empty_status == pop_vc_mask) break;  
 
 		for( vc = 0; vc < 4; vc++)
 		{
@@ -219,7 +251,12 @@ void nlm_xlp_msgring_int_handler(unsigned int irq, struct pt_regs *regs)
 			if(status != 0)
 				continue;
 
-			handler = &msg_handler_map[vc_to_handle_map[src_id]];
+			if (is_nlm_xlp3xx()) {
+				handler = &msg_handler_map[xlp3xx_vc_to_handle_map[src_id]];
+			}
+			else {
+				handler = &msg_handler_map[vc_to_handle_map[src_id]];
+			}
 
 			/* Execute device driver fmn handler */
 			(handler->action)(vc, src_id, size, code,
-- 
1.7.0.4

