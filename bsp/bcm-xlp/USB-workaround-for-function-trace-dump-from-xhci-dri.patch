From 5dd0f433a58f529f3fa54cae6e4c1d0aef494b0f Mon Sep 17 00:00:00 2001
From: Om Narasimhan <omn@broadcom.com>
Date: Tue, 15 Jan 2013 15:07:05 -0800
Subject: [PATCH 662/761] USB : workaround for function trace dump from xhci
 driver

XHCI driver dumps function trace after some heavy usb traffic. This commit
is a workaround to avoid the trace.

Based on Broadcom SDK 2.3.

Signed-off-by: Om Narasimhan <omn@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/irq.c      |    6 +++---
 arch/mips/netlogic/xlp/usb-init.c |    2 +-
 drivers/usb/host/xhci-ring.c      |    4 ++++
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/arch/mips/netlogic/xlp/irq.c b/arch/mips/netlogic/xlp/irq.c
index c53dd6c..5ee34f1 100644
--- a/arch/mips/netlogic/xlp/irq.c
+++ b/arch/mips/netlogic/xlp/irq.c
@@ -74,13 +74,13 @@ void nlm_oprofile_interrupt(struct pt_regs *regs, int irq)
 
 	int    perfctr_overflow = 0;
 	perfctr_overflow = ((read_c0_cause() >> 26) & 0x1);
-			         
+
 	if (perfctr_overflow) {
 		nlm_common_oprofile_int_handler (irq, NULL, regs);
-	} 
+	}
 }
 
-#endif          
+#endif
 
 /* xlp_irq_mask is retained for legacy. It can be removed at a later point of
  * time. Initially it was meant to keep a copy of present interrupt mask; with
diff --git a/arch/mips/netlogic/xlp/usb-init.c b/arch/mips/netlogic/xlp/usb-init.c
index de95f67..0a40a6d 100644
--- a/arch/mips/netlogic/xlp/usb-init.c
+++ b/arch/mips/netlogic/xlp/usb-init.c
@@ -99,7 +99,7 @@ static void xlp_usb3_hw_start_controller(int node, int ctrl_no)
         usb_reg_write(node, ctrl_no, XLP_USB3_CTL, 0x2e02203);
 
         /* mask bits [7:0] -- these are core interrupts */
-        usb_reg_write(node, ctrl_no, XLP_USB3_INT_MASK, 0x000fff01);
+        usb_reg_write(node, ctrl_no, XLP_USB3_INT_MASK, 0x00000001);
 
         /* clear all interrupts */
         usb_reg_write(node, ctrl_no, XLP_USB3_INT, 0xffffffff);
diff --git a/drivers/usb/host/xhci-ring.c b/drivers/usb/host/xhci-ring.c
index 87ee86d..4939ecf 100644
--- a/drivers/usb/host/xhci-ring.c
+++ b/drivers/usb/host/xhci-ring.c
@@ -2720,7 +2720,11 @@ irqreturn_t xhci_irq(struct usb_hcd *hcd)
 
 	if (!(status & STS_EINT)) {
 		spin_unlock(&xhci->lock);
+#if defined CONFIG_NLM_XLP
+		return IRQ_HANDLED;
+#else
 		return IRQ_NONE;
+#endif
 	}
 	if (status & STS_FATAL) {
 		xhci_warn(xhci, "WARNING: Host System Error\n");
-- 
1.7.10.4

