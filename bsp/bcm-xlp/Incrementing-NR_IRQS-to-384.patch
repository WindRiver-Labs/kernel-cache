From 9ee7746ac1906a5a5fedc733445c3ff26e68f21c Mon Sep 17 00:00:00 2001
From: Om Narasimhan <onarasimhan@netlogicmicro.com>
Date: Mon, 31 Oct 2011 10:49:39 -0700
Subject: [PATCH 463/761] Incrementing NR_IRQS to 384

In order to support 32 MSI per slot(controller function) in future, NR_IRQS
incremented from 256 to 384.

As a result of this patch IRQ vectors are changed as follows.
0-7 : Reserved
8 - 167 : Native
160-191 : Reserved
192 - 223 : MSI-X
224-256 : Reserved
256-384	: MSI

Previously irq_map[] was wrongly declared to have only 168 elements.
Corrected to have NR_IRQS elements.

Based on Broadcom SDK 2.3.

Signed-off-by: Om Narasimhan <onarasimhan@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/netlogic/xlp_irq.h |   18 +++++++++---------
 arch/mips/netlogic/xlp/irq.c             |    2 +-
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/arch/mips/include/asm/netlogic/xlp_irq.h b/arch/mips/include/asm/netlogic/xlp_irq.h
index 9d851de..42684ad 100644
--- a/arch/mips/include/asm/netlogic/xlp_irq.h
+++ b/arch/mips/include/asm/netlogic/xlp_irq.h
@@ -31,7 +31,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
 /* Defines for the IRQ numbers */
 /* We define NR_IRQs to be 254, but IRT entries are 160 in size
  * Effectively, we cannot use anything more than 159 */
-#define NR_IRQS			256
+#define NR_IRQS			384
 /* Maximum IRQ vector numbers supported by MIPS */
 #define XLP_EIRR_SIZE		64
 #define XLP_IRT_NUM	160
@@ -208,20 +208,20 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #define XLP_PCIE_CTRL_DEVFN(node, ctr)	PCI_DEVFN((node + 1), ctr)
 
 #ifdef CONFIG_PCI_MSI
-#define XLP_MSI_MM_CAP		3	/* Multiple message capability */
+#define XLP_MSI_MM_CAP		5	/* Multiple message capability */
 #define XLP_MSI_PER_SLOT	(1 << XLP_MSI_MM_CAP)
-#define XLP_MSI_IRQ_OFFSET	192	/* Note IRQ not IRT */
+#define XLP_MSI_IRQ_OFFSET	256	/* Note IRQ not IRT */
 #define XLP_MSI_IRQ_START(fn)	(XLP_MSI_IRQ_OFFSET + (fn) * XLP_MSI_PER_SLOT)
-#define XLP_MSI_INDEX_START XLP_MSI_IRQ_START(0)
-#define XLP_MSI_INDEX_END (XLP_MSI_IRQ_START(XLP_MAX_SLOTS) - 1)// 31 vectors
-#define XLP_MSI_TO_CTRL_FN(msi) (((msi) >> 3) & 3)
+#define XLP_MSI_INDEX_START	XLP_MSI_IRQ_START(0)
+#define XLP_MSI_INDEX_END	(XLP_MSI_IRQ_START(XLP_MAX_SLOTS) - 1) /* 128 Vectors */
+#define XLP_MSI_TO_CTRL_FN(msi) (((msi) >> (XLP_MSI_MM_CAP)) & 3)
 
 #define XLP_MSIX_PER_SLOT	8
-#define XLP_MSIX_IRQ_OFFSET	(XLP_MSI_IRQ_OFFSET + XLP_MAX_SLOTS * XLP_MSIX_PER_SLOT) /* 192 + (4 * 8) => 224 */
+#define XLP_MSIX_IRQ_OFFSET	192
 #define XLP_MSIX_TO_CTRL_FN(msix) (((msix) >> 3) & 3)
 #define XLP_MSIX_IRQ_START(fn)	(XLP_MSIX_IRQ_OFFSET + (fn) * XLP_MSIX_PER_SLOT)
-#define XLP_MSIX_INDEX_START XLP_MSIX_IRQ_START(0)
-#define XLP_MSIX_INDEX_END (XLP_MSIX_IRQ_START(XLP_MAX_SLOTS) - 1)// 31 vectors
+#define XLP_MSIX_INDEX_START	XLP_MSIX_IRQ_START(0)
+#define XLP_MSIX_INDEX_END	(XLP_MSIX_IRQ_START(XLP_MAX_SLOTS) - 1)// 31 vectors
 
 #endif
 /*
diff --git a/arch/mips/netlogic/xlp/irq.c b/arch/mips/netlogic/xlp/irq.c
index 925a9e4..d9392207 100644
--- a/arch/mips/netlogic/xlp/irq.c
+++ b/arch/mips/netlogic/xlp/irq.c
@@ -153,7 +153,7 @@ struct irq_map_elem {
 	int usage;
 };
 
-static struct irq_map_elem irq_map[XLP_IRQ_MAX] = {
+static struct irq_map_elem irq_map[NR_IRQS] = {
 	{0, 0},	/* Dummy			:	0 */
 	{0, 0},	/* Dummy			:	1 */
 	{0, 0},	/* Dummy			:	2 */
-- 
1.7.10.4

