From 39e0ab6eef89cbc02bb420285b5803299b505340 Mon Sep 17 00:00:00 2001
From: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Date: Tue, 14 Sep 2010 00:53:54 -0700
Subject: [PATCH 182/761] Initialize secondary cpu c0_status before flipping
 ebase to Kernel ebase, set c0_Status during a
 hypercall wakeup

Based on Broadcom SDK 2.3.

Signed-off-by: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/cpu_control_asm.S |   20 +++++++++++++++++++-
 arch/mips/netlogic/xlp/xenbootinfo.c     |    7 ++++---
 2 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/arch/mips/netlogic/xlp/cpu_control_asm.S b/arch/mips/netlogic/xlp/cpu_control_asm.S
index ce78112..20a6a1d 100644
--- a/arch/mips/netlogic/xlp/cpu_control_asm.S
+++ b/arch/mips/netlogic/xlp/cpu_control_asm.S
@@ -169,6 +169,17 @@ NESTED(ptr_smp_boot, 16, sp)
 
 END(ptr_smp_boot)
 
+	.macro	setup_c0_status set clr
+	.set	push
+	mfc0	t0, CP0_STATUS
+	or	t0, ST0_CU0|\set|0x1f|\clr
+	xor	t0, 0x1f|\clr
+	mtc0	t0, CP0_STATUS
+	.set	noreorder
+	sll	zero,3				# ehb
+	.set	pop
+	.endm
+
 /* Don't jump to linux function from Bootloader stack. Change it
  * here. Kernel might allocate bootloader memory before all the CPUs are
  * brought up (eg: Inode cache region) and we better don't overwrite this
@@ -177,7 +188,14 @@ END(ptr_smp_boot)
 NESTED(prom_pre_boot_secondary_cpus, 16, sp)
         SET_MIPS64
         MAPPED_KERNEL_SETUP_TLB
-        mfc0 t0, CP0_EBASE, 1 #read ebase
+
+	/* Don't trust the bootstrapper to set cp0_status to what you want */
+#ifdef CONFIG_64BIT
+	setup_c0_status ST0_KX ST0_BEV
+#else
+	setup_c0_status 0 ST0_BEV
+#endif
+	mfc0 t0, CP0_EBASE, 1 #read ebase
         andi t0, 0x7f #t0 has the processor_id()
         PTR_LA  t1, xlp_stack_pages_temp
         li   t2, _THREAD_SIZE
diff --git a/arch/mips/netlogic/xlp/xenbootinfo.c b/arch/mips/netlogic/xlp/xenbootinfo.c
index 6a54e31..fedfe23 100644
--- a/arch/mips/netlogic/xlp/xenbootinfo.c
+++ b/arch/mips/netlogic/xlp/xenbootinfo.c
@@ -54,13 +54,14 @@ static int xc_wakeup_secondary(int dom_id, unsigned long cpumask, unsigned long
 	struct xen_domctl domctl;
 	struct vcpu_guest_context ctxt;
 	int vcpu, ret, nr_vcpu;
-	
+
 	domctl.interface_version = XEN_DOMCTL_INTERFACE_VERSION;
 	domctl.cmd = XEN_DOMCTL_bootvcpu;
-    domctl.domain = dom_id;
+	domctl.domain = dom_id;
 
 	ctxt.reg31 = entry;
-    set_xen_guest_handle(domctl.u.vcpucontext.ctxt, &ctxt);
+	ctxt.cp0_status = 0;
+	set_xen_guest_handle(domctl.u.vcpucontext.ctxt, &ctxt);
 
 	nr_vcpu = count_ones(cpumask);
 
-- 
1.7.10.4

