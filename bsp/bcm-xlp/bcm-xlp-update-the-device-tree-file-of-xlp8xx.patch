From 3ef40bd9a6f48da5407fd5f8f2181c902af2019e Mon Sep 17 00:00:00 2001
From: Jack Tan <jiankemeng@gmail.com>
Date: Mon, 30 Jun 2014 20:30:53 +0800
Subject: [PATCH 3/4] bcm-xlp: update the device tree file of xlp8xx

Rebased to SDK 3.0.2

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/boot/dts/xlp8xx-linux.dts | 1665 +++++++++++++++++++++++++++++++++++
 1 files changed, 1665 insertions(+), 0 deletions(-)
 create mode 100644 arch/mips/boot/dts/xlp8xx-linux.dts

diff --git a/arch/mips/boot/dts/xlp8xx-linux.dts b/arch/mips/boot/dts/xlp8xx-linux.dts
new file mode 100644
index 0000000..d9b7892
--- /dev/null
+++ b/arch/mips/boot/dts/xlp8xx-linux.dts
@@ -0,0 +1,1665 @@
+/* XLP8XX Device Tree Source
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "netlogic,XLP-EVP";
+        compatible = "netlogic,xlp";
+        #address-cells = <2>;
+        #size-cells = <2>;
+	/*memory range for linux. This will not appear in dom0*/
+        memory {
+                device_type = "memory";
+                reg =  <0 0x00000000 0 0x0B000000
+                        0 0x20000000 0 0xa0000000
+                        0 0xe0000000 0 0x20000000>;
+        };
+
+	/* memory range for HEv2 pkt mem. Only one contig memory per node supported */
+	pktmem {
+		device_type = "pktmem";
+
+		/* format: node number, 64-bit addr, 64-bit size */
+		reg = <0 0x0 0x80000000 0x0 0x08000000
+	               1 0x0 0x0 0x0 0x0
+		       2 0x0 0x0 0x0 0x0
+		       3 0x0 0x0 0x0 0x0>;
+	};
+
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <0>;
+		bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0xffffffff -- ";
+		domain_heap = <0x80000000 0x20000000>;
+	};
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			cpu {
+				onlinemask = <0xffffffff>;
+                                nae-rx-vc = <0>;
+                                nae-fb-vc = <1>;
+				napi-vc-mask = <0xb>;
+				sae-rx-vc = <0>; /* sharing with nae */
+				sae-rx-sync-vc  = <3>; /* should be exclusive */
+				ipsec-async-vc  = <3>;
+				ipsec-sync-vc   = <2>;
+
+			};
+			uart {
+				id = <0>;
+				owner = <1>;
+				sharedcfg = <0x1f000000>;
+			};
+                        fmn {
+                                node_0_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_1_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_2_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_3_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                        };
+			nae {
+				/* Example for different values of nae-rx-cpu-mask
+				 * for 32 CPUs: nae-rx-cpu-mask = <0xffffffff>;
+				 * if left empty, it takes the value of onlinemask.
+				 */
+				nae-rx-cpu-mask = <>;
+				freein-fifo-mask = <0x3ffff 0 0 0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <32 32 32 32>;
+				/* hw entries */
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <20 20 20 20>;
+			};
+			owner-config {
+				nae = <0x1>;   // currently for node 0
+				sae = <0x1>;
+				rsa = <0x1>;
+				fmn = <0x1>;
+			};
+		};
+	};
+	chosen {
+		bootargs = " console=ttyS0,115200  rhash_entries=1048576";
+		netlogic,cpumask = <0xffffffff>;
+		/*linux,initrd-start=<0x00c00000>;
+		linux,initrd-end=<0x02c00000>;*/
+	};
+
+	/* These binaries are downloaded at the resp physical memory locations
+	 * by their corresponding bootstrapping loaders. For example,
+	 * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
+	 * at 1M, hypervisor by u-boot hypervisor at 136M.
+	 * On simulator all these binaries are pre-loaded by using '-F' option
+	 * for convenience. On silicon, they will be loaded by their corresponding
+	 * temporary download locations the stage-1/stage-2 firmware
+	 */
+	firmware-download {
+		u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
+		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
+		dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
+		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
+	};
+
+	soc {
+		#address-cells = <2>;
+		#size-cells = <1>;
+		compatible = "simple-bus";
+		ranges = <0 0  0 0x18000000  0x04000000   // PCIe CFG
+			  1 0  0 0x16000000  0x02000000>; // GBU chipselects
+
+		serial0: serial@30000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x30100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <133333333>;
+			interrupt-parent = <&pic>;
+			interrupts = <17>;
+		};
+		serial1: serial@31000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x31100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <133333333>;
+			interrupt-parent = <&pic>;
+			interrupts = <18>;
+		};
+		i2c0: ocores@32000 {
+			compatible = "opencores,i2c-ocores";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x32100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <32000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <30>;
+		};
+		i2c1: ocores@33000 {
+			compatible = "opencores,i2c-ocores";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x33100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <32000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <31>;
+
+			rtc@68 {
+				compatible = "dallas,ds1374";
+				reg = <0x68>;
+			};
+
+			dtt@4c {
+				compatible = "national,lm90";
+				reg = <0x4c>;
+			};
+
+ 			eeprom@57 {
+                                compatible = "xlpge_eeprom";
+                                reg = <0x57>;
+                        };
+		};
+		pic: pic@4000 {
+			interrupt-controller;
+			#address-cells = <0>;
+			#interrupt-cells = <1>;
+			reg = <0 0x4000 0x200>;
+		};
+
+		watchdog@0 {
+			compatible = "netlogic,nlm-wdt";
+		};
+
+		rng@0 {
+			compatible = "netlogic,nlm-drng";
+			reg = <0 0x2a000 0x30>;
+		};
+
+		nor_flash@1,0 {
+			compatible = "cfi-flash";
+			#address-cells = <1>;
+			#size-cells = <1>;
+			bank-width = <2>;
+			reg = <1 0 0x1000000>;
+
+			partition@0 {
+				label = "x-loader";
+				reg = <0x0 0x100000>; /* 1M */
+				read-only;
+			};
+
+			partition@100000 {
+				label = "u-boot";
+				reg = <0x100000 0x100000>; /* 1M */
+			};
+
+			partition@200000 {
+				label = "kernel";
+				reg = <0x200000 0x500000>; /* 5M */
+			};
+
+			partition@700000 {
+				label = "rootfs";
+				reg = <0x700000 0x800000>; /* 8M */
+			};
+
+			partition@f00000 {
+				label = "env";
+				reg = <0xf00000 0x100000>; /* 1M */
+				read-only;
+			};
+		};
+
+		nand_flash@0,0 {
+			compatible = "netlogic,xlp-nand";
+			#address-cells = <1>;
+			#size-cells = <1>;
+			reg = <0 0x39000 0x1000>;
+
+			interrupts = <43>;
+			interrupt-parent = <&pic>;
+			nand-ecc-mode = "hw";
+
+			partition@0 {
+				label = "firmware";
+				reg = <0x0 0x20000000>;
+			};
+
+			partition@1 {
+				label = "kernel";
+				reg = <0x20000000 0x20000000>;
+			};
+
+			partition@2 {
+				label = "user";
+				reg = <0x40000000 0x0>;
+			};
+		};
+
+		gpio: xlp_gpio@34000 {
+			compatible = "netlogic,xlp-gpio";
+			reg = <0 0x34100 0x1000>;
+			#gpio-cells = <2>;
+			gpio-controller;
+
+			#interrupt-cells = <1>;
+			interrupt-parent = <&pic>;
+			interrupts = <39>;
+			interrupt-controller;
+		};
+
+		spi: xlp_spi@13a000 {
+			compatible = "netlogic,xlp-spi";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x3a000 0x100>;
+
+			interrupts = <34>;
+			interrupt-parent = <&pic>;
+
+			spi_nor@1 {
+				compatible = "spansion,s25sl12801";
+				#address-cells = <1>;
+				#size-cells = <1>;
+
+				reg = <1>;		/* Chip Select */
+				spi-max-frequency = <40000000>;
+
+				partition@0 {
+					label = "x-loader";
+					reg = <0x0 0x200000>; /* 2M */
+					read-only;
+				};
+
+				partition@200000 {
+					label = "kernel";
+					reg = <0x200000 0x500000>; /* 5M */
+				};
+
+				partition@700000 {
+					label = "rootfs";
+					reg = <0x700000 0x800000>; /* 8M */
+				};
+
+				partition@f00000 {
+					label = "env";
+					reg = <0xf00000 0x100000>; /* 1M */
+					read-only;
+				};
+			};
+
+			spi_nand@2 {
+				compatible = "spinand,mt29f";
+				#address-cells = <1>;
+				#size-cells = <1>;
+				reg = <2>;	/* SPI NAND CS */
+				spi-max-frequency = <50000000>;
+
+				partition@0 {
+					label = "firmware";
+					reg = <0x0 0x1c00000>;
+				};
+
+				partition@1 {
+					label = "kernel";
+					reg = <0x1c00000 0x0>;
+				};
+			};
+		};
+fmn@node-0 {
+        default-credits = <50>;
+        default-queue-size = <28672>;
+        fmn-spill-mem-base = <0x00000000 0x10000000>; /*0 - dynamic allocation, only for 64 bit linux */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config {
+		/* credits from station     
+		   "cpu popq pcie0 pcie1 pcie2 pcie3 gdx gdx1 rsa crypto cmp poe nae regx srio lzs"
+		   The order and number of station should be matching with the list given above
+		   Here, credits 0 means the default credits. 
+		   Right now there is no way to configure credit of zero */
+
+                cpu {
+                        queue-size = <36864>; /* queue size for all the cpu vcs */
+                        credits-from {
+                                node-0 = <0 0 0 0 0 0 0 0 0 0 0 500 0 0 150 0>;
+                        };
+                };
+		srio {
+                       credits-from {
+                                node-0 = <150 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                        };
+               };
+
+	};
+};
+fmn@node-1{
+        default-credits = <50>;
+        default-queue-size = <28672>;
+        fmn-spill-mem-base = <0x00000000 0x00000000>; /*0 - dynamic allocation */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config{
+
+	};
+};
+fmn@node-2{
+
+};
+fmn@node-3{
+
+};
+  nae@node-0 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+			ucore {
+				src@1 {
+num-opcodes = <151>;
+					path = "/work/bsp/xlp9xx/sdk-git/sdk-base/buildroot/output/build/sysconfig/nae/ucore/nat-ucore.c";
+					timestamp = "Thu May 15 12:36:42 2014
+";
+					mask = <0xffff>;
+					opcodes = <
+						0x3c1c0010 
+						0x279cf808 
+						0x3c020010 
+						0x2442f808 
+						0x3c030010 
+						0x2463f808 
+						0xac400000 
+						0x0043082b 
+						0x1420fffd 
+						0x24420004 
+						0x3c1d0010 
+						0x27bdf9c0 
+						0x27a50020 
+						0x27a60028 
+						0xaca00000 
+						0xacc00000 
+						0x0c000029 
+						0x00002021 
+						0x1000ffff 
+						0x00000000 
+						0x3c020000 
+						0x8c420290 
+						0x27bdffe0 
+						0x2403ffff 
+						0xafbf001c 
+						0xafb10018 
+						0x10430009 
+						0xafb00014 
+						0x3c100000 
+						0x26100290 
+						0x2411ffff 
+						0x0040f809 
+						0x2610fffc 
+						0x8e020000 
+						0x1451fffc 
+						0x00000000 
+						0x8fbf001c 
+						0x8fb10018 
+						0x8fb00014 
+						0x03e00008 
+						0x27bd0020 
+						0x3c090001 
+						0x35228000 
+						0x8c480018 
+						0x244d001c 
+						0x00081880 
+						0x006d1821 
+						0x8c670018 
+						0x2466001c 
+						0x00072080 
+						0x00c43021 
+						0x27bdfff8 
+						0x3c05000f 
+						0x8c470018 
+						0xafb00004 
+						0x8c6c0018 
+						0x34a5fe5c 
+						0x8ccb0018 
+						0x00406821 
+						0x8c490010 
+						0x240a0002 
+						0x8c4e0004 
+						0x3c040178 
+						0x8c780004 
+						0x08000060 
+						0x8ccf0004 
+						0x8cd00000 
+						0x32020001 
+						0x14400026 
+						0x00000000 
+						0x8cb90000 
+						0x00191402 
+						0x304801ff 
+						0x0107001b 
+						0x00e001f4 
+						0x00008010 
+						0x26190006 
+						0x00191080 
+						0x01a24021 
+						0x8d020004 
+						0x305000ff 
+						0x0010c880 
+						0x00024203 
+						0x032ec821 
+						0x311000ff 
+						0x00001021 
+						0x33390fff 
+						0x00194200 
+						0x35190001 
+						0x34088030 
+						0xad190000 
+						0x00104380 
+						0x0102c825 
+						0x03248025 
+						0x34088000 
+						0xad100000 
+						0x34088004 
+						0x8d100000 
+						0x3202001f 
+						0x2459fff0 
+						0x2f300002 
+						0x1600ffe0 
+						0x00000000 
+						0x8c790000 
+						0x33280001 
+						0x1100ffd8 
+						0x00000000 
+						0x15200016 
+						0x00000000 
+						0x8c700000 
+						0x8ca80000 
+						0x32020010 
+						0x0000c821 
+						0x00088402 
+						0x0142c80a 
+						0x03201021 
+						0x321901ff 
+						0x032c001b 
+						0x018001f4 
+						0x00004010 
+						0x25100006 
+						0x0010c880 
+						0x00794021 
+						0x8d080004 
+						0x311000ff 
+						0x0010c880 
+						0x00088203 
+						0x0338c821 
+						0x08000056 
+						0x321000ff 
+						0x8cc80000 
+						0x8cb00000 
+						0x31020010 
+						0x0000c821 
+						0x00104402 
+						0x0142c80a 
+						0x03201021 
+						0x311901ff 
+						0x032b001b 
+						0x016001f4 
+						0x00008010 
+						0x26080006 
+						0x0008c880 
+						0x00d98021 
+						0x8e100004 
+						0x320800ff 
+						0x0008c880 
+						0x00104203 
+						0x032fc821 
+						0x08000056 
+						0x311000ff 
+					>;
+				};
+			};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00200000>; // spill address is allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+		/* If port-fifo-en is not specified(0/1), it will be set to 1 
+		   while building the linux dtb file. For all the othercases it will be set to 0.
+		   See build-dtb.sh. If required, user can explicitly set the value here.
+		   */
+		port-fifo-en = <1>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+		class-map-mode = <0>;                       /* 0:All NAE, 1:Class 7-4 reserved for CPU, 2:Class 7-5 reserved for CPU,
+							    3:Class 7-6 reserved for CPU, 4:Class 7 reserved for CPU */
+
+//		poe-spill-address = <0xec00000>;
+//		poe-spill-length = <0x10000>;
+
+		// Comminting the actual value to be given to
+		// POE as POE is not getting called in the
+		// regular case
+		poe-spill-address = <0x0>;
+		poe-spill-length =  <0x0>;
+		
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+			submode  = <0>;
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <0>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <0>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+			mgmt-port = <0 0 0 0>;
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+        	        rx-buffer-size = <128 128 128 128>;
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to  <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable  = <0x0>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+			submode  = <0>;
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <4>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <4>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to  <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable  = <0x0>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+						submode  = <0>;
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+						ext-phy-addr = <8>;
+						ext-phy-bus = <1>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+						ext-phy-addr = <8>;
+                        ext-phy-bus = <1>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+			submode  = <0>;
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <12>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <12>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+                sgmii {
+                        loopback = <0 0 0 0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <13 13 13 13>;
+
+                        ext-phy-addr = <12 15 14 13>;
+                        ext-phy-bus = <1 1 1 1>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        num-channels = <1 1 1 1>;
+                        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        rx-buffer-size = <128 128 128 128>;
+
+
+                        // Max available descriptors are 1024 (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <52 52 52 52>;
+                        free-desc-size = <2048 2048 2048 2048>;
+                        ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+                };
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+	
+			mgmt-port = <1 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+                
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+   nae@node-1 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+			ucore {
+				src@1 {
+num-opcodes = <151>;
+					path = "/work/bsp/xlp9xx/sdk-git/sdk-base/buildroot/output/build/sysconfig/nae/ucore/nat-ucore.c";
+					timestamp = "Thu May 15 12:36:42 2014
+";
+					mask = <0xffff>;
+					opcodes = <
+						0x3c1c0010 
+						0x279cf808 
+						0x3c020010 
+						0x2442f808 
+						0x3c030010 
+						0x2463f808 
+						0xac400000 
+						0x0043082b 
+						0x1420fffd 
+						0x24420004 
+						0x3c1d0010 
+						0x27bdf9c0 
+						0x27a50020 
+						0x27a60028 
+						0xaca00000 
+						0xacc00000 
+						0x0c000029 
+						0x00002021 
+						0x1000ffff 
+						0x00000000 
+						0x3c020000 
+						0x8c420290 
+						0x27bdffe0 
+						0x2403ffff 
+						0xafbf001c 
+						0xafb10018 
+						0x10430009 
+						0xafb00014 
+						0x3c100000 
+						0x26100290 
+						0x2411ffff 
+						0x0040f809 
+						0x2610fffc 
+						0x8e020000 
+						0x1451fffc 
+						0x00000000 
+						0x8fbf001c 
+						0x8fb10018 
+						0x8fb00014 
+						0x03e00008 
+						0x27bd0020 
+						0x3c090001 
+						0x35228000 
+						0x8c480018 
+						0x244d001c 
+						0x00081880 
+						0x006d1821 
+						0x8c670018 
+						0x2466001c 
+						0x00072080 
+						0x00c43021 
+						0x27bdfff8 
+						0x3c05000f 
+						0x8c470018 
+						0xafb00004 
+						0x8c6c0018 
+						0x34a5fe5c 
+						0x8ccb0018 
+						0x00406821 
+						0x8c490010 
+						0x240a0002 
+						0x8c4e0004 
+						0x3c040178 
+						0x8c780004 
+						0x08000060 
+						0x8ccf0004 
+						0x8cd00000 
+						0x32020001 
+						0x14400026 
+						0x00000000 
+						0x8cb90000 
+						0x00191402 
+						0x304801ff 
+						0x0107001b 
+						0x00e001f4 
+						0x00008010 
+						0x26190006 
+						0x00191080 
+						0x01a24021 
+						0x8d020004 
+						0x305000ff 
+						0x0010c880 
+						0x00024203 
+						0x032ec821 
+						0x311000ff 
+						0x00001021 
+						0x33390fff 
+						0x00194200 
+						0x35190001 
+						0x34088030 
+						0xad190000 
+						0x00104380 
+						0x0102c825 
+						0x03248025 
+						0x34088000 
+						0xad100000 
+						0x34088004 
+						0x8d100000 
+						0x3202001f 
+						0x2459fff0 
+						0x2f300002 
+						0x1600ffe0 
+						0x00000000 
+						0x8c790000 
+						0x33280001 
+						0x1100ffd8 
+						0x00000000 
+						0x15200016 
+						0x00000000 
+						0x8c700000 
+						0x8ca80000 
+						0x32020010 
+						0x0000c821 
+						0x00088402 
+						0x0142c80a 
+						0x03201021 
+						0x321901ff 
+						0x032c001b 
+						0x018001f4 
+						0x00004010 
+						0x25100006 
+						0x0010c880 
+						0x00794021 
+						0x8d080004 
+						0x311000ff 
+						0x0010c880 
+						0x00088203 
+						0x0338c821 
+						0x08000056 
+						0x321000ff 
+						0x8cc80000 
+						0x8cb00000 
+						0x31020010 
+						0x0000c821 
+						0x00104402 
+						0x0142c80a 
+						0x03201021 
+						0x311901ff 
+						0x032b001b 
+						0x016001f4 
+						0x00008010 
+						0x26080006 
+						0x0008c880 
+						0x00d98021 
+						0x8e100004 
+						0x320800ff 
+						0x0008c880 
+						0x00104203 
+						0x032fc821 
+						0x08000056 
+						0x311000ff 
+					>;
+				};
+			};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00200000>; // Spill address will be allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>;
+                freein-fifo-spill-num-descs = <1200>;
+
+		/* If port-fifo-en is not specified(0/1), it will be set to 1 
+		   while building the linux dtb file. For all the othercases it will be set to 0.
+		   See build-dtb.sh. If required, user can explicitly set the value here.
+		   */
+		port-fifo-en = <1>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+		
+		distribution-enable = <1>;
+		// 16 bit mask
+		dist-drop-enable = <0>;	 
+		// 8 bit mask
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+		class-map-mode = <0>;                       /* 0:All NAE, 1:Class 7-4 reserved for CPU, 2:Class 7-5 reserved for CPU,
+                                                           3:Class 7-6 reserved for CPU, 4:Class 7 reserved for CPU */
+
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        // Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;  
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+			mgmt-port = <1 0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+ 		               
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+nae@node-2 {
+
+};
+nae@node-3 {
+
+};
+		nodes {
+			num-nodes = <1>;
+		};
+
+	};
+	frequency-config {
+		nae = <500>;
+		sae = <500>;
+		rsa = <500>;
+		dtre = <250>;
+		cde = <250>;
+	};
+};
+
-- 
1.7.5.4

