From f86f60ada706fcb97b93da839c8ca9647422e094 Mon Sep 17 00:00:00 2001
From: Prasad Boddupalli <pboddupalli@netlogicmicro.com>
Date: Mon, 13 Dec 2010 15:14:49 -0800
Subject: [PATCH 234/761] changes required by the change of rixi exception
 vector to n.16

Based on Broadcom SDK 2.3.

Signed-off-by: Prasad Boddupalli <pboddupalli@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/kernel/genex.S |    7 +++++++
 arch/mips/kernel/traps.c |   35 +++++++++++++++++++++++++++++++++++
 2 files changed, 42 insertions(+)

diff --git a/arch/mips/kernel/genex.S b/arch/mips/kernel/genex.S
index 24cfa19d..6c80f21 100644
--- a/arch/mips/kernel/genex.S
+++ b/arch/mips/kernel/genex.S
@@ -403,6 +403,12 @@ NESTED(nmi_handler, PT_SIZE, sp)
 	KMODE
 	.endm
 
+	.macro	__build_clear_rixi
+	MFC0	t0, CP0_BADVADDR
+	PTR_S	t0, PT_BVADDR(sp)
+	STI
+	.endm
+		
 	.macro	__BUILD_silent exception
 	.endm
 
@@ -460,6 +466,7 @@ NESTED(nmi_handler, PT_SIZE, sp)
 	BUILD_HANDLER ov ov sti silent			/* #12 */
 	BUILD_HANDLER tr tr sti silent			/* #13 */
 	BUILD_HANDLER fpe fpe fpe silent		/* #15 */
+	BUILD_HANDLER rixi rixi rixi silent		/* #16 */
 	BUILD_HANDLER mdmx mdmx sti silent		/* #22 */
 #ifdef 	CONFIG_HARDWARE_WATCHPOINTS
 	/*
diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c
index 6901600..2c7c560 100644
--- a/arch/mips/kernel/traps.c
+++ b/arch/mips/kernel/traps.c
@@ -94,6 +94,7 @@ extern asmlinkage void handle_cpu(void);
 extern asmlinkage void handle_ov(void);
 extern asmlinkage void handle_tr(void);
 extern asmlinkage void handle_fpe(void);
+extern asmlinkage void handle_rixi(void);
 extern asmlinkage void handle_mdmx(void);
 extern asmlinkage void handle_watch(void);
 extern asmlinkage void handle_mt(void);
@@ -789,6 +790,37 @@ asmlinkage void do_fpe(struct pt_regs *regs, unsigned long fcr31)
 	trace_trap_exit();
 }
 
+asmlinkage void do_rixi(struct pt_regs *regs)
+{
+	struct task_struct *tsk = current;
+	siginfo_t info;
+
+	/*
+	 * TODO: need notify_die() intimation ?
+	 */
+	die_if_kernel("rixi exception in kernel code", regs);
+
+	/*
+	 * TODO: is there a possibility of permissions (RX)
+	 *       changing along with the receipt of a RIXI
+	 *       exception ? If so, we will have to check
+	 *       the vm_flags of the vma correponding to the
+	 *       faulting address
+	 */
+
+	tsk->thread.cp0_badvaddr = regs->cp0_badvaddr;
+	/*
+	 * TODO: need to set appropriate code
+	 * 
+	 * tsk->thread.error_code = ;
+	 */
+
+	info.si_signo = SIGSEGV;
+	info.si_errno = 0;
+	info.si_addr = (void __user *) regs->cp0_epc;
+	force_sig_info(SIGSEGV, &info, tsk);
+}
+
 static void do_trap_or_bp(struct pt_regs *regs, unsigned int code,
 	const char *str)
 {
@@ -1860,6 +1892,9 @@ void __init trap_init(void)
 	if (cpu_has_fpu && !cpu_has_nofpuex)
 		set_except_vector(15, handle_fpe);
 
+	if (kernel_uses_smartmips_rixi)
+		set_except_vector(16, handle_rixi);
+
 	set_except_vector(22, handle_mdmx);
 
 	if (cpu_has_mcheck)
-- 
1.7.10.4

