From 906c78fedbd1fe5cbe88305f025c939e7b337e2c Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Mon, 23 Aug 2010 15:10:25 -0700
Subject: [PATCH 104/565] clean up init_nae.c

Clean up init_nae.c.

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/xlp_nae/init_nae.c | 295 ++++++++++++++++-------------------------
 drivers/net/xlp_nae/xlp_nae.c  |  43 +++---
 2 files changed, 134 insertions(+), 204 deletions(-)

diff --git a/drivers/net/xlp_nae/init_nae.c b/drivers/net/xlp_nae/init_nae.c
index 2510f1a..783a5bd 100644
--- a/drivers/net/xlp_nae/init_nae.c
+++ b/drivers/net/xlp_nae/init_nae.c
@@ -1,222 +1,159 @@
 #include <linux/types.h>
 #include <linux/kernel.h>
 #include <asm/netlogic/hal/nlm_hal_nae.h>
-#include "reg.h"    
+#include "reg.h"
 #include "net_common.h"
-#include "common.h" 
 
 #define XLP_NAE_UCODE_IO_OFFSET		0x90000000d0010000ULL
-#define CODESIZE_PER_UCORE (4<<10)
-
-
-   /*
-    *  Incantation from Verification code(Anand's)
-    *  
-    *  (black magic follows ) 
-    */
-
-        /*
-         * reset netior softreset
-         * GMAC reset
-         * RX interface Credit 
-         */  
-#define read_gmac_reg(idx, reg) nlm_hal_read_mac_reg( ((idx&0xff)>>2), (idx& 0x3), reg)
-#define write_gmac_reg(idx, reg, val) nlm_hal_write_mac_reg( ((idx&0xff)>>2), (idx& 0x3), reg, val)
-int init_gmac(unsigned int  inf)
-{
-    unsigned int mac_cfg1 = 0 ;
-    unsigned int  mac_cfg2 = 0 ;
-    unsigned int netwk_inf  = 0; 
-//    log_dbg("init inf %d block %d\n", inf& 0x3, (inf&0xff)>>2);
-
-    mac_cfg1 = read_gmac_reg( inf  , INF_MAC_CONFIG1); 
-    mac_cfg2 = read_gmac_reg( inf, INF_MAC_CONFIG2);
-   netwk_inf  = read_gmac_reg( inf, INF_NETWK_INF_CTRL_REG);
+#define CODESIZE_PER_UCORE 		(4<<10)
+#define NAE_MAX_MESSAGE_SIZE(x)		((x&0x1)<<1)
+#define RESET_MAX_MESSAGE_SIZE		~(0x1<<1) 
+#define NAE_FRINDESCCLSIZE(x)		((x&0xff)<< 4)
+#define RESET_FRINDESCCLSIZE		~((0xff)<< 4) 
+#define NAE_RX_STATUS_MASK(x)		((x&0x3f) << 24)
+#define RESET_RX_STATUS_MASK		~((0x3f) << 24)
+#define VAL_UCORE_RESET(x)		((x&0xffff)<<8) 
+#define read_gmac_reg(idx, reg) 	nlm_hal_read_mac_reg(((idx&0xff)>>2), (idx& 0x3), reg)
+#define write_gmac_reg(idx, reg, val) 	nlm_hal_write_mac_reg(((idx&0xff)>>2), (idx& 0x3), reg, val)
 
-	nlm_hal_write_nae_iface_reg( 0xf, NETIOR_SOFTRESET, 0);
 
-    //write_gmac_reg( XLP_NAE_NAE_IO_OFFSET(  );  
-    //Sofreset set bit 11 to 0 
-   
-    write_gmac_reg( inf , INF_NETWK_INF_CTRL_REG,  netwk_inf & 0xfffff7ff);
+/*
+ * reset netior softreset
+ * GMAC reset
+ * RX interface Credit 
+ */ 
+int init_gmac(unsigned int inf)
+{
+	unsigned int mac_cfg1 = 0 ;
+	unsigned int  mac_cfg2 = 0 ;
+	unsigned int netwk_inf  = 0; 
 
+	mac_cfg1 = read_gmac_reg(inf  , INF_MAC_CONFIG1); 
+	mac_cfg2 = read_gmac_reg(inf, INF_MAC_CONFIG2);
+	netwk_inf  = read_gmac_reg(inf, INF_NETWK_INF_CTRL_REG);
 
-    // TODO rewrite NAE registers 
-    // Donnt ask me some undocumented hack in Validation script
+	nlm_hal_write_nae_iface_reg(0xf, NETIOR_SOFTRESET, 0);
 
-    //RX interface  NETIOR interface credit counter
-	nlm_hal_write_nae_iface_reg( 0xf, NETIOR_MISC_REG2_ADDR , 0x0421084 );
-	nlm_hal_write_nae_iface_reg( 0xf, NETIOR_MISC_REG1_ADDR , 0x00fffff );
-	nlm_hal_write_nae_iface_reg( 0xf, NETIOR_MISC_REG1_ADDR , 0x0);
+	/* Sofreset set bit 11 to 0 */
+	write_gmac_reg(inf , INF_NETWK_INF_CTRL_REG,  netwk_inf & 0xfffff7ff);
 
-    // set softreset
-    write_gmac_reg( inf , INF_MAC_CONFIG1, INF_SOFTRESET(1)|
-	                                        /* INF_LOOP_BACK(1)|*/
-                                                 INF_RX_ENABLE(1)|
-                                                 INF_TX_ENABLE(1) );
 
-    mac_cfg1 = read_gmac_reg( inf, INF_MAC_CONFIG1);
-    write_gmac_reg( inf , INF_MAC_CONFIG2, mac_cfg2|
-                                                 INF_PREMBL_LEN(0x7)|
-                                                 INF_IFMODE(0x2)|
-                                                 INF_FULLDUP(1)
-                                    );
+	/* RX interface  NETIOR interface credit counter */
+	nlm_hal_write_nae_iface_reg(0xf, NETIOR_MISC_REG2_ADDR , 0x0421084 );
+	nlm_hal_write_nae_iface_reg(0xf, NETIOR_MISC_REG1_ADDR , 0x00fffff );
+	nlm_hal_write_nae_iface_reg(0xf, NETIOR_MISC_REG1_ADDR , 0x0);
 
-    // reset softreset
-//    log_dbg("tst1 mac_cfg %x\n", mac_cfg1); 
-    write_gmac_reg( inf , INF_MAC_CONFIG1, mac_cfg1 & ~(INF_SOFTRESET(1)));
+	/* set softreset */
+	write_gmac_reg(inf, INF_MAC_CONFIG1, INF_SOFTRESET(1)|
+                                             INF_RX_ENABLE(1)|
+                                             INF_TX_ENABLE(1));
 
-    netwk_inf  = read_gmac_reg( inf, INF_NETWK_INF_CTRL_REG);
+	mac_cfg1 = read_gmac_reg(inf, INF_MAC_CONFIG1);
+	write_gmac_reg(inf, INF_MAC_CONFIG2, mac_cfg2|
+                            INF_PREMBL_LEN(0x7)|
+                            INF_IFMODE(0x2)|
+                            INF_FULLDUP(1));
 
-    write_gmac_reg( inf , INF_NETWK_INF_CTRL_REG,  netwk_inf|
-                                                         STATS_EN(1)|
-                                                         TX_EN(1)|
-                                                        SPEED(0));
+	/* reset softreset */
+	write_gmac_reg(inf , INF_MAC_CONFIG1, mac_cfg1 & ~(INF_SOFTRESET(1)));
+	netwk_inf = read_gmac_reg(inf, INF_NETWK_INF_CTRL_REG);
+	write_gmac_reg(inf, INF_NETWK_INF_CTRL_REG, netwk_inf | STATS_EN(1) | TX_EN(1) | SPEED(0));
 
-/*
-    log_dbg("%d :inf %d MAC_CONFIG1: %x  val %x\n" , __LINE__, inf, 
-                                                       read_gmac_reg( 0 , INF_MAC_CONFIG1),                                        
-                                                     ( INF_SOFTRESET(1)|
-                                                       INF_LOOP_BACK(1)|
-                                                       INF_RX_ENABLE(1)|
-                                                       INF_TX_ENABLE(1) )); 
-
-*/
 	return 0;
 }
-/*
-*   (black magic ends)
-*/
-
-
-// make sure the pktmem is cache aligned (64 byte)
-// & the num_byts is multiple of 64
-// 
- /* Free Queue Config
-     *  
-     *  20 queues (1000  - 1019 ) form the ingress free pool 
-     *  Size of the descriptor can be configured the following ways
-     *    a.Each Fifo has a unique size 
-     *    b. ALL Fifo desc will have the same size
-     *  RX_CONFIG has sets the necessary bits to set the size
-     *
-      Default size is Desc 256 Byte (NEED TO VERIFY)
-     *
-     * */
-
-
-  /* EGRESS -> IOR credit configuration 
-   *     
-   *
-   *
-   * */ 
 
+/* 
+ *	EGRESS -> IOR credit configuration 
+ *     
+ *
+ */
 int init_tx_if_credit( uint32_t credit_val, uint32_t if_bmask)
 {
-int tx_config = 0;
+	int tx_config;
     
-    nlm_hal_write_nae_reg( TX_IORCRDT_INIT, credit_val);
-    tx_config = nlm_hal_read_nae_reg(TX_CONFIG);
-    //nlm_hal_write_nae_reg(TX_CONFIG, txconfig|1);
-    // need to toggle these bits for credits to be loaded
-    nlm_hal_write_nae_reg(TX_CONFIG, tx_config | ( TXINITIORCR(0x7ffff & if_bmask)));
-    nlm_hal_write_nae_reg(TX_CONFIG, tx_config & ~( TXINITIORCR(0x7ffff & if_bmask)));
-
-    return 0;
+	tx_config = 0;
+	nlm_hal_write_nae_reg(TX_IORCRDT_INIT, credit_val);
+	tx_config = nlm_hal_read_nae_reg(TX_CONFIG);
+	nlm_hal_write_nae_reg(TX_CONFIG, tx_config | (TXINITIORCR(0x7ffff & if_bmask)));
+	nlm_hal_write_nae_reg(TX_CONFIG, tx_config & ~(TXINITIORCR(0x7ffff & if_bmask)));
+	return 0;
 }
 
 
-
- /*
-  * uCore code 
-  * configure Interface to ucore
-  * Load ucode
-  * Reset Ucore
-  *
-  * */
-
-#if 1  //disable init_ucore for now
-#define     VAL_UCORE_RESET(x)              ((x&0xffff)<<8) 
+/*
+ * uCore code 
+ * configure Interface to ucore
+ * Load ucode
+ * Reset Ucore
+ *
+ */
 int init_ucore(uint32_t ucore_mask, int if_num)
 {
-    	uint32_t ucore_cfg = 0;
+    	uint32_t ucore_cfg;
+    	
+	ucore_cfg = 0;
 	nlm_hal_write_nae_reg(UCORE_IFACE_MASK_CFG, 
-                          ucore_spray_config(if_num, ucore_mask, CMD_WRITE));
-/*	ucore_load_apps(ucore_mask);*/
+        ucore_spray_config(if_num, ucore_mask, CMD_WRITE));
     	ucore_cfg = nlm_hal_read_nae_reg(RX_UCORE_CFG);
-    	nlm_hal_write_nae_reg(RX_UCORE_CFG, ucore_cfg & (~VAL_UCORE_RESET(ucore_mask)));
+	nlm_hal_write_nae_reg(RX_UCORE_CFG, ucore_cfg & (~VAL_UCORE_RESET(ucore_mask)));
 
-    return 0;
+    	return 0;
 }
-#endif
-
-    /* Egress Config 
-     *      Configure Qvc to interface mapping
-     *       524 queue (476 - 999)
-     *       VFBID to Destination Station ID 
-     *       Credit Configuration between stages
-     *       Credit Configuration between interface N Egress bock 
-     *       Context(NAE parlance ,means Queue in FMN)Memory 
-     *          Setup to carve the Entry to Queue .
-     *       (Note Stage 1 configuration is obsolete .)
-     *       Trasmit Drr (reg 0x44 to 0x4d are  scheduler configuration)
-     *
-     *       Defaults:
-     *              Queue: 0 to 17 queue map to corresponding interface
-     *              VFBID: Dest Station ID = VFBID
-     *              Context memory setup : NOT CLEAR NO NUMBERS available 
-     *              Scheduler : round robin
-     * */
-                                    
-    /* 
-     *                      40 - 23b|15 - 13| 12 - 9|
-     *                      bar addr|block |interface
-     * */
-
 
+/* Egress Config 
+ *      Configure Qvc to interface mapping
+ *      524 queue (476 - 999)
+ *      VFBID to Destination Station ID 
+ *      Credit Configuration between stages
+ *      Credit Configuration between interface N Egress bock 
+ *      Context(NAE parlance ,means Queue in FMN)Memory 
+ *      Setup to carve the Entry to Queue .
+ *      (Note Stage 1 configuration is obsolete .)
+ *      Trasmit Drr (reg 0x44 to 0x4d are  scheduler configuration)
+ *
+ *       Defaults:
+ *              Queue: 0 to 17 queue map to corresponding interface
+ *              VFBID: Dest Station ID = VFBID
+ *              Context memory setup : NOT CLEAR NO NUMBERS available 
+ *              Scheduler : round robin
+ */
+                                    
+/* 
+ *                      40 - 23b|15 - 13| 12 - 9|
+ *                      bar addr|block |interface
+ */
 void init_ingress(void)
 {
-    unsigned int rx_cfg = 0;
-
-    rx_cfg = nlm_hal_read_nae_reg(RX_CONFIG); 
-
-    //log_dbg("nae rxcfg %x txcfg %x\n", rx_cfg, tx_cfg); 
-    #define NAE_MAX_MESSAGE_SIZE(x)                 ((x&0x1)<<1)
-    #define RESET_MAX_MESSAGE_SIZE                   ~(0x1<<1) 
-    #define NAE_FRINDESCCLSIZE(x)                   ((x&0xff)<< 4 )
-    #define RESET_FRINDESCCLSIZE                   ~((0xff)<< 4) 
-    #define NAE_RX_STATUS_MASK(x)                   ((x&0x3f) << 24)
-    #define RESET_RX_STATUS_MASK                   ~((0x3f) << 24)
-    
-	nlm_hal_write_nae_reg( RX_CONFIG,(rx_cfg & 
-                                      RESET_MAX_MESSAGE_SIZE &
-                                      RESET_FRINDESCCLSIZE & 
-                                      RESET_RX_STATUS_MASK
-                                     ) |
-                                     NAE_RX_ENABLE|
-                                     NAE_MAX_MESSAGE_SIZE(0x3)|
-                                     NAE_RX_STATUS_MASK(0x3f)|
-                                     NAE_FRINDESCCLSIZE(26)
-                                    );
-
+	unsigned int rx_cfg;
+
+	rx_cfg = nlm_hal_read_nae_reg(RX_CONFIG); 
+
+	nlm_hal_write_nae_reg(RX_CONFIG, (rx_cfg & 
+                                          RESET_MAX_MESSAGE_SIZE &
+                                          RESET_FRINDESCCLSIZE & 
+                                          RESET_RX_STATUS_MASK) |
+                                          NAE_RX_ENABLE 	|
+                                          NAE_MAX_MESSAGE_SIZE(0x3)|
+                                          NAE_RX_STATUS_MASK(0x3f)|
+                                          NAE_FRINDESCCLSIZE(26));
 }
- /* Ingress Config 
-  *      20 queue (1000 - 1019)
-  *      RxConfig : set the Free in desc default 
-  *      Interface to context mapping
-  *      set valid active interface
-  *      calendar slots
-  *      parser configuration
-  *      Parser se
-  *
-  *
-  * */
-
 
+/* Ingress Config 
+ *      20 queue (1000 - 1019)
+ *      RxConfig : set the Free in desc default 
+ *      Interface to context mapping
+ *      set valid active interface
+ *      calendar slots
+ *      parser configuration
+ *      Parser se
+ *
+ *
+ */
 void init_egress(void)
 {
-    uint32_t tx_cfg =  nlm_hal_read_nae_reg(TX_CONFIG);
+	uint32_t tx_cfg;
 
+	tx_cfg =  nlm_hal_read_nae_reg(TX_CONFIG);
 	nlm_hal_write_nae_reg( TX_CONFIG, tx_cfg|NAE_TX_ENABLE);
 
 }
diff --git a/drivers/net/xlp_nae/xlp_nae.c b/drivers/net/xlp_nae/xlp_nae.c
index 8f8c310..237ab0b 100644
--- a/drivers/net/xlp_nae/xlp_nae.c
+++ b/drivers/net/xlp_nae/xlp_nae.c
@@ -76,7 +76,8 @@
 #define MSG_TXQ_FULL                    0x04
 #define ICMP_LEN                     	74
 #define MAX_GMAC_PORT               	18
-
+#define ETH_MTU_SIZE		 	2048	
+#define MIN_ETH_FRAME_SIZE		64
 
 #define  DUMP_RCV_PKT				0	
 #define  DUMP_XMIT_PKT				0
@@ -90,7 +91,8 @@
         }					\
 	printk("\n");				
 
-#define RUN_ON_SIM_ONLY		1
+#define RUN_ON_SIM_ONLY				1
+#define IP_HEADER_4BYTE_ALIGN_WKAROUND 		1 
 
 unsigned char eth_hw_addr[18][6] = {
 					{0x00,0x01,0x02,0x03,0x04,0x05},
@@ -120,14 +122,6 @@ static struct pci_device_id soc_pci_table[] __devinitdata = {
         {}
 };
 
-#define MYIP_OFFSET	30				
-#define  RUN_ON_SIM()					\
-uint8_t hosteth[6]   = {0x00,0x1a,0xa0,0x1e,0x5d,0xc9};	\
-uint8_t myip[4]	     = {10,26,112,214};			\
-	if(memcmp(buf, hosteth, 6) == 0)		\
-		if(memcmp(&buf[MYIP_OFFSET],myip,4)==0)	\
-			memcpy(buf,&eth_hw_addr[0],6); 		 
-
 extern int  xlp_sgmii_ports;
 extern void xlp_set_ethtool_ops(struct net_device *netdev);
 extern void xlp_get_mac_stats(struct net_device* dev, struct net_device_stats* stats);
@@ -285,7 +279,7 @@ static void mac_refill_frin_desc(unsigned long dev)
 	priv = netdev_priv(ndev);
 	ret = 0;
 	
-	limit = priv->inited ? MIN_FRIN_DESC_THRESHD*2: MIN_FRIN_DESC_THRESHD*4; 
+	limit = priv->inited ? MIN_FRIN_DESC_THRESHD: MIN_FRIN_DESC_THRESHD*4; 
 
 	for(i=1; i <= limit; i++)
 	{
@@ -425,13 +419,6 @@ retry_send:
         return ret;
 }
 
-static int __devinit nlm_xlp_nae_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
-{
-        int result = 0;
-        result = pci_enable_device(pdev);
-	return result;
-
-}
 
 /**********************************************************************
  * nlm_xlp_nae_init -  xlp_nae device driver init function
@@ -598,7 +585,7 @@ static int  nlm_xlp_nae_open (struct net_device *dev)
 {
 	struct dev_data *priv = netdev_priv(dev);
 	int port = priv->port;
-	int ret  = 0, i;
+	int ret  = 0, i, irq;
 
 	if(priv->inited)
 		return ret;
@@ -615,8 +602,9 @@ static int  nlm_xlp_nae_open (struct net_device *dev)
 		ret = -EBUSY;
 		printk("can't get mac interrupt line (%d)\n",dev->irq);
 	}
-	dump_irt_entry(PIC_IRT_NA_INDEX(port));
 */
+	/*dump_irt_entry(PIC_IRT_NA_INDEX(port)); */
+
 	/* set timer to test rx routine */
 	init_timer(&priv->link_timer);
 	priv->link_timer.expires = jiffies + HZ/100 ;
@@ -803,7 +791,7 @@ static int nlm_xlp_nae_change_mtu(struct net_device *dev, int new_mtu)
 	struct dev_data *priv = netdev_priv(dev);
 	unsigned long flags;
 
-	if ((new_mtu > 1500) || (new_mtu < 64)) {
+	if ((new_mtu > ETH_MTU_SIZE) || (new_mtu < MIN_ETH_FRAME_SIZE)) {
 		return -EINVAL;
 	}
 
@@ -977,7 +965,7 @@ static void  nlm_xlp_nae_rx(struct sk_buff* skb, struct net_device *dev)
 	{
 		len = len  - BYTE_OFFSET -MAC_CRC_LEN - MAC_PREPAD;
 	
-		if(len >=2048)
+		if(len >= ETH_MTU_SIZE)
 		{
 			priv->stats.rx_errors++;
 			priv->stats.rx_dropped++;
@@ -1038,7 +1026,6 @@ static irqreturn_t nlm_xlp_nae_int_handler(int irq, void * dev_id)
 	
 	i = find_irt_from_irq(irq);
 
-	nlm_xlp_nae_rx(priv->skb, dev);
 
 	return IRQ_HANDLED;
 }
@@ -1149,7 +1136,7 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
         	{
                 	len = len  - MAC_CRC_LEN;
 			/* printk("len: %d, BYTE_OFFSET: %d, MAC_CRC_LEN: %d, MAC_PREPAD: %d \n", len, BYTE_OFFSET, MAC_CRC_LEN, MAC_PREPAD);*/
-                	if(len >= 2048)
+                	if(len >= ETH_MTU_SIZE)
                 	{
                         	priv->stats.rx_errors++;
                         	priv->stats.rx_dropped++;
@@ -1159,7 +1146,7 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
        		}
         	skb = mac_get_skb_back_ptr(vaddr);
         	if (skb) {
-#if 1  /* fix for ip header not alligned to 4 bytes boundry problem */ 
+#if  IP_HEADER_4BYTE_ALIGN_WKAROUND  /* fix for ip header not alligned to 4 bytes boundry problem */ 
 			{
 			struct sk_buff *myskb = __dev_alloc_skb(NLM_RX_BUF_SIZE, GFP_KERNEL);
 			unsigned long offset;
@@ -1408,6 +1395,12 @@ static void  nlm_xlp_napi_poll(struct napi_struct *napi, int* budget)
 	return;
 }
 
+static int __devinit nlm_xlp_nae_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
+{
+        int result = 0;
+        result = pci_enable_device(pdev);
+	return result;
+}
 
 /**********************************************************************
  * nlm_xlp_nae_remove - driver remove routine
-- 
1.8.4.93.g57e4c17

