From c70a5abb7bc3d14099ba1ff0fe7a6f119952b502 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Mon, 9 Sep 2013 11:04:36 +0800
Subject: [PATCH 561/565] bcm-xlp: clean up driver code

1. remove some deprecated codes in Linux V3.10, such as __devexit;
2. restore some improper code changes which made in the previous patches.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/mmc/host/sdhci.c          |  1 +
 drivers/mtd/devices/m25p80.c      |  2 --
 drivers/mtd/devices/spinand_lld.c |  6 +++---
 drivers/mtd/mtdcore.c             | 42 +++++++++++++++++++--------------------
 drivers/mtd/nand/nand_ids.c       |  4 ++--
 5 files changed, 26 insertions(+), 29 deletions(-)

diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index 8965ca3..c41c1ab 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -29,6 +29,7 @@
 #include <linux/mmc/host.h>
 #include <linux/mmc/card.h>
 #include <linux/mmc/slot-gpio.h>
+#include <linux/gpio.h>
 #include <asm/netlogic/xlp_irq.h>
 #include <asm/netlogic/hal/nlm_hal.h>
 #include <hal/nlm_hal_xlp_dev.h>
diff --git a/drivers/mtd/devices/m25p80.c b/drivers/mtd/devices/m25p80.c
index 33e37c2..3e6bf98 100644
--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -360,7 +360,6 @@ static int m25p80_read(struct mtd_info *mtd, loff_t from, size_t len,
 	 */
 	t[0].tx_buf = flash->command;
 	t[0].len = m25p_cmdsz(flash) + (flash->fast_read ? 1 : 0);
-	t[0].spi_cont_cmd = 0x1;
 	spi_message_add_tail(&t[0], &m);
 
 	t[1].rx_buf = buf;
@@ -417,7 +416,6 @@ static int m25p80_write(struct mtd_info *mtd, loff_t to, size_t len,
 
 	t[0].tx_buf = flash->command;
 	t[0].len = m25p_cmdsz(flash);
-	t[0].spi_cont_cmd = 0x1;
 	spi_message_add_tail(&t[0], &m);
 
 	t[1].tx_buf = buf;
diff --git a/drivers/mtd/devices/spinand_lld.c b/drivers/mtd/devices/spinand_lld.c
index 347b402..a0d54bf 100644
--- a/drivers/mtd/devices/spinand_lld.c
+++ b/drivers/mtd/devices/spinand_lld.c
@@ -860,7 +860,7 @@ static void cmdfunc(struct mtd_info *mtd,
  * Description:
  *   To set up the device driver parameters to make the device available.
  */
-static int __devinit spinand_probe(struct spi_device *spi_nand)
+static int spinand_probe(struct spi_device *spi_nand)
 {
 	ssize_t retval;
 	struct mtd_info *mtd;
@@ -959,7 +959,7 @@ static int __devinit spinand_probe(struct spi_device *spi_nand)
  * Description:
  *   To remove the device driver parameters and free up allocated memories.
  */
-static int __devexit spinand_remove(struct spi_device *spi)
+static int spinand_remove(struct spi_device *spi)
 {
 	struct mtd_info *mtd;
 	struct nand_chip *chip; 
@@ -994,7 +994,7 @@ static struct spi_driver spinand_driver = {
 	},
 
 	.probe		= spinand_probe,
-	.remove		= __devexit_p(spinand_remove),
+	.remove		= spinand_remove,
 };
 
 /**
diff --git a/drivers/mtd/mtdcore.c b/drivers/mtd/mtdcore.c
index 044b1ce..2ee1002 100644
--- a/drivers/mtd/mtdcore.c
+++ b/drivers/mtd/mtdcore.c
@@ -336,32 +336,31 @@ int add_mtd_device(struct mtd_info *mtd)
 {
 	struct mtd_notifier *not;
 	int i, error;
-	
+
 	if (!mtd->backing_dev_info) {
 		switch (mtd->type) {
 		#ifdef CONFIG_NLM_XLP
-			case MTD_RAM:
-                	        mtd->backing_dev_info = mtd_bdi_rw_mappable;
-                        	break;
-                	case MTD_ROM:
-                        	mtd->backing_dev_info = mtd_bdi_ro_mappable;
-                        	break;
-			default:
-                        	mtd->backing_dev_info = mtd_bdi_unmappable;
-                      		break;
+		case MTD_RAM:
+			mtd->backing_dev_info = mtd_bdi_rw_mappable;
+			break;
+		case MTD_ROM:
+			mtd->backing_dev_info = mtd_bdi_ro_mappable;
+			break;
+		default:
+			mtd->backing_dev_info = mtd_bdi_unmappable;
+			break;
 		#else
-			case MTD_RAM:
-				mtd->backing_dev_info = &mtd_bdi_rw_mappable;
-				break;
-			case MTD_ROM:
-				mtd->backing_dev_info = &mtd_bdi_ro_mappable;
-				break;
-			default:
-				mtd->backing_dev_info = &mtd_bdi_unmappable;
-				break;
+		case MTD_RAM:
+			mtd->backing_dev_info = &mtd_bdi_rw_mappable;
+			break;
+		case MTD_ROM:
+			mtd->backing_dev_info = &mtd_bdi_ro_mappable;
+			break;
+		default:
+			mtd->backing_dev_info = &mtd_bdi_unmappable;
+			break;
 		#endif
 		}
-
 	}
 
 	BUG_ON(mtd->writesize == 0);
@@ -1170,7 +1169,6 @@ static int __init mtd_bdi_init(struct backing_dev_info *bdi, const char *name)
 	int ret;
 
 	ret = bdi_init(bdi);
-
 	if (!ret)
 		ret = bdi_register(bdi, NULL, name);
 
@@ -1249,10 +1247,10 @@ static int __init init_mtd(void)
 
 	return 0;
 
-#ifndef CONFIG_NLM_XLP
 out_procfs:
 	if (proc_mtd)
 		remove_proc_entry("mtd", NULL);
+#ifndef CONFIG_NLM_XLP
 err_bdi3:
 	bdi_destroy(&mtd_bdi_ro_mappable);
 err_bdi2:
diff --git a/drivers/mtd/nand/nand_ids.c b/drivers/mtd/nand/nand_ids.c
index dde41df..bbf3922 100644
--- a/drivers/mtd/nand/nand_ids.c
+++ b/drivers/mtd/nand/nand_ids.c
@@ -98,8 +98,8 @@ struct nand_flash_dev nand_flash_ids[] = {
 	EXTENDED_ID_NAND("NAND 128MiB 1,8V 16-bit", 0xB1, 128, LP_OPTIONS16),
 	EXTENDED_ID_NAND("NAND 128MiB 3,3V 16-bit", 0xC1, 128, LP_OPTIONS16),
 	EXTENDED_ID_NAND("NAND 128MiB 1,8V 16-bit", 0xAD, 128, LP_OPTIONS16),
-	EXTENDED_ID_NAND("SPINAND 128MiB 3,3V 8-bit", 0x11, 2048, 128, 0x20000, LP_OPTIONS),
-	EXTENDED_ID_NAND("SPINAND 128MiB 3,3V 8-bit", 0x12, 2048, 128, 0x20000, LP_OPTIONS),
+	EXTENDED_ID_NAND("SPINAND 128MiB 3,3V 8-bit", 0x11, 128, LP_OPTIONS),
+	EXTENDED_ID_NAND("SPINAND 128MiB 3,3V 8-bit", 0x12, 128, LP_OPTIONS),
 
 	/* 2 Gigabit */
 	EXTENDED_ID_NAND("NAND 256MiB 1,8V 8-bit",  0xAA, 256, LP_OPTIONS),
-- 
1.8.4.93.g57e4c17

