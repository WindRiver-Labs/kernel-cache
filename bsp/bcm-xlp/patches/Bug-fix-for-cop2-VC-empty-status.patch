From 3ea109e76a3e1443d229452f9704b38f86c6ff9e Mon Sep 17 00:00:00 2001
From: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Date: Sat, 4 Sep 2010 16:44:46 -0700
Subject: [PATCH 126/565] Bug fix for cop2 VC empty status

Bug fix for cop2 VC empty status check, test for xlp nae module parameters

Based on Broadcom SDK 2.3.

Signed-off-by: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/on_chip.c |  2 +-
 drivers/net/xlp_nae/xlp_nae.c    | 52 ++++++++++++++++++++++++----------------
 2 files changed, 33 insertions(+), 21 deletions(-)

diff --git a/arch/mips/netlogic/xlp/on_chip.c b/arch/mips/netlogic/xlp/on_chip.c
index 39ffa51..30b3390 100644
--- a/arch/mips/netlogic/xlp/on_chip.c
+++ b/arch/mips/netlogic/xlp/on_chip.c
@@ -206,7 +206,7 @@ void nlm_xlp_msgring_int_handler(unsigned int irq, struct pt_regs *regs)
 		/* Read latest VC empty mask */
 		msg_status1 = xlp_read_status1();
 		vc_empty_status = (msg_status1 >> 24) & 0xf;
-		if (!vc_empty_status) break;
+		if (vc_empty_status == 0xf) break;
 
 		for( vc = vcpu; vc < (vcpu + 4); vc++)
 		{
diff --git a/drivers/net/xlp_nae/xlp_nae.c b/drivers/net/xlp_nae/xlp_nae.c
index 2994d5d..0963e7a 100644
--- a/drivers/net/xlp_nae/xlp_nae.c
+++ b/drivers/net/xlp_nae/xlp_nae.c
@@ -30,6 +30,7 @@
 
 #include <linux/types.h>
 #include <linux/module.h>
+#include <linux/moduleparam.h>
 #include <linux/kernel.h>
 #include <linux/init.h>
 #include <linux/interrupt.h>
@@ -80,9 +81,9 @@
 #define ETH_MTU_SIZE		 	2048
 #define MIN_ETH_FRAME_SIZE		64
 
-#define DUMP_RCV_PKT				0
-#define DUMP_XMIT_PKT				0
-#define DUMP_PKT(x, y)				\
+#define  DUMP_RCV_PKT				0	
+#define  DUMP_XMIT_PKT				0
+#define  DUMP_PKT(x, y)	if (debug == 2)  {	\
 	int i;      				\
         for(i = 0; i < y; i++)			\
         {					\
@@ -90,11 +91,16 @@
                 if( i % 16 == 15)		\
                         printk("\n");		\
         }					\
-	printk("\n");				
+	printk("\n"); }
 
 #define RUN_ON_SIM_ONLY			 	0
 #define IP_HEADER_4BYTE_ALIGN_WKAROUND 		0
 
+static int debug = 0;
+module_param(debug, int, 0);
+static int hwemul = 0;
+module_param(hwemul, int, 0);
+
 unsigned char eth_hw_addr[18][6] = {
 					{0x00,0x01,0x02,0x03,0x04,0x05},
 					{0x00,0x01,0x02,0x03,0x04,0x06},
@@ -423,6 +429,9 @@ static void nlm_xlp_nae_init(void)
 	struct proc_dir_entry *entry;
 	uint32_t val;
 
+	printk("======= Module Parameters =========\n");
+	printk("debug = %d, hwemul=%d\n", debug, hwemul);
+
 #define HW_EMULATOR                            1
 #ifdef HW_EMULATOR
 	unsigned long mflags = 0;
@@ -697,13 +706,14 @@ static int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 
 	msg.entry[2] = msg.entry[3] = 0;
 
-#if DUMP_XMIT_PKT
-  	DUMP_PKT(skb->data, skb->len) 
-#endif
-	__sync(); 
+  	DUMP_PKT(skb->data, skb->len)
+
+	__sync();
 
-       printk("[%s]: tx_qid=%d, entry0=%llx, entry1=%llx\n", __func__,
-	      priv->nae_tx_qid, msg.entry[0], msg.entry[1]);
+       if (debug) {
+	       printk("[%s]: tx_qid=%d, entry0=%llx, entry1=%llx\n", __func__,
+		      priv->nae_tx_qid, msg.entry[0], msg.entry[1]);
+       }
 
 	msgrng_access_enable(mflags);
 retry_send:
@@ -899,8 +909,10 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 	cpu = vc >> 4;
 	vc = vc & 0x03;
 
-       printk("[%s] src_id=%d vc = %d, size = %d, entry0=%llx entry1=%llx\n", __func__,
-	      src_id, vc, size, msg0, msg1);
+       if (debug) {
+	       printk("[%s] src_id=%d vc = %d, size = %d, entry0=%llx entry1=%llx\n", __func__,
+		      src_id, vc, size, msg0, msg1);
+       }
 
 	if( vc == 1 && size == 1)
 	{
@@ -925,8 +937,10 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 		skb = (struct sk_buff *)bus_to_virt(addr);
 		if(skb)
 		{
-			printk("[%s]: addr=%llx, skb=%p, context=%d, port=%d\n",
-			       __func__, addr, skb, context, port);
+			if (debug) {
+				printk("[%s]: addr=%llx, skb=%p, context=%d, port=%d\n",
+				       __func__, addr, skb, context, port);
+			}
 			dev_kfree_skb_any(skb);
 		}
 		else {
@@ -958,12 +972,12 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
         	vaddr = (uint64_t)bus_to_virt(addr);
         	buf = (unsigned char *)vaddr;
 
-		printk("[%s]: addr=%llx, len=%d, context=%d, port=%d, vaddr=%llx, buf=%p\n",
-		       __func__, addr, len, context, port, vaddr, buf);
+		if (debug) {
+			printk("[%s]: addr=%llx, len=%d, context=%d, port=%d, vaddr=%llx, buf=%p\n",
+			       __func__, addr, len, context, port, vaddr, buf);
+		}
 
-#if DUMP_RCV_PKT
 		DUMP_PKT(buf , len);
-#endif
 
 		len = len  - MAC_CRC_LEN;
 
@@ -996,9 +1010,7 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 				tasklet_schedule(&mac_refill_task[port]);
 			}
 
-#if DUMP_RCV_PKT
 			DUMP_PKT(skb->data, skb->len);
-#endif
         	}
         	else if(!skb)
         	{
-- 
1.8.4.93.g57e4c17

