From b0c1c80a5fcae7606f8dbcbaa05690fcd95c9166 Mon Sep 17 00:00:00 2001
From: Zi Shen Lim <zlim@netlogicmicro.com>
Date: Mon, 30 Jan 2012 18:15:40 -0800
Subject: [PATCH 343/565] XLP: multi-os/xen build fixes, cleanup

XLP: multi-os/xen build fixes, cleanup

Based on Broadcom SDK 2.3.

Signed-off-by: Zi Shen Lim <zlim@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/xen/hypercall.h  |  8 +++-
 arch/mips/include/asm/xen/hypervisor.h | 27 ------------
 arch/mips/include/asm/xen/interface.h  | 18 +++++---
 arch/mips/include/asm/xen/page.h       | 11 +++++
 arch/mips/include/asm/xen/pci.h        | 81 ++++++++++++++++++++++++++++++++++
 arch/mips/netlogic/xlp/xenbootinfo.c   |  2 +-
 arch/mips/xen/enlighten.c              |  4 ++
 drivers/char/nlm_sharedmem.c           |  8 +---
 8 files changed, 118 insertions(+), 41 deletions(-)
 create mode 100644 arch/mips/include/asm/xen/pci.h

diff --git a/arch/mips/include/asm/xen/hypercall.h b/arch/mips/include/asm/xen/hypercall.h
index 865f2ad..6713e7d 100644
--- a/arch/mips/include/asm/xen/hypercall.h
+++ b/arch/mips/include/asm/xen/hypercall.h
@@ -347,7 +347,7 @@ HYPERVISOR_fpu_taskswitch(int set)
 static inline int
 HYPERVISOR_sched_op(int cmd, void *arg)
 {
-	return _hypercall2(int, sched_op_new, cmd, arg);
+	return _hypercall2(int, sched_op, cmd, arg);
 }
 
 static inline long
@@ -507,6 +507,12 @@ HYPERVISOR_nmi_op(unsigned long op, unsigned long arg)
 	return _hypercall2(int, nmi_op, op, arg);
 }
 
+static inline unsigned long __must_check
+HYPERVISOR_hvm_op(int op, void *arg)
+{
+       return _hypercall2(unsigned long, hvm_op, op, arg);
+}
+
 static inline void
 MULTI_fpu_taskswitch(struct multicall_entry *mcl, int set)
 {
diff --git a/arch/mips/include/asm/xen/hypervisor.h b/arch/mips/include/asm/xen/hypervisor.h
index 5dd6ebe..dcd3d18 100644
--- a/arch/mips/include/asm/xen/hypervisor.h
+++ b/arch/mips/include/asm/xen/hypervisor.h
@@ -37,31 +37,4 @@
 extern struct shared_info *HYPERVISOR_shared_info;
 extern struct start_info *xen_start_info;
 
-enum xen_domain_type {
-	XEN_NATIVE,		/* running on bare hardware    */
-	XEN_PV_DOMAIN,		/* running in a PV domain      */
-	XEN_HVM_DOMAIN,		/* running in a Xen hvm domain */
-};
-
-#ifdef CONFIG_XEN
-extern enum xen_domain_type xen_domain_type;
-#else
-#define xen_domain_type		XEN_NATIVE
-#endif
-
-#define xen_domain()		(xen_domain_type != XEN_NATIVE)
-#define xen_pv_domain()		(xen_domain() &&			\
-				 xen_domain_type == XEN_PV_DOMAIN)
-#define xen_hvm_domain()	(xen_domain() &&			\
-				 xen_domain_type == XEN_HVM_DOMAIN)
-
-#ifdef CONFIG_XEN_DOM0
-#include <xen/interface/xen.h>
-
-#define xen_initial_domain()	(xen_pv_domain() && \
-				 xen_start_info->flags & SIF_INITDOMAIN)
-#else  /* !CONFIG_XEN_DOM0 */
-#define xen_initial_domain()	(0)
-#endif	/* CONFIG_XEN_DOM0 */
-
 #endif /* _ASM_MIPS_XEN_HYPERVISOR_H */
diff --git a/arch/mips/include/asm/xen/interface.h b/arch/mips/include/asm/xen/interface.h
index 7c9d3d2..a017ac0 100644
--- a/arch/mips/include/asm/xen/interface.h
+++ b/arch/mips/include/asm/xen/interface.h
@@ -52,17 +52,23 @@
 #define get_xen_guest_handle(val, hnd)  do { val = (hnd).p; } while (0)
 #endif
 
+#ifndef __ASSEMBLY__
+/* Guest handles for primitive C types. */
+__DEFINE_GUEST_HANDLE(uchar, unsigned char);
+__DEFINE_GUEST_HANDLE(uint,  unsigned int);
+__DEFINE_GUEST_HANDLE(ulong, unsigned long);
+DEFINE_GUEST_HANDLE(char);
+DEFINE_GUEST_HANDLE(int);
+DEFINE_GUEST_HANDLE(long);
+DEFINE_GUEST_HANDLE(void);
+#endif
+
 #if _MIPS_SIM == _MIPS_SIM_ABI32
 #include <asm/xen/xen-mips-32.h>
 #else
 #include <asm/xen/xen-mips-64.h>
 #endif
 
-#ifndef __ASSEMBLY__
-typedef unsigned long xen_pfn_t;
-#define PRI_xen_pfn "lx"
-#endif
-
 /* Maximum number of virtual CPUs in multi-processor guests. */
 #define MAX_VIRT_CPUS 32
 
@@ -155,7 +161,7 @@ struct arch_shared_info {
     unsigned long max_pfn;                  /* max pfn that appears in table */
 	unsigned long start_info_pfn;
     /* Frame containing list of mfns containing list of mfns containing p2m. */
-    xen_pfn_t     pfn_to_mfn_frame_list_list;
+    unsigned long pfn_to_mfn_frame_list_list;
     unsigned long nmi_reason;
 	unsigned long *xensp[NR_CPUS];
 	unsigned int dom_page_shift;
diff --git a/arch/mips/include/asm/xen/page.h b/arch/mips/include/asm/xen/page.h
index 6929bff..d2a286e 100644
--- a/arch/mips/include/asm/xen/page.h
+++ b/arch/mips/include/asm/xen/page.h
@@ -39,6 +39,17 @@ typedef struct xpaddr {
 extern unsigned long *machine_to_phys_mapping;
 extern unsigned int   machine_to_phys_order;
 
+static inline int m2p_add_override(unsigned long mfn, struct page *page,
+				   bool clear_pte)
+{
+	return -1;
+}
+
+static inline int m2p_remove_override(struct page *page, bool clear_pte)
+{
+	return -1;
+}
+
 extern unsigned long get_phys_to_machine(unsigned long pfn);
 extern void set_phys_to_machine(unsigned long pfn, unsigned long mfn);
 
diff --git a/arch/mips/include/asm/xen/pci.h b/arch/mips/include/asm/xen/pci.h
new file mode 100644
index 0000000..10b36de
--- /dev/null
+++ b/arch/mips/include/asm/xen/pci.h
@@ -0,0 +1,81 @@
+#ifndef _ASM_MIPS_XEN_PCI_H
+#define _ASM_MIPS_XEN_PCI_H
+
+#if defined(CONFIG_PCI_XEN)
+extern int __init pci_xen_init(void);
+extern int __init pci_xen_hvm_init(void);
+#define pci_xen 1
+#else
+#define pci_xen 0
+#define pci_xen_init (0)
+static inline int pci_xen_hvm_init(void)
+{
+	return -1;
+}
+#endif
+#if defined(CONFIG_XEN_DOM0)
+void __init xen_setup_pirqs(void);
+int xen_find_device_domain_owner(struct pci_dev *dev);
+int xen_register_device_domain_owner(struct pci_dev *dev, uint16_t domain);
+int xen_unregister_device_domain_owner(struct pci_dev *dev);
+#else
+static inline void __init xen_setup_pirqs(void)
+{
+}
+static inline int xen_find_device_domain_owner(struct pci_dev *dev)
+{
+	return -1;
+}
+static inline int xen_register_device_domain_owner(struct pci_dev *dev,
+						   uint16_t domain)
+{
+	return -1;
+}
+static inline int xen_unregister_device_domain_owner(struct pci_dev *dev)
+{
+	return -1;
+}
+#endif
+
+#if defined(CONFIG_PCI_MSI)
+#if defined(CONFIG_PCI_XEN)
+/* The drivers/pci/xen-pcifront.c sets this structure to
+ * its own functions.
+ */
+struct xen_pci_frontend_ops {
+	int (*enable_msi)(struct pci_dev *dev, int vectors[]);
+	void (*disable_msi)(struct pci_dev *dev);
+	int (*enable_msix)(struct pci_dev *dev, int vectors[], int nvec);
+	void (*disable_msix)(struct pci_dev *dev);
+};
+
+extern struct xen_pci_frontend_ops *xen_pci_frontend;
+
+static inline int xen_pci_frontend_enable_msi(struct pci_dev *dev,
+					      int vectors[])
+{
+	if (xen_pci_frontend && xen_pci_frontend->enable_msi)
+		return xen_pci_frontend->enable_msi(dev, vectors);
+	return -ENODEV;
+}
+static inline void xen_pci_frontend_disable_msi(struct pci_dev *dev)
+{
+	if (xen_pci_frontend && xen_pci_frontend->disable_msi)
+			xen_pci_frontend->disable_msi(dev);
+}
+static inline int xen_pci_frontend_enable_msix(struct pci_dev *dev,
+					       int vectors[], int nvec)
+{
+	if (xen_pci_frontend && xen_pci_frontend->enable_msix)
+		return xen_pci_frontend->enable_msix(dev, vectors, nvec);
+	return -ENODEV;
+}
+static inline void xen_pci_frontend_disable_msix(struct pci_dev *dev)
+{
+	if (xen_pci_frontend && xen_pci_frontend->disable_msix)
+			xen_pci_frontend->disable_msix(dev);
+}
+#endif /* CONFIG_PCI_XEN */
+#endif /* CONFIG_PCI_MSI */
+
+#endif	/* _ASM_MIPS_XEN_PCI_H */
diff --git a/arch/mips/netlogic/xlp/xenbootinfo.c b/arch/mips/netlogic/xlp/xenbootinfo.c
index f5fda4e..0d21a59 100644
--- a/arch/mips/netlogic/xlp/xenbootinfo.c
+++ b/arch/mips/netlogic/xlp/xenbootinfo.c
@@ -79,7 +79,7 @@ int xen_enable_cpus(int node, uint32_t onlinemask)
 {
 	if (node) {
 		printk("XEN Multi-Node not available yet!\n");
-		return;
+		return -1;
 	}
 
 	return xc_wakeup_secondary(0, onlinemask, (unsigned long)secondary_cpus_bootup_func);
diff --git a/arch/mips/xen/enlighten.c b/arch/mips/xen/enlighten.c
index c7310ae..0bcf152 100644
--- a/arch/mips/xen/enlighten.c
+++ b/arch/mips/xen/enlighten.c
@@ -28,6 +28,7 @@
 #include <linux/highmem.h>
 #include <linux/console.h>
 
+#include <xen/xen.h>
 #include <xen/interface/xen.h>
 #include <xen/interface/version.h>
 #include <xen/interface/physdev.h>
@@ -67,6 +68,9 @@ EXPORT_SYMBOL_GPL(xen_start_info);
 
 struct shared_info xen_dummy_shared_info;
 
+__read_mostly int xen_have_vector_callback;
+EXPORT_SYMBOL_GPL(xen_have_vector_callback);
+
 /*
  * Point at some empty memory to start with. We map the real shared_info
  * page as soon as fixmap is up and running.
diff --git a/drivers/char/nlm_sharedmem.c b/drivers/char/nlm_sharedmem.c
index bc82f16..38a3538 100644
--- a/drivers/char/nlm_sharedmem.c
+++ b/drivers/char/nlm_sharedmem.c
@@ -41,6 +41,8 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #include <xen/grant_table.h>
 #include <asm/xen/hypercall.h>
 
+#include <xen/privcmd.h>	/* for xen_pfn_t */
+
 #define SHAREDMEM_NAME             "nlm_sharedmem"
 #define NUM_SHAREDMEMS             (1)
 #define NLM_SHAREDMEM_ID           (101)
@@ -84,11 +86,6 @@ static ssize_t sharedmem_write (struct file *file, const char *buf,
 	return 0;
 }
 
-static int sharedmem_ioctl(struct inode *inode, struct file *file,
-						   unsigned int cmd, unsigned long arg) {
-	return 0;
-}
-
 static long sharedmem_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg) {
 
 	/* Will be called during 32 bit user space applications */
@@ -180,7 +177,6 @@ struct file_operations sharedmem_fops = {
 	.read	      =	sharedmem_read,
 	.write	      =	sharedmem_write,
 	.mmap	      =	sharedmem_mmap,
-	.ioctl	      =	sharedmem_ioctl,
 	.compat_ioctl =	sharedmem_compat_ioctl,
 	.open	      =	sharedmem_open,
 	.release      =	sharedmem_release,
-- 
1.8.4.93.g57e4c17

