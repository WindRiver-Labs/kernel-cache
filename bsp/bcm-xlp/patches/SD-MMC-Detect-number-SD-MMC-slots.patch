From 0affafb20f1ba943d79b8325a7d4fec13d101c0f Mon Sep 17 00:00:00 2001
From: Anurag <anurag.gopinath@broadcom.com>
Date: Thu, 11 Oct 2012 11:37:29 +0530
Subject: [PATCH 403/565] SD/MMC : Detect number SD/MMC slots

SD/MMC : Detect number SD/MMC slots based on board type.

Based on Broadcom SDK 2.3.

Signed-off-by: Anurag <anurag.gopinath@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/mmc/host/sdhci-xlp.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/mmc/host/sdhci-xlp.c b/drivers/mmc/host/sdhci-xlp.c
index 2636c42..6aa598b 100644
--- a/drivers/mmc/host/sdhci-xlp.c
+++ b/drivers/mmc/host/sdhci-xlp.c
@@ -32,6 +32,7 @@
 #include <linux/mmc/host.h>
 
 #include <linux/io.h>
+#include <asm/netlogic/hal/nlm_hal_xlp_dev.h>
 
 #include "sdhci.h"
 #include "sdhci-pltfm.h"
@@ -47,6 +48,8 @@ static struct sdhci_ops sdhci_pltfm_ops = {
 
 #define XLP_SLOT_SIZE          0x100
 #define XLP_NUM_SD_SLOT        2
+#define XLP_DOUBLE_SD_SLOT     2
+#define XLP_SINGLE_SD_SLOT     1
 #define XLP_IO_PCI_HDRSZ       0x100
 
 struct sdhci_xlp_node {
@@ -54,6 +57,16 @@ struct sdhci_xlp_node {
         struct sdhci_host       *host[XLP_NUM_SD_SLOT];
 };
 
+
+static int findmaxslots(void) {
+        if(is_nlm_xlp8xx())
+                return XLP_SINGLE_SD_SLOT;
+        else if (is_nlm_xlp3xx())
+                return XLP_DOUBLE_SD_SLOT;
+        else
+                return XLP_SINGLE_SD_SLOT;
+}
+
 /*****************************************************************************\
  *                                                                           *
  * Device probing/removal                                                    *
@@ -156,6 +169,7 @@ static int __devinit sdhci_pltfm_probe(struct platform_device *pdev)
 	struct resource *iomem;
         int irq;
         volatile u32 *mmc_ctrl_base;
+        int slots;
 
         node = kmalloc(sizeof(struct sdhci_xlp_node), GFP_KERNEL);
         if (!node)
@@ -194,7 +208,9 @@ static int __devinit sdhci_pltfm_probe(struct platform_device *pdev)
         * in any PCI BARs.
         */
         irq = platform_get_irq(pdev, 0);
-        for (slotno = 0; slotno < XLP_NUM_SD_SLOT; slotno++) {
+        slots = findmaxslots();
+
+        for (slotno = 0; slotno < slots; slotno++) {
             pdev->resource[slotno].flags = IORESOURCE_MEM;
             pdev->resource[slotno].start = iomem->start + (0x100); 
             pdev->resource[slotno].end = pdev->resource[slotno].start + 
-- 
1.8.4.93.g57e4c17

