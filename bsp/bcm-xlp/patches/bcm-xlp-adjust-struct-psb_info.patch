From ac218e0382d688acc85f92afb23c1b6f874e7263 Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Sat, 4 Sep 2010 14:50:03 -0700
Subject: [PATCH 123/565] bcm-xlp: adjust struct psb_info

Adjust struct psb_info cleanup to preserved _uncached_access() call
for xlp userspace function.

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/netlogic/xlp.h | 44 -----------------------------
 arch/mips/netlogic/common/memory.c   |  2 --
 arch/mips/netlogic/xlp/setup.c       | 55 ------------------------------------
 3 files changed, 101 deletions(-)

diff --git a/arch/mips/include/asm/netlogic/xlp.h b/arch/mips/include/asm/netlogic/xlp.h
index 010d43f..1442c5a 100644
--- a/arch/mips/include/asm/netlogic/xlp.h
+++ b/arch/mips/include/asm/netlogic/xlp.h
@@ -29,51 +29,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #include <linux/types.h>
 #include <asm/cpu.h>
 #include <asm/mipsregs.h>
-#if 0
-#define PSB_INFO_VERSION 0x0001
 
-struct psb_info {
-        uint64_t boot_level;
-        uint64_t io_base;
-        uint64_t output_device;
-        uint64_t uart_print;
-        uint64_t led_output;
-        uint64_t init;
-        uint64_t exit;
-        uint64_t warm_reset;
-        uint64_t wakeup;
-        uint64_t nlm_cpu_online_map;
-        uint64_t master_reentry_sp;
-        uint64_t master_reentry_gp;
-        uint64_t master_reentry_fn;
-        uint64_t slave_reentry_fn;
-        uint64_t magic_dword;
-        uint64_t uart_putchar;
-        uint64_t size;
-        uint64_t uart_getchar;
-        uint64_t nmi_handler;
-        uint64_t psb_version;
-        uint64_t mac_addr;
-        uint64_t cpu_frequency;
-        uint64_t board_version;
-        uint64_t malloc;
-        uint64_t free;
-        uint64_t global_shmem_addr;
-        uint64_t global_shmem_size;
-        uint64_t psb_os_cpu_map;
-        uint64_t userapp_cpu_map;
-        uint64_t wakeup_os;
-        uint64_t psb_mem_map;
-        uint64_t board_major_version;
-        uint64_t board_minor_version;
-        uint64_t board_manf_revision;
-        uint64_t board_serial_number;
-        uint64_t psb_physaddr_map;
-        uint64_t xlr_loaderip_config;
-        uint64_t bldr_envp;
-        uint64_t avail_mem_map;
-};
-#endif
 enum {
         NETLOGIC_IO_SPACE = 0x10,
         PCIX_IO_SPACE,
diff --git a/arch/mips/netlogic/common/memory.c b/arch/mips/netlogic/common/memory.c
index 9e8669b..9c19b32 100644
--- a/arch/mips/netlogic/common/memory.c
+++ b/arch/mips/netlogic/common/memory.c
@@ -204,9 +204,7 @@ int __uncached_access(struct file *file, unsigned long addr)
 
 	/* check the address region, return uncached pages for IO space and
 	   cached page for memory space. */
-#if 0
 	return nlm_common_get_pgprot(addr);
-#endif
 }
 
 inline int valid_phys_addr_range(unsigned long addr, size_t count)
diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index 00f24e2..6fadfa9 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -140,69 +140,14 @@ unsigned int nlm_shtlb = 1; /* by default shared TLB is enabled */
 #endif
 
 extern struct node_mask smp_node;
-#if 0
-extern struct psb_info *nlm_boot_info;
-struct psb_info *prom_info = NULL;
-struct psb_info prom_info_copy; /* Bootloader prom_info is saved here */
 
-static struct physmap_info {
-	int type;
-	char *name;
-} psb_physmap_info[] =
-{
-	{ 0x01 , "Memory" },
-	{ 0x02 , " *** HOLE ***" },
-	{ 0x03 , "Exception Vectors" },
-	{ 0x04 , "Bootloader 0" },
-	{ 0x05 , "NMI Memory" },
-	{ 0x10 , "PCI ECFG Space" },
-	{ 0x11 , "PCIX IO Space"    },
-	{ 0x12 , "PCIX CFG Space"   },
-	{ 0x13 , "PCIX Memory Space"},
-	{ 0x14 , "HT IO Space"      },
-	{ 0x15 , "HT CFG Space" },
-	{ 0x16 , "HT Memory Space" },
-	{ 0x17 , "SRAM (QDR) Space" },
-	{ 0x18 , "Flash Region(Re-mapped)" },
-	{ 0x19 , "PCIE IO Space"    },
-	{ 0x1A , "PCIE CFG Space"   },
-	{ 0x1B , "PCIE Memory Space"},
-	{ 0xff , "Unknown type" }
-};
-
-static char *get_psb_physmap_name(int type)
-{
-	int i = 0;
-	int tsize = sizeof(psb_physmap_info) / sizeof(struct physmap_info);
-
-	for (i = 0; i < tsize; i++)	{
-		if ( (psb_physmap_info[i].type == type ) ||
-		    (psb_physmap_info[i].type == 0xff ) )
-			return psb_physmap_info[i].name;
-	}
-	return ("Unknown type");
-}
 int nlm_common_get_pgprot(unsigned long address)
 {
 	int i;
 	__u64 start=0, end=0;
-	char *name = NULL;
 
-	for (i = 0; i < boot_physaddr_info.nr_map; i++) {
-		start = boot_physaddr_info.map[i].addr;
-		end = boot_physaddr_info.map[i].addr + boot_physaddr_info.map[i].size;
-		if ((address >= start) && (address < end)) {
-			name = get_psb_physmap_name(boot_physaddr_info.map[i].type);
-			if (!(strcmp(name, "Memory"))) {
-				return 0;
-			} else {
-				return 1;
-			}
-		}
-	}
 	return 1;
 }
-#endif
 struct boot_mem_map boot_physaddr_info;
 int valid_mmap_nlm_common_addr_range(unsigned long pfn)
 {
-- 
1.8.4.93.g57e4c17

