From d65831944171353cb756fa1dd512682a7607077b Mon Sep 17 00:00:00 2001
From: Alok Agrawat <alok@broadcom.com>
Date: Wed, 11 Jul 2012 18:25:04 +0530
Subject: [PATCH 379/565] xlp2xx: modify ethtool

xlp2xx: Modify ethtool to have more functions and commands for macsec support.
Based on Broadcom SDK 2.3.

Signed-off-by: Alok Agrawat <alok@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 include/linux/ethtool.h      |  6 ++++
 include/uapi/linux/ethtool.h | 21 ++++++++++++++
 net/core/ethtool.c           | 66 ++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 93 insertions(+)

diff --git a/include/linux/ethtool.h b/include/linux/ethtool.h
index c8e3e7e..2e4e859 100644
--- a/include/linux/ethtool.h
+++ b/include/linux/ethtool.h
@@ -188,6 +188,12 @@ static inline u32 ethtool_rxfh_indir_default(u32 index, u32 n_rx_rings)
  * of the generic netdev features interface.
  */
 struct ethtool_ops {
+#ifdef CONFIG_NLM_XLP
+	int	(*msec_tx_config)(struct net_device *, struct ethtool_cmd *);
+	int	(*msec_tx_mem_config)(struct net_device *, struct ethtool_cmd *);
+	int	(*msec_rx_config)(struct net_device *, struct ethtool_cmd *);
+	int	(*msec_rx_mem_config)(struct net_device *, struct ethtool_cmd *);
+#endif
 	int	(*get_settings)(struct net_device *, struct ethtool_cmd *);
 	int	(*set_settings)(struct net_device *, struct ethtool_cmd *);
 	void	(*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *);
diff --git a/include/uapi/linux/ethtool.h b/include/uapi/linux/ethtool.h
index 0c9b448..8dbc7e2 100644
--- a/include/uapi/linux/ethtool.h
+++ b/include/uapi/linux/ethtool.h
@@ -47,6 +47,20 @@ struct ethtool_cmd {
 				   * link should be renegotiated if necessary
 				   */
 	__u32	lp_advertising;	/* Features the link partner advertises */
+#ifdef CONFIG_NLM_XLP
+/* MAC SEC related params */
+	__u8   	node; 
+	__u8	port_enable;
+	__u8	index;
+	__u8	tci;
+	__u16	preamble_len;
+	__u32	packet_num;
+	__u32	win_size_thrshld;
+	__u64 	sci;
+	__u64	sci_mask;
+	unsigned char key[16];
+/* End MAC SEC */
+#endif
 	__u32	reserved[2];
 };
 
@@ -901,6 +915,13 @@ enum ethtool_sfeatures_retval_bits {
 #define ETHTOOL_GEEE		0x00000044 /* Get EEE settings */
 #define ETHTOOL_SEEE		0x00000045 /* Set EEE settings */
 
+#ifdef CONFIG_NLM_XLP
+#define	ETHTOOL_MAC_SEC_TX	0x00000046 /* MACSec TX config to device */
+#define	ETHTOOL_MAC_SEC_TX_MEM	0x00000047 /* MACSec TX mem config to device */
+#define	ETHTOOL_MAC_SEC_RX	0x00000048 /* MACSec RX config to device */
+#define	ETHTOOL_MAC_SEC_RX_MEM	0x00000049 /* MACSec RX mem config to device */
+#endif
+
 /* compatibility with older code */
 #define SPARC_ETH_GSET		ETHTOOL_GSET
 #define SPARC_ETH_SSET		ETHTOOL_SSET
diff --git a/net/core/ethtool.c b/net/core/ethtool.c
index ce91766..fb618da 100644
--- a/net/core/ethtool.c
+++ b/net/core/ethtool.c
@@ -353,6 +353,58 @@ static int ethtool_set_settings(struct net_device *dev, void __user *useraddr)
 	return dev->ethtool_ops->set_settings(dev, &cmd);
 }
 
+#ifdef CONFIG_NLM_XLP
+static int ethtool_msec_tx_config(struct net_device *dev, void __user *useraddr)
+{
+	struct ethtool_cmd cmd;
+
+	if (!dev->ethtool_ops->set_settings)
+		return -EOPNOTSUPP;
+
+	if (copy_from_user(&cmd, useraddr, sizeof(cmd)))
+		return -EFAULT;
+
+	return dev->ethtool_ops->msec_tx_config(dev, &cmd);
+}
+
+static int ethtool_msec_tx_mem_config(struct net_device *dev, void __user *useraddr)
+{
+	struct ethtool_cmd cmd;
+
+	if (!dev->ethtool_ops->set_settings)
+		return -EOPNOTSUPP;
+
+	if (copy_from_user(&cmd, useraddr, sizeof(cmd)))
+		return -EFAULT;
+
+	return dev->ethtool_ops->msec_tx_mem_config(dev, &cmd);
+}
+static int ethtool_msec_rx_config(struct net_device *dev, void __user *useraddr)
+{
+	struct ethtool_cmd cmd;
+
+	if (!dev->ethtool_ops->set_settings)
+		return -EOPNOTSUPP;
+
+	if (copy_from_user(&cmd, useraddr, sizeof(cmd)))
+		return -EFAULT;
+
+	return dev->ethtool_ops->msec_rx_config(dev, &cmd);
+}
+static int ethtool_msec_rx_mem_config(struct net_device *dev, void __user *useraddr)
+{
+	struct ethtool_cmd cmd;
+
+	if (!dev->ethtool_ops->set_settings)
+		return -EOPNOTSUPP;
+
+	if (copy_from_user(&cmd, useraddr, sizeof(cmd)))
+		return -EFAULT;
+
+	return dev->ethtool_ops->msec_rx_mem_config(dev, &cmd);
+}
+#endif
+
 static noinline_for_stack int ethtool_get_drvinfo(struct net_device *dev,
 						  void __user *useraddr)
 {
@@ -1475,6 +1527,20 @@ int dev_ethtool(struct net *net, struct ifreq *ifr)
 	old_features = dev->features;
 
 	switch (ethcmd) {
+#ifdef CONFIG_NLM_XLP
+	case ETHTOOL_MAC_SEC_TX:
+		rc = ethtool_msec_tx_config(dev, useraddr);
+		break;
+	case ETHTOOL_MAC_SEC_TX_MEM:
+		rc = ethtool_msec_tx_mem_config(dev, useraddr);
+		break;
+	case ETHTOOL_MAC_SEC_RX:
+		rc = ethtool_msec_rx_config(dev, useraddr);
+		break;
+	case ETHTOOL_MAC_SEC_RX_MEM:
+		rc = ethtool_msec_rx_mem_config(dev, useraddr);
+		break;
+#endif
 	case ETHTOOL_GSET:
 		rc = ethtool_get_settings(dev, useraddr);
 		break;
-- 
1.8.4.93.g57e4c17

