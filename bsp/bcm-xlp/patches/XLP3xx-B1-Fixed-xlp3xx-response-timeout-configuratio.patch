From 7c1a29d97eb33ec2242a012932fe5dedc655ee40 Mon Sep 17 00:00:00 2001
From: Jayanthi A <jayanthi.annadurai@broadcom.com>
Date: Wed, 6 Feb 2013 20:25:39 -0800
Subject: [PATCH 503/565] XLP3xx-B1: Fixed xlp3xx response timeout
 configuration

Added debug messages.
Increased the delay in srio init.

Based on Broadcom SDK 2.3.

Signed-off-by: Jayanthi A <jayanthi.annadurai@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/xlp_srio.c | 35 +++++++++++++++--------------------
 drivers/net/xlp_rionet.c          |  5 ++---
 2 files changed, 17 insertions(+), 23 deletions(-)

diff --git a/arch/mips/netlogic/xlp/xlp_srio.c b/arch/mips/netlogic/xlp/xlp_srio.c
index f382e97..2fa6b68 100644
--- a/arch/mips/netlogic/xlp/xlp_srio.c
+++ b/arch/mips/netlogic/xlp/xlp_srio.c
@@ -293,6 +293,8 @@ static int bcm_xlp_rio_rxreq_handler(struct bcm_rio_port *rio, uint32_t ftype, i
 			}
 			else {
                                 len = SRIO_PAYLOAD_LENGTH(msg1);
+                                if (len > SRIO_BUF_SIZE)
+                                   printk("invalid len msg0 %llx msg1 %llx msg2 %llx\n", msg0, msg1, msg2);
 	                        rio_free_rx_bufs[cpu]--;
         	                *(uint64_t *)(rxmsgq->paddr + rxmsgq->head) = (uint64_t)phys_to_virt(paddr);
                 	        rxmsgq->head = (rxmsgq->head + 1) % rxmsgq->max_entries;
@@ -435,20 +437,16 @@ int fdt_parse_srio_params(void *fdt, int nodeid, bcm_srio_cfg *rio_cfg)
 		rio_cfg->rxvc = SRIO_DEFAULT_RXVC;
 		rio_cfg->msgdstid = SRIO_DEFAULT_MSGDSTID;
 		rio_cfg->baud_rate = SRIO_BAUD_6250M;
-		rio_cfg->host_devid[0] = -1;
-		rio_cfg->host_devid[1] = rio_cfg->host_devid[2] = rio_cfg->host_devid[3] = -1;
+		rio_cfg->host_devid[0] = 0;
+		rio_cfg->host_devid[1] = rio_cfg->host_devid[2] = rio_cfg->host_devid[3] = 0;
 		return 1;
 	}
 	// TODO	 parse from fdta
 	copy_fdt_prop(fdt, srio_fdt_path, "type", PROP_STR, prop_str, 10);
 	if (strcmp(prop_str, "master") == 0){
-		riomaster = 1;
+                riomaster = 1;
 		rio_cfg->host_devid[0] = 0x90;
 	}	
-        else {
-		riomaster = 0;
-          	rio_cfg->host_devid[0] = 0;
-	}
 	printk("RapidIo host type from fdt %s\n", prop_str);
 	
 	pval = (void *)fdt_getprop(fdt, nodeoffset, "mode", &plen);
@@ -489,7 +487,6 @@ int fdt_parse_srio_params(void *fdt, int nodeid, bcm_srio_cfg *rio_cfg)
 
 	printk("mode %d rxvc %d msgdstid %d baud-rate %d sys-size %d\n", rio_cfg->mode,
 				rio_cfg->rxvc, rio_cfg->msgdstid, rio_cfg->baud_rate, rio_cfg->sys_size);
-        rio_cfg->host_devid[1] = rio_cfg->host_devid[2] = rio_cfg->host_devid[3] = -1;
 	return 1;
 }
 
@@ -1370,10 +1367,7 @@ void bcm_reset_srio(void)
         val &= 0xC7FFFFFF;
         bcm_write_srio_devreg(cfgbase, SRICOMCONFIG, val);
 
-	if (riomaster)
-        	bcm_write_srio_reg32(membase, RIO_PORTGEN_CSR, 0xC0000000); // Master enable
-        else
-		bcm_write_srio_reg32(membase, RIO_PORTGEN_CSR, 0x0);
+        bcm_write_srio_reg32(membase, RIO_PORTGEN_CSR, 0xC0000000); // Master enable
 	udelay(256);
 
         __sync();
@@ -1555,10 +1549,11 @@ int bcm_init_rio(void)
                 bcm_write_srio_devreg(cfgbase, SRIO_DATAMSG_SIZE, 0xE);  // 0xE - 256 Bytes is maximum segment size
                 regindex = DOORBELL_DESTID;
                 if (!is_nlm_xlp3xx_b0()) {
-                        bcm_write_srio_reg32(membase, RIO_RESPTOUT_CSR, 0xFFFFFF);
-			for(i = 0 ; i<SRIO_MAX_PORTS; i++) {
-                        	bcm_write_srio_devreg(cfgbase, FLUSHADDRQ + i, 0xFFFF);
-			}
+                        bcm_write_srio_reg32(membase, RIO_RESPTOUT_CSR, (100000 | (0x20 <<24)));
+                        for(i = 0 ; i<SRIO_MAX_PORTS; i++) {
+                                bcm_write_srio_devreg(cfgbase, FLUSHADDRQ + i, (0x3FFF << 2)); //lower 2 bits = 0
+                        }
+                        printk("resp timeout %x \n",bcm_read_srio_reg32(membase, RIO_RESPTOUT_CSR));
                 }
         }
 
@@ -1593,6 +1588,7 @@ int bcm_init_rio(void)
         bcm_rio_config_dmsg_lookup(16, 0xFF000000, 0, 0, 00);
 
 	bcm_poll_sriolane_status();
+
 	return 0;
 }
 
@@ -1695,10 +1691,9 @@ int bcm_rio_module_init(void)
 		sprintf(mport->name, "RIO%d mport",i);
 
 		mport->ops = ops;	
-		if (rio_port[i]->device_id < 0)
-			udelay(256);
-
-		bcm_rio_local_config_write_32(rio_port[i], rio_port[i]->device_id, 0x60);
+                bcm_rio_local_config_write_32(rio_port[i], rio_port[i]->device_id, 0x60);
+                if (riomaster == 0)
+                        udelay(500);
 
 		if ((is_nlm_xlp3xx_ax()) && (rio_port[i]->device_id > 0)) {
 			bcm_rio_local_config_write_32(rio_port[i], rio_port[i]->device_id, 0x68);
diff --git a/drivers/net/xlp_rionet.c b/drivers/net/xlp_rionet.c
index 593f59b..7b6749f 100644
--- a/drivers/net/xlp_rionet.c
+++ b/drivers/net/xlp_rionet.c
@@ -157,9 +157,8 @@ static int rionet_rx_clean(struct net_device *ndev)
 		if (!(data = rio_get_inb_message(rnet->mport, RIONET_MAILBOX)))
 			break;
 		rcvskb = rio_get_skb_ptr((uint64_t)data);
-		if (rcvskb != rnet->rx_skb[i]) {
-			printk("Duplicate msg from SRIO...Skipping...\n");
-			//printk("data %p rnet->rx_skb[%d] %p \n", data, i , rio_get_skb_ptr(data));
+		if (data != rcvskb->data) {
+			printk("data %p rcvskb %p rcvskb->data %p\n", data, rcvskb, rcvskb->data);
 			continue;
 		}
 
-- 
1.8.4.93.g57e4c17

