From b81ae0f7a660dcfd611078ad0a00821f2fc96857 Mon Sep 17 00:00:00 2001
From: Prabhath Raman <prabhath@broadcom.com>
Date: Tue, 14 Aug 2012 15:30:53 +0530
Subject: [PATCH 393/565] xlp bsp: cleanup xlp special code

xlp bsp: code cleanup, and fix compile warnings

Based on Broadcom SDK 2.3.

Signed-off-by: Prabhath Raman <prabhath@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/cpu_control.c     | 39 --------------------------------
 arch/mips/netlogic/xlp/irq.c             | 32 ++++----------------------
 arch/mips/netlogic/xlp/pic/xlp_irq_map.c |  4 +++-
 arch/mips/netlogic/xlp/setup.c           |  3 ++-
 arch/mips/netlogic/xlp/time.c            |  4 ++--
 5 files changed, 11 insertions(+), 71 deletions(-)

diff --git a/arch/mips/netlogic/xlp/cpu_control.c b/arch/mips/netlogic/xlp/cpu_control.c
index e0ef8f6..667a58f 100644
--- a/arch/mips/netlogic/xlp/cpu_control.c
+++ b/arch/mips/netlogic/xlp/cpu_control.c
@@ -224,45 +224,6 @@ void enable_cpus(unsigned int node, unsigned int node_cpumask)
 }
 
 EXPORT_SYMBOL(enable_cpus);
-/* Return period in femto-seconds.(1e-15 s)
- */
-static u32 get_pll_period(int divf,int divr) {
-
-	u32 vco_fs;		/* vco in femto-seconds */
-	u32 pll_period_fs;	/* pll output in femto-seconds */
-	u32 pll_ref_clk_ps;
-
-	if (divr == 2) {
-		printk (KERN_ERR "Error! Illegal divr value %d!\n", divr);
-		return 0;
-	}
-	if ((divf < 11) || (divf > 91)) {
-		printk (KERN_ERR "Error! Illegal divf value %d!\n", divf);
-		return 0;
-	}
-
-	if(nlm_hal_is_ref_clk_133MHz())
-		pll_ref_clk_ps = PLL_REF_CLK_PS_133MHz;
-	else
-		pll_ref_clk_ps = PLL_REF_CLK_PS_66MHz;
-
-	vco_fs = (((pll_ref_clk_ps * 1000) * (divr+1))/(4 * (divf+1)));
-	pll_period_fs  = vco_fs * 2; /* pll output is divided by 2 */
-
-	return pll_period_fs;
-}
-
-/* Return frequency in Hz
- */
-static uint64_t get_pll_freq(int divf,int divr)
-{
-	uint64_t hz_freq = 1000000000000000ULL; /* 1e15 */
-	u32 pll_period_fs = get_pll_period(divf,divr);
-
-	do_div(hz_freq, ((uint64_t) pll_period_fs));
-
-	return hz_freq;
-}
 
 u32 get_core_dfs(int cpu_num)
 {
diff --git a/arch/mips/netlogic/xlp/irq.c b/arch/mips/netlogic/xlp/irq.c
index a402a5b..26c2b31 100644
--- a/arch/mips/netlogic/xlp/irq.c
+++ b/arch/mips/netlogic/xlp/irq.c
@@ -371,39 +371,12 @@ struct irq_chip xlp_cpu_intr = {
 	.irq_eoi	= xlp_cpu_ack,
 };
 
-/* reserved pic handler replacement by three different chips END*/
-
-static irqreturn_t nlm_common_rsvd_irq_handler(int irq, void *dev_id)
-{
-#if !defined CONFIG_XLP_REPLACE_R4K_TIMER
-	if ((irq % XLP_IRQS_PER_NODE) == XLP_IRQ_TIMER_RVEC) {
-		return IRQ_HANDLED;
-	}
-#else
-	switch (irq) {
-		case XLP_TIMER_IRQ(0, 0) ... XLP_TIMER_IRQ(0, 7):
-		case XLP_TIMER_IRQ(1, 0) ... XLP_TIMER_IRQ(1, 7):
-		case XLP_TIMER_IRQ(2, 0) ... XLP_TIMER_IRQ(2, 7):
-		case XLP_TIMER_IRQ(3, 0) ... XLP_TIMER_IRQ(3, 7):
-		return IRQ_HANDLED;
-		default:
-		break;
-	}
-#endif
-	return IRQ_NONE;
-}
-
 /* Unused function? Remove later */
 void __cpuinit nlm_smp_irq_init(void)
 {
 	write_64bit_cp0_eimr(xlp_irq_mask);
 }
 
-static int xlp_perf_irq(void)
-{
-	return IRQ_HANDLED;
-}
-
 /*
  * Entry function for interrupts
  */
@@ -413,8 +386,11 @@ asmlinkage void plat_irq_dispatch(void)
 	volatile u64 eimr;
 	u64 bitmap;
 	struct pt_regs *pt_regs = current_thread_info()->regs;
-	int rvec = 0, idx = 0, base_irq, fn;
+	int rvec = 0, idx = 0, base_irq;
 	struct pic_dev *pic;
+#ifdef CONFIG_PCI_MSI
+	int fn;
+#endif
 
 	retrieve_node_pic_dev(hard_smp_processor_id() / NLM_MAX_CPU_PER_NODE, &pic);
 	eirr = read_64bit_cp0_eirr();
diff --git a/arch/mips/netlogic/xlp/pic/xlp_irq_map.c b/arch/mips/netlogic/xlp/pic/xlp_irq_map.c
index 94efb4a..98046e6 100644
--- a/arch/mips/netlogic/xlp/pic/xlp_irq_map.c
+++ b/arch/mips/netlogic/xlp/pic/xlp_irq_map.c
@@ -373,6 +373,7 @@ static struct irq_map_elem irq_map_3xx[XLP_IRQS_PER_NODE] = {
         {XLP_IRQ_RESERVED_MAX + 32, {0,0,0,0}}, /*XLP_TCB_IDX :159 */
 };
 
+#if 0
 static struct irq_map_elem irq_map_2xx[XLP_IRQS_PER_NODE] = {
         {XLP_IRQ_RESERVED_MAX + 1, {0,0,0,0}}, /*XLP_WD_IDX(0):	0 */
         {XLP_IRQ_RESERVED_MAX + 1, {0,0,0,0}}, /*XLP_WD_IDX(1):	1 */
@@ -535,6 +536,7 @@ static struct irq_map_elem irq_map_2xx[XLP_IRQS_PER_NODE] = {
         {XLP_IRQ_RESERVED_MAX + 32, {0,0,0,0}}, /*XLP_DMC_IDX(2) :158 */
         {XLP_IRQ_RESERVED_MAX + 32, {0,0,0,0}}, /*XLP_TCB_IDX :159 */
 };
+#endif
 
 static void fill_rvec_map(struct irq_map_elem *map, int mapsize, struct rvec_map_elem *rvec_map, int rsize)
 {
@@ -673,7 +675,7 @@ static void xlp_set_eimr(void *param)
  * This function will be called on each cpu by on_each_cpu()
  * @bitmask	: bitmask to clear in EIMR
  */
-static void xlp_clear_eimr(void *param)
+static void __maybe_unused xlp_clear_eimr(void *param)
 {
 	u64 bitmask = (u64) param;
 	u64 eimr = read_64bit_cp0_eimr();
diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index 6d4eb98..d886c20 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -486,7 +486,8 @@ static void ici_read_vc_parameter(void *node, int max_vc, struct nlm_ici_vc_para
 		}
 	}
 }
-static void ici_dump_vc_info(const char *header, int max_vc, struct nlm_ici_vc_param *vc)
+static void __maybe_unused ici_dump_vc_info(const char *header, int max_vc,
+					    struct nlm_ici_vc_param *vc)
 {
 	printk("[=== %s ===]\n", header);
 
diff --git a/arch/mips/netlogic/xlp/time.c b/arch/mips/netlogic/xlp/time.c
index b7b2663..7d28efc 100644
--- a/arch/mips/netlogic/xlp/time.c
+++ b/arch/mips/netlogic/xlp/time.c
@@ -95,7 +95,7 @@ extern struct proc_dir_entry *nlm_root_proc;
 struct proc_dir_entry *main_entry;
 struct proc_dir_entry *sub_entry;
 
-static int init_pic_timer_procfs(void)
+static int __maybe_unused init_pic_timer_procfs(void)
 {
 	main_entry = proc_mkdir("nlm_timer", nlm_root_proc);
 	if (!main_entry) {
@@ -117,7 +117,7 @@ static int init_pic_timer_procfs(void)
 	return 0;
 }
 
-static void exit_pic_timer_procfs(void)
+static void __maybe_unused exit_pic_timer_procfs(void)
 {
 	remove_proc_entry("debug", main_entry);
 	remove_proc_entry("nlm_timer", nlm_root_proc);
-- 
1.8.4.93.g57e4c17

