From 634bbfa8486b227e71684ccbaeaac4a58420e5c8 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Mon, 22 Apr 2013 16:51:15 +0800
Subject: [PATCH 040/565] fix dump stack

Fix dump stack in when register_netdev in nlm_xlp_nae-Init.

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/xlp_nae/xlp_nae.c | 90 +++++++++++++++++++++++++++----------------
 1 file changed, 57 insertions(+), 33 deletions(-)

diff --git a/drivers/net/xlp_nae/xlp_nae.c b/drivers/net/xlp_nae/xlp_nae.c
index c64609c..275e530 100644
--- a/drivers/net/xlp_nae/xlp_nae.c
+++ b/drivers/net/xlp_nae/xlp_nae.c
@@ -120,6 +120,7 @@ extern int  xlp_with_mac_driver;
 extern void xlp_set_ethtool_ops(struct net_device *netdev);
 extern void xlp_get_mac_stats(struct net_device* dev, struct net_device_stats* stats);
 
+static void nlm_xlp_nae_init(void);
 static int xlp_mac_proc_read(char *page, char **start, off_t off,int count, int *eof, void *data);
 static int nlm_xlp_nae_fill_rxfr(struct net_device *dev, unsigned int intf);
 static int  nlm_xlp_nae_open (struct net_device *dev);
@@ -130,7 +131,7 @@ static int  nlm_xlp_nae_ioctl (struct net_device *dev, struct ifreq *rq, int cmd
 static int  nlm_xlp_nae_change_mtu(struct net_device *dev, int new_mtu);
 static void  nlm_xlp_nae_tx_timeout (struct net_device *dev);
 static irqreturn_t nlm_xlp_nae_int_handler(int irq, void * dev_id);
-static void nlm_xlp_msgring_handler(int bucket, int size, int code, int stid, struct msgrng_msg *msg, void* data);
+static void nlm_xlp_nae_msgring_handler(int vc, int size, int code, int stid, struct msgrng_msg *msg, void* data);
 static void nlm_xlp_mac_timer(unsigned long data);
 static void  nlm_xlp_nae_rx(struct sk_buff* skb, struct net_device *dev);
 static struct net_device_stats *nlm_xlp_mac_get_stats(struct net_device *dev);
@@ -290,7 +291,7 @@ static  int mac_refill_frin_desc(struct net_device *dev)
         	/* Send the packet to nae rx  */
 		__sync();
 retry_send:
-                if (ret = nlm_hal_send_msg1( priv->nae_rx_qid, code, msg.entry[0])){
+                if ((ret = nlm_hal_send_msg1( priv->nae_rx_qid, code, msg.entry[0]))){
                         if(ret & MSG_DST_FC_FAIL)
                                 printk("TX message destination flow control credit fail\n");
                         else if(ret & MSG_INFLIGHT_MSG_EX)
@@ -347,9 +348,9 @@ static int nlm_xlp_nae_fill_rxfr(struct net_device *dev, unsigned int intf)
 		msg.entry[0] = (unsigned long long)virt_to_bus(skb->data) & 0xffffffffffULL;
 		msg.entry[1]= msg.entry[2] = msg.entry[3] = 0;
 retry_send:
-                if (ret = nlm_hal_send_msg1( priv->nae_rx_qid,
+                if ((ret = nlm_hal_send_msg1( priv->nae_rx_qid,
                                         code,
-                                        msg.entry[0])){
+                                        msg.entry[0]))){
                         if(ret & MSG_DST_FC_FAIL)
                                 printk("TX message destination flow control credit fail\n");
                         else if(ret & MSG_INFLIGHT_MSG_EX)
@@ -373,10 +374,12 @@ retry_send:
         return ret;
 }
 
-static int __devinit mac_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
+static int __devinit nlm_xlp_nae_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 {
         int result = 0;
-
+printk("[%s] \n", __FUNCTION__);
+//	nlm_xlp_nae_init();
+#if 0
         /*static atmoic_t int  num_macs = ATOMIC_INIT(0);*/
         static int  num_macs = 1; 
         int instance = atomic_inc_return(&num_macs) - 1;
@@ -385,6 +388,7 @@ static int __devinit mac_pci_probe(struct pci_dev *pdev, const struct pci_device
                 printk("Found an Invalid mac pci device instance_%d!\n", instance);
                 return -1 ;
         }
+#endif
         result = pci_enable_device(pdev);
 	return result;
 
@@ -421,13 +425,15 @@ static void nlm_xlp_nae_init(void)
 	}
 
 	//init fmn
-	fmn_init(g_credit);
+	//fmn_init(g_credit);
 
 	msgrng_access_enable(mflags);
 
 	//init tx if credit	
 	init_tx_if_credit( 0, 0x7FFFF );
 
+	msgrng_access_disable(mflags);
+
 	for (i = 0; i < MAX_NET_INF; i++ )
 	{
 		init_ucore(0xffffUL, i);
@@ -438,12 +444,13 @@ static void nlm_xlp_nae_init(void)
 	// init egress and igress interface
 	init_ingress();
 	init_egress();
-
+ 
 	for(i = 0; i< MAX_GMAC_PORT; i++)
 	{
-		dev = alloc_etherdev(sizeof(*tp));
+		dev = alloc_etherdev(sizeof(struct dev_data));
+//		dev = alloc_etherdev_mq(sizeof(struct dev_data), 32);
 		if(!dev)
-			return ;
+			return;
 
 		ether_setup(dev);
 
@@ -469,7 +476,7 @@ static void nlm_xlp_nae_init(void)
 		dev_mac[i] = dev;
 
 	}
-
+ 
 	entry = create_proc_read_entry("nlm_mac_stats", 0 /* def mode */ ,
 				       nlm_root_proc /* parent */ ,
 				       xlp_mac_proc_read /* proc read function */ ,
@@ -480,10 +487,6 @@ static void nlm_xlp_nae_init(void)
 		       __FUNCTION__);
 	}
 	
-	if(register_msgring_handler( 0 /*TX_STN_GMAC08*/, nlm_xlp_msgring_handler, NULL))
-	{
-		panic("can't register msgring handler for TX_STN_GMAC0");
-	}
 
 }
 
@@ -498,13 +501,14 @@ static int  nlm_xlp_nae_open (struct net_device *dev)
 	struct dev_data *priv = netdev_priv(dev);
 	int port = priv->port;
 	int ret  = 0, i;
-	int irq  = irt_irq_table[PIC_IRT_NA_INDEX(port)][0];
+//	int irq;
 
 	if(priv->inited)
 		return ret;
 
 	nlm_xlp_nae_fill_rxfr(dev,  port );
-
+/*
+	irq  = irt_irq_table[PIC_IRT_NA_INDEX(port)][0];
 	if(request_irq( irq, nlm_xlp_nae_int_handler, IRQF_SHARED,dev->name, dev)){
 		ret = -EBUSY;
 		printk("can't get mac interrupt line (%d)\n",dev->irq);
@@ -516,6 +520,11 @@ static int  nlm_xlp_nae_open (struct net_device *dev)
 	printk("PIC_INT_PENDING1: %x\n", nlm_hal_read_pic_reg((pic_reg_t*)XLP_IO_PIC_OFFSET, PIC_INT_PENDING1 ));	
 	printk("PIC_INT_PENDING2: %x\n", nlm_hal_read_pic_reg((pic_reg_t*)XLP_IO_PIC_OFFSET, PIC_INT_PENDING2 ));	
 	printk("PIC_IPI_CTL: %x\n", nlm_hal_read_pic_reg((pic_reg_t*)XLP_IO_PIC_OFFSET,PIC_IPI_CTL ));	
+*/
+	if(register_msgring_handler( XLP_MSG_HANDLE_NAE_0 + port, nlm_xlp_nae_msgring_handler, dev))
+	{
+		panic("can't register msgring handler for TX_STN_GMAC0");
+	}
 	/* set timer to test rx routine */
 	init_timer(&priv->link_timer);
 	priv->link_timer.expires = jiffies + HZ/100 ;
@@ -615,10 +624,10 @@ static int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 	__sync(); 
 	msgrng_access_enable(mflags);
 retry_send:
-        if (ret = nlm_hal_send_msg2( priv->nae_tx_qid,
+        if ((ret = nlm_hal_send_msg2( priv->nae_tx_qid,
                            0,
                            msg.entry[0],
-                           msg.entry[1]))
+                           msg.entry[1])))
         {
                 if(ret & MSG_DST_FC_FAIL)
                         printk("TX message destination flow control credit fail\n");
@@ -795,12 +804,12 @@ static void  nlm_xlp_nae_rx(struct sk_buff* skb, struct net_device *dev)
 		}
 	}
 	// process packet message at cpu vc 0
-	if (rx_status = nlm_hal_recv_msg2(cpu_qid,
+	if ((rx_status = nlm_hal_recv_msg2(cpu_qid,
                                 &src_id,
                                	&size,
                                	&code,
                                	&rx_msg.entry[0],
-                               	&rx_msg.entry[1])) 
+                               	&rx_msg.entry[1]))) 
 	{
                if(rx_status & 0x01)
                 {
@@ -907,14 +916,17 @@ fill_desc:
  **********************************************************************/
 static irqreturn_t nlm_xlp_nae_int_handler(int irq, void * dev_id)
 {
+        struct net_device *dev;
+        struct dev_data *priv;
+	int i;
+
 	if(!dev_id)
 	{
 		printk("[%s]: NULL dev_id \n", __FUNCTION__ );
 		return IRQ_HANDLED;
 	}
-	struct net_device * dev = (struct net_device*)dev_id;
-    	struct dev_data *priv = netdev_priv(dev);
-	int i;
+	dev = (struct net_device*)dev_id;
+    	priv = netdev_priv(dev);
 	
 	i = find_irt_from_irq(irq);
 
@@ -924,14 +936,24 @@ static irqreturn_t nlm_xlp_nae_int_handler(int irq, void * dev_id)
 }
 
 /**********************************************************************
- * nlm_xlp_msgring_handler -  message ring interrupt handler
+ * nlm_xlp_nae_msgring_handler -  message ring interrupt handler
  * @irq     -  irq number
  * @dev_id  -  this device 
  * 
  **********************************************************************/
-static void nlm_xlp_msgring_handler(int vc, int size, int code, int stid, struct msgrng_msg *msg, void* data)
+static void nlm_xlp_nae_msgring_handler(int vc, int size, int code, int stid, struct msgrng_msg *msg, void* data)
 {
-	printk("%s : stid:%d \n", __FUNCTION__,stid );
+        struct net_device *dev;
+        struct dev_data *priv;
+printk("%s : stid:%d data: %llx\n", __FUNCTION__,stid, (uint64_t)data );
+
+        dev = (struct net_device*)data;
+	if(!data)
+		return;
+
+        priv = netdev_priv(dev);
+
+        nlm_xlp_nae_rx(priv->skb, dev);
 }
 
 /**********************************************************************
@@ -1087,7 +1109,7 @@ static void  nlm_xlp_napi_poll(struct napi_struct *napi, int* budget)
 	if(!len || addr == 0) 
 	{
 		if( priv->num_desc < MIN_FRIN_DESC_THRESHD)
-			tasklet_schedule(&mac_refill_task);
+			tasklet_schedule(&mac_refill_task[0]);
 		return;
 	}
 	vaddr = (uint64_t)bus_to_virt(addr);
@@ -1138,7 +1160,7 @@ static void  nlm_xlp_napi_poll(struct napi_struct *napi, int* budget)
 	}
 	if( -- priv->num_desc < MIN_FRIN_DESC_THRESHD)
 	{
-		tasklet_schedule(&mac_refill_task);
+		tasklet_schedule(&mac_refill_task[0]);
 	}
 
 	return;
@@ -1146,10 +1168,10 @@ static void  nlm_xlp_napi_poll(struct napi_struct *napi, int* budget)
 
 
 /**********************************************************************
- * nlm_xlp_remove - driver remove routine
+ * nlm_xlp_nae_remove - driver remove routine
  * @pdev - pci device.
  **********************************************************************/
-static void nlm_xlp_remove(struct pci_dev *pdev)
+static void nlm_xlp_nae_remove()
 {
 	int i;
 	struct net_device *dev;
@@ -1171,13 +1193,14 @@ static void nlm_xlp_remove(struct pci_dev *pdev)
 static struct pci_driver soc_driver = {
 	.name             = XLP_SOC_MAC_DRIVER,
 	.id_table         = soc_pci_table,
-	.probe            = mac_pci_probe,
-	.remove		  = nlm_xlp_remove,
+	.probe            = nlm_xlp_nae_pci_probe,
+	.remove		  = nlm_xlp_nae_remove,
 };
 
 static int __init nlm_xlp_mac_init(void)
 {
 
+printk("[%s] \n", __FUNCTION__);
 	nlm_xlp_nae_init();
 
     	return pci_register_driver(&soc_driver);
@@ -1185,6 +1208,7 @@ static int __init nlm_xlp_mac_init(void)
 
 static void __exit nlm_xlp_mac_exit(void)
 {
+	nlm_xlp_nae_remove();
 	pci_unregister_driver(&soc_driver);
 }
 
-- 
1.8.4.93.g57e4c17

