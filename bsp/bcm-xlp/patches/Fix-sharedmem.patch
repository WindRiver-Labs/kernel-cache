From 1f345cd06f434ecc7aeb0946bf0be11799c4ffa7 Mon Sep 17 00:00:00 2001
From: Rahul Jain <rajain@netlogicmicro.com>
Date: Fri, 6 Jan 2012 13:13:10 +0530
Subject: [PATCH 337/565] Fix sharedmem

Fixes for sharedmem to avoid foreign access multiple times

Based on Broadcom SDK 2.3.

Signed-off-by: Rahul Jain <rajain@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/char/nlm_sharedmem.c | 37 +++++++++++++++++++++----------------
 1 file changed, 21 insertions(+), 16 deletions(-)

diff --git a/drivers/char/nlm_sharedmem.c b/drivers/char/nlm_sharedmem.c
index 4674acc..bc82f16 100644
--- a/drivers/char/nlm_sharedmem.c
+++ b/drivers/char/nlm_sharedmem.c
@@ -52,12 +52,13 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #define MAX_MINOR_NUMBERS          (256)
 
 static unsigned long shared_memory_mfn[MAX_MINOR_NUMBERS] = {0};
+static char gnttab_update_done[MAX_MINOR_NUMBERS][MAX_MINOR_NUMBERS] = {{0}}; //[domain_id][minor]
 static int num_order[MAX_MINOR_NUMBERS] = {0};
 static int domain_id = 1;
 static int sharedmem_major_num = 0;
 
 extern int gnttab_grant_foreign_access(domid_t domid, unsigned long frame, int readonly);
-extern int gnttab_update_service (uint32_t service_for_dom_id, uint32_t start_ref_id, 
+extern int gnttab_update_service (uint32_t service_for_dom_id, uint32_t start_ref_id,
 								  uint32_t nr_pages, uint32_t pfn, uint32_t service_id);
 extern int xen_get_maximum_reservation (uint32_t dom_id);
 extern int xen_get_current_reservation (uint32_t dom_id);
@@ -89,7 +90,7 @@ static int sharedmem_ioctl(struct inode *inode, struct file *file,
 }
 
 static long sharedmem_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg) {
-       
+
 	/* Will be called during 32 bit user space applications */
 	int ret = 0;
 	switch ( cmd ) {
@@ -110,15 +111,15 @@ static int sharedmem_mmap(struct file * filep, struct vm_area_struct * vma)
 {
 	int ref = 0, i, order;
 	int minor = iminor (filep->f_dentry->d_inode);
-       
+
 	order = get_order (vma->vm_end - vma->vm_start);
-       
+
 	if (num_order [minor] && order > num_order [minor]) {
-		printk ("Order %d > already allocated memory of order %d\n", 
+		printk ("Order %d > already allocated memory of order %d\n",
 				order, num_order[minor]);
 		return -EAGAIN;
 	}
-              
+
 	if (!shared_memory_mfn[minor]) {
 		int req_pages, ret;
 		unsigned long mfn;
@@ -159,14 +160,18 @@ out:
 		printk ("%s mapping failed \n", __func__);
 		return -EAGAIN;
 	}
-	for (i = 0; i < (1 << num_order [minor]); i++) {
-		ref = gnttab_grant_foreign_access (domain_id, shared_memory_mfn [minor] + i, 0);
-		if (ref < 0)
-			printk ("%s Grant foreign access failed ref = %d for page index %d\n", __func__, ref, i);
-		if (!i)
-			gnttab_update_service (domain_id, ref, 1 << num_order [minor], 
-								   shared_memory_mfn [minor], NLM_SHAREDMEM_ID + minor);
-	}
+	if (!gnttab_update_done[domain_id][minor])
+		for (i = 0; i < (1 << num_order [minor]); i++) {
+			ref = gnttab_grant_foreign_access (domain_id, shared_memory_mfn [minor] + i, 0);
+			if (ref < 0)
+				printk ("%s Grant foreign access failed ref = %d for page index %d\n", __func__, ref, i);
+			if (!i)
+			{
+				gnttab_update_service (domain_id, ref, 1 << num_order [minor],
+						shared_memory_mfn [minor], NLM_SHAREDMEM_ID + minor);
+				gnttab_update_done[domain_id][minor] = 1;
+			}
+		}
 	return 0;
 }
 
@@ -187,12 +192,12 @@ static int sharedmem_init (void)
 
 	ret = register_chrdev (0, SHAREDMEM_NAME, &sharedmem_fops);
 	if (ret < 0) {
-		printk("[%s] Failed to register packet memory char device major=%d\n", 
+		printk("[%s] Failed to register packet memory char device major=%d\n",
 			   __FUNCTION__, 0);
 		return -EIO;
 	}
 	sharedmem_major_num = ret;
-	printk("[%s] Registered nlm_sharedmem char device major=%d\n", 
+	printk("[%s] Registered nlm_sharedmem char device major=%d\n",
 		   __FUNCTION__, sharedmem_major_num);
 	
 
-- 
1.8.4.93.g57e4c17

