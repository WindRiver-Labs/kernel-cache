From e5b9ac99f0c481bca94f0dbe2607232374dae5b1 Mon Sep 17 00:00:00 2001
From: Mehul <vmehul@netlogicmicro.com>
Date: Wed, 15 Sep 2010 19:03:05 +0530
Subject: [PATCH 175/565] enable cop2 access

Add support to enable cop2 access in kernel/user space.

Based on Broadcom SDK 2.3.

Signed-off-by: Mehul <vmehul@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/stackframe.h | 97 +++++++++++++++-----------------------
 arch/mips/kernel/asm-offsets.c     | 18 +++----
 arch/mips/netlogic/Kconfig         | 10 ++--
 3 files changed, 52 insertions(+), 73 deletions(-)

diff --git a/arch/mips/include/asm/stackframe.h b/arch/mips/include/asm/stackframe.h
index 823d4f3..22a7ee9 100644
--- a/arch/mips/include/asm/stackframe.h
+++ b/arch/mips/include/asm/stackframe.h
@@ -217,49 +217,35 @@
 		LONG_S	v1, PT_EPC(sp)
 		ori	$28, sp, _THREAD_MASK
 		xori	$28, _THREAD_MASK
-#ifdef CONFIG_NLM_USER_COP2_ACCESS
+#ifdef CONFIG_NLM_ENABLE_COP2
 		.set push
-		.set arch=xlp 
+		.set	noat
 		.set noreorder
-		/*status backup..*/
-		mfc0	k0, CP0_STATUS
-		/*enable cop2 access..*/
-		li	v1, 0x40000000
-		or	v1, v1, k0
-		mtc0	v1, CP0_STATUS
 		/*msgring tx buf reg*/
 		dmfc2 v1, $0, 0
-		sd  v1, NLM_COP2_TX_BUF_0(sp)
+		LONG_S  v1, NLM_COP2_TX_BUF_0(sp)
 		dmfc2 v1, $0, 1
-		sd  v1, NLM_COP2_TX_BUF_1(sp)
+		LONG_S  v1, NLM_COP2_TX_BUF_1(sp)
 		dmfc2 v1, $0, 2
-		sd  v1, NLM_COP2_TX_BUF_2(sp)
+		LONG_S v1, NLM_COP2_TX_BUF_2(sp)
 		dmfc2 v1, $0, 3
-		sd  v1, NLM_COP2_TX_BUF_3(sp)
+		LONG_S v1, NLM_COP2_TX_BUF_3(sp)
 	
 		/*msgring rx buf reg*/
 		dmfc2 v1, $1, 0
-		sd  v1, NLM_COP2_RX_BUF_0(sp)
+		LONG_S  v1, NLM_COP2_RX_BUF_0(sp)
 		dmfc2 v1, $1, 1
-		sd  v1, NLM_COP2_RX_BUF_1(sp)
+		LONG_S  v1, NLM_COP2_RX_BUF_1(sp)
 		dmfc2 v1, $1, 2
-		sd  v1, NLM_COP2_RX_BUF_2(sp)
+		LONG_S  v1, NLM_COP2_RX_BUF_2(sp)
 		dmfc2 v1, $1, 3
-		sd  v1, NLM_COP2_RX_BUF_3(sp)
+		LONG_S  v1, NLM_COP2_RX_BUF_3(sp)
+
 		mfc2 v1, $2, 0
 		sw  v1, NLM_COP2_TX_MSG_STATUS(sp)
 	
 		mfc2 v1, $3, 0
 		sw v1, NLM_COP2_RX_MSG_STATUS(sp)
-
-		mfc2 v1, $4, 0
-		sw v1, NLM_COP2_MISC_STATUS(sp)
-		
-		mfc2 v1, $5, 0
-		sw v1, NLM_COP2_MSG_CONFIG(sp)
-
-		/*write back status..*/	
-		mtc0	k0, CP0_STATUS
 		.set pop
 #endif
 
@@ -406,62 +392,53 @@
 		DVPE	5				# dvpe a1
 		jal	mips_ihb
 #endif /* CONFIG_MIPS_MT_SMTC */
-#ifdef CONFIG_NLM_USER_COP2_ACCESS
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+		/* Restore the Octeon multiplier state */
+		jal	octeon_mult_restore
+#endif
+		mfc0	a0, CP0_STATUS
+		ori	a0, STATMASK
+		xori	a0, STATMASK
+		mtc0	a0, CP0_STATUS
+#ifdef CONFIG_NLM_ENABLE_COP2
 		.set push
-		.set arch=xlp 
+		.set	noat
 		.set noreorder
-		/*status backup..*/
-		mfc0	k0, CP0_STATUS
-		/*enable cop2 access..*/
-		li	v1, 0x40000000
-		or	v1, v1, k0
-		mtc0	v1, CP0_STATUS
-
 		/*msgring tx buf reg*/
-		ld  v1, NLM_COP2_TX_BUF_0(sp)
+		LONG_L  v1, NLM_COP2_TX_BUF_0(sp)
 		dmtc2 v1, $0, 0
-		ld  v1, NLM_COP2_TX_BUF_1(sp)
+		LONG_L  v1, NLM_COP2_TX_BUF_1(sp)
 		dmtc2 v1, $0, 1
-		ld  v1, NLM_COP2_TX_BUF_2(sp)
+		LONG_L  v1, NLM_COP2_TX_BUF_2(sp)
 		dmtc2 v1, $0, 2
-		ld  v1, NLM_COP2_TX_BUF_3(sp)
+		LONG_L  v1, NLM_COP2_TX_BUF_3(sp)
 		dmtc2 v1, $0, 3
 
 		/*msgring rx buf reg*/
-		ld  v1, NLM_COP2_RX_BUF_0(sp)
+		LONG_L  v1, NLM_COP2_RX_BUF_0(sp)
 		dmtc2 v1, $1, 0
-		ld  v1, NLM_COP2_RX_BUF_1(sp)
+		LONG_L  v1, NLM_COP2_RX_BUF_1(sp)
 		dmtc2 v1, $1, 1
-
-		ld  v1, NLM_COP2_RX_BUF_2(sp)
+		LONG_L  v1, NLM_COP2_RX_BUF_2(sp)
 		dmtc2 v1, $1, 2
-		ld  v1, NLM_COP2_RX_BUF_3(sp)
+		LONG_L  v1, NLM_COP2_RX_BUF_3(sp)
 		dmtc2 v1, $1, 3
 
 		lw  v1, NLM_COP2_TX_MSG_STATUS(sp)
 		mtc2 v1, $2, 0
 	
+		/*leave bits 28-31 up to date*/
+		li k0, 0xf0000000
 		lw v1, NLM_COP2_RX_MSG_STATUS(sp)
+		or v1, k0, v1
+		xor v1, k0, v1
+		mfc2 k0, $3, 0
+		srl k0, k0, 28
+		sll k0, k0, 28
+		or v1, k0, v1
 		mtc2 v1, $3, 0
-
-		lw v1, NLM_COP2_MISC_STATUS(sp)
-		mtc2 v1, $4, 0
-		
-		lw v1, NLM_COP2_MSG_CONFIG(sp)
-		mtc2 v1, $5, 0
-
-		/*writeback original status..*/
-		mtc0	k0, CP0_STATUS
 		.set pop
 #endif
-#ifdef CONFIG_CPU_CAVIUM_OCTEON
-		/* Restore the Octeon multiplier state */
-		jal	octeon_mult_restore
-#endif
-		mfc0	a0, CP0_STATUS
-		ori	a0, STATMASK
-		xori	a0, STATMASK
-		mtc0	a0, CP0_STATUS
 		li	v1, 0x4000ff00
 		and	a0, v1
 		LONG_L	v0, PT_STATUS(sp)
diff --git a/arch/mips/kernel/asm-offsets.c b/arch/mips/kernel/asm-offsets.c
index 8a553b9..05ed318 100644
--- a/arch/mips/kernel/asm-offsets.c
+++ b/arch/mips/kernel/asm-offsets.c
@@ -72,15 +72,15 @@ void output_ptreg_defines(void)
 	OFFSET(PT_MPL, pt_regs, mpl);
 	OFFSET(PT_MTP, pt_regs, mtp);
 #endif /* CONFIG_CPU_CAVIUM_OCTEON */
-#ifdef CONFIG_NLM_USER_COP2_ACCESS
-	OFFSET(NLM_COP2_TX_BUF_0, pt_regs, tx_buf_0);
-	OFFSET(NLM_COP2_TX_BUF_1, pt_regs, tx_buf_1);
-	OFFSET(NLM_COP2_TX_BUF_2, pt_regs, tx_buf_2);
-	OFFSET(NLM_COP2_TX_BUF_3, pt_regs, tx_buf_3);
-	OFFSET(NLM_COP2_RX_BUF_0, pt_regs, rx_buf_0);
-	OFFSET(NLM_COP2_RX_BUF_1, pt_regs, rx_buf_1);
-	OFFSET(NLM_COP2_RX_BUF_2, pt_regs, rx_buf_2);
-	OFFSET(NLM_COP2_RX_BUF_3, pt_regs, rx_buf_3);
+#ifdef CONFIG_NLM_ENABLE_COP2
+	OFFSET(NLM_COP2_TX_BUF_0, pt_regs, tx_buf[0]);
+	OFFSET(NLM_COP2_TX_BUF_1, pt_regs, tx_buf[1]);
+	OFFSET(NLM_COP2_TX_BUF_2, pt_regs, tx_buf[2]);
+	OFFSET(NLM_COP2_TX_BUF_3, pt_regs, tx_buf[3]);
+	OFFSET(NLM_COP2_RX_BUF_0, pt_regs, rx_buf[0]);
+	OFFSET(NLM_COP2_RX_BUF_1, pt_regs, rx_buf[1]);
+	OFFSET(NLM_COP2_RX_BUF_2, pt_regs, rx_buf[2]);
+	OFFSET(NLM_COP2_RX_BUF_3, pt_regs, rx_buf[3]);
 	OFFSET(NLM_COP2_TX_MSG_STATUS, pt_regs, tx_msg_status);
 	OFFSET(NLM_COP2_RX_MSG_STATUS, pt_regs, rx_msg_status);
 	OFFSET(NLM_COP2_MISC_STATUS, pt_regs, misc_status);
diff --git a/arch/mips/netlogic/Kconfig b/arch/mips/netlogic/Kconfig
index 3559f4b..544811f 100644
--- a/arch/mips/netlogic/Kconfig
+++ b/arch/mips/netlogic/Kconfig
@@ -204,7 +204,9 @@ config XEN
        depends on NLM_XLP
        default n
 
-config NLM_USER_COP2_ACCESS
-       bool "Enable User space Cop2 Access"
-       depends on NLM_XLP && 64BIT
-       default n
+config NLM_ENABLE_COP2
+	bool "Enable Cop2 Access "
+	depends on NLM_XLP && 64BIT
+	default n
+	help
+	  This option enables cop2 access for both user and kernel space.
-- 
1.8.4.93.g57e4c17

