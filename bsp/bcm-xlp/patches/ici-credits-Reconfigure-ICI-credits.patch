From 808535280dd75e35ac4a465049d5b9751bbfe405 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Mon, 22 Apr 2013 17:29:51 +0800
Subject: [PATCH 372/565] ici-credits: Reconfigure ICI credits.

Read the ICI paremeters (threshold, own credits, shared credits, scheduling
priority) from the dts and reconfigure it in early boot.

Based on Broadcom SDK 2.3.

Signed-off-by: V Mehul <mehulv@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/netlogic/xlp_ici.h | 184 +++++++++++++++++++++++++
 arch/mips/netlogic/xlp/setup.c           | 223 +++++++++++++++++++++++++++++++
 2 files changed, 407 insertions(+)
 create mode 100644 arch/mips/include/asm/netlogic/xlp_ici.h

diff --git a/arch/mips/include/asm/netlogic/xlp_ici.h b/arch/mips/include/asm/netlogic/xlp_ici.h
new file mode 100644
index 0000000..c7a4267
--- /dev/null
+++ b/arch/mips/include/asm/netlogic/xlp_ici.h
@@ -0,0 +1,184 @@
+/*
+ * Copyright 2003-2010 Netlogic Microsystems (“Netlogic”). All rights
+ * reserved. Redistribution and use in source and binary forms, with 
+ * or without modification, are permitted provided that the following 
+ * conditions are met:
+ *
+ *	1. 	Redistributions of source code must retain the above copyright
+ *		notice, this list of conditions and the following disclaimer.
+ *
+ *	2. 	Redistributions in binary form must reproduce the above copyright
+ *		notice, this list of conditions and the following disclaimer in
+ *		the documentation and/or other materials provided with the
+ *		distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Netlogic Microsystems ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NETLOGIC OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ * --------------------------------#NETL_2#--------------------------------
+ */
+#ifndef __XLP_ICI_H__
+#define __XLP_ICI_H__
+
+#ifndef __ASSEMBLY__
+
+#define ICI_NUM_LINKS 3
+#define ICI_RX_LANE_SYNC(x) ((x&0xff)==0xff)
+#define ICI_RX_LANE_ALIGN(x) ((x&(1<<18))!=0)
+#define ICI_SLAVE_LINKUP(x) ((x&(1<<9))!=0)
+#define ICI_CREDLD_SNDPRB  (1<<1)
+#define ICI_CREDLD_PRBACK  (1<<2)
+#define ICI_CREDLD_SNDNODE (1<<7)
+#define ICI_CREDLD_NODERCV (1<<9)
+#define ICI_CREDLD_PEERID(x) (x<<4)
+#define ICI_LINKUP         (1<<6)
+#define ICI_SFEN           (1<<10)
+#define ICI_CDRRSTEN       (1<<11) 
+#define ICI_CDRLARXRSTEN   (1<<12)
+
+#define ICI_MAX_VC_NUM		16
+#define ICI_GCU_VC_START	0
+#define ICI_GCU_VC_END		7
+#define ICI_FMN_VC_START	10
+#define ICI_FMN_VC_END		13
+#define ICI_PIC_VC_START	14
+#define ICI_PIC_VC_END		14
+#define ICI_MAX_GCU_VC		8
+#define ICI_MAX_FMN_VC		4
+#define ICI_MAX_PIC_VC		1
+
+enum processor_ici
+{
+	ICI_CTL = 0,
+	ICI_RTRY_TIMER = 1,
+	ICI_ICIINT = 2,
+	ICI_ICIINTMASK = 3,
+	ICI_CRED_RT_TH0 = 4,
+	ICI_CRED_RT_TH1 = 5,
+	ICI_CRED_RT_TH2 = 6,
+	ICI_CRED_RT_TH3 = 7,
+	ICI_TXWGHT0 = 8,
+	ICI_TXWGHT1 = 9,
+	ICI_TXWGHT2 = 10,
+	ICI_TXWGHT3 = 11,
+	ICI_TXWGHT4 = 12,
+	ICI_TXWGHT5 = 13,
+	ICI_TXWGHT6 = 14,
+	ICI_TXWGHT7 = 15,
+	ICI_TXWGHT8 = 16,
+	ICI_TXWGHT9 = 17,
+	ICI_TXWGHT10 = 18,
+	ICI_TXWGHT11 = 19,
+	ICI_TXWGHT12 = 20,
+	ICI_TXWGHT13 = 21,
+	ICI_TXWGHT14 = 22,
+	ICI_TXSEGTH0 = 23,
+	ICI_TXSEGTH1 = 24,
+	ICI_TXSEGTH2 = 25,
+	ICI_TXSEGTH3 = 26,
+	ICI_TXSEGTH4 = 27,
+	ICI_TXSEGTH5 = 28,
+	ICI_TXSEGTH6 = 29,
+	ICI_TXSEGTH7 = 30,
+	ICI_TXSEGTH8 = 31,
+	ICI_TXSEGTH9 = 32,
+	ICI_TXSEGTH10 = 33,
+	ICI_TXSEGTH11 = 34,
+	ICI_TXSEGTH12 = 35,
+	ICI_TXSEGTH13 = 36,
+	ICI_TXSEGTH14 = 37,
+	ICI_CREDSHARE0 = 38,
+	ICI_CREDSHARE1 = 39,
+	ICI_CREDSHARE2 = 40,
+	ICI_CREDSHARE3 = 41,
+	ICI_CREDSHARE4 = 42,
+	ICI_CREDSHARE5 = 43,
+	ICI_CREDSHARE6 = 44,
+	ICI_CREDSHARE7 = 45,
+	ICI_CREDSHARE8 = 46,
+	ICI_CREDSHARE9 = 47,
+	ICI_CREDSHARE10 = 48,
+	ICI_CREDSHARE11 = 49,
+	ICI_CREDSHARE12 = 50,
+	ICI_CREDSHARE13 = 51,
+	ICI_CREDSHARE14 = 52,
+	ICI_CREDOWN0 = 53,
+	ICI_CREDOWN1 = 54,
+	ICI_CREDOWN2 = 55,
+	ICI_CREDOWN3 = 56,
+	ICI_CREDOWN4 = 57,
+	ICI_CREDOWN5 = 58,
+	ICI_CREDOWN6 = 59,
+	ICI_CREDOWN7 = 60,
+	ICI_CREDOWN8 = 61,
+	ICI_CREDOWN9 = 62,
+	ICI_CREDOWN10 = 63,
+	ICI_CREDOWN11 = 64,
+	ICI_CREDOWN12 = 65,
+	ICI_CREDOWN13 = 66,
+	ICI_CREDOWN14 = 67,
+	ICI_CREDTOT = 68,
+	ICI_CREDLD = 69,
+	ICI_SPEPKTCNT = 70,
+	ICI_CRED_TOTRd = 71,
+	ICI_CREDPERVC0 = 72,
+	ICI_CREDPERVC1 = 73,
+	ICI_CREDPERVC2 = 74,
+	ICI_CREDPERVC3 = 75,
+	ICI_CREDPERVC4 = 76,
+	ICI_CREDPERVC5 = 77,
+	ICI_CREDPERVC6 = 78,
+	ICI_CREDPERVC7 = 79,
+	ICI_CREDPERVC8 = 80,
+	ICI_CREDPERVC9 = 81,
+	ICI_CREDPERVC10 = 82,
+	ICI_CREDPERVC11 = 83,
+	ICI_CREDPERVC12 = 84,
+	ICI_CREDPERVC13 = 85,
+	ICI_CREDPERVC14 = 86,
+	ICI_TXFREELIST = 87,
+	ICI_RXFREELIST0 = 88,
+	ICI_RXFREELIST1 = 89,
+	ICI_RXFREELIST2 = 90,
+	ICI_RXFREELIST3 = 91,
+	ICI_ECC_LOG = 92,
+	ICI_ECC_TRIG = 93,
+	ICI_CNT_CTL = 94,
+	ICI_PKT_CNT_CTL = 95,
+	ICI_PKT_TX_CNT = 96,
+	ICI_PKT_RX_CNT = 97,
+	ICI_TEST_CTL = 98,
+	ICI_TX_TEST_HEAD = 99,
+	ICI_TX_TEST_DATA0_L = 100,
+	ICI_TX_TEST_DATA0_H = 101,
+	ICI_RX_TEST_HEAD = 102,
+	ICI_RX_TEST_DATA0_L = 103,
+	ICI_RX_TEST_DATA0_H = 104,
+	ICI_LA_INT_REG = 105,
+	ICI_LA_INTMASK = 106,
+	ICI_LA_RX_DIAG = 107,
+	ICI_LA_RX_SYNC = 108,
+	ICI_LA_ERROR_REG1 = 109,
+	ICI_LA_ERROR_REG2 = 110,
+	ICI_LA_TX_ENABLE = 111,
+	ICI_LA_BAD_LANE = 112,
+	ICI_LA_TX_STAT = 113,
+	ICI_LA_TX_RLIM = 114,
+	ICI_LA_SETUP = 115,
+	ICI_LA_LEN = 116,
+	ICI_SER_CTL = 117,
+	ICI_SER_REG0 = 118,
+	ICI_SER_REG_ALL = 119,
+	ICI_IO_CONFIG_SWAP_DIS = 120
+};
+#endif
+
+#endif /* __XLP_ICI_H__ */
diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index cae7e05..ec86ddd 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -60,6 +60,7 @@
 #include <asm/mach-netlogic/mmu.h>
 #include <asm/netlogic/bootinfo.h>
 #include <asm/netlogic/cpumask.h>
+#include <asm/netlogic/xlp_ici.h>
 #include <asm/netlogic/hal/nlm_hal_macros.h>
 #include <asm/netlogic/xlp_irq.h>
 #include <asm/netlogic/phnx_loader.h>
@@ -152,6 +153,24 @@ struct xlp_stack_pages xlp_stack_pages_temp
 __attribute__((__section__(".data.init_task"),
 	       __aligned__(THREAD_SIZE)));
 
+struct nlm_ici_vc_param
+{
+	int own_credit;
+	int shared_credit;
+	int txwght;
+	int segth;
+};
+
+struct nlm_ici_config
+{
+	int enable_config;
+	int total_credits;
+	int node_link_mask[MAX_NUMNODES];
+	struct nlm_ici_vc_param gcu_vc[ICI_MAX_GCU_VC];
+	struct nlm_ici_vc_param fmn_vc[ICI_MAX_FMN_VC];
+	struct nlm_ici_vc_param pic_vc[ICI_MAX_PIC_VC];
+}nlm_ici_config;
+
 struct boot_mem_map boot_physaddr_info;
 struct xlp_dram_mapping {          
                 unsigned long low_pfn; 
@@ -422,6 +441,144 @@ EXPORT_SYMBOL(sae_rx_sync_vc);
 EXPORT_SYMBOL(ipsec_async_vc);
 EXPORT_SYMBOL(ipsec_sync_vc);
 
+static void ici_read_vc_parameter(void *node, int max_vc, struct nlm_ici_vc_param *vc_index)
+{
+	uint32_t tmp_data[32];
+	int i = 0;
+
+	if(getprop(node, "own_credit", &tmp_data, sizeof(int)*max_vc) < 0) {
+		for(i=0; i<max_vc; i++){
+			(vc_index+i)->own_credit = 64;
+		}
+	}else{
+		for(i=0; i<max_vc; i++){
+			(vc_index+i)->own_credit = tmp_data[i];
+		}
+	}
+
+	if(getprop(node, "shared_credit", &tmp_data, sizeof(int)*max_vc) < 0) {
+		for(i=0; i<max_vc; i++){
+			(vc_index+i)->shared_credit = 1;
+		}
+	}else{
+		for(i=0; i<max_vc; i++){
+			(vc_index+i)->shared_credit = tmp_data[i];
+		}
+	}
+
+	if(getprop(node, "txwght", &tmp_data, sizeof(int)*max_vc) < 0) {
+		for(i=0; i<max_vc; i++){
+			(vc_index+i)->txwght = 64;
+		}
+	}else{
+		for(i=0; i<max_vc; i++){
+			(vc_index+i)->txwght = tmp_data[i];
+		}
+	}
+
+	if(getprop(node, "segth", &tmp_data, sizeof(int)*max_vc) < 0) {
+		for(i=0; i<max_vc; i++){
+			(vc_index+i)->segth = 2;
+		}
+	}else{
+		for(i=0; i<max_vc; i++){
+			(vc_index+i)->segth = tmp_data[i];
+		}
+	}
+}
+static void ici_dump_vc_info(const char *header, int max_vc, struct nlm_ici_vc_param *vc)
+{
+	int i = 0;
+	printk("[=== %s ===]\n", header);
+	
+	if(max_vc == 8){
+		printk("OWN:    %d %d %d %d %d %d %d %d\n",(vc+0)->own_credit, (vc+1)->own_credit, (vc+2)->own_credit, 
+				(vc+3)->own_credit,	(vc+4)->own_credit, (vc+5)->own_credit, (vc+6)->own_credit, (vc+7)->own_credit);
+		printk("SHARED: %d %d %d %d %d %d %d %d\n",(vc+0)->shared_credit, (vc+1)->shared_credit, (vc+2)->shared_credit, 
+				(vc+3)->shared_credit,	(vc+4)->shared_credit, (vc+5)->shared_credit, (vc+6)->shared_credit, 
+				(vc+7)->shared_credit);
+		printk("TXWGHT: %d %d %d %d %d %d %d %d\n",(vc+0)->txwght, (vc+1)->txwght, (vc+2)->txwght, (vc+3)->txwght,
+				(vc+4)->txwght, (vc+5)->txwght, (vc+6)->txwght, (vc+7)->txwght);
+		printk("SEGTH:  %d %d %d %d %d %d %d %d\n",(vc+0)->segth, (vc+1)->segth, (vc+2)->segth, (vc+3)->segth,
+				(vc+4)->segth, (vc+5)->segth, (vc+6)->segth, (vc+7)->segth);
+	}else if (max_vc == 4){
+		printk("OWN:    %d %d %d %d\n",(vc+0)->own_credit, (vc+1)->own_credit, (vc+2)->own_credit, (vc+3)->own_credit);
+		printk("SHARED: %d %d %d %d \n",(vc+0)->shared_credit, (vc+1)->shared_credit, (vc+2)->shared_credit, 
+				(vc+3)->shared_credit);
+		printk("TXWGHT: %d %d %d %d\n",(vc+0)->txwght, (vc+1)->txwght, (vc+2)->txwght, (vc+3)->txwght);
+		printk("SEGTH:  %d %d %d %d\n",(vc+0)->segth, (vc+1)->segth, (vc+2)->segth, (vc+3)->segth);
+
+	}else if(max_vc == 1){
+		printk("OWN:    %d\n",(vc+0)->own_credit);
+		printk("SHARED: %d \n",(vc+0)->shared_credit);
+		printk("TXWGHT: %d \n",(vc+0)->txwght);
+		printk("SEGTH:  %d \n",(vc+0)->segth);
+	}
+}
+
+static void parse_ici_parameters(void)
+{
+	char domstr[32] = "";
+	void *node;
+	int temp;
+	int domain = 0;
+
+	sprintf(domstr, "/doms/dom@%d/ici-config", domain);
+	node = finddevice(domstr);
+	if(node){
+			if(getprop(node, "enable", &nlm_ici_config.enable_config, sizeof(int)) < 0){
+				nlm_ici_config.enable_config = 0;
+			}
+			if(getprop(node, "total_credits", &nlm_ici_config.total_credits, sizeof(int)) < 0){
+				nlm_ici_config.total_credits = 1023;
+			}
+			if(getprop(node, "node_0_link_mask", &nlm_ici_config.node_link_mask[0], sizeof(int))<0){
+				nlm_ici_config.node_link_mask[0] = 0;
+			}
+			if(getprop(node, "node_1_link_mask", &nlm_ici_config.node_link_mask[1], sizeof(int))<0){
+				nlm_ici_config.node_link_mask[1] = 0;
+			}
+			if(getprop(node, "node_2_link_mask", &nlm_ici_config.node_link_mask[2], sizeof(int))<0){
+				nlm_ici_config.node_link_mask[2] = 0;
+			}
+			if(getprop(node, "node_3_link_mask", &nlm_ici_config.node_link_mask[3], sizeof(int))<0){
+				nlm_ici_config.node_link_mask[3] = 0;
+			}
+	}
+	if(!nlm_ici_config.enable_config){
+		printk("ICI config not enabled\n");
+		goto end;
+	}
+
+	sprintf(domstr, "/doms/dom@%d/ici-config/gcu", domain);
+	node = finddevice(domstr);
+	if(node){
+			ici_read_vc_parameter(node, ICI_MAX_GCU_VC, &nlm_ici_config.gcu_vc[0]);
+	}
+
+	sprintf(domstr, "/doms/dom@%d/ici-config/fmn", domain);
+	node = finddevice(domstr);
+	if(node){
+			ici_read_vc_parameter(node, ICI_MAX_FMN_VC, &nlm_ici_config.fmn_vc[0]);
+	}
+
+	sprintf(domstr, "/doms/dom@%d/ici-config/pic", domain);
+	node = finddevice(domstr);
+	if(node){
+			ici_read_vc_parameter(node, ICI_MAX_PIC_VC, &nlm_ici_config.pic_vc[0]);
+	}
+#if 0
+	printk("\n:::::::::ICI CONFIGURATION:::::::::\n");
+	printk("TotalCredits %d, EnableConfig %d\n",nlm_ici_config.total_credits, nlm_ici_config.enable_config);
+	ici_dump_vc_info("GCU", ICI_MAX_GCU_VC, &nlm_ici_config.gcu_vc[0]);
+	ici_dump_vc_info("FMN", ICI_MAX_FMN_VC, &nlm_ici_config.fmn_vc[0]);
+	ici_dump_vc_info("PIC", ICI_MAX_PIC_VC, &nlm_ici_config.pic_vc[0]);
+	printk("LinkMask: Node0: %#x, Node1: %#x, Node2: %#x, Node3: %#x\n", nlm_ici_config.node_link_mask[0],
+			nlm_ici_config.node_link_mask[1], nlm_ici_config.node_link_mask[2], nlm_ici_config.node_link_mask[3]);
+#endif
+end:
+	return;
+}
 
 static int __init fdt_process(void)
 {
@@ -703,6 +860,7 @@ noloadermask:
 	/* Parse the sae async/sync vcs for linux userspace model */
 	parse_fdt_sae_vc_config();
 
+	parse_ici_parameters();
 	return 0;
 }
 
@@ -790,7 +948,71 @@ void __init build_node_cpu_map(void)
 		i++;
 	}
 	printk("Number of online nodes = %d\n", num_online_nodes());
+
+}
+
+static void nlm_update_ici_credits(int node, int link)
+{
+	volatile uint32_t *mmio;
+	volatile int i = 0;
+
+	mmio = (volatile uint32_t *)(0xffffffffb0000000ULL|(unsigned long)ici_io_mmio(node, link));
+
+	/*Configure GCU vcs*/
+	for(i=0; i<ICI_MAX_GCU_VC; i++){
+		mmio[ICI_CREDOWN0 + ICI_GCU_VC_START + i] = nlm_ici_config.gcu_vc[i].own_credit;
+		mmio[ICI_CREDSHARE0 + ICI_GCU_VC_START + i] = nlm_ici_config.gcu_vc[i].shared_credit;
+		mmio[ICI_TXWGHT0 + ICI_GCU_VC_START + i] = nlm_ici_config.gcu_vc[i].txwght;
+		mmio[ICI_TXSEGTH0 + ICI_GCU_VC_START + i] = nlm_ici_config.gcu_vc[i].segth;
+	}
+
+	/*Configure FMN vcs*/
+	for(i=0; i<ICI_MAX_FMN_VC; i++){
+		mmio[ICI_CREDOWN0 + ICI_FMN_VC_START + i] = nlm_ici_config.fmn_vc[i].own_credit;
+		mmio[ICI_CREDSHARE0 + ICI_FMN_VC_START + i] = nlm_ici_config.fmn_vc[i].shared_credit;
+		mmio[ICI_TXWGHT0 + ICI_FMN_VC_START + i] = nlm_ici_config.fmn_vc[i].txwght;
+		mmio[ICI_TXSEGTH0 + ICI_FMN_VC_START + i] = nlm_ici_config.fmn_vc[i].segth;
+	}
+
+	/*Configure PIC vcs*/
+	for(i=0; i<ICI_MAX_PIC_VC; i++){
+		mmio[ICI_CREDOWN0 + ICI_PIC_VC_START + i] = nlm_ici_config.pic_vc[i].own_credit;
+		mmio[ICI_CREDSHARE0 + ICI_PIC_VC_START + i] = nlm_ici_config.pic_vc[i].shared_credit;
+		mmio[ICI_TXWGHT0 + ICI_PIC_VC_START + i] = nlm_ici_config.pic_vc[i].txwght;
+		mmio[ICI_TXSEGTH0 + ICI_PIC_VC_START + i] = nlm_ici_config.pic_vc[i].segth;
+	}
+
+	/*Configure Total Credits*/
+	mmio[ICI_CREDTOT] = nlm_ici_config.total_credits;
+
+	/*Update Credit Load*/
+	mmio[ICI_CREDLD] = mmio[ICI_CREDLD] | 0x1;
+
+	printk("Reconfigured ICI Node %d, Link %d\n", node, link);
 }
+
+int nlm_config_ici(void)
+{
+	/*configure ICI*/
+	int node, link;
+	uint32_t active_link;
+
+	if(!nlm_ici_config.enable_config){
+		return -1;
+	}
+
+	for(node=0; node<MAX_NUMNODES; node++){
+		if(node_online(node)) {
+			active_link = nlm_ici_config.node_link_mask[node];
+			for(link=0; link<ICI_NUM_LINKS; link++){
+				if(active_link & (1<<link)){
+					nlm_update_ici_credits(node, link);
+				}
+			}
+		}
+	}
+}
+
 #endif
 
 void __init prom_init(void)
@@ -805,6 +1027,7 @@ void __init prom_init(void)
 
 #ifdef CONFIG_NUMA
 	build_node_cpu_map();
+	nlm_config_ici();
 #endif
 
 	xen_init();
-- 
1.8.4.93.g57e4c17

