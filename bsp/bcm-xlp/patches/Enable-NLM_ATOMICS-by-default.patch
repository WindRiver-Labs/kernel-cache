From 611fc5145351db96f66593963372cd843985eb36 Mon Sep 17 00:00:00 2001
From: Zi Shen Lim <zlim@netlogicmicro.com>
Date: Fri, 25 Mar 2011 15:08:23 -0700
Subject: [PATCH 194/565] Enable NLM_ATOMICS by default.

It may be optionally disabled by enabling NLM_XLP_A0_WORKAROUNDS.

Based on Broadcom SDK 2.3.

Signed-off-by: Zi Shen Lim <zlim@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/atomic.h             | 12 ++++++++----
 arch/mips/include/asm/netlogic/mips-exts.h |  4 ++--
 arch/mips/netlogic/Kconfig                 | 10 ++++++++++
 3 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/arch/mips/include/asm/atomic.h b/arch/mips/include/asm/atomic.h
index 240e4f3..6cf792b 100644
--- a/arch/mips/include/asm/atomic.h
+++ b/arch/mips/include/asm/atomic.h
@@ -21,6 +21,10 @@
 #include <asm/cmpxchg.h>
 #include <asm/war.h>
 
+#ifdef CONFIG_NLM_ATOMICS
+#include <asm/netlogic/mips-exts.h>
+#endif
+
 #define ATOMIC_INIT(i)    { (i) }
 
 /*
@@ -49,7 +53,7 @@
  */
 static __inline__ void atomic_add(int i, atomic_t * v)
 {
-#ifdef CONFIG_NLM_XLR
+#ifdef CONFIG_NLM_ATOMICS
 	ldadd_w_no_read(i, &v->counter);
 #else
 	if (kernel_uses_llsc && R10000_LLSC_WAR) {
@@ -96,7 +100,7 @@ static __inline__ void atomic_add(int i, atomic_t * v)
  */
 static __inline__ void atomic_sub(int i, atomic_t * v)
 {
-#ifdef CONFIG_NLM_XLR
+#ifdef CONFIG_NLM_ATOMICS
 	ldadd_w_no_read(-i,&v->counter);
 #else
 	if (kernel_uses_llsc && R10000_LLSC_WAR) {
@@ -143,7 +147,7 @@ static __inline__ int atomic_add_return(int i, atomic_t * v)
 
 	smp_mb__before_llsc();
 
-#ifdef CONFIG_NLM_XLR
+#ifdef CONFIG_NLM_ATOMICS
 	result = ldadd_w(i, &v->counter);
 	result += i;
 #else
@@ -199,7 +203,7 @@ static __inline__ int atomic_sub_return(int i, atomic_t * v)
 
 	smp_mb__before_llsc();
 
-#ifdef CONFIG_NLM_XLR
+#ifdef CONFIG_NLM_ATOMICS
 	result = ldadd_w(-i, &v->counter);
 	result -= i;
 #else
diff --git a/arch/mips/include/asm/netlogic/mips-exts.h b/arch/mips/include/asm/netlogic/mips-exts.h
index 75e5b34..c704324 100644
--- a/arch/mips/include/asm/netlogic/mips-exts.h
+++ b/arch/mips/include/asm/netlogic/mips-exts.h
@@ -174,7 +174,7 @@ static inline void write_64bit_cp0_eimr(__u64 value)
 	: "$1", "$2");
 }
 
-#ifdef CONFIG_NLM_XLR
+#ifdef CONFIG_NLM_ATOMICS
 static __inline__ int ldadd_w(unsigned int value, volatile int *addr)
 {
 	unsigned long res;
@@ -249,7 +249,7 @@ static __inline__ void ldadd_wu_no_read(unsigned int value,
                        : "$8", "$9"
                        );
 }
-#endif /* CONFIG_NLM_XLR */
+#endif /* CONFIG_NLM_ATOMICS */
 
 static __inline__ int hard_smp_processor_id(void)
 {
diff --git a/arch/mips/netlogic/Kconfig b/arch/mips/netlogic/Kconfig
index bfcc46a..8f2a1d3 100644
--- a/arch/mips/netlogic/Kconfig
+++ b/arch/mips/netlogic/Kconfig
@@ -4,11 +4,21 @@ config NLM_COMMON
 config NLM_XLR
 	select GENERIC_HARDIRQS_NO__DO_IRQ
 	select FDT
+	select NLM_ATOMICS
 	bool
 
 config NLM_XLP
+	select NLM_ATOMICS if !NLM_XLP_A0_WORKAROUNDS
 	bool
 
+config NLM_ATOMICS
+	bool
+
+config NLM_XLP_A0_WORKAROUNDS
+	bool "Enable A0 workarounds"
+	depends on NLM_XLP && !NLM_XLP_SIM
+	default n
+
 config NLMCOMMON_VM_DEBUG
 	bool "Debug VM System"
 	depends on NLM_COMMON
-- 
1.8.4.93.g57e4c17

