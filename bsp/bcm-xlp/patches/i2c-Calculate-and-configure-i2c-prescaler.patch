From b22f0b7ccff072d5c1fbeac5ec29a53ac3c66f59 Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Fri, 5 Oct 2012 15:18:07 +0530
Subject: [PATCH 401/565] i2c: Calculate and configure i2c prescaler.

Changed the prescaler to new calculated value, instead of the
old hardcoded value 3F. The i2c speed can now (optionally)
be specified as a module parameter.

Based on Broadcom SDK 2.3.

Signed-off-by: kopal <kopal@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/i2c/busses/i2c-xlp.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/i2c/busses/i2c-xlp.c b/drivers/i2c/busses/i2c-xlp.c
index ece53c4..a0cf2a6 100644
--- a/drivers/i2c/busses/i2c-xlp.c
+++ b/drivers/i2c/busses/i2c-xlp.c
@@ -36,6 +36,7 @@
 #include <asm/netlogic/hal/nlm_hal.h>
 #include <asm/netlogic/xlp.h>
 
+#define I2C_CLKFREQ_HZ			133333333 	/* 1.33MHz */
 #define DEFAULT_VIRT_BASE               0x9000000000000000ULL
 #define I2C_TIMEOUT                     500000
 #define XLP_I2C_DEFAULT_SPEED           1000
@@ -61,12 +62,15 @@
         #define I2C_STATUS_IF            0x01    /* Intr. Pending Flag, not used */
 #define I2C_WRITE_BIT			0x00
 #define I2C_READ_BIT			0x01
-#define I2C_DEFAULT_PRESCALER		0x3F
+
+static int i2c_speed=100;
+module_param(i2c_speed,int,0);
 
 struct i2c_xlp_data {
 	int 	node;
 	int	bus;
 	int	func;
+	int	speed; 		/* KHz */
 	int	xfer_timeout;
 	int	ack_timeout;
 	uint64_t* ioreg;
@@ -417,8 +421,7 @@ static void i2c_xlp_setup(struct i2c_xlp_data *priv)
 	val &= ~(XLP_I2C_EN | XLP_I2C_INT_EN);
 	i2c_reg_write(priv->node, priv->func, XLP_I2C_CFG0, val);
 
-	prescaler = I2C_DEFAULT_PRESCALER;
-	/*set the I2c speed 100 khz*/
+	prescaler = (I2C_CLKFREQ_HZ/(5 * (priv->speed * 1000))) - 1;  /* (speed * 1000) - convert KHz to Hz */ 
 	val &= ~0xFFFF;
 	val |=  (prescaler & 0xFFFF);
 	i2c_reg_write(priv->node, priv->func, XLP_I2C_CFG0, val);
@@ -457,7 +460,8 @@ i2c_xlp_probe(struct platform_device *pdev)
 	priv->func = priv-> bus + 2;
 	priv->xfer_timeout = 200;
 	priv->ack_timeout = 200;
-        priv->ioreg = (uint64_t*) (DEFAULT_VIRT_BASE + 
+       	priv->speed	  =i2c_speed; 
+	priv->ioreg = (uint64_t*) (DEFAULT_VIRT_BASE + 
 			nlm_hal_get_dev_base(0, 0, XLP_PCIE_GIO_DEV, priv->func) + 0x100);
 	priv->adap.nr = pdev->id;
 	priv->adap.algo = &xlp_i2c_algo;
-- 
1.8.4.93.g57e4c17

