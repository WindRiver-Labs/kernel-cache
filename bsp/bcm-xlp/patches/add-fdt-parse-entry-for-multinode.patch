From 747dbd35a5add851cffdf830c790d7d85109fe03 Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Tue, 31 Aug 2010 03:37:00 -0700
Subject: [PATCH 118/565] add fdt parse entry for multinode

Add fdt parse entry for multinode.

Based on Broadcom SDK 2.3.

Signed-off-by: henry shao <hshao@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/setup.c | 37 +++++++++++++++++++------------------
 1 file changed, 19 insertions(+), 18 deletions(-)

diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index ad3352f..2cabfc6 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -168,7 +168,6 @@ static struct physmap_info {
 	{ 0x1B , "PCIE Memory Space"},
 	{ 0xff , "Unknown type" }
 };
-
 struct boot_mem_map boot_physaddr_info;
 
 static char *get_psb_physmap_name(int type)
@@ -183,7 +182,6 @@ static char *get_psb_physmap_name(int type)
 	}
 	return ("Unknown type");
 }
-
 int nlm_common_get_pgprot(unsigned long address)
 {
 	int i;
@@ -420,7 +418,7 @@ static int fdt_process(void)
 {
 	int  domain=0;
 	char domstr[32] = "";
-	int  i, na, ns, regs[4], entries;
+	int  i, na, ns, regs[4], entries, cpu_nodes;
 
 	/* If booted using FDT and U-Boot, all
 	 * we get is a pointer to an FDT Blob
@@ -468,6 +466,9 @@ static int fdt_process(void)
 		ns = fdt32_to_cpu(ns);
 		if (ns < 1 || ns > 2)
 			printk("Can't cope with #size-cells == %d.\n\r", ns);
+		if (getprop(node, "#cpumask-cells", &cpu_nodes, sizeof(cpu_nodes)) < 0)
+			cpu_nodes = 1;
+		cpu_nodes = fdt32_to_cpu(cpu_nodes);
 	}
 
 	node = finddevice("/doms/dom@0/memory");
@@ -504,26 +505,28 @@ static int fdt_process(void)
 	/* extract CPU online mask for
 	 * domain 0 (linux)
 	 */
-	sprintf(domstr, "/doms/dom@%d/cpu", domain);
+	sprintf(domstr, "/doms/dom@0/cpu", domain);
 	
 	for(i = 0; i < 4; i++)
 		smp_node.onlinemask[i] = 0;
 
 	node = finddevice(domstr);
 	if (node) {
-		if (getprop(node, "onlinemask", &smp_node.onlinemask[0],
-					sizeof(smp_node.onlinemask[0])) < 0)
-			return -1;
-		smp_node.onlinemask[0] = fdt32_to_cpu(smp_node.onlinemask[0]);
-
-		getprop(node, "onlinemask1", &smp_node.onlinemask[1], sizeof(smp_node.onlinemask[1]));
-		smp_node.onlinemask[1] = fdt32_to_cpu(smp_node.onlinemask[1]);
+		if(cpu_nodes > 1)
+		{	
+			getprop(node, "onlinemask", &smp_node.onlinemask[0], sizeof(struct node_mask));
+		}
+		else
+		{
+			getprop(node, "onlinemask", &smp_node.onlinemask[0], sizeof(smp_node.onlinemask[0])); 
+		}
+		for(i = 0; i < cpu_nodes; i++)
+		{
+			smp_node.onlinemask[i] = fdt32_to_cpu(smp_node.onlinemask[i]);
+			printk("FDT: cpu_nodes: %d smp_node.onlinemask[%d]: %x\n",cpu_nodes, i , smp_node.onlinemask[i]);
+		}
 
-		getprop(node, "onlinemask2", &smp_node.onlinemask[2], sizeof(smp_node.onlinemask[2]));
-		smp_node.onlinemask[2] = fdt32_to_cpu(smp_node.onlinemask[2]);
 
-		getprop(node, "onlinemask3", &smp_node.onlinemask[3], sizeof(smp_node.onlinemask[3]));
-		smp_node.onlinemask[3] = fdt32_to_cpu(smp_node.onlinemask[3]);
 	}
 
 	if (!smp_node.onlinemask[0])
@@ -545,9 +548,6 @@ void __init prom_init(void)
 {
 	setup_mapped_kernel_tlbs(TRUE, TRUE);
 
-/*
-	setup_default_configuration();
-*/
 	fdt_process();
 
 	nlm_common_ebase = read_c0_ebase() & (~((1 << 12) - 1));
@@ -565,6 +565,7 @@ void __init prom_init(void)
 	nlm_early_serial_setup(xlp_uart_portid);
 
 	register_smp_ops(&nlm_smp_ops);
+
 	wakeup_secondary_cpus();
 }
 
-- 
1.8.4.93.g57e4c17

