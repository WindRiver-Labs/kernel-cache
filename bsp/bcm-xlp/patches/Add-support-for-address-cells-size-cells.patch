From fafc4879f3475b8897248513ab9216ad993b18a3 Mon Sep 17 00:00:00 2001
From: Jonathan Pui <jpui@netlogicmicro.com>
Date: Mon, 16 May 2011 16:11:44 -0700
Subject: [PATCH 243/565] Add support for address-cells, size-cells

Add support for #address-cells and #size-cells.

Based on Broadcom SDK 2.3.

Signed-off-by: Jonathan Pui <jpui@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/setup.c | 29 +++++++++++++++++++++--------
 1 file changed, 21 insertions(+), 8 deletions(-)

diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index 89e390f..247d084 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -450,8 +450,7 @@ static int fdt_process(void)
 {
 	int  domain=0;
 	char domstr[32] = "";
-	uint32_t  i, na, ns, regs[16], entries, cpu_cells;
- 	int index = 0;
+	uint32_t  i, na, ns, regs[MAX_PROP_LEN / 4], entries, cpu_cells;
 	uint32_t node_vc_mask[NLM_MAX_CPU_NODE] = {0};
 	extern uint32_t nlm_cpu_vc_mask[NLM_MAX_CPU_NODE*NLM_MAX_CPU_PER_NODE];
 	unsigned char buf[30];	
@@ -524,15 +523,29 @@ static int fdt_process(void)
 
 	node = finddevice("/doms/dom@0/memory");
 	if (node) {
-		entries = (getprop(node, "reg", regs, sizeof(regs))) / sizeof(regs[0]);
+		entries = (getprop(node, "reg", regs, MAX_PROP_LEN)) / sizeof(regs[0]);
 		if (!entries || (entries % (na+ns)))
 			printk("Invalid Memory Map Specified!\n");
 
-		for (i=0; i<entries; i+=2) {
-			unsigned long long addr, size;
+		for (i=0; i<entries; i+=na+ns) {
+			int base = i;
+			uint64_t addr, size;
 
-			addr = fdt32_to_cpu(regs[i]);
-			size = fdt32_to_cpu(regs[i + 1]);
+			addr = fdt32_to_cpu(regs[base++]);
+			if (na == 2)
+			{
+				/* handle 2 address-cells (ie. 64-bits of address) */
+				addr <<= 32;
+				addr |= fdt32_to_cpu(regs[base++]);
+			}
+
+			size = fdt32_to_cpu(regs[base++]);
+			if (ns == 2)
+			{
+				/* handle 2 size-cells (ie. 64-bits of size) */
+				size <<= 32;
+				size |= fdt32_to_cpu(regs[base++]);
+			}
 
 			sprintf(domstr, " mem=%lldm@%lldm ", (size >> 20), (addr >> 20));
 			strcat(arcs_cmdline, domstr);
@@ -592,7 +605,7 @@ static int fdt_process(void)
 	sprintf(domstr, "/doms/dom@%d/linuxloader", domain);
 	node = finddevice(domstr);
 	if (node) {
-		uint32_t loadermask_buf[MAX_CPUMASK_CELLS];
+		uint32_t loadermask_buf[MAX_CPUMASK_CELLS], index;
 		char buf[CPUMASK_BUF];
 
 		xlp_loader_support = 1;
-- 
1.8.4.93.g57e4c17

