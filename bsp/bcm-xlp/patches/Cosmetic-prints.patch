From 7952299c765b943ba17fa15dcca8c65d08bd8036 Mon Sep 17 00:00:00 2001
From: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Date: Fri, 10 Sep 2010 00:06:06 -0700
Subject: [PATCH 133/565] Cosmetic prints

Cosmetic prints when caching HAL_DIR files and routine for
early-print ring buffer.

Based on Broadcom SDK 2.3.

Signed-off-by: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/Makefile | 10 +++++-----
 arch/mips/netlogic/xlp/setup.c  | 35 +++++++++++++++++++++++++++++++----
 2 files changed, 36 insertions(+), 9 deletions(-)

diff --git a/arch/mips/netlogic/xlp/Makefile b/arch/mips/netlogic/xlp/Makefile
index 247dbe0..c9b12fd 100644
--- a/arch/mips/netlogic/xlp/Makefile
+++ b/arch/mips/netlogic/xlp/Makefile
@@ -1,10 +1,10 @@
 EXTRA_CFLAGS := -Werror
 EXTRA_CFLAGS := $(CFLAGS) -DNLM_HAL_LINUX_KERNEL -Iarch/mips/include/asm/netlogic/hal
 
-obj-y                    = setup.o 
-obj-y 			+= irq.o time.o on_chip.o mmu.o
+obj-y                    	= setup.o
+obj-y 				+= irq.o time.o on_chip.o mmu.o
 obj-$(CONFIG_NLM_XLP) 	+= platform-xlp.o
-obj-$(CONFIG_SMP)       += smp.o 
+obj-$(CONFIG_SMP)       	+= smp.o
 
-obj-$(CONFIG_KGDB)      += nmi.o
-obj-$(CONFIG_NLM_XLP) += cpu_control.o cpu_control_asm.o
+obj-$(CONFIG_KGDB)      	+= nmi.o
+obj-$(CONFIG_NLM_XLP) 	+= cpu_control.o cpu_control_asm.o
diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index 670bebf..cac4172 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -146,9 +146,6 @@ extern struct node_mask smp_node;
 
 int nlm_common_get_pgprot(unsigned long address)
 {
-	int i;
-	__u64 start=0, end=0;
-
 	return 1;
 }
 struct boot_mem_map boot_physaddr_info;
@@ -454,7 +451,7 @@ static int fdt_process(void)
 	/* extract CPU online mask for
 	 * domain 0 (linux)
 	 */
-	sprintf(domstr, "/doms/dom@0/cpu", domain);
+	sprintf(domstr, "/doms/dom@%d/cpu", domain);
 	
 	for(i = 0; i < 4; i++)
 		smp_node.onlinemask[i] = 0;
@@ -523,6 +520,36 @@ void prom_free_prom_memory(void)
 	/* nothing to free */
 }
 
+#define KSEG0 0xffffffff80000000
+#define RING_BUFFER_BASE (511 << 20)
+#define RING_BUFFER_SIZE (8 << 10)
+static void outbyte_ring_buffer(char c)
+{
+	unsigned long base = RING_BUFFER_BASE + (hard_smp_processor_id() * RING_BUFFER_SIZE);
+	char *buf = (char *)KSEG0 + base;
+	static int idx = 0;
+
+	buf[idx] = c;
+	idx = (idx + 1) % (RING_BUFFER_SIZE);
+}
+
+void nlm_early_printk(const char *fmt, ...)
+{
+	char buf[256];
+	va_list args;
+	int r;
+	char *str = buf;
+
+	va_start(args, fmt);
+	r = vsnprintf(buf, 256, fmt, args);
+	va_end(args);
+
+	while (*str) {
+		outbyte_ring_buffer(*str);
+		str++;
+	}
+}
+
 #ifdef CONFIG_EARLY_PRINTK
 static void NS16550_putc(char c)
 {
-- 
1.8.4.93.g57e4c17

