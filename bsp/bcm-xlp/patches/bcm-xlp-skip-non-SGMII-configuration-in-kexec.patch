From ed4e4c1959684dd354b0c3d8a66ae43f8f159a44 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Tue, 15 Oct 2013 14:29:14 +0800
Subject: [PATCH 2/2] bcm-xlp: skip non-SGMII configuration in kexec

UBOOT is responsible for configuring all non-SGMII NAE interfaces
in normal boot process.
But system doesn't enter UBOOT in kexec boot process therefore NAE isn't
reset and re-configured, so skip non-SGMII configuration in kexec boot.

On the other hand, nlm_hal_nae.c already defined its own check_header(),
no any other files need this function now, so remove check_header() from
"arch/mips/netlogic/boot/ops.h".

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/boot/ops.h           | 7 -------
 arch/mips/netlogic/common/nlm_hal_nae.c | 9 ++++++++-
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/mips/netlogic/boot/ops.h b/arch/mips/netlogic/boot/ops.h
index a60c2d5..5741308 100644
--- a/arch/mips/netlogic/boot/ops.h
+++ b/arch/mips/netlogic/boot/ops.h
@@ -188,13 +188,6 @@ static inline void *find_node_by_compatible(const void *prev,
 	return NULL;
 }
 
-static inline int check_header(void)
-{
-	if (dt_ops.check_header)
-		return dt_ops.check_header();
-	return -1;
-}
-
 void dt_fixup_memory(unsigned long long start, unsigned long long size);
 void dt_fixup_cpu_clocks(unsigned int cpufreq, unsigned int tbfreq, unsigned int busfreq);
 void dt_fixup_clock(const char *path, unsigned int freq);
diff --git a/arch/mips/netlogic/common/nlm_hal_nae.c b/arch/mips/netlogic/common/nlm_hal_nae.c
index 3219d8c..2775e88 100644
--- a/arch/mips/netlogic/common/nlm_hal_nae.c
+++ b/arch/mips/netlogic/common/nlm_hal_nae.c
@@ -37,7 +37,7 @@
 #include "libfdt.h"
 #include "fdt_helper.h"
 #include "nlm_evp_cpld.h"
-
+#include "asm/mach-netlogic/nlm_kexec.h"
 
 #define VAL_UCORE_RESET(x) ( ( (x) &0xffff) << 8)
 
@@ -2519,6 +2519,13 @@ static int parse_port_config(void *fdt, int node, nlm_nae_config_ptr nae_cfg)
 
 		intf_type = get_interface_type(fdt, nae_port_str, block, port, node);
                 nlm_print("Complex %d intf:%d\n", block, intf_type);
+		if (is_kexec_boot()) {
+			if (intf_type != SGMII_IF) {
+				nlm_print("Kexec boot:skip Complex %d intf:%d\n"
+						, block, intf_type);
+				continue;
+			}
+		}
 #ifdef NLM_HAL_UBOOT
 
 		if (intf_type != SGMII_IF) {
-- 
1.8.4.93.g57e4c17

