From 4f2d27b92e790077df5eb94d92b075205d3c8e14 Mon Sep 17 00:00:00 2001
From: Divya Sakthidharan <divyas@broadcom.com>
Date: Fri, 28 Sep 2012 16:24:33 +0530
Subject: [PATCH 398/565] MTD: Dynamically allocating backing device structures
 for mtd devices.

Statically allocated bdi structure have  kseg2 adresses.
However virt_to_page can not be called with a kseg2 address.
Replacing them with kmalloc dynamic allocation.

Also updated defconfigs and removed un-wanted files.

Based on Broadcom SDK 2.3.

Signed-off-by: Divya Sakthidharan <divyas@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/mtd/maps/Makefile |   1 -
 drivers/mtd/mtdcore.c     | 101 +++++++++++++++++++++++++++++++++++++++++-----
 2 files changed, 91 insertions(+), 11 deletions(-)

diff --git a/drivers/mtd/maps/Makefile b/drivers/mtd/maps/Makefile
index 989f1c3..abe2306 100644
--- a/drivers/mtd/maps/Makefile
+++ b/drivers/mtd/maps/Makefile
@@ -46,7 +46,6 @@ obj-$(CONFIG_MTD_INTEL_VR_NOR)	+= intel_vr_nor.o
 obj-$(CONFIG_MTD_BFIN_ASYNC)	+= bfin-async-flash.o
 obj-$(CONFIG_MTD_RBTX4939)	+= rbtx4939-flash.o
 obj-$(CONFIG_MTD_VMU)		+= vmu-flash.o
-obj-$(CONFIG_MTD_XLP)           += xlp-flash.o
 obj-$(CONFIG_MTD_GPIO_ADDR)	+= gpio-addr-flash.o
 obj-$(CONFIG_MTD_LATCH_ADDR)	+= latch-addr-flash.o
 obj-$(CONFIG_MTD_LANTIQ)	+= lantiq-flash.o
diff --git a/drivers/mtd/mtdcore.c b/drivers/mtd/mtdcore.c
index c400c57..044b1ce 100644
--- a/drivers/mtd/mtdcore.c
+++ b/drivers/mtd/mtdcore.c
@@ -47,6 +47,8 @@
  * backing device capabilities for non-mappable devices (such as NAND flash)
  * - permits private mappings, copies are taken of the data
  */
+
+#ifndef CONFIG_NLM_XLP
 static struct backing_dev_info mtd_bdi_unmappable = {
 	.capabilities	= BDI_CAP_MAP_COPY,
 };
@@ -71,6 +73,11 @@ static struct backing_dev_info mtd_bdi_rw_mappable = {
 			   BDI_CAP_EXEC_MAP | BDI_CAP_READ_MAP |
 			   BDI_CAP_WRITE_MAP),
 };
+#else
+static struct backing_dev_info *mtd_bdi_unmappable = NULL;
+static struct backing_dev_info *mtd_bdi_ro_mappable = NULL;
+static struct backing_dev_info *mtd_bdi_rw_mappable = NULL;
+#endif
 
 static int mtd_cls_suspend(struct device *dev, pm_message_t state);
 static int mtd_cls_resume(struct device *dev);
@@ -329,19 +336,32 @@ int add_mtd_device(struct mtd_info *mtd)
 {
 	struct mtd_notifier *not;
 	int i, error;
-
+	
 	if (!mtd->backing_dev_info) {
 		switch (mtd->type) {
-		case MTD_RAM:
-			mtd->backing_dev_info = &mtd_bdi_rw_mappable;
-			break;
-		case MTD_ROM:
-			mtd->backing_dev_info = &mtd_bdi_ro_mappable;
-			break;
-		default:
-			mtd->backing_dev_info = &mtd_bdi_unmappable;
-			break;
+		#ifdef CONFIG_NLM_XLP
+			case MTD_RAM:
+                	        mtd->backing_dev_info = mtd_bdi_rw_mappable;
+                        	break;
+                	case MTD_ROM:
+                        	mtd->backing_dev_info = mtd_bdi_ro_mappable;
+                        	break;
+			default:
+                        	mtd->backing_dev_info = mtd_bdi_unmappable;
+                      		break;
+		#else
+			case MTD_RAM:
+				mtd->backing_dev_info = &mtd_bdi_rw_mappable;
+				break;
+			case MTD_ROM:
+				mtd->backing_dev_info = &mtd_bdi_ro_mappable;
+				break;
+			default:
+				mtd->backing_dev_info = &mtd_bdi_unmappable;
+				break;
+		#endif
 		}
+
 	}
 
 	BUG_ON(mtd->writesize == 0);
@@ -1150,6 +1170,7 @@ static int __init mtd_bdi_init(struct backing_dev_info *bdi, const char *name)
 	int ret;
 
 	ret = bdi_init(bdi);
+
 	if (!ret)
 		ret = bdi_register(bdi, NULL, name);
 
@@ -1169,6 +1190,44 @@ static int __init init_mtd(void)
 	if (ret)
 		goto err_reg;
 
+	#ifdef CONFIG_NLM_XLP
+
+		mtd_bdi_unmappable  = kmalloc(sizeof(struct backing_dev_info), GFP_KERNEL);
+		if(mtd_bdi_unmappable)	{
+			mtd_bdi_unmappable->capabilities = BDI_CAP_MAP_COPY;
+		}
+		else
+			goto err_kmalloc_1;
+		
+		mtd_bdi_ro_mappable = kmalloc(sizeof(struct backing_dev_info), GFP_KERNEL);
+		if(mtd_bdi_ro_mappable)	{
+			mtd_bdi_unmappable->capabilities = (BDI_CAP_MAP_COPY | BDI_CAP_MAP_DIRECT |
+							BDI_CAP_EXEC_MAP | BDI_CAP_READ_MAP);
+		}
+		else
+			goto err_kmalloc_2;
+	
+		mtd_bdi_rw_mappable = kmalloc(sizeof(struct backing_dev_info), GFP_KERNEL);
+		if(mtd_bdi_rw_mappable)        {
+			mtd_bdi_unmappable->capabilities = (BDI_CAP_MAP_COPY | BDI_CAP_MAP_DIRECT |
+							BDI_CAP_EXEC_MAP | BDI_CAP_READ_MAP |
+							BDI_CAP_WRITE_MAP);
+		}
+		else
+			goto err_kmalloc_3;
+
+		ret = mtd_bdi_init(mtd_bdi_unmappable, "mtd-unmap");
+                if (ret)
+                        goto err_bdi1;
+
+		ret = mtd_bdi_init(mtd_bdi_ro_mappable, "mtd-romap");
+                if (ret)
+                        goto err_bdi2;
+
+                ret = mtd_bdi_init(mtd_bdi_rw_mappable, "mtd-rwmap");
+                if (ret)
+                        goto err_bdi3;	
+	#else
 	ret = mtd_bdi_init(&mtd_bdi_unmappable, "mtd-unmap");
 	if (ret)
 		goto err_bdi1;
@@ -1180,6 +1239,7 @@ static int __init init_mtd(void)
 	ret = mtd_bdi_init(&mtd_bdi_rw_mappable, "mtd-rwmap");
 	if (ret)
 		goto err_bdi3;
+	#endif
 
 	proc_mtd = proc_create("mtd", 0, NULL, &mtd_proc_ops);
 
@@ -1189,6 +1249,7 @@ static int __init init_mtd(void)
 
 	return 0;
 
+#ifndef CONFIG_NLM_XLP
 out_procfs:
 	if (proc_mtd)
 		remove_proc_entry("mtd", NULL);
@@ -1198,6 +1259,20 @@ err_bdi2:
 	bdi_destroy(&mtd_bdi_unmappable);
 err_bdi1:
 	class_unregister(&mtd_class);
+#else
+	err_bdi3:
+        	bdi_destroy(mtd_bdi_ro_mappable);
+	err_bdi2:
+        	bdi_destroy(mtd_bdi_unmappable);
+	err_bdi1:
+		kfree(mtd_bdi_rw_mappable);
+	err_kmalloc_3:
+		kfree(mtd_bdi_ro_mappable);	
+	err_kmalloc_2:
+		kfree(mtd_bdi_unmappable);
+	err_kmalloc_1:
+		class_unregister(&mtd_class);	
+#endif
 err_reg:
 	pr_err("Error registering mtd class or bdi: %d\n", ret);
 	return ret;
@@ -1209,9 +1284,15 @@ static void __exit cleanup_mtd(void)
 	if (proc_mtd)
 		remove_proc_entry("mtd", NULL);
 	class_unregister(&mtd_class);
+	#ifndef CONFIG_NLM_XLP
 	bdi_destroy(&mtd_bdi_unmappable);
 	bdi_destroy(&mtd_bdi_ro_mappable);
 	bdi_destroy(&mtd_bdi_rw_mappable);
+	#else
+	bdi_destroy(mtd_bdi_unmappable);
+        bdi_destroy(mtd_bdi_ro_mappable);
+        bdi_destroy(mtd_bdi_rw_mappable);
+	#endif
 }
 
 module_init(init_mtd);
-- 
1.8.4.93.g57e4c17

