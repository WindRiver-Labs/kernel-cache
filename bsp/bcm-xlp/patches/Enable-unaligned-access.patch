From a9268986e5767704c7a4cb282ec8ad6f60edaa08 Mon Sep 17 00:00:00 2001
From: Zi Shen Lim <zlim@netlogicmicro.com>
Date: Mon, 30 Aug 2010 18:17:30 -0700
Subject: [PATCH 107/565] Enable unaligned access

Enable unaligned access.

Based on Broadcom SDK 2.3.

Signed-off-by: Zi Shen Lim <zlim@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/cpu_control.c     | 20 ++++++++++++++++++++
 arch/mips/netlogic/xlp/cpu_control_asm.S | 16 +++++++++++++++-
 2 files changed, 35 insertions(+), 1 deletion(-)

diff --git a/arch/mips/netlogic/xlp/cpu_control.c b/arch/mips/netlogic/xlp/cpu_control.c
index 0af64ba..96f92e3 100644
--- a/arch/mips/netlogic/xlp/cpu_control.c
+++ b/arch/mips/netlogic/xlp/cpu_control.c
@@ -79,6 +79,23 @@ static inline void jump_address(unsigned long entry)
 			:: "r"(entry));
 }
 
+/* Enable unaligned access - LSU Defeature: bit 30. */
+static inline void enable_unaligned(void)
+{
+	uint32_t tmp0, tmp1, tmp2;
+	__asm__ __volatile__ (
+		".set push\n"
+		".set noreorder\n"
+		"li      %0, "STR(LSU_DEFEATURE)"\n"
+		"mfcr    %1, %0\n"
+		"lui     %2, 0x4000\n"
+		"or      %1, %1, %2\n"
+		"mtcr    %1, %0\n"
+		".set pop\n"
+		: "=r" (tmp0), "=r" (tmp1), "=r" (tmp2)
+	);
+}
+
 void enable_cores(unsigned int node, unsigned int cbitmap, unsigned int thread_num) {
 	uint32_t core, value, start_core, i = 0;
 	uint64_t sys_mmio;
@@ -152,6 +169,9 @@ void enable_cpus( unsigned int node, unsigned int onlinemask)
 			index+=3;
 		}
 
+		/* Enable unaligned access on Core0. */
+		if (node == 0)
+			enable_unaligned();
 
 		/* As for the threads to be enabled
 	 	* per core, use Core0 as a reference
diff --git a/arch/mips/netlogic/xlp/cpu_control_asm.S b/arch/mips/netlogic/xlp/cpu_control_asm.S
index 3c2bf25..a466c50 100644
--- a/arch/mips/netlogic/xlp/cpu_control_asm.S
+++ b/arch/mips/netlogic/xlp/cpu_control_asm.S
@@ -66,6 +66,17 @@
 	.set pop
     .endm
 
+.macro __enable_unaligned
+	.set push
+	.set noreorder
+	li      t0, LSU_DEFEATURE
+	mfcr    t1, t0
+	lui     t2, 0x4000  # Bit30
+	or      t1, t1, t2
+	mtcr    t1, t0
+	.set pop
+.endm
+
 	/* T0 of Non-0 Cores jump
 	 * here, from enable_cores
 	 * This code sits in KSEG0
@@ -90,7 +101,10 @@ EXPORT(reset_entry)
 	/* read back to ensure complete */
 	lw      t1, (SYS_CPUNONCOHERENTMODE_REG << 2)(t2)
 	sync
-	
+
+	/* Enable unaligned access on Non-0 Cores. */
+	__enable_unaligned
+
 	dla     t1, boot_siblings_start
 	dla     t2, __boot_siblings
 	subu	t2, t2, t1		/* t2 now has the jump offset */
-- 
1.8.4.93.g57e4c17

