From 6d0a34323e861f0b8f58b9cd95c7354c658cc32f Mon Sep 17 00:00:00 2001
From: Alok Agrawat <aagrawat@netlogicmicro.com>
Date: Thu, 28 Jul 2011 19:31:50 +0530
Subject: [PATCH 244/565] - Modify GCM, CCM, CTR and XCBC

Modify to have GCM, CCM, CTR and XCBC to be part of setkey.

Based on Broadcom SDK 2.3.

Signed-off-by: Alok Agrawat <aagrawat@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 net/key/af_key.c | 51 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 51 insertions(+)

diff --git a/net/key/af_key.c b/net/key/af_key.c
index ab8bd2c..b0c1cc0 100644
--- a/net/key/af_key.c
+++ b/net/key/af_key.c
@@ -2737,7 +2737,32 @@ static int pfkey_spdflush(struct sock *sk, struct sk_buff *skb, const struct sad
 
 typedef int (*pfkey_handler)(struct sock *sk, struct sk_buff *skb,
 			     const struct sadb_msg *hdr, void * const *ext_hdrs);
+
+#ifdef CONFIG_NLM_NET_KEY
+/*
+ * PFKEY handlers specific to NetLogic IPSec implementation.
+ */
+static int pfkey_nlms_op(struct sock *sk, struct sk_buff *skb,
+			 struct sadb_msg *hdr, void **ext_hdrs)
+{
+	switch (hdr->sadb_msg_type) {
+	case SADB_X_NLMS_PRIVATE:
+		/* This is the msg send back by IPsec to indicate the previous
+		 * pfkey msg has been processed. Kernel should go ahead to
+		 * send back the response to the sender of the PFKEY command.
+		 */
+		pfkey_broadcast(skb_clone(skb, GFP_KERNEL),
+				GFP_ATOMIC, BROADCAST_ALL, NULL, sock_net(sk));
+		break;
+	default:
+		break;
+	}
+	return 0;
+}
+#endif
+
 static pfkey_handler pfkey_funcs[SADB_MAX + 1] = {
+#ifndef CONFIG_NLM_NET_KEY
 	[SADB_RESERVED]		= pfkey_reserved,
 	[SADB_GETSPI]		= pfkey_getspi,
 	[SADB_UPDATE]		= pfkey_add,
@@ -2761,6 +2786,32 @@ static pfkey_handler pfkey_funcs[SADB_MAX + 1] = {
 	[SADB_X_SPDSETIDX]	= pfkey_spdadd,
 	[SADB_X_SPDDELETE2]	= pfkey_spdget,
 	[SADB_X_MIGRATE]	= pfkey_migrate,
+#else
+	[SADB_RESERVED]		= pfkey_nlms_op,
+	[SADB_GETSPI]		= pfkey_nlms_op,
+	[SADB_UPDATE]		= pfkey_nlms_op,
+	[SADB_ADD]		= pfkey_nlms_op,
+	[SADB_DELETE]		= pfkey_nlms_op,
+	[SADB_GET]		= pfkey_get,
+	[SADB_ACQUIRE]		= pfkey_acquire,
+	[SADB_REGISTER]		= pfkey_register,
+	[SADB_EXPIRE]		= NULL,
+	[SADB_FLUSH]		= pfkey_nlms_op,
+	[SADB_DUMP]		= pfkey_nlms_op,
+	[SADB_X_PROMISC]	= pfkey_promisc,
+	[SADB_X_PCHANGE]	= NULL,
+	[SADB_X_SPDUPDATE]      = pfkey_nlms_op,
+	[SADB_X_SPDADD]		= pfkey_nlms_op,
+	[SADB_X_SPDDELETE]      = pfkey_nlms_op,
+	[SADB_X_SPDGET]		= pfkey_spdget,
+	[SADB_X_SPDACQUIRE]     = NULL,
+	[SADB_X_SPDDUMP]	= pfkey_nlms_op,
+	[SADB_X_SPDFLUSH]       = pfkey_nlms_op,
+	[SADB_X_SPDSETIDX]      = pfkey_spdadd,
+	[SADB_X_SPDDELETE2]     = pfkey_spdget,
+	[SADB_X_MIGRATE]	= pfkey_migrate,
+	[SADB_X_NLMS_PRIVATE]   = pfkey_nlms_op,
+#endif
 };
 
 static int pfkey_process(struct sock *sk, struct sk_buff *skb, const struct sadb_msg *hdr)
-- 
1.8.4.93.g57e4c17

