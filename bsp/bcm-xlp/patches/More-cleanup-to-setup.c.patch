From 847d4fafb74bda40976cf0e4281ef6a72d7e53d4 Mon Sep 17 00:00:00 2001
From: Nebu Philips <nphilips@jakarta.razamicroelectronics.com>
Date: Tue, 25 May 2010 16:04:45 -0700
Subject: [PATCH 024/565] More cleanup to setup.c

Hookup 'mem=' parameters to add_memory_region,
cleanup prom_add_memory. Thus, use the mem map
that is passed in by the firmware (through the
FDT) or other components that boots Linux.

Based on Broadcom SDK 2.3.

Signed-off-by: Nebu Philips <nphilips@jakarta.razamicroelectronics.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/setup.c | 111 ++++++++---------------------------------
 1 file changed, 20 insertions(+), 91 deletions(-)

diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index ea3a1e9..80f83d3 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -121,6 +121,8 @@ extern void *simple_alloc_init(char *base, unsigned long heap_size,
 		unsigned long granularity, unsigned long max_allocs);
 
 unsigned int onlinemask = 0x1;
+int use_default_phymem = 0;
+struct boot_mem_map prom_map;
 
 /* Struct for temp. allocation
  * of sp/gp for secondary CPUs 
@@ -424,96 +426,16 @@ struct nlm_common_name_value_struct {
 	uint32_t *val;
 };
 
-/* Maintain in ascending order of 
- * the starting physical addresses 
- */
-static struct boot_mem_map_exclude_region _exclude_regions[2][MAX_EXCLUDE + 2];
-
-static struct boot_mem_map_exclude_region *exclude_regions = _exclude_regions[1];
-
-struct boot_mem_map prom_map;
-int use_default_phymem = TRUE;
-
-static void prom_add_memory(void)
+static void prom_add_memory(uint64_t start, uint64_t size)
 {
-	int i = 0, j = 0;
-	__u64 start = 0, end = 0, exc_start = 0, exc_end = 0;
 	__u64 pref_backup = 512;
 
-	if (use_default_phymem)
-		goto use_default;
-
-	/* TODO: Need to remove this hack
-	 */
-	if (prom_map.map[0].size == 0x0c000000)
-		prom_map.map[0].size = 0x0ff00000;
-	
-	for (i = 0; i < prom_map.nr_map; i++) {
-		start = prom_map.map[i].addr;
-		end = prom_map.map[i].addr + prom_map.map[i].size;
-
-		for (j = 0; j < MAX_EXCLUDE; j++) {
-			exc_start = exclude_regions[j].start;
-			exc_end = exclude_regions[j].end;
-			
-			if ((exc_start == 0) && (exc_end == 0)) /* Empty slot */
-				continue;
-
-			if (exc_start >= start && exc_start < end) {
-				if (exc_start == start) { /* Continuous exclude */
-					start = exc_end;
-					continue;
-				}
-				if (prom_map.map[i].type == BOOT_MEM_RAM) {
-
-					/*
-					 * memcpy/__copy_user prefetch, which
-					 * will cause a bus error for
-					 * KSEG/KUSEG addrs not backed by RAM.
-					 * Hence, reserve some padding for the
-					 * prefetch distance.
-				 	*/
-					if (exc_start-start > pref_backup) {
-						add_memory_region(start,
-									  exc_start-start-pref_backup, 
-									  (long)prom_map.map[i].type);
-					}
-					start = exc_end;
-				}
-			} 
-			else if ((exc_start < start) && (exc_end > start)) {
-				/* Overlapping excludes 
-				 */
-				start = exc_end;
-			}
-		}
-		if (start != end)
-			if (prom_map.map[i].type == BOOT_MEM_RAM) {
-				if (end-start > pref_backup)
-					add_memory_region(start, end-start-pref_backup, (long)prom_map.map[i].type);
-			}
-	}
-	
+	add_memory_region(
+			start, size - pref_backup, /* CHECK! */
+			BOOT_MEM_RAM);
 	return;
-	
- use_default:
-	printk("Using Default Physical Mem Map\n"); 
-	/* 255m@1m 
-	 */
-	add_memory_region (DEF_PHYMEM_START_ADDR, 
-			DEF_PHYMEM_SIZE-pref_backup, (long)BOOT_MEM_RAM);
-	xlr_loader_support = 0;
 }
 
-/* disable dedicated interrupt vector for virtual mips mode */
-void disable_divec(void)
-{
-    int i;
-    for (i = 0; i < NR_CPUS; i++)
-        cpu_data[i].options &= ~MIPS_CPU_DIVEC;
-
-    return;
-}
 
 extern void (*board_nmi_handler_setup)(void );
 
@@ -627,9 +549,22 @@ static int fdt_process(void)
 					(regs[i+1]>>20), (regs[i]>>20));
 			strcat(arcs_cmdline, domstr);
 			memset((void *)&domstr, '\0', sizeof(domstr));
+
+			/* Register these memory regions
+			 */
+			if (!use_default_phymem)
+				prom_add_memory(regs[i], regs[i+1]);
 		}
 	}
 		
+	if (use_default_phymem) {
+		printk("Using Default Physical Mem Map\n"); 
+		add_memory_region (
+				DEF_PHYMEM_START_ADDR, 
+				DEF_PHYMEM_SIZE-512, 	/* CHECK! */
+				BOOT_MEM_RAM);
+	}
+	
 	printk("FDT Cmdline: %s\n", arcs_cmdline);
 
 	/* extract CPU online mask for 
@@ -658,15 +593,9 @@ void __init prom_init(void)
 	setup_default_configuration();
 
 	fdt_process();
-
-	/* TODO: Use regular memory map */
-	 
-	use_default_phymem = TRUE;
-
+	
 	nlm_common_ebase = read_c0_ebase() & (~((1 << 12) - 1));
 
-	prom_add_memory();
-
 	smp_boot.online_map = (1 << hard_smp_processor_id());
 
 	wakeup_secondary_cpus();
-- 
1.8.4.93.g57e4c17

