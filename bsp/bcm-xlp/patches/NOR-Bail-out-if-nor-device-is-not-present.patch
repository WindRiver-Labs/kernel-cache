From 99c62a633cb5e62b753213f37bf79c2c2fe8f3a9 Mon Sep 17 00:00:00 2001
From: Divya Sakthidharan <divyas@broadcom.com>
Date: Mon, 12 Nov 2012 17:43:52 +0530
Subject: [PATCH 422/565] NOR: Bail out if nor device is not present

If nor device is not present, bail out from init function

Based on Broadcom SDK 2.3.

Signed-off-by: Divya Sakthidharan <divyas@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/xlp_nor.c | 48 +++++++++++++++++++++++++++++-----------
 1 file changed, 35 insertions(+), 13 deletions(-)

diff --git a/arch/mips/netlogic/xlp/xlp_nor.c b/arch/mips/netlogic/xlp/xlp_nor.c
index 1893da5..df3d3eb 100644
--- a/arch/mips/netlogic/xlp/xlp_nor.c
+++ b/arch/mips/netlogic/xlp/xlp_nor.c
@@ -4,24 +4,27 @@
 #include <linux/mtd/partitions.h>
 #include <linux/mtd/physmap.h>
 #include <asm/netlogic/xlp.h>
+#include <asm/netlogic/xlp8xx/cpu.h>
 
-#define XLP_NOR_BASEADDR       0x40
-#define XLP_NOR_SIZE           0x01000000 /* 16MB */
-#define XLP_NOR_WIDTH          2 /* 16-bits */
+//#define XLP_NOR_WIDTH           2 /* 16-bits */
+#define XLP_PCIE_FLASH_DEV      7 
+#define XLP_PCIE_NOR_FUNC       0
 
 
-static __inline__ int32_t nor_reg_read(int node,  int regidx)
+#define XLP_NOR_CS0_BASEADDRESS_REG         0x40
+#define XLP_NOR_CS1_BASEADDRESS_REG         0x41
+#define XLP_NOR_CS0_BASELIMIT_REG           0x48
+#define XLP_NOR_CS1_BASELIMIT_REG           0x49
+
+
+static __inline__ uint32_t nor_reg_read(int node,  int regidx)
 {
         volatile uint64_t mmio;
-        mmio = nlm_hal_get_dev_base(node, 0, XLP_PCIE_SPI_NOR_FLASH_DEV,
-		XLP_PCIE_SPI_NOR); 
+        mmio = nlm_hal_get_dev_base(node, 0, XLP_PCIE_FLASH_DEV,
+		XLP_PCIE_NOR_FUNC); 
         return nlm_hal_read_32bit_reg(mmio, regidx);
 }
 
-
-#define XLP_NOR_STARTADDR       (nor_reg_read(0, XLP_NOR_BASEADDR) << 8)
-#define XLP_NOR_ENDADDR         XLP_NOR_STARTADDR + XLP_NOR_SIZE
-
 static struct mtd_partition xlp_nor_partitions[] = {
         {
                 .name   = "X-Loader(RW)",
@@ -83,10 +86,29 @@ struct platform_device xlp_nor_flash = {
 
 int xlp_nor_flash_dev_init(void){
         int res;
+	uint32_t base, limit;
+	u32 nor_cs;
+	volatile u32 *mmio = cpu_io_mmio(0, SYS);
+	nor_cs = (nlm_hal_read_32bit_reg((uint64_t)mmio,1) & 0xF) == 6 ? 1 : 0;
+
+	if(nor_cs)	{
+		base = nor_reg_read(0,XLP_NOR_CS1_BASEADDRESS_REG);
+		limit = nor_reg_read(0,XLP_NOR_CS1_BASELIMIT_REG);
+	}
+	else	{
+		base = nor_reg_read(0,XLP_NOR_CS0_BASEADDRESS_REG);
+		limit = nor_reg_read(0,XLP_NOR_CS0_BASELIMIT_REG);
+	}
+
 	
-        xlp_nor_flash_resource.start  = XLP_NOR_STARTADDR,
-        xlp_nor_flash_resource.end    = XLP_NOR_ENDADDR,
-        res = platform_device_register(&xlp_nor_flash);
+	if((base == 0xFFFFFFFF) && (limit == 0))	{
+		return -1;
+	}
+
+	xlp_nor_flash_resource.start  = base << 8;
+	xlp_nor_flash_resource.end = (limit + 1) << 8;	
+        
+	res = platform_device_register(&xlp_nor_flash);
         if (res)
                 printk("unable to register xlp-nor-flash: %d\n", res);
        
-- 
1.8.4.93.g57e4c17

