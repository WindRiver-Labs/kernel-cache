From 8bb07f2e5d4550a8c85eb72f5318c1565a468205 Mon Sep 17 00:00:00 2001
From: Om Narasimhan <onarasimhan@netlogicmicro.com>
Date: Thu, 8 Sep 2011 16:04:06 -0700
Subject: [PATCH 259/565] Compilation warnings removal

Compilation warnings removal and boot up message cleanups.
fdebug flag changes to KERN_DEBUG and removed redfinition of
nlm_hal_linux_kernel. Changed printks to have loglevel

Based on Broadcom SDK 2.3.

Signed-off-by: Om Narasimhan <onarasimhan@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/netlogic/xlp8xx/cpu.h |  2 +-
 arch/mips/include/asm/netlogic/xlp_irq.h    |  2 +-
 arch/mips/netlogic/xlp/platform.c           |  1 -
 arch/mips/pci/pci-xlp.c                     | 17 ++++++++---------
 4 files changed, 10 insertions(+), 12 deletions(-)

diff --git a/arch/mips/include/asm/netlogic/xlp8xx/cpu.h b/arch/mips/include/asm/netlogic/xlp8xx/cpu.h
index cbde2c2..ab1a881 100644
--- a/arch/mips/include/asm/netlogic/xlp8xx/cpu.h
+++ b/arch/mips/include/asm/netlogic/xlp8xx/cpu.h
@@ -143,7 +143,7 @@
 				HDR_OFFSET + (y<<18) + (BRIDGE) + 0x300)
 
 #ifndef __ASSEMBLY__
-#define cpu_io_mmio(node,offset)	((__u32 *)(DEFAULT_CPU_IO_BASE + \
+#define cpu_io_mmio(node,offset)	((__u32 *)((u64)DEFAULT_CPU_IO_BASE + \
 					(node<<18) + (offset) + HDR_OFFSET))
 
 #define dmc_io_mmio(node,offset)\
diff --git a/arch/mips/include/asm/netlogic/xlp_irq.h b/arch/mips/include/asm/netlogic/xlp_irq.h
index a4bb382..b65219a 100644
--- a/arch/mips/include/asm/netlogic/xlp_irq.h
+++ b/arch/mips/include/asm/netlogic/xlp_irq.h
@@ -42,7 +42,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
  * XXX
  */
 #define fdebug(fmt,arg...)\
-	printk(KERN_WARNING "%s:%d " fmt, __FILE__, __LINE__, ##arg)
+	printk(KERN_DEBUG "%s:%d " fmt, __FILE__, __LINE__, ##arg)
 
 #define XLP_IRQ_DUMMY_UART           2
 #define XLP_IRQ_IPI_SMP_FUNCTION     3
diff --git a/arch/mips/netlogic/xlp/platform.c b/arch/mips/netlogic/xlp/platform.c
index 8e9de10..231fc7d 100644
--- a/arch/mips/netlogic/xlp/platform.c
+++ b/arch/mips/netlogic/xlp/platform.c
@@ -217,7 +217,6 @@ static int xlp_find_pci_dev(void)
 						pres[0].end	= mmio;
 						pres[0].flags	= IORESOURCE_MEM;
 						irt = (nlm_hal_read_32bit_reg(mmio, DEV_IRT_INFO) & 0xFFFF);
-						printk(KERN_WARNING "XXXX IRT = %#x mmio = %#llx\n", irt, mmio);
 						irq = xlp_irt_to_irq(irt);
 
 						pres[1].start = irq;
diff --git a/arch/mips/pci/pci-xlp.c b/arch/mips/pci/pci-xlp.c
index 2bf553a..1a8f1bf 100644
--- a/arch/mips/pci/pci-xlp.c
+++ b/arch/mips/pci/pci-xlp.c
@@ -41,7 +41,6 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #include <asm/netlogic/io.h>
 #include <asm/netlogic/iomap.h>
 #include <asm/netlogic/sim.h>
-#define NLM_HAL_LINUX_KERNEL
 #include <asm/netlogic/xlp_hal_pic.h>
 
 extern int pci_probe_only;
@@ -260,12 +259,12 @@ static void pcie_controller_init_done(void)
 	 * Get the link status from pcie lane config from 34.9.7.2 XLP PRM */
 	mode = (syscfg >> 19) & 0xf;
 	while (count < 4) {
-		printk(KERN_WARNING "Controller %d is in %s mode\n",
+		printk(KERN_DEBUG "Controller %d is in %s mode\n",
 				count, (mode & (1 << count)) ? "RC" : "EP");
 		count++;
 	}
 	plc = (syscfg >> 23) & 0x3;
-	printk(KERN_WARNING "PLC = %#x, mode = %#x\n", plc, mode);
+	printk(KERN_DEBUG "PLC = %#x, mode = %#x\n", plc, mode);
 	switch (plc) {
 	/* The correlation between plc and lane config is very specific to XLP
 	 * and not very clear in PRM
@@ -331,7 +330,7 @@ static void pcie_controller_init_done(void)
 		}
 		break;
 	}
-	printk("[%s]: PCIE Controller initialization done\n", __FUNCTION__);
+	printk(KERN_DEBUG "[%s]: PCIE Controller initialization done\n", __FUNCTION__);
 	return;
 }
 
@@ -460,7 +459,7 @@ int __init pcibios_map_irq(const struct pci_dev *dev, u8 slot, u8 pin)
 	}
 	row = (xlp_get_power_on_reset_cfg(0) >> 23) & 0x3;
 	fn = xlp_ctrl_fn_from_dev(dev);
-	dev_printk(KERN_WARNING, &dev->dev, "Assigning interrupt %#x\n", xlp_irq_map[row][fn][0]);
+	dev_printk(KERN_DEBUG, &dev->dev, "Assigning interrupt %#x\n", xlp_irq_map[row][fn][0]);
 	return xlp_irq_map[row][fn][0];
 }
 
@@ -738,7 +737,7 @@ static int __init pcibios_init(void)
 	/* Map the PCIX CFG space */
 	pci_config_base = ioremap(DEFAULT_XLP_PCI_CONFIG_BASE, (32<<20));
 	if (!pci_config_base) {
-		printk("Unable to map PCI config space!\n");
+		printk(KERN_ERR "Unable to map PCI config space!\n");
 		return 1;
 	}
 
@@ -747,12 +746,12 @@ static int __init pcibios_init(void)
 
 	pci_io_base = ioremap(phys, size);
 	if (!pci_io_base) {
-		printk("[%s]: Unable to IO-Remap phys=%lx, size=%lx\n",
+		printk(KERN_WARNING "[%s]: Unable to IO-Remap phys=%lx, size=%lx\n",
 		       __FUNCTION__, phys, size);
 		/* Eventually this is going to panic() */
 	}
 	else {
-		printk("[%s]: IO-Remapped phys=%lx, size=%lx to vaddr=%p\n",
+		printk(KERN_DEBUG "[%s]: IO-Remapped phys=%lx, size=%lx to vaddr=%p\n",
 		       __FUNCTION__, phys, size, pci_io_base);
 	}
 	set_io_port_base((unsigned long) pci_io_base);
@@ -763,7 +762,7 @@ static int __init pcibios_init(void)
 	ioport_resource.start =  0;
 	ioport_resource.end   = ~0;
 
-	printk("Registering XLP PCIE Controller. \n");
+	printk(KERN_DEBUG "Registering XLP PCIE Controller. \n");
 	pcie_controller_init_done();
 	register_pci_controller(&xlp_controller);
 
-- 
1.8.4.93.g57e4c17

