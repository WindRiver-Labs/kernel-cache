From d9a86221290bc1f292574741daae3f1775fee9fe Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Mon, 6 May 2013 17:28:05 +0800
Subject: [PATCH 507/565] bcm-xlp: add two DTS files for ICI

Add two DTS files for ICI.
master-mnxlp8xx-linux.dts is for dual-node boards;
master-mn4xlp8xx-linux.dts is for quad-node boards.

Based on SDK 20130412-2.3:
commit 69762208ea6ca0639e6818ddad03989568f33285
dts: Updated the dts files to follow the standard Linux convention.

Based on Broadcom SDK 2.3.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/boot/dts/master-mn4xlp8xx-linux.dts | 1474 +++++++++++++++++++++++++
 arch/mips/boot/dts/master-mnxlp8xx-linux.dts  | 1207 ++++++++++++++++++++
 2 files changed, 2681 insertions(+)
 create mode 100644 arch/mips/boot/dts/master-mn4xlp8xx-linux.dts
 create mode 100644 arch/mips/boot/dts/master-mnxlp8xx-linux.dts

diff --git a/arch/mips/boot/dts/master-mn4xlp8xx-linux.dts b/arch/mips/boot/dts/master-mn4xlp8xx-linux.dts
new file mode 100644
index 0000000..ae03080
--- /dev/null
+++ b/arch/mips/boot/dts/master-mn4xlp8xx-linux.dts
@@ -0,0 +1,1474 @@
+/* XLP8XX Device Tree Source
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "netlogic,XLP-EVP";
+        compatible = "netlogic,xlp";
+        #address-cells = <2>;
+        #size-cells = <2>;
+	/*memory range for linux. This will not appear in dom0*/
+        memory {
+                device_type = "memory";
+                reg =  <0 0x01000000 0 0x0B000000   
+                        0 0x20000000 0 0xa0000000
+                        0 0xe0000000 0 0x20000000>;
+        };
+	
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <0>;
+		bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0xffffffff -- ";
+		domain_heap = <0x80000000 0x20000000>;
+	};
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+			#nodes = <2>;
+			#cpumask-cells=<2>;
+
+			cpu {
+				onlinemask = <0xffffffff 0xffffffff>;
+                                nae-rx-vc = <0>;
+                                nae-fb-vc = <1>;
+                                napi-vc-mask = <0xb>;
+				sae-rx-vc = <0>; /* sharing with nae */
+				sae-rx-sync-vc  = <3>; /* should be exclusive */
+				ipsec-async-vc  = <3>;
+				ipsec-sync-vc   = <2>;
+			};
+			uart {
+				id = <0>;
+				owner = <1>;
+				sharedcfg = <0x1f000000>;
+			};
+                        fmn {
+                                node_0_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_1_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_2_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_3_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;                       
+			};
+			nae {
+				freein-fifo-mask = <0xffff 0xffff 0 0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <32 32 32 32>;
+				/* hw entries 40 for 2 nodes , 20 fifos each */
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <40 40 40 40>;
+			};
+			owner-config {
+				nae = <0x3>;   // currently for node0 and node1
+				sae = <0x1>;   // for node0
+				rsa = <0x1>;
+				fmn = <0xf>;
+			};
+
+		};
+	};
+
+	chosen {
+		bootargs = "root=/dev/nfs rw nfsroot=192.168.0.1:/rootfs,nfsvers=3 ip=192.168.0.2:192.168.0.1:192.168.0.1:255.255.254.0:xlp:eth2:off console=ttyS0,115200";
+	};
+
+	/* These binaries are downloaded at the resp physical memory locations
+	 * by their corresponding bootstrapping loaders. For example,
+	 * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
+	 * at 1M, hypervisor by u-boot hypervisor at 136M.
+	 * On simulator all these binaries are pre-loaded by using '-F' option
+	 * for convenience. On silicon, they will be loaded by their corresponding
+	 * temporary download locations the stage-1/stage-2 firmware
+	 */
+	firmware-download {
+		u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
+		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
+		dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
+		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
+	};
+
+	soc {
+		#address-cells = <2>;
+		#size-cells = <1>;
+		compatible = "simple-bus";
+		ranges = <0 0  0 0x18000000  0x04000000   // PCIe CFG
+			  1 0  0 0x16000000  0x01000000>; // GBU chipselects
+
+		serial0: serial@30000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x30100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <133333333>;
+			interrupt-parent = <&pic>;
+			interrupts = <17>;
+		};
+		serial1: serial@31000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x31100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <133333333>;
+			interrupt-parent = <&pic>;
+			interrupts = <18>;
+		};
+		i2c0: ocores@32000 {
+			compatible = "opencores,i2c-ocores";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x32100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <32000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <30>;
+		};
+		i2c1: ocores@33000 {
+			compatible = "opencores,i2c-ocores";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x33100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <32000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <31>;
+
+			rtc@68 {
+				compatible = "dallas,ds1374";
+				reg = <0x68>;
+			};
+
+			dtt@4c {
+				compatible = "national,lm90";
+				reg = <0x4c>;
+			};
+		};
+		pic: pic@4000 {
+			interrupt-controller;
+			#address-cells = <0>;
+			#interrupt-cells = <1>;
+			reg = <0 0x4000 0x200>;
+		};
+
+		nor_flash@1,0 {
+			compatible = "cfi-flash";
+			#address-cells = <1>;
+			#size-cells = <1>;
+			bank-width = <2>;
+			reg = <1 0 0x1000000>;
+
+			partition@0 {
+				label = "x-loader";
+				reg = <0x0 0x100000>; /* 1M */
+				read-only;
+			};
+
+			partition@100000 {
+				label = "u-boot";
+				reg = <0x100000 0x100000>; /* 1M */
+			};
+
+			partition@200000 {
+				label = "kernel";
+				reg = <0x200000 0x500000>; /* 5M */
+			};
+
+			partition@700000 {
+				label = "rootfs";
+				reg = <0x700000 0x800000>; /* 8M */
+			};
+
+			partition@f00000 {
+				label = "env";
+				reg = <0xf00000 0x100000>; /* 1M */
+				read-only;
+			};
+		};
+fmn@node-0 {
+        default-credits = <50>;
+        default-queue-size = <16384>;
+        fmn-spill-mem-base = <0x00000000 0x10000000>; /*0 - dynamic allocation, only for 64 bit linux */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config {
+		/* credits from station     
+		   "cpu popq pcie0 pcie1 pcie2 pcie3 gdx rsa crypto cmp poe nae regx srio"
+		   The order and number of station should be matching with the list given above
+		   Here, credits 0 means the default credits. 
+		   Right now there is no way to configure credit of zero */
+
+                cpu {
+                        queue-size = <32768>; /* queue size for all the cpu vcs */
+                        credits-from {
+                                node-0 = <0 0 0 0 0 0 0 0 0 0 500 0 0 150>;
+                        };
+                };
+
+                nae {
+                        credits-from {
+                                node-0 = <100 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                        };
+                };
+               srio {
+                       credits-from {
+                                node-0 = <150 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                        };
+               };
+	};
+};
+fmn@node-1{
+        default-credits = <50>;
+        default-queue-size = <16384>;
+        fmn-spill-mem-base = <0x00000000 0x00000000>; /*0 - dynamic allocation */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config{
+
+	};
+};
+fmn@node-2{
+
+};
+fmn@node-3{
+
+};
+  nae@node-0 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	ucore {
+		src@1 {
+			num-opcodes = <0x240>;
+			timestamp = "Tue Apr 23 13:07:50 2013\n";
+			mask = <0xffff>;
+			opcodes = <0x3c1c0010 0x279cf808 0x3c020010 0x2442f808 0x3c030010 0x2463f808 0xac400000 0x43082b 0x1420fffd 0x24420004 0x3c1d0010 0x27bdf9c0 0x27a50020 0x27a60028 0xaca00000 0xacc00000 0xc000029 0x2021 0x1000ffff 0x0 0x3c020000 0x8c420934 0x27bdffe0 0x2403ffff 0xafbf001c 0xafb10018 0x10430009 0xafb00014 0x3c100000 0x26100934 0x2411ffff 0x40f809 0x2610fffc 0x8e020000 0x1451fffc 0x0 0x8fbf001c 0x8fb10018 0x8fb00014 0x3e00008 0x27bd0020 0x27bdfea8 0xafa00030 0xafa0002c 0xafa00028 0xafa00024 0xafa00020 0xafa0001c 0xafa00018 0xafa00014 0xafa00010 0xafa0000c 0xafa00008 0xafa00004 0x8fa30004 0x2c620048 0x10400012 0x3c040001 0x34848000 0x8fb80004 0x8fad0004 0x187080 0xd6080 0x1845821 0x8d6a0000 0x27af0034 0x1ee4821 0xad2a0000 0x8fa80004 0x25070001 0xafa70004 0x8fa60004 0x2cc50048 0x14a0fff1 0x0 0x8fa20040 0x30590002 0x13200050 0x3c020010 0x3c1f2aaa 0x37e3aaab 0x24060800 0x3c050178 0x3c040170 0x34088004 0x8d070000 0x8c4ffe4c 0xf3c02 0xafa70008 0x8c4dfe50 0xd7402 0xafae002c 0x904cfe61 0x318b001f 0xafab0000 0x8fab0008 0x8fac002c 0x8fb80000 0x3030018 0x184fc3 0x4010 0x1094023 0x85040 0x8f8c0 0x250d0006 0x3eac823 0xd7080 0x3193823 0x3ae4821 0x8d2a0034 0x77880 0x8fb90048 0x1e73821 0xeaf806 0x33ef001f 0x19c200 0x8fae0038 0x1f86821 0x8faa0044 0xd4880 0x1140001d 0x12e4821 0x299805dd 0x13000020 0x0 0x250a000c 0xa6080 0x3ac5021 0x8d5f0034 0xffc806 0x11660007 0x332a001f 0x25080012 0x86880 0x3ad7021 0x8dcb0034 0xeb4006 0x310a001f 0x31390fff 0x19c200 0x370f0001 0x34088030 0xad0f0000 0x8fa70040 0x30e90008 0x11200006 0xa5380 0x34088000 0x8000054 0xad040000 0x8000085 0x2508000c 0x145f825 0x34088000 0x8000054 0xad1f0000 0x800007e 0x250a0012 0x8fa40040 0x30830001 0x146000e2 0x3c020010 0x8fa60040 0x30c50004 0x10a00198 0x3c02dead 0x3c030002 0x80000ae 0x3442beef 0xafa00004 0x8fa70004 0x2ce90064 0x1520017f 0x0 0x8c6fbffc 0x15e2fff9 0x3c0d0001 0x3c03dead 0x3463beff 0x3c192aaa 0x3c1f0178 0x3c080170 0x3c020010 0x2466fff0 0x35a5c000 0x3724aaab 0x240a0800 0x27e90018 0x25070018 0x34088004 0x8d0c0000 0x8c59fe4c 0x194402 0xafa80008 0x8c58fe50 0x185c02 0xafab002c 0x8c4ffe54 0x31ed00ff 0xafad0018 0x8c4efe00 0xafae0010 0x8c5ffe04 0xafbf000c 0x8c59fe08 0xafb90020 0x9058fe01 0x904bfe02 0x186a00 0xb7c00 0x8fa80018 0x904bfe05 0x1aff821 0x904efe00 0x904ffe06 0x9059fe03 0xac48fe0c 0x3eec021 0x1834021 0x905ffe04 0x196600 0xb7200 0xf6c00 0x1cdc821 0x30cc021 0x904cfe07 0x33f7821 0x904efe09 0x905ffe0a 0xc5e00 0x1eb6821 0xe6200 0x904bfe08 0x904efe0b 0x1fcc00 0x1997821 0x1ebc821 0xefe00 0x33f6021 0x188c821 0x195f02 0x197900 0x30cf823 0x16f7025 0x3ee7826 0x1a86821 0xfc180 0xf4682 0x1af6023 0x1185825 0x16cc026 0x32df821 0x18ce02 0x186a00 0x3f84023 0x32d7025 0x1c8c826 0x1ff6021 0x197c02 0x19fc00 0x30cc021 0x1ff5825 0x1996023 0x16cf826 0x1f4342 0x1f6cc0 0x10d7025 0x31f7823 0x1cf7826 0x904dfe0f 0x904efe0e 0x338c821 0xf5f02 0xf6100 0x16cc025 0x3f9f821 0x904cfe0c 0x32f4023 0xe5c00 0xdce00 0x904dfe0d 0x1ff7821 0x3084026 0x32bc021 0x30cc821 0xd7200 0xf6482 0xfc380 0x32e5821 0x1986825 0x10fc826 0x32dc823 0x17ff821 0x197542 0x195ac0 0x1cb4025 0x33f6026 0x1886023 0xcc1c2 0xcfe40 0x31f6825 0x18f5826 0x16d5823 0xb7402 0xb4400 0x1c87825 0x179c026 0x30fc023 0x18ff02 0x18c900 0x30c4026 0x3f96825 0x10d7023 0xe7c82 0xe6380 0x1cbc826 0x1ecf825 0x33f6823 0x1b84026 0xd7202 0x10e5823 0x316f0fff 0xafaf0014 0x8fac0014 0xac4cfe04 0xac46fe00 0x8fbf0014 0x1fc880 0x325c021 0x8f0d0000 0x31ae001f 0xafae0000 0x8fad0008 0x8fae002c 0x8fb90000 0x3240018 0x1947c3 0x5810 0x1685823 0xb6040 0xb78c0 0x1ecf823 0x256f0006 0xf6080 0x33f4023 0x3acf821 0x8ff90034 0x8c080 0x8faf0048 0x3084021 0x119c006 0x330c001f 0xfca00 0x1997821 0x8fbf0038 0x8fac0044 0xfc080 0x118000cf 0x31f7821 0x29cc05dd 0x118000d2 0x0 0x256c000c 0xcc880 0x3b9c021 0x8f0e0034 0x10ef806 0x11aa0007 0x33ec001f 0x256b0012 0xbf880 0x3bf6021 0x8d8b0034 0x10b6806 0x31ac001f 0x31f90fff 0x19c200 0x370e0001 0x34088030 0xad0e0000 0x8fa80040 0x310f0008 0x11e000b8 0xc5b80 0x34088000 0x80000bd 0xad070000 0x3c089e37 0x3c0c2aaa 0x2446fe4c 0x24050006 0x250379b9 0x3584aaab 0x240a0800 0x3c090178 0x3c070170 0x34088004 0x8d0b0000 0x8c4cfe4c 0xcfc02 0xafbf0008 0x8c59fe4c 0x19c202 0x330f000f 0xafaf0030 0x8c4dfe50 0xd7402 0xafae002c 0x8c4bfe54 0x316800ff 0xafa80018 0x8fac0030 0xcf880 0x3e64021 0x8d19000c 0x19c302 0x330f000f 0xafaf0028 0x8d0d000c 0x31ae003f 0xafae0024 0x8fab0018 0x11650071 0x0 0x8c4ffe00 0xafaf0010 0x8c4cfe04 0xafac000c 0x8c48fe08 0xafa80020 0x8fae0010 0x8fab000c 0x8fa80020 0x1c3f821 0x1637821 0x3e86823 0x1afc823 0x8c342 0x338c826 0x1e86023 0x1995823 0x197200 0x1cb7026 0x119f823 0x3eec023 0xe6b42 0x1b8c026 0x32e7823 0x1f84023 0x186302 0x1886026 0x1d85823 0x16cc823 0xcfc00 0x3f9c826 0x30c6823 0x1b97023 0x197942 0x1ee7026 0x1994023 0x10ef823 0xe58c2 0x17f6026 0x32ec023 0x30c7823 0xc6a80 0x1af5826 0x1cc4023 0x10bf823 0xbcbc2 0x33fc026 0xafb80014 0x8fad0014 0x31af001f 0xafaf0000 0x8fad0008 0x8fae002c 0x8fbf0000 0x3e40018 0x1f47c3 0x5810 0x1685823 0xbc840 0xb60c0 0x1997823 0x256c0006 0xcc880 0x3ef4023 0x3b9f821 0x8fef0034 0x8c080 0x8fac0048 0x3084021 0x10fc006 0x3319001f 0xc7a00 0x32f6021 0x8fbf0038 0x8fb90044 0xcc080 0x1320001d 0x31f7821 0x29ce05dd 0x11c00032 0x0 0x256c000c 0xc6080 0x3acc821 0x8f3f0034 0x11fc006 0x11aa0007 0x330c001f 0x256b0012 0xbc080 0x3b87021 0x8dcb0034 0x10b6806 0x31ac001f 0x31ed0fff 0xdca00 0x373f0001 0x34088030 0xad1f0000 0x8fa80040 0x310f0008 0x11e00006 0xc5b80 0x34088000 0x800018c 0xad070000 0x8000201 0x256b000c 0x1696025 0x34088000 0x800018c 0xad0c0000 0x8fae0024 0x31cb0010 0x1160ff8d 0x0 0x8fb90028 0x8fbf0030 0x8faf002c 0x3f9c021 0x186880 0x15afff86 0x0 0x8d0e0004 0xe5c02 0xafab001c 0x8fac001c 0x3188001f 0x80001db 0xafa80000 0x80001fa 0x256c0012 0x8fb80004 0x270e0001 0xafae0004 0x8fa40004 0x2c8a0064 0x1140fe7c 0x0 0x800022c 0x0 0x8000172 0x256b000c 0x1696825 0x34088000 0x80000bd 0xad0d0000 0x800016b 0x256c0012 0x1021 0x3e00008 0x27bd0158>;
+		};
+	};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00100000>; // spill address is allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+
+//		poe-spill-address = <0xec00000>;
+//		poe-spill-length = <0x10000>;
+
+		// Comminting the actual value to be given to
+		// POE as POE is not getting called in the
+		// regular case
+		poe-spill-address = <0x0>;
+		poe-spill-length =  <0x0>;
+		
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+	};
+};
+   nae@node-1 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	ucore {
+		src@1 {
+			num-opcodes = <0x240>;
+			timestamp = "Tue Apr 23 13:07:50 2013\n";
+			mask = <0xffff>;
+			opcodes = <0x3c1c0010 0x279cf808 0x3c020010 0x2442f808 0x3c030010 0x2463f808 0xac400000 0x43082b 0x1420fffd 0x24420004 0x3c1d0010 0x27bdf9c0 0x27a50020 0x27a60028 0xaca00000 0xacc00000 0xc000029 0x2021 0x1000ffff 0x0 0x3c020000 0x8c420934 0x27bdffe0 0x2403ffff 0xafbf001c 0xafb10018 0x10430009 0xafb00014 0x3c100000 0x26100934 0x2411ffff 0x40f809 0x2610fffc 0x8e020000 0x1451fffc 0x0 0x8fbf001c 0x8fb10018 0x8fb00014 0x3e00008 0x27bd0020 0x27bdfea8 0xafa00030 0xafa0002c 0xafa00028 0xafa00024 0xafa00020 0xafa0001c 0xafa00018 0xafa00014 0xafa00010 0xafa0000c 0xafa00008 0xafa00004 0x8fa30004 0x2c620048 0x10400012 0x3c040001 0x34848000 0x8fb80004 0x8fad0004 0x187080 0xd6080 0x1845821 0x8d6a0000 0x27af0034 0x1ee4821 0xad2a0000 0x8fa80004 0x25070001 0xafa70004 0x8fa60004 0x2cc50048 0x14a0fff1 0x0 0x8fa20040 0x30590002 0x13200050 0x3c020010 0x3c1f2aaa 0x37e3aaab 0x24060800 0x3c050178 0x3c040170 0x34088004 0x8d070000 0x8c4ffe4c 0xf3c02 0xafa70008 0x8c4dfe50 0xd7402 0xafae002c 0x904cfe61 0x318b001f 0xafab0000 0x8fab0008 0x8fac002c 0x8fb80000 0x3030018 0x184fc3 0x4010 0x1094023 0x85040 0x8f8c0 0x250d0006 0x3eac823 0xd7080 0x3193823 0x3ae4821 0x8d2a0034 0x77880 0x8fb90048 0x1e73821 0xeaf806 0x33ef001f 0x19c200 0x8fae0038 0x1f86821 0x8faa0044 0xd4880 0x1140001d 0x12e4821 0x299805dd 0x13000020 0x0 0x250a000c 0xa6080 0x3ac5021 0x8d5f0034 0xffc806 0x11660007 0x332a001f 0x25080012 0x86880 0x3ad7021 0x8dcb0034 0xeb4006 0x310a001f 0x31390fff 0x19c200 0x370f0001 0x34088030 0xad0f0000 0x8fa70040 0x30e90008 0x11200006 0xa5380 0x34088000 0x8000054 0xad040000 0x8000085 0x2508000c 0x145f825 0x34088000 0x8000054 0xad1f0000 0x800007e 0x250a0012 0x8fa40040 0x30830001 0x146000e2 0x3c020010 0x8fa60040 0x30c50004 0x10a00198 0x3c02dead 0x3c030002 0x80000ae 0x3442beef 0xafa00004 0x8fa70004 0x2ce90064 0x1520017f 0x0 0x8c6fbffc 0x15e2fff9 0x3c0d0001 0x3c03dead 0x3463beff 0x3c192aaa 0x3c1f0178 0x3c080170 0x3c020010 0x2466fff0 0x35a5c000 0x3724aaab 0x240a0800 0x27e90018 0x25070018 0x34088004 0x8d0c0000 0x8c59fe4c 0x194402 0xafa80008 0x8c58fe50 0x185c02 0xafab002c 0x8c4ffe54 0x31ed00ff 0xafad0018 0x8c4efe00 0xafae0010 0x8c5ffe04 0xafbf000c 0x8c59fe08 0xafb90020 0x9058fe01 0x904bfe02 0x186a00 0xb7c00 0x8fa80018 0x904bfe05 0x1aff821 0x904efe00 0x904ffe06 0x9059fe03 0xac48fe0c 0x3eec021 0x1834021 0x905ffe04 0x196600 0xb7200 0xf6c00 0x1cdc821 0x30cc021 0x904cfe07 0x33f7821 0x904efe09 0x905ffe0a 0xc5e00 0x1eb6821 0xe6200 0x904bfe08 0x904efe0b 0x1fcc00 0x1997821 0x1ebc821 0xefe00 0x33f6021 0x188c821 0x195f02 0x197900 0x30cf823 0x16f7025 0x3ee7826 0x1a86821 0xfc180 0xf4682 0x1af6023 0x1185825 0x16cc026 0x32df821 0x18ce02 0x186a00 0x3f84023 0x32d7025 0x1c8c826 0x1ff6021 0x197c02 0x19fc00 0x30cc021 0x1ff5825 0x1996023 0x16cf826 0x1f4342 0x1f6cc0 0x10d7025 0x31f7823 0x1cf7826 0x904dfe0f 0x904efe0e 0x338c821 0xf5f02 0xf6100 0x16cc025 0x3f9f821 0x904cfe0c 0x32f4023 0xe5c00 0xdce00 0x904dfe0d 0x1ff7821 0x3084026 0x32bc021 0x30cc821 0xd7200 0xf6482 0xfc380 0x32e5821 0x1986825 0x10fc826 0x32dc823 0x17ff821 0x197542 0x195ac0 0x1cb4025 0x33f6026 0x1886023 0xcc1c2 0xcfe40 0x31f6825 0x18f5826 0x16d5823 0xb7402 0xb4400 0x1c87825 0x179c026 0x30fc023 0x18ff02 0x18c900 0x30c4026 0x3f96825 0x10d7023 0xe7c82 0xe6380 0x1cbc826 0x1ecf825 0x33f6823 0x1b84026 0xd7202 0x10e5823 0x316f0fff 0xafaf0014 0x8fac0014 0xac4cfe04 0xac46fe00 0x8fbf0014 0x1fc880 0x325c021 0x8f0d0000 0x31ae001f 0xafae0000 0x8fad0008 0x8fae002c 0x8fb90000 0x3240018 0x1947c3 0x5810 0x1685823 0xb6040 0xb78c0 0x1ecf823 0x256f0006 0xf6080 0x33f4023 0x3acf821 0x8ff90034 0x8c080 0x8faf0048 0x3084021 0x119c006 0x330c001f 0xfca00 0x1997821 0x8fbf0038 0x8fac0044 0xfc080 0x118000cf 0x31f7821 0x29cc05dd 0x118000d2 0x0 0x256c000c 0xcc880 0x3b9c021 0x8f0e0034 0x10ef806 0x11aa0007 0x33ec001f 0x256b0012 0xbf880 0x3bf6021 0x8d8b0034 0x10b6806 0x31ac001f 0x31f90fff 0x19c200 0x370e0001 0x34088030 0xad0e0000 0x8fa80040 0x310f0008 0x11e000b8 0xc5b80 0x34088000 0x80000bd 0xad070000 0x3c089e37 0x3c0c2aaa 0x2446fe4c 0x24050006 0x250379b9 0x3584aaab 0x240a0800 0x3c090178 0x3c070170 0x34088004 0x8d0b0000 0x8c4cfe4c 0xcfc02 0xafbf0008 0x8c59fe4c 0x19c202 0x330f000f 0xafaf0030 0x8c4dfe50 0xd7402 0xafae002c 0x8c4bfe54 0x316800ff 0xafa80018 0x8fac0030 0xcf880 0x3e64021 0x8d19000c 0x19c302 0x330f000f 0xafaf0028 0x8d0d000c 0x31ae003f 0xafae0024 0x8fab0018 0x11650071 0x0 0x8c4ffe00 0xafaf0010 0x8c4cfe04 0xafac000c 0x8c48fe08 0xafa80020 0x8fae0010 0x8fab000c 0x8fa80020 0x1c3f821 0x1637821 0x3e86823 0x1afc823 0x8c342 0x338c826 0x1e86023 0x1995823 0x197200 0x1cb7026 0x119f823 0x3eec023 0xe6b42 0x1b8c026 0x32e7823 0x1f84023 0x186302 0x1886026 0x1d85823 0x16cc823 0xcfc00 0x3f9c826 0x30c6823 0x1b97023 0x197942 0x1ee7026 0x1994023 0x10ef823 0xe58c2 0x17f6026 0x32ec023 0x30c7823 0xc6a80 0x1af5826 0x1cc4023 0x10bf823 0xbcbc2 0x33fc026 0xafb80014 0x8fad0014 0x31af001f 0xafaf0000 0x8fad0008 0x8fae002c 0x8fbf0000 0x3e40018 0x1f47c3 0x5810 0x1685823 0xbc840 0xb60c0 0x1997823 0x256c0006 0xcc880 0x3ef4023 0x3b9f821 0x8fef0034 0x8c080 0x8fac0048 0x3084021 0x10fc006 0x3319001f 0xc7a00 0x32f6021 0x8fbf0038 0x8fb90044 0xcc080 0x1320001d 0x31f7821 0x29ce05dd 0x11c00032 0x0 0x256c000c 0xc6080 0x3acc821 0x8f3f0034 0x11fc006 0x11aa0007 0x330c001f 0x256b0012 0xbc080 0x3b87021 0x8dcb0034 0x10b6806 0x31ac001f 0x31ed0fff 0xdca00 0x373f0001 0x34088030 0xad1f0000 0x8fa80040 0x310f0008 0x11e00006 0xc5b80 0x34088000 0x800018c 0xad070000 0x8000201 0x256b000c 0x1696025 0x34088000 0x800018c 0xad0c0000 0x8fae0024 0x31cb0010 0x1160ff8d 0x0 0x8fb90028 0x8fbf0030 0x8faf002c 0x3f9c021 0x186880 0x15afff86 0x0 0x8d0e0004 0xe5c02 0xafab001c 0x8fac001c 0x3188001f 0x80001db 0xafa80000 0x80001fa 0x256c0012 0x8fb80004 0x270e0001 0xafae0004 0x8fa40004 0x2c8a0064 0x1140fe7c 0x0 0x800022c 0x0 0x8000172 0x256b000c 0x1696825 0x34088000 0x80000bd 0xad0d0000 0x800016b 0x256c0012 0x1021 0x3e00008 0x27bd0158>;
+		};
+	};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00100000>; // Spill address will be allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>;
+                freein-fifo-spill-num-descs = <1200>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+		
+		distribution-enable = <1>;
+		// 16 bit mask
+		dist-drop-enable = <0>;	 
+		// 8 bit mask
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+ 
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;  
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+	};
+};
+  nae@node-2 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	ucore {
+
+		src@1 {
+			num-opcodes = <0x240>;
+			path = "/home/yjin-local/bcm-sdk/sdk-base/sysconfig/nae/ucore/linux-ucore.c";
+			timestamp = "Tue Apr 23 13:07:50 2013\n";
+			mask = <0xffff>;
+			opcodes = <0x3c1c0010 0x279cf808 0x3c020010 0x2442f808 0x3c030010 0x2463f808 0xac400000 0x43082b 0x1420fffd 0x24420004 0x3c1d0010 0x27bdf9c0 0x27a50020 0x27a60028 0xaca00000 0xacc00000 0xc000029 0x2021 0x1000ffff 0x0 0x3c020000 0x8c420934 0x27bdffe0 0x2403ffff 0xafbf001c 0xafb10018 0x10430009 0xafb00014 0x3c100000 0x26100934 0x2411ffff 0x40f809 0x2610fffc 0x8e020000 0x1451fffc 0x0 0x8fbf001c 0x8fb10018 0x8fb00014 0x3e00008 0x27bd0020 0x27bdfea8 0xafa00030 0xafa0002c 0xafa00028 0xafa00024 0xafa00020 0xafa0001c 0xafa00018 0xafa00014 0xafa00010 0xafa0000c 0xafa00008 0xafa00004 0x8fa30004 0x2c620048 0x10400012 0x3c040001 0x34848000 0x8fb80004 0x8fad0004 0x187080 0xd6080 0x1845821 0x8d6a0000 0x27af0034 0x1ee4821 0xad2a0000 0x8fa80004 0x25070001 0xafa70004 0x8fa60004 0x2cc50048 0x14a0fff1 0x0 0x8fa20040 0x30590002 0x13200050 0x3c020010 0x3c1f2aaa 0x37e3aaab 0x24060800 0x3c050178 0x3c040170 0x34088004 0x8d070000 0x8c4ffe4c 0xf3c02 0xafa70008 0x8c4dfe50 0xd7402 0xafae002c 0x904cfe61 0x318b001f 0xafab0000 0x8fab0008 0x8fac002c 0x8fb80000 0x3030018 0x184fc3 0x4010 0x1094023 0x85040 0x8f8c0 0x250d0006 0x3eac823 0xd7080 0x3193823 0x3ae4821 0x8d2a0034 0x77880 0x8fb90048 0x1e73821 0xeaf806 0x33ef001f 0x19c200 0x8fae0038 0x1f86821 0x8faa0044 0xd4880 0x1140001d 0x12e4821 0x299805dd 0x13000020 0x0 0x250a000c 0xa6080 0x3ac5021 0x8d5f0034 0xffc806 0x11660007 0x332a001f 0x25080012 0x86880 0x3ad7021 0x8dcb0034 0xeb4006 0x310a001f 0x31390fff 0x19c200 0x370f0001 0x34088030 0xad0f0000 0x8fa70040 0x30e90008 0x11200006 0xa5380 0x34088000 0x8000054 0xad040000 0x8000085 0x2508000c 0x145f825 0x34088000 0x8000054 0xad1f0000 0x800007e 0x250a0012 0x8fa40040 0x30830001 0x146000e2 0x3c020010 0x8fa60040 0x30c50004 0x10a00198 0x3c02dead 0x3c030002 0x80000ae 0x3442beef 0xafa00004 0x8fa70004 0x2ce90064 0x1520017f 0x0 0x8c6fbffc 0x15e2fff9 0x3c0d0001 0x3c03dead 0x3463beff 0x3c192aaa 0x3c1f0178 0x3c080170 0x3c020010 0x2466fff0 0x35a5c000 0x3724aaab 0x240a0800 0x27e90018 0x25070018 0x34088004 0x8d0c0000 0x8c59fe4c 0x194402 0xafa80008 0x8c58fe50 0x185c02 0xafab002c 0x8c4ffe54 0x31ed00ff 0xafad0018 0x8c4efe00 0xafae0010 0x8c5ffe04 0xafbf000c 0x8c59fe08 0xafb90020 0x9058fe01 0x904bfe02 0x186a00 0xb7c00 0x8fa80018 0x904bfe05 0x1aff821 0x904efe00 0x904ffe06 0x9059fe03 0xac48fe0c 0x3eec021 0x1834021 0x905ffe04 0x196600 0xb7200 0xf6c00 0x1cdc821 0x30cc021 0x904cfe07 0x33f7821 0x904efe09 0x905ffe0a 0xc5e00 0x1eb6821 0xe6200 0x904bfe08 0x904efe0b 0x1fcc00 0x1997821 0x1ebc821 0xefe00 0x33f6021 0x188c821 0x195f02 0x197900 0x30cf823 0x16f7025 0x3ee7826 0x1a86821 0xfc180 0xf4682 0x1af6023 0x1185825 0x16cc026 0x32df821 0x18ce02 0x186a00 0x3f84023 0x32d7025 0x1c8c826 0x1ff6021 0x197c02 0x19fc00 0x30cc021 0x1ff5825 0x1996023 0x16cf826 0x1f4342 0x1f6cc0 0x10d7025 0x31f7823 0x1cf7826 0x904dfe0f 0x904efe0e 0x338c821 0xf5f02 0xf6100 0x16cc025 0x3f9f821 0x904cfe0c 0x32f4023 0xe5c00 0xdce00 0x904dfe0d 0x1ff7821 0x3084026 0x32bc021 0x30cc821 0xd7200 0xf6482 0xfc380 0x32e5821 0x1986825 0x10fc826 0x32dc823 0x17ff821 0x197542 0x195ac0 0x1cb4025 0x33f6026 0x1886023 0xcc1c2 0xcfe40 0x31f6825 0x18f5826 0x16d5823 0xb7402 0xb4400 0x1c87825 0x179c026 0x30fc023 0x18ff02 0x18c900 0x30c4026 0x3f96825 0x10d7023 0xe7c82 0xe6380 0x1cbc826 0x1ecf825 0x33f6823 0x1b84026 0xd7202 0x10e5823 0x316f0fff 0xafaf0014 0x8fac0014 0xac4cfe04 0xac46fe00 0x8fbf0014 0x1fc880 0x325c021 0x8f0d0000 0x31ae001f 0xafae0000 0x8fad0008 0x8fae002c 0x8fb90000 0x3240018 0x1947c3 0x5810 0x1685823 0xb6040 0xb78c0 0x1ecf823 0x256f0006 0xf6080 0x33f4023 0x3acf821 0x8ff90034 0x8c080 0x8faf0048 0x3084021 0x119c006 0x330c001f 0xfca00 0x1997821 0x8fbf0038 0x8fac0044 0xfc080 0x118000cf 0x31f7821 0x29cc05dd 0x118000d2 0x0 0x256c000c 0xcc880 0x3b9c021 0x8f0e0034 0x10ef806 0x11aa0007 0x33ec001f 0x256b0012 0xbf880 0x3bf6021 0x8d8b0034 0x10b6806 0x31ac001f 0x31f90fff 0x19c200 0x370e0001 0x34088030 0xad0e0000 0x8fa80040 0x310f0008 0x11e000b8 0xc5b80 0x34088000 0x80000bd 0xad070000 0x3c089e37 0x3c0c2aaa 0x2446fe4c 0x24050006 0x250379b9 0x3584aaab 0x240a0800 0x3c090178 0x3c070170 0x34088004 0x8d0b0000 0x8c4cfe4c 0xcfc02 0xafbf0008 0x8c59fe4c 0x19c202 0x330f000f 0xafaf0030 0x8c4dfe50 0xd7402 0xafae002c 0x8c4bfe54 0x316800ff 0xafa80018 0x8fac0030 0xcf880 0x3e64021 0x8d19000c 0x19c302 0x330f000f 0xafaf0028 0x8d0d000c 0x31ae003f 0xafae0024 0x8fab0018 0x11650071 0x0 0x8c4ffe00 0xafaf0010 0x8c4cfe04 0xafac000c 0x8c48fe08 0xafa80020 0x8fae0010 0x8fab000c 0x8fa80020 0x1c3f821 0x1637821 0x3e86823 0x1afc823 0x8c342 0x338c826 0x1e86023 0x1995823 0x197200 0x1cb7026 0x119f823 0x3eec023 0xe6b42 0x1b8c026 0x32e7823 0x1f84023 0x186302 0x1886026 0x1d85823 0x16cc823 0xcfc00 0x3f9c826 0x30c6823 0x1b97023 0x197942 0x1ee7026 0x1994023 0x10ef823 0xe58c2 0x17f6026 0x32ec023 0x30c7823 0xc6a80 0x1af5826 0x1cc4023 0x10bf823 0xbcbc2 0x33fc026 0xafb80014 0x8fad0014 0x31af001f 0xafaf0000 0x8fad0008 0x8fae002c 0x8fbf0000 0x3e40018 0x1f47c3 0x5810 0x1685823 0xbc840 0xb60c0 0x1997823 0x256c0006 0xcc880 0x3ef4023 0x3b9f821 0x8fef0034 0x8c080 0x8fac0048 0x3084021 0x10fc006 0x3319001f 0xc7a00 0x32f6021 0x8fbf0038 0x8fb90044 0xcc080 0x1320001d 0x31f7821 0x29ce05dd 0x11c00032 0x0 0x256c000c 0xc6080 0x3acc821 0x8f3f0034 0x11fc006 0x11aa0007 0x330c001f 0x256b0012 0xbc080 0x3b87021 0x8dcb0034 0x10b6806 0x31ac001f 0x31ed0fff 0xdca00 0x373f0001 0x34088030 0xad1f0000 0x8fa80040 0x310f0008 0x11e00006 0xc5b80 0x34088000 0x800018c 0xad070000 0x8000201 0x256b000c 0x1696025 0x34088000 0x800018c 0xad0c0000 0x8fae0024 0x31cb0010 0x1160ff8d 0x0 0x8fb90028 0x8fbf0030 0x8faf002c 0x3f9c021 0x186880 0x15afff86 0x0 0x8d0e0004 0xe5c02 0xafab001c 0x8fac001c 0x3188001f 0x80001db 0xafa80000 0x80001fa 0x256c0012 0x8fb80004 0x270e0001 0xafae0004 0x8fa40004 0x2c8a0064 0x1140fe7c 0x0 0x800022c 0x0 0x8000172 0x256b000c 0x1696825 0x34088000 0x80000bd 0xad0d0000 0x800016b 0x256c0012 0x1021 0x3e00008 0x27bd0158>;
+		};
+	};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00100000>; // spill address is allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+
+//		poe-spill-address = <0xec00000>;
+//		poe-spill-length = <0x10000>;
+
+		// Comminting the actual value to be given to
+		// POE as POE is not getting called in the
+		// regular case
+		poe-spill-address = <0x0>;
+		poe-spill-length =  <0x0>;
+		
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+	};
+};
+  nae@node-3 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	ucore {
+
+		src@1 {
+			num-opcodes = <0x240>;
+			path = "/home/yjin-local/bcm-sdk/sdk-base/sysconfig/nae/ucore/linux-ucore.c";
+			timestamp = "Tue Apr 23 13:07:50 2013\n";
+			mask = <0xffff>;
+			opcodes = <0x3c1c0010 0x279cf808 0x3c020010 0x2442f808 0x3c030010 0x2463f808 0xac400000 0x43082b 0x1420fffd 0x24420004 0x3c1d0010 0x27bdf9c0 0x27a50020 0x27a60028 0xaca00000 0xacc00000 0xc000029 0x2021 0x1000ffff 0x0 0x3c020000 0x8c420934 0x27bdffe0 0x2403ffff 0xafbf001c 0xafb10018 0x10430009 0xafb00014 0x3c100000 0x26100934 0x2411ffff 0x40f809 0x2610fffc 0x8e020000 0x1451fffc 0x0 0x8fbf001c 0x8fb10018 0x8fb00014 0x3e00008 0x27bd0020 0x27bdfea8 0xafa00030 0xafa0002c 0xafa00028 0xafa00024 0xafa00020 0xafa0001c 0xafa00018 0xafa00014 0xafa00010 0xafa0000c 0xafa00008 0xafa00004 0x8fa30004 0x2c620048 0x10400012 0x3c040001 0x34848000 0x8fb80004 0x8fad0004 0x187080 0xd6080 0x1845821 0x8d6a0000 0x27af0034 0x1ee4821 0xad2a0000 0x8fa80004 0x25070001 0xafa70004 0x8fa60004 0x2cc50048 0x14a0fff1 0x0 0x8fa20040 0x30590002 0x13200050 0x3c020010 0x3c1f2aaa 0x37e3aaab 0x24060800 0x3c050178 0x3c040170 0x34088004 0x8d070000 0x8c4ffe4c 0xf3c02 0xafa70008 0x8c4dfe50 0xd7402 0xafae002c 0x904cfe61 0x318b001f 0xafab0000 0x8fab0008 0x8fac002c 0x8fb80000 0x3030018 0x184fc3 0x4010 0x1094023 0x85040 0x8f8c0 0x250d0006 0x3eac823 0xd7080 0x3193823 0x3ae4821 0x8d2a0034 0x77880 0x8fb90048 0x1e73821 0xeaf806 0x33ef001f 0x19c200 0x8fae0038 0x1f86821 0x8faa0044 0xd4880 0x1140001d 0x12e4821 0x299805dd 0x13000020 0x0 0x250a000c 0xa6080 0x3ac5021 0x8d5f0034 0xffc806 0x11660007 0x332a001f 0x25080012 0x86880 0x3ad7021 0x8dcb0034 0xeb4006 0x310a001f 0x31390fff 0x19c200 0x370f0001 0x34088030 0xad0f0000 0x8fa70040 0x30e90008 0x11200006 0xa5380 0x34088000 0x8000054 0xad040000 0x8000085 0x2508000c 0x145f825 0x34088000 0x8000054 0xad1f0000 0x800007e 0x250a0012 0x8fa40040 0x30830001 0x146000e2 0x3c020010 0x8fa60040 0x30c50004 0x10a00198 0x3c02dead 0x3c030002 0x80000ae 0x3442beef 0xafa00004 0x8fa70004 0x2ce90064 0x1520017f 0x0 0x8c6fbffc 0x15e2fff9 0x3c0d0001 0x3c03dead 0x3463beff 0x3c192aaa 0x3c1f0178 0x3c080170 0x3c020010 0x2466fff0 0x35a5c000 0x3724aaab 0x240a0800 0x27e90018 0x25070018 0x34088004 0x8d0c0000 0x8c59fe4c 0x194402 0xafa80008 0x8c58fe50 0x185c02 0xafab002c 0x8c4ffe54 0x31ed00ff 0xafad0018 0x8c4efe00 0xafae0010 0x8c5ffe04 0xafbf000c 0x8c59fe08 0xafb90020 0x9058fe01 0x904bfe02 0x186a00 0xb7c00 0x8fa80018 0x904bfe05 0x1aff821 0x904efe00 0x904ffe06 0x9059fe03 0xac48fe0c 0x3eec021 0x1834021 0x905ffe04 0x196600 0xb7200 0xf6c00 0x1cdc821 0x30cc021 0x904cfe07 0x33f7821 0x904efe09 0x905ffe0a 0xc5e00 0x1eb6821 0xe6200 0x904bfe08 0x904efe0b 0x1fcc00 0x1997821 0x1ebc821 0xefe00 0x33f6021 0x188c821 0x195f02 0x197900 0x30cf823 0x16f7025 0x3ee7826 0x1a86821 0xfc180 0xf4682 0x1af6023 0x1185825 0x16cc026 0x32df821 0x18ce02 0x186a00 0x3f84023 0x32d7025 0x1c8c826 0x1ff6021 0x197c02 0x19fc00 0x30cc021 0x1ff5825 0x1996023 0x16cf826 0x1f4342 0x1f6cc0 0x10d7025 0x31f7823 0x1cf7826 0x904dfe0f 0x904efe0e 0x338c821 0xf5f02 0xf6100 0x16cc025 0x3f9f821 0x904cfe0c 0x32f4023 0xe5c00 0xdce00 0x904dfe0d 0x1ff7821 0x3084026 0x32bc021 0x30cc821 0xd7200 0xf6482 0xfc380 0x32e5821 0x1986825 0x10fc826 0x32dc823 0x17ff821 0x197542 0x195ac0 0x1cb4025 0x33f6026 0x1886023 0xcc1c2 0xcfe40 0x31f6825 0x18f5826 0x16d5823 0xb7402 0xb4400 0x1c87825 0x179c026 0x30fc023 0x18ff02 0x18c900 0x30c4026 0x3f96825 0x10d7023 0xe7c82 0xe6380 0x1cbc826 0x1ecf825 0x33f6823 0x1b84026 0xd7202 0x10e5823 0x316f0fff 0xafaf0014 0x8fac0014 0xac4cfe04 0xac46fe00 0x8fbf0014 0x1fc880 0x325c021 0x8f0d0000 0x31ae001f 0xafae0000 0x8fad0008 0x8fae002c 0x8fb90000 0x3240018 0x1947c3 0x5810 0x1685823 0xb6040 0xb78c0 0x1ecf823 0x256f0006 0xf6080 0x33f4023 0x3acf821 0x8ff90034 0x8c080 0x8faf0048 0x3084021 0x119c006 0x330c001f 0xfca00 0x1997821 0x8fbf0038 0x8fac0044 0xfc080 0x118000cf 0x31f7821 0x29cc05dd 0x118000d2 0x0 0x256c000c 0xcc880 0x3b9c021 0x8f0e0034 0x10ef806 0x11aa0007 0x33ec001f 0x256b0012 0xbf880 0x3bf6021 0x8d8b0034 0x10b6806 0x31ac001f 0x31f90fff 0x19c200 0x370e0001 0x34088030 0xad0e0000 0x8fa80040 0x310f0008 0x11e000b8 0xc5b80 0x34088000 0x80000bd 0xad070000 0x3c089e37 0x3c0c2aaa 0x2446fe4c 0x24050006 0x250379b9 0x3584aaab 0x240a0800 0x3c090178 0x3c070170 0x34088004 0x8d0b0000 0x8c4cfe4c 0xcfc02 0xafbf0008 0x8c59fe4c 0x19c202 0x330f000f 0xafaf0030 0x8c4dfe50 0xd7402 0xafae002c 0x8c4bfe54 0x316800ff 0xafa80018 0x8fac0030 0xcf880 0x3e64021 0x8d19000c 0x19c302 0x330f000f 0xafaf0028 0x8d0d000c 0x31ae003f 0xafae0024 0x8fab0018 0x11650071 0x0 0x8c4ffe00 0xafaf0010 0x8c4cfe04 0xafac000c 0x8c48fe08 0xafa80020 0x8fae0010 0x8fab000c 0x8fa80020 0x1c3f821 0x1637821 0x3e86823 0x1afc823 0x8c342 0x338c826 0x1e86023 0x1995823 0x197200 0x1cb7026 0x119f823 0x3eec023 0xe6b42 0x1b8c026 0x32e7823 0x1f84023 0x186302 0x1886026 0x1d85823 0x16cc823 0xcfc00 0x3f9c826 0x30c6823 0x1b97023 0x197942 0x1ee7026 0x1994023 0x10ef823 0xe58c2 0x17f6026 0x32ec023 0x30c7823 0xc6a80 0x1af5826 0x1cc4023 0x10bf823 0xbcbc2 0x33fc026 0xafb80014 0x8fad0014 0x31af001f 0xafaf0000 0x8fad0008 0x8fae002c 0x8fbf0000 0x3e40018 0x1f47c3 0x5810 0x1685823 0xbc840 0xb60c0 0x1997823 0x256c0006 0xcc880 0x3ef4023 0x3b9f821 0x8fef0034 0x8c080 0x8fac0048 0x3084021 0x10fc006 0x3319001f 0xc7a00 0x32f6021 0x8fbf0038 0x8fb90044 0xcc080 0x1320001d 0x31f7821 0x29ce05dd 0x11c00032 0x0 0x256c000c 0xc6080 0x3acc821 0x8f3f0034 0x11fc006 0x11aa0007 0x330c001f 0x256b0012 0xbc080 0x3b87021 0x8dcb0034 0x10b6806 0x31ac001f 0x31ed0fff 0xdca00 0x373f0001 0x34088030 0xad1f0000 0x8fa80040 0x310f0008 0x11e00006 0xc5b80 0x34088000 0x800018c 0xad070000 0x8000201 0x256b000c 0x1696025 0x34088000 0x800018c 0xad0c0000 0x8fae0024 0x31cb0010 0x1160ff8d 0x0 0x8fb90028 0x8fbf0030 0x8faf002c 0x3f9c021 0x186880 0x15afff86 0x0 0x8d0e0004 0xe5c02 0xafab001c 0x8fac001c 0x3188001f 0x80001db 0xafa80000 0x80001fa 0x256c0012 0x8fb80004 0x270e0001 0xafae0004 0x8fa40004 0x2c8a0064 0x1140fe7c 0x0 0x800022c 0x0 0x8000172 0x256b000c 0x1696825 0x34088000 0x80000bd 0xad0d0000 0x800016b 0x256c0012 0x1021 0x3e00008 0x27bd0158>;
+		};
+	};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00100000>; // spill address is allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+
+//		poe-spill-address = <0xec00000>;
+//		poe-spill-length = <0x10000>;
+
+		// Comminting the actual value to be given to
+		// POE as POE is not getting called in the
+		// regular case
+		poe-spill-address = <0x0>;
+		poe-spill-length =  <0x0>;
+		
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "no";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+	};
+};
+		nodes {
+			num-nodes = <2>;
+		};
+
+	};
+	frequency-config {
+		nae = <500>;
+		sae = <250>;
+		rsa = <250>;
+		dtre = <250>;
+		cde = <250>;
+	};
+};
+
diff --git a/arch/mips/boot/dts/master-mnxlp8xx-linux.dts b/arch/mips/boot/dts/master-mnxlp8xx-linux.dts
new file mode 100644
index 0000000..70e83c6
--- /dev/null
+++ b/arch/mips/boot/dts/master-mnxlp8xx-linux.dts
@@ -0,0 +1,1207 @@
+/* XLP8XX Device Tree Source
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "netlogic,XLP-EVP";
+        compatible = "netlogic,xlp";
+        #address-cells = <2>;
+        #size-cells = <2>;
+	/*memory range for linux. This will not appear in dom0*/
+        memory {
+                device_type = "memory";
+                reg =  <0 0x01000000 0 0x0B000000   
+                        0 0x20000000 0 0xa0000000
+                        0 0xe0000000 0 0x20000000>;
+        };
+
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <0>;
+		bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0xffffffff -- ";
+		domain_heap = <0x80000000 0x20000000>;
+	};
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+			#nodes = <2>;
+			#cpumask-cells=<2>;
+
+			cpu {
+				onlinemask = <0xffffffff 0xffffffff>;
+                                nae-rx-vc = <0>;
+                                nae-fb-vc = <1>;
+                                napi-vc-mask = <0xb>;
+				sae-rx-vc = <0>; /* sharing with nae */
+				sae-rx-sync-vc  = <3>; /* should be exclusive */
+				ipsec-async-vc  = <3>;
+				ipsec-sync-vc   = <2>;
+			};
+			uart {
+				id = <0>;
+				owner = <1>;
+				sharedcfg = <0x1f000000>;
+			};
+                        fmn {
+                                node_0_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_1_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_2_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_3_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;                       
+			};
+			nae {
+				freein-fifo-mask = <0x3ffff 0x3ffff 0 0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <32 32 32 32>;
+				/* hw entries 40 for 2 nodes , 20 fifos each */
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <40 40 40 40>;
+			};
+			owner-config {
+				nae = <0x3>;   // currently for node0 and node1
+				sae = <0x1>;   // for node0
+				rsa = <0x1>;
+				fmn = <0xf>;
+			};
+
+		};
+	};
+
+	chosen {
+		bootargs = "root=/dev/nfs rw nfsroot=192.168.0.1:/rootfs,nfsvers=3 ip=192.168.0.2:192.168.0.1:192.168.0.1:255.255.254.0:xlp:eth2:off console=ttyS0,115200";
+	};
+
+	/* These binaries are downloaded at the resp physical memory locations
+	 * by their corresponding bootstrapping loaders. For example,
+	 * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
+	 * at 1M, hypervisor by u-boot hypervisor at 136M.
+	 * On simulator all these binaries are pre-loaded by using '-F' option
+	 * for convenience. On silicon, they will be loaded by their corresponding
+	 * temporary download locations the stage-1/stage-2 firmware
+	 */
+	firmware-download {
+		u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
+		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
+		dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
+		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
+	};
+
+	soc {
+		#address-cells = <2>;
+		#size-cells = <1>;
+		compatible = "simple-bus";
+		ranges = <0 0  0 0x18000000  0x04000000   // PCIe CFG
+			  1 0  0 0x16000000  0x01000000>; // GBU chipselects
+
+		serial0: serial@30000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x30100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <133333333>;
+			interrupt-parent = <&pic>;
+			interrupts = <17>;
+		};
+		serial1: serial@31000 {
+			device_type = "serial";
+			compatible = "ns16550";
+			reg = <0 0x31100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <133333333>;
+			interrupt-parent = <&pic>;
+			interrupts = <18>;
+		};
+		i2c0: ocores@32000 {
+			compatible = "opencores,i2c-ocores";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x32100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <32000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <30>;
+		};
+		i2c1: ocores@33000 {
+			compatible = "opencores,i2c-ocores";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0 0x33100 0xa00>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clock-frequency = <32000000>;
+			interrupt-parent = <&pic>;
+			interrupts = <31>;
+
+			rtc@68 {
+				compatible = "dallas,ds1374";
+				reg = <0x68>;
+			};
+
+			dtt@4c {
+				compatible = "national,lm90";
+				reg = <0x4c>;
+			};
+		};
+		pic: pic@4000 {
+			interrupt-controller;
+			#address-cells = <0>;
+			#interrupt-cells = <1>;
+			reg = <0 0x4000 0x200>;
+		};
+
+		nor_flash@1,0 {
+			compatible = "cfi-flash";
+			#address-cells = <1>;
+			#size-cells = <1>;
+			bank-width = <2>;
+			reg = <1 0 0x1000000>;
+
+			partition@0 {
+				label = "x-loader";
+				reg = <0x0 0x100000>; /* 1M */
+				read-only;
+			};
+
+			partition@100000 {
+				label = "u-boot";
+				reg = <0x100000 0x100000>; /* 1M */
+			};
+
+			partition@200000 {
+				label = "kernel";
+				reg = <0x200000 0x500000>; /* 5M */
+			};
+
+			partition@700000 {
+				label = "rootfs";
+				reg = <0x700000 0x800000>; /* 8M */
+			};
+
+			partition@f00000 {
+				label = "env";
+				reg = <0xf00000 0x100000>; /* 1M */
+				read-only;
+			};
+		};
+fmn@node-0 {
+        default-credits = <50>;
+        default-queue-size = <16384>;
+        fmn-spill-mem-base = <0x00000000 0x10000000>; /*0 - dynamic allocation, only for 64 bit linux */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config {
+		/* credits from station     
+		   "cpu popq pcie0 pcie1 pcie2 pcie3 gdx rsa crypto cmp poe nae regx srio"
+		   The order and number of station should be matching with the list given above
+		   Here, credits 0 means the default credits. 
+		   Right now there is no way to configure credit of zero */
+
+                cpu {
+                        queue-size = <32768>; /* queue size for all the cpu vcs */
+                        credits-from {
+                                node-0 = <0 0 0 0 0 0 0 0 0 0 500 0 0 150>;
+                        };
+                };
+
+                nae {
+                        credits-from {
+                                node-0 = <100 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                        };
+                };
+               srio {
+                       credits-from {
+                                node-0 = <150 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                        };
+               };
+	};
+};
+fmn@node-1{
+        default-credits = <50>;
+        default-queue-size = <16384>;
+        fmn-spill-mem-base = <0x00000000 0x00000000>; /*0 - dynamic allocation */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config{
+
+	};
+};
+fmn@node-2{
+
+};
+fmn@node-3{
+
+};
+  nae@node-0 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	ucore {
+
+		src@1 {
+			num-opcodes = <0x240>;
+			timestamp = "Tue Apr 23 13:07:50 2013\n";
+			mask = <0xffff>;
+			opcodes = <0x3c1c0010 0x279cf808 0x3c020010 0x2442f808 0x3c030010 0x2463f808 0xac400000 0x43082b 0x1420fffd 0x24420004 0x3c1d0010 0x27bdf9c0 0x27a50020 0x27a60028 0xaca00000 0xacc00000 0xc000029 0x2021 0x1000ffff 0x0 0x3c020000 0x8c420934 0x27bdffe0 0x2403ffff 0xafbf001c 0xafb10018 0x10430009 0xafb00014 0x3c100000 0x26100934 0x2411ffff 0x40f809 0x2610fffc 0x8e020000 0x1451fffc 0x0 0x8fbf001c 0x8fb10018 0x8fb00014 0x3e00008 0x27bd0020 0x27bdfea8 0xafa00030 0xafa0002c 0xafa00028 0xafa00024 0xafa00020 0xafa0001c 0xafa00018 0xafa00014 0xafa00010 0xafa0000c 0xafa00008 0xafa00004 0x8fa30004 0x2c620048 0x10400012 0x3c040001 0x34848000 0x8fb80004 0x8fad0004 0x187080 0xd6080 0x1845821 0x8d6a0000 0x27af0034 0x1ee4821 0xad2a0000 0x8fa80004 0x25070001 0xafa70004 0x8fa60004 0x2cc50048 0x14a0fff1 0x0 0x8fa20040 0x30590002 0x13200050 0x3c020010 0x3c1f2aaa 0x37e3aaab 0x24060800 0x3c050178 0x3c040170 0x34088004 0x8d070000 0x8c4ffe4c 0xf3c02 0xafa70008 0x8c4dfe50 0xd7402 0xafae002c 0x904cfe61 0x318b001f 0xafab0000 0x8fab0008 0x8fac002c 0x8fb80000 0x3030018 0x184fc3 0x4010 0x1094023 0x85040 0x8f8c0 0x250d0006 0x3eac823 0xd7080 0x3193823 0x3ae4821 0x8d2a0034 0x77880 0x8fb90048 0x1e73821 0xeaf806 0x33ef001f 0x19c200 0x8fae0038 0x1f86821 0x8faa0044 0xd4880 0x1140001d 0x12e4821 0x299805dd 0x13000020 0x0 0x250a000c 0xa6080 0x3ac5021 0x8d5f0034 0xffc806 0x11660007 0x332a001f 0x25080012 0x86880 0x3ad7021 0x8dcb0034 0xeb4006 0x310a001f 0x31390fff 0x19c200 0x370f0001 0x34088030 0xad0f0000 0x8fa70040 0x30e90008 0x11200006 0xa5380 0x34088000 0x8000054 0xad040000 0x8000085 0x2508000c 0x145f825 0x34088000 0x8000054 0xad1f0000 0x800007e 0x250a0012 0x8fa40040 0x30830001 0x146000e2 0x3c020010 0x8fa60040 0x30c50004 0x10a00198 0x3c02dead 0x3c030002 0x80000ae 0x3442beef 0xafa00004 0x8fa70004 0x2ce90064 0x1520017f 0x0 0x8c6fbffc 0x15e2fff9 0x3c0d0001 0x3c03dead 0x3463beff 0x3c192aaa 0x3c1f0178 0x3c080170 0x3c020010 0x2466fff0 0x35a5c000 0x3724aaab 0x240a0800 0x27e90018 0x25070018 0x34088004 0x8d0c0000 0x8c59fe4c 0x194402 0xafa80008 0x8c58fe50 0x185c02 0xafab002c 0x8c4ffe54 0x31ed00ff 0xafad0018 0x8c4efe00 0xafae0010 0x8c5ffe04 0xafbf000c 0x8c59fe08 0xafb90020 0x9058fe01 0x904bfe02 0x186a00 0xb7c00 0x8fa80018 0x904bfe05 0x1aff821 0x904efe00 0x904ffe06 0x9059fe03 0xac48fe0c 0x3eec021 0x1834021 0x905ffe04 0x196600 0xb7200 0xf6c00 0x1cdc821 0x30cc021 0x904cfe07 0x33f7821 0x904efe09 0x905ffe0a 0xc5e00 0x1eb6821 0xe6200 0x904bfe08 0x904efe0b 0x1fcc00 0x1997821 0x1ebc821 0xefe00 0x33f6021 0x188c821 0x195f02 0x197900 0x30cf823 0x16f7025 0x3ee7826 0x1a86821 0xfc180 0xf4682 0x1af6023 0x1185825 0x16cc026 0x32df821 0x18ce02 0x186a00 0x3f84023 0x32d7025 0x1c8c826 0x1ff6021 0x197c02 0x19fc00 0x30cc021 0x1ff5825 0x1996023 0x16cf826 0x1f4342 0x1f6cc0 0x10d7025 0x31f7823 0x1cf7826 0x904dfe0f 0x904efe0e 0x338c821 0xf5f02 0xf6100 0x16cc025 0x3f9f821 0x904cfe0c 0x32f4023 0xe5c00 0xdce00 0x904dfe0d 0x1ff7821 0x3084026 0x32bc021 0x30cc821 0xd7200 0xf6482 0xfc380 0x32e5821 0x1986825 0x10fc826 0x32dc823 0x17ff821 0x197542 0x195ac0 0x1cb4025 0x33f6026 0x1886023 0xcc1c2 0xcfe40 0x31f6825 0x18f5826 0x16d5823 0xb7402 0xb4400 0x1c87825 0x179c026 0x30fc023 0x18ff02 0x18c900 0x30c4026 0x3f96825 0x10d7023 0xe7c82 0xe6380 0x1cbc826 0x1ecf825 0x33f6823 0x1b84026 0xd7202 0x10e5823 0x316f0fff 0xafaf0014 0x8fac0014 0xac4cfe04 0xac46fe00 0x8fbf0014 0x1fc880 0x325c021 0x8f0d0000 0x31ae001f 0xafae0000 0x8fad0008 0x8fae002c 0x8fb90000 0x3240018 0x1947c3 0x5810 0x1685823 0xb6040 0xb78c0 0x1ecf823 0x256f0006 0xf6080 0x33f4023 0x3acf821 0x8ff90034 0x8c080 0x8faf0048 0x3084021 0x119c006 0x330c001f 0xfca00 0x1997821 0x8fbf0038 0x8fac0044 0xfc080 0x118000cf 0x31f7821 0x29cc05dd 0x118000d2 0x0 0x256c000c 0xcc880 0x3b9c021 0x8f0e0034 0x10ef806 0x11aa0007 0x33ec001f 0x256b0012 0xbf880 0x3bf6021 0x8d8b0034 0x10b6806 0x31ac001f 0x31f90fff 0x19c200 0x370e0001 0x34088030 0xad0e0000 0x8fa80040 0x310f0008 0x11e000b8 0xc5b80 0x34088000 0x80000bd 0xad070000 0x3c089e37 0x3c0c2aaa 0x2446fe4c 0x24050006 0x250379b9 0x3584aaab 0x240a0800 0x3c090178 0x3c070170 0x34088004 0x8d0b0000 0x8c4cfe4c 0xcfc02 0xafbf0008 0x8c59fe4c 0x19c202 0x330f000f 0xafaf0030 0x8c4dfe50 0xd7402 0xafae002c 0x8c4bfe54 0x316800ff 0xafa80018 0x8fac0030 0xcf880 0x3e64021 0x8d19000c 0x19c302 0x330f000f 0xafaf0028 0x8d0d000c 0x31ae003f 0xafae0024 0x8fab0018 0x11650071 0x0 0x8c4ffe00 0xafaf0010 0x8c4cfe04 0xafac000c 0x8c48fe08 0xafa80020 0x8fae0010 0x8fab000c 0x8fa80020 0x1c3f821 0x1637821 0x3e86823 0x1afc823 0x8c342 0x338c826 0x1e86023 0x1995823 0x197200 0x1cb7026 0x119f823 0x3eec023 0xe6b42 0x1b8c026 0x32e7823 0x1f84023 0x186302 0x1886026 0x1d85823 0x16cc823 0xcfc00 0x3f9c826 0x30c6823 0x1b97023 0x197942 0x1ee7026 0x1994023 0x10ef823 0xe58c2 0x17f6026 0x32ec023 0x30c7823 0xc6a80 0x1af5826 0x1cc4023 0x10bf823 0xbcbc2 0x33fc026 0xafb80014 0x8fad0014 0x31af001f 0xafaf0000 0x8fad0008 0x8fae002c 0x8fbf0000 0x3e40018 0x1f47c3 0x5810 0x1685823 0xbc840 0xb60c0 0x1997823 0x256c0006 0xcc880 0x3ef4023 0x3b9f821 0x8fef0034 0x8c080 0x8fac0048 0x3084021 0x10fc006 0x3319001f 0xc7a00 0x32f6021 0x8fbf0038 0x8fb90044 0xcc080 0x1320001d 0x31f7821 0x29ce05dd 0x11c00032 0x0 0x256c000c 0xc6080 0x3acc821 0x8f3f0034 0x11fc006 0x11aa0007 0x330c001f 0x256b0012 0xbc080 0x3b87021 0x8dcb0034 0x10b6806 0x31ac001f 0x31ed0fff 0xdca00 0x373f0001 0x34088030 0xad1f0000 0x8fa80040 0x310f0008 0x11e00006 0xc5b80 0x34088000 0x800018c 0xad070000 0x8000201 0x256b000c 0x1696025 0x34088000 0x800018c 0xad0c0000 0x8fae0024 0x31cb0010 0x1160ff8d 0x0 0x8fb90028 0x8fbf0030 0x8faf002c 0x3f9c021 0x186880 0x15afff86 0x0 0x8d0e0004 0xe5c02 0xafab001c 0x8fac001c 0x3188001f 0x80001db 0xafa80000 0x80001fa 0x256c0012 0x8fb80004 0x270e0001 0xafae0004 0x8fa40004 0x2c8a0064 0x1140fe7c 0x0 0x800022c 0x0 0x8000172 0x256b000c 0x1696825 0x34088000 0x80000bd 0xad0d0000 0x800016b 0x256c0012 0x1021 0x3e00008 0x27bd0158>;
+			};
+		};
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00200000>; // spill address is allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+		/* If port-fifo-en is not specified(0/1), it will be set to 1 
+		   while building the linux dtb file. For all the othercases it will be set to 0.
+		   See build-dtb.sh. If required, user can explicitly set the value here.
+		   */
+		port-fifo-en = <1>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+
+//		poe-spill-address = <0xec00000>;
+//		poe-spill-length = <0x10000>;
+
+		// Comminting the actual value to be given to
+		// POE as POE is not getting called in the
+		// regular case
+		poe-spill-address = <0x0>;
+		poe-spill-length =  <0x0>;
+		
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+			mgmt-port = <0 0 0 0>;
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+        	        rx-buffer-size = <128 128 128 128>;
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to  <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable  = <0x0>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			/* To enable change it to  <1> */
+			msec-port-enable  = <0>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to  <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable  = <0x0>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>; 
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+                sgmii {
+                        loopback = <0 0 0 0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <13 13 13 13>;
+
+                        ext-phy-addr = <12 15 14 13>;
+                        ext-phy-bus = <1 1 1 1>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        num-channels = <1 1 1 1>;
+                        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        rx-buffer-size = <128 128 128 128>;
+
+
+                        // Max available descriptors are 1024 (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <52 52 52 52>;
+                        free-desc-size = <2048 2048 2048 2048>;
+                        ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+                };
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+	
+			mgmt-port = <1 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+                
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+   nae@node-1 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	ucore {
+		src@1 {
+			num-opcodes = <0x240>;
+			timestamp = "Tue Apr 23 13:07:50 2013\n";
+			mask = <0xffff>;
+			opcodes = <0x3c1c0010 0x279cf808 0x3c020010 0x2442f808 0x3c030010 0x2463f808 0xac400000 0x43082b 0x1420fffd 0x24420004 0x3c1d0010 0x27bdf9c0 0x27a50020 0x27a60028 0xaca00000 0xacc00000 0xc000029 0x2021 0x1000ffff 0x0 0x3c020000 0x8c420934 0x27bdffe0 0x2403ffff 0xafbf001c 0xafb10018 0x10430009 0xafb00014 0x3c100000 0x26100934 0x2411ffff 0x40f809 0x2610fffc 0x8e020000 0x1451fffc 0x0 0x8fbf001c 0x8fb10018 0x8fb00014 0x3e00008 0x27bd0020 0x27bdfea8 0xafa00030 0xafa0002c 0xafa00028 0xafa00024 0xafa00020 0xafa0001c 0xafa00018 0xafa00014 0xafa00010 0xafa0000c 0xafa00008 0xafa00004 0x8fa30004 0x2c620048 0x10400012 0x3c040001 0x34848000 0x8fb80004 0x8fad0004 0x187080 0xd6080 0x1845821 0x8d6a0000 0x27af0034 0x1ee4821 0xad2a0000 0x8fa80004 0x25070001 0xafa70004 0x8fa60004 0x2cc50048 0x14a0fff1 0x0 0x8fa20040 0x30590002 0x13200050 0x3c020010 0x3c1f2aaa 0x37e3aaab 0x24060800 0x3c050178 0x3c040170 0x34088004 0x8d070000 0x8c4ffe4c 0xf3c02 0xafa70008 0x8c4dfe50 0xd7402 0xafae002c 0x904cfe61 0x318b001f 0xafab0000 0x8fab0008 0x8fac002c 0x8fb80000 0x3030018 0x184fc3 0x4010 0x1094023 0x85040 0x8f8c0 0x250d0006 0x3eac823 0xd7080 0x3193823 0x3ae4821 0x8d2a0034 0x77880 0x8fb90048 0x1e73821 0xeaf806 0x33ef001f 0x19c200 0x8fae0038 0x1f86821 0x8faa0044 0xd4880 0x1140001d 0x12e4821 0x299805dd 0x13000020 0x0 0x250a000c 0xa6080 0x3ac5021 0x8d5f0034 0xffc806 0x11660007 0x332a001f 0x25080012 0x86880 0x3ad7021 0x8dcb0034 0xeb4006 0x310a001f 0x31390fff 0x19c200 0x370f0001 0x34088030 0xad0f0000 0x8fa70040 0x30e90008 0x11200006 0xa5380 0x34088000 0x8000054 0xad040000 0x8000085 0x2508000c 0x145f825 0x34088000 0x8000054 0xad1f0000 0x800007e 0x250a0012 0x8fa40040 0x30830001 0x146000e2 0x3c020010 0x8fa60040 0x30c50004 0x10a00198 0x3c02dead 0x3c030002 0x80000ae 0x3442beef 0xafa00004 0x8fa70004 0x2ce90064 0x1520017f 0x0 0x8c6fbffc 0x15e2fff9 0x3c0d0001 0x3c03dead 0x3463beff 0x3c192aaa 0x3c1f0178 0x3c080170 0x3c020010 0x2466fff0 0x35a5c000 0x3724aaab 0x240a0800 0x27e90018 0x25070018 0x34088004 0x8d0c0000 0x8c59fe4c 0x194402 0xafa80008 0x8c58fe50 0x185c02 0xafab002c 0x8c4ffe54 0x31ed00ff 0xafad0018 0x8c4efe00 0xafae0010 0x8c5ffe04 0xafbf000c 0x8c59fe08 0xafb90020 0x9058fe01 0x904bfe02 0x186a00 0xb7c00 0x8fa80018 0x904bfe05 0x1aff821 0x904efe00 0x904ffe06 0x9059fe03 0xac48fe0c 0x3eec021 0x1834021 0x905ffe04 0x196600 0xb7200 0xf6c00 0x1cdc821 0x30cc021 0x904cfe07 0x33f7821 0x904efe09 0x905ffe0a 0xc5e00 0x1eb6821 0xe6200 0x904bfe08 0x904efe0b 0x1fcc00 0x1997821 0x1ebc821 0xefe00 0x33f6021 0x188c821 0x195f02 0x197900 0x30cf823 0x16f7025 0x3ee7826 0x1a86821 0xfc180 0xf4682 0x1af6023 0x1185825 0x16cc026 0x32df821 0x18ce02 0x186a00 0x3f84023 0x32d7025 0x1c8c826 0x1ff6021 0x197c02 0x19fc00 0x30cc021 0x1ff5825 0x1996023 0x16cf826 0x1f4342 0x1f6cc0 0x10d7025 0x31f7823 0x1cf7826 0x904dfe0f 0x904efe0e 0x338c821 0xf5f02 0xf6100 0x16cc025 0x3f9f821 0x904cfe0c 0x32f4023 0xe5c00 0xdce00 0x904dfe0d 0x1ff7821 0x3084026 0x32bc021 0x30cc821 0xd7200 0xf6482 0xfc380 0x32e5821 0x1986825 0x10fc826 0x32dc823 0x17ff821 0x197542 0x195ac0 0x1cb4025 0x33f6026 0x1886023 0xcc1c2 0xcfe40 0x31f6825 0x18f5826 0x16d5823 0xb7402 0xb4400 0x1c87825 0x179c026 0x30fc023 0x18ff02 0x18c900 0x30c4026 0x3f96825 0x10d7023 0xe7c82 0xe6380 0x1cbc826 0x1ecf825 0x33f6823 0x1b84026 0xd7202 0x10e5823 0x316f0fff 0xafaf0014 0x8fac0014 0xac4cfe04 0xac46fe00 0x8fbf0014 0x1fc880 0x325c021 0x8f0d0000 0x31ae001f 0xafae0000 0x8fad0008 0x8fae002c 0x8fb90000 0x3240018 0x1947c3 0x5810 0x1685823 0xb6040 0xb78c0 0x1ecf823 0x256f0006 0xf6080 0x33f4023 0x3acf821 0x8ff90034 0x8c080 0x8faf0048 0x3084021 0x119c006 0x330c001f 0xfca00 0x1997821 0x8fbf0038 0x8fac0044 0xfc080 0x118000cf 0x31f7821 0x29cc05dd 0x118000d2 0x0 0x256c000c 0xcc880 0x3b9c021 0x8f0e0034 0x10ef806 0x11aa0007 0x33ec001f 0x256b0012 0xbf880 0x3bf6021 0x8d8b0034 0x10b6806 0x31ac001f 0x31f90fff 0x19c200 0x370e0001 0x34088030 0xad0e0000 0x8fa80040 0x310f0008 0x11e000b8 0xc5b80 0x34088000 0x80000bd 0xad070000 0x3c089e37 0x3c0c2aaa 0x2446fe4c 0x24050006 0x250379b9 0x3584aaab 0x240a0800 0x3c090178 0x3c070170 0x34088004 0x8d0b0000 0x8c4cfe4c 0xcfc02 0xafbf0008 0x8c59fe4c 0x19c202 0x330f000f 0xafaf0030 0x8c4dfe50 0xd7402 0xafae002c 0x8c4bfe54 0x316800ff 0xafa80018 0x8fac0030 0xcf880 0x3e64021 0x8d19000c 0x19c302 0x330f000f 0xafaf0028 0x8d0d000c 0x31ae003f 0xafae0024 0x8fab0018 0x11650071 0x0 0x8c4ffe00 0xafaf0010 0x8c4cfe04 0xafac000c 0x8c48fe08 0xafa80020 0x8fae0010 0x8fab000c 0x8fa80020 0x1c3f821 0x1637821 0x3e86823 0x1afc823 0x8c342 0x338c826 0x1e86023 0x1995823 0x197200 0x1cb7026 0x119f823 0x3eec023 0xe6b42 0x1b8c026 0x32e7823 0x1f84023 0x186302 0x1886026 0x1d85823 0x16cc823 0xcfc00 0x3f9c826 0x30c6823 0x1b97023 0x197942 0x1ee7026 0x1994023 0x10ef823 0xe58c2 0x17f6026 0x32ec023 0x30c7823 0xc6a80 0x1af5826 0x1cc4023 0x10bf823 0xbcbc2 0x33fc026 0xafb80014 0x8fad0014 0x31af001f 0xafaf0000 0x8fad0008 0x8fae002c 0x8fbf0000 0x3e40018 0x1f47c3 0x5810 0x1685823 0xbc840 0xb60c0 0x1997823 0x256c0006 0xcc880 0x3ef4023 0x3b9f821 0x8fef0034 0x8c080 0x8fac0048 0x3084021 0x10fc006 0x3319001f 0xc7a00 0x32f6021 0x8fbf0038 0x8fb90044 0xcc080 0x1320001d 0x31f7821 0x29ce05dd 0x11c00032 0x0 0x256c000c 0xc6080 0x3acc821 0x8f3f0034 0x11fc006 0x11aa0007 0x330c001f 0x256b0012 0xbc080 0x3b87021 0x8dcb0034 0x10b6806 0x31ac001f 0x31ed0fff 0xdca00 0x373f0001 0x34088030 0xad1f0000 0x8fa80040 0x310f0008 0x11e00006 0xc5b80 0x34088000 0x800018c 0xad070000 0x8000201 0x256b000c 0x1696025 0x34088000 0x800018c 0xad0c0000 0x8fae0024 0x31cb0010 0x1160ff8d 0x0 0x8fb90028 0x8fbf0030 0x8faf002c 0x3f9c021 0x186880 0x15afff86 0x0 0x8d0e0004 0xe5c02 0xafab001c 0x8fac001c 0x3188001f 0x80001db 0xafa80000 0x80001fa 0x256c0012 0x8fb80004 0x270e0001 0xafae0004 0x8fa40004 0x2c8a0064 0x1140fe7c 0x0 0x800022c 0x0 0x8000172 0x256b000c 0x1696825 0x34088000 0x80000bd 0xad0d0000 0x800016b 0x256c0012 0x1021 0x3e00008 0x27bd0158>;
+			};
+		};
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00200000>; // Spill address will be allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>;
+                freein-fifo-spill-num-descs = <1200>;
+
+		/* If port-fifo-en is not specified(0/1), it will be set to 1 
+		   while building the linux dtb file. For all the othercases it will be set to 0.
+		   See build-dtb.sh. If required, user can explicitly set the value here.
+		   */
+		port-fifo-en = <1>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+		
+		distribution-enable = <1>;
+		// 16 bit mask
+		dist-drop-enable = <0>;	 
+		// 8 bit mask
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+ 
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        // Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;  
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+			mgmt-port = <1 0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+ 		               
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+nae@node-2 {
+
+};
+nae@node-3 {
+
+};
+		nodes {
+			num-nodes = <2>;
+		};
+
+	};
+	frequency-config {
+		nae = <500>;
+		sae = <500>;
+		rsa = <500>;
+		dtre = <250>;
+		cde = <250>;
+	};
+};
+
-- 
1.8.4.93.g57e4c17

