From 964ecdde9245b23333b03896dd0c7a5f4ffc1742 Mon Sep 17 00:00:00 2001
From: Om Narasimhan <omn@broadcom.com>
Date: Thu, 29 Nov 2012 14:06:49 -0800
Subject: [PATCH 432/565] FMN: Removed initializing again

FMN initialization is done in arch/mips/netlogic/xlp/smp.c:fmn_config().
config_fmn() not required anymore in nlm_xlp_dma.c

Based on Broadcom SDK 2.3.

Signed-off-by: Om Narasimhan <omn@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/char/nlm_xlp_dma.c | 36 +++++++++++-------------------------
 1 file changed, 11 insertions(+), 25 deletions(-)

diff --git a/drivers/char/nlm_xlp_dma.c b/drivers/char/nlm_xlp_dma.c
index 1848dfa..51b5a7a 100644
--- a/drivers/char/nlm_xlp_dma.c
+++ b/drivers/char/nlm_xlp_dma.c
@@ -45,6 +45,7 @@
 #include <hal/nlm_hal_macros.h>
 #include <hal/nlm_hal_fmn.h>
 #include <hal/nlm_hal_xlp_dev.h>
+#include <asm/netlogic/pic_hal.h>
 #endif
 
 
@@ -98,14 +99,21 @@ typedef struct xlp_dma_ctrl {
 	dma_trans_t trans[MAX_DMA_TRANS_PER_CPU];
 }xlp_dma_ctrl_t;
 
+struct msgrng_msg {
+	__u64 msg0;
+	__u64 msg1;
+	__u64 msg2;
+	__u64 msg3;
+};
+
 volatile static int xlp_dma_producer=0;
 volatile static int xlp_dma_consumer=0;
 struct msgrng_msg xlp_dma_queue[MAX_DMA_QUEUE_LEN];
 static int xlp_dma_init_done = 0;
 xlp_dma_ctrl_t xlp_dma_ctrl[32];	// XXX change to percpu
 
-spinlock_t xlp_dma_lock = SPIN_LOCK_UNLOCKED;
-spinlock_t xlp_enqueue_dma_spin=SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(xlp_dma_lock);
+DEFINE_SPINLOCK(xlp_enqueue_dma_spin);
 uint32_t xlp_total_dma_reqs, xlp_total_dma_bytes;
 uint32_t xlp_dma_req_failed, xlp_dma_timeout_errors, xlp_dma_errors, 
 	 xlp_dma_stale_resp;
@@ -292,6 +300,7 @@ void xlp_async_dma_task(unsigned long data)
 	struct msgrng_msg *msg;
 	static int last_msg_send_success=1;
 	int msg_send_success=0;
+	unsigned long flags;
 
 	while((xlp_dma_consumer != xlp_dma_producer)){
 		msg = &xlp_dma_queue[xlp_dma_consumer];
@@ -527,28 +536,6 @@ static void msg_poll_func(struct work_struct *work)
         schedule_delayed_work_on(cpu,  &msg_poll_work[cpu], NLM_DMA_MSG_POLL_DELAY);
 }
 
-/*
- * This function is taken from nae driver
- */
-static void config_fmn(void)
-{
-	struct cpumask cpumask;
-
-	/* bind cpu to n0c0t0 and drain all leftover firmware messages */
-	sched_bindto_save_affinity(0, &cpumask);
-	/* Configure FMN again but only cpu credits */
-	msgrng_access_enable(mflags);
-	//nlm_xlp_msgring_int_handler(IRQ_MSGRING, NULL);
-	/* Configure credits to non-n0c0 cores */
-	/* Following two lines are commented out because
-	 * nlm_hal_fmn_init() signature is changed. No longer can we do
-	 * this call. FMN should be initialized before dma engine init */
-	//printk(KERN_ERR "Potential collission. Change params of nlm_hal_fmn_init\n");
-	//nlm_hal_fmn_init(0x10000000, 0x02000000, 50);
-	msgrng_access_disable(mflags);
-	sched_bindto_restore_affinity(&cpumask);
-}
-
 static int is_xlp_rc(int node, int fn)
 {
 	u32 mode = xlp_get_power_on_reset_cfg(node);
@@ -576,7 +563,6 @@ static int nlm_init_dma(void)
 	if (dma_wq == NULL) {
 		return -EFAULT;
 	}
-	config_fmn();
 	if (register_xlp_msgring_handler(XLP_MSG_HANDLE_PCIE0,
 			xlp_dma_msgring_handler, NULL)) {
 		printk("Couldn't register DMA msgring handler\n");
-- 
1.8.4.93.g57e4c17

