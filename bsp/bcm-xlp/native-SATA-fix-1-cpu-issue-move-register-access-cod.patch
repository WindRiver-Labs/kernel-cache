From a52fa856da520530919a5b23f90c60643d3e7c4f Mon Sep 17 00:00:00 2001
From: Sreenidhi BR <sreenidhibr@netlogicmicro.com>
Date: Tue, 24 Jan 2012 11:23:02 +0530
Subject: [PATCH 532/761] - native SATA: fix 1 cpu issue - move register
 access code to HAL - misc clean up

Based on Broadcom SDK 2.3.

Signed-off-by: Sreenidhi BR <sreenidhibr@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/ata/xlp-ahci.c |   57 ++++++++++++++++++------------------------------
 1 file changed, 21 insertions(+), 36 deletions(-)

diff --git a/drivers/ata/xlp-ahci.c b/drivers/ata/xlp-ahci.c
index f4d46af..8544313 100644
--- a/drivers/ata/xlp-ahci.c
+++ b/drivers/ata/xlp-ahci.c
@@ -2117,33 +2117,11 @@ static void ahci_port_intr(struct ata_port *ap)
 
 
 #ifdef CONFIG_NLM_XLP
-static inline void nlm_xlp_int_ack()
-{
-	uint32_t val = 0;
-	int i, loopout;
-
-	val = rd_sata_glue_reg(SATA_INT);
-
-	if (val)
-	{
-		/* clear the first interrupt which we come across */
-		loopout = 0;
-		for (i=0; i<32; i++)
-		{
-			if (val & (1<<i))
-			{
-				nlm_mdelay(10);
-				wr_sata_glue_reg(SATA_INT, (val & (1<<i)));
-				val = rd_sata_glue_reg(SATA_INT);
-				nlm_mdelay(10);
-				loopout = 1;
-			}
-			if (loopout == 1)
-				break;
-		}
-	}
-
-}
+extern void nlm_hal_sata_init(void);
+extern void nlm_hal_sata_intr_setup(void);
+extern void nlm_hal_sata_intr_ack(void);
+extern int is_nlm_xlp3xx(void);
+static int nlm_sata_init_done = 0;
 #endif
 
 static irqreturn_t ahci_interrupt(int irq, void *dev_instance)
@@ -2161,13 +2139,20 @@ static irqreturn_t ahci_interrupt(int irq, void *dev_instance)
 
 #ifdef CONFIG_NLM_XLP
 	/* clear the XLP glue logic int register */
-	nlm_xlp_int_ack();
+	nlm_hal_sata_intr_ack();
 #endif
 
 	/* sigh.  0xffffffff is a valid return from h/w */
 	irq_stat = readl_local(mmio + HOST_IRQ_STAT);
+
+#ifndef CONFIG_NLM_XLP
+	/*
+	   * for some reason, port interrupts on XLP native sata may still be
+	   * pending.  So, continue to check & clear port interrupts
+	   */
 	if (!irq_stat)
 		return IRQ_NONE;
+#endif
 
 	irq_masked = irq_stat & hpriv->port_map;
 
@@ -2176,8 +2161,10 @@ static irqreturn_t ahci_interrupt(int irq, void *dev_instance)
 	for (i = 0; i < host->n_ports; i++) {
 		struct ata_port *ap;
 
+#ifndef CONFIG_NLM_XLP
 		if (!(irq_masked & (1 << i)))
 			continue;
+#endif
 
 		ap = host->ports[i];
 		if (ap) {
@@ -2899,12 +2886,6 @@ static inline void ahci_gtf_filter_workaround(struct ata_host *host)
 {}
 #endif
 
-#ifdef CONFIG_NLM_XLP
-extern void nlm_hal_sata_init(void);
-extern int is_nlm_xlp3xx(void);
-static int nlm_sata_init_done = 0;
-#endif
-
 static int ahci_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)
 {
 	static int printed_version;
@@ -3098,10 +3079,14 @@ static int ahci_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)
 	{
 		pdev->irq = nlm_sata_irq;
 	}
-#endif
-
+	rc =  ata_host_activate(host, pdev->irq, ahci_interrupt, IRQF_SHARED,
+				 &ahci_sht);
+	nlm_hal_sata_intr_setup();
+	return rc;
+#else
 	return ata_host_activate(host, pdev->irq, ahci_interrupt, IRQF_SHARED,
 				 &ahci_sht);
+#endif
 }
 
 static int __init ahci_init(void)
-- 
1.7.10.4

