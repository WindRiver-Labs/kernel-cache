From fc6c8e96ec44e7b1734c162c663af28f8ed5db55 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Mon, 17 Jun 2013 15:55:35 +0800
Subject: [PATCH 765/765] bcm-xlp: fix one array access violation

The two array defined as below:

>	uint64_t enc_tb[ENC_MAX_STAT];
>	uint64_t enc_tp[ENC_MAX_STAT];

And the old method to access them as below:
> for(j =0 ;j <= ENC_MAX_STAT ; j++) {
>	 enc_tp[j] = 0;
>	 enc_tb[j] = 0;

Fix accessing range as below:
> for (j = 0; j < ENC_MAX_STAT; j++) {

Else when we accessed the proc node "/proc/netlogic/crypto_stats",
we would get the below calltrace:

<1>CPU 28 Unable to handle kernel paging request at
tual address 0000000000000000, epc == ffffffffc16531bc, ra == ffffffffc1653198
Oops[#2]:
Cpu 28
$ 0   : 28: 0000000000000000 28: ffffffffc12b1508 .......
$ 4   : 28: 0000000000000000 28: ffffffffc19211b7
$ 8   : 28: 000000000000000a 28: 0000000000000002
$12   : 28: fffffffffffffffc 28: ffffffffffffff80
$16   : 28: 0000000000000000 28: 0000000000000000
$20   : 28: 0000000000000000 28: c0000000fd800000
$24   : 28: 0000000000000010 28: 00000094c2a34f44
$28   : 28: c0000000f7d40000 28: c0000000f7d4fba8
Hi    : 000000000002f880
Lo    : 000000000000fd80
epc   : ffffffffc16531bc nlm_crypto_read_stats_proc+0x354/0x360
    Tainted: G      D
ra    : ffffffffc1653198 nlm_crypto_read_stats_proc+0x330/0x360
Status: 5400b8e3     28:KX  28:SX  28:UX  28:KERNEL  28:EXL  28:IE  28:
Cause : 8080000c
BadVA : 0000000000000000
PrId  : 000c1005 (XLP832 Rev B2)
<d>Modules linked in: 28: jbd2 28: ext4 28: fat 28
Process proc01 (pid: 2738, threadinfo=c0000000f7d40000, task=c0000000e9ff0dc0
Stack : 28: 0000000000000000 28: 0000000000000000 .........
    28: 0000000000000000 28: 0000000000000000
    28: 0000000000000000 28: 0000000000000000
    28: 0000000000000000 28: 0000000000000000
    28: 0000000000000000 28: 0000000000000000
    28: 0000000000000000 28: 0000000000000000
    28: 0000000000000000 28: 0000000000000000
    28: 0000000000000000 28: 0000000000000000
    28: 0000000000000000 28: c0000000f7540840
    28: 0000000000000400 28: 0000000120035730
    28: ... 28:
Call Trace:
[<ffffffffc16531bc>] nlm_crypto_read_stats_proc+0x354/0x360
[<ffffffffc12b1508>] proc_file_read+0x1f8/0x378
[<ffffffffc12aa514>] proc_reg_read+0xac/0x108
[<ffffffffc1239054>] vfs_read+0xb4/0x1b0
[<ffffffffc12391c8>] SyS_read+0x78/0x170
[<ffffffffc10cd164>] handle_sys64+0x44/0x64

: 28: 0064800b  28: dfc30100  28: 24020001  28:<08594be7> 28: ac620000
  28: 00000000  28: 67bdffd0  28: ffbe0020  28: ffbf0028  28:
<4>---[ end trace 0000000000000003 ]---

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/crypto/sae/nlm_crypto.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/crypto/sae/nlm_crypto.c b/drivers/crypto/sae/nlm_crypto.c
index 12ee5ba..cce94f2 100644
--- a/drivers/crypto/sae/nlm_crypto.c
+++ b/drivers/crypto/sae/nlm_crypto.c
@@ -562,7 +562,7 @@ nlm_crypto_read_stats_proc(char *page, char **start, off_t off, int count,
 
 	if (!proc_pos_check(&begin, &len, off, count))
 		goto out;
-	for(j =0 ;j <= ENC_MAX_STAT ; j++) {
+	for (j = 0; j < ENC_MAX_STAT; j++) {
 		enc_tp[j] = 0;	
 		enc_tb[j] = 0;
 		for(i = 0; i < MAX_CPU; i++)  {
-- 
1.7.4

