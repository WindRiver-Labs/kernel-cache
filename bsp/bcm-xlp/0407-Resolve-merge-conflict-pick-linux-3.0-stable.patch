From 942a359e29e97c2cd00e6cb41176183b8ed9437d Mon Sep 17 00:00:00 2001
From: Zi Shen Lim <zlim@netlogicmicro.com>
Date: Thu, 29 Sep 2011 16:28:25 -0700
Subject: [PATCH 407/762] Resolve merge conflict: pick linux-3.0-stable

still need mips_mmap_check()?

Based on Broadcom SDK 2.3.

Signed-off-by: Zi Shen Lim <zlim@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/kernel/syscall.c |   34 +---------------------------------
 1 files changed, 1 insertions(+), 33 deletions(-)

diff --git a/arch/mips/kernel/syscall.c b/arch/mips/kernel/syscall.c
index ee290d2..cc4b1e5 100644
--- a/arch/mips/kernel/syscall.c
+++ b/arch/mips/kernel/syscall.c
@@ -1,10 +1,3 @@
-/***********************************************************************
-Copyright 2003-2010 Netlogic Microsystems Inc. (“Netlogic”).
-This is a derived work from software originally provided by the external
-entity identified below. The licensing terms and warranties specified in
-the header of the original work apply to this derived work.
-
-*****************************#NETL_1#********************************/
 /*
  * This file is subject to the terms and conditions of the GNU General Public
  * License.  See the file "COPYING" in the main directory of this archive
@@ -75,24 +68,6 @@ out:
 	return res;
 }
 
-#if defined(CONFIG_NLM_COMMON) && defined(CONFIG_64BIT)
-int mips_mmap_check(unsigned long addr, unsigned long len,
-		    unsigned long flags)
-{
-	int app_is_32bit = test_thread_flag(TIF_32BIT_ADDR);
-
-	if(app_is_32bit){
-		if(len >= TASK_SIZE32){
-			return -EINVAL;
-		}
-		if ((flags & MAP_FIXED) && addr > (TASK_SIZE32 - len)){
-			return -EINVAL;
-		}
-	}
-	return 0;
-}
-#endif
-
 SYSCALL_DEFINE6(mips_mmap, unsigned long, addr, unsigned long, len,
 	unsigned long, prot, unsigned long, flags, unsigned long,
 	fd, off_t, offset)
@@ -180,20 +155,13 @@ out:
 	return error;
 }
 
-void sys_nlm_nlm_common_dummy(void)
-{	
-	printk("Unexpected Dummy System Call!\n");
-	BUG();
-}
-
 SYSCALL_DEFINE1(set_thread_area, unsigned long, addr)
 {
 	struct thread_info *ti = task_thread_info(current);
 
 	ti->tp_value = addr;
-	if (cpu_has_userlocal) {
+	if (cpu_has_userlocal)
 		write_c0_userlocal(addr);
-	}
 
 	return 0;
 }
-- 
1.7.0.4

