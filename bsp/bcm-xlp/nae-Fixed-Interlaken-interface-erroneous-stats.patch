From 0b5e523fcff3006c12f3b568f781e3d6cc193a75 Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Thu, 7 Mar 2013 16:22:49 +0530
Subject: [PATCH 694/761] nae: Fixed Interlaken interface erroneous stats.

An overflow was observed in the interlaken stats buffers, which was
leading to incorrect stats in ifconfig.

Based on Broadcom SDK 2.3.

Signed-off-by: kopal <kopal@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../common/cortina_cs34x7/nlm_cortina_cs34x7.c     |   24 ++++++++++----------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/arch/mips/netlogic/common/cortina_cs34x7/nlm_cortina_cs34x7.c b/arch/mips/netlogic/common/cortina_cs34x7/nlm_cortina_cs34x7.c
index 4152a97..ffa8240 100644
--- a/arch/mips/netlogic/common/cortina_cs34x7/nlm_cortina_cs34x7.c
+++ b/arch/mips/netlogic/common/cortina_cs34x7/nlm_cortina_cs34x7.c
@@ -198,7 +198,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
 	nlm_hal_cpld_write_16 (cs,  0x0080 , XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -206,7 +206,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
         nlm_hal_cpld_write_16 (cs,  0x0080 | (1<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -214,7 +214,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
         nlm_hal_cpld_write_16 (cs,  0x0080 | (0xb<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -222,7 +222,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
         nlm_hal_cpld_write_16 (cs,  0x0080 | (0x3<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -230,7 +230,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
         nlm_hal_cpld_write_16 (cs,  0x0080 | (0x4<<8) , XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -238,7 +238,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
         nlm_hal_cpld_write_16 (cs,  0x0080 | (0x6<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -246,7 +246,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
 	nlm_hal_cpld_write_16 (cs,  0x0080 | (0xf<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -254,7 +254,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
         nlm_hal_cpld_write_16 (cs,  0x0080 | (0x7<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -262,7 +262,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
         
         nlm_hal_cpld_write_16 (cs,  0x0080 | (0x14<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -270,7 +270,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
         nlm_hal_cpld_write_16 (cs,  0x0080 | (0xd<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
 	data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -278,7 +278,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
         nlm_hal_cpld_write_16 (cs,  0x0080 | (0x27<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
         data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
@@ -286,7 +286,7 @@ int cortina_get_mac_stats(int node, int hwport, int port, void *devstats)
 
         nlm_hal_cpld_write_16 (cs,  0x0080 | (0x28<<8), XGE_MAC_STATS_ACCESS + (0x1000 * phys_port));
         data = le16_to_cpu(nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA0 + (0x1000 * phys_port)));
-        data |= le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
+        data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA1 + (0x1000 * phys_port)) )) << 16;
 #ifdef CONFIG_64BIT
         data |= (unsigned long long )le16_to_cpu((nlm_hal_cpld_read_16 (cs,  XGE_MAC_STATS_DATA2 + (0x1000 * phys_port)) )) << 32;
 #endif
-- 
1.7.10.4

