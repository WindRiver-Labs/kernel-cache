From 9d79c33251ae0d43fe7136e0e56814c10c565096 Mon Sep 17 00:00:00 2001
From: reshmic <reshmic@broadcom.com>
Date: Tue, 4 Dec 2012 10:30:15 +0530
Subject: [PATCH 740/761] bcm_xlp: SAE: crypto: nlm_hal_get_chip_feature

replaces the setting up of chip_feature also now 3des key swap is done
by the nlm_crypto_fill_pkt_ctrl

Based on Broadcom SDK 2.3.

Signed-off-by: reshmic <reshmic@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/crypto/sae/nlm_aead.c   |   22 +++++++---------------
 drivers/crypto/sae/nlm_auth.c   |   16 ++++++++--------
 drivers/crypto/sae/nlm_crypto.c |    9 +++------
 drivers/crypto/sae/nlm_enc.c    |   15 +++------------
 4 files changed, 21 insertions(+), 41 deletions(-)

diff --git a/drivers/crypto/sae/nlm_aead.c b/drivers/crypto/sae/nlm_aead.c
index ec3ccd03..a0aa873 100755
--- a/drivers/crypto/sae/nlm_aead.c
+++ b/drivers/crypto/sae/nlm_aead.c
@@ -325,7 +325,7 @@ static int xlp_aes_cbc_setkey( struct crypto_aead *tfm, uint8_t *key, unsigned i
 
 	ret =  nlm_crypto_fill_pkt_ctrl(ctrl, hmac, hash, 
 			mode, cipher_alg, NLM_CIPHER_MODE_CBC, 0, cipher_key, 
-			cipher_keylen, auth_key, auth_keylen);
+			cipher_keylen, auth_key, auth_keylen,1);
 
 	return ret;
 }
@@ -386,7 +386,7 @@ static int xlp_aes_ctr_setkey( struct crypto_aead *tfm, u8 *key,
 
 	ret =  nlm_crypto_fill_pkt_ctrl(ctrl, hmac, hash,
 		mode, cipher_alg, NLM_CIPHER_MODE_CTR, 0, cipher_key,
-		cipher_keylen, auth_key, auth_keylen);
+		cipher_keylen, auth_key, auth_keylen,1);
 
 	return ret;
 }
@@ -425,20 +425,12 @@ static int  xlp_3des_setkey(struct crypto_aead *tfm, u8 *key, unsigned int keyle
 
 	ret =  nlm_crypto_fill_pkt_ctrl(ctrl, hmac, hash,
 		mode, cipher_alg,NLM_CIPHER_MODE_CBC,0,cipher_key,
-		 cipher_keylen, auth_key, auth_keylen);
+		 cipher_keylen, auth_key, auth_keylen,1);
 	
 	nlm_ctx->stat = TDES_CBC_STAT | h_stat << 8;;
-	if( CHIP_SUPPORTS(DES3_KEY_SWAP) ) {
-		memcpy((uint8_t *)d_key,cipher_key,24);
-	}
-	else {
-		memcpy(d_key,&cipher_key[16],8);
-		memcpy(&d_key[1],&cipher_key[8],8);
-		memcpy(&d_key[2],&cipher_key[0],8);
-	}
 	ret =  nlm_crypto_fill_pkt_ctrl(&nlm_ctx->ctrl, hmac, hash,
 			mode, cipher_alg, NLM_CIPHER_MODE_CBC, 0, ( unsigned char * )d_key,
-			cipher_keylen, auth_key, auth_keylen);
+			cipher_keylen, auth_key, auth_keylen,0);
 	#ifdef NLM_CRYPTO_DEBUG 
 	print_buf("ENC_KEY:", cipher_key, cipher_keylen);
 	print_buf("AUTH_KEY:", auth_key, auth_keylen);
@@ -481,7 +473,7 @@ static int xlp_des_setkey( struct crypto_aead *tfm, uint8_t  *key, unsigned int
 
 	ret =  nlm_crypto_fill_pkt_ctrl(ctrl, hmac, hash,
 		mode, cipher_alg,NLM_CIPHER_MODE_CBC,0,cipher_key,
-		 cipher_keylen, auth_key, auth_keylen);
+		 cipher_keylen, auth_key, auth_keylen,1);
 	
 	#ifdef NLM_CRYPTO_DEBUG 
 	print_buf("ENC_KEY:", cipher_key, cipher_keylen);
@@ -522,7 +514,7 @@ static int aead_gcm_rfc4106_setkey( struct crypto_aead *tfm, const u8 *key,
 	}
 	
 	ret = nlm_crypto_fill_pkt_ctrl(ctrl,0,auth_alg,NLM_HASH_MODE_GCM,cipher_alg,
-		NLM_CIPHER_MODE_GCM,0,(u8*)key,cipher_keylen,(u8*)key,cipher_keylen);
+		NLM_CIPHER_MODE_GCM,0,(u8*)key,cipher_keylen,(u8*)key,cipher_keylen,1);
 	ctx->iv_len = cipher_mode_iv_len[cipher_alg][NLM_HASH_MODE_GCM];
 #ifdef	NLM_CRYPTO_DEBUG
 	print_buf("KEY\n",key,cipher_keylen);	
@@ -570,7 +562,7 @@ static int aead_ccm_rfc4309_setkey(struct crypto_aead *tfm, const u8 *key,
 	
 
 	
-	ret = nlm_crypto_fill_pkt_ctrl(ctrl,0,auth_alg,NLM_HASH_MODE_CCM,cipher_alg,NLM_CIPHER_MODE_CCM,0,(u8*)key,cipher_keylen,(u8*)key,cipher_keylen);
+	ret = nlm_crypto_fill_pkt_ctrl(ctrl,0,auth_alg,NLM_HASH_MODE_CCM,cipher_alg,NLM_CIPHER_MODE_CCM,0,(u8*)key,cipher_keylen,(u8*)key,cipher_keylen,1);
 	ctx->iv_len = cipher_mode_iv_len[cipher_alg][NLM_HASH_MODE_GCM];
 #ifdef	NLM_CRYPTO_DEBUG
 	print_buf("KEY\n",key,cipher_keylen);	
diff --git a/drivers/crypto/sae/nlm_auth.c b/drivers/crypto/sae/nlm_auth.c
index e85b1f8..a24a948 100644
--- a/drivers/crypto/sae/nlm_auth.c
+++ b/drivers/crypto/sae/nlm_auth.c
@@ -393,7 +393,7 @@ int hash_key(int alg, int mode, const uint8_t * key, unsigned int keylen, uint8_
 			sizeof(struct nlm_crypto_pkt_param ) + 63)  & ~(0x3fUL));
 
 	memcpy(tmp_key,key,keylen);
-        nlm_crypto_fill_pkt_ctrl(ctrl,0,alg,mode,0,0,0,NULL,0,NULL,0);
+        nlm_crypto_fill_pkt_ctrl(ctrl,0,alg,mode,0,0,0,NULL,0,NULL,0,1);
         nlm_crypto_fill_auth_pkt_param(ctrl,pkt_param,0,keylen,0,new_key);
         nlm_crypto_fill_src_dst_seg(pkt_param,0,MAX_FRAGS,tmp_key,keylen);
 
@@ -456,7 +456,7 @@ static int xlp_auth_aes_xcbc_setkey(struct crypto_shash *tfm, const u8 * key, un
 
 	/*setup ctrl descriptor*/
 	nlm_crypto_fill_pkt_ctrl(&nlm_ctx->ctrl,0,hash_alg,NLM_HASH_MODE_XCBC,
-		NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)key,keylen);
+		NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)key,keylen,1);
 	
 	crypto_shash_setkey(nlm_ctx->fallback_tfm,key,keylen);
 
@@ -476,14 +476,14 @@ xlp_auth_hmac_sha256_setkey(struct crypto_shash *tfm, const u8 * key, unsigned i
 	if ( keylen > 64 ) {
 		hash_key(NLM_HASH_SHA,NLM_HASH_MODE_SHA256,key,keylen,&nlm_ctx->hashed_key[0]);
 		nlm_crypto_fill_pkt_ctrl(ctrl,1,NLM_HASH_SHA,NLM_HASH_MODE_SHA256,
-			NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char*)nlm_ctx->hashed_key,64);
+			NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char*)nlm_ctx->hashed_key,64,1);
 		crypto_shash_setkey(nlm_ctx->fallback_tfm,nlm_ctx->hashed_key,64);
 		return 0;
 	}
 
 	/*setup ctrl descriptor*/
 	nlm_crypto_fill_pkt_ctrl(ctrl,1,NLM_HASH_SHA,NLM_HASH_MODE_SHA256,
-		NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char*)key,keylen);
+		NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char*)key,keylen,1);
 	if ( ctrl->hashkeylen < auth_mode_key_len[NLM_HASH_SHA][NLM_HASH_MODE_SHA256]) 
 		ctrl->hashkeylen = auth_mode_key_len[NLM_HASH_SHA][NLM_HASH_MODE_SHA256];
 	crypto_shash_setkey(nlm_ctx->fallback_tfm,key,keylen);
@@ -502,14 +502,14 @@ xlp_auth_hmac_md5_setkey(struct crypto_shash *tfm, const u8 * key, unsigned int
 	if ( keylen > 64 ) {
 		hash_key(NLM_HASH_MD5,NLM_HASH_MODE_SHA1,key,keylen,&nlm_ctx->hashed_key[0]);
 		nlm_crypto_fill_pkt_ctrl(ctrl,1,NLM_HASH_MD5,NLM_HASH_MODE_SHA1,
-			NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)nlm_ctx->hashed_key,64);
+			NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)nlm_ctx->hashed_key,64,1);
 		crypto_shash_setkey(nlm_ctx->fallback_tfm,nlm_ctx->hashed_key,64);
 		return 0;
 	}
 
 	/*setup ctrl descriptor*/
 	nlm_crypto_fill_pkt_ctrl(ctrl,1,NLM_HASH_MD5,NLM_HASH_MODE_SHA1,
-		NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)key,keylen);
+		NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)key,keylen,1);
 	if ( ctrl->hashkeylen < auth_mode_key_len[NLM_HASH_MD5][NLM_HASH_MODE_SHA1]) 
 		ctrl->hashkeylen = auth_mode_key_len[NLM_HASH_MD5][NLM_HASH_MODE_SHA1];
 	crypto_shash_setkey(nlm_ctx->fallback_tfm,key,keylen);
@@ -528,14 +528,14 @@ xlp_auth_hmac_sha1_setkey(struct crypto_shash *tfm, const u8 * key, unsigned int
 
 		hash_key(NLM_HASH_SHA,NLM_HASH_MODE_SHA1,key,keylen,&nlm_ctx->hashed_key[0]);
 		nlm_crypto_fill_pkt_ctrl(ctrl,1,NLM_HASH_SHA,NLM_HASH_MODE_SHA1,
-			NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)nlm_ctx->hashed_key,64);
+			NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)nlm_ctx->hashed_key,64,1);
 		crypto_shash_setkey(nlm_ctx->fallback_tfm,nlm_ctx->hashed_key,64);
 		return 0;
 	}
 
 	/*setup ctrl descriptor*/
 	nlm_crypto_fill_pkt_ctrl(ctrl,1,NLM_HASH_SHA,NLM_HASH_MODE_SHA1,
-		NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)key,keylen);
+		NLM_CIPHER_BYPASS,NLM_CIPHER_MODE_ECB,0,NULL,0,(unsigned char *)key,keylen,1);
 	if ( ctrl->hashkeylen < auth_mode_key_len[NLM_HASH_SHA][NLM_HASH_MODE_SHA1]) 
 		ctrl->hashkeylen = auth_mode_key_len[NLM_HASH_SHA][NLM_HASH_MODE_SHA1];
 	crypto_shash_setkey(nlm_ctx->fallback_tfm,key,keylen);
diff --git a/drivers/crypto/sae/nlm_crypto.c b/drivers/crypto/sae/nlm_crypto.c
index afb8ff6..a60bac3 100644
--- a/drivers/crypto/sae/nlm_crypto.c
+++ b/drivers/crypto/sae/nlm_crypto.c
@@ -31,6 +31,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #include <asm/netlogic/hal/nlm_hal_fmn.h>
 #include <asm/netlogic/hal/nlm_hal_macros.h>
 #include <asm/netlogic/hal/nlm_hal_xlp_dev.h>
+#include <asm/netlogic/hal/nlm_hal.h>
 #include <linux/crypto.h>
 #include "nlm_async.h"
 
@@ -73,7 +74,7 @@ static int xlp_sae_release(struct inode *, struct file *);
 struct nlm_crypto_stat crypto_stat[MAX_CPU];
 int crypto_vc_base;
 int crypto_vc_limit;
-int chip_feature = 0 ;
+int nlm_crypto_chip_features = 0 ;
 
 
 
@@ -720,11 +721,6 @@ static void  init_sae(void)
 		nlm_hal_set_sae_engine_sel(node);
 	}
 
-	if( is_nlm_xlp2xx())
-		chip_feature = (ZUC | DES3_KEY_SWAP); 
-	else
-		chip_feature = 0x0;
-
 }
 
     static int __init
@@ -746,6 +742,7 @@ xlp_sae_init(void)
     }
     nlm_crypto_init();
     init_sae();
+    nlm_crypto_chip_features = nlm_hal_get_chip_feature();
     if(ipsec_async_vc != -1){
     	xlp_crypt_alg_init();
     	xlp_aead_alg_init();
diff --git a/drivers/crypto/sae/nlm_enc.c b/drivers/crypto/sae/nlm_enc.c
index 45c423a..5e75c18 100755
--- a/drivers/crypto/sae/nlm_enc.c
+++ b/drivers/crypto/sae/nlm_enc.c
@@ -97,7 +97,7 @@ xlp_setkey(struct crypto_ablkcipher *tfm, const u8 * in_key, unsigned int len, u
 {
 	struct nlm_enc_ctx * nlm_ctx = nlm_crypto_ablkcipher_ctx(tfm); 
 	
-	nlm_crypto_fill_pkt_ctrl(&nlm_ctx->ctrl,0,0,0,cipher_alg,cipher_mode,0,(unsigned char*)in_key,len,0,0);
+	nlm_crypto_fill_pkt_ctrl(&nlm_ctx->ctrl,0,0,0,cipher_alg,cipher_mode,0,(unsigned char*)in_key,len,0,0,1);
 	crypto_ablkcipher_crt(tfm)->ivsize = cipher_mode_iv_len[cipher_alg][ cipher_mode];
 	nlm_ctx->stat = stat;
 
@@ -109,17 +109,8 @@ static int
 xlp_setkey_des3(struct crypto_ablkcipher *tfm, const u8 * in_key, unsigned int len, uint32_t cipher_alg, uint32_t cipher_mode, uint16_t stat)
 {
 	struct nlm_enc_ctx * nlm_ctx = nlm_crypto_ablkcipher_ctx_2(tfm); 
-	uint64_t key[3] ;
-	if( CHIP_SUPPORTS(DES3_KEY_SWAP) ) {
-		memcpy((uint8_t *)key,in_key,len);
-	}
-	else {
-		memcpy(key,&in_key[16],8);
-		memcpy(&key[1],&in_key[8],8);
-		memcpy(&key[2],&in_key[0],8);
-	}
 
-	nlm_crypto_fill_pkt_ctrl(&nlm_ctx->ctrl,0,0,0,cipher_alg,cipher_mode,0,(unsigned char*)&key[0],len,0,0);
+	nlm_crypto_fill_pkt_ctrl(&nlm_ctx->ctrl,0,0,0,cipher_alg,cipher_mode,0,(unsigned char *)in_key,len,0,0,0);
 	crypto_ablkcipher_crt(tfm)->ivsize = cipher_mode_iv_len[cipher_alg][ cipher_mode];
 	nlm_ctx->stat = stat;
 
@@ -264,7 +255,7 @@ xlp_crypt(struct ablkcipher_request *req, unsigned int enc, int iv_size, struct
 	int ret = -EINPROGRESS; 
 	int try = 0;
 	struct nlm_crypto_pkt_param * pkt_param = (struct nlm_crypto_pkt_param *) NLM_CRYPTO_PKT_PARAM_OFFSET(ablkcipher_request_ctx(req));
-	struct nlm_async_crypto * async =  (struct nlm_async_crypto *)NLM_ASYNC_PTR_PARAM_OFFSET(ablkcipher_request_ctx(req));;
+	struct nlm_async_crypto * async =  (struct nlm_async_crypto *)NLM_ASYNC_PTR_PARAM_OFFSET(ablkcipher_request_ctx(req));
 
 	async->pkt_param = NULL;
 
-- 
1.7.10.4

