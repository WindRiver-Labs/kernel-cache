From adcdf7eb273dd6f2fdf74fc0182d162f60d9ad9d Mon Sep 17 00:00:00 2001
From: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Date: Thu, 28 Oct 2010 21:02:00 -0700
Subject: [PATCH 217/762] Use Coarse grained lock for smp_call_function to avoid kernel warnings on reference counts

Based on Broadcom SDK 2.3.

Signed-off-by: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 kernel/smp.c |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/kernel/smp.c b/kernel/smp.c
index d5f3238..5a40576 100644
--- a/kernel/smp.c
+++ b/kernel/smp.c
@@ -190,6 +190,7 @@ void generic_smp_call_function_interrupt(void)
 	 */
 	smp_mb();
 
+	raw_spin_lock(&call_function.lock);
 	/*
 	 * It's ok to use list_for_each_rcu() here even though we may
 	 * delete 'pos', since list_del_rcu() doesn't clear ->next
@@ -238,9 +239,7 @@ void generic_smp_call_function_interrupt(void)
 
 		WARN_ON(!cpumask_empty(data->cpumask));
 
-		raw_spin_lock(&call_function.lock);
 		list_del_rcu(&data->csd.list);
-		raw_spin_unlock(&call_function.lock);
 
 		csd_unlock(&data->csd);
 	}
@@ -345,6 +344,8 @@ int smp_call_function_single(int cpu, smp_call_func_t func, void *info,
 		}
 	}
 
+	raw_spin_unlock(&call_function.lock);
+
 	put_cpu();
 
 	return err;
-- 
1.7.0.4

