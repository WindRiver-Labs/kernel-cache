From b480c2139588954cd4844c6b5a7d7fb7e8f06082 Mon Sep 17 00:00:00 2001
From: Zi Shen Lim <zlim@netlogicmicro.com>
Date: Fri, 22 Oct 2010 11:25:47 -0700
Subject: [PATCH 209/761] Setup MMU only on thread0 of each core

Based on Broadcom SDK 2.3.

Signed-off-by: Zi Shen Lim <zlim@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/cpu_control.c     |   21 +++++++++++++++++++++
 arch/mips/netlogic/xlp/cpu_control_asm.S |   18 ++++++++++++------
 2 files changed, 33 insertions(+), 6 deletions(-)

diff --git a/arch/mips/netlogic/xlp/cpu_control.c b/arch/mips/netlogic/xlp/cpu_control.c
index c855a08..74f33b7 100644
--- a/arch/mips/netlogic/xlp/cpu_control.c
+++ b/arch/mips/netlogic/xlp/cpu_control.c
@@ -89,6 +89,25 @@ static inline void config_lsu(void)
 	);
 }
 
+/* Setup MMU */
+static inline void setup_mmu(void)
+{
+	uint32_t tmp0;
+
+	/*
+	 * Dummy write for A0 bug in MMU
+	 */
+	__asm__ __volatile__ (
+		".set push\n"
+		".set noreorder\n"
+		"li      %0, "STR(MMU_SETUP)"\n"
+		"mtcr    $0, %0\n"
+		"ehb\n"
+		".set pop\n"
+		: "=r" (tmp0)
+	);
+}
+
 static void enable_cores(unsigned int node, unsigned int cores_bitmap)
 {
 	uint32_t core, value;
@@ -145,6 +164,8 @@ void enable_cpus(unsigned int node, unsigned int node_cpumask)
 
 		config_lsu();
 
+		setup_mmu();
+
 		/* Linux runs out of KSEG2. Setup TLBs
 		 * for other threads, by running from
 		 * KSEG0. Then, jump back into KSEG2.
diff --git a/arch/mips/netlogic/xlp/cpu_control_asm.S b/arch/mips/netlogic/xlp/cpu_control_asm.S
index 7695f8c..bbeab31 100644
--- a/arch/mips/netlogic/xlp/cpu_control_asm.S
+++ b/arch/mips/netlogic/xlp/cpu_control_asm.S
@@ -23,12 +23,6 @@
 	 * cpus for KSEG2 access
 	 */
 	.macro 	SETUP_PERTHREAD_TLB
-       /*
-        * Dummy write for A0 bug in MMU
-        */
-        li      t0, MMU_SETUP
-        mtcr    zero, t0
-        ehb
 	dli     t3, CKSSEG
 	dmtc0   t3, CP0_ENTRYHI
 	li      t1, 0x1f
@@ -83,6 +77,15 @@
 	.set pop
 .endm
 
+.macro __setup_mmu
+	/*
+	 * Dummy write for A0 bug in MMU
+	 */
+	li      t0, MMU_SETUP
+	mtcr    zero, t0
+	ehb
+.endm
+
 	/* T0 of Non-0 Cores jump
 	 * here, from enable_cores
 	 * This code sits in KSEG0
@@ -113,6 +116,9 @@ EXPORT(reset_entry)
 	/* Configure LSU on Non-0 Cores. */
 	__config_lsu
 
+	/* Setup MMU on Non-0 Cores. */
+	__setup_mmu
+
 	dla     t1, boot_siblings_start
 	dla     t2, __boot_siblings
 	subu	t2, t2, t1		/* t2 now has the jump offset */
-- 
1.7.10.4

