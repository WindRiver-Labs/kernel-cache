From 70355e5b898c20315f91f1997297a0e33ff1678b Mon Sep 17 00:00:00 2001
From: Prasad Boddupalli <pboddupalli@netlogicmicro.com>
Date: Fri, 14 May 2010 09:55:17 -0700
Subject: [PATCH 020/761] enhance linux-xen interface

Currently xen hypercalls are invoked as mere function calls. However,
both xen and linux expect vcpu structure and thread info structure
pointers to be present in the gp register (respectively). Hence,
gp must be saved and set to vcpu structure before entering Xen
address space. The gp must also be restored to the per-process
thread-info strucure upon return from the hypercall. Xen shares
the vcpu struct address through the xensp field of the shared page.

Based on Broadcom SDK 2.3.

Signed-off-by: Prasad Boddupalli <pboddupalli@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/bootinfo.h      |    6 ----
 arch/mips/include/asm/xen/hypercall.h |   62 ++++++++++++++++++++++++++++++++-
 arch/mips/kernel/setup.c              |    2 +-
 arch/mips/netlogic/Kconfig            |    2 +-
 arch/mips/netlogic/xlp/Makefile       |    2 +-
 arch/mips/netlogic/xlp/xenbootinfo.c  |    6 ++--
 arch/mips/xen/enlighten.c             |    6 +++-
 7 files changed, 71 insertions(+), 15 deletions(-)

diff --git a/arch/mips/include/asm/bootinfo.h b/arch/mips/include/asm/bootinfo.h
index ced7afd..a6823d9 100644
--- a/arch/mips/include/asm/bootinfo.h
+++ b/arch/mips/include/asm/bootinfo.h
@@ -160,10 +160,4 @@ struct boot_mem_map_exclude_region {
 	uint64_t end;
 };
 
-#ifdef CONFIG_MIPS_XEN
-#define PROMDATA_HIDE(ptr, field) (((ptr)->field == 0) ? 0 : __va((unsigned long)(ptr)->field))
-#else
-#define PROMDATA_HIDE(ptr, field) ((unsigned long)(ptr)->field)
-#endif
-
 #endif /* _ASM_BOOTINFO_H */
diff --git a/arch/mips/include/asm/xen/hypercall.h b/arch/mips/include/asm/xen/hypercall.h
index 90965c8..8ff3ce7 100644
--- a/arch/mips/include/asm/xen/hypercall.h
+++ b/arch/mips/include/asm/xen/hypercall.h
@@ -46,6 +46,7 @@
 #include <xen/interface/sched.h>
 #include <xen/interface/physdev.h>
 #include <xen/interface/platform.h>
+#include <asm/xen/hypervisor.h>
 
 /*
  * The hypercall asms have to meet several constraints:
@@ -81,6 +82,31 @@
 
 extern struct { char _entry[32]; } hypercall_page[];
 
+#define save_gp(var) \
+({ \
+        __asm__ __volatile__ ( \
+                ".set push\n" \
+                ".set noreorder\n" \
+                "move %0, $28\n" \
+                ".set pop\n" \
+                :"=r"(var) \
+                ); \
+})
+
+#define restore_gp(var) \
+({ \
+        __asm__ __volatile__ ( \
+                ".set push\n" \
+                ".set noreorder\n" \
+                "move $28, %0\n" \
+                ".set pop\n" \
+                : \
+                : "r"(var) \
+                ); \
+})
+
+#define load_gp restore_gp
+
 #if 0
 #define __HYPERCALL		"call hypercall_page+%c[offset]"
 #define __HYPERCALL_ENTRY(x)						\
@@ -373,7 +399,41 @@ HYPERVISOR_xen_version(int cmd, void *arg)
 static inline int
 HYPERVISOR_console_io(int cmd, int count, char *str)
 {
-	return _hypercall3(int, console_io, cmd, count, str);
+	int (*hc_console_io)(int cmd, int count, char *str);
+	unsigned long long *hc_offset = (unsigned long long *)hypercall_page;
+	unsigned long __gp;
+	int retval;
+	unsigned long __current;
+	struct shared_info *shared_info;
+
+	hc_console_io = (void *)(hc_offset[__HYPERVISOR_console_io]);
+
+	/*
+	 * Song and Dance to make a hypercall:
+	 * 
+	 * 1. Save gp
+	 * 2. read contents of *xensp (start_info->shared_info->arch.xensp)
+	 * 3. mask (2) with XEN_PAGE_MASK to get a reference to 'current'
+	 * 4. store (3) in gp
+	 * 5. invoke hypercall
+	 * 6. restore gp
+	 */
+	save_gp(__gp);
+
+	/*
+	 * FIXME: set xen_shared_info to xen_start_info->shared_info
+	 */
+	shared_info = (struct shared_info *)xen_start_info->shared_info;
+
+	__current = *(shared_info->arch.xensp);
+
+	load_gp(__current & ~(XEN_PAGE_SIZE - 1));
+
+	retval = hc_console_io(cmd, count, str);
+
+	restore_gp(__gp);
+
+	return retval;
 }
 
 static inline int
diff --git a/arch/mips/kernel/setup.c b/arch/mips/kernel/setup.c
index bd09542..489ebe4 100644
--- a/arch/mips/kernel/setup.c
+++ b/arch/mips/kernel/setup.c
@@ -286,7 +286,7 @@ static void __init bootmem_init(void)
 	 * not selected. Once that done we can determine the low bound
 	 * of usable memory.
 	 */
-#ifdef CONFIG_MIPS_XEN
+#ifdef CONFIG_XEN
 	reserved_end = max(init_initrd(),
 			   (unsigned long) PFN_UP(__pa_symbol(&_end) + PAGE_SIZE));
 #else
diff --git a/arch/mips/netlogic/Kconfig b/arch/mips/netlogic/Kconfig
index dfeba66..ec5771d 100644
--- a/arch/mips/netlogic/Kconfig
+++ b/arch/mips/netlogic/Kconfig
@@ -197,7 +197,7 @@ config EXEC_INHIBIT
        depends on NLM_XLP
        default n
 
-config MIPS_XEN
+config XEN
        bool "Enable Paravirtualization for Xen"
        depends on NLM_XLP
        default n
diff --git a/arch/mips/netlogic/xlp/Makefile b/arch/mips/netlogic/xlp/Makefile
index cddac1d..2acd5eb 100644
--- a/arch/mips/netlogic/xlp/Makefile
+++ b/arch/mips/netlogic/xlp/Makefile
@@ -11,7 +11,7 @@ obj-$(CONFIG_NLM_XLP) += platform-xlp.o
 obj-$(CONFIG_SMP)      += smp.o smpboot.o
 obj-$(CONFIG_KGDB)      += nmi.o
 
-ifeq ($(CONFIG_MIPS_XEN),y)
+ifeq ($(CONFIG_XEN),y)
 obj-y += xenbootinfo.o
 else
 obj-y += bootinfo.o
diff --git a/arch/mips/netlogic/xlp/xenbootinfo.c b/arch/mips/netlogic/xlp/xenbootinfo.c
index 6091cbb..a0726f4 100644
--- a/arch/mips/netlogic/xlp/xenbootinfo.c
+++ b/arch/mips/netlogic/xlp/xenbootinfo.c
@@ -8,8 +8,7 @@
 #include <asm/netlogic/sim.h>
 #include <asm/netlogic/bootinfo.h>
 #include <xen/interface/xen.h>
-
-#define XEN_PAGE_SIZE (64 << 10)
+#include <asm/xen/hypervisor.h>
 
 static unsigned long memmap_start;
 extern char _end[];
@@ -57,12 +56,11 @@ int read_cmdline_args(int *argc, char *g_argv[], char *g_envp[])
 
 int read_prominfo(void)
 {
-	struct start_info *si;
 	unsigned long dst;
 
 	dst = (unsigned long)__va((unsigned long) PFN_ALIGN(__pa_symbol(&_end)));
 
-	si = (struct start_info *)dst;
+	xen_start_info = (struct start_info *)dst;
 	dst += ALIGN(sizeof(struct start_info), sizeof(void *));
 
 	prom_info = (struct psb_info *)dst;
diff --git a/arch/mips/xen/enlighten.c b/arch/mips/xen/enlighten.c
index 2fb4493..b2ba959 100644
--- a/arch/mips/xen/enlighten.c
+++ b/arch/mips/xen/enlighten.c
@@ -126,6 +126,8 @@ static void xen_vcpu_setup(int cpu)
 }
 #endif
 
+static char *banner = "Booting paravirtualized kernel on Xen\n";
+
 static void __init xen_banner(void)
 {
 	unsigned version = HYPERVISOR_xen_version(XENVER_version, NULL);
@@ -133,7 +135,9 @@ static void __init xen_banner(void)
 
 	HYPERVISOR_xen_version(XENVER_extraversion, &extra);
 
-	printk(KERN_INFO "Booting paravirtualized kernel on Xen\n");
+	HYPERVISOR_console_io(CONSOLEIO_write, strlen(banner), banner);
+
+//	printk(KERN_INFO "Booting paravirtualized kernel on Xen\n");
 
 	printk(KERN_INFO "Xen version: %d.%d%s%s%s\n",
 	       version >> 16, version & 0xffff, extra.extraversion,
-- 
1.7.10.4

