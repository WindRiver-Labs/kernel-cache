From df88eb8248274b479eb8824ca612f6716f69cdd9 Mon Sep 17 00:00:00 2001
From: Mehul Vora <mehulv@broadcom.com>
Date: Tue, 5 Mar 2013 14:02:58 +0530
Subject: [PATCH 673/761] nae: Avoid using add_timer_on_cpu api in driver.

Remove usage of add_timer_on_cpu api from the load balancing code.

Based on Broadcom SDK 2.3.

Signed-off-by: Mehul Vora <mehulv@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/nae/xlpge_rx.c |   18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/net/nae/xlpge_rx.c b/drivers/net/nae/xlpge_rx.c
index 5df5c24..0f7a632 100644
--- a/drivers/net/nae/xlpge_rx.c
+++ b/drivers/net/nae/xlpge_rx.c
@@ -398,6 +398,13 @@ restart:
 			jiffies + load_balance_timer_run * HZ);
 }
 
+void nlm_setup_load_balance_timer(void *data)
+{
+	int pcpu = hard_smp_processor_id();
+	nlm_load_balance_timer[pcpu].expires = jiffies + 5*HZ;
+	add_timer(&nlm_load_balance_timer[pcpu]);
+}
+
 void nlm_init_load_balance(void)
 {
 	uint32_t signature;
@@ -442,15 +449,20 @@ void nlm_init_load_balance(void)
 	for (i = 0; i < NLM_UCORE_SHARED_TABLE_SIZE; i++)
 		(nlm_flow_meta_info+i)->cpu_owner = -1;
 
-	for (i = 0, j = 0; i < NUM_LOAD_BALANCE_CPU; i++) {
+	for (i = 0; i < NUM_LOAD_BALANCE_CPU; i++) {
 		if (!cpu_isset(i, phys_cpu_present_map))
 			continue;
 		/* Register a timer for each cpu to calculate the flow rate */
 		setup_timer(&nlm_load_balance_timer[i],
 			nlm_load_balance_timer_func, i);
-		nlm_load_balance_timer[i].expires = jiffies + 5 * HZ;
-		add_timer_on(&nlm_load_balance_timer[i], j++);
 	}
+	smp_call_function(nlm_setup_load_balance_timer, NULL, 1);
+
+	/*Add timer on self*/
+	preempt_disable();
+	nlm_load_balance_timer[hard_smp_processor_id()].expires = jiffies + 5*HZ;
+	add_timer(&nlm_load_balance_timer[hard_smp_processor_id()]);
+	preempt_enable();
 
 	setup_search_path();
 	/*Update ucore shared memory with the table*/
-- 
1.7.10.4

