From 46eedff4e0847eea6c66fefc4a62d778e0d7df36 Mon Sep 17 00:00:00 2001
From: Om Narasimhan <omn@broadcom.com>
Date: Wed, 7 Nov 2012 13:35:35 -0800
Subject: [PATCH 621/761] PM : CPU frequency scaling enabling

Enables CPU frequency scaling on XLP

Based on Broadcom SDK 2.3.

Signed-off-by: Om Narasimhan <omn@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/xlp-cpufreq.c |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/arch/mips/netlogic/xlp/xlp-cpufreq.c b/arch/mips/netlogic/xlp/xlp-cpufreq.c
index f5925a0..47c2b48 100644
--- a/arch/mips/netlogic/xlp/xlp-cpufreq.c
+++ b/arch/mips/netlogic/xlp/xlp-cpufreq.c
@@ -7,6 +7,9 @@
 #include <linux/regulator/consumer.h>
 #include <asm/netlogic/xlp8xx/cpu_control_macros.h>
 #include <asm/netlogic/cpumask.h>
+#include <asm/netlogic/hal/nlm_hal.h>
+#include <asm/netlogic/pic_hal.h>
+#include <asm/netlogic/xlp.h>
 
 #define XLP_CPU_PER_NODE	4
 
@@ -21,7 +24,7 @@ static int get_cpu_freq_masked(int cpu_num, int mask)
 #define XLP_FREQ_MASK  (0xfffffff0)
 #define XLP_CPU0       0
 
-static spinlock_t freq_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(freq_lock);	/* unlocked */
 static struct cpumask xlp_affected_cpus[NR_CPUS];
 /* The following are the possible devisors
  * The first value need not be 2 always. Read Reset value from
@@ -54,10 +57,10 @@ u32 change_cpu_freq(int cpu, int dec)
 {
 	u32 val;
 	u8 node = cpu / NLM_MAX_CPU_PER_NODE;
-	cpu %= NLM_MAX_CPU_PER_NODE;
-
 	/* INC freq --> DEC multiplier */
 	u32 reg = (dec == 1) ? 0x52 : 0x53;	/* Increment/Decrement reg */
+	cpu %= NLM_MAX_CPU_PER_NODE;
+
 	val = (0x1 << (cpu >> 2));
 	nlm_hal_write_32bit_reg(xlp_syscfg_base[node], reg, val);
 	return 0;
@@ -96,7 +99,6 @@ __init static int build_cpufreq_table(struct cpufreq_frequency_table *t)
 	u32 divfs = get_core_dfs(XLP_CPU0);
 	int i, div_start = -1, j;
 
-	fdebug("XXXX : actual freq = %u\n", get_cpu_freq(XLP_CPU0));
 	freq = get_cpu_freq_masked(XLP_CPU0, XLP_FREQ_MASK);	// In KHz
 	divfs = (divfs >> ((XLP_CPU0 & 0x1f) >> 2)) & 0xf;
 	for (i = 0; i < XLP_DIVS; i++) {
-- 
1.7.10.4

