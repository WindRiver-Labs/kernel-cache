From ff78e91fca9673bc301072c29aae8bfb64e0a139 Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Wed, 5 Apr 2017 20:01:45 +0800
Subject: [PATCH 3/3] actions-s500: improve code when enable suspend/resume
 feature in kernel 4.1.21

After enable below kernel configure for suspend/resume feature
in kernel 4.1.21, some code need to be improved.
CONFIG_PM_AUTOSLEEP=y
CONFIG_FB_EARLYSUSPEND=y
CONFIG_HIBERNATION=y

The reason as below:
SDK vendor implement their own suspend/resume functions for saving
more battery energy base on kernel 3.10. We get SDK patches from
kernel 3.10, and apply them into kernel 4.1.21.
But some code have been defined in common code by kernel 4.1.21.
So, I adjust code as below:
- delete conflicting SDK vendor code.
- move unreasonable SDK vendor code from state_store() into
  kernel/power/suspend.c, and wrap them in a function that is called
  in kernel/power/mian.c

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/mach-owl/Makefile        |    1 -
 arch/arm/mach-owl/processor-owl.c |  105 ------------
 arch/arm/mach-owl/swsusp-owl.S    |  325 -------------------------------------
 include/linux/suspend.h           |    1 +
 kernel/power/hibernate.c          |    1 -
 kernel/power/main.c               |    5 +-
 kernel/power/power.h              |    4 -
 kernel/power/snapshot.c           |   14 --
 kernel/power/suspend.c            |   11 ++
 9 files changed, 13 insertions(+), 454 deletions(-)
 mode change 100755 => 100644 arch/arm/mach-owl/Makefile
 delete mode 100755 arch/arm/mach-owl/processor-owl.c
 delete mode 100755 arch/arm/mach-owl/swsusp-owl.S
 mode change 100755 => 100644 kernel/power/main.c
 mode change 100755 => 100644 kernel/power/power.h
 mode change 100755 => 100644 kernel/power/snapshot.c
 mode change 100755 => 100644 kernel/power/suspend.c

diff --git a/arch/arm/mach-owl/Makefile b/arch/arm/mach-owl/Makefile
old mode 100755
new mode 100644
index e487f66..61b8d3a
--- a/arch/arm/mach-owl/Makefile
+++ b/arch/arm/mach-owl/Makefile
@@ -11,7 +11,6 @@ obj-$(CONFIG_GPIO_OWL) += gpio-owl.o
 obj-$(CONFIG_PINCTRL_OWL) += pinctrl-owl.o pinctrl_common-owl.o pinctrl_data-atm7059.o
 obj-$(CONFIG_SMP) += platsmp-owl.o headsmp-owl.o hotplug_base-owl.o 
 obj-$(CONFIG_ACTIONS_SOC_CAMERA) += isp_pwd-owl.o
-obj-$(CONFIG_HIBERNATION) += swsusp-owl.o processor-owl.o
 obj-$(CONFIG_PM) += pm-owl.o sleep-owl.o
 obj-$(CONFIG_HOTPLUG_OWL) += hotplug-owl.o
 
diff --git a/arch/arm/mach-owl/processor-owl.c b/arch/arm/mach-owl/processor-owl.c
deleted file mode 100755
index 02b7031..0000000
--- a/arch/arm/mach-owl/processor-owl.c
+++ /dev/null
@@ -1,105 +0,0 @@
-#include <linux/kernel.h>
-#include <linux/module.h>
-#include <linux/mm.h>
-#include <linux/uaccess.h>
-#include <linux/init.h>
-#include <mach/power.h>
-
-struct saved_context saved_context;
-
-void __save_processor_state(struct saved_context *ctxt)
-{
-	preempt_disable();
-
-	/* save coprocessor 15 registers*/
-	asm volatile ("mrc p15, 2, %0, c0, c0, 0" : "=r"(ctxt->CSSR));
-	asm volatile ("mrc p15, 0, %0, c1, c0, 0" : "=r"(ctxt->CR));
-	asm volatile ("mrc p15, 0, %0, c1, c0, 1" : "=r"(ctxt->AUXCR));
-	asm volatile ("mrc p15, 0, %0, c1, c0, 2" : "=r"(ctxt->CACR));
-	asm volatile ("mrc p15, 0, %0, c2, c0, 0" : "=r"(ctxt->TTB_0R));
-	asm volatile ("mrc p15, 0, %0, c2, c0, 1" : "=r"(ctxt->TTB_1R));
-	asm volatile ("mrc p15, 0, %0, c2, c0, 2" : "=r"(ctxt->TTBCR));
-	asm volatile ("mrc p15, 0, %0, c3, c0, 0" : "=r"(ctxt->DACR));
-	asm volatile ("mrc p15, 0, %0, c5, c0, 0" : "=r"(ctxt->D_FSR));
-	asm volatile ("mrc p15, 0, %0, c5, c0, 1" : "=r"(ctxt->I_FSR));
-	asm volatile ("mrc p15, 0, %0, c5, c1, 0" : "=r"(ctxt->D_AFSR));
-	asm volatile ("mrc p15, 0, %0, c5, c1, 1" : "=r"(ctxt->I_AFSR));
-	asm volatile ("mrc p15, 0, %0, c6, c0, 0" : "=r"(ctxt->D_FAR));
-	asm volatile ("mrc p15, 0, %0, c6, c0, 2" : "=r"(ctxt->I_FAR));
-	asm volatile ("mrc p15, 0, %0, c7, c4, 0" : "=r"(ctxt->PAR));
-	asm volatile ("mrc p15, 0, %0, c9, c12, 0" : "=r"(ctxt->PMControlR));
-	asm volatile ("mrc p15, 0, %0, c9, c12, 1" : "=r"(ctxt->CESR));
-	asm volatile ("mrc p15, 0, %0, c9, c12, 2" : "=r"(ctxt->CECR));
-	asm volatile ("mrc p15, 0, %0, c9, c12, 3" : "=r"(ctxt->OFSR));
-	asm volatile ("mrc p15, 0, %0, c9, c12, 5" : "=r"(ctxt->PCSR));
-	asm volatile ("mrc p15, 0, %0, c9, c13, 0" : "=r"(ctxt->CCR));
-	asm volatile ("mrc p15, 0, %0, c9, c13, 1" : "=r"(ctxt->ESR));
-	asm volatile ("mrc p15, 0, %0, c9, c13, 2" : "=r"(ctxt->PMCountR));
-	asm volatile ("mrc p15, 0, %0, c9, c14, 0" : "=r"(ctxt->UER));
-	asm volatile ("mrc p15, 0, %0, c9, c14, 1" : "=r"(ctxt->IESR));
-	asm volatile ("mrc p15, 0, %0, c9, c14, 2" : "=r"(ctxt->IECR));
-	asm volatile ("mrc p15, 0, %0, c10, c2, 0" : "=r"(ctxt->PRRR));
-	asm volatile ("mrc p15, 0, %0, c10, c2, 1" : "=r"(ctxt->NRRR));
-	asm volatile ("mrc p15, 0, %0, c12, c0, 0" : "=r"(ctxt->SNSVBAR));
-	asm volatile ("mrc p15, 0, %0, c13, c0, 0" : "=r"(ctxt->FCSE));
-	asm volatile ("mrc p15, 0, %0, c13, c0, 1" : "=r"(ctxt->CID));
-	asm volatile ("mrc p15, 0, %0, c13, c0, 2" : "=r"(ctxt->URWTPID));
-	asm volatile ("mrc p15, 0, %0, c13, c0, 3" : "=r"(ctxt->UROTPID));
-	asm volatile ("mrc p15, 0, %0, c13, c0, 4" : "=r"(ctxt->POTPID));
-
-	saved_cr = ctxt->CR;
-	saved_ttb = ctxt->TTB_0R;
-	idmap = virt_to_phys(idmap_pgd);
-}
-
-void save_processor_state(void)
-{
-	__save_processor_state(&saved_context);
-}
-EXPORT_SYMBOL(save_processor_state);
-
-void __restore_processor_state(struct saved_context *ctxt)
-{
-	asm volatile ("mcr p15, 2, %0, c0, c0, 0" : : "r"(ctxt->CSSR));
-	asm volatile ("mcr p15, 0, %0, c1, c0, 0" : : "r"(ctxt->CR));
-	asm volatile ("mcr p15, 0, %0, c1, c0, 1" : : "r"(ctxt->AUXCR));
-	asm volatile ("mcr p15, 0, %0, c1, c0, 2" : : "r"(ctxt->CACR));
-	asm volatile ("mcr p15, 0, %0, c2, c0, 0" : : "r"(ctxt->TTB_0R));
-	asm volatile ("mcr p15, 0, %0, c2, c0, 1" : : "r"(ctxt->TTB_1R));
-	asm volatile ("mcr p15, 0, %0, c2, c0, 2" : : "r"(ctxt->TTBCR));
-	asm volatile ("mcr p15, 0, %0, c3, c0, 0" : : "r"(ctxt->DACR));
-	asm volatile ("mcr p15, 0, %0, c5, c0, 0" : : "r"(ctxt->D_FSR));
-	asm volatile ("mcr p15, 0, %0, c5, c0, 1" : : "r"(ctxt->I_FSR));
-	asm volatile ("mcr p15, 0, %0, c5, c1, 0" : : "r"(ctxt->D_AFSR));
-	asm volatile ("mcr p15, 0, %0, c5, c1, 1" : : "r"(ctxt->I_AFSR));
-	asm volatile ("mcr p15, 0, %0, c6, c0, 0" : : "r"(ctxt->D_FAR));
-	asm volatile ("mcr p15, 0, %0, c6, c0, 2" : : "r"(ctxt->I_FAR));
-	asm volatile ("mcr p15, 0, %0, c7, c4, 0" : : "r"(ctxt->PAR));
-	asm volatile ("mcr p15, 0, %0, c9, c12, 0" : : "r"(ctxt->PMControlR));
-	asm volatile ("mcr p15, 0, %0, c9, c12, 1" : : "r"(ctxt->CESR));
-	asm volatile ("mcr p15, 0, %0, c9, c12, 2" : : "r"(ctxt->CECR));
-	asm volatile ("mcr p15, 0, %0, c9, c12, 3" : : "r"(ctxt->OFSR));
-	asm volatile ("mcr p15, 0, %0, c9, c12, 5" : : "r"(ctxt->PCSR));
-	asm volatile ("mcr p15, 0, %0, c9, c13, 0" : : "r"(ctxt->CCR));
-	asm volatile ("mcr p15, 0, %0, c9, c13, 1" : : "r"(ctxt->ESR));
-	asm volatile ("mcr p15, 0, %0, c9, c13, 2" : : "r"(ctxt->PMCountR));
-	asm volatile ("mcr p15, 0, %0, c9, c14, 0" : : "r"(ctxt->UER));
-	asm volatile ("mcr p15, 0, %0, c9, c14, 1" : : "r"(ctxt->IESR));
-	asm volatile ("mcr p15, 0, %0, c9, c14, 2" : : "r"(ctxt->IECR));
-	asm volatile ("mcr p15, 0, %0, c10, c2, 0" : : "r"(ctxt->PRRR));
-	asm volatile ("mcr p15, 0, %0, c10, c2, 1" : : "r"(ctxt->NRRR));
-	asm volatile ("mcr p15, 0, %0, c12, c0, 0" : : "r"(ctxt->SNSVBAR));
-	asm volatile ("mcr p15, 0, %0, c13, c0, 0" : : "r"(ctxt->FCSE));
-	asm volatile ("mcr p15, 0, %0, c13, c0, 1" : : "r"(ctxt->CID));
-	asm volatile ("mcr p15, 0, %0, c13, c0, 2" : : "r"(ctxt->URWTPID));
-	asm volatile ("mcr p15, 0, %0, c13, c0, 3" : : "r"(ctxt->UROTPID));
-	asm volatile ("mcr p15, 0, %0, c13, c0, 4" : : "r"(ctxt->POTPID));
-
-	preempt_enable();
-}
-
-void restore_processor_state(void)
-{
-	__restore_processor_state(&saved_context);
-}
-EXPORT_SYMBOL(restore_processor_state);
diff --git a/arch/arm/mach-owl/swsusp-owl.S b/arch/arm/mach-owl/swsusp-owl.S
deleted file mode 100755
index 2ead398..0000000
--- a/arch/arm/mach-owl/swsusp-owl.S
+++ /dev/null
@@ -1,325 +0,0 @@
-/*
- * swsusp.S - This file is based on arch/i386/power/swsusp.S;
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#include <linux/linkage.h>
-#include <asm/segment.h>
-#include <asm/page.h>
-
-	.text
-
-#define LOCAL_WORD(x) \
-	.data					; \
-	.p2align 2				; \
-	.type   x, #object		; \
-	.size   x, 4			; \
-x:							; \
-	.long 1
-
-#define WORD_ADDR(x) \
-	.align 2				; \
-.L##x:						; \
-	.word x
-
-#define FUNC(x) \
-	.text					; \
-	.p2align 2				; \
-	.globl x				; \
-	.type   x, #function	; \
-x:
-
-#define FUNC_END(x) \
-	.size   x, .-x
-
-#define CHANGE_MODE(x) \
-	mov     r1, r0				; \
-	bic     r1, r1, #0x1f		; \
-	orr     r1, r1, #0x##x		; \
-	msr     cpsr_c, r1
-
-#define SAVE_VFP_REG(x) \
-	fmrrd   r0, r1, d##x		; \
-	str     r0, [r2]			; \
-	str     r1, [r3]			; \
-	add     r2, r2, #4			; \
-	add     r3, r3, #4
-
-
-#define RESTORE_VFP_REG(x) \
-	ldr     r0, [r2]			; \
-	ldr     r1, [r3]			; \
-	fmdrr   d##x, r0, r1
-
-
-/* nonvolatile int registers */
-	.globl  saved_context_r0
-
-	LOCAL_WORD(saved_context_r0)
-	LOCAL_WORD(saved_context_r1)
-	LOCAL_WORD(saved_context_r2)
-	LOCAL_WORD(saved_context_r3)
-	LOCAL_WORD(saved_context_r4)
-	LOCAL_WORD(saved_context_r5)
-	LOCAL_WORD(saved_context_r6)
-	LOCAL_WORD(saved_context_r7)
-	LOCAL_WORD(saved_context_r8)
-	LOCAL_WORD(saved_context_r9)
-	LOCAL_WORD(saved_context_r10)
-	LOCAL_WORD(saved_context_r11)
-	LOCAL_WORD(saved_context_r12)
-	LOCAL_WORD(saved_context_r13)
-	LOCAL_WORD(saved_context_r14)
-	LOCAL_WORD(saved_cpsr)
-
-	LOCAL_WORD(saved_context_r8_fiq)
-	LOCAL_WORD(saved_context_r9_fiq)
-	LOCAL_WORD(saved_context_r10_fiq)
-	LOCAL_WORD(saved_context_r11_fiq)
-	LOCAL_WORD(saved_context_r12_fiq)
-	LOCAL_WORD(saved_context_r13_fiq)
-	LOCAL_WORD(saved_context_r14_fiq)
-	LOCAL_WORD(saved_spsr_fiq)
-
-	LOCAL_WORD(saved_context_r13_irq)
-	LOCAL_WORD(saved_context_r14_irq)
-	LOCAL_WORD(saved_spsr_irq)
-
-	LOCAL_WORD(saved_context_r13_svc)
-	LOCAL_WORD(saved_context_r14_svc)
-	LOCAL_WORD(saved_spsr_svc)
-
-	LOCAL_WORD(saved_context_r13_abt)
-	LOCAL_WORD(saved_context_r14_abt)
-	LOCAL_WORD(saved_spsr_abt)
-
-	LOCAL_WORD(saved_context_r13_und)
-	LOCAL_WORD(saved_context_r14_und)
-	LOCAL_WORD(saved_spsr_und)
-
-	LOCAL_WORD(saved_fpscr)
-	LOCAL_WORD(saved_fpexc)
-
-
-FUNC(swsusp_arch_suspend)
-	/* save current program status register */
-	ldr     r3, .Lsaved_cpsr
-	mrs     r1, cpsr
-	str     r1, [r3]
-
-	/* hold current mode */
-	mrs     r0, cpsr
-
-	CHANGE_MODE(1f) /* change to system(user) mode */
-	/* save nonvolatile int register */
-	ldr     r3, .Lsaved_context_r0
-	stmia   r3, {r0-r14}
-
-.Lnext:
-	CHANGE_MODE(11) /* change to fiq mode */
-	/* save nonvolatile int register */
-	ldr     r3, .Lsaved_context_r8_fiq
-	stmia   r3, {r8-r14}
-	/* save spsr_fiq register */
-	ldr     r3, .Lsaved_spsr_fiq
-	mrs     r1, spsr
-	str     r1, [r3]
-
-	CHANGE_MODE(12) /* change to irq mode */
-	/* save nonvolatile int register */
-	ldr     r3, .Lsaved_context_r13_irq
-	stmia   r3, {r13-r14}
-	/* save spsr_irq register */
-	ldr     r3, .Lsaved_spsr_irq
-	mrs     r1, spsr
-	str     r1, [r3]
-
-	CHANGE_MODE(13) /* change to svc mode */
-	/* save nonvolatile int register */
-	ldr     r3, .Lsaved_context_r13_svc
-	stmia   r3, {r13-r14}
-	/* save spsr_svc register */
-	ldr     r3, .Lsaved_spsr_svc
-	mrs     r1, spsr
-	str     r1, [r3]
-
-	CHANGE_MODE(17) /* change to abt mode */
-	/* save nonvolatile int register */
-	ldr     r3, .Lsaved_context_r13_abt
-	stmia   r3, {r13-r14}
-	/* save spsr_abt register */
-	ldr     r3, .Lsaved_spsr_abt
-	mrs     r1, spsr
-	str     r1, [r3]
-
-	CHANGE_MODE(1b) /* change to und mode */
-	/* save nonvolatile int register */
-	ldr     r3, .Lsaved_context_r13_und
-	stmia   r3, {r13-r14}
-	/* save spsr_und register */
-	ldr     r3, .Lsaved_spsr_und
-	mrs     r1, spsr
-	str     r1, [r3]
-
-	/* go back to original mode */
-	msr     cpsr_c, r0
-
-	/* call swsusp_save */
-	bl      swsusp_save
-
-	/* restore return address */
-	ldr     r3, .Lsaved_context_r14_svc
-	ldr     lr, [r3]
-	mov     pc, lr
-
-	WORD_ADDR(saved_context_r0)
-	WORD_ADDR(saved_cpsr)
-	WORD_ADDR(saved_context_r8_fiq)
-	WORD_ADDR(saved_spsr_fiq)
-	WORD_ADDR(saved_context_r13_irq)
-	WORD_ADDR(saved_spsr_irq)
-	WORD_ADDR(saved_context_r13_svc)
-	WORD_ADDR(saved_context_r14_svc)
-	WORD_ADDR(saved_spsr_svc)
-	WORD_ADDR(saved_context_r13_abt)
-	WORD_ADDR(saved_spsr_abt)
-	WORD_ADDR(saved_context_r13_und)
-	WORD_ADDR(saved_spsr_und)
-
-	WORD_ADDR(saved_fpscr)
-	WORD_ADDR(saved_fpexc)
-
-FUNC_END(swsusp_arch_suspend)
-
-	.pushsection .idmap.text, "ax"
-ENTRY(swsusp_arch_resume)
-
-	mov r0, #0
-
-	/* Flush TLB (Invalidate unified TLB unlocked entries) */
-	mcr     p15, 0, r0, c8, c7, 0
-	mcr     p15, 0, r0, c7, c5, 0 @ invalidate I cache
-
-	ldr r1, idmap
-	mcr p15, 0, r1, c2, c0, 0		@ set TTB
-
-	mcr p15, 0, r0, c7, c5, 4		@ ISB
-	mcr p15, 0, r0, c7, c10, 4		@ DSB
-
-	ldr r3, =swsusp_arch_resume_with_mmu
-	ldr r1, saved_cr
-	mcr p15, 0, r1, c1, c0, 0		@ set CR
-
-	mcr p15, 0, r0, c7, c5, 4		@ CP15ISB
-
-	mov pc, r3 /* swsusp_arch_resume_with_mmu\B8\F9\BE\DD\D0\C2ҳ\B1\ED\D2\EBַ\C1\CB */
-
-	.globl idmap
-	.globl saved_cr
-idmap:
-	.long 1
-saved_cr:
-	.long 1
-ENDPROC(swsusp_arch_resume)
-	.popsection
-
-	.globl swsusp_arch_resume_with_mmu
-ENTRY(swsusp_arch_resume_with_mmu)
-	mov r0, #0
-	ldr r1, .Lsaved_ttb
-	ldr r1, [r1]
-
-	/* Flush TLB (Invalidate unified TLB unlocked entries) */
-	mcr     p15, 0, r0, c8, c7, 0
-
-	mcr   p15, 0, r1, c2, c0, 0     @ set TTB 0
-	mcr   p15, 0, r0, c7, c5, 4     @ CP15ISB
-
-	mrs     r0, cpsr
-
-	CHANGE_MODE(1f) /* change to system(user) mode */
-
-.Lnext_restore:
-	/* restore nonvolatile int register */
-	ldr     r3, .Lsaved_context_r0
-	ldmia   r3, {r0-r14}
-	/* restore current program status register */
-	ldr     r3, .Lsaved_cpsr
-	ldr     r1, [r3]
-	msr     cpsr_cxsf, r1
-
-	CHANGE_MODE(11) /* change to fiq mode */
-	/* restore nonvolatile int register */
-	ldr     r3, .Lsaved_context_r8_fiq
-	ldmia   r3, {r8-r14}
-	/* restore spsr_fiq register */
-	ldr     r3, .Lsaved_spsr_fiq
-	ldr     r1, [r3]
-	msr     spsr_cxsf, r1
-
-	CHANGE_MODE(12) /* change to irq mode */
-	/* restore nonvolatile int register */
-	ldr     r3, .Lsaved_context_r13_irq
-	ldmia   r3, {r13-r14}
-	/* restore spsr_irq register */
-	ldr     r3, .Lsaved_spsr_irq
-	ldr     r1, [r3]
-	msr     spsr_cxsf, r1
-
-	CHANGE_MODE(13) /* change to svc mode */
-	/* restore nonvolatile int register */
-	ldr     r3, .Lsaved_context_r13_svc
-	ldmia   r3, {r13-r14}
-	/*  ldr     r13, [r3] */
-	/* restore spsr_svc register */
-	ldr     r3, .Lsaved_spsr_svc
-	ldr     r1, [r3]
-	msr     spsr_cxsf, r1
-
-	CHANGE_MODE(17) /* change to abt mode */
-	/* restore nonvolatile int register */
-	ldr     r3, .Lsaved_context_r13_abt
-	ldmia   r3, {r13-r14}
-	/* restore spsr_abt register */
-	ldr     r3, .Lsaved_spsr_abt
-	ldr     r1, [r3]
-	msr     spsr_cxsf, r1
-
-	CHANGE_MODE(1b) /* change to und mode */
-	/* restore nonvolatile int register */
-	ldr     r3, .Lsaved_context_r13_und
-	ldmia   r3, {r13-r14}
-	/* restore spsr_und register */
-	ldr     r3, .Lsaved_spsr_und
-	ldr     r1, [r3]
-	msr     spsr_cxsf, r1
-
-	/* go back to original mode */
-	msr     cpsr_c, r0
-
-	/* restore return address */
-	ldr     r3, .Lsaved_context_r14_svc
-	ldr     lr, [r3]
-
-	mov r0, #0
-	mov pc, lr
-
-	.globl saved_ttb
-saved_ttb:
-	.long 1
-.Lsaved_ttb:
-	.long saved_ttb
-
-ENDPROC(swsusp_arch_resume_with_mmu)
diff --git a/include/linux/suspend.h b/include/linux/suspend.h
index 5efe743..4e7c4bb 100644
--- a/include/linux/suspend.h
+++ b/include/linux/suspend.h
@@ -238,6 +238,7 @@ extern void arch_suspend_disable_irqs(void);
 extern void arch_suspend_enable_irqs(void);
 
 extern int pm_suspend(suspend_state_t state);
+extern int pm_earlysuspend(suspend_state_t state);
 #else /* !CONFIG_SUSPEND */
 #define suspend_valid_only_mem	NULL
 
diff --git a/kernel/power/hibernate.c b/kernel/power/hibernate.c
index 4469527..9edcb73 100755
--- a/kernel/power/hibernate.c
+++ b/kernel/power/hibernate.c
@@ -680,7 +680,6 @@ int hibernate(void)
 
 	printk(KERN_INFO "PM: Syncing filesystems ... ");
 	sys_sync();
-	fs_drop_page_caches();
 	printk("done.\n");
 
 	error = freeze_processes();
diff --git a/kernel/power/main.c b/kernel/power/main.c
old mode 100755
new mode 100644
index 4f82416..28106f1
--- a/kernel/power/main.c
+++ b/kernel/power/main.c
@@ -350,10 +350,7 @@ static ssize_t state_store(struct kobject *kobj, struct kobj_attribute *attr,
 	
 	if (state < PM_SUSPEND_MAX) {
 #ifdef CONFIG_EARLYSUSPEND
-		if (state == PM_SUSPEND_ON || valid_state(state)) {
-			error = 0;
-			request_suspend_state(state);
-		}
+		error = pm_earlysuspend(state);
 #else
 		error = pm_suspend(state);
 #endif
diff --git a/kernel/power/power.h b/kernel/power/power.h
old mode 100755
new mode 100644
index 908996c..dbf2141
--- a/kernel/power/power.h
+++ b/kernel/power/power.h
@@ -12,10 +12,6 @@ struct swsusp_info {
 	unsigned long		image_pages;
 	unsigned long		pages;
 	unsigned long		size;
-	unsigned long		nosave_begin;
-	unsigned long		nosave_end;
-	unsigned long		swsusp_arch_resume_begin;
-	unsigned long		cpu_reset_begin;
 } __aligned(PAGE_SIZE);
 
 #ifdef CONFIG_HIBERNATION
diff --git a/kernel/power/snapshot.c b/kernel/power/snapshot.c
old mode 100755
new mode 100644
index f7b8646..3724ba0
--- a/kernel/power/snapshot.c
+++ b/kernel/power/snapshot.c
@@ -43,16 +43,6 @@ static int swsusp_page_is_free(struct page *);
 static void swsusp_set_page_forbidden(struct page *);
 static void swsusp_unset_page_forbidden(struct page *);
 
-int pfn_is_nosave(unsigned long pfn)
-{
-	unsigned long nosave_begin_pfn =
-			__pa(__nosave_begin) >> PAGE_SHIFT;
-	unsigned long nosave_end_pfn =
-			PAGE_ALIGN(__pa(__nosave_end)) >> PAGE_SHIFT;
-
-	return ((pfn >= nosave_begin_pfn) && (pfn < nosave_end_pfn));
-}
-
 /*
  * Number of bytes to reserve for memory allocations made by device drivers
  * from their ->freeze() and ->freeze_noirq() callbacks so that they don't
@@ -1925,10 +1915,6 @@ static int init_header(struct swsusp_info *info)
 	info->pages = snapshot_get_image_size();
 	info->size = info->pages;
 	info->size <<= PAGE_SHIFT;
-	info->nosave_begin = (unsigned long)__nosave_begin;
-	info->nosave_end = (unsigned long)__nosave_end;
-	info->swsusp_arch_resume_begin = virt_to_phys(swsusp_arch_resume);
-	info->cpu_reset_begin = virt_to_phys(cpu_v7_reset);
 	return init_header_complete(info);
 }
 
diff --git a/kernel/power/suspend.c b/kernel/power/suspend.c
old mode 100755
new mode 100644
index 94b2286..0e3ca7d9
--- a/kernel/power/suspend.c
+++ b/kernel/power/suspend.c
@@ -543,3 +543,14 @@ int pm_suspend(suspend_state_t state)
 	return error;
 }
 EXPORT_SYMBOL(pm_suspend);
+
+#ifdef CONFIG_EARLYSUSPEND
+int pm_earlysuspend(suspend_state_t state)
+{
+	if (state == PM_SUSPEND_ON || valid_state(state))
+		request_suspend_state(state);
+
+	return 0;
+}
+EXPORT_SYMBOL(pm_earlysuspend);
+#endif
-- 
1.7.5.4

