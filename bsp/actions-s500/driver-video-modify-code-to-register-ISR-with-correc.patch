From c7e3054416850bfbab90b6be5e6d043d6f35dccb Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Thu, 29 Dec 2016 18:01:49 +0800
Subject: [PATCH] driver: video: modify code to register ISR with correct irq
 number

Fix irq number in display engine driver, HDMI driver and CVBS driver.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/boot/dts/actduino.dtsi              |    3 +++
 drivers/video/fbdev/owl/displays/cvbs/cvbs.c |    8 +++++++-
 drivers/video/fbdev/owl/displays/hdmi/hdmi.c |   12 +++++++++---
 drivers/video/fbdev/owl/dss/de.c             |    8 ++++++--
 4 files changed, 25 insertions(+), 6 deletions(-)

diff --git a/arch/arm/boot/dts/actduino.dtsi b/arch/arm/boot/dts/actduino.dtsi
index 3fcd08b..2149ac1 100755
--- a/arch/arm/boot/dts/actduino.dtsi
+++ b/arch/arm/boot/dts/actduino.dtsi
@@ -350,6 +350,7 @@
 	hdmi@b02c0000{
 		compatible = "actions,atm7059a-hdmi";
 		reg = <0xb02c0000 0x160>;
+		interrupts = < 0 46 0x4 >;
 	};
 	
 	hdmi_cec@b02c011c{
@@ -360,11 +361,13 @@
 	cvbs@b02b0000{
 		compatible = "actions,atm7059a-cvbs";
 		reg = <0xb02b0000 0x80>;
+		interrupts = < 0 47 0x4 >;
 	};
 	
 	de@b02e0000 {
 		compatible = "actions,atm7059a-de";
 		reg = <0xb02e0000 0x100e>, <0xb0500108 0x4>;
+		interrupts = < 0 1 0x4 >;
 	};
 	
 	nand@b0210000 {
diff --git a/drivers/video/fbdev/owl/displays/cvbs/cvbs.c b/drivers/video/fbdev/owl/displays/cvbs/cvbs.c
index 4cfcb69..42fffd1 100755
--- a/drivers/video/fbdev/owl/displays/cvbs/cvbs.c
+++ b/drivers/video/fbdev/owl/displays/cvbs/cvbs.c
@@ -757,6 +757,7 @@ static int owl_cvbs_probe(struct platform_device *pdev)
 {
 	int r,enable;
 	struct resource * cvbs_mem;
+	int irq;
 	
 	cvbs.pdev = pdev;
 	io_cmap();	
@@ -788,7 +789,12 @@ static int owl_cvbs_probe(struct platform_device *pdev)
 	
 	cvbs_irq_enable(CVBS_IN,false);
 
-	r = request_irq(OWL_IRQ_TVOUT, cvbs_irq_handler, 0, "cvbsdev", NULL);	
+	irq = platform_get_irq(pdev, 0);
+	if (irq <= 0) {
+		dev_err(&pdev->dev, "cvbs has no resource for irq!\n");
+		return -ENODEV;
+	}
+	r = request_irq(irq, cvbs_irq_handler, 0, "cvbsdev", NULL);
 	if (r) {
 		DEBUG_CVBS(" register irq failed!\n");
 		return r;
diff --git a/drivers/video/fbdev/owl/displays/hdmi/hdmi.c b/drivers/video/fbdev/owl/displays/hdmi/hdmi.c
index 1616ea8..3cb2834 100755
--- a/drivers/video/fbdev/owl/displays/hdmi/hdmi.c
+++ b/drivers/video/fbdev/owl/displays/hdmi/hdmi.c
@@ -930,6 +930,7 @@ void owl_hdmi_set_effect_parameter(struct owl_dss_device *dssdev,enum owl_plane_
 int owldss_hdmi_panel_init(struct owl_dss_device *dssdev)
 {	
 	int r;
+	int irq;
 	HDMI_DEBUG("owl_dss_device  hdmi  p->0x%p\n", dssdev);
 	hdmi_display_set_dssdev(dssdev);
 	hdmi_set_settings(&hdmi.ip_data);	
@@ -944,9 +945,14 @@ int owldss_hdmi_panel_init(struct owl_dss_device *dssdev)
 	
 	
 	hdmi.ip_data.ops->hpd_enable(&hdmi.ip_data, 0);
-	
-	r = request_irq(OWL_IRQ_HDMI, hdmi_irq_handle, 0, "hdmidev", NULL);	
-	
+
+	irq = platform_get_irq(hdmi.pdev, 0);
+	if (irq <= 0) {
+		dev_err(&hdmi.pdev->dev, "hdmi has no resource for irq!\n");
+		return -ENODEV;
+	}
+
+	r = request_irq(irq, hdmi_irq_handle, 0, "hdmidev", NULL);
 	if (r) {
 		DEBUG_ERR(" register irq failed!\n");
 		return r;
diff --git a/drivers/video/fbdev/owl/dss/de.c b/drivers/video/fbdev/owl/dss/de.c
index 5afe3a61..d2e3ed6 100755
--- a/drivers/video/fbdev/owl/dss/de.c
+++ b/drivers/video/fbdev/owl/dss/de.c
@@ -270,11 +270,15 @@ static int de_irq_init(void)
 	de_set_irqs();
 	
 	/* TODO */
-	if (request_irq(OWL_IRQ_DE, de_irq_handler , 0, "asoc_de", NULL) != 0) {
+	de_pdata->irq = platform_get_irq(de_pdata->pdev, 0);
+	if (de_pdata->irq <= 0) {
+		dev_err(&de_pdata->pdev->dev, "DE has no resource for irq!\n");
+		return -ENODEV;
+	}
+	if (request_irq(de_pdata->irq, de_irq_handler , 0, "asoc_de", NULL) != 0) {
 		DSSERR("DE request interrupt %d failed\n", OWL_IRQ_DE);
 		return -EBUSY;
 	}
-	de_pdata->irq = OWL_IRQ_DE;
 
 	DSSINFO("de irq init ok\n");
 	spin_unlock_irqrestore(&de_pdata->irq_lock, flags);
-- 
1.7.5.4

