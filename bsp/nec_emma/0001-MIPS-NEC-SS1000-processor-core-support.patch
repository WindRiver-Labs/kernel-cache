From be58eafb78c77161221745a1f0ce071c0f247f79 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Tue, 28 Apr 2009 13:59:21 +0900
Subject: [PATCH] MIPS: NEC SS1000 processor core support

NEC SS1000 processor core is an enhanced version of VR5500A core.

Features:
* MIPS I, II, III, IV instruction set
  - Some instructions introduced in VR5432/VR5500 are also supported
  - Multiply-add and multiply-subtract instructions (MADD, MSUB, etc.)
  - Targeted multiply instruction (MUL, MUL64, etc.)
  - Integer rotate instructions (DROR, DROR32, DRORV, ROR, RORV)
  - Zero and one detect instructions (CLO, CLZ, DCLO, DCLZ)
  - and more..
* Superscalar, dual-issue pipeline
* Out-of-order integer instruction dispatch
* Full-pipelined floating point unit
* 64 dual-entry JTLB with variable page sizes
* 4-way set associative instruction/data cache
  - Maximum size is up to 64KB resp.
  - 256-bit (32-byte) cache line size
* Enhanced branch/return prediction
  - 8192-entry global histroy table
  - 1024-entry branch prediction cache
  - 8-entry return prediction stack

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 arch/mips/Kconfig            |   18 ++++++++++++++++++
 arch/mips/Makefile           |    2 ++
 arch/mips/kernel/Makefile    |    1 +
 arch/mips/kernel/cpu-probe.c |    9 +++++++++
 arch/mips/lib/Makefile       |    1 +
 arch/mips/lib/dump_tlb.c     |    1 +
 arch/mips/mm/Makefile        |    1 +
 arch/mips/mm/c-r4k.c         |   13 ++++++++++---
 arch/mips/mm/page.c          |    3 ++-
 arch/mips/mm/tlbex.c         |    1 +
 include/asm-mips/cpu.h       |    3 ++-
 include/asm-mips/hazards.h   |    2 +-
 include/asm-mips/mipsregs.h  |    1 +
 include/asm-mips/module.h    |    2 ++
 14 files changed, 52 insertions(+), 6 deletions(-)

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index 81e4ad0..2ca8539 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -1100,6 +1100,21 @@ config CPU_R5432
 	select CPU_SUPPORTS_32BIT_KERNEL
 	select CPU_SUPPORTS_64BIT_KERNEL
 
+config CPU_SS1000
+	bool "SS1000"
+	depends on SYS_HAS_CPU_SS1000
+	select CPU_HAS_LLSC
+	select CPU_HAS_PREFETCH
+	select CPU_SUPPORTS_32BIT_KERNEL
+	select CPU_SUPPORTS_64BIT_KERNEL
+	help
+	  SS1000 processor core is an enhanced version of VR5500A core (SS1000
+	  stands for Star-Sapphire 1000, btw VR5500A is also codenamed SS300).
+	  It implements 64-bit MIPS IV instruction set with many extensions.
+	  It inherits all VR5500A featrues, and fixes all known hardware bugs
+	  with VR5500A core. A general purpose product packaged with peripherals
+	  is also known as VR9721.
+
 config CPU_R6000
 	bool "R6000"
 	depends on EXPERIMENTAL
@@ -1210,6 +1225,9 @@ config SYS_HAS_CPU_R5000
 config SYS_HAS_CPU_R5432
 	bool
 
+config SYS_HAS_CPU_SS1000
+	bool
+
 config SYS_HAS_CPU_R6000
 	bool
 
diff --git a/arch/mips/Makefile b/arch/mips/Makefile
index 6853434..766bb51 100644
--- a/arch/mips/Makefile
+++ b/arch/mips/Makefile
@@ -133,6 +133,8 @@ cflags-$(CONFIG_CPU_MIPS64_R2)	+= $(call cc-option,-march=mips64r2,-mips64r2 -U_
 cflags-$(CONFIG_CPU_R5000)	+= -march=r5000 -Wa,--trap
 cflags-$(CONFIG_CPU_R5432)	+= $(call cc-option,-march=r5400,-march=r5000) \
 			-Wa,--trap
+cflags-$(CONFIG_CPU_SS1000)	+= $(call cc-option,-march=r5500,-march=r5000) \
+			-Wa,--trap
 cflags-$(CONFIG_CPU_NEVADA)	+= $(call cc-option,-march=rm5200,-march=r5000) \
 			-Wa,--trap
 cflags-$(CONFIG_CPU_RM7000)	+= $(call cc-option,-march=rm7000,-march=r5000) \
diff --git a/arch/mips/kernel/Makefile b/arch/mips/kernel/Makefile
index a5dcda2..8db17b9 100644
--- a/arch/mips/kernel/Makefile
+++ b/arch/mips/kernel/Makefile
@@ -37,6 +37,7 @@ obj-$(CONFIG_CPU_R4X00)		+= r4k_fpu.o r4k_switch.o
 obj-$(CONFIG_CPU_R5000)		+= r4k_fpu.o r4k_switch.o
 obj-$(CONFIG_CPU_R6000)		+= r6000_fpu.o r4k_switch.o
 obj-$(CONFIG_CPU_R5432)		+= r4k_fpu.o r4k_switch.o
+obj-$(CONFIG_CPU_SS1000)	+= r4k_fpu.o r4k_switch.o
 obj-$(CONFIG_CPU_R8000)		+= r4k_fpu.o r4k_switch.o
 obj-$(CONFIG_CPU_RM7000)	+= r4k_fpu.o r4k_switch.o
 obj-$(CONFIG_CPU_RM9000)	+= r4k_fpu.o r4k_switch.o
diff --git a/arch/mips/kernel/cpu-probe.c b/arch/mips/kernel/cpu-probe.c
index ef7ed93..b7296a6 100644
--- a/arch/mips/kernel/cpu-probe.c
+++ b/arch/mips/kernel/cpu-probe.c
@@ -147,6 +147,7 @@ void __init check_wait(void)
 	case CPU_R4650:
 	case CPU_R4700:
 	case CPU_R5000:
+	case CPU_SS1000:
 	case CPU_NEVADA:
 	case CPU_4KC:
 	case CPU_4KEC:
@@ -449,6 +450,13 @@ static inline void cpu_probe_legacy(struct cpuinfo_mips *c)
 		             MIPS_CPU_WATCH | MIPS_CPU_LLSC;
 		c->tlbsize = 48;
 		break;
+	case PRID_IMP_SS1000:
+		c->cputype = CPU_SS1000;
+		c->isa_level = MIPS_CPU_ISA_IV;
+		c->options = R4K_OPTS | MIPS_CPU_FPU | MIPS_CPU_32FPR |
+			     MIPS_CPU_WATCH | MIPS_CPU_LLSC;
+		c->tlbsize = 64;
+		break;
 	case PRID_IMP_NEVADA:
 		c->cputype = CPU_NEVADA;
 		c->isa_level = MIPS_CPU_ISA_IV;
@@ -877,6 +885,7 @@ static __cpuinit const char *cpu_to_name(struct cpuinfo_mips *c)
 	case CPU_4KSC:		name = "MIPS 4KSc"; break;
 	case CPU_VR41XX:	name = "NEC Vr41xx"; break;
 	case CPU_R5500:		name = "R5500"; break;
+	case CPU_SS1000:	name = "R5500 SS1000"; break;
 	case CPU_TX49XX:	name = "TX49xx"; break;
 	case CPU_20KC:		name = "MIPS 20Kc"; break;
 	case CPU_24K:		name = "MIPS 24K"; break;
diff --git a/arch/mips/lib/Makefile b/arch/mips/lib/Makefile
index 15f51d8..4df7bde 100644
--- a/arch/mips/lib/Makefile
+++ b/arch/mips/lib/Makefile
@@ -24,6 +24,7 @@ obj-$(CONFIG_CPU_R4300)		+= dump_tlb.o
 obj-$(CONFIG_CPU_R4X00)		+= dump_tlb.o
 obj-$(CONFIG_CPU_R5000)		+= dump_tlb.o
 obj-$(CONFIG_CPU_R5432)		+= dump_tlb.o
+obj-$(CONFIG_CPU_SS1000)	+= dump_tlb.o
 obj-$(CONFIG_CPU_R6000)		+=
 obj-$(CONFIG_CPU_R8000)		+=
 obj-$(CONFIG_CPU_RM7000)	+= dump_tlb.o
diff --git a/arch/mips/lib/dump_tlb.c b/arch/mips/lib/dump_tlb.c
index 465ff0e..779821c 100644
--- a/arch/mips/lib/dump_tlb.c
+++ b/arch/mips/lib/dump_tlb.c
@@ -25,6 +25,7 @@ static inline const char *msk2str(unsigned int mask)
 	case PM_16M:	return "16Mb";
 	case PM_64M:	return "64Mb";
 	case PM_256M:	return "256Mb";
+	case PM_1G:	return "1Gb";
 #endif
 	}
 	return "";
diff --git a/arch/mips/mm/Makefile b/arch/mips/mm/Makefile
index 44e8dd8..591e85b 100644
--- a/arch/mips/mm/Makefile
+++ b/arch/mips/mm/Makefile
@@ -19,6 +19,7 @@ obj-$(CONFIG_CPU_R4300)		+= c-r4k.o cex-gen.o tlb-r4k.o
 obj-$(CONFIG_CPU_R4X00)		+= c-r4k.o cex-gen.o tlb-r4k.o
 obj-$(CONFIG_CPU_R5000)		+= c-r4k.o cex-gen.o tlb-r4k.o
 obj-$(CONFIG_CPU_R5432)		+= c-r4k.o cex-gen.o tlb-r4k.o
+obj-$(CONFIG_CPU_SS1000)	+= c-r4k.o cex-gen.o tlb-r4k.o
 obj-$(CONFIG_CPU_R8000)		+= c-r4k.o cex-gen.o tlb-r8k.o
 obj-$(CONFIG_CPU_RM7000)	+= c-r4k.o cex-gen.o tlb-r4k.o
 obj-$(CONFIG_CPU_RM9000)	+= c-r4k.o cex-gen.o tlb-r4k.o
diff --git a/arch/mips/mm/c-r4k.c b/arch/mips/mm/c-r4k.c
index b8317c6..24fe6e6 100644
--- a/arch/mips/mm/c-r4k.c
+++ b/arch/mips/mm/c-r4k.c
@@ -750,17 +750,24 @@ static void __cpuinit probe_pcache(void)
 
 	case CPU_R5432:
 	case CPU_R5500:
+	case CPU_SS1000:
 		icache_size = 1 << (12 + ((config & CONF_IC) >> 9));
 		c->icache.linesz = 16 << ((config & CONF_IB) >> 5);
-		c->icache.ways = 2;
+		if ((prid & 0xff00) == PRID_IMP_SS1000)
+			c->icache.ways = 4;
+		else
+			c->icache.ways = 2;
 		c->icache.waybit= 0;
 
 		dcache_size = 1 << (12 + ((config & CONF_DC) >> 6));
 		c->dcache.linesz = 16 << ((config & CONF_DB) >> 4);
-		c->dcache.ways = 2;
+		if ((prid & 0xff00) == PRID_IMP_SS1000)
+			c->dcache.ways = 4;
+		else
+			c->dcache.ways = 2;
 		c->dcache.waybit = 0;
 
-		c->options |= MIPS_CPU_CACHE_CDEX_P;
+		c->options |= MIPS_CPU_CACHE_CDEX_P | MIPS_CPU_PREFETCH;
 		break;
 
 	case CPU_TX49XX:
diff --git a/arch/mips/mm/page.c b/arch/mips/mm/page.c
index 1417c64..a706b3f 100644
--- a/arch/mips/mm/page.c
+++ b/arch/mips/mm/page.c
@@ -172,8 +172,9 @@ static void __cpuinit set_prefetch_parameters(void)
 		 */
 		cache_line_size = cpu_dcache_line_size();
 		switch (current_cpu_type()) {
+		case CPU_SS1000:
 		case CPU_TX49XX:
-			/* TX49 supports only Pref_Load */
+			/* These processors only support the Pref_Load. */
 			pref_bias_copy_load = 256;
 			break;
 
diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c
index 0ff0deb..cacf37a 100644
--- a/arch/mips/mm/tlbex.c
+++ b/arch/mips/mm/tlbex.c
@@ -335,6 +335,7 @@ static void __cpuinit build_tlb_write_entry(u32 **p, struct uasm_label **l,
 	case CPU_BCM3302:
 	case CPU_BCM4710:
 	case CPU_LOONGSON2:
+	case CPU_SS1000:
 		if (m4kc_tlbp_war())
 			uasm_i_nop(p);
 		tlbw(p);
diff --git a/include/asm-mips/cpu.h b/include/asm-mips/cpu.h
index 229a786..7f311cf 100644
--- a/include/asm-mips/cpu.h
+++ b/include/asm-mips/cpu.h
@@ -69,6 +69,7 @@
 #define PRID_IMP_LOONGSON1	0x4200
 #define PRID_IMP_R5432		0x5400
 #define PRID_IMP_R5500		0x5500
+#define PRID_IMP_SS1000		0x5600
 #define PRID_IMP_LOONGSON2	0x6300
 
 #define PRID_IMP_UNKNOWN	0xff00
@@ -180,7 +181,7 @@ enum cpu_type_enum {
 	CPU_R4700, CPU_R5000, CPU_R5000A, CPU_R5500, CPU_NEVADA, CPU_R5432,
 	CPU_R10000, CPU_R12000, CPU_R14000, CPU_VR41XX, CPU_VR4111, CPU_VR4121,
 	CPU_VR4122, CPU_VR4131, CPU_VR4133, CPU_VR4181, CPU_VR4181A, CPU_RM7000,
-	CPU_SR71000, CPU_RM9000, CPU_TX49XX,
+	CPU_SR71000, CPU_RM9000, CPU_TX49XX, CPU_SS1000,
 
 	/*
 	 * R8000 class processors
diff --git a/include/asm-mips/hazards.h b/include/asm-mips/hazards.h
index 2de638f..59b34b9 100644
--- a/include/asm-mips/hazards.h
+++ b/include/asm-mips/hazards.h
@@ -138,7 +138,7 @@ do {									\
 		__instruction_hazard();					\
 } while (0)
 
-#elif defined(CONFIG_CPU_R10000)
+#elif defined(CONFIG_CPU_R10000) || defined(CONFIG_CPU_SS1000)
 
 /*
  * R10000 rocks - all hazards handled in hardware, so this becomes a nobrainer.
diff --git a/include/asm-mips/mipsregs.h b/include/asm-mips/mipsregs.h
index 3d956ee..54a5704 100644
--- a/include/asm-mips/mipsregs.h
+++ b/include/asm-mips/mipsregs.h
@@ -192,6 +192,7 @@
 #define PM_16M		0x01ffe000
 #define PM_64M		0x07ffe000
 #define PM_256M		0x1fffe000
+#define PM_1G		0x7fffe000
 
 #endif
 
diff --git a/include/asm-mips/module.h b/include/asm-mips/module.h
index de6d09e..61dfae7 100644
--- a/include/asm-mips/module.h
+++ b/include/asm-mips/module.h
@@ -98,6 +98,8 @@ search_module_dbetables(unsigned long addr)
 #define MODULE_PROC_FAMILY "R5000 "
 #elif defined CONFIG_CPU_R5432
 #define MODULE_PROC_FAMILY "R5432 "
+#elif defined CONFIG_CPU_SS1000
+#define MODULE_PROC_FAMILY "SS1000"
 #elif defined CONFIG_CPU_R6000
 #define MODULE_PROC_FAMILY "R6000 "
 #elif defined CONFIG_CPU_NEVADA
-- 
1.6.0.4

