From 0b6e88385eb29894012c3086d49640b766eaf6d8 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Mon, 7 Sep 2009 09:22:13 +0900
Subject: [PATCH 15/18] MIPS: nec_emma: emmaxxx.h: New emma_in/emma_out I/O helpers

Current emma_inXX/emma_outXX implementation has several not-so-great
functions:

* Uncached load operation and 'sync' instruction always follow every
  register write cycle.  This was originally introduced for the sake
  of safety _in_many_ways_, but seems a bit wasteful these days.

* They would calculate a final destination address each time...
  Actually, it logically adds EMMA_BASE (= 0xA0000000) to 'offset'.
  Doing MIPS address segment conversion in I/O helpers is not smart
  way IMHO.

  We'd better to move from such homemade I/O accessors to the kernel
  generic ones.

* emma_{in,out}8() and emma_{in,out}16() are barely used anywhere.

This patch addes __raw_{readl,writel}-based helper macros.  We are
going to move to these new helpers step-by-step.

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 include/asm-mips/emma/emmaxxx.h |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/include/asm-mips/emma/emmaxxx.h b/include/asm-mips/emma/emmaxxx.h
index 052c442..a11f592 100644
--- a/include/asm-mips/emma/emmaxxx.h
+++ b/include/asm-mips/emma/emmaxxx.h
@@ -33,6 +33,18 @@
 #define EMMA_GPIO_INT_MASK	EMMA_GPIO_SUB_INT_MASK
 #endif /* CONFIG_EMMA_SUBCPU */
 
+/*
+ * I/O helpers for EMMAXXX SoC register accesses.
+ *
+ * Note that 1) basically almost all EMMA registers are available
+ * in 32-bit wide, and 2) we use __raw_ (non-swapped) accessors here
+ * to avoid confusion sometimes caused by CONFIG_SWAP_IO_SPACE.
+ */
+#define emma_in(x)		__raw_readl((void __iomem *)&x)
+#define emma_out(x, y)		__raw_writel((u32)y, (void __iomem *)&x)
+#define emma_set_bits(x, mask)	  emma_out(x, emma_in(x) | mask)
+#define emma_clear_bits(x, mask)  emma_out(x, emma_in(x) & ~mask)
+
 #ifndef __ASSEMBLY__
 
 #define EMMA_BASE 		(0xa0000000)
-- 
1.6.3.3

