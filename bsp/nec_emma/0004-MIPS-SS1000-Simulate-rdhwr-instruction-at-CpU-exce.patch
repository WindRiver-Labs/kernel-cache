From 785dde987a8213090732fbe9b393e787b4cd0357 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Tue, 28 Apr 2009 14:01:47 +0900
Subject: [PATCH] MIPS: SS1000: Simulate rdhwr instruction at CpU exception handler

The rdhwr insn usermode exception acts 'differently' on SS1000 processor;
a coprocessor unusable exception (CpU) occurs with Status.CU2 bit, instead
of a reserved instruction exception (RI).

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 arch/mips/kernel/traps.c |   34 ++++++++++++++++++++++++++++++++++
 1 files changed, 34 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c
index 6fa59ac..e70266a 100644
--- a/arch/mips/kernel/traps.c
+++ b/arch/mips/kernel/traps.c
@@ -906,6 +906,40 @@ asmlinkage void do_cpu(struct pt_regs *regs)
 		return;
 
 	case 2:
+#ifdef CONFIG_CPU_SS1000
+		/*
+		 * Workaround: the rdhwr insn usermode exception acts
+		 * 'differently' on SS1000 processor; a coprocessor unusable
+		 * exception (CpU) occurs with Status.CU2 bit, instead of
+		 * a reserved instruction exception (RI).
+		 */
+		epc = (unsigned int __user *)exception_epc(regs);
+		old_epc = regs->cp0_epc;
+		opcode = 0;
+		status = -1;
+
+		if (unlikely(compute_return_epc(regs) < 0)) {
+			trace_trap_exit();
+			return;
+		}
+
+		if (unlikely(get_user(opcode, epc) < 0))
+			status = SIGSEGV;
+
+		if (status < 0)
+			status = simulate_rdhwr(regs, opcode);
+
+		if (status < 0)
+			status = SIGILL;
+
+		if (unlikely(status > 0)) {
+			regs->cp0_epc = old_epc;	/* Undo skip-over.  */
+			force_sig(status, current);
+		}
+		trace_trap_exit();
+		return;
+#endif
+
 	case 3:
 		break;
 	}
-- 
1.6.0.4

