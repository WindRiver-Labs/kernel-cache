From 01757542f5ab6cee95781fc67f9688bffddadb39 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Mon, 7 Sep 2009 09:22:43 +0900
Subject: [PATCH 16/18] MIPS: nec_emma: flip.h: FLIP bus control register definitions

FLIP bus bridge allows the internal bus to access to the CPU bus and
the Unified Memory bus.  The internal bus is sort of like PCI bus, so
peripheral IPs with PCI interface could be easily connected to it.

In EMMA SoCs, FLIP bus has been used for connecting USB HCs, and IDE
controller(s).

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 include/asm-mips/emma/flip.h |  110 ++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 110 insertions(+), 0 deletions(-)
 create mode 100644 include/asm-mips/emma/flip.h

diff --git a/include/asm-mips/emma/flip.h b/include/asm-mips/emma/flip.h
new file mode 100644
index 0000000..7ea02eb
--- /dev/null
+++ b/include/asm-mips/emma/flip.h
@@ -0,0 +1,110 @@
+/*
+ * FLIP bus - provides a local bus interface
+ *
+ * Copyright (C) 2009  NEC Electronics Corporation
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * (version 2) as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+#ifndef __ASM_EMMA_FLIP_H
+#define __ASM_EMMA_FLIP_H
+
+/* Flip Bus Master Channeln Control Register [FLIP_Mn_CTR] */
+#define M_CTR_SWAP2	0x00030000
+#define  SWAP2_NONE	(0 << 16)
+#define  SWAP2_BYTE	(1 << 16)
+#define  SWAP2_HWORD	(2 << 16)
+#define  SWAP2_BYTE16	(3 << 16)
+#define M_CTR_RPCMD	0x00003000
+#define M_CTR_WPCMD	0x00000100
+#define M_CTR_DSEL	0x00000020
+#define M_CTR_DIR	0x00000010
+#define M_CTR_PACK	0x00000008
+#define M_CTR_SWAP1	0x00000006
+#define  SWAP1_NONE	(0 << 1)
+#define  SWAP1_BYTE	(1 << 1)	/* Byte swap in a word (32 bits) */
+#define  SWAP1_HWORD	(2 << 1)	/* Half-word swap in a word (32 bits) */
+#define  SWAP1_BYTE16	(3 << 1)	/* Byte swap in a half-word (16 bits) */
+#define M_CTR_ENDIAN	0x00000001
+
+/* Flip Bus Master PCI Error Status Register [FLIP_M_PCIERR] */
+#define W_PERR		0x00000400	/* Prity error during the write cycle */
+#define W_TABORT	0x00000200	/* PCI target abort */
+#define W_MABORT	0x00000100	/* PCI master abort */
+#define R_PERR		0x00000004	/* Prity error during the read cycle */
+#define R_TABORT	0x00000002	/* PCI target abort */
+#define R_MABORT	0x00000001	/* PCI master abort */
+
+/* Flip Bus Slave Endian Control Register [FLIP_S_CTR] */
+#define S_CTR_ENDIAN	0x00000001
+
+/* Flip Bus Connection Unit Reset Control Register [FLIP_RESET] */
+#define IDES_RST	0x00000008
+#define IDEP_RST	0x00000004
+#define USBH_RST	0x00000001
+
+/* USB2.0 Host Control Register [USB_CTR] */
+#define PPON2_EN	0x00800000	/* PPON2 signal mask */
+#define PPON1_EN	0x00400000	/* PPON1 signal mask */
+#define OCI2_EN		0x00200000	/* OCI2  signal mask */
+#define OCI1_EN		0x00100000	/* OCI1  signal mask */
+#define PPON2		0x00080000	/* Active level of PPON2 signal */
+#define PPON1		0x00040000	/* Active level of PPON1 signal */
+#define OCI2		0x00020000	/* Active level of OCI2 signal */
+#define OCI1		0x00010000	/* Active level of OCI1 signal */
+#define INTB		0x00008000	/* INT#B interrupt status */
+#define PME		0x00004000	/* PME   interrupt status */
+#define SMMI		0x00002000	/* SMMI  interrupt status */
+#define INTA		0x00001000	/* INT#A interrupt status */
+#define INTB_EN		0x00000800	/* INT#B interrupt mask */
+#define PME_EN		0x00000400	/* PME   interrupt mask */
+#define SMMI_EN		0x00000200	/* SMMI  interrupt mask */
+#define INTA_EN		0x00000100	/* INT#A interrupt mask */
+#define IOR_CTR2	0x00000008
+#define IOR_CTR1	0x00000004
+#define BEN_CTR2	0x00000002
+#define BEN_CTR1	0x00000001
+
+struct flip_regs {
+	u32 m_ctr[4];	/* 00h Flip Bus Master Channel0 Control (USB HCs) */
+			/* 04h Flip Bus Master Channel1 Control (reserved) */
+			/* 08h Flip Bus Master Channel2 Control (IDE pri) */
+			/* 0Ch Flip Bus Master Channel3 Control (IDE sec) */
+
+	u32 m_pcierr;	/* 10h Flip Bus Master PCI Error Status */
+	u32 s_ctr;	/* 14h Flip Bus Slave Endian Control */
+	u32 reset;	/* 18h FLIP Bus Connection Unit Reset Control */
+	u32 mhifbuf_sta;/* 1Ch MHIF Master Bridge Buffer Status */
+
+	u32 usb_ctr;	 /* 20h USB I/F Control Setting */
+	u32 usb_pwr_ctr; /* 24h USB POWER Control Setting */
+	u32 usb_prefetch;/* 28h USB2.0 HOST PCI Bridge Read Prefetch */
+	u32 reserved0[1];
+
+	u32 piodma_fadr; /* 30h Flip Bus PIO DMA Flip Start Address */
+	u32 piodma_madr; /* 34h Flip Bus PIO DMA Memory Start Address */
+	u32 piodma_tcnt; /* 38h Flip Bus PIO DMA Transfer Count */
+	u32 piodma_ctr;	 /* 3Ch Flip Bus PIO DMA Control */
+	u32 reserved1[16];
+
+	u32 m_es[4];	/* 80h Flip Bus Master Channel0 Swap2 Start Address */
+			/* 84h Flip Bus Master Channel1 */
+			/* 88h Flip Bus Master Channel2 */
+			/* 8Ch Flip Bus Master Channel3 */
+	u32 m_ee[4];	/* 90h Flip Bus Master Channel0 Swap2 End Address */
+			/* 94h Flip Bus Master Channel1 */
+			/* 98h Flip Bus Master Channel2 */
+			/* 9Ch Flip Bus Master Channel3 */
+};
+
+#endif /* __ASM_EMMA_FLIP_H */
-- 
1.6.3.3

