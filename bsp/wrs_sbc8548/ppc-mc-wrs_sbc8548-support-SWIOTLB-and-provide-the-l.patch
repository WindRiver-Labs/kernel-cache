From 6a8577262333ee780c403dde631312b8ee120bd4 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Mon, 9 Aug 2010 18:25:46 +0800
Subject: [PATCH 1/2] ppc-mc/wrs_sbc8548: support SWIOTLB and provide the law configuration functions

* Enabel kernel option to support SWIOTLB for PCIE
* Provide those law configuration functions

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/platforms/85xx/Kconfig        |    1 +
 arch/powerpc/platforms/85xx/wrhv_sbc8548.c |   21 +++++++++++++++++++++
 2 files changed, 22 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/Kconfig b/arch/powerpc/platforms/85xx/Kconfig
index 15d208e..6f86b49 100644
--- a/arch/powerpc/platforms/85xx/Kconfig
+++ b/arch/powerpc/platforms/85xx/Kconfig
@@ -164,6 +164,7 @@ config WRHV_SBC8548
 	select DEFAULT_UIMAGE
 	select WRHV_E500
 	select PARAVIRT_PTE
+	select SWIOTLB
 	help
 	  This option enables support for the Wind River SBC8548
 	  Hypervisor enabled board.
diff --git a/arch/powerpc/platforms/85xx/wrhv_sbc8548.c b/arch/powerpc/platforms/85xx/wrhv_sbc8548.c
index b6592c0..102d0fd 100644
--- a/arch/powerpc/platforms/85xx/wrhv_sbc8548.c
+++ b/arch/powerpc/platforms/85xx/wrhv_sbc8548.c
@@ -29,6 +29,7 @@
 #include <linux/interrupt.h>
 #include <linux/fsl_devices.h>
 #include <linux/of_platform.h>
+#include <linux/lmb.h>
 
 #include <asm/system.h>
 #include <asm/pgtable.h>
@@ -54,6 +55,7 @@ extern struct vb_config *wr_config;
 extern struct vb_status *wr_status;
 extern struct vb_control *wr_control;
 extern int wrhv_set_law_base(int index, unsigned long long addr);
+extern unsigned long long wrhv_get_law_base(int index);
 extern int wrhv_set_law_attr(int index, unsigned int attr);
 extern int wrhv_get_law_attr(int index);
 
@@ -81,7 +83,9 @@ static void __init sbc8548_setup_arch(void)
 {
 #ifdef CONFIG_PCI
 	struct device_node *np;
+	struct pci_controller *hose;
 #endif
+	dma_addr_t max = 0xffffffff;
 
 	if (ppc_md.progress)
 		ppc_md.progress("sbc8548_setup_arch()", 0);
@@ -99,9 +103,25 @@ static void __init sbc8548_setup_arch(void)
 				fsl_add_bridge(np, 1);
 			else
 				fsl_add_bridge(np, 0);
+
+			hose = pci_find_hose_for_OF_device(np);
+			max = min(max, hose->dma_window_base_cur +
+				hose->dma_window_size);
+
+			ppc_setup_pci_law(np);
 		}
 	}
 #endif
+
+#ifdef CONFIG_SWIOTLB
+	if (lmb_end_of_DRAM() > max) {
+		ppc_swiotlb_enable = 1;
+		set_pci_dma_ops(&swiotlb_dma_ops);
+		ppc_md.pci_dma_dev_setup = pci_dma_dev_setup_swiotlb;
+	}
+#endif
+
+	printk("WRHV - sbc8548 board from Freescale Semiconductor\n");
 }
 
 static void sbc8548_show_cpuinfo(struct seq_file *m)
@@ -154,6 +174,7 @@ define_machine(sbc8548) {
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
 	.enable_pci_law		= wrhv_enable_pci_law,
 	.set_law_base		= wrhv_set_law_base,
+	.get_law_base		= wrhv_get_law_base,
 	.set_law_attr		= wrhv_set_law_attr,
 	.get_law_attr		= wrhv_get_law_attr,
 #endif
-- 
1.6.5.2

