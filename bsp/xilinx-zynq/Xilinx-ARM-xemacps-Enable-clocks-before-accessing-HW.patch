From e89eddcba3ae0c16a6c34fee42c77f91a148b3d9 Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Mon, 3 Sep 2012 07:36:26 -0700
Subject: [PATCH 045/793] Xilinx: ARM: xemacps: Enable clocks before accessing
 HW

This patch fixes an issue where hardware registers may be
accessed before the device clocks are enabled.
Also, error handling is improved in the questionable code
section.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |   21 ++++++++++++++++-----
 1 files changed, 16 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 44a16d6..69fc9bc 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -2223,15 +2223,19 @@ static int xemacps_open(struct net_device *ndev)
 		return rc;
 	}
 
+	rc = pm_runtime_get(&lp->pdev->dev);
+	if (rc < 0) {
+		pr_err("%s pm_runtime_get() failed, rc %d\n", ndev->name, rc);
+		goto err_free_rings;
+	}
+
 	rc = xemacps_setup_ring(lp);
 	if (rc) {
 		printk(KERN_ERR "%s Unable to setup BD rings, rc %d\n",
 		ndev->name, rc);
-		return rc;
+		goto err_pm_put;
 	}
 
-	pm_runtime_get(&lp->pdev->dev);
-
 	xemacps_init_hw(lp);
 	napi_enable(&lp->napi);
 	rc = xemacps_mii_probe(ndev);
@@ -2242,8 +2246,8 @@ static int xemacps_open(struct net_device *ndev)
 			kfree(lp->mii_bus->irq);
 			mdiobus_free(lp->mii_bus);
 		}
-		pm_runtime_put(&lp->pdev->dev);
-		return -ENXIO;
+		rc = -ENXIO;
+		goto err_pm_put;
 	}
 
 	netif_carrier_on(ndev);
@@ -2251,6 +2255,13 @@ static int xemacps_open(struct net_device *ndev)
 	netif_start_queue(ndev);
 
 	return 0;
+
+err_pm_put:
+	pm_runtime_put(&lp->pdev->dev);
+err_free_rings:
+	xemacps_descriptor_free(lp);
+
+	return rc;
 }
 
 /**
-- 
1.7.5.4

