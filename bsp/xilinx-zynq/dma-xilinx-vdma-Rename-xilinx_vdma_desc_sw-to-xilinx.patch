From d9a36c197cab68ec6b4dbd30d58e8f6ed66341dc Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Thu, 23 May 2013 13:54:45 +0200
Subject: [PATCH 309/509] dma: xilinx: vdma: Rename xilinx_vdma_desc_sw to
 xilinx_vdma_tx_segment

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 18eeab1f46aad80d3ef4740dabb7d917bb8096a2

The structure describes one scatter-gather segment from a transaction,
rename it accordingly.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Acked-by: Srikanth Thokala <sthokal@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/dma/xilinx/xilinx_axivdma.c |   40 +++++++++++++++++-----------------
 1 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_axivdma.c b/drivers/dma/xilinx/xilinx_axivdma.c
index 9083196..1f99921 100644
--- a/drivers/dma/xilinx/xilinx_axivdma.c
+++ b/drivers/dma/xilinx/xilinx_axivdma.c
@@ -141,7 +141,7 @@ struct xilinx_vdma_desc_hw {
 	u32 stride;	/* 0x18 */
 } __aligned(64);
 
-struct xilinx_vdma_desc_sw {
+struct xilinx_vdma_tx_segment {
 	struct xilinx_vdma_desc_hw hw;
 	struct list_head node;
 	struct list_head tx_list;
@@ -243,8 +243,8 @@ static int xilinx_vdma_alloc_chan_resources(struct dma_chan *dchan)
 	 */
 	chan->desc_pool = dma_pool_create("xilinx_vdma_desc_pool",
 				chan->dev,
-				sizeof(struct xilinx_vdma_desc_sw),
-				__alignof__(struct xilinx_vdma_desc_sw), 0);
+				sizeof(struct xilinx_vdma_tx_segment),
+				__alignof__(struct xilinx_vdma_tx_segment), 0);
 	if (!chan->desc_pool) {
 		dev_err(chan->dev,
 			"unable to allocate channel %d descriptor pool\n",
@@ -262,7 +262,7 @@ static int xilinx_vdma_alloc_chan_resources(struct dma_chan *dchan)
 static void xilinx_vdma_free_desc_list(struct xilinx_vdma_chan *chan,
 					struct list_head *list)
 {
-	struct xilinx_vdma_desc_sw *desc, *_desc;
+	struct xilinx_vdma_tx_segment *desc, *_desc;
 
 	list_for_each_entry_safe(desc, _desc, list, node) {
 		list_del(&desc->node);
@@ -273,7 +273,7 @@ static void xilinx_vdma_free_desc_list(struct xilinx_vdma_chan *chan,
 static void xilinx_vdma_free_desc_list_reverse(struct xilinx_vdma_chan *chan,
 						struct list_head *list)
 {
-	struct xilinx_vdma_desc_sw *desc, *_desc;
+	struct xilinx_vdma_tx_segment *desc, *_desc;
 
 	list_for_each_entry_safe_reverse(desc, _desc, list, node) {
 		list_del(&desc->node);
@@ -297,7 +297,7 @@ static void xilinx_vdma_free_chan_resources(struct dma_chan *dchan)
 }
 
 static enum dma_status xilinx_vdma_desc_status(struct xilinx_vdma_chan *chan,
-					struct xilinx_vdma_desc_sw *desc)
+					struct xilinx_vdma_tx_segment *desc)
 {
 	return dma_async_is_complete(desc->async_tx.cookie,
 					chan->completed_cookie,
@@ -306,7 +306,7 @@ static enum dma_status xilinx_vdma_desc_status(struct xilinx_vdma_chan *chan,
 
 static void xilinx_vdma_chan_desc_cleanup(struct xilinx_vdma_chan *chan)
 {
-	struct xilinx_vdma_desc_sw *desc, *_desc;
+	struct xilinx_vdma_tx_segment *desc, *_desc;
 	unsigned long flags;
 
 	spin_lock_irqsave(&chan->lock, flags);
@@ -426,7 +426,7 @@ static void xilinx_vdma_start(struct xilinx_vdma_chan *chan)
 static void xilinx_vdma_start_transfer(struct xilinx_vdma_chan *chan)
 {
 	unsigned long flags;
-	struct xilinx_vdma_desc_sw *desch, *desct = NULL;
+	struct xilinx_vdma_tx_segment *desch, *desct = NULL;
 	struct xilinx_vdma_config *config;
 	u32 reg;
 
@@ -454,10 +454,10 @@ static void xilinx_vdma_start_transfer(struct xilinx_vdma_chan *chan)
 
 	if (chan->has_sg) {
 		desch = list_first_entry(&chan->pending_list,
-				struct xilinx_vdma_desc_sw, node);
+				struct xilinx_vdma_tx_segment, node);
 
 		desct = container_of(chan->pending_list.prev,
-				struct xilinx_vdma_desc_sw, node);
+				struct xilinx_vdma_tx_segment, node);
 
 		vdma_ctrl_write(chan, XILINX_VDMA_REG_CURDESC,
 				desch->async_tx.phys);
@@ -541,7 +541,7 @@ static void xilinx_vdma_issue_pending(struct dma_chan *dchan)
  */
 static void xilinx_vdma_update_completed_cookie(struct xilinx_vdma_chan *chan)
 {
-	struct xilinx_vdma_desc_sw *desc = NULL;
+	struct xilinx_vdma_tx_segment *desc = NULL;
 	unsigned long flags;
 	dma_cookie_t cookie = -EBUSY;
 	int done = 0;
@@ -673,10 +673,10 @@ static void xilinx_vdma_do_tasklet(unsigned long data)
 
 /* Append the descriptor list to the pending list */
 static void xilinx_vdma_append_desc_queue(struct xilinx_vdma_chan *chan,
-					  struct xilinx_vdma_desc_sw *desc)
+					  struct xilinx_vdma_tx_segment *desc)
 {
-	struct xilinx_vdma_desc_sw *tail = container_of(chan->pending_list.prev,
-					struct xilinx_vdma_desc_sw, node);
+	struct xilinx_vdma_tx_segment *tail = container_of(chan->pending_list.prev,
+					struct xilinx_vdma_tx_segment, node);
 	struct xilinx_vdma_desc_hw *hw;
 
 	if (list_empty(&chan->pending_list))
@@ -704,9 +704,9 @@ out_splice:
 static dma_cookie_t xilinx_vdma_tx_submit(struct dma_async_tx_descriptor *tx)
 {
 	struct xilinx_vdma_chan *chan = to_xilinx_chan(tx->chan);
-	struct xilinx_vdma_desc_sw *desc = container_of(tx,
-				struct xilinx_vdma_desc_sw, async_tx);
-	struct xilinx_vdma_desc_sw *child;
+	struct xilinx_vdma_tx_segment *desc = container_of(tx,
+				struct xilinx_vdma_tx_segment, async_tx);
+	struct xilinx_vdma_tx_segment *child;
 	unsigned long flags;
 	dma_cookie_t cookie = -EBUSY;
 
@@ -746,10 +746,10 @@ static dma_cookie_t xilinx_vdma_tx_submit(struct dma_async_tx_descriptor *tx)
 	return cookie;
 }
 
-static struct xilinx_vdma_desc_sw *xilinx_vdma_alloc_descriptor(
+static struct xilinx_vdma_tx_segment *xilinx_vdma_alloc_descriptor(
 					struct xilinx_vdma_chan *chan)
 {
-	struct xilinx_vdma_desc_sw *desc;
+	struct xilinx_vdma_tx_segment *desc;
 	dma_addr_t pdesc;
 
 	desc = dma_pool_alloc(chan->desc_pool, GFP_ATOMIC, &pdesc);
@@ -781,7 +781,7 @@ static struct dma_async_tx_descriptor *xilinx_vdma_prep_slave_sg(
 	void *context)
 {
 	struct xilinx_vdma_chan *chan = to_xilinx_chan(dchan);
-	struct xilinx_vdma_desc_sw *first = NULL, *prev = NULL, *new = NULL;
+	struct xilinx_vdma_tx_segment *first = NULL, *prev = NULL, *new = NULL;
 	struct xilinx_vdma_desc_hw *hw = NULL, *prev_hw = NULL;
 	struct scatterlist *sg;
 	dma_addr_t dma_src;
-- 
1.7.5.4

