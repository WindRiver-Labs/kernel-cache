From 4fd123a2bed0be3436256b8302050bbbbaa0d7db Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Mon, 13 Oct 2014 18:59:17 -0700
Subject: [PATCH 163/290] drm: xilinx: crtc/plane: Remove plane destroy
 function calls

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

The drm resources, including planes, are managed and cleaned up
by drm_mode_config_cleanup(). There's no need to destroy planes
manually.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 6129be82dc49dd603835c4ea849ae1b6247e7e37)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_crtc.c  | 15 ++++--------
 drivers/gpu/drm/xilinx/xilinx_drm_plane.c | 40 +------------------------------
 drivers/gpu/drm/xilinx/xilinx_drm_plane.h |  3 ---
 3 files changed, 6 insertions(+), 52 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
index 4bc556d..05719ce 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
@@ -242,8 +242,6 @@ void xilinx_drm_crtc_destroy(struct drm_crtc *base_crtc)
 
 	clk_disable_unprepare(crtc->pixel_clock);
 
-	xilinx_drm_plane_destroy_planes(crtc->plane_manager);
-	xilinx_drm_plane_destroy_private(crtc->plane_manager, crtc->priv_plane);
 	xilinx_drm_plane_remove_manager(crtc->plane_manager);
 }
 
@@ -526,20 +524,20 @@ struct drm_crtc *xilinx_drm_crtc_create(struct drm_device *drm)
 	if (IS_ERR(crtc->pixel_clock)) {
 		DRM_DEBUG_KMS("failed to get pixel clock\n");
 		ret = -EPROBE_DEFER;
-		goto err_out;
+		goto err_plane;
 	}
 
 	ret = clk_prepare_enable(crtc->pixel_clock);
 	if (ret) {
 		DRM_DEBUG_KMS("failed to prepare/enable clock\n");
-		goto err_out;
+		goto err_plane;
 	}
 
 	sub_node = of_parse_phandle(drm->dev->of_node, "xlnx,vtc", 0);
 	if (!sub_node) {
 		DRM_ERROR("failed to get a video timing controller node\n");
 		ret = -ENODEV;
-		goto err_out;
+		goto err_plane;
 	}
 
 	crtc->vtc = xilinx_vtc_probe(drm->dev, sub_node);
@@ -547,7 +545,7 @@ struct drm_crtc *xilinx_drm_crtc_create(struct drm_device *drm)
 	if (IS_ERR(crtc->vtc)) {
 		DRM_ERROR("failed to probe video timing controller\n");
 		ret = PTR_ERR(crtc->vtc);
-		goto err_out;
+		goto err_plane;
 	}
 
 	crtc->dpms = DRM_MODE_DPMS_OFF;
@@ -556,7 +554,7 @@ struct drm_crtc *xilinx_drm_crtc_create(struct drm_device *drm)
 	ret = drm_crtc_init(drm, &crtc->base, &xilinx_drm_crtc_funcs);
 	if (ret) {
 		DRM_ERROR("failed to initialize crtc\n");
-		goto err_out;
+		goto err_plane;
 	}
 	drm_crtc_helper_add(&crtc->base, &xilinx_drm_crtc_helper_funcs);
 
@@ -564,9 +562,6 @@ struct drm_crtc *xilinx_drm_crtc_create(struct drm_device *drm)
 
 	return &crtc->base;
 
-err_out:
-	xilinx_drm_plane_destroy_planes(crtc->plane_manager);
-	xilinx_drm_plane_destroy_private(crtc->plane_manager, crtc->priv_plane);
 err_plane:
 	xilinx_drm_plane_remove_manager(crtc->plane_manager);
 	return ERR_PTR(ret);
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_plane.c b/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
index ad97fbb..53a8994 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
@@ -734,34 +734,12 @@ xilinx_drm_plane_create_private(struct xilinx_drm_plane_manager *manager,
 	return &plane->base;
 }
 
-void xilinx_drm_plane_destroy_private(struct xilinx_drm_plane_manager *manager,
-				      struct drm_plane *base_plane)
-{
-	xilinx_drm_plane_destroy(base_plane);
-}
-
-/* destroy planes */
-void xilinx_drm_plane_destroy_planes(struct xilinx_drm_plane_manager *manager)
-{
-	struct xilinx_drm_plane *plane;
-	int i;
-
-	for (i = 0; i < manager->num_planes; i++) {
-		plane = manager->planes[i];
-		if (plane && !plane->priv) {
-			xilinx_drm_plane_destroy(&plane->base);
-			manager->planes[i] = NULL;
-		}
-	}
-}
-
 /* create extra planes */
 int xilinx_drm_plane_create_planes(struct xilinx_drm_plane_manager *manager,
 				   unsigned int possible_crtcs)
 {
 	struct xilinx_drm_plane *plane;
 	int i;
-	int err_ret;
 
 	xilinx_drm_plane_create_property(manager);
 
@@ -773,8 +751,7 @@ int xilinx_drm_plane_create_planes(struct xilinx_drm_plane_manager *manager,
 		plane = xilinx_drm_plane_create(manager, possible_crtcs, false);
 		if (IS_ERR(plane)) {
 			DRM_ERROR("failed to allocate a plane\n");
-			err_ret = PTR_ERR(plane);
-			goto err_out;
+			return PTR_ERR(plane);
 		}
 
 		xilinx_drm_plane_attach_property(&plane->base);
@@ -783,10 +760,6 @@ int xilinx_drm_plane_create_planes(struct xilinx_drm_plane_manager *manager,
 	}
 
 	return 0;
-
-err_out:
-	xilinx_drm_plane_destroy_planes(manager);
-	return err_ret;
 }
 
 /* initialize a plane manager: num_planes, format, max_width */
@@ -875,16 +848,5 @@ xilinx_drm_plane_probe_manager(struct drm_device *drm)
 
 void xilinx_drm_plane_remove_manager(struct xilinx_drm_plane_manager *manager)
 {
-	int i;
-
-	for (i = 0; i < manager->num_planes; i++) {
-		if (manager->planes[i] && !manager->planes[i]->priv) {
-			xilinx_drm_plane_dpms(&manager->planes[i]->base,
-					      DRM_MODE_DPMS_OFF);
-			xilinx_drm_plane_destroy(&manager->planes[i]->base);
-			manager->planes[i] = NULL;
-		}
-	}
-
 	of_node_put(manager->node);
 }
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_plane.h b/drivers/gpu/drm/xilinx/xilinx_drm_plane.h
index a262de5..d3fa691 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_plane.h
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_plane.h
@@ -44,11 +44,8 @@ struct xilinx_drm_plane_manager;
 struct drm_plane *
 xilinx_drm_plane_create_private(struct xilinx_drm_plane_manager *manager,
 				unsigned int possible_crtcs);
-void xilinx_drm_plane_destroy_private(struct xilinx_drm_plane_manager *manager,
-				      struct drm_plane *base_plane);
 int xilinx_drm_plane_create_planes(struct xilinx_drm_plane_manager *manager,
 				   unsigned int possible_crtcs);
-void xilinx_drm_plane_destroy_planes(struct xilinx_drm_plane_manager *manager);
 
 bool xilinx_drm_plane_check_format(struct xilinx_drm_plane_manager *manager,
 				   uint32_t format);
-- 
2.0.2

