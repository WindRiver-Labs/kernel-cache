From a2398948a89826b365266ab0803b17b6a0ba1b67 Mon Sep 17 00:00:00 2001
From: Harini Katakam <harinik@xilinx.com>
Date: Fri, 11 Apr 2014 12:06:28 +0530
Subject: [PATCH 083/182] spi: core: Increase timeout value

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 4f7eae84630279ae4793cf22ea0c941e1269c9d0

The existing timeout value in wait_for_completion_timeout is
calculated from the transfer length and speed with tolerance of 10msec.
This is too low because this is used for error conditions such as
hardware hang etc.
The xfer->speed_hz considered may not be the actual speed set
because the best clock divisor is chosen from a limited set such that
the actual speed <= requested speed. This will lead to timeout being
less than actual transfer time.
Considering acceptable latencies, this timeout can be set to a
value double the expected transfer plus 100 msecs.
This patch adds the same in the core.

Signed-off-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Mark Brown <broonie@linaro.org>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
(cherry picked from commit 445c6fe3902be00ab170d749c7c02dafede2b657)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/spi/spi.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/spi/spi.c b/drivers/spi/spi.c
index a8e43c8..5bd5a42 100644
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -613,7 +613,7 @@ static int spi_transfer_one_message(struct spi_master *master,
 		if (ret > 0) {
 			ret = 0;
 			ms = xfer->len * 8 * 1000 / xfer->speed_hz;
-			ms += 10; /* some tolerance */
+			ms += ms + 100; /* some tolerance */
 
 			ms = wait_for_completion_timeout(&master->xfer_completion,
 							 msecs_to_jiffies(ms));
-- 
1.7.5.4

