From 106a2c4aef93437d6eca04b4c1ac57e141367a15 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Tue, 18 Mar 2014 09:18:36 -0700
Subject: [PATCH 214/456] media: xilinx: vip: Change the return value of
 xvip_of_get_format()

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

If any error is returned by of_property_read_XXX(), reuse the returned
error code. When no format is found, return 'ERR_PTR(-EINVAL)' instead
of 'NULL'.

Signed-off-by: Hyun Kwon <hyunk@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit a7fd4239af962e71701b1eb66045337bd224be52)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-tpg.c |    4 ++--
 drivers/media/platform/xilinx/xilinx-vip.c |    8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-tpg.c b/drivers/media/platform/xilinx/xilinx-tpg.c
index 4c2822f..a7e1d08e 100644
--- a/drivers/media/platform/xilinx/xilinx-tpg.c
+++ b/drivers/media/platform/xilinx/xilinx-tpg.c
@@ -246,9 +246,9 @@ static int xtpg_parse_of(struct xtpg_device *xtpg)
 	struct device_node *node = xtpg->xvip.dev->of_node;
 
 	xtpg->vip_format = xvip_of_get_format(node);
-	if (xtpg->vip_format == NULL) {
+	if (IS_ERR(xtpg->vip_format)) {
 		dev_err(xtpg->xvip.dev, "invalid format in DT");
-		return -EINVAL;
+		return PTR_ERR(xtpg->vip_format);
 	}
 
 	return 0;
diff --git a/drivers/media/platform/xilinx/xilinx-vip.c b/drivers/media/platform/xilinx/xilinx-vip.c
index 98428a3..3bf199b 100644
--- a/drivers/media/platform/xilinx/xilinx-vip.c
+++ b/drivers/media/platform/xilinx/xilinx-vip.c
@@ -85,7 +85,7 @@ EXPORT_SYMBOL_GPL(xvip_get_format_by_fourcc);
  * information.
  *
  * Return: a pointer to the format information structure corresponding to the
- * format name and width, or %NULL if no corresponding format can be found.
+ * format name and width, or ERR_PTR if no corresponding format can be found.
  */
 const struct xvip_video_format *xvip_of_get_format(struct device_node *node)
 {
@@ -96,11 +96,11 @@ const struct xvip_video_format *xvip_of_get_format(struct device_node *node)
 
 	ret = of_property_read_string(node, "xlnx,axi-video-format", &name);
 	if (ret < 0)
-		return NULL;
+		return ERR_PTR(ret);
 
 	ret = of_property_read_u32(node, "xlnx,axi-video-width", &width);
 	if (ret < 0)
-		return NULL;
+		return ERR_PTR(ret);
 
 	for (i = 0; i < ARRAY_SIZE(xvip_video_formats); ++i) {
 		const struct xvip_video_format *format = &xvip_video_formats[i];
@@ -109,7 +109,7 @@ const struct xvip_video_format *xvip_of_get_format(struct device_node *node)
 			return format;
 	}
 
-	return NULL;
+	return ERR_PTR(-EINVAL);
 }
 EXPORT_SYMBOL_GPL(xvip_of_get_format);
 
-- 
1.7.5.4

