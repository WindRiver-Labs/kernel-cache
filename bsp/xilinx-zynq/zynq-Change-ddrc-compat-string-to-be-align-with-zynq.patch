From e9a49f419d1e95b48f45918d36f275b1b8944d41 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Tue, 4 Feb 2014 15:26:09 +0100
Subject: [PATCH 014/509] zynq: Change ddrc compat string to be align with
 zynq

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit ce396d18ea50cbac98fe22ab98cff03e0af2fe21

Get rid of ps7 names in drivers and use zynq one
with version suffix.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../devicetree/bindings/edac/zynq_edac.txt         |    6 +++---
 arch/arm/boot/dts/zynq-zc702.dts                   |    2 +-
 arch/arm/boot/dts/zynq-zc706.dts                   |    2 +-
 arch/arm/boot/dts/zynq-zed.dts                     |    2 +-
 arch/arm/mach-zynq/pm.c                            |    2 +-
 drivers/edac/zynq_edac.c                           |   11 +++++------
 6 files changed, 12 insertions(+), 13 deletions(-)

diff --git a/Documentation/devicetree/bindings/edac/zynq_edac.txt b/Documentation/devicetree/bindings/edac/zynq_edac.txt
index c21ff83..40f02b2 100644
--- a/Documentation/devicetree/bindings/edac/zynq_edac.txt
+++ b/Documentation/devicetree/bindings/edac/zynq_edac.txt
@@ -3,14 +3,14 @@ corrected and double bit ecc errors that are detected by the DDR ECC controller.
 ECC support for DDR is available in half-bus width(16 bit) configuration only.
 
 Required properties:
-- compatible: Should be "xlnx,ps7-ddrc" or "xlnx,ps7-ddrc-1.00.a"
+- compatible: Should be "xlnx,zynq-ddrc-1.00.a"
 - reg: Should contain DDR controller registers location and length.
 
 Example:
 ++++++++
 
-ps7_ddrc_0: ps7-ddrc@f8006000 {
-	compatible = "xlnx,ps7-ddrc-1.00.a", "xlnx,ps7-ddrc";
+zynq_ddrc_0: zynq-ddrc@f8006000 {
+	compatible = "xlnx,zynq-ddrc-1.00.a";
 	reg = <0xf8006000 0x1000>;
 };
 
diff --git a/arch/arm/boot/dts/zynq-zc702.dts b/arch/arm/boot/dts/zynq-zc702.dts
index 9f48be8..9d17550 100644
--- a/arch/arm/boot/dts/zynq-zc702.dts
+++ b/arch/arm/boot/dts/zynq-zc702.dts
@@ -95,7 +95,7 @@
 			reg = <0xe0008000 0x1000>;
 		} ;
 		ps7_ddrc_0: ps7-ddrc@f8006000 {
-			compatible = "xlnx,ps7-ddrc-1.00.a", "xlnx,ps7-ddrc";
+			compatible = "xlnx,ps7-ddrc-1.00.a", "xlnx,ps7-ddrc", "xlnx,zynq-ddrc-1.00.a";
 			reg = <0xf8006000 0x1000>;
 			xlnx,has-ecc = <0x0>;
 		} ;
diff --git a/arch/arm/boot/dts/zynq-zc706.dts b/arch/arm/boot/dts/zynq-zc706.dts
index 970e25a..aec1377 100644
--- a/arch/arm/boot/dts/zynq-zc706.dts
+++ b/arch/arm/boot/dts/zynq-zc706.dts
@@ -87,7 +87,7 @@
 			reg = <0xf800b000 0x1000>;
 		} ;
 		ps7_ddrc_0: ps7-ddrc@f8006000 {
-			compatible = "xlnx,ps7-ddrc-1.00.a", "xlnx,ps7-ddrc";
+			compatible = "xlnx,ps7-ddrc-1.00.a", "xlnx,ps7-ddrc", "xlnx,zynq-ddrc-1.00.a";
 			reg = <0xf8006000 0x1000>;
 			xlnx,has-ecc = <0x0>;
 		} ;
diff --git a/arch/arm/boot/dts/zynq-zed.dts b/arch/arm/boot/dts/zynq-zed.dts
index 629e0bd..b367c5a 100644
--- a/arch/arm/boot/dts/zynq-zed.dts
+++ b/arch/arm/boot/dts/zynq-zed.dts
@@ -86,7 +86,7 @@
 			reg = <0xf800b000 0x1000>;
 		} ;
 		ps7_ddrc_0: ps7-ddrc@f8006000 {
-			compatible = "xlnx,ps7-ddrc-1.00.a", "xlnx,ps7-ddrc";
+			compatible = "xlnx,ps7-ddrc-1.00.a", "xlnx,ps7-ddrc", "xlnx,zynq-ddrc-1.00.a";
 			reg = <0xf8006000 0x1000>;
 			xlnx,has-ecc = <0x0>;
 		} ;
diff --git a/arch/arm/mach-zynq/pm.c b/arch/arm/mach-zynq/pm.c
index a4ad045..8c268a7 100644
--- a/arch/arm/mach-zynq/pm.c
+++ b/arch/arm/mach-zynq/pm.c
@@ -263,7 +263,7 @@ static void __iomem *zynq_pm_remap_ocm(void)
 
 int __init zynq_pm_late_init(void)
 {
-	ddrc_base = zynq_pm_ioremap("xlnx,ps7-ddrc");
+	ddrc_base = zynq_pm_ioremap("xlnx,zynq-ddrc-1.00.a");
 	if (!ddrc_base)
 		pr_warn("%s: Unable to map DDRC IO memory.\n", __func__);
 
diff --git a/drivers/edac/zynq_edac.c b/drivers/edac/zynq_edac.c
index 39ad551..4d3590f 100644
--- a/drivers/edac/zynq_edac.c
+++ b/drivers/edac/zynq_edac.c
@@ -245,7 +245,7 @@ static void zynq_edac_generate_message(const struct mem_ctl_info *mci,
  * @mci:	Pointer to the edac memory controller instance
  * @perrstatus:	Pointer to the zynq ecc status structure
  *
- * This routine handles an xilinx,ps7-ddrc controller ECC correctable error.
+ * This routine handles the controller ECC correctable error.
  */
 static void zynq_edac_handle_error(struct mem_ctl_info *mci,
 			struct zynq_ecc_status *perrstatus)
@@ -332,8 +332,7 @@ static enum dev_type zynq_edac_get_dtype(void __iomem *base)
  * zynq_edac_get_eccstate - Return the controller ecc enable/disable status
  * @base:	Pointer to the ddr memory contoller base address
  *
- * This routine returns the ECC enable/diable status for the xlnx,ps7-ddrc
- * controller
+ * This routine returns the ECC enable/diable status for the controller
  *
  * Returns a ecc status boolean i.e true/false - enabled/disabled.
  */
@@ -445,7 +444,7 @@ static int zynq_edac_init_csrows(struct mem_ctl_info *mci)
  *
  * This routine performs initialization of the EDAC memory controller
  * instance and related driver-private data associated with the
- * xlnx,ps7-ddrc memory controller the instance is bound to.
+ * memory controller the instance is bound to.
  *
  * Returns 0 if OK; otherwise, < 0 on error.
  */
@@ -494,7 +493,7 @@ static int zynq_edac_mc_init(struct mem_ctl_info *mci,
  * zynq_edac_mc_probe - Check controller and bind driver
  * @pdev:	Pointer to the platform_device struct
  *
- * This routine probes a specific xilinx,ps7-ddrc controller
+ * This routine probes a specific controller
  * instance for binding with the driver.
  *
  * Returns 0 if the controller instance was successfully bound to the
@@ -575,7 +574,7 @@ free_edac_mc:
  * @pdev:	Pointer to the platform_device struct
  *
  * This routine unbinds the EDAC memory controller instance associated
- * with the specified xilinx,ps7-ddrc controller described by the
+ * with the specified controller described by the
  * OpenFirmware device tree node passed as a parameter.
  *
  * Unconditionally returns 0.
-- 
1.7.5.4

