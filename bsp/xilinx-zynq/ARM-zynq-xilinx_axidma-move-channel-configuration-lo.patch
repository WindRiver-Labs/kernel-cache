From 71bc6a47b6db492e21c1a21b0bee33c4d6ae6e21 Mon Sep 17 00:00:00 2001
From: Nicolae Rosia <nicolae.rosia@certsign.ro>
Date: Mon, 5 Jan 2015 18:07:10 +0200
Subject: [PATCH 014/456] ARM: zynq: xilinx_axidma: move channel configuration
 logic into xilinx_dma_chan_config

xilinx_dma_chan_config configures a channel's IRQThreshold and IRQDelay.

Signed-off-by: Nicolae Rosia <nicolae.rosia@certsign.ro>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 5b4bae9ce1a9ec704c2eda6b51b6bfad78d9a57e)
---
 drivers/dma/xilinx/xilinx_axidma.c |   51 +++++++++++++++++------------------
 1 files changed, 25 insertions(+), 26 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_axidma.c b/drivers/dma/xilinx/xilinx_axidma.c
index 76807ff..68f5969 100644
--- a/drivers/dma/xilinx/xilinx_axidma.c
+++ b/drivers/dma/xilinx/xilinx_axidma.c
@@ -389,11 +389,6 @@ static void xilinx_dma_start_transfer(struct xilinx_dma_chan *chan)
 			goto out_unlock;
 		list_splice_tail_init(&chan->pending_list, &chan->active_list);
 
-		/* Enable interrupts */
-		dma_write(chan, XILINX_DMA_CONTROL_OFFSET,
-			  dma_read(chan, XILINX_DMA_CONTROL_OFFSET) |
-			  XILINX_DMA_XR_IRQ_ALL_MASK);
-
 		/* Update tail ptr register and start the transfer */
 		dma_write(chan, XILINX_DMA_TDESC_OFFSET, desct->async_tx.phys);
 		goto out_unlock;
@@ -418,11 +413,6 @@ static void xilinx_dma_start_transfer(struct xilinx_dma_chan *chan)
 
 	hw = &desch->hw;
 
-	/* Enable interrupts */
-	dma_write(chan, XILINX_DMA_CONTROL_OFFSET,
-		  dma_read(chan, XILINX_DMA_CONTROL_OFFSET) |
-		  XILINX_DMA_XR_IRQ_ALL_MASK);
-
 	dma_write(chan, XILINX_DMA_SRCADDR_OFFSET, hw->buf_addr);
 
 	/* Start the transfer */
@@ -486,6 +476,25 @@ static void xilinx_dma_update_completed_cookie(struct xilinx_dma_chan *chan)
 out_unlock:
 	spin_unlock_irqrestore(&chan->lock, flags);
 }
+/**
+ * xilinx_dma_chan_config - Configure DMA Channel IRQThreshold, IRQDelay
+ * and enable interrupts
+ * @chan: DMA channel
+ */
+static void xilinx_dma_chan_config(struct xilinx_dma_chan *chan)
+{
+	u32 reg = dma_read(chan, XILINX_DMA_CONTROL_OFFSET);
+
+	reg &= ~XILINX_DMA_XR_COALESCE_MASK;
+	reg |= chan->config.coalesc << XILINX_DMA_COALESCE_SHIFT;
+
+	reg &= ~XILINX_DMA_XR_DELAY_MASK;
+	reg |= chan->config.delay << XILINX_DMA_DELAY_SHIFT;
+
+	reg |= XILINX_DMA_XR_IRQ_ALL_MASK;
+
+	dma_write(chan, XILINX_DMA_CONTROL_OFFSET, reg);
+}
 
 /* Reset hardware */
 static int dma_reset(struct xilinx_dma_chan *chan)
@@ -524,10 +533,6 @@ static irqreturn_t dma_intr_handler(int irq, void *data)
 
 	reg = dma_read(chan, XILINX_DMA_CONTROL_OFFSET);
 
-	/* Disable intr */
-	dma_write(chan, XILINX_DMA_CONTROL_OFFSET,
-		  reg & ~XILINX_DMA_XR_IRQ_ALL_MASK);
-
 	stat = dma_read(chan, XILINX_DMA_STATUS_OFFSET);
 	if (!(stat & XILINX_DMA_XR_IRQ_ALL_MASK))
 		return IRQ_NONE;
@@ -836,22 +841,14 @@ static int xilinx_dma_device_control(struct dma_chan *dchan,
 		 * Use value XILINX_DMA_NO_CHANGE to signal no change
 		 */
 		struct xilinx_dma_config *cfg = (struct xilinx_dma_config *)arg;
-		u32 reg = dma_read(chan, XILINX_DMA_CONTROL_OFFSET);
-
-		if (cfg->coalesc <= XILINX_DMA_COALESCE_MAX) {
-			reg &= ~XILINX_DMA_XR_COALESCE_MASK;
-			reg |= cfg->coalesc << XILINX_DMA_COALESCE_SHIFT;
 
+		if (cfg->coalesc <= XILINX_DMA_COALESCE_MAX)
 			chan->config.coalesc = cfg->coalesc;
-		}
 
-		if (cfg->delay <= XILINX_DMA_DELAY_MAX) {
-			reg &= ~XILINX_DMA_XR_DELAY_MASK;
-			reg |= cfg->delay << XILINX_DMA_DELAY_SHIFT;
+		if (cfg->delay <= XILINX_DMA_DELAY_MAX)
 			chan->config.delay = cfg->delay;
-		}
 
-		dma_write(chan, XILINX_DMA_CONTROL_OFFSET, reg);
+		xilinx_dma_chan_config(chan);
 
 		return 0;
 	} else
@@ -1028,8 +1025,10 @@ static int xilinx_dma_probe(struct platform_device *pdev)
 	}
 
 	for (i = 0; i < XILINX_DMA_MAX_CHANS_PER_DEVICE; ++i) {
-		if (xdev->chan[i])
+		if (xdev->chan[i]) {
 			xdev->chan[i]->has_sg = has_sg;
+			xilinx_dma_chan_config(xdev->chan[i]);
+		}
 	}
 
 	ret = dma_async_device_register(&xdev->common);
-- 
1.7.5.4

