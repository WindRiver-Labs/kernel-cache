From 31de96e5dd8c0fb43c5f4e88f041eee7c7c84e14 Mon Sep 17 00:00:00 2001
From: Michel Thebeau <michel.thebeau@windriver.com>
Date: Fri, 15 Feb 2013 11:20:31 -0500
Subject: [PATCH] xilinx/nand: add return value to write_page functions to fix
 compile warnings

Fix the following compiling warnings introduced by xilinx nand driver:
drivers/mtd/nand/xilinx_nandpss.c:1132:29: warning: assignment from
incompatible pointer type [enabled by default]
drivers/mtd/nand/xilinx_nandpss.c:1134:33: warning: assignment from
incompatible pointer type [enabled by default]
drivers/mtd/nand/xilinx_nandpss.c:1156:29: warning: assignment from
incompatible pointer type [enabled by default]
drivers/mtd/nand/xilinx_nandpss.c:1158:33: warning: assignment from
incompatible pointer type [enabled by default]
drivers/mtd/nand/xilinx_nandpss.c:1192:30: warning: assignment from
incompatible pointer type [enabled by default]
drivers/mtd/nand/xilinx_nandpss.c:1194:34: warning: assignment from
incompatible pointer type [enabled by default]

The upstream ltsi commit "MTD: nand: add return value for
write_page()/write_page_raw() functions in structure of
nand_ecc_ctrl.", fdbad98dff8007f2b8bee6698b5d25ebba0471c9, adds a return
value to the function pointer: int (*write_page)(.. etc)

The functions xnandpss_write_page_hwecc(), xnandpss_write_page_swecc(),
and xnandpss_write_page_raw() have nothing to return.  So return 0
always, as the upstream commit does.

And since xnandpss_write_page_swecc() calls ecc.write_page_raw()
(i.e., xnandpss_write_page_raw()), pass the return value of
ecc.write_page_raw().

Signed-off-by: Liming Wang <liming.wang@windriver.com>
Signed-off-by: Michel Thebeau <michel.thebeau@windriver.com>
---
 drivers/mtd/nand/xilinx_nandpss.c |   12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/mtd/nand/xilinx_nandpss.c b/drivers/mtd/nand/xilinx_nandpss.c
index 196f0f9..947db5a 100644
--- a/drivers/mtd/nand/xilinx_nandpss.c
+++ b/drivers/mtd/nand/xilinx_nandpss.c
@@ -491,7 +491,7 @@ static int xnandpss_read_page_raw(struct mtd_info *mtd, struct nand_chip *chip,
  * @buf:        data buffer
  *
  */
-static void xnandpss_write_page_raw(struct mtd_info *mtd,
+static int xnandpss_write_page_raw(struct mtd_info *mtd,
 			struct nand_chip *chip, const uint8_t *buf)
 {
 	unsigned long data_width = 4;
@@ -510,6 +510,8 @@ static void xnandpss_write_page_raw(struct mtd_info *mtd,
 	chip->IO_ADDR_W = (void __iomem *__force)data_phase_addr;
 
 	chip->write_buf(mtd, p, data_width);
+
+	return 0;
 }
 
 /**
@@ -520,7 +522,7 @@ static void xnandpss_write_page_raw(struct mtd_info *mtd,
  *
  * This functions writes data and hardware generated ECC values in to the page.
  */
-void xnandpss_write_page_hwecc(struct mtd_info *mtd,
+int xnandpss_write_page_hwecc(struct mtd_info *mtd,
 				struct nand_chip *chip, const uint8_t *buf)
 {
 	int i, eccsize = chip->ecc.size;
@@ -567,6 +569,8 @@ void xnandpss_write_page_hwecc(struct mtd_info *mtd,
 	chip->IO_ADDR_W = (void __iomem *__force)data_phase_addr;
 	oob_ptr += (mtd->oobsize - data_width);
 	chip->write_buf(mtd, oob_ptr, data_width);
+
+	return 0;
 }
 
 /**
@@ -575,7 +579,7 @@ void xnandpss_write_page_hwecc(struct mtd_info *mtd,
  * @chip:	nand chip info structure
  * @buf:	data buffer
  */
-static void xnandpss_write_page_swecc(struct mtd_info *mtd,
+static int xnandpss_write_page_swecc(struct mtd_info *mtd,
 			struct nand_chip *chip, const uint8_t *buf)
 {
 	int i, eccsize = chip->ecc.size;
@@ -592,7 +596,7 @@ static void xnandpss_write_page_swecc(struct mtd_info *mtd,
 	for (i = 0; i < chip->ecc.total; i++)
 		chip->oob_poi[eccpos[i]] = ecc_calc[i];
 
-	chip->ecc.write_page_raw(mtd, chip, buf);
+	return chip->ecc.write_page_raw(mtd, chip, buf);
 }
 
 /**
-- 
1.7.9.7

