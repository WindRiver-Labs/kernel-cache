From 9ee54a2c22a9b850f9522fab5919734da3d64701 Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Fri, 7 Mar 2014 18:58:17 +0530
Subject: [PATCH 069/509] SPI: zynq: Corrected SPI disable code

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 6e421ae8058153a06bebb80885d27532b09a8503

SPI disable was previously done by writing ~ZYNQ_SPI_ER_ENABLE_MASK,
which is 0xFFFFFFFE when in fact 0x0 should be written.
Corrected the same.

Signed-off-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/spi/spi-zynq.c |   12 +++++++-----
 1 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/spi/spi-zynq.c b/drivers/spi/spi-zynq.c
index e0c72e1..0f11053 100644
--- a/drivers/spi/spi-zynq.c
+++ b/drivers/spi/spi-zynq.c
@@ -76,6 +76,7 @@
  * This register is used to enable or disable the SPI controller
  */
 #define ZYNQ_SPI_ER_ENABLE_MASK	0x00000001 /* SPI Enable Bit Mask */
+#define ZYNQ_SPI_ER_DISABLE_MASK	0x0 /* SPI Disable Bit Mask */
 
 /*
  * Definitions for the status of queue
@@ -141,7 +142,7 @@ struct zynq_spi {
 static void zynq_spi_init_hw(void __iomem *regs_base)
 {
 	zynq_spi_write(regs_base + ZYNQ_SPI_ER_OFFSET,
-		       ~ZYNQ_SPI_ER_ENABLE_MASK);
+		       ZYNQ_SPI_ER_DISABLE_MASK);
 	zynq_spi_write(regs_base + ZYNQ_SPI_IDR_OFFSET, 0x7F);
 
 	/* Clear the RX FIFO */
@@ -230,7 +231,7 @@ static int zynq_spi_setup_transfer(struct spi_device *spi,
 	spin_lock_irqsave(&xspi->ctrl_reg_lock, flags);
 
 	zynq_spi_write(xspi->regs + ZYNQ_SPI_ER_OFFSET,
-		       ~ZYNQ_SPI_ER_ENABLE_MASK);
+		       ZYNQ_SPI_ER_DISABLE_MASK);
 	ctrl_reg = zynq_spi_read(xspi->regs + ZYNQ_SPI_CR_OFFSET);
 
 	/* Set the SPI clock phase and clock polarity */
@@ -394,7 +395,8 @@ static void zynq_spi_reset_controller(struct spi_device *spi)
 	zynq_spi_write(xspi->regs + ZYNQ_SPI_IDR_OFFSET,
 			ZYNQ_SPI_IXR_ALL_MASK);
 	zynq_spi_chipselect(spi, 0);
-	zynq_spi_write(xspi->regs + ZYNQ_SPI_ER_OFFSET, 0);
+	zynq_spi_write(xspi->regs + ZYNQ_SPI_ER_OFFSET,
+			ZYNQ_SPI_ER_DISABLE_MASK);
 }
 
 /**
@@ -813,7 +815,7 @@ static int zynq_spi_remove(struct platform_device *pdev)
 		return ret;
 
 	zynq_spi_write(xspi->regs + ZYNQ_SPI_ER_OFFSET,
-		       ~ZYNQ_SPI_ER_ENABLE_MASK);
+		       ZYNQ_SPI_ER_DISABLE_MASK);
 
 	clk_disable_unprepare(xspi->devclk);
 	clk_disable_unprepare(xspi->aperclk);
@@ -850,7 +852,7 @@ static int zynq_spi_suspend(struct device *dev)
 		return ret;
 
 	zynq_spi_write(xspi->regs + ZYNQ_SPI_ER_OFFSET,
-		       ~ZYNQ_SPI_ER_ENABLE_MASK);
+		       ZYNQ_SPI_ER_DISABLE_MASK);
 
 	clk_disable(xspi->devclk);
 	clk_disable(xspi->aperclk);
-- 
1.7.5.4

