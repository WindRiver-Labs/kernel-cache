From c7ace59ff185a330c427dd25d9fbecd2047fc174 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Fri, 3 May 2013 10:36:01 +0800
Subject: [PATCH 03/13] Xilinx: ARM: BSP: clean up hotplug code

git://git.xilinx.com/linux-xlnx.git master
commit 730d0098851e9cf088a788ca3180931fd11848c1

This is based on a patch from Soren during his clean
up. Change to the DSB instruction for clarity over CP15
operations. Use the correct bit for SMP in the Aux Control
Register. Use an explicit WFI also for clariy.

This allows the while hack to be removed such that it's
now working correctly.

Signed-off-by: John Linn <john.linn@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-zynq/hotplug.c |   31 ++++++-------------------------
 1 files changed, 6 insertions(+), 25 deletions(-)

diff --git a/arch/arm/mach-zynq/hotplug.c b/arch/arm/mach-zynq/hotplug.c
index 2cfe695..22b1084 100644
--- a/arch/arm/mach-zynq/hotplug.c
+++ b/arch/arm/mach-zynq/hotplug.c
@@ -22,12 +22,12 @@ static inline void cpu_enter_lowpower(void)
 	flush_cache_all();
 	asm volatile(
 	"	mcr	p15, 0, %1, c7, c5, 0\n"
-	"	mcr	p15, 0, %1, c7, c10, 4\n"
+	"	dsb\n"
 	/*
 	 * Turn off coherency
 	 */
 	"	mrc	p15, 0, %0, c1, c0, 1\n"
-	"	bic	%0, %0, #0x20\n"
+	"	bic	%0, %0, #0x40\n"
 	"	mcr	p15, 0, %0, c1, c0, 1\n"
 	"	mrc	p15, 0, %0, c1, c0, 0\n"
 	"	bic	%0, %0, %2\n"
@@ -42,11 +42,11 @@ static inline void cpu_leave_lowpower(void)
 	unsigned int v;
 
 	asm volatile(
-	"mrc	p15, 0, %0, c1, c0, 0\n"
+	"	mrc	p15, 0, %0, c1, c0, 0\n"
 	"	orr	%0, %0, %1\n"
 	"	mcr	p15, 0, %0, c1, c0, 0\n"
 	"	mrc	p15, 0, %0, c1, c0, 1\n"
-	"	orr	%0, %0, #0x20\n"
+	"	orr	%0, %0, #0x40\n"
 	"	mcr	p15, 0, %0, c1, c0, 1\n"
 	  : "=&r" (v)
 	  : "Ir" (CR_C)
@@ -61,27 +61,8 @@ static inline void platform_do_lowpower(unsigned int cpu, int *spurious)
 	 * code will have already disabled interrupts
 	 */
 	for (;;) {
-		/*
-		 * here's the WFI
-		 */
-		asm(".word	0xe320f003\n"
-		    :
-		    :
-		    : "memory", "cc");
-
-		/*
-		 * The WFI is not working for some reason and it's not clear
-		 * why but it causes the CPU to crash, this while(1) is not
-		 * efficient for power, but works for now
-		 */
-
-		while (1);
-		/*if (pen_release == cpu) {*/
-			/*
-			 * OK, proper wakeup, we're done
-			 */
-			break;
-		/*}*/
+		dsb();
+		wfi();
 
 		/*
 		 * Getting here, means that we have come out of WFI without
-- 
1.7.5.4

