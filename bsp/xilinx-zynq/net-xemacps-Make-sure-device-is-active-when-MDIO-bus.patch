From 581c4417f2df70e1e0c8dc49bc322f77449212ad Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Thu, 12 Jun 2014 12:14:36 -0700
Subject: [PATCH 387/793] net: xemacps: Make sure device is active when MDIO
 bus is accessed

Due to runtime PM it could happen that the GEM was runtime suspended,
having its clock disabled, but still MDIO access could happen. Those
require the GEM registers to be accessible, which requires the clocks to
be enabled.
Add runtime_pm_(get|put)() calls in the MDIO access path to ensure the
GEM clocks are enabled when the MDIO bus is accesses.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |    8 ++++++++
 1 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 538d6c1..c967934 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -583,6 +583,8 @@ static int xemacps_mdio_read(struct mii_bus *bus, int mii_id, int phyreg)
 	int value;
 	volatile u32 ipisr;
 
+	pm_runtime_get_sync(&lp->pdev->dev);
+
 	regval  = XEMACPS_PHYMNTNC_OP_MASK;
 	regval |= XEMACPS_PHYMNTNC_OP_R_MASK;
 	regval |= (mii_id << XEMACPS_PHYMNTNC_PHYAD_SHIFT_MASK);
@@ -599,6 +601,8 @@ static int xemacps_mdio_read(struct mii_bus *bus, int mii_id, int phyreg)
 	value = xemacps_read(lp->baseaddr, XEMACPS_PHYMNTNC_OFFSET) &
 			XEMACPS_PHYMNTNC_DATA_MASK;
 
+	pm_runtime_put(&lp->pdev->dev);
+
 	return value;
 }
 
@@ -622,6 +626,8 @@ static int xemacps_mdio_write(struct mii_bus *bus, int mii_id, int phyreg,
 	u32 regval;
 	volatile u32 ipisr;
 
+	pm_runtime_get_sync(&lp->pdev->dev);
+
 	regval  = XEMACPS_PHYMNTNC_OP_MASK;
 	regval |= XEMACPS_PHYMNTNC_OP_W_MASK;
 	regval |= (mii_id << XEMACPS_PHYMNTNC_PHYAD_SHIFT_MASK);
@@ -636,6 +642,8 @@ static int xemacps_mdio_write(struct mii_bus *bus, int mii_id, int phyreg,
 		ipisr = xemacps_read(lp->baseaddr, XEMACPS_NWSR_OFFSET);
 	} while ((ipisr & XEMACPS_NWSR_MDIOIDLE_MASK) == 0);
 
+	pm_runtime_put(&lp->pdev->dev);
+
 	return 0;
 }
 
-- 
1.7.5.4

