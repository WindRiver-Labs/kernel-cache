From 5a8a308a420b1ed950fc4dc0c367766b9ed1f456 Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Thu, 12 Jun 2014 12:14:36 -0700
Subject: [PATCH 409/509] net: xemacps: Make sure device is active when MDIO
 bus is accessed

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit adfbee46ed0fcadcb4b946f66d557a49f4791f03

Due to runtime PM it could happen that the GEM was runtime suspended,
having its clock disabled, but still MDIO access could happen. Those
require the GEM registers to be accessible, which requires the clocks to
be enabled.
Add runtime_pm_(get|put)() calls in the MDIO access path to ensure the
GEM clocks are enabled when the MDIO bus is accesses.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |    8 ++++++++
 1 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index b9bd313..e91f935 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -582,6 +582,8 @@ static int xemacps_mdio_read(struct mii_bus *bus, int mii_id, int phyreg)
 	int value;
 	volatile u32 ipisr;
 
+	pm_runtime_get_sync(&lp->pdev->dev);
+
 	regval  = XEMACPS_PHYMNTNC_OP_MASK;
 	regval |= XEMACPS_PHYMNTNC_OP_R_MASK;
 	regval |= (mii_id << XEMACPS_PHYMNTNC_PHYAD_SHIFT_MASK);
@@ -598,6 +600,8 @@ static int xemacps_mdio_read(struct mii_bus *bus, int mii_id, int phyreg)
 	value = xemacps_read(lp->baseaddr, XEMACPS_PHYMNTNC_OFFSET) &
 			XEMACPS_PHYMNTNC_DATA_MASK;
 
+	pm_runtime_put(&lp->pdev->dev);
+
 	return value;
 }
 
@@ -621,6 +625,8 @@ static int xemacps_mdio_write(struct mii_bus *bus, int mii_id, int phyreg,
 	u32 regval;
 	volatile u32 ipisr;
 
+	pm_runtime_get_sync(&lp->pdev->dev);
+
 	regval  = XEMACPS_PHYMNTNC_OP_MASK;
 	regval |= XEMACPS_PHYMNTNC_OP_W_MASK;
 	regval |= (mii_id << XEMACPS_PHYMNTNC_PHYAD_SHIFT_MASK);
@@ -635,6 +641,8 @@ static int xemacps_mdio_write(struct mii_bus *bus, int mii_id, int phyreg,
 		ipisr = xemacps_read(lp->baseaddr, XEMACPS_NWSR_OFFSET);
 	} while ((ipisr & XEMACPS_NWSR_MDIOIDLE_MASK) == 0);
 
+	pm_runtime_put(&lp->pdev->dev);
+
 	return 0;
 }
 
-- 
1.7.5.4

