From a6b9877378a80857129abce17368fb366c389023 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Mon, 5 May 2014 19:52:41 -0700
Subject: [PATCH 143/290] drm: xilinx: drv: Remove explicit call of destroy
 functions

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

drm_mode_config_cleanup() clean up drm objects, so no need to call destroy
functions in the error exit.

Signed-off-by: Hyun Kwon <hyunk@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit d4daef8dfa28cb6dffb72304708d87956217dd0e)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_drv.c | 16 +++++-----------
 1 file changed, 5 insertions(+), 11 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_drv.c b/drivers/gpu/drm/xilinx/xilinx_drm_drv.c
index 0cc0f96..af68c08 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_drv.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_drv.c
@@ -237,7 +237,7 @@ static int xilinx_drm_load(struct drm_device *drm, unsigned long flags)
 	if (IS_ERR(private->crtc)) {
 		DRM_DEBUG_DRIVER("failed to create xilinx crtc\n");
 		ret = PTR_ERR(private->crtc);
-		goto err_crtc;
+		goto err_out;
 	}
 
 	/* create a xilinx encoder */
@@ -245,7 +245,7 @@ static int xilinx_drm_load(struct drm_device *drm, unsigned long flags)
 	if (IS_ERR(private->encoder)) {
 		DRM_DEBUG_DRIVER("failed to create xilinx encoder\n");
 		ret = PTR_ERR(private->encoder);
-		goto err_encoder;
+		goto err_out;
 	}
 
 	/* create a xilinx connector */
@@ -253,13 +253,13 @@ static int xilinx_drm_load(struct drm_device *drm, unsigned long flags)
 	if (IS_ERR(private->connector)) {
 		DRM_DEBUG_DRIVER("failed to create xilinx connector\n");
 		ret = PTR_ERR(private->connector);
-		goto err_connector;
+		goto err_out;
 	}
 
 	ret = drm_vblank_init(drm, 1);
 	if (ret) {
 		dev_err(&pdev->dev, "failed to initialize vblank\n");
-		goto err_vblank;
+		goto err_out;
 	}
 
 	/* enable irq to enable vblank feature */
@@ -293,13 +293,7 @@ static int xilinx_drm_load(struct drm_device *drm, unsigned long flags)
 
 err_fbdev:
 	drm_vblank_cleanup(drm);
-err_vblank:
-	xilinx_drm_connector_destroy(private->connector);
-err_connector:
-	xilinx_drm_encoder_destroy(private->encoder);
-err_encoder:
-	xilinx_drm_crtc_destroy(private->crtc);
-err_crtc:
+err_out:
 	drm_mode_config_cleanup(drm);
 	if (ret == -EPROBE_DEFER)
 		DRM_INFO("load() is defered & will be called again\n");
-- 
2.0.2

