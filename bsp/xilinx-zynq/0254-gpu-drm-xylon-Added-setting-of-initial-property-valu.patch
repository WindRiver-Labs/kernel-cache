From 16a91fc867f56ab604b428c13445b6cc9a3917a4 Mon Sep 17 00:00:00 2001
From: Davor Joja <davorjoja@logicbricks.com>
Date: Mon, 23 Jun 2014 19:58:27 +0200
Subject: [PATCH 254/290] gpu: drm: xylon: Added setting of initial property
 values

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Added functionality to set initial property values regarding to hw
configuration.

Signed-off-by: Davor Joja <davorjoja@logicbricks.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
(cherry picked from commit d5656ade65907d856f88781af86d1617d704b68c)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/xylon/xylon_crtc.c           | 28 ++++++++++++++++++++++++++++
 drivers/gpu/drm/xylon/xylon_logicvc.c        | 24 ++++++++++++++++++++++++
 drivers/gpu/drm/xylon/xylon_logicvc_helper.h |  6 +++++-
 drivers/gpu/drm/xylon/xylon_plane.c          | 21 +++++++++++++++++++++
 4 files changed, 78 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/xylon/xylon_crtc.c b/drivers/gpu/drm/xylon/xylon_crtc.c
index 30a4334..2a6e113 100644
--- a/drivers/gpu/drm/xylon/xylon_crtc.c
+++ b/drivers/gpu/drm/xylon/xylon_crtc.c
@@ -81,6 +81,7 @@ static int xylon_drm_crtc_clk_set(struct xylon_drm_crtc *crtc)
 
 static void xylon_drm_crtc_dpms(struct drm_crtc *base_crtc, int dpms)
 {
+	struct drm_mode_object *obj = &base_crtc->base;
 	struct xylon_drm_crtc *crtc = to_xylon_crtc(base_crtc);
 
 	if (crtc->dpms == dpms)
@@ -92,9 +93,11 @@ static void xylon_drm_crtc_dpms(struct drm_crtc *base_crtc, int dpms)
 	case DRM_MODE_DPMS_ON:
 	case DRM_MODE_DPMS_STANDBY:
 		xylon_drm_plane_dpms(crtc->private, dpms);
+		drm_object_property_set_value(obj, crtc->properties.control, 1);
 		break;
 	default:
 		xylon_cvc_disable(crtc->cvc);
+		drm_object_property_set_value(obj, crtc->properties.control, 0);
 		break;
 	}
 }
@@ -540,6 +543,29 @@ static int xylon_drm_crtc_create_properties(struct drm_crtc *base_crtc)
 	return 0;
 }
 
+static void xylon_drm_crtc_properties_initial_value(struct drm_crtc *base_crtc)
+{
+	struct drm_mode_object *obj = &base_crtc->base;
+	struct xylon_drm_crtc *crtc = to_xylon_crtc(base_crtc);
+	struct xylon_drm_crtc_properties *props = &crtc->properties;
+	bool val;
+
+	val = xylon_cvc_get_info(crtc->cvc,
+				 LOGICVC_INFO_LAYER_COLOR_TRANSPARENCY,
+				 crtc->private_id);
+	drm_object_property_set_value(obj, props->color_transparency, val);
+
+	val = xylon_cvc_get_info(crtc->cvc, LOGICVC_INFO_LAYER_UPDATE, 0);
+	drm_object_property_set_value(obj, props->layer_update, val);
+
+	val = xylon_cvc_get_info(crtc->cvc, LOGICVC_INFO_PIXEL_DATA_INVERT, 0);
+	drm_object_property_set_value(obj, props->pixel_data_polarity, val);
+
+	val = xylon_cvc_get_info(crtc->cvc,
+				 LOGICVC_INFO_PIXEL_DATA_TRIGGER_INVERT, 0);
+	drm_object_property_set_value(obj, props->pixel_data_trigger, val);
+}
+
 struct drm_crtc *xylon_drm_crtc_create(struct drm_device *dev)
 {
 	struct device_node *sub_node;
@@ -610,6 +636,8 @@ struct drm_crtc *xylon_drm_crtc_create(struct drm_device *dev)
 		goto err_out;
 	}
 
+	xylon_drm_crtc_properties_initial_value(&crtc->base);
+
 	return &crtc->base;
 
 err_out:
diff --git a/drivers/gpu/drm/xylon/xylon_logicvc.c b/drivers/gpu/drm/xylon/xylon_logicvc.c
index 0b52209..4476eba 100644
--- a/drivers/gpu/drm/xylon/xylon_logicvc.c
+++ b/drivers/gpu/drm/xylon/xylon_logicvc.c
@@ -855,6 +855,9 @@ static void xylon_cvc_init_ctrl(struct device_node *dn, u32 *ctrl)
 bool xylon_cvc_get_info(struct xylon_cvc *cvc, enum xylon_cvc_info info,
 			unsigned int param)
 {
+	struct xylon_cvc_layer_data *layer_data;
+	struct xylon_cvc_register_access *reg_access;
+
 	switch (info) {
 	case LOGICVC_INFO_BACKGROUND_LAYER:
 		if (cvc->flags & LOGICVC_FLAGS_BACKGROUND_LAYER)
@@ -864,6 +867,27 @@ bool xylon_cvc_get_info(struct xylon_cvc *cvc, enum xylon_cvc_info info,
 		if (param == (cvc->layers - 1))
 			return true;
 		break;
+	case LOGICVC_INFO_LAYER_COLOR_TRANSPARENCY:
+		layer_data = cvc->layer_data[param];
+		reg_access = &cvc->reg_access;
+		if (!(reg_access->xylon_cvc_get_reg_val(layer_data->base,
+							LOGICVC_LAYER_CTRL_ROFF,
+							layer_data) &
+		    LOGICVC_LAYER_CTRL_COLOR_TRANSPARENCY_BIT))
+			return true;
+		break;
+	case LOGICVC_INFO_LAYER_UPDATE:
+		if (!(cvc->ctrl & LOGICVC_CTRL_DISABLE_LAYER_UPDATE))
+			return true;
+		break;
+	case LOGICVC_INFO_PIXEL_DATA_INVERT:
+		if (cvc->ctrl & LOGICVC_CTRL_PIXEL_DATA_INVERT)
+			return true;
+		break;
+	case LOGICVC_INFO_PIXEL_DATA_TRIGGER_INVERT:
+		if (cvc->ctrl & LOGICVC_CTRL_PIXEL_DATA_TRIGGER_INVERT)
+			return true;
+		break;
 	}
 
 	return false;
diff --git a/drivers/gpu/drm/xylon/xylon_logicvc_helper.h b/drivers/gpu/drm/xylon/xylon_logicvc_helper.h
index ad07971..a050e35 100644
--- a/drivers/gpu/drm/xylon/xylon_logicvc_helper.h
+++ b/drivers/gpu/drm/xylon/xylon_logicvc_helper.h
@@ -21,7 +21,11 @@
 
 enum xylon_cvc_info {
 	LOGICVC_INFO_BACKGROUND_LAYER,
-	LOGICVC_INFO_LAST_LAYER
+	LOGICVC_INFO_LAST_LAYER,
+	LOGICVC_INFO_LAYER_COLOR_TRANSPARENCY,
+	LOGICVC_INFO_LAYER_UPDATE,
+	LOGICVC_INFO_PIXEL_DATA_INVERT,
+	LOGICVC_INFO_PIXEL_DATA_TRIGGER_INVERT
 };
 
 struct xylon_cvc;
diff --git a/drivers/gpu/drm/xylon/xylon_plane.c b/drivers/gpu/drm/xylon/xylon_plane.c
index dd650f6..66c7cf1 100644
--- a/drivers/gpu/drm/xylon/xylon_plane.c
+++ b/drivers/gpu/drm/xylon/xylon_plane.c
@@ -78,15 +78,20 @@ xylon_drm_plane_set_parameters(struct xylon_drm_plane *plane,
 
 void xylon_drm_plane_dpms(struct drm_plane *base_plane, int dpms)
 {
+	struct drm_mode_object *obj = &base_plane->base;
 	struct xylon_drm_plane *plane = to_xylon_plane(base_plane);
 	struct xylon_drm_plane_manager *manager = plane->manager;
 
 	switch (dpms) {
 	case DRM_MODE_DPMS_ON:
 		xylon_cvc_layer_enable(manager->cvc, plane->id);
+		drm_object_property_set_value(obj, plane->properties.control,
+					      1);
 		break;
 	default:
 		xylon_cvc_layer_disable(manager->cvc, plane->id);
+		drm_object_property_set_value(obj, plane->properties.control,
+					      0);
 		break;
 	}
 }
@@ -298,6 +303,20 @@ static int xylon_drm_plane_create_properties(struct drm_plane *base_plane)
 	return 0;
 }
 
+static void
+xylon_drm_plane_properties_initial_value(struct drm_plane *base_plane)
+{
+	struct drm_mode_object *obj = &base_plane->base;
+	struct xylon_drm_plane *plane = to_xylon_plane(base_plane);
+	struct xylon_drm_plane_properties *props = &plane->properties;
+	bool val;
+
+	val = xylon_cvc_get_info(plane->manager->cvc,
+				 LOGICVC_INFO_LAYER_COLOR_TRANSPARENCY,
+				 plane->id);
+	drm_object_property_set_value(obj, props->color_transparency, val);
+}
+
 struct drm_plane *
 xylon_drm_plane_create(struct xylon_drm_plane_manager *manager,
 		       unsigned int possible_crtcs, bool priv, int priv_id)
@@ -342,6 +361,8 @@ xylon_drm_plane_create(struct xylon_drm_plane_manager *manager,
 
 	xylon_drm_plane_create_properties(&plane->base);
 
+	xylon_drm_plane_properties_initial_value(&plane->base);
+
 	return &plane->base;
 
 err_init:
-- 
2.0.2

