From fedf951d1c501eecbbac9dd94aa3a2b989452907 Mon Sep 17 00:00:00 2001
From: SrikanthT <sthokal@xilinx.com>
Date: Thu, 5 Apr 2012 20:18:59 +0530
Subject: [PATCH 358/509] Xilinx: DMA: Identifies associated DMA device for a
 channel

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit f628e304e692cca6898dac4018aa6fadf708e74f

This patch will add the logic to know the DMA device a
channel belongs to. This will help the user to get the
channel from a particular device. A unique device-id is
generated from the device-tree which forms as a mask
for requesting a channel.

Signed-off-by: SrikanthT <sthokal@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/dma/xilinx_dma.c |   13 +++++++++++--
 1 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/dma/xilinx_dma.c b/drivers/dma/xilinx_dma.c
index 7797b60..567e183 100644
--- a/drivers/dma/xilinx_dma.c
+++ b/drivers/dma/xilinx_dma.c
@@ -121,6 +121,10 @@
 #define XILINX_DMA_RESET_LOOP            1000000
 #define XILINX_DMA_HALT_LOOP             1000000
 
+/* Device Id in the private structure
+ */
+#define XILINX_DMA_DEVICE_ID_SHIFT     28
+
 /* IO accessors
  */
 #define DMA_OUT(addr, val)  (iowrite32(val, addr))
@@ -1522,7 +1526,7 @@ static int __devinit xilinx_dma_chan_probe(struct xilinx_dma_device *xdev,
 	struct xilinx_dma_chan *chan;
 	int err;
 	int *value;
-	u32 width = 0;
+	u32 width = 0, device_id = 0;
 
 	/* alloc channel */
 	chan = kzalloc(sizeof(*chan), GFP_KERNEL);
@@ -1565,6 +1569,10 @@ static int __devinit xilinx_dma_chan_probe(struct xilinx_dma_device *xdev,
 		chan->feature |= width - 1;
 	}
 
+	value = (int *)of_get_property(node, "xlnx,device-id", NULL);
+	if (value)
+		device_id = be32_to_cpup(value);
+
 	if (feature & XILINX_DMA_IP_CDMA) {
 		chan->direction = DMA_BIDIRECTIONAL;
 		chan->start_transfer = xilinx_cdma_start_transfer;
@@ -1649,7 +1657,8 @@ static int __devinit xilinx_dma_chan_probe(struct xilinx_dma_device *xdev,
 	 * Can change it to be a structure to have more matching information
 	 */
 	chan->private = (chan->direction & 0xFF) |
-		(chan->feature & XILINX_DMA_IP_MASK);
+		(chan->feature & XILINX_DMA_IP_MASK) |
+		(device_id << XILINX_DMA_DEVICE_ID_SHIFT);
 	chan->common.private = (void *)&(chan->private);
 
 	if (!chan->has_DRE)
-- 
1.7.5.4

