From e729c09f52c60b73dc85ea9c8ab8d8d32685fda1 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 4 Mar 2015 15:25:06 +0800
Subject: [PATCH 1/3] usb: zynq-dr-of: PHY reset during probe

The reference commit comes from:
https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 793220b3aaa17a954ec3ad49ed3ddb46f6019acf

Pulse the USB ULPI phy reset pin before trying to talk to the phy.
This seems to fix the occasional USB problems that were observed
on some boards.

Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
Singed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/usb/host/zynq-dr-of.c |   24 ++++++++++++++++++++++++
 1 files changed, 24 insertions(+), 0 deletions(-)

diff --git a/drivers/usb/host/zynq-dr-of.c b/drivers/usb/host/zynq-dr-of.c
index 3456910..eaec738 100644
--- a/drivers/usb/host/zynq-dr-of.c
+++ b/drivers/usb/host/zynq-dr-of.c
@@ -26,6 +26,8 @@
 #include <linux/string.h>
 #include <linux/clk.h>
 #include <linux/usb/ulpi.h>
+#include <linux/gpio.h>
+#include <linux/of_gpio.h>
 
 #include "ehci-zynq.h"
 
@@ -152,11 +154,33 @@ static int zynq_dr_of_probe(struct platform_device *ofdev)
 	static unsigned int idx;
 	struct resource *res;
 	int i, phy_init;
+	int reset_gpio;
 	int ret;
 
 	pdata = &data;
 	memset(pdata, 0, sizeof(data));
 
+	reset_gpio = of_get_named_gpio(np, "xlnx,phy-reset-gpio", 0);
+	if (gpio_is_valid(reset_gpio)) {
+		ret = devm_gpio_request_one(&ofdev->dev, reset_gpio,
+				GPIOF_INIT_LOW, "ulpi resetb");
+		if (ret) {
+			dev_err(&ofdev->dev, "Failed to request ULPI reset gpio: %d\n", ret);
+			return ret;
+		}
+		udelay(1); /* ULPI Datasheet specifies a 1us pulse width for reset */
+		if (of_property_read_bool(np, "xlnx,phy-reset-gpio-tristate"))
+			gpio_direction_input(reset_gpio);
+		else
+			gpio_set_value_cansleep(reset_gpio, 1);
+		udelay(1); /* ULPI will assert the DIR line, give it time to do so */
+	} else {
+		/* GPIO controller is not yet available, try again later. */
+		if (reset_gpio == -EPROBE_DEFER) {
+			return -EPROBE_DEFER;
+		}
+	}
+
 	res = platform_get_resource(ofdev, IORESOURCE_IRQ, 0);
 	if (IS_ERR(res)) {
 		dev_err(&ofdev->dev,
-- 
1.7.5.4

