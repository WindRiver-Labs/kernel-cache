From 03631c88e74def48adc30adf569139c2dbff9fc1 Mon Sep 17 00:00:00 2001
From: Punnaiah Choudary Kalluri <punnaiah.choudary.kalluri@xilinx.com>
Date: Fri, 4 Apr 2014 15:41:25 +0530
Subject: [PATCH 320/793] char: xdevcfg: Fix dma memory free with different
 size than allocated

CONFIG_DMA_API_DEBUG enabled kernel showed backtraces indicating that
"DMA-API: device driver frees DMA memory with different size [device
address=0x000000002f2a4000] [map size=4096 bytes] [unmap size=4048 bytes]"

Fixed by passing the correct size to dma_free_coherent.

Signed-off-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/char/xilinx_devcfg.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/char/xilinx_devcfg.c b/drivers/char/xilinx_devcfg.c
index 7c94859..bbe9d98 100644
--- a/drivers/char/xilinx_devcfg.c
+++ b/drivers/char/xilinx_devcfg.c
@@ -242,7 +242,7 @@ xdevcfg_write(struct file *file, const char __user *buf, size_t count,
 	char *kbuf;
 	int status;
 	unsigned long timeout;
-	u32 intr_reg;
+	u32 intr_reg, dma_len;
 	dma_addr_t dma_addr;
 	u32 transfer_length = 0;
 	struct xdevcfg_drvdata *drvdata = file->private_data;
@@ -258,8 +258,8 @@ xdevcfg_write(struct file *file, const char __user *buf, size_t count,
 	if (status)
 		goto err_clk;
 
-	kbuf = dma_alloc_coherent(drvdata->dev, count + drvdata->residue_len,
-				  &dma_addr, GFP_KERNEL);
+	dma_len = count + drvdata->residue_len;
+	kbuf = dma_alloc_coherent(drvdata->dev, dma_len, &dma_addr, GFP_KERNEL);
 	if (!kbuf) {
 		status = -ENOMEM;
 		goto err_unlock;
@@ -372,7 +372,7 @@ xdevcfg_write(struct file *file, const char __user *buf, size_t count,
 	status = user_count;
 
 error:
-	dma_free_coherent(drvdata->dev, count, kbuf, dma_addr);
+	dma_free_coherent(drvdata->dev, dma_len, kbuf, dma_addr);
 err_unlock:
 	mutex_unlock(&drvdata->sem);
 err_clk:
-- 
1.7.5.4

