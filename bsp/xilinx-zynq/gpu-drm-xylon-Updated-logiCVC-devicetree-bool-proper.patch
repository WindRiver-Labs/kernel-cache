From ce220e7a5ad89ecbecf1321c0b581ddac58ba620 Mon Sep 17 00:00:00 2001
From: Davor Joja <davorjoja@logicbricks.com>
Date: Wed, 10 Dec 2014 10:23:59 +0100
Subject: [PATCH 178/456] gpu: drm: xylon: Updated logiCVC devicetree bool
 properties

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Removed "is-" string from the beginning of logiCVC devicetree bool properties.

Signed-off-by: Davor Joja <davorjoja@logicbricks.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Tested-by: Radhey Shyam Pandey <radheys@xilinx.com>
Tested-by: Christian Kohn <christian.kohn@xilinx.com>
(cherry picked from commit 7b042ef9ea5cc359a22110c75342f8e28c9cdff1)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../devicetree/bindings/drm/xylon/logicvc.txt      |   20 ++++++++++----------
 drivers/gpu/drm/xylon/xylon_logicvc.c              |   12 ++++++------
 2 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/Documentation/devicetree/bindings/drm/xylon/logicvc.txt b/Documentation/devicetree/bindings/drm/xylon/logicvc.txt
index 9212bf0..ff18ecf 100644
--- a/Documentation/devicetree/bindings/drm/xylon/logicvc.txt
+++ b/Documentation/devicetree/bindings/drm/xylon/logicvc.txt
@@ -39,20 +39,20 @@ Optional properties:
       background color register must be written with RGB565 value.
       If set to "yuv", background color register must be written with XYUV8888
       value.
- - is-hsync-active-low: horizontal synchronization pulse polarity
+ - hsync-active-low: horizontal synchronization pulse polarity
       If omitted, generated horizontal synchronization pulse polarity is logic
       high "H".
- - is-vsync-active-low: vertical synchronization pulse polarity
+ - vsync-active-low: vertical synchronization pulse polarity
       If omitted, generated vertical synchronization pulse polarity is logic
       high "H".
- - is-pixel-data-invert: output pixel data polarity
+ - pixel-data-invert: output pixel data polarity
       If omitted, logiCVC outputs pixel data at default interface polarity.
- - is-pixel-data-output-trigger-high: output pixel data trigger polarity
+ - pixel-data-output-trigger-high: output pixel data trigger polarity
       If omitted, logiCVC outputs pixel data on falling edge of pixel clock.
- - is-readable-regs: all logiCVC registers are available for reading
+ - readable-regs: all logiCVC registers are available for reading
       If omitted, only Interrupt Status, Power Control and IP Version registers
       are available for reading.
- - is-size-position: logiCVC functionality for controlling on screen layer size
+ - size-position: logiCVC functionality for controlling on screen layer size
       and position is available
       If omitted, functionality is not available.
  - address: layer video memory address for layer_N where N is layer ID in
@@ -73,10 +73,10 @@ Example:
 		interrupts = <0 59 4>;
 		background-layer-bits-per-pixel = <32>;
 		background-layer-type = "rgb";
-		is-hsync-active-low;
-		is-vsync-active-low;
-		is-readable-regs;
-		is-size-position;
+		hsync-active-low;
+		vsync-active-low;
+		readable-regs;
+		size-position;
 		pixel-stride = <2048>;
 		layer_0 {
 			address = <0x30000000>;
diff --git a/drivers/gpu/drm/xylon/xylon_logicvc.c b/drivers/gpu/drm/xylon/xylon_logicvc.c
index aa233cb..1cf18e0 100644
--- a/drivers/gpu/drm/xylon/xylon_logicvc.c
+++ b/drivers/gpu/drm/xylon/xylon_logicvc.c
@@ -725,12 +725,12 @@ static int xylon_parse_hw_info(struct device_node *dn, struct xylon_cvc *cvc)
 		}
 	}
 
-	if (of_property_read_bool(dn, "is-readable-regs"))
+	if (of_property_read_bool(dn, "readable-regs"))
 		cvc->flags |= LOGICVC_FLAGS_READABLE_REGS;
 	else
 		DRM_INFO("logicvc registers not readable\n");
 
-	if (of_property_read_bool(dn, "is-size-position"))
+	if (of_property_read_bool(dn, "size-position"))
 		cvc->flags |= LOGICVC_FLAGS_SIZE_POSITION;
 	else
 		DRM_INFO("logicvc size-position disabled\n");
@@ -825,13 +825,13 @@ static void xylon_cvc_init_ctrl(struct device_node *dn, u32 *ctrl)
 	u32 ctrl_reg = (LOGICVC_CTRL_HSYNC | LOGICVC_CTRL_VSYNC |
 			LOGICVC_CTRL_DATA_ENABLE);
 
-	if (of_property_read_bool(dn, "is-hsync-active-low"))
+	if (of_property_read_bool(dn, "hsync-active-low"))
 		ctrl_reg |= LOGICVC_CTRL_HSYNC_INVERT;
-	if (of_property_read_bool(dn, "is-vsync-active-low"))
+	if (of_property_read_bool(dn, "vsync-active-low"))
 		ctrl_reg |= LOGICVC_CTRL_HSYNC_INVERT;
-	if (of_property_read_bool(dn, "is-pixel-data-invert"))
+	if (of_property_read_bool(dn, "pixel-data-invert"))
 		ctrl_reg |= LOGICVC_CTRL_PIXEL_DATA_INVERT;
-	if (of_property_read_bool(dn, "is-pixel-data-output-trigger-high"))
+	if (of_property_read_bool(dn, "pixel-data-output-trigger-high"))
 		ctrl_reg |= LOGICVC_CTRL_PIXEL_DATA_TRIGGER_INVERT;
 
 	*ctrl = ctrl_reg;
-- 
1.7.5.4

