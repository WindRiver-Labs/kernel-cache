From 0f8b2d8c96d962e7558b1dea4bf62f7a33167199 Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Thu, 27 Mar 2014 15:10:31 +0530
Subject: [PATCH 489/509] GPIO: zynq: Remove spinlocks

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 0a2c60df728d6640a028541e8d5b5158616d9230

Remove spinlocks as they are not required.

Signed-off-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/gpio/gpio-zynq.c |    7 -------
 1 files changed, 0 insertions(+), 7 deletions(-)

diff --git a/drivers/gpio/gpio-zynq.c b/drivers/gpio/gpio-zynq.c
index ba27143..1468754 100644
--- a/drivers/gpio/gpio-zynq.c
+++ b/drivers/gpio/gpio-zynq.c
@@ -93,7 +93,6 @@ static unsigned int zynq_gpio_pin_table[] = {
  * @irq:	irq associated with the controller
  * @irq_base:	base of IRQ number for interrupt
  * @clk:	clock resource for this controller
- * @gpio_lock:	lock used for synchronization
  */
 struct zynq_gpio {
 	struct gpio_chip chip;
@@ -101,7 +100,6 @@ struct zynq_gpio {
 	unsigned int irq;
 	unsigned int irq_base;
 	struct clk *clk;
-	spinlock_t gpio_lock;
 };
 
 /**
@@ -164,7 +162,6 @@ static int zynq_gpio_get_value(struct gpio_chip *chip, unsigned int pin)
 static void zynq_gpio_set_value(struct gpio_chip *chip, unsigned int pin,
 				int state)
 {
-	unsigned long flags;
 	unsigned int reg_offset, bank_num, bank_pin_num;
 	struct zynq_gpio *gpio = container_of(chip, struct zynq_gpio, chip);
 
@@ -187,9 +184,7 @@ static void zynq_gpio_set_value(struct gpio_chip *chip, unsigned int pin,
 	state = ~(1 << (bank_pin_num + ZYNQ_GPIO_MID_PIN_NUM)) &
 		((state << bank_pin_num) | ZYNQ_GPIO_UPPER_MASK);
 
-	spin_lock_irqsave(&gpio->gpio_lock, flags);
 	zynq_gpio_writereg(gpio->base_addr + reg_offset, state);
-	spin_unlock_irqrestore(&gpio->gpio_lock, flags);
 }
 
 /**
@@ -579,8 +574,6 @@ static int zynq_gpio_probe(struct platform_device *pdev)
 	if (!gpio)
 		return -ENOMEM;
 
-	spin_lock_init(&gpio->gpio_lock);
-
 	platform_set_drvdata(pdev, gpio);
 
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-- 
1.7.5.4

