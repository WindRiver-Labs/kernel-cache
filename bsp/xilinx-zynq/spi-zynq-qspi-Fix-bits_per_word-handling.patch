From da264b83c3166b08d4b2f51c7f573fdc0491a19c Mon Sep 17 00:00:00 2001
From: Thomas Betker <thomas.betker@rohde-schwarz.com>
Date: Mon, 10 Mar 2014 18:46:18 +0530
Subject: [PATCH 257/793] spi: zynq-qspi: Fix bits_per_word handling

The Zynq QSPI driver supports only 8-bit transfers
(which is exactly what is required by flash drivers),
not 32-bit transfers.Note that bits_per_word does not refer to
the width of the TXD and RXD registers, but to the alignment
and byte order of tx_buf and rx_buf;see the comment for
'struct spi_transfer' in include/linux/spi/spi.h.
*   Check qspi->bits_per_word in xqspips_setup().
*   Check transfer->bits_per_word in xqspips_work_queue().
*   Remove the check in xqspips_transfer().

Signed-off-by: Thomas Betker <thomas.betker@rohde-schwarz.com>
Reviewed-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/spi/spi-zynq-qspi.c |   17 +++++++++--------
 1 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/drivers/spi/spi-zynq-qspi.c b/drivers/spi/spi-zynq-qspi.c
index 68a4a43..7ddbc51 100644
--- a/drivers/spi/spi-zynq-qspi.c
+++ b/drivers/spi/spi-zynq-qspi.c
@@ -521,8 +521,11 @@ static int zynq_qspi_setup(struct spi_device *qspi)
 	if (!qspi->max_speed_hz)
 		return -EINVAL;
 
-	if (!qspi->bits_per_word)
-		qspi->bits_per_word = 32;
+	if (qspi->bits_per_word && qspi->bits_per_word != 8) {
+		dev_err(&qspi->dev, "%s, unsupported bits per word %u\n",
+			__func__, qspi->bits_per_word);
+		return -EINVAL;
+	}
 
 	return zynq_qspi_setup_transfer(qspi, NULL);
 }
@@ -777,7 +780,7 @@ static void zynq_qspi_work_queue(struct work_struct *work)
 #endif
 
 		list_for_each_entry(transfer, &msg->transfers, transfer_list) {
-			if (transfer->bits_per_word || transfer->speed_hz) {
+			if (transfer->speed_hz) {
 				status = zynq_qspi_setup_transfer(qspi,
 								  transfer);
 				if (status < 0)
@@ -864,11 +867,9 @@ static int zynq_qspi_transfer(struct spi_device *qspi,
 	list_for_each_entry(transfer, &message->transfers, transfer_list) {
 		if (!transfer->tx_buf && !transfer->rx_buf && transfer->len)
 			return -EINVAL;
-		/* QSPI controller supports only 32 bit transfers whereas higher
-		 * layer drivers request 8 bit transfers. Re-visit at a later
-		 * time */
-		/* if (bits_per_word != 32)
-			return -EINVAL; */
+		/* We only support 8-bit transfers */
+		if (transfer->bits_per_word && transfer->bits_per_word != 8)
+			return -EINVAL;
 	}
 
 	spin_lock_irqsave(&xqspi->trans_queue_lock, flags);
-- 
1.7.5.4

