From 58a4b511fd15f07fa1d6a9d0af0b4cebf6c0e73b Mon Sep 17 00:00:00 2001
From: Ranjit Waghmode <ranjit.waghmode@xilinx.com>
Date: Wed, 4 Nov 2015 16:03:33 +0530
Subject: [PATCH 298/299] qspi: mtd: fix dual parallel & stacked mode
 addressing issue

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

This patch makes sure that small size devices typically those
are less than 16 MB and are working in dual parallel mode
or in dual stacked mode will have 3 byte addressing mode.

Signed-off-by: Ranjit Waghmode <ranjit.waghmode@xilinx.com>
Reviewed-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit dd73df0cdb1078a52e071ebb65b0b36b955f3355)
---
 drivers/mtd/spi-nor/spi-nor.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 95ff0cd..7e168bd 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -1468,6 +1468,7 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 	struct mtd_info *mtd = nor->mtd;
 	struct device_node *np = dev->of_node;
 	struct device_node *np_spi;
+	uint64_t actual_size;
 	int ret;
 	int i;
 
@@ -1532,6 +1533,7 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 	mtd->size = info->sector_size * info->n_sectors;
 	mtd->_erase = spi_nor_erase;
 	mtd->_read = spi_nor_read_ext;
+	actual_size = mtd->size;
 
 	{
 #ifdef CONFIG_OF
@@ -1701,7 +1703,7 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 
 	if (info->addr_width)
 		nor->addr_width = info->addr_width;
-	else if (mtd->size > 0x1000000) {
+	else if (actual_size > 0x1000000) {
 #ifdef CONFIG_OF
 		np_spi = of_get_next_parent(np);
 		if (of_property_match_string(np_spi, "compatible",
-- 
2.0.2

