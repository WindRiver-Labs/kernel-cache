From 40286069d07017958196ad55e2b67c8853974d38 Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Fri, 28 Mar 2014 15:56:00 +0530
Subject: [PATCH 438/509] WDT: zynq: Change order of input parameters to
 write_reg

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 518b0f6ba180eaf85966157748c889f29755e14c

Change order of input parameters to zynq_wdt_write_reg to be
consistent with other xilinx drivers.

Signed-off-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/watchdog/zynq_wdt.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/watchdog/zynq_wdt.c b/drivers/watchdog/zynq_wdt.c
index 6659b90..78f7475 100644
--- a/drivers/watchdog/zynq_wdt.c
+++ b/drivers/watchdog/zynq_wdt.c
@@ -99,7 +99,7 @@ static struct watchdog_info zynq_wdt_info = {
 };
 
 /* Write access to Registers */
-#define zynq_wdt_writereg(val, offset) __raw_writel(val, (wdt->regs) + offset)
+#define zynq_wdt_writereg(offset, val) __raw_writel(val, (wdt->regs) + offset)
 
 /*************************Register Map**************************************/
 
@@ -138,8 +138,8 @@ static struct watchdog_info zynq_wdt_info = {
 static int zynq_wdt_stop(struct watchdog_device *wdd)
 {
 	spin_lock(&wdt->io_lock);
-	zynq_wdt_writereg((ZYNQ_WDT_ZMR_ZKEY_VAL & (~ZYNQ_WDT_ZMR_WDEN_MASK)),
-			 ZYNQ_WDT_ZMR_OFFSET);
+	zynq_wdt_writereg(ZYNQ_WDT_ZMR_OFFSET,
+			  (ZYNQ_WDT_ZMR_ZKEY_VAL & (~ZYNQ_WDT_ZMR_WDEN_MASK)));
 	spin_unlock(&wdt->io_lock);
 
 	return 0;
@@ -157,7 +157,7 @@ static int zynq_wdt_stop(struct watchdog_device *wdd)
 static int zynq_wdt_reload(struct watchdog_device *wdd)
 {
 	spin_lock(&wdt->io_lock);
-	zynq_wdt_writereg(ZYNQ_WDT_RESTART_KEY, ZYNQ_WDT_RESTART_OFFSET);
+	zynq_wdt_writereg(ZYNQ_WDT_RESTART_OFFSET, ZYNQ_WDT_RESTART_KEY);
 	spin_unlock(&wdt->io_lock);
 
 	return 0;
@@ -199,14 +199,14 @@ static int zynq_wdt_start(struct watchdog_device *wdd)
 		count = ZYNQ_WDT_COUNTER_MAX;
 
 	spin_lock(&wdt->io_lock);
-	zynq_wdt_writereg(ZYNQ_WDT_ZMR_ZKEY_VAL, ZYNQ_WDT_ZMR_OFFSET);
+	zynq_wdt_writereg(ZYNQ_WDT_ZMR_OFFSET, ZYNQ_WDT_ZMR_ZKEY_VAL);
 
 	/* Shift the count value to correct bit positions */
 	count = (count << 2) & ZYNQ_WDT_CCR_CRV_MASK;
 
 	/* 0x00920000 - Counter register key value. */
 	data = (count | ZYNQ_WDT_REGISTER_ACCESS_KEY | wdt->ctrl_clksel);
-	zynq_wdt_writereg(data, ZYNQ_WDT_CCR_OFFSET);
+	zynq_wdt_writereg(ZYNQ_WDT_CCR_OFFSET, data);
 	data = ZYNQ_WDT_ZMR_WDEN_MASK | ZYNQ_WDT_ZMR_RSTLEN_16 |
 			ZYNQ_WDT_ZMR_ZKEY_VAL;
 
@@ -218,9 +218,9 @@ static int zynq_wdt_start(struct watchdog_device *wdd)
 		data &= ~ZYNQ_WDT_ZMR_RSTEN_MASK;
 		data |= ZYNQ_WDT_ZMR_IRQEN_MASK;
 	}
-	zynq_wdt_writereg(data, ZYNQ_WDT_ZMR_OFFSET);
+	zynq_wdt_writereg(ZYNQ_WDT_ZMR_OFFSET, data);
 	spin_unlock(&wdt->io_lock);
-	zynq_wdt_writereg(ZYNQ_WDT_RESTART_KEY, ZYNQ_WDT_RESTART_OFFSET);
+	zynq_wdt_writereg(ZYNQ_WDT_RESTART_OFFSET, ZYNQ_WDT_RESTART_KEY);
 
 	return 0;
 }
-- 
1.7.5.4

