From 7181753bea339cb743206560d6c7421b66d947a1 Mon Sep 17 00:00:00 2001
From: zou cao <cao.zou@windriver.com>
Date: Fri, 25 Aug 2017 10:14:15 +0800
Subject: [PATCH 1/6] char: xdevcfg: replace strict_strtoul() with kstrtoul()

The usage of strict_strtoul() is not preferred, because
strict_strtoul() is obsolete. Thus, kstrtoul() should be
used.

Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/char/xilinx_devcfg.c |   22 +++++++++++-----------
 1 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/drivers/char/xilinx_devcfg.c b/drivers/char/xilinx_devcfg.c
index 6252e14..a7a05bb 100644
--- a/drivers/char/xilinx_devcfg.c
+++ b/drivers/char/xilinx_devcfg.c
@@ -600,7 +600,7 @@ static ssize_t xdevcfg_set_dap_en(struct device *dev,
 				XDCFG_CTRL_OFFSET);
 	spin_lock_irqsave(&drvdata->lock, flags);
 
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		goto err_unlock;
@@ -686,7 +686,7 @@ static ssize_t xdevcfg_set_dbgen(struct device *dev,
 	ctrl_reg_status = xdevcfg_readreg(drvdata->base_address +
 				XDCFG_CTRL_OFFSET);
 
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		goto err_clk;
@@ -776,7 +776,7 @@ static ssize_t xdevcfg_set_niden(struct device *dev,
 	ctrl_reg_status = xdevcfg_readreg(drvdata->base_address +
 				XDCFG_CTRL_OFFSET);
 
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		goto err_clk;
@@ -866,7 +866,7 @@ static ssize_t xdevcfg_set_spiden(struct device *dev,
 	ctrl_reg_status = xdevcfg_readreg(drvdata->base_address +
 				XDCFG_CTRL_OFFSET);
 
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		goto err_clk;
@@ -956,7 +956,7 @@ static ssize_t xdevcfg_set_spniden(struct device *dev,
 
 	ctrl_reg_status = xdevcfg_readreg(drvdata->base_address +
 				XDCFG_CTRL_OFFSET);
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		goto err_clk;
@@ -1046,7 +1046,7 @@ static ssize_t xdevcfg_set_seu(struct device *dev,
 	ctrl_reg_status = xdevcfg_readreg(drvdata->base_address +
 				XDCFG_CTRL_OFFSET);
 
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		goto err_clk;
@@ -1138,7 +1138,7 @@ static ssize_t xdevcfg_set_aes(struct device *dev,
 	ctrl_reg_status = xdevcfg_readreg(drvdata->base_address +
 				XDCFG_CTRL_OFFSET);
 
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status < 0)
 		goto err_clk;
@@ -1232,7 +1232,7 @@ static ssize_t xdevcfg_set_aes_en_lock(struct device *dev,
 	aes_en_lock_status = xdevcfg_readreg(drvdata->base_address +
 				XDCFG_LOCK_OFFSET);
 
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		goto err_clk;
@@ -1323,7 +1323,7 @@ static ssize_t xdevcfg_set_seu_lock(struct device *dev,
 	seu_lock_status = xdevcfg_readreg(drvdata->base_address +
 				XDCFG_LOCK_OFFSET);
 
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		goto err_clk;
@@ -1412,7 +1412,7 @@ static ssize_t xdevcfg_set_dbg_lock(struct device *dev,
 
 	lock_reg_status = xdevcfg_readreg(drvdata->base_address +
 				XDCFG_LOCK_OFFSET);
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		goto err_clk;
@@ -1529,7 +1529,7 @@ static ssize_t xdevcfg_set_is_partial_bitstream(struct device *dev,
 	ssize_t status;
 	struct xdevcfg_drvdata *drvdata = dev_get_drvdata(dev);
 
-	status = strict_strtoul(buf, 10, &mask_bit);
+	status = kstrtoul(buf, 10, &mask_bit);
 
 	if (status)
 		return status;
-- 
1.7.5.4

