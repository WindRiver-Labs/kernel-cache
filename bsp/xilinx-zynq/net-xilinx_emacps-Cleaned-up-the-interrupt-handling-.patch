From e763a57db539a760e385701ce331d91f7e8d1526 Mon Sep 17 00:00:00 2001
From: Anirudha Sarangi <anirudh@xilinx.com>
Date: Tue, 27 Nov 2012 16:02:19 +0530
Subject: [PATCH 063/793] net: xilinx_emacps: Cleaned up the interrupt
 handling routine

The existing interrupt routine was looking unnecessarily
complex with too many barriers and checks. This patch
addresses them.

Signed-off-by: Anirudha Sarangi <anirudh@xilinx.com>
Acked-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |   47 ++++++---------------------
 1 files changed, 10 insertions(+), 37 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 642fe18..d9ff152 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -1732,51 +1732,24 @@ static irqreturn_t xemacps_interrupt(int irq, void *dev_id)
 	struct net_local *lp = netdev_priv(ndev);
 	u32 regisr;
 
-	regisr = xemacps_read(lp->baseaddr, XEMACPS_ISR_OFFSET);
-	rmb();
-
-	if (unlikely(!regisr))
-		return IRQ_NONE;
-
 	spin_lock(&lp->lock);
+	regisr = xemacps_read(lp->baseaddr, XEMACPS_ISR_OFFSET);
+	xemacps_write(lp->baseaddr, XEMACPS_ISR_OFFSET, regisr);
 
 	while (regisr) {
-		/* acknowledge interrupt and clear it */
-		xemacps_write(lp->baseaddr, XEMACPS_ISR_OFFSET, regisr);
-
-		/* Log errors here. ISR status is cleared;
-		 * this must be recorded here.
-		 */
-		if (regisr & XEMACPS_IXR_RX_ERR_MASK)
-			lp->stats.rx_errors++;
-
-		/* RX interrupts */
-		if (regisr &
-		(XEMACPS_IXR_FRAMERX_MASK | XEMACPS_IXR_RX_ERR_MASK)) {
 
-			if (napi_schedule_prep(&lp->napi)) {
-				/* acknowledge RX interrupt and disable it,
-				 * napi will be the one processing it.  */
-				xemacps_write(lp->baseaddr,
-					XEMACPS_IDR_OFFSET,
+		if (regisr & (XEMACPS_IXR_TXCOMPL_MASK |
+				XEMACPS_IXR_TX_ERR_MASK)) {
+			xemacps_tx_poll(ndev);
+		} else {
+			xemacps_write(lp->baseaddr, XEMACPS_IDR_OFFSET,
 					(XEMACPS_IXR_FRAMERX_MASK |
-					 XEMACPS_IXR_RX_ERR_MASK));
-				dev_dbg(&lp->pdev->dev,
-					"schedule RX softirq\n");
-				__napi_schedule(&lp->napi);
-			}
+					XEMACPS_IXR_RX_ERR_MASK));
+			napi_schedule(&lp->napi);
 		}
 
-		/* TX interrupts */
-		if (regisr &
-		(XEMACPS_IXR_TXCOMPL_MASK | XEMACPS_IXR_TX_ERR_MASK))
-			xemacps_tx_poll(ndev);
-
-		/* acknowledge interrupt and clear it */
-		xemacps_write(lp->baseaddr, XEMACPS_ISR_OFFSET, regisr);
-		wmb();
 		regisr = xemacps_read(lp->baseaddr, XEMACPS_ISR_OFFSET);
-		rmb();
+		xemacps_write(lp->baseaddr, XEMACPS_ISR_OFFSET, regisr);
 	}
 	spin_unlock(&lp->lock);
 
-- 
1.7.5.4

