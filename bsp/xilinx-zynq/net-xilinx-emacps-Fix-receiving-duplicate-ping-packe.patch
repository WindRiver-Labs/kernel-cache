From e996e26ef8dd7c0b20d2462ba0196692248a1234 Mon Sep 17 00:00:00 2001
From: Punnaiah Choudary Kalluri <punnaiah.choudary.kalluri@xilinx.com>
Date: Mon, 3 Nov 2014 20:58:36 +0530
Subject: [PATCH 360/456] net: xilinx: emacps: Fix receiving duplicate ping
 packets in 10mbps mode

The ping turnaround time measured for emacps in 10mbps mode is around 300ms.
So, increased the general purpose timeout value to 500ms for avoiding the rx
engine reset that occurs after every timer timeout and if there is no update
in the rx stat counters.

Signed-off-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit eae4e837659d6f33b01e7b9063d9b44e26748656)
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |    8 ++++++--
 1 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index b1abdc1..a952f4e 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -549,6 +549,7 @@ struct net_local {
 	unsigned int enetnum;
 	unsigned int lastrxfrmscntr;
 	unsigned int has_mdio;
+	unsigned int gen_timer_timeout;
 #ifdef CONFIG_XILINX_PS_EMAC_HWTSTAMP
 	struct hwtstamp_config hwtstamp_config;
 	struct ptp_clock *ptp_clock;
@@ -759,6 +760,8 @@ static void xemacps_adjust_link(struct net_device *ndev)
 			} else if (phydev->speed == SPEED_10) {
 				xemacps_set_freq(lp->devclk, 2500000,
 						&lp->pdev->dev);
+				lp->gen_timer_timeout =
+					XEAMCPS_GEN_PURPOSE_TIMER_LOAD * 5;
 			} else {
 				dev_err(&lp->pdev->dev,
 					"%s: unknown PHY speed %d\n",
@@ -1931,7 +1934,7 @@ static void xemacps_gen_purpose_timerhandler(unsigned long data)
 	xemacps_update_stats(data);
 	xemacps_resetrx_for_no_rxdata(data);
 	mod_timer(&(lp->gen_purpose_timer),
-		jiffies + msecs_to_jiffies(XEAMCPS_GEN_PURPOSE_TIMER_LOAD));
+		jiffies + msecs_to_jiffies(lp->gen_timer_timeout));
 }
 
 /**
@@ -1986,10 +1989,11 @@ static int xemacps_open(struct net_device *ndev)
 		goto err_pm_put;
 	}
 
+	lp->gen_timer_timeout = XEAMCPS_GEN_PURPOSE_TIMER_LOAD;
 	setup_timer(&(lp->gen_purpose_timer), xemacps_gen_purpose_timerhandler,
 							(unsigned long)lp);
 	mod_timer(&(lp->gen_purpose_timer),
-		jiffies + msecs_to_jiffies(XEAMCPS_GEN_PURPOSE_TIMER_LOAD));
+		jiffies + msecs_to_jiffies(lp->gen_timer_timeout));
 
 	netif_carrier_on(ndev);
 	netif_start_queue(ndev);
-- 
1.7.5.4

