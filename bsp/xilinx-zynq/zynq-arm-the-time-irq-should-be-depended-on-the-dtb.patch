From c0cdf06bdcf71d865702d5b40804d0b51482c476 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Fri, 26 Apr 2013 16:36:44 +0800
Subject: [PATCH 11/13] zynq: arm: the time irq should be depended on the dtb

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-zynq/timer.c |   12 +++++++-----
 1 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-zynq/timer.c b/arch/arm/mach-zynq/timer.c
index 5d3e88e..eea8bdc 100644
--- a/arch/arm/mach-zynq/timer.c
+++ b/arch/arm/mach-zynq/timer.c
@@ -52,7 +52,6 @@
 #define XTTCPSS_CLOCKSOURCE	0	/* Timer 1 as a generic timekeeping */
 #define XTTCPSS_CLOCKEVENT	1	/* Timer 2 as a clock event */
 
-#define XTTCPCC_EVENT_TIMER_IRQ		(IRQ_TIMERCOUNTER0 + 1)
 /*
  * Timer Register Offset Definitions of Timer 1, Increment base address by 4
  * and use same offsets for Timer 2
@@ -163,7 +162,7 @@ static struct irqaction event_timer_irq = {
  * Initialize the hardware to start the clock source, get the clock
  * event timer ready to use, and hook up the interrupt.
  **/
-static void __init xttcpss_timer_hardware_init(void)
+static void __init xttcpss_timer_hardware_init(unsigned int irq)
 {
 	/* Setup the clock source counter to be an incrementing counter
 	 * with no interrupt and it rolls over at 0xFFFF. Pre-scale
@@ -191,7 +190,7 @@ static void __init xttcpss_timer_hardware_init(void)
 
 	/* Setup IRQ the clock event timer */
 	event_timer_irq.dev_id = &timers[XTTCPSS_CLOCKEVENT];
-	setup_irq(XTTCPCC_EVENT_TIMER_IRQ, &event_timer_irq);
+	setup_irq(irq, &event_timer_irq);
 }
 
 /**
@@ -298,7 +297,7 @@ static struct clock_event_device xttcpss_clockevent = {
  **/
 void __init xttcpss_timer_init(void)
 {
-	u32 irq;
+	unsigned int irq;
 	struct device_node *timer = NULL;
 	void *prop1 = NULL;
 	void *prop2 = NULL;
@@ -370,7 +369,7 @@ void __init xttcpss_timer_init(void)
 	setup_sched_clock(zynq_read_sched_clock, 16,
 					timers[XTTCPSS_CLOCKSOURCE].frequency);
 
-	xttcpss_timer_hardware_init();
+	xttcpss_timer_hardware_init(irq);
 	clocksource_register_hz(&clocksource_xttcpss,
 				timers[XTTCPSS_CLOCKSOURCE].frequency);
 
@@ -390,5 +389,8 @@ void __init xttcpss_timer_init(void)
 	xttcpss_clockevent.cpumask = cpumask_of(0);
 	clockevents_register_device(&xttcpss_clockevent);
 
+	pr_info("%s #0 at %p, irq=%d\n", clocksource_xttcpss.name,
+							timer_baseaddr, irq);
+
 	zynq_twd_init();
 }
-- 
1.7.5.4

