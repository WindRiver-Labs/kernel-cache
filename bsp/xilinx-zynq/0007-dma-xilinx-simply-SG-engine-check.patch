From 11ee198c9e3a2c258aaa063779191b602d0a65b8 Mon Sep 17 00:00:00 2001
From: Kedareswara rao Appana <appana.durga.rao@xilinx.com>
Date: Wed, 3 Jun 2015 11:43:39 +0530
Subject: [PATCH 07/53] dma: xilinx: simply SG engine check

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

This patch simplifies the logic for
SG Engine check.

Signed-off-by: Kedareswara rao Appana <appanad@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit f2ad3adaa99b408cbcacd9c3d76e343af7021892)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/dma/xilinx/xilinx_axidma.c |   12 +++---------
 1 file changed, 3 insertions(+), 9 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_axidma.c b/drivers/dma/xilinx/xilinx_axidma.c
index 77c9100..a5952d6 100644
--- a/drivers/dma/xilinx/xilinx_axidma.c
+++ b/drivers/dma/xilinx/xilinx_axidma.c
@@ -141,6 +141,7 @@ struct xilinx_dma_device {
 	struct device *dev;
 	struct dma_device common;
 	struct xilinx_dma_chan *chan[XILINX_DMA_MAX_CHANS_PER_DEVICE];
+	bool has_sg;
 };
 
 #define to_xilinx_chan(chan) \
@@ -897,6 +898,7 @@ static int xilinx_dma_chan_probe(struct xilinx_dma_device *xdev,
 		return -ENOMEM;
 
 	chan->max_len = XILINX_DMA_MAX_TRANS_LEN;
+	chan->has_sg = xdev->has_sg;
 	chan->config.coalesc = 0x01;
 
 	chan->has_dre = of_property_read_bool(node, "xlnx,include-dre");
@@ -988,8 +990,6 @@ static int xilinx_dma_probe(struct platform_device *pdev)
 	struct device_node *child, *node;
 	struct resource *res;
 	int ret;
-	bool has_sg;
-	unsigned int i;
 
 	node = pdev->dev.of_node;
 
@@ -1012,7 +1012,7 @@ static int xilinx_dma_probe(struct platform_device *pdev)
 		return PTR_ERR(xdev->regs);
 
 	/* Check if SG is enabled */
-	has_sg = of_property_read_bool(node, "xlnx,include-sg");
+	xdev->has_sg = of_property_read_bool(node, "xlnx,include-sg");
 
 	/* Axi DMA only do slave transfers */
 	dma_cap_set(DMA_SLAVE, xdev->common.cap_mask);
@@ -1037,12 +1037,6 @@ static int xilinx_dma_probe(struct platform_device *pdev)
 		}
 	}
 
-	for (i = 0; i < XILINX_DMA_MAX_CHANS_PER_DEVICE; ++i) {
-		if (xdev->chan[i]) {
-			xdev->chan[i]->has_sg = has_sg;
-		}
-	}
-
 	dma_async_device_register(&xdev->common);
 
 	ret = of_dma_controller_register(node, of_dma_xilinx_xlate, xdev);
-- 
1.7.10.4

