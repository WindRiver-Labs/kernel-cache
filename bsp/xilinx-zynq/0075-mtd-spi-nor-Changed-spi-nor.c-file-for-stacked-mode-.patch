From 27fc326031c998a5ef810eb4eab40dc13ed27076 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Thu, 15 Oct 2015 14:28:59 +0800
Subject: [PATCH 75/80] mtd: spi-nor: Changed spi-nor.c file for stacked mode
 support

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Most of them come from d859d345, which add stacked configuration support
to spi-nor

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/mtd/spi-nor/spi-nor.c | 51 ++++++++++++++++++++++++++++---------------
 1 file changed, 33 insertions(+), 18 deletions(-)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 4f3a04d..c4ddebd 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -322,7 +322,7 @@ static int write_ear(struct spi_nor *nor, u32 addr)
 	int ret;
 
 	/* Wait until finished previous write command. */
-	if (wait_till_ready(nor))
+	if (spi_nor_wait_till_ready(nor))
 		return 1;
 
 	if (nor->mtd->size <= (0x1000000) << nor->shift)
@@ -337,9 +337,9 @@ static int write_ear(struct spi_nor *nor, u32 addr)
 	if (nor->isstacked && (nor->mtd->size <= 0x2000000))
 		return 0;
 
-	if (JEDEC_MFR(nor->jedec_id) == CFI_MFR_AMD)
+	if (nor->jedec_id == CFI_MFR_AMD)
 		code = SPINOR_OP_BRWR;
-	if (JEDEC_MFR(nor->jedec_id) == CFI_MFR_ST) {
+	if (nor->jedec_id == CFI_MFR_ST) {
 		write_enable(nor);
 		code = SPINOR_OP_WREAR;
 	}
@@ -1213,8 +1213,7 @@ static int spi_nor_write(struct mtd_info *mtd, loff_t to, size_t len,
 
 			ret = spi_nor_wait_till_ready(nor);
 			if (ret)
-				goto write_err;
-
+				return ret;
 			write_enable(nor);
 
 			nor->write(nor, (to + i) >> nor->shift, page_size,
@@ -1224,6 +1223,7 @@ static int spi_nor_write(struct mtd_info *mtd, loff_t to, size_t len,
 
 	return 0;
 }
+
 static int spi_nor_write_ext(struct mtd_info *mtd, loff_t to, size_t len,
 			     size_t *retlen, const u_char *buf)
 {
@@ -1549,10 +1549,25 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 					nor->isstacked = 1;
 					nor->isparallel = 0;
 #else
-					/* single */
-					nor->shift = 0;
-					nor->isstacked = 0;
-					nor->isparallel = 0;
+					u32 is_stacked;
+					if (of_property_read_u32(np_spi,
+							"is-stacked",
+							&is_stacked) < 0) {
+						is_stacked = 0;
+					}
+					if (is_stacked) {
+						/* dual stacked */
+						nor->shift = 0;
+						mtd->size <<= 1;
+						info->n_sectors <<= 1;
+						nor->isstacked = 1;
+						nor->isparallel = 0;
+					} else {
+						/* single */
+						nor->shift = 0;
+						nor->isstacked = 0;
+						nor->isparallel = 0;
+					}
 #endif
 				}
 			}
@@ -1574,11 +1589,6 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 		mtd->_is_locked = spi_nor_is_locked;
 	}
 
-	if (nor->flash_lock && nor->flash_unlock) {
-		mtd->_lock = spi_nor_lock;
-		mtd->_unlock = spi_nor_unlock;
-	}
-
 	/* sst nor chips use AAI word program */
 	if (info->flags & SST_WRITE)
 		mtd->_write = sst_write;
@@ -1606,7 +1616,7 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 	if (info->flags & SPI_NOR_NO_ERASE)
 		mtd->flags |= MTD_NO_ERASE;
 
-	nor->jedec_id = info->jedec_id;
+	nor->jedec_id = info->id[0];
 	mtd->dev.parent = dev;
 	nor->page_size = info->page_size;
 	mtd->writebufsize = nor->page_size;
@@ -1636,7 +1646,7 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 		nor->flash_read = SPI_NOR_QUAD;
 	} else if (mode == SPI_NOR_QUAD &&
 		   info->flags & SPI_NOR_QUAD_IO_READ) {
-		ret = set_quad_mode(nor, info->jedec_id);
+		ret = set_quad_mode(nor, info);
 		if (ret) {
 			dev_err(dev, "quad IO mode not supported\n");
 			return ret;
@@ -1680,8 +1690,8 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 			int status;
 
 			nor->addr_width = 3;
-			set_4byte(nor, info->jedec_id, 0);
-			status = read_ear(nor, info->jedec_id);
+			set_4byte(nor, info, 0);
+			status = read_ear(nor, info);
 			if (status < 0)
 				dev_warn(dev, "failed to read ear reg\n");
 			else
@@ -1715,6 +1725,11 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 			mtd->erasesize = info->sector_size;
 		} else
 			set_4byte(nor, info, 1);
+			if (nor->isstacked) {
+				nor->spi->master->flags |= SPI_MASTER_U_PAGE;
+				set_4byte(nor, info, 1);
+				nor->spi->master->flags &= ~SPI_MASTER_U_PAGE;
+			}
 #ifdef CONFIG_OF
 		}
 #endif
-- 
2.0.2

