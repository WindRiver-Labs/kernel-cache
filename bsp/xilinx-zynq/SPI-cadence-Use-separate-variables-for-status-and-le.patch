From 0af24c4251c7e278cfe9c179bb8b553c583d0e32 Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Mon, 17 Mar 2014 13:16:55 +0530
Subject: [PATCH 097/509] SPI: cadence: Use separate variables for status and
 length

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 76fda21d400cbe5e1d5ce68222b294ec40e346c5

In transfer one message, use separate variables for transfer and length
in transfer_one_message.
The start_transfer function returns number of bytes transferred or an
error status (a negative value).
So use "length" to store the return of this function.

If length != transfer length, then
check if length > 0 - in which case status should be -EMSGSIZE.
if length < 0, then the function returned error status which should
be reflected in status variable.

If the length is equal to transfer length, above loop wont be entered;
the length should be reflected in msg length and status should be set
to 0 for success.

Signed-off-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/spi/spi-cadence.c |   12 +++++++-----
 1 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/spi/spi-cadence.c b/drivers/spi/spi-cadence.c
index c4a2e73..f47e9fa 100644
--- a/drivers/spi/spi-cadence.c
+++ b/drivers/spi/spi-cadence.c
@@ -485,7 +485,7 @@ static int cdns_transfer_one_message(struct spi_master *master,
 {
 	struct spi_device *spi;
 	unsigned cs_change = 1;
-	int status = 0;
+	int status = 0, length = 0;
 	struct spi_transfer *transfer;
 
 	spi = msg->spi;
@@ -510,14 +510,16 @@ static int cdns_transfer_one_message(struct spi_master *master,
 		}
 
 		if (transfer->len)
-			status = cdns_spi_start_transfer(spi, transfer);
+			length = cdns_spi_start_transfer(spi, transfer);
 
-		if (status != transfer->len) {
-			if (status > 0)
+		if (length != transfer->len) {
+			if (length > 0)
 				status = -EMSGSIZE;
+			else
+				status = length;
 			break;
 		}
-		msg->actual_length += status;
+		msg->actual_length += length;
 		status = 0;
 
 		if (transfer->delay_usecs)
-- 
1.7.5.4

