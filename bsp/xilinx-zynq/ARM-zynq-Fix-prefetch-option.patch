From 2d64cbefe8cddb21ea789f49ba35f3a35f993c17 Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Thu, 29 May 2014 11:20:20 -0700
Subject: [PATCH 384/793] ARM: zynq: Fix prefetch option

This fixes two issues with prefetching.

1. The FSBL enables prefetching, at least on one core. I.e. Linux should
disable the prefetching if the option is not selected in Linux.

2. Enabling prefetching was a late_initcall which is not part of the
hotplug path. When a CPU got unplugged the prefetching bits got not set
again.

This is fixed by modifying the code to set/clear the prefetching bits
depending on the kernel config and calling the code also from the
hotplug path.

Reported-by: Edward Yang <edwardy@xilinx.com>
Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 arch/arm/mach-zynq/common.c  |    1 +
 arch/arm/mach-zynq/common.h  |   18 ++++++++++++++++++
 arch/arm/mach-zynq/platsmp.c |    1 +
 3 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-zynq/common.c b/arch/arm/mach-zynq/common.c
index 069a3b6..e305acd 100644
--- a/arch/arm/mach-zynq/common.c
+++ b/arch/arm/mach-zynq/common.c
@@ -102,6 +102,7 @@ static void __init zynq_init_late(void)
 {
 	zynq_core_pm_init();
 	zynq_pm_late_init();
+	zynq_prefetch_init();
 }
 
 /**
diff --git a/arch/arm/mach-zynq/common.h b/arch/arm/mach-zynq/common.h
index 7a0b27a..b963e80 100644
--- a/arch/arm/mach-zynq/common.h
+++ b/arch/arm/mach-zynq/common.h
@@ -40,7 +40,25 @@ extern void zynq_slcr_init_postload_fpga(void);
 extern void __iomem *zynq_slcr_base;
 extern void __iomem *zynq_scu_base;
 
+static inline void zynq_prefetch_init(void)
+{
+	/*
+	 * Enable prefetching in aux control register. L2 prefetch must
+	 * only be enabled if the slave supports it (PL310 does)
+	 */
+	asm volatile ("mrc   p15, 0, r1, c1, c0, 1\n"
+#ifdef CONFIG_XILINX_PREFETCH
+		      "orr   r1, r1, #6\n"
+#else
+		      "bic   r1, r1, #6\n"
+#endif
+		      "mcr   p15, 0, r1, c1, c0, 1\n"
+		      : : : "r1");
+}
+
 void zynq_pm_late_init(void);
+extern unsigned int zynq_sys_suspend_sz;
+int zynq_sys_suspend(void __iomem *ddrc_base, void __iomem *slcr_base);
 
 static inline void zynq_core_pm_init(void)
 {
diff --git a/arch/arm/mach-zynq/platsmp.c b/arch/arm/mach-zynq/platsmp.c
index 7cd9865..37938d1 100644
--- a/arch/arm/mach-zynq/platsmp.c
+++ b/arch/arm/mach-zynq/platsmp.c
@@ -121,6 +121,7 @@ static void __init zynq_smp_prepare_cpus(unsigned int max_cpus)
 static void zynq_secondary_init(unsigned int cpu)
 {
 	zynq_core_pm_init();
+	zynq_prefetch_init();
 }
 
 #ifdef CONFIG_HOTPLUG_CPU
-- 
1.7.5.4

