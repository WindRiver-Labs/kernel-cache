From a5243c68b950599cb0880817b43921b028c1bb42 Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Thu, 29 May 2014 11:20:20 -0700
Subject: [PATCH 038/509] ARM: zynq: Fix prefetch option

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit d15dac0d8c63f4ea30581595d15be9dd5f19ccd7

This fixes two issues with prefetching.

1. The FSBL enables prefetching, at least on one core. I.e. Linux should
disable the prefetching if the option is not selected in Linux.

2. Enabling prefetching was a late_initcall which is not part of the
hotplug path. When a CPU got unplugged the prefetching bits got not set
again.

This is fixed by modifying the code to set/clear the prefetching bits
depending on the kernel config and calling the code also from the
hotplug path.

Reported-by: Edward Yang <edwardy@xilinx.com>
Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-zynq/common.c  |   20 +-------------------
 arch/arm/mach-zynq/common.h  |   16 ++++++++++++++++
 arch/arm/mach-zynq/platsmp.c |    9 +++++++++
 3 files changed, 26 insertions(+), 19 deletions(-)

diff --git a/arch/arm/mach-zynq/common.c b/arch/arm/mach-zynq/common.c
index 5564213..7ed2028 100644
--- a/arch/arm/mach-zynq/common.c
+++ b/arch/arm/mach-zynq/common.c
@@ -88,28 +88,10 @@ static int __init zynq_l2c_init(void)
 early_initcall(zynq_l2c_init);
 #endif
 
-
-#ifdef CONFIG_XILINX_PREFETCH
-static void __init zynq_data_prefetch_enable(void *info)
-{
-	/*
-	 * Enable prefetching in aux control register. L2 prefetch must
-	 * only be enabled if the slave supports it (PL310 does)
-	 */
-	asm volatile ("mrc   p15, 0, r1, c1, c0, 1\n"
-		      "orr   r1, r1, #6\n"
-		      "mcr   p15, 0, r1, c1, c0, 1\n"
-		      : : : "r1");
-}
-#endif
-
 static void __init zynq_init_late(void)
 {
 	zynq_pm_late_init();
-
-#ifdef CONFIG_XILINX_PREFETCH
-	on_each_cpu(zynq_data_prefetch_enable, NULL, 0);
-#endif
+	zynq_prefetch_init();
 }
 
 /**
diff --git a/arch/arm/mach-zynq/common.h b/arch/arm/mach-zynq/common.h
index 144a62b..6884472 100644
--- a/arch/arm/mach-zynq/common.h
+++ b/arch/arm/mach-zynq/common.h
@@ -53,4 +53,20 @@ static inline int zynq_pm_late_init(void)
 extern unsigned int zynq_sys_suspend_sz;
 int zynq_sys_suspend(void __iomem *ddrc_base, void __iomem *slcr_base);
 
+static inline void zynq_prefetch_init(void)
+{
+	/*
+	 * Enable prefetching in aux control register. L2 prefetch must
+	 * only be enabled if the slave supports it (PL310 does)
+	 */
+	asm volatile ("mrc   p15, 0, r1, c1, c0, 1\n"
+#ifdef CONFIG_XILINX_PREFETCH
+		      "orr   r1, r1, #6\n"
+#else
+		      "bic   r1, r1, #6\n"
+#endif
+		      "mcr   p15, 0, r1, c1, c0, 1\n"
+		      : : : "r1");
+}
+
 #endif
diff --git a/arch/arm/mach-zynq/platsmp.c b/arch/arm/mach-zynq/platsmp.c
index 87ea838..a9ac2b3 100644
--- a/arch/arm/mach-zynq/platsmp.c
+++ b/arch/arm/mach-zynq/platsmp.c
@@ -117,6 +117,14 @@ static void __init zynq_smp_prepare_cpus(unsigned int max_cpus)
 	scu_enable(zynq_scu_base);
 }
 
+/*
+ * This function is in the hotplug path. Don't move it into the init section!!
+ */
+static void zynq_secondary_init(unsigned int cpu)
+{
+	zynq_prefetch_init();
+}
+
 #ifdef CONFIG_HOTPLUG_CPU
 static int zynq_cpu_kill(unsigned cpu)
 {
@@ -146,6 +154,7 @@ struct smp_operations zynq_smp_ops __initdata = {
 	.smp_init_cpus		= zynq_smp_init_cpus,
 	.smp_prepare_cpus	= zynq_smp_prepare_cpus,
 	.smp_boot_secondary	= zynq_boot_secondary,
+	.smp_secondary_init	= zynq_secondary_init,
 #ifdef CONFIG_HOTPLUG_CPU
 	.cpu_die		= zynq_cpu_die,
 	.cpu_kill		= zynq_cpu_kill,
-- 
1.7.5.4

