From 6ae3e4fdb5af8f9ccb5ad2092a0a86e842b3b2d2 Mon Sep 17 00:00:00 2001
From: Lars-Peter Clausen <lars@metafoo.de>
Date: Tue, 25 Jun 2013 18:45:53 +0200
Subject: [PATCH 238/509] DRM: adv7511: Add powerdown gpio support

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit cd2f529105b2a0f0bf5f8c35cc8e39d83a8c1623

Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/gpu/drm/i2c/adv7511.h      |    5 +++++
 drivers/gpu/drm/i2c/adv7511_core.c |   22 +++++++++++++++++++---
 2 files changed, 24 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i2c/adv7511.h b/drivers/gpu/drm/i2c/adv7511.h
index 1f2c4cf..4631fcd 100644
--- a/drivers/gpu/drm/i2c/adv7511.h
+++ b/drivers/gpu/drm/i2c/adv7511.h
@@ -348,6 +348,7 @@ enum adv7511_up_conversion {
  * @hsync_polartity:		hsync input signal configuration
  * @timing_gen_seq:		Selects the order in which sync DE generation
  *				and sync adjustment are performt.
+ * @gpio_pd:			GPIO controlling the PD (powerdown) pin
  **/
 struct adv7511_link_config {
 	enum adv7511_input_id id;
@@ -363,6 +364,8 @@ struct adv7511_link_config {
 
 	enum adv7511_sync_polarity vsync_polarity;
 	enum adv7511_sync_polarity hsync_polarity;
+
+	int gpio_pd;
 };
 
 /**
@@ -442,6 +445,8 @@ struct adv7511 {
 	enum adv7511_sync_polarity hsync_polarity;
 
 	struct edid *edid;
+
+	int gpio_pd;
 };
 
 struct edid *adv7511_get_edid(struct drm_encoder *encoder);
diff --git a/drivers/gpu/drm/i2c/adv7511_core.c b/drivers/gpu/drm/i2c/adv7511_core.c
index 6642b52..f26151d 100644
--- a/drivers/gpu/drm/i2c/adv7511_core.c
+++ b/drivers/gpu/drm/i2c/adv7511_core.c
@@ -10,6 +10,8 @@
 #include <linux/module.h>
 #include <linux/i2c.h>
 #include <linux/regmap.h>
+#include <linux/gpio.h>
+#include <linux/of_gpio.h>
 
 #include "adv7511.h"
 
@@ -753,8 +755,7 @@ static const struct regmap_config adv7511_regmap_config = {
 */
 
 
-static int adv7511_parse_dt(struct adv7511 *adv7511,
-	struct device_node *np, struct adv7511_link_config *config)
+static int adv7511_parse_dt(struct device_node *np, struct adv7511_link_config *config)
 {
 	int ret;
 	u32 val;
@@ -816,6 +817,10 @@ static int adv7511_parse_dt(struct adv7511 *adv7511,
 		return ret;
 	config->input_color_depth = val;
 
+	config->gpio_pd = of_get_gpio(np, 0);
+	if (config->gpio_pd == -EPROBE_DEFER)
+		return -EPROBE_DEFER;
+
 	return 0;
 }
 
@@ -832,7 +837,7 @@ static int adv7511_probe(struct i2c_client *i2c,
 	int ret;
 
 	if (i2c->dev.of_node) {
-		ret = adv7511_parse_dt(adv7511, i2c->dev.of_node, &link_config);
+		ret = adv7511_parse_dt(i2c->dev.of_node, &link_config);
 		if (ret)
 			return ret;
 	} else {
@@ -845,6 +850,17 @@ static int adv7511_probe(struct i2c_client *i2c,
 	if (!adv7511)
 		return -ENOMEM;
 
+	adv7511->gpio_pd = link_config.gpio_pd;
+
+	if (gpio_is_valid(adv7511->gpio_pd)) {
+		ret = devm_gpio_request_one(&i2c->dev, adv7511->gpio_pd,
+				GPIOF_OUT_INIT_HIGH, "PD");
+		if (ret)
+			return ret;
+		mdelay(5);
+		gpio_set_value_cansleep(adv7511->gpio_pd, 0);
+	}
+
 	adv7511->regmap = devm_regmap_init_i2c(i2c, &adv7511_regmap_config);
 	if (IS_ERR(adv7511->regmap))
 		return PTR_ERR(adv7511->regmap);
-- 
1.7.5.4

