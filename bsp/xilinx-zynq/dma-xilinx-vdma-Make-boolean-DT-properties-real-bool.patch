From 0c33187119501e33f3891ab185dc0e745a2a2730 Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Wed, 22 May 2013 22:32:55 +0200
Subject: [PATCH 293/509] dma: xilinx: vdma: Make boolean DT properties real
 bools

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit c819c9f7bf7648a33e0a039e1569cf751f865127

Turn the xlnx,include-sg, xlnx,genlock-mode and xlnx,include-dre DT
properties into bool properties and use of_property_read_bool() to parse
them.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Acked-by: Srikanth Thokala <sthokal@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/dma/xilinx/xilinx_axivdma.c |   25 ++++++++++---------------
 1 files changed, 10 insertions(+), 15 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_axivdma.c b/drivers/dma/xilinx/xilinx_axivdma.c
index 0fb2cc5..7dd06c3 100644
--- a/drivers/dma/xilinx/xilinx_axivdma.c
+++ b/drivers/dma/xilinx/xilinx_axivdma.c
@@ -175,9 +175,9 @@ struct xilinx_vdma_chan {
 	int id;					/* Channel ID */
 	enum dma_transfer_direction direction;	/* Transfer direction */
 	int num_frms;				/* Number of frames */
-	int has_sg;				/* Support scatter transfers */
-	int has_dre;				/* For unaligned transfers */
-	int genlock;				/* Support genlock mode */
+	bool has_sg;				/* Support scatter transfers */
+	bool has_dre;				/* For unaligned transfers */
+	bool genlock;				/* Support genlock mode */
 	int err;				/* Channel has errors */
 	struct tasklet_struct tasklet;		/* Cleanup work after irq */
 	u32 feature;				/* IP feature */
@@ -1063,13 +1063,11 @@ static int xilinx_vdma_chan_probe(struct xilinx_vdma_device *xdev,
 	chan->xdev = xdev;
 	chan->feature = feature;
 
-	value = of_get_property(node, "xlnx,include-dre", NULL);
-	if (value)
-		chan->has_dre = be32_to_cpup(value);
+	if (of_property_read_bool(node, "xlnx,include-dre"))
+		chan->has_dre = true;
 
-	value = (int *)of_get_property(node, "xlnx,genlock-mode", NULL);
-	if (value)
-		chan->genlock = be32_to_cpup(value);
+	if (of_property_read_bool(node, "xlnx,genlock-mode"))
+		chan->genlock = true;
 
 	value = (int *)of_get_property(node, "xlnx,datawidth", NULL);
 	if (value) {
@@ -1077,7 +1075,7 @@ static int xilinx_vdma_chan_probe(struct xilinx_vdma_device *xdev,
 
 		/* If data width is greater than 8 bytes, DRE is not in hw */
 		if (width > 8)
-			chan->has_dre = 0;
+			chan->has_dre = false;
 
 		chan->feature |= width - 1;
 	}
@@ -1232,11 +1230,8 @@ static int xilinx_vdma_of_probe(struct platform_device *op)
 	if (of_device_is_compatible(node, "xlnx,axi-vdma")) {
 		xdev->feature |= XILINX_DMA_IP_VDMA;
 
-		value = of_get_property(node, "xlnx,include-sg", NULL);
-		if (value) {
-			if (be32_to_cpup(value) == 1)
-				xdev->feature |= XILINX_VDMA_FTR_HAS_SG;
-		}
+		if (of_property_read_bool(node, "xlnx,include-sg"))
+			xdev->feature |= XILINX_VDMA_FTR_HAS_SG;
 
 		value = of_get_property(node, "xlnx,num-fstores", NULL);
 		if (value)
-- 
1.7.5.4

