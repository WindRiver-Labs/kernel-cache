From b93abeda3e39cd70c31fca77edf04a75f81a1f0a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fran=C3=A7ois=20LEGAL?= <devel@thom.fr.eu.org>
Date: Thu, 5 Jun 2014 18:06:01 +0200
Subject: [PATCH 386/793] net: zynq: gem: Fix an error on the RX frame length
 field in BD for emacps
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

When you try to catch error frames the kernel panics.
This is due to the constant XEMACPS_RXBUF_LEN_MASK being defined
to 0x3FFF instead of 0x1FFF. When accepting the error frames, the 0x2000 bit
gets set in the BD, giving then a wrong frame length, which is caught
in the kernel when the frame gets passed to le network layers.

This bug has no effect if we don't try to catch error frames.

Signed-off-by: Fran√ßois LEGAL <devel@thom.fr.eu.org>
Acked-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 661dbd4..538d6c1 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -454,7 +454,7 @@ MDC_DIV_64, MDC_DIV_96, MDC_DIV_128, MDC_DIV_224 };
 #define XEMACPS_RXBUF_CFI_MASK		0x00010000 /* CFI frame */
 #define XEMACPS_RXBUF_EOF_MASK		0x00008000 /* End of frame. */
 #define XEMACPS_RXBUF_SOF_MASK		0x00004000 /* Start of frame. */
-#define XEMACPS_RXBUF_LEN_MASK		0x00003FFF /* Mask for length field */
+#define XEMACPS_RXBUF_LEN_MASK		0x00001FFF /* Mask for length field */
 
 #define XEMACPS_RXBUF_WRAP_MASK		0x00000002 /* Wrap bit, last BD */
 #define XEMACPS_RXBUF_NEW_MASK		0x00000001 /* Used bit.. */
-- 
1.7.5.4

