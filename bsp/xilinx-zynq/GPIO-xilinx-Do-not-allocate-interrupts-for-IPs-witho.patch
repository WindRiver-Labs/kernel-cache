From cbb3053de4687b2f2ca9352b72839be73b57dc08 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Tue, 6 Aug 2013 13:16:36 +0200
Subject: [PATCH 129/182] GPIO: xilinx: Do not allocate interrupts for IPs
 without IRQ support

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Check if IP has IRQ connected. If not ignore IRQ allocation.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 7c58460d5bb43758d879f391e85b7b857160d488)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpio/gpio-xilinx.c |   17 +++++++++++------
 1 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/drivers/gpio/gpio-xilinx.c b/drivers/gpio/gpio-xilinx.c
index 7e68148..65afa93 100644
--- a/drivers/gpio/gpio-xilinx.c
+++ b/drivers/gpio/gpio-xilinx.c
@@ -387,6 +387,12 @@ static int xgpio_irq_setup(struct device_node *np, struct xgpio_instance *chip)
 	u32 pin_num;
 	struct resource res;
 
+	int ret = of_irq_to_resource(np, 0, &res);
+	if (!ret) {
+		pr_info("GPIO IRQ not connected\n");
+		return 0;
+	}
+
 	chip->mmchip.gc.of_xlate = xgpio_xlate;
 	chip->mmchip.gc.of_gpio_n_cells = 2;
 	chip->mmchip.gc.to_irq = xgpiops_to_irq;
@@ -399,7 +405,6 @@ static int xgpio_irq_setup(struct device_node *np, struct xgpio_instance *chip)
 	chip->irq_domain = irq_domain_add_legacy(np, chip->mmchip.gc.ngpio,
 						 chip->irq_base, 0,
 						 &irq_domain_simple_ops, NULL);
-	of_irq_to_resource(np, 0, &res);
 
 	/*
 	 * set the irq chip, handler and irq chip data for callbacks for
@@ -469,19 +474,19 @@ static int xgpio_of_probe(struct device_node *np)
 
 	chip->mmchip.save_regs = xgpio_save_regs;
 
-	status = xgpio_irq_setup(np, chip);
+	/* Call the OF gpio helper to setup and register the GPIO device */
+	status = of_mm_gpiochip_add(np, &chip->mmchip);
 	if (status) {
 		kfree(chip);
-		pr_err("%s: GPIO IRQ initialization failed %d\n",
+		pr_err("%s: error in probe function with status %d\n",
 		       np->full_name, status);
 		return status;
 	}
 
-	/* Call the OF gpio helper to setup and register the GPIO device */
-	status = of_mm_gpiochip_add(np, &chip->mmchip);
+	status = xgpio_irq_setup(np, chip);
 	if (status) {
 		kfree(chip);
-		pr_err("%s: error in probe function with status %d\n",
+		pr_err("%s: GPIO IRQ initialization failed %d\n",
 		       np->full_name, status);
 		return status;
 	}
-- 
1.7.5.4

