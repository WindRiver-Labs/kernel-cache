From c7a402cb78ded823e016c1d0af0a2bc81e30f6c7 Mon Sep 17 00:00:00 2001
From: Kedareswara rao Appana <appana.durga.rao@xilinx.com>
Date: Thu, 10 Sep 2015 22:24:53 +0530
Subject: [PATCH 57/64] net: ethernet: xilinx: Restrict updating TAIL pointer
 when cur_p > tail_p

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Restricting TAIL pointer update when
current pointer  > tail pointer index.
As per AXI DMA IP spec -Software must
not move the tail pointer to a location
that has not been updated by HW.

Signed-off-by: Radhey Shyam Pandey <radheys@xilinx.com>
Signed-off-by: Kedareswara rao Appana <appanad@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 22adf1c2818c9dc40c4c7040d5b7dacc1817f71c)
---
 drivers/net/ethernet/xilinx/xilinx_axienet_main.c |    7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
index df9af78..96c39ac 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
@@ -689,6 +689,13 @@ static int axienet_start_xmit(struct sk_buff *skb, struct net_device *ndev)
 		spin_unlock_irqrestore(&lp->tx_lock, flags);
 		return NETDEV_TX_BUSY;
 	}
+
+	if (lp->tx_bd_ci > lp->tx_bd_tail) {
+		if (!netif_queue_stopped(ndev))
+			netif_stop_queue(ndev);
+		spin_unlock_irqrestore(&lp->tx_lock, flags);
+		return NETDEV_TX_BUSY;
+	}
 	spin_unlock_irqrestore(&lp->tx_lock, flags);
 
 	if (skb->ip_summed == CHECKSUM_PARTIAL && !lp->is_10Gmac) {
-- 
1.7.10.4

