From dbb3f37199f2d2fbb1186b9ab90bc06d392b2754 Mon Sep 17 00:00:00 2001
From: Punnaiah Choudary Kalluri <punnaiah.choudary.kalluri@xilinx.com>
Date: Mon, 10 Mar 2014 11:19:02 +0530
Subject: [PATCH 398/509] char: xdevcfg: Check the status of IXR_D_P_DONE
 instead of IXR_DMA_DONE

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 3f88b58503dadce4c763d7c4d4fdb177d983e0c8

The driver should wait for IXR_D_P_DONE instead of IXR_DMA_DONE for pcap
transfers

Signed-off-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/char/xilinx_devcfg.c |   12 +++++++-----
 1 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/char/xilinx_devcfg.c b/drivers/char/xilinx_devcfg.c
index f13f8ec..1fd3263 100644
--- a/drivers/char/xilinx_devcfg.c
+++ b/drivers/char/xilinx_devcfg.c
@@ -84,6 +84,7 @@ static DEFINE_MUTEX(xdevcfg_mutex);
 
 /* Interrupt Status/Mask Register Bit definitions */
 #define XDCFG_IXR_DMA_DONE_MASK		0x00002000 /* DMA Command Done */
+#define XDCFG_IXR_D_P_DONE_MASK		0x00001000 /* DMA and PCAP Cmd Done */
 #define XDCFG_IXR_PCFG_DONE_MASK	0x00000004 /* FPGA programmed */
 #define XDCFG_IXR_ERROR_FLAGS_MASK	0x00F0F860
 #define XDCFG_IXR_ALL_MASK		0xF8F7F87F
@@ -212,7 +213,8 @@ static irqreturn_t xdevcfg_irq(int irq, void *data)
 	xdevcfg_writereg(drvdata->base_address + XDCFG_INT_STS_OFFSET,
 				intr_status);
 
-	if ((intr_status & XDCFG_IXR_DMA_DONE_MASK) == XDCFG_IXR_DMA_DONE_MASK)
+	if ((intr_status & XDCFG_IXR_D_P_DONE_MASK) ==
+				XDCFG_IXR_D_P_DONE_MASK)
 		drvdata->dma_done = 1;
 
 	if ((intr_status & XDCFG_IXR_ERROR_FLAGS_MASK) ==
@@ -316,7 +318,7 @@ xdevcfg_write(struct file *file, const char __user *buf, size_t count,
 
 
 	xdevcfg_writereg(drvdata->base_address + XDCFG_INT_MASK_OFFSET,
-				(u32) (~(XDCFG_IXR_DMA_DONE_MASK |
+				(u32) (~(XDCFG_IXR_D_P_DONE_MASK |
 				XDCFG_IXR_ERROR_FLAGS_MASK)));
 
 	drvdata->dma_done = 0;
@@ -357,7 +359,7 @@ xdevcfg_write(struct file *file, const char __user *buf, size_t count,
 	intr_reg = xdevcfg_readreg(drvdata->base_address +
 					XDCFG_INT_MASK_OFFSET);
 	xdevcfg_writereg(drvdata->base_address + XDCFG_INT_MASK_OFFSET,
-				intr_reg | (XDCFG_IXR_DMA_DONE_MASK |
+				intr_reg | (XDCFG_IXR_D_P_DONE_MASK |
 				XDCFG_IXR_ERROR_FLAGS_MASK));
 
 	/* If we didn't write correctly, then bail out. */
@@ -420,7 +422,7 @@ xdevcfg_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
 				XDCFG_IXR_ALL_MASK);
 
 	xdevcfg_writereg(drvdata->base_address + XDCFG_INT_MASK_OFFSET,
-				(u32) (~(XDCFG_IXR_DMA_DONE_MASK |
+				(u32) (~(XDCFG_IXR_D_P_DONE_MASK |
 				XDCFG_IXR_ERROR_FLAGS_MASK)));
 	/* Initiate DMA read command */
 	xdevcfg_writereg(drvdata->base_address + XDCFG_DMA_SRC_ADDR_OFFSET,
@@ -447,7 +449,7 @@ xdevcfg_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
 	intr_reg = xdevcfg_readreg(drvdata->base_address +
 					XDCFG_INT_MASK_OFFSET);
 	xdevcfg_writereg(drvdata->base_address + XDCFG_INT_MASK_OFFSET,
-				intr_reg | (XDCFG_IXR_DMA_DONE_MASK |
+				intr_reg | (XDCFG_IXR_D_P_DONE_MASK |
 				XDCFG_IXR_ERROR_FLAGS_MASK));
 
 
-- 
1.7.5.4

