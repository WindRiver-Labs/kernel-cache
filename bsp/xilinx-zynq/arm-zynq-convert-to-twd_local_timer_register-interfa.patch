From 1da1f8cd646818b45e1b1847d702535bbe88558c Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Mon, 2 Jul 2012 14:57:57 +0800
Subject: [PATCH 05/36] arm/zynq: convert to twd_local_timer_register()
 interface

Add support for the new smp_twd runtime registration interface
to the zynq platforms, and remove the old compile-time support.

Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 arch/arm/mach-zynq/include/mach/irqs.h |    1 +
 arch/arm/mach-zynq/timer.c             |   29 +++++++++++++++++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/arch/arm/mach-zynq/include/mach/irqs.h b/arch/arm/mach-zynq/include/mach/irqs.h
index 2eba43c..7f440e7 100644
--- a/arch/arm/mach-zynq/include/mach/irqs.h
+++ b/arch/arm/mach-zynq/include/mach/irqs.h
@@ -18,4 +18,5 @@
 #define ARCH_NR_GPIOS	118
 #define NR_IRQS		128
 
+#define IRQ_LOCALTIMER	29
 #endif
diff --git a/arch/arm/mach-zynq/timer.c b/arch/arm/mach-zynq/timer.c
index fc3b1c5..042f3bf 100644
--- a/arch/arm/mach-zynq/timer.c
+++ b/arch/arm/mach-zynq/timer.c
@@ -27,7 +27,9 @@
 #include <linux/of_address.h>
 #include <linux/of_irq.h>
 
+#include <asm/smp_twd.h>
 #include <asm/mach/time.h>
+#include <asm/sched_clock.h>
 #include <mach/zynq_soc.h>
 #include "common.h"
 
@@ -87,6 +89,21 @@ struct xttcpss_timer {
 static struct xttcpss_timer timers[2];
 static struct clock_event_device xttcpss_clockevent;
 
+#ifdef CONFIG_HAVE_ARM_TWD
+static DEFINE_TWD_LOCAL_TIMER(twd_local_timer,
+			      SCU_PERIPH_PHYS + 0x600,
+			      IRQ_LOCALTIMER);
+
+static void __init zynq_twd_init(void)
+{
+	int err = twd_local_timer_register(&twd_local_timer);
+	if (err)
+		pr_err("twd_local_timer_register failed %d\n", err);
+}
+#else
+#define zynq_twd_init()	do {} while (0)
+#endif
+
 /**
  * xttcpss_set_interval - Set the timer interval value
  *
@@ -190,6 +207,13 @@ static cycle_t __raw_readl_cycles(struct clocksource *cs)
 				XTTCPSS_COUNT_VAL_OFFSET);
 }
 
+static u32 notrace zynq_read_sched_clock(void)
+{
+	struct xttcpss_timer *timer = &timers[XTTCPSS_CLOCKSOURCE];
+
+	return __raw_readl(timer->base_addr +
+			XTTCPSS_COUNT_VAL_OFFSET);
+}
 
 /*
  * Instantiate and initialize the clock source structure
@@ -343,6 +367,9 @@ static void __init xttcpss_timer_init(void)
 	timers[XTTCPSS_CLOCKEVENT].base_addr =
 					(void __iomem *)timer_baseaddr + 4;
 
+	setup_sched_clock(zynq_read_sched_clock, 16,
+					timers[XTTCPSS_CLOCKSOURCE].frequency);
+
 	xttcpss_timer_hardware_init();
 	clocksource_register_hz(&clocksource_xttcpss,
 				timers[XTTCPSS_CLOCKSOURCE].frequency);
@@ -362,6 +389,8 @@ static void __init xttcpss_timer_init(void)
 
 	xttcpss_clockevent.cpumask = cpumask_of(0);
 	clockevents_register_device(&xttcpss_clockevent);
+
+	zynq_twd_init();
 }
 
 /*
-- 
1.7.9.7

