From 5cb7a03de4acdc80896e501545d02768f2e59db0 Mon Sep 17 00:00:00 2001
From: Punnaiah Choudary Kalluri <punnaiah.choudary.kalluri@xilinx.com>
Date: Wed, 14 Aug 2013 00:53:27 +0530
Subject: [PATCH 20/20] mtd: m25p80: Fix for flash corruption issue found in
 dual parallel qspi configuration

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit cb3866a197430f92abfe929c8a3d161c0e3118fd

The below changes fix the flash corruption issue(CR#725392) occuring in dual parallel qspi
configurations.Dual parallel qspi configuration expects even address for read/program
operations but the current code erraniously issuning odd address when qspi interface
is configured for dual parallel mode and causing the issue.

Signed-off-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/mtd/devices/m25p80.c |   12 ++++--------
 1 files changed, 4 insertions(+), 8 deletions(-)

diff --git a/drivers/mtd/devices/m25p80.c b/drivers/mtd/devices/m25p80.c
index bd5de19..9fb21ac 100644
--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -596,7 +596,7 @@ static int m25p80_write(struct mtd_info *mtd, loff_t to, size_t len,
 
 	/* Set up the opcode in the write buffer. */
 	flash->command[0] = flash->prog_opcode;
-	m25p_addr2cmd(flash, to, flash->command);
+	m25p_addr2cmd(flash, (to >> flash->shift), flash->command);
 
 	page_offset = to & (flash->page_size - 1);
 
@@ -625,10 +625,8 @@ static int m25p80_write(struct mtd_info *mtd, loff_t to, size_t len,
 				page_size = flash->page_size;
 
 			/* write the next page to flash */
-			if (flash->isparallel)
-				m25p_addr2cmd(flash, to + i/2, flash->command);
-			else
-				m25p_addr2cmd(flash, to + i, flash->command);
+			m25p_addr2cmd(flash, ((to + i) >> flash->shift),
+					flash->command);
 
 			t[1].tx_buf = buf + i;
 			t[1].len = page_size;
@@ -668,8 +666,6 @@ static int m25p80_write_ext(struct mtd_info *mtd, loff_t to, size_t len,
 				addr;
 		offset = addr;
 
-		if (flash->isparallel == 1)
-			offset /= 2;
 		if (flash->isstacked == 1) {
 			if (offset >= (flash->mtd.size / 2)) {
 				offset = offset - (flash->mtd.size / 2);
@@ -678,7 +674,7 @@ static int m25p80_write_ext(struct mtd_info *mtd, loff_t to, size_t len,
 				flash->spi->master->flags &= ~SPI_MASTER_U_PAGE;
 			}
 		}
-		write_ear(flash, offset);
+		write_ear(flash, (offset >> flash->shift));
 		if (len < rem_bank_len)
 			write_len = len;
 		else
-- 
1.7.5.4

