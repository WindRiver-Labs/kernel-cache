From 5569ab472c0a8ce81d9a7de547eec09873c45670 Mon Sep 17 00:00:00 2001
From: Peter Crosthwaite <peter.crosthwaite@xilinx.com>
Date: Wed, 2 Jan 2013 18:27:54 +1000
Subject: [PATCH 070/793] xilinx_emacps: Dont mutex the rx and tx paths on ISR

The if-else logic of the ISR is such that only on of the RX or TX paths
are scheduled for action on interrupt (preference to TX). If the interrupts
for TX and RX occur concurrently, then TX will happen RX wont, but both will
get their interrupt status cleared. Fixed by removing the if-else.

Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>
Acked-by: Anirudha Sarangi <anirudha.sarangi@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index bcd064b..c2249e7 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -1747,7 +1747,9 @@ static irqreturn_t xemacps_interrupt(int irq, void *dev_id)
 		if (regisr & (XEMACPS_IXR_TXCOMPL_MASK |
 				XEMACPS_IXR_TX_ERR_MASK)) {
 			xemacps_tx_poll(ndev);
-		} else {
+		}
+		if (regisr & (XEMACPS_IXR_FRAMERX_MASK |
+			XEMACPS_IXR_RX_ERR_MASK)) {
 			xemacps_write(lp->baseaddr, XEMACPS_IDR_OFFSET,
 					(XEMACPS_IXR_FRAMERX_MASK |
 					XEMACPS_IXR_RX_ERR_MASK));
-- 
1.7.5.4

