From 405387637c2e309781b8a5199ade4b6e235e38ab Mon Sep 17 00:00:00 2001
From: Anders Hedlund <anders.hedlund@windriver.com>
Date: Thu, 5 Mar 2015 01:04:42 +0100
Subject: [PATCH] i2c: cadence: Prevent rx buffer overflow

Due to HW bug the controller might incorrectly transfers 16 bytes of
additional read data from the slave device. When this happens the rx
buffer gets overflown leading to random kernel crashes.

This commit prevents the rx buffer to overflow. It also prevents rx
counters to wrap leading to incorrect SW timeout.

Signed-off-by: Anders Hedlund <anders.hedlund@windriver.com>
Signed-off-by: baogen shang <baogen.shang@windriver.com>
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/i2c/busses/i2c-cadence.c |   11 +++++++----
 1 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/i2c/busses/i2c-cadence.c b/drivers/i2c/busses/i2c-cadence.c
index f68f734..cad6c38 100644
--- a/drivers/i2c/busses/i2c-cadence.c
+++ b/drivers/i2c/busses/i2c-cadence.c
@@ -223,14 +223,17 @@ static irqreturn_t cdns_i2c_isr(int irq, void *ptr)
 	     (isr_status & CDNS_I2C_IXR_DATA))) {
 		while (cdns_i2c_readreg(CDNS_I2C_SR_OFFSET) &
 		       CDNS_I2C_SR_RXDV) {
+			char fifo_byte;
 			if ((id->recv_count < CDNS_I2C_FIFO_DEPTH) &&
 			    !id->bus_hold_flag)
 				cdns_i2c_clear_bus_hold(id);
 
-			*(id->p_recv_buf)++ =
-				cdns_i2c_readreg(CDNS_I2C_DATA_OFFSET);
-			id->recv_count--;
-			id->curr_recv_count--;
+			fifo_byte = cdns_i2c_readreg(CDNS_I2C_DATA_OFFSET);
+			if (id->recv_count) {
+				*(id->p_recv_buf)++ = fifo_byte;
+				id->recv_count--;
+				id->curr_recv_count--;
+			}
 
 			if (updatetx &&
 			    (id->curr_recv_count == CDNS_I2C_FIFO_DEPTH + 1))
-- 
1.7.5.4

