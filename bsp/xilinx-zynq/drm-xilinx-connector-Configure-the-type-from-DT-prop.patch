From d927e5db9bc6535360dd21e30f8ac7990d9ce5c2 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Mon, 5 May 2014 19:52:39 -0700
Subject: [PATCH 091/456] drm: xilinx: connector: Configure the type from DT
 property

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

The connector can be either HDMI or DisplayPort depending on which encoder
slave is used. Add the struct xilinx_drm_connector_type to have supported
connector types, and decide the type based on DT.

Signed-off-by: Hyun Kwon <hyunk@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 80deb938f7253b6c6d8c4cfc9d956e4e96fdf18c)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_connector.c |   35 ++++++++++++++++++++++--
 1 files changed, 32 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_connector.c b/drivers/gpu/drm/xilinx/xilinx_drm_connector.c
index 273717d..5bc9e8d 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_connector.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_connector.c
@@ -30,6 +30,11 @@ struct xilinx_drm_connector {
 	struct drm_encoder *encoder;
 };
 
+struct xilinx_drm_connector_type {
+	const char *name;
+	const int type;
+};
+
 #define to_xilinx_connector(x)	\
 	container_of(x, struct xilinx_drm_connector, base)
 
@@ -121,13 +126,20 @@ static struct drm_connector_funcs xilinx_drm_connector_funcs = {
 	.destroy	= xilinx_drm_connector_destroy,
 };
 
+static const struct xilinx_drm_connector_type connector_types[] = {
+	{ "HDMIA", DRM_MODE_CONNECTOR_HDMIA },
+	{ "DisplayPort", DRM_MODE_CONNECTOR_DisplayPort },
+};
+
 /* create connector */
 struct drm_connector *
 xilinx_drm_connector_create(struct drm_device *drm,
 			    struct drm_encoder *base_encoder)
 {
 	struct xilinx_drm_connector *connector;
-	int ret;
+	const char *string;
+	int type = DRM_MODE_CONNECTOR_Unknown;
+	int i, ret;
 
 	connector = devm_kzalloc(drm->dev, sizeof(*connector), GFP_KERNEL);
 	if (!connector)
@@ -136,9 +148,26 @@ xilinx_drm_connector_create(struct drm_device *drm,
 	connector->base.polled = DRM_CONNECTOR_POLL_CONNECT |
 				 DRM_CONNECTOR_POLL_DISCONNECT;
 
+	ret = of_property_read_string(drm->dev->of_node, "xlnx,connector-type",
+				      &string);
+	if (ret < 0) {
+		dev_err(drm->dev, "No connector type in DT\n");
+		return ERR_PTR(ret);
+	}
+
+	for (i = 0; i < ARRAY_SIZE(connector_types); i++)
+		if (strcmp(connector_types[i].name, string) == 0) {
+			type = connector_types[i].type;
+			break;
+		}
+
+	if (type == DRM_MODE_CONNECTOR_Unknown) {
+		dev_err(drm->dev, "Unknown connector type in DT\n");
+		return ERR_PTR(-EINVAL);
+	}
+
 	ret = drm_connector_init(drm, &connector->base,
-				 &xilinx_drm_connector_funcs,
-				 DRM_MODE_CONNECTOR_HDMIA);
+				 &xilinx_drm_connector_funcs, type);
 	if (ret) {
 		DRM_ERROR("failed to initialize connector\n");
 		return ERR_PTR(ret);
-- 
1.7.5.4

