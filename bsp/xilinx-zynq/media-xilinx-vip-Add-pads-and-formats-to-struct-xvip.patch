From f2240bec85e82cf08d635598a42e6d12055c42dc Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Fri, 24 Jan 2014 00:38:30 +0100
Subject: [PATCH 285/456] media: xilinx: vip: Add pads and formats to struct
 xvip_device

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

This will simplify video IP drivers by handling pads and formats
allocation in a central place.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
(cherry picked from commit 8ef101355f3687b86f560b0fc1a1fe30e4fc8f8c)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-vip.c |   51 ++++++++++++++++++++++++++++
 drivers/media/platform/xilinx/xilinx-vip.h |   11 ++++++
 2 files changed, 62 insertions(+), 0 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-vip.c b/drivers/media/platform/xilinx/xilinx-vip.c
index f8d1ce9..ee03060 100644
--- a/drivers/media/platform/xilinx/xilinx-vip.c
+++ b/drivers/media/platform/xilinx/xilinx-vip.c
@@ -14,6 +14,8 @@
 #include <linux/kernel.h>
 #include <linux/of.h>
 
+#include <media/media-entity.h>
+
 #include "xilinx-vip.h"
 
 /* -----------------------------------------------------------------------------
@@ -354,3 +356,52 @@ void xvip_init_formats(struct v4l2_subdev *subdev, struct v4l2_subdev_fh *fh)
 	v4l2_subdev_call(subdev, pad, set_fmt, fh, &format);
 }
 EXPORT_SYMBOL_GPL(xvip_init_formats);
+
+/* -----------------------------------------------------------------------------
+ * Initialization and cleanup
+ */
+
+/**
+ * xvip_device_init - Initialize a video IP device
+ * @xvip: the video IP device
+ *
+ * Allocate pads and formats for the device. The caller must have set the
+ * following xvip fields prior to calling this function.
+ *
+ * - npads to the number of pads
+ *
+ * Return 0 on success or -ENOMEM on memory allocation failure.
+ */
+int xvip_device_init(struct xvip_device *xvip)
+{
+	struct v4l2_mbus_framefmt *formats;
+	struct media_pad *pads;
+
+	pads = kzalloc(xvip->npads * sizeof(*pads), GFP_KERNEL);
+	formats = kzalloc(xvip->npads * sizeof(*formats), GFP_KERNEL);
+
+	if (pads == NULL || formats == NULL) {
+		kfree(pads);
+		kfree(formats);
+		return -ENOMEM;
+	}
+
+	xvip->pads = pads;
+	xvip->formats = formats;
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(xvip_device_init);
+
+/**
+ * xvip_device_cleanup - Cleanup a video IP device
+ * @xvip: the video IP device
+ *
+ * Free the memory allocated by xvip_device_init().
+ */
+void xvip_device_cleanup(struct xvip_device *xvip)
+{
+	kfree(xvip->pads);
+	kfree(xvip->formats);
+}
+EXPORT_SYMBOL_GPL(xvip_device_cleanup);
diff --git a/drivers/media/platform/xilinx/xilinx-vip.h b/drivers/media/platform/xilinx/xilinx-vip.h
index 8261818..da1bf36 100644
--- a/drivers/media/platform/xilinx/xilinx-vip.h
+++ b/drivers/media/platform/xilinx/xilinx-vip.h
@@ -88,12 +88,20 @@
  * @subdev: V4L2 subdevice
  * @dev: (OF) device
  * @iomem: device I/O register space remapped to kernel virtual memory
+ * @npads: number of pads on the subdevice
+ * @pads: media pads
+ * @formats: active formats on the pads
  * @saved_ctrl: saved control register for resume / suspend
  */
 struct xvip_device {
 	struct v4l2_subdev subdev;
 	struct device *dev;
 	void __iomem *iomem;
+
+	unsigned int npads;
+	struct media_pad *pads;
+	struct v4l2_mbus_framefmt *formats;
+
 	u32 saved_ctrl;
 };
 
@@ -115,6 +123,9 @@ struct xvip_video_format {
 	const char *description;
 };
 
+int xvip_device_init(struct xvip_device *xvip);
+void xvip_device_cleanup(struct xvip_device *xvip);
+
 const struct xvip_video_format *xvip_get_format_by_code(unsigned int code);
 const struct xvip_video_format *xvip_get_format_by_fourcc(u32 fourcc);
 const struct xvip_video_format *xvip_of_get_format(struct device_node *node);
-- 
1.7.5.4

