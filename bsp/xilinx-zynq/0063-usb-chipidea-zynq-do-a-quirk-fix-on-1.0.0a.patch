From 944ac45b535dd8876af3846f13e02ae6ed1f8187 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 23 Sep 2015 10:34:39 +0800
Subject: [PATCH 63/64] usb: chipidea: zynq: do a quirk fix on 1.0.0a

For 1.0.0a chipset, we still need to use GPIO0_7 to reset ULPI PHY
before normal operation, as described in datasheet.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/usb/chipidea/ci_hdrc_usb2.c |   27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/chipidea/ci_hdrc_usb2.c b/drivers/usb/chipidea/ci_hdrc_usb2.c
index 5a222db..e99d4d1 100644
--- a/drivers/usb/chipidea/ci_hdrc_usb2.c
+++ b/drivers/usb/chipidea/ci_hdrc_usb2.c
@@ -18,6 +18,7 @@
 #include <linux/usb/chipidea.h>
 #include <linux/usb/hcd.h>
 #include <linux/usb/ulpi.h>
+#include <linux/of_gpio.h>
 
 #include "ci.h"
 
@@ -45,10 +46,34 @@ MODULE_DEVICE_TABLE(of, ci_hdrc_usb2_of_match);
 static int ci_hdrc_usb2_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
+	struct device_node *np = pdev->dev.of_node;
 	struct ci_hdrc_usb2_priv *priv;
 	struct ci_hdrc_platform_data *ci_pdata = dev_get_platdata(dev);
-	int ret;
 	const struct of_device_id *match;
+	int ret, reset_gpio;
+
+	/*
+	 * For zynq-usb-1.00.a, we need set GPIO at first, so we do
+	 * this quirk fix
+	 */
+	reset_gpio = of_get_named_gpio(np, "xlnx,phy-reset-gpio", 0);
+	if (gpio_is_valid(reset_gpio)) {
+		ret = devm_gpio_request_one(&pdev->dev, reset_gpio,
+				GPIOF_INIT_LOW, "ulpi resetb");
+		if (ret) {
+			dev_err(&pdev->dev, "Failed to request ULPI \
+				reset gpio: %d\n", ret);
+			return ret;
+		}
+		/* ULPI Datasheet specifies a 1us pulse width for reset */
+		udelay(1);
+		if (of_property_read_bool(np, "xlnx,phy-reset-gpio-tristate"))
+			gpio_direction_input(reset_gpio);
+		else
+			gpio_set_value_cansleep(reset_gpio, 1);
+		/* ULPI will assert the DIR line, give it time to do so */
+		udelay(1);
+	}
 
 	if (!ci_pdata)
 		ci_pdata = &ci_default_pdata;
-- 
1.7.10.4

