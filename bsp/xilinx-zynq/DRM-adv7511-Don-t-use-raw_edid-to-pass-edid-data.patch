From e3a3eaf0c0f2ed4a82c4093cafcab930ad6f06c0 Mon Sep 17 00:00:00 2001
From: Lars-Peter Clausen <lars@metafoo.de>
Date: Mon, 8 Apr 2013 10:27:28 +0200
Subject: [PATCH 228/509] DRM: adv7511: Don't use raw_edid to pass edid data

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 34d67b9899b2bc8dea76a4ea150be3c2123bf87b

The raw_edid field was removed in upstream, so don't use it anymore.

Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/gpu/drm/adi_axi_hdmi/axi_hdmi_encoder.c |    9 ++++-----
 drivers/gpu/drm/i2c/adv7511.h                   |    4 ++++
 drivers/gpu/drm/i2c/adv7511_core.c              |   12 +++++++++++-
 3 files changed, 19 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/adi_axi_hdmi/axi_hdmi_encoder.c b/drivers/gpu/drm/adi_axi_hdmi/axi_hdmi_encoder.c
index 37a3d24..65b3981 100644
--- a/drivers/gpu/drm/adi_axi_hdmi/axi_hdmi_encoder.c
+++ b/drivers/gpu/drm/adi_axi_hdmi/axi_hdmi_encoder.c
@@ -250,13 +250,15 @@ static void axi_hdmi_encoder_dpms(struct drm_encoder *encoder, int mode)
 	struct axi_hdmi_private *private = encoder->dev->dev_private;
 	struct drm_encoder_slave_funcs *sfuncs = get_slave_funcs(encoder);
 	struct adv7511_video_config config;
+	struct edid *edid;
 
 	switch (mode) {
 	case DRM_MODE_DPMS_ON:
 		iowrite32(AXI_HDMI_CTRL_ENABLE, private->base + AXI_HDMI_REG_CTRL);
-		if (connector->display_info.raw_edid) {
-			struct edid *edid = (struct edid *)connector->display_info.raw_edid;
+		edid = adv7511_get_edid(encoder);
+		if (edid) {
 			config.hdmi_mode = drm_detect_hdmi_monitor(edid);
+			kfree(edid);
 		} else {
 			config.hdmi_mode = false;
 		}
@@ -419,9 +421,6 @@ static int axi_hdmi_connector_get_modes(struct drm_connector *connector)
 	struct drm_encoder_slave_funcs *sfuncs = get_slave_funcs(encoder);
 	int count = 0;
 
-	kfree(connector->display_info.raw_edid);
-	connector->display_info.raw_edid = NULL;
-
 	if (sfuncs && sfuncs->get_modes)
 		count += sfuncs->get_modes(encoder, connector);
 
diff --git a/drivers/gpu/drm/i2c/adv7511.h b/drivers/gpu/drm/i2c/adv7511.h
index 918c669..1f2c4cf 100644
--- a/drivers/gpu/drm/i2c/adv7511.h
+++ b/drivers/gpu/drm/i2c/adv7511.h
@@ -440,6 +440,10 @@ struct adv7511 {
 	bool embedded_sync;
 	enum adv7511_sync_polarity vsync_polarity;
 	enum adv7511_sync_polarity hsync_polarity;
+
+	struct edid *edid;
 };
 
+struct edid *adv7511_get_edid(struct drm_encoder *encoder);
+
 #endif
diff --git a/drivers/gpu/drm/i2c/adv7511_core.c b/drivers/gpu/drm/i2c/adv7511_core.c
index ffa9d3f..1d67c69 100644
--- a/drivers/gpu/drm/i2c/adv7511_core.c
+++ b/drivers/gpu/drm/i2c/adv7511_core.c
@@ -496,11 +496,20 @@ static int adv7511_get_modes(struct drm_encoder *encoder,
 	drm_mode_connector_update_edid_property(connector, edid);
 	count = drm_add_edid_modes(connector, edid);
 
-	connector->display_info.raw_edid = (char *)edid;
+	kfree(adv7511->edid);
+	adv7511->edid = edid;
 
 	return count;
 }
 
+struct edid *adv7511_get_edid(struct drm_encoder *encoder)
+{
+	struct adv7511 *adv7511 = encoder_to_adv7511(encoder);
+
+	return kmemdup(adv7511->edid, sizeof(*adv7511->edid), GFP_KERNEL);
+}
+EXPORT_SYMBOL_GPL(adv7511_get_edid);
+
 static void adv7511_encoder_dpms(struct drm_encoder *encoder, int mode)
 {
 	struct adv7511 *adv7511 = encoder_to_adv7511(encoder);
@@ -888,6 +897,7 @@ static int adv7511_remove(struct i2c_client *i2c)
 
 	if (i2c->irq)
 		free_irq(i2c->irq, adv7511);
+	kfree(adv7511->edid);
 
 	return 0;
 }
-- 
1.7.5.4

