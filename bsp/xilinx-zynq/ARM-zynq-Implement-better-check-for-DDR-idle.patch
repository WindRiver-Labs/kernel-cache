From 9be342225bd31c11547e1ba52c900606e1c8f7af Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Tue, 3 Jun 2014 08:46:48 -0700
Subject: [PATCH 150/182] ARM: zynq: Implement better check for DDR idle

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

In suspend DRAM is put in self-refresh and clocks are stopped. Though,
before the clocks can be stopped the DDRC must be idle. Zynq does not
provide a reliable way to query the activity state of the DRAM. The
recommened way is to poll the CAM queues and wait for ~40 DDR cycles
once they are idle to allow the queues and pipelines to be drained.

If something causes new DDR transactions in the gap between finish
polling and turning DDR off, things will go sideways...

Tested-by: Chandramohan Pujari <cpujari@xilinx.com>
Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit a5f3bac3c39aa0a218d0ba59947b04b7ec6da624)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/mach-zynq/suspend.S |   44 +++++++++++++++++++++++++++++++----------
 1 files changed, 33 insertions(+), 11 deletions(-)

diff --git a/arch/arm/mach-zynq/suspend.S b/arch/arm/mach-zynq/suspend.S
index a632f47..335dc93 100644
--- a/arch/arm/mach-zynq/suspend.S
+++ b/arch/arm/mach-zynq/suspend.S
@@ -21,7 +21,6 @@
 #define PLLSTATUS_OFFS		0x10c
 #define DDR_CLK_CTRL_OFFS	0x124
 #define DCI_CLK_CTRL_OFFS	0x128
-#define DDR_CMD_STA_OFFS	0x618
 #define MODE_STS_OFFS		0x54
 
 #define PLL_RESET_MASK		1
@@ -30,9 +29,9 @@
 #define DCICLK_ENABLE_MASK	1
 #define DDRCLK_ENABLE_MASK	3
 #define DDR_LOCK_MASK		(1 << 1)
-#define DDR_STATUS_MASK		7
+#define DDRC_STATUS_MASK	7
 
-#define DDR_OPMODE_SR		3
+#define DDRC_OPMODE_SR		3
 #define MAXTRIES		100
 
 	.text
@@ -47,26 +46,48 @@
  * related clocks are gated off and the DDR PLL is bypassed.
  */
 ENTRY(zynq_sys_suspend)
+	push	{r4 - r7}
 	dsb
 	/* Check DDRC is in self-refresh mode */
 	ldr	r2, [r0, #MODE_STS_OFFS]
-	and	r2, #DDR_STATUS_MASK
-	cmp	r2, #DDR_OPMODE_SR
+	and	r2, #DDRC_STATUS_MASK
+	cmp	r2, #DDRC_OPMODE_SR
 	movweq	r3, #0xff00
 	bne	suspend
 
-	mov	r3, #0
+	mov	r3, #MAXTRIES
+	movw	r4, #0xfff0
+	movt	r4, #0x1f
 	/* Wait for command queue empty */
-1:	cmp	r3, #MAXTRIES
+1:	subs	r3, #1
 	movweq	r3, #0xff00
 	beq	suspend
-	ldr	r2, [r1, #DDR_CMD_STA_OFFS]
-	cmp	r2, #0
-	addne	r3, #1
+	dsb	sy
+	ldr	r2, [r0, #MODE_STS_OFFS]
+	ands	r2, r4
 	bne	1b
 
 	dsb
 
+	/*
+	 * Wait for DDRC pipeline/queues to drain.
+	 * We should wait ~40 DDR cycles. DDR is still at full speed while the
+	 * CPU might already run in PLL bypass mode. The fastest speed the CPU
+	 * runs at is ~1 GHz ~ 2 * DDR speed.
+	 */
+	mov	r3, #160
+1:	nop
+	subs	r3, #1
+	bne	1b
+
+	dsb
+
+	/* read back CAM status once more */
+	ldr	r2, [r0, #MODE_STS_OFFS]
+	ands	r2, r4
+	movwne	r3, #0xff00
+	bne	suspend
+
 	/* Stop DDR clocks */
 	ldr	r2, [r1, #DDR_CLK_CTRL_OFFS]
 	bic	r2, #DDRCLK_ENABLE_MASK
@@ -127,7 +148,8 @@ suspend:
 	dsb
 
 	mov	r0, #0
-exit:	bx	lr
+exit:	pop	{r4 - r7}
+	bx	lr
 
 ENTRY(zynq_sys_suspend_sz)
 	.word	. - zynq_sys_suspend
-- 
1.7.5.4

