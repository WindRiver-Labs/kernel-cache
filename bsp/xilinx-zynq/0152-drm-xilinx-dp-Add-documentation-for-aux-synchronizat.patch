From e2832d31498c0acb2b5f456cf53b8c4719bd61ff Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Tue, 10 Jun 2014 17:40:37 -0700
Subject: [PATCH 152/290] drm: xilinx: dp: Add documentation for aux
 synchronization

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Add documentation for aux communication synchronization. More function
description is added for xilinx_drm_dp_aux_cmd_submit(), and aux_lock
documentation is more detailed.

Signed-off-by: Hyun Kwon <hyunk@xilinx.com>
Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit e3de3695ae5a3908884212f744a4ad0cedb1adb9)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_dp.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_dp.c b/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
index 3013c2c..7e7733f 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
@@ -280,7 +280,7 @@ struct xilinx_drm_dp_i2c {
  * @link_config: common link configuration between IP core and sink device
  * @mode: current mode between IP core and sink device
  * @train_set: set of training data
- * @aux_lock: mutex for aux communication
+ * @aux_lock: mutex to protect atomicity of xilinx_drm_dp_aux_cmd_submit()
  */
 struct xilinx_drm_dp {
 	struct drm_encoder *encoder;
@@ -315,6 +315,12 @@ static inline struct xilinx_drm_dp *to_dp(struct drm_encoder *encoder)
  * @buf: buffer for command data
  * @bytes: number of bytes for @buf
  *
+ * Submit an aux command. All aux related commands, native or i2c aux
+ * read/write, are submitted through this function. This function involves in
+ * multiple register reads/writes, thus the synchronization needs to be done
+ * by holding @aux_lock if multi-thread access is possible. The calling thread
+ * goes into sleep if there's no immediate reply to the command submission.
+ *
  * Return: 0 if the command is submitted properly, or corresponding error code:
  * -EBUSY when there is any request already being processed
  * -ETIMEDOUT when receiving reply is timed out
-- 
2.0.2

