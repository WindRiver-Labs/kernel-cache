From ca7c9ee82bd1581bbbba68b4fd255cf2b77b1461 Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Fri, 7 Mar 2014 18:58:25 +0530
Subject: [PATCH 077/509] SPI: zynq: Remove data memory barrier

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 19a95f4aa5871ccc9313c3c092b185a5fbc235b7

This data memory barrier was previously added as a workaround
to the clock domain crossing issue. With the solution of using
transmit count without relying on the status flag, dmb()
is no longer required. Hence removed it.

Signed-off-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/spi/spi-zynq.c |    9 ---------
 1 files changed, 0 insertions(+), 9 deletions(-)

diff --git a/drivers/spi/spi-zynq.c b/drivers/spi/spi-zynq.c
index 4c3620d..479a99d 100644
--- a/drivers/spi/spi-zynq.c
+++ b/drivers/spi/spi-zynq.c
@@ -376,15 +376,6 @@ static irqreturn_t zynq_spi_irq(int irq, void *dev_id)
 			if (xspi->rxbuf)
 				*xspi->rxbuf++ = data;
 
-			/* Data memory barrier is placed here to ensure that
-			 * data read operation is completed before the status
-			 * read is initiated. Without dmb, there are chances
-			 * that data and status reads will appear at the SPI
-			 * peripheral back-to-back which results in an
-			 * incorrect status read.
-			 */
-			dmb();
-
 			xspi->requested_bytes--;
 			trans_cnt--;
 		}
-- 
1.7.5.4

