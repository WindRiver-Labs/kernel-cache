From 3c7ddc905a0acea9cf2f46f0b2d8f3ac2eda5565 Mon Sep 17 00:00:00 2001
From: Lars-Peter Clausen <lars@metafoo.de>
Date: Tue, 26 Feb 2013 13:55:54 +0100
Subject: [PATCH 063/509] spi: zynq: Introduce a timeout to the transfer
 completion

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 07e258388ac3433afdfa27460c340f3e737cb3d4

If the interrupt never kicks in, e.g. due to a peripheral malfunctions, the
driver will get stuck forever in xspips_start_transfer() for the completion to
complete. This patch adds a timeout to the completion so the driver can fail
gracefully and return an error if the interrupt never kicks in.

Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/spi/spi-zynq.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/drivers/spi/spi-zynq.c b/drivers/spi/spi-zynq.c
index 7b45582..e868ded 100644
--- a/drivers/spi/spi-zynq.c
+++ b/drivers/spi/spi-zynq.c
@@ -396,6 +396,7 @@ static int zynq_spi_start_transfer(struct spi_device *spi,
 	struct zynq_spi *xspi = spi_master_get_devdata(spi->master);
 	u32 ctrl_reg;
 	unsigned long flags;
+	int ret;
 
 	xspi->txbuf = transfer->tx_buf;
 	xspi->rxbuf = transfer->rx_buf;
@@ -415,7 +416,9 @@ static int zynq_spi_start_transfer(struct spi_device *spi,
 
 	spin_unlock_irqrestore(&xspi->ctrl_reg_lock, flags);
 
-	wait_for_completion(&xspi->done);
+	ret = wait_for_completion_timeout(&xspi->done, 5 * HZ);
+	if (ret == 0)
+		return -EIO;
 
 	return (transfer->len) - (xspi->remaining_bytes);
 }
-- 
1.7.5.4

