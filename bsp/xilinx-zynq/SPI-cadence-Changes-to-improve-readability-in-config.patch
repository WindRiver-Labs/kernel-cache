From e42e013d7af955c635df5724d5c32232a85f7cef Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Mon, 17 Mar 2014 13:16:46 +0530
Subject: [PATCH 087/509] SPI: cadence: Changes to improve readability in
 config_clock function

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 14da38380ec7d8366d00f23be5270af7bcb1a55a

Changed statements writing to req_hz, ctrl_reg variables and aligned
while loop statement to improve readability in cdns_spi_config_clock()

Signed-off-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/spi/spi-cadence.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/spi/spi-cadence.c b/drivers/spi/spi-cadence.c
index fca8faa..f515258 100644
--- a/drivers/spi/spi-cadence.c
+++ b/drivers/spi/spi-cadence.c
@@ -215,9 +215,9 @@ static void cdns_spi_config_clock(struct spi_device *spi,
 	u32 ctrl_reg, req_hz, baud_rate_val;
 	unsigned long frequency;
 
-	req_hz = (transfer) ? transfer->speed_hz : spi->max_speed_hz;
-
-	if (transfer && !transfer->speed_hz)
+	if (transfer && transfer->speed_hz)
+		req_hz = transfer->speed_hz;
+	else
 		req_hz = spi->max_speed_hz;
 
 	frequency = clk_get_rate(xspi->ref_clk);
@@ -227,7 +227,7 @@ static void cdns_spi_config_clock(struct spi_device *spi,
 	ctrl_reg = cdns_spi_read(xspi->regs + CDNS_SPI_CR_OFFSET);
 
 	/* Set the SPI clock phase and clock polarity */
-	ctrl_reg &= (~CDNS_SPI_CR_CPHA_MASK) & (~CDNS_SPI_CR_CPOL_MASK);
+	ctrl_reg &= ~(CDNS_SPI_CR_CPHA_MASK | CDNS_SPI_CR_CPOL_MASK);
 	if (spi->mode & SPI_CPHA)
 		ctrl_reg |= CDNS_SPI_CR_CPHA_MASK;
 	if (spi->mode & SPI_CPOL)
@@ -237,8 +237,8 @@ static void cdns_spi_config_clock(struct spi_device *spi,
 	if (xspi->speed_hz != req_hz) {
 		/* first valid value is 1 */
 		baud_rate_val = CDNS_SPI_BAUD_DIV_MIN;
-		while ((baud_rate_val < CDNS_SPI_BAUD_DIV_MAX) && (frequency /
-					(2 << baud_rate_val)) > req_hz)
+		while ((baud_rate_val < CDNS_SPI_BAUD_DIV_MAX) &&
+		       (frequency / (2 << baud_rate_val)) > req_hz)
 			baud_rate_val++;
 
 		ctrl_reg &= ~CDNS_SPI_CR_BAUD_DIV_MASK;
-- 
1.7.5.4

