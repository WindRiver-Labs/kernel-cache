From 97af3391ea5a6dee42bdae138451dbfc8072392e Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Wed, 22 May 2013 16:12:25 +0200
Subject: [PATCH 286/509] dma: xilinx: vdma: Use devm_* managers allocators

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 3183bf85d90442eed4448786334ef73499768fa6

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Acked-by: Srikanth Thokala <sthokal@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/dma/xilinx/xilinx_axivdma.c |   30 ++++++++----------------------
 1 files changed, 8 insertions(+), 22 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_axivdma.c b/drivers/dma/xilinx/xilinx_axivdma.c
index e8d3188..1b30a97 100644
--- a/drivers/dma/xilinx/xilinx_axivdma.c
+++ b/drivers/dma/xilinx/xilinx_axivdma.c
@@ -1055,7 +1055,6 @@ static void xilinx_vdma_chan_remove(struct xilinx_vdma_chan *chan)
 {
 	irq_dispose_mapping(chan->irq);
 	list_del(&chan->common.device_node);
-	kfree(chan);
 }
 
 /*
@@ -1073,11 +1072,10 @@ static int xilinx_vdma_chan_probe(struct xilinx_vdma_device *xdev,
 	u32 width = 0, device_id = 0, flush_fsync = 0;
 
 	/* Alloc channel */
-	chan = kzalloc(sizeof(*chan), GFP_KERNEL);
+	chan = devm_kzalloc(xdev->dev, sizeof(*chan), GFP_KERNEL);
 	if (!chan) {
 		dev_err(xdev->dev, "no free memory for DMA channels!\n");
-		err = -ENOMEM;
-		goto out_return;
+		return -ENOMEM;
 	}
 
 	chan->xdev = xdev;
@@ -1156,7 +1154,7 @@ static int xilinx_vdma_chan_probe(struct xilinx_vdma_device *xdev,
 	/* Initialize the channel */
 	if (vdma_init(chan)) {
 		dev_err(xdev->dev, "Reset channel failed\n");
-		goto out_free_chan;
+		return err;
 	}
 
 	spin_lock_init(&chan->lock);
@@ -1167,8 +1165,8 @@ static int xilinx_vdma_chan_probe(struct xilinx_vdma_device *xdev,
 
 	/* Find the IRQ line, if it exists in the device tree */
 	chan->irq = irq_of_parse_and_map(node, 0);
-	err = request_irq(chan->irq, vdma_intr_handler, IRQF_SHARED,
-				"xilinx-vdma-controller", chan);
+	err = devm_request_irq(xdev->dev, chan->irq, vdma_intr_handler,
+			       IRQF_SHARED, "xilinx-vdma-controller", chan);
 	if (err) {
 		dev_err(xdev->dev, "unable to request IRQ\n");
 		goto out_free_irq;
@@ -1182,9 +1180,6 @@ static int xilinx_vdma_chan_probe(struct xilinx_vdma_device *xdev,
 
 out_free_irq:
 	irq_dispose_mapping(chan->irq);
-out_free_chan:
-	kfree(chan);
-out_return:
 	return err;
 }
 
@@ -1231,11 +1226,10 @@ static int xilinx_vdma_of_probe(struct platform_device *op)
 
 	dev_info(&op->dev, "Probing xilinx axi vdma engine\n");
 
-	xdev = kzalloc(sizeof(struct xilinx_vdma_device), GFP_KERNEL);
+	xdev = devm_kzalloc(&op->dev, sizeof(*xdev), GFP_KERNEL);
 	if (!xdev) {
 		dev_err(&op->dev, "Not enough memory for device\n");
-		err = -ENOMEM;
-		goto out_return;
+		return -ENOMEM;
 	}
 
 	xdev->dev = &(op->dev);
@@ -1248,8 +1242,7 @@ static int xilinx_vdma_of_probe(struct platform_device *op)
 	xdev->regs = of_iomap(node, 0);
 	if (!xdev->regs) {
 		dev_err(&op->dev, "unable to iomap registers\n");
-		err = -ENOMEM;
-		goto out_free_xdev;
+		return -ENOMEM;
 	}
 
 	/* Axi VDMA only do slave transfers */
@@ -1304,12 +1297,6 @@ static int xilinx_vdma_of_probe(struct platform_device *op)
 		dev_err(&op->dev, "Unable to register DMA to DT\n");
 
 	return 0;
-
-out_free_xdev:
-	kfree(xdev);
-
-out_return:
-	return err;
 }
 
 static int xilinx_vdma_of_remove(struct platform_device *op)
@@ -1328,7 +1315,6 @@ static int xilinx_vdma_of_remove(struct platform_device *op)
 	}
 
 	iounmap(xdev->regs);
-	kfree(xdev);
 
 	return 0;
 }
-- 
1.7.5.4

