From dcd8686c9aba91ca93d12e66233b8a9d83c0965f Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Fri, 11 Apr 2014 16:17:30 +0530
Subject: [PATCH 134/509] spi: zynq-qspi: Change clock names

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit adbc53e5a79c46cab21f931d422c6bbdd25b5e5e

Use the name pclk instead of aper_clk and change the variable name
accordingly.
Change variable name from devclk to refclk just for clarity.
Changes made in driver and relevant dts.

Signed-off-by: Harini Katakam <harinik@xilinx.com>
Reviewed-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/boot/dts/zynq-zc702.dts |    2 +-
 arch/arm/boot/dts/zynq-zc706.dts |    2 +-
 arch/arm/boot/dts/zynq-zed.dts   |    2 +-
 drivers/spi/spi-zynq-qspi.c      |   71 +++++++++++++++++---------------------
 4 files changed, 35 insertions(+), 42 deletions(-)

diff --git a/arch/arm/boot/dts/zynq-zc702.dts b/arch/arm/boot/dts/zynq-zc702.dts
index 3a138fc..13974c9 100644
--- a/arch/arm/boot/dts/zynq-zc702.dts
+++ b/arch/arm/boot/dts/zynq-zc702.dts
@@ -265,7 +265,7 @@
 			reg = <0xf8f02000 0x1000>;
 		} ;
 		ps7_qspi_0: ps7-qspi@e000d000 {
-			clock-names = "ref_clk", "aper_clk";
+			clock-names = "ref_clk", "pclk";
 			clocks = <&clkc 10>, <&clkc 43>;
 			compatible = "xlnx,zynq-qspi-1.0";
 			interrupt-parent = <&ps7_scugic_0>;
diff --git a/arch/arm/boot/dts/zynq-zc706.dts b/arch/arm/boot/dts/zynq-zc706.dts
index fcaf089..56b319a 100644
--- a/arch/arm/boot/dts/zynq-zc706.dts
+++ b/arch/arm/boot/dts/zynq-zc706.dts
@@ -250,7 +250,7 @@
 			reg = <0xf8f02000 0x1000>;
 		} ;
 		ps7_qspi_0: ps7-qspi@e000d000 {
-			clock-names = "ref_clk", "aper_clk";
+			clock-names = "ref_clk", "pclk";
 			clocks = <&clkc 10>, <&clkc 43>;
 			compatible = "xlnx,zynq-qspi-1.0";
 			interrupt-parent = <&ps7_scugic_0>;
diff --git a/arch/arm/boot/dts/zynq-zed.dts b/arch/arm/boot/dts/zynq-zed.dts
index 4cb7139..38b4a9b 100644
--- a/arch/arm/boot/dts/zynq-zed.dts
+++ b/arch/arm/boot/dts/zynq-zed.dts
@@ -174,7 +174,7 @@
 			reg = <0xf8f02000 0x1000>;
 		} ;
 		ps7_qspi_0: ps7-qspi@e000d000 {
-			clock-names = "ref_clk", "aper_clk";
+			clock-names = "ref_clk", "pclk";
 			clocks = <&clkc 10>, <&clkc 43>;
 			compatible = "xlnx,zynq-qspi-1.0";
 			interrupt-parent = <&ps7_scugic_0>;
diff --git a/drivers/spi/spi-zynq-qspi.c b/drivers/spi/spi-zynq-qspi.c
index 70464b8..2432d51 100644
--- a/drivers/spi/spi-zynq-qspi.c
+++ b/drivers/spi/spi-zynq-qspi.c
@@ -122,8 +122,8 @@
 /**
  * struct zynq_qspi - Defines qspi driver instance
  * @regs:		Virtual address of the QSPI controller registers
- * @devclk:		Pointer to the peripheral clock
- * @aperclk:		Pointer to the APER clock
+ * @refclk:		Pointer to the peripheral clock
+ * @pclk:		Pointer to the APB clock
  * @irq:		IRQ number
  * @config_reg_lock:	Lock used for accessing configuration register
  * @txbuf:		Pointer to the TX buffer
@@ -134,8 +134,8 @@
  */
 struct zynq_qspi {
 	void __iomem *regs;
-	struct clk *devclk;
-	struct clk *aperclk;
+	struct clk *refclk;
+	struct clk *pclk;
 	int irq;
 	const void *txbuf;
 	void *rxbuf;
@@ -278,8 +278,8 @@ static int zynq_prepare_transfer_hardware(struct spi_master *master)
 {
 	struct zynq_qspi *xqspi = spi_master_get_devdata(master);
 
-	clk_enable(xqspi->devclk);
-	clk_enable(xqspi->aperclk);
+	clk_enable(xqspi->refclk);
+	clk_enable(xqspi->pclk);
 	zynq_qspi_write(xqspi, ZYNQ_QSPI_ENABLE_OFFSET,
 			ZYNQ_QSPI_ENABLE_ENABLE_MASK);
 
@@ -300,8 +300,8 @@ static int zynq_unprepare_transfer_hardware(struct spi_master *master)
 	struct zynq_qspi *xqspi = spi_master_get_devdata(master);
 
 	zynq_qspi_write(xqspi, ZYNQ_QSPI_ENABLE_OFFSET, 0);
-	clk_disable(xqspi->devclk);
-	clk_disable(xqspi->aperclk);
+	clk_disable(xqspi->refclk);
+	clk_disable(xqspi->pclk);
 
 	return 0;
 }
@@ -364,7 +364,7 @@ static int zynq_qspi_setup_transfer(struct spi_device *qspi,
 	/* Set the clock frequency */
 	/* If req_hz == 0, default to lowest speed */
 	while ((baud_rate_val < ZYNQ_QSPI_BAUD_DIV_MAX)  &&
-	       (clk_get_rate(xqspi->devclk) / (2 << baud_rate_val)) > req_hz)
+	       (clk_get_rate(xqspi->refclk) / (2 << baud_rate_val)) > req_hz)
 		baud_rate_val++;
 
 	config_reg = zynq_qspi_read(xqspi, ZYNQ_QSPI_CONFIG_OFFSET);
@@ -596,16 +596,16 @@ static int __maybe_unused zynq_qspi_resume(struct device *dev)
 	struct zynq_qspi *xqspi = spi_master_get_devdata(master);
 	int ret = 0;
 
-	ret = clk_enable(xqspi->aperclk);
+	ret = clk_enable(xqspi->pclk);
 	if (ret) {
-		dev_err(dev, "Cannot enable APER clock.\n");
+		dev_err(dev, "Cannot enable APB clock.\n");
 		return ret;
 	}
 
-	ret = clk_enable(xqspi->devclk);
+	ret = clk_enable(xqspi->refclk);
 	if (ret) {
 		dev_err(dev, "Cannot enable device clock.\n");
-		clk_disable(xqspi->aperclk);
+		clk_disable(xqspi->pclk);
 		return ret;
 	}
 
@@ -653,30 +653,30 @@ static int zynq_qspi_probe(struct platform_device *pdev)
 		dev_warn(&pdev->dev, "couldn't determine configuration info "
 			 "about dual memories. defaulting to single memory\n");
 
-	xqspi->aperclk = clk_get(&pdev->dev, "aper_clk");
-	if (IS_ERR(xqspi->aperclk)) {
-		dev_err(&pdev->dev, "aper_clk clock not found.\n");
-		ret = PTR_ERR(xqspi->aperclk);
+	xqspi->pclk = devm_clk_get(&pdev->dev, "pclk");
+	if (IS_ERR(xqspi->pclk)) {
+		dev_err(&pdev->dev, "pclk clock not found.\n");
+		ret = PTR_ERR(xqspi->pclk);
 		goto remove_master;
 	}
 
-	xqspi->devclk = clk_get(&pdev->dev, "ref_clk");
-	if (IS_ERR(xqspi->devclk)) {
+	xqspi->refclk = devm_clk_get(&pdev->dev, "ref_clk");
+	if (IS_ERR(xqspi->refclk)) {
 		dev_err(&pdev->dev, "ref_clk clock not found.\n");
-		ret = PTR_ERR(xqspi->devclk);
-		goto clk_put_aper;
+		ret = PTR_ERR(xqspi->refclk);
+		goto remove_master;
 	}
 
-	ret = clk_prepare_enable(xqspi->aperclk);
+	ret = clk_prepare_enable(xqspi->pclk);
 	if (ret) {
-		dev_err(&pdev->dev, "Unable to enable APER clock.\n");
-		goto clk_put;
+		dev_err(&pdev->dev, "Unable to enable APB clock.\n");
+		goto remove_master;
 	}
 
-	ret = clk_prepare_enable(xqspi->devclk);
+	ret = clk_prepare_enable(xqspi->refclk);
 	if (ret) {
 		dev_err(&pdev->dev, "Unable to enable device clock.\n");
-		goto clk_dis_aper;
+		goto clk_dis_pclk;
 	}
 
 	/* QSPI controller initializations */
@@ -710,7 +710,7 @@ static int zynq_qspi_probe(struct platform_device *pdev)
 	master->unprepare_transfer_hardware = zynq_unprepare_transfer_hardware;
 	master->flags = SPI_MASTER_QUAD_MODE;
 
-	master->max_speed_hz = clk_get_rate(xqspi->devclk) / 2;
+	master->max_speed_hz = clk_get_rate(xqspi->refclk) / 2;
 	master->bits_per_word_mask = SPI_BPW_MASK(8);
 
 	ret = spi_register_master(master);
@@ -722,13 +722,9 @@ static int zynq_qspi_probe(struct platform_device *pdev)
 	return ret;
 
 clk_dis_all:
-	clk_disable_unprepare(xqspi->devclk);
-clk_dis_aper:
-	clk_disable_unprepare(xqspi->aperclk);
-clk_put:
-	clk_put(xqspi->devclk);
-clk_put_aper:
-	clk_put(xqspi->aperclk);
+	clk_disable_unprepare(xqspi->refclk);
+clk_dis_pclk:
+	clk_disable_unprepare(xqspi->pclk);
 remove_master:
 	spi_master_put(master);
 	return ret;
@@ -751,11 +747,8 @@ static int zynq_qspi_remove(struct platform_device *pdev)
 
 	zynq_qspi_write(xqspi, ZYNQ_QSPI_ENABLE_OFFSET, 0);
 
-	clk_disable_unprepare(xqspi->devclk);
-	clk_disable_unprepare(xqspi->aperclk);
-	clk_put(xqspi->devclk);
-	clk_put(xqspi->aperclk);
-
+	clk_disable_unprepare(xqspi->refclk);
+	clk_disable_unprepare(xqspi->pclk);
 
 	spi_unregister_master(master);
 
-- 
1.7.5.4

