From 7b316b65f4d3b494edff23754007d1ec38595398 Mon Sep 17 00:00:00 2001
From: Davor Joja <davorjoja@logicbricks.com>
Date: Tue, 19 May 2015 17:16:10 +0530
Subject: [PATCH 526/793] gpu: drm: xylon: Added property restore
 functionality

Added property restore functionality in driver close procedure, restoring crtc
and plane properties.

Signed-off-by: Davor Joja <davorjoja@logicbricks.com>
Signed-off-by: Radhey Shyam Pandey <radheys@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Tested-by: Christian Kohn <christian.kohn@xilinx.com>
---
 drivers/gpu/drm/xylon/xylon_crtc.c  |   44 ++++++++++++++++++++++++++++------
 drivers/gpu/drm/xylon/xylon_crtc.h  |    2 +
 drivers/gpu/drm/xylon/xylon_drv.c   |    2 +
 drivers/gpu/drm/xylon/xylon_plane.c |   42 +++++++++++++++++++++++++++++++++
 drivers/gpu/drm/xylon/xylon_plane.h |    3 ++
 5 files changed, 85 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/xylon/xylon_crtc.c b/drivers/gpu/drm/xylon/xylon_crtc.c
index a7e2eb6..fb56429 100644
--- a/drivers/gpu/drm/xylon/xylon_crtc.c
+++ b/drivers/gpu/drm/xylon/xylon_crtc.c
@@ -38,8 +38,11 @@
 struct xylon_drm_crtc_properties {
 	struct drm_property *bg_color;
 	struct drm_property *layer_update;
+	bool layer_update_initval;
 	struct drm_property *pixel_data_polarity;
+	bool pixel_data_polarity_initval;
 	struct drm_property *pixel_data_trigger;
+	bool pixel_data_trigger_initval;
 };
 
 struct xylon_drm_crtc {
@@ -481,17 +484,20 @@ static void xylon_drm_crtc_properties_initial_value(struct drm_crtc *base_crtc)
 	struct drm_mode_object *obj = &base_crtc->base;
 	struct xylon_drm_crtc *crtc = to_xylon_crtc(base_crtc);
 	struct xylon_drm_crtc_properties *props = &crtc->properties;
-	bool val;
+	bool *val;
 
-	val = xylon_cvc_get_info(crtc->cvc, LOGICVC_INFO_LAYER_UPDATE, 0);
-	drm_object_property_set_value(obj, props->layer_update, val);
+	val = &props->layer_update_initval;
+	*val = xylon_cvc_get_info(crtc->cvc, LOGICVC_INFO_LAYER_UPDATE, 0);
+	drm_object_property_set_value(obj, props->layer_update, *val);
 
-	val = xylon_cvc_get_info(crtc->cvc, LOGICVC_INFO_PIXEL_DATA_INVERT, 0);
-	drm_object_property_set_value(obj, props->pixel_data_polarity, val);
+	val = &props->pixel_data_polarity_initval;
+	*val = xylon_cvc_get_info(crtc->cvc, LOGICVC_INFO_PIXEL_DATA_INVERT, 0);
+	drm_object_property_set_value(obj, props->pixel_data_polarity, *val);
 
-	val = xylon_cvc_get_info(crtc->cvc,
-				 LOGICVC_INFO_PIXEL_DATA_TRIGGER_INVERT, 0);
-	drm_object_property_set_value(obj, props->pixel_data_trigger, val);
+	val = &props->pixel_data_trigger_initval;
+	*val = xylon_cvc_get_info(crtc->cvc,
+				  LOGICVC_INFO_PIXEL_DATA_TRIGGER_INVERT, 0);
+	drm_object_property_set_value(obj, props->pixel_data_trigger, *val);
 }
 
 struct drm_crtc *xylon_drm_crtc_create(struct drm_device *dev)
@@ -570,3 +576,25 @@ struct drm_crtc *xylon_drm_crtc_create(struct drm_device *dev)
 err_out:
 	return ERR_PTR(ret);
 }
+
+void xylon_drm_crtc_properties_restore(struct drm_crtc *base_crtc)
+{
+	struct drm_mode_object *obj = &base_crtc->base;
+	struct xylon_drm_crtc *crtc = to_xylon_crtc(base_crtc);
+	struct xylon_drm_crtc_properties *props = &crtc->properties;
+
+	xylon_drm_crtc_set_property(base_crtc, props->layer_update,
+				    props->layer_update_initval);
+	drm_object_property_set_value(obj, props->layer_update,
+				      props->layer_update_initval);
+	xylon_drm_crtc_set_property(base_crtc, props->pixel_data_polarity,
+				    props->pixel_data_polarity_initval);
+	drm_object_property_set_value(obj, props->pixel_data_polarity,
+				      props->pixel_data_polarity_initval);
+	xylon_drm_crtc_set_property(base_crtc, props->pixel_data_trigger,
+				    props->pixel_data_trigger_initval);
+	drm_object_property_set_value(obj, props->pixel_data_trigger,
+				      props->pixel_data_trigger_initval);
+
+	xylon_drm_plane_properties_restore(crtc->manager);
+}
diff --git a/drivers/gpu/drm/xylon/xylon_crtc.h b/drivers/gpu/drm/xylon/xylon_crtc.h
index ee6b772..b260f14 100644
--- a/drivers/gpu/drm/xylon/xylon_crtc.h
+++ b/drivers/gpu/drm/xylon/xylon_crtc.h
@@ -49,4 +49,6 @@ int xylon_drm_crtc_get_param(struct drm_crtc *base_crtc, unsigned int *p,
 
 struct drm_crtc *xylon_drm_crtc_create(struct drm_device *dev);
 
+void xylon_drm_crtc_properties_restore(struct drm_crtc *base_crtc);
+
 #endif /* _XYLON_DRM_CRTC_H_ */
diff --git a/drivers/gpu/drm/xylon/xylon_drv.c b/drivers/gpu/drm/xylon/xylon_drv.c
index d1d1ba0..aa53124 100644
--- a/drivers/gpu/drm/xylon/xylon_drv.c
+++ b/drivers/gpu/drm/xylon/xylon_drv.c
@@ -161,6 +161,8 @@ static void xylon_drm_lastclose(struct drm_device *dev)
 {
 	struct xylon_drm_device *xdev = dev->dev_private;
 
+	xylon_drm_crtc_properties_restore(xdev->crtc);
+
 	xylon_drm_fbdev_restore_mode(xdev->fbdev);
 }
 
diff --git a/drivers/gpu/drm/xylon/xylon_plane.c b/drivers/gpu/drm/xylon/xylon_plane.c
index 7c7248d..e4dbc7c 100644
--- a/drivers/gpu/drm/xylon/xylon_plane.c
+++ b/drivers/gpu/drm/xylon/xylon_plane.c
@@ -360,6 +360,48 @@ err_init:
 	return ERR_PTR(ret);
 }
 
+void xylon_drm_plane_properties_restore(struct xylon_drm_plane_manager *manager)
+{
+	struct drm_mode_object *obj;
+	struct drm_plane *base_plane;
+	struct xylon_drm_plane *plane;
+	struct xylon_drm_plane_properties *props;
+	struct xylon_drm_plane_op op;
+	int i;
+
+	for (i = 0; i < manager->planes; i++) {
+		if (!manager->plane[i])
+			continue;
+
+		plane = manager->plane[i];
+		base_plane = &plane->base;
+		obj = &base_plane->base;
+		props = &plane->properties;
+
+		op.id = XYLON_DRM_PLANE_OP_ID_COLOR_TRANSPARENCY;
+		op.param = false;
+		xylon_drm_plane_op(base_plane, &op);
+		drm_object_property_set_value(obj, props->color_transparency,
+					      false);
+
+		op.id = XYLON_DRM_PLANE_OP_ID_INTERLACE;
+		xylon_drm_plane_op(base_plane, &op);
+		drm_object_property_set_value(obj, props->interlace, false);
+
+		op.id = XYLON_DRM_PLANE_OP_ID_TRANSPARENCY;
+		op.param = XYLON_DRM_PROPERTY_ALPHA_MAX;
+		xylon_drm_plane_op(base_plane, &op);
+		drm_object_property_set_value(obj, props->transparency,
+					      XYLON_DRM_PROPERTY_ALPHA_MAX);
+
+		op.id = XYLON_DRM_PLANE_OP_ID_TRANSPARENT_COLOR;
+		op.param = XYLON_DRM_PROPERTY_COLOR_MIN;
+		xylon_drm_plane_op(base_plane, &op);
+		drm_object_property_set_value(obj, props->transparent_color,
+					      XYLON_DRM_PROPERTY_COLOR_MIN);
+	}
+}
+
 int xylon_drm_plane_create_all(struct xylon_drm_plane_manager *manager,
 			       unsigned int possible_crtcs,
 			       unsigned int primary_id)
diff --git a/drivers/gpu/drm/xylon/xylon_plane.h b/drivers/gpu/drm/xylon/xylon_plane.h
index a057a0a..22f0353 100644
--- a/drivers/gpu/drm/xylon/xylon_plane.h
+++ b/drivers/gpu/drm/xylon/xylon_plane.h
@@ -44,6 +44,9 @@ int xylon_drm_plane_fb_set(struct drm_plane *base_plane,
 			   u32 src_w, u32 src_h);
 void xylon_drm_plane_commit(struct drm_plane *base_plane);
 
+void
+xylon_drm_plane_properties_restore(struct xylon_drm_plane_manager *manager);
+
 int xylon_drm_plane_create_all(struct xylon_drm_plane_manager *manager,
 			       unsigned int possible_crtcs,
 			       unsigned int primary_id);
-- 
1.7.5.4

