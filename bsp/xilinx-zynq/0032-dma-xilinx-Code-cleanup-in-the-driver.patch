From a45d4eea9aeb41569b778e24f681a48dfbf816f9 Mon Sep 17 00:00:00 2001
From: Kedareswara rao Appana <appana.durga.rao@xilinx.com>
Date: Sat, 29 Aug 2015 13:19:03 +0530
Subject: [PATCH 32/53] dma: xilinx: Code cleanup in the driver

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

This patch includes
- Remove unnecessary driver apis'.
- Fix documentation of api's .
- Remove unnecessary code.
- Increase descriptor allocation count.

Signed-off-by: Kedareswara rao Appana <appanad@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 7a09b7f80b12dc16b17e878fe4f5950f5d70e0dc)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/dma/xilinx/xilinx_dma.c |   34 +++++-----------------------------
 1 file changed, 5 insertions(+), 29 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_dma.c b/drivers/dma/xilinx/xilinx_dma.c
index 2a9ebd0..1eaf34f 100644
--- a/drivers/dma/xilinx/xilinx_dma.c
+++ b/drivers/dma/xilinx/xilinx_dma.c
@@ -81,7 +81,8 @@
 #define XILINX_DMA_LOOP_COUNT		1000000
 
 /* Maximum number of Descriptors */
-#define XILINX_DMA_NUM_DESCS		64
+#define XILINX_DMA_NUM_DESCS		255
+#define XILINX_DMA_COALESCE_MAX		255
 #define XILINX_DMA_NUM_APP_WORDS	5
 
 #define xilinx_dma_poll_timeout(chan, reg, val, cond, delay_us, timeout_us) \
@@ -155,8 +156,8 @@ struct xilinx_dma_tx_descriptor {
  * @irq: Channel IRQ
  * @id: Channel ID
  * @has_sg: Support scatter transfers
+ * @idle: Check for channel idle
  * @err: Channel has errors
- * @idle: Channel status
  * @tasklet: Cleanup work after irq
  * @residue: Residue
  * @desc_pendingcount: Descriptor pending count
@@ -200,6 +201,7 @@ struct xilinx_dma_device {
 	bool has_sg;
 };
 
+/* Macros */
 #define to_xilinx_chan(chan) \
 	container_of(chan, struct xilinx_dma_chan, common)
 #define to_dma_tx_descriptor(tx) \
@@ -236,7 +238,7 @@ static inline void dma_ctrl_write(struct xilinx_dma_chan *chan, u32 reg,
 
 #if defined(CONFIG_PHYS_ADDR_T_64BIT)
 static inline void dma_ctrl_writeq(struct xilinx_dma_chan *chan, u32 reg,
-				u64 value)
+				   u64 value)
 {
 	dma_writeq(chan, chan->ctrl_offset + reg, value);
 }
@@ -522,32 +524,6 @@ static enum dma_status xilinx_dma_tx_status(struct dma_chan *dchan,
 }
 
 /**
- * xilinx_dma_is_running - Check if DMA channel is running
- * @chan: Driver specific DMA channel
- *
- * Return: 'true' if running, 'false' if not.
- */
-static bool xilinx_dma_is_running(struct xilinx_dma_chan *chan)
-{
-	return !(dma_ctrl_read(chan, XILINX_DMA_REG_STATUS) &
-		 XILINX_DMA_SR_HALTED_MASK) &&
-		(dma_ctrl_read(chan, XILINX_DMA_REG_CONTROL) &
-		 XILINX_DMA_CR_RUNSTOP_MASK);
-}
-
-/**
- * xilinx_dma_is_idle - Check if DMA channel is idle
- * @chan: Driver specific DMA channel
- *
- * Return: 'true' if idle, 'false' if not.
- */
-static bool xilinx_dma_is_idle(struct xilinx_dma_chan *chan)
-{
-	return dma_ctrl_read(chan, XILINX_DMA_REG_STATUS) &
-		XILINX_DMA_SR_IDLE_MASK;
-}
-
-/**
  * xilinx_dma_halt - Halt DMA channel
  * @chan: Driver specific DMA channel
  */
-- 
1.7.10.4

