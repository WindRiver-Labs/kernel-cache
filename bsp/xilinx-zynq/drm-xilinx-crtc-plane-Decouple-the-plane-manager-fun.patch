From 9cd45001d569a0986f550d47b16ec6d36ae00f13 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Mon, 13 Oct 2014 18:59:22 -0700
Subject: [PATCH 442/793] drm: xilinx: crtc/plane: Decouple the plane manager
 functions

With the universal plane feature, the CRTC and the plane can be
configured independently. This patch decouples the plane and
the plane manager functions, so that the plane can be configured
separately from the CRTC. The PLANE driver configures planes
with plane functions, while the CRTC can use plane manager
functions along with plane functions.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_crtc.c  |    8 ++++
 drivers/gpu/drm/xilinx/xilinx_drm_plane.c |   56 ++++++++++++++++++++++-------
 drivers/gpu/drm/xilinx/xilinx_drm_plane.h |    5 +++
 3 files changed, 56 insertions(+), 13 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
index a68c3b7..d7f2eab 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
@@ -65,6 +65,7 @@ static void xilinx_drm_crtc_dpms(struct drm_crtc *base_crtc, int dpms)
 
 	switch (dpms) {
 	case DRM_MODE_DPMS_ON:
+		xilinx_drm_plane_manager_dpms(crtc->plane_manager, dpms);
 		xilinx_drm_plane_dpms(crtc->priv_plane, dpms);
 		if (crtc->rgb2yuv)
 			xilinx_rgb2yuv_enable(crtc->rgb2yuv);
@@ -84,6 +85,7 @@ static void xilinx_drm_crtc_dpms(struct drm_crtc *base_crtc, int dpms)
 			xilinx_rgb2yuv_reset(crtc->rgb2yuv);
 		}
 		xilinx_drm_plane_dpms(crtc->priv_plane, dpms);
+		xilinx_drm_plane_manager_dpms(crtc->plane_manager, dpms);
 		break;
 	}
 }
@@ -160,6 +162,9 @@ static int xilinx_drm_crtc_mode_set(struct drm_crtc *base_crtc,
 					 adjusted_mode->vdisplay);
 
 	/* configure a plane: vdma and osd layer */
+	xilinx_drm_plane_manager_mode_set(crtc->plane_manager,
+					  adjusted_mode->hdisplay,
+					  adjusted_mode->vdisplay);
 	ret = xilinx_drm_plane_mode_set(crtc->priv_plane,
 					base_crtc->fb, 0, 0,
 					adjusted_mode->hdisplay,
@@ -183,6 +188,9 @@ static int _xilinx_drm_crtc_mode_set_base(struct drm_crtc *base_crtc,
 	int ret;
 
 	/* configure a plane */
+	xilinx_drm_plane_manager_mode_set(crtc->plane_manager,
+					  base_crtc->hwmode.hdisplay,
+					  base_crtc->hwmode.vdisplay);
 	ret = xilinx_drm_plane_mode_set(crtc->priv_plane,
 					fb, 0, 0,
 					base_crtc->hwmode.hdisplay,
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_plane.c b/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
index 37124ea..a07c0db 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
@@ -142,12 +142,6 @@ void xilinx_drm_plane_dpms(struct drm_plane *base_plane, int dpms)
 			xilinx_osd_layer_set_alpha(plane->osd_layer, 1,
 						   plane->alpha);
 			xilinx_osd_layer_enable(plane->osd_layer);
-			if (plane->priv) {
-				/* set background color as black */
-				xilinx_osd_set_color(manager->osd, 0x0, 0x0,
-						     0x0);
-				xilinx_osd_enable(manager->osd);
-			}
 
 			xilinx_osd_enable_rue(manager->osd);
 		}
@@ -161,8 +155,6 @@ void xilinx_drm_plane_dpms(struct drm_plane *base_plane, int dpms)
 			xilinx_osd_layer_set_dimension(plane->osd_layer,
 						       0, 0, 0, 0);
 			xilinx_osd_layer_disable(plane->osd_layer);
-			if (plane->priv)
-				xilinx_osd_reset(manager->osd);
 
 			xilinx_osd_enable_rue(manager->osd);
 		}
@@ -259,11 +251,6 @@ int xilinx_drm_plane_mode_set(struct drm_plane *base_plane,
 	if (plane->manager->osd) {
 		xilinx_osd_disable_rue(plane->manager->osd);
 
-		/* if a plane is private, it's for crtc */
-		if (plane->priv)
-			xilinx_osd_set_dimension(plane->manager->osd,
-						 crtc_w, crtc_h);
-
 		xilinx_osd_layer_set_dimension(plane->osd_layer, crtc_x, crtc_y,
 					       src_w, src_h);
 
@@ -545,6 +532,49 @@ static void xilinx_drm_plane_attach_property(struct drm_plane *base_plane)
 					   manager->default_alpha);
 }
 
+/**
+ * xilinx_drm_plane_manager_dpms - Set DPMS for the Xilinx plane manager
+ * @manager: Xilinx plane manager object
+ * @dpms: requested DPMS
+ *
+ * Set the Xilinx plane manager to the given DPMS state. This function is
+ * usually called from the CRTC driver with calling xilinx_drm_plane_dpms().
+ */
+void xilinx_drm_plane_manager_dpms(struct xilinx_drm_plane_manager *manager,
+				   int dpms)
+{
+	switch (dpms) {
+	case DRM_MODE_DPMS_ON:
+		if (manager->osd) {
+			xilinx_osd_disable_rue(manager->osd);
+			xilinx_osd_set_color(manager->osd, 0x0, 0x0, 0x0);
+			xilinx_osd_enable(manager->osd);
+			xilinx_osd_enable_rue(manager->osd);
+		}
+		break;
+	default:
+		if (manager->osd)
+			xilinx_osd_reset(manager->osd);
+		break;
+	}
+}
+
+/**
+ * xilinx_drm_plane_manager_mode_set - Set the mode to the Xilinx plane manager
+ * @manager: Xilinx plane manager object
+ * @crtc_w: CRTC width
+ * @crtc_h: CRTC height
+ *
+ * Set the width and height of the Xilinx plane manager. This function is uaully
+ * called from the CRTC driver before calling the xilinx_drm_plane_mode_set().
+ */
+void xilinx_drm_plane_manager_mode_set(struct xilinx_drm_plane_manager *manager,
+				      unsigned int crtc_w, unsigned int crtc_h)
+{
+	if (manager->osd)
+		xilinx_osd_set_dimension(manager->osd, crtc_w, crtc_h);
+}
+
 /* create a plane */
 static struct xilinx_drm_plane *
 xilinx_drm_plane_create(struct xilinx_drm_plane_manager *manager,
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_plane.h b/drivers/gpu/drm/xilinx/xilinx_drm_plane.h
index 0b8dc8c..09db2b8 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_plane.h
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_plane.h
@@ -36,6 +36,11 @@ uint32_t xilinx_drm_plane_get_format(struct drm_plane *base_plane);
 /* plane manager operations */
 struct xilinx_drm_plane_manager;
 
+void
+xilinx_drm_plane_manager_mode_set(struct xilinx_drm_plane_manager *manager,
+				  unsigned int crtc_w, unsigned int crtc_h);
+void xilinx_drm_plane_manager_dpms(struct xilinx_drm_plane_manager *manager,
+				   int dpms);
 struct drm_plane *
 xilinx_drm_plane_create_private(struct xilinx_drm_plane_manager *manager,
 				unsigned int possible_crtcs);
-- 
1.7.5.4

