From b3bf63483c99a5e03a85fbc167e05da4dd3ad7e3 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Fri, 26 Apr 2013 17:07:02 +0800
Subject: [PATCH 08/13] Xilinx: ARM: BSP: unlock SLCR in SMP boot

git://git.xilinx.com/linux-xlnx.git master
commit 08f69a3b86c4c0f92ccf2dfd865ca3e5df3f2f92

For now, the SLCR is being unlocked to allow power
management code to work. This should be reverted
once SLCR unlock/lock is centralized so that it is
locked by default and only unlocked when accessed.

Signed-off-by: John Linn <john.linn@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-zynq/platsmp.c |    2 --
 1 files changed, 0 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-zynq/platsmp.c b/arch/arm/mach-zynq/platsmp.c
index a352cb8..1bf4724 100644
--- a/arch/arm/mach-zynq/platsmp.c
+++ b/arch/arm/mach-zynq/platsmp.c
@@ -58,7 +58,6 @@ static u8 *zero;
  * it is not initialized yet and this code is used for bootup the second CPU
  */
 #define SLCR_UNLOCK	0xDF0D
-#define SLCR_LOCK	0x767B
 
 static u8 *slcr;
 
@@ -104,7 +103,6 @@ int zynq_cpu1_start(u32 address)
 
 		__raw_writel(0x20, slcr + 0x244); /* enable CPU1 */
 		__raw_writel(0x0, slcr + 0x244); /* enable CLK for CPU1 */
-		__raw_writel(SLCR_LOCK, slcr + 0x4); /* LOCK SLCR */
 
 		return 0;
 	}
-- 
1.7.5.4

