From 5b810a0d7a824055dde7d465cd05dcda1698d250 Mon Sep 17 00:00:00 2001
From: John Linn <john.linn@xilinx.com>
Date: Fri, 23 Sep 2011 11:59:18 -0600
Subject: [PATCH 1/3] Xilinx: ARM: BSP: Update of UART for compressed image

Taken from git tree git://git.xilinx.com/linux-xlnx.git:
commit 61f024f359311803c9b87aa4594abbba832366df

This change is for mach-zynq as this was not a problem in
mach-xilinx.

In QEMU, u-boot is not used and the kernel has to initialize
the UART to get any kernel output. The kernel assumes a boot
loader initializes the UART which won't work in QEMU or when
not using u-boot with a Xilinx JTAG probe.

Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 arch/arm/mach-zynq/include/mach/uart.h       |   51 +++++++++++++++++++++++---
 arch/arm/mach-zynq/include/mach/uncompress.h |    1 +
 2 files changed, 47 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-zynq/include/mach/uart.h b/arch/arm/mach-zynq/include/mach/uart.h
index 5c47c97..f0e2125 100644
--- a/arch/arm/mach-zynq/include/mach/uart.h
+++ b/arch/arm/mach-zynq/include/mach/uart.h
@@ -15,11 +15,52 @@
 #ifndef __MACH_UART_H__
 #define __MACH_UART_H__
 
-#define UART_CR_OFFSET		0x00  /* Control Register [8:0] */
-#define UART_SR_OFFSET		0x2C  /* Channel Status [11:0] */
-#define UART_FIFO_OFFSET	0x30  /* FIFO [15:0] or [7:0] */
+#define UART_CR_OFFSET          0x00  /* Control Register [8:0] */
+#define UART_MR_OFFSET          0x04  /* Mode Register [10:0] */
+#define UART_BAUDGEN_OFFSET     0x18  /* Baud Rate Generator [15:0] */
+#define UART_SR_OFFSET          0x2C  /* Channel Status [11:0] */
+#define UART_FIFO_OFFSET        0x30  /* FIFO [15:0] or [7:0] */
+#define UART_BAUDDIV_OFFSET     0x34  /* Baud Rate Divider [7:0] */
 
-#define UART_SR_TXFULL		0x00000010	/* TX FIFO full */
-#define UART_SR_TXEMPTY		0x00000008	/* TX FIFO empty */
+#define UART_CR_TX_EN     	0x00000010  /* TX enabled */
+#define UART_CR_RX_EN       	0x00000004  /* RX enabled */
+#define UART_MR_PARITY_NONE  	0x00000020  /* No parity mode */
+#define UART_SR_TXFULL   	0x00000010  /* TX FIFO full */
+#define UART_SR_TXEMPTY		0x00000008  /* TX FIFO empty */
+
+#define UART_BAUD_9600		0x145	/* 9600 based on 50 MHz clock */
+#define UART_BAUDDIV_9600	0xF	
+#define UART_BAUD_115K		0x56	/* 115200 based on 50 MHz clock */
+#define UART_BAUDDIV_115K	0x4
+
+#ifndef __ASSEMBLY__
+
+#include <linux/io.h>
+#include <asm/processor.h>
+#include <mach/zynq_soc.h>
+#include <mach/uart.h>
+
+static inline void uart_init(void)
+{
+	/* If a boot loader has already initialized the UART to a specific baud
+	   rate then don't touch it, otherwise set it up for 115K baud for when
+	   the kernel is loaded using a Xilinx probe.
+	 */
+
+	if (__raw_readl(IOMEM(LL_UART_PADDR + UART_MR_OFFSET)) != 0)
+		return;
+	
+	/* Enable the transmitter and receiver, the mode for no parity, 1 stop,
+	   8 data bits, and baud rate of 9600 
+	 */
+
+	__raw_writel((UART_CR_TX_EN | UART_CR_RX_EN), IOMEM(LL_UART_PADDR + UART_CR_OFFSET));
+	__raw_writel(UART_MR_PARITY_NONE, IOMEM(LL_UART_PADDR + UART_MR_OFFSET));
+	__raw_writel(UART_BAUD_115K, IOMEM(LL_UART_PADDR + UART_BAUDGEN_OFFSET)); 
+	__raw_writel(UART_BAUDDIV_115K, IOMEM(LL_UART_PADDR + UART_BAUDDIV_OFFSET)); 
+
+}
+
+#endif
 
 #endif
diff --git a/arch/arm/mach-zynq/include/mach/uncompress.h b/arch/arm/mach-zynq/include/mach/uncompress.h
index af4e844..60a69b9 100644
--- a/arch/arm/mach-zynq/include/mach/uncompress.h
+++ b/arch/arm/mach-zynq/include/mach/uncompress.h
@@ -22,6 +22,7 @@
 
 void arch_decomp_setup(void)
 {
+	uart_init();
 }
 
 static inline void flush(void)
-- 
1.7.9.7

