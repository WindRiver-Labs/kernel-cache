From de11e1fc8e4893681f078f69691d6a2e994a4c62 Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Tue, 2 Sep 2014 12:07:00 -0700
Subject: [PATCH 163/182] ARM: zynq: pm: Don't have DDR self-refresh always on

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Apparently, having self-refresh enabled at all times negatively affects
memory performance. Hence, only enable clock-stop at boot and limit
self-refresh to suspend.

Probably related: http://www.xilinx.com/support/answers/47514.htm

Reported-by: Lars-Peter Clausen <lars-peter.clausen@analog.com>
Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 3c556407d6737d81565d3328d6cafb563ad4be2a)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/mach-zynq/pm.c |   24 +++++++++++++++++-------
 1 files changed, 17 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-zynq/pm.c b/arch/arm/mach-zynq/pm.c
index f7f7fd9..f0dd83b 100644
--- a/arch/arm/mach-zynq/pm.c
+++ b/arch/arm/mach-zynq/pm.c
@@ -53,6 +53,7 @@ static void zynq_pm_wake(void)
 
 static int zynq_pm_suspend(unsigned long arg)
 {
+	u32 reg;
 	int (*zynq_suspend_ptr)(void __iomem *, void __iomem *) =
 		(__force void *)ocm_base;
 	int do_ddrpll_bypass = 1;
@@ -61,8 +62,14 @@ static int zynq_pm_suspend(unsigned long arg)
 	zynq_clk_topswitch_disable();
 
 
-	if (!ocm_base || !ddrc_base)
+	if (!ocm_base || !ddrc_base) {
 		do_ddrpll_bypass = 0;
+	} else {
+		/* enable DDRC self-refresh mode */
+		reg = readl(ddrc_base + DDRC_CTRL_REG1_OFFS);
+		reg |= DDRC_SELFREFRESH_MASK;
+		writel(reg, ddrc_base + DDRC_CTRL_REG1_OFFS);
+	}
 
 	if (do_ddrpll_bypass) {
 		/*
@@ -79,6 +86,13 @@ static int zynq_pm_suspend(unsigned long arg)
 		cpu_do_idle();
 	}
 
+	/* disable DDRC self-refresh mode */
+	if (do_ddrpll_bypass) {
+		reg = readl(ddrc_base + DDRC_CTRL_REG1_OFFS);
+		reg &= ~DDRC_SELFREFRESH_MASK;
+		writel(reg, ddrc_base + DDRC_CTRL_REG1_OFFS);
+	}
+
 	/* Topswitch clock stop enable */
 	zynq_clk_topswitch_enable();
 
@@ -219,14 +233,10 @@ int __init zynq_pm_late_init(void)
 		pr_warn("%s: Unable to map DDRC IO memory.\n", __func__);
 	} else {
 		/*
-		 * Enable DDRC self-refresh and clock stop features. The HW
-		 * takes care of entering/exiting the correct modes depending
+		 * Enable DDRC clock stop feature. The HW takes care of
+		 * entering/exiting the correct mode depending
 		 * on activity state.
 		 */
-		reg = readl(ddrc_base + DDRC_CTRL_REG1_OFFS);
-		reg |= DDRC_SELFREFRESH_MASK;
-		writel(reg, ddrc_base + DDRC_CTRL_REG1_OFFS);
-
 		reg = readl(ddrc_base + DDRC_DRAM_PARAM_REG3_OFFS);
 		reg |= DDRC_CLOCKSTOP_MASK;
 		writel(reg, ddrc_base + DDRC_DRAM_PARAM_REG3_OFFS);
-- 
1.7.5.4

