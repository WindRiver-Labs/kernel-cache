From f61930db4c54b8d9eab8aafc943e48ffbae775da Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Thu, 25 Sep 2014 16:07:57 +0300
Subject: [PATCH 298/456] v4l: xilinx: Remove axi- prefix from DT properties

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

The prefix has been removed from the compatible strings, remove it from
the video-width and video-format properties as well.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
(cherry picked from commit 3885cd9dd5b4d801a93242711197d0fa4ad38543)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../devicetree/bindings/media/xilinx/video.txt     |   14 +++++++-------
 .../bindings/media/xilinx/xlnx,video.txt           |    4 ++--
 drivers/media/platform/xilinx/xilinx-vip.c         |    8 ++++----
 3 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/Documentation/devicetree/bindings/media/xilinx/video.txt b/Documentation/devicetree/bindings/media/xilinx/video.txt
index 61f818f..15720e4 100644
--- a/Documentation/devicetree/bindings/media/xilinx/video.txt
+++ b/Documentation/devicetree/bindings/media/xilinx/video.txt
@@ -10,16 +10,16 @@ tree using bindings documented in this directory. Connections between the IP
 cores are represented as defined in ../video-interfaces.txt.
 
 The whole  pipeline is represented by an AMBA bus child node in the device
-tree using bindings documented in ./xlnx,axi-video.txt.
+tree using bindings documented in ./xlnx,video.txt.
 
 Common properties
 -----------------
 
 The following properties are common to all Xilinx video IP cores.
 
-- xlnx,axi-video-format: This property represents a video format transmitted
-  on an AXI bus between video IP cores. How the format relates to the IP core
-  is decribed in the IP core bindings documentation. The following formats are
+- xlnx,video-format: This property represents a video format transmitted on an
+  AXI bus between video IP cores. How the format relates to the IP core is
+  decribed in the IP core bindings documentation. The following formats are
   supported.
 
 	rbg
@@ -31,9 +31,9 @@ The following properties are common to all Xilinx video IP cores.
 	gbrg
 	bggr
 
-- xlnx,axi-video-width: This property qualifies the video format with the
-  sample width expressed as a number of bits per pixel component. All components
-  must use the same width.
+- xlnx,video-width: This property qualifies the video format with the sample
+  width expressed as a number of bits per pixel component. All components must
+  use the same width.
 
 The following table lists the supported formats and widths combinations, along
 with the corresponding media bus pixel code.
diff --git a/Documentation/devicetree/bindings/media/xilinx/xlnx,video.txt b/Documentation/devicetree/bindings/media/xilinx/xlnx,video.txt
index 543b192..5a02270 100644
--- a/Documentation/devicetree/bindings/media/xilinx/xlnx,video.txt
+++ b/Documentation/devicetree/bindings/media/xilinx/xlnx,video.txt
@@ -28,9 +28,9 @@ Required port properties:
 
 Example:
 
-	axi_video_cap {
+	video_cap {
 		compatible = "xlnx,video";
-		dmas = <&axi_vdma_1 1>, <&axi_vdma_3 1>;
+		dmas = <&vdma_1 1>, <&vdma_3 1>;
 		dma-names = "port0", "port1";
 
 		ports {
diff --git a/drivers/media/platform/xilinx/xilinx-vip.c b/drivers/media/platform/xilinx/xilinx-vip.c
index a212f52..174e888 100644
--- a/drivers/media/platform/xilinx/xilinx-vip.c
+++ b/drivers/media/platform/xilinx/xilinx-vip.c
@@ -90,8 +90,8 @@ EXPORT_SYMBOL_GPL(xvip_get_format_by_fourcc);
  * xvip_of_get_format - Parse a device tree node and return format information
  * @node: the device tree node
  *
- * Read the xlnx,axi-video-format and xlnx,axi-video-width properties from the
- * device tree @node passed as an argument and return the corresponding format
+ * Read the xlnx,video-format and xlnx,video-width properties from the device
+ * tree @node passed as an argument and return the corresponding format
  * information.
  *
  * Return: a pointer to the format information structure corresponding to the
@@ -104,11 +104,11 @@ const struct xvip_video_format *xvip_of_get_format(struct device_node *node)
 	u32 width;
 	int ret;
 
-	ret = of_property_read_string(node, "xlnx,axi-video-format", &name);
+	ret = of_property_read_string(node, "xlnx,video-format", &name);
 	if (ret < 0)
 		return ERR_PTR(ret);
 
-	ret = of_property_read_u32(node, "xlnx,axi-video-width", &width);
+	ret = of_property_read_u32(node, "xlnx,video-width", &width);
 	if (ret < 0)
 		return ERR_PTR(ret);
 
-- 
1.7.5.4

