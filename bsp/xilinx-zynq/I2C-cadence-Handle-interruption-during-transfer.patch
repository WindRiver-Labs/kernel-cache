From 6e927e53c7de7eef068010ce2222ec3777295cee Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Fri, 21 Feb 2014 13:28:34 +0530
Subject: [PATCH 195/509] I2C: cadence: Handle interruption during transfer

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 6d9d8f09a33dedf6be6335f6ef22d01bcb0dcf4f

Waiting for a transfer to finish is implemented using 'wait_for_completion_interruptible_timeout()'. But the return value is not properly checked resulting in following bug:
  The wait_for_completion_interruptible_timeout() call will return
  -ERESTARTSYS when the process is interrupted (e.g. ^C) but the code
  doesn't check for this. So the i2c_transfer() call will return len > 0
  and falsely indicate the transfer succeeded!

Reported-by: Andrew Worsley <amworsley@gmail.com>
Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Reviewed-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/i2c/busses/i2c-cadence.c |   11 +++++++----
 1 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/i2c/busses/i2c-cadence.c b/drivers/i2c/busses/i2c-cadence.c
index 6a43e96..0e5404a 100644
--- a/drivers/i2c/busses/i2c-cadence.c
+++ b/drivers/i2c/busses/i2c-cadence.c
@@ -449,11 +449,14 @@ static int cdns_i2c_process_msg(struct cdns_i2c *id, struct i2c_msg *msg,
 		/* Wait for the signal of completion */
 		ret = wait_for_completion_interruptible_timeout(
 							&id->xfer_done, HZ);
-		if (!ret) {
-			dev_err(id->adap.dev.parent,
-				 "timeout waiting on completion\n");
+		if (ret < 1) {
 			cdns_i2c_master_reset(adap);
-			return -ETIMEDOUT;
+			if (!ret) {
+				dev_err(id->adap.dev.parent,
+					"timeout waiting on completion\n");
+				return -ETIMEDOUT;
+			}
+			return ret;
 		}
 		cdns_i2c_writereg(CDNS_I2C_IXR_ALL_INTR_MASK,
 				  CDNS_I2C_IDR_OFFSET);
-- 
1.7.5.4

