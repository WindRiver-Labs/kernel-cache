From 01aa932e8a478949d775173ef8182361a89b61ac Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Tue, 11 Dec 2012 16:09:20 +0100
Subject: [PATCH 068/793] net: xilinx_emacps: Fix some sparse errors

Some functions should be static and remove weird type casting.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 07204f3..156533a 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -1040,7 +1040,7 @@ static void xemacps_reset_hw(struct net_local *lp)
  *         modification.
  * return 0 on success, negative value if not enough BDs.
  **/
-int xemacps_bdringalloc(struct xemacps_bdring *ringptr, unsigned numbd,
+static int xemacps_bdringalloc(struct xemacps_bdring *ringptr, unsigned numbd,
 		struct xemacps_bd **bdptr)
 {
 	/* Enough free BDs available for the request? */
@@ -1062,7 +1062,7 @@ int xemacps_bdringalloc(struct xemacps_bdring *ringptr, unsigned numbd,
  * @bdptr: points to the first of BDs to be unallocated.
  * return 0 on success, negative value if error.
  **/
-int xemacps_bdringunalloc(struct xemacps_bdring *ringptr, unsigned numbd,
+static int xemacps_bdringunalloc(struct xemacps_bdring *ringptr, unsigned numbd,
 		struct xemacps_bd *bdptr)
 {
 	/* Enough BDs in the free state for the request? */
@@ -1109,7 +1109,7 @@ static void print_ring(struct xemacps_bdring *ring)
  * @bdptr: points to the first of BDs to be processed.
  * return 0 on success, negative value if error.
  **/
-int xemacps_bdringtohw(struct xemacps_bdring *ringptr, unsigned numbd,
+static int xemacps_bdringtohw(struct xemacps_bdring *ringptr, unsigned numbd,
 		struct xemacps_bd *bdptr)
 {
 	struct xemacps_bd *curbdptr;
@@ -1161,8 +1161,8 @@ int xemacps_bdringtohw(struct xemacps_bdring *ringptr, unsigned numbd,
  *         examination.
  * return number of BDs processed by hardware.
  **/
-u32 xemacps_bdringfromhwtx(struct xemacps_bdring *ringptr, unsigned bdlimit,
-		struct xemacps_bd **bdptr)
+static u32 xemacps_bdringfromhwtx(struct xemacps_bdring *ringptr,
+		unsigned bdlimit, struct xemacps_bd **bdptr)
 {
 	struct xemacps_bd *curbdptr;
 	u32 bdstr = 0;
@@ -1240,7 +1240,7 @@ u32 xemacps_bdringfromhwtx(struct xemacps_bdring *ringptr, unsigned bdlimit,
  *         examination.
  * return number of BDs processed by hardware.
  **/
-u32 xemacps_bdringfromhwrx(struct xemacps_bdring *ringptr, int bdlimit,
+static u32 xemacps_bdringfromhwrx(struct xemacps_bdring *ringptr, int bdlimit,
 		struct xemacps_bd **bdptr)
 {
 	struct xemacps_bd *curbdptr;
@@ -1299,7 +1299,7 @@ u32 xemacps_bdringfromhwrx(struct xemacps_bdring *ringptr, int bdlimit,
  * @bdptr: the head of BD list returned by xemacps_bdringfromhw().
  * return 0 on success, negative value if error.
  **/
-int xemacps_bdringfree(struct xemacps_bdring *ringptr, unsigned numbd,
+static int xemacps_bdringfree(struct xemacps_bdring *ringptr, unsigned numbd,
 		struct xemacps_bd *bdptr)
 {
 	/* if no bds to free, simply return. */
-- 
1.7.5.4

