From 66eaa545b9bb2107bd99825376b8df201a6f7f75 Mon Sep 17 00:00:00 2001
From: Zhixiong Chi <Zhixiong.Chi@windriver.com>
Date: Thu, 23 Jun 2016 10:14:19 +0800
Subject: [PATCH 3/3] i2c: xi2cps: Do not let signals interrupt I2C transfers

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 7015df5f5dc3e7fdf0ad19baac045b375a50d2b1

Pressing CTRL-C while communicating with an I2C device leads to erratic
behaviour. The cause is that the controller will interrupt the I2C transfer
in progress, and leave the client device in an undefined state. Many
drivers do not handle error return codes on I2C transfers. The calling driver
has no way of telling how much of the transfer has actually completed, so
it cannot reliably determine the device's state.

The best solution here is to not handle signals in the I2C bus driver at all,
but always complete a transaction before returning control.

See for a related patch and discussion on this topic:
http://lkml.org/lkml/2014/1/9/246

Signed-off-by: Mike Looijmans <mike.looijmans@topic.nl>
Acked-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
Signed-off-by: Zhixiong Chi <Zhixiong.Chi@windriver.com>
---
 drivers/i2c/busses/i2c-xilinx_ps.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/drivers/i2c/busses/i2c-xilinx_ps.c b/drivers/i2c/busses/i2c-xilinx_ps.c
index ef36508..9d2c543 100644
--- a/drivers/i2c/busses/i2c-xilinx_ps.c
+++ b/drivers/i2c/busses/i2c-xilinx_ps.c
@@ -527,8 +527,7 @@ retry:
 			xi2cps_msend(id);
 
 		/* Wait for the signal of completion */
-		ret = wait_for_completion_interruptible_timeout(
-							&id->xfer_done, HZ);
+		ret = wait_for_completion_timeout(&id->xfer_done, HZ);
 		if (ret == 0) {
 			dev_err(id->adap.dev.parent,
 				 "timeout waiting on completion\n");
-- 
1.7.5.4

