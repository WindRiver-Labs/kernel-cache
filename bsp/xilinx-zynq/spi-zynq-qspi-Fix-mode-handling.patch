From 1b42089185805a33aeef79a3409d9832ddf3a042 Mon Sep 17 00:00:00 2001
From: Thomas Betker <thomas.betker@rohde-schwarz.com>
Date: Wed, 19 Mar 2014 22:37:44 +0100
Subject: [PATCH 110/509] spi: zynq-qspi: Fix mode handling

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit cb6ca7a0597acb09ab757f6e1f2bb43c932dec3a

spi_setup() already checks spi->mode against master->mode_bits, so we
don't need to check for unexpected mode bits in xqspips_setup() or
xqspips_setup_transfer().

Signed-off-by: Thomas Betker <thomas.betker@rohde-schwarz.com>
Reviewed-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/spi/spi-zynq-qspi.c |   10 ----------
 1 files changed, 0 insertions(+), 10 deletions(-)

diff --git a/drivers/spi/spi-zynq-qspi.c b/drivers/spi/spi-zynq-qspi.c
index 22da3e2..f7e0a73 100644
--- a/drivers/spi/spi-zynq-qspi.c
+++ b/drivers/spi/spi-zynq-qspi.c
@@ -456,12 +456,6 @@ static int zynq_qspi_setup_transfer(struct spi_device *qspi,
 
 	req_hz = (transfer) ? transfer->speed_hz : qspi->max_speed_hz;
 
-	if (qspi->mode & ~MODEBITS) {
-		dev_err(&qspi->dev, "%s, unsupported mode bits %x\n",
-			__func__, qspi->mode & ~MODEBITS);
-		return -EINVAL;
-	}
-
 	if (transfer && (transfer->speed_hz == 0))
 		req_hz = qspi->max_speed_hz;
 
@@ -514,10 +508,6 @@ static int zynq_qspi_setup_transfer(struct spi_device *qspi,
  */
 static int zynq_qspi_setup(struct spi_device *qspi)
 {
-
-	if (qspi->mode & SPI_LSB_FIRST)
-		return -EINVAL;
-
 	if (!qspi->max_speed_hz)
 		return -EINVAL;
 
-- 
1.7.5.4

