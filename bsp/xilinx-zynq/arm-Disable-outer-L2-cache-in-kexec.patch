From ca476fbd2c7291dd19a9745dfdefb45bad6209a3 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Thu, 25 Apr 2013 16:33:15 +0800
Subject: [PATCH] arm: Disable outer (L2) cache in kexec

background:
In the exclusive cache configuration mode, the L1 data
cache of the Cortex-A9 processor and the L2 cache are
exclusive. At any time, a given address is cached in
either L1 data cache or in the L2 cache, but not in both.

Issue:
Before boot kdump kernel, the kexec kernel will jump
a section of the relocate code. And the section code
is in L2 cache. Since It do not be flushed to memory.
After turn off the MMU, the PC of arm will get an invalid
instruct.

Reason:
In kexec kernel, When num_online_cpus equal to 1, the
outer_disable will be called. In kexec boot kdump kernel,
the other CPU will be not disabled. so the num_online_cpus
have not return 1. The outer_disable function is skip.

Resolve:
Disabling L2 before __soft_restart cures the problem.

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/kernel/process.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/arch/arm/kernel/process.c b/arch/arm/kernel/process.c
index 53ed6c1..8cb4033 100644
--- a/arch/arm/kernel/process.c
+++ b/arch/arm/kernel/process.c
@@ -136,7 +136,9 @@ void soft_restart(unsigned long addr)
 	local_fiq_disable();
 
 	/* Disable the L2 if we're the last man standing. */
+#ifndef CONFIG_KEXEC
 	if (num_online_cpus() == 1)
+#endif
 		outer_disable();
 
 	/* Change to the new stack and continue with the reset. */
-- 
1.7.5.4

