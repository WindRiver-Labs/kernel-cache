From d86396a1dd29e496930b9a44a72368ddcf667751 Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Fri, 7 Mar 2014 18:58:14 +0530
Subject: [PATCH 066/509] SPI: zynq: Corrected upper limit for baud_rate_val
 in loop

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit ddbb5162ce4dc462f005c8dfae8a722655c82919

In the loop where baud rate divisor value to be written to the
config register is calculated, the check was "baud_rate_val < 8"
which resulted in baud rate divisor field being set to '000'
which is invalid. Changed check to "baud_rate_val < 7".

Reported-by: Thomas Betker <thomas.betker@rohde-schwarz.com>
Reported-by: Ted Roth <Ted.Roth@covidien.com>
Signed-off-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/spi/spi-zynq.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/spi/spi-zynq.c b/drivers/spi/spi-zynq.c
index 2cb5eb8..30eab7d 100644
--- a/drivers/spi/spi-zynq.c
+++ b/drivers/spi/spi-zynq.c
@@ -239,8 +239,8 @@ static int zynq_spi_setup_transfer(struct spi_device *spi,
 
 	/* Set the clock frequency */
 	if (xspi->speed_hz != req_hz) {
-		baud_rate_val = 0;
-		while ((baud_rate_val < 8) && (frequency /
+		baud_rate_val = 1;	/* first valid value is 1 */
+		while ((baud_rate_val < 7) && (frequency /
 					(2 << baud_rate_val)) > req_hz)
 			baud_rate_val++;
 
-- 
1.7.5.4

