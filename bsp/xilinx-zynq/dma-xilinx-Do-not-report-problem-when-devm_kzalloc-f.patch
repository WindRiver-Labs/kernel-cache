From d1aca27b9a02437823ba60325115b1a52396f7ee Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Mon, 30 Sep 2013 10:30:07 +0200
Subject: [PATCH 276/509] dma: xilinx: Do not report problem when devm_kzalloc
 failed

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit acb91b7d3164bde8fe5c353c58b97909fd3f6de0

This error message is reported by the core itself that's why
not needed to report it in the driver too.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/dma/xilinx/xilinx_axicdma.c |    4 +---
 drivers/dma/xilinx/xilinx_axidma.c  |    8 ++------
 2 files changed, 3 insertions(+), 9 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_axicdma.c b/drivers/dma/xilinx/xilinx_axicdma.c
index 7158131..c4417a4 100644
--- a/drivers/dma/xilinx/xilinx_axicdma.c
+++ b/drivers/dma/xilinx/xilinx_axicdma.c
@@ -824,10 +824,8 @@ static int xilinx_cdma_chan_probe(struct xilinx_cdma_device *xdev,
 
 	/* alloc channel */
 	chan = devm_kzalloc(xdev->dev, sizeof(*chan), GFP_KERNEL);
-	if (!chan) {
-		dev_err(xdev->dev, "no free memory for DMA channels!\n");
+	if (!chan)
 		return -ENOMEM;
-	}
 
 	chan->feature = feature;
 	chan->max_len = XILINX_CDMA_MAX_TRANS_LEN;
diff --git a/drivers/dma/xilinx/xilinx_axidma.c b/drivers/dma/xilinx/xilinx_axidma.c
index f125f9a..0a922ec 100644
--- a/drivers/dma/xilinx/xilinx_axidma.c
+++ b/drivers/dma/xilinx/xilinx_axidma.c
@@ -914,10 +914,8 @@ static int xilinx_dma_chan_probe(struct xilinx_dma_device *xdev,
 
 	/* alloc channel */
 	chan = devm_kzalloc(xdev->dev, sizeof(*chan), GFP_KERNEL);
-	if (!chan) {
-		dev_err(xdev->dev, "no free memory for DMA channels!\n");
+	if (!chan)
 		return -ENOMEM;
-	}
 
 	chan->feature = feature;
 	chan->max_len = XILINX_DMA_MAX_TRANS_LEN;
@@ -1021,10 +1019,8 @@ static int xilinx_dma_probe(struct platform_device *pdev)
 
 	xdev = devm_kzalloc(&pdev->dev, sizeof(struct xilinx_dma_device),
 			    GFP_KERNEL);
-	if (!xdev) {
-		dev_err(&pdev->dev, "Not enough memory for device\n");
+	if (!xdev)
 		return -ENOMEM;
-	}
 
 	xdev->dev = &(pdev->dev);
 	INIT_LIST_HEAD(&xdev->common.channels);
-- 
1.7.5.4

