From 2769c94b326ec804f39f6f3e3a600c0d0dc64aca Mon Sep 17 00:00:00 2001
From: Thomas Betker <thomas.betker@rohde-schwarz.com>
Date: Sun, 21 Jun 2015 17:46:15 +0200
Subject: [PATCH 541/793] net: emacps: Fix gmii2rgmii_phy_dev disconnect

In xemacps_mii_probe(), when connecting lp->phy_node fails, clean up
and disconnect lp->gmii2rgmii_phy_dev [which may be already connected].

In xemacps_close(), check lp->gmii2rgmii_phy_dev before disconnecting
it, not lp->gmii2rgmii_phy_node.

Signed-off-by: Thomas Betker <thomas.betker@rohde-schwarz.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 5a8e313..ebd7942 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -841,6 +841,10 @@ static int xemacps_mii_probe(struct net_device *ndev)
 
 	if (!phydev) {
 		dev_err(&lp->pdev->dev, "%s: no PHY found\n", ndev->name);
+		if (lp->gmii2rgmii_phy_dev) {
+			phy_disconnect(lp->gmii2rgmii_phy_dev);
+			lp->gmii2rgmii_phy_dev = NULL;
+		}
 		return -1;
 	}
 
@@ -2112,7 +2116,7 @@ static int xemacps_close(struct net_device *ndev)
 	tasklet_disable(&lp->tx_bdreclaim_tasklet);
 	if (lp->phy_dev)
 		phy_disconnect(lp->phy_dev);
-	if (lp->gmii2rgmii_phy_node)
+	if (lp->gmii2rgmii_phy_dev)
 		phy_disconnect(lp->gmii2rgmii_phy_dev);
 	netif_carrier_off(ndev);
 
-- 
1.7.5.4

