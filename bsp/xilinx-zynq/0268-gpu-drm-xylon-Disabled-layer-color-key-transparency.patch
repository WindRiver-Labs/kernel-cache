From c3df2ffb9c1d643a408473aea7e55f9c54b8de70 Mon Sep 17 00:00:00 2001
From: Davor Joja <davorjoja@logicbricks.com>
Date: Mon, 10 Nov 2014 15:31:59 +0100
Subject: [PATCH 268/290] gpu: drm: xylon: Disabled layer color key
 transparency

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Added functionality to have by default disabled layer color key transparency for
all available layers (planes).

Signed-off-by: Davor Joja <davorjoja@logicbricks.com>
Tested-by: Christian Kohn <christian.kohn@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 1eadb04b060b0fbfceab3e76b41885b676802506)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/xylon/xylon_crtc.c    |  7 ++++++-
 drivers/gpu/drm/xylon/xylon_logicvc.c | 15 ++++++++++-----
 drivers/gpu/drm/xylon/xylon_plane.c   |  5 +++++
 3 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/xylon/xylon_crtc.c b/drivers/gpu/drm/xylon/xylon_crtc.c
index a86bc98..b7f29a8 100644
--- a/drivers/gpu/drm/xylon/xylon_crtc.c
+++ b/drivers/gpu/drm/xylon/xylon_crtc.c
@@ -348,7 +348,7 @@ static int xylon_drm_crtc_set_property(struct drm_crtc *base_crtc,
 		else
 			xylon_drm_crtc_dpms(base_crtc, DRM_MODE_DPMS_OFF);
 	} else if (property == props->color_transparency) {
-		op.id = XYLON_DRM_PLANE_OP_ID_COLOR_TRANSPARENCY,
+		op.id = XYLON_DRM_PLANE_OP_ID_COLOR_TRANSPARENCY;
 		op.param = (bool)val;
 	} else if (property == props->interlace) {
 		op.id = XYLON_DRM_PLANE_OP_ID_INTERLACE;
@@ -604,8 +604,13 @@ static void xylon_drm_crtc_properties_initial_value(struct drm_crtc *base_crtc)
 	struct drm_mode_object *obj = &base_crtc->base;
 	struct xylon_drm_crtc *crtc = to_xylon_crtc(base_crtc);
 	struct xylon_drm_crtc_properties *props = &crtc->properties;
+	struct xylon_drm_plane_op op;
 	bool val;
 
+	op.id = XYLON_DRM_PLANE_OP_ID_COLOR_TRANSPARENCY;
+	op.param = false;
+	xylon_drm_plane_op(crtc->private, &op);
+
 	val = xylon_cvc_get_info(crtc->cvc,
 				 LOGICVC_INFO_LAYER_COLOR_TRANSPARENCY,
 				 crtc->private_id);
diff --git a/drivers/gpu/drm/xylon/xylon_logicvc.c b/drivers/gpu/drm/xylon/xylon_logicvc.c
index 2f14f47..64132f1 100644
--- a/drivers/gpu/drm/xylon/xylon_logicvc.c
+++ b/drivers/gpu/drm/xylon/xylon_logicvc.c
@@ -219,7 +219,6 @@ struct xylon_cvc_layer_data {
 	void __iomem *clut_base;
 	dma_addr_t vmem_pbase;
 	struct xylon_cvc *cvc;
-	unsigned char ctrl_flags;
 };
 
 struct xylon_cvc {
@@ -420,9 +419,12 @@ void xylon_cvc_layer_enable(struct xylon_cvc *cvc, int id)
 {
 	struct xylon_cvc_layer_data *layer_data = cvc->layer_data[id];
 	struct xylon_cvc_register_access *reg_access = &cvc->reg_access;
+	u32 regval = reg_access->xylon_cvc_get_reg_val(layer_data->base,
+						       LOGICVC_LAYER_CTRL_ROFF,
+						       layer_data);
 
-	layer_data->ctrl_flags |= LOGICVC_LAYER_CTRL_ENABLE;
-	reg_access->xylon_cvc_set_reg_val(layer_data->ctrl_flags,
+	regval |= LOGICVC_LAYER_CTRL_ENABLE;
+	reg_access->xylon_cvc_set_reg_val(regval,
 					  layer_data->base,
 					  LOGICVC_LAYER_CTRL_ROFF,
 					  layer_data);
@@ -432,9 +434,12 @@ void xylon_cvc_layer_disable(struct xylon_cvc *cvc, int id)
 {
 	struct xylon_cvc_layer_data *layer_data = cvc->layer_data[id];
 	struct xylon_cvc_register_access *reg_access = &cvc->reg_access;
+	u32 regval = reg_access->xylon_cvc_get_reg_val(layer_data->base,
+						       LOGICVC_LAYER_CTRL_ROFF,
+						       layer_data);
 
-	layer_data->ctrl_flags &= (~LOGICVC_LAYER_CTRL_ENABLE);
-	reg_access->xylon_cvc_set_reg_val(layer_data->ctrl_flags,
+	regval &= (~LOGICVC_LAYER_CTRL_ENABLE);
+	reg_access->xylon_cvc_set_reg_val(regval,
 					  layer_data->base,
 					  LOGICVC_LAYER_CTRL_ROFF,
 					  layer_data);
diff --git a/drivers/gpu/drm/xylon/xylon_plane.c b/drivers/gpu/drm/xylon/xylon_plane.c
index 19f47be..b3ac2e8 100644
--- a/drivers/gpu/drm/xylon/xylon_plane.c
+++ b/drivers/gpu/drm/xylon/xylon_plane.c
@@ -297,8 +297,13 @@ xylon_drm_plane_properties_initial_value(struct drm_plane *base_plane)
 	struct drm_mode_object *obj = &base_plane->base;
 	struct xylon_drm_plane *plane = to_xylon_plane(base_plane);
 	struct xylon_drm_plane_properties *props = &plane->properties;
+	struct xylon_drm_plane_op op;
 	bool val;
 
+	op.id = XYLON_DRM_PLANE_OP_ID_COLOR_TRANSPARENCY;
+	op.param = false;
+	xylon_drm_plane_op(base_plane, &op);
+
 	val = xylon_cvc_get_info(plane->manager->cvc,
 				 LOGICVC_INFO_LAYER_COLOR_TRANSPARENCY,
 				 plane->id);
-- 
2.0.2

