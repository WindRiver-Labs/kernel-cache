From c58cca8fc97a12c1174eab958c0aa1ea03dad099 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Mon, 30 Sep 2013 11:29:45 +0200
Subject: [PATCH 163/509] i2c: zynq: Clean some coding style violations

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit 786993e9839ab14fc7e76148a1022b9faa272e4b

No functional changes.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/i2c/busses/i2c-zynq.c |   25 ++++++++++++-------------
 1 files changed, 12 insertions(+), 13 deletions(-)

diff --git a/drivers/i2c/busses/i2c-zynq.c b/drivers/i2c/busses/i2c-zynq.c
index 19f83f3..10fe4c9 100644
--- a/drivers/i2c/busses/i2c-zynq.c
+++ b/drivers/i2c/busses/i2c-zynq.c
@@ -141,8 +141,7 @@ struct xi2cps {
 	struct notifier_block	clk_rate_change_nb;
 };
 
-#define to_xi2cps(_nb)	container_of(_nb, struct xi2cps,\
-		clk_rate_change_nb)
+#define to_xi2cps(_nb)	container_of(_nb, struct xi2cps, clk_rate_change_nb)
 #define MAX_F_ERR 10000
 
 /**
@@ -234,10 +233,11 @@ static irqreturn_t xi2cps_isr(int irq, void *ptr)
 					id->send_count--;
 				}
 			} else {
-		/*
-		 * Signal the completion of transaction and clear the hold bus
-		 * bit if there are no further messages to be processed.
-		 */
+				/*
+				 * Signal the completion of transaction and
+				 * clear the hold bus bit if there are no
+				 * further messages to be processed.
+				 */
 				complete(&id->xfer_done);
 			}
 			if (id->send_count == 0) {
@@ -265,11 +265,12 @@ static irqreturn_t xi2cps_isr(int irq, void *ptr)
 					(~XI2CPS_CR_HOLD_BUS_MASK)),
 					XI2CPS_CR_OFFSET);
 			}
-		/*
-		 * If the device is receiving data, then signal the completion
-		 * of transaction and read the data present in the FIFO.
-		 * Signal the completion of transaction.
-		 */
+			/*
+			 * If the device is receiving data, then signal
+			 * the completion of transaction and read the data
+			 * present in the FIFO. Signal the completion of
+			 * transaction.
+			 */
 			while (xi2cps_readreg(XI2CPS_SR_OFFSET)
 							& 0x00000020) {
 				*(id->p_recv_buf)++ =
@@ -352,7 +353,6 @@ static void xi2cps_mrecv(struct xi2cps *id)
 /**
  * xi2cps_msend - Prepare and start a master send operation
  * @id:		pointer to the i2c device
- *
  */
 static void xi2cps_msend(struct xi2cps *id)
 {
@@ -483,7 +483,6 @@ static int xi2cps_master_xfer(struct i2c_adapter *adap, struct i2c_msg *msgs,
 		schedule_timeout(1);
 	}
 
-
 	/* The bus is free. Set the new timeout value if updated */
 	if (id->adap.timeout != id->cur_timeout) {
 		xi2cps_writereg((id->adap.timeout & 0xFF),
-- 
1.7.5.4

