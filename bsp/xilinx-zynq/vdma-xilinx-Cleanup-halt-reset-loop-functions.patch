From 1b349b175699264a0afc6b0e766fe02e425b417b Mon Sep 17 00:00:00 2001
From: Srikanth Thokala <srikanth.thokala@xilinx.com>
Date: Fri, 13 Dec 2013 14:37:28 +0530
Subject: [PATCH 013/182] vdma: xilinx: Cleanup halt/reset loop functions

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Changed the implementation of loops for better readability.

Signed-off-by: Srikanth Thokala <sthokal@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 52f235e3dc6fbffbc7156fc93b2231465295f576)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/dma/xilinx/xilinx_axivdma.c |   23 +++++++----------------
 1 files changed, 7 insertions(+), 16 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_axivdma.c b/drivers/dma/xilinx/xilinx_axivdma.c
index 28c8853..a48d30f 100644
--- a/drivers/dma/xilinx/xilinx_axivdma.c
+++ b/drivers/dma/xilinx/xilinx_axivdma.c
@@ -142,8 +142,7 @@
 #define XILINX_VDMA_FLUSH_BOTH			1
 
 /* Delay loop counter to prevent hardware failure */
-#define XILINX_VDMA_RESET_LOOP			1000000
-#define XILINX_VDMA_HALT_LOOP			1000000
+#define XILINX_VDMA_LOOP_COUNT			1000000
 
 /**
  * struct xilinx_vdma_desc_hw - Hardware Descriptor
@@ -568,19 +567,16 @@ static int xilinx_vdma_is_idle(struct xilinx_vdma_chan *chan)
  */
 static void xilinx_vdma_halt(struct xilinx_vdma_chan *chan)
 {
-	int loop = XILINX_VDMA_HALT_LOOP;
+	int loop = XILINX_VDMA_LOOP_COUNT + 1;
 
 	vdma_ctrl_clr(chan, XILINX_VDMA_REG_DMACR, XILINX_VDMA_DMACR_RUNSTOP);
 
 	/* Wait for the hardware to halt */
-	while (loop) {
+	while (loop--)
 		if (vdma_ctrl_read(chan, XILINX_VDMA_REG_DMASR) &
 		    XILINX_VDMA_DMASR_HALTED)
 			break;
 
-		loop -= 1;
-	}
-
 	if (!loop) {
 		dev_err(chan->dev, "Cannot stop channel %p: %x\n",
 			chan, vdma_ctrl_read(chan, XILINX_VDMA_REG_DMASR));
@@ -596,19 +592,16 @@ static void xilinx_vdma_halt(struct xilinx_vdma_chan *chan)
  */
 static void xilinx_vdma_start(struct xilinx_vdma_chan *chan)
 {
-	int loop = XILINX_VDMA_HALT_LOOP;
+	int loop = XILINX_VDMA_LOOP_COUNT + 1;
 
 	vdma_ctrl_set(chan, XILINX_VDMA_REG_DMACR, XILINX_VDMA_DMACR_RUNSTOP);
 
 	/* Wait for the hardware to start */
-	while (loop) {
+	while (loop)
 		if (!(vdma_ctrl_read(chan, XILINX_VDMA_REG_DMASR) &
 		      XILINX_VDMA_DMASR_HALTED))
 			break;
 
-		loop -= 1;
-	}
-
 	if (!loop) {
 		dev_err(chan->dev, "Cannot start channel %p: %x\n",
 			chan, vdma_ctrl_read(chan, XILINX_VDMA_REG_DMASR));
@@ -783,7 +776,7 @@ out_unlock:
  */
 static int xilinx_vdma_reset(struct xilinx_vdma_chan *chan)
 {
-	int loop = XILINX_VDMA_RESET_LOOP;
+	int loop = XILINX_VDMA_LOOP_COUNT + 1;
 	u32 tmp;
 
 	vdma_ctrl_set(chan, XILINX_VDMA_REG_DMACR, XILINX_VDMA_DMACR_RESET);
@@ -792,11 +785,9 @@ static int xilinx_vdma_reset(struct xilinx_vdma_chan *chan)
 		XILINX_VDMA_DMACR_RESET;
 
 	/* Wait for the hardware to finish reset */
-	while (loop && tmp) {
+	while (loop-- && tmp)
 		tmp = vdma_ctrl_read(chan, XILINX_VDMA_REG_DMACR) &
 			XILINX_VDMA_DMACR_RESET;
-		loop -= 1;
-	}
 
 	if (!loop) {
 		dev_err(chan->dev, "reset timeout, cr %x, sr %x\n",
-- 
1.7.5.4

