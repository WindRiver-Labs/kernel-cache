From 4dd706379e73c6ad794525ff3ed31ca16dc99510 Mon Sep 17 00:00:00 2001
From: Andrew Worsley <amworsley@gmail.com>
Date: Sat, 22 Feb 2014 15:36:02 +1100
Subject: [PATCH 197/509] I2C: cadence: Fix i2c interrupt handler race
 conditions

https://github.com/analogdevicesinc/linux.git xcomm_zynq
commit e45b0f9912edec45684fbd56cc3e056af43a8033

The code was marking completion before the interrupt handler had finished
altering the data buffers and setting the error status. Now we defer
marking completion until the very end of the interrupt handler.

Signed-off-by: Andrew Worsley <amworsley@gmail.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/i2c/busses/i2c-cadence.c |   11 ++++++++---
 1 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/drivers/i2c/busses/i2c-cadence.c b/drivers/i2c/busses/i2c-cadence.c
index 105960e..9bc2d40 100644
--- a/drivers/i2c/busses/i2c-cadence.c
+++ b/drivers/i2c/busses/i2c-cadence.c
@@ -173,12 +173,14 @@ static irqreturn_t cdns_i2c_isr(int irq, void *ptr)
 	unsigned int isr_status, avail_bytes;
 	unsigned int bytes_to_recv, bytes_to_send;
 	struct cdns_i2c *id = ptr;
+	/* Signal completion only after everything is updated */
+	int done_flag = 0;
 
 	isr_status = cdns_i2c_readreg(CDNS_I2C_ISR_OFFSET);
 
 	/* Handling nack and arbitration lost interrupt */
 	if (isr_status & (CDNS_I2C_IXR_NACK | CDNS_I2C_IXR_ARB_LOST))
-		complete(&id->xfer_done);
+		done_flag = 1;
 
 	/* Handling Data interrupt */
 	if ((isr_status & CDNS_I2C_IXR_DATA) &&
@@ -240,7 +242,7 @@ static irqreturn_t cdns_i2c_isr(int irq, void *ptr)
 				 * clear the hold bus bit if there are no
 				 * further messages to be processed.
 				 */
-				complete(&id->xfer_done);
+				done_flag = 1;
 			}
 			if (!id->send_count && !id->bus_hold_flag)
 				cdns_i2c_clear_bus_hold(id);
@@ -259,13 +261,16 @@ static irqreturn_t cdns_i2c_isr(int irq, void *ptr)
 					cdns_i2c_readreg(CDNS_I2C_DATA_OFFSET);
 				id->recv_count--;
 			}
-			complete(&id->xfer_done);
+			done_flag = 1;
 		}
 	}
 
 	/* Update the status for errors */
 	id->err_status = isr_status & CDNS_I2C_IXR_ERR_INTR_MASK;
 	cdns_i2c_writereg(isr_status, CDNS_I2C_ISR_OFFSET);
+
+	if (done_flag)
+		complete(&id->xfer_done);
 	return IRQ_HANDLED;
 }
 
-- 
1.7.5.4

