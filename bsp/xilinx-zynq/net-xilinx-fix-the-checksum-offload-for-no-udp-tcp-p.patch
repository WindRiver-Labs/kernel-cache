From 67019af43f65a291bc8256a66e7161a447bf201e Mon Sep 17 00:00:00 2001
From: Roy Li <rongqing.li@windriver.com>
Date: Mon, 29 Feb 2016 17:32:27 +0800
Subject: [PATCH] net: xilinx: fix the checksum offload for no udp/tcp packets

As the description in 16.2.6 Checksum Offloading of Zynq-7000 All
Programmable SoC, the Soc only offloads the checksum for udp/tcp
packets, not work for icmp packets.

so software should check if the checksum offloading is correct or
not, before setting skb checksum to lp->ip_summed which is hardcoded
to CHECKSUM_UNNECESSARY, since ip checksum offload always is enabled.

Signed-off-by Roy Li <rongqing.li@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 8f62db5..747141c 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -1359,6 +1359,7 @@ static int xemacps_rx(struct net_local *lp, int budget)
 	struct sk_buff *new_skb;
 	u32 new_skb_baddr;
 	unsigned int numbdfree = 0;
+	int checksum_stat;
 	u32 size = 0;
 	u32 packets = 0;
 	u32 regval;
@@ -1406,7 +1407,11 @@ static int xemacps_rx(struct net_local *lp, int budget)
 		skb_put(skb, len);  /* Tell the skb how much data we got. */
 		skb->protocol = eth_type_trans(skb, lp->ndev);
 
-		skb->ip_summed = lp->ip_summed;
+		checksum_stat = (cur_p->ctrl & XEMACPS_RXBUF_IDMATCH_MASK) >>22;
+		if ( checksum_stat <= 1)
+			skb->ip_summed = CHECKSUM_NONE;
+		else
+			skb->ip_summed = lp->ip_summed;
 
 #ifdef CONFIG_XILINX_PS_EMAC_HWTSTAMP
 		if ((lp->hwtstamp_config.rx_filter == HWTSTAMP_FILTER_ALL) &&
-- 
1.7.5.4

