From 293949f6a0423870d9f2a827422ea58554e26c3b Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 11 Jan 2017 09:42:23 +0800
Subject: [PATCH 56/56] irqchip/gicv3-its: use a raw spinlock for its_lock on
 preempt-rt

This patch is to fix the following calltrace when its_lock under irqs_disabled
when preempt-rt environment:

root@cav-octeontx:/sys/devices/system/cpu/cpu3# echo 1 > online
Detected VIPT I-cache on CPU3
GICv3: CPU3: found redistributor 3 region 0:0x0000801080060000
BUG: sleeping function called from invalid context at kernel/locking/rtmutex.c:995
in_atomic(): 1, irqs_disabled(): 128, pid: 0, name: swapper/3
Preemption disabled at:[<ffff00000808e42c>] secondary_start_kernel+0xdc/0x1a0

CPU: 3 PID: 0 Comm: swapper/3 Not tainted 4.8.12-rt7-WR9.0.0.1_preempt-rt #8
Hardware name: Cavium ThunderX CN81XX board (DT)
Call trace:
[<ffff0000080882f8>] dump_backtrace+0x0/0x1d0
[<ffff0000080884ec>] show_stack+0x24/0x30
[<ffff00000843cd94>] dump_stack+0x90/0xb4
[<ffff0000080c5b3c>] ___might_sleep+0x15c/0x170
[<ffff00000881b23c>] rt_spin_lock+0x2c/0x88
[<ffff00000846e2c0>] its_cpu_init+0x130/0x3c0
[<ffff00000846ceec>] gic_cpu_init.part.9+0x74/0x88
[<ffff00000846cf1c>] gic_starting_cpu+0x1c/0x28
[<ffff00000809c1ac>] cpuhp_invoke_callback+0x6c/0x200
[<ffff00000809e48c>] notify_cpu_starting+0x74/0x90
[<ffff00000808e454>] secondary_start_kernel+0x104/0x1a0
[<0000000000683158>] 0x683158
CPU3: Booted secondary processor [430f0a20]
root@cav-octeontx:/sys/devices/system/cpu/cpu3#

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/irqchip/irq-gic-v3-its.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/irqchip/irq-gic-v3-its.c b/drivers/irqchip/irq-gic-v3-its.c
index 49b466e..5376720 100644
--- a/drivers/irqchip/irq-gic-v3-its.c
+++ b/drivers/irqchip/irq-gic-v3-its.c
@@ -114,7 +114,7 @@ struct its_device {
 };
 
 static LIST_HEAD(its_nodes);
-static DEFINE_SPINLOCK(its_lock);
+static DEFINE_RAW_SPINLOCK(its_lock);
 static struct rdists *gic_rdists;
 
 #define gic_data_rdist()		(raw_cpu_ptr(gic_rdists->rdist))
@@ -1190,7 +1190,7 @@ static void its_cpu_init_collection(void)
 	struct its_node *its;
 	int cpu;
 
-	spin_lock(&its_lock);
+	raw_spin_lock(&its_lock);
 	cpu = smp_processor_id();
 
 	list_for_each_entry(its, &its_nodes, entry) {
@@ -1232,7 +1232,7 @@ static void its_cpu_init_collection(void)
 		its_send_invall(its, &its->collections[cpu]);
 	}
 
-	spin_unlock(&its_lock);
+	raw_spin_unlock(&its_lock);
 }
 
 static struct its_device *its_find_device(struct its_node *its, u32 dev_id)
@@ -1756,9 +1756,9 @@ static int __init its_probe(struct device_node *node,
 		inner_domain->host_data = info;
 	}
 
-	spin_lock(&its_lock);
+	raw_spin_lock(&its_lock);
 	list_add(&its->entry, &its_nodes);
-	spin_unlock(&its_lock);
+	raw_spin_unlock(&its_lock);
 
 	return 0;
 
-- 
2.0.2

