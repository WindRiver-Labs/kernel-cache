From 6dd74d3829aae408f5abe68c5de23c9530faa1a5 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Mon, 16 Feb 2009 19:05:37 +0800
Subject: [PATCH] atcaf101: improve MV643xxx-eth to support kgdboe

While the BSP driver had a spin_unlock_irq()
somewhere, and if the board continued on and will hit the
exception a second time. This results in the following panic:
===
root@ATCAF101-kyang:/> ls
Kernel panic - not syncing: Recursive entry to debugger
Rebooting in 180 seconds..
===

For F101, it's safe to replace spin_lock_irq/unlock
with spin_lock_irqsave/restore on eth's poll function.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/net/mv643xx_eth.c |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/net/mv643xx_eth.c b/drivers/net/mv643xx_eth.c
index 0a18b9e..9dc6bea 100644
--- a/drivers/net/mv643xx_eth.c
+++ b/drivers/net/mv643xx_eth.c
@@ -631,6 +631,7 @@ static int mv643xx_eth_poll(struct napi_struct *napi, int budget)
 	struct mv643xx_eth_private *mp;
 	int rx;
 	int i;
+	unsigned long flags;
 
 	mp = container_of(napi, struct mv643xx_eth_private, napi);
 
@@ -642,9 +643,9 @@ static int mv643xx_eth_poll(struct napi_struct *napi, int budget)
 				txq_reclaim(mp->txq + i, 0);
 
 		if (netif_carrier_ok(mp->dev)) {
-			spin_lock_irq(&mp->lock);
+			spin_lock_irqsave(&mp->lock, flags);
 			__txq_maybe_wake(mp->txq + mp->txq_primary);
-			spin_unlock_irq(&mp->lock);
+			spin_unlock_irqrestore(&mp->lock, flags);
 		}
 	}
 #endif
-- 
1.6.0.3

