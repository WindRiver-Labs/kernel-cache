From 66dd862a503a7b61673b70823155d2f89d2d8385 Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Wed, 16 Dec 2009 17:06:44 +0800
Subject: [PATCH] drop the insmod failed workaround on atx ii

Previous versions of the BSP had issues with insmod failing. The
root cause turned out to be the IDE driver. We no longer need the
workaround, so we'll simply drop it from the BSP.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/mm/Makefile        |    2 +-
 arch/mips/mm/tlbex-phoenix.S |  135 ------------------------------------------
 arch/mips/mm/tlbex.c         |   12 +----
 3 files changed, 2 insertions(+), 147 deletions(-)
 delete mode 100644 arch/mips/mm/tlbex-phoenix.S

diff --git a/arch/mips/mm/Makefile b/arch/mips/mm/Makefile
index e54efb0..e41c424 100644
--- a/arch/mips/mm/Makefile
+++ b/arch/mips/mm/Makefile
@@ -27,7 +27,7 @@ obj-$(CONFIG_CPU_TX39XX)	+= c-tx39.o tlb-r3k.o
 obj-$(CONFIG_CPU_TX49XX)	+= c-r4k.o cex-gen.o tlb-r4k.o
 obj-$(CONFIG_CPU_VR41XX)	+= c-r4k.o cex-gen.o tlb-r4k.o
 
-obj-$(CONFIG_CPU_PHOENIX)	+= c-phoenix.o tlb-r4k.o tlbex-phoenix.o\
+obj-$(CONFIG_CPU_PHOENIX)	+= c-phoenix.o tlb-r4k.o \
 							cex-gen.o cerr-phoenix.o 
 
 obj-$(CONFIG_IP22_CPU_SCACHE)	+= sc-ip22.o
diff --git a/arch/mips/mm/tlbex-phoenix.S b/arch/mips/mm/tlbex-phoenix.S
deleted file mode 100644
index 1cf4fcd..0000000
--- a/arch/mips/mm/tlbex-phoenix.S
+++ /dev/null
@@ -1,135 +0,0 @@
-/*********************************************************************
-
-  Copyright 2003-2006 Raza Microelectronics, Inc. (RMI). All rights
-  reserved.
-
-  Redistribution and use in source and binary forms, with or without
-  modification, are permitted provided that the following conditions
-  are met:
-
-  1. Redistributions of source code must retain the above copyright
-  notice, this list of conditions and the following disclaimer.
-  2. Redistributions in binary form must reproduce the above copyright
-  notice, this list of conditions and the following disclaimer in
-  the documentation and/or other materials provided with the
-  distribution.
-
-  THIS SOFTWARE IS PROVIDED BY Raza Microelectronics, Inc. ``AS IS'' AND
-  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
-  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RMI OR CONTRIBUTORS BE LIABLE
-  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
-  THE POSSIBILITY OF SUCH DAMAGE.
-
-  *****************************#RMI_2#**********************************/
-
-#include <linux/init.h>
-
-#include <asm/asm.h>
-#include <asm/cachectl.h>
-#include <asm/fpregdef.h>
-#include <asm/mipsregs.h>
-#include <asm/page.h>
-#include <asm/asm-offsets.h>
-#include <asm/pgtable-bits.h>
-#include <asm/regdef.h>
-#include <asm/stackframe.h>
-#include <asm/war.h>
-
-#include <asm/rmi/mips-exts.h>
-#include <asm/rmi/phnx_user_mac.h>
-
-#if defined(CONFIG_BTLB_LOADER) || defined(USER_MAC_JUMBO_PKT_DATA_TLBS)
-#include <linux/btlb.h>
-#endif
-	
-#ifdef CONFIG_64BIT_PHYS_ADDR
-#define P_MTC0		dmtc0
-#define PTE_SIZE	8
-#define PTEP_INDX_MSK	0xff0
-#define PTE_INDX_MSK	0xff8
-#define PTE_INDX_SHIFT	9
-#else
-#define P_MTC0		mtc0
-#define PTE_SIZE	4
-#define PTEP_INDX_MSK	0xff8
-#define PTE_INDX_MSK	0xffc
-#define PTE_INDX_SHIFT	10
-#endif
-
-#define GET_PGD(scratch, ptr)      \
-	dmfc0   ptr, CP0_CONTEXT;      \
-	dla     scratch, pgd_current;  \
-	dsrl    ptr, 23;               \
-	daddu   ptr, ptr, scratch;     \
-	ld      ptr, (ptr);
-
-#define _PGD_INDX_MASK 0x3ff
-#define _PGD_BITLEN 3
-
-#define _PMD_BITMASK 0x1ff
-#define _PMD_BITLEN 3
-		
-	.set	noreorder
-	.set	noat
-	.set	mips64
-		
-1:	dla     k1, swapper_pg_dir
-	b       3f
-	nop
-LEAF(phoenix_btlb_refill)
-
-	# regular btlb processing
-	dmfc0   k0, CP0_BADVADDR
-    bltz    k0, 5f
-		
-	GET_PGD(k0, k1)				    # get pgd pointer
-	dmfc0	k0, CP0_BADVADDR	    # Get faulting address
-
-3:
-	# GET_PMD(k0, k1)
-	dsrl	k0, k0, _PGDIR_SHIFT	# get pgd only bits, _PGDIR_SHIFT = 30
-	andi    k0, k0, _PGD_INDX_MASK	# _PGD_INDX_MASK = 0x3ff (1 Tera Byte) 
-	dsll    k0, k0, _PGD_BITLEN     # sizeof(pgd_t) = 8, _PGD_BITLEN = 3
-	daddu	k1, k1, k0			    # add in pgd offset
-	ld	    k1, 0(k1)
-		
-	dmfc0	k0, CP0_BADVADDR
-
-	# GET_PTE(k0, k1)
-	dsrl    k0, k0, _PMD_SHIFT      # _PMD_SHIFT = 0x15
-	andi    k0, k0, _PMD_BITMASK    # _PMD_BITMASK = 0x9
-	dsll    k0, k0, _PMD_BITLEN     # _PMD_BITLEN = 3
-	daddu	k1, k1, k0			    # add in offset
-	ld      k1, 0(k1)
-		
-	dmfc0   k0, CP0_XCONTEXT
-	andi    k0, k0, PTEP_INDX_MSK
-	daddu   k1, k1, k0
-	ld      k0, 0(k1)               # load odd pte
-	ld      k1, 8(k1)               # load even pte
-
-	dsrl    k0, k0, 0x6
-	mtc0    k0, CP0_ENTRYLO0
-	dsrl    k1, k1, 0x6
-	mtc0    k1, CP0_ENTRYLO1
-	tlbwr						# write random tlb entry
-	eret						# return from trap
-5:
-	lui    k1, 0xc000
-	dsll32 k1, k1, 0x0
-	b      1b
-	dsubu  k0, k0, k1
-END(phoenix_btlb_refill)
-
-LEAF(phnx_tlb_refill)
-	.set mips64
-	dla k0, phoenix_btlb_refill 
-	jr  k0
-	nop
-END(phnx_tlb_refill)
diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c
index 531dbdf..54a6648 100644
--- a/arch/mips/mm/tlbex.c
+++ b/arch/mips/mm/tlbex.c
@@ -29,12 +29,6 @@
 
 #include "uasm.h"
 
-#define CONFIG_RMI_INSMOD_WKAROUND
-
-#ifdef CONFIG_RMI_INSMOD_WKAROUND
-extern void phnx_tlb_refill(void);
-#endif
-
 static inline int r45k_bvahwbug(void)
 {
 	/* XXX: We should probe for the presence of this bug, but we don't. */
@@ -678,7 +672,7 @@ static void __cpuinit build_update_entries(u32 **p, unsigned int tmp,
 #endif
 }
 
-static void __cpuinit __maybe_unused build_r4000_tlb_refill_handler(void)
+static void __cpuinit build_r4000_tlb_refill_handler(void)
 {
 	u32 *p = tlb_handler;
 	struct uasm_label *l = labels;
@@ -1274,11 +1268,7 @@ void __cpuinit build_tlb_refill_handler(void)
 		break;
 
 	default:
-#ifndef CONFIG_RMI_INSMOD_WKAROUND
 		build_r4000_tlb_refill_handler();
-#else
-		memcpy((void *)(ebase + 0x80), phnx_tlb_refill, 0x80);
-#endif
 		if (!run_once) {
 			build_r4000_tlb_load_handler();
 			build_r4000_tlb_store_handler();
-- 
1.6.0.4

