From 05aaa6dbf9833164e364fb5a52cf657c60341323 Mon Sep 17 00:00:00 2001
From: Benjamin Walsh <benjamin.walsh@windriver.com>
Date: Thu, 16 Jul 2009 15:07:12 -0400
Subject: [PATCH] RMI: Add missing unmask/mask PIC handlers

A previous cleanup moved unmask/mask handlers to startup/shutdown
hooks. This leaves the unmask/mask hooks to NULL. Previously, the
startup/shutdown hooks were NULL, but they default to unmask/mask,
so all cases were handled correctly. On the other hand, no defaults
are installed for unmask/mask. No hook was installed for enable
either, so a default was installed: the default calls unmask
directly without checking for its validity. During netconsole
operation, the network driver's interrupt routine is called between
an disable_irq/enable_irq pair: the enable_irq might invoke
check_irq_resend, which in turn calls the enable hook for the PIC.

Boom.

Signed-off-by: Benjamin Walsh <benjamin.walsh@windriver.com>
---
 arch/mips/rmi/phoenix/irq.c |   26 ++++++++++++++++++++++++--
 1 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/arch/mips/rmi/phoenix/irq.c b/arch/mips/rmi/phoenix/irq.c
index 2e14493..0219ab1 100644
--- a/arch/mips/rmi/phoenix/irq.c
+++ b/arch/mips/rmi/phoenix/irq.c
@@ -67,7 +67,7 @@ extern int link0, link1;
 __u64 phnx_irq_mask;
 spinlock_t phnx_pic_lock = SPIN_LOCK_UNLOCKED;
 
-static unsigned int pic_startup(unsigned int irq)
+static inline unsigned int _pic_unmask(unsigned int irq)
 {
 	phoenix_reg_t *mmio = phoenix_io_mmio(PHOENIX_IO_PIC_OFFSET);
 	unsigned long flags;
@@ -96,6 +96,16 @@ static unsigned int pic_startup(unsigned int irq)
 	return 0;
 }
 
+static void pic_unmask(unsigned int irq)
+{
+	(void)_pic_unmask(irq);
+}
+
+static unsigned int pic_startup(unsigned int irq)
+{
+	return _pic_unmask(irq);
+}
+
 static void pic_ack(unsigned int irq)
 {
 	phoenix_reg_t *mmio = phoenix_io_mmio(PHOENIX_IO_PIC_OFFSET);
@@ -223,7 +233,7 @@ static void pic_end(unsigned int irq)
 	}
 }
 
-static void pic_shutdown(unsigned int irq)
+static inline void _pic_mask(unsigned int irq)
 {
 	phoenix_reg_t *mmio = phoenix_io_mmio(PHOENIX_IO_PIC_OFFSET);
 	unsigned long flags;
@@ -245,6 +255,16 @@ static void pic_shutdown(unsigned int irq)
 	spin_unlock_irqrestore(&phnx_pic_lock, flags);
 }
 
+static void pic_mask(unsigned int irq)
+{
+	_pic_mask(irq);
+}
+
+static void pic_shutdown(unsigned int irq)
+{
+	_pic_mask(irq);
+}
+
 static void pic_set_affinity(unsigned int irq, cpumask_t mask)
 {
 	phoenix_reg_t *mmio = phoenix_io_mmio(PHOENIX_IO_PIC_OFFSET);
@@ -266,6 +286,8 @@ static struct irq_chip phnx_pic = {
 	.name = "Phoenix-PIC",
 	.startup = pic_startup,
 	.shutdown = pic_shutdown,
+	.mask = pic_mask,
+	.unmask = pic_unmask,
 	.ack = pic_ack,
 	.end = pic_end,
 	.set_affinity = pic_set_affinity
-- 
1.6.0.4

