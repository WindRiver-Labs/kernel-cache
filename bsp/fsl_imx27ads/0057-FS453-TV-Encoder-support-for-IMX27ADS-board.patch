From f2cc21d02f5b14834eea63c1434e51a24541999a Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vbarinov@embeddedlley.com>
Date: Wed, 11 Feb 2009 18:42:58 +0300
Subject: [PATCH] FS453 TV Encoder support for IMX27ADS board

IMX27ADS: Focus FS453 TV Encoder support for IMX27ADS board

Signed-off-by: Vladimir Barinov <vbarinov@embeddedlley.com>
---
 arch/arm/mach-mx2/mx27ads.c |  153 ++++++++++++++++++++++++++++++++++++++++++-
 1 files changed, 151 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-mx2/mx27ads.c b/arch/arm/mach-mx2/mx27ads.c
index bba4e3a..1f54430 100644
--- a/arch/arm/mach-mx2/mx27ads.c
+++ b/arch/arm/mach-mx2/mx27ads.c
@@ -33,6 +33,7 @@
 #include <linux/input.h>
 #include <linux/clk.h>
 #include <media/soc_camera.h>
+#include <linux/video_encoder.h> 
 
 #include <asm/mach-types.h>
 #include <asm/mach/arch.h>
@@ -660,6 +661,10 @@ static struct i2c_board_info mx27ads_i2c_devices[] = {
 		.platform_data = &iclink,
 		.type = "ov2640",
 	},
+	{
+		I2C_BOARD_INFO("fs453", 0x6a),
+		.type = "fs453",
+	},
 };
 #endif
 
@@ -802,12 +807,37 @@ static int mxc_fb_pins[] = {
 	PA29_PF_VSYNC,	PA30_PF_CONTRAST, PA31_PF_OE_ACD,
 };
 
+#ifdef CONFIG_FS453_ENCODER
+/*                                                                                                                                                           
+ * VGA mode is not defined by video_encoder.h                                                                                                         
+ * while FS453 supports VGA output.                                                                                                                          
+ */                                                                                                                                                          
+#ifndef VIDEO_ENCODER_VGA
+#define VIDEO_ENCODER_VGA	32
+#endif
+
+extern int fs453_startup(unsigned int, void *);
+static int tvenc_mode;
+#endif
+
 static int gpio_fb_active(struct platform_device *pdev)
 {
 	mxc_gpio_setup_multiple_pins(mxc_fb_pins,
 				     ARRAY_SIZE(mxc_fb_pins),
 				     MXC_GPIO_ALLOC_MODE_NORMAL, "FB");
 
+#ifdef CONFIG_FS453_ENCODER
+	if (tvenc_mode) {
+		/* reset the FS453 via the CLS/GPIOA25 line */
+		mxc_gpio_mode(GPIO_PORTA | GPIO_GPIO | GPIO_OUT | 25);
+		gpio_direction_output(GPIO_PORTA | 25, 0);
+		mdelay(100);
+		gpio_direction_output(GPIO_PORTA | 25, 1);
+
+		fs453_startup(ENCODER_SET_NORM, &tvenc_mode);
+	}
+#endif
+
 	return 0;
 }
 
@@ -832,7 +862,7 @@ void backlight_power(int on)
 {
 }
 
-static struct imx_fb_platform_data mx27ads_fb_data = {
+static struct imx_fb_platform_data mx27ads_lcd_panel_data = {
 	.pixclock	= 5300,
 	.xres		= 240,
 	.yres		= 320,
@@ -867,6 +897,111 @@ static struct imx_fb_platform_data mx27ads_fb_data = {
 	.exit = gpio_fb_inactive,
 };
 
+#ifdef CONFIG_FS453_ENCODER
+static struct imx_fb_platform_data mx27ads_tvenc_pal_data = {
+	.pixclock	= 26000,
+	.xres		= 640,
+	.yres		= 480,
+
+	.bpp		= 16,
+	.hsync_len	= 32,
+	.left_margin	= 38,
+	.right_margin	= 960 - 640 - 38 - 32,
+
+	.vsync_len	= 3,
+	.upper_margin	= 32,
+	.lower_margin	= 555 - 480 - 32 - 3,
+	.fixed_screen_cpu = 0,
+
+	.pcr		= 0xFA108B80,
+	.pwmr		= 0x00A903FF,
+	.lscr1		= 0x00120300,
+	.dmacr		= 0x00020010,
+
+	.backlight_power = backlight_power,
+	.lcd_power = lcd_power,
+	.init = gpio_fb_active,
+	.exit = gpio_fb_inactive,
+};
+
+static struct imx_fb_platform_data mx27ads_tvenc_ntsc_data = {
+	.pixclock	= 26000,
+	.xres		= 640,
+	.yres		= 480,
+
+	.bpp		= 16,
+	.hsync_len	= 3,
+	.left_margin	= 38,
+	.right_margin	= 858 - 640 - 38 - 3,
+
+	.vsync_len	= 1,
+	.upper_margin	= 36,
+	.lower_margin	= 518 - 480 - 36 - 1,
+	.fixed_screen_cpu = 0,
+
+	.pcr		= 0xFA108B80,
+	.pwmr		= 0x00A903FF,
+	.lscr1		= 0x00120300,
+	.dmacr		= 0x00020010,
+
+	.backlight_power = backlight_power,
+	.lcd_power = lcd_power,
+	.init = gpio_fb_active,
+	.exit = gpio_fb_inactive,
+};
+
+static struct imx_fb_platform_data mx27ads_tvenc_vga_data = {
+	.pixclock	= 26000,
+	.xres		= 640,
+	.yres		= 480,
+
+	.bpp		= 16,
+	.hsync_len	= 46,
+	.left_margin	= 35,
+	.right_margin	= 45,
+
+	.vsync_len	= 5,
+	.upper_margin	= 9,
+	.lower_margin	= 1,
+	.fixed_screen_cpu = 0,
+
+	.pcr		= 0xFA108B80,
+	.pwmr		= 0x00A903FF,
+	.lscr1		= 0x00120300,
+	.dmacr		= 0x00020010,
+
+	.backlight_power = backlight_power,
+	.lcd_power = lcd_power,
+	.init = gpio_fb_active,
+	.exit = gpio_fb_inactive,
+};
+#endif
+
+/* default panel is LCD panel */
+static struct imx_fb_platform_data *panel_data = &mx27ads_lcd_panel_data;
+#ifdef CONFIG_FS453_ENCODER
+static int __init lcd_panel_setup(char *str)
+{
+	if (!strncmp("tvenc_pal", str, 32)) {
+		tvenc_mode = VIDEO_ENCODER_PAL;
+		panel_data = &mx27ads_tvenc_pal_data;
+	}
+
+	if (!strncmp("tvenc_ntsc", str, 32)) {
+		tvenc_mode = VIDEO_ENCODER_NTSC;
+		panel_data = &mx27ads_tvenc_ntsc_data;
+	}
+
+	if (!strncmp("tvenc_vga", str, 32)) {
+		tvenc_mode = VIDEO_ENCODER_VGA;
+		panel_data = &mx27ads_tvenc_vga_data;
+	}
+
+	return 0;
+}
+__setup("lcd_panel=", lcd_panel_setup);
+#endif
+
 #ifdef CONFIG_SND
 
 static int mxc_ssi_pins[] = {
@@ -1307,7 +1442,21 @@ static void __init mx27ads_board_init(void)
 #endif
 	mxc_register_device(&mxc_wdt, NULL);
 	mxc_register_device(&mxc_rtc, NULL);
-	mxc_register_device(&mxc_fb_device, &mx27ads_fb_data);
+	mxc_register_device(&mxc_fb_device, panel_data);
+
+#ifdef CONFIG_FS453_ENCODER
+	if (tvenc_mode) {
+		struct clk *fb_clk;
+
+		fb_clk = clk_get(NULL, "lcdc_clk");
+		if (IS_ERR(fb_clk))
+			printk(KERN_ERR "Unable to set lcdc_clk to 133MHz\n");
+		else
+			clk_set_rate(fb_clk, 133000000);
+		clk_put(fb_clk);
+	}
+#endif
+
 #ifdef CONFIG_VIDEO_MX27
 	mxc_register_device(&mx27_camera_device, &mx27ads_camera);
 #endif
-- 
1.5.5.1

