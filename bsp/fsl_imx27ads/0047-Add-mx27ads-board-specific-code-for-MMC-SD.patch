From d90fd9240a12a6427ae0a54fd7c9fa3ba42895af Mon Sep 17 00:00:00 2001
From: Alexander Smirnov <asmirnov@embeddedalley.com>
Date: Mon, 29 Dec 2008 22:07:33 +0300
Subject: [PATCH] Add mx27ads board specific code for MMC/SD

Add the necessary hardware values and functions required to use
the MMC/SD device on the mx27ads board. This functionality is
made available if CONFIG_MMC is set.

Signed-off-by: Alexander Smirnov <asmirnov@embeddedalley.com>
---
 arch/arm/mach-mx2/mx27ads.c |  122 ++++++++++++++++++++++++++++++++++++++++++-
 1 files changed, 121 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-mx2/mx27ads.c b/arch/arm/mach-mx2/mx27ads.c
index 8d3fd1b..4e6bbb3 100644
--- a/arch/arm/mach-mx2/mx27ads.c
+++ b/arch/arm/mach-mx2/mx27ads.c
@@ -50,6 +50,7 @@
 #include <mach/imxfb.h>
 #include <mach/imx_ssi.h>
 #include <mach/imx_dam.h>
+#include <mach/mmc.h>
 #include <mach/imx_sound.h>
 #include <mach/mxc_ehci.h>
 #include <mach/ulpi.h>
@@ -481,6 +482,122 @@ static struct imxuart_platform_data uart_pdata[] = {
 	},
 };
 
+#ifdef CONFIG_MMC
+static int mx27ads_sdhc2_pins[] = {
+	PB4_PF_SD2_D0,
+	PB5_PF_SD2_D1,
+	PB6_PF_SD2_D2,
+	PB7_PF_SD2_D3,
+	PB8_PF_SD2_CMD,
+	PB9_PF_SD2_CLK,
+};
+
+static int mx27ads_sdhc1_pins[] = {
+	PE18_PF_SDHC1_D0,
+	PE19_PF_SDHC1_D1,
+	PE20_PF_SDHC1_D2,
+	PE21_PF_SDHC1_D3,
+	PE22_PF_SDHC1_CMD,
+	PE22_PF_SDHC1_CLK,
+};
+
+/*
+ *  * Note that for SDHC support we rely on the bootloader having
+ *   * enabled the supply for the card slot as we do not have
+ *    * regulator support yet.
+ *     */
+static int mx27ads_sdhc1_init(struct device *dev, irq_handler_t detect_irq, void *data)
+{
+        int ret;
+
+        ret = mxc_gpio_setup_multiple_pins(mx27ads_sdhc1_pins,
+                        ARRAY_SIZE(mx27ads_sdhc1_pins),
+                        MXC_GPIO_ALLOC_MODE_NORMAL,
+                        "sdhc1");
+        if(ret)
+                return ret;
+
+        ret = request_irq(IRQ_GPIOE(21), detect_irq, 0,
+                                "imx-mmc-detect", data);
+        if (ret)
+                goto out_release_gpio;
+
+        set_irq_type(IRQ_GPIOE(21), IRQF_TRIGGER_RISING);
+
+        return 0;
+
+out_release_gpio:
+        mxc_gpio_setup_multiple_pins(mx27ads_sdhc1_pins,
+                        ARRAY_SIZE(mx27ads_sdhc1_pins),
+                        MXC_GPIO_ALLOC_MODE_RELEASE,
+                        "sdhc1");
+
+        return ret;
+}
+
+/*
+ * Note that for SDHC support we rely on the bootloader having
+ * enabled the supply for the card slot as we do not have
+ * regulator support yet.
+ */
+static int mx27ads_sdhc2_init(struct device *dev, irq_handler_t detect_irq, void *data)
+{
+	int ret;
+
+	ret = mxc_gpio_setup_multiple_pins(mx27ads_sdhc2_pins,
+			ARRAY_SIZE(mx27ads_sdhc2_pins),
+			MXC_GPIO_ALLOC_MODE_NORMAL,
+			"sdhc2");
+	if(ret)
+		return ret;
+
+	ret = request_irq(IRQ_GPIOB(7), detect_irq, 0,
+				"imx-mmc-detect", data);
+	if (ret)
+		goto out_release_gpio;
+
+	set_irq_type(IRQ_GPIOB(7), IRQF_TRIGGER_RISING);
+
+	return 0;
+
+out_release_gpio:
+	mxc_gpio_setup_multiple_pins(mx27ads_sdhc2_pins,
+			ARRAY_SIZE(mx27ads_sdhc2_pins),
+			MXC_GPIO_ALLOC_MODE_RELEASE,
+			"sdhc2");
+
+        return ret;
+}
+
+static void mx27ads_sdhc1_exit(struct device *dev, void *data)
+{
+	mxc_gpio_setup_multiple_pins(mx27ads_sdhc1_pins,
+			ARRAY_SIZE(mx27ads_sdhc1_pins),
+			MXC_GPIO_ALLOC_MODE_RELEASE,
+			"sdhc1");
+	free_irq(IRQ_GPIOB(7), data);
+}
+
+static void mx27ads_sdhc2_exit(struct device *dev, void *data)
+{
+        mxc_gpio_setup_multiple_pins(mx27ads_sdhc2_pins,
+                        ARRAY_SIZE(mx27ads_sdhc2_pins),
+                        MXC_GPIO_ALLOC_MODE_RELEASE,
+                        "sdhc2");
+        free_irq(IRQ_GPIOE(21), data);
+}
+
+static struct imxmmc_platform_data sdhc1_pdata = {
+	.init = mx27ads_sdhc1_init,
+	.exit = mx27ads_sdhc1_exit,
+};
+
+static struct imxmmc_platform_data sdhc2_pdata = {
+        .init = mx27ads_sdhc2_init,
+        .exit = mx27ads_sdhc2_exit,
+};
+#endif /* CONFIG_MMC */
+
 #ifdef CONFIG_I2C
 static int mxc_i2c0_pins[] = {
 	PD17_PF_I2C_DATA,
@@ -996,7 +1113,10 @@ static void __init mx27ads_board_init(void)
 	mxc_register_device(&mxc_ehci2, &ehci2_pdata);
 #endif
 #endif
-
+#ifdef CONFIG_MMC
+	mxc_register_device(&mxc_sdhc_device0, &sdhc1_pdata);
+        mxc_register_device(&mxc_sdhc_device1, &sdhc2_pdata);
+#endif
 	platform_add_devices(platform_devices, ARRAY_SIZE(platform_devices));
 }
 
-- 
1.6.0.3

