From aad9f47000fc06788edc6e87166cca8cd0b20d27 Mon Sep 17 00:00:00 2001
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Fri, 12 Jun 2009 21:25:46 +0800
Subject: [PATCH 76/77] IMX27/pmic_adc: Fix pmic_adc misfunction after resuming from suspending

The original suspend function doesn't save the pmic_adc registers
stat, So the resume function can't restore these registers. To let
the pmic_adc and touchscreen work correctly when resuming from
suspending, It needs to add save and restore operation in suspend
and resume funcitons.

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 drivers/mxc/pmic/mc13783/pmic_adc.c |   20 ++++++++++++++++++++
 1 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/drivers/mxc/pmic/mc13783/pmic_adc.c b/drivers/mxc/pmic/mc13783/pmic_adc.c
index 16effe8..448ca96 100644
--- a/drivers/mxc/pmic/mc13783/pmic_adc.c
+++ b/drivers/mxc/pmic/mc13783/pmic_adc.c
@@ -83,6 +83,12 @@ static bool wait_ts;
 static bool monitor_en;
 static bool monitor_adc;
 static t_check_mode wcomp_mode;
+static unsigned int adc0_save;
+static unsigned int adc1_save;
+static unsigned int adc2_save;
+static unsigned int adc3_save;
+static unsigned int adc4_save;
+
 void (*monitoring_cb) (void);	/*call back to be */
 /* called when event is detected. */
 
@@ -108,6 +114,13 @@ static int pmic_adc_suspend(struct platform_device *pdev, pm_message_t state)
 {
 	unsigned int reg_value = 0;
 	suspend_flag = 1;
+
+	CHECK_ERROR(pmic_read_reg(REG_ADC_0, &adc0_save, PMIC_ALL_BITS));
+	CHECK_ERROR(pmic_read_reg(REG_ADC_1, &adc1_save, PMIC_ALL_BITS));
+	CHECK_ERROR(pmic_read_reg(REG_ADC_2, &adc2_save, PMIC_ALL_BITS));
+	CHECK_ERROR(pmic_read_reg(REG_ADC_3, &adc3_save, PMIC_ALL_BITS));
+	CHECK_ERROR(pmic_read_reg(REG_ADC_4, &adc4_save, PMIC_ALL_BITS));
+
 	CHECK_ERROR(pmic_write_reg(REG_ADC_0, DEF_ADC_0, PMIC_ALL_BITS));
 	CHECK_ERROR(pmic_write_reg(REG_ADC_1, reg_value, PMIC_ALL_BITS));
 	CHECK_ERROR(pmic_write_reg(REG_ADC_2, reg_value, PMIC_ALL_BITS));
@@ -130,6 +143,13 @@ static int pmic_adc_resume(struct platform_device *pdev)
 {
 	/* nothing for mc13783 adc */
 	suspend_flag = 0;
+
+	CHECK_ERROR(pmic_write_reg(REG_ADC_0, adc0_save, PMIC_ALL_BITS));
+	CHECK_ERROR(pmic_write_reg(REG_ADC_1, adc1_save, PMIC_ALL_BITS));
+	CHECK_ERROR(pmic_write_reg(REG_ADC_2, adc2_save, PMIC_ALL_BITS));
+	CHECK_ERROR(pmic_write_reg(REG_ADC_3, adc3_save, PMIC_ALL_BITS));
+	CHECK_ERROR(pmic_write_reg(REG_ADC_4, adc4_save, PMIC_ALL_BITS));
+
 	while (swait > 0) {
 		swait--;
 		wake_up_interruptible(&suspendq);
-- 
1.6.3.1

