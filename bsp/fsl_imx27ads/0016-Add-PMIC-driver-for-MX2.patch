From ac18daf76198302a17790709dd97a3320abbbc64 Mon Sep 17 00:00:00 2001
From: Alexander Smirnov <asmirnov@embeddedalley.com>
Date: Mon, 29 Dec 2008 18:33:42 +0300
Subject: [PATCH] Add PMIC driver for MX2

Add PMIC driver for MX2

Sigend-off-by: Alexander Smirnov <asmirnov@embeddedalley.com>
---
 drivers/mxc/pmic/core/pmic_core_spi.c    |   20 ++++++++++++++++++--
 include/asm-arm/plat-mxc/pmic_platform.h |   22 ++++++++++++++++++++++
 2 files changed, 40 insertions(+), 2 deletions(-)
 create mode 100644 include/asm-arm/plat-mxc/pmic_platform.h

diff --git a/drivers/mxc/pmic/core/pmic_core_spi.c b/drivers/mxc/pmic/core/pmic_core_spi.c
index 18fabc1..08c6bbc 100644
--- a/drivers/mxc/pmic/core/pmic_core_spi.c
+++ b/drivers/mxc/pmic/core/pmic_core_spi.c
@@ -38,6 +38,7 @@
 
 #include <asm/plat-mxc/pmic_external.h>
 #include <asm/plat-mxc/pmic_status.h>
+#include <asm/plat-mxc/pmic_platform.h>
 #include "pmic.h"
 
 /*
@@ -80,7 +81,6 @@ static struct platform_device light_ldm = {
  */
 extern void pmic_event_list_init(void);
 extern void pmic_event_callback(type_event event);
-extern void gpio_pmic_active(void);
 
 /*!
  * Bottom half handler of PMIC event handling.
@@ -195,6 +195,7 @@ static int pmic_resume(struct spi_device *spi)
 static int __devinit pmic_probe(struct spi_device *spi)
 {
 	int ret = 0;
+	struct pmic_platform_data *pdata = spi->dev.platform_data;
 	printk("entered %s\n", __func__);
 
 	if (!strcmp(spi->dev.bus_id, PMIC_ARBITRATION)) {
@@ -206,6 +207,16 @@ static int __devinit pmic_probe(struct spi_device *spi)
 		return PMIC_SUCCESS;
 	}
 
+	if (pdata == NULL) {
+		dev_err(&spi->dev, "Missing platform data\n");
+		return -ENODEV;
+	}
+
+	if (pdata->init == NULL) {
+		dev_err(&spi->dev, "Missing interrupt activation functions\n");
+		return -ENODEV;
+	}
+
 	/* Initialize the PMIC parameters */
 	ret = pmic_spi_setup(spi);
 	if (ret != PMIC_SUCCESS)
@@ -215,7 +226,7 @@ static int __devinit pmic_probe(struct spi_device *spi)
 	pmic_event_list_init();
 
 	/* Initialize GPIO for PMIC Interrupt */
-	gpio_pmic_active();
+	pdata->init();
 
 	/* Get the PMIC Version */
 	pmic_get_revision(&mxc_pmic_version);
@@ -258,10 +269,15 @@ static int __devinit pmic_probe(struct spi_device *spi)
  */
 static int __devexit pmic_remove(struct spi_device *spi)
 {
+	struct pmic_platform_data *pdata = spi->dev.platform_data;
+
 	free_irq(spi->irq, 0);
 
 	pmic_pdev_unregister();
 
+	if (pdata->exit == NULL)
+		(pdata->exit)();
+
 	printk(KERN_INFO "Device %s removed\n", spi->dev.bus_id);
 
 	return PMIC_SUCCESS;
diff --git a/include/asm-arm/plat-mxc/pmic_platform.h b/include/asm-arm/plat-mxc/pmic_platform.h
new file mode 100644
index 0000000..3e4d642
--- /dev/null
+++ b/include/asm-arm/plat-mxc/pmic_platform.h
@@ -0,0 +1,22 @@
+/*
+ * Copyright (C) 2008 Juergen Beisert (kernel@pengutronix.de)
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+/* define how to init and exit IRQ usage for the PMIC */
+struct pmic_platform_data {
+	int (*init)(void);
+	int (*exit)(void);
+};
-- 
1.6.0.3

