From 389badf3f67a9a79ea47e57d7edbd41a05c566fc Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vbarinov@embeddedalley.com>
Date: Tue, 3 Feb 2009 18:49:38 +0300
Subject: [PATCH] UDC support for IMX27ADS board

IMX27ADS: add usb device support for IMX27ADS board

Signed-off-by: Vladimir Barinov <vbarinov@embeddedalley.com>
---
 arch/arm/mach-mx2/mx27ads.c |   83 +++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 83 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-mx2/mx27ads.c b/arch/arm/mach-mx2/mx27ads.c
index 5a82812..8d15ac3 100644
--- a/arch/arm/mach-mx2/mx27ads.c
+++ b/arch/arm/mach-mx2/mx27ads.c
@@ -56,6 +56,8 @@
 #include <mach/ulpi.h>
 #include <mach/arc_otg.h>
 #include <mach/keypad.h>
+#include <mach/mxc_gadget.h>
+#include <mach/isp1301.h>
 
 #include "devices.h"
 
@@ -1078,6 +1080,82 @@ EXPORT_SYMBOL(gpio_owire_inactive);
 
 #endif /* W1_MASTER_MXC */
 
+#if defined(CONFIG_USB) && defined(CONFIG_I2C)
+static int mxc_gadget_pins[] = {
+	PC7_PF_USBOTG_DATA5,
+	PC8_PF_USBOTG_DATA6,
+	PC9_PF_USBOTG_DATA0,
+	PC10_PF_USBOTG_DATA2,
+	PC11_PF_USBOTG_DATA1,
+	PC12_PF_USBOTG_DATA4,
+	PC13_PF_USBOTG_DATA3,
+	PE0_PF_USBOTG_NXT,
+	PE1_PF_USBOTG_STP,
+	PE2_PF_USBOTG_DIR,
+	PE24_PF_USBOTG_CLK,
+	PE25_PF_USBOTG_DATA7,
+	PB24_PF_USB_OC_B,
+	PB23_PF_USB_PWR,
+};
+
+static int mx27ads_gadget_init(struct platform_device *pdev)
+{
+	int ret;
+	uint32_t temp;
+
+	ret = mxc_gpio_setup_multiple_pins(mxc_gadget_pins,
+					   ARRAY_SIZE(mxc_gadget_pins),
+					   MXC_GPIO_ALLOC_MODE_NORMAL,
+					   "gadget");
+	if (ret)
+		return ret;
+
+	/* Configure CPLD */
+	__raw_writew(PBC_BCTRL3_OTG_HS_EN, PBC_BCTRL3_CLEAR_REG);
+	__raw_writew(PBC_BCTRL3_OTG_VBUS_EN, PBC_BCTRL3_CLEAR_REG);
+
+	/* SET TRANCIEVER:
+	 * set USBCTRL for device operation
+	 * disable: bypass mode
+	 * set: differential/unidir/6 wire, OTG wakeup intr enable,
+	 *      power mask
+	 */
+	temp = readl(IO_ADDRESS(OTG_BASE_ADDR) + 0x600);
+	temp &= ~UCTRL_OSIC_MASK;
+	temp &= ~UCTRL_BPE;
+	/* Single Ended Unidirectional Mode */
+	temp |= UCTRL_OSIC_SU6 | UCTRL_OWIE | UCTRL_OPM;
+	writel(temp, IO_ADDRESS(OTG_BASE_ADDR) + 0x600);
+
+	temp = readl(IO_ADDRESS(OTG_BASE_ADDR) + 0x604);
+	temp = OTGM_VBUSVAL | OTGM_BSESVLD | OTGM_IDIDG;
+	writel(temp, IO_ADDRESS(OTG_BASE_ADDR) + 0x604);
+
+	/* Single Ended Unidirectional Mode */
+	isp1301_set_serial_dev(0, 1);
+
+	isp1301_set_vbus_power(0);
+
+	return 0;
+}
+
+static int mx27ads_gadget_exit(struct platform_device *pdev)
+{
+	/* Configure CPLD */
+	__raw_writew(PBC_BCTRL3_OTG_HS_EN, PBC_BCTRL3_SET_REG);
+
+	return mxc_gpio_setup_multiple_pins(mxc_gadget_pins,
+					    ARRAY_SIZE(mxc_gadget_pins),
+					    MXC_GPIO_ALLOC_MODE_RELEASE,
+					    "gadget");
+}
+
+struct mxc_gadget_platform_data gadget_pdata = {
+	.init = mx27ads_gadget_init,
+	.exit = mx27ads_gadget_exit,
+};
+#endif
+
 static struct platform_device *platform_devices[] __initdata = {
 	&mx27ads_nor_mtd_device,
 #ifdef CONFIG_SND
@@ -1144,6 +1222,11 @@ static void __init mx27ads_board_init(void)
 	mxc_register_device(&mxc_ehci2, &ehci2_pdata);
 #endif
 #endif
+
+#if defined(CONFIG_USB) && defined(CONFIG_I2C)
+	mxc_register_device(&mxc_otg, &gadget_pdata);
+#endif
+
 #ifdef CONFIG_MMC
 	mxc_register_device(&mxc_sdhc_device0, &sdhc1_pdata);
         mxc_register_device(&mxc_sdhc_device1, &sdhc2_pdata);
-- 
1.6.0.3

