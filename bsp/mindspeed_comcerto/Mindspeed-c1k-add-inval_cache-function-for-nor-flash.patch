From acda64109788bbf4cb9d36a2fac7abc60e01ef77 Mon Sep 17 00:00:00 2001
From: Guoqing Jiang <Guoqing.Jiang@windriver.com>
Date: Tue, 23 Nov 2010 13:50:09 +0800
Subject: [PATCH 25/26] Mindspeed-c1k: add inval_cache function for nor flash

Add inval_cache function for nor flash to avoid software
timeout issue.

Signed-off-by: Guoqing Jiang <Guoqing.Jiang@windriver.com>
---
 drivers/mtd/maps/comcerto-nor.c |   27 +++++++++++++++++++++++++++
 1 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/drivers/mtd/maps/comcerto-nor.c b/drivers/mtd/maps/comcerto-nor.c
index fd3b0fd..91c6dea 100644
--- a/drivers/mtd/maps/comcerto-nor.c
+++ b/drivers/mtd/maps/comcerto-nor.c
@@ -25,6 +25,7 @@
 #include <linux/init.h>
 #include <linux/ioport.h>
 #include <linux/slab.h>
+#include <linux/delay.h>
 
 #include <linux/mtd/mtd.h>
 #include <linux/mtd/map.h>
@@ -34,6 +35,22 @@
 #include <mach/hardware.h>
 #include <asm/mach/flash.h>
 
+#define CACHELINESIZE   32
+
+static void comcerto_map_inval_cache(struct map_info *map, unsigned long from,
+					ssize_t len)
+{
+	unsigned long start = (unsigned long)map->cached + from;
+	unsigned long end = start + len;
+	start &= ~(CACHELINESIZE - 1);
+	while (start < end) {
+		/* invalidate D cache line */
+		asm volatile ("mcr p15, 0, %0, c7, c6, 1" : : "r" (start));
+		start += CACHELINESIZE;
+	}
+	udelay(100); /* To avoid software timeout issue when program flash */
+}
+
 #ifdef CONFIG_MTD_PARTITIONS
 static const char *part_probes[] = { "cmdlinepart", NULL };
 #endif
@@ -74,6 +91,12 @@ static int __devinit comcertoflash_probe(struct platform_device *pdev)
 	info->map.size = size;
 	info->map.bankwidth = pdata->width;
 
+	info->map.cached = ioremap_cached(info->map.phys, info->map.size);
+	if (!info->map.cached)
+		printk(KERN_WARNING "Failed to ioremap cached %s\n",
+			info->map.name);
+	info->map.inval_cache = comcerto_map_inval_cache;
+
 	simple_map_init(&info->map);
 
 	info->mtd = do_map_probe(pdata->map_name, &info->map);
@@ -98,6 +121,8 @@ static int __devinit comcertoflash_probe(struct platform_device *pdev)
 	return 0;
 
 out_iounmap:
+	if (info->map.cached)
+		iounmap(info->map.cached);
 	iounmap(info->map.virt);
 out_release_mem_region:
 	release_mem_region(res->start, size);
@@ -123,6 +148,8 @@ static int __devexit comcertoflash_remove(struct platform_device *pdev)
 			del_mtd_device(info->mtd);
 
 		map_destroy(info->mtd);
+		if (info->map.cached)
+			iounmap(info->map.cached);
 		release_mem_region(info->map.phys, info->map.size);
 		iounmap((void __iomem *)info->map.virt);
 		kfree(info);
-- 
1.6.5.2

