From 4e7b54e89ebf1078b4d039bb16d0b8bd5c96f77a Mon Sep 17 00:00:00 2001
From: Stanley.Miao <stanley.miao@windriver.com>
Date: Mon, 18 Oct 2010 14:32:19 +0800
Subject: [PATCH 04/26] Comcerto: M83xxx: clocks definition.

Original codes came from Mindspeed's vendor drop sdk-comcerto-openwrt-6.0.

Add M83xxx clock registers map and some bits definition.

Integrated-by: Stanley.Miao <stanley.miao@windriver.com>
---
 .../arm/mach-comcerto/include/mach/comcerto-1000.h |    1 +
 .../include/mach/comcerto-1000/clk-rst.h           |  140 ++++++++++++++++++++
 2 files changed, 141 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-comcerto/include/mach/comcerto-1000/clk-rst.h

diff --git a/arch/arm/mach-comcerto/include/mach/comcerto-1000.h b/arch/arm/mach-comcerto/include/mach/comcerto-1000.h
index ac9cd21..05a2941 100644
--- a/arch/arm/mach-comcerto/include/mach/comcerto-1000.h
+++ b/arch/arm/mach-comcerto/include/mach/comcerto-1000.h
@@ -89,6 +89,7 @@
 
 #define APB_VADDR(x)            ((x) - COMCERTO_AHB_APB_BASE + APB_VADDR_BASE)
 
+#include <mach/comcerto-1000/clk-rst.h>
 #include <mach/comcerto-1000/timer.h>
 #include <mach/comcerto-1000/intr.h>
 
diff --git a/arch/arm/mach-comcerto/include/mach/comcerto-1000/clk-rst.h b/arch/arm/mach-comcerto/include/mach/comcerto-1000/clk-rst.h
new file mode 100644
index 0000000..80ab110
--- /dev/null
+++ b/arch/arm/mach-comcerto/include/mach/comcerto-1000/clk-rst.h
@@ -0,0 +1,140 @@
+/*
+ *  arch/arm/mach-comcerto/include/mach/comcerto-1000/clk-rst.h
+ *
+ *  Copyright (C) 2008 Mindspeed Technologies, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+#ifndef __CLK_H__
+#define __CLK_H__
+
+#define COMCERTO_CLK_ARM_CLK_CNTRL	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x00))
+#define COMCERTO_CLK_ARM_CLK_CNTRL2	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x04))
+#define COMCERTO_CLK_AHB_CLK_CNTRL	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x08))
+#define COMCERTO_CLK_AHB_CLK_CNTRL2	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x0C))
+#define COMCERTO_CLK_PHY_CLK_CNTRL	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x10))
+#define COMCERTO_CLK_PHY_CLK_CNTRL2	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x14))
+#define COMCERTO_CLK_DDR_PCIE_CLK_CNTRL	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x18))
+#define COMCERTO_CLK_TDM_CLK_CNTRL	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x1C))
+#define COMCERTO_CLK_TDM_CLK_CNTRL2	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x20))
+#define COMCERTO_CLK_FSYNC_CNTRL	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x24))
+#define COMCERTO_CLK_CLK_PWR_DWN	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x40))
+#define COMCERTO_CLK_PLL_STATUS		APB_VADDR((COMCERTO_APB_CLK_BASE + 0x44))
+#define COMCERTO_CLK_RNG_CNTRL		APB_VADDR((COMCERTO_APB_CLK_BASE + 0x48))
+#define COMCERTO_CLK_RNG_STATUS		APB_VADDR((COMCERTO_APB_CLK_BASE + 0x4C))
+
+/*AHB_CLK_CNTRL bit fields */
+#define AHB_CLK_CNTRL_SYNC_MODE (1<<29)
+#define AHB_CLK_CNTRL_SYNC_DIV_BYPASS (1<<30)
+
+/*AHB_CLK_CNTRL2 bit fields */
+#define AHB_CLK_CNTRL2_AHB_DIV0_BYPASS (1<<12)
+#define AHB_CLK_CNTRL2_AHB_DIV1_BYPASS (1<<13)
+
+/*ARM_CLK_CNTRL2 bit fields */
+#define ARM_CLK_CNTRL2_ARM1_DIV_BYPASS (1<<12)
+#define ARM_CLK_CNTRL2_ARM1_AHB_BYPASS (1<<13)
+#define ARM_CLK_CNTRL2_ARM0_DIV_BYPASS (1<<4)
+#define ARM_CLK_CNTRL2_ARM0_AHB_BYPASS (1<<5)
+
+/* DDR_PCIE_CLK_CNTRL bit fields */
+#define USB_DIV_BYPASS		(1 << 30)
+#define IPSEC1_DIV_BYPASS	(1 << 29)
+#define IPSEC0_DIV_BYPASS	(1 << 28)
+#define PCIE_DIV_BYPASS		(1 << 27)
+#define DDR_DIV_BYPASS		(1 << 26)
+
+#define USB_DIV_VAL_OFFSET	20
+#define USB_DIV_VAL_MASK	(0x3f << USB_DIV_VAL_OFFSET)
+
+#define IPSEC_DIV1_VAL_OFFSET	16
+#define IPSEC_DIV1_VAL_MASK	(0xf << IPSEC_DIV0_VAL_OFFSET)
+
+#define IPSEC_DIV0_VAL_OFFSET	12
+#define IPSEC_DIV0_VAL_MASK	(0xf << IPSEC_DIV1_VAL_OFFSET)
+
+#define PCIE_DIV_VAL_OFFSET	8
+#define PCIE_DIV_VAL_MASK	(0xf << PCIE_DIV_VAL_OFFSET)
+
+#define DDR_DIV_VAL_OFFSET	4
+#define DDR_DIV_VAL_MASK	(0xf << DDR_DIV_VAL_OFFSET)
+
+#define USB_MUX_SEL		(1 << 3)
+#define IPSEC_MUX_SEL		(1 << 2)
+#define PCIE_MUX_SEL		(1 << 1)
+#define DDR_MUX_SEL		(1 << 0)
+
+
+/* CLK_PWR_DWN bit fiels */
+#define USB_REFCLK_PD		(1 << 24)
+#define USB_AHBCLK_PD		(1 << 19)
+#define PCIE1_AHBCLK_PD		(1 << 15)
+#define PCIE0_AHBCLK_PD		(1 << 14)
+#define PCIE_REFCLK_NP_PD	(1 << 6)
+#define ARM0_FCLK_PD             (1 << 0)
+#define ARM1_FCLK_PD             (1 << 1)
+#define GEMAC0_REFCLK_PD       (1 << 2)
+#define GEMAC1_REFCLK_PD         (1 << 3)
+#define PHY_REFCLK_PD            (1 << 4)
+#define DDR_CLK_PD               (1 << 5)
+#define IPSEC_CORECLK_PD         (1 << 8)
+#define ARM0_AHBCLK_PD           (1 << 9)
+#define ARM1_AHBCLK_PD           (1 << 10)
+#define GEMAC0_AHBCLK_PD         (1 << 11)
+#define GEMAC1_AHBCLK_PD         (1 << 12)
+#define DDRCTRL_AHBCLK_PD        (1 << 13)
+#define TDM_AHBCLK_PD            (1 << 16)
+#define MDMA_AHBCLK_PD           (1 << 17)
+#define UART_AHBCLK_PD           (1 << 18)
+#define I2CSPI_AHBCLK_PD         (1 << 20)
+#define IPSEC_AHBCLK_PD          (1 << 21)
+#define TDM_CLK_PD               (1 << 22)
+#define IPSEC2_AHBCLK_PD         (1 << 23)
+
+#define ARM0_DIV_BP             (1 << 4)
+#define ARM1_DIV_BP             (1 << 12)
+
+
+#define COMCERTO_BLOCK_RESET_REG	APB_VADDR((COMCERTO_APB_CLK_BASE + 0x100))
+#define COMCERTO_CSP_RESET_REG		APB_VADDR((COMCERTO_APB_CLK_BASE + 0x104))
+
+#define USB_REF_RESET_N		(1 << 20)
+#define NO_BAL_DDR_REF_RST	(1 << 19)
+#define IPSEC2_AHB_RST		(1 << 18)
+#define RNG_RST			(1 << 17)
+#define IPSEC_CORE_RST		(1 << 16)
+#define IPSEC_AHB_RST		(1 << 15)
+#define USB_AHB_RESET_N		(1 << 14)
+#define TDM_REF_RST		(1 << 13)
+#define TDM_AHB_RST		(1 << 12)
+#define DDR_REF_RST		(1 << 11)
+#define DDR_AHB_RST		(1 << 10)
+#define PCIE1_REF_RST		(1 << 9)
+#define PCIE0_REF_RST		(1 << 8)
+#define PCIE1_AHB_RST		(1 << 7)
+#define PCIE0_AHB_RST		(1 << 6)
+#define GEMAC1_PHY_RST		(1 << 5)
+#define GEMAC0_PHY_RST		(1 << 4)
+#define GEMAC1_AHB_RST		(1 << 3)
+#define GEMAC0_AHB_RST		(1 << 2)
+#define ARM1_AHB_RST		(1 << 1)
+#define ARM0_AHB_RST		(1 << 0)
+
+#define GEMAC0_RST			(GEMAC0_AHB_RST | GEMAC0_PHY_RST)
+#define GEMAC1_RST			(GEMAC1_AHB_RST | GEMAC1_PHY_RST)
+#define TDM_RST				(TDM_AHB_RST | TDM_REF_RST)
+
+#endif
-- 
1.5.4.3

