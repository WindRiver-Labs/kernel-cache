From 9cccd361a2143a613e7d18ce0ac60f8f008d49c7 Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Wed, 24 Aug 2011 11:50:34 +0800
Subject: [PATCH 1/6] intel_xeon_core_dh89xx_pch: add DH8900CC Series Gigabit Ethernet support

add DH8900CC Series Gigabit Ethernet support

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 drivers/net/igb/e1000_82575.c   |    2 ++
 drivers/net/igb/e1000_api.c     |    4 ++++
 drivers/net/igb/e1000_defines.h |    2 ++
 drivers/net/igb/e1000_hw.h      |    4 ++++
 drivers/net/igb/igb_main.c      |   27 +++++++++++++++++++++++++++
 5 files changed, 39 insertions(+), 0 deletions(-)

diff --git a/drivers/net/igb/e1000_82575.c b/drivers/net/igb/e1000_82575.c
index a84f9d3..b2aec98 100644
--- a/drivers/net/igb/e1000_82575.c
+++ b/drivers/net/igb/e1000_82575.c
@@ -175,6 +175,8 @@ static s32 e1000_init_phy_params_82575(struct e1000_hw *hw)
 
 	/* Verify phy id and set remaining function pointers */
 	switch (phy->id) {
+	case I347AT4_E_PHY_ID:
+	case M88E1112_E_PHY_ID:
 	case M88E1111_I_PHY_ID:
 		phy->type                   = e1000_phy_m88;
 		phy->ops.check_polarity     = e1000_igb_check_polarity_m88;
diff --git a/drivers/net/igb/e1000_api.c b/drivers/net/igb/e1000_api.c
index 738e44c..368562f 100644
--- a/drivers/net/igb/e1000_api.c
+++ b/drivers/net/igb/e1000_api.c
@@ -169,6 +169,10 @@ s32 e1000_set_mac_type(struct e1000_hw *hw)
 	case E1000_DEV_ID_82580_SGMII:
 	case E1000_DEV_ID_82580_COPPER_DUAL:
 	case E1000_DEV_ID_82580_QUAD_FIBER:
+	case E1000_DEV_ID_DH89XXCC_SGMII:
+	case E1000_DEV_ID_DH89XXCC_SERDES:
+	case E1000_DEV_ID_DH89XXCC_BACKPLANE:
+	case E1000_DEV_ID_DH89XXCC_SFP:
 		mac->type = e1000_82580;
 		break;
 	case E1000_DEV_ID_I350_COPPER:
diff --git a/drivers/net/igb/e1000_defines.h b/drivers/net/igb/e1000_defines.h
index fc4c6ee..1d60233 100644
--- a/drivers/net/igb/e1000_defines.h
+++ b/drivers/net/igb/e1000_defines.h
@@ -1339,6 +1339,8 @@
 #define M88E1000_E_PHY_ID    0x01410C50
 #define M88E1000_I_PHY_ID    0x01410C30
 #define M88E1011_I_PHY_ID    0x01410C20
+#define M88E1112_E_PHY_ID    0x01410C90
+#define I347AT4_E_PHY_ID    0x01410DC0
 #define IGP01E1000_I_PHY_ID  0x02A80380
 #define M88E1011_I_REV_4     0x04
 #define M88E1111_I_PHY_ID    0x01410CC0
diff --git a/drivers/net/igb/e1000_hw.h b/drivers/net/igb/e1000_hw.h
index 8e7bc67..00d201e 100644
--- a/drivers/net/igb/e1000_hw.h
+++ b/drivers/net/igb/e1000_hw.h
@@ -55,6 +55,10 @@ struct e1000_hw;
 #define E1000_DEV_ID_I350_FIBER               0x1522
 #define E1000_DEV_ID_I350_SERDES              0x1523
 #define E1000_DEV_ID_I350_SGMII               0x1524
+#define E1000_DEV_ID_DH89XXCC_SGMII           0x0438
+#define E1000_DEV_ID_DH89XXCC_SERDES          0x043A
+#define E1000_DEV_ID_DH89XXCC_BACKPLANE       0x043C
+#define E1000_DEV_ID_DH89XXCC_SFP             0x0440
 #define E1000_REVISION_0 0
 #define E1000_REVISION_1 1
 #define E1000_REVISION_2 2
diff --git a/drivers/net/igb/igb_main.c b/drivers/net/igb/igb_main.c
index c40f681..189e794 100644
--- a/drivers/net/igb/igb_main.c
+++ b/drivers/net/igb/igb_main.c
@@ -83,6 +83,7 @@ static struct pci_device_id igb_pci_tbl[] = {
 	{ PCI_VDEVICE(INTEL, E1000_DEV_ID_82575EB_COPPER) },
 	{ PCI_VDEVICE(INTEL, E1000_DEV_ID_82575EB_FIBER_SERDES) },
 	{ PCI_VDEVICE(INTEL, E1000_DEV_ID_82575GB_QUAD_COPPER) },
+	{ PCI_VDEVICE(INTEL, E1000_DEV_ID_DH89XXCC_SGMII) },
 	/* required last entry */
 	{0, }
 };
@@ -6702,6 +6703,13 @@ static int __igb_shutdown(struct pci_dev *pdev, bool *enable_wake)
 #ifdef CONFIG_PM
 static int igb_suspend(struct pci_dev *pdev, pm_message_t state)
 {
+#define E1000_PMCSR       0x0044
+#define E1000_PMCSR_PS_D3 0x00000003
+	struct net_device *netdev = NULL;
+	struct igb_adapter *adapter = NULL; 
+	struct e1000_hw *hw = NULL;
+	u32 pmcsr = 0;
+
 	int retval;
 	bool wake;
 
@@ -6716,6 +6724,25 @@ static int igb_suspend(struct pci_dev *pdev, pm_message_t state)
 		pci_set_power_state(pdev, PCI_D3hot);
 	}
 
+	/* This is WoL workaround for DH89xxCC */
+	switch (pdev->device) {
+		case E1000_DEV_ID_DH89XXCC_SFP:
+		case E1000_DEV_ID_DH89XXCC_BACKPLANE:
+		case E1000_DEV_ID_DH89XXCC_SERDES:
+		case E1000_DEV_ID_DH89XXCC_SGMII:
+			netdev = pci_get_drvdata(pdev);
+			adapter = netdev_priv(netdev);
+			hw = &adapter->hw;
+			pmcsr = E1000_READ_REG(hw, E1000_PMCSR);
+			pmcsr |= E1000_PMCSR_PS_D3;
+			E1000_WRITE_REG(hw, E1000_PMCSR, pmcsr);
+			E1000_WRITE_REG(hw, E1000_PMCSR, pmcsr);
+			break;
+		default:
+			break;
+	}
+
+
 	return 0;
 }
 
-- 
1.6.3.1

