From f459efc3c9714ff291d60d177cc4511b319e426f Mon Sep 17 00:00:00 2001
From: Bharat Bhushan <Bharat.Bhushan@freescale.com>
Date: Tue, 21 Apr 2015 10:45:31 +0530
Subject: [PATCH 206/237] fsl-mc-dpio: Fix to make this work without interrupt

Some additional fixes to make dpio driver work in poll mode.
This is needed for direct assignment to KVM Guest.

Signed-off-by: Bharat Bhushan <Bharat.Bhushan@freescale.com>
Change-Id: Icf66b8c0c7f7e1610118f78396534c067f594934
Reviewed-on: http://git.am.freescale.net:8181/35333
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Roy Pledge <roy.pledge@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
[Original patch from FSL LS2085 SDK EAR4.0]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-mc/bus/dpio/dpio-drv.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c b/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
index 210271a..aca9a89 100644
--- a/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
+++ b/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
@@ -177,6 +177,7 @@ ldpaa_dpio_probe(struct fsl_mc_device *ls_dev)
 	int err = -ENOMEM;
 	struct device *dev = &ls_dev->dev;
 	struct dpaa_io *defservice;
+	bool irq_allocated = false;
 
 	priv = devm_kzalloc(dev, sizeof(*priv), GFP_KERNEL);
 	if (!priv)
@@ -239,13 +240,15 @@ ldpaa_dpio_probe(struct fsl_mc_device *ls_dev)
 	err = fsl_mc_allocate_irqs(ls_dev);
 	if (err) {
 		dev_err(dev, "DPIO fsl_mc_allocate_irqs failed\n");
-		goto err_allocate_irqs;
+		goto poll_mode;
 	}
+	irq_allocated = true;
 
 	snprintf(priv->irq_name, MAX_DPIO_IRQ_NAME, "FSL DPIO %d",
 			desc.dpio_id);
 
 	err = register_dpio_irq_handlers(ls_dev);
+poll_mode:
 	if (err) {
 		dev_info(dev, "Using polling mode for DPIO %d\n",
 			 desc.dpio_id);
@@ -253,7 +256,8 @@ ldpaa_dpio_probe(struct fsl_mc_device *ls_dev)
 		/* TEMP: Start polling if IRQ could not
 		   be registered.  This will go away once
 		   KVM support for MSI is present */
-		fsl_mc_free_irqs(ls_dev);
+		if (irq_allocated == true)
+			fsl_mc_free_irqs(ls_dev);
 
 		if (desc.stash_affinity)
 			priv->thread = kthread_create_on_cpu(dpio_thread,
@@ -297,7 +301,6 @@ err_dpaa_io_add:
 	fsl_mc_free_irqs(ls_dev);
 */
 err_dpaa_thread:
-err_allocate_irqs:
 err_dpaa_io_create:
 	dpio_disable(ls_dev->mc_io, ls_dev->mc_handle);
 err_get_attr:
-- 
1.9.1

