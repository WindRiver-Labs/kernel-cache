From f19251f1f3897fcc8ad8e3a1b6ca37a6f9065cae Mon Sep 17 00:00:00 2001
From: Marc Zyngier <marc.zyngier@arm.com>
Date: Mon, 24 Nov 2014 14:35:18 +0000
Subject: [PATCH 17/19] irqchip: GICv3: ITS: plug ITS init into main GICv3 code

commit da33f31de3e1eebb198109c1cccdc3a094e369c4 upstream

As the ITS is always a subsystem if GICv3, its probing/init is
driven by the main GICv3 code.

Plug that code in (guarded by a config option).

Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
Link: https://lkml.kernel.org/r/1416839720-18400-12-git-send-email-marc.zyngier@arm.com
Signed-off-by: Jason Cooper <jason@lakedaemon.net>
[irq-gic files are different from mainline, so this patch
 is not same as upstream.]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/irqchip/irq-gic-v3.c       | 13 ++++++++++++-
 include/linux/irqchip/arm-gic-v3.h |  5 +++--
 2 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/irqchip/irq-gic-v3.c b/drivers/irqchip/irq-gic-v3.c
index eb80746..3149155 100644
--- a/drivers/irqchip/irq-gic-v3.c
+++ b/drivers/irqchip/irq-gic-v3.c
@@ -628,7 +628,15 @@ static int gic_irq_domain_map(struct irq_domain *d, unsigned int irq,
 	/* Off limits */
 	if (hw >= GIC_ID_NR)
 		return -EPERM;
-	irq_set_chip_data(irq, d->host_data);
+	/* LPIs */
+	if (hw >= 8192 && hw < GIC_ID_NR) {
+		if (!gic_dist_supports_lpis())
+			return -EPERM;
+		irq_domain_set_info(d, irq, hw, &gic_chip, d->host_data,
+				    handle_fasteoi_irq, NULL, NULL);
+		set_irq_flags(irq, IRQF_VALID);
+	}
+
 	return 0;
 }
 
@@ -649,6 +657,9 @@ static int gic_irq_domain_xlate(struct irq_domain *d,
 	case 1:			/* PPI */
 		*out_hwirq = intspec[1] + 16;
 		break;
+	case GIC_IRQ_TYPE_LPI:	/* LPI */
+		*out_hwirq = intspec[1];
+		break;
 	default:
 		return -EINVAL;
 	}
diff --git a/include/linux/irqchip/arm-gic-v3.h b/include/linux/irqchip/arm-gic-v3.h
index 71b58a4..40c640e 100644
--- a/include/linux/irqchip/arm-gic-v3.h
+++ b/include/linux/irqchip/arm-gic-v3.h
@@ -311,9 +311,10 @@ static inline void gic_write_eoir(u64 irq)
 	isb();
 }
 
+struct irq_domain;
 int its_cpu_init(void);
-struct irq_chip *its_init(struct device_node *node, struct rdist *rdist,
-			  struct irq_domain *domain);
+int its_init(struct device_node *node, struct rdist *rdists,
+	     struct irq_domain *domain);
 int __its_msi_prepare(struct irq_domain *domain, u32 dev_id,
 	struct device *dev, int nvec, msi_alloc_info_t *info);
 
-- 
1.9.1

