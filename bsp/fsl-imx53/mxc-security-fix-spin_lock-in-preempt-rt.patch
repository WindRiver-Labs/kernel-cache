From 253ac17f8de7b69aaa3859440605146c1b275124 Mon Sep 17 00:00:00 2001
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Sat, 16 Mar 2013 12:52:57 +0800
Subject: [PATCH 3/3] mxc/security: fix spin_lock in preempt-rt

Signed-off-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 drivers/mxc/security/sahara2/include/linux_port.h |   22 ++++++++++++++++++++-
 1 files changed, 21 insertions(+), 1 deletions(-)

diff --git a/drivers/mxc/security/sahara2/include/linux_port.h b/drivers/mxc/security/sahara2/include/linux_port.h
index bf1f80a..e234387 100644
--- a/drivers/mxc/security/sahara2/include/linux_port.h
+++ b/drivers/mxc/security/sahara2/include/linux_port.h
@@ -910,7 +910,7 @@ inline static os_lock_t os_lock_alloc_init(void)
 	raw_spinlock_t *lockp;
 	lockp = (raw_spinlock_t *) kmalloc(sizeof(raw_spinlock_t), 0);
 	if (lockp) {
-		_raw_spin_lock_init(lockp);
+		raw_spin_lock_init(lockp);
 	} else {
 		printk("OS: lock init failed\n");
 	}
@@ -948,8 +948,13 @@ inline static os_lock_t os_lock_alloc_init(void)
  *
  * @return void
  */
+#ifdef CONFIG_PREEMPT_RT_FULL
+#define os_lock(lock_handle)                                              \
+   raw_spin_lock(lock_handle)
+#else
 #define os_lock(lock_handle)                                              \
    spin_lock(lock_handle)
+#endif
 
 /*!
  * Unlock a lock.  Lock must have been acquired by #os_lock().
@@ -958,8 +963,13 @@ inline static os_lock_t os_lock_alloc_init(void)
  *
  * @return void
  */
+#ifdef CONFIG_PREEMPT_RT_FULL
+#define os_unlock(lock_handle)                                            \
+   raw_spin_unlock(lock_handle)
+#else
 #define os_unlock(lock_handle)                                            \
    spin_unlock(lock_handle)
+#endif
 
 /*!
  * Acquire a lock in non-ISR context
@@ -971,8 +981,13 @@ inline static os_lock_t os_lock_alloc_init(void)
  *
  * @return void
  */
+#ifdef CONFIG_PREEMPT_RT_FULL
+#define os_lock_save_context(lock_handle, context)                        \
+    raw_spin_lock_irqsave(lock_handle, context)
+#else
 #define os_lock_save_context(lock_handle, context)                        \
     spin_lock_irqsave(lock_handle, context)
+#endif
 
 /*!
  * Release a lock in non-ISR context
@@ -982,8 +997,13 @@ inline static os_lock_t os_lock_alloc_init(void)
  *
  * @return void
  */
+#ifdef CONFIG_PREEMPT_RT_FULL
+#define os_unlock_restore_context(lock_handle, context)                  \
+    raw_spin_unlock_irqrestore(lock_handle, context)
+#else
 #define os_unlock_restore_context(lock_handle, context)                  \
     spin_unlock_irqrestore(lock_handle, context)
+#endif
 
 /*!
  * Deallocate a lock handle.
-- 
1.7.0

