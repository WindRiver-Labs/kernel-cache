From ca3500e43aa42edfd4d251447ae900c815978e77 Mon Sep 17 00:00:00 2001
From: jiaxi liu <jiaxi.liu@windriver.com>
Date: Wed, 23 Nov 2011 15:41:48 +0800
Subject: [PATCH] bcmring_net fix different head between capture and really send

We observe this issue on Broadcom network device driver:
1. ping command could work fine, no lost packet.
2. use tcpdump or custom test case could discover that the packet's
head is different between capture and really send.

Here is some output showing the first 32 octets of capture buffer
   8e 6b b4 b0 17 81 a2 86  1c 00 00 00 08 00 45 00
   03 dd ae 48 40 00 40 06  04 86 c0 a8 01 99 c0 a8

In that case, the content should be
   destination mac    00:24:8c:03:8e:6b
   source mac         b4:b0:17:81:a2:86

but in fact, the destination mac is missing the first 4 bytes.

Cause:
When packets are processed, bytes 0-16 in the packet header are
re-written by the driver with a Broadcom specific header that conveys
management instructions to the management block running on the CPU.

The re-write of the header occurs after capture and before the send,
which makes the captured packet and sent packet different.

Fix this issue by make a private copy before sending the data.

Signed-off-by: jiaxi liu <jiaxi.liu@windriver.com>
---
 drivers/net/bcmring_net.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/drivers/net/bcmring_net.c b/drivers/net/bcmring_net.c
index ec50555..4b0d5e1 100644
--- a/drivers/net/bcmring_net.c
+++ b/drivers/net/bcmring_net.c
@@ -1184,6 +1184,10 @@ static void tx(BCMRING_PRIV *privp)
 		/* Get data from Tx FIFO */
 		kfifo_get(privp->dma.txFifop, (unsigned char *)&skb,
 				sizeof(struct sk_buff *));
+
+		/* if skb has been cloned, make a private copy for really send */
+		skb = skb_unshare(skb, GFP_ATOMIC);
+
 		bufp = skb->data;
 		len = skb->len;
 
-- 
1.7.0.4

