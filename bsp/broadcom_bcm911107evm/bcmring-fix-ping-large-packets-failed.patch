From 5f9651d90391d7967bf7cff1a05dfd80ea480ffc Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Fri, 9 Dec 2011 10:46:29 +0800
Subject: [PATCH] bcmring: fix ping large packets failed

Problem:
The two Ethernet ports(J501 and J502) on BCM11107 board can't ping
large packets successfully.

Root cause:
bcmring driver does not set the IMP speed properly.
bcmring driver only get the IMP speed from LAN port, but when the
LAN port is not up, LAN port always return 1000M and driver writes
this value to IMP speed register, this will makes PC port can't
works normally.

Fix:
Set the IMP speed according to the link state of both the two
ethernet ports.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/net/bcmring_net.c |   65 +++++++++++++++++++++++++++++++-------------
 1 files changed, 46 insertions(+), 19 deletions(-)

diff --git a/drivers/net/bcmring_net.c b/drivers/net/bcmring_net.c
index 4b0d5e1..756107a 100644
--- a/drivers/net/bcmring_net.c
+++ b/drivers/net/bcmring_net.c
@@ -1114,43 +1114,70 @@ static void ethStatusWork(struct work_struct *work)
 	static uint32_t impSpeedPrev = -1;
 
 	BCMRING_PRIV *privp;
-	int port;
-	int up;
+	int LanPort, PcPort;
+	int LanUp, PcUp;
 	int change;
-	uint32_t impSpeed;
+	uint32_t impLanSpeed, impPcSpeed;
 
 	(void)work;
 
 	/* Check link state of LAN port */
 	privp = netdev_priv(localDevp);
-	port = privp->eth.phyPort;
+	LanPort = privp->eth.phyPort;
+	PcPort = privp->eth.port.pc;
 
-	impSpeed = ethHw_portSpeed(port);
+	LanUp = ethHw_portLinkStatus(LanPort);
+	PcUp = ethHw_portLinkStatus(PcPort);
 
-	if ((impSpeed != impSpeedPrev) || (port != portPrev)) {
+	/* There are three modes for the link state: 1). Only LAN port is up. 
+	 * 2). Only PC port is up. 3). Both LAN and PC ports are up.
+	 * Because if a port is down, ethHw_portSpeed will return 1000 by default,
+	 * so we must consider all the three modes to set IMP speed correctly.
+	 */
+	if (LanUp && !PcUp) {
+		impLanSpeed = ethHw_portSpeed(LanPort);
+		if ((impLanSpeed != impSpeedPrev) || (LanPort != portPrev)) {
+			msg_printk(MSG_LEVEL_STATUS_VERBOSE,
+				"Changing internal port Rx speed to %i\n", impLanSpeed);
+			ethHw_impSpeedSet(impLanSpeed, 1000);
+			impSpeedPrev = impLanSpeed;
+			portPrev = LanPort;
+		}	
+	} else if (PcUp && !LanUp) {
+		impPcSpeed = ethHw_portSpeed(PcPort);
+		if ((impPcSpeed != impSpeedPrev) || (PcPort != portPrev)) {
+                        msg_printk(MSG_LEVEL_STATUS_VERBOSE,
+				"Changing internal port Rx speed to %i\n", impPcSpeed);
+			ethHw_impSpeedSet(impPcSpeed, 1000);
+			impSpeedPrev = impPcSpeed;
+			portPrev = PcPort;
+                }
+	} else if (LanUp && PcUp) {
+		impPcSpeed = ethHw_portSpeed(PcPort);
+		if ((impPcSpeed != impSpeedPrev) || (LanPort != portPrev)) {
+			msg_printk(MSG_LEVEL_STATUS_VERBOSE,
+				"Changing internal port Rx speed to %i\n", impPcSpeed);
+			ethHw_impSpeedSet(impPcSpeed, 1000);
+			impSpeedPrev = impPcSpeed;
+			portPrev = LanPort;
+                }
+	} else
 		msg_printk(MSG_LEVEL_STATUS_VERBOSE,
-				"Changing internal port Rx speed to %i\n", impSpeed);
-		ethHw_impSpeedSet(impSpeed, 1000);
-		impSpeedPrev = impSpeed;
-		portPrev = port;
-	}
+			"None of the ethernet ports are up, please check your setting:" 
+			"is that your network cable disconnected?\n");
 
-	change = ethHw_portLinkStatusChange(port);
-
-	if (change || (port != portPrev)) {
-		portPrev = port;
+	change = ethHw_portLinkStatusChange(LanPort);
 
+	if (change || (LanPort != portPrev)) {
 		/* Link status has changed */
-		up = ethHw_portLinkStatus(port);
-
-		if (up || (port != portPrev)) {
+		if (LanUp || (LanPort != portPrev)) {
 			msg_printk(MSG_LEVEL_STATUS_VERBOSE, "link up\n");
 			netif_carrier_on(localDevp);
 		} else {
 			msg_printk(MSG_LEVEL_STATUS_VERBOSE, "link down\n");
 			netif_carrier_off(localDevp);
 		}
-		portPrev = port;
+		portPrev = LanPort;
 	}
 
 	queue_delayed_work(ethStatusWorkQueuep, &ethStatusTask,
-- 
1.7.0.4

