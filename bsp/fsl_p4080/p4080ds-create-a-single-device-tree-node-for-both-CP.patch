From 1fc9c5996f21b2c941d83397b501ac8d4694dd08 Mon Sep 17 00:00:00 2001
From: Andrew Liu <shengping.liu@windriver.com>
Date: Tue, 3 Aug 2010 17:45:45 +0800
Subject: [PATCH 24/26] p4080ds: create a single device tree node for both CPCs

Patch taken from FSL vendor SDK 2.1.

Merge the two CPC device tree nodes into a single node that lists both device
register ranges in the reg property.  Update the L2 nodes to point to this
single node.

The P4080 has two CPC (L3 cache) devices, but they act as one.  Instead of
having two CPC nodes in the device tree, we should have a single node that
represents both CPCs.  The reg property of this node has two register ranges
in it.  Code can determine the number of CPCs by counting the number of entries
in the reg property.  The cache-sets and cache-size properties reflect the
combined values of all CPC nodes together.  That is, if there are two 1MB CPC
devices, then the cache-size property will contain 0x200000 (2MB).

Also add the "cache" string to the compatible property, because the code in
U-Boot which updates the compatible property for L3 nodes will be deleted.
All it does is add the "cache" string, so it makes more sense to have the DTS
be correct.

Signed-off-by: Timur Tabi <timur@freescale.com>
Signed-off-by: Roy Zang <tie-fei.zang@freescale.com>
Integrated-by: Andrew Liu <shengping.liu@windriver.com>
---
 arch/powerpc/boot/dts/p4080ds_36b.dts |   31 ++++++++++++++-----------------
 1 files changed, 14 insertions(+), 17 deletions(-)

diff --git a/arch/powerpc/boot/dts/p4080ds_36b.dts b/arch/powerpc/boot/dts/p4080ds_36b.dts
index 23a7ee5..04f6398 100644
--- a/arch/powerpc/boot/dts/p4080ds_36b.dts
+++ b/arch/powerpc/boot/dts/p4080ds_36b.dts
@@ -111,7 +111,7 @@
 			reg = <0>;
 			next-level-cache = <&L2_0>;
 			L2_0: l2-cache {
-				next-level-cache = <&L3_0>;
+				next-level-cache = <&cpc>;
 			};
 		};
 		cpu1: PowerPC,4080@1 {
@@ -119,7 +119,7 @@
 			reg = <1>;
 			next-level-cache = <&L2_1>;
 			L2_1: l2-cache {
-				next-level-cache = <&L3_0>;
+				next-level-cache = <&cpc>;
 			};
 		};
 		cpu2: PowerPC,4080@2 {
@@ -127,7 +127,7 @@
 			reg = <2>;
 			next-level-cache = <&L2_2>;
 			L2_2: l2-cache {
-				next-level-cache = <&L3_0>;
+				next-level-cache = <&cpc>;
 			};
 		};
 		cpu3: PowerPC,4080@3 {
@@ -135,7 +135,7 @@
 			reg = <3>;
 			next-level-cache = <&L2_3>;
 			L2_3: l2-cache {
-				next-level-cache = <&L3_0>;
+				next-level-cache = <&cpc>;
 			};
 		};
 		cpu4: PowerPC,4080@4 {
@@ -143,7 +143,7 @@
 			reg = <4>;
 			next-level-cache = <&L2_4>;
 			L2_4: l2-cache {
-				next-level-cache = <&L3_0>;
+				next-level-cache = <&cpc>;
 			};
 		};
 		cpu5: PowerPC,4080@5 {
@@ -151,7 +151,7 @@
 			reg = <5>;
 			next-level-cache = <&L2_5>;
 			L2_5: l2-cache {
-				next-level-cache = <&L3_0>;
+				next-level-cache = <&cpc>;
 			};
 		};
 		cpu6: PowerPC,4080@6 {
@@ -159,7 +159,7 @@
 			reg = <6>;
 			next-level-cache = <&L2_6>;
 			L2_6: l2-cache {
-				next-level-cache = <&L3_0>;
+				next-level-cache = <&cpc>;
 			};
 		};
 		cpu7: PowerPC,4080@7 {
@@ -167,7 +167,7 @@
 			reg = <7>;
 			next-level-cache = <&L2_7>;
 			L2_7: l2-cache {
-				next-level-cache = <&L3_0>;
+				next-level-cache = <&cpc>;
 			};
 		};
 	};
@@ -668,15 +668,12 @@
 			interrupt-parent = <&mpic>;
 		};
 
-		L3_0: l3-cache-controller@10000 {
-			compatible = "fsl,p4080-l3-cache-controller";
-			reg = <0x10000 0x1000>;
-
-		};
-
-		L3_1: l3-cache-controller@11000 {
-			compatible = "fsl,p4080-l3-cache-controller";
-			reg = <0x11000 0x1000>;
+		cpc: l3-cache-controller {
+			compatible = "fsl,p4080-l3-cache-controller", "cache";
+			reg = <0x10000 0x1000
+				 0x11000 0x1000>;
+			interrupts = <16 2 1 27
+					16 2 1 26>;
 		};
 
 		iommu@20000 {
-- 
1.6.5.2

