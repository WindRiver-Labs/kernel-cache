From 72e8e3994858248b42651bd6a12b21e764c48725 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 19 May 2010 00:01:05 -0700
Subject: [PATCH 13/26] powerpc: enable swiotlb for p4080ds

The PCIe host controller on p4080ds can't access all the 4G
ram. So we have to enable the swiotlb to make the PCIe device
work correctly. The mainline kernel already have this swiotlb support,
but we remove that when porting the FSL SDK. This patch just restore
these codes, and also remove some duplicate codes in p4080_ds.c.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/platforms/85xx/p4080_ds.c |   88 ++-----------------------------
 1 files changed, 6 insertions(+), 82 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/p4080_ds.c b/arch/powerpc/platforms/85xx/p4080_ds.c
index 446d5e9..e6210de 100644
--- a/arch/powerpc/platforms/85xx/p4080_ds.c
+++ b/arch/powerpc/platforms/85xx/p4080_ds.c
@@ -30,73 +30,12 @@
 #include <sysdev/fsl_soc.h>
 #include <sysdev/fsl_pci.h>
 
-void __init mpc85xx_ds_pic_init(void)
-{
-	struct mpic *mpic;
-	struct resource r;
-	struct device_node *np = NULL;
-
-	np = of_find_node_by_type(np, "open-pic");
-
-	if (np == NULL) {
-		printk(KERN_ERR "Could not find open-pic node\n");
-		return;
-	}
-
-	if (of_address_to_resource(np, 0, &r)) {
-		printk(KERN_ERR "Failed to map mpic register space\n");
-		of_node_put(np);
-		return;
-	}
-
-	mpic = mpic_alloc(np, r.start, MPIC_PRIMARY | MPIC_ENABLE_COREINT |
-			  MPIC_BIG_ENDIAN | MPIC_BROKEN_FRR_NIRQS |
-			  MPIC_SINGLE_DEST_CPU,
-			0, 256, " OpenPIC  ");
-	BUG_ON(mpic == NULL);
-
-	mpic_init(mpic);
-}
+#include "corenet_ds.h"
 
 #ifdef CONFIG_PCI
 static int primary_phb_addr;
 #endif
 
-/*
- * Setup the architecture
- */
-#ifdef CONFIG_SMP
-void __init mpc85xx_smp_init(void);
-#endif
-static void __init mpc85xx_ds_setup_arch(void)
-{
-#ifdef CONFIG_PCI
-	struct device_node *np;
-#endif
-
-	if (ppc_md.progress)
-		ppc_md.progress("mpc85xx_ds_setup_arch()", 0);
-
-#ifdef CONFIG_SMP
-	mpc85xx_smp_init();
-#endif
-
-#ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci") {
-		if (of_device_is_compatible(np, "fsl,p4080-pcie")) {
-			struct resource rsrc;
-			of_address_to_resource(np, 0, &rsrc);
-			if ((rsrc.start & 0xfffff) == primary_phb_addr)
-				fsl_add_bridge(np, 1);
-			else
-				fsl_add_bridge(np, 0);
-		}
-	}
-#endif
-
-	printk(KERN_INFO "P4080 DS board from Freescale Semiconductor\n");
-}
-
 int vsc824x_add_skew(struct phy_device *phydev);
 #define PHY_ID_VSC8244                  0x000fc6c0
 static int __init board_fixups(void)
@@ -107,28 +46,10 @@ static int __init board_fixups(void)
 }
 machine_device_initcall(p4080_ds, board_fixups);
 
-static const struct of_device_id of_device_ids[] __devinitconst = {
-	{
-		.compatible	= "simple-bus"
-	},
-	{
-		.compatible	= "fsl,dpaa"
-	},
-	{
-		.compatible	= "fsl,rapidio-delta",
-	},
-	{}
-};
-
 static int __init declare_of_platform_devices(void)
 {
 	struct device_node *np;
 	struct of_device *dev;
-	int err;
-
-	err = of_platform_bus_probe(NULL, of_device_ids, NULL);
-	if (err)
-		return err;
 
 	/* Now probe the fake MDIO buses */
 	for_each_compatible_node(np, NULL, "fsl,p4080ds-mdio") {
@@ -198,8 +119,8 @@ static __init void p4080_init_early(void)
 define_machine(p4080_ds) {
 	.name			= "P4080 DS",
 	.probe			= p4080_ds_probe,
-	.setup_arch		= mpc85xx_ds_setup_arch,
-	.init_IRQ		= mpc85xx_ds_pic_init,
+	.setup_arch		= corenet_ds_setup_arch,
+	.init_IRQ		= corenet_ds_pic_init,
 #ifdef CONFIG_PCI
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
 #endif
@@ -209,3 +130,6 @@ define_machine(p4080_ds) {
 	.progress		= udbg_progress,
 	.init_early		= p4080_init_early,
 };
+
+machine_device_initcall(p4080_ds, corenet_ds_publish_devices);
+machine_arch_initcall(p4080_ds, swiotlb_setup_bus_notifier);
-- 
1.6.5.2

