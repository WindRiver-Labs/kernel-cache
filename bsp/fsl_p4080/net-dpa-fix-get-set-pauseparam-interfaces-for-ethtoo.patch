From 3b5c7f16dea159a83fd0bb64d5823022ca4e1dd9 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Fri, 30 Dec 2011 18:04:39 +0800
Subject: [PATCH] net/dpa: fix get/set pauseparam interfaces for ethtool

Problem:
Failed to use ethtool to set and get the correct status of tx/rx
pause-frames.

Root cause:
The interfaces for ethtool get and set pauseparam is incomplete,
so "Rx_Flow" and "Tx_Flow" bits in MACCFG1 register which reflect
the PAUSE-frames status can't be set correctly and also can't be
got correctly by ethtool.

Fix:
Use the existing interfaces and add some necessary interfaces to
implement this function.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 .../net/dpa/NetCommSw/Peripherals/FM/MAC/dtsec.c   |   44 +++++++++++++++
 .../net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.c  |   28 ++++++++++
 .../net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.h  |    3 +
 .../net/dpa/NetCommSw/inc/Peripherals/fm_mac_ext.h |   28 ++++++++++
 drivers/net/dpa/dpa-ethtool.c                      |   25 +++++++++
 drivers/net/dpa/mac-api.c                          |   56 ++++++++++++++++++++
 drivers/net/dpa/mac.h                              |    2 +
 7 files changed, 186 insertions(+), 0 deletions(-)

diff --git a/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/dtsec.c b/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/dtsec.c
index 2e1c84f..d7ec7f7 100644
--- a/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/dtsec.c
+++ b/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/dtsec.c
@@ -803,6 +803,47 @@ static t_Error DtsecRxIgnoreMacPause(t_Handle h_Dtsec, bool en)
     return E_OK;
 }
 
+/* .............................................................................. */
+
+static t_Error DtsecGetTxMacPause(t_Handle h_Dtsec, bool *tx)
+{
+    t_Dtsec         *p_Dtsec = (t_Dtsec *)h_Dtsec;
+    t_DtsecMemMap   *p_MemMap;
+
+    SANITY_CHECK_RETURN_ERROR(p_Dtsec, E_INVALID_STATE);
+    SANITY_CHECK_RETURN_ERROR(!p_Dtsec->p_DtsecDriverParam, E_INVALID_STATE);
+    SANITY_CHECK_RETURN_ERROR(p_Dtsec->p_MemMap, E_INVALID_STATE);
+
+    p_MemMap = (t_DtsecMemMap*)(p_Dtsec->p_MemMap);
+
+    if (GET_UINT32(p_MemMap->maccfg1) & MACCFG1_TX_FLOW)
+	*tx = TRUE;
+    else 
+	*tx = FALSE;
+
+    return E_OK;
+}
+
+/* .............................................................................. */
+
+static t_Error DtsecGetRxMacPause(t_Handle h_Dtsec, bool *rx)
+{
+    t_Dtsec         *p_Dtsec = (t_Dtsec *)h_Dtsec;
+    t_DtsecMemMap   *p_MemMap;
+
+    SANITY_CHECK_RETURN_ERROR(p_Dtsec, E_INVALID_STATE);
+    SANITY_CHECK_RETURN_ERROR(!p_Dtsec->p_DtsecDriverParam, E_INVALID_STATE);
+    SANITY_CHECK_RETURN_ERROR(p_Dtsec->p_MemMap, E_INVALID_STATE);
+
+    p_MemMap = (t_DtsecMemMap*)(p_Dtsec->p_MemMap);
+
+    if (GET_UINT32(p_MemMap->maccfg1) & MACCFG1_RX_FLOW)
+        *rx = TRUE;
+    else
+        *rx = FALSE;
+
+    return E_OK;
+}
 
 /* .............................................................................. */
 
@@ -1847,6 +1888,9 @@ static void InitFmMacControllerDriver(t_FmMacControllerDriver *p_FmMacController
     p_FmMacControllerDriver->f_FM_MAC_SetTxAutoPauseFrames      = DtsecTxMacPause;
     p_FmMacControllerDriver->f_FM_MAC_SetRxIgnorePauseFrames    = DtsecRxIgnoreMacPause;
 
+    p_FmMacControllerDriver->f_FM_MAC_GetTxPauseFrames		= DtsecGetTxMacPause;
+    p_FmMacControllerDriver->f_FM_MAC_GetRxPauseFrames		= DtsecGetRxMacPause;
+
     p_FmMacControllerDriver->f_FM_MAC_ResetCounters             = DtsecResetCounters;
     p_FmMacControllerDriver->f_FM_MAC_GetStatistics             = DtsecGetStatistics;
 
diff --git a/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.c b/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.c
index 4eb3954..e263aeb 100644
--- a/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.c
+++ b/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.c
@@ -322,6 +322,34 @@ t_Error FM_MAC_SetRxIgnorePauseFrames (t_Handle h_FmMac, bool en)
 
 /* ........................................................................... */
 
+t_Error FM_MAC_GetTxPauseFrames (t_Handle h_FmMac, bool *tx)
+{
+    t_FmMacControllerDriver *p_FmMacControllerDriver = (t_FmMacControllerDriver *)h_FmMac;
+
+    SANITY_CHECK_RETURN_ERROR(p_FmMacControllerDriver, E_INVALID_HANDLE);
+
+    if (p_FmMacControllerDriver->f_FM_MAC_GetTxPauseFrames)
+        return p_FmMacControllerDriver->f_FM_MAC_GetTxPauseFrames(h_FmMac, tx);
+
+    RETURN_ERROR(MINOR, E_NOT_SUPPORTED, NO_MSG);
+}
+
+/* ........................................................................... */
+
+t_Error FM_MAC_GetRxPauseFrames (t_Handle h_FmMac, bool *rx)
+{
+    t_FmMacControllerDriver *p_FmMacControllerDriver = (t_FmMacControllerDriver *)h_FmMac;
+
+    SANITY_CHECK_RETURN_ERROR(p_FmMacControllerDriver, E_INVALID_HANDLE);
+
+    if (p_FmMacControllerDriver->f_FM_MAC_GetRxPauseFrames)
+        return p_FmMacControllerDriver->f_FM_MAC_GetRxPauseFrames(h_FmMac, rx);
+
+    RETURN_ERROR(MINOR, E_NOT_SUPPORTED, NO_MSG);
+}
+
+/* ........................................................................... */
+
 t_Error FM_MAC_ResetCounters (t_Handle h_FmMac)
 {
     t_FmMacControllerDriver *p_FmMacControllerDriver = (t_FmMacControllerDriver *)h_FmMac;
diff --git a/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.h b/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.h
index 9a64f14..25d7612 100644
--- a/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.h
+++ b/drivers/net/dpa/NetCommSw/Peripherals/FM/MAC/fm_mac.h
@@ -88,6 +88,9 @@ typedef struct {
     t_Error (*f_FM_MAC_SetTxAutoPauseFrames)   (t_Handle h_FmMac, uint16_t pauseTime);
     t_Error (*f_FM_MAC_SetRxIgnorePauseFrames) (t_Handle h_FmMac, bool en);
 
+    t_Error (*f_FM_MAC_GetTxPauseFrames) (t_Handle h_FmMac, bool *tx);
+    t_Error (*f_FM_MAC_GetRxPauseFrames) (t_Handle h_FmMac, bool *rx);
+
     t_Error (*f_FM_MAC_ResetCounters) (t_Handle h_FmMac);
     t_Error (*f_FM_MAC_GetStatistics) (t_Handle h_FmMac, t_FmMacStatistics *p_Statistics);
 
diff --git a/drivers/net/dpa/NetCommSw/inc/Peripherals/fm_mac_ext.h b/drivers/net/dpa/NetCommSw/inc/Peripherals/fm_mac_ext.h
index 9046308..59e873c 100644
--- a/drivers/net/dpa/NetCommSw/inc/Peripherals/fm_mac_ext.h
+++ b/drivers/net/dpa/NetCommSw/inc/Peripherals/fm_mac_ext.h
@@ -466,6 +466,34 @@ t_Error FM_MAC_SetTxAutoPauseFrames (t_Handle h_FmMac, uint16_t pauseTime);
 t_Error FM_MAC_SetRxIgnorePauseFrames (t_Handle h_FmMac, bool en);
 
 /**************************************************************************//**
+ @Function      FM_MAC_GetTxPauseFrames
+
+ @Description   Get the status of transmition of Pause-Frames.
+
+ @Param[in]     h_FmMac     A handle to a FM MAC Module.
+ @Param[in]     tx          The status of MACCFG1_TX_FLOW bit from MACCFG1. 
+
+ @Return        E_OK on success; Error code otherwise.
+
+ @Cautions      Allowed only following FM_MAC_Init().
+*//***************************************************************************/
+t_Error FM_MAC_GetTxPauseFrames (t_Handle h_FmMac, bool *tx);
+
+/**************************************************************************//**
+ @Function      FM_MAC_GetRxPauseFrames
+
+ @Description   Get the status of ignoring of Pause-Frames.
+
+ @Param[in]     h_FmMac     A handle to a FM MAC Module.
+ @Param[in]     rx          The status of MACCFG1_RX_FLOW bit from MACCFG1.
+
+ @Return        E_OK on success; Error code otherwise.
+
+ @Cautions      Allowed only following FM_MAC_Init().
+*//***************************************************************************/
+t_Error FM_MAC_GetRxPauseFrames (t_Handle h_FmMac, bool *rx);
+
+/**************************************************************************//**
  @Function      FM_MAC_ResetCounters
 
  @Description   reset all statistics counters
diff --git a/drivers/net/dpa/dpa-ethtool.c b/drivers/net/dpa/dpa-ethtool.c
index 04ce5d8..4658e88 100644
--- a/drivers/net/dpa/dpa-ethtool.c
+++ b/drivers/net/dpa/dpa-ethtool.c
@@ -152,6 +152,8 @@ void __cold dpa_get_ringparam(struct net_device *net_dev, struct ethtool_ringpar
 void __cold dpa_get_pauseparam(struct net_device *net_dev, struct ethtool_pauseparam *et_pauseparam)
 {
 	struct dpa_priv_s	*priv;
+	int                     _errno;
+	bool   tx, rx;
 
 	priv = netdev_priv(net_dev);
 
@@ -165,11 +167,25 @@ void __cold dpa_get_pauseparam(struct net_device *net_dev, struct ethtool_pausep
 	}
 
 	et_pauseparam->autoneg	= priv->mac_dev->phy_dev->autoneg;
+
+	_errno = priv->mac_dev->get_pause_frame(priv->mac_dev, &tx, &rx);
+	if (_errno < 0) {
+		if (netif_msg_drv(priv))
+			cpu_netdev_err(net_dev,
+				"mac_dev->get_pause_frame() = %d\n",
+				_errno);
+	} else {
+		if (tx)
+			et_pauseparam->tx_pause = 1;
+		if (rx)
+			et_pauseparam->rx_pause = 1;
+	}
 }
 
 int __cold dpa_set_pauseparam(struct net_device *net_dev, struct ethtool_pauseparam *et_pauseparam)
 {
 	struct dpa_priv_s	*priv;
+	int			_errno;
 
 	priv = netdev_priv(net_dev);
 
@@ -184,6 +200,15 @@ int __cold dpa_set_pauseparam(struct net_device *net_dev, struct ethtool_pausepa
 
 	priv->mac_dev->phy_dev->autoneg = et_pauseparam->autoneg;
 
+	_errno = priv->mac_dev->set_pause_frame(priv->mac_dev, et_pauseparam);
+	if (_errno < 0) {
+		if (netif_msg_drv(priv))
+			cpu_netdev_err(net_dev,
+				"mac_dev->set_pause_frame() = %d\n",
+				_errno);
+		return _errno;
+	}
+
 	return 0;
 }
 
diff --git a/drivers/net/dpa/mac-api.c b/drivers/net/dpa/mac-api.c
index 11b9ab2..aa8fe5f 100644
--- a/drivers/net/dpa/mac-api.c
+++ b/drivers/net/dpa/mac-api.c
@@ -43,6 +43,7 @@
 #include "error_ext.h"	/* GET_ERROR_TYPE, E_OK */
 #include "fm_mac_ext.h"
 #include "fm_rtc_ext.h"
+#include "NetCommSw/Peripherals/FM/MAC/dtsec.h"
 
 #define MAC_DESCRIPTION "FSL FMan MAC API based driver"
 
@@ -577,6 +578,59 @@ static int __cold fm_rtc_set_drift(struct net_device *net_dev, uint32_t drift)
 	return _errno;
 }
 
+static int __cold set_pause_frame(struct mac_device *mac_dev, struct ethtool_pauseparam *pause)
+{
+	int     _errno_get, _errno = 0;
+	t_Error err;
+
+	uint16_t tx_pausetime = pause->tx_pause ? DEFAULT_pauseTime : 0;
+	err = FM_MAC_SetTxAutoPauseFrames(
+		((struct mac_priv_s *)macdev_priv(mac_dev))->mac, tx_pausetime);
+	_errno_get = -GET_ERROR_TYPE(err);
+	if (_errno_get < 0) {
+		dpaa_eth_err(mac_dev->dev,
+			"FM_MAC_SetTxAutoPauseFrames() = 0x%08x\n", err);
+		_errno = _errno_get;
+	}
+
+	err = FM_MAC_SetRxIgnorePauseFrames(
+		((struct mac_priv_s *)macdev_priv(mac_dev))->mac, !pause->rx_pause);
+	_errno_get = -GET_ERROR_TYPE(err);
+	if (_errno_get < 0) {
+		dpaa_eth_err(mac_dev->dev,
+			"FM_MAC_SetRxIgnorePauseFrames() = 0x%08x\n", err);
+		_errno = _errno_get;
+	}
+						 
+	return _errno;
+}
+
+static int __cold get_pause_frame(struct mac_device *mac_dev, bool *tx, bool *rx)
+{
+	int    _errno_get, _errno = 0;
+	t_Error err;
+
+	err = FM_MAC_GetTxPauseFrames(
+		((struct mac_priv_s *)macdev_priv(mac_dev))->mac, tx);
+	 _errno_get = -GET_ERROR_TYPE(err);
+	if (_errno_get < 0) {
+		dpaa_eth_err(mac_dev->dev,
+			"FM_MAC_GetTxPauseFrames() = 0x%08x\n", err);
+		_errno = _errno_get;
+	}
+
+	err = FM_MAC_GetRxPauseFrames(
+		((struct mac_priv_s *)macdev_priv(mac_dev))->mac, rx);
+	_errno_get = -GET_ERROR_TYPE(err);
+	if (_errno_get < 0) {
+		dpaa_eth_err(mac_dev->dev,
+			"FM_MAC_GetRxPauseFrames() = 0x%08x\n", err);
+		_errno = _errno_get;
+	}
+		
+	return _errno;			
+}
+
 static void __devinit __cold setup_dtsec(struct mac_device *mac_dev)
 {
 	mac_dev->init_phy	= dtsec_init_phy;
@@ -595,6 +649,8 @@ static void __devinit __cold setup_dtsec(struct mac_device *mac_dev)
 	mac_dev->fm_rtc_set_cnt		= fm_rtc_set_cnt;
 	mac_dev->fm_rtc_get_drift	= fm_rtc_get_drift;
 	mac_dev->fm_rtc_set_drift	= fm_rtc_set_drift;
+	mac_dev->set_pause_frame 	= set_pause_frame;
+	mac_dev->get_pause_frame	= get_pause_frame;
 }
 
 static void __devinit __cold setup_xgmac(struct mac_device *mac_dev)
diff --git a/drivers/net/dpa/mac.h b/drivers/net/dpa/mac.h
index 6b65779..a94a94e 100644
--- a/drivers/net/dpa/mac.h
+++ b/drivers/net/dpa/mac.h
@@ -91,6 +91,8 @@ struct mac_device {
 	int (*fm_rtc_set_cnt)(struct net_device *net_dev, uint64_t ts);
 	int (*fm_rtc_get_drift)(struct net_device *net_dev, uint32_t *drift);
 	int (*fm_rtc_set_drift)(struct net_device *net_dev, uint32_t drift);
+	int (*set_pause_frame)(struct mac_device *mac_dev, struct ethtool_pauseparam *pause);
+	int (*get_pause_frame)(struct mac_device *mac_dev, bool *tx, bool *rx);
 };
 
 struct mac_address {
-- 
1.7.0.4

