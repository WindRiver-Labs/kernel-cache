From cf7a0bf3b4371cd1971802476f43f329c8818080 Mon Sep 17 00:00:00 2001
From: Andrew Liu <shengping.liu@windriver.com>
Date: Tue, 3 Aug 2010 19:18:57 +0800
Subject: [PATCH 2/7] drivers : net : dpa : Fixed for preemption problem and crash in dpa.c during smp_processor_id()

From FSL vendor SDK 2.x.

Signed-off-by: Patrik Lindergren <palisv@gmail.com>
Integrated-by: Andrew Liu <shengping.liu@windriver.com>
---
 drivers/net/dpa/dpa.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/net/dpa/dpa.c b/drivers/net/dpa/dpa.c
index 142bb22..cbe9bdf 100644
--- a/drivers/net/dpa/dpa.c
+++ b/drivers/net/dpa/dpa.c
@@ -553,7 +553,7 @@ ingress_dqrr(struct qman_portal		*portal,
 		cpu_netdev_dbg(net_dev, "-> %s:%s[%s][%hu]()\n",
 			       __file__, __func__, rtx[_rtx], ed);
 
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 	percpu_priv->hwi[_rtx][ed]++;
 
 	if (list_empty(&percpu_priv->free_list)) {
@@ -747,7 +747,7 @@ static void egress_ern(struct qman_portal	*portal,
 
 	net_dev = ((struct dpa_fq *)fq)->net_dev;
 	priv = (typeof(priv))netdev_priv(net_dev);
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	if (netif_msg_intr(priv))
 		cpu_netdev_dbg(net_dev, "-> %s:%s()\n", __file__, __func__);
@@ -1107,7 +1107,7 @@ static void __hot dpa_tasklet(unsigned long data)
 		cpu_netdev_dbg(net_dev, "-> %s:%s()\n", __file__, __func__);
 
 	BUG_ON(percpu_priv != per_cpu_ptr(priv->percpu_priv,
-					  smp_processor_id()));
+					  raw_smp_processor_id()));
 
 	percpu_priv->swi++;
 
@@ -1160,7 +1160,7 @@ static int __hot dpa_tx(struct sk_buff *skb, struct net_device *net_dev)
 	struct dpa_percpu_priv_s *percpu_priv;
 
 	priv = netdev_priv(net_dev);
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 	dev = net_dev->dev.parent;
 
 	if (netif_msg_tx_queued(priv))
@@ -1370,7 +1370,7 @@ static void __cold dpa_timeout(struct net_device *net_dev)
 	struct dpa_percpu_priv_s *percpu_priv;
 
 	priv = netdev_priv(net_dev);
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	if (netif_msg_timer(priv))
 		cpu_netdev_dbg(net_dev, "-> %s:%s()\n", __file__, __func__);
@@ -1678,7 +1678,7 @@ _return:
 
 static u16 dpa_select_queue(struct net_device *net_dev, struct sk_buff *skb)
 {
-	return smp_processor_id();
+	return raw_smp_processor_id();
 }
 
 static const struct net_device_ops dpa_netdev_ops = {
-- 
1.6.5.2

