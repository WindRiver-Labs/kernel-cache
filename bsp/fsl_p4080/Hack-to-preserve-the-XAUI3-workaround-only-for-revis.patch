From 1b04cbf7297d4d6560b8dcac660872eac957935b Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Wed, 27 Jan 2010 14:27:29 +0800
Subject: [PATCH 131/148] Hack to preserve the XAUI3 workaround only for revision 1.0 of the silicon

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Signed-off-by: Roy Zang <tie-fei.zang@freescale.com>
[Cleanly applied the FSL SDK 2.0.3 patch:
"kernel-2.6.30-P4080-DPA-Hack-to-preserve-the-XAUI3-workaround-only-for-revis.patch"]
Integrated-by: Yuri Nedel <Yuri.Nedel@windriver.com>
---
 drivers/net/dpa/xgmac_mdio.c |   23 ++++++++++++++++++-----
 1 files changed, 18 insertions(+), 5 deletions(-)

diff --git a/drivers/net/dpa/xgmac_mdio.c b/drivers/net/dpa/xgmac_mdio.c
index dd2e285..67c4a92 100644
--- a/drivers/net/dpa/xgmac_mdio.c
+++ b/drivers/net/dpa/xgmac_mdio.c
@@ -70,10 +70,14 @@ int xgmac_mdio_write(struct mii_bus *bus, int port_addr,
 			int dev_addr, int regnum, u16 value)
 {
 	struct tgec_mdio_controller __iomem *regs = bus->priv;
-	u32 mdio_ctl;
+	u32 mdio_ctl, mdio_stat;
 
 	/* Setup the MII Mgmt clock speed */
-	out_be32(&regs->mdio_stat, MDIO_STAT_CLKDIV(100) | 0xc);
+	mdio_stat = MDIO_STAT_CLKDIV(100);
+	/* workaround for erratum XAUI3, only needs for Rev1 silicon */
+	if ((mfspr(SPRN_SVR) & 0xff) == 0x10)
+		mdio_stat |= 0xc;
+	out_be32(&regs->mdio_stat, mdio_stat);
 
 	/* Wait till the bus is free */
 	while ((in_be32(&regs->mdio_stat)) & MDIO_STAT_BSY)
@@ -108,10 +112,14 @@ int xgmac_mdio_read(struct mii_bus *bus, int port_addr, int dev_addr,
 			int regnum)
 {
 	struct tgec_mdio_controller __iomem *regs = bus->priv;
-	u32 mdio_ctl;
+	u32 mdio_ctl, mdio_stat;
 
 	/* Setup the MII Mgmt clock speed */
-	out_be32(&regs->mdio_stat, MDIO_STAT_CLKDIV(100) | 0xc);
+	mdio_stat = MDIO_STAT_CLKDIV(100);
+	/* workaround for erratum XAUI3, only needs for Rev1 silicon */
+	if ((mfspr(SPRN_SVR) & 0xff) == 0x10)
+		mdio_stat |= 0xc;
+	out_be32(&regs->mdio_stat, mdio_stat);
 
 	/* Wait till the bus is free */
 	while ((in_be32(&regs->mdio_stat)) & MDIO_STAT_BSY)
@@ -145,11 +153,16 @@ static int xgmac_mdio_reset(struct mii_bus *bus)
 {
 	struct tgec_mdio_controller __iomem *regs = bus->priv;
 	int timeout = PHY_INIT_TIMEOUT;
+	u32 mdio_stat;
 
 	mutex_lock(&bus->mdio_lock);
 
 	/* Setup the MII Mgmt clock speed */
-	out_be32(&regs->mdio_stat, MDIO_STAT_CLKDIV(100) | 0xc);
+	mdio_stat = MDIO_STAT_CLKDIV(100);
+	/* workaround for erratum XAUI3, only needs for Rev1 silicon */
+	if ((mfspr(SPRN_SVR) & 0xff) == 0x10)
+		mdio_stat |= 0xc;
+	out_be32(&regs->mdio_stat, mdio_stat);
 
 	/* Wait till the bus is free */
 	while (((in_be32(&regs->mdio_stat)) & MDIO_STAT_BSY) && timeout--)
-- 
1.6.5.2

