From 1de76b7e0503f257a94c52584b4322f835362e18 Mon Sep 17 00:00:00 2001
From: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Date: Mon, 14 Dec 2009 12:49:53 +0800
Subject: [PATCH] pme: fix pme2 self-test compilation (pme_ctx_disable API changes)

Signed-off-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
[Kevin: Original patch taken from Freescale p4080 SDK 2.0.1 ISO image.
Apply cleanly to kernel 2.6.27]
Integrated-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/match/pme2_test_high.c |   15 ++++++++-------
 drivers/match/pme2_test_scan.c |   10 ++++++----
 2 files changed, 14 insertions(+), 11 deletions(-)

diff --git a/drivers/match/pme2_test_high.c b/drivers/match/pme2_test_high.c
index 96356af..0ef0aa7 100644
--- a/drivers/match/pme2_test_high.c
+++ b/drivers/match/pme2_test_high.c
@@ -122,13 +122,12 @@ void pme2_test_high(void)
 		BUG_ON(1);
 	} else
 		pr_info("Default Flow Context Read OK\n");
-	/* start a non-blocking NOP */
+	/* start a NOP */
 	ret = pme_ctx_ctrl_nop(&ctx, 0, &ctx_ctrl.ctx_ctr);
 	pr_info("PME2: pme_ctx_ctrl_nop done\n");
 	wait_for_completion(&ctx_ctrl.cb_done);
 	POST_CTRL();
-	/* start a blocking update (implicitly blocks on NOP-completion) to add
-	 * residue to the context */
+	/* start an update to add residue to the context */
 	flow.ren = 1;
 	ret = pme_ctx_ctrl_update_flow(&ctx, PME_CTX_OP_WAIT | PME_CMD_FCW_RES,
 					&flow, &ctx_ctrl.ctx_ctr);
@@ -136,8 +135,9 @@ void pme2_test_high(void)
 	wait_for_completion(&ctx_ctrl.cb_done);
 	POST_CTRL();
 	/* start a blocking disable */
-	ret = pme_ctx_disable(&ctx, PME_CTX_OP_WAIT);
-	BUG_ON(ret);
+	ret = pme_ctx_disable(&ctx, PME_CTX_OP_WAIT, &ctx_ctrl.ctx_ctr);
+	BUG_ON(ret < 1);
+	wait_for_completion(&ctx_ctrl.cb_done);
 	/* do some reconfiguration */
 	ret = pme_ctx_reconfigure_tx(&ctx, 63, 7);
 	BUG_ON(ret);
@@ -164,8 +164,9 @@ void pme2_test_high(void)
 	wait_for_completion(&ctx_ctrl.cb_done);
 	POST_CTRL();
 	/* Disable, and done */
-	ret = pme_ctx_disable(&ctx, PME_CTX_OP_WAIT | PME_CTX_OP_WAIT_INT);
-	BUG_ON(ret);
+	ret = pme_ctx_disable(&ctx, PME_CTX_OP_WAIT, &ctx_ctrl.ctx_ctr);
+	BUG_ON(ret < 1);
+	wait_for_completion(&ctx_ctrl.cb_done);
 	pme_ctx_finish(&ctx);
 	pr_info("PME2: high-level test done\n");
 }
diff --git a/drivers/match/pme2_test_scan.c b/drivers/match/pme2_test_scan.c
index d26c442..8a5d6e3 100644
--- a/drivers/match/pme2_test_scan.c
+++ b/drivers/match/pme2_test_scan.c
@@ -211,7 +211,7 @@ void pme2_test_scan(void)
 	}
 
 	/* Disable */
-	ret = pme_ctx_disable(&a_scan_ctx.base_ctx, PME_CTX_OP_WAIT);
+	ret = pme_ctx_disable(&a_scan_ctx.base_ctx, PME_CTX_OP_WAIT, NULL);
 	BUG_ON(ret);
 
 	/* Check with bman */
@@ -262,7 +262,7 @@ void pme2_test_scan(void)
 	release_buffer(sg_table[0].addr_lo);
 
 	/* Disable */
-	ret = pme_ctx_disable(&a_scan_ctx.base_ctx, PME_CTX_OP_WAIT);
+	ret = pme_ctx_disable(&a_scan_ctx.base_ctx, PME_CTX_OP_WAIT, NULL);
 	BUG_ON(ret);
 #endif
 	pme_ctx_finish(&a_scan_ctx.base_ctx);
@@ -381,8 +381,10 @@ void pme2_test_scan(void)
 	}
 
 	/* Disable */
-	ret = pme_ctx_disable(&a_scan_ctx.base_ctx, PME_CTX_OP_WAIT);
-	BUG_ON(ret);
+	ret = pme_ctx_disable(&a_scan_ctx.base_ctx, PME_CTX_OP_WAIT,
+				&ctx_ctrl.ctx_ctr);
+	BUG_ON(ret < 1);
+	wait_for_completion(&ctx_ctrl.cb_done);
 	pme_ctx_finish(&a_scan_ctx.base_ctx);
 
 	pr_info("st: Scan Test Passed\n");
-- 
1.6.0.4

