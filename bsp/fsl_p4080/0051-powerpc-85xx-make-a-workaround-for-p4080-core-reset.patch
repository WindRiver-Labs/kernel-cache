From 0e43a5d87a73b716c63ce6aaf4079df76a6654f9 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Thu, 24 Sep 2009 15:39:32 +0800
Subject: [PATCH 51/52] powerpc/85xx: make a workaround for p4080 core reset

On p4080 resetting a core via DBCR0 register doesn't work. So we
have to reset the core by mpic. We also have to disable decrementer
interrupt, otherwise all the core will reset.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/include/asm/mpic.h      |    2 ++
 arch/powerpc/kernel/head_fsl_booke.S |    8 ++++++++
 arch/powerpc/platforms/85xx/Makefile |    4 ++--
 arch/powerpc/platforms/85xx/p4080.c  |   32 ++++++++++++++++++++++++++++++++
 arch/powerpc/sysdev/mpic.c           |    9 +++++++++
 5 files changed, 53 insertions(+), 2 deletions(-)
 create mode 100644 arch/powerpc/platforms/85xx/p4080.c

diff --git a/arch/powerpc/include/asm/mpic.h b/arch/powerpc/include/asm/mpic.h
index 2ad89dc..ece942a 100644
--- a/arch/powerpc/include/asm/mpic.h
+++ b/arch/powerpc/include/asm/mpic.h
@@ -484,5 +484,7 @@ void mpic_set_clk_ratio(struct mpic *mpic, u32 clock_ratio);
 /* Enable/Disable EPIC serial interrupt mode */
 void mpic_set_serial_int(struct mpic *mpic, int enable);
 
+void mpic_reset_cpu(int cpu);
+
 #endif /* __KERNEL__ */
 #endif	/* _ASM_POWERPC_MPIC_H */
diff --git a/arch/powerpc/kernel/head_fsl_booke.S b/arch/powerpc/kernel/head_fsl_booke.S
index 3470633..85433aa 100644
--- a/arch/powerpc/kernel/head_fsl_booke.S
+++ b/arch/powerpc/kernel/head_fsl_booke.S
@@ -1284,6 +1284,13 @@ _GLOBAL(giveup_fpu)
  * At present, this routine just applies a system reset.
  */
 _GLOBAL(abort)
+/* p4080 core can't reset by this way, so we have to reset it by mpic */
+#ifdef	CONFIG_PPC_E500MC
+	li	r13,0
+	mtspr	SPRN_TCR, r13
+1:
+	b	1b
+#else
 	li	r13,0
 	mtspr	SPRN_DBCR0,r13		/* disable all debug events */
 	isync
@@ -1295,6 +1302,7 @@ _GLOBAL(abort)
 	lis	r13,(DBCR0_IDM|DBCR0_RST_CHIP)@h
 	mtspr	SPRN_DBCR0,r13
 	isync
+#endif
 
 _GLOBAL(set_context)
 
diff --git a/arch/powerpc/platforms/85xx/Makefile b/arch/powerpc/platforms/85xx/Makefile
index bb91082..a825e79 100644
--- a/arch/powerpc/platforms/85xx/Makefile
+++ b/arch/powerpc/platforms/85xx/Makefile
@@ -10,8 +10,8 @@ obj-$(CONFIG_MPC85xx_CDS) += mpc85xx_cds.o
 obj-$(CONFIG_MPC8536_DS)  += mpc8536_ds.o
 obj-$(CONFIG_MPC85xx_DS)  += mpc85xx_ds.o
 obj-$(CONFIG_MPC85xx_MDS) += mpc85xx_mds.o
-obj-$(CONFIG_P4080_SIM)   += p4080_sim.o
-obj-$(CONFIG_P4080_DS)    += p4080_ds.o
+obj-$(CONFIG_P4080_SIM)   += p4080_sim.o p4080.o
+obj-$(CONFIG_P4080_DS)    += p4080_ds.o p4080.o
 obj-$(CONFIG_STX_GP3)	  += stx_gp3.o
 obj-$(CONFIG_TQM85xx)	  += tqm85xx.o
 obj-$(CONFIG_SBC8560)     += sbc8560.o
diff --git a/arch/powerpc/platforms/85xx/p4080.c b/arch/powerpc/platforms/85xx/p4080.c
new file mode 100644
index 0000000..b2de584
--- /dev/null
+++ b/arch/powerpc/platforms/85xx/p4080.c
@@ -0,0 +1,32 @@
+/*
+ * Copyright (c) 2009 Wind River Systems, Inc.
+ *
+ * The right to copy, distribute or otherwise make use of this software
+ * may be licensed only pursuant to the terms of an applicable Wind River
+ * license agreement. No license to Wind River intellectual property rights
+ * is granted herein. All rights not licensed by Wind River are reserved
+ * by Wind River.
+ */
+#include <linux/cpu.h>
+#include <asm/mpic.h>
+
+static int p4080_cpu_reset(struct notifier_block *nfb,
+				unsigned long action, void *hcpu)
+{
+	int cpu = (int)(long)hcpu;
+
+	switch (action) {
+	case CPU_POST_DEAD:
+		mpic_reset_cpu(cpu);
+		return NOTIFY_OK;
+	default:
+		return NOTIFY_DONE;
+	}
+}
+
+static int __init p4080_cpu_reset_init(void)
+{
+	hotcpu_notifier(p4080_cpu_reset, 0);
+	return 0;
+}
+early_initcall(p4080_cpu_reset_init);
diff --git a/arch/powerpc/sysdev/mpic.c b/arch/powerpc/sysdev/mpic.c
index f5de5e2..c615d51 100644
--- a/arch/powerpc/sysdev/mpic.c
+++ b/arch/powerpc/sysdev/mpic.c
@@ -2068,3 +2068,12 @@ static int mpic_init_sys(void)
 }
 
 device_initcall(mpic_init_sys);
+
+void mpic_reset_cpu(int cpu)
+{
+	struct mpic *mpic = mpic_primary;
+
+	mpic_write(mpic->gregs, MPIC_INFO(GREG_PROCESSOR_INIT), 1 << cpu);
+	mpic_read(mpic->gregs, MPIC_INFO(GREG_PROCESSOR_INIT));
+	mpic_write(mpic->gregs, MPIC_INFO(GREG_PROCESSOR_INIT), 0);
+}
-- 
1.6.3.3

