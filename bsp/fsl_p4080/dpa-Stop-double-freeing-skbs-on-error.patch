From 7e9abee07216db5e2d4b358017caa303f562326f Mon Sep 17 00:00:00 2001
From: Andy Fleming <afleming@freescale.com>
Date: Fri, 26 Feb 2010 00:00:31 -0600
Subject: [PATCH] dpa: Stop double-freeing skbs on error

The scatter-gather error code was freeing the skb, and then _dpa_rx was
noting the error, and freeing it again.  Also, _dpa_rx was freeing the
skb if netif_rx_ni returned an error, but netif_rx_ni frees the skb if
an error occurs. Lastly, if we're a pool we copy from, we don't want to
return the buffer to the pool, as it's already been returned.

Signed-off-by: Andy Fleming <afleming@freescale.com>
[Kevin: Original patch taken from Freescale moto-patches-4.tgz
tar package, apply cleanly to kernel 2.6.27]
Integrated-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/dpa/dpa.c |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/net/dpa/dpa.c b/drivers/net/dpa/dpa.c
index be39bce..45d7505 100644
--- a/drivers/net/dpa/dpa.c
+++ b/drivers/net/dpa/dpa.c
@@ -1392,19 +1392,17 @@ static int dpa_process_sg(struct net_device *net_dev, struct sk_buff *skb,
 		net_dev->stats.rx_dropped++;
 
 		err = -1;
-		goto err_pspb_pull_failed;
+		goto err_pskb_pull_failed;
 	}
 	kunmap(page);
 	put_page(page);
 
 	return 0;
 
-err_pspb_pull_failed:
+err_pskb_pull_failed:
 err_bpid2pool_failed:
 	kunmap(page);
 	put_page(page);
-	/* Free all the buffers in the skb */
-	dev_kfree_skb(skb);
 	return err;
 }
 
@@ -1576,7 +1574,9 @@ static void __hot _dpa_rx(struct net_device		*net_dev,
 	if (unlikely(_errno != NET_RX_SUCCESS)) {
 		net_dev->stats.rx_dropped++;
 
-		goto _return_dev_kfree_skb;
+		/* We only need to free the memory if it's a private pool */
+		if (dpa_bp->kernel_pool)
+			goto _return_dpa_fd_release;
 	}
 
 	net_dev->last_rx = jiffies;
-- 
1.6.0.4

