From 39ad793d3160e892c0012e8033fcf25c6573fadf Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@freescale.com>
Date: Thu, 29 Oct 2009 14:40:02 -0500
Subject: [PATCH 080/148] P4080/DPA: dpa_mac_probe() needs to distinguish between a missing phandle and an invalid one

Otherwise MAC-less interfaces will fail to initialize

Also, fix the following related warnings:

.../linux-2.6/drivers/net/dpa/dpa.c: In function 'dpa_mac_probe':
.../linux-2.6/drivers/net/dpa/dpa.c:1883: warning: unused variable 'phandle_prop'
.../linux-2.6/drivers/net/dpa/dpa.c:1882: warning: unused variable 'lenp'
.../linux-2.6/drivers/net/dpa/dpa.c: In function 'dpa_probe':
.../linux-2.6/drivers/net/dpa/dpa.c:2274: warning: unused variable 'phandle_prop'

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
[Applied FSL SDK 2.0.3 patch
"kernel-2.6.30-P4080-DPA-dpa_mac_probe-needs-to-distinguish.patch"]
Integrated-by: Yuri Nedel <Yuri.Nedel@windriver.com>
---
 drivers/net/dpa/dpa.c |   13 +++++++++----
 1 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/net/dpa/dpa.c b/drivers/net/dpa/dpa.c
index ebe2371..4624924 100644
--- a/drivers/net/dpa/dpa.c
+++ b/drivers/net/dpa/dpa.c
@@ -1884,12 +1884,18 @@ dpa_mac_probe(struct of_device *_of_dev)
 	struct of_device	*of_dev;
 	struct mac_device	*mac_dev;
 
+	phandle_prop = of_get_property(_of_dev->node, "fsl,fman-mac", &lenp);
+	if (phandle_prop == NULL)
+		return NULL;
+
+	BUG_ON(lenp != sizeof(phandle));
+
 	dpa_dev = &_of_dev->dev;
 
-	mac_node = of_parse_phandle(_of_dev->node, "fsl,fman-mac", 0);
+	mac_node = of_find_node_by_phandle(*phandle_prop);
 	if (unlikely(mac_node == NULL)) {
 		cpu_dev_err(dpa_dev,
-			"%s:%hu:%s(): of_parse_phandle() failed\n",
+			    "%s:%hu:%s(): of_find_node_by_phandle() failed\n",
 			__file__, __LINE__, __func__);
 		return ERR_PTR(-EFAULT);
 	}
@@ -2277,7 +2283,6 @@ dpa_probe(struct of_device *_of_dev)
 	struct fm_port_non_rx_params	 tx_port_param;
 	struct fm_port_pcd_param	 rx_port_pcd_param;
 	size_t				 count;
-	const phandle			*phandle_prop;
 	const uint32_t			*uint32_prop;
 	const uint8_t			*mac_addr;
 	struct qman_fq			*ingress_fq;
@@ -2370,7 +2375,7 @@ dpa_probe(struct of_device *_of_dev)
 	if (unlikely(dev_node == NULL)) {
 		if (netif_msg_probe(priv))
 			cpu_dev_err(dev,
-				"%s:%hu:%s: of_parse_phandle() failed\n",
+		       "%s:%hu:%s: of_parse_phandle(fsl,qman-channel) failed\n",
 				__file__, __LINE__, __func__);
 		_errno = -EFAULT;
 		goto _return_dpa_bp_free;
-- 
1.6.5.2

