From 890051c333921b39b71652708bd90c714a0de356 Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Sun, 29 Nov 2009 15:05:45 -0600
Subject: [PATCH] P4080/MAC: Add a macro to help iterating through the FM ports

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
[Kevin: Original patch taken from Freescale p4080 SDK 2.0.2 tar
package, apply cleanly to kernel 2.6.27]
Integrated-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/dpa/dpa.c |    8 ++++----
 drivers/net/dpa/mac.c |   10 +++++-----
 drivers/net/dpa/mac.h |    3 +++
 3 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/drivers/net/dpa/dpa.c b/drivers/net/dpa/dpa.c
index aeb1d99..5955e37 100644
--- a/drivers/net/dpa/dpa.c
+++ b/drivers/net/dpa/dpa.c
@@ -1760,7 +1760,7 @@ static int __cold dpa_start(struct net_device *net_dev)
 			goto _return;
 		}
 
-		for (i = 0; i < ARRAY_SIZE(mac_dev->port_dev); i++)
+		for_each_port_device(i, mac_dev->port_dev)
 			fm_port_enable(mac_dev->port_dev[i]);
 
 		_errno = priv->mac_dev->start(mac_dev);
@@ -1779,7 +1779,7 @@ static int __cold dpa_start(struct net_device *net_dev)
 	goto _return;
 
 _return_port_dev_stop:
-	for (i = 0; i < ARRAY_SIZE(mac_dev->port_dev); i++)
+	for_each_port_device(i, mac_dev->port_dev)
 		fm_port_disable(mac_dev->port_dev[i]);
 _return:
 	if (netif_msg_ifup(priv))
@@ -1814,7 +1814,7 @@ static int __cold dpa_stop(struct net_device *net_dev)
 				_errno = __errno;
 		}
 
-		for (i = 0; i < ARRAY_SIZE(mac_dev->port_dev); i++)
+		for_each_port_device(i, mac_dev->port_dev)
 			fm_port_disable(mac_dev->port_dev[i]);
 
 		if (mac_dev->phy_dev)
@@ -2244,7 +2244,7 @@ dpa_init_probe(struct of_device *_of_dev)
 
 	fm_set_tx_port_params(mac_dev->port_dev[TX], &tx_port_param);
 
-	for (i = 0; i < ARRAY_SIZE(mac_dev->port_dev); i++)
+	for_each_port_device(i, mac_dev->port_dev)
 		fm_port_enable(mac_dev->port_dev[i]);
 
 	_errno = 0;
diff --git a/drivers/net/dpa/mac.c b/drivers/net/dpa/mac.c
index c1a6d08..fb37e2d 100644
--- a/drivers/net/dpa/mac.c
+++ b/drivers/net/dpa/mac.c
@@ -245,7 +245,7 @@ static int __devinit __cold mac_probe(struct of_device *_of_dev, const struct of
 	}
 	BUG_ON(lenp != sizeof(phandle) * ARRAY_SIZE(mac_dev->port_dev));
 
-	for (i = 0; i < ARRAY_SIZE(mac_dev->port_dev); i++) {
+	for_each_port_device(i, mac_dev->port_dev) {
 		/* Find the port node */
 		dev_node = of_find_node_by_phandle(phandle_prop[i]);
 		if (unlikely(dev_node == NULL)) {
@@ -335,16 +335,16 @@ _return:
 
 static int __devexit __cold mac_remove(struct of_device *of_dev)
 {
-	int		i, _errno;
-	struct device	*dev;
-	struct mac_device *mac_dev;
+	int			 i, _errno;
+	struct device		*dev;
+	struct mac_device	*mac_dev;
 
 	dev = &of_dev->dev;
 	mac_dev = (struct mac_device *)dev_get_drvdata(dev);
 
 	cpu_dev_dbg(dev, "-> %s:%s()\n", __file__, __func__);
 
-	for (i = 0; i < ARRAY_SIZE(mac_dev->port_dev); i++)
+	for_each_port_device(i, mac_dev->port_dev)
 		fm_port_unbind(mac_dev->port_dev[i]);
 
 	fm_unbind(mac_dev->fm_dev);
diff --git a/drivers/net/dpa/mac.h b/drivers/net/dpa/mac.h
index 1c8d612..9747e36 100644
--- a/drivers/net/dpa/mac.h
+++ b/drivers/net/dpa/mac.h
@@ -72,6 +72,9 @@ struct mac_device {
 	int (*uninit)(struct mac_device *mac_dev);
 };
 
+#define for_each_port_device(i, port_dev)	\
+	for (i = 0; i < ARRAY_SIZE(port_dev); i++)
+
 static inline void * __attribute((nonnull)) macdev_priv(const struct mac_device *mac_dev)
 {
 	return (void *)mac_dev + sizeof(*mac_dev);
-- 
1.6.0.4

