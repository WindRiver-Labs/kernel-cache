From d025684a750166457552b2b11f1661a5c1650063 Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Thu, 24 Sep 2009 10:07:59 +0800
Subject: [PATCH 37/77] P4080/DPA: The pointer to the phy_device is stored in the mac_device not in the net_device

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
[KevinHao: Original headerless patch taken from Freescale
p4080-wrs-fixes tarball vendor drop. Minor mods in order to
port to 2.6.27]
Integrated-by: Kevin Hao <kexin@windriver.com>
---
 drivers/net/dpa/dpa.c |   33 +++++++++++++++++----------------
 drivers/net/dpa/dpa.h |    1 -
 2 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/drivers/net/dpa/dpa.c b/drivers/net/dpa/dpa.c
index d76cd72..6a3b19f 100644
--- a/drivers/net/dpa/dpa.c
+++ b/drivers/net/dpa/dpa.c
@@ -1241,24 +1241,24 @@ static const struct qman_fq _egress_fqs __devinitconst = {
 
 /* Called every time the controller might need to be made
  * aware of new link state.  The PHY code conveys this
- * information through variables in the phydev structure, and this
+ * information through variables in the phy_dev structure, and this
  * function converts those variables into the appropriate
  * register values, and can bring down the device if needed.
  */
 static void adjust_link(struct net_device *net_dev)
 {
 	const struct dpa_priv_s	*priv;
-	struct phy_device *phydev;
+	struct phy_device *phy_dev;
 	int			 _errno = 0;
 //	unsigned long flags;
 
 	priv = (typeof(priv))netdev_priv(net_dev);
-	phydev = priv->phydev;
+	phy_dev = priv->mac_dev->phy_dev;
 
 //	spin_lock_irqsave(&priv->lock, flags);
 
-	if (phydev->link)
-		_errno = priv->mac_dev->adjust_link(priv->mac_dev, phydev->speed, phydev->duplex);
+	if (phy_dev->link)
+		_errno = priv->mac_dev->adjust_link(priv->mac_dev, phy_dev->speed, phy_dev->duplex);
 
 	if (unlikely(_errno < 0))
 		cpu_netdev_err(net_dev, "%s:%hu:%s(): mac_dev->adjust_link() = %d\n",
@@ -1272,21 +1272,22 @@ static void adjust_link(struct net_device *net_dev)
 static int init_phy(struct net_device *net_dev)
 {
 	struct dpa_priv_s	*priv;
-	struct phy_device *phydev;
+	struct phy_device	*phy_dev;
 
 	priv = (typeof(priv))netdev_priv(net_dev);
 
-	phydev = phy_connect(net_dev, priv->mac_dev->phy_id, &adjust_link, 0, priv->mac_dev->phy_if);
-	if (IS_ERR(phydev)) {
-		printk(KERN_ERR "%s: Could not attach to PHY\n", net_dev->name);
-		return PTR_ERR(phydev);
+	phy_dev = phy_connect(net_dev, priv->mac_dev->phy_id, &adjust_link, 0, priv->mac_dev->phy_if);
+	if (IS_ERR(phy_dev)) {
+		cpu_netdev_err(net_dev, "%s:%hu:%s(): Could not attach to PHY %s\n",
+			       __file__, __LINE__, __func__, priv->mac_dev->phy_id);
+		return PTR_ERR(phy_dev);
 	}
 
 	/* Remove any features not supported by the controller */
-	phydev->supported &= priv->mac_dev->if_support;
-	phydev->advertising = phydev->supported;
+	phy_dev->supported &= priv->mac_dev->if_support;
+	phy_dev->advertising = phy_dev->supported;
 
-	priv->phydev = phydev;
+	priv->mac_dev->phy_dev = phy_dev;
 
 	return 0;
 }
@@ -1332,7 +1333,7 @@ static void __hot dpa_rx(struct work_struct *fd_work)
 	struct sk_buff		*skb;
 #ifdef CONFIG_DPA_RX_0_COPY
 	struct page **pageptr;
-	struct page *page;
+	struct page *page = NULL;
 	unsigned long flags;
 #endif
 
@@ -1695,7 +1696,7 @@ static int __cold dpa_start(struct net_device *net_dev)
 					       __file__, __LINE__, __func__, _errno);
 			goto _return_port_dev_stop;
 		}
-		phy_start(priv->phydev);
+		phy_start(priv->mac_dev->phy_dev);
 	}
 
 	netif_tx_start_all_queues(net_dev);
@@ -1727,7 +1728,7 @@ static int __cold dpa_stop(struct net_device *net_dev)
 
 	_errno = 0;
 	if (priv->mac_dev) {
-		phy_stop(priv->phydev);
+		phy_stop(priv->mac_dev->phy_dev);
 
 		__errno = priv->mac_dev->stop(priv->mac_dev);
 		if (unlikely(__errno < 0)) {
diff --git a/drivers/net/dpa/dpa.h b/drivers/net/dpa/dpa.h
index 07c00de..ae4ab95 100644
--- a/drivers/net/dpa/dpa.h
+++ b/drivers/net/dpa/dpa.h
@@ -69,7 +69,6 @@ struct dpa_priv_s {
 #endif /* CONFIG_FSL_FMAN_TEST */
 
 	struct mac_device	*mac_dev;
-	struct phy_device	*phydev;
 
 	struct work_struct	 fd_work;
 	struct fd_list_head	*fd_list;
-- 
1.6.5.2

