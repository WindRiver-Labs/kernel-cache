From 9106951fcba963e9d8200d8b9513ecd044e8002b Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 14 Jul 2010 21:57:09 -0700
Subject: [PATCH] net/dpa: make dpa log message preempt safe

In dpa driver smp_processor_id/hard_smp_processor_id are
invoked with preempt enabled when printing log message.
So we will get a call trace as below. Replacing
smp_processor_id/hard_smp_processor_id with
raw_smp_processor_id/get_hard_smp_processor_id will fix
this issue.

BUG: using smp_processor_id() in preemptible [00000000] code: snmpd/1494
caller is dpa_get_settings+0xac/0x194
Call Trace:
[d57a7cf0] [c0007244] show_stack+0x44/0x160 (unreliable)
[d57a7d20] [c029b060] debug_smp_processor_id+0xe0/0xf0
[d57a7d40] [c0504260] dpa_get_settings+0xac/0x194
[d57a7d60] [c04555ec] dev_ethtool+0x1e4/0x146c
[d57a7dc0] [c0452208] dev_ioctl+0x50c/0x770
[d57a7e50] [c0438458] sock_ioctl+0x94/0x3b8
[d57a7e80] [c0103174] vfs_ioctl+0x3c/0xec
[d57a7ea0] [c0103408] do_vfs_ioctl+0x80/0x76c
[d57a7f10] [c0103b88] sys_ioctl+0x94/0x108
[d57a7f40] [c001072c] ret_from_syscall+0x0/0x4
cpu7/7: fsl_dpa: ethernet.26: eth4: dpa_ethtool.c:54:dpa_get_settings(): phy device not initialized

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/dpa/dpa-common.h |   24 ++++++++++++++++--------
 1 files changed, 16 insertions(+), 8 deletions(-)

diff --git a/drivers/net/dpa/dpa-common.h b/drivers/net/dpa/dpa-common.h
index a113851..ed1d70d 100644
--- a/drivers/net/dpa/dpa-common.h
+++ b/drivers/net/dpa/dpa-common.h
@@ -44,22 +44,30 @@
 
 #define __hot
 
+#define cpu_pr_xxx(level, format, arg...) \
+	do {								\
+		int __id, __hid;					\
+		__id = raw_smp_processor_id();				\
+		__hid = get_hard_smp_processor_id(__id);		\
+		pr_##level("cpu%d/%d: " format, __hid, __id, ##arg);	\
+	} while (0)
+
 #define cpu_pr_emerg(format, arg...)	\
-	pr_emerg("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(emerg, format, ##arg)
 #define cpu_pr_alert(format, arg...)	\
-	pr_alert("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(alert, format, ##arg)
 #define cpu_pr_crit(format, arg...)	\
-	pr_crit("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(crit, format, ##arg)
 #define cpu_pr_err(format, arg...)	\
-	pr_err("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(err, format, ##arg)
 #define cpu_pr_warning(format, arg...)	\
-	pr_warning("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(warning, format, ##arg)
 #define cpu_pr_notice(format, arg...)	\
-	pr_notice("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(notice, format, ##arg)
 #define cpu_pr_info(format, arg...)	\
-	pr_info("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(info, format, ##arg)
 #define cpu_pr_debug(format, arg...)	\
-	pr_debug("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(debug, format, ##arg)
 
 /* Keep these in sync with the dev_*() definitions from linux/device.h */
 #define cpu_dev_emerg(dev, format, arg...)	\
-- 
1.6.5.2

