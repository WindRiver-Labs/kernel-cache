From 0f7630892e9df3373dc64ce1ac550c0fc01a9a0e Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Mon, 30 Nov 2009 03:33:19 -0800
Subject: [PATCH] powerpc/85xx: just flush local tlb when a pid is stale on this core

The flush_tlb_mm will broadcast the invalidation to other cores
by using IPI when logical partition is enabled. The switch_mmu_context
is always invoked by IRQ disabled. This will cause a deadlock. Since
we only need to invalidate the local tlb when we detect a pid is stale
on a core. So a local_tlbia is enough here.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/include/asm/tlbflush.h |    2 +-
 arch/powerpc/mm/mmu_context_32.c    |    4 ++++
 2 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/include/asm/tlbflush.h b/arch/powerpc/include/asm/tlbflush.h
index af57a7f..c4b36fe 100644
--- a/arch/powerpc/include/asm/tlbflush.h
+++ b/arch/powerpc/include/asm/tlbflush.h
@@ -32,7 +32,7 @@ extern void _tlbie(unsigned long address, unsigned int pid);
 
 #if defined(CONFIG_40x) || defined(CONFIG_8xx)
 #define _tlbia()	asm volatile ("tlbia; sync" : : : "memory")
-#elif CONFIG_LOGICAL_PARTITION
+#elif defined(CONFIG_LOGICAL_PARTITION)
 extern void local_tlbia(void *data);
 
 static inline void _tlbia(void)
diff --git a/arch/powerpc/mm/mmu_context_32.c b/arch/powerpc/mm/mmu_context_32.c
index 441c478..6fa3718 100644
--- a/arch/powerpc/mm/mmu_context_32.c
+++ b/arch/powerpc/mm/mmu_context_32.c
@@ -220,7 +220,11 @@ void switch_mmu_context(struct mm_struct *prev,
 	if (test_bit(id, stale_map[cpu])) {
 		pr_debug("[%d] flushing stale context %d for mm @%p !\n",
 			 cpu, id, next);
+#ifdef CONFIG_LOGICAL_PARTITION
+		local_tlbia(next);
+#else
 		flush_tlb_mm(next);
+#endif
 
 		/* XXX This clear should ultimately be part of flush_tlb_mm */
 		__clear_bit(id, stale_map[cpu]);
-- 
1.6.0.4

