From 7fbc0d9c68c1dcabe82ac68b071e50ebec41882a Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Mon, 30 Nov 2009 03:33:19 -0800
Subject: [PATCH 4/4] powerpc/85xx: just flush local tlb when a pid is stale on this core

The flush_tlb_mm will broadcast the invalidation to other cores
by using IPI when logical partition is enabled. The switch_mmu_context
is always invoked by IRQ disabled. This will cause a deadlock. Since
we only need to invalidate the local tlb when we detect a pid is stale
on a core. So a local_tlbia is enough here.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/mm/mmu_context_32.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/mm/mmu_context_32.c b/arch/powerpc/mm/mmu_context_32.c
index 441c478..6fa3718 100644
--- a/arch/powerpc/mm/mmu_context_32.c
+++ b/arch/powerpc/mm/mmu_context_32.c
@@ -220,7 +220,11 @@ void switch_mmu_context(struct mm_struct *prev,
 	if (test_bit(id, stale_map[cpu])) {
 		pr_debug("[%d] flushing stale context %d for mm @%p !\n",
 			 cpu, id, next);
+#ifdef CONFIG_LOGICAL_PARTITION
+		local_tlbia(next);
+#else
 		flush_tlb_mm(next);
+#endif
 
 		/* XXX This clear should ultimately be part of flush_tlb_mm */
 		__clear_bit(id, stale_map[cpu]);
-- 
1.6.5.2

