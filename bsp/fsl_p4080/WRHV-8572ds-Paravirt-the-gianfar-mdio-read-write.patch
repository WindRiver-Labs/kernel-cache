From d48f3944c14e5b68d299e41a19b3fd23c310ac1e Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 19 Jan 2010 21:41:44 -0800
Subject: [PATCH 4/5] WRHV/8572ds: Paravirt the gianfar mdio read/write

On the guest OS we replace the original mdio read/write way after
we get the proper mii bus.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/include/asm/paravirt.h |    4 ++++
 arch/powerpc/kernel/paravirt.c      |   12 ++++++++++++
 arch/powerpc/kernel/vbi/wrhv.c      |    9 +++++++++
 drivers/net/gianfar_mii.c           |    8 ++++----
 drivers/net/gianfar_mii.h           |    6 ++++--
 5 files changed, 33 insertions(+), 6 deletions(-)

diff --git a/arch/powerpc/include/asm/paravirt.h b/arch/powerpc/include/asm/paravirt.h
index caca81c..861dd13 100644
--- a/arch/powerpc/include/asm/paravirt.h
+++ b/arch/powerpc/include/asm/paravirt.h
@@ -27,6 +27,8 @@ extern int native_kgdb_arch_handle_exception(int vector, int signo,
 				char *remcom_out_buffer,
 				struct pt_regs *linux_regs);
 extern int __init native_gfar_of_init(void);
+extern int native_gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+extern int native_gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
 extern void __kprobes native_DebugException(struct pt_regs *regs,
 				unsigned long debug_status);
 extern int paravirt_kgdb_arch_handle_exception(int vector, int signo,
@@ -51,6 +53,8 @@ struct pv_time_ops {
 struct pv_cpu_ops {
 	unsigned int (*get_pvr)(void);
 	int (*gfar_of_init)(void);
+	int (*gfar_mdio_write)(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+	int (*gfar_mdio_read)(struct mii_bus *bus, int mii_id, int regnum);
 	void (*DebugException)(struct pt_regs *regs, unsigned long debug_status);
 	int (*kgdb_arch_handle_exception)(int vector, int signo, int err_code,
                                char *remcom_in_buffer, char *remcom_out_buffer,
diff --git a/arch/powerpc/kernel/paravirt.c b/arch/powerpc/kernel/paravirt.c
index a908365..c84b7f6 100644
--- a/arch/powerpc/kernel/paravirt.c
+++ b/arch/powerpc/kernel/paravirt.c
@@ -126,6 +126,8 @@ struct pv_irq_ops pv_irq_ops = {
 struct pv_cpu_ops pv_cpu_ops = {
 	.get_pvr = native_get_pvr,
 	.gfar_of_init = native_gfar_of_init,
+	.gfar_mdio_write = native_gfar_mdio_write,
+	.gfar_mdio_read = native_gfar_mdio_read,
 	.DebugException = native_DebugException,
 	.kgdb_arch_handle_exception = native_kgdb_arch_handle_exception,
 	.ppc_proc_freq = native_ppc_proc_freq,
@@ -186,6 +188,16 @@ int __init paravirt_gfar_of_init(void)
 	return pv_cpu_ops.gfar_of_init();
 }
 
+int paravirt_gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
+{
+	return pv_cpu_ops.gfar_mdio_write(bus, mii_id, regnum, value);
+}
+
+int paravirt_gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
+{
+	return pv_cpu_ops.gfar_mdio_read(bus, mii_id, regnum);
+}
+
 void __kprobes paravirt_DebugException(struct pt_regs *regs, unsigned long debug_status)
 {
 	pv_cpu_ops.DebugException(regs, debug_status);
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 1905f22..37dc22a 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -265,6 +265,13 @@ uint32_t get_bsp_clock_freq(void)
 
 }
 
+int native_gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value) 
+	__attribute__((weak, alias("dummy_mdio_write")));
+
+int native_gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum) 
+	__attribute__((weak, alias("dummy_mdio_read")));
+
+
 /* We need dummy mdio read/write function since each native mdio 
  * handler is not enabled with different platforms.
  */
@@ -1286,6 +1293,8 @@ void wrhv_init(void)
 
 	pv_cpu_ops.get_pvr = wrhv_get_pvr;
 	pv_cpu_ops.gfar_of_init =  wrhv_gfar_of_init;
+	pv_cpu_ops.gfar_mdio_write = wrhv_mdio_write,
+	pv_cpu_ops.gfar_mdio_read = wrhv_mdio_read,
 	pv_cpu_ops.DebugException = wrhv_DebugException;
 	pv_cpu_ops.kgdb_arch_handle_exception =
 		wrhv_kgdb_arch_handle_exception;
diff --git a/drivers/net/gianfar_mii.c b/drivers/net/gianfar_mii.c
index ebcfb27..27eebe7 100644
--- a/drivers/net/gianfar_mii.c
+++ b/drivers/net/gianfar_mii.c
@@ -101,7 +101,7 @@ int gfar_local_mdio_read(struct gfar_mii __iomem *regs, int mii_id, int regnum)
 /* Write value to the PHY at mii_id at register regnum,
  * on the bus, waiting until the write is done before returning.
  * All PHY configuration is done through the TSEC1 MIIM regs */
-int gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
+int native_gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
 {
 	struct gfar_mii __iomem *regs = (void __iomem *)bus->priv;
 
@@ -112,7 +112,7 @@ int gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
 /* Read the bus for PHY at addr mii_id, register regnum, and
  * return the value.  Clears miimcom first.  All PHY
  * configuration has to be done through the TSEC1 MIIM regs */
-int gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
+int native_gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
 {
 	struct gfar_mii __iomem *regs = (void __iomem *)bus->priv;
 
@@ -170,8 +170,8 @@ static int gfar_mdio_probe(struct device *dev)
 		return -ENOMEM;
 
 	new_bus->name = "Gianfar MII Bus",
-	new_bus->read = &gfar_mdio_read,
-	new_bus->write = &gfar_mdio_write,
+	new_bus->read = &paravirt_gfar_mdio_read,
+	new_bus->write = &paravirt_gfar_mdio_write,
 	new_bus->reset = &gfar_mdio_reset,
 	snprintf(new_bus->id, MII_BUS_ID_SIZE, "%x", pdev->id);
 
diff --git a/drivers/net/gianfar_mii.h b/drivers/net/gianfar_mii.h
index 2af28b1..62aeda0 100644
--- a/drivers/net/gianfar_mii.h
+++ b/drivers/net/gianfar_mii.h
@@ -39,8 +39,10 @@ struct gfar_mii {
 	u32	miimind;	/* 0x.534 - MII Management Indicator Register */
 };
 
-int gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
-int gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+int native_gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
+int native_gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+extern int paravirt_gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
+extern int paravirt_gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
 int gfar_local_mdio_write(struct gfar_mii __iomem *regs, int mii_id,
 			  int regnum, u16 value);
 int gfar_local_mdio_read(struct gfar_mii __iomem *regs, int mii_id, int regnum);
-- 
1.6.5.2

