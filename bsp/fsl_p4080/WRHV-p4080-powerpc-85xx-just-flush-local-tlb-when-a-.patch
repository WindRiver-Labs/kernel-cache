From 818ce7eff7b01d881f2224030833c18c2a9b1142 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Fri, 5 Feb 2010 23:00:10 -0800
Subject: [PATCH 3/4] WRHV/p4080: powerpc/85xx: just flush local tlb when a pid is stale on this core

The flush_tlb_mm will broadcast the invalidation to other cores
by using IPI when logical partition is enabled. The switch_mmu_context
is always invoked by IRQ disabled. This will cause a deadlock. Since
we only need to invalidate the local tlb when we detect a pid is stale
on a core. So a local_tlbia is enough here.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Integrated-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/mm/mmu_context_32.c |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/mm/mmu_context_32.c b/arch/powerpc/mm/mmu_context_32.c
index 534eae4..27a8137 100644
--- a/arch/powerpc/mm/mmu_context_32.c
+++ b/arch/powerpc/mm/mmu_context_32.c
@@ -221,7 +221,12 @@ void switch_mmu_context(struct mm_struct *prev,
 	if (test_bit(id, stale_map[cpu])) {
 		pr_debug("[%d] flushing stale context %d for mm @%p !\n",
 			 cpu, id, next);
+#ifdef CONFIG_SMP
+		/* Only flush the local CPU */
+		local_tlbia(next);
+#else
 		flush_tlb_mm(next);
+#endif
 
 		/* XXX This clear should ultimately be part of flush_tlb_mm */
 		__clear_bit(id, stale_map[cpu]);
-- 
1.6.5.2

