From 0ae864904bfe75801dd392bede8d4f7917eee845 Mon Sep 17 00:00:00 2001
From: Andrew Liu <shengping.liu@windriver.com>
Date: Mon, 9 Aug 2010 18:45:20 +0800
Subject: [PATCH 1/2] qman: fix bug in rev1 errata handling.

From FSL vendor SDK 2.x.

Due to a rev1 erratum, "Initialize and Schedule FQ" commands
are split into two commands on rev1. If the first command
fails (eg. if the FQ is not OOS or parked), the error
handling logic prematurely inverts the management command
tracking state, leading to an infinite loop checking the
wrong result register.

Signed-off-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Integrated-by: Andrew Liu <shengping.liu@windriver.com>
---
 drivers/hwqueue/qman_low.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/hwqueue/qman_low.c b/drivers/hwqueue/qman_low.c
index c3e7c87..a2d278c 100644
--- a/drivers/hwqueue/qman_low.c
+++ b/drivers/hwqueue/qman_low.c
@@ -1099,8 +1099,6 @@ void qm_mc_commit(struct qm_portal *portal, u8 myverb)
 			dcbt_ro(rr);
 			barrier();
 		} while (!rr->verb);
-		mc->rridx ^= 1;
-		mc->vbit ^= QM_MCC_VERB_VBIT;
 #ifdef CONFIG_FSL_QMAN_CHECKING
 		mc->state = mc_idle;
 #endif
@@ -1110,6 +1108,8 @@ void qm_mc_commit(struct qm_portal *portal, u8 myverb)
 #endif
 			return;
 		}
+		mc->rridx ^= 1;
+		mc->vbit ^= QM_MCC_VERB_VBIT;
 		rr = mc->rr + mc->rridx;
 		dcbzl(mc->cr);
 		mc->cr->alterfq.fqid = fqid;
-- 
1.6.5.2

