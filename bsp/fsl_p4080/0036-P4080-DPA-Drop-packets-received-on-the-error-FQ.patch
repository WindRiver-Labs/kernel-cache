From 9f1918dbaccae49cc52ca8cea9617f19d2391a0f Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Thu, 24 Sep 2009 10:07:58 +0800
Subject: [PATCH 36/52] P4080/DPA: Drop packets received on the error FQ

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
[KevinHao: Original headerless patch taken from Freescale
p4080-wrs-fixes tarball vendor drop.]
Integrated-by: Kevin Hao <kexin@windriver.com>
---
 drivers/net/dpa/dpa.c |   30 ++++++++++++++++--------------
 1 files changed, 16 insertions(+), 14 deletions(-)

diff --git a/drivers/net/dpa/dpa.c b/drivers/net/dpa/dpa.c
index 1ad9cce..d76cd72 100644
--- a/drivers/net/dpa/dpa.c
+++ b/drivers/net/dpa/dpa.c
@@ -683,7 +683,8 @@ static enum qman_cb_dqrr_result ingress_rx_error_dqrr(struct qman_portal		*porta
 							struct qman_fq			*fq,
 							const struct qm_dqrr_entry	*dq)
 {
-	const struct net_device	*net_dev;
+	int			 _errno;
+	struct net_device	*net_dev;
 	const struct dpa_priv_s	*priv;
 
 	net_dev = ((struct dpa_fq *)fq)->net_dev;
@@ -692,34 +693,35 @@ static enum qman_cb_dqrr_result ingress_rx_error_dqrr(struct qman_portal		*porta
 	if (netif_msg_rx_status(priv))
 		cpu_netdev_dbg(net_dev, "-> %s:%s()\n", __file__, __func__);
 
+	net_dev->stats.rx_errors++;
+	net_dev->stats.rx_packets++;
+	net_dev->stats.rx_bytes += dpa_fd_length(&dq->fd);
+
+	BUG_ON((dq->fd.status & FM_FD_STAT_ERRORS) == 0);
+
+	cpu_netdev_err(net_dev, "%s:%hu:%s(): FD status = 0x%08x\n", __file__, __LINE__, __func__,
+		       dq->fd.status & FM_FD_STAT_ERRORS);
+
 #ifdef CONFIG_FSL_FMAN_TEST
 {
     const struct bm_buffer *bmb;
     const struct dpa_bp *dpa_bp;
-    void   *virt;
-    int	_errno;
 
     bmb = (typeof(bmb))&dq->fd;
 
     dpa_bp = dpa_bpid2pool(&priv->dpa_bp_list, bmb->bpid);
     BUG_ON(IS_ERR(dpa_bp));
 
-    virt = dpa_phys2virt(dpa_bp, bmb);
-    if (is_fman_test((void *)priv->mac_dev,
-                     FMT_RX_ERR_Q,
-                     virt,
-                     dq->fd.length20 + dq->fd.offset)) {
+	is_fman_test(priv->mac_dev, FMT_RX_ERR_Q, dpa_phys2virt(dpa_bp, bmb),
+		     dq->fd.length20 + dq->fd.offset);
+}
+#endif	/* CONFIG_FSL_FMAN_TEST */
+
         _errno = dpa_fd_release(net_dev, &dq->fd);
         if (unlikely(_errno < 0)) {
             dump_stack();
             panic("Can't release buffer to the BM during RX\n");
         }
-        return qman_cb_dqrr_consume;
-    }
-}
-#endif /* CONFIG_FSL_FMAN_TEST */
-
-	BUG();
 
 	if (netif_msg_rx_status(priv))
 		cpu_netdev_dbg(net_dev, "%s:%s() ->\n", __file__, __func__);
-- 
1.6.3.3

