From a79bcb4e31a8caf245bbc6582edc5c1df108c51f Mon Sep 17 00:00:00 2001
From: Greg Moffatt <greg.moffatt@windriver.com>
Date: Fri, 16 Oct 2009 15:05:27 -0400
Subject: [PATCH] tipc: add room for DPA header in skb

TIPC allocates the skb's directly and passes those down for sending
the packet.  When TIPC allocates the skb it reserves some space in
the skb buffer for some header data.

On the P4080 target the DPA driver is used for packet transmission.
When the DPA driver is invoked it also attempts to allocate some space
in the passed-in skb for it's own header data (64 bytes).
Unfortunately the skb buffer allocated by TIPC is not large enough
to account for the TIPC data, TIPC header, and the DPA header.
As a result, the skb underflows and causes a kernel panic.

The solution is to use the LL_RESERVED_SPACE macro in the TIPC
ethernet send_msg() function.  Here the skb is checked to ensure
there's enough space for the driver to transmit the packet and
if not, the packets headroom is increased.

Signed-off-by: Greg Moffatt <greg.moffatt@windriver.com>
---
 net/tipc/tipc_eth_media.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/net/tipc/tipc_eth_media.c b/net/tipc/tipc_eth_media.c
index 7341dad..bd20caf 100644
--- a/net/tipc/tipc_eth_media.c
+++ b/net/tipc/tipc_eth_media.c
@@ -109,7 +109,7 @@ static int send_msg(struct sk_buff *buf, struct tipc_bearer *tb_ptr,
 		return 0;
 	
 	dev = ((struct eth_bearer *)(tb_ptr->usr_handle))->dev;
-	delta = dev->hard_header_len - skb_headroom(buf);
+	delta = LL_RESERVED_SPACE(dev) - skb_headroom(buf);
 
 	if ((delta > 0) && 
 	    pskb_expand_head(clone, SKB_DATA_ALIGN(delta), 0, GFP_ATOMIC)) {
-- 
1.6.3.3

