From 1dd6167c3ace2e6737445fbbf00477eaf0577ea2 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 19 Jan 2010 21:41:45 -0800
Subject: [PATCH 5/5] WRHV/p4080ds: Paravirt the p/qman mdio read/write

On the guest OS we replace the original mdio read/write way after
we get the proper mii bus.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/include/asm/paravirt.h |    4 ++++
 arch/powerpc/kernel/paravirt.c      |   12 ++++++++++++
 arch/powerpc/kernel/vbi/wrhv.c      |    7 +++++++
 drivers/net/fsl_pq_mdio.c           |   13 +++++++++----
 drivers/net/fsl_pq_mdio.h           |    6 ++++--
 5 files changed, 36 insertions(+), 6 deletions(-)

diff --git a/arch/powerpc/include/asm/paravirt.h b/arch/powerpc/include/asm/paravirt.h
index 861dd13..d5aa083 100644
--- a/arch/powerpc/include/asm/paravirt.h
+++ b/arch/powerpc/include/asm/paravirt.h
@@ -29,6 +29,8 @@ extern int native_kgdb_arch_handle_exception(int vector, int signo,
 extern int __init native_gfar_of_init(void);
 extern int native_gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
 extern int native_gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
+extern int native_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+extern int native_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
 extern void __kprobes native_DebugException(struct pt_regs *regs,
 				unsigned long debug_status);
 extern int paravirt_kgdb_arch_handle_exception(int vector, int signo,
@@ -55,6 +57,8 @@ struct pv_cpu_ops {
 	int (*gfar_of_init)(void);
 	int (*gfar_mdio_write)(struct mii_bus *bus, int mii_id, int regnum, u16 value);
 	int (*gfar_mdio_read)(struct mii_bus *bus, int mii_id, int regnum);
+	int (*fsl_pq_mdio_write)(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+	int (*fsl_pq_mdio_read)(struct mii_bus *bus, int mii_id, int regnum);
 	void (*DebugException)(struct pt_regs *regs, unsigned long debug_status);
 	int (*kgdb_arch_handle_exception)(int vector, int signo, int err_code,
                                char *remcom_in_buffer, char *remcom_out_buffer,
diff --git a/arch/powerpc/kernel/paravirt.c b/arch/powerpc/kernel/paravirt.c
index c84b7f6..3648932 100644
--- a/arch/powerpc/kernel/paravirt.c
+++ b/arch/powerpc/kernel/paravirt.c
@@ -128,6 +128,8 @@ struct pv_cpu_ops pv_cpu_ops = {
 	.gfar_of_init = native_gfar_of_init,
 	.gfar_mdio_write = native_gfar_mdio_write,
 	.gfar_mdio_read = native_gfar_mdio_read,
+	.fsl_pq_mdio_write = native_fsl_pq_mdio_write,
+	.fsl_pq_mdio_read = native_fsl_pq_mdio_read,
 	.DebugException = native_DebugException,
 	.kgdb_arch_handle_exception = native_kgdb_arch_handle_exception,
 	.ppc_proc_freq = native_ppc_proc_freq,
@@ -198,6 +200,16 @@ int paravirt_gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
 	return pv_cpu_ops.gfar_mdio_read(bus, mii_id, regnum);
 }
 
+int paravirt_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
+{
+	return pv_cpu_ops.fsl_pq_mdio_write(bus, mii_id, regnum, value);
+}
+
+int paravirt_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
+{
+	return pv_cpu_ops.fsl_pq_mdio_read(bus, mii_id, regnum);
+}
+
 void __kprobes paravirt_DebugException(struct pt_regs *regs, unsigned long debug_status)
 {
 	pv_cpu_ops.DebugException(regs, debug_status);
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 37dc22a..b5116d5 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -271,6 +271,11 @@ int native_gfar_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 valu
 int native_gfar_mdio_read(struct mii_bus *bus, int mii_id, int regnum) 
 	__attribute__((weak, alias("dummy_mdio_read")));
 
+int native_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value) 
+	__attribute__((weak, alias("dummy_mdio_write")));
+
+int native_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum) 
+	__attribute__((weak, alias("dummy_mdio_read")));
 
 /* We need dummy mdio read/write function since each native mdio 
  * handler is not enabled with different platforms.
@@ -1295,6 +1300,8 @@ void wrhv_init(void)
 	pv_cpu_ops.gfar_of_init =  wrhv_gfar_of_init;
 	pv_cpu_ops.gfar_mdio_write = wrhv_mdio_write,
 	pv_cpu_ops.gfar_mdio_read = wrhv_mdio_read,
+	pv_cpu_ops.fsl_pq_mdio_write = wrhv_mdio_write,
+	pv_cpu_ops.fsl_pq_mdio_read = wrhv_mdio_read,
 	pv_cpu_ops.DebugException = wrhv_DebugException;
 	pv_cpu_ops.kgdb_arch_handle_exception =
 		wrhv_kgdb_arch_handle_exception;
diff --git a/drivers/net/fsl_pq_mdio.c b/drivers/net/fsl_pq_mdio.c
index 97372ab..6f86f59 100644
--- a/drivers/net/fsl_pq_mdio.c
+++ b/drivers/net/fsl_pq_mdio.c
@@ -40,10 +40,12 @@
 #include <asm/irq.h>
 #include <asm/uaccess.h>
 #include <asm/ucc.h>
+#include <asm/machdep.h>
 
 #include "gianfar.h"
 #include "fsl_pq_mdio.h"
 
+extern int32_t wrhv_mdio_bus;
 /*
  * Write value to the PHY at mii_id at register regnum,
  * on the bus attached to the local interface, which may be different from the
@@ -158,11 +160,12 @@ static void fsl_mdio_mux_init(void) {}
 static void fsl_mdio_set_mux(int mii_id) {}
 static void fsl_mdio_mux_exit(void) {}
 #endif
+
 /*
  * Write value to the PHY at mii_id at register regnum,
  * on the bus, waiting until the write is done before returning.
  */
-int fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
+int native_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
 {
 	struct fsl_pq_mdio __iomem *regs = (void __iomem *)bus->priv;
 
@@ -175,7 +178,7 @@ int fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
  * Read the bus for PHY at addr mii_id, register regnum, and
  * return the value.  Clears miimcom first.
  */
-int fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
+int native_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
 {
 	struct fsl_pq_mdio __iomem *regs = (void __iomem *)bus->priv;
 
@@ -354,8 +357,8 @@ static int fsl_pq_mdio_probe(struct of_device *ofdev,
 		return -ENOMEM;
 
 	new_bus->name = "Freescale PowerQUICC MII Bus",
-	new_bus->read = &fsl_pq_mdio_read,
-	new_bus->write = &fsl_pq_mdio_write,
+	new_bus->read = &paravirt_fsl_pq_mdio_read,
+	new_bus->write = &paravirt_fsl_pq_mdio_write,
 	new_bus->reset = &fsl_pq_mdio_reset,
 	fsl_pq_mdio_bus_name(new_bus->id, np);
 
@@ -405,6 +408,8 @@ static int fsl_pq_mdio_probe(struct of_device *ofdev,
 	} else if (of_device_is_compatible(np, "fsl,fman-mdio")) {
 #ifdef CONFIG_FSL_FMAN
 		tbiaddr = 5;
+		if (ppc_md.get_mdio_bus)
+			wrhv_mdio_bus = ppc_md.get_mdio_bus(np);
 #else
 		err = -ENODEV;
 		goto err_free_irqs;
diff --git a/drivers/net/fsl_pq_mdio.h b/drivers/net/fsl_pq_mdio.h
index 36dad52..aec1802 100644
--- a/drivers/net/fsl_pq_mdio.h
+++ b/drivers/net/fsl_pq_mdio.h
@@ -34,8 +34,10 @@ struct fsl_pq_mdio {
 } __attribute__ ((packed));
 
 
-int fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
-int fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+int native_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
+int native_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+extern int paravirt_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
+extern int paravirt_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
 int fsl_pq_local_mdio_write(struct fsl_pq_mdio __iomem *regs, int mii_id,
 			  int regnum, u16 value);
 int fsl_pq_local_mdio_read(struct fsl_pq_mdio __iomem *regs, int mii_id, int regnum);
-- 
1.6.5.2

