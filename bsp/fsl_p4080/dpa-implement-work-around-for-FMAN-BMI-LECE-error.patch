From 947c88a89594809bb2d4e1d80f4c80ac471f2368 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Fri, 26 Feb 2010 10:35:41 +0800
Subject: [PATCH 2/2] dpa: implement work around for FMAN BMI LECE error

The initialization of the linked list memory is done by the FMan
BMI hardware during the process of allocating and deallocating
the internal buffers. However, this initialization process is
not performed correctly.  The FMan BMI hardware performs a read
operation to the linked list memory before it is properly initialized.
As a result, a multi-bit ECC error will be reported by the linked
list memory (FMBM_IEVR[LEC] = 1) if it is enabled (FMBM_IER[LECE] = 1).

Software should configure FMBM_IER[LECE] = 0 to disable Linked List
RAM ECC error interrupts prior to triggering the hardware
initialization of the linked list RAM which is done by setting
FMBM_INIT[STR] = 1.

This patch is extracted from FMD7 in Freescale P4080 SDK 2.0.2.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c |   32 +++++++++++++++++++++++++
 1 files changed, 32 insertions(+), 0 deletions(-)

diff --git a/drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c b/drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c
index 177fc6d..b386f46 100644
--- a/drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c
+++ b/drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c
@@ -49,6 +49,8 @@
 #include "fm.h"
 
 
+#define FM_RAM_LIST_ERR_IRQ_ERRATA_FMAN11
+
 #define TS_FRAC_PRECISION_FACTOR    1000
 
 
@@ -845,6 +847,16 @@ t_Handle FM_Config(t_FmParams *p_FmParam)
     p_Fm->extraFifoPoolSize     = FM_MAX_NUM_OF_RX_PORTS*BMI_FIFO_UNITS;
 
     p_Fm->exceptions        = DEFAULT_exceptions;
+
+#ifdef FM_RAM_LIST_ERR_IRQ_ERRATA_FMAN11
+    {
+        t_FmRevisionInfo revInfo;
+        FM_GetRevision(p_Fm, &revInfo);
+        if ((revInfo.majorRev == 1) && (revInfo.minorRev == 0))
+            p_Fm->exceptions  &= ~FM_EX_BMI_LIST_RAM_ECC;
+    }
+#endif   /* FM_RAM_LIST_ERR_IRQ_ERRATA_FMAN11 */
+
     for(i = 0;i<FM_MAX_NUM_OF_PORTS;i++)
         p_Fm->portsTypes[i] = e_FM_PORT_TYPE_DUMMY;
     /* Initialize FM driver parameters parameters (for initialization phase only) */
@@ -1696,6 +1708,18 @@ t_Error FM_ConfigException(t_Handle h_Fm, e_FmExceptions exception, bool enable)
 
     SANITY_CHECK_RETURN_ERROR(p_Fm, E_INVALID_HANDLE);
 
+#ifdef FM_RAM_LIST_ERR_IRQ_ERRATA_FMAN11
+    {
+        t_FmRevisionInfo revInfo;
+        if((exception == e_FM_EX_IRAM_ECC) && (enable))
+        {
+            FM_GetRevision(p_Fm, &revInfo);
+            if ((revInfo.majorRev == 1) && (revInfo.minorRev == 0))
+                RETURN_ERROR(MINOR, E_NOT_SUPPORTED, ("e_FM_EX_BMI_LIST_RAM_ECC!"));
+        }
+    }
+#endif   /* FM_RAM_LIST_ERR_IRQ_ERRATA_FMAN11 */
+
     GET_EXCEPTION_FLAG(bitMask, exception);
     if(bitMask)
     {
@@ -2013,7 +2037,15 @@ t_Error FM_SetException(t_Handle h_Fm, e_FmExceptions exception, bool enable)
              case(e_FM_EX_BMI_LIST_RAM_ECC):
                 tmpReg = GET_UINT32(p_Fm->p_FmBmiRegs->fmbm_ier);
                 if(enable)
+                {
+#ifdef FM_RAM_LIST_ERR_IRQ_ERRATA_FMAN11
+                    t_FmRevisionInfo revInfo;
+                    FM_GetRevision(p_Fm, &revInfo);
+                    if ((revInfo.majorRev == 1) && (revInfo.minorRev == 0))
+                        RETURN_ERROR(MINOR, E_NOT_SUPPORTED, ("e_FM_EX_BMI_LIST_RAM_ECC!"));
+#endif   /* FM_RAM_LIST_ERR_IRQ_ERRATA_FMAN11 */
                     tmpReg |= BMI_ERR_INTR_EN_LIST_RAM_ECC;
+                }
                 else
                     tmpReg &= ~BMI_ERR_INTR_EN_LIST_RAM_ECC;
                 WRITE_UINT32(p_Fm->p_FmBmiRegs->fmbm_ier, tmpReg);
-- 
1.6.6.1

