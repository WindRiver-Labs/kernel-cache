From c3021537cbe4e1b804c60e048d0a84516fe5705b Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Fri, 4 Dec 2009 22:58:23 -0800
Subject: [PATCH 05/77] powerpc/85xx: Update smp support to handle doorbells and non-mpic init

Original patch taken from rev 1.1 board support ISO image for fsl_p4080.
[Known as P4080SW_01_01_00B-ltib.iso]

Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
Integrated-by: Liang Li <liang.li@windriver.com>
Integrated-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/platforms/85xx/mpc85xx_ds.c |    5 ++-
 arch/powerpc/platforms/85xx/smp.c        |   38 +++++++++++++++++++++++------
 2 files changed, 33 insertions(+), 10 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/mpc85xx_ds.c b/arch/powerpc/platforms/85xx/mpc85xx_ds.c
index a03c839..4616111 100644
--- a/arch/powerpc/platforms/85xx/mpc85xx_ds.c
+++ b/arch/powerpc/platforms/85xx/mpc85xx_ds.c
@@ -139,8 +139,9 @@ static int mpc85xx_exclude_device(struct pci_controller *hose,
 /*
  * Setup the architecture
  */
+
 #ifdef CONFIG_SMP
-extern void __init mpc85xx_smp_init(void);
+extern void __init mpc85xx_smp_init(int use_msgsnd, int has_mpic);
 #endif
 static void __init mpc85xx_ds_setup_arch(void)
 {
@@ -168,7 +169,7 @@ static void __init mpc85xx_ds_setup_arch(void)
 #endif
 
 #ifdef CONFIG_SMP
-	mpc85xx_smp_init();
+	mpc85xx_smp_init(0, 1);
 #endif
 
 	printk("MPC85xx DS board from Freescale Semiconductor\n");
diff --git a/arch/powerpc/platforms/85xx/smp.c b/arch/powerpc/platforms/85xx/smp.c
index f212dd2..c79aa1a 100644
--- a/arch/powerpc/platforms/85xx/smp.c
+++ b/arch/powerpc/platforms/85xx/smp.c
@@ -120,10 +120,8 @@ smp_85xx_kick_cpu(int nr)
 }
 
 static void __init
-smp_85xx_setup_cpu(int cpu_nr)
+smp_85xx_basic_setup(int cpu_nr)
 {
-	mpic_setup_this_cpu();
-
 	/* Clear any pending timer interrupts */
 	mtspr(SPRN_TSR, TSR_ENW | TSR_WIS | TSR_DIS | TSR_FIS);
 
@@ -131,6 +129,14 @@ smp_85xx_setup_cpu(int cpu_nr)
 	mtspr(SPRN_TCR, TCR_DIE);
 }
 
+static void __init
+smp_85xx_setup_cpu(int cpu_nr)
+{
+	mpic_setup_this_cpu();
+
+	smp_85xx_basic_setup(cpu_nr);
+}
+
 #define DOORBELL_MSG_BROADCAST		(0x04000000)		/* broadcast msg */
 #define DOORBELL_MSG_CRITICAL		(0x08000000)		/* critical priority message */
 
@@ -161,16 +167,32 @@ static void smp_mpc85xx_message_pass(int target, int msg)
 }
 
 struct smp_ops_t smp_85xx_ops = {
-	.message_pass = smp_mpic_message_pass,
-	.probe = smp_mpic_probe,
 	.kick_cpu = smp_85xx_kick_cpu,
-	.setup_cpu = smp_85xx_setup_cpu,
 	.take_timebase = smp_generic_take_timebase,
 	.give_timebase = smp_generic_give_timebase,
 };
 
-void __init
-mpc85xx_smp_init(void)
+static int __init smp_dummy_probe(void)
 {
+	return NR_CPUS;
+}
+
+void __init mpc85xx_smp_init(int use_msgsnd, int has_mpic)
+{
+	BUG_ON(!use_msgsnd && !has_mpic);
+
+	if (use_msgsnd)
+		smp_85xx_ops.message_pass = smp_mpc85xx_message_pass;
+	else
+		smp_85xx_ops.message_pass = smp_mpic_message_pass;
+
+	if (has_mpic) {
+		smp_85xx_ops.probe = smp_mpic_probe;
+		smp_85xx_ops.setup_cpu = smp_85xx_setup_cpu;
+	} else {
+		smp_85xx_ops.probe = smp_dummy_probe;
+		smp_85xx_ops.setup_cpu = smp_85xx_basic_setup;
+	}
+
 	smp_ops = &smp_85xx_ops;
 }
-- 
1.6.5.2

