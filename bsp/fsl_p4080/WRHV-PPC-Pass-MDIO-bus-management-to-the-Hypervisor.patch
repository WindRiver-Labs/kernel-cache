From 351b0d8aa9659e5d130507d374c94bd3b8654b8d Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 19 Jan 2010 21:41:42 -0800
Subject: [PATCH 2/5] WRHV/PPC: Pass MDIO bus management to the Hypervisor

The hypervisor will manage mdio bus since it's shared resource. So
we pass mdio management by calling vbi_send for bsp service handle.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/kernel/vbi/wrhv.c |   59 ++++++++++++++++++++++++++++++++++++++++
 1 files changed, 59 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 1c2e6bd..1905f22 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -265,6 +265,65 @@ uint32_t get_bsp_clock_freq(void)
 
 }
 
+/* We need dummy mdio read/write function since each native mdio 
+ * handler is not enabled with different platforms.
+ */
+int dummy_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
+{
+	printk(KERN_ERR "Error: please check your mdio configuretion.!\n");
+	return	0;
+}
+
+int dummy_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
+{
+	printk(KERN_ERR "Error: please check your mdio configuretion.!\n");
+	return	0;
+}
+
+/* Use bus 0 by default. On p4080 bus is encoded as famn0:dtsec0. */
+uint32_t wrhv_mdio_bus = 0;
+int wrhv_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
+{
+	VBI_BSP_MSG		mdio_msg;
+	VBI_BSP_MSG_REPLY	mdio_reply;
+	int			rc = -1;
+	
+	mdio_msg.request = VBI_MDIO_WRITE;
+	mdio_msg.arg.mdioWrite.bus = wrhv_mdio_bus;
+	mdio_msg.arg.mdioWrite.phyAddr = (uint32_t) mii_id;
+	mdio_msg.arg.mdioWrite.regNum = (uint32_t) regnum;
+	mdio_msg.arg.mdioWrite.page = 0;
+	mdio_msg.arg.mdioWrite.dataVal = value;
+
+	rc = bsp_service_handle(&mdio_msg, &mdio_reply);
+
+	if (rc || mdio_reply.status) 
+		rc = -1;
+
+	return rc;
+
+}
+
+int wrhv_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
+{
+	VBI_BSP_MSG		mdio_msg;
+	VBI_BSP_MSG_REPLY	mdio_reply;
+	int			rc = -1;
+	
+	mdio_msg.request = VBI_MDIO_READ;
+	mdio_msg.arg.mdioRead.bus = wrhv_mdio_bus;
+	mdio_msg.arg.mdioRead.phyAddr = (uint32_t) mii_id;
+	mdio_msg.arg.mdioRead.regNum = (uint32_t) regnum;
+	mdio_msg.arg.mdioRead.page = 0;
+
+	rc = bsp_service_handle(&mdio_msg, &mdio_reply);
+
+	if (rc || mdio_reply.status || (mdio_reply.dataVal >> 16 != 0)) 
+		return -1;
+
+	return mdio_reply.dataVal;
+}
+
 void wrhv_mapping(void)
 {
 	/* map in vbConfig address */
-- 
1.6.5.2

