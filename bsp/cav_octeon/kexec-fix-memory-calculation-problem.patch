From f66939c44866b62f6289a1b3233c7de3fb68357b Mon Sep 17 00:00:00 2001
From: Greg Moffatt <greg.moffatt@windriver.com>
Date: Tue, 7 Sep 2010 13:29:53 -0700
Subject: [PATCH] kexec: fix memory calculation problem

For kexec early in the boot we check to ensure that there is enough
free memory to proceed.  Previously this was done by calculating against
the value MAX_MEMORY.  A recent fix corrected the 'mem=' parameter but
also changed the definition of MAX_MEMORY to now be the amount of DRAM
available on the system.  This broke the kexec calculation preventing
any memory from being free'd during a kexec fast reboot.

To address this the calculation is being changed to simply check that
there is at least 256M free memory available, which has been deemed
to be sufficient.  If less than that is available, the code will
cleanup any memory from the previous kernel before proceeding.

Signed-off-by: Greg Moffatt <greg.moffatt@windriver.com>
---
 arch/mips/cavium-octeon/setup.c |    6 ++----
 1 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index 18db8d2..f81dbd0 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -796,7 +796,6 @@ void cleanup_phy_mem(void)
 	struct cvmx_sysinfo *sysinfo;
 	uint64_t memory;
 	uint64_t kernel_size;
-	uint64_t delta;
 	uint64_t curr_addr;
 
 	/* get the amount of DRAM on the board */
@@ -806,10 +805,9 @@ void cleanup_phy_mem(void)
 	/* do a few calculations */
 	kernel_size = (uint64_t)__bss_stop - (uint64_t)_text;
 	freemem = cvmx_bootmem_phy_available_mem(0x100000);
-	delta = (memory > freemem ? (memory - freemem) : (freemem - memory));
 
-	if (delta < MAX_MEMORY) {
-		/* we haven't allocated any memory yet = no need to
+	if (freemem > OCTEON_DDR0_SIZE) {
+		/* we have enough memory to continue = no need to
 		 * continue free'ing
 		 */
 		printk(KERN_NOTICE "...no need to free any memory\n");
-- 
1.6.5.2

