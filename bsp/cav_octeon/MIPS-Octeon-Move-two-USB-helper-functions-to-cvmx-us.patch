From ca03c6efe6f391af3d2d65d624b358865c813187 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Tue, 11 May 2010 15:55:13 +0800
Subject: [PATCH 6/6] MIPS: Octeon: Move two USB helper functions to cvmx-usb.c

There are two USB helper functions in cvmx-helper-board.c which is
in drivers/staging/octeon dir. But, if Octeon Ethernet is configured
as module, USB driver will be stuck compile error. And, the two
help functions are irrelevant to Octeon ethernet driver. So, move
them to executive/cvmx-usb.c.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/cavium-octeon/executive/cvmx-usb.c |   34 ++++++++++++++++++++++++++
 drivers/staging/octeon/cvmx-helper-board.c   |   19 --------------
 drivers/staging/octeon/cvmx-helper-board.h   |   23 -----------------
 3 files changed, 34 insertions(+), 42 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/cvmx-usb.c b/arch/mips/cavium-octeon/executive/cvmx-usb.c
index 6f76d8f..eacb40d 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-usb.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-usb.c
@@ -238,8 +238,42 @@ typedef struct
         __cvmx_usb_write_csr32(usb, address, c.u32);\
     } while (0)
 
+/**
+ * Gets the clock type used for the USB block based on board type.
+ * Used by the USB code for auto configuration of clock type.
+ *
+ * Returns USB clock type enumeration
+ */
+cvmx_helper_board_usb_clock_types_t __cvmx_helper_board_usb_get_clock_type(void)
+{
+	switch (cvmx_sysinfo_get()->board_type) {
+	case CVMX_BOARD_TYPE_BBGW_REF:
+		return USB_CLOCK_TYPE_CRYSTAL_12;
+	}
+	return USB_CLOCK_TYPE_REF_48;
+}
 
 /**
+ * Adjusts the number of available USB ports on Octeon based on board
+ * specifics.
+ *
+ * @supported_ports: expected number of ports based on chip type;
+ *
+ *
+ * Returns number of available usb ports, based on board specifics.
+ *         Return value is supported_ports if function does not
+ *         override.
+ */
+int __cvmx_helper_board_usb_get_num_ports(int supported_ports)
+{
+	switch (cvmx_sysinfo_get()->board_type) {
+	case CVMX_BOARD_TYPE_NIC_XLE_4G:
+		return 0;
+	}
+
+	return supported_ports;
+}
+/**
  * @INTERNAL
  * Read a USB 32bit CSR. It performs the necessary address swizzle
  * for 32bit CSRs and logs the value in a readable format if
diff --git a/drivers/staging/octeon/cvmx-helper-board.c b/drivers/staging/octeon/cvmx-helper-board.c
index 00a555b..57d35dc 100644
--- a/drivers/staging/octeon/cvmx-helper-board.c
+++ b/drivers/staging/octeon/cvmx-helper-board.c
@@ -693,22 +693,3 @@ int __cvmx_helper_board_hardware_enable(int interface)
 	}
 	return 0;
 }
-
-cvmx_helper_board_usb_clock_types_t __cvmx_helper_board_usb_get_clock_type(void)
-{
-	switch (cvmx_sysinfo_get()->board_type) {
-	case CVMX_BOARD_TYPE_BBGW_REF:
-		return USB_CLOCK_TYPE_CRYSTAL_12;
-	}
-	return USB_CLOCK_TYPE_REF_48;
-}
-
-int __cvmx_helper_board_usb_get_num_ports(int supported_ports)
-{
-	switch (cvmx_sysinfo_get()->board_type) {
-	case CVMX_BOARD_TYPE_NIC_XLE_4G:
-		return 0;
-	}
-
-	return supported_ports;
-}
diff --git a/drivers/staging/octeon/cvmx-helper-board.h b/drivers/staging/octeon/cvmx-helper-board.h
index dc20b01..982f1f1 100644
--- a/drivers/staging/octeon/cvmx-helper-board.h
+++ b/drivers/staging/octeon/cvmx-helper-board.h
@@ -154,27 +154,4 @@ extern int __cvmx_helper_board_interface_probe(int interface,
  * Returns Zero on success, negative on failure
  */
 extern int __cvmx_helper_board_hardware_enable(int interface);
-
-/**
- * Gets the clock type used for the USB block based on board type.
- * Used by the USB code for auto configuration of clock type.
- *
- * Returns USB clock type enumeration
- */
-cvmx_helper_board_usb_clock_types_t
-__cvmx_helper_board_usb_get_clock_type(void);
-
-/**
- * Adjusts the number of available USB ports on Octeon based on board
- * specifics.
- *
- * @supported_ports: expected number of ports based on chip type;
- *
- *
- * Returns number of available usb ports, based on board specifics.
- *         Return value is supported_ports if function does not
- *         override.
- */
-int __cvmx_helper_board_usb_get_num_ports(int supported_ports);
-
 #endif /* __CVMX_HELPER_BOARD_H__ */
-- 
1.6.5.2

