From 22a87e086b14548e0974240bdd4416cba8bb7c11 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Thu, 25 Nov 2010 16:03:09 +0800
Subject: [PATCH 06/38] WRHV: MIPS: Update system call numbers

Added three new system calls for VB control, so update Linux
system call number.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/include/asm/unistd.h |   39 +++++++++++++++++++++++++++++++++------
 1 files changed, 33 insertions(+), 6 deletions(-)

diff --git a/arch/mips/include/asm/unistd.h b/arch/mips/include/asm/unistd.h
index d647441..b6c6f15 100644
--- a/arch/mips/include/asm/unistd.h
+++ b/arch/mips/include/asm/unistd.h
@@ -361,16 +361,25 @@
 #define __NR_sched_wait_interval	(__NR_Linux + 339)
 #define __NR_setns                      (__NR_Linux + 340)
 #define __NR_revokeat			(__NR_Linux + 341)
+#define __NR_vbi_mem			(__NR_Linux + 342)
+#define __NR_vbi_activate_vb		(__NR_Linux + 343)
+#define __NR_vbi_control		(__NR_Linux + 344)
+
+#define VBI_MEM_READ			0x0010
+#define VBI_MEM_WRITE			0x0100
+#define SYS_VBI_VB_SUSPEND		0x10001
+#define SYS_VBI_VB_RESUME		0x20002
+#define SYS_VBI_VB_RESTART		0x40004
 
 /*
  * Offset of the last Linux o32 flavoured syscall
  */
-#define __NR_Linux_syscalls		341
+#define __NR_Linux_syscalls		344
 
 #endif /* Want O32 || _MIPS_SIM == _MIPS_SIM_ABI32  */
 
 #define __NR_O32_Linux			4000
-#define __NR_O32_Linux_syscalls		341
+#define __NR_O32_Linux_syscalls		344
 
 #if (defined(__WANT_SYSCALL_NUMBERS) &&					\
      (__WANT_SYSCALL_NUMBERS == _MIPS_SIM_ABI64)) ||			\
@@ -681,16 +690,25 @@
 #define __NR_sched_wait_interval	(__NR_Linux + 298)
 #define __NR_setns                      (__NR_Linux + 299)
 #define __NR_revokeat			(__NR_Linux + 300)
+#define __NR_vbi_mem			(__NR_Linux + 301)
+#define __NR_vbi_activate_vb		(__NR_Linux + 302)
+#define __NR_vbi_control		(__NR_Linux + 303)
+
+#define VBI_MEM_READ			0x0010
+#define VBI_MEM_WRITE			0x0100
+#define SYS_VBI_VB_SUSPEND		0x10001
+#define SYS_VBI_VB_RESUME		0x20002
+#define SYS_VBI_VB_RESTART		0x40004
 
 /*
  * Offset of the last Linux 64-bit flavoured syscall
  */
-#define __NR_Linux_syscalls		300
+#define __NR_Linux_syscalls		303
 
 #endif /* Want N64 || _MIPS_SIM == _MIPS_SIM_ABI64  */
 
 #define __NR_64_Linux			5000
-#define __NR_64_Linux_syscalls		300
+#define __NR_64_Linux_syscalls		303
 
 #if (defined(__WANT_SYSCALL_NUMBERS) &&					\
      (__WANT_SYSCALL_NUMBERS == _MIPS_SIM_NABI32)) ||			\
@@ -1006,16 +1024,25 @@
 #define __NR_sched_wait_interval	(__NR_Linux + 303)
 #define __NR_setns                      (__NR_Linux + 304)
 #define __NR_revokeat			(__NR_Linux + 305)
+#define __NR_vbi_mem			(__NR_Linux + 306)
+#define __NR_vbi_activate_vb		(__NR_Linux + 307)
+#define __NR_vbi_control		(__NR_Linux + 308)
+
+#define VBI_MEM_READ			0x0010
+#define VBI_MEM_WRITE			0x0100
+#define SYS_VBI_VB_SUSPEND		0x10001
+#define SYS_VBI_VB_RESUME		0x20002
+#define SYS_VBI_VB_RESTART		0x40004
 
 /*
  * Offset of the last N32 flavoured syscall
  */
-#define __NR_Linux_syscalls		305
+#define __NR_Linux_syscalls		308
 
 #endif /* Want N32 || _MIPS_SIM == _MIPS_SIM_NABI32  */
 
 #define __NR_N32_Linux			6000
-#define __NR_N32_Linux_syscalls		305
+#define __NR_N32_Linux_syscalls		308
 
 #ifdef __KERNEL__
 
-- 
1.7.0.4

