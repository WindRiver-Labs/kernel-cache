From 22a87e086b14548e0974240bdd4416cba8bb7c11 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Thu, 25 Nov 2010 16:03:09 +0800
Subject: [PATCH 06/38] WRHV: MIPS: Update system call numbers

Added three new system calls for VB control, so update Linux
system call number.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/include/asm/unistd.h |   39 +++++++++++++++++++++++++++++++++------
 1 files changed, 33 insertions(+), 6 deletions(-)

diff --git a/arch/mips/include/asm/unistd.h b/arch/mips/include/asm/unistd.h
index baa318a..853b65a 100644
--- a/arch/mips/include/asm/unistd.h
+++ b/arch/mips/include/asm/unistd.h
@@ -356,16 +356,25 @@
 #define __NR_perf_event_open		(__NR_Linux + 333)
 #define __NR_accept4			(__NR_Linux + 334)
 #define __NR_recvmmsg			(__NR_Linux + 335)
+#define __NR_vbi_mem			(__NR_Linux + 336)
+#define __NR_vbi_activate_vb		(__NR_Linux + 337)
+#define __NR_vbi_control		(__NR_Linux + 338)
+
+#define VBI_MEM_READ			0x0010
+#define VBI_MEM_WRITE			0x0100
+#define SYS_VBI_VB_SUSPEND		0x10001
+#define SYS_VBI_VB_RESUME		0x20002
+#define SYS_VBI_VB_RESTART		0x40004
 
 /*
  * Offset of the last Linux o32 flavoured syscall
  */
-#define __NR_Linux_syscalls		335
+#define __NR_Linux_syscalls		338
 
 #endif /* _MIPS_SIM == _MIPS_SIM_ABI32 */
 
 #define __NR_O32_Linux			4000
-#define __NR_O32_Linux_syscalls		335
+#define __NR_O32_Linux_syscalls		338
 
 #if _MIPS_SIM == _MIPS_SIM_ABI64
 
@@ -668,16 +677,25 @@
 #define __NR_perf_event_open		(__NR_Linux + 292)
 #define __NR_accept4			(__NR_Linux + 293)
 #define __NR_recvmmsg			(__NR_Linux + 294)
+#define __NR_vbi_mem			(__NR_Linux + 295)
+#define __NR_vbi_activate_vb		(__NR_Linux + 296)
+#define __NR_vbi_control		(__NR_Linux + 297)
+
+#define VBI_MEM_READ			0x0010
+#define VBI_MEM_WRITE			0x0100
+#define SYS_VBI_VB_SUSPEND		0x10001
+#define SYS_VBI_VB_RESUME		0x20002
+#define SYS_VBI_VB_RESTART		0x40004
 
 /*
  * Offset of the last Linux 64-bit flavoured syscall
  */
-#define __NR_Linux_syscalls		294
+#define __NR_Linux_syscalls		297
 
 #endif /* _MIPS_SIM == _MIPS_SIM_ABI64 */
 
 #define __NR_64_Linux			5000
-#define __NR_64_Linux_syscalls		294
+#define __NR_64_Linux_syscalls		297
 
 #if _MIPS_SIM == _MIPS_SIM_NABI32
 
@@ -985,16 +1003,25 @@
 #define __NR_accept4			(__NR_Linux + 297)
 #define __NR_recvmmsg			(__NR_Linux + 298)
 #define __NR_getdents64			(__NR_Linux + 299)
+#define __NR_vbi_mem			(__NR_Linux + 300)
+#define __NR_vbi_activate_vb		(__NR_Linux + 301)
+#define __NR_vbi_control		(__NR_Linux + 302)
+
+#define VBI_MEM_READ			0x0010
+#define VBI_MEM_WRITE			0x0100
+#define SYS_VBI_VB_SUSPEND		0x10001
+#define SYS_VBI_VB_RESUME		0x20002
+#define SYS_VBI_VB_RESTART		0x40004
 
 /*
  * Offset of the last N32 flavoured syscall
  */
-#define __NR_Linux_syscalls		299
+#define __NR_Linux_syscalls		302
 
 #endif /* _MIPS_SIM == _MIPS_SIM_NABI32 */
 
 #define __NR_N32_Linux			6000
-#define __NR_N32_Linux_syscalls		299
+#define __NR_N32_Linux_syscalls		302
 
 #ifdef __KERNEL__
 
-- 
1.6.5.2

