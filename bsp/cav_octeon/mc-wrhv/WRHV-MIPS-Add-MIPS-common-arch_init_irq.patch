From 3838240285f2f47bfa3842aec3f6816461b79191 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Fri, 25 Feb 2011 11:38:43 +0800
Subject: [PATCH 34/38] WRHV: MIPS: Add MIPS common arch_init_irq

For GOS, VIOAPIC is used as interrupt controller, so a new irq_chip
is needed, wrhv_irq_chip is used which is common for all of arch.
And bypass any real hardware operation for IRQ controller.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/include/asm/paravirt.h |    8 +++++++-
 arch/mips/kernel/paravirt.c      |   10 ++++++++++
 arch/mips/kernel/vbi/wrhv.c      |   23 +++++++++++++++++++++++
 3 files changed, 40 insertions(+), 1 deletions(-)

diff --git a/arch/mips/include/asm/paravirt.h b/arch/mips/include/asm/paravirt.h
index 9fcdaf8..ce66b80 100644
--- a/arch/mips/include/asm/paravirt.h
+++ b/arch/mips/include/asm/paravirt.h
@@ -13,6 +13,7 @@ struct pv_info {
  */
 extern void __init native_per_cpu_trap_init(void);
 extern void __init native_tlb_init(void);
+extern void __init native_arch_init_irq(void);
 
 /*
  * paravirtual operations structure
@@ -24,9 +25,14 @@ struct pv_cpu_ops {
 struct pv_mem_ops {
 	void (*tlb_init)(void);
 };
-
+ 
+struct pv_irq_ops {
+ 	void (*arch_init_irq)(void);
+};
+ 
 extern struct pv_cpu_ops pv_cpu_ops;
 extern struct pv_mem_ops pv_mem_ops;
+extern struct pv_irq_ops pv_irq_ops;
 
 #endif /* CONFIG_PARAVIRT */
 #endif	/* __ASM_PARAVIRT_H */
diff --git a/arch/mips/kernel/paravirt.c b/arch/mips/kernel/paravirt.c
index 20cfbd8..905ad29 100644
--- a/arch/mips/kernel/paravirt.c
+++ b/arch/mips/kernel/paravirt.c
@@ -47,6 +47,10 @@ struct pv_mem_ops pv_mem_ops = {
 	.tlb_init = native_tlb_init,
 };
 
+struct pv_irq_ops pv_irq_ops = {
+ 	.arch_init_irq = native_arch_init_irq,
+};
+ 
 void __init paravirt_per_cpu_trap_init(void)
 {
 	pv_cpu_ops.per_cpu_trap_init();
@@ -57,5 +61,11 @@ void __init paravirt_tlb_init(void)
 	pv_mem_ops.tlb_init();
 }
 
+void __init paravirt_arch_init_irq(void)
+{
+ 	pv_irq_ops.arch_init_irq();
+}
+ 
 EXPORT_SYMBOL(pv_cpu_ops);
 EXPORT_SYMBOL(pv_mem_ops);
+EXPORT_SYMBOL(pv_irq_ops);
diff --git a/arch/mips/kernel/vbi/wrhv.c b/arch/mips/kernel/vbi/wrhv.c
index 5ed9d10..fb15b98 100644
--- a/arch/mips/kernel/vbi/wrhv.c
+++ b/arch/mips/kernel/vbi/wrhv.c
@@ -15,11 +15,14 @@
 #include <linux/init.h>
 #include <linux/types.h>
 #include <linux/sched.h>
+#include <linux/irq.h>
+#include <linux/interrupt.h>
 
 #include <asm/mipsmtregs.h>
 #include <asm/mmu_context.h>
 
 #include <vbi/vbi.h>
+#include <linux/wrhv.h>
 
 struct vb_config *wr_config;
 
@@ -106,6 +109,24 @@ void __cpuinit wrhv_tlb_init(void)
 	}
 }
 
+void __init wrhv_arch_init_irq(void)
+{
+	int i;
+
+#ifdef CONFIG_SMP
+	/* Be default all the irqs will be routed to core0 */
+	cpumask_copy(irq_default_affinity, cpumask_of(0));
+#endif
+
+	wrhv_irq_chip.typename = "WRHV-PIC";
+	for (i = 0; i < NR_IRQS; i++) {
+		irq_desc[i].status = IRQ_DISABLED | IRQ_LEVEL;
+		irq_desc[i].action = NULL;
+		irq_desc[i].depth = 1;
+		set_irq_chip_and_handler_name(i, &wrhv_irq_chip, handle_fasteoi_irq, "fasteoi");
+	}
+}
+
 void __init wrhv_init(void)
 {
 	/* initialize wr_config so that we can access
@@ -119,6 +140,8 @@ void __init wrhv_init(void)
 	pv_cpu_ops.per_cpu_trap_init = wrhv_per_cpu_trap_init;
 
 	pv_mem_ops.tlb_init = wrhv_tlb_init;
+
+	pv_irq_ops.arch_init_irq = wrhv_arch_init_irq;
 }
 
 #ifdef CONFIG_PARAVIRT
-- 
1.6.5.2

