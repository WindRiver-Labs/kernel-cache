From c598771b646757ddbb7da66627ee129116e6fcd2 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Tue, 20 Apr 2010 16:35:59 +0800
Subject: [PATCH 1/2] MIPS: Octeon: Fix user IO/MEM build error

Add missed defines which define XKPHYS segment read/write
capabilty in sysmips.h, and move the "case" code referred to them
into the switch scope in syscall.c.

Fix the access to task's uid/euid via __task_cred interface which
need to be protected by RCU in userio.c since uid/euid were removed
from task_struct.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/cavium-octeon/userio.c |   12 +++++++++---
 arch/mips/include/asm/sysmips.h  |    3 +++
 arch/mips/kernel/syscall.c       |    2 +-
 3 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/arch/mips/cavium-octeon/userio.c b/arch/mips/cavium-octeon/userio.c
index 4922911..cc4df49 100644
--- a/arch/mips/cavium-octeon/userio.c
+++ b/arch/mips/cavium-octeon/userio.c
@@ -82,6 +82,9 @@ int xkphys_usermem_read(long pid)
 int xkphys_usermem_write(long pid, int value)
 {
 	struct task_struct *task, *group_leader;
+	const struct cred *tcred;
+
+	uid_t euid = current_euid();
 
 	task = xkphys_get_task(pid);
 	group_leader = task->group_leader;
@@ -89,9 +92,12 @@ int xkphys_usermem_write(long pid, int value)
 	if (!task)
 		return -ESRCH;
 
-	if (task->uid != current->euid &&
-			task->euid != current->euid &&
-			!(capable(CAP_SYS_RAWIO) || value == 0)) {
+	rcu_read_lock();
+	tcred = __task_cred(task);
+
+	if (tcred->uid != euid &&
+	    tcred->euid != euid &&
+	    !(capable(CAP_SYS_RAWIO) || value == 0)) {
 		put_task_struct(task);
 		return -EPERM;
 	}
diff --git a/arch/mips/include/asm/sysmips.h b/arch/mips/include/asm/sysmips.h
index 4f47b7d..388b1e1 100644
--- a/arch/mips/include/asm/sysmips.h
+++ b/arch/mips/include/asm/sysmips.h
@@ -22,4 +22,7 @@
 #define MIPS_RDNVRAM              10	/* read NVRAM */
 #define MIPS_ATOMIC_SET		2001	/* atomically set variable       */
 
+#define MIPS_CAVIUM_XKPHYS_READ           2010 /* XKPHYS */
+#define MIPS_CAVIUM_XKPHYS_WRITE          2011 /* XKPHYS */
+
 #endif /* _ASM_SYSMIPS_H */
diff --git a/arch/mips/kernel/syscall.c b/arch/mips/kernel/syscall.c
index 951d5a7..063959b 100644
--- a/arch/mips/kernel/syscall.c
+++ b/arch/mips/kernel/syscall.c
@@ -371,7 +371,6 @@ _sys_sysmips(nabi_no_regargs struct pt_regs regs)
 	case FLUSH_CACHE:
 		__flush_cache_all();
 		return 0;
-	}
 #if defined(CONFIG_CAVIUM_OCTEON_USER_MEM_PER_PROCESS) || \
 	defined(CONFIG_CAVIUM_OCTEON_USER_IO_PER_PROCESS)
 	case MIPS_CAVIUM_XKPHYS_READ:
@@ -380,6 +379,7 @@ _sys_sysmips(nabi_no_regargs struct pt_regs regs)
 	case MIPS_CAVIUM_XKPHYS_WRITE:
 		return xkphys_usermem_write(arg1, arg2);
 #endif
+	}
 
 	return -EINVAL;
 }
-- 
1.6.5.2

