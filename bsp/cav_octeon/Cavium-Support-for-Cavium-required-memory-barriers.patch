From e689d397f46d36f41cdffa1d9b1d2a9fa8d25670 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Thu, 11 Nov 2010 16:18:47 +0800
Subject: [PATCH 020/132] Cavium: Support for Cavium-required memory barriers

Source: SDK 2.0.0-366

Update memory barriers for Octeon II, which only needs one 'syncw'
instruction. (Octeon requires two, due to Core-401 errata. Octeon Plus
does not require two, but making the distinction between Octeon and
Octeon Plus would be either messy, or incur a performance hit, or
both, so it's left in for Octeon Plus.)

Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/include/asm/barrier.h |   13 ++++++++++++-
 arch/mips/include/asm/bitops.h  |    1 +
 2 files changed, 13 insertions(+), 1 deletions(-)

diff --git a/arch/mips/include/asm/barrier.h b/arch/mips/include/asm/barrier.h
index 1419b78..c67a8f1 100644
--- a/arch/mips/include/asm/barrier.h
+++ b/arch/mips/include/asm/barrier.h
@@ -89,7 +89,18 @@
 		: "m" (*(int *)CKSEG1)		\
 		: "memory")
 #ifdef CONFIG_CPU_CAVIUM_OCTEON
-# define OCTEON_SYNCW_STR	".set push\n.set arch=octeon\nsyncw\nsyncw\n.set pop\n"
+# ifdef CONFIG_CAVIUM_OCTEON2
+#  define OCTEON_SYNCW_STR	".set push\n\t.set arch=octeon\n\tsyncw\n\t.set pop"
+# else
+/*
+ * We actually use two syncw instructions in a row when we need a
+ * write memory barrier. This is because the CN3XXX series of Octeons
+ * have errata Core-401.  This can cause a single syncw to not enforce
+ * ordering under very rare conditions. Even if it is rare, better
+ * safe than sorry.
+ */
+#  define OCTEON_SYNCW_STR	".set push\n.set arch=octeon\nsyncw\nsyncw\n.set pop\n"
+# endif
 # define __syncw() 	__asm__ __volatile__(OCTEON_SYNCW_STR : : : "memory")
 
 # define fast_wmb()	__syncw()
diff --git a/arch/mips/include/asm/bitops.h b/arch/mips/include/asm/bitops.h
index 9255cfb..eb2b900 100644
--- a/arch/mips/include/asm/bitops.h
+++ b/arch/mips/include/asm/bitops.h
@@ -556,6 +556,7 @@ static inline void __clear_bit_unlock(unsigned long nr, volatile unsigned long *
 {
 	smp_mb();
 	__clear_bit(nr, addr);
+	nudge_writes();
 }
 
 /*
-- 
1.6.5.2

