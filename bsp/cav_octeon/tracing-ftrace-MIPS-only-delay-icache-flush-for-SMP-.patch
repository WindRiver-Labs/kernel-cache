From bc419f3076052ba218d0c28dfab30d514cffbffe Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Thu, 30 Sep 2010 02:55:49 -0700
Subject: [PATCH] tracing/ftrace: MIPS: only delay icache flush for SMP and !CONFIG_CPU_CAVIUM_OCTEON

Currently, to fix the hang problem of Ftrace on XLS, delaying the icache
flush is only necessary for SMP of XLS, so, don't delay it for !SMP or
CONFIG_CPU_CAVIUM_OCTEON, this may avoid some potential weird problems.

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 arch/mips/kernel/ftrace.c |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/ftrace.c b/arch/mips/kernel/ftrace.c
index b69c707..53935da 100644
--- a/arch/mips/kernel/ftrace.c
+++ b/arch/mips/kernel/ftrace.c
@@ -81,6 +81,12 @@ static inline void flush_icache_from(unsigned long start)
 	flush_icache_range(start, start + 8);
 }
 
+#if defined(CONFIG_SMP) && !defined(CONFIG_CPU_CAVIUM_OCTEON)
+#define DELAY_ICACHE_FLUSH
+#endif
+
+#ifdef DELAY_ICACHE_FLUSH
+
 int ftrace_arch_code_modify_post_process(void *data)
 {
 	int *command;
@@ -110,6 +116,8 @@ int ftrace_arch_module_modify_post_process(void)
 	return 0;
 }
 
+#endif
+
 /*
  * In MIPS, ftrace_modify_code() doesn't flush the icache, If use it,
  * please flush the icache yourself.
@@ -124,6 +132,10 @@ static int ftrace_modify_code(unsigned long ip, unsigned int new_code)
 	if (unlikely(faulted))
 		return -EFAULT;
 
+#ifndef DELAY_ICACHE_FLUSH
+	flush_icache_from(ip);
+#endif
+
 	return 0;
 }
 
-- 
1.6.5.2

