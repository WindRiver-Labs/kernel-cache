From 07f8277ff281789ae587819171badcff2764ca38 Mon Sep 17 00:00:00 2001
From: Phil Staub <Phil.Staub@windriver.com>
Date: Thu, 10 Mar 2011 11:38:28 -0800
Subject: [PATCH 05/13] Cavium: Workaround CN63XX pass 2 issue with CVMSEG

Source: Cavium sdk_2.0.0_updates_p4.tgz

Pass 2 silicon requires initializing CVMSEG memory to avoid data
parity errors.

Signed-off-by: Phil Staub <Phil.Staub@windriver.com>
Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/cavium-octeon/octeon-wdt-nmi.S           |   19 ++++++++++++++-----
 arch/mips/cavium-octeon/setup.c                    |   11 ++++-------
 .../asm/mach-cavium-octeon/kernel-entry-init.h     |   11 +++++++++--
 3 files changed, 27 insertions(+), 14 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-wdt-nmi.S b/arch/mips/cavium-octeon/octeon-wdt-nmi.S
index 8a900a5..a831080 100644
--- a/arch/mips/cavium-octeon/octeon-wdt-nmi.S
+++ b/arch/mips/cavium-octeon/octeon-wdt-nmi.S
@@ -8,7 +8,10 @@
 #include <asm/asm.h>
 #include <asm/regdef.h>
 
-#define SAVE_REG(r)	sd $r, -32768+6912-(32-r)*8($0)
+#define CVMSEG_BASE -32768
+#define CVMSEG_SIZE (54 * 128)
+
+#define SAVE_REG(r)	sd $r, CVMSEG_BASE + CVMSEG_SIZE - ((32 - r) * 8)($0)
 
         NESTED(octeon_wdt_nmi_stage2, 0, sp)
 	.set 	push
@@ -49,16 +52,22 @@
 	SAVE_REG(29)
 	SAVE_REG(30)
 	SAVE_REG(31)
+	/* Write zero to all CVMSEG locations per Core-15169 */
+	dli	a0, CVMSEG_SIZE - (33 * 8)
+1:	sd	zero, CVMSEG_BASE(a0)
+	daddiu	a0, a0, -8
+	bgez	a0, 1b
+	nop
 	/* Set the stack to begin right below the registers */
-	li	sp, -32768+6912-32*8
+	dli	sp, CVMSEG_BASE + CVMSEG_SIZE - (32 * 8)
 	/* Load the address of the third stage handler */
-	dla	a0, octeon_wdt_nmi_stage3
+	dla	$25, octeon_wdt_nmi_stage3
 	/* Call the third stage handler */
-	jal	a0
+	jal	$25
 	/* a0 is the address of the saved registers */
 	 move	a0, sp
 	/* Loop forvever if we get here. */
-1:	b	1b
+2:	b	2b
 	nop
 	.set pop
 	END(octeon_wdt_nmi_stage2)
diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index b31fc87..d496232 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -456,18 +456,15 @@ void octeon_user_io_init(void)
 	/* R/W If set, CVMSEG is available for loads/stores in user
 	 * mode. */
 	cvmmemctl.s.cvmsegenau = 0;
-	/* R/W Size of local memory in cache blocks, 54 (6912 bytes)
-	 * is max legal value. */
-	cvmmemctl.s.lmemsz = CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE;
 
+	write_c0_cvmmemctl(cvmmemctl.u64);
 
+	/* Setup of CVMSEG is done in kernel-entry-init.h */
 	if (smp_processor_id() == 0)
 		pr_notice("CVMSEG size: %d cache lines (%d bytes)\n",
 			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE,
 			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128);
 
-	write_c0_cvmmemctl(cvmmemctl.u64);
-
 	/* Set a default for the hardware timeouts */
 	fau_timeout.u64 = 0;
 	fau_timeout.s.tout_val = 0xfff;
@@ -1121,8 +1118,8 @@ void prom_free_prom_memory(void)
 #ifdef CONFIG_CAVIUM_DECODE_RSL
 	unsigned long irq_flags;
 #endif
-        if (current_cpu_type() == CPU_CAVIUM_OCTEON2) {
-                /* Check for presence of Core-14445 fix.  */
+	if (OCTEON_IS_MODEL(OCTEON_CN63XX_PASS1_X)) {
+		/* Check for presence of Core-14449 fix.  */
                 u32 insn;
                 u32 *foo;
  
diff --git a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h
index 6897bf9..acdf458 100644
--- a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h
+++ b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h
@@ -119,7 +119,7 @@ FEXPORT(octeon_hotplug_entry)
 skip:
 	# First clear off CvmCtl[IPPCI] bit and move the performance
 	# counters interrupt to IRQ 6
-	li	v1, ~(7 << 7)
+	dli	v1, ~(7 << 7)
 	and	v0, v0, v1
 	or	v0, v0, 0x300		# (6 << 7)
 	# Write the cavium control register
@@ -127,7 +127,14 @@ skip:
 	sync
 	# Flush dcache after config change
 	cache   9, 0($0)
-	# Get my core id
+	# Zero all of CVMSEG to make sure parity is correct
+	dli	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE
+	dsll	v0, 7
+	beqz	v0, 2f
+1:	dsubu	v0, 8
+	sd	$0, -32768(v0)
+	bnez	v0, 1b
+2:	# Get my core id
 	rdhwr   v0, $0
 	# Jump the master to kernel_entry
 	bne     a2, zero, octeon_main_processor
-- 
1.7.0.4

