From 4f974fba33dc1737e8425278b977291078a759dd Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Thu, 6 May 2010 17:41:05 +0800
Subject: [PATCH 4/6] MIPS: Octeon: Add missed rcu_read_unlock to fix potential schedule or sleep in atomic context

During the syscall of sysmips for MIPS_CAVIUM_XKPHYS_WRITE cmd,
rcu_read_lock is called to protect the access to task's credentials,
but rcu_read_unlock is missed. So, this cause the whole syscall is
in atomic context and there is potential schedule or sleep

Added rcu_read_unlock to exit the atomic context once task's
creditial is accessed.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/cavium-octeon/userio.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/arch/mips/cavium-octeon/userio.c b/arch/mips/cavium-octeon/userio.c
index cc4df49..aa7f6ee 100644
--- a/arch/mips/cavium-octeon/userio.c
+++ b/arch/mips/cavium-octeon/userio.c
@@ -99,8 +99,10 @@ int xkphys_usermem_write(long pid, int value)
 	    tcred->euid != euid &&
 	    !(capable(CAP_SYS_RAWIO) || value == 0)) {
 		put_task_struct(task);
+		rcu_read_unlock();
 		return -EPERM;
 	}
+	rcu_read_unlock();
 
 	if (value & 1)
 		set_tsk_thread_flag(group_leader, TIF_XKPHYS_MEM_EN);
-- 
1.6.5.2

