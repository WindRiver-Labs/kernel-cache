From 98d2b08838128aff18b78ee1a6484fc13f7e23c1 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Fri, 12 Nov 2010 10:51:35 +0800
Subject: [PATCH 031/132] Cavium: Allow address range limit to be overridden

Source: Cavium SDK 2.0.0-366

Architecture specific code can set the limit by defining
HUGETLB_UNMAPPED_AREA_LIMIT.  This is simpler than copying
hugetlb_get_unmapped_area and putting a changed limit in the copy.

Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/include/asm/hugetlb.h |    1 +
 fs/hugetlbfs/inode.c            |   11 ++++++++---
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/arch/mips/include/asm/hugetlb.h b/arch/mips/include/asm/hugetlb.h
index f5e8560..e11b46c 100644
--- a/arch/mips/include/asm/hugetlb.h
+++ b/arch/mips/include/asm/hugetlb.h
@@ -11,6 +11,7 @@
 
 #include <asm/page.h>
 
+#define HUGETLB_UNMAPPED_AREA_LIMIT STACK_TOP
 
 static inline int is_hugepage_only_range(struct mm_struct *mm,
 					 unsigned long addr,
diff --git a/fs/hugetlbfs/inode.c b/fs/hugetlbfs/inode.c
index a0bbd3d..6c29e38 100644
--- a/fs/hugetlbfs/inode.c
+++ b/fs/hugetlbfs/inode.c
@@ -30,6 +30,7 @@
 #include <linux/dnotify.h>
 #include <linux/statfs.h>
 #include <linux/security.h>
+#include <linux/ima.h>
 #include <linux/magic.h>
 
 #include <asm/uaccess.h>
@@ -125,6 +126,10 @@ out:
  */
 
 #ifndef HAVE_ARCH_HUGETLB_UNMAPPED_AREA
+
+#ifndef HUGETLB_UNMAPPED_AREA_LIMIT
+#define HUGETLB_UNMAPPED_AREA_LIMIT TASK_SIZE
+#endif
 static unsigned long
 hugetlb_get_unmapped_area(struct file *file, unsigned long addr,
 		unsigned long len, unsigned long pgoff, unsigned long flags)
@@ -136,7 +141,7 @@ hugetlb_get_unmapped_area(struct file *file, unsigned long addr,
 
 	if (len & ~huge_page_mask(h))
 		return -EINVAL;
-	if (len > TASK_SIZE)
+	if (len > HUGETLB_UNMAPPED_AREA_LIMIT)
 		return -ENOMEM;
 
 	if (flags & MAP_FIXED) {
@@ -148,7 +153,7 @@ hugetlb_get_unmapped_area(struct file *file, unsigned long addr,
 	if (addr) {
 		addr = ALIGN(addr, huge_page_size(h));
 		vma = find_vma(mm, addr);
-		if (TASK_SIZE - len >= addr &&
+		if (HUGETLB_UNMAPPED_AREA_LIMIT - len >= addr &&
 		    (!vma || addr + len <= vma->vm_start))
 			return addr;
 	}
@@ -163,7 +168,7 @@ full_search:
 
 	for (vma = find_vma(mm, addr); ; vma = vma->vm_next) {
 		/* At this point:  (!vma || addr < vma->vm_end). */
-		if (TASK_SIZE - len < addr) {
+		if (HUGETLB_UNMAPPED_AREA_LIMIT - len < addr) {
 			/*
 			 * Start a new search - just in case we missed
 			 * some holes.
-- 
1.6.5.2

