From 15780b42d9cdb59d7e17e384ac2bd3b9c1a47777 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Wed, 10 Nov 2010 14:49:05 +0800
Subject: [PATCH 004/132] Cavium: SDK2.0 Enable selection of RESERVE32 memory

Source: SDK 2.0.0-366

Reserve a shared memory region for user processes to use for hardware
memory buffers. This is required for 32bit applications to be able to
send and receive packets directly. Applications access this memory by
memory mapping /dev/mem for the addresses in /proc/octeon_info. For
optimal performance with HugeTLBs, keep this size an even number of
megabytes.

Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/cavium-octeon/Kconfig |   22 +++++++++++-----------
 arch/mips/cavium-octeon/setup.c |    9 ++++-----
 2 files changed, 15 insertions(+), 16 deletions(-)

diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig
index ca897ed..0b488b6 100644
--- a/arch/mips/cavium-octeon/Kconfig
+++ b/arch/mips/cavium-octeon/Kconfig
@@ -190,17 +190,17 @@ config CAVIUM_OCTEON_USER_MEM_DISABLED
 endchoice
 
 config CAVIUM_RESERVE32
-	int "Memory to reserve for user processes shared region (MB)"
-	range 0 1536
-	depends on CAVIUM_OCTEON_SPECIFIC_OPTIONS
-	default "0"
-	help
-	  Reserve a shared memory region for user processes to use for hardware
-	  memory buffers. This is required for 32bit applications to be able to
-	  send and receive packets directly. Applications access this memory by
-	  memory mapping /dev/mem for the addresses in /proc/octeon_info. For
-	  optimal performance with HugeTLBs, keep this size an even number of
-	  megabytes.
+       int "Memory to reserve for user processes shared region (MB)"
+       range 0 1536
+       depends on CPU_CAVIUM_OCTEON
+       default "0"
+       help
+         Reserve a shared memory region for user processes to use for hardware
+         memory buffers. This is required for 32bit applications to be able to
+         send and receive packets directly. Applications access this memory by
+         memory mapping /dev/mem for the addresses in /proc/octeon_info. For
+         optimal performance with HugeTLBs, keep this size an even number of
+         megabytes.
 
 config ARCH_SPARSEMEM_ENABLE
 	def_bool y
diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index 36a118e..80f5611 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -57,7 +57,7 @@ struct octeon_boot_descriptor *octeon_boot_desc_ptr;
 struct cvmx_bootinfo *octeon_bootinfo;
 EXPORT_SYMBOL(octeon_bootinfo);
 
-#ifdef CONFIG_CAVIUM_RESERVE32
+#if CONFIG_CAVIUM_RESERVE32
 uint64_t octeon_reserve32_memory;
 EXPORT_SYMBOL(octeon_reserve32_memory);
 #endif
@@ -650,8 +650,7 @@ void __init prom_init(void)
 	const int coreid = cvmx_get_core_num();
 	int i;
 	int argc;
-	struct uart_port octeon_port;
-#ifdef CONFIG_CAVIUM_RESERVE32
+#if CONFIG_CAVIUM_RESERVE32
 	int64_t addr = -1;
 #endif
 	/*
@@ -680,7 +679,7 @@ void __init prom_init(void)
 		cvmx_write_csr(CVMX_LED_UDD_DATX(1), 0);
 		cvmx_write_csr(CVMX_LED_EN, 1);
 	}
-#ifdef CONFIG_CAVIUM_RESERVE32
+#if CONFIG_CAVIUM_RESERVE32
 	/*
 	 * We need to temporarily allocate all memory in the reserve32
 	 * region. This makes sure the kernel doesn't allocate this
@@ -1057,7 +1056,7 @@ void __init plat_mem_setup(void)
 	cvmx_bootmem_unlock();
 #endif
 
-#ifdef CONFIG_CAVIUM_RESERVE32
+#if CONFIG_CAVIUM_RESERVE32
 	/*
 	 * Now that we've allocated the kernel memory it is safe to
 	 * free the reserved region. We free it here so that builtin
-- 
1.6.5.2

