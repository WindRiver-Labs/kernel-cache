From 83b29d992630c4a755f97a43d4f67efd2106e07f Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Fri, 25 Feb 2011 12:53:40 +0800
Subject: [PATCH 20/30] WRHV: Cavium: Paravirtualize IRQ dispatch handler

Paravirtualize IRQ dispatch handler. Hypervisor routes the tick
interrupt through the vioapic.

For the interrupts coming from VIOAPIC, need to get the pending IRQ
number from VB_CONTROL, and need to recheck if there is more coming
interrupts when handling the interrupt otherwise some interrupts
will be dropped inadvertently.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
Signed-off-by: Phil Staub <Phil.Staub@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c |   10 +++++++++-
 arch/mips/include/asm/paravirt.h     |    2 ++
 arch/mips/kernel/paravirt.c          |    6 ++++++
 arch/mips/kernel/vbi/wrhv.c          |   17 +++++++++++++++++
 4 files changed, 34 insertions(+), 1 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index 2b999a2..7e568ba 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -747,7 +747,10 @@ void __init arch_init_irq(void)
 	paravirt_arch_init_irq();
 }
 
-asmlinkage void plat_irq_dispatch(void)
+asmlinkage void paravirt_plat_irq_dispatch(void)
+	__attribute__ ((weak, alias("native_plat_irq_dispatch")));
+
+asmlinkage void native_plat_irq_dispatch(void)
 {
 	const unsigned long core_id = cvmx_get_core_num();
 	const uint64_t ciu_sum0_address = CVMX_CIU_INTX_SUM0(core_id * 2);
@@ -796,6 +799,11 @@ asmlinkage void plat_irq_dispatch(void)
 	}
 }
 
+asmlinkage void plat_irq_dispatch(void)
+{
+	paravirt_plat_irq_dispatch();
+}
+
 #ifdef CONFIG_HOTPLUG_CPU
 
 void fixup_irqs(void)
diff --git a/arch/mips/include/asm/paravirt.h b/arch/mips/include/asm/paravirt.h
index fe76b25..27c8ea4 100644
--- a/arch/mips/include/asm/paravirt.h
+++ b/arch/mips/include/asm/paravirt.h
@@ -19,6 +19,7 @@ extern void __init native_tlb_init(void);
 extern void __init native_arch_init_irq(void);
 extern void __init native_plat_time_init(void);
 extern void __init native_mem_init(void);
+extern asmlinkage void native_plat_irq_dispatch(void);
 extern long native_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags);
 
 /*
@@ -38,6 +39,7 @@ struct pv_mem_ops {
  
 struct pv_irq_ops {
  	void (*arch_init_irq)(void);
+ 	void (*plat_irq_dispatch)(void);
 };
  
 struct pv_time_ops {
diff --git a/arch/mips/kernel/paravirt.c b/arch/mips/kernel/paravirt.c
index 9058004..2dbd5e6 100644
--- a/arch/mips/kernel/paravirt.c
+++ b/arch/mips/kernel/paravirt.c
@@ -54,6 +54,7 @@ struct pv_mem_ops pv_mem_ops = {
 
 struct pv_irq_ops pv_irq_ops = {
  	.arch_init_irq = native_arch_init_irq,
+ 	.plat_irq_dispatch = native_plat_irq_dispatch,
 };
  
 struct pv_time_ops pv_time_ops = {
@@ -104,6 +105,11 @@ void __init paravirt_mem_init(void)
  	pv_mem_ops.mem_init();
 }
  
+asmlinkage void paravirt_plat_irq_dispatch(void)
+{
+ 	pv_irq_ops.plat_irq_dispatch();
+}
+ 
 long paravirt_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)
 {
  	return pv_misc_ops.kernel_thread(fn, arg, flags);
diff --git a/arch/mips/kernel/vbi/wrhv.c b/arch/mips/kernel/vbi/wrhv.c
index 4f52085..3c85f0d 100644
--- a/arch/mips/kernel/vbi/wrhv.c
+++ b/arch/mips/kernel/vbi/wrhv.c
@@ -65,6 +65,7 @@ extern int octeon_uart;
 extern void pci_console_init(const char *arg);
 
 #define SDK_VERSION "2.0"
+#define CVM_CIU_INT_SUM_TIM0 ((uint64_t)(0x1ULL << 52ULL))
 #endif
 
 #ifndef NUM_MACS
@@ -888,6 +889,21 @@ int read_current_timer(unsigned long *timer_val)
 	return 0;
 }
 
+/* Initial IRQ dispatch, just handle timer interrupt */
+asmlinkage void wrhv_plat_irq_dispatch(void)
+{
+	uint64_t irq;
+
+check_again:
+	irq = wr_vb_control->irq_pend;
+	if (irq != 0xffff) {
+		wr_vb_control->irq_pend = 0xffff;
+		do_IRQ(irq);
+		goto check_again;
+	}
+	return;
+}
+
 void __init wrhv_init(void)
 {
 	/* initialize wr_config so that we can access
@@ -910,6 +926,7 @@ void __init wrhv_init(void)
 	pv_mem_ops.mem_init = wrhv_mem_init;
 
 	pv_irq_ops.arch_init_irq = wrhv_arch_init_irq;
+	pv_irq_ops.plat_irq_dispatch = wrhv_plat_irq_dispatch;
 
 	pv_time_ops.plat_time_init = wrhv_plat_time_init;
 
-- 
1.7.0.2

