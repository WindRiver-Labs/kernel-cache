From 11ce9f4be1bef6c0f4ed40e33c4d5bf9bbbb8f2d Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Tue, 31 Aug 2010 20:54:49 -0700
Subject: [PATCH] ATA: Octeon: Add IRQF_NODELAY flag for interrupt when IRQ thread is enabled

If IRQ thread is enabled, during reboot, there is kernel panic in
CF card driver:
Call Trace:
[<ffffffff814556a8>] unreachable_port+0x0/0x10
[<ffffffff81452aa0>] ata_sff_host_intr+0x198/0x218
[<ffffffff8144f570>] ata_scsi_error+0x70/0x650
[<ffffffff8142dac8>] scsi_error_handler+0x128/0x440
[<ffffffff811753a0>] kthread+0x88/0x90
[<ffffffff8111ed40>] kernel_thread_helper+0x10/0x18

So, add IRQF_NODELAY flag to avoid CF card interrupt threaded.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 drivers/ata/pata_octeon_cf.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/drivers/ata/pata_octeon_cf.c b/drivers/ata/pata_octeon_cf.c
index 005a444..63d6efe 100644
--- a/drivers/ata/pata_octeon_cf.c
+++ b/drivers/ata/pata_octeon_cf.c
@@ -833,6 +833,7 @@ static int __devinit octeon_cf_probe(struct platform_device *pdev)
 	irq_handler_t irq_handler = NULL;
 	void __iomem *base;
 	struct octeon_cf_port *cf_port;
+	unsigned long irq_flags = 0;
 
 	res_cs0 = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 
@@ -936,8 +937,11 @@ static int __devinit octeon_cf_probe(struct platform_device *pdev)
 		 (ocd->is16bit) ? 16 : 8,
 		 (cs1) ? ", True IDE" : "");
 
+#ifdef CONFIG_PREEMPT_HARDIRQS
+	irq_flags = IRQF_NODELAY;
+#endif
 
-	return ata_host_activate(host, irq, irq_handler, 0, &octeon_cf_sht);
+	return ata_host_activate(host, irq, irq_handler, irq_flags, &octeon_cf_sht);
 
 free_cf_port:
 	kfree(cf_port);
-- 
1.6.5.2

