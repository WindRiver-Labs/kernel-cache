From 8a4f8a5c51c3dae4e5df6198e384cee7eeed4c31 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Mon, 15 Nov 2010 14:58:22 +0800
Subject: [PATCH 120/132] MIPS: Octeon: Allow EHCI driver to work with 4GB RAM

Source: Cavium SDK 2.0.0-366

We enable CONFIG_ZONE_DMA32, fix dma-default.c, and set the EHCI's
coherent_dma_mask to 32-bits.

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/Kconfig              |    1 +
 arch/mips/mm/dma-default.c     |    4 ++--
 drivers/usb/host/ehci-octeon.c |   11 ++++++++---
 3 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index 3c93384..1c76549 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -671,6 +671,7 @@ config CAVIUM_OCTEON_REFERENCE_BOARD
 	select SWAP_IO_SPACE
 	select HW_HAS_PCI
 	select ARCH_SUPPORTS_MSI
+	select ZONE_DMA32
 	help
 	  This option supports all of the Octeon reference boards from Cavium
 	  Networks. It builds a kernel that dynamically determines the Octeon
diff --git a/arch/mips/mm/dma-default.c b/arch/mips/mm/dma-default.c
index 9547bc0..98222d6 100644
--- a/arch/mips/mm/dma-default.c
+++ b/arch/mips/mm/dma-default.c
@@ -50,12 +50,12 @@ static gfp_t massage_gfp_flags(const struct device *dev, gfp_t gfp)
 #ifdef CONFIG_ZONE_DMA
 	if (dev == NULL)
 		gfp |= __GFP_DMA;
-	else if (dev->coherent_dma_mask < DMA_BIT_MASK(24))
+	else if (dev->coherent_dma_mask <= DMA_BIT_MASK(24))
 		gfp |= __GFP_DMA;
 	else
 #endif
 #ifdef CONFIG_ZONE_DMA32
-	     if (dev->coherent_dma_mask < DMA_BIT_MASK(32))
+	     if (dev->coherent_dma_mask <= DMA_BIT_MASK(32))
 		gfp |= __GFP_DMA32;
 	else
 #endif
diff --git a/drivers/usb/host/ehci-octeon.c b/drivers/usb/host/ehci-octeon.c
index c48f8e3..b9416fd 100644
--- a/drivers/usb/host/ehci-octeon.c
+++ b/drivers/usb/host/ehci-octeon.c
@@ -87,6 +87,8 @@ static const struct hc_driver ehci_octeon_hc_driver = {
 	.clear_tt_buffer_complete	= ehci_clear_tt_buffer_complete,
 };
 
+static u64 ehci_octeon_dma_mask = DMA_BIT_MASK(64);
+
 static int ehci_octeon_drv_probe(struct platform_device *pdev)
 {
 	struct usb_hcd *hcd;
@@ -110,9 +112,12 @@ static int ehci_octeon_drv_probe(struct platform_device *pdev)
 		return -ENODEV;
 	}
 
-	/* We can DMA from anywhere. */
-	pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
-	pdev->dev.dma_mask = &pdev->dev.coherent_dma_mask;
+	/*
+	 * We can DMA from anywhere. But the descriptors must be in
+	 * the lower 4GB.
+	 */
+	pdev->dev.coherent_dma_mask = DMA_BIT_MASK(32);
+	pdev->dev.dma_mask = &ehci_octeon_dma_mask;
 
 	hcd = usb_create_hcd(&ehci_octeon_hc_driver, &pdev->dev, "octeon");
 	if (!hcd)
-- 
1.6.5.2

