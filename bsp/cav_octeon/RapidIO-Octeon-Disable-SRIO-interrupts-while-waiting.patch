From 433d8de25d11b0836062e39f5ddeeadc62bc6811 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Mon, 15 Nov 2010 14:18:22 +0800
Subject: [PATCH 083/132] RapidIO: Octeon: Disable SRIO interrupts while waiting for schedule of handler.

Unfortunately error interrupts destine to cvmx-error also come through
CIU_INT_SUM1[SRIO*] and cause havoc since there aren't any upper level
mask bits.

Signed-off-by: Chad Reese <kreese@caviumnetworks.com>
Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/cavium-octeon/octeon-rapidio.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-rapidio.c b/arch/mips/cavium-octeon/octeon-rapidio.c
index 446f4b6..8d066ee 100644
--- a/arch/mips/cavium-octeon/octeon-rapidio.c
+++ b/arch/mips/cavium-octeon/octeon-rapidio.c
@@ -516,6 +516,7 @@ static void octeon_rio_work(struct work_struct *work)
 	if (int_reg.s.bell_err || int_reg.s.txbell)
 		octeon_rio_tx_doorbell(mport);
 
+	enable_irq(OCTEON_IRQ_SRIO0 + mport->id);
 	octeon_rio_irq_set_enable(mport, 1);
 }
 
@@ -534,6 +535,7 @@ static irqreturn_t octeon_rio_irq(int irq, void *irq_arg)
 
 	DEBUG_IRQ(mport, "Interrupt\n");
 	octeon_rio_irq_set_enable(mport, 0);
+	disable_irq_nosync(irq);
 	schedule_work(&my_port->work);
 	return IRQ_HANDLED;
 }
-- 
1.6.5.2

