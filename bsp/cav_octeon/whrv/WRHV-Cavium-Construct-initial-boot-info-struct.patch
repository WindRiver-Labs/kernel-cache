From 99a2c806df1d10acfbfacde2a5c09e562a2f902a Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Fri, 25 Feb 2011 12:24:31 +0800
Subject: [PATCH 06/30] WRHV: Cavium: Construct initial boot info struct

For Cavium Octeon native Linux boot, the bootloader passes pointer of
octeon_boot_descriptor struct via $a3 register to kernel. But, on
Hypervisor, the bootloader is bypassed, so we need construct the boot
struct manually, then save the address into fw_arg3 to emulate this.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/kernel/vbi/wrhv.c |   84 +++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 84 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/vbi/wrhv.c b/arch/mips/kernel/vbi/wrhv.c
index eb7d68c..836ea4a 100644
--- a/arch/mips/kernel/vbi/wrhv.c
+++ b/arch/mips/kernel/vbi/wrhv.c
@@ -14,6 +14,7 @@
 
 #include <linux/init.h>
 #include <linux/types.h>
+#include <linux/kernel.h>
 #include <linux/sched.h>
 #include <linux/irq.h>
 #include <linux/interrupt.h>
@@ -25,6 +26,7 @@
 #include <linux/highmem.h>
 #include <trace/sched.h>
 
+#include <asm/bootinfo.h>
 #include <asm/mipsmtregs.h>
 #include <asm/mmu_context.h>
 #include <asm/sections.h>
@@ -33,6 +35,7 @@
 #include <linux/wrhv.h>
 
 struct vb_config *wr_config;
+static uint32_t service_handle;
 
 extern void cpu_cache_init(void);
 extern void tlb_init(void);
@@ -40,6 +43,83 @@ extern unsigned long setup_zero_pages(void);
 
 #define VECTORSPACING 0x100
 
+static void get_hv_bsp_server_handle(void)
+{
+ 	int32_t rc;
+ 
+ 	rc = vbi_ns_lookup ("bspServer", 0, &service_handle, VBI_NS_NO_TIMEOUT, VBI_NS_OPTION_NONE);
+ 	if (rc)
+ 	printk ("bspServer lookup returned error code: %d\n", rc);
+}
+ 
+static int bsp_service_handle(VBI_BSP_MSG *ask_msg, VBI_BSP_MSG_REPLY *reply_msg)
+{
+ 	int32_t rc = -1;
+ 
+ 	if (!service_handle) {
+ 		printk(KERN_ERR "Can't get bsp service handle!\n");
+ 		return rc;
+ 	}
+ 
+ 	rc = vbi_send (service_handle, ask_msg, sizeof(VBI_BSP_MSG),
+ 		reply_msg, sizeof(VBI_BSP_MSG_REPLY), NULL, NULL);
+ 
+ 	if (rc)
+ 		printk("vbi_send to the bspServer returned error code: %d\n", rc);
+ 
+ 	return rc;
+}
+ 
+static uint32_t get_bsp_clock_freq(void)
+{
+ 	VBI_BSP_MSG clk_msg;
+ 	VBI_BSP_MSG_REPLY clk_reply;
+ 	uint16_t rc = -1;
+ 
+ 	clk_msg.request = VBI_BSP_CORE_FREQ; /* request CPU freq */
+ 
+ 	rc = bsp_service_handle(&clk_msg, &clk_reply);
+ 	if (rc)
+ 		return rc;
+ 	return (clk_reply.dataVal);
+}
+ 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+#include <asm/octeon/octeon.h>
+#include <asm/octeon/octeon-boot-info.h>
+ 
+struct __initdata cvmx_bootinfo octeon_bootinfo_struct;
+struct __initdata octeon_boot_descriptor octeon_boot_descriptor_struct;
+ 
+void __init octeon_boot_info_init(void)
+{
+ 	memset(&octeon_bootinfo_struct, 0, sizeof(octeon_bootinfo_struct));
+ 
+ 	get_hv_bsp_server_handle();
+ 
+ 	octeon_bootinfo_struct.major_version = CVMX_BOOTINFO_MAJ_VER;
+ 	octeon_bootinfo_struct.minor_version = CVMX_BOOTINFO_MIN_VER;
+ 	octeon_bootinfo_struct.core_mask = 0xffff;
+ 	octeon_bootinfo_struct.exception_base_addr = 0xc0000000;
+ 	octeon_bootinfo_struct.dram_size = VBI_MEM_SIZE_GET();
+ 	octeon_bootinfo_struct.eclock_hz = get_bsp_clock_freq();
+ 	octeon_bootinfo_struct.board_type = CVMX_BOARD_TYPE_CUST_WRHV_OCTEON;
+ 
+ 	memset(&octeon_boot_descriptor_struct, 0, sizeof(octeon_boot_descriptor_struct));
+ 
+ 	octeon_boot_descriptor_struct.argc = 1;
+ 	octeon_boot_descriptor_struct.argv[0] = (unsigned long) VBI_BOOTLINE_ADDR_GET();
+ 	octeon_boot_descriptor_struct.core_mask = 0xffff;
+ 	octeon_boot_descriptor_struct.exception_base_addr = 0xc0000000;
+ 	octeon_boot_descriptor_struct.dram_size = VBI_MEM_SIZE_GET();
+ 	octeon_boot_descriptor_struct.eclock_hz = get_bsp_clock_freq();
+ 	octeon_boot_descriptor_struct.board_type = CVMX_BOARD_TYPE_CUST_WRHV_OCTEON;
+ 	octeon_boot_descriptor_struct.cvmx_desc_vaddr = (uint64_t) &octeon_bootinfo_struct;
+ 
+ 	fw_arg3 = (unsigned long) &octeon_boot_descriptor_struct;
+}
+#endif /* CONFIG_CPU_CAVIUM_OCTEON */
+
 unsigned long max_asid;
 
 static void get_max_asid(void)
@@ -365,6 +445,10 @@ void __init early_init(void)
 #ifdef CONFIG_PARAVIRT
 	paravirt_init();
 #endif
+
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	octeon_boot_info_init();
+#endif
 }
 
 EXPORT_SYMBOL(vbi_vcore_irq_lock);
-- 
1.6.5.2

