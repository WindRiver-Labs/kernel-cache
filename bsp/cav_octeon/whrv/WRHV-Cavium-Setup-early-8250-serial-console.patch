From 122ceafc90b78efa718e9ea8136929953c71ec40 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Fri, 25 Feb 2011 12:48:36 +0800
Subject: [PATCH 17/30] WRHV: Cavium: Setup early 8250 serial console

In early bootstrap stage, early console is used as console, after
console_init, it's replaced by early 8250 serial console (ttySn).

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/kernel/vbi/wrhv.c |   35 +++++++++++++++++++++++++++++++++++
 1 files changed, 35 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/vbi/wrhv.c b/arch/mips/kernel/vbi/wrhv.c
index caa7bbe..a6f1700 100644
--- a/arch/mips/kernel/vbi/wrhv.c
+++ b/arch/mips/kernel/vbi/wrhv.c
@@ -21,6 +21,8 @@
 #include <linux/clockchips.h>
 #include <linux/clocksource.h>
 #include <linux/timex.h>
+#include <linux/serial_core.h>
+#include <linux/serial_8250.h>
 #include <linux/bootmem.h>
 #include <linux/proc_fs.h>
 #include <linux/swap.h>
@@ -542,6 +544,7 @@ void __init wrhv_prom_init(void)
 {
 	struct cvmx_sysinfo *sysinfo;
 	struct linux_app_boot_info *labi;
+	struct uart_port octeon_port;
 	int i;
 	int argc;
 #if CONFIG_CAVIUM_RESERVE32
@@ -714,6 +717,38 @@ void __init wrhv_prom_init(void)
 	_machine_restart = wrhv_restart;
 	_machine_halt = wrhv_halt;
 
+	memset(&octeon_port, 0, sizeof(octeon_port));
+	/*
+	 * For early_serial_setup we don't set the port type or
+	 * UPF_FIXED_TYPE.
+	 */
+	octeon_port.flags = ASYNC_SKIP_TEST | UPF_SHARE_IRQ;
+	octeon_port.iotype = UPIO_MEM;
+	/* I/O addresses are every 8 bytes */
+	octeon_port.regshift = 3;
+	/* 
+	 * Clock rate of the chip, need get the rate from VB.
+	 * 58xx/63xx core freq is 800MHz, so hardcode UART
+	 * clock to 800M. 38xx core freq is 500MHz.
+	 */
+	if (octeon_is_simulation())
+		octeon_port.uartclk = 115200 * 16;
+	else
+		octeon_port.uartclk = 800000000;
+	octeon_port.fifosize = 64;
+	octeon_port.mapbase = 0x0001180000000800ull + (1024 * octeon_uart);
+	octeon_port.membase = (char *) (octeon_port.mapbase | (1ULL << 63));
+	octeon_port.serial_in = octeon_serial_in;
+	octeon_port.serial_out = octeon_serial_out;
+#ifdef CONFIG_CAVIUM_OCTEON_2ND_KERNEL
+	octeon_port.line = 0;
+#else
+	octeon_port.line = octeon_uart;
+#endif
+	/* Need get IRQ number via VBI instead of hardcode */
+	octeon_port.irq = 42 + octeon_uart;
+	early_serial_setup(&octeon_port);
+
 #ifndef CONFIG_WRHV
 	octeon_user_io_init();
 #endif
-- 
1.6.5.2

