From 6d21cd497138e8079013b3478433bf32cd5023e5 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Fri, 25 Feb 2011 18:58:10 +0800
Subject: [PATCH 04/30] WRHV: Cavium: Paravirtualize board kernel-entry-init

Paravirtualize Cavium specific kernel-entry-init header file.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 .../asm/mach-cavium-octeon/kernel-entry-init.h     |    6 +-
 .../mach-cavium-octeon/wrhv-kernel-entry-init.h    |   80 ++++++++++++++++++++
 2 files changed, 84 insertions(+), 2 deletions(-)
 create mode 100644 arch/mips/include/asm/mach-cavium-octeon/wrhv-kernel-entry-init.h

diff --git a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h
index 84c66af..976fab7 100644
--- a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h
+++ b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h
@@ -8,7 +8,9 @@
 #ifndef __ASM_MACH_CAVIUM_OCTEON_KERNEL_ENTRY_H
 #define __ASM_MACH_CAVIUM_OCTEON_KERNEL_ENTRY_H
 
-
+#ifdef CONFIG_WRHV
+#include <wrhv-kernel-entry-init.h>
+#else
 #define CP0_CYCLE_COUNTER $9, 6
 #define CP0_CVMCTL_REG $9, 7
 #define CP0_CVMMEMCTL_REG $11,7
@@ -132,5 +134,5 @@ octeon_main_processor:
  */
 	.macro  smp_slave_setup
 	.endm
-
+#endif /* CONFIG_WRHV */
 #endif /* __ASM_MACH_CAVIUM_OCTEON_KERNEL_ENTRY_H */
diff --git a/arch/mips/include/asm/mach-cavium-octeon/wrhv-kernel-entry-init.h b/arch/mips/include/asm/mach-cavium-octeon/wrhv-kernel-entry-init.h
new file mode 100644
index 0000000..f9d6d81
--- /dev/null
+++ b/arch/mips/include/asm/mach-cavium-octeon/wrhv-kernel-entry-init.h
@@ -0,0 +1,80 @@
+/*
+ * wrhv-kernel-entry-init.h - MIPS64 architecture WRHV specific kernel entry
+ *
+ * Copyright 2010 Wind River Systems, Inc.
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+ * See the GNU General Public License for more details.
+ *
+ */
+
+#ifndef __ASM_MACH_CAVIUM_OCTEON_WRHV_KERNEL_ENTRY_H
+#define __ASM_MACH_CAVIUM_OCTEON_WRHV_KERNEL_ENTRY_H
+
+.macro  kernel_entry_setup
+	.set push
+	.set arch=octeon
+	# Jump the master to kernel_entry
+	b	octeon_main_processor
+	nop
+
+#ifdef CONFIG_SMP
+
+	#
+	# All cores other than the master need to wait here for SMP bootstrap
+	# to begin
+	#
+
+	# This is the variable where the next core to boot os stored
+	PTR_LA  t0, octeon_processor_boot
+octeon_spin_wait_boot:
+	# Get the core id of the next to be booted
+	LONG_L  t1, (t0)
+	# Keep looping if it isn't me
+	bne t1, v0, octeon_spin_wait_boot
+	nop
+	# Get my GP from the global variable
+	PTR_LA  t0, octeon_processor_gp
+	LONG_L  gp, (t0)
+	# Get my SP from the global variable
+	PTR_LA  t0, octeon_processor_sp
+	LONG_L  sp, (t0)
+	# Set the SP global variable to zero so the master knows we've started
+	LONG_S  zero, (t0)
+#ifdef __OCTEON__
+	syncw
+	syncw
+#else
+	sync
+#endif
+	# Jump to the normal Linux SMP entry point
+	j   smp_bootstrap
+	nop
+#else /* CONFIG_SMP */
+
+	#
+	# Someone tried to boot SMP with a non SMP kernel. All extra cores
+	# will halt here.
+	#
+octeon_wait_forever:
+	wait
+	b   octeon_wait_forever
+	nop
+
+#endif /* CONFIG_SMP */
+octeon_main_processor:
+	.set pop
+.endm
+
+/*
+ * Do SMP slave processor setup necessary before we can savely execute C code.
+ */
+	.macro  smp_slave_setup
+	.endm
+
+#endif /* __ASM_MACH_CAVIUM_OCTEON_WRHV_KERNEL_ENTRY_H */
-- 
1.6.5.2

