From 44a28d93b10ea70626000424c8ec05786efdf687 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Thu, 11 Nov 2010 18:10:11 +0800
Subject: [PATCH 028/132] Cavium: MDIO driver mods

Source: Local development

An extra parameter was added to mdiobus_read/mdiobus_write to support
10Gb network hardware. (The extra parameter is used to identify the
register within the phy.) In the Cavium case, this parameter is not
used and always set to '0'.

Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/cavium-octeon/setup.c       |    4 ++++
 arch/mips/include/asm/octeon/octeon.h |    3 +++
 drivers/net/octeon/ethernet-proc.c    |    6 +++---
 simple_exec/cvmx-mdio.h               |    4 ++--
 4 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index 6290e06..c54370e 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -105,6 +105,10 @@ static int octeon_uart;
 extern asmlinkage void handle_int(void);
 extern asmlinkage void plat_irq_dispatch(void);
 
+/* Any mdio busses that are configured for this kernel. */
+struct mii_bus *octeon_mdiobuses[2];
+EXPORT_SYMBOL(octeon_mdiobuses);
+
 #define SDK_VERSION "2.0"
 
 /**
diff --git a/arch/mips/include/asm/octeon/octeon.h b/arch/mips/include/asm/octeon/octeon.h
index 8f4e059..2ddbea9 100644
--- a/arch/mips/include/asm/octeon/octeon.h
+++ b/arch/mips/include/asm/octeon/octeon.h
@@ -8,6 +8,8 @@
 #ifndef __ASM_OCTEON_OCTEON_H
 #define __ASM_OCTEON_OCTEON_H
 
+#include <linux/phy.h>
+
 #include "cvmx.h"
 
 extern uint64_t octeon_bootmem_alloc_range_phys(uint64_t size,
@@ -254,6 +256,7 @@ static inline uint32_t octeon_npi_read32(uint64_t address)
 }
 
 extern struct cvmx_bootinfo *octeon_bootinfo;
+extern struct mii_bus *octeon_mdiobuses[2];
 
 extern u64 octeon_bootloader_entry_addr;
 
diff --git a/drivers/net/octeon/ethernet-proc.c b/drivers/net/octeon/ethernet-proc.c
index 812842f..a39c3b8 100644
--- a/drivers/net/octeon/ethernet-proc.c
+++ b/drivers/net/octeon/ethernet-proc.c
@@ -45,8 +45,8 @@
 
 static unsigned long long cvm_oct_stats_read_switch(struct mii_bus *mii_bus, int phy_id, int offset)
 {
-	mii_bus->write(mii_bus, phy_id, 0x1d, 0xcc00 | offset);
-	return ((uint64_t)mii_bus->read(mii_bus, phy_id, 0x1e)<<16) | (uint64_t)mii_bus->read(mii_bus, phy_id, 0x1f);
+	mii_bus->write(mii_bus, phy_id, 0, 0x1d, 0xcc00 | offset);
+	return ((uint64_t)mii_bus->read(mii_bus, phy_id, 0, 0x1e)<<16) | (uint64_t)mii_bus->read(mii_bus, phy_id, 0, 0x1f);
 }
 
 static int cvm_oct_stats_switch_show(struct octeon_ethernet *priv, struct seq_file *m, void *v)
@@ -62,7 +62,7 @@ static int cvm_oct_stats_switch_show(struct octeon_ethernet *priv, struct seq_fi
 			break;
 		mutex_lock(&mii_bus->mdio_lock);
 
-		priv->mii_bus->write(mii_bus, 0x1b, 0x1d, 0xdc00 | ports[index]);
+		priv->mii_bus->write(mii_bus, 0x1b, 0, 0x1d, 0xdc00 | ports[index]);
 		seq_printf(m, "\nSwitch Port %d\n", ports[index]);
 		seq_printf(m, "InGoodOctets:   %12llu\t"
 			   "OutOctets:      %12llu\t"
diff --git a/simple_exec/cvmx-mdio.h b/simple_exec/cvmx-mdio.h
index 859f03e..016edc6 100644
--- a/simple_exec/cvmx-mdio.h
+++ b/simple_exec/cvmx-mdio.h
@@ -388,7 +388,7 @@ static inline int cvmx_mdio_read(int bus_id, int phy_id, int location)
 	if (bus == NULL)
 		return -1;
 
-	rv = mdiobus_read(bus, phy_id, location);
+	rv = mdiobus_read(bus, phy_id, 0, location);
 
 	if (rv < 0)
 		return -1;
@@ -440,7 +440,7 @@ static inline int cvmx_mdio_write(int bus_id, int phy_id, int location, int val)
 	if (bus == NULL)
 		return -1;
 
-	rv = mdiobus_write(bus, phy_id, location, (u16)val);
+	rv = mdiobus_write(bus, phy_id, 0, location, (u16)val);
 
 	if (rv < 0)
 		return -1;
-- 
1.6.5.2

