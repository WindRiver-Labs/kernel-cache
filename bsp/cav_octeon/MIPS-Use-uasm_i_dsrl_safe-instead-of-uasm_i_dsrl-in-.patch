From 3e717af18e584d11767cf73d5042075a04abde85 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Mon, 15 Nov 2010 14:47:52 +0800
Subject: [PATCH 114/132] MIPS: Use uasm_i_dsrl_safe() instead of uasm_i_dsrl() in tlbex.c

Source: Cavium SDK 2.0.0-366

This fixes at least one bug as well as cleaning up the code some.

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/mm/tlbex.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c
index db3f409..e04a265 100644
--- a/arch/mips/mm/tlbex.c
+++ b/arch/mips/mm/tlbex.c
@@ -954,7 +954,7 @@ build_fast_tlb_refill_handler (u32 **p, struct uasm_label **l,
 		else
 			UASM_i_SW(p, scratch, TEMPORARY_SCRATCHPAD_FOR_KERNEL_OFFSET(0), 0);
 
-		uasm_i_dsrl32(p, scratch, tmp, (PGDIR_SHIFT + PGD_ORDER + PAGE_SHIFT - 3) - 32);
+		uasm_i_dsrl_safe(p, scratch, tmp, PGDIR_SHIFT + PGD_ORDER + PAGE_SHIFT - 3);
 		uasm_il_bnez(p, r, scratch, label_vmalloc);
 
 		if (pgd_reg == -1) {
@@ -993,7 +993,7 @@ build_fast_tlb_refill_handler (u32 **p, struct uasm_label **l,
 #endif
 
 	if (!vmalloc_branch_delay_filled)
-		uasm_i_dsrl(p, scratch, tmp, PGDIR_SHIFT - 3);/* get pgd offset in bytes */
+		uasm_i_dsrl_safe(p, scratch, tmp, PGDIR_SHIFT - 3);/* get pgd offset in bytes */
 
 	uasm_l_vmalloc_done(l, *p);
 
@@ -1004,7 +1004,7 @@ build_fast_tlb_refill_handler (u32 **p, struct uasm_label **l,
 	 */
 
 	if (vmalloc_branch_delay_filled)
-		uasm_i_dsrl(p, scratch, tmp, PGDIR_SHIFT - 3);/* get pgd offset in bytes */
+		uasm_i_dsrl_safe(p, scratch, tmp, PGDIR_SHIFT - 3);/* get pgd offset in bytes */
 
 #ifdef __PAGETABLE_PMD_FOLDED
 	GET_CONTEXT(p, tmp); /* get context reg */
@@ -1019,7 +1019,7 @@ build_fast_tlb_refill_handler (u32 **p, struct uasm_label **l,
 	}
 
 #ifndef __PAGETABLE_PMD_FOLDED
-	uasm_i_dsrl(p, scratch, tmp, PMD_SHIFT - 3); /* get pmd offset in bytes */
+	uasm_i_dsrl_safe(p, scratch, tmp, PMD_SHIFT - 3); /* get pmd offset in bytes */
 	uasm_i_andi(p, scratch, scratch, (PTRS_PER_PMD - 1) << 3);
 	GET_CONTEXT(p, tmp); /* get context reg */
 
@@ -1060,15 +1060,15 @@ build_fast_tlb_refill_handler (u32 **p, struct uasm_label **l,
 		UASM_i_LW(p, odd, sizeof(pte_t), ptr); /* get odd pte */
 	}
 	if (kernel_uses_smartmips_rixi) {
-		uasm_i_dsrl(p, even, even, ilog2(_PAGE_NO_EXEC));
-		uasm_i_dsrl(p, odd, odd, ilog2(_PAGE_NO_EXEC));
+		uasm_i_dsrl_safe(p, even, even, ilog2(_PAGE_NO_EXEC));
+		uasm_i_dsrl_safe(p, odd, odd, ilog2(_PAGE_NO_EXEC));
 		uasm_i_drotr(p, even, even, ilog2(_PAGE_GLOBAL) - ilog2(_PAGE_NO_EXEC));
 		UASM_i_MTC0(p, even, C0_ENTRYLO0); /* load it */
 		uasm_i_drotr(p, odd, odd, ilog2(_PAGE_GLOBAL) - ilog2(_PAGE_NO_EXEC));
 	} else {
-		uasm_i_dsrl(p, even, even, 6);
+		uasm_i_dsrl_safe(p, even, even, 6);
 		UASM_i_MTC0(p, even, C0_ENTRYLO0); /* load it */
-		uasm_i_dsrl(p, odd, odd, 6);
+		uasm_i_dsrl_safe(p, odd, odd, 6);
 	}
 	UASM_i_MTC0(p, odd, C0_ENTRYLO1); /* load it */
 
-- 
1.6.5.2

