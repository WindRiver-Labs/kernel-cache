From 9c9ed92c34deebe2ec190028485146848f37c997 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Mon, 15 Nov 2010 14:33:02 +0800
Subject: [PATCH 099/132] RapidIO: Octeon: Fix incorrect usage of __skb_pull().

On receiving an SRIO packet, the ethernet driver attempted to
extract and remove the SRIO receive header using __skb_pull().
It incorrectly assumed that __skb_pull() returned skb->data
before the increment instead of after. Change the code to use
skb->data as the address, before __skb_pull() is called.

Signed-off-by: Chad Reese <kreese@caviumnetworks.com>
Signed-off-by: ltian <le.tian@windriver.com>
---
 drivers/net/octeon/ethernet-rx.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/drivers/net/octeon/ethernet-rx.c b/drivers/net/octeon/ethernet-rx.c
index 161f3e4..ff03f30 100644
--- a/drivers/net/octeon/ethernet-rx.c
+++ b/drivers/net/octeon/ethernet-rx.c
@@ -471,7 +471,8 @@ static int cvm_oct_napi_poll(struct napi_struct *napi, int budget)
 			struct octeon_ethernet *priv = cvm_oct_by_port[work->ipprt];
 #ifdef CONFIG_RAPIDIO
 			if (unlikely(priv->imode == CVMX_HELPER_INTERFACE_MODE_SRIO)) {
-				const cvmx_srio_rx_message_header_t *rx_header = (const cvmx_srio_rx_message_header_t *)__skb_pull(skb, sizeof(cvmx_srio_rx_message_header_t));
+				const cvmx_srio_rx_message_header_t *rx_header = (const cvmx_srio_rx_message_header_t *)skb->data;
+				__skb_pull(skb, sizeof(cvmx_srio_rx_message_header_t));
 				priv = cvm_oct_by_srio_mbox[(work->ipprt - 40) >> 1][rx_header->word0.s.mbox];
 
 				atomic64_add(1, (atomic64_t *)&priv->netdev->stats.rx_packets);
-- 
1.6.5.2

