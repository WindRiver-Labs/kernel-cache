From bf6acaf12e69a0be6e9f84b445e742258f5f51a6 Mon Sep 17 00:00:00 2001
From: Lans Zhang <jia.zhang@windriver.com>
Date: Mon, 1 Feb 2010 00:21:12 -0800
Subject: [PATCH] sched_clock: implement high resolution for octeon

With the advent of function graph tracing on MIPS, Octeon needs a high
precision sched_clock() implementation.  Without it, most timing
numbers are reported as 0.000.

This new sched_clock just uses the 64-bit cycle counter appropriately
scaled.

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
[LZ: Original patch taken from this linux-mips mailing list:
http://www.spinics.net/lists/mips/msg36363.htm, and make
minor changes in order to backport to wrlinux-3.0]
Integrated-by: Lans Zhang <jia.zhang@windriver.com>
---
 arch/mips/cavium-octeon/sync-octeon.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/arch/mips/cavium-octeon/sync-octeon.c b/arch/mips/cavium-octeon/sync-octeon.c
index 3842157..625a641 100644
--- a/arch/mips/cavium-octeon/sync-octeon.c
+++ b/arch/mips/cavium-octeon/sync-octeon.c
@@ -23,6 +23,12 @@ static struct clocksource clocksource_mips = {
 	.flags		= CLOCK_SOURCE_IS_CONTINUOUS,
 };
 
+unsigned long long notrace sched_clock(void)
+{
+	return ((u64) read_c0_cvmcount() * clocksource_mips.mult) 
+		>> clocksource_mips.shift;
+}
+
 void __init plat_time_init(void)
 {
 	clocksource_mips.rating = 300;
-- 
1.6.5.2

