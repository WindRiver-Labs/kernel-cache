From b981e0a71ffafa760a0d005352c5f861eb7eab61 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Mon, 15 Nov 2010 14:14:25 +0800
Subject: [PATCH 079/132] MIPS: Octeon: Update detection of broadcast MACs in SRIO L2 emulation.

Any destination MAC with a non zero upper byte needs to be treated
like a broadcast. This means that SRIO needs to duplicate the message
to every device in the system. Switch devices should be ignored.

Signed-off-by: Chad Reese <kreese@caviumnetworks.com>
Signed-off-by: ltian <le.tian@windriver.com>
---
 drivers/net/octeon/ethernet-srio.c |    9 ++++++---
 1 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/drivers/net/octeon/ethernet-srio.c b/drivers/net/octeon/ethernet-srio.c
index 222690f..f09b9b1 100644
--- a/drivers/net/octeon/ethernet-srio.c
+++ b/drivers/net/octeon/ethernet-srio.c
@@ -132,8 +132,8 @@ int cvm_oct_xmit_srio(struct sk_buff *skb, struct net_device *dev)
 	/* Extract the destination MAC address from the packet */
 	dest_mac = *(uint64_t *)skb->data >> 16;
 
-	/* If this is a broadcast we must manually send to everyone */
-	if (dest_mac == 0xffffffffffffull) {
+	/* If this is a broadcast/multicast we must manually send to everyone */
+	if (dest_mac>>40) {
 		struct rio_dev *rdev;
 		struct sk_buff *new_skb;
 
@@ -143,6 +143,9 @@ int cvm_oct_xmit_srio(struct sk_buff *skb, struct net_device *dev)
 			/* Skip devices not on my rio port */
 			if (rdev->net->hport->id != (priv->port&1))
 				continue;
+			/* Skip switches */
+			if (rdev->destid == 0xffff)
+				continue;
 			/* Create a new SKB since each packet will have different data */
 			new_skb = skb_copy(skb, GFP_ATOMIC);
 			if (new_skb) {
@@ -200,7 +203,7 @@ int cvm_oct_srio_init(struct net_device *dev)
 	sa.sa_data[2] = 0;
 	sa.sa_data[3] = 0;
 	sa.sa_data[4] = 0; /* FIXME Device ID */
-	sa.sa_data[5] = priv->port;
+	sa.sa_data[5] = 1;
 
 	dev->netdev_ops->ndo_set_mac_address(dev, &sa);
 	dev->netdev_ops->ndo_change_mtu(dev, dev->mtu);
-- 
1.6.5.2

