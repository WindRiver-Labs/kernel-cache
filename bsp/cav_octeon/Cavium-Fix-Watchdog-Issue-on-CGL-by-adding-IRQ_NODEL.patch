From 3e41d1dd66db86ea6f0cb40e4a4a1cd51f249314 Mon Sep 17 00:00:00 2001
From: Tian Le <le.tian@windriver.com>
Date: Thu, 6 Jan 2011 10:22:36 +0800
Subject: [PATCH 129/132] Cavium: Fix Watchdog Issue on CGL by adding IRQ_NODELAY to IRQ flags

The IRQ handling which feeds the hadware watchdogs periodically
is broken by threaded IRQ in CGL. The IRQ handler is very small
and can complete in just a few instructions, so disable that
IRQ to be threaded by adding IRQ_NODELAY to fix the issue.

Signed-off-by: Tian Le <le.tian@windriver.com>
---
 arch/mips/cavium-octeon/octeon-wdt-main.c |    9 ++++++++-
 1 files changed, 8 insertions(+), 1 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-wdt-main.c b/arch/mips/cavium-octeon/octeon-wdt-main.c
index e3e89af..430004e 100644
--- a/arch/mips/cavium-octeon/octeon-wdt-main.c
+++ b/arch/mips/cavium-octeon/octeon-wdt-main.c
@@ -390,6 +390,7 @@ static void octeon_wdt_setup_interrupt(int cpu)
 	unsigned int core;
 	unsigned int irq;
 	union cvmx_ciu_wdogx ciu_wdog;
+	unsigned long irq_flags;
 
 	core = cpu2core(cpu);
 
@@ -399,10 +400,16 @@ static void octeon_wdt_setup_interrupt(int cpu)
 
 	per_cpu_countdown[cpu] = countdown_reset;
 
+#ifdef  CONFIG_PREEMPT_HARDIRQS
+	irq_flags = IRQF_DISABLED | IRQF_NODELAY;
+#else
+	irq_flags = IRQF_DISABLED;
+#endif
+
 	irq = OCTEON_IRQ_WDOG0 + core;
 
 	if (request_irq(irq, octeon_wdt_poke_irq,
-			IRQF_DISABLED, "octeon_wdt", octeon_wdt_poke_irq))
+			irq_flags, "octeon_wdt", octeon_wdt_poke_irq))
 		panic("octeon_wdt: Couldn't obtain irq %d", irq);
 
 	cpumask_set_cpu(cpu, &irq_enabled_cpus);
-- 
1.6.5.2

