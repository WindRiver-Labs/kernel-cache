From 06faa5e9b5b5dab1d945e98a36c75daf57c9558a Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Mon, 15 Nov 2010 14:46:22 +0800
Subject: [PATCH 112/132] MIPS: Align swapper_pg_dir, invalid_{pmd,pte}_table in linker script.

Source: Cavium SDK 2.0.0-366

Also force swapper_pg_dir to 64K alignment to save an instruction in TLB refill.

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/kernel/vmlinux.lds.S |    8 +++++---
 arch/mips/mm/init.c            |   16 +++++-----------
 2 files changed, 10 insertions(+), 14 deletions(-)

diff --git a/arch/mips/kernel/vmlinux.lds.S b/arch/mips/kernel/vmlinux.lds.S
index f25df73..fa08e33 100644
--- a/arch/mips/kernel/vmlinux.lds.S
+++ b/arch/mips/kernel/vmlinux.lds.S
@@ -109,11 +109,13 @@ SECTIONS
 	}
 
 	PERCPU(PAGE_SIZE)
-	. = ALIGN(PAGE_SIZE);
+	. = ALIGN(0x10000);
 	__init_end = .;
 	/* freed after init ends here */
-
-	BSS_SECTION(0, 0, 0)
+	VMLINUX_SYMBOL(__bss_start) = .;
+	BSS(0x10000)
+	SBSS(0)
+	VMLINUX_SYMBOL(__bss_stop) = .;
 
 	_end = . ;
 
diff --git a/arch/mips/mm/init.c b/arch/mips/mm/init.c
index 20bbf55..79cccfd 100644
--- a/arch/mips/mm/init.c
+++ b/arch/mips/mm/init.c
@@ -471,19 +471,13 @@ void __init_refok free_initmem(void)
 #ifndef CONFIG_MIPS_PGD_C0_CONTEXT
 unsigned long pgd_current[NR_CPUS];
 #endif
-/*
- * On 64-bit we've got three-level pagetables with a slightly
- * different layout ...
- */
-#define __page_aligned(order) __attribute__((__aligned__(PAGE_SIZE<<order)))
 
 /*
- * gcc 3.3 and older have trouble determining that PTRS_PER_PGD and PGD_ORDER
- * are constants.  So we use the variants from asm-offset.h until that gcc
- * will officially be retired.
+ * We align swapper_pg_dir on a 64K boundry, to allow us to load its
+ * address in a single instruction in the TLB refill handler.
  */
-pgd_t swapper_pg_dir[_PTRS_PER_PGD] __page_aligned(_PGD_ORDER);
+pgd_t swapper_pg_dir[_PTRS_PER_PGD] __aligned(0x10000) __attribute__((__section__(".bss.superpage_aligned")));
 #ifndef __PAGETABLE_PMD_FOLDED
-pmd_t invalid_pmd_table[PTRS_PER_PMD] __page_aligned(PMD_ORDER);
+pmd_t invalid_pmd_table[PTRS_PER_PMD] __aligned(PAGE_SIZE) __attribute__((__section__(".bss.page_aligned")));
 #endif
-pte_t invalid_pte_table[PTRS_PER_PTE] __page_aligned(PTE_ORDER);
+pte_t invalid_pte_table[PTRS_PER_PTE]  __aligned(PAGE_SIZE) __attribute__((__section__(".bss.page_aligned")));
-- 
1.6.5.2

