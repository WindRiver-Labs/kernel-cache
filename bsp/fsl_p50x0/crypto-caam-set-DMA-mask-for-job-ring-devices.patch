From 4e1b317105368c99896604cefc7db97185137cc5 Mon Sep 17 00:00:00 2001
From: Kim Phillips <kim.phillips@freescale.com>
Date: Tue, 10 Apr 2012 13:04:22 -0500
Subject: [PATCH 17/23] crypto: caam - set DMA mask for job ring devices

job rings are sub-devices of the main SEC controller device. This is
implemented using of_platform_device_create.  Since
of_platform_device_create does not fill the device DMA ops, attrs, and
mask (in fact it manually assigns coherent_dma_mask to 32-bit), we set
the mask in the driver manually using dma_set_mask.

This fixes a bug on machines with > 4GB memory where a:

kernel BUG at /home/r1aaha/git/linux-devel/drivers/crypto/caam/jr.c:82!

is triggered because the SEC received 0 as its descriptor address.

Signed-off-by: Kim Phillips <kim.phillips@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso ISO image.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/crypto/caam/jr.c |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

diff --git a/drivers/crypto/caam/jr.c b/drivers/crypto/caam/jr.c
index eb2b858..a68eb58 100644
--- a/drivers/crypto/caam/jr.c
+++ b/drivers/crypto/caam/jr.c
@@ -503,6 +503,11 @@ int caam_jr_probe(struct of_device *ofdev, struct device_node *np,
 	dev_set_drvdata(jrdev, jrpriv);
 	ctrlpriv->jrdev[ring] = jrdev;
 
+	if (sizeof(dma_addr_t) == sizeof(u64))
+		dma_set_mask(jrdev, DMA_BIT_MASK(36));
+	else
+		dma_set_mask(jrdev, DMA_BIT_MASK(32));
+
 	/* Identify the interrupt */
 	jrpriv->irq = of_irq_to_resource(np, 0, NULL);
 
-- 
1.7.0

