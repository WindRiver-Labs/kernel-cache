From db86223f58f27f854802d35bfd767e18cd9a076d Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Fri, 10 Sep 2010 13:44:07 +0800
Subject: [PATCH 42/47] nlm_xls_atx_64_be: Increase the largest free memory via CONFIG_FORCE_MAX_ZONEORDER

arch/powerpc/Kconfig:

"The kernel memory allocator divides physically contiguous memory blocks
into "zones", where each zone is a power of two number of pages.  This
option selects the largest power of two that the kernel keeps in the
memory allocator.  If you need to allocate very large blocks of
physically contiguous memory, then you may need to increase this value.

This config option is actually maximum order plus one. For example, a
value of 11 means that the largest free memory block is 2^10 pages."

include/linux/mmzone.h:

 /* Free memory management - zoned buddy allocator.  */
 #ifndef CONFIG_FORCE_MAX_ZONEORDER
 #define MAX_ORDER 11
 #else
 #define MAX_ORDER CONFIG_FORCE_MAX_ZONEORDER
 #endif
 #define MAX_ORDER_NR_PAGES (1 << (MAX_ORDER - 1))

As we can see, the default maximum free available memory is
2^(MAX_ORDER-1) = 2^10 pages. for we have enabled:
CONFIG_PAGE_SIZE_4KB=y, 2^10 pages = 2^10 * 4k = 4M.

But the driver/net/phoenix_user_mac.c tries to allocate 8M memory one
time.

 #define PHNX_USER_MAC_SIZE            0x800000

Therefore, the kernel prints the warning:

------------[ cut here ]------------
WARNING: at mm/page_alloc.c:1853 __alloc_pages_nodemask+0x5f4/0x720()
Modules linked in:
Call Trace:
[<ffffffff8340bb1c>] dump_stack+0x8/0x34
[<ffffffff83458410>] warn_slowpath_common+0x70/0x98
[<ffffffff834e9a4c>] __alloc_pages_nodemask+0x5f4/0x720
[<ffffffff834e9b90>] __get_free_pages+0x18/0x68
[<ffffffff83525de0>] __kmalloc+0x1f0/0x280
[<ffffffff83b30968>] ___alloc_bootmem_nopanic+0x60/0x124
[<ffffffff83b30a40>] ___alloc_bootmem+0x14/0x44
[<ffffffff837dd410>] user_mac_mem+0x18/0x38
[<ffffffff83b3c194>] console_init+0x30/0x50
[<ffffffff83b23ac4>] start_kernel+0x300/0x4a0

---[ end trace f65be78721acb4e2 ]---

So, To fix it, we need to get a bigger CONFIG_FORCE_MAX_ZONEORDER.

For CONFIG_PAGE_SIZE_4KB=y, page size = 4 * 1024 = 2^(2+10)
The maximum free memory we need: 8M = 8 * 1024 * 1024 = 2^(3+20)

CONFIG_FORCE_MAX_ZONEORDER should at least be (3+20-2-10)+1 = 12

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 arch/mips/Kconfig |   15 +++++++++++++++
 1 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index ab62f55..7098939 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -1606,6 +1606,21 @@ config PAGE_SIZE_64KB
 
 endchoice
 
+config FORCE_MAX_ZONEORDER
+	int "Maximum zone order"
+	default "12" if RMI_PTR
+	default "11"
+	  help
+	  The kernel memory allocator divides physically contiguous memory
+	  blocks into "zones", where each zone is a power of two number of
+	  pages.  This option selects the largest power of two that the kernel
+	  keeps in the memory allocator.  If you need to allocate very large
+	  blocks of physically contiguous memory, then you may need to
+	  increase this value.
+
+	  This config option is actually maximum order plus one. For example,
+	  a value of 11 means that the largest free memory block is 2^10 pages.
+
 config BOARD_SCACHE
 	bool
 
-- 
1.7.0.4

