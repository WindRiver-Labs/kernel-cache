From 55f92edf25462d05dff71e46c2fa25ab63796793 Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Thu, 28 Apr 2011 10:06:21 +0800
Subject: [PATCH] nlm_xlr_atx_64_be: Disable unaligned access by default

XLR processor allow the CPU to issue and complete unaligned load/store
operations without generating an exception. With this feature, the unaligned
access may get wrong result in some cases. So disable this feature by
default before the CPU vendor release official resolution.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 arch/mips/kernel/traps.c |    9 +++++++++
 arch/mips/rmi/Kconfig    |    7 +++++++
 2 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c
index a9ca517..56cca27 100644
--- a/arch/mips/kernel/traps.c
+++ b/arch/mips/kernel/traps.c
@@ -52,6 +52,7 @@
 #include <asm/stacktrace.h>
 #include <asm/irq.h>
 #include <asm/uasm.h>
+#include <asm/rmi/mips-exts.h>
 
 /*
  * Also used in unaligned.c and fault.c.
@@ -1480,6 +1481,14 @@ void __cpuinit native_per_cpu_trap_init(void)
 		secondaryTC = 1;
 #endif /* CONFIG_MIPS_MT_SMTC */
 
+#ifdef CONFIG_RMI_PHOENIX
+#ifndef CONFIG_RMI_PHOENIX_UNALIGNED_ACCESS_ENABLED
+#define RMI_UNALIGNACCEN_BIT (0x4000UL)
+	write_64bit_phnx_ctrl_reg(CPU_BLOCKID_LSU, 0,
+		(read_64bit_phnx_ctrl_reg(CPU_BLOCKID_LSU, 0) & ~(RMI_UNALIGNACCEN_BIT)));
+#endif /* CONFIG_RMI_PHOENIX_UNALIGNED_ACCESS_ENABLED */
+#endif /* CONFIG_RMI_PHOENIX */
+
 #ifdef CONFIG_32BIT
 	/* Some firmware leaves the BEV flag set, clear it. */
 	clear_c0_status(ST0_CU1|ST0_CU2|ST0_CU3|ST0_BEV|ST0_KX);
diff --git a/arch/mips/rmi/Kconfig b/arch/mips/rmi/Kconfig
index b869c91..7a30423 100644
--- a/arch/mips/rmi/Kconfig
+++ b/arch/mips/rmi/Kconfig
@@ -70,6 +70,13 @@ config PHOENIX_IP_QUEUE_AFFINITY
 
 		If in doubt, say N.
 
+config RMI_PHOENIX_UNALIGNED_ACCESS_ENABLED
+	bool "Enable Unaligned Access"
+	depends on  RMI_PHOENIX
+	default n
+	help
+	  The XLR processor allow the CPU to issue and complete unaligned load/store
+	  operations without generating an exception
 
 config RMI_PHOENIX_LOAD_ADDRESS
 	hex "RMI Linux kernel start address"
-- 
1.6.5.2

