From 4c5a88a7339f8ca4967f80535560bd37488e3dbf Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Fri, 24 Dec 2010 11:30:15 +0800
Subject: [PATCH 28/47] nlm_xlr_atx_64_be: add NOR flash support

This patch exports the partitions of the NOR flash on XLR732 based
ATX-I/II boards.

Most importantly, the CGL enhancement(fallback & bootcycle limitation)
need to read the main environment vairables and backup them, the related
partitions should be exported to user-space. For safety, the main
partition should be read-only.

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 arch/mips/rmi/phoenix/platform.c |   91 ++++++++++++++++++++++++++++++++++++++
 1 files changed, 91 insertions(+), 0 deletions(-)

diff --git a/arch/mips/rmi/phoenix/platform.c b/arch/mips/rmi/phoenix/platform.c
index b59c868..90efbfb 100644
--- a/arch/mips/rmi/phoenix/platform.c
+++ b/arch/mips/rmi/phoenix/platform.c
@@ -7,6 +7,10 @@
  * Author: Wu Zhangjin <zhangjin.wu@windriver.com>
  */
 
+#include <linux/platform_device.h>
+#include <linux/mtd/partitions.h>
+#include <linux/mtd/physmap.h>
+
 #include <linux/i2c.h>
 
 static struct i2c_board_info rmi_i2c_info[] __initdata = {
@@ -18,6 +22,87 @@ static struct i2c_board_info rmi_i2c_info[] __initdata = {
 	},
 };
 
+/*
+ * FLASH
+ *
+ * 0x00000000-0x0001ffff : "First Stage Bootloader(RO)"
+ * 0x00020000-0x0031ffff : "Main RMI Bootloader(RO)"
+ * 0x003e0000-0x003fffff : "Main Env(RO)"
+ * 0x00420000-0x0071ffff : "Backup RMI Bootloader(RW)"
+ * 0x007c0000-0x007dffff : "Backup Env(RW)"
+ * 0x00800000-0x00ffffff : "User FS(RW)"
+ *
+ * Reference: RMI SDK 1.7
+ *    1. The address of main/backup bootloader
+ *    CD1/RMI-bootloader-1.7-0.tgz/src/boot1_75/main_logic.c: main()
+ *    2. The address of main/backup env vars
+ *    After issuing saveenv command, the address will be printed.
+ */
+static struct mtd_partition rmi_mtd_partitions[] = {
+	{
+		.name	= "First Stage Bootloader(RO)",
+		.offset	= 0,
+		.size	= 0x20000,
+		.mask_flags = MTD_WRITEABLE,
+	},
+	{
+		.name	= "Main RMI Bootloader(RO)",
+		.offset	= 0x20000,	/* From 1st block, 24 blocks */
+		.size	= 0x300000,
+		.mask_flags = MTD_WRITEABLE,
+	},
+	{
+		.name	= "Main env vars(RO)",
+		.offset	= 0x3e0000,
+		.size	= 0x20000,
+		.mask_flags = MTD_WRITEABLE,
+	},
+	{
+		.name	= "Backup RMI Bootloader(RW)",
+		.offset	= 0x420000,	/* From 33rd block, 24 blocks */
+		.size	= 0x300000,
+	},
+	{
+		.name	= "Backup env vars(RW)",
+		.offset	= 0x7c0000,
+		.size	= 0x20000,
+	},
+	{
+		.name	= "User FS(RW)",
+		.offset	= 0x800000,
+		.size	= MTDPART_SIZ_FULL,
+	},
+};
+
+#define BOARD_FLASH_SIZE 0x01000000 /* 16MB */
+#define BOARD_FLASH_BASE 0x1c000000
+#define BOARD_FLASH_WIDTH 2 /* 16-bits */
+
+static struct physmap_flash_data rmi_flash_data = {
+	.width		= BOARD_FLASH_WIDTH,
+	.nr_parts	= ARRAY_SIZE(rmi_mtd_partitions),
+	.parts		= rmi_mtd_partitions,
+};
+
+static struct resource rmi_mtd_resource = {
+	.start	= BOARD_FLASH_BASE,
+	.end	= BOARD_FLASH_BASE + BOARD_FLASH_SIZE - 1,
+	.flags	= IORESOURCE_MEM,
+};
+
+static struct platform_device rmi_mtd_device = {
+	.name		= "physmap-flash",
+	.dev		= {
+		.platform_data	= &rmi_flash_data,
+	},
+	.num_resources	= 1,
+	.resource	= &rmi_mtd_resource,
+};
+
+static struct platform_device *rmi_mtd_devices[] __initdata = {
+	&rmi_mtd_device,
+};
+
 int xlr_platform_init(void)
 {
 	int err;
@@ -30,6 +115,12 @@ int xlr_platform_init(void)
 	if (err < 0)
 		pr_err("phoenix-i2c: cannot register board I2C devices\n");
 
+	pr_info("Register phoenix mtd devices\n");
+	err = platform_add_devices(rmi_mtd_devices, ARRAY_SIZE(rmi_mtd_devices));
+
+	if (err < 0)
+		pr_err("phoenix-mtd: cannot register board mtd devices\n");
+
 	return err;
 }
 
-- 
1.7.0.4

