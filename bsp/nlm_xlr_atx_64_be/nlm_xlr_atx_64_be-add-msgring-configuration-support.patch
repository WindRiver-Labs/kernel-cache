From 63b2731e988c2093ba8c0de36cf70d0172eea1d2 Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Wed, 8 Dec 2010 11:12:44 +0800
Subject: [PATCH 37/47] nlm_xlr_atx_64_be: add msgring configuration support

Extracted from RMI SDK 1.7.0.

This allows the users to write a msgring.cfg to generate a msgring.c.

Since the msgring.c can be generated dynamically, the old static
msgring.c can be removed now.

[ Zhangjin: adds a separated directory for this support ]

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 arch/mips/Makefile                                |    4 +
 arch/mips/rmi/phoenix/Makefile                    |    2 +-
 arch/mips/rmi/phoenix/msgring.c                   |  348 ------
 arch/mips/rmi/phoenix/msgring/Makefile            |   24 +
 arch/mips/rmi/phoenix/msgring/msgring.cfg         | 1280 ++++++++++++++++++++
 arch/mips/rmi/phoenix/msgring/msgring.l           |   43 +
 arch/mips/rmi/phoenix/msgring/msgring.y           |  542 +++++++++
 arch/mips/rmi/phoenix/msgring/msgring_ike.cfg     | 1258 ++++++++++++++++++++
 arch/mips/rmi/phoenix/msgring/msgring_openssl.cfg | 1311 +++++++++++++++++++++
 arch/mips/rmi/phoenix/msgring/msgring_shared.cfg  |  487 ++++++++
 arch/mips/rmi/phoenix/msgring/msgring_xls.cfg     |  587 +++++++++
 11 files changed, 5537 insertions(+), 349 deletions(-)
 delete mode 100644 arch/mips/rmi/phoenix/msgring.c
 create mode 100644 arch/mips/rmi/phoenix/msgring/Makefile
 create mode 100644 arch/mips/rmi/phoenix/msgring/msgring.cfg
 create mode 100644 arch/mips/rmi/phoenix/msgring/msgring.l
 create mode 100644 arch/mips/rmi/phoenix/msgring/msgring.y
 create mode 100644 arch/mips/rmi/phoenix/msgring/msgring_ike.cfg
 create mode 100644 arch/mips/rmi/phoenix/msgring/msgring_openssl.cfg
 create mode 100644 arch/mips/rmi/phoenix/msgring/msgring_shared.cfg
 create mode 100644 arch/mips/rmi/phoenix/msgring/msgring_xls.cfg

diff --git a/arch/mips/Makefile b/arch/mips/Makefile
index a49a3d1..8c2ca9d 100644
--- a/arch/mips/Makefile
+++ b/arch/mips/Makefile
@@ -792,6 +792,10 @@ ifdef CONFIG_MIPS32_O32
 	@echo '  Checking missing-syscalls for O32'
 	$(Q)$(MAKE) $(build)=. missing-syscalls EXTRA_CFLAGS="-mabi=32"
 endif
+ifdef CONFIG_RMI_PHOENIX
+	@echo ' Building message ring configuration'
+	$(MAKE) -C  $(srctree)/arch/mips/rmi/phoenix/msgring
+endif
 
 install:
 	$(Q)install -D -m 755 vmlinux $(INSTALL_PATH)/vmlinux-$(KERNELRELEASE)
diff --git a/arch/mips/rmi/phoenix/Makefile b/arch/mips/rmi/phoenix/Makefile
index 9e10b7f..7d81452 100644
--- a/arch/mips/rmi/phoenix/Makefile
+++ b/arch/mips/rmi/phoenix/Makefile
@@ -1,4 +1,4 @@
-obj-y := irq.o cpu.o time.o memory.o on_chip.o msgring.o platform.o
+obj-y := irq.o cpu.o time.o memory.o on_chip.o platform.o msgring/msgring.o 
 
 obj-$(CONFIG_SMP) += smp.o
 
diff --git a/arch/mips/rmi/phoenix/msgring.c b/arch/mips/rmi/phoenix/msgring.c
deleted file mode 100644
index deea8a3..0000000
--- a/arch/mips/rmi/phoenix/msgring.c
+++ /dev/null
@@ -1,348 +0,0 @@
-/*********************************************************************
- *
- * Copyright 2003-2010 Raza Microelectronics, Inc. (RMI). All rights
- * reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- * 1. Redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in
- * the documentation and/or other materials provided with the
- * distribution.
- *
- * THIS SOFTWARE IS PROVIDED BY Raza Microelectronics, Inc. ``AS IS'' AND
- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
- * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RMI OR CONTRIBUTORS BE LIABLE
- * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR PROFITS, OR BUSINESS
- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
- * THE POSSIBILITY OF SUCH DAMAGE.
- *
- * *****************************RMI_2**********************************/
-
-/**********************************************************
- * -----------------DO NOT EDIT THIS FILE------------------
- * This file has been autogenerated by the build process
- * from "msgring.cfg"
- **********************************************************/
-
-
-
-#include <asm/rmi/msgring.h>
-#include <linux/module.h>
-
-struct bucket_size bucket_sizes = {
-	{32, 32, 32, 32, 32, 32, 32, 32,
-	 32, 32, 32, 32, 32, 32, 32, 32,
-	 32, 32, 32, 32, 32, 32, 32, 32,
-	 32, 32, 32, 32, 32, 32, 32, 32,
-	 32, 32, 32, 32, 32, 32, 32, 32,
-	 32, 32, 32, 32, 32, 32, 32, 32,
-	 32, 32, 32, 32, 32, 32, 32, 32,
-	 32, 32, 32, 32, 32, 32, 32, 32,
-	 32, 16, 16, 16, 16, 16, 16, 16,
-	 16, 16, 16, 16, 16, 16, 16, 0,
-	 32, 16, 16, 16, 16, 16, 16, 16,
-	 16, 16, 16, 16, 16, 16, 16, 0,
-	 0, 32, 32, 32, 32, 32, 0, 32,
-	 64, 64, 64, 64, 0, 0, 0, 0,
-	 0, 32, 0, 32, 0, 0, 0, 0,
-	 128, 0, 0, 0, 128, 0, 0, 0,
-	 }
-};
-
-EXPORT_SYMBOL(bucket_sizes);
-
-struct stn_cc cc_table_cpu_0 = { {
-				  {1, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 4, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {0, 2, 4, 4, 4, 4, 0, 2},
-				  {8, 8, 8, 8, 0, 0, 0, 0},
-				  {0, 2, 0, 2, 0, 0, 0, 0},
-				  {16, 0, 0, 0, 16, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_cpu_0);
-
-struct stn_cc cc_table_cpu_1 = { {
-				  {1, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {0, 2, 4, 4, 4, 4, 0, 2},
-				  {8, 8, 8, 8, 0, 0, 0, 0},
-				  {0, 2, 0, 2, 0, 0, 0, 0},
-				  {16, 0, 0, 0, 16, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_cpu_1);
-
-struct stn_cc cc_table_cpu_2 = { {
-				  {1, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {0, 4, 4, 4, 4, 4, 0, 4},
-				  {8, 8, 8, 8, 0, 0, 0, 0},
-				  {0, 2, 0, 2, 0, 0, 0, 0},
-				  {16, 0, 0, 0, 16, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_cpu_2);
-
-struct stn_cc cc_table_cpu_3 = { {
-				  {1, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {0, 4, 4, 4, 4, 4, 0, 4},
-				  {8, 8, 8, 8, 0, 0, 0, 0},
-				  {0, 2, 0, 2, 0, 0, 0, 0},
-				  {16, 0, 0, 0, 16, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_cpu_3);
-
-struct stn_cc cc_table_cpu_4 = { {
-				  {1, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {0, 4, 4, 4, 4, 4, 0, 4},
-				  {8, 8, 8, 8, 0, 0, 0, 0},
-				  {0, 4, 0, 4, 0, 0, 0, 0},
-				  {16, 0, 0, 0, 16, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_cpu_4);
-
-struct stn_cc cc_table_cpu_5 = { {
-				  {1, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {0, 4, 4, 4, 4, 4, 0, 4},
-				  {8, 8, 8, 8, 0, 0, 0, 0},
-				  {0, 4, 0, 4, 0, 0, 0, 0},
-				  {16, 0, 0, 0, 16, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_cpu_5);
-
-struct stn_cc cc_table_cpu_6 = { {
-				  {1, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {0, 4, 4, 4, 4, 4, 0, 4},
-				  {8, 8, 8, 8, 0, 0, 0, 0},
-				  {0, 4, 0, 4, 0, 0, 0, 0},
-				  {16, 0, 0, 0, 16, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_cpu_6);
-
-struct stn_cc cc_table_cpu_7 = { {
-				  {1, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {4, 2, 2, 2, 2, 2, 2, 2},
-				  {2, 2, 2, 2, 2, 2, 2, 0},
-				  {0, 4, 4, 4, 4, 4, 0, 4},
-				  {8, 8, 8, 8, 0, 0, 0, 0},
-				  {0, 4, 0, 4, 0, 0, 0, 0},
-				  {16, 0, 0, 0, 16, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_cpu_7);
-
-struct stn_cc cc_table_xgs_0 = { {
-				  {4, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 6, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 4, 0, 4, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_xgs_0);
-
-struct stn_cc cc_table_xgs_1 = { {
-				  {4, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 6, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {6, 8, 8, 8, 8, 8, 8, 8},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  {0, 4, 0, 4, 0, 0, 0, 0},
-				  {0, 0, 0, 0, 0, 0, 0, 0},
-				  }
-};
-
-EXPORT_SYMBOL(cc_table_xgs_1);
-
-struct stn_cc cc_table_gmac = { {
-				 {4, 8, 8, 8, 8, 8, 8, 8},
-				 {8, 8, 8, 8, 8, 8, 8, 8},
-				 {8, 8, 8, 8, 8, 8, 8, 8},
-				 {8, 8, 8, 8, 8, 8, 8, 8},
-				 {8, 8, 8, 8, 8, 8, 8, 8},
-				 {8, 8, 8, 8, 8, 8, 8, 8},
-				 {8, 8, 8, 8, 8, 8, 8, 8},
-				 {8, 8, 8, 8, 8, 8, 8, 8},
-				 {0, 0, 0, 0, 0, 0, 0, 0},
-				 {0, 0, 0, 0, 0, 0, 0, 0},
-				 {0, 0, 0, 0, 0, 0, 0, 0},
-				 {0, 0, 0, 0, 0, 0, 0, 0},
-				 {0, 4, 0, 0, 0, 0, 0, 4},
-				 {0, 0, 0, 0, 0, 0, 0, 0},
-				 {0, 0, 0, 0, 0, 0, 0, 0},
-				 {0, 0, 0, 0, 0, 0, 0, 0},
-				 }
-};
-
-EXPORT_SYMBOL(cc_table_gmac);
-
-struct stn_cc cc_table_dma = { {
-				{4, 0, 0, 0, 0, 0, 0, 0},
-				{4, 0, 0, 0, 0, 0, 0, 0},
-				{4, 0, 0, 0, 0, 0, 0, 0},
-				{4, 0, 0, 0, 0, 0, 0, 0},
-				{4, 0, 0, 0, 0, 0, 0, 0},
-				{4, 0, 0, 0, 0, 0, 0, 0},
-				{4, 0, 0, 0, 0, 0, 0, 0},
-				{4, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				}
-};
-
-EXPORT_SYMBOL(cc_table_dma);
-
-struct stn_cc cc_table_sec = { {
-				{8, 8, 8, 8, 8, 8, 8, 8},
-				{8, 8, 8, 8, 8, 8, 8, 8},
-				{8, 8, 8, 8, 8, 8, 8, 8},
-				{8, 8, 8, 8, 8, 8, 8, 8},
-				{8, 8, 8, 8, 8, 8, 8, 8},
-				{8, 8, 8, 8, 8, 8, 8, 8},
-				{8, 8, 8, 8, 8, 8, 8, 8},
-				{8, 8, 8, 8, 8, 8, 8, 8},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				{0, 0, 0, 0, 0, 0, 0, 0},
-				}
-};
-
-EXPORT_SYMBOL(cc_table_sec);
diff --git a/arch/mips/rmi/phoenix/msgring/Makefile b/arch/mips/rmi/phoenix/msgring/Makefile
new file mode 100644
index 0000000..9e195d4
--- /dev/null
+++ b/arch/mips/rmi/phoenix/msgring/Makefile
@@ -0,0 +1,24 @@
+ifeq ($(objtree),)
+objtree := ../../../../../
+endif
+
+include $(objtree)/.config
+
+MSGRNG_CFG = msgring.cfg
+
+MSGRNG_OUT_DIR = $(objtree)/arch/mips/rmi/phoenix/msgring
+
+MSGRNG_CFG_C = $(MSGRNG_OUT_DIR)/$(patsubst %.cfg,%.c,$(MSGRNG_CFG))
+
+#all: msgring.l msgring.y msgring.cfg
+all: $(MSGRNG_CFG_C)
+
+$(MSGRNG_CFG_C): msgring.l msgring.y $(MSGRNG_CFG)
+	mkdir -p $(MSGRNG_OUT_DIR)
+	flex -o$(MSGRNG_OUT_DIR)/msgring.lex.c msgring.l
+	bison -d -o$(MSGRNG_OUT_DIR)/msgring.yacc.c  msgring.y
+	gcc -g3 $(MSGRNG_OUT_DIR)/msgring.lex.c $(MSGRNG_OUT_DIR)/msgring.yacc.c -o $(MSGRNG_OUT_DIR)/msgring
+	$(MSGRNG_OUT_DIR)/msgring -i $(MSGRNG_CFG) -o $(MSGRNG_CFG_C)
+
+clean:
+	$(RM) $(MSGRNG_OUT_DIR)/msgring.lex.c $(MSGRNG_OUT_DIR)/msgring.yacc.c $(MSGRNG_OUT_DIR)/msgring.yacc.h $(MSGRNG_OUT_DIR)/msgring
diff --git a/arch/mips/rmi/phoenix/msgring/msgring.cfg b/arch/mips/rmi/phoenix/msgring/msgring.cfg
new file mode 100644
index 0000000..9680d51
--- /dev/null
+++ b/arch/mips/rmi/phoenix/msgring/msgring.cfg
@@ -0,0 +1,1280 @@
+/*********************************************************************
+ *
+ * Copyright 2003-2006 Raza Microelectronics, Inc. (RMI). All rights
+ * reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in
+ * the documentation and/or other materials provided with the
+ * distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Raza Microelectronics, Inc. ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RMI OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR PROFITS, OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * *****************************RMI_2**********************************/
+
+
+/* 
+ * This file defines the message ring configuration for phoenix-8. It tries to allow 
+ * many different point-point communications between the message stations on the message ring
+ * and as result is _not_ the best configuration for performance
+ *
+ * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
+ * security engine and the general purpose DMA engines. It provides a high bandwidth,
+ * low latency communication links. On traditional processors, this communication goes through
+ * which inherently does not scale very well with increasing number of cpus. 
+ * 
+ * Message ring has an in-built flow control mechanism. Every agent/station on the ring has to
+ * have software configured credits to send messages to any agent. Every receiving agent on the
+ * ring has a 256 entry FIFO that can divided into "buckets". All addressing on the ring is 
+ * in terms of buckets. There are a total 128 buckets on the ring. The total number of credits 
+ * across all sending agents should not exceed the bucket size. 
+ *
+ * Below are the receiving agents and the max number of buckets they can have
+ * 	CPU 0	: 8 buckets
+ * 	CPU 1	: 8 buckets
+ * 	CPU 2	: 8 buckets
+ * 	CPU 3	: 8 buckets
+ * 	CPU 4	: 8 buckets
+ * 	CPU 5	: 8 buckets
+ * 	CPU 6	: 8 buckets
+ * 	CPU 7	: 8 buckets
+ * 
+ * 	XGMAC 0 / SPI4 0
+ *			 TX	:	16 buckets
+ *			 FREE	:	2  buckets
+ * 	XGMAC 1 / SPI4 1
+ *			 TX	:	16 buckets
+ *			 FREE	:	2  buckets
+ * 
+ *	GMAC	: 8 buckets	
+ *	
+ *	SEC	: 8 buckets
+ * 
+ *	DMA	: 8 buckets
+ *
+ * The bucket size of a bucket should be aligned to the bucket's starting index in that
+ * receiving station's FIFO. For example, if sizes of bucket0 and bucket1 of a station 
+ * are 32 and 32, bucket2's size has to be 64. bucket size 0 is valid.
+ *
+ * The format of the file is pretty straight forward. Each bucket definition has the size
+ * and the list of sending agents to that bucket with the number of credits to send.
+ * 
+ * Undefined buckets have a size of 0 and Tx stations have 0 credits to send to that bucket.
+ *
+ *  Following are the currently supported bucket names
+ *  cpu_0_0
+ *  cpu_0_1
+ *  cpu_0_2
+ *  cpu_0_3
+ *  cpu_0_4
+ *  cpu_0_5
+ *  cpu_0_6
+ *  cpu_0_7
+ *  
+ *  cpu_1_0
+ *  cpu_1_1
+ *  cpu_1_2
+ *  cpu_1_3
+ *  cpu_1_4
+ *  cpu_1_5
+ *  cpu_1_6
+ *  cpu_1_7
+ *  
+ *  cpu_2_0
+ *  cpu_2_1
+ *  cpu_2_2
+ *  cpu_2_3
+ *  cpu_2_4
+ *  cpu_2_5
+ *  cpu_2_6
+ *  cpu_2_7
+ *  
+ *  cpu_3_0
+ *  cpu_3_1
+ *  cpu_3_2
+ *  cpu_3_3
+ *  cpu_3_4
+ *  cpu_3_5
+ *  cpu_3_6
+ *  cpu_3_7
+ *  
+ *  cpu_4_0
+ *  cpu_4_1
+ *  cpu_4_2
+ *  cpu_4_3
+ *  cpu_4_4
+ *  cpu_4_5
+ *  cpu_4_6
+ *  cpu_4_7
+ *  
+ *  cpu_5_0
+ *  cpu_5_1
+ *  cpu_5_2
+ *  cpu_5_3
+ *  cpu_5_4
+ *  cpu_5_5
+ *  cpu_5_6
+ *  cpu_5_7
+ *  
+ *  cpu_6_0
+ *  cpu_6_1
+ *  cpu_6_2
+ *  cpu_6_3
+ *  cpu_6_4
+ *  cpu_6_5
+ *  cpu_6_6
+ *  cpu_6_7
+ *  
+ *  cpu_7_0
+ *  cpu_7_1
+ *  cpu_7_2
+ *  cpu_7_3
+ *  cpu_7_4
+ *  cpu_7_5
+ *  cpu_7_6
+ *  cpu_7_7
+ *
+ *  xgs_0_tx_0
+ *  xgs_0_tx_1
+ *  xgs_0_tx_2
+ *  xgs_0_tx_3
+ *  xgs_0_tx_4
+ *  xgs_0_tx_5
+ *  xgs_0_tx_6
+ *  xgs_0_tx_7
+ *  xgs_0_tx_8
+ *  xgs_0_tx_9
+ *  xgs_0_tx_10
+ *  xgs_0_tx_11
+ *  xgs_0_tx_12
+ *  xgs_0_tx_13
+ *  xgs_0_tx_14
+ *  xgs_0_tx_15
+ *
+ *  xgs_1_tx_0
+ *  xgs_1_tx_1
+ *  xgs_1_tx_2
+ *  xgs_1_tx_3
+ *  xgs_1_tx_4
+ *  xgs_1_tx_5
+ *  xgs_1_tx_6
+ *  xgs_1_tx_7
+ *  xgs_1_tx_8
+ *  xgs_1_tx_9
+ *  xgs_1_tx_10
+ *  xgs_1_tx_11
+ *  xgs_1_tx_12
+ *  xgs_1_tx_13
+ *  xgs_1_tx_14
+ *  xgs_1_tx_15
+ *
+ *  gmac_rsvd_0
+ *  gmac_rfr_0
+ *  gmac_tx_0
+ *  gmac_tx_1
+ *  gmac_tx_2
+ *  gmac_tx_3
+ *  gmac_rsvd_1
+ *  gmac_rfr_1
+ *
+ *  xgs_0_rsvd
+ *  xgs_0_rfr
+ *
+ *  xgs_1_rsvd
+ *  xgs_1_rfr
+ *
+ *  sec_pipe_0
+ *  sec_pipe_1
+ *  sec_pipe_2
+ *  sec_pipe_3
+ *  sec_rsa
+ *
+ * Following are the currently supported Tx Agent/Station names
+ *
+ *   tx_stn_cpu_0
+ *  tx_stn_cpu_1
+ *  tx_stn_cpu_2
+ *  tx_stn_cpu_3
+ *  tx_stn_cpu_4
+ *  tx_stn_cpu_5
+ *  tx_stn_cpu_6
+ *  tx_stn_cpu_7
+ *
+ *   tx_stn_xgs_0
+ *  tx_stn_xgs_1
+ *
+ *   tx_stn_gmac
+ *
+ *   tx_stn_dma
+ *
+ *   tx_stn_sec
+ *
+ *
+ * 
+ */
+
+/*************************************************************/
+// CPU_0 Message Station 
+
+bucket "cpu_0_0" { 
+	size 32;
+	"tx_stn_xgs_0" 4;
+	"tx_stn_xgs_1" 4;
+	"tx_stn_gmac" 4;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cpu_0" 1;
+        "tx_stn_cpu_1" 1; /* NEEDED BY RMIOS IPSEC */
+        "tx_stn_cpu_2" 1;
+        "tx_stn_cpu_3" 1;
+        "tx_stn_cpu_4" 1;
+        "tx_stn_cpu_5" 1;
+        "tx_stn_cpu_6" 1;
+        "tx_stn_cpu_7" 1;
+}
+bucket "cpu_0_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_0_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_0_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_0_4" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec" 8;
+}
+bucket "cpu_0_5" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec" 8;
+}
+bucket "cpu_0_6" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec" 8;
+}
+bucket "cpu_0_7" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec" 8;
+}
+
+/*************************************************************/
+// CPU_1 Message Station 
+
+bucket "cpu_1_0" { 
+	size 32;
+	"tx_stn_xgs_0" 6;
+	"tx_stn_xgs_1" 6;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_1_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_1_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_1_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 6;
+	"tx_stn_xgs_1" 6;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+    "tx_stn_cpu_0" 4; /* NEEDED BY RMIOS IPSEC */
+}
+bucket "cpu_1_4" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_1_5" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_1_6" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_1_7" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+
+/*************************************************************/
+// CPU_2 Message Station 
+
+bucket "cpu_2_0" { 
+	size 32;
+	"tx_stn_xgs_0" 6;
+	"tx_stn_xgs_1" 6;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_2_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_2_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_2_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_2_4" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_2_5" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_2_6" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_2_7" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+
+/*************************************************************/
+// CPU_3 Message Station 
+
+bucket "cpu_3_0" { 
+	size 32;
+	"tx_stn_xgs_0" 6;
+	"tx_stn_xgs_1" 6;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_3_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_3_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_3_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_3_4" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_3_5" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_3_6" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_3_7" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+
+/*************************************************************/
+// CPU_4 Message Station 
+
+bucket "cpu_4_0" { 
+	size 32;
+	"tx_stn_xgs_0" 6;
+	"tx_stn_xgs_1" 6;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_4_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_4_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_4_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_4_4" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_4_5" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_4_6" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_4_7" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+
+/*************************************************************/
+// CPU_5 Message Station 
+
+bucket "cpu_5_0" { 
+	size 32;
+	"tx_stn_xgs_0" 6;
+	"tx_stn_xgs_1" 6;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_5_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_5_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_5_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_5_4" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_5_5" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_5_6" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_5_7" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+
+
+/*************************************************************/
+// CPU_6 Message Station 
+
+bucket "cpu_6_0" { 
+	size 32;
+	"tx_stn_xgs_0" 6;
+	"tx_stn_xgs_1" 6;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_6_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_6_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_6_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_6_4" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_6_5" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_6_6" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_6_7" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+
+
+/*************************************************************/
+// CPU_7 Message Station 
+
+bucket "cpu_7_0" { 
+	size 32;
+	"tx_stn_xgs_0" 6;
+	"tx_stn_xgs_1" 6;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_7_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_7_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_7_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_7_4" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_7_5" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_7_6" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_7_7" {
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_sec"  8;
+}
+
+
+/*************************************************************/
+// GMAC Message Station 
+
+bucket "gmac_rfr_0" {
+	size 32;
+	"tx_stn_cpu_0" 2;
+	"tx_stn_cpu_1" 2;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+	"tx_stn_gmac" 4;
+}
+
+bucket "gmac_tx_0" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_1" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_2" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_3" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_rfr_1" {
+	size 32;
+	"tx_stn_cpu_0" 2;
+	"tx_stn_cpu_1" 2;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+	"tx_stn_gmac" 4;
+}
+/*********************************************/
+// xgmac
+bucket "xgs_0_rfr" {
+    size 32;
+    "tx_stn_cpu_0" 2;
+    "tx_stn_cpu_1" 2;
+    "tx_stn_cpu_2" 2;
+    "tx_stn_cpu_3" 2;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+    "tx_stn_xgs_0" 4;
+    "tx_stn_xgs_1" 4;
+}
+
+bucket "xgs_0_tx_0" {
+    size 32;
+    "tx_stn_cpu_0" 4;
+    "tx_stn_cpu_1" 4;
+    "tx_stn_cpu_2" 4;
+    "tx_stn_cpu_3" 4;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+}
+
+bucket "xgs_0_tx_1" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_2" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_3" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_4" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+bucket "xgs_0_tx_5" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_6" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_7" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_8" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_9" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_10" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_0_tx_11" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_12" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_13" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_14" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_rfr" {
+    size 32;
+    "tx_stn_cpu_0" 2;
+    "tx_stn_cpu_1" 2;
+    "tx_stn_cpu_2" 2;
+    "tx_stn_cpu_3" 2;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+    "tx_stn_xgs_0" 4;
+    "tx_stn_xgs_1" 4;
+}
+
+bucket "xgs_1_tx_0" {
+    size 32;
+    "tx_stn_cpu_0" 4;
+    "tx_stn_cpu_1" 4;
+    "tx_stn_cpu_2" 4;
+    "tx_stn_cpu_3" 4;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+}
+
+
+bucket "xgs_1_tx_1" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_2" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_3" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_4" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_5" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_6" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_7" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_tx_8" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_tx_9" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_tx_10" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_11" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_12" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_13" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_14" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+
+
+
+
+/*************************************************************/
+// Security Message Station 
+
+bucket "sec_pipe_0" {
+        size 128;
+        "tx_stn_cpu_0" 16;
+        "tx_stn_cpu_1" 16;
+        "tx_stn_cpu_2" 16;
+        "tx_stn_cpu_3" 16;
+        "tx_stn_cpu_4" 16;
+        "tx_stn_cpu_5" 16;
+        "tx_stn_cpu_6" 16;
+        "tx_stn_cpu_7" 16;
+}
+
+bucket "sec_rsa" {
+        size 128;
+        "tx_stn_cpu_0" 16;
+        "tx_stn_cpu_1" 16;
+        "tx_stn_cpu_2" 16;
+        "tx_stn_cpu_3" 16;
+        "tx_stn_cpu_4" 16;
+        "tx_stn_cpu_5" 16;
+        "tx_stn_cpu_6" 16;
+        "tx_stn_cpu_7" 16;
+}
+
+bucket "dma_chan_0" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+bucket "dma_chan_1" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+
+bucket "dma_chan_2" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+
+bucket "dma_chan_3" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
diff --git a/arch/mips/rmi/phoenix/msgring/msgring.l b/arch/mips/rmi/phoenix/msgring/msgring.l
new file mode 100644
index 0000000..4021cc5
--- /dev/null
+++ b/arch/mips/rmi/phoenix/msgring/msgring.l
@@ -0,0 +1,43 @@
+%{
+#include <stdio.h>
+#include <string.h>
+#include "msgring.yacc.h"
+
+
+int yyerror(const char *str)
+{
+  fprintf(stderr, "%s\n", str);
+  return 1;
+}
+
+%}
+
+%x c_comment
+
+%%
+
+"/*"                    BEGIN(c_comment); /* c-style comment */
+<c_comment>[^*\n]*        /* eat anything that is not a * */
+<c_comment>"*"+[^*/\n]*   /* eat up * s not followed by a / */
+<c_comment>\n
+<c_comment>"*"+"/"      BEGIN(INITIAL);
+
+"//"[^\n]*"\n"         ; /* eat up one-line (C++-style) commens */
+
+bucket                  yylval = (unsigned long)"bucket"; return TOK_BUCKET;
+size                    yylval = (unsigned long)"size"; return TOK_SIZE;
+[a-zA-Z_][a-zA-Z_0-9]*    yylval = (unsigned long)strdup(yytext); return TOK_WORD;
+[0-9]+                  yylval = atoi(yytext); return TOK_INTEGER;
+\"                      yylval = (unsigned long)"\""; return TOK_QUOTE;
+\{                      yylval = (unsigned long)"{"; return TOK_OPEN_BRACE;
+\}                      yylval = (unsigned long)"}"; return TOK_CLOSE_BRACE;
+;                       yylval = (unsigned long)";"; return TOK_SEMICOLON;
+\n                      /* ignore newline */;
+[ \t]+                  /* ignore whitespace */;
+.                       yyerror("Unknown token\n");
+%%
+
+int yywrap()
+{
+  return 1;
+}
diff --git a/arch/mips/rmi/phoenix/msgring/msgring.y b/arch/mips/rmi/phoenix/msgring/msgring.y
new file mode 100644
index 0000000..f0c74cf
--- /dev/null
+++ b/arch/mips/rmi/phoenix/msgring/msgring.y
@@ -0,0 +1,542 @@
+%{
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include <stdarg.h>
+#include <unistd.h>
+
+	extern FILE *yyin;
+	extern void yyerror(const char *);
+	int yydebug = 1;
+
+	//#define MAX_RX_BUCKETS 128
+
+	struct tx_stn {
+		const char *name;
+		const char *tbl_name;
+	};
+
+	struct tx_stn tx_stns[] = {
+		{ .name = "TX_STN_CPU_0" , .tbl_name = "cpu_0" },
+		{ .name = "TX_STN_CPU_1" , .tbl_name = "cpu_1" },
+		{ .name = "TX_STN_CPU_2" , .tbl_name = "cpu_2" },
+		{ .name = "TX_STN_CPU_3" , .tbl_name = "cpu_3" },
+		{ .name = "TX_STN_CPU_4" , .tbl_name = "cpu_4" },
+		{ .name = "TX_STN_CPU_5" , .tbl_name = "cpu_5" },
+		{ .name = "TX_STN_CPU_6" , .tbl_name = "cpu_6" },
+		{ .name = "TX_STN_CPU_7" , .tbl_name = "cpu_7" },
+
+		{ .name = "TX_STN_XGS_0" , .tbl_name = "xgs_0" },
+		{ .name = "TX_STN_XGS_1" , .tbl_name = "xgs_1" },
+
+		{ .name = "TX_STN_GMAC" , .tbl_name = "gmac" },
+
+		{ .name = "TX_STN_DMA" , .tbl_name = "dma" },
+
+		{ .name = "TX_STN_SEC" , .tbl_name = "sec" },
+
+		{ 0 }
+	};
+
+#define MAX_TX_STNS ((int)(sizeof(tx_stns)/sizeof(struct tx_stn)) - 1)
+
+	struct rx_stn {
+		const char *name;
+		int base_bucket;
+		int num_buckets;
+		int rx_entries;
+	};
+
+	struct rx_stn rx_stns[] = {
+		{ "RX_STN_CPU_0", 0, 8, 256},
+		{ "RX_STN_CPU_1", 8, 8, 256},
+		{ "RX_STN_CPU_2", 16, 8, 256},
+		{ "RX_STN_CPU_3", 24, 8, 256},
+		{ "RX_STN_CPU_4", 32, 8, 256},
+		{ "RX_STN_CPU_5", 40, 8, 256},
+		{ "RX_STN_CPU_6", 48, 8, 256},
+		{ "RX_STN_CPU_7", 56, 8, 256},
+
+		{ "RX_STN_XGS_0_TX", 64, 16, 256},
+		{ "RX_STN_XGS_1_TX", 80, 16, 256},
+
+		{ "RX_STN_GMAC", 96, 8, 256},
+   
+		{ "RX_STN_DMA", 104, 8, 256 },
+
+		{ "RX_STN_XGS_0_FR", 112, 2, 256},
+		{ "RX_STN_XGS_1_FR", 114, 2, 256},
+   
+		{ "RX_STN_SEC", 120, 8, 256 },
+   
+		{0, 0, 0, 0}
+	};
+
+#define MAX_RX_STNS ((int)(sizeof(rx_stns)/sizeof(struct rx_stn)) - 1)
+
+	struct rx_bucket {
+		const char *name;   
+		int size;
+		int tx_credits[MAX_TX_STNS];
+		int rx_stn;
+		const char *rx_stn_name;
+	};
+ 
+	static struct rx_bucket rx_buckets[] = {
+		{.name = "cpu_0_0" , .rx_stn_name = "RX_STN_CPU_0" },
+		{.name = "cpu_0_1" , .rx_stn_name = "RX_STN_CPU_0" },
+		{.name = "cpu_0_2" , .rx_stn_name = "RX_STN_CPU_0" },
+		{.name = "cpu_0_3" , .rx_stn_name = "RX_STN_CPU_0" },
+		{.name = "cpu_0_4" , .rx_stn_name = "RX_STN_CPU_0" },
+		{.name = "cpu_0_5" , .rx_stn_name = "RX_STN_CPU_0" },
+		{.name = "cpu_0_6" , .rx_stn_name = "RX_STN_CPU_0" },
+		{.name = "cpu_0_7" , .rx_stn_name = "RX_STN_CPU_0" },
+   
+		{.name = "cpu_1_0" , .rx_stn_name = "RX_STN_CPU_1" },
+		{.name = "cpu_1_1" , .rx_stn_name = "RX_STN_CPU_1" },
+		{.name = "cpu_1_2" , .rx_stn_name = "RX_STN_CPU_1" },
+		{.name = "cpu_1_3" , .rx_stn_name = "RX_STN_CPU_1" },
+		{.name = "cpu_1_4" , .rx_stn_name = "RX_STN_CPU_1" },
+		{.name = "cpu_1_5" , .rx_stn_name = "RX_STN_CPU_1" },
+		{.name = "cpu_1_6" , .rx_stn_name = "RX_STN_CPU_1" },
+		{.name = "cpu_1_7" , .rx_stn_name = "RX_STN_CPU_1" },
+   
+		{.name = "cpu_2_0" , .rx_stn_name = "RX_STN_CPU_2" },
+		{.name = "cpu_2_1" , .rx_stn_name = "RX_STN_CPU_2" },
+		{.name = "cpu_2_2" , .rx_stn_name = "RX_STN_CPU_2" },
+		{.name = "cpu_2_3" , .rx_stn_name = "RX_STN_CPU_2" },
+		{.name = "cpu_2_4" , .rx_stn_name = "RX_STN_CPU_2" },
+		{.name = "cpu_2_5" , .rx_stn_name = "RX_STN_CPU_2" },
+		{.name = "cpu_2_6" , .rx_stn_name = "RX_STN_CPU_2" },
+		{.name = "cpu_2_7" , .rx_stn_name = "RX_STN_CPU_2" },
+   
+		{.name = "cpu_3_0" , .rx_stn_name = "RX_STN_CPU_3" },
+		{.name = "cpu_3_1" , .rx_stn_name = "RX_STN_CPU_3" },
+		{.name = "cpu_3_2" , .rx_stn_name = "RX_STN_CPU_3" },
+		{.name = "cpu_3_3" , .rx_stn_name = "RX_STN_CPU_3" },
+		{.name = "cpu_3_4" , .rx_stn_name = "RX_STN_CPU_3" },
+		{.name = "cpu_3_5" , .rx_stn_name = "RX_STN_CPU_3" },
+		{.name = "cpu_3_6" , .rx_stn_name = "RX_STN_CPU_3" },
+		{.name = "cpu_3_7" , .rx_stn_name = "RX_STN_CPU_3" },
+   
+		{.name = "cpu_4_0" , .rx_stn_name = "RX_STN_CPU_4" },
+		{.name = "cpu_4_1" , .rx_stn_name = "RX_STN_CPU_4" },
+		{.name = "cpu_4_2" , .rx_stn_name = "RX_STN_CPU_4" },
+		{.name = "cpu_4_3" , .rx_stn_name = "RX_STN_CPU_4" },
+		{.name = "cpu_4_4" , .rx_stn_name = "RX_STN_CPU_4" },
+		{.name = "cpu_4_5" , .rx_stn_name = "RX_STN_CPU_4" },
+		{.name = "cpu_4_6" , .rx_stn_name = "RX_STN_CPU_4" },
+		{.name = "cpu_4_7" , .rx_stn_name = "RX_STN_CPU_4" },
+   
+		{.name = "cpu_5_0" , .rx_stn_name = "RX_STN_CPU_5" },
+		{.name = "cpu_5_1" , .rx_stn_name = "RX_STN_CPU_5" },
+		{.name = "cpu_5_2" , .rx_stn_name = "RX_STN_CPU_5" },
+		{.name = "cpu_5_3" , .rx_stn_name = "RX_STN_CPU_5" },
+		{.name = "cpu_5_4" , .rx_stn_name = "RX_STN_CPU_5" },
+		{.name = "cpu_5_5" , .rx_stn_name = "RX_STN_CPU_5" },
+		{.name = "cpu_5_6" , .rx_stn_name = "RX_STN_CPU_5" },
+		{.name = "cpu_5_7" , .rx_stn_name = "RX_STN_CPU_5" },
+   
+		{.name = "cpu_6_0" , .rx_stn_name = "RX_STN_CPU_6" },
+		{.name = "cpu_6_1" , .rx_stn_name = "RX_STN_CPU_6" },
+		{.name = "cpu_6_2" , .rx_stn_name = "RX_STN_CPU_6" },
+		{.name = "cpu_6_3" , .rx_stn_name = "RX_STN_CPU_6" },
+		{.name = "cpu_6_4" , .rx_stn_name = "RX_STN_CPU_6" },
+		{.name = "cpu_6_5" , .rx_stn_name = "RX_STN_CPU_6" },
+		{.name = "cpu_6_6" , .rx_stn_name = "RX_STN_CPU_6" },
+		{.name = "cpu_6_7" , .rx_stn_name = "RX_STN_CPU_6" },
+   
+		{.name = "cpu_7_0" , .rx_stn_name = "RX_STN_CPU_7" },
+		{.name = "cpu_7_1" , .rx_stn_name = "RX_STN_CPU_7" },
+		{.name = "cpu_7_2" , .rx_stn_name = "RX_STN_CPU_7" },
+		{.name = "cpu_7_3" , .rx_stn_name = "RX_STN_CPU_7" },
+		{.name = "cpu_7_4" , .rx_stn_name = "RX_STN_CPU_7" },
+		{.name = "cpu_7_5" , .rx_stn_name = "RX_STN_CPU_7" },
+		{.name = "cpu_7_6" , .rx_stn_name = "RX_STN_CPU_7" },
+		{.name = "cpu_7_7" , .rx_stn_name = "RX_STN_CPU_7" },
+
+		{.name = "xgs_0_tx_0" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_1" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_2" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_3" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_4" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_5" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_6" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_7" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_8" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_9" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_10" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_11" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_12" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_13" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_14" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+		{.name = "xgs_0_tx_15" , .rx_stn_name = "RX_STN_XGS_0_TX" },
+
+		{.name = "xgs_1_tx_0" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_1" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_2" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_3" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_4" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_5" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_6" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_7" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_8" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_9" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_10" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_11" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_12" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_13" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_14" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+		{.name = "xgs_1_tx_15" , .rx_stn_name = "RX_STN_XGS_1_TX" },
+
+		{.name = "gmac_rsvd_0" , .rx_stn_name = "RX_STN_GMAC" },
+		{.name = "gmac_rfr_0" , .rx_stn_name = "RX_STN_GMAC" },
+		{.name = "gmac_tx_0" , .rx_stn_name = "RX_STN_GMAC" },
+		{.name = "gmac_tx_1" , .rx_stn_name = "RX_STN_GMAC" },
+		{.name = "gmac_tx_2" , .rx_stn_name = "RX_STN_GMAC" },
+		{.name = "gmac_tx_3" , .rx_stn_name = "RX_STN_GMAC" },
+		{.name = "gmac_rsvd_1" , .rx_stn_name = "RX_STN_GMAC" },
+		{.name = "gmac_rfr_1" , .rx_stn_name = "RX_STN_GMAC" },
+
+		{.name = "dma_chan_0" , .rx_stn_name = "RX_STN_DMA" },
+		{.name = "dma_chan_1", .rx_stn_name = "RX_STN_DMA" },
+		{.name = "dma_chan_2", .rx_stn_name = "RX_STN_DMA" },
+		{.name = "dma_chan_3", .rx_stn_name = "RX_STN_DMA" },
+   
+		{.name = "rsvd_0", .rx_stn_name = "RX_STN_RSVD" },
+		{.name = "rsvd_1", .rx_stn_name = "RX_STN_RSVD" },
+		{.name = "rsvd_2", .rx_stn_name = "RX_STN_RSVD" },
+		{.name = "rsvd_3", .rx_stn_name = "RX_STN_RSVD" },
+
+		{.name = "xgs_0_rsvd", .rx_stn_name = "RX_STN_XGS_0_FR" },
+		{.name = "xgs_0_rfr", .rx_stn_name = "RX_STN_XGS_0_FR" },
+
+		{.name = "xgs_1_rsvd", .rx_stn_name = "RX_STN_XGS_1_FR" },
+		{.name = "xgs_1_rfr", .rx_stn_name = "RX_STN_XGS_1_FR" },
+
+		{.name = "rsvd_4", .rx_stn_name = "RX_STN_RSVD" },
+		{.name = "rsvd_5", .rx_stn_name = "RX_STN_RSVD" },
+		{.name = "rsvd_6", .rx_stn_name = "RX_STN_RSVD" },
+		{.name = "rsvd_7", .rx_stn_name = "RX_STN_RSVD" },
+
+		{.name = "sec_pipe_0", .rx_stn_name = "RX_STN_SEC" },
+		{.name = "sec_pipe_1", .rx_stn_name = "RX_STN_SEC" },
+		{.name = "sec_pipe_2", .rx_stn_name = "RX_STN_SEC" },
+		{.name = "sec_pipe_3", .rx_stn_name = "RX_STN_SEC" },
+		{.name = "sec_rsa", .rx_stn_name = "RX_STN_SEC" },
+		{.name = "sec_rsvd_5", .rx_stn_name = "RX_STN_SEC" },
+		{.name = "sec_rsvd_6", .rx_stn_name = "RX_STN_SEC" },
+		{.name = "sec_rsvd_7", .rx_stn_name = "RX_STN_SEC" },
+
+		{.name = 0 }
+	};
+
+#define MAX_RX_BUCKETS ((int)(sizeof(rx_buckets)/sizeof(struct rx_bucket)) - 1)
+
+	static void add_bucket(const char *name);
+	static void modify_bucket_size(int size);
+	static void modify_bucket_tx_credit(const char *str, int credits);
+
+#define fatal_error(fmt, args...) {fprintf(stderr, fmt, ##args); exit(-1);}
+
+	%}
+
+%token TOK_BUCKET TOK_SIZE TOK_WORD TOK_INTEGER TOK_QUOTE TOK_OPEN_BRACE TOK_CLOSE_BRACE TOK_SEMICOLON 
+
+%%
+
+def: 
+| def bucket_def 
+;
+
+bucket_def: 
+TOK_BUCKET quotedname bucket_content 
+{ //printf("grammar: bucket_def start: $1=%s, $2=%s \n", $1, $2);
+	add_bucket((const char *)$2); } 
+;
+
+bucket_content: 
+| TOK_OPEN_BRACE bucket_stmts TOK_CLOSE_BRACE	       
+;
+bucket_stmts: 
+| bucket_stmts bucket_stmt TOK_SEMICOLON
+;
+
+bucket_stmt: 
+| TOK_SIZE TOK_INTEGER 
+{ //printf("grammar: $2=%d\n", $2); 
+	modify_bucket_size($2);}
+					    
+| quotedname TOK_INTEGER
+{ //printf("grammar: $1=%s, $2=%d\n", $1, $2); 
+	modify_bucket_tx_credit((const char *)$1, $2);}
+;
+
+quotedname: TOK_QUOTE TOK_WORD TOK_QUOTE { $$=$2; } ;
+
+%%
+
+static const char *input = "msgring.cfg";  
+static const char *output = "msgring.c";  
+static int debug = 0;
+
+static int lookup_rx_stn(const char *name)
+{
+	int i=0;
+
+	if (!name) return MAX_RX_STNS;
+
+	for(i=0;rx_stns[i].name;i++) 
+		if (strcasecmp(rx_stns[i].name, name)==0) break;
+
+	return i;
+}
+
+static int lookup_rx_bucket(const char *name)
+{
+	int i=0;
+
+	if (!name) return MAX_RX_BUCKETS;
+
+	for(i=0;rx_buckets[i].name;i++) 
+		if (strcasecmp(rx_buckets[i].name, name)==0) break;
+
+	return i;
+}
+
+static void init_rx_bucket(int i)
+{
+	int j=0;
+
+	rx_buckets[i].size = 0;
+	for(j=0;j<MAX_TX_STNS;j++)
+		rx_buckets[i].tx_credits[j] = 0;
+
+	rx_buckets[i].rx_stn = lookup_rx_stn(rx_buckets[i].rx_stn_name);
+}
+
+static void copy_rx_bucket(struct rx_bucket *dest, struct rx_bucket *src)
+{
+	int i=0;
+  
+	dest->size = src->size;
+	for (i=0;i<MAX_TX_STNS;i++)
+		dest->tx_credits[i] = src->tx_credits[i];
+}
+
+static void init_defaults(void)
+{
+	int i=0;
+
+	for(i=0;i<MAX_RX_BUCKETS;i++) 
+		init_rx_bucket(i);
+}
+
+static void add_bucket(const char *name)
+{
+	int id = 0;
+
+	id = lookup_rx_bucket(name);
+
+	if (id == MAX_RX_BUCKETS) {
+		fatal_error("Unrecognised bucket name %s\n", name);
+	}
+
+	copy_rx_bucket(&rx_buckets[id], &rx_buckets[MAX_RX_BUCKETS]);
+
+	init_rx_bucket(MAX_RX_BUCKETS);
+}
+
+static void modify_bucket_size(int size)
+{
+	rx_buckets[MAX_RX_BUCKETS].size = size;
+	//printf("bucket configured with size %d\n", size);
+}
+
+static void modify_bucket_tx_credit(const char *name, int credits)
+{
+	int i=0;
+
+	for(i=0;tx_stns[i].name!=NULL;i++) 
+		if (strcasecmp(tx_stns[i].name, name)==0) break;
+	if (tx_stns[i].name) {
+		rx_buckets[MAX_RX_BUCKETS].tx_credits[i] = credits;
+		//printf("Tx Station %s configured with %d tx credits\n", name, credits);
+	}
+	else {
+		fatal_error("Unknown tx station %s!\n", name);
+	}
+}
+
+static void dump_config(void)
+{
+	int i=0, j=0;
+
+	for(i=0;i<MAX_RX_BUCKETS;i++) {
+		if (rx_stns[rx_buckets[i].rx_stn].name && rx_buckets[i].size) {
+			printf("bucket %3d: size = %3d, rx_stn = %s, tx_credits: ", i, rx_buckets[i].size, 
+			       rx_stns[rx_buckets[i].rx_stn].name);
+			for(j=0;j<MAX_TX_STNS;j++) 
+				if (rx_buckets[i].tx_credits[j]) 
+					printf("<%s, %d> ", tx_stns[j].name, rx_buckets[i].tx_credits[j]);    
+			printf("\n");
+		}
+	}
+}
+
+static void check_config(void)
+{
+	int i=0, j=0, k=0;
+	int total=0;
+
+	for(i=0;rx_stns[i].name;i++) {
+		if (debug) printf("Checking \"%s\"...\n", rx_stns[i].name);
+		total = 0;
+		for(j=rx_stns[i].base_bucket;j<rx_stns[i].base_bucket+rx_stns[i].num_buckets;j++) {
+      
+			if (rx_buckets[j].size) {
+
+				{
+					int num_ones = 0;
+					for(k=0;k<8;k++) if (rx_buckets[j].size & (1<<k)) num_ones++;
+					if (num_ones > 1) 
+						fatal_error("Bucket(%d)'s size(%d) is not a power of 2\n", j, rx_buckets[j].size);
+				}
+
+				if (total % rx_buckets[j].size) 
+					fatal_error("Bucket(%d)'s base address(%d) is not aligned to it's size(%d)\n", 
+						    j, total, rx_buckets[j].size);
+
+				if (rx_buckets[j].size < 4) 
+					fatal_error("Bucket(%d) size(%d) is bad, has to be 0 or >=4\n", j, rx_buckets[j].size);
+			}
+
+			total += rx_buckets[j].size;
+		}
+		//printf("\trx_entries=%d, configured size = %d\n", rx_stns[i].rx_entries, total);
+		if (total > rx_stns[i].rx_entries) {
+			fatal_error("Total configured bucket size for %s exceeds available rx entries\n", 
+				    rx_stns[i].name);
+		}
+		for(j=rx_stns[i].base_bucket;j<rx_stns[i].base_bucket+rx_stns[i].num_buckets;j++) {
+			total = 0;
+			for(k=0;k<MAX_TX_STNS;k++) 
+				total += rx_buckets[j].tx_credits[k];
+			//printf("\tbucket %d: size = %d, total configured credits = %d\n", 
+			//j, rx_buckets[j].size, total);
+			if (total > rx_buckets[j].size) {
+				fatal_error("Total tx credits to bucket_%d exceed the bucket size\n", j);
+			}
+		}  
+	}
+	if (debug) printf("...done\n");
+} 
+
+static void gen_tables(void)
+{
+	FILE *fp = fopen(output, "w");
+	char line[1024];
+	int i=0, j=0;
+
+	if (!output) {
+		fatal_error("Unable to write to %s\n", output);
+	}
+
+	sprintf(line, "/**********************************************************\n");
+	fwrite(line, strlen(line), 1, fp);
+	sprintf(line, " * -----------------DO NOT EDIT THIS FILE------------------\n");
+	fwrite(line, strlen(line), 1, fp);
+	sprintf(line, " * This file has been autogenerated by the build process\n");
+	fwrite(line, strlen(line), 1, fp);
+	sprintf(line, " * from \"%s\"\n", input);
+	fwrite(line, strlen(line), 1, fp);
+	sprintf(line, " **********************************************************/\n\n");
+	fwrite(line, strlen(line), 1, fp);
+
+	sprintf(line, "#include <asm/rmi/msgring.h>\n");
+	fwrite(line, strlen(line), 1, fp);
+	sprintf(line, "#include <linux/module.h>\n\n");
+	fwrite(line, strlen(line), 1, fp);
+
+	/* Generate Bucket Sizes data structure */
+	sprintf(line, "struct bucket_size bucket_sizes = {\n\t{");
+	fwrite(line, strlen(line), 1, fp);
+
+	for (i=0;i<MAX_RX_BUCKETS;i++) {
+		if (i && (i%8)==0) sprintf(line, "\n\t\t%d, ", rx_buckets[i].size);
+		else sprintf(line, "%3d, ", rx_buckets[i].size);
+		fwrite(line, strlen(line), 1, fp);
+	}
+  
+	sprintf(line, "\n\t}\n};\nEXPORT_SYMBOL(bucket_sizes);\n\n");
+	fwrite(line, strlen(line), 1, fp);
+
+	/* Generate Credit tables */
+	for(i=0; tx_stns[i].name; i++) {
+		sprintf(line, "struct stn_cc cc_table_%s = {{", tx_stns[i].tbl_name);
+		fwrite(line, strlen(line), 1, fp);
+
+		for (j=0;j<MAX_RX_BUCKETS;j++) {
+			if ((j % 8)==0) sprintf(line, "\n\t\t{%d", rx_buckets[j].tx_credits[i]);
+			else sprintf(line, ", %d ", rx_buckets[j].tx_credits[i]);
+			fwrite(line, strlen(line), 1, fp);
+			if ((j % 8)==7) {sprintf(line, "},"); fwrite(line, strlen(line), 1, fp);}
+		}    
+		sprintf(line, "\n\t}};\nEXPORT_SYMBOL(cc_table_%s);\n\n",
+			tx_stns[i].tbl_name);
+		fwrite(line, strlen(line), 1, fp);
+	}
+}
+
+static void usage(const char *progname)
+{
+	fprintf(stderr, "Usage: %s -i <input file> -o <output file>\n", progname);
+	exit(-1);
+}
+
+int main(int argc, char *argv[])
+{
+	int ret = 0;
+	int ch=0;
+  
+	while ( (ch=getopt(argc, argv, "hdi:o:")) != -1) {
+		switch(ch) {
+		case 'i': input = strdup(optarg); break;
+		case 'o': output = strdup(optarg); break;
+		case 'd': debug = 1; break;
+			break;
+		case 'h':
+		default:
+			usage(argv[0]);
+			break;
+		}
+	}
+	printf("Input file = \"%s\", Output file = \"%s\" \n", input, output);
+
+	yyin = fopen(input, "r");
+
+	if (yyin == NULL) {
+		fatal_error("bad input file\n");
+	}
+  
+	//printf("MAX_RX_STNS = %d, MAX_TX_STNS = %d, MAX_RX_BUCKETS = %d\n", 
+	// MAX_RX_STNS, MAX_TX_STNS, MAX_RX_BUCKETS);
+
+	init_defaults();
+  
+	ret = yyparse();
+
+	if (ret) {
+		fprintf(stderr, "Unable to Parse %s\n", input);
+		return -1;
+	}
+	printf("Finished parsing \"%s\"\n", input);
+
+	if (debug) dump_config();
+  
+	check_config();
+
+	gen_tables();
+
+	return 0;
+}
diff --git a/arch/mips/rmi/phoenix/msgring/msgring_ike.cfg b/arch/mips/rmi/phoenix/msgring/msgring_ike.cfg
new file mode 100644
index 0000000..ce12417
--- /dev/null
+++ b/arch/mips/rmi/phoenix/msgring/msgring_ike.cfg
@@ -0,0 +1,1258 @@
+/*********************************************************************
+ *
+ * Copyright 2003-2006 Raza Microelectronics, Inc. (RMI). All rights
+ * reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in
+ * the documentation and/or other materials provided with the
+ * distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Raza Microelectronics, Inc. ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RMI OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR PROFITS, OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * *****************************RMI_2**********************************/
+
+
+/* 
+ * This file defines the message ring configuration for phoenix-8. It tries to allow 
+ * many different point-point communications between the message stations on the message ring
+ * and as result is _not_ the best configuration for performance
+ *
+ * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
+ * security engine and the general purpose DMA engines. It provides a high bandwidth,
+ * low latency communication links. On traditional processors, this communication goes through
+ * which inherently does not scale very well with increasing number of cpus. 
+ * 
+ * Message ring has an in-built flow control mechanism. Every agent/station on the ring has to
+ * have software configured credits to send messages to any agent. Every receiving agent on the
+ * ring has a 256 entry FIFO that can divided into "buckets". All addressing on the ring is 
+ * in terms of buckets. There are a total 128 buckets on the ring. The total number of credits 
+ * across all sending agents should not exceed the bucket size. 
+ *
+ * Below are the receiving agents and the max number of buckets they can have
+ * 	CPU 0	: 8 buckets
+ * 	CPU 1	: 8 buckets
+ * 	CPU 2	: 8 buckets
+ * 	CPU 3	: 8 buckets
+ * 	CPU 4	: 8 buckets
+ * 	CPU 5	: 8 buckets
+ * 	CPU 6	: 8 buckets
+ * 	CPU 7	: 8 buckets
+ * 
+ * 	XGMAC 0 / SPI4 0
+ *			 TX	:	16 buckets
+ *			 FREE	:	2  buckets
+ * 	XGMAC 1 / SPI4 1
+ *			 TX	:	16 buckets
+ *			 FREE	:	2  buckets
+ * 
+ *	GMAC	: 8 buckets	
+ *	
+ *	SEC	: 8 buckets
+ * 
+ *	DMA	: 8 buckets
+ *
+ * The bucket size of a bucket should be aligned to the bucket's starting index in that
+ * receiving station's FIFO. For example, if sizes of bucket0 and bucket1 of a station 
+ * are 32 and 32, bucket2's size has to be 64. bucket size 0 is valid.
+ *
+ * The format of the file is pretty straight forward. Each bucket definition has the size
+ * and the list of sending agents to that bucket with the number of credits to send.
+ * 
+ * Undefined buckets have a size of 0 and Tx stations have 0 credits to send to that bucket.
+ *
+ *  Following are the currently supported bucket names
+ *  cpu_0_0
+ *  cpu_0_1
+ *  cpu_0_2
+ *  cpu_0_3
+ *  cpu_0_4
+ *  cpu_0_5
+ *  cpu_0_6
+ *  cpu_0_7
+ *  
+ *  cpu_1_0
+ *  cpu_1_1
+ *  cpu_1_2
+ *  cpu_1_3
+ *  cpu_1_4
+ *  cpu_1_5
+ *  cpu_1_6
+ *  cpu_1_7
+ *  
+ *  cpu_2_0
+ *  cpu_2_1
+ *  cpu_2_2
+ *  cpu_2_3
+ *  cpu_2_4
+ *  cpu_2_5
+ *  cpu_2_6
+ *  cpu_2_7
+ *  
+ *  cpu_3_0
+ *  cpu_3_1
+ *  cpu_3_2
+ *  cpu_3_3
+ *  cpu_3_4
+ *  cpu_3_5
+ *  cpu_3_6
+ *  cpu_3_7
+ *  
+ *  cpu_4_0
+ *  cpu_4_1
+ *  cpu_4_2
+ *  cpu_4_3
+ *  cpu_4_4
+ *  cpu_4_5
+ *  cpu_4_6
+ *  cpu_4_7
+ *  
+ *  cpu_5_0
+ *  cpu_5_1
+ *  cpu_5_2
+ *  cpu_5_3
+ *  cpu_5_4
+ *  cpu_5_5
+ *  cpu_5_6
+ *  cpu_5_7
+ *  
+ *  cpu_6_0
+ *  cpu_6_1
+ *  cpu_6_2
+ *  cpu_6_3
+ *  cpu_6_4
+ *  cpu_6_5
+ *  cpu_6_6
+ *  cpu_6_7
+ *  
+ *  cpu_7_0
+ *  cpu_7_1
+ *  cpu_7_2
+ *  cpu_7_3
+ *  cpu_7_4
+ *  cpu_7_5
+ *  cpu_7_6
+ *  cpu_7_7
+ *
+ *  xgs_0_tx_0
+ *  xgs_0_tx_1
+ *  xgs_0_tx_2
+ *  xgs_0_tx_3
+ *  xgs_0_tx_4
+ *  xgs_0_tx_5
+ *  xgs_0_tx_6
+ *  xgs_0_tx_7
+ *  xgs_0_tx_8
+ *  xgs_0_tx_9
+ *  xgs_0_tx_10
+ *  xgs_0_tx_11
+ *  xgs_0_tx_12
+ *  xgs_0_tx_13
+ *  xgs_0_tx_14
+ *  xgs_0_tx_15
+ *
+ *  xgs_1_tx_0
+ *  xgs_1_tx_1
+ *  xgs_1_tx_2
+ *  xgs_1_tx_3
+ *  xgs_1_tx_4
+ *  xgs_1_tx_5
+ *  xgs_1_tx_6
+ *  xgs_1_tx_7
+ *  xgs_1_tx_8
+ *  xgs_1_tx_9
+ *  xgs_1_tx_10
+ *  xgs_1_tx_11
+ *  xgs_1_tx_12
+ *  xgs_1_tx_13
+ *  xgs_1_tx_14
+ *  xgs_1_tx_15
+ *
+ *  gmac_rsvd_0
+ *  gmac_rfr_0
+ *  gmac_tx_0
+ *  gmac_tx_1
+ *  gmac_tx_2
+ *  gmac_tx_3
+ *  gmac_rsvd_1
+ *  gmac_rfr_1
+ *
+ *  xgs_0_rsvd
+ *  xgs_0_rfr
+ *
+ *  xgs_1_rsvd
+ *  xgs_1_rfr
+ *
+ *  sec_pipe_0
+ *  sec_pipe_1
+ *  sec_pipe_2
+ *  sec_pipe_3
+ *  sec_rsa
+ *
+ * Following are the currently supported Tx Agent/Station names
+ *
+ *   tx_stn_cpu_0
+ *  tx_stn_cpu_1
+ *  tx_stn_cpu_2
+ *  tx_stn_cpu_3
+ *  tx_stn_cpu_4
+ *  tx_stn_cpu_5
+ *  tx_stn_cpu_6
+ *  tx_stn_cpu_7
+ *
+ *   tx_stn_xgs_0
+ *  tx_stn_xgs_1
+ *
+ *   tx_stn_gmac
+ *
+ *   tx_stn_dma
+ *
+ *   tx_stn_sec
+ *
+ *
+ * 
+ */
+
+/*************************************************************/
+// CPU_0 Message Station 
+
+bucket "cpu_0_0" { 
+	size 32;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_0_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_0_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_0_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_0_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_0_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_0_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_0_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_1 Message Station 
+
+bucket "cpu_1_0" { 
+	size 32;
+/*
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_dma" 4;
+	"tx_stn_cpu_0" 16; /* NEEDED BY RMIOS IPSEC */
+}
+bucket "cpu_1_1" { 
+	size 32; 
+/*
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_cpu_0" 16; /* NEEDED BY RMIOS IPSEC */
+}
+bucket "cpu_1_2" { 
+	size 32; 
+/*
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_cpu_0" 16; /* NEEDED BY RMIOS IPSEC */
+}
+bucket "cpu_1_3" { 
+	size 32; 
+/*	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_cpu_0" 20; /* NEEDED BY RMIOS IPSEC */
+}
+bucket "cpu_1_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_1_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_1_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_1_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_2 Message Station 
+
+bucket "cpu_2_0" { 
+	size 32;
+//	"tx_stn_xgs_0" 8;
+//	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_dma" 4;
+	"tx_stn_cpu_0" 16;
+}
+bucket "cpu_2_1" { 
+	size 32; 
+//	"tx_stn_xgs_0" 8;
+//	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_cpu_0" 16;
+}
+bucket "cpu_2_2" { 
+	size 32; 
+//	"tx_stn_xgs_0" 8;
+//	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_cpu_0" 16;
+}
+bucket "cpu_2_3" { 
+	size 32; 
+//	"tx_stn_xgs_0" 8;
+//	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_cpu_0" 16;
+}
+bucket "cpu_2_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_2_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_2_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_2_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_3 Message Station 
+
+bucket "cpu_3_0" { 
+	size 32;
+//	"tx_stn_xgs_0" 8;
+//	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_dma" 4;
+	"tx_stn_cpu_0" 16;
+}
+bucket "cpu_3_1" { 
+	size 32; 
+//	"tx_stn_xgs_0" 8;
+//	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_cpu_0" 16;
+}
+bucket "cpu_3_2" { 
+	size 32; 
+//	"tx_stn_xgs_0" 8;
+//	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_cpu_0" 16;
+}
+bucket "cpu_3_3" { 
+	size 32; 
+//	"tx_stn_xgs_0" 8;
+//	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_cpu_0" 16;
+}
+bucket "cpu_3_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_3_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_3_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_3_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_4 Message Station 
+
+bucket "cpu_4_0" { 
+	size 32;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_4_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_4_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_4_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_4_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_4_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_4_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_4_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_5 Message Station 
+
+bucket "cpu_5_0" { 
+	size 32;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_5_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_5_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_5_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_5_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_5_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_5_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_5_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+
+/*************************************************************/
+// CPU_6 Message Station 
+
+bucket "cpu_6_0" { 
+	size 32;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_6_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_6_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_6_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_6_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_6_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_6_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_6_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+
+/*************************************************************/
+// CPU_7 Message Station 
+
+bucket "cpu_7_0" { 
+	size 32;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_7_1" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_7_2" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_7_3" { 
+	size 32; 
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_7_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_7_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_7_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_7_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+
+/*************************************************************/
+// GMAC Message Station 
+
+bucket "gmac_rfr_0" {
+	size 32;
+	"tx_stn_cpu_0" 2;
+	"tx_stn_cpu_1" 2;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+	"tx_stn_gmac" 4;
+}
+
+bucket "gmac_tx_0" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_1" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_2" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_3" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_rfr_1" {
+	size 32;
+	"tx_stn_cpu_0" 2;
+	"tx_stn_cpu_1" 2;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+	"tx_stn_gmac" 4;
+}
+/*********************************************/
+// xgmac
+bucket "xgs_0_rfr" {
+    size 32;
+    "tx_stn_cpu_0" 2;
+    "tx_stn_cpu_1" 2;
+    "tx_stn_cpu_2" 2;
+    "tx_stn_cpu_3" 2;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+    "tx_stn_xgs_0" 4;
+    "tx_stn_xgs_1" 4;
+}
+
+bucket "xgs_0_tx_0" {
+    size 32;
+    "tx_stn_cpu_0" 4;
+    "tx_stn_cpu_1" 4;
+    "tx_stn_cpu_2" 4;
+    "tx_stn_cpu_3" 4;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+}
+
+bucket "xgs_0_tx_1" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_2" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_3" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_4" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+bucket "xgs_0_tx_5" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_6" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_7" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_8" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_9" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_10" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_0_tx_11" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_12" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_13" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_14" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_rfr" {
+    size 32;
+    "tx_stn_cpu_0" 2;
+    "tx_stn_cpu_1" 2;
+    "tx_stn_cpu_2" 2;
+    "tx_stn_cpu_3" 2;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+    "tx_stn_xgs_0" 4;
+    "tx_stn_xgs_1" 4;
+}
+
+bucket "xgs_1_tx_0" {
+    size 32;
+    "tx_stn_cpu_0" 4;
+    "tx_stn_cpu_1" 4;
+    "tx_stn_cpu_2" 4;
+    "tx_stn_cpu_3" 4;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+}
+
+
+bucket "xgs_1_tx_1" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_2" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_3" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_4" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_5" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_6" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_7" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_tx_8" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_tx_9" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_tx_10" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_11" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_12" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_13" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_14" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+
+
+
+
+/*************************************************************/
+// Security Message Station 
+
+bucket "sec_pipe_0" {
+        size 128;
+        "tx_stn_cpu_0" 16;
+        "tx_stn_cpu_1" 16;
+        "tx_stn_cpu_2" 16;
+        "tx_stn_cpu_3" 16;
+        "tx_stn_cpu_4" 16;
+        "tx_stn_cpu_5" 16;
+        "tx_stn_cpu_6" 16;
+        "tx_stn_cpu_7" 16;
+}
+
+bucket "sec_rsa" {
+        size 128;
+        "tx_stn_cpu_0" 16;
+        "tx_stn_cpu_1" 16;
+        "tx_stn_cpu_2" 16;
+        "tx_stn_cpu_3" 16;
+        "tx_stn_cpu_4" 16;
+        "tx_stn_cpu_5" 16;
+        "tx_stn_cpu_6" 16;
+        "tx_stn_cpu_7" 16;
+}
+
+bucket "dma_chan_0" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+bucket "dma_chan_1" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+
+bucket "dma_chan_2" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+
+bucket "dma_chan_3" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
diff --git a/arch/mips/rmi/phoenix/msgring/msgring_openssl.cfg b/arch/mips/rmi/phoenix/msgring/msgring_openssl.cfg
new file mode 100644
index 0000000..d0242ac
--- /dev/null
+++ b/arch/mips/rmi/phoenix/msgring/msgring_openssl.cfg
@@ -0,0 +1,1311 @@
+/*********************************************************************
+ *
+ * Copyright 2003-2006 Raza Microelectronics, Inc. (RMI). All rights
+ * reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in
+ * the documentation and/or other materials provided with the
+ * distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Raza Microelectronics, Inc. ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RMI OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR PROFITS, OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * *****************************RMI_2**********************************/
+
+
+/*
+ * This file defines the message ring configuration for phoenix-8. It tries to allow
+ * many different point-point communications between the message stations on the message ring
+ * and as result is _not_ the best configuration for performance
+ *
+ * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
+ * security engine and the general purpose DMA engines. It provides a high bandwidth,
+ * low latency communication links. On traditional processors, this communication goes through
+ * which inherently does not scale very well with increasing number of cpus.
+ *
+ * Message ring has an in-built flow control mechanism. Every agent/station on the ring has to
+ * have software configured credits to send messages to any agent. Every receiving agent on the
+ * ring has a 256 entry FIFO that can divided into "buckets". All addressing on the ring is
+ * in terms of buckets. There are a total 128 buckets on the ring. The total number of credits
+ * across all sending agents should not exceed the bucket size.
+ *
+ * Below are the receiving agents and the max number of buckets they can have
+ * 	CPU 0	: 8 buckets
+ * 	CPU 1	: 8 buckets
+ * 	CPU 2	: 8 buckets
+ * 	CPU 3	: 8 buckets
+ * 	CPU 4	: 8 buckets
+ * 	CPU 5	: 8 buckets
+ * 	CPU 6	: 8 buckets
+ * 	CPU 7	: 8 buckets
+ *
+ * 	XGMAC 0 / SPI4 0
+ *			 TX	:	16 buckets
+ *			 FREE	:	2  buckets
+ * 	XGMAC 1 / SPI4 1
+ *			 TX	:	16 buckets
+ *			 FREE	:	2  buckets
+ *
+ *	GMAC	: 8 buckets
+ *
+ *	SEC	: 8 buckets
+ *
+ *	DMA	: 8 buckets
+ *
+ * The bucket size of a bucket should be aligned to the bucket's starting index in that
+ * receiving station's FIFO. For example, if sizes of bucket0 and bucket1 of a station
+ * are 32 and 32, bucket2's size has to be 64. bucket size 0 is valid.
+ *
+ * The format of the file is pretty straight forward. Each bucket definition has the size
+ * and the list of sending agents to that bucket with the number of credits to send.
+ *
+ * Undefined buckets have a size of 0 and Tx stations have 0 credits to send to that bucket.
+ *
+ *  Following are the currently supported bucket names
+ *  cpu_0_0
+ *  cpu_0_1
+ *  cpu_0_2
+ *  cpu_0_3
+ *  cpu_0_4
+ *  cpu_0_5
+ *  cpu_0_6
+ *  cpu_0_7
+ *
+ *  cpu_1_0
+ *  cpu_1_1
+ *  cpu_1_2
+ *  cpu_1_3
+ *  cpu_1_4
+ *  cpu_1_5
+ *  cpu_1_6
+ *  cpu_1_7
+ *
+ *  cpu_2_0
+ *  cpu_2_1
+ *  cpu_2_2
+ *  cpu_2_3
+ *  cpu_2_4
+ *  cpu_2_5
+ *  cpu_2_6
+ *  cpu_2_7
+ *
+ *  cpu_3_0
+ *  cpu_3_1
+ *  cpu_3_2
+ *  cpu_3_3
+ *  cpu_3_4
+ *  cpu_3_5
+ *  cpu_3_6
+ *  cpu_3_7
+ *
+ *  cpu_4_0
+ *  cpu_4_1
+ *  cpu_4_2
+ *  cpu_4_3
+ *  cpu_4_4
+ *  cpu_4_5
+ *  cpu_4_6
+ *  cpu_4_7
+ *
+ *  cpu_5_0
+ *  cpu_5_1
+ *  cpu_5_2
+ *  cpu_5_3
+ *  cpu_5_4
+ *  cpu_5_5
+ *  cpu_5_6
+ *  cpu_5_7
+ *
+ *  cpu_6_0
+ *  cpu_6_1
+ *  cpu_6_2
+ *  cpu_6_3
+ *  cpu_6_4
+ *  cpu_6_5
+ *  cpu_6_6
+ *  cpu_6_7
+ *
+ *  cpu_7_0
+ *  cpu_7_1
+ *  cpu_7_2
+ *  cpu_7_3
+ *  cpu_7_4
+ *  cpu_7_5
+ *  cpu_7_6
+ *  cpu_7_7
+ *
+ *  xgs_0_tx_0
+ *  xgs_0_tx_1
+ *  xgs_0_tx_2
+ *  xgs_0_tx_3
+ *  xgs_0_tx_4
+ *  xgs_0_tx_5
+ *  xgs_0_tx_6
+ *  xgs_0_tx_7
+ *  xgs_0_tx_8
+ *  xgs_0_tx_9
+ *  xgs_0_tx_10
+ *  xgs_0_tx_11
+ *  xgs_0_tx_12
+ *  xgs_0_tx_13
+ *  xgs_0_tx_14
+ *  xgs_0_tx_15
+ *
+ *  xgs_1_tx_0
+ *  xgs_1_tx_1
+ *  xgs_1_tx_2
+ *  xgs_1_tx_3
+ *  xgs_1_tx_4
+ *  xgs_1_tx_5
+ *  xgs_1_tx_6
+ *  xgs_1_tx_7
+ *  xgs_1_tx_8
+ *  xgs_1_tx_9
+ *  xgs_1_tx_10
+ *  xgs_1_tx_11
+ *  xgs_1_tx_12
+ *  xgs_1_tx_13
+ *  xgs_1_tx_14
+ *  xgs_1_tx_15
+ *
+ *  gmac_rsvd_0
+ *  gmac_rfr_0
+ *  gmac_tx_0
+ *  gmac_tx_1
+ *  gmac_tx_2
+ *  gmac_tx_3
+ *  gmac_rsvd_1
+ *  gmac_rfr_1
+ *
+ *  xgs_0_rsvd
+ *  xgs_0_rfr
+ *
+ *  xgs_1_rsvd
+ *  xgs_1_rfr
+ *
+ *  sec_pipe_0
+ *  sec_pipe_1
+ *  sec_pipe_2
+ *  sec_pipe_3
+ *  sec_rsa
+ *
+ * Following are the currently supported Tx Agent/Station names
+ *
+ *   tx_stn_cpu_0
+ *  tx_stn_cpu_1
+ *  tx_stn_cpu_2
+ *  tx_stn_cpu_3
+ *  tx_stn_cpu_4
+ *  tx_stn_cpu_5
+ *  tx_stn_cpu_6
+ *  tx_stn_cpu_7
+ *
+ *   tx_stn_xgs_0
+ *  tx_stn_xgs_1
+ *
+ *   tx_stn_gmac
+ *
+ *   tx_stn_dma
+ *
+ *   tx_stn_sec
+ *
+ *
+ *
+ */
+
+/*************************************************************/
+// CPU_0 Message Station
+
+bucket "cpu_0_0" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 4;
+	"tx_stn_xgs_1" 4;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  12;
+	"tx_stn_dma" 4;
+        "tx_stn_cpu_1" 1; /* NEEDED BY RMIOS IPSEC */
+        "tx_stn_cpu_2" 1;
+        "tx_stn_cpu_3" 1;
+        "tx_stn_cpu_4" 1;
+        "tx_stn_cpu_5" 1;
+        "tx_stn_cpu_6" 1;
+        "tx_stn_cpu_7" 1;
+}
+bucket "cpu_0_1" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_0_2" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_0_3" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_0_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_0_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_0_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_0_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_1 Message Station
+
+bucket "cpu_1_0" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_1_1" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_1_2" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_1_3" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+    "tx_stn_cpu_0" 4; /* NEEDED BY RMIOS IPSEC */
+}
+bucket "cpu_1_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_1_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_1_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_1_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_2 Message Station
+
+bucket "cpu_2_0" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_2_1" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_2_2" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_2_3" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_2_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_2_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_2_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_2_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_3 Message Station
+
+bucket "cpu_3_0" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_3_1" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_3_2" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_3_3" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_3_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_3_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_3_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_3_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_4 Message Station
+
+bucket "cpu_4_0" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_4_1" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_4_2" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_4_3" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_4_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_4_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_4_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_4_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+/*************************************************************/
+// CPU_5 Message Station
+
+bucket "cpu_5_0" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_5_1" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_5_2" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_5_3" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_5_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_5_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_5_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_5_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+
+/*************************************************************/
+// CPU_6 Message Station
+
+bucket "cpu_6_0" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_6_1" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_6_2" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_6_3" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_6_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_6_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_6_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_6_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+
+/*************************************************************/
+// CPU_7 Message Station
+
+bucket "cpu_7_0" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_7_1" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_7_2" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_7_3" {
+	size 32;
+/*BLAH
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+BLAH*/
+	"tx_stn_gmac" 8;
+	"tx_stn_sec"  16;
+}
+bucket "cpu_7_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_7_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_7_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+bucket "cpu_7_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+	"tx_stn_xgs_0" 8;
+	"tx_stn_xgs_1" 8;
+}
+
+
+/*************************************************************/
+// GMAC Message Station
+
+bucket "gmac_rfr_0" {
+	size 32;
+	"tx_stn_cpu_0" 2;
+	"tx_stn_cpu_1" 2;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+	"tx_stn_gmac" 4;
+}
+
+bucket "gmac_tx_0" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_1" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_2" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_3" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_rfr_1" {
+	size 32;
+	"tx_stn_cpu_0" 2;
+	"tx_stn_cpu_1" 2;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+	"tx_stn_gmac" 4;
+}
+/*********************************************/
+// xgmac
+bucket "xgs_0_rfr" {
+    size 32;
+    "tx_stn_cpu_0" 2;
+    "tx_stn_cpu_1" 2;
+    "tx_stn_cpu_2" 2;
+    "tx_stn_cpu_3" 2;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+    "tx_stn_xgs_0" 4;
+    "tx_stn_xgs_1" 4;
+}
+
+bucket "xgs_0_tx_0" {
+    size 32;
+    "tx_stn_cpu_0" 4;
+    "tx_stn_cpu_1" 4;
+    "tx_stn_cpu_2" 4;
+    "tx_stn_cpu_3" 4;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+}
+
+bucket "xgs_0_tx_1" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_2" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_3" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_4" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+bucket "xgs_0_tx_5" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_6" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_7" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_8" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_9" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_10" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_0_tx_11" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_12" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_13" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_0_tx_14" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_rfr" {
+    size 32;
+    "tx_stn_cpu_0" 2;
+    "tx_stn_cpu_1" 2;
+    "tx_stn_cpu_2" 2;
+    "tx_stn_cpu_3" 2;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+    "tx_stn_xgs_0" 4;
+    "tx_stn_xgs_1" 4;
+}
+
+bucket "xgs_1_tx_0" {
+    size 32;
+    "tx_stn_cpu_0" 4;
+    "tx_stn_cpu_1" 4;
+    "tx_stn_cpu_2" 4;
+    "tx_stn_cpu_3" 4;
+    "tx_stn_cpu_4" 4;
+    "tx_stn_cpu_5" 4;
+    "tx_stn_cpu_6" 4;
+    "tx_stn_cpu_7" 4;
+}
+
+
+bucket "xgs_1_tx_1" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_2" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_3" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_4" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_5" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_6" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_7" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_tx_8" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_tx_9" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+bucket "xgs_1_tx_10" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_11" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_12" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_13" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+bucket "xgs_1_tx_14" {
+  size 16;
+  "tx_stn_cpu_0" 2;
+  "tx_stn_cpu_1" 2;
+  "tx_stn_cpu_2" 2;
+  "tx_stn_cpu_3" 2;
+  "tx_stn_cpu_4" 2;
+  "tx_stn_cpu_5" 2;
+  "tx_stn_cpu_6" 2;
+  "tx_stn_cpu_7" 2;
+}
+
+
+
+
+
+
+/*************************************************************/
+// Security Message Station
+
+bucket "sec_pipe_0" {
+        size 128;
+        "tx_stn_cpu_0" 16;
+        "tx_stn_cpu_1" 16;
+        "tx_stn_cpu_2" 16;
+        "tx_stn_cpu_3" 16;
+        "tx_stn_cpu_4" 16;
+        "tx_stn_cpu_5" 16;
+        "tx_stn_cpu_6" 16;
+        "tx_stn_cpu_7" 16;
+}
+
+bucket "sec_rsa" {
+        size 128;
+        "tx_stn_cpu_0" 16;
+        "tx_stn_cpu_1" 16;
+        "tx_stn_cpu_2" 16;
+        "tx_stn_cpu_3" 16;
+        "tx_stn_cpu_4" 16;
+        "tx_stn_cpu_5" 16;
+        "tx_stn_cpu_6" 16;
+        "tx_stn_cpu_7" 16;
+}
+
+bucket "dma_chan_0" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+bucket "dma_chan_1" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+
+bucket "dma_chan_2" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+
+bucket "dma_chan_3" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
diff --git a/arch/mips/rmi/phoenix/msgring/msgring_shared.cfg b/arch/mips/rmi/phoenix/msgring/msgring_shared.cfg
new file mode 100644
index 0000000..079a7e5
--- /dev/null
+++ b/arch/mips/rmi/phoenix/msgring/msgring_shared.cfg
@@ -0,0 +1,487 @@
+/*********************************************************************
+ *
+ * Copyright 2003-2006 Raza Microelectronics, Inc. (RMI). All rights
+ * reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in
+ * the documentation and/or other materials provided with the
+ * distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Raza Microelectronics, Inc. ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RMI OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR PROFITS, OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * *****************************RMI_2**********************************/
+/*
+ *
+ * This file defines the message ring configuration for phoenix-8. It tries to allow
+ * many different point-point communications between the message stations on the
+ * message ring  and as result is _not_ the best configuration for performance
+ *
+ * Please refer to msgring.cfg for more information about editing message
+ * ring configuration files.
+ *
+ * This file is used in the specific cases where: 
+ *  1. linux is brought up on XLR ATX-II board with xlr_loader, shared_core 
+ *     and own_gmac options. 
+ *     Under this configuration, Linux and RMIOS applications can share a 
+ *     XLR core and also the message ring resources. However, Linux is 
+ *     allowed to use only gmac message ring stations. Based on how RMIOS 
+ *     application use other message ring stations, this file has to be edited. 
+ *     It is recommended that Linux intialize the message ring credits required 
+ *     for all cpus on shared core including those that will run RMIOS 
+ *     applications.
+ *
+ *  2. linux is brought up on ATX-III PCI-X card with xlr_loader and 
+ *     shared_core option.
+ *     Under this configuration, linux needs message ring credits for dma
+ *     station. Based on how RMIOS application use other message ring stations,
+ *     this file has to be edited. It is recommended that Linux intialize the
+ *     message ring credits required for all cpus on shared core including
+ *     those that will run RMIOS applications.
+ *
+ * Credits are assigned in this configuration so that both the above cases
+ * are handled. This is not the best configuration for performance or for
+ * specific requirements.
+ *
+ */
+
+/*************************************************************/
+// CPU_0 Message Station 
+
+bucket "cpu_0_0" { 
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_0_1" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_0_2" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_0_3" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_0_4" {
+	size 32;
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_0_5" {
+	size 32;
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_0_6" {
+	size 32;
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_0_7" {
+	size 32;
+	"tx_stn_gmac" 8;
+}
+
+/*************************************************************/
+// CPU_1 Message Station 
+
+bucket "cpu_1_0" { 
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_1_1" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_1_2" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_1_3" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_1_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_1_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_1_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_1_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+
+/*************************************************************/
+// CPU_2 Message Station 
+
+bucket "cpu_2_0" { 
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_2_1" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_2_2" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_2_3" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_2_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_2_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_2_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_2_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+
+/*************************************************************/
+// CPU_3 Message Station 
+
+bucket "cpu_3_0" { 
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_3_1" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_3_2" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_3_3" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_3_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_3_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_3_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_3_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+
+/*************************************************************/
+// CPU_4 Message Station 
+
+bucket "cpu_4_0" { 
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_4_1" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_4_2" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_4_3" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_4_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_4_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_4_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_4_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+
+/*************************************************************/
+// CPU_5 Message Station 
+
+bucket "cpu_5_0" { 
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_5_1" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_5_2" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_5_3" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_5_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_5_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_5_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_5_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+
+
+/*************************************************************/
+// CPU_6 Message Station 
+
+bucket "cpu_6_0" { 
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_6_1" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_6_2" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_6_3" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_6_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_6_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_6_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_6_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+
+
+/*************************************************************/
+// CPU_7 Message Station 
+
+bucket "cpu_7_0" { 
+	size 32;
+	"tx_stn_gmac" 8;
+	"tx_stn_dma" 4;
+}
+bucket "cpu_7_1" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_7_2" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_7_3" { 
+	size 32; 
+	"tx_stn_gmac" 8;
+}
+bucket "cpu_7_4" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_7_5" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_7_6" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+bucket "cpu_7_7" {
+	size 32;
+	"tx_stn_gmac" 16;
+}
+
+
+/*************************************************************/
+// GMAC Message Station 
+
+bucket "gmac_rfr_0" {
+	size 32;
+	"tx_stn_cpu_0" 2;
+	"tx_stn_cpu_1" 2;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+	"tx_stn_gmac" 4;
+}
+
+bucket "gmac_tx_0" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_1" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_2" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_tx_3" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+}
+
+bucket "gmac_rfr_1" {
+	size 32;
+	"tx_stn_cpu_0" 2;
+	"tx_stn_cpu_1" 2;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_cpu_4" 4;
+	"tx_stn_cpu_5" 4;
+	"tx_stn_cpu_6" 4;
+	"tx_stn_cpu_7" 4;
+	"tx_stn_gmac" 4;
+}
+
+bucket "dma_chan_0" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+bucket "dma_chan_1" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+
+bucket "dma_chan_2" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+
+bucket "dma_chan_3" {
+        size 64;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+        "tx_stn_cpu_4" 8;
+        "tx_stn_cpu_5" 8;
+        "tx_stn_cpu_6" 8;
+        "tx_stn_cpu_7" 8;
+}
+
+/*********************************************/
diff --git a/arch/mips/rmi/phoenix/msgring/msgring_xls.cfg b/arch/mips/rmi/phoenix/msgring/msgring_xls.cfg
new file mode 100644
index 0000000..11c715a
--- /dev/null
+++ b/arch/mips/rmi/phoenix/msgring/msgring_xls.cfg
@@ -0,0 +1,587 @@
+/*********************************************************************
+ *
+ * Copyright 2003-2006 Raza Microelectronics, Inc. (RMI). All rights
+ * reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in
+ * the documentation and/or other materials provided with the
+ * distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Raza Microelectronics, Inc. ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RMI OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR PROFITS, OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * *****************************RMI_2**********************************/
+
+
+/* 
+ * This file defines the message ring configuration for XLS two core. It tries to allow 
+ * many different point-point communications between the message stations on the message ring
+ * and as result is _not_ the best configuration for performance
+ *
+ * The message ring on phoenix family of processors connects the cpus, gmacs, xgmac/spi4,
+ * security engine and the general purpose DMA engines. It provides a high bandwidth,
+ * low latency communication links. On traditional processors, this communication goes through
+ * which inherently does not scale very well with increasing number of cpus. 
+ * 
+ * Message ring has an in-built flow control mechanism. Every agent/station on the ring has to
+ * have software configured credits to send messages to any agent. Every receiving agent on the
+ * ring has a 256 entry FIFO that can divided into "buckets". All addressing on the ring is 
+ * in terms of buckets. There are a total 128 buckets on the ring. The total number of credits 
+ * across all sending agents should not exceed the bucket size. 
+ *
+ * Below are the receiving agents and the max number of buckets they can have
+ * 	CPU 0	: 8 buckets
+ * 	CPU 1	: 8 buckets
+ * 
+ *	GMAC	: 8 buckets	
+ *	
+ *	SEC	: 8 buckets
+ * 
+ *	DMA	: 8 buckets
+ * 
+ *	CMP	: Currently disabled. 
+ *
+ * The bucket size of a bucket should be aligned to the bucket's starting index in that
+ * receiving station's FIFO. For example, if sizes of bucket0 and bucket1 of a station 
+ * are 32 and 32, bucket2's size has to be 64. bucket size 0 is valid.
+ *
+ * The format of the file is pretty straight forward. Each bucket definition has the size
+ * and the list of sending agents to that bucket with the number of credits to send.
+ * 
+ * Undefined buckets have a size of 0 and Tx stations have 0 credits to send to that bucket.
+ *
+ *  Following are the currently supported bucket names
+ *  cpu_0_0
+ *  cpu_0_1
+ *  cpu_0_2
+ *  cpu_0_3
+ *  cpu_0_4
+ *  cpu_0_5
+ *  cpu_0_6
+ *  cpu_0_7
+ *  
+ *  cpu_1_0
+ *  cpu_1_1
+ *  cpu_1_2
+ *  cpu_1_3
+ *  cpu_1_4
+ *  cpu_1_5
+ *  cpu_1_6
+ *  cpu_1_7
+ *
+ *  enabled only for xls-b0
+ *  cpu_2_0
+ *  cpu_2_1
+ *  cpu_2_2
+ *  cpu_2_3
+ *  cpu_2_4
+ *  cpu_2_5
+ *  cpu_2_6
+ *  cpu_2_7
+ *  
+ *  enabled only for xls-b0
+ *  cpu_3_0
+ *  cpu_3_1
+ *  cpu_3_2
+ *  cpu_3_3
+ *  cpu_3_4
+ *  cpu_3_5
+ *  cpu_3_6
+ *  cpu_3_7
+ *
+ *  gmac0_rfr
+ *  gmac0_tx_0
+ *  gmac0_tx_1
+ *  gmac0_tx_2
+ *  gmac0_tx_3
+ *  
+ *  gmac1_rfr
+ *  gmac1_tx_0
+ *  gmac1_tx_1
+ *  gmac1_tx_2
+ *  gmac1_tx_3
+ *
+ *  sec_pipe_0
+ *  sec_rsa
+ *
+ * Following are the currently supported Tx Agent/Station names
+ *
+ *  tx_stn_cpu_0
+ *  tx_stn_cpu_1
+ *
+ *  tx_stn_gmac0
+ *  tx_stn_gmac1
+ *
+ *  tx_stn_dma
+ *
+ *  tx_stn_sec
+ *
+ * 
+ */
+
+/*************************************************************/
+// CPU_0 Message Station 
+
+bucket "cpu_0_0" { 
+	size 32;
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  6;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+	"tx_stn_cpu_0" 1;
+	"tx_stn_cpu_1" 1; /* NEEDED BY RMIOS IPSEC */
+}
+bucket "cpu_0_1" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_0_2" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_0_3" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_0_4" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_0_5" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_0_6" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_0_7" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+
+/*************************************************************/
+// CPU_1 Message Station 
+
+bucket "cpu_1_0" { 
+	size 32;
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_1_1" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_1_2" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_1_3" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_cpu_0" 8; /* NEEDED BY RMIOS IPSEC */
+	"tx_stn_dma" 2;
+	"tx_stn_cmp" 2;
+}
+bucket "cpu_1_4" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_1_5" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_1_6" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_1_7" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+
+/*************************************************************/
+// CPU_2 Message Station 
+
+bucket "cpu_2_0" { 
+	size 32;
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_2_1" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_2_2" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_2_3" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_cpu_0" 8; /* NEEDED BY RMIOS IPSEC */
+	"tx_stn_dma" 2;
+	"tx_stn_cmp" 2;
+}
+bucket "cpu_2_4" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_2_5" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_2_6" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_2_7" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+
+
+/*************************************************************/
+// CPU_3 Message Station 
+bucket "cpu_3_0" { 
+	size 32;
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_3_1" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_3_2" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  8;
+	"tx_stn_dma" 4;
+	"tx_stn_cmp" 4;
+}
+bucket "cpu_3_3" { 
+	size 32; 
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+	"tx_stn_sec"  4;
+	"tx_stn_cpu_0" 8; /* NEEDED BY RMIOS IPSEC */
+	"tx_stn_dma" 2;
+	"tx_stn_cmp" 2;
+}
+bucket "cpu_3_4" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_3_5" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_3_6" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+bucket "cpu_3_7" {
+	size 32;
+	"tx_stn_gmac0" 6;
+	"tx_stn_gmac1" 6;
+	"tx_stn_dma" 6;
+	"tx_stn_cmp" 6;
+	"tx_stn_sec"  8;
+}
+
+/*************************************************************/
+
+// GMAC Message Station 
+
+bucket "gmac0_rfr" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+}
+
+bucket "gmac0_tx_0" {
+	size 32;
+	"tx_stn_cpu_0" 8;
+	"tx_stn_cpu_1" 8;
+	"tx_stn_cpu_2" 8;
+	"tx_stn_cpu_3" 8;
+}
+
+bucket "gmac0_tx_1" {
+	size 32;
+	"tx_stn_cpu_0" 8;
+	"tx_stn_cpu_1" 8;
+	"tx_stn_cpu_2" 8;
+	"tx_stn_cpu_3" 8;
+}
+
+bucket "gmac0_tx_2" {
+	size 32;
+	"tx_stn_cpu_0" 8;
+	"tx_stn_cpu_1" 8;
+	"tx_stn_cpu_2" 8;
+	"tx_stn_cpu_3" 8;
+}
+
+bucket "gmac0_tx_3" {
+	size 32;
+	"tx_stn_cpu_0" 8;
+	"tx_stn_cpu_1" 8;
+	"tx_stn_cpu_2" 8;
+	"tx_stn_cpu_3" 8;
+}
+
+bucket "gmac1_rfr" {
+	size 32;
+	"tx_stn_cpu_0" 4;
+	"tx_stn_cpu_1" 4;
+	"tx_stn_cpu_2" 4;
+	"tx_stn_cpu_3" 4;
+	"tx_stn_gmac0" 8;
+	"tx_stn_gmac1" 8;
+}
+
+bucket "gmac1_tx_0" {
+	size 32;
+	"tx_stn_cpu_0" 8;
+	"tx_stn_cpu_1" 8;
+	"tx_stn_cpu_2" 8;
+	"tx_stn_cpu_3" 8;
+}
+
+bucket "gmac1_tx_1" {
+	size 32;
+	"tx_stn_cpu_0" 8;
+	"tx_stn_cpu_1" 8;
+	"tx_stn_cpu_2" 8;
+	"tx_stn_cpu_3" 8;
+}
+
+bucket "gmac1_tx_2" {
+	size 32;
+	"tx_stn_cpu_0" 8;
+	"tx_stn_cpu_1" 8;
+	"tx_stn_cpu_2" 8;
+	"tx_stn_cpu_3" 8;
+}
+
+bucket "gmac1_tx_3" {
+	size 32;
+	"tx_stn_cpu_0" 8;
+	"tx_stn_cpu_1" 8;
+	"tx_stn_cpu_2" 8;
+	"tx_stn_cpu_3" 8;
+}
+
+/*************************************************************/
+// Security Message Station 
+
+bucket "sec_pipe_0" {
+	size 128;
+	"tx_stn_cpu_0" 32;
+	"tx_stn_cpu_1" 32;
+	"tx_stn_cpu_2" 32;
+	"tx_stn_cpu_3" 32;
+}
+
+bucket "sec_rsa_ecc" {
+	size 128;
+	"tx_stn_cpu_0" 32;
+	"tx_stn_cpu_1" 32;
+	"tx_stn_cpu_2" 32;
+	"tx_stn_cpu_3" 32;
+}
+
+bucket "dma_chan_0" {
+	size 64;
+	"tx_stn_cpu_0" 16;
+	"tx_stn_cpu_1" 16;
+	"tx_stn_cpu_2" 16;
+	"tx_stn_cpu_3" 16;
+}
+bucket "dma_chan_1" {
+	size 64;
+	"tx_stn_cpu_0" 16;
+	"tx_stn_cpu_1" 16;
+	"tx_stn_cpu_2" 16;
+	"tx_stn_cpu_3" 16;
+}
+
+bucket "dma_chan_2" {
+	size 64;
+	"tx_stn_cpu_0" 16;
+	"tx_stn_cpu_1" 16;
+	"tx_stn_cpu_2" 16;
+	"tx_stn_cpu_3" 16;
+}
+
+bucket "dma_chan_3" {
+	size 64;
+	"tx_stn_cpu_0" 16;
+	"tx_stn_cpu_1" 16;
+	"tx_stn_cpu_2" 16;
+	"tx_stn_cpu_3" 16;
+}
+
+/*************************************************************/
+// Compression Message Station
+
+bucket "cmp_0" {
+        size 32; 
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+}
+
+bucket "cmp_1" { 
+        size 32;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+}
+
+bucket "cmp_2" {
+        size 32; 
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+}
+
+bucket "cmp_3" {      
+        size 32;
+        "tx_stn_cpu_0" 8;
+        "tx_stn_cpu_1" 8;
+        "tx_stn_cpu_2" 8;
+        "tx_stn_cpu_3" 8;
+}
+
-- 
1.7.0.4

