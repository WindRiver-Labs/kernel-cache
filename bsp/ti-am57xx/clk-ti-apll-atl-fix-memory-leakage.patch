From 6e62af65d51c200784168af5f4beedf3f87ea272 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Fri, 15 Aug 2014 10:56:52 +0800
Subject: [PATCH 4/5] clk: ti: apll/atl: fix memory leakage

The variable 'parent_names' in these two functions is just a temporary
array which holds the pointers to the dt strings. After init the
corresponding struct with the pointers to the dt strings, we should
free this temporary array. The following is the call trace reported
by kmemleak:

unreferenced object 0xee819c40 (size 64):
  comm "swapper/0", pid 0, jiffies 4294937306 (age 169.360s)
  hex dump (first 32 bytes):
    68 91 ee c1 ac 8e ee c1 00 00 00 00 00 00 00 00  h...............
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  backtrace:
    [<c0b7acac>] log_early+0xa0/0xe4
    [<c0802c30>] kmemleak_alloc+0x6c/0x78
    [<c016abd4>] __kmalloc+0x1b4/0x458
    [<c0b90a84>] of_dra7_apll_setup+0x90/0x244
    [<c0b8fa6c>] of_clk_init+0x44/0x68
    [<c0b90f68>] dra7xx_clk_init+0x14/0x2d8
    [<c0b60834>] omap4_sync32k_timer_init+0x20/0x74
    [<c0b60a3c>] omap5_realtime_timer_init+0x10/0x19c
    [<c0b58f64>] time_init+0x24/0x38
    [<c0b549dc>] start_kernel+0x1dc/0x358
    [<80008074>] 0x80008074
    [<ffffffff>] 0xffffffff
        FAIL    kernel memleak check
        Tests Passed    : 8
        Tests Failed    : 1
        Tests Skiped    : 0
        Tests Manual    : 0
        Total Tested    : 9

unreferenced object 0xee802d00 (size 64):
  comm "swapper/0", pid 0, jiffies 4294937305 (age 2125.350s)
  hex dump (first 32 bytes):
    b4 04 ed c1 00 00 00 00 00 00 00 00 00 00 00 00  ................
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  backtrace:
    [<c0b58ebc>] log_early+0xa0/0xe4
    [<c07dabe0>] kmemleak_alloc+0x6c/0x78
    [<c016b444>] kmem_cache_alloc_trace+0x1a4/0x42c
    [<c0b6f7e8>] of_dra7_atl_clock_setup+0xb8/0x130
    [<c0b6da10>] of_clk_init+0x44/0x68
    [<c0b6ef0c>] dra7xx_clk_init+0x14/0x2d8
    [<c0b3ea20>] omap4_sync32k_timer_init+0x20/0x74
    [<c0b3ec28>] omap5_realtime_timer_init+0x10/0x19c
    [<c0b36f64>] time_init+0x24/0x38
    [<c0b329dc>] start_kernel+0x1dc/0x358
    [<80008074>] 0x80008074
    [<ffffffff>] 0xffffffff

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/clk/ti/apll.c         |    6 ++++++
 drivers/clk/ti/clk-dra7-atl.c |    2 ++
 2 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/drivers/clk/ti/apll.c b/drivers/clk/ti/apll.c
index 8590eba..c20280b 100644
--- a/drivers/clk/ti/apll.c
+++ b/drivers/clk/ti/apll.c
@@ -167,6 +167,11 @@ void __init of_dra7_apll_setup(struct device_node *node)
 
 	parent_names = kzalloc(sizeof(char *) * num_parents, GFP_KERNEL);
 
+	if (!parent_names) {
+		pr_err("%s: alloc memory for parent_names failure\n", __func__);
+		goto cleanup;
+	}
+
 	for (i = 0; i < num_parents; i++)
 		parent_names[i] = of_clk_get_parent_name(node, i);
 
@@ -202,6 +207,7 @@ void __init of_dra7_apll_setup(struct device_node *node)
 
 	if (!IS_ERR(clk))
 		of_clk_add_provider(node, of_clk_src_simple_get, clk);
+	kfree(parent_names);
 	return;
 
 cleanup:
diff --git a/drivers/clk/ti/clk-dra7-atl.c b/drivers/clk/ti/clk-dra7-atl.c
index 4a65b410..40ddbb0 100644
--- a/drivers/clk/ti/clk-dra7-atl.c
+++ b/drivers/clk/ti/clk-dra7-atl.c
@@ -199,11 +199,13 @@ static void __init of_dra7_atl_clock_setup(struct device_node *node)
 
 	if (!IS_ERR(clk)) {
 		of_clk_add_provider(node, of_clk_src_simple_get, clk);
+		kfree(parent_names);
 		return;
 	}
 cleanup:
 	kfree(parent_names);
 	kfree(clk_hw);
+	return;
 }
 CLK_OF_DECLARE(dra7_atl_clock, "ti,dra7-atl-clock", of_dra7_atl_clock_setup);
 
-- 
1.7.5.4

