From d6bde5b4e6c4aac80646f46a3b12ab9e93fac4f3 Mon Sep 17 00:00:00 2001
From: Afzal Mohammed <afzal@ti.com>
Date: Wed, 4 Dec 2013 19:35:13 +0530
Subject: [PATCH 045/263] bus: omap_l3_noc: mask unclearable flagmux source

This commit comes from branch ti-linux-3.12.y:
  git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git

Timeout errors in AM43x can't be cleared per h/w team, neither does it
have a STDERRLOG_MAIN to clear the error. Upon occurance of error from
such sources, mask it. Otherwise, isr would loop continously as
interrupt is not cleared at the source.

This change also helps in handling undocumented flagmux bits gracefully.

As currently, L3 timeout error is observed on every boot of
AM43x ePOS EVM, degrade from WARN to pr_warn. Also provide sufficient
information on the source of unclearable error.

Signed-off-by: Afzal Mohammed <afzal@ti.com>
(cherry picked from commit fa08e26bc3ebbde1e323aaf92324252fdcfc1972)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/bus/omap_l3_noc.c |   15 ++++++++++++---
 drivers/bus/omap_l3_noc.h |    4 ++++
 2 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/bus/omap_l3_noc.c b/drivers/bus/omap_l3_noc.c
index f74dfe0..4110572 100644
--- a/drivers/bus/omap_l3_noc.c
+++ b/drivers/bus/omap_l3_noc.c
@@ -82,9 +82,18 @@ static irqreturn_t l3_interrupt_handler(int irq, void *_l3)
 			/* Identify the source from control status register */
 			err_src = __ffs(err_reg);
 
-			if (*(l3->l3_targets[i] + err_src) == 0xdeadbeef) {
-				WARN(true, "L3 error for UN IDENTIFIED TARGET: %d\n",
-				     err_src);
+			if (*(l3->l3_targets[i] + err_src) ==
+						L3_FLAGMUX_TARGET_OFS_INVALID) {
+				u32 val;
+				void __iomem *reg = base + l3->l3_flag_mux[i] +
+					L3_FLAGMUX_MASK0 + (inttype << 3);
+
+				pr_warn("L3 %s error: target %d clkdm %d %s\n",
+					inttype ? "debug" : "application",
+					err_src, i, "(unclearable)");
+				val = readl(reg);
+				val &= ~(1 << err_src);
+				writel(val, reg);
 				break;
 			}
 
diff --git a/drivers/bus/omap_l3_noc.h b/drivers/bus/omap_l3_noc.h
index cd4e8e0..59cd395 100644
--- a/drivers/bus/omap_l3_noc.h
+++ b/drivers/bus/omap_l3_noc.h
@@ -36,6 +36,10 @@
 #define L3_TARG_STDERRLOG_SLVOFSLSB	0x5c
 #define L3_TARG_STDERRLOG_MSTADDR	0x68
 #define L3_FLAGMUX_REGERR0		0xc
+#define L3_FLAGMUX_MASK0		0x8
+
+#define L3_FLAGMUX_TARGET_OFS_INVALID	0xdeadbeef
+#define L3_FLAGMUX_TARGET_OFS_TIMEOUT	L3_FLAGMUX_TARGET_OFS_INVALID
 
 #define OMAP_NUM_OF_L3_MASTERS	(sizeof(omap_l3_masters)/sizeof(l3_masters[0]))
 
-- 
1.7.5.4

