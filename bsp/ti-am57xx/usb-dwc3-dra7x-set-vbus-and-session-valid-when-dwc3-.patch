From 47809b4a29ba0506593e5000167fc5e41c93b2fc Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 7 Jul 2014 13:41:51 +0800
Subject: [PATCH 193/263] usb: dwc3: dra7x: set vbus and session valid when
 dwc3 as peripheral

This commit comes from branch ti-linux-3.12.y:
  git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git

The d0aca223 comes from the following git repo:

  git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git

The dra7x dwc3 in peripheral mode does not generate vbus
change event when host machine supply vbus, hence does not
pull up DP/DM line to generate connect event to host.
	Hence during dwc3 peripheral init set the vbus and
session valid to make the dwc3-peripheral to pull-up DP/DM
generate connect event for host.

	This can also be done by checking the ID pin change
event during dual role switching for peripheral mode.
when ID is set for peripheral mode.
	To achieve this The ID pin from connector shall be
connected to interruptible IO expander I2C in the EVM schematic.

Change-Id: Iace5b49ce70ff4487d3d579fe3eac26388341eae
Signed-off-by: Ravi Babu <ravibabu@ti.com>
[addressed review comments in http://review.omapzoom.org/#/c/33357/
PatchSet#3]
Signed-off-by: Somnath Mukherjee <somnath@ti.com>
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/usb/dwc3/core.c       |   11 +++++++++++
 drivers/usb/dwc3/dwc3-omap.c  |   36 +++++++++++++++++++++++++++++-------
 include/linux/usb/dwc3-omap.h |    5 +++++
 3 files changed, 45 insertions(+), 7 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index 076ace9..e74f603 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -38,6 +38,7 @@
 #include <linux/usb/gadget.h>
 #include <linux/usb/of.h>
 #include <linux/usb/otg.h>
+#include <linux/usb/dwc3-omap.h>
 
 #include "platform_data.h"
 #include "core.h"
@@ -525,6 +526,13 @@ static int dwc3_probe(struct platform_device *pdev)
 
 	switch (dwc->dr_mode) {
 	case USB_DR_MODE_PERIPHERAL:
+		/* dra7xx-dwc3 in peripheral mode does not detect
+		 * vbus change event, hence set vbus and session
+		 * to cause connect to host-machine
+		 */
+		if (of_device_is_compatible(node, "synopsys,dra7xx-dwc3"))
+			dwc3_omap_vbus_connect(dwc->dev->parent);
+
 		dwc3_set_mode(dwc, DWC3_GCTL_PRTCAP_DEVICE);
 		ret = dwc3_gadget_init(dwc);
 		if (ret) {
@@ -760,6 +768,9 @@ static const struct of_device_id of_dwc3_match[] = {
 	{
 		.compatible = "synopsys,dwc3"
 	},
+	{
+		.compatible = "synopsys,dra7xx-dwc3"
+	},
 	{ },
 };
 MODULE_DEVICE_TABLE(of, of_dwc3_match);
diff --git a/drivers/usb/dwc3/dwc3-omap.c b/drivers/usb/dwc3/dwc3-omap.c
index dd36bc5..16b982a 100644
--- a/drivers/usb/dwc3/dwc3-omap.c
+++ b/drivers/usb/dwc3/dwc3-omap.c
@@ -197,6 +197,34 @@ static void dwc3_omap_write_irq0_set(struct dwc3_omap *omap, u32 value)
 						omap->irq0_offset, value);
 }
 
+int dwc3_omap_vbus_connect(struct device *dev)
+{
+	u32			val;
+	struct dwc3_omap	*omap;
+	struct platform_device	*pdev;
+
+	if (!dev)
+		return -ENODEV;
+
+	dev_dbg(omap->dev, "VBUS Connect\n");
+
+	pdev = to_platform_device(dev);
+	omap =  platform_get_drvdata(pdev);
+	if (!omap)
+		return -ENODEV;
+
+	val = dwc3_omap_readl(omap->base, USBOTGSS_UTMI_OTG_STATUS);
+	val &= ~USBOTGSS_UTMI_OTG_STATUS_SESSEND;
+	val |= USBOTGSS_UTMI_OTG_STATUS_IDDIG
+			| USBOTGSS_UTMI_OTG_STATUS_VBUSVALID
+			| USBOTGSS_UTMI_OTG_STATUS_SESSVALID
+			| USBOTGSS_UTMI_OTG_STATUS_POWERPRESENT;
+	dwc3_omap_writel(omap->base, USBOTGSS_UTMI_OTG_STATUS, val);
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(dwc3_omap_vbus_connect);
+
 int dwc3_omap_mailbox(enum omap_dwc3_vbus_id_status status)
 {
 	u32			val;
@@ -222,13 +250,7 @@ int dwc3_omap_mailbox(enum omap_dwc3_vbus_id_status status)
 	case OMAP_DWC3_VBUS_VALID:
 		dev_dbg(omap->dev, "VBUS Connect\n");
 
-		val = dwc3_omap_read_utmi_status(omap);
-		val &= ~USBOTGSS_UTMI_OTG_STATUS_SESSEND;
-		val |= USBOTGSS_UTMI_OTG_STATUS_IDDIG
-				| USBOTGSS_UTMI_OTG_STATUS_VBUSVALID
-				| USBOTGSS_UTMI_OTG_STATUS_SESSVALID
-				| USBOTGSS_UTMI_OTG_STATUS_POWERPRESENT;
-		dwc3_omap_write_utmi_status(omap, val);
+		dwc3_omap_vbus_connect(omap->dev);
 		break;
 
 	case OMAP_DWC3_ID_FLOAT:
diff --git a/include/linux/usb/dwc3-omap.h b/include/linux/usb/dwc3-omap.h
index 5615f4d..ee7accd 100644
--- a/include/linux/usb/dwc3-omap.h
+++ b/include/linux/usb/dwc3-omap.h
@@ -20,11 +20,16 @@ enum omap_dwc3_vbus_id_status {
 
 #if (defined(CONFIG_USB_DWC3) || defined(CONFIG_USB_DWC3_MODULE))
 extern int dwc3_omap_mailbox(enum omap_dwc3_vbus_id_status status);
+extern int dwc3_omap_vbus_connect(struct device *dev);
 #else
 static inline int dwc3_omap_mailbox(enum omap_dwc3_vbus_id_status status)
 {
 	return -ENODEV;
 }
+static int dwc3_omap_vbus_connect(struct device *dev)
+{
+	return -ENODEV;
+}
 #endif
 
 #endif	/* __DWC3_OMAP_H__ */
-- 
1.7.5.4

