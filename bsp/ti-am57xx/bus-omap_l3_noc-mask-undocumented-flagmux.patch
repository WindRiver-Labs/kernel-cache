From 6f54940d768f76659c94a7eaf4944b02d972d7ad Mon Sep 17 00:00:00 2001
From: Afzal Mohammed <afzal@ti.com>
Date: Wed, 18 Dec 2013 19:00:16 +0530
Subject: [PATCH 048/263] bus: omap_l3_noc: mask undocumented flagmux

This commit comes from branch ti-linux-3.12.y:
  git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git

On AM43x HS device, in certain scenarios, L3 errors that are
undocumented (those after highest value bit in flagmux) are occuring.
They can't be cleared as documentation mentions nothing about those
errors. Have the driver handle it the same way as for timeout, else isr
loops endlessly.

Signed-off-by: Rajendra Nayak <rnayak@ti.com>
Signed-off-by: Afzal Mohammed <afzal@ti.com>
(cherry picked from commit 8606b37ad52d07a66d52cfaf578f162c1fd59d35)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/bus/omap_l3_noc.c |    5 +++--
 drivers/bus/omap_l3_noc.h |   10 ++++++++++
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/drivers/bus/omap_l3_noc.c b/drivers/bus/omap_l3_noc.c
index 3c60922..3771e97 100644
--- a/drivers/bus/omap_l3_noc.c
+++ b/drivers/bus/omap_l3_noc.c
@@ -84,8 +84,9 @@ static irqreturn_t l3_interrupt_handler(int irq, void *_l3)
 			/* Identify the source from control status register */
 			err_src = __ffs(err_reg);
 
-			if (*(l3->l3_targets[i] + err_src) ==
-						L3_FLAGMUX_TARGET_OFS_INVALID) {
+			if ((err_src >= l3->num_targets[i]) ||
+			    (*(l3->l3_targets[i] + err_src) ==
+			    L3_FLAGMUX_TARGET_OFS_INVALID)) {
 				u32 val;
 				void __iomem *reg = base + l3->l3_flag_mux[i] +
 					L3_FLAGMUX_MASK0 + (inttype << 3);
diff --git a/drivers/bus/omap_l3_noc.h b/drivers/bus/omap_l3_noc.h
index 42e0786..e9739e3 100644
--- a/drivers/bus/omap_l3_noc.h
+++ b/drivers/bus/omap_l3_noc.h
@@ -293,6 +293,7 @@ struct omap_l3 {
 	int app_irq;
 	int num_modules;
 	int num_masters;
+	unsigned num_targets[MAX_L3_MODULES];
 };
 
 struct omap_l3 omap_l3_data = {
@@ -303,6 +304,11 @@ struct omap_l3 omap_l3_data = {
 	.num_modules = OMAP_L3_MODULES,
 	.num_masters = sizeof(omap_l3_masters)/sizeof(struct l3_masters_data),
 	.l3_flag_mux = omap_l3_flagmux,
+	.num_targets = {
+		ARRAY_SIZE(omap_l3_targ_inst_clk1),
+		ARRAY_SIZE(omap_l3_targ_inst_clk2),
+		ARRAY_SIZE(omap_l3_targ_inst_clk3),
+	},
 };
 
 struct omap_l3 am4372_l3_data = {
@@ -313,6 +319,10 @@ struct omap_l3 am4372_l3_data = {
 	.num_modules = AM4372_L3_MODULES,
 	.num_masters = sizeof(am4372_l3_masters)/sizeof(struct l3_masters_data),
 	.l3_flag_mux = am4372_l3_flagmux,
+	.num_targets = {
+		ARRAY_SIZE(am4372_l3_targ_inst_200f),
+		ARRAY_SIZE(am4372_l3_targ_inst_100s),
+	},
 };
 
 #endif
-- 
1.7.5.4

