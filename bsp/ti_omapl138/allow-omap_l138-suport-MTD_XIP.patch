From 75918575982653041bf4410a2e9df0595004c1eb Mon Sep 17 00:00:00 2001
From: Stanley.Miao <stanley.miao@windriver.com>
Date: Mon, 30 Aug 2010 16:02:46 +0800
Subject: [PATCH 1/2] allow omap_l138 suport MTD_XIP

xip_irqpending(), xip_currtime(), and xip_elapsed_since() are required by
the function xip_wait_for_operation() in cfi_cmdset_0001.c, now we define
these three functions in mach/mtd-xip.h to support MTD_XIP feature.

Signed-off-by: Stanley.Miao <stanley.miao@windriver.com>
---
 arch/arm/mach-davinci/Kconfig                |    1 +
 arch/arm/mach-davinci/cp_intc.c              |    2 +-
 arch/arm/mach-davinci/include/mach/cp_intc.h |    1 +
 arch/arm/mach-davinci/include/mach/mtd-xip.h |   24 ++++++++++++++++++++++++
 arch/arm/mach-davinci/include/mach/time.h    |    5 +++++
 arch/arm/mach-davinci/time.c                 |    4 ++--
 6 files changed, 34 insertions(+), 3 deletions(-)
 create mode 100644 arch/arm/mach-davinci/include/mach/mtd-xip.h

diff --git a/arch/arm/mach-davinci/Kconfig b/arch/arm/mach-davinci/Kconfig
index 159f9c9..8e2886a 100644
--- a/arch/arm/mach-davinci/Kconfig
+++ b/arch/arm/mach-davinci/Kconfig
@@ -39,6 +39,7 @@ config ARCH_DAVINCI_DA850
 	select CP_INTC
 	select ARCH_DAVINCI_DA8XX
 	select ARCH_HAS_CPUFREQ
+	select ARCH_MTD_XIP
 
 choice
 	prompt "Select Maximum DA8xx/OMAP-L1 SoC speed"
diff --git a/arch/arm/mach-davinci/cp_intc.c b/arch/arm/mach-davinci/cp_intc.c
index 37311d1..c22039a 100644
--- a/arch/arm/mach-davinci/cp_intc.c
+++ b/arch/arm/mach-davinci/cp_intc.c
@@ -17,7 +17,7 @@
 
 static void __iomem *cp_intc_base;
 
-static inline unsigned int cp_intc_read(unsigned offset)
+inline unsigned int cp_intc_read(unsigned offset)
 {
 	return __raw_readl(cp_intc_base + offset);
 }
diff --git a/arch/arm/mach-davinci/include/mach/cp_intc.h b/arch/arm/mach-davinci/include/mach/cp_intc.h
index c4d27ee..faa1bb2 100644
--- a/arch/arm/mach-davinci/include/mach/cp_intc.h
+++ b/arch/arm/mach-davinci/include/mach/cp_intc.h
@@ -53,5 +53,6 @@
 
 void __init cp_intc_init(void __iomem *base, unsigned short num_irq,
 			 u8 *irq_prio);
+extern inline unsigned int cp_intc_read(unsigned offset);
 
 #endif	/* __ASM_HARDWARE_CP_INTC_H */
diff --git a/arch/arm/mach-davinci/include/mach/mtd-xip.h b/arch/arm/mach-davinci/include/mach/mtd-xip.h
new file mode 100644
index 0000000..f00a0b5
--- /dev/null
+++ b/arch/arm/mach-davinci/include/mach/mtd-xip.h
@@ -0,0 +1,24 @@
+/*
+ * MTD primitives for XIP support. Architecture specific functions.
+ *
+ * Do not include this file directly. It's included from linux/mtd/xip.h
+ *
+ * Author: Stanley Miao <stanley.miao@windriver.com>
+ *
+ * (c) 2010 WindRiver, Inc.  This file is licensed under the
+ * terms of the GNU General Public License version 2.  This program is
+ * licensed "as is" without any warranty of any kind, whether express or
+ * implied.
+ */
+
+#ifndef __ARCH_DAVINCI_MTD_XIP_H__
+#define __ARCH_DAVINCI_MTD_XIP_H__
+
+#include <mach/cp_intc.h>
+#include <mach/time.h>
+
+#define xip_irqpending()	(cp_intc_read(1) & (1 << 31))
+#define xip_currtime()		read_cycles(&clocksource_davinci)
+#define xip_elapsed_since(x)	(read_cycles(&clocksource_davinci) - (x))
+
+#endif /*  __ARCH_DAVINCI_MTD_XIP_H__*/
diff --git a/arch/arm/mach-davinci/include/mach/time.h b/arch/arm/mach-davinci/include/mach/time.h
index 1c971d8..d60a5d3 100644
--- a/arch/arm/mach-davinci/include/mach/time.h
+++ b/arch/arm/mach-davinci/include/mach/time.h
@@ -11,6 +11,9 @@
 #ifndef __ARCH_ARM_MACH_DAVINCI_TIME_H
 #define __ARCH_ARM_MACH_DAVINCI_TIME_H
 
+#include <linux/clocksource.h>
+#include <mach/common.h>
+
 #define DAVINCI_TIMER0_BASE		(IO_PHYS + 0x21400)
 #define DAVINCI_TIMER1_BASE		(IO_PHYS + 0x21800)
 #define DAVINCI_WDOG_BASE		(IO_PHYS + 0x21C00)
@@ -31,5 +34,7 @@ enum {
 #define ID_TO_TIMER(id)		(IS_TIMER1(id) != 0)
 
 extern struct davinci_timer_instance davinci_timer_instance[];
+extern cycle_t read_cycles(struct clocksource *cs);
+extern struct clocksource clocksource_davinci;
 
 #endif /* __ARCH_ARM_MACH_DAVINCI_TIME_H */
diff --git a/arch/arm/mach-davinci/time.c b/arch/arm/mach-davinci/time.c
index 9e0b106..7972e1f 100644
--- a/arch/arm/mach-davinci/time.c
+++ b/arch/arm/mach-davinci/time.c
@@ -259,14 +259,14 @@ static void __init timer_init(void)
 /*
  * clocksource
  */
-static cycle_t read_cycles(struct clocksource *cs)
+cycle_t read_cycles(struct clocksource *cs)
 {
 	struct timer_s *t = &timers[TID_CLOCKSOURCE];
 
 	return (cycles_t)timer32_read(t);
 }
 
-static struct clocksource clocksource_davinci = {
+struct clocksource clocksource_davinci = {
 	.rating		= 300,
 	.read		= read_cycles,
 	.mask		= CLOCKSOURCE_MASK(32),
-- 
1.6.5.2

