From dba92a5c2659c668a904c105ac9aafdba7d6266c Mon Sep 17 00:00:00 2001
From: Sekhar Nori <nsekhar@ti.com>
Date: Wed, 10 Feb 2010 18:02:44 +0530
Subject: [PATCH 3/5] fb: da8xx: fix LCD becoming non-responsive after multiple suspends

Original codes from TI Linux Platform Support Package
DaVinci-PSP-SDK-03.20.00.12.tgz http://software-dl.ti.com/dsps/
dsps_public_sw/sdo_sb/targetcontent/psp/DaVinci-PSP-SDK/03_20/index_FDS.html

It is observed that LCD becomes non-responsive (does not
take new data) after multiple suspend resume operations.
This patch fixes that issue.

In suspend:
1) After disabling raster, wait for current frame to finish
   before disabling LCD module clock.
2) Power down the panel after raster is disabled.

On resume, enable the LCD module before panel is powered up.

Integrated-by: Stanley.Miao <stanley.miao@windriver.com>
---
 drivers/video/da8xx-fb.c |   24 ++++++++++++++++++++++--
 1 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/drivers/video/da8xx-fb.c b/drivers/video/da8xx-fb.c
index a74383d..da341df 100644
--- a/drivers/video/da8xx-fb.c
+++ b/drivers/video/da8xx-fb.c
@@ -978,13 +978,30 @@ static int fb_suspend(struct platform_device *dev, pm_message_t state)
 {
 	struct fb_info *info = platform_get_drvdata(dev);
 	struct da8xx_fb_par *par = info->par;
+	unsigned long timeo = jiffies + msecs_to_jiffies(5000);
+	u32 stat;
 
 	acquire_console_sem();
+
 	if (par->panel_power_ctrl)
 		par->panel_power_ctrl(0);
 
 	fb_set_suspend(info, 1);
 	lcd_disable_raster();
+
+	/* Wait for the current frame to complete */
+	do {
+		stat = lcdc_read(LCD_STAT_REG);
+		cpu_relax();
+	} while (!(stat & BIT(0)) && time_before(jiffies, timeo));
+
+	lcdc_write(stat, LCD_STAT_REG);
+
+	if (time_after_eq(jiffies, timeo)) {
+		dev_err(&dev->dev, "controller timed out\n");
+		return -ETIMEDOUT;
+	}
+
 	clk_disable(par->lcdc_clk);
 	release_console_sem();
 
@@ -996,11 +1013,14 @@ static int fb_resume(struct platform_device *dev)
 	struct da8xx_fb_par *par = info->par;
 
 	acquire_console_sem();
-	if (par->panel_power_ctrl)
-		par->panel_power_ctrl(1);
 
 	clk_enable(par->lcdc_clk);
+
 	lcd_enable_raster();
+
+	if (par->panel_power_ctrl)
+		par->panel_power_ctrl(1);
+
 	fb_set_suspend(info, 0);
 	release_console_sem();
 
-- 
1.6.5.2

