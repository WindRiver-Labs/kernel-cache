From 044892852b5d00d05f359fc21ea585965b0dbe12 Mon Sep 17 00:00:00 2001
From: Stanley.Miao <stanley.miao@windriver.com>
Date: Thu, 5 Nov 2009 17:53:15 +0800
Subject: [PATCH 10/43] Add the support for SPI on L138

Original codes from TI Linux Platform Support Package
DaVinci-PSP-SDK-03.20.00.05.tgz http://software-dl.ti.com/dsps/
dsps_public_sw/sdo_sb/targetcontent/psp/DaVinci-PSP-SDK/03_20/index_FDS.html

1, Add the Davinci SPI platform data.
2, Add the SPI flash informations.

Signed-off-by: Stanley.Miao <stanley.miao@windriver.com>
---
 arch/arm/mach-davinci/board-da850-evm.c    |   69 +++++++++++++++++++++++++++
 arch/arm/mach-davinci/da850.c              |   70 ++++++++++++++++++++++++++++
 arch/arm/mach-davinci/include/mach/da8xx.h |    4 ++
 drivers/spi/davinci_spi.c                  |    1 -
 4 files changed, 143 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-davinci/board-da850-evm.c b/arch/arm/mach-davinci/board-da850-evm.c
index 6c7b817..0a8e4e3 100644
--- a/arch/arm/mach-davinci/board-da850-evm.c
+++ b/arch/arm/mach-davinci/board-da850-evm.c
@@ -24,6 +24,9 @@
 #include <linux/serial.h>
 #include <linux/io.h>
 #include <linux/console.h>
+#include <linux/spi/spi.h>
+#include <linux/spi/flash.h>
+#include <linux/spi/davinci_spi_master.h>
 
 #include <asm/setup.h>
 #include <asm/mach-types.h>
@@ -40,6 +43,9 @@
 #include <mach/i2c.h>
 #include <linux/platform_device.h>
 #include <linux/i2c.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/nand.h>
+#include <linux/mtd/partitions.h>
 #include <mach/emac.h>
 #include <mach/cp_intc.h>
 
@@ -54,6 +60,65 @@ static struct emac_platform_data da850_evm_emac_pdata = {
 	.rmii_en	= 0,
 };
 
+static struct mtd_partition spi_flash_partitions[] = {
+	[0] = {
+		.name = "U-Boot",
+		.offset = 0,
+		.size = SZ_256K,
+		.mask_flags = MTD_WRITEABLE,
+	},
+	[1] = {
+		.name = "U-Boot Environment",
+		.offset = MTDPART_OFS_APPEND,
+		.size = SZ_16K,
+		.mask_flags = MTD_WRITEABLE,
+	},
+	[2] = {
+		.name = "Linux",
+		.offset = MTDPART_OFS_NXTBLK,
+		.size = MTDPART_SIZ_FULL,
+		.mask_flags = 0,
+	},
+};
+
+struct davinci_spi_config_t w25x64_spi_cfg = {
+	.wdelay         = 0,
+	.odd_parity     = 0,
+	.parity_enable  = 0,
+	.wait_enable    = 0,
+	.lsb_first      = 0,
+	.timer_disable  = 0,
+	.clk_high       = 0,
+	.phase_in       = 1,
+	.clk_internal   = 1,
+	.loop_back      = 0,
+	.cs_hold        = 1,
+	.intr_level     = 0,
+	.pin_op_modes   = SPI_OPMODE_SPISCS_4PIN,
+#ifndef CONFIG_SPI_INTERRUPT
+	.poll_mode      = 1,
+#endif
+};
+
+static struct flash_platform_data spi_flash_data = {
+	.name = "m25p80",
+	.parts = spi_flash_partitions,
+	.nr_parts = ARRAY_SIZE(spi_flash_partitions),
+	.type = "m25p64",
+};
+
+static struct spi_board_info da850_spi_board_info0[] = {
+	[0] = {
+		.modalias = "m25p80",
+		.platform_data = &spi_flash_data,
+		.controller_data = &w25x64_spi_cfg,
+		.mode = SPI_MODE_0,
+		.max_speed_hz = 30000000,       /* max sample rate at 3V */
+		.bus_num = 1,
+		.chip_select = 0,
+	},
+};
+
 static int eth_addr_setup(char *str)
 {
 	int i;
@@ -115,6 +180,10 @@ static __init void da850_evm_init(void)
 	__raw_writel(0, IO_ADDRESS(DA8XX_UART0_BASE) + 0x30);
 
 	da850_evm_init_i2c();
+
+	da850_init_spi1(NULL, 1, da850_spi_board_info0,
+			ARRAY_SIZE(da850_spi_board_info0));
+
 	if (da850_evm_emac_pdata.rmii_en) {
 		/* RMII */
 		__raw_writel((__raw_readl(addr)) | BIT(8), addr);
diff --git a/arch/arm/mach-davinci/da850.c b/arch/arm/mach-davinci/da850.c
index ae2d1af..c59da03 100644
--- a/arch/arm/mach-davinci/da850.c
+++ b/arch/arm/mach-davinci/da850.c
@@ -12,6 +12,7 @@
 #include <linux/init.h>
 #include <linux/clk.h>
 #include <linux/platform_device.h>
+#include <linux/spi/davinci_spi_master.h>
 #include <linux/io.h>
 
 #include <mach/da8xx.h>
@@ -730,6 +731,75 @@ static struct platform_device da850_edma1_device = {
 	.resource		= edma1_resources,
 };
 
+static struct davinci_spi_platform_data da850_spi_pdata1 = {
+	.version = DAVINCI_SPI_VERSION_2,
+	.clk_name = "spi1",
+	.cc_inst = 0
+};
+
+static struct resource da850_spi_resources1[] = {
+	[0] = {
+		.start = 0x01F0E000,
+		.end = 0x01F0E000 + 0xfff,
+		.flags = IORESOURCE_MEM,
+	},
+	[1] = {
+		.start = IRQ_DA8XX_SPINT1,
+		.end = IRQ_DA8XX_SPINT1,
+		.flags = IORESOURCE_IRQ,
+	},
+	[2] = {
+		.start = EDMA_CTLR_CHAN(0, 18),
+		.end = EDMA_CTLR_CHAN(0, 18),
+		.flags = IORESOURCE_DMA | IORESOURCE_DMA_RX_CHAN,
+	},
+	[3] = {
+		.start = EDMA_CTLR_CHAN(0, 19),
+		.end = EDMA_CTLR_CHAN(0, 19),
+		.flags = IORESOURCE_DMA | IORESOURCE_DMA_TX_CHAN,
+	},
+	[4] = {
+		.start = 1,
+		.end = 1,
+		.flags = IORESOURCE_DMA | IORESOURCE_DMA_EVENT_Q,
+	},
+};
+
+static struct platform_device da850_spi_pdev1 = {
+	.name = "dm_spi",
+	.id = 1,
+	.resource = da850_spi_resources1,
+	.num_resources = ARRAY_SIZE(da850_spi_resources1),
+	.dev = {
+		.platform_data = &da850_spi_pdata1,
+	},
+};
+
+void __init da850_init_spi1(unsigned char *chip_sel, unsigned int num_sel,
+	struct spi_board_info *info, unsigned num_dev)
+{
+	struct davinci_spi_platform_data *pdata =
+			da850_spi_pdev1.dev.platform_data;
+
+	/* TODO
+	* 1.  remove ENA pin mux. It is likely not used anywhere.
+	* 2.  do pinmux based on chipsel mask ala DM355
+	*/
+
+	davinci_cfg_reg(DA850_SPI1_SOMI);
+	davinci_cfg_reg(DA850_SPI1_SIMO);
+	davinci_cfg_reg(DA850_SPI1_CLK);
+
+	if (num_sel && (!chip_sel || chip_sel[0] == DAVINCI_SPI_INTERN_CS))
+		davinci_cfg_reg(DA850_SPI1_CS_0);
+
+	spi_register_board_info(info, num_dev);
+
+	pdata->chip_sel = chip_sel;
+	pdata->num_chipselect = num_sel;
+	platform_device_register(&da850_spi_pdev1);
+}
+
 #if defined(CONFIG_TI_DAVINCI_EMAC) || defined(CONFIG_TI_DAVINCI_EMAC_MODULE)
 
 static struct resource da850_emac_resources[] = {
diff --git a/arch/arm/mach-davinci/include/mach/da8xx.h b/arch/arm/mach-davinci/include/mach/da8xx.h
index 227afb3..d667093 100644
--- a/arch/arm/mach-davinci/include/mach/da8xx.h
+++ b/arch/arm/mach-davinci/include/mach/da8xx.h
@@ -27,6 +27,10 @@
 
 void __init da850_init(void);
 
+struct spi_board_info;
+void __init da850_init_spi1(unsigned char *chip_sel, unsigned int num_sel,
+	struct spi_board_info *info, unsigned num_dev);
+
 void da830_init_emac(struct emac_platform_data *);
 void da850_init_emac(struct emac_platform_data *);
 int get_async3_src(void);
diff --git a/drivers/spi/davinci_spi.c b/drivers/spi/davinci_spi.c
index dce80b5..0f5beab 100644
--- a/drivers/spi/davinci_spi.c
+++ b/drivers/spi/davinci_spi.c
@@ -23,7 +23,6 @@
 #include <linux/dma-mapping.h>
 #include <linux/io.h>
 #include <mach/edma.h>
-#include <mach/cputype.h>
 #include <mach/mux.h>
 #include <mach/gpio.h>
 
-- 
1.6.5.2

