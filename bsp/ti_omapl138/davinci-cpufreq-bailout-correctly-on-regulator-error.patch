From 0e37d21cedc27c6271a06c4bb4ecd74a5152bc5d Mon Sep 17 00:00:00 2001
From: Sekhar Nori <nsekhar@ti.com>
Date: Sun, 31 Jan 2010 16:56:57 +0530
Subject: [PATCH 18/23] davinci: cpufreq: bailout correctly on regulator errors

Original codes from TI Linux Platform Support Package
DaVinci-PSP-SDK-03.20.00.12.tgz http://software-dl.ti.com/dsps/
dsps_public_sw/sdo_sb/targetcontent/psp/DaVinci-PSP-SDK/03_20/index_FDS.html

Currently, code to increase CPU  frequency goes ahead even in
case, the regulator failed to increase the voltage. This leads
to hard error since lower voltages cannot support increased
frequency.

Prevent this by not increasing frequency in case increasing
voltage is not successful.

Integrated-by: Stanley.Miao <stanley.miao@windriver.com>
---
 arch/arm/mach-davinci/cpufreq.c |   18 +++++++++++++-----
 1 files changed, 13 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-davinci/cpufreq.c b/arch/arm/mach-davinci/cpufreq.c
index f825469..ea0ae0d 100644
--- a/arch/arm/mach-davinci/cpufreq.c
+++ b/arch/arm/mach-davinci/cpufreq.c
@@ -106,18 +106,26 @@ static int davinci_target(struct cpufreq_policy *policy,
 	cpufreq_notify_transition(&freqs, CPUFREQ_PRECHANGE);
 
 	/* if moving to higher frequency, up the voltage beforehand */
-	if (pdata->set_voltage && freqs.new > freqs.old)
-		pdata->set_voltage(idx);
+	if (pdata->set_voltage && freqs.new > freqs.old) {
+		ret = pdata->set_voltage(idx);
+		if (ret)
+			goto out;
+	}
 
 	ret = clk_set_rate(armclk, idx);
+	if (ret)
+		goto out;
 
-	if (!ret && cpufreq.asyncclk)
+	if (cpufreq.asyncclk) {
 		ret = clk_set_rate(cpufreq.asyncclk, cpufreq.asyncrate);
+		if (ret)
+			goto out;
+	}
 
 	/* if moving to lower freq, lower the voltage after lowering freq */
 	if (pdata->set_voltage && freqs.new < freqs.old)
-		pdata->set_voltage(idx);
-
+		ret = pdata->set_voltage(idx);
+out:
 	cpufreq_notify_transition(&freqs, CPUFREQ_POSTCHANGE);
 
 	return ret;
-- 
1.6.5.2

