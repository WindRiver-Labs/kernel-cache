From eec1fe5650ffe4205780117b4415675ef4d08adc Mon Sep 17 00:00:00 2001
From: Stanley.Miao <stanley.miao@windriver.com>
Date: Thu, 27 May 2010 17:38:28 +0800
Subject: [PATCH 20/23] davinci: da850/omap-l138: add support for 456mhz and other OPPs

Original codes from TI Linux Platform Support Package
DaVinci-PSP-SDK-03.20.00.12.tgz http://software-dl.ti.com/dsps/
dsps_public_sw/sdo_sb/targetcontent/psp/DaVinci-PSP-SDK/03_20/index_FDS.html

New OPPs have been defined on the DA850/OMAP-L138
SoC which lets the maximum CPU speed to reach 456MHz.

A kernel configuration option has been added to let
users choose if they want to remain at 300MHz or move to
other available higher OPPs.

Integrated-by: Stanley.Miao <stanley.miao@windriver.com>
---
 arch/arm/mach-davinci/Kconfig                |   19 ++++++
 arch/arm/mach-davinci/board-da850-evm.c      |    2 +-
 arch/arm/mach-davinci/da850.c                |   89 +++++++++++++++++++------
 arch/arm/mach-davinci/include/mach/cputype.h |    2 +
 arch/arm/mach-davinci/include/mach/da8xx.h   |   25 +++++++
 5 files changed, 114 insertions(+), 23 deletions(-)

diff --git a/arch/arm/mach-davinci/Kconfig b/arch/arm/mach-davinci/Kconfig
index 0ebe185..159f9c9 100644
--- a/arch/arm/mach-davinci/Kconfig
+++ b/arch/arm/mach-davinci/Kconfig
@@ -40,6 +40,25 @@ config ARCH_DAVINCI_DA850
 	select ARCH_DAVINCI_DA8XX
 	select ARCH_HAS_CPUFREQ
 
+choice
+	prompt "Select Maximum DA8xx/OMAP-L1 SoC speed"
+	depends on ARCH_DAVINCI_DA8XX
+	help
+	  Select the maximum speed the SoC can operate at.
+
+config DA8XX_MAX_SPEED_300
+	bool "300 MHz"
+
+config DA8XX_MAX_SPEED_372
+	bool "372 MHz"
+
+config DA8XX_MAX_SPEED_408
+	bool "408 MHz"
+
+config DA8XX_MAX_SPEED_456
+	bool "456 MHz"
+endchoice
+
 config ARCH_DAVINCI_DA8XX
 	bool
 
diff --git a/arch/arm/mach-davinci/board-da850-evm.c b/arch/arm/mach-davinci/board-da850-evm.c
index 22070ec..c329446 100644
--- a/arch/arm/mach-davinci/board-da850-evm.c
+++ b/arch/arm/mach-davinci/board-da850-evm.c
@@ -547,7 +547,7 @@ struct regulator_init_data tps65070_regulator_data[] = {
 	{
 		.constraints = {
 			.min_uV = 950000,
-			.max_uV = 1320000,
+			.max_uV = 1380000,
 			.valid_ops_mask = (REGULATOR_CHANGE_VOLTAGE |
 				REGULATOR_CHANGE_STATUS),
 			.boot_on = 1,
diff --git a/arch/arm/mach-davinci/da850.c b/arch/arm/mach-davinci/da850.c
index fa55583..426e5aa 100644
--- a/arch/arm/mach-davinci/da850.c
+++ b/arch/arm/mach-davinci/da850.c
@@ -921,12 +921,39 @@ struct da850_opp {
 	unsigned int	cvdd_max; /* in uV */
 };
 
+static const struct da850_opp da850_opp_456 = {
+	.freq		= 456000,
+	.prediv		= 1,
+	.mult		= 19,
+	.postdiv	= 1,
+	.cvdd_min	= 1300000,
+	.cvdd_max	= 1380000,
+};
+
+static const struct da850_opp da850_opp_408 = {
+	.freq		= 408000,
+	.prediv		= 1,
+	.mult		= 17,
+	.postdiv	= 1,
+	.cvdd_min	= 1300000,
+	.cvdd_max	= 1320000,
+};
+
+static const struct da850_opp da850_opp_372 = {
+	.freq		= 372000,
+	.prediv		= 1,
+	.mult		= 31,
+	.postdiv	= 2,
+	.cvdd_min	= 1200000,
+	.cvdd_max	= 1320000,
+};
+
 static const struct da850_opp da850_opp_300 = {
 	.freq		= 300000,
 	.prediv		= 1,
 	.mult		= 25,
 	.postdiv	= 2,
-	.cvdd_min	= 1140000,
+	.cvdd_min	= 1200000,
 	.cvdd_max	= 1320000,
 };
 
@@ -935,7 +962,7 @@ static const struct da850_opp da850_opp_200 = {
 	.prediv		= 1,
 	.mult		= 25,
 	.postdiv	= 3,
-	.cvdd_min	= 1050000,
+	.cvdd_min	= 1100000,
 	.cvdd_max	= 1160000,
 };
 
@@ -955,6 +982,9 @@ static const struct da850_opp da850_opp_96 = {
 	}
 
 static struct cpufreq_frequency_table da850_freq_table[] = {
+	OPP(456),
+	OPP(408),
+	OPP(372),
 	OPP(300),
 	OPP(200),
 	OPP(96),
@@ -965,16 +995,37 @@ static struct cpufreq_frequency_table da850_freq_table[] = {
 };
 
 #ifdef CONFIG_REGULATOR
+static int da850_set_voltage(unsigned int index);
+static int da850_regulator_init(void);
+#endif
+
+static struct davinci_cpufreq_config cpufreq_info = {
+	.freq_table = &da850_freq_table[0],
+#ifdef CONFIG_REGULATOR
+	.init = da850_regulator_init,
+	.set_voltage = da850_set_voltage,
+#endif
+};
+
+static struct platform_device da850_cpufreq_device = {
+	.name			= "cpufreq-davinci",
+	.dev = {
+		.platform_data	= &cpufreq_info,
+	},
+};
+
+#ifdef CONFIG_REGULATOR
 static struct regulator *cvdd;
 
 static int da850_set_voltage(unsigned int index)
 {
 	struct da850_opp *opp;
+	struct cpufreq_frequency_table *freq_table = cpufreq_info.freq_table;
 
 	if (!cvdd)
 		return -ENODEV;
 
-	opp = (struct da850_opp *) da850_freq_table[index].index;
+	opp = (struct da850_opp *) freq_table[index].index;
 
 	return regulator_set_voltage(cvdd, opp->cvdd_min, opp->cvdd_max);
 }
@@ -991,26 +1042,18 @@ static int da850_regulator_init(void)
 }
 #endif
 
-static struct davinci_cpufreq_config cpufreq_info = {
-	.freq_table = &da850_freq_table[0],
-#ifdef CONFIG_REGULATOR
-	.init = da850_regulator_init,
-	.set_voltage = da850_set_voltage,
-#endif
-};
-
-static struct platform_device da850_cpufreq_device = {
-	.name			= "cpufreq-davinci",
-	.dev = {
-		.platform_data	= &cpufreq_info,
-	},
-};
-
 int __init da850_register_cpufreq(void)
 {
 	/* cpufreq driver can help "async" clock constant */
 	clk_add_alias("async", NULL, "pll0_sysclk3", NULL);
 
+	if (cpu_is_davinci_da8xx_300mhz())
+		cpufreq_info.freq_table = &da850_freq_table[3];
+	else if (cpu_is_davinci_da8xx_372mhz())
+		cpufreq_info.freq_table = &da850_freq_table[2];
+	else if (cpu_is_davinci_da8xx_408mhz())
+		cpufreq_info.freq_table = &da850_freq_table[1];
+
 	return platform_device_register(&da850_cpufreq_device);
 }
 
@@ -1018,17 +1061,18 @@ static int da850_round_armrate(struct clk *clk, unsigned long rate)
 {
 	int i, ret = 0, diff;
 	unsigned int best = (unsigned int) -1;
+	struct cpufreq_frequency_table *freq_table = cpufreq_info.freq_table;
 
 	rate /= 1000; /* convert to kHz */
 
-	for (i = 0; da850_freq_table[i].frequency != CPUFREQ_TABLE_END; i++) {
-		diff = da850_freq_table[i].frequency - rate;
+	for (i = 0; freq_table[i].frequency != CPUFREQ_TABLE_END; i++) {
+		diff = freq_table[i].frequency - rate;
 		if (diff < 0)
 			diff = -diff;
 
 		if (diff < best) {
 			best = diff;
-			ret = da850_freq_table[i].frequency;
+			ret = freq_table[i].frequency;
 		}
 	}
 
@@ -1047,9 +1091,10 @@ static int da850_set_pll0rate(struct clk *clk, unsigned long index)
 	unsigned int prediv, mult, postdiv;
 	struct da850_opp *opp;
 	struct pll_data *pll = clk->pll_data;
+	struct cpufreq_frequency_table *freq_table = cpufreq_info.freq_table;
 	int ret;
 
-	opp = (struct da850_opp *) da850_freq_table[index].index;
+	opp = (struct da850_opp *) freq_table[index].index;
 	prediv = opp->prediv;
 	mult = opp->mult;
 	postdiv = opp->postdiv;
diff --git a/arch/arm/mach-davinci/include/mach/cputype.h b/arch/arm/mach-davinci/include/mach/cputype.h
index 189b1ff..442e444 100644
--- a/arch/arm/mach-davinci/include/mach/cputype.h
+++ b/arch/arm/mach-davinci/include/mach/cputype.h
@@ -83,4 +83,6 @@ IS_DAVINCI_CPU(da850, DAVINCI_CPU_ID_DA850)
 #define cpu_is_davinci_da850() 0
 #endif
 
+#define cpu_is_davinci_da8xx()	(cpu_is_davinci_da850() || \
+					cpu_is_davinci_da830())
 #endif
diff --git a/arch/arm/mach-davinci/include/mach/da8xx.h b/arch/arm/mach-davinci/include/mach/da8xx.h
index 38e4d68..514791f 100644
--- a/arch/arm/mach-davinci/include/mach/da8xx.h
+++ b/arch/arm/mach-davinci/include/mach/da8xx.h
@@ -101,6 +101,31 @@ static inline int cpu_is_davinci_da8xx_arm_only(void)
 								& BIT(5));
 }
 
+/* Speed detection API */
+#ifdef CONFIG_DA8XX_MAX_SPEED_456
+#define cpu_is_davinci_da8xx_456mhz()	cpu_is_davinci_da8xx()
+#else
+#define cpu_is_davinci_da8xx_456mhz()	false
+#endif
+
+#ifdef CONFIG_DA8XX_MAX_SPEED_408
+#define cpu_is_davinci_da8xx_408mhz()	cpu_is_davinci_da8xx()
+#else
+#define cpu_is_davinci_da8xx_408mhz()	false
+#endif
+
+#ifdef CONFIG_DA8XX_MAX_SPEED_372
+#define cpu_is_davinci_da8xx_372mhz()	cpu_is_davinci_da8xx()
+#else
+#define cpu_is_davinci_da8xx_372mhz()	false
+#endif
+
+#ifdef CONFIG_DA8XX_MAX_SPEED_300
+#define cpu_is_davinci_da8xx_300mhz()	cpu_is_davinci_da8xx()
+#else
+#define cpu_is_davinci_da8xx_300mhz()	false
+#endif
+
 void __init da830_init(void);
 void __init da850_init(void);
 
-- 
1.6.5.2

