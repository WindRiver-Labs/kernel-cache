From 5cca6dc5250bc398bfe107800ff7b506f8313e1a Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Thu, 28 Jul 2016 22:32:24 +0800
Subject: [PATCH 1/2] dpaa_eth: fix "warning: assignment makes integer from
 pointer without a cast" noise

drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c: In function 'skb_to_sg_fd':
drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c:832:12: warning: assignment makes integer from pointer without a cast
   boundary = (void *)BOUNDARY_4K(skb->data, sg_len);
            ^
drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c:870:13: warning: assignment makes integer from pointer without a cast
    boundary = (void *)BOUNDARY_4K(frag, frag->size);

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c  |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index 686f702..01e3e97 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -900,7 +900,7 @@ int __hot skb_to_sg_fd(struct dpa_priv_s *priv,
 
 workaround:
 	if (unlikely(HAS_DMA_ISSUE(skb->data, sg_len))) {
-		boundary = BOUNDARY_4K(skb->data, sg_len);
+		boundary = (dma_addr_t)BOUNDARY_4K(skb->data, sg_len);
 		qm_sg_entry_set_len(&sgt[j], (u64)boundary - (u64)addr);
 
 		j++;
@@ -938,7 +938,7 @@ workaround:
 		qm_sg_entry_set64(&sgt[j], addr);
 
 		if (unlikely(HAS_DMA_ISSUE(frag, frag->size))) {
-			boundary = BOUNDARY_4K(frag, frag->size);
+			boundary = (dma_addr_t)BOUNDARY_4K(frag, frag->size);
 			qm_sg_entry_set_len(&sgt[j], (u64)boundary - (u64)frag);
 
 			j++;
-- 
1.7.5.4

