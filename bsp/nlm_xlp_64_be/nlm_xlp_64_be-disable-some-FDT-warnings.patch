From 1a16e2f6e4304ae4f40fb3dadc41fe04359fd17e Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Tue, 24 Apr 2012 17:10:56 +0800
Subject: [PATCH 24/47] nlm_xlp_64_be: disable some FDT warnings

Remove some FDT parsing debugging information. This agrees
with the latest SDK 20120331_2.2.4_alpha.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/common/fdt_helper.c  |    8 +++++---
 arch/mips/netlogic/common/nlm_hal_nae.c |    2 +-
 2 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/arch/mips/netlogic/common/fdt_helper.c b/arch/mips/netlogic/common/fdt_helper.c
index 6bb929e..bb16f51 100644
--- a/arch/mips/netlogic/common/fdt_helper.c
+++ b/arch/mips/netlogic/common/fdt_helper.c
@@ -80,12 +80,10 @@ void *open_fdt(int fd)
 void *open_fdt(int fd) { return NULL; }
 #endif
 
-#define DEBUG
-
 static void print_fdt_prop(const char *path, const char *prop,
 	enum prop_type type, const void *buf, int len)
 {
-#ifdef DEBUG
+#ifdef FDT_DEBUG
 	fdtprint("FDT: parsed %s.%s: ", path, prop);
 	if (type == PROP_CELL) {
 		const uint32_t *dst = (const uint32_t *)buf;
@@ -119,15 +117,19 @@ int copy_fdt_prop(void *fdt, const char *path, const char *prop,
 
 	nodeoffset = fdt_path_offset(fdt, path);
 	if (nodeoffset < 0) {
+#ifdef FDT_DEBUG
 		fdtprint("%s: Failed to parse path %s\n",
 		         fdt_strerror(nodeoffset), path);
+#endif
 		return nodeoffset;
 	}
 
 	pval = fdt_getprop(fdt, nodeoffset, prop, &plen);
 	if (pval == NULL) {
+#ifdef FDT_DEBUG
 		fdtprint("%s: Failed to parse property %s\n",
 		         fdt_strerror(plen), prop);
+#endif
 		return plen;
 	}
 
diff --git a/arch/mips/netlogic/common/nlm_hal_nae.c b/arch/mips/netlogic/common/nlm_hal_nae.c
index 8b132fc..4194426 100644
--- a/arch/mips/netlogic/common/nlm_hal_nae.c
+++ b/arch/mips/netlogic/common/nlm_hal_nae.c
@@ -2633,7 +2633,7 @@ static int parse_vfbid_config(void *fdt, int node, uint32_t *vfbid_tbl)
 	sprintf(vfbid_path, "/soc/nae@node-%d/vfbid-config",node);
 
 	if(GET_NAE_PROP(vfbid_path, "hw-replenish", &hw_replenish, sizeof(uint32_t)) < 0){
-                nlm_print("fdt missing hw-replenish\n");
+                /*nlm_print("fdt missing hw-replenish\n");*/
 	}
 	else {
 		if (hw_replenish != 0)
-- 
1.7.0

