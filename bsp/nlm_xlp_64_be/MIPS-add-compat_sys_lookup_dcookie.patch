From 9b924a77d578c3c045452a3f3445a9c9558073aa Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Thu, 7 Apr 2011 13:46:02 +0800
Subject: [PATCH 01/37] MIPS: add compat_sys_lookup_dcookie()

[ From netlogic SDK 20110329 ]

Add compat_sys_lookup_dcookie() for 64bit kernel with 32bit applications

Signed-off-by: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Integrated-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 arch/mips/kernel/scall64-n32.S |    2 +-
 arch/mips/kernel/scall64-o32.S |    2 +-
 fs/dcookies.c                  |   36 ++++++++++++++++++++++++++++++++++++
 include/linux/syscalls.h       |    7 +++++++
 kernel/sys_ni.c                |    1 +
 5 files changed, 46 insertions(+), 2 deletions(-)

diff --git a/arch/mips/kernel/scall64-n32.S b/arch/mips/kernel/scall64-n32.S
index c85b512..838c44a 100644
--- a/arch/mips/kernel/scall64-n32.S
+++ b/arch/mips/kernel/scall64-n32.S
@@ -330,7 +330,7 @@ EXPORT(sysn32_call_table)
 	PTR	compat_sys_io_submit
 	PTR	sys_io_cancel
 	PTR	sys_exit_group			/* 6205 */
-	PTR	sys_lookup_dcookie
+	PTR	compat_sys_lookup_dcookie
 	PTR	sys_epoll_create
 	PTR	sys_epoll_ctl
 	PTR	sys_epoll_wait
diff --git a/arch/mips/kernel/scall64-o32.S b/arch/mips/kernel/scall64-o32.S
index cc489b4..bb0ef7e 100644
--- a/arch/mips/kernel/scall64-o32.S
+++ b/arch/mips/kernel/scall64-o32.S
@@ -451,7 +451,7 @@ EXPORT(syso32_call_table)
 	PTR	compat_sys_io_submit
 	PTR	sys_io_cancel			/* 4245 */
 	PTR	sys_exit_group
-	PTR	sys32_lookup_dcookie
+	PTR	compat_sys_lookup_dcookie
 	PTR	sys_epoll_create
 	PTR	sys_epoll_ctl
 	PTR	sys_epoll_wait			/* 4250 */
diff --git a/fs/dcookies.c b/fs/dcookies.c
index a21cabd..0ae33f3 100644
--- a/fs/dcookies.c
+++ b/fs/dcookies.c
@@ -206,6 +206,42 @@ asmlinkage long SyS_lookup_dcookie(u64 cookie64, long buf, long len)
 SYSCALL_ALIAS(sys_lookup_dcookie, SyS_lookup_dcookie);
 #endif
 
+#if defined(CONFIG_MIPS32_O32) || defined(CONFIG_MIPS32_N32)
+#ifdef CONFIG_HAVE_SYSCALL_WRAPPERS
+compat_SyS_lookup_dcookie(u32 cookie_msb, u32 cookie_lsb,
+			compat_uptr_t buf, compat_size_t len)
+{
+	u64 cookie;
+	char __user *user_buf;
+	size_t size;
+
+	size = (size_t)len;
+
+	user_buf = compat_ptr(buf);
+	cookie = (((u64)cookie_msb) << 32) | (u64)cookie_lsb;
+
+	return SYSC_lookup_dcookie(cookie, user_buf, size);
+}
+SYSCALL_ALIAS(compat_sys_lookup_dcookie, compat_SyS_lookup_dcookie);
+#else
+compat_sys_lookup_dcookie(u32 cookie_msb, u32 cookie_lsb,
+			compat_uptr_t buf, compat_size_t len)
+{
+	u64 cookie;
+	char __user *user_buf;
+	size_t size;
+
+	size = (size_t)len;
+
+	user_buf = compat_ptr(buf);
+	cookie = (((u64)cookie_msb) << 32) | (u64)cookie_lsb;
+
+	return sys_lookup_dcookie(cookie, user_buf, size);
+}
+#endif
+#endif
+
+
 static int dcookie_init(void)
 {
 	struct list_head * d;
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index 355f027..8f3ad8b 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -620,7 +620,14 @@ asmlinkage long sys_mkdir(const char __user *pathname, int mode);
 asmlinkage long sys_chdir(const char __user *filename);
 asmlinkage long sys_fchdir(unsigned int fd);
 asmlinkage long sys_rmdir(const char __user *pathname);
+#if defined(CONFIG_64BIT) && (defined(CONFIG_MIPS32_O32) || defined(CONFIG_MIPS32_N32))
+long sys_lookup_dcookie(u64 cookie64, char __user *buf, size_t len);
+#include <asm/compat.h>
+asmlinkage long compat_sys_lookup_dcookie(u32 cookie_msb, u32 cookie_lsb,
+					compat_uptr_t buf, compat_size_t len);
+#else
 asmlinkage long sys_lookup_dcookie(u64 cookie64, char __user *buf, size_t len);
+#endif
 asmlinkage long sys_quotactl(unsigned int cmd, const char __user *special,
 				qid_t id, void __user *addr);
 asmlinkage long sys_getdents(unsigned int fd,
diff --git a/kernel/sys_ni.c b/kernel/sys_ni.c
index 70f2ea7..105ae8c 100644
--- a/kernel/sys_ni.c
+++ b/kernel/sys_ni.c
@@ -21,6 +21,7 @@ cond_syscall(sys_quotactl);
 cond_syscall(sys32_quotactl);
 cond_syscall(sys_acct);
 cond_syscall(sys_lookup_dcookie);
+cond_syscall(compat_sys_lookup_dcookie);
 cond_syscall(sys_swapon);
 cond_syscall(sys_swapoff);
 cond_syscall(sys_kexec_load);
-- 
1.7.0.2

