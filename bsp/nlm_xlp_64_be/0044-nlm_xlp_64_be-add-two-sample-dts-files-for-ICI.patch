From ecf1cdc1b8dd7298b76ccf71959ef871c8122bdc Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Sat, 21 Jul 2012 18:41:14 +0800
Subject: [PATCH 2/2] nlm_xlp_64_be: add two sample dts files.

Add two sample dts files for ICI. Based on SDK 2.2.4.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/boot/dts/master-mnxlp8xx-helinux-nae.dts |  919 +++++++++++++++++
 arch/mips/boot/dts/master-mnxlp8xx-linux.dts       | 1033 ++++++++++++++++++++
 2 files changed, 1952 insertions(+), 0 deletions(-)
 create mode 100644 arch/mips/boot/dts/master-mnxlp8xx-helinux-nae.dts
 create mode 100644 arch/mips/boot/dts/master-mnxlp8xx-linux.dts

diff --git a/arch/mips/boot/dts/master-mnxlp8xx-helinux-nae.dts b/arch/mips/boot/dts/master-mnxlp8xx-helinux-nae.dts
new file mode 100644
index 0000000..fb0e3a4
--- /dev/null
+++ b/arch/mips/boot/dts/master-mnxlp8xx-helinux-nae.dts
@@ -0,0 +1,919 @@
+/* XLP8XX Device Tree Source
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "MIPS,XLP8XX";
+	compatible = "NETL,XLP8XX_A0";
+
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <0>;
+		bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0x0f -- ";
+		domain_heap = <0xf0000000 0xc0000000>; /* 3584MB -> 6656MB */
+	};
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+			#nodes = <2>;
+			#cpumask-cells=<2>;
+
+			cpu {
+				onlinemask = <0xffffffff 0xffffffff>;
+				nae-rx-vc = <0>;
+				nae-fb-vc = <1>;
+				napi-vc-mask = <0x3>;
+			};
+			uart {
+				id = <0>;
+				owner = <1>;
+				sharedcfg = <0x1f000000>;
+			};
+			memory {
+				reg = <0x01000000 0x0B000000
+					0x20000000 0xa0000000>; // 2586M at 512M
+
+			};
+			pic {
+			};
+			fmn {
+                                node_0_vc_mask = <0x00000000 0x00000000 0x00000000 0x00000000>;
+                                node_1_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+                                node_2_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+                                node_3_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;                       
+			};
+			ici-config{
+				enable = <1>;
+				total_credits = <673>;	
+				node_0_link_mask = <0x2>;	//Bit mask of active links
+				node_1_link_mask = <0x2>;	//Bit mask of active links
+				node_2_link_mask = <0x0>;	//Bit mask of active links
+				node_3_link_mask = <0x0>;	//Bit mask of active links
+				gcu{
+					own_credit = <75 12 75 75 75 75 75 12>;	/*VC1 and VC7 always shows 0 transactions.*/
+					shared_credit = <1 1 1 1 1 1 1 1>;
+					txwght = <63 12 63 63 63 63 63 12>;	/*Scheduling Priority, Higher Value = More Time Slot*/
+					segth  = <34 34 34 34 34 34 34 34>;	/*Maximum number of tx entries*/
+				};
+				fmn{
+					own_credit = <75 12 12 75>;	/*VC1 and VC2 always shows 0 transactions.*/
+					shared_credit = <1 1 1 1>;
+					txwght = <8 2 2 8 >;	/*Scheduling Priority, Higher Value = More Time Slot*/
+					segth  = <34 34 34 34>;	/*Maximum number of tx entries*/
+				};
+				pic{
+					own_credit = <12>;
+					shared_credit = <1>;
+					txwght = <1>;	/*Scheduling Priority, Higher Value = More Time Slot*/
+					segth  = <34>;	/*Maximum number of tx entries*/
+				};
+			};
+		};
+		dom@1 {
+			device_type = "domain";
+			os = "netos";
+
+			heap-size = <0x0 0x2000000>;		   // 32M
+			shared-mem = <0x1 0x00000000 0x0 0x04000000>;  // 64MB @ 4G
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			app-bootcmd = "smpload";
+			app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
+
+			kernel {
+				/* Kernel Memory allocated from xen domain-heap */
+				size = <0x02000000>;  // 32M
+
+				/* Location in Dom0 ramdisk */
+				location = "/tmp/xen/netos.elf";
+
+				/* Domain destroy currently doesn't work with hyperexec */
+				dom_destroy_hack = <0>;
+			};
+
+			cpu {
+				onlinemask = <0xffffffff 0xffffffff>;
+				nae-rx-vc = <2>;
+				nae-fb-vc = <2>;
+			};
+			uart {
+				id = <0>;
+				sharedcfg = <0x1f000000>;
+			};
+			memory {
+				reg = <0x50000000 0x10000000>;  // 1280M -> 1536M (256M)
+			};
+			nae {
+				owner = <1 1 0 0>;
+			};
+			app-param{
+				onlinemask = <0xffffffff>;
+				enable_ici_pkt_traffic = <1>;
+/*
+				//Enable this for mode #1 and #2 Local Node Memory - For 16G+16G
+				nae_0_pkt_pool_start = <0x140>;	//Multiple of 16MB
+				nae_0_pkt_pool_size = <0x1000000>;
+				nae_1_pkt_pool_start = <0x540>;	//Multiple of 16MB
+				nae_1_pkt_pool_size = <0x1000000>;
+
+				
+				//Enable this for mode #1 and #2 Local Node Memory - For 16G+16G
+				nae_0_pkt_pool_start = <0x140>;	//Multiple of 16MB
+				nae_0_pkt_pool_size = <0x1000000>;
+				nae_1_pkt_pool_start = <0x241>;	//Multiple of 16MB
+				nae_1_pkt_pool_size = <0x1000000>;
+*/
+
+/*
+				//Enable this for mode #1 and #2 Local Node Memory - For 8G+8G
+				nae_0_pkt_pool_start = <0x140>;	//Multiple of 16MB
+				nae_0_pkt_pool_size = <0x1000000>;
+				nae_1_pkt_pool_start = <0x241>;	//Multiple of 16MB
+				nae_1_pkt_pool_size = <0x1000000>;
+*/
+
+				//Enable this for mode #3 Remote Node Memory  - For 8G+8G
+				nae_0_pkt_pool_start = <0x241>;	//Multiple of 16MB
+				nae_0_pkt_pool_size = <0x1000000>;
+				nae_1_pkt_pool_start = <0x140>;	//Multiple of 16MB
+				nae_1_pkt_pool_size = <0x1000000>;
+
+			};
+		};
+	};
+
+	chosen {
+		bootargs = " console=ttyS0,115200 mem=512m@3584m mem=2048m@10240m ";
+	};
+
+	/* These binaries are downloaded at the resp physical memory locations
+	 * by their corresponding bootstrapping loaders. For example,
+	 * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
+	 * at 1M, hypervisor by u-boot hypervisor at 136M.
+	 * On simulator all these binaries are pre-loaded by using '-F' option
+	 * for convenience. On silicon, they will be loaded by their corresponding
+	 * temporary download locations the stage-1/stage-2 firmware
+	 */
+	firmware-download {
+		u-boot	= <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
+		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
+		dom0	  = <0x09000000 0x03000000>; /* 48M @ 144M */
+		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
+	};
+
+	soc {
+fmn@node-0{
+        default-credits = <50>;
+        default-queue-size = <16384>;
+        fmn-spill-mem-base = <0x00000000 0x0>; /*0 - dynamic allocation */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config{
+		/* credits from station
+                   "cpu popq pcie0 pcie1 pcie2 pcie3 gdx rsa crypto cmp poe nae regx srio"
+                   The order and number of station should be matching with the list given above
+                   Here, credits 0 means the default credits.
+                   Right now there is no way to configure credit of zero
+
+		"station name" {
+                        queue-size = <>; queue size for all the "station name" vcs
+                        credits-from {
+                                node-0 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                        };
+                };
+		*/
+
+
+	};
+};
+fmn@node-1{
+        default-credits = <50>;
+        default-queue-size = <16384>;
+
+		/*Enable this for 8GB/8GB support - Dynamic allocation*/
+        fmn-spill-mem-base = <0x0 0x00000000>; /*0 - dynamic allocation */
+		/*Enable this for 16GB/16GB support - Addr: 18GB+16MB 
+        fmn-spill-mem-base = <0x4 0x81000000>; 
+		*/
+
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config{
+
+	};
+};
+fmn@node-2{
+
+};
+fmn@node-3{
+
+};
+  nae@node-0 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	/include/ "ucore-8xx.dts"
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x0fe00000 0x00000000 0x00100000>; // 1MB @ 254MB
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+		vfbid-map = <
+		      0    1    1    5    2   9    3    13
+                      4    17   5    21   6   25   7    29
+                      8    33   9    37   10  41   11   45
+                      12   49   13   53   14  57   15   61
+                      16   65   17   69   18  73   19   77
+                      20   81   21   85   22  89   23   93
+                      24   97   25  101   26 105   27  109
+                      28  113   29  117   30 121   31  125
+                >;
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+			mgmt-port = <0 0 0 0>;
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+        	        rx-buffer-size = <128 128 128 128>;
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+
+                xaui {
+                        loopback = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+                sgmii {
+                        loopback = <0 0 0 0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <13 13 13 13>;
+
+                        ext-phy-addr = <12 15 14 13>;
+                        ext-phy-bus = <1 1 1 1>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        num-channels = <1 1 1 1>;
+                        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        rx-buffer-size = <128 128 128 128>;
+
+
+                        // Max available descriptors are 1024 (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <52 52 52 52>;
+                        free-desc-size = <2048 2048 2048 2048>;
+                        ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+                };
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+	
+			mgmt-port = <1 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+                
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+   nae@node-1 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	/include/ "ucore-8xx.dts"
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+				/*Enable this for 8G+8G setup.*/
+				freein-fifo-spill-mem-range = <0x2 0x40000000 0x00000000 0x00100000>; // 1MB @ 9GB 
+
+				/*	Enable this for 16GB/16GB setup
+				freein-fifo-spill-mem-range = <0x4 0x80000000 0x00000000 0x00100000>; // 1MB @ 18GB 
+				*/
+
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+		hw-replenish = <0>;
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+		
+		distribution-enable = <1>;
+		// 16 bit mask
+		dist-drop-enable = <0>;	 
+		// 8 bit mask
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+ 
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        // Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+
+                xaui {
+                        loopback = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+			mgmt-port = <1 0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+ 		               
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+nae@node-2 {
+
+};
+nae@node-3 {
+
+};
+		nodes {
+			num-nodes = <2>;
+		};
+	};
+};
+
diff --git a/arch/mips/boot/dts/master-mnxlp8xx-linux.dts b/arch/mips/boot/dts/master-mnxlp8xx-linux.dts
new file mode 100644
index 0000000..8fb6e0f
--- /dev/null
+++ b/arch/mips/boot/dts/master-mnxlp8xx-linux.dts
@@ -0,0 +1,1033 @@
+/* XLP8XX Device Tree Source
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "MIPS,XLP8XX";
+	compatible = "NETL,XLP8XX_A0";
+
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <0>;
+		bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0xffffffff -- ";
+		domain_heap = <0x80000000 0x20000000>;
+	};
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+			#nodes = <2>;
+			#cpumask-cells=<2>;
+
+			cpu {
+				onlinemask = <0xffffffff 0xffffffff>;
+                                nae-rx-vc = <0>;
+                                nae-fb-vc = <1>;
+                                napi-vc-mask = <0xb>;
+				sae-rx-vc = <0>; /* sharing with nae */
+				sae-rx-sync-vc  = <3>; /* should be exclusive */
+				ipsec-async-vc  = <3>;
+				ipsec-sync-vc   = <2>;
+			};
+			uart {
+				id = <0>;
+				owner = <1>;
+				sharedcfg = <0x1f000000>;
+			};
+			//Make sure each node's memory is separated out 
+			memory {
+				reg = <0x01000000 0x0B000000	// 176M at 16M
+					0x20000000 0xa0000000>; // 2586M at 512M
+			};
+                        fmn {
+                                node_0_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_1_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_2_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_3_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;                       
+			};
+			pic {
+			};
+			nae {
+				owner = <1 1 0 0>;
+				freein-fifo-mask = <0xffff 0xffff 0 0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <32 32 32 32>;
+				/* hw entries 40 for 2 nodes , 20 fifos each */
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <40 40 40 40>;
+				dummy-pktdata-addr = <0x0 0x0ff00000>; // 255 MB
+			};
+
+		};
+	};
+
+	chosen {
+		bootargs = " console=ttyS0,115200 mem=512m@3584m mem=2048m@10240m ";
+	};
+
+	/* These binaries are downloaded at the resp physical memory locations
+	 * by their corresponding bootstrapping loaders. For example,
+	 * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
+	 * at 1M, hypervisor by u-boot hypervisor at 136M.
+	 * On simulator all these binaries are pre-loaded by using '-F' option
+	 * for convenience. On silicon, they will be loaded by their corresponding
+	 * temporary download locations the stage-1/stage-2 firmware
+	 */
+	firmware-download {
+		u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
+		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
+		dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
+		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
+	};
+
+	soc {
+fmn@node-0 {
+        default-credits = <50>;
+        default-queue-size = <16384>;
+        fmn-spill-mem-base = <0x00000000 0x10000000>; /*0 - dynamic allocation, only for 64 bit linux */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config {
+		/* credits from station     
+		   "cpu popq pcie0 pcie1 pcie2 pcie3 gdx rsa crypto cmp poe nae regx srio"
+		   The order and number of station should be matching with the list given above
+		   Here, credits 0 means the default credits. 
+		   Right now there is no way to configure credit of zero */
+
+                cpu {
+                        queue-size = <32768>; /* queue size for all the cpu vcs */
+                        credits-from {
+                                node-0 = <0 0 0 0 0 0 0 0 0 0 500 0 0 150>;
+                        };
+                };
+
+                nae {
+                        credits-from {
+                                node-0 = <100 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                        };
+                };
+               srio {
+                       credits-from {
+                                node-0 = <150 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                        };
+               };
+	};
+};
+fmn@node-1{
+        default-credits = <50>;
+        default-queue-size = <16384>;
+        fmn-spill-mem-base = <0x00000000 0x00000000>; /*0 - dynamic allocation */
+        fmn-spill-mem-size = <0x00000000 0x02000000>;
+	q-config{
+
+	};
+};
+fmn@node-2{
+
+};
+fmn@node-3{
+
+};
+  nae@node-0 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	/include/ "ucore-8xx.dts"
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00100000>; // spill address is allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>; 
+                freein-fifo-spill-num-descs = <1200>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+			mgmt-port = <0 0 0 0>;
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+        	        rx-buffer-size = <128 128 128 128>;
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+                        ucore-mask = <0xffff>;
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+                sgmii {
+                        loopback = <0 0 0 0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <13 13 13 13>;
+
+                        ext-phy-addr = <12 15 14 13>;
+                        ext-phy-bus = <1 1 1 1>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        num-channels = <1 1 1 1>;
+                        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        rx-buffer-size = <128 128 128 128>;
+
+
+                        // Max available descriptors are 1024 (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <52 52 52 52>;
+                        free-desc-size = <2048 2048 2048 2048>;
+                        ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+                };
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+	
+			mgmt-port = <1 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+                
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+   nae@node-1 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	/include/ "ucore-8xx.dts"
+
+        freein-fifo-config {
+                /* 
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue will be configured from arry below
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x00000000 0x00000000 0x00100000>; // Spill address will be allocated dynamically
+                freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>;
+                freein-fifo-spill-num-descs = <1200>;
+        };
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+		
+		distribution-enable = <1>;
+		// 16 bit mask
+		dist-drop-enable = <0>;	 
+		// 8 bit mask
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+ 
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        // Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+                xaui {
+                        loopback = <0>;
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+                        ucore-mask = <0xffff>;
+                };
+                rxaui {
+                        loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+			higig-mode = <0>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+                        // 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+                        submode  = <2>;
+                        // 0: disable ; 1: enable
+                        scrambler  = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+			mgmt-port = <1 0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+ 		               
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+nae@node-2 {
+
+};
+nae@node-3 {
+
+};
+		nodes {
+			num-nodes = <2>;
+		};
+
+	};
+};
+
-- 
1.7.0.4

