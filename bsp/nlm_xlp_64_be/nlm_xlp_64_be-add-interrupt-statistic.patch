From 792caa1c131cbe8c41a5bb2435975610742060e1 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Sat, 28 Apr 2012 11:17:36 +0800
Subject: [PATCH 26/46] nlm_xlp_64_be: add interrupt statistic

This patch clears the action name for different types
of interrupts and add statistic for them respectively.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/netlogic/xlp/irq.c |   30 ++++++++++++++++++++++++++----
 1 files changed, 26 insertions(+), 4 deletions(-)

diff --git a/arch/mips/netlogic/xlp/irq.c b/arch/mips/netlogic/xlp/irq.c
index 0c42dac..a3e147e 100644
--- a/arch/mips/netlogic/xlp/irq.c
+++ b/arch/mips/netlogic/xlp/irq.c
@@ -910,13 +910,35 @@ struct irqaction nlm_common_rsvd_action = {
 	.next = 0
 };
 
+struct irqaction msgring_action = {
+	.handler = nlm_common_rsvd_irq_handler,
+	.name = "msgring",
+};
+
+struct irqaction ipi_smp_func_action = {
+	.handler = nlm_common_rsvd_irq_handler,
+	.name = "ipi_smp_func",
+};
+
+struct irqaction ipi_smp_resched_action = {
+	.handler = nlm_common_rsvd_irq_handler,
+	.name = "ipi_smp_resched",
+};
+
+struct irqaction netrx_action = {
+	.handler = nlm_common_rsvd_irq_handler,
+	.name = "netrx",
+};
+
 void do_nlm_common_IRQ(unsigned int irq, struct pt_regs *regs)
 {
 	if (irq == XLP_IRQ_IPI_SMP_FUNCTION || irq == XLP_IRQ_IPI_SMP_RESCHEDULE) {
+		kstat_incr_irqs_this_cpu(irq, irq_to_desc(irq));
 		nlm_common_ipi_handler(irq, regs);
 		return;
 	}
 	if (irq == XLP_IRQ_MSGRING) {
+		kstat_incr_irqs_this_cpu(irq, irq_to_desc(irq));
 		nlm_xlp_msgring_int_handler(irq, regs);
 	}
 	else if (irq == XLP_IRQ_IPI_SMP_KGDB) {
@@ -1627,15 +1649,15 @@ void __init init_nlm_common_irqs(void)
 #endif
 #ifdef CONFIG_SMP
 	irq_desc[XLP_IRQ_IPI_SMP_FUNCTION].chip = &nlm_common_rsvd_pic;
-	irq_desc[XLP_IRQ_IPI_SMP_FUNCTION].action = &nlm_common_rsvd_action;
+	irq_desc[XLP_IRQ_IPI_SMP_FUNCTION].action = &ipi_smp_func_action;
 
 	irq_desc[XLP_IRQ_IPI_SMP_RESCHEDULE].chip = &nlm_common_rsvd_pic;
-	irq_desc[XLP_IRQ_IPI_SMP_RESCHEDULE].action = &nlm_common_rsvd_action;
+	irq_desc[XLP_IRQ_IPI_SMP_RESCHEDULE].action = &ipi_smp_resched_action;
 
 #ifdef CONFIG_NLMCOMMON_IP_FLOW_AFFINITY	/* REMOVE on XLP TODO */
 	/* PR: New IPI added here for netrx balancing */
 	irq_desc[XLP_IRQ_IPI_NETRX].chip = &nlm_common_rsvd_pic;
-	irq_desc[XLP_IRQ_IPI_NETRX].action = &nlm_common_rsvd_action;
+	irq_desc[XLP_IRQ_IPI_NETRX].action = &netrx_action;
 	//xlp_irq_mask |= (1ULL << XLP_IRQ_IPI_NETRX);
 #endif				/* CONFIG_NLMCOMMON_IP_FLOW_AFFINITY */
 
@@ -1643,7 +1665,7 @@ void __init init_nlm_common_irqs(void)
 
 	/* msgring interrupt */
 	irq_desc[XLP_IRQ_MSGRING].chip = &nlm_common_rsvd_pic;
-	irq_desc[XLP_IRQ_MSGRING].action = &nlm_common_rsvd_action;
+	irq_desc[XLP_IRQ_MSGRING].action = &msgring_action;
 
 	mask = (
 			(1ULL << XLP_IRQ_TIMER) |
-- 
1.7.0

