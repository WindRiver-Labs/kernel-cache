From fe3c013a0a78dd5f69a58d999e74edf12ba0c8c1 Mon Sep 17 00:00:00 2001
From: Ruibo Zhang <ruibo.zhang@windriver.com>
Date: Thu, 22 Nov 2012 11:27:31 +0800
Subject: [PATCH 9/9] nlm_xlp_64_be: Update mmc driver to SDK 2.2.5

Compare the WRL43 MMC driver with SDK 2.2.5,merge the different code.

Signed-off-by: Ruibo Zhang <ruibo.zhang@windriver.com>
---
 drivers/mmc/card/queue.c   |    4 ++++
 drivers/mmc/core/bus.c     |    4 ++++
 drivers/mmc/core/mmc_ops.c |    4 ++++
 drivers/mmc/core/sd.c      |    8 ++++++++
 4 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/drivers/mmc/card/queue.c b/drivers/mmc/card/queue.c
index 7d39fe5..f85cf45 100644
--- a/drivers/mmc/card/queue.c
+++ b/drivers/mmc/card/queue.c
@@ -149,7 +149,11 @@ int mmc_init_queue(struct mmc_queue *mq, struct mmc_card *card, spinlock_t *lock
 			bouncesz = host->max_blk_count * 512;
 
 		if (bouncesz > 512) {
+#ifdef CONFIG_MMC_XLP
+			mq->bounce_buf = kmalloc(bouncesz, GFP_KERNEL|GFP_DMA);
+#else
 			mq->bounce_buf = kmalloc(bouncesz, GFP_KERNEL);
+#endif
 			if (!mq->bounce_buf) {
 				printk(KERN_WARNING "%s: unable to "
 					"allocate bounce buffer\n",
diff --git a/drivers/mmc/core/bus.c b/drivers/mmc/core/bus.c
index 49d9dca..6b5b1bc 100644
--- a/drivers/mmc/core/bus.c
+++ b/drivers/mmc/core/bus.c
@@ -201,7 +201,11 @@ struct mmc_card *mmc_alloc_card(struct mmc_host *host, struct device_type *type)
 {
 	struct mmc_card *card;
 
+#ifdef CONFIG_MMC_XLP
+	card = kzalloc(sizeof(struct mmc_card), GFP_KERNEL|GFP_DMA);
+#else
 	card = kzalloc(sizeof(struct mmc_card), GFP_KERNEL);
+#endif
 	if (!card)
 		return ERR_PTR(-ENOMEM);
 
diff --git a/drivers/mmc/core/mmc_ops.c b/drivers/mmc/core/mmc_ops.c
index 53761c6..b0560ec 100644
--- a/drivers/mmc/core/mmc_ops.c
+++ b/drivers/mmc/core/mmc_ops.c
@@ -256,7 +256,11 @@ mmc_send_cxd_data(struct mmc_card *card, struct mmc_host *host,
 	/* dma onto stack is unsafe/nonportable, but callers to this
 	 * routine normally provide temporary on-stack buffers ...
 	 */
+#ifdef CONFIG_MMC_XLP
+	data_buf = kmalloc(len, GFP_KERNEL|GFP_DMA);
+#else
 	data_buf = kmalloc(len, GFP_KERNEL);
+#endif
 	if (data_buf == NULL)
 		return -ENOMEM;
 
diff --git a/drivers/mmc/core/sd.c b/drivers/mmc/core/sd.c
index 903eda4..82e7390 100644
--- a/drivers/mmc/core/sd.c
+++ b/drivers/mmc/core/sd.c
@@ -202,7 +202,11 @@ static int mmc_read_switch(struct mmc_card *card)
 
 	err = -EIO;
 
+#ifdef CONFIG_MMC_XLP
+	status = kmalloc(64, GFP_KERNEL|GFP_DMA);
+#else
 	status = kmalloc(64, GFP_KERNEL);
+#endif
 	if (!status) {
 		printk(KERN_ERR "%s: could not allocate a buffer for "
 			"switch capabilities.\n", mmc_hostname(card->host));
@@ -257,7 +261,11 @@ static int mmc_switch_hs(struct mmc_card *card)
 
 	err = -EIO;
 
+#ifdef CONFIG_MMC_XLP
+	status = kmalloc(64, GFP_KERNEL|GFP_DMA);
+#else
 	status = kmalloc(64, GFP_KERNEL);
+#endif
 	if (!status) {
 		printk(KERN_ERR "%s: could not allocate a buffer for "
 			"switch capabilities.\n", mmc_hostname(card->host));
-- 
1.7.0

