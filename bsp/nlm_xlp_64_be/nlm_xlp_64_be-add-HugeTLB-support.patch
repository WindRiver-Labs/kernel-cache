From 68addd23c40b42eba379b6ae418b6e612d8c461b Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Fri, 23 Mar 2012 11:48:34 +0800
Subject: [PATCH 14/47] nlm_xlp_64_be: add HugeTLB support.

HugeTLB is incompatible with pgwalker since pgwalker requires
that all pages be the same size. So we need to disable the
pgwalker when we use HugeTLB.

HugeTLB is also incompatible with eTLB of XLP since there is
no PageMask in each entry of eTLB. All entries of eTLB share
one PageMask which is located in CP0_CONFIG7.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
Signed-off-by: Le Tian <le.tian@windriver.com>
Integrated-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/Kconfig               |    1 +
 arch/mips/include/asm/hugetlb.h |    1 +
 arch/mips/netlogic/Kconfig      |    2 +-
 arch/mips/netlogic/xlp/mmu.c    |    4 ++++
 4 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index c47abee..45495d8 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -1369,6 +1369,7 @@ config CPU_XLP
 	select CPU_SUPPORTS_32BIT_KERNEL
 	select CPU_SUPPORTS_64BIT_KERNEL
 	select CPU_SUPPORTS_HIGHMEM
+	select CPU_SUPPORTS_HUGEPAGES
 	select CPU_HAS_LLSC
 	select WEAK_ORDERING
 	select WEAK_REORDERING_BEYOND_LLSC
diff --git a/arch/mips/include/asm/hugetlb.h b/arch/mips/include/asm/hugetlb.h
index f5e8560..c565b7c 100644
--- a/arch/mips/include/asm/hugetlb.h
+++ b/arch/mips/include/asm/hugetlb.h
@@ -70,6 +70,7 @@ static inline pte_t huge_ptep_get_and_clear(struct mm_struct *mm,
 static inline void huge_ptep_clear_flush(struct vm_area_struct *vma,
 					 unsigned long addr, pte_t *ptep)
 {
+	flush_tlb_mm(vma->vm_mm);
 }
 
 static inline int huge_pte_none(pte_t pte)
diff --git a/arch/mips/netlogic/Kconfig b/arch/mips/netlogic/Kconfig
index 7a85484..dea897a 100644
--- a/arch/mips/netlogic/Kconfig
+++ b/arch/mips/netlogic/Kconfig
@@ -15,7 +15,7 @@ config NLM_XLP_A0_WORKAROUNDS
 
 config PGWALKER
 	bool "PGWalker (experimental)"
-	depends on EXPERIMENTAL
+	depends on !HUGETLB_PAGE && EXPERIMENTAL
 	default n
 	help
 	  Enable this for the hardware tlb flush support
diff --git a/arch/mips/netlogic/xlp/mmu.c b/arch/mips/netlogic/xlp/mmu.c
index 9ab0d7b..7a75813 100644
--- a/arch/mips/netlogic/xlp/mmu.c
+++ b/arch/mips/netlogic/xlp/mmu.c
@@ -340,10 +340,13 @@ void mmu_init(void)
 }
 #else	/* !CONFIG_PGWALKER */
 
+#ifndef CONFIG_HUGETLB_PAGE
 static int __initdata tlb_config = (ENABLE_ETLB | ENABLE_128_TLB);
+#endif
 
 void mmu_init(void)
 {
+#ifndef CONFIG_HUGETLB_PAGE
 	/*
 	 * shift right half the number of 1s in
 	 * the pagemask and populate that value
@@ -352,6 +355,7 @@ void mmu_init(void)
 
 	/* Intialize after pgwalker and others are configured! */
 	write_c0_config6(read_c0_config6() | tlb_config);
+#endif
 
 	/*
 	 * Read back TLB entries after configuration
-- 
1.7.0

