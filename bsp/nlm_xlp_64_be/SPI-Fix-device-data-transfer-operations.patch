From 2e85b9f6a2357aadd213880e54462e6caca702f4 Mon Sep 17 00:00:00 2001
From: Divya Sakthidharan <divyas@broadcom.com>
Date: Wed, 23 Jan 2013 15:43:57 +0530
Subject: [PATCH 2/2] SPI: Fix device data transfer operations.

Based on Broadcom SDK 2.3.

Signed-off-by: Divya Sakthidharan <divyas@broadcom.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/mtd/devices/m25p80.c |    2 +
 drivers/spi/spi.c            |    4 ++
 drivers/spi/spi_xlp.c        |   86 ++++++++++++++++++++++--------------------
 include/linux/spi/spi.h      |    3 +
 4 files changed, 54 insertions(+), 41 deletions(-)

diff --git a/drivers/mtd/devices/m25p80.c b/drivers/mtd/devices/m25p80.c
index fe9ac65..cd86174 100644
--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -339,6 +339,7 @@ static int m25p80_read(struct mtd_info *mtd, loff_t from, size_t len,
 	 */
 	t[0].tx_buf = flash->command;
 	t[0].len = m25p_cmdsz(flash) + FAST_READ_DUMMY_BYTE;
+	t[0].spi_cont_cmd = 0x1;
 	spi_message_add_tail(&t[0], &m);
 
 	t[1].rx_buf = buf;
@@ -483,6 +484,7 @@ static int m25p80_write(struct mtd_info *mtd, loff_t to, size_t len,
 
 	t[0].tx_buf = flash->command;
 	t[0].len = m25p_cmdsz(flash);
+	t[0].spi_cont_cmd = 0x1;
 	spi_message_add_tail(&t[0], &m);
 
 	t[1].tx_buf = buf;
diff --git a/drivers/spi/spi.c b/drivers/spi/spi.c
index b3a1f92..6b5d28e 100644
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -822,6 +822,10 @@ int spi_write_then_read(struct spi_device *spi,
 	memset(x, 0, sizeof x);
 	if (n_tx) {
 		x[0].len = n_tx;
+#ifdef CONFIG_SPI_XLP
+		if(n_rx)
+			x[0].spi_cont_cmd = 1;
+#endif
 		spi_message_add_tail(&x[0], &message);
 	}
 	if (n_rx) {
diff --git a/drivers/spi/spi_xlp.c b/drivers/spi/spi_xlp.c
index 683cd33..6f64c63 100644
--- a/drivers/spi/spi_xlp.c
+++ b/drivers/spi/spi_xlp.c
@@ -62,6 +62,16 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #define NOR_SPI_CMD_SIZE		5
 #define XLP_SPI_MAX_CS			4
 
+#define SPI_CFG_CPHA(x)                 ((x) << 0 )     
+#define SPI_CFG_CPOL(x)                 ((x) << 1 )
+#define SPI_CFG_CSPOL(x)                ((x) << 2 )
+#define SPI_CFG_TXMISO(x)               ((x) << 3 )
+#define SPI_CFG_TXMOSI(x)               ((x) << 4 )
+#define SPI_CFG_RXMISO(x)               ((x) << 5 )
+#define SPI_CFG_CSTODATA(x)     	((x) << 8 )
+#define SPI_CFG_LSBFE(x)                ((x) << 10)
+#define SPI_CFG_RXCAP(x)                ((x) << 11)
+
 struct spi_xlp {
 	struct spi_bitbang bitbang;
 	struct completion done;
@@ -160,28 +170,44 @@ static int spi_xlp_setup_transfer(struct spi_device *spi,
 
 static int spi_xlp_setup(struct spi_device *spi)
 {
-	struct spi_bitbang *bitbang;
 	struct spi_xlp *pspi;
 	int32_t val;
+	uint32_t reg_val;
+	uint64_t refclk;
+	uint32_t max_hz = CONFIG_SPI_REFCLK/8;
+
+
 	pspi = spi_master_get_devdata(spi->master);
-	bitbang = &pspi->bitbang;
+	pspi->cs = spi->chip_select;
 
 	spi_reg_write(0, 0, XLP_SPI_SYSCTRL, XLP_SPI_SYS_PMEN);
-
-       if ((1000000 < CONFIG_SPI_REFCLK/4) &&
-                (1000000 > CONFIG_SPI_REFCLK/(64*1024))) {
-                spi_reg_write(0, pspi->cs, XLP_SPI_FDIV, DEFAULT_CS_FDIV);
-        } else {
-                printk("Unsupported SPI frequency %d\n",1000000);
-                goto out;
-        }
+	refclk = nlm_hal_get_ref_clk_freq();
+	
+	if(max_hz <= refclk/(64*1024) || refclk/4 <= max_hz )	{
+		printk("Unsupported SPI frequency %d\n",max_hz);
+		return -1;
+	}
+	//pspi->speed_hz = refclk/8;
+	spi_reg_write(0, spi->chip_select, XLP_SPI_FDIV, do_div(refclk,max_hz));
+	spi_reg_write(0, spi->chip_select, XLP_SPI_FIFO_THRESH, 0x8 || (0x8 << 4));
+	reg_val = (
+			SPI_CFG_CPHA(   (spi->mode & XLP_SPI_CPHA)     ? 1 : 0)
+			| SPI_CFG_CPOL(   (spi->mode & XLP_SPI_CPOL)     ? 1 : 0)
+			| SPI_CFG_CSPOL(  (spi->mode & XLP_SPI_CS_POL_HI)  ? 0 : 1)  //Need reverse on PRM
+			| SPI_CFG_TXMISO( (spi->mode & 0x10)    ? 1 : 0)
+			| SPI_CFG_TXMOSI( 1 ) 
+			| SPI_CFG_RXMISO( 1 ) 
+			| SPI_CFG_LSBFE(  (spi->mode & 0x08)? 1 : 0)
+			| SPI_CFG_CSTODATA(0) );
+	
+	spi_reg_write(0, spi->chip_select, XLP_SPI_CONFIG, reg_val);
+	#ifdef XLP_SPI_DEBUG
+		spi_dump_reg();
+	#endif
 	val = spi_xlp_setup_transfer(spi, NULL);
 	if (val < 0)
 		return val;
-
 	return 0;
-out:
-	return -1;
 
 }
 
@@ -220,26 +246,8 @@ static void spi_xlp_fill_txfifo(struct spi_xlp *pspi, uint32_t* len, unsigned ch
         }
 }
 
-static int spi_disable_cont_cmd(unsigned char* opcode)
-{
-	if(opcode == NULL)
-		return 0;
-
-	if(opcode[0] == CMD_WREN 	||
-	   opcode[0] == CMD_BE_4K	||
-	   opcode[0] == CMD_BE_32K	||
-	   opcode[0] == CMD_CHIP_ERASE	||
-	   opcode[0] == CMD_SE		||
-	   opcode[0] == CMD_RESET	||
-	   opcode[0] == CMD_PROGEXE	||
-	   opcode[0] == CMD_SET_FEATURE	||
-	   opcode[0] == CMD_WRDI )
-		return 1;
-	else
-		return 0;
-}
 
-static int spi_xlp_xfer_block(struct spi_device *spi, struct spi_transfer *t, uint32_t xfer_len)
+static int spi_xlp_xfer_block(struct spi_device *spi, struct spi_transfer *t, uint32_t xfer_len, u8 spi_cmd_cont)
 {
 	uint32_t val;
 	uint32_t rx_data, tx_len, rx_len, rxfifo_cnt, sent_bytes;
@@ -261,15 +269,11 @@ static int spi_xlp_xfer_block(struct spi_device *spi, struct spi_transfer *t, ui
 	if (tx_len) {
 		spi_xlp_fill_txfifo(pspi, &tx_len, &tx_buf);
 		sent_bytes = xfer_len - tx_len;
-		if(xfer_len <= NOR_SPI_CMD_SIZE){
-			val |= XLP_SPI_CMD_CONT;
-		}
-		if(spi_disable_cont_cmd((unsigned char*)t->tx_buf))
-		{
-			val &= ~XLP_SPI_CMD_CONT;
-		}
         }
 
+	if(spi_cmd_cont)
+		val |= XLP_SPI_CMD_CONT;
+
 	if(t->tx_buf)
 		val |= XLP_SPI_CMD_TX;
 	if(t->rx_buf)
@@ -339,14 +343,14 @@ static int spi_xlp_txrx_bufs(struct spi_device *spi, struct spi_transfer *t)
 	ret = 0;
 	len = t->len;
 	while (len > XLP_SPI_MAX_XFER_SIZE) {
-		ret += spi_xlp_xfer_block(spi, t, XLP_SPI_MAX_XFER_SIZE);
+		ret += spi_xlp_xfer_block(spi, t, XLP_SPI_MAX_XFER_SIZE, 1);
 		len = len - XLP_SPI_MAX_XFER_SIZE;
 		if (t->tx_buf)
 			t->tx_buf = t->tx_buf + XLP_SPI_MAX_XFER_SIZE;
 		if (t->rx_buf)
 			t->rx_buf = t->rx_buf + XLP_SPI_MAX_XFER_SIZE;
 	}
-        ret += spi_xlp_xfer_block(spi, t, len);
+        ret += spi_xlp_xfer_block(spi, t, len, t->spi_cont_cmd);
 
         return ret;
 }
diff --git a/include/linux/spi/spi.h b/include/linux/spi/spi.h
index 407fd56..d6283a5 100644
--- a/include/linux/spi/spi.h
+++ b/include/linux/spi/spi.h
@@ -429,6 +429,9 @@ struct spi_transfer {
 	dma_addr_t	rx_dma;
 
 	unsigned	cs_change:1;
+#ifdef CONFIG_SPI_XLP
+	u8              spi_cont_cmd;
+#endif  
 	u8		bits_per_word;
 	u16		delay_usecs;
 	u32		speed_hz;
-- 
1.7.0

