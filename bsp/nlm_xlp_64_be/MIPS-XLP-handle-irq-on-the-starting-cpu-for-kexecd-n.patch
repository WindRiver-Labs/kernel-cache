From 737bcfe1560ecc17007c5a593daa694dcf4b9558 Mon Sep 17 00:00:00 2001
From: Yong Zhang <yong.zhang@windriver.com>
Date: Tue, 27 Nov 2012 15:28:29 +0800
Subject: [PATCH] MIPS: XLP: handle irq on the starting cpu for kexecd && nosmp kernel

By default, pic will be initialised to dispatch irqs to local cpus if
there is no matching ite; but this doesn't work for kernel which
is a kexecd one and have 'nosmp' set because we don't know on which
cpu a panic will happen.
So in such special condition we setup ite-0 to be the starting cpu
and let xlp_closest_match_cpumask() go back to ite-0 if no suitable
ite is found.

Signed-off-by: Yong Zhang <yong.zhang@windriver.com>
---
 arch/mips/netlogic/xlp/pic/ite.c |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/arch/mips/netlogic/xlp/pic/ite.c b/arch/mips/netlogic/xlp/pic/ite.c
index 18c4f23..21e321b 100644
--- a/arch/mips/netlogic/xlp/pic/ite.c
+++ b/arch/mips/netlogic/xlp/pic/ite.c
@@ -18,6 +18,7 @@
 #include <asm/netlogic/hal/nlm_hal_fmn.h>
 #include <asm/netlogic/xlp_irq.h>
 #include <asm/netlogic/cpumask.h>
+#include <asm/mach-netlogic/nlm_kexec.h>
 
 /*
  * xlp_ites[node][0-3] = {0x1, 0xffffffff, 0x0000ffff, 0xffff0000};//local only
@@ -176,8 +177,13 @@ static int xlp_closest_match_cpumask(u8 node, const struct cpumask *m)
 			return i;
 		}
 	}
-	printk(KERN_WARNING "Could not find a match for specified cpumask\n");
-	return 1; /* if no match, point to all local cpus */
+	/* for kexecd && nosmp kernel, restrict irq to the starting cpu */
+	if (is_kexec_boot() && num_online_cpus() == 1) {
+		return 0;
+	} else {
+		printk(KERN_WARNING "Could not find a match for specified cpumask\n");
+		return 1; /* if no match, point to all local cpus */
+	}
 }
 
 /*
@@ -251,7 +257,7 @@ static void xlp_ites_init(void)
 	cpumask_clear(&m);
 	for_each_online_node(node) {
 	/* Simply set the static pattern in all */
-	bm = 1;
+	bm = 1 << hard_smp_processor_id();
 	u32_to_cpumask(&xlp_ites[node][0], bm);
 	cpumask_shift_left(&xlp_ites[node][0], &xlp_ites[node][0], NLM_MAX_CPU_PER_NODE * node); /* directs only to cpu0 of node `node` */
 
-- 
1.7.0

