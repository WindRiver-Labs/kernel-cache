From 19a70afaa05a9e64a0895d63cbddcd0c41f6dd55 Mon Sep 17 00:00:00 2001
From: Zhang Ruibo <ruibo.zhang@windriver.com>
Date: Wed, 26 Dec 2012 16:17:46 +0800
Subject: [PATCH 8/9] nlm_xlp_64_be:Fixed usb xhci control request endianness

Fixed usb xhci control request endianness,and it is extracted from SDK 2.2.5

Signed-off-by: Jayanthi A <jayanthi.annadurai@broadcom.com>
Integrated-by: Ruibo Zhang<ruibo.zhang@windriver.com>
---
 drivers/usb/host/xhci-mem.c  |    2 +-
 drivers/usb/host/xhci-ring.c |    8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/usb/host/xhci-mem.c b/drivers/usb/host/xhci-mem.c
index cfecc05..22ff171 100644
--- a/drivers/usb/host/xhci-mem.c
+++ b/drivers/usb/host/xhci-mem.c
@@ -762,7 +762,7 @@ int xhci_endpoint_init(struct xhci_hcd *xhci,
 	/* Set the max packet size and max burst */
 	switch (udev->speed) {
 	case USB_SPEED_SUPER:
-		max_packet = ep->desc.wMaxPacketSize;
+		max_packet = le16_to_cpu(ep->desc.wMaxPacketSize);
 		ep_ctx->ep_info2 |= cpu_to_le32(MAX_PACKET(max_packet));
 		/* dig out max burst from ep companion desc */
 		if (!ep->ss_ep_comp) {
diff --git a/drivers/usb/host/xhci-ring.c b/drivers/usb/host/xhci-ring.c
index 8c6e270..b91c72c 100644
--- a/drivers/usb/host/xhci-ring.c
+++ b/drivers/usb/host/xhci-ring.c
@@ -994,7 +994,7 @@ bandwidth_change:
 	case TRB_TYPE(TRB_RESET_DEV):
 		xhci_dbg(xhci, "Completed reset device command.\n");
 		slot_id = TRB_TO_SLOT_ID(
-				xhci->cmd_ring->dequeue->generic.field[3]);
+				le32_to_cpu(xhci->cmd_ring->dequeue->generic.field[3]));
 		virt_dev = xhci->devs[slot_id];
 		if (virt_dev)
 			handle_cmd_in_cmd_wait_list(xhci, virt_dev, event);
@@ -1128,7 +1128,7 @@ static int xhci_requires_manual_halt_cleanup(struct xhci_hcd *xhci,
 		 * endpoint anyway.  Check if a babble halted the
 		 * endpoint.
 		 */
-		if ((ep_ctx->ep_info & EP_STATE_MASK) == EP_STATE_HALTED)
+		if ((le32_to_cpu(ep_ctx->ep_info) & EP_STATE_MASK) == EP_STATE_HALTED)
 			return 1;
 
 	return 0;
@@ -2211,8 +2211,8 @@ int xhci_queue_ctrl_tx(struct xhci_hcd *xhci, gfp_t mem_flags,
 
 	queue_trb(xhci, ep_ring, false,
 			/* FIXME endianness is probably going to bite my ass here. */
-			setup->bRequestType | setup->bRequest << 8 | setup->wValue << 16,
-			setup->wIndex | setup->wLength << 16,
+			setup->bRequestType | setup->bRequest << 8 | le16_to_cpu(setup->wValue) << 16,
+			le16_to_cpu(setup->wIndex) | le16_to_cpu(setup->wLength) << 16,
 			TRB_LEN(8) | TRB_INTR_TARGET(0),
 			/* Immediate data in pointer */
 			field);
-- 
1.7.0

