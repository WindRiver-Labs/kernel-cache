From 957fb3ee230e1923284846a152ce41486393df7d Mon Sep 17 00:00:00 2001
From: Yong Zhang <yong.zhang@windriver.com>
Date: Sun, 28 Apr 2013 11:10:25 +0800
Subject: [PATCH] MIPS: XLP: fix virt_to_phys()

when doing umount, call trace is shown:
root@localhost:/root> mount -t jffs2 /dev/mtdblock4 /mnt
root@localhost:/root> umount /mnt/
Unhandled kernel unaligned access[#1]:
Cpu 1
$ 0   : 0000000000000000 ffffffff84b60008 0000000000000000 0000000000000000
$ 4   : 0000000000000010 0000000000000000 0000000000000000 8000000000000000
$ 8   : 507b573ad2299600 0015ffffffe12a00 0000000000000001 0000000000000000
$12   : 000000005400b8e1 000000001000001e 0000000000000000 a8000000b0b90000
$16   : a800000080defc20 0000000000000000 ffffffffdc840000 a81340007fe504c0
$20   : 0000000000000000 0000000000000000 0000000000000000 0000000000000000
$24   : 0000000000000000 ffffffff8407c480
$28   : a800000080de0000 a800000080defbf0 0000000000000000 ffffffff84000c64
Hi    : 0000000000000000
Lo    : 000f420a3242bac0
epc   : ffffffff8404dd14 do_ade+0x2cc/0x5b0
    Not tainted
ra    : ffffffff84000c64 ret_from_exception+0x0/0x10
Status: 5400b8e3    KX SX UX KERNEL EXL IE
Cause : 00800010
BadVA : a81340007fe504c0
PrId  : 000c1100 (XLP316 Rev A0)
Modules linked in: x_tables ip_tables ipv6 sctp binfmt_misc [last unloaded: scsi_wait_scan]
Process flush-mtd-unmap (pid: 866, threadinfo=a800000080de0000, task=a8000000b4572fa8, tls=0000000000000000)
Stack : a8000000802e2540 ffffffff84a8a658 ffffffff84a8a700 ffffffff84a8a760
        0000000000000000 ffffffff84000c64 0000000000000000 ffffffff84b60008
        d07b573ad2299600 0000000000000000 a81340007fe504c0 0000000000000000
        0000000000000000 8000000000000000 507b573ad2299600 0015ffffffe12a00
        0000000000000001 0000000000000000 a800000080deffe0 000000004000b800
        0000000000000000 a8000000b0b90000 ffffffff84a8a658 ffffffff84a8a700
        ffffffff84a8a760 0000000000000000 0000000000000000 0000000000000000
        0000000000000000 0000000000000000 0000000000000000 ffffffff8407c480
        a800000080302540 a8000000b4572fe8 a800000080de0000 a800000080defda8
        0000000000000000 ffffffff840a8668 000000005400b8e3 0000000000000000
        ...
Call Trace:
[<ffffffff8404dd14>] do_ade+0x2cc/0x5b0
[<ffffffff84000c64>] ret_from_exception+0x0/0x10
[<ffffffff840a85b4>] bit_waitqueue+0x54/0xb8
[<ffffffff840a8668>] wake_up_bit+0x18/0x38
[<ffffffff84131b24>] bdi_start_fn+0xdc/0x178
[<ffffffff840a8080>] kthread+0x88/0x90
[<ffffffff84047f08>] kernel_thread_helper+0x10/0x18

The reason is that virt_to_phys() fails to recognize address above
0xfffffffff8000000.

Signed-off-by: Yong Zhang <yong.zhang@windriver.com>
---
 arch/mips/include/asm/io.h |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/arch/mips/include/asm/io.h b/arch/mips/include/asm/io.h
index fe6e207..85bb96c 100644
--- a/arch/mips/include/asm/io.h
+++ b/arch/mips/include/asm/io.h
@@ -116,6 +116,9 @@ static inline void set_io_port_base(unsigned long base)
  */
 static inline unsigned long virt_to_phys(volatile const void *address)
 {
+	if ((unsigned long)address >= CKSEG0)
+		return ((unsigned long)address & 0x1fffffff) + PHYS_OFFSET;
+
 	return (unsigned long)address - PAGE_OFFSET + PHYS_OFFSET;
 }
 
-- 
1.7.0

