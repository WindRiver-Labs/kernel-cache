From 9a3a5877fe84793999d53860ae725398f89da91c Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Fri, 8 Jul 2011 02:23:28 +0800
Subject: [PATCH 33/37] nlm_xlp_64_be: Add a standalone function to drain msgring message

A standalone function is added to drain msgring message and clean up the
boring information like:

	No Handler for message from stn_id= ...

At the same time, drain msgring message earier in
on_chip_shutoff_msgring (called in prom_init) to avoid potential hang
when booting.

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 arch/mips/netlogic/xlp/on_chip.c |   32 +++++++++++++++++++++++++++++++-
 drivers/net/nae/init_nae.c       |    4 +---
 2 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/arch/mips/netlogic/xlp/on_chip.c b/arch/mips/netlogic/xlp/on_chip.c
index 39c6874..58a9587 100644
--- a/arch/mips/netlogic/xlp/on_chip.c
+++ b/arch/mips/netlogic/xlp/on_chip.c
@@ -304,13 +304,43 @@ void nlm_nmi_cpus(unsigned int mask)
 		nlm_hal_write_pic_reg(mmio, PIC_IPI_CTL, (nmi << 31) | (1 << 16) | (cpumask_hi));
 }
 
+/* need COP2 to be accessible */
+static void on_chip_msgring_drain_msgs(void)
+{
+	int vc = 0;
+	uint32_t size = 0, code = 0, src_id = 0;
+	uint64_t msg0, msg1, msg2, msg3;
+	unsigned int msg_status1 = 0, vc_empty_status = 0;
+	int cpu = hard_smp_processor_id();
+	int pop_vc_mask = nlm_cpu_vc_mask[cpu];
+
+	msg0 = msg1 = msg2 = msg3 = 0;
+
+	/* loop is just to be safe, but should only hit once in theory */
+	for ( ; ; ) {
+		/* Read latest VC empty mask */
+		msg_status1 = xlp_read_status1();
+
+		vc_empty_status = (msg_status1 >> 24) & pop_vc_mask;
+		if (vc_empty_status == pop_vc_mask)
+			break;
+
+		for (vc = 0; vc < 4; vc++) {
+			if (!(pop_vc_mask & (1<<vc)))
+				continue;
+			(void) xlp_message_receive(vc, &src_id, &size, &code, &msg0, &msg1, &msg2, &msg3);
+		}
+	}
+}
+
 void on_chip_shutoff_msgring(void)
 {
 	uint32_t flags;
 
 	/* Need write interrupt vector to cp2 msgconfig register */
 	msgrng_access_enable(flags);
-	_write_32bit_cp2_register(XLP_MSG_CONFIG_REG, 0);
+	on_chip_msgring_drain_msgs();
+	xlp_write_config(0);
 	msgrng_access_disable(flags);
 }
 
diff --git a/drivers/net/nae/init_nae.c b/drivers/net/nae/init_nae.c
index 5305336..b5915cc 100644
--- a/drivers/net/nae/init_nae.c
+++ b/drivers/net/nae/init_nae.c
@@ -21,14 +21,12 @@ static void config_fmn(void)
 	unsigned long mflags = 0;
 	struct cpumask cpumask;
 
-	/* bind cpu to n0c0t0 and drain all leftover firmware messages */
+	/* bind cpu to n0c0t0 */
 	sched_bindto_save_affinity(0, &cpumask);
 
 	/* Configure FMN again but only cpu credits */
 	msgrng_access_enable(mflags);
 
-	nlm_xlp_msgring_int_handler(IRQ_MSGRING, NULL);
-
 	/* Configure credits to non-n0c0 cores */
 	nlm_hal_fmn_init(0x10000000, 0x02000000, 50);
 
-- 
1.7.0.2

