From 5ea8a77f6b801f9e7a3d030634757245c8e802df Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Thu, 7 Apr 2011 14:07:06 +0800
Subject: [PATCH 16/37] nlm_xlp_64_be: add specific fls64, fls

[ Based on netlogic SDK 20110329 ]

Add NLM XLP specific bit operations.

Signed-off-by: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Integrated-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 arch/mips/include/asm/bitops.h |   20 ++++++++++++++++++++
 1 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/arch/mips/include/asm/bitops.h b/arch/mips/include/asm/bitops.h
index 9255cfb..8cf672e 100644
--- a/arch/mips/include/asm/bitops.h
+++ b/arch/mips/include/asm/bitops.h
@@ -643,6 +643,14 @@ static inline unsigned long __ffs(unsigned long word)
 static inline int fls(int x)
 {
 	int r;
+#ifdef CONFIG_CPU_XLP
+	__asm__("       .set push                       \n"
+		"       .set mips32                     \n"
+		"       clz %0, %1                      \n"
+		"       .set pop                        \n"
+		: "=r" (x) : "r" (x));
+	return 32 - x;
+#endif
 
 	if (__builtin_constant_p(cpu_has_clo_clz) && cpu_has_clo_clz) {
 		__asm__("clz %0, %1" : "=r" (x) : "r" (x));
@@ -676,7 +684,19 @@ static inline int fls(int x)
 	return r;
 }
 
+#if defined(CONFIG_64BIT) && defined(CONFIG_CPU_XLP)
+static __always_inline int fls64(__u64 word)
+{
+	__asm__("       .set push               \n"
+		"       .set mips64             \n"
+		"       dclz %0, %1             \n"
+		"       .set pop                \n"
+		: "=r" (word) : "r" (word));
+	return 64 - word;
+}
+#else
 #include <asm-generic/bitops/fls64.h>
+#endif
 
 /*
  * ffs - find first bit set.
-- 
1.7.0.2

