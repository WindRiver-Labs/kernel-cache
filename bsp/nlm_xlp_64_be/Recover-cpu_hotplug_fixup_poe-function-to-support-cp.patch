From 34af4b25822abb01a5b128cb9d235f25359a40bd Mon Sep 17 00:00:00 2001
From: Yue Tao <yue.tao@windriver.com>
Date: Wed, 5 Dec 2012 13:46:12 +0800
Subject: [PATCH] Recover cpu_hotplug_fixup_poe function to support cpu hotplug.

Signed-off-by: Yue Tao <Yue.Tao@windriver.com>
---
 arch/mips/netlogic/common/nlm_hal.c |   43 +++++++++++++++++++++++++++++++++++
 1 files changed, 43 insertions(+), 0 deletions(-)

diff --git a/arch/mips/netlogic/common/nlm_hal.c b/arch/mips/netlogic/common/nlm_hal.c
index bac6340..f10c3ae 100644
--- a/arch/mips/netlogic/common/nlm_hal.c
+++ b/arch/mips/netlogic/common/nlm_hal.c
@@ -68,6 +68,7 @@
 #include "nlm_hal_sys.h"
 #include "libfdt.h"
 #include "fdt_helper.h"
+#include "msgring.h"
 
 /* These addresses are computed by the nlm_hal_init() */
 unsigned long xlp_io_base;
@@ -2057,6 +2058,48 @@ void nlm_hal_sata_init(void)
 	nlm_hal_sata_firmware_init();
 }
 
+#define NUM_VCS_PER_CPU 4
+
+#define NUM_DISTVEC_CELLS 	16
+#define MIN_DIST_VEC 0
+#define MAX_DIST_VEC 16
+
+#define NUM_DISTVEC_CPUMASKS 4
+
+#define POE_DIST_VEC0 0x100
+
+void cpu_hotplug_fixup_poe(int cpu, int flag)
+{
+	unsigned long mflags = 0;
+	int reg_index;
+	uint32_t value, vcmask;
+	int cell, offset, vc = 0;
+	uint32_t distvec[NUM_DISTVEC_CELLS];
+	int node = cpu/32;
+	nlm_nae_config_ptr nae_cfg = nlm_node_cfg.nae_cfg[node];
+
+	vcmask =  (1 << nae_cfg->rx_vc);
+	vc = (cpu * NUM_VCS_PER_CPU) % (NUM_DISTVEC_CELLS * 32);
+	cell = vc / 32;
+
+	reg_index = POE_DIST_VEC0 + (NUM_DISTVEC_CELLS - 1 - cell);
+
+	/* do we need to ensure nobody is operating on msgrng? */
+	msgrng_access_enable(mflags);
+	if (flag) {
+		/* online */
+		offset = vc % 32;
+		value = vcmask << offset;
+
+		distvec[cell] |= value;
+		nlm_hal_write_poe_pcim_reg(node,reg_index, value);
+	} else {
+		/* offline */
+		nlm_hal_write_poe_pcim_reg(node,reg_index, 0);
+	}
+	msgrng_access_disable(mflags);
+}
+
 uint32_t get_dom_owner_mask(void *fdt, int dom_id, char *module)
 {
 	char dom_node_str[32];
-- 
1.7.0

