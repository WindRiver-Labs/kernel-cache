From 88387825aa5dfffd2d822306594007d6b9640a04 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Wed, 26 Dec 2012 16:25:49 +0800
Subject: [PATCH 1/9] nlm_xlp_64_be: remove some restrictions on 16G MEM

The old NLM_16G_MEM_SUPPORT depends on PAGE_SIZE_64KB, HUGETLBFS
and NUMA, but this is unnecessary. Remove these restrictions.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/Kconfig              |   16 +++++++---------
 arch/mips/netlogic/xlp/setup.c |    4 ++--
 include/linux/mm.h             |    2 --
 3 files changed, 9 insertions(+), 13 deletions(-)

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index 4e07d8a..e24c674 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -1602,9 +1602,7 @@ config 64BIT
 
 config NLM_16G_MEM_SUPPORT
 	bool "more than 16GB memory support"
-	depends on 64BIT && NLM_XLP
-	select PAGE_SIZE_64KB
-	select HUGETLBFS
+	depends on 64BIT
 	help
 	  Support more than 16GB memory
 
@@ -1616,7 +1614,7 @@ choice
 
 config PAGE_SIZE_4KB
 	bool "4kB"
-	depends on !CPU_LOONGSON2 && !NLM_16G_MEM_SUPPORT
+	depends on !CPU_LOONGSON2
 	help
 	 This option select the standard 4kB Linux page size.  On some
 	 R3000-family processors this is the only available page size.  Using
@@ -1625,7 +1623,7 @@ config PAGE_SIZE_4KB
 
 config PAGE_SIZE_8KB
 	bool "8kB"
-	depends on ((EXPERIMENTAL && CPU_R8000) || CPU_CAVIUM_OCTEON) && !NLM_16G_MEM_SUPPORT
+	depends on (EXPERIMENTAL && CPU_R8000) || CPU_CAVIUM_OCTEON
 	help
 	  Using 8kB page size will result in higher performance kernel at
 	  the price of higher memory consumption.  This option is available
@@ -1634,7 +1632,7 @@ config PAGE_SIZE_8KB
 
 config PAGE_SIZE_16KB
 	bool "16kB"
-	depends on !CPU_R3000 && !CPU_TX39XX && !NLM_16G_MEM_SUPPORT
+	depends on !CPU_R3000 && !CPU_TX39XX
 	help
 	  Using 16kB page size will result in higher performance kernel at
 	  the price of higher memory consumption.  This option is available on
@@ -1643,7 +1641,7 @@ config PAGE_SIZE_16KB
 
 config PAGE_SIZE_32KB
 	bool "32kB"
-	depends on CPU_CAVIUM_OCTEON && !NLM_16G_MEM_SUPPORT
+	depends on CPU_CAVIUM_OCTEON
 	help
 	  Using 32kB page size will result in higher performance kernel at
 	  the price of higher memory consumption.  This option is available
@@ -1652,7 +1650,7 @@ config PAGE_SIZE_32KB
 
 config PAGE_SIZE_64KB
 	bool "64kB"
-	depends on EXPERIMENTAL && !CPU_R3000 && !CPU_TX39XX && NLM_16G_MEM_SUPPORT
+	depends on EXPERIMENTAL && !CPU_R3000 && !CPU_TX39XX
 	help
 	  Using 64kB page size will result in higher performance kernel at
 	  the price of higher memory consumption.  This option is available on
@@ -1706,7 +1704,7 @@ endchoice
 config FORCE_MAX_ZONEORDER
         int "Maximum zone order"
         range 11 64
-        default "18"
+        default "13"
         help
           The kernel memory allocator divides physically contiguous memory
           blocks into "zones", where each zone is a power of two number of
diff --git a/arch/mips/netlogic/xlp/setup.c b/arch/mips/netlogic/xlp/setup.c
index a9c541f..c979f4d 100644
--- a/arch/mips/netlogic/xlp/setup.c
+++ b/arch/mips/netlogic/xlp/setup.c
@@ -1174,6 +1174,8 @@ int nlm_config_ici(void)
 	}
 }
 
+#endif
+
 #ifdef CONFIG_KEXEC
 extern void nlm_kexec_init(void);
 #endif
@@ -1243,8 +1245,6 @@ void __init prom_init(void)
 			wakeup(prom_pre_boot_secondary_cpus);
 	}
 
-#endif
-
 #ifdef CONFIG_KEXEC
 	nlm_kexec_init();
 #endif
diff --git a/include/linux/mm.h b/include/linux/mm.h
index 0dabd9a..c75773d 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -270,8 +270,6 @@ static inline int get_page_unless_zero(struct page *page)
 	return atomic_inc_not_zero(&page->_count);
 }
 
-extern int page_is_ram(unsigned long pfn);
-
 /* Support for virtually mapped pages */
 struct page *vmalloc_to_page(const void *addr);
 unsigned long vmalloc_to_pfn(const void *addr);
-- 
1.7.0

