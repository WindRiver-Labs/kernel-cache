From 69b2a849ac045bdafcf701e87a6ffa1ff89ce40d Mon Sep 17 00:00:00 2001
From: Zi Shen Lim <zlim@netlogicmicro.com>
Date: Thu, 17 Jul 2014 16:32:22 +0800
Subject: [PATCH 16/16] mips:xlp: Fix TLB flushing issue

Stale tlbsize was used resulting in incomplete TLB flushes.
During mmu_init, make sure we update tlbsize *after* configuration.

Based on Broadcom SDK 2.3.

Signed-off-by: Zi Shen Lim <zlim@netlogicmicro.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
[Yong Zhang: Restore what commit 92bbe1b988d3 does]
Signed-off-by: Yong Zhang <yong.zhang@windriver.com>
---
 arch/mips/kernel/traps.c     |   19 +++++++++++++++----
 arch/mips/netlogic/xlp/mmu.c |    4 ++++
 2 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c
index 7bb77c2..c040676 100644
--- a/arch/mips/kernel/traps.c
+++ b/arch/mips/kernel/traps.c
@@ -1387,10 +1387,21 @@ void __init *set_except_vector(int n, void *addr)
 
 	exception_handlers[n] = handler;
 	if (n == 0 && cpu_has_divec) {
-		*(u32 *)(ebase + 0x200) = 0x000000c0;  /* ehb */
-		*(u32 *)(ebase + 0x204) = 0x08000000 |
-					  (0x03ffffff & (handler >> 2)); /* j handler */
-		local_flush_icache_range(ebase + 0x200, ebase + 0x208);
+		unsigned long jump_mask = ~((1 << 28) - 1);
+		u32 *buf = (u32 *)(ebase + 0x200);
+		unsigned int k0 = 26;
+#ifdef CONFIG_NLM_COMMON
+		uasm_i_ehb(&buf);
+#endif /* CONFIG_NLM_COMMON */
+		if ((handler & jump_mask) == ((ebase + 0x200) & jump_mask)) {
+			uasm_i_j(&buf, handler & ~jump_mask);
+			uasm_i_nop(&buf);
+		} else {
+			UASM_i_LA(&buf, k0, handler);
+			uasm_i_jr(&buf, k0);
+			uasm_i_nop(&buf);
+		}
+		local_flush_icache_range(ebase + 0x200, (unsigned long)buf);
 	}
 	return (void *)old_handler;
 }
diff --git a/arch/mips/netlogic/xlp/mmu.c b/arch/mips/netlogic/xlp/mmu.c
index c8bcda2..7e5cf52 100644
--- a/arch/mips/netlogic/xlp/mmu.c
+++ b/arch/mips/netlogic/xlp/mmu.c
@@ -352,4 +352,8 @@ void mmu_init(void)
 	tlbstats_init();
 	entrylo0_mask_init();
 
+	/*
+	 * Read back TLB entries after configuration
+	 */
+	current_cpu_data.tlbsize = (read_c0_config6() >> 16 ) & 0xffff + 1;
 }
-- 
1.7.0

