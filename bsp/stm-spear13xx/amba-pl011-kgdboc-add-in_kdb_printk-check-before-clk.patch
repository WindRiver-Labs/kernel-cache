From 54a64b7b8fe5b8a996d853fdadad585d61d8f233 Mon Sep 17 00:00:00 2001
From: Liming Wang <liming.wang@windriver.com>
Date: Fri, 1 Feb 2013 11:17:11 +0800
Subject: [PATCH 2/2] amba-pl011, kgdboc: add in_kdb_printk check before clk
 operation functions

For some boards, clk_enable/clk_disable are not empty functions and will
call spin_lock function. So add in_kdb_printk before clk_enable/clk_disable
to avoid calling spin_lock in clk_enable/clk_disable with the irq
disabled in preemp-rt kernel if KGDBoC is triggered. Otherwise the call path trips
the rtmutex debug code:

BUG: sleeping function called from invalid context at kernel/rtmutex.c:646

Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/tty/serial/amba-pl011.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/tty/serial/amba-pl011.c b/drivers/tty/serial/amba-pl011.c
index 41f045c..38107ee 100644
--- a/drivers/tty/serial/amba-pl011.c
+++ b/drivers/tty/serial/amba-pl011.c
@@ -1790,7 +1790,8 @@ pl011_console_write(struct console *co, const char *s, unsigned int count)
 	unsigned long flags;
 	int locked = 1;
 
-	clk_enable(uap->clk);
+	if (!in_kdb_printk())
+		clk_enable(uap->clk);
 
 	local_irq_save_nort(flags);
 	if (uap->port.sysrq)
@@ -1823,7 +1824,8 @@ pl011_console_write(struct console *co, const char *s, unsigned int count)
 		spin_unlock(&uap->port.lock);
 	local_irq_restore_nort(flags);
 
-	clk_disable(uap->clk);
+	if (!in_kdb_printk())
+		clk_disable(uap->clk);
 }
 
 static void __init
-- 
1.7.9.7

