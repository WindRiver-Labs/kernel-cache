From 75606e104938f9fc0a26d22f1fdf428ee4208006 Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Fri, 24 Oct 2008 12:23:16 -0700
Subject: [PATCH] cavium: Optimize the generic_swap

On Cavium, the generic_swap can be done a u64 at a time,
which shows up as an improvement in the simulator.

Signed-off-by: Tomaso Paoletti <tpaoletti@caviumnetworks.com>
Signed-off-by: Paul Gortmaker <Paul.Gortmaker@windriver.com>
---
 lib/sort.c |   19 +++++++++++++++++++
 1 files changed, 19 insertions(+), 0 deletions(-)

diff --git a/lib/sort.c b/lib/sort.c
index 6abbaf3..82efe07 100644
--- a/lib/sort.c
+++ b/lib/sort.c
@@ -18,6 +18,24 @@ static void u32_swap(void *a, void *b, int size)
 
 static void generic_swap(void *a, void *b, int size)
 {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	/* I'm tired of waiting for a slow copy in simulation. I'll
+	   leave the old slow way for other processors in case they
+	   don't handle possible unaligned loads and stores well */
+	while (size>=8) {
+		u64 t = *(u64 *)a;
+		size-=8;
+		*(u64 *)a = *(u64 *)b;
+		*(u64 *)b = t;
+	}
+
+	while (size) {
+		char t = *(char *)a;
+	size--;
+		*(char *)a++ = *(char *)b;
+		*(char *)b++ = t;
+	}
+#else
 	char t;
 
 	do {
@@ -25,6 +43,7 @@ static void generic_swap(void *a, void *b, int size)
 		*(char *)a++ = *(char *)b;
 		*(char *)b++ = t;
 	} while (--size > 0);
+#endif
 }
 
 /**
-- 
1.5.5.1

