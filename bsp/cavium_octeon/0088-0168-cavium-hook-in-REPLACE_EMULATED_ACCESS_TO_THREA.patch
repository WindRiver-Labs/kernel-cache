From aed99228ed5748e587f2447299e6221d69f73695 Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Fri, 24 Oct 2008 12:23:01 -0700
Subject: [PATCH] 0168-cavium-hook-in-REPLACE_EMULATED_ACCESS_TO_THREAD.patch

detected and a default message was constructed
---
 arch/mips/cavium-octeon/Kconfig |   27 +++++++++++++++++++++++++++
 1 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig
index f9ae974..9f054c3 100644
--- a/arch/mips/cavium-octeon/Kconfig
+++ b/arch/mips/cavium-octeon/Kconfig
@@ -61,6 +61,33 @@ config FAST_ACCESS_TO_THREAD_POINTER
 	  is used by the kernel to save and restore the thread pointer during
 	  the TLB fault handlers. This CVMSEG address isn't available to user
 	  applications.
+	
+config REPLACE_EMULATED_ACCESS_TO_THREAD_POINTER
+	bool "Support dynamically replacing emulated thread pointer accesses"
+	depends on FAST_ACCESS_TO_THREAD_POINTER
+	default "y"
+	help
+	  When this option is set, the kernel can dynamically replace slower
+	  references to the thread pointer with fast accesses. This involves
+	  replacing userspace instructions at runtime, so it may not work with
+	  all programs. It is advised to use a toolchain that creates code for
+	  FAST_ACCESS_TO_THREAD_POINTER instead of this option. If you have
+	  code compiled with a Cavium compiler prior to release 1.5, or are
+	  using a non Cavium compiler, this option may allow you to receive
+	  most of the benefit of direct access to the thread pointer. It may
+	  also cause programs to fail.
+	
+	  Instruction replacement is disabled on boot. It can be controlled by
+	  writing a mode to /sys/module/traps/parameters/thread_pointer_mode.
+	  The supported modes are:
+	
+	  0 - Use the normal kernel emulation without any changes.
+	  1 - Replace emulated instructions with direct accesses to the thread
+		register.
+	  2 - Replace emulated instructions and log the replacement PC.
+	  3 - Replace emulated instructions with break instructions. This will
+		cause programs to fail, but makes it easy to stop gdb on the
+		instruction.
 
 config CAVIUM_OCTEON_LOCK_L2
 	bool "Lock often used kernel code in the L2"
-- 
1.5.5.1

