From 3ac386a0358bbf039c00e42f25d713b78593c69b Mon Sep 17 00:00:00 2001
From: Wally Gleemer <Wally.Gleemer@windriver.com>
Date: Tue, 25 Mar 2008 16:21:46 -0700
Subject: [PATCH] cavium: fix compile failure of ethernet-pow.c

Driver was using some legacy items that simply don't exist anymore.

Signed-off-by: Wally Gleemer <Wally.Gleemer@windriver.com>
---
 arch/mips/cavium-octeon/ethernet-pow.c |   17 ++++++++---------
 1 files changed, 8 insertions(+), 9 deletions(-)

diff --git a/arch/mips/cavium-octeon/ethernet-pow.c b/arch/mips/cavium-octeon/ethernet-pow.c
index be208a5..6594282 100644
--- a/arch/mips/cavium-octeon/ethernet-pow.c
+++ b/arch/mips/cavium-octeon/ethernet-pow.c
@@ -347,8 +347,8 @@ static int packet_transmit(struct sk_buff *skb, struct net_device *dev)
 			// work->word2.s.vlan_id = 0; /* FIXME */
 			// work->word2.s.dec_ipcomp = 0; /* FIXME */
 			work->word2.s.tcp_or_udp =
-				(skb->nh.iph->protocol == IP_PROTOCOL_TCP) ||
-				(skb->nh.iph->protocol == IP_PROTOCOL_UDP);
+				(ip_hdr(skb)->protocol == IP_PROTOCOL_TCP) ||
+				(ip_hdr(skb)->protocol == IP_PROTOCOL_UDP);
 			// work->word2.s.dec_ipsec = 0; /* FIXME */
 			// work->word2.s.is_v6 = 0; /* We only support IPv4
 			// right now */
@@ -356,8 +356,8 @@ static int packet_transmit(struct sk_buff *skb, struct net_device *dev)
 			// zero */
 			// work->word2.s.L4_error = 0; /* No error, packet is
 			// internal */
-			work->word2.s.is_frag = !((skb->nh.iph->frag_off == 0)
-						  || (skb->nh.iph->frag_off ==
+			work->word2.s.is_frag = !((ip_hdr(skb)->frag_off == 0)
+						  || (ip_hdr(skb)->frag_off ==
 						      1 << 14));
 			// work->word2.s.IP_exc = 0; /* Assume Linux is sending
 			// a good packet */
@@ -554,7 +554,7 @@ static irqreturn_t do_interrupt(int cpl, void *dev_id)
  */
 static void device_poll_controller(struct net_device *dev)
 {
-	do_interrupt(0, dev, NULL);
+	do_interrupt(0, dev);
 }
 #endif
 
@@ -617,7 +617,6 @@ static int device_init(struct net_device *dev)
 #ifdef CONFIG_NET_POLL_CONTROLLER
 	dev->poll_controller = device_poll_controller;
 #endif
-	dev->weight = 16;
 	dev->features |= NETIF_F_LLTX;	/* We do our own locking, Linux doesn't
 					   need to */
 	dev->dev_addr[0] = 0;
@@ -638,6 +637,7 @@ static int device_init(struct net_device *dev)
  */
 static int __init ethernet_pow_init(void)
 {
+	int r;
 	device_private_t *priv;
 
 	if ((receive_group >= NUM_GROUPS)) {
@@ -669,7 +669,6 @@ static int __init ethernet_pow_init(void)
 		return -1;
 	}
 
-	SET_MODULE_OWNER(global_device);
 	global_device->init = device_init;
 	strcpy(global_device->name, "oct%d");
 
@@ -700,8 +699,8 @@ static int __init ethernet_pow_init(void)
 	}
 
 	/* Register an IRQ hander for to receive POW interrupts */
-	request_irq(8 + receive_group, do_interrupt, SA_SHIRQ, "POW Ethernet",
-		    global_device);
+	r = request_irq(8 + receive_group, do_interrupt, IRQF_SHARED,
+			"POW Ethernet", global_device);
 
 	/* Enable POW interrupt when our port has at least one packet */
 	cvmx_write_csr(OCTEON_POW_WQ_INT_THRX(receive_group), 0x1001);
-- 
1.5.5.1

