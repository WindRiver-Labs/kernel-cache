From b6a6b4c2413157c6ffb2cc7e43950dde303feb51 Mon Sep 17 00:00:00 2001
From: Wally Gleemer <Wally.Gleemer@windriver.com>
Date: Tue, 25 Mar 2008 16:21:46 -0700
Subject: [PATCH] cavium: Use saa in atomic_add

If Gnu AS knows about the saa opcode, then use it in the atomic_add
implementation.

Signed-off-by: Wally Gleemer <Wally.Gleemer@windriver.com>
---
 include/asm-mips/atomic.h |   52 +++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 52 insertions(+), 0 deletions(-)

diff --git a/include/asm-mips/atomic.h b/include/asm-mips/atomic.h
index 4c894de..4d0606e 100644
--- a/include/asm-mips/atomic.h
+++ b/include/asm-mips/atomic.h
@@ -50,6 +50,19 @@ typedef struct { volatile int counter; } atomic_t;
  */
 static __inline__ void atomic_add(int i, atomic_t * v)
 {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+#ifdef GAS_SAA_SUPPORTED
+	if (cpu_has_saa) {
+		__asm__ __volatile__(
+		".set	push\n"
+		".set	arch=octeon\n"
+		"saa    %1, (%2)\n"
+		".set	pop\n"
+		: "+m" (v->counter)
+		: "r" (i), "r" (v));
+	} else
+#endif /* GAS_SAA_SUPPORTED */
+#endif
 	if (cpu_has_llsc && R10000_LLSC_WAR) {
 		unsigned long temp;
 
@@ -95,6 +108,19 @@ static __inline__ void atomic_add(int i, atomic_t * v)
  */
 static __inline__ void atomic_sub(int i, atomic_t * v)
 {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+#ifdef GAS_SAA_SUPPORTED
+	if (cpu_has_saa) {
+		__asm__ __volatile__(
+		".set	push\n"
+		".set	arch=octeon\n"
+		"saa    %1, (%2)\n"
+		".set	pop\n"
+		: "+m" (v->counter)
+		: "r" (-i), "r" (v));
+	} else
+#endif /* GAS_SAA_SUPPORTED */
+#endif
 	if (cpu_has_llsc && R10000_LLSC_WAR) {
 		unsigned long temp;
 
@@ -434,6 +460,19 @@ typedef struct { volatile long counter; } atomic64_t;
  */
 static __inline__ void atomic64_add(long i, atomic64_t * v)
 {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+#ifdef GAS_SAA_SUPPORTED
+	if (cpu_has_saa) {
+		__asm__ __volatile__(
+		".set	push\n"
+		".set	arch=octeon\n"
+		"saad   %1, (%2)\n"
+		".set	pop\n"
+		: "+m" (v->counter)
+		: "r" (i), "r" (v));
+	} else
+#endif /* GAS_SAA_SUPPORTED */
+#endif
 	if (cpu_has_llsc && R10000_LLSC_WAR) {
 		unsigned long temp;
 
@@ -479,6 +518,19 @@ static __inline__ void atomic64_add(long i, atomic64_t * v)
  */
 static __inline__ void atomic64_sub(long i, atomic64_t * v)
 {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+#ifdef GAS_SAA_SUPPORTED
+	if (cpu_has_saa) {
+		__asm__ __volatile__(
+		".set	push\n"
+		".set	arch=octeon\n"
+		"saad    %1, (%2)\n"
+		".set	pop\n"
+		: "+m" (v->counter)
+		: "r" (-i), "r" (v));
+	} else
+#endif /* GAS_SAA_SUPPORTED */
+#endif
 	if (cpu_has_llsc && R10000_LLSC_WAR) {
 		unsigned long temp;
 
-- 
1.5.5.1

