From 4ff3698ef565feccc75ecf1e0257c4e138f5b0bf Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Fri, 24 Oct 2008 12:23:14 -0700
Subject: [PATCH] uto_msg: importing 0156-cavium-smp-section-annotations.patch

This is an automatic import of patch 0156-cavium-smp-section-annotations.patch, no headers were
detected and a default message was constructed
---
 arch/mips/cavium-octeon/smp.c         |    8 ++++----
 arch/mips/cavium-octeon/sync-octeon.c |    6 +++---
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/arch/mips/cavium-octeon/smp.c b/arch/mips/cavium-octeon/smp.c
index 8bc4c05..f2e0854 100644
--- a/arch/mips/cavium-octeon/smp.c
+++ b/arch/mips/cavium-octeon/smp.c
@@ -19,8 +19,8 @@
 
 extern void octeon_user_io_init(void);
 
-extern void  oct_synchronise_count_master(void);
-extern void  oct_synchronise_count_slave(void);
+extern void  __cpuinit oct_synchronise_count_master(void);
+extern void  __cpuinit oct_synchronise_count_slave(void);
 
 volatile unsigned long octeon_processor_boot = 0xff;
 volatile unsigned long octeon_processor_cycle;
@@ -77,7 +77,7 @@ static inline void octeon_send_ipi_mask(cpumask_t mask, unsigned int action)
 /**
  * Detect available CPUs, populate phys_cpu_present_map
  */
-static void octeon_smp_setup(void)
+static void __cpuinit octeon_smp_setup(void)
 {
 	const int coreid = cvmx_get_core_num();
 	int cpus;
@@ -187,7 +187,7 @@ void octeon_prepare_cpus(unsigned int max_cpus)
  * Last chance for the board code to finish SMP initialization before
  * the CPU is "online".
  */
-static void octeon_smp_finish(void)
+static void __cpuinit octeon_smp_finish(void)
 {
 #ifdef CONFIG_CAVIUM_GDB
 	unsigned long tmp;
diff --git a/arch/mips/cavium-octeon/sync-octeon.c b/arch/mips/cavium-octeon/sync-octeon.c
index ddda782..452422c 100644
--- a/arch/mips/cavium-octeon/sync-octeon.c
+++ b/arch/mips/cavium-octeon/sync-octeon.c
@@ -15,12 +15,12 @@
 */
 
 /* no atomic sync needed, really. Call master sync before SMP launched. */
-static atomic_t __initdata octeon_time_sync_flag = ATOMIC_INIT(0);
+static atomic_t __cpuinitdata octeon_time_sync_flag = ATOMIC_INIT(0);
 
 /* Master sets up external reference clock. Use PFC0 for that.
    If you do Octeon performance monitoring
    at boot time - this code will break it. */
-void __init oct_synchronise_count_master(void)
+void __cpuinit oct_synchronise_count_master(void)
 {
 	cvmx_l2c_pfctl_t pfctl;
 	cvmx_l2c_pfcx_t pfc0;
@@ -57,7 +57,7 @@ void __init oct_synchronise_count_master(void)
 }
 
 /* each slave core sets its clock to external reference */
-void __init oct_synchronise_count_slave(void)
+void __cpuinit oct_synchronise_count_slave(void)
 {
 	cvmx_l2c_pfcx_t pfc0;
 	int count = 2;
-- 
1.5.5.1

