From 086978e6ddf59c348069d56faf3e037361a158db Mon Sep 17 00:00:00 2001
From: Wally Gleemer <Wally.Gleemer@windriver.com>
Date: Tue, 25 Mar 2008 16:21:46 -0700
Subject: [PATCH] cavium: add sysn32_rt_sigtimedwait

While not really Cavium specific, this patch adds in the
sysn32_rt_sigtimedwait to arch/mips/kernel/linux32.c

Signed-off-by: Wally Gleemer <Wally.Gleemer@windriver.com>
---
 arch/mips/kernel/linux32.c |   25 +++++++++++++++++++++++++
 1 files changed, 25 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/linux32.c b/arch/mips/kernel/linux32.c
index 65af3cc..97040b1 100644
--- a/arch/mips/kernel/linux32.c
+++ b/arch/mips/kernel/linux32.c
@@ -381,6 +381,31 @@ asmlinkage long sysn32_msgrcv(int msqid, u32 msgp, size_t msgsz, int msgtyp,
 	return compat_sys_msgrcv(msqid, msgsz, msgtyp, msgflg, IPC_64,
 				 compat_ptr(msgp));
 }
+
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+asmlinkage long sysn32_rt_sigtimedwait(const uint32_t __user *uthese,
+	siginfo_t __user *uinfo, const struct compat_timespec __user *uts32,
+	size_t sigsetsize)
+{
+	struct timespec __user *uts = NULL;
+	sigset_t __user *these = compat_alloc_user_space(sizeof(sigset_t));
+
+	if (uts32) {
+		struct timespec ts;
+		uts = compat_alloc_user_space(sizeof(struct timespec));
+		if (get_user(ts.tv_sec, &uts32->tv_sec) ||
+			get_user(ts.tv_nsec, &uts32->tv_nsec) ||
+			copy_to_user (uts, &ts, sizeof (ts)))
+			return -EFAULT;
+	}
+	/* Fix signal mask. Userspace filled in 32bit numbers, Kernel expects
+	   64bit numbers */
+	these->sig[0] = (uint64_t)uthese[0] | ((uint64_t)uthese[1]<<32);
+	these->sig[1] = (uint64_t)uthese[2] | ((uint64_t)uthese[3]<<32);
+	return sys_rt_sigtimedwait(these, uinfo, uts, sigsetsize);
+}
+#endif	/* CAVIUM */
+
 #endif
 
 struct sysctl_args32
-- 
1.5.5.1

