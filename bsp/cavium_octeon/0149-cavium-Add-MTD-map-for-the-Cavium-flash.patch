From ef1c37ff2beb58c6a92a9e46f21b4830ea191ba1 Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Fri, 24 Oct 2008 12:23:12 -0700
Subject: [PATCH] cavium: Add MTD map for the Cavium flash

Import the required MTD mapping that is specific to the Cavium
flash layout.

Signed-off-by: Paul Gortmaker <Paul.Gortmaker@windriver.com>
---
 drivers/mtd/maps/cavium_flash.c |  104 +++++++++++++++++++++++++++++++++++++++
 1 files changed, 104 insertions(+), 0 deletions(-)
 create mode 100644 drivers/mtd/maps/cavium_flash.c

diff --git a/drivers/mtd/maps/cavium_flash.c b/drivers/mtd/maps/cavium_flash.c
new file mode 100644
index 0000000..a9302d4
--- /dev/null
+++ b/drivers/mtd/maps/cavium_flash.c
@@ -0,0 +1,104 @@
+/*
+ * Flash memory access on CAVIUM CN38xx board
+ *
+ * Copyright (c) 2006-2007 Wind River Systems, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+ * See the GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/types.h>
+#include <linux/kernel.h>
+
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/map.h>
+#include <linux/mtd/partitions.h>
+
+#include <asm/io.h>
+
+#ifdef 	DEBUG_RW
+#define	DBG(x...)	printk(x)
+#else
+#define	DBG(x...)
+#endif
+
+static struct map_info cavium_map = {
+	.name =	"CAVIUM MTD"
+};
+
+static struct mtd_partition cavium_partitions[] = {
+        {
+                .name = "BOOT",
+                .offset = 0x0,
+                .size = 0x800000
+        }
+};
+
+static struct mtd_info *mymtd;
+
+int __init cavium_mtd_init(void)
+{
+	struct mtd_partition *parts;
+	int nb_parts = 0;
+	unsigned long window_addr;
+	unsigned long window_size;
+
+	/* Default flash buswidth */
+	cavium_map.bankwidth = 1;
+
+	window_addr = 0x1f400000;
+	window_size = 0x800000;
+
+	/*
+	 * Static partition definition selection
+	 */
+	parts = cavium_partitions;
+	nb_parts = ARRAY_SIZE(cavium_partitions);
+	cavium_map.size = window_size;
+
+	/*
+	 * Now let's probe for the actual flash.  Do it here since
+	 * specific machine settings might have been set above.
+	 */
+	printk(KERN_NOTICE "CAVIUM MTD: probing %d-bit flash bus\n",
+			cavium_map.bankwidth*8);
+	cavium_map.virt = ioremap(window_addr, window_size);
+	mymtd = do_map_probe("cfi_probe", &cavium_map);
+	if (!mymtd) {
+		iounmap(cavium_map.virt);
+		return -ENXIO;
+	}
+	mymtd->owner = THIS_MODULE;
+
+	add_mtd_partitions(mymtd, parts, nb_parts);
+	return 0;
+}
+
+static void __exit cavium_mtd_cleanup(void)
+{
+	if (mymtd) {
+		del_mtd_partitions(mymtd);
+		map_destroy(mymtd);
+		iounmap(cavium_map.virt);
+	}
+}
+
+module_init(cavium_mtd_init);
+module_exit(cavium_mtd_cleanup);
+
+MODULE_AUTHOR("Wind River Systems, Inc");
+MODULE_DESCRIPTION("Cavium MTD driver");
+MODULE_LICENSE("GPL");
-- 
1.5.5.1

