From f1b3d49ad85175ccabdadd088e9163e63d64a7d9 Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Fri, 24 Oct 2008 12:22:50 -0700
Subject: [PATCH] g: importing 0096-1.8.0-cavium-cleanup-trailing-spaces.patch

This is an automatic import of patch 0096-1.8.0-cavium-cleanup-trailing-spaces.patch, no headers were
detected and a default message was constructed
---
 arch/mips/cavium-octeon/executive/README.txt       |   32 +++++++-------
 .../cavium-octeon/executive/cvmx-compactflash.c    |   42 ++++++++++----------
 .../cavium-octeon/executive/cvmx-helper-board.c    |    2 +-
 .../cavium-octeon/executive/cvmx-helper-loop.h     |    2 +-
 arch/mips/cavium-octeon/executive/cvmx-l2c.c       |    2 +-
 arch/mips/cavium-octeon/executive/cvmx-mgmt-port.c |    4 +-
 arch/mips/cavium-octeon/executive/cvmx-mgmt-port.h |    2 +-
 arch/mips/cavium-octeon/executive/cvmx-pko.c       |    2 +-
 .../cavium-octeon/executive/cvmx-shared-linux.ld   |   12 +++---
 arch/mips/cavium-octeon/executive/cvmx-version.h   |    8 ++--
 .../executive/executive-config.h.template          |   24 ++++++------
 arch/mips/cavium-octeon/executive/octeon-model.c   |    2 +-
 arch/mips/cavium-octeon/executive/octeon-model.h   |   10 ++--
 13 files changed, 72 insertions(+), 72 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/README.txt b/arch/mips/cavium-octeon/executive/README.txt
index 553c46d..ebc63fa 100644
--- a/arch/mips/cavium-octeon/executive/README.txt
+++ b/arch/mips/cavium-octeon/executive/README.txt
@@ -1,40 +1,40 @@
 Readme for the Octeon Executive Library
 
 
-The Octeon Executive Library provides runtime support and hardware 
-abstraction for the Octeon processor.  The executive is composed of the 
-libcvmx.a library as well as header files that provide  
+The Octeon Executive Library provides runtime support and hardware
+abstraction for the Octeon processor.  The executive is composed of the
+libcvmx.a library as well as header files that provide
 functionality with inline functions.
 
 
 Usage:
 
 The libcvmx.a library is built for every application as part of the
-application build. (Please refer to the 'related pages' section of the 
-HTML documentation for more information on the build system.)  
+application build. (Please refer to the 'related pages' section of the
+HTML documentation for more information on the build system.)
 Applications using the executive should include the header files from
-$OCTEON_ROOT/target/include and link against the library that is built in 
-the local obj directory. Each file using the executive 
+$OCTEON_ROOT/target/include and link against the library that is built in
+the local obj directory. Each file using the executive
 should include the following two header files in order:
 
 #include "cvmx-config.h"
 #include "cvmx.h"
 
-The cvmx-config.h file contains configuration information for the 
-executive and is generated by the cvmx-config script from an 
-'executive-config.h' file. A sample version of this file is provided 
-in the executive directory as 'executive-config.h.template'.  
+The cvmx-config.h file contains configuration information for the
+executive and is generated by the cvmx-config script from an
+'executive-config.h' file. A sample version of this file is provided
+in the executive directory as 'executive-config.h.template'.
 
-Copy this file to 'executive-config.h' into the 'config' subdirectory 
-of the application directory and customize as required by the application. 
-Applications that don't use any simple executive functionality can omit 
-the cvmx-config.h header file. Please refer to the examples for a 
+Copy this file to 'executive-config.h' into the 'config' subdirectory
+of the application directory and customize as required by the application.
+Applications that don't use any simple executive functionality can omit
+the cvmx-config.h header file. Please refer to the examples for a
 demonstration of where to put the executive-config.h file and for an
 example of generated cvmx-config.h.
 
 For file specific information please see the documentation within the 
 source files or the HTML documentation provided in docs/html/index.html.
-The HTML documentation is automatically generated by Doxygen from the 
+The HTML documentation is automatically generated by Doxygen from the
 source files.
 
 
diff --git a/arch/mips/cavium-octeon/executive/cvmx-compactflash.c b/arch/mips/cavium-octeon/executive/cvmx-compactflash.c
index 0d66eb0..7125af3 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-compactflash.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-compactflash.c
@@ -57,8 +57,8 @@
 /**
  * Convert nanosecond based time to setting used in the
  * boot bus timing register, based on timing multiple
- * 
- * 
+ *
+ *
  */
 static uint32_t ns_to_tim_reg(int tim_mult, uint32_t nsecs)
 {
@@ -66,11 +66,11 @@ static uint32_t ns_to_tim_reg(int tim_mult, uint32_t nsecs)
 
 	/* Compute # of eclock periods to get desired duration in nanoseconds */
 	val = FLASH_RoundUP(nsecs * (cvmx_sysinfo_get()->cpu_clock_hz/1000000), 1000);
-	
+
 	/* Factor in timing multiple, if not 1 */
 	if (tim_mult != 1)
 		val = FLASH_RoundUP(val, tim_mult);
-	
+
 	return (val);
 }
 
@@ -94,7 +94,7 @@ uint64_t cvmx_compactflash_generate_dma_tim(int tim_mult, uint16_t *ident_data,
             return 0;
 
         word53_field_valid = ident_data[53];
-        word63_mwdma = ident_data[63]; 
+        word63_mwdma = ident_data[63];
         word163_adv_timing_info = ident_data[163];
 
 	dma_tim.u64 = 0;
@@ -154,14 +154,14 @@ uint64_t cvmx_compactflash_generate_dma_tim(int tim_mult, uint16_t *ident_data,
 			To = 80;
 			Td = 55;
 			Tkr = 20;
-			
+
 			oe_a = Td + 20;  // Td (Seem to need more margin here....
 			oe_n = MAX(To - oe_a, Tkr);  // Tkr from cf spec, lengthened to meet To
-			
+
 			// oe_n + oe_h must be >= To (cycle time)
 			dma_acks = 0; //Ti
 			dma_ackh = 5; // Tj
-			
+
 			dma_arq = 8;  // not spec'ed, value in eclocks, not affected by tim_mult
 			pause = 25 - dma_arq * 1000/(cvmx_sysinfo_get()->cpu_clock_hz/1000000); // Tz
 			break;
@@ -169,14 +169,14 @@ uint64_t cvmx_compactflash_generate_dma_tim(int tim_mult, uint16_t *ident_data,
 			To = 100;
 			Td = 65;
 			Tkr = 20;
-			
+
 			oe_a = Td + 20;  // Td (Seem to need more margin here....
 			oe_n = MAX(To - oe_a, Tkr);  // Tkr from cf spec, lengthened to meet To
-			
+
 			// oe_n + oe_h must be >= To (cycle time)
 			dma_acks = 0; //Ti
 			dma_ackh = 5; // Tj
-			
+
 			dma_arq = 8;  // not spec'ed, value in eclocks, not affected by tim_mult
 			pause = 25 - dma_arq * 1000/(cvmx_sysinfo_get()->cpu_clock_hz/1000000); // Tz
 			break;
@@ -198,11 +198,11 @@ uint64_t cvmx_compactflash_generate_dma_tim(int tim_mult, uint16_t *ident_data,
 			// oe_n + oe_h must be >= To (cycle time)
 			dma_acks = 0 + 20; //Ti
 			dma_ackh = 5; // Tj
-			
+
 			dma_arq = 8;  // not spec'ed, value in eclocks, not affected by tim_mult
 			pause = 25 - dma_arq * 1000/(cvmx_sysinfo_get()->cpu_clock_hz/1000000); // Tz
                         // no fudge needed on pause
-			
+
 			break;
 		case 1:
 		case 0:
@@ -214,24 +214,24 @@ uint64_t cvmx_compactflash_generate_dma_tim(int tim_mult, uint16_t *ident_data,
 
         if (mwdma_mode_ptr)
             *mwdma_mode_ptr = mwdma_mode;
-	
+
 	dma_tim.s.dmack_pi = 1;
-	
+
 	dma_tim.s.oe_n = ns_to_tim_reg(tim_mult, oe_n);
 	dma_tim.s.oe_a = ns_to_tim_reg(tim_mult, oe_a);
-	
+
 	dma_tim.s.dmack_s = ns_to_tim_reg(tim_mult, dma_acks);
-	dma_tim.s.dmack_h = ns_to_tim_reg(tim_mult, dma_ackh); 
-	
+	dma_tim.s.dmack_h = ns_to_tim_reg(tim_mult, dma_ackh);
+
 	dma_tim.s.dmarq = dma_arq;
 	dma_tim.s.pause = ns_to_tim_reg(tim_mult, pause);
-	
+
 	dma_tim.s.rd_dly = 0; /* Sample right on edge */
-	
+
 	/*  writes only */
 	dma_tim.s.we_n = ns_to_tim_reg(tim_mult, oe_n);
 	dma_tim.s.we_a = ns_to_tim_reg(tim_mult, oe_a);
-	
+
 #if 0
 	cvmx_dprintf("ns to ticks (mult %d) of %d is: %d\n", TIM_MULT, 60, ns_to_tim_reg(60));
 	cvmx_dprintf("oe_n: %d, oe_a: %d, dmack_s: %d, dmack_h: %d, dmarq: %d, pause: %d\n",
diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-board.c b/arch/mips/cavium-octeon/executive/cvmx-helper-board.c
index f096f3c..d1836f8 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-board.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-board.c
@@ -241,7 +241,7 @@ cvmx_helper_link_info_t __cvmx_helper_board_link_get(int ipd_port)
         case CVMX_BOARD_TYPE_BBGW_REF:
             /* Port 1 on these boards is always Gigabit */
             if (ipd_port == 2)
-            {   
+            {
                 /* Port 2 is not hooked up */
                 result.u64 = 0;
                 return result;
diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-loop.h b/arch/mips/cavium-octeon/executive/cvmx-helper-loop.h
index 39f7bfc..65ef521 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-loop.h
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-loop.h
@@ -86,7 +86,7 @@ extern int __cvmx_helper_loop_enable(int interface);
 
 /**
  * @INTERNAL
- * Disable FCS stripping for LOOP interface. 
+ * Disable FCS stripping for LOOP interface.
  *
  * @param interface Interface to bring up
  *
diff --git a/arch/mips/cavium-octeon/executive/cvmx-l2c.c b/arch/mips/cavium-octeon/executive/cvmx-l2c.c
index 503670d..545c83e 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-l2c.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-l2c.c
@@ -710,7 +710,7 @@ int cvmx_l2c_get_num_assoc(void)
         OCTEON_IS_MODEL(OCTEON_CN50XX) ||
         OCTEON_IS_MODEL(OCTEON_CN38XX))
         l2_assoc =  8;
-    else if (OCTEON_IS_MODEL(OCTEON_CN31XX) || 
+    else if (OCTEON_IS_MODEL(OCTEON_CN31XX) ||
              OCTEON_IS_MODEL(OCTEON_CN30XX))
         l2_assoc =  4;
     else
diff --git a/arch/mips/cavium-octeon/executive/cvmx-mgmt-port.c b/arch/mips/cavium-octeon/executive/cvmx-mgmt-port.c
index a068344..5c09408 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-mgmt-port.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-mgmt-port.c
@@ -639,7 +639,7 @@ void cvmx_mgmt_port_set_multicast_list(int port, int flags)
     cvmx_spinlock_lock(&state->lock);
 
     agl_gmx_rxx_adr_ctl.u64 = cvmx_read_csr(CVMX_AGL_GMX_RXX_ADR_CTL(port));
-    
+
     /* Allow broadcast MAC addresses */
     if (!agl_gmx_rxx_adr_ctl.s.bcst)
 	agl_gmx_rxx_adr_ctl.s.bcst = 1;
@@ -660,6 +660,6 @@ void cvmx_mgmt_port_set_multicast_list(int port, int flags)
 	cvmx_write_csr(CVMX_AGL_GMX_RXX_ADR_CAM_EN(port), 0);
     else
 	cvmx_write_csr(CVMX_AGL_GMX_RXX_ADR_CAM_EN(port), 1);
-    
+
     cvmx_spinlock_unlock(&state->lock);
 }
diff --git a/arch/mips/cavium-octeon/executive/cvmx-mgmt-port.h b/arch/mips/cavium-octeon/executive/cvmx-mgmt-port.h
index 3e9d3d7..49e4e4f 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-mgmt-port.h
+++ b/arch/mips/cavium-octeon/executive/cvmx-mgmt-port.h
@@ -69,7 +69,7 @@ typedef enum
 
 
 /* Enumeration of Net Device interface flags. */
-typedef enum 
+typedef enum
 {
     CVMX_IFF_PROMISC = 0x100, 		/* receive all packets           */
     CVMX_IFF_ALLMULTI = 0x200, 		/* receive all multicast packets */
diff --git a/arch/mips/cavium-octeon/executive/cvmx-pko.c b/arch/mips/cavium-octeon/executive/cvmx-pko.c
index c6e2266..e524e19 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-pko.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-pko.c
@@ -152,7 +152,7 @@ void cvmx_pko_enable(void)
 
     flags.s.ena_dwb = 1;
     flags.s.ena_pko = 1;
-    flags.s.store_be =1;  /* always enable big endian for 3-word command. Does nothing for 2-word */ 
+    flags.s.store_be =1;  /* always enable big endian for 3-word command. Does nothing for 2-word */
     cvmx_write_csr(CVMX_PKO_REG_FLAGS, flags.u64);
 }
 
diff --git a/arch/mips/cavium-octeon/executive/cvmx-shared-linux.ld b/arch/mips/cavium-octeon/executive/cvmx-shared-linux.ld
index 7cb0a9a..f282956 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-shared-linux.ld
+++ b/arch/mips/cavium-octeon/executive/cvmx-shared-linux.ld
@@ -52,12 +52,12 @@
  * This was created from a template supplied by GNU binutils.
  * Copyright (C) 2004 Cavium Networks
  */
- 
+
 /**
  * @file
  * This linker script for use in building simple executive application to run
- * under Linux in userspace. The important difference from a standard Linux 
- * binary is the addition of the ".cvmx_shared" memory section. This script 
+ * under Linux in userspace. The important difference from a standard Linux
+ * binary is the addition of the ".cvmx_shared" memory section. This script
  * adds two symbols __cvmx_shared_start and __cvmx_sahred_end before and after
  * the CVMX_SHARED data. These are used by cvmx-app-init-linux.c to create a
  * shared region across all application processes.
@@ -210,14 +210,14 @@ SECTIONS
   .lit8           : { *(.lit8) }
   .lit4           : { *(.lit4) }
   .srdata         : { *(.srdata) }
-  
-  . = ALIGN (0x10000); 
+
+  . = ALIGN (0x10000);
   __cvmx_shared_start = .;
   .cvmx_shared : {*(.cvmx_shared .cvmx_shared.linkonce.*)}
   .cvmx_shared_bss : { *(.cvmx_shared_bss .cvmx_shared_bss.linkonce.*) }
   . = ALIGN (0x10000);
   __cvmx_shared_end = .;
-  
+
   _edata = .;
   PROVIDE (edata = .);
   __bss_start = .;
diff --git a/arch/mips/cavium-octeon/executive/cvmx-version.h b/arch/mips/cavium-octeon/executive/cvmx-version.h
index 3196469..9a8b0f4 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-version.h
+++ b/arch/mips/cavium-octeon/executive/cvmx-version.h
@@ -4,9 +4,9 @@
 **    to determine what SDK version is being used.
 **    SDK 1.2.3 build 567 => 102030567
 **    Note that 2 digits are used for each version number, so that:
-**     1.9.0  == 01.09.00 < 01.10.00 == 1.10.0 
-**     10.9.0 == 10.09.00 > 09.10.00 == 9.10.0 
-** 
-*/ 
+**     1.9.0  == 01.09.00 < 01.10.00 == 1.10.0
+**     10.9.0 == 10.09.00 > 09.10.00 == 9.10.0
+**
+*/
 #define OCTEON_SDK_VERSION_NUM  108000270ull
 #define OCTEON_SDK_VERSION_STRING   "Cavium Networks Octeon SDK version 1.8.0, build 270"
diff --git a/arch/mips/cavium-octeon/executive/executive-config.h.template b/arch/mips/cavium-octeon/executive/executive-config.h.template
index c7c58c6..52612fc 100644
--- a/arch/mips/cavium-octeon/executive/executive-config.h.template
+++ b/arch/mips/cavium-octeon/executive/executive-config.h.template
@@ -46,14 +46,14 @@
 
 
 
-/*! 
+/*!
  * @file executive-config.h.template
  *
  * This file is a template for the executive-config.h file that each
  * application that uses the simple exec must provide.  Each application
  * should have an executive-config.h file in a directory named 'config'.
  * If the application uses other components, config files for those
- * components should be placed in the config directory as well.  The 
+ * components should be placed in the config directory as well.  The
  * macros defined in this file control the configuration and functionality
  * provided by the simple executive.  Available macros are commented out
  * and documented in this file.
@@ -70,11 +70,11 @@
 //#define CVMX_ENABLE_DFA_FUNCTIONS
 
 /* Define to enable the use of simple executive packet output functions.
-** For packet I/O setup enable the helper functions below. 
-*/ 
+** For packet I/O setup enable the helper functions below.
+*/
 //#define CVMX_ENABLE_PKO_FUNCTIONS
 
-/* Define to enable the use of simple executive timer bucket functions. 
+/* Define to enable the use of simple executive timer bucket functions.
 ** Refer to cvmx-tim.[ch] for more information
 */
 //#define CVMX_ENABLE_TIMER_FUNCTIONS
@@ -86,9 +86,9 @@
 //#define CVMX_ENABLE_HELPER_FUNCTIONS
 
 /* CVMX_HELPER_FIRST_MBUFF_SKIP is the number of bytes to reserve before
-** the beginning of the packet. If necessary, override the default  
-** here.  See the IPD section of the hardware manual for MBUFF SKIP 
-** details.*/ 
+** the beginning of the packet. If necessary, override the default
+** here.  See the IPD section of the hardware manual for MBUFF SKIP
+** details.*/
 #define CVMX_HELPER_FIRST_MBUFF_SKIP 184
 
 /* CVMX_HELPER_NOT_FIRST_MBUFF_SKIP is the number of bytes to reserve in each
@@ -137,8 +137,8 @@
 #define CVMX_HELPER_PKO_QUEUES_PER_PORT_INTERFACE0	1
 #define CVMX_HELPER_PKO_QUEUES_PER_PORT_INTERFACE1	1
 
-/* Configure PKO to use per-core queues (PKO lockless operation). 
-** Please see the related SDK documentation for PKO that illustrates 
+/* Configure PKO to use per-core queues (PKO lockless operation).
+** Please see the related SDK documentation for PKO that illustrates
 ** how to enable and configure this option. */
 //#define CVMX_ENABLE_PKO_LOCKLESS_OPERATION 1
 //#define CVMX_HELPER_PKO_MAX_PORTS_INTERFACE0 8
@@ -165,8 +165,8 @@
 #define CVMX_LLM_CONFIG_NUM_PORTS 2
 
 /* Enable the fix for PKI-100 errata ("Size field is 8 too large in WQE and next
-** pointers"). If CVMX_ENABLE_LEN_M8_FIX is set to 0, the fix for this errata will 
-** not be enabled. 
+** pointers"). If CVMX_ENABLE_LEN_M8_FIX is set to 0, the fix for this errata will
+** not be enabled.
 ** 0: Fix is not enabled
 ** 1: Fix is enabled, if supported by hardware
 */
diff --git a/arch/mips/cavium-octeon/executive/octeon-model.c b/arch/mips/cavium-octeon/executive/octeon-model.c
index d93fa20..69226d7 100644
--- a/arch/mips/cavium-octeon/executive/octeon-model.c
+++ b/arch/mips/cavium-octeon/executive/octeon-model.c
@@ -314,7 +314,7 @@ const char *octeon_model_get_string_buffer(uint32_t chip_id, char * buffer)
                 else
                     suffix = "SSP";
             }
-            else 
+            else
             {
                 if (fus_dat2.cn56xx.nocrypto)
                     suffix = "CP";
diff --git a/arch/mips/cavium-octeon/executive/octeon-model.h b/arch/mips/cavium-octeon/executive/octeon-model.h
index afa5b4e..2a1b6bf 100644
--- a/arch/mips/cavium-octeon/executive/octeon-model.h
+++ b/arch/mips/cavium-octeon/executive/octeon-model.h
@@ -158,21 +158,21 @@ extern "C" {
 
 /* The revision byte (low byte) has two different encodings.
 ** CN3XXX:
-** 
+**
 **     bits
 **     <7:5>: reserved (0)
 **     <4>:   alternate package
 **     <3:0>: revision
-**     
+**    
 ** CN5XXX:
-** 
+**
 **     bits
 **     <7>:   reserved (0)
 **     <6>:   alternate package
 **     <5:3>: major revision
 **     <2:0>: minor revision
-** 
-*/ 
+**
+*/
 
 /* Masks used for the various types of model/family/revision matching */
 #define OCTEON_38XX_FAMILY_MASK      0x00ffff00
-- 
1.5.5.1

