From de8d968f332c164105ac8b749670ae3a61bf1e51 Mon Sep 17 00:00:00 2001
From: Wally Gleemer <Wally.Gleemer@windriver.com>
Date: Thu, 13 Mar 2008 12:44:33 -0700
Subject: [PATCH] cavium: add syncw to bitops.h

Add in extra syncw to ensure data integrity on Cavium CPUs for selected
bitops like test_and_set, test_and_clear, etc.

Signed-off-by: Wally Gleemer <Wally.Gleemer@windriver.com>
---
 include/asm-mips/bitops.h |   29 ++++++++++++++++++++++++++---
 1 files changed, 26 insertions(+), 3 deletions(-)

diff --git a/include/asm-mips/bitops.h b/include/asm-mips/bitops.h
index ec75ce4..f716666 100644
--- a/include/asm-mips/bitops.h
+++ b/include/asm-mips/bitops.h
@@ -282,6 +282,7 @@ static inline int test_and_set_bit(unsigned long nr,
 		__asm__ __volatile__(
 		"	.set	push					\n"
 		"	.set	noreorder				\n"
+		OCTEON_SYNCW_STR
 		"	.set	mips3					\n"
 		"1:	" __LL "%0, %1		# test_and_set_bit	\n"
 		"	or	%2, %0, %3				\n"
@@ -438,6 +439,7 @@ static inline int test_and_clear_bit(unsigned long nr,
 		__asm__ __volatile__(
 		"	.set	push					\n"
 		"	.set	noreorder				\n"
+		OCTEON_SYNCW_STR
 		"	.set	mips3					\n"
 		"1:	" __LL	"%0, %1		# test_and_clear_bit	\n"
 		"	or	%2, %0, %3				\n"
@@ -509,6 +511,7 @@ static inline int test_and_change_bit(unsigned long nr,
 		__asm__ __volatile__(
 		"	.set	push					\n"
 		"	.set	noreorder				\n"
+		OCTEON_SYNCW_STR
 		"	.set	mips3					\n"
 		"1:	" __LL	"%0, %1		# test_and_change_bit	\n"
 		"	xor	%2, %0, %3				\n"
@@ -542,7 +545,6 @@ static inline int test_and_change_bit(unsigned long nr,
 }
 
 #include <asm-generic/bitops/non-atomic.h>
-
 /*
  * __clear_bit_unlock - Clears a bit in memory
  * @nr: Bit to clear
@@ -619,7 +621,7 @@ static inline int fls(int word)
 	return 32 - word;
 }
 
-#if defined(CONFIG_64BIT) && defined(CONFIG_CPU_MIPS64)
+#if defined(CONFIG_64BIT) && (defined(CONFIG_CPU_MIPS64) || defined(CONFIG_CPU_CAVIUM_OCTEON))
 static inline int fls64(__u64 word)
 {
 	__asm__("dclz %0, %1" : "=r" (word) : "r" (word));
@@ -661,11 +663,32 @@ static inline int ffs(int word)
 #ifdef __KERNEL__
 
 #include <asm-generic/bitops/sched.h>
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+static inline int hweight64(unsigned long x)
+{
+     return __builtin_popcountl(x);
+}
+
+static inline int hweight32(unsigned int x)
+{
+     return __builtin_popcount(x);
+}
+
+static inline int hweight16(unsigned short x)
+{
+     return __builtin_popcount(x);
+}
+
+static inline int hweight8(unsigned char x)
+{
+     return __builtin_popcount(x);
+}
+#else
 #include <asm-generic/bitops/hweight.h>
+#endif
 #include <asm-generic/bitops/ext2-non-atomic.h>
 #include <asm-generic/bitops/ext2-atomic.h>
 #include <asm-generic/bitops/minix.h>
 
 #endif /* __KERNEL__ */
-
 #endif /* _ASM_BITOPS_H */
-- 
1.5.5.1

