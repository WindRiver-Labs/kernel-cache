From ce001be682a9097bbc0a3ebcceb8412b676f914d Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Fri, 24 Oct 2008 12:23:16 -0700
Subject: [PATCH] cavium: deploy nulled out FPU EMU stats

Use previously defined macro to ensure we aren't collecting
FPU EMU stats on these operations.

Signed-off-by: Tomaso Paoletti <tpaoletti@caviumnetworks.com>
Signed-off-by: Paul Gortmaker <Paul.Gortmaker@windriver.com>
---
 arch/mips/math-emu/cp1emu.c |   96 +++++++++++++++++++++++++++++++++++++++++-
 arch/mips/math-emu/dsemul.c |   12 +++++
 2 files changed, 105 insertions(+), 3 deletions(-)

diff --git a/arch/mips/math-emu/cp1emu.c b/arch/mips/math-emu/cp1emu.c
index b08fc65..7cf4234 100644
--- a/arch/mips/math-emu/cp1emu.c
+++ b/arch/mips/math-emu/cp1emu.c
@@ -209,7 +209,11 @@ static int cop1Emulate(struct pt_regs *xcp, struct mips_fpu_struct *ctx)
 	unsigned int cond;
 
 	if (get_user(ir, (mips_instruction __user *) xcp->cp0_epc)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+		FPUEMUSTATS_INC(errors);
+#else
 		fpuemustats.errors++;
+#endif
 		return SIGBUS;
 	}
 
@@ -240,7 +244,11 @@ static int cop1Emulate(struct pt_regs *xcp, struct mips_fpu_struct *ctx)
 			return SIGILL;
 		}
 		if (get_user(ir, (mips_instruction __user *) emulpc)) {
-			fpuemustats.errors++;
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+		FPUEMUSTATS_INC(errors);
+#else
+		fpuemustats.errors++;
+#endif
 			return SIGBUS;
 		}
 		/* __compute_return_epc() will have updated cp0_epc */
@@ -253,16 +261,28 @@ static int cop1Emulate(struct pt_regs *xcp, struct mips_fpu_struct *ctx)
 	}
 
       emul:
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	FPUEMUSTATS_INC(emulated);
+#else
 	fpuemustats.emulated++;
+#endif
 	switch (MIPSInst_OPCODE(ir)) {
 	case ldc1_op:{
 		u64 __user *va = (u64 __user *) (xcp->regs[MIPSInst_RS(ir)] +
 			MIPSInst_SIMM(ir));
 		u64 val;
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+		FPUEMUSTATS_INC(loads);
+#else
 		fpuemustats.loads++;
+#endif
 		if (get_user(val, va)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+			FPUEMUSTATS_INC(errors);
+#else
 			fpuemustats.errors++;
+#endif
 			return SIGBUS;
 		}
 		DITOREG(val, MIPSInst_RT(ir));
@@ -274,10 +294,18 @@ static int cop1Emulate(struct pt_regs *xcp, struct mips_fpu_struct *ctx)
 			MIPSInst_SIMM(ir));
 		u64 val;
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+		FPUEMUSTATS_INC(stores);
+#else
 		fpuemustats.stores++;
+#endif
 		DIFROMREG(val, MIPSInst_RT(ir));
 		if (put_user(val, va)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+			FPUEMUSTATS_INC(errors);
+#else
 			fpuemustats.errors++;
+#endif
 			return SIGBUS;
 		}
 		break;
@@ -288,9 +316,17 @@ static int cop1Emulate(struct pt_regs *xcp, struct mips_fpu_struct *ctx)
 			MIPSInst_SIMM(ir));
 		u32 val;
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+		FPUEMUSTATS_INC(loads);
+#else
 		fpuemustats.loads++;
+#endif
 		if (get_user(val, va)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+			FPUEMUSTATS_INC(errors);
+#else
 			fpuemustats.errors++;
+#endif
 			return SIGBUS;
 		}
 		SITOREG(val, MIPSInst_RT(ir));
@@ -302,10 +338,18 @@ static int cop1Emulate(struct pt_regs *xcp, struct mips_fpu_struct *ctx)
 			MIPSInst_SIMM(ir));
 		u32 val;
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+		FPUEMUSTATS_INC(stores);
+#else
 		fpuemustats.stores++;
+#endif
 		SIFROMREG(val, MIPSInst_RT(ir));
 		if (put_user(val, va)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+			FPUEMUSTATS_INC(errors);
+#else
 			fpuemustats.errors++;
+#endif
 			return SIGBUS;
 		}
 		break;
@@ -432,7 +476,11 @@ static int cop1Emulate(struct pt_regs *xcp, struct mips_fpu_struct *ctx)
 
 				if (get_user(ir,
 				    (mips_instruction __user *) xcp->cp0_epc)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+					FPUEMUSTATS_INC(errors);
+#else
 					fpuemustats.errors++;
+#endif
 					return SIGBUS;
 				}
 
@@ -598,7 +646,11 @@ static int fpux_emu(struct pt_regs *xcp, struct mips_fpu_struct *ctx,
 {
 	unsigned rcsr = 0;	/* resulting csr */
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	FPUEMUSTATS_INC(cp1xops);
+#else
 	fpuemustats.cp1xops++;
+#endif
 
 	switch (MIPSInst_FMA_FFMT(ir)) {
 	case s_fmt:{		/* 0 */
@@ -612,10 +664,17 @@ static int fpux_emu(struct pt_regs *xcp, struct mips_fpu_struct *ctx,
 		case lwxc1_op:
 			va = (void __user *) (xcp->regs[MIPSInst_FR(ir)] +
 				xcp->regs[MIPSInst_FT(ir)]);
-
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+			FPUEMUSTATS_INC(loads);
+#else
 			fpuemustats.loads++;
+#endif
 			if (get_user(val, va)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+				FPUEMUSTATS_INC(errors);
+#else
 				fpuemustats.errors++;
+#endif
 				return SIGBUS;
 			}
 			SITOREG(val, MIPSInst_FD(ir));
@@ -625,11 +684,18 @@ static int fpux_emu(struct pt_regs *xcp, struct mips_fpu_struct *ctx,
 			va = (void __user *) (xcp->regs[MIPSInst_FR(ir)] +
 				xcp->regs[MIPSInst_FT(ir)]);
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+			FPUEMUSTATS_INC(stores);
+#else
 			fpuemustats.stores++;
-
+#endif
 			SIFROMREG(val, MIPSInst_FS(ir));
 			if (put_user(val, va)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+				FPUEMUSTATS_INC(errors);
+#else
 				fpuemustats.errors++;
+#endif
 				return SIGBUS;
 			}
 			break;
@@ -690,9 +756,17 @@ static int fpux_emu(struct pt_regs *xcp, struct mips_fpu_struct *ctx,
 			va = (void __user *) (xcp->regs[MIPSInst_FR(ir)] +
 				xcp->regs[MIPSInst_FT(ir)]);
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+			FPUEMUSTATS_INC(loads);
+#else
 			fpuemustats.loads++;
+#endif
 			if (get_user(val, va)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+				FPUEMUSTATS_INC(errors);
+#else
 				fpuemustats.errors++;
+#endif
 				return SIGBUS;
 			}
 			DITOREG(val, MIPSInst_FD(ir));
@@ -702,10 +776,18 @@ static int fpux_emu(struct pt_regs *xcp, struct mips_fpu_struct *ctx,
 			va = (void __user *) (xcp->regs[MIPSInst_FR(ir)] +
 				xcp->regs[MIPSInst_FT(ir)]);
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+			FPUEMUSTATS_INC(stores);
+#else
 			fpuemustats.stores++;
+#endif
 			DIFROMREG(val, MIPSInst_FS(ir));
 			if (put_user(val, va)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+				FPUEMUSTATS_INC(errors);
+#else
 				fpuemustats.errors++;
+#endif
 				return SIGBUS;
 			}
 			break;
@@ -772,7 +854,11 @@ static int fpu_emu(struct pt_regs *xcp, struct mips_fpu_struct *ctx,
 #endif
 	} rv;			/* resulting value */
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	FPUEMUSTATS_INC(cp1ops);
+#else
 	fpuemustats.cp1ops++;
+#endif
 	switch (rfmt = (MIPSInst_FFMT(ir) & 0xf)) {
 	case s_fmt:{		/* 0 */
 		union {
@@ -1243,7 +1329,11 @@ int fpu_emulator_cop1Handler(struct pt_regs *xcp, struct mips_fpu_struct *ctx,
 		prevepc = xcp->cp0_epc;
 
 		if (get_user(insn, (mips_instruction __user *) xcp->cp0_epc)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+			FPUEMUSTATS_INC(errors);
+#else
 			fpuemustats.errors++;
+#endif
 			return SIGBUS;
 		}
 		if (insn == 0)
diff --git a/arch/mips/math-emu/dsemul.c b/arch/mips/math-emu/dsemul.c
index 653e325..f7b42ac 100644
--- a/arch/mips/math-emu/dsemul.c
+++ b/arch/mips/math-emu/dsemul.c
@@ -98,8 +98,16 @@ int mips_dsemul(struct pt_regs *regs, mips_instruction ir, unsigned long cpc)
 	err |= __put_user((mips_instruction)BD_COOKIE, &fr->cookie);
 	err |= __put_user(cpc, &fr->epc);
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	mb(); /* Make sure the write made it to memory so the icache can load it */
+#endif
+
 	if (unlikely(err)) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+		FPUEMUSTATS_INC(errors);
+#else
 		fpuemustats.errors++;
+#endif
 		return SIGBUS;
 	}
 
@@ -137,7 +145,11 @@ int do_dsemulret(struct pt_regs *xcp)
 	err |= __get_user(cookie, &fr->cookie);
 
 	if (unlikely(err || (insn != BADINST) || (cookie != BD_COOKIE))) {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+		FPUEMUSTATS_INC(errors);
+#else
 		fpuemustats.errors++;
+#endif
 		return 0;
 	}
 
-- 
1.5.5.1

