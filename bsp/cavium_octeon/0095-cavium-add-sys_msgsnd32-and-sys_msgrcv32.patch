From 96db896d1288275d481693173641c2e9419f63e2 Mon Sep 17 00:00:00 2001
From: Wally Gleemer <Wally.Gleemer@windriver.com>
Date: Thu, 13 Mar 2008 22:30:25 -0700
Subject: [PATCH] cavium: add sys_msgsnd32 and sys_msgrcv32

If the kernel is 64 bit and Mips64 N32 ABI is used, then these
may be required.  Location of these here is debateable.

Signed-off-by: Wally Gleemer <Wally.Gleemer@windriver.com>
---
 ipc/msg.c |   68 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 68 insertions(+), 0 deletions(-)

diff --git a/ipc/msg.c b/ipc/msg.c
index 46585a0..dd2bba4 100644
--- a/ipc/msg.c
+++ b/ipc/msg.c
@@ -40,6 +40,11 @@
 
 #include <asm/current.h>
 #include <asm/uaccess.h>
+
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+#include <asm/compat.h>
+#endif
+
 #include "util.h"
 
 /*
@@ -737,6 +742,39 @@ sys_msgsnd(int msqid, struct msgbuf __user *msgp, size_t msgsz, int msgflg)
 	return do_msgsnd(msqid, mtype, msgp->mtext, msgsz, msgflg);
 }
 
+#if defined(CONFIG_CPU_CAVIUM_OCTEON) && defined(CONFIG_SYSVIPC_COMPAT) && defined(CONFIG_64BIT)
+/**
+ * This function is used for Mips64 N32 ABI when the kernel
+ * is 64bit. This is a hack. I'm not sure where it should be
+ * in the kernel.
+ *
+ * @param msqid
+ * @param msgp
+ * @param msgsz
+ * @param msgflg
+ * @return
+ */
+asmlinkage long sys_msgsnd32(int msqid, void __user *msgp, size_t msgsz, int msgflg)
+{
+	if (msgsz > MSGMAX || (long) msgsz < 0 || msqid < 0)
+               return -EINVAL;
+
+	struct msgbuf *copy = (struct msgbuf *)compat_alloc_user_space(msgsz+8);
+	int32_t mtype;
+
+	if (get_user(mtype, ((int*)msgp)) ||
+        put_user(mtype, &copy->mtype))
+		return -EFAULT;
+	if (mtype < 1)
+		return -EINVAL;
+
+	if (copy_in_user(copy->mtext, msgp + 4, msgsz))
+		return -EFAULT;
+
+	return sys_msgsnd(msqid, copy, msgsz, msgflg);
+}
+#endif
+
 static inline int convert_mode(long *msgtyp, int msgflg)
 {
 	/*
@@ -923,6 +961,36 @@ out:
 	return err;
 }
 
+#if defined(CONFIG_CPU_CAVIUM_OCTEON) && defined(CONFIG_SYSVIPC_COMPAT) && defined(CONFIG_64BIT)
+/**
+ * This function is used for Mips64 N32 ABI when the kernel
+ * is 64bit. This is a hack. I'm not sure where it should be
+ * in the kernel.
+ *
+ * @param msqid
+ * @param msgp
+ * @param msgsz
+ * @param msgtyp
+ * @param msgflg
+ * @return
+ */
+asmlinkage long sys_msgrcv32 (int msqid, struct msgbuf __user *msgp, size_t msgsz,
+	                      long msgtyp, int msgflg)
+{
+	long result = sys_msgrcv(msqid, msgp, msgsz, msgtyp, msgflg);
+	if (result > 0)
+	{
+		char *ptr = (char*)msgp;
+		copy_in_user(ptr, ptr+4, result+4);
+		put_user(0, ptr+result+4);
+		put_user(0, ptr+result+5);
+		put_user(0, ptr+result+6);
+		put_user(0, ptr+result+7);
+	}
+	return result;
+}
+#endif
+
 #ifdef CONFIG_PROC_FS
 static int sysvipc_msg_proc_show(struct seq_file *s, void *it)
 {
-- 
1.5.5.1

