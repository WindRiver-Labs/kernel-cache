From 6efe6148aee49d183048611dc8c9fe6e6f240f52 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Thu, 5 Sep 2013 14:35:13 +0800
Subject: [PATCH 53/60] time: check the sum overflow from u64 to u32

It is possible that the sum of cs->mult + cs->maxadj might overflow,
then the following calltrace will popped out:
------------[ cut here ]------------
WARNING: at kernel/time/clocksource.c:740 clocksource_register+0xe8/0xf8()
Clocksource soc_clock might overflow on 11% adjustment
Modules linked in:
[<c0017764>] (unwind_backtrace+0x0/0x104) from [<c068a7c4>] (dump_stack+0x20/0x24)
[<c068a7c4>] (dump_stack+0x20/0x24) from [<c0032aec>] (warn_slowpath_common+0x64/0x74)
[<c0032aec>] (warn_slowpath_common+0x64/0x74) from [<c0032bb8>] (warn_slowpath_fmt+0x40/0x48)
[<c0032bb8>] (warn_slowpath_fmt+0x40/0x48) from [<c0080f24>] (clocksource_register+0xe8/0xf8)
[<c0080f24>] (clocksource_register+0xe8/0xf8) from [<c08b3544>] (timer_init+0x1b8/0x250)
[<c08b3544>] (timer_init+0x1b8/0x250) from [<c08b2554>] (mmp3_timer_init+0x34/0x38)
[<c08b2554>] (mmp3_timer_init+0x34/0x38) from [<c08aee34>] (time_init+0x30/0x38)
[<c08aee34>] (time_init+0x30/0x38) from [<c08aa77c>] (start_kernel+0x1f0/0x334)
[<c08aa77c>] (start_kernel+0x1f0/0x334) from [<00008044>] (0x8044)
---[ end trace 1b75b31a2719ed1c ]---

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 kernel/time/clocksource.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/kernel/time/clocksource.c b/kernel/time/clocksource.c
index c958338..79687d1 100644
--- a/kernel/time/clocksource.c
+++ b/kernel/time/clocksource.c
@@ -735,7 +735,7 @@ int clocksource_register(struct clocksource *cs)
 {
 	/* calculate max adjustment for given mult/shift */
 	cs->maxadj = clocksource_max_adjustment(cs);
-	WARN_ONCE(cs->mult + cs->maxadj < cs->mult,
+	WARN_ONCE(((u64)cs->mult + (u64)cs->maxadj) < cs->mult,
 		"Clocksource %s might overflow on 11%% adjustment\n",
 		cs->name);
 
-- 
1.7.5.4

