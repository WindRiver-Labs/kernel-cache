From d42c2e9fe673a81b44bb584430803bcfe6e2dcc3 Mon Sep 17 00:00:00 2001
From: fli <fupan.li@windriver.com>
Date: Mon, 15 Apr 2013 17:15:40 +0800
Subject: [PATCH 129/129] NFC: Rename portid to pid to keep align with
 WRLinux_5_0_1_HEAD codes

upstream commit 15e47304 [Rename pid to portid to avoid confusion],
converts all network files to the new field names. This change reverts
the NFC portions of that change to keep it in alignment with the
3.4 kernel's network stack.

Signed-off-by: fupan li <fupan.li@windriver.com>
---
 net/nfc/netlink.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/net/nfc/netlink.c b/net/nfc/netlink.c
index 504b883..469e0e6 100644
--- a/net/nfc/netlink.c
+++ b/net/nfc/netlink.c
@@ -60,7 +60,7 @@ static int nfc_genl_send_target(struct sk_buff *msg, struct nfc_target *target,
 {
 	void *hdr;
 
-	hdr = genlmsg_put(msg, NETLINK_CB(cb->skb).portid, cb->nlh->nlmsg_seq,
+	hdr = genlmsg_put(msg, NETLINK_CB(cb->skb).pid, cb->nlh->nlmsg_seq,
 			  &nfc_genl_family, flags, NFC_CMD_GET_TARGET);
 	if (!hdr)
 		return -EMSGSIZE;
@@ -405,7 +405,7 @@ static int nfc_genl_dump_devices(struct sk_buff *skb,
 	while (dev) {
 		int rc;
 
-		rc = nfc_genl_send_device(skb, dev, NETLINK_CB(cb->skb).portid,
+		rc = nfc_genl_send_device(skb, dev, NETLINK_CB(cb->skb).pid,
 					  cb->nlh->nlmsg_seq, cb, NLM_F_MULTI);
 		if (rc < 0)
 			break;
@@ -524,7 +524,7 @@ static int nfc_genl_get_device(struct sk_buff *skb, struct genl_info *info)
 		goto out_putdev;
 	}
 
-	rc = nfc_genl_send_device(msg, dev, info->snd_portid, info->snd_seq,
+	rc = nfc_genl_send_device(msg, dev, info->snd_pid, info->snd_seq,
 				  NULL, 0);
 	if (rc < 0)
 		goto out_free;
@@ -615,7 +615,7 @@ static int nfc_genl_start_poll(struct sk_buff *skb, struct genl_info *info)
 
 	rc = nfc_start_poll(dev, im_protocols, tm_protocols);
 	if (!rc)
-		dev->genl_data.poll_req_portid = info->snd_portid;
+		dev->genl_data.poll_req_portid = info->snd_pid;
 
 	mutex_unlock(&dev->genl_data.genl_data_mutex);
 
@@ -649,7 +649,7 @@ static int nfc_genl_stop_poll(struct sk_buff *skb, struct genl_info *info)
 
 	mutex_lock(&dev->genl_data.genl_data_mutex);
 
-	if (dev->genl_data.poll_req_portid != info->snd_portid) {
+	if (dev->genl_data.poll_req_portid != info->snd_pid) {
 		rc = -EBUSY;
 		goto out;
 	}
@@ -775,7 +775,7 @@ static int nfc_genl_llc_get_params(struct sk_buff *skb, struct genl_info *info)
 		goto exit;
 	}
 
-	rc = nfc_genl_send_params(msg, local, info->snd_portid, info->snd_seq);
+	rc = nfc_genl_send_params(msg, local, info->snd_pid, info->snd_seq);
 
 exit:
 	device_unlock(&dev->dev);
@@ -963,12 +963,12 @@ static int nfc_genl_rcv_nl_event(struct notifier_block *this,
 	if (event != NETLINK_URELEASE || n->protocol != NETLINK_GENERIC)
 		goto out;
 
-	pr_debug("NETLINK_URELEASE event from id %d\n", n->portid);
+	pr_debug("NETLINK_URELEASE event from id %d\n", n->pid);
 
 	w = kmalloc(sizeof(*w), GFP_ATOMIC);
 	if (w) {
 		INIT_WORK((struct work_struct *) w, nfc_urelease_event_work);
-		w->portid = n->portid;
+		w->portid = n->pid;
 		schedule_work((struct work_struct *) w);
 	}
 
-- 
1.7.5.4

