From e3621a4f95139eb3c720c201fcb29dcea5816259 Mon Sep 17 00:00:00 2001
From: Jon Mason <jon.mason@intel.com>
Date: Mon, 28 Jan 2013 09:54:23 -0700
Subject: [PATCH 38/70] NTB: Add ability to disable MSI/MSI-X interrupts

This patch is provided by dave.jiang@intel.com via e-mail, and not
committed to mainline yet.

Per request from validation, add ability to disable MSI-X and MSI.  This
allows them to more easily verify all interrupt types are working.

Signed-off-by: Jon Mason <jon.mason@intel.com>
Signed-off-by: Yunguo Wei <yunguo.wei@windriver.com>
---
 drivers/ntb/ntb_hw.c |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/drivers/ntb/ntb_hw.c b/drivers/ntb/ntb_hw.c
index 46b4439..6c5309d 100644
--- a/drivers/ntb/ntb_hw.c
+++ b/drivers/ntb/ntb_hw.c
@@ -64,6 +64,14 @@ MODULE_VERSION(NTB_VER);
 MODULE_LICENSE("Dual BSD/GPL");
 MODULE_AUTHOR("Intel Corporation");
 
+static bool disable_msix;
+module_param(disable_msix, bool, 0644);
+MODULE_PARM_DESC(disable_msix, "Disable MSI-X Interrupts");
+
+static bool disable_msi;
+module_param(disable_msi, bool, 0644);
+MODULE_PARM_DESC(disable_msi, "Disable MSI Interrupts");
+
 enum {
 	NTB_CONN_CLASSIC = 0,
 	NTB_CONN_B2B,
@@ -1032,6 +1040,9 @@ static int ntb_setup_msix(struct ntb_device *ndev)
 	int rc, i, pos;
 	u16 val;
 
+	if (disable_msix)
+		return -EACCES;
+
 	pos = pci_find_capability(pdev, PCI_CAP_ID_MSIX);
 	if (!pos) {
 		rc = -EIO;
@@ -1134,6 +1145,9 @@ static int ntb_setup_msi(struct ntb_device *ndev)
 	struct pci_dev *pdev = ndev->pdev;
 	int rc;
 
+	if (disable_msi)
+		return -EACCES;
+
 	rc = pci_enable_msi(pdev);
 	if (rc)
 		return rc;
-- 
1.7.5.4

