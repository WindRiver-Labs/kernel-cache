From 3d001874418df1d176f78c09712166a7a016caa5 Mon Sep 17 00:00:00 2001
From: Jon Mason <jon.mason@intel.com>
Date: Thu, 7 Mar 2013 16:03:15 -0700
Subject: [PATCH 40/70] NTB: Ivytown BAR quirk

This patch is provided by dave.jiang@intel.com, and not committed to
mainline yet, so no upstream commit id supplied.

NTB Ivytown Hardware issue where, regardless of pre-configured value,
reading the BAR size returns 4096.  To handle this, add a PCI quirk to
read the appropriate values from PCI config space and move the resource
end points to the appropriate location.

Signed-off-by: Jon Mason <jon.mason@intel.com>
[ywei: Fix the context conflict]
Signed-off-by: Yunguo Wei <yunguo.wei@windriver.com>
---
 drivers/pci/quirks.c |   24 ++++++++++++++++++++++++
 1 files changed, 24 insertions(+), 0 deletions(-)

diff --git a/drivers/pci/quirks.c b/drivers/pci/quirks.c
index 680dbfa..6a07e08 100644
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@ -2870,6 +2870,30 @@ DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x65f9, quirk_intel_mc_errata);
 DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x65fa, quirk_intel_mc_errata);
 
 
+/* Ivytown NTB BAR sizes are misreported by the hardware due to a hardware
+ * issue.  To work around this, query the size it should be configured to by the
+ * device and modify the resource end to correspond to this new size.
+ */
+static void quirk_intel_ntb(struct pci_dev *dev)
+{
+    int rc;
+    u8 val;
+
+    rc = pci_read_config_byte(dev, 0x00D0, &val);
+    if (rc)
+        return;
+
+    dev->resource[2].end = dev->resource[2].start + ((u64) 1 << val) - 1;
+
+    rc = pci_read_config_byte(dev, 0x00D1, &val);
+    if (rc)
+        return;
+
+    dev->resource[4].end = dev->resource[4].start + ((u64) 1 << val) - 1;
+}
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x0e0d, quirk_intel_ntb);
+
+
 static void do_one_fixup_debug(void (*fn)(struct pci_dev *dev), struct pci_dev *dev)
 {
 	ktime_t calltime, delta, rettime;
-- 
1.7.5.4

