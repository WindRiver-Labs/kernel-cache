From 0e34e89fb736c5290b2373f3fac9ed103f81f2e9 Mon Sep 17 00:00:00 2001
From: Pankaj chauhan <pankaj.chauhan@freescale.com>
Date: Thu, 29 Dec 2011 14:29:26 +0000
Subject: [PATCH 63/92] rf: Add support for dl/ul delay programming

Extracted from 913x_WUSDK_REL_0.9.tar.gz vendor drop.

AIC can compensate for delays in transfering of data to/from AIC to
ADI interface. These delays needs to be calibrated on a hardware
setup. AIC driver only porivdes support to program these delays from
user space after calibration. AIC driver does not provide any support
for calibration.

Signed-off-by: Pankaj Chauhan <pankaj.chauhan@freescale.com>
Integrated-by: Jiang Bin <bin.jiang@windriver.com>
---
 drivers/rf/controllers/fsl_aic.c |   20 ++++++++++++++------
 drivers/rf/controllers/fsl_aic.h |    9 +++++++++
 include/linux/rfdev_ioctl.h      |    2 ++
 3 files changed, 25 insertions(+), 6 deletions(-)

diff --git a/drivers/rf/controllers/fsl_aic.c b/drivers/rf/controllers/fsl_aic.c
index ee18a66..f347fb2 100644
--- a/drivers/rf/controllers/fsl_aic.c
+++ b/drivers/rf/controllers/fsl_aic.c
@@ -331,12 +331,20 @@ static int aic_init(struct rf_ctrl_dev *rf_dev,
 
 	out_be32(&regs->rftimer_isr, 0x7f);
 
-	/*XXX: DL/UL delay needs to be calibrated, this magic value
-	 *is used only for bringup and works for data transfer in
-	 *5, 10, 15 and 20Mhz b/w. Final value will be programmed
-	 *after calibration
-	 */
-	out_be32(&regs->aic_dlul_delay, 0x15dc15dc);
+	if (init_params->ul_delay)
+		temp = init_params->ul_delay & UL_DELAY_MASK;
+	else
+		temp = DEFAULT_UL_DELAY & UL_DELAY_MASK;
+
+	val = temp << UL_DELAY_SHIFT;
+
+	if (init_params->dl_delay)
+		temp = init_params->dl_delay & DL_DELAY_MASK;
+	else
+		temp = DEFAULT_DL_DELAY & DL_DELAY_MASK;
+
+	val |= temp << DL_DELAY_SHIFT;
+	out_be32(&regs->aic_dlul_delay, val);
 
 	rc = aic_adilane_init(lane, init_params);
 	if (rc)
diff --git a/drivers/rf/controllers/fsl_aic.h b/drivers/rf/controllers/fsl_aic.h
index e66a317..fea3171 100644
--- a/drivers/rf/controllers/fsl_aic.h
+++ b/drivers/rf/controllers/fsl_aic.h
@@ -209,6 +209,12 @@ struct aic_lane_regs {
 #define DL_EN			0x00008000
 #define UL_EN			0x00004000
 
+/*DLULDELAY*/
+#define DL_DELAY_SHIFT		16
+#define DL_DELAY_MASK		0xffff
+#define UL_DELAY_SHIFT		0
+#define UL_DELAY_MASK		0xffff
+
 /*AICLANETMCTRL*/
 #define GPS_EN			0x00000001
 #define SYNC_EN			0x00000002
@@ -230,6 +236,9 @@ struct aic_lane_regs {
 #define LANE_REGDUMP_OFFSET	0x200
 #define SYNC_WAIT		20
 
+#define DEFAULT_DL_DELAY	0x15DC
+#define DEFAULT_UL_DELAY	0x15DC
+
 struct aic_dev {
 	unsigned int sniff_irq;
 	struct aic_common_regs *regs;
diff --git a/include/linux/rfdev_ioctl.h b/include/linux/rfdev_ioctl.h
index 0529916..d78eee5 100644
--- a/include/linux/rfdev_ioctl.h
+++ b/include/linux/rfdev_ioctl.h
@@ -67,6 +67,8 @@ struct rf_init_params {
 	enum rf_phy_band fq_band;
 	unsigned int long_cp;
 	unsigned int ants;
+	__u16 dl_delay;
+	__u16 ul_delay;
 };
 
 struct rf_dev_info {
-- 
1.7.0

