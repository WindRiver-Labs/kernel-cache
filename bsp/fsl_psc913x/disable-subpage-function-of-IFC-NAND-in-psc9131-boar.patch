From 35a7449e9ea1016e3578161f7b7797e56595be70 Mon Sep 17 00:00:00 2001
From: Jiang Bin <bin.jiang@windriver.com>
Date: Wed, 28 Dec 2011 13:51:33 +0800
Subject: [PATCH 10/92] disable subpage function of IFC NAND in psc9131 board

IFC NAND in psc9131 board doesn't support RNDOUT command, so subpage
feature is not valid.

Signed-off-by: Jiang Bin <bin.jiang@windriver.com>
---
 drivers/mtd/nand/Kconfig     |    8 ++++++++
 drivers/mtd/nand/nand_base.c |    5 +++++
 include/linux/mtd/nand.h     |    4 ++++
 3 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/drivers/mtd/nand/Kconfig b/drivers/mtd/nand/Kconfig
index 075ff42..df482c1 100644
--- a/drivers/mtd/nand/Kconfig
+++ b/drivers/mtd/nand/Kconfig
@@ -25,6 +25,13 @@ config MTD_NAND_ECC_SMC
 	  Software ECC according to the Smart Media Specification.
 	  The original Linux implementation had byte 0 and 1 swapped.
 
+config MTD_NAND_SUBPAGE_READ_DISABLE
+        bool "Disable subpage read function"
+        default n
+        help
+	  If NAND flash doesn't support RNDOUT command, the subpage read
+	  function is not valid.
+
 config MTD_NAND_MUSEUM_IDS
 	bool "Enable chip ids for obsolete ancient NAND devices"
 	depends on MTD_NAND
@@ -506,4 +513,5 @@ config MTD_NAND_FSMC
 	  Enables support for NAND Flash chips on the ST Microelectronics
 	  Flexible Static Memory Controller (FSMC)
 
+
 endif # MTD_NAND
diff --git a/drivers/mtd/nand/nand_base.c b/drivers/mtd/nand/nand_base.c
index 8f2958f..31b8b03 100644
--- a/drivers/mtd/nand/nand_base.c
+++ b/drivers/mtd/nand/nand_base.c
@@ -2976,6 +2976,11 @@ int nand_scan_tail(struct mtd_info *mtd)
 			break;
 		}
 	}
+
+#ifdef CONFIG_MTD_NAND_SUBPAGE_READ_DISABLE
+	mtd->subpage_sft = 0;
+#endif
+
 	chip->subpagesize = mtd->writesize >> mtd->subpage_sft;
 
 	/* Initialize state */
diff --git a/include/linux/mtd/nand.h b/include/linux/mtd/nand.h
index ccab9df..a21694d 100644
--- a/include/linux/mtd/nand.h
+++ b/include/linux/mtd/nand.h
@@ -180,8 +180,12 @@ typedef enum {
 #define NAND_HAS_CACHEPROG(chip) ((chip->options & NAND_CACHEPRG))
 #define NAND_HAS_COPYBACK(chip) ((chip->options & NAND_COPYBACK))
 /* Large page NAND with SOFT_ECC should support subpage reads */
+#ifdef CONFIG_MTD_NAND_SUBPAGE_READ_DISABLE
+#define NAND_SUBPAGE_READ(chip) 0
+#else
 #define NAND_SUBPAGE_READ(chip) ((chip->ecc.mode == NAND_ECC_SOFT) \
 					&& (chip->page_shift > 9))
+#endif
 
 /* Mask to zero out the chip options, which come from the id table */
 #define NAND_CHIPOPTIONS_MSK	(0x0000ffff & ~NAND_NO_AUTOINCR)
-- 
1.7.0

