From 3e2bb05f3a6640b208260d9ca060686a1774c64d Mon Sep 17 00:00:00 2001
From: Jiang Bin <bin.jiang@windriver.com>
Date: Tue, 15 Nov 2011 10:43:43 +0800
Subject: [PATCH 45/92] rf: Refactor rf_attach_phy function

Extracted from 913x_WUSDK_REL_0.9.tar.gz vendor drop.

rf_attach_phy() currently uses parameters variables as
iterators of phy and cntrl_dev list. This makes this
code unreadable and error prone.

Use local variables for iterators instead of parameter varaibles

Signed-off-by: Rajan Srivastava <rajan.srivastava@freescale.com>
Signed-off-by: Pankaj Chauhan <pankaj.chauhan@freescale.com>
Integrated-by: Jiang Bin <bin.jiang@windriver.com>
---
 drivers/rf/core/rfdev.c |   23 ++++++++++++-----------
 1 files changed, 12 insertions(+), 11 deletions(-)

diff --git a/drivers/rf/core/rfdev.c b/drivers/rf/core/rfdev.c
index b0420b9..dc9b624 100644
--- a/drivers/rf/core/rfdev.c
+++ b/drivers/rf/core/rfdev.c
@@ -236,39 +236,40 @@ int rf_change_state(struct rf_ctrl_dev *rf_dev, unsigned int state)
 int rf_attach_phy(struct rf_ctrl_dev *rf_dev, struct rf_phy_dev *phy)
 {
 	int match = 0;
+	struct rf_ctrl_dev *rf_dev_itr = NULL;
+	struct rf_phy_dev *phy_itr = NULL;
 
 	/* Search for a phy for given rf ctrl dev */
 	if (rf_dev) {
 		spin_lock(&rf_priv->phy_lock);
 
-		list_for_each_entry(phy, &rf_priv->phy_list, list) {
-			if (rf_dev->phy_id == phy->phy_id) {
+		list_for_each_entry(phy_itr, &rf_priv->phy_list, list) {
+			if (rf_dev->phy_id == phy_itr->phy_id) {
 				match = 1;
+				rf_dev->phy = phy_itr;
+				phy_itr->ctrl_dev = rf_dev;
 				break;
 			}
 		}
 
 		spin_unlock(&rf_priv->phy_lock);
+		return match;
 	} else if (phy) {
 	/* Search for a rf ctrl dev for a given phy */
 		spin_lock(&rf_priv->ctrl_lock);
 
-		list_for_each_entry(rf_dev, &rf_priv->ctrl_list, list) {
-			if (phy->phy_id == rf_dev->phy_id) {
+		list_for_each_entry(rf_dev_itr, &rf_priv->ctrl_list, list) {
+			if (phy->phy_id == rf_dev_itr->phy_id) {
 				match = 1;
+				phy->ctrl_dev = rf_dev_itr;
+				rf_dev_itr->phy = phy;
 				break;
 			}
 		}
 
 		spin_unlock(&rf_priv->ctrl_lock);
+		return match;
 	}
-
-	if (match) {
-		rf_dev->phy = phy;
-		phy->ctrl_dev = rf_dev;
-	}
-
-	return match;
 }
 
 int rf_notify_dl_tti(struct rf_ctrl_dev *rf_dev)
-- 
1.7.0

