From e157b2f26b15f1332d5762744126fdd759da082c Mon Sep 17 00:00:00 2001
From: Jiang Bin <bin.jiang@windriver.com>
Date: Fri, 13 Jan 2012 11:15:15 +0800
Subject: [PATCH 61/92] rf: Add support for Enable/Disable Tx in driver

Extracted from 913x_WUSDK_REL_0.9.tar.gz vendor drop.

Add support for enabling/disabling the TX antenna from user space
using the ioctl interface.

Signed-off-by: Akhil Goyal <akhil.goyal@freescale.com>
Integrated-by: Jiang Bin <bin.jiang@windriver.com>
---
 drivers/rf/core/rfdev.c     |   19 +++++++++++++++++++
 drivers/rf/phy/ad_phy.c     |   22 ++++++++++++++++++++++
 drivers/rf/phy/ad_phy.h     |    5 +++++
 include/linux/rfdev.h       |    1 +
 include/linux/rfdev_ioctl.h |    7 ++++++-
 5 files changed, 53 insertions(+), 1 deletions(-)

diff --git a/drivers/rf/core/rfdev.c b/drivers/rf/core/rfdev.c
index 325e34e..1e50f7d 100644
--- a/drivers/rf/core/rfdev.c
+++ b/drivers/rf/core/rfdev.c
@@ -446,6 +446,7 @@ static int rf_ioctl(struct inode *inode, struct file *filep,
 	struct rif_dac_buf dac_buff;
 	struct rf_dev_info dev_info;
 	struct rf_tx_buf tx_buf;
+	struct rf_tx_en_dis tx_en_dis;
 	u32	*buf;
 	u32 u32arg;
 	int rc = -ENOSYS, size;
@@ -561,6 +562,24 @@ static int rf_ioctl(struct inode *inode, struct file *filep,
 		}
 		break;
 
+	case RIF_EN_DIS_TX:
+		if (rf_dev->state < RF_PHY_INITIALIZED) {
+			rc = -EAGAIN;
+			goto out;
+		}
+
+		if (!copy_from_user(&tx_en_dis, (struct rf_tx_en_dis *)arg,
+				sizeof(struct rf_tx_en_dis))) {
+			if (phy && phy->ops->en_dis_tx) {
+				rc = phy->ops->en_dis_tx(phy,
+						tx_en_dis.tx_if,
+						tx_en_dis.tx_cmd);
+			}
+		} else {
+			rc = -EFAULT;
+		}
+		break;
+
 	case RIF_READ_RSSI:
 
 		if (rf_dev->state < RF_PHY_ATTACHED) {
diff --git a/drivers/rf/phy/ad_phy.c b/drivers/rf/phy/ad_phy.c
index c711547..1a47575 100644
--- a/drivers/rf/phy/ad_phy.c
+++ b/drivers/rf/phy/ad_phy.c
@@ -57,6 +57,7 @@ static int ad_phy_read(struct rf_phy_dev *ad_phy, u32 start, u32 count,
 		u32 *buff);
 static int ad_phy_write(struct rf_phy_dev *ad_phy, u32 reg, u32 data);
 static int ad_set_tx_atten(struct rf_phy_dev *ad_phy, u32 tx_if, u32 tx_atten);
+static int ad_en_dis_tx(struct rf_phy_dev *ad_phy, u32 tx_if, u32 cmd);
 static int ad_phy_dac_correction(struct rf_phy_dev *ad_phy,
 					struct rif_dac_params *params);
 static int ad_phy_get_dac_value(struct rf_phy_dev *ad_phy,
@@ -73,6 +74,7 @@ static struct rf_phy_ops ad_phy_ops = {
 	.read_regs = ad_phy_read,
 	.write_reg = ad_phy_write,
 	.set_tx_atten = ad_set_tx_atten,
+	.en_dis_tx = ad_en_dis_tx,
 	.read_rssi = NULL,
 	.start = ad_phy_start,
 	.stop = ad_phy_stop,
@@ -446,6 +448,26 @@ int ad_set_tx_atten(struct rf_phy_dev *ad_phy, u32 tx_if, u32 tx_atten)
 	return rc;
 }
 
+int ad_en_dis_tx(struct rf_phy_dev *ad_phy, u32 tx_if, u32 tx_cmd)
+{
+	u32 mask, reg_val;
+	ad_phy_read(ad_phy, TX_ENABLE_REG, 1,  &reg_val);
+	if (tx_if == 1)
+		mask = TX1_ENABLE_MASK;
+	else if (tx_if == 2)
+		mask = TX2_ENABLE_MASK;
+	else
+		return -EFAULT;
+
+	if (tx_cmd == TX_ENABLE)
+		reg_val |= mask;
+	else if (tx_cmd == TX_DISABLE)
+		reg_val &= ~mask;
+	else
+		return -EFAULT;
+	return  ad_phy_write(ad_phy, TX_ENABLE_REG, reg_val);
+}
+
 static int ad_phy_remove(struct spi_device *spi)
 {
 	int ret = 0;
diff --git a/drivers/rf/phy/ad_phy.h b/drivers/rf/phy/ad_phy.h
index 66789fc..2f57234 100644
--- a/drivers/rf/phy/ad_phy.h
+++ b/drivers/rf/phy/ad_phy.h
@@ -55,6 +55,11 @@
 #define ATTEN_MSB_BIT_MASK	0x01
 #define MSB_SHIFT	8
 
+#define TX_ENABLE	0x01
+#define TX_DISABLE	0x00
+#define TX_ENABLE_REG	0x002
+#define TX1_ENABLE_MASK	0x40
+#define TX2_ENABLE_MASK	0x80
 struct ad_dev_info {
 	struct spi_device *ad_spi;
 	u8 rx_buf[10];
diff --git a/include/linux/rfdev.h b/include/linux/rfdev.h
index 995f194..660de9d 100644
--- a/include/linux/rfdev.h
+++ b/include/linux/rfdev.h
@@ -89,6 +89,7 @@ struct rf_phy_ops {
 
 	int 	(*write_reg)(struct rf_phy_dev *phy, u32 reg, u32 data);
 	int	(*set_tx_atten)(struct rf_phy_dev *phy, u32 reg, u32 data);
+	int	(*en_dis_tx)(struct rf_phy_dev *phy, u32 tx_if, u32 cmd);
 	u32	(*read_rssi)(struct rf_phy_dev *phy);
 	int	(*start)(struct rf_phy_dev *phy);
 	int	(*stop)(struct rf_phy_dev *phy);
diff --git a/include/linux/rfdev_ioctl.h b/include/linux/rfdev_ioctl.h
index 690bba2..ea12685 100644
--- a/include/linux/rfdev_ioctl.h
+++ b/include/linux/rfdev_ioctl.h
@@ -142,6 +142,11 @@ struct rf_tx_buf {
 	__u32 tx_atten;
 };
 
+struct rf_tx_en_dis {
+	__u32 tx_if;
+	__u32 tx_cmd;
+};
+
 enum rf_timer_src {
 	RF_PPS_SRC_GPS = 1,
 	RF_PPS_SRC_RAW_GPS,
@@ -174,7 +179,7 @@ enum dac_correction_type {
 #define RIF_WRITE_PHY_REGS _IOR(RF_MAGIC, 12, struct rif_write_reg_buf *)
 #define RIF_GET_DAC_VALUE	_IOR(RF_MAGIC, 13, struct rif_dac_buf *)
 #define RIF_SET_TX_ATTEN	_IOW(RF_MAGIC, 14, struct rf_tx_buf *)
-
+#define RIF_EN_DIS_TX		_IOW(RF_MAGIC, 15, struct rf_tx_en_dis *)
 
 
 #endif
-- 
1.7.0

