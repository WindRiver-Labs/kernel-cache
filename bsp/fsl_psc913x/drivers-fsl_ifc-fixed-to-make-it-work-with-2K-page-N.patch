From 2c0c3f58e0cf08b35c5a4592bca6e3c99f8a1896 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 15 Nov 2011 16:15:49 +0800
Subject: [PATCH 14/92] drivers/fsl_ifc:fixed to make it work with 2K page NAND

Extracted from 913x_WUSDK_REL_0.4.tar.gz vendor drop.

The buffer address which is being read in is_blank() is incorrect for 2K page
NAND Flash.
Also correct a error message for ECC error.

Signed-off-by: Jiang Bin <bin.jiang@windriver.com>
---
 drivers/mtd/nand/fsl_ifc_nand.c |    8 +++++---
 1 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/mtd/nand/fsl_ifc_nand.c b/drivers/mtd/nand/fsl_ifc_nand.c
index 75d3a84..2967c9e 100644
--- a/drivers/mtd/nand/fsl_ifc_nand.c
+++ b/drivers/mtd/nand/fsl_ifc_nand.c
@@ -188,7 +188,9 @@ static int is_blank(struct mtd_info *mtd, unsigned int bufnum)
 {
 	struct nand_chip *chip = mtd->priv;
 	struct fsl_ifc_mtd *priv = chip->priv;
-	u8 __iomem *addr = priv->vbase + bufnum * (mtd->writesize * 2);
+	int bufperpage = mtd->writesize / chip->ecc.size;
+	u8 __iomem *addr = priv->vbase + bufnum / bufperpage
+					* (mtd->writesize * 2);
 	u32 __iomem *mainarea = (u32 *)addr;
 	u8 __iomem *oob = addr + mtd->writesize;
 	int i;
@@ -270,7 +272,7 @@ static void fsl_ifc_run_command(struct mtd_info *mtd)
 		dev_err(priv->dev, "NAND Flash Write Protect Error\n");
 
 	if (nctrl->eccread) {
-		int bufperpage = mtd->writesize / 512;
+		int bufperpage = mtd->writesize / chip->ecc.size;
 		int bufnum = (nctrl->page & priv->bufnum_mask) * bufperpage;
 		int bufnum_end = bufnum + bufperpage - 1;
 
@@ -689,7 +691,7 @@ static int fsl_ifc_read_page(struct mtd_info *mtd,
 	fsl_ifc_read_buf(mtd, chip->oob_poi, mtd->oobsize);
 
 	if (ctrl->nand_stat != IFC_NAND_EVTER_STAT_OPC) {
-		dev_err(priv->dev, "NAND Flash Write Protect Error\n");
+		dev_err(priv->dev, "NAND Flash ECC Uncorrectable Error\n");
 		mtd->ecc_stats.failed++;
 	}
 
-- 
1.7.0

