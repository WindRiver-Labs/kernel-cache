From 6ca4f950126a2a427ab367347d0225a251485430 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 15 Nov 2011 16:07:15 +0800
Subject: [PATCH 06/92] Fix compilation errors of fsl_ifc_nand.c & fsl_ifc.c

Extracted from 913x_WUSDK_REL_0.4.tar.gz vendor drop.

Fix compilation errors of fsl_ifc_nand.c & fsl_ifc.c.

Signed-off-by: Priyanka Jain <Priyanka.Jain@freescale.com>
Integrated-by: Jiang Bin <bin.jiang@windriver.com>
---
 arch/powerpc/sysdev/fsl_ifc.c   |    9 ++++-----
 drivers/mtd/nand/fsl_ifc_nand.c |    7 +++----
 2 files changed, 7 insertions(+), 9 deletions(-)

diff --git a/arch/powerpc/sysdev/fsl_ifc.c b/arch/powerpc/sysdev/fsl_ifc.c
index d383c05..d6ea080 100644
--- a/arch/powerpc/sysdev/fsl_ifc.c
+++ b/arch/powerpc/sysdev/fsl_ifc.c
@@ -209,7 +209,7 @@ static int __devinit fsl_ifc_ctrl_probe(struct of_device *ofdev,
 	dev_set_drvdata(&ofdev->dev, fsl_ifc_ctrl_dev);
 
 	/* IOMAP the entire IFC region */
-	fsl_ifc_ctrl_dev->regs = of_iomap(ofdev->dev.of_node, 0);
+	fsl_ifc_ctrl_dev->regs = of_iomap(ofdev->node, 0);
 	if (!fsl_ifc_ctrl_dev->regs) {
 		dev_err(&ofdev->dev, "failed to get memory region\n");
 		ret = -ENODEV;
@@ -217,7 +217,7 @@ static int __devinit fsl_ifc_ctrl_probe(struct of_device *ofdev,
 	}
 
 	/* get the Controller level irq */
-	fsl_ifc_ctrl_dev->irq = irq_of_parse_and_map(ofdev->dev.of_node, 0);
+	fsl_ifc_ctrl_dev->irq = irq_of_parse_and_map(ofdev->node, 0);
 	if (fsl_ifc_ctrl_dev->irq == NO_IRQ) {
 		dev_err(&ofdev->dev, "failed to get irq resource "
 							"for IFC\n");
@@ -227,7 +227,7 @@ static int __devinit fsl_ifc_ctrl_probe(struct of_device *ofdev,
 
 	/* get the nand machine irq */
 	fsl_ifc_ctrl_dev->nand_irq =
-			irq_of_parse_and_map(ofdev->dev.of_node, 1);
+			irq_of_parse_and_map(ofdev->node, 1);
 	if (fsl_ifc_ctrl_dev->nand_irq == NO_IRQ) {
 		dev_err(&ofdev->dev, "failed to get irq resource "
 						"for NAND Machine\n");
@@ -266,9 +266,8 @@ static const struct of_device_id fsl_ifc_match[] = {
 static struct of_platform_driver fsl_ifc_ctrl_driver = {
 	.driver = {
 		.name	= "fsl-ifc",
-		.owner	= THIS_MODULE,
-		.of_match_table = fsl_ifc_match,
 	},
+	.match_table = fsl_ifc_match,
 	.probe       = fsl_ifc_ctrl_probe,
 	.remove      = __devexit_p(fsl_ifc_ctrl_remove),
 };
diff --git a/drivers/mtd/nand/fsl_ifc_nand.c b/drivers/mtd/nand/fsl_ifc_nand.c
index 8cace26..19473e2 100644
--- a/drivers/mtd/nand/fsl_ifc_nand.c
+++ b/drivers/mtd/nand/fsl_ifc_nand.c
@@ -839,7 +839,7 @@ static int __devinit fsl_ifc_nand_probe(struct of_device *dev,
 #endif
 	int ret;
 	int bank;
-	struct device_node *node = dev->dev.of_node;
+	struct device_node *node = dev->node;
 
 	dev_info(&dev->dev, "Freescale IFC NAND Machine Driver\n");
 
@@ -937,7 +937,7 @@ static int __devinit fsl_ifc_nand_probe(struct of_device *dev,
 	if (ret)
 		goto err;
 
-	ret = nand_scan_ident(&priv->mtd, 1, NULL);
+	ret = nand_scan_ident(&priv->mtd, 1);
 	if (ret)
 		goto err;
 
@@ -1002,9 +1002,8 @@ static const struct of_device_id fsl_ifc_nand_match[] = {
 static struct of_platform_driver fsl_ifc_nand_driver = {
 	.driver = {
 		.name	= "fsl,ifc-nand",
-		.owner = THIS_MODULE,
-		.of_match_table = fsl_ifc_nand_match,
 	},
+	.match_table = fsl_ifc_nand_match,
 	.probe       = fsl_ifc_nand_probe,
 	.remove      = fsl_ifc_nand_remove,
 };
-- 
1.7.0

