From 695406c39955c016486fc5ac64d9823356565b29 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 15 Nov 2011 16:45:16 +0800
Subject: [PATCH 21/92] Rfdev: Add write PHY register support

Extracted from 913x_WUSDK_REL_0.4.tar.gz vendor drop.

Signed-off-by: Shaveta Leekha <shaveta@freescale.com>
Integrated-by: Jiang Bin <bin.jiang@windriver.com>
---
 drivers/rf/core/rfdev.c     |   17 +++++++++++++++++
 include/linux/rfdev.h       |    1 +
 include/linux/rfdev_ioctl.h |    8 ++++++++
 3 files changed, 26 insertions(+), 0 deletions(-)

diff --git a/drivers/rf/core/rfdev.c b/drivers/rf/core/rfdev.c
index accb018..faabf66 100644
--- a/drivers/rf/core/rfdev.c
+++ b/drivers/rf/core/rfdev.c
@@ -358,6 +358,7 @@ static int rf_ioctl(struct inode *inode, struct file *filep,
 	struct rf_init_params init_params;
 	struct rif_phy_cmd_set cmd_set;
 	struct rif_reg_buf reg_buf;
+	struct rif_write_reg_buf write_phy_buf;
 	struct rf_dev_info dev_info;
 	u32	*buf;
 	u32 u32arg;
@@ -471,6 +472,22 @@ static int rf_ioctl(struct inode *inode, struct file *filep,
 		}
 		break;
 
+	case RIF_WRITE_PHY_REGS:
+
+		if (!copy_from_user(&write_phy_buf, (struct rif_write_reg_buf *)arg,
+			sizeof(struct rif_write_reg_buf))) {
+
+			if (phy->ops->write_reg) {
+				rc = phy->ops->write_reg(phy,
+						write_phy_buf.addr,
+						write_phy_buf.data);
+			}
+		} else {
+			rc = -EFAULT;
+		}
+
+		break;
+
 	case RIF_START:
 		if (phy) {
 			rc = phy->ops->start(phy);
diff --git a/include/linux/rfdev.h b/include/linux/rfdev.h
index 5a1f0c0..6468855 100644
--- a/include/linux/rfdev.h
+++ b/include/linux/rfdev.h
@@ -76,6 +76,7 @@ struct rf_phy_ops {
 	int	(*read_regs)(struct rf_phy_dev *phy, u32 start,
 				u32 count, u32 *buff);
 
+	int 	(*write_reg)(struct rf_phy_dev *phy, u32 reg, u32 data);
 	u32	(*read_rssi)(struct rf_phy_dev *phy);
 	int	(*start)(struct rf_phy_dev *phy);
 	int	(*stop)(struct rf_phy_dev *phy);
diff --git a/include/linux/rfdev_ioctl.h b/include/linux/rfdev_ioctl.h
index aa7706d..fde068b 100644
--- a/include/linux/rfdev_ioctl.h
+++ b/include/linux/rfdev_ioctl.h
@@ -89,6 +89,12 @@ struct rif_reg_buf {
 	unsigned int count;
 };
 
+struct rif_write_reg_buf {
+	__u32 addr;
+	__u32 data;
+};
+
+
 enum rf_timer_src {
 	RF_PPS_SRC_GPS,
 	RF_PPS_SRC_RAW_GPS,
@@ -109,5 +115,7 @@ enum rf_timer_src {
 #define RIF_START		_IO(RF_MAGIC, 9)
 #define RIF_STOP		_IO(RF_MAGIC, 10)
 #define RIF_GET_DEV_INFO	_IOWR(RF_MAGIC, 11, struct rf_dev_info *)
+#define RIF_WRITE_PHY_REGS _IOR(RF_MAGIC, 12, struct rif_write_reg_buf *)
+
 
 #endif
-- 
1.7.0

