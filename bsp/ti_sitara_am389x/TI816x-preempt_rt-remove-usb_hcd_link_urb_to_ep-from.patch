From 49bf239d6a47a4fe998a6045f7f156f9231c2207 Mon Sep 17 00:00:00 2001
From: Guoqing Jiang <Guoqing.Jiang@windriver.com>
Date: Mon, 4 Jul 2011 16:48:41 +0800
Subject: [PATCH 02/13] TI816x preempt_rt: remove usb_hcd_link_urb_to_ep from raw_spin_lock/unlock

Spin_lock is sleepable in rt kernel, if we call it in an atomic and
irq_disabled context then calltrace appears. The following paths will
cause calltrace if we call usb_hcd_link_urb_to_ep between raw_spin_lock_irqsave
and raw_spin_unlock_irqrestore.

BUG: sleeping function called from invalid context at /buildarea/gjiang/am389x-git-tree-preempt_rt/build/linux/kernel/rtmutex.c:707
pcnt: 1 0 in_atomic(): 1, irqs_disabled(): 128, pid: 659, name: usb-stor-scan
[<c003a988>] (unwind_backtrace+0x0/0xe4) from [<c043a574>] (rt_spin_lock+0x30/0x5c)
[<c043a574>] (rt_spin_lock+0x30/0x5c) from [<c0309478>] (usb_hcd_link_urb_to_ep+0x14/0xa0)
[<c0309478>] (usb_hcd_link_urb_to_ep+0x14/0xa0) from [<c031c230>] (musb_urb_enqueue+0x4c/0x6b0)
[<c031c230>] (musb_urb_enqueue+0x4c/0x6b0) from [<c030adb8>] (usb_hcd_submit_urb+0x75c/0x794)
[<c030adb8>] (usb_hcd_submit_urb+0x75c/0x794) from [<c0315e4c>] (usb_stor_msg_common+0xa0/0x144)
[<c0315e4c>] (usb_stor_msg_common+0xa0/0x144) from [<c0315f80>] (usb_stor_control_msg+0x90/0xa4)
[<c0315f80>] (usb_stor_control_msg+0x90/0xa4) from [<c0315fe0>] (usb_stor_Bulk_max_lun+0x4c/0x64)
[<c0315fe0>] (usb_stor_Bulk_max_lun+0x4c/0x64) from [<c03172b4>] (usb_stor_scan_thread+0x13c/0x168)
[<c03172b4>] (usb_stor_scan_thread+0x13c/0x168) from [<c0075208>] (kthread+0x7c/0x84)
[<c0075208>] (kthread+0x7c/0x84) from [<c0035098>] (kernel_thread_exit+0x0/0x8)

Signed-off-by: Guoqing Jiang <Guoqing.Jiang@windriver.com>
---
 drivers/usb/musb/musb_host.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/usb/musb/musb_host.c b/drivers/usb/musb/musb_host.c
index 6d49549..a97bc82 100644
--- a/drivers/usb/musb/musb_host.c
+++ b/drivers/usb/musb/musb_host.c
@@ -1983,8 +1983,8 @@ static int musb_urb_enqueue(
 	if (!is_host_active(musb) || !musb->is_active)
 		return -ENODEV;
 
-	raw_spin_lock_irqsave(&musb->lock, flags);
 	ret = usb_hcd_link_urb_to_ep(hcd, urb);
+	raw_spin_lock_irqsave(&musb->lock, flags);
 	qh = ret ? NULL : hep->hcpriv;
 	if (qh)
 		urb->hcpriv = qh;
-- 
1.7.0.4

