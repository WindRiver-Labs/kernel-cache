From 1355843a74bf5bdf37bb2888fb81039a1ab57be8 Mon Sep 17 00:00:00 2001
From: Guoqing Jiang <Guoqing.Jiang@windriver.com>
Date: Tue, 5 Jul 2011 11:45:29 +0800
Subject: [PATCH 08/13] TI816x preempt_rt: no need to protect musb_h_disable with raw_spin_lock_irqsave/raw_spin_unlock_irqrestore

musb_h_disable can be call with enable preempt, and to avoid latency
issue, we should remove raw_spin_lock_irqsave/raw_spin_unlock_irqrestore
in musb_h_disable since it is a long path between the lock.

Signed-off-by: Guoqing Jiang <Guoqing.Jiang@windriver.com>
---
 drivers/usb/musb/musb_host.c |    5 +----
 1 files changed, 1 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/musb/musb_host.c b/drivers/usb/musb/musb_host.c
index 78f0a33..31f12dc 100644
--- a/drivers/usb/musb/musb_host.c
+++ b/drivers/usb/musb/musb_host.c
@@ -2272,13 +2272,10 @@ static void
 musb_h_disable(struct usb_hcd *hcd, struct usb_host_endpoint *hep)
 {
 	u8			is_in = hep->desc.bEndpointAddress & USB_DIR_IN;
-	unsigned long		flags;
 	struct musb		*musb = hcd_to_musb(hcd);
 	struct musb_qh		*qh;
 	struct urb		*urb;
 
-	raw_spin_lock_irqsave(&musb->lock, flags);
-
 	qh = hep->hcpriv;
 	if (qh == NULL)
 		goto exit;
@@ -2318,7 +2315,7 @@ musb_h_disable(struct usb_hcd *hcd, struct usb_host_endpoint *hep)
 		kfree(qh);
 	}
 exit:
-	raw_spin_unlock_irqrestore(&musb->lock, flags);
+	return;
 }
 
 static int musb_h_get_frame_number(struct usb_hcd *hcd)
-- 
1.7.0.4

