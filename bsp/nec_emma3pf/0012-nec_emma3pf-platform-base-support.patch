From 0a3a32fe7ee1424efe7ce4d8dfd8ab286bf88597 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Tue, 28 Apr 2009 14:34:59 +0900
Subject: [PATCH] nec_emma3pf: platform base support

Provide EMMA3PF platform header files.  EMMA3PF-based machines' BSPs are
encouraged to created with/upon this patch.

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 arch/mips/Makefile                  |    6 +
 include/asm-mips/emma/emma3pf.h     |  293 +++++++++++++++++++++++++++++++++++
 include/asm-mips/mach-emma3pf/irq.h |   24 +++
 include/asm-mips/mach-emma3pf/war.h |   25 +++
 4 files changed, 348 insertions(+), 0 deletions(-)
 create mode 100644 include/asm-mips/emma/emma3pf.h
 create mode 100644 include/asm-mips/mach-emma3pf/irq.h
 create mode 100644 include/asm-mips/mach-emma3pf/war.h

diff --git a/arch/mips/Makefile b/arch/mips/Makefile
index 766bb51..3690634 100644
--- a/arch/mips/Makefile
+++ b/arch/mips/Makefile
@@ -413,6 +413,12 @@ core-$(CONFIG_MARKEINS)         += arch/mips/emma2rh/markeins/
 load-$(CONFIG_MARKEINS)         += 0xffffffff88100000
 
 #
+# NEC EMMA3PF boards
+#
+core-$(CONFIG_SOC_EMMA)		+= arch/mips/emma/common/
+cflags-$(CONFIG_SOC_EMMA3PF)	+= -Iinclude/asm-mips/mach-emma3pf
+
+#
 # SGI IP22 (Indy/Indigo2)
 #
 # Set the load address to >= 0xffffffff88069000 if you want to leave space for
diff --git a/include/asm-mips/emma/emma3pf.h b/include/asm-mips/emma/emma3pf.h
new file mode 100644
index 0000000..4c372f8
--- /dev/null
+++ b/include/asm-mips/emma/emma3pf.h
@@ -0,0 +1,293 @@
+/*
+ *  include/asm-mips/emma/emma3pf.h
+ *      This file is EMMA3PF common header.
+ *
+ * Author: NEC Electronics Corporation
+ *
+ * Copyright (C) NEC Electronics Corporation 2009
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2
+ * as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ *
+ *  This file based on include/asm-mips/ddb5xxx/ddb5xxx.h
+ *          Copyright 2001 MontaVista Software Inc.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+#ifndef __ASM_EMMA_EMMA3PF_H
+#define __ASM_EMMA_EMMA3PF_H
+
+/*
+ * EMMA3PF registers
+ */
+#define REGBASE 0x10000000
+
+#define EMMA_BHIF_BASE		(0x0000+REGBASE)
+#define EMMA_ETHER_BASE		(0x012000+REGBASE)
+#define EMMA_PBRD_BASE		(0x100000+REGBASE)
+#define EMMA_TIMER_BASE		(0x110000+REGBASE)
+#define EMMA_PCI_BASE		(0x200000+REGBASE)
+#define EMMA_SATA_PORT_BASE	(0x204000+REGBASE)
+
+#define EMMA_BHIF_STRAP_0	(0x0010+EMMA_BHIF_BASE)
+#define EMMA_BHIF_CLKSEL	(0x001c+EMMA_BHIF_BASE)
+#define EMMA_BHIF_ALTERNATE0	(0x0028+EMMA_BHIF_BASE)
+#define EMMA_BHIF_ALTERNATE1	(0x0018+EMMA_BHIF_BASE)
+#define EMMA_BHIF_INT_ST_0	(0x0030+EMMA_BHIF_BASE)
+#define EMMA_BHIF_INT_ST_1	(0x0034+EMMA_BHIF_BASE)
+#define EMMA_BHIF_INT_ST_2	(0x0038+EMMA_BHIF_BASE)
+#define EMMA_BHIF_INT_EN_0	(0x0040+EMMA_BHIF_BASE)
+#define EMMA_BHIF_INT_EN_1	(0x0044+EMMA_BHIF_BASE)
+#define EMMA_BHIF_INT_EN_2	(0x0048+EMMA_BHIF_BASE)
+#define EMMA_BHIF_SUB_INT_ST_0	(0x0100+EMMA_BHIF_BASE)
+#define EMMA_BHIF_SUB_INT_ST_1	(0x0104+EMMA_BHIF_BASE)
+#define EMMA_BHIF_SUB_INT_ST_2	(0x0108+EMMA_BHIF_BASE)
+#define EMMA_BHIF_SUB_INT_EN_0	(0x0110+EMMA_BHIF_BASE)
+#define EMMA_BHIF_SUB_INT_EN_1	(0x0114+EMMA_BHIF_BASE)
+#define EMMA_BHIF_SUB_INT_EN_2	(0x0118+EMMA_BHIF_BASE)
+#define EMMA_BHIF_SW_INT	(0x01a0+EMMA_BHIF_BASE)
+#define EMMA_BHIF_SW_INT_EN	(0x01a4+EMMA_BHIF_BASE)
+#define EMMA_BHIF_SW_INT_CLR	(0x01a8+EMMA_BHIF_BASE)
+
+#define EMMA_PUART0_BASE	(0x1000+EMMA_PBRD_BASE)
+#define EMMA_PUART1_BASE	(0x2000+EMMA_PBRD_BASE)
+#define EMMA_PIIC0_BASE		(0x4000+EMMA_PBRD_BASE)
+#define EMMA_PIIC1_BASE		(0x5000+EMMA_PBRD_BASE)
+#define EMMA_PIIC2_BASE		(0x6000+EMMA_PBRD_BASE)
+
+#define EMMA_GPIO0_BASE		(0x0c00+EMMA_TIMER_BASE)
+#define EMMA_GPIO0_DIR		(0xc0+EMMA_GPIO0_BASE)
+#define EMMA_GPIO0_INT		(0xc8+EMMA_GPIO0_BASE)
+#define EMMA_GPIO0_INT_CPUMEN	(0xd0+EMMA_GPIO0_BASE)
+#define EMMA_GPIO0_INT_CPUSEN	(0xd8+EMMA_GPIO0_BASE)
+#define EMMA_GPIO0_INT_MODE	(0xe0+EMMA_GPIO0_BASE)
+#define EMMA_GPIO0_INT_CND_A	(0xe8+EMMA_GPIO0_BASE)
+#define EMMA_GPIO0_INT_CND_B	(0xf0+EMMA_GPIO0_BASE)
+
+#define EMMA_GPIO1_BASE		(0x0d00+EMMA_TIMER_BASE)
+#define EMMA_GPIO1_DIR		(0xc0+EMMA_GPIO1_BASE)
+#define EMMA_GPIO1_INT		(0xc8+EMMA_GPIO1_BASE)
+#define EMMA_GPIO1_INT_CPUMEN	(0xd0+EMMA_GPIO1_BASE)
+#define EMMA_GPIO1_INT_CPUSEN	(0xd8+EMMA_GPIO1_BASE)
+#define EMMA_GPIO1_INT_MODE	(0xe0+EMMA_GPIO1_BASE)
+#define EMMA_GPIO1_INT_CND_A	(0xe8+EMMA_GPIO1_BASE)
+#define EMMA_GPIO1_INT_CND_B	(0xf0+EMMA_GPIO1_BASE)
+
+#define EMMA_GPIO_INT_ST	EMMA_GPIO0_INT
+#define EMMA_GPIO_INT_MASK	EMMA_GPIO0_INT_CPUMEN
+#define EMMA_GPIO_SUB_INT_MASK	EMMA_GPIO0_INT_CPUSEN
+#define EMMA_GPIO_INT_ST_OFFSET		(EMMA_GPIO0_INT - EMMA_GPIO1_INT)
+#define EMMA_GPIO_INT_MASK_OFFSET	EMMA_GPIO_INT_ST_OFFSET
+
+#define EMMA_PCI_CONTROL	(0x0000+EMMA_PCI_BASE)
+#define EMMA_PCI_ARBIT_CTR	(0x0004+EMMA_PCI_BASE)
+#define EMMA_PCI_IWIN0_CTR	(0x0010+EMMA_PCI_BASE)
+#define EMMA_PCI_IWIN1_CTR	(0x0014+EMMA_PCI_BASE)
+#define EMMA_PCI_INIT_ESWP	(0x0018+EMMA_PCI_BASE)
+#define EMMA_PCI_INT		(0x0020+EMMA_PCI_BASE)
+#define EMMA_PCI_INT_EN		(0x0024+EMMA_PCI_BASE)
+#define EMMA_PCI_TWIN_CTR	(0x0030+EMMA_PCI_BASE)
+#define EMMA_PCI_TWIN_BADR	(0x0034+EMMA_PCI_BASE)
+#define EMMA_PCI_TWIN0_DADR	(0x0038+EMMA_PCI_BASE)
+#define EMMA_PCI_TWIN1_DADR	(0x003c+EMMA_PCI_BASE)
+
+#define EMMA_IDE_BRIDGE		(0x0100+EMMA_PCI_BASE)
+#define EMMA_IDE_CONFIG		(0x0200+EMMA_PCI_BASE)
+#define EMMA_IDE_PRIMARY	(0x0600+EMMA_PCI_BASE)
+
+#define EMMA_OHCI_BASE		(0x1000+EMMA_PCI_BASE)
+#define EMMA_EHCI_BASE		(0x0f00+EMMA_PCI_BASE)
+
+/*
+ *  Memory map (physical address)
+ *
+ *  Note most of the following address must be properly aligned by the
+ *  corresponding size.  For example, if PCI_IO_SIZE is 16MB, then
+ *  PCI_IO_BASE must be aligned along 16MB boundary.
+ */
+
+/* the actual ram size is detected at run-time */
+#define EMMA_RAM_BASE		0x00000000
+
+#define EMMA_RAM_SIZE		0x18000000	/* 384 MB */
+
+#define EMMA_IO_BASE		0x10000000
+#define EMMA_IO_SIZE		0x01000000	/* 16 MB */
+
+#define EMMA_GENERALIO_BASE	0x11000000
+#define EMMA_GENERALIO_SIZE	0x01000000	/* 16 MB */
+
+#define EMMA_PCI_IO_BASE	0x12000000
+#define EMMA_PCI_IO_SIZE	0x02000000	/* 32 MB */
+
+#define EMMA_PCI_MEM_BASE	0x14000000
+#define EMMA_PCI_MEM_SIZE	0x04000000	/* 64 MB */
+
+#define EMMA_NAND_BASE		0x18000000
+#define EMMA_NAND_SIZE		0x04000000	/* 64 MB */
+
+#define EMMA_PCI_CONFIG_BASE	EMMA_PCI_IO_BASE
+#define EMMA_PCI_CONFIG_SIZE	EMMA_PCI_IO_SIZE
+
+#define NUM_EMMA_IRQ		96
+#define NUM_EMMA_IRQ_SW		32
+#define NUM_EMMA_IRQ_GPIO	57
+
+#define EMMA_IRQ_BASE		(MIPS_CPU_IRQ_BASE + 8)
+#define EMMA_SW_IRQ_BASE	(EMMA_IRQ_BASE + NUM_EMMA_IRQ)
+#define EMMA_GPIO_IRQ_BASE	(EMMA_SW_IRQ_BASE + NUM_EMMA_IRQ_SW)
+
+/*
+ * emma3pf irq defs
+ */
+
+#define EMMA_IRQ_INT00		(0 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT01		(1 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT02		(2 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT03		(3 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT04		(4 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT05		(5 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT06		(6 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT07		(7 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT08		(8 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT09		(9 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT10		(10 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT11		(11 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT12		(12 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT13		(13 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT14		(14 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT15		(15 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT16		(16 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT17		(17 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT18		(18 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT19		(19 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT20		(20 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT21		(21 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT22		(22 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT23		(23 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT24		(24 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT25		(25 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT26		(26 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT27		(27 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT28		(28 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT29		(29 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT30		(30 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT31		(31 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT32		(32 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT33		(33 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT34		(34 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT35		(35 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT36		(36 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT37		(37 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT38		(38 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT39		(39 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT40		(40 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT41		(41 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT42		(42 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT43		(43 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT44		(44 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT45		(45 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT46		(46 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT47		(47 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT48		(48 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT49		(49 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT50		(50 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT51		(51 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT52		(52 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT53		(53 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT54		(54 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT55		(55 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT56		(56 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT57		(57 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT58		(58 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT59		(59 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT60		(60 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT61		(61 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT62		(62 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT63		(63 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT64		(64 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT65		(65 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT66		(66 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT67		(67 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT68		(68 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT69		(69 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT70		(70 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT71		(71 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT72		(72 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT73		(73 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT74		(74 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT75		(75 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT76		(76 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT77		(77 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT78		(78 + EMMA_IRQ_BASE)
+#define EMMA_IRQ_INT79		(79 + EMMA_IRQ_BASE)
+
+#define EMMA_SW_IRQ_INT00	(0 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT01	(1 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT02	(2 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT03	(3 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT04	(4 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT05	(5 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT06	(6 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT07	(7 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT08	(8 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT09	(9 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT10	(10 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT11	(11 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT12	(12 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT13	(13 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT14	(14 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT15	(15 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT16	(16 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT17	(17 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT18	(18 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT19	(19 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT20	(20 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT21	(21 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT22	(22 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT23	(23 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT24	(24 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT25	(25 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT26	(26 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT27	(27 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT28	(28 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT29	(29 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT30	(30 + EMMA_SW_IRQ_BASE)
+#define EMMA_SW_IRQ_INT31	(31 + EMMA_SW_IRQ_BASE)
+
+#define EMMA_SW_CASCADE		EMMA_IRQ_INT06
+#define EMMA_GPIO_CASCADE	EMMA_IRQ_INT46
+
+#define EMMA_IRQ_PUART0		EMMA_IRQ_INT48
+#define EMMA_IRQ_PUART1		EMMA_IRQ_INT49
+#define EMMA_IRQ_PIIC0		EMMA_IRQ_INT51
+#define EMMA_IRQ_PIIC1		EMMA_IRQ_INT52
+#define EMMA_IRQ_PIIC2		EMMA_IRQ_INT53
+
+#define EMMA_IRQ_USB		EMMA_IRQ_INT35
+#define EMMA_IRQ_KSATA0		EMMA_IRQ_INT36
+#define EMMA_IRQ_ETHER		EMMA_IRQ_INT61
+
+#endif	/* __ASM_EMMA_EMMA3PF_H */
diff --git a/include/asm-mips/mach-emma3pf/irq.h b/include/asm-mips/mach-emma3pf/irq.h
new file mode 100644
index 0000000..35d8e9a
--- /dev/null
+++ b/include/asm-mips/mach-emma3pf/irq.h
@@ -0,0 +1,24 @@
+/*
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ */
+#ifndef __ASM_MACH_EMMA_IRQ_H
+#define __ASM_MACH_EMMA_IRQ_H
+
+#define NR_IRQS	256
+
+#include_next <irq.h>
+
+#endif
diff --git a/include/asm-mips/mach-emma3pf/war.h b/include/asm-mips/mach-emma3pf/war.h
new file mode 100644
index 0000000..e0941fb
--- /dev/null
+++ b/include/asm-mips/mach-emma3pf/war.h
@@ -0,0 +1,25 @@
+/*
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ * Copyright (C) 2002, 2004, 2007 by Ralf Baechle <ralf@linux-mips.org>
+ */
+#ifndef __ASM_MIPS_MACH_EMMA3PF_WAR_H
+#define __ASM_MIPS_MACH_EMMA3PF_WAR_H
+
+#define R4600_V1_INDEX_ICACHEOP_WAR	0
+#define R4600_V1_HIT_CACHEOP_WAR	0
+#define R4600_V2_HIT_CACHEOP_WAR	0
+#define R5432_CP0_INTERRUPT_WAR		0
+#define BCM1250_M3_WAR			0
+#define SIBYTE_1956_WAR			0
+#define MIPS4K_ICACHE_REFILL_WAR	0
+#define MIPS_CACHE_SYNC_WAR		0
+#define TX49XX_ICACHE_INDEX_INV_WAR	0
+#define RM9000_CDEX_SMP_WAR		0
+#define ICACHE_REFILLS_WORKAROUND_WAR	0
+#define R10000_LLSC_WAR			0
+#define MIPS34K_MISSED_ITLB_WAR		0
+
+#endif /* __ASM_MIPS_MACH_EMMA3PF_WAR_H */
-- 
1.6.0.4

