From febb4ed306943124d69bf6c7ac32970700562c78 Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Fri, 24 Oct 2008 12:22:36 -0700
Subject: [PATCH] cavium: restructure of SMP ops

In the development of 2.6.25, the handling of the SMP platform
specific functions and the hook to register the SMP ops was
restructured to be more like the other architectures.

Signed-off-by: Tomaso Paoletti <tpaoletti@caviumnetworks.com>
Signed-off-by: Paul Gortmaker <Paul.Gortmaker@windriver.com>
---
 arch/mips/cavium-octeon/setup.c |    3 +++
 arch/mips/cavium-octeon/smp.c   |   34 ++++++++++++++++++++++++++--------
 2 files changed, 29 insertions(+), 8 deletions(-)

diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index b14515b..62f026e 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -25,6 +25,7 @@
 #include <asm/io.h>
 #include <asm/time.h>
 #include <asm/processor.h>
+#include <asm/smp-ops.h>
 #include <asm/reboot.h>
 #include <asm/system.h>
 #include <asm/irq_cpu.h>
@@ -35,6 +36,7 @@
 #include "cvmx-l2c.h"
 #include "cvmx-bootmem.h"
 
+extern struct plat_smp_ops octeon_smp_ops;
 extern void octeon_user_io_init(void);
 extern void pci_console_init(const char *arg);
 #ifdef CONFIG_CAVIUM_OCTEON_BOOTBUS_COMPACT_FLASH
@@ -264,6 +266,7 @@ void __init prom_init(void)
 	early_serial_setup(&octeon_port);
 
 	octeon_user_io_init();
+	register_smp_ops(&octeon_smp_ops);
 
 #ifdef CONFIG_KGDB
 	{
diff --git a/arch/mips/cavium-octeon/smp.c b/arch/mips/cavium-octeon/smp.c
index b4cee5a..d492bc0 100644
--- a/arch/mips/cavium-octeon/smp.c
+++ b/arch/mips/cavium-octeon/smp.c
@@ -3,7 +3,7 @@
  * License.  See the file "COPYING" in the main directory of this archive
  * for more details.
  *
- * Copyright (C) 2004-2007 Cavium Networks
+ * Copyright (C) 2004-2008 Cavium Networks
  */
 #include <linux/init.h>
 #include <linux/delay.h>
@@ -54,7 +54,7 @@ static irqreturn_t mailbox_interrupt(int irq, void *dev_id)
  * @param cpu
  * @param action
  */
-void core_send_ipi(int cpu, unsigned int action)
+static void octeon_send_ipi_single(int cpu, unsigned int action)
 {
 	int coreid = cpu_logical_map(cpu);
 	// printk("SMP: Mailbox send cpu=%d, coreid=%d, action=%u\n", cpu,
@@ -62,11 +62,18 @@ void core_send_ipi(int cpu, unsigned int action)
 	cvmx_write_csr(CVMX_CIU_MBOX_SETX(coreid), action);
 }
 
+static inline void octeon_send_ipi_mask(cpumask_t mask, unsigned int action)
+{
+	unsigned int i;
+
+	for_each_cpu_mask(i, mask)
+		octeon_send_ipi_single(i, action);
+}
 
 /**
  * Detect available CPUs, populate phys_cpu_present_map
  */
-void plat_smp_setup(void)
+static void octeon_smp_setup(void)
 {
 	const int coreid = cvmx_get_core_num();
 	int cpus;
@@ -97,7 +104,7 @@ void plat_smp_setup(void)
  * @param cpu
  * @param idle
  */
-void prom_boot_secondary(int cpu, struct task_struct *idle)
+static void octeon_boot_secondary(int cpu, struct task_struct *idle)
 {
 	int count;
 
@@ -128,7 +135,7 @@ void prom_boot_secondary(int cpu, struct task_struct *idle)
  * After we've done initial boot, this function is called to allow the
  * board code to clean up state, if needed
  */
-void prom_init_secondary(void)
+static void octeon_init_secondary(void)
 {
 	const int coreid = cvmx_get_core_num();
 	cvmx_ciu_intx0_t interrupt_enable;
@@ -156,7 +163,7 @@ void prom_init_secondary(void)
  *
  * @param max_cpus
  */
-void plat_prepare_cpus(unsigned int max_cpus)
+void octeon_prepare_cpus(unsigned int max_cpus)
 {
 	cvmx_write_csr(CVMX_CIU_MBOX_CLRX(cvmx_get_core_num()), 0xffffffff);
 	request_irq(OCTEON_IRQ_MBOX0, mailbox_interrupt, IRQF_SHARED, "mailbox0",
@@ -170,7 +177,7 @@ void plat_prepare_cpus(unsigned int max_cpus)
  * Last chance for the board code to finish SMP initialization before
  * the CPU is "online".
  */
-void prom_smp_finish(void)
+static void octeon_smp_finish(void)
 {
 #ifdef CONFIG_CAVIUM_GDB
 	unsigned long tmp;
@@ -193,7 +200,7 @@ void prom_smp_finish(void)
 /**
  * Hook for after all CPUs are online
  */
-void prom_cpus_done(void)
+static void octeon_cpus_done(void)
 {
 #ifdef CONFIG_CAVIUM_GDB
 	unsigned long tmp;
@@ -205,4 +212,15 @@ void prom_cpus_done(void)
 #endif
 }
 
+struct plat_smp_ops octeon_smp_ops = {
+	.send_ipi_single	= octeon_send_ipi_single,
+	.send_ipi_mask		= octeon_send_ipi_mask,
+	.init_secondary		= octeon_init_secondary,
+	.smp_finish		= octeon_smp_finish,
+	.cpus_done		= octeon_cpus_done,
+	.boot_secondary		= octeon_boot_secondary,
+	.smp_setup		= octeon_smp_setup,
+	.prepare_cpus		= octeon_prepare_cpus,
+};
+
 EXPORT_SYMBOL(__cpu_logical_map);
-- 
1.5.5.1

