From 04b6f06c26676103869a2bb6a0a02351ad4c44fe Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Fri, 24 Oct 2008 12:22:48 -0700
Subject: [PATCH] cavium: uasm additions

Cavium core brings new opcodes to the table, like bbit0 and bbit1.

Signed-off-by: Tomaso Paoletti <tpaoletti@caviumnetworks.com>
Signed-off-by: Paul Gortmaker <Paul.Gortmaker@windriver.com>
---
 arch/mips/mm/uasm.c |   82 ++++++++++++++++++++++++++++++++++++++++++++++++++-
 arch/mips/mm/uasm.h |   32 ++++++++++++++++++++
 2 files changed, 113 insertions(+), 1 deletions(-)

diff --git a/arch/mips/mm/uasm.c b/arch/mips/mm/uasm.c
index f467199..f1479b8 100644
--- a/arch/mips/mm/uasm.c
+++ b/arch/mips/mm/uasm.c
@@ -64,7 +64,11 @@ enum opcode {
 	insn_ld, insn_ll, insn_lld, insn_lui, insn_lw, insn_mfc0,
 	insn_mtc0, insn_ori, insn_pref, insn_rfe, insn_sc, insn_scd,
 	insn_sd, insn_sll, insn_sra, insn_srl, insn_subu, insn_sw,
-	insn_tlbp, insn_tlbwi, insn_tlbwr, insn_xor, insn_xori
+	insn_tlbp, insn_tlbwi, insn_tlbwr, insn_xor, insn_xori,
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	insn_nor, insn_bbit1, insn_bbit132, insn_bbit0, insn_bbit032, 
+	insn_dins, insn_dinsu
+#endif
 };
 
 struct insn {
@@ -132,6 +136,15 @@ static struct insn insn_table[] __cpuinitdata = {
 	{ insn_tlbwr,  M(cop0_op, cop_op, 0, 0, 0, tlbwr_op),  0 },
 	{ insn_xor,  M(spec_op, 0, 0, 0, 0, xor_op),  RS | RT | RD },
 	{ insn_xori,  M(xori_op, 0, 0, 0, 0, 0),  RS | RT | UIMM },
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	{ insn_nor, M(spec_op, 0, 0, 0, 0, nor_op), RS | RT | RD },
+	{ insn_bbit1, M(swc2_op, 0, 0, 0, 0, 0), RS | RT | BIMM },
+	{ insn_bbit132, M(sdc2_op, 0, 0, 0, 0, 0), RS | RT | BIMM },
+	{ insn_bbit0, M(lwc2_op, 0, 0, 0, 0, 0), RS | RT | BIMM },
+	{ insn_bbit032, M(ldc2_op, 0, 0, 0, 0, 0), RS | RT | BIMM },
+	{ insn_dins, M(spec3_op, 0, 0, 0, 0, dins_op), RS | RT | RD | RE },
+	{ insn_dinsu, M(spec3_op, 0, 0, 0, 0, dinsu_op), RS | RT | RD | RE },
+#endif
 	{ insn_invalid, 0, 0 }
 };
 
@@ -268,6 +281,12 @@ static void __cpuinit build_insn(u32 **buf, enum opcode opc, ...)
 	(*buf)++;
 }
 
+/*
+ * You might think when you see u3u1u2 -- that would mean all unsigned,
+ * and positioning 3,1,2 --> (c, a, b), however that is not the case.
+ * Instead it is a in 3rd, b in 1st and c in 2nd, which gives (b, c, a).
+ */
+
 #define I_u1u2u3(op)					\
 Ip_u1u2u3(op)						\
 {							\
@@ -328,6 +347,24 @@ Ip_0(op)						\
 	build_insn(buf, insn##op);			\
 }
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+/* FIXME: These functions for dins/dinsu don't share like the above.
+   They should really use Ip_u2u1u4u3(op) and do the u4/u3 arg
+   blending in the callee and not here in the build_insn() itself. */
+
+#define I_u2u1msbu3(op)					\
+Ip_u2u1msbu3(op)					\
+{							\
+	build_insn(buf, insn##op, b, a, c+d-1, c);	\
+}
+
+#define I_u2u1msb33u3(op)					\
+Ip_u2u1msb33u3(op)						\
+{								\
+	build_insn(buf, insn##op, rs, rt, pos+size-33, pos-32);	\
+}
+#endif
+
 I_u2u1s3(_addiu)
 I_u3u1u2(_addu)
 I_u2u1u3(_andi)
@@ -377,6 +414,15 @@ I_0(_tlbwi)
 I_0(_tlbwr)
 I_u3u1u2(_xor)
 I_u2u1u3(_xori)
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+I_u3u1u2(_nor);
+I_u1u2s3(_bbit1);
+I_u1u2s3(_bbit132);
+I_u1u2s3(_bbit0);
+I_u1u2s3(_bbit032);
+I_u2u1msbu3(_dins);
+I_u2u1msb33u3(_dinsu);
+#endif
 
 /* Handle labels. */
 void __cpuinit uasm_build_label(struct uasm_label **lab, u32 *addr, int lid)
@@ -586,3 +632,37 @@ uasm_il_bgez(u32 **p, struct uasm_reloc **r, unsigned int reg, int lid)
 	uasm_r_mips_pc16(r, *p, lid);
 	uasm_i_bgez(p, reg, 0);
 }
+
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+void __init
+uasm_il_bbit1(u32 **p, struct uasm_reloc **r, unsigned int reg,
+				unsigned int bit, int lid)
+{
+	uasm_r_mips_pc16(r, *p, lid);
+	uasm_i_bbit1(p, reg, bit, 0);
+}
+
+void __init
+uasm_il_bbit132(u32 **p, struct uasm_reloc **r, unsigned int reg,
+				unsigned int bit, int lid)
+{
+	uasm_r_mips_pc16(r, *p, lid);
+	uasm_i_bbit132(p, reg, bit-32, 0);
+}
+
+void __init
+uasm_il_bbit032(u32 **p, struct uasm_reloc **r, unsigned int reg,
+				unsigned int bit, int lid)
+{
+	uasm_r_mips_pc16(r, *p, lid);
+	uasm_i_bbit032(p, reg, bit-32, 0);
+}
+
+void __init
+uasm_il_bbit0(u32 **p, struct uasm_reloc **r, unsigned int reg,
+				unsigned int bit, int lid)
+{
+	uasm_r_mips_pc16(r, *p, lid);
+	uasm_i_bbit0(p, reg, bit, 0);
+}
+#endif	/* CONFIG_CPU_CAVIUM_OCTEON */
diff --git a/arch/mips/mm/uasm.h b/arch/mips/mm/uasm.h
index c6d1e3d..9b75b9e 100644
--- a/arch/mips/mm/uasm.h
+++ b/arch/mips/mm/uasm.h
@@ -44,6 +44,19 @@ void __cpuinit uasm_i##op(u32 **buf, unsigned int a, signed int b)
 
 #define Ip_0(op) void __cpuinit uasm_i##op(u32 **buf)
 
+/* FIXME: These prototypes for dins/dinsu don't share like the above.
+	They should probably use Ip_u2u1u4u3(op) and do the u4/u3 arg
+	blending in the callee and not the build_insn() itself. */
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+#define Ip_u2u1msbu3(op)						\
+void __init i##op(u32 **buf, unsigned int a, unsigned int b,		\
+			unsigned int c, unsigned int d)
+
+#define Ip_u2u1msb33u3(op)						\
+void __init i##op(u32 **buf, unsigned int rt, unsigned int rs,		\
+			unsigned int pos, unsigned int size)
+#endif
+
 Ip_u2u1s3(_addiu);
 Ip_u3u1u2(_addu);
 Ip_u2u1u3(_andi);
@@ -93,6 +106,15 @@ Ip_0(_tlbwi);
 Ip_0(_tlbwr);
 Ip_u3u1u2(_xor);
 Ip_u2u1u3(_xori);
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+Ip_u3u1u2(_nor);
+Ip_u1u2s3(_bbit1);
+Ip_u1u2s3(_bbit132);
+Ip_u1u2s3(_bbit0);
+Ip_u1u2s3(_bbit032);
+Ip_u2u1msbu3(_dins);
+Ip_u2u1msb33u3(_dinsu);
+#endif
 
 /* Handle labels. */
 struct uasm_label {
@@ -182,3 +204,13 @@ void uasm_il_bne(u32 **p, struct uasm_reloc **r, unsigned int reg1,
 void uasm_il_bnez(u32 **p, struct uasm_reloc **r, unsigned int reg, int lid);
 void uasm_il_bgezl(u32 **p, struct uasm_reloc **r, unsigned int reg, int lid);
 void uasm_il_bgez(u32 **p, struct uasm_reloc **r, unsigned int reg, int lid);
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+void uasm_il_bbit1(u32 **p, struct uasm_reloc **r, unsigned int reg,
+		unsigned int bit, int lid);
+void uasm_il_bbit132(u32 **p, struct uasm_reloc **r, unsigned int reg,
+		unsigned int bit, int lid);
+void uasm_il_bbit032(u32 **p, struct uasm_reloc **r, unsigned int reg,
+		unsigned int bit, int lid);
+void uasm_il_bbit0(u32 **p, struct uasm_reloc **r, unsigned int reg,
+		unsigned int bit, int lid);
+#endif
-- 
1.5.5.1

