From 8af0ad543a00e7b99e4b75c6cc7b936c57638d8f Mon Sep 17 00:00:00 2001
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Mon, 16 Mar 2009 10:49:52 +0800
Subject: [PATCH] Cavium CN56/57XX: RTC ds1307 support

RTC ds1307 driver follows new i2c driver style which needs
a i2c device registered, so here we register ds1307 i2c
device to bind the ds1307 driver.

Signed-off-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 drivers/i2c/busses/i2c-octeon.c |   32 ++++++++++++++++++++++++++++++++
 1 files changed, 32 insertions(+), 0 deletions(-)

diff --git a/drivers/i2c/busses/i2c-octeon.c b/drivers/i2c/busses/i2c-octeon.c
index 2f58a8f..463cfd8 100644
--- a/drivers/i2c/busses/i2c-octeon.c
+++ b/drivers/i2c/busses/i2c-octeon.c
@@ -79,6 +79,11 @@ static int i2c_debug;
 
 static int i2c_scan = 1;
 
+static struct i2c_board_info ds1307_i2c_devices = {
+	I2C_BOARD_INFO("ds1307", 0x68),
+};
+static struct i2c_client *ds1307_i2c_client;
+
 /* invalid address will return 1; TEN bit addr is valid */
 static inline int i2c_invalid_address(const struct i2c_msg *p)
 {
@@ -223,6 +228,20 @@ static int octeon_i2c_scan_bus(struct i2c_adapter *adap)
 	return found;
 }
 
+static int octeon_check_ds1307_on_bus(struct i2c_adapter *adap)
+{
+	struct i2c_msg msg;
+	char data[1];
+	msg.addr = 0x68;
+	msg.buf = data;
+	msg.len = 0;
+	msg.flags = I2C_M_RD;
+	if (octeon_i2c_xfer(adap, &msg, 1) > 0)
+		return 1;
+	else
+		return 0;
+}
+
 static int __init octeon_i2c_init(void)
 {
 	int r, i;
@@ -249,6 +268,14 @@ static int __init octeon_i2c_init(void)
 			octeon_i2c_scan_bus(octeon_i2c_adap[i]);
 		}
 
+	/* ds1307 device register */
+	if (octeon_check_ds1307_on_bus(octeon_i2c_adap[0])) {
+		ds1307_i2c_client = i2c_new_device(octeon_i2c_adap[0],
+						   &ds1307_i2c_devices);
+		if (ds1307_i2c_client == NULL)
+			printk(KERN_ERR "ds1307 register failed \n");
+	}
+
 	if (driver_register(&octeon_i2c_driver) != 0)
 		printk(KERN_ERR "Driver register failed for octeon_i2c\n");
 
@@ -268,6 +295,11 @@ do_release_region:
 static void __exit octeon_i2c_exit(void)
 {
 	int i;
+
+	/* unregister i2c device ds1307 */
+	if(ds1307_i2c_client != NULL)
+		i2c_unregister_device(ds1307_i2c_client);
+
 	for (i = 0; i < octeon_i2c_num_ifaces(); i++)
 		i2c_del_adapter(octeon_i2c_adap[i]);
 /*	release_region(OCTEON_I2C_BASE, OCTEON_I2C_IOSIZE); */
-- 
1.6.0.4

