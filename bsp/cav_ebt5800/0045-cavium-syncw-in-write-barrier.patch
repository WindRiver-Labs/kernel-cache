From b53eb307817c994eebe9e12aea730be8673d41f2 Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Fri, 24 Oct 2008 12:22:43 -0700
Subject: [PATCH] cavium: syncw in write barrier

Add in a syncw to the fast_wmb(), fast_mb() and fast_iob()

Signed-off-by: Tomaso Paoletti <tpaoletti@caviumnetworks.com>
Signed-off-by: Paul Gortmaker <Paul.Gortmaker@windriver.com>
---
 include/asm-mips/barrier.h |   33 +++++++++++++++++++++++++++++++--
 1 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/include/asm-mips/barrier.h b/include/asm-mips/barrier.h
index 8e9ac31..3f2e1b7 100644
--- a/include/asm-mips/barrier.h
+++ b/include/asm-mips/barrier.h
@@ -78,6 +78,18 @@
 #define __sync()	do { } while(0)
 #endif
 
+
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+#define __syncw() 	__asm__ __volatile__(OCTEON_SYNCW_STR ::: "memory")
+#define __fast_iob()	do { } while(0)
+
+#define fast_wmb()	__syncw()
+#define fast_rmb()	do { } while(0)
+#define fast_mb()	__syncw()
+#define fast_iob()	do { } while(0)
+
+#else /* !CONFIG_CPU_CAVIUM_OCTEON */
+
 #define __fast_iob()				\
 	__asm__ __volatile__(			\
 		".set	push\n\t"		\
@@ -104,13 +116,14 @@
 		: /* no output */		\
 		: "m" (*(int *)CKSEG1ADDR(0x1fa00004)) \
 		: "memory")
-#else
+#else /* !CONFIG_SGI_IP28 */
 #define fast_iob()				\
 	do {					\
 		__sync();			\
 		__fast_iob();			\
 	} while (0)
-#endif
+#endif /* !CONFIG_SGI_IP28 */
+#endif /* !CONFIG_CPU_CAVIUM_OCTEON */
 
 #ifdef CONFIG_CPU_HAS_WB
 
@@ -131,9 +144,20 @@
 #endif /* !CONFIG_CPU_HAS_WB */
 
 #if defined(CONFIG_WEAK_ORDERING) && defined(CONFIG_SMP)
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+/* We actually use two syncw instructions in a row when we need a write memory
+   barrier. This is because the CN3XXX series of Octeons have errata Core-401.
+   This can cause a single syncw to not enforce ordering under very rare
+   conditions. Even if it is rare, better safe than sorry */
+#define __WEAK_ORDERING_MB	".set push\n.set arch=octeon\nsyncw\nsyncw\n.set pop\n"
+#define OCTEON_SYNCW_STR	__WEAK_ORDERING_MB
+#else /* !CONFIG_CPU_CAVIUM_OCTEON */
 #define __WEAK_ORDERING_MB	"       sync	\n"
+#define OCTEON_SYNCW_STR	"		\n"
+#endif
 #else
 #define __WEAK_ORDERING_MB	"		\n"
+#define OCTEON_SYNCW_STR	"		\n"
 #endif
 #if defined(CONFIG_WEAK_REORDERING_BEYOND_LLSC) && defined(CONFIG_SMP)
 #define __WEAK_LLSC_MB		"       sync	\n"
@@ -142,8 +166,13 @@
 #endif
 
 #define smp_mb()	__asm__ __volatile__(__WEAK_ORDERING_MB : : :"memory")
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+#define smp_rmb()	barrier()
+#define smp_wmb()	barrier()
+#else
 #define smp_rmb()	__asm__ __volatile__(__WEAK_ORDERING_MB : : :"memory")
 #define smp_wmb()	__asm__ __volatile__(__WEAK_ORDERING_MB : : :"memory")
+#endif
 
 #define set_mb(var, value) \
 	do { var = value; smp_mb(); } while (0)
-- 
1.5.5.1

