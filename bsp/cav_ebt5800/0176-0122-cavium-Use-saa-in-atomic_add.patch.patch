From ddd8618f1fe6279e55a694260e13cfd3ca673d71 Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Mon, 27 Oct 2008 15:58:12 -0400
Subject: [PATCH] 0122-cavium-Use-saa-in-atomic_add.patch

From 6e73999cd421f22f0c27b19422cc5bbc4992e74d Mon Sep 17 00:00:00 2001
Subject: [PATCH] 0122-cavium-Use-saa-in-atomic_add.patch
---
 include/asm-mips/atomic.h |   44 ++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 44 insertions(+), 0 deletions(-)

diff --git a/include/asm-mips/atomic.h b/include/asm-mips/atomic.h
index c2683a4..9d1f030 100644
--- a/include/asm-mips/atomic.h
+++ b/include/asm-mips/atomic.h
@@ -50,6 +50,17 @@ typedef struct { volatile int counter; } atomic_t;
  */
 static __inline__ void atomic_add(int i, atomic_t * v)
 {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	if (cpu_has_saa) {
+		__asm__ __volatile__(
+		".set	push\n"
+		".set	arch=octeon\n"
+		"saa    %1, (%2)\n"
+		".set	pop\n"
+		: "+m" (v->counter)
+		: "r" (i), "r" (v));
+	} else
+#endif
 	if (cpu_has_llsc && R10000_LLSC_WAR) {
 		unsigned long temp;
 
@@ -95,6 +106,17 @@ static __inline__ void atomic_add(int i, atomic_t * v)
  */
 static __inline__ void atomic_sub(int i, atomic_t * v)
 {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	if (cpu_has_saa) {
+		__asm__ __volatile__(
+		".set	push\n"
+		".set	arch=octeon\n"
+		"saa    %1, (%2)\n"
+		".set	pop\n"
+		: "+m" (v->counter)
+		: "r" (-i), "r" (v));
+	} else
+#endif
 	if (cpu_has_llsc && R10000_LLSC_WAR) {
 		unsigned long temp;
 
@@ -434,6 +456,17 @@ typedef struct { volatile long counter; } atomic64_t;
  */
 static __inline__ void atomic64_add(long i, atomic64_t * v)
 {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	if (cpu_has_saa) {
+		__asm__ __volatile__(
+		".set	push\n"
+		".set	arch=octeon\n"
+		"saad   %1, (%2)\n"
+		".set	pop\n"
+		: "+m" (v->counter)
+		: "r" (i), "r" (v));
+	} else
+#endif
 	if (cpu_has_llsc && R10000_LLSC_WAR) {
 		unsigned long temp;
 
@@ -479,6 +512,17 @@ static __inline__ void atomic64_add(long i, atomic64_t * v)
  */
 static __inline__ void atomic64_sub(long i, atomic64_t * v)
 {
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+	if (cpu_has_saa) {
+		__asm__ __volatile__(
+		".set	push\n"
+		".set	arch=octeon\n"
+		"saad    %1, (%2)\n"
+		".set	pop\n"
+		: "+m" (v->counter)
+		: "r" (-i), "r" (v));
+	} else
+#endif
 	if (cpu_has_llsc && R10000_LLSC_WAR) {
 		unsigned long temp;
 
-- 
1.6.0.3

