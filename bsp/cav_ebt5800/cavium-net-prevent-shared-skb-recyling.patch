From 2f4c96e7f19d2b7f3453348f60622ece4b0b0d1f Mon Sep 17 00:00:00 2001
From: Jason HU <yongqi.hu@windriver.com>
Date: Thu, 16 Jul 2009 17:29:47 +0800
Subject: [PATCH] cavium/net: prevent shared skb recyling

The skb is checked to make sure it is not shared by others before it is added
to the tx_free_list queue to avoid putting the same skb into the queue several
times, and it is freed immediately if it is shared.

Signed-off-by: Jason HU <yongqi.hu@windriver.com>
---
 drivers/net/cavium-ethernet/ethernet-tx.c |   15 +++++++++++----
 1 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/drivers/net/cavium-ethernet/ethernet-tx.c b/drivers/net/cavium-ethernet/ethernet-tx.c
index db04300..48a6ea8 100644
--- a/drivers/net/cavium-ethernet/ethernet-tx.c
+++ b/drivers/net/cavium-ethernet/ethernet-tx.c
@@ -320,15 +320,22 @@ dont_put_skbuff_in_hw:
 	} else {
 		if (USE_SKBUFFS_IN_HW) {
 			/* Put this packet on the queue to be freed later */
-			if (pko_command.s.dontfree)
-				skb_queue_tail(&priv->tx_free_list[qos], skb);
+			if (pko_command.s.dontfree){
+				if (unlikely(skb_shared(skb)))
+					dev_kfree_skb_any(skb);
+				else
+					skb_queue_tail(&priv->tx_free_list[qos], skb);
+			}
 			else {
 				cvmx_fau_atomic_add32(FAU_NUM_PACKET_BUFFERS_TO_FREE, -1);
 				cvmx_fau_atomic_add32(priv->fau+qos*4, -1);
 			}
 		} else {
-			/* Put this packet on the queue to be freed later */
-			skb_queue_tail(&priv->tx_free_list[qos], skb);
+			 if (unlikely(skb_shared(skb)))
+				 dev_kfree_skb_any(skb);
+			 else
+				/* Put this packet on the queue to be freed later */
+				skb_queue_tail(&priv->tx_free_list[qos], skb);
 		}
 	}
 
-- 
1.6.3.1

