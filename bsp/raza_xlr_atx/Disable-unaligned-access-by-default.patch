From 373a59787a58cfc1d5b42b87921478039a3fbf2c Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Thu, 28 Apr 2011 10:06:20 +0800
Subject: [PATCH] Disable unaligned access by default

XLR processor allow the CPU to issue and complete unaligned load/store
operations without generating an exception. With this feature, the unaligned
access may get wrong result in some cases. So disable this feature by
default before the CPU vendor release official resolution.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 arch/mips/kernel/traps.c |    9 +++++++++
 arch/mips/rmi/Kconfig    |    8 ++++++++
 2 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c
index dd363c4..30ca966 100644
--- a/arch/mips/kernel/traps.c
+++ b/arch/mips/kernel/traps.c
@@ -47,6 +47,7 @@
 #include <asm/mmu_context.h>
 #include <asm/types.h>
 #include <asm/stacktrace.h>
+#include <asm/rmi/mips-exts.h>
 
 extern void check_wait(void);
 extern asmlinkage void r4k_wait(void);
@@ -1465,6 +1466,14 @@ void __cpuinit per_cpu_trap_init(void)
 		secondaryTC = 1;
 #endif /* CONFIG_MIPS_MT_SMTC */
 
+#ifdef CONFIG_RMI_PHOENIX
+#ifndef CONFIG_RMI_PHOENIX_UNALIGNED_ACCESS_ENABLED
+#define RMI_UNALIGNACCEN_BIT (0x4000UL)
+	write_64bit_phnx_ctrl_reg(CPU_BLOCKID_LSU, 0,
+		(read_64bit_phnx_ctrl_reg(CPU_BLOCKID_LSU, 0) & ~(RMI_UNALIGNACCEN_BIT)));
+#endif /* CONFIG_RMI_PHOENIX_UNALIGNED_ACCESS_ENABLED */
+#endif /* CONFIG_RMI_PHOENIX */
+
 	/*
 	 * Disable coprocessors and select 32-bit or 64-bit addressing
 	 * and the 16/32 or 32/32 FPR register model.  Reset the BEV
diff --git a/arch/mips/rmi/Kconfig b/arch/mips/rmi/Kconfig
index d5b6dbf..4d88157 100644
--- a/arch/mips/rmi/Kconfig
+++ b/arch/mips/rmi/Kconfig
@@ -23,6 +23,14 @@ config PHOENIX_CONSOLE_OVER_PCI
 	select PHOENIX_PCIX_GEN_DRIVER
         default n
 
+config RMI_PHOENIX_UNALIGNED_ACCESS_ENABLED
+	bool "Enable Unaligned Access"
+	depends on  RMI_PHOENIX
+	default n
+	help
+	  The XLR processor allow the CPU to issue and complete unaligned load/store 
+	  operations without generating an exception
+
 config RMI_PHOENIX_LOAD_ADDRESS
 	hex "RMI Linux kernel start address"
 	depends on RMI_PHOENIX
-- 
1.7.0.2

