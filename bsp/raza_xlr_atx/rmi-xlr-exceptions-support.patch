From 17266375c1cd3cc4797c9d026e18d573f48d6f1d Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Tue, 16 Dec 2008 19:06:55 +0800
Subject: [PATCH] rmi xlr exceptions support

When executing CP2 instructions(MSGSND, MSGLD, MSDWAIT) will cause coprocessor
unusable exception if the CU2 bit of STATUS is zero. Adding related exception
handler to allow CP2 access in user and kernel space.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/kernel/traps.c |   22 ++++++++++++++++++++++
 1 files changed, 22 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c
index 0648874..dd363c4 100644
--- a/arch/mips/kernel/traps.c
+++ b/arch/mips/kernel/traps.c
@@ -84,6 +84,9 @@ void (*board_nmi_handler_setup)(void);
 void (*board_ejtag_handler_setup)(void);
 void (*board_bind_eic_interrupt)(int irq, int regset);
 
+#ifdef CONFIG_RMI_PHOENIX
+extern unsigned long phnx_ebase;
+#endif
 
 static void show_raw_backtrace(unsigned long reg29)
 {
@@ -912,6 +915,21 @@ asmlinkage void do_cpu(struct pt_regs *regs)
 		return;
 
 	case 2:
+#ifdef CONFIG_RMI_PHOENIX
+	{
+		extern __u64 xlr_cp2_exceptions[];
+		
+		preempt_disable();
+		set_c0_status(ST0_CU2);
+		KSTK_STATUS(current) |= ST0_CU2;
+		
+		/* increment the cp2 exception stats */
+		xlr_cp2_exceptions[smp_processor_id()]++;
+
+		preempt_enable();
+	}
+		return;
+#endif
 	case 3:
 		break;
 	}
@@ -1592,6 +1610,10 @@ void __init trap_init(void)
 	else
 		ebase = CAC_BASE;
 
+#ifdef CONFIG_RMI_PHOENIX
+	ebase = phnx_ebase;
+#endif
+
 	per_cpu_trap_init();
 
 	/*
-- 
1.6.0.4

