From 3b4f4cb742fb6671124abbd8e5a4517d31134c92 Mon Sep 17 00:00:00 2001
From: Dan Williams <dan.j.williams@intel.com>
Date: Fri, 18 Feb 2011 09:25:13 -0800
Subject: [PATCH 018/479] isci: advertise linkrate

upstream: 83e514301ec73b16fb258618c9f9b443cca3744a

Inform libsas of the linkrate of direct attached links.

Reported-by: Haavard Skinnemoen <hskinnemoen@gmail.com>
Signed-off-by: Dan Williams <dan.j.williams@intel.com>

Integrated-by: Hui Wang <Hui.Wang@windriver.com>
---
 drivers/scsi/isci/core/scic_phy.h     |    3 +++
 drivers/scsi/isci/core/scic_sds_phy.c |    5 +++++
 drivers/scsi/isci/port.c              |    2 ++
 3 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/drivers/scsi/isci/core/scic_phy.h b/drivers/scsi/isci/core/scic_phy.h
index 13f8a30..bf0d3be 100644
--- a/drivers/scsi/isci/core/scic_phy.h
+++ b/drivers/scsi/isci/core/scic_phy.h
@@ -72,6 +72,9 @@
 struct scic_sds_phy;
 struct scic_sds_port;
 
+
+enum sas_linkrate sci_phy_linkrate(struct scic_sds_phy *sci_phy);
+
 /**
  * struct scic_phy_properties - This structure defines the properties common to
  *    all phys that can be retrieved.
diff --git a/drivers/scsi/isci/core/scic_sds_phy.c b/drivers/scsi/isci/core/scic_sds_phy.c
index d9213e2..743e5a6 100644
--- a/drivers/scsi/isci/core/scic_sds_phy.c
+++ b/drivers/scsi/isci/core/scic_sds_phy.c
@@ -73,6 +73,11 @@
 /* Maximum arbitration wait time in micro-seconds */
 #define SCIC_SDS_PHY_MAX_ARBITRATION_WAIT_TIME  (700)
 
+enum sas_linkrate sci_phy_linkrate(struct scic_sds_phy *sci_phy)
+{
+	return sci_phy->max_negotiated_speed;
+}
+
 /*
  * *****************************************************************************
  * * SCIC SDS PHY Internal Methods
diff --git a/drivers/scsi/isci/port.c b/drivers/scsi/isci/port.c
index 2343f65..446da20 100644
--- a/drivers/scsi/isci/port.c
+++ b/drivers/scsi/isci/port.c
@@ -263,6 +263,8 @@ void isci_port_link_up(
 		success = false;
 	}
 
+	isci_phy->sas_phy.phy->negotiated_linkrate = sci_phy_linkrate(phy);
+
 	spin_unlock_irqrestore(&isci_phy->sas_phy.frame_rcvd_lock, flags);
 
 	/* Notify libsas that we have an address frame, if indeed
-- 
1.7.0

