From dbde48d5fd1ecbe7d5bc9802f7a263fbc6eee1bd Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Thu, 4 Apr 2013 16:34:38 +0800
Subject: [PATCH 213/254] arm: socfpga: updates for smp part for 3.4.x kernel

Upstream: git://git.rocketboards.org/linux-socfpga.git

backport smp part of socfpga from 3.8 kernel.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/mach-socfpga/platsmp.c |   32 ++++++++++++++++++++++++--------
 arch/arm/mach-socfpga/socfpga.c |    1 -
 2 files changed, 24 insertions(+), 9 deletions(-)

diff --git a/arch/arm/mach-socfpga/platsmp.c b/arch/arm/mach-socfpga/platsmp.c
index 3ff7e89..a7eba56 100644
--- a/arch/arm/mach-socfpga/platsmp.c
+++ b/arch/arm/mach-socfpga/platsmp.c
@@ -30,7 +30,7 @@
 
 #include "core.h"
 
-static void __cpuinit socfpga_secondary_init(unsigned int cpu)
+void __cpuinit platform_secondary_init(unsigned int cpu)
 {
 	/*
 	 * if any interrupts are already enabled for the primary
@@ -40,7 +40,9 @@ static void __cpuinit socfpga_secondary_init(unsigned int cpu)
 	gic_secondary_init(0);
 }
 
-static int __cpuinit socfpga_boot_secondary(unsigned int cpu, struct task_struct *idle)
+/* static DEFINE_SPINLOCK(boot_lock); fixme by czm */
+
+int __cpuinit boot_secondary(unsigned int cpu, struct task_struct *idle)
 {
 	int trampoline_size = &secondary_trampoline_end - &secondary_trampoline;
 
@@ -65,10 +67,12 @@ static int __cpuinit socfpga_boot_secondary(unsigned int cpu, struct task_struct
  * Initialise the CPU possible map early - this describes the CPUs
  * which may be present or become present in the system.
  */
-static void __init socfpga_smp_init_cpus(void)
+void __init smp_init_cpus(void)
 {
+	/* void __iomem *scu_base = scu_base_addr();  fixme by czm*/
 	unsigned int i, ncores;
 
+	/* ncores = scu_base ? scu_get_core_count(scu_base) : 1; fixme by czm*/
 	ncores = scu_get_core_count(socfpga_scu_base_addr);
 
 	for (i = 0; i < ncores; i++)
@@ -87,17 +91,29 @@ static void __init socfpga_smp_init_cpus(void)
 	set_smp_cross_call(gic_raise_softirq);
 }
 
-static void __init socfpga_smp_prepare_cpus(unsigned int max_cpus)
+void __init platform_smp_prepare_cpus(unsigned int max_cpus)
 {
-	scu_enable(socfpga_scu_base_addr);
+	scu_enable(scu_base_addr());
+
+	/*
+	 * Write the address of secondary startup into the
+	 * system-wide flags register. The BootMonitor waits
+	 * until it receives a soft interrupt, and then the
+	 * secondary CPU branches to this address.
+	__raw_writel(virt_to_phys(socfpga5xs1_secondary_startup),
+		      __io_address(SOCFPGA5XS1_SMP_FLAG));
+
+	 * fixme by czm if it is necessary above
+	*/
 }
 
+
 /*
  * platform-specific code to shutdown a CPU
  *
  * Called with IRQs disabled
  */
-static void socfpga_cpu_die(unsigned int cpu)
+void platform_cpu_die(unsigned int cpu)
 {
 	/* Flush the L1 data cache. */
 	flush_cache_all();
@@ -111,7 +127,7 @@ static void socfpga_cpu_die(unsigned int cpu)
 	panic("cpu %d unexpectedly exit from shutdown\n", cpu);
 }
 
-struct smp_operations socfpga_smp_ops __initdata = {
+/* struct smp_operations socfpga_smp_ops __initdata = {
 	.smp_init_cpus		= socfpga_smp_init_cpus,
 	.smp_prepare_cpus	= socfpga_smp_prepare_cpus,
 	.smp_secondary_init	= socfpga_secondary_init,
@@ -119,4 +135,4 @@ struct smp_operations socfpga_smp_ops __initdata = {
 #ifdef CONFIG_HOTPLUG_CPU
 	.cpu_die		= socfpga_cpu_die,
 #endif
-};
+}; */
diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index 6788c39..ee4d854 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -363,7 +363,6 @@ static const char *altera_dt_match[] = {
 };
 
 DT_MACHINE_START(SOCFPGA, "Altera SOCFPGA")
-	.smp		= smp_ops(socfpga_smp_ops),
 	.map_io		= socfpga_map_io,
 	.init_irq	= gic_init_irq,
 	.handle_irq     = gic_handle_irq,
-- 
1.7.5.4

