From f55ea3e233268a20b8be39eb13d02d93e985102d Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@opensource.altera.com>
Date: Tue, 11 Aug 2015 14:04:58 -0500
Subject: [PATCH 166/172] FogBugz #316846-1: MSL: Add platform specific code to
 support NAND ECC

This patch adds the platform specific init code for enabling NAND
ECC on Arria10.

Signed-off-by: Roman Bulgakov <roman.bulgakov@globallogic.com>
Signed-off-by: Dinh Nguyen <dinguyen@opensource.altera.com>
[czou:Original patch taken from
https://github.com/altera-opensource/linux-socfpga.git socfpga-4.1]
Signed-off-by: czou <cao.zou@windriver.com>
---
 arch/arm/mach-socfpga/Makefile  |  2 +-
 arch/arm/mach-socfpga/nand.c    | 63 +++++++++++++++++++++++++++++++++++++++++
 arch/arm/mach-socfpga/nand.h    | 28 ++++++++++++++++++
 arch/arm/mach-socfpga/socfpga.c |  2 ++
 4 files changed, 94 insertions(+), 1 deletion(-)
 create mode 100644 arch/arm/mach-socfpga/nand.c
 create mode 100644 arch/arm/mach-socfpga/nand.h

diff --git a/arch/arm/mach-socfpga/Makefile b/arch/arm/mach-socfpga/Makefile
index d43ce88..24bb566 100644
--- a/arch/arm/mach-socfpga/Makefile
+++ b/arch/arm/mach-socfpga/Makefile
@@ -8,4 +8,4 @@ obj-$(CONFIG_HW_PERF_EVENTS) += socfpga_cti.o
 obj-$(CONFIG_FPGADMA)	+= fpga-dma.o
 obj-$(CONFIG_EDAC_ALTERA_OCRAM_ECC) += ocram.o ecc.o
 obj-$(CONFIG_EDAC_ALTERA_L2_ECC) += l2_cache.o
-
+obj-$(CONFIG_EDAC_ALTERA_NAND_ECC) += nand.o
diff --git a/arch/arm/mach-socfpga/nand.c b/arch/arm/mach-socfpga/nand.c
new file mode 100644
index 0000000..ab7ad5a
--- /dev/null
+++ b/arch/arm/mach-socfpga/nand.c
@@ -0,0 +1,63 @@
+/*
+ * Copyright (C) 2015 Altera Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include <linux/of.h>
+
+#include "ecc.h"
+
+#define SOCFPGA_A10_NAND_ECC_INTMASK	BIT(11)
+#define SOCFPGA_A10_NAND_RD_ECC_INTMASK	BIT(13)
+#define SOCFPGA_A10_NAND_WR_ECC_INTMASK	BIT(12)
+
+static int socfpga_init_a10_nand_ecc(const char *compat, u32 intmask)
+{
+	struct device_node *np;
+	int ret;
+
+	np = of_find_compatible_node(NULL, NULL, compat);
+	if (!np) {
+		pr_err("SOCFPGA: Unable to find %s in dtb\n", compat);
+		ret = -ENODEV;
+		goto out;
+	}
+
+	ret = socfpga_init_a10_ecc(np, intmask, 0);
+
+out:
+	of_node_put(np);
+	return ret;
+}
+
+void socfpga_init_nand_ecc(void)
+{
+	if (of_machine_is_compatible("altr,socfpga-arria10")) {
+		if (socfpga_init_a10_nand_ecc("altr,a10-nand-buf-edac",
+					      SOCFPGA_A10_NAND_ECC_INTMASK))
+			return;
+		if (socfpga_init_a10_nand_ecc("altr,a10-nand-rd-edac",
+					      SOCFPGA_A10_NAND_RD_ECC_INTMASK))
+			return;
+		if (socfpga_init_a10_nand_ecc("altr,a10-nand-wr-edac",
+					      SOCFPGA_A10_NAND_WR_ECC_INTMASK))
+			return;
+		goto success;
+	}
+
+	return;
+
+success:
+	pr_alert("SOCFPGA: Success Initializing NAND ECC\n");
+}
diff --git a/arch/arm/mach-socfpga/nand.h b/arch/arm/mach-socfpga/nand.h
new file mode 100644
index 0000000..3ba621f
--- /dev/null
+++ b/arch/arm/mach-socfpga/nand.h
@@ -0,0 +1,28 @@
+/*
+ * Copyright (C) 2015 Altera Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef MACH_SOCFPGA_NAND_H
+#define MACH_SOCFPGA_NAND_H
+
+#ifdef CONFIG_EDAC_ALTERA_NAND_ECC
+void socfpga_init_nand_ecc(void);
+#else
+inline void socfpga_init_nand_ecc(void)
+{
+}
+#endif
+
+#endif /* MACH_SOCFPGA_NAND_H */
diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index 7508664..99f052e 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -33,6 +33,7 @@
 #include "socfpga_cti.h"
 #include "l2_cache.h"
 #include "ocram.h"
+#include "nand.h"
 
 void __iomem *socfpga_scu_base_addr = ((void __iomem *)(SOCFPGA_SCU_VIRT_BASE));
 void __iomem *sys_manager_base_addr;
@@ -233,6 +234,7 @@ static void __init socfpga_cyclone5_init(void)
 	enable_periphs();
 	socfpga_soc_device_init();
 	socfpga_init_ocram_ecc();
+	socfpga_init_nand_ecc();
 }
 
 static const char *altera_dt_match[] = {
-- 
1.9.1

