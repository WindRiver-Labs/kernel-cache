From 57b91f519eda837ef3fe8b510e904388f8486d35 Mon Sep 17 00:00:00 2001
From: Alan Tull <atull@altera.com>
Date: Thu, 31 Jan 2013 15:47:06 -0600
Subject: [PATCH 046/172] FogBugz #98100: designware i2c driver add speed mode
 in devtree

For Designware I2C adapter driver, add "speed-mode" property to
devicetree.

Signed-off-by: Alan Tull <atull@altera.com>
[czou:Original patch taken from
https://github.com/altera-opensource/linux-socfpga.git socfpga-4.1]
Signed-off-by: czou <cao.zou@windriver.com>
---
 Documentation/devicetree/bindings/i2c/i2c-designware.txt |  3 +++
 drivers/i2c/busses/i2c-designware-platdrv.c              | 12 ++++++++++++
 2 files changed, 15 insertions(+)

diff --git a/Documentation/devicetree/bindings/i2c/i2c-designware.txt b/Documentation/devicetree/bindings/i2c/i2c-designware.txt
index fee26dc..8e98e2e 100644
--- a/Documentation/devicetree/bindings/i2c/i2c-designware.txt
+++ b/Documentation/devicetree/bindings/i2c/i2c-designware.txt
@@ -9,6 +9,8 @@ Required properties :
 Recommended properties :
 
  - clock-frequency : desired I2C bus clock frequency in Hz.
+ - speed-mode      : 0 = standard (0 - 100Kb/s)
+                   : 1 = fast (<= 400Kb/s) <== default
 
 Optional properties :
  - i2c-sda-hold-time-ns : should contain the SDA hold time in nanoseconds.
@@ -29,6 +31,7 @@ Example :
 		reg = <0xf0000 0x1000>;
 		interrupts = <11>;
 		clock-frequency = <400000>;
+		speed-mode = <1>;
 	};
 
 	i2c@1120000 {
diff --git a/drivers/i2c/busses/i2c-designware-platdrv.c b/drivers/i2c/busses/i2c-designware-platdrv.c
index 3f7d487..d8a7d2b 100644
--- a/drivers/i2c/busses/i2c-designware-platdrv.c
+++ b/drivers/i2c/busses/i2c-designware-platdrv.c
@@ -156,11 +156,13 @@ static inline void dw_i2c_acpi_unconfigure(struct platform_device *pdev) { }
 static int dw_i2c_probe(struct platform_device *pdev)
 {
 	struct dw_i2c_dev *dev;
+	struct device_node *np = pdev->dev.of_node;
 	struct i2c_adapter *adap;
 	struct resource *mem;
 	struct dw_i2c_platform_data *pdata;
 	int irq, r;
 	u32 clk_freq, ht = 0;
+	int speed, speed_prop, ret;
 
 	irq = platform_get_irq(pdev, 0);
 	if (irq < 0)
@@ -231,6 +233,16 @@ static int dw_i2c_probe(struct platform_device *pdev)
 		dev->master_cfg =  DW_IC_CON_MASTER | DW_IC_CON_SLAVE_DISABLE |
 			DW_IC_CON_RESTART_EN | DW_IC_CON_SPEED_FAST;
 
+	/* Get speed from device tree.  Default to fast speed. */
+	speed = DW_IC_CON_SPEED_FAST;
+	if (np) {
+		ret = of_property_read_u32(np, "speed-mode", &speed_prop);
+		if (!ret && (speed_prop == 0))
+			speed = DW_IC_CON_SPEED_STD;
+	}
+	dev->master_cfg =  DW_IC_CON_MASTER | DW_IC_CON_SLAVE_DISABLE |
+		DW_IC_CON_RESTART_EN | speed;
+
 	dev->clk = devm_clk_get(&pdev->dev, NULL);
 	dev->get_clk_rate_khz = i2c_dw_get_clk_rate_khz;
 	if (IS_ERR(dev->clk))
-- 
1.9.1

