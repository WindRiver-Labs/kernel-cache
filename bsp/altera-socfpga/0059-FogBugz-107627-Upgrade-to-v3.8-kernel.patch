From 0bdb6b78d7bf37b803db5e7efd3cb0f0f6394d0f Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Sun, 17 Mar 2013 18:06:49 -0500
Subject: [PATCH 059/248] FogBugz #107627: Upgrade to v3.8 kernel

- v3.8 no longer uses __devinit, __devexit, or __devinitdata
- All dtbs are now located under arch/arm/boot/dts/
- Add back memory entries that were mistakenly deleted
- Altera 16550 compatible soft UART defines have shifted
- Use writel and readl in USB driver for proper memory barrier protection
- Add back early printk support

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
---
 arch/arm/boot/dts/socfpga_cyclone5.dtsi | 6 ++++++
 arch/arm/boot/dts/socfpga_vt.dts        | 6 ++++++
 arch/arm/mach-socfpga/socfpga.c         | 4 ++--
 drivers/gpio/gpio-altera.c              | 4 ++--
 drivers/gpio/gpio-dw.c                  | 2 +-
 drivers/spi/spi-cadence-qspi.c          | 8 ++++----
 drivers/spi/spi-dw-mmio.c               | 2 +-
 drivers/tty/newhaven_lcd.c              | 4 ++--
 drivers/usb/otg/dwc/apmppc.c            | 6 +++---
 drivers/usb/otg/dwc/cil.c               | 6 +++---
 drivers/usb/otg/dwc/cil.h               | 7 ++++---
 drivers/usb/otg/dwc/hcd.c               | 4 ++--
 drivers/usb/otg/dwc/param.c             | 2 +-
 drivers/usb/otg/dwc/pcd.c               | 6 +++---
 drivers/usb/otg/dwc/platform.c          | 6 +++---
 include/uapi/linux/serial_core.h        | 4 ++--
 16 files changed, 45 insertions(+), 32 deletions(-)

diff --git a/arch/arm/boot/dts/socfpga_cyclone5.dtsi b/arch/arm/boot/dts/socfpga_cyclone5.dtsi
index c7054f5..3082a29 100644
--- a/arch/arm/boot/dts/socfpga_cyclone5.dtsi
+++ b/arch/arm/boot/dts/socfpga_cyclone5.dtsi
@@ -26,6 +26,12 @@
 		bootargs = "console=ttyS0,57600";
 	};
 
+	memory {
+		name = "memory";
+		device_type = "memory";
+		reg = <0x0 0x40000000>; /* 1 GB */
+	};
+
 	aliases {
 		/* this allow the ethaddr uboot environmnet variable contents
 		 * to be added to the gmac1 device tree blob.
diff --git a/arch/arm/boot/dts/socfpga_vt.dts b/arch/arm/boot/dts/socfpga_vt.dts
index 412a82d..f76eebc 100644
--- a/arch/arm/boot/dts/socfpga_vt.dts
+++ b/arch/arm/boot/dts/socfpga_vt.dts
@@ -26,6 +26,12 @@
 		bootargs = "console=ttyS0,57600";
 	};
 
+	memory {
+                name = "memory";
+                device_type = "memory";
+                reg = <0x0 0x40000000>; /* 1 GB */
+        };
+
 	soc {
 		clkmgr@ffd04000 {
 			clocks {
diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index b8e3585..e4c6e1d 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -279,7 +279,7 @@ static void __init socfpga_sysmgr_init(void)
 static void __init socfpga_map_io(void)
 {
 	socfpga_scu_map_io();
-	iotable_init(&uart_io_desc, 1);
+	debug_ll_io_init();
 	early_printk("Early printk initialized\n");
 }
 
@@ -302,7 +302,7 @@ void __init socfpga_sysmgr_init(void)
 	clk_mgr_base_addr = of_iomap(np, 0);
 }
 
-static void __init socfpga_init_irq(void)
+static void __init gic_init_irq(void)
 {
 	irqchip_init();
 	socfpga_sysmgr_init();
diff --git a/drivers/gpio/gpio-altera.c b/drivers/gpio/gpio-altera.c
index 763aa2f..dcb8fb9 100644
--- a/drivers/gpio/gpio-altera.c
+++ b/drivers/gpio/gpio-altera.c
@@ -211,7 +211,7 @@ static struct irq_domain_ops altera_gpio_irq_ops = {
 	.xlate = irq_domain_xlate_twocell,
 };
 
-int __devinit altera_gpio_probe(struct platform_device *pdev)
+int altera_gpio_probe(struct platform_device *pdev)
 {
 	struct device_node *node = pdev->dev.of_node;
 	int id, reg, ret;
@@ -328,7 +328,7 @@ static int altera_gpio_remove(struct platform_device *pdev)
 }
 
 #ifdef CONFIG_OF
-static struct of_device_id altera_gpio_of_match[] __devinitdata = {
+static struct of_device_id altera_gpio_of_match[] = {
 	{ .compatible = "altr,pio-1.0", },
 	{},
 };
diff --git a/drivers/gpio/gpio-dw.c b/drivers/gpio/gpio-dw.c
index 802bd14..20e963c 100644
--- a/drivers/gpio/gpio-dw.c
+++ b/drivers/gpio/gpio-dw.c
@@ -117,7 +117,7 @@ static int dw_gpio_direction_output(struct gpio_chip *gc,
  * driver data structure. It returns 0, if the driver is bound to the GPIO
  * device, or a negative value if there is an error.
  */
-static int __devinit dw_gpio_probe(struct platform_device *pdev)
+static int dw_gpio_probe(struct platform_device *pdev)
 {
 	struct device_node *np = pdev->dev.of_node;
 	struct dw_gpio_instance *chip;
diff --git a/drivers/spi/spi-cadence-qspi.c b/drivers/spi/spi-cadence-qspi.c
index 56fb69b..411f86c 100644
--- a/drivers/spi/spi-cadence-qspi.c
+++ b/drivers/spi/spi-cadence-qspi.c
@@ -301,7 +301,7 @@ static int cadence_qspi_of_get_pdata(struct platform_device *pdev)
 	return 0;
 }
 
-static int __devinit cadence_qspi_probe(struct platform_device *pdev)
+static int cadence_qspi_probe(struct platform_device *pdev)
 {
 	struct spi_master *master;
 	struct struct_cqspi *cadence_qspi;
@@ -455,7 +455,7 @@ err_iomem:
 	return status;
 }
 
-static int __devexit cadence_qspi_remove(struct platform_device *pdev)
+static int cadence_qspi_remove(struct platform_device *pdev)
 {
 	struct spi_master *master = platform_get_drvdata(pdev);
 	struct struct_cqspi *cadence_qspi = spi_master_get_devdata(master);
@@ -522,7 +522,7 @@ static struct dev_pm_ops cadence_qspi__dev_pm_ops =
 #endif
 
 #ifdef CONFIG_OF
-static struct of_device_id cadence_qspi_of_match[] __devinitdata = {
+static struct of_device_id cadence_qspi_of_match[] = {
 	{ .compatible = "cadence,qspi",},
 	{ /* end of table */}
 };
@@ -535,7 +535,7 @@ MODULE_DEVICE_TABLE(of, cadence_qspi_of_match);
 static struct platform_driver cadence_qspi_platform_driver =
 {
 	.probe		= cadence_qspi_probe,
-	.remove		= __devexit_p(cadence_qspi_remove),
+	.remove		= cadence_qspi_remove,
 	.driver = {
 		.name	= CADENCE_QSPI_NAME,
 		.owner	= THIS_MODULE,
diff --git a/drivers/spi/spi-dw-mmio.c b/drivers/spi/spi-dw-mmio.c
index dbc34d9..03d79af 100644
--- a/drivers/spi/spi-dw-mmio.c
+++ b/drivers/spi/spi-dw-mmio.c
@@ -122,7 +122,7 @@ static int dw_spi_mmio_remove(struct platform_device *pdev)
 }
 
 #ifdef CONFIG_OF
-static struct of_device_id dw_spi_mmio_of_match[] __devinitdata = {
+static struct of_device_id dw_spi_mmio_of_match[] = {
 	{ .compatible = "snps,dw-spi-mmio", },
 	{ /* end of table */}
 };
diff --git a/drivers/tty/newhaven_lcd.c b/drivers/tty/newhaven_lcd.c
index b7dbc4f..ebc5427 100644
--- a/drivers/tty/newhaven_lcd.c
+++ b/drivers/tty/newhaven_lcd.c
@@ -379,7 +379,7 @@ static const struct tty_operations lcd_ops = {
 	.write_room      = lcd_write_room,
 };
 
-static int __devinit lcd_probe(struct i2c_client *client,
+static int lcd_probe(struct i2c_client *client,
 			const struct i2c_device_id *i2c_id)
 {
 	struct device_node *np = client->dev.of_node;
@@ -496,7 +496,7 @@ static struct i2c_driver lcd_i2c_driver = {
 		.of_match_table = lcd_of_match,
 	},
 	.probe = lcd_probe,
-	.remove = __devexit_p(lcd_remove),
+	.remove = lcd_remove,
 	.id_table = lcd_id,
 };
 
diff --git a/drivers/usb/otg/dwc/apmppc.c b/drivers/usb/otg/dwc/apmppc.c
index e937320..352adad 100644
--- a/drivers/usb/otg/dwc/apmppc.c
+++ b/drivers/usb/otg/dwc/apmppc.c
@@ -95,7 +95,7 @@ static irqreturn_t dwc_otg_externalchgpump_irq(int _irq, void *dev)
 	return IRQ_HANDLED;
 }
 
-static int __devexit dwc_otg_driver_remove(struct platform_device *ofdev)
+static int dwc_otg_driver_remove(struct platform_device *ofdev)
 {
 	struct device *dev = &ofdev->dev;
 	struct dwc_otg_device *dwc_dev = dev_get_drvdata(dev);
@@ -135,7 +135,7 @@ static int __devexit dwc_otg_driver_remove(struct platform_device *ofdev)
 	return 0;
 }
 
-static int __devinit dwc_otg_driver_probe(struct platform_device *ofdev)
+static int dwc_otg_driver_probe(struct platform_device *ofdev)
 {
 	int retval;
 	struct dwc_otg_device *dwc_dev;
@@ -328,7 +328,7 @@ MODULE_DEVICE_TABLE(of, dwc_otg_match);
 
 static struct platform_driver dwc_otg_driver = {
 	.probe = dwc_otg_driver_probe,
-	.remove = __devexit_p(dwc_otg_driver_remove),
+	.remove = dwc_otg_driver_remove,
 	.driver = {
 		.name = "dwc_otg",
 		.owner = THIS_MODULE,
diff --git a/drivers/usb/otg/dwc/cil.c b/drivers/usb/otg/dwc/cil.c
index f8458d4..187ce15 100644
--- a/drivers/usb/otg/dwc/cil.c
+++ b/drivers/usb/otg/dwc/cil.c
@@ -660,7 +660,7 @@ void dwc_otg_flush_rx_fifo(struct core_if *core_if)
  * Register HCD callbacks.
  * The callbacks are used to start and stop the HCD for interrupt processing.
  */
-void __devinit dwc_otg_cil_register_hcd_callbacks(struct core_if *c_if,
+void dwc_otg_cil_register_hcd_callbacks(struct core_if *c_if,
 						  struct cil_callbacks *cb,
 						  void *p)
 {
@@ -672,7 +672,7 @@ void __devinit dwc_otg_cil_register_hcd_callbacks(struct core_if *c_if,
  * Register PCD callbacks.
  * The callbacks are used to start and stop the PCD for interrupt processing.
  */
-void __devinit dwc_otg_cil_register_pcd_callbacks(struct core_if *c_if,
+void dwc_otg_cil_register_pcd_callbacks(struct core_if *c_if,
 						  struct cil_callbacks *cb,
 						  void *p)
 {
@@ -690,7 +690,7 @@ void __devinit dwc_otg_cil_register_pcd_callbacks(struct core_if *c_if,
  * The params argument holds the parameters that specify how the core should be
  * configured.
  */
-struct core_if __devinit *dwc_otg_cil_init(const __iomem u32 * base,
+struct core_if *dwc_otg_cil_init(const __iomem u32 *base,
 					   struct core_params *params)
 {
 	struct core_if *core_if;
diff --git a/drivers/usb/otg/dwc/cil.h b/drivers/usb/otg/dwc/cil.h
index 6abaa86..e1915b0 100644
--- a/drivers/usb/otg/dwc/cil.h
+++ b/drivers/usb/otg/dwc/cil.h
@@ -71,7 +71,8 @@ static inline void dwc_reg_write(ulong reg, u32 offset, const u32 value)
 static inline
 	void dwc_reg_modify(ulong reg, u32 offset, const u32 _clear_mask, const u32 _set_mask)
 {
-	writel( (readl((unsigned __iomem *)(reg + offset)) & ~_clear_mask) | _set_mask, reg + offset);
+	writel((readl((unsigned __iomem *)(reg + offset)) & ~_clear_mask) | _set_mask,
+		(unsigned __iomem *)(reg + offset));
 };
 
 static inline void dwc_write_fifo32(ulong reg, const u32 _value)
@@ -1037,7 +1038,7 @@ extern int __init dwc_otg_pcd_init(struct device *dev);
 #endif
 
 extern void dwc_otg_cil_remove(struct core_if *core_if);
-extern struct core_if __devinit *dwc_otg_cil_init(const __iomem u32 * base,
+extern struct core_if *dwc_otg_cil_init(const __iomem u32 *base,
 						  struct core_params *params);
 
 static inline void dwc_set_feature(struct core_if *core_if)
@@ -1051,5 +1052,5 @@ static inline int dwc_has_feature(struct core_if *core_if,
 	return core_if->features & feature;
 }
 extern struct core_params dwc_otg_module_params;
-extern int __devinit check_parameters(struct core_if *core_if);
+extern int check_parameters(struct core_if *core_if);
 #endif
diff --git a/drivers/usb/otg/dwc/hcd.c b/drivers/usb/otg/dwc/hcd.c
index 239c0a4..58c8989 100644
--- a/drivers/usb/otg/dwc/hcd.c
+++ b/drivers/usb/otg/dwc/hcd.c
@@ -1249,7 +1249,7 @@ static void dwc_otg_hcd_free(struct usb_hcd *hcd)
  * USB bus with the core and calls the hc_driver->start() function. It returns
  * a negative error on failure.
  */
-int __devinit dwc_otg_hcd_init(struct device *_dev,
+int dwc_otg_hcd_init(struct device *_dev,
 			       struct dwc_otg_device *dwc_otg_device)
 {
 	struct usb_hcd *hcd;
@@ -1394,7 +1394,7 @@ error1:
  * Removes the HCD.
  * Frees memory and resources associated with the HCD and deregisters the bus.
  */
-void __devexit dwc_otg_hcd_remove(struct device *_dev)
+void dwc_otg_hcd_remove(struct device *_dev)
 {
 	struct dwc_otg_device *otg_dev = dev_get_drvdata(_dev);
 	struct dwc_hcd *dwc_hcd = otg_dev->hcd;
diff --git a/drivers/usb/otg/dwc/param.c b/drivers/usb/otg/dwc/param.c
index 9dd2097..ddd0c33 100644
--- a/drivers/usb/otg/dwc/param.c
+++ b/drivers/usb/otg/dwc/param.c
@@ -104,7 +104,7 @@ static int set_valid_tx_fifo_sizes(struct core_if *core_if)
  * This function is called during module intialization to verify that
  * the module parameters are in a valid state.
  */
-int __devinit check_parameters(struct core_if *core_if)
+int check_parameters(struct core_if *core_if)
 {
 	struct core_params *dwc_otg_module_params = core_if->core_params;
 	/* Default values */
diff --git a/drivers/usb/otg/dwc/pcd.c b/drivers/usb/otg/dwc/pcd.c
index aed58f7..345617f 100644
--- a/drivers/usb/otg/dwc/pcd.c
+++ b/drivers/usb/otg/dwc/pcd.c
@@ -1383,7 +1383,7 @@ static struct tasklet_struct start_xfer_tasklet = {
  * This function initialized the pcd Dp structures to there default
  * state.
  */
-static void __devinit dwc_otg_pcd_reinit(struct dwc_pcd *pcd)
+static void dwc_otg_pcd_reinit(struct dwc_pcd *pcd)
 {
 	static const char *names[] = {
 		"ep0", "ep1in", "ep2in", "ep3in", "ep4in", "ep5in",
@@ -1545,7 +1545,7 @@ static void dwc_otg_pcd_gadget_release(struct device *dev)
  * Allocates the buffers for the setup packets when the PCD portion of the
  * driver is first initialized.
  */
-static int __devinit init_pkt_buffs(struct device *dev, struct dwc_pcd *pcd)
+static int init_pkt_buffs(struct device *dev, struct dwc_pcd *pcd)
 {
 	if (pcd->otg_dev->core_if->dma_enable) {
 		pcd->dwc_pool = dma_pool_create("dwc_otg_pcd", dev,
@@ -1584,7 +1584,7 @@ error:
 /**
  * This function initializes the PCD portion of the driver.
  */
-int __devinit dwc_otg_pcd_init(struct device *dev)
+int dwc_otg_pcd_init(struct device *dev)
 {
 	static const char pcd_name[] = "dwc_otg_pcd";
 	struct dwc_pcd *pcd;
diff --git a/drivers/usb/otg/dwc/platform.c b/drivers/usb/otg/dwc/platform.c
index 71e2fb5..3b218ba 100644
--- a/drivers/usb/otg/dwc/platform.c
+++ b/drivers/usb/otg/dwc/platform.c
@@ -97,7 +97,7 @@ static irqreturn_t dwc_otg_externalchgpump_irq(int _irq, void *dev)
 	return IRQ_HANDLED;
 }
 
-static int __devexit dwc_otg_driver_remove(struct platform_device *ofdev)
+static int dwc_otg_driver_remove(struct platform_device *ofdev)
 {
 	struct device *dev = &ofdev->dev;
 	struct dwc_otg_device *dwc_dev = dev_get_drvdata(dev);
@@ -142,7 +142,7 @@ static int __devexit dwc_otg_driver_remove(struct platform_device *ofdev)
 
 static u64 dwc_otg_dma_mask;
 
-static int __devinit dwc_otg_driver_probe(struct platform_device *ofdev)
+static int dwc_otg_driver_probe(struct platform_device *ofdev)
 {
 	int retval;
 	struct dwc_otg_device *dwc_dev;
@@ -395,7 +395,7 @@ MODULE_DEVICE_TABLE(of, dwc_otg_match);
 
 static struct platform_driver dwc_otg_driver = {
 	.probe = dwc_otg_driver_probe,
-	.remove = __devexit_p(dwc_otg_driver_remove),
+	.remove = dwc_otg_driver_remove,
 	.driver = {
 			.name = "dwc_otg",
 			.owner = THIS_MODULE,
diff --git a/include/uapi/linux/serial_core.h b/include/uapi/linux/serial_core.h
index b47dba2..785bc90 100644
--- a/include/uapi/linux/serial_core.h
+++ b/include/uapi/linux/serial_core.h
@@ -53,8 +53,8 @@
 #define PORT_BRCM_TRUMANAGE	25
 #define PORT_ALTR_16550_F32 26	/* Altera 16550 UART with 32 FIFOs */
 #define PORT_ALTR_16550_F64 27	/* Altera 16550 UART with 64 FIFOs */
-#define PORT_ALTR_16550_F128 28 /* Altera 16550 UART with 128 FIFOs */
-#define PORT_MAX_8250	28	/* max port ID */
+#define PORT_ALTR_16550_F128 28	/* Altera 16550 UART with 128 FIFOs */
+#define PORT_MAX_8250	29	/* max port ID */
 
 /*
  * ARM specific type numbers.  These are not currently guaranteed
-- 
1.9.1

