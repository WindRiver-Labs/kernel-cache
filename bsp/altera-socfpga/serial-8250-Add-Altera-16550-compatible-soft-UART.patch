From 450686d48f7268483f6a94c5a15952d8ab06729f Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Fri, 29 Mar 2013 20:55:13 +0800
Subject: [PATCH 179/254] serial: 8250: Add Altera 16550 compatible soft UART

Upstream: git://git.rocketboards.org/linux-socfpga.git

This is to add new Altera 16550 compatible soft UART support to
the existing 8250/16550 framework.

Integrate to v3.7 branch from v3.6 branch.

Signed-off-by: Ley Foon Tan <lftan@altera.com>
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/tty/serial/8250/8250.c |   21 +++++++++++++++++++++
 drivers/tty/serial/of_serial.c |    6 ++++++
 include/linux/serial_core.h    |    7 +++++--
 3 files changed, 32 insertions(+), 2 deletions(-)

diff --git a/drivers/tty/serial/8250/8250.c b/drivers/tty/serial/8250/8250.c
index dff6214..7085879 100644
--- a/drivers/tty/serial/8250/8250.c
+++ b/drivers/tty/serial/8250/8250.c
@@ -282,6 +282,27 @@ static const struct serial8250_config uart_config[] = {
 		.fcr		= UART_FCR_ENABLE_FIFO | UART_FCR_R_TRIG_10,
 		.flags		= UART_CAP_FIFO | UART_CAP_AFE | UART_CAP_EFR,
 	},
+	[PORT_ALTR_16550_F32] = {
+		.name			= "Altera 16550 FIFO32",
+		.fifo_size		= 32,
+		.tx_loadsz		= 32,
+		.fcr			= UART_FCR_ENABLE_FIFO | UART_FCR_R_TRIG_10,
+		.flags			= UART_CAP_FIFO | UART_CAP_AFE,
+	},
+	[PORT_ALTR_16550_F64] = {
+		.name			= "Altera 16550 FIFO64",
+		.fifo_size		= 64,
+		.tx_loadsz		= 64,
+		.fcr			= UART_FCR_ENABLE_FIFO | UART_FCR_R_TRIG_10,
+		.flags			= UART_CAP_FIFO | UART_CAP_AFE,
+	},
+	[PORT_ALTR_16550_F128] = {
+		.name			= "Altera 16550 FIFO128",
+		.fifo_size		= 128,
+		.tx_loadsz		= 128,
+		.fcr			= UART_FCR_ENABLE_FIFO | UART_FCR_R_TRIG_10,
+		.flags			= UART_CAP_FIFO | UART_CAP_AFE,
+	},
 };
 
 /* Uart divisor latch read */
diff --git a/drivers/tty/serial/of_serial.c b/drivers/tty/serial/of_serial.c
index 5410c06..6cc4d16 100644
--- a/drivers/tty/serial/of_serial.c
+++ b/drivers/tty/serial/of_serial.c
@@ -208,6 +208,12 @@ static struct of_device_id __devinitdata of_platform_serial_table[] = {
 	{ .compatible = "ns16750",  .data = (void *)PORT_16750, },
 	{ .compatible = "ns16850",  .data = (void *)PORT_16850, },
 	{ .compatible = "nvidia,tegra20-uart", .data = (void *)PORT_TEGRA, },
+	{ .compatible = "altr,16550-FIFO32",
+		.data = (void *)PORT_ALTR_16550_F32, },
+	{ .compatible = "altr,16550-FIFO64",
+		.data = (void *)PORT_ALTR_16550_F64, },
+	{ .compatible = "altr,16550-FIFO128",
+		.data = (void *)PORT_ALTR_16550_F128, },
 #ifdef CONFIG_SERIAL_OF_PLATFORM_NWPSERIAL
 	{ .compatible = "ibm,qpace-nwp-serial",
 		.data = (void *)PORT_NWPSERIAL, },
diff --git a/include/linux/serial_core.h b/include/linux/serial_core.h
index 3b7e2b6..9edd409 100644
--- a/include/linux/serial_core.h
+++ b/include/linux/serial_core.h
@@ -47,8 +47,11 @@
 #define PORT_U6_16550A	19	/* ST-Ericsson U6xxx internal UART */
 #define PORT_TEGRA	20	/* NVIDIA Tegra internal UART */
 #define PORT_XR17D15X	21	/* Exar XR17D15x UART */
-#define PORT_MAX_8250	21	/* max port ID */
-
+#define PORT_ALTR_16550_F32 24	/* Altera 16550 UART with 32 FIFOs */
+#define PORT_ALTR_16550_F64 25	/* Altera 16550 UART with 64 FIFOs */
+#define PORT_ALTR_16550_F128 26	/* Altera 16550 UART with 128 FIFOs */
+#define PORT_MAX_8250	26	/* max port ID */
+ 
 /*
  * ARM specific type numbers.  These are not currently guaranteed
  * to be implemented, and will change in the future.  These are
-- 
1.7.5.4

