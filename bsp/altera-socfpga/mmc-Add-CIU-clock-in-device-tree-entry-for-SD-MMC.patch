From 822d916c212a89333c7a1467006b42137a09186c Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 3 Jun 2013 14:01:36 +0800
Subject: [PATCH 241/254] mmc: Add CIU clock in device tree entry for SD/MMC

Upstream: git://git.rocketboards.org/linux-socfpga.git

This patch aligns the SD/MMC driver with the community version. We no
longer need to add "bus-hz" in the device tree entry and gets it correctly
from the ciu clock device tree entry.

Also adds dw_mmc-socfpga.c for platform specific functions such as
getting the CIU divider, setting for pwr-en, and USE_HOLD_REG setting.

Signed-off-by: Dinh Nguyen <dinguyen@altera.com>

v5:
- Fix up indentation/spacing
- Remove clock phase shift for socfpga_vt.dts

v4:
- Move setting of drvsel and smplsel to a one-time called function.
- Gate the SDMMC clock before setting drvsel and smplsel
- Remove set_ios functionality

v3:
- Add "altr,dw-mshc-ciu-div" for CIU clock divider value
- Add "altr,dw-mshc-sdr-timing" for drvsel and smplsel values for system
manager control register
- Sets the drvsel and smplsel bits in the system manager SDMMC group
- Add documentation for altr,dw-mshc device tree bindings
- Split out SOC and board specific bindings

v2:
- Read sysmgr sdmmc_ctrl group, if value > 0, use_hold_reg gets set
- Removed "bus-hz" from socfpga.dtsi
- Fixed divider of 4 for CIU clock
- Introduce global variable socfpga_sdmmc_use_hold_reg to use because its
more efficient than trying to check for use_hold_reg for every prepare_command.
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../devicetree/bindings/mmc/socfpga-dw-mshc.txt    |   59 ++++++++
 arch/arm/boot/dts/socfpga.dtsi                     |  155 ++++++++++----------
 arch/arm/boot/dts/socfpga_cyclone5.dts             |   13 ++
 arch/arm/boot/dts/socfpga_vt.dts                   |    9 +
 arch/arm/configs/socfpga_defconfig                 |    1 +
 drivers/mmc/host/Kconfig                           |    8 +
 drivers/mmc/host/Makefile                          |    1 +
 drivers/mmc/host/dw_mmc-socfpga.c                  |  141 ++++++++++++++++++
 drivers/mmc/host/dw_mmc.c                          |   29 +----
 include/linux/mmc/dw_mmc.h                         |    7 -
 10 files changed, 309 insertions(+), 114 deletions(-)
 create mode 100644 Documentation/devicetree/bindings/mmc/socfpga-dw-mshc.txt
 create mode 100644 drivers/mmc/host/dw_mmc-socfpga.c

diff --git a/Documentation/devicetree/bindings/mmc/socfpga-dw-mshc.txt b/Documentation/devicetree/bindings/mmc/socfpga-dw-mshc.txt
new file mode 100644
index 0000000..f4fda57
--- /dev/null
+++ b/Documentation/devicetree/bindings/mmc/socfpga-dw-mshc.txt
@@ -0,0 +1,59 @@
+* Altera SOCFPGA specific extensions to the Synopsis Designware Mobile
+  Storage Host Controller
+
+Required Properties:
+
+* compatible: should be
+	- "altr,socfpga-dw-mshc": for controllers with Altera SOCFPGA
+	  specific extentions.
+
+* altr,dw-mshc-ciu-div: Specifies the divider value for the card interface
+  unit (ciu) clock. For Altera's SOCFPGA, the divider value is fixed at 4.
+
+* altr,dw-mshc-sdr-timing: Specifies the value of CIU clock phase shift value
+  in transmit mode and CIU clock phase shift value in receive mode for single
+  data rate mode operation. Refer notes below for the order of the cells and the
+  valid values.
+
+  Notes for the sdr-timing values:
+
+    The order of the cells should be
+      - First Cell: CIU clock phase shift value for RX mode, smplsel bits in
+	the system manager SDMMC control group.
+      - Second Cell: CIU clock phase shift value for TX mode, drvsel bits in
+	the system manager SDMMC control group.
+
+    Valid values for SDR CIU clock timing for SOCFPGA:
+      - valid value for tx phase shift and rx phase shift is 0 to 7.
+
+Required properties for a slot:
+
+* bus-width: Data width for card slot. 4-bit or 8-bit data.
+
+Example:
+
+  The MSHC controller node can be split into two portions, SoC specific and
+  board specific portions as listed below.
+
+	dwmmc0@ff704000 {
+		compatible = "altr,socfpga-dw-mshc";
+		reg = <0xff704000 0x1000>;
+		interrupts = <0 139 4>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+
+	dwmmc0@ff704000 {
+		num-slots = <1>;
+		supports-highspeed;
+		broken-cd;
+		fifo-depth = <0x400>;
+		altr,dw-mshc-ciu-div = <4>;
+      		altr,dw-mshc-sdr-timing = <0 3>;
+
+		slot@0 {
+			reg = <0>;
+			bus-width = <4>;
+		};
+	};
+
diff --git a/arch/arm/boot/dts/socfpga.dtsi b/arch/arm/boot/dts/socfpga.dtsi
index ce72de0..6c6429c 100644
--- a/arch/arm/boot/dts/socfpga.dtsi
+++ b/arch/arm/boot/dts/socfpga.dtsi
@@ -80,7 +80,6 @@
 			level_trigger = <0>;
 		};
 
-
 		amba {
 			compatible = "arm,amba-bus";
 			#address-cells = <1>;
@@ -457,10 +456,10 @@
 		};
 
 		dcan1: d_can@ffc10000 {
-                        compatible = "bosch,d_can";
-                        reg = <0xffc10000 0x1000>;
-                        interrupts = <0 135 4>;
-                };
+			compatible = "bosch,d_can";
+			reg = <0xffc10000 0x1000>;
+			interrupts = <0 135 4>;
+		};
 
 		gmac0: ethernet@ff700000 {
 			compatible = "altr,socfpga-stmmac", "snps,dwmac-3.70a", "snps,dwmac";
@@ -522,52 +521,52 @@
 		};
 
 		hps_0_fpgamgr: fpgamgr@0xff706000 {
-                        compatible = "altr,fpga-mgr-1.0", "altr,fpga-mgr";
-                        transport = "mmio";
-                        reg = <0xFF706000 0x1000
-                               0xFFB90000 0x1000>;
-                        interrupts = <0 175 4>;
-                };
+			compatible = "altr,fpga-mgr-1.0", "altr,fpga-mgr";
+			transport = "mmio";
+			reg = <0xFF706000 0x1000
+					0xFFB90000 0x1000>;
+ 			interrupts = <0 175 4>;
+		};
 
 		i2c0: i2c@ffc04000 {
-                        #address-cells = <1>;
-                        #size-cells = <0>;
-                        compatible = "snps,designware-i2c";
-                        reg = <0xffc04000 0x1000>;
-                        interrupts = <0 158 4>;
-                        emptyfifo_hold_master = <1>;
-                        clocks = <&per_base_clk>;
-                };
-
-                i2c1: i2c@ffc05000 {
-                        #address-cells = <1>;
-                        #size-cells = <0>;
-                        compatible = "snps,designware-i2c";
-                        reg = <0xffc05000 0x1000>;
-                        interrupts = <0 159 4>;
-                        emptyfifo_hold_master = <1>;
-                        clocks = <&per_base_clk>;
-                };
-
-                i2c2: i2c@ffc06000 {
-                        #address-cells = <1>;
-                        #size-cells = <0>;
-                        compatible = "snps,designware-i2c";
-                        reg = <0xffc06000 0x1000>;
-                        interrupts = <0 160 4>;
-                        emptyfifo_hold_master = <1>;
-                        clocks = <&per_base_clk>;
-                };
-
-                i2c3: i2c@ffc07000 {
-                        #address-cells = <1>;
-                        #size-cells = <0>;
-                        compatible = "snps,designware-i2c";
-                        reg = <0xffc07000 0x1000>;
-                        interrupts = <0 161 4>;
-                        emptyfifo_hold_master = <1>;
-                        clocks = <&per_base_clk>;
-                };
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "snps,designware-i2c";
+			reg = <0xffc04000 0x1000>;
+			interrupts = <0 158 4>;
+			emptyfifo_hold_master = <1>;
+			clocks = <&per_base_clk>;
+		};
+
+		i2c1: i2c@ffc05000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "snps,designware-i2c";
+			reg = <0xffc05000 0x1000>;
+			interrupts = <0 159 4>;
+			emptyfifo_hold_master = <1>;
+			clocks = <&per_base_clk>;
+		};
+
+		i2c2: i2c@ffc06000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "snps,designware-i2c";
+			reg = <0xffc06000 0x1000>;
+			interrupts = <0 160 4>;
+			emptyfifo_hold_master = <1>;
+  			clocks = <&per_base_clk>;
+		};
+
+		i2c3: i2c@ffc07000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "snps,designware-i2c";
+			reg = <0xffc07000 0x1000>;
+			interrupts = <0 161 4>;
+			emptyfifo_hold_master = <1>;
+			clocks = <&per_base_clk>;
+		};
 
 		L2: l2-cache@fffef000 {
 			compatible = "arm,pl310-cache";
@@ -580,20 +579,14 @@
 		};
 
 		mmc: dwmmc0@ff704000 {
-			compatible = "snps,dw-mshc";
+			compatible = "altr,socfpga-dw-mshc";
 			reg = <0xff704000 0x1000>;
 			interrupts = <0 139 4>;
-			bus-hz = <12500000>; /*12.5 MHz*/
+			fifo-depth = <0x400>;
 			#address-cells = <1>;
 			#size-cells = <0>;
-			num-slots = <1>;
-			supports-highspeed;
-			broken-cd;
-			fifo-depth = <0x400>;
-			slot@0 {
-				reg = <0>;
-				bus-width = <4>;
-			};
+			clocks = <&l4_mp_clk>, <&sdmmc_clk>;
+			clock-names = "biu", "ciu";
 		};
 
 		nand: nand@ff900000 {
@@ -704,31 +697,31 @@
 		};
 
 		usb0: usb@ffb00000 {
-				compatible = "snps,dwc-otg";
-				reg = <0xffb00000 0xffff>;
-				interrupts = <0 125 4>;
-				dma-mask = <0xffffffff>;
-				host-rx-fifo-size = <512>;
-				dev-rx-fifo-size = <512>;
-				dev-nperio-tx-fifo-size = <4096>;
-				dev-perio-tx-fifo-size = <512 512 512 512 512 512
-					512 512 512 512 512 512 512 512 512>;
-				dev-tx-fifo-size = <512 512 512 512 512 512
-					512 512 512 512 512 512 512 512 512>;
+			compatible = "snps,dwc-otg";
+			reg = <0xffb00000 0xffff>;
+			interrupts = <0 125 4>;
+			dma-mask = <0xffffffff>;
+			host-rx-fifo-size = <512>;
+			dev-rx-fifo-size = <512>;
+			dev-nperio-tx-fifo-size = <4096>;
+			dev-perio-tx-fifo-size = <512 512 512 512 512 512
+				512 512 512 512 512 512 512 512 512>;
+			dev-tx-fifo-size = <512 512 512 512 512 512
+				512 512 512 512 512 512 512 512 512>;
 		};
 
 		usb1: usb@ffb40000 {
-				compatible = "snps,dwc-otg";
-				reg = <0xffb40000 0xffff>;
-				interrupts = <0 128 4>;
-				dma-mask = <0xffffffff>;
-				host-rx-fifo-size = <512>;
-				dev-rx-fifo-size = <512>;
-				dev-nperio-tx-fifo-size = <4096>;
-				dev-perio-tx-fifo-size = <512 512 512 512 512 512
-					512 512 512 512 512 512 512 512 512>;
-				dev-tx-fifo-size = <512 512 512 512 512 512
-					512 512 512 512 512 512 512 512 512>;
+			compatible = "snps,dwc-otg";
+			reg = <0xffb40000 0xffff>;
+			interrupts = <0 128 4>;
+			dma-mask = <0xffffffff>;
+			host-rx-fifo-size = <512>;
+			dev-rx-fifo-size = <512>;
+			dev-nperio-tx-fifo-size = <4096>;
+			dev-perio-tx-fifo-size = <512 512 512 512 512 512
+				512 512 512 512 512 512 512 512 512>;
+			dev-tx-fifo-size = <512 512 512 512 512 512
+				512 512 512 512 512 512 512 512 512>;
 		};
 	};
 };
diff --git a/arch/arm/boot/dts/socfpga_cyclone5.dts b/arch/arm/boot/dts/socfpga_cyclone5.dts
index f412af1..73cf8d4 100644
--- a/arch/arm/boot/dts/socfpga_cyclone5.dts
+++ b/arch/arm/boot/dts/socfpga_cyclone5.dts
@@ -56,6 +56,19 @@
 			status = "disabled";
 		};
 
+		dwmmc0@ff704000 {
+			num-slots = <1>;
+			supports-highspeed;
+			broken-cd;
+			altr,dw-mshc-ciu-div = <4>;
+			altr,dw-mshc-sdr-timing = <0 3>;
+
+			slot@0 {
+				reg = <0>;
+				bus-width = <4>;
+			};
+		};
+
 		ethernet@ff700000 {
 			status = "disabled";
 		};
diff --git a/arch/arm/boot/dts/socfpga_vt.dts b/arch/arm/boot/dts/socfpga_vt.dts
index 5166fae..78bb023 100644
--- a/arch/arm/boot/dts/socfpga_vt.dts
+++ b/arch/arm/boot/dts/socfpga_vt.dts
@@ -44,7 +44,16 @@
 		};
 
 		dwmmc0@ff704000 {
+			num-slots = <1>;
+			supports-highspeed;
+			broken-cd;
+			altr,dw-mshc-ciu-div = <4>;
 			pwr-en = <1>;
+
+			slot@0 {
+				reg = <0>;
+				bus-width = <4>;
+			};
 		};
 
 		ethernet@ff700000 {
diff --git a/arch/arm/configs/socfpga_defconfig b/arch/arm/configs/socfpga_defconfig
index 071ab56..3f3975a 100644
--- a/arch/arm/configs/socfpga_defconfig
+++ b/arch/arm/configs/socfpga_defconfig
@@ -79,6 +79,7 @@ CONFIG_DWC_SLAVE=y
 CONFIG_MMC=y
 CONFIG_MMC_DW=y
 CONFIG_MMC_DW_IDMAC=y
+CONFIG_MMC_DW_SOCFPGA=y
 CONFIG_SPI=y
 CONFIG_SPI_CADENCE_QSPI=y
 CONFIG_SPI_DESIGNWARE=y
diff --git a/drivers/mmc/host/Kconfig b/drivers/mmc/host/Kconfig
index 9f99a58..31c1740 100644
--- a/drivers/mmc/host/Kconfig
+++ b/drivers/mmc/host/Kconfig
@@ -537,6 +537,14 @@ config MMC_DW_PLTFM
 
 	  If unsure, say Y.
 
+config MMC_DW_SOCFPGA
+	tristate "SOCFPGA specific extensions for Synopsys DW Memory Card Interface"
+	depends on MMC_DW
+	select MMC_DW_PLTFM
+	help
+	  This selects support for Altera SoCFPGA specific extensions to the
+	  Synopsys DesignWare Memory Card Interface driver.
+
 config MMC_DW_PCI
 	tristate "Synopsys Designware MCI support on PCI bus"
 	depends on MMC_DW && PCI
diff --git a/drivers/mmc/host/Makefile b/drivers/mmc/host/Makefile
index 3e7e26d..592b7f6 100644
--- a/drivers/mmc/host/Makefile
+++ b/drivers/mmc/host/Makefile
@@ -39,6 +39,7 @@ obj-$(CONFIG_MMC_CB710)		+= cb710-mmc.o
 obj-$(CONFIG_MMC_VIA_SDMMC)	+= via-sdmmc.o
 obj-$(CONFIG_SDH_BFIN)		+= bfin_sdh.o
 obj-$(CONFIG_MMC_DW)		+= dw_mmc.o
+obj-$(CONFIG_MMC_DW_SOCFPGA)	+= dw_mmc-socfpga.o
 obj-$(CONFIG_MMC_DW_PLTFM)	+= dw_mmc-pltfm.o
 obj-$(CONFIG_MMC_DW_PCI)	+= dw_mmc-pci.o
 obj-$(CONFIG_MMC_SH_MMCIF)	+= sh_mmcif.o
diff --git a/drivers/mmc/host/dw_mmc-socfpga.c b/drivers/mmc/host/dw_mmc-socfpga.c
new file mode 100644
index 0000000..7eb3163
--- /dev/null
+++ b/drivers/mmc/host/dw_mmc-socfpga.c
@@ -0,0 +1,141 @@
+/*
+ * Altera SoCFPGA Specific Extensions for Synopsys DW Multimedia Card Interface driver
+ *
+ *  Copyright (C) 2012, Samsung Electronics Co., Ltd.
+ *  Copyright (C) 2013 Altera Corporation
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * Taken from dw_mmc_exynos.c
+ */
+#include <linux/clk.h>
+#include <linux/mmc/host.h>
+#include <linux/mmc/dw_mmc.h>
+#include <linux/module.h>
+#include <linux/of.h>
+#include <linux/platform_device.h>
+
+#include "dw_mmc.h"
+#include "dw_mmc-pltfm.h"
+
+#define SYSMGR_SDMMCGRP_CTRL_OFFSET		0x108
+#define DRV_CLK_PHASE_SHIFT_SEL_MASK	0x7
+#define SYSMGR_SDMMC_CTRL_SET(smplsel, drvsel)		\
+	((((drvsel) << 0) & 0x7) | (((smplsel) << 3) & 0x38))
+
+extern void __iomem *sys_manager_base_addr;
+
+/* SOCFPGA implementation specific driver private data */
+struct dw_mci_socfpga_priv_data {
+	u8	ciu_div;
+	u32	hs_timing;
+};
+
+static int dw_mci_socfpga_priv_init(struct dw_mci *host)
+{
+	struct dw_mci_socfpga_priv_data *priv;
+	struct device *dev = host->dev;
+	int pwr_en;
+
+	priv = devm_kzalloc(host->dev, sizeof(*priv), GFP_KERNEL);
+	if (!priv) {
+		dev_err(host->dev, "mem alloc failed for private data\n");
+		return -ENOMEM;
+	}
+
+	host->priv = priv;
+
+	if (of_property_read_u32(dev->of_node, "pwr-en", &pwr_en)) {
+		dev_info(dev, "couldn't determine pwr-en, assuming pwr-en = 0\n");
+		pwr_en = 0;
+	}
+
+	/* Set PWREN bit */
+	mci_writel(host, PWREN, pwr_en);
+
+	return 0;
+}
+
+static int dw_mci_socfpga_setup_clock(struct dw_mci *host)
+{
+	struct dw_mci_socfpga_priv_data *priv = host->priv;
+
+	clk_disable(host->ciu_clk);
+	writel(priv->hs_timing, sys_manager_base_addr +
+		SYSMGR_SDMMCGRP_CTRL_OFFSET);
+	clk_enable(host->ciu_clk);
+
+	host->bus_hz /= priv->ciu_div;
+	return 0;
+}
+
+static void dw_mci_socfpga_prepare_command(struct dw_mci *host, u32 *cmdr)
+{
+	struct dw_mci_socfpga_priv_data *priv = host->priv;
+
+	if (priv->hs_timing & DRV_CLK_PHASE_SHIFT_SEL_MASK)
+		*cmdr |= SDMMC_CMD_USE_HOLD_REG;
+}
+
+static int dw_mci_socfpga_parse_dt(struct dw_mci *host)
+{
+	struct dw_mci_socfpga_priv_data *priv = host->priv;
+	struct device_node *np = host->dev->of_node;
+	u32 timing[2];
+	u32 div = 0;
+	int ret;
+
+	of_property_read_u32(np, "altr,dw-mshc-ciu-div", &div);
+	priv->ciu_div = div;
+
+	ret = of_property_read_u32_array(np,
+			"altr,dw-mshc-sdr-timing", timing, 2);
+	if (ret)
+		return ret;
+
+	priv->hs_timing = SYSMGR_SDMMC_CTRL_SET(timing[0], timing[1]);
+	return 0;
+}
+
+static const struct dw_mci_drv_data socfpga_drv_data = {
+	.init			= dw_mci_socfpga_priv_init,
+	.setup_clock		= dw_mci_socfpga_setup_clock,
+	.prepare_command	= dw_mci_socfpga_prepare_command,
+	.parse_dt		= dw_mci_socfpga_parse_dt,
+};
+
+static const struct of_device_id dw_mci_socfpga_match[] = {
+	{ .compatible = "altr,socfpga-dw-mshc",
+			.data = &socfpga_drv_data, },
+	{},
+};
+MODULE_DEVICE_TABLE(of, dw_mci_socfpga_match);
+
+int dw_mci_socfpga_probe(struct platform_device *pdev)
+{
+	const struct dw_mci_drv_data *drv_data;
+	const struct of_device_id *match;
+
+	match = of_match_node(dw_mci_socfpga_match, pdev->dev.of_node);
+	drv_data = match->data;
+	return dw_mci_pltfm_register(pdev, drv_data);
+}
+
+static struct platform_driver dw_mci_socfpga_pltfm_driver = {
+	.probe		= dw_mci_socfpga_probe,
+	.remove		= __exit_p(dw_mci_pltfm_remove),
+	.driver		= {
+		.name		= "dwmmc_socfpga",
+		.of_match_table	= of_match_ptr(dw_mci_socfpga_match),
+		.pm		= &dw_mci_pltfm_pmops,
+	},
+};
+
+module_platform_driver(dw_mci_socfpga_pltfm_driver);
+
+MODULE_DESCRIPTION("Altera SOCFPGA Specific DW-MSHC Driver Extension");
+MODULE_LICENSE("GPL v2");
+MODULE_ALIAS("platform:dwmmc-socfpga");
diff --git a/drivers/mmc/host/dw_mmc.c b/drivers/mmc/host/dw_mmc.c
index d3d8913..fbf5176 100644
--- a/drivers/mmc/host/dw_mmc.c
+++ b/drivers/mmc/host/dw_mmc.c
@@ -38,13 +38,9 @@
 #include "dw_mmc.h"
 
 /* Common flag combinations */
-
-/* According to Synopsys, the data starvation interrupt (HTO) should not treat
- * as error. Software should continue the data transfer. We have verified this
- * in Virtual Target. The same is applied to FIFO under/overrun (FRUN) as well.
- */
-#define DW_MCI_DATA_ERROR_FLAGS (SDMMC_INT_DTO | SDMMC_INT_DCRC | \
-				 SDMMC_INT_HTO | SDMMC_INT_FRUN | SDMMC_INT_SBE | SDMMC_INT_EBE)
+#define DW_MCI_DATA_ERROR_FLAGS	(SDMMC_INT_DTO | SDMMC_INT_DCRC | \
+				 SDMMC_INT_HTO | SDMMC_INT_FRUN | \
+				 SDMMC_INT_SBE | SDMMC_INT_EBE)
 
 #define DW_MCI_CMD_ERROR_FLAGS	(SDMMC_INT_RTO | SDMMC_INT_RCRC | \
 				 SDMMC_INT_RESP_ERR)
@@ -270,9 +266,6 @@ static u32 dw_mci_prepare_command(struct mmc_host *mmc, struct mmc_command *cmd)
 	if (drv_data && drv_data->prepare_command)
 		drv_data->prepare_command(slot->host, &cmdr);
 
-	if (slot->host->use_hold_reg)
-		cmdr |= SDMMC_CMD_USE_HOLD_REG;
-
 	return cmdr;
 }
 
@@ -2060,16 +2053,6 @@ static struct dw_mci_board *dw_mci_parse_dt(struct dw_mci *host)
 		return ERR_PTR(-ENOMEM);
 	}
 
-	if (of_property_read_u32(dev->of_node, "bus-hz", &pdata->bus_hz)) {
-		dev_err(dev, "couldn't determine bus-hz\n");
-		pdata->bus_hz = 50000000;
-	}
-
-	if (of_property_read_u32(dev->of_node, "pwr-en", &pdata->pwr_en)) {
-		dev_info(dev, "couldn't determine pwr-en, assuming pwr-en = 0\n");
-		pdata->pwr_en = 0;
-	}
-
 	/* find out number of slots supported */
 	if (of_property_read_u32(dev->of_node, "num-slots",
 				&pdata->num_slots)) {
@@ -2206,9 +2189,6 @@ int dw_mci_probe(struct dw_mci *host)
 		host->data_shift = 2;
 	}
 
-	/* Get the USE_HOLD_REG */
-	host->use_hold_reg = mci_readl(host, CMD) & SDMMC_CMD_USE_HOLD_REG;
-
 	/* Reset all blocks */
 	if (!mci_wait_reset(host->dev, host))
 		return -ENODEV;
@@ -2220,9 +2200,6 @@ int dw_mci_probe(struct dw_mci *host)
 	mci_writel(host, RINTSTS, 0xFFFFFFFF);
 	mci_writel(host, INTMASK, 0); /* disable all mmc interrupt first */
 
-	/* Set PWREN bit */
-	mci_writel(host, PWREN, host->pdata->pwr_en);
-
 	/* Put in max timeout */
 	mci_writel(host, TMOUT, 0xFFFFFFFF);
 
diff --git a/include/linux/mmc/dw_mmc.h b/include/linux/mmc/dw_mmc.h
index a6df328..5868cb8 100644
--- a/include/linux/mmc/dw_mmc.h
+++ b/include/linux/mmc/dw_mmc.h
@@ -187,11 +187,6 @@ struct dw_mci {
 	struct regulator	*vmmc;	/* Power regulator */
 	unsigned long		irq_flags; /* IRQ flags */
 	int			irq;
-
-	/* Set to one for SDR12 and SDR25 */
-	unsigned int use_hold_reg;
-	/*Card needs power enable bit */
-	u32 pwr_en;
 };
 
 /* DMA ops for Internal/External DMAC interface */
@@ -233,8 +228,6 @@ struct dw_mci_board {
 
 	u32 quirks; /* Workaround / Quirk flags */
 	unsigned int bus_hz; /* Clock speed at the cclk_in pad */
-	/*Card needs power enable bit */
-	u32 pwr_en;
 
 	unsigned int caps;	/* Capabilities */
 	unsigned int caps2;	/* More capabilities */
-- 
1.7.5.4

