From 38442a4c97f0d5261b644c2ec850aa0605d1bc59 Mon Sep 17 00:00:00 2001
From: Graham Moore <grmoore@altera.com>
Date: Thu, 15 Aug 2013 13:15:05 -0500
Subject: [PATCH 132/248] FogBugz #140538: Fix multiple interrupt
 implementation in pl330

Modify device tree for multiple interrupt parameters.
Add DMA files which combine multiple DMA irqs into one.
Add platform data structure.
Modify pl330 driver, less intrusive modifications for multiple IRQs.
Remove AMBA_NR_IRQS modification.
Document devicetree bindings.

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Graham Moore <grmoore@altera.com>
---
 .../devicetree/bindings/dma/arm-pl330.txt          |   7 +-
 arch/arm/boot/dts/socfpga.dtsi                     |  13 +--
 arch/arm/mach-socfpga/Makefile                     |   2 +-
 arch/arm/mach-socfpga/dma.c                        | 128 +++++++++++++++++++++
 arch/arm/mach-socfpga/dma.h                        |  24 ++++
 arch/arm/mach-socfpga/socfpga.c                    |   5 +
 drivers/dma/pl330.c                                |  34 ++----
 include/linux/amba/bus.h                           |   4 -
 8 files changed, 178 insertions(+), 39 deletions(-)
 create mode 100644 arch/arm/mach-socfpga/dma.c
 create mode 100644 arch/arm/mach-socfpga/dma.h

diff --git a/Documentation/devicetree/bindings/dma/arm-pl330.txt b/Documentation/devicetree/bindings/dma/arm-pl330.txt
index 0c220ba..2ba90db 100644
--- a/Documentation/devicetree/bindings/dma/arm-pl330.txt
+++ b/Documentation/devicetree/bindings/dma/arm-pl330.txt
@@ -7,7 +7,10 @@ Required properties:
   - compatible: should include both "arm,pl330" and "arm,primecell".
   - reg: physical base address of the controller and length of memory mapped
     region.
-  - interrupts: interrupt number(s) to the cpu.  A maximum of eight interrupts can be specified.
+  - interrupts: interrupt number to the cpu.
+  - nr-irqs: total number of interrupts to be combined in
+    the virtual interrupt.
+  - nr-valid-peri: number of peripherals attached to DMAC.
 
 Optional properties:
   - dma-coherent      : Present if dma operations are coherent
@@ -29,6 +32,8 @@ Example:
 		copy-align = <3>;
 		clocks = <&l4_main_clk>;
 		clock-names = "apb_pclk";
+		nr-irqs = <9>;
+		nr-valid-peri = <32>;
 	};
 
 Client drivers (device nodes requiring dma transfers from dev-to-mem or
diff --git a/arch/arm/boot/dts/socfpga.dtsi b/arch/arm/boot/dts/socfpga.dtsi
index 44bc2fd..d5e2288 100644
--- a/arch/arm/boot/dts/socfpga.dtsi
+++ b/arch/arm/boot/dts/socfpga.dtsi
@@ -75,20 +75,15 @@
 			pdma: pdma@ffe01000 {
 				compatible = "arm,pl330", "arm,primecell";
 				reg = <0xffe01000 0x1000>;
-				interrupts = <0 104 4>,
-					<0 105 4>,
-					<0 106 4>,
-					<0 107 4>,
-					<0 108 4>,
-					<0 109 4>,
-					<0 110 4>,
-					<0 111 4>;
 				#dma-cells = <1>;
 				#dma-channels = <8>;
 				#dma-requests = <32>;
-				copy-align = <3>;
+				interrupts = <0 104 4>;
+				nr-irqs = <9>;
+				nr-valid-peri = <32>;
 				clocks = <&l4_main_clk>;
 				clock-names = "apb_pclk";
+				copy-align = <3>;
 			};
 		};
 
diff --git a/arch/arm/mach-socfpga/Makefile b/arch/arm/mach-socfpga/Makefile
index c7401d3..92ee8bb 100644
--- a/arch/arm/mach-socfpga/Makefile
+++ b/arch/arm/mach-socfpga/Makefile
@@ -2,6 +2,6 @@
 # Makefile for the linux kernel.
 #
 
-obj-y					:= socfpga.o
+obj-y					:= socfpga.o dma.o
 obj-$(CONFIG_SMP)	+= headsmp.o platsmp.o
 obj-$(CONFIG_HW_PERF_EVENTS) += socfpga_cti.o
diff --git a/arch/arm/mach-socfpga/dma.c b/arch/arm/mach-socfpga/dma.c
new file mode 100644
index 0000000..8ebccd7
--- /dev/null
+++ b/arch/arm/mach-socfpga/dma.c
@@ -0,0 +1,128 @@
+/*
+ *  arch/arm/mach-socfpga/dma.c
+ *
+ * Copyright Altera Corporation (C) 2013. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include <linux/dma-mapping.h>
+#include <linux/amba/bus.h>
+#include <linux/amba/pl330.h>
+#include <linux/interrupt.h>
+#include <linux/export.h>
+#include <linux/irq.h>
+#include <linux/irqdomain.h>
+#include <asm/irq.h>
+#include <linux/of.h>
+
+#include "dma.h"
+
+static void combiner_func(struct irq_data *data) { }
+
+static unsigned int combiner_ret(struct irq_data *data)
+{
+	return 0;
+}
+
+struct irq_chip combiner_irq_chip = {
+	.name = "combiner",
+	.irq_startup = combiner_ret,
+	.irq_shutdown = combiner_func,
+	.irq_enable = combiner_func,
+	.irq_disable = combiner_func,
+	.irq_ack = combiner_func,
+	.irq_mask = combiner_func,
+	.irq_unmask = combiner_func,
+};
+
+static irqreturn_t socfpga_dma_irq_handler(int irq, void *data)
+{
+	struct amba_device *adev = (struct amba_device *) data;
+	int dev_irq = adev->irq[0];
+	if (generic_handle_irq(dev_irq) == 0)
+		return IRQ_HANDLED;
+	return IRQ_NONE;
+}
+
+static int pl330_dma_platform_init(struct amba_device *adev)
+{
+	struct dma_pl330_platdata *pdat;
+	int irq, irq_alloc;
+	int ret;
+	struct device_node *np = adev->dev.of_node;
+	unsigned int prop;
+
+	pdat = adev->dev.platform_data;
+
+	dma_cap_set(DMA_MEMCPY, pdat->cap_mask);
+	dma_cap_set(DMA_SLAVE, pdat->cap_mask);
+	dma_cap_set(DMA_CYCLIC, pdat->cap_mask);
+
+	pdat->irq_start = adev->irq[0];
+
+	if (of_property_read_u32(np, "nr-irqs", &prop))
+		return -1;
+	pdat->irq_end = pdat->irq_start + prop - 1;
+
+	if (of_property_read_u32(np, "nr-valid-peri", &prop))
+		return -1;
+	pdat->nr_valid_peri = prop;
+
+	/* Hook all the dma interrupts into our irq combiner handler */
+	for (irq = pdat->irq_start; irq <= pdat->irq_end; irq++) {
+		ret = request_irq(irq, socfpga_dma_irq_handler, 0,
+			dev_name(&adev->dev), adev);
+
+		if (ret) {
+			irq_alloc = irq;
+			goto request_irq_err;
+		}
+	}
+
+	/* now that we have the interrupts hooked, get a combiner
+		irq (virtual irq) from the system and use that as
+		the main irq */
+	adev->irq[0] = irq_alloc_desc(0);
+	irq_set_chip_and_handler(adev->irq[0], &combiner_irq_chip,
+		handle_simple_irq);
+	set_irq_flags(adev->irq[0], IRQF_VALID);
+
+	return 0;
+
+request_irq_err:
+	for (irq = pdat->irq_start; irq < irq_alloc; irq++)
+		free_irq(irq, adev);
+
+	return ret;
+}
+
+static void pl330_dma_platform_exit(struct amba_device *adev)
+{
+	struct dma_pl330_platdata *pdat;
+	int irq;
+
+	pdat = adev->dev.platform_data;
+
+	for (irq = pdat->irq_start; irq <= pdat->irq_end; irq++)
+		free_irq(irq, adev);
+
+	irq_set_chip_and_handler(adev->irq[0], NULL, NULL);
+	irq_free_descs(adev->irq[0], 1);
+
+}
+
+struct dma_pl330_platdata dma_platform_data = {
+	.init = pl330_dma_platform_init,
+	.exit = pl330_dma_platform_exit,
+};
diff --git a/arch/arm/mach-socfpga/dma.h b/arch/arm/mach-socfpga/dma.h
new file mode 100644
index 0000000..89c66eb
--- /dev/null
+++ b/arch/arm/mach-socfpga/dma.h
@@ -0,0 +1,24 @@
+/*
+ *  arch/arm/mach-socfpga/dma.h
+ *
+ * Copyright Altera Corporation (C) 2013. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef MACH_SOCFPGA_DMA_H
+#define MACH_SOCFPGA_DMA_H
+
+extern struct dma_pl330_platdata dma_platform_data;
+
+#endif /* #ifndef MACH_SOCFPGA_DMA_H */
diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index 74c04ed..6e99749 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -33,6 +33,7 @@
 
 #include "core.h"
 #include "socfpga_cti.h"
+#include "dma.h"
 
 void __iomem *socfpga_scu_base_addr = ((void __iomem *)(SOCFPGA_SCU_VIRT_BASE));
 void __iomem *sys_manager_base_addr;
@@ -67,6 +68,10 @@ static struct arm_pmu_platdata socfpga_pmu_platdata = {
 static const struct of_dev_auxdata socfpga_auxdata_lookup[] __initconst = {
 	OF_DEV_AUXDATA("snps,dwmac-3.70a", 0xff700000, NULL, &stmmacenet0_data),
 	OF_DEV_AUXDATA("snps,dwmac-3.70a", 0xff702000, NULL, &stmmacenet1_data),
+	OF_DEV_AUXDATA("arm,pl330", 0xffe00000, "dma-pl330",
+		&dma_platform_data),
+	OF_DEV_AUXDATA("arm,pl330", 0xffe01000, "dma-pl330",
+		&dma_platform_data),
 #ifdef CONFIG_HW_PERF_EVENTS
 	OF_DEV_AUXDATA("arm,cortex-a9-pmu", 0, "arm-pmu", &socfpga_pmu_platdata),
 #endif
diff --git a/drivers/dma/pl330.c b/drivers/dma/pl330.c
index e67ca66..a8f47a6 100755
--- a/drivers/dma/pl330.c
+++ b/drivers/dma/pl330.c
@@ -2927,22 +2927,18 @@ pl330_probe(struct amba_device *adev, const struct amba_id *id)
 
 	amba_set_drvdata(adev, pdmac);
 
-	for (i = 0; i < AMBA_NR_IRQS; i++) {
-		irq = adev->irq[i];
-		if (irq == 0)
-			break;
-		ret = request_irq(irq, pl330_irq_handler, 0,
-				dev_name(&adev->dev), pi);
-		if (ret)
-			goto probe_err1;
-	}
-
 	if (pdat && pdat->init) {
 		ret = pdat->init(adev);
 		if (ret)
-			goto probe_err3;
+			return ret;
 	}
 
+	irq = adev->irq[0];
+	ret = request_irq(irq, pl330_irq_handler, 0,
+			dev_name(&adev->dev), pi);
+	if (ret)
+		return ret;
+
 	pi->pcfg.periph_id = adev->periphid;
 	ret = pl330_add(pi);
 	if (ret)
@@ -3071,12 +3067,7 @@ probe_err3:
 probe_err2:
 	pl330_del(pi);
 probe_err1:
-	for (i = 0; i < AMBA_NR_IRQS; i++) {
-		irq = adev->irq[i];
-		if (irq == 0)
-			break;
-		free_irq(irq, pi);
-	}
+	free_irq(irq, pi);
 
 	return ret;
 }
@@ -3087,7 +3078,6 @@ static int pl330_remove(struct amba_device *adev)
 	struct dma_pl330_chan *pch, *_p;
 	struct pl330_info *pi;
 	int irq;
-	int i;
 
 	if (!pdmac)
 		return 0;
@@ -3113,12 +3103,8 @@ static int pl330_remove(struct amba_device *adev)
 
 	pl330_del(pi);
 
-	for (i = 0; i < AMBA_NR_IRQS; i++) {
-		irq = adev->irq[i];
-		if (irq == 0)
-			break;
-		free_irq(irq, pi);
-	}
+	irq = adev->irq[0];
+	free_irq(irq, pi);
 
 	return 0;
 }
diff --git a/include/linux/amba/bus.h b/include/linux/amba/bus.h
index f47b8d7..682df0e 100644
--- a/include/linux/amba/bus.h
+++ b/include/linux/amba/bus.h
@@ -21,11 +21,7 @@
 #include <linux/resource.h>
 #include <linux/regulator/consumer.h>
 
-#ifdef CONFIG_ARCH_SOCFPGA
-#define AMBA_NR_IRQS	8
-#else
 #define AMBA_NR_IRQS	2
-#endif
 #define AMBA_CID	0xb105f00d
 
 struct clk;
-- 
1.9.1

