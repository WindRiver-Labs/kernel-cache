From 330811787e857b907168bb38ffbcb78419d3a92c Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Wed, 18 Sep 2013 18:07:59 -0500
Subject: [PATCH 140/248] FogBugz #156136: Upgrade kernel to v3.11

- Remove the need for clocksource_of_init because it is now common code in
arch/arm/time.c
- Align the STMMAC ethernet driver with kernel.org. Remove
STMMAC_PHY_ID_ZERO_WORKAROUND, STMMAC_SHARED_PHY_IRQ, STMMAC_TIMER,
STMMAC_RTC_TIMER, STMMAC_RING, and STMMAC_CHAINED defconfigs as these
are not used anymore.
- Use snps,phy-addr property for STMMAC driver.
- Add skew settings for the ethernet PHY in DTS. Also clean up socfpga.dtsi
a bit for the ethernet entry.
- Add CONFIG_MICREL_PHY to socfpga_defconfig.

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
---
 arch/arm/boot/dts/socfpga.dtsi                     |  2 -
 arch/arm/boot/dts/socfpga_cyclone5.dtsi            | 21 +++++---
 arch/arm/configs/socfpga_defconfig                 |  2 +-
 arch/arm/mach-socfpga/socfpga.c                    | 27 ----------
 drivers/net/ethernet/stmicro/stmmac/Kconfig        | 60 ----------------------
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c  | 11 ----
 .../net/ethernet/stmicro/stmmac/stmmac_platform.c  |  4 +-
 7 files changed, 17 insertions(+), 110 deletions(-)

diff --git a/arch/arm/boot/dts/socfpga.dtsi b/arch/arm/boot/dts/socfpga.dtsi
index d5e2288..aec90d7 100644
--- a/arch/arm/boot/dts/socfpga.dtsi
+++ b/arch/arm/boot/dts/socfpga.dtsi
@@ -22,8 +22,6 @@
 	#size-cells = <1>;
 
 	aliases {
-		ethernet0 = &gmac0;
-		ethernet1 = &gmac1;
 		serial0 = &uart0;
 		serial1 = &uart1;
 		timer0 = &timer0;
diff --git a/arch/arm/boot/dts/socfpga_cyclone5.dtsi b/arch/arm/boot/dts/socfpga_cyclone5.dtsi
index ce3245f7..7aeb07b 100644
--- a/arch/arm/boot/dts/socfpga_cyclone5.dtsi
+++ b/arch/arm/boot/dts/socfpga_cyclone5.dtsi
@@ -61,12 +61,6 @@
 			};
 		};
 
-		ethernet@ff702000 {
-			phy-mode = "rgmii";
-			phy-addr = <0xffffffff>; /* probe for phy addr */
-			status = "okay";
-		};
-
 		i2c0: i2c@ffc04000 {
 			speed-mode = <0>;
 			status = "okay";
@@ -195,3 +189,18 @@
 		reg = <0x68>;
 	};
 };
+
+&gmac1 {
+	phy-mode = "rgmii";
+	snps,phy-addr = <0xffffffff>; /* probe for phy addr */
+	rxd0-skew-ps = <0>;
+	rxd0-skew-ps = <0>;
+	rxd1-skew-ps = <0>;
+	rxd2-skew-ps = <0>;
+	rxd3-skew-ps = <0>;
+	txen-skew-ps = <0>;
+	txc-skew-ps = <2600>;
+	rxdv-skew-ps = <0>;
+	rxc-skew-ps = <2000>;
+	status = "okay";
+};
diff --git a/arch/arm/configs/socfpga_defconfig b/arch/arm/configs/socfpga_defconfig
index 5b8258e..9ddc1bd 100644
--- a/arch/arm/configs/socfpga_defconfig
+++ b/arch/arm/configs/socfpga_defconfig
@@ -62,7 +62,7 @@ CONFIG_BLK_DEV_SD=y
 # CONFIG_SCSI_LOWLEVEL is not set
 CONFIG_NETDEVICES=y
 CONFIG_STMMAC_ETH=y
-# CONFIG_STMMAC_PHY_ID_ZERO_WORKAROUND is not set
+CONFIG_MICREL_PHY=y
 CONFIG_INPUT_EVDEV=y
 # CONFIG_SERIO_SERPORT is not set
 CONFIG_SERIO_AMBAKMI=y
diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index 4c9b7d9..5eaaecb 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -162,29 +162,6 @@ static void __init enable_periphs(void)
 	writel(rstval, rst_manager_base_addr + SOCFPGA_RSTMGR_MODPERRST);
 }
 
-#define MICREL_KSZ9021_EXTREG_CTRL 11
-#define MICREL_KSZ9021_EXTREG_DATA_WRITE 12
-#define MICREL_KSZ9021_RGMII_CLK_CTRL_PAD_SCEW 260
-#define MICREL_KSZ9021_RGMII_RX_DATA_PAD_SCEW 261
-
-static int ksz9021rlrn_phy_fixup(struct phy_device *phydev)
-{
-	if (IS_BUILTIN(CONFIG_PHYLIB)) {
-		/* min rx data delay */
-		phy_write(phydev, MICREL_KSZ9021_EXTREG_CTRL,
-			MICREL_KSZ9021_RGMII_RX_DATA_PAD_SCEW | 0x8000);
-		phy_write(phydev, MICREL_KSZ9021_EXTREG_DATA_WRITE, 0x0000);
-
-		/* max rx/tx clock delay, min rx/tx control delay */
-		phy_write(phydev, MICREL_KSZ9021_EXTREG_CTRL,
-			MICREL_KSZ9021_RGMII_CLK_CTRL_PAD_SCEW | 0x8000);
-		phy_write(phydev, MICREL_KSZ9021_EXTREG_DATA_WRITE, 0xa0d0);
-		phy_write(phydev, MICREL_KSZ9021_EXTREG_CTRL, 0x104);
-	}
-
-	return 0;
-}
-
 static int stmmac_plat_init(struct platform_device *pdev)
 {
 	u32 ctrl, val, shift;
@@ -300,7 +277,6 @@ static void __init socfpga_init_irq(void)
 	socfpga_sysmgr_init();
 
 	of_clk_init(NULL);
-	clocksource_of_init();
 }
 
 static void socfpga_cyclone5_restart(enum reboot_mode mode, const char *cmd)
@@ -330,9 +306,6 @@ static void __init socfpga_cyclone5_init(void)
 	enable_periphs();
 
 	socfpga_soc_device_init();
-	if (IS_BUILTIN(CONFIG_PHYLIB))
-		phy_register_fixup_for_uid(PHY_ID_KSZ9021RLRN,
-			MICREL_PHY_ID_MASK, ksz9021rlrn_phy_fixup);
 }
 
 static const char *altera_dt_match[] = {
diff --git a/drivers/net/ethernet/stmicro/stmmac/Kconfig b/drivers/net/ethernet/stmicro/stmmac/Kconfig
index 4c4288d..f2d7c70 100644
--- a/drivers/net/ethernet/stmicro/stmmac/Kconfig
+++ b/drivers/net/ethernet/stmicro/stmmac/Kconfig
@@ -77,64 +77,4 @@ config STMMAC_DA
 	  By default, the DMA arbitration scheme is based on Round-robin
 	  (rx:tx priority is 1:1).
 
-config STMMAC_PHY_ID_ZERO_WORKAROUND
-	bool "STMMAC work around for non-existant phys returning 0"
-	default y
-	depends on STMMAC_ETH && ARCH_SOCFPGA
-	help
-	  Broken HW is sometimes missing the pull-up resistor on the
-	  MDIO line, which results in reads to non-existent devices returning
-	  0 rather than 0xffff.
-
-config STMMAC_SHARED_PHY_IRQ
-	bool "STMMAC and Phy have or'd IRQ"
-	default n
-	depends on STMMAC_ETH && ARCH_SOCFPGA
-	help
-	  Selecting this option means the IRQ lines for the STMMAC
-	  and its phy are hooked up to an or gate.
-
-config STMMAC_TIMER
-	bool "STMMAC Timer optimisation"
-	default n
-	depends on RTC_HCTOSYS_DEVICE
-	---help---
-	  Use an external timer for mitigating the number of network
-	  interrupts. Currently, for SH architectures, it is possible
-	  to use the TMU channel 2 and the SH-RTC device.
-
-choice
-        prompt "Select Timer device"
-        depends on STMMAC_TIMER
-
-config STMMAC_TMU_TIMER
-        bool "TMU channel 2"
-        depends on CPU_SH4
-	---help---
-
-config STMMAC_RTC_TIMER
-        bool "Real time clock"
-        depends on RTC_CLASS
-	---help---
-
-endchoice
-
-choice
-	prompt "Select the DMA TX/RX descriptor operating modes"
-	depends on STMMAC_ETH
-	---help---
-	  This driver supports DMA descriptor to operate both in dual buffer
-	  (RING) and linked-list(CHAINED) mode. In RING mode each descriptor
-	  points to two data buffer pointers whereas in CHAINED mode they
-	  points to only one data buffer pointer.
-
-config STMMAC_RING
-	bool "Enable Descriptor Ring Mode"
-
-config STMMAC_CHAINED
-	bool "Enable Descriptor Chained Mode"
-
-endchoice
-
-
 endif
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 565d536..8543e1c 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -815,13 +815,6 @@ static int stmmac_init_phy(struct net_device *dev)
 		return PTR_ERR(phydev);
 	}
 
-#ifdef CONFIG_ARCH_SOCFPGA
-	if (priv->plat->has_gmac) {
-		phydev->supported |= PHY_GBIT_FEATURES;
-		phydev->advertising |= PHY_GBIT_FEATURES;
-	}
-#endif
-
 	/* Stop Advertising 1000BASE Capability if interface is not GMII */
 	if ((interface == PHY_INTERFACE_MODE_MII) ||
 	    (interface == PHY_INTERFACE_MODE_RMII) ||
@@ -829,7 +822,6 @@ static int stmmac_init_phy(struct net_device *dev)
 		phydev->advertising &= ~(SUPPORTED_1000baseT_Half |
 					 SUPPORTED_1000baseT_Full);
 
-#ifdef CONFIG_STMMAC_PHY_ID_ZERO_WORKAROUND
 	/*
 	 * Broken HW is sometimes missing the pull-up resistor on the
 	 * MDIO line, which results in reads to non-existent devices returning
@@ -841,7 +833,6 @@ static int stmmac_init_phy(struct net_device *dev)
 		phy_disconnect(phydev);
 		return -ENODEV;
 	}
-#endif
 	pr_debug("stmmac_init_phy:  %s: attached to PHY (UID 0x%x)"
 		 " Link = %d\n", dev->name, phydev->phy_id, phydev->link);
 
@@ -1741,7 +1732,6 @@ static int stmmac_open(struct net_device *dev)
 	if (priv->phydev)
 		phy_start(priv->phydev);
 
-#ifndef CONFIG_STMMAC_SHARED_PHY_IRQ
 	/* Request the IRQ lines */
 	ret = request_irq(dev->irq, stmmac_interrupt,
 			  IRQF_SHARED, dev->name, dev);
@@ -1750,7 +1740,6 @@ static int stmmac_open(struct net_device *dev)
 		       __func__, dev->irq, ret);
 		goto init_error;
 	}
-#endif
 
 	/* Request the Wake IRQ in case of another line is used for WoL */
 	if (priv->wol_irq != dev->irq) {
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
index cc8af9a..8fb32a8 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
@@ -56,7 +56,6 @@ static int stmmac_probe_config_dt(struct platform_device *pdev,
 	struct device_node *np = pdev->dev.of_node;
 	struct stmmac_dma_cfg *dma_cfg;
 	const struct of_device_id *device;
-	u32 phyaddr;
 
 	if (!np)
 		return -ENODEV;
@@ -193,11 +192,10 @@ static int stmmac_pltfr_probe(struct platform_device *pdev)
 
 	plat_dat = dev_get_platdata(&pdev->dev);
 	if (pdev->dev.of_node) {
-		if (NULL == plat_dat) {
+		if (!plat_dat)
 			plat_dat = devm_kzalloc(&pdev->dev,
 					sizeof(struct plat_stmmacenet_data),
 					GFP_KERNEL);
-		}
 		if (!plat_dat) {
 			pr_err("%s: ERROR: no memory", __func__);
 			return  -ENOMEM;
-- 
1.9.1

