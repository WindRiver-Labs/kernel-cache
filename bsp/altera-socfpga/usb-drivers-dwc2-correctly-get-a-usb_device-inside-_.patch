From 69959f7bf5e10622cec2127267730033b819164b Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Wed, 28 May 2014 12:58:16 +0800
Subject: [PATCH] usb: drivers: dwc2: correctly get a usb_device inside
 _dwc2_hcd_endpoint_reset

_dwc2_hcd_endpoint_reset() is to invoke to_usb_dvice(hsotg->dev) to get
a usb device, but unfortunally its a terrible mistake, because in fact
the hsotg->dev points to a platform device rather than usb device. To fix
this issue, we newly add a pointer to usb device structure in dwc2_qh structure,
and then save a usb device to the newly added pointer while initializing a QH.

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/usb/dwc2/hcd.c       |    7 ++++++-
 drivers/usb/dwc2/hcd.h       |    1 +
 drivers/usb/dwc2/hcd_queue.c |   26 +++++++++++++++-----------
 3 files changed, 22 insertions(+), 12 deletions(-)

diff --git a/drivers/usb/dwc2/hcd.c b/drivers/usb/dwc2/hcd.c
index 3fd436c..f906379 100644
--- a/drivers/usb/dwc2/hcd.c
+++ b/drivers/usb/dwc2/hcd.c
@@ -2552,6 +2552,7 @@ static void _dwc2_hcd_endpoint_reset(struct usb_hcd *hcd,
 				     struct usb_host_endpoint *ep)
 {
 	struct dwc2_hsotg *hsotg = dwc2_hcd_to_hsotg(hcd);
+	struct dwc2_qh *qh;
 	int is_control = usb_endpoint_xfer_control(&ep->desc);
 	int is_out = usb_endpoint_dir_out(&ep->desc);
 	int epnum = usb_endpoint_num(&ep->desc);
@@ -2562,7 +2563,11 @@ static void _dwc2_hcd_endpoint_reset(struct usb_hcd *hcd,
 		"DWC OTG HCD EP RESET: bEndpointAddress=0x%02x\n",
 		ep->desc.bEndpointAddress);
 
-	udev = to_usb_device(hsotg->dev);
+	qh = ep->hcpriv;
+	if (!qh)
+		return -EINVAL;
+
+	udev = qh->dev;
 
 	spin_lock_irqsave(&hsotg->lock, flags);
 
diff --git a/drivers/usb/dwc2/hcd.h b/drivers/usb/dwc2/hcd.h
index b1c17d5..659e382 100644
--- a/drivers/usb/dwc2/hcd.h
+++ b/drivers/usb/dwc2/hcd.h
@@ -284,6 +284,7 @@ struct dwc2_qh {
 	dma_addr_t desc_list_dma;
 	u32 *n_bytes;
 	unsigned tt_buffer_dirty:1;
+	struct usb_device *dev;
 };
 
 /**
diff --git a/drivers/usb/dwc2/hcd_queue.c b/drivers/usb/dwc2/hcd_queue.c
index f200f1f..c515736 100644
--- a/drivers/usb/dwc2/hcd_queue.c
+++ b/drivers/usb/dwc2/hcd_queue.c
@@ -63,32 +63,36 @@
  */
 #define SCHEDULE_SLOP 10
 static void dwc2_qh_init(struct dwc2_hsotg *hsotg, struct dwc2_qh *qh,
-			 struct dwc2_hcd_urb *urb)
+			 struct dwc2_hcd_urb *dwc2_urb)
 {
 	int dev_speed, hub_addr, hub_port;
+	struct urb *urb;
 	char *speed, *type;
 
 	dev_vdbg(hsotg->dev, "%s()\n", __func__);
 
+	urb = dwc2_urb->priv;
+
 	/* Initialize QH */
-	qh->ep_type = dwc2_hcd_get_pipe_type(&urb->pipe_info);
-	qh->ep_is_in = dwc2_hcd_is_pipe_in(&urb->pipe_info) ? 1 : 0;
+	qh->ep_type = dwc2_hcd_get_pipe_type(&dwc2_urb->pipe_info);
+	qh->ep_is_in = dwc2_hcd_is_pipe_in(&dwc2_urb->pipe_info) ? 1 : 0;
 
 	qh->data_toggle = DWC2_HC_PID_DATA0;
-	qh->maxp = dwc2_hcd_get_mps(&urb->pipe_info);
+	qh->maxp = dwc2_hcd_get_mps(&dwc2_urb->pipe_info);
 	INIT_LIST_HEAD(&qh->qtd_list);
 	INIT_LIST_HEAD(&qh->qh_list_entry);
+	qh->dev = urb->dev;
 
 	/* FS/LS Endpoint on HS Hub, NOT virtual root hub */
-	dev_speed = dwc2_host_get_speed(hsotg, urb->priv);
+	dev_speed = dwc2_host_get_speed(hsotg, dwc2_urb->priv);
 
-	dwc2_host_hub_info(hsotg, urb->priv, &hub_addr, &hub_port);
+	dwc2_host_hub_info(hsotg, dwc2_urb->priv, &hub_addr, &hub_port);
 
 	if ((dev_speed == USB_SPEED_LOW || dev_speed == USB_SPEED_FULL) &&
 	    hub_addr != 0 && hub_addr != 1) {
 		dev_vdbg(hsotg->dev,
 			 "QH init: EP %d: TT found at hub addr %d, for port %d\n",
-			 dwc2_hcd_get_ep_num(&urb->pipe_info), hub_addr,
+			 dwc2_hcd_get_ep_num(&dwc2_urb->pipe_info), hub_addr,
 			 hub_port);
 		qh->do_split = 1;
 	}
@@ -109,7 +113,7 @@ static void dwc2_qh_init(struct dwc2_hsotg *hsotg, struct dwc2_qh *qh,
 		/* Start in a slightly future (micro)frame */
 		qh->sched_frame = dwc2_frame_num_inc(hsotg->frame_number,
 						     SCHEDULE_SLOP);
-		qh->interval = urb->interval;
+		qh->interval = dwc2_urb->interval;
 #if 0
 		/* Increase interrupt polling rate for debugging */
 		if (qh->ep_type == USB_ENDPOINT_XFER_INT)
@@ -130,10 +134,10 @@ static void dwc2_qh_init(struct dwc2_hsotg *hsotg, struct dwc2_qh *qh,
 	dev_vdbg(hsotg->dev, "DWC OTG HCD QH Initialized\n");
 	dev_vdbg(hsotg->dev, "DWC OTG HCD QH - qh = %p\n", qh);
 	dev_vdbg(hsotg->dev, "DWC OTG HCD QH - Device Address = %d\n",
-		 dwc2_hcd_get_dev_addr(&urb->pipe_info));
+		 dwc2_hcd_get_dev_addr(&dwc2_urb->pipe_info));
 	dev_vdbg(hsotg->dev, "DWC OTG HCD QH - Endpoint %d, %s\n",
-		 dwc2_hcd_get_ep_num(&urb->pipe_info),
-		 dwc2_hcd_is_pipe_in(&urb->pipe_info) ? "IN" : "OUT");
+		 dwc2_hcd_get_ep_num(&dwc2_urb->pipe_info),
+		 dwc2_hcd_is_pipe_in(&dwc2_urb->pipe_info) ? "IN" : "OUT");
 
 	qh->dev_speed = dev_speed;
 
-- 
1.7.5.4

