From de07e49fd3d819b77e68bc42dbcaa20c97309f10 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Mon, 8 Apr 2013 11:32:58 -0500
Subject: [PATCH 072/248] FogBugz #111294: Enable USB peripheral support on
 devkit

The patch enables USB device mode on the SoCFPGA Cyclone5 devkit. To
enable USB device, turn on DWC_DEVICE_ONLY config option.

To test:

1) Build kernel with CONFIG_DWC_DEVICE_ONLY=y
2) Boot up Linux kernel
3) Create a ramdisk
$ dd bs=1M count=128 if=/dev/zero of=fsg.block
4) Create a b-type(Win95 FAT32) partition using fdisk
$ fdisk fsg.block
5) insmod libcomposite.ko
6) insmod g_mass_storage.ko file=fsg.block stall=0
7) Plug devkit into a Host(assumming Windows). Windows will prompt to
format new drive. Format new driver using FAT32. After formatting is done,
copy files back and forth to the drive.

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
---
 arch/arm/configs/socfpga_defconfig | 2 ++
 drivers/usb/otg/dwc/Kconfig        | 2 ++
 drivers/usb/otg/dwc/pcd.c          | 9 +++++----
 3 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/arch/arm/configs/socfpga_defconfig b/arch/arm/configs/socfpga_defconfig
index a7eaca5..aeb6620 100644
--- a/arch/arm/configs/socfpga_defconfig
+++ b/arch/arm/configs/socfpga_defconfig
@@ -72,6 +72,8 @@ CONFIG_USB=y
 CONFIG_USB_STORAGE=y
 CONFIG_USB_GADGET=y
 # CONFIG_DWC_OTG_MODE is not set
+CONFIG_USB_LIBCOMPOSITE=m
+CONFIG_USB_MASS_STORAGE=m
 CONFIG_DWC_HOST_ONLY=y
 CONFIG_DWC_SLAVE=y
 CONFIG_MMC=y
diff --git a/drivers/usb/otg/dwc/Kconfig b/drivers/usb/otg/dwc/Kconfig
index 4d33d72..a056b4c 100644
--- a/drivers/usb/otg/dwc/Kconfig
+++ b/drivers/usb/otg/dwc/Kconfig
@@ -40,6 +40,8 @@ config DWC_OTG_MODE
 config DWC_DEVICE_ONLY
 	bool "DWC Device Only Mode"
 	select USB_GADGET_SELECTED
+	select USB_GADGET_DWC_HDRC
+	select USB_GADGET_DWC_OTG
 
 endchoice
 
diff --git a/drivers/usb/otg/dwc/pcd.c b/drivers/usb/otg/dwc/pcd.c
index 345617f..7307fb1 100644
--- a/drivers/usb/otg/dwc/pcd.c
+++ b/drivers/usb/otg/dwc/pcd.c
@@ -999,7 +999,7 @@ static int dwc_otg_pcd_ep_set_halt_wedge(struct usb_ep *_ep, int val, int wedged
 	spin_lock_irqsave(&ep->pcd->lock, flags);
 
 	if (ep->dwc_ep.is_in && !list_empty(&ep->queue)) {
-		printk(KERN_DEBUG "%s() %s XFer In process\n", __func__, _ep->name);
+		pr_debug("%s() %s XFer In process\n", __func__, _ep->name);
 		retval = -EAGAIN;
 	} else if (val == 0) {
 		ep->wedged = 0;
@@ -1220,7 +1220,7 @@ static int dwc_gadget_vbus_draw(struct usb_gadget *gadget, unsigned mA)
 
 }
 static int dwc_gadget_start(struct usb_gadget_driver *driver,
-			    int (*bind) (struct usb_gadget *));
+			    int (*bind)(struct usb_gadget *, struct usb_gadget_driver *));
 static int dwc_gadget_stop(struct usb_gadget_driver *driver);
 
 static const struct usb_gadget_ops dwc_otg_pcd_ops = {
@@ -1610,6 +1610,7 @@ int dwc_otg_pcd_init(struct device *dev)
 	pcd->gadget.dev.parent = dev;
 	pcd->gadget.dev.release = dwc_otg_pcd_gadget_release;
 	pcd->gadget.ops = &dwc_otg_pcd_ops;
+	pcd->gadget.max_speed = USB_SPEED_HIGH;
 
 	if (DWC_HWCFG4_DED_FIFO_ENA_RD(core_if->hwcfg4))
 		pr_info("Dedicated Tx FIFOs mode\n");
@@ -1717,7 +1718,7 @@ void dwc_otg_pcd_remove(struct device *dev)
  * then a host may connect again, or the driver might get unbound.
  */
 static int dwc_gadget_start(struct usb_gadget_driver *driver,
-			    int (*bind) (struct usb_gadget *))
+			    int (*bind)(struct usb_gadget *, struct usb_gadget_driver *))
 {
 	int retval;
 
@@ -1735,7 +1736,7 @@ static int dwc_gadget_start(struct usb_gadget_driver *driver,
 	s_pcd->driver = driver;
 	s_pcd->gadget.dev.driver = &driver->driver;
 
-	retval = bind(&s_pcd->gadget);
+	retval = bind(&s_pcd->gadget, driver);
 	if (retval) {
 		struct core_if *core_if;
 
-- 
1.9.1

