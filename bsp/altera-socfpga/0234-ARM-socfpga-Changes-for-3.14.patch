From e4f25c021cc093a637545441b47d986f7ee39b74 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Thu, 3 Apr 2014 14:11:46 -0500
Subject: [PATCH 234/248] ARM: socfpga: Changes for 3.14

For spi-dw.c and spi-dw-mmio.c:
In commit [04f421e7b0b spi: dw: use managed resources], parent_dev is removed.
Use dws->master->dev in place of parent_dev.

In m25p80.c:
In commit [3487a639 drivers: mtd: m25p80: add quad read support],
a define M25P80_QUAD_READ is mapped to 0x20 for flash_info, so have to
move USE_FSR to 0x40 and SHUTDOWN_3BYTE to 0x80

In socfpga.c:
in commit [938dfdaa3 net: stmmac: Allocate and pass soc/board specific data
to callbacks], the init function adds data point void *priv. We add it to
our platform specific initialiazation.

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
---
 arch/arm/mach-socfpga/socfpga.c |  4 ++--
 drivers/mtd/devices/m25p80.c    |  5 +++--
 drivers/spi/spi-dw-mmio.c       |  1 -
 drivers/spi/spi-dw.c            | 18 +++++++++---------
 4 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index 0e9fbd5..7c221ab 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -46,7 +46,7 @@ void __iomem *l3regs_base_addr;
 void __iomem *clk_mgr_base_addr;
 unsigned long cpu1start_addr;
 
-static int stmmac_plat_init(struct platform_device *pdev);
+static int stmmac_plat_init(struct platform_device *pdev, void *priv);
 
 static struct plat_stmmacenet_data stmmacenet0_data = {
 	.init = &stmmac_plat_init,
@@ -164,7 +164,7 @@ static void __init enable_periphs(void)
 	writel(rstval, rst_manager_base_addr + SOCFPGA_RSTMGR_MODPERRST);
 }
 
-static int stmmac_plat_init(struct platform_device *pdev)
+static int stmmac_plat_init(struct platform_device *pdev, void *priv)
 {
 	u32 ctrl, val, shift;
 	u32 rstmask;
diff --git a/drivers/mtd/devices/m25p80.c b/drivers/mtd/devices/m25p80.c
index d8be6e2..122f84a 100644
--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -970,8 +970,9 @@ struct flash_info {
 #define	SST_WRITE	0x04		/* use SST byte programming */
 #define	M25P_NO_FR	0x08		/* Can't do fastread */
 #define	SECT_4K_PMC	0x10		/* OPCODE_BE_4K_PMC works uniformly */
-#define	USE_FSR		0x20		/* use flag status register */
-#define	SHUTDOWN_3BYTE	0x40		/* set 3-byte mode on shutdown */
+#define M25P80_QUAD_READ	0x20
+#define	USE_FSR		0x40		/* use flag status register */
+#define	SHUTDOWN_3BYTE	0x80		/* set 3-byte mode on shutdown */
 };
 
 #define INFO(_jedec_id, _ext_id, _sector_size, _n_sectors, _flags)	\
diff --git a/drivers/spi/spi-dw-mmio.c b/drivers/spi/spi-dw-mmio.c
index 03d79af..ed60a4d 100644
--- a/drivers/spi/spi-dw-mmio.c
+++ b/drivers/spi/spi-dw-mmio.c
@@ -90,7 +90,6 @@ static int dw_spi_mmio_probe(struct platform_device *pdev)
 	dws->bus_num = 0;
 #endif
 
-	dws->parent_dev = &pdev->dev;
 	dws->max_freq = clk_get_rate(dwsmmio->clk);
 
 #ifdef CONFIG_SPI_DW_PL330_DMA
diff --git a/drivers/spi/spi-dw.c b/drivers/spi/spi-dw.c
index a36b8c3..2b0efaf 100644
--- a/drivers/spi/spi-dw.c
+++ b/drivers/spi/spi-dw.c
@@ -260,23 +260,23 @@ static int map_dma_buffers(struct dw_spi *dws)
 			dws->rx_dma = dws->cur_transfer->rx_dma;
 	} else {
 		if (dws->cur_transfer->tx_buf != NULL) {
-			dws->tx_dma = dma_map_single(dws->parent_dev,
+			dws->tx_dma = dma_map_single(dws->master->dev,
 					(void *)dws->cur_transfer->tx_buf,
 					dws->cur_transfer->len,
 					DMA_TO_DEVICE);
-			if (dma_mapping_error(dws->parent_dev, dws->tx_dma)) {
-				dev_err(dws->parent_dev, "dma_map_single Tx failed\n");
+			if (dma_mapping_error(dws->master->dev, dws->tx_dma)) {
+				dev_err(&dws->master->dev, "dma_map_single Tx failed\n");
 				return 0;
 			}
 		}
 
 		if (dws->cur_transfer->rx_buf != NULL) {
-			dws->rx_dma = dma_map_single(dws->parent_dev,
+			dws->rx_dma = dma_map_single(dws->master->dev,
 					dws->cur_transfer->rx_buf,
 					dws->cur_transfer->len, DMA_FROM_DEVICE);
-			if (dma_mapping_error(dws->parent_dev, dws->rx_dma)) {
-				dev_err(dws->parent_dev, "dma_map_single Rx failed\n");
-				dma_unmap_single(dws->parent_dev, dws->tx_dma,
+			if (dma_mapping_error(dws->master->dev, dws->rx_dma)) {
+				dev_err(&dws->master->dev, "dma_map_single Rx failed\n");
+				dma_unmap_single(dws->master->dev, dws->tx_dma,
 						dws->cur_transfer->len, DMA_TO_DEVICE);
 				return 0;
 			}
@@ -345,9 +345,9 @@ void dw_spi_xfer_done(struct dw_spi *dws)
 
 	if (dws->dma_mapped) {
 		if (!dws->cur_msg->is_dma_mapped) {
-			dma_unmap_single(dws->parent_dev, dws->rx_dma,
+			dma_unmap_single(&dws->master->dev, dws->rx_dma,
 						dws->cur_transfer->len, DMA_FROM_DEVICE);
-			dma_unmap_single(dws->parent_dev, dws->tx_dma,
+			dma_unmap_single(&dws->master->dev, dws->tx_dma,
 						dws->cur_transfer->len, DMA_TO_DEVICE);
 		}
 	}
-- 
1.9.1

