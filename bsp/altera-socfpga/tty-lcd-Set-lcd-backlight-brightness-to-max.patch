From 4e5b7650b8c567b075042107497c2d86ac708a59 Mon Sep 17 00:00:00 2001
From: Alan Tull <atull@altera.com>
Date: Fri, 15 Feb 2013 11:06:38 -0600
Subject: [PATCH 197/254] tty: lcd: Set lcd backlight brightness to max

Upstream: git://git.rocketboards.org/linux-socfpga.git

Some of the Newhaven LCD modules have the backlight turned off by
default.  Send an I2C command to the module during initialization
to set the backlight brightness to maximum to turn it on.

Add documentation for device tree bindings.

Signed-off-by: Alan Tull <atull@altera.com>
(cherry picked from commit 29db21aa4bf0bed4122b36333823f7d9aa3437de)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../devicetree/bindings/tty/newhaven_lcd.txt       |   21 ++++++++++++++++++++
 arch/arm/boot/dts/socfpga_cyclone5.dts             |    1 +
 drivers/tty/newhaven_lcd.c                         |   20 ++++++++++++++++++-
 3 files changed, 41 insertions(+), 1 deletions(-)
 create mode 100644 Documentation/devicetree/bindings/tty/newhaven_lcd.txt

diff --git a/Documentation/devicetree/bindings/tty/newhaven_lcd.txt b/Documentation/devicetree/bindings/tty/newhaven_lcd.txt
new file mode 100644
index 0000000..5ff0438
--- /dev/null
+++ b/Documentation/devicetree/bindings/tty/newhaven_lcd.txt
@@ -0,0 +1,21 @@
+* TTY on a Newhaven NHD‐0216K3Z‐NSW‐BBW LCD connected to I2C
+
+Required properties:
+- compatible: Should be "newhaven,nhd‐0216k3z‐nsw‐bbw";
+- reg: i2c address
+- height: should be 2 lines
+- width: should be 16 characters
+- brightness: backlight brightness. Range is 1 to 8, where
+              1=OFF and 8=maximum brightness.
+
+Example:
+
+&i2c0 {
+	lcd: lcd@28 {
+		compatible = "newhaven,nhd‐0216k3z‐nsw‐bbw";
+		reg = <0x28>;
+		height = <2>;
+		width = <16>;
+		brightness = <8>;
+	};
+
diff --git a/arch/arm/boot/dts/socfpga_cyclone5.dts b/arch/arm/boot/dts/socfpga_cyclone5.dts
index e66cb80..d220f00 100644
--- a/arch/arm/boot/dts/socfpga_cyclone5.dts
+++ b/arch/arm/boot/dts/socfpga_cyclone5.dts
@@ -199,6 +199,7 @@
 		reg = <0x28>;
 		height = <2>;
 		width = <16>;
+		brightness = <8>;
 	};
 
 	eeprom@51 {
diff --git a/drivers/tty/newhaven_lcd.c b/drivers/tty/newhaven_lcd.c
index 9fd25cf..14213d0 100644
--- a/drivers/tty/newhaven_lcd.c
+++ b/drivers/tty/newhaven_lcd.c
@@ -33,6 +33,10 @@
 #define LCD_SET_CURSOR          0x45
 #define LCD_BACKSPACE           0x4e
 #define LCD_CLEAR_SCREEN        0x51
+#define LCD_BRIGHTNESS          0x53
+
+#define LCD_BRIGHTNESS_MIN	1
+#define LCD_BRIGHTNESS_MAX	8
 
 #define ASCII_BS                0x08
 #define ASCII_LF                0x0a
@@ -82,6 +86,11 @@ static int lcd_cmd_one_param(struct lcd *lcd_data, u8 cmd, u8 param)
 	return 0;
 }
 
+static int lcd_cmd_backlight_brightness(struct lcd *lcd_data, u8 brightness)
+{
+	return lcd_cmd_one_param(lcd_data, LCD_BRIGHTNESS, brightness);
+}
+
 static int lcd_cmd_display_on(struct lcd *lcd_data)
 {
 	return lcd_cmd_no_params(lcd_data, LCD_DISPLAY_ON);
@@ -376,7 +385,7 @@ static int __devinit lcd_probe(struct i2c_client *client,
 	struct device_node *np = client->dev.of_node;
 	struct lcd *lcd_data;
 	struct tty_driver *lcd_tty_driver;
-	unsigned int width = 0, height = 0, i;
+	unsigned int width = 0, height = 0, i, brightness = 0;
 	char *buffer;
 	int ret = -ENOMEM;
 
@@ -389,6 +398,14 @@ static int __devinit lcd_probe(struct i2c_client *client,
 		goto err_devtree;
 	}
 
+	of_property_read_u32(np, "brightness", &brightness);
+	if ((brightness < LCD_BRIGHTNESS_MIN) ||
+	    (brightness > LCD_BRIGHTNESS_MAX)) {
+		dev_info(&client->dev,
+			"lcd brighness not set or out of range, defaulting to maximum\n");
+		brightness = LCD_BRIGHTNESS_MAX;
+	}
+
 	for (i = 0 ; i < MAX_LCDS ; i++)
 		if (lcd_data_static[i].client == NULL)
 			break;
@@ -435,6 +452,7 @@ static int __devinit lcd_probe(struct i2c_client *client,
 	lcd_clear_buffer(lcd_data);
 	lcd_cmd_display_on(lcd_data);
 	lcd_cmd_clear_screen(lcd_data);
+	lcd_cmd_backlight_brightness(lcd_data, brightness);
 
 	dev_info(&client->dev, "LCD driver initialized\n");
 
-- 
1.7.5.4

