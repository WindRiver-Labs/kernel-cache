From 6dda0cbb5a56ee2c56d478203093c6af6c6088d0 Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Fri, 23 May 2014 18:22:31 +0800
Subject: [PATCH 1/2] net: drivers: stmicro: Remove some useless the lock
 protection

kernel always invokes a pair of rtnl_lock adn rtnl_unlock to
protect dev_ethtool(), so its not neccessary to invoke spin_lock/unlock
in ethtool_ops.

When executing ./main_test.sh -s ETHERNET, the following call trace is triggered.
INFO: lockdep is turned off.
[<80018120>] (unwind_backtrace+0x0/0x104) from [<8069f500>] (dump_stack+0x20/0x24)
[<8069f500>] (dump_stack+0x20/0x24) from [<8005b6d0>] (__might_sleep+0x110/0x134)
[<8005b6d0>] (__might_sleep+0x110/0x134) from [<806aa794>] (mutex_lock_nested+0x38/0x394)
[<806aa794>] (mutex_lock_nested+0x38/0x394) from [<804ac490>] (phy_start_aneg+0x28/0x1d0)
[<804ac490>] (phy_start_aneg+0x28/0x1d0) from [<804ac6d8>] (phy_ethtool_sset+0xa0/0xcc)
[<804ac6d8>] (phy_ethtool_sset+0xa0/0xcc) from [<804b21d0>] (stmmac_ethtool_setsettings+0x38/0x4c)
[<804b21d0>] (stmmac_ethtool_setsettings+0x38/0x4c) from [<805930b4>] (dev_ethtool+0x4dc/0x1ed8)
[<805930b4>] (dev_ethtool+0x4dc/0x1ed8) from [<8059080c>] (dev_ioctl+0x3a0/0x95c)
[<8059080c>] (dev_ioctl+0x3a0/0x95c) from [<80573660>] (sock_ioctl+0xa8/0x380)
[<80573660>] (sock_ioctl+0xa8/0x380) from [<8015dc84>] (do_vfs_ioctl+0x94/0x5e8)
[<8015dc84>] (do_vfs_ioctl+0x94/0x5e8) from [<8015e270>] (sys_ioctl+0x98/0x124)
[<8015e270>] (sys_ioctl+0x98/0x124) from [<8000eb24>] (__sys_trace_return+0x0/0x1c)

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 .../net/ethernet/stmicro/stmmac/stmmac_ethtool.c   |    8 --------
 1 files changed, 0 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
index a49339d..a2f19e1 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
@@ -231,9 +231,7 @@ static int stmmac_ethtool_getsettings(struct net_device *dev,
 		return -EBUSY;
 	}
 	cmd->transceiver = XCVR_INTERNAL;
-	spin_lock_irq(&priv->lock);
 	rc = phy_ethtool_gset(phy, cmd);
-	spin_unlock_irq(&priv->lock);
 	return rc;
 }
 
@@ -244,9 +242,7 @@ static int stmmac_ethtool_setsettings(struct net_device *dev,
 	struct phy_device *phy = priv->phydev;
 	int rc;
 
-	spin_lock(&priv->lock);
 	rc = phy_ethtool_sset(phy, cmd);
-	spin_unlock(&priv->lock);
 
 	return rc;
 }
@@ -313,7 +309,6 @@ stmmac_get_pauseparam(struct net_device *netdev,
 {
 	struct stmmac_priv *priv = netdev_priv(netdev);
 
-	spin_lock(&priv->lock);
 
 	pause->rx_pause = 0;
 	pause->tx_pause = 0;
@@ -324,7 +319,6 @@ stmmac_get_pauseparam(struct net_device *netdev,
 	if (priv->flow_ctrl & FLOW_TX)
 		pause->tx_pause = 1;
 
-	spin_unlock(&priv->lock);
 }
 
 static int
@@ -336,7 +330,6 @@ stmmac_set_pauseparam(struct net_device *netdev,
 	int new_pause = FLOW_OFF;
 	int ret = 0;
 
-	spin_lock(&priv->lock);
 
 	if (pause->rx_pause)
 		new_pause |= FLOW_RX;
@@ -352,7 +345,6 @@ stmmac_set_pauseparam(struct net_device *netdev,
 	} else
 		priv->hw->mac->flow_ctrl(priv->ioaddr, phy->duplex,
 					 priv->flow_ctrl, priv->pause);
-	spin_unlock(&priv->lock);
 	return ret;
 }
 
-- 
1.7.5.4

