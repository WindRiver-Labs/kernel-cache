From eeff38031f00b899b960b96a7d27269c9c9d1950 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Mon, 7 Jan 2013 21:25:11 -0600
Subject: [PATCH 175/254] arm: socfpga: Upgrade socfpga to v3.7

Upstream: git://git.rocketboards.org/linux-socfpga.git

Biggest change in v3.7 is the usage of ARM multiplatform.

Because of multiplatform, the usage of Makefile.boot is gone and the
config AUTO_ZRELADDR is used. Since I don't have a 100% grasp of
a this concept, to make sure that your uImage has the correct entry
address, you need to run this:

'make uImage LOADADDR=0x8000'

Another side affect of v3.7 multiplatform is that this config option:
CONFIG_ARCH_VEXPRESS_CORTEX_A5_A9_ERRATA gets enabled when
socfpga_defconfig is used. This is perfectly acceptable on HW, but if
you would like to use VT, then CONFIG_ARCH_VEXPRESS_CORTEX_A5_A9_ERRATA
along with CONFIG_ARM_ERRATA_751472 needs to be disabled.

Also new in v3.7 is the conversion for platform SMP funtions to
use a unified smp_operations function.

A change in /arm/include/asm/io.h is generating alot of warnings from
the usage of __raw_writel() and __raw_readl() in the DWC OTG driver.
A fix for this will be done when the DWC OTG driver is rewritten.

Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
(cherry picked from commit 5d2577b44ee162f5306a4b59fbf1fa9bad21af95)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/boot/dts/socfpga.dtsi     |    2 +-
 arch/arm/configs/socfpga_defconfig |    2 -
 arch/arm/mach-socfpga/core.h       |    7 ++--
 arch/arm/mach-socfpga/headsmp.S    |   65 ++++++++++++++++++++++++++++++++---
 arch/arm/mach-socfpga/hotplug.c    |   53 -----------------------------
 arch/arm/mach-socfpga/platsmp.c    |   10 +++---
 arch/arm/mach-socfpga/socfpga.c    |    4 +-
 drivers/clk/socfpga/clk.c          |    2 +-
 drivers/usb/otg/dwc/cil_intr.c     |    2 +-
 drivers/usb/otg/dwc/platform.c     |    1 +
 10 files changed, 73 insertions(+), 75 deletions(-)
 delete mode 100644 arch/arm/mach-socfpga/hotplug.c

diff --git a/arch/arm/boot/dts/socfpga.dtsi b/arch/arm/boot/dts/socfpga.dtsi
index 3cd2916..15dd1c7 100644
--- a/arch/arm/boot/dts/socfpga.dtsi
+++ b/arch/arm/boot/dts/socfpga.dtsi
@@ -149,7 +149,7 @@
 			compatible = "snps,dw-mshc";
 			reg = <0xff704000 0x1000>;
 			interrupts = <0 139 4>;
-			bus-hz = <12500000>; /*12.5 MHz*/
+			bus-hz = <50000000>; /*50 MHz*/
 			#address-cells = <1>;
 			#size-cells = <0>;
 			num-slots = <1>;
diff --git a/arch/arm/configs/socfpga_defconfig b/arch/arm/configs/socfpga_defconfig
index c543cf3..7949ce2 100644
--- a/arch/arm/configs/socfpga_defconfig
+++ b/arch/arm/configs/socfpga_defconfig
@@ -70,8 +70,6 @@ CONFIG_SERIAL_8250_DW=y
 CONFIG_USB=y
 CONFIG_USB_STORAGE=y
 CONFIG_USB_GADGET=y
-CONFIG_USB_GADGET_DWC_HDRC=y
-CONFIG_USB_MASS_STORAGE=y
 CONFIG_DWC_OTG_MODE=y
 CONFIG_MMC=y
 CONFIG_MMC_DW=y
diff --git a/arch/arm/mach-socfpga/core.h b/arch/arm/mach-socfpga/core.h
index 31507ba..1895b38 100644
--- a/arch/arm/mach-socfpga/core.h
+++ b/arch/arm/mach-socfpga/core.h
@@ -28,16 +28,15 @@ extern void __iomem *socfpga_scu_base_addr;
 extern void __iomem *sys_manager_base_addr;
 extern void __iomem *rst_manager_base_addr;
 
-extern void socfpga_secondary_startup(void);
-extern void socfpga_cpu_die(unsigned int cpu);
 extern void socfpga_init_clocks(void);
 
+extern void v7_secondary_startup(void);
+extern struct smp_operations socfpga_smp_ops;
 extern char secondary_trampoline, secondary_trampoline_end;
 
 extern struct dw_mci_board sdmmc_platform_data;
 extern unsigned long cpu1start_addr;
 
-#define SOCFPGA_SCU_VIRT_BASE	0xfffec000
-#define SOCFPGA_SDMMC_BASE	0xff704000
+#define SOCFPGA_SCU_VIRT_BASE   0xfffec000
 
 #endif /* __CORE_H */
diff --git a/arch/arm/mach-socfpga/headsmp.S b/arch/arm/mach-socfpga/headsmp.S
index 164c42c..a77e3c6 100644
--- a/arch/arm/mach-socfpga/headsmp.S
+++ b/arch/arm/mach-socfpga/headsmp.S
@@ -10,16 +10,69 @@
 #include <linux/linkage.h>
 #include <linux/init.h>
 
-	__INIT
+	__CPUINIT
 	.arch   armv7-a
 
-#define CPU1_START_ADDR 	        0xffd08010
-
 ENTRY(secondary_trampoline)
-	movw	r0, #:lower16:CPU1_START_ADDR
-	movt  r0, #:upper16:CPU1_START_ADDR
-
+	movw	r2, #:lower16:cpu1start_addr
+	movt  r2, #:upper16:cpu1start_addr
+	
+	ldr	r0, [r2]
 	ldr	r1, [r0]
 	bx	r1
 
 ENTRY(secondary_trampoline_end)
+
+/*
+ * The secondary kernel init calls v7_flush_dcache_all before it enables
+ * the L1; however, the L1 comes out of reset in an undefined state, so
+ * the clean + invalidate performed by v7_flush_dcache_all causes a bunch
+ * of cache lines with uninitialized data and uninitialized tags to get
+ * written out to memory, which does really unpleasant things to the main
+ * processor.  We fix this by performing an invalidate, rather than a
+ * clean + invalidate, before jumping into the kernel.
+ *
+ * This funciton is cloned from arch/arm/mach-tegra/headsmp.S, and needs
+ * to be called for both secondary cores startup and primary core resume
+ * procedures.  Ideally, it should be moved into arch/arm/mm/cache-v7.S.
+ */
+ENTRY(v7_invalidate_l1)
+	mov	r0, #0
+	mcr	p15, 0, r0, c7, c5, 0	@ invalidate I cache
+	mcr	p15, 2, r0, c0, c0, 0
+	mrc	p15, 1, r0, c0, c0, 0
+
+	ldr	r1, =0x7fff
+	and	r2, r1, r0, lsr #13
+
+	ldr	r1, =0x3ff
+
+	and	r3, r1, r0, lsr #3	@ NumWays - 1
+	add	r2, r2, #1		@ NumSets
+
+	and	r0, r0, #0x7
+	add	r0, r0, #4	@ SetShift
+
+	clz	r1, r3		@ WayShift
+	add	r4, r3, #1	@ NumWays
+1:	sub	r2, r2, #1	@ NumSets--
+	mov	r3, r4		@ Temp = NumWays
+2:	subs	r3, r3, #1	@ Temp--
+	mov	r5, r3, lsl r1
+	mov	r6, r2, lsl r0
+	orr	r5, r5, r6	@ Reg = (Temp<<WayShift)|(NumSets<<SetShift)
+	mcr	p15, 0, r5, c7, c6, 2
+	bgt	2b
+	cmp	r2, #0
+	bgt	1b
+	dsb
+	isb
+	mov	pc, lr
+ENDPROC(v7_invalidate_l1)
+
+#ifdef CONFIG_SMP
+ENTRY(v7_secondary_startup)
+	bl	v7_invalidate_l1
+	b	secondary_startup
+ENDPROC(v7_secondary_startup)
+#endif
diff --git a/arch/arm/mach-socfpga/hotplug.c b/arch/arm/mach-socfpga/hotplug.c
deleted file mode 100644
index e04dcca..0000000
--- a/arch/arm/mach-socfpga/hotplug.c
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Copyright 2011 Freescale Semiconductor, Inc.
- * Copyright 2011 Linaro Ltd.
- *
- * The code contained herein is licensed under the GNU General Public
- * License. You may obtain a copy of the GNU General Public License
- * Version 2 or later at the following locations:
- *
- * http://www.opensource.org/licenses/gpl-license.html
- * http://www.gnu.org/copyleft/gpl.html
- */
-
-#include <linux/errno.h>
-#include <asm/cacheflush.h>
-#include <asm/cp15.h>
-
-static inline void cpu_enter_lowpower(void)
-{
-}
-
-static inline void cpu_leave_lowpower(void)
-{
-}
-
-int platform_cpu_kill(unsigned int cpu)
-{
-	return 1;
-}
-
-/*
- * platform-specific code to shutdown a CPU
- *
- * Called with IRQs disabled
- */
-void __ref platform_cpu_die(unsigned int cpu)
-{
-	cpu_enter_lowpower();
-
-	cpu_do_idle();
-	cpu_leave_lowpower();
-
-	/* We should never return from idle */
-	panic("cpu %d unexpectedly exit from shutdown\n", cpu);
-}
-
-int platform_cpu_disable(unsigned int cpu)
-{
-	/*
-	 * CPU0 should not be shut down via hotplug.  cpu_idle can WFI
-	 * or a proper shutdown or hibernate should be used.
-	 */
-	return cpu == 0 ? -EPERM : 0;
-}
diff --git a/arch/arm/mach-socfpga/platsmp.c b/arch/arm/mach-socfpga/platsmp.c
index 22ce07f..215924b 100644
--- a/arch/arm/mach-socfpga/platsmp.c
+++ b/arch/arm/mach-socfpga/platsmp.c
@@ -30,7 +30,7 @@
 
 #include "core.h"
 
-void __cpuinit platform_secondary_init(unsigned int cpu)
+static void __cpuinit socfpga_secondary_init(unsigned int cpu)
 {
 	/*
 	 * if any interrupts are already enabled for the primary
@@ -46,8 +46,8 @@ static int __cpuinit socfpga_boot_secondary(unsigned int cpu, struct task_struct
 
 	memcpy(phys_to_virt(0), &secondary_trampoline, trampoline_size);
 
-	__raw_writel(virt_to_phys(secondary_startup),
-					(sys_manager_base_addr+cpu1start_addr));
+	__raw_writel(virt_to_phys(v7_secondary_startup),
+		(sys_manager_base_addr+(cpu1start_addr & 0x000000ff)));
 
 	flush_cache_all();
 	smp_wmb();
@@ -74,8 +74,8 @@ static void __init socfpga_smp_init_cpus(void)
 
 	/* sanity check */
 	if (ncores > num_possible_cpus()) {
-		pr_warn("# of cores (%d) greater maximum of %d\n",
-			ncores, num_possible_cpus());
+		pr_warn("socfpga: no. of cores (%d) greater than configured"
+			"maximum of %d - clipping\n", ncores, num_possible_cpus());
 		ncores = num_possible_cpus();
 	}
 
diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index 678148c..f898630 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -71,12 +71,12 @@ static void __init socfpga_scu_map_io(void)
 
 static void __init init_socfpga_vt(void)
 {
-	cpu1start_addr = 0x10;
+	cpu1start_addr = 0xffd08010;
 }
 
 static void __init init_socfpga(void)
 {
-	cpu1start_addr = 0xc4;
+	cpu1start_addr = 0xffd080c4;
 }
 
 static void __init enable_periphs(void)
diff --git a/drivers/clk/socfpga/clk.c b/drivers/clk/socfpga/clk.c
index d76f044..b1c2c5e 100644
--- a/drivers/clk/socfpga/clk.c
+++ b/drivers/clk/socfpga/clk.c
@@ -82,7 +82,7 @@ void __init socfpga_init_clocks(void)
 	clk = clk_register_fixed_rate(NULL, "dbg_base_clk", NULL, CLK_IS_ROOT, SOCFPGA_MPU_CLK/2);
 	clk_register_clkdev(clk, "dbg_base_clk", NULL);
 
-	clk = clk_register_fixed_rate(NULL, "smp_twd", NULL, CLK_IS_ROOT, SOCFPGA_MPU_CLK/2);
+	clk = clk_register_fixed_rate(NULL, "smp_twd", NULL, CLK_IS_ROOT, SOCFPGA_MPU_CLK/4);
 	clk_register_clkdev(clk, NULL, "smp_twd");
 
 	clk = clk_register_fixed_rate(NULL, "main_qspi_clk", NULL, CLK_IS_ROOT, SOCFPGA_MAIN_QSPI_CLK);
diff --git a/drivers/usb/otg/dwc/cil_intr.c b/drivers/usb/otg/dwc/cil_intr.c
index ec5b3a7..9406edd 100644
--- a/drivers/usb/otg/dwc/cil_intr.c
+++ b/drivers/usb/otg/dwc/cil_intr.c
@@ -296,7 +296,7 @@ static void port_otg_wqfunc(struct work_struct *work)
 	u32 count = 0;
 	u32 gotgctl;
 
-	pr_info("%s\n", __func__);
+	pr_debug("%s\n", __func__);
 
 	gotgctl = dwc_reg_read(global_regs, DWC_GOTGCTL);
 	if (gotgctl & DWC_GCTL_CONN_ID_STATUS) {
diff --git a/drivers/usb/otg/dwc/platform.c b/drivers/usb/otg/dwc/platform.c
index a050f2e..71e2fb5 100644
--- a/drivers/usb/otg/dwc/platform.c
+++ b/drivers/usb/otg/dwc/platform.c
@@ -52,6 +52,7 @@
  */
 
 #include <linux/usb/dwc_otg.h>
+#include <linux/usb/nop-usb-xceiv.h>
 #include <linux/platform_device.h>
 #include <linux/of_platform.h>
 
-- 
1.7.5.4

