From af5c47c48a3365ac315508d9bd49d4a610e24131 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Tue, 14 Jan 2014 14:05:02 -0600
Subject: [PATCH 173/248] FogBugz #176300: Add support for multiple clock
 parents

The periph and sdram PLL can have any of 3 parents. For the perip pll, the
parents can be either: osc1, osc2, or f2s_periph_ref_clk. For the sdram pll,
the parents can be: osc1, osc2, or f2s_sdram_ref_clk.

Update the clock driver to read the appropriate register for determine the
correct parent for the periph and sdram PLL.

Add the new clock entries into the socfpga DTSI file. Also remove the
"clock-frequency" property for the f2s_periph_ref_clk from the DTSI file, as
this property should be in the DTS file.

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
---
 arch/arm/boot/dts/socfpga.dtsi | 23 ++++++++++++++++-------
 drivers/clk/socfpga/clk.c      | 27 +++++++++++++++++++++++++++
 2 files changed, 43 insertions(+), 7 deletions(-)

diff --git a/arch/arm/boot/dts/socfpga.dtsi b/arch/arm/boot/dts/socfpga.dtsi
index 04eac7c..c601f2f 100644
--- a/arch/arm/boot/dts/socfpga.dtsi
+++ b/arch/arm/boot/dts/socfpga.dtsi
@@ -93,7 +93,12 @@
 					#address-cells = <1>;
 					#size-cells = <0>;
 
-					osc: osc1 {
+					osc1: osc1 {
+						#clock-cells = <0>;
+						compatible = "fixed-clock";
+					};
+
+					osc2: osc2 {
 						#clock-cells = <0>;
 						compatible = "fixed-clock";
 					};
@@ -101,7 +106,11 @@
 					f2s_periph_ref_clk: f2s_periph_ref_clk {
 						#clock-cells = <0>;
 						compatible = "fixed-clock";
-						clock-frequency = <10000000>;
+					};
+
+					f2s_sdram_ref_clk: f2s_sdram_ref_clk {
+						#clock-cells = <0>;
+						compatible = "fixed-clock";
 					};
 
 					main_pll: main_pll {
@@ -109,7 +118,7 @@
 						#size-cells = <0>;
 						#clock-cells = <0>;
 						compatible = "altr,socfpga-pll-clock";
-						clocks = <&osc>;
+						clocks = <&osc1>;
 						reg = <0x40>;
 
 						mpuclk: mpuclk {
@@ -163,7 +172,7 @@
 						#size-cells = <0>;
 						#clock-cells = <0>;
 						compatible = "altr,socfpga-pll-clock";
-						clocks = <&osc>;
+						clocks = <&osc1>, <&osc2>, <&f2s_periph_ref_clk>;
 						reg = <0x80>;
 
 						emac0_clk: emac0_clk {
@@ -214,7 +223,7 @@
 						#size-cells = <0>;
 						#clock-cells = <0>;
 						compatible = "altr,socfpga-pll-clock";
-						clocks = <&osc>;
+						clocks = <&osc1>, <&osc2>, <&f2s_sdram_ref_clk>;
 						reg = <0xC0>;
 
 						ddr_dqs_clk: ddr_dqs_clk {
@@ -769,7 +778,7 @@
 			compatible = "snps,dw-apb-timer";
 			interrupts = <0 169 4>;
 			reg = <0xffd00000 0x1000>;
-			clocks = <&osc>;
+			clocks = <&osc1>;
 			clock-names = "timer";
 		};
 
@@ -777,7 +786,7 @@
 			compatible = "snps,dw-apb-timer";
 			interrupts = <0 170 4>;
 			reg = <0xffd01000 0x1000>;
-			clocks = <&osc>;
+			clocks = <&osc1>;
 			clock-names = "timer";
 		};
 
diff --git a/drivers/clk/socfpga/clk.c b/drivers/clk/socfpga/clk.c
index 0a4c529..b1ff93b 100644
--- a/drivers/clk/socfpga/clk.c
+++ b/drivers/clk/socfpga/clk.c
@@ -28,7 +28,15 @@
 #define CLKMGR_CTRL	0x0
 #define CLKMGR_BYPASS	0x4
 #define CLKMGR_L4SRC	0x70
+#define CLKMGR_PERIP_VCO	0x80
 #define CLKMGR_PERPLL_SRC	0xAC
+#define CLKMGR_SDRAM_VCO	0xC0
+
+#define CLK_MGR_PERIP_PLL_CLK_SRC_SHIFT	22
+#define CLK_MGR_PERIP_PLL_CLK_SRC_MASK	0x3
+
+#define CLK_MGR_SDRAM_CLK_SRC_SHIFT	22
+#define CLK_MGR_SDRAM_CLK_SRC_MASK	0x3
 
 /* Clock bypass bits */
 #define MAINPLL_BYPASS		(1<<0)
@@ -52,6 +60,8 @@
 #define SOCFPGA_NAND_X_CLK		"nand_x_clk"
 #define SOCFPGA_MMC_CLK			"sdmmc_clk"
 #define SOCFPGA_DB_CLK			"gpio_db_clk"
+#define SOCFPGA_PERIP_PLL_CLK		"periph_pll"
+#define SOCFPGA_SDRAM_PLL_CLK		"sdram_pll"
 
 #define div_mask(width)	((1 << (width)) - 1)
 #define streq(a, b) (strcmp((a), (b)) == 0)
@@ -87,9 +97,26 @@ static unsigned long clk_pll_recalc_rate(struct clk_hw *hwclk,
 	return vco_freq / (1 + divq);
 }
 
+static u8 clk_pll_get_parent(struct clk_hw *hwclk)
+{
+	u32 pll_src;
+
+	if (streq(hwclk->init->name, SOCFPGA_PERIP_PLL_CLK)) {
+		pll_src = readl(clk_mgr_base_addr + CLKMGR_PERIP_VCO);
+		return (pll_src >> CLK_MGR_PERIP_PLL_CLK_SRC_SHIFT) &
+				CLK_MGR_PERIP_PLL_CLK_SRC_MASK;
+	} else if (streq(hwclk->init->name, SOCFPGA_SDRAM_PLL_CLK)) {
+		pll_src = readl(clk_mgr_base_addr + CLKMGR_SDRAM_VCO);
+		return (pll_src >> CLK_MGR_SDRAM_CLK_SRC_SHIFT) &
+				CLK_MGR_SDRAM_CLK_SRC_MASK;
+	}
+	return 0;
+}
+
 
 static struct clk_ops clk_pll_ops = {
 	.recalc_rate = clk_pll_recalc_rate,
+	.get_parent = clk_pll_get_parent,
 };
 
 static unsigned long clk_periclk_recalc_rate(struct clk_hw *hwclk,
-- 
1.9.1

