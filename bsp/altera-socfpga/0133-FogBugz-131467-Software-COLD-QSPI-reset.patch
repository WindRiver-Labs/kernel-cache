From a221d689ea14b9e487a3b36e5da12a3804cf45d8 Mon Sep 17 00:00:00 2001
From: Graham Moore <grmoore@altera.com>
Date: Wed, 28 Aug 2013 12:43:54 -0500
Subject: [PATCH 133/248] FogBugz #131467: Software COLD QSPI reset

Set 3-byte addressing mode upon shutdown.
Devicetree changes for n25q512 device.

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Graham Moore <grmoore@altera.com>
---
 arch/arm/boot/dts/socfpga_arria5.dts    | 43 +++++++++------------------------
 arch/arm/boot/dts/socfpga_cyclone5.dtsi |  4 +--
 drivers/mtd/devices/m25p80.c            | 18 +++++++++++---
 3 files changed, 29 insertions(+), 36 deletions(-)

diff --git a/arch/arm/boot/dts/socfpga_arria5.dts b/arch/arm/boot/dts/socfpga_arria5.dts
index 18b1003..2115cc7 100644
--- a/arch/arm/boot/dts/socfpga_arria5.dts
+++ b/arch/arm/boot/dts/socfpga_arria5.dts
@@ -84,52 +84,33 @@
 			fifo-depth = <128>;
 			bus-num = <2>;
 
-			flash0: n25q00@0 {
+			flash0: n25q512a@0 {
 				#address-cells = <1>;
 				#size-cells = <1>;
-				compatible = "n25q00";
+				compatible = "n25q512a";
 				reg = <0>;      /* chip select */
 				spi-max-frequency = <100000000>;
+				m25p,fast-read;
 				page-size = <256>;
 				block-size = <16>; /* 2^16, 64KB */
-				quad = <1>;        /* 1-support quad */
-				tshsl-ns = <200>;
-				tsd2d-ns = <255>;
-				tchsh-ns = <20>;
-				tslch-ns = <20>;
+				read-delay = <4>;  /* delay value in read data capture register */
+				tshsl-ns = <50>;
+				tsd2d-ns = <50>;
+				tchsh-ns = <4>;
+				tslch-ns = <4>;
 
-				partition@0 {
+				partition@qspi-boot {
 					/* 8MB for raw data. */
 					label = "Flash 0 Raw Data";
 					reg = <0x0 0x800000>;
 				};
-				partition@800000 {
-					/* 8MB for jffs2 data. */
+				partition@qspi-rootfs {
+					/* 56MB for jffs2 data. */
 					label = "Flash 0 jffs2 Filesystem";
-					reg = <0x800000 0x800000>;
+					reg = <0x800000 0x3800000>;
 				};
 			};
 
-			flash1: n25q128@1 {
-				#address-cells = <1>;
-				#size-cells = <1>;
-				compatible = "n25q128";
-				reg = <1>;      /* chip select */
-				spi-max-frequency = <100000000>;
-				page-size = <256>;
-				block-size = <16>; /* 2^16, 64KB */
-				quad = <1>;
-				tshsl-ns = <200>;
-				tsd2d-ns = <255>;
-				tchsh-ns = <20>;
-				tslch-ns = <20>;
-
-				partition@0 {
-					/* 16MB for user data. */
-					label = "Flash 1 User Data";
-					reg = <0x0 0x1000000>;
-				};
-			};
 		};
 
 		timer0@ffc08000 {
diff --git a/arch/arm/boot/dts/socfpga_cyclone5.dtsi b/arch/arm/boot/dts/socfpga_cyclone5.dtsi
index 6d90c62..4172b90 100644
--- a/arch/arm/boot/dts/socfpga_cyclone5.dtsi
+++ b/arch/arm/boot/dts/socfpga_cyclone5.dtsi
@@ -100,12 +100,12 @@
 				tchsh-ns = <4>;
 				tslch-ns = <4>;
 
-				partition@0 {
+				partition@qspi-boot {
 					/* 8MB for raw data. */
 					label = "Flash 0 Raw Data";
 					reg = <0x0 0x800000>;
 				};
-				partition@800000 {
+				partition@qspi-rootfs {
 					/* 120MB for jffs2 data. */
 					label = "Flash 0 jffs2 Filesystem";
 					reg = <0x800000 0x7800000>;
diff --git a/drivers/mtd/devices/m25p80.c b/drivers/mtd/devices/m25p80.c
index 9aa01d8..706b724 100644
--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -129,6 +129,7 @@ struct m25p {
 	u8			*command;
 	enum read_type		flash_read;
 	bool			fast_read;
+	struct flash_info *info;
 	int (*wait_till_ready)(struct m25p *flash);
 };
 
@@ -970,7 +971,8 @@ struct flash_info {
 #define	M25P_NO_FR	0x08		/* Can't do fastread */
 #define	SECT_4K_PMC	0x10		/* OPCODE_BE_4K_PMC works uniformly */
 #define	M25P80_QUAD_READ	0x20    /* Flash supports Quad Read */
-#define	USE_FSR   0x04    /* use flag status register */
+#define	USE_FSR   0x08    /* use flag status register */
+#define	SHUTDOWN_3BYTE   0x10    /* set 3-byte mode on shutdown */
 };
 
 #define INFO(_jedec_id, _ext_id, _sector_size, _n_sectors, _flags)	\
@@ -1059,8 +1061,10 @@ static const struct spi_device_id m25p_ids[] = {
 	{ "n25q128a11",  INFO(0x20bb18, 0, 64 * 1024,  256, 0) },
 	{ "n25q128a13",  INFO(0x20ba18, 0, 64 * 1024,  256, 0) },
 	{ "n25q256a",    INFO(0x20ba19, 0, 64 * 1024,  512, SECT_4K) },
-	{ "n25q512a",    INFO(0x20bb20, 0, 64 * 1024, 1024, SECT_4K) },
-	{ "n25q00",   INFO(0x20ba21, 0, 64 * 1024, 2048, USE_FSR) },
+	{ "n25q512a", INFO(0x20ba20, 0, 64 * 1024, 1024,
+		USE_FSR|SHUTDOWN_3BYTE) },
+	{ "n25q00",   INFO(0x20ba21, 0, 64 * 1024, 2048,
+		USE_FSR|SHUTDOWN_3BYTE) },
 
 	/* PMC */
 	{ "pm25lv512",   INFO(0,        0, 32 * 1024,    2, SECT_4K_PMC) },
@@ -1271,6 +1275,7 @@ static int m25p_probe(struct spi_device *spi)
 	if (!flash->command)
 		return -ENOMEM;
 
+	flash->info = info;
 	flash->spi = spi;
 	mutex_init(&flash->lock);
 	spi_set_drvdata(spi, flash);
@@ -1460,6 +1465,12 @@ static int m25p_remove(struct spi_device *spi)
 	return mtd_device_unregister(&flash->mtd);
 }
 
+static void m25p_shutdown(struct spi_device *spi)
+{
+	struct m25p	*flash = dev_get_drvdata(&spi->dev);
+	if (flash->info->flags & SHUTDOWN_3BYTE)
+		set_4byte(flash, flash->info->jedec_id, 0);
+}
 
 static struct spi_driver m25p80_driver = {
 	.driver = {
@@ -1469,6 +1480,7 @@ static struct spi_driver m25p80_driver = {
 	.id_table	= m25p_ids,
 	.probe	= m25p_probe,
 	.remove	= m25p_remove,
+	.shutdown = m25p_shutdown,
 
 	/* REVISIT: many of these chips have deep power-down modes, which
 	 * should clearly be entered on suspend() to minimize power use.
-- 
1.9.1

