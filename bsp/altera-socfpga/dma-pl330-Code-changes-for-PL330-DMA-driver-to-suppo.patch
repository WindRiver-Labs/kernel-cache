From 880f56b98617bcd05fd7fd9ac7a667fdc93c432b Mon Sep 17 00:00:00 2001
From: graham <grmoore@altera.com>
Date: Mon, 22 Jul 2013 15:43:01 -0500
Subject: [PATCH 05/10] dma/pl330: Code changes for PL330 DMA driver to
 support socfpga CycloneV

commit 17213c02ead3c61b17ee155bfc7c1833a4302c7f
 git://git.rocketboards.org/linux-socfpga.git socfpga-3.13 branch

Increased number of amba device irqs to support 8 DMA channels.
Fixed NULL pointer error.
Added check for aborted DMA transactions.
Added code to read copy-align parameter from device tree.

Signed-off-by: graham <grmoore@altera.com>

V2:

Add #ifdef CONFIG_ARCH_SOCFPGA to include/linux/amba/bus.h so that
these changes do not affect other platforms

We tried integrating Lee Booi's code for 8-1 irq mapping, but were unable
to get it working in time for the code freeze.  We will file a FogBugz
immediately which flags this commit as an incorrect implemention.  Then we
will get Lee Booi's code working.

V3:

Added comment at line 1752 in pl330.c to explain need for id == -1 check.
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/dma/pl330.c      |   41 +++++++++++++++++++++++++++++------------
 include/linux/amba/bus.h |    4 ++++
 2 files changed, 33 insertions(+), 12 deletions(-)

diff --git a/drivers/dma/pl330.c b/drivers/dma/pl330.c
index 1f1f276..a178120 100755
--- a/drivers/dma/pl330.c
+++ b/drivers/dma/pl330.c
@@ -1727,6 +1727,10 @@ static int pl330_update(const struct pl330_info *pi)
 			ret = 1;
 
 			id = pl330->events[ev];
+			/* If error occurs when running dmatest, then id is -1,
+				which causes crash below, so skip to next event */
+			if (id == -1)
+				continue;
 
 			thrd = &pl330->channels[id];
 
@@ -2870,18 +2874,15 @@ pl330_probe(struct amba_device *adev, const struct amba_id *id)
 
 	for (i = 0; i <= AMBA_NR_IRQS; i++) {
 		irq = adev->irq[i];
-		if (irq) {
-			ret = devm_request_irq(&adev->dev, irq,
-					       pl330_irq_handler, 0,
-					       dev_name(&adev->dev), pi);
-			if (ret)
-				return ret;
-		} else {
+		if (irq == 0)
 			break;
-		}
+		ret = request_irq(irq, pl330_irq_handler, 0,
+				dev_name(&adev->dev), pi);
+		if (ret)
+			goto probe_err3;
 	}
 
-	if (pdat->init) {
+	if (pdat && pdat->init) {
 		ret = pdat->init(adev);
 		if (ret)
 			goto probe_err3;
@@ -2948,6 +2949,12 @@ pl330_probe(struct amba_device *adev, const struct amba_id *id)
 	pd->device_control = pl330_control;
 	pd->device_issue_pending = pl330_issue_pending;
 
+	if (adev->dev.of_node) {
+		u32 val;
+		if (!of_property_read_u32(adev->dev.of_node,
+			"copy-align", &val))
+			pd->copy_align = val;
+	}
 	ret = dma_async_device_register(pd);
 	if (ret) {
 		dev_err(&adev->dev, "unable to register DMAC\n");
@@ -2967,7 +2974,12 @@ pl330_probe(struct amba_device *adev, const struct amba_id *id)
 probe_err4:
 	pl330_del(pi);
 probe_err3:
-	free_irq(irq, pi);
+	for (i = 0; i < AMBA_NR_IRQS; i++) {
+		irq = adev->irq[i];
+		if (irq == 0)
+			break;
+		free_irq(irq, pi);
+	}
 probe_err2:
 	iounmap(pi->base);
 probe_err1:
@@ -2985,6 +2997,7 @@ static int __devexit pl330_remove(struct amba_device *adev)
 	struct pl330_info *pi;
 	struct resource *res;
 	int irq;
+	int i;
 
 	if (!pdmac)
 		return 0;
@@ -3007,8 +3020,12 @@ static int __devexit pl330_remove(struct amba_device *adev)
 
 	pl330_del(pi);
 
-	irq = adev->irq[0];
-	free_irq(irq, pi);
+	for (i = 0; i < AMBA_NR_IRQS; i++) {
+		irq = adev->irq[i];
+		if (irq == 0)
+			break;
+		free_irq(irq, pi);
+	}
 
 	iounmap(pi->base);
 
diff --git a/include/linux/amba/bus.h b/include/linux/amba/bus.h
index 8d54f79..2e520a1 100644
--- a/include/linux/amba/bus.h
+++ b/include/linux/amba/bus.h
@@ -21,7 +21,11 @@
 #include <linux/resource.h>
 #include <linux/regulator/consumer.h>
 
+#ifdef CONFIG_ARCH_SOCFPGA
+#define AMBA_NR_IRQS	8
+#else
 #define AMBA_NR_IRQS	2
+#endif
 #define AMBA_CID	0xb105f00d
 
 struct clk;
-- 
1.7.5.4

