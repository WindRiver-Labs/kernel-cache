From f1c36cb4f8a9cf611190d150772fcc62bde9cae0 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Thu, 13 Jun 2013 16:23:47 -0500
Subject: [PATCH 099/248] FogBugz #130616: Convert SOCFPGA to use standard
 phylib API

Use the standard phylib API for setting the phy's skew paramaters.

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
---
 arch/arm/mach-socfpga/socfpga.c                    | 76 +++++-----------------
 drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c  |  8 ++-
 .../net/ethernet/stmicro/stmmac/stmmac_platform.c  |  4 +-
 3 files changed, 21 insertions(+), 67 deletions(-)

diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index 4ed6736..d4f4a1f 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -42,20 +42,13 @@ void __iomem *rst_manager_base_addr;
 void __iomem *clk_mgr_base_addr;
 unsigned long	cpu1start_addr;
 
-static int socfpga_phy_reset_mii(struct mii_bus *bus, int phyaddr);
 static int stmmac_plat_init(struct platform_device *pdev);
 
-static struct stmmac_mdio_bus_data stmmacenet_mdio_bus_data = {
-	.phy_reset_mii = socfpga_phy_reset_mii,
-};
-
 static struct plat_stmmacenet_data stmmacenet0_data = {
-	.mdio_bus_data = &stmmacenet_mdio_bus_data,
 	.init = &stmmac_plat_init,
 };
 
 static struct plat_stmmacenet_data stmmacenet1_data = {
-	.mdio_bus_data = &stmmacenet_mdio_bus_data,
 	.init = &stmmac_plat_init,
 };
 
@@ -158,68 +151,26 @@ static void __init enable_periphs(void)
 	__raw_writel(0, rst_manager_base_addr + SOCFPGA_RSTMGR_BRGMODRST);
 }
 
-static int stmmac_mdio_write_null(struct mii_bus *bus, int phyaddr, int phyreg,
-			     u16 phydata)
-{
-	return 0;
-}
-
 #define MICREL_KSZ9021_EXTREG_CTRL 11
 #define MICREL_KSZ9021_EXTREG_DATA_WRITE 12
 #define MICREL_KSZ9021_RGMII_CLK_CTRL_PAD_SCEW 260
 #define MICREL_KSZ9021_RGMII_RX_DATA_PAD_SCEW 261
 
-static int stmmac_emdio_write(struct mii_bus *bus, int phyaddr, int phyreg,
-			     u16 phydata)
+static int ksz9021rlrn_phy_fixup(struct phy_device *phydev)
 {
-	int ret = (bus->write)(bus, phyaddr,
-		MICREL_KSZ9021_EXTREG_CTRL, 0x8000|phyreg);
-	if (ret) {
-		pr_warn("stmmac_emdio_write write1 failed %d\n", ret);
-		return ret;
+	if (IS_BUILTIN(CONFIG_PHYLIB)) {
+		/* min rx data delay */
+		phy_write(phydev, MICREL_KSZ9021_EXTREG_CTRL,
+			MICREL_KSZ9021_RGMII_RX_DATA_PAD_SCEW | 0x8000);
+		phy_write(phydev, MICREL_KSZ9021_EXTREG_DATA_WRITE, 0x0000);
+
+		/* max rx/tx clock delay, min rx/tx control delay */
+		phy_write(phydev, MICREL_KSZ9021_EXTREG_CTRL,
+			MICREL_KSZ9021_RGMII_CLK_CTRL_PAD_SCEW | 0x8000);
+		phy_write(phydev, MICREL_KSZ9021_EXTREG_DATA_WRITE, 0xa0d0);
+		phy_write(phydev, MICREL_KSZ9021_EXTREG_CTRL, 0x104);
 	}
 
-	ret = (bus->write)(bus, phyaddr,
-		MICREL_KSZ9021_EXTREG_DATA_WRITE, phydata);
-	if (ret) {
-		pr_warn("stmmac_emdio_write write2 failed %d\n", ret);
-		return ret;
-	}
-
-	return ret;
-}
-
-static int socfpga_phy_reset_mii(struct mii_bus *bus, int phyaddr)
-{
-	struct phy_device *phydev;
-
-	if (of_machine_is_compatible("altr,socfpga-vt"))
-		return 0;
-
-	phydev = bus->phy_map[phyaddr];
-
-	if (NULL == phydev) {
-		pr_err("%s no phydev found\n", __func__);
-		return -EINVAL;
-	}
-
-	if (PHY_ID_KSZ9021RLRN != phydev->phy_id) {
-		pr_err("%s unexpected PHY ID %08x\n", __func__, phydev->phy_id);
-		return -EINVAL;
-	}
-
-	pr_info("%s writing extended registers to phyaddr %d\n",
-		__func__, phyaddr);
-
-	/* add 2 ns of RXC PAD Skew and 2.6 ns of TXC PAD Skew */
-	stmmac_emdio_write(bus, phyaddr,
-		MICREL_KSZ9021_RGMII_CLK_CTRL_PAD_SCEW, 0xa0d0);
-
-	/* set no PAD skew for data */
-	stmmac_emdio_write(bus, phyaddr,
-		MICREL_KSZ9021_RGMII_RX_DATA_PAD_SCEW, 0x0000);
-
-	bus->write = &stmmac_mdio_write_null;
 	return 0;
 }
 
@@ -348,6 +299,9 @@ static void __init socfpga_cyclone5_init(void)
 	enable_periphs();
 
 	socfpga_soc_device_init();
+	if (IS_BUILTIN(CONFIG_PHYLIB))
+		phy_register_fixup_for_uid(PHY_ID_KSZ9021RLRN, MICREL_PHY_ID_MASK,
+			ksz9021rlrn_phy_fixup);
 }
 
 static const char *altera_dt_match[] = {
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c
index 83ad531..a468eb1 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c
@@ -280,11 +280,13 @@ int stmmac_mdio_register(struct net_device *ndev)
 
 	if (!found) {
 		pr_warning("%s: No PHY found\n", ndev->name);
-	} else if (priv->plat->mdio_bus_data->phy_reset_mii) {
-		priv->plat->mdio_bus_data->phy_reset_mii(new_bus,
-			priv->plat->phy_addr);
+		mdiobus_unregister(new_bus);
+		mdiobus_free(new_bus);
+		return -ENODEV;
 	}
 
+	priv->mii = new_bus;
+
 	return 0;
 
 bus_register_fail:
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
index dee87f9..cc8af9a 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
@@ -102,11 +102,9 @@ static int stmmac_probe_config_dt(struct platform_device *pdev,
 	if (of_property_read_u32(np, "snps,phy-addr", &plat->phy_addr) == 0)
 		dev_warn(&pdev->dev, "snps,phy-addr property is deprecated\n");
 
-	if (NULL == plat->mdio_bus_data) {
-		plat->mdio_bus_data = devm_kzalloc(&pdev->dev,
+	plat->mdio_bus_data = devm_kzalloc(&pdev->dev,
 					   sizeof(struct stmmac_mdio_bus_data),
 					   GFP_KERNEL);
-	}
 
 	plat->force_sf_dma_mode = of_property_read_bool(np, "snps,force_sf_dma_mode");
 
-- 
1.9.1

