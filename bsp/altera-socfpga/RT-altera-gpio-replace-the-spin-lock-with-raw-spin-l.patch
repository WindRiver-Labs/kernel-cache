From 6f31a664fd142b35b34bf48f6d913959f2a8d4a8 Mon Sep 17 00:00:00 2001
From: czou <cao.zou@windriver.com>
Date: Wed, 27 Jan 2016 15:34:52 +0800
Subject: [PATCH] RT:altera-gpio: replace the spin lock with raw spin lock

Spin lock just protects the write and read operation for gpio registers in
altera gpio irq chip operation, it will be called in irq disabled context,
replace this spin lock will fix the warnings as follow:

BUG: sleeping function called from invalid context at kernel/locking/rtmutex.c:917
in_atomic(): 1, irqs_disabled(): 128, pid: 719, name: sh
Preemption disabled at:[< (null)>] (null)

CPU: 1 PID: 719 Comm: sh Not tainted 4.1.16-rt13-WR8.0.0.2_preempt-rt #1
Hardware name: Altera SOCFPGA
[<80019298>] (unwind_backtrace) from [<80013ac8>] (show_stack+0x20/0x24)
[<80013ac8>] (show_stack) from [<80605f60>] (dump_stack+0x78/0x98)
[<80605f60>] (dump_stack) from [<8004b764>] (___might_sleep+0x184/0x1b8)
[<8004b764>] (___might_sleep) from [<8060a858>] (rt_spin_lock+0x28/0x78)
[<8060a858>] (rt_spin_lock) from [<80382770>]
(altera_gpio_irq_unmask+0x2c/0x78)
[<80382770>] (altera_gpio_irq_unmask) from [<803827d4>]
(altera_gpio_irq_startup+0x18/0x20)
[<803827d4>] (altera_gpio_irq_startup) from [<80072a0c>]
(irq_startup+0x4c/0x80)
[<80072a0c>] (irq_startup) from [<800712b0>] (__setup_irq+0x354/0x594)
[<800712b0>] (__setup_irq) from [<80071678>]
(request_threaded_irq+0xf8/0x150)
[<80071678>] (request_threaded_irq) from [<80071748>]
(request_any_context_irq+0x78/0x80)
[<80071748>] (request_any_context_irq) from [<803811e8>]
(gpio_setup_irq+0x18c/0x24c)
[<803811e8>] (gpio_setup_irq) from [<80381528>]
(gpio_edge_store+0x88/0xa8)
[<80381528>] (gpio_edge_store) from [<803b80ac>]
(dev_attr_store+0x28/0x34)
[<803b80ac>] (dev_attr_store) from [<801a2c50>]
(sysfs_kf_write+0x48/0x54)
[<801a2c50>] (sysfs_kf_write) from [<801a2140>]
(kernfs_fop_write+0x128/0x188)
[<801a2140>] (kernfs_fop_write) from [<8013e324>]
(__vfs_write+0x28/0x48)
[<8013e324>] (__vfs_write) from [<8013ea30>] (vfs_write+0xbc/0x144)
[<8013ea30>] (vfs_write) from [<8013f194>] (SyS_write+0x58/0x98)
[<8013f194>] (SyS_write) from [<8000f440>] (ret_fast_syscall+0x0/0x3c)

Signed-off-by: czou <cao.zou@windriver.com>
---
 drivers/gpio/gpio-altera.c |   24 ++++++++++++------------
 1 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/drivers/gpio/gpio-altera.c b/drivers/gpio/gpio-altera.c
index 449fb46..341164f 100644
--- a/drivers/gpio/gpio-altera.c
+++ b/drivers/gpio/gpio-altera.c
@@ -37,7 +37,7 @@
 */
 struct altera_gpio_chip {
 	struct of_mm_gpio_chip mmchip;
-	spinlock_t gpio_lock;
+	raw_spinlock_t gpio_lock;
 	int interrupt_trigger;
 	int mapped_irq;
 };
@@ -52,12 +52,12 @@ static void altera_gpio_irq_unmask(struct irq_data *d)
 	altera_gc = irq_data_get_irq_chip_data(d);
 	mm_gc = &altera_gc->mmchip;
 
-	spin_lock_irqsave(&altera_gc->gpio_lock, flags);
+	raw_spin_lock_irqsave(&altera_gc->gpio_lock, flags);
 	intmask = readl(mm_gc->regs + ALTERA_GPIO_IRQ_MASK);
 	/* Set ALTERA_GPIO_IRQ_MASK bit to unmask */
 	intmask |= BIT(irqd_to_hwirq(d));
 	writel(intmask, mm_gc->regs + ALTERA_GPIO_IRQ_MASK);
-	spin_unlock_irqrestore(&altera_gc->gpio_lock, flags);
+	raw_spin_unlock_irqrestore(&altera_gc->gpio_lock, flags);
 }
 
 static void altera_gpio_irq_mask(struct irq_data *d)
@@ -70,12 +70,12 @@ static void altera_gpio_irq_mask(struct irq_data *d)
 	altera_gc = irq_data_get_irq_chip_data(d);
 	mm_gc = &altera_gc->mmchip;
 
-	spin_lock_irqsave(&altera_gc->gpio_lock, flags);
+	raw_spin_lock_irqsave(&altera_gc->gpio_lock, flags);
 	intmask = readl(mm_gc->regs + ALTERA_GPIO_IRQ_MASK);
 	/* Clear ALTERA_GPIO_IRQ_MASK bit to mask */
 	intmask &= ~BIT(irqd_to_hwirq(d));
 	writel(intmask, mm_gc->regs + ALTERA_GPIO_IRQ_MASK);
-	spin_unlock_irqrestore(&altera_gc->gpio_lock, flags);
+	raw_spin_unlock_irqrestore(&altera_gc->gpio_lock, flags);
 }
 
 /**
@@ -141,14 +141,14 @@ static void altera_gpio_set(struct gpio_chip *gc, unsigned offset, int value)
 	mm_gc = to_of_mm_gpio_chip(gc);
 	chip = container_of(mm_gc, struct altera_gpio_chip, mmchip);
 
-	spin_lock_irqsave(&chip->gpio_lock, flags);
+	raw_spin_lock_irqsave(&chip->gpio_lock, flags);
 	data_reg = readl(mm_gc->regs + ALTERA_GPIO_DATA);
 	if (value)
 		data_reg |= BIT(offset);
 	else
 		data_reg &= ~BIT(offset);
 	writel(data_reg, mm_gc->regs + ALTERA_GPIO_DATA);
-	spin_unlock_irqrestore(&chip->gpio_lock, flags);
+	raw_spin_unlock_irqrestore(&chip->gpio_lock, flags);
 }
 
 static int altera_gpio_direction_input(struct gpio_chip *gc, unsigned offset)
@@ -161,12 +161,12 @@ static int altera_gpio_direction_input(struct gpio_chip *gc, unsigned offset)
 	mm_gc = to_of_mm_gpio_chip(gc);
 	chip = container_of(mm_gc, struct altera_gpio_chip, mmchip);
 
-	spin_lock_irqsave(&chip->gpio_lock, flags);
+	raw_spin_lock_irqsave(&chip->gpio_lock, flags);
 	/* Set pin as input, assumes software controlled IP */
 	gpio_ddr = readl(mm_gc->regs + ALTERA_GPIO_DIR);
 	gpio_ddr &= ~BIT(offset);
 	writel(gpio_ddr, mm_gc->regs + ALTERA_GPIO_DIR);
-	spin_unlock_irqrestore(&chip->gpio_lock, flags);
+	raw_spin_unlock_irqrestore(&chip->gpio_lock, flags);
 
 	return 0;
 }
@@ -182,7 +182,7 @@ static int altera_gpio_direction_output(struct gpio_chip *gc,
 	mm_gc = to_of_mm_gpio_chip(gc);
 	chip = container_of(mm_gc, struct altera_gpio_chip, mmchip);
 
-	spin_lock_irqsave(&chip->gpio_lock, flags);
+	raw_spin_lock_irqsave(&chip->gpio_lock, flags);
 	/* Sets the GPIO value */
 	data_reg = readl(mm_gc->regs + ALTERA_GPIO_DATA);
 	if (value)
@@ -195,7 +195,7 @@ static int altera_gpio_direction_output(struct gpio_chip *gc,
 	gpio_ddr = readl(mm_gc->regs + ALTERA_GPIO_DIR);
 	gpio_ddr |= BIT(offset);
 	writel(gpio_ddr, mm_gc->regs + ALTERA_GPIO_DIR);
-	spin_unlock_irqrestore(&chip->gpio_lock, flags);
+	raw_spin_unlock_irqrestore(&chip->gpio_lock, flags);
 
 	return 0;
 }
@@ -266,7 +266,7 @@ static int altera_gpio_probe(struct platform_device *pdev)
 	if (!altera_gc)
 		return -ENOMEM;
 
-	spin_lock_init(&altera_gc->gpio_lock);
+	raw_spin_lock_init(&altera_gc->gpio_lock);
 
 	if (of_property_read_u32(node, "altr,ngpio", &reg))
 		/* By default assume maximum ngpio */
-- 
1.7.5.4

