From 012ad3d4da233b8c19d999e18ed616ff4809241f Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Wed, 24 Dec 2014 10:53:57 +0800
Subject: [PATCH 1/3] mmc: dw_mmc: prevent SG DMA entries from unmapped
 repeatedly

There are two functions, dw_mci_idmac_complete_dma() and dw_mci_stop_dma(),
to call dw_mci_dma_cleanup(), but they aren't synchronized.

The top half function dw_mci_idmac_complete_dma() has unmapped SG DMA entries
and set the bit EVENT_XFER_COMPLETE, so the bottom half function
dw_mci_stop_dma() needs to check this bit to determine whether SG DMA entries
should be freed.

Else sometimes dw_mmc devices would report the following warnings when
enabling DMA_API_DEBUG.

------------[ cut here ]------------
WARNING: CPU: 0 PID: 0 at lib/dma-debug.c:1080 check_unmap+0x168/0x844()
dwmmc_socfpga ff704000.dwmmc0: DMA-API: device driver tries to free DMA memory it has not allocated [device address=0x0
Modules linked in:
CPU: 0 PID: 0 Comm: swapper/0 Not tainted
[<80017350>] (unwind_backtrace) from [<800126ac>] (show_stack+0x20/0x24)
[<800126ac>] (show_stack) from [<8064c290>] (dump_stack+0x74/0xc0)
[<8064c290>] (dump_stack) from [<800235ec>] (warn_slowpath_common+0x7c/0xa0)
[<800235ec>] (warn_slowpath_common) from [<80023650>] (warn_slowpath_fmt+0x40/0x48)
[<80023650>] (warn_slowpath_fmt) from [<803d3d48>] (check_unmap+0x168/0x844)
[<803d3d48>] (check_unmap) from [<803d4a8c>] (debug_dma_unmap_sg+0xf4/0x118)
[<803d4a8c>] (debug_dma_unmap_sg) from [<8051eeac>] (dw_mci_dma_cleanup+0x7c/0xb0)
[<8051eeac>] (dw_mci_dma_cleanup) from [<8051e54c>] (dw_mci_stop_dma+0x40/0x50)
[<8051e54c>] (dw_mci_stop_dma) from [<80521280>] (dw_mci_tasklet_func+0x100/0x310)
[<80521280>] (dw_mci_tasklet_func) from [<80028e94>] (tasklet_action+0xa8/0x10c)
[<80028e94>] (tasklet_action) from [<800283ec>] (__do_softirq+0x150/0x33c)
[<800283ec>] (__do_softirq) from [<80028860>] (irq_exit+0x94/0xf0)

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/mmc/host/dw_mmc.c |   14 +++++++++++++-
 1 files changed, 13 insertions(+), 1 deletions(-)

diff --git a/drivers/mmc/host/dw_mmc.c b/drivers/mmc/host/dw_mmc.c
index 39796bb..222f933 100644
--- a/drivers/mmc/host/dw_mmc.c
+++ b/drivers/mmc/host/dw_mmc.c
@@ -346,7 +346,19 @@ static void dw_mci_stop_dma(struct dw_mci *host)
 {
 	if (host->using_dma) {
 		host->dma_ops->stop(host);
-		host->dma_ops->cleanup(host);
+		/*
+		 * We don't need to cleanup again here if
+		 * dw_mci_idmac_complete_dma() has already done this
+		 * and set the bit EVENT_XFER_COMPLETE.
+		 * On the other hand, the functions
+		 * dw_mci_read_data_pio/dw_mci_write_data_pio also
+		 * set this bit, but they set host->sg as NULL meanwhile,
+		 * so add a judgement for host->sg.
+		*/
+		if (host->sg &&
+			!test_bit(EVENT_XFER_COMPLETE,
+					&host->pending_events))
+			host->dma_ops->cleanup(host);
 	}
 
 	/* Data transfer was stopped by the interrupt handler */
-- 
1.7.5.4

