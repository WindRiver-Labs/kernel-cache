From 1176a98184006b3ebb3cf29d0dbdd012adefbc7c Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Wed, 6 Mar 2013 14:23:38 -0600
Subject: [PATCH 061/248] FogBugz #105707-1: Enable USB OTG for devkit

This enables Host Mode for the OTG port. This commit only enables initial
support for the OTG port with only Host mode and non-DMA.

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
---
 arch/arm/boot/dts/socfpga.dtsi          |  1 -
 arch/arm/boot/dts/socfpga_cyclone5.dtsi |  8 ++++
 arch/arm/boot/dts/socfpga_ice.dts       |  8 ++++
 arch/arm/configs/socfpga_defconfig      |  4 +-
 drivers/usb/otg/dwc/cil.c               |  2 +-
 drivers/usb/otg/dwc/hcd.c               | 73 +++++++++++++++++++++------------
 drivers/usb/otg/dwc/platform.c          |  4 --
 7 files changed, 66 insertions(+), 34 deletions(-)

diff --git a/arch/arm/boot/dts/socfpga.dtsi b/arch/arm/boot/dts/socfpga.dtsi
index 2d03045..50d13aa 100644
--- a/arch/arm/boot/dts/socfpga.dtsi
+++ b/arch/arm/boot/dts/socfpga.dtsi
@@ -657,7 +657,6 @@
 				reg = <0xffb40000 0xffff>;
 				interrupts = <0 128 4>;
 				dma-mask = <0xffffffff>;
-				ulpi-ddr = <1>;
 				host-rx-fifo-size = <512>;
 				dev-rx-fifo-size = <512>;
 				dev-nperio-tx-fifo-size = <4096>;
diff --git a/arch/arm/boot/dts/socfpga_cyclone5.dtsi b/arch/arm/boot/dts/socfpga_cyclone5.dtsi
index 3d0c8f1..169ed12 100644
--- a/arch/arm/boot/dts/socfpga_cyclone5.dtsi
+++ b/arch/arm/boot/dts/socfpga_cyclone5.dtsi
@@ -149,6 +149,14 @@
 				};
 		};
 
+		usb0: usb@ffb00000 {
+			status = "disabled";
+		};
+
+		usb1: usb@ffb40000 {
+			ulpi-ddr = <0>;
+		};
+
 		i2c0: i2c@ffc04000 {
 			speed-mode = <0>;
 		};
diff --git a/arch/arm/boot/dts/socfpga_ice.dts b/arch/arm/boot/dts/socfpga_ice.dts
index 7a60687..4522181 100644
--- a/arch/arm/boot/dts/socfpga_ice.dts
+++ b/arch/arm/boot/dts/socfpga_ice.dts
@@ -114,6 +114,14 @@
 			clock-frequency = <19290>;
 		};
 
+		usb0: usb@ffb00000 {
+                       ulpi-ddr = <0>;
+                };
+
+                usb1: usb@ffb40000 {
+                       ulpi-ddr = <0>;
+                };
+
 		serial0@ffc02000 {
 			clock-frequency = <77161>;
 		};
diff --git a/arch/arm/configs/socfpga_defconfig b/arch/arm/configs/socfpga_defconfig
index c0d8bf6..a7eaca5 100644
--- a/arch/arm/configs/socfpga_defconfig
+++ b/arch/arm/configs/socfpga_defconfig
@@ -71,7 +71,9 @@ CONFIG_SERIAL_8250_DW=y
 CONFIG_USB=y
 CONFIG_USB_STORAGE=y
 CONFIG_USB_GADGET=y
-CONFIG_DWC_OTG_MODE=y
+# CONFIG_DWC_OTG_MODE is not set
+CONFIG_DWC_HOST_ONLY=y
+CONFIG_DWC_SLAVE=y
 CONFIG_MMC=y
 CONFIG_MMC_DW=y
 CONFIG_MMC_DW_IDMAC=y
diff --git a/drivers/usb/otg/dwc/cil.c b/drivers/usb/otg/dwc/cil.c
index 187ce15..211267d 100644
--- a/drivers/usb/otg/dwc/cil.c
+++ b/drivers/usb/otg/dwc/cil.c
@@ -226,7 +226,7 @@ void dwc_otg_enable_common_interrupts(struct core_if *core_if)
 void dwc_otg_core_init(struct core_if *core_if)
 {
 	u32 i;
-	ulong global_reg = core_if->core_global_regs;
+	u32 global_reg = core_if->core_global_regs;
 	struct device_if *dev_if = core_if->dev_if;
 	u32 ahbcfg = 0;
 	u32 gusbcfg;
diff --git a/drivers/usb/otg/dwc/hcd.c b/drivers/usb/otg/dwc/hcd.c
index 58c8989..7a3821e 100644
--- a/drivers/usb/otg/dwc/hcd.c
+++ b/drivers/usb/otg/dwc/hcd.c
@@ -115,6 +115,23 @@ static void dwc_otg_core_host_init(struct core_if *core_if)
 	/* Restart the Phy Clock */
 	dwc_reg_write(core_if->pcgcctl, 0, 0);
 
+	/* Power the PHY*/
+	hprt0 = dwc_otg_read_hprt0(core_if);
+	hprt0 = DWC_HPRT0_PRT_PWR_RW(hprt0, 1);
+	dwc_reg_write(core_if->host_if->hprt0, 0, hprt0);
+
+	/* Reset the PHY */
+	hprt0 = dwc_otg_read_hprt0(core_if);
+	hprt0 = DWC_HPRT0_PRT_RST_RW(hprt0, 1);
+	dwc_reg_write(core_if->host_if->hprt0, 0, hprt0);
+
+	msleep(1);
+
+	/* Release PHY from reset */
+	hprt0 = dwc_otg_read_hprt0(core_if);
+	hprt0 = DWC_HPRT0_PRT_RST_RW(hprt0, 0);
+	dwc_reg_write(core_if->host_if->hprt0, 0, hprt0);
+
 	/* Initialize Host Configuration Register */
 	init_fslspclksel(core_if);
 
@@ -155,37 +172,39 @@ static void dwc_otg_core_host_init(struct core_if *core_if)
 	dwc_otg_flush_tx_fifo(core_if, DWC_GRSTCTL_TXFNUM_ALL);
 	dwc_otg_flush_rx_fifo(core_if);
 
-	/* Flush out any leftover queued requests. */
-	num_channels = core_if->core_params->host_channels;
-	for (i = 0; i < num_channels; i++) {
-		hc_regs = core_if->host_if->hc_regs[i];
-		hcchar = dwc_reg_read(hc_regs, DWC_HCCHAR);
-		hcchar = DWC_HCCHAR_ENA_RW(hcchar, 0);
-		hcchar = DWC_HCCHAR_DIS_RW(hcchar, 1);
-		hcchar = DWC_HCCHAR_EPDIR_RW(hcchar, 0);
-		dwc_reg_write(hc_regs, DWC_HCCHAR, hcchar);
-	}
-
-	/* Halt all channels to put them into a known state. */
-	for (i = 0; i < num_channels; i++) {
-		int count = 0;
+	if (params->dma_enable) {
+		/* Flush out any leftover queued requests. */
+		num_channels = core_if->core_params->host_channels;
+		for (i = 0; i < num_channels; i++) {
+			hc_regs = core_if->host_if->hc_regs[i];
+			hcchar = dwc_reg_read(hc_regs, DWC_HCCHAR);
+			hcchar = DWC_HCCHAR_ENA_RW(hcchar, 0);
+			hcchar = DWC_HCCHAR_DIS_RW(hcchar, 1);
+			hcchar = DWC_HCCHAR_EPDIR_RW(hcchar, 0);
+			dwc_reg_write(hc_regs, DWC_HCCHAR, hcchar);
+		}
 
-		hc_regs = core_if->host_if->hc_regs[i];
-		hcchar = dwc_reg_read(hc_regs, DWC_HCCHAR);
-		hcchar = DWC_HCCHAR_ENA_RW(hcchar, 1);
-		hcchar = DWC_HCCHAR_DIS_RW(hcchar, 1);
-		hcchar = DWC_HCCHAR_EPDIR_RW(hcchar, 0);
-		dwc_reg_write(hc_regs, DWC_HCCHAR, hcchar);
+		/* Halt all channels to put them into a known state. */
+		for (i = 0; i < num_channels; i++) {
+			int count = 0;
 
-		do {
+			hc_regs = core_if->host_if->hc_regs[i];
 			hcchar = dwc_reg_read(hc_regs, DWC_HCCHAR);
-			if (++count > 200) {
-				pr_err("%s: Unable to clear halt on "
+			hcchar = DWC_HCCHAR_ENA_RW(hcchar, 1);
+			hcchar = DWC_HCCHAR_DIS_RW(hcchar, 1);
+			hcchar = DWC_HCCHAR_EPDIR_RW(hcchar, 0);
+			dwc_reg_write(hc_regs, DWC_HCCHAR, hcchar);
+
+			do {
+				hcchar = dwc_reg_read(hc_regs, DWC_HCCHAR);
+				if (++count > 200) {
+					pr_err("%s: Unable to clear halt on "
 				       "channel %d\n", __func__, i);
-				break;
-			}
-			udelay(100);
-		} while (DWC_HCCHAR_ENA_RD(hcchar));
+					break;
+				}
+				udelay(100);
+			} while (DWC_HCCHAR_ENA_RD(hcchar));
+		}
 	}
 
 	/* Turn on the vbus power. */
diff --git a/drivers/usb/otg/dwc/platform.c b/drivers/usb/otg/dwc/platform.c
index 3b218ba..033d3f4 100644
--- a/drivers/usb/otg/dwc/platform.c
+++ b/drivers/usb/otg/dwc/platform.c
@@ -358,10 +358,6 @@ static int dwc_otg_driver_probe(struct platform_device *ofdev)
 	 */
 	dwc_otg_enable_global_interrupts(dwc_dev->core_if);
 
-	usbcfg = dwc_reg_read(gusbcfg_addr, 0);
-	usbcfg &= ~DWC_USBCFG_FRC_HST_MODE;
-	dwc_reg_write(gusbcfg_addr, 0, usbcfg);
-
 	return 0;
 fail_hcd:
 	free_irq(dwc_dev->irq, dwc_dev);
-- 
1.9.1

