From 225620fde2763467f2f306059ce94ea8ced84c96 Mon Sep 17 00:00:00 2001
From: Graham Moore <grmoore@altera.com>
Date: Thu, 15 Aug 2013 13:15:05 -0500
Subject: [PATCH 06/10] socfpga/dma: Fix multiple interrupt implementation in
 pl330

commit 39e5213e3375add938052b4a7fd668948409ec96
git://git.rocketboards.org/linux-socfpga.git socfpga-3.13 branch

Modify device tree for multiple interrupt parameters.
Add DMA files which combine multiple DMA irqs into one.
Add platform data structure.
Modify pl330 driver, less intrusive modifications for multiple IRQs.
Remove AMBA_NR_IRQS modification.
Document devicetree bindings.

Signed-off-by: Graham Moore <grmoore@altera.com>
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 .../devicetree/bindings/dma/arm-pl330.txt          |    7 +-
 arch/arm/boot/dts/socfpga.dtsi                     |   13 +--
 arch/arm/mach-socfpga/Makefile                     |    2 +-
 arch/arm/mach-socfpga/dma.c                        |  128 ++++++++++++++++++++
 arch/arm/mach-socfpga/dma.h                        |   24 ++++
 arch/arm/mach-socfpga/socfpga.c                    |    5 +
 drivers/dma/pl330.c                                |   34 ++----
 include/linux/amba/bus.h                           |    4 -
 8 files changed, 178 insertions(+), 39 deletions(-)
 create mode 100644 arch/arm/mach-socfpga/dma.c
 create mode 100644 arch/arm/mach-socfpga/dma.h

diff --git a/Documentation/devicetree/bindings/dma/arm-pl330.txt b/Documentation/devicetree/bindings/dma/arm-pl330.txt
index 3764c16..8512465 100644
--- a/Documentation/devicetree/bindings/dma/arm-pl330.txt
+++ b/Documentation/devicetree/bindings/dma/arm-pl330.txt
@@ -7,7 +7,10 @@ Required properties:
   - compatible: should include both "arm,pl330" and "arm,primecell".
   - reg: physical base address of the controller and length of memory mapped
     region.
-  - interrupts: interrupt number(s) to the cpu.  A maximum of eight interrupts can be specified.
+  - interrupts: interrupt number to the cpu.
+  - nr-irqs: total number of interrupts to be combined in
+    the virtual interrupt.
+  - nr-valid-peri: number of peripherals attached to DMAC.
 
 Optional properties:
  - dma-coherent      : Present if dma operations are coherent
@@ -29,6 +32,8 @@ Example:
 		copy-align = <3>;
 		clocks = <&l4_main_clk>;
 		clock-names = "apb_pclk";
+		nr-irqs = <9>;
+		nr-valid-peri = <32>;
 	};
 
 Client drivers (device nodes requiring dma transfers from dev-to-mem or
diff --git a/arch/arm/boot/dts/socfpga.dtsi b/arch/arm/boot/dts/socfpga.dtsi
index cd4aa79..131ade8 100644
--- a/arch/arm/boot/dts/socfpga.dtsi
+++ b/arch/arm/boot/dts/socfpga.dtsi
@@ -75,20 +75,15 @@
 			pdma: pdma@ffe01000 {
 				compatible = "arm,pl330", "arm,primecell";
 				reg = <0xffe01000 0x1000>;
-				interrupts = <0 104 4>,
-					<0 105 4>,
-					<0 106 4>,
-					<0 107 4>,
-					<0 108 4>,
-					<0 109 4>,
-					<0 110 4>,
-					<0 111 4>;
 				#dma-cells = <1>;
 				#dma-channels = <8>;
 				#dma-requests = <32>;
-				copy-align = <3>;
+				interrupts = <0 104 4>;
+				nr-irqs = <9>;
+				nr-valid-peri = <32>;
 				clocks = <&l4_main_clk>;
 				clock-names = "apb_pclk";
+				copy-align = <3>;
 			};
 		};
 
diff --git a/arch/arm/mach-socfpga/Makefile b/arch/arm/mach-socfpga/Makefile
index b33b01c..e50957b 100644
--- a/arch/arm/mach-socfpga/Makefile
+++ b/arch/arm/mach-socfpga/Makefile
@@ -2,7 +2,7 @@
 # Makefile for the linux kernel.
 #
 
-obj-y					:= socfpga.o
+obj-y					:= socfpga.o dma.o
 obj-$(CONFIG_SMP)	+= headsmp.o platsmp.o
 
 # Interconnect pcie bus driver for Altera SoCs.
diff --git a/arch/arm/mach-socfpga/dma.c b/arch/arm/mach-socfpga/dma.c
new file mode 100644
index 0000000..8ebccd7
--- /dev/null
+++ b/arch/arm/mach-socfpga/dma.c
@@ -0,0 +1,128 @@
+/*
+ *  arch/arm/mach-socfpga/dma.c
+ *
+ * Copyright Altera Corporation (C) 2013. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include <linux/dma-mapping.h>
+#include <linux/amba/bus.h>
+#include <linux/amba/pl330.h>
+#include <linux/interrupt.h>
+#include <linux/export.h>
+#include <linux/irq.h>
+#include <linux/irqdomain.h>
+#include <asm/irq.h>
+#include <linux/of.h>
+
+#include "dma.h"
+
+static void combiner_func(struct irq_data *data) { }
+
+static unsigned int combiner_ret(struct irq_data *data)
+{
+	return 0;
+}
+
+struct irq_chip combiner_irq_chip = {
+	.name = "combiner",
+	.irq_startup = combiner_ret,
+	.irq_shutdown = combiner_func,
+	.irq_enable = combiner_func,
+	.irq_disable = combiner_func,
+	.irq_ack = combiner_func,
+	.irq_mask = combiner_func,
+	.irq_unmask = combiner_func,
+};
+
+static irqreturn_t socfpga_dma_irq_handler(int irq, void *data)
+{
+	struct amba_device *adev = (struct amba_device *) data;
+	int dev_irq = adev->irq[0];
+	if (generic_handle_irq(dev_irq) == 0)
+		return IRQ_HANDLED;
+	return IRQ_NONE;
+}
+
+static int pl330_dma_platform_init(struct amba_device *adev)
+{
+	struct dma_pl330_platdata *pdat;
+	int irq, irq_alloc;
+	int ret;
+	struct device_node *np = adev->dev.of_node;
+	unsigned int prop;
+
+	pdat = adev->dev.platform_data;
+
+	dma_cap_set(DMA_MEMCPY, pdat->cap_mask);
+	dma_cap_set(DMA_SLAVE, pdat->cap_mask);
+	dma_cap_set(DMA_CYCLIC, pdat->cap_mask);
+
+	pdat->irq_start = adev->irq[0];
+
+	if (of_property_read_u32(np, "nr-irqs", &prop))
+		return -1;
+	pdat->irq_end = pdat->irq_start + prop - 1;
+
+	if (of_property_read_u32(np, "nr-valid-peri", &prop))
+		return -1;
+	pdat->nr_valid_peri = prop;
+
+	/* Hook all the dma interrupts into our irq combiner handler */
+	for (irq = pdat->irq_start; irq <= pdat->irq_end; irq++) {
+		ret = request_irq(irq, socfpga_dma_irq_handler, 0,
+			dev_name(&adev->dev), adev);
+
+		if (ret) {
+			irq_alloc = irq;
+			goto request_irq_err;
+		}
+	}
+
+	/* now that we have the interrupts hooked, get a combiner
+		irq (virtual irq) from the system and use that as
+		the main irq */
+	adev->irq[0] = irq_alloc_desc(0);
+	irq_set_chip_and_handler(adev->irq[0], &combiner_irq_chip,
+		handle_simple_irq);
+	set_irq_flags(adev->irq[0], IRQF_VALID);
+
+	return 0;
+
+request_irq_err:
+	for (irq = pdat->irq_start; irq < irq_alloc; irq++)
+		free_irq(irq, adev);
+
+	return ret;
+}
+
+static void pl330_dma_platform_exit(struct amba_device *adev)
+{
+	struct dma_pl330_platdata *pdat;
+	int irq;
+
+	pdat = adev->dev.platform_data;
+
+	for (irq = pdat->irq_start; irq <= pdat->irq_end; irq++)
+		free_irq(irq, adev);
+
+	irq_set_chip_and_handler(adev->irq[0], NULL, NULL);
+	irq_free_descs(adev->irq[0], 1);
+
+}
+
+struct dma_pl330_platdata dma_platform_data = {
+	.init = pl330_dma_platform_init,
+	.exit = pl330_dma_platform_exit,
+};
diff --git a/arch/arm/mach-socfpga/dma.h b/arch/arm/mach-socfpga/dma.h
new file mode 100644
index 0000000..89c66eb
--- /dev/null
+++ b/arch/arm/mach-socfpga/dma.h
@@ -0,0 +1,24 @@
+/*
+ *  arch/arm/mach-socfpga/dma.h
+ *
+ * Copyright Altera Corporation (C) 2013. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef MACH_SOCFPGA_DMA_H
+#define MACH_SOCFPGA_DMA_H
+
+extern struct dma_pl330_platdata dma_platform_data;
+
+#endif /* #ifndef MACH_SOCFPGA_DMA_H */
diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index b5b44f9f..958a5d9 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -32,6 +32,7 @@
 #include <asm/smp_twd.h>
 
 #include "core.h"
+#include "dma.h"
 
 void __iomem *socfpga_scu_base_addr = ((void __iomem *)(SOCFPGA_SCU_VIRT_BASE));
 void __iomem *sys_manager_base_addr;
@@ -54,6 +55,10 @@ static struct plat_stmmacenet_data stmmacenet1_data = {
 static const struct of_dev_auxdata socfpga_auxdata_lookup[] __initconst = {
 	OF_DEV_AUXDATA("snps,dwmac-3.70a", 0xff700000, NULL, &stmmacenet0_data),
 	OF_DEV_AUXDATA("snps,dwmac-3.70a", 0xff702000, NULL, &stmmacenet1_data),
+	OF_DEV_AUXDATA("arm,pl330", 0xffe00000, "dma-pl330",
+		&dma_platform_data),
+	OF_DEV_AUXDATA("arm,pl330", 0xffe01000, "dma-pl330",
+		&dma_platform_data),
 	{ /* sentinel */ }
 };
 
diff --git a/drivers/dma/pl330.c b/drivers/dma/pl330.c
index a178120..ab05f51 100755
--- a/drivers/dma/pl330.c
+++ b/drivers/dma/pl330.c
@@ -2872,22 +2872,18 @@ pl330_probe(struct amba_device *adev, const struct amba_id *id)
 
 	amba_set_drvdata(adev, pdmac);
 
-	for (i = 0; i <= AMBA_NR_IRQS; i++) {
-		irq = adev->irq[i];
-		if (irq == 0)
-			break;
-		ret = request_irq(irq, pl330_irq_handler, 0,
-				dev_name(&adev->dev), pi);
-		if (ret)
-			goto probe_err3;
-	}
-
 	if (pdat && pdat->init) {
 		ret = pdat->init(adev);
 		if (ret)
-			goto probe_err3;
+			goto probe_err2;
 	}
 
+	irq = adev->irq[0];
+	ret = request_irq(irq, pl330_irq_handler, 0,
+			dev_name(&adev->dev), pi);
+	if (ret)
+		return ret;
+
 	pi->pcfg.periph_id = adev->periphid;
 	ret = pl330_add(pi);
 	if (ret)
@@ -2974,12 +2970,7 @@ pl330_probe(struct amba_device *adev, const struct amba_id *id)
 probe_err4:
 	pl330_del(pi);
 probe_err3:
-	for (i = 0; i < AMBA_NR_IRQS; i++) {
-		irq = adev->irq[i];
-		if (irq == 0)
-			break;
-		free_irq(irq, pi);
-	}
+	free_irq(irq, pi);
 probe_err2:
 	iounmap(pi->base);
 probe_err1:
@@ -2997,7 +2988,6 @@ static int __devexit pl330_remove(struct amba_device *adev)
 	struct pl330_info *pi;
 	struct resource *res;
 	int irq;
-	int i;
 
 	if (!pdmac)
 		return 0;
@@ -3020,12 +3010,8 @@ static int __devexit pl330_remove(struct amba_device *adev)
 
 	pl330_del(pi);
 
-	for (i = 0; i < AMBA_NR_IRQS; i++) {
-		irq = adev->irq[i];
-		if (irq == 0)
-			break;
-		free_irq(irq, pi);
-	}
+	irq = adev->irq[0];
+	free_irq(irq, pi);
 
 	iounmap(pi->base);
 
diff --git a/include/linux/amba/bus.h b/include/linux/amba/bus.h
index 2e520a1..8d54f79 100644
--- a/include/linux/amba/bus.h
+++ b/include/linux/amba/bus.h
@@ -21,11 +21,7 @@
 #include <linux/resource.h>
 #include <linux/regulator/consumer.h>
 
-#ifdef CONFIG_ARCH_SOCFPGA
-#define AMBA_NR_IRQS	8
-#else
 #define AMBA_NR_IRQS	2
-#endif
 #define AMBA_CID	0xb105f00d
 
 struct clk;
-- 
1.7.5.4

