From 90aa5fe65b06b886952cce23693ac81723997fdd Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Tue, 13 May 2014 09:57:13 +0800
Subject: [PATCH 1/2] drivers/clocksource: do not trace read_sched_clock

When executing the following command to trace sys_read,
we ran into a call trace. read_sched_clock should
not be traced just like jiffy_sched_clock_read, so add
notrace attribute for this function to avoid to be traced.

root@localhost:~# trace-cmd record -p function_graph -g sys_read ls
plugin 'function_graph'
Unable to handle kernel paging request at virtual address 4d86049f
pgd = 80004000
[4d86049f] *pgd=00000000
Internal error: Oops: 805 [#1] PREEMPT SMP ARM
Modules linked in: fat vfat minix nls_cp437 nls_iso8859_1
CPU: -1 Not tainted (3.4.43-rt56-WR5.0.1.0_preempt-rt #1)
PC is at ftrace_push_return_trace+0x7c/0xfc
LR is at sched_clock+0x1c/0x94
pc : [<800cf01c>] lr : [<80011ad0>] psr: 400f0193
sp : bf91e098 ip : 00000029 fp : bf91e0c4
r10: bf91e114 r9 : 80097210 r8 : bf91e0cc
r7 : 804d5778 r6 : 804d5778 r5 : 80011ad0 r4 : bf91e000
r3 : e21c3021 r2 : 43860420 r1 : 0a00007f r0 : 00000000
Flags: nZcv IRQs off FIQs on Mode SVC_32 ISA ARM Segment user
Control: 10c5387d Table: 3d3e404a DAC: 00000015
Process (pid: 0, stack limit = 0xbf91c2f0)
Stack: (0xbf91e098 to 0x00002000)
[<800cf01c>] (ftrace_push_return_trace+0x7c/0xfc) from
[<80015ba0>] (prepare_ftrace_return+0x54/0x98)
[<80015ba0>] (prepare_ftrace_return+0x54/0x98) from [<8000e964>]
(ftrace_graph_caller+0x18/0x20)

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/clocksource/dw_apb_timer_of.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/clocksource/dw_apb_timer_of.c b/drivers/clocksource/dw_apb_timer_of.c
index 0272e8b..63540bc 100644
--- a/drivers/clocksource/dw_apb_timer_of.c
+++ b/drivers/clocksource/dw_apb_timer_of.c
@@ -75,7 +75,7 @@ static void add_clocksource(struct device_node *source_timer)
 
 static void __iomem *sched_io_base;
 
-static u32 read_sched_clock(void)
+static u32 notrace read_sched_clock(void)
 {
 	return ~__raw_readl(sched_io_base + APBTMR_N_CURRENT_VALUE);
 }
-- 
1.7.5.4

