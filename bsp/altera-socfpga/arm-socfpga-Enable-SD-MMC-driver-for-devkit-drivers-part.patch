From 7b1597b77cef44c7dfec6ffca32682df06655035 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Tue, 11 Dec 2012 18:10:36 -0600
Subject: [PATCH 1/2] arm: socfpga: Enable SD/MMC driver for devkit

Upstream: git://git.rocketboards.org/linux-socfpga.git

Update the SD/MMC driver to the mainline version(v3.7) which has
support for device tree.

/drivers part

Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
(cherry picked from commit eeadb4195aaf504a072383fd06f3a651c0739324)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/mmc/host/dw_mmc-pltfm.c |   11 ----------
 drivers/mmc/host/dw_mmc.c       |   41 ++++++++++----------------------------
 drivers/mmc/host/dw_mmc.h       |    1 +
 include/linux/mmc/dw_mmc.h      |    3 ++
 4 files changed, 15 insertions(+), 41 deletions(-)

diff --git a/drivers/mmc/host/dw_mmc-pltfm.c b/drivers/mmc/host/dw_mmc-pltfm.c
index b00f930..eeeb35b 100644
--- a/drivers/mmc/host/dw_mmc-pltfm.c
+++ b/drivers/mmc/host/dw_mmc-pltfm.c
@@ -118,16 +118,6 @@ static const struct of_device_id dw_mci_pltfm_match[] = {
 };
 MODULE_DEVICE_TABLE(of, dw_mci_pltfm_match);
 
-#ifdef CONFIG_OF
-static struct of_device_id dw_mci_of_match[] __devinitdata = {
-       { .compatible = "snps,dw-mmc", },
-       { /* end of table */}
-};
-MODULE_DEVICE_TABLE(of, dw_mci_of_match);
-#else
-#define dw_mci_of_match NULL
-#endif /* CONFIG_OF */
-
 static struct platform_driver dw_mci_pltfm_driver = {
 	.probe		= dw_mci_pltfm_probe,
 	.remove		= __devexit_p(dw_mci_pltfm_remove),
@@ -135,7 +125,6 @@ static struct platform_driver dw_mci_pltfm_driver = {
 		.name		= "dw_mmc",
 		.of_match_table	= of_match_ptr(dw_mci_pltfm_match),
 		.pm		= &dw_mci_pltfm_pmops,
-		.of_match_table = dw_mci_of_match,
 	},
 };
 
diff --git a/drivers/mmc/host/dw_mmc.c b/drivers/mmc/host/dw_mmc.c
index 0ac919b..a68f796 100644
--- a/drivers/mmc/host/dw_mmc.c
+++ b/drivers/mmc/host/dw_mmc.c
@@ -265,6 +265,9 @@ static u32 dw_mci_prepare_command(struct mmc_host *mmc, struct mmc_command *cmd)
 	if (drv_data && drv_data->prepare_command)
 		drv_data->prepare_command(slot->host, &cmdr);
 
+	if (slot->host->use_hold_reg)
+		cmdr |= SDMMC_CMD_USE_HOLD_REG;
+
 	return cmdr;
 }
 
@@ -2052,6 +2055,11 @@ static struct dw_mci_board *dw_mci_parse_dt(struct dw_mci *host)
 		return ERR_PTR(-ENOMEM);
 	}
 
+	if (of_property_read_u32(dev->of_node, "bus-hz", &pdata->bus_hz)) {
+		dev_err(dev, "couldn't determine bus-hz\n");
+		pdata->bus_hz = 50000000;
+	}
+
 	/* find out number of slots supported */
 	if (of_property_read_u32(dev->of_node, "num-slots",
 				&pdata->num_slots)) {
@@ -2108,36 +2116,6 @@ int dw_mci_probe(struct dw_mci *host)
 		}
 	}
 
-#ifdef CONFIG_OF
-	if (of_property_read_u32(host->dev.of_node, "bus-hz", &prop)) {
-		dev_err(&host->dev, "couldn't determine bus-hz\n");
-		return -ENODEV;
-	}
-	host->pdata->bus_hz = prop;
-
-	if (of_property_read_u32(host->dev.of_node, "num-slots", &prop)) {
-		dev_err(&host->dev, "couldn't determine num-slots\n");
-		return -ENODEV;
-	}
-	host->pdata->num_slots = prop;
-
-	/* Optional parameter. */
-	if (!of_property_read_u32(host->dev.of_node, "fifo-depth", &prop)) {
-		host->pdata->fifo_depth = prop;
-	}
-
-	if (of_property_read_u32(host->dev.of_node, "bus-width", &prop)) {
-		dev_err(&host->dev, "couldn't determine bus-width\n");
-		return -ENODEV;
-	}
-
-	if (prop == 8)
-		host->pdata->caps |= (MMC_CAP_4_BIT_DATA |
-					MMC_CAP_8_BIT_DATA);
-	else if (prop == 4)
-		host->pdata->caps |= MMC_CAP_4_BIT_DATA;
-#endif
-
 	if (!host->pdata->select_slot && host->pdata->num_slots > 1) {
 		dev_err(host->dev,
 			"Platform data must supply select_slot function\n");
@@ -2218,6 +2196,9 @@ int dw_mci_probe(struct dw_mci *host)
 		host->data_shift = 2;
 	}
 
+	/* Get the USE_HOLD_REG */
+	host->use_hold_reg = mci_readl(host, CMD) & SDMMC_CMD_USE_HOLD_REG;
+
 	/* Reset all blocks */
 	if (!mci_wait_reset(host->dev, host))
 		return -ENODEV;
diff --git a/drivers/mmc/host/dw_mmc.h b/drivers/mmc/host/dw_mmc.h
index 53b8fd9..6172900 100644
--- a/drivers/mmc/host/dw_mmc.h
+++ b/drivers/mmc/host/dw_mmc.h
@@ -111,6 +111,7 @@
 #define SDMMC_INT_ERROR			0xbfc2
 /* Command register defines */
 #define SDMMC_CMD_START			BIT(31)
+#define SDMMC_CMD_USE_HOLD_REG		BIT(29)
 #define SDMMC_CMD_CCS_EXP		BIT(23)
 #define SDMMC_CMD_CEATA_RD		BIT(22)
 #define SDMMC_CMD_UPD_CLK		BIT(21)
diff --git a/include/linux/mmc/dw_mmc.h b/include/linux/mmc/dw_mmc.h
index 6d84051..ad1df48 100644
--- a/include/linux/mmc/dw_mmc.h
+++ b/include/linux/mmc/dw_mmc.h
@@ -187,6 +187,9 @@ struct dw_mci {
 	struct regulator	*vmmc;	/* Power regulator */
 	unsigned long		irq_flags; /* IRQ flags */
 	int			irq;
+
+	/* Set to one for SDR12 and SDR25 */
+	unsigned int use_hold_reg;
 };
 
 /* DMA ops for Internal/External DMAC interface */
-- 
1.7.0

