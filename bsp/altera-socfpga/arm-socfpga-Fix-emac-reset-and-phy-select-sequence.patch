From 7fe2b1ee1646b116011d3c952e5cc2d0d31c32fe Mon Sep 17 00:00:00 2001
From: Graham Moore <grmoore@altera.com>
Date: Thu, 5 Sep 2013 14:14:14 -0500
Subject: [PATCH 09/13] arm/socfpga: Fix emac reset and phy-select sequence.

commit 4bfbf9c2689691ec54b92053850efe965d9cd456
git://git.rocketboards.org/linux-socfpga.git socfpga-3.10-ltsi branch

Change platform code so that emacs are left in reset until initialized.

Signed-off-by: Graham Moore <grmoore@altera.com>
[Just a minor modification to rebase to current context]
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 arch/arm/mach-socfpga/core.h    |    5 +++++
 arch/arm/mach-socfpga/socfpga.c |   19 ++++++++++++++-----
 2 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-socfpga/core.h b/arch/arm/mach-socfpga/core.h
index a64748a..f60954c 100644
--- a/arch/arm/mach-socfpga/core.h
+++ b/arch/arm/mach-socfpga/core.h
@@ -40,6 +40,11 @@
  #define RSTMGR_MPUMODRST_SCUPER	0x8	/*SCU and periphs reset*/
  #define RSTMGR_MPUMODRST_L2		0x10	/*L2 Cache reset*/
 
+/* Peripheral Module Reset Register bits */
+#define RSTMGR_PERMODRST_EMAC0	0x1
+#define RSTMGR_PERMODRST_EMAC1	0x2
+
+
 #define SYSMGR_EMACGRP_CTRL_OFFSET 0x60
 #define SYSMGR_EMACGRP_CTRL_PHYSEL_ENUM_GMII_MII 0x0
 #define SYSMGR_EMACGRP_CTRL_PHYSEL_ENUM_RGMII 0x1
diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index 9706f8b..b5b44f9f 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -145,8 +145,10 @@ static void __init socfpga_scu_map_io(void)
 
 static void __init enable_periphs(void)
 {
-	/* Release all peripherals from reset.*/
-	__raw_writel(0, rst_manager_base_addr + SOCFPGA_RSTMGR_MODPERRST);
+	/* Release all peripherals, except for emacs, from reset.*/
+	u32 rstval;
+	rstval = RSTMGR_PERMODRST_EMAC0 | RSTMGR_PERMODRST_EMAC1;
+	__raw_writel(rstval, rst_manager_base_addr + SOCFPGA_RSTMGR_MODPERRST);
 }
 
 #define MICREL_KSZ9021_EXTREG_CTRL 11
@@ -175,6 +177,7 @@ static int ksz9021rlrn_phy_fixup(struct phy_device *phydev)
 static int stmmac_plat_init(struct platform_device *pdev)
 {
 	u32 ctrl, val, shift;
+	u32 rstmask;
 	int phymode;
 
 	if (of_machine_is_compatible("altr,socfpga-vt"))
@@ -195,11 +198,13 @@ static int stmmac_plat_init(struct platform_device *pdev)
 		return -EINVAL;
 	}
 
-	if (&stmmacenet1_data == pdev->dev.platform_data)
+	if (&stmmacenet1_data == pdev->dev.platform_data) {
 		shift = SYSMGR_EMACGRP_CTRL_PHYSEL_WIDTH;
-	else if (&stmmacenet0_data == pdev->dev.platform_data)
+		rstmask = RSTMGR_PERMODRST_EMAC1;
+	} else if (&stmmacenet0_data == pdev->dev.platform_data) {
 		shift = 0;
-	else {
+		rstmask = RSTMGR_PERMODRST_EMAC0;
+	} else {
 		pr_err("%s unexpected platform data pointer\n", __func__);
 		return -EINVAL;
 	}
@@ -214,6 +219,10 @@ static int stmmac_plat_init(struct platform_device *pdev)
 	__raw_writel(ctrl, (sys_manager_base_addr +
 		SYSMGR_EMACGRP_CTRL_OFFSET));
 
+	ctrl = __raw_readl(rst_manager_base_addr + SOCFPGA_RSTMGR_MODPERRST);
+	ctrl &= ~(rstmask);
+	__raw_writel(ctrl, rst_manager_base_addr + SOCFPGA_RSTMGR_MODPERRST);
+
 	return 0;
 }
 
-- 
1.7.5.4

