From fe38ab8f487f3d571e97743a8a4eecd2e23c72e1 Mon Sep 17 00:00:00 2001
From: Thor Thayer <tthayer@altera.com>
Date: Wed, 15 Jan 2014 18:13:00 -0600
Subject: [PATCH 179/248] FogBugz #178128: Conditionally enable L2 EDAC.

Currently the L2 cache is the only ECC module implemented in
the ECC Manager. However, as more modules are added, the need
to turn each module on & off is required. The addition of
conditional compiles based on a new CONFIG (L2 ECC) is added
here.

V2:
Include dependency on CONFIG_CACHE_L2X0

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Thor Thayer <tthayer@altera.com>
---
 drivers/edac/Kconfig               | 16 ++++++++++++----
 drivers/edac/altera_ecc_mgr_edac.c |  4 +++-
 2 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/drivers/edac/Kconfig b/drivers/edac/Kconfig
index 9c5d57d..5d12510 100644
--- a/drivers/edac/Kconfig
+++ b/drivers/edac/Kconfig
@@ -382,9 +382,17 @@ config EDAC_ALTERA_ECC_MGR
 	depends on EDAC_MM_EDAC && ARCH_SOCFPGA
 	help
 	  Support for error detection and correction on the
-	  Altera memories. Ensure these requirements are met.
-	  -L2    Note that the preloader must initialize
-	         the L2 memory & enable the L2 ECC before
-	         loading the kernel.
+	  Altera memories. Submodules are individually
+	  configurable.
+
+config EDAC_ALTERA_L2_ECC
+	bool "Altera L2 Cache EDAC"
+	depends on EDAC_ALTERA_ECC_MGR && CACHE_L2X0
+	help
+	  Support for error detection and correction on the
+	  Altera L2 cache memory.
+	  Ensure the preloader is configured to initialize
+	  the L2 memory & enable the L2 ECC before loading
+	  the kernel.
 
 endif # EDAC
diff --git a/drivers/edac/altera_ecc_mgr_edac.c b/drivers/edac/altera_ecc_mgr_edac.c
index b43f451..a714c16 100644
--- a/drivers/edac/altera_ecc_mgr_edac.c
+++ b/drivers/edac/altera_ecc_mgr_edac.c
@@ -70,7 +70,7 @@ static irqreturn_t altr_ecc_mgr_handler(int irq, void *dev_id)
 	return IRQ_HANDLED;
 }
 
-#ifdef CONFIG_EDAC_DEBUG
+#if defined(CONFIG_EDAC_DEBUG) && defined(CONFIG_EDAC_ALTERA_L2_ECC)
 static ssize_t altr_l2_ecc_trig(struct edac_device_ctl_info *edac_dci,
 				const char *buffer, size_t count)
 {
@@ -197,7 +197,9 @@ static const struct ecc_mgr_of_data l2ecc_data = {
 };
 
 static const struct of_device_id altr_ecc_mgr_of_match[] = {
+#ifdef CONFIG_EDAC_ALTERA_L2_ECC
 	{ .compatible = "altr,l2-edac", .data = (void *)&l2ecc_data },
+#endif
 	{},
 };
 
-- 
1.9.1

