From 3660687c20336a8a2196e35e2a0fb45384971c47 Mon Sep 17 00:00:00 2001
From: Thor Thayer <tthayer@altera.com>
Date: Fri, 31 Jan 2014 11:26:43 -0600
Subject: [PATCH 181/248] FogBugz #180994: Conditionally enable L2 cache ECC on
 startup

Due to a misunderstanding in the preloader/U-Boot handoff process
the L2 ECC was originally enabled in preloader. The fact that L2
cache is disabled upon entry into Linux means that the L2 cache
ECC can be enabled upon Linux startup. This patch enables L2 ECC
early in the startup before the L2 cache is enabled.

V2
- Leave aux_ctl initialization alone.
- Use of_iomap() function.

[Original patch taken from
git://git.rocketboards.org/linux-socfpga.git socfpga-3.14]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
Signed-off-by: Thor Thayer <tthayer@altera.com>
---
 arch/arm/mach-socfpga/Makefile   |  2 ++
 arch/arm/mach-socfpga/l2_cache.c | 45 ++++++++++++++++++++++++++++++++++++++++
 arch/arm/mach-socfpga/l2_cache.h | 30 +++++++++++++++++++++++++++
 arch/arm/mach-socfpga/socfpga.c  |  2 ++
 4 files changed, 79 insertions(+)
 create mode 100644 arch/arm/mach-socfpga/l2_cache.c
 create mode 100644 arch/arm/mach-socfpga/l2_cache.h

diff --git a/arch/arm/mach-socfpga/Makefile b/arch/arm/mach-socfpga/Makefile
index 3b458a2..18e0a8f 100644
--- a/arch/arm/mach-socfpga/Makefile
+++ b/arch/arm/mach-socfpga/Makefile
@@ -7,3 +7,5 @@ obj-$(CONFIG_SMP)	+= headsmp.o platsmp.o
 obj-$(CONFIG_HW_PERF_EVENTS) += socfpga_cti.o
 obj-$(CONFIG_FPGADMA)	+= fpga-dma.o
 obj-$(CONFIG_EDAC_ALTERA_OCRAM_ECC) += ocram.o
+obj-$(CONFIG_EDAC_ALTERA_L2_ECC) += l2_cache.o
+
diff --git a/arch/arm/mach-socfpga/l2_cache.c b/arch/arm/mach-socfpga/l2_cache.c
new file mode 100644
index 0000000..9ced0be
--- /dev/null
+++ b/arch/arm/mach-socfpga/l2_cache.c
@@ -0,0 +1,45 @@
+/*
+ *  Copyright (C) 2014 Altera Corporation
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#include <linux/clk-provider.h>
+#include <linux/of_platform.h>
+#include <linux/of_address.h>
+
+void socfpga_init_l2_ecc(void)
+{
+	struct device_node *np;
+	void __iomem  *mapped_l2_edac_addr;
+
+	np = of_find_compatible_node(NULL, NULL, "altr,l2-edac");
+	if (!np) {
+		pr_err("SOCFPGA: Unable to find altr,l2-edac in dtb\n");
+		return;
+	}
+
+	mapped_l2_edac_addr = of_iomap(np, 0);
+	if (!mapped_l2_edac_addr) {
+		pr_err("SOCFPGA: Unable to find L2 ECC mapping in dtb\n");
+		return;
+	}
+
+	/* Enable ECC */
+	writel(0x01, mapped_l2_edac_addr);
+
+	pr_alert("SOCFPGA: Success Initializing L2 cache ECC");
+
+	return;
+}
+
diff --git a/arch/arm/mach-socfpga/l2_cache.h b/arch/arm/mach-socfpga/l2_cache.h
new file mode 100644
index 0000000..34b7578
--- /dev/null
+++ b/arch/arm/mach-socfpga/l2_cache.h
@@ -0,0 +1,30 @@
+/*
+ *  arch/arm/mach-socfpga/l2_cache.h
+ *
+ * Copyright (C) 2014 Altera Corporation
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef MACH_SOCFPGA_L2_CACHE_H
+#define MACH_SOCFPGA_L2_CACHE_H
+
+#ifdef CONFIG_EDAC_ALTERA_L2_ECC
+void socfpga_init_l2_ecc(void);
+#else
+inline void socfpga_init_l2_ecc(void)
+{
+}
+#endif
+
+#endif /* #ifndef MACH_SOCFPGA_L2_CACHE_H */
diff --git a/arch/arm/mach-socfpga/socfpga.c b/arch/arm/mach-socfpga/socfpga.c
index c8d2eae..02c728e 100644
--- a/arch/arm/mach-socfpga/socfpga.c
+++ b/arch/arm/mach-socfpga/socfpga.c
@@ -34,6 +34,7 @@
 #include "core.h"
 #include "socfpga_cti.h"
 #include "dma.h"
+#include "l2_cache.h"
 #include "ocram.h"
 
 void __iomem *socfpga_scu_base_addr = ((void __iomem *)(SOCFPGA_SCU_VIRT_BASE));
@@ -295,6 +296,7 @@ static void __init socfpga_cyclone5_init(void)
 {
 #ifdef CONFIG_CACHE_L2X0
 	u32 aux_ctrl = 0;
+	socfpga_init_l2_ecc();
 	aux_ctrl |= (1 << L2X0_AUX_CTRL_SHARE_OVERRIDE_SHIFT) |
 			(1 << L2X0_AUX_CTRL_DATA_PREFETCH_SHIFT) |
 			(1 << L2X0_AUX_CTRL_INSTR_PREFETCH_SHIFT);
-- 
1.9.1

