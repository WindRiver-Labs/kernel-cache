From d0885d96894fcbb51b29eb6141b3973a16908de2 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@opensource.altera.com>
Date: Tue, 23 Feb 2016 15:16:54 -0600
Subject: [PATCH 57/73] Revert "FogBugz #282531-1: Add "pwr-en" dts property
 to enable the PWREN bit"

This reverts commit 754c1f01511b12e839d03da30dc8d90390b389a6.

The PWREN logic was reversed on Rev.A of the Arria10 devkit. All Rev. B+
devkits have since fixed the PWREN reversed logic, thus we can revert
commit 754c1f01511b 'FogBugz #282531-1: Add "pwr-en" dts property to enable
the PWREN bit'.

Signed-off-by: Dinh Nguyen <dinguyen@opensource.altera.com>
[mli1:Original patch taken from
https://github.com/altera-opensource/linux-socfpga.git socfpga-4.1-ltsi]
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mmc/host/dw_mmc.c  |   21 ++++-----------------
 include/linux/mmc/dw_mmc.h |    1 -
 2 files changed, 4 insertions(+), 18 deletions(-)

diff --git a/drivers/mmc/host/dw_mmc.c b/drivers/mmc/host/dw_mmc.c
index b96182a..7ed9148 100644
--- a/drivers/mmc/host/dw_mmc.c
+++ b/drivers/mmc/host/dw_mmc.c
@@ -1151,7 +1151,6 @@ static void dw_mci_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)
 {
 	struct dw_mci_slot *slot = mmc_priv(mmc);
 	const struct dw_mci_drv_data *drv_data = slot->host->drv_data;
-	struct dw_mci *host = slot->host;
 	u32 regs;
 	int ret;
 
@@ -1203,11 +1202,7 @@ static void dw_mci_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)
 		set_bit(DW_MMC_CARD_NEED_INIT, &slot->flags);
 		regs = mci_readl(slot->host, PWREN);
 		regs |= (1 << slot->id);
-		if (host->pdata->pwr_en) {
-			regs = mci_readl(slot->host, PWREN);
-			regs |= (1 << slot->id);
-			mci_writel(slot->host, PWREN, regs);
-		}
+		mci_writel(slot->host, PWREN, regs);
 		break;
 	case MMC_POWER_ON:
 		if (!slot->host->vqmmc_enabled) {
@@ -1244,11 +1239,9 @@ static void dw_mci_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)
 			regulator_disable(mmc->supply.vqmmc);
 		slot->host->vqmmc_enabled = false;
 
-		if (host->pdata->pwr_en) {
-			regs = mci_readl(slot->host, PWREN);
-			regs &= ~(1 << slot->id);
-			mci_writel(slot->host, PWREN, regs);
-		}
+		regs = mci_readl(slot->host, PWREN);
+		regs &= ~(1 << slot->id);
+		mci_writel(slot->host, PWREN, regs);
 		break;
 	default:
 		break;
@@ -2675,7 +2668,6 @@ static struct dw_mci_board *dw_mci_parse_dt(struct dw_mci *host)
 	const struct dw_mci_drv_data *drv_data = host->drv_data;
 	int idx, ret;
 	u32 clock_frequency;
-	int pwr_en;
 
 	pdata = devm_kzalloc(dev, sizeof(*pdata), GFP_KERNEL);
 	if (!pdata)
@@ -2712,11 +2704,6 @@ static struct dw_mci_board *dw_mci_parse_dt(struct dw_mci *host)
 	if (of_find_property(np, "supports-highspeed", NULL))
 		pdata->caps |= MMC_CAP_SD_HIGHSPEED | MMC_CAP_MMC_HIGHSPEED;
 
-	if (of_property_read_u32(dev->of_node, "pwr-en", &pwr_en)) {
-		dev_dbg(dev, "couldn't determine pwr-en, assuming pwr-en = 1\n");
-		pdata->pwr_en = 1;
-	}
-
 	return pdata;
 }
 
diff --git a/include/linux/mmc/dw_mmc.h b/include/linux/mmc/dw_mmc.h
index 8c27980..1211199 100644
--- a/include/linux/mmc/dw_mmc.h
+++ b/include/linux/mmc/dw_mmc.h
@@ -259,7 +259,6 @@ struct dw_mci_board {
 	 * it.
 	 */
 	unsigned int fifo_depth;
-	int pwr_en;
 
 	/* delay in mS before detecting cards after interrupt */
 	u32 detect_delay_ms;
-- 
1.7.5.4

