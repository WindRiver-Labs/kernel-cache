From e315a6d8489b5721104fcda06833f1e2e0643c56 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <dinguyen@altera.com>
Date: Thu, 28 Mar 2013 22:28:52 -0500
Subject: [PATCH 224/254] arm: socfpga: Fix dw_apb_timer implementation

Upstream: git://git.rocketboards.org/linux-socfpga.git

When switching to use the community's drivers/clocksource/dw_apb_timer.c,
the kernel's scheduler timer was no longer valid because the scheduler's
clock was returning an incorrect value.

Also, the clocksource timer must also be the same source for the scheduler's
timer.

Signed-off-by: Dinh Nguyen <dinguyen@altera.com>
(cherry picked from commit 54902df54f08c36f583104921fb670c29484b0f2)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/clocksource/dw_apb_timer.c    |    6 ------
 drivers/clocksource/dw_apb_timer_of.c |    5 +++--
 include/linux/dw_apb_timer.h          |    6 ++++++
 3 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/drivers/clocksource/dw_apb_timer.c b/drivers/clocksource/dw_apb_timer.c
index 8c2a35f..460ac99 100644
--- a/drivers/clocksource/dw_apb_timer.c
+++ b/drivers/clocksource/dw_apb_timer.c
@@ -21,12 +21,6 @@
 #define APBT_MIN_PERIOD			4
 #define APBT_MIN_DELTA_USEC		200
 
-#define APBTMR_N_LOAD_COUNT		0x00
-#define APBTMR_N_CURRENT_VALUE		0x04
-#define APBTMR_N_CONTROL		0x08
-#define APBTMR_N_EOI			0x0c
-#define APBTMR_N_INT_STATUS		0x10
-
 #define APBTMRS_INT_STATUS		0xa0
 #define APBTMRS_EOI			0xa4
 #define APBTMRS_RAW_INT_STATUS		0xa8
diff --git a/drivers/clocksource/dw_apb_timer_of.c b/drivers/clocksource/dw_apb_timer_of.c
index f7dba5b..0272e8b 100644
--- a/drivers/clocksource/dw_apb_timer_of.c
+++ b/drivers/clocksource/dw_apb_timer_of.c
@@ -77,7 +77,7 @@ static void __iomem *sched_io_base;
 
 static u32 read_sched_clock(void)
 {
-	return __raw_readl(sched_io_base);
+	return ~__raw_readl(sched_io_base + APBTMR_N_CURRENT_VALUE);
 }
 
 static const struct of_device_id sptimer_ids[] __initconst = {
@@ -116,11 +116,12 @@ static void __init timer_init(void)
 		panic("No timer for clockevent");
 	add_clockevent(event_timer);
 
-	source_timer = of_find_matching_node(event_timer, osctimer_ids);
+	source_timer = of_find_matching_node(NULL, sptimer_ids);
 	if (!source_timer)
 		panic("No timer for clocksource");
 	add_clocksource(source_timer);
 
+	of_node_put(event_timer);
 	of_node_put(source_timer);
 
 	init_sched_clock();
diff --git a/include/linux/dw_apb_timer.h b/include/linux/dw_apb_timer.h
index 1148575..bf93e31 100644
--- a/include/linux/dw_apb_timer.h
+++ b/include/linux/dw_apb_timer.h
@@ -17,6 +17,12 @@
 #include <linux/clocksource.h>
 #include <linux/interrupt.h>
 
+#define APBTMR_N_LOAD_COUNT		0x00
+#define APBTMR_N_CURRENT_VALUE		0x04
+#define APBTMR_N_CONTROL		0x08
+#define APBTMR_N_EOI			0x0c
+#define APBTMR_N_INT_STATUS		0x10
+
 #define APBTMRS_REG_SIZE       0x14
 
 struct dw_apb_timer {
-- 
1.7.5.4

