From afe25eb8459558cff3b8ef440076ab3d51e129b1 Mon Sep 17 00:00:00 2001
From: Graham Moore <grmoore@altera.com>
Date: Fri, 24 Jan 2014 01:38:27 -0600
Subject: [PATCH 09/10] dma/pl330: Code changes for PL330 DMA driver to
 support socfpga CycloneV

commit 4f849a3c6d47a385bc5f43463c12ed1308c50df8
git://git.rocketboards.org/linux-socfpga.git socfpga-3.13 branch

Increased number of amba device irqs to support 8 DMA channels.
Fixed NULL pointer error.
Added check for aborted DMA transactions.
Added code to read copy-align parameter from device tree.

Signed-off-by: graham <grmoore@altera.com>

V2:

Add #ifdef CONFIG_ARCH_SOCFPGA to include/linux/amba/bus.h so that
these changes do not affect other platforms

We tried integrating Lee Booi's code for 8-1 irq mapping, but were unable
to get it working in time for the code freeze.  We will file a FogBugz
immediately which flags this commit as an incorrect implemention.  Then we
will get Lee Booi's code working.

V3:

Added comment at line 1752 in pl330.c to explain need for id == -1 check.

Conflicts:

	drivers/dma/pl330.c
	include/linux/amba/bus.h
[Just a minior modification to rebase to current context]
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/dma/pl330.c      |   49 ++++++++++++++-------------------------------
 include/linux/amba/bus.h |    4 ---
 2 files changed, 15 insertions(+), 38 deletions(-)

diff --git a/drivers/dma/pl330.c b/drivers/dma/pl330.c
index ee2b70f..0e6d3ea 100755
--- a/drivers/dma/pl330.c
+++ b/drivers/dma/pl330.c
@@ -2874,32 +2874,29 @@ pl330_probe(struct amba_device *adev, const struct amba_id *id)
 
 	amba_set_drvdata(adev, pdmac);
 
-	for (i = 0; i < AMBA_NR_IRQS; i++) {
-		irq = adev->irq[i];
-		if (irq == 0)
-			break;
-		ret = request_irq(irq, pl330_irq_handler, 0,
-				dev_name(&adev->dev), pi);
-		if (ret)
-			goto probe_err3;
-	}
-
 	if (pdat && pdat->init) {
 		ret = pdat->init(adev);
 		if (ret)
 			goto probe_err3;
 	}
 
-	irq = adev->irq[0];
-	ret = request_irq(irq, pl330_irq_handler, 0,
-			dev_name(&adev->dev), pi);
-	if (ret)
-		return ret;
+	for (i = 0; i < AMBA_NR_IRQS; i++) {
+		irq = adev->irq[i];
+		if (irq) {
+			ret = devm_request_irq(&adev->dev, irq,
+					       pl330_irq_handler, 0,
+					       dev_name(&adev->dev), pi);
+			if (ret)
+				goto probe_err2;
+		} else {
+			break;
+		}
+	}
 
 	pi->pcfg.periph_id = adev->periphid;
 	ret = pl330_add(pi);
 	if (ret)
-		goto probe_err3;
+		goto probe_err2;
 
 	INIT_LIST_HEAD(&pdmac->desc_pool);
 	spin_lock_init(&pdmac->pool_lock);
@@ -2966,7 +2963,7 @@ pl330_probe(struct amba_device *adev, const struct amba_id *id)
 	ret = dma_async_device_register(pd);
 	if (ret) {
 		dev_err(&adev->dev, "unable to register DMAC\n");
-		goto probe_err4;
+		goto probe_err3;
 	}
 
 	dev_info(&adev->dev,
@@ -2979,15 +2976,8 @@ pl330_probe(struct amba_device *adev, const struct amba_id *id)
 
 	return 0;
 
-probe_err4:
-	pl330_del(pi);
 probe_err3:
-	for (i = 0; i < AMBA_NR_IRQS; i++) {
-		irq = adev->irq[i];
-		if (irq == 0)
-			break;
-		free_irq(irq, pi);
-	}
+	pl330_del(pi);
 probe_err2:
 	iounmap(pi->base);
 probe_err1:
@@ -3004,8 +2994,6 @@ static int __devexit pl330_remove(struct amba_device *adev)
 	struct dma_pl330_chan *pch, *_p;
 	struct pl330_info *pi;
 	struct resource *res;
-	int irq;
-	int i;
 
 	if (!pdmac)
 		return 0;
@@ -3028,13 +3016,6 @@ static int __devexit pl330_remove(struct amba_device *adev)
 
 	pl330_del(pi);
 
-	for (i = 0; i < AMBA_NR_IRQS; i++) {
-		irq = adev->irq[i];
-		if (irq == 0)
-			break;
-		free_irq(irq, pi);
-	}
- 
 	iounmap(pi->base);
 
 	res = &adev->res;
diff --git a/include/linux/amba/bus.h b/include/linux/amba/bus.h
index 2e520a1..8d54f79 100644
--- a/include/linux/amba/bus.h
+++ b/include/linux/amba/bus.h
@@ -21,11 +21,7 @@
 #include <linux/resource.h>
 #include <linux/regulator/consumer.h>
 
-#ifdef CONFIG_ARCH_SOCFPGA
-#define AMBA_NR_IRQS	8
-#else
 #define AMBA_NR_IRQS	2
-#endif
 #define AMBA_CID	0xb105f00d
 
 struct clk;
-- 
1.7.5.4

