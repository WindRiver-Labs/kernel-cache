From 904136fab67962dfac82329602f14873d457eff1 Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Fri, 14 Feb 2014 14:07:34 -0600
Subject: [PATCH 170/188] ARM: OMAP2+: omap_hwmod: Add context ops to am43xx
 soc_ops

This commit comes from branch ti-linux-3.12.y:
  git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git

AM43XX contains PRM_*_CONTEXT registers like OMAP4 did to track loss
of context in modules so utilize the same get_context_loss_count soc_op
present for OMAP4 but define a custom update context loss function for
am43xx. Because we do not define context_offs for each hwmod, introduce
a new flag to indicate when we have so we only bother to update when
we know that it is valid.

Certain drivers use the context loss count to determine if context was
truly lost during a suspend operation to decide whether or not a
context restore is truly necessary. Without this, some drivers may
choose not to restore context when they have actually lost it and fail
to properly resume.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
(cherry picked from commit fe66c6993c174934d26043286370254e43c09e7f)
---
 arch/arm/mach-omap2/omap_hwmod.c |   27 +++++++++++++++++++++++++++
 arch/arm/mach-omap2/omap_hwmod.h |    1 +
 2 files changed, 28 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/omap_hwmod.c b/arch/arm/mach-omap2/omap_hwmod.c
index 2e49efb..1c1dfdd 100644
--- a/arch/arm/mach-omap2/omap_hwmod.c
+++ b/arch/arm/mach-omap2/omap_hwmod.c
@@ -2164,6 +2164,31 @@ static void _omap4_update_context_lost(struct omap_hwmod *oh)
 }
 
 /**
+ * _am437x_update_context_lost - increment hwmod context loss counter if
+ * hwmod context was lost, and clear hardware context loss reg
+ * @oh: hwmod to check for context loss
+ *
+ * If the PRCM indicates that the hwmod @oh lost context, increment
+ * our in-memory context loss counter, and clear the RM_*_CONTEXT
+ * bits. No return value.
+ */
+static void _am437x_update_context_lost(struct omap_hwmod *oh)
+{
+	if (!(oh->prcm.omap4.flags & HWMOD_AM437X_HAS_CONTEXT_LOSS_BIT))
+		return;
+
+	if (!prm_was_any_context_lost_old(oh->clkdm->pwrdm.ptr->prcm_partition,
+					  oh->clkdm->pwrdm.ptr->prcm_offs,
+					  oh->prcm.omap4.context_offs))
+		return;
+
+	oh->prcm.omap4.context_lost_counter++;
+	prm_clear_context_loss_flags_old(oh->clkdm->pwrdm.ptr->prcm_partition,
+					 oh->clkdm->pwrdm.ptr->prcm_offs,
+					 oh->prcm.omap4.context_offs);
+}
+
+/**
  * _omap4_get_context_lost - get context loss counter for a hwmod
  * @oh: hwmod to get context loss counter for
  *
@@ -4295,6 +4320,8 @@ void __init omap_hwmod_init(void)
 		soc_ops.deassert_hardreset = _omap4_deassert_hardreset;
 		soc_ops.is_hardreset_asserted = _omap4_is_hardreset_asserted;
 		soc_ops.init_clkdm = _init_clkdm;
+		soc_ops.update_context_lost = _am437x_update_context_lost;
+		soc_ops.get_context_lost = _omap4_get_context_lost;
 	} else if (soc_is_am33xx()) {
 		soc_ops.enable_module = _am33xx_enable_module;
 		soc_ops.disable_module = _am33xx_disable_module;
diff --git a/arch/arm/mach-omap2/omap_hwmod.h b/arch/arm/mach-omap2/omap_hwmod.h
index f16afc6..80b3285 100644
--- a/arch/arm/mach-omap2/omap_hwmod.h
+++ b/arch/arm/mach-omap2/omap_hwmod.h
@@ -450,6 +450,7 @@ struct omap_hwmod_omap2_prcm {
  *     flag bit should be set in those cases
  */
 #define HWMOD_OMAP4_NO_CONTEXT_LOSS_BIT		(1 << 0)
+#define HWMOD_AM437X_HAS_CONTEXT_LOSS_BIT		(1 << 1)
 
 /**
  * struct omap_hwmod_omap4_prcm - OMAP4-specific PRCM data
-- 
1.7.5.4

