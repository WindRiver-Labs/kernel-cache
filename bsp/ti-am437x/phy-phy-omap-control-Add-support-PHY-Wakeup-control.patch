From b8c9bedd5ac29b12007c5f7b03da95285853f6db Mon Sep 17 00:00:00 2001
From: George Cherian <george.cherian@ti.com>
Date: Tue, 17 Dec 2013 18:47:52 +0530
Subject: [PATCH 235/285] phy: phy-omap-control: Add support PHY Wakeup
 control

Add support to enable and disable the PHY wakeup feature
on AM43x. This is used to support the USB remote wakeup
feature in AM43x SoC.

Signed-off-by: George Cherian <george.cherian@ti.com>
[Kevin: The original patch taken from TI
ti-sdk-am437x-evm-07.01.00.00-Linux-x86-Install.bin]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/phy/phy-omap-control.c       |   40 ++++++++++++++++++++++++++++++++++
 include/linux/phy/omap_control_phy.h |    6 +++++
 2 files changed, 46 insertions(+), 0 deletions(-)

diff --git a/drivers/phy/phy-omap-control.c b/drivers/phy/phy-omap-control.c
index 5fcd0b9..068e8f4 100644
--- a/drivers/phy/phy-omap-control.c
+++ b/drivers/phy/phy-omap-control.c
@@ -110,6 +110,46 @@ void omap_control_phy_power(struct device *dev, int on)
 EXPORT_SYMBOL_GPL(omap_control_phy_power);
 
 /**
+ * omap_control_phy_wkup - PHY wkup on/off the phy using control module reg
+ * @dev: the control module device
+ * @on: 0 or 1, based on enable phy wakeup or disable phy wakeup
+ */
+void omap_control_phy_wkup(struct device *dev, int on)
+{
+	u32 val;
+	struct omap_control_phy	*control_phy;
+
+	if (IS_ERR(dev) || !dev) {
+		pr_err("%s: invalid device\n", __func__);
+		return;
+	}
+
+	control_phy = dev_get_drvdata(dev);
+	if (!control_phy) {
+		dev_err(dev, "%s: invalid control phy device\n", __func__);
+		return;
+	}
+
+	val = readl(control_phy->power);
+
+	switch (control_phy->type) {
+	case OMAP_CTRL_TYPE_AM437USB2:
+		if (on)
+			val |= AM437X_CTRL_USB2_WKUP_EN;
+		else
+			val &= ~(AM437X_CTRL_USB2_WKUP_EN);
+		break;
+
+	default:
+		dev_err(dev, "%s: type %d not recognized\n",
+			__func__, control_phy->type);
+		break;
+	}
+
+	writel(val, control_phy->power);
+}
+EXPORT_SYMBOL_GPL(omap_control_phy_wkup);
+/**
  * omap_control_usb_host_mode - set AVALID, VBUSVALID and ID pin in grounded
  * @ctrl_phy: struct omap_control_phy *
  *
diff --git a/include/linux/phy/omap_control_phy.h b/include/linux/phy/omap_control_phy.h
index ed98d9b..6a7bae3 100644
--- a/include/linux/phy/omap_control_phy.h
+++ b/include/linux/phy/omap_control_phy.h
@@ -69,9 +69,11 @@ enum omap_control_usb_mode {
 #define AM437X_CTRL_USB2_OTG_PD		BIT(1)
 #define AM437X_CTRL_USB2_OTGVDET_EN	BIT(19)
 #define AM437X_CTRL_USB2_OTGSESSEND_EN	BIT(20)
+#define AM437X_CTRL_USB2_WKUP_EN	BIT(21)
 
 #if IS_ENABLED(CONFIG_OMAP_CONTROL_PHY)
 extern void omap_control_phy_power(struct device *dev, int on);
+void omap_control_phy_wkup(struct device *dev, int on);
 extern void omap_control_usb_set_mode(struct device *dev,
 	enum omap_control_usb_mode mode);
 #else
@@ -80,6 +82,10 @@ static inline void omap_control_phy_power(struct device *dev, int on)
 {
 }
 
+static inline void omap_control_phy_wkup(struct device *dev, int on)
+{
+}
+
 static inline void omap_control_usb_set_mode(struct device *dev,
 	enum omap_control_usb_mode mode)
 {
-- 
1.7.5.4

