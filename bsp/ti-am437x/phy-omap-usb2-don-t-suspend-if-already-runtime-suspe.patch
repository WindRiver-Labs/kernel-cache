From 061b6fb9b5dbc90969144f72fbf883e3908f8c26 Mon Sep 17 00:00:00 2001
From: Felipe Balbi <balbi@ti.com>
Date: Mon, 20 Jan 2014 18:20:50 -0600
Subject: [PATCH 247/285] phy: omap-usb2: don't suspend if already runtime
 suspended

When trying to echo mem > /sys/power/state when the USB2
PHY was already runtime suspended, we would see a WARN()
complaining about unbalanced clk_disable().

This was pretty obviously wrong in the PHY driver where
it would allow the PHY to be suspended after it was already
runtime_suspended.

Tested-by: Dave Gerlach <d-gerlach@ti.com>
Signed-off-by: Felipe Balbi <balbi@ti.com>
[Kevin: The original patch taken from TI
ti-sdk-am437x-evm-07.01.00.00-Linux-x86-Install.bin]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/phy/phy-omap-usb2.c |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/drivers/phy/phy-omap-usb2.c b/drivers/phy/phy-omap-usb2.c
index 47f7d80..78fdfd1 100644
--- a/drivers/phy/phy-omap-usb2.c
+++ b/drivers/phy/phy-omap-usb2.c
@@ -383,7 +383,8 @@ static int omap_usb2_suspend(struct device *dev)
 	if (phy->flags & OMAP_USB2_ENABLE_PHYWKUP)
 		omap_usb2_enable_phywkup(phy);
 
-	omap_usb2_disable_clocks(phy);
+	if (!pm_runtime_suspended(dev))
+		omap_usb2_disable_clocks(phy);
 
 	return 0;
 }
@@ -398,6 +399,10 @@ static int omap_usb2_resume(struct device *dev)
 	if (phy->flags & OMAP_USB2_ENABLE_PHYWKUP)
 		omap_usb2_disable_phywkup(phy);
 
+	pm_runtime_disable(dev);
+	pm_runtime_set_active(dev);
+	pm_runtime_enable(dev);
+
 	return ret;
 }
 
-- 
1.7.5.4

