From 636a0fd5f672e04a53c345b91b501d105b4a1746 Mon Sep 17 00:00:00 2001
From: "Hebbar, Gururaja" <gururaja.hebbar@ti.com>
Date: Fri, 31 Jan 2014 18:44:59 +0530
Subject: [PATCH 200/285] mmc: omap_hsmmc: enhance pinctrl support

Update omap_hsmmc driver to set the state of the pins to:
- "default" on resume
- "idle" after runtime suspend
- "sleep" on suspend

This should make it possible to optimize energy usage for the pins both
for the suspend/resume cycle, and for runtime cases in-between mmc
transfers.

By optionally putting the pins into sleep state in the suspend callback
we can accomplish two things.
- minimize current leakage from pins and thus save power,
- prevent the IP from driving pins output in an uncontrolled manner,
which may happen if the power domain drops the domain regulator.

Signed-off-by: Hebbar, Gururaja <gururaja.hebbar@ti.com>
Signed-off-by: Balaji T K <balajitk@ti.com>
[Kevin: The original patch taken from TI
ti-sdk-am437x-evm-07.01.00.00-Linux-x86-Install.bin]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/mmc/host/omap_hsmmc.c |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
index 1cdda0f..a2dd101 100644
--- a/drivers/mmc/host/omap_hsmmc.c
+++ b/drivers/mmc/host/omap_hsmmc.c
@@ -2498,6 +2498,10 @@ static int omap_hsmmc_suspend(struct device *dev)
 		clk_disable_unprepare(host->dbclk);
 err:
 	pm_runtime_put_sync(host->dev);
+
+	/* Select sleep pin state */
+	pinctrl_pm_select_sleep_state(host->dev);
+
 	return ret;
 }
 
@@ -2513,6 +2517,9 @@ static int omap_hsmmc_resume(struct device *dev)
 	if (host && !host->suspended)
 		return 0;
 
+	/* Select default pin state */
+	pinctrl_pm_select_default_state(host->dev);
+
 	pm_runtime_get_sync(host->dev);
 
 	if (host->dbclk)
@@ -2550,6 +2557,9 @@ static int omap_hsmmc_runtime_suspend(struct device *dev)
 	omap_hsmmc_context_save(host);
 	dev_dbg(dev, "disabled\n");
 
+	/* Optionally let pins go into idle state */
+	pinctrl_pm_select_idle_state(host->dev);
+
 	return 0;
 }
 
@@ -2558,6 +2568,10 @@ static int omap_hsmmc_runtime_resume(struct device *dev)
 	struct omap_hsmmc_host *host;
 
 	host = platform_get_drvdata(to_platform_device(dev));
+
+	/* go to the default state */
+	pinctrl_pm_select_default_state(host->dev);
+
 	omap_hsmmc_context_restore(host);
 	dev_dbg(dev, "enabled\n");
 
-- 
1.7.5.4

