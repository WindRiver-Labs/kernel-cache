From c4bd67ef532c3124b8a75b5b798fc08ebc2e8a41 Mon Sep 17 00:00:00 2001
From: Archit Taneja <archit@ti.com>
Date: Mon, 27 Jan 2014 12:51:04 +0530
Subject: [PATCH 178/285] v4l: ti-vpe: Allocate vfd through
 video_device_alloc()

The video_device struct is currently a part of the driver data struct vpe_dev.
A vpe_dev instance is allocated by the driver, and the memory for the vfd is a
part of this struct.

The v4l2 core, however, manages the removal of the vfd region, through the
video_device's .release() op, and tries to free it seperately. This causes
memory corruption, and leads to issues when we try to re-insert the vpe module.

Use vide_device_alloc() v4l2-device helper, and let the v4l2 core manage the
allocation and free-ing of the video_device struct memory.

Signed-off-by: Archit Taneja <archit@ti.com>
Signed-off-by: Darren Etheridge <detheridge@ti.com>
[Kevin: The original patch taken from TI
ti-sdk-am437x-evm-07.01.00.00-Linux-x86-Install.bin]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/media/platform/ti-vpe/vpe.c |   13 ++++++++++---
 1 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/drivers/media/platform/ti-vpe/vpe.c b/drivers/media/platform/ti-vpe/vpe.c
index da0655a..2c9d416 100644
--- a/drivers/media/platform/ti-vpe/vpe.c
+++ b/drivers/media/platform/ti-vpe/vpe.c
@@ -348,7 +348,7 @@ static struct vpe_fmt *find_format(struct v4l2_format *f)
  */
 struct vpe_dev {
 	struct v4l2_device	v4l2_dev;
-	struct video_device	vfd;
+	struct video_device	*vfd;
 	struct v4l2_m2m_dev	*m2m_dev;
 
 	atomic_t		num_instances;	/* count of driver instances */
@@ -2132,7 +2132,13 @@ static void vpe_fw_cb(struct platform_device *pdev)
 	struct video_device *vfd;
 	int ret;
 
-	vfd = &dev->vfd;
+	vfd = video_device_alloc();
+	if (!vfd) {
+		vpe_err(dev, "Failed to allocate video device\n");
+		return;
+	}
+
+	dev->vfd = vfd;
 	*vfd = vpe_videodev;
 	vfd->lock = &dev->dev_mutex;
 	vfd->v4l2_dev = &dev->v4l2_dev;
@@ -2146,6 +2152,7 @@ static void vpe_fw_cb(struct platform_device *pdev)
 		pm_runtime_disable(&pdev->dev);
 		v4l2_m2m_release(dev->m2m_dev);
 		vb2_dma_contig_cleanup_ctx(dev->alloc_ctx);
+		video_device_release(vfd);
 		v4l2_device_unregister(&dev->v4l2_dev);
 
 		return;
@@ -2269,7 +2276,7 @@ static int vpe_remove(struct platform_device *pdev)
 	v4l2_info(&dev->v4l2_dev, "Removing " VPE_MODULE_NAME);
 
 	v4l2_m2m_release(dev->m2m_dev);
-	video_unregister_device(&dev->vfd);
+	video_unregister_device(dev->vfd);
 	v4l2_device_unregister(&dev->v4l2_dev);
 	vb2_dma_contig_cleanup_ctx(dev->alloc_ctx);
 
-- 
1.7.5.4

