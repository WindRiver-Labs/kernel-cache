From e3de6e96296f7ea0dcb58208c9c3c929effaaf3d Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Fri, 7 Mar 2014 09:51:41 +0800
Subject: [PATCH 180/188] watchdog: omap-wdt: add am33xx reset detect support

pdata is not valid resource any more for DTB mode, so
we get the reset bit resources from prm.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/watchdog/omap_wdt.c                 |   15 +++++++++------
 include/linux/platform_data/omap-wd-timer.h |    2 ++
 2 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/drivers/watchdog/omap_wdt.c b/drivers/watchdog/omap_wdt.c
index 1150ac6..2df3259 100644
--- a/drivers/watchdog/omap_wdt.c
+++ b/drivers/watchdog/omap_wdt.c
@@ -322,12 +322,15 @@ static int omap_wdt_probe(struct platform_device *pdev)
 	pm_runtime_enable(wdev->dev);
 	pm_runtime_get_sync(wdev->dev);
 
-	if (pdata && pdata->read_reset_sources)
+	if (pdata && pdata->read_reset_sources) {
 		rs = pdata->read_reset_sources();
-	else
-		rs = 0;
-	omap_wdt->bootstatus = (rs & (1 << OMAP_MPU_WD_RST_SRC_ID_SHIFT)) ?
+		omap_wdt->bootstatus =
+				(rs & (1 << OMAP_MPU_WD_RST_SRC_ID_SHIFT)) ?
 				WDIOF_CARDRESET : 0;
+	} else {
+		rs = prm_read_reset_sources();
+		omap_wdt->bootstatus =  rs;
+	}
 
 	omap_wdt_disable(wdev);
 
@@ -337,9 +340,9 @@ static int omap_wdt_probe(struct platform_device *pdev)
 		return ret;
 	}
 
-	pr_info("OMAP Watchdog Timer Rev 0x%02x: initial timeout %d sec\n",
+	pr_info("OMAP Watchdog Timer Rev 0x%02x: initial timeout %d sec bootstatus 0x%x\n",
 		__raw_readl(wdev->base + OMAP_WATCHDOG_REV) & 0xFF,
-		omap_wdt->timeout);
+		omap_wdt->timeout, omap_wdt->bootstatus);
 
 	pm_runtime_put_sync(wdev->dev);
 
diff --git a/include/linux/platform_data/omap-wd-timer.h b/include/linux/platform_data/omap-wd-timer.h
index ae3ce59..b29be2e 100644
--- a/include/linux/platform_data/omap-wd-timer.h
+++ b/include/linux/platform_data/omap-wd-timer.h
@@ -44,4 +44,6 @@ struct omap_wd_timer_platform_data {
 	u32 ip_rev;
 };
 
+/* Directly called by driver if no platform data pointer */
+extern u32 prm_read_reset_sources(void);
 #endif
-- 
1.7.5.4

