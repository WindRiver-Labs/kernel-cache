From 8f2de573c15b80216e8f16a71f059baf2411d382 Mon Sep 17 00:00:00 2001
From: Benoit Parrot <bparrot@ti.com>
Date: Tue, 4 Feb 2014 02:18:41 +0000
Subject: [PATCH 211/285] Media: platform: ti-vpfe: minor code cleanup

Removed unsused data structures.
Modified/added some debug statement.

Signed-off-by: Benoit Parrot <bparrot@ti.com>
Signed-off-by: Darren Etheridge <detheridge@ti.com>
[Kevin: The original patch taken from TI
ti-sdk-am437x-evm-07.01.00.00-Linux-x86-Install.bin]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/media/platform/ti-vpfe/am437x_isif.c  |   13 +++--
 drivers/media/platform/ti-vpfe/vpfe_capture.c |   62 -------------------------
 2 files changed, 8 insertions(+), 67 deletions(-)

diff --git a/drivers/media/platform/ti-vpfe/am437x_isif.c b/drivers/media/platform/ti-vpfe/am437x_isif.c
index a33b1cb..abe92f2 100644
--- a/drivers/media/platform/ti-vpfe/am437x_isif.c
+++ b/drivers/media/platform/ti-vpfe/am437x_isif.c
@@ -118,7 +118,10 @@ void isif_setwin(struct vpfe_isif_device *isif, struct v4l2_rect *image_win,
 	int vert_start, vert_nr_lines;
 	int val = 0, mid_img = 0;
 
-	dev_dbg(isif->isif_cfg.dev, "\nStarting isif_setwin...");
+	dev_dbg(isif->isif_cfg.dev, "isif_setwin: %dx%d (WxH)\n",
+		image_win->width, image_win->height);
+	dev_dbg(isif->isif_cfg.dev, "isif_setwin: top %d left %d\n",
+		image_win->top, image_win->left);
 	/*
 	 * ppc - per pixel count. indicates how many pixels per cell
 	 * output to SDRAM. example, for ycbcr, it is one y and one c, so 2.
@@ -159,7 +162,7 @@ void isif_setwin(struct vpfe_isif_device *isif, struct v4l2_rect *image_win,
 		(vert_start << ISIF_VERT_START_SLV0_SHIFT) | vert_start,
 	    ISIF_VERT_START);
 	isif_write(isif, vert_nr_lines, ISIF_VERT_LINES);
-	dev_dbg(isif->isif_cfg.dev, "\nEnd of isif_setwin...");
+	dev_dbg(isif->isif_cfg.dev, "End of isif_setwin...\n");
 }
 
 static void isif_readregs(struct vpfe_isif_device *isif)
@@ -323,7 +326,7 @@ void isif_config_ycbcr(struct vpfe_isif_device *isif)
 	struct isif_params_ycbcr *params = &isif->isif_cfg.ycbcr;
 	u32 syn_mode;
 
-	dev_dbg(isif->isif_cfg.dev, "\nStarting isif_config_ycbcr...");
+	dev_dbg(isif->isif_cfg.dev, "isif_config_ycbcr:\n");
 	/*
 	 * first restore the ISIF registers to default values
 	 * This is important since we assume default values to be set in
@@ -458,7 +461,7 @@ void isif_config_raw(struct vpfe_isif_device *isif)
 	unsigned int syn_mode = 0;
 	unsigned int val;
 
-	dev_dbg(isif->isif_cfg.dev, "\nStarting isif_config_raw...");
+	dev_dbg(isif->isif_cfg.dev, "isif_config_raw:\n");
 
 	/* Reset ISIF */
 	isif_restore_defaults(isif);
@@ -543,7 +546,7 @@ void isif_config_raw(struct vpfe_isif_device *isif)
 	dev_dbg(isif->isif_cfg.dev,
 		"\nWriting 0x%x to SYN_MODE...\n", syn_mode);
 
-	dev_dbg(isif->isif_cfg.dev, "\nend of isif_config_raw...");
+	dev_dbg(isif->isif_cfg.dev, "end of isif_config_raw...\n");
 	isif_readregs(isif);
 }
 
diff --git a/drivers/media/platform/ti-vpfe/vpfe_capture.c b/drivers/media/platform/ti-vpfe/vpfe_capture.c
index 4a522a2..7549871 100644
--- a/drivers/media/platform/ti-vpfe/vpfe_capture.c
+++ b/drivers/media/platform/ti-vpfe/vpfe_capture.c
@@ -124,64 +124,6 @@ const struct vpfe_standard vpfe_standards[] = {
 	{V4L2_STD_625_50, 720, 576, {54, 59}, 1},
 };
 
-/* Used when raw Bayer image from isif is directly captured to SDRAM */
-static const struct vpfe_pixel_format vpfe_pix_fmts[] = {
-	{
-		.fmtdesc = {
-			.index = 0,
-			.type = V4L2_BUF_TYPE_VIDEO_CAPTURE,
-			.description = "Bayer GrRBGb 8bit A-Law compr.",
-			.pixelformat = V4L2_PIX_FMT_SBGGR8,
-		},
-		.bpp = 1,
-	},
-	{
-		.fmtdesc = {
-			.index = 1,
-			.type = V4L2_BUF_TYPE_VIDEO_CAPTURE,
-			.description = "Bayer GrRBGb - 16bit",
-			.pixelformat = V4L2_PIX_FMT_SBGGR16,
-		},
-		.bpp = 2,
-	},
-	{
-		.fmtdesc = {
-			.index = 2,
-			.type = V4L2_BUF_TYPE_VIDEO_CAPTURE,
-			.description = "Bayer GrRBGb 8bit DPCM compr.",
-			.pixelformat = V4L2_PIX_FMT_SGRBG10DPCM8,
-		},
-		.bpp = 1,
-	},
-	{
-		.fmtdesc = {
-			.index = 3,
-			.type = V4L2_BUF_TYPE_VIDEO_CAPTURE,
-			.description = "YCbCr 4:2:2 Interleaved UYVY",
-			.pixelformat = V4L2_PIX_FMT_UYVY,
-		},
-		.bpp = 2,
-	},
-	{
-		.fmtdesc = {
-			.index = 4,
-			.type = V4L2_BUF_TYPE_VIDEO_CAPTURE,
-			.description = "YCbCr 4:2:2 Interleaved YUYV",
-			.pixelformat = V4L2_PIX_FMT_YUYV,
-		},
-		.bpp = 2,
-	},
-	{
-		.fmtdesc = {
-			.index = 5,
-			.type = V4L2_BUF_TYPE_VIDEO_CAPTURE,
-			.description = "Y/CbCr 4:2:0 - Semi planar",
-			.pixelformat = V4L2_PIX_FMT_NV12,
-		},
-		.bpp = 1,
-	},
-};
-
 /* map mbus_fmt to pixelformat */
 void mbus_to_pix(struct vpfe_device *vpfe_dev,
 		const struct v4l2_mbus_framefmt *mbus,
@@ -926,7 +868,6 @@ vpfe_remote_subdev(struct vpfe_device *vpfe_dev, u32 *pad)
 
 	if (pad)
 		*pad = remote->index;
-	dev_dbg(vpfe_dev->pdev, "vpfe_remote_subdev: before media_entity_to_v4l2_subdev\n");
 	return media_entity_to_v4l2_subdev(remote->entity);
 }
 
@@ -1012,9 +953,6 @@ static int vpfe_enum_fmt(struct file *file, void  *priv,
 	if (ret)
 		return -EINVAL;
 
-	dev_dbg(vpfe_dev->pdev, "vpfe_enum_format: mbus index: %d code: %x\n",
-		mbus_code.index, mbus_code.code);
-
 	/* convert mbus_format to v4l2_format */
 	/* just populate pix with dummy size value, those don't matter here */
 	pix.width = 640;
-- 
1.7.5.4

