From fa4ea49410a9625fe3645a865aea1cbfa04c2bb8 Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Sat, 1 Feb 2014 15:57:45 -0600
Subject: [PATCH 165/188] ARM: OMAP2+: AM43xx: Enable DeepSleep0 for DDR3
 boards

This commit comes from branch ti-linux-3.12.y:
  git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git

Enable consistent DeepSleep0 for DDR3 boards by making necessary changes
within the low-level assembly code in sleep43xx. Remove the configuration
of the SR_TIM value inside EMIF4D_POWER_MANAGEMENT_CTRL as this is now
handled one time inside the bootloader per a recommendation from the
hardware team for more reliable operation.

The CTRL_DDR_CKE register within the control module allows the
CKE signal coming from the EMIF to be overridden and held low to
prevent glitches during transition of the EMIF. Override must be enabled
during suspend so the virtual address must be passed from the PM code.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
(cherry picked from commit 71648f230851a5e9f4359931012cfa4d24ac50f6)
---
 arch/arm/mach-omap2/pm33xx.c    |    8 ++++++++
 arch/arm/mach-omap2/pm33xx.h    |    3 +++
 arch/arm/mach-omap2/sleep43xx.S |   34 ++++++++++++++++++----------------
 3 files changed, 29 insertions(+), 16 deletions(-)

diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index 01759bd..3ad4bd4 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -480,6 +480,14 @@ static int am43xx_suspend_init(void)
 
 	susp_params.l2_base_virt = omap4_get_l2cache_base();
 
+	susp_params.cke_override_virt =
+		ioremap(AM43XX_CTRL_CKE_OVERRIDE, SZ_4);
+
+	if (!susp_params.cke_override_virt) {
+		pr_err("PM: Could not ioremap CKE override in Control Module\n");
+		return -ENOMEM;
+	}
+
 	/* Physical resume address to be used by ROM code */
 	am33xx_pm->ipc.reg0 = (AM33XX_OCMC_END -
 		am43xx_do_wfi_sz + am43xx_resume_offset + 0x4);
diff --git a/arch/arm/mach-omap2/pm33xx.h b/arch/arm/mach-omap2/pm33xx.h
index aec4b1c..dea82e5 100644
--- a/arch/arm/mach-omap2/pm33xx.h
+++ b/arch/arm/mach-omap2/pm33xx.h
@@ -47,6 +47,7 @@ struct am33xx_suspend_params {
 	u32 wfi_flags;
 	void __iomem *dram_sync;
 	void __iomem *l2_base_virt;
+	void __iomem *cke_override_virt;
 };
 
 void wkup_m3_reset_data_pos(void);
@@ -74,6 +75,8 @@ int am33xx_do_sram_cpuidle(u32, u32);
 
 #define AM43XX_CM_BASE			0x44DF0000
 
+#define AM43XX_CTRL_CKE_OVERRIDE	0x44E1131C
+
 #define AM43XX_CM_REGADDR(inst, reg)				\
 	AM33XX_L4_WK_IO_ADDRESS(AM43XX_CM_BASE + (inst) + (reg))
 
diff --git a/arch/arm/mach-omap2/sleep43xx.S b/arch/arm/mach-omap2/sleep43xx.S
index 2dc8e1c..1626862 100644
--- a/arch/arm/mach-omap2/sleep43xx.S
+++ b/arch/arm/mach-omap2/sleep43xx.S
@@ -30,7 +30,6 @@
 #include "omap44xx.h"
 #include <asm/hardware/cache-l2x0.h>
 
-#define EMIF_POWER_MGMT_WAIT_SELF_REFRESH_8192_CYCLES	0x00a0
 #define EMIF_POWER_MGMT_SR_TIMER_MASK			0x00f0
 
 #define EMIF_POWER_MGMT_SELF_REFRESH_MODE		0x0200
@@ -71,13 +70,14 @@
 ENTRY(am43xx_do_wfi)
 	stmfd	sp!, {r4 - r11, lr}	@ save registers on stack
 
-	ldm	r0, {r1-r6}		@ gather values passed
+	ldm	r0, {r1-r5}		@ gather values passed
 
 	/* Save the values passed */
 	str	r1, emif_addr_virt
 	str	r2, mem_type
 	str	r3, dram_sync_word
 	str	r4, l2_base_virt
+	str	r5, cke_override_virt
 
 	ldr	r0, emif_addr_virt
 	/* Save EMIF configuration */
@@ -212,12 +212,6 @@ sync:
 	ldr	r0, emif_addr_virt
 	/* Put SDRAM in self-refresh */
 	ldr	r1, [r0, #EMIF_POWER_MANAGEMENT_CONTROL]
-	bic	r1, r1, #EMIF_POWER_MGMT_SR_TIMER_MASK
-	orr	r1, r1, #EMIF_POWER_MGMT_WAIT_SELF_REFRESH_8192_CYCLES
-	str	r1, [r0, #EMIF_POWER_MANAGEMENT_CONTROL]
-	str	r1, [r0, #EMIF_POWER_MANAGEMENT_CTRL_SHDW]
-
-	ldr	r1, [r0, #EMIF_POWER_MANAGEMENT_CONTROL]
 	bic	r1, r1, #EMIF_POWER_MGMT_SELF_REFRESH_MODE_MASK
 	orr	r1, r1, #EMIF_POWER_MGMT_SELF_REFRESH_MODE
 	str	r1, [r0, #EMIF_POWER_MANAGEMENT_CONTROL]
@@ -242,6 +236,12 @@ wait_emif_disable:
 	cmp	r2, r3
 	bne	wait_emif_disable
 
+	/*enable CKE override for both CKE0 and CKE1*/
+	/*ensures CKE stays low throughout sleep*/
+	ldr    r2, cke_override_virt
+	mov    r1, #0
+	str    r1, [r2]
+
 	/*
 	 * For the MPU WFI to be registered as an interrupt
 	 * to WKUP_M3, MPU_CLKCTRL.MODULEMODE needs to be set
@@ -417,6 +417,11 @@ ddr_phy_ctrl_restore:
 	cmp	r2, #AM43XX_EMIF_PHY_CTRL_REG_COUNT
 	bne	ddr_phy_ctrl_restore
 
+	/*disable CKE override for both CKE0 and CKE1*/
+	ldr    r2, cke_override_phys
+	mov    r1, #3
+	str    r1, [r2]
+
 	/*
 	 * Toggle EMIF to exit refresh mode:
 	 * if EMIF lost context, PWR_MGT_CTRL is currently 0, writing disable
@@ -430,10 +435,6 @@ ddr_phy_ctrl_restore:
 	orr	r1, r1, #EMIF_POWER_MGMT_SELF_REFRESH_MODE
 	str	r1, [r0, #EMIF_POWER_MANAGEMENT_CONTROL]
 
-	/* Restore sdram_config for AM43xx and disable EMIF poweroff */
-	ldr     r1, emif_sdcfg_val
-	str     r1, [r0, #EMIF_SDRAM_CONFIG]
-
 	ldr	r2, am43xx_phys_emif_poweroff
 	mov	r1, #AM43XX_EMIF_POWEROFF_DISABLE
 	str	r1, [r2, #0x0]
@@ -448,10 +449,6 @@ wait_resume:
 	subs	r1, r1, #1
 	bne	wait_resume
 
-	/* All done.. so restore back enter into suspend configuration */
-	ldr	r1, emif_pmcr_val
-	str	r1, [r0, #EMIF_POWER_MANAGEMENT_CONTROL]
-
 #ifdef CONFIG_CACHE_L2X0
 	ldr	r2, l2_cache_base
 	ldr	r0, [r2, #L2X0_CTRL]
@@ -523,6 +520,11 @@ ddr_start:
 emif_phys_addr:
 	.word	AM33XX_EMIF_BASE
 
+cke_override_virt:
+	.word	0xDEADBEEF
+cke_override_phys:
+	.word	AM43XX_CTRL_CKE_OVERRIDE
+
 am43xx_phys_emif_poweroff:
 	.word   (AM43XX_CM_BASE + AM43XX_PRM_DEVICE_INST + \
 		 AM43XX_PRM_EMIF_CTRL_OFFSET)
-- 
1.7.5.4

