From 5629002ea3682789bcc7251996fa35ae603e9ad5 Mon Sep 17 00:00:00 2001
From: Afzal Mohammed <afzal@ti.com>
Date: Wed, 18 Dec 2013 19:00:16 +0530
Subject: [PATCH 246/285] bus: omap_l3_noc: mask undocumented flagmux

On AM43x HS device, in certain scenarios, L3 errors that are
undocumented (those after highest value bit in flagmux) are occuring.
They can't be cleared as documentation mentions nothing about those
errors. Have the driver handle it the same way as for timeout, else isr
loops endlessly.

Signed-off-by: Rajendra Nayak <rnayak@ti.com>
Signed-off-by: Afzal Mohammed <afzal@ti.com>
[Kevin: The original patch taken from TI
ti-sdk-am437x-evm-07.01.00.00-Linux-x86-Install.bin]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/bus/omap_l3_noc.c |    5 +++--
 drivers/bus/omap_l3_noc.h |   10 ++++++++++
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/drivers/bus/omap_l3_noc.c b/drivers/bus/omap_l3_noc.c
index f90ce4f..58c8ffb 100644
--- a/drivers/bus/omap_l3_noc.c
+++ b/drivers/bus/omap_l3_noc.c
@@ -82,8 +82,9 @@ static irqreturn_t l3_interrupt_handler(int irq, void *_l3)
 			/* Identify the source from control status register */
 			err_src = __ffs(err_reg);
 
-			if (*(l3->l3_targets[i] + err_src) ==
-						L3_FLAGMUX_TARGET_OFS_INVALID) {
+			if ((err_src >= l3->num_targets[i]) ||
+			    (*(l3->l3_targets[i] + err_src) ==
+			    L3_FLAGMUX_TARGET_OFS_INVALID)) {
 				u32 val;
 				void __iomem *reg = base + l3->l3_flag_mux[i] +
 					L3_FLAGMUX_MASK0 + (inttype << 3);
diff --git a/drivers/bus/omap_l3_noc.h b/drivers/bus/omap_l3_noc.h
index 9696251..0f24e4f 100644
--- a/drivers/bus/omap_l3_noc.h
+++ b/drivers/bus/omap_l3_noc.h
@@ -292,6 +292,7 @@ struct omap_l3 {
 	int app_irq;
 	int num_modules;
 	int num_masters;
+	unsigned num_targets[MAX_L3_MODULES];
 };
 
 struct omap_l3 omap_l3_data = {
@@ -302,6 +303,11 @@ struct omap_l3 omap_l3_data = {
 	.num_modules = OMAP_L3_MODULES,
 	.num_masters = sizeof(omap_l3_masters)/sizeof(struct l3_masters_data),
 	.l3_flag_mux = omap_l3_flagmux,
+	.num_targets = {
+		ARRAY_SIZE(omap_l3_targ_inst_clk1),
+		ARRAY_SIZE(omap_l3_targ_inst_clk2),
+		ARRAY_SIZE(omap_l3_targ_inst_clk3),
+	},
 };
 
 struct omap_l3 am4372_l3_data = {
@@ -312,6 +318,10 @@ struct omap_l3 am4372_l3_data = {
 	.num_modules = AM4372_L3_MODULES,
 	.num_masters = sizeof(am4372_l3_masters)/sizeof(struct l3_masters_data),
 	.l3_flag_mux = am4372_l3_flagmux,
+	.num_targets = {
+		ARRAY_SIZE(am4372_l3_targ_inst_200f),
+		ARRAY_SIZE(am4372_l3_targ_inst_100s),
+	},
 };
 
 #endif
-- 
1.7.5.4

