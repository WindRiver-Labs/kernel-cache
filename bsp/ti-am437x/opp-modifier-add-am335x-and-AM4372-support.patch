From eaa38dc2d5c0458c0a54af19f2342021bc99d1ea Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Thu, 27 Mar 2014 21:40:06 +0800
Subject: [PATCH 67/71] opp-modifier: add am335x and AM4372 support

This commit comes from branch ti-linux-3.12.y:
  git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git

cfc4dd9c26121c9ece93a68516311f6634b6167e
605d82783d0150bb265ca1d35dad1e95ff9e6f5b
59db63ea901238a03ab8664b4a89d326c9227496
1693be5693ce1ee9079c541efa8c6f70f9ac7ec1
65c4c3cf06231f162b07020cb0a3b0d5697e58ec

opp-modifier: Add default failover case and PG1.1 support for am43xx
opp-modifier: Add default failover case for am33xx
opp-modifier: Remove unused compat string
opp-modifier: Add AM4372 support to omap-opp-modifier driver
opp-modifier: Add support for different SoC device ids

Signed-off-by: Zumeng.Chen <zumeng.chen@windriver.com>
---
 drivers/power/opp/omap-opp-control.c |   47 ++++++++++++++++++++++++++++-----
 1 files changed, 40 insertions(+), 7 deletions(-)

diff --git a/drivers/power/opp/omap-opp-control.c b/drivers/power/opp/omap-opp-control.c
index be52e44..bf64790 100644
--- a/drivers/power/opp/omap-opp-control.c
+++ b/drivers/power/opp/omap-opp-control.c
@@ -40,6 +40,7 @@ struct opp_efuse_context {
 	void __iomem    *efuse;
 	void __iomem	*id;
 	bool		enable_low;
+	unsigned long (*devrev_to_opp_rev)(int rev);
 };
 
 static struct opp_efuse_context *opp_efuse;
@@ -53,14 +54,28 @@ static unsigned long opp_omap_efuse_read(int offset)
 
 static unsigned long am33xx_devrev_to_opp_rev(int rev)
 {
-	if (rev_id == 0)
+	switch (rev) {
+	case 0:
 		return OPP_REV(1, 0);
-	else if (rev_id == 1)
+	case 1:
 		return OPP_REV(2, 0);
-	else if (rev_id == 2)
+	case 2:
 		return OPP_REV(2, 1);
-	else
-		return 0;
+	}
+
+	return OPP_REV(1, 0);
+}
+
+static unsigned long am43xx_devrev_to_opp_rev(int rev)
+{
+	switch (rev) {
+	case 0:
+		return OPP_REV(1, 0);
+	case 1:
+		return OPP_REV(1, 1);
+	}
+
+	return OPP_REV(1, 0);
 }
 
 static int of_opp_check_availability(struct device *dev, struct device_node *np)
@@ -108,7 +123,7 @@ static int of_opp_check_availability(struct device *dev, struct device_node *np)
 		if (opp_efuse->enable_low)
 			efuse_val = ~efuse_val;
 
-		if (OPP_REV_CMP(rev, am33xx_devrev_to_opp_rev(rev_id))) {
+		if (OPP_REV_CMP(rev, opp_efuse->devrev_to_opp_rev(rev_id))) {
 			if (((efuse_val & bit) || !bit))
 				opp_enable(dev, freq);
 		}
@@ -150,6 +165,7 @@ static struct opp_modifier_dev omap_opp_modifier_dev = {
 
 static int opp_omap_probe(struct platform_device *pdev)
 {
+	const struct of_device_id *match;
 	struct resource *res;
 	struct device_node *np = pdev->dev.of_node;
 	int ret = 0;
@@ -161,6 +177,16 @@ static int opp_omap_probe(struct platform_device *pdev)
 		goto err;
 	}
 
+	match = of_match_device(opp_omap_of_match, &pdev->dev);
+
+	if (!match) {
+		dev_err(&pdev->dev, "Invalid match data value\n");
+		ret = -EINVAL;
+		goto err;
+	}
+
+	opp_efuse->devrev_to_opp_rev = (void *)match->data;
+
 	opp_efuse->dev = &pdev->dev;
 
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 1);
@@ -213,7 +239,14 @@ static int opp_omap_remove(struct platform_device *pdev)
 }
 
 static struct of_device_id opp_omap_of_match[] = {
-	{ .compatible = "ti,opp-omap",},
+	{
+		.compatible = "ti,opp-omap-am3352",
+		.data = (void *)am33xx_devrev_to_opp_rev,
+	},
+	{
+		.compatible = "ti,opp-omap-am4372",
+		.data = (void *)am43xx_devrev_to_opp_rev,
+	},
 	{ },
 };
 MODULE_DEVICE_TABLE(of, opp_omap_of_match);
-- 
1.7.5.4

