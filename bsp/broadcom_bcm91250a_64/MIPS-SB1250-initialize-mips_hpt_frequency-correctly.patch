From 36078f7382ee88f205f045c68ce6402b70946f58 Mon Sep 17 00:00:00 2001
From: ltian <le.tian@windriver.com>
Date: Fri, 30 Jul 2010 02:54:32 -0700
Subject: [PATCH] MIPS: SB1250: initialize mips_hpt_frequency correctly

Initialize mips_hpt_frequency correctly to resolve the call trace issue.
The "Call Trace" is produced by a WARN_ON().
The code location is "kernel/trace/trace-clock-32-to-64.c : precalc_stsc_interval() ---> WARN_ON(precalc_expire == 0)".
In function precalc_stsc_interval(), the precalc_expire value was set by :
"precalc_expire =
                __iter_div_u64_rem(HW_BITMASK, (
                  __iter_div_u64_rem(trace_clock_frequency(),
                  HZ * trace_clock_freq_scale(), &rem_freq) << 1
                 )
                 - 1
                 - (TC_EXPECTED_INTERRUPT_LATENCY * HZ / 1000), &rem_interval)
                >> 1;"
The above trace_clock_frequency() directly return the value of "mips_hpt_frequency".
But the "mips_hpt_frequency" is zero, so finally contribute to "precalc_expire == 0".
Refering to the relevant process of other CPUs of MIPS, add the process to set the value of "mips_hpt_frequency".

Signed-off-by: ltian <le.tian@windriver.com>
---
 arch/mips/include/asm/timex.h  |    1 +
 arch/mips/kernel/csrc-sb1250.c |    1 +
 2 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/arch/mips/include/asm/timex.h b/arch/mips/include/asm/timex.h
index 10c8dd8..d6aa5d0 100644
--- a/arch/mips/include/asm/timex.h
+++ b/arch/mips/include/asm/timex.h
@@ -56,6 +56,7 @@ static inline void get_cycles_barrier(void)
 
 static inline cycles_t get_cycles_rate(void)
 {
+	WARN_ON(!mips_hpt_frequency);
 	return mips_hpt_frequency;
 }
 
diff --git a/arch/mips/kernel/csrc-sb1250.c b/arch/mips/kernel/csrc-sb1250.c
index d14d3d1..30f825a 100644
--- a/arch/mips/kernel/csrc-sb1250.c
+++ b/arch/mips/kernel/csrc-sb1250.c
@@ -53,6 +53,7 @@ struct clocksource bcm1250_clocksource = {
 void __init sb1250_clocksource_init(void)
 {
 	struct clocksource *cs = &bcm1250_clocksource;
+	mips_hpt_frequency = V_SCD_TIMER_FREQ;
 
 	/* Setup hpt using timer #3 but do not enable irq for it */
 	__raw_writeq(0,
-- 
1.6.5.2

