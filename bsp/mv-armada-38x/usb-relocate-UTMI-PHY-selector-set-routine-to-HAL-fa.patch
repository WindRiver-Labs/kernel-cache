From 60db8b3bba4cc5b3bf1eed8699036ee5ab10b056 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 5 Jun 2014 18:07:19 +0300
Subject: [PATCH 1731/1825] usb: relocate UTMI PHY selector set routine to HAL
 family code

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit d4f7f898643143157a49ab74468f474a5f1875d8

	UTMI Phy selection sequence is required only by ALP/A375
	- Moved routine to specific HAL family code (empty implementation for A38x and MSYS)

Change-Id: Ifff48cb287b8aa72ceafe897039326a39091e14b
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8394
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8633
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../armada_38x_family/ctrlEnv/mvCtrlEnvLib.c       |   20 ++++++++++++
 .../armada_38x_family/ctrlEnv/mvCtrlEnvLib.h       |    1 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   33 ++++++++++++++++++++
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    1 +
 .../mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c   |   20 ++++++++++++
 .../mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h   |    1 +
 6 files changed, 76 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
index 2da8d77..9ad913b 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
@@ -778,6 +778,26 @@ MV_U32 mvCtrlUsb3MaxGet(void)
 	return mvCtrlSocUnitInfoNumGet(USB3_UNIT_ID);
 }
 
+/*******************************************************************************
+* mvCtrlUtmiPhySelectorSet - configures the shared MAC access between USB2/3
+*
+* DESCRIPTION:
+*	A38x doesn't utilize UTMI PHY selection
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*
+*******************************************************************************/
+MV_VOID mvCtrlUtmiPhySelectorSet(MV_U32 usbUnitId)
+{
+	return;
+}
+
 #endif
 
 #if defined(MV_INCLUDE_SDIO)
diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h
index 1dca8b7..4acf7e9 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h
@@ -227,6 +227,7 @@ MV_U32 mvCtrlXorMaxUnitGet(MV_VOID);
 #if defined(MV_INCLUDE_USB)
 MV_U32 mvCtrlUsbMaxGet(MV_VOID);
 MV_U32 mvCtrlUsb3MaxGet(MV_VOID);
+MV_VOID mvCtrlUtmiPhySelectorSet(MV_U32 usbUnitId);
 #endif
 #if defined(MV_INCLUDE_SDIO)
 MV_U32 mvCtrlSdioSupport(MV_VOID);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 5c3613f..15d91c6 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -1147,6 +1147,39 @@ MV_U32 mvCtrlUsb3MaxGet(void)
 	return mvCtrlSocUnitInfoNumGet(USB3_UNIT_ID);
 }
 
+/*******************************************************************************
+* mvCtrlUtmiPhySelectorSet - configures the shared MAC access between USB2/3
+*
+* DESCRIPTION:
+*	When using USB3 simultaneously with USB2, the USB2 port is sharing MAC with the USB3 port.
+*	in order to address the USB2 registers on the shared MAC, we need to set the UTMI Phy Selector:
+*	0x0 = UTMI PHY connected to USB2.0
+*	0x1 = UTMI PHY disconnected from USB2.0
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*
+*******************************************************************************/
+MV_VOID mvCtrlUtmiPhySelectorSet(MV_U32 usbUnitId)
+{
+	MV_U32 reg;
+	MV_BOOL utmiToUsb2;
+
+	if (usbUnitId == USB_UNIT_ID)
+		utmiToUsb2 = MV_TRUE;
+	else
+		utmiToUsb2 = MV_FALSE;
+
+	reg = MV_REG_READ(USB_CLUSTER_CONTROL);
+	reg = (reg & (~0x1)) | (utmiToUsb2 ? 0x0 : 0x1);
+	MV_REG_WRITE(USB_CLUSTER_CONTROL, reg);
+}
+
 #endif
 
 #if defined(MV_INCLUDE_SDIO)
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index d5863e9..956d2f4 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -303,6 +303,7 @@ MV_U32 mvCtrlXorMaxUnitGet(MV_VOID);
 #if defined(MV_INCLUDE_USB)
 MV_U32 mvCtrlUsbMaxGet(MV_VOID);
 MV_U32 mvCtrlUsb3MaxGet(MV_VOID);
+MV_VOID mvCtrlUtmiPhySelectorSet(MV_U32 usbUnitId);
 #endif
 #if defined(MV_INCLUDE_SDIO)
 MV_U32 mvCtrlSdioSupport(MV_VOID);
diff --git a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c
index 24e2b8d..46473ee 100644
--- a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c
@@ -451,6 +451,26 @@ MV_U32 mvCtrlUsbMaxGet(void)
 	return mvCtrlSocUnitInfoNumGet(USB_UNIT_ID);
 }
 
+/*******************************************************************************
+* mvCtrlUtmiPhySelectorSet - configures the shared MAC access between USB2/3
+*
+* DESCRIPTION:
+*	MSYS doesn't utilize UTMI PHY selection
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*
+*******************************************************************************/
+MV_VOID mvCtrlUtmiPhySelectorSet(MV_U32 usbUnitId)
+{
+	return;
+}
+
 #if defined(MV_INCLUDE_XOR)
 /*******************************************************************************
 * mvCtrlXorMaxChanGet - Get Marvell controller number of XOR channels.
diff --git a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h
index e2bfa91..412ae88 100644
--- a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h
@@ -164,6 +164,7 @@ MV_U32	  mvCtrlEthMaxPortGet(MV_VOID);
 MV_U8	  mvCtrlEthMaxCPUsGet(MV_VOID);
 #if defined(MV_INCLUDE_USB)
 MV_U32 mvCtrlUsbMaxGet(MV_VOID);
+MV_VOID mvCtrlUtmiPhySelectorSet(MV_U32 usbUnitId);
 #endif
 #if defined(MV_INCLUDE_XOR)
 MV_U32 mvCtrlXorMaxChanGet(MV_VOID);
-- 
1.7.5.4

