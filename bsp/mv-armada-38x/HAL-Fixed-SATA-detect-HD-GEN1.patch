From eccf38ef1c675cf3d7e64aa51fa206ae324026a6 Mon Sep 17 00:00:00 2001
From: Eli Nidam <elini@marvell.com>
Date: Wed, 29 May 2013 16:44:58 +0300
Subject: [PATCH 0704/1825] HAL: Fixed SATA detect HD GEN1

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 2c084027c66ff24666ad43517bf9aeedc9283991

Change-Id: I0e9b52d565529bff552445278dad5ba050fa91e7
Signed-off-by: Eli Nidam <elini@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2023
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Lior Amsalem <alior@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../plat-armada/mv_hal/sata/CoreDriver/mvRegs.h    |    1 +
 .../plat-armada/mv_hal/sata/CoreDriver/mvSata.c    |   47 ++++++++++++++++++--
 .../plat-armada/mv_hal/sata/CoreDriver/mvSata.h    |    1 +
 3 files changed, 45 insertions(+), 4 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvRegs.h b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvRegs.h
index 44c60c2..c950074 100644
--- a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvRegs.h
+++ b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvRegs.h
@@ -282,6 +282,7 @@ extern "C" {
 #define MV_SATA_II_SATA_CONFIG_REG_OFFSET       0x50
 
 #define MV_SATA_II_LP_EXT_CTRL_REG_OFFSET       0x58
+#define COMMON_PHY_CONFIGURATION1_REG_OFFSET	0x18318
 
 #define MV_SATA_II_PHY_MODE_9_GEN1_REG_OFFSET   0x39c
 #define MV_SATA_II_PHY_MODE_9_GEN2_REG_OFFSET   0x398
diff --git a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.c b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.c
index 4d825c0..ef63cb6 100755
--- a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.c
+++ b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.c
@@ -2711,7 +2711,9 @@ static void _fixPhyParams(MV_SATA_ADAPTER *pAdapter, MV_U8 channelIndex)
 		}
 	}
 	if ((pAdapter->sataAdapterGeneration >= MV_SATA_GEN_II) &&
-	    (pAdapter->chipIs62X1Z0 == MV_FALSE) && (pAdapter->chipIs65XXZ0 == MV_FALSE)) {
+	    (pAdapter->chipIs62X1Z0 == MV_FALSE) &&
+	    (pAdapter->chipIs66XXX0 == MV_FALSE) &&
+	    (pAdapter->chipIs65XXZ0 == MV_FALSE)) {
 		MV_U32 phyMode2Offset = getEdmaRegOffset(channelIndex) + MV_SATA_II_PHY_MODE_2_REG_OFFSET;
 		if ((pAdapter->chipIs60X1B2 == MV_TRUE) || (pAdapter->chipIs60X1C0 == MV_TRUE)) {
 			/* Fix for 88SX60X1 FEr SATA #23 */
@@ -2813,7 +2815,7 @@ static void _fixPhyParams(MV_SATA_ADAPTER *pAdapter, MV_U8 channelIndex)
 			 pAdapter->adapterId, channelIndex,
 			 MV_REG_READ_DWORD(pAdapter->adapterIoBaseAddress, phyMode2Offset));
 	}
-	if (pAdapter->chipIs62X1Z0 == MV_TRUE) {
+	if ((pAdapter->chipIs62X1Z0 == MV_TRUE) || (pAdapter->chipIs66XXX0 == MV_TRUE))  {
 
 		regVal = MV_REG_READ_DWORD(pAdapter->adapterIoBaseAddress,
 					   getEdmaRegOffset(channelIndex) + MV_SATA_II_PHY_MODE_3_REG_OFFSET);
@@ -4476,6 +4478,7 @@ MV_BOOLEAN mvSataInitAdapter(MV_SATA_ADAPTER *pAdapter)
 	pAdapter->chipIs60X1C0 = MV_FALSE;
 	pAdapter->chipIs62X1Z0 = MV_FALSE;
 	pAdapter->chipIs65XXZ0 = MV_FALSE;
+	pAdapter->chipIs66XXX0 = MV_FALSE;
 	pAdapter->numberOfChannels = MV_SATA_CHANNELS_NUM;
 	pAdapter->numberOfUnits = MV_SATA_UNITS_NUM;
 	pAdapter->portsPerUnit = MV_SATA_PORT_PER_UNIT;
@@ -4762,7 +4765,6 @@ MV_BOOLEAN mvSataInitAdapter(MV_SATA_ADAPTER *pAdapter)
 	case MV_SATA_DEVICE_ID_6710:
 	case MV_SATA_DEVICE_ID_6707:
 	case MV_SATA_DEVICE_ID_7888:
-	case MV_SATA_DEVICE_ID_6660:
 		pAdapter->numberOfChannels = 2;
 		pAdapter->numberOfUnits = 1;
 		pAdapter->portsPerUnit = 2;
@@ -4784,6 +4786,16 @@ MV_BOOLEAN mvSataInitAdapter(MV_SATA_ADAPTER *pAdapter)
 		pAdapter->mainCauseOffset = 0x20020;
 		pAdapter->chipIs62X1Z0 = MV_TRUE;
 		break;
+	case MV_SATA_DEVICE_ID_6660:
+		pAdapter->numberOfChannels = 2;
+		pAdapter->numberOfUnits = 1;
+		pAdapter->portsPerUnit = 2;
+		pAdapter->sataAdapterGeneration = MV_SATA_GEN_IIE;
+		pAdapter->hostInterface = MV_HOST_IF_INTEGRATED;
+		pAdapter->mainMaskOffset = 0x20024;
+		pAdapter->mainCauseOffset = 0x20020;
+		pAdapter->chipIs66XXX0 = MV_TRUE;
+		break;
 
 	default:
 		mvLogMsg(MV_CORE_DRIVER_LOG_ID, MV_DEBUG_ERROR, " %d : Bad device ID"
@@ -5258,6 +5270,31 @@ MV_BOOLEAN mvSataIsStorageDeviceConnected(MV_SATA_ADAPTER *pAdapter, MV_U8 chann
 			break;
 		}
 	case MV_PHY_DET_STATE_DEVICE_AND_PHY_COM:
+	if (pAdapter->chipIs66XXX0 == MV_TRUE) { /*for Avanta LP 6660 check HD type GEN1 or GEN2*/
+		det = (MV_REG_READ_DWORD(pAdapter->adapterIoBaseAddress, SStatusOffset) & 0xf0)>>4;
+		if ((det == 1) && (pAdapter->sataAdapterGeneration >= MV_SATA_GEN_II)) {
+				/* HD deteced to GEN1 set SATA speed configuration from GEN2 to GEN1 */
+				MV_U32 regVal;
+				mvOsSemTake(&pAdapter->semaphore);
+				regVal = MV_REG_READ_DWORD(pAdapter->adapterIoBaseAddress,
+								getEdmaRegOffset(channelIndex) +
+								MV_SATA_II_SATA_CONFIG_REG_OFFSET);
+				regVal &= ~MV_BIT7;	/* Disable GEn II */
+				MV_REG_WRITE_DWORD(pAdapter->adapterIoBaseAddress, getEdmaRegOffset(channelIndex) +
+							MV_SATA_II_SATA_CONFIG_REG_OFFSET, regVal);
+
+				SStatusOffset = pAdapter->adapterIoBaseAddress & 0xff000000; /* get base address */
+				det = MV_REG_READ_DWORD(SStatusOffset, COMMON_PHY_CONFIGURATION1_REG_OFFSET);
+				det &= ~(0xFF << 22); /* set SERDES lan2 configuration to GEN1  */
+				MV_REG_WRITE_DWORD(SStatusOffset, COMMON_PHY_CONFIGURATION1_REG_OFFSET, det);
+				_channelHardReset(pAdapter, channelIndex);
+				/* If interface is already active, then device detection is needed */
+				if (pAdapter->staggaredSpinup[channelIndex] == MV_TRUE)
+					_establishSataComm(pAdapter, channelIndex);
+
+				mvOsSemRelease(&pAdapter->semaphore);
+			}
+		}
 		return MV_TRUE;
 	case MV_PHY_DET_STATE_PHY_OFFLINE:
 		mvLogMsg(MV_CORE_DRIVER_LOG_ID, MV_DEBUG_ERROR, " %d %d: WARNING: SATA PHY is "
@@ -5987,7 +6024,9 @@ MV_BOOLEAN mvSataSetChannelPhyParams(MV_SATA_ADAPTER *pAdapter, MV_U8 channelInd
 		return MV_FALSE;
 	}
 
-	if ((pAdapter->chipIs62X1Z0 == MV_TRUE) || (pAdapter->chipIs65XXZ0 == MV_TRUE)) {
+	if ((pAdapter->chipIs62X1Z0 == MV_TRUE) ||
+	    (pAdapter->chipIs66XXX0 == MV_TRUE) ||
+	    (pAdapter->chipIs65XXZ0 == MV_TRUE)) {
 		mvLogMsg(MV_CORE_DRIVER_LOG_ID, MV_DEBUG_FATAL_ERROR, "%d  : mvSataSetChannelPhyPara\
 m" "s Failed, This function not supported for this adapter\n", pAdapter->adapterId);
 		return MV_FALSE;
diff --git a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.h b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.h
index d35a210..35fc6d4 100755
--- a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.h
+++ b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.h
@@ -551,6 +551,7 @@ typedef struct mvSataAdapter {
 	MV_BOOLEAN chipIs60X1C0;
 	MV_BOOLEAN chipIs62X1Z0;
 	MV_BOOLEAN chipIs65XXZ0;
+	MV_BOOLEAN chipIs66XXX0;
 	MV_U8 signalAmps[MV_SATA_CHANNELS_NUM];
 	MV_U8 pre[MV_SATA_CHANNELS_NUM];
 	struct mvQueuedCommandEntry adapterCommands[_MV_SATA_COMMANDS_PER_ADAPTER];
-- 
1.7.5.4

