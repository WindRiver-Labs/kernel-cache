From 36206d42ea5fd16bca626fb7b5382cbff0f12a8b Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 17 Apr 2014 16:44:13 +0300
Subject: [PATCH 1589/1825] alp: improved support for customer board porting

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 70fc71680334022d0322ef368eabd1d81173619b

	This patch introduces improved support for more intuitive costumer porting process.
	Main changes:
	- Customer boards will use board IDs 0:0x10, while Marvell boards IDs will be 0x10 and forward.
	- Added compilation chain for 2 customer boards and relevant needed structures
	usage: ./build.pl -f spi -v 14t1 -i spi -b armada_375_customer[0/1] -c
	- Split general board configuration, DDR topology, & SerDes lanes structures, to Marvell boards structs, and Customer boards structs
	- Implemented new mvBoardIdGet for U-Boot, with pre-compiled differentiation between Marvell and Costumer boards,
	  while kernel detects board ID using U-Boot tags.
	  ** kernel must set gBoardId according to U-Boot tags, before any usage of mvBoardIdGet() **
	- Added mvBoardIdIndexGet for any usage of board id as index for arrays
	- Implemented 2 Customer boards with RD configuration

	** Tested on ALP RD-6660 with U-Boot compiled for Costumer, with kernel 3.4 **

Change-Id: I3424965b7ee8f984fb4ccaa5b134ac9893d910b2
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/7137
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   90 ++++++--
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    7 +-
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |  239 ++++++++++----------
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.h     |   81 ++++----
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |    3 +-
 arch/arm/mach-avantalp/core.c                      |   11 +-
 6 files changed, 240 insertions(+), 191 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 81223f0..63df724 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -90,7 +90,8 @@
 #define DB(x)
 #endif
 
-extern MV_BOARD_INFO *boardInfoTbl[];
+extern MV_BOARD_INFO *marvellBoardInfoTbl[];
+extern MV_BOARD_INFO *customerBoardInfoTbl[];
 extern MV_BOARD_SATR_INFO boardSatrInfo[];
 MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[] = MV_BOARD_CONFIG_INFO;
 
@@ -98,6 +99,27 @@ MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[] = MV_BOARD_CONFIG_INFO;
 static MV_DEV_CS_INFO *boardGetDevEntry(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
 static MV_BOARD_INFO *board = NULL;
 
+/*******************************************************************************
+* mvBoardIdIndexGet
+*
+* DESCRIPTION:
+*	returns an index for board arrays with direct memory access, according to board id
+*
+* INPUT:
+*       boardId.
+*
+* OUTPUT:
+*       direct access index for board arrays
+*
+* RETURN:
+*       None.
+*
+*******************************************************************************/
+MV_U32 mvBoardIdIndexGet(MV_U32 boardId)
+{
+/* Marvell Boards use 0x10 as base for Board ID: mask MSB to receive index for board ID*/
+	return boardId & (MARVELL_BOARD_ID_BASE - 1);
+}
 
 /*******************************************************************************
 * mvBoardEnvInit
@@ -118,9 +140,7 @@ static MV_BOARD_INFO *board = NULL;
 *******************************************************************************/
 MV_VOID mvBoardEnvInit(MV_VOID)
 {
-	MV_U32 boardId = mvBoardIdGet();
-
-	mvBoardIdSet(boardId);
+	mvBoardSet(mvBoardIdGet());
 
 	/*  FPGA board doesn't use MPP neither GPIO */
 #if !defined(CONFIG_MACH_AVANTA_LP_FPGA)
@@ -182,7 +202,7 @@ MV_VOID mvBoardEnvInit(MV_VOID)
 *******************************************************************************/
 MV_U16 mvBoardModelGet(MV_VOID)
 {
-	return mvBoardIdGet() >> 16;
+	return mvBoardIdIndexGet(mvBoardIdGet()) >> 16;
 }
 
 /*******************************************************************************
@@ -207,7 +227,7 @@ MV_U16 mvBoardModelGet(MV_VOID)
 *******************************************************************************/
 MV_U16 mvBoardRevGet(MV_VOID)
 {
-	return mvBoardIdGet() & 0xFFFF;
+	return mvBoardIdIndexGet(mvBoardIdGet()) & 0xFFFF;
 }
 
 /*******************************************************************************
@@ -2425,7 +2445,7 @@ MV_VOID mvBoardEthComplexConfigSet(MV_U32 ethConfig)
 MV_STATUS mvBoardSatrInfoConfig(MV_SATR_TYPE_ID satrClass, MV_BOARD_SATR_INFO *satrInfo, MV_BOOL read)
 {
 	int i;
-	MV_U32 boardId = mvBoardIdGet();
+	MV_U32 boardId = mvBoardIdIndexGet(mvBoardIdGet());
 
 	/* verify existence of requested SATR type, and pull its data,
 	 * if write sequence, check if field is writeable for running board */
@@ -2463,7 +2483,7 @@ MV_STATUS mvBoardSatrInfoConfig(MV_SATR_TYPE_ID satrClass, MV_BOARD_SATR_INFO *s
 MV_BOOL mvBoardConfigTypeGet(MV_CONFIG_TYPE_ID configClass, MV_BOARD_CONFIG_TYPE_INFO *configInfo)
 {
 	int i;
-	MV_U32 boardId = mvBoardIdGet();
+	MV_U32 boardId = mvBoardIdIndexGet(mvBoardIdGet());
 
 	/* verify existence of requested config type, pull its data,
 	 * and check if field is relevant to current running board */
@@ -2685,7 +2705,7 @@ MV_STATUS mvBoardUsbSsEnSet(MV_BOOL enable)
 }
 
 /*******************************************************************************
-* mvBoardIdSet - Set Board model
+* mvBoardSet - Set Board model
 *
 * DESCRIPTION:
 *       This function sets the board ID.
@@ -2702,12 +2722,22 @@ MV_STATUS mvBoardUsbSsEnSet(MV_BOOL enable)
 *       void
 *
 *******************************************************************************/
-MV_VOID mvBoardIdSet(MV_U32 boardId)
+static MV_U32 gBoardId = -1;
+MV_VOID mvBoardSet(MV_U32 boardId)
 {
-	if (boardId >= MV_MAX_BOARD_ID)
-		mvOsPrintf("%s: Error: wrong boardId (%d)\n", __func__, boardId);
-
-	board = boardInfoTbl[boardId];
+	/* board ID's >0x10 are for Marvell Boards */
+	if (boardId >= MARVELL_BOARD_ID_BASE && boardId < MV_MAX_MARVELL_BOARD_ID) { /* Marvell Board */
+		board = marvellBoardInfoTbl[mvBoardIdIndexGet(boardId)];
+		gBoardId = boardId;
+	} else if (boardId >= CUTOMER_BOARD_ID_BASE && boardId < MV_MAX_CUSTOMER_BOARD_ID) { /* Customer Board */
+		board = customerBoardInfoTbl[mvBoardIdIndexGet(boardId)];
+		gBoardId = boardId;
+	} else {
+		mvOsPrintf("%s: Error: wrong board Id (%d)\n", __func__, boardId);
+		gBoardId = 0;
+		board = customerBoardInfoTbl[gBoardId];
+		mvOsPrintf("Applying default board ID (%d: %s)\n", gBoardId, board->boardName);
+	}
 }
 
 /*******************************************************************************
@@ -2730,19 +2760,31 @@ MV_VOID mvBoardIdSet(MV_U32 boardId)
 *******************************************************************************/
 MV_U32 mvBoardIdGet(MV_VOID)
 {
-	MV_U32 boardId, value;
+	if (gBoardId != -1)
+		return gBoardId;
 
-#ifdef CONFIG_MACH_AVANTA_LP_FPGA
-	boardId = MV_BOARD_ID_AVANTA_LP_FPGA;
+#ifdef CONFIG_CUSTOMER_BOARD_SUPPORT
+	#ifdef CONFIG_CUSTOMER_BOARD_0
+		gBoardId = AVANTA_LP_CUSTOMER_BOARD_ID0;
+	#elif CONFIG_CUSTOMER_BOARD_1
+		gBoardId = AVANTA_LP_CUSTOMER_BOARD_ID1;
+	#endif
 #else
-	value = MV_REG_READ(MPP_SAMPLE_AT_RESET(1));
-	boardId = ((value & (0xF0)) >> 4);
-#endif
-	if (boardId >= MV_MAX_BOARD_ID) {
-		mvOsPrintf("%s: Error: read wrong board (%d)\n", __func__, boardId);
+
+	MV_U32 readValue;
+
+	readValue = MV_REG_READ(MPP_SAMPLE_AT_RESET(1));
+	readValue = ((readValue & (0xF0)) >> 4);
+
+	if (readValue < MV_MARVELL_BOARD_NUM && readValue >= 0) {
+		gBoardId = MARVELL_BOARD_ID_BASE + readValue;
+	} else {
+		mvOsPrintf("%s: Error: read wrong board (%d)\n", __func__, readValue);
 		return MV_INVALID_BOARD_ID;
 	}
-	return boardId;
+#endif
+
+	return gBoardId;
 }
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index c23c082..56bba3d 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -202,7 +202,7 @@ typedef struct _boardSatrInfo {
 	MV_U32 mask;
 	MV_U32 offset;
 	MV_U32 regNum;
-	MV_U32 isWriteable[MV_MAX_BOARD_ID];
+	MV_U32 isWriteable[MV_MARVELL_BOARD_NUM];
 } MV_BOARD_SATR_INFO;
 
 typedef struct _boardConfigTypesInfo {
@@ -211,7 +211,7 @@ typedef struct _boardConfigTypesInfo {
 	MV_U32 offset;
 	MV_U32 expanderNum;
 	MV_U32 regNum;
-	MV_U32 isActiveForBoard[MV_MAX_BOARD_ID];
+	MV_U32 isActiveForBoard[MV_MARVELL_BOARD_NUM];
 } MV_BOARD_CONFIG_TYPE_INFO;
 
 typedef enum _boardMacSpeed {
@@ -544,8 +544,9 @@ MV_U8 mvBoardTwsiAddrTypeGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index);
 MV_U8 mvBoardTwsiAddrGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index);
 MV_U32 mvBoardEthComplexConfigGet(MV_VOID);
 MV_VOID mvBoardEthComplexConfigSet(MV_U32 ethConfig);
+MV_U32 mvBoardIdIndexGet(MV_U32 boardId);
 MV_U32 mvBoardIdGet(MV_VOID);
-MV_VOID mvBoardIdSet(MV_U32 boardId);
+MV_VOID mvBoardSet(MV_U32 boardId);
 MV_U32 mvBoardSledCpuNumGet(MV_VOID);
 MV_VOID mvBoardInfoUpdate(MV_VOID);
 MV_VOID mvBoardVerifySerdesCofig(MV_VOID);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index e5214bc..216459d 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -67,6 +67,126 @@
 #include "twsi/mvTwsi.h"
 #include "pex/mvPexRegs.h"
 
+/***************************************** Customer Boards ****************************************/
+/*******************************************************************************
+	Avanata LP Customer board - Based on RD-88F6660
+*******************************************************************************/
+MV_BOARD_TWSI_INFO avanta_lp_customer_board_0_InfoBoardTwsiDev[] = {
+	/* {{MV_BOARD_DEV_CLASS devClass, MV_U8 devClassId,  MV_U8 twsiDevAddr, MV_U8 twsiDevAddrType}} */
+	{ BOARD_DEV_TWSI_IO_EXPANDER,	0,	0x20,	ADDR7_BIT },
+};
+
+/* When Switch Port 4 is connected to external PHY through RGMII-0,
+ * this external PHY is managed through MAC-0 SMI lines.
+ * The 'boardEthSmiAddr' variable is used only for PHY init. */
+MV_BOARD_MAC_INFO avanta_lp_customer_board_0_InfoBoardMacInfo[] = {
+	/* {{MV_BOARD_MAC_SPEED boardMacSpeed, MV_8 boardEthSmiAddr}} */
+	{ BOARD_MAC_SPEED_2000M, -1},
+	{ BOARD_MAC_SPEED_AUTO,  0x1},
+	{ BOARD_MAC_SPEED_1000M, -1},
+	{ BOARD_MAC_SPEED_1000M, -1},
+};
+MV_BOARD_MPP_TYPE_INFO avanta_lp_customer_board_0_InfoBoardModTypeInfo[] = {
+	{
+		.boardMppSlic = MV_BOARD_SLIC_EXTERNAL_ID,
+		.ethSataComplexOpt = MV_ETHCOMP_SW_P0_2_GE_PHY_P0 |
+				     MV_ETHCOMP_SW_P1_2_GE_PHY_P1 |
+				     MV_ETHCOMP_SW_P2_2_GE_PHY_P2 |
+				     MV_ETHCOMP_SW_P3_2_GE_PHY_P3 |
+				     MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G |
+				     MV_ETHCOMP_SW_P4_2_RGMII0   |
+				     MV_ETHCOMP_GE_MAC0_2_SW_P6,
+		.ethPortsMode = 0x0
+	}
+};
+
+MV_DEV_CS_INFO avanta_lp_customer_board_0_InfoBoardDeCsInfo[] = {
+	/*{deviceCS, params, devType, devWidth, busWidth }*/
+#if defined(MV_INCLUDE_SPI)
+	{ SPI_CS0, N_A, BOARD_DEV_SPI_FLASH, 8, 8 } /* SPI DEV */
+#endif
+};
+
+MV_BOARD_TDM_INFO avanta_lp_customer_board_0_Tdm886[] = { {0} };
+
+MV_BOARD_TDM_SPI_INFO avanta_lp_customer_board_0_TdmSpiInfo[] = { {1} };
+
+MV_BOARD_MPP_INFO avanta_lp_customer_board_0_InfoBoardMppConfigValue[] = {
+	{ {
+		AVANTA_LP_CUSTOMER_MPP0_7,
+		AVANTA_LP_CUSTOMER_MPP8_15,
+		AVANTA_LP_CUSTOMER_MPP16_23,
+		AVANTA_LP_CUSTOMER_MPP24_31,
+		AVANTA_LP_CUSTOMER_MPP32_39,
+		AVANTA_LP_CUSTOMER_MPP40_47,
+		AVANTA_LP_CUSTOMER_MPP48_55,
+		AVANTA_LP_CUSTOMER_MPP56_63,
+		AVANTA_LP_CUSTOMER_MPP64_67,
+	} }
+};
+
+MV_BOARD_INFO avanta_lp_customer_board_0_info = {
+	.boardName			= "AVANTA-LP-Customer-Board-0",
+	.numBoardMppTypeValue		= ARRSZ(avanta_lp_customer_board_0_InfoBoardModTypeInfo),
+	.pBoardModTypeValue		= avanta_lp_customer_board_0_InfoBoardModTypeInfo,
+	.pBoardMppConfigValue		= avanta_lp_customer_board_0_InfoBoardMppConfigValue,
+	.intsGppMaskLow			= 0,
+	.intsGppMaskMid			= 0,
+	.intsGppMaskHigh		= 0,
+	.numBoardDeviceIf		= ARRSZ(avanta_lp_customer_board_0_InfoBoardDeCsInfo),
+	.pDevCsInfo			= avanta_lp_customer_board_0_InfoBoardDeCsInfo,
+	.numBoardTwsiDev		= ARRSZ(avanta_lp_customer_board_0_InfoBoardTwsiDev),
+	.pBoardTwsiDev			= avanta_lp_customer_board_0_InfoBoardTwsiDev,
+	.numBoardMacInfo		= ARRSZ(avanta_lp_customer_board_0_InfoBoardMacInfo),
+	.pBoardMacInfo			= avanta_lp_customer_board_0_InfoBoardMacInfo,
+	.numBoardGppInfo		= 0,
+	.pBoardGppInfo			= 0,
+	.activeLedsNumber		= 0,
+	.pLedGppPin			= NULL,
+	.ledsPolarity			= 0,
+
+	/* PMU Power */
+	.pmuPwrUpPolarity		= 0,
+	.pmuPwrUpDelay			= 80000,
+
+	/* GPP values */
+	.gppOutEnValLow			= AVANTA_LP_CUSTOMER_GPP_OUT_ENA_LOW,
+	.gppOutEnValMid			= AVANTA_LP_CUSTOMER_GPP_OUT_ENA_MID,
+	.gppOutEnValHigh		= AVANTA_LP_CUSTOMER_GPP_OUT_ENA_HIGH,
+	.gppOutValLow			= AVANTA_LP_CUSTOMER_GPP_OUT_VAL_LOW,
+	.gppOutValMid			= AVANTA_LP_CUSTOMER_GPP_OUT_VAL_MID,
+	.gppOutValHigh			= AVANTA_LP_CUSTOMER_GPP_OUT_VAL_HIGH,
+	.gppPolarityValLow		= AVANTA_LP_CUSTOMER_GPP_POL_LOW,
+	.gppPolarityValMid		= AVANTA_LP_CUSTOMER_GPP_POL_MID,
+	.gppPolarityValHigh		= AVANTA_LP_CUSTOMER_GPP_POL_HIGH,
+
+	/* TDM */
+	.numBoardTdmInfo		= {1},
+	.pBoardTdmInt2CsInfo		= {avanta_lp_customer_board_0_Tdm886},
+	.boardTdmInfoIndex		= 0,
+
+	.pBoardSpecInit			= NULL,
+
+	/* NAND init params */
+	.nandFlashReadParams		= 0,
+	.nandFlashWriteParams		= 0,
+	.nandFlashControl		= 0,
+
+	.pBoardTdmSpiInfo		= avanta_lp_customer_board_0_TdmSpiInfo,
+
+	/* NOR init params */
+	.norFlashReadParams		= 0,
+	.norFlashWriteParams		= 0,
+	/* Enable modules auto-detection. */
+	.configAutoDetect		= MV_FALSE
+};
+
+MV_BOARD_INFO *customerBoardInfoTbl[] = {
+	&avanta_lp_customer_board_0_info,
+	&avanta_lp_customer_board_0_info,
+};
+
+/***************************************** Marvell Boards *****************************************/
 /*******************************************************************************
  * AvantaLP DB-88F6660 board */
 /*******************************************************************************/
@@ -524,7 +644,6 @@ MV_BOARD_INFO rd88f6660_board_info = {
 	.configAutoDetect		= MV_FALSE
 };
 
-
 /*******************************************************************************
  * AvantaLP FPGA board
 *******************************************************************************/
@@ -574,130 +693,14 @@ MV_BOARD_INFO avanta_lp_fpga_board_info = {
 	.nandFlashControl		= 0,
 };
 
-/*******************************************************************************
-* AvanataLP customer board
-*******************************************************************************/
-
-#define AVANTA_LP_CUSTOMER_BOARD_NAND_READ_PARAMS       0x000C0282
-#define AVANTA_LP_CUSTOMER_BOARD_NAND_WRITE_PARAMS      0x00010305
-/*NAND care support for small page chips*/
-#define AVANTA_LP_CUSTOMER_BOARD_NAND_CONTROL           0x01c00543
-
-#define AVANTA_LP_CUSTOMER_BOARD_NOR_READ_PARAMS        0x403E07CF
-#define AVANTA_LP_CUSTOMER_BOARD_NOR_WRITE_PARAMS       0x000F0F0F
-
-MV_BOARD_TWSI_INFO avanta_lp_customerInfoBoardTwsiDev[] = {
-	/* {{MV_BOARD_DEV_CLASS devClass, MV_U8 devClassId,  MV_U8 twsiDevAddr, MV_U8 twsiDevAddrType}} */
-	{ BOARD_DEV_TWSI_SATR,		0,	0x4C,	   ADDR7_BIT	},
-	{ BOARD_DEV_TWSI_SATR,		1,	0x4D,	   ADDR7_BIT	},
-	{ BOARD_DEV_TWSI_EEPROM,	0,	0x54,	   ADDR7_BIT	},
-};
-
-MV_BOARD_MAC_INFO avanta_lp_customerInfoBoardMacInfo[] = {
-	/* {{MV_BOARD_MAC_SPEED	boardMacSpeed, MV_U8 boardEthSmiAddr}} */
-	{ BOARD_MAC_SPEED_AUTO, 0x10},
-	{ BOARD_MAC_SPEED_AUTO, 0x11},
-	{ BOARD_MAC_SPEED_AUTO, 0x12},
-	{ BOARD_MAC_SPEED_AUTO, 0x13},
-};
-
-MV_BOARD_MPP_TYPE_INFO avanta_lp_customerInfoBoardModTypeInfo[] = {
-	{
-		.boardMppSlic = MV_BOARD_SLIC_DISABLED,
-		.ethSataComplexOpt = MV_ETHCOMP_SW_P0_2_GE_PHY_P0 |
-				     MV_ETHCOMP_SW_P1_2_GE_PHY_P1 |
-				     MV_ETHCOMP_SW_P2_2_GE_PHY_P2 |
-				     MV_ETHCOMP_SW_P3_2_GE_PHY_P3 |
-				     MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G |
-				     MV_ETHCOMP_GE_MAC1_2_SW_P4   |
-				     MV_ETHCOMP_GE_MAC0_2_SW_P6,
-		.ethPortsMode = 0x0
-	}
-};
-
-MV_DEV_CS_INFO avanta_lp_customerInfoBoardDeCsInfo[] = {
-	/*{deviceCS, params, devType, devWidth, busWidth }*/
-#if defined(MV_INCLUDE_SPI)
-	{ SPI_CS0, N_A, BOARD_DEV_SPI_FLASH, 8, 8 } /* SPI DEV */
-#endif
-};
-
-MV_BOARD_TDM_INFO avanta_lp_customerTdm880[] = { {0} };
-
-MV_BOARD_TDM_SPI_INFO avanta_lp_customerTdmSpiInfo[] = { {1} };
-
-MV_BOARD_MPP_INFO avanta_lp_customerInfoBoardMppConfigValue[] = {
-	{ {
-		  AVANTA_LP_CUSTOMER_MPP0_7,
-		  AVANTA_LP_CUSTOMER_MPP8_15,
-		  AVANTA_LP_CUSTOMER_MPP16_23,
-		  AVANTA_LP_CUSTOMER_MPP24_31,
-		  AVANTA_LP_CUSTOMER_MPP32_39,
-		  AVANTA_LP_CUSTOMER_MPP40_47,
-		  AVANTA_LP_CUSTOMER_MPP48_55,
-		  AVANTA_LP_CUSTOMER_MPP56_63,
-		  AVANTA_LP_CUSTOMER_MPP64_67,
-	 } }
-};
-
-MV_BOARD_INFO avanta_lp_customer_board_info = {
-	.boardName			= "AvantaLP-CUSTOMER",
-	.numBoardMppTypeValue		= ARRSZ(avanta_lp_customerInfoBoardModTypeInfo),
-	.pBoardModTypeValue		= avanta_lp_customerInfoBoardModTypeInfo,
-	.pBoardMppConfigValue		= avanta_lp_customerInfoBoardMppConfigValue,
-	.intsGppMaskLow			= 0,
-	.intsGppMaskMid			= 0,
-	.intsGppMaskHigh		= 0,
-	.numBoardDeviceIf		= ARRSZ(avanta_lp_customerInfoBoardDeCsInfo),
-	.pDevCsInfo			= avanta_lp_customerInfoBoardDeCsInfo,
-	.numBoardTwsiDev		= ARRSZ(avanta_lp_customerInfoBoardTwsiDev),
-	.pBoardTwsiDev			= avanta_lp_customerInfoBoardTwsiDev,
-	.numBoardMacInfo		= ARRSZ(avanta_lp_customerInfoBoardMacInfo),
-	.pBoardMacInfo			= avanta_lp_customerInfoBoardMacInfo,
-	.numBoardGppInfo		= 0,
-	.pBoardGppInfo			= NULL,
-	.activeLedsNumber		= 0,
-	.pLedGppPin			= NULL,
-	.ledsPolarity			= 0,
-
-	/* PMU Power */
-	.pmuPwrUpPolarity		= 0,
-	.pmuPwrUpDelay			= 80000,
-
-	/* GPP values */
-	.gppOutEnValLow			= AVANTA_LP_CUSTOMER_GPP_OUT_ENA_LOW,
-	.gppOutEnValMid			= AVANTA_LP_CUSTOMER_GPP_OUT_ENA_MID,
-	.gppOutEnValHigh		= AVANTA_LP_CUSTOMER_GPP_OUT_ENA_HIGH,
-	.gppOutValLow			= AVANTA_LP_CUSTOMER_GPP_OUT_VAL_LOW,
-	.gppOutValMid			= AVANTA_LP_CUSTOMER_GPP_OUT_VAL_MID,
-	.gppOutValHigh			= AVANTA_LP_CUSTOMER_GPP_OUT_VAL_HIGH,
-	.gppPolarityValLow		= AVANTA_LP_CUSTOMER_GPP_POL_LOW,
-	.gppPolarityValMid		= AVANTA_LP_CUSTOMER_GPP_POL_MID,
-	.gppPolarityValHigh		= AVANTA_LP_CUSTOMER_GPP_POL_HIGH,
-
-	/* TDM */
-	.numBoardTdmInfo		= {1},
-	.pBoardTdmInt2CsInfo		= {avanta_lp_customerTdm880},
-	.boardTdmInfoIndex		= 0,
-
-	/* NAND init params */
-	.nandFlashReadParams		= AVANTA_LP_CUSTOMER_BOARD_NAND_READ_PARAMS,
-	.nandFlashWriteParams		= AVANTA_LP_CUSTOMER_BOARD_NAND_WRITE_PARAMS,
-	.nandFlashControl		= AVANTA_LP_CUSTOMER_BOARD_NAND_CONTROL,
-	/* NOR init params */
-	.norFlashReadParams		= AVANTA_LP_CUSTOMER_BOARD_NOR_READ_PARAMS,
-	.norFlashWriteParams		= AVANTA_LP_CUSTOMER_BOARD_NOR_WRITE_PARAMS
-};
-
 /*
  * All supported avanta boards
  */
-MV_BOARD_INFO *boardInfoTbl[] = {
+MV_BOARD_INFO *marvellBoardInfoTbl[] = {
 	&rd88f6650_board_info,
 	&db88f6650_board_info,
 	&rd88f6660_board_info,
 	&db88f6660_board_info,
-	&avanta_lp_customer_board_info,
 	&avanta_lp_fpga_board_info,
 };
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
index 83bd3bb..c0a03a3 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
@@ -79,20 +79,49 @@
 #ifndef MV_ASMLANGUAGE
 /* New board ID numbers */
 
-/* boards ID numbers */
-#define BOARD_ID_BASE			0x0
-
-#define RD_6650_ID			(BOARD_ID_BASE)
-#define DB_6650_ID			(RD_6650_ID + 1)
-#define RD_6660_ID			(DB_6650_ID + 1)
-#define DB_6660_ID			(RD_6660_ID + 1)
-#define AVANTA_LP_CUSTOMER_ID		(DB_6660_ID + 1)
-#define MV_BOARD_ID_AVANTA_LP_FPGA	(AVANTA_LP_CUSTOMER_ID + 1)
-#define MV_MAX_BOARD_ID			(MV_BOARD_ID_AVANTA_LP_FPGA + 1)
+/* Customer boards */
+#define CUTOMER_BOARD_ID_BASE		0x0
+#define AVANTA_LP_CUSTOMER_BOARD_ID0	(CUTOMER_BOARD_ID_BASE + 0)
+#define AVANTA_LP_CUSTOMER_BOARD_ID1	(CUTOMER_BOARD_ID_BASE + 1)
+#define MV_MAX_CUSTOMER_BOARD_ID	(CUTOMER_BOARD_ID_BASE + 2)
+#define MV_CUSTOMER_BOARD_NUM		(MV_MAX_CUSTOMER_BOARD_ID - CUTOMER_BOARD_ID_BASE)
+
+/* Marvell boards */
+#define MARVELL_BOARD_ID_BASE		0x10
+#define RD_6650_ID			(MARVELL_BOARD_ID_BASE + 0)
+#define DB_6650_ID			(MARVELL_BOARD_ID_BASE + 1)
+#define RD_6660_ID			(MARVELL_BOARD_ID_BASE + 2)
+#define DB_6660_ID			(MARVELL_BOARD_ID_BASE + 3)
+#define MV_MAX_MARVELL_BOARD_ID		(MARVELL_BOARD_ID_BASE + 4)
+#define MV_MARVELL_BOARD_NUM		(MV_MAX_MARVELL_BOARD_ID - MARVELL_BOARD_ID_BASE)
+
 #define MV_INVALID_BOARD_ID		0xFFFFFFFF
 
 /*******************************************************************************
- * AvantaLP DB-88F6600 board */
+* Avanata LP Customer board - Based on RD-88F6660
+*******************************************************************************/
+#define AVANTA_LP_CUSTOMER_MPP0_7               0x55555555  /* NAND */
+#define AVANTA_LP_CUSTOMER_MPP8_15              0x22555555  /* NAND , I2C */
+#define AVANTA_LP_CUSTOMER_MPP16_23             0x22222222  /* UA0, TDM */
+#define AVANTA_LP_CUSTOMER_MPP24_31             0x33333333  /* SDIO, SPI1 */
+#define AVANTA_LP_CUSTOMER_MPP32_39             0x00023330  /* SD_Stat (GPIO_input), SPI1,PON BEN, 3xGPIOs  */
+#define AVANTA_LP_CUSTOMER_MPP40_47             0x44100020  /* Switch P4, PON_[XVR,TX_SD]*/
+#define AVANTA_LP_CUSTOMER_MPP48_55             0x44444444  /* Switch P4 */
+#define AVANTA_LP_CUSTOMER_MPP56_63             0x44444444  /* Switch P4 , LED */
+#define AVANTA_LP_CUSTOMER_MPP64_67             0x004	    /* GPIO's */
+
+#define AVANTA_LP_CUSTOMER_GPP_OUT_ENA_LOW      0xFFFFFFFF
+#define AVANTA_LP_CUSTOMER_GPP_OUT_ENA_MID      (~(BIT7 | BIT8 | BIT11))
+#define AVANTA_LP_CUSTOMER_GPP_OUT_ENA_HIGH     (~(BIT1 | BIT2))
+#define AVANTA_LP_CUSTOMER_GPP_OUT_VAL_LOW      0x0
+#define AVANTA_LP_CUSTOMER_GPP_OUT_VAL_MID      0x0
+#define AVANTA_LP_CUSTOMER_GPP_OUT_VAL_HIGH     (BIT1 | BIT2)
+#define AVANTA_LP_CUSTOMER_GPP_POL_LOW          0x0
+#define AVANTA_LP_CUSTOMER_GPP_POL_MID          0x0
+#define AVANTA_LP_CUSTOMER_GPP_POL_HIGH         0x0
+
+/*******************************************************************************
+ * AvantaLP DB-88F6660 board */
 /******************************************************************************
    MPP#			DEFAULT UNIT		        MPP Values (respectively)
    -----------------------------------------------------------------------------------
@@ -202,36 +231,6 @@
 #define RD_88F6650_GPP_POL_MID          0x0
 #define RD_88F6650_GPP_POL_HIGH         0x0
 
-/*******************************************************************************
-* AVANTA_LP_CUSTOMER_ID - customer board
-*******************************************************************************/
-#define AVANTA_LP_CUSTOMER_MPP0_7               0x55555555  /* NAND */
-#define AVANTA_LP_CUSTOMER_MPP8_15              0x22555555  /* NAND , I2C */
-#define AVANTA_LP_CUSTOMER_MPP16_23             0x11110022  /* UA0, SSI, GPIO's */
-#define AVANTA_LP_CUSTOMER_MPP24_31             0x04606101  /* PCIe0CLKREQ, P0,C0_Leds & DYING GASP*/
-#define AVANTA_LP_CUSTOMER_MPP32_39             0x04420000  /* GE_SMI, PON & GPIO's */
-#define AVANTA_LP_CUSTOMER_MPP40_47             0x22120020  /* GE0, PON_[XVR,TX_PD,TX_SD]*/
-#define AVANTA_LP_CUSTOMER_MPP48_55             0x22222222  /* GE0*/
-#define AVANTA_LP_CUSTOMER_MPP56_63             0x44004422  /* GE0 , LED, GPIO's */
-#define AVANTA_LP_CUSTOMER_MPP64_67             0x004	     /* GPIO's */
-
-/* GPPs
-MPP#	NAME			IN/OUT
---------------------------------------
-19	TDM_reset		OUT
-25	Ethernet Reset		OUT
-29	PCIe0_RSTOUTn		OUT
-*/
-#define AVANTA_LP_CUSTOMER_GPP_OUT_ENA_LOW      (~(BIT19 | BIT25 | BIT29))
-#define AVANTA_LP_CUSTOMER_GPP_OUT_ENA_MID      0xFFFFFFFF
-#define AVANTA_LP_CUSTOMER_GPP_OUT_ENA_HIGH     0xFFFFFFFF
-#define AVANTA_LP_CUSTOMER_GPP_OUT_VAL_LOW      BIT29
-#define AVANTA_LP_CUSTOMER_GPP_OUT_VAL_MID      0x0
-#define AVANTA_LP_CUSTOMER_GPP_OUT_VAL_HIGH     0x0
-#define AVANTA_LP_CUSTOMER_GPP_POL_LOW          0x0
-#define AVANTA_LP_CUSTOMER_GPP_POL_MID          0x0
-#define AVANTA_LP_CUSTOMER_GPP_POL_HIGH         0x0
-
 #endif  /* MV_ASMLANGUAGE */
 
 #endif  /* __INCmvBoardEnvSpech */
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 1d73d01..0a2459d 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -755,7 +755,6 @@ MV_VOID mvCtrlSysConfigInit()
 *******************************************************************************/
 MV_STATUS mvCtrlBoardConfigGet(MV_U8 *config)
 {
-	MV_U32 boardId = mvBoardIdGet();
 	MV_STATUS status1, status2;
 	MV_BOOL isEepromEnabled = (mvBoardEepromInit() == MV_OK) ? MV_TRUE : MV_FALSE;
 
@@ -770,7 +769,7 @@ MV_STATUS mvCtrlBoardConfigGet(MV_U8 *config)
 		DB(mvOsPrintf("%s: Error: mvBoardTwsiGet from EEPROM/Dip Switch failed\n", __func__));
 		return MV_ERROR;
 	}
-	if (boardId == DB_6660_ID) { /* DB-6660 has another register for board configuration */
+	if (mvBoardIdGet() == DB_6660_ID) { /* DB-6660 has another register for board configuration */
 		if (isEepromEnabled == MV_TRUE)
 			status1 = mvBoardTwsiGet(BOARD_DEV_TWSI_EEPROM, 0, 2, &config[2]);	/* EEPROM Reg#2 */
 		else {
diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index af9e4d8..b14656e 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -181,16 +181,21 @@ extern u32 mvIsUsbHost;
 
 static int __init parse_tag_mv_uboot(const struct tag *tag)
 {
-	unsigned int mvUbootVer = 0;
+	unsigned int boardId = 0;
 	int i = 0;
 
 	pr_info("Using UBoot passing parameters structure\n");
-	mvUbootVer = read_tag(tag->u.mv_uboot.uboot_version);
+	boardId = read_tag(tag->u.mv_uboot.uboot_version);
+	/* uboot_version:
+	 * - Board Id is Passed in the lower byte
+	 * - Used to set board ID & structure pointer - must be set before any mvBoardIdGet usage
+	 */
+	mvBoardSet(boardId & 0xff);
+
 #ifdef CONFIG_MV_INCLUDE_USB
 	mvIsUsbHost = read_tag(tag->u.mv_uboot.isUsbHost);
 #endif
 
-	mvBoardIdSet(mvBoardIdGet());
 #ifdef CONFIG_MV_INCLUDE_GIG_ETH
 
 	for (i = 0; i < MV_UBOOT_ETH_PORTS; i++) {
-- 
1.7.5.4

