From 5b1a2813dcb749d357033994d3193329abdcfa5d Mon Sep 17 00:00:00 2001
From: Yoni Farhadia <yonif@marvell.com>
Date: Sun, 20 Oct 2013 10:22:02 +0200
Subject: [PATCH 1032/1825] neta,pp2: disable tagged port TX of SKBs that are
 not from MUX interfaces

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 07fcd6ae44c25b5bdb6abd4338729df5f37177c6

	- In MUX TX, set special skb_iif in transmitted SKB
	- This is done to let know the master interface that this SKB's source is MUX interface
	- If master interface is tagged, then drop all SKBs that their source isn't MUX interface

Change-Id: I06624bad8b897fbd2c8996c104d9972cae342950
Signed-off-by: Yoni Farhadia <yonif@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_mux/mv_mux_netdev.c          |    3 +++
 .../mv_drivers_lsp/mv_mux/mv_mux_netdev.h          |    4 ++++
 .../mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c     |   11 +++++++++++
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |   11 +++++++++++
 4 files changed, 29 insertions(+), 0 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/mv_mux_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/mv_mux_netdev.c
index 8a755dd..7fd585f 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/mv_mux_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/mv_mux_netdev.c
@@ -353,6 +353,9 @@ static int mv_mux_xmit(struct sk_buff *skb, struct net_device *dev)
 	/* assign the packet to the hw interface */
 	skb->dev = mux_eth_shadow[pmux_priv->port].root;
 
+	/* mark skb as tagged skb */
+	MV_MUX_SKB_TAG_SET(skb);
+
 	/*tell Linux to pass it to its device */
 	return dev_queue_xmit(skb);
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/mv_mux_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/mv_mux_netdev.h
index cc50b92..8b1ccea 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/mv_mux_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/mv_mux_netdev.h
@@ -38,6 +38,10 @@ disclaimer.
 #include "mvOs.h"
 #include "mv802_3.h"
 
+#define MV_MUX_SKB_TAG_VAL		(0xabcd)
+#define MV_MUX_SKB_TAG_SET(skb)		(skb->skb_iif = (MV_MUX_SKB_TAG_VAL))
+#define MV_MUX_SKB_IS_TAGGED(skb)	(skb->skb_iif == (MV_MUX_SKB_TAG_VAL))
+
 extern const struct ethtool_ops mv_mux_tool_ops;
 
 struct mux_netdev {
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
index a7741d0..9e1f892 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
@@ -1901,6 +1901,17 @@ static int mv_eth_tx(struct sk_buff *skb, struct net_device *dev)
 	}
 #endif /* CONFIG_MV_ETH_TX_SPECIAL */
 
+	/* In case this port is tagged, check if SKB is tagged - i.e. SKB's source is MUX interface */
+	if (pp->tagged && (!MV_MUX_SKB_IS_TAGGED(skb))) {
+#ifdef CONFIG_MV_ETH_DEBUG_CODE
+		if (pp->dbg_flags & MV_ETH_F_DBG_TX)
+			pr_err("%s: port %d is tagged, skb not from MUX interface - packet is dropped.\n",
+				__func__, pp->port);
+#endif /* CONFIG_MV_ETH_DEBUG_CODE */
+
+		goto out;
+	}
+
 	/* Get TXQ (without BM) to send packet generated by Linux */
 	if (tx_spec_ready == false) {
 		tx_spec.txp = pp->txp;
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 16f6c18..f5ca1fb 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -1744,6 +1744,17 @@ static int mv_eth_tx(struct sk_buff *skb, struct net_device *dev)
 	}
 #endif /* CONFIG_MV_ETH_TX_SPECIAL */
 
+	/* In case this port is tagged, check if SKB is tagged - i.e. SKB's source is MUX interface */
+	if (pp->tagged && (!MV_MUX_SKB_IS_TAGGED(skb))) {
+#ifdef CONFIG_MV_ETH_DEBUG_CODE
+		if (pp->dbg_flags & MV_ETH_F_DBG_TX)
+			pr_err("%s: port %d is tagged, skb not from MUX interface - packet is dropped.\n",
+				__func__, pp->port);
+#endif /* CONFIG_MV_ETH_DEBUG_CODE */
+
+		goto out;
+	}
+
 	/* Get TXQ (without BM) to send packet generated by Linux */
 	if (tx_spec_ptr == NULL) {
 		tx_spec_ptr = &pp->tx_spec;
-- 
1.7.5.4

