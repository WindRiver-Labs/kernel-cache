From 930102be0090c55a1b30f2373e5e12c523615fc7 Mon Sep 17 00:00:00 2001
From: Jing Hua <jinghua@marvell.com>
Date: Sun, 6 Apr 2014 17:40:38 +0800
Subject: [PATCH 1531/1825] fix: alp: mv_tpm: fix PON port CPU rxq issue in
 RD/DB.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit b0b445b096dcb58f7444a5716c038b699af0aaa5

	In ALP DB, PON port CPU rxq high is 3.
	In ALP RD, since GMAC1 is not inited by linux network driver.
	PON port CPU rxq high is 2.
	TPM used to set CPU rxq high value hardcoded. Now it is changed
	to get the queue value from linux driver dynamically.
Signed-off-by: Jing Hua <jinghua@marvell.com>

Change-Id: If3708b0a7ea23d905b8a247f28923e4b5b1e132e
Reviewed-on: http://vgitil04.il.marvell.com:8080/6922
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Ofir Drang <ofir@marvell.com>
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c       |   22 ++++++++++++-------
 1 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c
index 4af9072..b0536d2 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c
@@ -1574,17 +1574,23 @@ static int tpm_cls_fl_rls_log_rl_id_upd(struct tpm_cls_fl_rule_list_t	*add_rls,
 static int tpm_cls_rx_qh_init(void)
 {
 	int rc;
+	int eth_port;
+	int phy_port;
+	struct eth_port *eth_pp;
 
 	/* Set queue high of different port, GMAC0, GMAC1, and PON */
-	rc = mvPp2ClsHwRxQueueHighSet(TPM_ENUM_GMAC_0, TPM_RX_QH_FROM_REG, TPM_GMAC0_RX_QH);
-	IF_ERROR_STR(TPM_CLS_MOD, rc, "Fail to set queue high for GMAC0");
-
-	rc = mvPp2ClsHwRxQueueHighSet(TPM_ENUM_GMAC_1, TPM_RX_QH_FROM_REG, TPM_GMAC1_RX_QH);
-	IF_ERROR_STR(TPM_CLS_MOD, rc, "Fail to set queue high for GMAC1");
-
-	rc = mvPp2ClsHwRxQueueHighSet(TPM_ENUM_PMAC, TPM_RX_QH_FROM_REG, TPM_PMAC_RX_QH);
-	IF_ERROR_STR(TPM_CLS_MOD, rc, "Fail to set queue high for PMAC");
+	for (eth_port = 0; eth_port <= TPM_NUM_MAX_GMAC_PORTS; eth_port++) {
 
+		eth_pp = mv_eth_port_by_id(eth_port);
+		phy_port = MV_PPV2_PORT_PHYS(eth_port);
+		if (eth_pp == NULL) {
+			TPM_OS_INFO(TPM_CLS_MOD, "port #%d, phy #%d is not initialized\n", eth_port, phy_port);
+			continue;
+		}
+		rc = mvPp2ClsHwRxQueueHighSet(phy_port, TPM_RX_QH_FROM_REG,
+			(eth_pp->first_rxq) >> TPM_QUEUE_HIGH_SHIFT);
+		IF_ERROR_STR(TPM_CLS_MOD, rc, "Fail to set queue high for PORT(%d)\n", phy_port);
+	}
 	return TPM_OK;
 }
 #endif
-- 
1.7.5.4

