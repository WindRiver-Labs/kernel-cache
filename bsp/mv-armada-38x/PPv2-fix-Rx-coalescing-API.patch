From efff689057aac65d82a7dcd18f6a5ba6010cb1b5 Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Tue, 16 Jul 2013 14:13:10 +0300
Subject: [PATCH 0832/1825] PPv2: fix: Rx coalescing API

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 726a829220614a0190536ba332ac4557823651bb

	since T-Clk and transformation between sec and usec use large numbers, RX coalescing API -
	- now use unsigned int, and different mathematic operations order (for example div before mult)

Change-Id: I9fd44ca160f5dd501c03f4a737a47210319e98b4
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2672
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c |   11 ++++++-----
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h |   10 +++++-----
 2 files changed, 11 insertions(+), 10 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
index 6cb6157..90e0977 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
@@ -1147,24 +1147,25 @@ MV_STATUS mvPp2RxqTimeCoalSet(int port, int rxq, MV_U32 uSec)
 	MV_U32 regVal;
 	int prxq = mvPp2LogicRxqToPhysRxq(port, rxq);
 
-	regVal = (mvPp2HalData.tClk / 1000000) * uSec;
+	regVal = uSec * (mvPp2HalData.tClk / 1000000);
 
 	mvPp2WrReg(MV_PP2_ISR_RX_THRESHOLD_REG(prxq), regVal);
 
 	return MV_OK;
 }
 
-int mvPp2RxqTimeCoalGet(int port, int rxq)
+unsigned int mvPp2RxqTimeCoalGet(int port, int rxq)
 {
 	MV_U32 regVal;
 	int prxq = mvPp2LogicRxqToPhysRxq(port, rxq);
+	unsigned int res, tClkUsec;
 
 	regVal = mvPp2RdReg(MV_PP2_ISR_RX_THRESHOLD_REG(prxq));
 
-	regVal = (regVal * 1000000) / mvPp2HalData.tClk;
+	tClkUsec = mvPp2HalData.tClk / 1000000;
+	res = regVal / tClkUsec;
 
-
-	return regVal;
+	return res;
 }
 
 /* unmask the current CPU's rx/tx interrupts                   *
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
index 75ff2ff..2ceec92 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
@@ -596,11 +596,11 @@ MV_STATUS mvPp2TxqWrrPrioSet(int port, int txp, int txq, int weight);
 /*****************************/
 /*      Interrupts API       */
 /*****************************/
-MV_VOID   mvPp2GbeCpuInterruptsDisable(int port, int cpu);
-MV_VOID   mvPp2GbeCpuInterruptsEnable(int port, int cpu);
-MV_STATUS mvPp2RxqTimeCoalSet(int port, int rxq, MV_U32 uSec);
-int	  mvPp2RxqTimeCoalGet(int port, int rxq);
-MV_STATUS mvPp2GbeIsrRxqGroup(int port, int rxqNum);
+MV_VOID		mvPp2GbeCpuInterruptsDisable(int port, int cpu);
+MV_VOID		mvPp2GbeCpuInterruptsEnable(int port, int cpu);
+MV_STATUS	mvPp2RxqTimeCoalSet(int port, int rxq, MV_U32 uSec);
+unsigned int	mvPp2RxqTimeCoalGet(int port, int rxq);
+MV_STATUS	mvPp2GbeIsrRxqGroup(int port, int rxqNum);
 
 /* unmask the current CPU's rx/tx interrupts                   *
  *  - rxq_mask: support rxq to cpu granularity                 *
-- 
1.7.5.4

