From 8001d1a5c0f55c6b88e016b0e3b3ab6f2d483834 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Tue, 30 Sep 2014 16:58:22 +0800
Subject: [PATCH 1806/1825] alp, uart: Using UPIO_MEM32 replace UPIO_DWAPB

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada370/core.c    |    4 ++--
 arch/arm/mach-armada38x/core.c    |    8 ++++----
 arch/arm/mach-armadaxp/core.c     |    8 ++++----
 arch/arm/mach-avantalp/core.c     |    8 ++++----
 arch/arm/mach-msys/core.c         |    4 ++--
 drivers/tty/serial/8250/8250.c    |   26 +-------------------------
 drivers/tty/serial/8250/8250_dw.c |   14 +++++++++-----
 drivers/tty/serial/serial_core.c  |    6 ------
 8 files changed, 26 insertions(+), 52 deletions(-)

diff --git a/arch/arm/mach-armada370/core.c b/arch/arm/mach-armada370/core.c
index 595355a..ade6bce 100644
--- a/arch/arm/mach-armada370/core.c
+++ b/arch/arm/mach-armada370/core.c
@@ -387,7 +387,7 @@ static struct plat_serial8250_port aurora_uart0_data[] = {
 		.membase	= (char *)(INTER_REGS_BASE | MV_UART_REGS_OFFSET(0)),
 		.irq		= IRQ_AURORA_UART0,
 		.flags		= UPF_FIXED_TYPE | UPF_SKIP_TEST | UPF_BOOT_AUTOCONF,
-		.iotype		= UPIO_DWAPB,
+		.iotype		= UPIO_MEM32,
 		.private_data	= (void *) (INTER_REGS_BASE | MV_UART_REGS_OFFSET(0) | 0x7C),
 		.type		= PORT_16550A,
 		.regshift	= 2,
@@ -409,7 +409,7 @@ static struct resource aurora_uart0_resources[] = {
 };
 
 static struct platform_device aurora_uart0 = {
-	.name			= "serial8250",
+	.name			= "dw-apb-uart",
 	.id			= 0,
 	.dev			= {
 		.platform_data	= aurora_uart0_data,
diff --git a/arch/arm/mach-armada38x/core.c b/arch/arm/mach-armada38x/core.c
index 1583c6f..fa91ff3 100644
--- a/arch/arm/mach-armada38x/core.c
+++ b/arch/arm/mach-armada38x/core.c
@@ -380,7 +380,7 @@ static struct plat_serial8250_port uart0_data[] = {
 		.membase	= (char *)(INTER_REGS_BASE | MV_UART_REGS_OFFSET(0)),
 		.irq		= IRQ_GLOBAL_UART0,
 		.flags		= UPF_FIXED_TYPE | UPF_SKIP_TEST | UPF_BOOT_AUTOCONF,
-		.iotype		= UPIO_DWAPB,
+		.iotype		= UPIO_MEM32,
 		.private_data	= (void *) (INTER_REGS_BASE | MV_UART_REGS_OFFSET(0) | 0x7C),
 		.type		= PORT_16550A,
 		.regshift	= 2,
@@ -402,7 +402,7 @@ static struct resource uart0_resources[] = {
 };
 
 static struct platform_device uart0 = {
-	.name			= "serial8250",
+	.name			= "dw-apb-uart",
 	.id			= 0,
 	.dev			= {
 		.platform_data	= uart0_data,
@@ -420,7 +420,7 @@ static struct plat_serial8250_port uart1_data[] = {
 		.membase	= (char *)(INTER_REGS_BASE | MV_UART_REGS_OFFSET(1)),
 		.irq		= IRQ_GLOBAL_UART1,
 		.flags		= UPF_FIXED_TYPE | UPF_SKIP_TEST | UPF_BOOT_AUTOCONF,
-		.iotype		= UPIO_DWAPB,
+		.iotype		= UPIO_MEM32,
 		.private_data	= (void *) (INTER_REGS_BASE | MV_UART_REGS_OFFSET(1) | 0x7C),
 		.type		= PORT_16550A,
 		.regshift	= 2,
@@ -442,7 +442,7 @@ static struct resource uart1_resources[] = {
 };
 
 static struct platform_device uart1 = {
-	.name			= "serial8250",
+	.name			= "dw-apb-uart",
 	.id			= 0,
 	.dev			= {
 		.platform_data	= uart1_data,
diff --git a/arch/arm/mach-armadaxp/core.c b/arch/arm/mach-armadaxp/core.c
index a15d5cc..6236ab3 100644
--- a/arch/arm/mach-armadaxp/core.c
+++ b/arch/arm/mach-armadaxp/core.c
@@ -564,7 +564,7 @@ static struct plat_serial8250_port aurora_uart0_data[] = {
 		.membase	= (char *)(INTER_REGS_BASE | MV_UART_REGS_OFFSET(0)),
 		.irq		= IRQ_AURORA_UART0,
 		.flags		= UPF_FIXED_TYPE | UPF_SKIP_TEST | UPF_BOOT_AUTOCONF,
-		.iotype		= UPIO_DWAPB,
+		.iotype		= UPIO_MEM32,
 		.private_data	= (void *) (INTER_REGS_BASE | MV_UART_REGS_OFFSET(0) | 0x7C),
 		.type		= PORT_16550A,
 		.regshift	= 2,
@@ -586,7 +586,7 @@ static struct resource aurora_uart0_resources[] = {
 };
 
 static struct platform_device aurora_uart0 = {
-	.name			= "serial8250",
+	.name			= "dw-apb-uart",
 	.id			= 0,
 	.dev			= {
 		.platform_data	= aurora_uart0_data,
@@ -604,7 +604,7 @@ static struct plat_serial8250_port aurora_uart1_data[] = {
 		.membase	= (char *)(INTER_REGS_BASE | MV_UART_REGS_OFFSET(1)),
 		.irq		= IRQ_AURORA_UART1,
 		.flags		= UPF_FIXED_TYPE | UPF_SKIP_TEST | UPF_BOOT_AUTOCONF,
-		.iotype		= UPIO_DWAPB,
+		.iotype		= UPIO_MEM32,
 		.private_data	= (void *) (INTER_REGS_BASE | MV_UART_REGS_OFFSET(1) | 0x7C),
 		.type		= PORT_16550A,
 		.regshift	= 2,
@@ -626,7 +626,7 @@ static struct resource aurora_uart1_resources[] = {
 };
 
 static struct platform_device aurora_uart1 = {
-	.name			= "serial8250",
+	.name			= "dw-apb-uart",
 	.id			= 0,
 	.dev			= {
 		.platform_data	= aurora_uart1_data,
diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index d258ddc..6ac5e3d 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -455,7 +455,7 @@ static struct plat_serial8250_port uart0_data[] = {
 		.membase	= (char *)(INTER_REGS_BASE | MV_UART_REGS_OFFSET(0)),
 		.irq		= IRQ_GLOBAL_UART0,
 		.flags		= UPF_FIXED_TYPE | UPF_SKIP_TEST | UPF_BOOT_AUTOCONF,
-		.iotype		= UPIO_DWAPB,
+		.iotype		= UPIO_MEM32,
 		.private_data	= (void *) (INTER_REGS_BASE | MV_UART_REGS_OFFSET(0) | 0x7C),
 		.type		= PORT_16550A,
 		.regshift       = 2,
@@ -477,7 +477,7 @@ static struct resource uart0_resources[] = {
 };
 
 static struct platform_device uart0 = {
-	.name			= "serial8250",
+	.name			= "dw-apb-uart",
 	.id			= 0,
 	.dev			= {
 		.platform_data	= uart0_data,
@@ -495,7 +495,7 @@ static struct plat_serial8250_port uart1_data[] = {
 		.membase	= (char *)(INTER_REGS_BASE | MV_UART_REGS_OFFSET(1)),
 		.irq		= IRQ_GLOBAL_UART1,
 		.flags		= UPF_FIXED_TYPE | UPF_SKIP_TEST | UPF_BOOT_AUTOCONF,
-		.iotype		= UPIO_DWAPB,
+		.iotype		= UPIO_MEM32,
 		.private_data	= (void *) (INTER_REGS_BASE | MV_UART_REGS_OFFSET(1) | 0x7C),
 		.type		= PORT_16550A,
 		.regshift       = 2,
@@ -517,7 +517,7 @@ static struct resource uart1_resources[] = {
 };
 
 static struct platform_device uart1 = {
-	.name			= "serial8250",
+	.name			= "dw-apb-uart",
 	.id			= 0,
 	.dev			= {
 		.platform_data	= uart1_data,
diff --git a/arch/arm/mach-msys/core.c b/arch/arm/mach-msys/core.c
index 9f07085..13d8f8e 100644
--- a/arch/arm/mach-msys/core.c
+++ b/arch/arm/mach-msys/core.c
@@ -360,7 +360,7 @@ static struct plat_serial8250_port aurora_uart0_data[] = {
 		.membase	= (char *)(INTER_REGS_BASE | MV_UART_REGS_OFFSET(0)),
 		.irq		= IRQ_AURORA_UART0,
 		.flags		= UPF_FIXED_TYPE | UPF_SKIP_TEST | UPF_BOOT_AUTOCONF,
-		.iotype		= UPIO_DWAPB,
+		.iotype		= UPIO_MEM32,
 		.private_data	= (void *) (INTER_REGS_BASE | MV_UART_REGS_OFFSET(0) | 0x7C),
 		.type		= PORT_16550A,
 		.regshift	= 2,
@@ -400,7 +400,7 @@ static struct plat_serial8250_port aurora_uart1_data[] = {
 		.membase	= (char *)(INTER_REGS_BASE | MV_UART_REGS_OFFSET(1)),
 		.irq		= IRQ_AURORA_UART1,
 		.flags		= UPF_FIXED_TYPE | UPF_SKIP_TEST | UPF_BOOT_AUTOCONF,
-		.iotype		= UPIO_DWAPB,
+		.iotype		= UPIO_MEM32,
 		.private_data	= (void *) (INTER_REGS_BASE | MV_UART_REGS_OFFSET(1) | 0x7C),
 		.type		= PORT_16550A,
 		.regshift	= 2,
diff --git a/drivers/tty/serial/8250/8250.c b/drivers/tty/serial/8250/8250.c
index a5238da..dff6214 100644
--- a/drivers/tty/serial/8250/8250.c
+++ b/drivers/tty/serial/8250/8250.c
@@ -1533,38 +1533,14 @@ static irqreturn_t serial8250_interrupt(int irq, void *dev_id)
 	do {
 		struct uart_8250_port *up;
 		struct uart_port *port;
-		unsigned int iir;
 
 		up = list_entry(l, struct uart_8250_port, list);
 		port = &up->port;
 
-#if !defined(CONFIG_PLAT_ARMADA)
 		if (port->handle_irq(port)) {
 			handled = 1;
 			end = NULL;
-		}
-#endif
-#if defined(CONFIG_PLAT_ARMADA)
-		iir = serial_in(up, UART_IIR);
-		if (!(iir & UART_IIR_NO_INT)) {
-			serial8250_handle_irq(port, iir);
-			handled = 1;
-			end = NULL;
-		} else if ((up->port.iotype == UPIO_DWAPB ||
-						up->port.iotype == UPIO_DWAPB32) &&
-							(iir & UART_IIR_BUSY) == UART_IIR_BUSY) {
-			/* The DesignWare APB UART has an Busy Detect (0x07)
-			* interrupt meaning an LCR write attempt occurred while the
-			* UART was busy. The interrupt must be cleared by reading
-			* the UART status register (USR) and the LCR re-written. */
-			unsigned int status;
-			status = *(volatile u32 *)up->port.private_data;
-			/* serial_out(up, UART_LCR, up->lcr); */
-			handled = 1;
-			end = NULL;
-		}
-#endif
-		else if (end == NULL)
+		} else if (end == NULL)
 			end = l;
 
 		l = l->next;
diff --git a/drivers/tty/serial/8250/8250_dw.c b/drivers/tty/serial/8250/8250_dw.c
index 11ccb9f..eb133d9 100644
--- a/drivers/tty/serial/8250/8250_dw.c
+++ b/drivers/tty/serial/8250/8250_dw.c
@@ -90,7 +90,7 @@ static int dw8250_handle_irq(struct uart_port *p)
 static int __devinit dw8250_probe(struct platform_device *pdev)
 {
 #ifndef CONFIG_USE_OF
-struct plat_serial8250_port *p = pdev->dev.platform_data;
+	struct plat_serial8250_port *p = pdev->dev.platform_data;
 #endif
 	struct uart_port port = {};
 	struct resource *regs = platform_get_resource(pdev, IORESOURCE_MEM, 0);
@@ -150,10 +150,14 @@ struct plat_serial8250_port *p = pdev->dev.platform_data;
 	port.uartclk = val;
 #else
 	port.iotype = p->iotype;
-        port.serial_in = dw8250_serial_in32;
-        port.serial_out = dw8250_serial_out32;
-        port.regshift = p->regshift;
-        port.uartclk = p->uartclk;
+	port.serial_in = dw8250_serial_in32;
+	port.serial_out = dw8250_serial_out32;
+	port.regshift = p->regshift;
+	port.uartclk = p->uartclk;
+	port.flags = p->flags;
+	port.type = p->type;
+	port.mapbase = p->mapbase;
+	port.membase = p->membase;
 #endif
 	data->line = serial8250_register_port(&port);
 	if (data->line < 0)
diff --git a/drivers/tty/serial/serial_core.c b/drivers/tty/serial/serial_core.c
index 919fdb0..f4b0e9a 100644
--- a/drivers/tty/serial/serial_core.c
+++ b/drivers/tty/serial/serial_core.c
@@ -2042,9 +2042,6 @@ uart_report_port(struct uart_driver *drv, struct uart_port *port)
 	case UPIO_MEM32:
 	case UPIO_AU:
 	case UPIO_TSI:
-#if defined(CONFIG_PLAT_ARMADA)
-	case UPIO_DWAPB:
-#endif
 		snprintf(address, sizeof(address),
 			 "MMIO 0x%llx", (unsigned long long)port->mapbase);
 		break;
@@ -2481,9 +2478,6 @@ int uart_match_port(struct uart_port *port1, struct uart_port *port2)
 	case UPIO_MEM32:
 	case UPIO_AU:
 	case UPIO_TSI:
-#if defined(CONFIG_PLAT_ARMADA)
-	case UPIO_DWAPB:
-#endif
 		return (port1->mapbase == port2->mapbase);
 	}
 	return 0;
-- 
1.7.5.4

