From 2cf106c4459f833356969f968af00fcb291d9e72 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Thu, 8 Aug 2013 17:57:41 -0400
Subject: [PATCH 0944/1825] pp2: Add sysfs commands to pp2/gbe/rx
 sub-directory

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit d4da03fd7beae2c1c06dedb79fabcfe924772ddf

	- New command for RX prefetch confuration:
	"echo [p] [m]    > prefetch"  - set RX prefetch mode for port [p]
                                      [m]: 0-disable, 1-descriptor, 2-packet header, 3-both
	- New command to show RXQ registers:
	"echo [p] [rxq]  > pRxqRegs"  - show RXQ registers for global <rxq>

Change-Id: If7230734c4da0434e6d90701c0c16ba36ef6fbac
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2994
Reviewed-by: Igor Patrik <igorp@marvell.com>
Tested-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_pp2/net_dev/mv_eth_rx_sysfs.c               |   34 +++++++++++++------
 1 files changed, 23 insertions(+), 11 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_rx_sysfs.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_rx_sysfs.c
index b373c67..098af1e 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_rx_sysfs.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_rx_sysfs.c
@@ -37,18 +37,21 @@ disclaimer.
 #include "prs/mvPp2Prs.h"
 #include "mv_netdev.h"
 
-static ssize_t mv_eth_help(char *buf)
+static ssize_t mv_eth_help(char *b)
 {
-	int off = 0;
-
-	off += sprintf(buf+off, "cat                    rxDmaRegs     - print RX DMA registers\n");
-	off += sprintf(buf+off, "echo [p]             > rxFifoRegs    - show Rx Fifo registers for port <p> range [0..max]\n");
-	off += sprintf(buf+off, "echo [rxq]           > gRxqRegs      - show RXQ registers for global <Rxq> range [0..max]\n");
-	off += sprintf(buf+off, "echo [p] [rxq] [v]   > rxqShow       - show RXQ descriptors ring for <p/rxq>. v=0-brief, v=1-full\n");
-	off += sprintf(buf+off, "echo [p] [rxq] [v]   > rxqSize       - set number of descriptors <v> for <port/rxq>.\n");
-	off += sprintf(buf+off, "echo [p] [hex] [0|1] > mhRxSpec      - set RX MH value for RX special packets\n");
-
-	return off;
+	int o = 0;
+
+	o += sprintf(b+o, "cat                    rxDmaRegs  - show RX DMA registers\n");
+	o += sprintf(b+o, "echo [p]             > rxFifoRegs - show RX FIFO registers for port <p>\n");
+	o += sprintf(b+o, "echo [rxq]           > gRxqRegs   - show RXQ registers for global <rxq>\n");
+	o += sprintf(b+o, "echo [p] [rxq]       > pRxqRegs   - show RXQ registers for global <rxq>\n");
+	o += sprintf(b+o, "echo [p] [rxq] [0|1] > rxqShow    - show RXQ descriptors ring for <p/rxq>\n");
+	o += sprintf(b+o, "echo [p] [rxq] [v]   > rxqSize    - set number of descriptors <v> for <port/rxq>.\n");
+	o += sprintf(b+o, "echo [p] [hex] [0|1] > mhRxSpec   - set MH value [hex] for RX special packets\n");
+	o += sprintf(b+o, "echo [p] [m]         > prefetch   - set RX prefetch mode for port [p]\n");
+	o += sprintf(b+o, "                                  [m]: 0-disable, 1-descriptor, 2-packet header, 3-both\n");
+
+	return o;
 }
 
 static ssize_t mv_eth_show(struct device *dev,
@@ -89,10 +92,15 @@ static ssize_t mv_eth_port_store(struct device *dev,
 		mvPp2RxqShow(p, v, a);
 	} else if (!strcmp(name, "gRxqRegs")) {
 		mvPp2PhysRxqRegs(p);
+	} else if (!strcmp(name, "pRxqRegs")) {
+		mvPp2PortRxqRegs(p, v);
 	} else if (!strcmp(name, "rxFifoRegs")) {
 		mvPp2RxFifoRegs(p);
 	} else if (!strcmp(name, "rxqSize")) {
 		mv_eth_ctrl_rxq_size_set(p, v, a);
+	} else if (!strcmp(name, "prefetch")) {
+		err |= mv_eth_ctrl_flag(p, MV_ETH_F_RX_DESC_PREFETCH, v & 0x1);
+		err |= mv_eth_ctrl_flag(p, MV_ETH_F_RX_PKT_PREFETCH, v & 0x2);
 	} else {
 		err = 1;
 		printk(KERN_ERR "%s: illegal operation <%s>\n", __func__, attr->attr.name);
@@ -142,18 +150,22 @@ static DEVICE_ATTR(help,        S_IRUSR, mv_eth_show, NULL);
 static DEVICE_ATTR(rxDmaRegs,  	S_IRUSR, mv_eth_show, NULL);
 static DEVICE_ATTR(rxqShow,     S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(gRxqRegs,    S_IWUSR, NULL, mv_eth_port_store);
+static DEVICE_ATTR(pRxqRegs,    S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(rxFifoRegs,  S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(rxqSize,   	S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(mhRxSpec,	S_IWUSR, NULL, mv_eth_rx_hex_store);
+static DEVICE_ATTR(prefetch,	S_IWUSR, NULL, mv_eth_port_store);
 
 static struct attribute *mv_eth_attrs[] = {
 	&dev_attr_help.attr,
 	&dev_attr_rxDmaRegs.attr,
 	&dev_attr_rxqShow.attr,
 	&dev_attr_gRxqRegs.attr,
+	&dev_attr_pRxqRegs.attr,
 	&dev_attr_rxFifoRegs.attr,
 	&dev_attr_rxqSize.attr,
 	&dev_attr_mhRxSpec.attr,
+	&dev_attr_prefetch.attr,
 	NULL
 };
 
-- 
1.7.5.4

