From 09e296daf2b01307212683dd2df3d900cb57a82d Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Tue, 23 Jul 2013 14:37:19 +0300
Subject: [PATCH 0883/1825] PPv2: write to coalescing registers only if rate
 is changed

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit a642d7f2e071300f5dc4457f9735e5dc301727af

	- Relevant for adaptive RX coalescing
	- Update PPv2's coalescing registers only when packet rate is changed (between low/normal/high rate)
	- Keep current rate per port (low/normal/high)

Change-Id: I4a0d20a886650cfd207c6e523b2e9f0a14d94083
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2801
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c    |    9 +++--
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |   35 +++++++++++++-------
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    1 +
 3 files changed, 29 insertions(+), 16 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c
index 74b69cb..a01c0ba 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c
@@ -481,10 +481,11 @@ int mv_eth_tool_set_coalesce(struct net_device *netdev,
 		return -EPERM;
 #endif
 
-	for (rxq = 0; rxq < CONFIG_MV_ETH_RXQ; rxq++) {
-		mv_eth_rx_ptks_coal_set(pp->port, rxq, cmd->rx_max_coalesced_frames);
-		mv_eth_rx_time_coal_set(pp->port, rxq, cmd->rx_coalesce_usecs);
-	}
+	if (!cmd->use_adaptive_rx_coalesce)
+		for (rxq = 0; rxq < CONFIG_MV_ETH_RXQ; rxq++) {
+			mv_eth_rx_ptks_coal_set(pp->port, rxq, cmd->rx_max_coalesced_frames);
+			mv_eth_rx_time_coal_set(pp->port, rxq, cmd->rx_coalesce_usecs);
+		}
 
 	pp->rx_time_coal_cfg = cmd->rx_coalesce_usecs;
 	pp->rx_pkts_coal_cfg = cmd->rx_max_coalesced_frames;
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 6ad95ab..5434c56 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -226,15 +226,25 @@ static void mv_eth_adaptive_rx_update(struct eth_port *pp)
 		int i;
 		unsigned long rate = pp->rx_rate_pkts * HZ / period;
 
-		if (rate < pp->pkt_rate_low_cfg)
-			for (i = 0; i < CONFIG_MV_ETH_RXQ; i++)
-				mv_eth_rx_time_coal_set(pp->port, i, pp->rx_time_low_coal_cfg);
-		else if (rate > pp->pkt_rate_high_cfg)
-			for (i = 0; i < CONFIG_MV_ETH_RXQ; i++)
-				mv_eth_rx_time_coal_set(pp->port, i, pp->rx_time_high_coal_cfg);
-		else
-			for (i = 0; i < CONFIG_MV_ETH_RXQ; i++)
-				mv_eth_rx_time_coal_set(pp->port, i, pp->rx_time_coal_cfg);
+		if (rate < pp->pkt_rate_low_cfg) {
+			if (pp->rate_current != 1) {
+				pp->rate_current = 1;
+				for (i = 0; i < CONFIG_MV_ETH_RXQ; i++)
+					mv_eth_rx_time_coal_set(pp->port, i, pp->rx_time_low_coal_cfg);
+			}
+		} else if (rate > pp->pkt_rate_high_cfg) {
+			if (pp->rate_current != 3) {
+				pp->rate_current = 3;
+				for (i = 0; i < CONFIG_MV_ETH_RXQ; i++)
+					mv_eth_rx_time_coal_set(pp->port, i, pp->rx_time_high_coal_cfg);
+			}
+		} else {
+			if (pp->rate_current != 2) {
+				pp->rate_current = 2;
+				for (i = 0; i < CONFIG_MV_ETH_RXQ; i++)
+					mv_eth_rx_time_coal_set(pp->port, i, pp->rx_time_coal_cfg);
+			}
+		}
 
 		pp->rx_rate_pkts = 0;
 		pp->rx_timestamp = jiffies;
@@ -3756,9 +3766,10 @@ int mv_eth_hal_init(struct eth_port *pp)
 	pp->tx_pkts_coal_cfg = mv_ctrl_txdone;
 	pp->rx_time_low_coal_cfg = CONFIG_MV_ETH_RX_COAL_USEC >> 2;
 	pp->rx_time_high_coal_cfg = CONFIG_MV_ETH_RX_COAL_USEC << 2;
-	pp->pkt_rate_low_cfg = 50;
-	pp->pkt_rate_high_cfg = 10000;
-	pp->rate_sample_cfg = 1;
+	pp->pkt_rate_low_cfg = 1000;
+	pp->pkt_rate_high_cfg = 50000;
+	pp->rate_sample_cfg = 5;
+	pp->rate_current = 0; /* Unknown */
 
 	return 0;
 oom:
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index 9dd7b31..9d47384 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -377,6 +377,7 @@ struct eth_port {
 	__u32		    rx_time_high_coal_cfg;
 	__u32		    pkt_rate_low_cfg;
 	__u32		    pkt_rate_high_cfg;
+	__u32		    rate_current; /* unknown (0), low (1), normal (2), high (3) */
 	__u32		    rate_sample_cfg;
 	__u32		    rx_adaptive_coal_cfg;
 	/* Rate calculate */
-- 
1.7.5.4

