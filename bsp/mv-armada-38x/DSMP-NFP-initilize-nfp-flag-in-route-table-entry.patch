From e21fe569f222124d36d7d8956496d8e27576ec7a Mon Sep 17 00:00:00 2001
From: Tawfik Bayouk <tawfik@marvell.com>
Date: Tue, 21 Aug 2012 17:33:14 +0300
Subject: [PATCH 0044/1825] DSMP NFP initilize nfp flag in route table entry

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit b7d38bce7adc9228a81d4c3ebbaee857433844ac

Change-Id: I9f454beff0eac1de72e6dde8236cb1b87b9923eb
Signed-off-by: Tawfik Bayouk <tawfik@marvell.com>
Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 net/ipv4/route.c |   22 ++++++++++++++++++----
 net/ipv6/route.c |    4 ++++
 2 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/net/ipv4/route.c b/net/ipv4/route.c
index c24d747..1b79238 100644
--- a/net/ipv4/route.c
+++ b/net/ipv4/route.c
@@ -839,9 +839,9 @@ void nfp_fib_sync(void)
 		rth = rt_hash_table[i].chain;
 		if (!rth)
 			continue;
+		rth->nfp = false;
 
 		spin_lock_bh(rt_hash_lock_addr(i));
-		rth = rt_hash_table[i].chain;
 
 		/* defer releasing the head of the list after spin_unlock */
 		for (tail = rth; tail; tail = tail->dst.rt_next)
@@ -862,6 +862,7 @@ void nfp_fib_sync(void)
 		spin_unlock_bh(rt_hash_lock_addr(i));
 
 		for (; rth != tail; rth = next) {
+			rth->nfp = false;
 			next = rth->dst.rt_next;
 			if (!(rth->rt_flags & (RTCF_MULTICAST | RTCF_BROADCAST | RTCF_LOCAL | RTCF_REJECT))) {
 				if (!nfp_hook_fib_rule_add(AF_INET, (u8*)(&rth->rt_src), (u8*)(&rth->rt_dst),
@@ -2115,7 +2116,9 @@ static int ip_route_input_mc(struct sk_buff *skb, __be32 daddr, __be32 saddr,
 			   IN_DEV_CONF_GET(in_dev, NOPOLICY), false);
 	if (!rth)
 		goto e_nobufs;
-
+#if defined(CONFIG_MV_ETH_NFP_FIB_LEARN)
+	rth->nfp = false;
+#endif
 #ifdef CONFIG_IP_ROUTE_CLASSID
 	rth->dst.tclassid = itag;
 #endif
@@ -2249,6 +2252,9 @@ static int __mkroute_input(struct sk_buff *skb,
 		err = -ENOBUFS;
 		goto cleanup;
 	}
+#if defined(CONFIG_MV_ETH_NFP_FIB_LEARN)
+	rth->nfp = false;
+#endif
 
 	rth->rt_key_dst	= daddr;
 	rth->rt_key_src	= saddr;
@@ -2433,7 +2439,9 @@ local_input:
 			   IN_DEV_CONF_GET(in_dev, NOPOLICY), false);
 	if (!rth)
 		goto e_nobufs;
-
+#if defined(CONFIG_MV_ETH_NFP_FIB_LEARN)
+	rth->nfp = false;
+#endif
 	rth->dst.input= ip_local_deliver;
 	rth->dst.output= ip_rt_bug;
 #ifdef CONFIG_IP_ROUTE_CLASSID
@@ -2645,6 +2653,10 @@ static struct rtable *__mkroute_output(const struct fib_result *res,
 	if (!rth)
 		return ERR_PTR(-ENOBUFS);
 
+#if defined(CONFIG_MV_ETH_NFP_FIB_LEARN)
+	rth->nfp = false;
+#endif
+
 	rth->dst.output = ip_output;
 
 	rth->rt_key_dst	= orig_daddr;
@@ -2983,7 +2995,9 @@ struct dst_entry *ipv4_blackhole_route(struct net *net, struct dst_entry *dst_or
 		new->dev = ort->dst.dev;
 		if (new->dev)
 			dev_hold(new->dev);
-
+#if defined(CONFIG_MV_ETH_NFP_FIB_LEARN)
+		rt->nfp = false;
+#endif
 		rt->rt_key_dst = ort->rt_key_dst;
 		rt->rt_key_src = ort->rt_key_src;
 		rt->rt_key_tos = ort->rt_key_tos;
diff --git a/net/ipv6/route.c b/net/ipv6/route.c
index ca2deaa..3cfdd55 100644
--- a/net/ipv6/route.c
+++ b/net/ipv6/route.c
@@ -269,6 +269,10 @@ static inline struct rt6_info *ip6_dst_alloc(struct dst_ops *ops,
 		memset(&rt->rt6i_table, 0,
 		       sizeof(*rt) - sizeof(struct dst_entry));
 
+#if defined(CONFIG_MV_ETH_NFP_FIB_LEARN)
+	rt->nfp = false;
+#endif
+
 	return rt;
 }
 
-- 
1.7.5.4

