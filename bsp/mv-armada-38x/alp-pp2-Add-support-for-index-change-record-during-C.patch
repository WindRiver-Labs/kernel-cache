From 5848a485954ebb21f3d37e2510ae79d0ea732c18 Mon Sep 17 00:00:00 2001
From: Jing Hua <jinghua@marvell.com>
Date: Mon, 10 Mar 2014 11:46:09 +0800
Subject: [PATCH 1497/1825] alp: pp2: Add support for index change record
 during Cukoo Search of C3 engine

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 40a9cf5c61f706d2420ebefb5785c5285f498777

        Add support for recording index change when performing Cuckoo Search C3 engine entry add.

Signed-off-by: Jing Hua <jinghua@marvell.com>

Change-Id: I58d4b8c4739db521e18d7c8416328e35d06826c8
Reviewed-on: http://vgitil04.il.marvell.com:8080/6276
Reviewed-by: Yelena Krivosheev <yelena@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/cls/cls3_sysfs.c         |    2 +-
 arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.c  |   17 +++++++++++++----
 arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.h  |    8 +++++++-
 arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.c   |    2 +-
 arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.h   |    1 +
 5 files changed, 23 insertions(+), 7 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/cls/cls3_sysfs.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/cls/cls3_sysfs.c
index 7bd7f4c..02294c6 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/cls/cls3_sysfs.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/cls/cls3_sysfs.c
@@ -165,7 +165,7 @@ static ssize_t mv_cls3_store(struct device *dev,
 	if (!strcmp(name, "hw_read"))
 		mvPp2ClsC3HwRead(&c3, a);
 	else if (!strcmp(name, "hw_query_add"))
-		mvPp2ClsC3HwQueryAdd(&c3, a);
+		mvPp2ClsC3HwQueryAdd(&c3, a, NULL);
 	else if (!strcmp(name, "hw_add"))
 		mvPp2ClsC3HwAdd(&c3, a, b);
 	else if (!strcmp(name, "hw_ms_add"))/*PPv2.1 new feature MAS 3.12*/
diff --git a/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.c b/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.c
index d44343a..d3948ec 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.c
@@ -381,7 +381,7 @@ void mvPp2ClsC3HwInitCtrSet(int cntVal)
 
 /*-------------------------------------------------------------------------------*/
 
-static int mvPp2ClsC3HwQueryAddRelocate(int new_idx, int max_depth, int cur_depth)
+static int mvPp2ClsC3HwQueryAddRelocate(int new_idx, int max_depth, int cur_depth, MV_PP2_CLS3_HASH_PAIR *hash_pair_arr)
 {
 	int status, index_free, idx = 0;
 	unsigned char occupied_bmp;
@@ -433,7 +433,8 @@ static int mvPp2ClsC3HwQueryAddRelocate(int new_idx, int max_depth, int cur_dept
 			if (usedIndex[idx] == 0)
 				continue;
 
-			if (mvPp2ClsC3HwQueryAddRelocate(usedIndex[idx], max_depth, cur_depth+1) == MV_OK)
+			if (mvPp2ClsC3HwQueryAddRelocate(usedIndex[idx], max_depth,
+							cur_depth+1, hash_pair_arr) == MV_OK)
 				break;
 		}
 
@@ -451,6 +452,13 @@ static int mvPp2ClsC3HwQueryAddRelocate(int new_idx, int max_depth, int cur_dept
 	/*We do not chage extension tabe*/
 	status = mvPp2ClsC3HwAdd(&local_c3, index_free, local_c3.ext_index);
 
+	/* update the hash pair */
+	if (hash_pair_arr != NULL) {
+		hash_pair_arr->old_idx[hash_pair_arr->pair_num] = new_idx;
+		hash_pair_arr->new_idx[hash_pair_arr->pair_num] = index_free;
+		hash_pair_arr->pair_num++;
+	}
+
 	if (status != MV_OK) {
 		mvOsPrintf("%s:Error - mvPp2ClsC3HwAdd failed, depth = %d\\n", __func__, cur_depth);
 		return status;
@@ -463,7 +471,7 @@ static int mvPp2ClsC3HwQueryAddRelocate(int new_idx, int max_depth, int cur_dept
 
 
 /*-------------------------------------------------------------------------------*/
-int mvPp2ClsC3HwQueryAdd(MV_PP2_CLS_C3_ENTRY *c3, int max_search_depth)
+int mvPp2ClsC3HwQueryAdd(MV_PP2_CLS_C3_ENTRY *c3, int max_search_depth, MV_PP2_CLS3_HASH_PAIR *hash_pair_arr)
 {
 	int usedIndex[MV_PP2_CLS3_HASH_BANKS_NUM] = {0};
 	unsigned char occupied_bmp;
@@ -497,7 +505,8 @@ int mvPp2ClsC3HwQueryAdd(MV_PP2_CLS_C3_ENTRY *c3, int max_search_depth)
 			if (mvPp2ClsC3IsReservedIndex(usedIndex[idx]))
 				continue;
 
-			if (mvPp2ClsC3HwQueryAddRelocate(usedIndex[idx], max_search_depth, 0 /*curren depth*/) == MV_OK)
+			if (mvPp2ClsC3HwQueryAddRelocate(usedIndex[idx], max_search_depth,
+							0 /*curren depth*/, hash_pair_arr) == MV_OK)
 				break;
 		}
 
diff --git a/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.h b/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.h
index debc164..332afd3 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2Cls3Hw.h
@@ -396,7 +396,13 @@ typedef struct {
 #define MV_PP2_CLS_C3_HEK_WORDS				(3)
 #define MV_PP2_CLS_C3_HEK_BYTES				12 /* size in bytes */
 #define MV_PP2_CLS_C3_BANK_SIZE				(512)
+#define MV_PP2_CLS_C3_MAX_SEARCH_DEPTH			(16)
 
+typedef struct mvPp2Cls3HashPair {
+	unsigned short	pair_num;
+	unsigned short	old_idx[MV_PP2_CLS_C3_MAX_SEARCH_DEPTH];
+	unsigned short	new_idx[MV_PP2_CLS_C3_MAX_SEARCH_DEPTH];
+} MV_PP2_CLS3_HASH_PAIR;
 
 typedef struct mvPp2ClsC3Entry {
 	unsigned int 	index;
@@ -449,7 +455,7 @@ int mvPp2ClsC3SwDump(MV_PP2_CLS_C3_ENTRY *c3);
 void mvPp2ClsC3SwClear(MV_PP2_CLS_C3_ENTRY *c3);
 void mvPp2ClsC3HwInitCtrSet(int cntVal);
 int mvPp2ClsC3HwQuery(MV_PP2_CLS_C3_ENTRY *c3, unsigned char *occupied_bmp, int index[]);
-int mvPp2ClsC3HwQueryAdd(MV_PP2_CLS_C3_ENTRY *c3, int max_search_depth);
+int mvPp2ClsC3HwQueryAdd(MV_PP2_CLS_C3_ENTRY *c3, int max_search_depth, MV_PP2_CLS3_HASH_PAIR *hash_pair_arr);
 
 int mvPp2ClsC3HwMissRead(MV_PP2_CLS_C3_ENTRY *c3, int lkp_type);
 int mvPp2ClsC3HwMissDump(void);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.c b/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.c
index 89ecd6e..c00dc57 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.c
@@ -1124,7 +1124,7 @@ static int mvPp2V1ClsHwFlowHitGet(int index,  unsigned int *cnt)
 }
 /*-------------------------------------------------------------------------------*/
 
-static int mvPp2V1ClsHwLkpHitGet(int lkpid, int way,  unsigned int *cnt)
+int mvPp2V1ClsHwLkpHitGet(int lkpid, int way,  unsigned int *cnt)
 {
 
 	BIT_RANGE_VALIDATE(way);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.h b/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.h
index c1f3eae..0c0933b 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/cls/mvPp2ClsHw.h
@@ -472,6 +472,7 @@ int mvPp2ClsHwFlowWrite(int index, MV_PP2_CLS_FLOW_ENTRY *fe);
 int mvPp2ClsHwFlowRead(int index, MV_PP2_CLS_FLOW_ENTRY *fe);
 int mvPp2ClsHwFlowClear(int index);
 int mvPp2ClsSwFlowDump(MV_PP2_CLS_FLOW_ENTRY *fe);
+int mvPp2V1ClsHwLkpHitGet(int lkpid, int way,  unsigned int *cnt);
 int mvPp2ClsHwFlowDump(void);
 int mvPp2V1ClsHwFlowHitsDump(void);
 void mvPp2ClsSwFlowClear(MV_PP2_CLS_FLOW_ENTRY *fe);
-- 
1.7.5.4

