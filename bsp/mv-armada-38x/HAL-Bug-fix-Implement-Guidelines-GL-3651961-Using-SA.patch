From 586ec2d1cb12379af4921599fb9289a8983f979c Mon Sep 17 00:00:00 2001
From: Eli Nidam <elini@marvell.com>
Date: Thu, 13 Jun 2013 16:38:19 +0300
Subject: [PATCH 0717/1825] HAL: Bug fix - Implement Guidelines GL-3651961
 Using SATA II 3.0 Gbps Host with 1.5 Gbps Device

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 4288166ee5d7beaebeaf25d6ee590fc72a1c7cd2

	When the SATA II host is configured for 3.0 Gbps operation and connects to a device
	configures for 1.5 Gbps operation, occasionally it might fail to negotiate the link speed.
	In such a case, the host may wrongly try to establish a 3.0 Gbps link speed connection.
	This results in a situation where the operating system does not recognize that the device is present
	This WA force SATA to change speed to 1.5 Gbps.

Change-Id: Ia01ad07b3d15a89cd33a62d52b6d2c6837c16946
Signed-off-by: Eli Nidam <elini@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2240
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../plat-armada/mv_hal/sata/CoreDriver/mvSata.c    |   46 ++++++++++++++------
 1 files changed, 32 insertions(+), 14 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.c b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.c
index 4ea7b49..60274bb 100755
--- a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.c
+++ b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.c
@@ -5283,30 +5283,48 @@ MV_BOOLEAN mvSataIsStorageDeviceConnected(MV_SATA_ADAPTER *pAdapter, MV_U8 chann
 			break;
 		}
 	case MV_PHY_DET_STATE_DEVICE_AND_PHY_COM:
+		/*for Avanta LP 6660 check HD type GEN1 or GEN2*/
 		if ((pAdapter->chipIs66XXX0 == MV_TRUE) ||
-			(pAdapter->chipIs672XX0 == MV_TRUE)) {
-			/* for Avanta LP 6660 check HD GEN1 or GEN2 */
+#ifdef ERRATA_GL_3651961
+    /* Using SATA II 3.0 Gbps Host with 1.5 Gbps Device */
+		    (pAdapter->chipIs62X1Z0 == MV_TRUE) ||
+#endif
+		    (pAdapter->chipIs672XX0 == MV_TRUE)) {
 			det = (MV_REG_READ_DWORD(pAdapter->adapterIoBaseAddress, SStatusOffset) & 0xf0)>>4;
 			if ((det == 1) && (pAdapter->sataAdapterGeneration >= MV_SATA_GEN_II)) {
-				/* HD deteced to GEN1 set SATA speed configuration from GEN2 to GEN1 */
+				/* HD deteced to GEN1 --> set SATA speed configuration from GEN2 to GEN1 */
 				MV_U32 regVal;
 				mvOsSemTake(&pAdapter->semaphore);
 				regVal = MV_REG_READ_DWORD(pAdapter->adapterIoBaseAddress,
-								getEdmaRegOffset(channelIndex) +
-								MV_SATA_II_SATA_CONFIG_REG_OFFSET);
-				regVal &= ~MV_BIT7;	/* Disable GEn II */
-				MV_REG_WRITE_DWORD(pAdapter->adapterIoBaseAddress, getEdmaRegOffset(channelIndex) +
-							MV_SATA_II_SATA_CONFIG_REG_OFFSET, regVal);
-
-				SStatusOffset = pAdapter->adapterIoBaseAddress & 0xff000000; /* get base address */
-				det = MV_REG_READ_DWORD(SStatusOffset, COMMON_PHY_CONFIGURATION1_REG_OFFSET);
-				det &= ~(0xFF << 22); /* set SERDES lan2 configuration to GEN1  */
-				MV_REG_WRITE_DWORD(SStatusOffset, COMMON_PHY_CONFIGURATION1_REG_OFFSET, det);
+							getEdmaRegOffset(channelIndex) +
+							MV_SATA_II_SATA_CONFIG_REG_OFFSET);
+				regVal &= ~MV_BIT7;		/* Disable GEn II */
+				MV_REG_WRITE_DWORD(pAdapter->adapterIoBaseAddress,
+						getEdmaRegOffset(channelIndex) +
+						MV_SATA_II_SATA_CONFIG_REG_OFFSET,
+						regVal);
+				if ((pAdapter->chipIs66XXX0 == MV_TRUE) ||
+					(pAdapter->chipIs672XX0 == MV_TRUE)) {
+					/* SStatusOffset get base address */
+					SStatusOffset = pAdapter->adapterIoBaseAddress & 0xff000000;
+					det = MV_REG_READ_DWORD(SStatusOffset, COMMON_PHY_CONFIGURATION1_REG_OFFSET);
+					det &= ~(0xFF << 22); /* set SERDES lan2 configuration to GEN1  */
+					MV_REG_WRITE_DWORD(SStatusOffset, COMMON_PHY_CONFIGURATION1_REG_OFFSET, det);
+				}
+				if (pAdapter->chipIs62X1Z0 == MV_TRUE) {
+					det = MV_REG_READ_DWORD(pAdapter->adapterIoBaseAddress,
+							getEdmaRegOffset(channelIndex) +
+							MV_SATA_II_LP_EXT_CTRL_REG_OFFSET);
+					det &= ~(0x1fe0); /* set PIN_PHY_GEN_RX/TX to GEN1  */
+					MV_REG_WRITE_DWORD(pAdapter->adapterIoBaseAddress,
+							   getEdmaRegOffset(channelIndex) +
+							   MV_SATA_II_LP_EXT_CTRL_REG_OFFSET,
+							   det);
+				}
 				_channelHardReset(pAdapter, channelIndex);
 				/* If interface is already active, then device detection is needed */
 				if (pAdapter->staggaredSpinup[channelIndex] == MV_TRUE)
 					_establishSataComm(pAdapter, channelIndex);
-
 				mvOsSemRelease(&pAdapter->semaphore);
 			}
 		}
-- 
1.7.5.4

