From 4ca58ec6a40bd362f221f21fa1b53501db3488e3 Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Thu, 14 Mar 2013 16:23:46 +0200
Subject: [PATCH 0557/1825] PPv2: QD Switch: bug fixes, EDSA support, cleanups

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 108891feec577bd8b674be7a351185a8974dc212

Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Change-Id: If3fdd62030e9001754c9f711e4202adb59db26a3
Reviewed-on: http://vgitil04.il.marvell.com:8080/1341
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c     |    9 +++++++--
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h     |    4 ++--
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h |    2 +-
 3 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
index 9edef4f..ee48e59 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
@@ -206,6 +206,7 @@ function sets default values to the NETA port.
 *******************************************************************************/
 MV_STATUS mvPp2DefaultsSet(int port)
 {
+	MV_U32 regVal;
 	int txp, queue, txPortNum, i;
 	MV_PP2_PORT_CTRL *pPortCtrl = mvPp2PortHndlGet(port);
 
@@ -218,10 +219,14 @@ MV_STATUS mvPp2DefaultsSet(int port)
 		mvPp2WrReg(MV_PP2_TXP_SCHED_CMD_1_REG, 0);
 		/* Close bandwidth for all queues */
 		for (queue = 0; queue < MV_ETH_MAX_TXQ; queue++)
-			mvPp2WrReg(MV_PP2_TXQ_SCHED_TOKEN_CNTR_REG(MV_PPV2_TXQ_PHYS(port, txp, queue)),  0);
+			mvPp2WrReg(MV_PP2_TXQ_SCHED_TOKEN_CNTR_REG(MV_PPV2_TXQ_PHYS(port, txp, queue)), 0);
 
 		/* Set basic period to  1 usec */
-		mvPp2WrReg(MV_PP2_TXP_SCHED_REFILL_REG,  mvPp2HalData.tClk / 1000000);
+		regVal = mvPp2RdReg(MV_PP2_TXP_SCHED_REFILL_REG);
+		regVal &= ~MV_PP2_TXP_REFILL_PERIOD_ALL_MASK;
+		regVal |= MV_PP2_TXP_REFILL_PERIOD_MASK(1);
+		mvPp2WrReg(MV_PP2_TXP_SCHED_REFILL_REG, regVal);
+		mvPp2WrReg(MV_PP2_TXP_SCHED_PERIOD_REG, mvPp2HalData.tClk / 1000000);
 	}
 
 	/* Enable Rx cache snoop */
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
index c72cac6..1ed1c68 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
@@ -451,11 +451,11 @@ static INLINE MV_U32 mvPp2GbeIsrCauseRxTxGet(int port)
 	if (MV_PON_PORT(port)) {
 		val = mvPp2RdReg(MV_PP2_ISR_PON_RX_TX_CAUSE_REG);
 		val &= (MV_PP2_PON_CAUSE_RXQ_OCCUP_DESC_ALL_MASK |
-			MV_PP2_PON_CAUSE_TXP_OCCUP_DESC_ALL_MASK | MV_PP2_PON_CAUSE_MISC_ERR_SUM_MASK);
+			MV_PP2_PON_CAUSE_TXP_OCCUP_DESC_ALL_MASK | MV_PP2_PON_CAUSE_MISC_SUM_MASK);
 	} else {
 		val = mvPp2RdReg(MV_PP2_ISR_RX_TX_CAUSE_REG(MV_PPV2_PORT_PHYS(port)));
 		val &= (MV_PP2_CAUSE_RXQ_OCCUP_DESC_ALL_MASK |
-			MV_PP2_CAUSE_TXQ_OCCUP_DESC_ALL_MASK | MV_PP2_CAUSE_MISC_ERR_SUM_MASK);
+			MV_PP2_CAUSE_TXQ_OCCUP_DESC_ALL_MASK | MV_PP2_CAUSE_MISC_SUM_MASK);
 	}
 
 	return val;
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
index c7acc08..4afe0f1 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
@@ -103,7 +103,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define MV_PP2_SNOOP_PKT_SIZE_OFFS		5
 #define MV_PP2_SNOOP_PKT_SIZE_MASK		(0x1FF << MV_PP2_SNOOP_PKT_SIZE_OFFS)
 
-#define MV_PP2_SNOOP_BUF_HDR_OFFS		6
+#define MV_PP2_SNOOP_BUF_HDR_OFFS		14
 #define MV_PP2_SNOOP_BUF_HDR_MASK		(0x1 << MV_PP2_SNOOP_BUF_HDR_OFFS)
 
 #define MV_PP2_L2_DEPOSIT_PKT_SIZE_OFFS		21
-- 
1.7.5.4

