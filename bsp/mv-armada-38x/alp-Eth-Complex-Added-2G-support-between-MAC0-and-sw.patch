From 6a827a486dd00b90180c74daa6ba1d011599ea73 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Sun, 21 Jul 2013 13:10:32 +0300
Subject: [PATCH 0878/1825] alp: Eth Complex: Added 2G support between MAC0
 and switch port 6

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 67704ea358a28f1506a404cf8fe9a22aab856ab0

	- Added board configuration field to indicate requested speed
	  (MV_CONFIG_MAC0_SW_SPEED, DIP Switch SW6, BIT 7: 0=2G , 1=1G)
  	- Added Eth_Complex config MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G
	- Aligned defines to use MV_BOARD_MAC_SPEED instead of MV_ETH_PORT_SPEED
	- Added 2G speed settings to Eth Complex (mvEthComplexPortDpClkSrcSet(port, 0x0))

Change-Id: I6f561c0d1dd740f80ff5aada22142c70cc320186
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2734
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   26 ++++++++++++-------
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    1 +
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |    1 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    2 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c    |   20 ++++++++-------
 5 files changed, 31 insertions(+), 19 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index eb72dba..6d24e10 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -880,9 +880,12 @@ MV_VOID mvBoardInfoUpdate(MV_VOID)
 		smiAddress = 0x0;
 	else if (ethComplex & MV_ETHCOMP_GE_MAC0_2_RGMII0)
 		smiAddress = 0x4;
-	else {
-		smiAddress = -1; /* no SMI address if connected to switch */
-		macSpeed = BOARD_MAC_SPEED_1000M;
+	else {				/* else MAC0 is connected to SW port 6 */
+		smiAddress = -1;	/* no SMI address if connected to switch */
+		if (ethComplex & MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G)
+			macSpeed = BOARD_MAC_SPEED_2000M;
+		else
+			macSpeed = BOARD_MAC_SPEED_1000M;
 	}
 	mvBoardPhyAddrSet(0, smiAddress);
 	mvBoardMacSpeedSet(0, macSpeed);
@@ -1011,6 +1014,10 @@ MV_STATUS mvBoardEthComplexInfoUpdate(MV_VOID)
 	}
 	ethComplexOptions |= mac0Config | mac1Config;
 
+	/* read if using 2G speed for MAC0 to Switch*/
+	if (mvCtrlSysConfigGet(MV_CONFIG_MAC0_SW_SPEED) == 0x0)
+		ethComplexOptions |= MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G;
+
 	/* if MAC1 is NOT connected to PON SerDes --> connect PON MAC to to PON SerDes */
 	if ((ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES) == MV_FALSE)
 		ethComplexOptions |= MV_ETHCOMP_P2P_MAC_2_PON_ETH_SERDES;
@@ -1705,16 +1712,15 @@ MV_VOID mvBoardConfigurationPrint(MV_VOID)
 
 
 	/* Switch Module */
-	if ((ethConfig & MV_ETHCOMP_GE_MAC0_2_SW_P6) &&
-		!(ethConfig & MV_ETHCOMP_GE_MAC1_2_SW_P4))
-		mvOsOutput("       Ethernet Switch port 6 on MAC0 [Default]\n");
+	if (ethConfig & MV_ETHCOMP_GE_MAC0_2_SW_P6)
+		mvOsOutput("       Ethernet Switch port 6 on MAC0, %s Speed [Default]\n"
+				, mvBoardMacSpeedGet(0) == BOARD_MAC_SPEED_2000M ? "2G" : "1G");
 	else if ((ethConfig & MV_ETHCOMP_GE_MAC1_2_SW_P4) &&
 		!(ethConfig & MV_ETHCOMP_GE_MAC0_2_SW_P6))
-		mvOsOutput("       Ethernet Switch port 4 on MAC1 [Default]\n");
-	else if ((ethConfig & MV_ETHCOMP_GE_MAC0_2_SW_P6) &&
+		mvOsOutput("       Ethernet Switch port 4 on MAC1, 1G Speed [Default]\n");
+	if ((ethConfig & MV_ETHCOMP_GE_MAC0_2_SW_P6) &&
 		(ethConfig & MV_ETHCOMP_GE_MAC1_2_SW_P4)) {
-		mvOsOutput("       Ethernet Switch port 6 on MAC0 [Default]\n");
-		mvOsOutput("       Ethernet Switch port 4 on MAC1\n");
+		mvOsOutput("       Ethernet Switch port 4 on MAC1, 1G Speed\n");
 	}
 
 	/* RGMII */
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index 743985c..1079749 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -224,6 +224,7 @@ typedef enum _boardMacSpeed {
 	BOARD_MAC_SPEED_10M,
 	BOARD_MAC_SPEED_100M,
 	BOARD_MAC_SPEED_1000M,
+	BOARD_MAC_SPEED_2000M,
 	BOARD_MAC_SPEED_AUTO
 } MV_BOARD_MAC_SPEED;
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 83178dc..828a552 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -109,6 +109,7 @@ MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[] = {
 	{ MV_CONFIG_LANE1,	       0x18,	3,	 0,		1,	{ 0, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [2:3] */
 	{ MV_CONFIG_LANE2,	       0x20,	5,	 0,		1,	{ 0, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [4]   */
 	{ MV_CONFIG_LANE3,	       0X40,	6,	 0,		1,	{ 0, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [5:6] */
+	{ MV_CONFIG_MAC0_SW_SPEED,     0X80,	7,	 0,		1,	{ 0, 1, 0, 1 } }, /* Exp#0, Reg#1, BITS [5:6] */
 	{ MV_CONFIG_DEVICE_BUS_MODULE, 0x3,	0,	 1,		0,	{ 0, 0, 0, 1 } }, /* Exp#1, Reg#0, BITS [0:1] */
 };
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index 0a4af2e..daad4a9 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -115,6 +115,7 @@ typedef enum _mvConfigTypeID {
 	MV_CONFIG_LANE1,
 	MV_CONFIG_LANE2,
 	MV_CONFIG_LANE3,
+	MV_CONFIG_MAC0_SW_SPEED,
 	MV_CONFIG_DEVICE_BUS_MODULE,
 	MV_CONFIG_SLIC_TDM_DEVICE,
 	MV_CONFIG_TYPE_MAX_OPTION
@@ -199,6 +200,7 @@ typedef enum {
 	MV_ETHCOMP_GE_MAC1_2_RGMII1		=	BIT14,
 	MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES	=	BIT15,
 	MV_ETHCOMP_P2P_MAC_2_PON_ETH_SERDES	=	BIT16,
+	MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G	=	BIT17,
 } MV_ETH_COMPLEX_TOPOLOGY;
 
 typedef enum {
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
index ab6908d..e53f9b0 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
@@ -166,11 +166,11 @@ static void mvEthComplexGbePortSrcSet(MV_U32 port, MV_U32 src)
 /*
  * Set speed Gbe Port 0 when it is connected to switch port 6
  */
-static void mvEthComplexGbeToSwitchSpeedSet(MV_ETH_PORT_SPEED speed)
+static void mvEthComplexGbeToSwitchSpeedSet(MV_BOARD_MAC_SPEED speed)
 {
 	MV_U32 reg;
 
-	if (speed != MV_ETH_SPEED_1000 && speed != MV_ETH_SPEED_2000) {
+	if (speed != BOARD_MAC_SPEED_1000M && speed != BOARD_MAC_SPEED_2000M) {
 		mvOsPrintf("%s: wrong speed (%d)\n", __func__, speed);
 		return;
 	}
@@ -178,12 +178,12 @@ static void mvEthComplexGbeToSwitchSpeedSet(MV_ETH_PORT_SPEED speed)
 	reg = MV_REG_READ(MV_ETHCOMP_CTRL_REG);
 	reg &= ~ETHCC_GE_MAC0_SW_PORT_6_SPEED_MASK;
 
-	if (speed == MV_ETH_SPEED_2000)
+	if (speed == BOARD_MAC_SPEED_2000M)
 		reg |= (0x1 << ETHCC_GE_MAC0_SW_PORT_6_SPEED_OFFSET);
 
 	MV_REG_WRITE(MV_ETHCOMP_CTRL_REG, reg);
 
-	if (speed == MV_ETH_SPEED_2000) {
+	if (speed == BOARD_MAC_SPEED_2000M) {
 		reg = MV_REG_READ(MV_ETHCOMP_SW_CONFIG_RESET_CTRL);
 		reg &= ~ETHSCRC_PORT_2G_SELECT_MASK;
 		reg |= (0x1 << ETHSCRC_PORT_2G_SELECT_OFFSET);
@@ -305,7 +305,7 @@ static void mvEthComplexGbePhyResetSet(MV_BOOL setReset)
 }
 
 static void mvEthComplexMacToSwPort(MV_U32 port, MV_U32 swPort,
-				    MV_ETH_PORT_SPEED speed)
+				   MV_BOARD_MAC_SPEED speed)
 {
 	MV_U32 src;
 
@@ -316,9 +316,11 @@ static void mvEthComplexMacToSwPort(MV_U32 port, MV_U32 swPort,
 	mvEthComplexSwPortSrcSet(swPort, src);
 	mvEthComplexGbePortSrcSet(port, 0x1);
 
-	if (port == 0 && swPort == 6)
+	/* GE MAC #0 - Switch Port6 2G Speed */
+	if (port == 0 && swPort == 6 && speed == BOARD_MAC_SPEED_2000M) {
 		mvEthComplexGbeToSwitchSpeedSet(speed);
-	else
+		mvEthComplexPortDpClkSrcSet(port, 0x0);
+	} else
 		mvEthComplexPortDpClkSrcSet(port, 0x1);
 }
 
@@ -378,7 +380,7 @@ MV_STATUS mvEthComplexInit(MV_U32 ethCompConfig)
 	mvEthComplexGopDevEnable();
 
 	if (c & MV_ETHCOMP_GE_MAC0_2_SW_P6)
-		mvEthComplexMacToSwPort(0, 6, MV_ETH_SPEED_1000);
+		mvEthComplexMacToSwPort(0, 6, mvBoardMacSpeedGet(0));
 
 	if (c & MV_ETHCOMP_GE_MAC0_2_GE_PHY_P0)
 		mvEthComplexMacToGbePhy(0, 0, mvBoardPhyAddrGet(0));
@@ -396,7 +398,7 @@ MV_STATUS mvEthComplexInit(MV_U32 ethCompConfig)
 		mvEthComplexMacToComPhy(0, 3);
 
 	if (c & MV_ETHCOMP_GE_MAC1_2_SW_P4)
-		mvEthComplexMacToSwPort(1, 4, MV_ETH_SPEED_1000);
+		mvEthComplexMacToSwPort(1, 4, mvBoardMacSpeedGet(1));
 
 	if (c & MV_ETHCOMP_GE_MAC1_2_GE_PHY_P3)
 		mvEthComplexMacToGbePhy(1, 3, mvBoardPhyAddrGet(1));
-- 
1.7.5.4

