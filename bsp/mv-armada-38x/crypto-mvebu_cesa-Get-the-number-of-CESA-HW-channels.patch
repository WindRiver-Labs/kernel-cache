From 7d43f738d0a4db718cbca581dde97748310ca656 Mon Sep 17 00:00:00 2001
From: Nadav Haklai <nadavh@marvell.com>
Date: Wed, 19 Mar 2014 16:51:59 +0200
Subject: [PATCH 1504/1825] crypto: mvebu_cesa: Get the number of CESA HW
 channels by parsing dts

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 66516c90043eac712be38b2ce254bf487ce69def

	- use mv_cesa_channels, which is initialized during driver probe by
	  populating FDT instead of using MV_CESA_CHANNELS, which was
	  earlier defined with Kconfig option
	- all table declarations still uses MV_CESA_CHANNELS, which is now
	  hard-coded for max available CESA channels (the size table
	  declaration is required at compile time and cannot be parsed from
	  dts). This will allow to re-use code for boards which support 1 or 2
	  CESA channels
	- for backward compatibility, all changes in HAL are #ifdef'ed

Change-Id: I49ca59cd05d89979d5ef225c928430f703be4b9a
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
Signed-off-by: Nadav Haklai <nadavh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6556
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/cesa/mvCesa.c      |   19 ++++++++++++++++++-
 arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c |   16 ++++++++++++++++
 2 files changed, 34 insertions(+), 1 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/cesa/mvCesa.c b/arch/arm/plat-armada/mv_hal/cesa/mvCesa.c
index a77fb01..eae8b37 100644
--- a/arch/arm/plat-armada/mv_hal/cesa/mvCesa.c
+++ b/arch/arm/plat-armada/mv_hal/cesa/mvCesa.c
@@ -254,7 +254,12 @@ MV_STATUS mvCesaHalInit(int numOfSession, int queueDepth, void *osHandle, MV_CES
 	cesaOsHandle = osHandle;
 	sha2CmdVal = 0;
 
+#ifdef CONFIG_OF
+	mvOsPrintf("mvCesaInit: channels=%d, session=%d, queue=%d\n",
+	    mv_cesa_channels, numOfSession, queueDepth);
+#else
 	mvOsPrintf("mvCesaInit: channels=%d, session=%d, queue=%d\n", MV_CESA_CHANNELS, numOfSession, queueDepth);
+#endif
 
 	/* Create initial Session database */
 	pCesaSAD = mvOsMalloc(sizeof(MV_CESA_SA *) * numOfSession);
@@ -271,7 +276,11 @@ MV_STATUS mvCesaHalInit(int numOfSession, int queueDepth, void *osHandle, MV_CES
 	ctrlRev = halData->ctrlRev;
 
 	/* Initiliaze per channel resources */
+#ifdef CONFIG_OF
+	for (chan = 0; chan < mv_cesa_channels; chan++) {
+#else
 	for (chan = 0; chan < MV_CESA_CHANNELS; chan++) {
+#endif
 
 		cesaSramVirtPtr[chan] = (MV_CESA_SRAM_MAP *) (halData->sramVirtBase[chan] + halData->sramOffset[chan]);
 
@@ -494,9 +503,13 @@ MV_STATUS mvCesaFinish(void)
 	MV_CESA_REQ *pReq;
 	MV_U8 chan;
 
-	mvOsPrintf("mvCesaFinish: \n");
+	mvOsPrintf("mvCesaFinish:\n");
 
+#ifdef CONFIG_OF
+	for (chan = 0; chan < mv_cesa_channels; chan++) {
+#else
 	for (chan = 0; chan < MV_CESA_CHANNELS; chan++) {
+#endif
 
 		cesaSramVirtPtr[chan] = NULL;
 
@@ -867,7 +880,11 @@ MV_STATUS mvCesaSessionClose(short sid)
 		return MV_NOT_FOUND;
 	}
 
+#ifdef CONFIG_OF
+	for (chan = 0; chan < mv_cesa_channels; chan++) {
+#else
 	for (chan = 0; chan < MV_CESA_CHANNELS; chan++) {
+#endif
 		if (cesaLastSid[chan] == sid)
 			cesaLastSid[chan] = -1;
 	}
diff --git a/arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c b/arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c
index bb1e292..058152e 100644
--- a/arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c
+++ b/arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c
@@ -218,7 +218,11 @@ void mvCesaDebugRegs(void)
 
 	mvOsPrintf("\t CESA Registers:\n");
 
+#ifdef CONFIG_OF
+	for (chan = 0; chan < mv_cesa_channels; chan++) {
+#else
 	for (chan = 0; chan < MV_CESA_CHANNELS; chan++) {
+#endif
 		mvOsPrintf("\n\nChannel %d:\n", chan);
 		mvOsPrintf("===========\n");
 		mvOsPrintf("MV_CESA_CMD_REG                     : 0x%X = 0x%08x\n",
@@ -300,7 +304,11 @@ void mvCesaDebugStatus(void)
 {
 	MV_U8 chan = 0;
 	mvOsPrintf("\n\t CESA Status\n\n");
+#ifdef CONFIG_OF
+	for (chan = 0; chan < mv_cesa_channels; chan++) {
+#else
 	for (chan = 0; chan < MV_CESA_CHANNELS; chan++) {
+#endif
 
 		mvOsPrintf("Channel %d: pReqQ=%p, qDepth=%d, reqSize=%d bytes, qRes=%d",
 			chan, pCesaReqFirst[chan], cesaQueueDepth[chan], (int)sizeof(MV_CESA_REQ), cesaReqResources[chan]);
@@ -346,7 +354,11 @@ void mvCesaDebugQueue(int mode)
 
 	mvOsPrintf("\n\t CESA Request Queue:\n\n");
 
+#ifdef CONFIG_OF
+	for (chan = 0; chan < mv_cesa_channels; chan++) {
+#else
 	for (chan = 0; chan < MV_CESA_CHANNELS; chan++) {
+#endif
 		mvOsPrintf("\n\nChannel %d:\n", chan);
 		mvOsPrintf("===========\n");
 
@@ -466,7 +478,11 @@ void mvCesaDebugSA(short sid, int mode)
 {
 	MV_U8 chan = 0;
 
+#ifdef CONFIG_OF
+	for (chan = 0; chan < mv_cesa_channels; chan++) {
+#else
 	for (chan = 0; chan < MV_CESA_CHANNELS; chan++) {
+#endif
 		mvOsPrintf("\n\nChannel %d:\n", chan);
 		mvOsPrintf("===========\n");
 
-- 
1.7.5.4

