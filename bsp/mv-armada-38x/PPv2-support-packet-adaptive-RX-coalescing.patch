From 30aac8b3fb895d456e18fa3ec88c85a6364db82a Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Tue, 23 Jul 2013 16:46:30 +0300
Subject: [PATCH 0884/1825] PPv2: support packet adaptive RX coalescing

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 234cd4736e45afcc0566725c5016f862e3da7a88

	When adaptive RX coalescing is active, manage packets coalescing as well (not only time coal)
	By default high and low rate packet coal is equal to normal packet coal

Change-Id: Ic5caf56e31d007efd3af998a9fa8bc26273e4014
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2804
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c    |    4 ++++
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |   14 +++++++++++---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    2 ++
 3 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c
index a01c0ba..7a6ce20 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c
@@ -450,6 +450,8 @@ int mv_eth_tool_get_coalesce(struct net_device *netdev,
 	cmd->pkt_rate_high = pp->pkt_rate_high_cfg;
 	cmd->rate_sample_interval = pp->rate_sample_cfg;
 	cmd->use_adaptive_rx_coalesce = pp->rx_adaptive_coal_cfg;
+	cmd->rx_max_coalesced_frames_low = pp->rx_pkts_low_coal_cfg;
+	cmd->rx_max_coalesced_frames_high = pp->rx_pkts_high_coal_cfg;
 
 	return 0;
 }
@@ -503,6 +505,8 @@ int mv_eth_tool_set_coalesce(struct net_device *netdev,
 	/* Adaptive RX coalescing parameters */
 	pp->rx_time_low_coal_cfg = cmd->rx_coalesce_usecs_low;
 	pp->rx_time_high_coal_cfg = cmd->rx_coalesce_usecs_high;
+	pp->rx_pkts_low_coal_cfg = cmd->rx_max_coalesced_frames_low;
+	pp->rx_pkts_high_coal_cfg = cmd->rx_max_coalesced_frames_high;
 	pp->pkt_rate_low_cfg = cmd->pkt_rate_low;
 	pp->pkt_rate_high_cfg = cmd->pkt_rate_high;
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 5434c56..97cf94d 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -229,20 +229,26 @@ static void mv_eth_adaptive_rx_update(struct eth_port *pp)
 		if (rate < pp->pkt_rate_low_cfg) {
 			if (pp->rate_current != 1) {
 				pp->rate_current = 1;
-				for (i = 0; i < CONFIG_MV_ETH_RXQ; i++)
+				for (i = 0; i < CONFIG_MV_ETH_RXQ; i++) {
 					mv_eth_rx_time_coal_set(pp->port, i, pp->rx_time_low_coal_cfg);
+					mv_eth_rx_ptks_coal_set(pp->port, i, pp->rx_pkts_low_coal_cfg);
+				}
 			}
 		} else if (rate > pp->pkt_rate_high_cfg) {
 			if (pp->rate_current != 3) {
 				pp->rate_current = 3;
-				for (i = 0; i < CONFIG_MV_ETH_RXQ; i++)
+				for (i = 0; i < CONFIG_MV_ETH_RXQ; i++) {
 					mv_eth_rx_time_coal_set(pp->port, i, pp->rx_time_high_coal_cfg);
+					mv_eth_rx_ptks_coal_set(pp->port, i, pp->rx_pkts_high_coal_cfg);
+				}
 			}
 		} else {
 			if (pp->rate_current != 2) {
 				pp->rate_current = 2;
-				for (i = 0; i < CONFIG_MV_ETH_RXQ; i++)
+				for (i = 0; i < CONFIG_MV_ETH_RXQ; i++) {
 					mv_eth_rx_time_coal_set(pp->port, i, pp->rx_time_coal_cfg);
+					mv_eth_rx_ptks_coal_set(pp->port, i, pp->rx_pkts_coal_cfg);
+				}
 			}
 		}
 
@@ -3766,6 +3772,8 @@ int mv_eth_hal_init(struct eth_port *pp)
 	pp->tx_pkts_coal_cfg = mv_ctrl_txdone;
 	pp->rx_time_low_coal_cfg = CONFIG_MV_ETH_RX_COAL_USEC >> 2;
 	pp->rx_time_high_coal_cfg = CONFIG_MV_ETH_RX_COAL_USEC << 2;
+	pp->rx_pkts_low_coal_cfg = CONFIG_MV_ETH_RX_COAL_PKTS;
+	pp->rx_pkts_high_coal_cfg = CONFIG_MV_ETH_RX_COAL_PKTS;
 	pp->pkt_rate_low_cfg = 1000;
 	pp->pkt_rate_high_cfg = 50000;
 	pp->rate_sample_cfg = 5;
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index 9d47384..e9c929a 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -375,6 +375,8 @@ struct eth_port {
 	__u32		    tx_pkts_coal_cfg;
 	__u32		    rx_time_low_coal_cfg;
 	__u32		    rx_time_high_coal_cfg;
+	__u32		    rx_pkts_low_coal_cfg;
+	__u32		    rx_pkts_high_coal_cfg;
 	__u32		    pkt_rate_low_cfg;
 	__u32		    pkt_rate_high_cfg;
 	__u32		    rate_current; /* unknown (0), low (1), normal (2), high (3) */
-- 
1.7.5.4

