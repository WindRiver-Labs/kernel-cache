From 8f3c4c9ec26e2f8f2570fe428cb39aa8b29c2466 Mon Sep 17 00:00:00 2001
From: Nadav Haklai <nadavh@marvell.com>
Date: Wed, 30 Oct 2013 11:28:12 +0200
Subject: [PATCH 1135/1825] timer: a38x: fix Armada 38x timer configuration

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 14a6c7b8b38cf31251390b6177a80d47d621df06

        Fix wrong configuration of the timer

Change-Id: I7597d340f0a4925c1380abef508ccfc62bbacc0a
Signed-off-by: Nadav Haklai <nadavh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3910
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada38x/time.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/arm/mach-armada38x/time.c b/arch/arm/mach-armada38x/time.c
index 0c1c107..b3df243 100644
--- a/arch/arm/mach-armada38x/time.c
+++ b/arch/arm/mach-armada38x/time.c
@@ -80,7 +80,7 @@ int a38x_clkevt_next_event(unsigned long delta, struct clock_event_device *evt)
 
 	/* Enable the timer */
 	u = MV_REG_READ(TIMER_CTRL);
-	u = (u & ~TIMER_RELOAD_EN(t)) | TIMER_EN(t);
+	u = (u & ~TIMER_RELOAD_EN(t)) | TIMER_EN(t) | TIMER_TURN_25MHZ(t);
 	MV_REG_WRITE(TIMER_CTRL, u);
 
 	local_irq_restore(flags);
@@ -101,7 +101,7 @@ static void a38x_clkevt_mode(enum clock_event_mode mode,
 
 		/* Enable timer */
 		u = MV_REG_READ(TIMER_CTRL);
-		u |= TIMER_EN(t) | TIMER_RELOAD_EN(t);
+		u |= TIMER_EN(t) | TIMER_RELOAD_EN(t) | TIMER_TURN_25MHZ(t);
 		MV_REG_WRITE(TIMER_CTRL, u);
 	} else {
 		/* Disable timer */
@@ -180,7 +180,7 @@ static void a38x_setup_clocksource(int timer, long rate)
 
 	/* Config clock source for timer */
 	u = MV_REG_READ(TIMER_CTRL);
-	u |= TIMER_EN(i) | TIMER_RELOAD_EN(i);
+	u |= TIMER_EN(i) | TIMER_RELOAD_EN(i) | TIMER_TURN_25MHZ(i);
 	MV_REG_WRITE(TIMER_CTRL, u);
 
 	clocksource_mmio_init(base, "a38x_clk_source",
@@ -221,7 +221,7 @@ static void __init a38x_timer_init(void)
 {
 	u32 rate;
 
-	rate = 200000000;
+	rate = 25000000;
 
 	printk(KERN_INFO "Initializing Armada-38x SoC Timers\n");
 	ticks_per_jiffy = (rate + HZ / 2) / HZ;
-- 
1.7.5.4

