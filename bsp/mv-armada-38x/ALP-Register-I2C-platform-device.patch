From 0f69a879c07c47de81750fa77d0810ea0726a093 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Sun, 14 Apr 2013 14:42:02 +0300
Subject: [PATCH 0581/1825] ALP: Register I2C platform device

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 3807598cf7175f409886123e0a172cc9c8fb5ff3

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: Ia5467e15da6dfb1f55ed7ac034e58c3a938d1b3a
Reviewed-on: http://vgitil04.il.marvell.com:8080/1555
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/configs/avanta_lp_defconfig     |    1 +
 arch/arm/configs/avanta_lp_smp_defconfig |    1 +
 arch/arm/mach-avantalp/core.c            |   76 ++++++++++++++++++++++++++++++
 3 files changed, 78 insertions(+), 0 deletions(-)

diff --git a/arch/arm/configs/avanta_lp_defconfig b/arch/arm/configs/avanta_lp_defconfig
index fafad28..5dd98e3 100644
--- a/arch/arm/configs/avanta_lp_defconfig
+++ b/arch/arm/configs/avanta_lp_defconfig
@@ -99,6 +99,7 @@ CONFIG_SERIAL_8250_RUNTIME_UARTS=2
 # CONFIG_HW_RANDOM is not set
 CONFIG_I2C=y
 CONFIG_I2C_CHARDEV=y
+CONFIG_I2C_MV64XXX=y
 CONFIG_SPI=y
 CONFIG_GPIO_SYSFS=y
 # CONFIG_HWMON is not set
diff --git a/arch/arm/configs/avanta_lp_smp_defconfig b/arch/arm/configs/avanta_lp_smp_defconfig
index eb47e0e..02d2177 100644
--- a/arch/arm/configs/avanta_lp_smp_defconfig
+++ b/arch/arm/configs/avanta_lp_smp_defconfig
@@ -101,6 +101,7 @@ CONFIG_SERIAL_8250_RUNTIME_UARTS=2
 # CONFIG_HW_RANDOM is not set
 CONFIG_I2C=y
 CONFIG_I2C_CHARDEV=y
+CONFIG_I2C_MV64XXX=y
 CONFIG_SPI=y
 CONFIG_GPIO_SYSFS=y
 # CONFIG_HWMON is not set
diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index f634ec7..6cc1467 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -16,11 +16,13 @@
 
 #include <linux/types.h>
 #include <linux/kernel.h>
+#include <linux/ioport.h>
 #include <linux/ata_platform.h>
 #include <linux/ethtool.h>
 #include <linux/device.h>
 #include <linux/string.h>
 #include <linux/mbus.h>
+#include <linux/mv643xx_i2c.h>
 #include <asm/smp_scu.h>
 #include <asm/setup.h>
 #include <asm/mach-types.h>
@@ -253,6 +255,79 @@ unsigned char*  mv_sram_usage_get(int* sram_size_ptr)
  * I/O Devices Platform Info
  */
 
+/**************
+ * I2C (TWSI) *
+ **************/
+#ifdef CONFIG_I2C_MV64XXX
+static struct mv64xxx_i2c_pdata alp_i2c_pdata = {
+	.freq_m         = 8, /* assumes 166 MHz TCLK */
+	.freq_n         = 3,
+	.timeout        = 1000, /* Default timeout of 1 second */
+};
+
+static struct resource alp_i2c_0_resources[] = {
+	{
+		.name   = "i2c base",
+		.start  = INTER_REGS_PHYS_BASE + MV_TWSI_SLAVE_REGS_OFFSET(0),
+		.end    = INTER_REGS_PHYS_BASE + MV_TWSI_SLAVE_REGS_OFFSET(0) + 0x20 - 1,
+		.flags  = IORESOURCE_MEM,
+	},
+	{
+		.name   = "i2c irq",
+		.start  = IRQ_GLOBAL_I2C0,
+		.end    = IRQ_GLOBAL_I2C0,
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device alp_i2c0 = {
+	.name           = MV64XXX_I2C_CTLR_NAME,
+	.id             = 0,
+	.num_resources  = ARRAY_SIZE(alp_i2c_0_resources),
+	.resource       = alp_i2c_0_resources,
+	.dev            = {
+		.platform_data = &alp_i2c_pdata,
+	},
+};
+
+static struct resource alp_i2c_1_resources[] = {
+	{
+		.name   = "i2c base",
+		.start  = INTER_REGS_PHYS_BASE + MV_TWSI_SLAVE_REGS_OFFSET(1),
+		.end    = INTER_REGS_PHYS_BASE + MV_TWSI_SLAVE_REGS_OFFSET(1) + 0x20 - 1,
+		.flags  = IORESOURCE_MEM,
+	},
+	{
+		.name   = "i2c irq",
+		.start  = IRQ_GLOBAL_I2C1,
+		.end    = IRQ_GLOBAL_I2C1,
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device alp_i2c1 = {
+	.name           = MV64XXX_I2C_CTLR_NAME,
+	.id             = 0,
+	.num_resources  = ARRAY_SIZE(alp_i2c_1_resources),
+	.resource       = alp_i2c_1_resources,
+	.dev            = {
+		.platform_data = &alp_i2c_pdata,
+	},
+};
+#endif
+
+static void __init alp_i2c_init(void)
+{
+#ifdef CONFIG_I2C_MV64XXX
+	if (mvUnitMapIsMine(I2C0) == MV_TRUE)
+		platform_device_register(&alp_i2c0);
+
+	if (mvSocUnitInfoNumGet(I2C_UNIT_ID) >= 1 &&
+	    mvUnitMapIsMine(I2C1) == MV_TRUE)
+		platform_device_register(&alp_i2c1);
+#endif
+}
+
 /**********
 * UART-0 *
 **********/
@@ -690,6 +765,7 @@ static void __init board_init(void)
 	mvSysEthPhyInit();
 	eth_init();
 #endif
+	alp_i2c_init();
 }
 
 static void board_restart(char mode, const char *cmd)
-- 
1.7.5.4

