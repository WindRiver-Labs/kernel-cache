From 693a158dafe720c470ff481673aed97b48d13a99 Mon Sep 17 00:00:00 2001
From: Yelena <yelena@marvell.com>
Date: Thu, 19 Dec 2013 12:51:12 +0200
Subject: [PATCH 1234/1825] pp3: Add new function for one register access

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 61791ee7efe7e79a42b04af3ed840c2f2f4dcca6

    - Fixed to use u32 typedef for register address and data

Change-Id: I5f95dc7d1bfe23efc99e414e5bfd14040c0c88cc
Signed-off-by: Yelena <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4794
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h |   34 ++++++++++++++-----
 1 files changed, 25 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h b/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h
index 1d0bb64..1797394 100644
--- a/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h
+++ b/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h
@@ -68,9 +68,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include <linux/kernel.h>
 #include <linux/io.h>
 
-
 #define INLINE inline
-#define MV_PPV3_BASE_ADDR 0
 
 #define	MV_MAC_ADDR_SIZE	(6)
 #define MV_MAC_STR_SIZE		(20)
@@ -82,30 +80,48 @@ struct pp3_unit_info {
 
 /*
 	access_addr - absolute address: Silicon base + unit base + table base + entry offset
-	words_num   - number of words (32 bits) to read
+	words_num   - number of words (word = 32 bits) to read
 	data_ptr    - pointer to an array containing the read data
  */
-static INLINE int mv_pp3_hw_read(unsigned long access_addr, int words_num, u32 *data_ptr)
+static INLINE void mv_pp3_hw_read(u32 access_addr, int words_num, u32 *data_ptr)
 {
 	int i;
 
 	for (i = 0; i < words_num; i++)
 		data_ptr[i] = readl(access_addr + 4*i);
-
-	return 0;
 }
 
-static INLINE int mv_pp3_hw_write(unsigned long access_addr, int words_num, u32 *data_ptr)
+/*
+	access_addr - absolute address: Silicon base + unit base + table base + entry offset
+	words_num   - number of words (word = 32 bits) to write
+	data_ptr    - pointer to an array containing the write data
+ */
+static INLINE void mv_pp3_hw_write(u32 access_addr, int words_num, u32 *data_ptr)
 {
 	int i;
 
 	for (i = 0; i < words_num; i++)
 		writel(data_ptr[i], access_addr + 4*i);
+}
 
-	return 0;
+/*
+	access_addr - absolute address: Silicon base + unit base + register offset
+	return register value
+ */
+static INLINE u32 mv_pp3_hw_reg_read(u32 access_addr)
+{
+	return readl(access_addr);
 }
 
+/*
+	access_addr - absolute address: Silicon base + unit base + register offset
+	write data to register
+ */
+static INLINE void mv_pp3_hw_reg_write(u32 access_addr, u32 data)
+{
+	writel(data, access_addr);
+}
 
-int mv_hw_silicon_base_addr_get(unsigned long *siliconBase);
+int mv_hw_silicon_base_addr_get(u32 *siliconBase);
 
 #endif /* __mvHwIf_h__ */
-- 
1.7.5.4

