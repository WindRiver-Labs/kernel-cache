From d9171a8bd169d3ea04925e82d929eca6e66168a5 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 8 Aug 2013 17:48:03 +0300
Subject: [PATCH 0948/1825] alp: moved SoC and board specific tables outside
 of mvBoardEnvSpec

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 47d2998ef88e330be77b7823b88f1dcd2a7e1d78

	- moved S@R information table to mvCtrlEnvSpec.h
	- moved board configuration tables (MV_BOARD_CONFIG_INFO) to mvBoardEnvLib.h
	- removed isActiveForBoard field to read only S@R fields (no need)
	- isWriteable[] is now used only for writeable fields (tested in mvBoardSatrInfoConfig() )
	- removed check of activeForBoard when reading S@R
	- removed IO expander structure information from board specific tables,
		and added a check in mvBoardIoExpanderTypeGet to select the correct io expander table
	- IO expander tables were moved to mvBoardEnvLib.h

Change-Id: If7fd5885ee1617d3a36c9733bccd03675d671835
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2995
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   60 +++++++----
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |  111 ++++++++++++++++++--
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |   99 -----------------
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   23 +---
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |   27 -----
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |   29 +++++
 6 files changed, 174 insertions(+), 175 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 72b387b..d7dfc2c 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -92,7 +92,7 @@
 
 extern MV_BOARD_INFO *boardInfoTbl[];
 extern MV_BOARD_SATR_INFO boardSatrInfo[];
-extern MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[];
+MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[] = MV_BOARD_CONFIG_INFO;
 
 /* Locals */
 static MV_DEV_CS_INFO *boardGetDevEntry(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
@@ -2283,24 +2283,19 @@ MV_VOID mvBoardEthComplexConfigSet(MV_U32 ethConfig)
 *******************************************************************************/
 MV_STATUS mvBoardSatrInfoConfig(MV_SATR_TYPE_ID satrClass, MV_BOARD_SATR_INFO *satrInfo, MV_BOOL read)
 {
-	int i, start, end;
+	int i;
 	MV_U32 boardId = mvBoardIdGet();
 
-	if (read == MV_TRUE) {	/* if read request, check read SATR fields */
-		start = 0;
-		end = MV_SATR_READ_MAX_OPTION;
-	} else {		/* if write request, check write SATR fields */
-		start = MV_SATR_READ_MAX_OPTION;
-		end = MV_SATR_WRITE_MAX_OPTION;
-	}
-
-	/* verify existence of requested SATR type, pull its data,
-	 * and check if field is relevant to current running board */
-	for (i = start; i < end ; i++)
+	/* verify existence of requested SATR type, and pull its data,
+	 * if write sequence, check if field is writeable for running board */
+	for (i = 0; i < MV_SATR_WRITE_MAX_OPTION ; i++)
 		if (boardSatrInfo[i].satrId == satrClass) {
-			*satrInfo = boardSatrInfo[i];
-			if (boardSatrInfo[i].isActiveForBoard[boardId])
+
+			/* if read sequence, or an authorized write sequence -> return true */
+			if (read == MV_TRUE || boardSatrInfo[i].isWriteable[boardId]) {
+				*satrInfo = boardSatrInfo[i];
 				return MV_OK;
+			}
 			else
 				return MV_ERROR;
 		}
@@ -2359,17 +2354,40 @@ MV_BOOL mvBoardConfigTypeGet(MV_CONFIG_TYPE_ID configClass, MV_BOARD_CONFIG_TYPE
 *	MV_BOARD_CONFIG_TYPE_INFO struct with mask, offset and register number.
 *
 *******************************************************************************/
-MV_STATUS mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_TYPE_ID ioClass, MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo)
+MV_STATUS mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_TYPE_ID ioClass,
+		MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo)
 {
-	int i;
+	MV_U32 i;
+
+	MV_BOARD_IO_EXPANDER_TYPE_INFO ioe6660[] = MV_BOARD_IO_EXP_DB6660_INFO;
+	MV_BOARD_IO_EXPANDER_TYPE_INFO ioe6650[] = MV_BOARD_IO_EXP_DB6650_INFO;
+	MV_BOARD_IO_EXPANDER_TYPE_INFO *ioe;
+	MV_U8 n = 0;
+
+	switch (mvBoardIdGet()) {
+	case DB_6650_ID:
+		ioe = ioe6650;
+		n = ARRSZ(ioe6650);
+		break;
+	case DB_6660_ID:
+		ioe = ioe6660;
+		n = ARRSZ(ioe6660);
+		break;
+	default:
+		mvOsPrintf("%s: Error: IO Expander doesn't exists on board\n", __func__);
+		return MV_ERROR;
+	}
 
 	/* verify existance of requested config type, pull its data */
-	for (i = 0; i < board->numBoardIoExpanderInfo ; i++)
-		if (board->pBoardIoExpanderInfo[i].ioFieldid == ioClass) {
-			*ioInfo = board->pBoardIoExpanderInfo[i];
+	for (i = 0; i < n ; i++)
+		if (ioe[i].ioFieldid == ioClass) {
+
+			*ioInfo = ioe[i];
 			return MV_OK;
 		}
-	DB(mvOsPrintf("%s: Error: requested MV_IO_EXPANDER_TYPE_ID was not found\n", __func__));
+
+	mvOsPrintf("%s: Error: requested IO expander id was not found (%d)\n",
+			__func__, ioClass);
 	return MV_ERROR;
 }
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index e5e1688..9ef5ed0 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -77,6 +77,7 @@ extern "C" {
 #include "boardEnv/mvBoardEnvSpec.h"
 #include "twsi/mvTwsi.h"
 
+#define ARRSZ(x)                (sizeof(x) / sizeof(x[0]))
 #define BOARD_ETH_SWITCH_PORT_NUM       7
 #define BOARD_ETH_SWITCH_SMI_SCAN_MODE	1	/* Use manual scanning mode */
 #define MV_BOARD_MAX_MPP                9       /* number of MPP conf registers */
@@ -201,7 +202,7 @@ typedef struct _boardSatrInfo {
 	MV_U32 mask;
 	MV_U32 offset;
 	MV_U32 regNum;
-	MV_U32 isActiveForBoard[MV_MAX_BOARD_ID];
+	MV_U32 isWriteable[MV_MAX_BOARD_ID];
 } MV_BOARD_SATR_INFO;
 
 typedef struct _boardConfigTypesInfo {
@@ -213,13 +214,6 @@ typedef struct _boardConfigTypesInfo {
 	MV_U32 isActiveForBoard[MV_MAX_BOARD_ID];
 } MV_BOARD_CONFIG_TYPE_INFO;
 
-typedef struct _boardIoExapnderTypesInfo {
-	MV_IO_EXPANDER_TYPE_ID ioFieldid;
-	MV_U32 offset;
-	MV_U32 expanderNum;
-	MV_U32 regNum;
-} MV_BOARD_IO_EXPANDER_TYPE_INFO;
-
 typedef enum _boardMacSpeed {
 	BOARD_MAC_SPEED_10M,
 	BOARD_MAC_SPEED_100M,
@@ -273,6 +267,41 @@ typedef struct {
 	MV_U32 val;
 } MV_BOARD_SPEC_INIT;
 
+typedef enum _mvIoExpanderTypeID {
+	MV_IO_EXPANDER_SFP0_TX_DIS,
+	MV_IO_EXPANDER_SFP0_PRSNT,
+	MV_IO_EXPANDER_SFP0_TX_FAULT,
+	MV_IO_EXPANDER_SFP0_LOS,
+	MV_IO_EXPANDER_SFP1_PRSNT,
+	MV_IO_EXPANDER_SFP1_TX_FAULT,
+	MV_IO_EXPANDER_SFP1_LOS,
+	MV_IO_EXPANDER_SFP1_TX_DIS,
+	MV_IO_EXPANDER_USB_VBUS,
+	MV_IO_EXPANDER_MAC0_RJ45_PORT_LED,
+	MV_IO_EXPANDER_MAC0_SFP_PORT_LED,
+	MV_IO_EXPANDER_MAC1_RJ45_PORT_LED,
+	MV_IO_EXPANDER_MAC1_SFP_PORT_LED,
+	MV_IO_EXPANDER_PON_PORT_LED,
+	MV_IO_EXPANDER_SD_STATUS,
+	MV_IO_EXPANDER_SD_WRITE_PROTECT,
+	MV_IO_EXPANDER_JUMPER1,
+	MV_IO_EXPANDER_JUMPER2_EEPROM_ENABLED,
+	MV_IO_EXPANDER_JUMPER3,
+	MV_IO_EXPANDER_EXT_PHY_SMI_EN,
+	MV_IO_EXPANDER_SPI1_CS_MSB0,
+	MV_IO_EXPANDER_SPI1_CS_MSB1,
+	MV_IO_EXPANDER_INTEG_PHY_PORTS_LED,
+	MV_IO_EXPANDER_USB_SUPER_SPEED,
+	MV_IO_EXPANDER_MAX_OPTION
+} MV_IO_EXPANDER_TYPE_ID;
+
+typedef struct _boardIoExapnderTypesInfo {
+	MV_IO_EXPANDER_TYPE_ID ioFieldid;
+	MV_U32 offset;
+	MV_U32 expanderNum;
+	MV_U32 regNum;
+} MV_BOARD_IO_EXPANDER_TYPE_INFO;
+
 typedef struct _boardInfo {
 	char boardName[MV_BOARD_NAME_LEN];
 	MV_U8 numBoardMppTypeValue;
@@ -284,8 +313,6 @@ typedef struct _boardInfo {
 	MV_U32 intsGppMaskHigh;
 	MV_U8 numBoardDeviceIf;
 	MV_DEV_CS_INFO *pDevCsInfo;
-	MV_U8 numBoardIoExpanderInfo;
-	MV_BOARD_IO_EXPANDER_TYPE_INFO *pBoardIoExpanderInfo;
 	MV_U8 numBoardTwsiDev;
 	MV_BOARD_TWSI_INFO *pBoardTwsiDev;
 	MV_U8 numBoardMacInfo;
@@ -342,6 +369,70 @@ typedef struct _boardInfo {
 	MV_BOOL configAutoDetect;
 } MV_BOARD_INFO;
 
+/* {{MV_CONFIG_TYPE_ID ConfigID, MV_U32 Mask,  Offset, expanderNum,  regNum,    isActiveForBoard[]}} */
+#define MV_BOARD_CONFIG_INFO { \
+{ MV_CONFIG_MAC0,	       0x3,	0,	 0,		0,	{ 0, 1, 1, 1 } }, \
+{ MV_CONFIG_MAC1,	       0xC,	2,	 0,		0,	{ 0, 1, 1, 1 } }, \
+{ MV_CONFIG_PON_SERDES,	       0x10,	4,	 0,		0,	{ 0, 1, 1, 1 } }, \
+{ MV_CONFIG_PON_BEN_POLARITY,  0x20,	5,	 0,		0,	{ 0, 0, 1, 1 } }, \
+{ MV_CONFIG_SGMII0_CAPACITY,   0x40,	6,	 0,		0,	{ 0, 1, 0, 1 } }, \
+{ MV_CONFIG_SGMII1_CAPACITY,   0x80,	7,	 0,		0,	{ 0, 1, 1, 1 } }, \
+{ MV_CONFIG_SLIC_TDM_DEVICE,   0x7,	0,	 0,		1,	{ 0, 1, 1, 1 } }, \
+{ MV_CONFIG_LANE1,	       0x18,	3,	 0,		1,	{ 0, 0, 0, 1 } }, \
+{ MV_CONFIG_LANE2,	       0x20,	5,	 0,		1,	{ 0, 0, 0, 1 } }, \
+{ MV_CONFIG_LANE3,	       0X40,	6,	 0,		1,	{ 0, 0, 0, 1 } }, \
+{ MV_CONFIG_MAC0_SW_SPEED,     0X80,	7,	 0,		1,	{ 0, 1, 0, 1 } }, \
+{ MV_CONFIG_DEVICE_BUS_MODULE, 0x3,	0,	 1,		0,	{ 0, 0, 0, 1 } }, \
+};
+
+/* MV_CONFIG_TYPE_ID ConfigID,      MV_U32 Offset,	 expanderNum,  regNum,   }} */
+#define MV_BOARD_IO_EXP_DB6650_INFO { \
+	/* 2nd IO Expander Register*/ \
+{ MV_IO_EXPANDER_USB_VBUS,		 0,		 2,	 0}, \
+{ MV_IO_EXPANDER_SFP1_PRSNT,		 2,		 2,	 0}, \
+{ MV_IO_EXPANDER_SFP1_TX_FAULT,		 3,		 2,	 0}, \
+{ MV_IO_EXPANDER_SFP1_LOS,		 4,		 2,	 0}, \
+{ MV_IO_EXPANDER_JUMPER2_EEPROM_ENABLED, 6,		 2,	 0}, \
+{ MV_IO_EXPANDER_JUMPER3,		 7,		 2,	 0}, \
+	/* 3rd IO Expander Register*/ \
+{ MV_IO_EXPANDER_EXT_PHY_SMI_EN,	 0,		 2,	 1}, \
+{ MV_IO_EXPANDER_SFP1_TX_DIS,		 1,		 2,	 1}, \
+{ MV_IO_EXPANDER_MAC0_RJ45_PORT_LED,	 2,		 2,	 1}, \
+{ MV_IO_EXPANDER_PON_PORT_LED,		 3,		 2,	 1}, \
+{ MV_IO_EXPANDER_MAC1_SFP_PORT_LED,	 4,		 2,	 1}, \
+{ MV_IO_EXPANDER_MAC1_RJ45_PORT_LED,	 5,		 2,	 1}, \
+{ MV_IO_EXPANDER_INTEG_PHY_PORTS_LED,	 6,		 2,	 1}, \
+};
+
+#define MV_BOARD_IO_EXP_DB6660_INFO { \
+	/* 1st IO Expander Register*/ \
+{ MV_IO_EXPANDER_SFP0_TX_DIS,		 0,		 1,	 1}, \
+{ MV_IO_EXPANDER_SFP0_PRSNT,		 1,		 1,	 1}, \
+{ MV_IO_EXPANDER_SFP0_TX_FAULT,		 2,		 1,	 1}, \
+{ MV_IO_EXPANDER_SFP0_LOS,		 3,		 1,	 1}, \
+{ MV_IO_EXPANDER_USB_VBUS,		 4,		 1,	 1}, \
+{ MV_IO_EXPANDER_MAC0_RJ45_PORT_LED,	 5,		 1,	 1}, \
+{ MV_IO_EXPANDER_MAC0_SFP_PORT_LED,	 6,		 1,	 1}, \
+{ MV_IO_EXPANDER_PON_PORT_LED,		 7,		 1,	 1}, \
+	/* 2nd IO Expander Register*/ \
+{ MV_IO_EXPANDER_SD_STATUS,		 0,		 2,	 0}, \
+{ MV_IO_EXPANDER_SD_WRITE_PROTECT,	 1,		 2,	 0}, \
+{ MV_IO_EXPANDER_SFP1_PRSNT,		 2,		 2,	 0}, \
+{ MV_IO_EXPANDER_SFP1_TX_FAULT,		 3,		 2,	 0}, \
+{ MV_IO_EXPANDER_SFP1_LOS,		 4,		 2,	 0}, \
+{ MV_IO_EXPANDER_JUMPER1,		 6,		 2,	 0}, \
+{ MV_IO_EXPANDER_JUMPER2_EEPROM_ENABLED, 7,		 2,	 0}, \
+	/* 3rd IO Expander Register*/ \
+{ MV_IO_EXPANDER_EXT_PHY_SMI_EN,	 0,		 2,	 1}, \
+{ MV_IO_EXPANDER_SFP1_TX_DIS,		 1,		 2,	 1}, \
+{ MV_IO_EXPANDER_SPI1_CS_MSB0,		 2,		 2,	 1}, \
+{ MV_IO_EXPANDER_SPI1_CS_MSB1,		 3,		 2,	 1}, \
+{ MV_IO_EXPANDER_MAC1_SFP_PORT_LED,	 4,		 2,	 1}, \
+{ MV_IO_EXPANDER_MAC1_RJ45_PORT_LED,	 5,		 2,	 1}, \
+{ MV_IO_EXPANDER_INTEG_PHY_PORTS_LED,	 6,		 2,	 1}, \
+{ MV_IO_EXPANDER_USB_SUPER_SPEED,	 7,		 2,	 1}, \
+};
+
 /* Boot device bus width */
 #define MSAR_0_BOOT_DEV_BUS_WIDTH_OFFS          3
 /* Bus width field meaning for NOR/NAND */
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 9a9360d..f6fcb53 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -67,101 +67,6 @@
 #include "twsi/mvTwsi.h"
 #include "pex/mvPexRegs.h"
 
-#define ARRSZ(x)                (sizeof(x) / sizeof(x[0]))
-
-MV_BOARD_SATR_INFO boardSatrInfo[] = {
-/*{{MV_SATR_TYPE_ID SarID,	   Mask,     Offset, regNum, isActiveForBoard[]}*/
-/*		     isActiveForBoard[] = { RD_6650, DB_6650, RD_6660, DB_6660 }*/
-{ MV_SATR_CPU_DDR_L2_FREQ,	 0x003E0000,	17,	1, {1, 1, 1, 1} },
-{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,	22,	1, {1, 1, 1, 1} },
-{ MV_SATR_CPU1_ENABLE,		 0x00008000,	15,	0, {1, 1, 1, 1} },
-{ MV_SATR_SSCG_DISABLE,		 0x00000002,	1,	0, {1, 1, 1, 1} },
-{ MV_SATR_I2C0_SERIAL_ROM,	 0X00000001,	0,	0, {1, 1, 1, 1} },
-{ MV_SATR_EXTERNAL_CPU_RESET,	 0X00000000,	0,	0, {1, 1, 1, 1} },
-{ MV_SATR_EXTERNAL_CORE_RESET,	 0X00000000,	0,	0, {1, 1, 1, 1} },
-{ MV_SATR_BOOT_DEVICE,		 0X000001F8,	3,	0, {1, 1, 1, 1} },
-{ MV_SATR_CPU_PLL_XTAL_BYPASS,	 0x00000200,	9,	0, {1, 1, 1, 1} },
-{ MV_SATR_PEX0_CLOCK,		 0x00000400,	10,	0, {1, 1, 1, 1} },
-{ MV_SATR_PEX1_CLOCK,		 0x00000800,	11,	0, {1, 1, 1, 1} },
-{ MV_SATR_REF_CLOCK_ENABLE,	 0x00000004,	2,	0, {1, 1, 1, 1} },
-{ MV_SATR_TESTER_OPTIONS,	 0x00080000,	19,	0, {1, 1, 1, 1} },
-{ MV_SATR_CPU0_ENDIANESS,	 0x00001000,	12,	0, {1, 1, 1, 1} },
-{ MV_SATR_CPU0_NMFI,		 0x00002000,	13,	0, {1, 1, 1, 1} },
-{ MV_SATR_CPU0_THUMB,		 0x00004000,	14,	0, {1, 1, 1, 1} },
-{ MV_SATR_EFUSE_BYPASS,		 0x00020000,	17,	0, {1, 1, 1, 1} },
-{ MV_SATR_POR_BYPASS,		 0x00100000,	20,	0, {1, 1, 1, 1} },
-{ MV_SATR_BOARD_ID,		 0x000000F0,	4,	1, {1, 1, 1, 1} },
-{ MV_SATR_WRITE_CPU_FREQ,	 0X0000001F,	0,	0, {0, 1, 0, 1} },
-{ MV_SATR_WRITE_CORE_CLK_SELECT, 0x00000001,	0,	1, {0, 1, 0, 1} },
-{ MV_SATR_WRITE_CPU1_ENABLE,	 0x00000002,	1,	1, {0, 1, 0, 1} },
-{ MV_SATR_WRITE_SSCG_DISABLE,	 0x00000004,	2,	1, {0, 1, 0, 1} },
-};
-
-MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[] = {
-/* {{MV_CONFIG_TYPE_ID ConfigID, MV_U32 Mask,  Offset, expanderNum,  regNum,    isActiveForBoard[]}} */
-	{ MV_CONFIG_MAC0,	       0x3,	0,	 0,		0,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#0, BITS [0:1] */
-	{ MV_CONFIG_MAC1,	       0xC,	2,	 0,		0,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#0, BITS [2:3] */
-	{ MV_CONFIG_PON_SERDES,	       0x10,	4,	 0,		0,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#0, BITS [4]   */
-	{ MV_CONFIG_PON_BEN_POLARITY,  0x20,	5,	 0,		0,	{ 0, 0, 1, 1 } }, /* Exp#0, Reg#0, BITS [5]   */
-	{ MV_CONFIG_SGMII0_CAPACITY,   0x40,	6,	 0,		0,	{ 0, 1, 0, 1 } }, /* Exp#0, Reg#0, BITS [6]   */
-	{ MV_CONFIG_SGMII1_CAPACITY,   0x80,	7,	 0,		0,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#0, BITS [7]   */
-	{ MV_CONFIG_SLIC_TDM_DEVICE,   0x7,	0,	 0,		1,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#1, BITS [0:1] */
-	{ MV_CONFIG_LANE1,	       0x18,	3,	 0,		1,	{ 0, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [2:3] */
-	{ MV_CONFIG_LANE2,	       0x20,	5,	 0,		1,	{ 0, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [4]   */
-	{ MV_CONFIG_LANE3,	       0X40,	6,	 0,		1,	{ 0, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [5:6] */
-	{ MV_CONFIG_MAC0_SW_SPEED,     0X80,	7,	 0,		1,	{ 0, 1, 0, 1 } }, /* Exp#0, Reg#1, BITS [5:6] */
-	{ MV_CONFIG_DEVICE_BUS_MODULE, 0x3,	0,	 1,		0,	{ 0, 0, 0, 1 } }, /* Exp#1, Reg#0, BITS [0:1] */
-};
-
-MV_BOARD_IO_EXPANDER_TYPE_INFO db88f6660InfoBoardIOExpanderInfo[] = {
-/* {{MV_CONFIG_TYPE_ID ConfigID,      MV_U32 Offset,	 expanderNum,  regNum,   }} */
-		/* 1st IO Expander Register*/
-	{ MV_IO_EXPANDER_SFP0_TX_DIS,		 0,		 1,	 1},
-	{ MV_IO_EXPANDER_SFP0_PRSNT,		 1,		 1,	 1},
-	{ MV_IO_EXPANDER_SFP0_TX_FAULT,		 2,		 1,	 1},
-	{ MV_IO_EXPANDER_SFP0_LOS,		 3,		 1,	 1},
-	{ MV_IO_EXPANDER_USB_VBUS,		 4,		 1,	 1},
-	{ MV_IO_EXPANDER_MAC0_RJ45_PORT_LED,	 5,		 1,	 1},
-	{ MV_IO_EXPANDER_MAC0_SFP_PORT_LED,	 6,		 1,	 1},
-	{ MV_IO_EXPANDER_PON_PORT_LED,		 7,		 1,	 1},
-		/* 2nd IO Expander Register*/
-	{ MV_IO_EXPANDER_SD_STATUS,		 0,		 2,	 0},
-	{ MV_IO_EXPANDER_SD_WRITE_PROTECT,	 1,		 2,	 0},
-	{ MV_IO_EXPANDER_SFP1_PRSNT,		 2,		 2,	 0},
-	{ MV_IO_EXPANDER_SFP1_TX_FAULT,		 3,		 2,	 0},
-	{ MV_IO_EXPANDER_SFP1_LOS,		 4,		 2,	 0},
-	{ MV_IO_EXPANDER_JUMPER1,		 6,		 2,	 0},
-	{ MV_IO_EXPANDER_JUMPER2_EEPROM_ENABLED, 7,		 2,	 0},
-		/* 3rd IO Expander Register*/
-	{ MV_IO_EXPANDER_EXT_PHY_SMI_EN,	 0,		 2,	 1},
-	{ MV_IO_EXPANDER_SFP1_TX_DIS,		 1,		 2,	 1},
-	{ MV_IO_EXPANDER_SPI1_CS_MSB0,		 2,		 2,	 1},
-	{ MV_IO_EXPANDER_SPI1_CS_MSB1,		 3,		 2,	 1},
-	{ MV_IO_EXPANDER_MAC1_SFP_PORT_LED,	 4,		 2,	 1},
-	{ MV_IO_EXPANDER_MAC1_RJ45_PORT_LED,	 5,		 2,	 1},
-	{ MV_IO_EXPANDER_INTEG_PHY_PORTS_LED,	 6,		 2,	 1},
-	{ MV_IO_EXPANDER_USB_SUPER_SPEED,	 7,		 2,	 1},
-};
-
-MV_BOARD_IO_EXPANDER_TYPE_INFO db88f6650InfoBoardIOExpanderInfo[] = {
-/* {{MV_CONFIG_TYPE_ID ConfigID,      MV_U32 Offset,	 expanderNum,  regNum,   }} */
-		/* 2nd IO Expander Register*/
-	{ MV_IO_EXPANDER_USB_VBUS,		 0,		 2,	 0},
-	{ MV_IO_EXPANDER_SFP1_PRSNT,		 2,		 2,	 0},
-	{ MV_IO_EXPANDER_SFP1_TX_FAULT,		 3,		 2,	 0},
-	{ MV_IO_EXPANDER_SFP1_LOS,		 4,		 2,	 0},
-	{ MV_IO_EXPANDER_JUMPER2_EEPROM_ENABLED, 6,		 2,	 0},
-	{ MV_IO_EXPANDER_JUMPER3,		 7,		 2,	 0},
-		/* 3rd IO Expander Register*/
-	{ MV_IO_EXPANDER_EXT_PHY_SMI_EN,	 0,		 2,	 1},
-	{ MV_IO_EXPANDER_SFP1_TX_DIS,		 1,		 2,	 1},
-	{ MV_IO_EXPANDER_MAC0_RJ45_PORT_LED,	 2,		 2,	 1},
-	{ MV_IO_EXPANDER_PON_PORT_LED,		 3,		 2,	 1},
-	{ MV_IO_EXPANDER_MAC1_SFP_PORT_LED,	 4,		 2,	 1},
-	{ MV_IO_EXPANDER_MAC1_RJ45_PORT_LED,	 5,		 2,	 1},
-	{ MV_IO_EXPANDER_INTEG_PHY_PORTS_LED,	 6,		 2,	 1},
-};
-
 /*******************************************************************************
  * AvantaLP DB-88F6660 board */
 /*******************************************************************************/
@@ -231,8 +136,6 @@ MV_BOARD_INFO db88f6660_board_info = {
 	.intsGppMaskHigh		= 0,
 	.numBoardDeviceIf		= ARRSZ(db88f6660InfoBoardDeCsInfo),
 	.pDevCsInfo			= db88f6660InfoBoardDeCsInfo,
-	.numBoardIoExpanderInfo		= ARRSZ(db88f6660InfoBoardIOExpanderInfo),
-	.pBoardIoExpanderInfo		= db88f6660InfoBoardIOExpanderInfo,
 	.numBoardTwsiDev		= ARRSZ(db88f6660InfoBoardTwsiDev),
 	.pBoardTwsiDev			= db88f6660InfoBoardTwsiDev,
 	.numBoardMacInfo		= ARRSZ(db88f6660InfoBoardMacInfo),
@@ -348,8 +251,6 @@ MV_BOARD_INFO db88f6650_board_info = {
 	.intsGppMaskHigh		= 0,
 	.numBoardDeviceIf		= ARRSZ(db88f6650InfoBoardDeCsInfo),
 	.pDevCsInfo			= db88f6650InfoBoardDeCsInfo,
-	.numBoardIoExpanderInfo		= ARRSZ(db88f6650InfoBoardIOExpanderInfo),
-	.pBoardIoExpanderInfo		= db88f6650InfoBoardIOExpanderInfo,
 	.numBoardTwsiDev		= ARRSZ(db88f6650InfoBoardTwsiDev),
 	.pBoardTwsiDev			= db88f6650InfoBoardTwsiDev,
 	.numBoardMacInfo		= ARRSZ(db88f6650InfoBoardMacInfo),
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 031ed85..fc95e30 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -126,6 +126,8 @@ CTRL_ENV_INFO ctrlEnvInfo = {};
 MV_U32 satrOptionsConfig[MV_SATR_READ_MAX_OPTION];
 MV_U32 boardOptionsConfig[MV_CONFIG_TYPE_MAX_OPTION];
 
+MV_BOARD_SATR_INFO boardSatrInfo[] = MV_SAR_INFO;
+
 MV_U32 mvCtrlGetCpuNum(MV_VOID)
 {
 	MV_U32 cpu1Enabled;
@@ -373,7 +375,7 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrReadField, MV_U8 val, MV_BOOL rest
 
 	if (mvBoardSatrInfoConfig(satrWriteField, &satrInfo, MV_FALSE) != MV_OK) {
 		if (restoreDefault == MV_FALSE)
-			mvOsPrintf("%s: Error: Requested S@R field is not relevant for this board\n", __func__);
+			mvOsPrintf("%s: Error: Requested field is not writeable for this board\n", __func__);
 		return MV_ERROR;
 	}
 
@@ -439,28 +441,13 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrReadField, MV_U8 val, MV_BOOL rest
 *******************************************************************************/
 MV_STATUS mvCtrlSatRRead(MV_SATR_TYPE_ID satrField, MV_U32 *value)
 {
-	MV_BOARD_SATR_INFO satrInfo;
-
 	if (value == NULL) {
 		DB(mvOsPrintf("%s: Error: NULL pointer parameter\n", __func__));
 		return MV_ERROR;
 	}
 
-	if (satrField < MV_SATR_READ_MAX_OPTION &&
-			mvBoardSatrInfoConfig(satrField, &satrInfo, MV_TRUE) == MV_OK) {
-		*value = satrOptionsConfig[satrField];
-		return MV_OK;
-	}
-	else
-		return MV_ERROR;
-
-/* The last MV_ERROR indicates that a certain field is not relevant for board
- * There is no print/indication needed for user in case this "error" occurs,
- * as this could be a result of a Valid situation:
- *  - when using "SatR read"-read all fields: this indicates which fields to print
- *  - but when using "SatR read fieldX" -to read 1 X field: this will be handled
- *    by caller, and will be followed with an appropriate error message
- */
+	*value = satrOptionsConfig[satrField];
+	return MV_OK;
 }
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index e7d9126..1fbdd0a 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -121,33 +121,6 @@ typedef enum _mvConfigTypeID {
 	MV_CONFIG_TYPE_MAX_OPTION
 } MV_CONFIG_TYPE_ID;
 
-typedef enum _mvIoExpanderTypeID {
-	MV_IO_EXPANDER_SFP0_TX_DIS,
-	MV_IO_EXPANDER_SFP0_PRSNT,
-	MV_IO_EXPANDER_SFP0_TX_FAULT,
-	MV_IO_EXPANDER_SFP0_LOS,
-	MV_IO_EXPANDER_SFP1_PRSNT,
-	MV_IO_EXPANDER_SFP1_TX_FAULT,
-	MV_IO_EXPANDER_SFP1_LOS,
-	MV_IO_EXPANDER_SFP1_TX_DIS,
-	MV_IO_EXPANDER_USB_VBUS,
-	MV_IO_EXPANDER_MAC0_RJ45_PORT_LED,
-	MV_IO_EXPANDER_MAC0_SFP_PORT_LED,
-	MV_IO_EXPANDER_MAC1_RJ45_PORT_LED,
-	MV_IO_EXPANDER_MAC1_SFP_PORT_LED,
-	MV_IO_EXPANDER_PON_PORT_LED,
-	MV_IO_EXPANDER_SD_STATUS,
-	MV_IO_EXPANDER_SD_WRITE_PROTECT,
-	MV_IO_EXPANDER_JUMPER1,
-	MV_IO_EXPANDER_JUMPER2_EEPROM_ENABLED,
-	MV_IO_EXPANDER_JUMPER3,
-	MV_IO_EXPANDER_EXT_PHY_SMI_EN,
-	MV_IO_EXPANDER_SPI1_CS_MSB0,
-	MV_IO_EXPANDER_SPI1_CS_MSB1,
-	MV_IO_EXPANDER_INTEG_PHY_PORTS_LED,
-	MV_IO_EXPANDER_USB_SUPER_SPEED,
-} MV_IO_EXPANDER_TYPE_ID;
-
 /* This enumerator describes the possible SMI control options */
 typedef enum _mvSMIctrl {
 	CPU_SMI_CTRL,
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index ee96c7d..56df8e5 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -567,6 +567,35 @@ typedef enum _mvTarget {
 	"PP2 - CPU 1"		/* PP2 - CPU 1 */	\
 }
 
+
+/*{{MV_SATR_TYPE_ID SarID,	   Mask,     Offset, regNum, isActiveForBoard[]}*/
+/*		     isActiveForBoard[] = { RD_6650, DB_6650, RD_6660, DB_6660 }*/
+#define MV_SAR_INFO { \
+{ MV_SATR_CPU_DDR_L2_FREQ,	 0x003E0000,	17,	1, {} },\
+{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,	22,	1, {} },\
+{ MV_SATR_CPU1_ENABLE,		 0x00008000,	15,	0, {} },\
+{ MV_SATR_SSCG_DISABLE,		 0x00000002,	1,	0, {} },\
+{ MV_SATR_I2C0_SERIAL_ROM,	 0X00000001,	0,	0, {} },\
+{ MV_SATR_EXTERNAL_CPU_RESET,	 0X00000000,	0,	0, {} },\
+{ MV_SATR_EXTERNAL_CORE_RESET,	 0X00000000,	0,	0, {} },\
+{ MV_SATR_BOOT_DEVICE,		 0X000001F8,	3,	0, {} },\
+{ MV_SATR_CPU_PLL_XTAL_BYPASS,	 0x00000200,	9,	0, {} },\
+{ MV_SATR_PEX0_CLOCK,		 0x00000400,	10,	0, {} },\
+{ MV_SATR_PEX1_CLOCK,		 0x00000800,	11,	0, {} },\
+{ MV_SATR_REF_CLOCK_ENABLE,	 0x00000004,	2,	0, {} },\
+{ MV_SATR_TESTER_OPTIONS,	 0x00080000,	19,	0, {} },\
+{ MV_SATR_CPU0_ENDIANESS,	 0x00001000,	12,	0, {} },\
+{ MV_SATR_CPU0_NMFI,		 0x00002000,	13,	0, {} },\
+{ MV_SATR_CPU0_THUMB,		 0x00004000,	14,	0, {} },\
+{ MV_SATR_EFUSE_BYPASS,		 0x00020000,	17,	0, {} },\
+{ MV_SATR_POR_BYPASS,		 0x00100000,	20,	0, {} },\
+{ MV_SATR_BOARD_ID,		 0x000000F0,	4,	1, {} },\
+{ MV_SATR_WRITE_CPU_FREQ,	 0X0000001F,	0,	0, {0, 1, 0, 1} },\
+{ MV_SATR_WRITE_CORE_CLK_SELECT, 0x00000001,	0,	1, {0, 1, 0, 1} },\
+{ MV_SATR_WRITE_CPU1_ENABLE,	 0x00000002,	1,	1, {0, 1, 0, 1} },\
+{ MV_SATR_WRITE_SSCG_DISABLE,	 0x00000004,	2,	1, {0, 1, 0, 1} },\
+};
+
 #endif /* MV_ASMLANGUAGE */
 
 #ifdef __cplusplus
-- 
1.7.5.4

