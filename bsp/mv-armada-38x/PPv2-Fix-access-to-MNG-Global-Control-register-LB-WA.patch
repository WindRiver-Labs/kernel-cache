From 8c7974223a04159f6224aa0db6dea8c038a20ab6 Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Thu, 30 May 2013 10:41:10 +0300
Subject: [PATCH 0698/1825] PPv2: Fix access to MNG Global Control register,
 LB WA not needed

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 910907c1b10c07177e1dc4e95be450e47321c1af

Change-Id: I3bbe6df3bdcb5d39f708e1bd13dd6b6ae7cb7d24
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2031
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |   10 +++-------
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c     |    2 +-
 2 files changed, 4 insertions(+), 8 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index 20d3306..5504ce0 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -491,7 +491,7 @@ static inline void mv_eth_rx_csum(struct eth_port *pp, struct pp2_rx_desc *rx_de
 
 static inline void mv_eth_interrupts_unmask(struct eth_port *pp)
 {
-	int cpu = smp_processor_id(), group_id, rxq_mask;
+	int cpu = smp_processor_id(), group_id;
 	struct napi_group_ctrl *napi_group;
 
 	group_id = pp->cpu_config[cpu]->napi_group_id;
@@ -499,16 +499,12 @@ static inline void mv_eth_interrupts_unmask(struct eth_port *pp)
 		return;
 
 	napi_group = pp->napi_group[group_id];
-	rxq_mask = napi_group->rxq_mask;
-	/* ALP WA - mask bit[7] in LB 2 */
-	if (pp->port == 2)
-		rxq_mask &= ~0x80;
 
 	/* unmask interrupts - for RX unmask only RXQs that are in the same napi group */
 #ifdef CONFIG_MV_ETH_TXDONE_ISR
-	mvPp2GbeIsrRxTxUnmask(pp->port, rxq_mask, 1 /* unmask TxDone interrupts */);
+	mvPp2GbeIsrRxTxUnmask(pp->port, napi_group->rxq_mask, 1 /* unmask TxDone interrupts */);
 #else
-	mvPp2GbeIsrRxTxUnmask(pp->port, rxq_mask, 0 /* mask TxDone interrupts */);
+	mvPp2GbeIsrRxTxUnmask(pp->port, napi_group->rxq_mask, 0 /* mask TxDone interrupts */);
 #endif /* CONFIG_MV_ETH_TXDONE_ISR */
 }
 
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
index d2eb8b5..4786e04 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
@@ -184,7 +184,7 @@ MV_STATUS mvPp2HalInit(MV_PP2_HAL_DATA *halData)
 	for (i = 0; i <= MV_PON_PORT_ID; i++)
 		mvPp2GbeIsrRxqGroup(i, 0);
 
-	mvPp2WrReg(ETH_MNG_EXTENDED_GLOBAL_CTRL_REG, 0x27);
+	MV_REG_WRITE(ETH_MNG_EXTENDED_GLOBAL_CTRL_REG, 0x27);
 
 	/* Allow cache snoop when transmiting packets */
 	mvPp2WrReg(MV_PP2_TX_SNOOP_REG, 0x1);
-- 
1.7.5.4

