From 4deed2b57ca17088495a9eb40a1a79ba49e5a161 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Mon, 12 Aug 2013 10:52:27 -0400
Subject: [PATCH 0947/1825] pp2: Add APIs to control swithching from SWF to
 HWF

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 4bc4ec92ab90b73af3d215bd379a5b85edb098a0

Change-Id: If742aae12a8b2d76f54bb5106f7f6d9bf3206dbf
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3002
Reviewed-by: Igor Patrik <igorp@marvell.com>
Tested-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c     |   46 +++++++++++++++++
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h     |    5 ++
 .../arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c |   53 +++----------------
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h |   52 ++++++++++++++++++-
 4 files changed, 109 insertions(+), 47 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
index 254de76..11e916c 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
@@ -1637,3 +1637,49 @@ MV_STATUS   mvPp2TxpMaxTxSizeSet(int port, int txp, int maxTxSize)
 	}
 	return MV_OK;
 }
+
+/* Function for swithcing SWF to HWF */
+/* txq is physical (global) txq in range 0..MV_PP2_TXQ_TOTAL_NUM */
+/* txq is physical (global) rxq in range 0..MV_ETH_RXQ_TOTAL_NUM */
+
+MV_STATUS mvPp2FwdSwitchCtrl(MV_U32 flowId, int txq, int rxq, int msec)
+{
+	MV_U32 regVal;
+	int timeout, max;
+
+	/* Check validity of parameters */
+	if (mvPp2MaxCheck(txq, MV_PP2_TXQ_TOTAL_NUM, "global txq"))
+		return MV_BAD_PARAM;
+
+	if (mvPp2MaxCheck(rxq, MV_ETH_RXQ_TOTAL_NUM, "global rxq"))
+		return MV_BAD_PARAM;
+
+	timeout = MV_PP2_FWD_SWITCH_TIMEOUT_MAX * 1024;
+	max = timeout / (mvPp2HalData.tClk / 1000);
+	if (mvPp2MaxCheck(msec, max + 1, "timeout msec"))
+		return MV_BAD_PARAM;
+
+	mvPp2WrReg(MV_PP2_FWD_SWITCH_FLOW_ID_REG, flowId);
+	timeout = ((mvPp2HalData.tClk / 1000) * msec) / 1024;
+	regVal = MV_PP2_FWD_SWITCH_TXQ_VAL(txq) | MV_PP2_FWD_SWITCH_RXQ_VAL(rxq) |
+		MV_PP2_FWD_SWITCH_TIMEOUT_VAL(timeout);
+	mvPp2WrReg(MV_PP2_FWD_SWITCH_CTRL_REG, regVal);
+
+	return MV_OK;
+}
+
+int       mvPp2FwdSwitchStatus(int *hwState, int *msec)
+{
+	MV_U32 regVal, cycles;
+
+	regVal = mvPp2RdReg(MV_PP2_FWD_SWITCH_STATUS_REG);
+	if (hwState)
+		*hwState = (regVal & MV_PP2_FWD_SWITCH_STATE_MASK) >> MV_PP2_FWD_SWITCH_STATE_OFFS;
+
+	cycles = (regVal & MV_PP2_FWD_SWITCH_TIMER_MASK) >> MV_PP2_FWD_SWITCH_TIMER_OFFS;
+	cycles *= 1024;
+	if (msec)
+		*msec = cycles / (mvPp2HalData.tClk / 1000);
+
+	return (regVal & MV_PP2_FWD_SWITCH_STATUS_MASK) >> MV_PP2_FWD_SWITCH_STATUS_OFFS;
+}
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
index 565283a..9e724fb 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
@@ -597,6 +597,11 @@ MV_STATUS mvPp2TxqBurstSet(int port, int txp, int txq, int burst);
 MV_STATUS mvPp2TxqFixPrioSet(int port, int txp, int txq);
 MV_STATUS mvPp2TxqWrrPrioSet(int port, int txp, int txq, int weight);
 
+/* Function for swithcing SWF to HWF */
+MV_STATUS mvPp2FwdSwitchCtrl(MV_U32 flowId, int txq, int rxq, int usec);
+int       mvPp2FwdSwitchStatus(int *hwState, int *usec);
+void      mvPp2FwdSwitchRegs(void);
+
 /*****************************/
 /*      Interrupts API       */
 /*****************************/
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
index 010cdd7..58de497 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
@@ -165,50 +165,6 @@ MV_VOID mvPp2DescMgrRegsTxPrint(void)
 	mvOsPrintf("\n");
 }
 
-MV_VOID mvPp2DescMgrRegsAggrTxPrint(void)
-{
-	MV_U32 val, val1, val2;
-	int i;
-
-	mvOsPrintf("--- %s ---\n\n", __func__);
-
-	for (i = 0; i < CONFIG_NR_CPUS; i++) {
-		mvOsPrintf("CPU %d:\n", i);
-		mvPp2WrReg(MV_PP2_TXQ_NUM_REG, i);
-		val1 = mvPp2RdReg(MV_PP2_AGGR_TXQ_DESC_ADDR_REG(i));
-		val = mvPp2RdReg(MV_PP2_AGGR_TXQ_DESC_SIZE_REG(i));
-		val2 = mvPp2RdReg(MV_PP2_AGGR_TXQ_STATUS_REG(i));
-		mvOsPrintf("   addr reg: 0x%x,   size reg: 0x%x,  status reg: 0x%x\n", val1, val, val2);
-		mvOsPrintf("   * address: %d,  size: %d,   pending: %d\n", val1, val, val2);
-	}
-	mvOsPrintf("\n");
-}
-
-MV_VOID mvPp2AddressDecodeRegsPrint(void)
-{
-	MV_U32 val;
-	int i;
-
-	mvOsPrintf("--- %s ---\n\n", __func__);
-
-	for (i = 0; i < ETH_MAX_DECODE_WIN; i++) {
-		mvOsPrintf("window %d:\n", i);
-		val = mvPp2RdReg(ETH_WIN_BASE_REG(i));
-		mvOsPrintf("   win base reg: 0x%x\n", val);
-		mvOsPrintf("   * target :%d,  attr: %d,  base addr: %d\n", val & ETH_WIN_TARGET_MASK,
-			(val & ETH_WIN_ATTR_MASK) >> ETH_WIN_ATTR_OFFS, (val & ETH_WIN_BASE_MASK) >> ETH_WIN_BASE_OFFS);
-
-		val = mvPp2RdReg(ETH_WIN_SIZE_REG(i));
-		mvOsPrintf("   win size reg: 0x%x\n", val);
-		mvOsPrintf("   * size: %d\n", (val & ETH_WIN_SIZE_MASK) >> ETH_WIN_SIZE_OFFS);
-		val = mvPp2RdReg(ETH_WIN_REMAP_REG(i));
-	}
-
-	val = mvPp2RdReg(ETH_BASE_ADDR_ENABLE_REG);
-	mvOsPrintf("base addr enable reg: 0x%x\n", val);
-	mvOsPrintf("\n");
-}
-
 static void mvPp2QueueShow(MV_PP2_QUEUE_CTRL *pQueueCtrl, int mode, int isTxq)
 {
 	mvOsPrintf("pFirst=%p (0x%x), numOfDescr=%d\n",
@@ -503,6 +459,15 @@ void mvPp2TxSchedRegs(int port, int txp)
 	}
 }
 
+void      mvPp2FwdSwitchRegs(void)
+{
+	mvOsPrintf("\n[FWD Switch registers]\n");
+
+	mvPp2PrintReg(MV_PP2_FWD_SWITCH_FLOW_ID_REG, "MV_PP2_FWD_SWITCH_FLOW_ID_REG");
+	mvPp2PrintReg(MV_PP2_FWD_SWITCH_CTRL_REG, "MV_PP2_FWD_SWITCH_CTRL_REG");
+	mvPp2PrintReg(MV_PP2_FWD_SWITCH_STATUS_REG, "MV_PP2_FWD_SWITCH_STATUS_REG");
+}
+
 void mvPp2BmPoolRegs(int pool)
 {
 	mvOsPrintf("\n[BM pool registers: pool=%d]\n", pool);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
index 964f5d8..4bba2be 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
@@ -137,7 +137,8 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 /*-------------------------------------------------------------------------------*/
 
 #define MV_PP2_RX_CTRL_REG(port)		(MV_PP2_REG_BASE + 0x140 + 4 * (port))
-/************************** Dsecriptor Manager Top Registers ******************************/
+
+/************************** Descriptor Manager Top Registers ******************************/
 
 #define MV_PP2_RXQ_NUM_REG			(MV_PP2_REG_BASE + 0x2040)
 
@@ -254,8 +255,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define MV_PP2_TRANSMITTED_COUNT_MASK		(0x3FFF << MV_PP2_TRANSMITTED_COUNT_OFFSET)
 /*-------------------------------------------------------------------------------*/
 
-
-/*-------------------------------------------------------------------------------*/
 #define MV_PP2_AGGR_TXQ_DESC_ADDR_REG(cpu)	(MV_PP2_REG_BASE + 0x2100 + 4 * (cpu))
 
 #define MV_PP2_AGGR_TXQ_DESC_SIZE_REG(cpu)	(MV_PP2_REG_BASE + 0x2140 + 4 * (cpu))
@@ -269,6 +268,53 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 /*-------------------------------------------------------------------------------*/
 
 #define MV_PP2_AGGR_TXQ_INDEX_REG(cpu)		(MV_PP2_REG_BASE + 0x21c0 + 4 * (cpu))
+/*-------------------------------------------------------------------------------*/
+
+/* Registers for HWF to SWF switching */
+#define MV_PP2_FWD_SWITCH_FLOW_ID_REG		(MV_PP2_REG_BASE + 0x2200)
+
+#define MV_PP2_FWD_SWITCH_CTRL_REG		(MV_PP2_REG_BASE + 0x2204)
+
+#define MV_PP2_FWD_SWITCH_TXQ_OFFS		0
+#define MV_PP2_FWD_SWITCH_TXQ_MAX		255
+#define MV_PP2_FWD_SWITCH_TXQ_MASK              (255 << MV_PP2_FWD_SWITCH_TXQ_OFFS)
+#define MV_PP2_FWD_SWITCH_TXQ_VAL(txq)		(((txq) << MV_PP2_FWD_SWITCH_TXQ_OFFS) & \
+							MV_PP2_FWD_SWITCH_TXQ_MASK)
+
+#define MV_PP2_FWD_SWITCH_RXQ_OFFS		8
+#define MV_PP2_FWD_SWITCH_RXQ_MAX		255
+#define MV_PP2_FWD_SWITCH_RXQ_MASK              (255 << MV_PP2_FWD_SWITCH_RXQ_OFFS)
+#define MV_PP2_FWD_SWITCH_RXQ_VAL(rxq)		(((rxq) << MV_PP2_FWD_SWITCH_RXQ_OFFS) & \
+							MV_PP2_FWD_SWITCH_RXQ_MASK)
+
+#define MV_PP2_FWD_SWITCH_TIMEOUT_OFFS		16
+#define MV_PP2_FWD_SWITCH_TIMEOUT_BITS		10
+#define MV_PP2_FWD_SWITCH_TIMEOUT_MAX		((1 << MV_PP2_FWD_SWITCH_TIMEOUT_BITS) - 1)
+#define MV_PP2_FWD_SWITCH_TIMEOUT_MASK          (MV_PP2_FWD_SWITCH_TIMEOUT_MAX << MV_PP2_FWD_SWITCH_TIMEOUT_OFFS)
+#define MV_PP2_FWD_SWITCH_TIMEOUT_VAL(time)	(((time) << MV_PP2_FWD_SWITCH_TIMEOUT_OFFS) & \
+							MV_PP2_FWD_SWITCH_TIMEOUT_MASK)
+
+#define MV_PP2_FWD_SWITCH_STATUS_REG		(MV_PP2_REG_BASE + 0x2208)
+
+#define MV_PP2_FWD_SWITCH_STATE_OFFS		0
+#define MV_PP2_FWD_SWITCH_STATE_MASK		(0x7 << MV_PP2_FWD_SWITCH_STATE_OFFS)
+
+#define MV_PP2_FWD_SWITCH_STATUS_OFFS		4
+#define MV_PP2_FWD_SWITCH_STATUS_MASK		(0x3 << MV_PP2_FWD_SWITCH_STATUS_OFFS)
+
+#define MV_PP2_FWD_SWITCH_TIMER_OFFS		16
+#define MV_PP2_FWD_SWITCH_TIMER_BITS		10
+#define MV_PP2_FWD_SWITCH_TIMER_MAX		((1 << MV_PP2_FWD_SWITCH_TIMER_BITS) - 1)
+#define MV_PP2_FWD_SWITCH_TIMER_MASK		(MV_PP2_FWD_SWITCH_TIMER_MAX << MV_PP2_FWD_SWITCH_TIMER_OFFS)
+/*-------------------------------------------------------------------------------*/
+
+/* Unused registers */
+#define MV_PP2_INTERNAL_BUF_CTRL_REG		(MV_PP2_REG_BASE + 0x2220)
+
+/* No CPU access to Physcal TXQ descriptors, so Snoop doesn't needed */
+#define MV_PP2_TX_DESC_SNOOP_REG		(MV_PP2_REG_BASE + 0x2224)
+/*-------------------------------------------------------------------------------*/
+
 
 /************************** Interrupt Cause and Mask registers ******************/
 #define MV_PP2_ISR_RX_THRESHOLD_REG(port)	(MV_PP2_REG_BASE + 0x5200 + 4 * (port))
-- 
1.7.5.4

