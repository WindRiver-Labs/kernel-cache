From e8b2727642eba1a6b8b9100f52c193a1e3de43a3 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Thu, 14 Mar 2013 19:31:53 +0200
Subject: [PATCH 0538/1825] QD Switch: fix compilation: add board callbacks

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 06f64425427f7db7a35889407bc0ea3db87824e0

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: Ic56f0ea5d580438e64e2626811c8491d014f3031
Reviewed-on: http://vgitil04.il.marvell.com:8080/1508
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-by: Jonatan Farhadian <yonif@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |  192 +++++++++++++++++++-
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    7 +
 2 files changed, 198 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 7573488..1329804 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -2244,7 +2244,7 @@ MV_STATUS mvBoardTwsiReadByteThruMux(MV_U8 muxChNum, MV_U8 chNum,
 *******************************************************************************/
 MV_32 mvBoardSmiScanModeGet(MV_U32 switchIdx)
 {
-	return 0;
+	return board->pSwitchInfo[switchIdx].smiScanMode;
 }
 
 /*******************************************************************************
@@ -2269,6 +2269,196 @@ MV_32 mvBoardSwitchCpuPortGet(MV_U32 switchIdx)
 }
 
 /*******************************************************************************
+* mvBoardSwitchIrqGet - Get the IRQ number for the link status indication
+*
+* DESCRIPTION:
+*       This routine returns the IRQ number for the link status indication.
+*
+* INPUT:
+*       ethPortNum - Ethernet port number.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*	the number of the IRQ for the link status indication, -1 if the port
+*	number is wrong or if not relevant.
+*
+*******************************************************************************/
+MV_32 mvBoardSwitchIrqGet(MV_VOID)
+{
+	return -1;
+}
+
+/*******************************************************************************
+* mvBoardIsQsgmiiModuleConnected
+*
+* DESCRIPTION:
+*       This routine returns whether the QSGMII module is connected or not.
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       MV_TRUE if QSGMII module is connected, MV_FALSE otherwise.
+*
+*******************************************************************************/
+MV_BOOL mvBoardIsQsgmiiModuleConnected(MV_VOID)
+{
+	return MV_FALSE;
+}
+
+/*******************************************************************************
+* mvBoardGePhySwitchPortGet
+*
+* DESCRIPTION:
+*       This routine returns whether the internal GE PHY is connected to
+*	Switch Port 0, Switch port 5 or not connected to any Switch port.
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       0 if the internal GE PHY is connected to Switch Port 0,
+*	5 if the internal GE PHY is connected to Switch Port 5,
+*	-1 otherwise.
+*
+*******************************************************************************/
+MV_32 mvBoardGePhySwitchPortGet(MV_VOID)
+{
+	return -1;
+}
+
+/*******************************************************************************
+* mvBoardRgmiiASwitchPortGet
+*
+* DESCRIPTION:
+*       This routine returns whether RGMII-A is connected to
+*	Switch Port 5, Switch port 6 or not connected to any Switch port.
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       5 if the internal GE PHY is connected to Switch Port 5,
+*	6 if the internal GE PHY is connected to Switch Port 6,
+*	-1 otherwise.
+*
+*******************************************************************************/
+MV_32 mvBoardRgmiiASwitchPortGet(MV_VOID)
+{
+	return -1;
+}
+
+/*******************************************************************************
+* mvBoardSwitchPortMap
+*
+* DESCRIPTION:
+*	Map front panel connector number to switch port number.
+*
+* INPUT:
+*	switchIdx - The switch index.
+*	switchPortNum - The switch port number to get the mapping for.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*	The switch port mapping.
+*	OR -1 if the port number is wrong or if not relevant.
+*
+*******************************************************************************/
+MV_32 mvBoardSwitchPortMap(MV_U32 switchIdx, MV_U32 switchPortNum)
+{
+	int i;
+	if (board->switchInfoNum == 0 || switchIdx >= board->switchInfoNum) {
+		mvOsPrintf("%s: Error: wrong switch index (%d)\n", __func__, switchIdx);
+		return -1;
+	}
+
+	for (i = 0; i < BOARD_ETH_SWITCH_PORT_NUM; i++) {
+		if (board->pSwitchInfo[switchIdx].switchPort[i] == switchPortNum)
+			return i;
+	}
+
+	mvOsPrintf("%s: Error: switch port map not found\n", __func__);
+	return -1;
+}
+
+/*******************************************************************************
+* mvBoardIsSerdesConfigurationEnabled
+*
+* DESCRIPTION:
+*       Check if Serdes configuration is enabled on this board.
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       MV_STATUS - MV_OK, MV_ERROR.
+*
+*******************************************************************************/
+MV_BOOL mvBoardIsSerdesConfigurationEnabled(void)
+{
+	if (board->pBoardSerdesConfigValue)
+		return board->pBoardSerdesConfigValue->enableSerdesConfiguration;
+	else
+		return MV_FALSE;
+}
+
+/*******************************************************************************
+* mvBoardSerdesConfigurationEnableSet
+*
+* DESCRIPTION:
+*	Check if Serdes configuration is enabled on this board.
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       MV_STATUS - MV_OK, MV_ERROR.
+*
+*******************************************************************************/
+MV_STATUS mvBoardSerdesConfigurationEnableSet(MV_BOOL enableSerdesConfiguration)
+{
+	return MV_ERROR;
+}
+
+/*******************************************************************************
+* mvBoardSerdesCfgGet
+*
+* DESCRIPTION:
+*
+* INPUT:
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       SERDES configuration structure or NULL on error
+*
+*******************************************************************************/
+MV_SERDES_CFG *mvBoardSerdesCfgGet(void)
+{
+	return NULL;
+}
+
+/*******************************************************************************
 * mvBoardPexInfoGet - Get board PEX Info
 *
 * DESCRIPTION:
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index 22a251a..bba9521 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -412,6 +412,7 @@ MV_STATUS mvBoardNameGet(char *pNameBuff, MV_U32 size);
 MV_BOARD_SPEC_INIT *mvBoardSpecInitGet(MV_VOID);
 MV_BOOL mvBoardIsPortInSgmii(MV_U32 ethPortNum);
 MV_BOOL mvBoardIsPortInGmii(MV_U32 ethPortNum);
+MV_32 mvBoardSwitchPortMap(MV_U32 switchIdx, MV_U32 switchPortNum);
 MV_BOOL mvBoardIsPortLoopback(MV_U32 ethPortNum);
 MV_32 mvBoardPhyAddrGet(MV_U32 ethPortNum);
 MV_U8 mvBoardIoExpValGet(MV_BOARD_IO_EXPANDER_TYPE_INFO ioInfo);
@@ -486,6 +487,12 @@ MV_BOOL mvBoardIsLcdDviModuleConnected(void);
 MV_BOOL mvBoardIsGMIIModuleConnected(void);
 MV_STATUS mvBoardTwsiMuxChannelSet(MV_U8 muxChNum);
 MV_STATUS mvBoardTwsiReadByteThruMux(MV_U8 muxChNum, MV_U8 chNum, MV_TWSI_SLAVE *pTwsiSlave, MV_U8 *data);
+MV_32 mvBoardSmiScanModeGet(MV_U32 switchIdx);
+MV_32 mvBoardSwitchCpuPortGet(MV_U32 switchIdx);
+MV_32 mvBoardSwitchIrqGet(void);
+MV_BOOL mvBoardIsQsgmiiModuleConnected(void);
+MV_32 mvBoardGePhySwitchPortGet(void);
+MV_32 mvBoardRgmiiASwitchPortGet(void);
 MV_BOARD_MAC_SPEED mvBoardMacSpeedGet(MV_U32 ethPortNum);
 MV_32 mvBoardSwitchCpuPortGet(MV_U32 switchIdx);
 MV_BOOL mvBoardModuleAutoDetectEnabled(void);
-- 
1.7.5.4

