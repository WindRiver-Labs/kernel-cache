From f83e54fe031ef9e55b967079663f78448738fe8c Mon Sep 17 00:00:00 2001
From: Uri Eliyahu <uriel@marvell.com>
Date: Mon, 30 Dec 2013 18:40:07 +0200
Subject: [PATCH 1256/1825] pp2: big endian support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit d9553add500c19a277349c3733c2d7ea871eff1d

	- rx, tx descriptor swap implementation
	- swap descriptor in BE mode

Change-Id: I0ec4ef28cfcce5c010ff10e2d1cb0b12eb4f46dd
Signed-off-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4956
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |    8 ++++++
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    2 +-
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h     |   27 ++++++++++++++++++++
 3 files changed, 36 insertions(+), 1 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index ba5f759..f25f124 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -1809,6 +1809,10 @@ static inline int mv_eth_rx(struct eth_port *pp, int rx_todo, int rxq, struct na
 		}
 		rx_done++;
 
+#if defined(MV_CPU_BE)
+		mvPPv2RxqDescSwap(rx_desc);
+#endif /* MV_CPU_BE */
+
 #ifdef CONFIG_MV_ETH_DEBUG_CODE
 		if (pp->dbg_flags & MV_ETH_F_DBG_RX) {
 			printk(KERN_ERR "\n%s: port=%d, cpu=%d\n", __func__, pp->port, smp_processor_id());
@@ -2469,6 +2473,10 @@ static void mv_eth_rxq_drop_pkts(struct eth_port *pp, int rxq)
 		pool = mv_eth_bm_cookie_pool_get(bm);
 		ppool = &mv_eth_pool[pool];
 
+#if defined(MV_CPU_BE)
+	mvPPv2RxqDescSwap(rx_desc);
+#endif /* MV_CPU_BE */
+
 		mv_eth_pool_refill(ppool, bm, rx_desc->bufPhysAddr, rx_desc->bufCookie);
 		mvOsCacheLineInv(NULL, rx_desc);
 	}
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index c0051f22..73cbc17 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -715,7 +715,7 @@ static inline int mv_eth_aggr_desc_num_check(struct aggr_tx_queue *aggr_txq_ctrl
 static inline void mv_eth_tx_desc_flush(struct pp2_tx_desc *tx_desc)
 {
 #if defined(MV_CPU_BE)
-	/*mvNetaTxqDescSwap(tx_desc);*/
+	mvPPv2TxqDescSwap(tx_desc);
 #endif /* MV_CPU_BE */
 
 	mvOsCacheLineFlush(NULL, tx_desc);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
index 6bba4be..00e59f4 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
@@ -331,6 +331,33 @@ static INLINE PP2_RX_DESC *mvPp2RxqDescGet(MV_PP2_PHYS_RXQ_CTRL *pRxq)
 	return pRxDesc;
 }
 
+#if defined(MV_CPU_BE)
+/* Swap RX descriptor to be BE */
+static INLINE void mvPPv2RxqDescSwap(PP2_RX_DESC *pRxDesc)
+{
+	pRxDesc->status = MV_BYTE_SWAP_32BIT(pRxDesc->status);
+	pRxDesc->parserInfo = MV_BYTE_SWAP_16BIT(pRxDesc->parserInfo);
+	pRxDesc->dataSize =  MV_BYTE_SWAP_16BIT(pRxDesc->dataSize);
+	pRxDesc->bufPhysAddr = MV_BYTE_SWAP_32BIT(pRxDesc->bufPhysAddr);
+	pRxDesc->bufCookie = MV_BYTE_SWAP_32BIT(pRxDesc->bufCookie);
+	pRxDesc->gemPortIdPktColor = MV_BYTE_SWAP_16BIT(pRxDesc->gemPortIdPktColor);
+	pRxDesc->csumL4 = MV_BYTE_SWAP_16BIT(pRxDesc->csumL4);
+	pRxDesc->classifyInfo = MV_BYTE_SWAP_16BIT(pRxDesc->classifyInfo);
+	pRxDesc->flowId = MV_BYTE_SWAP_32BIT(pRxDesc->flowId);
+}
+
+/* Swap TX descriptor to be BE */
+static INLINE void mvPPv2TxqDescSwap(PP2_TX_DESC *pTxDesc)
+{
+	pTxDesc->command = MV_BYTE_SWAP_32BIT(pTxDesc->command);
+	pTxDesc->dataSize = MV_BYTE_SWAP_16BIT(pTxDesc->dataSize);
+	pTxDesc->bufPhysAddr = MV_BYTE_SWAP_32BIT(pTxDesc->bufPhysAddr);
+	pTxDesc->bufCookie = MV_BYTE_SWAP_32BIT(pTxDesc->bufCookie);
+	pTxDesc->hwCmd[0] = MV_BYTE_SWAP_32BIT(pTxDesc->hwCmd[0]);
+	pTxDesc->hwCmd[1] = MV_BYTE_SWAP_32BIT(pTxDesc->hwCmd[1]);
+	pTxDesc->hwCmd[2] = MV_BYTE_SWAP_32BIT(pTxDesc->hwCmd[2]);
+}
+#endif
 /*-------------------------------------------------------------------------------*/
 /* Get number of RX descriptors occupied by received packets */
 static INLINE int mvPp2RxqBusyDescNumGet(int port, int rxq)
-- 
1.7.5.4

