From b34d9a12dcac91bef26942252fb987adbb86f5ec Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Thu, 7 Nov 2013 17:53:01 -0500
Subject: [PATCH 1065/1825] pp3: add basic files to start development

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit b1713af8965f4e41fe09d65892903cda0649638c

	Makefile, Kconfig and mv_netdev.c files added

Change-Id: I6437869746f7fc15dd283a4dd40d67fa223373db
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4259
Reviewed-by: Yelena Krivosheev <yelena@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/marvell/pp3/.gitignore        |   91 ++++++++++++
 drivers/net/ethernet/marvell/pp3/Kconfig           |  156 ++++++++++++++++++++
 drivers/net/ethernet/marvell/pp3/Makefile          |    7 +
 .../net/ethernet/marvell/pp3/net_dev/mv_netdev.c   |   79 ++++++++++
 4 files changed, 333 insertions(+), 0 deletions(-)
 create mode 100644 drivers/net/ethernet/marvell/pp3/.gitignore
 create mode 100644 drivers/net/ethernet/marvell/pp3/Kconfig
 create mode 100644 drivers/net/ethernet/marvell/pp3/Makefile
 create mode 100644 drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c

diff --git a/drivers/net/ethernet/marvell/pp3/.gitignore b/drivers/net/ethernet/marvell/pp3/.gitignore
new file mode 100644
index 0000000..a086c3c
--- /dev/null
+++ b/drivers/net/ethernet/marvell/pp3/.gitignore
@@ -0,0 +1,91 @@
+
+#
+# NOTE! Don't add files that are generated in specific
+# subdirectories here. Add them in the ".gitignore" file
+# in that subdirectory instead.
+#
+# NOTE! Please use 'git ls-files -i --exclude-standard'
+# command after changing this file, to see if there are
+# any tracked files which get ignored after the change.
+#
+# Normal rules
+#
+.*
+*.o
+*.o.*
+*.a
+*.s
+*.ko
+*.so
+*.so.dbg
+*.mod.c
+*.i
+*.lst
+*.symtypes
+*.order
+modules.builtin
+*.elf
+*.bin
+*.gz
+*.bz2
+*.lzma
+*.xz
+*.lzo
+*.patch
+*.gcno
+
+#
+#
+#
+
+#
+# Top-level generic files
+#
+/tags
+/TAGS
+/linux
+/vmlinux
+/vmlinuz
+/System.map
+/Module.markers
+/Module.symvers
+
+#
+# Debian directory (make deb-pkg)
+#
+/debian/
+
+#
+# git files that we don't want to ignore even it they are dot-files
+#
+!.gitignore
+!.mailmap
+
+#
+# Generated include files
+#
+include/config
+include/linux/version.h
+include/generated
+arch/*/include/generated
+
+# stgit generated dirs
+patches-*
+
+# quilt's files
+patches
+series
+
+# cscope files
+cscope.*
+ncscope.*
+
+# gnu global files
+GPATH
+GRTAGS
+GSYMS
+GTAGS
+
+*.orig
+*~
+\#*#
diff --git a/drivers/net/ethernet/marvell/pp3/Kconfig b/drivers/net/ethernet/marvell/pp3/Kconfig
new file mode 100644
index 0000000..2391fff
--- /dev/null
+++ b/drivers/net/ethernet/marvell/pp3/Kconfig
@@ -0,0 +1,156 @@
+menu "BM configuration"
+
+config MV_ETH_BM_LONG_BUF_NUM
+	int "number of buffers for BM long pool"
+	default 1024
+	---help---
+	Default number of buffers allocated for long pools.
+	Each buffer is long enough to receive MTU size packet with predefined headroom and tailroom.
+	This value is relevant for all ports.
+	Number of buffers in each pool can be changed using sysfs command.
+
+config MV_ETH_BM_SHORT_BUF_NUM
+	int "number of buffers for BM short pool"
+	default 2048
+	---help---
+	Default number of buffers allocated for short pools.
+	This value is relevant for all ports.
+	Number of buffers in each pool can be changed using sysfs command.
+
+endmenu
+
+menu "Rx/Tx Queue configuration"
+
+config  MV_ETH_RXQ
+        int "Number of RX queues per port"
+        default 8
+        ---help---
+	Number of RX queues to be reserved for each port.
+	By default all ingress packets are coming to default RXQ only (MV_ETH_RXQ_DEF).
+	Packets can be steered to different RXQs using sysfs commands.
+
+config  MV_ETH_TXQ
+        int "Number of TX queues"
+        default 1
+        ---help---
+	Number of TX queues to be reserved for each port.
+	By default all egress packets generated by Linux network stack will be sent
+	using default TXQ (MV_ETH_TXQ_DEF).
+	Packets can be steered to different TXQs using sysfs commands.
+
+config MV_ETH_RXQ_DESC
+	int "Number of Rx descriptors"
+	default 128
+        ---help---
+	Default number of RX descriptors in each Rx queue.
+	This value is relevant for all RXQs.
+	This value can be changed for each RXQ using sysfs command.
+
+config MV_ETH_RXQ_DEF
+        int "Default RXQ to recieve packets"
+        default 0
+        ---help---
+
+config MV_ETH_TXQ_DESC
+	int "Number of Tx descriptors"
+	default 532
+        ---help---
+	Default number of TX descriptors in each TX queue.
+	This value is relevant for all TXQs.
+	This value can be changed for each TXQ using sysfs command.
+
+config MV_ETH_TXQ_DEF
+        int "Default TXQ to send local generated packets"
+        default 0
+        ---help---
+
+endmenu
+
+menu "IP/TCP/UDP Offloading"
+
+endmenu
+
+menu "Control and Statistics"
+
+config  MV_ETH_DEBUG_CODE
+	bool "Add run-time debug code"
+	default n
+	---help---
+	When defined special debug code is compiled in kernel image.
+	Some debug messages can be enabled/disabled using special sysfs command.
+	Used for Debug mode and can cause performance decrease.
+	Minory increase kernal image size.
+
+config  MV_ETH_STAT_ERR
+        bool "Collect error statistics"
+        default y
+	---help---
+	Marvell network interface driver collect minimal number of statistics.
+	Provide information only about error events. Doesn't effect performance.
+	Can be displayed using sysfs commands.
+
+config  MV_ETH_STAT_INF
+        bool "Collect event statistics"
+        default y
+        ---help---
+	Marvell network interface driver collect event statistics.
+	Provide more information about driver functionality and almost doesn't
+	effect performance. Can be displayed using sysfs command.
+
+config  MV_ETH_STAT_DBG
+        bool "Collect debug statistics"
+        default n
+        ---help---
+	Marvell network interface driver collect a lot of statistics.
+	Provide information about each event occurs in the driver.
+	Used for Debug mode and can cause performance decrease.
+	Can be displayed using sysfs command.
+
+config  MV_ETH_STAT_DIST
+        bool "Collect debug distribution statistics"
+        default n
+        ---help---
+        Marvell network interface driver collect a lot of statistics.
+        Used for Debug mode. Decrease performance.
+	Can be displayed using sysfs command.
+
+endmenu
+
+menu "Advanced Features"
+
+config  NET_SKB_HEADROOM
+        int "SKB headroom size"
+        default 64
+        ---help---
+          Customize SKB headroom size. Must be power of 2.
+
+config NET_SKB_RECYCLE
+        bool "Skb recycle"
+        default y
+        ---help---
+          Work-in-progress and experimental.
+
+          This option enables skb's to be returned via a callback at kfree to
+          the allocator to make a fastpath for very skb consuming network
+          applications.
+
+config NET_SKB_RECYCLE_DEF
+        depends on NET_SKB_RECYCLE
+        int "Default value for SKB recycle:  0 - disable, 1 - enable"
+        default 1
+        ---help---
+
+config  MV_ETH_RX_COAL_PKTS
+        int "Threshold [number of packets] for RX interrupt"
+        default 32
+        ---help---
+        Number of packets will be received before RX interrupt will be generated by HW.
+
+config  MV_ETH_RX_COAL_USEC
+        int "Threshold [usec] for RX interrupt"
+        default 100
+        ---help---
+        Time delay in usec before RX interrupt will be generated by HW if number of
+	received packets larger than 0 but smaller than MV_ETH_RX_COAL_PKTS
+
+endmenu
diff --git a/drivers/net/ethernet/marvell/pp3/Makefile b/drivers/net/ethernet/marvell/pp3/Makefile
new file mode 100644
index 0000000..ae85dec
--- /dev/null
+++ b/drivers/net/ethernet/marvell/pp3/Makefile
@@ -0,0 +1,7 @@
+#
+# Makefile for the Marvell PPv3 network driver.
+#
+
+obj-$(CONFIG_MV_PP3) += mv_pp3.o
+
+mv_pp3-objs := net_dev/mv_netdev.o
diff --git a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
new file mode 100644
index 0000000..e22f7a7
--- /dev/null
+++ b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
@@ -0,0 +1,79 @@
+/*#include <mvCopyright.h>*/
+
+#include <linux/kernel.h>
+#include <linux/version.h>
+#include <linux/netdevice.h>
+#include <linux/etherdevice.h>
+#include <linux/platform_device.h>
+#include <linux/skbuff.h>
+#include <linux/module.h>
+#include <linux/inetdevice.h>
+#include <linux/interrupt.h>
+/*#include <linux/mv_pp3.h>*/
+#include <asm/setup.h>
+#include <net/ip.h>
+#include <net/ipv6.h>
+
+#define MV_PP3_PORT_NAME        "mv_pp3_port"
+
+/* Support for platform driver */
+static int mv_pp3_probe(struct platform_device *pdev)
+{
+	pr_info("Probing Marvell PPv3 Network Driver\n");
+	return 0;
+}
+
+#ifdef CONFIG_CPU_IDLE
+int mv_pp3_suspend(struct platform_device *pdev, pm_message_t state)
+{
+/* TBD */
+	return 0;
+}
+
+int mv_pp3_resume(struct platform_device *pdev)
+{
+/* TBD */
+	return 0;
+}
+#endif	/* CONFIG_CPU_IDLE */
+
+static int mv_pp3_remove(struct platform_device *pdev)
+{
+	pr_info("Removing Marvell PPv3 Network Driver\n");
+	return 0;
+}
+
+static void mv_pp3_shutdown(struct platform_device *pdev)
+{
+	pr_info("Shutting Down Marvell PPv3 Network Driver\n");
+}
+
+static struct platform_driver mv_pp3_driver = {
+	.probe = mv_pp3_probe,
+	.remove = mv_pp3_remove,
+	.shutdown = mv_pp3_shutdown,
+#ifdef CONFIG_CPU_IDLE
+	.suspend = mv_pp3_suspend,
+	.resume = mv_pp3_resume,
+#endif /* CONFIG_CPU_IDLE */
+	.driver = {
+		.name = MV_PP3_PORT_NAME,
+	},
+};
+
+static int __init mv_pp3_init_module(void)
+{
+	return platform_driver_register(&mv_pp3_driver);
+}
+module_init(mv_pp3_init_module);
+
+static void __exit mv_pp3_cleanup_module(void)
+{
+	platform_driver_unregister(&mv_pp3_driver);
+}
+module_exit(mv_pp3_cleanup_module);
+
+
+MODULE_DESCRIPTION("Marvell PPv3 Network Driver - www.marvell.com");
+MODULE_AUTHOR("Dmitri Epshtein <dima@marvell.com>");
+MODULE_LICENSE("GPL");
-- 
1.7.5.4

