From f21fbd0729eeded251a390ccc3aa0d45a424ab6e Mon Sep 17 00:00:00 2001
From: Uri Eliyahu <uriel@marvell.com>
Date: Tue, 7 Jan 2014 12:53:57 +0200
Subject: [PATCH 1278/1825] pp2: add comments for BE support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 9743f495cf43c15870656af92b413645895a0c86

	- add big endians code comments

Change-Id: I9c3673921558a2d2aa7f7e2b9a79e5ccd85364bf
Signed-off-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5035
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../plat-armada/mv_hal/pp2/common/mvPp2Common.h    |   19 +++++++++++++++++++
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h   |    8 +++++++-
 2 files changed, 26 insertions(+), 1 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.h b/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.h
index 5fc4e54..bd2ed71 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.h
@@ -141,14 +141,33 @@ void mvPp2RegPrintNonZero2(MV_U32 reg_addr, char *reg_name, MV_U32 index);
 /*			PNC COMMON DEFINETIONS			      */
 /*--------------------------------------------------------------------*/
 
+/*
+ HW_BYTE_OFFS
+ return HW byte offset in 4 bytes register
+ _offs_: native offset (LE)
+ LE example: HW_BYTE_OFFS(1) = 1
+ BE example: HW_BYTE_OFFS(1) = 2
+*/
+
 #if defined(MV_CPU_LE)
 	#define HW_BYTE_OFFS(_offs_)		(_offs_)
 #else
 	#define HW_BYTE_OFFS(_offs_)		((3 - ((_offs_) % 4)) + (((_offs_) / 4) * 4))
 #endif
 
+
 #define TCAM_DATA_BYTE_OFFS_LE(_offs_)		(((_offs_) - ((_offs_) % 2)) * 2 + ((_offs_) % 2))
 #define TCAM_DATA_MASK_OFFS_LE(_offs_)		(((_offs_) * 2) - ((_offs_) % 2)  + 2)
+
+/*
+ TCAM_DATA_BYTE/MASK
+ tcam data devide into 4 bytes registers
+ each register include 2 bytes of data and 2 bytes of mask
+ the next macros calc data/mask offset in 4 bytes register
+ _offs_: native offset (LE) in data bytes array
+ relevant only for TCAM data bytes
+ used by PRS and CLS2
+*/
 #define TCAM_DATA_BYTE(_offs_)			(HW_BYTE_OFFS(TCAM_DATA_BYTE_OFFS_LE(_offs_)))
 #define TCAM_DATA_MASK(_offs_)			(HW_BYTE_OFFS(TCAM_DATA_MASK_OFFS_LE(_offs_)))
 
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h
index 38d8971..36eeb31 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h
@@ -183,7 +183,13 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 /*			endians support				*/
 /****************************************************************/
 
-/* TODO: share endians support defenitions between parser and cls2  */
+/*
+  TCAM_MASK_OFFS
+  return tcam fileds (AI/LKP_ID/PRT_ID) mask offset
+  not relevant for TCAM_DATA bytes
+  _offs_: native offset if LE
+	  swapped offset if BE
+*/
 
 #if defined(MV_CPU_LE)
 	#define TCAM_MASK_OFFS(_offs_)		((_offs_) + 2)
-- 
1.7.5.4

