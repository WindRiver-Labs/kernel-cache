From 7cabf778ebf5e624ae0d9c6e112e733f1ca5aa5f Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 6 Feb 2014 10:10:23 +0200
Subject: [PATCH 1348/1825] usb: aligned USB3.0 windows initialization
 sequence with USB2.0 hal

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 71267dc27a3199be773e1367a5ceec63e42f8571

	mv_hal @ mvUsbWinInit:
	- Merged USB3.0 windows init routine (mvUsb3WinInit) into existing mvUsbWinInit.
	  functional only for U-Boot, kernel initializes it's USB3 windows with specific SoC routines (mv_usb3_conf_mbus_windows)
	- Added USB3.0 windows base and control register addresses
	- Added isUsb3 Boolean to indicate currently selected interface (set as false for EHCI windows)
	  - U-Boot: using isUsb3 = MV_TRUE to configure XHCI windows, and MV_FALSE for EHCI windows
	  - Kernel: using isUsb3 = MV_FALSE for EHCI windows (XHCI windows are configured separately)

	U-Boot:
	Relocated USB init sequence from SoC specific mv_main_soc.c to generic mv_hal_if/mvSysUsb.c
	(prevent unnecessary duplicated init code for different SoCs)

Change-Id: Iec14cdd1896f87e1f2b58cc52166969a2eac9793
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5476
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c   |    2 +-
 arch/arm/mach-avantalp/mv_hal_if/mvSysUsb.c    |    2 +-
 arch/arm/plat-armada/mv_hal/usb/mvUsb.h        |    6 +++-
 arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c |   33 ++++++++++++++++-------
 arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h    |   15 +++++++++-
 5 files changed, 43 insertions(+), 15 deletions(-)

diff --git a/arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c b/arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c
index 2236878..01426c9 100644
--- a/arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c
+++ b/arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c
@@ -101,7 +101,7 @@ MV_STATUS mvSysUsbInit(MV_U32 dev, MV_BOOL isHost, MV_BOOL isUsb3)
 	else {
 		status = mvCtrlAddrWinMapBuild(addrWinMap, MAX_TARGETS + 1);
 		if (status == MV_OK)
-			status = mvUsbWinInit(dev, addrWinMap);
+			status = mvUsbWinInit(dev, addrWinMap, MV_FALSE);
 		if (status == MV_OK)
 			status = mvUsbHalInit(dev, isHost, &halData);
 	}
diff --git a/arch/arm/mach-avantalp/mv_hal_if/mvSysUsb.c b/arch/arm/mach-avantalp/mv_hal_if/mvSysUsb.c
index a16e806..a9b388b 100644
--- a/arch/arm/mach-avantalp/mv_hal_if/mvSysUsb.c
+++ b/arch/arm/mach-avantalp/mv_hal_if/mvSysUsb.c
@@ -107,7 +107,7 @@ MV_STATUS mvSysUsbInit(MV_U32 dev, MV_BOOL isHost)
 	} else {
 		status = mvCtrlAddrWinMapBuild(addrWinMap, MAX_TARGETS + 1);
 		if (status == MV_OK)
-			status = mvUsbWinInit(dev, addrWinMap);
+			status = mvUsbWinInit(dev, addrWinMap, MV_FALSE);
 
 		if (status == MV_OK)
 			status = mvUsbHalInit(dev, isHost, &halData);
diff --git a/arch/arm/plat-armada/mv_hal/usb/mvUsb.h b/arch/arm/plat-armada/mv_hal/usb/mvUsb.h
index ecd5d92..6bc99ee 100644
--- a/arch/arm/plat-armada/mv_hal/usb/mvUsb.h
+++ b/arch/arm/plat-armada/mv_hal/usb/mvUsb.h
@@ -98,7 +98,11 @@ void        mvUsbPowerUp(int port);
 void        mvUsbRegs(int dev);
 void        mvUsbCoreRegs(int dev, MV_BOOL isHost);
 
-MV_STATUS   mvUsbWinInit(MV_U32 dev, MV_UNIT_WIN_INFO *addrWinMap);
+#ifdef CONFIG_USB_XHCI_HCD
+MV_STATUS mvUsbWinInit(MV_U32 dev, MV_UNIT_WIN_INFO *addrWinMap, MV_BOOL isUsb3);
+#else
+MV_STATUS mvUsbWinInit(MV_U32 dev, MV_UNIT_WIN_INFO *addrWinMap);
+#endif
 MV_STATUS   mvUsbWinRead(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pDecWin);
 MV_STATUS   mvUsbWinWrite(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pDecWin);
 
diff --git a/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c b/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c
index 2e04579..83eb234 100644
--- a/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c
+++ b/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c
@@ -96,6 +96,10 @@ MV_TARGET usbAddrDecPrioTab[] = {
 	TBL_TERM
 };
 
+/* some routines API's can not be modified since they are using as a standard API for windows read routines
+ * So, we indicate USB3 usage with global (for mvUsbWinRead usage ) */
+MV_BOOL gIsUsb3 = MV_FALSE;
+
 /*******************************************************************************
 * usbWinOverlapDetect - Detect USB address windows overlapping
 *
@@ -185,6 +189,7 @@ MV_STATUS mvUsbWinWrite(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pDecWin)
 	}
 
 	/* Check if the requested window overlapps with current windows         */
+
 	if (MV_TRUE == usbWinOverlapDetect(dev, winNum, &pDecWin->addrWin)) {
 		mvOsPrintf("%s: ERR. Window %d overlap\n", __func__, winNum);
 		return MV_ERROR;
@@ -231,8 +236,8 @@ MV_STATUS mvUsbWinWrite(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pDecWin)
 	/* Update Base value  */
 	baseReg = (pDecWin->addrWin.baseLow & MV_USB_WIN_BASE_MASK);
 
-	MV_REG_WRITE(MV_USB_WIN_CTRL_REG(dev, winNum), sizeReg);
-	MV_REG_WRITE(MV_USB_WIN_BASE_REG(dev, winNum), baseReg);
+	MV_REG_WRITE(MV_USB_WIN_CTRL_REG(gIsUsb3, dev, winNum), sizeReg);
+	MV_REG_WRITE(MV_USB_WIN_BASE_REG(gIsUsb3, dev, winNum), baseReg);
 
 	return MV_OK;
 }
@@ -263,8 +268,8 @@ MV_STATUS mvUsbWinRead(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pDecWin)
 		return MV_NOT_SUPPORTED;
 	}
 
-	baseReg = MV_REG_READ(MV_USB_WIN_BASE_REG(dev, winNum));
-	sizeReg = MV_REG_READ(MV_USB_WIN_CTRL_REG(dev, winNum));
+	baseReg = MV_REG_READ(MV_USB_WIN_BASE_REG(gIsUsb3, dev, winNum));
+	sizeReg = MV_REG_READ(MV_USB_WIN_CTRL_REG(gIsUsb3, dev, winNum));
 
 	/* Check if window is enabled   */
 	if (sizeReg & MV_USB_WIN_ENABLE_MASK) {
@@ -287,23 +292,30 @@ MV_STATUS mvUsbWinRead(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pDecWin)
 * mvUsbWinInit -
 *
 * INPUT:
-*
+*	isUsb3 - indicate which interface's windows to configure
+*		 Used when compiled with XHCI support only
 * OUTPUT:
 *
 * RETURN:
 *       MV_ERROR if register parameters are invalid.
 *
 *******************************************************************************/
+#ifdef CONFIG_USB_XHCI_HCD
+MV_STATUS mvUsbWinInit(MV_U32 dev, MV_UNIT_WIN_INFO *addrWinMap, MV_BOOL isUsb3)
+#else
 MV_STATUS mvUsbWinInit(MV_U32 dev, MV_UNIT_WIN_INFO *addrWinMap)
+#endif
 {
 	MV_UNIT_WIN_INFO *addrDecWin;
-	MV_U32 winNum;
-	MV_U32 winPrioIndex = 0;
+	MV_U32 winNum, winPrioIndex = 0;
+
+#ifdef CONFIG_USB_XHCI_HCD
+	gIsUsb3 = isUsb3; /* if XHCI is in use, read Boolean to indicate requested interface */
+#endif
 
 	/* First disable all address decode windows */
 	for (winNum = 0; winNum < MV_USB_MAX_ADDR_DECODE_WIN; winNum++)
-		MV_REG_BIT_RESET(MV_USB_WIN_CTRL_REG(dev, winNum), MV_USB_WIN_ENABLE_MASK);
-
+		MV_REG_BIT_RESET(MV_USB_WIN_CTRL_REG(isUsb3, dev, winNum), MV_USB_WIN_ENABLE_MASK);
 
 	/* Go through all windows in user table until table terminator          */
 	winNum = 0;
@@ -314,12 +326,13 @@ MV_STATUS mvUsbWinInit(MV_U32 dev, MV_UNIT_WIN_INFO *addrWinMap)
 			/* Get the default attributes for that target window */
 			mvCtrlDefAttribGet(usbWin.target, &usbWin.addrWinAttr);
 #endif /* MV645xx || MV646xx */
-
 			if (MV_OK != mvUsbWinWrite(dev, winNum, addrDecWin))
 				return MV_ERROR;
 			winNum++;
+
 		}
 		winPrioIndex++;
 	}
+	gIsUsb3 = MV_FALSE;
 	return MV_OK;
 }
diff --git a/arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h b/arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h
index 6ee8def..c136ff7 100644
--- a/arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h
+++ b/arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h
@@ -197,8 +197,19 @@ extern "C" {
 /*******************************************/
 #define MV_USB_MAX_ADDR_DECODE_WIN  4
 
-#define MV_USB_WIN_CTRL_REG(dev, win)        (MV_USB_REGS_BASE(dev) + 0x320 + ((win)<<4))
-#define MV_USB_WIN_BASE_REG(dev, win)        (MV_USB_REGS_BASE(dev) + 0x324 + ((win)<<4))
+#if defined(CONFIG_USB_XHCI_HCD)
+#define MV_USB_WIN_CTRL_REG(isUsb3, dev, win)	(isUsb3 == MV_TRUE ? \
+						(MV_USB3_WIN_BASE(dev) + ((win) * 8)) : \
+						(MV_USB_REGS_BASE(dev) + 0x320 + ((win)<<4)))
+#define MV_USB_WIN_BASE_REG(isUsb3, dev, win)	(isUsb3 == MV_TRUE ? \
+						(MV_USB3_WIN_BASE(dev) + ((win) * 8) + 0x4) : \
+						(MV_USB_REGS_BASE(dev) + 0x324 + ((win)<<4)))
+#else
+#define MV_USB_WIN_CTRL_REG(isUsb3, dev, win)	(MV_USB_REGS_BASE(dev) + 0x320 + ((win)<<4))
+#define MV_USB_WIN_BASE_REG(isUsb3, dev, win)	(MV_USB_REGS_BASE(dev) + 0x324 + ((win)<<4))
+#endif
+
+
 
 /* BITs in Windows 0-3 Control and Base Registers */
 #define MV_USB_WIN_ENABLE_BIT               0
-- 
1.7.5.4

