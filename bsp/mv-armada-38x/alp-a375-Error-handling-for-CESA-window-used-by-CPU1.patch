From 0bd6f6c28276250294d212cb1aa06a45f5e4ef10 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Wed, 19 Feb 2014 18:45:22 +0200
Subject: [PATCH 1404/1825] alp, a375: Error handling for CESA window used by
 CPU1 WA in kernel

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit f43fefe4088aa31d7c605af01189935b18eac356

	Window number 8 is opened by kernel to the cesa, as a WA to
	initialize CPU1 (For Z revisions only) This window can not be
	assigned to any interface in U-Boot, since it conflicts
	with the CESA window in kernel

Change-Id: Ied37b3281a5628052aeb9f8f4bb21dc3c7046e3f
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5798
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/ctrlEnv/sys/mvCpuIf.c         |    8 ++++++++
 1 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvCpuIf.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvCpuIf.c
index 55b4103..5d6061b 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvCpuIf.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvCpuIf.c
@@ -156,6 +156,14 @@ MV_STATUS mvCpuIfInitForCpu(MV_U32 cpu, MV_CPU_DEC_WIN *cpuAddrWinMap)
 
 	/* Set IO Bypass base address and size according to the cpuAddrWinMap */
 	for (target = 0; cpuAddrWinMap[target].enable != TBL_TERM; target++) {
+		/* Window number 8 is opened by kernel to the cesa, as a WA to
+		** initialize CPU1 (For Z revisions only) This window can not
+		** be assigned to any interface in U-Boot, since it conflicts
+		** with the CESA window in kernel */
+		if ((EN == cpuAddrWinMap[target].enable) && (8 == cpuAddrWinMap[target].winNum) \
+				&& (mvCtrlRevGet() <= MV_88F66X0_Z3_ID))
+			mvOsPrintf("%s: Error: win #8 is configured as enabled: Win #8 can not be enabled by U-Boot, "\
+					"since allocated to CPU1 initialization sequence in kernel\n", __func__);
 		if ((MV_TARGET_IS_DRAM(target)) || (DIS == cpuAddrWinMap[target].enable))
 			continue;
 		if (cpuAddrWinMap[target].addrWin.baseLow == 0)
-- 
1.7.5.4

