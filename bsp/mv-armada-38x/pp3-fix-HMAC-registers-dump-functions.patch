From 76799147cac99de19e95391fade125ae0ae0dfb5 Mon Sep 17 00:00:00 2001
From: Yelena <yelena@marvell.com>
Date: Mon, 24 Mar 2014 12:03:16 +0200
Subject: [PATCH 1496/1825] pp3: fix HMAC registers dump functions

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 79d2a463ae7bfad0be1d52d889aca69d28b6f257

Change-Id: I3f16ca4be236385228f29712903378d2e4b6d44a
Signed-off-by: Yelena <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6625
Reviewed-by: Ernest Villion <ernestv@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c |   17 +++++++++--------
 drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h |    4 ++--
 2 files changed, 11 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c
index 2a6456c..62d54d1 100644
--- a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c
+++ b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c
@@ -424,14 +424,13 @@ void mv_pp3_hmac_global_regs_dump(void)
 
 static void mv_pp3_hmac_queue_show(struct mv_pp3_hmac_queue_ctrl *rxq)
 {
-	pr_info("\n-------------- HMAC RX queue (0x%p) -----------", rxq);
-	pr_info("\n *first = 0x%p", rxq->first);
-	pr_info("\n *next = 0x%p", rxq->next_proc);
-	pr_info("\n *end = 0x%p", rxq->end);
-	pr_info("\n occ_dg = %d", rxq->occ_dg);
-	pr_info("\n dummy_dg = %d", rxq->dummy_dg);
-	pr_info("\n size = %d", rxq->size);
-	pr_info("\n cfh_size = %d", rxq->cfh_size);
+	pr_info("*first = 0x%p", rxq->first);
+	pr_info("*next = 0x%p", rxq->next_proc);
+	pr_info("*end = 0x%p", rxq->end);
+	pr_info("occ_dg = %d", rxq->occ_dg);
+	pr_info("dummy_dg = %d", rxq->dummy_dg);
+	pr_info("size = %d", rxq->size);
+	pr_info("cfh_size = %d", rxq->cfh_size);
 	pr_info("\n");
 
 	return;
@@ -440,10 +439,12 @@ static void mv_pp3_hmac_queue_show(struct mv_pp3_hmac_queue_ctrl *rxq)
 
 void mv_pp3_hmac_rx_queue_show(int frame, int queue)
 {
+	pr_info("\n-------------- HMAC RX queue (0x%p) -----------", mv_hmac_rxq_handle[frame][queue]);
 	return mv_pp3_hmac_queue_show(mv_hmac_rxq_handle[frame][queue]);
 }
 
 void mv_pp3_hmac_tx_queue_show(int frame, int queue)
 {
+	pr_info("\n-------------- HMAC TX queue (0x%p) -----------", mv_hmac_txq_handle[frame][queue]);
 	return mv_pp3_hmac_queue_show(mv_hmac_txq_handle[frame][queue]);
 }
diff --git a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h
index d1862f5..b8fc589 100644
--- a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h
+++ b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h
@@ -285,7 +285,7 @@ static inline u8 *mv_pp3_hmac_txq_next_cfh(int frame, int queue, int size)
 
 	/* calculate number of unused datagram in the queue end */
 	end_free_dg = (qctrl->end - qctrl->next_proc) / MV_PP3_HMAC_DG_SIZE;
-	if ((end_free_dg >= size) && (end_free_dg <= (MV_PP3_CFH_MAX_SIZE / MV_PP3_HMAC_DG_SIZE))) {
+	if ((end_free_dg >= size) && (end_free_dg >= (MV_PP3_CFH_MAX_SIZE / MV_PP3_HMAC_DG_SIZE))) {
 		cfh_ptr = qctrl->next_proc;
 		qctrl->next_proc += (size * MV_PP3_HMAC_DG_SIZE);
 		qctrl->occ_dg += size;
@@ -309,7 +309,7 @@ static inline u8 *mv_pp3_hmac_txq_next_cfh(int frame, int queue, int size)
 
 		cfh->pkt_length = end_free_dg * MV_PP3_HMAC_DG_SIZE;
 		cfh->qm_cntrl = MV_PP3_HMAC_CFH_DUMMY; /* set bit 'W' */
-;		qctrl->dummy_dg = end_free_dg;
+		qctrl->dummy_dg = end_free_dg;
 	}
 	qctrl->next_proc = qctrl->first + (size * MV_PP3_HMAC_DG_SIZE);
 	qctrl->occ_dg += size;
-- 
1.7.5.4

