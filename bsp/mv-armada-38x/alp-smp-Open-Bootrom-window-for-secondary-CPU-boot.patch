From 488e757a409a55516332b7c0223be0b75dadb24f Mon Sep 17 00:00:00 2001
From: Shadi Ammouri <shadi@marvell.com>
Date: Tue, 11 Mar 2014 12:20:00 +0200
Subject: [PATCH 1453/1825] alp: smp: Open Bootrom window for secondary CPU
 boot

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 32bf84fefc04a5492d1ed823d73ffa8fece0503b

	Setup an address decode window for Bootrom to enable
	secondary CPU boot.
	This also maintains the WA needed for ALP-Zx devices that uses
	the crypto SRAM for secondary boot.

Change-Id: I4a33fb736033798954025e5b96310bac97f7d9c2
Signed-off-by: Shadi Ammouri <shadi@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6313
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/ca9x2.h   |    4 +-
 arch/arm/mach-avantalp/core.c    |   41 ++++++++++++++++++++-----------------
 arch/arm/mach-avantalp/platsmp.c |    6 ++--
 3 files changed, 27 insertions(+), 24 deletions(-)

diff --git a/arch/arm/mach-avantalp/ca9x2.h b/arch/arm/mach-avantalp/ca9x2.h
index a865abe..88f186a 100644
--- a/arch/arm/mach-avantalp/ca9x2.h
+++ b/arch/arm/mach-avantalp/ca9x2.h
@@ -1,9 +1,9 @@
 #ifndef __MACH_MV_CA9X2_H
 #define __MACH_MV_CA9X2_H
 
-#if defined(CONFIG_SMP) && defined(CONFIG_ALP_CPU1_ENABLE_WA)
+#if defined(CONFIG_SMP)
 void alp_secondary_startup(void);
-void alp_smp_cpu1_enable_wa(void);
+void alp_smp_secondary_boot_win_set(void);
 
 extern void *alp_smp_cpu1_enable_code_start;
 extern void *alp_smp_cpu1_enable_code_end;
diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index 2e4c509..3c3acbe 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -1509,27 +1509,33 @@ extern void printascii(const char *);
 extern MV_TARGET_ATTRIB mvTargetDefaultsArray[];
 
 /*******************************************************************************
- * SMP WA to enable CPU1
+ * SMP Init boot window
  * Note: This function is called before PUnit IO windows are configured.
  */
-#if defined(CONFIG_SMP) && defined(CONFIG_ALP_CPU1_ENABLE_WA)
-
-void __init alp_smp_cpu1_enable_wa(void)
+#if defined(CONFIG_SMP)
+void __init alp_smp_secondary_boot_win_set(void)
 {
 	MV_AHB_TO_MBUS_DEC_WIN mbus_win;
-	u32 code_len, win_num, sram_phys_base = 0xFFFF0000;
+	u32 code_len, win_num, win_phys_base = 0xFFFF0000;
+	MV_TARGET target;
 	void __iomem *sram_virt_base;
 
-	mbus_win.target			= CRYPT0_ENG;
-	mbus_win.addrWin.baseLow	= sram_phys_base;
+	if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID)
+		target			= CRYPT0_ENG;
+	else
+		target			= BOOT_ROM_CS;
+
+	mbus_win.target			= target;
+	mbus_win.addrWin.baseLow	= win_phys_base;
 	mbus_win.addrWin.baseHigh	= 0x0;
 	mbus_win.addrWin.size		= SZ_64K;
 	mbus_win.enable			= MV_TRUE;
 
-	if (mvAhbToMbusWinNumByTargetGet(CRYPT0_ENG, &win_num) != MV_OK) {
-		pr_err("%s: Error: mvAhbToMbusWinNumByTargetGet(target = %d) failed\n",
-		       __func__, CRYPT0_ENG);
-		return;
+	if (mvAhbToMbusWinNumByTargetGet(target, &win_num) != MV_OK) {
+		/* If not found, replace window #10.
+		** Worst case this will override another window which will be
+		** later fixed by mvCpuIfInit(). */
+		win_num = 10;
 	}
 
 	if (mvAhbToMbusWinSet(win_num, &mbus_win) != MV_OK) {
@@ -1538,15 +1544,12 @@ void __init alp_smp_cpu1_enable_wa(void)
 		return;
 	}
 
-	sram_virt_base = ioremap(sram_phys_base, SZ_64K);
+	if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID) {
+		sram_virt_base = ioremap(win_phys_base, SZ_64K);
 
-	code_len = 4 * (&alp_smp_cpu1_enable_code_end - &alp_smp_cpu1_enable_code_start);
-	memcpy(sram_virt_base, &alp_smp_cpu1_enable_code_start, code_len);
-}
-#else
-void __init alp_smp_cpu1_enable_wa(void)
-{
-	/* nothing */
+		code_len = 4 * (&alp_smp_cpu1_enable_code_end - &alp_smp_cpu1_enable_code_start);
+		memcpy(sram_virt_base, &alp_smp_cpu1_enable_code_start, code_len);
+	}
 }
 #endif
 
diff --git a/arch/arm/mach-avantalp/platsmp.c b/arch/arm/mach-avantalp/platsmp.c
index 48c2af1..8272849 100644
--- a/arch/arm/mach-avantalp/platsmp.c
+++ b/arch/arm/mach-avantalp/platsmp.c
@@ -73,10 +73,10 @@ void __init platform_smp_prepare_cpus(unsigned int max_cpus)
 	 * SMP WA to enable CPU1
 	 * Note: This function is called before PUnit IO windows are configured.
 	 */
-#if defined(CONFIG_SMP) && defined(CONFIG_ALP_CPU1_ENABLE_WA)
-	if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID)
-		alp_smp_cpu1_enable_wa();
+#if defined(CONFIG_SMP)
+	alp_smp_secondary_boot_win_set();
 #endif
+
 	/*
 	 * Write the address of secondary startup into the
 	 * system-wide flags register. The boot monitor waits
-- 
1.7.5.4

