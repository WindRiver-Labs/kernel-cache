From 3dcbb2d2345d228dbe923229fbc3c24f0c7ae9f0 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Tue, 6 Aug 2013 14:39:07 -0400
Subject: [PATCH 0929/1825] pp2: Cleanup and remove unused code

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c234f624bb0ca42a5151352dc89f6113c93c445b

	delete functions mvEthRegPrint and mvEthRegPrint2
	use functions mvPP2PrintReg and mvPP2PrintReg2 insteed
	change function name: mvPp2RegPrint2 -> mvPp2PrintReg2

Change-Id: I0c68f5844f019bb0c4951aec455eb924b2b80e93
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2953
Reviewed-by: Jonatan Farhadian <yonif@marvell.com>
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../plat-armada/mv_hal/pp2/common/mvPp2Common.c    |   22 ++------------
 .../plat-armada/mv_hal/pp2/common/mvPp2Common.h    |    7 +---
 .../arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c |   20 ++++++------
 arch/arm/plat-armada/mv_hal/pp2/plcr/mvPp2PlcrHw.c |   20 ++++++------
 arch/arm/plat-armada/mv_hal/pp2/pme/mvPp2PmeHw.c   |   30 ++++++++++----------
 5 files changed, 40 insertions(+), 59 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.c b/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.c
index 61a7042..8bd3cc2 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.c
@@ -87,35 +87,19 @@ int mvPp2RdReg(unsigned int offset)
 }
 
 int mvPp2SPrintReg(char *buf, unsigned int  reg_addr, char *reg_name)
-
 {
 	return mvOsSPrintf(buf, "  %-32s: 0x%x = 0x%08x\n", reg_name, reg_addr, mvPp2RdReg(reg_addr));
 }
 
-int mvPp2PrintReg(unsigned int reg_addr, char *reg_name)
-
+void mvPp2PrintReg(unsigned int reg_addr, char *reg_name)
 {
-	return mvOsPrintf("  %-32s: 0x%x = 0x%08x\n", reg_name, reg_addr, mvPp2RdReg(reg_addr));
+	mvOsPrintf("  %-32s: 0x%x = 0x%08x\n", reg_name, reg_addr, mvPp2RdReg(reg_addr));
 }
 
-void mvPp2RegPrint2(MV_U32 reg_addr, char *reg_name, MV_U32 index)
+void mvPp2PrintReg2(MV_U32 reg_addr, char *reg_name, MV_U32 index)
 {
 	char buf[64];
 
 	mvOsSPrintf(buf, "%s[%d]", reg_name, index);
 	mvOsPrintf("  %-32s: 0x%x = 0x%08x\n", buf, reg_addr, mvPp2RdReg(reg_addr));
 }
-
-void mvEthRegPrint(MV_U32 reg_addr, char *reg_name)
-{
-	mvOsPrintf("  %-32s: 0x%x = 0x%08x\n", reg_name, reg_addr, MV_REG_READ(reg_addr));
-}
-
-void mvEthRegPrint2(MV_U32 reg_addr, char *reg_name, MV_U32 index)
-{
-	char buf[64];
-
-	mvOsSPrintf(buf, "%s[%d]", reg_name, index);
-	mvOsPrintf("  %-32s: 0x%x = 0x%08x\n", buf, reg_addr, MV_REG_READ(reg_addr));
-}
-
diff --git a/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.h b/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.h
index 053d498..ea329f6 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/common/mvPp2Common.h
@@ -111,14 +111,11 @@ int mvPp2RdReg(unsigned int offset);
 
 int mvPp2WrReg(unsigned int offset, unsigned int  val);
 
-int mvPp2PrintReg(unsigned int  reg_addr, char *reg_name);
-void mvPp2RegPrint2(MV_U32 reg_addr, char *reg_name, MV_U32 index);
+void mvPp2PrintReg(unsigned int  reg_addr, char *reg_name);
+void mvPp2PrintReg2(MV_U32 reg_addr, char *reg_name, MV_U32 index);
 
 int mvPp2SPrintReg(char *buf, unsigned int  reg_addr, char *reg_name);
 
-void mvEthRegPrint(MV_U32 reg_addr, char *reg_name);
-void mvEthRegPrint2(MV_U32 reg_addr, char *reg_name, MV_U32 index);
-
 /*--------------------------------------------------------------------*/
 /*			PP2 COMMON DEFINETIONS			      */
 /*--------------------------------------------------------------------*/
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
index 8fcc47e..9b89078 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
@@ -80,18 +80,18 @@ MV_VOID mvPp2RxDmaRegsPrint(void)
 	mvOsPrintf("\n[RX DMA regs]\n");
 
 	for (i = 0; i < MV_BM_POOLS; i++)
-		mvPp2RegPrint2(MV_PP2_POOL_BUF_SIZE_REG(i), "MV_PP2_POOL_BUF_SIZE_REG", i);
+		mvPp2PrintReg2(MV_PP2_POOL_BUF_SIZE_REG(i), "MV_PP2_POOL_BUF_SIZE_REG", i);
 
 	mvOsPrintf("\n");
 
 	for (i = 0; i < MV_ETH_RXQ_TOTAL_NUM; i++)
-		mvPp2RegPrint2(MV_PP2_RXQ_CONFIG_REG(i), "MV_PP2_RXQ_CONFIG_REG", i);
+		mvPp2PrintReg2(MV_PP2_RXQ_CONFIG_REG(i), "MV_PP2_RXQ_CONFIG_REG", i);
 
 	mvOsPrintf("\n");
 
 	for (i = 0; i < MV_PP2_MAX_PORTS; i++) {
-		mvPp2RegPrint2(MV_PP2_PORT_HWF_CONFIG_REG(i), "MV_PP2_PORT_HWF_CONFIG_REG", i);
-		mvPp2RegPrint2(MV_PP2_RX_CTRL_REG(i), "MV_PP2_RX_CTRL_REG", i);
+		mvPp2PrintReg2(MV_PP2_PORT_HWF_CONFIG_REG(i), "MV_PP2_PORT_HWF_CONFIG_REG", i);
+		mvPp2PrintReg2(MV_PP2_RX_CTRL_REG(i), "MV_PP2_RX_CTRL_REG", i);
 	}
 	mvOsPrintf("\n");
 }
@@ -515,18 +515,18 @@ void mvPp2DropCntrs(int port)
 	if (MV_PON_PORT(port)) {
 #ifdef CONFIG_MV_INCLUDE_PON
 		for (i = 0; i < mvPp2HalData.maxTcont; i++) {
-			mvPp2RegPrint2(MV_PP2_TX_EARLY_DROP_REG(i), "MV_PP2_TX_EARLY_DROP_REG", i);
-			mvPp2RegPrint2(MV_PP2_TX_DESC_DROP_REG(i), "MV_PP2_TX_DESC_DROP_REG", i);
+			mvPp2PrintReg2(MV_PP2_TX_EARLY_DROP_REG(i), "MV_PP2_TX_EARLY_DROP_REG", i);
+			mvPp2PrintReg2(MV_PP2_TX_DESC_DROP_REG(i), "MV_PP2_TX_DESC_DROP_REG", i);
 		}
 #endif
 	} else {
 		i = MV_ETH_MAX_TCONT + port;
-		mvPp2RegPrint2(MV_PP2_TX_EARLY_DROP_REG(i), "MV_PP2_TX_EARLY_DROP_REG", i);
-		mvPp2RegPrint2(MV_PP2_TX_DESC_DROP_REG(i), "MV_PP2_TX_DESC_DROP_REG", i);
+		mvPp2PrintReg2(MV_PP2_TX_EARLY_DROP_REG(i), "MV_PP2_TX_EARLY_DROP_REG", i);
+		mvPp2PrintReg2(MV_PP2_TX_DESC_DROP_REG(i), "MV_PP2_TX_DESC_DROP_REG", i);
 	}
 	for (i = port * CONFIG_MV_ETH_RXQ; i < (port * CONFIG_MV_ETH_RXQ + CONFIG_MV_ETH_RXQ); i++) {
-		mvPp2RegPrint2(MV_PP2_RX_EARLY_DROP_REG(i), "MV_PP2_RX_EARLY_DROP_REG", i);
-		mvPp2RegPrint2(MV_PP2_RX_DESC_DROP_REG(i), "MV_PP2_RX_DESC_DROP_REG", i);
+		mvPp2PrintReg2(MV_PP2_RX_EARLY_DROP_REG(i), "MV_PP2_RX_EARLY_DROP_REG", i);
+		mvPp2PrintReg2(MV_PP2_RX_DESC_DROP_REG(i), "MV_PP2_RX_DESC_DROP_REG", i);
 	}
 }
 
diff --git a/arch/arm/plat-armada/mv_hal/pp2/plcr/mvPp2PlcrHw.c b/arch/arm/plat-armada/mv_hal/pp2/plcr/mvPp2PlcrHw.c
index 881bd59..cfd615d 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/plcr/mvPp2PlcrHw.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/plcr/mvPp2PlcrHw.c
@@ -79,25 +79,25 @@ void        mvPp2PlcrHwRegs(void)
 
 	mvOsPrintf("\n[PLCR registers: %d policers]\n", MV_PP2_PLCR_NUM);
 
-	mvEthRegPrint(MV_PP2_PLCR_ENABLE_REG,      "MV_PP2_PLCR_ENABLE_REG");
-	mvEthRegPrint(MV_PP2_PLCR_BASE_PERIOD_REG, "MV_PP2_PLCR_BASE_PERIOD_REG");
-	mvEthRegPrint(MV_PP2_PLCR_MIN_PKT_LEN_REG,   "MV_PP2_PLCR_MIN_PKT_LEN_REG");
-	mvEthRegPrint(MV_PP2_PLCR_EDROP_EN_REG,      "MV_PP2_PLCR_EDROP_EN_REG");
+	mvPp2PrintReg(MV_PP2_PLCR_ENABLE_REG,      "MV_PP2_PLCR_ENABLE_REG");
+	mvPp2PrintReg(MV_PP2_PLCR_BASE_PERIOD_REG, "MV_PP2_PLCR_BASE_PERIOD_REG");
+	mvPp2PrintReg(MV_PP2_PLCR_MIN_PKT_LEN_REG,   "MV_PP2_PLCR_MIN_PKT_LEN_REG");
+	mvPp2PrintReg(MV_PP2_PLCR_EDROP_EN_REG,      "MV_PP2_PLCR_EDROP_EN_REG");
 
 	for (i = 0; i < MV_PP2_PLCR_NUM; i++) {
 		mvOsPrintf("\n[Policer %d registers]\n", i);
 
 		mvPp2WrReg(MV_PP2_PLCR_TABLE_INDEX_REG, i);
-		mvEthRegPrint(MV_PP2_PLCR_COMMIT_TOKENS_REG, "MV_PP2_PLCR_COMMIT_TOKENS_REG");
-		mvEthRegPrint(MV_PP2_PLCR_EXCESS_TOKENS_REG, "MV_PP2_PLCR_EXCESS_TOKENS_REG");
-		mvEthRegPrint(MV_PP2_PLCR_BUCKET_SIZE_REG,   "MV_PP2_PLCR_BUCKET_SIZE_REG");
-		mvEthRegPrint(MV_PP2_PLCR_TOKEN_CFG_REG,     "MV_PP2_PLCR_TOKEN_CFG_REG");
+		mvPp2PrintReg(MV_PP2_PLCR_COMMIT_TOKENS_REG, "MV_PP2_PLCR_COMMIT_TOKENS_REG");
+		mvPp2PrintReg(MV_PP2_PLCR_EXCESS_TOKENS_REG, "MV_PP2_PLCR_EXCESS_TOKENS_REG");
+		mvPp2PrintReg(MV_PP2_PLCR_BUCKET_SIZE_REG,   "MV_PP2_PLCR_BUCKET_SIZE_REG");
+		mvPp2PrintReg(MV_PP2_PLCR_TOKEN_CFG_REG,     "MV_PP2_PLCR_TOKEN_CFG_REG");
 	}
 
 	mvOsPrintf("\nEarly Drop Thresholds for SW and HW forwarding\n");
 	for (i = 0; i < MV_PP2_PLCR_EDROP_THRESH_NUM; i += 2) {
-		mvEthRegPrint2(MV_PP2_PLCR_EDROP_CPU_TR_REG(i),   "MV_PP2_PLCR_EDROP_CPU_TR_REG", i);
-		mvEthRegPrint2(MV_PP2_PLCR_EDROP_HWF_TR_REG(i),   "MV_PP2_PLCR_EDROP_HWF_TR_REG", i);
+		mvPp2PrintReg2(MV_PP2_PLCR_EDROP_CPU_TR_REG(i),   "MV_PP2_PLCR_EDROP_CPU_TR_REG", i);
+		mvPp2PrintReg2(MV_PP2_PLCR_EDROP_HWF_TR_REG(i),   "MV_PP2_PLCR_EDROP_HWF_TR_REG", i);
 	}
 	mvOsPrintf("\nPer RXQ: Non zero early drop thresholds\n");
 	for (i = 0; i < MV_ETH_RXQ_TOTAL_NUM; i++) {
diff --git a/arch/arm/plat-armada/mv_hal/pp2/pme/mvPp2PmeHw.c b/arch/arm/plat-armada/mv_hal/pp2/pme/mvPp2PmeHw.c
index f58fee4..8f0460f 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/pme/mvPp2PmeHw.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/pme/mvPp2PmeHw.c
@@ -163,25 +163,25 @@ void        mvPp2PmeHwRegs(void)
 
 	mvOsPrintf("\n[PME registers]\n");
 
-	mvEthRegPrint(MV_PP2_PME_TBL_IDX_REG, "MV_PP2_PME_TBL_IDX_REG");
-	mvEthRegPrint(MV_PP2_PME_TCONT_THRESH_REG, "MV_PP2_PME_TCONT_THRESH_REG");
-	mvEthRegPrint(MV_PP2_PME_MTU_REG, "MV_PP2_PME_MTU_REG");
+	mvPp2PrintReg(MV_PP2_PME_TBL_IDX_REG, "MV_PP2_PME_TBL_IDX_REG");
+	mvPp2PrintReg(MV_PP2_PME_TCONT_THRESH_REG, "MV_PP2_PME_TCONT_THRESH_REG");
+	mvPp2PrintReg(MV_PP2_PME_MTU_REG, "MV_PP2_PME_MTU_REG");
 
 	for (i = 0; i < MV_PP2_PME_MAX_VLAN_ETH_TYPES; i++)
-		mvEthRegPrint2(MV_PP2_PME_VLAN_ETH_TYPE_REG(i), "MV_PP2_PME_VLAN_ETH_TYPE_REG", i);
+		mvPp2PrintReg2(MV_PP2_PME_VLAN_ETH_TYPE_REG(i), "MV_PP2_PME_VLAN_ETH_TYPE_REG", i);
 
-	mvEthRegPrint(MV_PP2_PME_DEF_VLAN_CFG_REG, "MV_PP2_PME_DEF_VLAN_CFG_REG");
+	mvPp2PrintReg(MV_PP2_PME_DEF_VLAN_CFG_REG, "MV_PP2_PME_DEF_VLAN_CFG_REG");
 	for (i = 0; i < MV_PP2_PME_MAX_DSA_ETH_TYPES; i++)
-		mvEthRegPrint2(MV_PP2_PME_DEF_DSA_CFG_REG(i), "MV_PP2_PME_DEF_DSA_CFG_REG", i);
-
-	mvEthRegPrint(MV_PP2_PME_DEF_DSA_SRC_DEV_REG, "MV_PP2_PME_DEF_DSA_SRC_DEV_REG");
-	mvEthRegPrint(MV_PP2_PME_TTL_ZERO_FRWD_REG, "MV_PP2_PME_TTL_ZERO_FRWD_REG");
-	mvEthRegPrint(MV_PP2_PME_PPPOE_ETYPE_REG, "MV_PP2_PME_PPPOE_ETYPE_REG");
-	mvEthRegPrint(MV_PP2_PME_PPPOE_DATA_REG, "MV_PP2_PME_PPPOE_DATA_REG");
-	mvEthRegPrint(MV_PP2_PME_PPPOE_LEN_REG, "MV_PP2_PME_PPPOE_LEN_REG");
-	mvEthRegPrint(MV_PP2_PME_PPPOE_PROTO_REG, "MV_PP2_PME_PPPOE_PROTO_REG");
-	mvEthRegPrint(MV_PP2_PME_CONFIG_REG, "MV_PP2_PME_CONFIG_REG");
-	mvEthRegPrint(MV_PP2_PME_STATUS_1_REG, "MV_PP2_PME_STATUS_1_REG");
+		mvPp2PrintReg2(MV_PP2_PME_DEF_DSA_CFG_REG(i), "MV_PP2_PME_DEF_DSA_CFG_REG", i);
+
+	mvPp2PrintReg(MV_PP2_PME_DEF_DSA_SRC_DEV_REG, "MV_PP2_PME_DEF_DSA_SRC_DEV_REG");
+	mvPp2PrintReg(MV_PP2_PME_TTL_ZERO_FRWD_REG, "MV_PP2_PME_TTL_ZERO_FRWD_REG");
+	mvPp2PrintReg(MV_PP2_PME_PPPOE_ETYPE_REG, "MV_PP2_PME_PPPOE_ETYPE_REG");
+	mvPp2PrintReg(MV_PP2_PME_PPPOE_DATA_REG, "MV_PP2_PME_PPPOE_DATA_REG");
+	mvPp2PrintReg(MV_PP2_PME_PPPOE_LEN_REG, "MV_PP2_PME_PPPOE_LEN_REG");
+	mvPp2PrintReg(MV_PP2_PME_PPPOE_PROTO_REG, "MV_PP2_PME_PPPOE_PROTO_REG");
+	mvPp2PrintReg(MV_PP2_PME_CONFIG_REG, "MV_PP2_PME_CONFIG_REG");
+	mvPp2PrintReg(MV_PP2_PME_STATUS_1_REG, "MV_PP2_PME_STATUS_1_REG");
 
 	mvOsPrintf("\nMV_PP2_PME_STATUS_2_REG[txp] registers that are not zero\n");
 	for (i = 0; i < MV_PP2_TOTAL_TXP_NUM; i++) {
-- 
1.7.5.4

