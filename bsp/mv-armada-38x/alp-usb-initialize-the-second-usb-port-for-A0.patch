From 678e1961260f1b627bf4cd1089beec385b3faa9f Mon Sep 17 00:00:00 2001
From: Joe Zhou <shjzhou@marvell.com>
Date: Mon, 17 Feb 2014 13:07:08 +0800
Subject: [PATCH 1432/1825] alp: usb: initialize the second usb port for A0

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 3c7e0ea3a446197034f168d0f71ac2bfd2fb01c0

	Duplicate initialization functions for Z1 and A0
	For A0 USB3,
		Remove UTMI PHY initialization
		Remove LFPS WA
		Remove CPU windows for USB3 register accessing
		Change USB3 base register offset

Signed-off-by: Joe Zhou <shjzhou@marvell.com>

Change-Id: Ie8291d4e98f6dbb6c7d841a0592c86bda37bfea7
Reviewed-on: http://vgitil04.il.marvell.com:8080/5677
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/Kconfig                     |   10 --
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |    2 +-
 arch/arm/mach-avantalp/include/mach/avantalp.h     |    3 +-
 arch/arm/mach-avantalp/sysmap.c                    |   46 +++++++-
 arch/arm/mach-avantalp/usb.c                       |  130 +++++++++++--------
 arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c     |    1 +
 6 files changed, 122 insertions(+), 70 deletions(-)

diff --git a/arch/arm/mach-avantalp/Kconfig b/arch/arm/mach-avantalp/Kconfig
index 25bcc03..1b8c859 100644
--- a/arch/arm/mach-avantalp/Kconfig
+++ b/arch/arm/mach-avantalp/Kconfig
@@ -78,16 +78,6 @@ config AVANTA_LP_USE_IRQ_INTERRUPT_ACK
 	help
 	  No help currently.
 
-
-config AVANTA_LP_Z1_USB3_LFPS_FREQ_WA
-	bool "Enable the LFPS frequency workaround for USB3"
-	default y
-	help
-	  This flag enables a workaround for USB3 in avanta LP. It
-	  fixes the USB3 LFPS timing to fix some clock issues
-	  in the integration of USB3. This WA is needed only
-	  for Z1 devices
-
 config AVANTA_LP_USE_LEGACY_USB2
 	bool "Use legacy USB2 IP instead of USB3 IP"
 	default n
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index 4066ad6..46d7b94 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -132,7 +132,7 @@ extern "C" {
 
 #define MV_PEX_IF_REGS_OFFSET(pexIf)            (0x40000 + (pexIf * 0x4000))
 #define MV_USB_REGS_OFFSET(dev)                 (0x50000)
-#define MV_USB3_REGS_OFFSET(dev)                (0x5FF80)
+#define MV_USB3_REGS_OFFSET(dev)                ((mvCtrlRevGet() <= MV_88F66X0_Z3_ID) ? 0x5ff80 : 0x5b880)
 #define MV_XOR_REGS_OFFSET(unit)                (0x60800)
 #define MV_CESA_TDMA_REGS_OFFSET(chanNum)       (0x90000 + (chanNum * 0x2000))
 #define MV_CESA_REGS_OFFSET(chanNum)            (0x9D000 + (chanNum * 0x2000))
diff --git a/arch/arm/mach-avantalp/include/mach/avantalp.h b/arch/arm/mach-avantalp/include/mach/avantalp.h
index e028faa..494dc09 100644
--- a/arch/arm/mach-avantalp/include/mach/avantalp.h
+++ b/arch/arm/mach-avantalp/include/mach/avantalp.h
@@ -86,7 +86,8 @@
 
 #define IOCC_WA_WIN0_PHYS_BASE		0xFF000000
 
-#define USB3_REGS_PHYS_BASE		0xFF100000
+#define USB3_REGS_PHYS_BASE		(INTER_REGS_PHYS_BASE + 0x58000)
+#define USB3_REGS_PHYS_BASE_Z   (0xFF100000)
 #define USB3_REGS_SIZE			_128K
 
 #define TIMER_PHYS_BASE       (INTER_REGS_PHYS_BASE + MV_CNTMR_REGS_OFFSET)
diff --git a/arch/arm/mach-avantalp/sysmap.c b/arch/arm/mach-avantalp/sysmap.c
index 6d9cf1a..8db7026 100644
--- a/arch/arm/mach-avantalp/sysmap.c
+++ b/arch/arm/mach-avantalp/sysmap.c
@@ -38,7 +38,7 @@ struct map_desc MEM_TABLE[] = {
 	{ DFEV_VIRT_BASE,		__phys_to_pfn(DFEV_PHYS_BASE),		SZ_1M,		MT_DEVICE },
 };
 
-MV_CPU_DEC_WIN SYSMAP_ALP_6660[] = {
+MV_CPU_DEC_WIN SYSMAP_ALP_6660_Z[] = {
 	/* base low			base high	size			WinNum			enable */
 	{{SDRAM_CS0_BASE,		0,	SDRAM_CS0_SIZE		},	0xFFFFFFFF,		DIS},	/* SDRAM_CS0 */
 	{{SDRAM_CS1_BASE,		0,	SDRAM_CS1_SIZE		},	0xFFFFFFFF,		DIS},	/* SDRAM_CS1 */
@@ -64,7 +64,7 @@ MV_CPU_DEC_WIN SYSMAP_ALP_6660[] = {
 	{{TBL_UNUSED,			0,	TBL_UNUSED,		},	TBL_UNUSED,		DIS},	/* SPI_CS7 */
 	{{BOOTROM_PHYS_BASE,		0,	BOOTROM_SIZE		},	9,			DIS},	/* BOOTROM */
 	{{DEVICE_BOOTCS_PHYS_BASE,	0,	DEVICE_BOOTCS_SIZE	},	10,			DIS},	/* DEV_BOOCS */
-	{{USB3_REGS_PHYS_BASE,		0,	USB3_REGS_SIZE		},	11,			EN},	/* USB3 */
+	{{USB3_REGS_PHYS_BASE_Z,    0,  USB3_REGS_SIZE      },  11,         EN},    /* USB3 */
 	{{CRYPT_ENG_PHYS_BASE(0),	0,	CRYPT_ENG_SIZE		},	12,			EN},	/* CRYPT_ENG */
 	{{PP2_CPU0_PHYS_BASE,		0,	PP2_SIZE		},	13,			EN},	/* PP2 */
 #ifdef CONFIG_SMP
@@ -76,6 +76,43 @@ MV_CPU_DEC_WIN SYSMAP_ALP_6660[] = {
 	{{TBL_TERM,			TBL_TERM,	TBL_TERM	},	TBL_TERM,		TBL_TERM}
 };
 
+MV_CPU_DEC_WIN SYSMAP_ALP_6660[] = {
+		/* base low        base high  size                  WinNum      enable */
+		{{SDRAM_CS0_BASE,          0, SDRAM_CS0_SIZE },     0xFFFFFFFF, DIS}, /* SDRAM_CS0 */
+		{{SDRAM_CS1_BASE,          0, SDRAM_CS1_SIZE },     0xFFFFFFFF, DIS}, /* SDRAM_CS1 */
+		{{SDRAM_CS2_BASE,          0, SDRAM_CS2_SIZE },     0xFFFFFFFF, DIS}, /* SDRAM_CS2 */
+		{{SDRAM_CS3_BASE,          0, SDRAM_CS3_SIZE },     0xFFFFFFFF, DIS}, /* SDRAM_CS3 */
+		{{DEVICE_CS0_PHYS_BASE,    0, DEVICE_CS0_SIZE, },   8,          EN},  /* DEVICE_CS0 */
+		{{DEVICE_CS1_PHYS_BASE,    0, DEVICE_CS1_SIZE, },   TBL_UNUSED, DIS}, /* DEVICE_CS1 */
+		{{DEVICE_CS2_PHYS_BASE,    0, DEVICE_CS2_SIZE, },   TBL_UNUSED, DIS}, /* DEVICE_CS2 */
+		{{DEVICE_CS3_PHYS_BASE,    0, DEVICE_CS3_SIZE, },   TBL_UNUSED, DIS}, /* DEVICE_CS3 */
+		{{PEX0_MEM_PHYS_BASE,      0, PEX0_MEM_SIZE },      0,          EN},  /* PEX0_MEM */
+		{{PEX0_IO_PHYS_BASE,       0, PEX0_IO_SIZE },       1,          EN},  /* PEX0_IO */
+		{{PEX1_MEM_PHYS_BASE,      0, PEX1_MEM_SIZE },      2,          EN},  /* PEX1_MEM */
+		{{PEX1_IO_PHYS_BASE,       0, PEX1_IO_SIZE },       3,          EN},  /* PEX1_IO */
+		{{INTER_REGS_PHYS_BASE,    0, INTER_REGS_SIZE },    MV_AHB_TO_MBUS_INTREG_WIN, EN}, /* INTER_REGS */
+		{{UART_REGS_BASE,          0, UART_SIZE },          TBL_UNUSED, DIS}, /* DMA_UART */
+		{{SPI_CS0_PHYS_BASE,       0, SPI_CS0_SIZE },       14,         EN},  /* SPI_CS0 */
+		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* SPI_CS1 */
+		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* SPI_CS2 */
+		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* SPI_CS3 */
+		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* SPI_CS4 */
+		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* SPI_CS5 */
+		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* SPI_CS6 */
+		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* SPI_CS7 */
+		{{BOOTROM_PHYS_BASE,       0, BOOTROM_SIZE },       9,          DIS}, /* BOOTROM */
+		{{DEVICE_BOOTCS_PHYS_BASE, 0, DEVICE_BOOTCS_SIZE }, 10,         DIS}, /* DEV_BOOCS */
+		{{CRYPT_ENG_PHYS_BASE(0),  0, CRYPT_ENG_SIZE },     12,         EN},  /* CRYPT_ENG */
+		{{PP2_CPU0_PHYS_BASE,      0, PP2_SIZE },           13,         EN},  /* PP2 */
+#ifdef CONFIG_SMP
+		{{PP2_CPU1_PHYS_BASE,      0, PP2_SIZE },           15,         EN},  /* PP2 */
+#else
+		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* PP2 */
+#endif
+		{{DFEV_PHYS_BASE,          0, DFEV_SIZE, },         7,          EN},  /* VOICE */
+		{{TBL_TERM, TBL_TERM, TBL_TERM }, TBL_TERM, TBL_TERM}
+};
+
 MV_CPU_DEC_WIN SYSMAP_ALP_6650[] = {
 	/* base low			base high	size			WinNum			enable */
 	{{SDRAM_CS0_BASE,		0,	SDRAM_CS0_SIZE		},	0xFFFFFFFF,		DIS},	/* SDRAM_CS0 */
@@ -157,7 +194,10 @@ MV_CPU_DEC_WIN *mv_sys_map(void)
 		break;
 	case MV_6660_DEV_ID:
 	case MV_6665_DEV_ID:
-		map = SYSMAP_ALP_6660;
+		if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID)
+			map = SYSMAP_ALP_6660_Z;
+		else
+			map = SYSMAP_ALP_6660;
 		break;
 	case MV_6650_DEV_ID:
 	case MV_6650F_DEV_ID:
diff --git a/arch/arm/mach-avantalp/usb.c b/arch/arm/mach-avantalp/usb.c
index 2497bf4..bd0399b 100644
--- a/arch/arm/mach-avantalp/usb.c
+++ b/arch/arm/mach-avantalp/usb.c
@@ -52,7 +52,7 @@
 u32 mvIsUsbHost = 0x03;
 
 #define MV_USB_DMA_MASK         0xffffffff
-#define MAX_USB_PORTS           1
+#define MAX_USB_PORTS           2
 
 static char usb_dev_name[]  = "mv_udc";
 static char usb_host_name[] = "ehci_marvell";
@@ -70,19 +70,24 @@ static void mv_usb_release(struct device *dev)
 	kfree(pdev);
 }
 
+/*
+ * mv_usb2_init
+ * Params:
+ * start: first device number
+ * num: number of device to initialize
+ */
 static int __init mv_usb2_init(void)
 {
-	int status, dev, num, isHost;
+	int status, dev, isHost, num;
 	char*                   name_ptr;
 	struct platform_device* mv_usb_dev_ptr;
-	int irq_num[MAX_USB_PORTS] = { IRQ_GLOBAL_USB2_IP };
+	int irq_num[MAX_USB_PORTS] = { IRQ_GLOBAL_USB2_IP,  IRQ_GLOBAL_USB2_IP + 1};
 
-	num = 1;
-	/*num = mvCtrlUsbMaxGet();
+	num = mvCtrlUsbMaxGet();
 	if (num > MAX_USB_PORTS) {
 		printk("WARNING: Limited USB ports number to %d\n", MAX_USB_PORTS);
 		num = MAX_USB_PORTS;
-	}*/
+	}
 
 	for (dev = 0; dev < num; dev++) {
 		if (MV_FALSE == mvCtrlPwrClckGet(USB_UNIT_ID, dev)) {
@@ -210,9 +215,16 @@ void __init mv_usb3_init(struct mbus_dram_target_info *dram)
 	u8 __iomem *usb_mac_regs;
 	int reg, mask;
 
-	if (MV_FALSE == mvCtrlPwrClckGet(USB_UNIT_ID, 0)) {
-		pr_warn("Warning: Integrated USB3 is Powered Off\n");
-		return;
+	if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID) {
+		if (MV_FALSE == mvCtrlPwrClckGet(USB_UNIT_ID, 0)) {
+			pr_warn("Warning: Integrated USB3 is Powered Off\n");
+			return;
+		}
+	} else {
+		if (MV_FALSE == mvCtrlPwrClckGet(USB3_UNIT_ID, 0)) {
+			pr_warn("Warning: Integrated USB3 is Powered Off\n");
+			return;
+		}
 	}
 
 	if (MV_FALSE == mvUnitMapIsMine(USB0))
@@ -226,8 +238,12 @@ void __init mv_usb3_init(struct mbus_dram_target_info *dram)
 	}
 
 	/* Setup XHCI resources */
+	if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID) {
+		mv_usb3_resources[0].start = USB3_REGS_PHYS_BASE_Z;
+		mv_usb3_resources[0].end = USB3_REGS_PHYS_BASE_Z + USB3_XHCI_REGS_SIZE - 1;
+	}
 	ret = platform_device_add_resources(xhci, mv_usb3_resources,
-			ARRAY_SIZE(mv_usb3_resources));
+				ARRAY_SIZE(mv_usb3_resources));
 	if (ret) {
 		pr_err("Couldn't add resources to XHCI device\n");
 		goto err1;
@@ -240,30 +256,30 @@ void __init mv_usb3_init(struct mbus_dram_target_info *dram)
 	mv_usb3_conf_mbus_windows((void *)(INTER_REGS_VIRT_BASE +
 				MV_USB3_REGS_BASE(0)), dram);
 
-#ifdef CONFIG_AVANTA_LP_Z1_USB3_LFPS_FREQ_WA
-/*
- * All defines below are used for a temporary workaround and therefore
- * are placed inside the code and not in an include file
- */
-#define USB3_MAC_REGS_BASE		(0x10000)
-#define USB3_MAC_REGS_SIZE		(0x500)
-#define USB3_CNTR_PULSE_WIDTH_OFFSET	(0x454)
-#define REF_CLK_100NS_OFFSET		(24)
-#define REF_CLK_100NS_MASK		(0xFF)
-
-	/* Modify the LFPS timing to fix clock issues on ALP-Z1 */
-	usb_mac_regs = (u8 *)ioremap_nocache(USB3_REGS_PHYS_BASE +
-			USB3_MAC_REGS_BASE, USB3_MAC_REGS_SIZE);
-	if (!usb_mac_regs) {
-		pr_err("Failed to map USB3 MAC registers\n");
-		goto err1;
-	}
+	if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID) {
+		/*
+		 * All defines below are used for a temporary workaround and therefore
+		 * are placed inside the code and not in an include file
+		 */
+	#define USB3_MAC_REGS_BASE		(0x10000)
+	#define USB3_MAC_REGS_SIZE		(0x500)
+	#define USB3_CNTR_PULSE_WIDTH_OFFSET	(0x454)
+	#define REF_CLK_100NS_OFFSET		(24)
+	#define REF_CLK_100NS_MASK		(0xFF)
+
+		/* Modify the LFPS timing to fix clock issues on ALP-Z1 */
+		usb_mac_regs = (u8 *)ioremap_nocache(USB3_REGS_PHYS_BASE_Z +
+				USB3_MAC_REGS_BASE, USB3_MAC_REGS_SIZE);
+		if (!usb_mac_regs) {
+			pr_err("Failed to map USB3 MAC registers\n");
+			goto err1;
+		}
 
-	reg = readl(usb_mac_regs + USB3_CNTR_PULSE_WIDTH_OFFSET);
-	mask = ~(REF_CLK_100NS_MASK << REF_CLK_100NS_OFFSET);
-	reg = (reg & mask) | (0x10 << REF_CLK_100NS_OFFSET);
-	writel(reg, usb_mac_regs + USB3_CNTR_PULSE_WIDTH_OFFSET);
-#endif
+		reg = readl(usb_mac_regs + USB3_CNTR_PULSE_WIDTH_OFFSET);
+		mask = ~(REF_CLK_100NS_MASK << REF_CLK_100NS_OFFSET);
+		reg = (reg & mask) | (0x10 << REF_CLK_100NS_OFFSET);
+		writel(reg, usb_mac_regs + USB3_CNTR_PULSE_WIDTH_OFFSET);
+	}
 
 	/* Register the device */
 	ret = platform_device_add(xhci);
@@ -289,33 +305,37 @@ void __init mv_usb_init(struct mbus_dram_target_info *dram)
 	int use_usb3_ip = 0;
 	MV_STATUS status;
 
-	/* Enable USB3 only for 6660 devices */
-	/*
-	 * Temporarily disable the USB2 PHY init since it disrupts
-	 * USB3 functionality
-	 */
+	if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID) {
+		/* Enable USB3 only for 6660 devices */
 #ifndef CONFIG_AVANTA_LP_USE_LEGACY_USB2
-	if (mvCtrlModelGet() == MV_6660_DEV_ID) {
-		use_usb3_ip = 1;
+		if (mvCtrlModelGet() == MV_6660_DEV_ID) {
+			use_usb3_ip = 1;
 #if 0
-		/* Initialize the USB2 PHY needed for USB3 functionality */
-		status = mvSysUsbInit(0, 1);
-		if (status != MV_OK) {
-			pr_info("Error: mvSysUsbInit failed with code %d\n", status);
-			return;
-		}
+			/* Initialize the USB2 PHY needed for USB3 functionality */
+			status = mvSysUsbInit(0, 1);
+			if (status != MV_OK) {
+				pr_info("Error: mvSysUsbInit failed with code %d\n", status);
+				return;
+			}
 #endif
-	}
+		}
 #endif
 
-	/* Select USB3 IP (which supports USB2) or legacy USB2 IP*/
-	reg = readl(INTER_REGS_VIRT_BASE + USB_CLUSTER_CONTROL);
-	reg = (reg & (~0x1)) | use_usb3_ip;
-	writel(reg, INTER_REGS_VIRT_BASE + USB_CLUSTER_CONTROL);
+		/* Select USB3 IP (which supports USB2) or legacy USB2 IP*/
+		reg = readl(INTER_REGS_VIRT_BASE + USB_CLUSTER_CONTROL);
+		reg = (reg & (~0x1)) | use_usb3_ip;
+		writel(reg, INTER_REGS_VIRT_BASE + USB_CLUSTER_CONTROL);
 
-	if (use_usb3_ip)
-		mv_usb3_init(dram);
-	else
-		mv_usb2_init();
+		if (use_usb3_ip)
+			mv_usb3_init(dram);
+		else
+			mv_usb2_init();
+	} else {
+		if (mvCtrlUsb3MaxGet() > 0)
+			mv_usb3_init(dram);
+
+		if (mvCtrlUsbMaxGet() > 0)
+			mv_usb2_init();
+	}
 }
 
diff --git a/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c b/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c
index 83eb234..8715018 100644
--- a/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c
+++ b/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c
@@ -65,6 +65,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "mvCommon.h"
 #include "mvSysHwConfig.h"
 #include "mvOs.h"
+#include "ctrlEnv/mvCtrlEnvLib.h"
 #include "ctrlEnv/mvCtrlEnvSpec.h"
 #include "mvUsbRegs.h"
 #include "mvUsb.h"
-- 
1.7.5.4

