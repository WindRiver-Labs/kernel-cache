From f05a2d46cc0bcf4716b4701287188a873a1df0c3 Mon Sep 17 00:00:00 2001
From: Igor Patrik <igorp@marvell.com>
Date: Tue, 23 Jul 2013 14:05:28 +0200
Subject: [PATCH 0886/1825] axp:uart: WA prevents storm of uart interrupts

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c82c674008c0307580bbff8cfc8f608a691b6644

	the WA ported from kernel 3.2

Change-Id: I3747886a6e8a4944956b138d301d7cf36a1af27d
Signed-off-by: Igor Patrik <igorp@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2802
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/tty/serial/8250/8250.c |   26 +++++++++++++++++++++++++-
 1 files changed, 25 insertions(+), 1 deletions(-)

diff --git a/drivers/tty/serial/8250/8250.c b/drivers/tty/serial/8250/8250.c
index dff6214..dabb52d 100644
--- a/drivers/tty/serial/8250/8250.c
+++ b/drivers/tty/serial/8250/8250.c
@@ -1533,14 +1533,38 @@ static irqreturn_t serial8250_interrupt(int irq, void *dev_id)
 	do {
 		struct uart_8250_port *up;
 		struct uart_port *port;
+		unsigned int iir;
 
 		up = list_entry(l, struct uart_8250_port, list);
 		port = &up->port;
 
+#if !defined(CONFIG_ARCH_ARMADA370) && !defined(CONFIG_ARCH_ARMADA_XP)
 		if (port->handle_irq(port)) {
 			handled = 1;
 			end = NULL;
-		} else if (end == NULL)
+		}
+#endif
+#if defined(CONFIG_ARCH_ARMADA370) || defined(CONFIG_ARCH_ARMADA_XP)
+		iir = serial_in(up, UART_IIR);
+		if (!(iir & UART_IIR_NO_INT)) {
+			serial8250_handle_irq(port, iir);
+			handled = 1;
+			end = NULL;
+		} else if ((up->port.iotype == UPIO_DWAPB ||
+						up->port.iotype == UPIO_DWAPB32) &&
+							(iir & UART_IIR_BUSY) == UART_IIR_BUSY) {
+			/* The DesignWare APB UART has an Busy Detect (0x07)
+			* interrupt meaning an LCR write attempt occurred while the
+			* UART was busy. The interrupt must be cleared by reading
+			* the UART status register (USR) and the LCR re-written. */
+			unsigned int status;
+			status = *(volatile u32 *)up->port.private_data;
+			/* serial_out(up, UART_LCR, up->lcr); */
+			handled = 1;
+			end = NULL;
+		}
+#endif
+		else if (end == NULL)
 			end = l;
 
 		l = l->next;
-- 
1.7.5.4

