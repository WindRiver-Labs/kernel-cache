From c81456e823d1b771cc2efad85e8348f79a770db5 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Thu, 31 Oct 2013 11:25:36 -0400
Subject: [PATCH 1063/1825] pp2: return buffer physical address on BM
 allocation

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 937cf5856ad3d2b832437a9d102e6c6120068b03

	- Change prototype for mvBmPoolGet() function
	- Mostly for debug and sanity check purposes

Change-Id: I9261610d276fc3917067ab17702bb84ea3f26513
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4208
Reviewed-by: Yelena Krivosheev <yelena@marvell.com>
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |    5 ++++-
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    4 ++--
 arch/arm/plat-armada/mv_hal/pp2/bm/mvBm.h          |    8 +++++---
 3 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 93a1fa1..0a02ef4 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -2373,6 +2373,7 @@ static void mv_eth_tx_frag_process(struct eth_port *pp, struct sk_buff *skb, str
 static int mv_eth_pool_free(int pool, int num)
 {
 	int i = 0, buf_size, total_size;
+	u32 pa;
 	struct bm_pool *ppool = &mv_eth_pool[pool];
 	bool free_all = false;
 
@@ -2392,12 +2393,14 @@ static int mv_eth_pool_free(int pool, int num)
 
 	while (i < num) {
 		MV_U32 *va;
-		va = (MV_U32 *)mvBmPoolGet(pool);
+		va = (MV_U32 *)mvBmPoolGet(pool, &pa);
 		if (va == 0)
 			break;
 
 		va = (MV_U32 *)MV_32BIT_LE((MV_U32)va);
 
+	/*	pr_info("%4d: phys_addr=0x%x, virt_addr=%p\n", i, pa, va);*/
+
 		if (!MV_ETH_BM_POOL_IS_HWF(ppool->type)) {
 			mv_eth_skb_free((struct sk_buff *)va);
 		} else { /* HWF pool */
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index 4e7f98a..6dd84f6 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -44,7 +44,7 @@ disclaimer.
 #include "bm/mvBm.h"
 
 #ifndef CONFIG_MV_PON_TCONTS
-# define CONFIG_MV_PON_TCONTS 1
+# define CONFIG_MV_PON_TCONTS 16
 #endif
 
 /******************************************************
@@ -760,7 +760,7 @@ static inline MV_U32 mv_eth_pool_get(int pool)
 	unsigned long flags = 0;
 
 	MV_ETH_LIGHT_LOCK(flags);
-	bufCookie = mvBmPoolGet(pool);
+	bufCookie = mvBmPoolGet(pool, NULL);
 	MV_ETH_LIGHT_UNLOCK(flags);
 	return bufCookie;
 }
diff --git a/arch/arm/plat-armada/mv_hal/pp2/bm/mvBm.h b/arch/arm/plat-armada/mv_hal/pp2/bm/mvBm.h
index 591a927..bb01023 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/bm/mvBm.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/bm/mvBm.h
@@ -119,12 +119,14 @@ static INLINE void mvBmPoolMcPut(int pool, MV_U32 bufPhysAddr, MV_U32 bufVirtAdd
 	mvBmPoolPut(pool, bufPhysAddr | MV_BM_PHY_RLS_MC_BUFF_MASK, bufVirtAddr);
 }
 
-static INLINE MV_U32 mvBmPoolGet(int pool)
+static INLINE MV_U32 mvBmPoolGet(int pool, MV_U32 *bufPhysAddr)
 {
-	MV_U32 bufVirtAddr;
+	MV_U32 bufVirtAddr, physAddr;
 
-	mvPp2RdReg(MV_BM_PHY_ALLOC_REG(pool)); /* read physical address */
+	physAddr = mvPp2RdReg(MV_BM_PHY_ALLOC_REG(pool)); /* read physical address */
 	bufVirtAddr = mvPp2RdReg(MV_BM_VIRT_ALLOC_REG); /* return virtual address */
+	if (bufPhysAddr)
+		*bufPhysAddr = physAddr;
 
 	return bufVirtAddr;
 }
-- 
1.7.5.4

