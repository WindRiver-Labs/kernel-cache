From 41294a03b802a7ef91db45edad62fe399a5f1c98 Mon Sep 17 00:00:00 2001
From: Tawfik Bayouk <tawfik@marvell.com>
Date: Mon, 3 Sep 2012 19:04:02 +0300
Subject: [PATCH 0243/1825] LPAE: Add support for 4GB DRAM per CS.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 70eb8de6caf59f7f967c6a041ba4150d925efe85

Change-Id: Idff811cfdcd874d533f6d2a9a3cfeceec400512b
Signed-off-by: Tawfik Bayouk <tawfik@marvell.com>
Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/kernel/setup.c                            |   18 ++++++++++++
 arch/arm/mach-armadaxp/core.c                      |   29 --------------------
 arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIf.c      |    2 +-
 .../plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c    |    3 +-
 4 files changed, 21 insertions(+), 31 deletions(-)

diff --git a/arch/arm/kernel/setup.c b/arch/arm/kernel/setup.c
index 1e8d805..797639e 100644
--- a/arch/arm/kernel/setup.c
+++ b/arch/arm/kernel/setup.c
@@ -675,6 +675,24 @@ __tagtable(ATAG_MEM, parse_tag_mem32);
 #ifdef CONFIG_PHYS_ADDR_T_64BIT
 static int __init parse_tag_mem64(const struct tag *tag)
 {
+#ifdef CONFIG_ARM_LPAE
+	/* We might have 4GB on a single CS. */
+	if (tag->u.mem64.size >= 0x100000000ll) {
+		u64 tmp_size = tag->u.mem64.size;
+		phys_addr_t tmp_start = tag->u.mem64.start;
+		u32 blk_size;
+		int ret;
+		while (tmp_size > 0ll) {
+			blk_size = ((tmp_size < 0x100000000ll) ? (u32)tmp_size : (2ll << 30ll));
+			ret = arm_add_memory(tmp_start, blk_size);
+			if (ret)
+				return ret;
+			tmp_start += (u64)blk_size;
+			tmp_size -= (u64)blk_size;
+		}
+		return 0;
+	}
+#endif
 	/* We only use 32-bits for the size. */
 	return arm_add_memory(tag->u.mem64.start, (unsigned long)tag->u.mem64.size);
 }
diff --git a/arch/arm/mach-armadaxp/core.c b/arch/arm/mach-armadaxp/core.c
index de53827..d6cdc1f 100644
--- a/arch/arm/mach-armadaxp/core.c
+++ b/arch/arm/mach-armadaxp/core.c
@@ -1603,34 +1603,6 @@ void __init axp_tag_fixup_mem32(struct machine_desc *mdesc, struct tag *t,
 }
 #endif /* CONFIG_FB_DOVE */
 
-void __init axp_tag_fixup(struct tag *t, char **from,
-			    struct meminfo *meminfo)
-{
-	int i = 0;
-	__u64 base = 0x0ll;
-	for (; t->hdr.size; t = tag_next(t))
-		if (t->hdr.tag == ATAG_MEM64) {
-#if 0
-			i++;
-			if (i > 3) {
-				t->u.mem64.start = 0x0;
-				t->u.mem64.size = 0x0;
-			} else if (i == 1) {
-				t->u.mem64.start = base;
-				t->u.mem64.size = (2ll << 30ll);
-			} else if (i == 2) {
-				t->u.mem64.start = base;
-				t->u.mem64.size = (uint64_t)(1ll << 30ll);
-			} else {
-				t->u.mem64.start = base;
-				t->u.mem64.size = (uint64_t)(2ll << 30ll);
-			}
-			base += (2ll << 30ll);
-#endif
-			printk(KERN_ERR "Base 0x%llx, Size 0x%llx.\n",
-				t->u.mem64.start, t->u.mem64.size);
-		}
-}
 
 MACHINE_START(ARMADA_XP_DB, "Marvell Armada XP Development Board")
 	/* MAINTAINER("MARVELL") */
@@ -1639,7 +1611,6 @@ MACHINE_START(ARMADA_XP_DB, "Marvell Armada XP Development Board")
 	.init_irq	= axp_init_irq,
 	.timer		= &axp_timer,
 	.init_machine	= axp_db_init,
-	.fixup		= axp_tag_fixup,
 #ifdef CONFIG_FB_DOVE
 	/* reserve memory for LCD */
 	.fixup		= axp_tag_fixup_mem32,
diff --git a/arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIf.c b/arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIf.c
index 0c026ea..5b06370 100644
--- a/arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIf.c
+++ b/arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIf.c
@@ -275,7 +275,7 @@ MV_STATUS mvDramIfWinGet(MV_TARGET target, MV_DRAM_DEC_WIN *pAddrDecWin)
 
 	sizeRegVal = (sizeReg & SDRAMWCR_SIZE_MASK) >> SDRAMWCR_SIZE_OFFS;
 
-	pAddrDecWin->addrWin.size = (MV_U64)((sizeRegVal + 1) * SDRAMWCR_SIZE_ALLIGNMENT);
+	pAddrDecWin->addrWin.size = (MV_U64)((MV_U64)(sizeRegVal + 1) * (MV_U64)SDRAMWCR_SIZE_ALLIGNMENT);
 
 	/* Check if ctrlRegToSize returned OK */
 	if (-1 == pAddrDecWin->addrWin.size) {
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c
index 0a238bf..592ee8f 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c
@@ -167,7 +167,8 @@ MV_STATUS mvNetaWinInit(MV_U32 port, MV_UNIT_WIN_INFO *addrWinMap)
 *******************************************************************************/
 MV_STATUS mvNetaWinWrite(MV_U32 port, MV_U32 winNum, MV_UNIT_WIN_INFO *pAddrDecWin)
 {
-	MV_U32 size, alignment;
+	MV_U64 size;
+	MV_U32 alignment;
 	MV_U32 baseReg, sizeReg;
 
 	/* Parameter checking   */
-- 
1.7.5.4

