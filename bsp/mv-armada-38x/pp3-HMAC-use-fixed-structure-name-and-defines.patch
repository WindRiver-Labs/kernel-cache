From fff16dd2e1d8cb25f65638cbb746ddb50b77ed95 Mon Sep 17 00:00:00 2001
From: Yelena <yelena@marvell.com>
Date: Thu, 12 Dec 2013 13:40:40 +0200
Subject: [PATCH 1217/1825] pp3: HMAC use fixed structure name and defines

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 60567a7099dee5681f4d20fecf893bb170b4f156

Change-Id: Ie6757668e1a19fa622a0a23997be470495f7a857
Signed-off-by: Yelena <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4727
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c |    8 ++++----
 drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h |    7 ++++---
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c
index 3ea50ff..a462cbc 100644
--- a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c
+++ b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c
@@ -76,8 +76,8 @@ static int mv_pp3_hmac_queue_create(struct mv_pp3_queue_ctrl *q_ctrl, int desc_n
 /* per frame bitmap to store queues state (allocated/free) */
 static unsigned int mv_pp3_hmac_queue_act[MV_PP3_HMAC_MAX_FRAME] = {0};
 /* */
-struct pp3_uint_info pp3_hmac_gl;
-struct pp3_uint_info pp3_hmac_fr;
+struct pp3_unit_info pp3_hmac_gl;
+struct pp3_unit_info pp3_hmac_fr;
 
 /* store unit base address = silicon base address + unit offset */
 void mv_pp3_hmac_gl_unit_base(unsigned int unit_offset)
@@ -103,7 +103,7 @@ u32 mv_pp3_hmac_rxq_init(int frame, int queue, int size, struct mv_pp3_queue_ctr
 		return 1;
 
 	qctrl->size = size;
-	mv_pp3_hmac_queue_create(qctrl, size * MV_PP3_HMAC_DATAGRAM_SIZE);
+	mv_pp3_hmac_queue_create(qctrl, size * MV_PP3_HMAC_DG_SIZE);
 /*	Write pointer to allocated memory to
 a.	rq_address_high table address bits [39:32]
 b.	rq_address_low table address bits [31:8], aligned to 256B
@@ -118,7 +118,7 @@ b.	rq_address_low table address bits [31:8], aligned to 256B
  * size is CFH size in datagrams (16 bytes each)     */
 void mv_pp3_hmac_txq_next_cfh(int frame, int queue, struct mv_pp3_queue_ctrl *qctrl, int size, u8 **cfh_ptr)
 {
-	if ((qctrl->next_proc + size * MV_PP3_HMAC_DATAGRAM_SIZE) > qctrl->last)
+	if ((qctrl->next_proc + size * MV_PP3_HMAC_DG_SIZE) > qctrl->last)
 		/* do FIFO wraparound */;
 
 	*cfh_ptr = qctrl->next_proc;
diff --git a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h
index a0e9095..5ab5dbc 100644
--- a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h
+++ b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h
@@ -67,12 +67,13 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 
 #define MV_PP3_HMAC_MAX_FRAME			(16)
-#define MV_PP3_HMAC_DATAGRAM_SIZE		(16)
+#define MV_PP3_HMAC_DG_SIZE				(16)
 #define MV_PP3_CFH_MIN_SIZE				(32)
+#define MV_PP3_CFH_DG_NUM				(MV_PP3_CFH_MIN_SIZE \ MV_PP3_HMAC_DG_SIZE)
 #define MV_PP3_HMAC_Q_ALIGN				(256)
 
-extern struct pp3_uint_info pp3_hmac_gl;
-extern struct pp3_uint_info pp3_hmac_fr;
+extern struct pp3_unit_info pp3_hmac_gl;
+extern struct pp3_unit_info pp3_hmac_fr;
 
 struct mv_pp3_queue_ctrl {
 	u8 *first;
-- 
1.7.5.4

