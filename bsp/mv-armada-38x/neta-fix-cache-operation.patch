From cbdfd8624341407883c7ce4d9d3430239ce00d1e Mon Sep 17 00:00:00 2001
From: Yelena <yelena@marvell.com>
Date: Wed, 22 Jan 2014 14:43:04 +0200
Subject: [PATCH 1319/1825] neta: fix cache operation

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 7f668c0d0c5db7045ad0ed287079e1d5498fbebe

	Use device pointer (instead NULL) in cache functions.

Change-Id: I9c40ce013a8ecca26fc27c753ea05b3672685520
Signed-off-by: Yelena <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5250
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-by: Tawfik Bayouk <tawfik@marvell.com>
Tested-by: Tawfik Bayouk <tawfik@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c |    7 ++++++-
 arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h |    2 --
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c
index 967488a..54b6178 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c
@@ -2175,7 +2175,6 @@ static void mvNetaDescRingReset(MV_NETA_QUEUE_CTRL *pQueueCtrl)
 
 	/* reset ring of descriptors */
 	memset(pDesc, 0, (descrNum * NETA_DESC_ALIGNED_SIZE));
-	mvOsCacheFlush(NULL, pDesc, (descrNum * NETA_DESC_ALIGNED_SIZE));
 	pQueueCtrl->nextToProc = 0;
 }
 
@@ -2191,6 +2190,8 @@ void mvNetaRxReset(int port)
 	for (rxq = 0; rxq < pPortCtrl->rxqNum ; rxq++) {
 		pRxqCtrl = mvNetaRxqHndlGet(port, rxq);
 		mvNetaDescRingReset(&pRxqCtrl->queueCtrl);
+		mvOsCacheFlush(pPortCtrl->osHandle, pRxqCtrl->queueCtrl.pFirst,
+		((pRxqCtrl->queueCtrl.lastDesc + 1) * NETA_DESC_ALIGNED_SIZE));
 	}
 	MV_REG_WRITE(NETA_PORT_RX_RESET_REG(port), 0);
 }
@@ -2206,6 +2207,8 @@ void mvNetaTxpReset(int port, int txp)
 	for (txq = 0; txq < pPortCtrl->txqNum; txq++) {
 		pTxqCtrl = mvNetaTxqHndlGet(port, txp, txq);
 		mvNetaDescRingReset(&pTxqCtrl->queueCtrl);
+		mvOsCacheFlush(pPortCtrl->osHandle, pTxqCtrl->queueCtrl.pFirst,
+		((pTxqCtrl->queueCtrl.lastDesc + 1) * NETA_DESC_ALIGNED_SIZE));
 	}
 	MV_REG_WRITE(NETA_PORT_TX_RESET_REG(port, txp), 0);
 }
@@ -2251,6 +2254,7 @@ MV_NETA_RXQ_CTRL *mvNetaRxqInit(int port, int queue, int descrNum)
 	pQueueCtrl->lastDesc = (descrNum - 1);
 
 	mvNetaDescRingReset(pQueueCtrl);
+	mvOsCacheFlush(pPortCtrl->osHandle, pQueueCtrl->pFirst, (pQueueCtrl->lastDesc + 1) * NETA_DESC_ALIGNED_SIZE);
 
 	mvNetaRxqAddrSet(port, queue, descrNum);
 
@@ -2315,6 +2319,7 @@ MV_NETA_TXQ_CTRL *mvNetaTxqInit(int port, int txp, int queue, int descrNum)
 	pQueueCtrl->lastDesc = (descrNum - 1);
 
 	mvNetaDescRingReset(pQueueCtrl);
+	mvOsCacheFlush(pPortCtrl->osHandle, pQueueCtrl->pFirst, (pQueueCtrl->lastDesc + 1) * NETA_DESC_ALIGNED_SIZE);
 
 	mvNetaTxqBandwidthSet(port, txp, queue);
 
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
index f3b021b..977f6c0 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
@@ -626,8 +626,6 @@ static INLINE void mvNetaRxDescFill(NETA_RX_DESC *pRxDesc, MV_U32 physAddr, MV_U
 #else
 	pRxDesc->bufPhysAddr = physAddr;
 #endif /* CONFIG_MV_ETH_BE_WA */
-
-	mvOsCacheLineFlush(NULL, pRxDesc);
 }
 
 /* Get pointer to next TX descriptor to be processed (send) by HW */
-- 
1.7.5.4

