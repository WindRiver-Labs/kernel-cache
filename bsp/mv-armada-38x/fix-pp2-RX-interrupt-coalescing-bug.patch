From 52ec8f2d1f767d564eff641ffe327f86e36164e9 Mon Sep 17 00:00:00 2001
From: Anna Shpund <shpunda@marvell.com>
Date: Sun, 6 Apr 2014 14:46:47 +0300
Subject: [PATCH 1540/1825] fix: pp2: RX interrupt coalescing bug

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 40d52f81c434004c610cb105854e04d196e6e12d

	RX interrupt time threshold occupies only 20 bits of register (from 4 upto 23).
	JIRA #SYSTEMSW-455

Change-Id: I2e9592a5ce8834eb75f86054bf9af5fcbd8c8b4e
Signed-off-by: Anna Shpund <shpunda@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6923
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/7019
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c     |   22 +++++++++++++++----
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h |    3 ++
 2 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
index 312d1eb..9965f7b 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
@@ -1340,8 +1340,13 @@ MV_STATUS mvPp2RxqTimeCoalSet(int port, int rxq, MV_U32 uSec)
 {
 	MV_U32 regVal;
 	int prxq = mvPp2LogicRxqToPhysRxq(port, rxq);
+	unsigned int tClkUsec;
 
-	regVal = uSec * (mvPp2HalData.tClk / 1000000);
+	tClkUsec = mvPp2HalData.tClk / 1000000;
+
+	/* Register contains interrupt time in units of 16 core clock sycles, */
+	/* therefore shift the result value on 4 bits */
+	regVal = (((uSec * tClkUsec) >> 4) << MV_PP2_ISR_RX_THRESHOLD_OFFS) & MV_PP2_ISR_RX_THRESHOLD_MASK;
 
 	mvPp2WrReg(MV_PP2_ISR_RX_THRESHOLD_REG(prxq), regVal);
 
@@ -1352,14 +1357,21 @@ unsigned int mvPp2RxqTimeCoalGet(int port, int rxq)
 {
 	MV_U32 regVal;
 	int prxq = mvPp2LogicRxqToPhysRxq(port, rxq);
-	unsigned int res, tClkUsec;
+	unsigned int res, tClkUsec, uSec;
 
+	tClkUsec = mvPp2HalData.tClk / 1000000;
 	regVal = mvPp2RdReg(MV_PP2_ISR_RX_THRESHOLD_REG(prxq));
 
-	tClkUsec = mvPp2HalData.tClk / 1000000;
-	res = regVal / tClkUsec;
+	/* Register contains interrupt time in units of 16 core clock sycles, */
+	/* therefore shift the result value on 4 bits */
+	res = (((regVal & MV_PP2_ISR_RX_THRESHOLD_MASK) >> MV_PP2_ISR_RX_THRESHOLD_OFFS) << 4);
+
+	if ((res % tClkUsec) != 0)
+		uSec = (res / tClkUsec) + 1;
+	else
+		uSec = res / tClkUsec;
 
-	return res;
+	return uSec;
 }
 
 /* unmask the current CPU's rx/tx interrupts                   *
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
index da5c00b..7de8df6 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
@@ -444,6 +444,9 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 /************************** Interrupt Cause and Mask registers ******************/
 #define MV_PP2_ISR_RX_THRESHOLD_REG(port)	(MV_PP2_REG_BASE + 0x5200 + 4 * (port))
 
+#define MV_PP2_ISR_RX_THRESHOLD_OFFS	4
+#define MV_PP2_ISR_RX_THRESHOLD_MASK	0xFFFFF0
+
 #define MV_PP2_ISR_RXQ_GROUP_REG(port)		(MV_PP2_REG_BASE + 0x5400 + 4 * (port))
 
 #define MV_PP2_ISR_ENABLE_REG(port)		(MV_PP2_REG_BASE + 0x5420 + 4 * (port))
-- 
1.7.5.4

