From b01695b1e95a205f0bdb69abb6cd31124b932ed7 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Thu, 8 Aug 2013 14:41:28 -0400
Subject: [PATCH 0934/1825] pp2: Add new debug function mvPp2PortRxqRegs

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit d131d3fac050f5365414b2bc923d19f6fb348f66

	- Improve output of debug functions

Change-Id: Iac48bd303bdf65f741b6226fe4d05c3e63fc25f8
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2986
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Jonatan Farhadian <yonif@marvell.com>
Reviewed-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h     |    1 +
 .../arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c |   25 +++++++++++++++----
 2 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
index bd0185d..ac105e3 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
@@ -622,6 +622,7 @@ MV_VOID mvPp2DescMgrRegsTxPrint(MV_VOID);
 MV_VOID mvPp2AddressDecodeRegsPrint(MV_VOID);
 void mvPp2IsrRegs(int port);
 void mvPp2PhysRxqRegs(int rxq);
+void mvPp2PortRxqRegs(int port, int rxq);
 MV_VOID mvPp2RxqShow(int port, int rxq, int mode);
 MV_VOID mvPp2TxqShow(int port, int txp, int txq, int mode);
 MV_VOID mvPp2AggrTxqShow(int cpu, int mode);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
index 9b89078..010cdd7 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
@@ -376,9 +376,9 @@ void mvPp2IsrRegs(int port)
 
 void mvPp2PhysRxqRegs(int rxq)
 {
-	mvOsPrintf("\n[PPv2 Phys RxQ registers: rxq=%d]\n", rxq);
+	mvOsPrintf("\n[PPv2 RxQ registers: global rxq=%d]\n", rxq);
 
-	if (mvPp2MaxCheck(rxq, MV_ETH_RXQ_TOTAL_NUM, "physical rxq"))
+	if (mvPp2MaxCheck(rxq, MV_ETH_RXQ_TOTAL_NUM, "global rxq"))
 		return;
 
 	mvPp2WrReg(MV_PP2_RXQ_NUM_REG, rxq);
@@ -394,11 +394,24 @@ void mvPp2PhysRxqRegs(int rxq)
 	mvPp2PrintReg(MV_PP2_RX_DESC_DROP_REG(rxq), "MV_PP2_RX_DESC_DROP_REG");
 }
 
+void mvPp2PortRxqRegs(int port, int rxq)
+{
+	mvOsPrintf("\n[PPv2 RxQ registers: port=%d, local rxq=%d]\n", port, rxq);
+
+	if (mvPp2PortCheck(port))
+		return;
+
+	if (mvPp2MaxCheck(rxq, MV_ETH_MAX_RXQ, "local rxq"))
+		return;
+
+	mvPp2PhysRxqRegs(mvPp2LogicRxqToPhysRxq(port, rxq));
+}
+
 void mvPp2PhysTxqRegs(int txq)
 {
-	mvOsPrintf("\n[PPv2 Phys TxQ registers: txq=%d]\n", txq);
+	mvOsPrintf("\n[PPv2 TxQ registers: global txq=%d]\n", txq);
 
-	if (mvPp2MaxCheck(txq, MV_PP2_TXQ_TOTAL_NUM, "physical txq"))
+	if (mvPp2MaxCheck(txq, MV_PP2_TXQ_TOTAL_NUM, "global txq"))
 		return;
 
 	mvPp2WrReg(MV_PP2_TXQ_NUM_REG, txq);
@@ -415,12 +428,12 @@ void mvPp2PhysTxqRegs(int txq)
 
 void mvPp2PortTxqRegs(int port, int txp, int txq)
 {
-	mvOsPrintf("\n[PPv2 Phys TxQ registers: txq=%d]\n", txq);
+	mvOsPrintf("\n[PPv2 TxQ registers: port=%d, txp=%d, local txq=%d]\n", port, txp, txq);
 
 	if (mvPp2TxpCheck(port, txp))
 		return;
 
-	if (mvPp2MaxCheck(txq, MV_ETH_MAX_TXQ, "logical txq"))
+	if (mvPp2MaxCheck(txq, MV_ETH_MAX_TXQ, "local txq"))
 		return;
 
 	mvPp2PhysTxqRegs(MV_PPV2_TXQ_PHYS(port, txp, txq));
-- 
1.7.5.4

