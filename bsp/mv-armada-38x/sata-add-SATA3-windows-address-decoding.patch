From 83110a8735102cace413afc8a430875aa7bc5b51 Mon Sep 17 00:00:00 2001
From: Eli Nidam <elini@marvell.com>
Date: Wed, 15 Jan 2014 16:01:09 +0200
Subject: [PATCH 1298/1825] sata: add SATA3 windows address decoding

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit bd65bedb234f35484fc0aad2151e4b5b9a3ce595

	1. update mvCtrlAddrDecShow with SATA3 windows
	2. Added HAL SATA3 address decoding

Change-Id: I0211c1ab4f208068caf545a424b3b7919f70d854
Signed-off-by: Eli Nidam <elini@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5173
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../armada_38x_family/ctrlEnv/mvCtrlEnvLib.c       |    6 +-
 arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3.h   |   73 +++++
 .../plat-armada/mv_hal/sata/sata3/mvSata3AddrDec.c |  327 ++++++++++++++++++++
 .../plat-armada/mv_hal/sata/sata3/mvSata3Regs.h    |  127 ++++++++
 4 files changed, 530 insertions(+), 3 deletions(-)
 create mode 100644 arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3.h
 create mode 100644 arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3AddrDec.c
 create mode 100644 arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3Regs.h

diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
index 38c1da8..e279fcb 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
@@ -88,7 +88,7 @@
 #endif
 
 #if defined(MV_INCLUDE_SATA)
-#include "sata/CoreDriver/mvSata.h"
+#include "sata/sata3/mvSata3.h"
 #endif
 #if defined(MV_INCLUDE_USB)
 #include "usb/mvUsb.h"
@@ -276,7 +276,7 @@ MV_VOID mvCtrlSerdesConfigDetect(MV_VOID)
 	for (serdesNum = 0; serdesNum < maxSerdesLane; serdesNum++) {
 		serdesCongigField = (commPhyConfigReg & COMPHY_SELECT_MASK(serdesNum)) >> COMPHY_SELECT_OFFS(serdesNum);
 		comPhyCfg = serdesCfg[serdesNum][serdesCongigField];
-		DB(printf("serdesCongigField=0x%x, comPhyCfg=0x%2x SERDES %d detect as ",	\
+		DB(printf("serdesCongigField=0x%x, comPhyCfg=0x%02x SERDES %d detect as ",	\
 			  serdesCongigField, comPhyCfg, serdesNum));
 		switch (comPhyCfg & 0xF0) {
 		case SERDES_UNIT_PEX:
@@ -1197,7 +1197,7 @@ MV_VOID mvCtrlAddrDecShow(MV_VOID)
 #endif
 
 #if defined(MV_INCLUDE_SATA)
-	mvUnitAddrDecShow(mvCtrlSataMaxPortGet(), SATA_UNIT_ID, "Sata", mvSataWinRead);
+	mvUnitAddrDecShow(mvCtrlSataMaxPortGet(), SATA_UNIT_ID, "Sata", mvSata3WinRead);
 #endif
 }
 
diff --git a/arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3.h b/arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3.h
new file mode 100644
index 0000000..f8deb6d
--- /dev/null
+++ b/arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3.h
@@ -0,0 +1,73 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	    this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+#ifndef __INCmvSata3H
+#define __INCmvSata3H
+
+MV_STATUS mvSata3WinInit(MV_UNIT_WIN_INFO *addrWinMap);
+
+MV_STATUS mvSata3TargetWinEnable(MV_U32 winNum, MV_BOOL enable);
+MV_STATUS mvSata3TargetWinWrite(MV_U32 winNum, MV_UNIT_WIN_INFO *pAddrDecWin);
+MV_STATUS mvSata3WinRead(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pAddrDecWin);
+
+#endif /*  __INCmvSata3 */
diff --git a/arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3AddrDec.c b/arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3AddrDec.c
new file mode 100644
index 0000000..d2fcc31
--- /dev/null
+++ b/arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3AddrDec.c
@@ -0,0 +1,327 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+#include "mvCommon.h"
+#include "mvSysHwConfig.h"
+#include "mvOs.h"
+#include "ctrlEnv/mvCtrlEnvSpec.h"
+#include "mvSata3Regs.h"
+#include "mvSata3.h"
+
+/* defines  */
+
+/* #define MV_DEBUG */
+
+#ifdef MV_DEBUG
+#define DB(x)	x
+#else
+#define DB(x)
+#endif
+
+/* BITs in Windows 0-3 Control and Base Registers */
+#define MV_SATA3_WIN_ENABLE_BIT               0
+#define MV_SATA3_WIN_ENABLE_MASK              (1<<MV_SATA3_WIN_ENABLE_BIT)
+
+#define MV_SATA3_WIN_TARGET_OFFSET            4
+#define MV_SATA3_WIN_TARGET_MASK              (0xF<<MV_SATA3_WIN_TARGET_OFFSET)
+
+#define MV_SATA3_WIN_ATTR_OFFSET              8
+#define MV_SATA3_WIN_ATTR_MASK                (0xFF<<MV_SATA3_WIN_ATTR_OFFSET)
+
+#define MV_SATA3_WIN_SIZE_OFFSET              16
+#define MV_SATA3_WIN_SIZE_MASK                (0xFFFF<<MV_SATA3_WIN_SIZE_OFFSET)
+
+#define MV_SATA3_WIN_BASE_OFFSET              4
+#define MV_SATA3_WIN_BASE_MASK                (0xFFFFFFF<<MV_SATA3_WIN_BASE_OFFSET)
+
+#define MV_SATA3_WIN_SIZE_ALIGN		    _1M
+
+MV_TARGET sata3AddrDecPrioTab[] = {
+#if defined(MV_INCLUDE_SDRAM_CS0)
+	SDRAM_CS0,
+#endif
+#if defined(MV_INCLUDE_SDRAM_CS1)
+	SDRAM_CS1,
+#endif
+#if defined(MV_INCLUDE_SDRAM_CS2)
+	SDRAM_CS2,
+#endif
+#if defined(MV_INCLUDE_SDRAM_CS3)
+	SDRAM_CS3,
+#endif
+	TBL_TERM
+};
+
+/*******************************************************************************
+* sataWinOverlapDetect - Detect SATA address windows overlapping
+*
+* DESCRIPTION:
+*       An unpredicted behaviur is expected in case SATA address decode
+*       windows overlapps.
+*       This function detects SATA address decode windows overlapping of a
+*       specified window. The function does not check the window itself for
+*       overlapping. The function also skipps disabled address decode windows.
+*
+* INPUT:
+*       winNum      - address decode window number.
+*       pAddrDecWin - An address decode window struct.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       MV_TRUE if the given address window overlap current address
+*       decode map, MV_FALSE otherwise, MV_ERROR if reading invalid data
+*       from registers.
+*
+*******************************************************************************/
+static MV_STATUS sata3WinOverlapDetect(int dev, MV_U32 winNum, MV_ADDR_WIN *pAddrWin)
+{
+	MV_U32 winNumIndex;
+	MV_UNIT_WIN_INFO addrDecWin;
+
+	for (winNumIndex = 0; winNumIndex < MV_SATA3_MAX_ADDR_DECODE_WIN; winNumIndex++) {
+		/* Do not check window itself       */
+		if (winNumIndex == winNum)
+			continue;
+
+		/* Get window parameters    */
+		if (MV_OK != mvSata3WinRead(dev, winNumIndex, &addrDecWin)) {
+			mvOsPrintf("%s: ERR. mvSata3WinGet failed\n", __func__);
+			return MV_ERROR;
+		}
+
+		/* Do not check disabled windows    */
+		if (addrDecWin.enable == MV_FALSE)
+			continue;
+
+		if (MV_TRUE == mvWinOverlapTest(pAddrWin, &(addrDecWin.addrWin)))
+			return MV_TRUE;
+	}
+	return MV_FALSE;
+}
+
+/*******************************************************************************
+* mvSata3WinWrite - Set SATA target address window
+*
+* DESCRIPTION:
+*       This function sets a peripheral target (e.g. SDRAM bank0, PCI_MEM0)
+*       address window, also known as address decode window.
+*       After setting this target window, the SATA will be able to access the
+*       target within the address window.
+*
+* INPUT:
+*       winNum      - SATA target address decode window number.
+*       pAddrDecWin - SATA target window data structure.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       MV_ERROR if address window overlapps with other address decode windows.
+*       MV_BAD_PARAM if base address is invalid parameter or target is
+*       unknown.
+*
+*******************************************************************************/
+MV_STATUS mvSata3WinWrite(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pAddrDecWin)
+{
+	MV_U32 sizeReg, baseReg, ctrlReg;
+
+	/* Parameter checking   */
+	if (winNum >= MV_SATA3_MAX_ADDR_DECODE_WIN) {
+		mvOsPrintf("%s: ERR. Invalid win num %d\n", __func__, winNum);
+		return MV_BAD_PARAM;
+	}
+
+	/* Check if the requested window overlapps with current windows         */
+	if (MV_TRUE == sata3WinOverlapDetect(dev, winNum, &pAddrDecWin->addrWin)) {
+		mvOsPrintf("%s: ERR. Window %d overlap\n", __func__, winNum);
+		return MV_ERROR;
+	}
+
+	/* check if address is aligned to the size */
+	if (MV_IS_NOT_ALIGN(pAddrDecWin->addrWin.baseLow, pAddrDecWin->addrWin.size)) {
+		mvOsPrintf("mvSata3WinSet:Error setting SATA window %d.\n"
+			   "Address 0x%08x is unaligned to size 0x%llx.\n",
+			   winNum, pAddrDecWin->addrWin.baseLow, pAddrDecWin->addrWin.size);
+		return MV_ERROR;
+	}
+
+	baseReg = pAddrDecWin->addrWin.baseLow & MV_SATA3_WIN_BASE_MASK;
+	sizeReg = (pAddrDecWin->addrWin.size / MV_SATA3_WIN_SIZE_ALIGN) - 1;
+	sizeReg = sizeReg << MV_SATA3_WIN_SIZE_OFFSET;
+
+	/* set attributes */
+	ctrlReg = (pAddrDecWin->attrib << MV_SATA3_WIN_ATTR_OFFSET);
+
+	/* set target ID */
+	ctrlReg &= ~MV_SATA3_WIN_TARGET_MASK;
+	ctrlReg |= (pAddrDecWin->targetId << MV_SATA3_WIN_TARGET_OFFSET);
+
+	if (pAddrDecWin->enable == MV_TRUE)
+		ctrlReg |= MV_SATA3_WIN_ENABLE_MASK;
+	else
+		ctrlReg &= ~MV_SATA3_WIN_ENABLE_MASK;
+
+	MV_REG_WRITE(MV_SATA3_WIN_CTRL_REG(dev, winNum), ctrlReg);
+	MV_REG_WRITE(MV_SATA3_WIN_BASE_REG(dev, winNum), baseReg);
+	MV_REG_WRITE(MV_SATA3_WIN_SIZE_REG(dev, winNum), sizeReg);
+
+	return MV_OK;
+}
+
+/*******************************************************************************
+* mvSata3WinRead - Get SATA peripheral target address window.
+*
+* DESCRIPTION:
+*       Get SATA peripheral target address window.
+*
+* INPUT:
+*       winNum - SATA target address decode window number.
+*
+* OUTPUT:
+*       pAddrDecWin - SATA target window data structure.
+*
+* RETURN:
+*       MV_ERROR if register parameters are invalid.
+*
+*******************************************************************************/
+MV_STATUS mvSata3WinRead(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pAddrDecWin)
+{
+	MV_U32 sizeReg, baseReg, ctrlReg;
+	MV_U32 sizeRegVal;
+
+	/* Parameter checking   */
+	if (winNum >= MV_SATA3_MAX_ADDR_DECODE_WIN) {
+		mvOsPrintf("%s (dev=%d): ERR. Invalid winNum %d\n", __func__, dev, winNum);
+		return MV_NOT_SUPPORTED;
+	}
+
+	baseReg = MV_REG_READ(MV_SATA3_WIN_BASE_REG(dev, winNum));
+	sizeReg = MV_REG_READ(MV_SATA3_WIN_SIZE_REG(dev, winNum));
+	ctrlReg = MV_REG_READ(MV_SATA3_WIN_CTRL_REG(dev, winNum));
+
+	/* Extract base address and size    */
+	sizeRegVal = (sizeReg & MV_SATA3_WIN_SIZE_MASK) >> MV_SATA3_WIN_SIZE_OFFSET;
+	pAddrDecWin->addrWin.size = (sizeRegVal + 1) * MV_SATA3_WIN_SIZE_ALIGN;
+	pAddrDecWin->addrWin.baseLow = baseReg & MV_SATA3_WIN_BASE_MASK;
+	pAddrDecWin->addrWin.baseHigh = 0;
+
+	/* attrib and targetId              */
+	pAddrDecWin->attrib = (ctrlReg & MV_SATA3_WIN_ATTR_MASK) >> MV_SATA3_WIN_ATTR_OFFSET;
+	pAddrDecWin->targetId = (ctrlReg & MV_SATA3_WIN_TARGET_MASK) >> MV_SATA3_WIN_TARGET_OFFSET;
+
+	/* Check if window is enabled       */
+	if (ctrlReg & MV_SATA3_WIN_ENABLE_MASK)
+		pAddrDecWin->enable = MV_TRUE;
+	else
+		pAddrDecWin->enable = MV_FALSE;
+	return MV_OK;
+}
+
+/*******************************************************************************
+* mvSata3WinInit - Initialize the integrated SATA target address window.
+*
+* DESCRIPTION:
+*       Initialize the SATA peripheral target address window.
+*
+* INPUT:
+*
+*
+* OUTPUT:
+*
+*
+* RETURN:
+*       MV_ERROR if register parameters are invalid.
+*
+*******************************************************************************/
+MV_STATUS mvSata3WinInit(MV_UNIT_WIN_INFO *addrWinMap)
+{
+	MV_U32 winNum, unit;
+	MV_UNIT_WIN_INFO *addrDecWin;
+	MV_U32 winPrioIndex = 0;
+
+	/* Initiate Sata address decode */
+
+	/* First disable all address decode windows */
+	for (unit = 0; unit < SATA3_NUM_OF_PORTS; unit++) {
+		for (winNum = 0; winNum < MV_SATA3_MAX_ADDR_DECODE_WIN; winNum++) {
+			MV_U32 regVal = MV_REG_READ(MV_SATA3_WIN_CTRL_REG(unit, winNum));
+			regVal &= ~MV_SATA3_WIN_ENABLE_MASK;
+			MV_REG_WRITE(MV_SATA3_WIN_CTRL_REG(unit, winNum), regVal);
+		}
+	}
+	for (unit = 0; unit < SATA3_NUM_OF_PORTS; unit++) {
+		winNum = 0;
+		winPrioIndex = 0;
+		while ((sata3AddrDecPrioTab[winPrioIndex] != TBL_TERM) && (winNum < MV_SATA3_MAX_ADDR_DECODE_WIN)) {
+			addrDecWin = &addrWinMap[sata3AddrDecPrioTab[winPrioIndex]];
+			if (addrDecWin->enable == MV_TRUE) {
+				if (MV_OK != mvSata3WinWrite(unit , winNum, addrDecWin))
+					return MV_ERROR;
+
+				winNum++;
+			}
+			winPrioIndex++;
+		}
+	}
+	return MV_OK;
+}
diff --git a/arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3Regs.h b/arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3Regs.h
new file mode 100644
index 0000000..bafd804
--- /dev/null
+++ b/arch/arm/plat-armada/mv_hal/sata/sata3/mvSata3Regs.h
@@ -0,0 +1,127 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	    this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+#ifndef __INCmvSata3RegsH
+#define __INCmvSata3RegsH
+
+
+#define SATA3_UNIT_REG_BASE(u)				MV_SATA3_REGS_OFFSET(u)
+#define SATA3_PORT_REG_BASE(u, nPort)			(SATA3_UNIT_REG_BASE(u) + (nPort%2)*0x80)
+
+#define SATA3_HBA_CAPABILITY_REG(u)			(SATA3_UNIT_REG_BASE(u) + 0x000)
+#define SATA3_GLOBAL_HBA_CONTROL_REG(u)			(SATA3_UNIT_REG_BASE(u) + 0x004)
+#define SATA3_INTERRUPT_STATUS_REG(u)			(SATA3_UNIT_REG_BASE(u) + 0x008)
+#define SATA3_PORTS_IMPLEMENTED_REG(u)			(SATA3_UNIT_REG_BASE(u) + 0x00C)
+#define AHCI_VERSION_REG(u)				(SATA3_UNIT_REG_BASE(u) + 0x010)
+#define VENDOR_SPECIFIC_0_ADDR_REG(u)			(SATA3_UNIT_REG_BASE(u) + 0x0A0)
+#define VENDOR_SPECIFIC_0_DATA_REG(u)			(SATA3_UNIT_REG_BASE(u) + 0x0A4)
+
+#define SATA3_CMD_LIST_BASE_ADDR_LOW(u, nPort)		(SATA3_PORT_REG_BASE(u, nPort) + 0x100)
+#define SATA3_CMD_LIST_BASE_ADDR_HIGH(u, nPort)		(SATA3_PORT_REG_BASE(u, nPort) + 0x104)
+#define SATA3_RECEIVED_FIS_BASE_ADDR_LOW(u, nPort)	(SATA3_PORT_REG_BASE(u, nPort) + 0x108)
+#define SATA3_RECEIVED_FIS_BASE_ADDR_HIGH(u, nPort)	(SATA3_PORT_REG_BASE(u, nPort) + 0x10C)
+#define SATA3_PORT_INTERRUPT_STATUS_REG(u, nPort)	(SATA3_PORT_REG_BASE(u, nPort) + 0x110)
+#define SATA3_PORT_INTERRUPT_ENABLE_REG(u, nPort)	(SATA3_PORT_REG_BASE(u, nPort) + 0x114)
+#define SATA3_PORT_CMD_STATUS_REG(u, nPort)		(SATA3_PORT_REG_BASE(u, nPort) + 0x118)
+#define SATA3_PORT_TASK_FILE_DATA_REG(u, nPort)		(SATA3_PORT_REG_BASE(u, nPort) + 0x120)
+#define SATA3_PORT_SIGNATURE_REG(u, nPort)		(SATA3_PORT_REG_BASE(u, nPort) + 0x124)
+#define SATA3_STATUS_REG(u, nPort)			(SATA3_PORT_REG_BASE(u, nPort) + 0x128)
+#define SATA3_CONTROL_REG(u, nPort)			(SATA3_PORT_REG_BASE(u, nPort) + 0x12C)
+#define SATA3_ERROR_REG(u, nPort)			(SATA3_PORT_REG_BASE(u, nPort) + 0x130)
+#define SATA3_ACTIVE_REG(u, nPort)			(SATA3_PORT_REG_BASE(u, nPort) + 0x134)
+#define SATA3_CMD_ISSUE_REG(u, nPort)			(SATA3_PORT_REG_BASE(u, nPort) + 0x138)
+#define SATA3_PORT_NOTIFICATION_REG(u, nPort)		(SATA3_PORT_REG_BASE(u, nPort) + 0x13C)
+#define SATA3_PORT_FIS_SWITCH_CNTRL_REG(u, nPort)	(SATA3_PORT_REG_BASE(u, nPort) + 0x140)
+
+
+#define SATA3_PORT_CMD_LBA_TABLE_BA_REG(u, nPort)	(SATA3_PORT_REG_BASE(u, nPort) + 0x170)
+#define VENDOR_SPEC_INTERRUPT_CNTRL_REG(u, nPort)	(SATA3_PORT_REG_BASE(u, nPort) + 0x174)
+#define SATA3_INDIRECT_PORT_PHY_ADD_REG(u, nPort)	(SATA3_PORT_REG_BASE(u, nPort) + 0x178)
+#define SATA3_INDIRECT_PORT_PHY_DATA_REG(u, nPort)	(SATA3_PORT_REG_BASE(u, nPort) + 0x17C)
+
+#define SATA_GLOBAL_HBA_INTERRUPT_ENABLE_BIT	BIT1
+#define SATA_GLOBAL_HBA_AHCI_ENABLE_BIT		BIT31
+
+#define SATA_COMMAND_LIST_BASE_ADDR_ALIGN	0x400
+#define SATA_RECEIVED_FIS_BASE_ADDR_ALIGN	0x1000
+#define SATA_COMMAND_TABLE_DESC_ADDR_ALIGN	0x80
+#define SATA_COMMAND_HEADER_ADDR_ALIGN		0x20
+
+#define SATA_RECEIVED_FIS_LENGTH		0x1000
+#define SATA_COMMAND_LIST_LENGTH		0x400
+
+#define SATA_COMMAND_TABLE_CFIS_OFFSET		0x00
+#define SATA_COMMAND_TABLE_CATAPI_OFFSET	0x60
+#define SATA_COMMAND_TABLE_PRD_OFFSET		0x80
+#define SATA_COMMAND_HEADER_ADDR_OFFSET		0x20
+
+#define SATA_PORT_TASK_FILE_STATUS_BITS		0xff
+
+#define MV_SATA3_MAX_ADDR_DECODE_WIN		4
+
+
+#define MV_SATA3_WIN_CTRL_REG(dev, win)        (SATA3_UNIT_REG_BASE(dev) + 0x60 + ((win)<<4))
+#define MV_SATA3_WIN_BASE_REG(dev, win)        (SATA3_UNIT_REG_BASE(dev)  + 0x64 + ((win)<<4))
+#define MV_SATA3_WIN_SIZE_REG(dev, win)        (SATA3_UNIT_REG_BASE(dev)  + 0x68 + ((win)<<4))
+
+#endif /*  __INCmvSata3RegsH */
-- 
1.7.5.4

