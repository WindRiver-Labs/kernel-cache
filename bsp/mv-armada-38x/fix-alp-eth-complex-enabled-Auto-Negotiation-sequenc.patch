From c7631ed198144fa4639ff716930212d7dbb8cb6b Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Thu, 15 May 2014 14:51:42 +0300
Subject: [PATCH 1665/1825] fix: alp: eth complex: enabled Auto-Negotiation
 sequence for MAC0<->SGMII

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit ef499868da7da7cee107092b3b1c600c9a6f2e9a

	enabled Auto-Negotiation sequence for MAC0<->SGMII
	when connect MAC0 to Serdes(lane2) via SFP transmitter

Change-Id: I2e58830149b8bb2bb426c99fcbafb2db901d08e4
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8046
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   18 ++++++++------
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c    |   24 ++++++++++++++++++++
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h    |   15 ++++++++++++
 3 files changed, 49 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 3f30850..9730de0 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -281,7 +281,7 @@ MV_BOOL mvBoardIsPortInSgmii(MV_U32 ethPortNum)
 	if ((ethPortNum == 0 && (ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_1 ||
 		ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_2 || ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_3)) ||
 			(ethPortNum == 1 && (ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES ||
-			 ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP)))
+					     (ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP))))
 		return MV_TRUE;
 	return MV_FALSE;
 }
@@ -952,14 +952,16 @@ MV_VOID mvBoardInfoUpdate(MV_VOID)
 			smiAddress = 0x8;
 		else
 			smiAddress = 0x5;
+	} else { /* else if MAC0 is connected to SW port 6 */
+		smiAddress = -1;
+		if (ethComplex & MV_ETHCOMP_GE_MAC0_2_SW_P6) {
+			if (ethComplex & MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G) /* else if MAC0 is connected to SW port 6 */
+				macSpeed = BOARD_MAC_SPEED_2000M;
+			else
+				macSpeed = BOARD_MAC_SPEED_1000M;
+		}
 	}
-	else {				/* else MAC0 is connected to SW port 6 */
-		smiAddress = -1;	/* no SMI address if connected to switch */
-		if (ethComplex & MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G)
-			macSpeed = BOARD_MAC_SPEED_2000M;
-		else
-			macSpeed = BOARD_MAC_SPEED_1000M;
-	}
+
 	mvBoardPhyAddrSet(0, smiAddress);
 	mvBoardMacSpeedSet(0, macSpeed);
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
index 207304a..bf37386 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
@@ -71,6 +71,27 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "pp2/gmac/mvEthGmacRegs.h"
 #include "pp2/gbe/mvPp2Gbe.h"
 
+static void mvEthComplexPortInBandAnEnable(MV_U32 port, MV_BOOL enable)
+{
+	MV_U32 reg;
+	reg = MV_REG_READ(ETH_GMAC_AN_CTRL_REG(port));
+
+	/* Enable AnBandAnEn */
+	reg &= ~MV_ETH_IN_BAND_AN_EN_MASK;
+	reg |= (0x1 << MV_ETH_IN_BAND_AN_EN_OFFSET);
+
+	/* Disable AnDuplex, AnSpeedEn, AnFcEn */
+	if (enable == MV_FALSE) {
+		reg &= ~MV_ETH_SPEED_AUTO_NEG_MASK;
+		reg |= (0x0 << MV_ETH_SPEED_AUTO_NEG_OFFSET);
+		reg &= ~MV_ETH_FLOW_CTRL_AUTO_NEG_MASK;
+		reg |= (0x0 << MV_ETH_FLOW_CTRL_AUTO_NEG_OFFSET);
+		reg &= ~MV_ETH_DUPLEX_AUTO_NEG_MASK;
+		reg |= (0x0 << MV_ETH_DUPLEX_AUTO_NEG_OFFSET);
+	}
+	MV_REG_WRITE(ETH_GMAC_AN_CTRL_REG(port), reg);
+}
+
 static void mvEthComplexGponPhySrcSet(MV_U32 src)
 {
 	MV_U32 reg;
@@ -85,6 +106,7 @@ static void mvEthComplexGponPhySrcSet(MV_U32 src)
 
 	MV_REG_WRITE(MV_GPON_PHY_CTRL1_REG, reg);
 }
+
 static void mvEthComplexGphyPortSmiSrcSet(MV_U32 phy, MV_U32 src)
 {
 	MV_U32 reg;
@@ -408,6 +430,8 @@ static void mvEthComplexMacToGbePhy(MV_U32 port, MV_U32 phy, MV_U32 phyAddr)
 
 static void mvEthComplexMacToComPhy(MV_U32 port, MV_U32 comPhy, MV_U32 ethComplexOptions)
 {
+	/* Set port as SGMII Auto-Negotiation */
+	mvEthComplexPortInBandAnEnable(port, MV_TRUE);
 	/* 0x1 for 1Gbps, 0x0 for 2.5Gbps */
 	if (ethComplexOptions & MV_ETHCOMP_GE_MAC0_2_COMPHY_SPEED_2G)
 		mvEthComplexPortDpClkSrcSet(port, 0x0);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
index fe72ea6..95622f9 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
@@ -176,6 +176,21 @@ enum mvSwPortSrc {
 #define GPON_PHY_CTRL1_OFFSET				0
 #define GPON_PHY_CTRL1_MASK				(0x1 << GPON_PHY_CTRL1_OFFSET)
 
+/*******************************************************************************
+* Port Auto-Negotiation Configuration
+*/
+#define MV_ETH_IN_BAND_AN_EN_OFFSET		2
+#define MV_ETH_IN_BAND_AN_EN_MASK		(1 << MV_ETH_IN_BAND_AN_EN_OFFSET)
+
+#define MV_ETH_SPEED_AUTO_NEG_OFFSET		7
+#define MV_ETH_SPEED_AUTO_NEG_MASK		(1 << MV_ETH_SPEED_AUTO_NEG_OFFSET)
+
+#define MV_ETH_FLOW_CTRL_AUTO_NEG_OFFSET	11
+#define MV_ETH_FLOW_CTRL_AUTO_NEG_MASK		(1 << MV_ETH_FLOW_CTRL_AUTO_NEG_OFFSET)
+
+#define MV_ETH_DUPLEX_AUTO_NEG_OFFSET		13
+#define MV_ETH_DUPLEX_AUTO_NEG_MASK		(1 << MV_ETH_DUPLEX_AUTO_NEG_OFFSET)
+
 #ifdef CONFIG_MV_ETH_PP2
 MV_STATUS mvEthComplexInit(MV_U32 ethCompConfig);
 #else
-- 
1.7.5.4

