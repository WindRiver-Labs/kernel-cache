From f810f1cf831a0393aa41ec5694a9e452a315553e Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Wed, 20 Mar 2013 15:40:49 +0200
Subject: [PATCH 0503/1825] ALP: Remove unsupported feature: Power Management

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit e07b9d7e2c0e4d41e81e6a868e7ee6282322aa37

Power Management (CONFIG_PM) is unsupported in AvantaLP.

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I5505355a376e025b731140907344610524093769
Reviewed-on: http://vgitil04.il.marvell.com:8080/1345
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/Makefile |    1 -
 arch/arm/mach-avantalp/pm.c     |  159 ---------------------------------------
 2 files changed, 0 insertions(+), 160 deletions(-)
 delete mode 100644 arch/arm/mach-avantalp/pm.c

diff --git a/arch/arm/mach-avantalp/Makefile b/arch/arm/mach-avantalp/Makefile
index 6ab890e..8dc628d 100644
--- a/arch/arm/mach-avantalp/Makefile
+++ b/arch/arm/mach-avantalp/Makefile
@@ -192,7 +192,6 @@ avantalp-$(CONFIG_MV_AMP_ENABLE)	+= $(SOC_ENV_DIR)/mvUnitMap.o
 avantalp-$(CONFIG_MV_AMP_ENABLE)	+= $(SOC_ENV_DIR)/mvSemaphore.o
 avantalp-$(CONFIG_PROC_FS)		+= dump_cp15_regs.o
 obj-$(CONFIG_FB_DOVE_CLCD)		+= clcd.o
-obj-$(CONFIG_PM)			+= pm.o
 obj-$(CONFIG_LOCAL_TIMERS) += localtimer.o
 
 
diff --git a/arch/arm/mach-avantalp/pm.c b/arch/arm/mach-avantalp/pm.c
deleted file mode 100644
index 7c16339..0000000
--- a/arch/arm/mach-avantalp/pm.c
+++ /dev/null
@@ -1,159 +0,0 @@
-/*
- * pm.c
- *
- * Power Management functions for Marvell ArmadaXP System On Chip
- *
- * Maintainer: Nadav Haklai <nadavh@marvell.com>
- *
- * This file is licensed under  the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
- */
-#include <linux/module.h>
-#include <linux/sysfs.h>
-#include <linux/proc_fs.h>
-#include <linux/interrupt.h>
-#include <linux/suspend.h>
-#include <linux/interrupt.h>
-
-#include "mvOs.h"
-#include "ctrlEnv/mvCtrlEnvSpec.h"
-
-#ifdef CONFIG_SHEEVA_DEEP_IDLE
-extern void armadaxp_deepidle(int power_state);
-extern void armadaxp_suspend(void);
-extern void axp_db_restore(void);
-
-typedef enum  {
-	DISABLED,
-	WFI,
-	DEEP_IDLE,
-	SNOOZE,
-} MV_PM_STATES;
-
-/*
- * Logical check for Armada XP valid PM states
- */
-static int armadaxp_pm_valid(suspend_state_t state)
-{
-	return ((state == PM_SUSPEND_STANDBY) ||
-		(state == PM_SUSPEND_MEM));
-}
-
-/*
- * Enter the requested PM state
- */
-static int armadaxp_pm_enter(suspend_state_t state)
-{
-
-	MV_U32 reg;
-
-	switch (state)	{
-	case PM_SUSPEND_STANDBY:
-
-		/* Reenable the Uart IRQ in order to wake from it */
-		/* Enable Uart IRQ */
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_UART0));
-		reg |= 0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_UART0), reg);
-
-		/* Disable IPI IRQs */
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_IN_DRBL_LOW));
-		reg &= ~0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_IN_DRBL_LOW), reg);
-
-#ifdef CONFIG_MV_ETH_PNC_WOL
-
-		printk(KERN_INFO "Entering Wol Mode (Neta IRQs 8,10,12,14 are enabled now)...\n");
-
-		/* Reenable the NETA IRQ in order to wake from it */
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE0_FIC));
-		reg |= 0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE0_FIC), reg);
-
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE1_FIC));
-		reg |= 0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE1_FIC), reg);
-
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE2_FIC));
-		reg |= 0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE2_FIC), reg);
-
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE3_FIC));
-		reg |= 0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE3_FIC), reg);
-#endif /* CONFIG_MV_ETH_PNC_WOL */
-
-		armadaxp_deepidle(SNOOZE);
-
-		/* Enable IPI IRQs - return to original state */
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_IN_DRBL_LOW));
-		reg |= 0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_IN_DRBL_LOW), reg);
-
-		/* Disable it since it will be re-enabled by the stack */
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_UART0));
-		reg &= ~0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_UART0), reg);
-#ifdef CONFIG_MV_ETH_PNC_WOL
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE0_FIC));
-		reg &= ~0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE0_FIC), reg);
-
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE1_FIC));
-		reg &= ~0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE1_FIC), reg);
-
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE2_FIC));
-		reg &= ~0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE2_FIC), reg);
-
-		reg = MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE3_FIC));
-		reg &= ~0x1;
-		MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(IRQ_AURORA_GBE3_FIC), reg);
-
-		printk(KERN_INFO "Exiting Wol Mode (Neta IRQs 8,10,12,14 are disabled now)...\n");
-#endif /* CONFIG_MV_ETH_PNC_WOL */
-		break;
-
-	case PM_SUSPEND_MEM:
-
-		pr_info("Suspending Armada XP\n");
-		armadaxp_suspend();
-
-		pr_info("Restoring Armada XP\n");
-		axp_db_restore();
-
-		break;
-	default:
-		return -EINVAL;
-	}
-
-	return 0;
-}
-
-static struct platform_suspend_ops armadaxp_pm_ops = {
-	.valid		= armadaxp_pm_valid,
-	.enter		= armadaxp_pm_enter,
-};
-
-static int __init armadaxp_pm_init(void)
-{
-	printk(KERN_INFO "ArmadaXP Power Managament Suspend Operations Initialized\n");
-	suspend_set_ops(&armadaxp_pm_ops);
-	return 0;
-}
-
-__initcall(armadaxp_pm_init);
-
-#else
-
-static int __init armadaxp_pm_init(void)
-{
-	printk(KERN_INFO "ArmadaXP Power Managament NOT Initialized (Missing Deep-Idle Support)\n");
-	return 0;
-}
-
-__initcall(armadaxp_pm_init);
-
-#endif /* CONFIG_SHEEVA_DEEP_IDLE */
-- 
1.7.5.4

