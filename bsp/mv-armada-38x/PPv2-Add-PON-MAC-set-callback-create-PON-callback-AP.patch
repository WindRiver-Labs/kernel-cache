From 673df0899ad46411c948ee87bad3a12a13faba05 Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Thu, 23 May 2013 12:11:06 +0300
Subject: [PATCH 0682/1825] PPv2: Add PON MAC set callback, create PON
 callback API

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 478f3be5b06103aa3a62355093570b9d4a30fe5f

Change-Id: I55b6ea0f83334802d149d8de7de8e846db733550
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/1950
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c    |    6 ++
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |   60 ++++++++++++-------
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |   34 +++++++----
 3 files changed, 65 insertions(+), 35 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c
index eb0e0b9..61e247b 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c
@@ -240,6 +240,12 @@ static int mv_eth_set_mac_addr_internals(struct net_device *dev, void *addr)
 	for (i = 0; i < 6; i++)
 		dev->dev_addr[i] = mac[i];
 
+#ifdef CONFIG_MV_PON
+	/* Update PON module */
+	if (MV_PON_PORT(priv->port))
+		mv_pon_set_mac_addr(addr);
+#endif
+
 	printk(KERN_NOTICE "%s: mac address changed\n", dev->name);
 
 	return 0;
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 1577a2f..6d9d9d1 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -4789,51 +4789,67 @@ int mv_eth_all_ports_cleanup(void)
 	return 0;
 }
 
-
 #ifdef CONFIG_MV_PON
-/* PON link status api */
-PONLINKSTATUSPOLLFUNC pon_link_status_polling_func;
-/* PON MTU config api */
-PONMTUCFGFUNC         pon_mtu_config_func;
+/* Used by PON module */
+struct mv_netdev_notify_ops mv_netdev_callbacks;
+
+/* Used by netdev driver */
+struct mv_eth_ext_mac_ops *mv_pon_callbacks;
 
-void pon_link_status_notify_func(MV_BOOL link_state)
+void pon_link_status_notify(int port_id, MV_BOOL link_state)
 {
 	struct eth_port *pon_port = mv_eth_port_by_id(MV_PON_LOGIC_PORT_GET());
 	mv_eth_link_event(pon_port, 1);
 }
 
 /* called by PON module */
-void mv_pon_link_state_register(PONLINKSTATUSPOLLFUNC poll_func, PONLINKSTATUSNOTIFYFUNC *notify_func,
-				PONMTUCFGFUNC mtu_func)
+void mv_eth_ext_mac_ops_register(int port_id,
+		struct mv_eth_ext_mac_ops *ext_mac_ops, struct mv_netdev_notify_ops **netdev_ops)
 {
-	pon_link_status_polling_func = poll_func;
-	*notify_func = pon_link_status_notify_func;
-	pon_mtu_config_func = mtu_func;
+	mv_netdev_callbacks.link_notify = pon_link_status_notify;
+	*netdev_ops = &mv_netdev_callbacks;
+
+	mv_pon_callbacks = ext_mac_ops;
 }
 
 MV_BOOL mv_pon_link_status(void)
 {
-	if (pon_link_status_polling_func != NULL)
-		return pon_link_status_polling_func();
+	if (mv_pon_callbacks && mv_pon_callbacks->link_status_get)
+		return mv_pon_callbacks->link_status_get(MV_PON_LOGIC_PORT_GET());
 
-	printk(KERN_ERR "pon_link_status_polling_func is uninitialized\n");
+	printk(KERN_ERR "pon link_status_get is uninitialized\n");
 
 	return MV_TRUE;
 }
 
-MV_BOOL mv_pon_mtu_config(MV_U32 maxEth)
+MV_STATUS mv_pon_mtu_config(MV_U32 maxEth)
 {
-	if (pon_mtu_config_func != NULL) {
-		if (pon_mtu_config_func(maxEth) != MV_OK) {
-			printk(KERN_ERR "pon_mtu_config_func failed\n");
-			return MV_FALSE;
+	if (mv_pon_callbacks && mv_pon_callbacks->max_pkt_size_set) {
+		if (mv_pon_callbacks->max_pkt_size_set(MV_PON_LOGIC_PORT_GET(), maxEth) != MV_OK) {
+			printk(KERN_ERR "pon max_pkt_size_set failed\n");
+			return MV_FAIL;
 		}
 	} else {
-		printk(KERN_ERR "pon_mtu_config_func is uninitialized\n");
-		return MV_FALSE;
+		printk(KERN_ERR "pon max_pkt_size_set is uninitialized\n");
+		return MV_FAIL;
 	}
 
-	return MV_TRUE;
+	return MV_OK;
+}
+
+MV_STATUS mv_pon_set_mac_addr(void *addr)
+{
+	if (mv_pon_callbacks && mv_pon_callbacks->mac_addr_set) {
+		if (mv_pon_callbacks->mac_addr_set(MV_PON_LOGIC_PORT_GET(), addr) != MV_OK) {
+			printk(KERN_ERR "pon mac_addr_set failed\n");
+			return MV_FAIL;
+		}
+	} else {
+		printk(KERN_ERR "pon mac_addr_set is uninitialized\n");
+		return MV_FAIL;
+	}
+
+	return MV_OK;
 }
 #endif /* CONFIG_MV_PON */
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index ba964e0..20d3306 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -804,22 +804,30 @@ void        mv_eth_rx_desc_print(struct pp2_rx_desc *desc);
 void        mv_eth_skb_print(struct sk_buff *skb);
 void        mv_eth_link_status_print(int port);
 
-#ifdef CONFIG_MV_PON
-typedef MV_BOOL(*PONLINKSTATUSPOLLFUNC)(void);		  /* prototype for PON link status polling function */
-typedef void   (*PONLINKSTATUSNOTIFYFUNC)(MV_BOOL state); /* prototype for PON link status notification function */
-typedef MV_STATUS(*PONMTUCFGFUNC)(MV_U32 maxEth);         /* prototype for PON MTU config function */
-
-MV_BOOL mv_pon_link_status(void);
-MV_BOOL mv_pon_mtu_config(MV_U32 maxEth);
+/* External MAC support (i.e. PON) */
+/* callback functions to be called by netdev (implemented in external MAC module) */
+struct mv_eth_ext_mac_ops {
+	MV_BOOL		(*link_status_get)(int port_id);
+	MV_STATUS	(*max_pkt_size_set)(int port_id, MV_U32 maxEth);
+	MV_STATUS	(*mac_addr_set)(int port_id, void *addr);
+	MV_STATUS	(*port_enable)(int port_id);
+	MV_STATUS	(*port_disable)(int port_id);
+	MV_STATUS	(*mib_counters_show)(int port_id);
+};
 
-void mv_pon_link_state_register(PONLINKSTATUSPOLLFUNC poll_func,
-				PONLINKSTATUSNOTIFYFUNC *notify_func,
-				PONMTUCFGFUNC mtu_func);
+/* callback functions to be called by external MAC module (implemented in netdev) */
+struct mv_netdev_notify_ops {
+	void		(*link_notify)(int port_id, MV_BOOL state);
+};
 
-void mv_pon_ctrl_omci_type(MV_U16 type);
-void mv_pon_ctrl_omci_rx_gh(int en);
-void mv_pon_omci_print(void);
+/* Called by external MAC module */
+void mv_eth_ext_mac_ops_register(int port_id,
+		struct mv_eth_ext_mac_ops *extern_mac_ops, struct mv_netdev_notify_ops **netdev_ops);
 
+#ifdef CONFIG_MV_PON
+MV_BOOL mv_pon_link_status(void);
+MV_STATUS mv_pon_mtu_config(MV_U32 maxEth);
+MV_STATUS mv_pon_set_mac_addr(void *addr);
 #endif /* CONFIG_MV_PON */
 
 #ifdef CONFIG_MV_ETH_TX_SPECIAL
-- 
1.7.5.4

