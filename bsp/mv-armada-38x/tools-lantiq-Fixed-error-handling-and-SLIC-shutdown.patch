From f94f2361935a9a22636189a9bad38b5478d74590 Mon Sep 17 00:00:00 2001
From: Eran Ben-Avi <benavi@marvell.com>
Date: Thu, 11 Jul 2013 16:55:21 +0300
Subject: [PATCH 0788/1825] tools/lantiq: Fixed error handling and SLIC
 shutdown.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit a00771b674234fb78302f32aed1bb05e4b5842e6

	- Do not exit without TDM shutdown.
	- Shutdown SLIC before exiting.

Change-Id: I856292cec49d3fdaa2b0c2554fca03e29a4042f1
Signed-off-by: Piotr Ziecik <kosmo@semihalf.com>
Signed-off-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 tools/voice/lantiq/kernel/libtapi.c       |   11 +++++
 tools/voice/lantiq/kernel/libtapi.h       |    1 +
 tools/voice/lantiq/kernel/mv_voice_tool.c |   64 +++++++++++++++++------------
 3 files changed, 50 insertions(+), 26 deletions(-)

diff --git a/tools/voice/lantiq/kernel/libtapi.c b/tools/voice/lantiq/kernel/libtapi.c
index 3712563..a579764 100644
--- a/tools/voice/lantiq/kernel/libtapi.c
+++ b/tools/voice/lantiq/kernel/libtapi.c
@@ -369,6 +369,17 @@ tapi_dev_start(tapi_handle_t th, unsigned int device)
 }
 
 int
+tapi_dev_stop(tapi_handle_t th, unsigned int device)
+{
+	IFX_TAPI_DEV_START_CFG_t devstart;
+
+	devstart.dev	= device;
+	devstart.nMode	= IFX_TAPI_INIT_MODE_DEFAULT;
+
+	return (ioctl(th->fd, IFX_TAPI_DEV_STOP, &devstart));
+}
+
+int
 tapi_bbd_download(tapi_handle_t th, unsigned int device, unsigned int channel,
 							const char *bbdfile)
 {
diff --git a/tools/voice/lantiq/kernel/libtapi.h b/tools/voice/lantiq/kernel/libtapi.h
index 44c6c03..4b470ef 100644
--- a/tools/voice/lantiq/kernel/libtapi.h
+++ b/tools/voice/lantiq/kernel/libtapi.h
@@ -308,6 +308,7 @@ extern int tapi_basic_init(tapi_handle_t th, unsigned int device,
 extern int tapi_fw_download(tapi_handle_t th, unsigned int device,
 							    const char *fwfile);
 extern int tapi_dev_start(tapi_handle_t th, unsigned int device);
+extern int tapi_dev_stop(tapi_handle_t th, unsigned int device);
 extern int tapi_bbd_download(tapi_handle_t th, unsigned int device,
 				     unsigned int channel, const char *bbdfile);
 extern int tapi_line_calibrate(tapi_handle_t th, unsigned int device,
diff --git a/tools/voice/lantiq/kernel/mv_voice_tool.c b/tools/voice/lantiq/kernel/mv_voice_tool.c
index c0f7578..5b183e3 100644
--- a/tools/voice/lantiq/kernel/mv_voice_tool.c
+++ b/tools/voice/lantiq/kernel/mv_voice_tool.c
@@ -158,6 +158,12 @@ int main(void)
 		return 1;
 	}
 
+	th = tapi_open(tapi_name);
+	if (th == NULL) {
+		printf("%s Error, could not open tapi device.\n", TOOL_PREFIX);
+		return 1;
+	}
+
 	/* set some flags */
 	fdflags = fcntl(tdm_fd, F_GETFL, 0);
 	fdflags |= O_NONBLOCK;
@@ -301,40 +307,29 @@ int main(void)
 				/* Start Telephony */
 				if(ioctl(tdm_fd, TDM_DEV_TDM_START, &tdm_params)) {
 					printf("%s Error, unable to init TDM.\n", TOOL_PREFIX);
-					return 1;
-				}
-
-				th = tapi_open(tapi_name);
-				if (th == NULL) {
-					printf("%s Error, could not open tapi device.\n", TOOL_PREFIX);
-					return 1;
+					break;
 				}
 
 				if (tapi_basic_init(th, TAPI_DEVICE, TAPI_IRQ) < 0) {
 					printf("%s Error, could not initialize tapi device.\n", TOOL_PREFIX);
-					return 1;
+					break;
 				}
 
 				if (tapi_fw_download(th, TAPI_DEVICE, tapi_fw_name) < 0) {
 					printf("%s Error, could not load tapi firmware.\n", TOOL_PREFIX);
-					return 1;
+					break;
 				}
 
 				if (tapi_dev_start(th, TAPI_DEVICE) < 0) {
 					printf("%s Error, could not start tapi device.\n", TOOL_PREFIX);
-					return 1;
-				}
-
-				if (tapi_bbd_download(th, TAPI_DEVICE, -1, tapi_bbd_name) < 0) {
-					printf("%s Error, could not load tapi configuration.\n", TOOL_PREFIX);
-					return 1;
+					break;
 				}
 
 				if (tapi_pcm_if_config(th, TAPI_DEVICE,
 				    TAPI_PCM_IF_MODE_SLAVE, TAPI_PCM_IF_FREQ_8192KHZ,
 				    TAPI_PCM_IF_SLOPE_FALL, TAPI_PCM_IF_SLOPE_FALL) < 0) {
 					printf("%s Error, could not configure PCM interface.\n", TOOL_PREFIX);
-					return 1;
+					break;
 				}
 
 				switch(pcm_bytes) {
@@ -354,56 +349,70 @@ int main(void)
 				}
 
 				for (i = 0; i < TAPI_CHANNELS; i++) {
+					if (tapi_bbd_download(th, TAPI_DEVICE, i, tapi_bbd_name) < 0) {
+						printf("%s Error, could not load tapi configuration.\n", TOOL_PREFIX);
+						break;
+					}
+
 					if (tapi_line_type_set(th, TAPI_DEVICE, i, TAPI_LINE_TYPE_FXS_AUTO) < 0) {
 						printf("%s Error, could not set line type.\n", TOOL_PREFIX);
-						return 1;
+						break;
 					}
 
 					if (tapi_event_enable(th, TAPI_DEVICE, i, TAPI_EVENT_FXS_ONHOOK) < 0) {
 						printf("%s Error, could enable event reporting.\n", TOOL_PREFIX);
-						return 1;
+						break;
 					}
 
 					if (tapi_event_enable(th, TAPI_DEVICE, i, TAPI_EVENT_FXS_OFFHOOK) < 0) {
 						printf("%s Error, could enable event reporting.\n", TOOL_PREFIX);
-						return 1;
+						break;
 					}
 
 					if (tapi_event_enable(th, TAPI_DEVICE, i, TAPI_EVENT_CALIBRATION_END) < 0) {
 						printf("%s Error, could enable event reporting.\n", TOOL_PREFIX);
-						return 1;
+						break;
 					}
 				}
 
+				if (i != TAPI_CHANNELS)
+					break;
+
 				/* Wait to device/s and line/s calibration to finish */
 				while((cal_lines < total_lines)) {
 					printf("SLIC: Calibrating line %u ...\n", cal_lines);
 
 					if (tapi_line_calibrate(th, TAPI_DEVICE, cal_lines) < 0) {
 						printf("%s Error, could not calibrate line.\n", TOOL_PREFIX);
-						return 1;
+						break;
 					}
 
 					wait_for_event(1);
 				}
 
+				if (cal_lines != total_lines)
+					break;
+
 				for (i = 0; i < TAPI_CHANNELS; i++) {
 					if (tapi_line_feed_set(th, TAPI_DEVICE, i, TAPI_LINE_FEED_STANDBY) < 0) {
 						printf("%s Error, could not set line feed.\n", TOOL_PREFIX);
-						return 1;
+						break;
 					}
 
 					if (tapi_pcm_channel_config(th, TAPI_DEVICE, i, ((i+1)*pcm_bytes), ((i+1)*pcm_bytes), codec) < 0) {
 						printf("%s Error, could not configure PCM channel.\n", TOOL_PREFIX);
-						return 1;
+						break;
 					}
 
 					if (tapi_pcm_channel_activate(th, TAPI_DEVICE, i) < 0) {
 						printf("%s Error, could not activate PCM channel.\n", TOOL_PREFIX);
-						return 1;
+						break;
 					}
 				}
 
+				if (i != TAPI_CHANNELS)
+					break;
+
 				slic_init = 1;
 				break;
 
@@ -455,7 +464,7 @@ static void release(int signum)
 	/* Stop SLIC/s */
 	if(slic_init) {
 		printf("\n%s Stopping SLIC\n", TOOL_PREFIX);
-		tapi_close(th);
+		tapi_dev_stop(th, TAPI_DEVICE);
 		printf("\n%s Stopped SLIC\n", TOOL_PREFIX);
 		slic_init = 0;
 	} else {
@@ -470,8 +479,11 @@ static void release(int signum)
 		printf("\n%s TDM stopped\n", TOOL_PREFIX);
 	}
 
-	if (signum)
+	if (signum) {
+		tapi_close(th);
 		close(tdm_fd);
+		exit(signum);
+	}
 }
 
 static void gen_tone(unsigned short freq, unsigned char line_id, unsigned char* tx_buff)
-- 
1.7.5.4

