From f7a2d5b2c0cd32fe4d9248388fb71feef1819639 Mon Sep 17 00:00:00 2001
From: Eran Ben-Avi <benavi@marvell.com>
Date: Thu, 26 Dec 2013 12:27:49 +0200
Subject: [PATCH 1250/1825] alp: tdm: support silabs isi slic interface

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit e9df29e80222842bda72039f487bd72dde0a181f

Support Silicon Labs ISI SLIC interface and adapt avanta_lp
family and SPI HAL driver accordingly.
Fix ISI MPPs configuration.

Change-Id: If3ee711d5d8f4f18ef03dfd1f9d85d4032371ba1
Signed-off-by: Eran Ben-Avi <benavi@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4882
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |    7 +++-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   32 +++++++++-------
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |   29 ++++++++++++++--
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |    2 +-
 arch/arm/mach-avantalp/core.c                      |    4 ++-
 arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c        |   13 +++++--
 arch/arm/plat-armada/include/plat/silabs_if.h      |    6 +++
 .../mv_drivers_lsp/mv_phone/slic/silabs_if.c       |   37 +++++++++++++-------
 .../mv_drivers_lsp/mv_phone/tdm/tdm_if.c           |    8 ++++-
 arch/arm/plat-armada/mv_hal/spi/mvSpi.c            |    9 ++++-
 arch/arm/plat-armada/mv_hal/spi/mvSpi.h            |    3 +-
 drivers/staging/telephony/mv_tdm/Kconfig           |   25 +++++++++++++-
 tools/voice/silabs/Makefile                        |    8 +++-
 13 files changed, 140 insertions(+), 43 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 08db412..e5214bc 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -126,7 +126,10 @@ MV_BOARD_TDM_INFO db88f6660Tdm880[] = { {0} };
 
 MV_BOARD_TDM_INFO db88f6660TdmZSI[] = { {2} };
 
-MV_BOARD_TDM_SPI_INFO db88f6660TdmSpiInfo[] = {{-1}, {-1}, {-1}, {1}, {1} };
+MV_BOARD_TDM_INFO db88f6660TdmISI[] = { {2} };
+
+
+MV_BOARD_TDM_SPI_INFO db88f6660TdmSpiInfo[] = {{-1}, {-1}, {1}, {1}, {1} };
 
 MV_BOARD_INFO db88f6660_board_info = {
 	.boardName			= "DB-88F6660",
@@ -165,7 +168,7 @@ MV_BOARD_INFO db88f6660_board_info = {
 
 	/* TDM */
 	.numBoardTdmInfo		= {-1, -1, -1, 1, 1},
-	.pBoardTdmInt2CsInfo		= {NULL, NULL,  NULL, db88f6660TdmZSI, db88f6660Tdm880},
+	.pBoardTdmInt2CsInfo		= {NULL, NULL,  db88f6660TdmISI, db88f6660TdmZSI, db88f6660Tdm880},
 	.boardTdmInfoIndex		= 0,
 
 	.pBoardSpecInit			= NULL,
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 9c7912b..57d2d73 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -122,7 +122,9 @@ MV_U32 boardOptionsConfig[MV_CONFIG_TYPE_MAX_OPTION];
 
 MV_BOARD_SATR_INFO boardSatrInfo[] = MV_SAR_INFO;
 
-static MV_VOID mvCtrlTdmModeSet(MV_VOID);
+#if defined(MV_INCLUDE_TDM)
+static MV_VOID mvCtrlTdmCtrlRegSet(MV_VOID);
+#endif
 
 MV_U32 mvCtrlGetCpuNum(MV_VOID)
 {
@@ -359,7 +361,7 @@ MV_STATUS mvCtrlEnvInit(MV_VOID)
 	MV_REG_BIT_RESET(SOC_DEV_MUX_REG, BIT27);
 
 #if defined(MV_INCLUDE_TDM)
-	mvCtrlTdmModeSet();
+	mvCtrlTdmCtrlRegSet();
 	mvCtrlTdmClkCtrlConfig();
 #endif
 
@@ -1135,7 +1137,7 @@ MV_U32 mvCtrlSdioSupport(MV_VOID)
 
 #if defined(MV_INCLUDE_TDM)
 /*******************************************************************************
-* mvCtrlTdmModeSet - Set TDM mode type: TDM, TDM+ISI, TDM+ZSI
+* mvCtrlTdmCtrlRegSet - Set TDM configuration register for: TDM, TDM+ISI, TDM+ZSI
 *
 * DESCRIPTION:
 *
@@ -1149,33 +1151,33 @@ MV_U32 mvCtrlSdioSupport(MV_VOID)
 *       None.
 *
 *******************************************************************************/
-static MV_VOID mvCtrlTdmModeSet(MV_VOID)
+static MV_VOID mvCtrlTdmCtrlRegSet(MV_VOID)
 {
-	MV_U32 tdmMode;
+	MV_U32 tdmCtrl;
 
 	switch (mvBoardSlicUnitTypeGet()) {
 	case MV_BOARD_SLIC_DISABLED:
 	case MV_BOARD_SLIC_SSI_ID:
 		return;
 	case MV_BOARD_SLIC_ISI_ID:
-		tdmMode = ISI_MODE;
+		tdmCtrl = (ISI_MODE | ISI_MODE_CS_DEASSERT_BIT_COUNT_VAL | SPI_B_MODE_ISI_ENABLE_MASK);
 		break;
 	case MV_BOARD_SLIC_ZSI_ID:
-		tdmMode = ZSI_MODE;
+		tdmCtrl = ZSI_MODE;
 		break;
 	case MV_BOARD_SLIC_EXTERNAL_ID:
-		tdmMode = TDM_MODE;
+		tdmCtrl = TDM_MODE;
 		break;
 	default:
 		mvOsPrintf("%s: Error: wrong SLIC type\n", __func__);
 		return;
 	}
 
-	/* Reset TDM mode field */
-	MV_REG_WRITE(MV_TDM_CTRL_REG, (MV_REG_READ(MV_TDM_CTRL_REG) & ~(TDM_MODE_MASK)));
+	/* Reset TDM Control register field/s */
+	MV_REG_WRITE(MV_TDM_CTRL_REG, (MV_REG_READ(MV_TDM_CTRL_REG) & ~TDM_MODE_MASK));
 
-	/* Set new TDM mode */
-	MV_REG_BIT_SET(MV_TDM_CTRL_REG, tdmMode);
+	/* Set updated value to TDM Control register */
+	MV_REG_BIT_SET(MV_TDM_CTRL_REG, tdmCtrl);
 
 	return;
 }
@@ -1198,6 +1200,7 @@ static MV_VOID mvCtrlTdmModeSet(MV_VOID)
 MV_VOID mvCtrlTdmClkCtrlConfig(MV_VOID)
 {
 	MV_U32 clkReg, pcmClkFreq;
+	MV_U32 dcoMask, dcoVal;
 
 #if defined(MV_TDM_PCM_CLK_8MHZ)
 	pcmClkFreq = DCO_CLK_DIV_RATIO_8M;
@@ -1231,9 +1234,10 @@ MV_VOID mvCtrlTdmClkCtrlConfig(MV_VOID)
 	mvOsUDelay(1);
 
 	/* Set DCO correction to 0PPM */
+	dcoMask = (DCO_MOD_CTRL_MASK | DCO_CTRLFS_MASK);
+	dcoVal = (DCO_MOD_CTRL_BASE_VAL | DCO_CTRLFS_24MHZ);
 	clkReg = MV_REG_READ(DCO_MOD_CTRL_REG);
-	MV_REG_WRITE(DCO_MOD_CTRL_REG,
-		     (clkReg & ~DCO_MOD_CTRL_MASK) | DCO_MOD_CTRL_BASE_VAL);
+	MV_REG_WRITE(DCO_MOD_CTRL_REG, ((clkReg & ~dcoMask) | dcoVal));
 	mvOsUDelay(1);
 
 	/* Set DCO source ratio */
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index 2290193..e2c1784 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -88,12 +88,23 @@ extern "C" {
 
 /* TDM Control Register */
 #define MV_TDM_CTRL_REG				MV_MISC_REGS_OFFSET
+
 #define TDM_MODE_OFFS				1
 #define TDM_MODE_MASK				(3 << TDM_MODE_OFFS)
 #define TDM_MODE				(0 << TDM_MODE_OFFS)
 #define ISI_MODE				(1 << TDM_MODE_OFFS)
 #define ZSI_MODE				(2 << TDM_MODE_OFFS)
 
+#define ISI_MODE_CS_DEASSERT_BIT_COUNT_OFFS	8
+#define ISI_MODE_CS_DEASSERT_BIT_COUNT_MASK	(0x1f << ISI_MODE_CS_DEASSERT_BIT_COUNT_OFFS)
+#define ISI_MODE_CS_DEASSERT_BIT_COUNT_VAL	(7 << ISI_MODE_CS_DEASSERT_BIT_COUNT_OFFS)
+
+#define SPI_A_MODE_ISI_ENABLE_OFFS		13
+#define SPI_A_MODE_ISI_ENABLE_MASK		(1 << SPI_A_MODE_ISI_ENABLE_OFFS)
+
+#define SPI_B_MODE_ISI_ENABLE_OFFS		14
+#define SPI_B_MODE_ISI_ENABLE_MASK		(1 << SPI_B_MODE_ISI_ENABLE_OFFS)
+
 /*
  * SoC Device Multiplex Register
  */
@@ -134,6 +145,13 @@ extern "C" {
 #define PMC_SATA_STOP_CLK_EN			(3 << PMC_SATA_STOP_CLK_OFFS)
 #define PMC_SATA_STOP_CLK_STOP			(0 << PMC_SATA_STOP_CLK_OFFS)
 
+/*
+ * System Soft Reset
+ */
+#define	SYS_SOFT_RESET_REG			0x18258
+#define ISI_SOFT_RST_OFFS			14
+#define ISI_SOFT_RST_MASK			(1 << ISI_SOFT_RST_OFFS)
+
 /* SSCG Registers */
 #define	SSCG_CONF_REG				0x184D8
 #define	SSCG_CONF_MODE(reg)			(((reg) >> 16) & 0x3)
@@ -209,13 +227,18 @@ extern "C" {
 /* DCO clock ratio is 48Mhz/x */
 #define DCO_CLK_DIV_RATIO_OFFS			26
 #define DCO_CLK_DIV_RATIO_MASK			(BIT26 | BIT27 | BIT28 | BIT29 | BIT30 | BIT31)
-#define DCO_CLK_DIV_RATIO_8M			(0x6 << DCO_CLK_DIV_RATIO_OFFS)
-#define DCO_CLK_DIV_RATIO_4M			(0xc << DCO_CLK_DIV_RATIO_OFFS)
-#define DCO_CLK_DIV_RATIO_2M			(0x18 << DCO_CLK_DIV_RATIO_OFFS)
+#define DCO_CLK_DIV_RATIO_8M			(0x3 << DCO_CLK_DIV_RATIO_OFFS)
+#define DCO_CLK_DIV_RATIO_4M			(0x6 << DCO_CLK_DIV_RATIO_OFFS)
+#define DCO_CLK_DIV_RATIO_2M			(0xc << DCO_CLK_DIV_RATIO_OFFS)
 
 
 /* DCO Control Register [13:2], Value range: 0x20-0xFE0, 0x1 = 1.27PPM */
 #define DCO_MOD_CTRL_REG			0x18794
+#define DCO_CTRLFS_OFFS				0
+#define DCO_CTRLFS_MASK				(3 << DCO_CTRLFS_OFFS)
+#define DCO_CTRLFS_24MHZ			(1 << DCO_CTRLFS_OFFS)
+#define DCO_CTRLFS_48MHZ			(2 << DCO_CTRLFS_OFFS)
+
 #define DCO_MOD_CTRL_MASK			(BIT2 | BIT3 | BIT4 | BIT5 | BIT6 | BIT7 | BIT8 | BIT9 | BIT10 | BIT11 | BIT12 | BIT13)
 #define DCO_MOD_CTRL_OFFS			0x2
 #define DCO_MOD_CTRL_BASE			0x800
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index b12605d..9b5b389 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -286,7 +286,7 @@ typedef enum {
 #define MPP_GROUP_2_TYPE { \
 	0x00002222,     /* SLIC_DISABLED  */ \
 	0x33032222,     /* SLIC_SSI_DEV  */ \
-	0x11112222,     /* SLIC_ISI_DEV  */ \
+	0x33030222,     /* SLIC_ISI_DEV  */ \
 	0x44442222,     /* SLIC_ZSI_DEV  */ \
 	0x22222222,     /* SLIC_EXTERNAL_DEV	*/ \
 }
diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index 27da929..390190b 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -1421,8 +1421,10 @@ static void alp_spi_init(void)
 {
 #ifdef CONFIG_MV_INCLUDE_SPI
 	/* SPI */
-	if(mvUnitMapIsMine(SPI) == MV_TRUE)
+	if (mvUnitMapIsMine(SPI) == MV_TRUE) {
 		mvSysSpiInit(0, _16M);
+		mvSysSpiInit(1, _16M);
+	}
 #endif
 }
 
diff --git a/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c b/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c
index a82cc25..31d4e1c 100644
--- a/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c
+++ b/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c
@@ -120,7 +120,8 @@ MV_STATUS mvSysTdmInit(MV_TDM_PARAMS* tdmParams)
 #ifdef MV_TDM_SUPPORT
 		status = mvTdmHalInit (tdmParams, &halData);
 
-		if (MV_BOARD_SLIC_ZSI_ID == mvBoardSlicUnitTypeGet()) {
+		if ((MV_BOARD_SLIC_ZSI_ID == mvBoardSlicUnitTypeGet()) ||
+			(MV_BOARD_SLIC_ISI_ID == mvBoardSlicUnitTypeGet())) {
 			/* Issue SLIC reset */
 			mvGppValueSet(0, BIT19, 0);
 			mvOsUDelay(60);
@@ -165,9 +166,12 @@ MV_VOID mvSysTdmSpiRead(MV_U16 lineId, MV_U8* cmdBuff, MV_U8 cmdSize, MV_U8* dat
 	spiType = SPI_TYPE_SLIC_ZSI;
 #endif
 
+#ifdef CONFIG_SILABS_SERIAL_SLIC_SUPPORT
+	spiType = SPI_TYPE_SLIC_ISI;
+#endif
+
 	/* Set SPI parameters(lineId = devId) */
 	mvSpiParamsSet(mvBoardTdmSpiIdGet(), mvBoardTdmSpiCsGet(lineId), spiType);
-
 	if (MV_BOARD_SLIC_ZSI_ID == mvBoardSlicUnitTypeGet()) {
 		if (MV_OK != mvSpiWrite(mvBoardTdmSpiIdGet(), cmdBuff, (cmdSize - dataSize)))
 			mvOsPrintf(KERN_ERR "ZSI: SPI write failed !!!\n");
@@ -175,7 +179,6 @@ MV_VOID mvSysTdmSpiRead(MV_U16 lineId, MV_U8* cmdBuff, MV_U8 cmdSize, MV_U8* dat
 		if (MV_OK != mvSpiReadAndWrite(mvBoardTdmSpiIdGet(), dataBuff, \
 			(cmdBuff + (cmdSize - dataSize)), dataSize))
 			mvOsPrintf(KERN_ERR "ZSI: SPI Read and Write failed !!!\n");
-
 	} else {
 		if (MV_OK != mvSpiWriteThenRead(mvBoardTdmSpiIdGet(), cmdBuff, cmdSize, dataBuff, dataSize, 0))
 			mvOsPrintf(KERN_ERR "SPI read failed !!!\n");
@@ -222,6 +225,10 @@ MV_VOID mvSysTdmSpiWrite(MV_U16 lineId, MV_U8* cmdBuff, MV_U8 cmdSize, MV_U8* da
 	spiType = SPI_TYPE_SLIC_ZSI;
 #endif
 
+#ifdef CONFIG_SILABS_SERIAL_SLIC_SUPPORT
+	spiType = SPI_TYPE_SLIC_ISI;
+#endif
+
 	/* Set SPI parameters(lineId = devId) */
 	mvSpiParamsSet(mvBoardTdmSpiIdGet(), mvBoardTdmSpiCsGet(lineId), spiType);
 
diff --git a/arch/arm/plat-armada/include/plat/silabs_if.h b/arch/arm/plat-armada/include/plat/silabs_if.h
index 7e2c7d3..aa9152f 100644
--- a/arch/arm/plat-armada/include/plat/silabs_if.h
+++ b/arch/arm/plat-armada/include/plat/silabs_if.h
@@ -72,6 +72,12 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 /* Interface to Silabs SLIC driver */
 extern void silabs_if_enable_irq(unsigned int device);
 extern void silabs_if_disable_irq(unsigned int device);
+#ifdef CONFIG_SILABS_SERIAL_SLIC_SUPPORT
+typedef void (*handler)(unsigned long);
+extern void silabs_if_handler_register(handler func);
+extern void silabs_if_handler_unregister(void);
+extern void silabs_if_isi_interrupt(void);
+#endif
 
 extern void silabs_if_spi_init(unsigned int line);
 extern void silabs_if_spi_read(unsigned int line,
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/silabs_if.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/silabs_if.c
index fab0330..4616a73 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/silabs_if.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/silabs_if.c
@@ -71,6 +71,10 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "voiceband/mvSysTdmSpi.h"
 #include "spi/mvSpi.h"
 
+#ifdef CONFIG_SILABS_SERIAL_SLIC_SUPPORT
+static handler isi_handler;
+#endif
+
 void silabs_if_enable_irq(unsigned int device)
 {
 	mvSysTdmIntEnable(device);
@@ -83,23 +87,30 @@ void silabs_if_disable_irq(unsigned int device)
 }
 EXPORT_SYMBOL(silabs_if_disable_irq);
 
-void silabs_if_spi_init(unsigned int line)
+#ifdef CONFIG_SILABS_SERIAL_SLIC_SUPPORT
+void silabs_if_handler_register(handler func)
 {
-	MV_SPI_IF_PARAMS ifParams;
-	MV_SPI_TIMING_PARAMS tmngParams;
+	isi_handler = func;
+}
+EXPORT_SYMBOL(silabs_if_handler_register);
 
-	ifParams.clockPolLow = 1;
-	ifParams.clockPhase = SPI_CLK_BEGIN_CYC;
-	ifParams.txMsbFirst = 0;
-	ifParams.rxMsbFirst = 0;
+void silabs_if_handler_unregister(void)
+{
+	isi_handler = NULL;
+}
+EXPORT_SYMBOL(silabs_if_handler_unregister);
 
-	tmngParams.tcsh = 0x3F;
-	tmngParams.tmisoSample = 0;
-	tmngParams.tcsSetup = 0x4;
-	tmngParams.tcsHold = 0x4;
+void silabs_if_isi_interrupt(void)
+{
+	if (isi_handler != NULL)
+		isi_handler(0);
+}
+EXPORT_SYMBOL(silabs_if_isi_interrupt);
+#endif
 
-	mvSpiIfConfigSet(line, &ifParams);
-	mvSpiTimingParamsSet(line, &tmngParams);
+void silabs_if_spi_init(unsigned int line)
+{
+	return;
 }
 EXPORT_SYMBOL(silabs_if_spi_init);
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
index 6712e36..9f3a3c1 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
@@ -69,6 +69,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include <linux/proc_fs.h>
 #include <plat/drv_dxt_if.h>
 #include <plat/zarlink_if.h>
+#include <plat/silabs_if.h>
 #ifndef CONFIG_MV_TDM_SUPPORT
 #include "gpp/mvGppRegs.h"
 #endif
@@ -471,10 +472,15 @@ static irqreturn_t tdm_if_isr(int irq, void* dev_id)
 	/*device_id = tdm_int_info.cs;*/
 
 #ifdef CONFIG_ZARLINK_SERIAL_SLIC_SUPPORT
-	/* Handle ZSI interrupts*/
+	/* Handle ZSI interrupts */
 	zarlink_if_zsi_interrupt();
 #endif
 
+#ifdef CONFIG_SILABS_SERIAL_SLIC_SUPPORT
+	/* Handle ISI interrupts */
+	silabs_if_isi_interrupt();
+#endif
+
 	/* Nothing to do - return */
 	if (int_type == MV_EMPTY_INT)
 		goto out;
diff --git a/arch/arm/plat-armada/mv_hal/spi/mvSpi.c b/arch/arm/plat-armada/mv_hal/spi/mvSpi.c
index 40566f2..d9473e6 100644
--- a/arch/arm/plat-armada/mv_hal/spi/mvSpi.c
+++ b/arch/arm/plat-armada/mv_hal/spi/mvSpi.c
@@ -81,8 +81,8 @@ static MV_SPI_HAL_DATA	spiHalData;
 static MV_SPI_TYPE_INFO spiTypes[] = {
 	{
 		.en16Bit = MV_TRUE,
-		.byteCsAsrt = MV_FALSE,
 		.clockPolLow = MV_TRUE,
+		.byteCsAsrt = MV_FALSE,
 		.baudRate = (20 << 20), /*  20M */
 		.clkPhase = SPI_CLK_BEGIN_CYC
 	},
@@ -106,6 +106,13 @@ static MV_SPI_TYPE_INFO spiTypes[] = {
 		.byteCsAsrt = MV_TRUE,
 		.baudRate = _8M,
 		.clkPhase = SPI_CLK_HALF_CYC
+	},
+	{
+		.en16Bit = MV_FALSE,
+		.clockPolLow = MV_FALSE,
+		.byteCsAsrt = MV_TRUE,
+		.baudRate = _2M,
+		.clkPhase = SPI_CLK_HALF_CYC
 	}
 };
 
diff --git a/arch/arm/plat-armada/mv_hal/spi/mvSpi.h b/arch/arm/plat-armada/mv_hal/spi/mvSpi.h
index 6884fd0..66ed1f5 100644
--- a/arch/arm/plat-armada/mv_hal/spi/mvSpi.h
+++ b/arch/arm/plat-armada/mv_hal/spi/mvSpi.h
@@ -114,7 +114,8 @@ typedef enum {
 	SPI_TYPE_FLASH = 0,
 	SPI_TYPE_SLIC_ZARLINK_SILABS,
 	SPI_TYPE_SLIC_LANTIQ,
-	SPI_TYPE_SLIC_ZSI
+	SPI_TYPE_SLIC_ZSI,
+	SPI_TYPE_SLIC_ISI
 } MV_SPI_TYPE;
 
 
diff --git a/drivers/staging/telephony/mv_tdm/Kconfig b/drivers/staging/telephony/mv_tdm/Kconfig
index 7ab3d1d..ee7cee6 100644
--- a/drivers/staging/telephony/mv_tdm/Kconfig
+++ b/drivers/staging/telephony/mv_tdm/Kconfig
@@ -58,6 +58,29 @@ config ZARLINK_SLIC_SUPPORT
 endchoice
 
 choice
+	prompt "Silicon Labs SLIC Type(Parallel/Serial)"
+	depends on MV_PHONE && SILABS_SLIC_SUPPORT
+	default SILABS_PARALLEL_SLIC_SUPPORT
+
+config  SILABS_PARALLEL_SLIC_SUPPORT
+	bool "Support Silicon Labs Parallel devices"
+	---help---
+	Choosing this option enables Silicon Labs external
+	parallel SLIC devices.
+	Supported parallel Silicon Labs devices are:
+	3226x, 3217x.
+
+config SILABS_SERIAL_SLIC_SUPPORT
+	bool "Support Silicon Labs Serial devices(ISI)"
+	---help---
+	Choosing this option enables Silicon Labs serial
+	external SLIC devices.
+	Supported serial Silicon Labs device(ISI) is:
+	3226x
+
+endchoice
+
+choice
 	prompt "Zarlink SLIC Type(Parallel/Serial)"
 	depends on MV_PHONE && ZARLINK_SLIC_SUPPORT
 	default ZARLINK_PARALLEL_SLIC_SUPPORT
@@ -147,7 +170,7 @@ endchoice
 choice
 	prompt "PCM Clock Frequency"
 	depends on MV_PHONE
-	default MV_TDM_PCM_CLK_8MHZ
+	default MV_TDM_PCM_CLK_2MHZ
 	---help---
 	This menu selects the PCM clock frequency generated
 	by the TDM master.
diff --git a/tools/voice/silabs/Makefile b/tools/voice/silabs/Makefile
index e4a6f5c..0fad8b9 100644
--- a/tools/voice/silabs/Makefile
+++ b/tools/voice/silabs/Makefile
@@ -22,17 +22,21 @@ AR := $(CROSS_COMPILE)ar
 ifeq ($(CONFIG_SILABS_SLIC_SUPPORT),y)
 ifeq ($(CONFIG_SILAB_SLIC_EXTERNAL_DRIVER),y)
 
+ifeq ($(CONFIG_PLAT_ARMADA),y)
+CFLAGS += -I$(KSRC)/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/
+else
 CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/
+endif
 CFLAGS += -I$(SILABS_SLIC)/proslic_api/inc -I$(SILABS_SLIC)/proslic_api/custom
 CFLAGS += -I$(SILABS_SLIC)/silabs_dev
 
 all: mv_voice_tool-si3217x mv_voice_tool-si3226x
 
 mv_voice_tool-si3217x: mv_voice_tool.c silabs_lib.c
-	$(CC) $(CFLAGS) -DMV_TDM_USE_DCO -DSI3217x -o $@ $^
+	$(CC) $(CFLAGS) -DMV_TDM_USE_DCO -DSI3217x -static -o $@ $^
 
 mv_voice_tool-si3226x: mv_voice_tool.c silabs_lib.c
-	$(CC) $(CFLAGS) -DMV_TDM_USE_DCO -DSI3226x -o $@ $^
+	$(CC) $(CFLAGS) -DMV_TDM_USE_DCO -DSI3226x -static -o $@ $^
 
 clean:
 	rm -f mv_voice_tool-si3217x mv_voice_tool-si3226x
-- 
1.7.5.4

