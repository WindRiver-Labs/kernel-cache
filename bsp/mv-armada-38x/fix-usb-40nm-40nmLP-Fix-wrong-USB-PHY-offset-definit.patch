From d864bc31375deae54aff73c6325dabb038c8cc72 Mon Sep 17 00:00:00 2001
From: Nadav Haklai <nadavh@marvell.com>
Date: Mon, 2 Sep 2013 18:21:10 +0300
Subject: [PATCH 0982/1825] fix: usb: 40nm/40nmLP: Fix wrong USB PHY offset
 definitions

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 99cd6d20d29e1aea97790f8e55672ce00e6902cb

	Restore original phy offset definition for 40nm phy (AXP/A370)
	under updated definition and keep 40nmLP phy offset with the current definition

	This patch fixes the USB hang in AXP/A370

Change-Id: Ibf7c14a99b75a6fc7f6786171136cf152ae72ebd
Signed-off-by: Nadav Haklai <nadavh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3437
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/usb/mvUsb.c     |   12 ++++++------
 arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h |   11 +++++------
 2 files changed, 11 insertions(+), 12 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/usb/mvUsb.c b/arch/arm/plat-armada/mv_hal/usb/mvUsb.c
index 9c5c080..7951fd2 100755
--- a/arch/arm/plat-armada/mv_hal/usb/mvUsb.c
+++ b/arch/arm/plat-armada/mv_hal/usb/mvUsb.c
@@ -242,22 +242,22 @@ static int mvUsbPhy40nmInit(int dev)
 {
 	MV_U32 regVal;
 
-	regVal = MV_REG_READ(MV_USB_PHY_CHANNEL_REG(dev, 19));
+	regVal = MV_REG_READ(MV_USB_X3_PHY_CHANNEL_REG(dev, 3));
 	regVal |= BIT15;
-	MV_REG_WRITE(MV_USB_PHY_CHANNEL_REG(dev, 19), regVal);
+	MV_REG_WRITE(MV_USB_X3_PHY_CHANNEL_REG(dev, 3), regVal);
 	/*-------------------------------------------------*/
 
 	/******* Assert REG_RCAL_START in Channel REG 1 *******/
-	regVal = MV_REG_READ(MV_USB_PHY_CHANNEL_REG(dev, 17));
+	regVal = MV_REG_READ(MV_USB_X3_PHY_CHANNEL_REG(dev, 1));
 	regVal |= BIT12;
-	MV_REG_WRITE(MV_USB_PHY_CHANNEL_REG(dev, 17), regVal);
+	MV_REG_WRITE(MV_USB_X3_PHY_CHANNEL_REG(dev, 1), regVal);
 
 	/* Wait 40 usec */
 	mvOsUDelay(40);
 
-	regVal = MV_REG_READ(MV_USB_PHY_CHANNEL_REG(dev, 17));
+	regVal = MV_REG_READ(MV_USB_X3_PHY_CHANNEL_REG(dev, 1));
 	regVal &= ~BIT12;
-	MV_REG_WRITE(MV_USB_PHY_CHANNEL_REG(dev, 17), regVal);
+	MV_REG_WRITE(MV_USB_X3_PHY_CHANNEL_REG(dev, 1), regVal);
 	/*-------------------------------------------------*/
 
 /* BTS #231 - for KW40 only */
diff --git a/arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h b/arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h
index 7fd4c4c..6ee8def 100644
--- a/arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h
+++ b/arch/arm/plat-armada/mv_hal/usb/mvUsbRegs.h
@@ -186,12 +186,11 @@ extern "C" {
 #define MV_USB_PHY_TEST_GROUP_CTRL_REG_1(dev)   (MV_USB_REGS_BASE(dev) + 0x454)
 
 /* New design used in 40nm SOC */
-#define MV_USB_PHY_REGS_BASE(unit)		(MV_USB_REGS_BASE(0) | \
-						(unit << 12) | 0x800)
-#define MV_USB_PHY_PLL_REG(reg)			(MV_USB_PHY_REGS_BASE(0) | \
-						((reg & 0xF) << 2))
-#define MV_USB_PHY_CHANNEL_REG(unit, reg)       (MV_USB_PHY_REGS_BASE(unit) | \
-						(reg << 2))
+#define MV_USB_PHY_REGS_BASE(unit)		(MV_USB_REGS_BASE(0) | (unit << 12) | 0x800)
+#define MV_USB_PHY_CHANNEL_REG(unit, reg)       (MV_USB_PHY_REGS_BASE(unit) | (reg << 2))
+#define MV_USB_X3_REGS_BASE(addr)		(MV_USB_REGS_BASE(0) | BIT11 | (((addr) & 0xF) << 6))
+#define MV_USB_X3_PHY_CHANNEL_REG(dev, reg)	(MV_USB_X3_REGS_BASE(dev + 1) | ((reg & 0xF) << 2))
+#define MV_USB_PHY_PLL_REG(reg)			(MV_USB_PHY_REGS_BASE(0) | ((reg & 0xF) << 2))
 
 /*******************************************/
 /* USB Windows Registers		   */
-- 
1.7.5.4

