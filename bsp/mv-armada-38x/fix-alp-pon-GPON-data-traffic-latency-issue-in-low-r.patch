From 98df718c6e7966dd2a10f87ede06a6b61762d246 Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Wed, 7 May 2014 16:22:21 +0800
Subject: [PATCH 1621/1825] fix: alp: pon: GPON data traffic latency issue in
 low rate

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 1fb475d72bec2b06c242fa75c54fff963322fecf

    user could modify the overhead to decrease the latency, which is not
added by default to avoid the BW waste
Signed-off-by: Victor Gu <xigu@marvell.com>

Change-Id: I14578e1a09a57a599db5bf7f42b817746ecb9882
Reviewed-on: http://vgitil04.il.marvell.com:8080/7863
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.c   |   21 ++++
 .../mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.h   |    4 +
 .../mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c  |   21 ++++
 .../mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h  |    1 +
 .../mv_pon/perf/gpon/gponOnuLnxKsUI.c              |   26 +++++
 arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c      |  105 +++++++++++++-------
 arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h      |    1 +
 arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c     |    2 +
 arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h     |    3 +
 9 files changed, 150 insertions(+), 34 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.c
index b8c08a4..e0bcfa3 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.c
@@ -2727,3 +2727,24 @@ MV_STATUS onuGponApiHighPriTxMapDel(MV_U32 hostTcont)
 
 	return MV_OK;
 }
+
+/*******************************************************************************
+**
+**  onuGponApiQueueOverheadSet
+**  ____________________________________________________________________________
+**
+**  DESCRIPTION: The function configure overhead of specific queue of T-CONT
+**
+**  PARAMETERS:  MV_U32 tcontId T-CONT number
+**               MV_U32 queue queue number
+**               MV_U32 overhead overhead value up to 0xFF in unit of 64 bytes
+**
+**  OUTPUTS:     None
+**
+**  RETURNS:     MV_OK or MV_ERROR
+**
+*******************************************************************************/
+MV_STATUS onuGponApiQueueOverheadSet(MV_U32 tcontId, MV_U32 queue, MV_U32 overhead)
+{
+	return onuGponQueueOverheadSet(tcontId, queue, overhead);
+}
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.h
index a47346f..663da4b 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuApi.h
@@ -308,6 +308,10 @@ MV_STATUS onuGponApiHighPriTxStateSet(MV_BOOL mode);
 MV_STATUS onuGponApiHighPriTxMapAdd(S_OnuTcontMap *tcontMap);
 MV_STATUS onuGponApiHighPriTxMapDel(MV_U32 hostTcont);
 
+/* Overhead setting
+   ------------------------------------------------------------------------------*/
+MV_STATUS onuGponApiQueueOverheadSet(MV_U32 tcontId, MV_U32 queue, MV_U32 overhead);
+
 /* Macros
    ------------------------------------------------------------------------------*/
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c
index 7077922..5780f43 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c
@@ -1912,3 +1912,24 @@ MV_STATUS onuGponTxFlush(MV_U32 tcontNum)
 
 	return MV_OK;
 }
+
+/*******************************************************************************
+**
+**  onuGponQueueOverheadSet
+**  ____________________________________________________________________________
+**
+**  DESCRIPTION: The function configure overhead of specific queue of T-CONT
+**
+**  PARAMETERS:  MV_U32 tcontId T-CONT number
+**               MV_U32 queue queue number
+**               MV_U32 overhead overhead value up to 0xFF in unit of 64 bytes
+**
+**  OUTPUTS:     None
+**
+**  RETURNS:     MV_OK or MV_ERROR
+**
+*******************************************************************************/
+MV_STATUS onuGponQueueOverheadSet(MV_U32 tcontId, MV_U32 queue, MV_U32 overhead)
+{
+	return mvOnuGponQueueOverheadSet(tcontId, queue, overhead);
+}
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h
index c04b355..70dcce0 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h
@@ -211,6 +211,7 @@ MV_STATUS     onuGponHighPriTxMapAdd(S_OnuTcontMap *tcontMap);
 MV_STATUS     onuGponHighPriTxMapDel(MV_U32 hostTcont);
 MV_STATUS     onuGponHighPriTxMapInit(S_PonHighPriTx *highPriTx);
 MV_STATUS     onuGponTxFlush(MV_U32 tcontNum);
+MV_STATUS     onuGponQueueOverheadSet(MV_U32 tcontId, MV_U32 queue, MV_U32 overhead);
 extern void onuGponWqTcontFunc(struct work_struct *work);
 extern MV_STATUS onuGponWqTcontFlush(MV_U32 tcont);
 extern MV_STATUS onuGponWqTcontActivate(MV_U32 tcont);
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/gpon/gponOnuLnxKsUI.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/gpon/gponOnuLnxKsUI.c
index 2e5331e..7656221 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/gpon/gponOnuLnxKsUI.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/gpon/gponOnuLnxKsUI.c
@@ -3274,6 +3274,27 @@ void onuGponUitxDbrBlockSizeConfig(MV_U32 blockSize)
 
 /*******************************************************************************
 **
+**  onuGponUioverheadCfgConfig
+**  ____________________________________________________________________________
+**
+**  DESCRIPTION: The function change the overhead of specific T-CONT, queue
+**
+**  PARAMETERS:  MV_U32 tcontNum
+**               MV_U32 queue
+**               MV_U32 overhead
+**
+**  OUTPUTS:     None
+**
+**  RETURNS:     None
+**
+*******************************************************************************/
+void onuGponUioverheadCfgConfig(MV_U32 tcontNum, MV_U32 queue, MV_U32 overhead)
+{
+	onuGponApiQueueOverheadSet(tcontNum, queue, overhead);
+}
+
+/*******************************************************************************
+**
 **  onuGponUiDebugMemReadReg
 **  ____________________________________________________________________________
 **
@@ -3797,6 +3818,7 @@ int onuGponUiMiscHelpShow(char *buf)
 	off += mvOsSPrintf(buf + off, " echo [TC Period]                > utmTxPeriodCfg  - config utm tc period\n");
 	off += mvOsSPrintf(buf + off, " echo [TC Valid]                 > utmTcValidCfg   - config utm tc valid\n");
 	off += mvOsSPrintf(buf + off, " echo [DBR Block Size]           > txDbrBlkSizeCfg - config dbr block size\n");
+	off += mvOsSPrintf(buf+off,   " echo [tcont] [queue] [overhead] > overheadCfg     - config overhead field of specific T-CONT/queue in unit of 64 bytes\n");
 	off += mvOsSPrintf(buf + off, " echo [Offset] [Entry]           > readReg         - "
 			   "read onu reg [Id from mvPonOnuRegs.h]\n");
 	off += mvOsSPrintf(buf + off, " echo [Offset] [Entry] [Value]   > writeReg        - "
@@ -3952,6 +3974,8 @@ static ssize_t misc_store(struct device *dev,
 		onuGponUiUtmTcValidConfig((MV_U32)param1);
 	else if (!strcmp(name, "txDbrBlkSizeCfg"))      /* blockSize */
 		onuGponUitxDbrBlockSizeConfig((MV_U32)param1);
+	else if (!strcmp(name, "overheadCfg"))      /* blockSize */
+		onuGponUioverheadCfgConfig((MV_U32)param1, (MV_U32)param2, (MV_U32)param3);
 	else if (!strcmp(name, "readReg"))              /* readOffset, readEntry */
 		onuGponUiDebugReadReg((MV_U32)param1, (MV_U32)param2);
 	else if (!strcmp(name, "writeReg"))             /*  writeOffset, writeEntry, regValue */
@@ -4010,6 +4034,7 @@ static DEVICE_ATTR(txEnThresCfg,          S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(utmTxPeriodCfg,        S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(utmTcValidCfg,         S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(txDbrBlkSizeCfg,       S_IWUSR, misc_show, misc_store);
+static DEVICE_ATTR(overheadfg,	          S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(readReg,               S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(writeReg,              S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(debugModeCfg,          S_IWUSR, misc_show, misc_store);
@@ -4042,6 +4067,7 @@ static struct attribute *misc_attrs[] = {
 	&dev_attr_utmTxPeriodCfg.attr,
 	&dev_attr_utmTcValidCfg.attr,
 	&dev_attr_txDbrBlkSizeCfg.attr,
+	&dev_attr_overheadfg.attr,
 	&dev_attr_readReg.attr,
 	&dev_attr_writeReg.attr,
 	&dev_attr_debugModeCfg.attr,
diff --git a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c
index 87dce3c..98b4f18 100755
--- a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c
+++ b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c
@@ -4535,40 +4535,6 @@ MV_STATUS mvOnuGponMacDyingGaspConfigSet(MV_U32 id,
 
 /*******************************************************************************
 **
-**  mvOnuEponMacInternalDyingGaspSet
-**  ____________________________________________________________________________
-**
-**  DESCRIPTION: The function set internal dying gasp
-**
-**  PARAMETERS:  MV_U32 enable
-**               MV_U32 onDie
-**               MV_U32 voltage
-**
-**  OUTPUTS:     None
-**
-**  RETURNS:     MV_OK or MV_ERROR
-**
-*******************************************************************************/
-MV_STATUS mvOnuEponMacInternalDyingGaspSet(MV_U32 enable, MV_U32 onDie, MV_U32 voltage)
-{
-	MV_STATUS status;
-	MV_U32 value;
-
-	status = asicOntMiscRegRead(mvAsicReg_PON_INTERNAL_DG, &value, 0);
-	if (status == MV_OK) {
-		value &= ~0x67;
-		value |= ((enable & 0x1) << 5);
-		value |= ((onDie & 0x1) << 6);
-		value |= ((voltage & 0x7) << 0);
-		return asicOntMiscRegWrite(mvAsicReg_PON_INTERNAL_DG, value, 0);
-	}
-
-	return status;
-}
-
-
-/*******************************************************************************
-**
 **  mvOnuGponMacXvrReset
 **  ____________________________________________________________________________
 **
@@ -4829,6 +4795,44 @@ MV_STATUS mvOnuGponHighPriTxMap1Get(MV_U32 *map1)
 	return status;
 }
 
+/*******************************************************************************
+**
+**  mvOnuGponQueueOverheadSet
+**  ____________________________________________________________________________
+**
+**  DESCRIPTION: The function set Tx number of new bytes
+**
+**  PARAMETERS:  MV_U32 tcontNum
+**               MV_U32 byteNum
+**               MV_U32 color
+**
+**  OUTPUTS:     None
+**
+**  RETURNS:     MV_OK
+**
+*******************************************************************************/
+MV_STATUS mvOnuGponQueueOverheadSet(MV_U32 tcontNum, MV_U32 queue, MV_U32 overhead)
+{
+	MV_STATUS status;
+	MV_U32 index;
+
+	if (tcontNum >= ONU_GPON_MAX_NUM_OF_T_CONTS)
+		return MV_ERROR;
+
+	if (queue >= ONU_DBA_MAX_QUEUE)
+		return MV_ERROR;
+
+	index = (tcontNum << 3) | queue;
+	status = asicOntMiscRegWrite(mvAsicReg_PON_BYTE_CNT_IDX, index, 0);
+
+	if (status != MV_OK)
+		return status;
+
+	status = asicOntMiscRegWrite(mvAsicReg_PON_BYTE_CNT_CFG, overhead & 0xFF, 0);
+
+	return status;
+}
+
 /******************************************************************************/
 /******************************************************************************/
 /* ========================================================================== */
@@ -9363,6 +9367,39 @@ MV_STATUS mvOnuEponMacSerdesPuRxWrite(MV_U32 enable)
 	return status;
 }
 
+/*******************************************************************************
+**
+**  mvOnuEponMacInternalDyingGaspSet
+**  ____________________________________________________________________________
+**
+**  DESCRIPTION: The function set internal dying gasp
+**
+**  PARAMETERS:  MV_U32 enable
+**               MV_U32 onDie
+**               MV_U32 voltage
+**
+**  OUTPUTS:     None
+**
+**  RETURNS:     MV_OK or MV_ERROR
+**
+*******************************************************************************/
+MV_STATUS mvOnuEponMacInternalDyingGaspSet(MV_U32 enable, MV_U32 onDie, MV_U32 voltage)
+{
+	MV_STATUS status;
+	MV_U32 value;
+
+	status = asicOntMiscRegRead(mvAsicReg_PON_INTERNAL_DG, &value, 0);
+	if (status == MV_OK) {
+		value &= ~0x67;
+		value |= ((enable & 0x1) << 5);
+		value |= ((onDie & 0x1) << 6);
+		value |= ((voltage & 0x7) << 0);
+		return asicOntMiscRegWrite(mvAsicReg_PON_INTERNAL_DG, value, 0);
+	}
+
+	return status;
+}
+
 /******************************************************************************/
 /******************************************************************************/
 /* ========================================================================== */
diff --git a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h
index 6deeca2..d8a1461 100755
--- a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h
+++ b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h
@@ -350,6 +350,7 @@ MV_STATUS mvOnuGponHighPriTxMap0Set(MV_U32 map0);
 MV_STATUS mvOnuGponHighPriTxMap0Get(MV_U32 *map0);
 MV_STATUS mvOnuGponHighPriTxMap1Set(MV_U32 map1);
 MV_STATUS mvOnuGponHighPriTxMap1Get(MV_U32 *map1);
+MV_STATUS mvOnuGponQueueOverheadSet(MV_U32 tcontNum, MV_U32 queue, MV_U32 overhead);
 /* ========================================================================== */
 /*                        General Functions Section                           */
 /* ========================================================================== */
diff --git a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c
index 2842b6b..523992d 100755
--- a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c
+++ b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c
@@ -843,6 +843,8 @@ S_asicGlobalRegDb asicGlbDb[] =
 	[mvAsicReg_GMAC1_AUTONEG_DUPLEX_MODE]             =  { mvAsicReg_GMAC1_AUTONEG_DUPLEX_MODE,             0xC500C,                         0xC500C,  asicRW,     0x00000001,     12,     0,     0,      0,     "GMAC1 autoneg duplex mode"},
 	[mvAsicReg_GMAC1_AUTONEG_DUPLEX_ENABLE]           =  { mvAsicReg_GMAC1_AUTONEG_DUPLEX_ENABLE,           0xC500C,                         0xC500C,  asicRW,     0x00000001,     13,     0,     0,      0,     "GMAC1 autoneg duplex enable"},
 
+	[mvAsicReg_PON_BYTE_CNT_IDX]                      =  { mvAsicReg_PON_BYTE_CNT_IDX,                      0xF8100,                         0xF8100,  asicRW,     0x0000003F,     0,      0,     0,      0,     "PON byte counter index for T-CONT/LLID and queue"},
+	[mvAsicReg_PON_BYTE_CNT_CFG]                      =  { mvAsicReg_PON_BYTE_CNT_CFG,                      0xF8104,                         0xF8104,  asicRW,     0x000000FF,     0,      0,     0,      0,     "PON byte counter configuration"},
 };
 
 /* Export Functions
diff --git a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h
index be68718..46e2858 100755
--- a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h
@@ -707,6 +707,9 @@ typedef enum {
 	mvAsicReg_GMAC1_AUTONEG_DUPLEX_MODE                = 624,
 	mvAsicReg_GMAC1_AUTONEG_DUPLEX_ENABLE              = 625,
 
+	mvAsicReg_PON_BYTE_CNT_IDX                         = 630,
+	mvAsicReg_PON_BYTE_CNT_CFG                         = 631,
+
 	/*  MPP Registers                         */
 	/* =====================================  */
 	mvAsicReg_PON_MPP_00                               = 700,
-- 
1.7.5.4

