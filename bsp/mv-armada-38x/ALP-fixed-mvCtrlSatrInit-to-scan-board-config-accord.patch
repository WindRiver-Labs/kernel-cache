From 6e1a4ea85878a6ba195c23caa8fbfdc7e1133160 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 11 Apr 2013 17:27:53 +0300
Subject: [PATCH 0573/1825] ALP : fixed mvCtrlSatrInit to scan board config
 according to Auto detection indication

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit bec88422b7fa2b6007242a1b4d0eea2b87ac3f30

- fixed S@R TWSI reads to access S@R registers only once
- Added correct ctrlID read from S@R
- Aligned boardID defines
- removed mvCtrlSlicUnitTypeGet

Change-Id: I3fc975a0ad33973227910139052da48d0d1e8504
Reviewed-on: http://vgitil04.il.marvell.com:8080/1568
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   73 ++++++++++--
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |   23 ++--
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |   17 +++-
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.h     |   10 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |  117 ++++++++++----------
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    4 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |    5 +
 7 files changed, 159 insertions(+), 90 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 68a0b0c..0402b5c 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -694,12 +694,33 @@ MV_U32 mvBoardGpioIntMaskGet(MV_U32 gppGrp)
 *       32bit value describing MPP control register value.
 *
 *******************************************************************************/
-MV_U32 mvBoardSlicMppModeGet(MV_VOID)
+MV_U32 mvBoardSlicUnitTypeGet(MV_VOID)
 {
 	return board->pBoardModTypeValue->boardMppSlic;
 }
 
 /*******************************************************************************
+* mvBoardSlicUnitTypeSet - Get board MPP Group type for SLIC unit (pre-defined)
+*
+* DESCRIPTION:
+*	if not using auto detection mudules according to board configuration settings,
+*	use pre-defined SLIC type from board information
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       32bit value describing MPP control register value.
+*
+*******************************************************************************/
+MV_VOID mvBoardSlicUnitTypeSet(MV_U32 slicType)
+{
+	board->pBoardModTypeValue->boardMppSlic = slicType;
+}
+/*******************************************************************************
 * mvBoardMppGet - Get board dependent MPP register value
 *
 * DESCRIPTION:
@@ -775,6 +796,33 @@ MV_VOID mvBoardMppTypeSet(MV_U32 mppGroupNum, MV_U32 groupType)
 }
 
 /*******************************************************************************
+* mvBoardInfoUpdate - Update Board information structures according to auto-detection.
+*
+* DESCRIPTION:
+*	Update board information according to detection using TWSI bus.
+*
+* INPUT:
+*	None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*	None.
+*
+*******************************************************************************/
+MV_VOID mvBoardInfoUpdate(MV_VOID)
+{
+	MV_U32 slicDev;
+
+	mvBoardEthComplexInfoUpdate();
+	mvBoardMppIdUpdate();
+	mvBoardSwitchInfoUpdate();
+	slicDev = mvCtrlSysConfigGet(MV_CONFIG_SLIC_TDM_DEVICE);
+	mvBoardSlicUnitTypeSet(slicDev);
+}
+
+/*******************************************************************************
 * mvBoardMppIdUpdate - Update MPP ID's according to modules auto-detection.
 *
 * DESCRIPTION:
@@ -803,7 +851,7 @@ MV_VOID mvBoardMppIdUpdate(MV_VOID)
 	bootDev = mvBoardBootDeviceGroupSet();
 
 	/* Group 2 - SLIC Tdm unit */
-	slicDev = mvCtrlSlicUnitTypeGet();
+	slicDev = mvBoardSlicUnitTypeGet();
 	mvBoardMppTypeSet(2, slicDev);
 
 	/* Groups 3-4  - (only if not Booting from SPI1)*/
@@ -990,12 +1038,12 @@ MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet()
 		mvBoardMppTypeSet(1, NAND_BOOT_V2);
 		break;
 	case MSAR_0_BOOT_SPI_FLASH:
-		groupType = ((mvCtrlConfigGet(MV_CONFIG_DEVICE_BUS_MODULE) == 0x2) ? SPI0_BOOT_SPDIF_AUDIO : SPI0_BOOT);
+		groupType = ((mvCtrlSysConfigGet(MV_CONFIG_DEVICE_BUS_MODULE) == 0x2) ? SPI0_BOOT_SPDIF_AUDIO : SPI0_BOOT);
 		mvBoardMppTypeSet(0, groupType);
 		mvBoardMppTypeSet(1, groupType);
 	case MSAR_0_BOOT_SPI1_FLASH:    /* MSAR_0_SPI1 - update Groups 3-4 */
 		mvBoardMppTypeSet(3, SDIO_SPI1_UNIT);
-		if ( mvCtrlSlicUnitTypeGet() == SLIC_LANTIQ_ID)
+		if ( mvBoardSlicUnitTypeGet() == SLIC_LANTIQ_ID)
 			mvBoardMppTypeSet(4, SPI1_CPU_SMI_CTRL_TDM_LQ_UNIT);
 		else    /*REF_CLK_OUT*/
 			mvBoardMppTypeSet(4, SPI1_CPU_SMI_CTRL_REF_CLK_OUT);
@@ -1104,7 +1152,7 @@ MV_U32 mvBoardBootAttrGet(MV_U32 satrBootDeviceValue, MV_U8 attrNum)
 *******************************************************************************/
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac0ConfigGet()
 {
-	switch (mvCtrlConfigGet(MV_CONFIG_MAC0)) {
+	switch (mvCtrlSysConfigGet(MV_CONFIG_MAC0)) {
 	case 0x0:
 		return MV_ETH_COMPLEX_GE_MAC0_SW_P6;
 		break;
@@ -1141,10 +1189,10 @@ MV_ETH_COMPLEX_TOPOLOGY mvBoardMac0ConfigGet()
 *******************************************************************************/
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac1ConfigGet()
 {
-	if (mvCtrlConfigGet(MV_CONFIG_PON_SERDES) == 0x1)
+	if (mvCtrlSysConfigGet(MV_CONFIG_PON_SERDES) == 0x1)
 		return MV_ETH_COMPLEX_GE_MAC1_PON_ETH_SERDES;
 	/* else Scan MAC1 config to decide its connection */
-	switch (mvCtrlConfigGet(MV_CONFIG_MAC1)) {
+	switch (mvCtrlSysConfigGet(MV_CONFIG_MAC1)) {
 	case 0x0:
 		return MV_ETH_COMPLEX_GE_MAC1_RGMII1;
 		break;
@@ -1179,11 +1227,11 @@ MV_ETH_COMPLEX_TOPOLOGY mvBoardMac1ConfigGet()
 *******************************************************************************/
 MV_ETH_COMPLEX_TOPOLOGY mvBoardLaneSGMIIGet()
 {
-	if (mvCtrlConfigGet(MV_CONFIG_LANE1) == 0x1)
+	if (mvCtrlSysConfigGet(MV_CONFIG_LANE1) == 0x1)
 		return MV_ETH_COMPLEX_GE_MAC0_COMPHY_1;
-	else if (mvCtrlConfigGet(MV_CONFIG_LANE2) == 0x0)
+	else if (mvCtrlSysConfigGet(MV_CONFIG_LANE2) == 0x0)
 		return MV_ETH_COMPLEX_GE_MAC0_COMPHY_2;
-	else if (mvCtrlConfigGet(MV_CONFIG_LANE3) == 0x1)
+	else if (mvCtrlSysConfigGet(MV_CONFIG_LANE3) == 0x1)
 		return MV_ETH_COMPLEX_GE_MAC0_COMPHY_3;
 
 	mvOsPrintf("%s: Error: unexpected value from mvCtrlConfigGet \n", __func__);
@@ -1764,13 +1812,16 @@ MV_U8 mvBoardIoExpValGet(MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo)
 {
 	MV_U8 val, mask;
 
+	if (ioInfo==NULL)
+		return (MV_U8)MV_ERROR;
+
 	val = mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum, ioInfo->regNum);
 	if ((MV_U8)MV_ERROR != val) {
 		mask = (1 << ioInfo->offset);
 		return ( (val & mask) >> ioInfo->offset);
 	}
 	DB(mvOsPrintf("%s: Error: Read from IO Expander failed\n", __func__));
-	return 0xFF;
+	return (MV_U8)MV_ERROR;
 }
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index e46ec61..89188e0 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -84,13 +84,13 @@ extern "C" {
 #define MV_BOARD_MPP_GROUPS_MAX_TYPES   8
 #define MV_BOARD_NAME_LEN               0x20
 
-typedef enum _devBoardMppTypeClass {
+typedef enum _devBoardSlicType {
 	MV_BOARD_AUTO,
-	MV_BOARD_SLIC_LANTIQ_ID,
-	MV_BOARD_SLIC_SILABS_ID,
-	MV_BOARD_SLIC_ZARLINK_ID,
-	MV_BOARD_SLIC_EXTERNAL_ID
-} MV_BOARD_MPP_TYPE_CLASS;
+	MV_BOARD_SLIC_SSI_ID, /* Zarlink Integrated SLIC */
+	MV_BOARD_SLIC_ISI_ID, /* Silicon Labs ISI Bus */
+	MV_BOARD_SLIC_ZSI_ID, /* Zarlink ZSI Bus */
+	MV_BOARD_SLIC_EXTERNAL_ID /* Cross vendor external SLIC */
+} MV_BOARD_SLIC_TYPE;
 
 typedef enum _devBoardOtherTypeClass {
 	MV_BOARD_NONE    = 0x00000000,
@@ -101,14 +101,9 @@ typedef enum _devBoardOtherTypeClass {
 	MV_BOARD_UNKNOWN = 0x80000000
 } MV_BOARD_OTHER_TYPE_CLASS;
 
-typedef struct _boardModuleTypeInfo {
-	MV_BOARD_MPP_TYPE_CLASS boardMppMod;
-	MV_BOARD_OTHER_TYPE_CLASS boardOtherMod;
-} MV_BOARD_MODULE_TYPE_INFO;
-
 /* omriii:  decide between MODULE_TYPE or MPP_TYPE */
 typedef struct _boardMppTypeInfo {
-	MV_BOARD_MPP_TYPE_CLASS boardMppSlic;
+	MV_BOARD_SLIC_TYPE boardMppSlic;
 
 	/* Ethernet / Sata complex                      */
 	/* A bitmask of MV_ETH_SATA_COMPLEX_OPTIONS     */
@@ -420,7 +415,8 @@ MV_32 mvBoardUSBVbusGpioPinGet(MV_32 devId);
 MV_32 mvBoardUSBVbusEnGpioPinGet(MV_32 devId);
 MV_BOOL mvBoardIsOurPciSlot(MV_U32 busNum, MV_U32 slotNum);
 MV_U32 mvBoardGpioIntMaskGet(MV_U32 gppGrp);
-MV_U32 mvBoardSlicMppModeGet(MV_VOID);
+MV_U32 mvBoardSlicUnitTypeGet(MV_VOID);
+MV_VOID mvBoardSlicUnitTypeSet(MV_U32 slicType);
 MV_32 mvBoardMppGet(MV_U32 mppGroupNum);
 MV_VOID mvBoardMppTypeSet(MV_U32 mppGroupNum, MV_U32 groupType);
 MV_VOID mvBoardMppSet(MV_U32 mppGroupNum, MV_U32 mppValue);
@@ -444,6 +440,7 @@ MV_U32 mvBoardEthComplexConfigGet(MV_VOID);
 MV_VOID mvBoardEthComplexConfigSet(MV_U32 ethConfig);
 MV_U32 mvBoardIdGet(MV_VOID);
 MV_U32 mvBoardSledCpuNumGet(MV_VOID);
+MV_VOID mvBoardInfoUpdate(MV_VOID);
 MV_VOID mvBoardMppIdUpdate(MV_VOID);
 MV_STATUS mvBoardEthComplexInfoUpdate(MV_VOID);
 MV_STATUS mvBoardSwitchInfoUpdate(MV_VOID);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index b3e3c04..fb88354 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -71,7 +71,7 @@
 
 MV_BOARD_SATR_INFO boardSatrInfo[] = {
 /* {	{MV_SATR_TYPE_ID SarID,		MV_U32 Mask,   	      Offset, regNum , 	       isActiveForBoard[]}} */
-	{ MV_SATR_CPU_DDR_L2_FREQ,		 0x003E0000,	  17,	       1, {1,0,0,0} },
+	{ MV_SATR_CPU_DDR_L2_FREQ,	 0x003E0000,	  17,	       1, {1,0,0,0} },
 	{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,	  22,	       1, {1,0,0,0} },
 	{ MV_SATR_CPU1_ENABLE,		 0x00008000,	  15,	       0, {1,0,0,0} },
 	{ MV_SATR_SSCG_DISABLE,		 0x00000002,	  1,	       0, {1,0,0,0} },
@@ -326,6 +326,18 @@ MV_BOARD_INFO db88f6660_board_info = {
 	.configAutoDetect		= MV_TRUE
 };
 
+MV_BOARD_INFO rd88f6650_board_info = {
+
+};
+
+MV_BOARD_INFO db88f6650_board_info = {
+
+};
+
+MV_BOARD_INFO rd88f6660_board_info = {
+
+};
+
 /*******************************************************************************
 * AvanataLP customer board
 *******************************************************************************/
@@ -458,6 +470,9 @@ MV_BOARD_INFO avanta_lp_customer_board_info = {
  * All supported avanta boards
  */
 MV_BOARD_INFO *boardInfoTbl[] = {
+	&rd88f6650_board_info,
+	&db88f6650_board_info,
+	&rd88f6660_board_info,
 	&db88f6660_board_info,
 	&avanta_lp_fpga_board_info,
 };
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
index 2871016..7224ddb 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
@@ -82,11 +82,11 @@
 /* boards ID numbers */
 #define BOARD_ID_BASE                   0x0
 
-#define DB_6660_ID                      (BOARD_ID_BASE)
-#define RD_6660_ID                      (DB_6660_ID + 1)
-#define DB_6650_ID                      (RD_6660_ID + 1)
-#define RD_6650_ID                      (DB_6650_ID + 1)
-#define MV_BOARD_ID_AVANTA_LP_FPGA      (RD_6650_ID + 1)
+#define RD_6650_ID                      (BOARD_ID_BASE)
+#define DB_6650_ID                      (RD_6650_ID + 1)
+#define RD_6660_ID                      (DB_6650_ID + 1)
+#define DB_6660_ID                      (RD_6660_ID + 1)
+#define MV_BOARD_ID_AVANTA_LP_FPGA      (DB_6660_ID + 1)
 #define MV_MAX_BOARD_ID                 (MV_BOARD_ID_AVANTA_LP_FPGA + 1)
 #define MV_INVALID_BOARD_ID             0xFFFFFFFF
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 89aead1..1af8ca1 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -174,13 +174,13 @@ MV_STATUS mvCtrlEnvInit(MV_VOID)
 {
 	MV_U32 i, gppMask;
 
-	/* If set to Auto detect board config, read S@R and board config info, to build Eth-Complex config & MPP group types */
+	mvCtrlSatrInit();
+
+	/* If set to Auto detect, read board config info, update Eth-Complex config, MPP group types and switch info */
 	if (mvBoardConfigAutoDetectEnabled())
 	{
-		mvBoardEthComplexInfoUpdate();
-		mvBoardMppIdUpdate();
-		mvBoardSwitchInfoUpdate();
-		/* if needed, implement mvBoard_Rest_of_board_info_update(); */
+		mvCtrlSysConfigInit();
+		mvBoardInfoUpdate();
 	}
 
 	/* write MPP's config and Board general config */
@@ -302,7 +302,7 @@ MV_VOID mvCtrlSmiMasterSet(MV_SMI_CTRL smiCtrl)
 {
 	MV_BOOL isSwSMICtrl   = (smiCtrl == SWITCH_SMI_CTRL ? MV_TRUE : MV_FALSE);
 	MV_BOOL isBootDevSPI1 = (MSAR_0_BOOT_SPI1_FLASH == mvBoardBootDeviceGet());
-	MV_BOOL isRefClkOut   = !( mvCtrlSlicUnitTypeGet() == SLIC_LANTIQ_ID ); 	/* if not using Lantiq TDM, define REF_CLK_OUT */
+	MV_BOOL isRefClkOut   = !( mvBoardSlicUnitTypeGet() == SLIC_LANTIQ_ID ); 	/* if not using Lantiq TDM, define REF_CLK_OUT */
 	MV_U8 groupTypeSelect = 0;
 
 	if (! ((smiCtrl == SWITCH_SMI_CTRL) || (smiCtrl == CPU_SMI_CTRL)) ) {
@@ -357,7 +357,7 @@ MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode)
 }
 
 /*******************************************************************************
-* mvCtrlBoardConfigGet
+* mvCtrlSysConfigGet
 *
 * DESCRIPTION: Read Board configuration Field
 *
@@ -369,9 +369,15 @@ MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode)
 *	if field is valid - returns requested Board configuration field value
 *
 *******************************************************************************/
-MV_U32 mvCtrlConfigGet(MV_CONFIG_TYPE_ID configField)
+MV_U32 mvCtrlSysConfigGet(MV_CONFIG_TYPE_ID configField)
 {
 	MV_BOARD_CONFIG_TYPE_INFO *configInfo = NULL;
+
+	if (!mvBoardConfigAutoDetectEnabled()) {
+		mvOsPrintf("%s: Error:Auto detect is disabled for board ,can't read board configuration\n", __func__);
+		return MV_ERROR;
+	}
+
 	if (configField < MV_CONFIG_TYPE_MAX_OPTION && mvBoardConfigTypeGet(configField, configInfo) == MV_OK)
 		return boardOptionsConfig[configField];
 
@@ -383,10 +389,9 @@ MV_U32 mvCtrlConfigGet(MV_CONFIG_TYPE_ID configField)
 * mvCtrlSatrInit
 *
 * DESCRIPTION: Initialize S@R configuration
-*               1. initialize all S@R and board configuration fields with 0xFF
+*               1. initialize all S@R and fields
 *               2. read relevant S@R fields (direct memory access)
-*               3. read relevant board configuration (using TWSI/EEPROM access)
-*	        **from this point, all reads from S@R & board config will use mvCtrlSatRRead/Write functions**
+*               **from this point, all reads from S@R will use mvCtrlSatRRead/Write functions**
 *
 * INPUT:  None
 *
@@ -397,26 +402,44 @@ MV_U32 mvCtrlConfigGet(MV_CONFIG_TYPE_ID configField)
 *******************************************************************************/
 MV_VOID mvCtrlSatrInit(void)
 {
-	MV_U8 regNum, satrVal, configVal[MV_IO_EXP_MAX_REGS];
+	MV_U32 satrVal[2];
 	MV_BOARD_SATR_INFO *satrInfo = NULL;
-	MV_BOARD_CONFIG_TYPE_INFO *configInfo = NULL;
-	int i = 0;
-
-	/* Verify that board support Auto detection from S@R & board configuration */
-	if (!mvBoardConfigAutoDetectEnabled())
-		return;
+	MV_U32 i;
 
 	/* initialize all S@R & Board configuration fields to -1 (MV_ERROR) */
 	memset(&satrOptionsConfig, 0x0, sizeof(MV_U32) * MV_SATR_READ_MAX_OPTION );
-	memset(&boardOptionsConfig, 0x0, sizeof(MV_U32) * MV_CONFIG_TYPE_MAX_OPTION );
 
 	/* Read Sample @ Reset configuration, memory access read : */
-	for (i = 0; i < MV_SATR_READ_MAX_OPTION; i++) {
-		if ( mvBoardSatrInfoGet(i, satrInfo) == MV_OK ) {
-			satrVal = MV_REG_READ(MPP_SAMPLE_AT_RESET(satrInfo->regNum));
-			satrOptionsConfig[satrInfo->satrId] = ((satrVal  & (satrInfo->mask)) >> (satrInfo->offset));
-		}
-	}
+	satrVal[0] = MV_REG_READ(MPP_SAMPLE_AT_RESET(0));
+	satrVal[1] = MV_REG_READ(MPP_SAMPLE_AT_RESET(1));
+
+	for (i = 0; i < MV_SATR_READ_MAX_OPTION; i++)
+		if ( mvBoardSatrInfoGet(i, satrInfo) == MV_OK )
+			satrOptionsConfig[satrInfo->satrId] = ((satrVal[satrInfo->regNum]  & (satrInfo->mask)) >> (satrInfo->offset));
+
+}
+
+/*******************************************************************************
+* mvCtrlSysConfigInit
+*
+* DESCRIPTION: Initialize S@R configuration
+*               1. initialize all board configuration fields
+*               3. read relevant board configuration (using TWSI/EEPROM access)
+*               **from this point, all reads from S@R & board config will use mvCtrlSatRRead/Write functions**
+*
+* INPUT:  None
+*
+* OUTPUT: None
+*
+* RETURN: NONE
+*
+*******************************************************************************/
+MV_VOID mvCtrlSysConfigInit()
+{
+	MV_U8 regNum, i, configVal[MV_IO_EXP_MAX_REGS];
+	MV_BOARD_CONFIG_TYPE_INFO *configInfo = NULL;
+
+	memset(&boardOptionsConfig, 0x0, sizeof(MV_U32) * MV_CONFIG_TYPE_MAX_OPTION );
 
 	/*Read rest of Board Configuration, EEPROM / Dip Switch access read : */
 	if (mvCtrlBoardConfigGet(configVal) == MV_OK) {
@@ -842,32 +865,6 @@ MV_U32 mvCtrlTdmMaxGet(MV_VOID)
 }
 
 /*******************************************************************************
-* mvCtrlSlicUnitTypeGet - return the TDM unit type being used
-*
-* DESCRIPTION:
-*	if auto detection enabled, read TDM unit from board configuration
-*	else , read pre-defined TDM unit from board information struct.
-*
-* INPUT:
-*       None.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*	The TDM unit type.
-*
-*******************************************************************************/
-MV_SLIC_UNIT_TYPE mvCtrlSlicUnitTypeGet(MV_VOID)
-{
-
-	if (mvBoardConfigAutoDetectEnabled())
-		return boardOptionsConfig[MV_CONFIG_SLIC_TDM_DEVICE];
-	else
-		return mvBoardSlicMppModeGet();
-}
-
-/*******************************************************************************
 * mvCtrlTdmUnitTypeGet - return the TDM unit type being used
 *
 * DESCRIPTION:
@@ -886,7 +883,6 @@ MV_SLIC_UNIT_TYPE mvCtrlSlicUnitTypeGet(MV_VOID)
 *******************************************************************************/
 MV_TDM_UNIT_TYPE mvCtrlTdmUnitTypeGet(MV_VOID)
 {
-
 	return TDM_UNIT_2CH;
 }
 
@@ -931,14 +927,19 @@ MV_U32 mvCtrlTdmUnitIrqGet(MV_VOID)
 *******************************************************************************/
 MV_U16 mvCtrlModelGet(MV_VOID)
 {
-/* omriii - replace with a correct read of CTRL ID register, instead of deriving the SOC from the boardID */
-	switch (mvBoardIdGet()) {
-	case DB_6660_ID:
-	case RD_6660_ID:
+	MV_U32 ctrlId;
+
+#ifdef CONFIG_MACH_AVANTA_LP_FPGA
+	ctrlId = MV_88F66X0;
+#else
+	ctrlId = MV_REG_READ(DEVICE_ID_REG);
+	ctrlId = (ctrlId & (DEVICE_ID_REG_VEND_ID_MASK)) >> DEVICE_ID_REG_DEV_ID_OFFS;
+#endif
+	switch (ctrlId) {
+	case 0x6660:
 		return MV_6660_DEV_ID;
 		break;
-	case DB_6650_ID:
-	case RD_6650_ID:
+	case 0x6650:
 		return MV_6650_DEV_ID;
 		break;
 	default:
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index 1eb09e1..d8c3071 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -263,7 +263,8 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_SATR_TYPE_ID satrRe
 MV_U32 mvCtrlSatRRead(MV_SATR_TYPE_ID satrField);
 MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode);
 MV_VOID mvCtrlSatrInit(MV_VOID);
-MV_U32 mvCtrlConfigGet(MV_CONFIG_TYPE_ID configField);
+MV_VOID mvCtrlSysConfigInit(MV_VOID);
+MV_U32 mvCtrlSysConfigGet(MV_CONFIG_TYPE_ID configField);
 MV_U32 mvCtrlGetCpuNum(MV_VOID);
 MV_U32 mvCtrlGetQuadNum(MV_VOID);
 MV_STATUS mvCtrlUpdatePexId(MV_VOID);
@@ -300,7 +301,6 @@ MV_U32 mvCtrlSdioSupport(MV_VOID);
 #endif
 MV_U32 mvCtrlTdmSupport(MV_VOID);
 MV_U32 mvCtrlTdmMaxGet(MV_VOID);
-MV_SLIC_UNIT_TYPE mvCtrlSlicUnitTypeGet(MV_VOID);
 MV_TDM_UNIT_TYPE mvCtrlTdmUnitTypeGet(MV_VOID);
 MV_U32 mvCtrlTdmUnitIrqGet(MV_VOID);
 MV_U32 mvCtrlDevFamilyIdGet(MV_U16 ctrlModel);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index 01a007d..55ec223 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -304,6 +304,11 @@ extern "C" {
 
 /* Sample at Reset */
 #define MPP_SAMPLE_AT_RESET(id)                 (0xE8200 + ( id * 0x4 ))
+#define DEVICE_ID_REG                            0x18238
+#define DEVICE_ID_REG_VEND_ID_OFFS               0
+#define DEVICE_ID_REG_VEND_ID_MASK               0xFFFF
+#define DEVICE_ID_REG_DEV_ID_OFFS                16
+#define DEVICE_ID_REG_DEV_ID_MASK                0xFFFF0000
 
 /* SYSRSTn Length Counter */
 #define SYSRST_LENGTH_COUNTER_REG               0x18250
-- 
1.7.5.4

