From e60c730c7e1ba62ea8ddfa32879d7ca60a7e66db Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Sun, 9 Jun 2013 18:30:33 +0300
Subject: [PATCH 0712/1825] ALP: S@R: Workaround for reversed bits bug (at
 Sampling at reset from I2c)

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit b5586ff2393e332b93794306e8d016a4b8b29c4d

- Workaround for mirrored bits bug (for freq. mode SatR value only!)
  Bug: all freq. mode bits are reversed when sampled at reset from I2C
	(caused due to a bug in board design)
  Solution: reverse them before write to I2C
	(reverse only 5 bits - size of SatR field)

Change-Id: I851e112fae1bfd5f5f403cdca2137652e10d1f40
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2192
Reviewed-by: Igor Patrik <igorp@marvell.com>
Reviewed-by: Eli Nidam <elini@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   15 +++++++++++-
 arch/arm/plat-armada/common/mvCommon.c             |   24 ++++++++++++++++++++
 arch/arm/plat-armada/common/mvCommon.h             |    1 +
 3 files changed, 39 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index c134acb..1872612 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -329,6 +329,14 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_SATR_TYPE_ID satrRe
 		return MV_ERROR;
 	}
 
+	/* #1 Workaround for mirrored bits bug (for freq. mode SatR value only!)
+	 * Bug: all freq. mode bits are reversed when sampled at reset from I2C
+	 *		(caused due to a bug in board design)
+	 * Solution: reverse them before write to I2C
+	 *		(reverse only 5 bits - size of SatR field) */
+	if (satrWriteField == MV_SATR_WRITE_CPU_FREQ)
+		val = mvReverseBits(val) >> 3 ;
+
 	/* modify */
 	readValue &= ~(satrInfo.mask);             /* clean old value */
 	readValue |= (val <<  satrInfo.offset);    /* save new value */
@@ -350,7 +358,12 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_SATR_TYPE_ID satrRe
 		return MV_ERROR;
 	}
 
-	/*else save written value in global array */
+	/* #2 Workaround for mirrored bits bug (for freq. mode SatR value only!)
+	 * Reverse bits again to locally save them properly */
+	if (satrWriteField == MV_SATR_WRITE_CPU_FREQ)
+		val = mvReverseBits(val) >> 3 ;
+
+	/* Save written value in global array */
 	satrOptionsConfig[satrReadField] = val;
 	return MV_OK;
 }
diff --git a/arch/arm/plat-armada/common/mvCommon.c b/arch/arm/plat-armada/common/mvCommon.c
index 698e47c..9789096 100644
--- a/arch/arm/plat-armada/common/mvCommon.c
+++ b/arch/arm/plat-armada/common/mvCommon.c
@@ -363,3 +363,27 @@ MV_STATUS mvWinWithinWinTest(MV_ADDR_WIN *pAddrWin1, MV_ADDR_WIN *pAddrWin2)
 	else
 		return MV_FALSE;
 }
+
+/*******************************************************************************
+* mvReverseBits
+*
+* DESCRIPTION:
+*       This function Reverts the direction of the bits (LSB to MSB and vice versa)
+*
+* INPUT:
+*	num - MV_U8 number to revert
+*
+* OUTPUT:
+*       Reverted number
+*
+* RETURN:
+*	None
+*
+*******************************************************************************/
+MV_U8 mvReverseBits(MV_U8 num)
+{
+	num = (num & 0xF0) >> 4 | (num & 0x0F) << 4;
+	num = (num & 0xCC) >> 2 | (num & 0x33) << 2;
+	num = (num & 0xAA) >> 1 | (num & 0x55) << 1;
+	return num;
+}
diff --git a/arch/arm/plat-armada/common/mvCommon.h b/arch/arm/plat-armada/common/mvCommon.h
index 3ef2bd0..54029dc 100755
--- a/arch/arm/plat-armada/common/mvCommon.h
+++ b/arch/arm/plat-armada/common/mvCommon.h
@@ -383,6 +383,7 @@ MV_VOID mvHexToBin(const char *pHexStr, MV_U8 *pBin, int size);
 void mvAsciiToHex(const char *asciiStr, char *hexStr);
 void mvBinToHex(const MV_U8 *bin, char *hexStr, int size);
 void mvBinToAscii(const MV_U8 *bin, char *asciiStr, int size);
+MV_U8 mvReverseBits(MV_U8 num);
 
 MV_STATUS mvMacStrToHex(const char *macStr, MV_U8 *macHex);
 MV_STATUS mvMacHexToStr(MV_U8 *macHex, char *macStr);
-- 
1.7.5.4

