From 385fa32e9ee51d3791eb2c61c7907dfda90ad9aa Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Wed, 22 May 2013 20:50:50 +0300
Subject: [PATCH 0673/1825] ALP: Cosmetics and coding style fixes

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit b9ef440012d2d87cb796f26dfe9980b44f93858c

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I468da080cc02d62e111adace6ee9d0d3cc06f1d0
Reviewed-on: http://vgitil04.il.marvell.com:8080/1920
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |    8 +++---
 .../avanta_lp_family/ctrlEnv/sys/mvAhbToMbus.c     |   29 +++++++++-----------
 2 files changed, 17 insertions(+), 20 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index fe443fa..9e5c501 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -903,23 +903,23 @@ MV_VOID mvBoardMppIdUpdate(MV_VOID)
 
 	/* Groups 3-4  - (only if not Booting from SPI1)*/
 	if (bootDev != MSAR_0_BOOT_SPI1_FLASH) {
-		if ((ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_RGMII1)) /* 00 - MAC1 connected to RGMII-1 */
+		if (ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_RGMII1)
 			mvBoardMppTypeSet(3, GE1_UNIT);
 		else
 			mvBoardMppTypeSet(3, SDIO_UNIT);
 
 		if (slicDev == SLIC_LANTIQ_ID)
 			mvBoardMppTypeSet(4, GE1_CPU_SMI_CTRL_TDM_LQ_UNIT);
-		else    /*REF_CLK_OUT*/
+		else /* REF_CLK_OUT */
 			mvBoardMppTypeSet(4, GE1_CPU_SMI_CTRL_REF_CLK_OUT);
 	}
 
 	/* Groups 5-6-7 Set GE0 or Switch port 4 */
-	if ((ethComplexOptions & MV_ETHCOMP_GE_MAC0_2_RGMII0)) { /* 10 - MAC0 connected to RGMII-0  */
+	if (ethComplexOptions & MV_ETHCOMP_GE_MAC0_2_RGMII0) {
 		mvBoardMppTypeSet(5, GE0_UNIT_PON_TX_FAULT);
 		mvBoardMppTypeSet(6, GE0_UNIT);
 		mvBoardMppTypeSet(7, GE0_UNIT_LED_MATRIX);
-	} else if ((ethComplexOptions & MV_ETHCOMP_SW_P4_2_RGMII0)) {
+	} else if (ethComplexOptions & MV_ETHCOMP_SW_P4_2_RGMII0) {
 		mvBoardMppTypeSet(5, SWITCH_P4_PON_TX_FAULT);
 		mvBoardMppTypeSet(6, SWITCH_P4);
 		mvBoardMppTypeSet(7, SWITCH_P4_LED_MATRIX);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvAhbToMbus.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvAhbToMbus.c
index fb492d0..71fa514 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvAhbToMbus.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvAhbToMbus.c
@@ -138,38 +138,37 @@ MV_STATUS mvAhbToMbusWinSet(MV_U32 winNum, MV_AHB_TO_MBUS_DEC_WIN *pAddrDecWin)
 	MV_DEC_REGS decRegs;
 	MV_U32 sizeToReg;
 
-	/* Parameter checking   */
 	if (winNum >= MAX_AHB_TO_MBUS_WINS) {
-		mvOsPrintf("mvAhbToMbusWinSet: ERR. Invalid winNum %d\n", winNum);
+		mvOsPrintf("%s: Error: Invalid winNum %d\n", __func__, winNum);
 		return MV_NOT_SUPPORTED;
 	}
 
 	/* check if address is aligned to the size */
 	if (MV_IS_NOT_ALIGN(pAddrDecWin->addrWin.baseLow, pAddrDecWin->addrWin.size)) {
-		mvOsPrintf("mvAhbToMbusWinSet:Error setting AHB to MBUS window %d to "
+		mvOsPrintf("%s: Error: Setting AHB to MBUS window %d to "
 			   "target %s.\nAddress 0x%08x is unaligned to size 0x%llx.\n",
-			   winNum,
-			   mvCtrlTargetNameGet(pAddrDecWin->target),
+			   __func__, winNum, mvCtrlTargetNameGet(pAddrDecWin->target),
 			   pAddrDecWin->addrWin.baseLow, pAddrDecWin->addrWin.size);
 		return MV_ERROR;
 	}
 
-	/* Size parameter validity check.                       */
+	/* Size parameter validity check */
 	if (MV_IS_NOT_ALIGN(pAddrDecWin->addrWin.size, ATMWCR_WIN_SIZE_ALIGNMENT)) {
-		mvOsPrintf("mvAhbToMbusWinSet: Failed, size not aligned to 0x%x.\n", ATMWCR_WIN_SIZE_ALIGNMENT);
+		mvOsPrintf("%s: Failed, size not aligned to 0x%x.\n",
+			   __func__, ATMWCR_WIN_SIZE_ALIGNMENT);
 		return MV_BAD_PARAM;
 	}
 
-	/* Write to address decode Base Address Register        */
+	/* Write to address decode Base Address Register */
 	decRegs.baseReg = (pAddrDecWin->addrWin.baseLow & ATMWBR_BASE_MASK);
 
-	/* Get size register value according to window size     */
+	/* Get size register value according to window size */
 	sizeToReg = (pAddrDecWin->addrWin.size / ATMWCR_WIN_SIZE_ALIGNMENT) - 1;
 
-	/* set size                                             */
+	/* set size */
 	decRegs.ctrlReg = (sizeToReg << ATMWCR_WIN_SIZE_OFFS);
 
-	/* enable\Disable */
+	/* enable/disable */
 	if (MV_TRUE == pAddrDecWin->enable)
 		decRegs.ctrlReg |= ATMWCR_WIN_ENABLE;
 	else
@@ -185,23 +184,21 @@ MV_STATUS mvAhbToMbusWinSet(MV_U32 winNum, MV_AHB_TO_MBUS_DEC_WIN *pAddrDecWin)
 	decRegs.ctrlReg |= targetAttribs.targetId << ATMWCR_WIN_TARGET_OFFS;
 
 #if !defined(MV_RUN_FROM_FLASH)
-	/* To be on the safe side we disable the window before writing the  */
-	/* new values.                                                      */
+	/* To be on the safe side: disable window before writing new values. */
 	if (winNum != MV_AHB_TO_MBUS_INTREG_WIN)
 		mvAhbToMbusWinEnable(winNum, MV_FALSE);
 #endif
 
-	/* 3) Write to address decode Base Address Register                   */
+	/* Write to address decode Base Address Register */
 	if (winNum != MV_AHB_TO_MBUS_INTREG_WIN)
 		MV_REG_WRITE(AHB_TO_MBUS_WIN_BASE_REG(winNum), decRegs.baseReg);
 	else
 		MV_REG_WRITE(AHB_TO_MBUS_WIN_INTEREG_REG, decRegs.baseReg);
 
-
 	/* Internal register space have no size */
 	/* register. Do not perform size register assigment for those targets   */
 	if (winNum != MV_AHB_TO_MBUS_INTREG_WIN) {
-		/* Write to address decode Size Register                                */
+		/* Write to address decode Size Register */
 		MV_REG_WRITE(AHB_TO_MBUS_WIN_CTRL_REG(winNum), decRegs.ctrlReg);
 	}
 
-- 
1.7.5.4

