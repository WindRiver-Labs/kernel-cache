From 751b78462d84cf2913a9ee778ef3e1e84264d061 Mon Sep 17 00:00:00 2001
From: Ofer Heifetz <oferh@marvell.com>
Date: Tue, 28 Jan 2014 09:23:37 +0200
Subject: [PATCH 1316/1825] pcie: msys: enabled PCIe support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 6fb175a58e6b2cf4156ab8796648bc4482722806

	- this patch adds MSYS PCIe support
	- tested rootfs over NFS using e1000 NIC
	- MSYS default defconfig now includes PCIe

Change-Id: I028c84a29e2af996a86641d2778bf90acd334795
Signed-off-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5321
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/configs/msys_defconfig            |    1 -
 arch/arm/mach-msys/mv_hal_if/mvSysPex.c    |    3 +-
 arch/arm/mach-msys/mv_hal_if/mvSysPexApi.h |    2 +-
 arch/arm/mach-msys/pci.c                   |    8 +-
 arch/arm/mach-msys/pex.c                   |  122 +++-------------------------
 arch/arm/mach-msys/sysmap.c                |   35 --------
 arch/arm/mach-msys/sysmap.h                |    6 --
 7 files changed, 20 insertions(+), 157 deletions(-)

diff --git a/arch/arm/configs/msys_defconfig b/arch/arm/configs/msys_defconfig
index c272785..103dc7c 100644
--- a/arch/arm/configs/msys_defconfig
+++ b/arch/arm/configs/msys_defconfig
@@ -21,7 +21,6 @@ CONFIG_ARCH_MSYS=y
 # CONFIG_MV_INCLUDE_GIG_ETH is not set
 # CONFIG_MV_INCLUDE_SPI is not set
 CONFIG_MV_HAL_RULES_PATH="arch/arm/mach-armadaxp/mv_hal_support/mvRules.mk"
-# CONFIG_MV_INCLUDE_PEX is not set
 # CONFIG_MV_INCLUDE_XOR is not set
 # CONFIG_MV_INCLUDE_NFC is not set
 # CONFIG_MV_INCLUDE_LEGACY_NAND is not set
diff --git a/arch/arm/mach-msys/mv_hal_if/mvSysPex.c b/arch/arm/mach-msys/mv_hal_if/mvSysPex.c
index db1da19..7aecd07 100644
--- a/arch/arm/mach-msys/mv_hal_if/mvSysPex.c
+++ b/arch/arm/mach-msys/mv_hal_if/mvSysPex.c
@@ -82,7 +82,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *       None
 *
 *******************************************************************************/
-MV_STATUS mvSysPexInit(MV_U32 pexIf, MV_PEX_TYPE pexType)
+MV_STATUS mvSysPexInit(MV_U32 pexIf, MV_PEX_TYPE pexType, MV_U32 virtualIf)
 {
 	MV_PEX_HAL_DATA halData;
 	MV_UNIT_WIN_INFO addrWinMap[MAX_TARGETS + 1];
@@ -96,6 +96,7 @@ MV_STATUS mvSysPexInit(MV_U32 pexIf, MV_PEX_TYPE pexType)
 		halData.ctrlModel = mvCtrlModelGet();
 		halData.maxPexIf = mvCtrlPexMaxIfGet();
 		halData.ctrlFamily = mvCtrlDevFamilyIdGet(halData.ctrlModel);
+		halData.virtualIf = virtualIf;
 		status = mvPexInit(pexIf, pexType, &halData);
 	}
 
diff --git a/arch/arm/mach-msys/mv_hal_if/mvSysPexApi.h b/arch/arm/mach-msys/mv_hal_if/mvSysPexApi.h
index 6706353..acf7f6e 100644
--- a/arch/arm/mach-msys/mv_hal_if/mvSysPexApi.h
+++ b/arch/arm/mach-msys/mv_hal_if/mvSysPexApi.h
@@ -65,6 +65,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #ifndef __MV_SYS_PEX_API_H__
 #define __MV_SYS_PEX_API_H__
 
-MV_STATUS mvSysPexInit(MV_U32 pexIf, MV_PEX_TYPE pexType);
+MV_STATUS mvSysPexInit(MV_U32 pexIf, MV_PEX_TYPE pexType, MV_U32 virtualIf);
 
 #endif
diff --git a/arch/arm/mach-msys/pci.c b/arch/arm/mach-msys/pci.c
index 9a6d739..45497b8 100644
--- a/arch/arm/mach-msys/pci.c
+++ b/arch/arm/mach-msys/pci.c
@@ -183,13 +183,13 @@ int __init mv_pci_setup(int nr, struct pci_sys_data *sys)
 
 	memset(res, 0, sizeof(struct resource) * 2);
 
-	res[0].start = mv_pci_io_base_get(0) - IO_SPACE_REMAP;
-	res[0].end   =  mv_pci_io_base_get(0) - IO_SPACE_REMAP + mv_pci_io_size_get(0) - 1;
+	res[0].start = PEX0_IO_PHYS_BASE - IO_SPACE_REMAP;
+	res[0].end   =  PEX0_IO_PHYS_BASE - IO_SPACE_REMAP + PEX0_IO_SIZE - 1;
 	res[0].name  = "PCI0 IO Primary";
 	res[0].flags = IORESOURCE_IO;
 
-	res[1].start =  mv_pci_mem_base_get(0);
-	res[1].end   =  mv_pci_mem_base_get(0) + mv_pci_mem_size_get(0) - 1;
+	res[1].start =  PEX_MEM_PHYS_BASE;
+	res[1].end   =  PEX_MEM_PHYS_BASE + PEX_MEM_SIZE - 1;
 	res[1].name  = "PCI0 Memory Primary";
 	res[1].flags = IORESOURCE_MEM;
 
diff --git a/arch/arm/mach-msys/pex.c b/arch/arm/mach-msys/pex.c
index 14cf11d..31829a2 100644
--- a/arch/arm/mach-msys/pex.c
+++ b/arch/arm/mach-msys/pex.c
@@ -59,16 +59,7 @@ disclaimer.
 
 #define MV_PEX_MASK_ABCD	(BIT24 | BIT25 | BIT26 | BIT27)
 
-static int __init mv_map_irq_0(const struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_1(const struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_2(const struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_3(const struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_4(const struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_5(const struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_6(const struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_7(const struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_8(const struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_9(const struct pci_dev *dev, u8 slot, u8 pin);
+static int __init mv_map_irq(const struct pci_dev *dev, u8 slot, u8 pin);
 
 static struct platform_device mv_pex = {
 	.name		= "mv_pex",
@@ -76,24 +67,10 @@ static struct platform_device mv_pex = {
 	.num_resources	= 0,
 };
 
-static void *mv_get_irqmap_func[] __initdata = {
-	mv_map_irq_0,
-	mv_map_irq_1,
-	mv_map_irq_2,
-	mv_map_irq_3,
-	mv_map_irq_4,
-	mv_map_irq_5,
-	mv_map_irq_6,
-	mv_map_irq_7,
-	mv_map_irq_8,
-	mv_map_irq_9
-};
-
 void __init mv_pex_preinit(void)
 {
 	static MV_U32 pex0flg = -1;
 	unsigned int pciIf, temp;
-	MV_ADDR_WIN pciIoRemap;
 	MV_BOARD_PEX_INFO *boardPexInfo = mvBoardPexInfoGet();
 	MV_U32 pexHWInf = 0;
 
@@ -111,7 +88,7 @@ void __init mv_pex_preinit(void)
 		}
 
 		/* init the PCI interface */
-		temp = mvSysPexInit(pexHWInf, MV_PEX_ROOT_COMPLEX);
+		temp = mvSysPexInit(pexHWInf, MV_PEX_ROOT_COMPLEX, pexHWInf);
 
 		if (MV_NO_SUCH == temp) {
 			printk(KERN_INFO "Enabled - No Link\n");
@@ -134,14 +111,7 @@ void __init mv_pex_preinit(void)
 
 		/* Clear the secondary bus number */
 		MV_REG_WRITE(PEX_SECONDARY_BUS_REG(pexHWInf), 0);
-
 		MV_REG_BIT_SET(PEX_MASK_REG(pexHWInf), MV_PEX_MASK_ABCD);
-		if (mv_is_pci_io_mapped()) {
-			pciIoRemap.baseLow = mv_pci_io_base_get() - IO_SPACE_REMAP;
-			pciIoRemap.baseHigh = 0;
-			pciIoRemap.size = mv_pci_io_size_get();
-			mvCpuIfPexRemap(mv_pci_io_target_get(), &pciIoRemap);
-		}
 	}
 }
 
@@ -149,7 +119,6 @@ void mv_pex_reinit(void)
 {
 	static MV_U32 pex0flg = -1;
 	unsigned int pciIf, temp;
-	MV_ADDR_WIN pciIoRemap;
 	MV_BOARD_PEX_INFO *boardPexInfo = mvBoardPexInfoGet();
 	MV_U32 pexHWInf = 0;
 
@@ -164,7 +133,7 @@ void mv_pex_reinit(void)
 			continue;
 
 		/* init the PCI interface */
-		temp = mvSysPexInit(pexHWInf, MV_PEX_ROOT_COMPLEX);
+		temp = mvSysPexInit(pexHWInf, MV_PEX_ROOT_COMPLEX, pexHWInf);
 
 		if (MV_NO_SUCH == temp) {
 			/* No Link - shutdown interface */
@@ -181,14 +150,7 @@ void mv_pex_reinit(void)
 
 		/* Clear the secondary bus number */
 		MV_REG_WRITE(PEX_SECONDARY_BUS_REG(pexHWInf), 0);
-
 		MV_REG_BIT_SET(PEX_MASK_REG(pexHWInf), MV_PEX_MASK_ABCD);
-		if (mv_is_pci_io_mapped(pexHWInf)) {
-			pciIoRemap.baseLow = mv_pci_io_base_get() - IO_SPACE_REMAP;
-			pciIoRemap.baseHigh = 0;
-			pciIoRemap.size = mv_pci_io_size_get();
-			mvCpuIfPexRemap(mv_pci_io_target_get(), &pciIoRemap);
-		}
 	}
 }
 
@@ -200,7 +162,7 @@ static int pci_read_cfg(u32 pciIf, u32 bus_num, u32 dev_no,
 			| PXCAR_REAL_EXT_REG_NUM_MASK);
 
 	/* Creating PEX address to be passed */
-	cfgCmd	= (bus_num << PXCAR_BUS_NUM_OFFS);
+	cfgCmd = (bus_num << PXCAR_BUS_NUM_OFFS);
 	cfgCmd |= (dev_no << PXCAR_DEVICE_NUM_OFFS);
 	cfgCmd |= (func << PXCAR_FUNC_NUM_OFFS);
 
@@ -369,7 +331,7 @@ static struct pci_ops mv_pci_ops = {
 int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 {
 	struct resource *res;
-	u32 membase, iobase, index = 0;
+	u32 membase, index = 0;
 	MV_BOARD_PEX_INFO *boardPexInfo = mvBoardPexInfoGet();
 	MV_U32 pexHWInf = 0;
 
@@ -394,28 +356,16 @@ int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 
 	/* Save the H/W if number for this PEX bus */
 	sys->mv_controller_num = pexHWInf;
-	sys->map_irq = mv_get_irqmap_func[sys->mv_controller_num];
-
-	membase = mv_pci_mem_base_get();
-	if (mv_is_pci_io_mapped(sys->mv_controller_num)) {
-		iobase = mv_pci_io_base_get();
-		res[index].start	= iobase - IO_SPACE_REMAP;
-		res[index].end		= iobase - IO_SPACE_REMAP + mv_pci_io_size_get() - 1;
-		res[index].name		= "PCIx IO Primary";
-		res[index].flags	= IORESOURCE_IO;
-
-		if (request_resource(&ioport_resource, &res[index]))
-			printk(KERN_ERROR "IO Request resource failed - Pci If %x\n", nr);
-		else
-			index++;
-	}
+	sys->map_irq = mv_map_irq;
+
+	membase = PEX_MEM_PHYS_BASE;
 	res[index].start	= membase;
-	res[index].end		= membase + mv_pci_mem_size_get() - 1;
+	res[index].end		= membase + PEX_MEM_SIZE - 1;
 	res[index].name		= "PCIx Memory Primary";
 	res[index].flags	= IORESOURCE_MEM;
 
 	if (request_resource(&iomem_resource, &res[index]))
-		printk(KERN_ERROR "Memory Request resource failed - Pci If %x\n", nr);
+		printk(KERN_ERR "Memory Request resource failed - Pci If %x\n", nr);
 
 	pci_add_resource(&sys->resources, &res[0]);
 	if (index > 0)
@@ -428,7 +378,6 @@ int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 
 struct pci_bus * __devinit mv_pex_scan_bus(int nr, struct pci_sys_data *sys)
 {
-	struct pci_ops *ops = &mv_pci_ops;
 	struct pci_bus *bus;
 	MV_BOARD_PEX_INFO *boardPexInfo = mvBoardPexInfoGet();
 	MV_U32 pexNextHWInf, ifnum;
@@ -453,54 +402,9 @@ struct pci_bus * __devinit mv_pex_scan_bus(int nr, struct pci_sys_data *sys)
 }
 
 
-static int __init mv_map_irq_0(const struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE0;
-}
-
-static int __init mv_map_irq_1(const struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE1;
-}
-
-static int __init mv_map_irq_2(const struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE2;
-}
-
-static int __init mv_map_irq_3(const struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE3;
-}
-
-static int __init mv_map_irq_4(const struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE4;
-}
-
-static int __init mv_map_irq_5(const struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE5;
-}
-
-static int __init mv_map_irq_6(const struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE6;
-}
-
-static int __init mv_map_irq_7(const struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE7;
-}
-
-static int __init mv_map_irq_8(const struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE8;
-}
-
-static int __init mv_map_irq_9(const struct pci_dev *dev, u8 slot, u8 pin)
+static int __init mv_map_irq(const struct pci_dev *dev, u8 slot, u8 pin)
 {
-	return IRQ_AURORA_PCIE9;
+	return IRQ_AURORA_PCIE;
 }
 
 static struct hw_pci mv_pci __initdata = {
@@ -581,7 +485,7 @@ static int __init mv_pex_init_module(void)
 
 	mv_pci.nr_controllers = (mvBoardPexInfoGet())->boardPexIfNum;
 	mv_pci.swizzle		= pci_std_swizzle;
-	mv_pci.map_irq		= mv_map_irq_0;
+	mv_pci.map_irq		= mv_map_irq;
 	mv_pci.setup		= mv_pex_setup;
 	mv_pci.scan		= mv_pex_scan_bus;
 	mv_pci.preinit		= mv_pex_preinit;
diff --git a/arch/arm/mach-msys/sysmap.c b/arch/arm/mach-msys/sysmap.c
index f2d719c4..618c643 100644
--- a/arch/arm/mach-msys/sysmap.c
+++ b/arch/arm/mach-msys/sysmap.c
@@ -77,38 +77,3 @@ void __init msys_map_io(void)
 	iotable_init(MEM_TABLE, ARRAY_SIZE(MEM_TABLE));
 }
 
-u32 mv_pci_mem_base_get(void)
-{
-	return PEX_MEM_PHYS_BASE;
-}
-
-u32 mv_pci_mem_size_get(void)
-{
-	return PEX_MEM_SIZE;
-}
-
-u32 mv_pci_io_base_get(void)
-{
-	return PEX0_IO_PHYS_BASE;
-}
-
-u32 mv_pci_io_size_get(void)
-{
-	return PEX0_IO_SIZE;
-}
-
-MV_TARGET mv_pci_io_target_get(void)
-{
-	return PEX0_IO;
-}
-
-int mv_is_pci_io_mapped(void)
-{
-	/* FIXME: First 8 address decode windows are statically assigned
-	   for 8 PCIE mem BARs.
-	   This is disabled as long that no more windows are available for
-	   I/O BARs
-	*/
-
-	return 0;
-}
diff --git a/arch/arm/mach-msys/sysmap.h b/arch/arm/mach-msys/sysmap.h
index 2d47ed0..a387808 100644
--- a/arch/arm/mach-msys/sysmap.h
+++ b/arch/arm/mach-msys/sysmap.h
@@ -30,12 +30,6 @@ disclaimer.
 #define __SYSMAP_H
 
 MV_CPU_DEC_WIN *mv_sys_map(void);
-u32 mv_pci_mem_base_get(void);
-u32 mv_pci_mem_size_get(void);
-u32 mv_pci_io_base_get(void);
-u32 mv_pci_io_size_get(void);
-MV_TARGET mv_pci_io_target_get(void);
-int mv_is_pci_io_mapped(void);
 void __init msys_map_io(void);
 
 #endif /* __SYSMAP_H */
-- 
1.7.5.4

