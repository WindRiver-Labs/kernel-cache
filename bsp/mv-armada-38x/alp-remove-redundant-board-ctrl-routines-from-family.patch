From 12e59bb1a45acea53a320f1988a211302685e8ef Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Wed, 28 Aug 2013 10:51:28 +0300
Subject: [PATCH 0980/1825] alp: remove redundant board & ctrl routines from
 family directory

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 50eb9928a2e1226f3f64ceeb66ac9842c055e4b1

	cleanup for unused or redundant routines in mvCtrlEnvLib.c and mvBoardEnvLib.
	Removed from mvBoardEnvLib.c :
		mvBoardSwitchPortMap
		mvBoardRgmiiASwitchPortGet
		mvBoardGePhySwitchPortGet
		mvBoardIsQsgmiiModuleConnected
		mvBoardTwsiReadByteThruMux
		mvBoardTwsiMuxChannelSet
		mvBoardIsLcdDviModuleConnected
		mvBoardOtherModuleTypePrint
		mvBoardIsSetmModuleConnected
		mvBoardIsLvdsModuleConnected
		mvBoardIsPexModuleConnected
		mvBoardMppModulesScan
		mvBoardCpuCoresNumGet
		mvBoardNandWidthGet
		mvBoardGetDeviceWidth
		mvBoardGppConfigGet
		mvBoardIsInternalSwitchConnectedToPort

	Removed from mvCtrlEnvLib.c :
		mvCtrlIsBootFromNAND
		mvCtrlIsBootFromSPI
		mvCtrlIsBootFromNOR
		ctrlSizeRegRoundUp

Change-Id: I365e8843c0cab198c7a5ff8dd14dde7a7b5d5f42
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3114
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |  414 +-------------------
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |   17 -
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |  104 -----
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    4 -
 4 files changed, 2 insertions(+), 537 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 76e8895..05879a6 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -1365,40 +1365,6 @@ MV_BOOL mvBoardLaneSGMIIGet(MV_ETH_COMPLEX_TOPOLOGY *sgmiiConfig)
 }
 
 /*******************************************************************************
-* mvBoardIsInternalSwitchConnectedToPort
-*
-* DESCRIPTION:
-*       This routine returns port's connection status
-*
-* INPUT:
-*       ethPortNum - Ethernet port number.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       1 - if ethPortNum is connected to switch, 0 otherwise
-*
-*******************************************************************************/
-MV_STATUS mvBoardIsInternalSwitchConnectedToPort(MV_U32 ethPortNum)
-{
-	MV_U32 ethComplex = mvBoardEthComplexConfigGet();
-
-	if (ethPortNum >= board->numBoardMacInfo) {
-		mvOsPrintf("%s: Error: Illegal port number(%u)\n", __func__, ethPortNum);
-		return MV_FALSE;
-	}
-
-	/* Check if internal switch is connected */
-	if ((ethPortNum == 0) && (ethComplex & MV_ETHCOMP_GE_MAC0_2_SW_P6))
-		return MV_TRUE;
-	else if ((ethPortNum == 1) && (ethComplex & MV_ETHCOMP_GE_MAC1_2_SW_P4))
-		return MV_TRUE;
-	else
-		return MV_FALSE;
-}
-
-/*******************************************************************************
 * mvBoardIsInternalSwitchConnected
 *
 * DESCRIPTION:
@@ -1602,37 +1568,6 @@ MV_VOID mvBoardConfigWrite(void)
 }
 
 /*******************************************************************************
-* mvBoardGppConfigGet
-*
-* DESCRIPTION:
-*	Get board configuration according to the input configuration GPP's.
-*
-* INPUT:
-*       None.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*	The value of the board configuration GPP's.
-*
-*******************************************************************************/
-MV_U32 mvBoardGppConfigGet(void)
-{
-	MV_U32 gpp, i, result = 0;
-
-	for (i = 0; i < board->numBoardGppInfo; i++) {
-		if (board->pBoardGppInfo[i].devClass == BOARD_GPP_CONF) {
-			gpp = board->pBoardGppInfo[i].gppPinNum;
-			result <<= 1;
-			result |= (mvGppValueGet(gpp >> 5, 1 << (gpp & 0x1F)) >> (gpp & 0x1F));
-		}
-	}
-
-	return result;
-}
-
-/*******************************************************************************
 * mvBoardTdmSpiModeGet - return SLIC/DAA connection
 *
 * DESCRIPTION:
@@ -1758,11 +1693,7 @@ MV_VOID mvBoardConfigurationPrint(MV_VOID)
 	boardID = mvBoardIdGet();
 	mvOsOutput("\nBoard configuration:\n");
 
-	/* LCD DVI Module */
-	if (mvBoardIsLcdDviModuleConnected())
-		mvOsOutput("       LCD DVI module.\n");
-
-	/* Serdex configuration */
+	/* Mac configuration */
 	if (ethConfig & MV_ETHCOMP_GE_MAC0_2_COMPHY_1)
 		mvOsOutput("       SGMII0 on MAC0 [Lane1]\n");
 	if (ethConfig & MV_ETHCOMP_GE_MAC0_2_COMPHY_2)
@@ -1771,7 +1702,7 @@ MV_VOID mvBoardConfigurationPrint(MV_VOID)
 		mvOsOutput("       SGMII0 on MAC0 [Lane3]\n");
 
 
-	/* Switch Module */
+	/* Switch configuration */
 	if (ethConfig & MV_ETHCOMP_GE_MAC0_2_SW_P6)
 		mvOsOutput("       Ethernet Switch port 6 on MAC0, %s Speed [Default]\n"
 				, mvBoardMacSpeedGet(0) == BOARD_MAC_SPEED_2000M ? "2G" : "1G");
@@ -1835,16 +1766,6 @@ MV_VOID mvBoardConfigurationPrint(MV_VOID)
 
 }
 
-MV_VOID mvBoardOtherModuleTypePrint(MV_VOID)
-{
-	/* SETM Module */
-	if (mvBoardIsSetmModuleConnected())
-		mvOsOutput("       SETM module.\n");
-	/* LVDS Module */
-	if (mvBoardIsLvdsModuleConnected())
-		mvOsOutput("       LVDS module.\n");
-}
-
 /*******************************************************************************
 * mvBoardIsGbEPortConnected
 *
@@ -1953,34 +1874,6 @@ MV_32 mvBoardGetDeviceBusWidth(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 }
 
 /*******************************************************************************
-* mvBoardGetDeviceWidth - Get dev width of a device existing on the board
-*
-* DESCRIPTION:
-*
-* INPUT:
-*       devIndex - The device sequential number on the board
-*		devType - The device type ( Flash,RTC , etc .. )
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       If the device is found on the board the then the functions returns the
-*		dev width else the function returns 0xffffffff
-*
-*
-*******************************************************************************/
-MV_32 mvBoardGetDeviceWidth(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
-{
-	MV_DEV_CS_INFO *devEntry = boardGetDevEntry(devNum, devClass);
-
-	if (devEntry)
-		return devEntry->devWidth;
-
-	return MV_ERROR;
-}
-
-/*******************************************************************************
 * mvBoardGetDeviceWinSize - Get the window size of a device existing on the board
 *
 * DESCRIPTION:
@@ -2459,35 +2352,6 @@ MV_STATUS mvBoardSgmiiSfp0TxSet(MV_BOOL enable)
 }
 
 /*******************************************************************************
-* mvBoardNandWidthGet -
-*
-* DESCRIPTION: Get the width of the first NAND device in bytes
-*
-* INPUT:
-*
-* OUTPUT:
-*       None.
-*
-* RETURN: 1, 2, 4 or MV_ERROR
-*
-*
-*******************************************************************************/
-MV_32 mvBoardNandWidthGet(void)
-{
-	MV_U32 devNum;
-	MV_U32 devWidth;
-
-	for (devNum = START_DEV_CS; devNum < board->numBoardDeviceIf; devNum++) {
-		devWidth = mvBoardGetDeviceWidth(devNum, BOARD_DEV_NAND_FLASH);
-		if (devWidth != MV_ERROR)
-			return devWidth / 8;
-	}
-
-	DB(mvOsPrintf("%s: Error: NAND device was not found\n", __func__));
-	return MV_ERROR;
-}
-
-/*******************************************************************************
 * mvBoardIdSet - Set Board model
 *
 * DESCRIPTION:
@@ -2641,170 +2505,6 @@ MV_STATUS mvBoardTwsiSet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regN
 }
 
 /*******************************************************************************
- * SatR Configuration functions
- */
-
-MV_U8 mvBoardCpuCoresNumGet(MV_VOID)
-{
-	return 1;
-}
-
-/*******************************************************************************
-* End of SatR Configuration functions
-*******************************************************************************/
-
-/*******************************************************************************
-* mvBoardMppModulesScan
-*
-* DESCRIPTION:
-*	Scan for modules connected through MPP lines.
-*
-* INPUT:
-*	None.
-*
-* OUTPUT:
-*	None
-*
-* RETURN:
-*       MV_STATUS - MV_OK, MV_ERROR.
-*
-*******************************************************************************/
-MV_STATUS mvBoardMppModulesScan(void)
-{
-	return MV_OK;
-}
-
-/*******************************************************************************
-* mvBoardIsPexModuleConnected
-*
-* DESCRIPTION:
-*	Check if PEX module is connected to the board.
-*
-* INPUT:
-*	None.
-*
-* OUTPUT:
-*	None
-*
-* RETURN:
-*       MV_TRUE / MV_FALSE
-*
-*******************************************************************************/
-MV_BOOL mvBoardIsPexModuleConnected(void)
-{
-	return MV_FALSE;
-}
-
-/*******************************************************************************
-* mvBoardIsSetmModuleConnected
-*
-* DESCRIPTION:
-*	Check if SETM module is connected to the board.
-*
-* INPUT:
-*	None.
-*
-* OUTPUT:
-*	None
-*
-* RETURN:
-*       MV_TRUE / MV_FALSE
-*
-*******************************************************************************/
-MV_BOOL mvBoardIsSetmModuleConnected(void)
-{
-	return MV_FALSE;
-}
-
-/*******************************************************************************
-* mvBoardIsLvdsModuleConnected
-*
-* DESCRIPTION:
-*	Check if LVDS module is connected to the board.
-*
-* INPUT:
-*	None.
-*
-* OUTPUT:
-*	None
-*
-* RETURN:
-*       MV_TRUE / MV_FALSE
-*
-*******************************************************************************/
-MV_BOOL mvBoardIsLvdsModuleConnected(void)
-{
-	return MV_FALSE;
-}
-
-/*******************************************************************************
-* mvBoardIsLcdDviModuleConnected
-*
-* DESCRIPTION:
-*	Check if LVDS module is connected to the board.
-*
-* INPUT:
-*	None.
-*
-* OUTPUT:
-*	None
-*
-* RETURN:
-*       MV_TRUE / MV_FALSE
-*
-*******************************************************************************/
-MV_BOOL mvBoardIsLcdDviModuleConnected(void)
-{
-	return MV_FALSE;
-}
-
-/*******************************************************************************
-* mvBoardTwsiMuxChannelSet
-*
-* DESCRIPTION:
-*	Set the channel number of the on-board TWSI mux.
-*
-* INPUT:
-*	chNum	- The channel number to set.
-*
-* OUTPUT:
-*	None.
-*
-* RETURN:
-*       MV_STATUS - MV_OK, MV_ERROR.
-*
-*******************************************************************************/
-MV_STATUS mvBoardTwsiMuxChannelSet(MV_U8 muxChNum)
-{
-	return MV_ERROR;
-}
-
-/*******************************************************************************
-* mvBoardTwsiReadByteThruMux
-*
-* DESCRIPTION:
-*	Read a single byte from a TWSI device through the TWSI Mux.
-*
-* INPUT:
-*	muxChNum	- The Twsi Mux channel number to read through.
-*	chNum		- The TWSI channel number.
-*	pTwsiSlave	- The TWSI slave address.
-*	data		- Buffer to read into (1 byte).
-*
-* OUTPUT:
-*	None.
-*
-* RETURN:
-*       MV_STATUS - MV_OK, MV_ERROR.
-*
-*******************************************************************************/
-MV_STATUS mvBoardTwsiReadByteThruMux(MV_U8 muxChNum, MV_U8 chNum,
-				     MV_TWSI_SLAVE *pTwsiSlave, MV_U8 *data)
-{
-	return MV_ERROR;
-}
-
-/*******************************************************************************
 * mvBoardSmiScanModeGet - Get Switch SMI scan mode
 *
 * DESCRIPTION:
@@ -2938,116 +2638,6 @@ MV_U32 mvBoardMacCpuPortGet(MV_VOID)
 }
 
 /*******************************************************************************
-* mvBoardIsQsgmiiModuleConnected
-*
-* DESCRIPTION:
-*       This routine returns whether the QSGMII module is connected or not.
-*
-* INPUT:
-*       None.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       MV_TRUE if QSGMII module is connected, MV_FALSE otherwise.
-*
-*******************************************************************************/
-MV_BOOL mvBoardIsQsgmiiModuleConnected(MV_VOID)
-{
-	return MV_FALSE;
-}
-
-/*******************************************************************************
-* mvBoardGePhySwitchPortGet
-*
-* DESCRIPTION:
-*       This routine returns whether the internal GE PHY is connected to
-*	Switch Port 0, Switch port 5 or not connected to any Switch port.
-*
-* INPUT:
-*       None.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       0 if the internal GE PHY is connected to Switch Port 0,
-*	5 if the internal GE PHY is connected to Switch Port 5,
-*	-1 otherwise.
-*
-*******************************************************************************/
-MV_32 mvBoardGePhySwitchPortGet(MV_VOID)
-{
-	return -1;
-}
-
-/*******************************************************************************
-* mvBoardRgmiiASwitchPortGet
-*
-* DESCRIPTION:
-*       This routine returns whether RGMII-A is connected to
-*	Switch Port 5, Switch port 6 or not connected to any Switch port.
-*
-* INPUT:
-*       None.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       5 if the internal GE PHY is connected to Switch Port 5,
-*	6 if the internal GE PHY is connected to Switch Port 6,
-*	-1 otherwise.
-*
-*******************************************************************************/
-MV_32 mvBoardRgmiiASwitchPortGet(MV_VOID)
-{
-	return -1;
-}
-
-/*******************************************************************************
-* mvBoardSwitchPortMap
-*
-* DESCRIPTION:
-*	Map front panel connector number to switch port number.
-*
-* INPUT:
-*	switchIdx - The switch index.
-*	switchPortNum - The switch port number to get the mapping for.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*	The switch port mapping.
-*	OR -1 if the port number is wrong or if not relevant.
-*
-*******************************************************************************/
-MV_32 mvBoardSwitchPortMap(MV_U32 switchIdx, MV_U32 switchPortNum)
-{
-	MV_U32 ethComplex = mvBoardEthComplexConfigGet();
-	if (switchPortNum >= BOARD_ETH_SWITCH_PORT_NUM) {
-		mvOsPrintf("%s: Error: wrong switch port number (%d)\n", __func__, switchPortNum);
-		return -1;
-	}
-
-	if ((switchPortNum == 0) && (ethComplex & MV_ETHCOMP_SW_P0_2_GE_PHY_P0))
-		return 0;
-	else if ((switchPortNum == 1) && (ethComplex & MV_ETHCOMP_SW_P1_2_GE_PHY_P1))
-		return 1;
-	else if ((switchPortNum == 2) && (ethComplex & MV_ETHCOMP_SW_P2_2_GE_PHY_P2))
-		return 2;
-	else if ((switchPortNum == 3) && (ethComplex & MV_ETHCOMP_SW_P3_2_GE_PHY_P3))
-		return 3;
-	else if ((switchPortNum == 4) && (ethComplex & MV_ETHCOMP_SW_P4_2_RGMII0))
-		return 4;
-
-	mvOsPrintf("%s: Error: switch port map not found\n", __func__);
-	return -1;
-}
-
-/*******************************************************************************
 * mvBoardConfigAutoDetectEnabled
 *
 * DESCRIPTION:
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index 1d8de8c..19d8a8b 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -466,7 +466,6 @@ MV_STATUS mvBoardNameGet(char *pNameBuff, MV_U32 size);
 MV_BOARD_SPEC_INIT *mvBoardSpecInitGet(MV_VOID);
 MV_BOOL mvBoardIsPortInSgmii(MV_U32 ethPortNum);
 MV_BOOL mvBoardIsPortInGmii(MV_U32 ethPortNum);
-MV_32 mvBoardSwitchPortMap(MV_U32 switchIdx, MV_U32 switchPortNum);
 MV_BOOL mvBoardIsPortLoopback(MV_U32 ethPortNum);
 MV_32 mvBoardPhyAddrGet(MV_U32 ethPortNum);
 MV_VOID mvBoardPhyAddrSet(MV_U32 ethPortNum, MV_U32 smiAddr);
@@ -495,23 +494,19 @@ MV_VOID mvBoardSlicUnitTypeSet(MV_U32 slicType);
 MV_32 mvBoardMppGet(MV_U32 mppGroupNum);
 MV_VOID mvBoardMppTypeSet(MV_U32 mppGroupNum, MV_U32 groupType);
 MV_VOID mvBoardMppSet(MV_U32 mppGroupNum, MV_U32 mppValue);
-MV_U32 mvBoardGppConfigGet(void);
 MV_32 mvBoardTdmSpiModeGet(MV_VOID);
 MV_U8 mvBoardTdmDevicesCountGet(void);
 MV_U8 mvBoardTdmSpiCsGet(MV_U8 devId);
 MV_U8 mvBoardTdmSpiIdGet(MV_VOID);
 MV_VOID mvBoardConfigurationPrint(MV_VOID);
-MV_VOID mvBoardOtherModuleTypePrint(MV_VOID);
 MV_BOOL mvBoardIsGbEPortConnected(MV_U32 ethPortNum);
 MV_32 mvBoardGetDevicesNumber(MV_BOARD_DEV_CLASS devClass);
 MV_32 mvBoardGetDeviceBaseAddr(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
 MV_32 mvBoardGetDeviceBusWidth(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
-MV_32 mvBoardGetDeviceWidth(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
 MV_32 mvBoardGetDeviceWinSize(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
 MV_U32 boardGetDevCSNum(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
 MV_U8 mvBoardTwsiAddrTypeGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index);
 MV_U8 mvBoardTwsiAddrGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index);
-MV_32 mvBoardNandWidthGet(void);
 MV_U32 mvBoardEthComplexConfigGet(MV_VOID);
 MV_VOID mvBoardEthComplexConfigSet(MV_U32 ethConfig);
 MV_U32 mvBoardIdGet(MV_VOID);
@@ -531,22 +526,10 @@ MV_STATUS mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regN
 MV_STATUS mvBoardTwsiSet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum, MV_U8 regVal);
 MV_U8 mvBoardCpuFreqGet(MV_VOID);
 MV_STATUS mvBoardCpuFreqSet(MV_U8 freqVal);
-MV_U8 mvBoardCpuCoresNumGet(MV_VOID);
-MV_STATUS mvBoardMppModulesScan(void);
-MV_BOOL mvBoardIsPexModuleConnected(void);
-MV_BOOL mvBoardIsSetmModuleConnected(void);
-MV_STATUS mvBoardIsInternalSwitchConnectedToPort(MV_U32 ethPortNum);
 MV_STATUS mvBoardIsInternalSwitchConnected(void);
 MV_U32 mvBoardSwitchPortForceLinkGet(MV_U32 switchIdx);
 MV_U32 mvBoardFreqModesNumGet(void);
-MV_BOOL mvBoardIsLvdsModuleConnected(void);
-MV_BOOL mvBoardIsLcdDviModuleConnected(void);
-MV_STATUS mvBoardTwsiMuxChannelSet(MV_U8 muxChNum);
-MV_STATUS mvBoardTwsiReadByteThruMux(MV_U8 muxChNum, MV_U8 chNum, MV_TWSI_SLAVE *pTwsiSlave, MV_U8 *data);
 MV_32 mvBoardSmiScanModeGet(MV_U32 switchIdx);
-MV_BOOL mvBoardIsQsgmiiModuleConnected(void);
-MV_32 mvBoardGePhySwitchPortGet(void);
-MV_32 mvBoardRgmiiASwitchPortGet(void);
 MV_BOARD_MAC_SPEED mvBoardMacSpeedGet(MV_U32 ethPortNum);
 MV_VOID mvBoardMacSpeedSet(MV_U32 ethPortNum, MV_BOARD_MAC_SPEED macSpeed);
 MV_U32 mvBoardSwitchCpuPortGet(MV_U32 switchIdx);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 54b361e..8a23311 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -1790,47 +1790,6 @@ MV_U32 ctrlRegToSize(MV_U32 regSize, MV_U32 alignment)
 }
 
 /*******************************************************************************
-* ctrlSizeRegRoundUp - Round up given size
-*
-* DESCRIPTION:
-*       This function round up a given size to a size that fits the
-*       restrictions of size format given an aligment parameter.
-*		to given aligment paramter. For example for size parameter 0xa1000 and
-*		aligment 0x1000 the function will return 0xFF000.
-*
-* INPUT:
-*       size - Size.
-*		alignment - Size alignment.	Note that alignment must be power of 2!
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       32bit describing size value correspond to size in register.
-*******************************************************************************/
-MV_U32 ctrlSizeRegRoundUp(MV_U32 size, MV_U32 alignment)
-{
-	MV_U32 msbBit = 0;
-	MV_U32 retSize;
-
-	/* Check if size parameter is already comply with restriction   */
-	if (!(-1 == ctrlSizeToReg(size, alignment)))
-		return size;
-
-	while (size) {
-		size = (size >> 1);
-		msbBit++;
-	}
-
-	retSize = (1 << msbBit);
-
-	if (retSize < alignment)
-		return alignment;
-	else
-		return retSize;
-}
-
-/*******************************************************************************
  * mvCtrlIsDLBEnabled - Read DLB configuration
  *
  * DESCRIPTION: return True if DLB is enabled
@@ -1850,69 +1809,6 @@ MV_BOOL mvCtrlIsDLBEnabled(MV_VOID)
 	return (reg & 0x1) ? MV_TRUE : MV_FALSE;
 }
 
-/*******************************************************************************
-* mvCtrlIsBootFromNOR
-*
-* DESCRIPTION:
-*       Check if device is configured to boot from NOR flash according to the
-*	SAR registers.
-*
-* INPUT:
-*	None.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       MV_TRUE if device boot from SPI.
-*******************************************************************************/
-MV_BOOL mvCtrlIsBootFromNOR(MV_VOID)
-{
-	return MV_TRUE;
-}
-
-/*******************************************************************************
-* mvCtrlIsBootFromSPI
-*
-* DESCRIPTION:
-*       Check if device is configured to boot from SPI flash according to the
-*	SAR registers.
-*
-* INPUT:
-*	None.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       MV_TRUE if device boot from SPI.
-*******************************************************************************/
-MV_BOOL mvCtrlIsBootFromSPI(MV_VOID)
-{
-	return MV_TRUE; // omriii : return to false
-}
-
-/*******************************************************************************
-* mvCtrlIsBootFromNAND
-*
-* DESCRIPTION:
-*       Check if device is confiogured to boot from NAND flash according to the SAR
-*	registers.
-*
-* INPUT:
-*	None.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       MV_TRUE if device boot from NAND.
-*******************************************************************************/
-MV_BOOL mvCtrlIsBootFromNAND(MV_VOID)
-{
-	return MV_FALSE;
-}
-
 #if defined(MV_INCLUDE_CLK_PWR_CNTRL)
 /*******************************************************************************
 * mvCtrlPwrClckSet - Set Power State for specific Unit
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index d630586..c0fd4c0 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -308,7 +308,6 @@ MV_VOID mvCtrlAddrDecShow(MV_VOID);
 const MV_8 *mvCtrlTargetNameGet(MV_TARGET target);
 MV_U32    ctrlSizeToReg(MV_U32 size, MV_U32 alignment);
 MV_U32    ctrlRegToSize(MV_U32 regSize, MV_U32 alignment);
-MV_U32    ctrlSizeRegRoundUp(MV_U32 size, MV_U32 alignment);
 MV_U32 mvCtrlSysRstLengthCounterGet(MV_VOID);
 MV_STATUS ctrlWinOverlapTest(MV_ADDR_WIN *pAddrWin1, MV_ADDR_WIN *pAddrWin2);
 MV_STATUS ctrlWinWithinWinTest(MV_ADDR_WIN *pAddrWin1, MV_ADDR_WIN *pAddrWin2);
@@ -316,9 +315,6 @@ MV_VOID mvCtrlSmiMasterSet(MV_SMI_CTRL smiCtrl);
 MV_VOID mvCtrlPwrClckSet(MV_UNIT_ID unitId, MV_U32 index, MV_BOOL enable);
 MV_BOOL mvCtrlPwrClckGet(MV_UNIT_ID unitId, MV_U32 index);
 MV_BOOL mvCtrlIsDLBEnabled(MV_VOID);
-MV_BOOL mvCtrlIsBootFromNOR(MV_VOID);
-MV_BOOL mvCtrlIsBootFromSPI(MV_VOID);
-MV_BOOL mvCtrlIsBootFromNAND(MV_VOID);
 MV_U32 mvCtrlDDRBudWidth(MV_VOID);
 MV_BOOL mvCtrlDDRThruXbar(MV_VOID);
 MV_BOOL mvCtrlDDRECC(MV_VOID);
-- 
1.7.5.4

