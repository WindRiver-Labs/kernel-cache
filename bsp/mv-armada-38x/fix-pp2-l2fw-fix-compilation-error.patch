From 9e4bfb8f52b32a1d0675a182402d726f5c375864 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Tue, 27 Aug 2013 15:09:50 -0400
Subject: [PATCH 0976/1825] fix: pp2: l2fw fix compilation error

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 0ebbb6e59431e2a8277e045e02f5360f3e1777b4

        - Don't use mvCtrlEnvMaxPort function
        Use information from plat_data instead
        - Save "plat_data" in "struct eth_port"
        - Update help for sysfs commands

Change-Id: I73513fb61ed95d8f8025a3b2dd8d42096f351ed8
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3099
Reviewed-by: Igor Patrik <igorp@marvell.com>
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/l2fw/l2fw_sysfs.c        |   20 ++--
 .../mv_drivers_lsp/mv_pp2/l2fw/mv_eth_l2fw.c       |   87 ++++----------------
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |    4 +-
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    4 +-
 4 files changed, 33 insertions(+), 82 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/l2fw/l2fw_sysfs.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/l2fw/l2fw_sysfs.c
index 50c516c..7a5ec9b 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/l2fw/l2fw_sysfs.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/l2fw/l2fw_sysfs.c
@@ -44,18 +44,18 @@ static ssize_t mv_l2fw_help(char *buf)
 {
 	int off = 0;
 
-	off += sprintf(buf+off, "cat rules_dump      - Display L2fw rules DB\n");
-	off += sprintf(buf+off, "cat ports_dump      - Display L2fw ports DB\n");
-	off += sprintf(buf+off, "cat stats           - Show debug information\n");
+	off += sprintf(buf+off, "cat               rules_dump - Display L2FW rules DB\n");
+	off += sprintf(buf+off, "cat               ports_dump - Display L2FW ports DB\n");
+	off += sprintf(buf+off, "cat               stats      - Show debug information\n");
 	off += sprintf(buf+off, "\n");
-	off += sprintf(buf+off, "echo p [1,0]      > l2fw     - Enable/Disable port <p> l2fw\n");
-	off += sprintf(buf+off, "echo rxp txp mode > bind     - Set <rxp-->txp,mode> 0-as_is,1-swap,2-copy\n");
-	off += sprintf(buf+off, "echo rxp thresh   > xor - Set for port <rxp> xor threshold ,input in decimal\n");
-	off += sprintf(buf+off, "echo rxp en       > lookup   - Set for port <rxp> lookup enable:0 or disable:1\n");
-	off += sprintf(buf+off, "echo 1            > flush    - Flush L2fw rules DB\n");
-	off += sprintf(buf+off, "echo sIp dIp txp  > add_ip   - Set rule, srcIp and DstIp in ip address format\n");
+	off += sprintf(buf+off, "echo p [1|0]      > l2fw     - Enable/Disable L2FW for port <p>\n");
+	off += sprintf(buf+off, "echo rxp txp mode > bind     - Set <rxp-->txp>, mode: 0-as_is, 1-swap, 2-copy\n");
+	off += sprintf(buf+off, "echo rxp thresh   > xor      - Set XOR threshold for port <rxp>\n");
+	off += sprintf(buf+off, "echo rxp [1|0]    > lookup   - Enable/Disable L3 lookup for port <rxp>\n");
+	off += sprintf(buf+off, "echo 1            > flush    - Flush L2FW rules DB\n");
+	off += sprintf(buf+off, "echo sip dip txp  > add_ip   - Set L3 lookup rule, sip, dip in a.b.c.d format\n");
 #ifdef CONFIG_MV_ETH_L2SEC
-	off += sprintf(buf+off, "echo p chan       > cesa_chan- Set cesa channel <chan> for port <p>.\n");
+	off += sprintf(buf+off, "echo p chan       > cesa     - Set cesa channel <chan> for port <p>.\n");
 #endif
 	return off;
 }
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/l2fw/mv_eth_l2fw.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/l2fw/mv_eth_l2fw.c
index a7343ac..af18180 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/l2fw/mv_eth_l2fw.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/l2fw/mv_eth_l2fw.c
@@ -53,7 +53,9 @@ static MV_XOR_DESC *eth_xor_desc;
 static MV_LONG      eth_xor_desc_phys_addr;
 #endif
 
-struct eth_port_l2fw **mv_eth_ports_l2fw;
+static struct eth_port_l2fw **mv_eth_ports_l2fw;
+static int eth_ports_l2fw_num;
+
 inline int mv_l2fw_rx(struct eth_port *pp, int rx_todo, int rxq);
 inline int mv_l2fw_tx(struct sk_buff *skb, struct eth_port *pp, struct pp2_rx_desc *rx_desc);
 inline int mv_l2fw_txq_done(struct eth_port *pp, struct tx_queue *txq_ctrl);
@@ -139,7 +141,6 @@ void mv_l2fw_ports_dump(void)
 {
 	MV_U32 rx_port = 0;
 	struct eth_port_l2fw *ppl2fw;
-	int ports = mvCtrlEthMaxPortGet();
 
 	mvOsPrintf("\nPrinting L2fw ports Database:\n");
 	mvOsPrintf("*******************************\n");
@@ -147,7 +148,7 @@ void mv_l2fw_ports_dump(void)
 	if (!mv_eth_ports_l2fw)
 		return;
 
-	for (rx_port = 0; rx_port < ports; rx_port++) {
+	for (rx_port = 0; rx_port < eth_ports_l2fw_num; rx_port++) {
 		ppl2fw = mv_eth_ports_l2fw[rx_port];
 		if (ppl2fw)
 			mvOsPrintf("rx_port=%d cmd = %d tx_port=%d lookup=%d xor_threshold = %d\n",
@@ -203,37 +204,6 @@ int mv_l2fw_add(MV_U32 srcIP, MV_U32 dstIP, int port)
 	return MV_OK;
 }
 
-
-#ifdef CONFIG_MV_INCLUDE_XOR
-static void dump_xor(void)
-{
-	mvOsPrintf(" CHANNEL_ARBITER_REG %08x\n",
-		MV_REG_READ(XOR_CHANNEL_ARBITER_REG(1)));
-	mvOsPrintf(" CONFIG_REG          %08x\n",
-		MV_REG_READ(XOR_CONFIG_REG(1, XOR_CHAN(0))));
-	mvOsPrintf(" ACTIVATION_REG      %08x\n",
-		MV_REG_READ(XOR_ACTIVATION_REG(1, XOR_CHAN(0))));
-	mvOsPrintf(" CAUSE_REG           %08x\n",
-		MV_REG_READ(XOR_CAUSE_REG(1)));
-	mvOsPrintf(" MASK_REG            %08x\n",
-		MV_REG_READ(XOR_MASK_REG(1)));
-	mvOsPrintf(" ERROR_CAUSE_REG     %08x\n",
-		MV_REG_READ(XOR_ERROR_CAUSE_REG(1)));
-	mvOsPrintf(" ERROR_ADDR_REG      %08x\n",
-		MV_REG_READ(XOR_ERROR_ADDR_REG(1)));
-	mvOsPrintf(" NEXT_DESC_PTR_REG   %08x\n",
-		MV_REG_READ(XOR_NEXT_DESC_PTR_REG(1, XOR_CHAN(0))));
-	mvOsPrintf(" CURR_DESC_PTR_REG   %08x\n",
-		MV_REG_READ(XOR_CURR_DESC_PTR_REG(1, XOR_CHAN(0))));
-	mvOsPrintf(" BYTE_COUNT_REG      %08x\n\n",
-		MV_REG_READ(XOR_BYTE_COUNT_REG(1, XOR_CHAN(0))));
-	mvOsPrintf("  %08x\n\n", XOR_WINDOW_CTRL_REG(1, XOR_CHAN(0))) ;
-		mvOsPrintf(" XOR_WINDOW_CTRL_REG      %08x\n\n",
-		MV_REG_READ(XOR_WINDOW_CTRL_REG(1, XOR_CHAN(0)))) ;
-}
-#endif
-
-
 static int mv_eth_poll_l2fw(struct napi_struct *napi, int budget)
 {
 	int rx_done = 0;
@@ -356,16 +326,8 @@ static int mv_l2fw_update_napi(struct eth_port *pp, bool l2fw)
 	return MV_OK;
 }
 
-
 static int mv_l2fw_check(int port, bool l2fw)
 {
-	int max_port = mvCtrlEthMaxPortGet() - 1;
-
-	if ((port > max_port) || (port < 0)) {
-		mvOsPrintf("Error: invalid port %d\n", port);
-		return MV_ERROR;
-	}
-
 	if (!l2fw) {
 		/* user try to exit form l2fw */
 		if (!mv_eth_ports_l2fw) {
@@ -389,14 +351,12 @@ static int mv_l2fw_check(int port, bool l2fw)
 
 int mv_l2fw_set(int port, bool l2fw)
 {
-	struct eth_port *pp;
+	struct eth_port *pp = mv_eth_port_by_id(port);
 	int status = MV_OK;
 
 	if (mv_l2fw_check(port, l2fw))
 		return MV_ERROR;
 
-	pp = mv_eth_ports[port];
-
 	if (!pp) {
 		mvOsPrintf("pp is NULL in setting L2FW (%s)\n", __func__);
 		return MV_ERROR;
@@ -410,9 +370,12 @@ int mv_l2fw_set(int port, bool l2fw)
 	/* for multiBuffer validation */
 	/*mvGmacMaxRxSizeSet(port, 9000);*/
 
-	if (!mv_eth_netdev_ops_ptr)
-		/* enter only once - save eth ops*/
+	if (!mv_eth_netdev_ops_ptr) {
+		/* enter only once - save eth ops */
 		mv_eth_netdev_ops_ptr = pp->dev->netdev_ops;
+		/* set maximum number of ports */
+		eth_ports_l2fw_num = pp->plat_data->max_port;
+	}
 
 	if (mv_l2fw_update_napi(pp, l2fw))
 		return MV_ERROR;
@@ -432,21 +395,16 @@ int mv_l2fw_set(int port, bool l2fw)
 int mv_l2fw_port(int rx_port, int tx_port, int cmd)
 {
 	struct eth_port_l2fw *ppl2fw;
-	int max_port = mvCtrlEthMaxPortGet() - 1;
 
 	if (!mv_eth_ports_l2fw) {
 		mvOsPrintf("%s: ports are not in l2fw mode\n", __func__);
 		return MV_ERROR;
 	}
-	if (rx_port > max_port) {
-		mvOsPrintf("Error: invalid port %d\n", rx_port);
+	if (mvPp2MaxCheck(rx_port, eth_ports_l2fw_num, "rx_port"))
 		return MV_ERROR;
-	}
 
-	if (tx_port > max_port) {
-		mvOsPrintf("Error: invalid port %d\n", tx_port);
+	if (mvPp2MaxCheck(tx_port, eth_ports_l2fw_num, "tx_port"))
 		return MV_ERROR;
-	}
 
 	if (!mv_eth_ports_l2fw[rx_port]) {
 		mvOsPrintf("%s: port #%d is not in l2fw mode\n", __func__, rx_port);
@@ -617,7 +575,6 @@ void setXorDesc(void)
 	mode |= XEXCR_OPERATION_MODE_DMA;
 	MV_REG_WRITE(XOR_CONFIG_REG(1, XOR_CHAN(0)), mode);
 	MV_REG_WRITE(XOR_NEXT_DESC_PTR_REG(1, XOR_CHAN(0)), eth_xor_desc_phys_addr);
-	/*dump_xor();*/
 	/* TODO mask xor intterupts*/
 }
 
@@ -642,12 +599,8 @@ inline int xorReady(void)
 
 void mv_l2fw_xor(int rx_port, int threshold)
 {
-	int max_port = mvCtrlEthMaxPortGet() - 1;
-
-	if (rx_port > max_port) {
-		mvOsPrintf("Error: invalid rx port %d\n", rx_port);
+	if (mvPp2MaxCheck(rx_port, eth_ports_l2fw_num, "rx_port"))
 		return;
-	}
 
 	mvOsPrintf("setting port %d threshold to %d in %s\n", rx_port, threshold, __func__);
 	mv_eth_ports_l2fw[rx_port]->xorThreshold = threshold;
@@ -656,12 +609,9 @@ void mv_l2fw_xor(int rx_port, int threshold)
 
 void mv_l2fw_lookupEn(int rx_port, int enable)
 {
-	int max_port = mvCtrlEthMaxPortGet() - 1;
-
-	if (rx_port > max_port) {
-		mvOsPrintf("Error: invalid rx port %d\n", rx_port);
+	if (mvPp2MaxCheck(rx_port, eth_ports_l2fw_num, "rx_port"))
 		return;
-	}
+
 	mvOsPrintf("setting port %d lookup mode to %s\n", rx_port, (enable == 1) ? "enable" : "disable");
 	mv_eth_ports_l2fw[rx_port]->lookupEn = enable;
 }
@@ -669,12 +619,11 @@ void mv_l2fw_lookupEn(int rx_port, int enable)
 void mv_l2fw_stats(void)
 {
 	int i;
-	int ports = mvCtrlEthMaxPortGet();
 
 	if (!mv_eth_ports_l2fw)
 		return;
 
-	for (i = 0; i < ports; i++) {
+	for (i = 0; i < eth_ports_l2fw_num; i++) {
 		if (mv_eth_ports_l2fw[i]) {
 			mvOsPrintf("number of errors in port[%d]=%d\n", i, mv_eth_ports_l2fw[i]->statErr);
 			mvOsPrintf("number of drops  in port[%d]=%d\n", i, mv_eth_ports_l2fw[i]->statDrop);
@@ -1069,9 +1018,8 @@ static void mv_l2fw_shared_cleanup(void)
 static int mv_l2fw_shared_init(void)
 {
 	int size, bytes;
-	int ports = mvCtrlEthMaxPortGet();
 
-	size = ports * sizeof(struct eth_port_l2fw *);
+	size = eth_ports_l2fw_num * sizeof(struct eth_port_l2fw *);
 	mv_eth_ports_l2fw = mvOsMalloc(size);
 
 	if (!mv_eth_ports_l2fw)
@@ -1100,7 +1048,6 @@ static int mv_l2fw_shared_init(void)
 	/*setXorDesc();*/
 #endif
 
-
 	return MV_OK;
 oom:
 	mv_l2fw_shared_cleanup();
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index d72dbe7..9a1bd77 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -3031,6 +3031,7 @@ static int mv_eth_load_network_interfaces(struct platform_device *pdev)
 	}
 
 	pp = (struct eth_port *)netdev_priv(dev);
+	pp->plat_data = plat_data;
 
 	mv_eth_ports[port] = pp;
 
@@ -4274,11 +4275,12 @@ int mv_eth_rxq_dscp_map_set(int port, int rxq, unsigned char dscp)
 int mv_eth_txq_dscp_map_set(int port, int txq, unsigned char dscp)
 {
 	MV_U8 old_txq;
-	struct eth_port *pp = mv_eth_port_by_id(port);
+	struct eth_port *pp;
 
 	if (mvPp2PortCheck(port))
 		return -EINVAL;
 
+	pp = mv_eth_port_by_id(port);
 	if ((pp == NULL) || (pp->txq_ctrl == NULL))
 		return -ENODEV;
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index 65d11f8..ff15395 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -31,6 +31,7 @@ disclaimer.
 #include <linux/netdevice.h>
 #include <linux/etherdevice.h>
 #include <linux/skbuff.h>
+#include <linux/mv_pp2.h>
 #include <net/ip.h>
 
 #include "mvCommon.h"
@@ -332,8 +333,9 @@ struct cpu_ctrl {
 
 struct eth_port {
 	int                 port;
+	struct mv_pp2_pdata *plat_data;
 	bool                tagged; /* NONE/MH/DSA/EDSA/VLAN */
-	MV_PP2_PORT_CTRL   *port_ctrl;
+	MV_PP2_PORT_CTRL    *port_ctrl;
 	struct rx_queue     *rxq_ctrl;
 	struct tx_queue     *txq_ctrl;
 	int                 txp_num;
-- 
1.7.5.4

