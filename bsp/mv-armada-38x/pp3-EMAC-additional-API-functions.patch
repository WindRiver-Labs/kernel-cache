From a6e0ccf5a06180d76bcbcc80bc174f1734663eb5 Mon Sep 17 00:00:00 2001
From: Uri Eliyahu <uriel@marvell.com>
Date: Wed, 18 Dec 2013 14:08:35 +0200
Subject: [PATCH 1230/1825] pp3: EMAC additional API functions

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c61c174c7e7d11d2dc7057bb00c66dfa76c4cb6a

	- add new fields to emac registers
	- new cfh control APIs

Change-Id: Ib4bae9b215672447fa8a10c5f418b8ed3e688233
Signed-off-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4776
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yelena Krivosheev <yelena@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/marvell/pp3/emac/mv_emac.c    |   41 ++++++++++++++++++++
 drivers/net/ethernet/marvell/pp3/emac/mv_emac.h    |    6 +++
 .../net/ethernet/marvell/pp3/emac/mv_emac_regs.h   |   13 ++++++
 3 files changed, 60 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c
index 1e732fd..88f8d60 100644
--- a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c
+++ b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c
@@ -289,6 +289,47 @@ void mv_pp3_emac_tx_min_pkt_len(int port, int bytes)
 
 	mv_pp3_emac_reg_write(port, MV_EMAC_MIN_PKT_LEN_REG, data);
 }
+/*
+set CFH lockId
+*/
+void mv_pp3_emac_rx_cfh_lock_id(int port, int lock_id)
+{
+	u32 data;
+
+	data = mv_pp3_emac_reg_read(port, MV_EMAC_ENQ_DESC_W0_REG);
+	data &= ~MV_EMAC_ENQ_DESC_W0_LOCKID_MASK;
+	data |= (lock_id << MV_EMAC_ENQ_DESC_W0_LOCKID_OFFS);
+
+	mv_pp3_emac_reg_write(port, MV_EMAC_ENQ_DESC_W0_REG, data);
+}
+
+/*
+set CFH reorder mode
+*/
+void mv_pp3_emac_rx_cfh_reorder_mode(int port, int mode)
+{
+	u32 data;
+
+	data = mv_pp3_emac_reg_read(port, MV_EMAC_ENQ_DESC_W0_REG);
+	data &= ~MV_EMAC_ENQ_DESC_W0_REORDER_MODE_MASK;
+	data |= (mode << MV_EMAC_ENQ_DESC_W0_REORDER_MODE_OFFS);
+
+	mv_pp3_emac_reg_write(port, MV_EMAC_ENQ_DESC_W0_REG, data);
+}
+
+/*
+set CFH deq mode
+*/
+void mv_pp3_emac_rx_cfh_deq_mode(int port, int mode)
+{
+	u32 data;
+
+	data = mv_pp3_emac_reg_read(port, MV_EMAC_ENQ_DESC_W0_REG);
+	data &= ~MV_EMAC_ENQ_DESC_W0_DEQ_MODE_MASK;
+	data |= (mode << MV_EMAC_ENQ_DESC_W0_DEQ_MODE_OFFS);
+
+	mv_pp3_emac_reg_write(port, MV_EMAC_ENQ_DESC_W0_REG, data);
+}
 
 /*--------------------------------------------------------------*/
 /*------------------------- PFC --------------------------------*/
diff --git a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.h b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.h
index da3525d..bd5d5ee 100644
--- a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.h
+++ b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.h
@@ -107,6 +107,12 @@ void mv_pp3_emac_debug(int port, int en);
 
 void mv_pp3_emac_rx_enable(int port, int en);
 
+void mv_pp3_emac_rx_cfh_lock_id(int port, int lock_id);
+
+void mv_pp3_emac_rx_cfh_deq_mode(int port, int mode);
+
+void mv_pp3_emac_rx_cfh_reorder_mode(int port, int mode);
+
 int mv_pp3_emac_rx_desc_rsvd(int port, int bytes);
 
 void mv_pp3_emac_rx_mh(int port, short mh);
diff --git a/drivers/net/ethernet/marvell/pp3/emac/mv_emac_regs.h b/drivers/net/ethernet/marvell/pp3/emac/mv_emac_regs.h
index f1d8974..c72c323 100644
--- a/drivers/net/ethernet/marvell/pp3/emac/mv_emac_regs.h
+++ b/drivers/net/ethernet/marvell/pp3/emac/mv_emac_regs.h
@@ -110,11 +110,24 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define MV_EMAC_ENQ_DESC_W0_EMAC_ENQ_DESC_W0_31_16_MASK    \
 		(0x0000ffff << MV_EMAC_ENQ_DESC_W0_EMAC_ENQ_DESC_W0_31_16_OFFS)
 
+#define MV_EMAC_ENQ_DESC_W0_LOCKID_OFFS				16
+#define MV_EMAC_ENQ_DESC_W0_LOCKID_MASK			\
+		(0x00000fff << MV_EMAC_ENQ_DESC_W0_LOCKID_OFFS)
+
+#define MV_EMAC_ENQ_DESC_W0_REORDER_MODE_OFFS			28
+#define MV_EMAC_ENQ_DESC_W0_REORDER_MODE_MASK			\
+		(0x00000003 << MV_EMAC_ENQ_DESC_W0_REORDER_MODE_OFFS)
+
+#define MV_EMAC_ENQ_DESC_W0_DEQ_MODE_OFFS			30
+#define MV_EMAC_ENQ_DESC_W0_DEQ_MODE_MASK			\
+		(0x00000003 << MV_EMAC_ENQ_DESC_W0_DEQ_MODE_OFFS)
+
 
 /* Emac Enq Descriptor Word 1 (EMAC_ENQ_DESC_W1) */
 #define MV_EMAC_ENQ_DESC_W1_REG								0x001c
 #define MV_EMAC_ENQ_DESC_W1_EMAC_ENQ_DESC_W1_OFFS		0
 
+
 /* Emac Axi Configuration (EMAC_AXI_CFG) */
 #define MV_EMAC_AXI_CFG_REG								0x0030
 #define MV_EMAC_AXI_CFG_AXI4_ENQ_QUEUE_NUM_OFFS		0
-- 
1.7.5.4

