From dd10d74999b5f43b3cc2bb934681f890a1c84608 Mon Sep 17 00:00:00 2001
From: Piotr Ziecik <kosmo@semihalf.com>
Date: Tue, 24 Jun 2014 16:53:39 +0200
Subject: [PATCH 1767/1825] alp: ipc: Support Hybrid IPC mode used by
 Dragonite.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c4438e9a988718297efc6bb46f3e59ca39a77f7b

	In the Hybrid mode a new message from Dragonite is signaled
	by interrupt, while opposite direction is handled using polling.

Change-Id: I2e9f4c257fca7bcddf79dc677abecaedf11fae96
Signed-off-by: Piotr Ziecik <kosmo@semihalf.com>
Signed-off-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8802
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../arm/plat-armada/mv_drivers_lsp/mv_ipc/Makefile |    3 +-
 .../mv_ipc/linux_freertos/mv_ipc_common.c          |    1 +
 .../mv_ipc/linux_freertos/mv_ipc_common.h          |    2 +-
 .../mv_ipc/linux_freertos/mv_ipc_dragonite.c       |  112 ++++++++++++++++++++
 .../mv_ipc/linux_freertos/mv_ipc_dragonite.h       |   37 +++++++
 .../mv_ipc/linux_freertos/mv_ipc_node.h            |    6 +-
 .../mv_ipc/linux_freertos/mv_ipc_poll.c            |    2 +-
 7 files changed, 158 insertions(+), 5 deletions(-)
 create mode 100644 arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_dragonite.c
 create mode 100644 arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_dragonite.h

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/Makefile b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/Makefile
index aa381d0..1748afa 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/Makefile
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/Makefile
@@ -11,5 +11,6 @@ obj-$(CONFIG_MV_IPC_LINUX_AMP_DRIVER) += linux_amp/
 
 #kernel<->freeRTOS AMP mode
 obj-$(CONFIG_MV_IPC_FREERTOS_DRIVER) += linux_freertos/mv_ipc_os.o linux_freertos/mv_ipc_doorbell.o \
-					linux_freertos/mv_ipc_poll.o linux_freertos/mv_ipc_common.o
+					linux_freertos/mv_ipc_poll.o linux_freertos/mv_ipc_common.o \
+					linux_freertos/mv_ipc_dragonite.o
 obj-$(CONFIG_MV_IPC_FREERTOS_DEMO) += linux_freertos/ipc_demo.o
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_common.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_common.c
index 4d6e7d3..296362f 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_common.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_common.c
@@ -154,6 +154,7 @@ MV_STATUS mvIpcCommonInit(void)
 		mvIpcOsInitSharedStack(link, mvIpcGetShmemSize(link));
 
 	for (link = 0; link < mvIpcGetNumOfLinks(); link++) {
+		mvIpcDragoniteInterruptInit(link);
 		mvIpcDoorbellInit(link);
 		mvIpcPollInit(link);
 	}
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_common.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_common.h
index ab2312d..8e6f368 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_common.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_common.h
@@ -53,7 +53,7 @@ typedef struct __ipc_chn_info_struct {
 enum {
 	MV_IPC_HW_LAYER_POLLING_ACTIVE  = 0,
 	MV_IPC_HW_LAYER_INTERRUPT_ISR,
-	MV_IPC_HW_LAYER_POLLING_PASSIVE,
+	MV_IPC_HW_LAYER_HYBRID,
 };
 
 MV_U32 mvIpcWhoAmI(void);
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_dragonite.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_dragonite.c
new file mode 100644
index 0000000..9984359
--- /dev/null
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_dragonite.c
@@ -0,0 +1,112 @@
+/*******************************************************************************
+   Copyright (C) Marvell International Ltd. and its affiliates
+
+   This software file (the "File") is owned and distributed by Marvell
+   International Ltd. and/or its affiliates ("Marvell") under the following
+   alternative licensing terms.  Once you have made an election to distribute the
+   File under one of the following license alternatives, please (i) delete this
+   introductory statement regarding license alternatives, (ii) delete the two
+   license alternatives that you have not elected to use and (iii) preserve the
+   Marvell copyright notice above.
+
+
+********************************************************************************
+   Marvell GPL License Option
+
+   If you received this File from Marvell, you may opt to use, redistribute and/or
+   modify this File in accordance with the terms and conditions of the General
+   Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+   available along with the File in the license.txt file or by writing to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+   on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+   THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+   DISCLAIMED.  The GPL License provides additional details about this warranty
+   disclaimer.
+*******************************************************************************/
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/interrupt.h>
+#include <linux/irq.h>
+
+#include "mvTypes.h"
+#include "ctrlEnv/mvCtrlEnvLib.h"
+#include "ctrlEnv/sys/mvCpuIf.h"
+#include "cpu/mvCpu.h"
+#include "mvCommon.h"
+#include "mvIpc.h"
+#include "mvOs.h"
+#include "mv_ipc_common.h"
+#include "mv_ipc_dragonite.h"
+
+#ifdef CONFIG_MV_INCLUDE_DRAGONITE
+static int initDone;
+static MV_U8 **enabledChannels;
+
+static irqreturn_t mvIpcDragoniteIRQ(int irq, void *dev)
+{
+	int read_msgs = IPC_RX_MAX_MSGS_PER_IRQ;
+	MV_U32 linkId, chnId;
+
+	/* Scan all rx flags */
+	for (linkId = 0; linkId < mvIpcGetNumOfLinks(); linkId++) {
+		for (chnId = 0; chnId < mvIpcChnNum(linkId); chnId++) {
+
+			/* Check if RX flag raised */
+			if ((enabledChannels[linkId][chnId] == 1) &&
+			    (mvIpcRxMsgFlagCheck(linkId, chnId) == MV_TRUE)) {
+
+				/* If ready to RX, start get the messages */
+				while (read_msgs) {
+					if (mvIpcRxMsg(linkId, chnId) != MV_OK)
+						break;
+					read_msgs--;
+				}
+			}
+		}
+	}
+
+	return IRQ_HANDLED;
+}
+
+MV_VOID registerChnInISRDragonite(MV_U32 linkId, MV_U32 chnId, MV_BOOL enable)
+{
+	if (MV_TRUE == enable)
+		enabledChannels[linkId][chnId] = 1;
+	else
+		enabledChannels[linkId][chnId] = 0;
+}
+
+#endif /* CONFIG_MV_INCLUDE_DRAGONITE */
+
+MV_VOID mvIpcDragoniteInterruptInit(MV_U32 linkId)
+{
+#ifdef CONFIG_MV_INCLUDE_DRAGONITE
+	int err;
+
+	if (initDone)
+		return;
+
+	if (NULL == enabledChannels)
+		enabledChannels = mvOsMalloc(sizeof(MV_U8 *) * mvIpcGetNumOfLinks());
+
+	enabledChannels[linkId] = mvOsMalloc(sizeof(MV_U8) * mvIpcChnNumMax());
+	mvOsMemset(enabledChannels[linkId], '\0', mvIpcChnNumMax());
+
+	err = irq_set_irq_type(IRQ_GLOBAL_DRAGONITE, IRQ_TYPE_EDGE_RISING);
+	if (err) {
+		pr_err("IPC: Dragonite IRQ configuration failed!\n");
+		return;
+	}
+
+	err = request_irq(IRQ_GLOBAL_DRAGONITE, mvIpcDragoniteIRQ, 0, "Dragonite IPC", NULL);
+	if (err) {
+		pr_err("IPC: Dragonite IRQ request failed!\n");
+		return;
+	}
+
+	initDone = 1;
+#endif /* CONFIG_MV_INCLUDE_DRAGONITE */
+}
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_dragonite.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_dragonite.h
new file mode 100644
index 0000000..239bbd6
--- /dev/null
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_dragonite.h
@@ -0,0 +1,37 @@
+/*******************************************************************************
+   Copyright (C) Marvell International Ltd. and its affiliates
+
+   This software file (the "File") is owned and distributed by Marvell
+   International Ltd. and/or its affiliates ("Marvell") under the following
+   alternative licensing terms.  Once you have made an election to distribute the
+   File under one of the following license alternatives, please (i) delete this
+   introductory statement regarding license alternatives, (ii) delete the two
+   license alternatives that you have not elected to use and (iii) preserve the
+   Marvell copyright notice above.
+
+
+********************************************************************************
+   Marvell GPL License Option
+
+   If you received this File from Marvell, you may opt to use, redistribute and/or
+   modify this File in accordance with the terms and conditions of the General
+   Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+   available along with the File in the license.txt file or by writing to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+   on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+   THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+   DISCLAIMED.  The GPL License provides additional details about this warranty
+   disclaimer.
+*******************************************************************************/
+
+#ifndef __MV_IPC_DRAGONITE_H
+#define __MV_IPC_DRAGONITE_H
+
+#define IPC_RX_MAX_MSGS_PER_IRQ		64
+
+MV_VOID mvIpcDragoniteInterruptInit(MV_U32 linkId);
+MV_VOID registerChnInISRDragonite(MV_U32 linkId, MV_U32 chnId, MV_BOOL enable);
+
+#endif /* __MV_IPC_DRAGONITE_H */
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_node.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_node.h
index f1e3d69..5bd98a1 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_node.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_node.h
@@ -30,6 +30,7 @@
 #define __mv_ipc_node_h
 
 #include "mvTypes.h"
+#include "mv_ipc_dragonite.h"
 #include "mv_ipc_doorbell.h"
 #include "mv_ipc_poll.h"
 
@@ -47,15 +48,16 @@
 	{ {16}, {32}, {16}, {32} }, \
 };
 
-#define MV_IPC_HW_LAYER_ACTUAL		MV_IPC_HW_LAYER_POLLING_ACTIVE
+#define MV_IPC_HW_LAYER_ACTUAL		MV_IPC_HW_LAYER_HYBRID
 /*#define MV_IPC_HW_LAYER_ACTUAL	MV_IPC_HW_LAYER_INTERRUPT_ISR*/
 
-#define MV_IPC_HW_LAYERS_NUM		2
+#define MV_IPC_HW_LAYERS_NUM		3
 /*HW layers function, send trigger is TX done signal,
 register channel is interrupt and channel enable function*/
 #define MV_IPC_HW_LAYER_API_TABLE  {\
 {mvIpcSendTriggerPoll, registerChnInISRPoll},	 /*MV_IPC_HW_LAYER_POLLING_ACTIVE*/\
 {mvIpcSendDoorbell, registerChnInISRDoorbell},   /*MV_IPC_HW_LAYER_INTERRUPT_ISR*/\
+{mvIpcSendTriggerPoll, registerChnInISRDragonite} /*MV_IPC_HW_LAYER_HYBRID*/\
 };
 
 /* numOfChn, isMaster, remoteNodeId, shmemSize */
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_poll.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_poll.c
index c931048..3ce87be 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_poll.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc/linux_freertos/mv_ipc_poll.c
@@ -86,7 +86,7 @@ MV_VOID mvIpcPollInit(MV_U32 link)
 	mvOsMemset(enabledChannels[link], '\0', mvIpcChnNumMax());
 
 	/*If passive polling mode, do not start timer event*/
-	if (mvIpcGetHwLayerId(link) == MV_IPC_HW_LAYER_POLLING_PASSIVE)
+	if (mvIpcGetHwLayerId(link) != MV_IPC_HW_LAYER_POLLING_ACTIVE)
 		return;
 
 	/*If timer event started before, do not start timer event*/
-- 
1.7.5.4

