From 8d134d2f18f0355791c49acb1b08adadba2e3d43 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Tue, 19 Mar 2013 12:50:44 +0200
Subject: [PATCH 0519/1825] Added mvCtrlSMISet - method to alter SMI
 controller (CPU / Switch)

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit d8b5ea62080ee1eb021d26358d364b0e4344bdcb

- set CPU SMI control before mvBoardEgigaPhyInit
- set Switch SMI control after mvBoardEgigaPhyInit

Change-Id: Ia4a0fcbf97a0e17f0b5979096110e2478305d788
Reviewed-on: http://vgitil04.il.marvell.com:8080/1332
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    4 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   46 +++++++++++++++++++-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    9 +++-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |    8 +++-
 4 files changed, 60 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index f58fdc9..95b2e71 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -455,8 +455,8 @@ MV_VOID mvBoardMppGroupWrite(MV_U32 groupNum, MV_U32 groupType);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac0ConfigGet(MV_VOID);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac1ConfigGet(MV_VOID);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardLaneSGMIIGet(MV_VOID);
-MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet();
-MV_BOARD_BOOT_SRC mvBoardBootDeviceGet();
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_VOID);
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGet(MV_VOID);
 MV_U32 mvBoardBootAttrGet(MV_U32 sarBootDeviceValue, MV_U8 attrNum);
 MV_U8 mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum);
 MV_STATUS mvBoardTwsiSet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum, MV_U8 regVal);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 44d25d9..9e840c4 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -274,6 +274,50 @@ MV_U32 mvCtrlSatRRead(MV_SATR_TYPE_ID satrField)
 }
 
 /*******************************************************************************
+* mvCtrlSMISet - alter Group 4 MPP type, between CPU SMI control and SWITCH SMI control
+*
+* DESCRIPTION: Read board configuration which is relevant to MPP group 4 interfaces,
+* 		to derive the correct group type, and according to input SMI conrtol,
+* 		write the correct MPP value.
+*
+* INPUT: smiCtrl - enum to select between SWITCH/CPU SMI controll
+*
+* OUTPUT: None
+*
+* RETURN: None
+*
+*******************************************************************************/
+MV_VOID mvCtrlSMISet(MV_SMI_CTRL smiCtrl)
+{
+	MV_BOOL isSwSMICtrl   = (smiCtrl == SWITCH_SMI_CTRL ? MV_TRUE : MV_FALSE);
+	MV_BOOL isBootDevSPI1 = (MSAR_0_BOOT_SPI1_FLASH == mvBoardBootDeviceGet());
+	MV_BOOL isRefClkOut   = !mvCtrlIsLantiqTDM(); /* if not using Lantiq TDM, define REF_CLK_OUT */
+	MV_U8 groupTypeSelect = 0;
+
+	if (! ((smiCtrl == SWITCH_SMI_CTRL) || (smiCtrl == CPU_SMI_CTRL)) ) {
+		DB(mvOsPrintf("mvCtrlSMISet: SMI ctrl initialize fail \n"));;
+		return;
+	}
+
+	/* MPP settings :
+	 * Test board configuration relevant to MPP group 4, and derive the correct group type */
+
+	if (isRefClkOut)
+		groupTypeSelect += REF_CLK_OUT_GROUP_4_BASE;
+
+	if (isSwSMICtrl)
+		groupTypeSelect += SW_SMI_GROUP_4_BASE;
+
+	if (isBootDevSPI1)
+		groupTypeSelect += SPI1_GROUP_4_BASE;
+
+	mvBoardMppGroupWrite(4, groupTypeSelect);
+
+	/* Mux settings :
+	 * Add mux configuration setup here ! */
+}
+
+/*******************************************************************************
 * mvCtrlCpuDdrL2FreqGet - Get the selected S@R Frequency mode
 *
 * DESCRIPTION:
@@ -296,7 +340,7 @@ MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode)
 		return MV_OK;
 	}
 
-	DB(mvOsPrintf("Board: Read from S@R fail\n"));
+	DB(mvOsPrintf("%s: Error Read from S@R fail\n", __func__));
 	return MV_ERROR;
 }
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index c7c3062..20a2f2f 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -119,8 +119,11 @@ typedef enum _mvConfigTypeID {
 	MV_CONFIG_TYPE_MAX_OPTION
 } MV_CONFIG_TYPE_ID;
 
-/* 0 for Auto scan mode, 1 for manual. */
-#define MV_INTERNAL_SWITCH_SMI_SCAN_MODE        0
+/* This enumerator describes the possible SMI control options */
+typedef enum _mvSMIctrl {
+	CPU_SMI_CTRL,
+	SWITCH_SMI_CTRL,
+} MV_SMI_CTRL;
 
 /* typedefs */
 typedef MV_STATUS (*MV_WIN_GET_FUNC_PTR)(MV_U32, MV_U32, MV_UNIT_WIN_INFO*);
@@ -289,7 +292,7 @@ MV_U32    ctrlSizeRegRoundUp(MV_U32 size, MV_U32 alignment);
 MV_U32 mvCtrlSysRstLengthCounterGet(MV_VOID);
 MV_STATUS ctrlWinOverlapTest(MV_ADDR_WIN *pAddrWin1, MV_ADDR_WIN *pAddrWin2);
 MV_STATUS ctrlWinWithinWinTest(MV_ADDR_WIN *pAddrWin1, MV_ADDR_WIN *pAddrWin2);
-
+MV_VOID mvCtrlSMISet(MV_SMI_CTRL smiCtrl);
 MV_VOID   mvCtrlPwrClckSet(MV_UNIT_ID unitId, MV_U32 index, MV_BOOL enable);
 MV_BOOL   mvCtrlPwrClckGet(MV_UNIT_ID unitId, MV_U32 index);
 MV_VOID   mvCtrlPwrMemSet(MV_UNIT_ID unitId, MV_U32 index, MV_BOOL enable);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index b4dac4d..3749fee 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -335,6 +335,12 @@ typedef enum {
 	SPI1_SW_SMI_CTRL_REF_CLK_OUT,
 } MV_GROUP_4_TYPE;
 
+/*  this defines are used when changing a group type value,
+ *  to select the correct group type, according to active interfaces */
+#define REF_CLK_OUT_GROUP_4_BASE 	GE1_CPU_SMI_CTRL_REF_CLK_OUT
+#define SW_SMI_GROUP_4_BASE 		GE1_SW_SMI_CTRL_TDM_LQ_UNIT
+#define SPI1_GROUP_4_BASE 		SPI1_CPU_SMI_CTRL_TDM_LQ_UNIT
+
 #define MPP_GROUP_5_TYPE { \
 		0x22122220,     /* GE0      , PON_TX_FAULT */ \
 		0x22122222,     /* GE0      , PON_CLK_OUT */ \
@@ -613,4 +619,4 @@ typedef enum _mvTarget {
 }
 #endif  /* __cplusplus */
 
-#endif  /* __INCmvCtrlEnvSpech */
\ No newline at end of file
+#endif  /* __INCmvCtrlEnvSpech */
-- 
1.7.5.4

