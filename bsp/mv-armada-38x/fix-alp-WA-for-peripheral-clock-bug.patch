From 8c04e98bbc69afd204d100bad9ac9b432a17332a Mon Sep 17 00:00:00 2001
From: Joe Zhou <shjzhou@marvell.com>
Date: Tue, 4 Mar 2014 10:39:03 +0800
Subject: [PATCH 1419/1825] fix: alp: WA for peripheral clock bug
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit a9189310727fd41d4f1b2bc2e2e054ea96585ed7

	The bug is related to the Peripheral clock of the CPU.
	This clock generated from divide of the CPU clock.(Configurable divider)
	At A0 it close to 200MHz due to Timing issue. – (divide by 4 Default value).
	There is a functional bug in this mode at the GIC/CPU Interface. So
	we want to change it to divide by 2 (400MHz).

	Clear the below bits of register Peripheral Clock Control
		clk div [3:0] to 0x0
		clk smp[11:8] to 0x0

Signed-off-by: Joe Zhou <shjzhou@marvell.com>

Change-Id: I1a45c0d4dee31425c5651732ac18c03af9c03e27
Reviewed-on: http://vgitil04.il.marvell.com:8080/6102
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/irq.c |   20 ++++++++++++++++++++
 1 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-avantalp/irq.c b/arch/arm/mach-avantalp/irq.c
index 382c980..517cc97 100644
--- a/arch/arm/mach-avantalp/irq.c
+++ b/arch/arm/mach-avantalp/irq.c
@@ -19,6 +19,8 @@
 #include "mvOs.h"
 #include "gpp/mvGppRegs.h"
 #include "cpu/mvCpu.h"
+#include "mvDeviceId.h"
+#include "ctrlEnv/mvCtrlEnvLib.h"
 
 /*
  * CPU-shared registers
@@ -31,6 +33,9 @@
 #define SOC_ERROR_SUM_CAUSE0_BITS	0xffffffff
 #define SOC_ERROR_SUM_CAUSE1_BITS	0x7ffff
 
+#define SOC_PERI_CLK_CTRL				(INTER_REGS_VIRT_BASE + 0x2085C)
+#define SOC_PERIL_CLK_CTRL_CLK_DIV_MASK	(0xF)
+#define SOC_PERIL_CLK_CTRL_CLK_SMP_MASK	(0xF00)
 /*
  * CPU-private registers
  */
@@ -680,4 +685,19 @@ void __init alp_irq_init(void)
 
 	alp_cascade_irq_msi_global();
 	alp_cascade_irq_msi_private();
+
+	/*
+	 * Peripheral Clock WA
+	 * The bug is related to the Peripheral clock of the CPU.
+	 * This clock generated from divide of the CPU clock.(Configurable divider)
+	 * At A0 it close to 200MHz due to Timing issue. – (divide by 4 Default value).
+	 * There is a functional bug in this mode at the GIC <> CPU interface.
+	 * We want to change it to divide by 2 (400 MHz).
+	 */
+	if (mvCtrlRevGet() == MV_88F66XX_A0_ID) {
+		u32 value = readl(SOC_PERI_CLK_CTRL);
+		value &= (~SOC_PERIL_CLK_CTRL_CLK_DIV_MASK);
+		value &= (~SOC_PERIL_CLK_CTRL_CLK_SMP_MASK);
+		writel(value, SOC_PERI_CLK_CTRL);
+	}
 }
-- 
1.7.5.4

