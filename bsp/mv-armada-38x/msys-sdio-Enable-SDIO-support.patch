From 1afa7d13e3055ee68059d137e7db6d60952be27d Mon Sep 17 00:00:00 2001
From: Ofer Heifetz <oferh@marvell.com>
Date: Thu, 6 Feb 2014 12:24:39 +0200
Subject: [PATCH 1339/1825] msys: sdio: Enable SDIO support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 404ca55aabfc3230a6411f4e3bcfbd51cd98a82a

	Adding sdio support for msys
	Add sdio in msys_defconfig

Change-Id: If099055bb8f6a664aeca1b5aeed4069f6b318072
Signed-off-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5482
Reviewed-by: Igor Patrik <igorp@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/configs/msys_defconfig                    |    1 -
 arch/arm/mach-msys/Makefile                        |    2 +
 arch/arm/mach-msys/config/mvSysSdmmcConfig.h       |   36 +++++++++
 arch/arm/mach-msys/core.c                          |   75 ++++++++++++++++++++
 .../mach-msys/msys_family/boardEnv/mvBoardEnvLib.c |   23 ++++++
 .../mach-msys/msys_family/boardEnv/mvBoardEnvLib.h |    1 +
 6 files changed, 137 insertions(+), 1 deletions(-)
 create mode 100644 arch/arm/mach-msys/config/mvSysSdmmcConfig.h

diff --git a/arch/arm/configs/msys_defconfig b/arch/arm/configs/msys_defconfig
index 9dba538..c09b670 100644
--- a/arch/arm/configs/msys_defconfig
+++ b/arch/arm/configs/msys_defconfig
@@ -20,7 +20,6 @@ CONFIG_EFI_PARTITION=y
 CONFIG_ARCH_MSYS=y
 CONFIG_MV_HAL_RULES_PATH="arch/arm/mach-armadaxp/mv_hal_support/mvRules.mk"
 # CONFIG_MV_INCLUDE_NFC is not set
-# CONFIG_MV_INCLUDE_SDIO is not set
 CONFIG_MV_PMU_PROC=y
 CONFIG_MV_ETH_GROUP0_CPU=0x3
 # CONFIG_SWP_EMULATE is not set
diff --git a/arch/arm/mach-msys/Makefile b/arch/arm/mach-msys/Makefile
index a4c044f..a38abaf 100644
--- a/arch/arm/mach-msys/Makefile
+++ b/arch/arm/mach-msys/Makefile
@@ -37,6 +37,8 @@ obj-y   			:=  msys.o
 msys-objs  			:=$(LSP_OBJS) $(COMMON_OBJS) $(OSSERVICES_OBJS) $(HAL_OBJS) 	\
 					$(KW_FAM_OBJS)
 
+msys-$(CONFIG_MV_INCLUDE_SDIO)	+= $(HAL_SDMMC_DIR)/mvSdmmcAddrDec.o
+
 msys-$(CONFIG_MV_INCLUDE_PEX) 	+= $(HAL_PEX_DIR)/mvPex.o					\
 					$(HAL_IF_DIR)/mvSysPex.o $(HAL_PEX_DIR)/mvPexAddrDec.o
 
diff --git a/arch/arm/mach-msys/config/mvSysSdmmcConfig.h b/arch/arm/mach-msys/config/mvSysSdmmcConfig.h
new file mode 100644
index 0000000..7e39c3b
--- /dev/null
+++ b/arch/arm/mach-msys/config/mvSysSdmmcConfig.h
@@ -0,0 +1,36 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+
+*******************************************************************************/
+/*******************************************************************************
+* mvSysSdmmcConfig.h - Marvell SDMMC unit specific configurations
+*
+* DESCRIPTION:
+*       None.
+*
+* DEPENDENCIES:
+*       None.
+*
+*******************************************************************************/
+
+#include "mvSysHwConfig.h"
+
+/*
+** Base address for audio registers.
+*/
+#define MV_SDMMC_REGS_BASE		(MV_SDMMC_REGS_OFFSET)
diff --git a/arch/arm/mach-msys/core.c b/arch/arm/mach-msys/core.c
index c22d57f..d676b91 100644
--- a/arch/arm/mach-msys/core.c
+++ b/arch/arm/mach-msys/core.c
@@ -99,6 +99,11 @@ disclaimer.
 #include "mvSysEthPhyApi.h"
 #include "eth-phy/mvEthPhy.h"
 
+#if defined(CONFIG_MV_INCLUDE_SDIO)
+#include "sdmmc/mvSdmmc.h"
+#include <plat/mvsdio.h>
+#endif
+
 /* for debug putstr */
 static char arr[256];
 
@@ -663,6 +668,71 @@ static void cpu_fabric_common_init(void)
 }
 
 
+/********
+ * SDIO *
+ ********/
+#if defined(CONFIG_MV_INCLUDE_SDIO)
+static struct resource mvsdio_resources[] = {
+	[0] = {
+		.start	= INTER_REGS_PHYS_BASE + MV_SDMMC_REGS_OFFSET,
+		.end	= INTER_REGS_PHYS_BASE + MV_SDMMC_REGS_OFFSET + SZ_1K - 1,
+		.flags	= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start	= IRQ_AURORA_SDIO,
+		.end	= IRQ_AURORA_SDIO,
+		.flags	= IORESOURCE_IRQ,
+	},
+
+};
+
+static u64 mvsdio_dmamask = 0xffffffffUL;
+
+static struct mvsdio_platform_data mvsdio_data = {
+	.gpio_write_protect	= 0,
+	.gpio_card_detect	= 0,
+	.dram			= NULL,
+};
+
+static struct platform_device mv_sdio_plat = {
+	.name		= "mvsdio",
+	.id		= -1,
+	.dev		= {
+		.dma_mask = &mvsdio_dmamask,
+		.coherent_dma_mask = 0xffffffff,
+		.platform_data	= &mvsdio_data,
+	},
+	.num_resources	= ARRAY_SIZE(mvsdio_resources),
+	.resource	= mvsdio_resources,
+};
+
+void __init msys_sdio_init(void)
+{
+	if (mvUnitMapIsMine(SDIO) != MV_TRUE)
+		return;
+
+	if (MV_TRUE == mvCtrlPwrClckGet(SDIO_UNIT_ID, 0)) {
+		int irq_detect = mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_DETECT);
+		static MV_UNIT_WIN_INFO addrWinMap[MAX_TARGETS + 1];
+		int pin;
+
+		if (irq_detect != MV_ERROR) {
+			mvsdio_data.gpio_card_detect = mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_DETECT);
+			pin = mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_DETECT) + IRQ_AURORA_GPIO_START;
+		}
+
+		if (mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_WP) != MV_ERROR)
+			mvsdio_data.gpio_write_protect = mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_WP);
+
+		if (MV_OK == mvCtrlAddrWinMapBuild(addrWinMap, MAX_TARGETS + 1))
+			if (MV_OK == mvSdmmcWinInit(addrWinMap))
+				mvsdio_data.clock = mvBoardTclkGet();
+		platform_device_register(&mv_sdio_plat);
+	}
+}
+#endif /* #if defined(CONFIG_MV_INCLUDE_SDIO) */
+
+
 /*****************************************************************************
  * BC2 BOARD
  ****************************************************************************/
@@ -718,6 +788,11 @@ static void __init msys_bc2_rd_init(void)
 	/* ETH-PHY */
 	mvSysEthPhyInit();
 
+	/* SDIO */
+#if defined(CONFIG_MV_INCLUDE_SDIO)
+	msys_sdio_init();
+#endif
+
 	return;
 }
 
diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.c
index 272cec6..5352b71 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.c
@@ -646,6 +646,29 @@ MV_32 mvBoardResetGpioPinGet(MV_VOID)
 }
 
 /*******************************************************************************
+* mvBoardSDIOGpioPinGet - mvBoardSDIOGpioPinGet
+*
+* DESCRIPTION:
+*	used for hotswap detection
+* INPUT:
+*	type - Type of SDIO GPP to get.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*       GPIO pin number. The function return -1 for bad parameters.
+*
+*******************************************************************************/
+MV_32 mvBoardSDIOGpioPinGet(MV_BOARD_GPP_CLASS type)
+{
+	if ((type != BOARD_GPP_SDIO_POWER) && (type != BOARD_GPP_SDIO_DETECT) && (type != BOARD_GPP_SDIO_WP))
+		return MV_FAIL;
+
+	return mvBoarGpioPinNumGet(type, 0);
+}
+
+/*******************************************************************************
 * mvBoardGpioIntMaskGet - Get GPIO mask for interrupt pins
 *
 * DESCRIPTION:
diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h
index 0fa4e51..3063cf2 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h
@@ -273,6 +273,7 @@ MV_U32 mvBoardSysClkGet(MV_VOID);
 MV_32 mvBoarGpioPinNumGet(MV_BOARD_GPP_CLASS class, MV_U32 index);
 MV_VOID mvBoardReset(MV_VOID);
 MV_32 mvBoardResetGpioPinGet(MV_VOID);
+MV_32 mvBoardSDIOGpioPinGet(MV_BOARD_GPP_CLASS type);
 MV_U32 mvBoardGpioIntMaskGet(MV_U32 gppGrp);
 MV_32 mvBoardMppGet(MV_U32 mppGroupNum);
 MV_U32 mvBoardGppConfigGet(void);
-- 
1.7.5.4

