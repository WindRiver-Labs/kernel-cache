From 2a313409c29594e05d6df8fe25db751e56f4d4d4 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Wed, 17 Apr 2013 15:50:22 +0300
Subject: [PATCH 0591/1825] ALP: Fix PCIe machine init code

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 98ac9b588d68eaa923dab7b941f4894ade9573ff

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I3d5671b052fddb6983d6db8fc64ae4cd2ac0f544
Reviewed-on: http://vgitil04.il.marvell.com:8080/1596
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/configs/avanta_lp_defconfig          |    1 -
 arch/arm/configs/avanta_lp_smp_defconfig      |    1 -
 arch/arm/mach-avantalp/config/mvRules.mk      |    2 +-
 arch/arm/mach-avantalp/config/mvSysHwConfig.h |   28 -----
 arch/arm/mach-avantalp/pex.c                  |  142 +++++++------------------
 arch/arm/plat-armada/Kconfig                  |   12 +-
 6 files changed, 45 insertions(+), 141 deletions(-)

diff --git a/arch/arm/configs/avanta_lp_defconfig b/arch/arm/configs/avanta_lp_defconfig
index 5dd98e3..177fc25 100644
--- a/arch/arm/configs/avanta_lp_defconfig
+++ b/arch/arm/configs/avanta_lp_defconfig
@@ -16,7 +16,6 @@ CONFIG_ARCH_AVANTA_LP=y
 # CONFIG_MV_INCLUDE_TDM is not set
 CONFIG_MV_ETH_PORTS_NUM=2
 # CONFIG_MV_ETH_TOOL is not set
-# CONFIG_MV_INCLUDE_PEX is not set
 # CONFIG_MV_INCLUDE_USB is not set
 # CONFIG_MV_INCLUDE_LEGACY_NAND is not set
 CONFIG_MTD_NAND_NFC_INIT_RESET=y
diff --git a/arch/arm/configs/avanta_lp_smp_defconfig b/arch/arm/configs/avanta_lp_smp_defconfig
index 02d2177..2069551 100644
--- a/arch/arm/configs/avanta_lp_smp_defconfig
+++ b/arch/arm/configs/avanta_lp_smp_defconfig
@@ -16,7 +16,6 @@ CONFIG_ARCH_AVANTA_LP=y
 # CONFIG_MV_INCLUDE_TDM is not set
 CONFIG_MV_ETH_PORTS_NUM=2
 # CONFIG_MV_ETH_TOOL is not set
-# CONFIG_MV_INCLUDE_PEX is not set
 # CONFIG_MV_INCLUDE_USB is not set
 # CONFIG_MV_INCLUDE_LEGACY_NAND is not set
 CONFIG_MTD_NAND_NFC_INIT_RESET=y
diff --git a/arch/arm/mach-avantalp/config/mvRules.mk b/arch/arm/mach-avantalp/config/mvRules.mk
index 30de4c5..b04e1e3 100644
--- a/arch/arm/mach-avantalp/config/mvRules.mk
+++ b/arch/arm/mach-avantalp/config/mvRules.mk
@@ -91,10 +91,10 @@ HAL_CPU_DIR       = $(HAL_DIR)/cpu
 HAL_SDMMC_DIR	  = $(HAL_DIR)/sdmmc
 ifeq ($(CONFIG_MV_INCLUDE_PCI),y)
 HAL_PCI_DIR	  = $(HAL_DIR)/pci
+endif
 ifeq ($(CONFIG_MV_INCLUDE_PEX),y)
 HAL_PEX_DIR       = $(HAL_DIR)/pex
 endif
-endif
 ifeq ($(CONFIG_MV_INCLUDE_TDM),y)
 HAL_TDM_DIR       = $(HAL_DIR)/voiceband/tdm
 endif
diff --git a/arch/arm/mach-avantalp/config/mvSysHwConfig.h b/arch/arm/mach-avantalp/config/mvSysHwConfig.h
index 6eaf530..4c9fc85 100755
--- a/arch/arm/mach-avantalp/config/mvSysHwConfig.h
+++ b/arch/arm/mach-avantalp/config/mvSysHwConfig.h
@@ -76,35 +76,8 @@ disclaimer.
 
 #ifdef CONFIG_MV_INCLUDE_PEX
 #define MV_INCLUDE_PEX
-
-#ifdef CONFIG_MV_PEX_0_4X1
-#define MV_PEX_0_4X1		1
-#define MV_PEX_0_1X4		0
-#endif
-#ifdef CONFIG_MV_PEX_0_1X4
-#define MV_PEX_0_4X1		0
-#define MV_PEX_0_1X4		1
-#endif
-
-#ifdef CONFIG_MV_PEX_1_4X1
-#define MV_PEX_1_4X1		1
-#define MV_PEX_1_1X4		0
-#endif
-#ifdef CONFIG_MV_PEX_1_1X4
-#define MV_PEX_1_4X1		0
-#define MV_PEX_1_1X4		1
 #endif
 
-#ifdef CONFIG_MV_PEX_2_4X1
-#define MV_PEX_2_4X1		1
-#endif
-
-#ifdef CONFIG_MV_PEX_3_4X1
-#define MV_PEX_3_4X1		1
-#endif
-
-#endif /* CONFIG_MV_INCLUDE_PEX */
-
 #ifdef CONFIG_MV_INCLUDE_PCI
 #define MV_INCLUDE_PCI
 
@@ -113,7 +86,6 @@ disclaimer.
 
 #define PEX_HOST_BUS_NUM(pciIf)		(pciIf)
 #define PEX_HOST_DEV_NUM(pciIf)		0
-
 #endif
 
 #ifdef CONFIG_MV_INCLUDE_TWSI
diff --git a/arch/arm/mach-avantalp/pex.c b/arch/arm/mach-avantalp/pex.c
index 70ebe9e..733b44d 100644
--- a/arch/arm/mach-avantalp/pex.c
+++ b/arch/arm/mach-avantalp/pex.c
@@ -42,21 +42,13 @@
 #ifdef MV_DEBUG
 #	define DB(x) x
 #else
-#	define DB(x) 
+#	define DB(x)
 #endif
 
 #define MV_PEX_MASK_ABCD              (BIT24 | BIT25 | BIT26 | BIT27)
 
 static int __init mv_map_irq_0(struct pci_dev *dev, u8 slot, u8 pin);
 static int __init mv_map_irq_1(struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_2(struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_3(struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_4(struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_5(struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_6(struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_7(struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_8(struct pci_dev *dev, u8 slot, u8 pin);
-static int __init mv_map_irq_9(struct pci_dev *dev, u8 slot, u8 pin);
 
 extern u32 mv_pci_mem_size_get(int ifNum);
 extern u32 mv_pci_io_base_get(int ifNum);
@@ -75,14 +67,6 @@ static void* mv_get_irqmap_func[] __initdata =
 {
 	mv_map_irq_0,
 	mv_map_irq_1,
-	mv_map_irq_2,
-	mv_map_irq_3,
-	mv_map_irq_4,
-	mv_map_irq_5,
-	mv_map_irq_6,
-	mv_map_irq_7,
-	mv_map_irq_8,
-	mv_map_irq_9
 };
 
 void __init mv_pex_preinit(void)
@@ -93,7 +77,7 @@ void __init mv_pex_preinit(void)
 	MV_BOARD_PEX_INFO* boardPexInfo = mvBoardPexInfoGet();
 	MV_U32 pexHWInf = 0;
 
-	for (pciIf = 0; pciIf < boardPexInfo->boardPexIfNum; pciIf++) 
+	for (pciIf = 0; pciIf < boardPexInfo->boardPexIfNum; pciIf++)
 	{
 		/* Translate logical interface number to physical */
 		pexHWInf = boardPexInfo->pexMapping[pciIf];
@@ -126,15 +110,15 @@ void __init mv_pex_preinit(void)
 		printk("Enabled - Link UP\n");
 		/* Assign bus number 0 to first active/available bus */
 		if (pex0flg == 0) {
-	       		mvPexLocalBusNumSet(pexHWInf, 0x0);
-	       		pex0flg = 1;
+			mvPexLocalBusNumSet(pexHWInf, 0x0);
+			pex0flg = 1;
 		}
 
 		MV_REG_BIT_SET(PEX_MASK_REG(pexHWInf), MV_PEX_MASK_ABCD);
 		if (mv_is_pci_io_mapped(pexHWInf))
 		{
 			pciIoRemap.baseLow = mv_pci_io_base_get(pexHWInf) - IO_SPACE_REMAP;
-			pciIoRemap.baseHigh = 0; 		
+			pciIoRemap.baseHigh = 0;
 			pciIoRemap.size = mv_pci_io_size_get(pexHWInf);
 			mvCpuIfPexRemap(mv_pci_io_target_get(pexHWInf), &pciIoRemap);
 		}
@@ -193,12 +177,12 @@ void mv_pex_reinit(void)
    TBD: adjust it to realy use 1/2/4 byte(partial) read/write, after the pex
 	read config WA will be removed.
 */
-static int mv_pci_read_config(struct pci_bus *bus, 
+static int mv_pci_read_config(struct pci_bus *bus,
 				  unsigned int devfn, int where,
 				  int size, u32 *val)
 {
-	u32 bus_num,func,regOff,dev_no,temp, localBus;		
-	struct pci_sys_data *sysdata = (struct pci_sys_data *)bus->sysdata;	
+	u32 bus_num,func,regOff,dev_no,temp, localBus;
+	struct pci_sys_data *sysdata = (struct pci_sys_data *)bus->sysdata;
 	u32 pciIf = sysdata->mv_controller_num;
 
 	*val = 0xffffffff;
@@ -216,11 +200,11 @@ static int mv_pci_read_config(struct pci_bus *bus,
 		return 0xffffffff;
 	}
 
-	func = PCI_FUNC(devfn); 
+	func = PCI_FUNC(devfn);
 	regOff = (MV_U32)where & (PXCAR_REG_NUM_MASK | PXCAR_REAL_EXT_REG_NUM_MASK); /* total of 12 bits: 8 legacy + 4 extended */
 
 	DB(printk("PCI %d read: bus = %x dev = %x func = %x regOff = %x ",pciIf, bus_num,dev_no,func,regOff));
-	
+
 	temp = (u32) mvPexConfigRead(pciIf, bus_num, dev_no, func, regOff);
 	switch (size) {
 		case 1:
@@ -234,11 +218,11 @@ static int mv_pci_read_config(struct pci_bus *bus,
 		default:
 			break;
 	}
-		
+
 	*val = temp;
 
 	DB(printk(" got %x \n",temp));
-	
+
     return 0;
 }
 
@@ -246,8 +230,8 @@ static int mv_pci_write_config(struct pci_bus *bus, unsigned int devfn, int wher
                            int size, u32 val)
 {
 	u32 bus_num,func,regOff,dev_no,temp, mask , shift;
-	struct pci_sys_data *sysdata = (struct pci_sys_data *)bus->sysdata;	
-	u32 pciIf = sysdata->mv_controller_num;		
+	struct pci_sys_data *sysdata = (struct pci_sys_data *)bus->sysdata;
+	u32 pciIf = sysdata->mv_controller_num;
 
 	if (MV_FALSE == mvCtrlPwrClckGet(PEX_UNIT_ID, pciIf))
 		return 0xFFFFFFFF;
@@ -288,17 +272,15 @@ static int mv_pci_write_config(struct pci_bus *bus, unsigned int devfn, int wher
 	return 0;
 }
 
-
 static struct pci_ops mv_pci_ops = {
         .read   = mv_pci_read_config,
         .write  = mv_pci_write_config,
 };
 
-
 int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 {
 	struct resource *res;
-	u32 membase, iobase, index = 0;	
+	u32 membase, iobase, index = 0;
 	MV_BOARD_PEX_INFO* boardPexInfo = mvBoardPexInfoGet();
 	MV_U32 pexHWInf = 0;
 
@@ -312,31 +294,29 @@ int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 	if (MV_FALSE == mvCtrlPwrClckGet(PEX_UNIT_ID, pexHWInf))
 		return 0;
 
-	/* Allocate resources memory */	
+	/* Allocate resources memory */
 	res = kmalloc(sizeof(struct resource) * 2, GFP_KERNEL);
 	if (!res)
 	{
 		panic("PCI: unable to alloc resources");
 		return 0;
 	}
-                                                                                                                             
 	memset(res, 0, sizeof(struct resource) * 2);
 
 	/* Save the H/W if number for this PEX bus */
 	sys->mv_controller_num = pexHWInf;
 	sys->map_irq = mv_get_irqmap_func[sys->mv_controller_num];
-	
+
 	membase = mv_pci_mem_base_get(sys->mv_controller_num);
 	if (mv_is_pci_io_mapped(sys->mv_controller_num))
 	{
-	
 		iobase = mv_pci_io_base_get(sys->mv_controller_num);
 		res[index].start = iobase - IO_SPACE_REMAP;
 		res[index].end   = iobase - IO_SPACE_REMAP + mv_pci_io_size_get(sys->mv_controller_num)-1;
 		res[index].name  = "PCIx IO Primary";
-		res[index].flags = IORESOURCE_IO;		
+		res[index].flags = IORESOURCE_IO;
 		if (request_resource(&ioport_resource, &res[index]))
-		{	
+		{
 			printk ("IO Request resource failed - Pci If %x\n",nr);
 		}
 		else
@@ -348,19 +328,19 @@ int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 	res[index].flags = IORESOURCE_MEM;
 
 	if (request_resource(&iomem_resource, &res[index]))
-	{	
-		printk ("Memory Request resource failed - Pci If %x\n",nr);
-	}
- 
-	sys->resource[0] = &res[0];
-	if (index > 0) 
 	{
-		sys->resource[1] = &res[1];
-		sys->resource[2] = NULL;
+		printk ("Memory Request resource failed - Pci If %x\n",nr);
 	}
-	else
-		sys->resource[1] = NULL;
-	sys->io_offset   = 0x0;
+
+	if (index > 0) {
+		sys->io_offset = 0x0;
+		pci_add_resource_offset(&sys->resources, &res[0],
+		    sys->io_offset);
+		pci_add_resource_offset(&sys->resources, &res[1],
+		    sys->mem_offset);
+	} else
+		pci_add_resource_offset(&sys->resources, &res[0],
+		    sys->mem_offset);
 
 	return 1;
 }
@@ -368,7 +348,7 @@ int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 
 struct pci_bus *mv_pex_scan_bus(int nr, struct pci_sys_data *sys)
 {
-	struct pci_ops *ops = &mv_pci_ops;	
+	struct pci_ops *ops = &mv_pci_ops;
 	struct pci_bus *bus;
 	MV_BOARD_PEX_INFO* boardPexInfo = mvBoardPexInfoGet();
 	MV_U32 pexNextHWInf, ifnum;
@@ -392,62 +372,21 @@ struct pci_bus *mv_pex_scan_bus(int nr, struct pci_sys_data *sys)
 	return bus;
 }
 
-
 static int __init mv_map_irq_0(struct pci_dev *dev, u8 slot, u8 pin)
-{	
-	return IRQ_AURORA_PCIE0;
-}
-
-static int __init mv_map_irq_1(struct pci_dev *dev, u8 slot, u8 pin)
 {
-	return IRQ_AURORA_PCIE1;
+	return IRQ_GLOBAL_PCIE0;
 }
 
-static int __init mv_map_irq_2(struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE2;
-}
-
-static int __init mv_map_irq_3(struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE3;
-}
-
-static int __init mv_map_irq_4(struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE4;
-}
-
-static int __init mv_map_irq_5(struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE5;
-}
-
-static int __init mv_map_irq_6(struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE6;
-}
-
-static int __init mv_map_irq_7(struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE7;
-}
-
-static int __init mv_map_irq_8(struct pci_dev *dev, u8 slot, u8 pin)
-{
-	return IRQ_AURORA_PCIE8;
-}
-
-static int __init mv_map_irq_9(struct pci_dev *dev, u8 slot, u8 pin)
+static int __init mv_map_irq_1(struct pci_dev *dev, u8 slot, u8 pin)
 {
-	return IRQ_AURORA_PCIE9;
+	return IRQ_GLOBAL_PCIE1;
 }
 
 static struct hw_pci mv_pci __initdata = {
-	.swizzle        	= pci_std_swizzle,
-        .setup                  = mv_pex_setup,
-        .scan                   = mv_pex_scan_bus,
-        .preinit                = mv_pex_preinit,
+	.swizzle        = pci_std_swizzle,
+	.setup          = mv_pex_setup,
+	.scan           = mv_pex_scan_bus,
+	.preinit        = mv_pex_preinit,
 };
 
 static int mv_pex_probe(struct platform_device *dev)
@@ -517,10 +456,6 @@ static int __init mv_pex_init_module(void)
 {
 	MV_BOARD_PEX_INFO* boardPexInfo = mvBoardPexInfoGet();
 
-	/* WA - Disable PEX on RD-SERVER board */
-	if (mvBoardIdGet() == RD_78460_SERVER_ID)
-		return 0;
-
 	mv_pci.nr_controllers = (mvBoardPexInfoGet())->boardPexIfNum;
 	mv_pci.swizzle        = pci_std_swizzle;
 	mv_pci.map_irq         = mv_map_irq_0;
@@ -531,7 +466,6 @@ static int __init mv_pex_init_module(void)
 	platform_device_register(&mv_pex);
 
 	pex_ifnum = boardPexInfo->boardPexIfNum;
-
 	return platform_driver_register(&mv_pex_driver);
 }
 
diff --git a/arch/arm/plat-armada/Kconfig b/arch/arm/plat-armada/Kconfig
index 86be077..5490db0 100644
--- a/arch/arm/plat-armada/Kconfig
+++ b/arch/arm/plat-armada/Kconfig
@@ -18,14 +18,14 @@ config MV_INCLUDE_PEX
 	bool "PCI Express Support"
 	depends on PCI && (MV88F6500 || MV88F6281 || MV78XX0 || ARMADA_XP || AVANTA_LP)
 	default y
-	select MV_PEX_2_1X4
-	select MV_PEX_3_1X4
+	select MV_PEX_2_1X4 if ARMADA_XP
+	select MV_PEX_3_1X4 if ARMADA_XP
 	help
 	  Please don't change this configs unless you know what you are doing.
 
 choice
 	prompt "PEX-0 Mode"
-	depends on MV_INCLUDE_PEX
+	depends on MV_INCLUDE_PEX && ARMADA_XP
 	default MV_PEX_0_4X1
 
 config MV_PEX_0_4X1
@@ -37,7 +37,7 @@ endchoice
 
 choice
 	prompt "PEX-1 Mode"
-	depends on MV_INCLUDE_PEX
+	depends on MV_INCLUDE_PEX && ARMADA_XP
 	default MV_PEX_1_4X1
 
 config MV_PEX_1_4X1
@@ -49,11 +49,11 @@ endchoice
 
 config MV_PEX_2_1X4
 	bool "PEX-2 in 1x4 Mode"
-	depends on MV_INCLUDE_PEX
+	depends on MV_INCLUDE_PEX && ARMADA_XP
 
 config MV_PEX_3_1X4
 	bool "PEX-3 in 1x4 Mode"
-	depends on MV_INCLUDE_PEX
+	depends on MV_INCLUDE_PEX && ARMADA_XP
 endif
 
 if ARMADA_370
-- 
1.7.5.4

