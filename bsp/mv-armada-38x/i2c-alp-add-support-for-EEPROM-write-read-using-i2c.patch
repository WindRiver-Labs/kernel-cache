From 1ff69e6113995d382efaabe9921e83bb9b26d86c Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Tue, 29 Oct 2013 13:07:04 +0200
Subject: [PATCH 1074/1825] i2c: alp: add support for EEPROM write/read using
 i2c

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 8d34d082fbb9756601d3f59024b1e2de13f545cb

	EEPROM can be accessed through i2c transaction, using only offsets greater than 256
	- Added support for EEPROM to mvBoardTwsiGet/Set
	- Fixed EEPROM TWSI address to 0x55 for both DB boards

Change-Id: I75fd802f732d2c174b26e6a8a3008c9dfadbc42c
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4185
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Kosta Zertsekel <konszert@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   15 +++++++++++++--
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |    4 ++--
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index ea9565f..90a06dc 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -2559,7 +2559,11 @@ MV_STATUS mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regN
 	twsiSlave.validOffset = MV_TRUE;
 	/* Use offset as command */
 	twsiSlave.offset = regNum;
-	twsiSlave.moreThen256 = MV_FALSE;
+
+	if (twsiClass == BOARD_DEV_TWSI_EEPROM)
+		twsiSlave.moreThen256 = MV_TRUE;
+	else
+		twsiSlave.moreThen256 = MV_FALSE;
 
 	if (MV_OK != mvTwsiRead(0, &twsiSlave, &data, 1)) {
 		mvOsPrintf("%s: Twsi Read fail\n", __func__);
@@ -2607,7 +2611,14 @@ MV_STATUS mvBoardTwsiSet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regN
 		      twsiSlave.slaveAddr.address, twsiSlave.slaveAddr.type, regVal));
 	/* Use offset as command */
 	twsiSlave.offset = regNum;
-	twsiSlave.moreThen256 = MV_FALSE;
+
+	/* need to use 2 address bytes when accessing EEPROM */
+	if (twsiClass == BOARD_DEV_TWSI_EEPROM)
+		twsiSlave.moreThen256 = MV_TRUE; /* use  2 address bytes */
+	else
+		twsiSlave.moreThen256 = MV_FALSE; /* use  1 address byte */
+
+
 	if (MV_OK != mvTwsiWrite(0, &twsiSlave, &regVal, 1)) {
 		DB(mvOsPrintf("%s: Write S@R fail\n", __func__));
 		return MV_ERROR;
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 7b1e70f..376bd30 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -75,7 +75,7 @@ MV_BOARD_TWSI_INFO db88f6660InfoBoardTwsiDev[] = {
 	/* {{MV_BOARD_DEV_CLASS devClass, MV_U8 devClassId,  MV_U8 twsiDevAddr, MV_U8 twsiDevAddrType}} */
 	{ BOARD_DEV_TWSI_SATR,		0,	0x4C,	   ADDR7_BIT	},
 	{ BOARD_DEV_TWSI_SATR,		1,	0x4D,	   ADDR7_BIT	},
-	{ BOARD_DEV_TWSI_EEPROM,	0,	0x54,	   ADDR7_BIT	},
+	{ BOARD_DEV_TWSI_EEPROM,	0,	0x55,	   ADDR7_BIT	},
 	{ BOARD_DEV_TWSI_IO_EXPANDER,	0,	0x21,	   ADDR7_BIT	},
 	{ BOARD_DEV_TWSI_IO_EXPANDER,	1,	0x22,	   ADDR7_BIT	},
 	{ BOARD_DEV_TWSI_IO_EXPANDER,	2,	0x24,	   ADDR7_BIT	},
@@ -189,7 +189,7 @@ MV_BOARD_TWSI_INFO db88f6650InfoBoardTwsiDev[] = {
 	/* {{MV_BOARD_DEV_CLASS devClass, MV_U8 devClassId,  MV_U8 twsiDevAddr, MV_U8 twsiDevAddrType}} */
 	{ BOARD_DEV_TWSI_SATR,		0,	0x4C,	ADDR7_BIT },
 	{ BOARD_DEV_TWSI_SATR,		1,	0x4E,	ADDR7_BIT },
-	{ BOARD_DEV_TWSI_EEPROM,	0,	0x54,	ADDR7_BIT },
+	{ BOARD_DEV_TWSI_EEPROM,	0,	0x55,	ADDR7_BIT },
 	{ BOARD_DEV_TWSI_IO_EXPANDER,	0,	0x21,	ADDR7_BIT },
 	{ BOARD_DEV_TWSI_IO_EXPANDER,	2,	0x24,	ADDR7_BIT },
 };
-- 
1.7.5.4

