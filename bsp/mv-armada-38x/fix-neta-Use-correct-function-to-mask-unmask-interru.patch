From c59f82728852724aafcd1ab7c35c088c570f319c Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Thu, 5 Dec 2013 10:38:59 -0500
Subject: [PATCH 1190/1825] fix: neta: Use correct function to mask/unmask
 interrupts

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c96dfa06df6fc4db83f3a632559d55e274606c64

	- function smp_call_function_many() can be called only
	when preemption disabled.
	- Correct function to use is on_each_cpu()

Change-Id: I9ca1e064192d0da0faf34a5de81175afea4c0047
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4600
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-by: Yelena Krivosheev <yelena@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c   |    3 +--
 .../mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c     |    8 +++-----
 2 files changed, 4 insertions(+), 7 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c
index b222d29..e76c5b6 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c
@@ -91,8 +91,7 @@ int mv_eth_start(struct net_device *dev)
 		}
 
 		/* unmask interrupts */
-		mv_eth_interrupts_unmask(priv);
-		smp_call_function_many(cpu_online_mask, (smp_call_func_t)mv_eth_interrupts_unmask, (void *)priv, 1);
+		on_each_cpu(mv_eth_interrupts_unmask, priv, 1);
 
 		printk(KERN_NOTICE "%s: started\n", dev->name);
 	}
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
index e7d8121..a62cec7 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
@@ -3538,8 +3538,7 @@ int mv_eth_port_resume(int port)
 		mv_eth_resume_internals(pp, pp->dev->mtu);
 		clear_bit(MV_ETH_F_STARTED_OLD_BIT, &(pp->flags));
 		if (pp->flags & MV_ETH_F_CONNECT_LINUX) {
-			mv_eth_interrupts_unmask(pp);
-			smp_call_function_many(cpu_online_mask, (smp_call_func_t)mv_eth_interrupts_unmask, (void *)pp, 1);
+			on_each_cpu(mv_eth_interrupts_unmask, pp, 1);
 		}
 	} else
 		clear_bit(MV_ETH_F_STARTED_BIT, &(pp->flags));
@@ -4879,8 +4878,7 @@ int mv_eth_suspend_internals(struct eth_port *pp)
 	}
 
 	/* mask all interrupts */
-	mv_eth_interrupts_mask(pp);
-	smp_call_function_many(cpu_online_mask, (smp_call_func_t)mv_eth_interrupts_mask, (void *)pp, 1);
+	on_each_cpu(mv_eth_interrupts_mask, pp, 1);
 
 	for_each_possible_cpu(cpu) {
 		pp->cpu_config[cpu]->causeRxTx = 0;
@@ -4918,7 +4916,7 @@ int mv_eth_stop_internals(struct eth_port *pp)
 		goto error;
 	}
 
-	mv_eth_interrupts_mask(pp);
+	on_each_cpu(mv_eth_interrupts_mask, pp, 1);
 
 	mdelay(10);
 
-- 
1.7.5.4

