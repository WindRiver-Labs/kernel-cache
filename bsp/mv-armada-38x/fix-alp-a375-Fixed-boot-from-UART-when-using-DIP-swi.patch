From 43b68dacc474782b7004624ee1b1d48376673121 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Mon, 14 Oct 2013 15:53:31 +0200
Subject: [PATCH 1044/1825] fix: alp,a375: Fixed boot from UART when using
 DIP-switch

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 12c4edaf37369c3fb1c1abbfafa776b8d0e289a7

	Added support for pre-compiled default boot source.
	when selecting boot source using DIP switch, to boot from UART,
	a default boot source is selected according to pre-compiled u-boot image (SPI/NAND)

	** Working only with NAND image **
	Due to HW design limitation, SPI is not available when boot from UART mode is selected,
	Since CS0/1 is selected according to boot selection (SPI-0/1).

	Bug fix: Jira#3024
	"Boot from UART isnt supported when selecting UART as boot source in DIP switch"

Change-Id: I08832debbc2de88c363b700bca4868bd24f8dddb
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3719
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   29 +++++++++++++++++--
 1 files changed, 26 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index f6cb7b4..ea9565f 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -1210,19 +1210,42 @@ MV_BOARD_BOOT_SRC mvBoardBootDeviceGet()
 	MV_U32 satrBootDeviceValue;
 	MV_SATR_BOOT_TABLE satrTable[] = MV_SATR_TABLE_VAL;
 	MV_SATR_BOOT_TABLE satrBootEntry;
+	MV_BOARD_BOOT_SRC defaultBootSrc;
+
+	/* prepare default boot source, in case of:
+	 * 1. S@R read ERROR
+	 * 2. Boot from UART is selected as boot source at S@R
+	 *    Pre-compiled image type (SPI/NAND) is selected as boot source
+	 */
+#if defined(MV_SPI_BOOT)
+	defaultBootSrc = MSAR_0_BOOT_SPI_FLASH;
+	DB(mvOsPrintf("default boot source is SPI-0\n"));
+#elif defined(MV_NAND_BOOT)
+	defaultBootSrc = MSAR_0_BOOT_NAND_NEW;
+	DB(mvOsPrintf("default boot source is NAND\n"));
+#endif
 
 	if (mvCtrlSatRRead(MV_SATR_BOOT_DEVICE, &satrBootDeviceValue) != MV_OK) {
 		mvOsPrintf("%s: Error: failed to read boot source\n", __func__);
-		mvOsPrintf("Using NAND as the default boot source\n");
-		return MSAR_0_BOOT_NAND_NEW; /* NAND is the Default Boot source */
+		mvOsPrintf("Using pre-compiled image type as boot source\n");
+		return defaultBootSrc;
 	}
 
+	/* Get boot source entry from Satr boot table */
 	satrBootEntry = satrTable[satrBootDeviceValue];
 
+	/* If booting from UART, return pre-compiled boot source*/
+	if (satrBootEntry.bootSrc == MSAR_0_BOOT_UART) {
+		mvOsPrintf("\t** Booting from UART (restore DIP-switch to");
+		mvOsPrintf(" requested boot source before reset!) **\n");
+		return defaultBootSrc;
+	}
+
+	/* If not booting from SPI, return boot source*/
 	if (satrBootEntry.bootSrc != MSAR_0_BOOT_SPI_FLASH)
 		return satrBootEntry.bootSrc;
 
-	/* if boot source is SPI ,verify which CS (0/1) */
+	/* if booting from SPI ,verify which CS (0/1) */
 	if (mvBoardBootAttrGet(satrBootDeviceValue, 1) == MSAR_0_SPI0)
 		return MSAR_0_BOOT_SPI_FLASH;
 	else
-- 
1.7.5.4

