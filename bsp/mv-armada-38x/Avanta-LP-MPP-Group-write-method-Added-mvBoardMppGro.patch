From ba61f0e492c14722315ea118b57c26eccb570f75 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Tue, 19 Mar 2013 10:26:36 +0200
Subject: [PATCH 0518/1825] Avanta LP: MPP Group write method Added
 (mvBoardMppGroupWrite)

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 3fa5df045a60345d73dfcbf8f0c1f30e573ff6a4

- New method to Write MPP value for a single group

- Set CPU SMI control as default value

Change-Id: Id23c67ed8c4a8588385b59fd76029a250a99fabf
Reviewed-on: http://vgitil04.il.marvell.com:8080/1331
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   85 ++++++++++++++++----
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    9 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   14 ---
 3 files changed, 74 insertions(+), 34 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index ab22250..f554af5 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -770,7 +770,6 @@ MV_VOID mvBoardConfigInit(void)
 	MV_ETH_COMPLEX_TOPOLOGY mac0con, mac1con;
 	MV_BOARD_BOOT_SRC bootDev;
 	MV_TDM_UNIT_TYPE tdmDev;
-	MV_BOOL SW_SMI;
 
 	/* Ethernet Complex initialization : */
 	if ( (mac0con = mvBoardMac0ConfigGet()) != MV_ERROR)
@@ -791,7 +790,7 @@ MV_VOID mvBoardConfigInit(void)
 
 	/* MPP Groups initialization : */
 	/* Group 0-1 - Boot device (or if SPI1 boot : Groups 3-4) */
-	bootDev = mvBoardBootDeviceGroupSet(mvCtrlSatRRead(MV_SATR_BOOT_DEVICE));
+	bootDev = mvBoardBootDeviceGroupSet();
 
 	/* Group 2 - TDM unit */
 	tdmDev = mvCtrlTdmUnitTypeGet();
@@ -817,11 +816,10 @@ MV_VOID mvBoardConfigInit(void)
 		else
 			mvBoardMppTypeSet(3, SDIO_UNIT);
 
-		SW_SMI = MV_TRUE; // test if SW or CPU SMI control (omriii : how to decide ?)
 		if (mvCtrlIsLantiqTDM())
-			mvBoardMppTypeSet(4, (SW_SMI ? GE1_SW_SMI_CTRL_TDM_LQ_UNIT : GE1_CPU_SMI_CTRL_TDM_LQ_UNIT));
+			mvBoardMppTypeSet(4, GE1_CPU_SMI_CTRL_TDM_LQ_UNIT);
 		else    /*REF_CLK_OUT*/
-			mvBoardMppTypeSet(4, (SW_SMI ? GE1_SW_SMI_CTRL_REF_CLK_OUT : GE1_CPU_SMI_CTRL_REF_CLK_OUT));
+			mvBoardMppTypeSet(4, GE1_CPU_SMI_CTRL_REF_CLK_OUT);
 	}
 
 	/* Groups 5-6-7  - */
@@ -854,11 +852,10 @@ MV_VOID mvBoardConfigInit(void)
 *       the selected MV_BOARD_BOOT_SRC
 *
 *******************************************************************************/
-MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_U32 sarBootDeviceValue)
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet()
 {
 	MV_U32 groupType;
-	MV_BOOL SW_SMI;
-	MV_BOARD_BOOT_SRC bootSrc = mvBoardBootDeviceGet(sarBootDeviceValue);
+	MV_BOARD_BOOT_SRC bootSrc = mvBoardBootDeviceGet();
 
 	switch (bootSrc) {
 	case MSAR_0_BOOT_NAND_NEW:
@@ -871,11 +868,10 @@ MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_U32 sarBootDeviceValue)
 		mvBoardMppTypeSet(1, groupType);
 	case MSAR_0_BOOT_SPI1_FLASH:    /* MSAR_0_SPI1 - update Groups 3-4 */
 		mvBoardMppTypeSet(3, SDIO_SPI1_UNIT);
-		SW_SMI = MV_TRUE;       // test if SW or CPU SMI control (omriii : how to decide ?)
 		if (mvCtrlIsLantiqTDM())
-			mvBoardMppTypeSet(4, (SW_SMI ? SPI1_SW_SMI_CTRL_TDM_LQ_UNIT : SPI1_CPU_SMI_CTRL_TDM_LQ_UNIT));
+			mvBoardMppTypeSet(4, SPI1_CPU_SMI_CTRL_TDM_LQ_UNIT);
 		else    /*REF_CLK_OUT*/
-			mvBoardMppTypeSet(4, (SW_SMI ? SPI1_SW_SMI_CTRL_REF_CLK_OUT : SPI1_CPU_SMI_CTRL_REF_CLK_OUT));
+			mvBoardMppTypeSet(4, SPI1_CPU_SMI_CTRL_REF_CLK_OUT);
 		// omriii : if nand/spi0 not for BOOT, enable Audio-SPDIF by default?
 		mvBoardMppTypeSet(0, SPI0_BOOT_SPDIF_AUDIO);
 		mvBoardMppTypeSet(1, SPI0_BOOT_SPDIF_AUDIO);
@@ -912,8 +908,9 @@ MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_U32 sarBootDeviceValue)
 *       the selected MV_BOARD_BOOT_SRC
 *
 *******************************************************************************/
-MV_BOARD_BOOT_SRC mvBoardBootDeviceGet(MV_U32 sarBootDeviceValue)
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGet()
 {
+	MV_U32 sarBootDeviceValue = mvCtrlSatRRead(MV_SATR_BOOT_DEVICE);
 	MV_SAR_BOOT_TABLE sarTable[] = MV_SAR_TABLE_VAL;
 	MV_SAR_BOOT_TABLE sarBootEntry = sarTable[sarBootDeviceValue];
 
@@ -1062,17 +1059,73 @@ MV_ETH_COMPLEX_TOPOLOGY mvBoardLaneSGMIIGet()
 	else return MV_ERROR;
 }
 
+/*******************************************************************************
+* mvBoardConfigWrite - write MPP's config and Board general environment configuration
+*
+* DESCRIPTION:
+*       This function writes the environment information that was initialized
+*       by mvBoardConfigInit, such as MPP settings, Mux configuration,
+*       and Board specific initializations.
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       None.
+*
+*******************************************************************************/
 MV_VOID mvBoardConfigWrite(void)
 {
-	MV_U32 mppGroup, mppType, mppVal;
-	MV_U32 mppGroups[][10] = MPP_GROUP_TYPES;
+	MV_U32 mppGroup, mppType, i, reg;
+	MV_BOARD_SPEC_INIT *boardSpec;
 
+	/* Specific board initializations  ( from board->pBoardSpecInit ) omriii : see if can remove all these inits*/
 	for (mppGroup = 0; mppGroup < MV_MPP_MAX_GROUP; mppGroup++) {
 		mppType = mvBoardMppTypeGet(mppGroup);
-		mppVal = mppGroups[mppGroup][mppType];
-		MV_REG_WRITE(mvCtrlMppRegGet(mppGroup), mppVal);
+		mvBoardMppGroupWrite(mppGroup, mppType);
+	}
+
+	boardSpec = mvBoardSpecInitGet();
+	if (boardSpec != NULL) {
+		i = 0;
+		while (boardSpec[i].reg != TBL_TERM) {
+			reg = MV_REG_READ(boardSpec[i].reg);
+			reg &= ~boardSpec[i].mask;
+			reg |= (boardSpec[i].val & boardSpec[i].mask);
+			MV_REG_WRITE(boardSpec[i].reg, reg);
+			i++;
+		}
 	}
+}
+
+/*******************************************************************************
+* mvBoardMppGroupWrite - write MPP value for a single group, according to type
+*
+* DESCRIPTION:
+*       This function writes MPP value for a specific group, according to
+*       received type
+*
+* INPUT:
+*       groupNum - Group number
+*	groupType - enum that represents the mpp selected value for the group
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       None.
+*
+*******************************************************************************/
+MV_VOID mvBoardMppGroupWrite(MV_U32 groupNum, MV_U32 groupType)
+{
+	MV_U32 mppVal;
+	MV_U32 mppGroups[][MV_BOARD_MAX_MPP_GROUPS] = MPP_GROUP_TYPES;
 
+	mppVal = mppGroups[groupNum][groupType];
+	MV_REG_WRITE(mvCtrlMppRegGet(groupNum), mppVal);
 }
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index 34169cd..f58fdc9 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -450,12 +450,13 @@ MV_32 mvBoardNandWidthGet(void);
 MV_U32 mvBoardIdGet(MV_VOID);
 MV_U32 mvBoardSledCpuNumGet(MV_VOID);
 MV_VOID mvBoardConfigInit(MV_VOID);
-void mvBoardConfigWrite(MV_VOID);
+MV_VOID mvBoardConfigWrite(MV_VOID);
+MV_VOID mvBoardMppGroupWrite(MV_U32 groupNum, MV_U32 groupType);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac0ConfigGet(MV_VOID);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac1ConfigGet(MV_VOID);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardLaneSGMIIGet(MV_VOID);
-MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_U32 sarBootDeviceValue);
-MV_BOARD_BOOT_SRC mvBoardBootDeviceGet(MV_U32 sarBootDeviceValue);
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet();
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGet();
 MV_U32 mvBoardBootAttrGet(MV_U32 sarBootDeviceValue, MV_U8 attrNum);
 MV_U8 mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum);
 MV_STATUS mvBoardTwsiSet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum, MV_U8 regVal);
@@ -487,4 +488,4 @@ MV_STATUS mvBoardPexModeSet(MV_U16 conf);
 }
 #endif  /* __cplusplus */
 
-#endif  /* __INCmvBoardEnvLibh */
\ No newline at end of file
+#endif  /* __INCmvBoardEnvLibh */
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 8c2d8e7..44d25d9 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -171,22 +171,8 @@ MV_STATUS mvCtrlUpdatePexId(MV_VOID)
 *******************************************************************************/
 MV_STATUS mvCtrlEnvInit(MV_VOID)
 {
-	MV_BOARD_SPEC_INIT *boardSpec;
 	MV_U32 i, gppMask;
 
-	/* Specific board initializations  ( from board->pBoardSpecInit ) omriii : see if can remove all these inits*/
-	boardSpec = mvBoardSpecInitGet();
-	if (boardSpec != NULL) {
-		MV_U32 reg;
-		i = 0;
-		while (boardSpec[i].reg != TBL_TERM) {
-			reg = MV_REG_READ(boardSpec[i].reg);
-			reg &= ~boardSpec[i].mask;
-			reg |= (boardSpec[i].val & boardSpec[i].mask);
-			MV_REG_WRITE(boardSpec[i].reg, reg);
-			i++;
-		}
-	}
 	/* Use S@R and board config info, to Build Eth-Complex config & MPP group types */
 	mvBoardConfigInit();
 
-- 
1.7.5.4

