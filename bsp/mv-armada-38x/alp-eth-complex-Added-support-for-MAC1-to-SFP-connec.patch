From e3b01ca863afa560c10a6f6b40b3026aaacb7ff5 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Thu, 8 May 2014 16:39:25 +0300
Subject: [PATCH 1638/1825] alp: eth complex: Added support for MAC1 to SFP
 connector (via PON serdes)

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 8b0fd18665de534c74f987b00232e2045247f8b6

	- Added new option to board config command "ponserdes", option number 2 (MAC1[SFP])
	- Enable SFP-1 TX for SGMII for DB-6660 boards
	- No need to init PHY-1, because the PHY is self-initialized (SFP transmitter)
	- Fix bug in boardConfig command, when writting invalid value

Change-Id: If767110072d4abb8112d63123e9cc1b455f80505
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/7890
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   65 +++++++++++++++++---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    5 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |    3 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    1 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c    |    2 +-
 5 files changed, 62 insertions(+), 14 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 01c9f3a..3f30850 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -280,7 +280,8 @@ MV_BOOL mvBoardIsPortInSgmii(MV_U32 ethPortNum)
 	ethComplex = mvBoardEthComplexConfigGet();
 	if ((ethPortNum == 0 && (ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_1 ||
 		ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_2 || ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_3)) ||
-		(ethPortNum == 1 && (ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES)))
+			(ethPortNum == 1 && (ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES ||
+			 ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP)))
 		return MV_TRUE;
 	return MV_FALSE;
 }
@@ -999,7 +1000,9 @@ MV_VOID mvBoardInfoUpdate(MV_VOID)
 		/* If needed, enable SFP0 TX for SGMII, for DB-6660 */
 		if (ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_2)
 			mvBoardSgmiiSfp0TxSet(MV_TRUE);
-
+		/* If needed, enable SFP1 TX for SGMII, for DB-6660 */
+		if (ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP)
+			mvBoardSgmiiSfp1TxSet(MV_TRUE);
 		/* Check conflicts between device bus module and NAND */
 		mvBoardAudioModuleConfigCheck();
 
@@ -1088,7 +1091,8 @@ MV_VOID mvBoardMppIdUpdate(MV_VOID)
 	/* Groups 3-4  - (only if not Booting from SPI1)*/
 	if (bootDev != MSAR_0_BOOT_SPI1_FLASH) {
 		tdmLqUnit = (slicDev == SLIC_LANTIQ_ID);
-		if (ethComplexOptions & (MV_ETHCOMP_GE_MAC1_2_RGMII1 | MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES)) {
+		if (ethComplexOptions & (MV_ETHCOMP_GE_MAC1_2_RGMII1 | MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES |
+					MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP)) {
 			mvBoardMppTypeSet(3, GE1_RGMII1_UNIT);
 			mvBoardMppTypeSet(4, (tdmLqUnit ? GE1_RGMII1_CPU_SMI_CTRL_TDM_LQ_UNIT : \
 						GE1_RGMII1_CPU_SMI_CTRL_REF_CLK_OUT));
@@ -1151,8 +1155,9 @@ MV_STATUS mvBoardEthComplexInfoUpdate()
 	if (mvCtrlSysConfigGet(MV_CONFIG_SGMII0_CAPACITY) == 0x1)
 		ethComplexOptions |= MV_ETHCOMP_GE_MAC0_2_COMPHY_SPEED_2G;
 
-	/* if MAC1 is NOT connected to PON SerDes --> connect PON MAC to to PON SerDes */
-	if ((ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES) == MV_FALSE)
+	/* if MAC1 is NOT connected to PON SerDes using SGMII or SFP --> connect PON MAC to to PON SerDes */
+	if ((ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES) == MV_FALSE &&
+			(ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP) == MV_FALSE)
 		ethComplexOptions |= MV_ETHCOMP_P2P_MAC_2_PON_ETH_SERDES;
 
 	/* Switch Ports*/
@@ -1439,6 +1444,8 @@ MV_ETH_COMPLEX_TOPOLOGY mvBoardMac1ConfigGet()
 {
 	if (mvCtrlSysConfigGet(MV_CONFIG_PON_SERDES) == 0x1)
 		return MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES;
+	if (mvCtrlSysConfigGet(MV_CONFIG_PON_SERDES) == 0x2)
+		return MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP;
 	/* else Scan MAC1 config to decide its connection */
 	switch (mvCtrlSysConfigGet(MV_CONFIG_MAC1)) {
 	case 0x0:
@@ -1969,9 +1976,11 @@ MV_VOID mvBoardConfigurationPrint(MV_VOID)
 	}
 
 	if (ethConfig & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES)
-		mvOsOutput("\tPON ETH SERDES on MAC1\n");
+		mvOsOutput("\tPON ETH SERDES on MAC1 [SGMII1]\n");
+	if (ethConfig & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP)
+		mvOsOutput("\tPON ETH SERDES on MAC1 [SFP]\n");
 	if (ethConfig & MV_ETHCOMP_P2P_MAC_2_PON_ETH_SERDES)
-		mvOsOutput("\tETH SERDES on P2P MAC\n");
+		mvOsOutput("\tPON ETH SERDES on P2P MAC\n");
 
 	/* TDM / Slic configuration */
 	slicDevice = mvBoardSlicUnitTypeGet();
@@ -2613,6 +2622,34 @@ MV_STATUS mvBoardSgmiiSfp0TxSet(MV_BOOL enable)
 }
 
 /*******************************************************************************
+* mvBoardSgmiiSfp1TxSet - enable/disable SGMII_SFP1_TX_DISABLE status
+*
+* DESCRIPTION:
+*       This function enables/disables the field status.
+*
+* INPUT:
+*       enable - Boolean to indicate requested status
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       None.
+*
+********************************************************************************/
+MV_STATUS mvBoardSgmiiSfp1TxSet(MV_BOOL enable)
+{
+	MV_BOARD_IO_EXPANDER_TYPE_INFO ioInfo;
+
+	if (mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_SFP1_TX_DIS, &ioInfo) != MV_OK) {
+		mvOsPrintf("%s: Error: Write to IO expander failed (SFP1_TX_DIS)\n", __func__);
+		return MV_ERROR;
+	}
+
+	return mvBoardIoExpValSet(&ioInfo, (enable ? 0x0 : 0x1));
+}
+
+/*******************************************************************************
 * mvBoardHDDSelecteExternal - Select External / Internal HDD
 *
 * DESCRIPTION:
@@ -2920,7 +2957,11 @@ MV_STATUS mvBoardEepromWrite(MV_CONFIG_TYPE_ID configType, MV_U8 value)
 		mvOsPrintf("%s: Error: Write configuration to EEPROM failed\n", __func__);
 		return MV_ERROR;
 	}
-
+	 /* check if value is bigger then field's limit */
+	if (value > configInfo.mask >> configInfo.offset) {
+		mvOsPrintf("%s: Error: Requested write value is not valid (%d)\n", __func__, value);
+		return MV_ERROR;
+	}
 	/* reg num is according to DIP-switch mapping (each Expander conatins 2 registers) */
 	regNum = configInfo.expanderNum * 2 + configInfo.regNum;
 
@@ -3206,6 +3247,7 @@ MV_BOOL mvBoardIsEthConnected(MV_U32 ethNum)
 			(c & MV_ETHCOMP_GE_MAC1_2_RGMII1) ||
 			(c & MV_ETHCOMP_GE_MAC1_2_RGMII0) ||
 			(c & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES) ||
+			(c & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP) ||
 			(c & MV_ETHCOMP_GE_MAC1_2_SW_P4)))
 			isConnected = MV_TRUE;
 
@@ -3259,6 +3301,7 @@ MV_BOOL mvBoardIsEthActive(MV_U32 ethNum)
 			(c & MV_ETHCOMP_GE_MAC1_2_RGMII1) ||
 			(c & MV_ETHCOMP_GE_MAC1_2_RGMII0) ||
 			(c & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES) ||
+			(c & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP) ||
 			((c & MV_ETHCOMP_GE_MAC1_2_SW_P4) && mvBoardMacCpuPortGet() == 1)))
 			isActive = MV_TRUE;
 
@@ -3349,8 +3392,10 @@ MV_STATUS mvBoardConfigVerify(MV_CONFIG_TYPE_ID field, MV_U8 writeVal)
 		mvOsPrintf("Error: this option is not supported in Z stepping revision\n");
 		return MV_ERROR;
 	}
-	if (field == MV_CONFIG_MAC1 && (c & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES)) {
-		mvOsPrintf("Warning: MAC1 is connected to PON Serdes\n");
+	if (field == MV_CONFIG_MAC1 && (c & (MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES |
+					MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP))) {
+		mvOsPrintf("Warning: MAC1 is connected to PON Serdes\n"
+				"To alter MAC1 settings, please update 'ponserdes' field first\n");
 		return MV_ERROR;
 	}
 	/* 0x3 = RGMII0, check if MAC0 is connected to RGMII0 */
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index 2b9f20ce..67c35d7 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -384,7 +384,7 @@ typedef struct _boardInfo {
 #define MV_BOARD_CONFIG_INFO { \
 { MV_CONFIG_MAC0,	       0x3,	0,	 0,		0,	{ 0, 1, 1, 1 } }, \
 { MV_CONFIG_MAC1,	       0xC,	2,	 0,		0,	{ 0, 1, 1, 1 } }, \
-{ MV_CONFIG_PON_SERDES,	       0x10,	4,	 0,		0,	{ 0, 1, 1, 1 } }, \
+{ MV_CONFIG_MAC0_SW_SPEED,     0x10,	4,	 0,		0,	{ 0, 1, 0, 1 } }, \
 { MV_CONFIG_PON_BEN_POLARITY,  0x20,	5,	 0,		0,	{ 0, 0, 1, 1 } }, \
 { MV_CONFIG_SGMII0_CAPACITY,   0x40,	6,	 0,		0,	{ 0, 1, 0, 1 } }, \
 { MV_CONFIG_SGMII1_CAPACITY,   0x80,	7,	 0,		0,	{ 0, 1, 1, 1 } }, \
@@ -392,9 +392,9 @@ typedef struct _boardInfo {
 { MV_CONFIG_LANE1,	       0x18,	3,	 0,		1,	{ 0, 0, 0, 1 } }, \
 { MV_CONFIG_LANE2,	       0x20,	5,	 0,		1,	{ 0, 0, 0, 1 } }, \
 { MV_CONFIG_LANE3,	       0X40,	6,	 0,		1,	{ 0, 0, 0, 1 } }, \
-{ MV_CONFIG_MAC0_SW_SPEED,     0X80,	7,	 0,		1,	{ 0, 1, 0, 1 } }, \
 { MV_CONFIG_DEVICE_BUS_MODULE, 0x3,	0,	 1,		0,	{ 0, 0, 0, 1 } }, \
 { MV_CONFIG_DDR_BUSWIDTH,      0x4,	2,	 1,		0,	{ 0, 0, 0, 1 } }, \
+{ MV_CONFIG_PON_SERDES,        0x18,	3,	 0,		1,	{ 0, 1, 0, 1 } }, \
 };
 
 /* MV_CONFIG_TYPE_ID ConfigID,      MV_U32 Offset,	 expanderNum,  regNum,   }} */
@@ -507,6 +507,7 @@ MV_STATUS mvBoardConfigTypeGet(MV_CONFIG_TYPE_ID configClass, MV_BOARD_CONFIG_TY
 MV_STATUS mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_TYPE_ID ioClass, MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo);
 MV_STATUS mvBoardExtPhyBufferSelect(MV_BOOL enable);
 MV_STATUS mvBoardSgmiiSfp0TxSet(MV_BOOL enable);
+MV_STATUS mvBoardSgmiiSfp1TxSet(MV_BOOL enable);
 MV_STATUS mvBoardHddExtSet(MV_BOOL enable);
 MV_STATUS mvBoardHDDPowerSet(MV_BOOL enable);
 MV_STATUS mvBoardUsbSsEnSet(MV_BOOL enable);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 4a1123c..e10bc92 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -518,7 +518,8 @@ MV_VOID mvCtrlSmiMasterSet(MV_SMI_CTRL smiCtrl)
 	 * 1. Boot source is SPI1
 	 * 2. RGMII-1 is disabled (SPI-1 MPP's are shared with RGMII-1 MPP's) */
 	if (mvBoardBootDeviceGet() == MSAR_0_BOOT_SPI1_FLASH ||
-		(!(ethComplex & MV_ETHCOMP_GE_MAC1_2_RGMII1) && !(ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES)))
+		(!(ethComplex & MV_ETHCOMP_GE_MAC1_2_RGMII1) && !(ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES)
+		 && !(ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP)))
 		isSPI1Enabled = MV_TRUE;
 	else
 		isSPI1Enabled = MV_FALSE;
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index 8a67d66..d5863e9 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -182,6 +182,7 @@ typedef enum {
 	MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G	=	BIT17,
 	MV_ETHCOMP_GE_MAC0_2_COMPHY_SPEED_2G	=	BIT18,
 	MV_ETHCOMP_GE_MAC1_2_RGMII0		=	BIT19,
+	MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP	=	BIT20,
 } MV_ETH_COMPLEX_TOPOLOGY;
 
 typedef enum {
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
index e76957d..207304a 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
@@ -476,7 +476,7 @@ MV_STATUS mvEthComplexInit(MV_U32 ethCompConfig)
 	if (c & (MV_ETHCOMP_GE_MAC1_2_RGMII1 | MV_ETHCOMP_GE_MAC1_2_RGMII0))
 		mvEthComplexMacToRgmii(1);
 
-	if (c & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES)
+	if (c & (MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES | MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES_SFP))
 		mvEthComplexMac1ToPonSerdes(1);
 
 	if (c & MV_ETHCOMP_SW_P0_2_GE_PHY_P0)
-- 
1.7.5.4

