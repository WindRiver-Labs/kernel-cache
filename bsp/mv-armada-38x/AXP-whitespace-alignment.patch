From 1e9db3d60574d10d06ae9460dc56cd0645db15c4 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <zertsekel@gmail.com>
Date: Fri, 18 Jan 2013 18:11:07 +0200
Subject: [PATCH 0451/1825] AXP: whitespace alignment

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c67e34f83cce57412af831bfdbeb2c39652a74b5

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I066c8f7513656cb258af381a2d887c53cfc64f1c
Reviewed-on: http://vgitil04.il.marvell.com:8080/1227
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armadaxp/include/mach/armadaxp.h |    1 -
 arch/arm/mach-armadaxp/time.c                  |   55 ++++++++++++------------
 2 files changed, 27 insertions(+), 29 deletions(-)

diff --git a/arch/arm/mach-armadaxp/include/mach/armadaxp.h b/arch/arm/mach-armadaxp/include/mach/armadaxp.h
index 9f0eb2c..5cb020e 100755
--- a/arch/arm/mach-armadaxp/include/mach/armadaxp.h
+++ b/arch/arm/mach-armadaxp/include/mach/armadaxp.h
@@ -13,7 +13,6 @@
 #ifndef __ASM_ARCH_AURORA_H
 #define __ASM_ARCH_AURORA_H
 
-
 /****************************************************************/
 /******************* System Address Mapping *********************/
 /****************************************************************/
diff --git a/arch/arm/mach-armadaxp/time.c b/arch/arm/mach-armadaxp/time.c
index bd5126b..4486c86 100644
--- a/arch/arm/mach-armadaxp/time.c
+++ b/arch/arm/mach-armadaxp/time.c
@@ -41,33 +41,32 @@ extern void axp_irq_mask(struct irq_data *d);
 extern void axp_irq_unmask(struct irq_data *d);
 extern unsigned int master_cpu_id;
 
-#define  TIMER_CTRL		(MV_CNTMR_REGS_OFFSET + 0x0000)
-#define  TIMER_WD_RELOAD	(MV_CNTMR_REGS_OFFSET + 0x0020)
-#define  TIMER_WD_VAL		(MV_CNTMR_REGS_OFFSET + 0x0024)
-#define  TIMER_CAUSE		(MV_CNTMR_REGS_OFFSET + 0x0028)
-
-#define  TIMER_EN(x)		(0x0001 << (2 * x))
-#define  TIMER_RELOAD_EN(x)	(0x0002 << (2 * x))
-#define  TIMER_RELOAD(x)	(MV_CNTMR_REGS_OFFSET + 0x0010 + (8 * x))
-#define  TIMER_VAL(x)		(MV_CNTMR_REGS_OFFSET + 0x0014 + (8 * x))
-#define  INT_TIMER_CLR(x)	(~(1 << (8*x)))
-
-
-#define  LCL_TIMER_BASE		(0x21000 | 0x40)
-#define  LCL_TIMER_CTRL		(LCL_TIMER_BASE + 0x0000)
-#define    LCL_TIMER0_EN		0x0001
-#define    LCL_TIMER0_RELOAD_EN		0x0002
-#define    LCL_TIMER1_EN		0x0004
-#define    LCL_TIMER1_RELOAD_EN		0x0008
-#define  LCL_TIMER0_RELOAD	(LCL_TIMER_BASE + 0x0010)
-#define  LCL_TIMER0_VAL		(LCL_TIMER_BASE + 0x0014)
-#define  LCL_TIMER1_RELOAD	(LCL_TIMER_BASE + 0x0018)
-#define  LCL_TIMER1_VAL		(LCL_TIMER_BASE + 0x001c)
-#define  LCL_TIMER_WD_RELOAD	(LCL_TIMER_BASE + 0x0020)
-#define  LCL_TIMER_WD_VAL	(LCL_TIMER_BASE + 0x0024)
-#define  LCL_TIMER_CAUSE	(LCL_TIMER_BASE + 0x0028)
-#define   LCL_INT_TIMER0_CLR 	~(1 << 0)
-#define   LCL_INT_TIMER1_CLR	~(1 << 8)
+#define TIMER_CTRL		(MV_CNTMR_REGS_OFFSET + 0x0000)
+#define TIMER_WD_RELOAD	(MV_CNTMR_REGS_OFFSET + 0x0020)
+#define TIMER_WD_VAL		(MV_CNTMR_REGS_OFFSET + 0x0024)
+#define TIMER_CAUSE		(MV_CNTMR_REGS_OFFSET + 0x0028)
+
+#define TIMER_EN(x)		(0x0001 << (2 * x))
+#define TIMER_RELOAD_EN(x)	(0x0002 << (2 * x))
+#define TIMER_RELOAD(x)	(MV_CNTMR_REGS_OFFSET + 0x0010 + (8 * x))
+#define TIMER_VAL(x)		(MV_CNTMR_REGS_OFFSET + 0x0014 + (8 * x))
+#define INT_TIMER_CLR(x)	(~(1 << (8*x)))
+
+#define LCL_TIMER_BASE		(0x21000 | 0x40)
+#define LCL_TIMER_CTRL		(LCL_TIMER_BASE + 0x0000)
+#define LCL_TIMER0_EN		0x0001
+#define LCL_TIMER0_RELOAD_EN		0x0002
+#define LCL_TIMER1_EN		0x0004
+#define LCL_TIMER1_RELOAD_EN		0x0008
+#define LCL_TIMER0_RELOAD	(LCL_TIMER_BASE + 0x0010)
+#define LCL_TIMER0_VAL		(LCL_TIMER_BASE + 0x0014)
+#define LCL_TIMER1_RELOAD	(LCL_TIMER_BASE + 0x0018)
+#define LCL_TIMER1_VAL		(LCL_TIMER_BASE + 0x001c)
+#define LCL_TIMER_WD_RELOAD	(LCL_TIMER_BASE + 0x0020)
+#define LCL_TIMER_WD_VAL	(LCL_TIMER_BASE + 0x0024)
+#define LCL_TIMER_CAUSE	(LCL_TIMER_BASE + 0x0028)
+#define LCL_INT_TIMER0_CLR	~(1 << 0)
+#define LCL_INT_TIMER1_CLR	~(1 << 8)
 #define LCL_TIMER_TURN_25MHZ	(1 << 11)
 
 #define TIMER_TURN_25MHZ(x)	(1 << (11 + x))
@@ -414,7 +413,7 @@ void __init axp_time_init(unsigned int fabric_clk)
 
 static void __init axp_timer_init(void)
 {
-#if !defined (CONFIG_ARMADA_XP_REV_Z1) || defined (CONFIG_MACH_ARMADA_XP_FPGA)
+#if !defined(CONFIG_ARMADA_XP_REV_Z1) || defined(CONFIG_MACH_ARMADA_XP_FPGA)
 	/* FPGA is hardcoded to 25Mhx and DSMP-A0 ref clock for the timers is 25MHz */
 	axp_time_init(25000000);
 #else
-- 
1.7.5.4

