From 5611527c603001e9394078202f4a25c44a443a7a Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Sun, 9 Jun 2013 14:48:55 +0300
Subject: [PATCH 0709/1825] PPv2: disable PHY polling for CPU / disabled
 switch ports

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 620e8673c96b9f710f20a57f357c4a68cbf5dca5

Change-Id: Idd0e3a7c6b63d5b0493b188beef35aab82119b47
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2183
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_switch/mv_switch.c           |   16 +++++++++++++---
 1 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
index ff4af2d..50be7aa 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
@@ -564,7 +564,7 @@ void mv_switch_tasklet(unsigned long data)
 	if (devIntStatus.devIntCause & GT_DEV_INT_PHY)
 		port_mask = devIntStatus.phyInt & 0xFF;
 
-	mv_switch_link_update_event(port_mask, 1/* ALP Z1 WA - link change bit not rising in time */);
+	mv_switch_link_update_event(port_mask, 0);
 
 	mv_switch_interrupt_clear();
 
@@ -668,6 +668,12 @@ int mv_switch_load(struct mv_switch_pdata *plat_data)
 				printk(KERN_ERR "Force Link UP - Failed\n");
 				return -1;
 			}
+
+			if (gprtSetPHYDetect(qd_dev, p, GT_FALSE) != GT_OK) {
+				printk(KERN_ERR "gprtSetPHYDetect failed\n");
+				return -1;
+			}
+
 			continue;
 		}
 
@@ -678,9 +684,8 @@ int mv_switch_load(struct mv_switch_pdata *plat_data)
 			printk(KERN_ERR "Force Flow Control - Failed\n");
 			return -1;
 		}
-		/* TODO - decide if we want to enable auto-negotiation of Flow Control for external ports */
 
-		/* Diable switch ports that aren't connected to CPU/PHY */
+		/* Disable switch ports that aren't connected to CPU/PHY */
 		if (!MV_BIT_CHECK(plat_data->connected_port_mask, p)) {
 			printk(KERN_ERR "    o Disable disconnected Switch Port #%d and force link down\n", p);
 			if (gstpSetPortState(qd_dev, p, GT_PORT_DISABLE) != GT_OK) {
@@ -692,6 +697,11 @@ int mv_switch_load(struct mv_switch_pdata *plat_data)
 				printk(KERN_ERR "Force Link DOWN - Failed\n");
 				return -1;
 			}
+
+			if (gprtSetPHYDetect(qd_dev, p, GT_FALSE) != GT_OK) {
+				printk(KERN_ERR "gprtSetPHYDetect failed\n");
+				return -1;
+			}
 		}
 	}
 	return 0;
-- 
1.7.5.4

