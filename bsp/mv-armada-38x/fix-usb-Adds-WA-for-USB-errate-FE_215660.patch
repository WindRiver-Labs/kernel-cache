From a45f6848e2ab69b6f1ce450c518ba6c96eaf22d3 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Sun, 13 Oct 2013 17:20:49 +0200
Subject: [PATCH 1097/1825] fix: usb: Adds WA for USB errate FE_215660

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 8817a6a02eb3347b333612be3bed77cc6cb20f8b

	Underruns can occur due to memory bandwidth limitations when a USB host
	transmits data. When an underrun occurs, the host that transmits a truncated
	packet corrupts the packets CRC bytes. The receiving device ignores truncated
	packets with a corrupt CRC, and the host re-transmits the packet. The USB host
	calculates the CRC bytes during packet transmission. When a packet is truncated
	due to an underrun, the host must invert the CRC byte value that is to be
	transmitted. Due to a logic error, one extra data byte is transmitted between
	the first and second CRC bytes. In very rare cases, there is a chance that a
	corrupted packet is transmitted with a good CRC.
	This WA resolves the issue by disabling streaming mode in the host controller

	fix: Please integrate to stable branch. BTS #431

Change-Id: Id542c3dd474b2d7a39b281990a4517e81e85fd13
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3691
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada370/config/mvSysUsbConfig.h |    4 ++++
 arch/arm/mach-armada38x/config/mvSysUsbConfig.h |    4 ++++
 arch/arm/mach-armadaxp/config/mvSysUsbConfig.h  |    4 ++++
 arch/arm/plat-armada/Kconfig                    |   15 +++++++++++++++
 4 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-armada370/config/mvSysUsbConfig.h b/arch/arm/mach-armada370/config/mvSysUsbConfig.h
index de9bded..d6fe3be 100644
--- a/arch/arm/mach-armada370/config/mvSysUsbConfig.h
+++ b/arch/arm/mach-armada370/config/mvSysUsbConfig.h
@@ -34,3 +34,7 @@ disclaimer.
 ** Base address for USB registers.
 */
 #define MV_USB_REGS_BASE(unit) 		(MV_USB_REGS_OFFSET(unit))
+
+#ifdef CONFIG_ERRATA_FE_215660
+#define ERRATA_FE_215660
+#endif /* CONFIG_ERRATA_FE_215660 */
diff --git a/arch/arm/mach-armada38x/config/mvSysUsbConfig.h b/arch/arm/mach-armada38x/config/mvSysUsbConfig.h
index e7b0f0c..a2c8998 100644
--- a/arch/arm/mach-armada38x/config/mvSysUsbConfig.h
+++ b/arch/arm/mach-armada38x/config/mvSysUsbConfig.h
@@ -22,3 +22,7 @@ disclaimer.
 
 #define MV_USB_REGS_BASE(unit)		MV_USB_REGS_OFFSET(unit)
 #define MV_USB3_REGS_BASE(unit)		MV_USB3_REGS_OFFSET(unit)
+
+#ifdef CONFIG_ERRATA_FE_215660
+#define ERRATA_FE_215660
+#endif /* CONFIG_ERRATA_FE_215660 */
diff --git a/arch/arm/mach-armadaxp/config/mvSysUsbConfig.h b/arch/arm/mach-armadaxp/config/mvSysUsbConfig.h
index 7c82f5c..a1337f2 100644
--- a/arch/arm/mach-armadaxp/config/mvSysUsbConfig.h
+++ b/arch/arm/mach-armadaxp/config/mvSysUsbConfig.h
@@ -34,3 +34,7 @@ disclaimer.
 ** Base address for USB registers.
 */
 #define MV_USB_REGS_BASE(unit) 		(MV_USB_REGS_OFFSET(unit))
+
+#ifdef CONFIG_ERRATA_FE_215660
+#define ERRATA_FE_215660
+#endif /* CONFIG_ERRATA_FE_215660 */
diff --git a/arch/arm/plat-armada/Kconfig b/arch/arm/plat-armada/Kconfig
index 16dc8af..95038e9 100644
--- a/arch/arm/plat-armada/Kconfig
+++ b/arch/arm/plat-armada/Kconfig
@@ -385,6 +385,21 @@ config MV_USB_DEVICE
 	Choosing this option will configure on chip USB Controller to work in Device mode
 endchoice
 
+config ERRATA_FE_215660
+	bool "WA for Marvell USB errata FE_215660"
+	depends on MV_INCLUDE_USB && (ARMADA_XP || ARMADA_370 || ARMADA_375 || ARMADA_38X)
+	default y
+	---help---
+	Underruns can occur due to memory bandwidth limitations when a USB host
+	transmits data. When an underrun occurs, the host that transmits a truncated
+	packet corrupts the packets CRC bytes. The receiving device ignores truncated
+	packets with a corrupt CRC, and the host re-transmits the packet. The USB host
+	calculates the CRC bytes during packet transmission. When a packet is truncated
+	due to an underrun, the host must invert the CRC byte value that is to be
+	transmitted. Due to a logic error, one extra data byte is transmitted between
+	the first and second CRC bytes. In very rare cases, there is a chance that a
+	corrupted packet is transmitted with a good CRC.
+	This WA resolves the issue by disabling streaming mode in the host controller
 
 config ARCH_SUPPORTS_BIG_ENDIAN
 	bool
-- 
1.7.5.4

