From 10e61077e36a5244b9ba40a70a477430ccccc94b Mon Sep 17 00:00:00 2001
From: kostap <kostap@marvell.com>
Date: Wed, 7 May 2014 14:55:27 +0300
Subject: [PATCH 1648/1825] fix: nor: msys: Fix NOR access on MSYS device
 family

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 42b52d7f5f05aa799e314431ee0c0cf2b6453744

	Fix NOR memory mapping (missed window for SWITCH caused address shift)
	Fix device bus configuration:
		- add support for writing the bus width based on board config
		- change NOR bus and device width from 16 to 8 bits
	Extend build script for droppping requiests to build simultaneous
	NOR and NAND or NOR and SPI support due to device configuration limitations
	Add PUP configuration and device bus arbiter settings for NOR flash.
	Boot from 8-bit NOR is not currently supported due to inability to setup
	NOR device bus width in SAR. In order to test the 8-bit NOR boot the bus
	width should be modified in SAR2 bit[6] (0x1822C) using HW debugger at
	BootROM stage.
	Boot form 16-bit NOR interafce was not tested - missing HW setup.

Change-Id: I10beced3792aba4e4c35c9eca6ce966428bef8d1
Signed-off-by: kostap <kostap@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/7868
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../msys_family/boardEnv/mvBoardEnvSpec.c          |    7 ++-
 .../msys_family/boardEnv/mvBoardEnvSpec.h          |    4 +
 .../mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c   |   76 +++++++++++++++++---
 3 files changed, 77 insertions(+), 10 deletions(-)

diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c
index 30b6078..919d9ff 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c
@@ -235,14 +235,19 @@ MV_DEV_CS_INFO db_dx_bc2InfoBoardDeCsInfo[] = {
 	{SPI_CS0, N_A, BOARD_DEV_SPI_FLASH, 8, 8}, /* SPI DEV */
 #endif
 #if defined(MV_INCLUDE_NOR)
-	{DEV_BOOCS, N_A, BOARD_DEV_NOR_FLASH, 16, 16} /* NOR DEV */
+	{DEV_BOOCS, N_A, BOARD_DEV_NOR_FLASH, 8, 8} /* NOR DEV */
 #endif
 };
 
 MV_BOARD_MPP_INFO db_dx_bc2InfoBoardMppConfigValue[] = {
 	{ {
+#if defined(MV_INCLUDE_NOR)
+	DB_DX_BC2_NOR_MPP0_7,
+	DB_DX_BC2_NOR_MPP8_15,
+#else
 	DB_DX_BC2_MPP0_7,
 	DB_DX_BC2_MPP8_15,
+#endif
 	DB_DX_BC2_MPP16_23,
 	DB_DX_BC2_MPP24_31,
 	DB_DX_BC2_MPP32_39,
diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.h
index ec670d9..38c6ded 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.h
@@ -120,6 +120,10 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define DB_DX_BC2_MPP24_31	0x14444444
 #define DB_DX_BC2_MPP32_39	0x00000001
 
+#define DB_DX_BC2_NOR_MPP0_7	0x44444444
+#define DB_DX_BC2_NOR_MPP8_15	0x11122244
+
+
 /* GPPs
 MPP#	NAME			IN/OUT
 ----------------------------------------------
diff --git a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c
index 897600c..abcf088 100644
--- a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c
@@ -128,6 +128,72 @@ MV_BOOL mvCtrlIsValidSatR(MV_VOID)
 {
 	return MV_TRUE;
 }
+
+/*******************************************************************************
+* mvCtrlDevBusInit - Initialize Marvell device bus controller.
+*
+* DESCRIPTION:
+*       This function initializes device bus controller for configured devices
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       None.
+*
+*******************************************************************************/
+MV_VOID mvCtrlDevBusInit(MV_VOID)
+{
+#if defined(MV_INCLUDE_NOR)
+	MV_U32	numOfDevices;
+	MV_U32	deviceId;
+	MV_U32	busWidth;
+	MV_U32	deviceCS;
+	MV_U32	regVal;
+	MV_U32	regAddr;
+
+	/* Enable NOR Flash PUP */
+	MV_REG_BIT_SET(PUP_EN_REG, BIT3);
+
+	/* Configure NAND flush disabled */
+	MV_REG_BIT_RESET(SOC_DEV_MUX_REG, BIT0);
+
+	/* Set NfArbiterEn to device bus */
+	MV_REG_BIT_SET(SOC_DEV_MUX_REG, BIT27);
+
+	/* Configure NOR bus width */
+	numOfDevices = mvBoardGetDevicesNumber(BOARD_DEV_NOR_FLASH);
+	for (deviceId = 0; deviceId < numOfDevices; deviceId++) {
+		deviceCS = boardGetDevCSNum(deviceId, BOARD_DEV_NOR_FLASH);
+		if (deviceCS != 0xFFFFFFFF) {
+			busWidth = mvBoardGetDeviceBusWidth(deviceId, BOARD_DEV_NOR_FLASH);
+
+			if (deviceCS == DEV_BOOCS)
+				regAddr = MV_DEV_BUS_REGS_OFFSET;
+			else
+				regAddr = MV_DEV_BUS_REGS_OFFSET + 8 + (deviceCS - DEVICE_CS0) * 8;
+
+			regVal = MV_REG_READ(regAddr);
+			regVal &= ~(BIT30|BIT31);
+			regVal |= (busWidth >> 4); /* 8b = 0, 16b = 1, 32b = 2 */
+			MV_REG_WRITE(regAddr, regVal);
+		}
+	}
+#else
+	/* Enable NAND Flash PUP (Pack-Unpack)
+	 * HW machanism to accelerate transactions (controlled by SoC register) */
+	MV_REG_BIT_SET(PUP_EN_REG, BIT4);
+
+	/* Configure NAND flush enabled */
+	MV_REG_BIT_SET(SOC_DEV_MUX_REG, BIT0);
+
+	/* Set NfArbiterEn to NAND Flash (Disable arbitration between device and NAND) */
+	MV_REG_BIT_RESET(SOC_DEV_MUX_REG, BIT27);
+#endif
+}
 /*******************************************************************************
 * mvCtrlEnvInit - Initialize Marvell controller environment.
 *
@@ -195,15 +261,7 @@ MV_STATUS mvCtrlEnvInit(MV_VOID)
 	if (MV_OK != mvCtrlSerdesPhyConfig())
 		mvOsPrintf("mvCtrlEnvInit: Can't init some or all SERDES lanes\n");
 
-	/* Enable NAND Flash PUP (Pack-Unpack)
-	 * HW machanism to accelerate transactions (controlled by SoC register) */
-	MV_REG_BIT_SET(PUP_EN_REG, BIT4);
-
-	/* Configure NAND flush enabled */
-	MV_REG_BIT_SET(SOC_DEV_MUX_REG, BIT0);
-
-	/* Set NfArbiterEn to NAND Flash (Disable arbitration between device and NAND) */
-	MV_REG_BIT_RESET(SOC_DEV_MUX_REG, BIT27);
+	mvCtrlDevBusInit();
 
 	mvOsDelay(100);
 
-- 
1.7.5.4

