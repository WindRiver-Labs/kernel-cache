From c338f4b9b75c59f80400615c51955b53478b8ba0 Mon Sep 17 00:00:00 2001
From: Nadav Haklai <nadavh@marvell.com>
Date: Wed, 24 Oct 2012 11:14:20 +0200
Subject: [PATCH 0299/1825] Armada370: Align generic Kernel code.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 35bf4bbced6a54d30260e96dcba6e6804e5484f7

Change-Id: I3021088636cd27277d820d6312762e1b88286ea0
Signed-off-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/Kconfig                 |   18 +++++++++++++++++-
 arch/arm/Makefile                |    3 +++
 arch/arm/include/asm/setup.h     |    5 +++++
 arch/arm/kernel/Makefile         |    4 +++-
 arch/arm/mm/Kconfig              |   25 +++++++++++++++++++------
 arch/arm/mm/Makefile             |    4 +++-
 arch/arm/mm/mmu.c                |    4 +---
 arch/arm/mm/proc-sheeva_pj4bv7.S |    5 +++++
 arch/arm/tools/mach-types        |    1 +
 drivers/rtc/Kconfig              |    2 +-
 drivers/tty/serial/serial_core.c |    6 ++++++
 fs/splice.c                      |   10 ++++------
 include/linux/serial_core.h      |    6 ++++++
 13 files changed, 74 insertions(+), 19 deletions(-)

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 45df03a..858a3b5 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -615,7 +615,21 @@ config ARCH_LPC32XX
 	select GENERIC_CLOCKEVENTS
 	help
 	  Support for the NXP LPC32XX family of processors
-	  
+
+config ARCH_ARMADA370
+	bool "Marvell Armada-370"
+	select PCI
+	select ARCH_REQUIRE_GPIOLIB
+	select GENERIC_GPIO
+	select GENERIC_TIME
+	select GENERIC_CLOCKEVENTS
+	select PLAT_ARMADA
+	select HAVE_REGS_AND_STACK_ACCESS_API
+	select COMMON_CLKDEV
+	select NEED_MACH_MEMORY_H
+	help
+	  Support for the Marvell Armada-370 SoC Family
+
 config ARCH_ARMADA_XP
 	bool "Marvell Armada XP"
 	select CPU_V7
@@ -1126,6 +1140,7 @@ source "arch/arm/mach-realview/Kconfig"
 
 source "arch/arm/mach-sa1100/Kconfig"
 
+source "arch/arm/mach-armada370/Kconfig"
 source "arch/arm/mach-armadaxp/Kconfig"
 source "arch/arm/plat-armada/Kconfig"
 
@@ -1829,6 +1844,7 @@ config FORCE_MAX_ZONEORDER
 	range 11 64 if ARCH_SHMOBILE
 	default "9" if SA1111
 	default "14" if ARCH_MX6Q
+	default "19" if ARCH_ARMADA370
 	default "11"
 	help
 	  The kernel memory allocator divides physically contiguous memory
diff --git a/arch/arm/Makefile b/arch/arm/Makefile
index cd336516..cf5ffd9 100644
--- a/arch/arm/Makefile
+++ b/arch/arm/Makefile
@@ -136,6 +136,7 @@ textofs-$(CONFIG_ARCH_MSM8960) := 0x00208000
 
 # Machine directory name.  This list is sorted alphanumerically
 # by CONFIG_* macro name.
+machine-$(CONFIG_ARCH_ARMADA370)	:= armada370
 machine-$(CONFIG_ARCH_AT91)		:= at91
 machine-$(CONFIG_ARCH_BCMRING)		:= bcmring
 machine-$(CONFIG_ARCH_CLPS711X)		:= clps711x
@@ -240,6 +241,8 @@ else
 MACHINE  :=
 endif
 
+export MACHINE
+
 machdirs := $(patsubst %,arch/arm/mach-%/,$(machine-y))
 platdirs := $(patsubst %,arch/arm/plat-%/,$(plat-y))
 
diff --git a/arch/arm/include/asm/setup.h b/arch/arm/include/asm/setup.h
index c979ea7..a574257 100644
--- a/arch/arm/include/asm/setup.h
+++ b/arch/arm/include/asm/setup.h
@@ -161,8 +161,13 @@ struct tag_mv_uboot {
         __u8  macAddr[MV_UBOOT_ETH_PORTS][6];
 	__u16 mtu[MV_UBOOT_ETH_PORTS];
 	__u32 nand_ecc;
+#if !defined (CONFIG_ARCH_ARMADA370)
 	__u32 rgmii0Src;
 	__u32 feGeSrc;
+#endif
+#if defined (CONFIG_ARCH_ARMADA370)
+	__u32 bit_mask_config;
+#endif
 };                     
 
 struct tag {
diff --git a/arch/arm/kernel/Makefile b/arch/arm/kernel/Makefile
index f87808c..8de8eb2 100644
--- a/arch/arm/kernel/Makefile
+++ b/arch/arm/kernel/Makefile
@@ -15,7 +15,9 @@ CFLAGS_REMOVE_return_address.o = -pg
 
 # Object file lists.
 
-include $(srctree)/arch/arm/mach-armadaxp/config/mvRules.mk
+ifneq ($(MACHINE),)
+include $(srctree)/$(MACHINE)/config/mvRules.mk
+endif
 
 obj-y		:= elf.o entry-armv.o entry-common.o irq.o opcodes.o \
 		   process.o ptrace.o return_address.o sched_clock.o \
diff --git a/arch/arm/mm/Kconfig b/arch/arm/mm/Kconfig
index b627822..3ccaf71 100644
--- a/arch/arm/mm/Kconfig
+++ b/arch/arm/mm/Kconfig
@@ -384,7 +384,7 @@ config CPU_FEROCEON_OLD_ID
 
 choice
 	prompt "Marvell Sheeva CPU Architecture"
-	default CPU_SHEEVA_PJ4B_V6
+	default CPU_SHEEVA_PJ4B_V7
 
 config CPU_SHEEVA_PJ4B_V6
 	bool "Support Sheeva processor in V6 mode" if ARCH_ARMADA_XP
@@ -394,7 +394,7 @@ config CPU_SHEEVA_PJ4B_V6
 	select DMA_CACHE_RWFO if SMP
 
 config CPU_SHEEVA_PJ4B_V7
-	bool "Support Sheeva processor in V7 mode" if ARCH_ARMADA_XP
+	bool "Support Sheeva processor in V7 mode" if ARCH_ARMADA_XP || ARCH_ARMADA370
 	select CPU_V7
 
 endchoice
@@ -1103,7 +1103,7 @@ config SHEEVA_ERRATA_ARM_CPU_ADD_DELAY_FOR_STREX
 
 config SHEEVA_DEEP_IDLE
 	bool "Enable CPU/L2 Deep Idle Power Management"
-	depends on ARCH_ARMADA_XP && CPU_IDLE
+	depends on (ARCH_ARMADA_XP || ARCH_ARMADA370) && CPU_IDLE
 
 config CPU_FREQ_ARMADA_XP
 	bool "Enable CPU frequency scaling"
@@ -1113,10 +1113,23 @@ config STANDBY_UART_WAKE
 	bool "Enable wake up from standby by UART"
 	depends on ARCH_ARMADA_XP && CPU_IDLE && HOTPLUG_CPU
 
+config ARMADA_SUPPORT_DEEP_IDLE_DRAM_SR
+	bool "Support DDR Self-Refresh in Deep-Idle"
+	default n
+	depends on SHEEVA_DEEP_IDLE
+
+config ARMADA_SUPPORT_DEEP_IDLE_FAST_EXIT
+	bool "Enable Fast Exit from Deep-Idle"
+	default y
+	depends on SHEEVA_DEEP_IDLE
+	help
+	  Enable fast exit from Deep-Idle by using a reserved block in crypto engine SRAM.
+
 config CACHE_AURORA_L2
 	bool "Enable Marvell Aurora L2 cache controller"
-	depends on ARCH_ARMADA_XP
+	depends on ARCH_ARMADA_XP || ARCH_ARMADA370
 	default y
+	select OUTER_CACHE if ARCH_ARMADA370
 	help
 	  This option enables the Marvell Aurora L2 cache controller.
 
@@ -1158,7 +1171,7 @@ config ENABLE_UNALINGED_ACCESS_FAULT
 
 config AURORA_IO_CACHE_COHERENCY
 	bool "Enable Marvell Aurora I/O cache coherency"
-	depends on ARCH_ARMADA_XP
+	depends on ARCH_ARMADA_XP || ARCH_ARMADA370
 	default y
 	help
 	  This option enables the hardware mechanism for I/O cache coherency.
@@ -1180,7 +1193,7 @@ config MV_SUPPORT_L2_DEPOSIT
 
 config MV_SUPPORT_64KB_PAGE_SIZE
 	bool "Support 64KB page size"
-	depends on ARCH_ARMADA_XP
+	depends on ARCH_ARMADA_XP || ARCH_ARMADA370
 	default n
 	help
 	  This option enables 64KB pages.
diff --git a/arch/arm/mm/Makefile b/arch/arm/mm/Makefile
index 030cb9b..d93253f 100644
--- a/arch/arm/mm/Makefile
+++ b/arch/arm/mm/Makefile
@@ -2,7 +2,9 @@
 # Makefile for the linux arm-specific parts of the memory manager.
 #
 
-include 	  $(srctree)/arch/arm/mach-armadaxp/config/mvRules.mk
+ifneq ($(MACHINE),)
+include $(srctree)/$(MACHINE)/config/mvRules.mk
+endif
 
 obj-y				:= dma-mapping.o extable.o fault.o init.o \
 				   iomap.o
diff --git a/arch/arm/mm/mmu.c b/arch/arm/mm/mmu.c
index 1a7a38d..a3ec4f2 100644
--- a/arch/arm/mm/mmu.c
+++ b/arch/arm/mm/mmu.c
@@ -986,8 +986,7 @@ void __init sanity_check_meminfo(void)
 
 		j++;
 	}
-#ifndef CONFIG_ARCH_ARMADA_XP
-#ifdef CONFIG_HIGHMEM
+#if !defined (ARCH_PLAT_ARMADA) && defined (CONFIG_HIGHMEM)
 	if (highmem) {
 		const char *reason = NULL;
 
@@ -1007,7 +1006,6 @@ void __init sanity_check_meminfo(void)
 		}
 	}
 #endif
-#endif
 	meminfo.nr_banks = j;
 	high_memory = __va(arm_lowmem_limit - 1) + 1;
 	memblock_set_current_limit(arm_lowmem_limit);
diff --git a/arch/arm/mm/proc-sheeva_pj4bv7.S b/arch/arm/mm/proc-sheeva_pj4bv7.S
index a917bd4..1936ca3 100644
--- a/arch/arm/mm/proc-sheeva_pj4bv7.S
+++ b/arch/arm/mm/proc-sheeva_pj4bv7.S
@@ -16,7 +16,12 @@
 #include <asm/hwcap.h>
 #include <asm/pgtable-hwdef.h>
 #include <asm/pgtable.h>
+#if defined(CONFIG_ARCH_ARMADA_XP)
 #include <mach/armadaxp.h>
+#elif defined(CONFIG_ARCH_ARMADA370)
+#include <mach/armada370.h>
+#include <mach/kw_macro.h>
+#endif
 
 #include "proc-macros.S"
 #include "sheeva_pj4b-macros.S"
diff --git a/arch/arm/tools/mach-types b/arch/arm/tools/mach-types
index 5f7f4a6..0ca33a4 100644
--- a/arch/arm/tools/mach-types
+++ b/arch/arm/tools/mach-types
@@ -517,6 +517,7 @@ cm_a510			MACH_CM_A510		CM_A510			3020
 armada_xp_gp		MACH_ARMADA_XP_GP	ARMADA_XP_GP		3035
 armada_xp_db		MACH_ARMADA_XP_DB	ARMADA_XP_DB		3036
 armada_xp_rdsrv		MACH_ARMADA_XP_RDSRV	ARMADA_XP_RDSRV		3037
+armada_370		MACH_ARMADA_370		ARMADA_370		3038
 armada_xp_rd_nas	MACH_ARMADA_XP_RD_NAS	ARMADA_XP_RD_NAS	3500
 tx28			MACH_TX28		TX28			3043
 pcontrol_g20		MACH_PCONTROL_G20	PCONTROL_G20		3062
diff --git a/drivers/rtc/Kconfig b/drivers/rtc/Kconfig
index 6385fb2..c00651a 100644
--- a/drivers/rtc/Kconfig
+++ b/drivers/rtc/Kconfig
@@ -979,7 +979,7 @@ config RTC_DRV_TX4939
 
 config RTC_DRV_MV
 	tristate "Marvell SoC RTC"
-	depends on ARCH_KIRKWOOD || ARCH_DOVE || ARCH_ARMADA_XP
+	depends on ARCH_KIRKWOOD || ARCH_DOVE || ARCH_ARMADA_XP || ARCH_ARMADA370
 	help
 	  If you say yes here you will get support for the in-chip RTC
 	  that can be found in some of Marvell's SoC devices, such as
diff --git a/drivers/tty/serial/serial_core.c b/drivers/tty/serial/serial_core.c
index f4b0e9a..5c407cd 100644
--- a/drivers/tty/serial/serial_core.c
+++ b/drivers/tty/serial/serial_core.c
@@ -2042,6 +2042,9 @@ uart_report_port(struct uart_driver *drv, struct uart_port *port)
 	case UPIO_MEM32:
 	case UPIO_AU:
 	case UPIO_TSI:
+#if defined(CONFIG_ARCH_ARMADA370)
+	case UPIO_DWAPB:
+#endif
 		snprintf(address, sizeof(address),
 			 "MMIO 0x%llx", (unsigned long long)port->mapbase);
 		break;
@@ -2478,6 +2481,9 @@ int uart_match_port(struct uart_port *port1, struct uart_port *port2)
 	case UPIO_MEM32:
 	case UPIO_AU:
 	case UPIO_TSI:
+#if defined(CONFIG_ARCH_ARMADA370)
+	case UPIO_DWAPB:
+#endif
 		return (port1->mapbase == port2->mapbase);
 	}
 	return 0;
diff --git a/fs/splice.c b/fs/splice.c
index fb83cfb..a72227b 100644
--- a/fs/splice.c
+++ b/fs/splice.c
@@ -2092,7 +2092,7 @@ SYSCALL_DEFINE6(splice, int, fd_in, loff_t __user *, off_in,
 		int, fd_out, loff_t __user *, off_out,
 		size_t, len, unsigned int, flags)
 {
-	long error;
+	int error;
 	struct file *in, *out;
 	int fput_in, fput_out;
 	struct socket *sock = NULL;
@@ -2141,8 +2141,7 @@ done:
 	}
 
 	return error;
-	
-	}
+}
 
 /*
  * Make sure there's data to read. Wait for input if we can, otherwise
@@ -2481,9 +2480,8 @@ static int __init init_splice_pools(void)
 	unsigned int rcv_pool_size= sizeof(struct recvfile_ctl_blk) * MAX_PAGES_PER_RECVFILE;
 	unsigned int kve_pool_size= sizeof(struct kvec) * MAX_PAGES_PER_RECVFILE;
 
-	rcv_pool =  common_mempool_create(4 * num_possible_cpus(), rcv_pool_size);
-	kvec_pool = common_mempool_create(4 * num_possible_cpus(), kve_pool_size);
-
+	rcv_pool =  common_mempool_create((8 * num_possible_cpus()), rcv_pool_size);
+	kvec_pool = common_mempool_create((8 * num_possible_cpus()), kve_pool_size);
 	if (!rcv_pool || !kvec_pool)
 	{
 		return -ENOMEM;
diff --git a/include/linux/serial_core.h b/include/linux/serial_core.h
index 3b7e2b6..91d8441 100644
--- a/include/linux/serial_core.h
+++ b/include/linux/serial_core.h
@@ -326,6 +326,12 @@ struct uart_port {
 #define UPIO_MEM32		(3)
 #define UPIO_AU			(4)			/* Au1x00 type IO */
 #define UPIO_TSI		(5)			/* Tsi108/109 type IO */
+
+#if defined (CONFIG_ARCH_ARMADA370)
+#define UPIO_DWAPB		(6)
+#define UPIO_DWAPB32		(7)
+#endif
+
 #define UPIO_RM9000		(6)			/* RM9000 type IO */
 
 	unsigned int		read_status_mask;	/* driver specific */
-- 
1.7.5.4

