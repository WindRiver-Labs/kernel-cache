From 71f8810e3c7afb07659feaa2120982a82ca9172d Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Mon, 20 May 2013 15:55:09 +0300
Subject: [PATCH 0663/1825] PPv2: add API - set port's number of BM long and
 short pool buffers

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit cbf4aaa782d5d720726c725115e18dabfcca69f0

Change-Id: I165b4cc71be074474aef8ae631aeed4d8a6015a7
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/1877
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_pp2/net_dev/mv_eth_bm_sysfs.c               |   30 ++++++++++-----
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |   40 +++++++++++++++++++-
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    1 +
 3 files changed, 60 insertions(+), 11 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_bm_sysfs.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_bm_sysfs.c
index b7684d0..fdcf946 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_bm_sysfs.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_bm_sysfs.c
@@ -40,9 +40,11 @@ static ssize_t mv_eth_help(char *buf)
 {
 	int off = 0;
 
-	off += sprintf(buf+off, "echo [pool]         > poolRegs    - print BM pool registers\n");
-	off += sprintf(buf+off, "echo [pool]         > poolStatus  - print BM pool status\n");
-	off += sprintf(buf+off, "echo [pool] [size]  > poolSize    - set packet size <size> to BM pool <pool>\n");
+	off += sprintf(buf+off, "echo [pool]                         > poolRegs       - print BM pool registers\n");
+	off += sprintf(buf+off, "echo [pool]                         > poolStatus     - print BM pool status\n");
+	off += sprintf(buf+off, "echo [pool] [size]                  > poolSize       - set packet size <size> to BM pool <pool>\n");
+	off += sprintf(buf+off, "echo [port] [short_num] [long_num]  > portSwfBuffNum - set buffers num for port's long and short pool\n");
+	off += sprintf(buf+off, "echo [port] [short_num] [long_num]  > portHwfBuffNum - set buffers num for port's long and short pool\n");
 
 	return off;
 }
@@ -65,15 +67,15 @@ static ssize_t mv_eth_port_store(struct device *dev,
 {
 	const char      *name = attr->attr.name;
 	int             err;
-	unsigned int    p, v;
+	unsigned int    p, v, v1;
 	unsigned long   flags;
 
 	if (!capable(CAP_NET_ADMIN))
 		return -EPERM;
 
 	/* Read port and value */
-	err = p = v = 0;
-	sscanf(buf, "%d %d", &p, &v);
+	err = p = v = v1 = 0;
+	sscanf(buf, "%d %d %d", &p, &v, &v1);
 
 	local_irq_save(flags);
 
@@ -83,6 +85,10 @@ static ssize_t mv_eth_port_store(struct device *dev,
 		mv_eth_pool_status_print(p);
 	} else if (!strcmp(name, "poolSize")) {
 		err = mv_eth_ctrl_pool_size_set(p, v);
+	} else if (!strcmp(name, "portSwfBuffNum")) {
+		err = mv_eth_ctrl_port_buf_num_set(p, v, v1);
+	} else if (!strcmp(name, "portHwfBuffNum")) {
+		err = mv_eth_ctrl_port_hwf_buf_num_set(p, v, v1);
 	} else {
 		err = 1;
 		printk(KERN_ERR "%s: illegal operation <%s>\n", __func__, attr->attr.name);
@@ -96,16 +102,20 @@ static ssize_t mv_eth_port_store(struct device *dev,
 	return err ? -EINVAL : len;
 }
 
-static DEVICE_ATTR(help,        S_IRUSR, mv_eth_show, NULL);
-static DEVICE_ATTR(poolRegs,   	S_IWUSR, NULL, mv_eth_port_store);
-static DEVICE_ATTR(poolStatus, 	S_IWUSR, NULL, mv_eth_port_store);
-static DEVICE_ATTR(poolSize, 	S_IWUSR, NULL, mv_eth_port_store);
+static DEVICE_ATTR(help,		S_IRUSR, mv_eth_show, NULL);
+static DEVICE_ATTR(poolRegs,		S_IWUSR, NULL, mv_eth_port_store);
+static DEVICE_ATTR(poolStatus,		S_IWUSR, NULL, mv_eth_port_store);
+static DEVICE_ATTR(poolSize,		S_IWUSR, NULL, mv_eth_port_store);
+static DEVICE_ATTR(portHwfBuffNum,	S_IWUSR, NULL, mv_eth_port_store);
+static DEVICE_ATTR(portSwfBuffNum,	S_IWUSR, NULL, mv_eth_port_store);
 
 static struct attribute *mv_eth_attrs[] = {
 	&dev_attr_help.attr,
 	&dev_attr_poolRegs.attr,
 	&dev_attr_poolStatus.attr,
 	&dev_attr_poolSize.attr,
+	&dev_attr_portHwfBuffNum.attr,
+	&dev_attr_portSwfBuffNum.attr,
 	NULL
 };
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index c086ca2..11b4741 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -518,12 +518,50 @@ int mv_eth_ctrl_dbg_flag(int port, u32 flag, u32 val)
 	return 0;
 }
 
+/* Set number of buffers for this port's HWF long pool */
+/* Add or remove buffers to this pool accordingly      */
+int mv_eth_ctrl_port_hwf_buf_num_set(int port, int hwf_long_num, int hwf_short_num)
+{
+	struct eth_port *pp = mv_eth_port_by_id(port);
+
+	if (pp == NULL) {
+		printk(KERN_INFO "port doenst not exist (%d) in %s\n" , port, __func__);
+		return -EINVAL;
+	}
+
+	if (pp->flags & MV_ETH_F_STARTED) {
+		printk(KERN_ERR "Port %d must be stopped before\n", port);
+		return -EINVAL;
+	}
+	if (pp->hwf_pool_long != NULL) {
+		/* Update number of buffers in existing pool (allocate or free) */
+		if (pp->hwf_pool_long_num > hwf_long_num)
+			mv_eth_pool_free(pp->hwf_pool_long->pool, pp->hwf_pool_long_num - hwf_long_num);
+		else if (hwf_long_num > pp->hwf_pool_long_num)
+			mv_eth_pool_add(pp->hwf_pool_long->pool, hwf_long_num - pp->hwf_pool_long_num);
+	}
+	pp->hwf_pool_long_num = hwf_long_num;
+
+	if (pp->hwf_pool_short != NULL) {
+		/* Update number of buffers in existing pool (allocate or free) */
+		if (pp->hwf_pool_short_num > hwf_short_num)
+			mv_eth_pool_free(pp->hwf_pool_short->pool, pp->hwf_pool_short_num - hwf_short_num);
+		else if (hwf_short_num > pp->hwf_pool_short_num)
+			mv_eth_pool_add(pp->hwf_pool_short->pool, hwf_short_num - pp->hwf_pool_short_num);
+	}
+	pp->hwf_pool_short_num = hwf_short_num;
+
+	return 0;
+}
+
+/* Set number of buffers for this port's SWF long pool */
+/* Add or remove buffers to this pool accordingly      */
 int mv_eth_ctrl_port_buf_num_set(int port, int long_num, int short_num)
 {
 	struct eth_port *pp = mv_eth_port_by_id(port);
 
 	if (pp == NULL) {
-		printk(KERN_INFO "port doens not exist (%d) in %s\n" , port, __func__);
+		printk(KERN_INFO "port doenst not exist (%d) in %s\n" , port, __func__);
 		return -EINVAL;
 	}
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index c3d430c..f0d1143 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -791,6 +791,7 @@ int	    mv_eth_ctrl_dbg_flag(int port, u32 flag, u32 val);
 int	    mv_eth_ctrl_txq_size_set(int port, int txp, int txq, int txq_size, int hwf_size);
 int         mv_eth_ctrl_rxq_size_set(int port, int rxq, int value);
 int         mv_eth_ctrl_port_buf_num_set(int port, int long_num, int short_num);
+int         mv_eth_ctrl_port_hwf_buf_num_set(int port, int hwf_long_num, int hwf_short_num);
 int         mv_eth_ctrl_pool_size_set(int pool, int pkt_size);
 int         mv_eth_ctrl_set_poll_rx_weight(int port, u32 weight);
 void        mv_eth_tx_desc_print(struct pp2_tx_desc *desc);
-- 
1.7.5.4

