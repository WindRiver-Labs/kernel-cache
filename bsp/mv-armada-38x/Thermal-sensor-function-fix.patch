From f637df8436d4343a3287bddc5c8068af936c88ec Mon Sep 17 00:00:00 2001
From: Igor Patrik <igorp@marvell.com>
Date: Tue, 18 Jun 2013 16:05:44 +0200
Subject: [PATCH 0719/1825] Thermal sensor function fix

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit a4f9a78e9fbc646afbcee78abe46b90101681c07

        Thermal sensor function differ for ALP and A375
        so, function moved to family, mvCtrlGetJuncTemp()
        and mv_cmd.c call this function.

Change-Id: I8008efe155c89ebc22871895923fb5be2c2f3859
Reviewed-on: http://vgitil04.il.marvell.com:8080/2276
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Igor Patrik <igorp@marvell.com>
Tested-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   39 ++++++++++++++++++++
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |   18 +++++----
 2 files changed, 49 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 1549af2..561df60 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -1832,3 +1832,42 @@ MV_BOOL mvCtrlDDRECC(MV_VOID)
 
 	return (reg & (0x1 << REG_SDRAM_CONFIG_ECC_OFFS)) ? MV_TRUE : MV_FALSE;
 }
+
+/*******************************************************************************
+* mvCtrlGetJuncTemp
+*
+* DESCRIPTION:
+*       Read temperature, calibrate at first time the TSEN
+*
+* INPUT:
+*	None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       Tj value.
+*******************************************************************************/
+MV_U32 mvCtrlGetJuncTemp(MV_VOID)
+{
+	/*Used Hard Coded values, TODO sync with Spec*/
+	MV_U32 reg = 0;
+
+	/* init the TSEN sensor once */
+	if ((MV_REG_READ(TSEN_STATE_REG) & TSEN_STATE_MASK) == 0) {
+		MV_REG_BIT_RESET(TSEN_STATE_REG, TSEN_STATE_MASK);
+
+		MV_REG_WRITE(TSEN_STATE_REG, 0x8011E214);
+
+		reg = MV_REG_READ(TSEN_CONF_REG);
+
+		reg = 0x00a80909;
+		MV_REG_WRITE(TSEN_CONF_REG, reg);
+		mvOsDelay(10);
+	}
+
+	reg = MV_REG_READ(TSEN_STATUS_REG);
+	reg = (reg & TSEN_STATUS_TEMP_OUT_MASK) >> TSEN_STATUS_TEMP_OUT_OFFSET;
+
+	return (3171900 - (10000 * reg)) / 13553;
+}
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index 391ade3..ed9ca0d 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -246,15 +246,16 @@ typedef struct _boardSerdesConf {
 } MV_SERDES_CFG;
 
 /* Termal Sensor Registers */
-#define TSEN_STATUS_REG                         0x184C4
-#define TSEN_STATUS_TEMP_OUT_OFFSET             1
-#define TSEN_STATUS_TEMP_OUT_MASK               (0x1FF << TSEN_STATUS_TEMP_OUT_OFFSET)
+#define TSEN_STATE_REG							0xE8070
+#define TSEN_STATE_OFFSET						31
+#define TSEN_STATE_MASK							(0x1 << TSEN_STATE_OFFSET)
 
-#define TSEN_CONF_REG                           0x184D0
-#define TSEN_CONF_OTF_CALIB_MASK                (0x1 << 30)
-#define TSEN_CONF_REF_CAL_MASK                  (0x1FF << 11)
-#define TSEN_CONF_SOFT_RESET_MASK               (0x1 << 1)
-#define TSEN_CONF_START_CALIB_MASK              (0x1 << 25)
+#define TSEN_CONF_REG							0xE8074
+#define TSEN_CONF_OTF_CALIB_MASK				(0x1 << 8)
+
+#define TSEN_STATUS_REG							0xE8078
+#define TSEN_STATUS_TEMP_OUT_OFFSET				0
+#define TSEN_STATUS_TEMP_OUT_MASK				(0x1FF << TSEN_STATUS_TEMP_OUT_OFFSET)
 
 /* BIOS Modes related defines */
 #define SAR_CPU_FAB_GET(cpu, fab)       (((cpu & 0x7) << 21) | ((fab & 0xF) << 24))
@@ -276,6 +277,7 @@ MV_STATUS mvCtrlBoardConfigGet(MV_U8 *tempVal);
 MV_U32 mvCtrlSocUnitInfoNumGet(MV_UNIT_ID unit);
 MV_STATUS mvCtrlEnvInit(MV_VOID);
 MV_U32    mvCtrlMppRegGet(MV_U32 mppGroup);
+MV_U32 mvCtrlGetJuncTemp(MV_VOID);
 
 #if defined(MV_INCLUDE_PEX)
 MV_U32 mvCtrlPexMaxIfGet(MV_VOID);
-- 
1.7.5.4

