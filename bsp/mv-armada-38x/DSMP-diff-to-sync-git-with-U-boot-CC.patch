From 4d8fdb70203bcdc0b1405cba2fda1659ee5914ab Mon Sep 17 00:00:00 2001
From: Tawfik Bayouk <tawfik@marvell.com>
Date: Tue, 21 Aug 2012 17:34:20 +0300
Subject: [PATCH 0117/1825] DSMP: diff to sync git with U-boot CC

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 700a251fca17cc04b757194721c6580ddc3f4b0c

Change-Id: Ie36b37f40d4536ed96393ef7fe02778ad7afddfc
Signed-off-by: Tawfik Bayouk <tawfik@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/common/mvCommon.h            |    2 +-
 arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIfRegs.h |   13 +++++++++++
 arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c    |   10 ++++++--
 arch/arm/plat-armada/mv_hal/pex/mvPex.c           |   23 +++++++++++++++++---
 arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h       |    1 +
 5 files changed, 41 insertions(+), 8 deletions(-)

diff --git a/arch/arm/plat-armada/common/mvCommon.h b/arch/arm/plat-armada/common/mvCommon.h
index f26b681..1301e01 100644
--- a/arch/arm/plat-armada/common/mvCommon.h
+++ b/arch/arm/plat-armada/common/mvCommon.h
@@ -74,7 +74,6 @@ extern "C" {
 #ifndef MV_ASMLANGUAGE
 #include "mv802_3.h"
 #include "mvVideo.h"
-#endif
 
 /* The golden ration: an arbitrary value */
 #define MV_JHASH_GOLDEN_RATIO           0x9e3779b9
@@ -101,6 +100,7 @@ static inline MV_U32 mv_jhash_3words(MV_U32 a, MV_U32 b, MV_U32 c, MV_U32 initva
 
 	return c;
 }
+#endif
 
 
 /* Swap tool */
diff --git a/arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIfRegs.h b/arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIfRegs.h
index 7b921e9..1d15df5 100644
--- a/arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIfRegs.h
+++ b/arch/arm/plat-armada/mv_hal/ddr2_3/mvDramIfRegs.h
@@ -153,6 +153,19 @@ extern "C" {
 #define DLB_ENABLE 0x1
 #define DLB_WRITE_COALESING 0x4
 #define DLB_AXI_PREFETCH_EN 0x8
+#define DLB_BUS_Optimization_Weights_REG     0x1704
+#define DLB_Eviction_Timers_Register_REG     0x1710
+#define PreFetchNLnSzTr (0x1 << 6)
+#define PF_RegretEn (0x1<<9)
+#define SameBankOPageWeight (0x1 << 0)
+#define DiffBankOPageWeight (0x1 << 2)
+#define SameCmdWeight (0x1 << 6)
+#define PfRspWeight (0x1 << 16)
+#define PfPrioSrc (0x1 << 19)
+#define EvictBlockWin (0x18B << 0)
+#define EvictBlockWin_MASK (0x3FF << 0)
+#define EvictBlockWinLow ( 0x1f << 10)
+#define EvictBlockWinLow_MASK ( 0x1F << 10)
 
 #ifdef __cplusplus
 }
diff --git a/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c b/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c
index ae38a92..3f79634 100644
--- a/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c
+++ b/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c
@@ -1709,9 +1709,10 @@ MV_VOID mvEth1540A0PhyBasicInit(MV_U32 ethPortNum, MV_BOOL eeeEnable)
 	mvEthPhyRegWrite(i, 0x16, 0);
 
 	/* Power up the phy */
-	mvEthPhyRegRead(i, ETH_PHY_CTRL_REG, &reg);
-	reg &= ~(ETH_PHY_CTRL_POWER_DOWN_MASK);
-	mvEthPhyRegWrite(i, ETH_PHY_CTRL_REG, reg);
+	mvEthPhyRegRead(i, 0x4, &reg);
+	reg |= 0x1E0;
+	mvEthPhyRegWrite(i, 0x4, reg);
+       mvEthPhyRegWrite(i, 0x16, 1);
 
 	/* Disable Drop BadTag */
 	mvEthPhyRegWrite(i, 22, 0x0010);
@@ -1812,6 +1813,9 @@ MV_VOID mvEth1540A0PhyBasicInit(MV_U32 ethPortNum, MV_BOOL eeeEnable)
 	mvEthPhyRegWrite(i, 22, 0x0000);
 	mvEthPhyRegWrite(i, 0, 0x9140);
 
+	mvEthPhyRegRead(i, ETH_PHY_CTRL_REG, &reg);
+	reg &= ~(ETH_PHY_CTRL_POWER_DOWN_MASK);
+	mvEthPhyRegWrite(i, ETH_PHY_CTRL_REG, reg);
 	mvOsDelay(100);
 	/*  Sleep 3000 */
 	/* mvOsDelay(300); */
diff --git a/arch/arm/plat-armada/mv_hal/pex/mvPex.c b/arch/arm/plat-armada/mv_hal/pex/mvPex.c
index b00ec35..544532c 100644
--- a/arch/arm/plat-armada/mv_hal/pex/mvPex.c
+++ b/arch/arm/plat-armada/mv_hal/pex/mvPex.c
@@ -122,7 +122,6 @@ MV_STATUS mvPexInit(MV_U32 pexIf, MV_PEX_TYPE pexType, MV_PEX_HAL_DATA *halData)
 			(ctrlModel != MV_78000_DEV_ID)) {
 		/* Read current value of TXAMP */
 		MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexIf), 0x80820000);	/* Write the read command   */
-
 		regVal = MV_REG_READ(PEX_PHY_ACCESS_REG(pexIf));	/* Extract the data         */
 
 		/* Prepare new data for write */
@@ -130,6 +129,7 @@ MV_STATUS mvPexInit(MV_U32 pexIf, MV_PEX_TYPE pexType, MV_PEX_HAL_DATA *halData)
 		regVal |= 0x4;	/* Set the new value        */
 		regVal &= ~0x80000000;	/* Set "write" command      */
 		MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexIf), regVal);	/* Write the write command  */
+
 #ifndef MV88F78X60_Z1
 		/* in DSMP A0 we should enable the target link width */
 		/* Read current value of Dynamic width management register 0x1A30*/
@@ -160,7 +160,6 @@ MV_STATUS mvPexInit(MV_U32 pexIf, MV_PEX_TYPE pexType, MV_PEX_HAL_DATA *halData)
 			regVal |= (BIT0 | BIT3);
 			regVal &= ~0x80000000;	/* Set "write" command      */
 			MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexIf), regVal);	/* Write the write command  */
-
 			MV_REG_WRITE(0x31b00, 0x80860000);	/* Write the read command   */
 			regVal = MV_REG_READ(0x31b00);	/* Extract the data         */
 			regVal |= (BIT0 | BIT3);
@@ -221,10 +220,13 @@ MV_STATUS mvPexInit(MV_U32 pexIf, MV_PEX_TYPE pexType, MV_PEX_HAL_DATA *halData)
 		status = MV_REG_READ(PEX_CFG_DIRECT_ACCESS(pexIf, PEX_STATUS_AND_COMMAND));
 		status |= PXSAC_INT_DIS;
 		MV_REG_WRITE(PEX_CFG_DIRECT_ACCESS(pexIf, PEX_STATUS_AND_COMMAND), status);
-	} else
+	} else {
 		/* TODO: added by NadavH 14/12/10 - requested by CV to support EP Compliance */
-		MV_REG_WRITE(PEX_DBG_CTRL_REG(pexIf), 0x0F62F0C0);
+		regVal = MV_REG_READ(PEX_DBG_CTRL_REG(pexIf));
+		regVal &= ~(BIT16 | BIT19);
+		MV_REG_WRITE(PEX_DBG_CTRL_REG(pexIf), regVal);
 
+	}
 	/* now wait 1ms to be sure the link is valid */
 	mvOsDelay(1);
 
@@ -998,6 +1000,7 @@ MV_VOID mvPexPhyRegWrite(MV_U32 pexIf, MV_U32 regOffset, MV_U16 value)
 	}
 	regAddr = (((regOffset & 0x3fff) << 16) | value);
 	MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexIf), regAddr);
+
 }
 
 /*******************************************************************************
@@ -1090,6 +1093,8 @@ MV_U32 mvPexForceX1(MV_U32 pexIf)
 *******************************************************************************/
 MV_VOID mvPexIfEnable(MV_U32 pexIf, MV_PEX_TYPE pexType)
 {
+	MV_U32 regVal;
+
 /* NOTE: this was asked by CV, bit is reserved in the spec, but causing problems, disabling for now. */
 	/* MV_REG_BIT_SET(PEX_CTRL_REG(pexIf), PXCR_AUTO_SPEED_CTRL_MASK); */
 
@@ -1099,7 +1104,17 @@ MV_VOID mvPexIfEnable(MV_U32 pexIf, MV_PEX_TYPE pexType)
 		/* Change pex mode in capability reg */
 		MV_REG_BIT_RESET(PEX_CFG_DIRECT_ACCESS(pexIf, PEX_CAPABILITY_REG), BIT22);
 		MV_REG_BIT_SET(PEX_CFG_DIRECT_ACCESS(pexIf, PEX_CAPABILITY_REG), BIT20);
+
+		regVal = MV_REG_READ(PEX_CAPABILITIES_REG(pexIf));
+		regVal |= 0x00F00000;
+		regVal &= ~(BIT23 | BIT22 | BIT21);
+		MV_REG_WRITE(PEX_CAPABILITIES_REG(pexIf), regVal);
 	} else {
+		regVal = MV_REG_READ(PEX_CAPABILITIES_REG(pexIf));
+		regVal |= 0x00F00000;
+		regVal &= ~(BIT23 | BIT21 | BIT20);
+		MV_REG_WRITE(PEX_CAPABILITIES_REG(pexIf), regVal);
+
 		MV_REG_BIT_SET(PEX_CTRL_REG(pexIf), PXCR_DEV_TYPE_CTRL_MASK);
 	}
 	return;
diff --git a/arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h b/arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h
index 04266bf..baa4ffd 100644
--- a/arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h
@@ -174,6 +174,7 @@ extern "C" {
 /********************************************/
 #define PEX_CTRL_REG(pexIf)				((MV_PEX_IF_REGS_BASE(pexIf)) + 0x1A00)
 #define PEX_LINK_CAPABILITIES_REG(pexIf)		((MV_PEX_IF_REGS_BASE(pexIf)) + 0x6C)
+#define PEX_CAPABILITIES_REG(pexIf)			((MV_PEX_IF_REGS_BASE(pexIf)) + 0x60)
 #define PEX_STATUS_REG(pexIf)				((MV_PEX_IF_REGS_BASE(pexIf)) + 0x1A04)
 #define PEX_COMPLT_TMEOUT_REG(pexIf)			((MV_PEX_IF_REGS_BASE(pexIf)) + 0x1A10)
 #define PEX_PWR_MNG_EXT_REG(pexIf)			((MV_PEX_IF_REGS_BASE(pexIf)) + 0x1A18)
-- 
1.7.5.4

