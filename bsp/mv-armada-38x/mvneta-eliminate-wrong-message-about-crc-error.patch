From fd6f06e09070bfeaafa95e7242216a70dab7656b Mon Sep 17 00:00:00 2001
From: Liu Haitao <haitao.liu@windriver.com>
Date: Thu, 27 Jul 2017 11:27:01 +0800
Subject: [PATCH 1/5] mvneta: eliminate wrong message about crc error.

Issue: LIN8-7049

- there are few reasons in mvneta_rx() function when received packet is dropped.
  crc error should be printed only if error bit [16] is set in rx_desc

The patch was imported from the Marvell git hub :
(https://github.com/MarvellEmbeddedProcessors/linux-marvell/commit/2385a497837cef193cf4cf6439c7a6e800474809)
as of commit id 2385a497837cef193cf4cf6439c7a6e800474809

Change-Id: I29828ab79f90e9e501c9a0987c11b2f6a55d33ec
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/29802
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Nir Erez <nerez@marvell.com>
Reviewed-by: Lior Amsalem <alior@marvell.com>

Signed-off-by: Liu Haitao <haitao.liu@windriver.com>
---
 drivers/net/ethernet/marvell/mvneta.c |   27 ++++++++++++---------------
 1 files changed, 12 insertions(+), 15 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index 1171aa2..3348289 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -1003,6 +1003,8 @@ static void mvneta_set_other_mcast_table(struct mvneta_port *pp, int queue)
 		mvreg_write(pp, MVNETA_DA_FILT_OTH_MCAST + offset, val);
 }
 
+
+
 static void mvneta_set_autoneg(struct mvneta_port *pp, int enable)
 {
 	u32 val;
@@ -1010,15 +1012,11 @@ static void mvneta_set_autoneg(struct mvneta_port *pp, int enable)
 	if (enable) {
 		val = mvreg_read(pp, MVNETA_GMAC_AUTONEG_CONFIG);
 		val &= ~(MVNETA_GMAC_FORCE_LINK_PASS |
-			 MVNETA_GMAC_FORCE_LINK_DOWN |
-			 MVNETA_GMAC_AN_FLOW_CTRL_EN);
-
-		if (pp->use_inband_status) {
-			val |= MVNETA_GMAC_INBAND_AN_ENABLE;
-		}
-
-		val |= MVNETA_GMAC_AN_SPEED_EN |
-		       MVNETA_GMAC_AN_DUPLEX_EN;
+				MVNETA_GMAC_FORCE_LINK_DOWN |
+				MVNETA_GMAC_AN_FLOW_CTRL_EN);
+		val |= MVNETA_GMAC_INBAND_AN_ENABLE |
+			MVNETA_GMAC_AN_SPEED_EN |
+			MVNETA_GMAC_AN_DUPLEX_EN;
 		mvreg_write(pp, MVNETA_GMAC_AUTONEG_CONFIG, val);
 
 		val = mvreg_read(pp, MVNETA_GMAC_CLOCK_DIVIDER);
@@ -1031,8 +1029,8 @@ static void mvneta_set_autoneg(struct mvneta_port *pp, int enable)
 	} else {
 		val = mvreg_read(pp, MVNETA_GMAC_AUTONEG_CONFIG);
 		val &= ~(MVNETA_GMAC_INBAND_AN_ENABLE |
-		       MVNETA_GMAC_AN_SPEED_EN |
-		       MVNETA_GMAC_AN_DUPLEX_EN);
+				MVNETA_GMAC_AN_SPEED_EN |
+				MVNETA_GMAC_AN_DUPLEX_EN);
 		mvreg_write(pp, MVNETA_GMAC_AUTONEG_CONFIG, val);
 
 		val = mvreg_read(pp, MVNETA_GMAC_CLOCK_DIVIDER);
@@ -1645,10 +1643,10 @@ static int mvneta_rx(struct mvneta_port *pp, int rx_todo,
 		phys_addr = rx_desc->buf_phys_addr;
 
 		if (!mvneta_rxq_desc_is_first_last(rx_status) ||
-		    (rx_status & MVNETA_RXD_ERR_SUMMARY)) {
-		err_drop_frame:
-			dev->stats.rx_errors++;
+		   (rx_status & MVNETA_RXD_ERR_SUMMARY)) {
 			mvneta_rx_error(pp, rx_desc);
+err_drop_frame:
+			dev->stats.rx_errors++;
 			/* leave the descriptor untouched */
 			continue;
 		}
@@ -3158,7 +3156,6 @@ int mvneta_ethtool_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
 			mvneta_port_up(pp);
 		}
 	}
-
 	return phy_ethtool_sset(pp->phy_dev, cmd);
 }
 
-- 
1.7.5.4

