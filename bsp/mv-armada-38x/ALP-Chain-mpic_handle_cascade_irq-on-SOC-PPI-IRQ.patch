From 1703f9d019577012d77d99b467937293f0f82869 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Wed, 10 Apr 2013 15:15:54 +0300
Subject: [PATCH 0565/1825] ALP: Chain mpic_handle_cascade_irq on SOC PPI IRQ

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 354246fa4aedc592322965b3ded1798347eef627

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I18934d3b85169c631623daae364d4cdbf5eddc9b
Reviewed-on: http://vgitil04.il.marvell.com:8080/1535
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/irq.c |    8 +++++---
 1 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-avantalp/irq.c b/arch/arm/mach-avantalp/irq.c
index 1e6a910..207af8e 100644
--- a/arch/arm/mach-avantalp/irq.c
+++ b/arch/arm/mach-avantalp/irq.c
@@ -23,7 +23,7 @@
 #define SOC_PPI_MASK_SET		0x218b8
 #define SOC_PPI_MASK_CLEAR		0x218bc
 
-static DEFINE_SPINLOCK(irq_controller_lock);
+static DEFINE_RAW_SPINLOCK(irq_controller_lock);
 
 /*
  * Global GPIO interrupt handling
@@ -137,7 +137,7 @@ struct mpic_chip_regs {
 	unsigned long unmask;
 };
 
-static struct mpic_data {
+struct mpic_data {
 	int irq_base;
 	struct irq_domain *domain;
 	struct mpic_chip_regs regs;
@@ -201,6 +201,7 @@ static void mpic_handle_cascade_irq(unsigned int irq, struct irq_desc *desc)
 static int mpic_irq_domain_map(struct irq_domain *d, unsigned int irq,
 			       irq_hw_number_t hwirq)
 {
+	irq_set_percpu_devid(irq);
 	irq_set_chip_and_handler(irq, &mpic_chip, handle_percpu_devid_irq);
 	irq_set_chip_data(irq, d->host_data);
 	set_irq_flags(irq, IRQF_VALID | IRQF_PROBE);
@@ -216,13 +217,14 @@ static void __init alp_cascade_irq_mpic(int irq, int nr_irqs)
 {
 	struct mpic_data *mpic = &mpic_data;
 
-	mpic->irq_base = irq_alloc_descs(-1, irq, nr_irqs, NULL);
+	mpic->irq_base = irq_alloc_descs(-1, irq, nr_irqs, 0);
 	if (IS_ERR_VALUE(mpic->irq_base))
 		BUG();
 
 	mpic->domain = irq_domain_add_legacy(NULL, nr_irqs, mpic->irq_base,
 					     0, &mpic_irq_domain_ops, mpic);
 	WARN_ON(!mpic->domain);
+	irq_set_chained_handler(irq, mpic_handle_cascade_irq);
 }
 
 static void __init alp_cascade_irq_gpio_private(void)
-- 
1.7.5.4

