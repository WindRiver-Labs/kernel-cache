From 8f89fb651cb5ec0e299f986cdb3d45a6a428c998 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Thu, 13 Feb 2014 22:49:33 +0200
Subject: [PATCH 1360/1825] alp: eth complex: Set bus sampling timing clock
 configuration

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 1c247684f0120b19c70ea48bc758631502f3cc04

	NegEdge or PosEdge is the clock configuration to select the timing of sampling the data on the bus
	For the following fields, NegEdge was selected (sampled at bit low)
	- Bit22 Configures data sample stage of MPPs (RGMII) to Switch Port 4
	- Bit28 Configures data sample stage of GbE Port 0 to MPPs (RGMII)

Change-Id: Iaa48a7dacea5df0e4682e4b67ee4fc5bbb1de071
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5640
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c    |   19 +++++++++++++++++++
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h    |   16 ++++++++++++----
 2 files changed, 31 insertions(+), 4 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
index 2dba355..bc06539 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
@@ -71,6 +71,23 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "pp2/gmac/mvEthGmacRegs.h"
 #include "pp2/gbe/mvPp2Gbe.h"
 
+static void mvEthComplexGbeClockControlSet(void)
+{
+	MV_U32 reg;
+	/* Thus fields are not exists in ZX revision */
+	if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID)
+		return;
+
+	/* Change default value of Bit 22, and 28 to NegEdge(0) */
+	reg = MV_REG_READ(MV_ETHCOMP_GBE_PHY_CLOCK_CTRL_REG);
+	/* Field - Switch Port4 To MPP Data Sample */
+	reg &= ~(ETHCC_GBE_PHY_MPP_TO_SW_P4_EDGE_MASK);
+	/* Field - GbE Port 0 To MPP Data Sample */
+	reg &= ~(ETHCC_GBE_PHY_GBE_P0_TO_MPP_EDGE_MASK);
+
+	MV_REG_WRITE(MV_ETHCOMP_GBE_PHY_CLOCK_CTRL_REG, reg);
+}
+
 static void mvEthComplexGbePhySrcSet(MV_U32 phy, MV_U32 src)
 {
 	MV_U32 reg;
@@ -382,6 +399,8 @@ MV_STATUS mvEthComplexInit(MV_U32 ethCompConfig)
 
 	mvEthComplexGopDevEnable();
 
+	mvEthComplexGbeClockControlSet();
+
 	if (c & MV_ETHCOMP_GE_MAC0_2_SW_P6)
 		mvEthComplexMacToSwPort(0, 6, mvBoardMacSpeedGet(0));
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
index 198e2a4..1829e52 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
@@ -69,8 +69,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "mvSysEthConfig.h"
 
 /*******************************************************************************
- * Ports Group Control and Status
- */
+ * Ports Group Control and Status */
 #define MV_ETHCOMP_GOP_CTRL_STAT_REG			MV_ETH_COMPLEX_BASE
 
 #define     ETHCGCS_PORT_DP_CLK_SRC_OFFSET(port)	((port == 0) ? 13 : 14)
@@ -80,8 +79,17 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define     ETHCGCS_GOP_ENABLE_DEV_MASK			(0x1 << ETHCGCS_GOP_ENABLE_DEV_OFFSET)
 
 /*******************************************************************************
- * Ethernet Complex Control 0
- */
+* Ports Group Control and Status */
+#define MV_ETHCOMP_GBE_PHY_CLOCK_CTRL_REG		(MV_ETH_COMPLEX_BASE + 0x1C)
+
+#define     ETHCC_GBE_PHY_MPP_TO_SW_P4_EDGE_OFFSET	22
+#define     ETHCC_GBE_PHY_MPP_TO_SW_P4_EDGE_MASK        (0x1 << ETHCC_GBE_PHY_MPP_TO_SW_P4_EDGE_OFFSET)
+
+#define     ETHCC_GBE_PHY_GBE_P0_TO_MPP_EDGE_OFFSET	28
+#define     ETHCC_GBE_PHY_GBE_P0_TO_MPP_EDGE_MASK	(0x1 << ETHCC_GBE_PHY_MPP_TO_SW_P4_EDGE_OFFSET)
+
+/*******************************************************************************
+ * Ethernet Complex Control 0 */
 #define MV_ETHCOMP_CTRL_REG				(MV_ETH_COMPLEX_BASE + 0x10)
 
 #define     ETHCC_SW_PORT_SRC_OFFSET(port)		(port == 0 ? 4 : (port == 3 ? 5 : \
-- 
1.7.5.4

