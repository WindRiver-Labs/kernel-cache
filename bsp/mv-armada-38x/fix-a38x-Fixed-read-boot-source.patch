From 9272d2cc8461f8e68fba1b18788ae3b643f33bec Mon Sep 17 00:00:00 2001
From: Eli Nidam <elini@marvell.com>
Date: Wed, 20 Nov 2013 15:43:22 +0200
Subject: [PATCH 1144/1825] fix: a38x: Fixed read boot source

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 8b1b2ccf266fe3f6272548c681f3e80e50d05db1

	replace the read boot source from TWSI to S@R register
	this fixed boot source deterction when jumper default in connected.

Change-Id: I8a6e6c91347e0f9f58f800428a80dcdd074dd3a4
Signed-off-by: Eli Nidam <elini@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4384
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../armada_38x_family/boardEnv/mvBoardEnvLib.c     |   10 +++----
 .../armada_38x_family/ctrlEnv/mvCtrlEnvLib.c       |   25 ++++++++++++++++++++
 .../armada_38x_family/ctrlEnv/mvCtrlEnvLib.h       |    1 +
 .../armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h      |    2 +
 4 files changed, 32 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c
index d2550a8..d95ca14 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c
@@ -1028,15 +1028,13 @@ MV_BOARD_BOOT_SRC mvBoardBootDeviceGet()
 	MV_U32 satrBootDeviceValue;
 	MV_SATR_BOOT_TABLE satrBootEntry;
 
-	satrBootDeviceValue = mvBoardSatRRead(MV_SATR_BOOT_DEVICE);
-	if (satrBootDeviceValue == MV_ERROR) {
-		mvOsPrintf("%s: Error: failed to read boot source\n", __func__);
-		mvOsPrintf("Using NAND as the default boot source\n");
-		return MSAR_0_BOOT_SPI_FLASH; /* SPI is the Default Boot source */
-	}
+	satrBootDeviceValue = mvCtrlbootSrcGet();
 
 	satrBootEntry = satrBootSrcTable[satrBootDeviceValue];
 
+	if (-1 == (MV_U32)satrBootEntry.bootSrc)	/* return default for incorrect value */
+		return MSAR_0_BOOT_SPI_FLASH;
+
 	if (satrBootEntry.bootSrc != MSAR_0_BOOT_SPI_FLASH)
 		return satrBootEntry.bootSrc;
 
diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
index 2356c3b..78414c3 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
@@ -438,6 +438,31 @@ MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode)
 	return MV_ERROR;
 }
 /*******************************************************************************
+* mvCtrlbootSrcGet - Get the selected S@R boot source
+*
+* DESCRIPTION:
+*   read board BOOT configuration and return the selcted S@R boot src
+*
+* INPUT:  none
+*
+* OUTPUT: boot source value,
+*
+* RETURN:
+*	boot source value
+*
+*******************************************************************************/
+MV_U32 mvCtrlbootSrcGet(void)
+{
+	MV_U32 satrVal, bootSrc;
+
+	satrVal = MV_REG_READ(MPP_SAMPLE_AT_RESET);
+	bootSrc = (satrVal & SATR_BOOT_SRC_MASK) >> SATR_BOOT_SRC_OFFS;
+
+	DB(mvOsPrintf("%s: Read from S@R BOOTSRC = 0x%X\n", __func__, bootSrc));
+	return bootSrc;
+}
+
+/*******************************************************************************
 * mvCtrlDevFamilyIdGet - Get Device ID
 *
 * DESCRIPTION:
diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h
index f18618b..a97e304 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h
@@ -208,6 +208,7 @@ typedef enum {
 
 /* mcspLib.h API list */
 MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode);
+MV_U32 mvCtrlbootSrcGet(void);
 MV_U32 mvCtrlSysConfigGet(MV_CONFIG_TYPE_ID configField);
 MV_U32 mvCtrlGetCpuNum(MV_VOID);
 MV_U32 mvCtrlGetQuadNum(MV_VOID);
diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h
index 7e81244..2598d20 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -138,6 +138,8 @@ extern "C" {
 
 /* Sample at Reset */
 #define MPP_SAMPLE_AT_RESET		(0x18600)
+#define SATR_BOOT_SRC_OFFS		4
+#define SATR_BOOT_SRC_MASK		(0x3F << SATR_BOOT_SRC_OFFS)
 #define SATR_CPU_FREQ_OFFS		10
 #define SATR_CPU_FREQ_MASK		(0x1F << SATR_CPU_FREQ_OFFS)
 #define SATR_CPU1_ENABLE_OFFS		19
-- 
1.7.5.4

