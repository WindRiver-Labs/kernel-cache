From a17b6ec173b8800161f4eade5963f0c74a211727 Mon Sep 17 00:00:00 2001
From: Eli Nidam <elini@marvell.com>
Date: Mon, 14 Oct 2013 16:19:40 +0200
Subject: [PATCH 1090/1825] a38x: update a38x family

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit bfed0b28270df9e14c8afeb149a858b5e82f807a

	Update maximum units per interface
	update u-boot pex board environment according to SERDES configuration
	update the formula of pex interface base register

Signed-off-by: Eli Nidam <elini@marvell.com>

Change-Id: I76ae25f5470ffafeffd1ea72138325e7947406f0
Reviewed-on: http://vgitil04.il.marvell.com:8080/3700
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../armada_38x_family/boardEnv/mvBoardEnvLib.h     |    5 +-
 .../armada_38x_family/ctrlEnv/mvCtrlEnvLib.c       |   74 ++++++++++++++------
 .../armada_38x_family/ctrlEnv/mvCtrlEnvLib.h       |   65 +++++++++++-------
 .../armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h      |   24 ++-----
 .../armada_38x_family/ctrlEnv/mvCtrlEnvSpec.h      |   20 ++++--
 5 files changed, 116 insertions(+), 72 deletions(-)

diff --git a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.h
index 79217ee..1f77934 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.h
@@ -261,8 +261,9 @@ typedef struct {
 } MV_BOARD_TDM_INFO;
 
 typedef struct _boardPexInfo {
-	MV_PEX_UNIT_CFG pexUnitCfg[MV_PEX_MAX_UNIT];
-	MV_U32 boardPexIfNum;
+	MV_PEXIF_INDX	pexMapping[MV_PEX_MAX_IF];
+	MV_PEX_UNIT_CFG	pexUnitCfg[MV_PEX_MAX_UNIT];
+	MV_U32		boardPexIfNum;
 } MV_BOARD_PEX_INFO;
 
 typedef enum _devBoardSlicType {
diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
index b717232..dcbd7e6 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
@@ -109,7 +109,7 @@
 #else
 #define DB(x)
 #endif
-
+static const MV_U8 serdesCfg[MV_SERDES_MAX_LANES][8] = SERDES_CFG;
 /*
  * Control Environment internal data structure
  * Note: it should be initialized dynamically only once.
@@ -190,40 +190,60 @@ static MV_U32 mvCtrlDevIdIndexGet(void)
 
 static MV_VOID mvCtrlPexConfig(MV_VOID)
 {
-	MV_U8 pexUnit;
-	MV_U32 pexIfNum = mvCtrlSocUnitInfoNumGet(PEX_UNIT_ID);
+	MV_U32 pexIf, commPhyConfigReg, comPhyCfg, serdesNum, serdesCongigField, maxSerdesLane;
 
 	MV_BOARD_PEX_INFO *boardPexInfo = mvBoardPexInfoGet();
 
-	memset(boardPexInfo, 0, sizeof(MV_BOARD_PEX_INFO));
-
-	for (pexUnit = 0; pexUnit < pexIfNum; pexUnit++)
-		boardPexInfo->pexUnitCfg[pexUnit] = PEX_BUS_MODE_X1;
+	switch (mvCtrlModelGet()) {
+	case MV_6810_DEV_ID:
+		maxSerdesLane = 5;
+		break;
+	default:
+	case MV_6820_DEV_ID:
+		maxSerdesLane = MV_SERDES_MAX_LANES;
+	}
 
-	boardPexInfo->boardPexIfNum = pexIfNum;
+	memset(boardPexInfo, 0, sizeof(MV_BOARD_PEX_INFO));
+	commPhyConfigReg = MV_REG_READ(COMM_PHY_SELECTOR_REG);
+	for (serdesNum = 0; serdesNum < maxSerdesLane; serdesNum++) {
+		serdesCongigField = (commPhyConfigReg & COMPHY_SELECT_MASK(serdesNum)) >> COMPHY_SELECT_OFFS(serdesNum);
+		comPhyCfg = serdesCfg[serdesNum][serdesCongigField];
+		DB(printf("%s:   serdesCongigField = 0x%x, comPhyCfg = 0x%x\n",
+			  serdesCongigField, comPhyCfg));
+		if ((comPhyCfg & 0xF0) != SERDES_UNIT_PEX)
+			continue;
+		pexIf = comPhyCfg & 0x0f;
+		if ((pexIf == PEX0_IF) && (commPhyConfigReg & PCIE0_X4_EN_MASK))
+			boardPexInfo->pexUnitCfg[pexIf] = PEX_BUS_MODE_X4;
+		else
+			boardPexInfo->pexUnitCfg[pexIf] = PEX_BUS_MODE_X1;
+			boardPexInfo->pexMapping[boardPexInfo->boardPexIfNum] = pexIf;
+			boardPexInfo->boardPexIfNum++;
+	}
+	mvCtrlSocUnitInfoNumSet(PEX_UNIT_ID, boardPexInfo->boardPexIfNum);
 }
 
 
 MV_UNIT_ID mvCtrlSocUnitNums[MAX_UNITS_ID][MV_68xx_INDEX_MAX] = {
 /*                          6820 */
 /* DRAM_UNIT_ID         */ { 1, 1},
-/* PEX_UNIT_ID          */ { 2, 2},
-/* ETH_GIG_UNIT_ID      */ { 2, 2},
-/* USB_UNIT_ID          */ { 3, 3},
-/* USB3_UNIT_ID         */ { 1, 1},
-/* IDMA_UNIT_ID         */ { 1, 1},
-/* XOR_UNIT_ID          */ { 2, 2},
-/* SATA_UNIT_ID         */ { 2, 2},
+/* PEX_UNIT_ID          */ { MV_PEX_MAX_UNIT, MV_PEX_MAX_UNIT_6810},
+/* ETH_GIG_UNIT_ID      */ { MV_ETH_MAX_PORTS, MV_ETH_MAX_PORTS_6810},
+/* USB_UNIT_ID          */ { MV_USB_MAX_PORTS, MV_USB3_MAX_PORTS_6810},
+/* USB3_UNIT_ID         */ { MV_USB3_MAX_PORTS, MV_USB3_MAX_PORTS_6810},
+/* IDMA_UNIT_ID         */ { MV_IDMA_MAX_CHAN, MV_IDMA_MAX_CHAN},
+/* XOR_UNIT_ID          */ { MV_XOR_MAX_UNIT, MV_XOR_MAX_UNIT},
+/* SATA_UNIT_ID         */ { MV_SATA_MAX_CHAN, MV_SATA_MAX_CHAN},
 /* TDM_32CH_UNIT_ID     */ { 1, 1},
-/* UART_UNIT_ID         */ { 2, 2},
+/* UART_UNIT_ID         */ { MV_UART_MAX_CHAN, MV_UART_MAX_CHAN},
 /* CESA_UNIT_ID         */ { 1, 1},
-/* SPI_UNIT_ID          */ { 2, 2},
+/* SPI_UNIT_ID          */ { 1, 1},
 /* AUDIO_UNIT_ID        */ { 1, 1},
 /* SDIO_UNIT_ID         */ { 1, 1},
 /* TS_UNIT_ID           */ { 0, 0},
-/* XPON_UNIT_ID         */ { 1, 1},
-/* BM_UNIT_ID           */ { 1, 1},
-/* PNC_UNIT_ID          */ { 1, 1},
+/* XPON_UNIT_ID         */ { 0, 0},
+/* BM_UNIT_ID           */ { 0, 0},
+/* PNC_UNIT_ID          */ { 0, 0},
 /* I2C_UNIT_ID          */ { 2, 2},
 };
 
@@ -239,6 +259,18 @@ MV_U32 mvCtrlSocUnitInfoNumGet(MV_UNIT_ID unit)
 	devIdIndex = mvCtrlDevIdIndexGet();
 	return mvCtrlSocUnitNums[unit][devIdIndex];
 }
+MV_U32 mvCtrlSocUnitInfoNumSet(MV_UNIT_ID unit, MV_U32 maxValue)
+{
+	MV_U32 devIdIndex;
+
+	if (unit >= MAX_UNITS_ID) {
+		mvOsPrintf("%s: Error: Wrong unit type (%u)\n", __func__, unit);
+		return 0;
+	}
+
+	devIdIndex = mvCtrlDevIdIndexGet();
+	return mvCtrlSocUnitNums[unit][devIdIndex] = maxValue;
+}
 
 /*******************************************************************************
 * mvCtrlEnvInit - Initialize Marvell controller environment.
@@ -509,7 +541,7 @@ MV_U32 mvCtrlPciMaxIfGet(MV_VOID)
 *******************************************************************************/
 MV_U32 mvCtrlEthMaxPortGet(MV_VOID)
 {
-	return MV_ETH_MAX_PORTS;
+	return mvCtrlSocUnitInfoNumGet(ETH_GIG_UNIT_ID);
 }
 
 #if defined(MV_INCLUDE_SATA)
diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h
index c17fe84..54b4a27 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.h
@@ -139,15 +139,12 @@ typedef enum {
 } MV_ETH_PORT_MODE;
 
 typedef enum {
-	SERDES_UNIT_UNCONNECTED = 0x0,
-	SERDES_UNIT_PEX         = 0x1,
-	SERDES_UNIT_SATA        = 0x2,
-	SERDES_UNIT_SGMII0      = 0x3,
-	SERDES_UNIT_SGMII1      = 0x4,
-	SERDES_UNIT_SGMII2      = 0x5,
-	SERDES_UNIT_SGMII3      = 0x6,
-	SERDES_UNIT_QSGMII      = 0x7,
-	SERDES_UNIT_LAST
+	SERDES_UNIT_NA		= 0x0,
+	SERDES_UNIT_PEX		= 0x10,
+	SERDES_UNIT_SATA	= 0x20,
+	SERDES_UNIT_GBE		= 0x30,
+	SERDES_UNIT_USB_H	= 0x40,
+	SERDES_UNIT_USB		= 0x50,
 } MV_SERDES_UNIT_INDX;
 
 typedef enum {
@@ -156,23 +153,40 @@ typedef enum {
 	PEX_BUS_MODE_X4         = 2,
 	PEX_BUS_MODE_X8         = 3
 } MV_PEX_UNIT_CFG;
+/*
+	This enum should reflect the units numbers in register
+	space which we will need when accessing the HW
+*/
+
+typedef enum {
+	PEX0_IF,
+	PEX1_IF,
+	PEX2_IF,
+	PEX3_IF,
+	PEXIF_MAX
+} MV_PEXIF_INDX;
+
+/*
+	This structure refrect registers:
+	Serdes 0-6 selectors		0x183fc
+*/
+
+#define SERDES_CFG {	\
+/* Lane 0 */ {SERDES_UNIT_NA,		SERDES_UNIT_PEX | PEX0_IF, SERDES_UNIT_SATA | 0,	SERDES_UNIT_GBE  | 0,\
+	      SERDES_UNIT_NA,		SERDES_UNIT_NA,		    SERDES_UNIT_NA,		SERDES_UNIT_NA},     \
+/* Lane 1 */ {SERDES_UNIT_NA,		SERDES_UNIT_PEX | PEX0_IF, SERDES_UNIT_NA,		SERDES_UNIT_SATA | 0,\
+	      SERDES_UNIT_GBE | 0,	SERDES_UNIT_GBE | 1,	    SERDES_UNIT_NA,		SERDES_UNIT_NA},     \
+/* Lane 2 */ {SERDES_UNIT_NA,		SERDES_UNIT_PEX | PEX1_IF, SERDES_UNIT_NA,		SERDES_UNIT_SATA | 1,\
+	      SERDES_UNIT_GBE | 1,	SERDES_UNIT_NA,		    SERDES_UNIT_NA,		SERDES_UNIT_NA},     \
+/* Lane 3 */ {SERDES_UNIT_NA,		SERDES_UNIT_PEX | PEX3_IF, SERDES_UNIT_NA,		SERDES_UNIT_SATA | 3,\
+	      SERDES_UNIT_GBE | 2,	SERDES_UNIT_USB_H | 1,	    SERDES_UNIT_USB,		SERDES_UNIT_NA},     \
+/* Lane 4 */ {SERDES_UNIT_NA,		SERDES_UNIT_PEX | PEX1_IF, SERDES_UNIT_SATA | 1,	SERDES_UNIT_GBE  | 1,\
+	      SERDES_UNIT_USB_H | 0,	SERDES_UNIT_USB,	    SERDES_UNIT_NA,		SERDES_UNIT_NA},     \
+/* Lane 5 */ {SERDES_UNIT_NA,		SERDES_UNIT_PEX | PEX2_IF, SERDES_UNIT_SATA | 2,	SERDES_UNIT_GBE  | 2,\
+	      SERDES_UNIT_USB_H | 1,	SERDES_UNIT_USB,	    SERDES_UNIT_NA,		SERDES_UNIT_NA},     \
+}
+
 
-/* Configuration per SERDES line.
-   Each nibble is MV_SERDES_LINE_TYPE */
-typedef struct _boardSerdesConf {
-	MV_U32 enableSerdesConfiguration;       /*This will determine if mvCtrlSerdesPhyConfig will configure the serdes*/
-	MV_U32 serdesLine0_7;                   /* Lines 0 to 7 SERDES MUX one nibble per line */
-	MV_U32 serdesLine8_15;                  /* Lines 8 to 15 SERDES MUX one nibble per line */
-	MV_PEX_UNIT_CFG pex0Mod;
-	MV_PEX_UNIT_CFG pex1Mod;
-	MV_PEX_UNIT_CFG pex2Mod;
-	MV_PEX_UNIT_CFG pex3Mod;
-	MV_U32 busSpeed;        /* Bus speed - one bit per SERDES line:
-	                           Low speed (0)		High speed (1)
-	                           PEX	2.5 G (10 bit)		5 G (20 bit)
-	                           SATA	1.5 G			3 G
-	                           SGMII        1.25 Gbps		3.125 Gbps	*/
-} MV_SERDES_CFG;
 
 /* Termal Sensor Registers */
 #define TSEN_STATE_REG							0xE8070
@@ -201,6 +215,7 @@ MV_BOOL mvCtrlIsEepromEnabled(MV_VOID);
 MV_STATUS mvCtrlEepromEnable(MV_BOOL enable);
 MV_STATUS mvCtrlBoardConfigGet(MV_U8 *tempVal);
 MV_U32 mvCtrlSocUnitInfoNumGet(MV_UNIT_ID unit);
+MV_U32 mvCtrlSocUnitInfoNumSet(MV_UNIT_ID unit, MV_U32 maxValue);
 MV_STATUS mvCtrlEnvInit(MV_VOID);
 MV_U32    mvCtrlMppRegGet(MV_U32 mppGroup);
 MV_U32 mvCtrlGetJuncTemp(MV_VOID);
diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h
index 82deae9..513866b 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -171,6 +171,13 @@ extern "C" {
 #define CHIP_BOND_REG                           0x18238
 #define PCKG_OPT_MASK                           0x3
 
+	/* common PHys Selectors register */
+#define COMM_PHY_SELECTOR_REG			0x183fc
+#define COMPHY_SELECT_OFFS(x)			(x * 3)
+#define COMPHY_SELECT_MASK(x)			(0x07 << COMPHY_SELECT_OFFS(x))
+#define	PCIE0_X4_EN_OFFS			18
+#define	PCIE0_X4_EN_MASK			(1 << PCIE0_X4_EN_OFFS)
+
 /*****************/
 /* PUP registers */
 /*****************/
@@ -342,24 +349,7 @@ typedef enum _mvTargetId {
 	MAX_TARGETS_ID
 } MV_TARGET_ID;
 
-/*
-        This enum should reflect the units numbers in register
-        space which we will need when accessing the HW
- */
 
-typedef enum {
-	PEX0_0x4        = 0,
-	PEX0_1x4        = 1,
-	PEX0_2x4        = 2,
-	PEX0_3x4        = 3,
-	PEX1_0x4        = 4,
-	PEX1_1x4        = 5,
-	PEX1_2x4        = 6,
-	PEX1_3x4        = 7,
-	PEX2_0x4        = 8,
-	PEX3_0x4        = 9,
-	PEXIF_MAX       = 10
-} MV_PEXIF_INDX;
 
 #endif /* MV_ASMLANGUAGE */
 
diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvSpec.h
index 8aeb048..1a2c279 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -123,8 +123,7 @@ extern "C" {
 #define MV_ETH_MAX_TCONT                        16
 #define MV_ETH_RXQ_TOTAL_NUM                    32
 
-#define MV_PEX_IF_REGS_OFFSET(pexIf)            (pexIf < 8 ? (0x40000 + ((pexIf) / 4) * 0x40000 + ((pexIf) % 4) * 0x4000) \
-						 : (0x42000 + ((pexIf) % 8) * 0x40000))
+#define MV_PEX_IF_REGS_OFFSET(pexIf)            (((pexIf) == 0) ? 0x80000 : (0x40000 + ((pexIf) * 0x4000)))
 #define MV_USB_REGS_OFFSET(dev)                 (0x50000)
 #define MV_USB3_REGS_OFFSET(dev)                (0x5FF80)
 #define MV_XOR_REGS_OFFSET(unit)                (0x60800)
@@ -142,6 +141,8 @@ extern "C" {
  */
 
 #define INTER_REGS_SIZE                         _1M
+#define MV_SERDES_MAX_LANES			6
+#define MV_SERDES_MAX_LANES_6810		5
 
 /* This define describes the TWSI interrupt bit and location */
 #define TWSI_CPU_MAIN_INT_CAUSE_REG(cpu)        CPU_MAIN_INT_CAUSE_REG(1, (cpu))
@@ -178,8 +179,10 @@ extern "C" {
 #endif
 
 /* This define describes the maximum number of supported PEX Interfaces */
-#define MV_PEX_MAX_IF                           2
-#define MV_PEX_MAX_UNIT                         2
+
+#define MV_PEX_MAX_IF                           4
+#define MV_PEX_MAX_UNIT                         4
+#define MV_PEX_MAX_UNIT_6810                    3
 #ifdef MV_INCLUDE_PEX
 #define MV_INCLUDE_PEX0
 #define MV_DISABLE_PEX_DEVICE_BAR
@@ -194,12 +197,14 @@ extern "C" {
 #define PCI_IO(pciIf)                           (PEX0_IO + 2 * (pciIf))
 #define PCI_MEM(pciIf, memNum)                  (PEX0_MEM0 + 2 * (pciIf))
 /* This define describes the maximum number of supported PCI Interfaces         */
-#define MV_IDMA_MAX_CHAN                        4
+#define MV_IDMA_MAX_CHAN                        0
 #define MV_DEVICE_MAX_CS                        4
 
 #ifndef MV_USB_MAX_PORTS
-#define MV_USB_MAX_PORTS 3
+#define MV_USB_MAX_PORTS			1
 #endif
+#define MV_USB3_MAX_PORTS			3
+#define MV_USB3_MAX_PORTS_6810			2
 
 /* CESA version #3: One channel, 2KB SRAM, TDMA, CHAIN Mode support */
 #define MV_CESA_VERSION                         3 /*TODO verify */
@@ -207,7 +212,8 @@ extern "C" {
 
 /* This define describes the maximum number of supported Ethernet ports */
 #define MV_PON_PORT_ID				7
-#define MV_ETH_MAX_PORTS                        4
+#define MV_ETH_MAX_PORTS                        3
+#define MV_ETH_MAX_PORTS_6810                   2
 #define MV_ETH_MAX_RXQ                          16/* Maximum number of RXQs can be mapped to each port */
 #define MV_ETH_MAX_TXQ                          8
 #define MV_ETH_RXQ_TOTAL_NUM                    32      /* Total number of RXQs for usage by all ports */
-- 
1.7.5.4

