From c25ed909ec379c36eb82c7877d4c6de761173ae9 Mon Sep 17 00:00:00 2001
From: Yelena <yelena@marvell.com>
Date: Thu, 26 Jun 2014 13:57:53 +0300
Subject: [PATCH 1746/1825] fix: neta: remove double parameter passing in
 mv_eth_tso_build_hdr_desc

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 6ee122557f6a0f4175597eab7eb5a4b0eaf28bbe

Change-Id: I9b48845b2aa728092df6d1b04c502376606785d9
Signed-off-by: Yelena <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8744
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c     |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
index 178238e..5ca4416 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
@@ -2154,7 +2154,7 @@ static inline int mv_eth_tso_validate(struct sk_buff *skb, struct net_device *de
 	return 0;
 }
 
-static inline int mv_eth_tso_build_hdr_desc(struct eth_port *pp, struct neta_tx_desc *tx_desc, struct eth_port *priv,
+static inline int mv_eth_tso_build_hdr_desc(struct eth_port *pp, struct neta_tx_desc *tx_desc,
 					     struct sk_buff *skb,
 					     struct tx_queue *txq_ctrl, u16 *mh, int hdr_len, int size,
 					     MV_U32 tcp_seq, MV_U16 ip_id, int left_len)
@@ -2164,7 +2164,7 @@ static inline int mv_eth_tso_build_hdr_desc(struct eth_port *pp, struct neta_tx_
 	MV_U8 *data, *mac;
 	int mac_hdr_len = skb_network_offset(skb);
 
-	data = mv_eth_extra_pool_get(priv);
+	data = mv_eth_extra_pool_get(pp);
 	if (!data)
 		return 0;
 
@@ -2206,7 +2206,7 @@ static inline int mv_eth_tso_build_hdr_desc(struct eth_port *pp, struct neta_tx_
 	tx_desc->command = mvNetaTxqDescCsum(mac_hdr_len, skb->protocol, ((u8 *)tcph - (u8 *)iph) >> 2, IPPROTO_TCP);
 	tx_desc->command |= NETA_TX_F_DESC_MASK;
 
-	tx_desc->bufPhysAddr = mvOsCacheFlush(priv->dev->dev.parent, data, tx_desc->dataSize);
+	tx_desc->bufPhysAddr = mvOsCacheFlush(pp->dev->dev.parent, data, tx_desc->dataSize);
 	mv_eth_shadow_inc_put(txq_ctrl);
 
 	mv_eth_tx_desc_flush(pp, tx_desc);
@@ -2327,7 +2327,7 @@ int mv_eth_tx_tso(struct sk_buff *skb, struct net_device *dev,
 		if (tx_spec->flags & MV_ETH_F_MH)
 			mh = &priv->tx_mh;
 		/* prepare packet headers: MAC + IP + TCP */
-		size = mv_eth_tso_build_hdr_desc(priv, tx_desc, priv, skb, txq_ctrl, mh,
+		size = mv_eth_tso_build_hdr_desc(priv, tx_desc, skb, txq_ctrl, mh,
 					hdr_len, data_left, tcp_seq, ip_id, total_len);
 		if (size == 0)
 			goto outNoTxDesc;
-- 
1.7.5.4

