From b00238c018e8b6c97d146a139813e34f9f8930b6 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 23 May 2013 11:04:27 +0300
Subject: [PATCH 0678/1825] ALP: Fixed mvBoardIoExpValSet to enable writing by
 setting outpot port bit before writing to IO
 expander

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit d8a28b2b9ce00e84bed0978f620e4986618068f9

Change-Id: I128a6f611603cc8a8f34206031c65afb6bf05d54
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/1949
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   31 +++++++++++++++----
 1 files changed, 24 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 20ccbff..7a311fa 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -1535,6 +1535,7 @@ MV_U8 mvBoardTdmSpiCsGet(MV_U8 devId)
 MV_VOID mvBoardMppModuleTypePrint(MV_VOID)
 {
 	MV_U32 ethConfig = mvBoardEthComplexConfigGet();
+
 	mvOsOutput("Board configuration detected:\n");
 
 	/* TDM */
@@ -1878,25 +1879,42 @@ MV_U8 mvBoardIoExpValGet(MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo)
 *******************************************************************************/
 MV_STATUS mvBoardIoExpValSet(MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo, MV_U8 value)
 {
-	MV_U8 readVal;
+	MV_U8 readVal, configVal;
 
 	if (ioInfo == NULL) {
 		mvOsPrintf("%s: Error: Write to IO Expander failed (invalid Expander info)\n", __func__);
 		return MV_ERROR;
 	}
-	/* Read */
-
-	if (mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum, ioInfo->regNum, &readVal) != MV_OK) {
+	/* Read Value */
+	if (mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum,
+					ioInfo->regNum, &readVal) != MV_OK) {
 		mvOsPrintf("%s: Error: Read from IO Expander failed\n", __func__);
 		return MV_ERROR;
 	}
 
+	/* Read Configuration Value */
+	if (mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum,
+					ioInfo->regNum + 6, &configVal) != MV_OK) {
+		mvOsPrintf("%s: Error: Read Configuration from IO Expander failed\n", __func__);
+		return MV_ERROR;
+	}
+
+	/* Modify Configuration value to Enable write for requested bit */
+	configVal &= ~(1 << ioInfo->offset);	/* clean bit of old value  */
+	if (mvBoardTwsiSet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum,
+					ioInfo->regNum + 6, configVal) != MV_OK) {
+		mvOsPrintf("%s: Error: Enable Write to IO Expander at 0x%x failed\n", __func__
+			   , mvBoardTwsiAddrGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum));
+		return MV_ERROR;
+	}
+
 	/* Modify */
 	readVal &= ~(1 << ioInfo->offset);	/* clean bit of old value  */
 	readVal |= (value << ioInfo->offset);
 
 	/* Write */
-	if (mvBoardTwsiSet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum, ioInfo->regNum, readVal) != MV_OK) {
+	if (mvBoardTwsiSet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum,
+					ioInfo->regNum + 2, readVal) != MV_OK) {
 		mvOsPrintf("%s: Error: Write to IO Expander at 0x%x failed\n", __func__
 			   , mvBoardTwsiAddrGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum));
 		return MV_ERROR;
@@ -2137,11 +2155,10 @@ MV_STATUS mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_TYPE_ID ioClass, MV_BOARD_IO_E
 MV_STATUS mvBoardExtPhyBufferSelect(MV_BOOL enable)
 {
 	MV_BOARD_IO_EXPANDER_TYPE_INFO ioInfo;
-
 	if (mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_EXT_PHY_SMI_EN, &ioInfo) == MV_OK)
 		return mvBoardIoExpValSet(&ioInfo, (enable ? 0x0 : 0x1));
 
-	mvOsPrintf("%s: Error: Read from IO expander failed (External Phy Buffer select)\n", __func__);
+	mvOsPrintf("%s: Error: Write to IO expander failed (External Phy Buffer select)\n", __func__);
 	return MV_FALSE;
 }
 
-- 
1.7.5.4

