From 70d973be2d429dc2119cfac6e6ed5d6d99b32811 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Wed, 12 Mar 2014 17:02:45 +0200
Subject: [PATCH 1463/1825] dragonite: alp: Add driver to initialize dragonite
 coprocessor

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 287b8e9d2242c24120b01e38169c0ec102065fc3

Change-Id: I8ff10933767c0d7f48343df6403c9f93924cc8ca
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6376
Reviewed-by: Shadi Ammouri <shadi@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/Makefile                    |    1 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |    9 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |    5 +-
 arch/arm/mach-avantalp/core.c                      |   45 ++++
 arch/arm/mach-avantalp/include/mach/avantalp.h     |    3 +
 arch/arm/mach-avantalp/sysmap.c                    |    3 +
 arch/arm/plat-armada/Kconfig                       |    9 +
 .../mv_drivers_lsp/mv_dragonite/Kconfig            |   22 ++
 .../mv_drivers_lsp/mv_dragonite/Makefile           |    5 +
 .../mv_drivers_lsp/mv_dragonite/dragonite.c        |  237 ++++++++++++++++++++
 .../mv_drivers_lsp/mv_dragonite/dragonite.h        |   16 ++
 firmware/Makefile                                  |    1 +
 firmware/dragonite/dragonite.bin                   |  Bin 0 -> 16288 bytes
 13 files changed, 355 insertions(+), 1 deletions(-)
 create mode 100644 arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/Kconfig
 create mode 100644 arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/Makefile
 create mode 100644 arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/dragonite.c
 create mode 100644 arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/dragonite.h
 create mode 100755 firmware/dragonite/dragonite.bin

diff --git a/arch/arm/mach-avantalp/Makefile b/arch/arm/mach-avantalp/Makefile
index b020bb6..2933c3f 100644
--- a/arch/arm/mach-avantalp/Makefile
+++ b/arch/arm/mach-avantalp/Makefile
@@ -107,6 +107,7 @@ obj-$(CONFIG_MV_IPC_NET)		+= $(PLAT_DRIVERS)/mv_ipc_net/
 #obj-y					+= $(PLAT_DRIVERS)/mv_btns/
 obj-y					+= $(PLAT_DRIVERS)/mv_gpio/
 obj-$(CONFIG_MV_DBG_TRACE)              += $(PLAT_DRIVERS)/mv_trace/
+obj-$(CONFIG_MV_INCLUDE_DRAGONITE)	+= $(PLAT_DRIVERS)/mv_dragonite/
 obj-$(CONFIG_MV_INCLUDE_SWITCH)         += $(LSP_SWITCH_DIR)/
 obj-y					+= $(LSP_MUX_DIR)/
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index f38cef3..615f8d5 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -187,6 +187,14 @@ extern "C" {
 #define	SYS_SOFT_RESET_REG			0x18258
 #define ISI_SOFT_RST_OFFS			14
 #define ISI_SOFT_RST_MASK			(1 << ISI_SOFT_RST_OFFS)
+#define DRAGONITE_SOFT_RST			(1 << 23)
+
+/*
+ * Dragonite Register
+ */
+#define DRAGONITE_CTRL_REG			0x18270
+#define DRAGONITE_XBRIDGE_BASE			0xE4320
+#define DRAGONITE_DEBUGGER_REG			0xE82A0
 
 /* SSCG Registers */
 #define	SSCG_CONF_REG				0x184D8
@@ -417,6 +425,7 @@ typedef enum _mvTargetId {
 	PEX_TARGET_ID    = 4,  /* Port 4  -> PCI Express 0 and 1        */
 	CRYPT_TARGET_ID  = 9,  /* Port 9  -> Crypto Engine SRAM         */
 	DFEV_TARGET_ID   = 11, /* Port 11 -> DFEV Unit			*/
+	DRAGONITE_TARGET_ID = 14, /* Port 14 -> Dragonite co-processor	*/
 	PP2_TARGET_ID = 15,    /* Port 12 -> PP2 Unit                   */
 	MAX_TARGETS_ID
 } MV_TARGET_ID;
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index 46d7b94..f768a5c 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -487,6 +487,7 @@ typedef enum _mvTarget {
 	PP2_CPU0,	/* 26 PP2 - CPU 0		*/
 	PP2_CPU1,	/* 27 PP2 - CPU 1		*/
 	DFEV,		/* 28 DFEV Unit			*/
+	DRAGONITE,	/* 29 Dragonite co-processor	*/
 	MAX_TARGETS
 } MV_TARGET;
 
@@ -540,6 +541,7 @@ typedef enum _mvTarget {
 	{ 0x00, PP2_TARGET_ID	},		/* PP2 - CPU 0           */ \
 	{ 0x01, PP2_TARGET_ID	},		/* PP2 - CPU 1           */ \
 	{ 0x00, DFEV_TARGET_ID },		/* DFEV			 */ \
+	{ 0x14, DRAGONITE_TARGET_ID },		/* DRAGONITE		 */ \
 }
 
 #define CESA_TARGET_NAME_DEF	("CRYPT_ENG0", "CRYPT_ENG1")
@@ -572,7 +574,8 @@ typedef enum _mvTarget {
 	"CRYPT1_ENG",		/* CRYPT1_ENG */	\
 	"PP2 - CPU 0",		/* PP2 - CPU 0 */	\
 	"PP2 - CPU 1",		/* PP2 - CPU 1 */	\
-	"DFEV"			/* DFEV */		\
+	"DFEV",			/* DFEV */		\
+	"DRAGONITE"		/* DRAGONITE */		\
 }
 
 
diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index 3c3acbe..80d94b2 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -60,6 +60,10 @@
 #include "mv_mtd/nand_nfc.h"
 #endif
 
+#ifdef CONFIG_MV_INCLUDE_DRAGONITE
+#include "mv_dragonite/dragonite.h"
+#endif
+
 #if defined(CONFIG_MV_INCLUDE_SDIO)
 #include "sdmmc/mvSdmmc.h"
 #include <plat/mvsdio.h>
@@ -664,6 +668,45 @@ void __init alp_sdio_init(void)
 }
 
 /*******************************************************************************
+ * Dragonite
+ */
+#ifdef CONFIG_MV_INCLUDE_DRAGONITE
+static struct resource dragonite_resources[] = {
+	[0] = {
+		.start	= DRAGONITE_PHYS_BASE,
+		.end	= DRAGONITE_PHYS_BASE + DRAGONITE_SIZE,
+		.flags	= IORESOURCE_MEM,
+	}
+};
+
+struct dragonite_info dragonite_data = {
+	.ctrl_reg	= (void *)(INTER_REGS_VIRT_BASE + DRAGONITE_CTRL_REG),
+	.reset_reg	= (void *)(INTER_REGS_VIRT_BASE + SYS_SOFT_RESET_REG),
+	.jtag_reg	= (void *)(INTER_REGS_VIRT_BASE + DRAGONITE_DEBUGGER_REG),
+	.win_regs	= (void *)(INTER_REGS_VIRT_BASE + DRAGONITE_XBRIDGE_BASE),
+};
+
+static struct platform_device mv_dragonite_dev = {
+	.name		= "dragonite",
+	.id		= -1,
+	.dev		= {
+		.platform_data	= &dragonite_data,
+	},
+	.num_resources	= ARRAY_SIZE(dragonite_resources),
+	.resource	= dragonite_resources
+};
+
+void __init alp_dragonite_init(void)
+{
+	platform_device_register(&mv_dragonite_dev);
+}
+#else
+void __init alp_dragonite_init(void)
+{
+}
+#endif
+
+/*******************************************************************************
  * USB
  */
 void __init alp_usb_init(void)
@@ -1788,6 +1831,8 @@ static void __init alp_board_init(void)
 	alp_audio_init();
 	alp_gpio_init();
 	alp_wdt_init();
+	if (mvCtrlRevGet() > MV_88F66X0_Z3_ID)
+		alp_dragonite_init();
 #if 0
 	alp_hwmon_init();
 #endif
diff --git a/arch/arm/mach-avantalp/include/mach/avantalp.h b/arch/arm/mach-avantalp/include/mach/avantalp.h
index 494dc09..5724f33 100644
--- a/arch/arm/mach-avantalp/include/mach/avantalp.h
+++ b/arch/arm/mach-avantalp/include/mach/avantalp.h
@@ -38,6 +38,9 @@
 #define PEX1_MEM_PHYS_BASE		0xE2000000
 #define PEX1_MEM_SIZE			_16M
 
+#define DRAGONITE_PHYS_BASE		0xE8000000
+#define DRAGONITE_SIZE			_128M
+
 #define PEX0_IO_PHYS_BASE		0xF1100000
 #define PEX0_IO_SIZE			_1M
 #define PEX1_IO_PHYS_BASE		0xF1200000
diff --git a/arch/arm/mach-avantalp/sysmap.c b/arch/arm/mach-avantalp/sysmap.c
index c69cbf4..3140bbf 100644
--- a/arch/arm/mach-avantalp/sysmap.c
+++ b/arch/arm/mach-avantalp/sysmap.c
@@ -75,6 +75,7 @@ MV_CPU_DEC_WIN SYSMAP_ALP_6660_Z[] = {
 	{{TBL_UNUSED,			0,	TBL_UNUSED,		},	TBL_UNUSED,		DIS},	/* PP2 - Zx */
 #endif
 	{{DFEV_PHYS_BASE,		0,	DFEV_SIZE,		},	7,			EN},	/* VOICE */
+	{{DRAGONITE_PHYS_BASE, 0, DRAGONITE_SIZE,}, 6,	EN},	/* Dragonite */
 	{{TBL_TERM,			TBL_TERM,	TBL_TERM	},	TBL_TERM,		TBL_TERM}
 };
 
@@ -104,10 +105,12 @@ MV_CPU_DEC_WIN SYSMAP_ALP_6660[] = {
 		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* SPI_CS7 */
 		{{BOOTROM_PHYS_BASE,       0, BOOTROM_SIZE },       9,          DIS}, /* BOOTROM */
 		{{DEVICE_BOOTCS_PHYS_BASE, 0, DEVICE_BOOTCS_SIZE }, 10,         DIS}, /* DEV_BOOCS */
+		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* USB3 */
 		{{CRYPT_ENG_PHYS_BASE(0),  0, CRYPT_ENG_SIZE },     12,         EN},  /* CRYPT_ENG */
 		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* PP2.1 - A0 */
 		{{TBL_UNUSED,              0, TBL_UNUSED, },        TBL_UNUSED, DIS}, /* PP2.1 - A0 */
 		{{DFEV_PHYS_BASE,          0, DFEV_SIZE, },         7,          EN},  /* VOICE */
+		{{DRAGONITE_PHYS_BASE,     0, DRAGONITE_SIZE,},     6,		EN},  /* DRAGONITE */
 		{{TBL_TERM, TBL_TERM, TBL_TERM }, TBL_TERM, TBL_TERM}
 };
 
diff --git a/arch/arm/plat-armada/Kconfig b/arch/arm/plat-armada/Kconfig
index e870405..1207b10 100644
--- a/arch/arm/plat-armada/Kconfig
+++ b/arch/arm/plat-armada/Kconfig
@@ -95,6 +95,13 @@ config MV_INCLUDE_CESA
         help
         Please don't change this configs unless you know what you are doing.
 
+config MV_INCLUDE_DRAGONITE
+	bool "Dragonite Coprocessor Support"
+	depends on LANTIQ_DFEV_SLIC_SUPPORT && AVANTA_LP
+	default y
+        help
+        Please don't change this configs unless you know what you are doing.
+
 config MV_INCLUDE_NFC
 	bool "Nand Flash Controller Support"
 	depends on MV88F6500 || ARMADA_XP || ARMADA_370 || AVANTA_LP || (ARMADA_38X && MV_CM_NFC) || ARCH_MSYS
@@ -597,6 +604,8 @@ config MV_INCLUDE_ETH_PHY
 
 endmenu # "SoC Networking support"
 
+source arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/Kconfig
+
 source arch/arm/plat-armada/mv_drivers_lsp/mv_cesa/Kconfig
 
 source arch/arm/plat-armada/mv_drivers_lsp/mv_phone/Kconfig
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/Kconfig b/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/Kconfig
new file mode 100644
index 0000000..1ea3785
--- /dev/null
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/Kconfig
@@ -0,0 +1,22 @@
+menu "Dragonite options"
+	depends on MV_INCLUDE_DRAGONITE
+
+config  DRAGONITE_HOLD_IN_RESET
+	bool "Hold the dragonite CPU in reset"
+	default n
+	---help---
+	Selects if the dragonite CPU is triggered into action.
+	after firmware load. if selected a function should
+	be called to trigger the dragonite CPU. If not selected
+	the CPU is triggered after firmware load
+
+config  DRAGONITE_JTAG_ENABLE
+	bool "Enables JTAG debugging for dragonite"
+	default n
+	---help---
+	Selects if the dragonite JTAG debug is enabled.
+	if selected JATG debugging is enabled for dragonite
+	and disabled for main CPU. If not selected, JATG debugging
+	is disabled for dragonite and enabled for main CPU
+
+endmenu
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/Makefile b/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/Makefile
new file mode 100644
index 0000000..057ea56
--- /dev/null
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/Makefile
@@ -0,0 +1,5 @@
+ifneq ($(MACHINE),)
+include $(srctree)/$(MACHINE)/config/mvRules.mk
+endif
+
+obj-y += dragonite.o
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/dragonite.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/dragonite.c
new file mode 100644
index 0000000..5e40296
--- /dev/null
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/dragonite.c
@@ -0,0 +1,237 @@
+/*
+ * nand_nfc.c
+ *
+ * Copyright c 2005 Intel Corporation
+ * Copyright c 2006 Marvell International Ltd.
+ *
+ * This driver is based on the PXA drivers/mtd/nand/pxa3xx_nand.c
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/module.h>
+#include <linux/interrupt.h>
+#include <linux/platform_device.h>
+#include <linux/io.h>
+#include <linux/firmware.h>
+#include "dragonite.h"
+
+#define DRAGONITE_SOFT_RST			(1 << 23)
+
+#define DRAGONITE_EN				(1 << 0)
+#define DRAGONITE_CPU_EN			(1 << 1)
+#define DRAGONITE_GPP0_FUNC			(1 << 2)
+#define DRAGONITE_TCM_EN			(1 << 3)
+#define DRAGONITE_ICE_EN			(1 << 27)
+#define DRAGONITE_ICE_SIG_EN			(3 << 25)
+#define DRAGONITE_DBG_BKPT_EN			(1 << 24)
+#define DRAGONITE_DBG_REQ_EN			(1 << 23)
+
+#define DRAGONITE_XBRIDGE_WIN_CNT		3
+#define DRAGONITE_XBRIDGE_WIN_CTRL(n)		(0x0 + 0x10 * (n))
+#define DRAGONITE_XBRIDGE_WIN_BASE(n)		(0x4 + 0x10 * (n))
+
+#define DRAGONITE_ITCM_SIZE	(80 * 1024)
+#define FIRMWARE_FILE		"dragonite/dragonite.bin"
+
+#define DRAGONITE_DRAM_BASE	0x30000000
+#define DRAGONITE_DFEV_BASE	0x40000000
+#define DRAGONITE_RUNIT_BASE	0x50000000
+
+/* Dragonite Decoding Windows configuration */
+struct dragonite_win_cfg {
+	unsigned char	target;
+	unsigned char	attr;
+	unsigned char	internal_access;
+	unsigned int	size;
+	unsigned int	base;
+};
+
+static struct dragonite_win_cfg dragonite_win_cfg[] = {
+	{ 0x00, 0x00, 0, SZ_256M, DRAGONITE_DRAM_BASE},	/* DDR */
+	{ 0x0B, 0x00, 0, SZ_1M,   DRAGONITE_DFEV_BASE},	/* Lantiq */
+	{ 0x01,	0x00, 1, SZ_1M,   DRAGONITE_RUNIT_BASE}, /* R-Unit */
+};
+
+/* Configure the Co-processor access to SOC memory space */
+static void dragonite_setup_xbridge(const struct dragonite_win_cfg *win_cfg,
+		void __iomem *win_regs)
+{
+	unsigned int i;
+	unsigned long win_ctrl;
+
+	for (i = 0; i < DRAGONITE_XBRIDGE_WIN_CNT; i++) {
+		win_ctrl = ((win_cfg[i].size - 1) & 0xFFFF0000) |
+			   ((win_cfg[i].attr & 0xFF) << 8) |
+			   ((win_cfg[i].target & 0x0F) << 4) |
+			   ((win_cfg[i].internal_access & 0x01) << 1) | 0x01;
+
+		writel(win_cfg[i].base, win_regs + DRAGONITE_XBRIDGE_WIN_BASE(i));
+		writel(win_ctrl, win_regs + DRAGONITE_XBRIDGE_WIN_CTRL(i));
+	}
+}
+
+/* Power up the Co-processor but keep the CPU in reset */
+static int dragonite_enable(struct dragonite_info *info)
+{
+	u32 reg;
+
+	/* Reset the dragonite sub-system */
+	reg = readl(info->reset_reg);
+	reg |= DRAGONITE_SOFT_RST;
+	writel(reg, info->reset_reg);
+
+	/* Config and enable dragonite sub-system. CPU still in reset */
+	reg = readl(info->ctrl_reg);
+	reg |= (DRAGONITE_EN | DRAGONITE_TCM_EN);
+	writel(reg, info->ctrl_reg);
+
+	dragonite_setup_xbridge(dragonite_win_cfg, info->win_regs);
+
+#ifdef CONFIG_DRAGONITE_JTAG_ENABLE
+	/* Enable JATG access to dragonite */
+	reg = readl(info->jtag_reg);
+	reg |= 0x1;
+	writel(reg, info->jtag_reg);
+#endif
+
+	return 0;
+}
+
+/* Load firmware to Instruction TCM (ITCM) */
+static int dragonite_load_firmware(struct device *dev, struct dragonite_info *info)
+{
+	const struct firmware *fw = NULL;
+	u8 *itcm_ptr = (u8 *)info->tcm_base;
+	int offset;
+
+	if (request_firmware(&fw, FIRMWARE_FILE, dev)) {
+		dev_err(dev, "Failed requesting firmware %s\n", FIRMWARE_FILE);
+		return -ENOENT;
+	}
+
+	if (fw->size > DRAGONITE_ITCM_SIZE) {
+		dev_err(dev, "Firmware size %d is larger than ITCM size %d\n",
+		       fw->size, DRAGONITE_ITCM_SIZE);
+		return -ENOMEM;
+	}
+
+	/*
+	 * Write the firmware to instruction memory (ITCM)
+	 * Load in byte resolution to avoid endianes issues
+	 */
+	for (offset = 0; offset < fw->size; offset++)
+		*(itcm_ptr + offset) = *(fw->data + offset);
+
+	release_firmware(fw);
+
+	return 0;
+}
+
+/* Kick the CPU to action */
+int dragonite_run(struct dragonite_info *info)
+{
+	u32 reg;
+
+	dev_info(&info->pdev->dev, "Starting CPU...\n");
+
+	/* Release the dragonite CPU from reset */
+	reg = readl(info->ctrl_reg);
+	reg |= DRAGONITE_CPU_EN;
+	writel(reg, info->ctrl_reg);
+
+	return 0;
+}
+
+static int dragonite_probe(struct platform_device *pdev)
+{
+	struct dragonite_info *info = dev_get_platdata(&pdev->dev);
+	struct resource *tcm;
+	int ret = 0;
+
+	dev_info(&pdev->dev, "Initializing Co-processor...\n");
+
+	if (!info) {
+		dev_err(&pdev->dev, "Missing dragonite data structure\n");
+		return -ENOMEM;
+	}
+	info->pdev = pdev;
+
+	/* Map the dragonite tightly coupled memory (TCM) to host cpu */
+	tcm = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	if (tcm == NULL) {
+		dev_err(&pdev->dev, "TCM memory resource missing\n");
+		return -ENODEV;
+	}
+
+	if (!request_mem_region(tcm->start, resource_size(tcm), pdev->name)) {
+		dev_dbg(&pdev->dev, "Failed requesting TCM region\n");
+		return -EBUSY;
+	}
+	info->tcm_base  = devm_ioremap_nocache(&pdev->dev, tcm->start, resource_size(tcm));
+	if (!info->tcm_base) {
+		dev_dbg(&pdev->dev, "Failed mapping TCM space\n");
+		ret = -EFAULT;
+		goto fail_release_tcm;
+	}
+	info->tcm_phys_base = (void __iomem *)tcm->start;
+
+	/* Turn on the dragonite unit */
+	ret = dragonite_enable(info);
+	if (ret) {
+		dev_err(&pdev->dev, "Failed to enable coprocessor\n");
+		goto fail;
+	}
+
+	/* Load firmware to TCM */
+	ret = dragonite_load_firmware(&pdev->dev, info);
+	if (ret) {
+		dev_err(&pdev->dev, "Failed to load firmware\n");
+		goto fail;
+	}
+
+#ifndef CONFIG_DRAGONITE_HOLD_IN_RESET
+	/* Release the CPU */
+	dragonite_run(info);
+#endif
+
+	return 0;
+
+fail:
+	iounmap(info->tcm_base);
+fail_release_tcm:
+	release_mem_region(tcm->start, resource_size(tcm));
+	return ret;
+}
+
+static int dragonite_remove(struct platform_device *pdev)
+{
+	return 0;
+}
+
+static struct platform_driver dragonite_driver = {
+	.driver = {
+		.name	= "dragonite",
+		.owner	= THIS_MODULE,
+	},
+	.probe		= dragonite_probe,
+	.remove		= dragonite_remove,
+};
+
+static int __init dragonite_init(void)
+{
+	return platform_driver_register(&dragonite_driver);
+}
+module_init(dragonite_init);
+
+static void __exit dragonite_exit(void)
+{
+	platform_driver_unregister(&dragonite_driver);
+}
+module_exit(dragonite_exit);
+
+MODULE_ALIAS(DRIVER_NAME);
+MODULE_LICENSE("GPL");
+MODULE_DESCRIPTION("Avanta-LP dragonite co-processor driver");
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/dragonite.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/dragonite.h
new file mode 100644
index 0000000..3d570e8
--- /dev/null
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_dragonite/dragonite.h
@@ -0,0 +1,16 @@
+#ifndef _DRAGONITE_H
+#define _DRAGONITE_H
+
+struct dragonite_info {
+	struct platform_device	*pdev;
+	void __iomem	*tcm_base;
+	void __iomem	*tcm_phys_base;
+	void __iomem    *ctrl_reg;
+	void __iomem	*reset_reg;
+	void __iomem	*jtag_reg;
+	void __iomem	*win_regs;
+};
+
+int dragonite_run(struct dragonite_info *info);
+
+#endif /* _DRAGONITE_H */
diff --git a/firmware/Makefile b/firmware/Makefile
index 408392a..8f50591 100644
--- a/firmware/Makefile
+++ b/firmware/Makefile
@@ -143,6 +143,7 @@ fw-shipped-$(CONFIG_USB_SERIAL_XIRCOM) += keyspan_pda/xircom_pgs.fw
 fw-shipped-$(CONFIG_USB_VICAM) += vicam/firmware.fw
 fw-shipped-$(CONFIG_VIDEO_CPIA2) += cpia2/stv0672_vp4.bin
 fw-shipped-$(CONFIG_YAM) += yam/1200.bin yam/9600.bin
+fw-shipped-$(CONFIG_LANTIQ_DFEV_SLIC_SUPPORT) += dragonite/dragonite.bin
 
 fw-shipped-all := $(fw-shipped-y) $(fw-shipped-m) $(fw-shipped-)
 
diff --git a/firmware/dragonite/dragonite.bin b/firmware/dragonite/dragonite.bin
new file mode 100755
index 0000000000000000000000000000000000000000..fe98d599bd333c8f3cbaf8cf713876b6e581996a
GIT binary patch
literal 16288
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
Yvp$3$@TW|WKCgvso9}Y+C*MN<7geV{e*gdg

literal 0
HcmV?d00001

-- 
1.7.5.4

