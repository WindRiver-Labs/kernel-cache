From 38dc4aeafa376daca3d46499b8b72360329a52d6 Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Mon, 27 May 2013 18:24:00 +0300
Subject: [PATCH 0697/1825] PPv2: remove unnecessary configs MV_ETH_SWITCH and
 MV_ETH_SWITCH_LINK

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c2235c435662da2b7752eda25897a99787832f86

Change-Id: I5e8982045901eb42df8d9f2298f39c0dfde645b3
Reviewed-on: http://vgitil04.il.marvell.com:8080/1999
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/Kconfig |   42 --------------------
 .../mv_drivers_lsp/mv_switch/mv_switch.c           |   14 +------
 2 files changed, 1 insertions(+), 55 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/Kconfig b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/Kconfig
index 90af619..ec25e36 100755
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/Kconfig
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/Kconfig
@@ -728,45 +728,3 @@ config MV_PON_TXQ_DEF
 
 endmenu
 
-menu "Switch support"
-
-config MV_ETH_SWITCH
-        bool "Switch support"
-	depends on MV_INCLUDE_SWITCH
-        ---help---
-	Choose this option to support Gigabit Ethernet Controller connected to
-        on-board QuarterDeck switch family
-
-config  MV_ETH_SWITCH_NETDEV_NUM
-	int "Maximum number of subnets on switch ports"
-	depends on MV_ETH_SWITCH
-	default 4
-	---help---
-	Valid range range from 1 to BOARD_ETH_SWITCH_PORT_NUM
-
-config  MV_ETH_SWITCH_NETCONFIG_0
-	string "Switch network configuration for GbE port 0"
-	depends on MV_ETH_SWITCH
-	default "3,(00:11:66:11:66:11,0)(00:22:77:22:77:22,1:2:3:4),mtu=1500"
-	---help---
-	 Set the network configuration when giga port connected to switch.
-         For each interface, define the interface
-	 name, MAC address and participating ports.
-
-config  MV_ETH_SWITCH_NETCONFIG_1
-	string "Switch network configuration for GbE port 1"
-	depends on MV_ETH_SWITCH
-	default "0"
-	---help---
-	 Set the network configuration when giga port connected to switch.
-         For each interface, define the interface
-	 name, MAC address and participating ports.
-
-config  MV_ETH_SWITCH_LINK
-	bool "Link status change indications"
-	depends on MV_ETH_SWITCH
-	default y
-	---help---
-	  Support Phy link status change indications.
-endmenu
-
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
index c3ec83c..e405d98 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
@@ -87,12 +87,10 @@ static int gbe_port;
 
 static struct mux_device_ops *mux_ops = NULL;
 
-#ifdef CONFIG_MV_ETH_SWITCH_LINK
 static struct tasklet_struct link_tasklet;
 static int switch_irq = -1;
 int switch_link_poll = 0;
 static struct timer_list switch_link_timer;
-#endif /* CONFIG_MV_ETH_SWITCH_LINK */
 
 static spinlock_t switch_lock;
 
@@ -462,7 +460,6 @@ int mv_switch_vlan_set(u16 vlan_grp_id, u16 port_map)
 	return 0;
 }
 
-#ifdef CONFIG_MV_ETH_SWITCH_LINK
 void mv_switch_link_update_event(MV_U32 port_mask, int force_link_check)
 {
 	int p, db;
@@ -573,7 +570,6 @@ void mv_switch_tasklet(unsigned long data)
 
 	mv_switch_interrupt_unmask();
 }
-#endif /* CONFIG_MV_ETH_SWITCH_LINK */
 
 int mv_switch_jumbo_mode_set(int max_size)
 {
@@ -753,11 +749,9 @@ int mv_switch_unload(unsigned int switch_ports_mask)
 	qd_dev = NULL;
 	qd_cpu_port = -1;
 
-#ifdef CONFIG_MV_ETH_SWITCH_LINK
 	switch_irq = -1;
 	switch_link_poll = 0;
 	del_timer(&switch_link_timer);
-#endif /* CONFIG_MV_ETH_SWITCH_LINK */
 
 	return 0;
 }
@@ -1009,8 +1003,6 @@ void mv_switch_interrupt_clear(void)
 
 unsigned int mv_switch_link_detection_init(struct mv_switch_pdata *plat_data)
 {
-#ifdef CONFIG_MV_ETH_SWITCH_LINK
-
 	unsigned int p;
 	static int link_init_done = 0;
 	unsigned int connected_phys_mask = 0;
@@ -1081,7 +1073,6 @@ unsigned int mv_switch_link_detection_init(struct mv_switch_pdata *plat_data)
 	link_init_done = 1;
 
 	return connected_phys_mask;
-#endif /* CONFIG_MV_ETH_SWITCH_LINK */
 
 	return 0;
 }
@@ -1519,11 +1510,10 @@ int mv_switch_port_add(int switch_port, u16 grp_id)
 	/* Enable port */
 	if (gstpSetPortState(qd_dev, switch_port, GT_PORT_FORWARDING) != GT_OK)
 		printk(KERN_ERR "gstpSetPortState failed\n");
-#ifdef CONFIG_MV_ETH_SWITCH_LINK
+
 	/* Enable Phy Link Status Changed interrupt at Phy level for the port */
 	if (gprtPhyIntEnable(qd_dev, switch_port, (GT_LINK_STATUS_CHANGED)) != GT_OK)
 		printk(KERN_ERR "gprtPhyIntEnable failed port %d\n", switch_port);
-#endif /* CONFIG_MV_ETH_SWITCH_LINK */
 
 	db_port_mask[grp_id] = port_map;
 	enabled_ports_mask |= (1 << switch_port);
@@ -1561,11 +1551,9 @@ int mv_switch_port_del(int switch_port)
 	/* Add port to port mask of VLAN group */
 	port_map = db_port_mask[grp_id] & ~(1 << switch_port);
 
-#ifdef CONFIG_MV_ETH_SWITCH_LINK
 	/* Disable link change interrupts on unmapped port */
 	if (gprtPhyIntEnable(qd_dev, switch_port, 0) != GT_OK)
 		printk(KERN_ERR "gprtPhyIntEnable failed on port #%d\n", switch_port);
-#endif /* CONFIG_MV_ETH_SWITCH_LINK */
 
 	/* Disable unmapped port */
 	if (gstpSetPortState(qd_dev, switch_port, GT_PORT_DISABLE) != GT_OK)
-- 
1.7.5.4

