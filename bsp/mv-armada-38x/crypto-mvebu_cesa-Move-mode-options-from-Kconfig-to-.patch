From 8ebd9ec6d99199547f728da08b0fd01993fe0c52 Mon Sep 17 00:00:00 2001
From: Nadav Haklai <nadavh@marvell.com>
Date: Wed, 19 Mar 2014 16:50:45 +0200
Subject: [PATCH 1804/1825] crypto: mvebu_cesa: Move mode options from Kconfig
 to dts

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit a729cfdb00d246d96d8e336e0c6dab4aae8ba149

Change-Id: I5d10ba696356c7ef69360a68b908ba301f66d087
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
Signed-off-by: Nadav Haklai <nadavh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6549
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 crypto/ocf/Makefile    |    2 +
 crypto/ocf/crypto.c    |   74 +++++++++++++++++++++++++++++++++++++++++++++++-
 crypto/ocf/cryptodev.h |    5 +++
 3 files changed, 80 insertions(+), 1 deletions(-)

diff --git a/crypto/ocf/Makefile b/crypto/ocf/Makefile
index e9a0cf7..b9110fc 100644
--- a/crypto/ocf/Makefile
+++ b/crypto/ocf/Makefile
@@ -31,6 +31,8 @@ else
 endif
 
 EXTRA_CFLAGS += -I$(obj)/.
+ccflags-$(CONFIG_OF)	+= -I$(srctree)/drivers/crypto/mvebu_cesa
+ccflags-$(CONFIG_OF)	+= -I$(srctree)/arch/arm/mach-mvebu/include/mach
 
 obj-$(CONFIG_OCF_OCF)         += ocf.o
 obj-$(CONFIG_OCF_CRYPTODEV)   += cryptodev.o
diff --git a/crypto/ocf/crypto.c b/crypto/ocf/crypto.c
index 9a66787..74da325 100644
--- a/crypto/ocf/crypto.c
+++ b/crypto/ocf/crypto.c
@@ -847,8 +847,80 @@ crypto_dispatch(struct cryptop *crp)
 		wake_up_interruptible(&cryptoproc_wait);
 		CRYPTO_Q_UNLOCK();
 	}
-#else
 
+#elif CONFIG_OF
+	if (mv_cesa_mode == CESA_OCF_M) {
+		dprintk("%s:cesa mode %d\n", __func__, mv_cesa_mode);
+
+		CRYPTO_Q_UNLOCK();
+
+		/* warning: We are using the CRYPTO_F_BATCH to mark processing by HW,
+		   it should be disabled for software encryption */
+		if ((crp->crp_flags & CRYPTO_F_BATCH)) {
+			int hid = CRYPTO_SESID2HID(crp->crp_sid);
+			cap = crypto_checkdriver(hid);
+			/* Driver cannot disappear when there is an active session. */
+			KASSERT(cap != NULL, ("%s: Driver disappeared.", __func__));
+
+			result = crypto_invoke(cap, crp, 0);
+			if (result != 0) {
+				CRYPTO_Q_LOCK();
+				crypto_q_cnt--;
+				cryptostats.cs_drops++;
+				CRYPTO_Q_UNLOCK();
+			}
+		} else {
+			CRYPTO_Q_LOCK();
+			TAILQ_INSERT_TAIL(&crp_q, crp, crp_next);
+			result = 0;
+			wake_up_interruptible(&cryptoproc_wait);
+			CRYPTO_Q_UNLOCK();
+		}
+
+	} else {
+
+		/*
+		 * Caller marked the request to be processed immediately; dispatch
+		 * it directly to the driver unless the driver is currently blocked.
+		 */
+		if ((crp->crp_flags & CRYPTO_F_BATCH) == 0) {
+			int hid = CRYPTO_SESID2HID(crp->crp_sid);
+			cap = crypto_checkdriver(hid);
+			/* Driver cannot disappear when there is an active session. */
+			KASSERT(cap != NULL, ("%s: Driver disappeared.", __func__));
+			if (!cap->cc_qblocked) {
+				crypto_all_qblocked = 0;
+				crypto_drivers[hid].cc_unqblocked = 1;
+				CRYPTO_Q_UNLOCK();
+				result = crypto_invoke(cap, crp, 0);
+				CRYPTO_Q_LOCK();
+				if (result == ERESTART)
+					if (crypto_drivers[hid].cc_unqblocked)
+						crypto_drivers[hid].cc_qblocked = 1;
+				crypto_drivers[hid].cc_unqblocked = 0;
+			}
+		}
+		if (result == ERESTART) {
+			/*
+			 * The driver ran out of resources, mark the
+			 * driver ``blocked'' for cryptop's and put
+			 * the request back in the queue.  It would
+			 * best to put the request back where we got
+			 * it but that's hard so for now we put it
+			 * at the front.  This should be ok; putting
+			 * it at the end does not work.
+			 */
+			list_add(&crp->crp_next, &crp_q);
+			cryptostats.cs_blocks++;
+			result = 0;
+		} else if (result == -1) {
+			TAILQ_INSERT_TAIL(&crp_q, crp, crp_next);
+			result = 0;
+		}
+		wake_up_interruptible(&cryptoproc_wait);
+		CRYPTO_Q_UNLOCK();
+	}
+#else
 	/*
 	 * Caller marked the request to be processed immediately; dispatch
 	 * it directly to the driver unless the driver is currently blocked.
diff --git a/crypto/ocf/cryptodev.h b/crypto/ocf/cryptodev.h
index 1f8cc57..04b263c 100644
--- a/crypto/ocf/cryptodev.h
+++ b/crypto/ocf/cryptodev.h
@@ -61,6 +61,11 @@
 #ifndef _CRYPTO_CRYPTO_H_
 #define _CRYPTO_CRYPTO_H_
 
+#ifdef CONFIG_OF
+#include "mvTypes.h"
+#include "mvSysCesaConfig.h"
+#endif
+
 /* Some initial values */
 #define CRYPTO_DRIVERS_INITIAL	4
 #define CRYPTO_SW_SESSIONS	32
-- 
1.7.5.4

