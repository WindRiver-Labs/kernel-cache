From 79099e7965d1bac0400e9a8cce9819625d81aa41 Mon Sep 17 00:00:00 2001
From: Eran Ben-Avi <eranpublic@yahoo.com>
Date: Sun, 27 Oct 2013 19:35:49 +0200
Subject: [PATCH 1052/1825] alp: tdm: support tdm on rd-6660 board

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 1ee84e27821c5f306362ee2f502d3307d5fc2000

        Support TDM and Zarlink x4 88601 module on
        RD-6660 board.

Change-Id: I0f156b92d06c2be54f01f54e0999b65f4e6988b1
Signed-off-by: Eran Ben-Avi <eranpublic@yahoo.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3879
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |   13 +-
 tools/voice/zarlink/kernel/mv_voice_tool.c         |    4 +-
 tools/voice/zarlink/kernel/profile_88601.c         | 1179 +-------------------
 tools/voice/zarlink/kernel/profile_88601.h         |   96 +--
 4 files changed, 58 insertions(+), 1234 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 2b9501a..7b1e70f 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -440,6 +440,10 @@ MV_DEV_CS_INFO rd88f6660InfoBoardDeCsInfo[] = {
 #endif
 };
 
+MV_BOARD_TDM_INFO rd88f6660Tdm886[] = { {0} };
+
+MV_BOARD_TDM_SPI_INFO rd88f6660TdmSpiInfo[] = { {1} };
+
 MV_BOARD_MPP_INFO rd88f6660InfoBoardMppConfigValue[] = {
 	{ {
 		RD_88F6660_MPP0_7,
@@ -488,9 +492,9 @@ MV_BOARD_INFO rd88f6660_board_info = {
 	.gppPolarityValHigh		= RD_88F6660_GPP_POL_HIGH,
 
 	/* TDM */
-	.numBoardTdmInfo		= {},
-	.pBoardTdmInt2CsInfo		= {},
-	.boardTdmInfoIndex		= -1,
+	.numBoardTdmInfo		= {1},
+	.pBoardTdmInt2CsInfo		= {rd88f6660Tdm886},
+	.boardTdmInfoIndex		= 0,
 
 	.pBoardSpecInit			= NULL,
 
@@ -498,6 +502,9 @@ MV_BOARD_INFO rd88f6660_board_info = {
 	.nandFlashReadParams		= 0,
 	.nandFlashWriteParams		= 0,
 	.nandFlashControl		= 0,
+
+	.pBoardTdmSpiInfo		= rd88f6660TdmSpiInfo,
+
 	/* NOR init params */
 	.norFlashReadParams		= 0,
 	.norFlashWriteParams		= 0,
diff --git a/tools/voice/zarlink/kernel/mv_voice_tool.c b/tools/voice/zarlink/kernel/mv_voice_tool.c
index 12ca296..678be09 100644
--- a/tools/voice/zarlink/kernel/mv_voice_tool.c
+++ b/tools/voice/zarlink/kernel/mv_voice_tool.c
@@ -91,10 +91,10 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define MAX_DEVICE_LINES	2
 #define MAX_LINES		4
 #define VP_DEV_SERIES		VP_DEV_886_SERIES
-#define DEV_PROFILE		ZLR88621L_ABS81V_DEVICE
+#define DEV_PROFILE		ZLR88621L_ABS90V_OC_DEVICE
 #define DC_COEFF		DC_FXS_ZL880_ABS100V_DEF
 #define AC_COEFF		AC_FXS_RF14_600R_DEF
-#define WB_AC_COEFF		AC_FXS_RF14_WB_600R_DEF
+#define WB_AC_COEFF		NULL
 #define RING_PROFILE		RING_ZL880_ABS100V_DEF
 
 #elif defined(ZARLINK_SLIC_VE890)
diff --git a/tools/voice/zarlink/kernel/profile_88601.c b/tools/voice/zarlink/kernel/profile_88601.c
index 0187eb7..3047f29 100644
--- a/tools/voice/zarlink/kernel/profile_88601.c
+++ b/tools/voice/zarlink/kernel/profile_88601.c
@@ -1,12 +1,11 @@
 /*
- * profile_88601.c --
+ * Multiline4ch_8ch_PW2_4.c --
  *
  * This file contains profile data in byte format
  *
  * Project Info --
- *   File:   C:\Users\Kosmo\Documents\MISL-Zarlink\VE886.vpw
- *   Type:   Design for ZLR88621L SM2 Line Module Featuring the ZL88601, Lite Coefficients
- *   Date:   Friday, April 26, 2013 11:33:46
+ *   Type:   Design for ZLR88601 4 to 8 Line, Multiline, Lite Coefficients
+ *   Date:   Thursday, August 08, 2013 10:08:23
  *   Device: ZL880 ZL88601
  *
  *   This file was generated with Profile Wizard Version: P2.4.0
@@ -88,74 +87,38 @@
 
 /************** Device_Parameters **************/
 
-/* Device Configuration Data - ZL88601 100V ABS (-81V/-27V) */
-const VpProfileDataType ZLR88621L_ABS81V_DEVICE[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0xFF, 0x00,       /* Device Profile for ZL88601 device */
-   0x29,                   /* Profile length = 41 + 4 = 45 bytes */
-   0x03,                   /* Profile format version = 3 */
-   0x14,                   /* MPI section length = 20 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0x46, 0x8A,             /* PCLK = 8.192 MHz; INTM = Open Drain */
-   0x44, 0x00,             /* PCM Clock Slot = 0 TX / 0 RX; XE = Neg. */
-   0x5E, 0x14, 0x04,       /* Device Mode Register */
-   0xF6, 0x66, 0x00, 0x4C, /* Switching Regulator Timing Params */
-         0x30, 0x64, 0x30,
-   0xE4, 0x05, 0xA0, 0x00, /* Switching Regulator Params */
-   0xE6, 0x00,             /* Switching Regulator Control */
-/* Formatted Parameters Section -------------------------------------------- */
-   0x20,                   /* IO21 Mode: Digital */
-                           /* IO22 Mode: Analog Voltage Sense */
-   0x21,                   /* Dial pulse correction: 2 ms */
-                           /* Switcher Configuration = ABS (12 V in, 100 V out) */
-   0x00, 0xFF,             /* Over-current shutdown count = 255 */
-   0x01,                   /* Leading edge blanking window = 81 ns */
-                           /* ABS supply config: 1 = Single; 2 = Single */
-   0x45, 0x00, 0x44, 0x30, /* Free-Run Timing Parameters */
-         0x64, 0x30,
-   0x1B,                   /* Switcher 1 Voltage = 27 V */
-   0x51,                   /* Switcher 2 Voltage = 81 V */
-   0xFF,
-   0x66, 0x00,             /* Low-Power Timing Parameters */
-   0x20, 0x6E,             /* Switcher Limit Voltages 32 V, 110 V */
-   0x03                    /* Charge pump enabled */
-                           /* Charge Pump Overload Protection: Switcher Cycle Skip */
-};
-
-/* Device Configuration Data - ZL88601 100V ABS (-90V/-30V) */
-const VpProfileDataType ZLR88621L_ABS90V_DEVICE[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0xFF, 0x00,       /* Device Profile for ZL88601 device */
-   0x29,                   /* Profile length = 41 + 4 = 45 bytes */
-   0x03,                   /* Profile format version = 3 */
-   0x14,                   /* MPI section length = 20 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0x46, 0x8A,             /* PCLK = 8.192 MHz; INTM = Open Drain */
-   0x44, 0x00,             /* PCM Clock Slot = 0 TX / 0 RX; XE = Neg. */
-   0x5E, 0x14, 0x04,       /* Device Mode Register */
-   0xF6, 0x66, 0x00, 0x4C, /* Switching Regulator Timing Params */
-         0x30, 0x64, 0x30,
-   0xE4, 0x05, 0xA0, 0x00, /* Switching Regulator Params */
-   0xE6, 0x00,             /* Switching Regulator Control */
-/* Formatted Parameters Section -------------------------------------------- */
-   0x20,                   /* IO21 Mode: Digital */
-                           /* IO22 Mode: Analog Voltage Sense */
-   0x21,                   /* Dial pulse correction: 2 ms */
-                           /* Switcher Configuration = ABS (12 V in, 100 V out) */
-   0x00, 0xFF,             /* Over-current shutdown count = 255 */
-   0x01,                   /* Leading edge blanking window = 81 ns */
-                           /* ABS supply config: 1 = Single; 2 = Single */
-   0x45, 0x00, 0x44, 0x30, /* Free-Run Timing Parameters */
-         0x64, 0x30,
-   0x1B,                   /* Switcher 1 Voltage = 27 V */
-   0x51,                   /* Switcher 2 Voltage = 81 V */
-   0xFF,
-   0x66, 0x00,             /* Low-Power Timing Parameters */
-   0x20, 0x6E,             /* Switcher Limit Voltages 32 V, 110 V */
-   0x03                    /* Charge pump enabled */
-                           /* Charge Pump Overload Protection: Switcher Cycle Skip */
+/* Device Configuration Data - ZL88601 100V ABS (-90V/-30V) Master */
+const VpProfileDataType ZLR88621L_ABS90V_OC_DEVICE[] = {
+/* Profile Header ---------------------------------------------------------- */
+	0x0C, 0xFF, 0x00,       /* Device Profile for ZL88601 device */
+	0x29,                   /* Profile length = 41 + 4 = 45 bytes */
+	0x03,                   /* Profile format version = 3 */
+	0x14,                   /* MPI section length = 20 bytes */
+/* Raw MPI Section --------------------------------------------------------- */
+	0x46, 0x8A,             /* PCLK = 8.192 MHz; INTM = Open Drain */
+	0x44, 0x00,             /* PCM Clock Slot = 0 TX / 0 RX; XE = Neg. */
+	0x5E, 0x14, 0x04,       /* Device Mode Register */
+	0xF6, 0xB1, 0x00, 0xB1, /* Switching Regulator Timing Params */
+	0x00, 0xB0, 0x40,
+	0xE4, 0x05, 0xA0, 0x00, /* Switching Regulator Params */
+	0xE6, 0x00,             /* Switching Regulator Control */
+/* Formatted Parameters Section -------------------------------------------- */
+	0x20,                   /* IO21 Mode: Digital */
+				/* IO22 Mode: Analog Voltage Sense */
+	0x01,                   /* Dial pulse correction: 0 ms */
+				/* Switcher Configuration = Multiline ABS 4/8 Line */
+	0x00, 0xFF,             /* Over-current shutdown count = 255 */
+	0xA1,                   /* Leading edge blanking window = 81 ns */
+				/* ABS supply config: 1 = Master; 2 = Slave */
+	0x2C, 0x40, 0x2C, 0x40, /* Free-Run Timing Parameters */
+	0x2C, 0x40,
+	0x1E,                   /* Switcher 1 Voltage = 30 V */
+	0x5A,                   /* Switcher 2 Voltage = 90 V */
+	0xFF,
+	0xB1, 0x00,             /* Low-Power Timing Parameters */
+	0x20, 0x6E,             /* Switcher Limit Voltages 32 V, 110 V */
+	0x03                    /* Charge pump enabled */
+				/* Charge Pump Overload Protection: Switcher Cycle Skip */
 };
 
 /************** DC_Parameters **************/
@@ -185,81 +148,6 @@ const VpProfileDataType DC_FXS_ZL880_ABS100V_DEF[] =
    0x07                    /* R_ISP = 7 ohms */
 };
 
-/* China DC FXS Parameters - 20mA Current Feed */
-const VpProfileDataType DC_FXS_ZL880_ABS100V_CN[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x01, 0x00,       /* DC Profile for ZL88601 device */
-   0x0B,                   /* Profile length = 11 + 4 = 15 bytes */
-   0x02,                   /* Profile format version = 2 */
-   0x03,                   /* MPI section length = 3 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC6, 0x8D, 0xE2,       /* DC Feed Parameters: ir_overhead = 100 ohm; */
-                           /* VOC = 45 V; LI = 50 ohm; ILA = 20 mA */
-                           /* Battery Switch Offset Voltage = 4.02 V */
-/* Formatted Parameters Section -------------------------------------------- */
-   0x1A,                   /* Switch Hook Threshold = 9 mA */
-                           /* Ground-Key Threshold = 18 mA */
-   0x86,                   /* Switch Hook Debounce = 12 ms */
-                           /* Ground-Key Debounce = 16 ms */
-   0x58,                   /* Low-Power Switch Hook Hysteresis = 2 V */
-                           /* Ground-Key Hysteresis = 6 mA */
-                           /* Switch Hook Hysteresis = 2 mA */
-   0x40,                   /* Low-Power Switch Hook Threshold = 18 V */
-   0x00,                   /* R_OSP = 0 ohms */
-   0x07                    /* R_ISP = 7 ohms */
-};
-
-/* ETSI DC FXS Parameters - 23mA Current Feed */
-const VpProfileDataType DC_FXS_ZL880_ABS100V_ETSI[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x01, 0x00,       /* DC Profile for ZL88601 device */
-   0x0B,                   /* Profile length = 11 + 4 = 15 bytes */
-   0x02,                   /* Profile format version = 2 */
-   0x03,                   /* MPI section length = 3 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC6, 0x95, 0xE5,       /* DC Feed Parameters: ir_overhead = 100 ohm; */
-                           /* VOC = 51 V; LI = 50 ohm; ILA = 23 mA */
-                           /* Battery Switch Offset Voltage = 4.02 V */
-/* Formatted Parameters Section -------------------------------------------- */
-   0x1A,                   /* Switch Hook Threshold = 9 mA */
-                           /* Ground-Key Threshold = 18 mA */
-   0x86,                   /* Switch Hook Debounce = 12 ms */
-                           /* Ground-Key Debounce = 16 ms */
-   0x58,                   /* Low-Power Switch Hook Hysteresis = 2 V */
-                           /* Ground-Key Hysteresis = 6 mA */
-                           /* Switch Hook Hysteresis = 2 mA */
-   0x40,                   /* Low-Power Switch Hook Threshold = 18 V */
-   0x00,                   /* R_OSP = 0 ohms */
-   0x07                    /* R_ISP = 7 ohms */
-};
-
-/* USA DC FXS Parameters - 23mA Current Feed */
-const VpProfileDataType DC_FXS_ZL880_ABS100V_US[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x01, 0x00,       /* DC Profile for ZL88601 device */
-   0x0B,                   /* Profile length = 11 + 4 = 15 bytes */
-   0x02,                   /* Profile format version = 2 */
-   0x03,                   /* MPI section length = 3 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC6, 0x91, 0xE5,       /* DC Feed Parameters: ir_overhead = 100 ohm; */
-                           /* VOC = 48 V; LI = 50 ohm; ILA = 23 mA */
-                           /* Battery Switch Offset Voltage = 4.02 V */
-/* Formatted Parameters Section -------------------------------------------- */
-   0x1C,                   /* Switch Hook Threshold = 11 mA */
-                           /* Ground-Key Threshold = 18 mA */
-   0x86,                   /* Switch Hook Debounce = 12 ms */
-                           /* Ground-Key Debounce = 16 ms */
-   0x58,                   /* Low-Power Switch Hook Hysteresis = 2 V */
-                           /* Ground-Key Hysteresis = 6 mA */
-                           /* Switch Hook Hysteresis = 2 mA */
-   0x80,                   /* Low-Power Switch Hook Threshold = 22 V */
-   0x00,                   /* R_OSP = 0 ohms */
-   0x07                    /* R_ISP = 7 ohms */
-};
-
 /************** AC_Coefficients **************/
 
 /* AC FXS RF14 600R Normal Coefficients (Default)  */
@@ -275,799 +163,6 @@ const VpProfileDataType AC_FXS_RF14_600R_DEF[] =
  0xFB, 0x9F, 0xA9, 0xF0, 0x96, 0x2E, 0x01, 0x00
 };
 
-/* AC FXS RF14 ETSI ES201 970 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_ETSI[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 Telcordia GR-57 900R+2.16uF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_GR57[] =
-{
-  /* AC Profile */
- 0x01, 0x00, 0x90, 0x4C, 0x01, 0x49, 0xCA, 0x0E, 0x98, 0x32, 0x2B, 0x24,
- 0x7C, 0x4A, 0x24, 0x55, 0xA3, 0x3A, 0xBC, 0x9A, 0xBA, 0xB3, 0xF4, 0x2D,
- 0x01, 0x8A, 0xEB, 0xC0, 0x26, 0x21, 0xB2, 0x35, 0xB3, 0xA6, 0x2A, 0xAD,
- 0xD4, 0xA6, 0x52, 0x4F, 0x88, 0xA3, 0xD0, 0x23, 0xAA, 0xAF, 0x62, 0xEA,
- 0xBA, 0x2A, 0xB3, 0x4A, 0x3D, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xBD, 0x52, 0xA1, 0x62, 0x1B, 0x22, 0x3A, 0x4B, 0xB5, 0x2A,
- 0x65, 0xA7, 0xB6, 0x70, 0x96, 0x23, 0xC0, 0x00
-};
-
-/* AC FXS RF14 Austria 220R+820R//115nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_AT[] =
-{
-  /* AC Profile */
- 0x6D, 0x00, 0xA7, 0x4C, 0x01, 0x49, 0xCA, 0xEA, 0x98, 0xFA, 0xE1, 0x23,
- 0xA2, 0xEA, 0xCB, 0xB3, 0xAA, 0xA3, 0xB3, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x2E, 0x01, 0xB3, 0x20, 0xAB, 0xA8, 0xCC, 0x24, 0x22, 0x97,
- 0xAF, 0x8F, 0xD3, 0xBF, 0x88, 0x3B, 0xB0, 0x33, 0x46, 0x2A, 0x2E, 0x33,
- 0x4F, 0xAE, 0xA5, 0xB3, 0xBE, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x2A, 0x42, 0x22, 0x98, 0x02, 0x42, 0xA2, 0x43, 0xA6, 0xD8,
- 0xFA, 0x8F, 0x29, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Australia 220R+820R//120nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_AU[] =
-{
-  /* AC Profile */
- 0xBF, 0x00, 0xAF, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0xBA, 0x41, 0x54,
- 0xA2, 0x2A, 0x5B, 0xA4, 0xAA, 0x3A, 0xB3, 0x9A, 0x87, 0xA2, 0x97, 0x9F,
- 0x01, 0x8A, 0x2E, 0x01, 0x23, 0x20, 0x3E, 0xA8, 0x2A, 0x57, 0xCB, 0x34,
- 0xBA, 0xAC, 0xBB, 0xA6, 0x88, 0xAA, 0xB0, 0x49, 0xF6, 0x3B, 0x2E, 0x49,
- 0xFF, 0xBC, 0xA5, 0x3A, 0xBE, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x34, 0x5C, 0x32, 0x25, 0x1A, 0xA1, 0x3B, 0x23, 0xB3, 0x5B,
- 0x4D, 0xB5, 0xDC, 0x60, 0x96, 0x3B, 0xA1, 0x00
-};
-
-/* AC FXS RF14 Belgium 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_BE[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 Bulgaria 220R+820R//115nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_BG[] =
-{
-  /* AC Profile */
- 0x6D, 0x00, 0xA7, 0x4C, 0x01, 0x49, 0xCA, 0xEA, 0x98, 0xFA, 0xE1, 0x23,
- 0xA2, 0xEA, 0xCB, 0xB3, 0xAA, 0xA3, 0xB3, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x2E, 0x01, 0xB3, 0x20, 0xAB, 0xA8, 0xCC, 0x24, 0x22, 0x97,
- 0xAF, 0x8F, 0xD3, 0xBF, 0x88, 0x3B, 0xB0, 0x33, 0x46, 0x2A, 0x2E, 0x33,
- 0x4F, 0xAE, 0xA5, 0xB3, 0xBE, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x2A, 0x42, 0x22, 0x98, 0x02, 0x42, 0xA2, 0x43, 0xA6, 0xD8,
- 0xFA, 0x8F, 0x29, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Brazil 900R Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_BR[] =
-{
-  /* AC Profile */
- 0xE4, 0x00, 0xF7, 0x4C, 0x01, 0x49, 0xCA, 0x0B, 0x98, 0x34, 0x3B, 0xB2,
- 0x2C, 0x9F, 0xA4, 0xD2, 0xA3, 0x22, 0xAC, 0x9A, 0xA4, 0xAA, 0x67, 0x9F,
- 0x01, 0x8A, 0xB3, 0xD0, 0xA6, 0x21, 0xAA, 0x34, 0x2B, 0x2F, 0x4A, 0xA6,
- 0xAB, 0x2F, 0x4A, 0x37, 0x88, 0x2A, 0xC0, 0x23, 0xAC, 0x2A, 0x26, 0x32,
- 0xA5, 0x3C, 0xAD, 0xA4, 0xA7, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xAB, 0x49, 0xF1, 0x2A, 0x0A, 0x43, 0xC9, 0xF3, 0x27, 0xBC,
- 0xE2, 0xAF, 0xAD, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Switzerland 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_CH[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 China 200R+680R//100nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_CN[] =
-{
-  /* AC Profile */
- 0xB9, 0x00, 0x1F, 0x4C, 0x01, 0x49, 0xCA, 0xE9, 0x98, 0x5C, 0xB1, 0xAA,
- 0x23, 0x43, 0xEB, 0x32, 0xAA, 0x23, 0xB3, 0x9A, 0x98, 0x94, 0x97, 0x9F,
- 0x01, 0x8A, 0x2D, 0x01, 0x22, 0x30, 0x6A, 0x59, 0x2A, 0xCB, 0xB4, 0xB2,
- 0xBF, 0x3B, 0xA3, 0x25, 0x88, 0x43, 0xC0, 0x3A, 0x45, 0x2B, 0xBD, 0x4C,
- 0x2E, 0x4C, 0x25, 0x42, 0xAD, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xA4, 0x5A, 0x32, 0xB5, 0x12, 0xA1, 0xA2, 0x3A, 0xA4, 0xB5,
- 0x64, 0x97, 0xAA, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Germany 220R+820R//115nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_DE[] =
-{
-  /* AC Profile */
- 0xEB, 0x00, 0xDC, 0x4C, 0x01, 0x49, 0xCA, 0xEA, 0x98, 0xA2, 0xE1, 0x24,
- 0xA2, 0x2A, 0xCB, 0xB3, 0xAA, 0xD3, 0xB3, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x2D, 0x01, 0x24, 0x20, 0x2C, 0xA8, 0xAB, 0x24, 0x22, 0x97,
- 0xAF, 0x8F, 0x23, 0xBF, 0x88, 0x3B, 0xB0, 0x33, 0x46, 0x2A, 0x2E, 0x33,
- 0x4F, 0xAE, 0xA5, 0xB3, 0xBE, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x53, 0x54, 0x32, 0xC4, 0x1A, 0xA1, 0x2B, 0x2A, 0xA3, 0xAA,
- 0x4A, 0xA5, 0xBA, 0x60, 0x96, 0xD2, 0xA1, 0x00
-};
-
-/* AC FXS RF14 Denmark 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_DK[] =
-{
-  /* AC Profile */
- 0x7D, 0x00, 0x9A, 0x4C, 0x01, 0x49, 0xCA, 0xE6, 0x98, 0x22, 0xA1, 0x52,
- 0xD2, 0xE7, 0x24, 0xF4, 0xCD, 0xAA, 0x97, 0x9A, 0xCA, 0xB3, 0xA5, 0x6E,
- 0x01, 0x8A, 0x32, 0xD0, 0xAB, 0x20, 0xAA, 0x49, 0x29, 0x7A, 0x32, 0xD6,
- 0xA2, 0xED, 0xC5, 0x97, 0x88, 0xBA, 0xC0, 0x22, 0xA7, 0x2C, 0xFE, 0x42,
- 0xDE, 0x22, 0xB6, 0xB3, 0x9F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x23, 0x53, 0x32, 0x2C, 0x1B, 0x22, 0xCA, 0x23, 0x63, 0x2A,
- 0x33, 0xD4, 0x2A, 0x40, 0x96, 0xA2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Spain 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_ES[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 Finland 270R+910R//120nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_FI[] =
-{
-  /* AC Profile */
- 0xFF, 0x00, 0x8D, 0x4C, 0x01, 0x49, 0xCA, 0xEF, 0x98, 0x2A, 0xB1, 0x23,
- 0x33, 0xB2, 0xAB, 0x44, 0xEB, 0xA4, 0x44, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x2D, 0x01, 0x24, 0x20, 0x25, 0xB8, 0x2D, 0x42, 0xDB, 0xBA,
- 0xE3, 0x43, 0xF2, 0xAC, 0x88, 0xC4, 0xB0, 0xA2, 0xA7, 0x42, 0x3E, 0xA2,
- 0x9F, 0x32, 0x26, 0xBE, 0x2F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xA2, 0x5C, 0x22, 0xA2, 0x13, 0xC1, 0xB3, 0x22, 0x23, 0x7A,
- 0x3D, 0xB4, 0xD4, 0x50, 0x96, 0x3C, 0x41, 0x00
-};
-
-/* AC FXS RF14 France 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_FR[] =
-{
-  /* AC Profile */
- 0xFC, 0x00, 0xA4, 0x4C, 0x01, 0x49, 0xCA, 0xE7, 0x98, 0xBA, 0x31, 0xA5,
- 0x62, 0x35, 0xAB, 0xAA, 0xAA, 0xAC, 0xA3, 0x9A, 0xAA, 0xA2, 0xC7, 0x6F,
- 0x01, 0x8A, 0x2D, 0x01, 0xBB, 0x10, 0xC2, 0x38, 0x2A, 0xA1, 0xC2, 0xA9,
- 0x23, 0xA2, 0x22, 0x2D, 0x88, 0xA3, 0xB0, 0x53, 0x55, 0x4A, 0xAD, 0xB2,
- 0xAD, 0x5A, 0x25, 0x72, 0x5E, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x2A, 0x43, 0x22, 0x9F, 0x1A, 0x22, 0x4B, 0x33, 0xD5, 0x2C,
- 0x7A, 0x87, 0xA8, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 UK 370R+620R//310nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_GB[] =
-{
-  /* AC Profile */
- 0x24, 0x00, 0x0A, 0x4C, 0x01, 0x49, 0xCA, 0xE6, 0x98, 0x22, 0xA1, 0x52,
- 0xD2, 0xE7, 0x24, 0xF4, 0xCD, 0xAA, 0x97, 0x9A, 0x2B, 0xA2, 0x27, 0x6E,
- 0x01, 0x8A, 0x32, 0xD0, 0xCB, 0x20, 0xBB, 0x59, 0x5A, 0x4A, 0xAA, 0xB5,
- 0x2C, 0x2D, 0x42, 0xC7, 0x88, 0xAA, 0xC0, 0xA3, 0xA7, 0xBA, 0xDE, 0x5C,
- 0xCE, 0xAA, 0xA6, 0xA2, 0x9F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x43, 0x5B, 0x32, 0x2C, 0x1D, 0x22, 0xAA, 0x2B, 0x33, 0xBA,
- 0x3C, 0x34, 0xBA, 0x40, 0x96, 0xA2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Greece 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_GR[] =
-{
-  /* AC Profile */
- 0x63, 0x00, 0x7D, 0x4C, 0x01, 0x49, 0xCA, 0x03, 0x98, 0x22, 0xA6, 0x2C,
- 0x3E, 0x2B, 0x87, 0x44, 0x36, 0x2A, 0x9F, 0x9A, 0x22, 0xBA, 0xA7, 0x9F,
- 0x01, 0x8A, 0x7D, 0xD0, 0xAA, 0xA0, 0x22, 0xAA, 0x98, 0xB4, 0x23, 0xBE,
- 0xAB, 0xBF, 0xAA, 0x97, 0x88, 0x3C, 0xC0, 0x3A, 0xBD, 0xED, 0x8F, 0xEB,
- 0xA6, 0x3A, 0x8F, 0x2B, 0x6F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xD2, 0x52, 0x22, 0xA2, 0x13, 0xA1, 0x97, 0x32, 0x25, 0xCA,
- 0x6B, 0x87, 0x2B, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Hungary 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_HU[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 Ireland 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_IE[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 Israel 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_IL[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 Iceland 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_IS[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 Italy 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_IT[] =
-{
-  /* AC Profile */
- 0xEE, 0x00, 0xBD, 0x4C, 0x01, 0x49, 0xCA, 0xF3, 0x98, 0x22, 0xD2, 0xBA,
- 0x34, 0x22, 0x3C, 0x53, 0xAB, 0xAA, 0xB4, 0x9A, 0x98, 0x1B, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0xBC, 0xD0, 0x2A, 0x2A, 0x3C, 0x4C, 0x4E, 0x23,
- 0xD2, 0xBB, 0xDB, 0x55, 0x88, 0xAA, 0xC0, 0x2C, 0xB5, 0x23, 0xAD, 0x4A,
- 0x5E, 0xAD, 0xB5, 0x2B, 0x2E, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xA2, 0x52, 0xA1, 0xA3, 0x1A, 0x32, 0xAA, 0x4A, 0xAF, 0x3B,
- 0xF4, 0x9F, 0x3A, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Japan 600R+1uF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_JP[] =
-{
-  /* AC Profile */
- 0xDA, 0x00, 0x5B, 0x4C, 0x01, 0x49, 0xCA, 0xF7, 0x98, 0xCA, 0x4D, 0xCD,
- 0x2C, 0x45, 0x36, 0x23, 0x44, 0x3A, 0xCC, 0x9A, 0xC2, 0x61, 0xA3, 0xA2,
- 0xC0, 0x8A, 0x7B, 0xA0, 0x5A, 0xA0, 0x23, 0xBB, 0x26, 0x23, 0x3A, 0x4B,
- 0x5A, 0x24, 0xAA, 0xBD, 0x88, 0xAA, 0x20, 0x4A, 0xCA, 0x34, 0xA1, 0x34,
- 0xA9, 0x3B, 0xB2, 0xAA, 0xAB, 0x82, 0x29, 0x71, 0x80, 0x22, 0xF0, 0x50,
- 0x00, 0x86, 0xF2, 0x62, 0xA1, 0x36, 0x12, 0xA2, 0x24, 0x4A, 0x34, 0x5F,
- 0x4C, 0x64, 0xB3, 0x40, 0x96, 0x2A, 0xC0, 0x00
-};
-
-/* AC FXS RF14 Netherlands 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_NL[] =
-{
-  /* AC Profile */
- 0x7D, 0x00, 0x38, 0x4C, 0x01, 0x49, 0xCA, 0xF5, 0x98, 0xAA, 0x7B, 0xAB,
- 0x2C, 0xA3, 0x25, 0xA5, 0x24, 0xB2, 0x3D, 0x9A, 0x22, 0xBA, 0xA6, 0x9F,
- 0x01, 0x8A, 0x34, 0xD0, 0xCD, 0xA0, 0xAB, 0xD3, 0x22, 0xAB, 0x4A, 0xA3,
- 0xA2, 0x2C, 0xAB, 0x45, 0x88, 0x2A, 0x20, 0x6C, 0xBC, 0xCE, 0xA6, 0x2B,
- 0xA5, 0xAA, 0x3E, 0xBA, 0x8F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x62, 0x52, 0x22, 0xCD, 0x12, 0x23, 0x44, 0x7A, 0x87, 0x3B,
- 0xFC, 0xBF, 0xBA, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Norway 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_NO[] =
-{
-  /* AC Profile */
- 0x04, 0x00, 0xA8, 0x4C, 0x01, 0x49, 0xCA, 0xE4, 0x98, 0xAA, 0x41, 0x22,
- 0xA1, 0xAA, 0x3B, 0x23, 0x2A, 0xD4, 0x23, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x2D, 0x01, 0xEA, 0x10, 0x22, 0xB8, 0x22, 0x3B, 0x23, 0xA1,
- 0xAA, 0xBA, 0x32, 0xC4, 0x88, 0x25, 0xB0, 0x3B, 0x24, 0x2C, 0x2D, 0xA3,
- 0xAC, 0xF4, 0xC4, 0xAB, 0xAD, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xBB, 0x52, 0xE2, 0xBD, 0x1B, 0xA1, 0x3B, 0x2A, 0xA3, 0x3A,
- 0x4A, 0x26, 0x29, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 New Zealand 370R+620R//310nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_NZ[] =
-{
-  /* AC Profile */
- 0xFF, 0x00, 0x0D, 0x4C, 0x01, 0x49, 0xCA, 0xFA, 0x98, 0xAB, 0x2A, 0xAB,
- 0x22, 0x22, 0xA1, 0xD2, 0xB4, 0x4B, 0xBB, 0x9A, 0x2A, 0xB3, 0x46, 0x1F,
- 0x01, 0x8A, 0x1D, 0x01, 0xBA, 0xD0, 0xA3, 0x4B, 0xBC, 0x3A, 0x3A, 0xAC,
- 0x2C, 0xB6, 0x2B, 0xAE, 0x88, 0x4C, 0xC0, 0xCB, 0xA3, 0xAA, 0x2B, 0x2A,
- 0xA3, 0x3A, 0x2C, 0x98, 0x15, 0x82, 0x29, 0xF1, 0x80, 0xCA, 0xF0, 0x50,
- 0x00, 0x86, 0xB2, 0x5C, 0x22, 0x5C, 0x12, 0x42, 0xBA, 0x2B, 0xD3, 0x2A,
- 0x36, 0xC4, 0x42, 0x50, 0x96, 0xD2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Portugal 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_PT[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 Russia 150R+510R//47nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_RU[] =
-{
-  /* AC Profile */
- 0x00, 0x00, 0x70, 0x4C, 0x01, 0x49, 0xCA, 0xED, 0x98, 0x98, 0x13, 0xB3,
- 0xA4, 0xAB, 0xAC, 0xBB, 0xEC, 0x2B, 0x25, 0x9A, 0x3E, 0xAA, 0xA7, 0x9F,
- 0x01, 0x8A, 0x2D, 0x01, 0xA8, 0x70, 0x2C, 0x2A, 0x7A, 0xC3, 0x23, 0x2D,
- 0x22, 0xA6, 0xAB, 0x87, 0x88, 0x65, 0x40, 0xBC, 0xB6, 0x22, 0xAD, 0x2A,
- 0xAF, 0x22, 0xA5, 0x32, 0xBE, 0x82, 0xF8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xE3, 0x5A, 0x22, 0xAC, 0x14, 0xB2, 0x34, 0x53, 0xAF, 0xDA,
- 0xFA, 0x9F, 0xA9, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Sweden 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_SE[] =
-{
-  /* AC Profile */
- 0x0E, 0x00, 0x42, 0x4C, 0x01, 0x49, 0xCA, 0xF0, 0x98, 0x24, 0xF1, 0xB4,
- 0xA2, 0xAB, 0x4B, 0x4B, 0xAA, 0xA7, 0xC3, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x2D, 0x01, 0xB3, 0x20, 0x5B, 0xB8, 0x24, 0xA2, 0x3C, 0xAC,
- 0xAA, 0x27, 0x32, 0x9F, 0x88, 0x3A, 0xA0, 0x3A, 0x25, 0x3A, 0xAD, 0x22,
- 0xAD, 0xBE, 0x25, 0xA5, 0x2E, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x73, 0x52, 0x22, 0xD2, 0x12, 0xB1, 0x4A, 0x23, 0xC4, 0xC3,
- 0x6A, 0x97, 0xA8, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Turkey 270R+750R//150nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_TK[] =
-{
-  /* AC Profile */
- 0xD5, 0x00, 0xEC, 0x4C, 0x01, 0x49, 0xCA, 0xE8, 0x98, 0x4A, 0xA1, 0x34,
- 0xA2, 0xA2, 0xAC, 0x2C, 0xBB, 0x2B, 0xA4, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x9C, 0xD0, 0x2B, 0x20, 0x8F, 0x39, 0x2A, 0xBB, 0xA4, 0x24,
- 0xB2, 0xBC, 0x4B, 0x26, 0x88, 0xA3, 0xC0, 0xC2, 0x27, 0xBA, 0x3E, 0xAC,
- 0xAF, 0xB4, 0x26, 0x24, 0x3F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xC3, 0x5F, 0x32, 0x98, 0x03, 0xA1, 0xAA, 0x23, 0xB3, 0x2C,
- 0x4B, 0x55, 0x25, 0x60, 0x96, 0xF2, 0xC1, 0x00
-};
-
-/* AC FXS RF14 South Africa 220R+820R//115nF Normal Coefficients */
-const VpProfileDataType AC_FXS_RF14_ZA[] =
-{
-  /* AC Profile */
- 0x6D, 0x00, 0xA7, 0x4C, 0x01, 0x49, 0xCA, 0xEA, 0x98, 0xFA, 0xE1, 0x23,
- 0xA2, 0xEA, 0xCB, 0xB3, 0xAA, 0xA3, 0xB3, 0x9A, 0x98, 0x92, 0x97, 0x9F,
- 0x01, 0x8A, 0x2E, 0x01, 0xB3, 0x20, 0xAB, 0xA8, 0xCC, 0x24, 0x22, 0x97,
- 0xAF, 0x8F, 0xD3, 0xBF, 0x88, 0x3B, 0xB0, 0x33, 0x46, 0x2A, 0x2E, 0x33,
- 0x4F, 0xAE, 0xA5, 0xB3, 0xBE, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x2A, 0x42, 0x22, 0x98, 0x02, 0x42, 0xA2, 0x43, 0xA6, 0xD8,
- 0xFA, 0x8F, 0x29, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 600R Wideband Coefficients (Default)  */
-const VpProfileDataType AC_FXS_RF14_WB_600R_DEF[] =
-{
-  /* AC Profile */
- 0xED, 0x00, 0xA9, 0x4C, 0x01, 0x49, 0xCA, 0xFC, 0x98, 0xCC, 0x2A, 0xA2,
- 0x3B, 0x98, 0xB3, 0x43, 0xA2, 0x3A, 0xAB, 0x9A, 0x2D, 0xAA, 0xB6, 0x9F,
- 0x01, 0x8A, 0x2E, 0x01, 0xC4, 0xA0, 0x2E, 0x23, 0x3A, 0x2E, 0x9F, 0x87,
- 0x4C, 0xCE, 0xB2, 0x27, 0x88, 0x4A, 0x20, 0xBA, 0xAC, 0x22, 0xB5, 0x5A,
- 0xB5, 0x3B, 0x4D, 0xA2, 0x27, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xCB, 0x5E, 0x22, 0xBC, 0x12, 0xA3, 0xA9, 0xFA, 0xC6, 0x34,
- 0xE2, 0x9F, 0xBA, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 ETSI ES201 970 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_ETSI[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Telcordia GR-57 900R+2.16uF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_GR57[] =
-{
-  /* AC Profile */
- 0x1D, 0x00, 0x10, 0x4C, 0x01, 0x49, 0xCA, 0x0B, 0x98, 0xC2, 0xBB, 0x2A,
- 0x2B, 0x2B, 0x8F, 0x6A, 0xB3, 0x2A, 0xA7, 0x9A, 0x7B, 0xA2, 0x36, 0x6E,
- 0x01, 0x8A, 0x2D, 0xD0, 0x2C, 0xA0, 0x2B, 0xAA, 0x2C, 0x62, 0x22, 0xAA,
- 0xBC, 0xA4, 0x23, 0xAE, 0x88, 0xA2, 0x30, 0xAD, 0xC9, 0x2C, 0x41, 0xB3,
- 0xA9, 0xB2, 0x53, 0xAB, 0x3D, 0x82, 0xB8, 0x71, 0x80, 0x7A, 0xF0, 0x50,
- 0x00, 0x86, 0x2B, 0x55, 0xB1, 0x3A, 0x0A, 0xA2, 0x98, 0xCA, 0xA4, 0xAA,
- 0x5A, 0x87, 0x6A, 0x60, 0x96, 0x1E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Austria 220R+820R//115nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_AT[] =
-{
-  /* AC Profile */
- 0x30, 0x00, 0xC0, 0x4C, 0x01, 0x49, 0xCA, 0xDB, 0x98, 0xBA, 0xA1, 0xBA,
- 0x22, 0x2A, 0xF4, 0xAA, 0xAB, 0x22, 0x65, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x01, 0x11, 0xA3, 0x10, 0x2B, 0x29, 0x53, 0xB9, 0xBD, 0xB3,
- 0x7B, 0xCC, 0xDB, 0xA6, 0x88, 0x2A, 0xB0, 0x2B, 0x9F, 0x2E, 0x3E, 0x22,
- 0xBE, 0xC3, 0x26, 0x35, 0x2F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x2B, 0x53, 0x52, 0x4B, 0x12, 0x52, 0xDF, 0x32, 0xB4, 0x3A,
- 0x5A, 0xA7, 0xB9, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Australia 220R+820R//120nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_AU[] =
-{
-  /* AC Profile */
- 0xC2, 0x00, 0x2E, 0x4C, 0x01, 0x49, 0xCA, 0xF0, 0x98, 0xBA, 0xA1, 0xAD,
- 0xA3, 0xA2, 0x2C, 0x2D, 0xAB, 0x22, 0xD4, 0x9A, 0xCC, 0xA2, 0x97, 0x9F,
- 0x01, 0x8A, 0x2E, 0x01, 0x7A, 0x10, 0xBA, 0x29, 0x2A, 0x3A, 0xA2, 0x32,
- 0xB2, 0xAA, 0xF2, 0xA4, 0x88, 0xBA, 0xA0, 0x5C, 0x3F, 0x2C, 0xCE, 0xAA,
- 0x87, 0xC2, 0x66, 0xDB, 0x7E, 0x82, 0xA8, 0x71, 0x80, 0x39, 0x70, 0x50,
- 0x00, 0x86, 0xAA, 0x59, 0x81, 0x25, 0x1A, 0xA1, 0xBB, 0x2B, 0xB3, 0x2C,
- 0x46, 0xD5, 0xBC, 0x60, 0x96, 0xAA, 0xB1, 0x00
-};
-
-/* AC FXS RF14 Belgium 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_BE[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Bulgaria 220R+820R//115nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_BG[] =
-{
-  /* AC Profile */
- 0x30, 0x00, 0xC0, 0x4C, 0x01, 0x49, 0xCA, 0xDB, 0x98, 0xBA, 0xA1, 0xBA,
- 0x22, 0x2A, 0xF4, 0xAA, 0xAB, 0x22, 0x65, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x01, 0x11, 0xA3, 0x10, 0x2B, 0x29, 0x53, 0xB9, 0xBD, 0xB3,
- 0x7B, 0xCC, 0xDB, 0xA6, 0x88, 0x2A, 0xB0, 0x2B, 0x9F, 0x2E, 0x3E, 0x22,
- 0xBE, 0xC3, 0x26, 0x35, 0x2F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x2B, 0x53, 0x52, 0x4B, 0x12, 0x52, 0xDF, 0x32, 0xB4, 0x3A,
- 0x5A, 0xA7, 0xB9, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Brazil 900R Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_BR[] =
-{
-  /* AC Profile */
- 0xF3, 0x00, 0x33, 0x4C, 0x01, 0x49, 0xCA, 0x0B, 0x98, 0xAA, 0xAB, 0xAC,
- 0xAA, 0x42, 0xAD, 0xB8, 0xF3, 0x34, 0xA5, 0x9A, 0xAC, 0xAA, 0xC7, 0x9F,
- 0x01, 0x8A, 0x2E, 0x01, 0xAA, 0xA0, 0xCB, 0xDA, 0xAB, 0x22, 0xBC, 0xAA,
- 0x3B, 0xA4, 0x42, 0x2F, 0x88, 0xAA, 0x40, 0x4A, 0x4A, 0xB3, 0x22, 0x3D,
- 0x2B, 0xB2, 0xAF, 0x4A, 0x37, 0x82, 0xA9, 0xF1, 0x80, 0xB9, 0xF0, 0x50,
- 0x00, 0x86, 0x2F, 0x5A, 0xA1, 0x3A, 0x03, 0xA2, 0xA3, 0xCC, 0x25, 0x3A,
- 0x54, 0x3E, 0xCB, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Switzerland 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_CH[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 China 200R+680R//100nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_CN[] =
-{
-  /* AC Profile */
- 0xEF, 0x00, 0x46, 0x4C, 0x01, 0x49, 0xCA, 0xDA, 0x98, 0xB3, 0xB1, 0x23,
- 0x32, 0x64, 0x97, 0xAA, 0x2B, 0x4A, 0xA4, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xCD, 0x10, 0x2B, 0x29, 0x22, 0x2A, 0xA2, 0x33,
- 0x4B, 0x4C, 0xBD, 0xF6, 0x88, 0x2A, 0xC0, 0x52, 0x97, 0xF2, 0x2E, 0xAA,
- 0x4E, 0xAC, 0xB5, 0x5B, 0xBE, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x2A, 0x5A, 0xA2, 0xBA, 0x1B, 0x22, 0xCA, 0x24, 0xC3, 0x43,
- 0x42, 0xA4, 0x4B, 0x50, 0x96, 0x3C, 0x41, 0x00
-};
-
-/* AC FXS RF14 Germany 220R+820R//115nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_DE[] =
-{
-  /* AC Profile */
- 0x27, 0x00, 0xD7, 0x4C, 0x01, 0x49, 0xCA, 0xDB, 0x98, 0xBA, 0xA1, 0xBA,
- 0x22, 0x2A, 0xF4, 0xAA, 0xAB, 0x22, 0x65, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xA3, 0x10, 0x2B, 0x29, 0x53, 0xB9, 0xBD, 0xB3,
- 0x7B, 0xCC, 0xDB, 0xA6, 0x88, 0x2A, 0xB0, 0x2B, 0x9F, 0x2E, 0x3E, 0x22,
- 0xBE, 0xC3, 0x26, 0x35, 0x2F, 0x82, 0xB8, 0x71, 0x80, 0xAB, 0xF0, 0x50,
- 0x00, 0x86, 0xCA, 0x5A, 0xA2, 0xBA, 0x1F, 0x22, 0x3B, 0x2A, 0x23, 0x2B,
- 0x3A, 0x24, 0x4B, 0x40, 0x96, 0x22, 0x21, 0x00
-};
-
-/* AC FXS RF14 Denmark 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_DK[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Spain 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_ES[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Finland 270R+910R//120nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_FI[] =
-{
-  /* AC Profile */
- 0xF1, 0x00, 0xB1, 0x4C, 0x01, 0x49, 0xCA, 0xE5, 0x98, 0x2E, 0x52, 0x2A,
- 0xB2, 0xBA, 0xB3, 0xA2, 0xAE, 0x22, 0x37, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x01, 0x11, 0x2B, 0x10, 0xA3, 0xB9, 0xA2, 0xC9, 0xAA, 0xB4,
- 0x3A, 0xBC, 0x22, 0x37, 0x88, 0xEC, 0xB0, 0xB3, 0x2E, 0xE2, 0x3F, 0xAA,
- 0x8F, 0x25, 0x97, 0xDB, 0xAF, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0x7A, 0x5A, 0xB2, 0x3B, 0x12, 0xA1, 0xAC, 0x24, 0xA2, 0x73,
- 0x32, 0xB3, 0x22, 0x40, 0x96, 0x24, 0xA0, 0x00
-};
-
-/* AC FXS RF14 France 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_FR[] =
-{
-  /* AC Profile */
- 0x98, 0x00, 0x26, 0x4C, 0x01, 0x49, 0xCA, 0xD7, 0x98, 0x4F, 0x22, 0xB5,
- 0xB1, 0xC6, 0x23, 0x3A, 0xAB, 0x24, 0xB5, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x01, 0x11, 0x22, 0x10, 0x3A, 0x29, 0x3C, 0x29, 0x32, 0xB3,
- 0x4A, 0x2C, 0x2E, 0xB6, 0x88, 0xAC, 0xB0, 0x43, 0x37, 0xAB, 0x3E, 0xB4,
- 0x3E, 0x22, 0x37, 0x22, 0xAF, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
- 0x00, 0x86, 0xAA, 0x52, 0xE2, 0x2B, 0x12, 0x62, 0x63, 0x3A, 0x24, 0xA2,
- 0x5C, 0x36, 0x39, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 UK 370R+620R//310nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_GB[] =
-{
-  /* AC Profile */
- 0xDB, 0x00, 0x85, 0x4C, 0x01, 0x49, 0xCA, 0xE6, 0x98, 0x2B, 0x2A, 0x3B,
- 0xD1, 0xB4, 0x22, 0x23, 0x6C, 0xA6, 0x43, 0x9A, 0xBA, 0x23, 0x25, 0x2D,
- 0x01, 0x8A, 0x32, 0xC0, 0x2A, 0x10, 0xA5, 0x4A, 0x62, 0xBA, 0xA6, 0xA9,
- 0xAA, 0xC3, 0xA2, 0xAB, 0x88, 0x32, 0xC0, 0x3D, 0xB3, 0xA3, 0xBA, 0x53,
- 0xC2, 0xAA, 0xAA, 0xC4, 0xA3, 0x82, 0xE8, 0x71, 0x80, 0xAA, 0xF0, 0x50,
- 0x00, 0x86, 0x3A, 0x5B, 0xC2, 0xFA, 0x12, 0xB2, 0xE2, 0x33, 0xE3, 0xBA,
- 0x33, 0x24, 0xA4, 0x40, 0x96, 0x23, 0xB0, 0x00
-};
-
-/* AC FXS RF14 Greece 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_GR[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Hungary 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_HU[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Ireland 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_IE[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Israel 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_IL[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Iceland 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_IS[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Italy 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_IT[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Japan 600R+1uF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_JP[] =
-{
-  /* AC Profile */
- 0x83, 0x00, 0xF8, 0x4C, 0x01, 0x49, 0xCA, 0xFF, 0x98, 0xAB, 0x3A, 0x35,
- 0x2C, 0xA2, 0x43, 0xAA, 0x23, 0x26, 0xAB, 0x9A, 0xAA, 0xA2, 0x24, 0x1D,
- 0x01, 0x8A, 0xAA, 0xB0, 0xA3, 0xA0, 0x22, 0xA3, 0x2A, 0xCE, 0x2A, 0xBD,
- 0x62, 0xA5, 0x54, 0xBE, 0x88, 0x23, 0x30, 0x2E, 0xAC, 0xB2, 0xA6, 0xBA,
- 0x26, 0xA2, 0xED, 0x22, 0x27, 0x82, 0xAA, 0x61, 0x80, 0x2A, 0x60, 0x50,
- 0x00, 0x86, 0x23, 0x62, 0x22, 0x98, 0x0C, 0x43, 0x2A, 0x44, 0xA4, 0xBD,
- 0x62, 0xB5, 0x4F, 0x50, 0x96, 0xBC, 0x01, 0x00
-};
-
-/* AC FXS RF14 Netherlands 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_NL[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Norway 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_NO[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 New Zealand 370R+620R//310nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_NZ[] =
-{
-  /* AC Profile */
- 0x11, 0x00, 0xE2, 0x4C, 0x01, 0x49, 0xCA, 0xF2, 0x98, 0x5A, 0x29, 0xCB,
- 0xA1, 0xA3, 0xA1, 0xB4, 0x3D, 0x22, 0x24, 0x9A, 0x22, 0xA2, 0xE5, 0x2E,
- 0x01, 0x8A, 0x3A, 0xB0, 0xDA, 0x30, 0xBD, 0xAB, 0x42, 0xAF, 0xCA, 0xA9,
- 0x32, 0x23, 0xBA, 0xAB, 0x88, 0x2A, 0xB0, 0xAD, 0x42, 0x4C, 0xA9, 0xA6,
- 0xA1, 0x2A, 0x2A, 0xA2, 0x43, 0x82, 0x23, 0x71, 0x80, 0x4A, 0x60, 0x50,
- 0x00, 0x86, 0xCA, 0x59, 0x81, 0xBA, 0x12, 0xA2, 0x44, 0x3B, 0xA3, 0x23,
- 0x4A, 0xC4, 0x3A, 0x40, 0x96, 0x22, 0xB0, 0x00
-};
-
-/* AC FXS RF14 Portugal 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_PT[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Russia 150R+510R//47nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_RU[] =
-{
-  /* AC Profile */
- 0x2E, 0x00, 0x60, 0x4C, 0x01, 0x49, 0xCA, 0xE6, 0x98, 0x2D, 0xC2, 0x62,
- 0x43, 0xA2, 0xBC, 0x24, 0xEB, 0xBA, 0xB4, 0x9A, 0x24, 0xB5, 0x97, 0x9F,
- 0x01, 0x8A, 0x2E, 0x01, 0x2C, 0x30, 0x62, 0x3A, 0x22, 0x2B, 0x3B, 0xA2,
- 0xA2, 0xCB, 0x2A, 0xE5, 0x88, 0xDA, 0x40, 0xBA, 0x35, 0x24, 0xDD, 0x4A,
- 0xAD, 0xD4, 0xA4, 0xAF, 0xAD, 0x82, 0xA8, 0x71, 0x80, 0xB9, 0xF0, 0x50,
- 0x00, 0x86, 0x2A, 0x5A, 0xB2, 0x3B, 0x1A, 0x32, 0x2A, 0x32, 0xA5, 0xA8,
- 0x72, 0x9F, 0x29, 0xF0, 0x96, 0x2E, 0x01, 0x00
-};
-
-/* AC FXS RF14 Sweden 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_SE[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 Turkey 270R+750R//150nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_TK[] =
-{
-  /* AC Profile */
- 0xAA, 0x00, 0x9C, 0x4C, 0x01, 0x49, 0xCA, 0xE0, 0x98, 0xAA, 0xA3, 0x6B,
- 0x22, 0x43, 0xA2, 0xAC, 0xBF, 0x22, 0xA6, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xBA, 0x10, 0xA2, 0x3A, 0xBA, 0xE9, 0xAA, 0xB5,
- 0x2A, 0xBC, 0xAF, 0x97, 0x88, 0xAB, 0xC0, 0x4A, 0xBE, 0xBA, 0x9F, 0xC3,
- 0xAF, 0x3A, 0x3F, 0xCD, 0xA7, 0x82, 0xC8, 0x71, 0x80, 0x69, 0xF0, 0x50,
- 0x00, 0x86, 0xBA, 0x52, 0xB2, 0xBA, 0x12, 0x42, 0x4A, 0x2A, 0x33, 0xBA,
- 0x33, 0x34, 0x4B, 0x40, 0x96, 0xB2, 0xA0, 0x00
-};
-
-/* AC FXS RF14 South Africa 220R+820R//115nF Wideband Coefficients */
-const VpProfileDataType AC_FXS_RF14_WB_ZA[] =
-{
-  /* AC Profile */
- 0x27, 0x00, 0xD7, 0x4C, 0x01, 0x49, 0xCA, 0xDB, 0x98, 0xBA, 0xA1, 0xBA,
- 0x22, 0x2A, 0xF4, 0xAA, 0xAB, 0x22, 0x65, 0x9A, 0x01, 0x90, 0x01, 0x01,
- 0x90, 0x8A, 0x2E, 0x01, 0xA3, 0x10, 0x2B, 0x29, 0x53, 0xB9, 0xBD, 0xB3,
- 0x7B, 0xCC, 0xDB, 0xA6, 0x88, 0x2A, 0xB0, 0x2B, 0x9F, 0x2E, 0x3E, 0x22,
- 0xBE, 0xC3, 0x26, 0x35, 0x2F, 0x82, 0xB8, 0x71, 0x80, 0xAB, 0xF0, 0x50,
- 0x00, 0x86, 0xCA, 0x5A, 0xA2, 0xBA, 0x1F, 0x22, 0x3B, 0x2A, 0x23, 0x2B,
- 0x3A, 0x24, 0x4B, 0x40, 0x96, 0x22, 0x21, 0x00
-};
-
 /************** Ring_Parameters **************/
 
 /* Default Ringing 25Hz 50Vrms Fixed, AC Trip - Use for all countries unless country profile exists */
@@ -1090,206 +185,6 @@ const VpProfileDataType RING_ZL880_ABS100V_DEF[] =
    0x00                    /* Balanced; Ring Cadence Control Disabled */
 };
 
-/* Austria Ringing 50Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_AT[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x00, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x89, 0x3A, /* 50.2 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 2; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
-/* Canada Ringing 20Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_CA[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x00, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x37, 0x3A, /* 20.1 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 2; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
-/* Finland Ringing 50Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_FI[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x00, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x89, 0x3A, /* 50.2 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 2; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
-/* France Ringing 50Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_FR[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x00, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x89, 0x3A, /* 50.2 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 2; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
-/* Hong Kong Ringing 20Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_HK[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x00, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x37, 0x3A, /* 20.1 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 2; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
-/* Japan Ringing 16Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_JP[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x08, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x2C, 0x3A, /* 16.1 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 1; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
-/* Korea Ringing 20Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_KR[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x00, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x37, 0x3A, /* 20.1 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 2; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
-/* Singapore Ringing 24Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_SG[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x08, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x42, 0x3A, /* 24.2 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 1; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
-/* Taiwan Ringing 20Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_TW[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x00, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x37, 0x3A, /* 20.1 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 2; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
-/* USA Ringing 20Hz 50Vrms Fixed, AC Trip */
-const VpProfileDataType RING_ZL880_ABS100V_US[] =
-{
-/* Profile Header ---------------------------------------------------------- */
-   0x0C, 0x04, 0x00,       /* Ringing Profile for ZL88601 device */
-   0x12,                   /* Profile length = 18 + 4 = 22 bytes */
-   0x01,                   /* Profile format version = 1 */
-   0x0C,                   /* MPI section length = 12 bytes */
-/* Raw MPI Section --------------------------------------------------------- */
-   0xC0, 0x00, 0x00, 0x00, /* Ringing Generator Parameters: */
-         0x00, 0x37, 0x3A, /* 20.1 Hz Sine; 1.41 CF; 70.70 Vpk; 0.00 V bias */
-         0x9D, 0x00, 0x00, /* Ring trip cycles = 2; RTHALFCYC = 0 */
-         0x00, 0x00,
-/* Formatted Parameters Section -------------------------------------------- */
-   0xAA,                   /* Ring Trip Method = AC; Threshold = 21.0 mA */
-   0x02,                   /* Ringing Current Limit = 54 mA */
-   0x4E,                   /* Fixed; Max Ringing Supply = 75 V */
-   0x00                    /* Balanced; Ring Cadence Control Disabled */
-};
-
 /************** Call_Progress_Tones **************/
 
 /************** Cadence_Definitions **************/
@@ -1298,9 +193,9 @@ const VpProfileDataType RING_ZL880_ABS100V_US[] =
 
 /************** Metering_Profile **************/
 
-int dev_profile_size = sizeof(ZLR88621L_ABS81V_DEVICE);
+int dev_profile_size = sizeof(ZLR88621L_ABS90V_OC_DEVICE);
 int dc_profile_size = sizeof(DC_FXS_ZL880_ABS100V_DEF);
 int ac_profile_size = sizeof(AC_FXS_RF14_600R_DEF);
 int ring_profile_size = sizeof(RING_ZL880_ABS100V_DEF);
 
-/* end of file profile_88601.c */
+/* end of file Multiline4ch_8ch_PW2_4.c */
diff --git a/tools/voice/zarlink/kernel/profile_88601.h b/tools/voice/zarlink/kernel/profile_88601.h
index 458d05f..8ceb6184 100644
--- a/tools/voice/zarlink/kernel/profile_88601.h
+++ b/tools/voice/zarlink/kernel/profile_88601.h
@@ -1,12 +1,11 @@
 /*
- * profile_88601.h --
+ * Multiline4ch_8ch_PW2_4.h --
  *
  * This header file exports the Profile data types
  *
  * Project Info --
- *   File:   C:\Users\Kosmo\Documents\MISL-Zarlink\VE886.vpw
- *   Type:   Design for ZLR88621L SM2 Line Module Featuring the ZL88601, Lite Coefficients
- *   Date:   Friday, April 26, 2013 11:33:46
+ *   Type:   Design for ZLR88601 4 to 8 Line, Multiline, Lite Coefficients
+ *   Date:   Thursday, August 08, 2013 10:08:23
  *   Device: ZL880 ZL88601
  *
  *   This file was generated with Profile Wizard Version: P2.4.0
@@ -83,8 +82,8 @@
  *  -----------------------------------------------------------------------------------------------------------------------------------------------------
  */
 
-#ifndef PROFILE_88601_H
-#define PROFILE_88601_H
+#ifndef MULTILINE4CH_8CH_PW2_4_H
+#define MULTILINE4CH_8CH_PW2_4_H
 
 #ifdef VP_API_TYPES_H
 #include "vp_api_types.h"
@@ -92,97 +91,19 @@
 typedef unsigned char VpProfileDataType;
 #endif
 
-extern int dev_profile_size;
-extern int dc_profile_size;
-extern int ac_profile_size;
-extern int ring_profile_size;
 
 /************** Device_Parameters **************/
-extern const VpProfileDataType ZLR88621L_ABS81V_DEVICE[];/* Device Configuration Data - ZL88601 100V ABS (-81V/-27V) */
-extern const VpProfileDataType ZLR88621L_ABS90V_DEVICE[];/* Device Configuration Data - ZL88601 100V ABS (-90V/-30V) */
+/* Device Configuration Data - ZL88601 100V ABS (-90V/-30V) Master and Slave */
+extern const VpProfileDataType ZLR88621L_ABS90V_OC_DEVICE[];
 
 /************** DC_Parameters **************/
 extern const VpProfileDataType DC_FXS_ZL880_ABS100V_DEF[];/* DC FXS Defaults - Use for all countries unless country file exists - 23mA Current Feed */
-extern const VpProfileDataType DC_FXS_ZL880_ABS100V_CN[];/* China DC FXS Parameters - 20mA Current Feed */
-extern const VpProfileDataType DC_FXS_ZL880_ABS100V_ETSI[];/* ETSI DC FXS Parameters - 23mA Current Feed */
-extern const VpProfileDataType DC_FXS_ZL880_ABS100V_US[];/* USA DC FXS Parameters - 23mA Current Feed */
 
 /************** AC_Coefficients **************/
 extern const VpProfileDataType AC_FXS_RF14_600R_DEF[];/* AC FXS RF14 600R Normal Coefficients (Default)  */
-extern const VpProfileDataType AC_FXS_RF14_ETSI[];   /* AC FXS RF14 ETSI ES201 970 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_GR57[];   /* AC FXS RF14 Telcordia GR-57 900R+2.16uF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_AT[];     /* AC FXS RF14 Austria 220R+820R//115nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_AU[];     /* AC FXS RF14 Australia 220R+820R//120nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_BE[];     /* AC FXS RF14 Belgium 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_BG[];     /* AC FXS RF14 Bulgaria 220R+820R//115nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_BR[];     /* AC FXS RF14 Brazil 900R Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_CH[];     /* AC FXS RF14 Switzerland 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_CN[];     /* AC FXS RF14 China 200R+680R//100nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_DE[];     /* AC FXS RF14 Germany 220R+820R//115nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_DK[];     /* AC FXS RF14 Denmark 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_ES[];     /* AC FXS RF14 Spain 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_FI[];     /* AC FXS RF14 Finland 270R+910R//120nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_FR[];     /* AC FXS RF14 France 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_GB[];     /* AC FXS RF14 UK 370R+620R//310nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_GR[];     /* AC FXS RF14 Greece 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_HU[];     /* AC FXS RF14 Hungary 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_IE[];     /* AC FXS RF14 Ireland 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_IL[];     /* AC FXS RF14 Israel 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_IS[];     /* AC FXS RF14 Iceland 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_IT[];     /* AC FXS RF14 Italy 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_JP[];     /* AC FXS RF14 Japan 600R+1uF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_NL[];     /* AC FXS RF14 Netherlands 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_NO[];     /* AC FXS RF14 Norway 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_NZ[];     /* AC FXS RF14 New Zealand 370R+620R//310nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_PT[];     /* AC FXS RF14 Portugal 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_RU[];     /* AC FXS RF14 Russia 150R+510R//47nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_SE[];     /* AC FXS RF14 Sweden 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_TK[];     /* AC FXS RF14 Turkey 270R+750R//150nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_ZA[];     /* AC FXS RF14 South Africa 220R+820R//115nF Normal Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_600R_DEF[];/* AC FXS RF14 600R Wideband Coefficients (Default)  */
-extern const VpProfileDataType AC_FXS_RF14_WB_ETSI[];/* AC FXS RF14 ETSI ES201 970 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_GR57[];/* AC FXS RF14 Telcordia GR-57 900R+2.16uF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_AT[];  /* AC FXS RF14 Austria 220R+820R//115nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_AU[];  /* AC FXS RF14 Australia 220R+820R//120nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_BE[];  /* AC FXS RF14 Belgium 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_BG[];  /* AC FXS RF14 Bulgaria 220R+820R//115nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_BR[];  /* AC FXS RF14 Brazil 900R Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_CH[];  /* AC FXS RF14 Switzerland 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_CN[];  /* AC FXS RF14 China 200R+680R//100nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_DE[];  /* AC FXS RF14 Germany 220R+820R//115nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_DK[];  /* AC FXS RF14 Denmark 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_ES[];  /* AC FXS RF14 Spain 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_FI[];  /* AC FXS RF14 Finland 270R+910R//120nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_FR[];  /* AC FXS RF14 France 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_GB[];  /* AC FXS RF14 UK 370R+620R//310nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_GR[];  /* AC FXS RF14 Greece 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_HU[];  /* AC FXS RF14 Hungary 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_IE[];  /* AC FXS RF14 Ireland 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_IL[];  /* AC FXS RF14 Israel 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_IS[];  /* AC FXS RF14 Iceland 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_IT[];  /* AC FXS RF14 Italy 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_JP[];  /* AC FXS RF14 Japan 600R+1uF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_NL[];  /* AC FXS RF14 Netherlands 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_NO[];  /* AC FXS RF14 Norway 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_NZ[];  /* AC FXS RF14 New Zealand 370R+620R//310nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_PT[];  /* AC FXS RF14 Portugal 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_RU[];  /* AC FXS RF14 Russia 150R+510R//47nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_SE[];  /* AC FXS RF14 Sweden 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_TK[];  /* AC FXS RF14 Turkey 270R+750R//150nF Wideband Coefficients */
-extern const VpProfileDataType AC_FXS_RF14_WB_ZA[];  /* AC FXS RF14 South Africa 220R+820R//115nF Wideband Coefficients */
 
 /************** Ring_Parameters **************/
 extern const VpProfileDataType RING_ZL880_ABS100V_DEF[];/* Default Ringing 25Hz 50Vrms Fixed, AC Trip - Use for all countries unless country profile exists */
-extern const VpProfileDataType RING_ZL880_ABS100V_AT[];/* Austria Ringing 50Hz 50Vrms Fixed, AC Trip */
-extern const VpProfileDataType RING_ZL880_ABS100V_CA[];/* Canada Ringing 20Hz 50Vrms Fixed, AC Trip */
-extern const VpProfileDataType RING_ZL880_ABS100V_FI[];/* Finland Ringing 50Hz 50Vrms Fixed, AC Trip */
-extern const VpProfileDataType RING_ZL880_ABS100V_FR[];/* France Ringing 50Hz 50Vrms Fixed, AC Trip */
-extern const VpProfileDataType RING_ZL880_ABS100V_HK[];/* Hong Kong Ringing 20Hz 50Vrms Fixed, AC Trip */
-extern const VpProfileDataType RING_ZL880_ABS100V_JP[];/* Japan Ringing 16Hz 50Vrms Fixed, AC Trip */
-extern const VpProfileDataType RING_ZL880_ABS100V_KR[];/* Korea Ringing 20Hz 50Vrms Fixed, AC Trip */
-extern const VpProfileDataType RING_ZL880_ABS100V_SG[];/* Singapore Ringing 24Hz 50Vrms Fixed, AC Trip */
-extern const VpProfileDataType RING_ZL880_ABS100V_TW[];/* Taiwan Ringing 20Hz 50Vrms Fixed, AC Trip */
-extern const VpProfileDataType RING_ZL880_ABS100V_US[];/* USA Ringing 20Hz 50Vrms Fixed, AC Trip */
 
 /************** Call_Progress_Tones **************/
 
@@ -192,4 +113,5 @@ extern const VpProfileDataType RING_ZL880_ABS100V_US[];/* USA Ringing 20Hz 50Vrm
 
 /************** Metering_Profile **************/
 
-#endif /* PROFILE_88601_H */
+#endif /* MULTILINE4CH_8CH_PW2_4_H */
+
-- 
1.7.5.4

