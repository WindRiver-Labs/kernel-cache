From 1486658adee63e1a34f1bbbe8ed2e19f391c1815 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Sun, 7 Apr 2013 14:36:24 +0300
Subject: [PATCH 0549/1825] ALP: Eth Complex: Added
 mvEthCompQuadPhyP1SmiConfig & aligned Phy
 initializations

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit abb7c39c3de49735ceabf42ba14888b70d2ab49a

Change-Id: If52f6dbc2213edc6de9bfda9c5684fbfe154a035
Reviewed-on: http://vgitil04.il.marvell.com:8080/1514
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |    2 +-
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    4 -
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.h     |    2 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |    2 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    2 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |    1 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c    |  331 ++++++++++++++++++++
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h    |  109 +++++++
 8 files changed, 446 insertions(+), 7 deletions(-)
 create mode 100755 arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
 create mode 100644 arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 7773a79..9903325 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -757,7 +757,7 @@ MV_VOID mvBoardConfigInit(void)
 		ethSataComplexOptions |= MV_ETH_COMPLEX_SW_P6_RGMII0;
 
 	if (mac1con == 0x2) /* 10  MAC1 connected to Switch P4 */
-		ethSataComplexOptions |= MV_ETH_COMPLEX_SW_P4_RGMII1;
+		ethSataComplexOptions |= MV_ETH_COMPLEX_SW_P4_RGMII0;
 
 	if (mvCtrlConfigGet(MV_CONFIG_PON_SERDES) == 0x0)  /* 0 - PON SerDes connected to PON MAC */
 		ethSataComplexOptions |= MV_ETH_COMPLEX_P2P_MAC_PON_ETH_SERDES;
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index 8c5891b..e0945bd 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -398,10 +398,6 @@ typedef struct _boardInfo {
 #define MSAR_0_SPI0                             0
 #define MSAR_0_SPI1                             1
 
-/* For backward compatability with Legacy mode */
-#define mvBoardIsSwitchConnected(port)          (mvBoardSwitchConnectedPortGet(port) != -1)
-/*#define mvBoardLinkStatusIrqGet(port)		mvBoardSwitchIrqGet()*/
-
 MV_VOID mvBoardEnvInit(MV_VOID);
 MV_U16 mvBoardModelGet(MV_VOID);
 MV_U16 mvBoardRevGet(MV_VOID);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
index f7c4b89..24040a9 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
@@ -120,7 +120,7 @@
 #define DB_88F6660_GROUP_7_TYPE         SWITCH_P4_LED_MATRIX
 #define DB_88F6660_GROUP_8_TYPE         LED_MATRIX_PTP
 
-#define DB_88F6660_ETH_DEFAULT (MV_ETH_COMPLEX_GE_MAC0_SW_P6 | MV_ETH_COMPLEX_GE_MAC1_RGMII1 | MV_ETH_COMPLEX_SW_P0_QUAD_PHY_P0 | MV_ETH_COMPLEX_SW_P3_QUAD_PHY_P3 | MV_ETH_COMPLEX_SW_P4_RGMII1)
+#define DB_88F6660_ETH_DEFAULT (MV_ETH_COMPLEX_GE_MAC0_SW_P6 | MV_ETH_COMPLEX_GE_MAC1_RGMII1 | MV_ETH_COMPLEX_SW_P0_QUAD_PHY_P0 | MV_ETH_COMPLEX_SW_P3_QUAD_PHY_P3 | MV_ETH_COMPLEX_SW_P4_RGMII0)
 
 #define DB_88F6660_GPP_OUT_ENA_LOW      0x0
 #define DB_88F6660_GPP_OUT_ENA_MID      0x0
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 9f299f0..6dd4e77 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -65,6 +65,7 @@
 #include "mvCommon.h"
 #include "mvCtrlEnvLib.h"
 #include "boardEnv/mvBoardEnvLib.h"
+#include "ctrlEnv/mvCtrlEthCompLib.h"
 #include "ctrlEnv/sys/mvCpuIf.h"
 #include "ctrlEnv/mvCtrlEnvSpec.h"
 #include "gpp/mvGpp.h"
@@ -197,6 +198,7 @@ MV_STATUS mvCtrlEnvInit(MV_VOID)
 		mvGppPolaritySet(i, gppMask, (MV_GPP_IN_INVERT & gppMask));
 	}
 
+	mvEthernetComplexInit();
 	return MV_OK;
 }
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index c4e3387..ddecdd8 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -198,7 +198,7 @@ typedef enum {
 	MV_ETH_COMPLEX_SW_P3_QUAD_PHY_P3 =      0x800,
 	MV_ETH_COMPLEX_SW_P6_RGMII0     =       0x1000,
 	MV_ETH_COMPLEX_P2P_MAC_PON_ETH_SERDES = 0x2000,
-	MV_ETH_COMPLEX_SW_P4_RGMII1     =       0x4000
+	MV_ETH_COMPLEX_SW_P4_RGMII0     =       0x4000
 } MV_ETH_COMPLEX_TOPOLOGY;
 
 typedef enum {
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index 950f637..16bdd13 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -92,6 +92,7 @@ extern "C" {
 #define MV_GPP_REGS_OFFSET(unit)                (0x18100 + ((unit) * 0x40))
 #define MV_MISC_REGS_OFFSET                     (0x18200)
 #define MV_CLK_CMPLX_REGS_OFFSET        		(0x18700)
+#define MV_ETH_COMPLEX_OFFSET			0x18900
 #define MV_MBUS_REGS_OFFSET                     (0x20000)
 #define CPU_GLOBAL_BASE                         (MV_MBUS_REGS_OFFSET)
 #define MV_COHERENCY_FABRIC_OFFSET              (0x20200)
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
new file mode 100755
index 0000000..ba6220e
--- /dev/null
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
@@ -0,0 +1,331 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    * 	Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *	Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *	Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+#include <mvCommon.h>
+#include <mvOs.h>
+#include "ctrlEnv/mvCtrlEnvSpec.h"
+#include "ctrlEnv/mvCtrlEthCompLib.h"
+#include "ctrlEnv/mvCtrlEnvLib.h"
+#include "boardEnv/mvBoardEnvLib.h"
+#include "neta/gbe/mvEthRegs.h"
+
+static MV_BOOL gEthComplexSkipInit = MV_FALSE;
+
+/******************************************************************************
+* mvEthCompSkipInitSet
+*
+* DESCRIPTION:
+*	Configure the eth-complex to skip initialization.
+*
+* INPUT:
+*	skip - MV_TRUE to skip initialization.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	None.
+*******************************************************************************/
+void mvEthCompSkipInitSet(MV_BOOL skip)
+{
+	gEthComplexSkipInit = skip;
+	return;
+}
+
+/******************************************************************************
+* mvEthCompMac2SwitchConfig
+*
+* DESCRIPTION:
+*	Configure ethernet complex for MAC0/1 to switch ports 4/6 mode.
+*
+* INPUT:
+*	ethCompCfg - Ethernet complex configuration bitmap.
+*	muxCfgOnly - MV_TRUE: Configure only the ethernet complex mux'es and
+*		     skip other switch reset configurations.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+MV_STATUS mvEthCompMac2SwitchConfig(MV_U32 ethCompCfg, MV_BOOL muxCfgOnly)
+{
+	return MV_OK;
+}
+
+/******************************************************************************
+* mvEthCompSwitchReset
+*
+* DESCRIPTION:
+*	Reset switch device after being configured by ethernet complex functions.
+*
+* INPUT:
+*	ethCompCfg - Ethernet complex configuration bitmap.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+MV_STATUS mvEthCompSwitchReset(MV_U32 ethCompCfg)
+{
+	return MV_OK;
+}
+
+/******************************************************************************
+* mvEthCompMac2RgmiiConfig
+*
+* DESCRIPTION:
+*	Configure ethernet complex for MAC0/1 to RGMII output.
+*
+* INPUT:
+*	ethCompCfg - Ethernet complex configuration bitmap.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+MV_STATUS mvEthCompMac2RgmiiConfig(MV_U32 ethCompCfg)
+{
+	return MV_OK;
+}
+
+/******************************************************************************
+* mvEthCompSwP56ToRgmiiConfig
+*
+* DESCRIPTION:
+*	Configure ethernet complex for Switch port 5 or 6 to RGMII output.
+*
+* INPUT:
+*	ethCompCfg - Ethernet complex configuration bitmap.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+MV_STATUS mvEthCompSwP56ToRgmiiConfig(MV_U32 ethCompCfg)
+{
+	return MV_OK;
+}
+
+
+/******************************************************************************
+* mvEthCompSataConfig
+*
+* DESCRIPTION:
+*	Configure ethernet complex for sata port output.
+*
+* INPUT:
+*	ethCompCfg - Ethernet complex configuration bitmap.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+MV_STATUS mvEthCompSataConfig(MV_U32 ethCompCfg)
+{
+	return MV_OK;
+}
+
+/******************************************************************************
+* mvEthernetComplexShutdownIf
+*
+* DESCRIPTION:
+*	Shutdown ethernet complex interfaces.
+*
+* INPUT:
+*	integSwitch	- MV_TRUE to shutdown the integrated switch.
+*	gePhy		- MV_TRUE to shutdown the GE-PHY
+*	fePhy		- MV_TRUE to shutdown the 3xFE PHY.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+MV_STATUS mvEthernetComplexShutdownIf(MV_BOOL integSwitch, MV_BOOL gePhy, MV_BOOL fePhy)
+{
+	return MV_OK;
+}
+
+/******************************************************************************
+* mvEthernetComplexPreInit
+*
+* DESCRIPTION:
+*	Perform basic setup that is needed before configuring the eth-complex
+*	registers.
+*
+* INPUT:
+*	ethCompCfg - Ethernet complex configuration.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+MV_STATUS mvEthernetComplexPreInit(MV_U32 ethCompCfg)
+{
+	return MV_OK;
+}
+
+
+/******************************************************************************
+* mvEthernetComplexPostInit
+*
+* DESCRIPTION:
+*	Perform basic setup that is needed after configuring the eth-complex
+*	registers.
+*
+* INPUT:
+*	ethCompCfg - Ethernet complex configuration.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+ MV_STATUS mvEthernetComplexPostInit(MV_U32 ethCompCfg)
+{
+	return MV_OK;
+}
+
+
+/******************************************************************************
+* mvEthernetComplexInit
+*
+* DESCRIPTION:
+*	Initialize the ethernet complex according to the boardEnv setup.
+*
+* INPUT:
+*	None.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+MV_STATUS mvEthernetComplexInit(void)
+{
+	MV_U32 ethCompCfg = mvBoardEthComplexConfigGet();
+
+	if (gEthComplexSkipInit == MV_TRUE)
+		return MV_OK;
+
+	mvEthernetComplexPreInit(ethCompCfg);
+
+		/*  Reset the switch after all configurations are done. */
+		mvEthCompSwitchReset(ethCompCfg);
+
+	mvEthernetComplexPostInit(ethCompCfg);
+
+	return MV_OK;
+}
+
+
+/******************************************************************************
+* mvEthernetComplexChangeMode
+*
+* DESCRIPTION:
+*	Change the ethernet complex configuration at runtime.
+*	Meanwhile the function supports only the following mode changes:
+*		- Moving the switch between MAC0 & MAC1.
+*		- Connect / Disconnect GE-PHY to MAC1.
+*		- Connect / Disconnect RGMII-B to MAC0.
+*
+* INPUT:
+*	oldCfg	- The old ethernet complex configuration.
+*	newCfg	- The new ethernet complex configuration to switch to.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	MV_OK on success,
+*	MV_ERROR otherwise.
+*******************************************************************************/
+MV_STATUS mvEthernetComplexChangeMode(MV_U32 oldCfg, MV_U32 newCfg)
+{
+	return MV_OK;
+}
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
new file mode 100644
index 0000000..14cbd9b
--- /dev/null
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
@@ -0,0 +1,109 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    * 	Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *	Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *	Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+#ifndef __INCmvCtrlEthCompLibh
+#define __INCmvCtrlEthCompLibh
+
+#include "ctrlEnv/mvCtrlEnvSpec.h"
+#include "mvSysEthConfig.h"
+
+#define MV_ETHCOMP_CTRL_REG(id)			(MV_ETH_COMPLEX_BASE + 0x10 + (id * 4))
+
+/* Ethernet Complex Control 0 */
+#define ETHCC_SW_PORT_0_SRC_OFFSET		4
+#define ETHCC_SW_PORT_0_SRC_MASK		(0x1 << ETHCC_SW_PORT_0_SRC_OFFSET)
+#define ETHCC_SW_PORT_3_SRC_OFFSET		5
+#define ETHCC_SW_PORT_3_SRC_MASK		(0x1 << ETHCC_SW_PORT_3_SRC_OFFSET)
+#define ETHCC_SW_PORT_4_SRC_OFFSET		6
+#define ETHCC_SW_PORT_4_SRC_MASK		(0x1 << ETHCC_SW_PORT_4_SRC_OFFSET)
+#define ETHCC_SW_PORT_6_SRC_OFFSET		7
+#define ETHCC_SW_PORT_6_SRC_MASK		(0x1 << ETHCC_SW_PORT_6_SRC_OFFSET)
+#define ETHCC_GBE_MAC0_SRC_OFFSET		10
+#define ETHCC_GBE_MAC0_SRC_MASK			(0x3 << ETHCC_GBE_MAC0_SRC_OFFSET)
+#define ETHCC_GBE_MAC1_SRC_OFFSET		12
+#define ETHCC_GBE_MAC1_SRC_MASK			(0x3 << ETHCC_GBE_MAC1_SRC_OFFSET)
+#define ETHCC_GBE_PHY_PORT_0_SRC_OFFSET		14
+#define ETHCC_GBE_PHY_PORT_0_SRC_MASK		(0x1 << ETHCC_GBE_PHY_PORT_0_SRC_OFFSET)
+#define ETHCC_GBE_PHY_PORT_1_SMI_SRC_OFFSET	15
+#define ETHCC_GBE_PHY_PORT_1_SMI_SRC_MASK	(0x1 << ETHCC_GBE_PHY_PORT_1_SMI_SRC_OFFSET)
+#define ETHCC_GBE_PHY_PORT_2_SMI_SRC_OFFSET	16
+#define ETHCC_GBE_PHY_PORT_2_SMI_SRC_MASK	(0x1 << ETHCC_GBE_PHY_PORT_2_SMI_SRC_OFFSET)
+#define ETHCC_GBE_PHY_PORT_3_SRC_OFFSET		17
+#define ETHCC_GBE_PHY_PORT_3_SRC_MASK		(0x1 << ETHCC_GBE_PHY_PORT_0_SRC_OFFSET)
+#define ETHCC_GE_MAC0_SW_PORT_6_SPD_OFFSET	18
+#define ETHCC_GE_MAC0_SW_PORT_6_SPD_MASK	(0x1 << ETHCC_GE_MAC0_SW_PORT_6_SPD_OFFSET)
+#define ETHCC_LOOPBACK_PORT_SPD_OFFSET		18
+#define ETHCC_LOOPBACK_PORT_SPD_MASK		(0x1 << ETHCC_LOOPBACK_PORT_SPD_OFFSET)
+
+MV_VOID mvEthCompSkipInitSet(MV_BOOL skip);
+MV_STATUS mvEthCompMac2SwitchConfig(MV_U32 ethCompCfg, MV_BOOL muxCfgOnly);
+MV_STATUS mvEthCompSwitchReset(MV_U32 ethCompCfg);
+MV_STATUS mvEthCompMac2RgmiiConfig(MV_U32 ethCompCfg);
+MV_STATUS mvEthCompSwP56ToRgmiiConfig(MV_U32 ethCompCfg);
+MV_STATUS mvEthCompSataConfig(MV_U32 ethCompCfg);
+MV_STATUS mvEthernetComplexShutdownIf(MV_BOOL integSwitch, MV_BOOL gePhy, MV_BOOL fePhy);
+MV_STATUS mvEthernetComplexInit(MV_VOID);
+MV_STATUS mvEthernetComplexChangeMode(MV_U32 oldCfg, MV_U32 newCfg);
+
+#endif /* __INCmvCtrlEthCompLibh */
-- 
1.7.5.4

