From 7992d918c056786f5b34d66135fa6a531bc33d73 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Tue, 25 Jun 2013 10:52:41 -0400
Subject: [PATCH 0738/1825] PPv2: fix: Wrong access to RXQs from 8 to 16.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 01cca6f10ac53a6c5e52c93ffc06c9c2ef5613ec

	JIRA bug number: AVNTALPXPN-44
	Check validity of RXQ number
	Check if RXQ in valid range is initialized

Change-Id: Ie4a5d96d6a0f2c5d9b23a9d8ab3be5b252abb149
Reviewed-on: http://vgitil04.il.marvell.com:8080/2348
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Jonatan Farhadian <yonif@marvell.com>
Reviewed-by: Maen Suleiman <maen@marvell.com>
Tested-by: Maen Suleiman <maen@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c     |    2 ++
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h     |    7 +++++--
 .../arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c |   16 ++++++++++++++--
 3 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
index 78ac983..6384d00 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
@@ -533,6 +533,8 @@ MV_STATUS mvPp2PortRxqsInit(int port, int firstRxq, int numRxqs)
 	if (!pCtrl->pRxQueue)
 		return MV_OUT_OF_CPU_MEM;
 
+	mvOsMemset(pCtrl->pRxQueue, 0, (MV_ETH_MAX_RXQ * sizeof(MV_PP2_PHYS_RXQ_CTRL *)));
+
 	/* Associate requested RXQs with port */
 	for (i = firstRxq; i < firstRxq + numRxqs; i++)
 		mvPp2PhysRxqMapAdd(i, port, i - firstRxq);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
index cac5152..7f3a81f 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
@@ -202,6 +202,7 @@ static INLINE int mvPp2LogicRxqToPhysRxq(int port, int rxq)
 {
 	if (mvPp2PortCtrl[port]->pRxQueue[rxq])
 		return mvPp2PortCtrl[port]->pRxQueue[rxq]->rxq;
+
 	return -1;
 }
 
@@ -326,8 +327,9 @@ static INLINE int mvPp2RxqBusyDescNumGet(int port, int rxq)
 {
 	MV_U32 regVal;
 	int prxq = mvPp2LogicRxqToPhysRxq(port, rxq);
+
 	if (prxq < 0)
-		return prxq;
+		return 0;
 
 	regVal = mvPp2RdReg(MV_PP2_RXQ_STATUS_REG(prxq));
 
@@ -339,8 +341,9 @@ static INLINE int mvPp2RxqFreeDescNumGet(int port, int rxq)
 {
 	MV_U32 regVal;
 	int prxq = mvPp2LogicRxqToPhysRxq(port, rxq);
+
 	if (prxq < 0)
-		return prxq;
+		return 0;
 
 	regVal = mvPp2RdReg(MV_PP2_RXQ_STATUS_REG(prxq));
 
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
index c59ea77..9f976f5 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
@@ -244,22 +244,34 @@ static void mvPp2QueueShow(MV_PP2_QUEUE_CTRL *pQueueCtrl, int mode, int isTxq)
 MV_VOID mvPp2RxqShow(int port, int rxq, int mode)
 {
 	int pRxq;
+	MV_PP2_PORT_CTRL *pCtrl;
 	MV_PP2_PHYS_RXQ_CTRL *pRxqCtrl;
 	MV_PP2_QUEUE_CTRL *pQueueCtrl;
 
-	mvOsPrintf("\n[PPv2 RxQ show: port=%d, rxq=%d]\n", port, rxq);
-
 	if (mvPp2PortCheck(port))
 		return;
 
+	pCtrl = mvPp2PortCtrl[port];
+	if ((pCtrl == NULL) || (pCtrl->pRxQueue == NULL)) {
+		mvOsPrintf("port #%d is not initialized\n", port);
+		return;
+	}
+
 	if (mvPp2MaxCheck(rxq, MV_ETH_MAX_RXQ, "logical rxq"))
 		return;
 
+	if (pCtrl->pRxQueue[rxq] == NULL) {
+		mvOsPrintf("rxq #%d of port #%d is not initialized\n", rxq, port);
+		return;
+	}
+
 	pRxq = mvPp2LogicRxqToPhysRxq(port, rxq);
 	if (pRxq < 0) {
 		mvOsPrintf("Port/RXQ is not mapped to physical RXQ\n");
 		return;
 	}
+	mvOsPrintf("\n[PPv2 RxQ show: port=%d, logical rxq=%d -> physical rxq=%d]\n",
+			port, rxq, pRxq);
 
 	pRxqCtrl = &mvPp2PhysRxqs[pRxq];
 	pQueueCtrl = &pRxqCtrl->queueCtrl;
-- 
1.7.5.4

