From b73063ac60a6b0277152be1fb7339a2e67f4fa17 Mon Sep 17 00:00:00 2001
From: Igor Patrik <igorp@marvell.com>
Date: Wed, 16 Oct 2013 08:39:49 +0200
Subject: [PATCH 1026/1825] fix: ipc: Fixed AMP mode with vxWorks for kernel
 3.4

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 406e9bbf5a064d6ffd11a6352499aab6ae7f73ad

	IPC network driver in slave node suppose that master should up eventually and waiting in forever loop,
	but new IPC not ported in vxWorks, so IPC network driver will wait 10 mips and fail.
	Aligned with bug fix in kernel 3.2

Change-Id: Ib9aaf6347a71293ca162467c1387341226392ce1
Signed-off-by: Igor Patrik <igorp@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3715
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_ipc_net/ipc_net.c            |   14 ++++++++++++--
 1 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc_net/ipc_net.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc_net/ipc_net.c
index 4a7c4e1..097dc8c 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc_net/ipc_net.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_ipc_net/ipc_net.c
@@ -452,6 +452,8 @@ static INLINE int ipc_net_init_buff_pool(struct ipc_net_device *priv, int mtu)
  * ipc_net_init()                                 				        		*
  *   Initialize IPC network interface 										*
  ***************************************************************************************/
+#define MV_IPC_SLAVE_TO_MASTER_WAIT_TIME	1
+#define MV_IPC_SLAVE_TO_MASTER_WAIT_LOOPS	20
 static int ipc_net_init(void *platform_data)
 {
 	struct net_device     *dev = NULL;
@@ -459,6 +461,7 @@ static int ipc_net_init(void *platform_data)
 	MV_STATUS status;
 	int success, i;
 	int target_cpu, min_cpu, max_cpu;
+	int counter;
 
 	if(ipc_net_dev){
 		printk(KERN_ERR "%s: ipc0 already initialized\n", __FUNCTION__);
@@ -497,7 +500,7 @@ static int ipc_net_init(void *platform_data)
 
 	/* Set a static MAC address*/
 	dev->dev_addr[0] = 0;
-	dev->dev_addr[0] = 0;
+	dev->dev_addr[1] = 0;
 	for(i = 2; i < ETH_ALEN; i++) {
 		dev->dev_addr[i] = i + whoAmI();
 	}
@@ -506,11 +509,18 @@ static int ipc_net_init(void *platform_data)
 
 	/* Initialize IPC driver */
 	printk(KERN_ERR "IPC NET:Going open chn\n");
+	counter = 0;
 	do {
 		status = ipc_open_chn(IPC_NET_LINK_ID, IPC_NET_CHANNEL_ID, ipc_net_rx);
 		printk(KERN_ERR "IPC NET: open chn status %d\n", status);
-		if (status == MV_NOT_STARTED)
+		if (status == MV_NOT_STARTED) {
+			/*if master still not started, increase the limit or delay time*/
+			if (counter >= MV_IPC_SLAVE_TO_MASTER_WAIT_LOOPS)
+				goto open_fail;
+			counter++;
+			udelay(MV_IPC_SLAVE_TO_MASTER_WAIT_TIME);
 			continue;
+		}
 
 		if (status != MV_OK) {
 			printk(KERN_ERR "IPC NET: Failed to open IPC channel %d %d",
-- 
1.7.5.4

