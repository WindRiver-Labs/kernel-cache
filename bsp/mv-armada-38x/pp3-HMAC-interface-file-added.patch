From 0c88574367b0aa8d4b3286b0889a6b1bb8b197a0 Mon Sep 17 00:00:00 2001
From: Yelena <yelena@marvell.com>
Date: Sun, 24 Nov 2013 13:31:38 +0200
Subject: [PATCH 1180/1825] pp3: HMAC interface file added

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 89f84c684d1559425039525768f95da56b931c88

     - add unit function interface (mv_hmac.h/c)
     - add registers file generated from CIDER (mv_hmac_regs.h)

Change-Id: I6f73bc859e783ac821f062909a269bf1e11abd99
Signed-off-by: Yelena <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4545
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/marvell/pp3/Makefile          |    4 +-
 drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c    |  177 +++++++++++
 drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h    |  156 ++++++++++
 .../net/ethernet/marvell/pp3/hmac/mv_hmac_regs.h   |  311 ++++++++++++++++++++
 4 files changed, 647 insertions(+), 1 deletions(-)
 create mode 100644 drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c
 create mode 100644 drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h
 create mode 100644 drivers/net/ethernet/marvell/pp3/hmac/mv_hmac_regs.h

diff --git a/drivers/net/ethernet/marvell/pp3/Makefile b/drivers/net/ethernet/marvell/pp3/Makefile
index ae85dec..dcdcfc3 100644
--- a/drivers/net/ethernet/marvell/pp3/Makefile
+++ b/drivers/net/ethernet/marvell/pp3/Makefile
@@ -4,4 +4,6 @@
 
 obj-$(CONFIG_MV_PP3) += mv_pp3.o
 
-mv_pp3-objs := net_dev/mv_netdev.o
+ccflags-y       += -Idrivers/net/ethernet/marvell/pp3
+
+mv_pp3-objs := net_dev/mv_netdev.o hmac/mv_hmac.o
diff --git a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c
new file mode 100644
index 0000000..3ea50ff
--- /dev/null
+++ b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.c
@@ -0,0 +1,177 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+/* includes */
+#include <linux/kernel.h>
+#include <linux/io.h>
+#include <linux/slab.h>
+#include "common/mv_hw_if.h"
+#include "hmac/mv_hmac.h"
+#include "hmac/mv_hmac_regs.h"
+
+/* local functions declaration */
+static int mv_pp3_hmac_queue_create(struct mv_pp3_queue_ctrl *q_ctrl, int desc_num);
+
+/* per frame bitmap to store queues state (allocated/free) */
+static unsigned int mv_pp3_hmac_queue_act[MV_PP3_HMAC_MAX_FRAME] = {0};
+/* */
+struct pp3_uint_info pp3_hmac_gl;
+struct pp3_uint_info pp3_hmac_fr;
+
+/* store unit base address = silicon base address + unit offset */
+void mv_pp3_hmac_gl_unit_base(unsigned int unit_offset)
+{
+	pp3_hmac_gl.base_addr = unit_offset;
+	pp3_hmac_gl.ins_offs = 0;
+}
+
+/* store unit base address = silicon base address + unit offset */
+/* store unit instance offset                                   */
+void mv_pp3_hmac_frame_unit_base(unsigned int unit_offset, unsigned int ins_offset)
+{
+	pp3_hmac_fr.base_addr = unit_offset;
+	pp3_hmac_fr.ins_offs = ins_offset;
+}
+
+/* Allocate memory and init RX queue HW facility
+ * size is a queue size in datagrams (16 bytes each) */
+u32 mv_pp3_hmac_rxq_init(int frame, int queue, int size, struct mv_pp3_queue_ctrl *qctrl)
+{
+	/* check if already created */
+	if ((mv_pp3_hmac_queue_act[frame] >> queue) & 1)
+		return 1;
+
+	qctrl->size = size;
+	mv_pp3_hmac_queue_create(qctrl, size * MV_PP3_HMAC_DATAGRAM_SIZE);
+/*	Write pointer to allocated memory to
+a.	rq_address_high table address bits [39:32]
+b.	rq_address_low table address bits [31:8], aligned to 256B
+3.	Store queue size in rq_size table, number of 16B units.
+4.	Configure Receive Threshold TBD.
+5.	Disable queue, hmac_%m_rec_q_%n_control set to 0.
+*/
+	return 0;
+}
+
+/* Return pointer to first free CFH:
+ * size is CFH size in datagrams (16 bytes each)     */
+void mv_pp3_hmac_txq_next_cfh(int frame, int queue, struct mv_pp3_queue_ctrl *qctrl, int size, u8 **cfh_ptr)
+{
+	if ((qctrl->next_proc + size * MV_PP3_HMAC_DATAGRAM_SIZE) > qctrl->last)
+		/* do FIFO wraparound */;
+
+	*cfh_ptr = qctrl->next_proc;
+	qctrl->next_proc += size;
+}
+
+void mv_pp3_hmac_rxq_reset(int frame, int queue)
+{
+	unsigned int data;
+
+	/* reset queue */
+	data = mv_pp3_hmac_frame_reg_read(frame, MV_HMAC_REC_Q_CTRL_REG(queue));
+	data &= ~(MV_HMAC_REC_Q_CTRL_RCV_Q_FLUSH_MASK);
+	mv_pp3_hmac_frame_reg_write(frame, MV_HMAC_REC_Q_CTRL_REG(queue), data);
+}
+
+void mv_pp3_hmac_txq_qm_mode_cfg(int frame, int queue, int qm_num)
+{
+	unsigned int data;
+
+	data = mv_pp3_hmac_frame_reg_read(frame, MV_HMAC_SEND_Q_CTRL_REG(queue));
+	data &= ~(MV_HMAC_SEND_Q_CTRL_Q_MODE_MASK); /* set mode to QM */
+	mv_pp3_hmac_frame_reg_write(frame, MV_HMAC_SEND_Q_CTRL_REG(queue), data);
+}
+
+/* allocate descriptors */
+static u8 *mv_pp3_queue_mem_alloc(int size)
+{
+	u8 *p_virt;
+
+	p_virt = kmalloc(size, GFP_ATOMIC);
+	/*if (pVirt)
+		mvOsMemset(pVirt, 0, descSize);*/
+
+	return p_virt;
+}
+
+static int mv_pp3_hmac_queue_create(struct mv_pp3_queue_ctrl *q_ctrl, int desc_num)
+{
+	int size;
+
+	/* Allocate memory for queue */
+	size = ((desc_num * MV_PP3_CFH_MIN_SIZE) + MV_PP3_HMAC_Q_ALIGN);
+	q_ctrl->first = mv_pp3_queue_mem_alloc(size);
+
+	if (q_ctrl->first == NULL) {
+		printk(KERN_ERR "%s: Can't allocate %d bytes for %d descr\n", __func__, size, desc_num);
+		return 1;
+	}
+
+	/* Make sure descriptor address is aligned */
+	/*q_ctrl->first = (char *)MV_ALIGN_UP((MV_ULONG) qCtrl->descBuf.bufVirtPtr, MV_PP2_DESC_Q_ALIGN);*/
+
+	q_ctrl->last = q_ctrl->first + size;
+	return 0;
+}
diff --git a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h
new file mode 100644
index 0000000..a0e9095
--- /dev/null
+++ b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac.h
@@ -0,0 +1,156 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+#ifndef __mvHmac_h__
+#define __mvHmac_h__
+
+
+#define MV_PP3_HMAC_MAX_FRAME			(16)
+#define MV_PP3_HMAC_DATAGRAM_SIZE		(16)
+#define MV_PP3_CFH_MIN_SIZE				(32)
+#define MV_PP3_HMAC_Q_ALIGN				(256)
+
+extern struct pp3_uint_info pp3_hmac_gl;
+extern struct pp3_uint_info pp3_hmac_fr;
+
+struct mv_pp3_queue_ctrl {
+	u8 *first;
+	u8 *next_proc;
+	u8 *last;
+	int   size;  /* number of 16 bytes units (datagram) in queue */
+};
+
+static inline u32 mv_pp3_hmac_gl_reg_read(u32 reg)
+{
+	u32 reg_data;
+
+	mv_pp3_hw_read(reg + pp3_hmac_gl.base_addr, 1, &reg_data);
+	/* add debug print */
+
+	return reg_data;
+}
+
+static inline u32 mv_pp3_hmac_frame_reg_read(int frameId, u32 reg)
+{
+	u32 reg_data;
+	u32 reg_addr;
+
+	reg_addr = pp3_hmac_fr.base_addr + pp3_hmac_fr.ins_offs * frameId + reg;
+	/* add debug print */
+	mv_pp3_hw_read(reg_addr, 1, &reg_data);
+
+	return reg_data;
+}
+
+static inline void mv_pp3_hmac_gl_reg_write(u32 reg, u32 data)
+{
+	mv_pp3_hw_write(reg + pp3_hmac_gl.base_addr, 1, &data);
+}
+
+static inline void mv_pp3_hmac_frame_reg_write(int frame_id, u32 reg, u32 data)
+{
+	u32 reg_addr = pp3_hmac_fr.base_addr + pp3_hmac_fr.ins_offs * frame_id + reg;
+
+	mv_pp3_hw_write(reg_addr, 1, &data);
+}
+
+/* Init HMAC global unit base address
+ * unit_offset = silicon base address + unit offset  */
+void mv_pp3_hmac_gl_unit_base(u32 unit_offset);
+/* Init HMAC Frame first unit base address
+ * unit_offset = silicon base address + unit offset
+ * frame_offset - is an next frame unit offset       */
+void mv_pp3_hmac_frame_unit_base(u32 unit_offset, u32 frame_offset);
+
+/* Allocate memory and init RX queue HW facility
+ * size is a queue size in datagrams (16 bytes each) */
+u32 mv_pp3_hmac_rxq_init(int frame, int queue, int size, struct mv_pp3_queue_ctrl *qctrl);
+void mv_pp3_hmac_rxq_flush(int frame, int queue);
+void mv_pp3_hmac_rxq_enable(int frame, int queue);
+void mv_pp3_hmac_rxq_disable(int frame, int queue);
+void mv_pp3_hmac_rxq_occ_get(int frame, int queue, int *size);
+void mv_pp3_hmac_rxq_next_cfh(int frame, int queue, int *size, u8 *cfh_ptr);
+
+/* Allocate memory and init TX queue HW facility:
+ * size is a queue size in datagrams (16 bytes each) */
+u32 mv_pp3_hmac_txq_init(int frame, int queue, int size, struct mv_pp3_queue_ctrl *qctrl);
+void mv_pp3_hmac_txq_flush(int frame, int queue);
+void mv_pp3_hmac_txq_enable(int frame, int queue);
+void mv_pp3_hmac_txq_disable(int frame, int queue);
+/* Return pointer to first free CFH:
+ * size is CFH size in datagrams (16 bytes each)     */
+void mv_pp3_hmac_txq_next_cfh(int frame, int queue, struct mv_pp3_queue_ctrl *qctrl, int size, u8 **cfh_ptr);
+/* size - is number of datagrams to transmit         */
+void mv_pp3_hmac_txq_send(int frame, int queue, int size);
+
+/* configure queue parameters used by BM queue
+ * bpid - is a buffer pool ID for allocation request
+ * bm_alloc_count - is a size of the allocation
+ * request in units of 16B                           */
+void mv_pp3_hmac_txq_bm_mode_cfg(int frame, int queue, int bpid, int bm_alloc_count);
+/* configure queue parameters used by QM queue
+ * q_num - is a number of QM queue                   */
+void mv_pp3_hmac_txq_qm_mode_cfg(int frame, int queue, int q_num);
+
+#endif /* __mvHmac_h__ */
diff --git a/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac_regs.h b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac_regs.h
new file mode 100644
index 0000000..276c944
--- /dev/null
+++ b/drivers/net/ethernet/marvell/pp3/hmac/mv_hmac_regs.h
@@ -0,0 +1,311 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+#ifndef __mvHmacRegs_h__
+#define __mvHmacRegs_h__
+
+/* includes */
+
+/* unit offset */
+#define MV_PP3_HMAC_GL_UNIT_OFFSET	0x30000
+#define MV_PP3_HMAC_FR_UNIT_OFFSET	0x200000
+
+/************************** HMAC GLOBAL regs *********************************************************/
+
+/* Hmac_eco */
+#define MV_HMAC_ECO_REG								0x0000
+#define MV_HMAC_ECO_GENERAL_PURPOSE_ECO_OFFS		0
+
+/* Hmac_bw_control */
+#define MV_HMAC_BW_CTRL_REG								0x0004
+#define MV_HMAC_BW_CTRL_NUMBER_OF_OUTSTANDING_REQUESTS_OFFS		0
+#define MV_HMAC_BW_CTRL_NUMBER_OF_OUTSTANDING_REQUESTS_MASK    \
+		(0x0000000f << MV_HMAC_BW_CTRL_NUMBER_OF_OUTSTANDING_REQUESTS_OFFS)
+
+#define MV_HMAC_BW_CTRL_WRITE_DATA_BURST_SIZE_OFFS		4
+#define MV_HMAC_BW_CTRL_WRITE_DATA_BURST_SIZE_MASK    \
+		(0x0000000f << MV_HMAC_BW_CTRL_WRITE_DATA_BURST_SIZE_OFFS)
+
+#define MV_HMAC_BW_CTRL_READ_DATA_BURST_SIZE_OFFS		8
+#define MV_HMAC_BW_CTRL_READ_DATA_BURST_SIZE_MASK    \
+		(0x0000000f << MV_HMAC_BW_CTRL_READ_DATA_BURST_SIZE_OFFS)
+
+#define MV_HMAC_BW_CTRL_DESC_PREFETCH_NUMBER_OFFS		12
+#define MV_HMAC_BW_CTRL_DESC_PREFETCH_NUMBER_MASK    \
+		(0x0000000f << MV_HMAC_BW_CTRL_DESC_PREFETCH_NUMBER_OFFS)
+
+
+/* Hmac_rec_qm_port_number */
+#define MV_HMAC_REC_QM_PORT_NUMBER_REG								0x0008
+#define MV_HMAC_REC_QM_PORT_NUMBER_RQ_QM_HMAC_PORT_NUM_OFFS		0
+#define MV_HMAC_REC_QM_PORT_NUMBER_RQ_QM_HMAC_PORT_NUM_MASK    \
+		(0x00000fff << MV_HMAC_REC_QM_PORT_NUMBER_RQ_QM_HMAC_PORT_NUM_OFFS)
+
+
+/* Hmac_vmid_frame_%m */
+#define MV_HMAC_VMID_FRAME_M_REG(m)							(0x0010 + 4*m)
+#define MV_HMAC_VMID_FRAME_M_CONTEXT_ID_OFFS		0
+#define MV_HMAC_VMID_FRAME_M_CONTEXT_ID_MASK    \
+		(0x0000003f << MV_HMAC_VMID_FRAME_M_CONTEXT_ID_OFFS)
+
+#define MV_HMAC_VMID_FRAME_M_AXI_PROT_PRIVILEGE_OFFS		16
+#define MV_HMAC_VMID_FRAME_M_AXI_PROT_PRIVILEGE_MASK    \
+		(0x00000001 << MV_HMAC_VMID_FRAME_M_AXI_PROT_PRIVILEGE_OFFS)
+
+#define MV_HMAC_VMID_FRAME_M_AW_QOS_OFFS		20
+#define MV_HMAC_VMID_FRAME_M_AW_QOS_MASK    \
+		(0x00000003 << MV_HMAC_VMID_FRAME_M_AW_QOS_OFFS)
+
+#define MV_HMAC_VMID_FRAME_M_AR_QOS_OFFS		24
+#define MV_HMAC_VMID_FRAME_M_AR_QOS_MASK    \
+		(0x00000003 << MV_HMAC_VMID_FRAME_M_AR_QOS_OFFS)
+
+
+/* Hmac_event_addr_low_%m */
+#define MV_HMAC_EVENT_ADDR_LOW_M_REG(m)							(0x0050 + 8*m)
+#define MV_HMAC_EVENT_ADDR_LOW_M_EVENT_ADDRESS_LOW_OFFS		8
+#define MV_HMAC_EVENT_ADDR_LOW_M_EVENT_ADDRESS_LOW_MASK    \
+		(0x00ffffff << MV_HMAC_EVENT_ADDR_LOW_M_EVENT_ADDRESS_LOW_OFFS)
+
+
+/* Hmac_event_addr_high_%m */
+#define MV_HMAC_EVENT_ADDR_HIGH_M_REG(m)							(0x0054 + 8*m)
+#define MV_HMAC_EVENT_ADDR_HIGH_M_EVENT_ADDRESS_HIGH_OFFS		0
+#define MV_HMAC_EVENT_ADDR_HIGH_M_EVENT_ADDRESS_HIGH_MASK    \
+		(0x000000ff << MV_HMAC_EVENT_ADDR_HIGH_M_EVENT_ADDRESS_HIGH_OFFS)
+
+
+/* Hmac_dram_update_time_out_%m */
+#define MV_HMAC_DRAM_UPDATE_TIME_OUT_M_REG(m)							(0x00d0 + 4*m)
+#define MV_HMAC_DRAM_UPDATE_TIME_OUT_M_DRAM_UPDAT_TIME_OUT_OFFS		0
+#define MV_HMAC_DRAM_UPDATE_TIME_OUT_M_DRAM_UPDAT_TIME_OUT_MASK    \
+		(0x0000ffff << MV_HMAC_DRAM_UPDATE_TIME_OUT_M_DRAM_UPDAT_TIME_OUT_OFFS)
+
+
+/* Hmac_dram_update_threshold_%m */
+#define MV_HMAC_DRAM_UPDATE_THRESHOLD_M_REG(m)							(0x0110 + 4*m)
+#define MV_HMAC_DRAM_UPDATE_THRESHOLD_M_DRAM_UPDAT_THRESHOLD_OFFS		0
+#define MV_HMAC_DRAM_UPDATE_THRESHOLD_M_DRAM_UPDAT_THRESHOLD_MASK    \
+		(0x0000ffff << MV_HMAC_DRAM_UPDATE_THRESHOLD_M_DRAM_UPDAT_THRESHOLD_OFFS)
+
+
+/* Hmac_axi_prot_secure_%m */
+#define MV_HMAC_AXI_PROT_SECURE_M_REG(m)							(0x0300 + 4*m)
+#define MV_HMAC_AXI_PROT_SECURE_M_AXI_PROT_SECURE_OFFS		0
+#define MV_HMAC_AXI_PROT_SECURE_M_AXI_PROT_SECURE_MASK    \
+		(0x00000001 << MV_HMAC_AXI_PROT_SECURE_M_AXI_PROT_SECURE_OFFS)
+
+/************************** HMAC FRAME regs *********************************************************/
+
+/* Hmac_%m_rec_q_%n_control */
+#define MV_HMAC_REC_Q_CTRL_REG(n)							(0x8000 + 0x100*n)
+#define MV_HMAC_REC_Q_CTRL_RCV_Q_EN_OFFS		0
+#define MV_HMAC_REC_Q_CTRL_RCV_Q_EN_MASK    \
+		(0x00000001 << MV_HMAC_REC_Q_CTRL_RCV_Q_EN_OFFS)
+
+#define MV_HMAC_REC_Q_CTRL_RCV_Q_FLUSH_OFFS		1
+#define MV_HMAC_REC_Q_CTRL_RCV_Q_FLUSH_MASK    \
+		(0x00000001 << MV_HMAC_REC_Q_CTRL_RCV_Q_FLUSH_OFFS)
+
+#define MV_HMAC_REC_Q_CTRL_Q_DLB_EN_OFFS		8
+#define MV_HMAC_REC_Q_CTRL_Q_DLB_EN_MASK    \
+		(0x00000001 << MV_HMAC_REC_Q_CTRL_Q_DLB_EN_OFFS)
+
+#define MV_HMAC_REC_Q_CTRL_RCV_Q_TIMER_SEL_OFFS		12
+#define MV_HMAC_REC_Q_CTRL_RCV_Q_TIMER_SEL_MASK    \
+		(0x00000001 << MV_HMAC_REC_Q_CTRL_RCV_Q_TIMER_SEL_OFFS)
+
+
+/* Hmac_%m_rec_q_%n_occ_status_update */
+#define MV_HMAC_REC_Q_OCC_STATUS_UPDATE_REG(n)							(0x8004 + 0x100*n)
+#define MV_HMAC_REC_Q_OCC_STATUS_UPDATE_RCV_ACK_COUNT_OFFS		0
+#define MV_HMAC_REC_Q_OCC_STATUS_UPDATE_RCV_ACK_COUNT_MASK    \
+		(0x0000ffff << MV_HMAC_REC_Q_OCC_STATUS_UPDATE_RCV_ACK_COUNT_OFFS)
+
+
+/* Hmac_%m_rec_q_%n_status */
+#define MV_HMAC_REC_Q_STATUS_REG(n)							(0x800c + 0x100*n)
+#define MV_HMAC_REC_Q_STATUS_RQ_BUSY_OFFS		0
+#define MV_HMAC_REC_Q_STATUS_RQ_BUSY_MASK    \
+		(0x00000001 << MV_HMAC_REC_Q_STATUS_RQ_BUSY_OFFS)
+
+#define MV_HMAC_REC_Q_STATUS_RQ_PENDING_AXI_READ_OFFS		1
+#define MV_HMAC_REC_Q_STATUS_RQ_PENDING_AXI_READ_MASK    \
+		(0x00000001 << MV_HMAC_REC_Q_STATUS_RQ_PENDING_AXI_READ_OFFS)
+
+#define MV_HMAC_REC_Q_STATUS_RQ_PENDING_AXI_WRITE_OFFS		2
+#define MV_HMAC_REC_Q_STATUS_RQ_PENDING_AXI_WRITE_MASK    \
+		(0x00000001 << MV_HMAC_REC_Q_STATUS_RQ_PENDING_AXI_WRITE_OFFS)
+
+#define MV_HMAC_REC_Q_STATUS_RQ_PENDING_EVENT_OFFS		3
+#define MV_HMAC_REC_Q_STATUS_RQ_PENDING_EVENT_MASK    \
+		(0x00000001 << MV_HMAC_REC_Q_STATUS_RQ_PENDING_EVENT_OFFS)
+
+#define MV_HMAC_REC_Q_STATUS_RQ_REMAINDER_NEMPTY_OFFS		4
+#define MV_HMAC_REC_Q_STATUS_RQ_REMAINDER_NEMPTY_MASK    \
+		(0x00000001 << MV_HMAC_REC_Q_STATUS_RQ_REMAINDER_NEMPTY_OFFS)
+
+
+/* Hmac_%m_rec_q_%n_timeout */
+#define MV_HMAC_REC_Q_TIMEOUT_REG(n)							(0x8010 + n)
+#define MV_HMAC_REC_Q_TIMEOUT_RQ_TIME_OUT_0_OFFS		5
+#define MV_HMAC_REC_Q_TIMEOUT_RQ_TIME_OUT_0_MASK    \
+		(0x000007ff << MV_HMAC_REC_Q_TIMEOUT_RQ_TIME_OUT_0_OFFS)
+
+
+/* Hmac_%m_send_q_%n_control */
+#define MV_HMAC_SEND_Q_CTRL_REG(n)							(0x8040 + 0x100*n)
+#define MV_HMAC_SEND_Q_CTRL_SEND_Q_EN_OFFS		0
+#define MV_HMAC_SEND_Q_CTRL_SEND_Q_EN_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_CTRL_SEND_Q_EN_OFFS)
+
+#define MV_HMAC_SEND_Q_CTRL_SEND_Q_FLUSH_OFFS		1
+#define MV_HMAC_SEND_Q_CTRL_SEND_Q_FLUSH_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_CTRL_SEND_Q_FLUSH_OFFS)
+
+#define MV_HMAC_SEND_Q_CTRL_Q_MODE_OFFS		4
+#define MV_HMAC_SEND_Q_CTRL_Q_MODE_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_CTRL_Q_MODE_OFFS)
+
+#define MV_HMAC_SEND_Q_CTRL_BM_PE_FORMAT_OFFS		8
+#define MV_HMAC_SEND_Q_CTRL_BM_PE_FORMAT_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_CTRL_BM_PE_FORMAT_OFFS)
+
+#define MV_HMAC_SEND_Q_CTRL_SEND_Q_TIMER_SEL_OFFS		12
+#define MV_HMAC_SEND_Q_CTRL_SEND_Q_TIMER_SEL_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_CTRL_SEND_Q_TIMER_SEL_OFFS)
+
+
+/* Hmac_%m_send_q_%n_occ_status_update */
+#define MV_HMAC_SEND_Q_OCC_STATUS_UPDATE_REG(n)							(0x8044 + 0x100*n)
+#define MV_HMAC_SEND_Q_OCC_STATUS_UPDATE_SND_ADD_COUNT_OFFS		0
+#define MV_HMAC_SEND_Q_OCC_STATUS_UPDATE_SND_ADD_COUNT_MASK    \
+		(0x0000ffff << MV_HMAC_SEND_Q_OCC_STATUS_UPDATE_SND_ADD_COUNT_OFFS)
+
+
+/* Hmac_%m_send_q_%n_q_num_bpid */
+#define MV_HMAC_SEND_Q_Q_NUM_BPID_REG(n)							(0x8048 + 0x100*n)
+#define MV_HMAC_SEND_Q_Q_NUM_BPID_QNUM_OFFS		0
+#define MV_HMAC_SEND_Q_Q_NUM_BPID_QNUM_MASK    \
+		(0x00000fff << MV_HMAC_SEND_Q_Q_NUM_BPID_QNUM_OFFS)
+
+#define MV_HMAC_SEND_Q_Q_NUM_BPID_BPID_OFFS		0
+#define MV_HMAC_SEND_Q_Q_NUM_BPID_BPID_MASK    \
+		(0x000000ff << MV_HMAC_SEND_Q_Q_NUM_BPID_BPID_OFFS)
+
+#define MV_HMAC_SEND_Q_Q_NUM_BPID_BM_ALLOC_COUNT_OFFS		8
+#define MV_HMAC_SEND_Q_Q_NUM_BPID_BM_ALLOC_COUNT_MASK    \
+		(0x00000007 << MV_HMAC_SEND_Q_Q_NUM_BPID_BM_ALLOC_COUNT_OFFS)
+
+
+/* Hmac_%m_send_q_%n_status */
+#define MV_HMAC_SEND_Q_STATUS_REG(n)							(0x804c + 0x100*n)
+#define MV_HMAC_SEND_Q_STATUS_SQ_BUSY_OFFS		0
+#define MV_HMAC_SEND_Q_STATUS_SQ_BUSY_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_STATUS_SQ_BUSY_OFFS)
+
+#define MV_HMAC_SEND_Q_STATUS_SQ_PENDING_AXI_READ_OFFS		1
+#define MV_HMAC_SEND_Q_STATUS_SQ_PENDING_AXI_READ_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_STATUS_SQ_PENDING_AXI_READ_OFFS)
+
+#define MV_HMAC_SEND_Q_STATUS_SQ_PENDING_AXI_WRITE_OFFS		2
+#define MV_HMAC_SEND_Q_STATUS_SQ_PENDING_AXI_WRITE_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_STATUS_SQ_PENDING_AXI_WRITE_OFFS)
+
+#define MV_HMAC_SEND_Q_STATUS_SQ_PENDING_EVENT_OFFS		3
+#define MV_HMAC_SEND_Q_STATUS_SQ_PENDING_EVENT_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_STATUS_SQ_PENDING_EVENT_OFFS)
+
+#define MV_HMAC_SEND_Q_STATUS_SQ_REMAINDER_NEMPTY_OFFS		4
+#define MV_HMAC_SEND_Q_STATUS_SQ_REMAINDER_NEMPTY_MASK    \
+		(0x00000001 << MV_HMAC_SEND_Q_STATUS_SQ_REMAINDER_NEMPTY_OFFS)
+
+
+/* Hmac_%m_send_q_%n_timeout */
+#define MV_HMAC_SEND_Q_TIMEOUT_REG(n)							(0x8050 + n)
+#define MV_HMAC_SEND_Q_TIMEOUT_SQ_TIME_OUT_0_OFFS		5
+#define MV_HMAC_SEND_Q_TIMEOUT_SQ_TIME_OUT_0_MASK    \
+		(0x000007ff << MV_HMAC_SEND_Q_TIMEOUT_SQ_TIME_OUT_0_OFFS)
+
+/* HMAC Frame unit tables offsets */
+#define MV_PP3_HMAC_RQ_ADDR_LOW			0x0000
+#define MV_PP3_HMAC_RQ_ADDR_HIGH		0x0004
+#define MV_PP3_HMAC_RQ_SIZE				0x0008
+#define MV_PP3_HMAC_RQ_OCC_STATUS		0x000C
+#define MV_PP3_HMAC_RQ_AXI_ATTR			0x0010
+#define MV_PP3_HMAC_RQ_EVENT_GROUP		0x0014
+#define MV_PP3_HMAC_RQ_INT_THRESH		0x0018
+#define MV_PP3_HMAC_RQ_BACK_PRES0		0x001c
+#define MV_PP3_HMAC_RQ_BACK_PRES1		0x0020
+
+#define MV_PP3_HMAC_SQ_ADDR_LOW			0x0040
+#define MV_PP3_HMAC_SQ_ADDR_HIGH		0x0044
+#define MV_PP3_HMAC_SQ_SIZE				0x0048
+#define MV_PP3_HMAC_SQ_OCC_STATUS		0x004C
+#define MV_PP3_HMAC_SQ_AXI_ATTR			0x0050
+#define MV_PP3_HMAC_SQ_EVENT_GROUP		0x0054
+#define MV_PP3_HMAC_SQ_SW_QNUM_TDEST	0x0058
+/**/
+
+#endif /* __mvHmacRegs_h__ */
-- 
1.7.5.4

