From 586aefcea886614f0cba338ebaefe30e15f0ef01 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Thu, 3 Jan 2013 16:09:30 +0200
Subject: [PATCH 0429/1825] Bug fix: Fixed AMP boot after change of regs base

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 862d90c75fe3b86115646d163394119a71c5a083

	When the linux image boots, it modifies the internal regs base
	whats defined in INTER_REGS_BASE. When two images boot in AMP
	this creates a race condition which crashes one system. To
	overcome this for AMP linux uses the defualt regs base as u-boot
	does. To enable using 4G DRAM the regs space is reserved so
	linuxm doesn't map it as memory

	Bug fix: Please integrate to QA version

Change-Id: I63bc585a78b2991d05334836daef07219ac12a6a
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/boot/compressed/head.S                |    7 +++++-
 arch/arm/mach-armadaxp/core.c                  |   25 ++++++++++++++++++++++++
 arch/arm/mach-armadaxp/include/mach/armadaxp.h |    7 ++++++
 3 files changed, 38 insertions(+), 1 deletions(-)

diff --git a/arch/arm/boot/compressed/head.S b/arch/arm/boot/compressed/head.S
index ce422e8..df5d82b 100644
--- a/arch/arm/boot/compressed/head.S
+++ b/arch/arm/boot/compressed/head.S
@@ -140,7 +140,12 @@ start:
 		.word	_edata			@ zImage end address
  THUMB(		.thumb			)
 1:
-#ifdef CONFIG_ARCH_ARMADA_XP
+#if defined(CONFIG_ARCH_ARMADA_XP) && !defined(CONFIG_MV_AMP_ENABLE)
+
+/* Disable in AMP since in AMP mode the internal register base must match
+ * U-BOOTs base. Two operating systems cannot modify the base during boot
+ * as is done with a single image */
+
 		/* Update Internal Regs offset in case UBoot is configured
 		** to use a different base address.
 		*/
diff --git a/arch/arm/mach-armadaxp/core.c b/arch/arm/mach-armadaxp/core.c
index 021c49a..75a9e90 100644
--- a/arch/arm/mach-armadaxp/core.c
+++ b/arch/arm/mach-armadaxp/core.c
@@ -1645,6 +1645,13 @@ static void __init axp_db_init(void)
 	return;
 }
 
+#ifdef CONFIG_MV_AMP_ENABLE
+void __init axp_reserve_regs_space(void)
+{
+	memblock_reserve(INTER_REGS_PHYS_BASE, INTER_REGS_SIZE);
+}
+#endif
+
 #ifdef CONFIG_FB_DOVE
 /*
  * This fixup function is used to reserve memory for the LCD engine
@@ -1963,6 +1970,12 @@ MACHINE_START(ARMADA_XP_RD_NAS, "Marvell Armada XP RD NAS Board")
 	/* reserve memory for LCD */
 	.fixup		= axp_tag_fixup_mem32,
 #endif /* CONFIG_FB_DOVE */
+#ifdef CONFIG_SUSPEND
+	.reserve	= reserve_training_mem,
+#endif /* CONFIG_SUSPEND */
+#ifdef CONFIG_MV_AMP_ENABLE
+	.reserve	= axp_reserve_regs_space,
+#endif
 MACHINE_END
 
 
@@ -2069,6 +2082,12 @@ MACHINE_START(ARMADA_XP_RDSRV, "Marvell Armada XP Server Board")
   	.init_irq	= axp_init_irq,
   	.timer		= &axp_timer,
   	.init_machine	= axp_rdsrv_init,
+#ifdef CONFIG_SUSPEND
+	.reserve	= reserve_training_mem,
+#endif /* CONFIG_SUSPEND */
+#ifdef CONFIG_MV_AMP_ENABLE
+	.reserve	= axp_reserve_regs_space,
+#endif
   MACHINE_END
 
 /*****************************************************************************
@@ -2137,4 +2156,10 @@ MACHINE_START(ARMADA_XP_FPGA, "Marvell Armada XP FPGA Board")
 	.init_irq	= axp_init_irq,
 	.timer		= &axp_timer,
 	.init_machine	= axp_fpga_init,
+#ifdef CONFIG_SUSPEND
+	.reserve	= reserve_training_mem,
+#endif /* CONFIG_SUSPEND */
+#ifdef CONFIG_MV_AMP_ENABLE
+	.reserve	= axp_reserve_regs_space,
+#endif
 MACHINE_END
diff --git a/arch/arm/mach-armadaxp/include/mach/armadaxp.h b/arch/arm/mach-armadaxp/include/mach/armadaxp.h
index cec33fc..9f0eb2c 100755
--- a/arch/arm/mach-armadaxp/include/mach/armadaxp.h
+++ b/arch/arm/mach-armadaxp/include/mach/armadaxp.h
@@ -84,7 +84,14 @@
  * INTER_REGS_VIRT_BASE Must be 2MB aligned in order to support CONFIG_DEBUG_LL.
  * Before paging_init, the UART port is mapped by a section entry (2MB in LPAE).
  */
+#ifdef CONFIG_MV_AMP_ENABLE
+/* In AMP mode the internal register base must match U-BOOTs base since
+ * Two operating systems cannot modify the base during boot as is done
+ * with a single image */
+#define INTER_REGS_PHYS_BASE		0xD0000000
+#else
 #define INTER_REGS_PHYS_BASE		0xF1000000
+#endif
 #define INTER_REGS_VIRT_BASE		0xFBC00000
 #define INTER_REGS_BASE			INTER_REGS_VIRT_BASE /* For compatibility */
 
-- 
1.7.5.4

