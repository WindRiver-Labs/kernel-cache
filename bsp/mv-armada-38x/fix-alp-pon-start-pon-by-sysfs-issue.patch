From 00d6e030a6da7bdd66cd89293eca5bc34e938f3f Mon Sep 17 00:00:00 2001
From: xigu <xigu@marvell.com>
Date: Wed, 19 Mar 2014 13:03:35 +0200
Subject: [PATCH 1489/1825] fix: alp: pon: start pon by sysfs issue

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 66443385e8128071396d568930cf6175d528ae07

Change-Id: I4042f1d6ce12a62d6eb538e4b82606a626b0f447
Signed-off-by: xigu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6518
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pon/perf/ponOnuLnxKsMI.c     |   49 ++++++++++++++++++++
 1 files changed, 49 insertions(+), 0 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/ponOnuLnxKsMI.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/ponOnuLnxKsMI.c
index 7fecf69..e9abd4f 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/ponOnuLnxKsMI.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/ponOnuLnxKsMI.c
@@ -610,6 +610,8 @@ void onuPonUiInitStart(MV_U32 drvMode)
 {
 	int ret = -EINVAL;
 	unsigned long flags;
+	S_GponIoctlInfo gponInitConfig;
+	S_EponIoctlInit eponInitConfig;
 
 	if (ponDev.drvMode == E_PON_DRIVER_UNDEF_MODE) {
 		/* The driver only alows transition from Undefined to EPON or GPON mode */
@@ -683,6 +685,53 @@ void onuPonUiInitStart(MV_U32 drvMode)
 
 		spin_unlock_irqrestore(&onuPonIrqLock, flags);
 
+		/* init PON module */
+		if (drvMode == E_PON_DRIVER_EPON_MODE) {
+			memset(&eponInitConfig, 0, sizeof(eponInitConfig));
+			eponInitConfig.ponXvrBurstEnPolarity = 0;
+			eponInitConfig.ponXvrPolarity = 0;
+			eponInitConfig.p2pXvrBurstEnPolarity = 1;
+			eponInitConfig.p2pXvrPolarity = 0;
+			eponInitConfig.dgPolarity = 1;
+			eponInitConfig.pkt2kSupported = 1;
+			eponInitConfig.ponDbaMode = 0;
+			eponInitConfig.oamFifoSize = 2048;
+			eponInitConfig.eoamRxQueue = 7;
+			eponInitConfig.dbaOamByte.state = 1;
+			eponInitConfig.dbaOamByte.queue = 7;
+			eponInitConfig.dbaOamByte.byte_num = 128;
+			eponInitConfig.highPriTx.state = 0;
+			onuEponInit(&eponInitConfig);
+		} else {
+			memset(&gponInitConfig, 0, sizeof(gponInitConfig));
+			gponInitConfig.onuId = 0;
+			gponInitConfig.onuState = 0;
+			gponInitConfig.onuSignalDetect = 0;
+			gponInitConfig.onuDsSyncOn = 0;
+			gponInitConfig.onuGponPortState = 0;
+			gponInitConfig.omccPort = 0;
+			gponInitConfig.omccValid = 0;
+			gponInitConfig.serialNumSource = 2;
+			memcpy(gponInitConfig.serialNum, "MRVL1234", sizeof(gponInitConfig.serialNum));
+			memcpy(gponInitConfig.password, "1234567890", sizeof(gponInitConfig.password));
+			gponInitConfig.disableSn = 0;
+			gponInitConfig.clearGem = 0;
+			gponInitConfig.clearTcont = 1;
+			gponInitConfig.restoreGem = 1;
+			gponInitConfig.dgPolarity = 1;
+			gponInitConfig.ponXvrBurstEnPolarity = 0;
+			gponInitConfig.ponXvrPolarity = 0;
+			gponInitConfig.p2pXvrBurstEnPolarity = 1;
+			gponInitConfig.p2pXvrPolarity = 0;
+			gponInitConfig.fecHyst = 1;
+			gponInitConfig.couplingMode = 0;
+			gponInitConfig.disStatus = 0;
+			gponInitConfig.omciCpuRxQueue = 5;
+			gponInitConfig.omciFastPath = 0;
+			gponInitConfig.ponHighPriTx.state = 0;
+			onuGponStart(&gponInitConfig);
+		}
+
 	} else {
 		/* Switching between EPON-GPON modes requires reboot initiated by US application */
 		mvPonPrint(PON_PRINT_ERROR, PON_API_MODULE,
-- 
1.7.5.4

