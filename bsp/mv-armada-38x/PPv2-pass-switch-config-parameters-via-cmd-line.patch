From aaae7907f60499f1848fb9f5b5dd0d48e30d9824 Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Wed, 29 May 2013 13:16:40 +0300
Subject: [PATCH 0700/1825] PPv2: pass switch config parameters via cmd line

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 48a0bc1aa82648d0a973743b13f7a375b838d6fb

Change-Id: I6c1aa21708d6609174ce1ee83fb783bf8037b780
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2015
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/core.c                      |   48 +++++++++++++++++++-
 .../mv_drivers_lsp/mv_switch/mv_switch.c           |   30 ++++++++++++
 2 files changed, 77 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index 63ab2c7..dd0bd4c 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -529,7 +529,7 @@ static void mv_pp2_giga_pdev_register(struct platform_device *pdev)
 	plat_data->cpu_mask  = group_cpu_mask;
 	plat_data->phy_addr = mvBoardPhyAddrGet(port);
 	plat_data->lb_enable = mvBoardIsPortLoopback(port);
-	plat_data->is_sgmii = MV_FALSE/*mvBoardIsPortInSgmii(port)*/;
+	plat_data->is_sgmii = MV_FALSE;
 	plat_data->is_rgmii = MV_FALSE;
 	plat_data->duplex = DUPLEX_FULL;
 
@@ -672,6 +672,49 @@ static void __init eth_init(void)
 #endif /* CONFIG_MV_ETHERNET */
 
 #ifdef CONFIG_MV_INCLUDE_SWITCH
+char *mv_switch_str;
+
+static int mv_switch_cmdline_config(char *s)
+{
+	mv_switch_str = s;
+	return 1;
+}
+__setup("switch_config=", mv_switch_cmdline_config);
+
+static void mv_switch_parse_cmd_line(char *str, MV_SWITCH_PRESET_TYPE *preset, MV_TAG_TYPE *tag_mode)
+{
+	int len, curr = 0;
+
+	/* default values */
+	*preset = MV_PRESET_TRANSPARENT;
+	*tag_mode = MV_TAG_TYPE_NONE;
+
+	if (!str || !strcmp(str, "none"))
+		return;
+
+	len = strlen(str);
+
+	/* Parse tag mode */
+	if ((len >= 2) && (((str[curr] == 'm') && (str[curr + 1] == 'h')) || ((str[curr] == 'M') && (str[curr + 1] == 'H')))) {
+		*tag_mode = MV_TAG_TYPE_MH;
+		curr += 2;
+	} else if ((len >= 3) && (((str[curr] == 'd') && (str[curr + 1] == 's') && (str[curr + 2] == 'a'))
+			|| ((str[curr] == 'D') && (str[curr + 1] == 'S') && (str[curr + 2] == 'A')))) {
+		*tag_mode = MV_TAG_TYPE_DSA;
+		curr += 3;
+	} else
+		return;
+
+	if (str[curr++] != ',')
+		return;
+
+	/* Parse preset mode */
+	if (!strcmp(str + curr, "per_port"))
+		*preset = MV_PRESET_PER_PORT_VLAN;
+	else if (!strcmp(str + curr, "single"))
+		*preset = MV_PRESET_SINGLE_VLAN;
+}
+
 static void mv_switch_pdev_register(struct platform_device *pdev)
 {
 	struct mv_switch_pdata *plat_data = (struct mv_switch_pdata *)pdev->dev.platform_data;
@@ -687,6 +730,9 @@ static void mv_switch_pdev_register(struct platform_device *pdev)
 	plat_data->connected_port_mask = mvBoardSwitchPortsMaskGet(0);
 	plat_data->switch_irq = IRQ_GLOBAL_ETH_COMPLEX;
 
+	/* parse switch command line parametes (preset and tag mode) */
+	mv_switch_parse_cmd_line(mv_switch_str, &plat_data->preset, &plat_data->tag_mode);
+
 	platform_device_register(pdev);
 }
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
index e405d98..ff4af2d 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
@@ -870,6 +870,36 @@ int mv_switch_preset_init(MV_SWITCH_PRESET_TYPE preset, MV_TAG_TYPE tag_mode, in
 	unsigned char cnt;
 	GT_LPORT port_list[MAX_SWITCH_PORTS];
 
+	printk(KERN_INFO "Switch driver init:\n");
+	switch (preset) {
+	case MV_PRESET_TRANSPARENT:
+		printk(KERN_INFO "    o preset mode = Transparent\n");
+		break;
+	case MV_PRESET_SINGLE_VLAN:
+		printk(KERN_INFO "    o preset mode = Single Vlan\n");
+		break;
+	case MV_PRESET_PER_PORT_VLAN:
+		printk(KERN_INFO "    o preset mode = Vlan Per Port\n");
+		break;
+	default:
+		printk(KERN_INFO "    o preset mode = Unknown\n");
+	}
+
+	switch (tag_mode) {
+	case MV_TAG_TYPE_MH:
+		printk(KERN_INFO "    o tag mode    = Marvell Header\n");
+		break;
+	case MV_TAG_TYPE_DSA:
+		printk(KERN_INFO "    o tag mode    = DSA Tag\n");
+		break;
+	case MV_TAG_TYPE_NONE:
+		printk(KERN_INFO "    o tag mode    = No Tag\n");
+		break;
+	default:
+		printk(KERN_INFO "Unknown\n");
+
+	}
+
 	/* set all ports to work in Normal mode */
 	for (p = 0; p < qd_dev->numOfPorts; p++) {
 		if (MV_BIT_CHECK(switch_ports_mask, p)) {
-- 
1.7.5.4

