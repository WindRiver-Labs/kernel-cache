From 3c13ec988c934d9c05c5eecd6808ffa579a06e3e Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Thu, 26 Dec 2013 09:28:07 -0500
Subject: [PATCH 1255/1825] neta: merge with 3.10 - phase 1

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 3bd43f8c1d2242ce85a1ed24acae43dec15629db

Change-Id: Iacdac77258c1d230a31a853a31b7f6457c40e4a3
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada370/config/mvSysEthConfig.h    |    7 +-
 arch/arm/mach-armada38x/config/mvSysEthConfig.h    |    1 +
 arch/arm/mach-armadaxp/config/mvSysEthConfig.h     |    8 +--
 .../arm/plat-armada/mv_drivers_lsp/mv_mux/Makefile |    2 +
 .../plat-armada/mv_drivers_lsp/mv_neta/Makefile    |   44 ++++++---
 .../mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c   |   64 +++++-------
 .../mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c   |    7 +-
 .../mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c     |  108 ++++++++++++++++++--
 .../mv_drivers_lsp/mv_neta/net_dev/mv_netdev.h     |    1 +
 .../plat-armada/mv_drivers_lsp/mv_switch/Makefile  |   14 +++-
 .../mv_drivers_lsp/mv_switch/mv_switch.h           |    2 +-
 arch/arm/plat-armada/mv_hal/neta/bm/mvBm.c         |    5 +
 arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c      |    8 +-
 arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h      |   10 +-
 arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h  |    4 +-
 arch/arm/plat-armada/mv_hal/neta/pmt/mvPmt.h       |    1 -
 16 files changed, 197 insertions(+), 89 deletions(-)

diff --git a/arch/arm/mach-armada370/config/mvSysEthConfig.h b/arch/arm/mach-armada370/config/mvSysEthConfig.h
index 23df325..0079943 100644
--- a/arch/arm/mach-armada370/config/mvSysEthConfig.h
+++ b/arch/arm/mach-armada370/config/mvSysEthConfig.h
@@ -37,14 +37,9 @@ disclaimer.
 /*
 ** Base address for ethernet registers.
 */
-#ifdef CONFIG_MV_PON
-#define MV_PON_PORT(p)		((p) == MV_PON_PORT_ID)
-#define MV_PON_REG_BASE         MV_PON_REGS_OFFSET
-#define MV_ETH_REGS_BASE(p)	(MV_PON_PORT(p) ? MV_PON_REGS_OFFSET : MV_ETH_REGS_OFFSET(p))
-#else
 #define MV_PON_PORT(p)		MV_FALSE
+#define MV_ETH_MAX_TCONT	1
 #define MV_ETH_REGS_BASE(p)	MV_ETH_REGS_OFFSET(p)
-#endif /* CONFIG_MV_PON */
 
 #define MV_BM_REG_BASE		MV_BM_REGS_OFFSET
 #define MV_PNC_REG_BASE         MV_PNC_REGS_OFFSET
diff --git a/arch/arm/mach-armada38x/config/mvSysEthConfig.h b/arch/arm/mach-armada38x/config/mvSysEthConfig.h
index e149c9f..aece152 100644
--- a/arch/arm/mach-armada38x/config/mvSysEthConfig.h
+++ b/arch/arm/mach-armada38x/config/mvSysEthConfig.h
@@ -86,6 +86,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ** Base address for ethernet registers.
 */
 #define MV_PON_PORT(p)		MV_FALSE
+#define MV_ETH_MAX_TCONT	1
 #define MV_ETH_REGS_BASE(p)	MV_ETH_REGS_OFFSET(p)
 #define MV_BM_REG_BASE		MV_BM_REGS_OFFSET
 #define MV_ETH_SGMII_PHY_REGS_BASE(p)  MV_ETH_SGMII_PHY_REGS_OFFSET(p)
diff --git a/arch/arm/mach-armadaxp/config/mvSysEthConfig.h b/arch/arm/mach-armadaxp/config/mvSysEthConfig.h
index 62f898e..e45fa45 100644
--- a/arch/arm/mach-armadaxp/config/mvSysEthConfig.h
+++ b/arch/arm/mach-armadaxp/config/mvSysEthConfig.h
@@ -82,15 +82,9 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 /*
 ** Base address for ethernet registers.
 */
-#ifdef CONFIG_MV_PON
-#define MV_PON_PORT_ID_GET()	MV_PON_PORT_ID
-#define MV_PON_PORT(p)		((p) == MV_PON_PORT_ID)
-#define MV_PON_REG_BASE         MV_PON_REGS_OFFSET
-#define MV_ETH_REGS_BASE(p)	(MV_PON_PORT(p) ? MV_PON_REGS_OFFSET : MV_ETH_REGS_OFFSET(p))
-#else
 #define MV_PON_PORT(p)		MV_FALSE
+#define MV_ETH_MAX_TCONT	1
 #define MV_ETH_REGS_BASE(p)	MV_ETH_REGS_OFFSET(p)
-#endif /* CONFIG_MV_PON */ 
 
 #define MV_BM_REG_BASE		MV_BM_REGS_OFFSET
 #define MV_PNC_REG_BASE         MV_PNC_REGS_OFFSET
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/Makefile b/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/Makefile
index d6e38b4..a6a3809 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/Makefile
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_mux/Makefile
@@ -14,6 +14,8 @@ ifneq ($(MACHINE),)
 include $(srctree)/$(MACHINE)/config/mvRules.mk
 endif
 
+ccflags-y       += -I$(PLAT_PATH_I)/$(LSP_MUX_DIR)
+
 endif # CONFIG_ARCH_MVEBU
 
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/Makefile b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/Makefile
index 2cbb19e..532123c 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/Makefile
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/Makefile
@@ -2,18 +2,18 @@
 # Makefile for the Marvell Gigabit Ethernet driver
 #
 
-ifneq ($(MACHINE),)
-include $(srctree)/$(MACHINE)/config/mvRules.mk
+ifeq ($(CONFIG_ARCH_MVEBU),y)
+NETA_HAL_DIR = hal
+else
+NETA_HAL_DIR = ../../mv_hal/neta
 endif
 
-NETA_DIR       = ../../mv_hal/neta
-NETA_GBE_DIR   = $(NETA_DIR)/gbe
-NETA_BM_DIR    = $(NETA_DIR)/bm
-NETA_PNC_DIR   = $(NETA_DIR)/pnc
-NETA_PMT_DIR   = $(NETA_DIR)/pmt
+NETA_GBE_DIR   = $(NETA_HAL_DIR)/gbe
+NETA_BM_DIR    = $(NETA_HAL_DIR)/bm
+NETA_PNC_DIR   = $(NETA_HAL_DIR)/pnc
+NETA_PMT_DIR   = $(NETA_HAL_DIR)/pmt
 
-mv_neta-objs += $(NETA_GBE_DIR)/mvNeta.o $(NETA_GBE_DIR)/mvNetaDebug.o \
-		$(NETA_GBE_DIR)/mvNetaAddrDec.o
+mv_neta-objs += $(NETA_GBE_DIR)/mvNeta.o $(NETA_GBE_DIR)/mvNetaDebug.o
 
 ifeq ($(CONFIG_MV_ETH_PNC),y)
 mv_neta-objs += $(NETA_PNC_DIR)/mvTcam.o  $(NETA_PNC_DIR)/mvPncAging.o \
@@ -47,10 +47,6 @@ endif
 
 mv_neta-objs += net_dev/mv_netdev.o net_dev/mv_ethernet.o net_dev/mv_eth_sysfs.o net_dev/mv_eth_tool.o
 
-ifeq ($(CONFIG_MV_ETH_NFP),y)
-mv_neta-objs += net_dev/mv_eth_nfp.o
-endif
-
 ifeq ($(CONFIG_MV_ETH_L2FW),y)
 mv_neta-objs += l2fw/l2fw_sysfs.o l2fw/mv_eth_l2fw.o
 
@@ -63,6 +59,28 @@ ifeq ($(CONFIG_MV_PON),y)
 mv_neta-objs += mv_pon_sysfs.o
 endif
 
+ifeq ($(CONFIG_ARCH_MVEBU),y)
+
+ccflags-y       += $(MVEBU_NET_FLAGS)
+
+ccflags-y	+= $(INCLUDE_DIRS)
+
+ccflags-y       += -I$(PLAT_DIR)/neta
+ccflags-y       += -I$(PLAT_DIR)/neta/hal
+
+else
+
+ifneq ($(MACHINE),)
+include $(srctree)/$(MACHINE)/config/mvRules.mk
+endif
+
+mv_neta-objs 	+= $(NETA_GBE_DIR)/mvNetaAddrDec.o
+
+ccflags-y       += -I$(PLAT_PATH_I)/$(HAL_NETA_DIR)
+ccflags-y       += -I$(PLAT_PATH_I)/$(HAL_ETHPHY_DIR)
+ccflags-y       += -I$(PLAT_PATH_I)/$(LSP_MUX_DIR)
+endif
+
 ifeq ($(NETMAP),y)
 ccflags-y       += -DCONFIG_NETMAP -I$(NETMAP_DIR) -I$(NETMAP_DIR)/../sys
 endif
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c
index 25a06e2..6c1e846 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c
@@ -38,14 +38,7 @@ disclaimer.
 
 #include "mvOs.h"
 #include "mvDebug.h"
-#include "dbg-trace.h"
-#include "mvSysHwConfig.h"
-#include "boardEnv/mvBoardEnvLib.h"
-#include "ctrlEnv/mvCtrlEnvLib.h"
-#include "eth-phy/mvEthPhy.h"
-#include "mvSysEthPhyApi.h"
-#include "mvSysNetaApi.h"
-
+#include "mvEthPhy.h"
 
 #include "gbe/mvNeta.h"
 #include "bm/mvBm.h"
@@ -54,7 +47,6 @@ disclaimer.
 #include "mv_netdev.h"
 
 #include "mvOs.h"
-#include "mvSysHwConfig.h"
 
 #ifdef CONFIG_MV_ETH_PNC
 #include "pnc/mvPnc.h"
@@ -85,10 +77,10 @@ static int isSwitch(struct eth_port *priv)
 int mv_eth_tool_restore_settings(struct net_device *netdev)
 {
 	struct eth_port 	*priv = MV_ETH_PRIV(netdev);
-	int 				mv_phy_speed, mv_phy_duplex;
-	MV_U32			    mv_phy_addr = mvBoardPhyAddrGet(priv->port);
-	MV_ETH_PORT_SPEED	mv_mac_speed;
-	MV_ETH_PORT_DUPLEX	mv_mac_duplex;
+	int			phy_speed, phy_duplex;
+	MV_U32			phy_addr = priv->plat_data->phy_addr;
+	MV_ETH_PORT_SPEED	mac_speed;
+	MV_ETH_PORT_DUPLEX	mac_duplex;
 	int			err = -EINVAL;
 
 	 if ((priv == NULL) || (isSwitch(priv)))
@@ -96,16 +88,16 @@ int mv_eth_tool_restore_settings(struct net_device *netdev)
 
 	switch (priv->speed_cfg) {
 	case SPEED_10:
-		mv_phy_speed  = 0;
-		mv_mac_speed = MV_ETH_SPEED_10;
+		phy_speed  = 0;
+		mac_speed = MV_ETH_SPEED_10;
 		break;
 	case SPEED_100:
-		mv_phy_speed  = 1;
-		mv_mac_speed = MV_ETH_SPEED_100;
+		phy_speed  = 1;
+		mac_speed = MV_ETH_SPEED_100;
 		break;
 	case SPEED_1000:
-		mv_phy_speed  = 2;
-		mv_mac_speed = MV_ETH_SPEED_1000;
+		phy_speed  = 2;
+		mac_speed = MV_ETH_SPEED_1000;
 		break;
 	default:
 		return -EINVAL;
@@ -113,12 +105,12 @@ int mv_eth_tool_restore_settings(struct net_device *netdev)
 
 	switch (priv->duplex_cfg) {
 	case DUPLEX_HALF:
-		mv_phy_duplex = 0;
-		mv_mac_duplex = MV_ETH_DUPLEX_HALF;
+		phy_duplex = 0;
+		mac_duplex = MV_ETH_DUPLEX_HALF;
 		break;
 	case DUPLEX_FULL:
-		mv_phy_duplex = 1;
-		mv_mac_duplex = MV_ETH_DUPLEX_FULL;
+		phy_duplex = 1;
+		mac_duplex = MV_ETH_DUPLEX_FULL;
 		break;
 	default:
 		return -EINVAL;
@@ -127,11 +119,11 @@ int mv_eth_tool_restore_settings(struct net_device *netdev)
 	if (priv->autoneg_cfg == AUTONEG_ENABLE) {
 		err = mvNetaSpeedDuplexSet(priv->port, MV_ETH_SPEED_AN, MV_ETH_DUPLEX_AN);
 		if (!err)
-			err = mvEthPhyAdvertiseSet(mv_phy_addr, priv->advertise_cfg);
+			err = mvEthPhyAdvertiseSet(phy_addr, priv->advertise_cfg);
 		/* Restart AN on PHY enables it */
 		if (!err) {
 
-			err = mvEthPhyRestartAN(mv_phy_addr, MV_ETH_TOOL_AN_TIMEOUT);
+			err = mvEthPhyRestartAN(phy_addr, MV_ETH_TOOL_AN_TIMEOUT);
 			if (err == MV_TIMEOUT) {
 				MV_ETH_PORT_STATUS ps;
 
@@ -142,9 +134,9 @@ int mv_eth_tool_restore_settings(struct net_device *netdev)
 			}
 		}
 	} else if (priv->autoneg_cfg == AUTONEG_DISABLE) {
-		err = mvEthPhyDisableAN(mv_phy_addr, mv_phy_speed, mv_phy_duplex);
+		err = mvEthPhyDisableAN(phy_addr, phy_speed, phy_duplex);
 		if (!err)
-			err = mvNetaSpeedDuplexSet(priv->port, mv_mac_speed, mv_mac_duplex);
+			err = mvNetaSpeedDuplexSet(priv->port, mac_speed, mac_duplex);
 	} else {
 		err = -EINVAL;
 	}
@@ -170,7 +162,7 @@ int mv_eth_tool_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
 {
 	struct eth_port 	*priv = MV_ETH_PRIV(netdev);
 	u16			lp_ad, stat1000;
-	MV_U32			mv_phy_addr;
+	MV_U32			phy_addr;
 	MV_ETH_PORT_SPEED 	speed;
 	MV_ETH_PORT_DUPLEX 	duplex;
 	MV_ETH_PORT_STATUS      status;
@@ -184,7 +176,7 @@ int mv_eth_tool_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
 			| SUPPORTED_100baseT_Full | SUPPORTED_Autoneg | SUPPORTED_TP | SUPPORTED_MII
 			| SUPPORTED_1000baseT_Full);
 
-	mv_phy_addr = mvBoardPhyAddrGet(priv->port);
+	phy_addr = priv->plat_data->phy_addr;
 
 	mvNetaLinkStatus(priv->port, &status);
 
@@ -213,16 +205,16 @@ int mv_eth_tool_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
 	}
 
 	cmd->port = PORT_MII;
-	cmd->phy_address = mv_phy_addr;
+	cmd->phy_address = phy_addr;
 	cmd->transceiver = XCVR_INTERNAL;
 	/* check if speed and duplex are AN */
 	mvNetaSpeedDuplexGet(priv->port, &speed, &duplex);
 	if (speed == MV_ETH_SPEED_AN && duplex == MV_ETH_DUPLEX_AN) {
 		cmd->lp_advertising = cmd->advertising = 0;
 		cmd->autoneg = AUTONEG_ENABLE;
-		mvEthPhyAdvertiseGet(mv_phy_addr, (MV_U16 *)&(cmd->advertising));
+		mvEthPhyAdvertiseGet(phy_addr, (MV_U16 *)&(cmd->advertising));
 
-		mvEthPhyRegRead(mv_phy_addr, MII_LPA, &lp_ad);
+		mvEthPhyRegRead(phy_addr, MII_LPA, &lp_ad);
 		if (lp_ad & LPA_LPACK)
 			cmd->lp_advertising |= ADVERTISED_Autoneg;
 		if (lp_ad & ADVERTISE_10HALF)
@@ -234,7 +226,7 @@ int mv_eth_tool_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
 		if (lp_ad & ADVERTISE_100FULL)
 			cmd->lp_advertising |= ADVERTISED_100baseT_Full;
 
-		mvEthPhyRegRead(mv_phy_addr, MII_STAT1000, &stat1000);
+		mvEthPhyRegRead(phy_addr, MII_STAT1000, &stat1000);
 		if (stat1000 & LPA_1000HALF)
 			cmd->lp_advertising |= ADVERTISED_1000baseT_Half;
 		if (stat1000 & LPA_1000FULL)
@@ -364,7 +356,7 @@ void mv_eth_tool_get_regs(struct net_device *netdev,
 
 	memset(p, 0, MV_ETH_TOOL_REGS_LEN * sizeof(uint32_t));
 
-	regs->version = mvCtrlModelRevGet();
+	regs->version = priv->plat_data->ctrl_rev;
 
 	/* ETH port registers */
 	regs_buff[0]  = MV_REG_READ(ETH_PORT_STATUS_REG(priv->port));
@@ -413,7 +405,7 @@ int mv_eth_tool_nway_reset(struct net_device *netdev)
 		return -EOPNOTSUPP;
 	}
 
-	phy_addr = mvBoardPhyAddrGet(priv->port);
+	phy_addr = priv->plat_data->phy_addr;
 	if (mvEthPhyRestartAN(phy_addr, MV_ETH_TOOL_AN_TIMEOUT) != MV_OK)
 		return -EINVAL;
 
@@ -648,7 +640,7 @@ int mv_eth_tool_set_pauseparam(struct net_device *netdev,
 	}
 	/* Only symmetric change for RX and TX flow control is allowed */
 	if (status == MV_OK) {
-		phy_addr = mvBoardPhyAddrGet(priv->port);
+		phy_addr = priv->plat_data->phy_addr;
 		status = mvEthPhyRestartAN(phy_addr, MV_ETH_TOOL_AN_TIMEOUT);
 	}
 	if (status != MV_OK)
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c
index e76c5b6..a22234d 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_ethernet.c
@@ -34,11 +34,8 @@ disclaimer.
 #include <linux/interrupt.h>
 
 #include "mvOs.h"
-#include "dbg-trace.h"
-#include "mvSysHwConfig.h"
-#include "boardEnv/mvBoardEnvLib.h"
 
-#include "eth-phy/mvEthPhy.h"
+#include "mvEthPhy.h"
 #include "gbe/mvNeta.h"
 #include "pnc/mvPnc.h"
 
@@ -83,7 +80,7 @@ int mv_eth_start(struct net_device *dev)
 	}
 	if (priv->flags & MV_ETH_F_CONNECT_LINUX) {
 		/* connect to port interrupt line */
-		if (request_irq(dev->irq, mv_eth_isr, (IRQF_DISABLED|IRQF_SAMPLE_RANDOM), "mv_eth", priv)) {
+		if (request_irq(dev->irq, mv_eth_isr, (IRQF_DISABLED), "mv_eth", priv)) {
 			printk(KERN_ERR "cannot request irq %d for %s port %d\n", dev->irq, dev->name, priv->port);
 			if (priv->flags & MV_ETH_F_CONNECT_LINUX)
 				napi_disable(priv->napiGroup[CPU_GROUP_DEF]);
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
index a62cec7..c1b332c 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
@@ -34,28 +34,31 @@ disclaimer.
 #include <linux/skbuff.h>
 #include <linux/inetdevice.h>
 #include <linux/mv_neta.h>
+#include <linux/mbus.h>
 #include <net/ip.h>
 #include <net/ipv6.h>
 #include <linux/module.h>
 #include "mvOs.h"
 #include "mvDebug.h"
-#include "dbg-trace.h"
-#include "mvSysHwConfig.h"
-#include "boardEnv/mvBoardEnvLib.h"
-#include "ctrlEnv/mvCtrlEnvLib.h"
-#include "eth-phy/mvEthPhy.h"
+#include "mvEthPhy.h"
 
 #include "gbe/mvNeta.h"
 #include "bm/mvBm.h"
 #include "pnc/mvPnc.h"
 #include "pnc/mvTcam.h"
 #include "pmt/mvPmt.h"
-#include "mv_mux/mv_mux_netdev.h"
+#include "mv_mux_netdev.h"
 
 #include "mv_netdev.h"
 #include "mv_eth_tool.h"
 #include "mv_eth_sysfs.h"
-#include "cpu/mvCpuCntrs.h"
+
+#ifdef CONFIG_ARCH_MVEBU
+#include "mvNetConfig.h"
+#else
+#include "mvSysEthConfig.h"
+#include "ctrlEnv/mvCtrlEnvLib.h"
+#endif
 
 #if defined(CONFIG_NETMAP) || defined(CONFIG_NETMAP_MODULE)
 #include <mv_neta_netmap.h>
@@ -64,6 +67,7 @@ disclaimer.
 static struct mv_mux_eth_ops mux_eth_ops;
 
 #ifdef CONFIG_MV_CPU_PERF_CNTRS
+#include "cpu/mvCpuCntrs.h"
 MV_CPU_CNTRS_EVENT	*event0 = NULL;
 MV_CPU_CNTRS_EVENT	*event1 = NULL;
 MV_CPU_CNTRS_EVENT	*event2 = NULL;
@@ -3194,7 +3198,7 @@ static int mv_eth_load_network_interfaces(struct platform_device *pdev)
 {
 	u32 port;
 	struct eth_port *pp;
-	int mtu, err;
+	int mtu, err = 0;
 	struct net_device *dev;
 	struct mv_neta_pdata *plat_data = (struct mv_neta_pdata *)pdev->dev.platform_data;
 	u8 mac[MV_MAC_ADDR_SIZE];
@@ -3585,6 +3589,93 @@ void    mv_eth_hal_shared_init(struct mv_neta_pdata *plat_data)
  * mv_eth_win_init --                                      *
  *   Win initilization                                     *
  ***********************************************************/
+#ifdef CONFIG_ARCH_MVEBU
+void	mv_eth_win_init(int port)
+{
+	const struct mbus_dram_target_info *dram;
+	int i;
+	u32 enable = 0, protection = 0;
+
+	/* First disable all address decode windows */
+	for (i = 0; i < ETH_MAX_DECODE_WIN; i++)
+		enable |= (1 << i);
+
+	MV_REG_WRITE(ETH_BASE_ADDR_ENABLE_REG(port), enable);
+
+	/* Clear Base/Size/Remap registers for all windows */
+	for (i = 0; i < ETH_MAX_DECODE_WIN; i++) {
+		MV_REG_WRITE(ETH_WIN_BASE_REG(port, i), 0);
+		MV_REG_WRITE(ETH_WIN_SIZE_REG(port, i), 0);
+
+		if (i < ETH_MAX_HIGH_ADDR_REMAP_WIN)
+			MV_REG_WRITE(ETH_WIN_REMAP_REG(port, i), 0);
+	}
+
+	dram = mv_mbus_dram_info();
+	if (!dram) {
+		pr_err("%s: No DRAM information\n", __func__);
+		return;
+	}
+	for (i = 0; i < dram->num_cs; i++) {
+		const struct mbus_dram_window *cs = dram->cs + i;
+		u32 baseReg, base = cs->base;
+		u32 sizeReg, size = cs->size;
+		u32 alignment;
+		u8 attr = cs->mbus_attr;
+		u8 target = dram->mbus_dram_target_id;
+
+		/* check if address is aligned to the size */
+		if (MV_IS_NOT_ALIGN(base, size)) {
+			pr_err("%s: Error setting window for cs #%d.\n"
+			   "Address 0x%08x is not aligned to size 0x%x.\n",
+			   __func__, i, base, size);
+			return;
+		}
+
+		if (!MV_IS_POWER_OF_2(size)) {
+			pr_err("%s: Error setting window for cs #%d.\n"
+				"Window size %u is not a power to 2.\n",
+				__func__, i, size);
+			return;
+		}
+
+#ifdef CONFIG_MV_SUPPORT_L2_DEPOSIT
+		/* Setting DRAM windows attribute to :
+			0x3 - Shared transaction + L2 write allocate (L2 Deposit) */
+		attr &= ~(0x30);
+		attr |= 0x30;
+#endif
+
+		baseReg = (base & ETH_WIN_BASE_MASK);
+		sizeReg = MV_REG_READ(ETH_WIN_SIZE_REG(port, i));
+
+		/* set size */
+		alignment = 1 << ETH_WIN_SIZE_OFFS;
+		sizeReg &= ~ETH_WIN_SIZE_MASK;
+		sizeReg |= (((size / alignment) - 1) << ETH_WIN_SIZE_OFFS);
+
+		/* set attributes */
+		baseReg &= ~ETH_WIN_ATTR_MASK;
+		baseReg |= attr << ETH_WIN_ATTR_OFFS;
+
+		/* set target ID */
+		baseReg &= ~ETH_WIN_TARGET_MASK;
+		baseReg |= target << ETH_WIN_TARGET_OFFS;
+
+		MV_REG_WRITE(ETH_WIN_BASE_REG(port, i), baseReg);
+		MV_REG_WRITE(ETH_WIN_SIZE_REG(port, i), sizeReg);
+
+		enable &= ~(1 << i);
+		protection |= (FULL_ACCESS << (i * 2));
+	}
+	/* Set window protection */
+	MV_REG_WRITE(ETH_ACCESS_PROTECT_REG(port), protection);
+	/* Enable window */
+	MV_REG_WRITE(ETH_BASE_ADDR_ENABLE_REG(port), enable);
+}
+
+#else /* !CONFIG_ARCH_MVEBU */
+
 void 	mv_eth_win_init(int port)
 {
 	MV_UNIT_WIN_INFO addrWinMap[MAX_TARGETS + 1];
@@ -3611,6 +3702,7 @@ void 	mv_eth_win_init(int port)
 	mvNetaWinInit(port, addrWinMap);
 	return;
 }
+#endif /* CONFIG_ARCH_MVEBU */
 
 /***********************************************************
  * mv_eth_port_suspend                                     *
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.h
index 9ca226c..0ee7921 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.h
@@ -31,6 +31,7 @@ disclaimer.
 #include <linux/netdevice.h>
 #include <linux/etherdevice.h>
 #include <linux/skbuff.h>
+#include <linux/mv_neta.h>
 #include <net/ip.h>
 
 #include "mvCommon.h"
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/Makefile b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/Makefile
index d8937ea..b37a198 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/Makefile
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/Makefile
@@ -1,8 +1,20 @@
 #
-# Makefile for the Marvell Key
+# Makefile for the Marvell Soho switches
 #
+
+ifeq ($(CONFIG_ARCH_MVEBU),y)
+
+ccflags-y       += $(MVEBU_NET_FLAGS)
+ccflags-y       += $(INCLUDE_DIRS)
+
+else
+
 ifneq ($(MACHINE),)
 include $(srctree)/$(MACHINE)/config/mvRules.mk
 endif
 
+ccflags-y       += -I$(PLAT_PATH_I)/$(LSP_MUX_DIR)
+
+endif # CONFIG_ARCH_MVEBU
+
 obj-$(CONFIG_MV_INCLUDE_SWITCH)	+= mv_switch.o mv_switch_sysfs.o
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.h
index b6cbe05..130a2ff 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.h
@@ -29,7 +29,7 @@ disclaimer.
 #define __mv_switch_h__
 
 #include "mv802_3.h"
-#include "mv_mux/mv_mux_netdev.h"
+#include "mv_mux_netdev.h"
 
 #define MV_SWITCH_DB_NUM			16
 
diff --git a/arch/arm/plat-armada/mv_hal/neta/bm/mvBm.c b/arch/arm/plat-armada/mv_hal/neta/bm/mvBm.c
index 07bf3c0..f42c06b 100644
--- a/arch/arm/plat-armada/mv_hal/neta/bm/mvBm.c
+++ b/arch/arm/plat-armada/mv_hal/neta/bm/mvBm.c
@@ -68,7 +68,12 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "mvDebug.h"
 #include "mvCommon.h"
 #include "mvOs.h"
+
+#ifdef CONFIG_ARCH_MVEBU
+#include "mvNetConfig.h"
+#else
 #include "mvSysEthConfig.h"
+#endif
 
 #include "mvBm.h"
 
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c
index 28cc933..967488a 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c
@@ -118,7 +118,7 @@ int mvNetaTxpCheck(int port, int txp)
 		return 1;
 
 	if (MV_PON_PORT(port))
-		txpMax = MV_ETH_MAX_TCONT();
+		txpMax = MV_ETH_MAX_TCONT;
 
 	return mvNetaMaxCheck(txp, txpMax, "txp");
 }
@@ -179,7 +179,7 @@ void *mvNetaPortInit(int portNo, void *osHandle)
 
 #ifdef CONFIG_MV_PON
 	if (MV_PON_PORT(portNo))
-		pPortCtrl->txpNum = MV_ETH_MAX_TCONT();
+		pPortCtrl->txpNum = MV_ETH_MAX_TCONT;
 #endif /* CONFIG_MV_PON */
 
 	pPortCtrl->rxqNum = CONFIG_MV_ETH_RXQ;
@@ -3371,7 +3371,7 @@ MV_STATUS   mvNetaPonRxMibDefault(int mib)
 		/* Don't count default packets that not match Gem portID */
 		regVal &= ~NETA_PON_MIB_RX_VALID_MASK;
 	} else {
-		if (mvNetaMaxCheck(mib, MV_ETH_MAX_TCONT(), "tcont"))
+		if (mvNetaMaxCheck(mib, MV_ETH_MAX_TCONT, "tcont"))
 			return MV_BAD_PARAM;
 
 		regVal &= ~NETA_PON_MIB_RX_MIB_NO_MASK;
@@ -3388,7 +3388,7 @@ MV_STATUS   mvNetaPonRxMibGemPid(int mib, MV_U16 gemPid)
 	MV_U32	regVal;
 	int	i, free = -1;
 
-	if ((mib != -1) && mvNetaMaxCheck(mib, MV_ETH_MAX_TCONT(), "tcont"))
+	if ((mib != -1) && mvNetaMaxCheck(mib, MV_ETH_MAX_TCONT, "tcont"))
 		return MV_BAD_PARAM;
 
 	/* look for gemPid if exist of first free entry */
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
index 2b5470a..f3b021b 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
@@ -68,6 +68,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #ifdef __cplusplus
 extern "C" {
 #endif /* __cplusplus */
+
 #include "mvTypes.h"
 #include "mvCommon.h"
 #include "mvOs.h"
@@ -84,6 +85,9 @@ extern "C" {
 # define mvNetaDebugPrintf(msg, ...)
 #endif /* CONFIG_MV_ETH_DEBUG_CODE */
 
+#ifndef MV_ETH_MAX_TCONT
+# define MV_ETH_MAX_TCONT 1
+#endif
 
 #ifdef CONFIG_MV_ETH_NFP
 
@@ -362,12 +366,6 @@ typedef struct {
 extern MV_NETA_PORT_CTRL **mvNetaPortCtrl;
 extern MV_NETA_HAL_DATA mvNetaHalData;
 
-#ifdef CONFIG_MV_PON
-#define MV_ETH_MAX_TCONT() 	CONFIG_MV_PON_TCONTS
-#else
-#define MV_ETH_MAX_TCONT()      1
-#endif /* CONFIG_MV_PON */
-
 /* Get Giga port handler */
 static INLINE MV_NETA_PORT_CTRL *mvNetaPortHndlGet(int port)
 {
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h
index f4e315b..4855b37 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h
@@ -70,7 +70,9 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 extern "C" {
 #endif /* __cplusplus */
 
-#if !defined(CONFIG_OF)
+#ifdef CONFIG_ARCH_MVEBU
+#include "mvNetConfig.h"
+#else
 #include "mvSysEthConfig.h"
 #endif
 
diff --git a/arch/arm/plat-armada/mv_hal/neta/pmt/mvPmt.h b/arch/arm/plat-armada/mv_hal/neta/pmt/mvPmt.h
index 201cc23..3d704fe 100644
--- a/arch/arm/plat-armada/mv_hal/neta/pmt/mvPmt.h
+++ b/arch/arm/plat-armada/mv_hal/neta/pmt/mvPmt.h
@@ -73,7 +73,6 @@ extern "C" {
 #include "mvTypes.h"
 #include "mvCommon.h"
 #include "mvOs.h"
-#include "ctrlEnv/mvCtrlEnvSpec.h"
 
 #define PMT_TEXT    16
 
-- 
1.7.5.4

