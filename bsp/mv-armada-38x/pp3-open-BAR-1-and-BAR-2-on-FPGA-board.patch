From 4cf9aa83885b02a549bea5c568e34b841c21542e Mon Sep 17 00:00:00 2001
From: Yelena <yelena@marvell.com>
Date: Mon, 17 Mar 2014 18:19:02 +0200
Subject: [PATCH 1487/1825] pp3: open BAR 1 and BAR 2 on FPGA board

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 883bfa797e88f031310fb31b0734e9ceed82f8ea

	BAR 1 (512K) mapped to common SRAM
	BAR 2 (64K) mapped to GOP unit

Change-Id: I29e140a86bf55229062458919033d5dc2a8c1f9f
Signed-off-by: Yelena <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6481
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h |    3 +-
 .../net/ethernet/marvell/pp3/net_dev/mv_netdev.c   |   36 +++++++++++++++----
 2 files changed, 30 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h b/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h
index fbf2c5f..861b7bf 100644
--- a/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h
+++ b/drivers/net/ethernet/marvell/pp3/common/mv_hw_if.h
@@ -122,6 +122,7 @@ static inline void mv_pp3_hw_reg_write(u32 access_addr, u32 data)
 
 
 u32 mv_hw_silicon_base_addr_get(void);
-
+u32 mv_cmn_sram_base_addr_get(void);
+u32 mv_gop_base_addr_get(void);
 
 #endif /* __mvHwIf_h__ */
diff --git a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
index 8931ec2..37d4802 100644
--- a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
+++ b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
@@ -53,12 +53,28 @@ static int mv_pp3_hw_shared_start(void);
 
 /*---------------------------------------------------------------------------*/
 static u32 mv_vbase_address;
+static u32 mv_cmn_sram_vbase_address;
+#ifdef MV_FPGA
+static u32 mv_gop_vbase_address;
+#endif
 
 u32 mv_hw_silicon_base_addr_get(void)
 {
 	return mv_vbase_address;
 }
 
+u32 mv_cmn_sram_base_addr_get(void)
+{
+	return mv_cmn_sram_vbase_address;
+}
+
+#ifdef MV_FPGA
+u32 mv_gop_base_addr_get(void)
+{
+	return mv_gop_vbase_address;
+}
+#endif
+
 static int pp3_sysfs_init(void)
 {
 	struct device *pd;
@@ -1010,13 +1026,6 @@ static int mv_pp3_pci_probe(struct pci_dev *pdev,
 		return -ENODEV;
 	}
 
-	/* Override memory size to 1GB */
-	/* Disable BARs1 & 2 for FPGA platform - As they are irrelevant. */
-	/*pci_resource_start(pdev, 1) = 0x0;
-	pci_resource_end(pdev, 1) = 0x0;
-	pci_resource_start(pdev, 2) = 0x0;
-	pci_resource_end(pdev, 2) = 0x0;*/
-
 	if (pci_request_regions(pdev, "mv_pp3_pci")) {
 		pr_err("Cannot obtain PCI resources, aborting\n");
 		return -ENODEV;
@@ -1030,8 +1039,19 @@ static int mv_pp3_pci_probe(struct pci_dev *pdev,
 	mv_vbase_address = (u32)pci_iomap(pdev, 0, 16*1024*1024);
 	if (!mv_vbase_address)
 		pr_err("Cannot map device registers, aborting\n");
+	pr_info("\nRegister VIRTUAL base is 0x%0x.\n", mv_vbase_address);
+
+	pci_resource_start(pdev, 1) += 0x6000000;
+	mv_cmn_sram_vbase_address = (u32)pci_iomap(pdev, 1, 512*1024);
+	if (!mv_cmn_sram_vbase_address)
+		pr_err("Cannot map device NSS SRAM, aborting\n");
+	pr_info("SRAM VIRTUAL base is 0x%0x.\n", mv_cmn_sram_vbase_address);
+
+	mv_gop_vbase_address = (u32)pci_iomap(pdev, 2, 64*1024);
+	if (!mv_gop_vbase_address)
+		pr_err("Cannot map device GOP, aborting\n");
+	pr_info("GOP VIRTUAL base is 0x%0x.\n", mv_gop_vbase_address);
 
-	pr_info("\nSYSTEM VIRTUAL base is 0x%0x.\n", mv_vbase_address);
 	return 0;
 }
 
-- 
1.7.5.4

