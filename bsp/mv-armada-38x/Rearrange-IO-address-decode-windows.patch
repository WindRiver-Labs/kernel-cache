From aa791511e508bf26e92916997f955c62f0640a8e Mon Sep 17 00:00:00 2001
From: Shadi Ammouri <shadi@marvell.com>
Date: Thu, 22 Nov 2012 09:16:17 +0200
Subject: [PATCH 0372/1825] Rearrange IO address decode windows

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit abcafa0572c1a3af448e4ae763d98cc1d828b254

- Make PEX MEM windows smaller.
- Remove unnecessary static mappings from sysmap.c
- Reserve the last 256MB of the first 4GB of address space to IO.

Change-Id: I971c5a78894f7f52fd952c0aa9d4e6a87653c81c
Signed-off-by: Shadi Ammouri <shadi@marvell.com>
Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/Kconfig                               |    1 +
 arch/arm/kernel/head.S                         |   10 -
 arch/arm/mach-armadaxp/core.c                  |   42 ++--
 arch/arm/mach-armadaxp/include/mach/armadaxp.h |  341 +++++++++++-------------
 arch/arm/mach-armadaxp/sysmap.c                |    7 +-
 5 files changed, 174 insertions(+), 227 deletions(-)
 mode change 100644 => 100755 arch/arm/mach-armadaxp/include/mach/armadaxp.h

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 858a3b5..53c0b00 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -648,6 +648,7 @@ config ARCH_ARMADA_XP
 	select CLKDEV_LOOKUP
 	select NEED_MACH_MEMORY_H
 	select DMABOUNCE
+	select ARCH_HAS_HOLES_MEMORYMODEL
 
 
 config ARCH_MV78XX0
diff --git a/arch/arm/kernel/head.S b/arch/arm/kernel/head.S
index b45cdde..97ecf78 100644
--- a/arch/arm/kernel/head.S
+++ b/arch/arm/kernel/head.S
@@ -386,16 +386,6 @@ ENDPROC(secondary_startup)
 ENTRY(__secondary_switched)
 	ldr	sp, [r7, #4]			@ get secondary_data.stack
 	mov	fp, #0
-/*
-	movw	r3, #33092
-	movt	r3, #53249
-	movt	r3, #64433
-	movw	r2, #0
-	movt	r2, #0
-	str	r2, [r3, #0]
-*/
-
-
 	b	secondary_start_kernel
 ENDPROC(__secondary_switched)
 
diff --git a/arch/arm/mach-armadaxp/core.c b/arch/arm/mach-armadaxp/core.c
index 8678b7b..939931c39 100644
--- a/arch/arm/mach-armadaxp/core.c
+++ b/arch/arm/mach-armadaxp/core.c
@@ -455,33 +455,33 @@ void __init armadaxp_setup_cpu_mbus(void)
 #if defined(CONFIG_AURORA_IO_CACHE_COHERENCY)
 	coherency_status = COHERENCY_STATUS_SHARED_NO_L2_ALLOC;
 #endif
+	static MV_UNIT_WIN_INFO addrWinMap[MAX_TARGETS + 1];
+
 
 	/*
 	 * Setup MBUS dram target info.
 	 */
 	armadaxp_mbus_dram_info.mbus_dram_target_id = TARGET_DDR;
-	addr = (void __iomem *)AXP_BRIDGE_VIRT_BASE;
-
-	for (i = 0, cs = 0; i < 4; i++) {
-		u32 base = readl(addr + DDR_BASE_CS_OFF(i));
-		u32 size = readl(addr + DDR_SIZE_CS_OFF(i));
-
-		/*
-		 * Chip select enabled?
-		 */
-		if (size & 1) {
-			struct mbus_dram_window *w;
-			if (base & 0xf)
-				/* BaseExtension is used (> 4GB).*/
-				continue;
-			w = &armadaxp_mbus_dram_info.cs[cs++];
-			w->cs_index = i;
-			w->mbus_attr = 0xf & ~(1 << i);
-			w->mbus_attr |= coherency_status << 4;
-			w->base = base & 0xff000000;
-			w->size = (size | 0x00ffffff) + 1;
-		}
+	mvCtrlAddrWinMapBuild(addrWinMap, MAX_TARGETS + 1);
+	for (i = 0, cs = 0; i < MAX_TARGETS; i++) {
+		struct mbus_dram_window *w;
+		if (!MV_TARGET_IS_DRAM(i))
+			continue;
+
+		if (addrWinMap[i].enable == MV_FALSE)
+			continue;
+
+		if (addrWinMap[i].addrWin.baseHigh)
+			/* > 4GB not mapped by IO's */
+			continue;
+
+		w = &armadaxp_mbus_dram_info.cs[cs++];
+		w->cs_index = (addrWinMap[i].targetId - SDRAM_CS0);
+		w->mbus_attr = addrWinMap[i].attrib;
+		w->base = addrWinMap[i].addrWin.baseLow;
+		w->size = addrWinMap[i].addrWin.size;
 	}
+
 	armadaxp_mbus_dram_info.num_cs = cs;
 }
 
diff --git a/arch/arm/mach-armadaxp/include/mach/armadaxp.h b/arch/arm/mach-armadaxp/include/mach/armadaxp.h
old mode 100644
new mode 100755
index d0b3682..fdca7fd
--- a/arch/arm/mach-armadaxp/include/mach/armadaxp.h
+++ b/arch/arm/mach-armadaxp/include/mach/armadaxp.h
@@ -22,10 +22,14 @@
 /* The base address of memory that should be reserved for IO windows.
 ** The reserved end address is 0xFFFFFFFF.
 */
-#define CONFIG_DRAM_IO_RESERVE_BASE	0xC0000000ll
+#define CONFIG_DRAM_IO_RESERVE_BASE	0xF0000000ll
 
 /*
  * Armada-XP address maps.
+ * Virtual Addresses should be between 0xFA800000 and 0xFEFFFFFF (72MB)
+ * Physical Addresses should be between 0xF0000000 and 0xFFFFFFFF (256MB)
+ * If a larger physical address space is needed, then the amount of DRAM
+ * available for Linux will be smaller.
  *
  * phys		virt		size
  * e0000000	@runtime	128M	PCIe-0 Memory space
@@ -68,235 +72,191 @@
 #define SDRAM_CS3_BASE  		0x30000000
 #define SDRAM_CS3_SIZE  		_256M
 
-/*
- * PEX Address Decoding
- * Virtual address not specified - remapped @runtime
+
+/* First, we place the "static" windows (that has less chance to have a size
+ * change), then all the "dynamic" windows (the ones that might need different
+ * sizes depending on the system configuration - SPI flash size, PEX cards...).
  */
-#define PEX0_MEM_PHYS_BASE		0xE0000000
-#define PEX0_MEM_SIZE			_32M
-#define PEX1_MEM_PHYS_BASE		0xE2000000
-#define PEX1_MEM_SIZE			_32M
-#define PEX2_MEM_PHYS_BASE		0xE4000000
-#define PEX2_MEM_SIZE			_32M
-#define PEX3_MEM_PHYS_BASE		0xE6000000
-#define PEX3_MEM_SIZE			_32M
-#define PEX4_MEM_PHYS_BASE		0xE8000000
-#define PEX4_MEM_SIZE			_32M
-#define PEX5_MEM_PHYS_BASE		0x0	/*TBD*/
-#define PEX5_MEM_SIZE			_32M
-#define PEX6_MEM_PHYS_BASE		0xEA000000		
-#define PEX6_MEM_SIZE			_32M
-#define PEX7_MEM_PHYS_BASE		0x0	/*TBD*/
-#define PEX7_MEM_SIZE			_32M
-#define PEX8_MEM_PHYS_BASE		0xEC000000		
-#define PEX8_MEM_SIZE			_32M
-#define PEX9_MEM_PHYS_BASE		0xEE000000
-#define PEX9_MEM_SIZE			_32M
-
-#ifdef CONFIG_ARM_LPAE
-
-
-#define SPI_CS0_PHYS_BASE		0xF0000000
-#define SPI_CS0_VIRT_BASE		0xFAA00000
-#define SPI_CS0_SIZE			_16M
 
+/*
+ * Internal registers.
+ * PHYS: 0xF1000000 to 0xF1100000
+ * VIRT: 0xFBC00000 to 0xFBC00000
+ * INTER_REGS_VIRT_BASE Must be 2MB aligned in order to support CONFIG_DEBUG_LL.
+ * Before paging_init, the UART port is mapped by a section entry (2MB in LPAE).
+ */
 #define INTER_REGS_PHYS_BASE		0xF1000000
+#define INTER_REGS_VIRT_BASE		0xFBC00000
+#define INTER_REGS_BASE			INTER_REGS_VIRT_BASE /* For compatibility */
 
 /*
- * Change INTER_REGS_BASE from 0xFBB00000 to 0xFBC00000 is mainly
- * for CONFIG_DEBUG_LL. Before paging_init, the UART port is mapped
- * by a section entry (2MB). In such case, the '1' in bit 20 is treated
- * as 'offset' and make it fail to access the UART port.
+ * Uart registers.
+ * PHYS: 0xF1200000 - 0xF1300000
+ * VIRT: 0xFBE00000
  */
-#define INTER_REGS_BASE			0xFBC00000
-
-#define PEX0_IO_PHYS_BASE		0xF1100000
-#define PEX0_IO_VIRT_BASE		0xFBE00000
-#define PEX0_IO_SIZE			_1M
-#define PEX1_IO_PHYS_BASE		0xF1200000
-#define PEX1_IO_VIRT_BASE		0xFBF00000
-#define PEX1_IO_SIZE			_1M
-#define PEX2_IO_PHYS_BASE		0xF1300000
-#define PEX2_IO_VIRT_BASE		0xFC000000
-#define PEX2_IO_SIZE			_1M
-#define PEX3_IO_PHYS_BASE		0xF1400000
-#define PEX3_IO_VIRT_BASE		0xFC100000
-#define PEX3_IO_SIZE			_1M
-#define PEX4_IO_PHYS_BASE		0xF1500000
-#define PEX4_IO_VIRT_BASE		0xFC200000
-#define PEX4_IO_SIZE			_1M
-#define PEX5_IO_PHYS_BASE		0xF1600000
-#define PEX5_IO_VIRT_BASE		0xFC300000
-#define PEX5_IO_SIZE			_1M
-#define PEX6_IO_PHYS_BASE		0xF1700000
-#define PEX6_IO_VIRT_BASE		0xFC400000
-#define PEX6_IO_SIZE			_1M
-#define PEX7_IO_PHYS_BASE		0xF1800000
-#define PEX7_IO_VIRT_BASE		0xFC500000
-#define PEX7_IO_SIZE			_1M
-#define PEX8_IO_PHYS_BASE		0xF1900000
-#define PEX8_IO_VIRT_BASE		0xFC600000
-#define PEX8_IO_SIZE			_1M
-#define PEX9_IO_PHYS_BASE		0xF1A00000
-#define PEX9_IO_VIRT_BASE		0xFC700000
-#define PEX9_IO_SIZE			_1M
-
-#define UART_REGS_BASE			0xF1B00000
-#define UART_VIRT_BASE			0xFC800000
+#define UART_REGS_BASE			0xF1200000
+#define UART_VIRT_BASE			0xFBE00000
 #define UART_SIZE			_1M
 
-#define DEVICE_BOOTCS_PHYS_BASE		0xF2000000
-#define DEVICE_BOOTCS_VIRT_BASE		0xFCA00000
-#define DEVICE_BOOTCS_SIZE		_32M
-#define DEVICE_CS0_PHYS_BASE		0xF4000000
-#define DEVICE_CS0_VIRT_BASE		0xFEA00000
-#define DEVICE_CS0_SIZE			_1M
-#define DEVICE_CS1_PHYS_BASE		0xF4100000
-#define DEVICE_CS1_VIRT_BASE		0xFEB00000
-#define DEVICE_CS1_SIZE			_1M
-#define DEVICE_CS2_PHYS_BASE		0xF4200000
-#define DEVICE_CS2_VIRT_BASE		0xFEC00000
-#define DEVICE_CS2_SIZE			_1M
-#define DEVICE_CS3_PHYS_BASE		0xF4300000
-#define DEVICE_CS3_VIRT_BASE		0xFED00000
-#define DEVICE_CS3_SIZE			_1M
-
-#define CRYPT_ENG_PHYS_BASE(chan)	((chan == 0) ? 0xC8010000 : 0xF4480000)
-#define CRYPT_ENG_VIRT_BASE(chan)	((chan == 0) ? 0xFEE00000 : 0xFEE10000)
-#define CRYPT_ENG_SIZE			_64K
-
-
-#ifdef CONFIG_ARMADA_XP_REV_Z1
-#define XOR0_PHYS_BASE                 (INTER_REGS_PHYS_BASE | 0x60800)
-#define XOR1_PHYS_BASE                 (INTER_REGS_PHYS_BASE | 0x60900)
-#else
-#define XOR0_PHYS_BASE			(INTER_REGS_PHYS_BASE | 0x60900)
-#define XOR1_PHYS_BASE			(INTER_REGS_PHYS_BASE | 0xF0900)
-#endif
-#define XOR0_HIGH_PHYS_BASE		(INTER_REGS_PHYS_BASE | 0x60B00)
-#define XOR1_HIGH_PHYS_BASE		(INTER_REGS_PHYS_BASE | 0xF0B00)
-
-#define PNC_BM_PHYS_BASE		0xF4500000
-#define PNC_BM_VIRT_BASE		0xFEF00000
+/*
+ * BM / PNC window
+ * PHYS: 0xF1300000 - 0xF1400000
+ * VIRT: @runtime
+ */
+#define PNC_BM_PHYS_BASE		0xF1300000
 #define PNC_BM_SIZE			_1M
 
-#define BOOTROM_PHYS_BASE		0xFFF00000
-#define BOOTROM_VIRT_BASE		0xFF000000
-#define BOOTROM_SIZE			_1M
+/*
+ * Crypto Engine(s)
+ * PHYS: 0xF1400000 - 0xF1500000
+ * VIRT: 0xFC000000
+ */
+#define CRYPT_ENG_PHYS_BASE(chan)	(0xF1400000 + (chan * 0x10000))
+#define CRYPT_ENG_VIRT_BASE(chan)	(0xFC000000 + (chan * 0x10000))
+#define CRYPT_ENG_SIZE			_64K
 
-#define PMU_SCRATCH_PHYS_BASE		0xF4700000
-#define PMU_SCRATCH_VIRT_BASE		0xFF100000
+/*
+ * PMU Scratch PAD
+ * PHYS: 0xF1600000 - 0xF1700000
+ * VIRT: 0xFC200000
+ */
+#define PMU_SCRATCH_PHYS_BASE		0xF1500000
+#define PMU_SCRATCH_VIRT_BASE		0xFC100000
 #define PMU_SCRATCH_SIZE		_1M
 
-#define LEGACY_NAND_PHYS_BASE		0xF4800000
-#define LEGACY_NAND_VIRT_BASE		0xFF200000
-#define LEGACY_NAND_SIZE		_1M
-
-#define	LCD_PHYS_BASE			(INTER_REGS_PHYS_BASE | 0xE0000)
-
-#define AXP_NFC_PHYS_BASE	(INTER_REGS_PHYS_BASE | 0xD0000)
-
-#else /* !CONFIG_ARM_LPAE */
-
-#define SPI_CS0_PHYS_BASE		0xF0000000
-#define SPI_CS0_VIRT_BASE		0xFAB00000
-#define SPI_CS0_SIZE			_16M
-
-#define INTER_REGS_PHYS_BASE		0xF1000000
-#define INTER_REGS_BASE			0xFBB00000
-
-#define PEX0_IO_PHYS_BASE		0xF1100000
-#define PEX0_IO_VIRT_BASE		0xFBC00000
+/*
+ * PHYS: 0xF1700000 to 0xF100000
+ * VIRT: 0xFC300000 - 0xFCC00000
+ * PEX IO Address Decoding
+ * Allocate 1MB for each IO windowi, total of 10MB.
+ */
+#define PEX0_IO_PHYS_BASE		0xF1600000
+#define PEX0_IO_VIRT_BASE		0xFC200000
 #define PEX0_IO_SIZE			_1M
-#define PEX1_IO_PHYS_BASE		0xF1200000
-#define PEX1_IO_VIRT_BASE		0xFBD00000
+#define PEX1_IO_PHYS_BASE		0xF1700000
+#define PEX1_IO_VIRT_BASE		0xFC300000
 #define PEX1_IO_SIZE			_1M
-#define PEX2_IO_PHYS_BASE		0xF1300000
-#define PEX2_IO_VIRT_BASE		0xFBE00000
+#define PEX2_IO_PHYS_BASE		0xF1800000
+#define PEX2_IO_VIRT_BASE		0xFC400000
 #define PEX2_IO_SIZE			_1M
-#define PEX3_IO_PHYS_BASE		0xF1400000
-#define PEX3_IO_VIRT_BASE		0xFBF00000
+#define PEX3_IO_PHYS_BASE		0xF1900000
+#define PEX3_IO_VIRT_BASE		0xFC500000
 #define PEX3_IO_SIZE			_1M
-#define PEX4_IO_PHYS_BASE		0xF1500000
-#define PEX4_IO_VIRT_BASE		0xFC000000
+#define PEX4_IO_PHYS_BASE		0xF1A00000
+#define PEX4_IO_VIRT_BASE		0xFC600000
 #define PEX4_IO_SIZE			_1M
-#define PEX5_IO_PHYS_BASE		0xF1600000
-#define PEX5_IO_VIRT_BASE		0xFC100000
+#define PEX5_IO_PHYS_BASE		0xF1B00000
+#define PEX5_IO_VIRT_BASE		0xFC700000
 #define PEX5_IO_SIZE			_1M
-#define PEX6_IO_PHYS_BASE		0xF1700000
-#define PEX6_IO_VIRT_BASE		0xFC200000
+#define PEX6_IO_PHYS_BASE		0xF1C00000
+#define PEX6_IO_VIRT_BASE		0xFC800000
 #define PEX6_IO_SIZE			_1M
-#define PEX7_IO_PHYS_BASE		0xF1800000
-#define PEX7_IO_VIRT_BASE		0xFC300000
+#define PEX7_IO_PHYS_BASE		0xF1D00000
+#define PEX7_IO_VIRT_BASE		0xFC900000
 #define PEX7_IO_SIZE			_1M
-#define PEX8_IO_PHYS_BASE		0xF1900000
-#define PEX8_IO_VIRT_BASE		0xFC400000
+#define PEX8_IO_PHYS_BASE		0xF1E00000
+#define PEX8_IO_VIRT_BASE		0xFCA00000
 #define PEX8_IO_SIZE			_1M
-#define PEX9_IO_PHYS_BASE		0xF1A00000
-#define PEX9_IO_VIRT_BASE		0xFC500000
+#define PEX9_IO_PHYS_BASE		0xF1F00000
+#define PEX9_IO_VIRT_BASE		0xFCB00000
 #define PEX9_IO_SIZE			_1M
 
-#define UART_REGS_BASE			0xF1B00000
-#define UART_VIRT_BASE			0xFC600000
-#define UART_SIZE			_1M
 
-#define DEVICE_BOOTCS_PHYS_BASE		0xF2000000
-#define DEVICE_BOOTCS_VIRT_BASE		0xFC700000
-#define DEVICE_BOOTCS_SIZE		_32M
-#define DEVICE_CS0_PHYS_BASE		0xF4000000
-#define DEVICE_CS0_VIRT_BASE		0xFE700000
+/*
+ * Below are the IOs that might require size change depending on the
+ * system peripherals.
+ */
+
+/*
+ * PHYS: 0xF8000000 to 0xFFEFFFFF
+ * VIRT: @runtime
+ * PEX Memory Address Decoding
+ * Virtual address not specified - remapped @runtime
+ * Reserve 127MB for PEX MEM space, so that in case an interface needs more
+ * than 2MB, it will be possible to relocate it within the reserved 127MB.
+ */
+#define PEX0_MEM_PHYS_BASE		0xF2000000
+#define PEX0_MEM_SIZE			_2M
+#define PEX1_MEM_PHYS_BASE		0xF2200000
+#define PEX1_MEM_SIZE			_2M
+#define PEX2_MEM_PHYS_BASE		0xF2400000
+#define PEX2_MEM_SIZE			_2M
+#define PEX3_MEM_PHYS_BASE		0xF2600000
+#define PEX3_MEM_SIZE			_2M
+#define PEX4_MEM_PHYS_BASE		0xF2800000
+#define PEX4_MEM_SIZE			_2M
+#define PEX5_MEM_PHYS_BASE		0xF2A00000
+#define PEX5_MEM_SIZE			_2M
+#define PEX6_MEM_PHYS_BASE		0xF2C00000
+#define PEX6_MEM_SIZE			_2M
+#define PEX7_MEM_PHYS_BASE		0xF2E00000
+#define PEX7_MEM_SIZE			_2M
+#define PEX8_MEM_PHYS_BASE		0xF3000000
+#define PEX8_MEM_SIZE			_2M
+#define PEX9_MEM_PHYS_BASE		0xF3200000
+#define PEX9_MEM_SIZE			_2M
+
+/*
+ * Device Bus address decode windows.
+ * PHYS: 0xF3300000 - 0xF3400000
+ * VIRT: @runtime
+ */
+#define DEVICE_CS0_PHYS_BASE		0xF3300000
 #define DEVICE_CS0_SIZE			_1M
-#define DEVICE_CS1_PHYS_BASE		0xF4100000
-#define DEVICE_CS1_VIRT_BASE		0xFE800000
+#define DEVICE_CS1_PHYS_BASE		0xF3400000
 #define DEVICE_CS1_SIZE			_1M
-#define DEVICE_CS2_PHYS_BASE		0xF4200000
-#define DEVICE_CS2_VIRT_BASE		0xFE900000
+#define DEVICE_CS2_PHYS_BASE		0xF3500000
 #define DEVICE_CS2_SIZE			_1M
-#define DEVICE_CS3_PHYS_BASE		0xF4300000
-#define DEVICE_CS3_VIRT_BASE		0xFEA00000
+#define DEVICE_CS3_PHYS_BASE		0xF3600000
 #define DEVICE_CS3_SIZE			_1M
 
-#define CRYPT_ENG_PHYS_BASE(chan)	((chan == 0) ? 0xC8010000 : 0xF4480000)
-#define CRYPT_ENG_VIRT_BASE(chan)	((chan == 0) ? 0xFEB00000 : 0xFEB10000)
-#define CRYPT_ENG_SIZE			_64K
+/*
+ * Device Boot-CS Window
+ * PHYS: 0xF4000000 - 0xF6000000
+ * VIRT: @runtime
+ */
+#define DEVICE_BOOTCS_PHYS_BASE		0xF4000000
+#define DEVICE_BOOTCS_SIZE		_32M
 
 
-#ifdef CONFIG_ARMADA_XP_REV_Z1
-#define XOR0_PHYS_BASE                 (INTER_REGS_PHYS_BASE | 0x60800)
-#define XOR1_PHYS_BASE                 (INTER_REGS_PHYS_BASE | 0x60900)
-#else
-#define XOR0_PHYS_BASE			(INTER_REGS_PHYS_BASE | 0x60900)
-#define XOR1_PHYS_BASE			(INTER_REGS_PHYS_BASE | 0xF0900)
-#endif
-#define XOR0_HIGH_PHYS_BASE		(INTER_REGS_PHYS_BASE | 0x60B00)
-#define XOR1_HIGH_PHYS_BASE		(INTER_REGS_PHYS_BASE | 0xF0B00)
+/*
+ * SPI Flash window.
+ * PHYS: 0xF6000000 - 0xF7000000
+ * VIRT: @runtime
+ * This is a 16MB window, if a larger flash exists, then the
+ * window needs to be enlarged.
+ */
+#define SPI_CS0_PHYS_BASE		0xF6000000
+#define SPI_CS0_SIZE			_16M
 
-#define PNC_BM_PHYS_BASE		0xF4500000
-#define PNC_BM_VIRT_BASE		0xFEC00000
-#define PNC_BM_SIZE			_1M
+/*
+ * Free area from 0xF7000000 to 0xFFF00000 (143MB).
+ * This can be used to map a larger window for PCI / SPI / Device-CS....
+ */
 
+
+/*
+ * PHYS: 0xFFF00000 - 0xFFFFFFFF
+ * VIRT: 0xFF000000 - 0xFF0FFFFF
+ * Bootrom window
+ */
 #define BOOTROM_PHYS_BASE		0xFFF00000
-#define BOOTROM_VIRT_BASE		0xFED00000
+#define BOOTROM_VIRT_BASE		0xFF000000
 #define BOOTROM_SIZE			_1M
 
 
-#define PMU_SCRATCH_PHYS_BASE		0xF4700000
-#define PMU_SCRATCH_VIRT_BASE		0xFEE00000
-#define PMU_SCRATCH_SIZE		_1M
-
-#define LEGACY_NAND_PHYS_BASE		0xF4800000
-#define LEGACY_NAND_VIRT_BASE		0xFEF00000
-#define LEGACY_NAND_SIZE		_1M
+/*
+ * Linux native definitiotns
+ */
+#define XOR0_PHYS_BASE			(INTER_REGS_PHYS_BASE | 0x60900)
+#define XOR1_PHYS_BASE			(INTER_REGS_PHYS_BASE | 0xF0900)
+#define XOR0_HIGH_PHYS_BASE		(INTER_REGS_PHYS_BASE | 0x60B00)
+#define XOR1_HIGH_PHYS_BASE		(INTER_REGS_PHYS_BASE | 0xF0B00)
 
 #define	LCD_PHYS_BASE			(INTER_REGS_PHYS_BASE | 0xE0000)
 
-#define AXP_NFC_PHYS_BASE	(INTER_REGS_PHYS_BASE | 0xD0000)
-
-#endif /* CONFIG_ARM_LPAE */
+#define AXP_NFC_PHYS_BASE		(INTER_REGS_PHYS_BASE | 0xD0000)
 
-/*
- * Linux native definitiotns
- */
 #define SDRAM_OPERATION_REG		(INTER_REGS_BASE | 0x1418)
 #define SDRAM_CONFIG_REG		(INTER_REGS_BASE | 0x1400)
 #define SDRAM_DLB_EVICT_REG		(INTER_REGS_BASE | 0x170C)
@@ -315,8 +275,8 @@
 #define AXP_CPU_INTACK			0xB4
 #define AXP_IRQ_SEL_CAUSE_OFF		0xA0
 #define AXP_IN_DOORBELL_CAUSE		0x78
-#define AXP_IN_DRBEL_CAUSE			(AXP_PER_CPU_BASE | 0x78)
-#define AXP_IN_DRBEL_MSK			(AXP_PER_CPU_BASE | 0x7c)
+#define AXP_IN_DRBEL_CAUSE		(AXP_PER_CPU_BASE | 0x78)
+#define AXP_IN_DRBEL_MSK		(AXP_PER_CPU_BASE | 0x7c)
 
 #ifdef CONFIG_MACH_ARMADA_XP_FPGA
 #define AXP_CPU_RESUME_ADDR_REG(cpu)	(AXP_BRIDGE_VIRT_BASE | 0x984)
@@ -333,3 +293,4 @@
 #define AXP_REVISION_ID_PHYS_REG	(INTER_REGS_PHYS_BASE | 0x40008)
 #define AXP_REVISION_ID_VIRT_REG	(INTER_REGS_BASE | 0x40008)
 #endif
+
diff --git a/arch/arm/mach-armadaxp/sysmap.c b/arch/arm/mach-armadaxp/sysmap.c
index 2d4209c..fc868c2 100644
--- a/arch/arm/mach-armadaxp/sysmap.c
+++ b/arch/arm/mach-armadaxp/sysmap.c
@@ -46,16 +46,11 @@ struct map_desc  MEM_TABLE[] =	{
 #ifdef MV_INCLUDE_LEGACY_NAND
 	{ LEGACY_NAND_VIRT_BASE,	__phys_to_pfn(LEGACY_NAND_PHYS_BASE),	LEGACY_NAND_SIZE, 	MT_DEVICE},
 #endif
-	{ SPI_CS0_VIRT_BASE,		__phys_to_pfn(SPI_CS0_PHYS_BASE),	SPI_CS0_SIZE,		MT_DEVICE},
-
-	{ BOOTROM_VIRT_BASE,		__phys_to_pfn(BOOTROM_PHYS_BASE),	BOOTROM_SIZE,		MT_DEVICE},
-
 	{ CRYPT_ENG_VIRT_BASE(0),	__phys_to_pfn(CRYPT_ENG_PHYS_BASE(0)),	CRYPT_ENG_SIZE,		MT_DEVICE},
+#ifdef CONFIG_MV_CESA
 #if (CONFIG_MV_CESA_CHANNELS > 1)
 	{ CRYPT_ENG_VIRT_BASE(1),	__phys_to_pfn(CRYPT_ENG_PHYS_BASE(1)),	CRYPT_ENG_SIZE,		MT_DEVICE},
 #endif
-#ifdef CONFIG_MV_ETH_BM
-	{ PNC_BM_VIRT_BASE,		__phys_to_pfn(PNC_BM_PHYS_BASE),	PNC_BM_SIZE,		MT_DEVICE}
 #endif
 };
 
-- 
1.7.5.4

