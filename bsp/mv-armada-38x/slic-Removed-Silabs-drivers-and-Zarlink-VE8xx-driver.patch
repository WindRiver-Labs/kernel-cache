From c42dddc062ea2277ae7ae587eeb440584614f13f Mon Sep 17 00:00:00 2001
From: Eran Ben-Avi <benavi@marvell.com>
Date: Thu, 11 Jul 2013 17:55:59 +0300
Subject: [PATCH 0798/1825] slic: Removed Silabs drivers and Zarlink VE8xx
 drivers from LSP.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 5844ebe541390260bf1c5d050b1df087d3135810

	The removed drivers are now available as external modules.

Change-Id: Ia75fedb22e82732e5586ab2d38b8199d78079a02
Signed-off-by: Piotr Ziecik <kosmo@semihalf.com>
Signed-off-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-feroceon-kw2/config/mvSysTdmConfig.h |    8 +-
 .../plat-feroceon/mv_drivers_lsp/mv_phone/Kconfig  |   18 +-
 .../plat-feroceon/mv_drivers_lsp/mv_phone/Makefile |  118 +---
 .../mv_drivers_lsp/mv_phone/slic/silabs_dev.c      |  943 --------------------
 .../mv_drivers_lsp/mv_phone/slic/silabs_dev.h      |  325 -------
 .../mv_drivers_lsp/mv_phone/slic/vpapi_dev.c       |  109 +---
 .../mv_drivers_lsp/mv_phone/slic/vpapi_dev.h       |    8 +-
 tools/voice/silabs/Makefile                        |   38 +-
 tools/voice/zarlink/kernel/Makefile                |   10 -
 9 files changed, 8 insertions(+), 1569 deletions(-)
 delete mode 100644 arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/silabs_dev.c
 delete mode 100644 arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/silabs_dev.h

diff --git a/arch/arm/mach-feroceon-kw2/config/mvSysTdmConfig.h b/arch/arm/mach-feroceon-kw2/config/mvSysTdmConfig.h
index 6646fee..56ae884 100644
--- a/arch/arm/mach-feroceon-kw2/config/mvSysTdmConfig.h
+++ b/arch/arm/mach-feroceon-kw2/config/mvSysTdmConfig.h
@@ -109,13 +109,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #elif defined(CONFIG_ZARLINK_SLIC_SUPPORT)
 	#define ZARLINK_SLIC_SUPPORT
 	#define SLIC_TIMER_EVENT_SUPPORT
-	#if defined(CONFIG_ZARLINK_SLIC_VE880)
-		#define ZARLINK_SLIC_VE880
-	#elif defined(CONFIG_ZARLINK_SLIC_VE886)
-		#define ZARLINK_SLIC_VE886
-	#elif defined(CONFIG_ZARLINK_SLIC_VE890)
-		#define ZARLINK_SLIC_VE890
-	#elif defined(CONFIG_ZARLINK_SLIC_VE792)
+	#if defined(CONFIG_ZARLINK_SLIC_VE792)
 		#define ZARLINK_SLIC_VE792
 	#endif
 #else /* CONFIG_LANTIQ_SLIC_SUPPORT */
diff --git a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/Kconfig b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/Kconfig
index 89789a1..db6f9c2 100644
--- a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/Kconfig
+++ b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/Kconfig
@@ -54,12 +54,7 @@ endchoice
 choice
 	prompt "SLIC Device"
 	depends on MV_PHONE && SILABS_SLIC_SUPPORT
-
-config SILAB_SLIC_SI3226x
-	bool "Support Silicon Labs 3226x device"
-
-config SILAB_SLIC_SI3217x
-	bool "Support Silicon Labs 3217x device"
+	default SILAB_SLIC_EXTERNAL_DRIVER
 
 config SILAB_SLIC_EXTERNAL_DRIVER
 	bool "Support Silicon Labs SLIC external driver modules"
@@ -69,16 +64,7 @@ endchoice
 choice
 	prompt "SLIC Device"
 	depends on MV_PHONE && ZARLINK_SLIC_SUPPORT
-	default ZARLINK_SLIC_VE880
-
-config ZARLINK_SLIC_VE880
-	bool "Support Zarlink VE880 SLIC family"
-
-config ZARLINK_SLIC_VE886
-	bool "Support Zarlink VE886 SLIC family"
-
-config ZARLINK_SLIC_VE890
-	bool "Support Zarlink VE890 SLIC family"
+	default ZARLINK_SLIC_EXTERNAL_DRIVER
 
 config ZARLINK_SLIC_VE792
 	bool "Support Zarlink VE792 SLIC family"
diff --git a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/Makefile b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/Makefile
index 68796d5..f8d801c7 100644
--- a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/Makefile
+++ b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/Makefile
@@ -35,128 +35,14 @@ endif
 
 # Silabs support
 ifeq ($(CONFIG_SILABS_SLIC_SUPPORT),y)
-
-	SILABS_BASE_PATH = $(VB_SRC_PATH)/slic/silabs
-	SILABS_SRC_PATH = $(SILABS_BASE_PATH)/src
-	SILABS_CUSTOM_PATH = $(SILABS_BASE_PATH)/custom
-	SILABS_ARCH_MARVELL_PATH = $(VB_SRC_PATH)/slic/silabs/arch_marvell
-	EXTRA_CFLAGS += -I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/silabs/inc \
-			-I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/silabs/custom \
-			-I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/silabs/arch_marvell
-
-
-	SILABS_OBJS = $(SILABS_SRC_PATH)/proslic.o \
-				$(SILABS_SRC_PATH)/si_voice.o $(SILABS_SRC_PATH)/si_voice_version.o
-
-	SILABS_CUSTOM_OBJS = $(SILABS_ARCH_MARVELL_PATH)/spi.o $(SILABS_ARCH_MARVELL_PATH)/timer.o
-
-ifeq ($(CONFIG_SILAB_SLIC_SI3226x),y)
-
-	SILABS_OBJS += $(SILABS_SRC_PATH)/si3226x_intf.o
-
-	SILABS_CUSTOM_OBJS += $(SILABS_CUSTOM_PATH)/si3226x_FLBK_constants.o  \
-		$(SILABS_CUSTOM_PATH)/si3226x_patch_B_FB_2010SEP22.o $(SILABS_CUSTOM_PATH)/si3226x_patch_C_FB_2011MAY19.o
-
-	SLIC_LIB_NAME=silabs_3226x.lib
-endif
-
-ifeq ($(CONFIG_SILAB_SLIC_SI3217x),y)
-
-	SILABS_OBJS += $(SILABS_SRC_PATH)/si3217x_intf.o
-
-	SILABS_CUSTOM_OBJS += $(SILABS_CUSTOM_PATH)/si3217x_FLBK_constants.o  \
-		$(SILABS_CUSTOM_PATH)/si3217x_patch_B_FB_2010DEC16.o
-
-	SLIC_LIB_NAME=silabs_3217x.lib
-endif
-
 ifeq ($(CONFIG_SILAB_SLIC_EXTERNAL_DRIVER),y)
-SILABS_OBJS =
-SILABS_CUSTOM_OBJS =
 PHONE_OBJS += $(LSP_SLIC_PATH)/silabs_if.o
-else
-PHONE_OBJS += $(LSP_SLIC_PATH)/silabs_dev.o
 endif
-
 endif
 
 # Zarlink support
 ifeq ($(CONFIG_ZARLINK_SLIC_SUPPORT),y)
 
-ifeq ($(CONFIG_ZARLINK_SLIC_VE880),y)
-	ZARLINK_BASE_PATH = $(VB_SRC_PATH)/slic/zarlink/api_lib
-	ZARLINK_COMMON_SRC_PATH = $(ZARLINK_BASE_PATH)/common
-	ZARLINK_ARCH_MARVELL_PATH = $(VB_SRC_PATH)/slic/zarlink/arch_marvell
-	ZARLINK_VP880API_SRC_PATH = $(ZARLINK_BASE_PATH)/vp880_api
-
-	EXTRA_CFLAGS += -I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/zarlink/api_lib/includes \
-			-I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/zarlink/arch_marvell \
-			-I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/zarlink/api_lib/vp880_api
-
-	ZARLINK_OBJS =  $(ZARLINK_COMMON_SRC_PATH)/vp_api_common.o $(ZARLINK_COMMON_SRC_PATH)/vp_api_config.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_api_control.o $(ZARLINK_COMMON_SRC_PATH)/vp_api_cslac_seq.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_api_init.o $(ZARLINK_COMMON_SRC_PATH)/vp_api_query.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_api_test.o $(ZARLINK_COMMON_SRC_PATH)/vp_debug.o \
-			$(ZARLINK_VP880API_SRC_PATH)/vp880_abs_calibration.o $(ZARLINK_VP880API_SRC_PATH)/vp880_calibration_common.o \
-			$(ZARLINK_VP880API_SRC_PATH)/vp880_control_common.o $(ZARLINK_VP880API_SRC_PATH)/vp880_fxo_control.o \
-			$(ZARLINK_VP880API_SRC_PATH)/vp880_fxs_control.o $(ZARLINK_VP880API_SRC_PATH)/vp880_init.o \
-			$(ZARLINK_VP880API_SRC_PATH)/vp880_linestate_control.o $(ZARLINK_VP880API_SRC_PATH)/vp880_lp_control.o \
-			$(ZARLINK_VP880API_SRC_PATH)/vp880_query.o $(ZARLINK_VP880API_SRC_PATH)/vp880_seq.o \
-			$(ZARLINK_VP880API_SRC_PATH)/vp880_tracker_calibration.o \
-			$(ZARLINK_ARCH_MARVELL_PATH)/sys_service.o $(ZARLINK_ARCH_MARVELL_PATH)/vp_hal.o
-
-	SLIC_LIB_NAME=zarlink_880.lib
-endif
-
-ifeq ($(CONFIG_ZARLINK_SLIC_VE886),y)
-	ZARLINK_BASE_PATH = $(VB_SRC_PATH)/slic/zarlink/api_lib
-	ZARLINK_COMMON_SRC_PATH = $(ZARLINK_BASE_PATH)/common
-	ZARLINK_ARCH_MARVELL_PATH = $(VB_SRC_PATH)/slic/zarlink/arch_marvell
-	ZARLINK_VP886API_SRC_PATH = $(ZARLINK_BASE_PATH)/vp886_api
-
-	EXTRA_CFLAGS += -I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/zarlink/api_lib/includes \
-			-I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/zarlink/arch_marvell \
-			-I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/zarlink/api_lib/vp886_api
-
-	ZARLINK_OBJS =  $(ZARLINK_COMMON_SRC_PATH)/vp_api_common.o $(ZARLINK_COMMON_SRC_PATH)/vp_api_config.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_api_control.o $(ZARLINK_COMMON_SRC_PATH)/vp_api_cslac_seq.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_api_init.o $(ZARLINK_COMMON_SRC_PATH)/vp_api_query.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_api_test.o $(ZARLINK_COMMON_SRC_PATH)/vp_debug.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_pulse_decode.o $(ZARLINK_COMMON_SRC_PATH)/vp_timer_queue.o \
-			$(ZARLINK_VP886API_SRC_PATH)/vp886_calibration_common.o $(ZARLINK_VP886API_SRC_PATH)/vp886_common.o \
-			$(ZARLINK_VP886API_SRC_PATH)/vp886_control.o  $(ZARLINK_VP886API_SRC_PATH)/vp886_events.o \
-			$(ZARLINK_VP886API_SRC_PATH)/vp886_query.o $(ZARLINK_VP886API_SRC_PATH)/vp886_ring_pow_adapt.o \
-			$(ZARLINK_VP886API_SRC_PATH)/vp886_seq.o $(ZARLINK_VP886API_SRC_PATH)/vp886_slac.o \
-			$(ZARLINK_VP886API_SRC_PATH)/vp886_timers.o $(ZARLINK_VP886API_SRC_PATH)/vp886_init.o \
-			$(ZARLINK_ARCH_MARVELL_PATH)/sys_service.o $(ZARLINK_ARCH_MARVELL_PATH)/vp_hal.o
-
-	SLIC_LIB_NAME=zarlink_886.lib
-endif
-
-ifeq ($(CONFIG_ZARLINK_SLIC_VE890),y)
-	ZARLINK_BASE_PATH = $(VB_SRC_PATH)/slic/zarlink/api_lib
-	ZARLINK_COMMON_SRC_PATH = $(ZARLINK_BASE_PATH)/common
-	ZARLINK_ARCH_MARVELL_PATH = $(VB_SRC_PATH)/slic/zarlink/arch_marvell
-	ZARLINK_VP890API_SRC_PATH = $(ZARLINK_BASE_PATH)/vp890_api
-
-	EXTRA_CFLAGS += -I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/zarlink/api_lib/includes \
-			-I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/zarlink/arch_marvell \
-			-I$(srctree)/$(MACHINE)/../plat-feroceon/mv_hal/voiceband/slic/zarlink/api_lib/vp890_api
-
-	ZARLINK_OBJS =  $(ZARLINK_COMMON_SRC_PATH)/vp_api_common.o $(ZARLINK_COMMON_SRC_PATH)/vp_api_config.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_api_control.o $(ZARLINK_COMMON_SRC_PATH)/vp_api_cslac_seq.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_api_init.o $(ZARLINK_COMMON_SRC_PATH)/vp_api_query.o \
-			$(ZARLINK_COMMON_SRC_PATH)/vp_api_test.o $(ZARLINK_COMMON_SRC_PATH)/vp_debug.o \
-			$(ZARLINK_VP890API_SRC_PATH)/vp890_apiCal.o $(ZARLINK_VP890API_SRC_PATH)/vp890_common.o \
-			$(ZARLINK_VP890API_SRC_PATH)/vp890_config.o $(ZARLINK_VP890API_SRC_PATH)/vp890_control.o \
-			$(ZARLINK_VP890API_SRC_PATH)/vp890_fxo_control.o $(ZARLINK_VP890API_SRC_PATH)/vp890_fxs_control.o \
-			$(ZARLINK_VP890API_SRC_PATH)/vp890_init.o $(ZARLINK_VP890API_SRC_PATH)/vp890_lp_control.o \
-			$(ZARLINK_VP890API_SRC_PATH)/vp890_query.o $(ZARLINK_VP890API_SRC_PATH)/vp890_seq.o \
-			$(ZARLINK_ARCH_MARVELL_PATH)/sys_service.o $(ZARLINK_ARCH_MARVELL_PATH)/vp_hal.o
-
-	SLIC_LIB_NAME=zarlink_890.lib
-endif
-
 ifeq ($(CONFIG_ZARLINK_SLIC_VE792),y)
 
 	ZARLINK_BASE_PATH = $(VB_SRC_PATH)/slic/zarlink/vp792_api_lib
@@ -189,14 +75,14 @@ endif
 
 endif
 
-mv_phone-objs := $(PHONE_OBJS) $(SILABS_CUSTOM_OBJS)
+mv_phone-objs := $(PHONE_OBJS)
 ifeq ($(CONFIG_MV_PHONE_USE_SLIC_LIBS),y)
 mv_phone-objs += lib.a
 $(obj)/lib.a:
 	cp $(obj)/$(LSP_SLIC_PATH)/libs/$(SLIC_LIB_NAME) $(obj)/lib.a
 
 else
-	lib-y := $(ZARLINK_OBJS) $(SILABS_OBJS)
+	lib-y := $(ZARLINK_OBJS)
 endif
 
 obj-y := mv_phone.o $(LSP_TDM_TEST_PATH)/
diff --git a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/silabs_dev.c b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/silabs_dev.c
deleted file mode 100644
index 369bc27..0000000
--- a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/silabs_dev.c
+++ /dev/null
@@ -1,943 +0,0 @@
-/*******************************************************************************
-Copyright (C) Marvell International Ltd. and its affiliates
-
-This software file (the "File") is owned and distributed by Marvell
-International Ltd. and/or its affiliates ("Marvell") under the following
-alternative licensing terms.  Once you have made an election to distribute the
-File under one of the following license alternatives, please (i) delete this
-introductory statement regarding license alternatives, (ii) delete the two
-license alternatives that you have not elected to use and (iii) preserve the
-Marvell copyright notice above.
-
-********************************************************************************
-Marvell Commercial License Option
-
-If you received this File from Marvell and you have entered into a commercial
-license agreement (a "Commercial License") with Marvell, the File is licensed
-to you under the terms of the applicable Commercial License.
-
-********************************************************************************
-Marvell GPL License Option
-
-If you received this File from Marvell, you may opt to use, redistribute and/or
-modify this File in accordance with the terms and conditions of the General
-Public License Version 2, June 1991 (the "GPL License"), a copy of which is
-available along with the File in the license.txt file or by writing to the Free
-Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
-on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
-
-THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
-WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
-DISCLAIMED.  The GPL License provides additional details about this warranty
-disclaimer.
-********************************************************************************
-Marvell BSD License Option
-
-If you received this File from Marvell, you may opt to use, redistribute and/or
-modify this File under the following licensing terms.
-Redistribution and use in source and binary forms, with or without modification,
-are permitted provided that the following conditions are met:
-
-    *   Redistributions of source code must retain the above copyright notice,
-	    this list of conditions and the following disclaimer.
-
-    *   Redistributions in binary form must reproduce the above copyright
-        notice, this list of conditions and the following disclaimer in the
-        documentation and/or other materials provided with the distribution.
-
-    *   Neither the name of Marvell nor the names of its contributors may be
-        used to endorse or promote products derived from this software without
-        specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
-ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
-ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-******************************************************************************/
-
-#include <linux/poll.h>
-#include <linux/miscdevice.h>
-#include <linux/slab.h>
-#include "silabs_dev.h"
-#include "spi.h"
-#include "timer.h"
-#include "boardEnv/mvBoardEnvLib.h"
-
-/* SI3226 */
-#if defined(CONFIG_SILAB_SLIC_SI3226x)
-#define NUMBER_OF_DEVICES 1
-#define NUMBER_OF_PROSLIC NUMBER_OF_DEVICES
-#define CHAN_PER_DEVICE 2
-#define NUMBER_OF_CHAN (NUMBER_OF_DEVICES*CHAN_PER_DEVICE)
-#define PROSLIC_DEVICE_TYPE SI3226X_TYPE
-#endif
-
-/* SI3217 */
-#if defined(CONFIG_SILAB_SLIC_SI3217x)
-#define NUMBER_OF_DEVICES 1
-#define NUMBER_OF_PROSLIC NUMBER_OF_DEVICES
-#define CHAN_PER_DEVICE 1
-#define NUMBER_OF_CHAN (NUMBER_OF_DEVICES*CHAN_PER_DEVICE)
-#define PROSLIC_DEVICE_TYPE SI3217X_TYPE
-#endif
-
-/* Defines */
-#define GET_DEV_STATUS(deviceNum)	silabs_dev_status[deviceNum]
-#define GET_LINE_STATUS(chanNum)	silabs_line_status[chanNum]
-#define REGISTER_DEVICE(deviceNum)	silabs_dev_status[deviceNum] = 1;
-#define REGISTER_LINE(chanNum)		silabs_line_status[chanNum] = 1;
-#define MAX_PROFILE_SIZE			128
-#define GET_DEVICE(chanNum)			(chanNum / CHAN_PER_DEVICE)
-#define GET_LINE(chanNum)			(chanNum % CHAN_PER_DEVICE)
-#define MAX_EVENT_QUEUE_SIZE		256
-#define SILABS_TICK_TIMER_PERIOD	1
-#define SILABS_MOD_NAME				"silabs"
-#define SLIC_TIMER_EVENT_SUPPORT
-
-static void silabs_tick_handler(unsigned long data);
-static ssize_t silabs_read(struct file *file, char __user *buf, size_t size, loff_t * ppos);
-static ssize_t silabs_write(struct file *file, const char __user *buf, size_t size, loff_t * ppos);
-static unsigned int silabs_poll(struct file *pFile, poll_table *pPollTable);
-static int silabs_ioctl(struct inode *pInode, struct file *pFile, unsigned int cmd, unsigned long arg);
-static int silabs_open(struct inode *pInode, struct file *pFile);
-static int silabs_release(struct inode *pInode, struct file *pFile);
-//static int __init silabs_module_init(void);
-//static void __exit silabs_module_exit(void);
-
-/* SI-API-II Dispatchers */
-static int silabs_control_interface(unsigned long arg);
-static int silabs_register_access(unsigned long arg);
-static int silabs_device_init(unsigned long arg);
-static int silabs_channel_all(unsigned long arg);
-static int silabs_channel_init(unsigned long arg);
-static int silabs_channel_setup(unsigned long arg);
-static int silabs_channel_operation(unsigned long arg);
-static int silabs_PCM_TS_setup(unsigned long arg);
-static int silabs_get_event(unsigned long arg);
-static int silabs_channel_set_line_feed(unsigned long arg);
-static int silabs_channel_read_hook_status(unsigned long arg);
-static int silabs_channel_set_loopback(unsigned long arg);
-
-#if defined(CONFIG_SILAB_SLIC_SI3226x)
-extern Si3226x_General_Cfg Si3226x_General_Configuration;
-#endif
-#if defined(CONFIG_SILAB_SLIC_SI3217x)
-extern Si3217x_General_Cfg Si3217x_General_Configuration;
-#endif
-
-/* Enumurators */
-typedef struct {
-	unsigned char valid;		/* valid event */
-
-	SiEventType si_event;
-} silabs_event;
-
-typedef struct _chanState {
-	proslicChanType_ptr		ProObj;
-} chanState;
-
-/* Structs */
-static struct file_operations silabs_fops = {
-    owner:      THIS_MODULE,
-    llseek:     NULL,
-    read:       silabs_read,
-    write:      silabs_write,
-    poll:       silabs_poll,
-    ioctl:      silabs_ioctl,
-    open:       silabs_open,
-    release:    silabs_release,
-    fasync:     NULL
-};
-
-/* Globals */
-static chanState ports[NUMBER_OF_CHAN];			/* User’s channel object, which has a member defined as proslicChanType_ptr ProObj */
-static controlInterfaceType *ProHWIntf; 		/* Define ProSLIC control interface object */
-static ProslicDeviceType *ProSLICDevices[NUMBER_OF_PROSLIC];	/* Define array of ProSLIC device objects */
-static proslicChanType_ptr arrayOfProslicChans[NUMBER_OF_CHAN];
-ctrl_S spiGciObj;
-
-static DEFINE_SPINLOCK(silabs_lock);
-static DECLARE_WAIT_QUEUE_HEAD(silabs_wait);
-static atomic_t event_count;
-static atomic_t silabs_init;
-static atomic_t silabs_in_ioctl;
-static silabs_event event_queue[MAX_EVENT_QUEUE_SIZE];
-static u8 silabs_dev_status[NUMBER_OF_DEVICES];
-static u8 silabs_line_status[NUMBER_OF_CHAN];
-static volatile u32 next_event = 0, curr_event = 0;
-static struct timer_list silabs_timer;
-static u16 total_devs = 0, total_lines = 0;
-
-static struct miscdevice silabs_misc_dev = {
-	.minor = SLICDEV_MINOR,
-	.name = SILABS_MOD_NAME,
-	.fops = &silabs_fops,
-};
-
-static int slic_port_id = 0;
-module_param(slic_port_id, int, 0);
-MODULE_PARM_DESC(slic_port_id, "TDM SPI Port ID");
-
-static ssize_t silabs_read(struct file *file, char __user *buf, size_t size, loff_t * ppos)
-{
-	return 0;
-}
-
-static ssize_t silabs_write(struct file *file, const char __user *buf, size_t size, loff_t * ppos)
-{
-	return 0;
-}
-
-static unsigned int silabs_poll(struct file *pFile, poll_table *pPollTable)
-{
-	int mask = 0;
-
-	poll_wait(pFile, &silabs_wait, pPollTable);
-
-	if(atomic_read(&event_count) > 0) {
-		mask |= POLLPRI;
-	}
-
-	return mask;
-}
-
-static int silabs_ioctl(struct inode *pInode, struct file *pFile, unsigned int cmd, unsigned long arg)
-{
-	int ret = 0;
-
-	/* Argument checking */
-	if (_IOC_TYPE(cmd) != SILABS_MOD_IOCTL_MAGIC) {
-		printk("%s: invalid SILABS MOD Magic Num %i %i\n", __func__, _IOC_TYPE(cmd), SILABS_MOD_IOCTL_MAGIC);
-		return -ENOTTY;
-	}
-
-	if ((_IOC_NR(cmd) > SILABS_MOD_IOCTL_MAX) || (_IOC_NR(cmd) < SILABS_MOD_IOCTL_MIN)) {
-		printk("%s: invalid SILABS MOD IOCTL request\n", __func__);
-		return -ENOTTY;
-	}
-
-	if (_IOC_DIR(cmd) & _IOC_READ) {
-		ret = !access_ok(VERIFY_WRITE, (void __user*)arg, _IOC_SIZE(cmd));
-	}
-	else if (_IOC_DIR(cmd) & _IOC_WRITE) {
-		ret = !access_ok(VERIFY_READ, (void __user*)arg, _IOC_SIZE(cmd));
-	}
-
-	if (ret) {
-		printk("%s: invalid SILABS MOD access type %i from cmd %i\n", __func__, _IOC_DIR(cmd), cmd);
-		return -EFAULT;
-	}
-
-#if defined(SLIC_TIMER_EVENT_SUPPORT)
-	/* Disable timer routine processing */
-	atomic_set(&silabs_in_ioctl, 1);
-#endif
-
-	switch (cmd) {
-
-		case SILABS_MOD_IOX_CTRL_IF:
-			printk("ioctl: SILABS_MOD_IOX_CTRL_IF\n");
-			ret = silabs_control_interface(arg);
-			break;
-
-		case SILABS_MOD_IOX_DEVICE_INIT:
-			printk("ioctl: SILABS_MOD_IOX_DEVICE_INIT\n");
-			ret = silabs_device_init(arg);
-			break;
-
-		case SILABS_MOD_IOX_CHAN_ALL:
-			printk("ioctl: SILABS_MOD_IOX_CHAN_ALL\n");
-			ret = silabs_channel_all(arg);
-			break;
-
-		case SILABS_MOD_IOX_CHAN_INIT:
-			printk("ioctl: SILABS_MOD_IOX_CHAN_INIT\n");
-			ret  = silabs_channel_init(arg);
-			break;
-
-		case SILABS_MOD_IOX_CHAN_SETUP:
-			printk("ioctl: SILABS_MOD_IOX_CHAN_SETUP\n");
-			ret = silabs_channel_setup(arg);
-			break;
-
-		case SILABS_MOD_IOX_CHAN_OP:
-			printk("ioctl: SILABS_MOD_IOX_CHAN_OP\n");
-			ret = silabs_channel_operation(arg);
-			break;
-
-		case SILABS_MOD_IOX_PCM_TS_SETUP:
-			printk("ioctl: SILABS_MOD_IOX_PCM_TS_SETUP\n");
-			ret = silabs_PCM_TS_setup(arg);
-			break;
-
-		case SILABS_MOD_IOX_GET_EVENT:
-//			printk("ioctl: SILABS_MOD_IOX_GET_EVENT\n");
-			ret = silabs_get_event(arg);
-			break;
-
-		case SILABS_MOD_IOX_REG_CTRL:
-			printk("ioctl: SILABS_MOD_IOX_REG_CTRL\n");
-			ret = silabs_register_access(arg);
-			break;
-
-		case SILABS_MOD_IOX_CHAN_LINE_FEED:
-			printk("ioctl: SILABS_MOD_IOX_CHAN_LINE_FEED\n");
-			ret = silabs_channel_set_line_feed(arg);
-			break;
-
-		case SILABS_MOD_IOX_CHAN_HOOK_STATUS:
-			printk("ioctl: SILABS_MOD_IOX_CHAN_HOOK_STATUS\n");
-			ret = silabs_channel_read_hook_status(arg);
-			break;
-
-		case SILABS_MOD_IOX_CHAN_LOOPBACK:
-			printk("ioctl: SILABS_MOD_IOX_CHAN_LOOPBACK\n");
-			ret = silabs_channel_set_loopback(arg);
-			break;
-
-		default:
-			printk("%s: error, ioctl command(0x%x) not supported !!!\n", __func__, cmd);
-			ret = -EFAULT;
-			break;
-	}
-
-#if defined(SLIC_TIMER_EVENT_SUPPORT)
-	/* Enable timer routine processing */
-	atomic_set(&silabs_in_ioctl, 0);
-#endif
-
-	return ret;
-}
-
-static int silabs_register_access(unsigned long arg)
-{
-	SilabsRegObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsRegObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	switch (data.func) {
-		case SI_REG_READ:
-			data.value = ctrl_ReadRegisterWrapper (&spiGciObj, data.chanNum, data.regAddr);
-			break;
-		case SI_REG_WRITE:
-			ctrl_WriteRegisterWrapper(&spiGciObj, data.chanNum, data.regAddr, data.value);
-			break;
-		case SI_RAM_READ:
-			data.ramValue = ctrl_ReadRAMWrapper (&spiGciObj, data.chanNum, data.ramAddr);
-			break;
-		case SI_RAM_WRITE:
-			ctrl_WriteRAMWrapper(&spiGciObj, data.chanNum, data.ramAddr, data.ramValue);
-			break;
-		default:
-			printk("%s: error, function (0x%x) not supported !!!\n", __func__, data.func);
-			return  -EFAULT;
-	}
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsRegObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_control_interface(unsigned long arg)
-{
-	SilabsModCtrlObjType data;
-
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModCtrlObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	switch (data.func) {
-		case SI_IF_CREATE:
-#if defined(CONFIG_SILAB_SLIC_SI3226x)
-			Si3226x_General_Configuration.irqen2 = 0x3;
-#endif
-#if defined(CONFIG_SILAB_SLIC_SI3217x)
-			Si3217x_General_Configuration.irqen2 = 0x3;
-#endif
-			data.status = ProSLIC_createControlInterface (&ProHWIntf);
-			break;
-		case SI_IF_DESTROY:
-			data.status = ProSLIC_destroyControlInterface (&ProHWIntf);
-			break;
-		case SI_IF_SET_FUNCS:
-			ProSLIC_setControlInterfaceCtrlObj (ProHWIntf, &spiGciObj);
-			ProSLIC_setControlInterfaceReset (ProHWIntf, ctrl_ResetWrapper);
-			ProSLIC_setControlInterfaceWriteRegister (ProHWIntf, ctrl_WriteRegisterWrapper);
-			ProSLIC_setControlInterfaceReadRegister (ProHWIntf, ctrl_ReadRegisterWrapper);
-			ProSLIC_setControlInterfaceWriteRAM (ProHWIntf, ctrl_WriteRAMWrapper);
-			ProSLIC_setControlInterfaceReadRAM (ProHWIntf, ctrl_ReadRAMWrapper);
-			ProSLIC_setControlInterfaceTimerObj (ProHWIntf, NULL);
-			ProSLIC_setControlInterfaceDelay (ProHWIntf, time_DelayWrapper);
-			ProSLIC_setControlInterfaceTimeElapsed (ProHWIntf, NULL);
-			ProSLIC_setControlInterfaceGetTime (ProHWIntf, NULL);
-			ProSLIC_setControlInterfaceSemaphore (ProHWIntf, NULL);
-
-			break;
-		default:
-			printk("%s: error, function (0x%x) not supported !!!\n", __func__, data.func);
-			return  -EFAULT;
-	}
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModCtrlObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_device_init(unsigned long arg)
-{
-	SilabsModDevObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModDevObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	switch (data.func) {
-		case SI_DEVICE_CREATE:
-			data.status = ProSLIC_createDevice (&(ProSLICDevices[data.devNum]));
-			total_devs++;
-			REGISTER_DEVICE(data.devNum);
-
-			break;
-		case SI_DEVICE_DESTROY:
-			data.status = ProSLIC_destroyDevice (&(ProSLICDevices[data.devNum]));
-#if defined(SLIC_TIMER_EVENT_SUPPORT)
-			if(total_lines == 0) {
-				atomic_set(&silabs_init, 0);
-				del_timer(&silabs_timer);
-			}
-#endif
-			break;
-		default:
-			printk("%s: error, function (0x%x) not supported !!!\n", __func__, data.func);
-			return  -EFAULT;
-	}
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModDevObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_channel_all(unsigned long arg)
-{
-	SilabsModChannelAllObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModChannelAllObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	switch (data.func) {
-		case SI_CHANNEL_ALL_INIT:
-			data.status = ProSLIC_Init(arrayOfProslicChans, NUMBER_OF_CHAN);
-			break;
-		case SI_CHANNEL_ALL_CAL:
-			data.status = ProSLIC_Cal(arrayOfProslicChans, NUMBER_OF_CHAN);
-			break;
-		case SI_CHANNEL_ALL_LBCAL:
-			data.status = ProSLIC_LBCal(arrayOfProslicChans, NUMBER_OF_CHAN);
-			break;
-		default:
-			printk("%s: error, function (0x%x) not supported !!!\n", __func__, data.func);
-			return  -EFAULT;
-	}
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModChannelAllObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-
-}
-
-static int silabs_channel_init(unsigned long arg)
-{
-	SilabsModChannelObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModChannelObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	switch (data.func) {
-		case SI_CHANNEL_CREATE:
-			data.status = ProSLIC_createChannel (&(ports[data.chanNum].ProObj));
-			REGISTER_LINE(data.chanNum);
-			break;
-		case SI_CHANNEL_DESTROY:
-			data.status = ProSLIC_destroyChannel (&(ports[data.chanNum].ProObj));
-			break;
-		case SI_CHANNEL_BC_INIT:
-			data.status = ProSLIC_InitBroadcast (&(ports[data.chanNum].ProObj));
-			break;
-		case SI_CHANNEL_SW_INIT:
-			data.status = ProSLIC_SWInitChan (ports[data.chanNum].ProObj, data.chanNum,
-						PROSLIC_DEVICE_TYPE, ProSLICDevices[GET_DEVICE(data.chanNum)], ProHWIntf);
-
-			arrayOfProslicChans[data.chanNum] = ports[data.chanNum].ProObj;
-			ProSLIC_setSWDebugMode(ports[data.chanNum].ProObj,TRUE);  /* optional */
-			break;
-		default:
-			printk("%s: error, function (0x%x) not supported !!!\n", __func__, data.func);
-			return  -EFAULT;
-	}
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModChannelObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_channel_setup(unsigned long arg)
-{
-	SilabsModChannelSetupObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModChannelSetupObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	switch (data.func) {
-		case SI_CHANNEL_SETUP_RING:
-			data.status = ProSLIC_RingSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_TONEGEN:
-			data.status = ProSLIC_ToneGenSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_FSK:
-			data.status = ProSLIC_FSKSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_DTMF_DECODE:
-			data.status = ProSLIC_DTMFDecodeSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_ZSYNTH:
-			data.status = ProSLIC_ZsynthSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_GCICI:
-			data.status = ProSLIC_GciCISetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_MODEM_DET:
-			data.status = ProSLIC_ModemDetSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_TX_AUDIO_GAIN:
-			data.status = ProSLIC_TXAudioGainSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_RX_AUDIO_GAIN:
-			data.status = ProSLIC_RXAudioGainSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_DC_FEED:
-			data.status = ProSLIC_DCFeedSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_PULSE_METER:
-			data.status = ProSLIC_PulseMeterSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		case SI_CHANNEL_SETUP_PCM:
-			data.status = ProSLIC_PCMSetup (ports[data.chanNum].ProObj, data.preset);
-			break;
-		default:
-			printk("%s: error, function (0x%x) not supported !!!\n", __func__, data.func);
-			return  -EFAULT;
-	}
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModChannelSetupObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_channel_operation(unsigned long arg)
-{
-	SilabsModChannelOpObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModChannelOpObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	switch (data.func) {
-		case SI_CHANNEL_OP_RESET:
-			data.status = ProSLIC_Reset (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_CLEAR_ERR:
-			data.status = ProSLIC_clearErrorFlag (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_GPIO_SETUP:
-			data.status = ProSLIC_GPIOSetup (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_VERIFY_CTRL_IF:
-			data.status = ProSLIC_VerifyControlInterface (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_SHUT_DOWN_CHAN:
-			data.status = ProSLIC_ShutdownChannel (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_RING_START:
-			data.status = ProSLIC_RingStart (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_RING_STOP:
-			data.status = ProSLIC_RingStop (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_ENA_CID:
-			data.status = ProSLIC_EnableCID (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_DIS_CID:
-			data.status = ProSLIC_DisableCID (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_PLL_FREE_RUN_START:
-			data.status = ProSLIC_PLLFreeRunStart (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_PLL_FREE_RUN_STOP:
-			data.status = ProSLIC_PLLFreeRunStop (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_PULSE_METER_START:
-			data.status = ProSLIC_PulseMeterStart (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_PULSE_METER_STOP:
-			data.status = ProSLIC_PulseMeterStop (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_PWR_UP_CONV:
-			data.status = ProSLIC_PowerUpConverter (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_PWR_DOWN_CONV:
-			data.status = ProSLIC_PowerDownConverter (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_ENA_INT:
-			data.status = ProSLIC_EnableInterrupts (ports[data.chanNum].ProObj);
-
-			if(!atomic_read(&silabs_init)) {
-#if defined(SLIC_TIMER_EVENT_SUPPORT)
-				memset(&silabs_timer, 0, sizeof(struct timer_list));
-				init_timer(&silabs_timer);
-				silabs_timer.function = silabs_tick_handler;
-				silabs_timer.data = -1;
-				silabs_timer.expires = jiffies + SILABS_TICK_TIMER_PERIOD;
-				add_timer(&silabs_timer);
-#endif
-				atomic_set(&silabs_init, 1);
-			}
-			break;
-		case SI_CHANNEL_OP_PCM_START:
-			data.status = ProSLIC_PCMStart (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_PCM_STOP:
-			data.status = ProSLIC_PCMStop (ports[data.chanNum].ProObj);
-			break;
-		case SI_CHANNEL_OP_TONE_GEN_START:
-			data.status = ProSLIC_ToneGenStart (ports[data.chanNum].ProObj, 0);
-			break;
-		case SI_CHANNEL_OP_TONE_GEN_STOP:
-			data.status = ProSLIC_ToneGenStop (ports[data.chanNum].ProObj);
-			break;
-		default:
-			printk("%s: error, function (0x%x) not supported !!!\n", __func__, data.func);
-			return  -EFAULT;
-	}
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModChannelOpObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_PCM_TS_setup(unsigned long arg)
-{
-	SilabsModPCMTSSetupObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModPCMTSSetupObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	data.status = ProSLIC_PCMTimeSlotSetup(ports[data.chanNum].ProObj, data.rxcount, data.txcount);
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModPCMTSSetupObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_channel_set_line_feed(unsigned long arg)
-{
-	SilabsModChannelLineFeedObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModChannelLineFeedObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	data.status = ProSLIC_SetLinefeedStatus(ports[data.chanNum].ProObj, data.newLineFeed);
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModChannelLineFeedObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-
-int silabs_get_event(unsigned long arg)
-{
-	SilabsModGetEventType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModGetEventType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	if(atomic_read(&event_count) == 0) {
-		data.newEvent = FALSE;
-	}
-	else {
-		/* Copy event info back to user */
-		if(copy_to_user(data.pEvent, &event_queue[curr_event].si_event, sizeof(SiEventType))) {
-			printk("%s: copy_to_user failed\n", __func__);
-			return  -EFAULT;
-		}
-
-		event_queue[curr_event].valid = 0;
-		data.newEvent = TRUE;
-		atomic_dec(&event_count);
-		curr_event++;
-		if(curr_event == MAX_EVENT_QUEUE_SIZE)
-			curr_event = 0;
-	}
-
-	/* Copy status and event info back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModGetEventType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_channel_read_hook_status(unsigned long arg)
-{
-	SilabsModChannelReadHookStatObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModChannelReadHookStatObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	data.status = ProSLIC_ReadHookStatus (ports[data.chanNum].ProObj, &data.hookStatus);
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModChannelReadHookStatObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_channel_set_loopback(unsigned long arg)
-{
-	SilabsModChannelSetLoopbackObjType data;
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(SilabsModChannelSetLoopbackObjType))) {
-		printk("%s: copy_from_user failed\n", __func__);
-		return -EFAULT;
-	}
-
-	data.status = ProSLIC_SetLoopbackMode (ports[data.chanNum].ProObj, data.newMode);
-
-	/* Copy status back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(SilabsModChannelSetLoopbackObjType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int silabs_open(struct inode *pInode, struct file *pFile)
-{
-	try_module_get(THIS_MODULE);
-	return 0;
-}
-
-static int silabs_release(struct inode *pInode, struct file *pFile)
-{
-	module_put(THIS_MODULE);
-	return 0;
-}
-
-#if defined(SLIC_TIMER_EVENT_SUPPORT)
-static void silabs_tick_handler(unsigned long data)
-{
-	u8 chanNum;
-	unsigned long flags;
-
-	silabs_event *pEvent;
-
-	proslicIntType siEvent;
-	ProslicInt irqs[MAX_PROSLIC_IRQS];
-
-	/* Check if events are already active and not processing IOCTL */
-	if ((atomic_read(&silabs_init) == 0) || (atomic_read(&silabs_in_ioctl) == 1))
-		goto timer_exit;
-
-	spin_lock_irqsave(&silabs_lock, flags);
-
-	siEvent.irqs = irqs;
-
-	for (chanNum = 0; chanNum < NUMBER_OF_CHAN; chanNum++) {
-
-		if (GET_LINE_STATUS(chanNum) == 0)
-			continue;
-
-		siEvent.number = 0;
-
-		/* Check for free resources */
-		if (atomic_read(&event_count) >= MAX_EVENT_QUEUE_SIZE)
-			goto timer_exit;
-
-		if (ProSLIC_GetInterrupts(ports[chanNum].ProObj, &siEvent)) {
-
-			printk("We got new %d events! \n", siEvent.number);
-
-			pEvent = &event_queue[next_event];
-			pEvent->si_event.chanNum = chanNum;
-			pEvent->si_event.devNum = GET_DEVICE(chanNum);
-			pEvent->si_event.eventsNum = siEvent.number;
-			memcpy(pEvent->si_event.irqs, siEvent.irqs, sizeof(ProslicInt)*MAX_PROSLIC_IRQS);
-
-			next_event++;
-
-			if (next_event == MAX_EVENT_QUEUE_SIZE)
-				next_event = 0;
-
-			atomic_inc(&event_count);
-
-			if (pEvent->valid == 0) {
-				pEvent->valid = 1;
-			} else {
-				printk("%s: error, event(%u) was overrided\n", __func__, next_event);
-				break;
-			}
-		}
-	}
-
-	spin_unlock_irqrestore(&silabs_lock, flags);
-
-timer_exit:
-
-	/* Checks if user application should be signaled */
-	if (atomic_read(&event_count) > 0) {
-		wake_up_interruptible(&silabs_wait);
-	}
-
-	/* Schedule next timer tick */
-	silabs_timer.expires = jiffies + SILABS_TICK_TIMER_PERIOD;
-	add_timer(&silabs_timer);
-}
-#endif
-
-int __init silabs_module_init(void)
-{
-	int status = 0;
-
-	printk("Loading Marvell %s device\n", SILABS_MOD_NAME);
-
-	status = misc_register(&silabs_misc_dev);
-
-	/* Register SILABS device module */
-	if (status < 0) {
-		printk("Error, failed to load %s module(%d)\n", SILABS_MOD_NAME, status);
-		return status;
-	}
-
-	atomic_set(&silabs_init, 0);
-	atomic_set(&silabs_in_ioctl, 0);
-	total_devs = 0;
-	total_lines = 0;
-	next_event = 0;
-	curr_event = 0;
-	memset(silabs_dev_status, 0, NUMBER_OF_DEVICES);
-	memset(silabs_line_status, 0, NUMBER_OF_CHAN);
-
-	/* Reset event counter */
-	atomic_set(&event_count, 0);
-
-	/* Clear event queue */
-	memset(event_queue, 0, (MAX_EVENT_QUEUE_SIZE * sizeof(silabs_event)));
-
-	spiGciObj.portID = slic_port_id;
-	SPI_Init (&spiGciObj);
-
-	return 0;
-}
-
-void __exit silabs_module_exit(void)
-{
-	printk("Unloading %s device module\n", SILABS_MOD_NAME);
-
-#if defined(SLIC_TIMER_EVENT_SUPPORT)
-	if(total_lines == 0)
-		del_timer(&silabs_timer);
-#endif
-
-	/* Unregister SILABS misc device */
-	misc_deregister(&silabs_misc_dev);
-
-	return;
-}
-
-/* Module stuff */
-module_init(silabs_module_init);
-module_exit(silabs_module_exit);
-MODULE_DESCRIPTION("Silicon Labs Proslic Device");
-MODULE_AUTHOR("Nadav Haklai <nadavh@marvell.com>");
-MODULE_LICENSE("GPL");
diff --git a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/silabs_dev.h b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/silabs_dev.h
deleted file mode 100644
index b5639e9..0000000
--- a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/silabs_dev.h
+++ /dev/null
@@ -1,325 +0,0 @@
-/*******************************************************************************
-Copyright (C) Marvell International Ltd. and its affiliates
-
-This software file (the "File") is owned and distributed by Marvell
-International Ltd. and/or its affiliates ("Marvell") under the following
-alternative licensing terms.  Once you have made an election to distribute the
-File under one of the following license alternatives, please (i) delete this
-introductory statement regarding license alternatives, (ii) delete the two
-license alternatives that you have not elected to use and (iii) preserve the
-Marvell copyright notice above.
-
-********************************************************************************
-Marvell Commercial License Option
-
-If you received this File from Marvell and you have entered into a commercial
-license agreement (a "Commercial License") with Marvell, the File is licensed
-to you under the terms of the applicable Commercial License.
-
-********************************************************************************
-Marvell GPL License Option
-
-If you received this File from Marvell, you may opt to use, redistribute and/or
-modify this File in accordance with the terms and conditions of the General
-Public License Version 2, June 1991 (the "GPL License"), a copy of which is
-available along with the File in the license.txt file or by writing to the Free
-Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
-on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
-
-THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
-WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
-DISCLAIMED.  The GPL License provides additional details about this warranty
-disclaimer.
-********************************************************************************
-Marvell BSD License Option
-
-If you received this File from Marvell, you may opt to use, redistribute and/or
-modify this File under the following licensing terms.
-Redistribution and use in source and binary forms, with or without modification,
-are permitted provided that the following conditions are met:
-
-    *   Redistributions of source code must retain the above copyright notice,
-	    this list of conditions and the following disclaimer.
-
-    *   Redistributions in binary form must reproduce the above copyright
-        notice, this list of conditions and the following disclaimer in the
-        documentation and/or other materials provided with the distribution.
-
-    *   Neither the name of Marvell nor the names of its contributors may be
-        used to endorse or promote products derived from this software without
-        specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
-ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
-ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-*******************************************************************************/
-
-#ifndef _SILABS_DEV_H_
-#define _SILABS_DEV_H_
-
-#include "proslic.h"
-#include "si3226x.h"
-#include "si3217x.h"
-
-#define SILABS_MOD_IOCTL_MAGIC           'z'
-
-#define SILABS_MOD_IOCTL_MIN 			1
-
-/* SI-API System Configuration Functions */
-#define SILABS_MOD_IOX_CTRL_IF			_IOWR(SILABS_MOD_IOCTL_MAGIC, 1, SilabsModCtrlObjType)
-#define SILABS_MOD_IOX_DEVICE_INIT		_IOWR(SILABS_MOD_IOCTL_MAGIC, 2, SilabsModDevObjType)
-#define SILABS_MOD_IOX_CHAN_ALL			_IOWR(SILABS_MOD_IOCTL_MAGIC, 3, SilabsModChannelAllObjType)
-#define SILABS_MOD_IOX_CHAN_INIT		_IOWR(SILABS_MOD_IOCTL_MAGIC, 4, SilabsModChannelObjType)
-#define SILABS_MOD_IOX_CHAN_SETUP		_IOWR(SILABS_MOD_IOCTL_MAGIC, 5, SilabsModChannelSetupObjType)
-#define SILABS_MOD_IOX_CHAN_OP			_IOWR(SILABS_MOD_IOCTL_MAGIC, 6, SilabsModChannelOpObjType)
-#define SILABS_MOD_IOX_PCM_TS_SETUP		_IOWR(SILABS_MOD_IOCTL_MAGIC, 7, SilabsModPCMTSSetupObjType)
-#define SILABS_MOD_IOX_GET_EVENT		_IOWR(SILABS_MOD_IOCTL_MAGIC, 8, SilabsModGetEventType)
-#define SILABS_MOD_IOX_REG_CTRL			_IOWR(SILABS_MOD_IOCTL_MAGIC, 9, SilabsRegObjType)
-#define SILABS_MOD_IOX_CHAN_LINE_FEED	_IOWR(SILABS_MOD_IOCTL_MAGIC, 10, SilabsModChannelLineFeedObjType)
-#define SILABS_MOD_IOX_CHAN_HOOK_STATUS	_IOWR(SILABS_MOD_IOCTL_MAGIC, 11, SilabsModChannelReadHookStatObjType)
-#define SILABS_MOD_IOX_CHAN_LOOPBACK	_IOWR(SILABS_MOD_IOCTL_MAGIC, 12, SilabsModChannelSetLoopbackObjType)
-//#define SILABS_MOD_IOX_SET_PROFILE		_IOWR(SILABS_MOD_IOCTL_MAGIC, 13, SilabsModCSetProfileObjType)
-
-/* SI-API Initialization Functions */
-/* SI-API Control Functions */
-/* SI-API Status and Query Functions */
-/* SLIC register read/write */
-
-#define SILABS_MOD_IOCTL_MAX 		14
-#define MAX_SLIC_RDWR_BUFF_SIZE		128
-
-/******************** SI-API Enums *********************/
-
-typedef enum {
-	SI_IF_CREATE,
-	SI_IF_DESTROY,
-	SI_IF_SET_FUNCS
-} ControlFuncType;
-
-typedef enum {
-	SI_DEVICE_CREATE,
-	SI_DEVICE_DESTROY
-} DeviceFuncType;
-
-typedef enum {
-	SI_CHANNEL_CREATE,
-	SI_CHANNEL_DESTROY,
-	SI_CHANNEL_BC_INIT,
-	SI_CHANNEL_SW_INIT,
-} ChannelFuncType;
-
-typedef enum {
-	SI_CHANNEL_ALL_INIT,
-	SI_CHANNEL_ALL_CAL,
-	SI_CHANNEL_ALL_LBCAL
-} ChannelAllFuncType;
-
-typedef enum {
-	SI_CHANNEL_SETUP_RING,
-	SI_CHANNEL_SETUP_TONEGEN,
-	SI_CHANNEL_SETUP_FSK,
-	SI_CHANNEL_SETUP_DTMF_DECODE,
-	SI_CHANNEL_SETUP_ZSYNTH,
-	SI_CHANNEL_SETUP_GCICI,
-	SI_CHANNEL_SETUP_MODEM_DET,
-	SI_CHANNEL_SETUP_TX_AUDIO_GAIN,
-	SI_CHANNEL_SETUP_RX_AUDIO_GAIN,
-	SI_CHANNEL_SETUP_DC_FEED,
-	SI_CHANNEL_SETUP_PULSE_METER,
-	SI_CHANNEL_SETUP_PCM,
-} ChannelSetupFuncType;
-
-typedef enum {
-	SI_CHANNEL_OP_RESET,
-	SI_CHANNEL_OP_CLEAR_ERR,
-	SI_CHANNEL_OP_GPIO_SETUP,
-	SI_CHANNEL_OP_VERIFY_CTRL_IF,
-	SI_CHANNEL_OP_SHUT_DOWN_CHAN,
-	SI_CHANNEL_OP_RING_START,
-	SI_CHANNEL_OP_RING_STOP,
-	SI_CHANNEL_OP_ENA_CID,
-	SI_CHANNEL_OP_DIS_CID,
-	SI_CHANNEL_OP_PLL_FREE_RUN_START,
-	SI_CHANNEL_OP_PLL_FREE_RUN_STOP,
-	SI_CHANNEL_OP_PULSE_METER_START,
-	SI_CHANNEL_OP_PULSE_METER_STOP,
-	SI_CHANNEL_OP_PWR_UP_CONV,
-	SI_CHANNEL_OP_PWR_DOWN_CONV,
-	SI_CHANNEL_OP_ENA_INT,
-	SI_CHANNEL_OP_PCM_START,
-	SI_CHANNEL_OP_PCM_STOP,
-	SI_CHANNEL_OP_TONE_GEN_START,
-	SI_CHANNEL_OP_TONE_GEN_STOP,
-} ChannelOPFuncType;
-
-typedef enum {
-	SI_REG_READ,
-	SI_REG_WRITE,
-	SI_RAM_READ,
-	SI_RAM_WRITE
-} RegFuncType;
-
-/************************ SI-API Initialization Structs ************************/
-
-typedef struct SilabsModCtrlObj {
-	/* Input arg(s) */
-	ControlFuncType			func;
-	/* Output arg(s) */
-	int						status;
-} SilabsModCtrlObjType;
-
-typedef struct SilabsModDevObj {
-	/* Input arg(s) */
-	int						devNum;
-	DeviceFuncType			func;
-	/* Output arg(s) */
-	int						status;
-} SilabsModDevObjType;
-
-typedef struct SilabsModChannelObj {
-	/* Input arg(s) */
-	int						chanNum;
-	ChannelFuncType			func;
-	/* Output arg(s) */
-	int						status;
-} SilabsModChannelObjType;
-
-/******************** SI-API System Configuration Structs *********************/
-
-typedef struct SilabsModChannelSetupObj {
-	/* Input arg(s) */
-	int						chanNum;
-	int						preset;
-	ChannelSetupFuncType	func;
-		/* Output arg(s) */
-	int						status;
-} SilabsModChannelSetupObjType;
-
-typedef struct SilabsModChannelAllObj {
-	/* Input arg(s) */
-	ChannelAllFuncType		func;
-	/* Output arg(s) */
-	int						status;
-} SilabsModChannelAllObjType;
-
-/****************************VP-API Control Structs ***************************/
-
-typedef struct SilabsModPCMTSSetupObj {
-	/* Input arg(s) */
-	int						chanNum;
-	uInt16 					rxcount;
-	uInt16 					txcount;
-	/* Output arg(s) */
-	int						status;
-} SilabsModPCMTSSetupObjType;
-
-typedef struct SilabsModChannelOpObj {
-	/* Input arg(s) */
-	int						chanNum;
-	ChannelOPFuncType		func;
-	/* Output arg(s) */
-	int						status;
-} SilabsModChannelOpObjType;
-
-typedef struct SilabsModChannelLoopbackModeObj {
-	/* Input arg(s) */
-	int						chanNum;
-	ProslicLoopbackModes 	newMode;
-	/* Output arg(s) */
-	int						status;
-} SilabsModChannelLoopbackModeObjType;
-
-typedef struct SilabsModChannelLineFeedObj {
-	/* Input arg(s) */
-	int						chanNum;
-	uInt8				 	newLineFeed;
-	/* Output arg(s) */
-	int						status;
-} SilabsModChannelLineFeedObjType;
-
-
-typedef struct SilabsModChannelSetLoopbackObj {
-	/* Input arg(s) */
-	int						chanNum;
-	ProslicLoopbackModes 	newMode;
-	/* Output arg(s) */
-	int						status;
-} SilabsModChannelSetLoopbackObjType;
-
-#if 0
-typedef struct SilabsModCSetProfileObj {
-	/* Input arg(s) */
-	Si3226x_General_Cfg User_Si3226x_General_Configuration;
-	Si3226x_GPIO_Cfg User_Si3226x_GPIO_Configuration;
-	Si3226x_CI_Cfg User_Si3226x_CI_Presets;
-	Si3226x_audioGain_Cfg User_Si3226x_audioGain_Presets;
-	Si3226x_Ring_Cfg User_Si3226x_Ring_Presets;
-	Si3226x_DCfeed_Cfg User_Si3226x_DCfeed_Presets;
-	Si3226x_Impedance_Cfg User_Si3226x_Impedance_Presets;
-	Si3226x_FSK_Cfg User_Si3226x_FSK_Presets;
-	Si3226x_PulseMeter_Cfg User_Si3226x_PulseMeter_Presets;
-	Si3226x_Tone_Cfg User_Si3226x_Tone_Presets[5];
-	Si3226x_PCM_Cfg User_Si3226x_PCM_Presets[4];
-
-	/* Output arg(s) */
-	int						status;
-} SilabsModCSetProfileObjType
-#endif
-/********************** VP-API Status and Query Structs ***********************/
-
-typedef struct SiEventTypeObj {
-	int 					chanNum;	/* Channel that caused the event */
-	int 					devNum;		/* device chip select ID corresponding to the
-											device that caused the event */
-	uInt8					eventsNum;
-	ProslicInt				irqs[MAX_PROSLIC_IRQS];	/* The events that occurred.  Requires that the event
-														catagory be known to interpret */
-} SiEventType;
-
-typedef struct SilabsModGetEventObj {
-	/* Input arg(s) */
-	int						devNum;
-	/* Output arg(s) */
-	bool					newEvent;
-	SiEventType				*pEvent;
-	int						status;
-} SilabsModGetEventType;
-
-typedef struct SilabsModChannelReadHookStatObj {
-	/* Input arg(s) */
-	int 					chanNum;	/* Channel that caused the event */
-	/* Output arg(s) */
-	uInt8					hookStatus;
-	int						status;
-}
-SilabsModChannelReadHookStatObjType;
-
-/********************** SLIC register read/write ********************/
-typedef struct SilabsRegObj {
-	/* Input arg(s) */
-	int						chanNum;
-	RegFuncType				func;
-	unsigned char 			regAddr;
-	uInt16 					ramAddr;
-	unsigned char 			value;
-	unsigned int 			ramValue;
-
-	/* Output arg(s) */
-	int						status;
-} SilabsRegObjType;
-
-
-/* APIs */
-int silabs_module_init(void);
-void silabs_module_exit(void);
-
-
-#endif /*_SILABS_DEV_H_*/
diff --git a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/vpapi_dev.c b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/vpapi_dev.c
index a6b101e..40e556b 100644
--- a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/vpapi_dev.c
+++ b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/vpapi_dev.c
@@ -83,44 +83,8 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define VPAPI_TICK_TIMER_PERIOD		1
 #define VPAPI_MOD_NAME                  "vpapi"
 
-/* VE880 */
-#if defined(CONFIG_ZARLINK_SLIC_VE880)
-
-#define MAX_DEVICES			2
-#define MAX_LINES			4
-#define MAX_LINES_PER_DEVICE		2
-
-static VpDevCtxType pDevCtx[MAX_DEVICES];
-static VpLineCtxType pLineCtx[MAX_DEVICES][MAX_LINES_PER_DEVICE];
-static Vp880DeviceObjectType pDevObj[MAX_DEVICES];
-static Vp880LineObjectType pLineObj[MAX_DEVICES][MAX_LINES_PER_DEVICE];
-
-/* VE886 */
-#elif defined(CONFIG_ZARLINK_SLIC_VE886)
-
-#define MAX_DEVICES			2
-#define MAX_LINES			4
-#define MAX_LINES_PER_DEVICE		2
-
-static VpDevCtxType pDevCtx[MAX_DEVICES];
-static VpLineCtxType pLineCtx[MAX_DEVICES][MAX_LINES_PER_DEVICE];
-static Vp886DeviceObjectType pDevObj[MAX_DEVICES];
-static Vp886LineObjectType pLineObj[MAX_DEVICES][MAX_LINES_PER_DEVICE];
-
-/* VE890 */
-#elif defined(CONFIG_ZARLINK_SLIC_VE890)
-
-#define MAX_DEVICES			1
-#define MAX_LINES			1
-#define MAX_LINES_PER_DEVICE		1
-
-static VpDevCtxType pDevCtx[MAX_DEVICES];
-static VpLineCtxType pLineCtx[MAX_DEVICES][MAX_LINES_PER_DEVICE];
-static Vp890DeviceObjectType pDevObj[MAX_DEVICES];
-static Vp890LineObjectType pLineObj[MAX_DEVICES][MAX_LINES_PER_DEVICE];
-
 /* VE792 */
-#elif defined(CONFIG_ZARLINK_SLIC_VE792)
+#if defined(CONFIG_ZARLINK_SLIC_VE792)
 
 #define MAX_DEVICES			4
 #define MAX_LINES			32
@@ -161,10 +125,6 @@ int vpapi_get_event(unsigned long arg);
 static int vpapi_batt_on(unsigned long arg);
 static int vpapi_batt_off(unsigned long arg);
 #endif
-#if defined(CONFIG_ZARLINK_SLIC_VE880)
-static int vpapi_reg_read(unsigned long arg);
-static int vpapi_reg_write(unsigned long arg);
-#endif
 
 /* Enumurators */
 typedef struct {
@@ -323,15 +283,6 @@ static long vpapi_ioctl(struct file *pFile, unsigned int cmd, unsigned long arg)
 			ret = vpapi_batt_off(arg);
 			break;
 #endif
-#if defined(CONFIG_ZARLINK_SLIC_VE880)
-		case VPAPI_MOD_IOX_REG_READ:
-			ret = vpapi_reg_read(arg);
-			break;
-
-		case VPAPI_MOD_IOX_REG_WRITE:
-			ret = vpapi_reg_write(arg);
-			break;
-#endif
 		default:
 			printk("%s: error, ioctl command(0x%x) not supported !!!\n", __func__, cmd);
 			ret = -EFAULT;
@@ -825,64 +776,6 @@ static int vpapi_batt_off(unsigned long arg)
 }
 #endif
 
-#if defined(CONFIG_ZARLINK_SLIC_VE880)
-static int vpapi_reg_read(unsigned long arg)
-{
-	VpModRegOpType data;
-	VpLineIdType	line_id;
-	unsigned char	cmd;
-	unsigned short  cmd_len;
-	unsigned char *buff_p = NULL;
-	unsigned char ec_val[] = {0x1, 0x2};
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(VpModRegOpType))) {
-			printk("%s: copy_from_user failed\n", __func__);
-			return -EFAULT;
-	}
-
-	line_id = data.lineId;
-	cmd = data.cmd;
-	cmd_len = data.cmdLen;
-	buff_p = data.buff;
-
-	VpMpiCmd(GET_DEVICE(line_id), ec_val[GET_LINE(line_id)], (cmd | 1), cmd_len, buff_p);
-
-	/* Copy status and event info back to user */
-	if(copy_to_user((void*)arg, &data, sizeof(VpModRegOpType))) {
-		printk("%s: copy_to_user failed\n", __func__);
-		return  -EFAULT;
-	}
-
-	return 0;
-}
-
-static int vpapi_reg_write(unsigned long arg)
-{
-	VpModRegOpType data;
-	VpLineIdType	line_id;
-	unsigned char	cmd;
-	unsigned short  cmd_len;
-	unsigned char *buff_p = NULL;
-	unsigned char ec_val[] = {0x1, 0x2};
-
-	/* Get user data */
-	if(copy_from_user(&data, (void*)arg, sizeof(VpModRegOpType))) {
-			printk("%s: copy_from_user failed\n", __func__);
-			return -EFAULT;
-	}
-
-	line_id = data.lineId;
-	cmd = data.cmd;
-	cmd_len = data.cmdLen;
-	buff_p = data.buff;
-
-	VpMpiCmd(GET_DEVICE(line_id), ec_val[GET_LINE(line_id)], cmd, cmd_len, buff_p);
-
-	return 0;
-}
-#endif
-
 static int vpapi_open(struct inode *pInode, struct file *pFile)
 {
 	try_module_get(THIS_MODULE);
diff --git a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/vpapi_dev.h b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/vpapi_dev.h
index 68df82e..31c568e5 100644
--- a/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/vpapi_dev.h
+++ b/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/vpapi_dev.h
@@ -66,13 +66,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define _VPAPI_DEV_H_
 
 #include "vp_api_common.h"
-#if defined(CONFIG_ZARLINK_SLIC_VE880)
-#include "vp880_api.h"
-#elif defined(CONFIG_ZARLINK_SLIC_VE886)
-#include "vp886_api.h"
-#elif defined(CONFIG_ZARLINK_SLIC_VE890)
-#include "vp890_api.h"
-#elif defined(CONFIG_ZARLINK_SLIC_VE792)
+#if defined(CONFIG_ZARLINK_SLIC_VE792)
 #include "vp792_api.h"
 #endif
 
diff --git a/tools/voice/silabs/Makefile b/tools/voice/silabs/Makefile
index e1cee06..e4a6f5c 100644
--- a/tools/voice/silabs/Makefile
+++ b/tools/voice/silabs/Makefile
@@ -21,6 +21,7 @@ AR := $(CROSS_COMPILE)ar
 
 ifeq ($(CONFIG_SILABS_SLIC_SUPPORT),y)
 ifeq ($(CONFIG_SILAB_SLIC_EXTERNAL_DRIVER),y)
+
 CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/
 CFLAGS += -I$(SILABS_SLIC)/proslic_api/inc -I$(SILABS_SLIC)/proslic_api/custom
 CFLAGS += -I$(SILABS_SLIC)/silabs_dev
@@ -36,42 +37,5 @@ mv_voice_tool-si3226x: mv_voice_tool.c silabs_lib.c
 clean:
 	rm -f mv_voice_tool-si3217x mv_voice_tool-si3226x
 
-else
-TARGETS += siapi_lib.o
-LIBS := libsiapi.a
-TOOL := mv_voice_tool.c
-CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_hal/voiceband/slic/silabs/arch_marvell/
-CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/
-CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/slic/
-CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_hal/voiceband/slic/silabs/inc
-CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_hal/voiceband/slic/silabs/custom/
-CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/test/
-
-ifeq ($(CONFIG_SILAB_SLIC_SI3217x),y)
- CFLAGS += -DSI3217x
-endif
-ifeq ($(CONFIG_SILAB_SLIC_SI3226x),y)
- CFLAGS += -DSI3226x
-endif
-
-ifeq ($(CONFIG_MV_TDM_USE_DCO),y)
- CFLAGS += -DMV_TDM_USE_DCO
-endif
-
-CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_drivers_lsp/mv_phone/test/
-
-all:
-	$(CC) $(CFLAGS) -static -c silabs_lib.c -o $(TARGETS)
-	$(AR) rcs $(LIBS) $(TARGETS)
-	$(CC) $(CFLAGS) -static $(PROFILE) $(TOOL) -L. $(LIBS) -o mv_voice_tool
-
-mv_voice_tool: $(PROFILE) $(TOOL)
-	$(CC) $(CFLAGS) -static $(PROFILE) $(TOOL) -L. $(LIBS) -o mv_voice_tool
-
-clean:
-	rm -f *.o *.a mv_voice_tool
-	@for subdir in $(SUBDIRS); do \
-                (cd $$subdir && $(MAKE) $@) || exit 1; \
-        done
 endif #CONFIG_SILAB_SLIC_EXTERNAL_DRIVER
 endif #CONFIG_SILABS_SLIC_SUPPORT
diff --git a/tools/voice/zarlink/kernel/Makefile b/tools/voice/zarlink/kernel/Makefile
index b466a6c..ca80fc5 100644
--- a/tools/voice/zarlink/kernel/Makefile
+++ b/tools/voice/zarlink/kernel/Makefile
@@ -30,16 +30,6 @@ ifeq ($(CONFIG_ZARLINK_SLIC_VE792),y)
  CFLAGS += -DZARLINK_SLIC_VE792
  PROFILE = profile_79238.c
 endif
-ifeq ($(CONFIG_ZARLINK_SLIC_VE880),y)
- CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_hal/voiceband/slic/zarlink/api_lib/includes/
- CFLAGS += -DZARLINK_SLIC_VE880
- PROFILE = profile_88266.c
-endif
-ifeq ($(CONFIG_ZARLINK_SLIC_VE890),y)
- CFLAGS += -I$(KSRC)/arch/arm/plat-feroceon/mv_hal/voiceband/slic/zarlink/api_lib/includes/
- CFLAGS += -DZARLINK_SLIC_VE890
- PROFILE = profile_89116.c
-endif
 
 ifeq ($(CONFIG_ZARLINK_SLIC_EXTERNAL_DRIVER),y)
 CFLAGS += -I$(ZARLINK_VPAPI)/api_lib/includes -I$(ZARLINK_VPAPI)/vp_hal -I$(ZARLINK_VPAPI)/vapi_dev
-- 
1.7.5.4

