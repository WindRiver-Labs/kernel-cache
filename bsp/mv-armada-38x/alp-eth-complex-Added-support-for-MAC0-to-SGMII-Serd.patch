From cc5d1eca3003bd22628c586434864fecb36f7495 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Mon, 17 Mar 2014 09:44:54 +0200
Subject: [PATCH 1483/1825] alp: eth complex: Added support for MAC0 to SGMII
 (Serdes lane2)

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit f4ff0a039c122aff55a38c00d5bbd910121b5d30

	Add support for MAC0 to SGMII (serdes lane2)
	- Set the MAC0 speed depends on SGMII capacity
	- Update function that check if the port is SGMII
	Tested with:
		- Switch 1G, with SGMII capacity 1.25G
		- LoopBack, with SGMII capacity 2.5G

Change-Id: I1d92c2c0d2c204c33f81dfba093081234815993c
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6465
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   10 +++++++++-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    1 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c    |   14 +++++++++-----
 .../avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h    |    3 +++
 4 files changed, 22 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index b504d6c..0010197 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -253,10 +253,15 @@ MV_STATUS mvBoardNameGet(char *pNameBuff, MV_U32 size)
 *******************************************************************************/
 MV_BOOL mvBoardIsPortInSgmii(MV_U32 ethPortNum)
 {
+	MV_U32 ethComplex;
 #if defined(CONFIG_MACH_AVANTA_LP_FPGA)
 	return ethPortNum == 2;
 #endif
-
+	ethComplex = mvBoardEthComplexConfigGet();
+	if ((ethPortNum == 0 && (ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_1 ||
+		ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_2 || ethComplex & MV_ETHCOMP_GE_MAC0_2_COMPHY_3)) ||
+		(ethPortNum == 1 && (ethComplex & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES)))
+		return MV_TRUE;
 	return MV_FALSE;
 }
 
@@ -1123,6 +1128,9 @@ MV_STATUS mvBoardEthComplexInfoUpdate()
 	if (mvCtrlSysConfigGet(MV_CONFIG_MAC0_SW_SPEED) == 0x0)
 		ethComplexOptions |= MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G;
 
+	if (mvCtrlSysConfigGet(MV_CONFIG_SGMII0_CAPACITY) == 0x1)
+		ethComplexOptions |= MV_ETHCOMP_GE_MAC0_2_COMPHY_SPEED_2G;
+
 	/* if MAC1 is NOT connected to PON SerDes --> connect PON MAC to to PON SerDes */
 	if ((ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES) == MV_FALSE)
 		ethComplexOptions |= MV_ETHCOMP_P2P_MAC_2_PON_ETH_SERDES;
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index b119b56..9c23927 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -178,6 +178,7 @@ typedef enum {
 	MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES	=	BIT15,
 	MV_ETHCOMP_P2P_MAC_2_PON_ETH_SERDES	=	BIT16,
 	MV_ETHCOMP_P2P_MAC0_2_SW_SPEED_2G	=	BIT17,
+	MV_ETHCOMP_GE_MAC0_2_COMPHY_SPEED_2G	=	BIT18,
 } MV_ETH_COMPLEX_TOPOLOGY;
 
 typedef enum {
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
index daf12f3..ab5699e 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.c
@@ -390,9 +390,13 @@ static void mvEthComplexMacToGbePhy(MV_U32 port, MV_U32 phy, MV_U32 phyAddr)
 	mvEthComplexGbePhyResetSet(MV_FALSE);
 }
 
-static void mvEthComplexMacToComPhy(MV_U32 port, MV_U32 comPhy)
+static void mvEthComplexMacToComPhy(MV_U32 port, MV_U32 comPhy, MV_U32 ethComplexOptions)
 {
-	/* Not implemented */
+	/* 0x1 for 1Gbps, 0x0 for 2.5Gbps */
+	if (ethComplexOptions & MV_ETHCOMP_GE_MAC0_2_COMPHY_SPEED_2G)
+		mvEthComplexPortDpClkSrcSet(port, 0x0);
+	else
+		mvEthComplexPortDpClkSrcSet(port, 0x1);
 }
 
 static void mvEthComplexMac1ToPonSerdes(MV_U32 port)
@@ -438,13 +442,13 @@ MV_STATUS mvEthComplexInit(MV_U32 ethCompConfig)
 		mvEthComplexMacToRgmii(0, mvBoardPhyAddrGet(0));
 
 	if (c & MV_ETHCOMP_GE_MAC0_2_COMPHY_1)
-		mvEthComplexMacToComPhy(0, 1);
+		mvEthComplexMacToComPhy(0, 1, c);
 
 	if (c & MV_ETHCOMP_GE_MAC0_2_COMPHY_2)
-		mvEthComplexMacToComPhy(0, 2);
+		mvEthComplexMacToComPhy(0, 2, c);
 
 	if (c & MV_ETHCOMP_GE_MAC0_2_COMPHY_3)
-		mvEthComplexMacToComPhy(0, 3);
+		mvEthComplexMacToComPhy(0, 3, c);
 
 	if (c & MV_ETHCOMP_GE_MAC1_2_SW_P4)
 		mvEthComplexMacToSwPort(1, 4, mvBoardMacSpeedGet(1));
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
index 6b5866b..0638429 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEthCompLib.h
@@ -119,6 +119,9 @@ enum mvSwPortSrc {
 #define     ETHCC_LOOPBACK_PORT_SPEED_OFFSET		19
 #define     ETHCC_LOOPBACK_PORT_SPEED_MASK		(0x1 << ETHCC_LOOPBACK_PORT_SPEED_OFFSET)
 
+#define     ETHCC_SW_OUT_CLOCK_IN_SRC_OFFSET		26
+#define     ETHCC_SW_OUT_CLOCK_IN_SRC_MASK		(0x1 << ETHCC_SW_OUT_CLOCK_IN_SRC_OFFSET)
+
 /*******************************************************************************
  * Switch Configuration and Reset Control
  */
-- 
1.7.5.4

