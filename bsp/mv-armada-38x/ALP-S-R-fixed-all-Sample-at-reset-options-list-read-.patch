From 9294e4ebc4bcfb0b99aa4b33903419326f7cc6e3 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 6 Jun 2013 16:06:54 +0300
Subject: [PATCH 0705/1825] ALP: S@R: fixed all Sample at reset options
 (list/read/write)

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 322fbae6ef6bf517ed208ba3fbb3f7cce7c59b2e

- Added Boolean to mvBoardSatrInfoGet which indicates S@R read/write sequence
- Updated boardSatrInfo[] for active S@R write/read fields for all boards
- Updated MV_USER_SAR_FREQ_MODES with only official supported frequency modes
- Added input error handling for writen values to SatR write command

Change-Id: Iab6b5c7f535f41a681b7846a9ae41af097a54063
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2177
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   16 +++++--
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    2 +-
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |   44 ++++++++++----------
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |    9 ++--
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |    7 +++
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |    5 ++-
 6 files changed, 51 insertions(+), 32 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 1f1c20b..53a1d03 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -2037,7 +2037,7 @@ MV_VOID mvBoardEthComplexConfigSet(MV_U32 ethConfig)
 }
 
 /*******************************************************************************
-* mvBoardSatrInfoGet
+* mvBoardSatrInfoConfig
 *
 * DESCRIPTION:
 *	Return the SAR fields information for a given SAR class.
@@ -2052,14 +2052,22 @@ MV_VOID mvBoardEthComplexConfigSet(MV_U32 ethConfig)
 *	MV_BOARD_SATR_INFO struct with mask, offset and register number.
 *
 *******************************************************************************/
-MV_STATUS mvBoardSatrInfoGet(MV_SATR_TYPE_ID satrClass, MV_BOARD_SATR_INFO *satrInfo)
+MV_STATUS mvBoardSatrInfoConfig(MV_SATR_TYPE_ID satrClass, MV_BOARD_SATR_INFO *satrInfo, MV_BOOL read)
 {
-	int i;
+	int i, start, end;
 	MV_U32 boardId = mvBoardIdGet();
 
+	if (read == MV_TRUE) {	/* if read request, check read SATR fields */
+		start = 0;
+		end = MV_SATR_READ_MAX_OPTION;
+	} else {		/* if write request, check write SATR fields */
+		start = MV_SATR_READ_MAX_OPTION;
+		end = MV_SATR_WRITE_MAX_OPTION;
+	}
+
 	/* verify existence of requested SATR type, pull its data,
 	 * and check if field is relevant to current running board */
-	for (i = 0; i < MV_SATR_READ_MAX_OPTION ; i++)
+	for (i = start; i < end ; i++)
 		if (boardSatrInfo[i].satrId == satrClass) {
 			*satrInfo = boardSatrInfo[i];
 			if (boardSatrInfo[i].isActiveForBoard[boardId])
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index 0f20fcb..6ef5949 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -382,7 +382,7 @@ MV_32 mvBoardPhyAddrGet(MV_U32 ethPortNum);
 MV_VOID mvBoardPhyAddrSet(MV_U32 ethPortNum, MV_U32 smiAddr);
 MV_U8 mvBoardIoExpValGet(MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo);
 MV_STATUS mvBoardIoExpValSet(MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo, MV_U8 value);
-MV_STATUS mvBoardSatrInfoGet(MV_SATR_TYPE_ID satrClass, MV_BOARD_SATR_INFO *satrInfo);
+MV_STATUS mvBoardSatrInfoConfig(MV_SATR_TYPE_ID satrClass, MV_BOARD_SATR_INFO *satrInfo, MV_BOOL read);
 MV_STATUS mvBoardConfigTypeGet(MV_CONFIG_TYPE_ID configClass, MV_BOARD_CONFIG_TYPE_INFO *configInfo);
 MV_STATUS mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_TYPE_ID ioClass, MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo);
 MV_STATUS mvBoardExtPhyBufferSelect(MV_BOOL enable);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index d9e38f0..19af927 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -73,28 +73,28 @@ MV_BOARD_SATR_INFO boardSatrInfo[] = {
 /*{{MV_SATR_TYPE_ID SarID,	   Mask,     Offset, regNum, isActiveForBoard[]}*/
 /*		     isActiveForBoard[] = { RD_6650, DB_6650, RD_6660, DB_6660 }*/
 { MV_SATR_CPU_DDR_L2_FREQ,	 0x003E0000,	17,	1, {1, 1, 1, 1} },
-{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,	22,	1, {0, 0, 0, 0} },
-{ MV_SATR_CPU1_ENABLE,		 0x00008000,	15,	0, {0, 0, 1, 0} },
-{ MV_SATR_SSCG_DISABLE,		 0x00000002,	1,	0, {0, 0, 0, 0} },
-{ MV_SATR_I2C0_SERIAL_ROM,	 0X00000001,	0,	0, {0, 0, 0, 0} },
-{ MV_SATR_EXTERNAL_CPU_RESET,	 0X00000000,	0,	0, {0, 0, 0, 0} },
-{ MV_SATR_EXTERNAL_CORE_RESET,	 0X00000000,	0,	0, {0, 0, 0, 0} },
+{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,	22,	1, {1, 1, 1, 1} },
+{ MV_SATR_CPU1_ENABLE,		 0x00008000,	15,	0, {1, 1, 1, 1} },
+{ MV_SATR_SSCG_DISABLE,		 0x00000002,	1,	0, {1, 1, 1, 1} },
+{ MV_SATR_I2C0_SERIAL_ROM,	 0X00000001,	0,	0, {1, 1, 1, 1} },
+{ MV_SATR_EXTERNAL_CPU_RESET,	 0X00000000,	0,	0, {1, 1, 1, 1} },
+{ MV_SATR_EXTERNAL_CORE_RESET,	 0X00000000,	0,	0, {1, 1, 1, 1} },
 { MV_SATR_BOOT_DEVICE,		 0X000001F8,	3,	0, {1, 1, 1, 1} },
-{ MV_SATR_CPU_PLL_XTAL_BYPASS,	 0x00000200,	9,	0, {0, 0, 0, 0} },
-{ MV_SATR_PEX0_CLOCK,		 0x00000400,	10,	0, {0, 0, 0, 0} },
-{ MV_SATR_PEX1_CLOCK,		 0x00000800,	11,	0, {0, 0, 0, 0} },
-{ MV_SATR_REF_CLOCK_ENABLE,	 0x00000004,	2,	0, {0, 0, 0, 0} },
-{ MV_SATR_TESTER_OPTIONS,	 0x00080000,	19,	0, {0, 0, 0, 0} },
-{ MV_SATR_CPU0_ENDIANESS,	 0x00001000,	12,	0, {0, 0, 0, 0} },
-{ MV_SATR_CPU0_NMFI,		 0x00002000,	13,	0, {0, 0, 0, 0} },
-{ MV_SATR_CPU0_THUMB,		 0x00004000,	14,	0, {0, 0, 0, 0} },
-{ MV_SATR_EFUSE_BYPASS,		 0x00020000,	17,	0, {0, 0, 0, 0} },
-{ MV_SATR_POR_BYPASS,		 0x00100000,	20,	0, {0, 0, 0, 0} },
-{ MV_SATR_BOARD_ID,		 0x000000F0,	4,	1, {0, 0, 0, 0} },
-{ MV_SATR_WRITE_CPU_FREQ,	 0X0000001F,	0,	0, {1, 0, 1, 0} },
-{ MV_SATR_WRITE_CORE_CLK_SELECT, 0x00000001,	0,	1, {1, 0, 1, 0} },
-{ MV_SATR_WRITE_CPU1_ENABLE,	 0x00000002,	1,	1, {1, 0, 1, 0} },
-{ MV_SATR_WRITE_SSCG_DISABLE,	 0x00000004,	2,	1, {1, 0, 1, 0} },
+{ MV_SATR_CPU_PLL_XTAL_BYPASS,	 0x00000200,	9,	0, {1, 1, 1, 1} },
+{ MV_SATR_PEX0_CLOCK,		 0x00000400,	10,	0, {1, 1, 1, 1} },
+{ MV_SATR_PEX1_CLOCK,		 0x00000800,	11,	0, {1, 1, 1, 1} },
+{ MV_SATR_REF_CLOCK_ENABLE,	 0x00000004,	2,	0, {1, 1, 1, 1} },
+{ MV_SATR_TESTER_OPTIONS,	 0x00080000,	19,	0, {1, 1, 1, 1} },
+{ MV_SATR_CPU0_ENDIANESS,	 0x00001000,	12,	0, {1, 1, 1, 1} },
+{ MV_SATR_CPU0_NMFI,		 0x00002000,	13,	0, {1, 1, 1, 1} },
+{ MV_SATR_CPU0_THUMB,		 0x00004000,	14,	0, {1, 1, 1, 1} },
+{ MV_SATR_EFUSE_BYPASS,		 0x00020000,	17,	0, {1, 1, 1, 1} },
+{ MV_SATR_POR_BYPASS,		 0x00100000,	20,	0, {1, 1, 1, 1} },
+{ MV_SATR_BOARD_ID,		 0x000000F0,	4,	1, {1, 1, 1, 1} },
+{ MV_SATR_WRITE_CPU_FREQ,	 0X0000001F,	0,	0, {0, 1, 0, 1} },
+{ MV_SATR_WRITE_CORE_CLK_SELECT, 0x00000001,	0,	1, {0, 1, 0, 1} },
+{ MV_SATR_WRITE_CPU1_ENABLE,	 0x00000002,	1,	1, {0, 1, 0, 1} },
+{ MV_SATR_WRITE_SSCG_DISABLE,	 0x00000004,	2,	1, {0, 0, 0, 0} },
 };
 
 MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[] = {
@@ -168,7 +168,7 @@ MV_BOARD_IO_EXPANDER_TYPE_INFO db88f6650InfoBoardIOExpanderInfo[] = {
 MV_BOARD_TWSI_INFO db88f6660InfoBoardTwsiDev[] = {
 	/* {{MV_BOARD_DEV_CLASS devClass, MV_U8 devClassId,  MV_U8 twsiDevAddr, MV_U8 twsiDevAddrType}} */
 	{ BOARD_DEV_TWSI_SATR,		0,	0x4C,	   ADDR7_BIT	},
-	{ BOARD_DEV_TWSI_SATR,		1,	0x4E,	   ADDR7_BIT	},
+	{ BOARD_DEV_TWSI_SATR,		1,	0x4D,	   ADDR7_BIT	},
 	{ BOARD_DEV_TWSI_EEPROM,	0,	0x54,	   ADDR7_BIT	},
 	{ BOARD_DEV_TWSI_IO_EXPANDER,	0,	0x21,	   ADDR7_BIT	},
 	{ BOARD_DEV_TWSI_IO_EXPANDER,	1,	0x22,	   ADDR7_BIT	},
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 8d5a9bb..c134acb 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -318,8 +318,8 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_SATR_TYPE_ID satrRe
 		return MV_ERROR;
 	}
 
-	if (mvBoardSatrInfoGet(satrWriteField, &satrInfo) != MV_OK) {
-		mvOsPrintf("%s: mvBoardSarInfoGet failed: S@R config is not relevant for this board(%d)\n", __func__, satrWriteField);
+	if (mvBoardSatrInfoConfig(satrWriteField, &satrInfo, MV_FALSE) != MV_OK) {
+		mvOsPrintf("%s: Error: Requested S@R field is not relevant for this board\n", __func__);
 		return MV_ERROR;
 	}
 
@@ -372,7 +372,8 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_SATR_TYPE_ID satrRe
 MV_U32 mvCtrlSatRRead(MV_SATR_TYPE_ID satrField)
 {
 	MV_BOARD_SATR_INFO satrInfo;
-	if (satrField < MV_SATR_READ_MAX_OPTION && mvBoardSatrInfoGet(satrField, &satrInfo) == MV_OK)
+	if (satrField < MV_SATR_READ_MAX_OPTION &&
+			mvBoardSatrInfoConfig(satrField, &satrInfo, MV_TRUE) == MV_OK)
 		return satrOptionsConfig[satrField];
 	else
 		return MV_ERROR;
@@ -511,7 +512,7 @@ MV_VOID mvCtrlSatrInit(void)
 	satrVal[1] = MV_REG_READ(MPP_SAMPLE_AT_RESET(1));
 
 	for (i = 0; i < MV_SATR_READ_MAX_OPTION; i++)
-		if (mvBoardSatrInfoGet(i, &satrInfo) == MV_OK)
+		if (mvBoardSatrInfoConfig(i, &satrInfo, MV_TRUE) == MV_OK)
 			satrOptionsConfig[satrInfo.satrId] = ((satrVal[satrInfo.regNum]  & (satrInfo.mask)) >> (satrInfo.offset));
 
 }
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index 791c837..313b744 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -284,6 +284,13 @@ typedef struct {
 		{ 29, 1100, 550, 550 } \
 };
 
+#define MV_USER_SAR_FREQ_MODES { \
+		{ 6,  400,  400, 200 }, \
+		{ 14, 600,  400, 300 }, \
+		{ 21, 800,  534, 400 }, \
+		{ 25, 1000, 500, 500 }, \
+};
+
 /* These macros help units to identify a target Mport Arbiter group */
 #define MV_TARGET_IS_DRAM(target)   \
 	((target >= SDRAM_CS0) && (target <= SDRAM_CS3))
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index 0056406..4a16ed0 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -257,7 +257,10 @@ extern "C" {
 #ifndef MV_ASMLANGUAGE
 
 #define TBL_UNUSED      0       /* Used to mark unused entry */
-#define FREQ_MODES_NUM          29
+#define FREQ_MODES_NUM		29
+#define FREQ_MODES_NUM_6610	1
+#define FREQ_MODES_NUM_6650	3
+#define FREQ_MODES_NUM_6660	4
 
 #define MPP_GROUP_0_TYPE { \
 	0x55555555,     /* NAND_V2_BOOT_DEVICE  */ \
-- 
1.7.5.4

