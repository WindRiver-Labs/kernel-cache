From 9f5cb249a2f610e48fcd97e36f9f42f08d02d9ed Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Thu, 18 Apr 2013 13:39:13 +0300
Subject: [PATCH 0602/1825] PPv2: Use MV_BOOL instead of int

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit dd16fb694fbb1969384834cad4ecf879f21c74f2

Change-Id: I8fc12a59cbbee033e9581a3e94cf8061679f4ad3
Reviewed-on: http://vgitil04.il.marvell.com:8080/1615
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c   |   20 ++++++++++----------
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h   |    4 ++--
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c |    6 +++---
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h |    8 ++++----
 4 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c
index 7628cf7..fe03f18 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c
@@ -119,7 +119,7 @@ static int mvPrsDblVlanAiFreeGet(void)
 /******************************************************************************
  * Common utilities
  ******************************************************************************/
-static int mvPp2PrsEtypeEquals(MV_PP2_PRS_ENTRY *pe, int offset, unsigned short ethertype)
+static MV_BOOL mvPp2PrsEtypeEquals(MV_PP2_PRS_ENTRY *pe, int offset, unsigned short ethertype)
 {
 	unsigned char etype[MV_ETH_TYPE_LEN];
 
@@ -156,7 +156,7 @@ static void mvPp2PrsMatchMh(MV_PP2_PRS_ENTRY *pe, unsigned short mh)
  ******************************************************************************
  */
 
-static int mvPrsMacRangeEquals(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
+static MV_BOOL mvPrsMacRangeEquals(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
 {
 	int		index;
 	unsigned char 	tcamByte, tcamMask;
@@ -173,7 +173,7 @@ static int mvPrsMacRangeEquals(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
 	return MV_TRUE;
 }
 
-static int mvPrsMacRangeIntersec(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
+static MV_BOOL mvPrsMacRangeIntersec(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
 {
 	int		index;
 	unsigned char 	tcamByte, tcamMask, commonMask;
@@ -190,7 +190,7 @@ static int mvPrsMacRangeIntersec(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
 	return MV_TRUE;
 }
 
-static int mvPrsMacInRange(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
+static MV_BOOL mvPrsMacInRange(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
 {
 	int		index;
 	unsigned char 	tcamByte, tcamMask;
@@ -240,7 +240,7 @@ static MV_PP2_PRS_ENTRY *mvPrsMacDaFind(int port, unsigned char *da)
 	return mvPrsMacDaRangeFind((1 << port), da, mask, PRS_UDF_MAC_DEF);
 }
 
-static int mvPrsMacDaRangeAccept(int portMap, MV_U8 *da, MV_U8 *mask, unsigned int ri, unsigned int riMask, int finish)
+static int mvPrsMacDaRangeAccept(int portMap, MV_U8 *da, MV_U8 *mask, unsigned int ri, unsigned int riMask, MV_BOOL finish)
 {
 	int	tid, len;
 	MV_PP2_PRS_ENTRY *pe = NULL;
@@ -428,12 +428,12 @@ static int mvPrsMacDaRangeValid(unsigned int portMap, MV_U8 *da, MV_U8 *mask)
 	return MV_OK;
 }
 
-int mvPrsMacDaRangeSet(unsigned int portMap, MV_U8 *da, MV_U8 *mask, unsigned int ri, unsigned int riMask, int finish)
+int mvPrsMacDaRangeSet(unsigned int portMap, MV_U8 *da, MV_U8 *mask, unsigned int ri, unsigned int riMask, MV_BOOL finish)
 {
 	MV_PP2_PRS_ENTRY pe;
 	int tid;
 	unsigned int entryPmap;
-	int done = MV_FALSE;
+	MV_BOOL done = MV_FALSE;
 
 	/* step 1 - validation, ranges intersections are forbidden*/
 	if (mvPrsMacDaRangeValid(portMap, da, mask))
@@ -478,7 +478,7 @@ int mvPrsMacDaRangeDel(unsigned int portMap, MV_U8 *da, MV_U8 *mask)
 	MV_PP2_PRS_ENTRY pe;
 	int tid;
 	unsigned int entryPmap;
-	int found = MV_FALSE;
+	MV_BOOL found = MV_FALSE;
 
 	for (tid = PE_LAST_FREE_TID ; tid >= PE_FIRST_FREE_TID; tid--) {
 		if (!mvPp2PrsShadowIsValid(tid) || !(mvPp2PrsShadowLu(tid) == PRS_LU_MAC))
@@ -1559,12 +1559,12 @@ static int mvPrsEthTypeValid(unsigned int portMap, unsigned short ethertype)
 	return MV_OK;
 }
 
-int mvPrsEthTypeSet(int portMap, unsigned short ethertype, unsigned int ri, unsigned int riMask, int finish)
+int mvPrsEthTypeSet(int portMap, unsigned short ethertype, unsigned int ri, unsigned int riMask, MV_BOOL finish)
 {
 	MV_PP2_PRS_ENTRY pe;
 	int tid;
 	unsigned int  entryPmap;
-	int done = MV_FALSE;
+	MV_BOOL done = MV_FALSE;
 
 	/* step 1 - validation */
 	if (mvPrsEthTypeValid(portMap, ethertype))
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h
index a0a988e..b634671 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h
@@ -153,7 +153,7 @@ enum prs_lookup {
 int mvPrsDefFlow(int port);
 int mvPrsDefaultInit(void);
 int mvPrsMacDaAccept(int port, unsigned char *da, int add);
-int mvPrsMacDaRangeSet(unsigned portBmp, MV_U8 *da, MV_U8 *mask, unsigned int ri, unsigned int riMask, int finish);
+int mvPrsMacDaRangeSet(unsigned portBmp, MV_U8 *da, MV_U8 *mask, unsigned int ri, unsigned int riMask, MV_BOOL finish);
 int mvPrsMacDaRangeDel(unsigned portBmp, MV_U8 *da, MV_U8 *mask);
 int mvPrsMacDropAllSet(int port, int add);
 int mvPrsMhRxSpecialSet(int port, unsigned short mh, int add);
@@ -164,7 +164,7 @@ int mvPrsFlowIdGen(int tid, int flowId, unsigned int res, unsigned int resMask,
 int mvPp2PrsTagModeSet(int port, int type);
 int mvPp2PrsEtypeDsaModeSet(int port, int extand);
 int mvPp2PrsEtypeDsaSet(unsigned int eType);
-int mvPrsEthTypeSet(int portMap, unsigned short ethertype, unsigned int ri, unsigned int riMask, int finish);
+int mvPrsEthTypeSet(int portMap, unsigned short ethertype, unsigned int ri, unsigned int riMask, MV_BOOL finish);
 int mvPrsEthTypeDel(int portMap, unsigned short eth_type);
 int mvPp2PrsTripleVlan(unsigned short tpid1, unsigned short tpid2, unsigned short tpid3, unsigned int portBmp, int add);
 int mvPp2PrsDoubleVlan(unsigned short tpid1, unsigned short tpid2, unsigned int portBmp, int add);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c
index a25de28..89cdd00 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c
@@ -124,12 +124,12 @@ void mvPp2PrsShadowRiSet(int index, unsigned int ri, unsigned int riMask)
 	mvPrsShadowTbl[index].ri = ri;
 }
 
-void mvPp2PrsShadowFinSet(int index, int finish)
+void mvPp2PrsShadowFinSet(int index, MV_BOOL finish)
 {
 	mvPrsShadowTbl[index].finish = finish;
 }
 
-int mvPp2PrsShadowFin(int index)
+MV_BOOL mvPp2PrsShadowFin(int index)
 {
 	return mvPrsShadowTbl[index].finish;
 }
@@ -690,7 +690,7 @@ int mvPp2PrsSwTcamPortSet(MV_PP2_PRS_ENTRY *pe, unsigned int port, int add)
 	return MV_OK;
 }
 
-int mvPp2PrsSwTcamPortGet(MV_PP2_PRS_ENTRY *pe, unsigned int port, int *status)
+int mvPp2PrsSwTcamPortGet(MV_PP2_PRS_ENTRY *pe, unsigned int port, MV_BOOL *status)
 {
 	PTR_VALIDATE(pe);
 	POS_RANGE_VALIDATE(port, 7);/*TODO define max port val*/
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h
index 5276580..d90db36 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h
@@ -400,7 +400,7 @@ typedef struct {
 	int		udf;
 	unsigned	ri;
 	unsigned	riMask;
-	int		finish;
+	MV_BOOL		finish;
 } PRS_SHADOW_ENTRY;
 
 
@@ -411,8 +411,8 @@ void mvPp2PrsShadowUdfSet(int index, int udf);
 unsigned int mvPp2PrsShadowRi(int index);
 unsigned int mvPp2PrsShadowRiMask(int index);
 void mvPp2PrsShadowRiSet(int index, unsigned int ri, unsigned int riMask);
-void mvPp2PrsShadowFinSet(int index, int finish); /* set bit 111 (GEN_BIT) in SRAM */
-int mvPp2PrsShadowFin(int index);
+void mvPp2PrsShadowFinSet(int index, MV_BOOL finish); /* set bit 111 (GEN_BIT) in SRAM */
+MV_BOOL mvPp2PrsShadowFin(int index);
 void mvPp2PrsShadowClear(int index);
 void mvPp2PrsShadowClearAll(void);
 int mvPp2PrsShadowLu(int index);
@@ -655,7 +655,7 @@ int mvPp2PrsSwTcamAiClearBit(MV_PP2_PRS_ENTRY *pe, unsigned char bit);
  * @status: 1 - port bit is set, 0 - port bit is not set
 */
 
-int mvPp2PrsSwTcamPortGet(MV_PP2_PRS_ENTRY *pe, unsigned int port, int *status);
+int mvPp2PrsSwTcamPortGet(MV_PP2_PRS_ENTRY *pe, unsigned int port, MV_BOOL *status);
 /*
  * mvPp2PrsSwTcamPortSet - set tcam port map in prs sw entry.
  * @pe: sw prs entry
-- 
1.7.5.4

