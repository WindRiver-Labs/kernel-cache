From 7dff93e48d984b4ddf461ec1b1d2e9663157d0d6 Mon Sep 17 00:00:00 2001
From: Uri Eliyahu <uriel@marvell.com>
Date: Thu, 13 Mar 2014 13:17:53 +0200
Subject: [PATCH 1468/1825] pp3: updat netdev and emac code

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 4e315446b37af3d6c33a60fb2b2b773d0e68dbba

Change-Id: I16d8c4bb91117c602c2831c41ac2653b138d50bd
Signed-off-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6393
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/marvell/pp3/emac/mv_emac.c    |   21 +++++++++++++++++--
 drivers/net/ethernet/marvell/pp3/emac/mv_emac.h    |    1 +
 .../net/ethernet/marvell/pp3/emac/mv_emac_regs.h   |    7 ++++++
 .../net/ethernet/marvell/pp3/net_dev/mv_netdev.c   |   15 ++++++++++---
 4 files changed, 37 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c
index e068540..a8a00ca 100644
--- a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c
+++ b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c
@@ -116,13 +116,13 @@ void mv_pp3_emac_init(int port)
 {
 	/* attach to QM */
 	/* TODO config the correct values of qm_q and qm_port */
+	/* TODO: hard code from dan DDD*/
 	mv_pp3_emac_qm_mapping(port, port, port);
+	mv_pp3_emac_fw_data(port);
 
-	/* TODO */
+	/* use hw defaults */
 	/*mv_pp3_emac_rx_cfh_reorder_mode(int port, int lock_id);*/
 	/*mv_pp3_emac_rx_cfh_deq_mode(port, mode)*/
-
-	/* use hw defaults */
 	/*mv_pp3_emac_mh_en(port, 1);*/
 	/*mv_pp3_emac_rx_desc_rsvd(port, 2);*/
 	/* mv_pp3_emac_tx_min_pkt_len(int port, 60)*/
@@ -141,6 +141,21 @@ void mv_pp3_emac_debug(int port, int en)
 
 }
 
+/* set logical port and CFH mode, used by FW */
+void mv_pp3_emac_fw_data(int port)
+{
+	u32 data;
+
+	data = mv_pp3_emac_reg_read(port, MV_EMAC_ENQ_DESC_W1_REG);
+
+	data &= (MV_EMAC_ENQ_DESC_W1_FW_CFH_MODE_MASK | MV_EMAC_ENQ_DESC_W1_FW_LOGIC_PORT_MASK);
+
+	data |= (port << MV_EMAC_ENQ_DESC_W1_FW_LOGIC_PORT_OFFS) |
+		(2 << MV_EMAC_ENQ_DESC_W1_FW_CFH_MODE_OFFS);
+
+	mv_pp3_emac_reg_write(port, MV_EMAC_ENQ_DESC_W1_REG, data);
+}
+
 /* set QM Enq queu and Deq port */
 void mv_pp3_emac_qm_mapping(int port, int qm_port, int qm_q)
 {
diff --git a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.h b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.h
index 84f964d..f6db0f1 100644
--- a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.h
+++ b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.h
@@ -122,6 +122,7 @@ void mv_pp3_emac_rx_mh(int port, short mh);
 
 void mv_pp3_emac_tx_min_pkt_len(int port, int bytes);
 
+void mv_pp3_emac_fw_data(int port);
 /*--------------------------------------------------------------*/
 /*------------------------- PFC --------------------------------*/
 /*--------------------------------------------------------------*/
diff --git a/drivers/net/ethernet/marvell/pp3/emac/mv_emac_regs.h b/drivers/net/ethernet/marvell/pp3/emac/mv_emac_regs.h
index c72c323..97a74db 100644
--- a/drivers/net/ethernet/marvell/pp3/emac/mv_emac_regs.h
+++ b/drivers/net/ethernet/marvell/pp3/emac/mv_emac_regs.h
@@ -126,6 +126,13 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 /* Emac Enq Descriptor Word 1 (EMAC_ENQ_DESC_W1) */
 #define MV_EMAC_ENQ_DESC_W1_REG								0x001c
 #define MV_EMAC_ENQ_DESC_W1_EMAC_ENQ_DESC_W1_OFFS		0
+#define MV_EMAC_ENQ_DESC_W1_FW_CFH_MODE_OFFS			30
+#define MV_EMAC_ENQ_DESC_W1_FW_CFH_MODE_MASK			\
+		(0xC0000000 << MV_EMAC_ENQ_DESC_W1_FW_CFH_MODE_OFFS)
+#define MV_EMAC_ENQ_DESC_W1_FW_LOGIC_PORT_OFFS			24
+#define MV_EMAC_ENQ_DESC_W1_FW_LOGIC_PORT_MASK			\
+		(0x07000000 << MV_EMAC_ENQ_DESC_W1_FW_LOGIC_PORT_OFFS)
+
 
 
 /* Emac Axi Configuration (EMAC_AXI_CFG) */
diff --git a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
index c7ab620..8931ec2 100644
--- a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
+++ b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
@@ -43,6 +43,8 @@ struct pp3_cpu **pp3_cpus;
 static int pp3_ports_num;
 static int pp3_hw_initialized;
 static struct  platform_device *pp3_sysfs;
+struct platform_device *shared_pdev;
+
 
 /* functions */
 static int mv_pp3_poll(struct napi_struct *napi, int budget);
@@ -303,13 +305,11 @@ static struct pp3_pool *pp3_pool_alloc(int pool, int capacity)
 
 	size = sizeof(unsigned int) * capacity;
 
-/*
-	ppool->virt_base = dma_alloc_coherent(NULL, size, &ppool->phys_base, GFP_KERNEL);
+	ppool->virt_base = dma_alloc_coherent(&shared_pdev->dev, size, (dma_addr_t *)&ppool->phys_base, GFP_KERNEL);
 
 	if (!ppool->virt_base)
 		goto oom;
 
-*/
 	return ppool;
 
 oom:
@@ -888,7 +888,7 @@ static int mv_pp3_hw_shared_start(void)
 	/* TODO: Channel create */
 
 	/*cpu_ctrl->chan_id = mv_pp3_chan_create(MV_PP3_CHAN_SIZE, 0, pp3_chan_callback);*/
-
+	/*lock*/
 	return 0;
 oom:
 	for_each_possible_cpu(cpu) {
@@ -912,6 +912,8 @@ static int mv_pp3_sw_shared_probe(struct platform_device *pdev)
 
 	struct mv_pp3_plat_data *plat_data = (struct mv_pp3_plat_data *)pdev->dev.platform_data;
 
+	shared_pdev = pdev;
+
 	pp3_ports_num = plat_data->max_port;
 
 	pp3_sysfs_init();
@@ -955,6 +957,11 @@ oom:
 /*---------------------------------------------------------------------------*/
 static int mv_pp3_netif_init(struct pp3_dev_priv *dev_priv)
 {
+	/*
+		TODO for all emac close rx
+		mv_pp3_emac_mh_en(emac, 0)
+	*/
+
 	if (!pp3_hw_initialized) {
 		mv_pp3_hw_shared_start();
 		pp3_hw_initialized = 1;
-- 
1.7.5.4

