From 9645ee789ef9492db24de477b50aec92be8c6429 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 14 Mar 2013 11:37:43 +0200
Subject: [PATCH 0515/1825] S@R : Added isActiveForBoard[BoardNumber] for each
 S@R value:

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit abb25e084a412c718ed249f023584c19888605a9

- indicates if S@R value is relevant for that BoardNumber
updated mvCtrlSatrInit & mvCtrlSatRWrite

- removed mvBoardIdReadFromSatR and updated mvBoardIdGet with direct S@R read

Change-Id: I28f6f9d9acc93099a3ac00aeb20f4243c7d0d6d1
Reviewed-on: http://vgitil04.il.marvell.com:8080/1328
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   71 +++++---------------
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    4 +-
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |   68 +++++++++---------
 .../arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c |    1 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   36 +++++-----
 5 files changed, 72 insertions(+), 108 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 22d04e0..e386f3c 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -442,11 +442,6 @@ MV_BOOL mvBoardIsPortLoopback(MV_U32 ethPortNum)
 *
 * DESCRIPTION:
 *       This routine extract the controller core clock.
-*       This function uses the controller counters to make identification.
-*		Note: In order to avoid interference, make sure task context switch
-*		and interrupts will not occure during this function operation
-*
-*		 ----- omriii : is above comment still relevant here ??? -----
 *
 * INPUT:
 *
@@ -459,7 +454,6 @@ MV_BOOL mvBoardIsPortLoopback(MV_U32 ethPortNum)
 *******************************************************************************/
 MV_U32 mvBoardTclkGet(MV_VOID)
 {
-	MV_FREQ_MODE freqMode;
 #ifdef CONFIG_MACH_AVANTA_LP_FPGA
 	/* FPGA is limited to 25Mhz */
 	return MV_FPGA_CORE_CLK;
@@ -467,12 +461,11 @@ MV_U32 mvBoardTclkGet(MV_VOID)
 	switch (mvCtrlSatRRead(MV_SATR_CORE_CLK_SELECT)) {
 	case 0:
 		return _166MHz;
-		break;
 	case 1:
 		return _200MHz;
-		break;
 	default:
-		return (MV_U32)MV_ERROR;
+		DB(mvOsPrintf("%s: Error : Board: Read from S@R fail\n", __func__));
+		return _200MHz;
 	}
 #endif
 }
@@ -1617,45 +1610,6 @@ MV_32 mvBoardNandWidthGet(void)
 }
 
 /*******************************************************************************
-* mvBoardIdReadFromSatR
-*
-* DESCRIPTION:
-*	Function name is self describing.
-*
-* INPUT:
-*       None.
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       void
-*
-*******************************************************************************/
-MV_U32 mvBoardIdReadFromSatR(void)
-{
-	MV_U32 boardId;
-	MV_BOARD_SAR_INFO sInfo;
-	MV_U8 tempVal;
-
-#ifdef CONFIG_MACH_AVANTA_LP_FPGA
-	boardId = MV_BOARD_ID_AVANTA_LP_FPGA;
-#else
-	if ( MV_OK == mvBoardSarInfoGet(MV_SATR_BOARD_ID, &sInfo)) {
-		tempVal = MV_REG_READ(MPP_SAMPLE_AT_RESET(sInfo.regNum));
-		boardId = ((tempVal & (sInfo.mask)) >> sInfo.offset);
-	}
-#endif
-
-	if (boardId >= MV_MAX_BOARD_ID) {
-		mvOsPrintf("%s: Error: read wrong board (%d)\n", __func__, boardId);
-		return MV_INVALID_BOARD_ID;
-	}
-
-	return boardId;
-}
-
-/*******************************************************************************
 * mvBoardIdSet - Set Board model
 *
 * DESCRIPTION:
@@ -1673,15 +1627,12 @@ MV_U32 mvBoardIdReadFromSatR(void)
 *       void
 *
 *******************************************************************************/
-MV_BOOL mvBoardIdSet(MV_U32 boardId)
+MV_VOID mvBoardIdSet(MV_U32 boardId)
 {
 	if (boardId >= MV_MAX_BOARD_ID) {
 		mvOsPrintf("%s: Error: wrong boardId (%d)\n", __func__, boardId);
-		return MV_FALSE;
 	}
 
-	gBoardId = boardId;
-
 	board = boardInfoTbl[gBoardId];
 }
 
@@ -1705,9 +1656,19 @@ MV_BOOL mvBoardIdSet(MV_U32 boardId)
 *******************************************************************************/
 MV_U32 mvBoardIdGet(MV_VOID)
 {
-	if (gBoardId == MV_INVALID_BOARD_ID)
-		mvOsWarning();
-	return gBoardId;
+	MV_U32 boardId, tempVal;
+
+#ifdef CONFIG_MACH_AVANTA_LP_FPGA
+	boardId = MV_BOARD_ID_AVANTA_LP_FPGA;
+#else
+	tempVal = MV_REG_READ(MPP_SAMPLE_AT_RESET(1));
+	boardId = ((tempVal & (0xF0)) >> 4);
+#endif
+	if (boardId >= MV_MAX_BOARD_ID) {
+		mvOsPrintf("%s: Error: read wrong board (%d)\n", __func__, boardId);
+		return MV_INVALID_BOARD_ID;
+	}
+	return boardId;
 }
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index fce1859..baaa8a2 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -269,6 +269,7 @@ typedef struct _boardSarInfo {
 	MV_U32 mask;
 	MV_U32 offset;
 	MV_U32 regNum;
+	MV_U32 isActiveForBoard[MV_MAX_BOARD_ID];
 } MV_BOARD_SAR_INFO;
 
 typedef struct _boardConfigTypesInfo {
@@ -276,6 +277,7 @@ typedef struct _boardConfigTypesInfo {
 	MV_U32 mask;
 	MV_U32 offset;
 	MV_U32 regNum;
+	MV_U32 isActiveForBoard[MV_MAX_BOARD_ID];
 } MV_BOARD_CONFIG_TYPE_INFO;
 
 typedef enum _boardMacSpeed {
@@ -498,8 +500,6 @@ MV_U8 mvBoardTwsiAddrTypeGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index);
 MV_U8 mvBoardTwsiAddrGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index);
 MV_32 mvBoardNandWidthGet(void);
 MV_U32 mvBoardIdGet(MV_VOID);
-MV_U32 mvBoardIdReadFromSatR(void);
-MV_BOOL mvBoardIdSet(MV_U32 boardId);
 MV_U32 mvBoardSledCpuNumGet(MV_VOID);
 MV_VOID mvBoardConfigInit(MV_VOID);
 void mvBoardConfigWrite(MV_VOID);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 7956f74..29faa14 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -71,43 +71,43 @@
 
 MV_BOARD_SAR_INFO boardSarInfo[] = {
 /* {{MV_SATR_TYPE_ID SarID, MV_U32 Mask, MV_U32 Offset, MV_U32 regNum}} */
-	{ MV_SATR_CPU_FREQ,		 0x003E0000,		  17,		       1		 },
-	{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,		  22,		       1		 },
-	{ MV_SATR_CPU1_ENABLE,		 0x00008000,		  15,		       0		 },
-	{ MV_SATR_SSCG_DISABLE,		 0x00000002,		  1,		       0		 },
-	{ MV_SATR_I2C0_SERIAL_ROM,	 0X00000001,		  0,		       0		 },
-	{ MV_SATR_EXTERNAL_CPU_RESET,	 0X0,			  0,		       0		 },     /* OMRIII : ASK MAX THE RELEVANCE OF THESE FIELDS */
-	{ MV_SATR_EXTERNAL_CORE_RESET,	 0X0,			  0,		       0		 },     /* OMRIII : ASK MAX THE RELEVANCE OF THESE FIELDS */
-	{ MV_SATR_BOOT_DEVICE,		 0X1F8,			  3,		       0		 },
-	{ MV_SATR_CPU_PLL_XTAL_BYPASS,	 0x00000200,		  9,		       0		 },
-	{ MV_SATR_PEX0_CLOCK,		 0x00000400,		  10,		       0		 },
-	{ MV_SATR_PEX1_CLOCK,		 0x00000800,		  11,		       0		 },
-	{ MV_SATR_REF_CLOCK_ENABLE,	 0x00000004,		  2,		       0		 },
-	{ MV_SATR_TESTER_OPTIONS,	 0x00080000,		  19,		       0		 },
-	{ MV_SATR_CPU0_ENDIANESS,	 0x00001000,		  12,		       0		 },
-	{ MV_SATR_CPU0_NMFI,		 0x00002000,		  13,		       0		 },
-	{ MV_SATR_CPU0_THUMB,		 0x00004000,		  14,		       0		 },
-	{ MV_SATR_EFUSE_BYPASS,		 0x00020000,		  17,		       0		 },
-	{ MV_SATR_POR_BYPASS,		 0x00100000,		  20,		       0		 },
-	{ MV_SATR_BOARD_ID,		 0xF0,			  4,		       1		 },
-	{ MV_SATR_WRITE_CPU_FREQ,	 0X1F,			  0,		       0		 },
-	{ MV_SATR_WRITE_CORE_CLK_SELECT, 0x1,			  0,		       1		 },
-	{ MV_SATR_WRITE_CPU1_ENABLE,	 0x2,			  1,		       1		 },
-	{ MV_SATR_WRITE_SSCG_DISABLE,	 0x4,			  2,		       1		 },
+	{ MV_SATR_CPU_FREQ,		 0x003E0000,	  17,	       1, {1,0,0,0} },
+	{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,	  22,	       1, {1,0,0,0} },
+	{ MV_SATR_CPU1_ENABLE,		 0x00008000,	  15,	       0, {1,0,0,0} },
+	{ MV_SATR_SSCG_DISABLE,		 0x00000002,	  1,	       0, {1,0,0,0} },
+	{ MV_SATR_I2C0_SERIAL_ROM,	 0X00000001,	  0,	       0, {1,0,0,0} },
+	{ MV_SATR_EXTERNAL_CPU_RESET,	 0X00000000,	  0,	       0, {1,0,0,0} },
+	{ MV_SATR_EXTERNAL_CORE_RESET,	 0X00000000,	  0,	       0, {1,0,0,0} },
+	{ MV_SATR_BOOT_DEVICE,		 0X000001F8,	  3,	       0, {1,0,0,0} },
+	{ MV_SATR_CPU_PLL_XTAL_BYPASS,	 0x00000200,	  9,	       0, {1,0,0,0} },
+	{ MV_SATR_PEX0_CLOCK,		 0x00000400,	  10,	       0, {1,0,0,0} },
+	{ MV_SATR_PEX1_CLOCK,		 0x00000800,	  11,	       0, {1,0,0,0} },
+	{ MV_SATR_REF_CLOCK_ENABLE,	 0x00000004,	  2,	       0, {1,0,0,0} },
+	{ MV_SATR_TESTER_OPTIONS,	 0x00080000,	  19,	       0, {1,0,0,0} },
+	{ MV_SATR_CPU0_ENDIANESS,	 0x00001000,	  12,	       0, {1,0,0,0} },
+	{ MV_SATR_CPU0_NMFI,		 0x00002000,	  13,	       0, {1,0,0,0} },
+	{ MV_SATR_CPU0_THUMB,		 0x00004000,	  14,	       0, {1,0,0,0} },
+	{ MV_SATR_EFUSE_BYPASS,		 0x00020000,	  17,	       0, {1,0,0,0} },
+	{ MV_SATR_POR_BYPASS,		 0x00100000,	  20,	       0, {1,0,0,0} },
+	{ MV_SATR_BOARD_ID,		 0x000000F0,	  4,	       1, {1,0,0,0} },
+	{ MV_SATR_WRITE_CPU_FREQ,	 0X0000001F,	  0,	       0, {1,0,1,0} },
+	{ MV_SATR_WRITE_CORE_CLK_SELECT, 0x00000001,	  0,	       1, {1,0,1,0} },
+	{ MV_SATR_WRITE_CPU1_ENABLE,	 0x00000002,	  1,	       1, {1,0,1,0} },
+	{ MV_SATR_WRITE_SSCG_DISABLE,	 0x00000004,	  2,	       1, {1,0,1,0} },
 };
 
 MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[] = {
 /* {{MV_CONFIG_TYPE_ID ConfigID, MV_U32 Mask, MV_U32 Offset, MV_U32 regNum}} */
-	{ MV_CONFIG_MAC0,	       0x3,		 0,		   0 }, /* Reg#0, BITS [0:1] */
-	{ MV_CONFIG_MAC1,	       0xC,		 2,		   0 }, /* Reg#0, BITS [2:3] */
-	{ MV_CONFIG_PON_SERDES,	       0x10,		 4,		   0 }, /* Reg#0, BITS [4] */
-	{ MV_CONFIG_PON_BEN_POLARITY,  0x20,		 5,		   0 }, /* Reg#0, BITS [5] */
-	{ MV_CONFIG_SGMII0_CAPACITY,   0x40,		 6,		   0 }, /* Reg#0, BITS [6] */
-	{ MV_CONFIG_SGMII1_CAPACITY,   0x80,		 7,		   0 }, /* Reg#0, BITS [7] */
-	{ MV_CONFIG_LANE1,	       0x3,		 0,		   1 }, /* Reg#1, BITS [0:1] */
-	{ MV_CONFIG_LANE2,	       0x4,		 2,		   1 }, /* Reg#1, BITS [2] */
-	{ MV_CONFIG_LANE3,	       0X18,		 3,		   1 }, /* Reg#1, BITS [3:4] */
-	{ MV_CONFIG_DEVICE_BUS_MODULE, 0x60,		 5,		   1 }, /* Reg#1, BITS [5:6] */
+	{ MV_CONFIG_MAC0,	       0x3,	 0,	   0, {1,0,0,0} }, /* Reg#0, BITS [0:1] */
+	{ MV_CONFIG_MAC1,	       0xC,	 2,	   0, {1,0,0,0} }, /* Reg#0, BITS [2:3] */
+	{ MV_CONFIG_PON_SERDES,	       0x10,	 4,	   0, {1,0,0,0} }, /* Reg#0, BITS [4] */
+	{ MV_CONFIG_PON_BEN_POLARITY,  0x20,	 5,	   0, {1,0,0,0} }, /* Reg#0, BITS [5] */
+	{ MV_CONFIG_SGMII0_CAPACITY,   0x40,	 6,	   0, {1,0,0,0} }, /* Reg#0, BITS [6] */
+	{ MV_CONFIG_SGMII1_CAPACITY,   0x80,	 7,	   0, {1,0,0,0} }, /* Reg#0, BITS [7] */
+	{ MV_CONFIG_LANE1,	       0x3,	 0,	   1, {1,0,0,0} }, /* Reg#1, BITS [0:1] */
+	{ MV_CONFIG_LANE2,	       0x4,	 2,	   1, {1,0,0,0} }, /* Reg#1, BITS [2] */
+	{ MV_CONFIG_LANE3,	       0X18,	 3,	   1, {1,0,0,0} }, /* Reg#1, BITS [3:4] */
+	{ MV_CONFIG_DEVICE_BUS_MODULE, 0x60,	 5,	   1, {1,0,0,0} }, /* Reg#1, BITS [5:6] */
 };
 
 /*******************************************************************************
@@ -396,6 +396,6 @@ MV_BOARD_INFO avanta_lp_customer_board_info = {
  * All supported avanta boards
  */
 MV_BOARD_INFO *boardInfoTbl[] = {
-	&avanta_lp_fpga_board_info,
 	&db88f6600_board_info,
+	&avanta_lp_fpga_board_info,
 };
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c b/arch/arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c
index f8db747..f6537c7 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c
@@ -119,6 +119,7 @@ MV_U32 mvCpuPclkGet(MV_VOID)
 MV_U32 mvCpuL2ClkGet(MV_VOID)
 {
 	MV_FREQ_MODE freqMode;
+
 	if (MV_ERROR != mvCtrlCpuDdrL2FreqGet(&freqMode))
 		return (MV_U32)(1000000 * simple_strtoul(freqMode.l2Freq, NULL, 16));
 	else
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 3a1a6cc..2287476 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -231,27 +231,27 @@ MV_STATUS mvCtrlEnvInit(MV_VOID)
 *******************************************************************************/
 MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField,MV_SATR_TYPE_ID satrReadField, MV_U8 val)
 {
-	MV_BOARD_SAR_INFO sInfo;
+	MV_BOARD_SAR_INFO sarInfo;
 	MV_U32 readVal, tmpVal;
 	if ((satrReadField < MV_SATR_READ_MAX_OPTION) && (satrWriteField < MV_SATR_WRITE_MAX_OPTION)) {
-		if ( MV_OK == mvBoardConfigTypeGet(satrWriteField, &sInfo))
+		if ( mvBoardSarInfoGet(satrWriteField, &sarInfo) && sarInfo.isActiveForBoard[mvBoardIdGet()])
 		{
 			/* read */
-			readVal = mvBoardTwsiGet(BOARD_DEV_TWSI_SATR, sInfo.regNum , 0);
+			readVal = mvBoardTwsiGet(BOARD_DEV_TWSI_SATR, sarInfo.regNum , 0);
 			if ((MV_U8)readVal == (MV_U8)MV_ERROR)
 				return MV_ERROR;
 
 			/* modify */
-			readVal &= !(sInfo.mask);  		/* clean old value */
-			readVal &= (val <<  sInfo.offset);	/* save new value */
+			readVal &= !(sarInfo.mask);  		/* clean old value */
+			readVal &= (val <<  sarInfo.offset);	/* save new value */
 
 			/* write */
-			tmpVal = mvBoardTwsiSet(BOARD_DEV_TWSI_SATR, sInfo.regNum, 0,readVal);
+			tmpVal = mvBoardTwsiSet(BOARD_DEV_TWSI_SATR, sarInfo.regNum, 0,readVal);
 			if ((MV_U8)tmpVal == (MV_U8)MV_ERROR)
 				return MV_ERROR;
 
 			/* verify */
-			tmpVal = mvBoardTwsiGet(BOARD_DEV_TWSI_SATR, sInfo.regNum , 0);
+			tmpVal = mvBoardTwsiGet(BOARD_DEV_TWSI_SATR, sarInfo.regNum , 0);
 			if (tmpVal!=readVal)
 				return MV_ERROR;
 
@@ -259,6 +259,8 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField,MV_SATR_TYPE_ID satrRea
 			satrOptionsConfig[satrReadField] = readVal;
 			return MV_OK;
 		}
+		else
+			printf("\n%s: Error: Requested S@R config is not relevant for the current board\n, __func__");
 	}
 	return MV_ERROR;
 }
@@ -308,8 +310,9 @@ MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode)
 		*freqMode = freqTable[freqModeSatRValue];
 		return MV_OK;
 	}
-	else
-		return MV_ERROR;
+
+	DB(mvOsPrintf("Board: Read from S@R fail\n"));
+	return MV_ERROR;
 }
 
 /*******************************************************************************
@@ -351,8 +354,8 @@ MV_U32 mvCtrlConfigGet(MV_CONFIG_TYPE_ID configField)
 void mvCtrlSatrInit(void)
 {
 	MV_U8 tempVal[2];
-	MV_BOARD_SAR_INFO sInfo;
-	MV_BOARD_CONFIG_TYPE_INFO cInfo;
+	MV_BOARD_SAR_INFO sarInfo;
+	MV_BOARD_CONFIG_TYPE_INFO confInfo;
 	int i = 0;
 
 	/* initialize all S@R & Board configuration fields to -1 (MV_ERROR) */
@@ -366,9 +369,9 @@ void mvCtrlSatrInit(void)
 
 	/* Read Sample @ Reset configuration, memory access read : */
 	for (i = 0; i < MV_SATR_READ_MAX_OPTION; i++) {
-		if ( MV_OK == mvBoardSarInfoGet(i, &sInfo)) {
-			tempVal[0] = MV_REG_READ(MPP_SAMPLE_AT_RESET(sInfo.regNum));
-			satrOptionsConfig[sInfo.sarid] = ((tempVal[0]  & (sInfo.mask)) >> sInfo.offset);
+		if ( mvBoardSarInfoGet(i, &sarInfo) && sarInfo.isActiveForBoard[mvBoardIdGet()]) {
+			tempVal[0] = MV_REG_READ(MPP_SAMPLE_AT_RESET(sarInfo.regNum));
+			satrOptionsConfig[sarInfo.sarid] = ((tempVal[0]  & (sarInfo.mask)) >> sarInfo.offset);
 		}
 	}
 
@@ -388,9 +391,8 @@ void mvCtrlSatrInit(void)
 
 	/* Save values Locally */
 	for (i = 0; i < MV_CONFIG_TYPE_MAX_OPTION; i++)
-		if ( MV_OK == mvBoardConfigTypeGet(i, &cInfo))
-			boardOptionsConfig[cInfo.configid] = ((tempVal[cInfo.regNum] & (cInfo.mask)) >> cInfo.offset);
-
+		if ( mvBoardConfigTypeGet(i, &confInfo) && confInfo.isActiveForBoard[mvBoardIdGet()])
+			boardOptionsConfig[confInfo.configid] = ((tempVal[confInfo.regNum] & (confInfo.mask)) >> confInfo.offset);
 }
 /*******************************************************************************
 * mvCtrlDevFamilyIdGet - Get Device ID
-- 
1.7.5.4

