From e0bc11405fe66f921a9f80bcdaf8b98220ab701f Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Mon, 22 Jul 2013 12:20:28 +0300
Subject: [PATCH 0859/1825] alp: pcie: add support for PCIe IO space

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c4b00011ecbb78ac8c42ea767b0f22866d6c5b35

	Rationale: some old PCIe cards may demand usage
	of PCIe IO space to map configuration registers.

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: Id2e90b3825c9d2cb7e8367b90c9f4c5395862c39
Reviewed-on: http://vgitil04.il.marvell.com:8080/2752
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/pex.c    |   38 +++++++++++++++++++++++++++++---------
 arch/arm/mach-avantalp/sysmap.c |   19 ++++++++-----------
 2 files changed, 37 insertions(+), 20 deletions(-)

diff --git a/arch/arm/mach-avantalp/pex.c b/arch/arm/mach-avantalp/pex.c
index a59e0e7..5f06589 100644
--- a/arch/arm/mach-avantalp/pex.c
+++ b/arch/arm/mach-avantalp/pex.c
@@ -216,6 +216,7 @@ static int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 {
 	struct resource *res;
 	u32 mem_base, mem_size;
+	u32 io_base, io_size;
 
 	if (mvUnitMapIsPexMine(nr) == MV_FALSE)
 		return 0;
@@ -233,20 +234,39 @@ static int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 	sys->mv_controller_num = nr;
 	sys->map_irq = mv_get_irqmap_func[nr];
 
+	/*
+	 * Init PCIe memory space
+	 */
 	mem_base  = mv_pci_mem_base_get(nr);
 	mem_size  = mv_pci_mem_size_get(nr);
 
-	res->start = mem_base;
-	res->end   = mem_base + mem_size - 1;
-	res->name  = "PCIx Memory Primary";
-	res->flags = IORESOURCE_MEM;
+	res[0].start = mem_base;
+	res[0].end   = mem_base + mem_size - 1;
+	res[0].name  = "PCIx Memory Primary";
+	res[0].flags = IORESOURCE_MEM;
 
-	if (request_resource(&iomem_resource, res)) {
-		pr_warn("%s: request_resource failed (nr = %d)\n", __func__, nr);
-		return 0;
-	}
+	if (request_resource(&iomem_resource, &res[0]))
+		panic("Request PCIe%d Memory resource failed\n", nr);
+
+	pci_add_resource_offset(&sys->resources, &res[0], sys->mem_offset);
+
+	/*
+	 * Init PCIe IO space
+	 */
+	io_base   = mv_pci_io_base_get(nr);
+	io_size   = mv_pci_io_size_get(nr);
+
+	res[1].start = io_base - IO_SPACE_REMAP;
+	res[1].end   = io_base - IO_SPACE_REMAP + io_size - 1;
+	res[1].name  = "PCIx I/O Primary";
+	res[1].flags = IORESOURCE_IO;
+
+	if (request_resource(&ioport_resource, &res[1]))
+		panic("Request PCIe%d IO resource failed\n", nr);
+
+	sys->io_offset = 0;
+	pci_add_resource_offset(&sys->resources, &res[1], sys->io_offset);
 
-	pci_add_resource_offset(&sys->resources, res, sys->mem_offset);
 	return 1;
 }
 
diff --git a/arch/arm/mach-avantalp/sysmap.c b/arch/arm/mach-avantalp/sysmap.c
index 000e443..5162473 100644
--- a/arch/arm/mach-avantalp/sysmap.c
+++ b/arch/arm/mach-avantalp/sysmap.c
@@ -23,6 +23,9 @@
 
 struct map_desc MEM_TABLE[] = {
 	/* no use for pex mem remap */
+	{ PEX0_IO_VIRT_BASE,		__phys_to_pfn(PEX0_IO_PHYS_BASE),	SZ_1M,		MT_DEVICE },
+	{ PEX1_IO_VIRT_BASE,		__phys_to_pfn(PEX1_IO_PHYS_BASE),	SZ_1M,		MT_DEVICE },
+
 	{ INTER_REGS_VIRT_BASE,		__phys_to_pfn(INTER_REGS_PHYS_BASE),	SZ_1M,		MT_DEVICE },
 	{ PP2_CPU0_VIRT_BASE,		__phys_to_pfn(PP2_CPU0_PHYS_BASE),	PP2_SIZE,	MT_DEVICE },
 #ifdef CONFIG_SMP
@@ -43,9 +46,9 @@ MV_CPU_DEC_WIN SYSMAP_ALP_6660[] = {
 	{{DEVICE_CS2_PHYS_BASE,		0,	DEVICE_CS2_SIZE,	},	TBL_UNUSED,		DIS},	/* DEVICE_CS2 */
 	{{DEVICE_CS3_PHYS_BASE,		0,	DEVICE_CS3_SIZE,	},	TBL_UNUSED,		DIS},	/* DEVICE_CS3 */
 	{{PEX0_MEM_PHYS_BASE,		0,	PEX0_MEM_SIZE		},	0,			EN},	/* PEX0_MEM */
-	{{PEX0_IO_PHYS_BASE,		0,	PEX0_IO_SIZE		},	TBL_UNUSED,		DIS},	/* PEX0_IO */
-	{{PEX1_MEM_PHYS_BASE,		0,	PEX1_MEM_SIZE		},	1,			EN},	/* PEX1_MEM */
-	{{PEX1_IO_PHYS_BASE,		0,	PEX1_IO_SIZE		},	TBL_UNUSED,		DIS},	/* PEX1_IO */
+	{{PEX0_IO_PHYS_BASE,		0,	PEX0_IO_SIZE		},	1,			EN},	/* PEX0_IO */
+	{{PEX1_MEM_PHYS_BASE,		0,	PEX1_MEM_SIZE		},	2,			EN},	/* PEX1_MEM */
+	{{PEX1_IO_PHYS_BASE,		0,	PEX1_IO_SIZE		},	3,			EN},	/* PEX1_IO */
 	{{INTER_REGS_PHYS_BASE,		0,	INTER_REGS_SIZE		},	MV_AHB_TO_MBUS_INTREG_WIN, EN},	/* INTER_REGS */
 	{{UART_REGS_BASE,		0,	UART_SIZE		},	TBL_UNUSED,		DIS},	/* DMA_UART */
 	{{SPI_CS0_PHYS_BASE,		0,	SPI_CS0_SIZE		},	14,			EN},	/* SPI_CS0 */
@@ -80,7 +83,7 @@ MV_CPU_DEC_WIN SYSMAP_ALP_6650[] = {
 	{{DEVICE_CS2_PHYS_BASE,		0,	DEVICE_CS2_SIZE,	},	TBL_UNUSED,		DIS},	/* DEVICE_CS2 */
 	{{DEVICE_CS3_PHYS_BASE,		0,	DEVICE_CS3_SIZE,	},	TBL_UNUSED,		DIS},	/* DEVICE_CS3 */
 	{{PEX0_MEM_PHYS_BASE,		0,	PEX0_MEM_SIZE		},	0,			EN},	/* PEX0_MEM */
-	{{PEX0_IO_PHYS_BASE,		0,	PEX0_IO_SIZE		},	TBL_UNUSED,		DIS},	/* PEX0_IO */
+	{{PEX0_IO_PHYS_BASE,		0,	PEX0_IO_SIZE		},	1,			EN},	/* PEX0_IO */
 	{{TBL_UNUSED,			0,	TBL_UNUSED		},	TBL_UNUSED,		DIS},	/* PEX1_MEM */
 	{{TBL_UNUSED,			0,	TBL_UNUSED		},	TBL_UNUSED,		DIS},	/* PEX1_IO */
 	{{INTER_REGS_PHYS_BASE,		0,	INTER_REGS_SIZE		},	MV_AHB_TO_MBUS_INTREG_WIN, EN},	/* INTER_REGS */
@@ -235,11 +238,5 @@ MV_TARGET mv_pci_io_target_get(int ifNum)
 
 int mv_is_pci_io_mapped(int ifNum)
 {
-	/* FIXME: First 8 address decode windows are statically assigned
-	 * for 8 PCIE mem BARs.
-	 * This is disabled as long that no more windows are available for
-	 * I/O BARs
-	 */
-
-	return 0;
+	return 1;
 }
-- 
1.7.5.4

