From 5a5892421b954d23816c90e09937c2b0860b7bfb Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <zertsekel@gmail.com>
Date: Fri, 18 Jan 2013 18:41:07 +0200
Subject: [PATCH 0455/1825] ALP: Fix various small compilation issues

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit ea3f5752589fe49daa59c435ae63d404162ef9ac

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I840e99c3cd203cbdc838a65178ff5a4e49c073fd
Reviewed-on: http://vgitil04.il.marvell.com:8080/1231
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/core.c                  |   16 +++++++---------
 arch/arm/mach-avantalp/include/mach/avantalp.h |    2 --
 arch/arm/mach-avantalp/sysmap.c                |   23 ++++++++---------------
 3 files changed, 15 insertions(+), 26 deletions(-)

diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index 03645e9..68d87c4 100755
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -21,7 +21,6 @@
 #include <linux/device.h>
 #include <linux/slab.h>
 #include <linux/string.h>
-#include <linux/sysdev.h>
 #include <linux/mbus.h>
 #include <asm/mach/time.h>
 #include <linux/clocksource.h>
@@ -198,7 +197,7 @@ extern u32 mvIsUsbHost;
 
 static int __init parse_tag_mv_uboot(const struct tag *tag)
 {
-    	unsigned int mvUbootVer = 0;
+	unsigned int mvUbootVer = 0;
 	int i = 0;
 
 	printk("Using UBoot passing parameters structure\n");
@@ -221,7 +220,7 @@ static int __init parse_tag_mv_uboot(const struct tag *tag)
 #endif
 
 #ifdef CONFIG_MV_NAND
-               /* get NAND ECC type(1-bit or 4-bit) */
+	/* get NAND ECC type(1-bit or 4-bit) */
 	if ((mvUbootVer >> 8) >= 0x3040c)
 		mv_nand_ecc = read_tag(tag->u.mv_uboot.nand_ecc);
 	else
@@ -605,7 +604,7 @@ static void io_coherency_init(void)
 	MV_REG_WRITE(MV_CIB_CTRL_CFG_REG, reg);
 
 #ifndef CONFIG_SMP
-        /* enable CPUs in SMP group on Fabric coherency */
+	/* enable CPUs in SMP group on Fabric coherency */
 	reg = MV_REG_READ(MV_COHERENCY_FABRIC_CTRL_REG);
 	reg &= ~(0x3<<24);
 	reg |= 1<<24;
@@ -675,7 +674,6 @@ static void cpu_fabric_common_init(void)
 #endif
 }
 
-
 /*****************************************************************************
  * FPGA BOARD: Main Initialization
  ****************************************************************************/
@@ -686,7 +684,7 @@ static void __init alp_fpga_init(void)
 	cpu_fabric_common_init();
 
 	/* Select appropriate Board ID for Machine */
-	gBoardId = FPGA_88F78XX0_ID;
+	gBoardId = MV_BOARD_ID_AVANTA_LP_FPGA;
 	/* Bypass serdes reconfiguration since already done at bootloader */
 	mvBoardSerdesConfigurationEnableSet(MV_FALSE);
 
@@ -740,8 +738,8 @@ static void __init alp_fpga_init(void)
 
 MACHINE_START(AVANTA_LP_FPGA, "Marvell Avanta LP FPGA Board")
 	.atag_offset	= 0x00000100,
-	.map_io			= alp_map_io,
-	.init_irq		= alp_init_irq,
-	.timer			= &alp_timer,
+	.map_io		= alp_map_io,
+	.init_irq	= alp_init_irq,
+	.timer		= &alp_timer,
 	.init_machine	= alp_fpga_init,
 MACHINE_END
diff --git a/arch/arm/mach-avantalp/include/mach/avantalp.h b/arch/arm/mach-avantalp/include/mach/avantalp.h
index fed55a9..151a60e 100644
--- a/arch/arm/mach-avantalp/include/mach/avantalp.h
+++ b/arch/arm/mach-avantalp/include/mach/avantalp.h
@@ -13,8 +13,6 @@
 #ifndef __ASM_ARCH_AURORA_H
 #define __ASM_ARCH_AURORA_H
 
-#include <mach/vmalloc.h>
-
 /****************************************************************/
 /******************* System Address Mapping *********************/
 /****************************************************************/
diff --git a/arch/arm/mach-avantalp/sysmap.c b/arch/arm/mach-avantalp/sysmap.c
index e7579ab..b491273 100644
--- a/arch/arm/mach-avantalp/sysmap.c
+++ b/arch/arm/mach-avantalp/sysmap.c
@@ -19,15 +19,11 @@
 #include "ctrlEnv/sys/mvCpuIf.h"
 #include "boardEnv/mvBoardEnvLib.h"
 #include <asm/mach/map.h>
-#include <asm/smp_twd.h>
-#include "ca9x2.h"
-/* for putstr */
-/* #include <asm/arch/uncompress.h> */
 
 MV_CPU_DEC_WIN* mv_sys_map(void);
 
 struct map_desc  MEM_TABLE[] =	{
-	/* no use for pex mem remap */	
+	/* no use for pex mem remap */
 	{ INTER_REGS_BASE,		__phys_to_pfn(INTER_REGS_PHYS_BASE),	SZ_1M,  	     	MT_DEVICE},
 };
 
@@ -80,13 +76,11 @@ MV_CPU_DEC_WIN SYSMAP_ARMADA_XP[] = {
 	{{TBL_TERM,				TBL_TERM, TBL_TERM	},	TBL_TERM,	TBL_TERM}
 };
 
-
 MV_CPU_DEC_WIN* mv_sys_map(void)
 {
 	return SYSMAP_ARMADA_XP;
 }
 
-
 #if defined(CONFIG_MV_INCLUDE_CESA)
 u32 mv_crypto_phys_base_get(u8 chan)
 {
@@ -100,11 +94,10 @@ u32 mv_crypto_virt_base_get(u8 chan)
 
 void __init alp_map_io(void)
 {
-        iotable_init(MEM_TABLE, ARRAY_SIZE(MEM_TABLE));
-		twd_base = INTER_REGS_BASE + A9_MPCORE_TWD;
+	iotable_init(MEM_TABLE, ARRAY_SIZE(MEM_TABLE));
 }
 
-static u32 mv_pci_mem_base[] = 
+static u32 mv_pci_mem_base[] =
 {
 	PEX0_MEM_PHYS_BASE,
 	PEX1_MEM_PHYS_BASE,
@@ -118,7 +111,7 @@ static u32 mv_pci_mem_base[] =
 	PEX9_MEM_PHYS_BASE,
 };
 
-static u32 mv_pci_mem_size[] = 
+static u32 mv_pci_mem_size[] =
 {
 	PEX0_MEM_SIZE,
 	PEX1_MEM_SIZE,
@@ -132,7 +125,7 @@ static u32 mv_pci_mem_size[] =
 	PEX9_MEM_SIZE,
 };
 
-static u32 mv_pci_io_base[] = 
+static u32 mv_pci_io_base[] =
 {
 	PEX0_IO_PHYS_BASE,
 	PEX1_IO_PHYS_BASE,
@@ -146,7 +139,7 @@ static u32 mv_pci_io_base[] =
 	PEX9_IO_PHYS_BASE
 };
 
-static u32 mv_pci_io_size[] = 
+static u32 mv_pci_io_size[] =
 {
 	PEX0_IO_SIZE,
 	PEX1_IO_SIZE,
@@ -160,7 +153,7 @@ static u32 mv_pci_io_size[] =
 	PEX9_IO_SIZE,
 };
 
-static MV_TARGET mv_pci_io_target[] = 
+static MV_TARGET mv_pci_io_target[] =
 {
 	PEX0_IO,
 	PEX1_IO,
@@ -206,6 +199,6 @@ int mv_is_pci_io_mapped(int ifNum)
 	   This is disabled as long that no more windows are available for
 	   I/O BARs
 	*/
-	    
+
 	return 0;
 }
-- 
1.7.5.4

