From 7bcbf635723f36a94fcc6dcaa67c53c7783ac2fd Mon Sep 17 00:00:00 2001
From: Piotr Ziecik <kosmo@semihalf.com>
Date: Tue, 28 Jan 2014 11:22:41 +0100
Subject: [PATCH 1377/1825] alp: sdd_if: Use SoC Global timer in SMP mode.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit eda35732b5e091c20a813eea2cd296c24d8870e8

	Use global SoC timer accessible from all CPUs
	if SDD Interface is used in non-AMP environment.

Change-Id: I52689624888fc5517922251bc32283c705969475
Signed-off-by: Piotr Ziecik <kosmo@semihalf.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5834
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_phone/slic/sdd_if.c          |   25 +++++++++++++++++--
 1 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/sdd_if.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/sdd_if.c
index 2a9abc6..104a5b3 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/sdd_if.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/sdd_if.c
@@ -75,7 +75,9 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "boardEnv/mvBoardEnvLib.h"
 #include "cpu/mvCpu.h"
 
-/* SoC per-cpu timer */
+#ifdef CONFIG_MV_AMP_ENABLE
+
+/* Use SoC Per-CPU Timer as all Global Timers are busy. */
 #define	TIMER_CTRL		(MV_CPUIF_REGS_OFFSET(whoAmI()) + 0x40)
 #define  TIMER_EN(x)		(1 << (2 * x))
 #define  TIMER_RELOAD_EN(x)	(2 << (2 * x))
@@ -84,14 +86,31 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define TIMER_RELOAD(x)		(MV_CPUIF_REGS_OFFSET(whoAmI()) + 0x50 + (8 * x))
 #define TIMER_VAL(x)		(MV_CPUIF_REGS_OFFSET(whoAmI()) + 0x54 + (8 * x))
 
+#define DFEV_TIMER	0
+#define DFEV_TIMER_IRQ	IRQ_PRIV_SOC_PRIV_TIMER0
+
+#else /* !CONFIG_MV_AMP_ENABLE */
+
+/* Use SoC Global Timer */
+#define TIMER_CTRL		(MV_CNTMR_REGS_OFFSET + 0x0000)
+#define  TIMER_EN(x)		(1 << (2 * x))
+#define  TIMER_RELOAD_EN(x)	(2 << (2 * x))
+#define TIMER_CAUSE		(MV_CNTMR_REGS_OFFSET + 0x0004)
+#define  TIMER_INT_CLR(x)	(~(1 << (8 * x)))
+#define TIMER_RELOAD(x)		(MV_CNTMR_REGS_OFFSET + 0x0010 + (8 * x))
+#define TIMER_VAL(x)		(MV_CNTMR_REGS_OFFSET + 0x0014 + (8 * x))
+
+#define DFEV_TIMER	3
+#define DFEV_TIMER_IRQ	IRQ_GLOBAL_TIMER(DFEV_TIMER)
+
+#endif /* !CONFIG_MV_AMP_ENABLE */
+
 #define SSI_RESET	19
 #define SSI_CLK		20
 #define SSI_CLKO	21
 #define SSI_RX		22
 #define SSI_TX		23
 
-#define DFEV_TIMER	0
-#define DFEV_TIMER_IRQ	IRQ_PRIV_SOC_PRIV_TIMER0
 
 static irq_handler_t sdd_if_tick;
 
-- 
1.7.5.4

