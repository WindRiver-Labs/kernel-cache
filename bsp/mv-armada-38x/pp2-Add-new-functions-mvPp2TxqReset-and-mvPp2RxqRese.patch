From 2906f4466eb97b5a434c901d455affb36213a438 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Thu, 8 Aug 2013 16:02:49 -0400
Subject: [PATCH 0943/1825] pp2: Add new functions mvPp2TxqReset and
 mvPp2RxqReset

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 501b90b88e37aaf2bbba0b50f7b389a8e1240084

Change-Id: I3cf827f6af08d656ae81429a59ee376b7a782a87
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2990
Reviewed-by: Igor Patrik <igorp@marvell.com>
Tested-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c |   56 +++++++++++++++--------
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h |    3 +
 2 files changed, 39 insertions(+), 20 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
index 1acd3b8..254de76 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
@@ -595,21 +595,31 @@ int mvPp2RxqPktsCoalGet(int port, int rxq)
 	return (regVal & MV_PP2_OCCUPIED_THRESH_MASK) >> MV_PP2_OCCUPIED_THRESH_OFFSET;
 }
 
+void mvPp2RxqReset(int port, int rxq)
+{
+	MV_PP2_PHYS_RXQ_CTRL *pRxq;
+	int prxq;
+
+	prxq = mvPp2LogicRxqToPhysRxq(port, rxq);
+	pRxq = &mvPp2PhysRxqs[prxq];
+
+	mvPp2DescRingReset(&pRxq->queueCtrl);
+	/* zero occupied and non-occupied counters - direct access */
+	mvPp2WrReg(MV_PP2_RXQ_STATUS_REG(prxq), 0);
+
+	/* zero next descriptor index - indirect access */
+	mvPp2WrReg(MV_PP2_RXQ_NUM_REG, prxq);
+	mvPp2WrReg(MV_PP2_RXQ_INDEX_REG, 0);
+}
+
 /* Reset all RXQs */
 void mvPp2RxReset(int port)
 {
-	int rxq, prxq;
 	MV_PP2_PORT_CTRL *pPortCtrl = mvPp2PortCtrl[port];
-	MV_PP2_PHYS_RXQ_CTRL *pRxq;
+	int rxq;
 
-	for (rxq = 0; rxq < pPortCtrl->rxqNum ; rxq++) {
-		prxq = mvPp2LogicRxqToPhysRxq(port, rxq);
-		pRxq = &mvPp2PhysRxqs[prxq];
-
-		mvPp2DescRingReset(&pRxq->queueCtrl);
-		mvPp2WrReg(MV_PP2_RXQ_NUM_REG, prxq);
-		mvPp2WrReg(MV_PP2_RXQ_INDEX_REG, 0);
-	}
+	for (rxq = 0; rxq < pPortCtrl->rxqNum ; rxq++)
+		mvPp2RxqReset(port, rxq);
 }
 /*-------------------------------------------------------------------------------*/
 /* TXQ */
@@ -831,21 +841,27 @@ int mvPp2TxDonePktsCoalGet(int port, int txp, int txq)
 	return (regVal & MV_PP2_TRANSMITTED_THRESH_MASK) >> MV_PP2_TRANSMITTED_THRESH_OFFSET;
 }
 
+void mvPp2TxqReset(int port, int txp, int txq)
+{
+	int ptxq;
+	MV_PP2_PHYS_TXQ_CTRL *pTxq;
+
+	ptxq = MV_PPV2_TXQ_PHYS(port, txp, txq);
+	pTxq = &mvPp2PhysTxqs[ptxq];
+
+	mvPp2DescRingReset(&pTxq->queueCtrl);
+	mvPp2WrReg(MV_PP2_TXQ_NUM_REG, ptxq);
+	mvPp2WrReg(MV_PP2_TXQ_INDEX_REG, 0);
+}
+
 /* Reset all TXQs */
 void mvPp2TxpReset(int port, int txp)
 {
-	int txq, ptxq;
-	MV_PP2_PHYS_TXQ_CTRL *pTxq;
+	int txq;
 	MV_PP2_PORT_CTRL *pPortCtrl = mvPp2PortCtrl[port];
 
-	for (txq = 0; txq < pPortCtrl->txqNum; txq++) {
-		ptxq = MV_PPV2_TXQ_PHYS(port, txp, txq);
-		pTxq = &mvPp2PhysTxqs[ptxq];
-
-		mvPp2DescRingReset(&pTxq->queueCtrl);
-		mvPp2WrReg(MV_PP2_TXQ_NUM_REG, ptxq);
-		mvPp2WrReg(MV_PP2_TXQ_INDEX_REG, 0);
-	}
+	for (txq = 0; txq < pPortCtrl->txqNum; txq++)
+		mvPp2TxqReset(port, txp, txq);
 }
 
 /* Allocate and initialize descriptors for temporary TXQ */
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
index ac105e3..565283a 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
@@ -519,6 +519,7 @@ MV_STATUS mvPp2PortLogicRxqMapDel(int port, int lrxq);
 /* Allocate and initialize descriptors for RXQ */
 MV_PP2_PHYS_RXQ_CTRL *mvPp2RxqInit(int port, int rxq, int descNum);
 void mvPp2RxqDelete(int port, int queue);
+void mvPp2RxqReset(int port, int queue);
 
 /* Allocate and initialize all physical RXQs.
    This function must be called before any use of RXQ */
@@ -560,6 +561,7 @@ MV_STATUS mvPp2TxDonePktsCoalSet(int port, int txp, int txq, MV_U32 pkts);
 int mvPp2TxDonePktsCoalGet(int port, int txp, int txq);
 
 void mvPp2TxpReset(int port, int txp);
+void mvPp2TxqReset(int port, int txp, int txq);
 
 MV_STATUS mvPp2TxqTempInit(int descNum, int hwfNum);
 MV_VOID mvPp2TxqTempDelete(MV_VOID);
@@ -629,6 +631,7 @@ MV_VOID mvPp2AggrTxqShow(int cpu, int mode);
 void mvPp2PhysTxqRegs(int txq);
 void mvPp2PortTxqRegs(int port, int txp, int txq);
 void mvPp2AggrTxqRegs(int cpu);
+void mvPp2TxRegs(void);
 void mvPp2AddrDecodeRegs(void);
 void mvPp2TxSchedRegs(int port, int txp);
 void mvPp2BmPoolRegs(int pool);
-- 
1.7.5.4

