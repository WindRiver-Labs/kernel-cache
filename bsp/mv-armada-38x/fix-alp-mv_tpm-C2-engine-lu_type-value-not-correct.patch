From 51dc790561c87212c788a1f871375c9330240516 Mon Sep 17 00:00:00 2001
From: Jing Hua <jinghua@marvell.com>
Date: Wed, 28 May 2014 09:52:11 +0800
Subject: [PATCH 1684/1825] fix: alp: mv_tpm: C2 engine lu_type value not
 correct

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit d2bda08dab091c282d7cb1eff499ebaa8691ee2f

	after merge capability, C2 engine lu_type is reassigned to uncorrect value.
	- tpm_mng_cap_merge_flow, if no caps in flow, do not merge.
	- sfs_tpm_init_cfg_dump, dump CnM support INIT param.
	- tpm_db_mng_free_c2_lu_type_get, start with the last possible lu_type value.
	- tpm_cls_init, add MTU value to error print.

Change-Id: Idf2c153e0b08f06d2a586d5062a7c4f84e7ae6d5
Signed-off-by: Jing Hua <jinghua@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8250
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_tpm/src/conf/tpm_db.c        |    2 +-
 .../mv_drivers_lsp/mv_tpm/src/conf/tpm_mng.c       |    6 ++++++
 .../mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c       |    2 +-
 .../mv_tpm/src/sysfs/tpm_sysfs_init.c              |    6 ++++++
 4 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/conf/tpm_db.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/conf/tpm_db.c
index 73d6474..fe37131 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/conf/tpm_db.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/conf/tpm_db.c
@@ -3428,7 +3428,7 @@ int tpm_db_mng_free_c2_lu_type_get(unsigned char *lu_type)
 {
 	int loop;
 
-	for (loop = 0; loop < TPM_C2_LKP_TYPE_MAX; loop++) {
+	for (loop = TPM_C2_LKP_TYPE_MAX - 1; loop >= 0; loop--) {
 		if (g_tpm_db->mng_db.c2_lu_type_cntr[loop])
 			continue;
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/conf/tpm_mng.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/conf/tpm_mng.c
index f30e90b..8e90020 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/conf/tpm_mng.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/conf/tpm_mng.c
@@ -2184,8 +2184,12 @@ int tpm_mng_cap_merge_flow(
 
 	memcpy(cap_arr_out, cap_arr_in, cap_num * sizeof(struct tpm_db_mng_flow_cap_conf_t));
 
+#ifdef CONFIG_MV_ETH_PP2_1
+	loop = 0;
+#else
 	/* go through caps, not start with CPU queue */
 	loop = 1;
+#endif
 	while (loop < cap_num) {
 		/* if it is not C2 cap, or is not CLS cap, or this cap does not have field_bm, could not be merged */
 		if ((cap_arr_in[loop].eng_no != TPM_ENGINE_C2)
@@ -2401,6 +2405,8 @@ int tpm_mng_cap_merge(void)
 		tpm_ret = tpm_db_mng_cap_in_flow_get(flow_id, cap_arr, &cap_num);
 		IF_ERROR_STR_FREE_2(TPM_MNG_MOD, tpm_ret, cap_arr, cap_arr_tmp,
 			"get CAPs failed for flow_id(%d)\n", flow_id);
+		if (0 == cap_num)
+			continue;
 
 		tpm_ret = tpm_mng_cap_merge_flow(cap_num, cap_arr, cap_arr_tmp);
 		IF_ERROR_STR_FREE_2(TPM_MNG_MOD, tpm_ret, cap_arr, cap_arr_tmp,
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c
index 29a307a..c648e58 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_cls.c
@@ -2130,7 +2130,7 @@ int tpm_cls_init(void)
 
 	/* set default MTU size */
 	rc = mvPp2V1ClsHwMtuSet(0, TPM_CLS_DEF_MTU);
-	IF_ERROR_STR(TPM_CLS_MOD, rc, "set default MTU size (0x%x) failed\n");
+	IF_ERROR_STR(TPM_CLS_MOD, rc, "set default MTU size (0x%x) failed\n", TPM_CLS_DEF_MTU);
 
 	tpm_db_cls_init();
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/sysfs/tpm_sysfs_init.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/sysfs/tpm_sysfs_init.c
index 8507f46..4750285 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/sysfs/tpm_sysfs_init.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/sysfs/tpm_sysfs_init.c
@@ -1619,6 +1619,12 @@ int sfs_tpm_init_cfg_dump(char *buf)
 	printk(KERN_INFO "QoS table ext: %s\n", tpm_init_lookup_enum_str(TPM_INIT_ENUM_QOS_TABLE_OWNER, value));
 	printk(KERN_INFO "\n");
 
+	/* Dump cnm support */
+	ret_code = tpm_db_generic_param_get(TPM_DB_PARAM_CNM_SUPPORT, &value);
+	IF_ERROR(TPM_SYSFS_MOD, ret_code);
+	printk(KERN_INFO "cnm support: %d\n", value);
+	printk(KERN_INFO "\n");
+
 	return off;
 }
 
-- 
1.7.5.4

