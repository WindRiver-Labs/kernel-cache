From 0072ac2c101c98e69dd1f4d75ce9b469331b268d Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Wed, 10 Apr 2013 16:59:43 +0300
Subject: [PATCH 0567/1825] ALP: updated MPP group types mechanism to be
 aligned with backward compatibilty

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c40281c46f7befea573c623db08d7d84791a1f96

- removed dependency on group types (using explicit mpp value instead)
- if a group type is to be changed, the new mpp value is written in board info

Change-Id: I7aeabbbe9a20ae9b5c35909291b8d5b954b71a5a
Reviewed-on: http://vgitil04.il.marvell.com:8080/1543
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   81 +++++++++++--------
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |   10 +--
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |   40 +++++-----
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.h     |   21 +++---
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |    3 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |    8 +-
 6 files changed, 84 insertions(+), 79 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index cbe066a..5915e6f 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -720,17 +720,58 @@ MV_U32 mvBoardSlicMppModeGet(MV_VOID)
 *******************************************************************************/
 MV_32 mvBoardMppGet(MV_U32 mppGroupNum)
 {
-	return board->pBoardMppConfigValue[0].mppGroup[mppGroupNum];
+	return board->pBoardMppConfigValue->mppGroup[mppGroupNum];
 }
 
-MV_32 mvBoardMppTypeGet(MV_U32 mppGroupNum)
+/*******************************************************************************
+* mvBoardMppSet - Set board dependent MPP register value
+*
+* DESCRIPTION:
+*	This function updates board dependend MPP register value.
+*
+* INPUT:
+*       mppGroupNum - MPP group number.
+*	mppValue - new MPP value to be written
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       -None
+*
+*******************************************************************************/
+MV_VOID mvBoardMppSet(MV_U32 mppGroupNum, MV_U32 mppValue)
 {
-	return (MV_U32)board->pBoardMppGroupValue[0].mppGroupType[mppGroupNum];
+	board->pBoardMppConfigValue->mppGroup[mppGroupNum] = mppValue;
 }
 
+/*******************************************************************************
+* mvBoardMppTypeSet - Set board dependent MPP Group Type value
+*
+* DESCRIPTION:
+*	This function updates board dependend MPP Group Type value.
+*
+* INPUT:
+*       mppGroupNum - MPP group number.
+*	groupType - new MPP Group type. derrive MPP Value using groupType
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       -None
+*
+*******************************************************************************/
 MV_VOID mvBoardMppTypeSet(MV_U32 mppGroupNum, MV_U32 groupType)
 {
-	board->pBoardMppGroupValue[0].mppGroupType[mppGroupNum] = groupType;
+	MV_U32 mppVal;
+	MV_U32 mppGroups[MV_BOARD_MAX_MPP_GROUPS][MV_BOARD_MPP_GROUPS_MAX_TYPES] = MPP_GROUP_TYPES;
+
+	mppVal = mppGroups[mppGroupNum][groupType];
+	mvBoardMppSet(mppGroupNum,mppVal);
+
+	/* add Group types update here (if needed for later usage),
+	 * and add mvBoardMppTypeGet to detect which type is in use currently */
 }
 
 /*******************************************************************************
@@ -1185,13 +1226,12 @@ MV_U32 mvBoardSwitchPortForceLinkGet(MV_U32 switchIdx)
 *******************************************************************************/
 MV_VOID mvBoardConfigWrite(void)
 {
-	MV_U32 mppGroup, mppType, i, reg;
+	MV_U32 mppGroup, i, reg;
 	MV_BOARD_SPEC_INIT *boardSpec;
 
 	/* Specific board initializations  ( from board->pBoardSpecInit ) omriii : see if can remove all these inits*/
 	for (mppGroup = 0; mppGroup < MV_MPP_MAX_GROUP; mppGroup++) {
-		mppType = mvBoardMppTypeGet(mppGroup);
-		mvBoardMppGroupWrite(mppGroup, mppType);
+		MV_REG_WRITE(mvCtrlMppRegGet(mppGroup), mvBoardMppGet(mppGroup));
 	}
 
 	boardSpec = mvBoardSpecInitGet();
@@ -1208,33 +1248,6 @@ MV_VOID mvBoardConfigWrite(void)
 }
 
 /*******************************************************************************
-* mvBoardMppGroupWrite - write MPP value for a single group, according to type
-*
-* DESCRIPTION:
-*       This function writes MPP value for a specific group, according to
-*       received type
-*
-* INPUT:
-*       groupNum - Group number
-*	groupType - enum that represents the mpp selected value for the group
-*
-* OUTPUT:
-*       None.
-*
-* RETURN:
-*       None.
-*
-*******************************************************************************/
-MV_VOID mvBoardMppGroupWrite(MV_U32 groupNum, MV_U32 groupType)
-{
-	MV_U32 mppVal;
-	MV_U32 mppGroups[][MV_BOARD_MAX_MPP_GROUPS] = MPP_GROUP_TYPES;
-
-	mppVal = mppGroups[groupNum][groupType];
-	MV_REG_WRITE(mvCtrlMppRegGet(groupNum), mppVal);
-}
-
-/*******************************************************************************
 * mvBoardGppConfigGet
 *
 * DESCRIPTION:
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index d5f1101..1b29e41 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -81,6 +81,7 @@ extern "C" {
 #define BOARD_ETH_SWITCH_SMI_SCAN_MODE	2
 #define MV_BOARD_MAX_MPP                9       /* number of MPP conf registers */
 #define MV_BOARD_MAX_MPP_GROUPS         9
+#define MV_BOARD_MPP_GROUPS_MAX_TYPES   8
 #define MV_BOARD_NAME_LEN               0x20
 
 typedef enum _devBoardMppTypeClass {
@@ -249,10 +250,6 @@ typedef struct _boardMppInfo {
 	MV_U32 mppGroup[MV_BOARD_MAX_MPP];
 } MV_BOARD_MPP_INFO;
 
-typedef struct _boardMppGroupInfo {
-	MV_U32 mppGroupType[MV_BOARD_MAX_MPP_GROUPS];
-} MV_BOARD_MPP_GROUP_INFO;
-
 typedef enum {
 	BOARD_EPON_CONFIG,
 	BOARD_GPON_CONFIG,
@@ -300,8 +297,6 @@ typedef struct _boardInfo {
 	MV_BOARD_MPP_TYPE_INFO *pBoardModTypeValue;
 	MV_U8 numBoardMppConfigValue;
 	MV_BOARD_MPP_INFO *pBoardMppConfigValue;
-	MV_U8 numBoardMppGroupValue;
-	MV_BOARD_MPP_GROUP_INFO *pBoardMppGroupValue;
 	MV_U8 numBoardSerdesConfigValue;
 	MV_SERDES_CFG *pBoardSerdesConfigValue;
 	MV_U32 intsGppMaskLow;
@@ -426,8 +421,8 @@ MV_BOOL mvBoardIsOurPciSlot(MV_U32 busNum, MV_U32 slotNum);
 MV_U32 mvBoardGpioIntMaskGet(MV_U32 gppGrp);
 MV_U32 mvBoardSlicMppModeGet(MV_VOID);
 MV_32 mvBoardMppGet(MV_U32 mppGroupNum);
-MV_32 mvBoardMppTypeGet(MV_U32 mppGroupNum);
 MV_VOID mvBoardMppTypeSet(MV_U32 mppGroupNum, MV_U32 groupType);
+MV_VOID mvBoardMppSet(MV_U32 mppGroupNum, MV_U32 mppValue);
 MV_U32 mvBoardGppConfigGet(void);
 MV_32 mvBoardTdmSpiModeGet(MV_VOID);
 MV_U8 mvBoardTdmDevicesCountGet(void);
@@ -450,7 +445,6 @@ MV_U32 mvBoardIdGet(MV_VOID);
 MV_U32 mvBoardSledCpuNumGet(MV_VOID);
 MV_VOID mvBoardConfigInit(MV_VOID);
 MV_VOID mvBoardConfigWrite(MV_VOID);
-MV_VOID mvBoardMppGroupWrite(MV_U32 groupNum, MV_U32 groupType);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac0ConfigGet(MV_VOID);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac1ConfigGet(MV_VOID);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardLaneSGMIIGet(MV_VOID);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 5dbfd39..b3e3c04 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -167,7 +167,6 @@ MV_BOARD_INFO avanta_lp_fpga_board_info = {
 	.boardName			= "CortexA9-FPGA",
 	.numBoardMppTypeValue		= 0,
 	.pBoardModTypeValue		= NULL,
-	.numBoardMppConfigValue		= 0,
 	.pBoardMppConfigValue		= NULL,
 	.numBoardSerdesConfigValue	= 0,
 	.pBoardSerdesConfigValue	= NULL,
@@ -234,23 +233,24 @@ MV_BOARD_MAC_INFO db88f6660InfoBoardMacInfo[] = {
 MV_BOARD_MPP_TYPE_INFO db88f6660InfoBoardModTypeInfo[] = {
 	{
 		.boardMppSlic = MV_BOARD_AUTO,
-		.ethSataComplexOpt = DB_88F6660_ETH_DEFAULT,
+		.ethSataComplexOpt = (MV_ETH_COMPLEX_GE_MAC0_SW_P6 | MV_ETH_COMPLEX_GE_MAC1_RGMII1 | MV_ETH_COMPLEX_SW_P0_QUAD_PHY_P0 | \
+				MV_ETH_COMPLEX_SW_P3_QUAD_PHY_P3 | MV_ETH_COMPLEX_SW_P4_RGMII0),
 		.ethPortsMode = 0x0
 	}
 };
 
-MV_BOARD_MPP_GROUP_INFO db88f6660InfoBoardMppGroupConfig[] = {
-	{ {
-		  DB_88F6660_GROUP_0_TYPE,
-		  DB_88F6660_GROUP_1_TYPE,
-		  DB_88F6660_GROUP_2_TYPE,
-		  DB_88F6660_GROUP_3_TYPE,
-		  DB_88F6660_GROUP_4_TYPE,
-		  DB_88F6660_GROUP_5_TYPE,
-		  DB_88F6660_GROUP_6_TYPE,
-		  DB_88F6660_GROUP_7_TYPE,
-		  DB_88F6660_GROUP_8_TYPE,
-	  } }
+MV_BOARD_MPP_INFO db88f6660InfoBoardMppConfigValue = {
+	{
+		  DB_88F6660_MPP0_7,
+		  DB_88F6660_MPP8_15,
+		  DB_88F6660_MPP16_23,
+		  DB_88F6660_MPP24_31,
+		  DB_88F6660_MPP32_39,
+		  DB_88F6660_MPP40_47,
+		  DB_88F6660_MPP48_55,
+		  DB_88F6660_MPP56_63,
+		  DB_88F6660_MPP64_67,
+	 }
 };
 
 MV_BOARD_SWITCH_INFO db88f6660InfoBoardSwitchValue[] = {
@@ -269,8 +269,7 @@ MV_BOARD_INFO db88f6660_board_info = {
 	.boardName			= "DB-88F6660",
 	.numBoardMppTypeValue		= ARRSZ(db88f6660InfoBoardModTypeInfo),
 	.pBoardModTypeValue		= db88f6660InfoBoardModTypeInfo,
-	.numBoardMppGroupValue		= ARRSZ(db88f6660InfoBoardMppGroupConfig),
-	.pBoardMppGroupValue		= db88f6660InfoBoardMppGroupConfig,
+	.pBoardMppConfigValue		= &db88f6660InfoBoardMppConfigValue,
 	.numBoardSerdesConfigValue	= 0,
 	.pBoardSerdesConfigValue	= 0,
 	.intsGppMaskLow			= 0,
@@ -367,8 +366,8 @@ MV_DEV_CS_INFO avanta_lp_customerInfoBoardDeCsInfo[] = {
 #endif
 };
 
-MV_BOARD_MPP_INFO avanta_lp_customerInfoBoardMppConfigValue[] = {
-	{ {
+MV_BOARD_MPP_INFO avanta_lp_customerInfoBoardMppConfigValue = {
+	{
 		  AVANTA_LP_CUSTOMER_MPP0_7,
 		  AVANTA_LP_CUSTOMER_MPP8_15,
 		  AVANTA_LP_CUSTOMER_MPP16_23,
@@ -378,7 +377,7 @@ MV_BOARD_MPP_INFO avanta_lp_customerInfoBoardMppConfigValue[] = {
 		  AVANTA_LP_CUSTOMER_MPP48_55,
 		  AVANTA_LP_CUSTOMER_MPP56_63,
 		  AVANTA_LP_CUSTOMER_MPP64_67,
-	  } }
+	 }
 };
 
 MV_SERDES_CFG avanta_lp_customerInfoBoardSerdesConfigValue[] = {
@@ -408,8 +407,7 @@ MV_BOARD_INFO avanta_lp_customer_board_info = {
 	.boardName				= "AvantaLP-CUSTOMER",
 	.numBoardMppTypeValue			= ARRSZ(avanta_lp_customerInfoBoardModTypeInfo),
 	.pBoardModTypeValue			= avanta_lp_customerInfoBoardModTypeInfo,
-	.numBoardMppConfigValue			= ARRSZ(avanta_lp_customerInfoBoardMppConfigValue),
-	.pBoardMppConfigValue			= avanta_lp_customerInfoBoardMppConfigValue,
+	.pBoardMppConfigValue			= &avanta_lp_customerInfoBoardMppConfigValue,
 	.numBoardSerdesConfigValue		= ARRSZ(avanta_lp_customerInfoBoardSerdesConfigValue),
 	.pBoardSerdesConfigValue		= avanta_lp_customerInfoBoardSerdesConfigValue,
 	.intsGppMaskLow				= 0,
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
index 24040a9..2871016 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
@@ -110,17 +110,16 @@
  */
 
 /* default MPP Types */
-#define DB_88F6660_GROUP_0_TYPE         NAND_BOOT_V2
-#define DB_88F6660_GROUP_1_TYPE         NAND_BOOT_V2
-#define DB_88F6660_GROUP_2_TYPE         SLIC_LANTIQ_UNIT
-#define DB_88F6660_GROUP_3_TYPE         GE1_UNIT
-#define DB_88F6660_GROUP_4_TYPE         GE1_CPU_SMI_CTRL_TDM_LQ_UNIT
-#define DB_88F6660_GROUP_5_TYPE         SWITCH_P4_PON_TX_FAULT
-#define DB_88F6660_GROUP_6_TYPE         SWITCH_P4
-#define DB_88F6660_GROUP_7_TYPE         SWITCH_P4_LED_MATRIX
-#define DB_88F6660_GROUP_8_TYPE         LED_MATRIX_PTP
-
-#define DB_88F6660_ETH_DEFAULT (MV_ETH_COMPLEX_GE_MAC0_SW_P6 | MV_ETH_COMPLEX_GE_MAC1_RGMII1 | MV_ETH_COMPLEX_SW_P0_QUAD_PHY_P0 | MV_ETH_COMPLEX_SW_P3_QUAD_PHY_P3 | MV_ETH_COMPLEX_SW_P4_RGMII0)
+
+#define DB_88F6660_MPP0_7               0x11111111
+#define DB_88F6660_MPP8_15              0x22111111
+#define DB_88F6660_MPP16_23             0x33030022
+#define DB_88F6660_MPP24_31             0x22222222
+#define DB_88F6660_MPP32_39             0x22222440
+#define DB_88F6660_MPP40_47             0x44122220
+#define DB_88F6660_MPP48_55             0x44444444
+#define DB_88F6660_MPP56_63             0x44444444
+#define DB_88F6660_MPP64_67             0x204
 
 #define DB_88F6660_GPP_OUT_ENA_LOW      0x0
 #define DB_88F6660_GPP_OUT_ENA_MID      0x0
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index fca1077..ea5e4a4 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -324,7 +324,8 @@ MV_VOID mvCtrlSmiMasterSet(MV_SMI_CTRL smiCtrl)
 	if (isBootDevSPI1)	/* add first SPI1 group type */
 		groupTypeSelect += SPI1_CPU_SMI_CTRL_TDM_LQ_UNIT;
 
-	mvBoardMppGroupWrite(4, groupTypeSelect);
+	mvBoardMppTypeSet(4, groupTypeSelect);	/* Set MPP value according to group type */
+	MV_REG_WRITE(mvCtrlMppRegGet(4), mvBoardMppGet(4));
 
 	/* Mux settings :
 	 * Add mux configuration setup here ! */
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index 1ebad8c..bd59912 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -272,10 +272,10 @@ typedef enum {
 #define MV_GROUP_1_TYPE         MV_GROUP_0_TYPE
 
 #define MPP_GROUP_2_TYPE { \
-		0x33030022,     /* TDM_LQ_UNIT  */ \
-		0x11110022,     /* TDM_SL_UNIT  */ \
-		0x44440022,     /* TDM_ZL_UNIT  */ \
-		0x22222222,     /* TDM_EXT_UNIT	*/ \
+		0x33030022,     /* SLIC_LANTIQ_UNIT  */ \
+		0x11110022,     /* SLIC_SILABS_UNIT  */ \
+		0x44440022,     /* SLIC_ZARLINK_UNIT  */ \
+		0x22222222,     /* SLIC_EXTERNAL_UNIT	*/ \
 }
 
 typedef enum {
-- 
1.7.5.4

