From 40dca2544bcad298318c4d326460ce81c75b9afa Mon Sep 17 00:00:00 2001
From: Uri Eliyahu <uriel@marvell.com>
Date: Thu, 5 Dec 2013 12:30:21 +0200
Subject: [PATCH 1188/1825] fix: pp2: multicast list set

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 9289e8a8dbf2e83d3dce232558765872a23f3803

        - use ndo_set_rx_mode instead ndo_change_rx_flags
        - remove old mcast entries from parser tcam
        - write new mcast list to parser tcam

Change-Id: Ie4a84e03e03a1c90e2f72935e9802adffb89c13e
Signed-off-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4604
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c    |    6 ++-
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |    2 +-
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    2 +-
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c     |   43 +++++++++++++++++++-
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h     |    1 +
 5 files changed, 48 insertions(+), 6 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c
index 5500eb8..b0f2b8a 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c
@@ -261,8 +261,7 @@ static int mv_eth_set_mac_addr_internals(struct net_device *dev, void *addr)
 	return 0;
 }
 
-
-void mv_eth_change_rx_flags(struct net_device *dev, int flags)
+void mv_eth_rx_set_rx_mode(struct net_device *dev)
 {
 	struct eth_port     *priv = MV_ETH_PRIV(dev);
 	int                 phyPort = MV_PPV2_PORT_PHYS(priv->port);
@@ -282,6 +281,9 @@ void mv_eth_change_rx_flags(struct net_device *dev, int flags)
 	else
 		mvPrsMacAllMultiSet(phyPort, 0);
 
+	/* remove all port's mcast enries */
+	mvPrsMcastDelAll(phyPort);
+
 	if (dev->flags & IFF_MULTICAST) {
 		if (!netdev_mc_empty(dev)) {
 			struct netdev_hw_addr *ha;
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 1303b18..b65805e 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -1180,7 +1180,7 @@ static const struct net_device_ops mv_eth_netdev_ops = {
 	.ndo_open = mv_eth_open,
 	.ndo_stop = mv_eth_stop,
 	.ndo_start_xmit = mv_eth_tx,
-	.ndo_change_rx_flags = mv_eth_change_rx_flags,
+	.ndo_set_rx_mode = mv_eth_rx_set_rx_mode,
 	.ndo_set_mac_address = mv_eth_set_mac_addr,
 	.ndo_change_mtu = mv_eth_change_mtu,
 	.ndo_tx_timeout = mv_eth_tx_timeout,
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index 8551e7a..0f3882e 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -870,7 +870,7 @@ int         mv_eth_check_mtu_internals(struct net_device *dev, int mtu);
 int         mv_eth_check_mtu_valid(struct net_device *dev, int mtu);
 
 int         mv_eth_set_mac_addr(struct net_device *dev, void *mac);
-void        mv_eth_change_rx_flags(struct net_device *dev, int flags);
+void	    mv_eth_rx_set_rx_mode(struct net_device *dev);
 int         mv_eth_open(struct net_device *dev);
 int         mv_eth_port_suspend(int port);
 int         mv_eth_port_resume(int port);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c
index 06d030c..ebbb1d1 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c
@@ -313,6 +313,45 @@ static int mvPrsMacDaRangeAccept(int portMap, MV_U8 *da, MV_U8 *mask, unsigned i
 	return MV_OK;
 }
 
+
+/* delete all port's simple (not range) multicast entries */
+int mvPrsMcastDelAll(int port)
+{
+	MV_PP2_PRS_ENTRY pe;
+	int tid, index;
+	char da[MV_MAC_ADDR_SIZE], daMask[MV_MAC_ADDR_SIZE];
+
+	for (tid = PE_FIRST_FREE_TID ; tid <= PE_LAST_FREE_TID; tid++) {
+
+		if (!mvPp2PrsShadowIsValid(tid))
+			continue;
+
+		if (mvPp2PrsShadowLu(tid) != PRS_LU_MAC)
+			continue;
+
+		if (mvPp2PrsShadowUdf(tid) != PRS_UDF_MAC_DEF)
+			continue;
+
+		/* only simple mac entries */
+		pe.index = tid;
+		mvPp2PrsHwRead(&pe);
+
+		/* read mac addr from entry */
+		for (index = 0; index < MV_MAC_ADDR_SIZE; index++)
+			mvPp2PrsSwTcamByteGet(&pe, MV_ETH_MH_SIZE + index, &da[index], &daMask[index]);
+
+		if (MV_IS_BROADCAST_MAC(da))
+			continue;
+
+		if (MV_IS_MULTICAST_MAC(da))
+			/* delete mcast entry */
+			mvPrsMacDaAccept(port, da, 0);
+	}
+
+	return MV_OK;
+}
+
+
 /* TODO: use mvPrsMacDaRangeAccept */
 int mvPrsMacDaAccept(int port, unsigned char *da, int add)
 {
@@ -428,7 +467,7 @@ static int mvPrsMacDaRangeValid(unsigned int portMap, MV_U8 *da, MV_U8 *mask)
 
 		mvPp2PrsSwTcamPortMapGet(&pe, &entryPmap);
 
-		if ((mvPrsMacRangeIntersec(&pe, da, mask)) & !mvPrsMacRangeEquals(&pe, da, mask)) {
+		if ((mvPrsMacRangeIntersec(&pe, da, mask)) && !mvPrsMacRangeEquals(&pe, da, mask)) {
 			if (entryPmap & portMap) {
 				mvOsPrintf("%s: operation not supported, range intersection\n", __func__);
 				mvOsPrintf("%s: user must delete portMap 0x%x from entry %d.\n",
@@ -1573,7 +1612,7 @@ static int mvPrsEthTypeValid(unsigned int portMap, unsigned short ethertype)
 			continue;
 
 		/* in default entries portmask must be 0xff */
-		if ((mvPp2PrsShadowUdf(tid) == PRS_UDF_L2_DEF) & (portMap != PORT_MASK)) {
+		if ((mvPp2PrsShadowUdf(tid) == PRS_UDF_L2_DEF) && (portMap != PORT_MASK)) {
 			mvOsPrintf("%s: operation not supported.\n", __func__);
 			mvOsPrintf("%s: ports map must be 0xFF for default ether type\n", __func__);
 			return MV_ERROR;
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h
index 890d043..84383e2 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h
@@ -156,6 +156,7 @@ int mvPrsMacDaAccept(int port, unsigned char *da, int add);
 int mvPrsMacDaRangeSet(unsigned portBmp, MV_U8 *da, MV_U8 *mask, unsigned int ri, unsigned int riMask, MV_BOOL finish);
 int mvPrsMacDaRangeDel(unsigned portBmp, MV_U8 *da, MV_U8 *mask);
 int mvPrsMacDropAllSet(int port, int add);
+int mvPrsMcastDelAll(int port);
 int mvPrsMhRxSpecialSet(int port, unsigned short mh, int add);
 int mvPrsMacPromiscousSet(int port, int add);
 int mvPrsMacAllMultiSet(int port, int add);
-- 
1.7.5.4

