From 2e58884b9a88ee7b524212a2985d4fd8964cdf09 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Mon, 8 Apr 2013 10:24:22 +0300
Subject: [PATCH 0553/1825] ALP: clean core.c file

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 5f82e843ef481dac15566f3b64817ed393f6042d

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I41242d0474611b22a3b9540a673fa162516f79ae
Reviewed-on: http://vgitil04.il.marvell.com:8080/1500
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/core.c |   57 ++++++++++++++++------------------------
 1 files changed, 23 insertions(+), 34 deletions(-)

diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index d1afbda..0099471 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -91,9 +91,6 @@
 #include <asm/hardware/gic.h>
 #include "ca9x2.h"
 
-#define MV_COHERENCY_FABRIC_CTRL_REG            (MV_COHERENCY_FABRIC_OFFSET + 0x0)
-#define MV_COHERENCY_FABRIC_CFG_REG             (MV_COHERENCY_FABRIC_OFFSET + 0x4)
-
 extern unsigned int irq_int_type[];
 extern void __init alp_map_io(void);
 extern void __init mv_init_irq(void);
@@ -131,7 +128,7 @@ MV_U16 mvMtu[MV_UBOOT_ETH_PORTS] = { 0 };
 #define TARGET_DDR              0
 #define COHERENCY_STATUS_SHARED_NO_L2_ALLOC     0x1
 
-struct mbus_dram_target_info avantalp_mbus_dram_info;
+struct mbus_dram_target_info mbus_dram_info;
 
 /*******************************************************************************
  * Early Printk Support
@@ -139,9 +136,6 @@ struct mbus_dram_target_info avantalp_mbus_dram_info;
 #ifdef MV_INCLUDE_EARLY_PRINTK
 #define MV_UART0_LSR    (*(volatile unsigned char*)(INTER_REGS_VIRT_BASE + 0x12000 + 0x14))
 #define MV_UART0_THR    (*(volatile unsigned char*)(INTER_REGS_VIRT_BASE + 0x12000 + 0x0 ))
-#define MV_UART1_LSR    (*(volatile unsigned char*)(INTER_REGS_VIRT_BASE + 0x12100 + 0x14))
-#define MV_UART1_THR    (*(volatile unsigned char*)(INTER_REGS_VIRT_BASE + 0x12100 + 0x0 ))
-#define MV_SERIAL_BASE  ((unsigned char*)(INTER_REGS_VIRT_BASE + 0x12000 + 0x0 ))
 /*
  * This does not append a newline
  */
@@ -171,8 +165,7 @@ void mv_early_printk(char *fmt, ...)
 	va_end(args);
 	putstr(arr);
 }
-
-#endif
+#endif /* MV_INCLUDE_EARLY_PRINTK */
 
 /*******************************************************************************
  * UBoot Tagging Parameters
@@ -259,7 +252,7 @@ void __init avantalp_setup_cpu_mbus(void)
 	/*
 	 * Setup MBUS dram target info.
 	 */
-	avantalp_mbus_dram_info.mbus_dram_target_id = TARGET_DDR;
+	mbus_dram_info.mbus_dram_target_id = TARGET_DDR;
 	addr = (void __iomem*)BRIDGE_VIRT_BASE;
 
 	for (i = 0, cs = 0; i < 4; i++) {
@@ -274,7 +267,7 @@ void __init avantalp_setup_cpu_mbus(void)
 			if (base & 0xf)
 				/* BaseExtension is used (> 4GB).*/
 				continue;
-			w = &avantalp_mbus_dram_info.cs[cs++];
+			w = &mbus_dram_info.cs[cs++];
 			w->cs_index = i;
 			w->mbus_attr = 0xf & ~(1 << i);
 			w->mbus_attr |= coherency_status << 4;
@@ -282,7 +275,7 @@ void __init avantalp_setup_cpu_mbus(void)
 			w->size = (size | 0x00ffffff) + 1;
 		}
 	}
-	avantalp_mbus_dram_info.num_cs = cs;
+	mbus_dram_info.num_cs = cs;
 }
 
 /*******************************************************************************
@@ -305,7 +298,7 @@ static struct resource uart0_resources[] = {
 		.start          = (INTER_REGS_PHYS_BASE | MV_UART_REGS_OFFSET(0)),
 		.end            = (INTER_REGS_PHYS_BASE | MV_UART_REGS_OFFSET(0)) + SZ_256 - 1,
 		.flags          = IORESOURCE_MEM,
-	},{
+	}, {
 		.start          = IRQ_UART0,
 		.end            = IRQ_UART0,
 		.flags          = IORESOURCE_IRQ,
@@ -338,7 +331,7 @@ static struct resource uart1_resources[] = {
 		.start          = (INTER_REGS_PHYS_BASE | MV_UART_REGS_OFFSET(1)),
 		.end            = (INTER_REGS_PHYS_BASE | MV_UART_REGS_OFFSET(1)) + SZ_256 - 1,
 		.flags          = IORESOURCE_MEM,
-	},{
+	}, {
 		.start          = IRQ_UART1,
 		.end            = IRQ_UART1,
 		.flags          = IORESOURCE_IRQ,
@@ -359,15 +352,17 @@ void __init serial_initialize(int port)
 {
 	if (port == 0) {
 		if (mvUnitMapIsMine(UART0) == MV_FALSE) {
-			printk(KERN_WARNING "uart%d resource not allocated but CONFIG_MV_UART_PORT = %d\n", port, port);
+			printk(KERN_WARNING "uart%d resource not allocated "
+			       "but CONFIG_MV_UART_PORT = %d\n", port, port);
 			mvUnitMapSetMine(UART0);
 		}
 
 		uart0_data[0].uartclk = mvBoardTclkGet();
 		platform_device_register(&uart0);
-	}else {
+	} else {
 		if (mvUnitMapIsMine(UART1) == MV_FALSE) {
-			printk(KERN_WARNING "uart%d resource not allocated but CONFIG_MV_UART_PORT = %d\n", port, port);
+			printk(KERN_WARNING "uart%d resource not allocated "
+			       "but CONFIG_MV_UART_PORT = %d\n", port, port);
 			mvUnitMapSetMine(UART1);
 		}
 
@@ -571,7 +566,7 @@ static struct resource rtc_resource[] = {
 		.start  = INTER_REGS_PHYS_BASE + MV_RTC_REGS_OFFSET,
 		.end    = INTER_REGS_PHYS_BASE + MV_RTC_REGS_OFFSET + 32 - 1,
 		.flags  = IORESOURCE_MEM,
-	},{
+	}, {
 		.start  = IRQ_RTC,
 		.flags  = IORESOURCE_IRQ,
 	}
@@ -611,6 +606,9 @@ void print_board_info(void)
 	printk("\n");
 }
 
+/*
+ * IOCC initialization
+ */
 #ifdef CONFIG_AURORA_IO_CACHE_COHERENCY
 static void io_coherency_init(void)
 {
@@ -633,15 +631,6 @@ extern void printascii(const char *);
 /*****************************************************************************
  * CPU and Fabric
  ****************************************************************************/
-
-struct ct_desc *ct_desc;
-
-static struct ct_desc *ct_descs[] __initdata = {
-#ifdef CONFIG_ARCH_VEXPRESS_CA9X4
-	&ct_ca9x4_desc,
-#endif
-};
-
 static void cpu_fabric_common_init(void)
 {
 #ifdef CONFIG_CACHE_L2X0
@@ -748,11 +737,11 @@ static void alp_restart(char mode, const char *cmd)
 extern void __init alp_init_irq(void);
 
 MACHINE_START(AVANTA_LP_FPGA, "Marvell Avanta LP FPGA Board")
-.atag_offset    = BOOT_PARAMS_OFFSET,
-.map_io         = alp_map_io,
-.init_irq       = alp_init_irq,
-.timer          = &alp_timer,
-.handle_irq     = gic_handle_irq,
-.init_machine   = alp_fpga_init,
-.restart        = alp_restart,
+	.atag_offset    = BOOT_PARAMS_OFFSET,
+	.map_io         = alp_map_io,
+	.init_irq       = alp_init_irq,
+	.timer          = &alp_timer,
+	.handle_irq     = gic_handle_irq,
+	.init_machine   = alp_fpga_init,
+	.restart        = alp_restart,
 MACHINE_END
-- 
1.7.5.4

