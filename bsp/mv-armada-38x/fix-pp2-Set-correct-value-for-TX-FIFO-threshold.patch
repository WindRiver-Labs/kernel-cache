From e9569ec9bbd2a75b7b6a5099a613f07fb8914f14 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Sun, 29 Sep 2013 17:48:34 -0400
Subject: [PATCH 0995/1825] fix: pp2: Set correct value for TX FIFO threshold

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 5a89e57f7ee3c89969277db70dd4d26d0532bbca

	GMAC Port Fifo Configuration Register 1
	Current default value is 0x1.
	Correct deafult value is 0x40

Change-Id: I0d7f4417a90d0f07e6d4c6c7035362c8be3bbca9
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3566
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c     |    4 +++
 .../arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c |   11 ++++++++++
 .../arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.h |    2 +
 .../plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h    |   21 ++++++++++++++++++++
 4 files changed, 38 insertions(+), 0 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
index 88473e8..3f8b49a 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
@@ -231,6 +231,10 @@ MV_STATUS mvPp2DefaultsSet(int port)
 	int txp, queue, txPortNum, i;
 	MV_PP2_PORT_CTRL *pPortCtrl = mvPp2PortHndlGet(port);
 
+
+	if (!MV_PON_PORT(port))
+		mvGmacDefaultsSet(port);
+
 	for (txp = 0; txp < pPortCtrl->txpNum; txp++) {
 		/* Disable Legacy WRR, Disable EJP, Release from reset */
 		txPortNum = mvPp2EgressPort(port, txp);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c
index d09726c..c0a2547 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c
@@ -170,6 +170,17 @@ void mvEthPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii)
 	mvEthPortResetSet(port, MV_FALSE);
 }
 
+void mvGmacDefaultsSet(int port)
+{
+	MV_U32 regVal;
+
+	/* Update TX FIFO MIN Threshold */
+	regVal = MV_REG_READ(GMAC_PORT_FIFO_CFG_1_REG(port));
+	regVal &= ~GMAC_TX_FIFO_MIN_TH_ALL_MASK;
+	regVal |= GMAC_TX_FIFO_MIN_TH_MASK(0x40);
+	MV_REG_WRITE(GMAC_PORT_FIFO_CFG_1_REG(port), regVal);
+}
+
 void mvEthPortPowerDown(int port)
 {
 }
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.h b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.h
index e5721e1..30c83f8 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.h
@@ -137,6 +137,7 @@ static INLINE MV_VOID mvEthPortIsrUnmask(int port)
 	MV_REG_WRITE(ETH_PORT_ISR_MASK_REG(port), ETH_PORT_LINK_CHANGE_MASK);
 }
 
+void mvGmacDefaultsSet(int port);
 void mvEthPortEnable(int port);
 void mvEthPortDisable(int port);
 void mvEthPortRgmiiSet(int port, int enable);
@@ -149,6 +150,7 @@ void mvEthPortResetSet(int port, MV_BOOL setReset);
 void mvEthPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii);
 void mvEthPortPowerDown(int port);
 char *mvEthSpeedStrGet(MV_ETH_PORT_SPEED speed);
+
 /******************************************************************************/
 /*                          Port Configuration functions                      */
 /******************************************************************************/
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h
index 7fac135..eb23f49 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h
@@ -72,6 +72,11 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #define ETH_REG_BASE(port)                 GOP_REG_BASE(port)
 
+/****************************************/
+/*        MAC Unit Registers            */
+/****************************************/
+
+/**** Tri-Speed Ports MAC and CPU Port MAC Configuration Sub-Unit Registers ****/
 #define ETH_GMAC_CTRL_0_REG(p)             (ETH_REG_BASE(p) + 0x0)
 
 #define ETH_GMAC_PORT_EN_BIT               0
@@ -116,6 +121,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define ETH_GMAC_PORT_RESET_MASK           (1 << ETH_GMAC_PORT_RESET_BIT)
 /*-------------------------------------------------------------------------------*/
 
+/**** Port Auto-Negotiation Configuration Sub-Unit Registers ****/
 #define ETH_GMAC_AN_CTRL_REG(p)                (ETH_REG_BASE(p) + 0xC)
 
 #define ETH_FORCE_LINK_FAIL_BIT                0
@@ -156,6 +162,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define ETH_ENABLE_DUPLEX_AUTO_NEG_MASK        (1 << ETH_ENABLE_DUPLEX_AUTO_NEG_BIT)
 /*-------------------------------------------------------------------------------*/
 
+/**** Port Status Sub-Unit Registers ****/
 #define ETH_GMAC_STATUS_REG(p)             (ETH_REG_BASE(p) + 0x10)
 
 #define ETH_GMAC_LINK_UP_BIT               0
@@ -183,6 +190,19 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define ETH_TX_FLOW_CTRL_ACTIVE_MASK       (1 << ETH_TX_FLOW_CTRL_ACTIVE_BIT)
 /*-------------------------------------------------------------------------------*/
 
+/**** Port Internal Sub-Unit Registers ****/
+#define GMAC_PORT_FIFO_CFG_0_REG(p)        (ETH_REG_BASE(p) + 0x18)
+
+#define GMAC_PORT_FIFO_CFG_1_REG(p)        (ETH_REG_BASE(p) + 0x1C)
+
+#define GMAC_RX_FIFO_MAX_TH_OFFS           0
+
+#define GMAC_TX_FIFO_MIN_TH_OFFS           6
+#define GMAC_TX_FIFO_MIN_TH_ALL_MASK       (0x7F << GMAC_TX_FIFO_MIN_TH_OFFS)
+#define GMAC_TX_FIFO_MIN_TH_MASK(val)      (((val) << GMAC_TX_FIFO_MIN_TH_OFFS) & GMAC_TX_FIFO_MIN_TH_ALL_MASK)
+/*-------------------------------------------------------------------------------*/
+
+/**** Port Interrupt Sub-Unit Registers ****/
 #define ETH_PORT_ISR_CAUSE_REG(p)	(ETH_REG_BASE(p) + 0x20)
 
 #define ETH_PORT_ISR_SUM_BIT		0
@@ -192,6 +212,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define ETH_PORT_LINK_CHANGE_MASK	(1 << ETH_PORT_LINK_CHANGE_BIT)
 
 #define ETH_PORT_ISR_MASK_REG(p)	(ETH_REG_BASE(p) + 0x24)
+/*-------------------------------------------------------------------------------*/
 
 /****************************************/
 /*        LMS Unit Registers       	*/
-- 
1.7.5.4

