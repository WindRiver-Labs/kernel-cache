From 4d0c5babed56ea364427fffb9c6949f1664c8ed8 Mon Sep 17 00:00:00 2001
From: Liu Haitao <haitao.liu@windriver.com>
Date: Thu, 27 Jul 2017 11:39:12 +0800
Subject: [PATCH 2/5] mvneta: update phy connect/disconnect to probe/remove

Issue : LIN8-7049

- It fix SYSTEMSW-2214 that ethtool operation not allowed when port down
- Root reason: When port down, PHY is disconnected, which cause some
                ethtool operations based on PHY not available.
- Fix it by moving phy connect/disconnect to mvneta probe/remove,
		which will keep PHY connected during neta driver life time.

The patch was imported from the Marvell git hub :
(https://github.com/MarvellEmbeddedProcessors/linux-marvell/commit/db45835bdd52bf835a94bf5c5fe2ee8cb8e28654)
as of commit id db45835bdd52bf835a94bf5c5fe2ee8cb8e28654

Change-Id: Ibbf70e64d4bb4f98d0573f8809b5c55da73af7ba
Signed-off-by: Evan Wang <xswang@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/32114
Reviewed-by: Wilson Ding <dingwei@marvell.com>
Tested-by: Star_Automation <star@marvell.com>

Signed-off-by: Liu Haitao <haitao.liu@windriver.com>
---
 drivers/net/ethernet/marvell/mvneta.c |   13 +++++++------
 1 files changed, 7 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index 3348289..1cc0b95 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -3049,11 +3049,6 @@ static int mvneta_open(struct net_device *dev)
 	/* In default link is down */
 	netif_carrier_off(pp->dev);
 
-	ret = mvneta_mdio_probe(pp);
-	if (ret < 0) {
-		netdev_err(dev, "cannot probe MDIO bus\n");
-		goto err_free_irq;
-	}
 
 	mvneta_start_dev(pp);
 
@@ -3083,7 +3078,6 @@ static int mvneta_stop(struct net_device *dev)
 	spin_unlock(&pp->lock);
 
 	mvneta_stop_dev(pp);
-	mvneta_mdio_remove(pp);
 	unregister_cpu_notifier(&pp->cpu_notifier);
 	on_each_cpu(mvneta_percpu_disable, pp, true);
 	free_percpu_irq(dev->irq, pp->ports);
@@ -3741,6 +3735,12 @@ static int mvneta_probe(struct platform_device *pdev)
 		put_device(&phy->dev);
 	}
 
+	err = mvneta_mdio_probe(pp);
+	if(err<0){
+		netdev_err(dev,"cannot probe MDIO bus\n");
+		goto err_free_stats;
+	}
+
 	return 0;
 
 err_free_stats:
@@ -3764,6 +3764,7 @@ static int mvneta_remove(struct platform_device *pdev)
 	struct net_device  *dev = platform_get_drvdata(pdev);
 	struct mvneta_port *pp = netdev_priv(dev);
 
+	mvneta_mdio_remove(pp);
 	unregister_netdev(dev);
 	clk_disable_unprepare(pp->clk);
 	free_percpu(pp->ports);
-- 
1.7.5.4

