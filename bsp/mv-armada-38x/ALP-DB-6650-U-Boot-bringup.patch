From eae160dcd157311cb4bb6bb24fa920d508f89256 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Mon, 29 Apr 2013 16:50:59 +0300
Subject: [PATCH 0626/1825] ALP: DB-6650 U-Boot bringup

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit b9f9ff24ca4ceec1d82f1ffeff23bc202d351da1

- Disabled L2 cache
- Updated timer to use 25MHz Ref Clk
- Moved board information prints to new function after code relocation( late_printcpu_info() )
  (BSS is overlayed with code relocation section: stoped using zero globals untill relocation is finished)
- Fixed reads from S@R :Boot device and frequency mode
- Fixed DRAM size calculations (using new function to read 20184 register insted of 1504 register)
** U-Boot prompt achieved using Lauterbach only (bin_hdr is not compiled at all)

Change-Id: I9b49befd21d933f0e3620def46005100aafac4c5
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/1683
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   12 ++---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    1 +
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |   54 ++++++++++----------
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.h     |   26 +++++-----
 .../arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c |    5 +--
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   25 +++++----
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |   18 +++---
 7 files changed, 70 insertions(+), 71 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index d19c687..811b4c4 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -96,7 +96,6 @@ extern MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[];
 
 /* Locals */
 static MV_DEV_CS_INFO *boardGetDevEntry(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
-static MV_U32 gBoardId = MV_INVALID_BOARD_ID;
 static MV_BOARD_INFO *board = NULL;
 
 
@@ -1991,7 +1990,7 @@ MV_STATUS mvBoardSatrInfoGet(MV_SATR_TYPE_ID satrClass, MV_BOARD_SATR_INFO *satr
 	 * and check if field is relevant to current running board */
 	for (i = 0; i < MV_SATR_READ_MAX_OPTION ; i++)
 		if (boardSatrInfo[i].satrId == satrClass) {
-			satrInfo = &boardSatrInfo[i];
+			*satrInfo = boardSatrInfo[i];
 			if (boardSatrInfo[i].isActiveForBoard[boardId])
 				return MV_OK;
 			else
@@ -2147,7 +2146,7 @@ MV_VOID mvBoardIdSet(MV_U32 boardId)
 	if (boardId >= MV_MAX_BOARD_ID)
 		mvOsPrintf("%s: Error: wrong boardId (%d)\n", __func__, boardId);
 
-	board = boardInfoTbl[gBoardId];
+	board = boardInfoTbl[boardId];
 }
 
 /*******************************************************************************
@@ -2212,8 +2211,7 @@ MV_U8 mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum)
 	slave.address = 0;
 	mvTwsiInit(0, TWSI_SPEED, mvBoardTclkGet(), &slave, 0);
 
-	/* Read MPP module ID */
-	DB(mvOsPrintf("Board: Read S@R device read\n"));
+	DB(mvOsPrintf("Board: TWSI Read device\n"));
 	twsiSlave.slaveAddr.address = mvBoardTwsiAddrGet(twsiClass, devNum);
 	twsiSlave.slaveAddr.type = mvBoardTwsiAddrTypeGet(twsiClass, devNum);
 
@@ -2223,7 +2221,7 @@ MV_U8 mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum)
 	twsiSlave.moreThen256 = MV_FALSE;
 
 	if (MV_OK != mvTwsiRead(0, &twsiSlave, &data, 1)) {
-		DB(mvOsPrintf("Board: Read S@R fail\n"));
+		mvOsPrintf("%s: Twsi Read fail\n", __func__);
 		return MV_ERROR;
 	}
 	DB(mvOsPrintf("Board: Read S@R succeded\n"));
@@ -2263,7 +2261,7 @@ MV_STATUS mvBoardTwsiSet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regN
 	twsiSlave.slaveAddr.address = mvBoardTwsiAddrGet(twsiClass, devNum);
 	twsiSlave.slaveAddr.type = mvBoardTwsiAddrTypeGet(twsiClass, devNum);
 	twsiSlave.validOffset = MV_TRUE;
-	DB(mvOsPrintf("Board: Write S@R device addr %x, type %x, data %x\n",
+	DB(mvOsPrintf("%s: TWSI Write addr %x, type %x, data %x\n", __func__,
 		      twsiSlave.slaveAddr.address, twsiSlave.slaveAddr.type, regVal));
 	/* Use offset as command */
 	twsiSlave.offset = regNum;
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index b397a23..7e00768 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -439,6 +439,7 @@ MV_32 mvBoardNandWidthGet(void);
 MV_U32 mvBoardEthComplexConfigGet(MV_VOID);
 MV_VOID mvBoardEthComplexConfigSet(MV_U32 ethConfig);
 MV_U32 mvBoardIdGet(MV_VOID);
+MV_VOID mvBoardIdSet(MV_U32 boardId);
 MV_U32 mvBoardSledCpuNumGet(MV_VOID);
 MV_VOID mvBoardInfoUpdate(MV_VOID);
 MV_VOID mvBoardMppIdUpdate(MV_VOID);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 8fa2ab9..894d80a 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -70,30 +70,30 @@
 #define ARRSZ(x)                (sizeof(x) / sizeof(x[0]))
 
 MV_BOARD_SATR_INFO boardSatrInfo[] = {
-/* {	{MV_SATR_TYPE_ID SarID,		MV_U32 Mask,   	      Offset, regNum , 	       isActiveForBoard[]}} */
-	{ MV_SATR_CPU_DDR_L2_FREQ,	 0x003E0000,	  17,	       1, {1,0,0,0} },
-	{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,	  22,	       1, {1,0,0,0} },
-	{ MV_SATR_CPU1_ENABLE,		 0x00008000,	  15,	       0, {1,0,0,0} },
-	{ MV_SATR_SSCG_DISABLE,		 0x00000002,	  1,	       0, {1,0,0,0} },
-	{ MV_SATR_I2C0_SERIAL_ROM,	 0X00000001,	  0,	       0, {1,0,0,0} },
-	{ MV_SATR_EXTERNAL_CPU_RESET,	 0X00000000,	  0,	       0, {1,0,0,0} },
-	{ MV_SATR_EXTERNAL_CORE_RESET,	 0X00000000,	  0,	       0, {1,0,0,0} },
-	{ MV_SATR_BOOT_DEVICE,		 0X000001F8,	  3,	       0, {1,0,0,0} },
-	{ MV_SATR_CPU_PLL_XTAL_BYPASS,	 0x00000200,	  9,	       0, {1,0,0,0} },
-	{ MV_SATR_PEX0_CLOCK,		 0x00000400,	  10,	       0, {1,0,0,0} },
-	{ MV_SATR_PEX1_CLOCK,		 0x00000800,	  11,	       0, {1,0,0,0} },
-	{ MV_SATR_REF_CLOCK_ENABLE,	 0x00000004,	  2,	       0, {1,0,0,0} },
-	{ MV_SATR_TESTER_OPTIONS,	 0x00080000,	  19,	       0, {1,0,0,0} },
-	{ MV_SATR_CPU0_ENDIANESS,	 0x00001000,	  12,	       0, {1,0,0,0} },
-	{ MV_SATR_CPU0_NMFI,		 0x00002000,	  13,	       0, {1,0,0,0} },
-	{ MV_SATR_CPU0_THUMB,		 0x00004000,	  14,	       0, {1,0,0,0} },
-	{ MV_SATR_EFUSE_BYPASS,		 0x00020000,	  17,	       0, {1,0,0,0} },
-	{ MV_SATR_POR_BYPASS,		 0x00100000,	  20,	       0, {1,0,0,0} },
-	{ MV_SATR_BOARD_ID,		 0x000000F0,	  4,	       1, {1,0,0,0} },
-	{ MV_SATR_WRITE_CPU_FREQ,	 0X0000001F,	  0,	       0, {1,0,1,0} },
-	{ MV_SATR_WRITE_CORE_CLK_SELECT, 0x00000001,	  0,	       1, {1,0,1,0} },
-	{ MV_SATR_WRITE_CPU1_ENABLE,	 0x00000002,	  1,	       1, {1,0,1,0} },
-	{ MV_SATR_WRITE_SSCG_DISABLE,	 0x00000004,	  2,	       1, {1,0,1,0} },
+/*{{MV_SATR_TYPE_ID SarID,	Mask	Offset, regNum, isActiveForBoard[]}*/
+{ MV_SATR_CPU_DDR_L2_FREQ,	 0x003E0000,	17,	1, {1, 1, 1, 1} },
+{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,	22,	1, {1, 0, 0, 0} },
+{ MV_SATR_CPU1_ENABLE,		 0x00008000,	15,	0, {1, 0, 0, 0} },
+{ MV_SATR_SSCG_DISABLE,		 0x00000002,	1,	0, {1, 0, 0, 0} },
+{ MV_SATR_I2C0_SERIAL_ROM,	 0X00000001,	0,	0, {1, 0, 0, 0} },
+{ MV_SATR_EXTERNAL_CPU_RESET,	 0X00000000,	0,	0, {1, 0, 0, 0} },
+{ MV_SATR_EXTERNAL_CORE_RESET,	 0X00000000,	0,	0, {1, 0, 0, 0} },
+{ MV_SATR_BOOT_DEVICE,		 0X000001F8,	3,	0, {1, 1, 1, 1} },
+{ MV_SATR_CPU_PLL_XTAL_BYPASS,	 0x00000200,	9,	0, {1, 0, 0, 0} },
+{ MV_SATR_PEX0_CLOCK,		 0x00000400,	10,	0, {1, 0, 0, 0} },
+{ MV_SATR_PEX1_CLOCK,		 0x00000800,	11,	0, {1, 0, 0, 0} },
+{ MV_SATR_REF_CLOCK_ENABLE,	 0x00000004,	2,	0, {1, 0, 0, 0} },
+{ MV_SATR_TESTER_OPTIONS,	 0x00080000,	19,	0, {1, 0, 0, 0} },
+{ MV_SATR_CPU0_ENDIANESS,	 0x00001000,	12,	0, {1, 0, 0, 0} },
+{ MV_SATR_CPU0_NMFI,		 0x00002000,	13,	0, {1, 0, 0, 0} },
+{ MV_SATR_CPU0_THUMB,		 0x00004000,	14,	0, {1, 0, 0, 0} },
+{ MV_SATR_EFUSE_BYPASS,		 0x00020000,	17,	0, {1, 0, 0, 0} },
+{ MV_SATR_POR_BYPASS,		 0x00100000,	20,	0, {1, 0, 0, 0} },
+{ MV_SATR_BOARD_ID,		 0x000000F0,	4,	1, {1, 0, 0, 0} },
+{ MV_SATR_WRITE_CPU_FREQ,	 0X0000001F,	0,	0, {1, 0, 1, 0} },
+{ MV_SATR_WRITE_CORE_CLK_SELECT, 0x00000001,	0,	1, {1, 0, 1, 0} },
+{ MV_SATR_WRITE_CPU1_ENABLE,	 0x00000002,	1,	1, {1, 0, 1, 0} },
+{ MV_SATR_WRITE_SSCG_DISABLE,	 0x00000004,	2,	1, {1, 0, 1, 0} },
 };
 
 MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[] = {
@@ -294,14 +294,14 @@ MV_BOARD_TWSI_INFO db88f6650InfoBoardTwsiDev[] = {
 };
 MV_BOARD_MAC_INFO db88f6650InfoBoardMacInfo[] = {
 	/* {{MV_BOARD_MAC_SPEED boardMacSpeed, MV_8 boardEthSmiAddr}} */
-	{ BOARD_MAC_SPEED_AUTO, 0x4									},
+	{ BOARD_MAC_SPEED_AUTO, 0x0									},
 	{ BOARD_MAC_SPEED_AUTO, 0x1									},
 	{ N_A,			N_A									}
 };
 MV_BOARD_MPP_TYPE_INFO db88f6650InfoBoardModTypeInfo[] = {
 	{
 		.boardMppSlic = MV_BOARD_AUTO,
-		.ethSataComplexOpt = (MV_ETHCOMP_GE_MAC1_2_RGMII1 | MV_ETHCOMP_GE_MAC0_2_GE_PHY_P0),
+		.ethSataComplexOpt = MV_ETHCOMP_GE_MAC1_2_RGMII1 | MV_ETHCOMP_GE_MAC0_2_GE_PHY_P0,
 		.ethPortsMode = 0x0
 	}
 };
@@ -395,7 +395,7 @@ MV_BOARD_INFO db88f6650_board_info = {
 	.norFlashReadParams		= 0,
 	.norFlashWriteParams		= 0,
 	/* Enable modules auto-detection. */
-	.configAutoDetect		= MV_TRUE
+	.configAutoDetect		= MV_FALSE
 };
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
index a76dd41..8c85659 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
@@ -135,19 +135,19 @@
 /*******************************************************************************
 * Avanata LP DB-6650 board
 *******************************************************************************/
-#define DB_88F6650_MPP0_7               0x11111111
-#define DB_88F6650_MPP8_15              0x22111111
-#define DB_88F6650_MPP16_23             0x33030022
-#define DB_88F6650_MPP24_31             0x22222222
-#define DB_88F6650_MPP32_39             0x22222440
-#define DB_88F6650_MPP40_47             0x44122220
-#define DB_88F6650_MPP48_55             0x44444444
-#define DB_88F6650_MPP56_63             0x44444444
-#define DB_88F6650_MPP64_67             0x204
-
-#define DB_88F6650_GPP_OUT_ENA_LOW      0x0
-#define DB_88F6650_GPP_OUT_ENA_MID      0x0
-#define DB_88F6650_GPP_OUT_ENA_HIGH     0x0
+#define DB_88F6650_MPP0_7               0x00020020  /* SPI */
+#define DB_88F6650_MPP8_15              0x22000022  /* SPI , I2C */
+#define DB_88F6650_MPP16_23             0x00000022
+#define DB_88F6650_MPP24_31             0x22222222  /* RGMII-1*/
+#define DB_88F6650_MPP32_39             0x04422222  /* GE_SMI ,GE1, PON */
+#define DB_88F6650_MPP40_47             0x22100220  /* PON , GE0 */
+#define DB_88F6650_MPP48_55             0x22222222  /*GE0*/
+#define DB_88F6650_MPP56_63             0x44444422  /* GE0 , LED */
+#define DB_88F6650_MPP64_67             0x004
+
+#define DB_88F6650_GPP_OUT_ENA_LOW      0xFFFFFFFF
+#define DB_88F6650_GPP_OUT_ENA_MID      0xFFFFFFFF
+#define DB_88F6650_GPP_OUT_ENA_HIGH     0xFFFFFFFF
 #define DB_88F6650_GPP_OUT_VAL_LOW      0x0
 #define DB_88F6650_GPP_OUT_VAL_MID      0x0
 #define DB_88F6650_GPP_OUT_VAL_HIGH     0x0
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c b/arch/arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c
index f6537c7..1f1380c 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/cpu/mvCpu.c
@@ -305,8 +305,5 @@ MV_U32 mvCpuIfPrintSystemConfig(MV_8 *buffer, MV_U32 index)
 *******************************************************************************/
 unsigned int whoAmI(void)
 {
-	MV_U32 value;
-
-	__asm__ __volatile__("mrc p15, 0, %0, c0, c0, 5   @ read CPUID reg\n" : "=r"(value) : : "memory");
-	return (value & 0x7);
+	return 0;
 }
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 8199207..e8e39e6 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -232,6 +232,9 @@ MV_STATUS mvCtrlEnvInit(MV_VOID)
 {
 	MV_U32 i, gppMask;
 
+	/* Set I2C MPP's(MPP Group 1), before reading board configuration, using TWSI read */
+	MV_REG_WRITE(mvCtrlMppRegGet(1), mvBoardMppGet(1));
+
 	mvCtrlSatrInit();
 
 	/* If set to Auto detect, read board config info, update Eth-Complex config, MPP group types and switch info */
@@ -403,7 +406,9 @@ MV_VOID mvCtrlSmiMasterSet(MV_SMI_CTRL smiCtrl)
 MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode)
 {
 	MV_FREQ_MODE freqTable[] = MV_SAR_FREQ_MODES;
-	MV_U32 freqModeSatRValue = mvCtrlSatRRead(MV_SATR_CPU_DDR_L2_FREQ);
+	MV_U32 freqModeSatRValue = MV_REG_READ(MPP_SAMPLE_AT_RESET(1));
+
+	freqModeSatRValue = ((freqModeSatRValue & 0x003E0000) >> 17);
 
 	if (MV_ERROR != freqModeSatRValue) {
 		*freqMode = freqTable[freqModeSatRValue];
@@ -436,7 +441,8 @@ MV_U32 mvCtrlSysConfigGet(MV_CONFIG_TYPE_ID configField)
 		return MV_ERROR;
 	}
 
-	if (configField < MV_CONFIG_TYPE_MAX_OPTION && mvBoardConfigTypeGet(configField, configInfo) == MV_OK)
+	if (configField < MV_CONFIG_TYPE_MAX_OPTION &&
+	    mvBoardConfigTypeGet(configField, configInfo) == MV_OK)
 		return boardOptionsConfig[configField];
 
 	DB(mvOsPrintf("%s: Error: Requested board config is not valid for this board(%d)\n", __func__, configField));
@@ -461,7 +467,7 @@ MV_U32 mvCtrlSysConfigGet(MV_CONFIG_TYPE_ID configField)
 MV_VOID mvCtrlSatrInit(void)
 {
 	MV_U32 satrVal[2];
-	MV_BOARD_SATR_INFO *satrInfo = NULL;
+	MV_BOARD_SATR_INFO satrInfo;
 	MV_U32 i;
 
 	/* initialize all S@R & Board configuration fields to -1 (MV_ERROR) */
@@ -472,8 +478,8 @@ MV_VOID mvCtrlSatrInit(void)
 	satrVal[1] = MV_REG_READ(MPP_SAMPLE_AT_RESET(1));
 
 	for (i = 0; i < MV_SATR_READ_MAX_OPTION; i++)
-		if ( mvBoardSatrInfoGet(i, satrInfo) == MV_OK )
-			satrOptionsConfig[satrInfo->satrId] = ((satrVal[satrInfo->regNum]  & (satrInfo->mask)) >> (satrInfo->offset));
+		if (mvBoardSatrInfoGet(i, &satrInfo) == MV_OK)
+			satrOptionsConfig[satrInfo.satrId] = ((satrVal[satrInfo.regNum]  & (satrInfo.mask)) >> (satrInfo.offset));
 
 }
 
@@ -506,7 +512,8 @@ MV_VOID mvCtrlSysConfigInit()
 			if ( mvBoardConfigTypeGet(i, configInfo) == MV_OK) {
 				/* each Expander conatins 2 registers */
 				regNum = configInfo->expanderNum * 2 + configInfo->regNum;
-				boardOptionsConfig[configInfo->configId] = ((configVal[regNum] & (configInfo->mask)) >> configInfo->offset);
+				boardOptionsConfig[configInfo->configId] =
+					(configVal[regNum] & configInfo->mask) >> configInfo->offset;
 			}
 		}
 	}
@@ -1073,11 +1080,7 @@ MV_U8 mvCtrlRevGet(MV_VOID)
 *******************************************************************************/
 MV_STATUS mvCtrlNameGet(char *pNameBuff)
 {
-	if (mvCtrlModelGet() == 0x7800)
-		mvOsSPrintf(pNameBuff, "%s78XX", SOC_NAME_PREFIX);
-	else
-		mvOsSPrintf(pNameBuff, "%s%x Rev %d",
-			    SOC_NAME_PREFIX, mvCtrlModelGet(), mvCtrlRevGet());
+	mvOsSPrintf(pNameBuff, "%s%x Rev %d", SOC_NAME_PREFIX, mvCtrlModelGet(), mvCtrlRevGet());
 	return MV_OK;
 }
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index 042e579..b836453 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -307,14 +307,14 @@ typedef enum {
 } MV_GROUP_3_TYPE;
 
 #define MPP_GROUP_4_TYPE { \
-	0x22222440,     /* GE1,  CPU SMI CONTROL,    TDM_LQ_UNIT */ \
-	0x22222444,     /* GE1,  CPU SMI CONTROL,    REF_CLK_OUT */ \
-	0x22222550,     /* GE1,  SWITCH SMI CONTROL, TDM_LQ_UNIT */ \
-	0x22222554,     /* GE1,  SWITCH SMI CONTROL, REF_CLK_OUT */ \
-	0x33332440,     /* SPI1, CPU SMI CONTROL,    TDM_LQ_UNIT */ \
-	0x33332444,     /* SPI1, CPU SMI CONTROL,    REF_CLK_OUT */ \
-	0x33332550,     /* SPI1, SWITCH SMI CONTROL, TDM_LQ_UNIT */ \
-	0x33332554,     /* SPI1, SWITCH SMI CONTROL, REF_CLK_OUT */ \
+	0x04422222,     /* GE1,  CPU SMI CONTROL,    TDM_LQ_UNIT */ \
+	0x44422222,     /* GE1,  CPU SMI CONTROL,    REF_CLK_OUT */ \
+	0x05522222,     /* GE1,  SWITCH SMI CONTROL, TDM_LQ_UNIT */ \
+	0x45522222,     /* GE1,  SWITCH SMI CONTROL, REF_CLK_OUT */ \
+	0x04423333,     /* SPI1, CPU SMI CONTROL,    TDM_LQ_UNIT */ \
+	0x44423333,     /* SPI1, CPU SMI CONTROL,    REF_CLK_OUT */ \
+	0x05523333,     /* SPI1, SWITCH SMI CONTROL, TDM_LQ_UNIT */ \
+	0x45523333,     /* SPI1, SWITCH SMI CONTROL, REF_CLK_OUT */ \
 }
 
 typedef enum {
@@ -468,7 +468,7 @@ typedef enum _mvTarget {
 	SPI_CS7,        /* 37 SPI_CS7				*/
 	BOOT_ROM_CS,    /* 38 BOOT_ROM_CS			*/
 	DEV_BOOCS,      /* 39 DEV_BOOCS				*/
-	CRYPT0_ENG,     /* 41 Crypto0 Engine			*/
+	CRYPT_ENG,     /* 41 Crypto0 Engine			*/
 	PP2,         	/* 43 PP2				*/
 	MAX_TARGETS
 } MV_TARGET;
-- 
1.7.5.4

