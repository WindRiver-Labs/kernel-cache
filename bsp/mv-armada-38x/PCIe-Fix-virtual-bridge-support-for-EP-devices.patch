From 82b3afca206ded28d76a288034ca3067ca627250 Mon Sep 17 00:00:00 2001
From: Tawfik Bayouk <tawfik@marvell.com>
Date: Thu, 10 Jan 2013 11:25:35 +0200
Subject: [PATCH 0437/1825] PCIe: Fix virtual bridge support for EP devices

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit e08097125be6a010617aca2e7949146d986b59ce

Use seondary bus number for indexing instead of local bus number.
This enables the virtual bridge support for EP devices working with
device number zero only.
Local bus number is hard coded to 0xFF (Last Bus number).

Change-Id: I8511de3b8e8cfc9d8900566cbe978904e6eed6dd
Reviewed-on: http://vgitil04.il.marvell.com:8080/916
Reviewed-by: Tawfik Bayouk <tawfik@marvell.com>
Tested-by: Tawfik Bayouk <tawfik@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada370/Makefile |    3 ++-
 arch/arm/mach-armada370/core.c   |    3 ---
 arch/arm/mach-armadaxp/Makefile  |    3 ++-
 arch/arm/mach-armadaxp/pex.c     |   14 ++++++--------
 4 files changed, 10 insertions(+), 13 deletions(-)

diff --git a/arch/arm/mach-armada370/Makefile b/arch/arm/mach-armada370/Makefile
index 2e9c050..6c859a9 100644
--- a/arch/arm/mach-armada370/Makefile
+++ b/arch/arm/mach-armada370/Makefile
@@ -122,7 +122,8 @@ armada370-$(CONFIG_MV_INCLUDE_SDIO) 	+= $(HAL_SDMMC_DIR)/mvSdmmcAddrDec.o
 armada370-$(CONFIG_MV_INCLUDE_XOR) 	+= $(HAL_XOR_DIR)/mvXor.o $(HAL_XOR_DIR)/mvXorAddrDec.o		\
 					   $(HAL_IF_DIR)/mvSysXor.o
 armada370-$(CONFIG_MV_INCLUDE_PEX) 	+= $(HAL_PEX_DIR)/mvPex.o					\
-					   $(HAL_IF_DIR)/mvSysPex.o $(HAL_PEX_DIR)/mvPexAddrDec.o
+					   $(HAL_IF_DIR)/mvSysPex.o $(HAL_PEX_DIR)/mvPexAddrDec.o	\
+					   $(HAL_PEX_DIR)/mvVrtBrgPex.o
 armada370-$(CONFIG_MV_INCLUDE_PCI) 	+= $(HAL_PCI_DIR)/mvPci.o $(HAL_IF_DIR)/mvSysPci.o
 armada370-$(CONFIG_MV_INCLUDE_USB) 	+= $(HAL_USB_DIR)/mvUsb.o $(HAL_USB_DIR)/mvUsbAddrDec.o		\
 					   $(HAL_IF_DIR)/mvSysUsb.o
diff --git a/arch/arm/mach-armada370/core.c b/arch/arm/mach-armada370/core.c
index 47df41c..df06d16 100644
--- a/arch/arm/mach-armada370/core.c
+++ b/arch/arm/mach-armada370/core.c
@@ -1173,9 +1173,6 @@ static void __init axp_db_init(void)
 	/* init the Board environment */
 	mvBoardEnvInit();
 
-	/* skip the SerdesPhyConfig phase*/
-	mvCtrlSetSkipSerdesPhyConfig();
-
 	/* init the controller environment */
 	if( mvCtrlEnvInit() ) {
 		printk( "Controller env initialization failed.\n" );
diff --git a/arch/arm/mach-armadaxp/Makefile b/arch/arm/mach-armadaxp/Makefile
index bd5e255..9752f1d 100755
--- a/arch/arm/mach-armadaxp/Makefile
+++ b/arch/arm/mach-armadaxp/Makefile
@@ -61,7 +61,8 @@ armadaxp-$(CONFIG_MV_INCLUDE_SDIO) 	+= $(HAL_SDMMC_DIR)/mvSdmmcAddrDec.o
 armadaxp-$(CONFIG_MV_INCLUDE_XOR) 	+= $(HAL_XOR_DIR)/mvXor.o $(HAL_XOR_DIR)/mvXorAddrDec.o		\
 					   $(HAL_IF_DIR)/mvSysXor.o
 armadaxp-$(CONFIG_MV_INCLUDE_PEX) 	+= $(HAL_PEX_DIR)/mvPex.o					\
-					   $(HAL_IF_DIR)/mvSysPex.o $(HAL_PEX_DIR)/mvPexAddrDec.o
+					   $(HAL_IF_DIR)/mvSysPex.o $(HAL_PEX_DIR)/mvPexAddrDec.o	\
+					   $(HAL_PEX_DIR)/mvVrtBrgPex.o
 armadaxp-$(CONFIG_MV_INCLUDE_PCI) 	+= $(HAL_PCI_DIR)/mvPci.o $(HAL_IF_DIR)/mvSysPci.o
 armadaxp-$(CONFIG_MV_INCLUDE_USB) 	+= $(HAL_USB_DIR)/mvUsb.o $(HAL_USB_DIR)/mvUsbAddrDec.o		\
 					   $(HAL_IF_DIR)/mvSysUsb.o
diff --git a/arch/arm/mach-armadaxp/pex.c b/arch/arm/mach-armadaxp/pex.c
index a02bf31..4ea6bb6 100644
--- a/arch/arm/mach-armadaxp/pex.c
+++ b/arch/arm/mach-armadaxp/pex.c
@@ -126,7 +126,8 @@ void __init mv_pex_preinit(void)
 		printk("Enabled - Link UP\n");
 		/* Assign bus number 0 to first active/available bus */
 		if (pex0flg == 0) {
-	       		mvPexLocalBusNumSet(pexHWInf, 0x0);
+			mvPexLocalBusNumSet(pexHWInf, 0xFF);
+			mvPexSecondaryBusNumSet(pexHWInf, 0x0);
 	       		pex0flg = 1;
 		}
 
@@ -208,13 +209,9 @@ static int mv_pci_read_config(struct pci_bus *bus,
 	bus_num = bus->number;
 	dev_no = PCI_SLOT(devfn);
 
-	/* don't return for our device */
-	localBus = mvPexLocalBusNumGet(pciIf);
-	if ((dev_no == 0) && ( bus_num == localBus))
-	{
-		DB(printk("PCI %d read from our own dev return 0xffffffff \n", pciIf));
+	/* Only one device (0) is possible per interface (secondary bus enabled) */
+	if (dev_no != 0)
 		return 0xffffffff;
-	}
 
 	func = PCI_FUNC(devfn); 
 	regOff = (MV_U32)where & (PXCAR_REG_NUM_MASK | PXCAR_REAL_EXT_REG_NUM_MASK); /* total of 12 bits: 8 legacy + 4 extended */
@@ -374,7 +371,8 @@ struct pci_bus *mv_pex_scan_bus(int nr, struct pci_sys_data *sys)
 			continue;
 
 		if (MV_TRUE == mvCtrlPwrClckGet(PEX_UNIT_ID, pexNextHWInf)) {
-			mvPexLocalBusNumSet(pexNextHWInf, (bus->subordinate + 1));
+			mvPexLocalBusNumSet(pexNextHWInf, 0xFF);
+			mvPexSecondaryBusNumSet(pexNextHWInf, (bus->subordinate + 1));
 			break;
 		}
 	}
-- 
1.7.5.4

