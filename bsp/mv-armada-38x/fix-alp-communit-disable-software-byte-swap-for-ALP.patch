From d73b9edc5a9e5044c9c3e42daf55e32967ae9792 Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Tue, 8 Jul 2014 09:01:19 +0800
Subject: [PATCH 1769/1825] fix: alp: communit: disable software byte swap for
 ALP.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 938ff9779d91d7559386a4e645aef311479f6eef

     For ALP, the software byte swap for linear mode is not needed, could
implement it by hardware.
Signed-off-by: Victor Gu <xigu@marvell.com>

Change-Id: I20e863cc0f2a6484526d60e1ef4b384feacc11d6
Reviewed-on: http://vgitil04.il.marvell.com:8080/9039
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_hal/voiceband/commUnit/mvCommUnit.c         |    9 ++++++++-
 .../mv_hal/voiceband/commUnit/mvCommUnit.h         |    2 ++
 .../mv_hal/voiceband/commUnit/mvCommUnitRegs.h     |    7 +++++++
 3 files changed, 17 insertions(+), 1 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.c b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.c
index db8ddc8..9626711 100644
--- a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.c
+++ b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.c
@@ -261,6 +261,10 @@ MV_STATUS mvCommUnitHalInit(MV_TDM_PARAMS *tdmParams, MV_TDM_HAL_DATA *halData)
 		MV_REG_WRITE(MCSC_CHx_TRANSMIT_CONFIG_REG(chan), CONFIG_MTCRx);
 	}
 
+	/* Enable RX/TX linear byte swap */
+	MV_REG_WRITE(MCSC_GLOBAL_CONFIG_EXTENDED_REG,
+		    (MV_REG_READ(MCSC_GLOBAL_CONFIG_EXTENDED_REG) | CONFIG_LINEAR_BYTE_SWAP));
+
 	/***********************************************/
 	/* Shared Bus to Crossbar Bridge Configuration */
 	/***********************************************/
@@ -811,6 +815,7 @@ MV_STATUS mvCommUnitTx(MV_U8 *pTdmTxBuff)
 	/* Calculate total Tx buffer size */
 	buffSize = (sampleSize * MV_TDM_TOTAL_CH_SAMPLES * samplingCoeff * totalChannels);
 
+#ifndef CONFIG_AVANTA_LP
 	if (sampleSize > MV_PCM_FORMAT_1BYTE) {
 		TRC_REC("Linear mode(Tx): swapping bytes\n");
 			for (index = 0; index < buffSize; index += 2) {
@@ -820,6 +825,7 @@ MV_STATUS mvCommUnitTx(MV_U8 *pTdmTxBuff)
 			}
 		TRC_REC("Linear mode(Tx): swapping bytes...done.\n");
 	}
+#endif
 
 	/* Flush+Invalidate the next Tx buffer */
 	mvOsCacheFlush(NULL, pTdmTxBuff, buffSize);
@@ -842,6 +848,7 @@ MV_STATUS mvCommUnitRx(MV_U8 *pTdmRxBuff)
 	/* Invalidate current received buffer from cache */
 	mvOsCacheInvalidate(NULL, pTdmRxBuff, buffSize);
 
+#ifndef CONFIG_AVANTA_LP
 	if (sampleSize > MV_PCM_FORMAT_1BYTE) {
 		TRC_REC("  -> Linear mode(Rx): swapping bytes\n");
 			for (index = 0; index < buffSize; index += 2) {
@@ -851,7 +858,7 @@ MV_STATUS mvCommUnitRx(MV_U8 *pTdmRxBuff)
 			}
 		TRC_REC("  <- Linear mode(Rx): swapping bytes...done.\n");
 	}
-
+#endif
 	MV_TRC_REC("<-%s\n", __func__);
 	return MV_OK;
 }
diff --git a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.h b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.h
index 0e96c78..904943a 100644
--- a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.h
+++ b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.h
@@ -113,6 +113,8 @@ extern "C" {
 /* MCSC */
 #define CONFIG_MRCRx			(MRCRx_RRVD_MASK | MRCRx_MODE_MASK)
 #define CONFIG_MTCRx			(MTCRx_TRVD_MASK | MTCRx_MODE_MASK)
+#define CONFIG_LINEAR_BYTE_SWAP		(MCSC_GLOBAL_CONFIG_LINEAR_TX_SWAP_MASK | \
+					 MCSC_GLOBAL_CONFIG_LINEAR_RX_SWAP_MASK)
 
 /* TDM */
 #if defined(MV_TDM_USE_EXTERNAL_PCLK_SOURCE)
diff --git a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnitRegs.h b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnitRegs.h
index d1ea576..73d3194 100644
--- a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnitRegs.h
+++ b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnitRegs.h
@@ -145,6 +145,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define MCSC_EXTENDED_INT_MASK_REG		(MV_COMM_UNIT_REGS_BASE + 0x2810)
 #define MCSC_TX_CHANNEL_BALANCING_MASK_REG	(MV_COMM_UNIT_REGS_BASE + 0x284C)
 #define MCSC_RX_CHANNEL_BALANCING_MASK_REG	(MV_COMM_UNIT_REGS_BASE + 0x2850)
+#define MCSC_GLOBAL_CONFIG_EXTENDED_REG		(MV_COMM_UNIT_REGS_BASE + 0x2890)
 
 /* MCSC_CHx_COMM_EXEC_STAT_REG bits */
 #define MCSC_ABR_E_STAT_OFFS			25
@@ -208,6 +209,12 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define  MCSC_GLOBAL_INT_CAUSE_MGIS_OFFS	30
 #define  MCSC_GLOBAL_INT_CAUSE_MGIS_MASK	(1 << MCSC_GLOBAL_INT_CAUSE_MGIS_OFFS)
 
+/* MCSC_GLOBAL_CONFIG_EXTENDED_REG bits */
+#define  MCSC_GLOBAL_CONFIG_LINEAR_TX_SWAP_OFFS	2
+#define  MCSC_GLOBAL_CONFIG_LINEAR_TX_SWAP_MASK	(1 << MCSC_GLOBAL_CONFIG_LINEAR_TX_SWAP_OFFS)
+#define  MCSC_GLOBAL_CONFIG_LINEAR_RX_SWAP_OFFS	3
+#define  MCSC_GLOBAL_CONFIG_LINEAR_RX_SWAP_MASK	(1 << MCSC_GLOBAL_CONFIG_LINEAR_RX_SWAP_OFFS)
+
 /************************************************/
 /*	Multi-Channel DMA(MCDMA)       		*/
 /************************************************/
-- 
1.7.5.4

