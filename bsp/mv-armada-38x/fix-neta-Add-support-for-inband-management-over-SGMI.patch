From baffd14afb95dee18ee420098598c4ca624c6225 Mon Sep 17 00:00:00 2001
From: kostap <kostap@marvell.com>
Date: Thu, 19 Jun 2014 09:05:34 +0300
Subject: [PATCH 1742/1825] fix: neta: Add support for inband management over
 SGMII

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 72338a1fc4368d03e886a2d1577a367f87bad3de

	- Extend the mvNetaPortPowerUp and mvNetaPortSgmiiConfig APIs for
	  supporting new boolean parameter "IsInband" for management mode
	- Add configuration procedure for turning ON inband management mode
          parameters for SGMII ports.
	- Select inband management mode for ports that use -1 (MV_U32)
	  as their PHY address in the configuration structures
	- Update MSYS SMI address variable to use 32bit - aligned with rest of SoCs

Change-Id: I2d254d4fcd124dce42d5e955f30915cec0b72574
Signed-off-by: kostap <kostap@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8608
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mach-msys/msys_family/boardEnv/mvBoardEnvLib.h |    2 +-
 .../mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c     |    4 +-
 arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c      |   42 ++++++++++++++++---
 arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h      |    2 +-
 arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h  |   13 ++++++
 5 files changed, 52 insertions(+), 11 deletions(-)

diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h
index c76402cc..129618e 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h
@@ -184,7 +184,7 @@ typedef enum _boardMacSpeed {
 
 typedef struct _boardMacInfo {
 	MV_BOARD_MAC_SPEED boardMacSpeed;
-	MV_U8	boardEthSmiAddr;
+	MV_U32	boardEthSmiAddr;
 } MV_BOARD_MAC_INFO;
 
 typedef struct _boardMppInfo {
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
index fda7013..6e5f1a2 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
@@ -3570,7 +3570,7 @@ int mv_eth_port_resume(int port)
 		printk(KERN_ERR "%s: port %d is not suspend.\n", __func__, port);
 		return MV_ERROR;
 	}
-	mvNetaPortPowerUp(port, pp->plat_data->is_sgmii, pp->plat_data->is_rgmii);
+	mvNetaPortPowerUp(port, pp->plat_data->is_sgmii, pp->plat_data->is_rgmii, (pp->plat_data->phy_addr == -1));
 
 	mv_eth_win_init(port);
 
@@ -4149,7 +4149,7 @@ static int mv_eth_probe(struct platform_device *pdev)
 
 	pr_info("port #%d: is_sgmii=%d, is_rgmii=%d, phy_addr=%d\n",
 		port, plat_data->is_sgmii, plat_data->is_rgmii, plat_data->phy_addr);
-	mvNetaPortPowerUp(port, plat_data->is_sgmii, plat_data->is_rgmii);
+	mvNetaPortPowerUp(port, plat_data->is_sgmii, plat_data->is_rgmii, (plat_data->phy_addr == -1));
 
 	mv_eth_win_init(port);
 
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c
index 54b6178..6d83ec1 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.c
@@ -83,7 +83,7 @@ static MV_BOOL netaSetSpecialMcastAddr(int port, MV_U8 lastByte, int queue);
 static MV_BOOL netaSetOtherMcastAddr(int port, MV_U8 crc8, int queue);
 #endif /* CONFIG_MV_ETH_LEGACY_PARSER */
 
-static void mvNetaPortSgmiiConfig(int port);
+static void mvNetaPortSgmiiConfig(int port, MV_BOOL isInband);
 static MV_U8 *mvNetaDescrMemoryAlloc(MV_NETA_PORT_CTRL * pPortCtrl, int descSize,
 				   MV_ULONG *pPhysAddr, MV_U32 *memHandle);
 static void mvNetaDescrMemoryFree(MV_NETA_PORT_CTRL *pPortCtrl, MV_BUF_INFO *pDescBuf);
@@ -529,17 +529,45 @@ MV_STATUS       mvEthGmacRgmiiSet(int port, int enable)
 	return MV_OK;
 }
 
-static void mvNetaPortSgmiiConfig(int port)
+static void mvNetaPortSgmiiConfig(int port, MV_BOOL isInband)
 {
 	MV_U32 regVal;
 
+
 	regVal = MV_REG_READ(NETA_GMAC_CTRL_2_REG(port));
 	regVal |= (NETA_GMAC_PSC_ENABLE_MASK);
 	MV_REG_WRITE(NETA_GMAC_CTRL_2_REG(port), regVal);
+
+	if (isInband) {
+
+		/* set Inband AN enable in MAC Control 2 */
+		regVal = MV_REG_READ(NETA_GMAC_CTRL_2_REG(port));
+		regVal |= NETA_GMAC_INBAND_AN_MODE_MASK;
+		MV_REG_WRITE(NETA_GMAC_CTRL_2_REG(port), regVal);
+
+		/* set portType to SGMII (encoding) in MAC Control 0 */
+		regVal = MV_REG_READ(NETA_GMAC_CTRL_0_REG(port));
+		regVal &= ~NETA_GMAC_PORT_TYPE_MASK;
+		regVal |= NETA_GMAC_PORT_TYPE_SGMII;
+		MV_REG_WRITE(NETA_GMAC_CTRL_0_REG(port), regVal);
+
+		/* in case of SGMII mode enable InBand AutoNeg */
+		regVal = MV_REG_READ(NETA_GMAC_AN_CTRL_REG(port));
+		regVal &= ~NETA_ENABLE_FLOW_CONTROL_AUTO_NEG_MASK;
+		regVal |= NETA_INBAND_AN_EN_MASK;
+		MV_REG_WRITE(NETA_GMAC_AN_CTRL_REG(port), regVal);
+
+		/* Enable 1MS clock generation for SGMII */
+		regVal = MV_REG_READ(NETA_GMAC_CLOCK_DIVIDER_REG(port));
+		regVal |= NETA_GMAC_1MS_CLOCK_ENABLE_BIT_MASK;
+		MV_REG_WRITE(NETA_GMAC_CLOCK_DIVIDER_REG(port), regVal);
+
+	}
+
 }
 
 
-void mvNetaPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii)
+void mvNetaPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii, MV_BOOL isInband)
 {
 	MV_U32 regVal;
 
@@ -547,7 +575,7 @@ void mvNetaPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii)
 	MV_REG_WRITE(ETH_UNIT_INTR_CAUSE_REG(port), 0);
 
 	if (isSgmii)
-		mvNetaPortSgmiiConfig(port);
+		mvNetaPortSgmiiConfig(port, isInband);
 
 	mvEthGmacRgmiiSet(port, isRgmii);
 
@@ -990,7 +1018,7 @@ MV_STATUS           mvNetaGmacLpiSet(int port, int mode)
 
 #else	/* Old GMAC functions */
 
-static void mvNetaPortSgmiiConfig(int port)
+static void mvNetaPortSgmiiConfig(int port, MV_BOOL isInband)
 {
 	MV_U32 regVal;
 
@@ -1000,7 +1028,7 @@ static void mvNetaPortSgmiiConfig(int port)
 	MV_REG_WRITE(ETH_PORT_SERIAL_CTRL_1_REG(port), regVal);
 }
 
-void mvNetaPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii)
+void mvNetaPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii,  MV_BOOL isInband)
 {
 	MV_U32 regVal;
 
@@ -1009,7 +1037,7 @@ void mvNetaPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii)
 
 
 	if (isSgmii)
-		mvNetaPortSgmiiConfig(port);
+		mvNetaPortSgmiiConfig(port, isInband);
 
 	/* Cancel Port Reset */
 	regVal = MV_REG_READ(ETH_PORT_SERIAL_CTRL_1_REG(port));
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
index 977f6c0..9e158c3 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
@@ -760,7 +760,7 @@ int 		mvNetaPhyAddrGet(int port);
 void		mvNetaPhyAddrPollingDisable(int port);
 
 void 		mvNetaPortPowerDown(int port);
-void 		mvNetaPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii);
+void		mvNetaPortPowerUp(int port, MV_BOOL isSgmii, MV_BOOL isRgmii, MV_BOOL isInband);
 
 /* Interrupt Coalesting functions */
 MV_STATUS mvNetaRxqTimeCoalSet(int port, int rxq, MV_U32 uSec);
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h
index 967743d..b7447a46 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaRegs.h
@@ -571,6 +571,9 @@ extern int port_vbase[MV_ETH_MAX_PORTS];
 
 #define NETA_GMAC_CTRL_2_REG(p)             (NETA_REG_BASE(p) + 0x2C08)
 
+#define NETA_GMAC_INBAND_AN_MODE_BIT		0
+#define NETA_GMAC_INBAND_AN_MODE_MASK		(1 << NETA_GMAC_INBAND_AN_MODE_BIT)
+
 #define NETA_GMAC_PSC_ENABLE_BIT            3
 #define NETA_GMAC_PSC_ENABLE_MASK           (1 << NETA_GMAC_PSC_ENABLE_BIT)
 
@@ -589,6 +592,9 @@ extern int port_vbase[MV_ETH_MAX_PORTS];
 #define NETA_FORCE_LINK_PASS_BIT                1
 #define NETA_FORCE_LINK_PASS_MASK               (1 << NETA_FORCE_LINK_PASS_BIT)
 
+#define NETA_INBAND_AN_EN_BIT					2
+#define NETA_INBAND_AN_EN_MASK					(1 << NETA_INBAND_AN_EN_BIT)
+
 #define NETA_SET_MII_SPEED_100_BIT              5
 #define NETA_SET_MII_SPEED_100_MASK             (1 << NETA_SET_MII_SPEED_100_BIT)
 
@@ -645,6 +651,13 @@ extern int port_vbase[MV_ETH_MAX_PORTS];
 #define NETA_TX_FLOW_CTRL_ACTIVE_MASK       (1 << NETA_TX_FLOW_CTRL_ACTIVE_BIT)
 /*-------------------------------------------------------------------------------*/
 
+#define NETA_GMAC_CLOCK_DIVIDER_REG(p)		(NETA_REG_BASE(p) + 0x24f4)
+
+#define NETA_GMAC_1MS_CLOCK_ENABLE_BIT		31
+#define NETA_GMAC_1MS_CLOCK_ENABLE_BIT_MASK	(1 << NETA_GMAC_1MS_CLOCK_ENABLE_BIT)
+
+/*-------------------------------------------------------------------------------*/
+
 #define NETA_GMAC_SERIAL_REG(p)             (NETA_REG_BASE(p) + 0x2C14)
 
 #define NETA_GMAC_FIFO_PARAM_0_REG(p)       (NETA_REG_BASE(p) + 0x2C18)
-- 
1.7.5.4

