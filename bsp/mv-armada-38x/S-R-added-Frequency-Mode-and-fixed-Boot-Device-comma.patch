From 31983699d89998dfe97f037752d90285314002cc Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Mon, 11 Mar 2013 14:32:05 +0200
Subject: [PATCH 0480/1825] S@R : added Frequency Mode and fixed Boot Device
 commands

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit ba8e1790598435f6c310d7a94235accc8cf79fd0

- Added mvBoardFreqModeGet function & frequency modes table
- Added mvBoardBootDeviceGet & mvBoardBootDeviceGet functions

Change-Id: Ic37522f804b86133a04875f559b9caecf2870e55
Reviewed-on: http://vgitil04.il.marvell.com:8080/1238
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |  125 ++++++++++++++++----
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |   46 +++++++-
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |    6 +-
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.h     |    5 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   12 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    6 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |    7 +-
 7 files changed, 164 insertions(+), 43 deletions(-)
 mode change 100644 => 100755 arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
 mode change 100644 => 100755 arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 82d123c..d4ce76c 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -867,42 +867,35 @@ MV_VOID mvBoardConfigInit(void)
 *       the selected MV_BOARD_BOOT_SRC
 *
 *******************************************************************************/
-MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_U32 sarBootDevice)
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_U32 sarBootDeviceValue)
 {
-	MV_SAR_BOOT_TABLE sarTable[] = MV_SAR_TABLE_VAL;
-	MV_SAR_BOOT_TABLE sarBootEntry = sarTable[sarBootDevice];
 	MV_U32 groupType;
 	MV_BOOL SW_SMI;
+	MV_BOARD_BOOT_SRC bootSrc= mvBoardBootDeviceGet(sarBootDeviceValue);
 
-	switch (sarBootEntry.bootSrc) {
+	switch (bootSrc) {
 	case MSAR_0_BOOT_NAND_NEW:
 		mvBoardMppTypeSet(0, NAND_BOOT_V2);
 		mvBoardMppTypeSet(1, NAND_BOOT_V2);
-		return MSAR_0_BOOT_NAND_NEW;
 		break;
 	case MSAR_0_BOOT_NAND_LEGACY:
 		mvBoardMppTypeSet(0, NAND_BOOT_V1);
 		mvBoardMppTypeSet(1, NAND_BOOT_V1);
-		return MSAR_0_BOOT_NAND_LEGACY;
 		break;
 	case MSAR_0_BOOT_SPI_FLASH:
-		if (sarBootEntry.attr1 == MSAR_0_SPI0) {
-			groupType = ((mvCtrlConfigGet(MV_CONFIG_DEVICE_BUS_MODULE) == 0x2) ? SPI0_BOOT_SPDIF_AUDIO : SPI0_BOOT);
-			mvBoardMppTypeSet(0, groupType);
-			mvBoardMppTypeSet(1, groupType);
-			return MSAR_0_BOOT_SPI_FLASH;
-		}else  {                        /* MSAR_0_SPI1 - update Groups 3-4 */
-			mvBoardMppTypeSet(3, SDIO_SPI1_UNIT);
-			SW_SMI = MV_TRUE;       // test if SW or CPU SMI control (omriii : how to decide ?)
-			if (mvCtrlIsLantiqTDM())
-				mvBoardMppTypeSet(4, (SW_SMI ? SPI1_SW_SMI_CTRL_TDM_LQ_UNIT : SPI1_CPU_SMI_CTRL_TDM_LQ_UNIT));
-			else    /*REF_CLK_OUT*/
-				mvBoardMppTypeSet(4, (SW_SMI ? SPI1_SW_SMI_CTRL_REF_CLK_OUT : SPI1_CPU_SMI_CTRL_REF_CLK_OUT));
-			// omriii : if nand/spi0 not for BOOT, enable Audio-SPDIF by default?
-			mvBoardMppTypeSet(0, SPI0_BOOT_SPDIF_AUDIO);
-			mvBoardMppTypeSet(1, SPI0_BOOT_SPDIF_AUDIO);
-			return MSAR_0_BOOT_SPI1_FLASH;
-		}
+		groupType = ((mvCtrlConfigGet(MV_CONFIG_DEVICE_BUS_MODULE) == 0x2) ? SPI0_BOOT_SPDIF_AUDIO : SPI0_BOOT);
+		mvBoardMppTypeSet(0, groupType);
+		mvBoardMppTypeSet(1, groupType);
+	case MSAR_0_BOOT_SPI1_FLASH:	/* MSAR_0_SPI1 - update Groups 3-4 */
+		mvBoardMppTypeSet(3, SDIO_SPI1_UNIT);
+		SW_SMI = MV_TRUE;       // test if SW or CPU SMI control (omriii : how to decide ?)
+		if (mvCtrlIsLantiqTDM())
+			mvBoardMppTypeSet(4, (SW_SMI ? SPI1_SW_SMI_CTRL_TDM_LQ_UNIT : SPI1_CPU_SMI_CTRL_TDM_LQ_UNIT));
+		else    /*REF_CLK_OUT*/
+			mvBoardMppTypeSet(4, (SW_SMI ? SPI1_SW_SMI_CTRL_REF_CLK_OUT : SPI1_CPU_SMI_CTRL_REF_CLK_OUT));
+		// omriii : if nand/spi0 not for BOOT, enable Audio-SPDIF by default?
+		mvBoardMppTypeSet(0, SPI0_BOOT_SPDIF_AUDIO);
+		mvBoardMppTypeSet(1, SPI0_BOOT_SPDIF_AUDIO);
 		break;
 /* omriii : what to do with the next Boot devices  ?
         case MSAR_0_BOOT_NOR_FLASH:
@@ -919,6 +912,92 @@ MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_U32 sarBootDevice)
 	default:
 		return MV_ERROR;
 	}
+	return bootSrc;
+}
+
+/*******************************************************************************
+* mvBoardBootDeviceGet -   Get the Selected S@R boot device
+*
+* DESCRIPTION:
+*   read board BOOT configuration from S@R and return Boot device accordingly
+*
+* INPUT:  sarBootDevice - BOOT_DEVICE value from S@R.
+*
+* OUTPUT:  None.
+*
+* RETURN:
+*       the selected MV_BOARD_BOOT_SRC
+*
+*******************************************************************************/
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGet(MV_U32 sarBootDeviceValue)
+{
+	MV_SAR_BOOT_TABLE sarTable[] = MV_SAR_TABLE_VAL;
+	MV_SAR_BOOT_TABLE sarBootEntry = sarTable[sarBootDeviceValue];
+	if (sarBootEntry.bootSrc!=MSAR_0_BOOT_SPI_FLASH)
+		return sarBootEntry.bootSrc;
+	else /* if boot source is SPI ,verify which CS (0/1) */
+		if (mvBoardBootAttrGet(sarBootDeviceValue,1) == MSAR_0_SPI0)
+			return MSAR_0_BOOT_SPI_FLASH;
+		else return MSAR_0_BOOT_SPI1_FLASH;
+}
+
+/*******************************************************************************
+* mvBoardBootAttrGet -  Get the selected S@R Boot device attributes[1/2/3]
+*
+* DESCRIPTION:
+*   read board BOOT configuration and return attributes accordingly
+*
+* INPUT:  sarBootDevice - BOOT_DEVICE value from S@R.*
+* 	  attrNum - attribute number [1/2/3]
+* OUTPUT:  None.
+*
+* RETURN:
+*       the selected attribute value
+*
+*******************************************************************************/
+MV_U32 mvBoardBootAttrGet(MV_U32 sarBootDeviceValue, MV_U8 attrNum)
+{
+	MV_SAR_BOOT_TABLE sarTable[] = MV_SAR_TABLE_VAL;
+	MV_SAR_BOOT_TABLE sarBootEntry = sarTable[sarBootDeviceValue];
+	switch (attrNum) {
+	case 1:
+		return sarBootEntry.attr1;
+		break;
+	case 2:
+		return sarBootEntry.attr2;
+		break;
+	case 3:
+		return sarBootEntry.attr3;
+		break;
+	default:
+		return MV_ERROR;
+	}
+}
+/*******************************************************************************
+* mvBoardFreqModeGet - Get the selected S@R Frequency mode
+*
+* DESCRIPTION:
+*   read board BOOT configuration and return the selcted S@R Frequency mode
+*
+* INPUT:  freqMode - MV_FREQ_MODE struct to return the freq mode
+*
+* OUTPUT: None,
+*
+* RETURN:
+*       MV_STATUS to indicate a successful read.
+*
+*******************************************************************************/
+MV_STATUS mvBoardFreqModeGet(MV_FREQ_MODE *freqMode)
+{
+	MV_FREQ_MODE freqTable[] = MV_SAR_FREQ_MODES;
+	MV_U32 freqModeSatRValue = mvCtrlSatRRead(MV_SATR_CPU_FREQ);
+	if (MV_ERROR !=freqModeSatRValue )
+	{
+		*freqMode = freqTable[freqModeSatRValue];
+		return MV_OK;
+	}
+	else
+		return MV_ERROR;
 }
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index 28b3ab6..2c36a3a 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -533,6 +533,47 @@ typedef struct _mvSARBootTable {
 /*63*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI1, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_32BIT, 40               } \
 }
 
+#define FREQ_MODES_NUM		29
+typedef struct {
+	MV_U8 id;
+	char *cpuFreq;
+	char *ddrFreq;
+	char *l2Freq;
+} MV_FREQ_MODE;
+
+#define MV_SAR_FREQ_MODES {\
+	{0,  "266",  "266", "133" },\
+	{1,  "333",  "167", "167" },\
+	{2,  "333",  "222", "167" },\
+	{3,  "333",  "333", "167" },\
+	{4,  "400",  "200", "200" },\
+	{5,  "400",  "267", "200" },\
+	{6,  "400",  "400", "200" },\
+	{7,  "500",  "250", "250" },\
+	{8,  "500",  "334", "250" },\
+	{9,  "500",  "400", "250" },\
+	{10,  "533", "267", "267" },\
+	{11, "533",  "356", "267" },\
+	{12, "533",  "533", "267" },\
+	{13, "600",  "300", "300" },\
+	{14, "600",  "400", "300" },\
+	{15, "600",  "600", "300" },\
+	{16, "666",  "333", "333" },\
+	{17, "666",  "444", "333" },\
+	{18, "666",  "666", "333" },\
+	{19, "800",  "267", "400" },\
+	{20, "800",  "400", "400" },\
+	{21, "800",  "534", "400" },\
+	{22, "900",  "300", "450" },\
+	{23, "900",  "450", "450" },\
+	{24, "900",  "600", "450" },\
+	{25, "1000", "500", "500" },\
+	{26, "1000", "667", "500" },\
+	{27, "1000", "500", "333" },\
+	{28, "400",  "400", "400" },\
+	{29, "1100", "550", "550" }\
+};
+
 /* For backward compatability with Legacy mode */
 #define mvBoardSwitchConnectedPortGet(port)	(-1)
 #define mvBoardIsSwitchConnected(port)  	(mvBoardSwitchConnectedPortGet(port) != -1)
@@ -591,7 +632,10 @@ void mvBoardConfigWrite(MV_VOID);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac0ConfigGet(MV_VOID);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardMac1ConfigGet(MV_VOID);
 MV_ETH_COMPLEX_TOPOLOGY mvBoardLaneSGMIIGet(MV_VOID);
-MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_U32 sarBootDevice);
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_U32 sarBootDeviceValue);
+MV_BOARD_BOOT_SRC mvBoardBootDeviceGet(MV_U32 sarBootDeviceValue);
+MV_U32 mvBoardBootAttrGet(MV_U32 sarBootDeviceValue, MV_U8 attrNum);
+MV_STATUS mvBoardFreqModeGet(MV_FREQ_MODE *freqMode);
 MV_U8 mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum);
 MV_STATUS mvBoardTwsiSet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum, MV_U8 regVal);
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 083cb09..7956f74 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -75,9 +75,9 @@ MV_BOARD_SAR_INFO boardSarInfo[] = {
 	{ MV_SATR_CORE_CLK_SELECT,	 0x00400000,		  22,		       1		 },
 	{ MV_SATR_CPU1_ENABLE,		 0x00008000,		  15,		       0		 },
 	{ MV_SATR_SSCG_DISABLE,		 0x00000002,		  1,		       0		 },
-	{ MV_SATR_I2C0_Serial_ROM,	 0x00000001,		  0,		       0		 },
-	{ MV_SATR_External_CPU_Reset,	 0x0,			  0,		       0		 },     /* omriii : ask max the relevance of these fields */
-	{ MV_SATR_External_CORE_Reset,	 0x0,			  0,		       0		 },     /* omriii : ask max the relevance of these fields */
+	{ MV_SATR_I2C0_SERIAL_ROM,	 0X00000001,		  0,		       0		 },
+	{ MV_SATR_EXTERNAL_CPU_RESET,	 0X0,			  0,		       0		 },     /* OMRIII : ASK MAX THE RELEVANCE OF THESE FIELDS */
+	{ MV_SATR_EXTERNAL_CORE_RESET,	 0X0,			  0,		       0		 },     /* OMRIII : ASK MAX THE RELEVANCE OF THESE FIELDS */
 	{ MV_SATR_BOOT_DEVICE,		 0X1F8,			  3,		       0		 },
 	{ MV_SATR_CPU_PLL_XTAL_BYPASS,	 0x00000200,		  9,		       0		 },
 	{ MV_SATR_PEX0_CLOCK,		 0x00000400,		  10,		       0		 },
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
index 94d9243..2255a53 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
@@ -80,15 +80,16 @@
 /* New board ID numbers */
 
 typedef enum _mvBoardId {
-	BOARD_ID_BASE,
-	MV_BOARD_ID_AVANTA_LP_FPGA,
 	DB_6660_ID,
 	RD_6660_ID,
 	DB_6650_ID,
 	RD_6650_ID,
+	MV_BOARD_ID_AVANTA_LP_FPGA,
 	MV_MAX_BOARD_ID
 } MV_BOARD_ID;
 
+#define BOARD_ID_BASE DB_6660_ID
+
 #define MV_INVALID_BOARD_ID             0xFFFFFFFF
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
old mode 100644
new mode 100755
index a879c25..4dd35d5
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -261,6 +261,7 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField,MV_SATR_TYPE_ID satrRea
 			return MV_OK;
 		}
 	}
+	return MV_ERROR;
 }
 
 /*******************************************************************************
@@ -329,14 +330,13 @@ void mvCtrlSatrInit(void)
 	int i = 0;
 
 	/* initialize all S@R & Board configuration fields to -1 (MV_ERROR) */
-	for (i = 0; i < MV_SATR_READ_MAX_OPTION; i++)
-		satrOptionsConfig[i] = MV_ERROR;
+	memset(&satrOptionsConfig, MV_ERROR, (sizeof(MV_U32)*MV_SATR_READ_MAX_OPTION) );
 
 	for (i = 0; i < MV_CONFIG_TYPE_MAX_OPTION; i++)
 		boardOptionsConfig[i] = MV_ERROR;
 
 	/* detect board ID to determine which S@R fields are relevant */
-	//boardID=mvBoardIdGet();
+	/* omriii : add boardID=mvBoardIdGet(); ??? */
 
 	/* Read Sample @ Reset configuration, memory access read : */
 	for (i = 0; i < MV_SATR_READ_MAX_OPTION; i++) {
@@ -349,13 +349,15 @@ void mvCtrlSatrInit(void)
 	/*Read rest of Board Configuration, EEPROM / Deep Switch access read : */
 	tempVal[0] = mvBoardTwsiGet(BOARD_DEV_TWSI_EEPROM, 0, 0);               /* EEPROM Reg#0 */
 	tempVal[1] = mvBoardTwsiGet(BOARD_DEV_TWSI_EEPROM, 0, 1);               /* EEPROM Reg#1 */
-	if (((MV_8)MV_ERROR == (MV_8)tempVal[0]) || ((MV_8)MV_ERROR == (MV_8)tempVal[1]) ) { /* EEPROM is not valid , data is jumpered to deep switch- read from there */
+	if (((MV_8)MV_ERROR == (MV_8)tempVal[0]) || ((MV_8)MV_ERROR == (MV_8)tempVal[1]) ) { 
+		/* EEPROM is not valid , data is jumpered to deep switch- read from there */
 		tempVal[0] = mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, 0, 0);  /* Deep Switch Reg#0 */
 		tempVal[1] = mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, 0, 1);  /* Deep Switch Reg#1 */
 		/* omriii : verify reads from BOARD_DEV_TWSI_IO_EXPANDER are correct */
 	}
 
-	if (((MV_8)MV_ERROR == (MV_8)tempVal[0]) || ((MV_8)MV_ERROR == (MV_8)tempVal[1]))       /* Deep Switch reading failed - omriii : use defaults (which iszeros for all fields) ??? */
+	if (((MV_8)MV_ERROR == (MV_8)tempVal[0]) || ((MV_8)MV_ERROR == (MV_8)tempVal[1]))       
+		/* Deep Switch reading failed - omriii : use defaults (which iszeros for all fields) ??? */
 		tempVal[0] = tempVal[1] = 0x0;
 
 	/* Save values Locally */
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index 2460133..557bd93 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -81,9 +81,9 @@ typedef enum _mvSatRTypeID {
 	MV_SATR_CPU1_ENABLE,
 	MV_SATR_SSCG_DISABLE,
 	// Jumpers  - change by removing Jumper. S@R will be changed by this option
-	MV_SATR_I2C0_Serial_ROM,
-	MV_SATR_External_CPU_Reset,
-	MV_SATR_External_CORE_Reset,
+	MV_SATR_I2C0_SERIAL_ROM,
+	MV_SATR_EXTERNAL_CPU_RESET,
+	MV_SATR_EXTERNAL_CORE_RESET,
 	// DIP Switch - change by removing Switch. S@R will be changed by this option:
 	MV_SATR_BOOT_DEVICE,
 	// DPR's -modified by moving resistor with solderer. S@R will be changed by this
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
old mode 100644
new mode 100755
index 39ed3f1..1bec98b
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -225,15 +225,10 @@ extern "C" {
 #define PCI_MEM(pciIf, memNum)			(PEX0_MEM0 + 2 * (pciIf))
 /* This define describes the maximum number of supported PCI Interfaces 	*/
 #define MV_IDMA_MAX_CHAN			4
-#define ARMADA_XP_MAX_USB_PORTS			3
-#define ARMADA_XP_NAND				1
-#define ARMADA_XP_SDIO				1
-#define ARMADA_XP_MAX_TDM_PORTS			32
-#define ARMADA_XP_TDM				1
 #define MV_DEVICE_MAX_CS      			4
 
 #ifndef MV_USB_MAX_PORTS
-#define MV_USB_MAX_PORTS (ARMADA_XP_MAX_USB_PORTS)
+#define MV_USB_MAX_PORTS 3
 #endif
 
 
-- 
1.7.5.4

