From 138df44683c961a1c908280356e724509a0a09d3 Mon Sep 17 00:00:00 2001
From: Tawfik Bayouk <tawfik@marvell.com>
Date: Mon, 3 Sep 2012 19:04:01 +0300
Subject: [PATCH 0242/1825] DSMP GP board support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 974c5a8924efe1ca5ea753ee425b43de102e6f1a

Change-Id: I1ff3aafb8dcdbb66509d78ebe013f47ecb5ec4c8
Signed-off-by: Tawfik Bayouk <tawfik@marvell.com>
Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armadaxp/Kconfig |    5 ++
 arch/arm/mach-armadaxp/core.c  |  138 ++++++++++++++++++++++++++++++++++++++++
 arch/arm/tools/mach-types      |    1 +
 3 files changed, 144 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-armadaxp/Kconfig b/arch/arm/mach-armadaxp/Kconfig
index a51d0ff..2a8f51c 100644
--- a/arch/arm/mach-armadaxp/Kconfig
+++ b/arch/arm/mach-armadaxp/Kconfig
@@ -66,6 +66,11 @@ config MACH_ARMADA_XP_DB
 	default y
 	help
 
+config MACH_ARMADA_XP_GP
+	bool "Marvell Armada XP General Purpose Board"
+	default y
+	help
+
 config MACH_ARMADA_XP_RDSRV
 	bool "Marvell Armada XP Server Board"
 	default y
diff --git a/arch/arm/mach-armadaxp/core.c b/arch/arm/mach-armadaxp/core.c
index 24acb3e..de53827 100644
--- a/arch/arm/mach-armadaxp/core.c
+++ b/arch/arm/mach-armadaxp/core.c
@@ -1647,6 +1647,144 @@ MACHINE_START(ARMADA_XP_DB, "Marvell Armada XP Development Board")
 MACHINE_END
 
 /*****************************************************************************
+ * GP BOARD
+ ****************************************************************************/
+static void __init axp_gp_init(void)
+{
+	/* Call Aurora/cpu special configurations */
+	cpu_fabric_common_init();
+
+	/* Select appropriate Board ID for Machine */
+	gBoardId = RD_78460_GP_ID;
+
+	/* Bypass serdes reconfiguration since already done at bootloader */
+        mvBoardSerdesConfigurationEnableSet(MV_FALSE);
+
+	/* init the Board environment */
+	mvBoardEnvInit();
+
+	/* init the controller environment */
+	if( mvCtrlEnvInit() ) {
+		printk( "Controller env initialization failed.\n" );
+		return;
+	}
+
+	armadaxp_setup_cpu_mbus();
+
+	/* Init the CPU windows setting and the access protection windows. */
+	if( mvCpuIfInit(mv_sys_map())) {
+		printk( "Cpu Interface initialization failed.\n" );
+		return;
+	}
+
+	/* Init Tclk & SysClk */
+	mvTclk = mvBoardTclkGet();
+	mvSysclk = mvBoardSysClkGet();
+
+	elf_hwcap &= ~HWCAP_JAVA;
+
+	serial_initialize(0);
+
+	/* At this point, the CPU windows are configured according to default definitions in mvSysHwConfig.h */
+	/* and cpuAddrWinMap table in mvCpuIf.c. Now it's time to change defaults for each platform.         */
+	/*mvCpuIfAddDecShow();*/
+
+	print_board_info();
+
+	mv_gpio_init();
+
+	/* RTC */
+	rtc_init();
+
+	/* SPI */
+	mvSysSpiInit(0, _16M);
+
+	/* ETH-PHY */
+	mvSysEthPhyInit();
+
+	/* Sata */
+#ifdef CONFIG_SATA_MV
+	armadaxp_sata_init(&dbdsmp_sata_data);
+#endif
+#ifdef CONFIG_MTD_NAND_NFC
+	/* NAND */
+	axp_db_nfc_init();
+#endif
+	/* HWMON */
+	armadaxp_hwmon_init();
+
+	/* XOR */
+#ifdef XOR0_ENABLE
+	armadaxp_xor0_init();
+#endif
+	armadaxp_xor1_init();
+
+	/* I2C */
+	platform_device_register(&axp_i2c0);
+
+
+#ifdef CONFIG_FB_DOVE
+      if ((lcd0_enable == 1) && (lcd_panel == 0 ))
+        platform_device_register(&axp_i2c1);
+#endif
+
+
+
+
+#if defined(CONFIG_MV_INCLUDE_SDIO)
+	if (MV_TRUE == mvCtrlPwrClckGet(SDIO_UNIT_ID, 0)) {
+		int irq_detect = mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_DETECT);
+		MV_UNIT_WIN_INFO addrWinMap[MAX_TARGETS + 1];
+
+		if (irq_detect != MV_ERROR) {
+			mvsdio_data.gpio_card_detect = mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_DETECT);
+			irq_int_type[mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_DETECT)+IRQ_AURORA_GPIO_START] = GPP_IRQ_TYPE_CHANGE_LEVEL;
+		}
+
+		if(mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_WP) != MV_ERROR)
+			mvsdio_data.gpio_write_protect = mvBoardSDIOGpioPinGet(BOARD_GPP_SDIO_WP);
+
+		if(MV_OK == mvCtrlAddrWinMapBuild(addrWinMap, MAX_TARGETS + 1))
+			if (MV_OK == mvSdmmcWinInit(addrWinMap))
+				mvsdio_data.clock = mvBoardTclkGet();
+		platform_device_register(&mv_sdio_plat);
+       }
+#endif
+
+#ifdef CONFIG_MV_ETHERNET
+	/* Ethernet */
+	eth_init();
+#endif
+
+#ifdef CONFIG_FB_DOVE
+	kw_lcd0_dmi.dram = &armadaxp_mbus_dram_info;
+	if (lcd_panel) {
+		kw_lcd0_dmi.lvds_info.enabled = 1;
+		kw_lcd0_dmi.fixed_full_div = 1;
+		kw_lcd0_dmi.full_div_val = 7;
+//		kw_lcd0_dmi.lcd_ref_clk = 27000000;
+		printk(KERN_INFO "LCD Panel enabled.\n");
+	}
+	clcd_platform_init(&kw_lcd0_dmi, &kw_lcd0_vid_dmi, &dsmp_backlight_data);
+#endif
+
+	return;
+}
+
+MACHINE_START(ARMADA_XP_GP, "Marvell Armada XP GP Board")
+	/* MAINTAINER("MARVELL") */
+	.atag_offset	= 0x00000100,
+	.map_io		= axp_map_io,
+	.init_irq	= axp_init_irq,
+	.timer		= &axp_timer,
+	.init_machine	= axp_gp_init,
+#ifdef CONFIG_FB_DOVE
+	/* reserve memory for LCD */
+	.fixup		= axp_tag_fixup_mem32,
+#endif /* CONFIG_FB_DOVE */
+MACHINE_END
+
+/*****************************************************************************
  * RD NAS BOARD
  ****************************************************************************/
 static void __init axp_rd_nas_init(void)
diff --git a/arch/arm/tools/mach-types b/arch/arm/tools/mach-types
index a780b11..5f7f4a6 100644
--- a/arch/arm/tools/mach-types
+++ b/arch/arm/tools/mach-types
@@ -514,6 +514,7 @@ mx53_smd		MACH_MX53_SMD		MX53_SMD		3011
 msm8x60_rumi3		MACH_MSM8X60_RUMI3	MSM8X60_RUMI3		3016
 msm8x60_ffa		MACH_MSM8X60_FFA	MSM8X60_FFA		3017
 cm_a510			MACH_CM_A510		CM_A510			3020
+armada_xp_gp		MACH_ARMADA_XP_GP	ARMADA_XP_GP		3035
 armada_xp_db		MACH_ARMADA_XP_DB	ARMADA_XP_DB		3036
 armada_xp_rdsrv		MACH_ARMADA_XP_RDSRV	ARMADA_XP_RDSRV		3037
 armada_xp_rd_nas	MACH_ARMADA_XP_RD_NAS	ARMADA_XP_RD_NAS	3500
-- 
1.7.5.4

