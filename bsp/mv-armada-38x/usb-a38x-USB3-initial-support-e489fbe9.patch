From 001e28780269118810bcd1c17b62fb525cb90e2c Mon Sep 17 00:00:00 2001
From: Shadi Ammouri <shadi@marvell.com>
Date: Tue, 10 Dec 2013 09:49:50 +0200
Subject: [PATCH 1195/1825] usb: a38x: USB3 initial support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 1a65554d62ff4d52d6d56216bd5dce82b0775b48

	- Fix wrong USB3 register offests
	- Add MV_USB3_WIN_BASE definition
	- Add preliminary init sequence for the UTMI phy
	- Add support for more than one USB phy
	- Cleanup of unrequired USB3 X-BAR windows

Signed-off-by: Nadav Haklai <nadavh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4301
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>

Conflicts:

	arch/arm/configs/armada_385_v7smp_defconfig

Change-Id: Id98375268fa3acbfe852169ae784dbf1d51c76ab
Signed-off-by: Shadi Ammouri <shadi@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4688
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada38x/Kconfig                  |   17 ----
 arch/arm/mach-armada38x/core.c                   |    5 +-
 arch/arm/mach-armada38x/include/mach/armada38x.h |    4 -
 arch/arm/mach-armada38x/include/mach/irqs.h      |    4 +-
 arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c     |   12 +--
 arch/arm/mach-armada38x/mv_hal_if/mvSysUsbApi.h  |    2 +-
 arch/arm/mach-armada38x/sysmap.c                 |    1 -
 arch/arm/mach-armada38x/usb.c                    |   90 ++++++----------------
 8 files changed, 34 insertions(+), 101 deletions(-)

diff --git a/arch/arm/mach-armada38x/Kconfig b/arch/arm/mach-armada38x/Kconfig
index fef3e29..1f049a8 100644
--- a/arch/arm/mach-armada38x/Kconfig
+++ b/arch/arm/mach-armada38x/Kconfig
@@ -35,23 +35,6 @@ config MACH_ARMADA_38X
 	  Choosing this option will generate a linux kernel for the
 	  MV68XX devices
 
-config A38X_Z1_USB3_LFPS_FREQ_WA
-	bool "Enable the LFPS frequency workaround for USB3"
-	default n
-	help
-	  This flag enables a workaround for USB3 in Armada 38x. It
-	  fixes the USB3 LFPS timing to fix some clock issues
-	  in the integration of USB3. This WA is needed only
-	  for Z1 devices
-
-config ARMADA_38X_USE_LEGACY_USB2
-	bool "Use legacy USB2 IP instead of USB3 IP"
-	default n
-	help
-	 Armada 38x contain 2 USB host controllers: A legacy USB2
-	 only controller and a new USB3 controller which also supports USB2.
-	 This flag enables to choose which of the host controllers to use.
-	 It mainly affects the USB2 PHY to host connectivity
 
 endmenu
 
diff --git a/arch/arm/mach-armada38x/core.c b/arch/arm/mach-armada38x/core.c
index 7434bbd..2a8d2fa 100644
--- a/arch/arm/mach-armada38x/core.c
+++ b/arch/arm/mach-armada38x/core.c
@@ -157,7 +157,8 @@ static int __init parse_tag_mv_uboot(const struct tag *tag)
 	pr_info("Using UBoot passing parameters structure\n");
 	mvUbootVer = read_tag(tag->u.mv_uboot.uboot_version);
 #ifdef CONFIG_MV_INCLUDE_USB
-	mvIsUsbHost = read_tag(tag->u.mv_uboot.isUsbHost);
+	/* Disabling USB device option for now - U-boot is not ready yet */
+	/* mvIsUsbHost = read_tag(tag->u.mv_uboot.isUsbHost); */
 #endif
 
 #ifdef CONFIG_MV_INCLUDE_GIG_ETH
@@ -1221,6 +1222,7 @@ static void __init a38x_board_init(void)
 
 	a38x_init_eth();
 	a38x_xor_init();
+	a38x_usb_init();
 
 #if 0
 	a38x_rtc_init();
@@ -1229,7 +1231,6 @@ static void __init a38x_board_init(void)
 	a38x_spi_init();
 	a38x_sdio_init();
 	a38x_nand_nfc_init();
-	a38x_usb_init();
 	a38x_gpio_init();
 	a38x_hwmon_init();
 #endif
diff --git a/arch/arm/mach-armada38x/include/mach/armada38x.h b/arch/arm/mach-armada38x/include/mach/armada38x.h
index 7fa3102..8a3cd7c 100644
--- a/arch/arm/mach-armada38x/include/mach/armada38x.h
+++ b/arch/arm/mach-armada38x/include/mach/armada38x.h
@@ -88,10 +88,6 @@
 
 #define IOCC_WA_WIN0_PHYS_BASE		0xFF000000
 
-#define USB3_REGS_PHYS_BASE		0xFF100000
-#define USB3_REGS_SIZE			_128K
-
-
 /*
  * Virtual address map
  */
diff --git a/arch/arm/mach-armada38x/include/mach/irqs.h b/arch/arm/mach-armada38x/include/mach/irqs.h
index 22db20e..7535280 100644
--- a/arch/arm/mach-armada38x/include/mach/irqs.h
+++ b/arch/arm/mach-armada38x/include/mach/irqs.h
@@ -40,8 +40,8 @@
 #define IRQ_GLOBAL_UART0		44
 #define IRQ_GLOBAL_UART1		45
 
-#define IRQ_GLOBAL_USB3_IP		48
-#define IRQ_GLOBAL_USB2_IP		49
+#define IRQ_GLOBAL_USB3_IP(dev)		(48 + dev)
+#define IRQ_GLOBAL_USB2_IP		50
 
 #define IRQ_GLOBAL_CESA0		51
 #define IRQ_GLOBAL_CESA1		52
diff --git a/arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c b/arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c
index 77c54c8..2236878 100644
--- a/arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c
+++ b/arch/arm/mach-armada38x/mv_hal_if/mvSysUsb.c
@@ -82,16 +82,11 @@
 *	None
 *
 *******************************************************************************/
-MV_STATUS mvSysUsbInit(MV_U32 dev, MV_BOOL isHost)
+MV_STATUS mvSysUsbInit(MV_U32 dev, MV_BOOL isHost, MV_BOOL isUsb3)
 {
 	MV_USB_HAL_DATA halData;
 	MV_UNIT_WIN_INFO addrWinMap[MAX_TARGETS + 1];
 	MV_STATUS status;
-	MV_BOOL usb3Init = 0;
-
-#ifndef CONFIG_ARMADA_38X_USE_LEGACY_USB2
-	usb3Init = 1;
-#endif
 
 	halData.ctrlModel = mvCtrlModelGet();
 	halData.ctrlFamily = mvCtrlDevFamilyIdGet(halData.ctrlModel);
@@ -101,13 +96,12 @@ MV_STATUS mvSysUsbInit(MV_U32 dev, MV_BOOL isHost)
 	 * For USB3 initialize only the UTMI PHY
 	 * For USB2 initialize the PHY and the controller
 	 */
-	if (usb3Init) {
+	if (isUsb3)
 		status = mvUsbUtmiPhyInit(dev, &halData);
-	} else {
+	else {
 		status = mvCtrlAddrWinMapBuild(addrWinMap, MAX_TARGETS + 1);
 		if (status == MV_OK)
 			status = mvUsbWinInit(dev, addrWinMap);
-
 		if (status == MV_OK)
 			status = mvUsbHalInit(dev, isHost, &halData);
 	}
diff --git a/arch/arm/mach-armada38x/mv_hal_if/mvSysUsbApi.h b/arch/arm/mach-armada38x/mv_hal_if/mvSysUsbApi.h
index 7bb128d..3a42e1f 100644
--- a/arch/arm/mach-armada38x/mv_hal_if/mvSysUsbApi.h
+++ b/arch/arm/mach-armada38x/mv_hal_if/mvSysUsbApi.h
@@ -65,6 +65,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #ifndef __MV_SYS_USB_API_H__
 #define __MV_SYS_USB_API_H__
 
-MV_STATUS mvSysUsbInit(MV_U32 dev, MV_BOOL isHost);
+MV_STATUS mvSysUsbInit(MV_U32 dev, MV_BOOL isHost, MV_BOOL isUsb3);
 
 #endif
diff --git a/arch/arm/mach-armada38x/sysmap.c b/arch/arm/mach-armada38x/sysmap.c
index ba3b6b1..9b10ca6 100644
--- a/arch/arm/mach-armada38x/sysmap.c
+++ b/arch/arm/mach-armada38x/sysmap.c
@@ -66,7 +66,6 @@ MV_CPU_DEC_WIN SYSMAP_A38X_68XX[] = {
 	{{TBL_UNUSED,			0,	TBL_UNUSED,		},	TBL_UNUSED,	DIS}, /* SPI_CS7 */
 	{{BOOTROM_PHYS_BASE,		0,	BOOTROM_SIZE		},	9,		EN}, /* BOOTROM */
 	{{DEVICE_BOOTCS_PHYS_BASE,	0,	DEVICE_BOOTCS_SIZE	},	10,		 EN}, /* DEV_BOOCS */
-	{{USB3_REGS_PHYS_BASE,		0,	USB3_REGS_SIZE		},	11,		 EN}, /* USB3 */
 	{{CRYPT_ENG_PHYS_BASE(0),	0,	CRYPT_ENG_SIZE		},	12,		 EN}, /* CRYPT_ENG */
 	{{ETH_BM_PHYS_BASE,		0,	ETH_BM_SIZE		},	13,		 EN}, /* ETH_BM */
 	{{TBL_TERM,		 TBL_TERM,	TBL_TERM		},	TBL_TERM,  TBL_TERM}
diff --git a/arch/arm/mach-armada38x/usb.c b/arch/arm/mach-armada38x/usb.c
index 714f72f..2a8ede3 100644
--- a/arch/arm/mach-armada38x/usb.c
+++ b/arch/arm/mach-armada38x/usb.c
@@ -97,7 +97,7 @@ static int __init mv_usb2_init(void)
 			name_ptr = usb_dev_name;
 
 		printk(KERN_INFO "registered dev#%d asa %s\n", dev, name_ptr);
-		status = mvSysUsbInit(dev, isHost);
+		status = mvSysUsbInit(dev, isHost, 0);
 
 		if (status != MV_OK) {
 			pr_info("Error: mvSysUsbInit failed with code %d\n", status);
@@ -165,22 +165,11 @@ static int __init mv_usb2_init(void)
 #define USB3_WIN_CTRL(w)	(0x0 + ((w) * 8))
 #define USB3_WIN_BASE(w)	(0x4 + ((w) * 8))
 #define USB3_MAX_WINDOWS	4
-#define USB3_XHCI_REGS_SIZE	_64K
+#define USB3_XHCI_REGS_SIZE	_32K
 
 static u64 mv_usb3_dmamask = 0xffffffffUL;
-static struct resource mv_usb3_resources[] = {
-	[0] = {
-		.start	= USB3_REGS_PHYS_BASE,
-		.end	= USB3_REGS_PHYS_BASE + USB3_XHCI_REGS_SIZE - 1,
-		.flags	= IORESOURCE_MEM,
-	},
 
-	[1] = {
-		.start	= IRQ_GLOBAL_USB3_IP,
-		.end	= IRQ_GLOBAL_USB3_IP,
-		.flags	= IORESOURCE_IRQ,
-	},
-};
+static struct resource mv_usb3_resources[2];
 
 
 static void __init mv_usb3_conf_mbus_windows(void __iomem *base,
@@ -206,7 +195,7 @@ static void __init mv_usb3_conf_mbus_windows(void __iomem *base,
 	}
 }
 
-void __init mv_usb3_init(struct mbus_dram_target_info *dram)
+void __init mv_usb3_init(struct mbus_dram_target_info *dram, int dev)
 {
 	int ret = -ENOMEM;
 	struct platform_device	*xhci;
@@ -222,13 +211,23 @@ void __init mv_usb3_init(struct mbus_dram_target_info *dram)
 		return;
 
 	/* Allocate an XHCI device */
-	xhci = platform_device_alloc("xhci-hcd", -1);
+	xhci = platform_device_alloc("xhci-hcd", dev);
+
 	if (!xhci) {
 		pr_err("Couldn't allocate XHCI device\n");
 		goto err0;
 	}
 
-	/* Setup XHCI resources */
+	/* Set registers and irq resources for XHCI */
+	mv_usb3_resources[0].start = INTER_REGS_PHYS_BASE + MV_USB3_REGS_BASE(dev);
+	mv_usb3_resources[0].end = INTER_REGS_PHYS_BASE + MV_USB3_REGS_BASE(dev) +
+				   USB3_XHCI_REGS_SIZE - 1;
+	mv_usb3_resources[0].flags = IORESOURCE_MEM;
+
+	mv_usb3_resources[1].start = IRQ_GLOBAL_USB3_IP(dev);
+	mv_usb3_resources[1].end = IRQ_GLOBAL_USB3_IP(dev);
+	mv_usb3_resources[1].flags = IORESOURCE_IRQ;
+
 	ret = platform_device_add_resources(xhci, mv_usb3_resources,
 			ARRAY_SIZE(mv_usb3_resources));
 	if (ret) {
@@ -240,33 +239,7 @@ void __init mv_usb3_init(struct mbus_dram_target_info *dram)
 	xhci->dev.dma_mask = &mv_usb3_dmamask;
 
 	/* Map the DDR address space to the XHCI */
-	mv_usb3_conf_mbus_windows((void *)(INTER_REGS_VIRT_BASE +
-				MV_USB3_REGS_BASE(0)), dram);
-
-#ifdef CONFIG_A38X_Z1_USB3_LFPS_FREQ_WA
-/*
- * All defines below are used for a temporary workaround and therefore
- * are placed inside the code and not in an include file
- */
-#define USB3_MAC_REGS_BASE		(0x10000)
-#define USB3_MAC_REGS_SIZE		(0x500)
-#define USB3_CNTR_PULSE_WIDTH_OFFSET	(0x454)
-#define REF_CLK_100NS_OFFSET		(24)
-#define REF_CLK_100NS_MASK		(0xFF)
-
-	/* Modify the LFPS timing to fix clock issues on ALP-Z1 */
-	usb_mac_regs = (u8 *)ioremap_nocache(USB3_REGS_PHYS_BASE +
-			USB3_MAC_REGS_BASE, USB3_MAC_REGS_SIZE);
-	if (!usb_mac_regs) {
-		pr_err("Failed to map USB3 MAC registers\n");
-		goto err1;
-	}
-
-	reg = readl(usb_mac_regs + USB3_CNTR_PULSE_WIDTH_OFFSET);
-	mask = ~(REF_CLK_100NS_MASK << REF_CLK_100NS_OFFSET);
-	reg = (reg & mask) | (0x10 << REF_CLK_100NS_OFFSET);
-	writel(reg, usb_mac_regs + USB3_CNTR_PULSE_WIDTH_OFFSET);
-#endif
+	mv_usb3_conf_mbus_windows((void *)(INTER_REGS_VIRT_BASE + MV_USB3_WIN_BASE(dev)), dram);
 
 	/* Register the device */
 	ret = platform_device_add(xhci);
@@ -286,27 +259,14 @@ err0:
 
 void __init mv_usb_init(struct mbus_dram_target_info *dram)
 {
-	int reg;
-	int use_usb3_ip = 0;
-	MV_STATUS status;
-
-#ifndef CONFIG_ARMADA_38X_USE_LEGACY_USB2
-	use_usb3_ip = 1;
-	/* Initialize the USB2 PHY needed for USB3 functionality */
-	status = mvSysUsbInit(0, 1);
-	if (status != MV_OK) {
-		pr_info("Error: mvSysUsbInit failed with code %d\n", status);
-		return;
-	}
-#endif
+	int dev;
 
-	/* Select USB3 IP (which supports USB2) or legacy USB2 IP*/
-	reg = readl(INTER_REGS_VIRT_BASE + USB_CLUSTER_CONTROL);
-	reg = (reg & (~0x1)) | use_usb3_ip;
-	writel(reg, INTER_REGS_VIRT_BASE + USB_CLUSTER_CONTROL);
+	/* Init the Legacy USB2 MAC + UTMI PHY 0 */
+	mv_usb2_init();
 
-	if (use_usb3_ip)
-		mv_usb3_init(dram);
-	else
-		mv_usb2_init();
+	/* Init the USB3 + USB2 XHCI MAC + UTMI PHY 1+2 */
+	for (dev = 0; dev < mvCtrlUsb3MaxGet(); dev++) {
+		mvSysUsbInit(dev+1, 1, 1);
+		mv_usb3_init(dram, dev);
+	}
 }
-- 
1.7.5.4

