From 8a2c4b749400360d335a340c4125f1a9c415e451 Mon Sep 17 00:00:00 2001
From: Eli Nidam <elini@marvell.com>
Date: Sun, 29 Sep 2013 10:23:10 +0200
Subject: [PATCH 1002/1825] nfc: Move the Clock Divider subroutine to
 Controller.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 4ab613cb3b606a92fe84a208ec62c56d6c7ed90c

	The main trigger for this patch is MSYS SOC, In MSYS the Divider Clock Control
	Register is place on different base address (DFX), for this reason this routine
	is SOC depended and it move to SOC controller

	1. Added new file mv_hal_if/mvSysNfc.c for initialize NFC HAL.
	2. Defined all Clock Divider registers and bits field in mvCtrlEnvRegs.h
	3. Added new subroutine mvCtrlNandClkSet per SOC in mvCtrlEnvLib.c
	4. In nand_nfc replace the init NFC call function to mvSysNetaInit.
	5. Replace the caling to setNANDClock in mvNfcInit to SOC mvCtrlNandClkSet (call by reference)

Change-Id: Ia0878b1e36d6e0fbf6bc061442834fa1a419fa57
Signed-off-by: Eli Nidam <elini@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3550
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Tawfik Bayouk <tawfik@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada370/Makefile                   |    2 +-
 arch/arm/mach-armadaxp/Makefile                    |    2 +-
 .../armada_xp_family/ctrlEnv/mvCtrlEnvLib.c        |   35 ++++++++
 .../armada_xp_family/ctrlEnv/mvCtrlEnvLib.h        |    1 +
 .../armada_xp_family/ctrlEnv/mvCtrlEnvRegs.h       |   10 ++
 arch/arm/mach-armadaxp/mv_hal_if/mvSysNfc.c        |   93 ++++++++++++++++++++
 arch/arm/mach-armadaxp/mv_hal_if/mvSysNfcApi.h     |   71 +++++++++++++++
 arch/arm/mach-avantalp/Makefile                    |    2 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   36 ++++++++
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    1 +
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |   11 +++
 arch/arm/mach-avantalp/mv_hal_if/mvSysNfc.c        |   93 ++++++++++++++++++++
 arch/arm/mach-avantalp/mv_hal_if/mvSysNfcApi.h     |   71 +++++++++++++++
 .../mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c   |   36 ++++++++
 .../mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h   |    1 +
 .../plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c   |    4 +-
 .../plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.h   |    2 +-
 arch/arm/plat-armada/mv_hal/nfc/mvNfc.c            |   43 ++++-----
 arch/arm/plat-armada/mv_hal/nfc/mvNfc.h            |    7 +-
 19 files changed, 488 insertions(+), 33 deletions(-)
 create mode 100644 arch/arm/mach-armadaxp/mv_hal_if/mvSysNfc.c
 create mode 100644 arch/arm/mach-armadaxp/mv_hal_if/mvSysNfcApi.h
 create mode 100644 arch/arm/mach-avantalp/mv_hal_if/mvSysNfc.c
 create mode 100644 arch/arm/mach-avantalp/mv_hal_if/mvSysNfcApi.h

diff --git a/arch/arm/mach-armada370/Makefile b/arch/arm/mach-armada370/Makefile
index 36e27dd..ab960ce 100644
--- a/arch/arm/mach-armada370/Makefile
+++ b/arch/arm/mach-armada370/Makefile
@@ -84,7 +84,7 @@ armada370-$(CONFIG_MV_INCLUDE_INTEG_SATA)+= $(HAL_IF_DIR)/mvSysSata.o $(HAL_SATA
 armada370-$(CONFIG_MV_INCLUDE_SPI) 	+= $(HAL_SPI_DIR)/mvSpi.o $(HAL_SPI_DIR)/mvSpiCmnd.o 		\
 					   $(HAL_SFLASH_DIR)/mvSFlash.o $(HAL_IF_DIR)/mvSysSFlash.o	\
 					   $(HAL_IF_DIR)/mvSysSpi.o
-armada370-$(CONFIG_MV_INCLUDE_NFC)	+= $(HAL_NFC_DIR)/mvNfc.o
+armada370-$(CONFIG_MV_INCLUDE_NFC)	+= $(HAL_NFC_DIR)/mvNfc.o $(HAL_IF_DIR)/mvSysNfc.o
 armada370-$(CONFIG_MV_INCLUDE_AUDIO) 	+= $(HAL_AUDIO_DIR)/mvAudio.o $(HAL_IF_DIR)/mvSysAudio.o	\
 					   $(HAL_AUDIO_DIR)/mvAudioAddrDec.o
 armada370-$(CONFIG_MV_INCLUDE_TS) 	+= $(HAL_TS_DIR)/mvTsu.o $(HAL_IF_DIR)/mvSysTs.o		\
diff --git a/arch/arm/mach-armadaxp/Makefile b/arch/arm/mach-armadaxp/Makefile
index 93c6209..bd51812 100755
--- a/arch/arm/mach-armadaxp/Makefile
+++ b/arch/arm/mach-armadaxp/Makefile
@@ -84,7 +84,7 @@ armadaxp-$(CONFIG_MV_INCLUDE_INTEG_SATA)+= $(HAL_IF_DIR)/mvSysSata.o $(HAL_SATA_
 armadaxp-$(CONFIG_MV_INCLUDE_SPI) 	+= $(HAL_SPI_DIR)/mvSpi.o $(HAL_SPI_DIR)/mvSpiCmnd.o 		\
                          		   $(HAL_SFLASH_DIR)/mvSFlash.o $(HAL_IF_DIR)/mvSysSFlash.o	\
 					   $(HAL_IF_DIR)/mvSysSpi.o
-armadaxp-$(CONFIG_MV_INCLUDE_NFC)	+= $(HAL_NFC_DIR)/mvNfc.o
+armadaxp-$(CONFIG_MV_INCLUDE_NFC)	+= $(HAL_NFC_DIR)/mvNfc.o $(HAL_IF_DIR)/mvSysNfc.o
 armadaxp-$(CONFIG_MV_INCLUDE_AUDIO) 	+= $(HAL_AUDIO_DIR)/mvAudio.o $(HAL_IF_DIR)/mvSysAudio.o	\
 					   $(HAL_AUDIO_DIR)/mvAudioAddrDec.o
 armadaxp-$(CONFIG_MV_INCLUDE_TS) 	+= $(HAL_TS_DIR)/mvTsu.o $(HAL_IF_DIR)/mvSysTs.o		\
diff --git a/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvLib.c
index b2e33a0..3bf6cf5 100755
--- a/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -2342,4 +2342,39 @@ MV_STATUS mvCtrlSramInit(MV_U32 baseAddr, MV_U32 sramBase, MV_U32 waysNum)
 
 	return MV_OK;
 }
+/*******************************************************************************
+* mvCtrlNandClkSet
+*
+* DESCRIPTION:
+*       Set the division ratio of ECC Clock
+*
+* INPUT:
+*	None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       None
+*******************************************************************************/
+void mvCtrlNandClkSet(int nClock)
+{
+	/* Set the division ratio of ECC Clock 0x00018748[13:8] (by default it's double of core clock) */
+	MV_U32 nVal = MV_REG_READ(CORE_DIV_CLK_CTRL(1));
+	nVal &= ~(NAND_ECC_DIVCKL_RATIO_MASK);
+	nVal |= (nClock << NAND_ECC_DIVCKL_RATIO_OFFS);
+	MV_REG_WRITE(CORE_DIV_CLK_CTRL(1), nVal);
+
+	/* Set reload force of ECC clock 0x00018740[7:0] to 0x2 (meaning you will force only the ECC clock) */
+	nVal = MV_REG_READ(CORE_DIV_CLK_CTRL(0));
+	nVal &= ~(CORE_DIVCLK_RELOAD_FORCE_MASK);
+	nVal |= CORE_DIVCLK_RELOAD_FORCE_VAL;
+	MV_REG_WRITE(CORE_DIV_CLK_CTRL(0), nVal);
+
+	/* Set reload ratio bit 0x00018740[8] to 1'b1 */
+	MV_REG_BIT_SET(CORE_DIV_CLK_CTRL(0), CORE_DIVCLK_RELOAD_RATIO_MASK);
+	mvOsDelay(1); /*  msec */
+	/* Set reload ratio bit 0x00018740[8] to 0'b1 */
+	MV_REG_BIT_RESET(CORE_DIV_CLK_CTRL(0), CORE_DIVCLK_RELOAD_RATIO_MASK);
+}
 
diff --git a/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvLib.h
index afee2d1..e016c05 100755
--- a/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -280,5 +280,6 @@ MV_BOOL mvCtrlDDRThruXbar(MV_VOID);
 MV_BOOL mvCtrlDDRECC(MV_VOID);
 MV_U32 mvCtrlGetJuncTemp(MV_VOID);
 MV_STATUS mvCtrlSramInit(MV_U32 baseAddr, MV_U32 sramBase, MV_U32 waysNum);
+void mvCtrlNandClkSet(int nClock);
 
 #endif /* __INCmvCtrlEnvLibh */
diff --git a/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvRegs.h
index ccd4326..d7d97fd 100755
--- a/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -359,6 +359,16 @@ extern "C" {
 /* Core Divider Clock Control */
 #define CORE_DIV_CLK_CTRL(num)			(0x18740 + ((num) * 0x8))
 
+#define CORE_DIVCLK_RELOAD_FORCE_OFFS		0
+#define CORE_DIVCLK_RELOAD_FORCE_MASK		(0xFF << CORE_DIVCLK_RELOAD_FORCE_OFFS)
+#define CORE_DIVCLK_RELOAD_FORCE_VAL		(0x2 << CORE_DIVCLK_RELOAD_FORCE_OFFS)
+
+#define NAND_ECC_DIVCKL_RATIO_OFFS		8
+#define NAND_ECC_DIVCKL_RATIO_MASK		(0x3F << NAND_ECC_DIVCKL_RATIO_OFFS)
+
+#define CORE_DIVCLK_RELOAD_RATIO_OFFS		8
+#define CORE_DIVCLK_RELOAD_RATIO_MASK		(1 << CORE_DIVCLK_RELOAD_RATIO_OFFS)
+
 /* SYSRSTn Length Counter */
 #define SYSRST_LENGTH_COUNTER_REG		0x18250
 #define SLCR_COUNT_OFFS				0
diff --git a/arch/arm/mach-armadaxp/mv_hal_if/mvSysNfc.c b/arch/arm/mach-armadaxp/mv_hal_if/mvSysNfc.c
new file mode 100644
index 0000000..f806820
--- /dev/null
+++ b/arch/arm/mach-armadaxp/mv_hal_if/mvSysNfc.c
@@ -0,0 +1,93 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+#include "mvCommon.h"
+#include "mvOs.h"
+#include "ctrlEnv/mvCtrlEnvLib.h"
+#include "nfc/mvNfc.h"
+
+
+/*******************************************************************************
+* mvSysNetaInit - Initialize the Eth subsystem
+*
+* DESCRIPTION:
+*
+* INPUT:
+*       None
+* OUTPUT:
+*		None
+* RETURN:
+*       None
+*
+*******************************************************************************/
+MV_STATUS mvSysNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl)
+{
+	struct MV_NFC_HAL_DATA halData;
+
+	memset(&halData, 0, sizeof(halData));
+
+	halData.mvCtrlNandClkSetFunction = mvCtrlNandClkSet;
+
+	return mvNfcInit(nfcInfo, nfcCtrl, &halData);
+}
diff --git a/arch/arm/mach-armadaxp/mv_hal_if/mvSysNfcApi.h b/arch/arm/mach-armadaxp/mv_hal_if/mvSysNfcApi.h
new file mode 100644
index 0000000..e7a13c7
--- /dev/null
+++ b/arch/arm/mach-armadaxp/mv_hal_if/mvSysNfcApi.h
@@ -0,0 +1,71 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	    this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+#ifndef __MV_SYS_NFC_API_H__
+#define __MV_SYS_NFC_API_H__
+#include "nfc/mvNfc.h"
+
+MV_STATUS mvSysNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl);
+
+#endif  /* __MV_SYS_NFC_API_H__  */
diff --git a/arch/arm/mach-avantalp/Makefile b/arch/arm/mach-avantalp/Makefile
index c5a6fcc..d8b026c 100644
--- a/arch/arm/mach-avantalp/Makefile
+++ b/arch/arm/mach-avantalp/Makefile
@@ -83,7 +83,7 @@ avantalp-$(CONFIG_MV_INCLUDE_INTEG_SATA)+= $(HAL_IF_DIR)/mvSysSata.o $(HAL_SATA_
 avantalp-$(CONFIG_MV_INCLUDE_SPI) 	+= $(HAL_SPI_DIR)/mvSpi.o $(HAL_SPI_DIR)/mvSpiCmnd.o 		\
                          		   $(HAL_SFLASH_DIR)/mvSFlash.o $(HAL_IF_DIR)/mvSysSFlash.o	\
 					   $(HAL_IF_DIR)/mvSysSpi.o
-avantalp-$(CONFIG_MV_INCLUDE_NFC)	+= $(HAL_NFC_DIR)/mvNfc.o
+avantalp-$(CONFIG_MV_INCLUDE_NFC)	+= $(HAL_NFC_DIR)/mvNfc.o $(HAL_IF_DIR)/mvSysNfc.o
 avantalp-$(CONFIG_MV_INCLUDE_AUDIO) 	+= $(HAL_AUDIO_DIR)/mvAudio.o $(HAL_IF_DIR)/mvSysAudio.o	\
 					   $(HAL_AUDIO_DIR)/mvAudioAddrDec.o
 avantalp-$(CONFIG_MV_CPU_PERF_CNTRS)    += $(HAL_CPU_DIR)/mvCpuCntrs.o $(HAL_CPU_DIR)/pj4/mvPJ4Cntrs.o
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 8a23311..231ca88 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -2022,3 +2022,39 @@ MV_U32 mvCtrlGetJuncTemp(MV_VOID)
 
 	return (3171900 - (10000 * reg)) / 13553;
 }
+
+/*******************************************************************************
+* mvCtrlNandClkSet
+*
+* DESCRIPTION:
+*       Set the division ratio of ECC Clock
+*
+* INPUT:
+*	None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       None
+*******************************************************************************/
+void mvCtrlNandClkSet(int nClock)
+{
+	/* Set the division ratio of ECC Clock 0x00018748[13:8] (by default it's double of core clock) */
+	MV_U32 nVal = MV_REG_READ(CORE_DIV_CLK_CTRL(1));
+	nVal &= ~(NAND_ECC_DIVCKL_RATIO_MASK);
+	nVal |= (nClock << NAND_ECC_DIVCKL_RATIO_OFFS);
+	MV_REG_WRITE(CORE_DIV_CLK_CTRL(1), nVal);
+
+	/* Set reload force of ECC clock 0x00018740[7:0] to 0x2 (meaning you will force only the ECC clock) */
+	nVal = MV_REG_READ(CORE_DIV_CLK_CTRL(0));
+	nVal &= ~(CORE_DIVCLK_RELOAD_FORCE_MASK);
+	nVal |= CORE_DIVCLK_RELOAD_FORCE_VAL;
+	MV_REG_WRITE(CORE_DIV_CLK_CTRL(0), nVal);
+
+	/* Set reload ratio bit 0x00018740[8] to 1'b1 */
+	MV_REG_BIT_SET(CORE_DIV_CLK_CTRL(0), CORE_DIVCLK_RELOAD_RATIO_MASK);
+	mvOsDelay(1); /*  msec */
+	/* Set reload ratio bit 0x00018740[8] to 0'b1 */
+	MV_REG_BIT_RESET(CORE_DIV_CLK_CTRL(0), CORE_DIVCLK_RELOAD_RATIO_MASK);
+}
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index c0fd4c0..eaa3da9 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -261,6 +261,7 @@ MV_U32 mvCtrlSocUnitInfoNumGet(MV_UNIT_ID unit);
 MV_STATUS mvCtrlEnvInit(MV_VOID);
 MV_U32    mvCtrlMppRegGet(MV_U32 mppGroup);
 MV_U32 mvCtrlGetJuncTemp(MV_VOID);
+void mvCtrlNandClkSet(int nClock);
 
 #if defined(MV_INCLUDE_PEX)
 MV_U32 mvCtrlPexMaxIfGet(MV_VOID);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index 3492ef2..5eb590d 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -140,6 +140,17 @@ extern "C" {
 /* Core Divider Clock Control */
 #define CORE_DIV_CLK_CTRL(num)		(0xE8250 + ((num) * 0x4))
 
+#define CORE_DIVCLK_RELOAD_FORCE_OFFS		0
+#define CORE_DIVCLK_RELOAD_FORCE_MASK		(0xFF << CORE_DIVCLK_RELOAD_FORCE_OFFS)
+#define CORE_DIVCLK_RELOAD_FORCE_VAL		(0x2 << CORE_DIVCLK_RELOAD_FORCE_OFFS)
+
+#define NAND_ECC_DIVCKL_RATIO_OFFS		8
+#define NAND_ECC_DIVCKL_RATIO_MASK		(0x3F << NAND_ECC_DIVCKL_RATIO_OFFS)
+
+#define CORE_DIVCLK_RELOAD_RATIO_OFFS		8
+#define CORE_DIVCLK_RELOAD_RATIO_MASK		(1 << CORE_DIVCLK_RELOAD_RATIO_OFFS)
+
+
 #define DEV_ID_REG			0x18238
 #define VENDOR_ID_OFFS			0
 #define VENDOR_ID_MASK			0xFFFF
diff --git a/arch/arm/mach-avantalp/mv_hal_if/mvSysNfc.c b/arch/arm/mach-avantalp/mv_hal_if/mvSysNfc.c
new file mode 100644
index 0000000..f806820
--- /dev/null
+++ b/arch/arm/mach-avantalp/mv_hal_if/mvSysNfc.c
@@ -0,0 +1,93 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+#include "mvCommon.h"
+#include "mvOs.h"
+#include "ctrlEnv/mvCtrlEnvLib.h"
+#include "nfc/mvNfc.h"
+
+
+/*******************************************************************************
+* mvSysNetaInit - Initialize the Eth subsystem
+*
+* DESCRIPTION:
+*
+* INPUT:
+*       None
+* OUTPUT:
+*		None
+* RETURN:
+*       None
+*
+*******************************************************************************/
+MV_STATUS mvSysNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl)
+{
+	struct MV_NFC_HAL_DATA halData;
+
+	memset(&halData, 0, sizeof(halData));
+
+	halData.mvCtrlNandClkSetFunction = mvCtrlNandClkSet;
+
+	return mvNfcInit(nfcInfo, nfcCtrl, &halData);
+}
diff --git a/arch/arm/mach-avantalp/mv_hal_if/mvSysNfcApi.h b/arch/arm/mach-avantalp/mv_hal_if/mvSysNfcApi.h
new file mode 100644
index 0000000..e7a13c7
--- /dev/null
+++ b/arch/arm/mach-avantalp/mv_hal_if/mvSysNfcApi.h
@@ -0,0 +1,71 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	    this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+
+#ifndef __MV_SYS_NFC_API_H__
+#define __MV_SYS_NFC_API_H__
+#include "nfc/mvNfc.h"
+
+MV_STATUS mvSysNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl);
+
+#endif  /* __MV_SYS_NFC_API_H__  */
diff --git a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c
index fbe0dad..353ac53 100644
--- a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.c
@@ -1476,3 +1476,39 @@ void mvCtrlGetPexActive(MV_BOOL *pPexActive, int size)
 		return;
 	pPexActive[0] = MV_TRUE;
 }
+
+/*******************************************************************************
+* mvCtrlNandClkSet
+*
+* DESCRIPTION:
+*       Set the division ratio of ECC Clock
+*
+* INPUT:
+*	None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       None
+*******************************************************************************/
+void mvCtrlNandClkSet(int nClock)
+{
+	/* Set the division ratio of ECC Clock 0x00018748[13:8] (by default it's double of core clock) */
+	MV_U32 nVal = MV_DFX_REG_READ(CORE_DIV_CLK_CTRL(1));
+	nVal &= ~(NAND_ECC_DIVCKL_RATIO_MASK);
+	nVal |= (nClock << NAND_ECC_DIVCKL_RATIO_OFFS);
+	MV_DFX_REG_WRITE(CORE_DIV_CLK_CTRL(1), nVal);
+
+	/* Set reload force of ECC clock 0x00018740[7:0] to 0x2 (meaning you will force only the ECC clock) */
+	nVal = MV_DFX_REG_READ(CORE_DIV_CLK_CTRL(0));
+	nVal &= ~(CORE_DIVCLK_RELOAD_FORCE_MASK);
+	nVal |= CORE_DIVCLK_RELOAD_FORCE_VAL;
+	MV_DFX_REG_WRITE(CORE_DIV_CLK_CTRL(0), nVal);
+
+	/* Set reload ratio bit 0x00018740[8] to 1'b1 */
+	MV_DFX_REG_BIT_SET(CORE_DIV_CLK_CTRL(0), CORE_DIVCLK_RELOAD_RATIO_MASK);
+	mvOsDelay(1); /*  msec */
+	/* Set reload ratio bit 0x00018740[8] to 0'b1 */
+	MV_DFX_REG_BIT_RESET(CORE_DIV_CLK_CTRL(0), CORE_DIVCLK_RELOAD_RATIO_MASK);
+}
diff --git a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h
index 80f1d2b..5538f0e 100644
--- a/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-msys/msys_family/ctrlEnv/mvCtrlEnvLib.h
@@ -212,5 +212,6 @@ MV_BOOL mvCtrlDDRThruXbar(MV_VOID);
 MV_BOOL mvCtrlDDRECC(MV_VOID);
 MV_U32 mvCtrlGetJuncTemp(MV_VOID);
 void mvCtrlGetPexActive(MV_BOOL *pPexActive, int size);
+void mvCtrlNandClkSet(int nClock);
 
 #endif /* __INCmvCtrlEnvLibh */
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c
index 03b7ed4..f8df49a 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c
@@ -1568,9 +1568,9 @@ static int orion_nfc_probe(struct platform_device *pdev)
 	nfcInfo.cmdPdmaIntMask = 0x0;
 #endif
 
-	status = mvNfcInit(&nfcInfo, &info->nfcCtrl);
+	status = mvSysNfcInit(&nfcInfo, &info->nfcCtrl);
 	if (status != MV_OK) {
-		dev_err(&pdev->dev, "mvNfcInit() failed. Returned %d\n",
+		dev_err(&pdev->dev, "mvSysNfcInit() failed. Returned %d\n",
 				status);
 		goto fail_put_clk;
 	}
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.h
index 1038c60..3799b38 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.h
@@ -8,7 +8,7 @@
 #ifdef CONFIG_MV_INCLUDE_PDMA
 #include "pdma/mvPdma.h"
 #endif
-#include "nfc/mvNfc.h"
+#include "mvSysNfcApi.h"
 #include "nfc/mvNfcRegs.h"
 
 enum nfc_page_size
diff --git a/arch/arm/plat-armada/mv_hal/nfc/mvNfc.c b/arch/arm/plat-armada/mv_hal/nfc/mvNfc.c
index 51d84e5..62e1f95 100644
--- a/arch/arm/plat-armada/mv_hal/nfc/mvNfc.c
+++ b/arch/arm/plat-armada/mv_hal/nfc/mvNfc.c
@@ -71,6 +71,11 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #endif
 #include "mvNfc.h"
 
+#ifdef _DEBUG__
+#define DB(x)	x
+#else
+#define DB(x)
+#endif
 /*************/
 /* Constants */
 /*************/
@@ -594,26 +599,10 @@ static MV_STATUS mvNfcDeviceFeatureSet(MV_NFC_CTRL *nfcCtrl, MV_U8 cmd, MV_U8 ad
 static MV_STATUS mvNfcDeviceFeatureGet(MV_NFC_CTRL *nfcCtrl, MV_U8 cmd, MV_U8 addr, MV_U32 *data0, MV_U32 *data1);
 static MV_STATUS mvNfcDeviceModeSet(MV_NFC_CTRL *nfcCtrl, MV_NFC_ONFI_MODE mode);
 
-MV_VOID setNANDClock(MV_U32 nClock)
-{
-	/* Set the division ratio of ECC Clock 0x00018748[13:8] (by default it's double of core clock) */
-	MV_U32 nVal = MV_REG_READ(CORE_DIV_CLK_CTRL(1));
-	nVal = nVal & ~(BIT8|BIT9|BIT10|BIT11|BIT12|BIT13);
-	nVal = nVal | (nClock<<8);
-	MV_REG_WRITE(CORE_DIV_CLK_CTRL(1), nVal);
-
-	/* Set reload force of ECC clock 0x00018740[7:0] to 0x2 (meaning you will force only the ECC clock) */
-	nVal = MV_REG_READ(CORE_DIV_CLK_CTRL(0));
-	nVal = nVal & ~(0xff);
-	nVal = nVal | 0x2;
-	MV_REG_WRITE(CORE_DIV_CLK_CTRL(0), nVal);
-
-	/* Set reload ratio bit 0x00018740[8] to 1'b1 */
-	MV_REG_BIT_SET(CORE_DIV_CLK_CTRL(0), BIT8);
-	mvOsDelay(1); /*  msec */
-	/* Set reload ratio bit 0x00018740[8] to 1'b1 */
-	MV_REG_BIT_RESET(CORE_DIV_CLK_CTRL(0), BIT8);
-}
+/**************/
+/* Local Data */
+/**************/
+
 
 /*******************************************************************************
 * mvNfcInit
@@ -636,7 +625,7 @@ MV_VOID setNANDClock(MV_U32 nClock)
 *	MV_TIMEOUT 	- Error accessing the underlying flahs device.
 *	MV_FAIL		- On failure
 *******************************************************************************/
-MV_STATUS mvNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl)
+MV_STATUS mvNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl, struct MV_NFC_HAL_DATA *halData)
 {
 	MV_U32 ctrl_reg;
 	MV_STATUS ret;
@@ -645,14 +634,14 @@ MV_STATUS mvNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl)
 	MV_U32 nand_clock;
 	/* Initial register values */
 	ctrl_reg = 0;
-
 	/*
 	 Reduce NAND clock for supporting slower flashes for initialization
 	 ECC engine clock = (2Ghz / divider)
 	 NFC clock = ECC clock / 2
 	 */
-	setNANDClock(8); /* Go down to 125MHz */
+	halData->mvCtrlNandClkSetFunction(8); /* setNANDClock(8);  Go down to 125MHz */
 	nand_clock = 125000000;
+	DB(printf("mvNfcInit: set nand clock to %d\n", nand_clock));
 
 	/* Relax Timing configurations to avoid timing violations after flash reset */
 	MV_REG_WRITE(NFC_TIMING_0_REG, 0xFC3F3F7F);
@@ -727,9 +716,11 @@ MV_STATUS mvNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl)
 
 	/* Critical Initialization done. Raise NFC clock if needed */
 	if (flashDeviceInfo[i].flags & NFC_CLOCK_UPSCALE_200M) {
-		setNANDClock(5);
+
+		halData->mvCtrlNandClkSetFunction(5); /* setNANDClock(5); */
 		nand_clock = 200000000;
 	}
+	DB(printf("mvNfcInit: set nand clock to %d\n", nand_clock));
 
 	/* Configure the command set based on page size */
 	if (flashDeviceInfo[i].pgSz < MV_NFC_2KB_PAGE)
@@ -739,8 +730,10 @@ MV_STATUS mvNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl)
 
 	/* calculate Timing parameters */
 	ret = mvNfcTimingSet(nand_clock, &flashDeviceInfo[i]);
-	if (ret != MV_OK)
+	if (ret != MV_OK) {
+		DB(printf("mvNfcInit: mvNfcTimingSet failed for clock %d\n", nand_clock));
 		return ret;
+	}
 
 	/* Configure the control register based on the device detected */
 	ctrl_reg = MV_REG_READ(NFC_CONTROL_REG);
diff --git a/arch/arm/plat-armada/mv_hal/nfc/mvNfc.h b/arch/arm/plat-armada/mv_hal/nfc/mvNfc.h
index 227127d..1781c25 100644
--- a/arch/arm/plat-armada/mv_hal/nfc/mvNfc.h
+++ b/arch/arm/plat-armada/mv_hal/nfc/mvNfc.h
@@ -395,12 +395,15 @@ typedef struct {
 	MV_U32		cmdb3;
 } MV_NFC_CMD;
 
+struct MV_NFC_HAL_DATA {
+	void (*mvCtrlNandClkSetFunction) (int);    /* Controller NAND clock div  */
+};
+
 
 /********************************/
 /* Functions API 		*/
 /********************************/
-
-MV_STATUS mvNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl);
+MV_STATUS mvNfcInit(MV_NFC_INFO *nfcInfo, MV_NFC_CTRL *nfcCtrl, struct MV_NFC_HAL_DATA *halData);
 MV_STATUS mvNfcSelectChip(MV_NFC_CTRL *nfcCtrl, MV_NFC_CHIP_SEL chip);
 MV_STATUS mvNfcCommandPio(MV_NFC_CTRL *nfcCtrl, MV_NFC_MULTI_CMD * cmd_desc, MV_BOOL next);
 MV_STATUS mvNfcCommandMultiple(MV_NFC_CTRL *nfcCtrl, MV_NFC_MULTI_CMD *descInfo, MV_U32 descCnt);
-- 
1.7.5.4

