From ee909245acc478861c41d2d7fd427dcf90e46f07 Mon Sep 17 00:00:00 2001
From: Piotr Ziecik <kosmo@semihalf.com>
Date: Mon, 17 Feb 2014 13:58:44 +0100
Subject: [PATCH 1380/1825] fix: alp: ipc_dev: Fix DFEV IPC channel
 attachment.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit e48935cedbc181d0a956ff02704a08858f41e1e3

	This commit fixes channel attachment error ("IPC ERROR: Tx Test:
	channel not attached, state is 2") in the ipc_dfev module.

Change-Id: Iaea03203f22004cd7551be1033f849eb70ccbd55
Signed-off-by: Piotr Ziecik <kosmo@semihalf.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5871
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c        |   34 ++++++++++++++++++++
 1 files changed, 34 insertions(+), 0 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c
index 3d91047..80017d3 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c
@@ -16,6 +16,7 @@
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/init.h>
+#include <linux/workqueue.h>
 #include <plat/ipc_dfev.h>
 
 #include "mvTypes.h"
@@ -94,6 +95,7 @@ static struct ipc_dfev_data_ops *ipc_dfev_data_ops;
 static struct ipc_dfev_ctrl_pool ipc_dfev_ctrl_pool;
 static struct ipc_dfev_data_pool ipc_dfev_data_pool;
 
+static struct delayed_work ipc_dfev_linkup;
 
 #define ipc_dfev_init_pool(ch, perror)					\
 	do {								\
@@ -131,6 +133,35 @@ static struct ipc_dfev_data_pool ipc_dfev_data_pool;
 		spin_unlock_irqrestore(&(ch)->lock, flags);		\
 	} while (0)
 
+static void ipc_dfev_handshake(struct work_struct *dummy)
+{
+	unsigned int channels_to_attach = 4;
+	int attached;
+
+	ipc_attach_chn(IPC_DFEV_LINK_ID, IPC_DFEV_CTRL_CHAN_ID,
+			mvIpcGetlinkRemoteNodeId(IPC_DFEV_LINK_ID), &attached);
+	if (attached)
+		channels_to_attach -= 1;
+
+	ipc_attach_chn(IPC_DFEV_LINK_ID, IPC_DFEV_DATA_TX_CHAN_ID,
+			mvIpcGetlinkRemoteNodeId(IPC_DFEV_LINK_ID), &attached);
+	if (attached)
+		channels_to_attach -= 1;
+
+	ipc_attach_chn(IPC_DFEV_LINK_ID, IPC_DFEV_DATA_RX_CHAN_ID,
+			mvIpcGetlinkRemoteNodeId(IPC_DFEV_LINK_ID), &attached);
+	if (attached)
+		channels_to_attach -= 1;
+
+	ipc_attach_chn(IPC_DFEV_LINK_ID, IPC_DFEV_DATA_RETURN_CHAN_ID,
+			mvIpcGetlinkRemoteNodeId(IPC_DFEV_LINK_ID), &attached);
+	if (attached)
+		channels_to_attach -= 1;
+
+	if (channels_to_attach != 0)
+		schedule_delayed_work(&ipc_dfev_linkup, HZ);
+}
+
 static int ipc_dfev_send(int type, int channel, void *message)
 {
 	MV_IPC_MSG msg;
@@ -471,6 +502,9 @@ static int __init ipc_dfev_init_module(void)
 		goto error4;
 	}
 
+	INIT_DELAYED_WORK(&ipc_dfev_linkup, ipc_dfev_handshake);
+		schedule_delayed_work(&ipc_dfev_linkup, HZ);
+
 	return 0;
 
 error4:
-- 
1.7.5.4

