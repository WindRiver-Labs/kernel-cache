From d25adb49954dcf0e5740ecd79a73d9d8071b7946 Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Thu, 13 Jun 2013 10:11:28 +0300
Subject: [PATCH 0716/1825] PPv2: use en/disable PON port callbacks

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 6fa5d323477aa8e582f84fecfb60918df3228577

Change-Id: I9ca92aeee3578765c3d72b38fb3d646bf4ad8c9a
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2237
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |   59 ++++++++++++++++----
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    2 +
 2 files changed, 49 insertions(+), 12 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index f9ce1f1d..5cc1bb0 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -3673,17 +3673,16 @@ int mv_eth_start_internals(struct eth_port *pp, int mtu)
 	/* TODO: set speed, duplex, fc with ethtool parameres (speed_cfg, etc..) */
 
 	/* start the hal - rx/tx activity */
-	status = mvPp2PortEnable(pp->port);
-	if (status == MV_OK)
-		set_bit(MV_ETH_F_LINK_UP_BIT, &(pp->flags));
+
+	clear_bit(MV_ETH_F_LINK_UP_BIT, &(pp->flags));
+	if (!MV_PON_PORT(pp->port))
+		status = mvPp2PortEnable(pp->port);
 #ifdef CONFIG_MV_PON
-	else if (MV_PON_PORT(pp->port) && (mv_pon_link_status() == MV_TRUE)) {
-		mvPp2PortUp(pp->port);
-		set_bit(MV_ETH_F_LINK_UP_BIT, &(pp->flags));
-	}
-#endif /* CONFIG_MV_PON */
 	else
-		clear_bit(MV_ETH_F_LINK_UP_BIT, &(pp->flags));
+		status = mv_pon_enable();
+#endif
+	if (status == MV_OK)
+		set_bit(MV_ETH_F_LINK_UP_BIT, &(pp->flags));
 
 	set_bit(MV_ETH_F_STARTED_BIT, &(pp->flags));
  out:
@@ -3739,12 +3738,17 @@ int mv_eth_stop_internals(struct eth_port *pp)
 	for (txp = 0; txp < pp->txp_num; txp++)
 		mv_eth_txp_clean(pp->port, txp);
 
-	/* stop the port activity, mask all interrupts */
-	if (mvPp2PortDisable(pp->port) != MV_OK) {
+
+	if (!MV_PON_PORT(pp->port) && (mvPp2PortDisable(pp->port) != MV_OK)) {
 		printk(KERN_ERR "GbE port %d: ethPortDisable failed\n", pp->port);
 		goto error;
 	}
-
+#ifdef CONFIG_MV_PON
+	else if (mv_pon_disable() != MV_OK) {
+		printk(KERN_ERR "PON port %d: mv_pon_disable failed\n", pp->port);
+		goto error;
+	}
+#endif
 	/* free the skb's in the hal rx ring */
 	for (queue = 0; queue < pp->rxq_num; queue++)
 		mv_eth_rxq_drop_pkts(pp, queue);
@@ -4829,6 +4833,37 @@ MV_STATUS mv_pon_set_mac_addr(void *addr)
 
 	return MV_OK;
 }
+
+MV_STATUS mv_pon_enable(void)
+{
+	if (mv_pon_callbacks && mv_pon_callbacks->port_enable) {
+		if (mv_pon_callbacks->port_enable(MV_PON_LOGIC_PORT_GET()) != MV_OK) {
+			printk(KERN_ERR "pon port_enable failed\n");
+			return MV_FAIL;
+		}
+	} else
+		printk(KERN_ERR "Warning: pon port_enable is uninitialized\n");
+
+	if (mv_pon_link_status() == MV_TRUE)
+		return mvPp2PortUp(MV_PON_LOGIC_PORT_GET());
+
+	return MV_NOT_READY;
+}
+
+MV_STATUS mv_pon_disable(void)
+{
+	mvPp2PortDown(MV_PON_LOGIC_PORT_GET());
+
+	if (mv_pon_callbacks && mv_pon_callbacks->port_disable) {
+		if (mv_pon_callbacks->port_disable(MV_PON_LOGIC_PORT_GET()) != MV_OK) {
+			printk(KERN_ERR "pon port_disable failed\n");
+			return MV_FAIL;
+		}
+	} else
+		printk(KERN_ERR "Warning: pon port_disable is uninitialized\n");	return MV_OK;
+
+	return MV_OK;
+}
 #endif /* CONFIG_MV_PON */
 
 /* Support for platform driver */
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index f3398d5..7f6241c 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -816,6 +816,8 @@ void mv_eth_ext_mac_ops_register(int port_id,
 MV_BOOL mv_pon_link_status(void);
 MV_STATUS mv_pon_mtu_config(MV_U32 maxEth);
 MV_STATUS mv_pon_set_mac_addr(void *addr);
+MV_STATUS mv_pon_enable(void);
+MV_STATUS mv_pon_disable(void);
 #endif /* CONFIG_MV_PON */
 
 #ifdef CONFIG_MV_ETH_TX_SPECIAL
-- 
1.7.5.4

