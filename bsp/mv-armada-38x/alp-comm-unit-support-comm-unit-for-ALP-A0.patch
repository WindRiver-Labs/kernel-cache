From eb54a8ebdacd1119d5ae8ffca0eedf699b55f12f Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Wed, 7 May 2014 11:24:17 +0800
Subject: [PATCH 1613/1825] alp: comm unit: support comm unit for ALP A0

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 38467dd5b97a522e10526fb596cb3b18b27bee9c

    Correct SLIC MPP definition, correct Comm Unit register mapping, realize SLIC reset and
set correct FS clock.
Signed-off-by: Victor Gu <xigu@marvell.com>

Change-Id: I7bdeee228a8df5ab5f37f653b140e8f0de032dda
Reviewed-on: http://vgitil04.il.marvell.com:8080/7851
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h       |    1 +
 arch/arm/mach-avantalp/config/mvSysTdmConfig.h     |    9 +++
 arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c        |   22 +++++---
 .../plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.c  |    1 +
 .../plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.h  |    1 -
 .../mv_drivers_lsp/mv_phone/tdm/tdm_if.c           |   11 ++--
 .../mv_drivers_lsp/mv_phone/tdm/tdm_if.h           |    2 +-
 .../mv_drivers_lsp/mv_phone/tdm/test/tal_dev.c     |    1 +
 .../mv_hal/voiceband/commUnit/mvCommUnit.c         |   56 ++++++++++++-------
 .../mv_hal/voiceband/commUnit/mvCommUnit.h         |    2 +
 .../mv_hal/voiceband/commUnit/mvCommUnitRegs.h     |    5 ++
 drivers/staging/telephony/mv_tdm/Kconfig           |   49 +++++++++++++++--
 12 files changed, 120 insertions(+), 40 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
index 35de0ab7..aa2b149 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvSpec.h
@@ -138,6 +138,7 @@ extern "C" {
 #define MV_CESA_REGS_OFFSET(chanNum)            (0x9D000 + (chanNum * 0x2000))
 #define MV_SATA_REGS_OFFSET                     (0xA0000)
 #define MV_TDM_REGS_OFFSET			(0xB0000)
+#define MV_COMM_UNIT_REGS_OFFSET		(0xB0000)
 #define MV_NFC_REGS_OFFSET                      (0xD0000)
 #define MV_SDMMC_REGS_OFFSET                    (0xD4000)
 
diff --git a/arch/arm/mach-avantalp/config/mvSysTdmConfig.h b/arch/arm/mach-avantalp/config/mvSysTdmConfig.h
index 07402f0..a59c49a 100644
--- a/arch/arm/mach-avantalp/config/mvSysTdmConfig.h
+++ b/arch/arm/mach-avantalp/config/mvSysTdmConfig.h
@@ -109,6 +109,15 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #elif defined(CONFIG_ZARLINK_SLIC_SUPPORT)
 	#define ZARLINK_SLIC_SUPPORT
 	#define SLIC_TIMER_EVENT_SUPPORT
+	#if defined(CONFIG_ZARLINK_SLIC_VE880)
+		#define ZARLINK_SLIC_VE880
+	#elif defined(CONFIG_ZARLINK_SLIC_VE886)
+		#define ZARLINK_SLIC_VE886
+	#elif defined(CONFIG_ZARLINK_SLIC_VE890)
+		#define ZARLINK_SLIC_VE890
+	#elif defined(CONFIG_ZARLINK_SLIC_VE792)
+		#define ZARLINK_SLIC_VE792
+	#endif
 #else /* CONFIG_LANTIQ_SLIC_SUPPORT */
 	#define LANTIQ_SLIC_SUPPORT
 #endif
diff --git a/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c b/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c
index 31d4e1c..2015606 100644
--- a/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c
+++ b/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c
@@ -77,7 +77,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "spi/mvSpi.h"
 
 #define MAX_DATA_LENGTH		255
-
+#undef MV_TDM_DEBUG
 /*******************************************************************************
 * mvSysTdmInit - Initialize the TDM subsystem
 *
@@ -130,11 +130,12 @@ MV_STATUS mvSysTdmInit(MV_TDM_PARAMS* tdmParams)
 #else
 		halData.maxCs = mvBoardTdmDevicesCountGet();
 		status = mvCommUnitHalInit (tdmParams, &halData);
-		
+
 		/* Issue SLIC reset */
-		mvGppValueSet(0, BIT25, 0);
-		mvOsUDelay(60);
-		mvGppValueSet(0, BIT25, BIT25);
+		status = mvCommUnitResetSlic();
+
+		/* Set FS, will be 8M/8K = 1024 */
+		status = mvCommUnitSyncBitCountSet(1024);
 #endif
 	}
 
@@ -229,11 +230,18 @@ MV_VOID mvSysTdmSpiWrite(MV_U16 lineId, MV_U8* cmdBuff, MV_U8 cmdSize, MV_U8* da
 	spiType = SPI_TYPE_SLIC_ISI;
 #endif
 
+#ifdef MV_TDM_DEBUG
+	mvOsPrintf(KERN_ERR "%s():line(%d) SpiId=%d lineId=%d SpiCs=%d spiType=%d\n",
+		__func__, __LINE__, mvBoardTdmSpiIdGet(), lineId, mvBoardTdmSpiCsGet(lineId), spiType);
+#endif
 	/* Set SPI parameters(lineId = devId) */
-	mvSpiParamsSet(mvBoardTdmSpiIdGet(), mvBoardTdmSpiCsGet(lineId), spiType);
+	if (MV_OK != mvSpiParamsSet(mvBoardTdmSpiIdGet(), mvBoardTdmSpiCsGet(lineId), spiType)) {
+		mvOsPrintf(KERN_ERR "SPI param setting failed !\n");
+		return;
+	}
 
 	if (MV_OK != mvSpiWriteThenWrite(mvBoardTdmSpiIdGet(), cmdBuff, cmdSize, dataBuff, dataSize))
-		mvOsPrintf(KERN_ERR "SPI write failed !!!\n");
+		mvOsPrintf(KERN_ERR "SPI write failed !\n");
 
 #endif /* MV_TDM_SUPPORT */
 }
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.c
index 6461a26..92431ba 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.c
@@ -20,6 +20,7 @@ disclaimer.
 
 /* Marvell Telephony Adaptation Layer */
 #include "tal.h"
+#include "tdm_if.h"
 
 static tal_if_t *tal_if;
 static tal_mmp_ops_t *tal_mmp;
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.h
index 2bd0722..8fd1857 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tal.h
@@ -22,7 +22,6 @@ disclaimer.
 #define _TAL_H_
 
 #include "mvOs.h"
-#include "tdm_if.h"
 
 /* Defines */
 #define TAL_MAX_PHONE_LINES	32
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
index f0d362f..ca25c62 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
@@ -61,9 +61,8 @@ ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 ******************************************************************************/
-
-#include "tdm_if.h"
 #include "tal.h"
+#include "tdm_if.h"
 #include "test/tal_dev.h"
 #include <linux/interrupt.h>
 #include <linux/module.h>
@@ -317,8 +316,9 @@ MV_STATUS tdm_if_init(tal_params_t *tal_params)
 
 void tdm_if_exit(void)
 {
+#ifdef CONFIG_MV_TDM_SUPPORT
 	u32 max_poll = 0;
-
+#endif
 	/* Check if already stopped */
 	if (!irq_init && !pcm_enable && !tdm_init)
 		return;
@@ -329,6 +329,7 @@ void tdm_if_exit(void)
 	if (pcm_enable)
 		tdm_if_pcm_stop();
 
+#ifdef CONFIG_MV_TDM_SUPPORT
 	while ((is_pcm_stopping != 0) && (max_poll < 20)) {
 		mdelay(1);
 		max_poll++;
@@ -340,7 +341,7 @@ void tdm_if_exit(void)
 		printk("pcm_stop_flag(%d), pcm_start_stop_state(%d)\n", pcm_stop_flag, pcm_start_stop_state);
 		printk("pcm_stop_status(%d)\n", pcm_stop_status);*/
 	}
-
+#endif
 	if (irq_init) {
 		/* Release interrupt */
 #ifndef CONFIG_MV_PHONE_USE_FIQ_PROCESSING
@@ -669,7 +670,7 @@ static void tdm_if_pcm_tx_process(unsigned long arg)
 	return;
 }
 
-void tdm_if_stats_get(tdm_if_stats_t* tdm_if_stats)
+void tdm_if_stats_get(tal_stats_t *tdm_if_stats)
 {
 	if (tdm_init == 0)
 		return;
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.h
index b1bfcc8..1d6ba7e 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.h
@@ -114,7 +114,7 @@ typedef struct {
 } tdm_if_register_ops_t;
 
 /* APIs */
-void tdm_if_stats_get(tdm_if_stats_t* tdm_if_stats);
+void tdm_if_stats_get(tal_stats_t *tdm_if_stats);
 
 #if defined(MV_TDM_USE_DCO)
 MV_VOID mvCtrlTdmDcoReset(MV_VOID);
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/test/tal_dev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/test/tal_dev.c
index 9b11154..30783e8 100755
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/test/tal_dev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/test/tal_dev.c
@@ -71,6 +71,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include <linux/wait.h>
 
 #include "mv_phone/tdm/tal.h"
+#include "mv_phone/tdm/tdm_if.h"
 #include "tal_dev.h"
 
 #define	TALDEV_NAME	"tal"
diff --git a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.c b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.c
index e8eafaa..3c8c758 100644
--- a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.c
+++ b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.c
@@ -74,7 +74,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define NEXT_BUFF(buff)		((buff + 1) % TOTAL_CHAINS)
 #define PREV_BUFF(buff)		(buff == 0 ? (TOTAL_CHAINS-1) : (buff-1))
 #define MAX_POLL_USEC		100000	/* 100ms */
-#define IS_KW2_A0(model, rev)	((((model & 0xff00) == 0x6500) && (rev > 1)) ? 1 : 0)
 #define COMM_UNIT_SW_RST	(1 << 5)
 #define OLD_INT_WA_BIT		(1 << 15)
 
@@ -106,8 +105,9 @@ MV_STATUS mvCommUnitHalInit(MV_TDM_PARAMS *tdmParams, MV_TDM_HAL_DATA *halData)
 {
 	MV_U16 pcmSlot, index;
 	MV_U32 buffSize, chan;
-	MV_U32 totalRxDescSize, totalTxDescSize, chMask;
+	MV_U32 totalRxDescSize, totalTxDescSize;
 	MV_U32 maxPoll, clkSyncCtrlReg;
+	MV_U32 chMask;
 	MV_TDM_DPRAM_ENTRY actDpramEntry, *pActDpramEntry;
 
 	MV_TRC_REC("->%s\n", __func__);
@@ -139,7 +139,8 @@ MV_STATUS mvCommUnitHalInit(MV_TDM_PARAMS *tdmParams, MV_TDM_HAL_DATA *halData)
 	buffSize = (sampleSize * MV_TDM_TOTAL_CH_SAMPLES * samplingCoeff);
 
 	/* Allocate cached data buffers for all channels */
-	TRC_REC("%s: allocate %dB for data buffers\n", __func__, (buffSize * totalChannels));
+	TRC_REC("%s: allocate %dB for data buffers totalChannels=%d\n",
+		__func__, (buffSize * totalChannels), totalChannels);
 	for (index = 0; index < TOTAL_CHAINS; index++) {
 		rxBuffVirt[index] =
 		    (MV_U8 *) mvOsIoCachedMalloc(NULL, ((buffSize * totalChannels) + CPU_D_CACHE_LINE_SIZE),
@@ -245,16 +246,14 @@ MV_STATUS mvCommUnitHalInit(MV_TDM_PARAMS *tdmParams, MV_TDM_HAL_DATA *halData)
 	/**********************/
 	/* MCSC Configuration */
 	/**********************/
-	if (IS_KW2_A0(ctrlModel, ctrlRev)) {
-		/* Disable Rx/Tx channel balancing & Linear mode fix */
-		MV_REG_BIT_SET(MCSC_GLOBAL_CONFIG_REG, MCSC_GLOBAL_CONFIG_TCBD_MASK);
+	/* Disable Rx/Tx channel balancing & Linear mode fix */
+	MV_REG_BIT_SET(MCSC_GLOBAL_CONFIG_REG, MCSC_GLOBAL_CONFIG_TCBD_MASK);
 #if 0
-		/* Unmask Rx/Tx channel balancing */
-		chMask = (0xffffffff & ~((MV_U32)((1 << totalChannels) - 1)));
-		MV_REG_WRITE(MCSC_RX_CHANNEL_BALANCING_MASK_REG, chMask);
-		MV_REG_WRITE(MCSC_TX_CHANNEL_BALANCING_MASK_REG, chMask);
+	/* Unmask Rx/Tx channel balancing */
+	chMask = (0xffffffff & ~((MV_U32)((1 << totalChannels) - 1)));
+	MV_REG_WRITE(MCSC_RX_CHANNEL_BALANCING_MASK_REG, chMask);
+	MV_REG_WRITE(MCSC_TX_CHANNEL_BALANCING_MASK_REG, chMask);
 #endif
-	}
 
 	for (chan = 0; chan < totalChannels; chan++) {
 		MV_REG_WRITE(MCSC_CHx_RECEIVE_CONFIG_REG(chan), CONFIG_MRCRx);
@@ -455,10 +454,8 @@ MV_VOID mvCommUnitRelease(MV_VOID)
 
 		mvCommUnitMcdmaMcscAbort();
 
-		if (IS_KW2_A0(ctrlModel, ctrlRev)) {
-			mvOsUDelay(10);
-			MV_REG_BIT_RESET(MCSC_GLOBAL_CONFIG_REG, MCSC_GLOBAL_CONFIG_MAI_MASK);
-		}
+		mvOsUDelay(10);
+		MV_REG_BIT_RESET(MCSC_GLOBAL_CONFIG_REG, MCSC_GLOBAL_CONFIG_MAI_MASK);
 
 		/* Disable TDM */
 		MV_REG_BIT_RESET(FLEX_TDM_CONFIG_REG, TDM_TEN_MASK);
@@ -593,7 +590,7 @@ MV_VOID mvCommUnitPcmStart(MV_VOID)
 
 static MV_VOID mvCommUnitMcdmaMcscAbort(MV_VOID)
 {
-	MV_U32 chan, maxPoll;
+	MV_U32 chan;
 
 	MV_TRC_REC("->%s\n", __func__);
 
@@ -745,11 +742,9 @@ static MV_VOID mvCommUnitMcdmaStop(MV_VOID)
 	/* Wait at least 1 frame */
 	mvOsUDelay(200);
 
-	if (IS_KW2_A0(ctrlModel, ctrlRev)) {
-		/* Manual reset to channel-balancing mechanism */
-		MV_REG_BIT_SET(MCSC_GLOBAL_CONFIG_REG, MCSC_GLOBAL_CONFIG_MAI_MASK);
-		mvOsUDelay(1);
-	}
+	/* Manual reset to channel-balancing mechanism */
+	MV_REG_BIT_SET(MCSC_GLOBAL_CONFIG_REG, MCSC_GLOBAL_CONFIG_MAI_MASK);
+	mvOsUDelay(1);
 
 	MV_TRC_REC("<-%s\n", __func__);
 }
@@ -1021,3 +1016,22 @@ MV_VOID mvCommUnitShow(MV_VOID)
 
 	}
 }
+
+MV_STATUS mvCommUnitSyncBitCountSet(MV_32 count)
+{
+	MV_REG_WRITE(TDM_OUTPUT_SYNC_BIT_COUNT_REG, (count << TDM_SYNC_BIT_OFFS) & TDM_SYNC_BIT_MASK);
+	return MV_OK;
+}
+
+MV_STATUS mvCommUnitResetSlic(MV_VOID)
+{
+	/* Enable SLIC reset */
+	MV_REG_BIT_RESET(TDM_CLK_AND_SYNC_CONTROL_REG, TDM_PROG_TDM_SLIC_RESET_MASK);
+
+	mvOsUDelay(60);
+
+	/* Release SLIC reset */
+	MV_REG_BIT_SET(TDM_CLK_AND_SYNC_CONTROL_REG, TDM_PROG_TDM_SLIC_RESET_MASK);
+
+	return MV_OK;
+}
diff --git a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.h b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.h
index 966027d..68bfaa7 100644
--- a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.h
+++ b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnit.h
@@ -197,6 +197,8 @@ extern "C" {
 	MV_VOID mvCommUnitRelease(MV_VOID);
 	MV_VOID mvCommUnitIntEnable(MV_U8 deviceId);
 	MV_VOID mvCommUnitIntDisable(MV_U8 deviceId);
+	MV_STATUS mvCommUnitSyncBitCountSet(MV_32 count);
+	MV_STATUS mvCommUnitResetSlic(MV_VOID);
 
 #ifdef __cplusplus
 }
diff --git a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnitRegs.h b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnitRegs.h
index 73acd58..dfe6c2d 100644
--- a/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnitRegs.h
+++ b/arch/arm/plat-armada/mv_hal/voiceband/commUnit/mvCommUnitRegs.h
@@ -282,6 +282,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define TDM_CLK_AND_SYNC_CONTROL_REG		(MV_COMM_UNIT_REGS_BASE + 0x881C)
 #define TDM_CLK_DIVIDER_CONTROL_REG		(MV_COMM_UNIT_REGS_BASE + 0x8820)
 #define TDM_RESV_CLK_DIVIDER_CONTROL_REG	(MV_COMM_UNIT_REGS_BASE + 0x8824)
+#define TDM_OUTPUT_SYNC_BIT_COUNT_REG		(MV_COMM_UNIT_REGS_BASE + 0x8C8C)
 #define TDM_DATA_DELAY_AND_CLK_CTRL_REG		(MV_COMM_UNIT_REGS_BASE + 0x8CD0)
 #define TDM_PLUS_MINUS_DELAY_CTRL_FSYNC_OUT_REG	(MV_COMM_UNIT_REGS_BASE + 0x8CD4)
 #define TDM_PLUS_MINUS_DELAY_CTRL_FSYNC_IN_REG	(MV_COMM_UNIT_REGS_BASE + 0x8CD8)
@@ -348,6 +349,10 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define TDM_TEN_OFFS				31
 #define TDM_TEN_MASK				(1 << TDM_TEN_OFFS)
 
+/* TDM_OUTPUT_SYNC_BIT_COUNT_REG bits */
+#define TDM_SYNC_BIT_OFFS			16
+#define TDM_SYNC_BIT_MASK			(0xffff << TDM_SYNC_BIT_OFFS)
+
 /* TDM_DATA_DELAY_AND_CLK_CTRL_REG bits */
 #define TX_CLK_OUT_ENABLE_OFFS			0
 #define TX_CLK_OUT_ENABLE_MASK			(1 << TX_CLK_OUT_ENABLE_OFFS)
diff --git a/drivers/staging/telephony/mv_tdm/Kconfig b/drivers/staging/telephony/mv_tdm/Kconfig
index f47c7ed..bc7220e 100644
--- a/drivers/staging/telephony/mv_tdm/Kconfig
+++ b/drivers/staging/telephony/mv_tdm/Kconfig
@@ -24,10 +24,10 @@ config MV_TDM_SUPPORT
 	voice samples thru analog phone interface.
 
 config MV_COMM_UNIT_SUPPORT
-	depends on ARCH_FEROCEON_KW2
-	bool "Support CommUnit(up to 32 channels)"
+	depends on ARCH_FEROCEON_KW2 || ARCH_AVANTA_LP
+	bool "Support CommUnit(up to 32(KW2) or 16(LP) channels)"
 	---help---
-	Choosing this option enables Marvell 32CH CommUnit voice interface.
+	Choosing this option enables Marvell 32CH(KW2) or 16CH(LP) CommUnit voice interface.
 
 endchoice
 
@@ -113,6 +113,45 @@ config ZARLINK_SERIAL_SLIC_SUPPORT
 endchoice
 
 choice
+	prompt "ZARLINK SLIC Device"
+	depends on MV_PHONE && ZARLINK_SLIC_SUPPORT
+	default ZARLINK_SLIC_VE880
+
+config ZARLINK_SLIC_VE880
+	bool "Support Zarlink VE880 SLIC family"
+	---help---
+	Choosing this option enables
+	Zarlink VE880 SLIC module.
+	VE880 generally support up to
+	2 voice ports
+
+config ZARLINK_SLIC_VE886
+	bool "Support Zarlink VE886 SLIC family"
+	---help---
+	Choosing this option enables
+	Zarlink VE886 SLIC module.
+	VE886 generally support up to
+	2 voice ports
+
+config ZARLINK_SLIC_VE890
+	bool "Support Zarlink VE890 SLIC family"
+	---help---
+	Choosing this option enables
+	Zarlink VE889 SLIC module.
+	VE889 generally support up to
+	2 voice ports
+
+config ZARLINK_SLIC_VE792
+	bool "Support Zarlink VE792 SLIC family"
+	---help---
+	Choosing this option enables
+	Zarlink VE792 SLIC module.
+	VE792 generally support up to
+	8 voice ports
+
+endchoice
+
+choice
 	prompt "SLIC Device"
 	depends on MV_PHONE && LANTIQ_SLIC_SUPPORT
 	default LANTIQ_SLIC_DUSLIC_XT
@@ -151,7 +190,7 @@ choice
 
 config MV_TDM_USE_INTERNAL_PCLK_SOURCE
 	bool "Support PCLK internally generated"
-	depends on ARCH_FEROCEON
+	depends on ARCH_FEROCEON_KW2 || ARCH_AVANTA_LP
 	---help---
 	Choosing this option will enable
 	use of internally generated source clock
@@ -160,7 +199,7 @@ config MV_TDM_USE_INTERNAL_PCLK_SOURCE
 
 config MV_TDM_USE_EXTERNAL_PCLK_SOURCE
 	bool "Support PCLK from external source"
-	depends on ARCH_FEROCEON
+	depends on ARCH_FEROCEON_KW2 || ARCH_AVANTA_LP
 	---help---
 	Choosing this option will enable
 	use of external source clock
-- 
1.7.5.4

