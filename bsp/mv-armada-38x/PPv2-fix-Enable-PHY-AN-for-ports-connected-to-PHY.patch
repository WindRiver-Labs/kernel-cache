From e7e63fd8b6a7831bb7230982cfdf665c7945179e Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Thu, 4 Jul 2013 18:00:02 +0300
Subject: [PATCH 0770/1825] PPv2: fix: Enable PHY AN for ports connected to
 PHY

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit a384d5b1d8418481093f38dad03b6bc336d8f630

	Before PHY address set, indicate that port connected to PHY.
	This is done by setting relevant bit in PHY AN Config register 0

pick 7155b99 alp:usb: Initial USB3 XHCI support
Change-Id: I92a4bf1935540178aab2db00990232c2d474d3b1
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2437
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c |    4 ++++
 .../plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h    |   16 +++++++++-------
 2 files changed, 13 insertions(+), 7 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c
index a34ba50..00f5848 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacApi.c
@@ -585,6 +585,10 @@ void mvEthPhyAddrSet(int port, int phyAddr)
 {
 	unsigned int regData;
 
+	regData = MV_REG_READ(ETH_PHY_AN_CFG0_REG);
+	regData |= ETH_PHY_AN_EN_MASK(port);
+	MV_REG_WRITE(ETH_PHY_AN_CFG0_REG, regData);
+
 	regData = MV_REG_READ(ETH_PHY_ADDR_REG);
 
 	regData &= ~ETH_PHY_ADDR_MASK(port);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h
index 51b528e3..7fac135 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gmac/mvEthGmacRegs.h
@@ -205,6 +205,15 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define ETH_PHY_ADDR_MASK(port)		(0x1F << ETH_PHY_ADDR_OFFS(port))
 
 /*------------------------------------------------------------------------------
+ * PHY Auto-Negotiation Configuration Register0
+ */
+#define ETH_PHY_AN_CFG0_REG			(LMS_REG_BASE + 0x34)
+#define ETH_PHY_AN_CFG0_STOP_AN_SMI0_BIT	7
+#define ETH_PHY_AN_CFG0_STOP_AN_SMI0_MASK	(1 << ETH_PHY_AN_CFG0_STOP_AN_SMI0_BIT)
+#define ETH_PHY_AN_EN_OFFS(port)		(port)
+#define ETH_PHY_AN_EN_MASK(port)		(1 << ETH_PHY_AN_EN_OFFS(port))
+
+/*------------------------------------------------------------------------------
  * Interrupt Summary Cause Register
  */
 #define ETH_ISR_SUM_CAUSE_REG		(LMS_REG_BASE + 0x10)
@@ -240,13 +249,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define ETH_ISR_SUM_MASK_REG		(LMS_REG_BASE + 0x220c)
 
 /*------------------------------------------------------------------------------
- * PHY Auto-Negotiation Configuration Register0
- */
-#define ETH_PHY_AN_CFG0_REG(port)		(LMS_REG_BASE + 0x34 + (port * 0x2000))
-#define ETH_PHY_AN_CFG0_STOP_AN_SMI0_BIT	7
-#define ETH_PHY_AN_CFG0_STOP_AN_SMI0_MASK	(1 << ETH_PHY_AN_CFG0_STOP_AN_SMI0_BIT)
-
-/*------------------------------------------------------------------------------
  * SMI Management Register
  */
 #define ETH_SMI_REG(port)		(LMS_REG_BASE + 0x54)
-- 
1.7.5.4

