From 945c30cc5119a8b007892e4cb6179265a25626c8 Mon Sep 17 00:00:00 2001
From: Ken Ma <make@marvell.com>
Date: Tue, 10 Jun 2014 13:49:49 +0800
Subject: [PATCH 1739/1825] fix: correct the judgement of WRR weight and MTU

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit ac0ffa15db9eabbadb2961bc2719402b2a9bed09

	correct the judgement of WRR weight and MTU, we should use real
	MTU but not the amplified MTU in register
	correct the WRR weight set of TPM
	No issue number, raised by ZTE customer

Signed-off-by: Ken Ma <make@marvell.com>

Change-Id: I676953b82f12d3a151ed3e365d5caa19bf21747d
Signed-off-by: Ken Ma <make@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8525
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hua Jing <jinghua@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_tpm/src/core/tpm_policer.c   |   14 +++++++++++---
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c     |   17 +++++++++++------
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h     |    3 +++
 3 files changed, 25 insertions(+), 9 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_policer.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_policer.c
index 82bc191..11d3ada 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_policer.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/core/tpm_policer.c
@@ -819,12 +819,20 @@ int tpm_sched_egr_queue_mode_set(enum tpm_gmac_idx_t gmac_idx,
 	} else if (mode == TPM_SCHED_MODE_WRR) {
 		/* Weight * 256 bytes * 8 bits must be larger then MTU [bits] */
 		mtu = mvPp2RdReg(MV_PP2_TXP_SCHED_MTU_REG);
-		mtu = (mtu / BYTE_BITS) / TPM_WRR_UNIT_BYTE;
-		if (wrr_weight <= mtu) {
-			wrr_weight = mtu + 1;
+
+		/* WA for wrong Token bucket update: Set MTU value = 3*real MTU value, now get read MTU*/
+		mtu /= MV_AMPLIFY_FACTOR_MTU;
+
+		/* MTU [bits] -> MTU [256 bytes] */
+		mtu = (mtu % (TPM_WRR_UNIT_BYTE * BYTE_BITS)) ? ((mtu / BYTE_BITS) / TPM_WRR_UNIT_BYTE) :
+		(((mtu / BYTE_BITS) / TPM_WRR_UNIT_BYTE) + 1);
+
+		if (wrr_weight < mtu) {
+			wrr_weight = mtu;
 			TPM_OS_WARN(TPM_PLCR_MOD,
 				"Input WRR weight too small, reassign with smallest proper value [%d]\n", wrr_weight);
 		}
+
 		rc = mvPp2TxqWrrPrioSet(gmac_idx, tcont_id, queue_id, wrr_weight);
 		if (rc) {
 			TPM_OS_ERROR(TPM_PLCR_MOD, "WRR set failed, HW error%d\n", rc);
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
index 53fbd2d..4646fc8 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.c
@@ -1691,7 +1691,7 @@ MV_STATUS mvPp2TxqFixPrioSet(int port, int txp, int txq)
 /*   Weight range [1..N] */
 MV_STATUS mvPp2TxqWrrPrioSet(int port, int txp, int txq, int weight)
 {
-	MV_U32 regVal, mtu;
+	MV_U32 regVal, mtu, mtu_aligned, weight_min;
 	int txPortNum;
 
 	if (mvPp2TxpCheck(port, txp))
@@ -1705,15 +1705,20 @@ MV_STATUS mvPp2TxqWrrPrioSet(int port, int txp, int txq, int weight)
 
 	/* Weight * 256 bytes * 8 bits must be larger then MTU [bits] */
 	mtu = mvPp2RdReg(MV_PP2_TXP_SCHED_MTU_REG);
-	/* MTU [bits] -> MTU [256 bytes] */
-	mtu = ((mtu / 8) / 256) + 1;
 
-	if ((weight < mtu) || (weight > MV_PP2_TXQ_WRR_WEIGHT_MAX)) {
+	/* WA for wrong Token bucket update: Set MTU value = 3*real MTU value, now get read MTU*/
+	mtu /= MV_AMPLIFY_FACTOR_MTU;
+	mtu /= MV_BIT_NUM_OF_BYTE; /* move to bytes */
+	mtu_aligned = MV_ALIGN_UP(mtu, MV_WRR_WEIGHT_UNIT);
+	weight_min = mtu_aligned / MV_WRR_WEIGHT_UNIT;
+
+	if ((weight < weight_min) || (weight > MV_PP2_TXQ_WRR_WEIGHT_MAX)) {
 		mvOsPrintf("%s Error: weight=%d is out of range %d...%d\n",
-				__func__, weight, mtu, MV_PP2_TXQ_WRR_WEIGHT_MAX);
+				__func__, weight, weight_min, MV_PP2_TXQ_WRR_WEIGHT_MAX);
 		return MV_FAIL;
 	}
 
+
 	regVal = mvPp2RdReg(MV_PP2_TXQ_SCHED_WRR_REG(txq));
 
 	regVal &= ~MV_PP2_TXQ_WRR_WEIGHT_ALL_MASK;
@@ -1743,7 +1748,7 @@ MV_STATUS   mvPp2TxpMaxTxSizeSet(int port, int txp, int maxTxSize)
 		mtu = MV_PP2_TXP_MTU_MAX;
 
 	/* WA for wrong Token bucket update: Set MTU value = 3*real MTU value */
-	mtu = 3 * mtu;
+	mtu = MV_AMPLIFY_FACTOR_MTU * mtu;
 
 	txPortNum = mvPp2EgressPort(port, txp);
 
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
index d2de311..1dea5bc0 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
@@ -77,6 +77,9 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "prs/mvPp2PrsHw.h"
 
 #define PP2_CPU_CODE_IS_RX_SPECIAL(cpu_code)		((cpu_code) & RI_CPU_CODE_RX_SPEC_VAL)
+#define MV_AMPLIFY_FACTOR_MTU				(3)
+#define MV_BIT_NUM_OF_BYTE				(8)
+#define MV_WRR_WEIGHT_UNIT				(256)
 
 static inline int mvPp2IsRxSpecial(MV_U16 parser_info)
 {
-- 
1.7.5.4

