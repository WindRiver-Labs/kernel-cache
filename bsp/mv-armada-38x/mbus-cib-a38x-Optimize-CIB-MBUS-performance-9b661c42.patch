From 494124ce1967d684acb2a90d872788dbb3e78b2c Mon Sep 17 00:00:00 2001
From: Nadav Haklai <nadavh@marvell.com>
Date: Wed, 26 Feb 2014 17:48:38 +0200
Subject: [PATCH 1478/1825] mbus,cib: a38x: Optimize CIB/MBUS performance

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 69624950a9499419a663d01d923a1f4e141f4486

	Update configurations for the CIB and MBUS units
	This update should optimize GbE units performance

Change-Id: I5e72431b8f1fa55d348fd7e4c037cf80bbb7ca75
Signed-off-by: Nadav Haklai <nadavh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5965
Reviewed-by: Shadi Ammouri <shadi@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6256
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada38x/core.c |   26 ++++++++++++++++++++++++++
 1 files changed, 26 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-armada38x/core.c b/arch/arm/mach-armada38x/core.c
index 4f27bc5..461e853 100644
--- a/arch/arm/mach-armada38x/core.c
+++ b/arch/arm/mach-armada38x/core.c
@@ -217,6 +217,31 @@ static int __init nfcConfig_setup(char *s)
 
 __setup("nfcConfig=", nfcConfig_setup);
 
+static void __init a38x_init_cib_mbus_optimizations(void)
+{
+	void __iomem *addr;
+	u32 val;
+
+	addr = (void __iomem *)INTER_REGS_VIRT_BASE;
+
+	/* CIB Read Buffer Select Register - Speed up GbEs through unique allocation to RdBuff 1 */
+	__raw_writel(0x88, addr + CIB_READ_BUFFER_SELECT_REG);
+
+	/* MBUS Units Priority Control Register - Prioritize GbEs DRAM access */
+	__raw_writel(0xC0C0, addr + MBUS_UNITS_PRIORITY_CONTROL_REG);
+
+	/* MBUS Units Prefetch Control Register - Pre-fetch enable for all IO masters */
+	__raw_writel(0xC6F8, addr + MBUS_UNITS_PREFETCH_CONTROL_REG);
+
+	/* CIB Control and Configurations Register - Enable cut-through for reduced latency and disable retry */
+	val = __raw_readl(addr + CIB_CTRL_CONFIG_REG);
+	val |= (1 << 5) | (1 << 6);
+	__raw_writel(val, addr + CIB_CTRL_CONFIG_REG);
+
+	/* SDRAM Interface MBUS Control (Low) Register */
+	__raw_writel(0X76543230, addr + SDRAM_INTERFACE_MBUS_CTRL_REG);
+}
+
 static void __init a38x_init_cpu_mbus(void)
 {
 	void __iomem *addr;
@@ -1290,6 +1315,7 @@ static void __init a38x_board_init(void)
 	if (mvCtrlEnvInit())
 		pr_err("%s: Error: ctrlEnv init failed.\n", __func__);
 
+	a38x_init_cib_mbus_optimizations();
 	a38x_init_cpu_mbus();
 	a38x_init_l2x0_cache();
 
-- 
1.7.5.4

