From 728707db07e29ce69c0d76d9ffad94ffc7ccb547 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Wed, 30 Apr 2014 19:25:20 +0300
Subject: [PATCH 1622/1825] a38x: add initial support for DB-AP-68XX

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit f42dfa7a005aff730724822fe26d959355c01aca

	- Added new board structures: DB_AP_68XX_ID
	- Added new DDR and SerDes topology
	- Enable UART-1 MPP's for A38x boards
	- Set UART-1 as master for DB-AP boards
	- Add global flag to init the TWSI once in the bin header

Change-Id: I497168462fcb68c2bef1392877db382e951f4c11
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/7780
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../armada_38x_family/boardEnv/mvBoardEnvLib.c     |   28 +++++-
 .../armada_38x_family/boardEnv/mvBoardEnvLib.h     |   17 ++--
 .../armada_38x_family/boardEnv/mvBoardEnvSpec.c    |  114 ++++++++++++++++++--
 .../armada_38x_family/boardEnv/mvBoardEnvSpec.h    |   25 ++++-
 4 files changed, 164 insertions(+), 20 deletions(-)

diff --git a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c
index 3dce703..03927a4 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c
@@ -1971,7 +1971,8 @@ MV_U32 mvBoardIdGet(MV_VOID)
 		gBoardId = ARMADA_38x_CUSTOMER_BOARD_ID1;
 	#endif
 #else
-	/* For Marvell Boards: Set generic board struct pointer to use S@R TWSI address, and read board ID */
+	/* For Marvell Boards: Temporarily set generic board struct pointer to
+	   use S@R TWSI address, and read board ID */
 	board = marvellBoardInfoTbl[mvBoardIdIndexGet(DB_68XX_ID)];
 	MV_U8 readValue;
 	if (mvBoardTwsiGet(BOARD_DEV_TWSI_SATR, 0, 0, &readValue) != MV_OK) {
@@ -1988,7 +1989,6 @@ MV_U32 mvBoardIdGet(MV_VOID)
 		return MV_INVALID_BOARD_ID;
 	}
 #endif
-
 	return gBoardId;
 }
 
@@ -2666,3 +2666,27 @@ MV_STATUS mvBoardIoExpanderSet(MV_U8 addr, MV_U8 offs, MV_U8 val)
 	}
 	return MV_ERROR;
 }
+
+/*******************************************************************************
+* mvBoardUartPortGet
+*
+* DESCRIPTION:
+*       Return the UART port
+*
+* INPUT:
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       return 1 if detect DB-AP-68xx board
+*
+*******************************************************************************/
+
+MV_U32 mvBoardUartPortGet()
+{
+	if (mvBoardIdGet() != DB_AP_68XX_ID)
+		return whoAmI();
+
+	return (whoAmI() == 0 ? 1 : 0); /* CPU0 uses UART1 on DB-AP */
+}
diff --git a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.h
index 8779850..b5c0125 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.h
@@ -387,14 +387,14 @@ typedef struct _boardInfo {
 
 /* {{MV_CONFIG_TYPE_ID ConfigID, twsi-ID,  Offset, ID,  isActiveForBoard[]}} */
 #define MV_BOARD_CONFIG_INFO { \
-{ MV_CONFIG_MII,		0x1,	0,	 0x4,	{ 0, 1, 0} }, \
-{ MV_CONFIG_SLIC_TDM_DEVICE,	0x0,	0,	 0x1,	{ 0, 1, 0} }, \
-{ MV_CONFIG_I2S_DEVICE,		0x1,	0,	 0x3,	{ 0, 1, 0} }, \
-{ MV_CONFIG_SPDIF_DEVICE,	0x1,	0,	 0x2,	{ 0, 1, 0} }, \
-{ MV_CONFIG_NOR,		0x4,	0,	 0xF,	{ 0, 1, 0} }, \
-{ MV_CONFIG_NAND,		0x4,	0,	 0x1,	{ 0, 1, 0} }, \
-{ MV_CONFIG_SDIO,		0x4,	0,	 0x2,	{ 0, 1, 0} }, \
-{ MV_CONFIG_SGMII,		0x2,	0,	 0xF,	{ 0, 1, 0} }, \
+{ MV_CONFIG_MII,		0x1,	0,	 0x4,	{ 0, 1, 0, 0} }, \
+{ MV_CONFIG_SLIC_TDM_DEVICE,	0x0,	0,	 0x1,	{ 0, 1, 0, 0} }, \
+{ MV_CONFIG_I2S_DEVICE,		0x1,	0,	 0x3,	{ 0, 1, 0, 0} }, \
+{ MV_CONFIG_SPDIF_DEVICE,	0x1,	0,	 0x2,	{ 0, 1, 0, 0} }, \
+{ MV_CONFIG_NOR,		0x4,	0,	 0xF,	{ 0, 1, 0, 0} }, \
+{ MV_CONFIG_NAND,		0x4,	0,	 0x1,	{ 0, 1, 0, 0} }, \
+{ MV_CONFIG_SDIO,		0x4,	0,	 0x2,	{ 0, 1, 0, 0} }, \
+{ MV_CONFIG_SGMII,		0x2,	0,	 0xF,	{ 0, 1, 0, 0} }, \
 };
 struct _mvBoardMppModule {
 	MV_U32 group;
@@ -541,6 +541,7 @@ MV_U32 mvBoardSatRRead(MV_SATR_TYPE_ID satrField);
 MV_STATUS mvBoardSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_U8 val);
 MV_STATUS mvBoardIoExpanderGet(MV_U8 addr, MV_U8 offs, MV_U8 *pVal);
 MV_STATUS mvBoardIoExpanderSet(MV_U8 addr, MV_U8 offs, MV_U8 val);
+MV_U32 mvBoardUartPortGet(MV_VOID);
 int mvBoardNorFlashConnect(void);
 
 /*						bit    TWSI           Reg	board	*/
diff --git a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.c
index be23bca..cb2d67f 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.c
@@ -250,14 +250,6 @@ MV_DEV_CS_INFO db88f68xxInfoBoardDeCsInfo[] = {
 	{ SPI0_CS0,	N_A, BOARD_DEV_SPI_FLASH,	8,	8 } /* SPI DEV */
 #endif
 };
-/*
-MV_BOARD_MPP_TYPE_INFO db88f68XXInfoBoardModTypeInfo[] = {
-	{
-		.externalModule = MV_BOARD_NONE,
-		.ModuleMpp = 0,
-	}
-};
-*/
 
 MV_BOARD_TDM_INFO db88f68xxTdm880[] = { {0} };
 
@@ -500,9 +492,113 @@ MV_BOARD_INFO rdWAP88f68XX_board_info = {
 	.boardOptionsConfig		= MV_CONFIG_NO_MODULE
 };
 
+/*******************************************************************************
+* A380 DB-AP-88F6660 board */
+/*******************************************************************************/
+#define DB_AP_88F68XX_BOARD_NAND_READ_PARAMS       0x000C0282
+#define DB_AP_88F68XX_BOARD_NAND_WRITE_PARAMS      0x00010305
+/*NAND care support for small page chips*/
+#define DB_AP_88F68XX_BOARD_NAND_CONTROL           0x01c00543
+
+MV_BOARD_MPP_INFO dbAP88f68xxInfoBoardMppConfigValue[] = {
+	{ {
+		  DB_AP_88F68XX_MPP0_7,
+		  DB_AP_88F68XX_MPP8_15,
+		  DB_AP_88F68XX_MPP16_23,
+		  DB_AP_88F68XX_MPP24_31,
+		  DB_AP_88F68XX_MPP32_39,
+		  DB_AP_88F68XX_MPP40_47,
+		  DB_AP_88F68XX_MPP48_55,
+		  DB_AP_88F68XX_MPP56_63
+	  } }
+};
+
+MV_BOARD_TWSI_INFO dbAP88f68xxInfoBoardTwsiDev[] = {
+	/* {{devClass,          devClassId, twsiDevAddr, twsiDevAddrType, moreThen256}} */
+	{ BOARD_DEV_TWSI_SATR,          0,      0x50,      ADDR7_BIT, MV_TRUE},  /* read only for HW configuration */
+	{ BOARD_DEV_TWSI_SATR,          1,      0x4c,      ADDR7_BIT, MV_FALSE},
+	{ BOARD_DEV_TWSI_SATR,          2,      0x4d,      ADDR7_BIT, MV_FALSE},
+	{ BOARD_DEV_TWSI_SATR,          3,      0x4e,      ADDR7_BIT, MV_FALSE},
+	{ BOARD_DEV_TWSI_SATR,          4,      0x21,      ADDR7_BIT, MV_FALSE},
+	{ BOARD_TWSI_MODULE_DETECT,     0,      0x20,      ADDR7_BIT, MV_FALSE},   /* modules */
+	{ BOARD_TWSI_MODULE_DETECT,     1,      0x23,      ADDR7_BIT, MV_FALSE},
+	{ BOARD_TWSI_MODULE_DETECT,     2,      0x24,      ADDR7_BIT, MV_FALSE},
+	{ BOARD_TWSI_MODULE_DETECT,     3,      0x25,      ADDR7_BIT, MV_FALSE},
+	{ BOARD_TWSI_MODULE_DETECT,     4,      0x26,      ADDR7_BIT, MV_FALSE},
+	{ BOARD_TWSI_MODULE_DETECT,     5,      0x27,      ADDR7_BIT, MV_FALSE},
+};
+
+MV_BOARD_MAC_INFO dbAP88f68xxInfoBoardMacInfo[] = {
+	/* {{MV_BOARD_MAC_SPEED boardMacSpeed, MV_8 boardEthSmiAddr}} */
+	{ BOARD_MAC_SPEED_AUTO, 0x1},
+	{ BOARD_MAC_SPEED_AUTO, 0x2},
+	{ BOARD_MAC_SPEED_AUTO, 0x0},
+};
+
+MV_DEV_CS_INFO dbAP88f68xxInfoBoardDeCsInfo[] = {
+	/*{deviceCS, params, devType, devWidth, busWidth }*/
+#ifdef MV_NAND
+	{ DEVICE_CS0,   N_A, BOARD_DEV_NAND_FLASH,      8,      8},  /* NAND DEV */
+#endif
+#if defined(MV_INCLUDE_NOR)
+	{ DEV_BOOCS,    N_A, BOARD_DEV_NOR_FLASH,       16,     16}, /* NOR DEV */
+	{ SPI0_CS1,     N_A, BOARD_DEV_SPI_FLASH,       8,      8 } /* SPI DEV */
+#else
+	{ SPI0_CS0,     N_A, BOARD_DEV_SPI_FLASH,       8,      8 } /* SPI DEV */
+#endif
+};
+
+MV_BOARD_TDM_INFO dbAP88f68xxTdm880[] = { {0} };
+
+MV_BOARD_TDM_SPI_INFO dbAP88f68xxTdmSpiInfo[] = { {1} };
+
+MV_BOARD_INFO dbAP88f68xx_board_info = {
+	.boardName              = "DB-88F6820-AP",
+	.numBoardMppTypeValue   = 0,            /* ARRSZ(db88f68XXInfoBoardModTypeInfo), */
+	.pBoardModTypeValue     = NULL,         /* db88f68XXInfoBoardModTypeInfo, */
+	.pBoardMppConfigValue   = dbAP88f68xxInfoBoardMppConfigValue,
+	.intsGppMaskLow         = 0,
+	.intsGppMaskMid         = 0,
+	.intsGppMaskHigh        = 0,
+	.numBoardDeviceIf       = ARRSZ(dbAP88f68xxInfoBoardDeCsInfo),
+	.pDevCsInfo             = dbAP88f68xxInfoBoardDeCsInfo,
+	.numBoardTwsiDev        = ARRSZ(dbAP88f68xxInfoBoardTwsiDev),
+	.pBoardTwsiDev          = dbAP88f68xxInfoBoardTwsiDev,
+	.numBoardMacInfo        = ARRSZ(dbAP88f68xxInfoBoardMacInfo),
+	.pBoardMacInfo          = dbAP88f68xxInfoBoardMacInfo,
+	.numBoardGppInfo        = 0,
+	.pBoardGppInfo          = 0,
+	.activeLedsNumber       = 0,
+	.pLedGppPin             = NULL,
+	.ledsPolarity           = 0,	/* PMU Power */
+	.pmuPwrUpPolarity       = 0,
+	.pmuPwrUpDelay          = 80000,	/* GPP values */
+	.gppOutEnValLow         = DB_AP_88F68XX_GPP_OUT_ENA_LOW,
+	.gppOutEnValMid         = DB_AP_88F68XX_GPP_OUT_ENA_MID,
+	.gppOutEnValHigh        = DB_AP_88F68XX_GPP_OUT_ENA_HIGH,
+	.gppOutValLow           = DB_AP_88F68XX_GPP_OUT_VAL_LOW,
+	.gppOutValMid           = DB_AP_88F68XX_GPP_OUT_VAL_MID,
+	.gppOutValHigh          = DB_AP_88F68XX_GPP_OUT_VAL_HIGH,
+	.gppPolarityValLow      = DB_AP_88F68XX_GPP_POL_LOW,
+	.gppPolarityValMid      = DB_AP_88F68XX_GPP_POL_MID,
+	.gppPolarityValHigh     = DB_AP_88F68XX_GPP_POL_HIGH,
+
+	/* TDM */
+	.numBoardTdmInfo                = {1},
+	.pBoardTdmInt2CsInfo            = {dbAP88f68xxTdm880},
+	.boardTdmInfoIndex              = 0,
+	.pBoardSpecInit                 = NULL,
+
+	/* Enable modules auto-detection. */
+	.configAutoDetect               = MV_FALSE,
+	.numIoExp                       = 0,
+	.pIoExp                         = NULL,
+	.boardOptionsConfig             = MV_CONFIG_NO_MODULE
+};
 
 MV_BOARD_INFO *marvellBoardInfoTbl[] = {
 	&rdNas88f68XX_board_info,
 	&db88f68xx_board_info,
-	&rdWAP88f68XX_board_info
+	&rdWAP88f68XX_board_info,
+	&dbAP88f68xx_board_info
 };
diff --git a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.h
index 99cd909..0c54c67 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.h
@@ -84,7 +84,8 @@
 #define RD_NAS_68XX_ID			(MARVELL_BOARD_ID_BASE + 0)
 #define DB_68XX_ID			(MARVELL_BOARD_ID_BASE + 1)
 #define RD_AP_68XX_ID			(MARVELL_BOARD_ID_BASE + 2)
-#define MV_MAX_MARVELL_BOARD_ID		(MARVELL_BOARD_ID_BASE + 3)
+#define DB_AP_68XX_ID			(MARVELL_BOARD_ID_BASE + 3)
+#define MV_MAX_MARVELL_BOARD_ID		(MARVELL_BOARD_ID_BASE + 4)
 #define MV_MARVELL_BOARD_NUM		(MV_MAX_MARVELL_BOARD_ID - MARVELL_BOARD_ID_BASE)
 
 #define MV_INVALID_BOARD_ID		0xFFFFFFFF
@@ -219,6 +220,28 @@
 #define RD_88F68XX_GPP_POL_LOW		0x0
 #define RD_88F68XX_GPP_POL_MID		0x0
 
+/*******************************************************************************
+* A380 DB-AP-68xx board
+*******************************************************************************/
+#define DB_AP_88F68XX_MPP0_7            0x11111111
+#define DB_AP_88F68XX_MPP8_15           0x11111111
+#define DB_AP_88F68XX_MPP16_23          0x55066011
+#define DB_AP_88F68XX_MPP24_31          0x05050050
+#define DB_AP_88F68XX_MPP32_39          0x05055555
+#define DB_AP_88F68XX_MPP40_47          0x01100565
+#define DB_AP_88F68XX_MPP48_55          0x00000000
+#define DB_AP_88F68XX_MPP56_63          0x00004444
+
+#define DB_AP_88F68XX_GPP_OUT_ENA_LOW	0xFFFFFFFF
+#define DB_AP_88F68XX_GPP_OUT_ENA_MID	(~(0x0E))
+#define DB_AP_88F68XX_GPP_OUT_ENA_HIGH	(~(BIT1))
+#define DB_AP_88F68XX_GPP_OUT_VAL_LOW	0x0
+#define DB_AP_88F68XX_GPP_OUT_VAL_MID	0x0
+#define DB_AP_88F68XX_GPP_OUT_VAL_HIGH	0x0
+#define DB_AP_88F68XX_GPP_POL_LOW	0x0
+#define DB_AP_88F68XX_GPP_POL_MID	0x0
+#define DB_AP_88F68XX_GPP_POL_HIGH	0x0
+
 #endif  /* MV_ASMLANGUAGE */
 
 #endif  /* __INCmvBoardEnvSpech */
-- 
1.7.5.4

