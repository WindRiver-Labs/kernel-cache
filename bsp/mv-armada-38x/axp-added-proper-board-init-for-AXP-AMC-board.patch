From b7eb4a45b5c46dffd8e60698c4e6fadb08e16c83 Mon Sep 17 00:00:00 2001
From: Igor Patrik <igorp@marvell.com>
Date: Tue, 16 Jul 2013 12:57:42 +0200
Subject: [PATCH 0848/1825] axp: added proper board init for AXP-AMC board

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit deb99e62df7d7cc925e4c60fb9fabe210adef4e2

	This patch also fix functionality of eth2(egiga3) in linux.

Change-Id: I2adb8f381332d2d66932a3a3766f83d7898c0ff2
Signed-off-by: Igor Patrik <igorp@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2667
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armadaxp/core.c |  132 ++++++++++++++++++++++++++++++++++++++++-
 1 files changed, 131 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-armadaxp/core.c b/arch/arm/mach-armadaxp/core.c
index c873ff0..20d163c 100644
--- a/arch/arm/mach-armadaxp/core.c
+++ b/arch/arm/mach-armadaxp/core.c
@@ -1901,13 +1901,143 @@ MACHINE_START(ARMADA_XP_GP, "Marvell Armada XP GP Board")
 #endif
 MACHINE_END
 
+/*****************************************************************************
+ * AMC BOARD
+ ****************************************************************************/
+static void __init axp_amc_init(void)
+{
+#ifdef CONFIG_MV_AMP_ENABLE
+	/* Init Resource sharing */
+	if (mvUnitMapIsRsrcLimited() == MV_FALSE)
+		mvUnitMapSetAllMine();
+#endif
+
+	/* Call Aurora/cpu special configurations */
+	cpu_fabric_common_init();
+
+	/* Select appropriate Board ID for Machine */
+	gBoardId = DB_78X60_AMC_ID;
+
+	/* init the Board environment */
+	mvBoardEnvInit();
+
+	/* init the controller environment */
+	if (mvCtrlEnvInit()) {
+		printk(KERN_ERR "Controller env initialization failed.\n");
+		return;
+	}
+
+	armadaxp_setup_cpu_mbus();
+
+	/* Init the CPU windows setting and the access protection windows. */
+#ifdef CONFIG_MV_AMP_ENABLE
+	if (mvAmpInitCpuIf()) {
+#else
+	if (mvCpuIfInit(mv_sys_map())) {
+#endif
+		printk(KERN_ERR "Cpu Interface initialization failed.\n");
+		return;
+	}
+
+	/* Init Tclk & SysClk */
+	mvTclk = mvBoardTclkGet();
+	mvSysclk = mvBoardSysClkGet();
+
+	elf_hwcap &= ~HWCAP_JAVA;
+
+#ifndef CONFIG_MV_UART_PORT
+	serial_initialize(0);
+#else
+	serial_initialize(CONFIG_MV_UART_PORT);
+#endif
+
+	/* At this point, the CPU windows are configured according to default
+	   definitions in mvSysHwConfig.h and cpuAddrWinMap table in mvCpuIf.c.
+	   Now it's time to change defaults for each platform.         */
+
+	/* mvCpuIfAddDecShow();*/
+
+	print_board_info();
+
+	/* GPIO */
+	mv_gpio_init();
+
+	/* RTC */
+	rtc_init();
+
+#ifdef CONFIG_MV_INCLUDE_SPI
+	/* SPI */
+	if (mvUnitMapIsMine(SPI) == MV_TRUE)
+		mvSysSpiInit(0, _16M);
+#endif
+
+	/* ETH-PHY */
+	mvSysEthPhyInit();
+
+	/* Sata */
+#ifdef CONFIG_SATA_MV
+	armadaxp_sata_init(&dbdsmp_sata_data);
+#endif
+#ifdef CONFIG_MTD_NAND_NFC
+	/* NAND */
+	axp_db_nfc_init();
+#endif
+	/* HWMON */
+	armadaxp_hwmon_init();
+
+	/* XOR */
+#ifdef XOR0_ENABLE
+	armadaxp_xor0_init();
+#endif
+	armadaxp_xor1_init();
+
+	/* I2C */
+	armadaxp_i2c0_init();
+
+#ifdef CONFIG_FB_DOVE
+	if ((lcd0_enable == 1) && (lcd_panel == 0))
+		armadaxp_i2c1_init();
+#endif
+	/* SDIO */
+#if defined(CONFIG_MV_INCLUDE_SDIO)
+	armadaxp_sdio_init();
+#endif
+
+#ifdef CONFIG_MV_ETHERNET
+	/* Ethernet */
+	eth_init();
+#endif
+
+#ifdef CONFIG_MV_IPC_NET
+	platform_device_register(&mv_ipc_net);
+#endif
+
+#ifdef CONFIG_FB_DOVE
+	if (mvUnitMapIsMine(LCD) == MV_TRUE) {
+		kw_lcd0_dmi.dram = &armadaxp_mbus_dram_info;
+		if (lcd_panel) {
+			kw_lcd0_dmi.lvds_info.enabled = 1;
+			kw_lcd0_dmi.fixed_full_div = 1;
+			kw_lcd0_dmi.full_div_val = 7;
+			/* kw_lcd0_dmi.lcd_ref_clk = 27000000; */
+			printk(KERN_INFO "LCD Panel enabled.\n");
+		}
+		clcd_platform_init(&kw_lcd0_dmi, &kw_lcd0_vid_dmi,
+						&dsmp_backlight_data);
+	}
+#endif
+
+	return;
+}
+
+
 MACHINE_START(ARMADA_XP_AMC, "Marvell Armada XP AMC Board")
 	/* MAINTAINER("MARVELL") */
 	.atag_offset	= 0x00000100,
 	.map_io		= axp_map_io,
 	.init_irq	= axp_init_irq,
 	.timer		= &axp_timer,
-	.init_machine	= axp_gp_init,
+	.init_machine	= axp_amc_init,
 #ifdef CONFIG_FB_DOVE
 	/* reserve memory for LCD */
 	.fixup		= axp_tag_fixup_mem32,
-- 
1.7.5.4

