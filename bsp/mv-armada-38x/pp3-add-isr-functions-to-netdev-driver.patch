From 9899060337299b5d924266902a4a7e3c6c57b2cb Mon Sep 17 00:00:00 2001
From: Uri Eliyahu <uriel@marvell.com>
Date: Wed, 29 Jan 2014 21:32:09 +0200
Subject: [PATCH 1324/1825] pp3: add isr functions to netdev driver

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 99f443b307ecae00ef6124b39084ab64169b1d4a

Change-Id: I59a30f463fc695724f155727e3e2aab008c8686a
Signed-off-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5377
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../net/ethernet/marvell/pp3/net_dev/mv_netdev.c   |  102 +++++++++++++++++++-
 .../marvell/pp3/net_dev/mv_netdev_structs.h        |   11 ++-
 2 files changed, 110 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
index f978163..f397e34 100644
--- a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
+++ b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
@@ -21,8 +21,8 @@
 
 /* global data */
 struct pp3_dev_priv **pp3_ports;
-struct pp3_group_stats **pp3_groups;
-struct pp3_cpu *pp3_cpus;
+struct pp3_group **pp3_groups;
+struct pp3_cpu **pp3_cpus;
 static int pp3_ports_num;
 static int pp3_initialized;
 
@@ -225,6 +225,104 @@ static void __exit mv_pp3_cleanup_module(void)
 }
 module_exit(mv_pp3_cleanup_module);
 
+/****************************************************************
+ * mv_pp3_isr							*
+ *	rx events , group interrupt handle			*
+ ***************************************************************/
+irqreturn_t mv_pp3_isr(int irq, int group_id)
+{
+	int cpu = smp_processor_id();
+	struct pp3_group *group = &pp3_groups[cpu][group_id];
+	struct napi_struct *napi = group->napi;
+
+	STAT_INFO(group->stats.irq++);
+
+	/* TODO: interrupts Mask */
+
+	/* Verify that the device not already on the polling list */
+	if (napi_schedule_prep(napi)) {
+		/* schedule the work (rx+txdone+link) out of interrupt contxet */
+		__napi_schedule(napi);
+	} else {
+		STAT_INFO(group->stats.irq_err++);
+	}
+
+	/* TODO: interrupts unMask */
+
+	return IRQ_HANDLED;
+}
+
+/****************************************************************
+ * mv_pp3_poll							*
+ *	napi func - call to mv_pp3_rx for group's rxqs		*
+ ***************************************************************/
+int mv_pp3_poll(struct napi_struct *napi, int budget)
+{
+	int rx_done = 0;
+	struct pp3_dev_priv *priv = MV_PP3_PRIV(napi->dev);
+	struct pp3_group *group = priv->groups[smp_processor_id()];
+
+	if (!test_bit(MV_ETH_F_STARTED_BIT, &(priv->flags))) {
+		napi_complete(napi);
+		return rx_done;
+	}
+
+
+	STAT_INFO(group->stats.rx_poll++);
+
+	/* TODO */
+
+
+	while (budget > 0 /* && group rxqs are not empty */) {
+
+		/* TODO
+			select rx_queue
+			call to mv_pp3_rx()
+			update counters and budget
+		*/
+	}
+
+	if (budget > 0)
+		napi_complete(napi);
+
+
+	return rx_done;
+}
+
+/****************************************************************
+ * mv_pp3_linux_pool_isr					*
+ *	linux poll full interrupt handler			*
+ ***************************************************************/
+irqreturn_t mv_pp3_linux_pool_isr(int irq, int group_id)
+{
+	int cpu = smp_processor_id();
+	struct pp3_cpu *cpu_ctrl = pp3_cpus[cpu];
+
+	STAT_INFO(cpu_ctrl->stats.lnx_pool_irq++);
+
+	/* TODO: interrupts Mask */
+
+	tasklet_schedule(&cpu_ctrl->bm_msg_tasklet);
+
+	/* TODO: interrupts UnMask */
+
+	return IRQ_HANDLED;
+
+}
+
+void mv_pp3_bm_msg_tasklet(unsigned long data)
+{
+	/* TODO
+		while (pool is not empty)
+		1 - read cfh from bm_msg_queue
+		2 - get pool ID from cfh
+		3 - get buffer ptr from cfh
+		4 - if pool ID is linux_pool_tx
+			free buffer
+		    else
+			use callback function, send buffer ptr to application
+	*/
+}
 
 MODULE_DESCRIPTION("Marvell PPv3 Network Driver - www.marvell.com");
 MODULE_AUTHOR("Dmitri Epshtein <dima@marvell.com>");
diff --git a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev_structs.h b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev_structs.h
index 5829d7e..2fc7199 100644
--- a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev_structs.h
+++ b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev_structs.h
@@ -37,7 +37,7 @@ disclaimer.
 struct pp3_dev_priv {
 	int			index;
 	struct mv_pp3_port_data *plat_data;
-	struct pp3_group	*group_ctrl[CONFIG_NR_CPUS];
+	struct pp3_group	*groups[CONFIG_NR_CPUS];
 	struct net_device	*dev;
 	unsigned long		flags;
 	unsigned char		emac_map;
@@ -73,6 +73,7 @@ struct pp3_group_stats {
 	unsigned int rx_err;
 	unsigned int rx_netif;
 	unsigned int rx_drop;
+	unsigned int rx_poll;
 };
 
 struct pp3_group {
@@ -89,6 +90,11 @@ struct pp3_group {
 	struct	pp3_group_stats	stats;
 };
 
+struct pp3_cpu_stats {
+	unsigned int lnx_pool_irq;
+	unsigned int lnx_pool_irq_err;
+};
+
 struct pp3_cpu {
 	int	cpu;
 	int	frames_num;
@@ -101,6 +107,9 @@ struct pp3_cpu {
 	struct	pp3_bm_pool	*tx_linux_pool;
 	struct	pp3_queue	*bm_msg_queue;
 	struct	pp3_queue	*fw_msg_queue;
+	struct	tasklet_struct	bm_msg_tasklet;
+	struct	tasklet_struct	fw_msg_tasklet;
+	struct	pp3_cpu_stats	stats;
 };
 
 struct pp3_xq_stats {
-- 
1.7.5.4

