From efcc8fe289131e67e15dd7be3c8051c14ea68faf Mon Sep 17 00:00:00 2001
From: Igor Patrik <igorp@marvell.com>
Date: Thu, 4 Jul 2013 13:34:27 +0200
Subject: [PATCH 0767/1825] neta: Prepare for new gateway driver (MUX)

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 3a75860102758e0a68e5119ccb815e56c070d8b5

	Improve mvNetaMaxCheck() function - API changed
	to fit with fixes in 3.2

Change-Id: I3ba4b737ec682047e416c6b69a20e2cf77e4d924
Signed-off-by: Igor Patrik <igorp@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2426
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_neta/bm/mv_eth_bm.c          |    4 ++--
 .../mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c     |    6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/bm/mv_eth_bm.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/bm/mv_eth_bm.c
index 35efcab..88ca984 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/bm/mv_eth_bm.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/bm/mv_eth_bm.c
@@ -46,7 +46,7 @@ static MV_ETH_BM_CONFIG mv_eth_bm_config;
 
 int mv_eth_bm_config_pkt_size_get(int pool)
 {
-	if (mvNetaMaxCheck(pool, MV_BM_POOLS))
+	if (mvNetaMaxCheck(pool, MV_BM_POOLS, "bm_pool"))
 		return -EINVAL;
 
 	return mv_eth_bm_config.pool_pkt_size[pool];
@@ -54,7 +54,7 @@ int mv_eth_bm_config_pkt_size_get(int pool)
 
 int mv_eth_bm_config_pkt_size_set(int pool, int pkt_size)
 {
-	if (mvNetaMaxCheck(pool, MV_BM_POOLS))
+	if (mvNetaMaxCheck(pool, MV_BM_POOLS, "bm_pool"))
 		return -EINVAL;
 
 	mv_eth_bm_config.pool_pkt_size[pool] = pkt_size;
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
index 29c5327..4b5e67f 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
@@ -524,7 +524,7 @@ int mv_eth_ctrl_pool_size_set(int pool, int pkt_size)
 	struct bm_pool *ppool;
 	struct eth_port *pp;
 
-	if (mvNetaMaxCheck(pool, MV_ETH_BM_POOLS))
+	if (mvNetaMaxCheck(pool, MV_ETH_BM_POOLS, "bm_pool"))
 		return -EINVAL;
 
 	ppool = &mv_eth_pool[pool];
@@ -801,7 +801,7 @@ int mv_eth_ctrl_txq_cpu_def(int port, int txp, int txq, int cpu)
 	mv_eth_ctrl_txq_cpu_own(port, pp->txp, cpuCtrl->txq, 0, cpu);
 
 	if (txq != -1) {
-		if (mvNetaMaxCheck(txq, CONFIG_MV_ETH_TXQ))
+		if (mvNetaMaxCheck(txq, CONFIG_MV_ETH_TXQ, "txq"))
 			return -EINVAL;
 
 		/* Increment CPU ownership for new txq */
@@ -5045,7 +5045,7 @@ int mv_eth_txq_tos_map_set(int port, int txq, int cpu, unsigned int tos)
 		return 0;
 	}
 
-	if (mvNetaMaxCheck(txq, CONFIG_MV_ETH_TXQ))
+	if (mvNetaMaxCheck(txq, CONFIG_MV_ETH_TXQ, "txq"))
 		return -EINVAL;
 
 	/* Check that new txq can be allocated for cpu */
-- 
1.7.5.4

