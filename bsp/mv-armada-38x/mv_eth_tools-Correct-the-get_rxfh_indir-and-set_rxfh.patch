From 9ed0afc153714c5f24f724a93c26b5dec5b20158 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Sat, 11 Oct 2014 10:08:11 +0800
Subject: [PATCH 1818/1825] mv_eth_tools: Correct the get_rxfh_indir and
 set_rxfh_indir to match the new API

Since the upstream commit 7850f63f1 add a new ethtool operation
(get_rxfh_indir_size) to get the indirectional table size. Use this
to validate the user buffer size before calling get_rxfh_indir
or set_rxfh_indir. So adjust mv_eth_tools to match the new API.

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c   |   25 +++++++++++--------
 .../mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c     |    2 +
 2 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c
index 3d01ffb..7a834ee 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c
@@ -689,32 +689,34 @@ int mv_eth_tool_get_stats_count(struct net_device *netdev)
 }
 
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 35)
-static int mv_eth_tool_get_rxfh_indir(struct net_device *netdev,
-					struct ethtool_rxfh_indir *indir)
+static u32 mv_eth_tool_get_rxfh_indir_size(struct net_device *netdev)
+{
+	struct eth_port         *priv = MV_ETH_PRIV(netdev);
+
+	return ARRAY_SIZE(priv->rx_indir_table);
+}
+
+static int mv_eth_tool_get_rxfh_indir(struct net_device *netdev, u32 *indir)
 {
 #if defined(MV_ETH_PNC_LB) && defined(CONFIG_MV_ETH_PNC)
 	struct eth_port 	*priv = MV_ETH_PRIV(netdev);
-	size_t copy_size =
-		min_t(size_t, indir->size, ARRAY_SIZE(priv->rx_indir_table));
 
-	indir->size = ARRAY_SIZE(priv->rx_indir_table);
+	memcpy(indir, priv->rx_indir_table, sizeof(priv->rx_indir_table));
 
-	memcpy(indir->ring_index, priv->rx_indir_table,
-	       copy_size * sizeof(indir->ring_index[0]));
 	return 0;
 #else
 	return -EOPNOTSUPP;
 #endif
 }
 
-static int mv_eth_tool_set_rxfh_indir(struct net_device *netdev,
-				   const struct ethtool_rxfh_indir *indir)
+static int mv_eth_tool_set_rxfh_indir(struct net_device *netdev, const u32 *indir)
 {
 #if defined(MV_ETH_PNC_LB) && defined(CONFIG_MV_ETH_PNC)
 	int i;
 	struct eth_port 	*priv = MV_ETH_PRIV(netdev);
-	for (i = 0; i < indir->size; i++) {
-		priv->rx_indir_table[i] = indir->ring_index[i];
+
+	memcpy(priv->rx_indir_table, indir, sizeof(priv->rx_indir_table));
+	for (i = 0; i < ARRAY_SIZE(priv->rx_indir_table); i++) {
 		mvPncLbRxqSet(i, priv->rx_indir_table[i]);
 	}
 	return 0;
@@ -832,6 +834,7 @@ const struct ethtool_ops mv_eth_tool_ops = {
 #endif
 
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 35)
+	.get_rxfh_indir_size			= mv_eth_tool_get_rxfh_indir_size,
 	.get_rxfh_indir				= mv_eth_tool_get_rxfh_indir,
 	.set_rxfh_indir				= mv_eth_tool_set_rxfh_indir,
 #endif
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
index 651ab5c..98c47bc 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_netdev.c
@@ -2104,7 +2104,9 @@ out:
 #ifndef CONFIG_MV_ETH_TXDONE_ISR
 	if (txq_ctrl) {
 		if (txq_ctrl->txq_count >= mv_ctrl_txdone) {
+#ifdef CONFIG_MV_ETH_STAT_DIST
 			u32 tx_done = mv_eth_txq_done(pp, txq_ctrl);
+#endif
 
 			STAT_DIST((tx_done < pp->dist_stats.tx_done_dist_size) ? pp->dist_stats.tx_done_dist[tx_done]++ : 0);
 
-- 
1.7.5.4

