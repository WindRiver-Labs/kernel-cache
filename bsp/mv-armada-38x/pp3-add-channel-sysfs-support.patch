From 7d22680527e805ad0446b4c1b0da178663e28333 Mon Sep 17 00:00:00 2001
From: Yelena <yelena@marvell.com>
Date: Thu, 13 Mar 2014 14:11:42 +0200
Subject: [PATCH 1469/1825] pp3: add channel sysfs support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit f5c538d72a13ed8c1e7d45f7c11590525fe756bf

Change-Id: Ie4674d2923ef9c1f54d85de50c45c8eedaae8f89
Signed-off-by: Yelena <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6395
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../net/ethernet/marvell/pp3/fw/mv_channel_if.c    |   15 ++
 .../net/ethernet/marvell/pp3/fw/mv_channel_if.h    |    3 +
 .../net/ethernet/marvell/pp3/fw/mv_channel_sysfs.c |  150 ++++++++++++++++++++
 3 files changed, 168 insertions(+), 0 deletions(-)
 create mode 100644 drivers/net/ethernet/marvell/pp3/fw/mv_channel_sysfs.c

diff --git a/drivers/net/ethernet/marvell/pp3/fw/mv_channel_if.c b/drivers/net/ethernet/marvell/pp3/fw/mv_channel_if.c
index e1c2ae5..7116052 100644
--- a/drivers/net/ethernet/marvell/pp3/fw/mv_channel_if.c
+++ b/drivers/net/ethernet/marvell/pp3/fw/mv_channel_if.c
@@ -380,3 +380,18 @@ void mv_pp3_chan_isr(struct mv_pp3_channel *chan)
 
 	return;
 }
+
+void mv_pp3_channel_show(int ch_num)
+{
+	struct mv_pp3_channel *ch_ptr = &mv_pp3_chan_ctrl[ch_num];
+
+	if (ch_ptr->rcv_func == NULL)
+		pr_info("\nChannel %d:: no callback function connected", ch_num);
+	else
+		pr_info("\nChannel %d::", ch_num);
+	pr_info("\tFrame %d, HMAC RXQ %d, HMAC TXQ %d", ch_ptr->frame, ch_ptr->hmac_rxq_num, ch_ptr->hmac_txq_num);
+	pr_info("\tBM pool %d, headroom %d", ch_ptr->bm_pool_id, ch_ptr->buf_headroom);
+	pr_info("\n");
+
+	return;
+}
diff --git a/drivers/net/ethernet/marvell/pp3/fw/mv_channel_if.h b/drivers/net/ethernet/marvell/pp3/fw/mv_channel_if.h
index 7b5adde..50df3af 100644
--- a/drivers/net/ethernet/marvell/pp3/fw/mv_channel_if.h
+++ b/drivers/net/ethernet/marvell/pp3/fw/mv_channel_if.h
@@ -137,5 +137,8 @@ Return:
 	Other	- Failure: Queue is full, etc
 */
 int mv_pp3_msg_send(int chan, void *msg, int size, int flags);
+/* sysfs related */
+void mv_pp3_channel_show(int ch_num);
+int mv_pp3_chan_sysfs_init(struct kobject *pp3_kobj);
 
 #endif /* __mvChnlIf_h__ */
diff --git a/drivers/net/ethernet/marvell/pp3/fw/mv_channel_sysfs.c b/drivers/net/ethernet/marvell/pp3/fw/mv_channel_sysfs.c
new file mode 100644
index 0000000..1446f1d
--- /dev/null
+++ b/drivers/net/ethernet/marvell/pp3/fw/mv_channel_sysfs.c
@@ -0,0 +1,150 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+#include <linux/module.h>
+#include <linux/netdevice.h>
+#include "mv_channel_if.h"
+
+static ssize_t mv_channel_help(char *b)
+{
+	int o = 0;
+
+	o += scnprintf(b+o, PAGE_SIZE-o, "\n");
+	o += scnprintf(b+o, PAGE_SIZE-o, "echo [c]         > chan_show    - Show message channel status\n");
+	o += scnprintf(b+o, PAGE_SIZE-o, "\n");
+	o += scnprintf(b+o, PAGE_SIZE-o, "parameters: [c] channel number\n");
+
+	return o;
+}
+
+static ssize_t mv_channel_show(struct device *dev,
+				struct device_attribute *attr, char *buf)
+{
+	int             off = 0;
+
+	if (!capable(CAP_NET_ADMIN))
+		return -EPERM;
+
+	off = mv_channel_help(buf);
+
+	return off;
+}
+
+static ssize_t mv_channel_store(struct device *dev,
+				struct device_attribute *attr, const char *buf, size_t len)
+{
+	const char      *name = attr->attr.name;
+	int             err;
+	unsigned int    c;
+	unsigned long   flags;
+
+	if (!capable(CAP_NET_ADMIN))
+		return -EPERM;
+
+	/* Read first 3 parameters */
+	err = c = 0;
+	sscanf(buf, "%x", &c);
+
+	if (!strcmp(name, "chan_show"))
+		mv_pp3_channel_show(c);
+	else {
+		err = 1;
+		pr_err("%s: illegal operation <%s>\n", __func__, attr->attr.name);
+	}
+
+	return err ? -EINVAL : len;
+}
+
+static DEVICE_ATTR(help, S_IRUSR, mv_channel_show, NULL);
+static DEVICE_ATTR(chan_show, S_IWUSR, NULL, mv_channel_store);
+
+
+static struct attribute *mv_attrs[] = {
+	&dev_attr_help.attr,
+	&dev_attr_chan_show.attr,
+	NULL
+};
+
+static struct attribute_group mv_chan_group = {
+	.name = "messenger",
+	.attrs = mv_attrs,
+};
+
+int mv_pp3_chan_sysfs_init(struct kobject *pp3_kobj)
+{
+	int err;
+
+	err = sysfs_create_group(pp3_kobj, &mv_chan_group);
+	if (err) {
+		pr_err("sysfs group failed %d\n", err);
+		return err;
+	}
+
+	return err;
+}
+
+int mv_pp3_chan_sysfs_exit(struct kobject *hmac_kobj)
+{
+	sysfs_remove_group(hmac_kobj, &mv_chan_group);
+	return 0;
+}
-- 
1.7.5.4

