From de3225a9e7666698ba01949af5d458595056870f Mon Sep 17 00:00:00 2001
From: Tawfik Bayouk <tawfik@marvell.com>
Date: Tue, 21 Aug 2012 17:33:24 +0300
Subject: [PATCH 0055/1825] Port in Uboot 2.0.5 changes including AMC and
 RD-NAS Support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit f70eb37e9d32652e2025adeb51dab23745dc28d7

Change-Id: Ice05c08015f2b1babc1beb7e235df2bbb07f8168
Signed-off-by: Tawfik Bayouk <tawfik@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/common/mvTypes.h              |    2 +-
 arch/arm/plat-armada/common/mvVideo.h              |    2 +-
 arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c     |  175 +++++++++++++++++++-
 arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.h     |    1 +
 arch/arm/plat-armada/mv_hal/eth/gbe/mvEthAddrDec.c |   15 +-
 arch/arm/plat-armada/mv_hal/gpp/mvGppRegs.h        |   41 +++++-
 arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h      |    2 +-
 .../plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c    |   16 ++-
 arch/arm/plat-armada/mv_hal/pex/mvPex.c            |   11 +-
 arch/arm/plat-armada/mv_hal/pex/mvPex.h            |    6 +
 arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h        |    7 +
 .../arm/plat-armada/mv_hal/sata/CoreDriver/mvOsS.h |    2 +-
 .../plat-armada/mv_hal/sata/CoreDriver/mvSata.h    |    2 +-
 arch/arm/plat-armada/mv_hal/spi/mvSpi.c            |    4 +-
 arch/arm/plat-armada/mv_hal/twsi/mvTwsi.c          |   24 ++--
 arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c     |   14 ++-
 arch/arm/plat-armada/mv_hal/xor/mvXorAddrDec.c     |    4 +
 17 files changed, 291 insertions(+), 37 deletions(-)

diff --git a/arch/arm/plat-armada/common/mvTypes.h b/arch/arm/plat-armada/common/mvTypes.h
index 18d5296..814db81 100644
--- a/arch/arm/plat-armada/common/mvTypes.h
+++ b/arch/arm/plat-armada/common/mvTypes.h
@@ -182,7 +182,7 @@ typedef enum {
 	ETH_MAC_SPEED_10M,
 	ETH_MAC_SPEED_100M,
 	ETH_MAC_SPEED_1000M,
-	ETH_MAC_SPEED_AUTO,
+	ETH_MAC_SPEED_AUTO
 
 } MV_ETH_MAC_SPEED;
 
diff --git a/arch/arm/plat-armada/common/mvVideo.h b/arch/arm/plat-armada/common/mvVideo.h
index e9918b1..d1f6e86 100644
--- a/arch/arm/plat-armada/common/mvVideo.h
+++ b/arch/arm/plat-armada/common/mvVideo.h
@@ -98,7 +98,7 @@ typedef enum mvPixFormatId {
 	MV_PIX_FORMAT_ID_RGB555 = 0x555,
 	MV_PIX_FORMAT_ID_RGB565 = 0x565,
 	MV_PIX_FORMAT_ID_YUV422 = 0x422,
-	MV_PIX_FORMAT_ID_RAW_BAYER = 0x111,
+	MV_PIX_FORMAT_ID_RAW_BAYER = 0x111
 } MV_PIX_FORMAT_ID;
 
 typedef struct mvPixelFormat {
diff --git a/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c b/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c
index 6d8695f..ae38a92 100644
--- a/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c
+++ b/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.c
@@ -1231,7 +1231,7 @@ MV_VOID mvEthInternalGEPhyBasicInit(MV_U32 ethPortNum)
 {
 }
 
-MV_VOID mvEth1540PhyBasicInit(MV_U32 ethPortNum, MV_BOOL eeeEnable)
+MV_VOID mvEth1540Y0PhyBasicInit(MV_U32 ethPortNum, MV_BOOL eeeEnable)
 {
 	MV_U16 reg;
 	MV_U16 i = ethphyHalData.phyAddr[ethPortNum];
@@ -1678,6 +1678,11 @@ MV_VOID mvEth1540PhyBasicInit(MV_U32 ethPortNum, MV_BOOL eeeEnable)
 
 	mvEthPhyRegWrite(i, 0x16, 0x0000);
 
+	/* SGMII fix*/
+	mvEthPhyRegWrite(i, 0x16, 0x12);
+	mvEthPhyRegWrite(i, 0x1b, 0x0);
+	mvEthPhyRegWrite(i, 0x16, 0x0);
+
 
 	/* Power up the phy */
 	mvEthPhyRegRead(i, ETH_PHY_CTRL_REG, &reg);
@@ -1689,6 +1694,152 @@ MV_VOID mvEth1540PhyBasicInit(MV_U32 ethPortNum, MV_BOOL eeeEnable)
 
 }
 
+MV_VOID mvEth1540A0PhyBasicInit(MV_U32 ethPortNum, MV_BOOL eeeEnable)
+{
+	int i = ethphyHalData.phyAddr[ethPortNum];
+	MV_U16 reg;
+	int startAddr, endAddr;
+
+	/* Enable QSGMII AN */
+	/* Set page to 4. */
+	mvEthPhyRegWrite(i, 0x16, 4);
+	/* Enable AN */
+	mvEthPhyRegWrite(i, 0x0, 0x1140);
+	/* Set page to 0. */
+	mvEthPhyRegWrite(i, 0x16, 0);
+
+	/* Power up the phy */
+	mvEthPhyRegRead(i, ETH_PHY_CTRL_REG, &reg);
+	reg &= ~(ETH_PHY_CTRL_POWER_DOWN_MASK);
+	mvEthPhyRegWrite(i, ETH_PHY_CTRL_REG, reg);
+
+	/* Disable Drop BadTag */
+	mvEthPhyRegWrite(i, 22, 0x0010);
+	mvEthPhyRegWrite(i, 1, 0x000B);
+	mvEthPhyRegWrite(i, 2, 0x0000);
+	mvEthPhyRegWrite(i, 3, 0x0FB4);
+	mvEthPhyRegWrite(i, 1, 0x080B);
+	mvEthPhyRegWrite(i, 2, 0x0000);
+	mvEthPhyRegWrite(i, 3, 0x0FB4);
+	mvEthPhyRegWrite(i, 1, 0x100B);
+	mvEthPhyRegWrite(i, 2, 0x0000);
+	mvEthPhyRegWrite(i, 3, 0x0FB4);
+	mvEthPhyRegWrite(i, 1, 0x180B);
+	mvEthPhyRegWrite(i, 2, 0x0000);
+	mvEthPhyRegWrite(i, 3, 0x0FB4);
+	mvEthPhyRegWrite(i, 22, 0x0000);
+	mvEthPhyRegWrite(i, 22, 0x00FA);
+	mvEthPhyRegWrite(i, 8, 0x0010);
+
+	mvEthPhyRegWrite(i, 22, 0x00FB);
+	mvEthPhyRegWrite(i, 1, 0x4099);
+	mvEthPhyRegWrite(i, 3, 0x1120);
+	mvEthPhyRegWrite(i, 11, 0x113C);
+	mvEthPhyRegWrite(i, 14, 0x8100);
+	mvEthPhyRegWrite(i, 15, 0x112A);
+
+	mvEthPhyRegWrite(i, 22, 0x00FC);
+	mvEthPhyRegWrite(i, 1, 0x20B0);
+
+	mvEthPhyRegWrite(i, 22, 0x00FF);
+	mvEthPhyRegWrite(i, 17, 0x0000);
+	mvEthPhyRegWrite(i, 16, 0x2000);
+	mvEthPhyRegWrite(i, 17, 0x4444);
+	mvEthPhyRegWrite(i, 16, 0x2140);
+	mvEthPhyRegWrite(i, 17, 0x8064);
+	mvEthPhyRegWrite(i, 16, 0x2141);
+	mvEthPhyRegWrite(i, 17, 0x0108);
+	mvEthPhyRegWrite(i, 16, 0x2144);
+	mvEthPhyRegWrite(i, 17, 0x0F16);
+	mvEthPhyRegWrite(i, 16, 0x2146);
+	mvEthPhyRegWrite(i, 17, 0x8C44);
+	mvEthPhyRegWrite(i, 16, 0x214B);
+
+	mvEthPhyRegWrite(i, 17, 0x0F90);
+	mvEthPhyRegWrite(i, 16, 0x214C);
+	mvEthPhyRegWrite(i, 17, 0xBA33);
+	mvEthPhyRegWrite(i, 16, 0x214D);
+	mvEthPhyRegWrite(i, 17, 0x39AA);
+	mvEthPhyRegWrite(i, 16, 0x214F);
+	mvEthPhyRegWrite(i, 17, 0x8433);
+	mvEthPhyRegWrite(i, 16, 0x2151);
+	mvEthPhyRegWrite(i, 17, 0x2010);
+	mvEthPhyRegWrite(i, 16, 0x2152);
+	mvEthPhyRegWrite(i, 17, 0x99EB);
+	mvEthPhyRegWrite(i, 16, 0x2153);
+	mvEthPhyRegWrite(i, 17, 0x2F3B);
+	mvEthPhyRegWrite(i, 16, 0x2154);
+	mvEthPhyRegWrite(i, 17, 0x584E);
+	mvEthPhyRegWrite(i, 16, 0x2156);
+	mvEthPhyRegWrite(i, 17, 0x1223);
+	mvEthPhyRegWrite(i, 16, 0x2158);
+	mvEthPhyRegWrite(i, 22, 0x0000);
+
+	/* Enable EEE_Auto-neg for 1000BASE-T and 100BASE-TX */
+	mvEthPhyRegWrite(i, 22, 0x0000);
+	mvEthPhyRegWrite(i, 13, 0x0007);
+	mvEthPhyRegWrite(i, 14, 0x003C);
+	mvEthPhyRegWrite(i, 13, 0x4007);
+	mvEthPhyRegWrite(i, 14, 0x0006);
+
+	/* Enable MACSec (Reg 27_2.13 = '1') */
+	mvEthPhyRegWrite(i, 22, 0x0012);
+	mvEthPhyRegRead(i, 27, &reg);
+	reg |= (1 << 13);
+	mvEthPhyRegWrite(i, 27, reg);
+
+	if (eeeEnable == MV_TRUE) {
+		/* Enable EEE Master (Legacy) Mode */
+		mvEthPhyRegWrite(i, 22, 0x0010);
+		mvEthPhyRegWrite(i, 1, 0x03c1);
+		mvEthPhyRegWrite(i, 2, 0x0001);
+		mvEthPhyRegWrite(i, 3, 0x0000);
+		mvEthPhyRegWrite(i, 1, 0x0bc1);
+		mvEthPhyRegWrite(i, 2, 0x0001);
+		mvEthPhyRegWrite(i, 3, 0x0000);
+		mvEthPhyRegWrite(i, 1, 0x13c1);
+		mvEthPhyRegWrite(i, 2, 0x0001);
+		mvEthPhyRegWrite(i, 3, 0x0000);
+		mvEthPhyRegWrite(i, 1, 0x1bc1);
+		mvEthPhyRegWrite(i, 2, 0x0001);
+		mvEthPhyRegWrite(i, 3, 0x0000);
+		mvEthPhyRegWrite(i, 22, 0x0000);
+	}
+	/* Configure LED */
+	mvEthPhyRegWrite(i, 22, 3);
+	mvEthPhyRegWrite(i, 16, 0x1111);
+
+	mvEthPhyRegWrite(i, 22, 0x0000);
+	mvEthPhyRegWrite(i, 0, 0x9140);
+
+	mvOsDelay(100);
+	/*  Sleep 3000 */
+	/* mvOsDelay(300); */
+}
+
+MV_VOID mvEth1540PhyBasicInit(MV_U32 ethPortNum, MV_BOOL eeeEnable)
+{
+	MV_U16 reg;
+	int startAddr = ethphyHalData.phyAddr[ethPortNum];
+
+	/* Reads ID2 */
+	if (mvEthPhyRegRead(startAddr, 3, &reg) != MV_OK)
+		return;
+
+
+	/* Identify PHY Revision. */
+	mvEthPhyRegWrite(startAddr, 0x16, 0xFB);
+	mvEthPhyRegRead(startAddr, 0x1F, &reg);
+	mvEthPhyRegWrite(startAddr, 0x16, 0x0);
+
+	if (reg == 0x100)
+		mvEth1540Y0PhyBasicInit(ethPortNum, eeeEnable);
+	else
+		mvEth1540A0PhyBasicInit(ethPortNum, eeeEnable);
+
+	return;
+}
+
 MV_VOID mvEth1340PhyBasicInit(void)
 {
 	int i;
@@ -1743,10 +1894,32 @@ MV_VOID mvEth1340PhyBasicInit(void)
 *******************************************************************************/
 MV_VOID mvEthE1512PhyBasicInit(MV_U32 ethPortNum)
 {
+/*
 	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x16, 0x12);
 	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x14, 0x201);
 	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x14, 0x8201);
 	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x16, 0);
+*/
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x16, 0x00FF);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x11, 0x214B);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x10, 0x2144);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x11, 0x0C28);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x10, 0x2146);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x11, 0xB233);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x10, 0x214D);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x11, 0xCC0C);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x10, 0x2159);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x16, 0x00FB);
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x07, 0xC00D);
+
+	if (ethphyHalData.isSgmii[ethPortNum]) {
+
+		mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x16, 0x0012);
+		mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x14, 0x0001);
+		mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x14, 0x8001);
+	}
+	mvEthPhyRegWrite(ethphyHalData.phyAddr[ethPortNum], 0x16, 0x0000);
+
 }
 
 
diff --git a/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.h b/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.h
index 4a3076d..864b02c 100644
--- a/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.h
+++ b/arch/arm/plat-armada/mv_hal/eth-phy/mvEthPhy.h
@@ -109,6 +109,7 @@ typedef struct {
 	MV_U32		specRegOff;		/* Board specific register offset, Valid if boardSpecInit == TRUE */
 	MV_U32		specData;  		/* Board specific data to write, Valid if boardSpecInit == TRUE */
 	MV_U32		ethPhySmiReg;		/* Ethernet unit PHY SMI register offset */
+	MV_BOOL		isSgmii[MV_ETH_MAX_PORTS];
 } MV_ETHPHY_HAL_DATA;
 
 MV_STATUS 	mvEthPhyHalInit(MV_ETHPHY_HAL_DATA *halData);
diff --git a/arch/arm/plat-armada/mv_hal/eth/gbe/mvEthAddrDec.c b/arch/arm/plat-armada/mv_hal/eth/gbe/mvEthAddrDec.c
index 92dd3d5..7348a1a 100644
--- a/arch/arm/plat-armada/mv_hal/eth/gbe/mvEthAddrDec.c
+++ b/arch/arm/plat-armada/mv_hal/eth/gbe/mvEthAddrDec.c
@@ -195,6 +195,10 @@ MV_STATUS mvEthWinWrite(MV_U32 port, MV_U32 winNum, MV_UNIT_WIN_INFO *pAddrDecWi
 	MV_U32 size, alignment;
 	MV_U32 baseReg, sizeReg;
 
+	if (!MV_IS_POWER_OF_2(pAddrDecWin->addrWin.size)) {
+		/* try to get a good size */
+		pAddrDecWin->addrWin.size = 1 << (mvLog2(pAddrDecWin->addrWin.size) + 1);
+	}
 	/* Parameter checking   */
 	if (winNum >= ETH_MAX_DECODE_WIN) {
 		mvOsPrintf("mvEthWinSet: ERR. Invalid win num %d\n", winNum);
@@ -215,12 +219,13 @@ MV_STATUS mvEthWinWrite(MV_U32 port, MV_U32 winNum, MV_UNIT_WIN_INFO *pAddrDecWi
 		return MV_ERROR;
 	}
 
-	size = pAddrDecWin->addrWin.size;
-	if (!MV_IS_POWER_OF_2(size)) {
-		mvOsPrintf("mvEthWinWrite: Error setting AUDIO window %d. " "Window size is not a power to 2.", winNum);
-		return MV_BAD_PARAM;
+	if (pAddrDecWin->addrWin.size != 0) {
+		size = pAddrDecWin->addrWin.size;
+		if (!MV_IS_POWER_OF_2(size)) {
+			mvOsPrintf("mvEthWinWrite: Error setting AUDIO window %d. " "Window size is not a power to 2.", winNum);
+			return MV_BAD_PARAM;
+		}
 	}
-
 	baseReg = (pAddrDecWin->addrWin.baseLow & ETH_WIN_BASE_MASK);
 	sizeReg = MV_REG_READ(ETH_WIN_SIZE_REG(port, winNum));
 
diff --git a/arch/arm/plat-armada/mv_hal/gpp/mvGppRegs.h b/arch/arm/plat-armada/mv_hal/gpp/mvGppRegs.h
index 6a82968..4d7ab18 100644
--- a/arch/arm/plat-armada/mv_hal/gpp/mvGppRegs.h
+++ b/arch/arm/plat-armada/mv_hal/gpp/mvGppRegs.h
@@ -104,7 +104,44 @@ extern "C" {
 #define    MV_GPP30 BIT30
 #define    MV_GPP31 BIT31
 
-	/* registers offsets */
+#define    MV_GPP32  BIT0
+#define    MV_GPP33  BIT1
+#define    MV_GPP34  BIT2
+#define    MV_GPP35  BIT3
+#define    MV_GPP36  BIT4
+#define    MV_GPP37  BIT5
+#define    MV_GPP38  BIT6
+#define    MV_GPP39  BIT7
+#define    MV_GPP40  BIT8
+#define    MV_GPP41  BIT9
+#define    MV_GPP42 BIT10
+#define    MV_GPP43 BIT11
+#define    MV_GPP44 BIT12
+#define    MV_GPP45 BIT13
+#define    MV_GPP46 BIT14
+#define    MV_GPP47 BIT15
+#define    MV_GPP48 BIT16
+#define    MV_GPP49 BIT17
+#define    MV_GPP50 BIT18
+#define    MV_GPP51 BIT19
+#define    MV_GPP52 BIT20
+#define    MV_GPP53 BIT21
+#define    MV_GPP54 BIT22
+#define    MV_GPP55 BIT23
+#define    MV_GPP56 BIT24
+#define    MV_GPP57 BIT25
+#define    MV_GPP58 BIT26
+#define    MV_GPP59 BIT27
+#define    MV_GPP60 BIT28
+#define    MV_GPP61 BIT29
+#define    MV_GPP62 BIT30
+#define    MV_GPP63 BIT31
+
+#define    MV_GPP64  BIT0
+#define    MV_GPP65  BIT1
+#define    MV_GPP66  BIT2
+
+/* registers offsets */
 
 #define GPP_DATA_OUT_REG(grp)			(MV_GPP_REGS_BASE(grp) + 0x00)
 #define GPP_DATA_OUT_REG_0			(MV_GPP_REGS_BASE_0 + 0x00)	/* Used in .S files */
@@ -118,7 +155,7 @@ extern "C" {
 
 #define GPP_FUNC_SELECT_REG			(MV_GPP_REGS_BASE(0) + 0x40)
 
-	/* Relevant for MV78XX0 */
+/* Relevant for MV78XX0 */
 #define GPP_DATA_OUT_SET_REG			(MV_GPP_REGS_BASE(0) + 0x20)
 #define GPP_DATA_OUT_CLEAR_REG			(MV_GPP_REGS_BASE(0) + 0x24)
 
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
index 3172b72..fe8afa2 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNeta.h
@@ -199,7 +199,7 @@ typedef enum {
 	MV_ETH_FC_AN_ASYM,
 	MV_ETH_FC_DISABLE,
 	MV_ETH_FC_ENABLE,
-	MV_ETH_FC_ACTIVE,
+	MV_ETH_FC_ACTIVE
 
 } MV_ETH_PORT_FC;
 
diff --git a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c
index ebd8fe1..03edf46 100644
--- a/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c
+++ b/arch/arm/plat-armada/mv_hal/neta/gbe/mvNetaAddrDec.c
@@ -170,6 +170,10 @@ MV_STATUS mvNetaWinWrite(MV_U32 port, MV_U32 winNum, MV_UNIT_WIN_INFO *pAddrDecW
 	MV_U32 size, alignment;
 	MV_U32 baseReg, sizeReg;
 
+	if (!MV_IS_POWER_OF_2(pAddrDecWin->addrWin.size)) {
+		/* try to get a good size */
+		pAddrDecWin->addrWin.size = 1 << (mvLog2(pAddrDecWin->addrWin.size) + 1);
+	}
 	/* Parameter checking   */
 	if (winNum >= ETH_MAX_DECODE_WIN) {
 		mvOsPrintf("mvNetaWinSet: ERR. Invalid win num %d\n", winNum);
@@ -190,11 +194,13 @@ MV_STATUS mvNetaWinWrite(MV_U32 port, MV_U32 winNum, MV_UNIT_WIN_INFO *pAddrDecW
 		return MV_ERROR;
 	}
 
-	size = pAddrDecWin->addrWin.size;
-	if (!MV_IS_POWER_OF_2(size)) {
-		mvOsPrintf("mvNetaWinWrite: Error setting AUDIO window %d. "
-			   "Window size is not a power to 2.", winNum);
-		return MV_BAD_PARAM;
+	if (pAddrDecWin->addrWin.size != 0) {
+		size = pAddrDecWin->addrWin.size;
+		if (!MV_IS_POWER_OF_2(size)) {
+			mvOsPrintf("mvNetaWinWrite: Error setting AUDIO window %d. "
+				"Window size is not a power to 2.", winNum);
+			return MV_BAD_PARAM;
+		}
 	}
 
 	baseReg = (pAddrDecWin->addrWin.baseLow & ETH_WIN_BASE_MASK);
diff --git a/arch/arm/plat-armada/mv_hal/pex/mvPex.c b/arch/arm/plat-armada/mv_hal/pex/mvPex.c
index 11c4579..25903bd 100644
--- a/arch/arm/plat-armada/mv_hal/pex/mvPex.c
+++ b/arch/arm/plat-armada/mv_hal/pex/mvPex.c
@@ -296,12 +296,19 @@ MV_U32 mvPexModeGet(MV_U32 pexIf, MV_PEX_MODE *pexMode)
 
 		/* If there is no link, the auto negotiation data is worthless */
 		pexMode->pexWidth = MV_PEX_WITDH_INVALID;
-	} else {
-		pexMode->pexLinkUp = MV_TRUE;
+	}
+	else { /* We have Link negotiation started */
+		if ((MV_REG_READ(PEX_DBG_STATUS_REG(pexIf))) == 0x7e)
+			pexMode->pexLinkUp = MV_TRUE;
+		else {
+			printf("Link negotiation failed ");
+			pexMode->pexLinkUp = MV_FALSE;
+		}
 
 		/* We have link. The link width is now valid */
 		pexData = MV_REG_READ(PEX_CFG_DIRECT_ACCESS(pexIf, PEX_LINK_CTRL_STAT_REG));
 		pexMode->pexWidth = ((pexData & PXLCSR_NEG_LNK_WDTH_MASK) >> PXLCSR_NEG_LNK_WDTH_OFFS);
+		pexMode->pexGen = ((pexData & PXLCSR_NEG_LNK_GEN_MASK) >> PXLCSR_NEG_LNK_GEN_OFFS);
 	}
 
 	return MV_OK;
diff --git a/arch/arm/plat-armada/mv_hal/pex/mvPex.h b/arch/arm/plat-armada/mv_hal/pex/mvPex.h
index 5a20a29..a403da5 100644
--- a/arch/arm/plat-armada/mv_hal/pex/mvPex.h
+++ b/arch/arm/plat-armada/mv_hal/pex/mvPex.h
@@ -91,6 +91,11 @@ extern "C" {
 		MV_PEX_END_POINT	/* end point device */
 	} MV_PEX_TYPE;
 
+	typedef enum _mvPexGen {
+		MV_PEX_GEN1_1 = 1,
+		MV_PEX_GEN2_0
+	} MV_PEX_GEN;
+
 	typedef enum _mvPexWidth {
 		MV_PEX_WITDH_X1 = 1,
 		MV_PEX_WITDH_X2,
@@ -104,6 +109,7 @@ extern "C" {
 		MV_PEX_TYPE pexType;
 		MV_PEX_WIDTH pexWidth;
 		MV_BOOL pexLinkUp;
+		MV_PEX_GEN pexGen;
 	} MV_PEX_MODE;
 
 	/* PEX Bar attributes */
diff --git a/arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h b/arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h
index f883d84..04266bf 100644
--- a/arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pex/mvPexRegs.h
@@ -184,6 +184,7 @@ extern "C" {
 #define PEX_TL_CTRL_REG(pexIf)				(MV_PEX_IF_REGS_BASE(pexIf) - (pexIf)*0x10000)
 #define PEX_RAM_PARITY_CTRL_REG(pexIf) 			((MV_PEX_IF_REGS_BASE(pexIf)) + 0x1A50)
 #define PEX_DBG_CTRL_REG(pexIf) 			((MV_PEX_IF_REGS_BASE(pexIf)) + 0x1A60)
+#define PEX_DBG_STATUS_REG(pexIf) 			((MV_PEX_IF_REGS_BASE(pexIf)) + 0x1A64)
 
 #define PEX_LINK_CTRL_STATUS_REG(pexIf) 		((MV_PEX_IF_REGS_BASE(pexIf)) + 0x70)
 
@@ -336,6 +337,7 @@ extern "C" {
 #define PEX_DEV_CTRL_STAT_REG						0x68
 #define PEX_LINK_CAPABILITY_REG						0x6C
 #define PEX_LINK_CTRL_STAT_REG						0x70
+#define PEX_LINK_CTRL_STAT_2_REG					0x90
 
 #define PEX_ADV_ERR_RPRT_HDR_TRGT_REG					0x100
 #define PEX_UNCORRECT_ERR_STAT_REG					0x104
@@ -683,6 +685,11 @@ extern "C" {
 #define PXLCSR_NEG_LNK_WDTH_MASK 		(0x3f << PXLCSR_NEG_LNK_WDTH_OFFS)
 #define PXLCSR_NEG_LNK_WDTH_X1			(0x1 << PXLCSR_NEG_LNK_WDTH_OFFS)
 
+#define PXLCSR_NEG_LNK_GEN_OFFS			16	/* Negotiated Link GEN */
+#define PXLCSR_NEG_LNK_GEN_MASK 		(0xf << PXLCSR_NEG_LNK_GEN_OFFS)
+#define PXLCSR_NEG_LNK_GEN_1_1			(0x1 << PXLCSR_NEG_LNK_GEN_OFFS)
+#define PXLCSR_NEG_LNK_GEN_2_0			(0x2 << PXLCSR_NEG_LNK_GEN_OFFS)
+
 #define PXLCSR_LNK_TRN 				BIT27	/* Link Training */
 
 #define PXLCSR_SLT_CLK_CFG_OFFS			28	/* Slot Clock Configuration */
diff --git a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvOsS.h b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvOsS.h
index 374bc5f..e057f27 100644
--- a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvOsS.h
+++ b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvOsS.h
@@ -86,7 +86,7 @@ extern "C" {
 
 #elif defined(MV_VXWORKS)
 
-#include "mvOsSVxw.h"
+#include "VxWorks/mvOsSVxw.h"
 
 #elif defined(MV_NETBSD)
 
diff --git a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.h b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.h
index b35b893..4528e7f 100644
--- a/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.h
+++ b/arch/arm/plat-armada/mv_hal/sata/CoreDriver/mvSata.h
@@ -290,7 +290,7 @@ typedef enum mvPMSwitchingmode {
 	MV_SATA_SWITCHING_MODE_NONE = 0,
 	MV_SATA_SWITCHING_MODE_CBS,
 	MV_SATA_SWITCHING_MODE_QCBS,
-	MV_SATA_SWITCHING_MODE_FBS,
+	MV_SATA_SWITCHING_MODE_FBS
 } MV_SATA_SWITCHING_MODE;
 
 struct mvDmaRequestQueueEntry;
diff --git a/arch/arm/plat-armada/mv_hal/spi/mvSpi.c b/arch/arm/plat-armada/mv_hal/spi/mvSpi.c
index f92bb1f..36c56e6 100644
--- a/arch/arm/plat-armada/mv_hal/spi/mvSpi.c
+++ b/arch/arm/plat-armada/mv_hal/spi/mvSpi.c
@@ -82,12 +82,12 @@ static MV_SPI_TYPE_INFO spiTypes[] = {
 	{
 		.en16Bit = MV_TRUE,
 		.byteCsAsrt = MV_FALSE,
-		.baudRate = (20 << 20), /*  20M */
+		.baudRate = (20 << 20) /*  20M */
 	},
 	{
 		.en16Bit = MV_FALSE,
 		.byteCsAsrt = MV_TRUE,
-		.baudRate = _8M,
+		.baudRate = _8M
 	}
 };
 
diff --git a/arch/arm/plat-armada/mv_hal/twsi/mvTwsi.c b/arch/arm/plat-armada/mv_hal/twsi/mvTwsi.c
index 257be24..582b35e 100644
--- a/arch/arm/plat-armada/mv_hal/twsi/mvTwsi.c
+++ b/arch/arm/plat-armada/mv_hal/twsi/mvTwsi.c
@@ -152,7 +152,7 @@ MV_STATUS mvTwsiStartBitSet(MV_U8 chanNum)
 
 	/* check for timeout */
 	if (MV_TRUE == twsiTimeoutChk(timeout,
-				      (const MV_U8 *)"TWSI: mvTwsiStartBitSet ERROR - Start Clear bit TimeOut .\n"))
+				      (const MV_8 *)"TWSI: mvTwsiStartBitSet ERROR - Start Clear bit TimeOut .\n"))
 		return MV_TIMEOUT;
 
 	/* check that start bit went down */
@@ -210,7 +210,7 @@ MV_STATUS mvTwsiStopBitSet(MV_U8 chanNum)
 		;
 
 	/* check for timeout */
-	if (MV_TRUE == twsiTimeoutChk(timeout, (const MV_U8 *)"TWSI: mvTwsiStopBitSet ERROR - Stop bit TimeOut .\n"))
+	if (MV_TRUE == twsiTimeoutChk(timeout, (const MV_8 *)"TWSI: mvTwsiStopBitSet ERROR - Stop bit TimeOut .\n"))
 		return MV_TIMEOUT;
 
 	/* check that the stop bit went down */
@@ -556,7 +556,7 @@ static MV_STATUS twsiAddr10BitSet(MV_U8 chanNum, MV_U32 deviceAddress, MV_TWSI_C
 
 	/* check for timeout */
 	if (MV_TRUE ==
-	    twsiTimeoutChk(timeout, (const MV_U8 *)"TWSI: twsiAddr10BitSet ERROR - 1st addr (10Bit) Int TimeOut.\n"))
+	    twsiTimeoutChk(timeout, (const MV_8 *)"TWSI: twsiAddr10BitSet ERROR - 1st addr (10Bit) Int TimeOut.\n"))
 		return MV_TIMEOUT;
 
 	/* check the status */
@@ -585,7 +585,7 @@ static MV_STATUS twsiAddr10BitSet(MV_U8 chanNum, MV_U32 deviceAddress, MV_TWSI_C
 
 	/* check for timeout */
 	if (MV_TRUE ==
-	    twsiTimeoutChk(timeout, (const MV_U8 *)"TWSI: twsiAddr10BitSet ERROR - 2nd (10 Bit) Int TimOut.\n"))
+	    twsiTimeoutChk(timeout, (const MV_8 *)"TWSI: twsiAddr10BitSet ERROR - 2nd (10 Bit) Int TimOut.\n"))
 		return MV_TIMEOUT;
 
 	/* check the status */
@@ -647,7 +647,7 @@ static MV_STATUS twsiAddr7BitSet(MV_U8 chanNum, MV_U32 deviceAddress, MV_TWSI_CM
 
 	/* check for timeout */
 	if (MV_TRUE ==
-	    twsiTimeoutChk(timeout, (const MV_U8 *)"TWSI: twsiAddr7BitSet ERROR - Addr (7 Bit) int TimeOut.\n"))
+	    twsiTimeoutChk(timeout, (const MV_8 *)"TWSI: twsiAddr7BitSet ERROR - Addr (7 Bit) int TimeOut.\n"))
 		return MV_TIMEOUT;
 
 	/* check the status */
@@ -709,7 +709,7 @@ static MV_STATUS twsiDataTransmit(MV_U8 chanNum, MV_U8 *pBlock, MV_U32 blockSize
 
 	/* check for timeout */
 	if (MV_TRUE ==
-	    twsiTimeoutChk(timeout, (const MV_U8 *)"TWSI: twsiDataTransmit ERROR - Read Data Int TimeOut.\n"))
+	    twsiTimeoutChk(timeout, (const MV_8 *)"TWSI: twsiDataTransmit ERROR - Read Data Int TimeOut.\n"))
 		return MV_TIMEOUT;
 
 	while (blockSizeWr) {
@@ -728,7 +728,7 @@ static MV_STATUS twsiDataTransmit(MV_U8 chanNum, MV_U8 *pBlock, MV_U32 blockSize
 
 		/* check for timeout */
 		if (MV_TRUE ==
-		    twsiTimeoutChk(timeout, (const MV_U8 *)"TWSI: twsiDataTransmit ERROR - Read Data Int TimeOut.\n"))
+		    twsiTimeoutChk(timeout, (const MV_8 *)"TWSI: twsiDataTransmit ERROR - Read Data Int TimeOut.\n"))
 			return MV_TIMEOUT;
 
 		/* check the status */
@@ -789,7 +789,7 @@ static MV_STATUS twsiDataReceive(MV_U8 chanNum, MV_U8 *pBlock, MV_U32 blockSize)
 
 	/* check for timeout */
 	if (MV_TRUE ==
-	    twsiTimeoutChk(timeout, (const MV_U8 *)"TWSI: twsiDataReceive ERROR - Read Data int Time out .\n"))
+	    twsiTimeoutChk(timeout, (const MV_8 *)"TWSI: twsiDataReceive ERROR - Read Data int Time out .\n"))
 		return MV_TIMEOUT;
 
 	while (blockSizeRd) {
@@ -807,7 +807,7 @@ static MV_STATUS twsiDataReceive(MV_U8 chanNum, MV_U8 *pBlock, MV_U32 blockSize)
 
 		/* check for timeout */
 		if (MV_TRUE ==
-		    twsiTimeoutChk(timeout, (const MV_U8 *)"TWSI: twsiDataReceive ERROR - Read Data Int Time out .\n"))
+		    twsiTimeoutChk(timeout, (const MV_8 *)"TWSI: twsiDataReceive ERROR - Read Data Int Time out .\n"))
 			return MV_TIMEOUT;
 
 		/* check the status */
@@ -910,11 +910,11 @@ MV_STATUS mvTwsiRead(MV_U8 chanNum, MV_TWSI_SLAVE *pTwsiSlave, MV_U8 *pBlock, MV
 {
 	MV_STATUS rc;
 	MV_STATUS ret = MV_FAIL;
+	MV_U32 counter = 0;
 
 	if ((NULL == pBlock) || (NULL == pTwsiSlave))
 		return MV_BAD_PARAM;
 
-	MV_U32 counter = 0;
 	do	{
 		if (counter > 0) /* wait for 1 mili sec for the clear to take effect */
 			mvOsDelay(1);
@@ -1033,11 +1033,11 @@ MV_STATUS mvTwsiRead(MV_U8 chanNum, MV_TWSI_SLAVE *pTwsiSlave, MV_U8 *pBlock, MV
 *******************************************************************************/
 MV_STATUS mvTwsiWrite(MV_U8 chanNum, MV_TWSI_SLAVE *pTwsiSlave, MV_U8 *pBlock, MV_U32 blockSize)
 {
+	MV_STATUS ret = MV_FAIL;
+	MV_U32 counter = 0;
 	if ((NULL == pBlock) || (NULL == pTwsiSlave))
 		return MV_BAD_PARAM;
 
-	MV_STATUS ret = MV_FAIL;
-	MV_U32 counter = 0;
 	do	{
 		if (counter > 0) /* wait for 1 mili sec for the clear to take effect */
 			mvOsDelay(1);
diff --git a/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c b/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c
index b24a868..cecafd4 100644
--- a/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c
+++ b/arch/arm/plat-armada/mv_hal/usb/mvUsbAddrDec.c
@@ -172,6 +172,12 @@ MV_STATUS mvUsbWinWrite(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pDecWin)
 	MV_U32 sizeReg, baseReg;
 	MV_U32 size;
 
+	/* check if the size of the bar is illeggal */
+	if (!MV_IS_POWER_OF_2(pDecWin->addrWin.size)) {
+		/* try to get a good size */
+		pDecWin->addrWin.size = 1 << (mvLog2(pDecWin->addrWin.size) + 1);
+	}
+
 	/* Parameter checking   */
 	if (winNum >= MV_USB_MAX_ADDR_DECODE_WIN) {
 		mvOsPrintf("%s: ERR. Invalid win num %d\n", __func__, winNum);
@@ -192,9 +198,11 @@ MV_STATUS mvUsbWinWrite(MV_U32 dev, MV_U32 winNum, MV_UNIT_WIN_INFO *pDecWin)
 		return MV_ERROR;
 	}
 
-	if (!MV_IS_POWER_OF_2(pDecWin->addrWin.size)) {
-		mvOsPrintf("mvUsbWinWrite: Bad windows size.\n");
-		return MV_BAD_PARAM;
+	if (pDecWin->addrWin.size != 0) {
+		if (!MV_IS_POWER_OF_2(pDecWin->addrWin.size)) {
+			mvOsPrintf("mvUsbWinWrite: Bad windows size.\n");
+			return MV_BAD_PARAM;
+		}
 	}
 
 	size = pDecWin->addrWin.size / MV_USB_WIN_SIZE_ALIGN - 1;
diff --git a/arch/arm/plat-armada/mv_hal/xor/mvXorAddrDec.c b/arch/arm/plat-armada/mv_hal/xor/mvXorAddrDec.c
index 21dc1e9..da7ed88 100644
--- a/arch/arm/plat-armada/mv_hal/xor/mvXorAddrDec.c
+++ b/arch/arm/plat-armada/mv_hal/xor/mvXorAddrDec.c
@@ -206,6 +206,10 @@ MV_STATUS mvXorTargetWinWrite(MV_U32 unit, MV_U32 winNum,
 	MV_U32 sizeReg, baseReg;
 	MV_U32 chan;
 
+	if (!MV_IS_POWER_OF_2(pAddrDecWin->addrWin.size)) {
+		/* try to get a good size */
+		pAddrDecWin->addrWin.size = 1 << (mvLog2(pAddrDecWin->addrWin.size) + 1);
+	}
 	/* Parameter checking */
 	if (winNum >= XOR_MAX_ADDR_DEC_WIN) {
 		DB(mvOsPrintf("%s: ERR. Invalid win num %d\n",  __func__, winNum));
-- 
1.7.5.4

