From 1d73731d9d22e04cfe543f8d6b35b63dc4c78f1f Mon Sep 17 00:00:00 2001
From: Piotr Ziecik <kosmo@semihalf.com>
Date: Thu, 20 Feb 2014 11:13:34 +0100
Subject: [PATCH 1381/1825] fix: alp: dfev: Cleanups and post-review fixes.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 4553be3e2e2ec39c7fb12171c6bf19d20cfd45f9

	- Added comments describing ipc_dfev API.
	- Added sanity checks in the ipc_dfev_smp module.
	- Unified copyright headers.
	- Removed MPP and TDM setup form sdd_if, as it is now done by the platform code.
	- Restricted DFEV usage to Avanta-LP platform only.

Change-Id: If124ba1bf866f078fb91d43a0d11779e5362d0e2
Signed-off-by: Piotr Ziecik <kosmo@semihalf.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5872
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/include/plat/ipc_dfev.h       |  503 +++++++++++++++++++-
 .../mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c        |   78 +++-
 .../mv_drivers_lsp/mv_phone/dfev/ipc_dfev_smp.c    |   84 +++-
 .../mv_drivers_lsp/mv_phone/slic/sdd_if.c          |   30 +--
 drivers/staging/telephony/mv_tdm/Kconfig           |    1 +
 5 files changed, 618 insertions(+), 78 deletions(-)

diff --git a/arch/arm/plat-armada/include/plat/ipc_dfev.h b/arch/arm/plat-armada/include/plat/ipc_dfev.h
index 34e9058..22f5f53 100644
--- a/arch/arm/plat-armada/include/plat/ipc_dfev.h
+++ b/arch/arm/plat-armada/include/plat/ipc_dfev.h
@@ -1,19 +1,66 @@
-/*
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
 
+    *   Redistributions of source code must retain the above copyright notice,
+	    this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
 #ifndef _IPC_DFEV_H
 #define _IPC_DFEV_H
 
@@ -55,32 +102,454 @@ enum ipc_dfev_mode {
 	IPC_DFEV_MODE_POLLING,
 };
 
-/* Control Path Interface */
+/*
+ * Control Path Interface
+ */
+
+/*
+ * ipc_dfev_ctrl_init
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_ctrl_init() function initializes DFEV IPC control channel.
+ *
+ * INPUT:
+ *	mode:
+ *		Channel initialization mode:
+ *		IPC_DFEV_MODE_INTERRUPT	- Interrupt based message reception.
+ *		IPC_DFEV_MODE_POLLING	- Polling based message reception.
+ *
+ *	ipc_dfev_ctrl_ops:
+ *		Structure with callbacks used for message delivery.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *		Pointer to the IPC handle structure (when succeed) or NULL
+ *		in case of error.
+ */
 extern struct ipc_dfev_ctrl_handle *ipc_dfev_ctrl_init(enum ipc_dfev_mode mode,
 				struct ipc_dfev_ctrl_ops *ipc_dfev_ctrl_ops);
+
+/*
+ * ipc_dfev_ctrl_exit
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_ctrl_exit() function shutdowns DFEV IPC control channel.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_ctrl_init()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *		None
+ *
+ */
 extern void ipc_dfev_ctrl_exit(struct ipc_dfev_ctrl_handle *handle);
+
+/*
+ * ipc_dfev_ctrl_poll
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_ctrl_poll() function shutdowns polls the DFEV
+ *		IPC control channel for new messages (which will be returned
+ *		through callback registered by the ipc_dfev_ctrl_init() function).
+ *		This function should be used only when channel was configured
+ *		in polling mode.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_ctrl_init()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	New message was received.
+ *	< 0:	There was no messages or error condition (returned value is an
+ *		error code).
+ *
+ */
 extern int ipc_dfev_ctrl_poll(struct ipc_dfev_ctrl_handle *handle);
 
+/*
+ * ipc_dfev_ctrl_msg_get
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_ctrl_msg_get() function gets (allocates) the
+ *		ipc_dfev_ctrl_msg structure from shared memory poll.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_ctrl_init()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *		Pointer to the ipc_dfev_ctrl_msg structure or NULL in case of error.
+ *
+ */
 extern struct ipc_dfev_ctrl_msg *ipc_dfev_ctrl_msg_get(struct ipc_dfev_ctrl_handle *handle);
+
+/*
+ * ipc_dfev_ctrl_msg_put
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_ctrl_msg_put() function puts (frees) the
+ *		ipc_dfev_ctrl_msg structure to shared memory poll.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_ctrl_init()
+ *		function.
+ *
+ *	msg:
+ *		Pointer to the message structure returned by the ipc_dfev_ctrl_msg_get()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *		None
+ *
+ */
 extern void ipc_dfev_ctrl_msg_put(struct ipc_dfev_ctrl_handle *handle, struct ipc_dfev_ctrl_msg *msg);
 
+/*
+ * ipc_dfev_ctrl_send_command
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_ctrl_send_command() sends the msg message
+ *		through IPC DFEV command channel.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_ctrl_init()
+ *		function.
+ *
+ *	msg:
+ *		Pointer to the message structure returned by the ipc_dfev_ctrl_msg_get()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	Success.
+ *	< 0:	Error (returned value is an error code).
+ *
+ */
 extern int ipc_dfev_send_command(struct ipc_dfev_ctrl_handle *handle, struct ipc_dfev_ctrl_msg *msg);
+
+/*
+ * ipc_dfev_ctrl_send_event
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_ctrl_send_event() sends the msg message
+ *		through IPC DFEV event channel.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_ctrl_init()
+ *		function.
+ *
+ *	msg:
+ *		Pointer to the message structure returned by the ipc_dfev_ctrl_msg_get()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	Success.
+ *	< 0:	Error (returned value is an error code).
+ *
+ */
 extern int ipc_dfev_send_event(struct ipc_dfev_ctrl_handle *handle, struct ipc_dfev_ctrl_msg *msg);
 
-/* Data Path Interface */
+/*
+ * Data Path Interface
+ */
+
+/*
+ * ipc_dfev_data_init
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_init() function initializes DFEV IPC data channel.
+ *
+ * INPUT:
+ *	mode:
+ *		Channel initialization mode:
+ *		IPC_DFEV_MODE_INTERRUPT	- Interrupt based message reception.
+ *		IPC_DFEV_MODE_POLLING	- Polling based message reception.
+ *
+ *	ipc_dfev_data_ops:
+ *		Structure with callbacks used for message delivery.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *		Pointer to the IPC handle structure (when succeed) or NULL
+ *		in case of error.
+ */
 extern struct ipc_dfev_data_handle *ipc_dfev_data_init(enum ipc_dfev_mode mode,
 				struct ipc_dfev_data_ops *ipc_dfev_data_ops);
+
+/*
+ * ipc_dfev_data_exit
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_exit() function shutdowns DFEV IPC data channel.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *		None
+ *
+ */
 extern void ipc_dfev_data_exit(struct ipc_dfev_data_handle *handle);
+
+/*
+ * ipc_dfev_data_poll_rx
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_poll_rx() function shutdowns polls the DFEV
+ *		IPC data RX channel for new messages (which will be returned
+ *		through callback registered by the ipc_dfev_data_init() function).
+ *		This function should be used only when channel was configured
+ *		in polling mode.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	New message was received.
+ *	< 0:	There was no messages or error condition (returned value is an
+ *		error code).
+ *
+ */
 extern int ipc_dfev_data_poll_rx(struct ipc_dfev_data_handle *handle);
+
+/*
+ * ipc_dfev_data_poll_tx
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_poll_tx() function shutdowns polls the DFEV
+ *		IPC data TX channel for new messages (which will be returned
+ *		through callback registered by the ipc_dfev_data_init() function).
+ *		This function should be used only when channel was configured
+ *		in polling mode.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	New message was received.
+ *	< 0:	There was no messages or error condition (returned value is an
+ *		error code).
+ *
+ */
 extern int ipc_dfev_data_poll_tx(struct ipc_dfev_data_handle *handle);
+
+/*
+ * ipc_dfev_data_poll_return
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_poll_return() function shutdowns polls the DFEV
+ *		IPC data RETURN channel for new messages (which will be returned
+ *		through callback registered by the ipc_dfev_data_init() function).
+ *		This function should be used only when channel was configured
+ *		in polling mode.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	New message was received.
+ *	< 0:	There was no messages or error condition (returned value is an
+ *		error code).
+ *
+ */
 extern int ipc_dfev_data_poll_return(struct ipc_dfev_data_handle *handle);
 
+/*
+ * ipc_dfev_data_msg_get
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_msg_get() function gets (allocates) the
+ *		ipc_dfev_data_msg structure from shared memory poll.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *		Pointer to the ipc_dfev_data_msg structure or NULL in case of error.
+ *
+ */
 extern struct ipc_dfev_data_msg *ipc_dfev_data_msg_get(struct ipc_dfev_data_handle *handle);
+
+/*
+ * ipc_dfev_data_msg_put
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_msg_put() function puts (frees) the
+ *		ipc_dfev_data_msg structure to shared memory poll.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ *	msg:
+ *		Pointer to the message structure returned by the ipc_dfev_data_msg_get()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *		None
+ *
+ */
 extern void ipc_dfev_data_msg_put(struct ipc_dfev_data_handle *handle, struct ipc_dfev_data_msg *msg);
 
+/*
+ * ipc_dfev_data_send_rx
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_send_rx() sends the msg message
+ *		as RX buffer through IPC DFEV RX channel.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ *	msg:
+ *		Pointer to the message structure returned by the ipc_dfev_data_msg_get()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	Success.
+ *	< 0:	Error (returned value is an error code).
+ *
+ */
 extern int ipc_dfev_send_rx(struct ipc_dfev_data_handle *handle, struct ipc_dfev_data_msg *msg);
+
+/*
+ * ipc_dfev_data_send_rx_return
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_send_rx_return() sends the msg message
+ *		as RX buffer through IPC DFEV RETURN channel.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ *	msg:
+ *		Pointer to the message structure returned by the ipc_dfev_data_msg_get()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	Success.
+ *	< 0:	Error (returned value is an error code).
+ *
+ */
 extern int ipc_dfev_send_rx_return(struct ipc_dfev_data_handle *handle, struct ipc_dfev_data_msg *msg);
+
+/*
+ * ipc_dfev_data_send_tx
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_send_tx() sends the msg message
+ *		as TX buffer through IPC DFEV TX channel.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ *	msg:
+ *		Pointer to the message structure returned by the ipc_dfev_data_msg_get()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	Success.
+ *	< 0:	Error (returned value is an error code).
+ *
+ */
 extern int ipc_dfev_send_tx(struct ipc_dfev_data_handle *handle, struct ipc_dfev_data_msg *msg);
+
+/*
+ * ipc_dfev_data_send_tx_return
+ *
+ * DESCRIPTION:
+ *		The ipc_dfev_data_send_tx_return() sends the msg message
+ *		as TX buffer through IPC DFEV RETURN channel.
+ *
+ * INPUT:
+ *	handle:
+ *		Pointer to the IPC handle returned by the ipc_dfev_data_init()
+ *		function.
+ *
+ *	msg:
+ *		Pointer to the message structure returned by the ipc_dfev_data_msg_get()
+ *		function.
+ *
+ * OUTPUT:
+ *		None
+ *
+ * RETURN:
+ *	0:	Success.
+ *	< 0:	Error (returned value is an error code).
+ *
+ */
 extern int ipc_dfev_send_tx_return(struct ipc_dfev_data_handle *handle, struct ipc_dfev_data_msg *msg);
 
 #endif /* _IPC_DFEV_H */
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c
index 80017d3..1d9c44e 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev.c
@@ -1,18 +1,66 @@
-/*
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	    this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/init.h>
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev_smp.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev_smp.c
index 1a2a07c..c4f4805 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev_smp.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/dfev/ipc_dfev_smp.c
@@ -1,18 +1,66 @@
-/*
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	    this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/init.h>
@@ -121,12 +169,14 @@ static struct ipc_dfev_data_handle ipc_dfev_data_handle_host = {
 
 static int ipc_dfev_channel_is_empty(struct ipc_dfev_channel *ch)
 {
-	return (atomic_read(&ch->write_idx) - atomic_read(&ch->read_idx) == 0);
+	BUG_ON(ch == NULL);
+	return ((atomic_read(&ch->write_idx) - atomic_read(&ch->read_idx)) == 0);
 }
 
 static int ipc_dfev_channel_is_full(struct ipc_dfev_channel *ch)
 {
-	return (atomic_read(&ch->write_idx) - atomic_read(&ch->read_idx) >=
+	BUG_ON(ch == NULL);
+	return ((atomic_read(&ch->write_idx) - atomic_read(&ch->read_idx)) >=
 						IPC_DFEV_FIFO_SIZE);
 }
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/sdd_if.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/sdd_if.c
index 104a5b3..f886f95 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/sdd_if.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/sdd_if.c
@@ -105,12 +105,8 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #endif /* !CONFIG_MV_AMP_ENABLE */
 
+/* SSI Reset GPIO */
 #define SSI_RESET	19
-#define SSI_CLK		20
-#define SSI_CLKO	21
-#define SSI_RX		22
-#define SSI_TX		23
-
 
 static irq_handler_t sdd_if_tick;
 
@@ -126,34 +122,10 @@ static irqreturn_t sdd_if_tick_wrapper(int irq, void *data)
 	MV_REG_WRITE(TIMER_CAUSE, TIMER_INT_CLR(DFEV_TIMER));
 	return r;
 }
-
-
-static void sdd_if_mpp_config(unsigned int mpp, unsigned int mode)
-{
-	unsigned long reg;
-
-	reg = MV_REG_READ(mvCtrlMppRegGet(mpp >> 3));
-	reg &= ~(0x0F << (4 * (mpp & 0x07)));
-	reg |= (mode & 0x0F) << (4 * (mpp & 0x07));
-	MV_REG_WRITE(mvCtrlMppRegGet(mpp >> 3), reg);
-}
-
 void sdd_if_hw_init(void)
 {
-	/* Configure SSI Interface for Avanta-LP */
-	sdd_if_mpp_config(SSI_CLK, 0x01);
-	sdd_if_mpp_config(SSI_CLKO, 0x01);
-	sdd_if_mpp_config(SSI_RX, 0x01);
-	sdd_if_mpp_config(SSI_TX, 0x01);
-
-	/* Configure MPP19 (SSI RESET) as GPIO */
-	sdd_if_mpp_config(SSI_RESET, 0x00);
 	gpio_request(SSI_RESET, "SSI RESET");
 	gpio_direction_output(SSI_RESET, 1);
-
-	/* Set TDM in SSI mode */
-	MV_REG_WRITE(MV_TDM_CTRL_REG, MV_REG_READ(MV_TDM_CTRL_REG) | 0x01);
-
 }
 EXPORT_SYMBOL(sdd_if_hw_init);
 
diff --git a/drivers/staging/telephony/mv_tdm/Kconfig b/drivers/staging/telephony/mv_tdm/Kconfig
index 0c9a619..f47c7ed 100644
--- a/drivers/staging/telephony/mv_tdm/Kconfig
+++ b/drivers/staging/telephony/mv_tdm/Kconfig
@@ -38,6 +38,7 @@ choice
 
 config LANTIQ_DFEV_SLIC_SUPPORT
 	bool "Support Lantiq DFEV devices"
+	depends on ARCH_AVANTA_LP
 	---help---
 	Choosing this option enables Lantiq DFEV-based
 	external SLIC device.
-- 
1.7.5.4

