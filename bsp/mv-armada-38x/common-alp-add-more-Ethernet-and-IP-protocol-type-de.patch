From a17da44b5224b8f44e5770c2ff4903e1aa68ac84 Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Tue, 11 Feb 2014 11:14:24 +0800
Subject: [PATCH 1350/1825] common: alp: add more Ethernet and IP protocol
 type definition

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 6613954a55c24a039cab182528495f8d8e74d3a6

Change-Id: Id9aa8da5b3030f37afb479854cb7495045c1471b
Signed-off-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5595
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/common/mv802_3.h |  140 +++++++++++++++++----------------
 1 files changed, 72 insertions(+), 68 deletions(-)

diff --git a/arch/arm/plat-armada/common/mv802_3.h b/arch/arm/plat-armada/common/mv802_3.h
index 85637c8..04419fb 100644
--- a/arch/arm/plat-armada/common/mv802_3.h
+++ b/arch/arm/plat-armada/common/mv802_3.h
@@ -95,9 +95,9 @@ typedef union mv_tag {
 
 typedef struct mv_mux_tag {
 	MV_TAG_TYPE tag_type;
-	MV_TAG      tx_tag;
-	MV_TAG      rx_tag_ptrn;
-	MV_TAG      rx_tag_mask;
+	MV_TAG tx_tag;
+	MV_TAG rx_tag_ptrn;
+	MV_TAG rx_tag_mask;
 } MV_MUX_TAG;
 
 typedef enum {
@@ -109,31 +109,32 @@ typedef enum {
 /* 802.3 types */
 #define MV_IP_TYPE                  0x0800
 #define MV_IP_ARP_TYPE              0x0806
-#define MV_IP6_TYPE					0x86dd
+#define MV_IP_LBDT_TYPE             0xfffa
+#define MV_IP6_TYPE                 0x86dd
 #define MV_APPLE_TALK_ARP_TYPE      0x80F3
 #define MV_NOVELL_IPX_TYPE          0x8137
-#define MV_EAPOL_TYPE				0x888e
-#define MV_VLAN_TYPE				0x8100
-#define MV_VLAN_1_TYPE				0x88A8
-#define MV_PPPOE_TYPE				0x8864
+#define MV_EAPOL_TYPE               0x888e
+#define MV_VLAN_TYPE                0x8100
+#define MV_VLAN_1_TYPE              0x88A8
+#define MV_PPPOE_TYPE               0x8864
 
 /* PPPoE protocol type */
 #define MV_IP_PPP  0x0021
 #define MV_IP6_PPP 0x0057
 /* Encapsulation header for RFC1042 and Ethernet_tunnel */
 
-#define MV_RFC1042_SNAP_HEADER     {0xAA, 0xAA, 0x03, 0x00, 0x00, 0x00}
+#define MV_RFC1042_SNAP_HEADER     { 0xAA, 0xAA, 0x03, 0x00, 0x00, 0x00 }
 
 #define MV_ETH_SNAP_LSB             0xF8
 
-#define	MV_MAC_ADDR_SIZE	(6)
-#define MV_MAC_STR_SIZE		(20)
-#define MV_LLC_HLEN		(6)
-#define MV_VLAN_HLEN		(4)
+#define MV_MAC_ADDR_SIZE    (6)
+#define MV_MAC_STR_SIZE     (20)
+#define MV_LLC_HLEN         (6)
+#define MV_VLAN_HLEN        (4)
 #define MV_ETH_TYPE_LEN     (2)
 #define MV_ETH_ALEN         (MV_MAC_ADDR_SIZE + MV_MAC_ADDR_SIZE + MV_ETH_TYPE_LEN)
 #define MV_PPP_HDR_SIZE     (2)
-#define MV_PPPOE_HDR_SIZE   (8)	/* PPP header is 2, PPPoE header is 6 */
+#define MV_PPPOE_HDR_SIZE   (8) /* PPP header is 2, PPPoE header is 6 */
 
 /* This macro checks for a multicast mac address    */
 #define MV_IS_MULTICAST_MAC(mac)  (((mac)[0] & 0x1) == 1)
@@ -143,16 +144,16 @@ typedef enum {
 /* IPv6 */
 #define MV_INET6 10
 
-#define MV_MAX_IPV4_ADDR_SIZE	(4)
-#define MV_MAX_L3_ADDR_SIZE	(16)	/* IPv4: 4, IPv6: 16 */
+#define MV_MAX_IPV4_ADDR_SIZE   (4)
+#define MV_MAX_L3_ADDR_SIZE     (16)    /* IPv4: 4, IPv6: 16 */
 
 /* This macro checks for an broadcast mac address     */
-#define MV_IS_BROADCAST_MAC(mac)            \
-	(((mac)[0] == 0xFF) &&       \
-	 ((mac)[1] == 0xFF) &&       \
-	 ((mac)[2] == 0xFF) &&       \
-	 ((mac)[3] == 0xFF) &&       \
-	 ((mac)[4] == 0xFF) &&       \
+#define MV_IS_BROADCAST_MAC(mac)	    \
+	(((mac)[0] == 0xFF) &&	     \
+	 ((mac)[1] == 0xFF) &&	     \
+	 ((mac)[2] == 0xFF) &&	     \
+	 ((mac)[3] == 0xFF) &&	     \
+	 ((mac)[4] == 0xFF) &&	     \
 	 ((mac)[5] == 0xFF))
 
 /* Typedefs */
@@ -173,29 +174,34 @@ typedef struct {
 } PPPoE_HEADER;
 
 enum {
-	MV_IP_PROTO_NULL = 0,	/* Dummy protocol for TCP               */
-	MV_IP_PROTO_ICMP = 1,	/* Internet Control Message Protocol    */
-	MV_IP_PROTO_IGMP = 2,	/* Internet Group Management Protocol   */
-	MV_IP_PROTO_IPIP = 4,	/* IPIP tunnels (older KA9Q tunnels use 94) */
-	MV_IP_PROTO_TCP = 6,	/* Transmission Control Protocol        */
-	MV_IP_PROTO_EGP = 8,	/* Exterior Gateway Protocol            */
-	MV_IP_PROTO_PUP = 12,	/* PUP protocol                         */
-	MV_IP_PROTO_UDP = 17,	/* User Datagram Protocol               */
-	MV_IP_PROTO_IDP = 22,	/* XNS IDP protocol                     */
-	MV_IP_PROTO_DCCP = 33,	/* Datagram Congestion Control Protocol */
-	MV_IP_PROTO_IPV6 = 41,	/* IPv6-in-IPv4 tunnelling              */
-	MV_IP_PROTO_RSVP = 46,	/* RSVP protocol                        */
-	MV_IP_PROTO_GRE = 47,	/* Cisco GRE tunnels (rfc 1701,1702)    */
-	MV_IP_PROTO_ESP = 50,	/* Encapsulation Security Payload protocol */
-	MV_IP_PROTO_AH = 51,	/* Authentication Header protocol       */
-	MV_IP_PROTO_BEETPH = 94,	/* IP option pseudo header for BEET     */
+	MV_IP_PROTO_NULL = 0,           /* Dummy protocol for TCP               */
+	MV_IP_PROTO_ICMP = 1,           /* Internet Control Message Protocol    */
+	MV_IP_PROTO_IGMP = 2,           /* Internet Group Management Protocol   */
+	MV_IP_PROTO_IPIP = 4,           /* IPIP tunnels (older KA9Q tunnels use 94) */
+	MV_IP_PROTO_TCP = 6,            /* Transmission Control Protocol        */
+	MV_IP_PROTO_EGP = 8,            /* Exterior Gateway Protocol            */
+	MV_IP_PROTO_PUP = 12,           /* PUP protocol                         */
+	MV_IP_PROTO_UDP = 17,           /* User Datagram Protocol               */
+	MV_IP_PROTO_IDP = 22,           /* XNS IDP protocol                     */
+	MV_IP_PROTO_DCCP = 33,          /* Datagram Congestion Control Protocol */
+	MV_IP_PROTO_IPV6 = 41,          /* IPv6-in-IPv4 tunnelling              */
+	MV_IP_PROTO_RH = 43,            /* Routing Header protocol              */
+	MV_IP_PROTO_FH = 44,            /* Fragment Header protocol             */
+	MV_IP_PROTO_RSVP = 46,          /* RSVP protocol                        */
+	MV_IP_PROTO_GRE = 47,           /* Cisco GRE tunnels (rfc 1701,1702)    */
+	MV_IP_PROTO_ESP = 50,           /* Encapsulation Security Payload protocol */
+	MV_IP_PROTO_AH = 51,            /* Authentication Header protocol       */
+	MV_IP_PROTO_ICMPV6 = 58, /* Internet Group Management Protocol V6 */
+	MV_IP_PROTO_DH = 60,            /* Destination Options Header protocol  */
+	MV_IP_PROTO_BEETPH = 94,        /* IP option pseudo header for BEET     */
 	MV_IP_PROTO_PIM = 103,
-	MV_IP_PROTO_COMP = 108,	/* Compression Header protocol          */
-	MV_IP_PROTO_ZERO_HOP = 114,	/* Any 0 hop protocol (IANA)            */
-	MV_IP_PROTO_SCTP = 132,	/* Stream Control Transport Protocol    */
-	MV_IP_PROTO_UDPLITE = 136,	/* UDP-Lite (RFC 3828)                  */
+	MV_IP_PROTO_COMP = 108,         /* Compression Header protocol          */
+	MV_IP_PROTO_ZERO_HOP = 114,     /* Any 0 hop protocol (IANA)            */
+	MV_IP_PROTO_SCTP = 132,         /* Stream Control Transport Protocol    */
+	MV_IP_PROTO_MH = 135,           /* Mobility Header protocol             */
+	MV_IP_PROTO_UDPLITE = 136,      /* UDP-Lite (RFC 3828)                  */
 
-	MV_IP_PROTO_RAW = 255,	/* Raw IP packets                       */
+	MV_IP_PROTO_RAW = 255,          /* Raw IP packets                       */
 	MV_IP_PROTO_MAX
 };
 
@@ -203,7 +209,6 @@ enum {
 #define MV_IP4_DF_FLAG_MASK     0x4000
 #define MV_IP4_MF_FLAG_MASK     0x2000
 
-
 typedef struct {
 	MV_U8 version;
 	MV_U8 tos;
@@ -229,12 +234,12 @@ typedef struct {
 } MV_IP6_HEADER;
 
 typedef struct {
-	int    family;
-	int    ipOffset;
-	int    ipHdrLen;
+	int family;
+	int ipOffset;
+	int ipHdrLen;
 	MV_U16 ipLen;
-	MV_U8  ipProto;
-	MV_U8  reserved;
+	MV_U8 ipProto;
+	MV_U8 reserved;
 	union {
 		char          *l3;
 		MV_IP_HEADER  *ip4;
@@ -243,32 +248,31 @@ typedef struct {
 } MV_IP_HEADER_INFO;
 
 typedef struct {
-	MV_U8  protocol;
-	MV_U8  length;
+	MV_U8 protocol;
+	MV_U8 length;
 	MV_U16 reserverd;
 	MV_U32 spi;
 	MV_U32 seqNum;
 } MV_AH_HEADER;
 
-
 typedef struct {
 	MV_U32 spi;
 	MV_U32 seqNum;
 } MV_ESP_HEADER;
 
-#define MV_ICMP_ECHOREPLY          0	/* Echo Reply                   */
-#define MV_ICMP_DEST_UNREACH       3	/* Destination Unreachable      */
-#define MV_ICMP_SOURCE_QUENCH      4	/* Source Quench                */
-#define MV_ICMP_REDIRECT           5	/* Redirect (change route)      */
-#define MV_ICMP_ECHO               8	/* Echo Request                 */
-#define MV_ICMP_TIME_EXCEEDED      11	/* Time Exceeded                */
-#define MV_ICMP_PARAMETERPROB      12	/* Parameter Problem            */
-#define MV_ICMP_TIMESTAMP          13	/* Timestamp Request            */
-#define MV_ICMP_TIMESTAMPREPLY     14	/* Timestamp Reply              */
-#define MV_ICMP_INFO_REQUEST       15	/* Information Request          */
-#define MV_ICMP_INFO_REPLY         16	/* Information Reply            */
-#define MV_ICMP_ADDRESS            17	/* Address Mask Request         */
-#define MV_ICMP_ADDRESSREPLY       18	/* Address Mask Reply           */
+#define MV_ICMP_ECHOREPLY          0    /* Echo Reply                   */
+#define MV_ICMP_DEST_UNREACH       3    /* Destination Unreachable      */
+#define MV_ICMP_SOURCE_QUENCH      4    /* Source Quench                */
+#define MV_ICMP_REDIRECT           5    /* Redirect (change route)      */
+#define MV_ICMP_ECHO               8    /* Echo Request                 */
+#define MV_ICMP_TIME_EXCEEDED      11   /* Time Exceeded                */
+#define MV_ICMP_PARAMETERPROB      12   /* Parameter Problem            */
+#define MV_ICMP_TIMESTAMP          13   /* Timestamp Request            */
+#define MV_ICMP_TIMESTAMPREPLY     14   /* Timestamp Reply              */
+#define MV_ICMP_INFO_REQUEST       15   /* Information Request          */
+#define MV_ICMP_INFO_REPLY         16   /* Information Reply            */
+#define MV_ICMP_ADDRESS            17   /* Address Mask Request         */
+#define MV_ICMP_ADDRESSREPLY       18   /* Address Mask Reply           */
 
 typedef struct {
 	MV_U8 type;
@@ -279,8 +283,8 @@ typedef struct {
 
 } MV_ICMP_ECHO_HEADER;
 
-#define MV_TCP_FLAG_FIN		(1 << 0)
-#define MV_TCP_FLAG_RST		(1 << 2)
+#define MV_TCP_FLAG_FIN         (1 << 0)
+#define MV_TCP_FLAG_RST         (1 << 2)
 
 typedef struct {
 	MV_U16 source;
@@ -302,4 +306,4 @@ typedef struct {
 
 } MV_UDP_HEADER;
 
-#endif /* __INCmv802_3h */
+#endif /* __INCmv802_3h */
\ No newline at end of file
-- 
1.7.5.4

