From 892b1499cf93d35f13f607d383df851685b9506a Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Tue, 30 Jul 2013 16:53:30 +0300
Subject: [PATCH 0904/1825] pp2: update parser with netdev's multicast list

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 9165e0492000d64979f5ca1c1b3260de7c80ca15

	- In change_rx_flags netdev operation, iterate over netdev's MC list
	- Insert each MC list element (i.e. MC MAC address) to PPv2 parser

Change-Id: I0ec9336084bb89c2533224450e33f6c696aa9721
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2887
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c    |   22 ++++++++++++-------
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |   12 +----------
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    2 +-
 3 files changed, 16 insertions(+), 20 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c
index 376a4af..fdd4970 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_ethernet.c
@@ -248,18 +248,13 @@ static int mv_eth_set_mac_addr_internals(struct net_device *dev, void *addr)
 }
 
 
-void mv_eth_set_multicast_list(struct net_device *dev, int flags)
+void mv_eth_change_rx_flags(struct net_device *dev, int flags)
 {
-
 	struct eth_port     *priv = MV_ETH_PRIV(dev);
 	int                 phyPort = MV_PPV2_PORT_PHYS(priv->port);
 
-/*
-	printk("%s - mv_eth_set_multicast_list: dev flags=0x%x func flags 0x%x, mc_count=%d\n",
-		dev->name, dev->flags, flags, dev->mc.count);
-*/
 	if (!mv_eth_pnc_ctrl_en) {
-		printk(KERN_ERR "%s Error: PARSER and CLASSIFIER control is disabled\n", __func__);
+		pr_err("%s Error: PARSER and CLASSIFIER control is disabled\n", __func__);
 		return;
 	}
 
@@ -273,7 +268,18 @@ void mv_eth_set_multicast_list(struct net_device *dev, int flags)
 	else
 		mvPrsMacAllMultiSet(phyPort, 0);
 
-	/* TODO - upadte parser according to dev multicast list ? */
+	if (dev->flags & IFF_MULTICAST) {
+		if (!netdev_mc_empty(dev)) {
+			struct netdev_hw_addr *ha;
+
+			netdev_for_each_mc_addr(ha, dev) {
+				if (mvPrsMacDaAccept(phyPort, ha->addr, 1) != MV_OK) {
+					pr_err("%s: Mcast init failed\n", dev->name);
+					break;
+				}
+			}
+		}
+	}
 }
 
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 31331a2..3f2ef9a 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -1050,21 +1050,11 @@ static inline u16 mv_eth_select_txq(struct net_device *dev, struct sk_buff *skb)
 	return mv_eth_tx_policy(pp, skb);
 }
 
-static inline void mv_eth_change_rx_flags(struct net_device *dev, int flags)
-{
-	printk(KERN_ERR "%s: function %s imlemantation is not ready\n", dev->name, __func__);
-}
-
-static inline void mv_eth_set_rx_mode(struct net_device *dev)
-{
-	printk(KERN_ERR "%s: function %s imlemantation is not ready\n", dev->name, __func__);
-}
-
 static const struct net_device_ops mv_eth_netdev_ops = {
 	.ndo_open = mv_eth_open,
 	.ndo_stop = mv_eth_stop,
 	.ndo_start_xmit = mv_eth_tx,
-	.ndo_change_rx_flags = mv_eth_set_multicast_list,
+	.ndo_change_rx_flags = mv_eth_change_rx_flags,
 	.ndo_set_mac_address = mv_eth_set_mac_addr,
 	.ndo_change_mtu = mv_eth_change_mtu,
 	.ndo_tx_timeout = mv_eth_tx_timeout,
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index 58a6670..0ce97ca 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -767,7 +767,7 @@ int         mv_eth_check_mtu_internals(struct net_device *dev, int mtu);
 int         mv_eth_check_mtu_valid(struct net_device *dev, int mtu);
 
 int         mv_eth_set_mac_addr(struct net_device *dev, void *mac);
-void        mv_eth_set_multicast_list(struct net_device *dev, int flags);
+void        mv_eth_change_rx_flags(struct net_device *dev, int flags);
 int         mv_eth_open(struct net_device *dev);
 int         mv_eth_port_suspend(int port);
 int         mv_eth_port_resume(int port);
-- 
1.7.5.4

