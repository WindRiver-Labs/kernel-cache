From d89a25c4b34e06b5d0a434d9bc172d6029677d2b Mon Sep 17 00:00:00 2001
From: Eli Nidam <elini@marvell.com>
Date: Sun, 26 Jan 2014 15:03:33 +0200
Subject: [PATCH 1317/1825] axp: amc: Support BC2 in run time

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 4edffefc39bcf5d10da40741acd2cd9bda1a6dae

	Added switching services specify code. (supported board BC2)
		1. flinfo  - print FLASH memory information
		2. reset - perform warm restart
		3. pss_env - set cpss environment variables permanently.
		4. mtdburn_spi - Burn a Linux/VxWorks image image on the spi flash.
		5. mtdburn - Burn a Linux/VxWorks image image on the spi flash.
		6. mtdburn_nand - Burn a Linux/VxWorks image image on the nand flash.
		7. smiscan - Scan for marvell smi devices.
		8. HW Services Late Init
		9. fix_pex - perform init_done and fix_pex on the dfx on bc2.
	       10. S@R for BC2
	       11. qsgmii_sel - Select SFP or QSGMII modes on bc2.

Change-Id: I1fce5753398b3d920d698b75ece718ca98f12442
Signed-off-by: Eli Nidam <elini@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5303
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../armada_xp_family/boardEnv/mvBoardEnvLib.c      |   49 +++++++++++++++++++-
 .../armada_xp_family/boardEnv/mvBoardEnvLib.h      |    3 +
 2 files changed, 50 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-armadaxp/armada_xp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-armadaxp/armada_xp_family/boardEnv/mvBoardEnvLib.c
index f881f0b..b42b593 100755
--- a/arch/arm/mach-armadaxp/armada_xp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-armadaxp/armada_xp_family/boardEnv/mvBoardEnvLib.c
@@ -1802,7 +1802,7 @@ MV_U8 mvBoardBootDevWidthGet(MV_VOID)
 	rc1 = mvBoardTwsiSatRGet(0, 0, &sar);
 	if (MV_ERROR == rc1)
 		return MV_ERROR;
-	if (DB_784MP_GP_ID == boardId) 
+	if (DB_784MP_GP_ID == boardId)
 		return (sar & 1);
 
 	return (sar & 0x18) >> 3;
@@ -2059,7 +2059,7 @@ MV_U16 mvBoardPexCapabilityGet(MV_VOID)
 		break;
 	}
 	gPexCap = sar & 0x1;
-	
+
 	return (gPexCap);
 }
 /*******************************************************************************/
@@ -2713,3 +2713,48 @@ MV_BOARD_PEX_INFO *mvBoardPexInfoGet(void)
 		return NULL;
 	}
 }
+#ifdef DB_78X60_AMC
+#define	MV_BOARD_DEVID_ADDR	0x4c
+#define TWSI_CHANNEL_BC2    1
+#define TWSI_SPEED_BC2    20000 /* wa for bits 1,2 in 0x4c. Mmust lower 100000 -> 20000 . adiy, erez*/
+/*******************************************************************************
+* mvBoardIsBC2 - detect via TWSI (addr=4c)if AMC board is connected to BC2
+*
+* DESCRIPTION:
+*
+* INPUT:
+*
+* OUTPUT:
+*       None.
+*
+* RETURN: TRUE if connected to BC2
+*******************************************************************************/
+MV_BOOL mvBoardIsBC2(MV_VOID)
+{
+	MV_TWSI_SLAVE twsiSlave;
+	MV_TWSI_ADDR slave;
+	MV_U8 data;
+
+	/* Read MPP module ID */
+	twsiSlave.slaveAddr.address = MV_BOARD_DEVID_ADDR;
+	if (0xFF == twsiSlave.slaveAddr.address)
+		return MV_FALSE;
+	twsiSlave.slaveAddr.type = ADDR7_BIT;
+
+	/* Use offset as command */
+	twsiSlave.offset = 0;
+	twsiSlave.moreThen256 = MV_FALSE;
+	twsiSlave.validOffset = MV_TRUE;
+
+	/* TWSI init */
+	slave.type = ADDR7_BIT;
+	slave.address = 0;
+	mvTwsiInit(TWSI_CHANNEL_BC2, TWSI_SPEED_BC2, CONFIG_SYS_TCLK, &slave, 0);
+
+
+	if (MV_OK != mvTwsiRead(TWSI_CHANNEL_BC2, &twsiSlave, &data, 1))
+		return MV_FALSE;
+
+	return MV_TRUE;
+}
+#endif
diff --git a/arch/arm/mach-armadaxp/armada_xp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-armadaxp/armada_xp_family/boardEnv/mvBoardEnvLib.h
index a0e9634..6140b3f 100644
--- a/arch/arm/mach-armadaxp/armada_xp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-armadaxp/armada_xp_family/boardEnv/mvBoardEnvLib.h
@@ -447,6 +447,9 @@ MV_BOARD_PEX_INFO *mvBoardPexInfoGet(void);
 MV_STATUS mvBoardConfIdSet(MV_U16 conf);
 MV_U16 mvBoardPexModeGet(MV_VOID);
 MV_STATUS mvBoardPexModeSet(MV_U16 conf);
+#ifdef DB_78X60_AMC
+MV_BOOL mvBoardIsBC2(MV_VOID);
+#endif
 
 
 #ifdef __cplusplus
-- 
1.7.5.4

