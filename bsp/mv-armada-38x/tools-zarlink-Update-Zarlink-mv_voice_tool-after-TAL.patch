From ce3ac40c54223c1d9d37b093a4ebe8beabf78f50 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Wed, 15 Jan 2014 16:13:15 +0200
Subject: [PATCH 1301/1825] tools: zarlink: Update Zarlink mv_voice_tool after
 TAL updates.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c6d3fd4f8239d401d835a9a39e617378c89079e4

	This commit updates Zarlink mv_voice_tool aligning it
	with the new tal_dev module.

Change-Id: I20dfc7ff9c373f9ddb19cd0e78d73f1954c64ea9
Signed-off-by: Piotr Ziecik <kosmo@semihalf.com>
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5177
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 tools/voice/zarlink/kernel/mv_voice_tool.c |   49 +++++++++++++++-------------
 1 files changed, 26 insertions(+), 23 deletions(-)

diff --git a/tools/voice/zarlink/kernel/mv_voice_tool.c b/tools/voice/zarlink/kernel/mv_voice_tool.c
index 03323c6..a56521e 100644
--- a/tools/voice/zarlink/kernel/mv_voice_tool.c
+++ b/tools/voice/zarlink/kernel/mv_voice_tool.c
@@ -67,7 +67,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include <fcntl.h>
 #include <sys/ioctl.h>
 #include <signal.h>
-#include "tdm/test/tdm_dev.h"
+#include "tdm/test/tal_dev.h"
 
 #include "vpapi_lib.h"
 
@@ -173,7 +173,7 @@ static unsigned short cal_lines = 0;
 static VpOptionCodecType codec = VP_OPTION_ALAW;
 static unsigned char time_slot_table[MAX_LINES];
 static unsigned char hook_state[MAX_LINES];
-static char dev_name[] = "/dev/tdm";
+static const char dev_name[] = "/dev/tal";
 static int buff_size = 0;
 static unsigned char aud_buf[2][320 * MAX_LINES];
 static unsigned short f1Mem = 0;
@@ -232,7 +232,7 @@ int main(void)
 	int proc_fd, fdflags, cmd_len, i;
 	char str[32];
 	unsigned char line0_id, line1_id;
-	tdm_dev_params_t tdm_params;
+	tal_dev_params_t tdm_params;
 	unsigned long int iterations;
 
 	event_count = 0;
@@ -433,11 +433,16 @@ int main(void)
 
 			case 'a':
 				/* Start Telephony */
-				if(ioctl(tdm_fd, TDM_DEV_TDM_START, &tdm_params)) {
+				if (ioctl(tdm_fd, TAL_DEV_INIT, &tdm_params)) {
 					printf("%s Error, unable to init TDM\n", TOOL_PREFIX);
 					return 1;
 				}
 
+				if (ioctl(tdm_fd, TDM_DEV_TDM_TEST_MODE_ENABLE)) {
+					printf("%s Error, unable to configure TDM\n", TOOL_PREFIX);
+					return 1;
+				}
+
 				if(vpapi_open_device()) {
 					printf("%s Error, could not open vpapi device\n", TOOL_PREFIX);
 					return 1;
@@ -516,7 +521,7 @@ void release(int signum)
 	}
 
 	/* Stop TDM */
-	if(ioctl(tdm_fd, TDM_DEV_TDM_STOP, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_EXIT, 0)) {
 		printf("\n%s Error, unable to stop TDM\n", TOOL_PREFIX);
 		return;
 	} else {
@@ -577,7 +582,7 @@ static void channel_balancing_test(int tdm_fd, unsigned long int iterations)
 		cb_loop = 0;
 		i = 0;
 
-		if (ioctl(tdm_fd, TDM_DEV_PCM_START, 0)) {
+		if (ioctl(tdm_fd, TAL_DEV_PCM_START, 0)) {
 			printf("Error, unable to start pcm bus\n");
 			return;
 		}
@@ -631,7 +636,7 @@ static void channel_balancing_test(int tdm_fd, unsigned long int iterations)
 		}
 
 		loops++;
-		if (ioctl(tdm_fd, TDM_DEV_PCM_STOP, 0)) {
+		if (ioctl(tdm_fd, TAL_DEV_PCM_STOP, 0)) {
 			printf("Error, unable to stop pcm bus\n");
 			return;
 		}
@@ -654,7 +659,7 @@ cb_out:
 		}
 	}
 
-	if (ioctl(tdm_fd, TDM_DEV_PCM_STOP, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_PCM_STOP, 0)) {
 		printf("Error, unable to stop pcm bus\n");
 		return;
 	}
@@ -700,7 +705,7 @@ static void slic_digital_loopback(int tdm_fd, unsigned long int iterations)
 			aud_buf[1][index + (80 * pcm_bytes * ch)] = (index+ch+2);
 	}
 
-	if (ioctl(tdm_fd, TDM_DEV_PCM_START, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_PCM_START, 0)) {
 		printf("Error, unable to start pcm bus\n");
 		return;
 	}
@@ -754,7 +759,7 @@ slic_dl_out:
 	if(cmp_status == 0)
 		printf("\nDigital loopback test(%d lines) - PASS !!!\n",total_lines);
 
-	if (ioctl(tdm_fd, TDM_DEV_PCM_STOP, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_PCM_STOP, 0)) {
 		printf("Error, unable to stop pcm bus\n");
 		return;
 	}
@@ -809,7 +814,7 @@ static void sw_loopback(int tdm_fd, unsigned char line_id)
 		wait_for_vpapi_event();
 	}
 
-	if(ioctl(tdm_fd, TDM_DEV_PCM_START, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_PCM_START, 0)) {
 		printf("Error, unable to start pcm bus\n");
 		return;
 	}
@@ -854,7 +859,7 @@ static void sw_loopback(int tdm_fd, unsigned char line_id)
 		timeout.tv_usec = TIMEOUT;
 	}
 
-	if(ioctl(tdm_fd, TDM_DEV_PCM_STOP, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_PCM_STOP, 0)) {
 		printf("Error, unable to stop pcm bus\n");
 		return;
 	}
@@ -921,7 +926,7 @@ static void sw_tone_test(int tdm_fd, unsigned char line_id)
 			wait_for_vpapi_event();
 		}
 
-		if(ioctl(tdm_fd, TDM_DEV_PCM_START, 0)) {
+		if (ioctl(tdm_fd, TAL_DEV_PCM_START, 0)) {
 			printf("Error, unable to start pcm bus\n");
 			return;
 		}
@@ -958,7 +963,7 @@ static void sw_tone_test(int tdm_fd, unsigned char line_id)
 			timeout.tv_usec = TIMEOUT;
 		}
 
-		if (ioctl(tdm_fd, TDM_DEV_PCM_STOP, 0)) {
+		if (ioctl(tdm_fd, TAL_DEV_PCM_STOP, 0)) {
 			printf("Error, unable to stop pcm bus\n");
 			return;
 		}
@@ -983,7 +988,7 @@ static void sw_loopback_multi_phones_test(int tdm_fd, unsigned char start_line,
 		wait_for_vpapi_event();
 	}
 
-	if(ioctl(tdm_fd, TDM_DEV_PCM_START, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_PCM_START, 0)) {
 		printf("Error, unable to start pcm bus\n");
 		return;
 	}
@@ -1030,7 +1035,7 @@ static void sw_loopback_multi_phones_test(int tdm_fd, unsigned char start_line,
 		timeout.tv_usec = TIMEOUT;
 	}
 
-	if(ioctl(tdm_fd, TDM_DEV_PCM_STOP, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_PCM_STOP, 0)) {
 		printf("Error, unable to stop pcm bus\n");
 		return;
 	}
@@ -1052,7 +1057,7 @@ static void sw_loopback_two_phones_test(int tdm_fd, unsigned char line0, unsigne
 		wait_for_vpapi_event();
 	}
 
-	if(ioctl(tdm_fd, TDM_DEV_PCM_START, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_PCM_START, 0)) {
 		printf("Error, unable to start pcm bus\n");
 		return;
 	}
@@ -1096,7 +1101,7 @@ static void sw_loopback_two_phones_test(int tdm_fd, unsigned char line0, unsigne
 		timeout.tv_usec = TIMEOUT;
 	}
 
-	if(ioctl(tdm_fd, TDM_DEV_PCM_STOP, 0)) {
+	if (ioctl(tdm_fd, TAL_DEV_PCM_STOP, 0)) {
 		printf("Error, unable to stop pcm bus\n");
 		return;
 	}
@@ -1402,9 +1407,8 @@ static void set_tdm_clk_config(void)
 	tdm_dev_clk_t tdm_dev_clk;
 
 	/* Config TDM clock */
-	if(ioctl(tdm_fd, TDM_DEV_TDM_CLK_CONFIG, &tdm_dev_clk)) {
+	if (ioctl(tdm_fd, TDM_DEV_TDM_CLK_CONFIG, &tdm_dev_clk))
 		printf("%s Error, unable to config TDM clock.\n", TOOL_PREFIX);
-	}
 }
 
 static int get_tdm_clk_correction(void)
@@ -1412,7 +1416,7 @@ static int get_tdm_clk_correction(void)
 	tdm_dev_clk_t tdm_dev_clk;
 
 	/* Get TDM clock */
-	if(ioctl(tdm_fd, TDM_DEV_TDM_CLK_GET, &tdm_dev_clk)) {
+	if (ioctl(tdm_fd, TDM_DEV_TDM_CLK_GET, &tdm_dev_clk)) {
 		printf("%s Error, unable to get TDM clock.\n", TOOL_PREFIX);
 		return 0;
 	}
@@ -1427,8 +1431,7 @@ static void set_tdm_clk_correction(int correction)
 	tdm_dev_clk.correction=correction;
 
 	/* Set TDM clock */
-	if(ioctl(tdm_fd, TDM_DEV_TDM_CLK_SET, &tdm_dev_clk)) {
+	if (ioctl(tdm_fd, TDM_DEV_TDM_CLK_SET, &tdm_dev_clk))
 		printf("%s Error, unable to set TDM clock.\n", TOOL_PREFIX);
-	}
 }
 #endif
-- 
1.7.5.4

