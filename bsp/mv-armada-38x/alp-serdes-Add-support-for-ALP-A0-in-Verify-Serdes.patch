From 81e1b9c6ac20728f05cd84f6f58451c945fbaf06 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Wed, 5 Feb 2014 17:56:41 +0200
Subject: [PATCH 1343/1825] alp: serdes: Add support for ALP-A0 in Verify
 Serdes

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit f66a314360466269d617c2f7dba74c15a07f6afd

	In ALP-A0, Common PHY's Selectors added new bit for lane1
	to support SATA1 port
	- Change SERDES mask and offset to support new bit in selector reg
	- Improve mvBoardVerifySerdesCofig function to check lane0

Signed-off-by: Hanna Hawa <hannah@marvell.com>

Change-Id: I640f7e9ab5752daf52d9fc13d97add4f354f53a4
Reviewed-on: http://vgitil04.il.marvell.com:8080/5461
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Shadi Ammouri <shadi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   16 ++++++++++++----
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |    7 +++++--
 2 files changed, 17 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 1cf4a1a..48971b7 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -995,22 +995,30 @@ MV_VOID mvBoardVerifySerdesCofig(MV_VOID)
 {
 	MV_U32 i, laneConfig, laneSelector, selector = MV_REG_READ(MV_COMMON_PHY_REGS_OFFSET);
 	MV_CONFIG_TYPE_ID configID = MV_CONFIG_LANE1;
+	MV_U32 revID = mvCtrlRevGet();
 
 	/* Lane 1 & Lane 3 use the same values for SerDes config and selector,
 	 * Lane2 values  are reversed:
 	 * | Value  | board Config | Selector |
 	 * | 0x0    | SATA0        | SGMII-0  |
 	 * | 0x1    | SGMII-0      | SATA0    | */
-	for (i = 1; i < 4; i++) {
-		laneConfig = mvCtrlSysConfigGet(configID);
-		laneSelector = (selector & SERDES_LANE_MASK(i)) >> SERDES_LANE_OFFS(i);
+	for (i = 0; i < 4; i++) {
+		if (i == 0) /* lane0 is hard-coded to PCIe0 - not selected by board configuration */
+			laneConfig = 1;
+		else /* lane 1-3 are selected at board configuration */
+			laneConfig = mvCtrlSysConfigGet(configID++);
+		/* using different Mask/Offset, since SATA1 option at lane1 was
+		** not supported in Z1, Z2, Z3 */
+		if (revID <= MV_88F66X0_Z3_ID)
+			laneSelector = (selector & SERDES_LANE_MASK_Z_REV(i)) >> SERDES_LANE_OFFS_Z_REV(i);
+		else
+			laneSelector = (selector & SERDES_LANE_MASK(i)) >> SERDES_LANE_OFFS(i);
 		if ((i != 2 && laneSelector != laneConfig) || /* lanes 1,3 use the same value */
 			(i == 2 && laneSelector == laneConfig)) { /* lane 2 use opposite values */
 			mvOsPrintf("Error: board configuration conflicts with SerDes configuration\n");
 			mvOsPrintf("SerDes#%d: Board configuration= %x  SerDes Selector = %x\n" \
 			, i, laneConfig, laneSelector);
 		}
-		configID++;
 	}
 }
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index 2ff954f..f6cf159 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -182,8 +182,11 @@ extern "C" {
 #define CORE_DIVCLK_RELOAD_RATIO_MASK		(1 << CORE_DIVCLK_RELOAD_RATIO_OFFS)
 
 /* Common PHY selector (MV_COMMON_PHY_REGS_OFFSET) */
-#define SERDES_LANE_OFFS(num)			num
-#define SERDES_LANE_MASK(num)			(2 << (num - 1))
+#define SERDES_LANE_OFFS_Z_REV(num)	num
+#define SERDES_LANE_MASK_Z_REV(num)	(1 << num)
+
+#define SERDES_LANE_OFFS(num)		(num <= 1 ? num : (num + 1))
+#define SERDES_LANE_MASK(num)		((num == 1 ? 3 : 1) << SERDES_LANE_OFFS(num))
 
 #define EEPROM_VERIFICATION_PATTERN	0xfadecafe
 
-- 
1.7.5.4

