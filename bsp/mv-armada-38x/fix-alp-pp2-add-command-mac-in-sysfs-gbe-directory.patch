From 5fb6f22f9d283a73f28519d97ad81d8d4cb2ee0b Mon Sep 17 00:00:00 2001
From: Ken Ma <make@marvell.com>
Date: Fri, 6 Jun 2014 22:47:42 +0800
Subject: [PATCH 1708/1825] fix: alp: pp2: add command "mac" in sysfs gbe
 directory

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 62c2d52809770b54e4a6bfb42dbe12ef6ba04743

	- add "mac" dev_attr in sysfs gbe directory
	- implement mv_eth_mac_show() for mv_pp2
	- implement mvEthPortUcastShow(), mvEthPortMcastShow() and
	  mvEthPortBcastShow() for pp2 gbe debug
	- implement mvPp2PrsShadowText() for pp2 prs hw
	SYSTEMSW-153: <Command "mac" is absent under /sys/devices/
	platform/pp2/gbe ALP 'uImage-linux-3.4.y-2013_Q3.0p1-alp_smp'>

Signed-off-by: Ken Ma <make@marvell.com>

Change-Id: I9cb5926c5d27917fe0d3f23b0587677bc3ee7878
Signed-off-by: Ken Ma <make@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8401
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c   |    5 +
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |    7 +-
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h     |    3 +
 .../arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c |   97 ++++++++++++++++++++
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c   |    5 +
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h   |    1 +
 6 files changed, 117 insertions(+), 1 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c
index b082dca..cbd6d45 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c
@@ -59,6 +59,7 @@ static ssize_t mv_eth_help(char *buf)
 	off += sprintf(buf+off, "echo [if_name]   > netdev      - show [if_name] net_device status\n");
 	off += sprintf(buf+off, "echo [p]         > cntrs       - show port [p] MIB counters\n");
 	off += sprintf(buf+off, "echo [p]         > stats       - show port [p] statistics\n");
+	off += sprintf(buf+off, "echo [p]         > mac         - show MAC info for port [p]\n");
 	off += sprintf(buf+off, "echo [p]         > gmacRegs    - show GMAC registers for port [p]\n");
 	off += sprintf(buf+off, "echo [p]         > isrRegs     - show ISR registers for port [p]\n");
 	off += sprintf(buf+off, "echo [p]         > dropCntrs   - show drop counters for port [p]\n");
@@ -130,6 +131,8 @@ static ssize_t mv_eth_port_store(struct device *dev,
 #endif
 	} else if (!strcmp(name, "stats")) {
 		mv_eth_port_stats_print(p);
+	} else if (!strcmp(name, "mac")) {
+		mv_eth_mac_show(p);
 	} else if (!strcmp(name, "pnc")) {
 		mv_eth_ctrl_pnc(p);
 	} else if (!strcmp(name, "skb")) {
@@ -253,6 +256,7 @@ static DEVICE_ATTR(isrRegs,	S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(gmacRegs,	S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(dropCntrs,	S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(stats,       S_IWUSR, NULL, mv_eth_port_store);
+static DEVICE_ATTR(mac,	S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(pnc,		S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(skb,         S_IWUSR, NULL, mv_eth_port_store);
 
@@ -276,6 +280,7 @@ static struct attribute *mv_eth_attrs[] = {
 	&dev_attr_gmacRegs.attr,
 	&dev_attr_dropCntrs.attr,
 	&dev_attr_stats.attr,
+	&dev_attr_mac.attr,
 	&dev_attr_pnc.attr,
 	&dev_attr_skb.attr,
 	&dev_attr_regRead.attr,
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 3f27901..321297d 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -4769,7 +4769,12 @@ void mv_eth_mac_show(int port)
 		return;
 	}
 
-	/* TODO - example in NETA */
+	mvOsPrintf("port %d RXQ %d~%d\n", port, pp->first_rxq, pp->first_rxq + pp->rxq_num);
+	mvEthPortUcastShow(port);
+	mvEthPortMcastShow(port);
+	mvEthPortBcastShow(port);
+
+	return;
 }
 
 /********************************************/
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
index 00e59f4..d2de311 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2Gbe.h
@@ -745,4 +745,7 @@ void mvPp2V1TxqDbgCntrs(int port, int txp, int txq);
 void mvPp2V1RxqDbgCntrs(int port, int rxq);
 void mvPp2RxFifoRegs(int port);
 void mvPp2PortStatus(int port);
+void mvEthPortUcastShow(int port);
+void mvEthPortMcastShow(int port);
+void mvEthPortBcastShow(int port);
 #endif /* MV_PP2_GBE_H */
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
index 8fe62ec..8edbb24 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
@@ -72,6 +72,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "bm/mvBm.h"
 
 #include "mvPp2GbeRegs.h"
+#include "prs/mvPp2Prs.h"
 
 MV_VOID mvPp2RxDmaRegsPrint(void)
 {
@@ -626,3 +627,99 @@ void mvPp2PortStatus(int port)
 			mvOsPrintf("link down\n");
 	}
 }
+
+void mvEthPortUcastShow(int port)
+{
+	MV_PP2_PRS_ENTRY pe;
+	int phyPort = MV_PPV2_PORT_PHYS(port);
+	char name[PRS_TEXT_SIZE] = {0};
+	unsigned char mac[MV_MAC_ADDR_SIZE] = {0};
+	unsigned char macMask[MV_MAC_ADDR_SIZE] = {0};
+	int i = 0;
+	int index = 0;
+
+	mvOsSPrintf(name, "ucast-port-%d", phyPort);
+
+	for (i = 0; i < MV_PP2_PRS_TCAM_SIZE; i++) {
+		if (mvPp2PrsShadowIsValid(i)
+			&& PRS_LU_MAC == mvPp2PrsShadowLu(i)
+			&& !strcmp(mvPp2PrsShadowText(i), name)) {
+			pe.index = i;
+			mvPp2PrsHwRead(&pe);
+			for (index = 0; index < MV_MAC_ADDR_SIZE; index++) {
+				mvPp2PrsSwTcamByteGet(&pe, index, &mac[index], &macMask[index]);
+				if (macMask[index] != 0xff)
+					break;
+			}
+			if (MV_MAC_ADDR_SIZE == index)
+				mvOsPrintf("Unicast MAC Table: port=%d %02x:%02x:%02x:%02x:%02x:%02x\n",
+				port, mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
+		}
+	}
+
+	return;
+}
+
+void mvEthPortMcastShow(int port)
+{
+	MV_PP2_PRS_ENTRY pe;
+	int phyPort = MV_PPV2_PORT_PHYS(port);
+	char name[PRS_TEXT_SIZE] = {0};
+	unsigned char mac[MV_MAC_ADDR_SIZE] = {0};
+	unsigned char macMask[MV_MAC_ADDR_SIZE] = {0};
+	int i = 0;
+	int index = 0;
+
+	mvOsSPrintf(name, "mcast-port-%d", phyPort);
+
+	for (i = 0; i < MV_PP2_PRS_TCAM_SIZE; i++) {
+		if (mvPp2PrsShadowIsValid(i)
+			&& PRS_LU_MAC == mvPp2PrsShadowLu(i)
+			&& !strcmp(mvPp2PrsShadowText(i), name)) {
+			pe.index = i;
+			mvPp2PrsHwRead(&pe);
+			for (index = 0; index < MV_MAC_ADDR_SIZE; index++) {
+				mvPp2PrsSwTcamByteGet(&pe, index, &mac[index], &macMask[index]);
+				if (macMask[index] != 0xff)
+					break;
+			}
+			if (MV_MAC_ADDR_SIZE == index)
+				mvOsPrintf("Multicast MAC Table: port=%d %02x:%02x:%02x:%02x:%02x:%02x\n",
+				port, mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
+		}
+	}
+
+	return;
+}
+
+void mvEthPortBcastShow(int port)
+{
+	MV_PP2_PRS_ENTRY pe;
+	int phyPort = MV_PPV2_PORT_PHYS(port);
+	char name[PRS_TEXT_SIZE] = {0};
+	unsigned char mac[MV_MAC_ADDR_SIZE] = {0};
+	unsigned char macMask[MV_MAC_ADDR_SIZE] = {0};
+	int i = 0;
+	int index = 0;
+
+	mvOsSPrintf(name, "bcast-port-%d", phyPort);
+
+	for (i = 0; i < MV_PP2_PRS_TCAM_SIZE; i++) {
+		if (mvPp2PrsShadowIsValid(i)
+			&& PRS_LU_MAC == mvPp2PrsShadowLu(i)
+			&& !strcmp(mvPp2PrsShadowText(i), name)) {
+			pe.index = i;
+			mvPp2PrsHwRead(&pe);
+			for (index = 0; index < MV_MAC_ADDR_SIZE; index++) {
+				mvPp2PrsSwTcamByteGet(&pe, index, &mac[index], &macMask[index]);
+				if (macMask[index] != 0xff)
+					break;
+			}
+			if (MV_MAC_ADDR_SIZE == index)
+				mvOsPrintf("Broadcast MAC Table: port=%d %02x:%02x:%02x:%02x:%02x:%02x\n",
+				port, mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
+		}
+	}
+
+	return;
+}
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c
index 7a5a5e1..ff4463f 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.c
@@ -88,6 +88,11 @@ int mvPp2PrsShadowLu(int index)
 	return mvPrsShadowTbl[index].lu;
 }
 
+unsigned char *mvPp2PrsShadowText(int index)
+{
+	return mvPrsShadowTbl[index].text;
+}
+
 int mvPp2PrsShadowUdf(int index)
 {
 	return mvPrsShadowTbl[index].udf;
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h
index 2b51345..a904513 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2PrsHw.h
@@ -458,6 +458,7 @@ void mvPrsFlowIdClear(int flowId);
 void mvPrsFlowIdClearAll(void);
 int mvPrsFlowIdDump(void);
 int mvPp2PrsShadowLu(int index);
+unsigned char *mvPp2PrsShadowText(int index);
 int mvPp2PrsShadowIsValid(int index);
 int mvPp2PrsTcamFirstFree(int start, int end);
 
-- 
1.7.5.4

