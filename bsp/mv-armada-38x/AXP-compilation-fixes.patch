From 6aad79fc613d10ae8a13ab9b99975985c423d347 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Mon, 14 Jan 2013 17:01:20 +0200
Subject: [PATCH 0399/1825] AXP compilation fixes

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 18e9940ef1c5ce7de5fb80d3d2ca7aac637a9684

Change-Id: I2fc14a1f2275adcb8c7e16b6f9d848138c59c104
Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/Kconfig                |    2 ++
 arch/arm/include/asm/idmap.h    |    1 +
 arch/arm/include/asm/tlbflush.h |    2 +-
 arch/arm/mach-armadaxp/core.c   |    5 +----
 arch/arm/mach-armadaxp/pci.c    |    5 ++---
 arch/arm/mach-armadaxp/pex.c    |   22 ++++++----------------
 arch/arm/mach-armadaxp/time.c   |   27 +++++++--------------------
 arch/arm/mm/cache-aurora-l2.c   |    1 +
 arch/arm/mm/idmap.c             |    2 +-
 arch/arm/mm/mmu.c               |    1 +
 arch/arm/plat-armada/cpuidle.c  |    3 ++-
 fs/xfs/xfs_file.c               |    6 ++++--
 kernel/time/tick-sched.c        |    2 +-
 13 files changed, 30 insertions(+), 49 deletions(-)

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 321921f..b78f5e0 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -628,6 +628,7 @@ config ARCH_ARMADA370
 	select PLAT_ARMADA
 	select HAVE_REGS_AND_STACK_ACCESS_API
 	select COMMON_CLKDEV
+	select NEED_MACH_IO_H
 	select NEED_MACH_MEMORY_H
 	help
 	  Support for the Marvell Armada-370 SoC Family
@@ -648,6 +649,7 @@ config ARCH_ARMADA_XP
 	select COMMON_CLKDEV
 	select CLKSRC_MMIO
 	select CLKDEV_LOOKUP
+	select NEED_MACH_IO_H
 	select NEED_MACH_MEMORY_H
 	select DMABOUNCE
 	select ARCH_HAS_HOLES_MEMORYMODEL
diff --git a/arch/arm/include/asm/idmap.h b/arch/arm/include/asm/idmap.h
index bf863ed..9611d0a 100644
--- a/arch/arm/include/asm/idmap.h
+++ b/arch/arm/include/asm/idmap.h
@@ -10,5 +10,6 @@
 extern pgd_t *idmap_pgd;
 
 void setup_mm_for_reboot(void);
+void identity_mapping_add(pgd_t *pgd, unsigned long addr, unsigned long end);
 
 #endif	/* __ASM_IDMAP_H */
diff --git a/arch/arm/include/asm/tlbflush.h b/arch/arm/include/asm/tlbflush.h
index 978e580..27ffb84 100644
--- a/arch/arm/include/asm/tlbflush.h
+++ b/arch/arm/include/asm/tlbflush.h
@@ -348,7 +348,7 @@ static inline void tlb_op(int op, const char *regs, int arg)
 		raw_local_irq_restore(flags);
 	}
 #else
-	__tlb_op(op, regs, arg);
+	/* __tlb_op(op, regs, arg); */
 #endif
 
 }
diff --git a/arch/arm/mach-armadaxp/core.c b/arch/arm/mach-armadaxp/core.c
index eeec1e5..ac7a974 100644
--- a/arch/arm/mach-armadaxp/core.c
+++ b/arch/arm/mach-armadaxp/core.c
@@ -21,7 +21,6 @@
 #include <linux/device.h>
 #include <linux/slab.h>
 #include <linux/string.h>
-#include <linux/sysdev.h>
 #include <linux/mbus.h>
 #include <asm/mach/time.h>
 #include <linux/clocksource.h>
@@ -63,7 +62,6 @@
 #include "plat/gpio.h"
 #include "cpu/mvCpu.h"
 
-
 #if defined(CONFIG_MV_INCLUDE_SDIO)
 #include "sdmmc/mvSdmmc.h"
 #include <plat/mvsdio.h>
@@ -354,7 +352,7 @@ static int __init mv_cpu_count_setup(char *s)
 	while (isspace(*s))
 		s++;
 
-	fail = strict_strtoul(s, 10, &cpu_count);
+	fail = strict_strtoul(s, 10, (unsigned long *)&cpu_count);
 	if(fail == 0)
 	{
 		set_core_count(cpu_count);
@@ -843,7 +841,6 @@ void __init armadaxp_sata_init(struct mv_sata_platform_data *sata_data)
 {
 
 	armadaxp_sata.dev.platform_data = sata_data;
-	sata_data->dram = &armadaxp_mbus_dram_info;
 	platform_device_register(&armadaxp_sata);
 }
 #endif
diff --git a/arch/arm/mach-armadaxp/pci.c b/arch/arm/mach-armadaxp/pci.c
index 6951093..cbc1a85 100644
--- a/arch/arm/mach-armadaxp/pci.c
+++ b/arch/arm/mach-armadaxp/pci.c
@@ -193,9 +193,8 @@ int __init mv_pci_setup(int nr, struct pci_sys_data *sys)
 	if (request_resource(&iomem_resource, &res[1]))
 		printk ("Memory Request resource failed - Pci If %x\n",nr);
  
-        sys->resource[0] = &res[0];
-        sys->resource[1] = &res[1];
-        sys->resource[2] = NULL;
+	pci_add_resource(&sys->resources, &res[0]);
+	pci_add_resource(&sys->resources, &res[1]);
         sys->io_offset   = 0x0;
  
         return 1;
diff --git a/arch/arm/mach-armadaxp/pex.c b/arch/arm/mach-armadaxp/pex.c
index 70ebe9e..a02bf31 100644
--- a/arch/arm/mach-armadaxp/pex.c
+++ b/arch/arm/mach-armadaxp/pex.c
@@ -327,45 +327,35 @@ int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 	sys->map_irq = mv_get_irqmap_func[sys->mv_controller_num];
 	
 	membase = mv_pci_mem_base_get(sys->mv_controller_num);
-	if (mv_is_pci_io_mapped(sys->mv_controller_num))
-	{
-	
+	if (mv_is_pci_io_mapped(sys->mv_controller_num)) {
 		iobase = mv_pci_io_base_get(sys->mv_controller_num);
 		res[index].start = iobase - IO_SPACE_REMAP;
 		res[index].end   = iobase - IO_SPACE_REMAP + mv_pci_io_size_get(sys->mv_controller_num)-1;
 		res[index].name  = "PCIx IO Primary";
 		res[index].flags = IORESOURCE_IO;		
+
 		if (request_resource(&ioport_resource, &res[index]))
-		{	
 			printk ("IO Request resource failed - Pci If %x\n",nr);
-		}
 		else
 			index++;
 	}
+
 	res[index].start = membase;
 	res[index].end   = membase + mv_pci_mem_size_get(sys->mv_controller_num)-1;
 	res[index].name  = "PCIx Memory Primary";
 	res[index].flags = IORESOURCE_MEM;
 
 	if (request_resource(&iomem_resource, &res[index]))
-	{	
 		printk ("Memory Request resource failed - Pci If %x\n",nr);
-	}
  
-	sys->resource[0] = &res[0];
+	pci_add_resource(&sys->resources, &res[0]);
 	if (index > 0) 
-	{
-		sys->resource[1] = &res[1];
-		sys->resource[2] = NULL;
-	}
-	else
-		sys->resource[1] = NULL;
-	sys->io_offset   = 0x0;
+		pci_add_resource(&sys->resources, &res[1]);
 
+	sys->io_offset = 0x0;
 	return 1;
 }
 
-
 struct pci_bus *mv_pex_scan_bus(int nr, struct pci_sys_data *sys)
 {
 	struct pci_ops *ops = &mv_pci_ops;	
diff --git a/arch/arm/mach-armadaxp/time.c b/arch/arm/mach-armadaxp/time.c
index fdf089d..dbcaba4 100644
--- a/arch/arm/mach-armadaxp/time.c
+++ b/arch/arm/mach-armadaxp/time.c
@@ -80,29 +80,17 @@ extern unsigned int master_cpu_id;
 static u32 ticks_per_jiffy;
 static unsigned int soc_timer_id;
 
-static DEFINE_CLOCK_DATA(cd);
-
-
-
-unsigned long long notrace sched_clock(void)
-{
-	u32 cyc = ~MV_REG_READ(TIMER_VAL(soc_timer_id));
-	return cyc_to_sched_clock(&cd, cyc, (u32)~0);
-}
-
-static void notrace axp_update_sched_clock(void)
+static u32 notrace axp_clksrc_read32(void)
 {
 	u32 cyc = ~MV_REG_READ(TIMER_VAL(soc_timer_id));
-	update_sched_clock(&cd, cyc, (u32)~0);
+	return cyc;
 }
 
-static void __init setup_sched_clock(unsigned long tclk)
+static void __init axp_setup_sched_clock(unsigned long tclk)
 {
-	init_sched_clock(&cd, axp_update_sched_clock, 32, tclk);
+	setup_sched_clock(axp_clksrc_read32, 32, tclk);
 }
 
-
-
 /*
  * Clocksource handling.
  */
@@ -120,7 +108,6 @@ static struct clocksource axp_clksrc = {
 	.flags		= CLOCK_SOURCE_IS_CONTINUOUS,
 };
 
-
 /*
  * Clockevent handling.
  */
@@ -270,7 +257,7 @@ void __init axp_time_init(unsigned int fabric_clk)
 
 	ticks_per_jiffy = (fabric_clk + HZ/2) / HZ;
 	
-	setup_sched_clock(fabric_clk);
+	axp_setup_sched_clock(fabric_clk);
 
 	/* Setup free-running clocksource timer (interrupts disabled) */
 	MV_REG_WRITE(TIMER_VAL(soc_timer_id), 0xffffffff);
@@ -360,7 +347,7 @@ static irqreturn_t axp_localtimer_handler(int irq, void *dev_id)
 /*
  * Setup the local clock events for a CPU.
  */
- __cpuinit local_timer_setup(struct clock_event_device *clk)
+int __cpuinit axp_local_timer_setup(struct clock_event_device *clk)
 {
 #if !defined (CONFIG_ARMADA_XP_REV_Z1) || defined (CONFIG_MACH_ARMADA_XP_FPGA)
 	/* FPGA hardcoded to 25Mhz and in DSMP-A0 the referance clock for the timers is 25MHz */
@@ -368,7 +355,7 @@ static irqreturn_t axp_localtimer_handler(int irq, void *dev_id)
 #else
 	unsigned int fabric_clk = mvCpuL2ClkGet(); /* DSMP-Z1 clock is taken from Fabric */
 #endif
-	static cpu0_flag=0;
+	static int cpu0_flag=0;
 	int cpu = smp_processor_id();
 	struct clock_event_device **this_cpu_clk;
 
diff --git a/arch/arm/mm/cache-aurora-l2.c b/arch/arm/mm/cache-aurora-l2.c
index 3e4673d..78c3a9a 100644
--- a/arch/arm/mm/cache-aurora-l2.c
+++ b/arch/arm/mm/cache-aurora-l2.c
@@ -19,6 +19,7 @@
 
 #include <plat/cache-aurora-l2.h>
 #include <asm/io.h>
+#include <asm/cp15.h>
 #include <mach/smp.h>
 #include "ctrlEnv/mvCtrlEnvSpec.h"
 #include "ctrlEnv/mvCtrlEnvLib.h"
diff --git a/arch/arm/mm/idmap.c b/arch/arm/mm/idmap.c
index ab88ed4..69a5262 100644
--- a/arch/arm/mm/idmap.c
+++ b/arch/arm/mm/idmap.c
@@ -59,7 +59,7 @@ static void idmap_add_pud(pgd_t *pgd, unsigned long addr, unsigned long end,
 	} while (pud++, addr = next, addr != end);
 }
 
-static void identity_mapping_add(pgd_t *pgd, unsigned long addr, unsigned long end)
+void identity_mapping_add(pgd_t *pgd, unsigned long addr, unsigned long end)
 {
 	unsigned long prot, next;
 
diff --git a/arch/arm/mm/mmu.c b/arch/arm/mm/mmu.c
index a3ec4f2..6f9c620 100644
--- a/arch/arm/mm/mmu.c
+++ b/arch/arm/mm/mmu.c
@@ -479,6 +479,7 @@ static void __init build_mem_type_table(void)
 			mem_types[MT_MEMORY_NONCACHED].prot_sect |= PMD_SECT_S;
 			mem_types[MT_MEMORY_NONCACHED].prot_pte |= L_PTE_SHARED;
 #endif
+		}
 	}
 
 	/*
diff --git a/arch/arm/plat-armada/cpuidle.c b/arch/arm/plat-armada/cpuidle.c
index 5c42577..a8aa53a 100644
--- a/arch/arm/plat-armada/cpuidle.c
+++ b/arch/arm/plat-armada/cpuidle.c
@@ -24,6 +24,7 @@
 #include <asm/tlbflush.h>
 #include <asm/pgalloc.h>
 #include <asm/sections.h>
+#include <asm/idmap.h>
 #include <linux/export.h>
 #include <asm/sections.h>
 
@@ -134,7 +135,7 @@ void armadaxp_fabric_setup_deepIdle(void)
 }
 
 #ifdef CONFIG_HOTPLUG_CPU
-void armadaxp_fabric_prepare_hotplug(void)
+void __init armadaxp_fabric_prepare_hotplug(void)
 {
 	unsigned int processor_id = hard_smp_processor_id();
 	MV_U32  reg;
diff --git a/fs/xfs/xfs_file.c b/fs/xfs/xfs_file.c
index 6ecaf01..a111685 100644
--- a/fs/xfs/xfs_file.c
+++ b/fs/xfs/xfs_file.c
@@ -412,13 +412,14 @@ xfs_file_splice_from_socket(
                return -EIO;
 
        xfs_ilock(ip, XFS_IOLOCK_EXCL);
-
+#if 0
        new_size = *ppos + count;
 
        xfs_ilock(ip, XFS_ILOCK_EXCL);
        if (new_size > ip->i_size)
                ip->i_new_size = new_size;
        xfs_iunlock(ip, XFS_ILOCK_EXCL);
+#endif
 //     xfs_rw_enter_trace(XFS_SPLICE_WRITE_ENTER, ip,
 //                        pipe, count, *ppos, ioflags);
        ret = generic_splice_from_socket(file, sock, ppos, count);
@@ -429,7 +430,7 @@ xfs_file_splice_from_socket(
        isize = i_size_read(inode);
        if (unlikely(ret < 0 && ret != -EFAULT && *ppos > isize))
                *ppos = isize;
-
+#if 0
        if (*ppos > ip->i_size) {
                xfs_ilock(ip, XFS_ILOCK_EXCL);
                if (*ppos > ip->i_size)
@@ -444,6 +445,7 @@ xfs_file_splice_from_socket(
                        ip->i_d.di_size = ip->i_size;
                xfs_iunlock(ip, XFS_ILOCK_EXCL);
        }
+#endif
        xfs_iunlock(ip, XFS_IOLOCK_EXCL);
        return ret;
 }
diff --git a/kernel/time/tick-sched.c b/kernel/time/tick-sched.c
index 56637da..f87f3d8 100644
--- a/kernel/time/tick-sched.c
+++ b/kernel/time/tick-sched.c
@@ -294,7 +294,7 @@ static void tick_nohz_stop_sched_tick(struct tick_sched *ts)
 	if (unlikely(!cpu_online(cpu))) {
 		if (cpu == tick_do_timer_cpu)
 			tick_do_timer_cpu = TICK_DO_TIMER_NONE;
-			goto end;
+		return;
 	}
 
 	if (unlikely(ts->nohz_mode == NOHZ_MODE_INACTIVE))
-- 
1.7.5.4

