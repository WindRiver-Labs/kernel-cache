From 246370ec26bd898329a2bd019f2cc6767dd227d8 Mon Sep 17 00:00:00 2001
From: Eli Nidam <elini@marvell.com>
Date: Sun, 2 Mar 2014 16:01:53 +0200
Subject: [PATCH 1473/1825] fix: axp: Align MBUS window register to ATAG
 memory value pass to Linux.

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 9f76e421b4ccf2b6100c9c3f002de0de5ab7eacd

           1. The bug is passing to Linux (ATAG) memory size of 3.750GB (0xF0000000) and MBUS bridge register are initialize as
              u-boot configuration to 0xE0000000, this cause the Linux panic error. the fix is update the MBUS bridge windows
              register as ATAG parameter.
           1. Added mvCpuIfMbusWindowSet for set windows MBUG bridge register value.
	   2. when setting the ATAG memory size update the MBUS bridge windows register base and size
	      for 3.750GB (0xF0000000) memory size.

Change-Id: I4682baae038b35a772bf2fa3fc707130afd37c2e
Signed-off-by: Eli Nidam <elini@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6050
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../armada_xp_family/ctrlEnv/sys/mvCpuIf.c         |   28 ++++++++++++++++++++
 1 files changed, 28 insertions(+), 0 deletions(-)
 mode change 100755 => 100644 arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/sys/mvCpuIf.c

diff --git a/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/sys/mvCpuIf.c b/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/sys/mvCpuIf.c
old mode 100755
new mode 100644
index 13fe2a8..4caa477
--- a/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/sys/mvCpuIf.c
+++ b/arch/arm/mach-armadaxp/armada_xp_family/ctrlEnv/sys/mvCpuIf.c
@@ -961,3 +961,31 @@ MV_STATUS mvCpuIfLvdsPadsEnable(MV_BOOL enable)
 
 	return MV_OK;
 }
+/*******************************************************************************
+* mvCpuIfMbusWindowSet
+*
+* DESCRIPTION:
+*	Set Mbus Bridge Window register
+*
+* INPUT:
+*	Windows Base Address
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       None.
+*
+*******************************************************************************/
+MV_VOID mvCpuIfMbusWindowSet(MV_U32 base, MV_U32 size)
+{
+	MV_U32 reg;
+
+	MV_REG_WRITE(MBUS_BRIDGE_WIN_BASE_REG, base);
+	/* Align window size to 64KB */
+	size = ((size / _64K) - 1) << BRIDGWCR_SIZE_OFFS;
+	reg = MV_REG_READ(MBUS_BRIDGE_WIN_CTRL_REG);
+	reg &= ~BRIDGWCR_SIZE_MASK;
+	reg |= (size & BRIDGWCR_SIZE_MASK);
+	MV_REG_WRITE(MBUS_BRIDGE_WIN_CTRL_REG, reg);
+}
-- 
1.7.5.4

