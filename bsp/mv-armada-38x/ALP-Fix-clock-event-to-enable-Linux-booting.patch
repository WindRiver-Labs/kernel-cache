From e5e8f4192fe932d429cf30a9e22b52609d4554b4 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Wed, 1 May 2013 03:01:44 +0300
Subject: [PATCH 0614/1825] ALP: Fix clock event to enable Linux booting

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit a7adc095f748c73c61298e67909e9da5a2d57767

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I53596a924a1da9e3d3cb83b6bcc188f7a203e13b
Reviewed-on: http://vgitil04.il.marvell.com:8080/1706
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/time.c |   19 +++++++++++--------
 1 files changed, 11 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-avantalp/time.c b/arch/arm/mach-avantalp/time.c
index 16cac4b..eabdb9b 100644
--- a/arch/arm/mach-avantalp/time.c
+++ b/arch/arm/mach-avantalp/time.c
@@ -93,27 +93,28 @@ int alp_clkevt_next_event(unsigned long delta, struct clock_event_device *evt)
 
 static void alp_clkevt_mode(enum clock_event_mode mode, struct clock_event_device *evt)
 {
-	unsigned long flags;
+	unsigned long flags, t = 1;
 	u32 u;
 	local_irq_save(flags);
 
 	if (mode == CLOCK_EVT_MODE_PERIODIC || mode == CLOCK_EVT_MODE_ONESHOT) {
 		/* Setup timer to fire at 1/HZ intervals */
-		MV_REG_WRITE(TIMER_RELOAD(1), ticks_per_jiffy - 1);
-		MV_REG_WRITE(TIMER_VAL(1), ticks_per_jiffy - 1);
+		MV_REG_WRITE(TIMER_RELOAD(t), ticks_per_jiffy - 1);
+		MV_REG_WRITE(TIMER_VAL(t), ticks_per_jiffy - 1);
 
 		/* Enable timer */
 		u = MV_REG_READ(TIMER_CTRL);
-		u |= TIMER_EN(1) | TIMER_RELOAD_EN(1);
+		/* u |= TIMER_EN(t) | TIMER_RELOAD_EN(t); */
+		u |= (TIMER_EN(t) | TIMER_RELOAD_EN(t) | TIMER_TURN_25MHZ(t));
 		MV_REG_WRITE(TIMER_CTRL, u);
 	} else {
 		/* Disable timer */
 		u = MV_REG_READ(TIMER_CTRL);
-		u &= ~TIMER_EN(1);
+		u &= ~TIMER_EN(t);
 		MV_REG_WRITE(TIMER_CTRL, u);
 
 		/* Ack pending timer interrupt */
-		MV_REG_WRITE(TIMER_CAUSE, TIMER_INT_CLR(1));
+		MV_REG_WRITE(TIMER_CAUSE, TIMER_INT_CLR(t));
 	}
 
 	local_irq_restore(flags);
@@ -125,6 +126,7 @@ static irqreturn_t alp_timer_interrupt(int irq, void *dev_id)
 {
 	/* Ack timer interrupt */
 	MV_REG_WRITE(TIMER_CAUSE, TIMER_INT_CLR(1));
+
 	alp_clkevt.event_handler(&alp_clkevt);
 	return IRQ_HANDLED;
 }
@@ -244,7 +246,7 @@ static void alp_setup_clockevent(int irq, long rate)
 	evt->min_delta_ns	= clockevent_delta2ns(0x1, evt);
 
 	setup_irq(irq, &alp_timer_irq);
-	clockevents_config_and_register(evt, rate, 0xf, 0xffffffff);
+	clockevents_config_and_register(evt, rate, 0x1, 0xffffffff);
 }
 
 static void __init alp_timer_init(void)
@@ -254,7 +256,8 @@ static void __init alp_timer_init(void)
 #ifdef CONFIG_MACH_AVANTA_LP_FPGA
 	rate = 12500000;
 #else
-	rate = mvCpuL2ClkGet();
+	/* rate = 6250000; */ /* mvCpuL2ClkGet(); */
+	rate = 12500000;
 #endif
 
 	printk("Initializing AvantaLP SoC Timers\n");
-- 
1.7.5.4

