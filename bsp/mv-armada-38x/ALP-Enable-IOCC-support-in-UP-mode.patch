From dcb060f990149f838c184bbd6452c5f4c3a88b3b Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Thu, 11 Apr 2013 10:59:05 +0300
Subject: [PATCH 0578/1825] ALP: Enable IOCC support in UP mode

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 7bc00da8ddb8672363dfe03d1a5d23605a818d95

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I64e219f1d064d502120abe21a6fd34db1c1d961f
Reviewed-on: http://vgitil04.il.marvell.com:8080/1548
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/kernel/smp_scu.c     |    2 +-
 arch/arm/mach-avantalp/core.c |   20 ++++++++++++++++++--
 arch/arm/mm/Kconfig           |    1 +
 3 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/arch/arm/kernel/smp_scu.c b/arch/arm/kernel/smp_scu.c
index 8f5dd79..6542503 100644
--- a/arch/arm/kernel/smp_scu.c
+++ b/arch/arm/kernel/smp_scu.c
@@ -30,6 +30,7 @@ unsigned int __init scu_get_core_count(void __iomem *scu_base)
 	unsigned int ncores = __raw_readl(scu_base + SCU_CONFIG);
 	return (ncores & 0x03) + 1;
 }
+#endif
 
 /*
  * Enable the SCU
@@ -61,7 +62,6 @@ void scu_enable(void __iomem *scu_base)
 	 */
 	flush_cache_all();
 }
-#endif
 
 /*
  * Set the executing CPUs power mode as defined.  This will be in
diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index 36fd8b9..607179d 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -20,6 +20,7 @@
 #include <linux/device.h>
 #include <linux/string.h>
 #include <linux/mbus.h>
+#include <asm/smp_scu.h>
 #include <asm/setup.h>
 #include <asm/mach-types.h>
 
@@ -586,7 +587,21 @@ extern void printascii(const char *);
 
 extern MV_TARGET_ATTRIB mvTargetDefaultsArray[];
 
-static void __init l2_cache_init(void)
+/*
+ * All combinations of IOCC/SMP/UP should be supported:
+ *     UP  + HWCC (Hardware Cache Coherency)
+ *     UP  + SWCC (Software Cache Coherency)
+ *     SMP + HWCC
+ *     SMP + SWCC
+ */
+static void __init alp_iocc_init(void)
+{
+#if !defined(CONFIG_SMP) && defined(CONFIG_AURORA_IO_CACHE_COHERENCY)
+	scu_enable(INTER_REGS_VIRT_BASE + A9_MPCORE_SCU);
+#endif
+}
+
+static void __init alp_l2_cache_init(void)
 {
 #ifdef CONFIG_CACHE_L2X0
 	void __iomem *l2x0_base =
@@ -607,7 +622,8 @@ static void __init board_init(void)
 	mvTargetDefaultsArray[PEX0_MEM].attrib = 0xD8;
 	setup_cpu_mbus();
 
-	l2_cache_init();
+	alp_iocc_init();
+	alp_l2_cache_init();
 
 	/* Init the CPU windows setting and the access protection windows. */
 	if (mvCpuIfInit(mv_sys_map())) {
diff --git a/arch/arm/mm/Kconfig b/arch/arm/mm/Kconfig
index 1ab6eea..ba566c7 100644
--- a/arch/arm/mm/Kconfig
+++ b/arch/arm/mm/Kconfig
@@ -1183,6 +1183,7 @@ config AURORA_IO_CACHE_COHERENCY
 	bool "Enable Marvell Aurora I/O cache coherency"
 	depends on ARCH_ARMADA_XP || ARCH_ARMADA370 || ARCH_AVANTA_LP
 	default y
+	select HAVE_ARM_SCU
 	help
 	  This option enables the hardware mechanism for I/O cache coherency.
 
-- 
1.7.5.4

