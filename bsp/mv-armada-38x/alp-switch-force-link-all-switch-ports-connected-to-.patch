From 6b5eda5a27320175b732f1b0c157bbecc0d69fdf Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Tue, 30 Jul 2013 10:26:05 +0300
Subject: [PATCH 0898/1825] alp: switch: force link all switch ports connected
 to GBE ports

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit acd33c3ef64a22019827bad05f21b903a6c26b0c

	- Add new field to switch's platform data for indicating switch ports that their link is forced
	- In switch driver force link to such ports
	- The relevant ports are given by mvBoard API

Change-Id: I18aab5713c5a3bc3e8601931ea821edf81f61ea3
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2879
Reviewed-by: Igor Patrik <igorp@marvell.com>
Tested-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/core.c                      |    1 +
 .../mv_drivers_lsp/mv_switch/mv_switch.c           |    7 ++++---
 include/linux/mv_switch.h                          |    1 +
 3 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index 7912d69..5d6d199 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -726,6 +726,7 @@ static void mv_switch_pdev_register(struct platform_device *pdev)
 	plat_data->switch_cpu_port = mvBoardSwitchCpuPortGet(plat_data->index);
 	plat_data->smi_scan_mode = mvBoardSmiScanModeGet(plat_data->index);
 	plat_data->connected_port_mask = mvBoardSwitchPortsMaskGet(0);
+	plat_data->forced_link_port_mask = mvBoardSwitchPortForceLinkGet(0);
 	plat_data->switch_irq = IRQ_GLOBAL_ETH_COMPLEX;
 
 	if (mvBoardMacSpeedGet(plat_data->gbe_port) == BOARD_MAC_SPEED_2000M)
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
index 44abeba..2f31f0c 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_switch/mv_switch.c
@@ -625,8 +625,8 @@ int mv_switch_load(struct mv_switch_pdata *plat_data)
 		if (!MV_BIT_CHECK(plat_data->port_mask, p))
 			continue;
 
-		/* Force link for switch's CPU port */
-		if (p == plat_data->switch_cpu_port) {
+		/* Force link for ports that connected to GBE ports */
+		if (MV_BIT_CHECK(plat_data->forced_link_port_mask, p)) {
 			/* Switch port connected to GMAC - force link UP - 1000 Full with FC */
 			printk(KERN_ERR "    o Setting Switch Port #%d connected to GMAC port for 1000 Full with FC\n", p);
 			if (gpcsSetForceSpeed(qd_dev, p, PORT_FORCE_SPEED_1000_MBPS) != GT_OK) {
@@ -1046,7 +1046,8 @@ unsigned int mv_switch_link_detection_init(struct mv_switch_pdata *plat_data)
 	if (!link_init_done) {
 		/* Enable Phy Link Status Changed interrupt at Phy level for the all enabled ports */
 		for (p = 0; p < qd_dev->numOfPorts; p++) {
-			if (MV_BIT_CHECK(connected_phys_mask, p) && (p != qd_cpu_port)) {
+			if (MV_BIT_CHECK(connected_phys_mask, p) &&
+					(!MV_BIT_CHECK(plat_data->forced_link_port_mask, p))) {
 				if (gprtPhyIntEnable(qd_dev, p, (GT_LINK_STATUS_CHANGED)) != GT_OK)
 					printk(KERN_ERR "gprtPhyIntEnable failed port %d\n", p);
 			}
diff --git a/include/linux/mv_switch.h b/include/linux/mv_switch.h
index aa0d360..b2c8a20 100644
--- a/include/linux/mv_switch.h
+++ b/include/linux/mv_switch.h
@@ -81,6 +81,7 @@ struct mv_switch_pdata {
 	int vid;
 	int port_mask;
 	int connected_port_mask;
+	int forced_link_port_mask;
 	int mtu;
 	int smi_scan_mode;
 	int qsgmii_module;
-- 
1.7.5.4

