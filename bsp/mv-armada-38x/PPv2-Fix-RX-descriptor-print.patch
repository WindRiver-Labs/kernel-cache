From 501d77a01b362b7177f63340fe78f1ebff028ca2 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Mon, 10 Jun 2013 18:53:51 -0400
Subject: [PATCH 0720/1825] PPv2: Fix RX descriptor print

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 80d738a3aa1663b578ed9144c5c54703604b2b49

	Fix function to get VLAN information string from RX descriptor
	Add new function to get L2 information string from RX descriptor

Change-Id: Ib2aa648533c7cc4c529d6a4d784e32c3a9c36b12
Reviewed-on: http://vgitil04.il.marvell.com:8080/2210
Reviewed-by: Jonatan Farhadian <yonif@marvell.com>
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |    8 ++++--
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c     |   25 ++++++++++++++++----
 arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h     |    1 +
 3 files changed, 26 insertions(+), 8 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 7a4b237..d3dd028 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -564,7 +564,7 @@ int mv_eth_ctrl_port_buf_num_set(int port, int long_num, int short_num)
 	struct eth_port *pp = mv_eth_port_by_id(port);
 
 	if (pp == NULL) {
-		printk(KERN_INFO "port doenst not exist (%d) in %s\n" , port, __func__);
+		printk(KERN_INFO "port doesn't not exist (%d) in %s\n" , port, __func__);
 		return -EINVAL;
 	}
 
@@ -1038,8 +1038,11 @@ void mv_eth_rx_desc_print(struct pp2_rx_desc *desc)
 	       (desc->status & PP2_RX_L3_OFFSET_MASK) >> PP2_RX_L3_OFFSET_OFFS,
 	       (desc->status & PP2_RX_IP_HLEN_MASK) >> PP2_RX_IP_HLEN_OFFS);
 
+	printk(KERN_CONT "L2=%s, ",
+		mvPrsL2InfoStr((desc->parserInfo & PP2_RX_L2_CAST_MASK) >> PP2_RX_L2_CAST_OFFS));
+
 	printk(KERN_CONT "VLAN=");
-	printk(KERN_CONT "0x%s, ",
+	printk(KERN_CONT "%s, ",
 		mvPrsVlanInfoStr((desc->parserInfo & PP2_RX_VLAN_INFO_MASK) >> PP2_RX_VLAN_INFO_OFFS));
 
 	printk(KERN_CONT "L3=");
@@ -3325,7 +3328,6 @@ void mv_eth_config_show(void)
 
 #if defined(CONFIG_MV_INCLUDE_SWITCH)
 	printk(KERN_ERR "  o Switch support enabled\n");
-
 #endif /* CONFIG_MV_INCLUDE_SWITCH */
 
 	printk(KERN_ERR "\n");
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c
index ec7b0b0..8109ddd 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.c
@@ -156,7 +156,22 @@ static void mvPp2PrsMatchMh(MV_PP2_PRS_ENTRY *pe, unsigned short mh)
  ******************************************************************************
  */
 
-static MV_BOOL mvPrsMacRangeEquals(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
+char *mvPrsL2InfoStr(unsigned int l2_info)
+{
+	switch (l2_info << RI_L2_CAST_OFFS) {
+	case RI_L2_UCAST:
+		return "Ucast";
+	case RI_L2_MCAST:
+		return "Mcast";
+	case RI_L2_BCAST:
+		return "Bcast";
+	default:
+		return "Unknown";
+	}
+	return NULL;
+}
+
+static MV_BOOL mvPrsMacRangeEquals(MV_PP2_PRS_ENTRY *pe, MV_U8 *da, MV_U8 *mask)
 {
 	int		index;
 	unsigned char 	tcamByte, tcamMask;
@@ -173,7 +188,7 @@ static MV_BOOL mvPrsMacRangeEquals(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
 	return MV_TRUE;
 }
 
-static MV_BOOL mvPrsMacRangeIntersec(MV_PP2_PRS_ENTRY *pe, MV_U8* da, MV_U8* mask)
+static MV_BOOL mvPrsMacRangeIntersec(MV_PP2_PRS_ENTRY *pe, MV_U8 *da, MV_U8 *mask)
 {
 	int		index;
 	unsigned char 	tcamByte, tcamMask, commonMask;
@@ -234,9 +249,9 @@ static MV_PP2_PRS_ENTRY *mvPrsMacDaRangeFind(int portMap, unsigned char *da, uns
 
 static MV_PP2_PRS_ENTRY *mvPrsMacDaFind(int port, unsigned char *da)
 {
-	unsigned char mask[6];
+	unsigned char mask[MV_MAC_ADDR_SIZE];
 
-	mask[0] = 0xff; mask[1] = 0xff; mask[2] = 0xff; mask[3] = 0xff; mask[4] = 0xff; mask[5] = 0xff;
+	mask[0] = mask[1] = mask[2] = mask[3] = mask[4] = mask[5] = 0xff;
 
 	/* Scan TCAM and see if entry with this <MAC DA, port> already exist */
 	return mvPrsMacDaRangeFind((1 << port), da, mask, PRS_UDF_MAC_DEF);
@@ -1025,7 +1040,7 @@ int mvPp2PrsTagModeSet(int port, int type)
 
 char *mvPrsVlanInfoStr(unsigned int vlan_info)
 {
-	switch (vlan_info) {
+	switch (vlan_info << RI_VLAN_OFFS) {
 	case RI_VLAN_NONE:
 		return "None";
 	case RI_VLAN_SINGLE:
diff --git a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h
index b634671..ae9b790 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/prs/mvPp2Prs.h
@@ -170,6 +170,7 @@ int mvPp2PrsTripleVlan(unsigned short tpid1, unsigned short tpid2, unsigned shor
 int mvPp2PrsDoubleVlan(unsigned short tpid1, unsigned short tpid2, unsigned int portBmp, int add);
 int mvPp2PrsSingleVlan(unsigned short tpid, unsigned int portBmp, int add);
 char *mvPrsVlanInfoStr(unsigned int vlan_info);
+char *mvPrsL2InfoStr(unsigned int l2_info);
 /*
 int mvPrsMacDaDrop(int port, unsigned char *da, int add);
 */
-- 
1.7.5.4

