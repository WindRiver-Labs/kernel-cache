From 974a6a212ffed22e464a6bdea3495a195a325483 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Thu, 1 Aug 2013 10:40:30 +0300
Subject: [PATCH 0910/1825] timer: alp: clean timer init

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 9981545c34acbf0c3aa8e8451dcd5955143693b5

	The commit 4cf268f5e308063608799a937298c368c9b73983
	("alp: timer: add support for different timer frequencies")
	fixed the timer frequencies support but introduced new issue:

	mvTwsiRead() started to fail in the below code flow:
		mvCtrlEnvInit() ->
		mvCtrlSysConfigInit() ->
		mvCtrlBoardConfigGet() ->
		mvBoardTwsiGet() ->
		mvTwsiRead()

	Hence, this commit returns initialization of Marvell board
	and control environment in machine init function (which is usual place).
	This fixes TWSI read failures in mvBoardTwsiGet().

	To support different timer frequencies, new function mvBoardL2ClkGetRaw()
	is added. It returns the L2 Cache clock before Marvell board and control
	environment are initialized.

Change-Id: Ief55ef4dbb467b5aa160cc3d7dcccec9bb0b2a23
Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2910
Reviewed-by: Igor Patrik <igorp@marvell.com>
Tested-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   33 ++++++++++++++++++++
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    1 +
 arch/arm/mach-avantalp/config/mvSysHwConfig.h      |    1 +
 arch/arm/mach-avantalp/core.c                      |    7 ++++
 arch/arm/mach-avantalp/time.c                      |   31 +++++++-----------
 5 files changed, 54 insertions(+), 19 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 0188113..72b387b 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -473,6 +473,39 @@ MV_U32 mvBoardTclkGet(MV_VOID)
 }
 
 /*******************************************************************************
+* mvBoardL2ClkGetRaw
+*
+* DESCRIPTION:
+*	This routine extract the L2 Cache frequency/clock.
+*
+* INPUT:
+*	None.
+*
+* OUTPUT:
+*	None.
+*
+* RETURN:
+*	32bit clock cycles in Hertz.
+*
+*******************************************************************************/
+MV_U32 mvBoardL2ClkGetRaw(MV_VOID)
+{
+#ifdef CONFIG_MACH_AVANTA_LP_FPGA
+	return MV_FPGA_L2_CLK;
+#else
+	MV_U32 clkSelect;
+	MV_FREQ_MODE freq[] = MV_SAR_FREQ_MODES;
+
+	clkSelect = (MV_REG_READ(MPP_SAMPLE_AT_RESET(1)));
+
+	clkSelect = clkSelect & (0x1f << 17);
+	clkSelect >>= 17;
+
+	return 1000000 * freq[clkSelect].l2Freq;
+#endif
+}
+
+/*******************************************************************************
 * mvBoardSysClkGet - Get the board SysClk (CPU bus clock , i.e. DDR clock)
 *
 * DESCRIPTION:
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index 0def030..e5e1688 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -387,6 +387,7 @@ MV_STATUS mvBoardConfigTypeGet(MV_CONFIG_TYPE_ID configClass, MV_BOARD_CONFIG_TY
 MV_STATUS mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_TYPE_ID ioClass, MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo);
 MV_STATUS mvBoardExtPhyBufferSelect(MV_BOOL enable);
 MV_U32 mvBoardTclkGet(MV_VOID);
+MV_U32 mvBoardL2ClkGetRaw(MV_VOID);
 MV_U32 mvBoardSysClkGet(MV_VOID);
 MV_U32 mvBoardDebugLedNumGet(MV_U32 boardId);
 MV_VOID mvBoardDebugLed(MV_U32 hexNum);
diff --git a/arch/arm/mach-avantalp/config/mvSysHwConfig.h b/arch/arm/mach-avantalp/config/mvSysHwConfig.h
index e7464dc..238feec 100755
--- a/arch/arm/mach-avantalp/config/mvSysHwConfig.h
+++ b/arch/arm/mach-avantalp/config/mvSysHwConfig.h
@@ -37,6 +37,7 @@ disclaimer.
 #define CONFIG_SYS_FPGA_DRAM_SIZE	_256M
 #define MV_FPGA_SYS_CLK			25000000
 #define MV_FPGA_CORE_CLK		12500000
+#define MV_FPGA_L2_CLK			12500000
 #endif
 
 #define INTER_REGS_BASE			INTER_REGS_VIRT_BASE
diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index 5d6d199..4ee3d99 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -1415,6 +1415,13 @@ static void __init alp_l2x0_cache_init(void)
 
 static void __init alp_board_init(void)
 {
+	mvBoardEnvInit();
+
+	if (mvCtrlEnvInit()) {
+		pr_err("%s: Error: ctrlEnv init failed.\n", __func__);
+		return;
+	}
+
 #ifdef CONFIG_MACH_AVANTA_LP_FPGA
 	/* Replace PCI-0 Attribute for FPGA 0xE => 0xD */
 	mvTargetDefaultsArray[PEX0_MEM].attrib = 0xD8;
diff --git a/arch/arm/mach-avantalp/time.c b/arch/arm/mach-avantalp/time.c
index 7f9d9ac..71c47e2 100644
--- a/arch/arm/mach-avantalp/time.c
+++ b/arch/arm/mach-avantalp/time.c
@@ -46,6 +46,12 @@
 static int event_timer_id;
 static int source_timer_id;
 
+/*
+ * Timer rate/frequency for ARM CA9 timers and Marvell SoC timers.
+ */
+static u32 ca9_twd_rate;
+static u32 mv_twd_rate;
+
 static u32 ticks_per_jiffy;
 
 static u32 notrace alp_clksrc_read32(void)
@@ -192,7 +198,7 @@ static void __init alp_twd_init(void)
 	if (err)
 		pr_err("twd_local_timer_register failed %d\n", err);
 
-	clk_twd_lookup.clk->rate = mvCpuL2ClkGet();
+	clk_twd_lookup.clk->rate = ca9_twd_rate;
 	clkdev_add(&clk_twd_lookup);
 }
 #else
@@ -252,24 +258,11 @@ static void __init alp_timer_init(void)
 {
 	u32 rate;
 
-	/*
-	 * Perform basic SoC HAL init, before accessing
-	 * HAL functions, e.g. mvCpuL2ClkGet().
-	 */
-	mvBoardEnvInit();
-	if (mvCtrlEnvInit()) {
-		pr_err("%s: Error: ctrlEnv init failed.\n", __func__);
-		return;
-	}
-
-#ifdef CONFIG_MACH_AVANTA_LP_FPGA
-	rate = 12500000;
-#else
-	rate = mvCpuL2ClkGet() / 2;
-#endif
+	ca9_twd_rate = mvBoardL2ClkGetRaw();
+	mv_twd_rate = ca9_twd_rate / 2;
 
 	printk("Initializing AvantaLP SoC Timers\n");
-	ticks_per_jiffy = (rate + HZ/2) / HZ;
+	ticks_per_jiffy = (mv_twd_rate + HZ/2) / HZ;
 
 	alp_clear_timer_config();
 
@@ -277,8 +270,8 @@ static void __init alp_timer_init(void)
 	event_timer_id = 1;
 	source_timer_id = 0;
 
-	alp_setup_clocksource(source_timer_id, rate);
-	alp_setup_clockevent(IRQ_GLOBAL_TIMER(event_timer_id), rate);
+	alp_setup_clocksource(source_timer_id, mv_twd_rate);
+	alp_setup_clockevent(IRQ_GLOBAL_TIMER(event_timer_id), mv_twd_rate);
 
 	alp_twd_init();
 }
-- 
1.7.5.4

