From 38837d09142adc604bf4da7117801e9435420e88 Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Tue, 4 Jun 2013 17:50:49 +0300
Subject: [PATCH 0702/1825] PPv2: ethtool support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 58b263052c825c2da64e4aff075b8d6fb5756ead

Change-Id: I06703f9f6bc5deace2da4cf00a59bdc81a3445af
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2145
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/Makefile                    |    2 +-
 .../mv_drivers_lsp/mv_pp2/net_dev/Makefile         |   27 ------
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c   |   75 ++++++++++++-----
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c    |   90 +-------------------
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_mux_netdev.c  |    2 -
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |   74 +++++++---------
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |    5 +-
 7 files changed, 91 insertions(+), 184 deletions(-)
 delete mode 100644 arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/Makefile

diff --git a/arch/arm/mach-avantalp/Makefile b/arch/arm/mach-avantalp/Makefile
index 17a85c3..1751fe0 100644
--- a/arch/arm/mach-avantalp/Makefile
+++ b/arch/arm/mach-avantalp/Makefile
@@ -162,7 +162,7 @@ obj-$(CONFIG_MV_ETH_PP2)		+= $(LSP_CLS_DIR)/cls_sysfs.o \
 obj-$(CONFIG_MV_ETH_PP2)		+= $(LSP_CLS_DIR)/cls_mc_sysfs.o
 obj-$(CONFIG_MV_ETH_PP2)		+= $(LSP_PME_DIR)/pme_sysfs.o
 obj-$(CONFIG_MV_ETH_PP2)		+= $(LSP_PLCR_DIR)/plcr_sysfs.o
-obj-$(CONFIG_MV_ETH_TOOL)		+= $(LSP_NET_DEV_DIR)/mv_eth_tool.o
+obj-$(CONFIG_MV_ETH_PP2)		+= $(LSP_NET_DEV_DIR)/mv_eth_tool.o
 obj-$(CONFIG_MV_ETH_PP2)		+= $(LSP_NET_DEV_DIR)/mv_mux_netdev.o $(LSP_NET_DEV_DIR)/mv_mux_sysfs.o
 obj-$(CONFIG_MV_INCLUDE_SWITCH)		+= $(LSP_NET_DEV_DIR)/mv_gw_mgr.o
 endif
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/Makefile b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/Makefile
deleted file mode 100644
index bf33d29..0000000
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/Makefile
+++ /dev/null
@@ -1,27 +0,0 @@
-#
-# Makefile for the Marvell Gigabit Ethernet driver
-#
-
-ifeq ($(CONFIG_ARCH_FEROCEON),y)
-	include $(srctree)/$(MACHINE)/config/mvRules.mk
-endif
-
-ifeq ($(CONFIG_ARCH_ARMADA370),y)
-	include $(srctree)/$(MACHINE)/config/mvRules.mk
-endif
-
-ifeq ($(CONFIG_ARCH_ARMADA_XP),y)
-	include $(srctree)/arch/arm/mach-armadaxp/config/mvRules.mk
-endif
-
-#obj-$(CONFIG_MV_ETHERNET) += mv_netdev.o mv_ethernet.o mv_eth_sysfs.o
-#obj-$(CONFIG_MV_ETH_PP2) += mv_netdev.o mv_ethernet.o
-#obj-$(CONFIG_MV_PON)      += mv_pon_sysfs.o
-#obj-$(CONFIG_MV_ETH_SWITCH) +=  mv_eth_switch.o
-#obj-$(CONFIG_MV_ETH_TOOL) += mv_eth_tool.o
-
-obj-$(CONFIG_MV_ETH_PP2) 		+= $(LSP_NET_DEV_DIR)/mv_netdev.o $(LSP_NET_DEV_DIR)/mv_ethernet.o
-obj-$(CONFIG_MV_ETH_SWITCH) 		+= $(LSP_NET_DEV_DIR)/mv_eth_switch.o
-obj-$(CONFIG_MV_ETH_PP2)                 += $(LSP_BM_DIR)/mv_eth_bm.o
-obj-$(CONFIG_MV_ETH_PP2) 	        += $(LSP_PRS_DIR)/prs_sysfs.o
-obj-$(CONFIG_MV_ETH_PP2) 	        += $(LSP_CLS_DIR)/cls_sysfs.o $(LSP_CLS_DIR)/cls2_sysfs.o
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c
index ead4b1a..9dbba68 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_sysfs.c
@@ -39,33 +39,33 @@ disclaimer.
 
 static struct kobject *pp2_kobj;
 
-
 static ssize_t mv_eth_help(char *buf)
 {
 	int off = 0;
 
-	off += sprintf(buf+off, "cd                             bm            - move to BM sysfs directory\n");
-	off += sprintf(buf+off, "cd                             napi          - move to NAPI groups API sysfs directory\n");
-	off += sprintf(buf+off, "cd                             rx            - move to RX sysfs directory\n");
-	off += sprintf(buf+off, "cd                             tx            - move to TX sysfs directory\n");
-	off += sprintf(buf+off, "cd                             tx_sched      - move to TX Scheduler sysfs directory\n");
-	off += sprintf(buf+off, "cd                             pon           - move to PON sysfs directory\n");
-	off += sprintf(buf+off, "cd                             pme           - move to PME sysfs directory\n");
-	off += sprintf(buf+off, "cd                             qos           - move to QoS sysfs directory\n\n");
-
-	off += sprintf(buf+off, "cat                            addrDec       - print address decode registers\n");
-	off += sprintf(buf+off, "echo p {0|1|2|3}             > tag           - None[3], Use Marvell Header[1], use DSA tag[2], Use EDSA tag[3]\n");
-	off += sprintf(buf+off, "echo p {0|1}                 > etypeDsaMod   - EtherType DSA[0], EtherType EDSA[1],meaningless if port in DSA/EDSA mode\n");
-	off += sprintf(buf+off, "echo [hex]                   > etypeDsa      - Set new DSA etherType value, ,meaningless if all ports in DSA/EDSA mode\n");
-	off += sprintf(buf+off, "echo {0|1}                   > pnc           - enable / disable Parser and Classifier access\n");
-	off += sprintf(buf+off, "echo [p]                     > port          - show a port info\n");
-	off += sprintf(buf+off, "echo [p]                     > cntrs         - show a port MIB counters\n");
+	off += sprintf(buf+off, "cd                 bm            - move to BM sysfs directory\n");
+	off += sprintf(buf+off, "cd                 napi          - move to NAPI groups API sysfs directory\n");
+	off += sprintf(buf+off, "cd                 rx            - move to RX sysfs directory\n");
+	off += sprintf(buf+off, "cd                 tx            - move to TX sysfs directory\n");
+	off += sprintf(buf+off, "cd                 tx_sched      - move to TX Scheduler sysfs directory\n");
+	off += sprintf(buf+off, "cd                 pon           - move to PON sysfs directory\n");
+	off += sprintf(buf+off, "cd                 pme           - move to PME sysfs directory\n");
+	off += sprintf(buf+off, "cd                 qos           - move to QoS sysfs directory\n\n");
+
+	off += sprintf(buf+off, "cat                addrDec       - print address decode registers\n");
+	off += sprintf(buf+off, "echo p {0|1|2|3} > tag           - None[0], Marvell Header[1], DSA tag[2], EDSA tag[3]\n");
+	off += sprintf(buf+off, "echo p {0|1}     > etypeDsaMod   - Set DSA etherType mode: DSA[0], EDSA[1]\n");
+	off += sprintf(buf+off, "echo [hex]       > etypeDsa      - Set new DSA etherType value\n");
+	off += sprintf(buf+off, "echo {0|1}       > pnc           - enable / disable Parser and Classifier access\n");
+	off += sprintf(buf+off, "echo [p]         > port          - show port info\n");
+	off += sprintf(buf+off, "echo [if_name]   > netdev        - show <if_name> net_device status\n");
+	off += sprintf(buf+off, "echo [p]         > cntrs         - show port MIB counters\n");
 #ifdef CONFIG_MV_ETH_DEBUG_CODE
-	off += sprintf(buf+off, "echo [p] [hex]               > debug         - bit0:rx, bit1:tx, bit2:isr, bit3:poll, bit4:dump, bit5:buff_hdr\n");
+	off += sprintf(buf+off, "echo [p] [hex]   > debug         - bit0:rx, bit1:tx, bit2:isr, bit3:poll, bit4:dump, bit5:buff_hdr\n");
 #endif
-	off += sprintf(buf+off, "echo [p]                     > stats         - show port [p] statistics\n");
-	off += sprintf(buf+off, "echo [p]                     > isrRegs       - show ISR registers for port <p> range [0..max]\n");
-	off += sprintf(buf+off, "echo [p]                     > dropCntrs     - show drop counters for port <p> range [0..max]\n");
+	off += sprintf(buf+off, "echo [p]         > stats         - show port [p] statistics\n");
+	off += sprintf(buf+off, "echo [p]         > isrRegs       - show ISR registers for port <p> range [0..max]\n");
+	off += sprintf(buf+off, "echo [p]         > dropCntrs     - show drop counters for port <p> range [0..max]\n");
 
 	return off;
 }
@@ -168,6 +168,37 @@ static ssize_t mv_eth_2_hex_store(struct device *dev,
 	return err ? -EINVAL : len;
 }
 
+static ssize_t mv_eth_netdev_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t len)
+{
+	const char *name = attr->attr.name;
+	int err = 0;
+	char dev_name[IFNAMSIZ];
+	struct net_device *netdev;
+
+	if (!capable(CAP_NET_ADMIN))
+		return -EPERM;
+
+	sscanf(buf, "%s", dev_name);
+	netdev = dev_get_by_name(&init_net, dev_name);
+	if (netdev == NULL) {
+		printk(KERN_ERR "%s: network interface <%s> doesn't exist\n", __func__, dev_name);
+		err = 1;
+	} else {
+		if (!strcmp(name, "netdev"))
+			mv_eth_netdev_print(netdev);
+		else {
+			err = 1;
+			printk(KERN_ERR "%s: illegal operation <%s>\n", __func__, attr->attr.name);
+		}
+		dev_put(netdev);
+	}
+	if (err)
+		printk(KERN_ERR "%s: error %d\n", __func__, err);
+
+	return err ? -EINVAL : len;
+}
+
 static ssize_t mv_eth_reg_store(struct device *dev,
 				   struct device_attribute *attr, const char *buf, size_t len)
 {
@@ -220,6 +251,7 @@ static DEVICE_ATTR(etypeDsa,	S_IWUSR, NULL, mv_eth_reg_store);
 
 static DEVICE_ATTR(port,	S_IWUSR, NULL, mv_eth_port_store);
 static DEVICE_ATTR(cntrs,	S_IWUSR, NULL, mv_eth_port_store);
+static DEVICE_ATTR(netdev,	S_IWUSR, NULL, mv_eth_netdev_store);
 
 static DEVICE_ATTR(regRead,       S_IWUSR, NULL, mv_eth_reg_store);
 static DEVICE_ATTR(regWrite,      S_IWUSR, NULL, mv_eth_reg_store);
@@ -232,6 +264,7 @@ static struct attribute *mv_eth_attrs[] = {
 #endif
 	&dev_attr_port.attr,
 	&dev_attr_cntrs.attr,
+	&dev_attr_netdev.attr,
 	&dev_attr_isrRegs.attr,
 	&dev_attr_dropCntrs.attr,
 	&dev_attr_stats.attr,
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c
index 1fd90bd..ae2b4c1 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_eth_tool.c
@@ -782,38 +782,15 @@ int mv_eth_tool_get_stats_count(struct net_device *netdev)
 static int mv_eth_tool_get_rxfh_indir(struct net_device *netdev,
 							struct ethtool_rxfh_indir *indir)
 {
-/*HW support in PPv2 step 2 */
-#if defined(MV_ETH_PNC_LB)
-	struct eth_port 	*priv = MV_ETH_PRIV(netdev);
-	size_t copy_size =
-		min_t(size_t, indir->size, ARRAY_SIZE(priv->rx_indir_table));
-
-	indir->size = ARRAY_SIZE(priv->rx_indir_table);
-
-	memcpy(indir->ring_index, priv->rx_indir_table,
-	       copy_size * sizeof(indir->ring_index[0]));
-	return 0;
-#else
+	/*HW support in PPv2 step 2 */
 	return -EOPNOTSUPP;
-#endif
 }
 
 static int mv_eth_tool_set_rxfh_indir(struct net_device *netdev,
 							   const struct ethtool_rxfh_indir *indir)
 {
-/*HW support in PPv2 step 2 */
-#if defined(MV_ETH_PNC_LB)
-	int i;
-	struct eth_port 	*priv = MV_ETH_PRIV(netdev);
-	for (i = 0; i < indir->size; i++) {
-		priv->rx_indir_table[i] = indir->ring_index[i];
-		/* TODO support in PPv2 parser and classifier sw - Step 2 */
-		/* mvPncLbRxqSet(i, priv->rx_indir_table[i]);*/
-	}
-	return 0;
-#else
+	/*HW support in PPv2 step 2 */
 	return -EOPNOTSUPP;
-#endif
 }
 
 static int mv_eth_tool_get_rxnfc(struct net_device *dev, struct ethtool_rxnfc *info,
@@ -828,60 +805,6 @@ static int mv_eth_tool_get_rxnfc(struct net_device *dev, struct ethtool_rxnfc *i
 }
 
 /******************************************************************************
-* mv_eth_tool_set_rx_ntuple
-* Description:
-*	ethtool set mapping from 2t/5t rule to rxq/drop
-*	ignore mask parameters (assume mask=0xFF for each byte provided)
-*	support only tcp4 / udp4 protocols
-*	support only full 2t/5t rules:
-*		** 2t - must provide src-ip, dst-ip
-*		** 5t - must provide src-ip, dst-ip, src-port, dst-port
-* INPUT:
-*	netdev		Network device structure pointer
-*	ntuple
-* OUTPUT
-*	None
-* RETURN:
-*
-*******************************************************************************/
-static int mv_eth_tool_set_rx_ntuple(struct net_device *dev, struct ethtool_rx_ntuple *ntuple)
-{
-/*TODO*/
-	unsigned int sip, dip, ports, sport, dport, proto;
-	struct eth_port *pp;
-
-	return -EOPNOTSUPP;
-
-	if ((ntuple->fs.flow_type != TCP_V4_FLOW) && (ntuple->fs.flow_type != UDP_V4_FLOW))
-		return -EOPNOTSUPP;
-
-	if ((ntuple->fs.action >= CONFIG_MV_ETH_RXQ) || (ntuple->fs.action < ETHTOOL_RXNTUPLE_ACTION_CLEAR))
-		return -EINVAL;
-
-	if (ntuple->fs.flow_type == TCP_V4_FLOW)
-		proto = 6;/*tcp*/
-	else
-		proto = 17;/*udp*/
-
-	sip = ntuple->fs.h_u.tcp_ip4_spec.ip4src;
-	dip = ntuple->fs.h_u.tcp_ip4_spec.ip4dst;
-	sport = ntuple->fs.h_u.tcp_ip4_spec.psrc;
-	dport = ntuple->fs.h_u.tcp_ip4_spec.pdst;
-	if (!sip || !dip)
-		return -EINVAL;
-
-	pp = MV_ETH_PRIV(dev);
-	if (!sport || !dport) {/*2-tuple*/
-		/*pnc_ip4_2tuple_rxq(pp->port, sip, dip, ntuple->fs.action);*/
-	} else {
-		ports = (dport << 16) | ((sport << 16) >> 16);
-		/*pnc_ip4_5tuple_rxq(pp->port, sip, dip, ports, proto, ntuple->fs.action);*/
-	}
-
-	return 0;
-}
-
-/******************************************************************************
 * mv_eth_tool_get_ethtool_stats
 * Description:
 *	ethtool get statistics
@@ -914,14 +837,6 @@ const struct ethtool_ops mv_eth_tool_ops = {
 	.set_ringparam 				= mv_eth_tool_set_ringparam,
 	.get_pauseparam				= mv_eth_tool_get_pauseparam,
 	.set_pauseparam				= mv_eth_tool_set_pauseparam,
-//	.get_rx_csum				= mv_eth_tool_get_rx_csum,
-//	.set_rx_csum				= mv_eth_tool_set_rx_csum,
-//	.get_tx_csum				= ethtool_op_get_tx_csum,
-//	.set_tx_csum				= mv_eth_tool_set_tx_csum,
-//	.get_sg					= ethtool_op_get_sg,
-//	.set_sg					= ethtool_op_set_sg,
-//	.get_tso				= ethtool_op_get_tso,
-//	.set_tso				= mv_eth_tool_set_tso,
 	.get_strings				= mv_eth_tool_get_strings,/*TODO: complete implementation */
 #if LINUX_VERSION_CODE <= KERNEL_VERSION(2, 6, 32)
 	.get_stats_count			= mv_eth_tool_get_stats_count,/*TODO: complete implementation */
@@ -930,5 +845,4 @@ const struct ethtool_ops mv_eth_tool_ops = {
 	.get_rxfh_indir				= mv_eth_tool_get_rxfh_indir,
 	.set_rxfh_indir				= mv_eth_tool_set_rxfh_indir,
 	.get_rxnfc                  		= mv_eth_tool_get_rxnfc,/*TODO new implementation*/
-//	.set_rx_ntuple				= mv_eth_tool_set_rx_ntuple,/*TODO new implementation*/
 };
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_mux_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_mux_netdev.c
index 18da99c..54ed3cd 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_mux_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_mux_netdev.c
@@ -397,9 +397,7 @@ static struct net_device *mv_mux_netdev_init(struct net_device *root_dev, struct
 	/* TODO: handle features */
 	mv_mux_init_features(mux_dev);
 
-#ifdef CONFIG_MV_ETH_TOOL
 /*	SET_ETHTOOL_OPS(mux_dev, &mv_mux_tool_ops);*/
-#endif
 
 	return mux_dev;
 }
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 91e55c1..0cef5c5 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -116,7 +116,8 @@ static int  mv_eth_config_get(struct platform_device *pdev, u8 *mac);
 static int  mv_eth_hal_init(struct eth_port *pp);
 struct net_device *mv_eth_netdev_init(struct eth_port *pp, int mtu, u8 *mac,
 					struct platform_device *pdev);
-static void mv_eth_netdev_update_features(struct net_device *dev);
+static void mv_eth_netdev_init_features(struct net_device *dev);
+static netdev_features_t mv_eth_netdev_fix_features(struct net_device *dev, netdev_features_t features);
 
 static MV_STATUS mv_eth_pool_create(int pool, int capacity);
 static int mv_eth_pool_add(int pool, int buf_num);
@@ -934,23 +935,16 @@ static inline void mv_eth_set_rx_mode(struct net_device *dev)
 	printk(KERN_ERR "%s: function %s imlemantation is not ready\n", dev->name, __func__);
 }
 
-
 static const struct net_device_ops mv_eth_netdev_ops = {
 	.ndo_open = mv_eth_open,
 	.ndo_stop = mv_eth_stop,
 	.ndo_start_xmit = mv_eth_tx,
-/*TODO - this is a hack by Seif M. need to fix this to properly move to linux 3.2!!!
-.ndo_set_multicast_list = mv_eth_set_multicast_list,
-*/
 	.ndo_change_rx_flags = mv_eth_set_multicast_list,
 	.ndo_set_mac_address = mv_eth_set_mac_addr,
 	.ndo_change_mtu = mv_eth_change_mtu,
 	.ndo_tx_timeout = mv_eth_tx_timeout,
 	.ndo_select_queue = mv_eth_select_txq,
-/*
-.ndo_change_rx_flags = mv_eth_change_rx_flags,
-.ndo_set_rx_mode = mv_eth_set_rx_mode,
-*/
+	.ndo_fix_features = mv_eth_netdev_fix_features,
 };
 
 
@@ -3168,9 +3162,7 @@ struct net_device *mv_eth_netdev_init(struct eth_port *pp, int mtu, u8 *mac,
 
 	dev->netdev_ops = &mv_eth_netdev_ops;
 
-#ifdef CONFIG_MV_ETH_TOOL
 	SET_ETHTOOL_OPS(dev, &mv_eth_tool_ops);
-#endif
 
 	for_each_possible_cpu(cpu) {
 		cpuCtrl = pp->cpu_config[cpu];
@@ -3182,7 +3174,7 @@ struct net_device *mv_eth_netdev_init(struct eth_port *pp, int mtu, u8 *mac,
 	SET_NETDEV_DEV(dev, &pdev->dev);
 
 	if (pp->flags & MV_ETH_F_CONNECT_LINUX) {
-		mv_eth_netdev_set_features(dev);
+		mv_eth_netdev_init_features(dev);
 		if (register_netdev(dev)) {
 			printk(KERN_ERR "failed to register %s\n", dev->name);
 			free_netdev(dev);
@@ -3273,13 +3265,11 @@ int mv_eth_hal_init(struct eth_port *pp)
 	if (pp->tx_spec.flags & MV_ETH_TX_F_MH)
 		mvPp2MhSet(pp->port, MV_PP2_MH);
 
-#ifdef CONFIG_MV_ETH_TOOL
 	/* Configure defaults */
-	pp->autoneg_cfg  = AUTONEG_ENABLE;
-	pp->speed_cfg    = SPEED_1000;
-	pp->duplex_cfg  = DUPLEX_FULL;
+	pp->autoneg_cfg = AUTONEG_ENABLE;
+	pp->speed_cfg = SPEED_1000;
+	pp->duplex_cfg = DUPLEX_FULL;
 	pp->advertise_cfg = 0x2f;
-#endif /* CONFIG_MV_ETH_TOOL */
 
 	return 0;
 oom:
@@ -3360,37 +3350,37 @@ void mv_eth_config_show(void)
 }
 
 /* Set network device features on initialization. Take into account default compile time configuration. */
-void mv_eth_netdev_set_features(struct net_device *dev)
+void mv_eth_netdev_init_features(struct net_device *dev)
 {
-	dev->features = NETIF_F_SG | NETIF_F_LLTX;
+	dev->features |= NETIF_F_SG | NETIF_F_LLTX;
+	dev->hw_features |= NETIF_F_SG;
 
+#ifdef CONFIG_MV_ETH_TX_CSUM_OFFLOAD
+	dev->hw_features |= NETIF_F_IP_CSUM;
 #ifdef CONFIG_MV_ETH_TX_CSUM_OFFLOAD_DEF
-	if (dev->mtu <= MV_ETH_TX_CSUM_MAX_SIZE)
-		dev->features |= NETIF_F_IP_CSUM;
-#endif /* CONFIG_MV_ETH_TX_CSUM_OFFLOAD_DEF */
+	dev->features |= NETIF_F_IP_CSUM;
+#endif
+#endif
 
+#ifdef CONFIG_MV_ETH_TSO
+	dev->hw_features |= NETIF_F_TSO;
 #ifdef CONFIG_MV_ETH_TSO_DEF
-	if (dev->features & NETIF_F_IP_CSUM)
-		dev->features |= NETIF_F_TSO;
-#endif /* CONFIG_MV_ETH_TSO_DEF */
+	dev->features |= NETIF_F_TSO;
+#endif
+#endif
 }
 
-/* Update network device features after changing MTU.	*/
-static void mv_eth_netdev_update_features(struct net_device *dev)
+static netdev_features_t mv_eth_netdev_fix_features(struct net_device *dev, netdev_features_t features)
 {
 #ifdef CONFIG_MV_ETH_TX_CSUM_OFFLOAD
-	if (dev->mtu > MV_ETH_TX_CSUM_MAX_SIZE) {
-		dev->features &= ~NETIF_F_IP_CSUM;
-		printk(KERN_ERR "Removing NETIF_F_IP_CSUM in device %s features\n", dev->name);
-	}
+	if (dev->mtu > MV_ETH_TX_CSUM_MAX_SIZE)
+		if (features & (NETIF_F_IP_CSUM | NETIF_F_TSO)) {
+			features &= ~(NETIF_F_IP_CSUM | NETIF_F_TSO);
+			printk(KERN_ERR "%s: NETIF_F_IP_CSUM and NETIF_F_TSO not supported for mtu larger %d bytes\n",
+				dev->name, MV_ETH_TX_CSUM_MAX_SIZE);
+		}
 #endif /* CONFIG_MV_ETH_TX_CSUM_OFFLOAD */
-
-#ifdef CONFIG_MV_ETH_TSO
-	if (!(dev->features & NETIF_F_IP_CSUM)) {
-		dev->features &= ~NETIF_F_TSO;
-		printk(KERN_ERR "Removing NETIF_F_TSO in device %s features\n", dev->name);
-	}
-#endif /* CONFIG_MV_ETH_TSO */
+	return features;
 }
 
 void mv_eth_priv_cleanup(struct eth_port *pp)
@@ -3966,7 +3956,8 @@ int mv_eth_change_mtu_internals(struct net_device *dev, int mtu)
 */
 mtu_out:
 	dev->mtu = mtu;
-	mv_eth_netdev_update_features(dev);
+
+	netdev_update_features(dev);
 
 	return 0;
 }
@@ -4341,8 +4332,9 @@ void mv_eth_netdev_print(struct net_device *dev)
 	       dev->ifindex, dev->mtu, RX_PKT_SIZE(dev->mtu),
 		RX_BUF_SIZE(RX_PKT_SIZE(dev->mtu)), MV_MACQUAD(dev->dev_addr));
 
-	printk(KERN_ERR "features=0x%x\n",
-			(unsigned int)(dev->features));
+	printk(KERN_ERR "features=0x%x, hw_features=0x%x, wanted_features=0x%x, vlan_features=0x%x\n",
+			(unsigned int)(dev->features), (unsigned int)(dev->hw_features),
+			(unsigned int)(dev->wanted_features), (unsigned int)(dev->vlan_features));
 
 	printk(KERN_ERR "flags=0x%x, gflags=0x%x: running=%d, oper_up=%d\n",
 			(unsigned int)(dev->flags), (unsigned int)(dev->flags), netif_running(dev), netif_oper_up(dev));
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index 5504ce0..38afbc6 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -364,13 +364,11 @@ struct eth_port {
 	int                 extBufSize;
 	spinlock_t          extLock;
 	MV_U8  		    txq_dscp_map[64];
-
-#ifdef CONFIG_MV_ETH_TOOL
+	/* Ethtool parameters */
 	__u16               speed_cfg;
 	__u8                duplex_cfg;
 	__u8                autoneg_cfg;
 	__u16		    advertise_cfg;
-#endif/* CONFIG_MV_ETH_TOOL */
 #ifdef CONFIG_MV_ETH_RX_CSUM_OFFLOAD
 	MV_U32              rx_csum_offload;
 #endif /* CONFIG_MV_ETH_RX_CSUM_OFFLOAD */
@@ -752,7 +750,6 @@ MV_STATUS   mv_eth_tx_done_ptks_coal_set(int port, int txp, int txq, MV_U32 valu
 
 struct eth_port     *mv_eth_port_by_id(unsigned int port);
 bool                 mv_eth_netdev_find(unsigned int if_index);
-void                 mv_eth_netdev_set_features(struct net_device *dev);
 
 void        mv_eth_mac_show(int port);
 void        mv_eth_dscp_map_show(int port);
-- 
1.7.5.4

