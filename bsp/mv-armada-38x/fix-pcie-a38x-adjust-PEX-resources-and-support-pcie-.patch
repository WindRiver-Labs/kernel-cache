From 2ed84c4f0d10694993d3518d9379e0beba6d90c5 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Thu, 20 Feb 2014 16:59:53 +0200
Subject: [PATCH 1384/1825] fix: pcie: a38x: adjust PEX resources and support
 pcie deadlock

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 2de5e3e937006847a2562691a42e3ef1054a85ed

	- Fix Set PCIe I/O and memory windows to strongly ordered type

Change-Id: I1f80ece1796d963f77b7ec3277370e7ee37a879e
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5860
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada38x/sysmap.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-armada38x/sysmap.c b/arch/arm/mach-armada38x/sysmap.c
index f626a11..aca3c42 100644
--- a/arch/arm/mach-armada38x/sysmap.c
+++ b/arch/arm/mach-armada38x/sysmap.c
@@ -24,14 +24,14 @@
 struct map_desc MEM_TABLE[] = {
 	/* no use for pex mem remap */
 	{ INTER_REGS_VIRT_BASE,		__phys_to_pfn(INTER_REGS_PHYS_BASE),	SZ_1M,		MT_DEVICE},
-	{ PEX0_IO_VIRT_BASE,		__phys_to_pfn(PEX0_IO_PHYS_BASE),	PEX0_IO_SIZE,	MT_DEVICE},
-	{ PEX1_IO_VIRT_BASE,		__phys_to_pfn(PEX1_IO_PHYS_BASE),	PEX1_IO_SIZE,	MT_DEVICE},
-	{ PEX2_IO_VIRT_BASE,		__phys_to_pfn(PEX2_IO_PHYS_BASE),	PEX2_IO_SIZE,	MT_DEVICE},
-	{ PEX3_IO_VIRT_BASE,		__phys_to_pfn(PEX3_IO_PHYS_BASE),	PEX3_IO_SIZE,	MT_DEVICE},
-	{ PEX0_MEM_VIRT_BASE,		__phys_to_pfn(PEX0_MEM_PHYS_BASE),	PEX0_MEM_SIZE,	MT_DEVICE},
-	{ PEX1_MEM_VIRT_BASE,		__phys_to_pfn(PEX1_MEM_PHYS_BASE),	PEX1_MEM_SIZE,	MT_DEVICE},
-	{ PEX2_MEM_VIRT_BASE,		__phys_to_pfn(PEX2_MEM_PHYS_BASE),	PEX2_MEM_SIZE,	MT_DEVICE},
-	{ PEX3_MEM_VIRT_BASE,		__phys_to_pfn(PEX3_MEM_PHYS_BASE),	PEX3_MEM_SIZE,	MT_DEVICE},
+	{ PEX0_IO_VIRT_BASE,		__phys_to_pfn(PEX0_IO_PHYS_BASE),	PEX0_IO_SIZE,	MT_MEMORY_SO},
+	{ PEX1_IO_VIRT_BASE,		__phys_to_pfn(PEX1_IO_PHYS_BASE),	PEX1_IO_SIZE,	MT_MEMORY_SO},
+	{ PEX2_IO_VIRT_BASE,		__phys_to_pfn(PEX2_IO_PHYS_BASE),	PEX2_IO_SIZE,	MT_MEMORY_SO},
+	{ PEX3_IO_VIRT_BASE,		__phys_to_pfn(PEX3_IO_PHYS_BASE),	PEX3_IO_SIZE,	MT_MEMORY_SO},
+	{ PEX0_MEM_VIRT_BASE,		__phys_to_pfn(PEX0_MEM_PHYS_BASE),	PEX0_MEM_SIZE,	MT_MEMORY_SO},
+	{ PEX1_MEM_VIRT_BASE,		__phys_to_pfn(PEX1_MEM_PHYS_BASE),	PEX1_MEM_SIZE,	MT_MEMORY_SO},
+	{ PEX2_MEM_VIRT_BASE,		__phys_to_pfn(PEX2_MEM_PHYS_BASE),	PEX2_MEM_SIZE,	MT_MEMORY_SO},
+	{ PEX3_MEM_VIRT_BASE,		__phys_to_pfn(PEX3_MEM_PHYS_BASE),	PEX3_MEM_SIZE,	MT_MEMORY_SO},
 	{ CRYPT_ENG_VIRT_BASE(0),	__phys_to_pfn(CRYPT_ENG_PHYS_BASE(0)),	CRYPT_ENG_SIZE,	MT_DEVICE},
 	{ IOCC_WA_WIN0_VIRT_BASE,	__phys_to_pfn(IOCC_WA_WIN0_PHYS_BASE),	SZ_64K,		MT_DEVICE},
 };
-- 
1.7.5.4

