From 17e950582f70928699e527b322387855a4f2855b Mon Sep 17 00:00:00 2001
From: Nadav Haklai <nadavh@marvell.com>
Date: Sun, 20 Oct 2013 10:07:58 +0200
Subject: [PATCH 1100/1825] a38x,alp: rename IOCC sync barrier workaround
 config

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 497e4780d4d80497b02e6c42731fdc123b69e742

Change-Id: I6c124366995d7dd987fcd38ca0c968d2e95b01ee

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-armada38x/core.c |   10 +++++-----
 arch/arm/mach-avantalp/core.c  |   10 +++++-----
 arch/arm/mm/Kconfig            |    2 +-
 3 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/arch/arm/mach-armada38x/core.c b/arch/arm/mach-armada38x/core.c
index fbe2641..09b66b7 100644
--- a/arch/arm/mach-armada38x/core.c
+++ b/arch/arm/mach-armada38x/core.c
@@ -60,7 +60,7 @@
 #include <plat/mv_xor.h>
 #endif
 
-#ifdef CONFIG_A375_IOCC_SYNC_BARRIER_WA
+#ifdef CONFIG_IOCC_SYNC_BARRIER_WA
 #include "xor/mvXorRegs.h"
 #endif
 
@@ -962,7 +962,7 @@ static void __init a38x_xor0_init(void)
 
 	platform_device_register(&a38x_xor0_shared);
 
-#ifndef CONFIG_A375_IOCC_SYNC_BARRIER_WA
+#ifndef CONFIG_IOCC_SYNC_BARRIER_WA
 	/*
 	 * two engines can't do memset simultaneously, this limitation
 	 * satisfied by removing memset support from one of the engines.
@@ -1120,7 +1120,7 @@ static void print_board_info(void)
 	pr_info("  LSP version: %s\n", LSP_VERSION);
 #ifdef CONFIG_AURORA_IO_CACHE_COHERENCY
 	pr_info("  IOCC: Support IO coherency.\n");
-#ifdef CONFIG_A375_IOCC_SYNC_BARRIER_WA
+#ifdef CONFIG_IOCC_SYNC_BARRIER_WA
 	pr_info("     -> Sync Barrier WA enabled\n");
 #endif
 #endif
@@ -1177,7 +1177,7 @@ void a38x_smp_cpu1_enable_wa(void)
  */
 #ifdef CONFIG_AURORA_IO_CACHE_COHERENCY
 
-#ifdef CONFIG_A375_IOCC_SYNC_BARRIER_WA
+#ifdef CONFIG_IOCC_SYNC_BARRIER_WA
 
 /*	The A38X IOCC SYNC Barrirer WA overcomes the A38X Z1 revision sync barrier issue using the XOR engine.
 	When the dma_io_sync is called by each of the CPUs, the correct channel (CPU dependent) is activated
@@ -1244,7 +1244,7 @@ void dma_io_sync(void)
 {
 	/* Need to implement final dma io sync for A38X */
 }
-#endif /* CONFIG_A375_IOCC_SYNC_BARRIER_WA */
+#endif /* CONFIG_IOCC_SYNC_BARRIER_WA */
 
 /*
  * All combinations of IOCC/SMP/UP should be supported:
diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index c1e15dc..81bb267 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -63,7 +63,7 @@
 #include <plat/mv_xor.h>
 #endif
 
-#ifdef CONFIG_ALP_IOCC_SYNC_BARRIER_WA
+#ifdef CONFIG_IOCC_SYNC_BARRIER_WA
 #include "xor/mvXorRegs.h"
 #endif
 
@@ -1181,7 +1181,7 @@ static void __init alp_xor0_init(void)
 
 	platform_device_register(&alp_xor0_shared);
 
-#if !defined(CONFIG_ALP_IOCC_SYNC_BARRIER_WA)
+#if !defined(CONFIG_IOCC_SYNC_BARRIER_WA)
 	/*
 	 * two engines can't do memset simultaneously, this limitation
 	 * satisfied by removing memset support from one of the engines.
@@ -1371,7 +1371,7 @@ static void print_board_info(void)
 	pr_info("LSP version:  [%s]\n", LSP_VERSION);
 #ifdef CONFIG_AURORA_IO_CACHE_COHERENCY
 	pr_info("IOCC:         [Support IO Cache Coherency]\n");
-#ifdef CONFIG_ALP_IOCC_SYNC_BARRIER_WA
+#ifdef CONFIG_IOCC_SYNC_BARRIER_WA
 	pr_info("               -> XOR Sync Barrier WA enabled\n");
 #endif
 #endif
@@ -1435,7 +1435,7 @@ void __init alp_smp_cpu1_enable_wa(void)
  */
 #ifdef CONFIG_AURORA_IO_CACHE_COHERENCY
 
-#ifdef CONFIG_ALP_IOCC_SYNC_BARRIER_WA
+#ifdef CONFIG_IOCC_SYNC_BARRIER_WA
 
 /*
  * The ALP IOCC SYNC Barrier WA overcomes the ALP Z1 revision sync barrier
@@ -1520,7 +1520,7 @@ void dma_io_sync(void)
 
 static void alp_iocc_wa_init(void) { /* empty */ }
 
-#endif /* CONFIG_ALP_IOCC_SYNC_BARRIER_WA */
+#endif /* CONFIG_IOCC_SYNC_BARRIER_WA */
 
 #else
 void dma_io_sync(void)
diff --git a/arch/arm/mm/Kconfig b/arch/arm/mm/Kconfig
index 004245d..cb828de 100644
--- a/arch/arm/mm/Kconfig
+++ b/arch/arm/mm/Kconfig
@@ -1207,7 +1207,7 @@ config AURORA_IO_CACHE_COHERENCY
 	help
 	  This option enables the hardware mechanism for I/O cache coherency.
 
-config ALP_IOCC_SYNC_BARRIER_WA
+config IOCC_SYNC_BARRIER_WA
 	depends on (ARCH_AVANTA_LP || ARCH_ARMADA38X) && AURORA_IO_CACHE_COHERENCY
 	bool "Enable IO Sync Barrier WA"
 	default y
-- 
1.7.5.4

