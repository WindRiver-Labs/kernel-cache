From 1564186f9a59d80db5fdf5cfe3cde3f0c3e01491 Mon Sep 17 00:00:00 2001
From: Eran Ben-Avi <benavi@marvell.com>
Date: Mon, 18 Nov 2013 19:31:27 +0200
Subject: [PATCH 1141/1825] alp: tdm: support zarlink zsi slic interface

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit beac71f98b1f0357817bb43d35c529fe1e3fe1aa

Support Zarlink ZSI SLIC interface and adapt avanta_lp
family and SPI HAL driver accordingly.

Change-Id: Ia0b84e8404608c9435941084cb0d781b1fa3d2db
Signed-off-by: Eran Ben-Avi <benavi@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4351
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |    4 +-
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |    8 +-
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.h     |    4 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   49 ++++++
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |    8 +
 arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c        |   35 ++++-
 arch/arm/plat-armada/include/plat/zarlink_if.h     |    6 +
 .../mv_drivers_lsp/mv_phone/slic/zarlink_if.c      |   25 +++
 .../mv_drivers_lsp/mv_phone/tdm/tdm_if.c           |    6 +
 arch/arm/plat-armada/mv_hal/spi/mvSpi.c            |   18 ++-
 arch/arm/plat-armada/mv_hal/spi/mvSpi.h            |    4 +-
 drivers/staging/telephony/mv_tdm/Kconfig           |   22 +++
 tools/voice/zarlink/kernel/Makefile                |    5 +
 tools/voice/zarlink/kernel/mv_voice_tool.c         |   16 ++-
 tools/voice/zarlink/kernel/profile_88801.c         |  171 ++++++++++++++++++++
 tools/voice/zarlink/kernel/profile_88801.h         |   42 +++++
 16 files changed, 406 insertions(+), 17 deletions(-)
 create mode 100644 tools/voice/zarlink/kernel/profile_88801.c
 create mode 100644 tools/voice/zarlink/kernel/profile_88801.h

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 58b3f50..861a702 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -811,6 +811,7 @@ MV_VOID mvBoardSlicUnitTypeSet(MV_U32 slicType)
 		slicType = MV_BOARD_SLIC_DISABLED;
 	}
 
+	board->boardTdmInfoIndex = slicType;
 	board->pBoardModTypeValue->boardMppSlic = slicType;
 }
 /*******************************************************************************
@@ -1740,6 +1741,7 @@ MV_U8 mvBoardTdmSpiCsGet(MV_U8 devId)
 	if (index == -1)
 		return 0;
 
+
 	if (devId >= board->numBoardTdmInfo[index])
 		return -1;
 
@@ -1770,7 +1772,7 @@ MV_U8 mvBoardTdmSpiIdGet(MV_VOID)
 	if (index == -1)
 		return 0;
 
-	return board->pBoardTdmSpiInfo[0].spiId;
+	return board->pBoardTdmSpiInfo[index].spiId;
 }
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 4bfe3bf..08db412 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -124,7 +124,9 @@ MV_BOARD_MPP_INFO db88f6660InfoBoardMppConfigValue[] = {
 
 MV_BOARD_TDM_INFO db88f6660Tdm880[] = { {0} };
 
-MV_BOARD_TDM_SPI_INFO db88f6660TdmSpiInfo[] = { {1} };
+MV_BOARD_TDM_INFO db88f6660TdmZSI[] = { {2} };
+
+MV_BOARD_TDM_SPI_INFO db88f6660TdmSpiInfo[] = {{-1}, {-1}, {-1}, {1}, {1} };
 
 MV_BOARD_INFO db88f6660_board_info = {
 	.boardName			= "DB-88F6660",
@@ -162,8 +164,8 @@ MV_BOARD_INFO db88f6660_board_info = {
 	.gppPolarityValHigh		= DB_88F6660_GPP_POL_HIGH,
 
 	/* TDM */
-	.numBoardTdmInfo		= {1},
-	.pBoardTdmInt2CsInfo		= {db88f6660Tdm880},
+	.numBoardTdmInfo		= {-1, -1, -1, 1, 1},
+	.pBoardTdmInt2CsInfo		= {NULL, NULL,  NULL, db88f6660TdmZSI, db88f6660Tdm880},
 	.boardTdmInfoIndex		= 0,
 
 	.pBoardSpecInit			= NULL,
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
index b14cde3..e167b19 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.h
@@ -123,10 +123,10 @@
 #define DB_88F6660_MPP56_63             0x44224422  /* UART1, GE0 , LED */
 #define DB_88F6660_MPP64_67             0x004
 
-#define DB_88F6660_GPP_OUT_ENA_LOW      0xFFFFFFFF
+#define DB_88F6660_GPP_OUT_ENA_LOW      0xFFF7FFFF
 #define DB_88F6660_GPP_OUT_ENA_MID      0xFFFFFFFF
 #define DB_88F6660_GPP_OUT_ENA_HIGH     0xFFFFFFFF
-#define DB_88F6660_GPP_OUT_VAL_LOW      0x0
+#define DB_88F6660_GPP_OUT_VAL_LOW      BIT19
 #define DB_88F6660_GPP_OUT_VAL_MID      0x0
 #define DB_88F6660_GPP_OUT_VAL_HIGH     0x0
 #define DB_88F6660_GPP_POL_LOW          0x0
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 8b51249..90733cd 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -122,6 +122,8 @@ MV_U32 boardOptionsConfig[MV_CONFIG_TYPE_MAX_OPTION];
 
 MV_BOARD_SATR_INFO boardSatrInfo[] = MV_SAR_INFO;
 
+static MV_VOID mvCtrlTdmModeSet(MV_VOID);
+
 MV_U32 mvCtrlGetCpuNum(MV_VOID)
 {
 	MV_U32 cpu1Enabled;
@@ -330,6 +332,7 @@ MV_STATUS mvCtrlEnvInit(MV_VOID)
 	MV_REG_BIT_RESET(SOC_DEV_MUX_REG, BIT27);
 
 #if defined(MV_INCLUDE_TDM)
+	mvCtrlTdmModeSet();
 	mvCtrlTdmClkCtrlConfig();
 #endif
 
@@ -1102,6 +1105,52 @@ MV_U32 mvCtrlSdioSupport(MV_VOID)
 
 #if defined(MV_INCLUDE_TDM)
 /*******************************************************************************
+* mvCtrlTdmModeSet - Set TDM mode type: TDM, TDM+ISI, TDM+ZSI
+*
+* DESCRIPTION:
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       None.
+*
+*******************************************************************************/
+static MV_VOID mvCtrlTdmModeSet(MV_VOID)
+{
+	MV_U32 tdmMode;
+
+	switch (mvBoardSlicUnitTypeGet()) {
+	case MV_BOARD_SLIC_DISABLED:
+	case MV_BOARD_SLIC_SSI_ID:
+		return;
+	case MV_BOARD_SLIC_ISI_ID:
+		tdmMode = ISI_MODE;
+		break;
+	case MV_BOARD_SLIC_ZSI_ID:
+		tdmMode = ZSI_MODE;
+		break;
+	case MV_BOARD_SLIC_EXTERNAL_ID:
+		tdmMode = TDM_MODE;
+		break;
+	default:
+		mvOsPrintf("%s: Error: wrong SLIC type\n", __func__);
+		return;
+	}
+
+	/* Reset TDM mode field */
+	MV_REG_WRITE(MV_TDM_CTRL_REG, (MV_REG_READ(MV_TDM_CTRL_REG) & ~(TDM_MODE_MASK)));
+
+	/* Set new TDM mode */
+	MV_REG_BIT_SET(MV_TDM_CTRL_REG, tdmMode);
+
+	return;
+}
+
+/*******************************************************************************
 * mvCtrlTdmClkCtrlSet - Set TDM Clock Out Divider Control register
 *
 * DESCRIPTION:
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index e794d5f..d5dc452 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -86,6 +86,14 @@ extern "C" {
 /* CIB registers offsets */
 #define MV_CIB_CTRL_CFG_REG                     (MV_COHERENCY_FABRIC_OFFSET + 0x80)
 
+/* TDM Control Register */
+#define MV_TDM_CTRL_REG				MV_MISC_REGS_OFFSET
+#define TDM_MODE_OFFS				1
+#define TDM_MODE_MASK				(3 << TDM_MODE_OFFS)
+#define TDM_MODE				(0 << TDM_MODE_OFFS)
+#define ISI_MODE				(1 << TDM_MODE_OFFS)
+#define ZSI_MODE				(2 << TDM_MODE_OFFS)
+
 /*
  * SoC Device Multiplex Register
  */
diff --git a/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c b/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c
index 4af3120..a82cc25 100644
--- a/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c
+++ b/arch/arm/mach-avantalp/mv_hal_if/mvSysTdm.c
@@ -70,8 +70,8 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "voiceband/tdm/mvTdm.h"
 #else
  #include "voiceband/commUnit/mvCommUnit.h"
- #include "gpp/mvGpp.h"
 #endif
+ #include "gpp/mvGpp.h"
 #include "voiceband/mvSysTdmSpi.h"
 #include "spi/mvSpiCmnd.h"
 #include "spi/mvSpi.h"
@@ -119,6 +119,13 @@ MV_STATUS mvSysTdmInit(MV_TDM_PARAMS* tdmParams)
 
 #ifdef MV_TDM_SUPPORT
 		status = mvTdmHalInit (tdmParams, &halData);
+
+		if (MV_BOARD_SLIC_ZSI_ID == mvBoardSlicUnitTypeGet()) {
+			/* Issue SLIC reset */
+			mvGppValueSet(0, BIT19, 0);
+			mvOsUDelay(60);
+			mvGppValueSet(0, BIT19, BIT19);
+		}
 #else
 		halData.maxCs = mvBoardTdmDevicesCountGet();
 		status = mvCommUnitHalInit (tdmParams, &halData);
@@ -154,11 +161,25 @@ MV_VOID mvSysTdmSpiRead(MV_U16 lineId, MV_U8* cmdBuff, MV_U8 cmdSize, MV_U8* dat
 	spiType = SPI_TYPE_SLIC_LANTIQ;
 #endif
 
+#ifdef CONFIG_ZARLINK_SERIAL_SLIC_SUPPORT
+	spiType = SPI_TYPE_SLIC_ZSI;
+#endif
+
 	/* Set SPI parameters(lineId = devId) */
 	mvSpiParamsSet(mvBoardTdmSpiIdGet(), mvBoardTdmSpiCsGet(lineId), spiType);
-	
-	if (MV_OK != mvSpiWriteThenRead(mvBoardTdmSpiIdGet(), cmdBuff, cmdSize, dataBuff, dataSize, 0))
-		printk("SPI read failed !!!\n");
+
+	if (MV_BOARD_SLIC_ZSI_ID == mvBoardSlicUnitTypeGet()) {
+		if (MV_OK != mvSpiWrite(mvBoardTdmSpiIdGet(), cmdBuff, (cmdSize - dataSize)))
+			mvOsPrintf(KERN_ERR "ZSI: SPI write failed !!!\n");
+
+		if (MV_OK != mvSpiReadAndWrite(mvBoardTdmSpiIdGet(), dataBuff, \
+			(cmdBuff + (cmdSize - dataSize)), dataSize))
+			mvOsPrintf(KERN_ERR "ZSI: SPI Read and Write failed !!!\n");
+
+	} else {
+		if (MV_OK != mvSpiWriteThenRead(mvBoardTdmSpiIdGet(), cmdBuff, cmdSize, dataBuff, dataSize, 0))
+			mvOsPrintf(KERN_ERR "SPI read failed !!!\n");
+	}
 
 #endif /* MV_TDM_SUPPORT */
 }
@@ -197,11 +218,15 @@ MV_VOID mvSysTdmSpiWrite(MV_U16 lineId, MV_U8* cmdBuff, MV_U8 cmdSize, MV_U8* da
 	spiType = SPI_TYPE_SLIC_LANTIQ;
 #endif
 
+#ifdef CONFIG_ZARLINK_SERIAL_SLIC_SUPPORT
+	spiType = SPI_TYPE_SLIC_ZSI;
+#endif
+
 	/* Set SPI parameters(lineId = devId) */
 	mvSpiParamsSet(mvBoardTdmSpiIdGet(), mvBoardTdmSpiCsGet(lineId), spiType);
 
 	if (MV_OK != mvSpiWriteThenWrite(mvBoardTdmSpiIdGet(), cmdBuff, cmdSize, dataBuff, dataSize))
-		printk("SPI write failed !!!\n");
+		mvOsPrintf(KERN_ERR "SPI write failed !!!\n");
 
 #endif /* MV_TDM_SUPPORT */
 }
diff --git a/arch/arm/plat-armada/include/plat/zarlink_if.h b/arch/arm/plat-armada/include/plat/zarlink_if.h
index f839b3e..02a3910 100644
--- a/arch/arm/plat-armada/include/plat/zarlink_if.h
+++ b/arch/arm/plat-armada/include/plat/zarlink_if.h
@@ -72,6 +72,12 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 /* Interface to Zarlink SLIC driver */
 extern void zarlink_if_enable_irq(unsigned int device);
 extern void zarlink_if_disable_irq(unsigned int device);
+#ifdef CONFIG_ZARLINK_SERIAL_SLIC_SUPPORT
+typedef void (*handler)(unsigned long);
+extern void zarlink_if_handler_register(handler func);
+extern void zarlink_if_handler_unregister(void);
+extern void zarlink_if_zsi_interrupt(void);
+#endif
 
 extern void zarlink_if_spi_read(unsigned int line,
 		unsigned char *cmd, unsigned char cmd_size,
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/zarlink_if.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/zarlink_if.c
index 3ebb364..3b37d0d 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/zarlink_if.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/slic/zarlink_if.c
@@ -69,6 +69,10 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include "voiceband/mvSysTdmSpi.h"
 
+#ifdef CONFIG_ZARLINK_SERIAL_SLIC_SUPPORT
+static handler zsi_handler;
+#endif
+
 void zarlink_if_enable_irq(unsigned int device)
 {
 	mvSysTdmIntEnable(device);
@@ -81,6 +85,27 @@ void zarlink_if_disable_irq(unsigned int device)
 }
 EXPORT_SYMBOL(zarlink_if_disable_irq);
 
+#ifdef CONFIG_ZARLINK_SERIAL_SLIC_SUPPORT
+void zarlink_if_handler_register(handler func)
+{
+	zsi_handler = func;
+}
+EXPORT_SYMBOL(zarlink_if_handler_register);
+
+void zarlink_if_handler_unregister(void)
+{
+	zsi_handler = NULL;
+}
+EXPORT_SYMBOL(zarlink_if_handler_unregister);
+
+void zarlink_if_zsi_interrupt(void)
+{
+	if (zsi_handler != NULL)
+		zsi_handler(0);
+}
+EXPORT_SYMBOL(zarlink_if_zsi_interrupt);
+#endif
+
 void zarlink_if_spi_read(unsigned int line,
 	unsigned char *cmd, unsigned char cmd_size,
 	unsigned char *data, unsigned char data_size)
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
index ac86564..6712e36 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
@@ -68,6 +68,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include <linux/init.h>
 #include <linux/proc_fs.h>
 #include <plat/drv_dxt_if.h>
+#include <plat/zarlink_if.h>
 #ifndef CONFIG_MV_TDM_SUPPORT
 #include "gpp/mvGppRegs.h"
 #endif
@@ -469,6 +470,11 @@ static irqreturn_t tdm_if_isr(int irq, void* dev_id)
 	int_type = tdm_int_info.intType;
 	/*device_id = tdm_int_info.cs;*/
 
+#ifdef CONFIG_ZARLINK_SERIAL_SLIC_SUPPORT
+	/* Handle ZSI interrupts*/
+	zarlink_if_zsi_interrupt();
+#endif
+
 	/* Nothing to do - return */
 	if (int_type == MV_EMPTY_INT)
 		goto out;
diff --git a/arch/arm/plat-armada/mv_hal/spi/mvSpi.c b/arch/arm/plat-armada/mv_hal/spi/mvSpi.c
index 732876d..40566f2 100644
--- a/arch/arm/plat-armada/mv_hal/spi/mvSpi.c
+++ b/arch/arm/plat-armada/mv_hal/spi/mvSpi.c
@@ -83,19 +83,29 @@ static MV_SPI_TYPE_INFO spiTypes[] = {
 		.en16Bit = MV_TRUE,
 		.byteCsAsrt = MV_FALSE,
 		.clockPolLow = MV_TRUE,
-		.baudRate = (20 << 20) /*  20M */
+		.baudRate = (20 << 20), /*  20M */
+		.clkPhase = SPI_CLK_BEGIN_CYC
 	},
 	{
 		.en16Bit = MV_FALSE,
 		.clockPolLow = MV_TRUE,
 		.byteCsAsrt = MV_TRUE,
-		.baudRate = _8M
+		.baudRate = _8M,
+		.clkPhase = SPI_CLK_BEGIN_CYC
 	},
 	{
 		.en16Bit = MV_FALSE,
 		.clockPolLow = MV_TRUE,
 		.byteCsAsrt = MV_FALSE,
-		.baudRate = _8M
+		.baudRate = _8M,
+		.clkPhase = SPI_CLK_BEGIN_CYC
+	},
+	{
+		.en16Bit = MV_FALSE,
+		.clockPolLow = MV_TRUE,
+		.byteCsAsrt = MV_TRUE,
+		.baudRate = _8M,
+		.clkPhase = SPI_CLK_HALF_CYC
 	}
 };
 
@@ -142,7 +152,7 @@ MV_STATUS mvSpiParamsSet(MV_U8 spiId, MV_U8 csId, MV_SPI_TYPE type)
 		mvSpiBaudRateSet(spiId, currSpiInfo->baudRate);
 
 		ifParams.clockPolLow = currSpiInfo->clockPolLow;
-		ifParams.clockPhase = SPI_CLK_BEGIN_CYC;
+		ifParams.clockPhase = currSpiInfo->clkPhase;
 		ifParams.txMsbFirst = MV_FALSE;
 		ifParams.rxMsbFirst = MV_FALSE;
 		mvSpiIfConfigSet(spiId, &ifParams);
diff --git a/arch/arm/plat-armada/mv_hal/spi/mvSpi.h b/arch/arm/plat-armada/mv_hal/spi/mvSpi.h
index d0b031f..6884fd0 100644
--- a/arch/arm/plat-armada/mv_hal/spi/mvSpi.h
+++ b/arch/arm/plat-armada/mv_hal/spi/mvSpi.h
@@ -107,12 +107,14 @@ typedef struct {
 	MV_BOOL	byteCsAsrt;
 	MV_BOOL clockPolLow;
 	MV_U32	baudRate;
+	MV_U32 clkPhase;
 } MV_SPI_TYPE_INFO;
 
 typedef enum {
 	SPI_TYPE_FLASH = 0,
 	SPI_TYPE_SLIC_ZARLINK_SILABS,
-	SPI_TYPE_SLIC_LANTIQ
+	SPI_TYPE_SLIC_LANTIQ,
+	SPI_TYPE_SLIC_ZSI
 } MV_SPI_TYPE;
 
 
diff --git a/drivers/staging/telephony/mv_tdm/Kconfig b/drivers/staging/telephony/mv_tdm/Kconfig
index b1b7ad8..7ab3d1d 100644
--- a/drivers/staging/telephony/mv_tdm/Kconfig
+++ b/drivers/staging/telephony/mv_tdm/Kconfig
@@ -55,6 +55,28 @@ config SILABS_SLIC_SUPPORT
 config ZARLINK_SLIC_SUPPORT
 	bool "Support Zarlink/Legirity devices"
 
+endchoice
+
+choice
+	prompt "Zarlink SLIC Type(Parallel/Serial)"
+	depends on MV_PHONE && ZARLINK_SLIC_SUPPORT
+	default ZARLINK_PARALLEL_SLIC_SUPPORT
+
+config  ZARLINK_PARALLEL_SLIC_SUPPORT
+	bool "Support Zarlink Parallel devices"
+	---help---
+	Choosing this option enables Zarlink external
+	parallel SLIC devices.
+	Supported parallel Zarlink devices are:
+	VE880, VE792 and VE886(ZL88601).
+
+config ZARLINK_SERIAL_SLIC_SUPPORT
+	bool "Support Zarlink Serial devices(ZSI)"
+	---help---
+	Choosing this option enables Zarlink serial
+	external SLIC devices.
+	Supported serial Zarlink device(ZSI) is:
+	VE887(ZL88801)
 
 endchoice
 
diff --git a/tools/voice/zarlink/kernel/Makefile b/tools/voice/zarlink/kernel/Makefile
index 6bb8fda..4fc7ace 100644
--- a/tools/voice/zarlink/kernel/Makefile
+++ b/tools/voice/zarlink/kernel/Makefile
@@ -39,8 +39,13 @@ mv_voice_tool-ve792: mv_voice_tool.c vpapi_lib.c profile_79238.c
 mv_voice_tool-ve880: mv_voice_tool.c vpapi_lib.c profile_88266.c
 	$(CC) $(CFLAGS) $(CFLAGS_VE8XX) -DZARLINK_SLIC_VE880 -static -o $@ $^
 
+ifdef CONFIG_ZARLINK_SERIAL_SLIC_SUPPORT
+mv_voice_tool-ve886: mv_voice_tool.c vpapi_lib.c profile_88801.c
+	$(CC) $(CFLAGS) $(CFLAGS_VE8XX) -DZARLINK_SLIC_VE887 -static -o $@ $^
+else
 mv_voice_tool-ve886: mv_voice_tool.c vpapi_lib.c profile_88601.c
 	$(CC) $(CFLAGS) $(CFLAGS_VE8XX) -DZARLINK_SLIC_VE886 -static -o $@ $^
+endif
 
 mv_voice_tool-ve890: mv_voice_tool.c vpapi_lib.c profile_89116.c
 	$(CC) $(CFLAGS) $(CFLAGS_VE8XX) -DZARLINK_SLIC_VE890 -static -o $@ $^
diff --git a/tools/voice/zarlink/kernel/mv_voice_tool.c b/tools/voice/zarlink/kernel/mv_voice_tool.c
index 678be09..03323c6 100644
--- a/tools/voice/zarlink/kernel/mv_voice_tool.c
+++ b/tools/voice/zarlink/kernel/mv_voice_tool.c
@@ -84,6 +84,19 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define WB_AC_COEFF		AC_FXS_RF14_DEF
 #define RING_PROFILE		RING_DEF
 
+#elif defined(ZARLINK_SLIC_VE887)
+/* Zarlink ZL88801 Shared-Tracker */
+#include "profile_88801.h"
+#define MAX_DEVICES		1
+#define MAX_DEVICE_LINES	2
+#define MAX_LINES		2
+#define VP_DEV_SERIES		VP_DEV_887_SERIES
+#define DEV_PROFILE		DEV_PROFILE
+#define DC_COEFF		DC_PROFILE
+#define AC_COEFF		AC_FXS_RF100_600R_DEF
+#define WB_AC_COEFF		NULL
+#define RING_PROFILE		RING_20HZ_SINE
+
 #elif defined(ZARLINK_SLIC_VE886)
 /* Zarlink VE886 */
 #include "profile_88601.h"
@@ -264,7 +277,7 @@ int main(void)
 
 	/* Issue main menu */
 	while(1) {
-		printf("\n  Marvell Voice Tool (Zarlink/Ligerity Edition):\n");
+		printf("\n  Marvell Voice Tool (Zarlink/Microsemi Edition):\n");
 		printf("  0. Read from SLIC register (VE880 only)\n");
 		printf("  1. Write to SLIC register (VE880 only)\n");
 		printf("  2. Start ring\n");
@@ -1305,6 +1318,7 @@ static void vpapi_dev_init(VpDeviceIdType dev_id)
 	event_mask.response = (unsigned short)(~VP_EVID_CAL_CMP);
 #endif
 	status = vpapi_set_option(0, N_A, dev_id, VP_OPTION_ID_EVENT_MASK, &event_mask);
+
 	if(status != VP_STATUS_SUCCESS) {
 		printf("## Error while setting VP_OPTION_ID_EVENT_MASK (%d) ##\n", status);
 		return;
diff --git a/tools/voice/zarlink/kernel/profile_88801.c b/tools/voice/zarlink/kernel/profile_88801.c
new file mode 100644
index 0000000..cb0bdcf
--- /dev/null
+++ b/tools/voice/zarlink/kernel/profile_88801.c
@@ -0,0 +1,171 @@
+/*
+ * profile_88801.c --
+ *
+ * This file contains profile data in byte format
+ *
+ * Project Info --
+ *   File:   C:\Zarlink\profiles\zl88801_shared_tracker\NewProject.vpw
+ *   Type:   Custom Design Using Microsemi ZL880 - ZL88801
+ *   Date:   Tuesday, November 12, 2013 09:27:50
+ *   Device: ZL880 ZL88801_T
+ *
+ *   This file was generated with Profile Wizard Version: P2.5.0
+ */
+
+#include "profile_88801.h"
+
+
+/************** Device Profile **************/
+
+/* Device Configuration Data */
+const VpProfileDataType DEV_PROFILE[] = {
+/* Profile Header ---------------------------------------------------------- */
+0x0D, 0xFF, 0x00,       /* Device Profile for ZL88801_T device */
+0x28,                   /* Profile length = 40 + 4 = 44 bytes */
+0x04,                   /* Profile format version = 4 */
+0x14,                   /* MPI section length = 20 bytes */
+/* Raw MPI Section --------------------------------------------------------- */
+0x46, 0x0A,             /* PCLK = 8.192 MHz; INTM = CMOS-compatible */
+0x44, 0x46,             /* PCM Clock Slot = 6 TX / 0 RX; XE = Pos. */
+0x5E, 0x14, 0x04,       /* Device Mode Register */
+0xF6, 0x54, 0x40, 0x54, /* Switching Regulator Timing Params */
+0x40, 0xA8, 0x40,
+0xE4, 0x04, 0x92, 0x0A, /* Switching Regulator Params */
+0xE6, 0x60,             /* Switching Regulator Control */
+/* Formatted Parameters Section -------------------------------------------- */
+0x00,                   /* IO21 Mode: Digital */
+			/* IO22 Mode: Digital */
+0x70,                   /* Dial pulse correction: 7 ms */
+			/* Switcher Configuration =
+				Shared BuckBoost (12 V in, 100 V out) */
+0x00, 0xFF,             /* Over-current shutdown count = 255 */
+0x01,                   /* Leading edge blanking window = 81 ns */
+0x1C, 0x12, 0x1C, 0x12, /* FreeRun Timing Parameters */
+0x1C, 0x12,
+0xFF,
+0x54, 0x40,             /* Low-Power Timing Parameters */
+0x62, 0x62,             /* Switcher Limit Voltages 98 V, 98 V */
+0x80,                   /* Charge pump disabled */
+			/* Charge Pump Overload Protection: Under-Voltage Shutdown */
+0x3C                    /* Switcher Input 12 V */
+};
+
+/************** DC Profile **************/
+
+/* DC Parameters */
+const VpProfileDataType DC_PROFILE[] = {
+/* Profile Header ---------------------------------------------------------- */
+0x0D, 0x01, 0x00,       /* DC Profile for ZL88801_T device */
+0x0C,                   /* Profile length = 12 + 4 = 16 bytes */
+0x02,                   /* Profile format version = 2 */
+0x03,                   /* MPI section length = 3 bytes */
+/* Raw MPI Section --------------------------------------------------------- */
+0xC6, 0x92, 0x28,       /* DC Feed Parameters: ir_overhead = 100 ohm; */
+			/* VOC = 48 V; LI = 50 ohm; VAS = 8.78 V; ILA = 26 mA */
+			/* Maximum Voice Amplitude = 2.93 V */
+/* Formatted Parameters Section -------------------------------------------- */
+0x1B,                   /* Switch Hook Threshold = 10 mA */
+			/* Ground-Key Threshold = 18 mA */
+0x84,                   /* Switch Hook Debounce = 8 ms */
+			/* Ground-Key Debounce = 16 ms */
+0x50,                   /* Low-Power Switch Hook Hysteresis = 2 V */
+			/* Ground-Key Hysteresis = 6 mA */
+			/* Switch Hook Hysteresis = 0 mA */
+0x80,                   /* Low-Power Switch Hook Threshold = 22 V */
+0x04,                   /* Floor Voltage = -25 V */
+0x00,                   /* R_OSP = 0 ohms */
+0x07                    /* R_ISP = 7 ohms */
+};
+
+/************** AC Profile **************/
+/* AC FXS RF100 600R Normal Coefficients (Default)  */
+const VpProfileDataType AC_FXS_RF100_600R_DEF[] = {
+  /* AC Profile */
+0xAD, 0x00, 0xAC, 0x4C, 0x01, 0x49, 0xCA, 0xEA, 0x98, 0xBA, 0xEB, 0x2A,
+0x2C, 0xB5, 0x25, 0xAA, 0x24, 0x2C, 0x3D, 0x9A, 0xAA, 0xBA, 0x27, 0x9F,
+0x01, 0x8A, 0x2D, 0x01, 0x2B, 0xB0, 0x5A, 0x33, 0x24, 0x5C, 0x35, 0xA4,
+0x5A, 0x3D, 0x33, 0xB6, 0x88, 0x3A, 0x10, 0x3D, 0x3D, 0xB2, 0xA7, 0x6B,
+0xA5, 0x2A, 0xCE, 0x2A, 0x8F, 0x82, 0xA8, 0x71, 0x80, 0xA9, 0xF0, 0x50,
+0x00, 0x86, 0x2A, 0x42, 0x22, 0x4B, 0x1C, 0xA3, 0xA8, 0xFF, 0x8F, 0xAA,
+0xF5, 0x9F, 0xBA, 0xF0, 0x96, 0x2E, 0x01, 0x00
+};
+
+/************** Ringing Profile **************/
+
+/* Ringing 20Hz, Sine Wave */
+const VpProfileDataType RING_20HZ_SINE[] = {
+/* Profile Header ---------------------------------------------------------- */
+0x0D, 0x04, 0x00,       /* Ringing Profile for ZL88801_T device */
+0x12,                   /* Profile length = 18 + 4 = 22 bytes */
+0x01,                   /* Profile format version = 1 */
+0x0C,                   /* MPI section length = 12 bytes */
+/* Raw MPI Section --------------------------------------------------------- */
+0xC0, 0x10, 0x00, 0x00, /* Ringing Generator Parameters: */
+0x00, 0x37, 0x3A, /* 20.1 Hz Sine; 1.41 CF; 70.00 Vpk; 0.00 V bias */
+0x08, 0x00, 0x00, /* Ring trip cycles = 2; RTHALFCYC = 1 */
+0x00, 0x00,
+/* Formatted Parameters Section -------------------------------------------- */
+0xB3,                   /* Ring Trip Method = AC; Threshold = 25.5 mA */
+0x0E,                   /* Ringing Current Limit = 78 mA */
+0x4D,                   /* Fixed; Max Ringing Supply = 70 V */
+0x00                    /* Balanced; Ring Cadence Control Disabled */
+};
+
+/************** Tone Profile **************/
+
+/************** Cadence Profile **************/
+
+/************** Caller ID Profile **************/
+
+/* US Caller ID Type II */
+const VpProfileDataType CID_TYPE2_US[] = {
+/* Space=2100Hz, Mark=1300Hz, Amp=-13.50dBm */
+/* Caller ID Profile */
+0x00, 0x05, 0x00, 0x4C, 0x00, 0x00,
+0x09, 0xD4, /* MPI Length and Command */
+0x16, 0x66, 0x12, 0xD8, 0x0D, 0xDD, 0x12, 0xD8, /* MPI Data */
+0x00, 0x01, /* Checksum Computed by device/API */
+0x00, 0x3C, /* Length of Elements Data */
+0x00, 0x02, /* Mute the far end */
+0x00, 0x04, /* Alert Tone */
+/* Call Waiting Tone for Type II Caller ID */
+/* 439.82 Hz, -13.00 dBm0, 0.00 Hz, -100.00 dBm0 */
+0x09, 0xD4, 0x04, 0xB1, 0x13, 0xF7, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x05, 0x01, 0x2C, /* Alert Tone Part 2 - Tone+Cadence = 300ms */
+0x00, 0x06, 0x00, 0x0A, /* Silence Interval for 10ms */
+0x00, 0x04, /* Alert Tone */
+/* Caller ID Alert Tone */
+/* 2129.88 Hz, -13.00 dBm0, 2749.88 Hz, -13.00 dBm0 */
+0x09, 0xD4, 0x16, 0xB8, 0x13, 0xF7, 0x1D, 0x55, 0x13, 0xF7,
+0x00, 0x05, 0x00, 0x50, /* Alert Tone Part 2 - Tone+Cadence = 80ms */
+0x00, 0x08, 0x00, 0xA0, 0x00, 0xD0, 0x00, 0x00, /* Detect Tone A | D, Timeout = 160ms */
+0x00, 0x06, 0x00, 0x64, /* Silence Interval for 100ms */
+0x00, 0x0A, 0x00, 0x46, /* Mark Signal for 70ms */
+0x00, 0x0B, /* Message Data (FSK Format) */
+0x00, 0x03, /* Unmute the far end */
+0x00, 0x0D  /* End of Transmission */
+};
+
+/* US Caller ID (Type 1 - On-Hook) */
+const VpProfileDataType CLI_TYPE1_US[] = {
+/* Space=2200Hz, Mark=1200Hz, Amp=-7.00dBm */
+/* Caller ID Profile */
+0x00, 0x05, 0x00, 0x20, 0x00, 0x00,
+0x09, 0xD4, /* MPI Length and Command */
+0x17, 0x77, 0x27, 0xD4, 0x0C, 0xCC, 0x27, 0xD4, /* MPI Data */
+0x00, 0x01, /* Checksum Computed by device/API */
+0x00, 0x10, /* Length of Elements Data */
+0x00, 0x06, 0x02, 0x08, /* Silence Interval for 520ms */
+0x00, 0x09, 0x00, 0xFA, /* Channel Seizure for 250ms */
+0x00, 0x0A, 0x00, 0x96, /* Mark Signal for 150ms */
+0x00, 0x0B, /* Message Data (FSK Format) */
+0x00, 0x0D  /* End of Transmission */
+};
+
+/************** Metering_Profile **************/
+int dev_profile_size = sizeof(DEV_PROFILE);
+int dc_profile_size = sizeof(DC_PROFILE);
+int ac_profile_size = sizeof(AC_FXS_RF100_600R_DEF);
+int ring_profile_size = sizeof(RING_20HZ_SINE);
+
+/* end of file profile_88801.c */
diff --git a/tools/voice/zarlink/kernel/profile_88801.h b/tools/voice/zarlink/kernel/profile_88801.h
new file mode 100644
index 0000000..4c8aa08
--- /dev/null
+++ b/tools/voice/zarlink/kernel/profile_88801.h
@@ -0,0 +1,42 @@
+/*
+ * profile_88801.h --
+ *
+ * This header file exports the Profile data types
+ *
+ * Project Info --
+ *   File:   C:\Zarlink\profiles\zl88801_shared_tracker\NewProject.vpw
+ *   Type:   Custom Design Using Microsemi ZL880 - ZL88801
+ *   Date:   Tuesday, November 12, 2013 09:27:50
+ *   Device: ZL880 ZL88801_T
+ *
+ *   This file was generated with Profile Wizard Version: P2.5.0
+ */
+
+#ifndef PROFILE_88801_H
+#define PROFILE_88801_H
+
+#include "vp_api_types.h"
+
+/************** Device Profile **************/
+extern const VpProfileDataType DEV_PROFILE[];        /* Device Configuration Data */
+
+/************** DC Profile **************/
+extern const VpProfileDataType DC_PROFILE[];         /* DC Parameters */
+
+/************** AC Profile **************/
+extern const VpProfileDataType AC_FXS_RF100_600R_DEF[];
+
+/************** Ringing Profile **************/
+extern const VpProfileDataType RING_20HZ_SINE[];     /* Ringing 20Hz, Sine Wave */
+
+/************** Tone Profile **************/
+
+/************** Cadence Profile **************/
+
+/************** Caller ID Profile **************/
+extern const VpProfileDataType CID_TYPE2_US[];       /* US Caller ID Type II */
+extern const VpProfileDataType CLI_TYPE1_US[];       /* US Caller ID (Type 1 - On-Hook) */
+
+/************** Metering_Profile **************/
+
+#endif /* PROFILE_88801_H */
-- 
1.7.5.4

