From 64af2251a3ee2160b2223fa9152f5471e7955196 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Wed, 23 Apr 2014 16:26:28 +0300
Subject: [PATCH 1592/1825] bc2: improved support for customer board porting

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit dcc7b58b2bffcc5a0f58da41d64005947f18f866

	This patch introduces improved support for more intuitive customer porting process.
	Main changes:
	- Customer boards will use board IDs 0:0x10, while Marvell boards IDs will be 0x10 and forward.
	- Added compilation chain for 2 customer boards and relevant needed structures
	usage: ./build.pl -f spi -v 14t1 -i spi -b armada_375_customer[0/1] -c
	- Split general board configuration, DDR topology, & SerDes lanes structures, to Marvell boards structs, and Customer boards structs
	- Implemented new mvBoardIdGet for U-Boot, with pre-compiled differentiation between Marvell and Customer boards,
	  while kernel detects board ID using U-Boot tags.
	  ** kernel must set gBoardId according to U-Boot tags, before any usage of mvBoardIdGet() **
	- Added mvBoardIdIndexGet for any usage of board id as index for arrays
	- Removed ddr3SiliconGetTopologyMap (renamed msysTopologyMap /a38xTopologyMap to TopologyMap)
	- Implemented 2 Customer boards with RD configuration

	** Tested on BC2 DB with U-Boot compiled for Customer, with kernel 3.4 **

Change-Id: I4f9f4012c50f4251bfd093ff8934f2fed7395e5d
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/7188
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-msys/core.c                          |    9 +-
 .../mach-msys/msys_family/boardEnv/mvBoardEnvLib.c |  316 ++++++++------------
 .../mach-msys/msys_family/boardEnv/mvBoardEnvLib.h |    1 +
 .../msys_family/boardEnv/mvBoardEnvSpec.c          |  119 +++++++-
 .../msys_family/boardEnv/mvBoardEnvSpec.h          |   44 +++-
 5 files changed, 290 insertions(+), 199 deletions(-)

diff --git a/arch/arm/mach-msys/core.c b/arch/arm/mach-msys/core.c
index 577bb18..eb069ee 100644
--- a/arch/arm/mach-msys/core.c
+++ b/arch/arm/mach-msys/core.c
@@ -203,7 +203,11 @@ static int __init parse_tag_mv_uboot(const struct tag *tag)
 
 	printk(KERN_INFO "Using UBoot passing parameters structure\n");
 	mvUbootVer = read_tag(tag->u.mv_uboot.uboot_version);
-	gBoardId =  (mvUbootVer & 0xff);
+	/* uboot_version:
+	 * - Board Id is Passed in the lower byte
+	 * - Used to set board ID & structure pointer - must be set before any mvBoardIdGet usage
+	 */
+	mvBoardSet(mvUbootVer & 0xff);
 
 #ifdef CONFIG_MV_NAND
 	/* get NAND ECC type(1-bit or 4-bit) */
@@ -843,9 +847,6 @@ static void __init msys_bc2_rd_init(void)
 	/* Call Aurora/cpu special configurations */
 	cpu_fabric_common_init();
 
-	/* Select appropriate Board ID for Machine */
-	gBoardId = DB_DX_BC2_ID;
-
 	/* init the Board environment */
 	mvBoardEnvInit();
 
diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.c
index 9cc7f7c..3b704c1 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.c
@@ -90,13 +90,36 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define DB1(x)
 #endif
 
-extern MV_BOARD_INFO *boardInfoTbl[];
-#define BOARD_INFO(boardId)	boardInfoTbl[boardId - BOARD_ID_BASE]
+extern MV_BOARD_INFO *marvellBoardInfoTbl[];
+extern MV_BOARD_INFO *customerBoardInfoTbl[];
+static MV_BOARD_INFO *board;
 
 /* Locals */
 static MV_DEV_CS_INFO *boardGetDevEntry(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
 
 /*******************************************************************************
+* mvBoardIdIndexGet
+*
+* DESCRIPTION:
+*	returns an index for board arrays with direct memory access, according to board id
+*
+* INPUT:
+*       boardId.
+*
+* OUTPUT:
+*       direct access index for board arrays
+*
+* RETURN:
+*       None.
+*
+*******************************************************************************/
+MV_U32 mvBoardIdIndexGet(MV_U32 boardId)
+{
+/* Marvell Boards use 0x10 as base for Board ID: mask MSB to receive index for board ID*/
+	return boardId & (MARVELL_BOARD_ID_BASE - 1);
+}
+
+/*******************************************************************************
 * mvBoardEnvInit - Init board
 *
 * DESCRIPTION:
@@ -115,43 +138,39 @@ static MV_DEV_CS_INFO *boardGetDevEntry(MV_32 devNum, MV_BOARD_DEV_CLASS devClas
 *******************************************************************************/
 MV_VOID mvBoardEnvInit(MV_VOID)
 {
-	MV_U32 boardId = mvBoardIdGet();
 	MV_U32 nandDev;
 	MV_U32 norDev;
 
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardEnvInit:Board unknown.\n");
-		return;
-	}
+	mvBoardSet(mvBoardIdGet());
 
 	nandDev = boardGetDevCSNum(0, BOARD_DEV_NAND_FLASH);
 	if (nandDev != 0xFFFFFFFF) {
 		/* Set NAND interface access parameters */
 		nandDev = BOOT_CS;
-		MV_REG_WRITE(DEV_BANK_PARAM_REG(nandDev), BOARD_INFO(boardId)->nandFlashReadParams);
-		MV_REG_WRITE(DEV_BANK_PARAM_REG_WR(nandDev), BOARD_INFO(boardId)->nandFlashWriteParams);
-		MV_REG_WRITE(DEV_NAND_CTRL_REG, BOARD_INFO(boardId)->nandFlashControl);
+		MV_REG_WRITE(DEV_BANK_PARAM_REG(nandDev), board->nandFlashReadParams);
+		MV_REG_WRITE(DEV_BANK_PARAM_REG_WR(nandDev), board->nandFlashWriteParams);
+		MV_REG_WRITE(DEV_NAND_CTRL_REG, board->nandFlashControl);
 	}
 
 	norDev = boardGetDevCSNum(0, BOARD_DEV_NOR_FLASH);
 	if (norDev != 0xFFFFFFFF) {
 		/* Set NOR interface access parameters */
-		MV_REG_WRITE(DEV_BANK_PARAM_REG(norDev), BOARD_INFO(boardId)->norFlashReadParams);
-		MV_REG_WRITE(DEV_BANK_PARAM_REG_WR(norDev), BOARD_INFO(boardId)->norFlashWriteParams);
+		MV_REG_WRITE(DEV_BANK_PARAM_REG(norDev), board->norFlashReadParams);
+		MV_REG_WRITE(DEV_BANK_PARAM_REG_WR(norDev), board->norFlashWriteParams);
 		MV_REG_WRITE(DEV_BUS_SYNC_CTRL, 0x11);
 	}
 
 	/* Set GPP Out value */
-	MV_REG_WRITE(GPP_DATA_OUT_REG(0), BOARD_INFO(boardId)->gppOutValLow);
-	MV_REG_WRITE(GPP_DATA_OUT_REG(1), BOARD_INFO(boardId)->gppOutValMid);
+	MV_REG_WRITE(GPP_DATA_OUT_REG(0), board->gppOutValLow);
+	MV_REG_WRITE(GPP_DATA_OUT_REG(1), board->gppOutValMid);
 
 	/* set GPP polarity */
-	mvGppPolaritySet(0, 0xFFFFFFFF, BOARD_INFO(boardId)->gppPolarityValLow);
-	mvGppPolaritySet(1, 0xFFFFFFFF, BOARD_INFO(boardId)->gppPolarityValMid);
+	mvGppPolaritySet(0, 0xFFFFFFFF, board->gppPolarityValLow);
+	mvGppPolaritySet(1, 0xFFFFFFFF, board->gppPolarityValMid);
 
 	/* Set GPP Out Enable */
-	mvGppTypeSet(0, 0xFFFFFFFF, BOARD_INFO(boardId)->gppOutEnValLow);
-	mvGppTypeSet(1, 0xFFFFFFFF, BOARD_INFO(boardId)->gppOutEnValMid);
+	mvGppTypeSet(0, 0xFFFFFFFF, board->gppOutEnValLow);
+	mvGppTypeSet(1, 0xFFFFFFFF, board->gppOutEnValMid);
 
 }
 
@@ -204,14 +223,14 @@ MV_U16 mvBoardModelGet(MV_VOID)
 *******************************************************************************/
 MV_U16 mvBoardRevGet(MV_VOID)
 {
-	return (mvBoardIdGet() & 0xFFFF);
+	return mvBoardIdIndexGet(mvBoardIdGet()) & 0xFFFF;
 }
 /*******************************************************************************
 * mvBoardNameGet - Get Board name
 *
 * DESCRIPTION:
 *       This function returns a string describing the board model and revision.
-*       String is extracted from board I2C EEPROM.
+*       String is extracted from board I2C EEPROMboard.
 *
 * INPUT:
 *       None.
@@ -225,13 +244,7 @@ MV_U16 mvBoardRevGet(MV_VOID)
 *******************************************************************************/
 MV_STATUS mvBoardNameGet(char *pNameBuff)
 {
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsSPrintf(pNameBuff, "Board unknown.\n");
-		return MV_ERROR;
-	}
-	mvOsSPrintf(pNameBuff, "%s", BOARD_INFO(boardId)->boardName);
+	mvOsSPrintf(pNameBuff, "%s", board->boardName);
 	return MV_OK;
 }
 
@@ -367,16 +380,10 @@ MV_BOOL mvBoardIsPortInMii(MV_U32 ethPortNum)
 *******************************************************************************/
 MV_32 mvBoardSwitchCpuPortGet(MV_U32 switchIdx)
 {
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardSwitchCpuPortGet: Board unknown.\n");
-		return -1;
-	}
-	if ((BOARD_INFO(boardId)->switchInfoNum == 0) || (switchIdx >= BOARD_INFO(boardId)->switchInfoNum))
+	if ((board->switchInfoNum == 0) || (switchIdx >= board->switchInfoNum))
 		return -1;
 
-	return BOARD_INFO(boardId)->pSwitchInfo[switchIdx].cpuPort;
+	return board->pSwitchInfo[switchIdx].cpuPort;
 }
 
 /*******************************************************************************
@@ -397,14 +404,7 @@ MV_32 mvBoardSwitchCpuPortGet(MV_U32 switchIdx)
 *******************************************************************************/
 MV_32 mvBoardPhyAddrGet(MV_U32 ethPortNum)
 {
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardPhyAddrGet: Board unknown.\n");
-		return MV_ERROR;
-	}
-
-	return BOARD_INFO(boardId)->pBoardMacInfo[ethPortNum].boardEthSmiAddr;
+	return board->pBoardMacInfo[ethPortNum].boardEthSmiAddr;
 }
 /*******************************************************************************
 * mvBoardQuadPhyAddr0Get - Get the phy address
@@ -424,14 +424,7 @@ MV_32 mvBoardPhyAddrGet(MV_U32 ethPortNum)
 *******************************************************************************/
 MV_32 mvBoardQuadPhyAddr0Get(MV_U32 ethPortNum)
 {
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardQuadPhyAddr0Get: Board unknown.\n");
-		return MV_ERROR;
-	}
-
-	return BOARD_INFO(boardId)->pBoardMacInfo[ethPortNum].boardEthSmiAddr0;
+	return board->pBoardMacInfo[ethPortNum].boardEthSmiAddr0;
 }
 
 /*******************************************************************************
@@ -452,14 +445,7 @@ MV_32 mvBoardQuadPhyAddr0Get(MV_U32 ethPortNum)
 *******************************************************************************/
 MV_32 mvBoardPhyLinkCryptPortAddrGet(MV_U32 ethPortNum)
 {
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardPhyLinkCryptPortAddrGet: Board unknown.\n");
-		return MV_ERROR;
-	}
-
-	return BOARD_INFO(boardId)->pBoardMacInfo[ethPortNum].LinkCryptPortAddr;
+	return board->pBoardMacInfo[ethPortNum].LinkCryptPortAddr;
 }
 
 MV_BOOL mvBoardIsPortInRgmii(MV_U32 ethPortNum)
@@ -485,13 +471,7 @@ MV_BOOL mvBoardIsPortInRgmii(MV_U32 ethPortNum)
 *******************************************************************************/
 MV_BOARD_MAC_SPEED mvBoardMacSpeedGet(MV_U32 ethPortNum)
 {
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardMacSpeedGet: Board unknown.\n");
-		return MV_ERROR;
-	}
-	return BOARD_INFO(boardId)->pBoardMacInfo[ethPortNum].boardMacSpeed;
+	return board->pBoardMacInfo[ethPortNum].boardMacSpeed;
 }
 
 /*******************************************************************************
@@ -573,20 +553,12 @@ MV_U32 mvBoardSysClkGet(MV_VOID)
 *******************************************************************************/
 MV_32 mvBoarGpioPinNumGet(MV_BOARD_GPP_CLASS gppClass, MV_U32 index)
 {
-	MV_U32 boardId, i;
-	MV_U32 indexFound = 0;
+	MV_U32 i, indexFound = 0;
 
-	boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardRTCGpioPinGet:Board unknown.\n");
-		return MV_ERROR;
-	}
-
-	for (i = 0; i < BOARD_INFO(boardId)->numBoardGppInfo; i++) {
-		if (BOARD_INFO(boardId)->pBoardGppInfo[i].devClass == gppClass) {
+	for (i = 0; i < board->numBoardGppInfo; i++) {
+		if (board->pBoardGppInfo[i].devClass == gppClass) {
 			if (indexFound == index)
-				return (MV_U32) BOARD_INFO(boardId)->pBoardGppInfo[i].gppPinNum;
+				return (MV_U32) board->pBoardGppInfo[i].gppPinNum;
 			else
 				indexFound++;
 		}
@@ -690,24 +662,15 @@ MV_32 mvBoardSDIOGpioPinGet(MV_BOARD_GPP_CLASS type)
 *******************************************************************************/
 MV_U32 mvBoardGpioIntMaskGet(MV_U32 gppGrp)
 {
-	MV_U32 boardId;
-
-	boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardGpioIntMaskGet:Board unknown.\n");
-		return MV_ERROR;
-	}
-
 	switch (gppGrp) {
 	case (0):
-		return BOARD_INFO(boardId)->intsGppMaskLow;
+		return board->intsGppMaskLow;
 		break;
 	case (1):
-		return BOARD_INFO(boardId)->intsGppMaskMid;
+		return board->intsGppMaskMid;
 		break;
 	case (2):
-		return BOARD_INFO(boardId)->intsGppMaskHigh;
+		return board->intsGppMaskHigh;
 		break;
 	default:
 		return MV_ERROR;
@@ -735,21 +698,13 @@ MV_U32 mvBoardGpioIntMaskGet(MV_U32 gppGrp)
 *******************************************************************************/
 MV_32 mvBoardMppGet(MV_U32 mppGroupNum)
 {
-	MV_U32 boardId;
 	MV_U32 mppMod;
 
-	boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardMppGet:Board unknown.\n");
-		return MV_ERROR;
-	}
-
-	mppMod = BOARD_INFO(boardId)->pBoardModTypeValue->boardMppMod;
-	if (mppMod >= BOARD_INFO(boardId)->numBoardMppConfigValue)
+	mppMod = board->pBoardModTypeValue->boardMppMod;
+	if (mppMod >= board->numBoardMppConfigValue)
 		mppMod = 0; /* default */
 
-	return BOARD_INFO(boardId)->pBoardMppConfigValue[mppMod].mppGroup[mppGroupNum];
+	return board->pBoardMppConfigValue[mppMod].mppGroup[mppGroupNum];
 }
 
 /*******************************************************************************
@@ -770,20 +725,11 @@ MV_32 mvBoardMppGet(MV_U32 mppGroupNum)
 *******************************************************************************/
 MV_U32 mvBoardGppConfigGet(void)
 {
-	MV_U32 boardId, i;
-	MV_U32 result = 0;
-	MV_U32 gpp;
-
-	boardId = mvBoardIdGet();
+	MV_U32 gpp, i, result = 0;
 
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardGppConfigGet: Board unknown.\n");
-		return 0;
-	}
-
-	for (i = 0; i < BOARD_INFO(boardId)->numBoardGppInfo; i++) {
-		if (BOARD_INFO(boardId)->pBoardGppInfo[i].devClass == BOARD_GPP_CONF) {
-			gpp = BOARD_INFO(boardId)->pBoardGppInfo[i].gppPinNum;
+	for (i = 0; i < board->numBoardGppInfo; i++) {
+		if (board->pBoardGppInfo[i].devClass == BOARD_GPP_CONF) {
+			gpp = board->pBoardGppInfo[i].gppPinNum;
 			result <<= 1;
 			result |= (mvGppValueGet(gpp >> 5, 1 << (gpp & 0x1F)) >> (gpp & 0x1F));
 		}
@@ -870,15 +816,9 @@ MV_BOOL mvBoardIsGbEPortConnected(MV_U32 ethPortNum)
 MV_32 mvBoardGetDevicesNumber(MV_BOARD_DEV_CLASS devClass)
 {
 	MV_U32 foundIndex = 0, devNum;
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("mvBoardGetDeviceNumber:Board unknown.\n");
-		return 0xFFFFFFFF;
-	}
 
-	for (devNum = START_DEV_CS; devNum < BOARD_INFO(boardId)->numBoardDeviceIf; devNum++) {
-		if (BOARD_INFO(boardId)->pDevCsInfo[devNum].devClass == devClass)
+	for (devNum = START_DEV_CS; devNum < board->numBoardDeviceIf; devNum++) {
+		if (board->pDevCsInfo[devNum].devClass == devClass)
 			foundIndex++;
 	}
 
@@ -935,12 +875,6 @@ MV_32 mvBoardGetDeviceBaseAddr(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 MV_32 mvBoardGetDeviceBusWidth(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 {
 	MV_DEV_CS_INFO *devEntry;
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("Board unknown.\n");
-		return 0xFFFFFFFF;
-	}
 
 	devEntry = boardGetDevEntry(devNum, devClass);
 	if (devEntry != NULL)
@@ -970,12 +904,6 @@ MV_32 mvBoardGetDeviceBusWidth(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 MV_32 mvBoardGetDeviceWidth(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 {
 	MV_DEV_CS_INFO *devEntry;
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("Board unknown.\n");
-		return 0xFFFFFFFF;
-	}
 
 	devEntry = boardGetDevEntry(devNum, devClass);
 	if (devEntry != NULL)
@@ -1005,12 +933,6 @@ MV_32 mvBoardGetDeviceWidth(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 MV_32 mvBoardGetDeviceWinSize(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 {
 	MV_DEV_CS_INFO *devEntry;
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("Board unknown.\n");
-		return 0xFFFFFFFF;
-	}
 
 	devEntry = boardGetDevEntry(devNum, devClass);
 	if (devEntry != NULL)
@@ -1039,17 +961,11 @@ MV_32 mvBoardGetDeviceWinSize(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 static MV_DEV_CS_INFO *boardGetDevEntry(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 {
 	MV_U32 foundIndex = 0, devIndex;
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("boardGetDevEntry: Board unknown.\n");
-		return NULL;
-	}
 
-	for (devIndex = START_DEV_CS; devIndex < BOARD_INFO(boardId)->numBoardDeviceIf; devIndex++) {
-		if (BOARD_INFO(boardId)->pDevCsInfo[devIndex].devClass == devClass) {
+	for (devIndex = START_DEV_CS; devIndex < board->numBoardDeviceIf; devIndex++) {
+		if (board->pDevCsInfo[devIndex].devClass == devClass) {
 			if (foundIndex == devNum)
-				return &(BOARD_INFO(boardId)->pDevCsInfo[devIndex]);
+				return &(board->pDevCsInfo[devIndex]);
 			foundIndex++;
 		}
 	}
@@ -1079,12 +995,6 @@ static MV_DEV_CS_INFO *boardGetDevEntry(MV_32 devNum, MV_BOARD_DEV_CLASS devClas
 MV_U32 boardGetDevCSNum(MV_32 devNum, MV_BOARD_DEV_CLASS devClass)
 {
 	MV_DEV_CS_INFO *devEntry;
-	MV_U32 boardId = mvBoardIdGet();
-
-	if (!((boardId >= BOARD_ID_BASE) && (boardId < MV_MAX_BOARD_ID))) {
-		mvOsPrintf("Board unknown.\n");
-		return 0xFFFFFFFF;
-	}
 
 	devEntry = boardGetDevEntry(devNum, devClass);
 	if (devEntry != NULL)
@@ -1115,12 +1025,11 @@ MV_U8 mvBoardTwsiAddrTypeGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index)
 {
 	int i;
 	MV_U32 indexFound = 0;
-	MV_U32 boardId = mvBoardIdGet();
 
-	for (i = 0; i < BOARD_INFO(boardId)->numBoardTwsiDev; i++) {
-		if (BOARD_INFO(boardId)->pBoardTwsiDev[i].devClass == twsiClass) {
+	for (i = 0; i < board->numBoardTwsiDev; i++) {
+		if (board->pBoardTwsiDev[i].devClass == twsiClass) {
 			if (indexFound == index)
-				return BOARD_INFO(boardId)->pBoardTwsiDev[i].twsiDevAddrType;
+				return board->pBoardTwsiDev[i].twsiDevAddrType;
 			else
 				indexFound++;
 		}
@@ -1150,12 +1059,11 @@ MV_U8 mvBoardTwsiAddrGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index)
 {
 	int i;
 	MV_U32 indexFound = 0;
-	MV_U32 boardId = mvBoardIdGet();
 
-	for (i = 0; i < BOARD_INFO(boardId)->numBoardTwsiDev; i++) {
-		if (BOARD_INFO(boardId)->pBoardTwsiDev[i].devClass == twsiClass) {
+	for (i = 0; i < board->numBoardTwsiDev; i++) {
+		if (board->pBoardTwsiDev[i].devClass == twsiClass) {
 			if (indexFound == index)
-				return BOARD_INFO(boardId)->pBoardTwsiDev[i].twsiDevAddr;
+				return board->pBoardTwsiDev[i].twsiDevAddr;
 			else
 				indexFound++;
 		}
@@ -1181,9 +1089,8 @@ MV_32 mvBoardNandWidthGet(void)
 {
 	MV_U32 devNum;
 	MV_U32 devWidth;
-	MV_U32 boardId = mvBoardIdGet();
 
-	for (devNum = START_DEV_CS; devNum < BOARD_INFO(boardId)->numBoardDeviceIf; devNum++) {
+	for (devNum = START_DEV_CS; devNum < board->numBoardDeviceIf; devNum++) {
 		devWidth = mvBoardGetDeviceWidth(devNum, BOARD_DEV_NAND_FLASH);
 		if (devWidth != MV_ERROR)
 			return (devWidth / 8);
@@ -1193,7 +1100,42 @@ MV_32 mvBoardNandWidthGet(void)
 	return MV_ERROR;
 }
 
-MV_U32 gBoardId = -1;
+/*******************************************************************************
+* mvBoardSet - Set Board model
+*
+* DESCRIPTION:
+*       This function sets the board ID.
+*       Board ID is 32bit word constructed of board model (16bit) and
+*       board revision (16bit) in the following way: 0xMMMMRRRR.
+*
+* INPUT:
+*       None.
+*
+* OUTPUT:
+*       None.
+*
+* RETURN:
+*       void
+*
+*******************************************************************************/
+static MV_U32 gBoardId = -1;
+MV_VOID mvBoardSet(MV_U32 boardId)
+{
+	/* board ID's >0x10 are for Marvell Boards */
+	if (boardId >= MARVELL_BOARD_ID_BASE && boardId < MV_MAX_MARVELL_BOARD_ID) { /* Marvell Board */
+		board = marvellBoardInfoTbl[mvBoardIdIndexGet(boardId)];
+		gBoardId = boardId;
+	} else if (boardId >= CUTOMER_BOARD_ID_BASE && boardId < MV_MAX_CUSTOMER_BOARD_ID) { /* Customer Board */
+		board = customerBoardInfoTbl[mvBoardIdIndexGet(boardId)];
+		gBoardId = boardId;
+	} else {
+		mvOsPrintf("%s: Error: wrong board Id (%d)\n", __func__, boardId);
+		gBoardId = 0;
+		board = customerBoardInfoTbl[gBoardId];
+		mvOsPrintf("Applying default board ID (%d: %s)\n", gBoardId, board->boardName);
+	}
+}
+
 /*******************************************************************************
 * mvBoardIdGet - Get Board model
 *
@@ -1214,21 +1156,30 @@ MV_U32 gBoardId = -1;
 *******************************************************************************/
 MV_U32 mvBoardIdGet(MV_VOID)
 {
-	if (gBoardId == -1) {
-#if defined(DB_BOBCAT2)
+	if (gBoardId != -1)
+		return gBoardId;
+
+#ifdef CONFIG_CUSTOMER_BOARD_SUPPORT
+	#ifdef CONFIG_CUSTOMER_BOARD_0
+		gBoardId = BOBCAT2_CUSTOMER_BOARD_ID0;
+	#elif CONFIG_CUSTOMER_BOARD_1
+		gBoardId = BOBCAT2_CUSTOMER_BOARD_ID1;
+	#endif
+#else
+	#if defined(DB_BOBCAT2)
 		gBoardId = DB_DX_BC2_ID;
-#elif defined(RD_BOBCAT2)
+	#elif defined(RD_BOBCAT2)
 		gBoardId = RD_DX_BC2_ID;
-#elif defined(RD_MTL_BOBCAT2)
+	#elif defined(RD_MTL_BOBCAT2)
 		gBoardId = RD_MTL_BC2;
-#else
-		mvOsPrintf("mvBoardIdSet: Board ID must be defined!\n");
+	#else
+		mvOsPrintf("%s: Board ID must be defined!\n", __func__);
 		while (1)
 			continue;
+	#endif
 #endif
-	}
-	return gBoardId;
 
+	return gBoardId;
 }
 /*******************************************************************************
 * mvBoardTwsiRead -
@@ -1631,11 +1582,7 @@ MV_BOOL mvBoardIsSwitchModuleConnected(void)
 *******************************************************************************/
 MV_BOARD_PEX_INFO *mvBoardPexInfoGet(void)
 {
-	MV_U32 boardId;
-
-	boardId = mvBoardIdGet();
-
-	return &BOARD_INFO(boardId)->boardPexInfo;
+	return &board->boardPexInfo;
 }
 
 /*******************************************************************************
@@ -1660,15 +1607,14 @@ MV_VOID mvBoardDebugLed(MV_U32 hexNum)
 	MV_U32 mask[MV_GPP_MAX_GROUP] = {0};
 	MV_U32 digitMask;
 	MV_U32 i, pinNum, gppGroup;
-	MV_U32 boardId = mvBoardIdGet();
 
-	if (BOARD_INFO(boardId)->pLedGppPin == NULL)
+	if (board->pLedGppPin == NULL)
 		return;
 
-	hexNum &= (1 << BOARD_INFO(boardId)->activeLedsNumber) - 1;
+	hexNum &= (1 << board->activeLedsNumber) - 1;
 
-	for (i = 0, digitMask = 1; i < BOARD_INFO(boardId)->activeLedsNumber; i++, digitMask <<= 1) {
-			pinNum = BOARD_INFO(boardId)->pLedGppPin[i];
+	for (i = 0, digitMask = 1; i < board->activeLedsNumber; i++, digitMask <<= 1) {
+			pinNum = board->pLedGppPin[i];
 			gppGroup = pinNum / 32;
 			if (hexNum & digitMask)
 				val[gppGroup]  |= (1 << (pinNum - gppGroup * 32));
@@ -1678,7 +1624,7 @@ MV_VOID mvBoardDebugLed(MV_U32 hexNum)
 	for (gppGroup = 0; gppGroup < MV_GPP_MAX_GROUP; gppGroup++) {
 		/* If at least one bit is set in the mask, update the whole GPP group */
 		if (mask[gppGroup])
-			mvGppValueSet(gppGroup, mask[gppGroup], BOARD_INFO(boardId)->ledsPolarity == 0 ?
+			mvGppValueSet(gppGroup, mask[gppGroup], board->ledsPolarity == 0 ?
 					val[gppGroup] : ~val[gppGroup]);
 	}
 
diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h
index b87b91f..4398aaf 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvLib.h
@@ -289,6 +289,7 @@ MV_U32 boardGetDevCSNum(MV_32 devNum, MV_BOARD_DEV_CLASS devClass);
 MV_U8 mvBoardTwsiAddrTypeGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index);
 MV_U8 mvBoardTwsiAddrGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U32 index);
 MV_32 mvBoardNandWidthGet(void);
+MV_VOID mvBoardSet(MV_U32 boardId);
 MV_U32 mvBoardIdGet(MV_VOID);
 MV_U32 mvBoardSledCpuNumGet(MV_VOID);
 
diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c
index 8ad9a7d..30b6078 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c
@@ -69,6 +69,122 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #define ARRSZ(x)	(sizeof(x)/sizeof(x[0]))
 
+/***************************************** Customer Boards ****************************************/
+/*******************************************************************************
+	Bobcat2 board - Based on BOBCAT2-DB-DX
+*******************************************************************************/
+#define BOBCAT2_CUSTOMER_0_BOARD_NAND_READ_PARAMS	0x000C0282
+#define BOBCAT2_CUSTOMER_0_BOARD_NAND_WRITE_PARAMS	0x00010305
+/*NAND care support for small page chips*/
+#define BOBCAT2_CUSTOMER_0_BOARD_NAND_CONTROL		0x01c00543
+
+#define BOBCAT2_CUSTOMER_0_BOARD_NOR_READ_PARAMS	0x403E07CF
+#define BOBCAT2_CUSTOMER_0_BOARD_NOR_WRITE_PARAMS	0x000F0F0F
+
+MV_BOARD_TWSI_INFO	bobcat2_customer_board_0_InfoBoardTwsiDev[] = {
+/* {{MV_BOARD_DEV_CLASS	devClass, MV_U8	twsiDevAddr, MV_U8 twsiDevAddrType}} */
+	{BOARD_DEV_TWSI_PLD, 0x30, ADDR7_BIT},		/* Access to control PLD reg file */
+	{BOARD_DEV_TWSI_ZARLINK, 0x18, ADDR7_BIT},		/* Access to Zarlink */
+	{BOARD_DEV_TWSI_SATR, 0x4C, ADDR7_BIT},         /* SatR bios 0		*/
+	{BOARD_DEV_TWSI_SATR, 0x4D, ADDR7_BIT},         /* SatR bios 1		*/
+	{BOARD_DEV_TWSI_SATR, 0x4E, ADDR7_BIT},          /* SatR bios 2		*/
+	{BOARD_DEV_TWSI_SATR, 0x4F, ADDR7_BIT},          /* SatR bios 3		*/
+	{BOARD_DEV_TWSI_INIT_EPROM, 0x50, ADDR7_BIT},          /* Serial Ini EPROM	*/
+	{BOARD_DEV_TWSI_PCA9555_IO_EXPANDER, 0x20, ADDR7_BIT},          /* Qsgmii/sfp mux control PCA9555 IO expander */
+	{BOARD_DEV_TWSI_PCA9548_IO_MUX, 0x70, ADDR7_BIT},          /* PCA9548 I2C mux 0	*/
+	{BOARD_DEV_TWSI_PCA9548_IO_MUX, 0x71, ADDR7_BIT},          /* PCA9548 I2C mux 1	*/
+	{BOARD_DEV_TWSI_PCA9548_IO_MUX, 0x75, ADDR7_BIT}          /* PCA9548 I2C mux 2	*/
+};
+
+MV_BOARD_MAC_INFO bobcat2_customer_board_0_InfoBoardMacInfo[] = {
+	/* {{MV_BOARD_MAC_SPEED	boardMacSpeed, MV_U8 boardEthSmiAddr}} */
+	{BOARD_MAC_SPEED_AUTO, 0x0, 0x0, 0x0 },
+	{BOARD_MAC_SPEED_AUTO, 0x1, 0x0, 0x1 },
+};
+
+MV_BOARD_MODULE_TYPE_INFO bobcat2_customer_board_0_InfoBoardModTypeInfo[] = {
+	{
+		.boardMppMod		= MV_BOARD_AUTO,
+	}
+};
+
+MV_BOARD_GPP_INFO bobcat2_customer_board_0_InfoBoardGppInfo[] = {
+	/* {{MV_BOARD_GPP_CLASS	devClass, MV_U8	gppPinNum}} */
+	{BOARD_GPP_USB_VBUS,    24} /* from MPP map */
+	/*{BOARD_GPP_RESET,       47},*/
+};
+
+MV_DEV_CS_INFO bobcat2_customer_board_0_InfoBoardDeCsInfo[] = {
+	/*{deviceCS, params, devType, devWidth, busWidth }*/
+#if defined(MV_INCLUDE_SPI)
+	{SPI_CS0, N_A, BOARD_DEV_SPI_FLASH, 8, 8}, /* SPI DEV */
+#endif
+#if defined(MV_INCLUDE_NOR)
+	{DEV_BOOCS, N_A, BOARD_DEV_NOR_FLASH, 16, 16} /* NOR DEV */
+#endif
+};
+
+MV_BOARD_MPP_INFO bobcat2_customer_board_0_InfoBoardMppConfigValue[] = {
+	{ {
+	BOBCAT2_CUSTOMER_0_MPP0_7,
+	BOBCAT2_CUSTOMER_0_MPP8_15,
+	BOBCAT2_CUSTOMER_0_MPP16_23,
+	BOBCAT2_CUSTOMER_0_MPP24_31,
+	BOBCAT2_CUSTOMER_0_MPP32_39,
+	} },
+};
+
+MV_BOARD_INFO bobcat2_customer_board_0_Info = {
+	.boardName			= "BOBCAT2-Customer-Board-0",
+	.numBoardMppTypeValue		= ARRSZ(bobcat2_customer_board_0_InfoBoardModTypeInfo),
+	.pBoardModTypeValue		= bobcat2_customer_board_0_InfoBoardModTypeInfo,
+	.numBoardMppConfigValue		= ARRSZ(bobcat2_customer_board_0_InfoBoardMppConfigValue),
+	.pBoardMppConfigValue		= bobcat2_customer_board_0_InfoBoardMppConfigValue,
+	.intsGppMaskLow			= 0,
+	.intsGppMaskMid			= 0,
+	.intsGppMaskHigh		= 0,
+	.numBoardDeviceIf		= ARRSZ(bobcat2_customer_board_0_InfoBoardDeCsInfo),
+	.pDevCsInfo			= bobcat2_customer_board_0_InfoBoardDeCsInfo,
+	.numBoardTwsiDev		= ARRSZ(bobcat2_customer_board_0_InfoBoardTwsiDev),
+	.pBoardTwsiDev			= bobcat2_customer_board_0_InfoBoardTwsiDev,
+	.numBoardMacInfo		= ARRSZ(bobcat2_customer_board_0_InfoBoardMacInfo),
+	.pBoardMacInfo			= bobcat2_customer_board_0_InfoBoardMacInfo,
+	.numBoardGppInfo		= ARRSZ(bobcat2_customer_board_0_InfoBoardGppInfo),
+	.pBoardGppInfo			= bobcat2_customer_board_0_InfoBoardGppInfo,
+	.activeLedsNumber		= 0,
+	.pLedGppPin			= NULL,
+	.ledsPolarity			= 0,
+
+	/* GPP values */
+	.gppOutEnValLow			= BOBCAT2_CUSTOMER_0_GPP_OUT_ENA_LOW,
+	.gppOutEnValMid			= BOBCAT2_CUSTOMER_0_GPP_OUT_ENA_MID,
+	.gppOutEnValHigh		= 0,
+	.gppOutValLow			= BOBCAT2_CUSTOMER_0_GPP_OUT_VAL_LOW,
+	.gppOutValMid			= BOBCAT2_CUSTOMER_0_GPP_OUT_VAL_MID,
+	.gppOutValHigh			= 0,
+	.gppPolarityValLow		= BOBCAT2_CUSTOMER_0_GPP_POL_LOW,
+	.gppPolarityValMid		= BOBCAT2_CUSTOMER_0_GPP_POL_MID,
+	.gppPolarityValHigh		= 0,
+
+	/* External Switch Configuration */
+	.pSwitchInfo = NULL,
+	.switchInfoNum = 0,
+
+	/* NAND init params */
+	.nandFlashReadParams		= BOBCAT2_CUSTOMER_0_BOARD_NAND_READ_PARAMS,
+	.nandFlashWriteParams		= BOBCAT2_CUSTOMER_0_BOARD_NAND_WRITE_PARAMS,
+	.nandFlashControl		= BOBCAT2_CUSTOMER_0_BOARD_NAND_CONTROL,
+	/* NOR init params */
+	.norFlashReadParams		= BOBCAT2_CUSTOMER_0_BOARD_NOR_READ_PARAMS,
+	.norFlashWriteParams		= BOBCAT2_CUSTOMER_0_BOARD_NOR_WRITE_PARAMS
+};
+
+MV_BOARD_INFO *customerBoardInfoTbl[] = {
+	&bobcat2_customer_board_0_Info,
+	&bobcat2_customer_board_0_Info,
+};
+
+/***************************************** Marvell Boards *****************************************/
 /***********************/
 /* BOBCAT2-DB-DX BOARD */
 /***********************/
@@ -338,9 +454,8 @@ MV_BOARD_INFO bc2_rd_mtlInfo = {
 
 /*********************************************************************************/
 
-MV_BOARD_INFO *boardInfoTbl[] = {
+MV_BOARD_INFO *marvellBoardInfoTbl[] = {
 	&db_dx_bc2Info,
 	&rd_dx_bc2Info,
 	&bc2_rd_mtlInfo
 };
-
diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.h b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.h
index ae9f95d..ec670d9 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.h
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.h
@@ -72,16 +72,44 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 /* Board specific configuration */
 /* ============================ */
 
-/* boards ID numbers */
-#define BOARD_ID_BASE		0x0
+/* Customer boards */
+#define CUTOMER_BOARD_ID_BASE		0x0
+#define BOBCAT2_CUSTOMER_BOARD_ID0	(CUTOMER_BOARD_ID_BASE + 0)
+#define BOBCAT2_CUSTOMER_BOARD_ID1	(CUTOMER_BOARD_ID_BASE + 1)
+#define MV_MAX_CUSTOMER_BOARD_ID	(CUTOMER_BOARD_ID_BASE + 2)
+#define MV_CUSTOMER_BOARD_NUM		(MV_MAX_CUSTOMER_BOARD_ID - CUTOMER_BOARD_ID_BASE)
+
+/* Marvell boards */
+#define MARVELL_BOARD_ID_BASE		0x10
+#define DB_DX_BC2_ID			(MARVELL_BOARD_ID_BASE + 0)
+#define RD_DX_BC2_ID			(MARVELL_BOARD_ID_BASE + 1)
+#define RD_MTL_BC2			(MARVELL_BOARD_ID_BASE + 2)
+#define MV_MAX_MARVELL_BOARD_ID		(MARVELL_BOARD_ID_BASE + 3)
+#define MV_MARVELL_BOARD_NUM		(MV_MAX_MARVELL_BOARD_ID - MARVELL_BOARD_ID_BASE)
+
+#define INVALID_BAORD_ID		0xFFFF
 
-/* New board ID numbers */
-#define DB_DX_BC2_ID		(BOARD_ID_BASE)
-#define RD_DX_BC2_ID		(DB_DX_BC2_ID + 1)
-#define RD_MTL_BC2		(RD_DX_BC2_ID + 1)
+/*******************************************************************************
+* Bobcat2 Customer board - Based on DB_DX_BC2
+*******************************************************************************/
+
+#define BOBCAT2_CUSTOMER_0_MPP0_7		0x22242222
+#define BOBCAT2_CUSTOMER_0_MPP8_15		0x11122222
+#define BOBCAT2_CUSTOMER_0_MPP16_23		0x44444044
+#define BOBCAT2_CUSTOMER_0_MPP24_31		0x14444444
+#define BOBCAT2_CUSTOMER_0_MPP32_39		0x00000001
+
+#define BOBCAT2_CUSTOMER_0_GPP_OUT_ENA_LOW	(~(BIT0 | BIT2 | BIT3 | BIT4 | BIT6 | BIT12\
+						 | BIT13 | BIT16 | BIT17 | BIT20 | BIT29  | BIT30))
+#define BOBCAT2_CUSTOMER_0_GPP_OUT_ENA_MID	(~(0))
+
+#define BOBCAT2_CUSTOMER_0_GPP_OUT_VAL_LOW	(BIT0 | BIT2 | BIT3 | BIT4 | BIT6 | BIT12\
+						| BIT13 | BIT16 | BIT17 | BIT20 | BIT29  | BIT30)
+#define BOBCAT2_CUSTOMER_0_GPP_OUT_VAL_MID	0x0
+
+#define BOBCAT2_CUSTOMER_0_GPP_POL_LOW		0x0
+#define BOBCAT2_CUSTOMER_0_GPP_POL_MID		0x0
 
-#define MV_MAX_BOARD_ID		(RD_MTL_BC2 + 1)
-#define INVALID_BAORD_ID	0xFFFF
 
 /******************/
 /*   RD_DX_BC2    */
-- 
1.7.5.4

