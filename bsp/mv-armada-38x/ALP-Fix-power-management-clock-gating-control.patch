From b42e8182b61846cd7e8762ad48ee5ad6b22201ab Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Sun, 14 Apr 2013 00:46:11 +0300
Subject: [PATCH 0587/1825] ALP: Fix power management clock gating control

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 9b347c2b13836808e32a5897bbf258700824e55b

AvantaLP has only one register to control power/clock of every SoC controller.
The register is: Runit_RFU->SOC_Misc->Power Management Clock Gating Control (0x18220).

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I7c67fd5279eba9ab22ea46b399b45ca3bdfb7a2e
Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/1575
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |  255 ++------------------
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |    6 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |  247 +++----------------
 3 files changed, 52 insertions(+), 456 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index d551951..9a25485 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -409,6 +409,7 @@ MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode)
 {
 	MV_FREQ_MODE freqTable[] = MV_SAR_FREQ_MODES;
 	MV_U32 freqModeSatRValue = mvCtrlSatRRead(MV_SATR_CPU_DDR_L2_FREQ);
+
 	if (MV_ERROR != freqModeSatRValue) {
 		*freqMode = freqTable[freqModeSatRValue];
 		return MV_OK;
@@ -1518,8 +1519,6 @@ MV_BOOL mvCtrlIsBootFromNAND(MV_VOID)
 *******************************************************************************/
 MV_VOID mvCtrlPwrClckSet(MV_UNIT_ID unitId, MV_U32 index, MV_BOOL enable)
 {
-	/* kostaz: FIXME: verify 0x18220 is not changed */
-
 	/* Clock gating is not supported on FPGA */
 	if (mvCtrlModelGet() == MV_FPGA_DEV_ID)
 		return;
@@ -1528,62 +1527,44 @@ MV_VOID mvCtrlPwrClckSet(MV_UNIT_ID unitId, MV_U32 index, MV_BOOL enable)
 #if defined(MV_INCLUDE_PEX)
 	case PEX_UNIT_ID:
 		if (enable == MV_FALSE)
-			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_PEXSTOPCLOCK_MASK(index));
-		else
-			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_PEXSTOPCLOCK_MASK(index));
-
-		break;
-#endif
-#if defined(MV_INCLUDE_GIG_ETH)
-	case ETH_GIG_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_GESTOPCLOCK_MASK(index));
+			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_PEX_STOP_CLK_MASK(index));
 		else
-			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_GESTOPCLOCK_MASK(index));
+			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_PEX_STOP_CLK_MASK(index));
 
 		break;
 #endif
 #if defined(MV_INCLUDE_INTEG_SATA)
 	case SATA_UNIT_ID:
 		if (enable == MV_FALSE)
-			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_SATASTOPCLOCK_MASK(index));
-		else
-			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_SATASTOPCLOCK_MASK(index));
-
-		break;
-#endif
-#if defined(MV_INCLUDE_CESA)
-	case CESA_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_CESASTOPCLOCK_MASK);
+			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_SATA_STOP_CLK_MASK);
 		else
-			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_CESASTOPCLOCK_MASK);
+			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_SATA_STOP_CLK_MASK);
 
 		break;
 #endif
 #if defined(MV_INCLUDE_USB)
 	case USB_UNIT_ID:
 		if (enable == MV_FALSE)
-			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_USBSTOPCLOCK_MASK(index));
+			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_USB_STOP_CLK_MASK(index));
 		else
-			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_USBSTOPCLOCK_MASK(index));
+			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_USB_STOP_CLK_MASK(index));
 
 		break;
 #endif
 #if defined(MV_INCLUDE_SDIO)
 	case SDIO_UNIT_ID:
 		if (enable == MV_FALSE)
-			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_SDIOSTOPCLOCK_MASK);
+			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_SDIO_STOP_CLK_MASK);
 		else
-			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_SDIOSTOPCLOCK_MASK);
+			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_SDIO_STOP_CLK_MASK);
 
 		break;
 #endif
 	case TDM_32CH_UNIT_ID:
 		if (enable == MV_FALSE)
-			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_TDMSTOPCLOCK_MASK);
+			MV_REG_BIT_RESET(POWER_MNG_CTRL_REG, PMC_TDM_STOP_CLK_MASK);
 		else
-			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_TDMSTOPCLOCK_MASK);
+			MV_REG_BIT_SET(POWER_MNG_CTRL_REG, PMC_TDM_STOP_CLK_MASK);
 		break;
 	default:
 		break;
@@ -1613,15 +1594,7 @@ MV_BOOL mvCtrlPwrClckGet(MV_UNIT_ID unitId, MV_U32 index)
 	switch (unitId) {
 #if defined(MV_INCLUDE_PEX)
 	case PEX_UNIT_ID:
-		if ((reg & PMC_PEXSTOPCLOCK_MASK(index)) == PMC_PEXSTOPCLOCK_STOP(index))
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-#if defined(MV_INCLUDE_GIG_ETH)
-	case ETH_GIG_UNIT_ID:
-		if ((reg & PMC_GESTOPCLOCK_MASK(index)) == PMC_GESTOPCLOCK_STOP(index))
+		if ((reg & PMC_PEX_STOP_CLK_MASK(index)) == PMC_PEX_STOP_CLK_STOP(index))
 			state = MV_FALSE;
 		else
 			state = MV_TRUE;
@@ -1629,15 +1602,7 @@ MV_BOOL mvCtrlPwrClckGet(MV_UNIT_ID unitId, MV_U32 index)
 #endif
 #if defined(MV_INCLUDE_SATA)
 	case SATA_UNIT_ID:
-		if ((reg & PMC_SATASTOPCLOCK_MASK(index)) == PMC_SATASTOPCLOCK_STOP(index))
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-#if defined(MV_INCLUDE_CESA)
-	case CESA_UNIT_ID:
-		if ((reg & PMC_CESASTOPCLOCK_MASK) == PMC_CESASTOPCLOCK_STOP)
+		if ((reg & PMC_SATA_STOP_CLK_MASK) == PMC_SATA_STOP_CLK_STOP)
 			state = MV_FALSE;
 		else
 			state = MV_TRUE;
@@ -1645,7 +1610,7 @@ MV_BOOL mvCtrlPwrClckGet(MV_UNIT_ID unitId, MV_U32 index)
 #endif
 #if defined(MV_INCLUDE_USB)
 	case USB_UNIT_ID:
-		if ((reg & PMC_USBSTOPCLOCK_MASK(index)) == PMC_USBSTOPCLOCK_STOP(index))
+		if ((reg & PMC_USB_STOP_CLK_MASK(index)) == PMC_USB_STOP_CLK_STOP(index))
 			state = MV_FALSE;
 		else
 			state = MV_TRUE;
@@ -1653,7 +1618,7 @@ MV_BOOL mvCtrlPwrClckGet(MV_UNIT_ID unitId, MV_U32 index)
 #endif
 #if defined(MV_INCLUDE_SDIO)
 	case SDIO_UNIT_ID:
-		if ((reg & PMC_SDIOSTOPCLOCK_MASK) == PMC_SDIOSTOPCLOCK_STOP)
+		if ((reg & PMC_SDIO_STOP_CLK_MASK) == PMC_SDIO_STOP_CLK_STOP)
 			state = MV_FALSE;
 		else
 			state = MV_TRUE;
@@ -1661,195 +1626,7 @@ MV_BOOL mvCtrlPwrClckGet(MV_UNIT_ID unitId, MV_U32 index)
 #endif
 #if defined(MV_INCLUDE_TDM)
 	case TDM_32CH_UNIT_ID:
-		if ((reg & PMC_TDMSTOPCLOCK_MASK) == PMC_TDMSTOPCLOCK_STOP)
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-	default:
-		state = MV_TRUE;
-		break;
-	}
-
-	return state;
-}
-
-/*******************************************************************************
-* mvCtrlPwrMemSet - Set Power State for memory on specific Unit
-*
-* DESCRIPTION:
-*
-* INPUT:
-*
-* OUTPUT:
-*
-* RETURN:
-*******************************************************************************/
-MV_VOID mvCtrlPwrMemSet(MV_UNIT_ID unitId, MV_U32 index, MV_BOOL enable)
-{
-	switch (unitId) {
-#if defined(MV_INCLUDE_PEX)
-	case PEX_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_SET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_PEX), PMC_PEXSTOPMEM_STOP(index));
-		else
-			MV_REG_BIT_RESET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_PEX), PMC_PEXSTOPMEM_MASK(index));
-
-		break;
-#endif
-#if defined(MV_INCLUDE_GIG_ETH)
-	case ETH_GIG_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_SET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_GE), PMC_GESTOPMEM_STOP(index));
-		else
-			MV_REG_BIT_RESET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_GE), PMC_GESTOPMEM_MASK(index));
-
-		break;
-#endif
-#if defined(MV_INCLUDE_INTEG_SATA)
-	case SATA_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_SET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_SATA), PMC_SATASTOPMEM_STOP(index));
-		else
-			MV_REG_BIT_RESET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_SATA), PMC_SATASTOPMEM_MASK(index));
-
-		break;
-#endif
-#if defined(MV_INCLUDE_CESA)
-	case CESA_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_SET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_CESA), PMC_CESASTOPMEM_STOP);
-		else
-			MV_REG_BIT_RESET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_CESA), PMC_CESASTOPMEM_MASK);
-
-		break;
-#endif
-#if defined(MV_INCLUDE_USB)
-	case USB_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_SET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_USB), PMC_USBSTOPMEM_STOP(index));
-		else
-			MV_REG_BIT_RESET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_USB), PMC_USBSTOPMEM_MASK(index));
-
-		break;
-#endif
-#if defined(MV_INCLUDE_XOR)
-	case XOR_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_SET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_XOR), PMC_XORSTOPMEM_STOP(index));
-		else
-			MV_REG_BIT_RESET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_XOR), PMC_XORSTOPMEM_MASK(index));
-
-		break;
-#endif
-#if defined(MV_INCLUDE_BM)
-	case BM_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_SET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_BM), PMC_BMSTOPMEM_STOP);
-		else
-			MV_REG_BIT_RESET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_BM), PMC_BMSTOPMEM_MASK);
-
-		break;
-#endif
-#if defined(MV_INCLUDE_PNC)
-	case PNC_UNIT_ID:
-		if (enable == MV_FALSE)
-			MV_REG_BIT_SET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_PNC), PMC_PNCSTOPMEM_STOP);
-		else
-			MV_REG_BIT_RESET(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_PNC), PMC_PNCSTOPMEM_MASK);
-
-		break;
-#endif
-	default:
-		break;
-	}
-}
-
-/*******************************************************************************
- * mvCtrlPwrMemGet - Get Power State of memory on specific Unit
- *
- * DESCRIPTION:
- *
- * INPUT:
- *
- * OUTPUT:
- *
- * RETURN:
- ******************************************************************************/
-MV_BOOL mvCtrlPwrMemGet(MV_UNIT_ID unitId, MV_U32 index)
-{
-	MV_BOOL state = MV_TRUE;
-
-	switch (unitId) {
-		MV_U32 reg;
-#if defined(MV_INCLUDE_PEX)
-	case PEX_UNIT_ID:
-		reg = MV_REG_READ(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_PEX));
-		if ((reg & PMC_PEXSTOPMEM_MASK(index)) == PMC_PEXSTOPMEM_STOP(index))
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-#if defined(MV_INCLUDE_GIG_ETH)
-	case ETH_GIG_UNIT_ID:
-		reg = MV_REG_READ(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_GE));
-		if ((reg & PMC_GESTOPMEM_MASK(index)) == PMC_GESTOPMEM_STOP(index))
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-#if defined(MV_INCLUDE_SATA)
-	case SATA_UNIT_ID:
-		reg = MV_REG_READ(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_SATA));
-		if ((reg & PMC_SATASTOPMEM_MASK(index)) == PMC_SATASTOPMEM_STOP(index))
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-#if defined(MV_INCLUDE_CESA)
-	case CESA_UNIT_ID:
-		reg = MV_REG_READ(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_CESA));
-		if ((reg & PMC_CESASTOPMEM_MASK) == PMC_CESASTOPMEM_STOP)
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-#if defined(MV_INCLUDE_USB)
-	case USB_UNIT_ID:
-		reg = MV_REG_READ(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_USB));
-		if ((reg & PMC_USBSTOPMEM_MASK(index)) == PMC_USBSTOPMEM_STOP(index))
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-#if defined(MV_INCLUDE_XOR)
-	case XOR_UNIT_ID:
-		reg = MV_REG_READ(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_XOR));
-		if ((reg & PMC_XORSTOPMEM_MASK(index)) == PMC_XORSTOPMEM_STOP(index))
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-#if defined(MV_INCLUDE_BM)
-	case BM_UNIT_ID:
-		reg = MV_REG_READ(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_BM));
-		if ((reg & PMC_BMSTOPMEM_MASK) == PMC_BMSTOPMEM_STOP)
-			state = MV_FALSE;
-		else
-			state = MV_TRUE;
-		break;
-#endif
-#if defined(MV_INCLUDE_PNC)
-	case PNC_UNIT_ID:
-		reg = MV_REG_READ(POWER_MNG_MEM_CTRL_REG(PMC_MCR_NUM_PNC));
-		if ((reg & PMC_PNCSTOPMEM_MASK) == PMC_PNCSTOPMEM_STOP)
+		if ((reg & PMC_TDM_STOP_CLK_MASK) == PMC_TDM_STOP_CLK_STOP)
 			state = MV_FALSE;
 		else
 			state = MV_TRUE;
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index a429605..c921f49 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -319,13 +319,11 @@ MV_U32 mvCtrlSysRstLengthCounterGet(MV_VOID);
 MV_STATUS ctrlWinOverlapTest(MV_ADDR_WIN *pAddrWin1, MV_ADDR_WIN *pAddrWin2);
 MV_STATUS ctrlWinWithinWinTest(MV_ADDR_WIN *pAddrWin1, MV_ADDR_WIN *pAddrWin2);
 MV_VOID mvCtrlSmiMasterSet(MV_SMI_CTRL smiCtrl);
-MV_VOID   mvCtrlPwrClckSet(MV_UNIT_ID unitId, MV_U32 index, MV_BOOL enable);
-MV_BOOL   mvCtrlPwrClckGet(MV_UNIT_ID unitId, MV_U32 index);
-MV_VOID   mvCtrlPwrMemSet(MV_UNIT_ID unitId, MV_U32 index, MV_BOOL enable);
+MV_VOID mvCtrlPwrClckSet(MV_UNIT_ID unitId, MV_U32 index, MV_BOOL enable);
+MV_BOOL mvCtrlPwrClckGet(MV_UNIT_ID unitId, MV_U32 index);
 MV_BOOL mvCtrlIsBootFromNOR(MV_VOID);
 MV_BOOL mvCtrlIsBootFromSPI(MV_VOID);
 MV_BOOL mvCtrlIsBootFromNAND(MV_VOID);
-MV_BOOL   mvCtrlPwrMemGet(MV_UNIT_ID unitId, MV_U32 index);
 MV_U32 mvCtrlDDRBudWidth(MV_VOID);
 MV_BOOL mvCtrlDDRThruXbar(MV_VOID);
 MV_BOOL mvCtrlDDRECC(MV_VOID);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index 55ec223..ca19397 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -86,219 +86,40 @@ extern "C" {
 /* CIB registers offsets */
 #define MV_CIB_CTRL_CFG_REG                     (MV_COHERENCY_FABRIC_OFFSET + 0x80)
 
-/* Power Management Memory Power Down Registers 1 - 6 */
-#define POWER_MNG_MEM_CTRL_REG(num)             ((num) < 6 ? 0x1820C + (num) * 4 : 0x18228)
-#define PMC_MCR_NUM_COMM                        6
-#define PMC_MCR_NUM_PEX                         2
-#define PMC_MCR_NUM_USB                         4
-#define PMC_MCR_NUM_DUNIT                       3
-#define PMC_MCR_NUM_DEVB                        4
-#define PMC_MCR_NUM_NF                          4
-#define PMC_MCR_NUM_XOR                         4
-#define PMC_MCR_NUM_SATA                        5
-#define PMC_MCR_NUM_CESA                        4
-#define PMC_MCR_NUM_GE                          5
-#define PMC_MCR_NUM_PNC                         5
-#define PMC_MCR_NUM_BM                          5
-#define PMC_MCR_NUM_PDMA                        1
-#define PMC_MCR_NUM_NCS                         3
-#define PMC_MCR_NUM_CFU                         3
-#define PMC_MCR_NUM_L2                          3
-#define PMC_MCR_NUM_CIB                         3
-#define PMC_MCR_NUM_CPU                         3
-#define PMC_MCR_NUM_IDMA                        4
-#define PMC_MCR_NUM_LCD                         4
-#define PMC_MCR_NUM_PMU                         6
-
-#define PMC_COMMSTOPMEM_OFFS                    4
-#define PMC_COMMSTOPMEM_MASK                    (7 << PMC_COMMSTOPMEM_OFFS)
-#define PMC_COMMSTOPMEM_EN                      (0 << PMC_COMMSTOPMEM_OFFS)
-#define PMC_COMMSTOPMEM_STOP                    (1 << PMC_COMMSTOPMEM_OFFS)
-
-#define PMC_PEXSTOPMEM_OFFS(port)               ((port) < 10 ? ((port) * 3) : 0)
-#define PMC_PEXSTOPMEM_MASK(port)               (7 << PMC_PEXSTOPMEM_OFFS(port))
-#define PMC_PEXSTOPMEM_EN(port)                 (0 << PMC_PEXSTOPMEM_OFFS(port))
-#define PMC_PEXSTOPMEM_STOP(port)               (1 << PMC_PEXSTOPMEM_OFFS(port))
-
-#define PMC_USBSTOPMEM_OFFS(port)               ((port) < 3 ? (3 + (port) * 3) : 0)
-#define PMC_USBSTOPMEM_MASK(port)               (7 << PMC_USBSTOPMEM_OFFS(port))
-#define PMC_USBSTOPMEM_EN(port)                 (0 << PMC_USBSTOPMEM_OFFS(port))
-#define PMC_USBSTOPMEM_STOP(port)               (1 << PMC_USBSTOPMEM_OFFS(port))
-
-#define PMC_DUNITSTOPMEM_OFFS                   12
-#define PMC_DUNITSTOPMEM_MASK                   (7 << PMC_DUNITSTOPMEM_OFFS)
-#define PMC_DUNITSTOPMEM_EN                     (0 << PMC_DUNITSTOPMEM_OFFS)
-#define PMC_DUNITSTOPMEM_STOP                   (1 << PMC_DUNITSTOPMEM_OFFS)
-
-#define PMC_NFSTOPMEM_OFFS                      27
-#define PMC_NFSTOPMEM_MASK                      (7 << PMC_NFSTOPMEM_OFFS)
-#define PMC_NFSTOPMEM_EN                        (0 << PMC_NFSTOPMEM_OFFS)
-#define PMC_NFSTOPMEM_STOP                      (1 << PMC_NFSTOPMEM_OFFS)
-
-#define PMC_DEVBSTOPMEM_OFFS                    21
-#define PMC_DEVBSTOPMEM_MASK                    (7 << PMC_DEVBSTOPMEM_OFFS)
-#define PMC_DEVBSTOPMEM_EN                      (0 << PMC_DEVBSTOPMEM_OFFS)
-#define PMC_DEVBSTOPMEM_STOP                    (1 << PMC_DEVBSTOPMEM_OFFS)
-
-#define PMC_XORSTOPMEM_OFFS(port)               ((port) == 0 ? 15 : 24)
-#define PMC_XORSTOPMEM_MASK(port)               (7 << PMC_XORSTOPMEM_OFFS(port))
-#define PMC_XORSTOPMEM_EN(port)                 (0 << PMC_XORSTOPMEM_OFFS(port))
-#define PMC_XORSTOPMEM_STOP(port)               (1 << PMC_XORSTOPMEM_OFFS(port))
-
-#define PMC_SATASTOPMEM_OFFS(port)              ((port) == 0 ? 18 : 24)
-#define PMC_SATASTOPMEM_MASK(port)              (0x3F << PMC_SATASTOPMEM_OFFS(port))
-#define PMC_SATASTOPMEM_EN(port)                (0 << PMC_SATASTOPMEM_OFFS(port))
-#define PMC_SATASTOPMEM_STOP(port)              (9 << PMC_SATASTOPMEM_OFFS(port))
-
-#define PMC_CESASTOPMEM_OFFS                    18
-#define PMC_CESASTOPMEM_MASK                    (7 << PMC_CESASTOPMEM_OFFS)
-#define PMC_CESASTOPMEM_EN                      (0 << PMC_CESASTOPMEM_OFFS)
-#define PMC_CESASTOPMEM_STOP                    (1 << PMC_CESASTOPMEM_OFFS)
-
-#define PMC_GESTOPMEM_OFFS(port)                ((port) < 4 ? (9 - (port) * 3) : 0)
-#define PMC_GESTOPMEM_MASK(port)                (7 << PMC_GESTOPMEM_OFFS(port))
-#define PMC_GESTOPMEM_EN(port)                  (0 << PMC_GESTOPMEM_OFFS(port))
-#define PMC_GESTOPMEM_STOP(port)                (1 << PMC_GESTOPMEM_OFFS(port))
-
-#define PMC_PNCSTOPMEM_OFFS                     12
-#define PMC_PNCSTOPMEM_MASK                     (7 << PMC_PNCSTOPMEM_OFFS)
-#define PMC_PNCSTOPMEM_EN                       (0 << PMC_PNCSTOPMEM_OFFS)
-#define PMC_PNCSTOPMEM_STOP                     (1 << PMC_PNCSTOPMEM_OFFS)
-
-#define PMC_BMSTOPMEM_OFFS                      15
-#define PMC_BMSTOPMEM_MASK                      (7 << PMC_BMSTOPMEM_OFFS)
-#define PMC_BMSTOPMEM_EN                        (0 << PMC_BMSTOPMEM_OFFS)
-#define PMC_BMSTOPMEM_STOP                      (1 << PMC_BMSTOPMEM_OFFS)
-
-#define PMC_PDMASTOPMEM_OFFS                    0
-#define PMC_PDMATOPMEM_MASK                     (7 << PMC_PDMASTOPMEM_OFFS)
-#define PMC_PDMASTOPMEM_EN                      (0 << PMC_PDMASTOPMEM_OFFS)
-#define PMC_PDMASTOPMEM_STOP                    (1 << PMC_PDMASTOPMEM_OFFS)
-
-#define PMC_NCSSTOPMEM_OFFS                     24
-#define PMC_NCSSTOPMEM_MASK                     (7 << PMC_NCSSTOPMEM_OFFS)
-#define PMC_NCSSTOPMEM_EN                       (0 << PMC_NCSSTOPMEM_OFFS)
-#define PMC_NCSSTOPMEM_STOP                     (1 << PMC_NCSSTOPMEM_OFFS)
-
-#define PMC_CFUSTOPMEM_OFFS                     21
-#define PMC_CFUSTOPMEM_MASK                     (7 << PMC_CFUSTOPMEM_OFFS)
-#define PMC_CFUSTOPMEM_EN                       (0 << PMC_CFUSTOPMEM_OFFS)
-#define PMC_CFUSTOPMEM_STOP                     (1 << PMC_CFUSTOPMEM_OFFS)
-
-#define PMC_L2STOPMEM_OFFS                      18
-#define PMC_L2STOPMEM_MASK                      (7 << PMC_L2STOPMEM_OFFS)
-#define PMC_L2STOPMEM_EN                        (0 << PMC_L2STOPMEM_OFFS)
-#define PMC_L2STOPMEM_STOP                      (1 << PMC_L2STOPMEM_OFFS)
-
-#define PMC_CIBSTOPMEM_OFFS                     15
-#define PMC_CIBSTOPMEM_MASK                     (7 << PMC_CIBSTOPMEM_OFFS)
-#define PMC_CIBSTOPMEM_EN                       (0 << PMC_CIBSTOPMEM_OFFS)
-#define PMC_CIBSTOPMEM_STOP                     (1 << PMC_CIBSTOPMEM_OFFS)
-
-/* TODO - verify, the manual has no description */
-#define PMC_CPUSTOPMEM_OFFS(id)                 ((id) < 4 ? (id) * 3 : 0)
-#define PMC_CPUSTOPMEM_MASK(id)                 (7 << PMC_CPUSTOPMEM_OFFS(id))
-#define PMC_CPUSTOPMEM_EN(id)                   (0 << PMC_CPUSTOPMEM_OFFS(id))
-#define PMC_CPUSTOPMEM_STOP(id)                 (1 << PMC_CPUSTOPMEM_OFFS(id))
-
-#define PMC_IDMASTOPMEM_OFFS                    12
-#define PMC_IDMASTOPMEM_MASK                    (7 << PMC_IDMASTOPMEM_OFFS)
-#define PMC_IDMASTOPMEM_EN                      (0 << PMC_IDMASTOPMEM_OFFS)
-#define PMC_IDMASTOPMEM_STOP                    (1 << PMC_IDMASTOPMEM_OFFS)
-
-#define PMC_LCDSTOPMEM_OFFS                     0
-#define PMC_LCDSTOPMEM_MASK                     (7 << PMC_LCDSTOPMEM_OFFS)
-#define PMC_LCDSTOPMEM_EN                       (0 << PMC_LCDSTOPMEM_OFFS)
-#define PMC_LCDSTOPMEM_STOP                     (1 << PMC_LCDSTOPMEM_OFFS)
-
-#define PMC_PMUSTOPMEM_OFFS                     0
-#define PMC_PMUSTOPMEM_MASK                     (7 << PMC_PMUSTOPMEM_OFFS)
-#define PMC_PMUSTOPMEM_EN                       (0 << PMC_PMUSTOPMEM_OFFS)
-#define PMC_PMUSTOPMEM_STOP                     (1 << PMC_PMUSTOPMEM_OFFS)
-
-/*  Power Management Clock Gating Control Register	*/
-#define POWER_MNG_CTRL_REG                      0x18220
-#define L2C_MTCMOS_CONTROL_0_REG    0x22F00
-#define L2C_MTCMOS_CONTROL_1_REG    0x22F04
-
-#define PMU_DFS_CTRL_INIT_RATIO_OFFS    24
-#define PMU_DFS_CTRL_INIT_RATIO_MASK    0x3F
-#define PMU_DFS_CTRL_RATIO_OFFS                 16
-#define PMU_DFS_CTRL_RATIO_MASK                 0x3F
-
-#define PMC_TDMSTOPCLOCK_OFFS                   25
-#define PMC_TDMSTOPCLOCK_MASK                   (1 << PMC_TDMSTOPCLOCK_OFFS)
-#define PMC_TDMSTOPCLOCK_EN                     (1 << PMC_TDMSTOPCLOCK_OFFS)
-#define PMC_TDMSTOPCLOCK_STOP                   (0 << PMC_TDMSTOPCLOCK_OFFS)
-
-#define PMC_PEXSTOPCLOCK_OFFS(port)             ((port) < 8 ? (5 + (port)) : (18 + (port)))
-#define PMC_PEXSTOPCLOCK_MASK(port)             (1 << PMC_PEXSTOPCLOCK_OFFS(port))
-#define PMC_PEXSTOPCLOCK_EN(port)               (1 << PMC_PEXSTOPCLOCK_OFFS(port))
-#define PMC_PEXSTOPCLOCK_STOP(port)             (0 << PMC_PEXSTOPCLOCK_OFFS(port))
-
-#define PMC_USBSTOPCLOCK_OFFS(port)             ((port) < 3 ? (18 + (port)) : 0)
-#define PMC_USBSTOPCLOCK_MASK(port)             (1 << PMC_USBSTOPCLOCK_OFFS(port))
-#define PMC_USBSTOPCLOCK_EN(port)               (1 << PMC_USBSTOPCLOCK_OFFS(port))
-#define PMC_USBSTOPCLOCK_STOP(port)             (0 << PMC_USBSTOPCLOCK_OFFS(port))
-
-#define PMC_SDIOSTOPCLOCK_OFFS                  17
-#define PMC_SDIOSTOPCLOCK_MASK                  (1 << PMC_SDIOSTOPCLOCK_OFFS)
-#define PMC_SDIOSTOPCLOCK_EN                    (1 << PMC_SDIOSTOPCLOCK_OFFS)
-#define PMC_SDIOSTOPCLOCK_STOP                  (0 << PMC_SDIOSTOPCLOCK_OFFS)
-
-#define PMC_RUNITSTOPCLOCK_OFFS                 24
-#define PMC_RUNITSTOPCLOCK_MASK                 (1 << PMC_RUNITSTOPCLOCK_OFFS)
-#define PMC_RUNITSTOPCLOCK_EN                   (1 << PMC_RUNITSTOPCLOCK_OFFS)
-#define PMC_RUNITSTOPCLOCK_STOP                 (0 << PMC_RUNITSTOPCLOCK_OFFS)
-
-#define PMC_XORSTOPCLOCK_OFFS                   22
-#define PMC_XORSTOPCLOCK_MASK                   (1 << PMC_XORSTOPCLOCK_OFFS)
-#define PMC_XORSTOPCLOCK_EN                     (1 << PMC_XORSTOPCLOCK_OFFS)
-#define PMC_XORSTOPCLOCK_STOP                   (0 << PMC_XORSTOPCLOCK_OFFS)
-
-#define PMC_SATASTOPCLOCK_OFFS(ch)              (ch == 0 ? 14 : 29)
-#define PMC_SATASTOPCLOCK_MASK(ch)              (3 << PMC_SATASTOPCLOCK_OFFS(ch))
-#define PMC_SATASTOPCLOCK_EN(ch)                (3 << PMC_SATASTOPCLOCK_OFFS(ch))
-#define PMC_SATASTOPCLOCK_STOP(ch)              (0 << PMC_SATASTOPCLOCK_OFFS(ch))
-
-#define PMC_CESASTOPCLOCK_OFFS                  23
-#define PMC_CESASTOPCLOCK_MASK                  (1 << PMC_CESASTOPCLOCK_OFFS)
-#define PMC_CESASTOPCLOCK_EN                    (1 << PMC_CESASTOPCLOCK_OFFS)
-#define PMC_CESASTOPCLOCK_STOP                  (0 << PMC_CESASTOPCLOCK_OFFS)
-
-#define PMC_GESTOPCLOCK_OFFS(port)              ((port) < 4 ? (4 - (port)) : 0)
-#define PMC_GESTOPCLOCK_MASK(port)              (1 << PMC_GESTOPCLOCK_OFFS(port))
-#define PMC_GESTOPCLOCK_EN(port)                (1 << PMC_GESTOPCLOCK_OFFS(port))
-#define PMC_GESTOPCLOCK_STOP(port)              (0 << PMC_GESTOPCLOCK_OFFS(port))
-
-#define PMC_NETASTOPCLOCK_OFFS                  13
-#define PMC_NETASTOPCLOCK_MASK                  (1 << PMC_NETASTOPCLOCK_OFFS)
-#define PMC_NETASTOPCLOCK_EN                    (1 << PMC_NETASTOPCLOCK_OFFS)
-#define PMC_NETASTOPCLOCK_STOP                  (0 << PMC_NETASTOPCLOCK_OFFS)
-
-#define PMC_LCDSTOPCLOCK_OFFS                   16
-#define PMC_LCDSTOPCLOCK_MASK                   (1 << PMC_LCDSTOPCLOCK_OFFS)
-#define PMC_LCDSTOPCLOCK_EN                     (1 << PMC_LCDSTOPCLOCK_OFFS)
-#define PMC_LCDSTOPCLOCK_STOP                   (0 << PMC_LCDSTOPCLOCK_OFFS)
-
-#define PMC_IDMASTOPCLOCK_OFFS                  21
-#define PMC_IDMASTOPCLOCK_MASK                  (1 << PMC_IDMASTOPCLOCK_OFFS)
-#define PMC_IDMASTOPCLOCK_EN                    (1 << PMC_IDMASTOPCLOCK_OFFS)
-#define PMC_IDMASTOPCLOCK_STOP                  (0 << PMC_IDMASTOPCLOCK_OFFS)
-
-#define PMC_DDRSTOPCLOCK_OFFS                   28
-#define PMC_DDRSTOPCLOCK_MASK                   (1 << PMC_DDRSTOPCLOCK_OFFS)
-#define PMC_DDRSTOPCLOCK_EN                     (1 << PMC_DDRSTOPCLOCK_OFFS)
-#define PMC_DDRSTOPCLOCK_STOP                   (0 << PMC_DDRSTOPCLOCK_OFFS)
-
-#define SGMII_PWR_PLL_CTRL_REG(port)            (0x72E04 + ((port) % 2) * 0x4000 - ((port) / 2) * 0x40000)
-#define SGMII_DIG_LP_ENA_REG(port)              (0x72E8C + ((port) % 2) * 0x4000 - ((port) / 2) * 0x40000)
-#define SGMII_REF_CLK_SEL_REG(port)             (0x72F18 + ((port) % 2) * 0x4000 - ((port) / 2) * 0x40000)
-#define SGMII_SERDES_CFG_REG(port)              (0x724A0 + ((port) % 2) * 0x4000 - ((port) / 2) * 0x40000)
-#define SGMII_SERDES_STAT_REG(port)             (0x724A4 + ((port) % 2) * 0x4000 - ((port) / 2) * 0x40000)
-#define SGMII_COMPHY_CTRL_REG(port)             (0x72F20 + ((port) % 2) * 0x4000 - ((port) / 2) * 0x40000)
-#define QSGMII_GEN_1_SETTING_REG(port)          (0x72E38 + ((port) % 2) * 0x4000 - ((port) / 2) * 0x40000)
-
+/*
+ * Power Management Clock (PMC) Gating Control Register
+ */
+#define POWER_MNG_CTRL_REG			0x18220
+
+#define PMC_TDM_STOP_CLK_OFFS			25
+#define PMC_TDM_STOP_CLK_MASK			(1 << PMC_TDM_STOP_CLK_OFFS)
+#define PMC_TDM_STOP_CLK_EN			(1 << PMC_TDM_STOP_CLK_OFFS)
+#define PMC_TDM_STOP_CLK_STOP			(0 << PMC_TDM_STOP_CLK_OFFS)
+
+#define PMC_PEX_STOP_CLK_OFFS(port)		((port) + 5)
+#define PMC_PEX_STOP_CLK_MASK(port)		(1 << PMC_PEX_STOP_CLK_OFFS(port))
+#define PMC_PEX_STOP_CLK_EN(port)		(1 << PMC_PEX_STOP_CLK_OFFS(port))
+#define PMC_PEX_STOP_CLK_STOP(port)		(0 << PMC_PEX_STOP_CLK_OFFS(port))
+
+#define PMC_USB_STOP_CLK_OFFS			18
+#define PMC_USB_STOP_CLK_MASK			(1 << PMC_USB_STOP_CLK_OFFS)
+#define PMC_USB_STOP_CLK_EN			(1 << PMC_USB_STOP_CLK_OFFS)
+#define PMC_USB_STOP_CLK_STOP			(0 << PMC_USB_STOP_CLK_OFFS)
+
+#define PMC_SDIO_STOP_CLK_OFFS			17
+#define PMC_SDIO_STOP_CLK_MASK			(1 << PMC_SDIO_STOP_CLK_OFFS)
+#define PMC_SDIO_STOP_CLK_EN			(1 << PMC_SDIO_STOP_CLK_OFFS)
+#define PMC_SDIO_STOP_CLK_STOP			(0 << PMC_SDIO_STOP_CLK_OFFS)
+
+#define PMC_XOR_STOP_CLK_OFFS(xor_id)		(xor_id == 0 ? 22 : 28)
+#define PMC_XOR_STOP_CLK_MASK(xor_id)		(1 << PMC_XOR_STOP_CLK_OFFS(xor_id))
+#define PMC_XOR_STOP_CLK_EN(xor_id)		(1 << PMC_XOR_STOP_CLK_OFFS(xor_id))
+#define PMC_XOR_STOP_CLK_STOP(xor_id)		(0 << PMC_XOR_STOP_CLK_OFFS(xor_id))
+
+#define PMC_SATA_STOP_CLK_OFFS			14
+#define PMC_SATA_STOP_CLK_MASK			(3 << PMC_SATA_STOP_CLK_OFFS)
+#define PMC_SATA_STOP_CLK_EN			(3 << PMC_SATA_STOP_CLK_OFFS)
+#define PMC_SATA_STOP_CLK_STOP			(0 << PMC_SATA_STOP_CLK_OFFS)
 
 #define MPP_CONTROL_REG(id)                     (0x18000 + (id * 4))
 
-- 
1.7.5.4

