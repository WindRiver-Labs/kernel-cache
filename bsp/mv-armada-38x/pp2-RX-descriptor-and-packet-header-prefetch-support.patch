From d293f5aca479d4dcd3968055ee6b5380d912f51a Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Thu, 8 Aug 2013 14:59:33 -0400
Subject: [PATCH 0935/1825] pp2: RX descriptor and packet header prefetch
 support

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 88d382f9c6a5f57969c7b7ec39438468cbe09afc

Change-Id: Ic0e67ba20fddafd4525ed7faa0e8b96efe3e5f11
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/2988
Reviewed-by: Igor Patrik <igorp@marvell.com>
Tested-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c      |   42 ++++++++++++++------
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |   27 +++++-------
 2 files changed, 41 insertions(+), 28 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
index 5fcbc86..6b8dbcb 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.c
@@ -1452,7 +1452,6 @@ static inline MV_U32 mv_eth_skb_tx_csum(struct eth_port *pp, struct sk_buff *skb
 	return PP2_TX_L4_CSUM_NOT | PP2_TX_IP_CSUM_DISABLE_MASK;
 }
 
-#ifdef CONFIG_MV_ETH_RX_DESC_PREFETCH
 inline struct pp2_rx_desc *mv_eth_rx_prefetch(struct eth_port *pp, MV_PP2_PHYS_RXQ_CTRL *rx_ctrl,
 									  int rx_done, int rx_todo)
 {
@@ -1475,8 +1474,6 @@ inline struct pp2_rx_desc *mv_eth_rx_prefetch(struct eth_port *pp, MV_PP2_PHYS_R
 
 	return rx_desc;
 }
-#endif /* CONFIG_MV_ETH_RX_DESC_PREFETCH */
-
 
 void mv_eth_buff_hdr_rx(struct eth_port *pp, struct pp2_rx_desc *rx_desc)
 {
@@ -1596,14 +1593,13 @@ static inline int mv_eth_rx(struct eth_port *pp, int rx_todo, int rxq, struct na
 	/* Fairness NAPI loop */
 	while (rx_done < rx_todo) {
 
-#ifdef CONFIG_MV_ETH_RX_DESC_PREFETCH
-		rx_desc = mv_eth_rx_prefetch(pp, rx_ctrl, rx_done, rx_todo);
-#else
-		rx_desc = mvPp2RxqNextDescGet(rx_ctrl);
-		mvOsCacheLineInv(NULL, rx_desc);
-		prefetch(rx_desc);
-#endif /* CONFIG_MV_ETH_RX_DESC_PREFETCH */
-
+		if (pp->flags & MV_ETH_F_RX_DESC_PREFETCH)
+			rx_desc = mv_eth_rx_prefetch(pp, rx_ctrl, rx_done, rx_todo);
+		else {
+			rx_desc = mvPp2RxqNextDescGet(rx_ctrl);
+			mvOsCacheLineInv(NULL, rx_desc);
+			prefetch(rx_desc);
+		}
 		rx_done++;
 
 #ifdef CONFIG_MV_ETH_DEBUG_CODE
@@ -1632,10 +1628,16 @@ static inline int mv_eth_rx(struct eth_port *pp, int rx_todo, int rxq, struct na
 			continue;
 		}
 		skb = (struct sk_buff *)rx_desc->bufCookie;
-		atomic_inc(&ppool->in_use);
 
 		/*dma_unmap_single(NULL, rx_desc->bufPhysAddr, RX_BUF_SIZE(ppool->pkt_size), DMA_FROM_DEVICE);*/
 
+		/* Prefetch two cache lines from beginning of packet */
+		if (pp->flags & MV_ETH_F_RX_PKT_PREFETCH) {
+			prefetch(skb->data);
+			prefetch(skb->data + CPU_D_CACHE_LINE_SIZE);
+		}
+
+		atomic_inc(&ppool->in_use);
 		STAT_DBG(pp->stats.rxq[rxq]++);
 		dev->stats.rx_packets++;
 
@@ -4373,6 +4375,14 @@ static int mv_eth_priv_init(struct eth_port *pp, int port)
 
 	pp->flags = 0;
 
+#ifdef CONFIG_MV_ETH_RX_DESC_PREFETCH
+	pp->flags |= MV_ETH_F_RX_DESC_PREFETCH;
+#endif
+
+#ifdef CONFIG_MV_ETH_RX_PKT_PREFETCH
+	pp->flags |= MV_ETH_F_RX_PKT_PREFETCH;
+#endif
+
 	for (i = 0; i < 64; i++)
 		pp->txq_dscp_map[i] = MV_ETH_TXQ_INVALID;
 #ifdef CONFIG_MV_ETH_TX_SPECIAL
@@ -4637,6 +4647,13 @@ void mv_eth_port_status_print(unsigned int port)
 
 	printk(KERN_ERR "\n");
 	printk(KERN_ERR "port=%d, flags=0x%lx, rx_weight=%d\n", port, pp->flags, pp->weight);
+
+	pr_info("RX next descriptor prefetch : %s\n",
+			pp->flags & MV_ETH_F_RX_DESC_PREFETCH ? "Enabled" : "Disabled");
+
+	pr_info("RX packet header prefetch   : %s\n\n",
+			pp->flags & MV_ETH_F_RX_PKT_PREFETCH ? "Enabled" : "Disabled");
+
 	if (pp->flags & MV_ETH_F_CONNECT_LINUX)
 		printk(KERN_ERR "%s: ", pp->dev->name);
 	else
@@ -4644,6 +4661,7 @@ void mv_eth_port_status_print(unsigned int port)
 
 	mv_eth_link_status_print(port);
 
+	pr_cont("\n");
 	printk(KERN_ERR "rxq_coal(pkts)[ q]      = ");
 	for (q = 0; q < pp->rxq_num; q++)
 		printk(KERN_CONT "%4d ", mvPp2RxqPktsCoalGet(port, q));
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index 27af2ba..93a58e0 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -213,20 +213,17 @@ struct port_stats {
 #define MV_ETH_SHADOW_EXT		0x2
 
 /* Masks used for pp->flags */
-#define MV_ETH_F_STARTED_BIT        0
+#define MV_ETH_F_STARTED_BIT            0
+#define MV_ETH_F_RX_DESC_PREFETCH_BIT   1
+#define MV_ETH_F_RX_PKT_PREFETCH_BIT    2
+#define MV_ETH_F_CONNECT_LINUX_BIT      5 /* port is connected to Linux netdevice */
+#define MV_ETH_F_LINK_UP_BIT            6
 
-#define MV_ETH_F_CONNECT_LINUX_BIT  5	/* port is connected to Linux netdevice */
-#define MV_ETH_F_LINK_UP_BIT        6
-#define MV_ETH_F_SUSPEND_BIT        7
-#define MV_ETH_F_STARTED_OLD_BIT    8 /*STARTED_BIT value before suspend */
-
-#define MV_ETH_F_STARTED           (1 << MV_ETH_F_STARTED_BIT)
-#define MV_ETH_F_SWITCH            (1 << MV_ETH_F_SWITCH_BIT)
-#define MV_ETH_F_EXT_SWITCH        (1 << MV_ETH_F_EXT_SWITCH_BIT)
-#define MV_ETH_F_CONNECT_LINUX     (1 << MV_ETH_F_CONNECT_LINUX_BIT)
-#define MV_ETH_F_LINK_UP           (1 << MV_ETH_F_LINK_UP_BIT)
-#define MV_ETH_F_SUSPEND           (1 << MV_ETH_F_SUSPEND_BIT)
-#define MV_ETH_F_STARTED_OLD       (1 << MV_ETH_F_STARTED_OLD_BIT)
+#define MV_ETH_F_STARTED                (1 << MV_ETH_F_STARTED_BIT)
+#define MV_ETH_F_RX_DESC_PREFETCH       (1 << MV_ETH_F_RX_DESC_PREFETCH_BIT)
+#define MV_ETH_F_RX_PKT_PREFETCH        (1 << MV_ETH_F_RX_PKT_PREFETCH_BIT)
+#define MV_ETH_F_CONNECT_LINUX          (1 << MV_ETH_F_CONNECT_LINUX_BIT)
+#define MV_ETH_F_LINK_UP                (1 << MV_ETH_F_LINK_UP_BIT)
 
 
 #ifdef CONFIG_MV_ETH_DEBUG_CODE
@@ -922,10 +919,8 @@ int  mv_eth_napi_set_cpu_affinity(int port, int group, int cpu_mask);
 int  mv_eth_napi_set_rxq_affinity(int port, int group, int rxq_mask);
 void mv_eth_napi_groups_print(int port);
 
-#ifdef CONFIG_MV_ETH_RX_DESC_PREFETCH
 struct pp2_rx_desc *mv_eth_rx_prefetch(struct eth_port *pp,
-						MV_PP2_PHYS_RXQ_CTRL *rx_ctrl, int rx_done, int rx_todo);
-#endif /* CONFIG_MV_ETH_RX_DESC_PREFETCH */
+					MV_PP2_PHYS_RXQ_CTRL *rx_ctrl, int rx_done, int rx_todo);
 
 void		*mv_eth_bm_pool_create(int pool, int capacity, MV_ULONG *physAddr);
 
-- 
1.7.5.4

