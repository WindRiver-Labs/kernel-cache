From 9d722cfe5c79cc5d1f59d19a70d49ef75cf7ca13 Mon Sep 17 00:00:00 2001
From: Shadi Ammouri <shadi@marvell.com>
Date: Wed, 20 Nov 2013 13:30:52 +0200
Subject: [PATCH 1159/1825] a380: Linux 3.4.y adaptation for A380 platform

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 2b7cf9b99f8f9a4856a8c72aca380dca36af5f67

	- Pex driver fixes to adapt to Linux-3.4.
	- Remove unneeded files from compilation (localtime.c)
	- Added mv_mbus_dram_info() function to core.c
	- Remove NAND, SPI & NOR support from
	  armada385_v7smp_defconfig
	- Add PMU interrupt to irq.h
	- Fix time.c driver to match kernel timer framework
  	  changes.
	Now, A380 compiles under Linux-3.4

Change-Id: Ic87be2dc319269d130411a59d21b45fc1d92998f
Signed-off-by: Shadi Ammouri <shadi@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4378
Reviewed-by: Igor Patrik <igorp@marvell.com>
Tested-by: Igor Patrik <igorp@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/Kconfig                            |    3 +-
 arch/arm/configs/armada_385_v7smp_defconfig |    7 ++-
 arch/arm/mach-armada38x/Makefile            |    2 +-
 arch/arm/mach-armada38x/core.c              |    6 ++
 arch/arm/mach-armada38x/include/mach/irqs.h |   12 +++++
 arch/arm/mach-armada38x/pex.c               |   12 ++---
 arch/arm/mach-armada38x/time.c              |   71 +++++++++++++++++++++------
 7 files changed, 87 insertions(+), 26 deletions(-)

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 3a88b34..0d91850 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -646,6 +646,7 @@ config ARCH_ARMADA38X
 	select PLAT_ARMADA
 	select HAVE_REGS_AND_STACK_ACCESS_API
 	select COMMON_CLKDEV
+	select CLKDEV_LOOKUP
 	select HAVE_SMP
 	select CLKSRC_MMIO
 	select NEED_MACH_IO_H
@@ -1323,7 +1324,7 @@ config XSCALE_PMU
 
 config CPU_HAS_PMU
 	depends on (CPU_V6 || CPU_V6K || CPU_V7 || XSCALE_PMU) && \
-		   (!ARCH_OMAP3 || OMAP3_EMU) && !ARCH_ARMADA38X
+		   (!ARCH_OMAP3 || OMAP3_EMU)
 
 	default y
 	bool
diff --git a/arch/arm/configs/armada_385_v7smp_defconfig b/arch/arm/configs/armada_385_v7smp_defconfig
index 61ac4ac..e7c3239 100644
--- a/arch/arm/configs/armada_385_v7smp_defconfig
+++ b/arch/arm/configs/armada_385_v7smp_defconfig
@@ -11,14 +11,19 @@ CONFIG_KPROBES=y
 CONFIG_MODULES=y
 CONFIG_MODULE_UNLOAD=y
 # CONFIG_BLK_DEV_BSG is not set
+CONFIG_PARTITION_ADVANCED=y
 CONFIG_ARCH_ARMADA38X=y
 # CONFIG_MV_INCLUDE_CESA is not set
 # CONFIG_MV_INCLUDE_TDM is not set
+# CONFIG_MV_INCLUDE_SPI is not set
 CONFIG_MV_ETH_PORTS_NUM=2
 CONFIG_MV_ETH_TXQ=8
 # CONFIG_NET_SKB_RECYCLE is not set
 # CONFIG_MV_INCLUDE_USB is not set
+# CONFIG_MV_INCLUDE_NFC is not set
+# CONFIG_MV_INCLUDE_LEGACY_NAND is not set
 # CONFIG_MV_INCLUDE_INTEG_SATA is not set
+# CONFIG_MV_INCLUDE_NOR is not set
 # CONFIG_MV_INCLUDE_SDIO is not set
 CONFIG_MV_ETH_TXQ_DESC=1024
 CONFIG_MV_ETH_DEBUG_CODE=y
@@ -27,7 +32,6 @@ CONFIG_MV_ETH_GROUP0_CPU=0x1
 # CONFIG_SWP_EMULATE is not set
 CONFIG_PCI_DEBUG=y
 CONFIG_SMP=y
-CONFIG_NR_CPUS=2
 CONFIG_AEABI=y
 CONFIG_UACCESS_WITH_MEMCPY=y
 CONFIG_ZBOOT_ROM_TEXT=0x0
@@ -157,7 +161,6 @@ CONFIG_JFFS2_FS=y
 CONFIG_NFS_FS=y
 CONFIG_NFS_V3=y
 CONFIG_ROOT_NFS=y
-CONFIG_PARTITION_ADVANCED=y
 CONFIG_NLS_CODEPAGE_437=y
 CONFIG_NLS_CODEPAGE_850=y
 CONFIG_NLS_ISO8859_1=y
diff --git a/arch/arm/mach-armada38x/Makefile b/arch/arm/mach-armada38x/Makefile
index 0203b84..86722a6 100644
--- a/arch/arm/mach-armada38x/Makefile
+++ b/arch/arm/mach-armada38x/Makefile
@@ -55,7 +55,7 @@ QD_OBJS		= $(HAL_QD_DIR)/src/driver/gtDrvConfig.o $(HAL_QD_DIR)/src/driver/gtDrv
 LSP_OBJS        = core.o irq.o sysmap.o export.o time.o
 
 obj-y					:= armada38x.o
-obj-$(CONFIG_LOCAL_TIMERS)		+= localtimer.o
+#obj-$(CONFIG_LOCAL_TIMERS)		+= localtimer.o
 armada38x-objs				:= $(LSP_OBJS) $(COMMON_OBJS) $(OSSERVICES_OBJS) $(HAL_OBJS)	\
 					   $(KW_FAM_OBJS)
 
diff --git a/arch/arm/mach-armada38x/core.c b/arch/arm/mach-armada38x/core.c
index 45451b3..27bf34e 100644
--- a/arch/arm/mach-armada38x/core.c
+++ b/arch/arm/mach-armada38x/core.c
@@ -97,6 +97,11 @@ MV_U16 mvMtu[MV_UBOOT_ETH_PORTS] = { 0 };
 
 struct mbus_dram_target_info a38x_mbus_dram_info;
 
+const struct mbus_dram_target_info *mv_mbus_dram_info(void)
+{
+	return &a38x_mbus_dram_info;
+}
+
 /*******************************************************************************
  * Early Printk Support
  */
@@ -1235,5 +1240,6 @@ MACHINE_START(ARMADA_38X, "Marvell Armada-38x Board")
 	.map_io = a38x_map_io,
 	.init_irq = a38x_init_irq,
 	.timer = &a38x_timer,
+	.handle_irq     = gic_handle_irq,
 	.init_machine = a38x_board_init,
 MACHINE_END
diff --git a/arch/arm/mach-armada38x/include/mach/irqs.h b/arch/arm/mach-armada38x/include/mach/irqs.h
index c62c24f..a8e0f2f 100644
--- a/arch/arm/mach-armada38x/include/mach/irqs.h
+++ b/arch/arm/mach-armada38x/include/mach/irqs.h
@@ -230,6 +230,18 @@
 #define IRQ_PRIV_ERROR_SATA01_MBUS	(IRQ_START_PRIV_ERROR + 53)
 #define IRQ_PRIV_ERROR_SATA23_MBUS	(IRQ_START_PRIV_ERROR + 54)
 
+/*******************************************************************************
+ * Private CPU local summary interrupts
+ */
+#define IRQ_START_PRIV_LOCAL_SUM	(IRQ_START_PRIV_ERROR + NR_IRQS_PRIV_ERROR)
+#define NR_IRQS_PRIV_LOCAL_SUM		1
+
+#define IRQ_PRIV_LOCAL_SUM_PERF_MONITOR (IRQ_START_PRIV_LOCAL_SUM + 0)
+
+/* Performance Monitor IRQ */
+#define IRQ_PERF_MONITOR		IRQ_PRIV_LOCAL_SUM_PERF_MONITOR
+
+
 /*
  * Total number of interrupts
  */
diff --git a/arch/arm/mach-armada38x/pex.c b/arch/arm/mach-armada38x/pex.c
index 248a6c8..e2b90ba 100644
--- a/arch/arm/mach-armada38x/pex.c
+++ b/arch/arm/mach-armada38x/pex.c
@@ -306,14 +306,12 @@ int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 	if (request_resource(&iomem_resource, &res[index]))
 		printk(KERN_ERR "Memory Request resource failed - Pci If %x\n", nr);
 
-	sys->resource[0] = &res[0];
+	pci_add_resource_offset(&sys->resources, &res[0], sys->mem_offset);
 	if (index > 0) {
-		sys->resource[1] = &res[1];
-		sys->resource[2] = NULL;
-	} else
-		sys->resource[1] = NULL;
+		sys->io_offset   = 0x0;
+		pci_add_resource_offset(&sys->resources, &res[1], sys->io_offset);
+	}
 
-	sys->io_offset   = 0x0;
 
 	return 1;
 }
@@ -322,7 +320,7 @@ int __init mv_pex_setup(int nr, struct pci_sys_data *sys)
 struct pci_bus *mv_pex_scan_bus(int nr, struct pci_sys_data *sys)
 {
 	struct pci_bus *bus;
-	bus = pci_scan_bus(sys->busnr, &mv_pci_ops, sys);
+	bus = pci_scan_root_bus(NULL, sys->busnr, &mv_pci_ops, sys, &sys->resources);
 	return bus;
 }
 
diff --git a/arch/arm/mach-armada38x/time.c b/arch/arm/mach-armada38x/time.c
index b3df243..8e7ebd7 100644
--- a/arch/arm/mach-armada38x/time.c
+++ b/arch/arm/mach-armada38x/time.c
@@ -30,6 +30,8 @@
 #include "boardEnv/mvBoardEnvLib.h"
 #include "cpu/mvCpu.h"
 
+#define A38X_TIMER_RATE		25000000
+
 /* SoC global timer */
 #define TIMER_CTRL		(MV_CNTMR_REGS_OFFSET + 0x0000)
 #define  TIMER_EN(x)		(1 << (2 * x))
@@ -46,8 +48,21 @@
 static int event_timer_id;
 static int source_timer_id;
 
+/*
+ * Timer rate/frequency for ARM CA9 timers and Marvell SoC timers.
+ */
+static u32 ca9_twd_rate; /* CA9 internal timer */
+static u32 mv_twd_rate;  /* Marvell SoC timer  */
+
 static u32 ticks_per_jiffy;
 
+
+static u32 notrace a38x_clksrc_read32(void)
+{
+	u32 cyc = ~MV_REG_READ(TIMER_VAL(source_timer_id));
+	return cyc;
+}
+
 static cycle_t a38x_clksrc_read(struct clocksource *cs)
 {
 	return 0xffffffff - MV_REG_READ(TIMER_VAL(source_timer_id));
@@ -149,24 +164,50 @@ void clk_disable(struct clk *clk)
 	/* Empty */
 }
 
-static DEFINE_CLOCK_DATA(cd);
+#ifdef CONFIG_HAVE_ARM_TWD
+struct clk {
+	unsigned int rate;
+};
+
+static struct clk twd_clk;
 
-unsigned long long notrace sched_clock(void)
+unsigned long clk_get_rate(struct clk *clk)
 {
-	u32 cyc = ~MV_REG_READ(TIMER_VAL(source_timer_id));
-	return cyc_to_sched_clock(&cd, cyc, (u32)~0);
+	return clk->rate;
 }
 
-static void notrace a38x_update_sched_clock(void)
+long clk_round_rate(struct clk *clk, unsigned long rate)
 {
-	u32 cyc = ~MV_REG_READ(TIMER_VAL(source_timer_id));
-	update_sched_clock(&cd, cyc, (u32)~0);
+	return clk->rate;
+}
+
+int clk_set_rate(struct clk *clk, unsigned long rate)
+{
+	return 0;
 }
 
-static void __init setup_sched_clock(unsigned long tclk)
+static struct clk_lookup clk_twd_lookup = {
+	.dev_id = "smp_twd",
+	.con_id = NULL,
+	.clk = &twd_clk,
+};
+
+static DEFINE_TWD_LOCAL_TIMER(twd_local_timer,
+			      INTER_REGS_PHYS_BASE + A9_MPCORE_TWD,
+			      IRQ_PRIV_CPU_LOCAL_TIMER);
+
+static void __init a38x_twd_init(void)
 {
-	init_sched_clock(&cd, a38x_update_sched_clock, 32, tclk);
+	int err = twd_local_timer_register(&twd_local_timer);
+	if (err)
+		pr_err("twd_local_timer_register failed %d\n", err);
+
+	clk_twd_lookup.clk->rate = ca9_twd_rate;
+	clkdev_add(&clk_twd_lookup);
 }
+#else
+#define a38x_twd_init()	do { } while (0)
+#endif
 
 /* Setup free-running clocksource timer */
 static void a38x_setup_clocksource(int timer, long rate)
@@ -187,7 +228,7 @@ static void a38x_setup_clocksource(int timer, long rate)
 			      rate, 200, 32, clocksource_mmio_readl_down);
 
 	a38x_clksrc.mult = clocksource_hz2mult(rate, a38x_clksrc.shift);
-	setup_sched_clock(rate);
+	setup_sched_clock(a38x_clksrc_read32, 32, rate);
 	clocksource_register(&a38x_clksrc);
 }
 
@@ -202,7 +243,8 @@ static void a38x_setup_clockevent(int irq, long rate)
 	    evt->shift = 32,
 	    evt->rating = 300,
 	    evt->set_next_event = a38x_clkevt_next_event,
-	    evt->set_mode = a38x_clkevt_mode, evt->cpumask = cpumask_of(cpu);
+	    evt->set_mode = a38x_clkevt_mode,
+		evt->cpumask = cpumask_of(cpu);
 	evt->mult = div_sc(rate, NSEC_PER_SEC, evt->shift);
 	evt->max_delta_ns = clockevent_delta2ns(0xffffffff, evt);
 	evt->min_delta_ns = clockevent_delta2ns(0x1, evt);
@@ -221,7 +263,8 @@ static void __init a38x_timer_init(void)
 {
 	u32 rate;
 
-	rate = 25000000;
+	ca9_twd_rate = A38X_TIMER_RATE;
+	rate = ca9_twd_rate / 2;
 
 	printk(KERN_INFO "Initializing Armada-38x SoC Timers\n");
 	ticks_per_jiffy = (rate + HZ / 2) / HZ;
@@ -235,9 +278,7 @@ static void __init a38x_timer_init(void)
 	a38x_setup_clocksource(source_timer_id, rate);
 	a38x_setup_clockevent(IRQ_GLOBAL_TIMER(event_timer_id), rate);
 
-#ifdef CONFIG_HAVE_ARM_TWD
-	twd_base = (INTER_REGS_VIRT_BASE + A9_MPCORE_TWD);
-#endif
+	a38x_twd_init();
 }
 
 struct sys_timer a38x_timer = {
-- 
1.7.5.4

