From c3ee9ef01cf963482e316e56a141c4440942c55c Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Sun, 19 May 2013 16:17:42 +0300
Subject: [PATCH 0664/1825] ALP: enabled Auto Detection from Dip-Switch

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 41128ea546cd9e1977951b0fabc345444cc47e72

	- fixed mvCtrlSysConfigInit: scan board configuration on startup from Dip Switch
	- fixed mvBoardEthComplexInfoUpdate to update connectivity properly
	- updated EthComplex default connectivity
	- added status return to mvBoardTwsiGet
	- fixed bugs in mvBoardIoExpValGet, mvBoardConfigTypeGet, mvCtrlSatRRead, mvCtrlIsEepromEnabled
	- updated board Configuration table with DB-6650 elevant fields

Change-Id: I033694aa0bdcd214a7dc8cc5596111ff023cd056
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/1858
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.c      |   67 +++++++-----
 .../avanta_lp_family/boardEnv/mvBoardEnvLib.h      |    2 +-
 .../avanta_lp_family/boardEnv/mvBoardEnvSpec.c     |   30 +++--
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |  116 +++++++++++--------
 4 files changed, 123 insertions(+), 92 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
index 7c636e8..b2b1770 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.c
@@ -927,6 +927,11 @@ MV_STATUS mvBoardEthComplexInfoUpdate(MV_VOID)
 	if ( (ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_GE_PHY_P3) == MV_FALSE )
 		ethComplexOptions |= MV_ETHCOMP_SW_P3_2_GE_PHY_P3;
 
+	 /* if Switch is connected --> connect Switch ports 2/3 to QUAD_PHY_P2/3 */
+	if ((ethComplexOptions & MV_ETHCOMP_GE_MAC0_2_SW_P6) ||
+	    (ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_SW_P4))
+		ethComplexOptions |= (MV_ETHCOMP_SW_P2_2_GE_PHY_P2 | MV_ETHCOMP_SW_P3_2_GE_PHY_P3);
+
 	/* if MAC1 is NOT connected to PON SerDes --> connect PON MAC to to PON SerDes */
 	if ( (ethComplexOptions & MV_ETHCOMP_GE_MAC1_2_PON_ETH_SERDES) == MV_FALSE )
 		ethComplexOptions |= MV_ETHCOMP_P2P_MAC_2_PON_ETH_SERDES;
@@ -1835,13 +1840,13 @@ MV_U8 mvBoardIoExpValGet(MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo)
 	if (ioInfo==NULL)
 		return (MV_U8)MV_ERROR;
 
-	val = mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum, ioInfo->regNum);
-	if ((MV_U8)MV_ERROR != val) {
-		mask = (1 << ioInfo->offset);
-		return ( (val & mask) >> ioInfo->offset);
+	if (mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum, ioInfo->regNum, &val) != MV_OK) {
+		mvOsPrintf("%s: Error: Read from IO Expander failed\n", __func__);
+		return (MV_U8)MV_ERROR;
 	}
-	DB(mvOsPrintf("%s: Error: Read from IO Expander failed\n", __func__));
-	return (MV_U8)MV_ERROR;
+
+	mask = (1 << ioInfo->offset);
+	return (val & mask) >> ioInfo->offset;
 }
 
 /*******************************************************************************
@@ -1864,25 +1869,28 @@ MV_STATUS mvBoardIoExpValSet(MV_BOARD_IO_EXPANDER_TYPE_INFO *ioInfo, MV_U8 value
 {
 	MV_U8 readVal;
 
-	if (ioInfo==NULL)
-		return (MV_U8)MV_ERROR;
+	if (ioInfo == NULL) {
+		mvOsPrintf("%s: Error: Write to IO Expander failed\n", __func__);
+		return MV_ERROR;
+	}
 	/* Read */
-	readVal = mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum, ioInfo->regNum);
-	if ((MV_U8)MV_ERROR != readVal) {
-		/* Modify */
-		readVal &= !(1 << ioInfo->offset);	/* clean bit of old value  */
-		value = value << ioInfo->offset;	/* shift bit of new value to its location */
-		value &= readVal;
-
-		/* Write */
-		readVal = mvBoardTwsiSet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum, ioInfo->regNum, value);
-		if ((MV_U8)MV_ERROR != readVal)
-			return MV_OK;
+
+	if (mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum, ioInfo->regNum, &readVal) != MV_OK) {
+		mvOsPrintf("%s: Error: Read from IO Expander failed\n", __func__);
+		return MV_ERROR;
 	}
 
+	/* Modify */
+	readVal &= ~(1 << ioInfo->offset);	/* clean bit of old value  */
+	readVal |= (value << ioInfo->offset);
 
-	mvOsPrintf("%s: Error: Write to IO Expander failed\n", __func__);
-	return (MV_U8)MV_ERROR;
+	/* Write */
+	if (mvBoardTwsiSet(BOARD_DEV_TWSI_IO_EXPANDER, ioInfo->expanderNum, ioInfo->regNum, readVal) != MV_OK) {
+		mvOsPrintf("%s: Error: Write to IO Expander failed\n", __func__);
+		return MV_ERROR;
+	}
+
+	return MV_OK;
 }
 
 /*******************************************************************************
@@ -2049,7 +2057,7 @@ MV_STATUS mvBoardSatrInfoGet(MV_SATR_TYPE_ID satrClass, MV_BOARD_SATR_INFO *satr
 *	MV_BOARD_CONFIG_TYPE_INFO struct with mask, offset and register number.
 *
 *******************************************************************************/
-MV_STATUS mvBoardConfigTypeGet(MV_CONFIG_TYPE_ID configClass, MV_BOARD_CONFIG_TYPE_INFO *configInfo)
+MV_BOOL mvBoardConfigTypeGet(MV_CONFIG_TYPE_ID configClass, MV_BOARD_CONFIG_TYPE_INFO *configInfo)
 {
 	int i;
 	MV_U32 boardId = mvBoardIdGet();
@@ -2058,14 +2066,14 @@ MV_STATUS mvBoardConfigTypeGet(MV_CONFIG_TYPE_ID configClass, MV_BOARD_CONFIG_TY
 	 * and check if field is relevant to current running board */
 	for (i = 0; i < MV_CONFIG_TYPE_MAX_OPTION ; i++)
 		if (boardConfigTypesInfo[i].configId == configClass) {
-			configInfo = &boardConfigTypesInfo[i];
+			*configInfo = boardConfigTypesInfo[i];
 			if (boardConfigTypesInfo[i].isActiveForBoard[boardId])
-				return MV_OK;
+				return MV_TRUE;
 			else
-				return MV_ERROR;
+				return MV_FALSE;
 		}
-	DB(mvOsPrintf("%s: Error: requested MV_CONFIG_TYPE_ID was not found (%d) \n", __func__, configClass));
-	return MV_ERROR;
+	mvOsPrintf("%s: Error: requested MV_CONFIG_TYPE_ID was not found (%d)\n", __func__, configClass);
+	return MV_FALSE;
 }
 
 /*******************************************************************************
@@ -2231,7 +2239,7 @@ MV_U32 mvBoardIdGet(MV_VOID)
 *		reg value
 *
 *******************************************************************************/
-MV_U8 mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum)
+MV_STATUS mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum, MV_U8 *pData)
 {
 	MV_TWSI_SLAVE twsiSlave;
 	MV_TWSI_ADDR slave;
@@ -2257,7 +2265,8 @@ MV_U8 mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum)
 	}
 	DB(mvOsPrintf("Board: Read S@R succeded\n"));
 
-	return data;
+	*pData = data;
+	return MV_OK;
 }
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
index b4a454c..6124728 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvLib.h
@@ -446,7 +446,7 @@ MV_ETH_COMPLEX_TOPOLOGY mvBoardLaneSGMIIGet(MV_VOID);
 MV_BOARD_BOOT_SRC mvBoardBootDeviceGroupSet(MV_VOID);
 MV_BOARD_BOOT_SRC mvBoardBootDeviceGet(MV_VOID);
 MV_U32 mvBoardBootAttrGet(MV_U32 satrBootDeviceValue, MV_U8 attrNum);
-MV_U8 mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum);
+MV_STATUS mvBoardTwsiGet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum, MV_U8 *pData);
 MV_STATUS mvBoardTwsiSet(MV_BOARD_TWSI_CLASS twsiClass, MV_U8 devNum, MV_U8 regNum, MV_U8 regVal);
 MV_U8 mvBoardCpuFreqGet(MV_VOID);
 MV_STATUS mvBoardCpuFreqSet(MV_U8 freqVal);
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
index 1cb1e32..ffea8e9 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/boardEnv/mvBoardEnvSpec.c
@@ -98,17 +98,17 @@ MV_BOARD_SATR_INFO boardSatrInfo[] = {
 
 MV_BOARD_CONFIG_TYPE_INFO boardConfigTypesInfo[] = {
 /* {{MV_CONFIG_TYPE_ID ConfigID, MV_U32 Mask,  Offset, expanderNum,  regNum,    isActiveForBoard[]}} */
-	{ MV_CONFIG_MAC0,	       0x3,	0,	 0,		0, 	{ 1, 0, 1, 1 } }, /* Exp#0, Reg#0, BITS [0:1] */
-	{ MV_CONFIG_MAC1,	       0xC,	2,	 0,		0, 	{ 1, 0, 1, 1 } }, /* Exp#0, Reg#0, BITS [2:3] */
-	{ MV_CONFIG_PON_SERDES,	       0x10,	4,	 0,		0, 	{ 1, 0, 1, 1 } }, /* Exp#0, Reg#0, BITS [4]   */
-	{ MV_CONFIG_PON_BEN_POLARITY,  0x20,	5,	 0,		0, 	{ 1, 0, 1, 1 } }, /* Exp#0, Reg#0, BITS [5]   */
-	{ MV_CONFIG_SGMII0_CAPACITY,   0x40,	6,	 0,		0, 	{ 1, 0, 0, 1 } }, /* Exp#0, Reg#0, BITS [6]   */
-	{ MV_CONFIG_SGMII1_CAPACITY,   0x80,	7,	 0,		0, 	{ 1, 0, 1, 1 } }, /* Exp#0, Reg#0, BITS [7]   */
-	{ MV_CONFIG_SLIC_TDM_DEVICE,   0x3,	0,	 0,		1, 	{ 1, 0, 1, 1 } }, /* Exp#0, Reg#1, BITS [0:1] */
-	{ MV_CONFIG_LANE1,	       0xC,	2,	 0,		1, 	{ 1, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [2:3] */
-	{ MV_CONFIG_LANE2,	       0x10,	4,	 0,		1, 	{ 1, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [4]   */
-	{ MV_CONFIG_LANE3,	       0X20,	5,	 0,		1, 	{ 1, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [5:6] */
-	{ MV_CONFIG_DEVICE_BUS_MODULE, 0x3,	0,	 1,		0, 	{ 1, 0, 0, 1 } }, /* Exp#1, Reg#0, BITS [0:1] */
+	{ MV_CONFIG_MAC0,	       0x3,	0,	 0,		0,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#0, BITS [0:1] */
+	{ MV_CONFIG_MAC1,	       0xC,	2,	 0,		0,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#0, BITS [2:3] */
+	{ MV_CONFIG_PON_SERDES,	       0x10,	4,	 0,		0,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#0, BITS [4]   */
+	{ MV_CONFIG_PON_BEN_POLARITY,  0x20,	5,	 0,		0,	{ 0, 0, 1, 1 } }, /* Exp#0, Reg#0, BITS [5]   */
+	{ MV_CONFIG_SGMII0_CAPACITY,   0x40,	6,	 0,		0,	{ 0, 1, 0, 1 } }, /* Exp#0, Reg#0, BITS [6]   */
+	{ MV_CONFIG_SGMII1_CAPACITY,   0x80,	7,	 0,		0,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#0, BITS [7]   */
+	{ MV_CONFIG_SLIC_TDM_DEVICE,   0x3,	0,	 0,		1,	{ 0, 1, 1, 1 } }, /* Exp#0, Reg#1, BITS [0:1] */
+	{ MV_CONFIG_LANE1,	       0xC,	2,	 0,		1,	{ 0, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [2:3] */
+	{ MV_CONFIG_LANE2,	       0x10,	4,	 0,		1,	{ 0, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [4]   */
+	{ MV_CONFIG_LANE3,	       0X20,	5,	 0,		1,	{ 0, 0, 0, 1 } }, /* Exp#0, Reg#1, BITS [5:6] */
+	{ MV_CONFIG_DEVICE_BUS_MODULE, 0x3,	0,	 1,		0,	{ 0, 0, 0, 1 } }, /* Exp#1, Reg#0, BITS [0:1] */
 };
 
 MV_BOARD_IO_EXPANDER_TYPE_INFO db88f6660InfoBoardIOExpanderInfo[] = {
@@ -303,8 +303,12 @@ MV_BOARD_MAC_INFO db88f6650InfoBoardMacInfo[] = {
 MV_BOARD_MPP_TYPE_INFO db88f6650InfoBoardModTypeInfo[] = {
 	{
 		.boardMppSlic = MV_BOARD_AUTO,
-		.ethSataComplexOpt = MV_ETHCOMP_GE_MAC0_2_GE_PHY_P0 |
-				     MV_ETHCOMP_GE_MAC1_2_GE_PHY_P3,
+		.ethSataComplexOpt = MV_ETHCOMP_SW_P0_2_GE_PHY_P0 |
+				     MV_ETHCOMP_SW_P1_2_GE_PHY_P1 |
+				     MV_ETHCOMP_SW_P2_2_GE_PHY_P2 |
+				     MV_ETHCOMP_SW_P3_2_GE_PHY_P3 |
+				     MV_ETHCOMP_GE_MAC0_2_SW_P6 |
+				     MV_ETHCOMP_GE_MAC1_2_RGMII1,
 		.ethPortsMode = 0x0
 	}
 };
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index abf4c5c..fa4012d 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -302,8 +302,8 @@ MV_STATUS mvCtrlEnvInit(MV_VOID)
 *******************************************************************************/
 MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_SATR_TYPE_ID satrReadField, MV_U8 val)
 {
-	MV_BOARD_SATR_INFO *satrInfo = NULL;
-	MV_U8 readVal;
+	MV_BOARD_SATR_INFO satrInfo;
+	MV_U8 readValue, verifyValue;
 
 	if (satrReadField >= MV_SATR_READ_MAX_OPTION ||
 		satrWriteField >= MV_SATR_WRITE_MAX_OPTION) {
@@ -311,30 +311,40 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_SATR_TYPE_ID satrRe
 		return MV_ERROR;
 	}
 
-	if (mvBoardSatrInfoGet(satrWriteField, satrInfo) != MV_OK) {
+	if (mvBoardSatrInfoGet(satrWriteField, &satrInfo) != MV_OK) {
 		mvOsPrintf("%s: mvBoardSarInfoGet failed: S@R config is not relevant for this board(%d)\n", __func__, satrWriteField);
 		return MV_ERROR;
 	}
 
 	/* read */
-	readVal = mvBoardTwsiGet(BOARD_DEV_TWSI_SATR, satrInfo->regNum, 0);
-	if (readVal == (MV_U8)MV_ERROR)
+	if (mvBoardTwsiGet(BOARD_DEV_TWSI_SATR, satrInfo.regNum, 0, &readValue) != MV_OK) {
+		mvOsPrintf("%s: Error: Read from S@R failed\n", __func__);
 		return MV_ERROR;
+	}
 
 	/* modify */
-	readVal &= !(satrInfo->mask);             /* clean old value */
-	readVal &= (val <<  satrInfo->offset);    /* save new value */
+	readValue &= ~(satrInfo.mask);             /* clean old value */
+	readValue |= (val <<  satrInfo.offset);    /* save new value */
 
 	/* write */
-	if (mvBoardTwsiSet(BOARD_DEV_TWSI_SATR, satrInfo->regNum, 0, readVal) == MV_ERROR)
+	if (mvBoardTwsiSet(BOARD_DEV_TWSI_SATR, satrInfo.regNum, 0, readValue) != MV_OK) {
+		mvOsPrintf("%s: Error: Write to S@R failed\n", __func__);
 		return MV_ERROR;
+	}
 
 	/* verify */
-	if (readVal != mvBoardTwsiGet(BOARD_DEV_TWSI_SATR, satrInfo->regNum, 0))
+	if (mvBoardTwsiGet(BOARD_DEV_TWSI_SATR, satrInfo.regNum, 0, &verifyValue) != MV_OK) {
+		mvOsPrintf("%s: Error: 2nd Read from S@R failed\n", __func__);
 		return MV_ERROR;
+	}
+
+	if (readValue != verifyValue) {
+		mvOsPrintf("%s: Error: Write to S@R failed : written value doesn't match\n", __func__);
+		return MV_ERROR;
+	}
 
 	/*else save written value in global array */
-	satrOptionsConfig[satrReadField] = readVal;
+	satrOptionsConfig[satrReadField] = val;
 	return MV_OK;
 }
 
@@ -354,8 +364,8 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_SATR_TYPE_ID satrRe
 *******************************************************************************/
 MV_U32 mvCtrlSatRRead(MV_SATR_TYPE_ID satrField)
 {
-	MV_BOARD_SATR_INFO *satrInfo = NULL;
-	if (satrField < MV_SATR_READ_MAX_OPTION && mvBoardSatrInfoGet(satrField, satrInfo) == MV_OK)
+	MV_BOARD_SATR_INFO satrInfo;
+	if (satrField < MV_SATR_READ_MAX_OPTION && mvBoardSatrInfoGet(satrField, &satrInfo) == MV_OK)
 		return satrOptionsConfig[satrField];
 	else
 		return MV_ERROR;
@@ -449,24 +459,25 @@ MV_STATUS mvCtrlCpuDdrL2FreqGet(MV_FREQ_MODE *freqMode)
 *******************************************************************************/
 MV_U32 mvCtrlSysConfigGet(MV_CONFIG_TYPE_ID configField)
 {
-	MV_BOARD_CONFIG_TYPE_INFO *configInfo = NULL;
+	MV_BOARD_CONFIG_TYPE_INFO configInfo;
 
 	if (!mvBoardConfigAutoDetectEnabled()) {
-		mvOsPrintf("%s: Error:Auto detect is disabled for board ,can't read board configuration\n", __func__);
+		mvOsPrintf("%s: Error reading board configuration - Auto detection is disabled\n", __func__);
 		return MV_ERROR;
 	}
 
 	if (configField < MV_CONFIG_TYPE_MAX_OPTION &&
-	    mvBoardConfigTypeGet(configField, configInfo) == MV_OK)
-		return boardOptionsConfig[configField];
+		mvBoardConfigTypeGet(configField, &configInfo) != MV_TRUE) {
+		mvOsPrintf("%s: Error: Requested board config is not valid for this board(%d)\n", __func__, configField);
+		return -1;
+	}
+
+	return boardOptionsConfig[configField];
 
-	DB(mvOsPrintf("%s: Error: Requested board config is not valid for this board(%d)\n", __func__, configField));
-	return MV_ERROR;
 }
 
 /*******************************************************************************
 * mvCtrlSatrInit
-*
 * DESCRIPTION: Initialize S@R configuration
 *               1. initialize all S@R and fields
 *               2. read relevant S@R fields (direct memory access)
@@ -516,24 +527,30 @@ MV_VOID mvCtrlSatrInit(void)
 MV_VOID mvCtrlSysConfigInit()
 {
 	MV_U8 regNum, i, configVal[MV_IO_EXP_MAX_REGS];
-	MV_BOARD_CONFIG_TYPE_INFO *configInfo = NULL;
+	MV_BOARD_CONFIG_TYPE_INFO configInfo;
+	MV_BOOL readSuccess = MV_FALSE;
 
 	memset(&boardOptionsConfig, 0x0, sizeof(MV_U32) * MV_CONFIG_TYPE_MAX_OPTION );
 
 	/*Read rest of Board Configuration, EEPROM / Dip Switch access read : */
-	if (mvCtrlBoardConfigGet(configVal) == MV_OK) {
-		/* Save values Locally in configVal[] */
-		for (i = 0; i < MV_CONFIG_TYPE_MAX_OPTION; i++) {
-			if ( mvBoardConfigTypeGet(i, configInfo) == MV_OK) {
-				/* each Expander conatins 2 registers */
-				regNum = configInfo->expanderNum * 2 + configInfo->regNum;
-				boardOptionsConfig[configInfo->configId] =
-					(configVal[regNum] & configInfo->mask) >> configInfo->offset;
-			}
+	if (mvCtrlBoardConfigGet(configVal) != MV_OK) {
+		mvOsPrintf("%s: Error: mvCtrlBoardConfigGet failed\n", __func__);
+		return;
+	}
+
+	/* Save values Locally in configVal[] */
+	for (i = 0; i < MV_CONFIG_TYPE_MAX_OPTION; i++) {
+		if (mvBoardConfigTypeGet(i, &configInfo) == MV_TRUE) {
+			readSuccess = MV_TRUE;
+			/* each Expander conatins 2 registers */
+			regNum = configInfo.expanderNum * 2 + configInfo.regNum;
+			boardOptionsConfig[configInfo.configId] =
+				(configVal[regNum] & configInfo.mask) >> configInfo.offset;
 		}
 	}
 
-	mvOsPrintf("%s: Error: Read board configuration from EEPROM/Dip Switch failed\n", __func__);
+	if (readSuccess == MV_FALSE)
+		mvOsPrintf("%s: Error: Read board configuration from EEPROM/Dip Switch failed\n", __func__);
 }
 
 /*******************************************************************************
@@ -552,35 +569,33 @@ MV_VOID mvCtrlSysConfigInit()
 *       None.
 *
 * RETURN:
-*       MV_BOOL :  MV_TRUE if EEPROM enabled, else return MV_FALSE.
+*       MV_BOOL :  MV_TRUE if EEPROM enabled, else return MV_ERROR.
 *
 *******************************************************************************/
 MV_STATUS mvCtrlBoardConfigGet(MV_U8 *config)
 {
 	MV_U32 boardId = mvBoardIdGet();
+	MV_STATUS status1, status2;
+
 	MV_BOOL isEepromEnabled = mvCtrlIsEepromEnabled();
 	MV_BOARD_TWSI_CLASS twsiClass = (isEepromEnabled ? BOARD_DEV_TWSI_EEPROM : BOARD_DEV_TWSI_IO_EXPANDER);
 
-	config[0] = mvBoardTwsiGet(twsiClass, 0, 0);		/* EEPROM/Dip Switch Reg#0 */
-	if ((MV_U8)MV_ERROR == config[0]) {
-		DB(mvOsPrintf("%s: Error: Read from EEPROM/Dip Switch Reg#0 failed\n", __func__));
-		return MV_ERROR;
-	}
+	status1 = mvBoardTwsiGet(twsiClass, 0, 0, &config[0]);		/* EEPROM/Dip Switch Reg#0 */
+	status2 = mvBoardTwsiGet(twsiClass, 0, 0, &config[1]);		/* EEPROM/Dip Switch Reg#1 */
 
-	config[1] = mvBoardTwsiGet(twsiClass, 0, 1);		/* EEPROM/Dip Switch Reg#1 */
-	if ((MV_U8)MV_ERROR == config[1]) {
-		DB(mvOsPrintf("%s: Error: Read from EEPROM/Dip Switch Reg#1 failed\n", __func__));
+	if (status1 != MV_OK || status2 != MV_OK) {
+		DB(mvOsPrintf("%s: Error: mvBoardTwsiGet from EEPROM/Dip Switch failed\n", __func__));
 		return MV_ERROR;
 	}
 
 	if (boardId == DB_6660_ID) { /* DB-6660 has another register for board configuration */
 		if (isEepromEnabled == MV_OK)
-			config[2] = mvBoardTwsiGet(BOARD_DEV_TWSI_EEPROM, 0, 2);		/* EEPROM Reg#2 */
+			status1 = mvBoardTwsiGet(BOARD_DEV_TWSI_EEPROM, 0, 2, &config[2]);	/* EEPROM Reg#2 */
 		else
-			config[2] = mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, 1, 0);	/* Dip Switch Reg#1 */
+			status1 = mvBoardTwsiGet(BOARD_DEV_TWSI_IO_EXPANDER, 1, 0, &config[2]);	/* Dip Switch Reg#1 */
 
-		if ((MV_U8)MV_ERROR == config[2]) {
-			DB(mvOsPrintf("%s: Error: Read from EEPROM/Dip Switch Reg#2 failed\n", __func__));
+		if (status1 != MV_OK) {
+			DB(mvOsPrintf("%s: Error: mvBoardTwsiGet from EEPROM/Dip Switch Reg#2 failed\n", __func__));
 			return MV_ERROR;
 		}
 	}
@@ -609,14 +624,17 @@ MV_BOOL mvCtrlIsEepromEnabled()
 	MV_BOARD_IO_EXPANDER_TYPE_INFO ioInfo;
 	MV_U8 value;
 
-	if (mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_JUMPER2_EEPROM_ENABLED, &ioInfo) == MV_OK)
+	if (mvBoardIoExpanderTypeGet(MV_IO_EXPANDER_JUMPER2_EEPROM_ENABLED, &ioInfo) != MV_OK)
 	{
-		value = mvBoardIoExpValGet(&ioInfo);
-		if (value == 0x1)
-			return MV_TRUE;
+		mvOsPrintf("%s: Error: Read from IO expander failed (EEPROM enabled jumper)\n", __func__);
+		return MV_FALSE;
 	}
-	mvOsPrintf("%s: Error: Read from IO expander failed (EEPROM enabled jumper)\n", __func__);
-	return MV_FALSE;
+
+	value = mvBoardIoExpValGet(&ioInfo);
+	if (value == 0x1)
+		return MV_FALSE; /* Jumper is OUT: EEPROM disabled */
+	else
+		return MV_TRUE;  /* Jumper is IN: EEPROM enabled */
 }
 
 /*******************************************************************************
-- 
1.7.5.4

