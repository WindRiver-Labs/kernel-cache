From d5f52cf20a9be11e8507456b4819c432a311041f Mon Sep 17 00:00:00 2001
From: Uri Eliyahu <uriel@marvell.com>
Date: Sun, 9 Mar 2014 18:23:32 +0200
Subject: [PATCH 1447/1825] pp3: initialize seq bugs fix

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit fa23b42fac9a80f6b1ec266194b002689fab1d5c

Change-Id: I81b7988a68a7134816168f081ade3a1bc5bf0cf2
Signed-off-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6262
Reviewed-by: Yelena Krivosheev <yelena@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 drivers/net/ethernet/marvell/pp3/emac/mv_emac.c    |   16 ++++---
 .../net/ethernet/marvell/pp3/emac/mv_emac_sysfs.c  |    7 +---
 .../ethernet/marvell/pp3/net_dev/mv_dev_sysfs.c    |    6 +-
 .../net/ethernet/marvell/pp3/net_dev/mv_netdev.c   |   48 +++++++++++++-------
 4 files changed, 45 insertions(+), 32 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c
index 3930a34..e068540 100644
--- a/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c
+++ b/drivers/net/ethernet/marvell/pp3/emac/mv_emac.c
@@ -84,7 +84,7 @@ u32 mv_pp3_emac_reg_read(int port, u32 reg)
 	reg_data = mv_pp3_hw_reg_read(reg + pp3_emac[port].base);
 
 	if (pp3_emac[port].flags & MV_PP3_EMAC_F_DEBUG)
-		pr_info("read     : 0x%x = 0x%08x\n", reg, reg_data);
+		pr_info("read     : 0x%04x = 0x%08x\n", reg, reg_data);
 
 	return reg_data;
 }
@@ -95,15 +95,15 @@ void mv_pp3_emac_reg_write(int port, u32 reg, u32 data)
 
 	if (pp3_emac[port].flags & MV_PP3_EMAC_F_DEBUG) {
 		u32 reg_data;
-		pr_info("write    : 0x%x = 0x%08x\n", reg, data);
+		pr_info("write    : 0x%04x = 0x%08x\n", reg, data);
 		reg_data = mv_pp3_hw_reg_read(reg + pp3_emac[port].base);
-		pr_info("read back: 0x%x = 0x%08x\n", reg, reg_data);
+		pr_info("read back: 0x%04x = 0x%08x\n", reg, reg_data);
 	}
 }
 
 static void mv_pp3_emac_reg_print(int port, char *reg_name, u32 reg)
 {
-	pr_info("  %-32s: 0x%x = 0x%08x\n", reg_name, reg, mv_pp3_emac_reg_read(port, reg));
+	pr_info("  %-32s: 0x%04x = 0x%08x\n", reg_name, reg, mv_pp3_emac_reg_read(port, reg));
 }
 
 void mv_pp3_emac_unit_base(int port, u32 base)
@@ -134,9 +134,11 @@ void mv_pp3_emac_init(int port)
 void mv_pp3_emac_debug(int port, int en)
 {
 	if (en)
-		pp3_emac[port].flags |= MV_PP3_EMAC_F_DEBUG_BIT;
+		pp3_emac[port].flags |= MV_PP3_EMAC_F_DEBUG;
 	else
-		pp3_emac[port].flags &= ~MV_PP3_EMAC_F_DEBUG_BIT;
+		pp3_emac[port].flags &= ~MV_PP3_EMAC_F_DEBUG;
+
+
 }
 
 /* set QM Enq queu and Deq port */
@@ -209,7 +211,7 @@ void mv_pp3_emac_regs(int port)
 	mv_pp3_emac_reg_print(port, "DEQ_RTC_STRM_VAL", MV_EMAC_DEQ_RTC_STRM_VAL_REG);
 	mv_pp3_emac_reg_print(port, "DEQ_RTC_PORT_VAL", MV_EMAC_DEQ_RTC_PORT_VAL_REG);
 
-	pr_info("-------------- debug regs -----------\n");
+	pr_info("------------------------ debug regs ---------------------\n");
 
 	mv_pp3_emac_reg_print(port, "DBG_SM_STATUS", MV_EMAC_DBG_SM_STATUS_REG);
 	mv_pp3_emac_reg_print(port, "DBG_FIFO_FILL_LVL1", MV_EMAC_DBG_FIFO_FILL_LVL1_REG);
diff --git a/drivers/net/ethernet/marvell/pp3/emac/mv_emac_sysfs.c b/drivers/net/ethernet/marvell/pp3/emac/mv_emac_sysfs.c
index 63b289b..b3f473c 100644
--- a/drivers/net/ethernet/marvell/pp3/emac/mv_emac_sysfs.c
+++ b/drivers/net/ethernet/marvell/pp3/emac/mv_emac_sysfs.c
@@ -70,13 +70,12 @@ static ssize_t mv_emac_help(char *b)
 	int o = 0;
 
 	o += scnprintf(b+o, PAGE_SIZE-o, "echo [p]         > regs     - Dump registers\n");
-	o += scnprintf(b+o, PAGE_SIZE-o, "echo [p] [u]     > regRead  - Read register, address [u]\n");
 	o += scnprintf(b+o, PAGE_SIZE-o, "echo [p] [u] [v] > regWrite - Write register, address [u], value [v]\n");
 	o += scnprintf(b+o, PAGE_SIZE-o, "echo [p] [u] [v] > qmMapSet - Set QM mapping, [u] QM port, [v] QM queue\n");
 	o += scnprintf(b+o, PAGE_SIZE-o, "echo [p] [0|1]   > rxEn     - Enable / Disable rx\n");
 	o += scnprintf(b+o, PAGE_SIZE-o, "echo [p] [0|1]   > debug    - Enable / Disable debug outputs\n");
 	o += scnprintf(b+o, PAGE_SIZE-o, "\n");
-	o += scnprintf(b+o, PAGE_SIZE-o, "parameters: [p] emac number\n");
+	o += scnprintf(b+o, PAGE_SIZE-o, "parameters: [p] emac number\n\n");
 
 	return o;
 }
@@ -116,8 +115,6 @@ static ssize_t mv_emac_3_hex_store(struct device *dev,
 		mv_pp3_emac_regs(p);
 	else if (!strcmp(name, "regWrite"))
 		mv_pp3_emac_reg_write(p, u, v);
-	else if (!strcmp(name, "regRead"))
-		mv_pp3_emac_reg_write(p, u, v);
 	else if (!strcmp(name, "debug"))
 		mv_pp3_emac_debug(p, u);
 	else if (!strcmp(name, "qmMapSet"))
@@ -137,7 +134,6 @@ static ssize_t mv_emac_3_hex_store(struct device *dev,
 static DEVICE_ATTR(help, S_IRUSR, mv_emac_show, NULL);
 static DEVICE_ATTR(regs, S_IWUSR, NULL, mv_emac_3_hex_store);
 static DEVICE_ATTR(regWrite, S_IWUSR, NULL, mv_emac_3_hex_store);
-static DEVICE_ATTR(regRead, S_IWUSR, NULL, mv_emac_3_hex_store);
 static DEVICE_ATTR(debug, S_IWUSR, NULL, mv_emac_3_hex_store);
 static DEVICE_ATTR(qmMapSet, S_IWUSR, NULL, mv_emac_3_hex_store);
 static DEVICE_ATTR(rxEn, S_IWUSR, NULL, mv_emac_3_hex_store);
@@ -147,7 +143,6 @@ static struct attribute *mv_emac_attrs[] = {
 	&dev_attr_help.attr,
 	&dev_attr_regs.attr,
 	&dev_attr_regWrite.attr,
-	&dev_attr_regRead.attr,
 	&dev_attr_debug.attr,
 	&dev_attr_qmMapSet.attr,
 	&dev_attr_rxEn.attr,
diff --git a/drivers/net/ethernet/marvell/pp3/net_dev/mv_dev_sysfs.c b/drivers/net/ethernet/marvell/pp3/net_dev/mv_dev_sysfs.c
index 9937ffa..35bfd14 100644
--- a/drivers/net/ethernet/marvell/pp3/net_dev/mv_dev_sysfs.c
+++ b/drivers/net/ethernet/marvell/pp3/net_dev/mv_dev_sysfs.c
@@ -41,10 +41,10 @@ static ssize_t pp3_dev_help(char *b)
 	o += sprintf(b+o, "echo [netif] [cpu]          > groupStatus      - print group status\n");
 	o += sprintf(b+o, "echo [pool]                 > poolStatus       - print BM pool status\n");
 	o += sprintf(b+o, "echo [cpu]                  > cpuStatus        - print cpu status\n");
-	o += sprintf(b+o, "echo [netif] [cpu [q]       > rxqStatus        - print rxq status\n");
-	o += sprintf(b+o, "echo [netif] [cpu [q]       > txqStatus        - print rxq status\n");
+	o += sprintf(b+o, "echo [netif] [cpu] [q]      > rxqStatus        - print rxq status\n");
+	o += sprintf(b+o, "echo [netif] [cpu] [q]      > txqStatus        - print rxq status\n");
 
-	o += sprintf(b+o, "All inputs in decimal\n");
+	o += sprintf(b+o, "\nAll inputs in decimal\n");
 
 	return o;
 }
diff --git a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
index d3a7fa9..56a72c3 100644
--- a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
+++ b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
@@ -26,9 +26,11 @@
 #include "hmac/mv_hmac_bm.h"
 #include "emac/mv_emac.h"
 #include "fw/mv_channel_if.h"
-#include "gmac/mv_gmac.h"
 #include "mv_netdev.h"
 #include "mv_netdev_structs.h"
+#ifdef MV_FPGA
+#include "gmac/mv_gmac.h"
+#endif
 
 /* global data */
 struct pp3_group *pp3_groups[CONFIG_NR_CPUS][MAX_ETH_DEVICES];
@@ -276,7 +278,7 @@ static struct pp3_pool *pp3_pool_alloc(int pool, int capacity)
 		return NULL;
 	}
 
-	if (pp3_pools[pool] != NULL) {
+	if (pp3_pools[pool]) {
 		pr_err("%s: pool=%d already exist\n", __func__, pool);
 		return NULL;
 	}
@@ -296,13 +298,14 @@ static struct pp3_pool *pp3_pool_alloc(int pool, int capacity)
 	ppool->flags = POOL_F_FREE;
 
 	size = sizeof(unsigned int) * capacity;
+
 /*
-	TODO: example in mainline driver, firt param ?
 	ppool->virt_base = dma_alloc_coherent(NULL, size, &ppool->phys_base, GFP_KERNEL);
-*/
+
 	if (!ppool->virt_base)
 		goto oom;
 
+*/
 	return ppool;
 
 oom:
@@ -319,7 +322,7 @@ oom:
 static int pp3_pool_init_complete(int pool)
 {
 	int count = 0;
-	unsigned int completed;
+	unsigned int completed = 1;
 
 	do {
 		if (count++ >= MV_PP3_POOL_INIT_TIMEOUT_MSEC) {
@@ -345,7 +348,8 @@ static struct pp3_pool *pp3_pool_gp_create(int pool, int capacity)
 
 	if (pp3_pools[pool]) {
 		if (pp3_pools[pool]->capacity != capacity) {
-			pr_err("%s: pool #%d already exist with capacity < %d\n", __func__, pool, capacity);
+			pr_err("%s: pool #%d already exist with capacity = %d\n",
+				__func__, pool, pp3_pools[pool]->capacity);
 			return NULL;
 		}
 
@@ -366,14 +370,18 @@ static struct pp3_pool *pp3_pool_gp_create(int pool, int capacity)
 
 	ppool->type = PP3_POOL_TYPE_GP;
 
-	/*ret_val = bm_gp_pool_def_basic_init(pool, 2 * capacity, 0, ppool->phys_base, 1);*/
+/*
+	ret_val = bm_gp_pool_def_basic_init(pool, 2 * capacity, 0, ppool->phys_base, 1);
 
 	if (!ret_val)
 		goto out;
+*/
 
 	if (pp3_pool_init_complete(pool))
 		goto out;
 
+	pr_info("%s: pool %d creation successed\n", __func__, pool);
+
 	return ppool;
 out:
 	pp3_pool_release(pool);
@@ -414,10 +422,12 @@ static int pp3_pools_dram_init(int capacity)
 	ppool_0->type = PP3_POOL_TYPE_DRAM;
 	ppool_1->type = PP3_POOL_TYPE_DRAM;
 
-	/*ret_val = bm_qm_dram_pools_def_quick_init (capacity, 0, ppool_0->phys_base, 0, ppool_1->phys_base);*/
+/*
+	ret_val = bm_qm_dram_pools_def_quick_init (capacity, 0, ppool_0->phys_base, 0, ppool_1->phys_base);
 
 	if (!ret_val)
 		return ret_val;
+*/
 
 	return pp3_pool_init_complete(MV_PP3_DRAM_POOL_0) || pp3_pool_init_complete(MV_PP3_DRAM_POOL_1);
 }
@@ -724,8 +734,9 @@ static int mv_pp3_sw_probe(struct platform_device *pdev)
 	pp3_ports[pdev->id] = MV_PP3_PRIV(dev);
 
 	mv_pp3_emac_unit_base(pdev->id, mv_hw_silicon_base_addr_get() + MV_PP3_EMAC_BASE(pdev->id));
+#ifdef MV_FPGA
 	pp3_gmac_unit_base(pdev->id, GMAC_REG_BASE(pdev->id) + mv_fpga_gop_base_addr_get());
-
+#endif
 	pr_info("Probing Marvell PPv3 Network Driver\n");
 	return 0;
 }
@@ -796,19 +807,24 @@ static int mv_pp3_hw_netif_start(struct pp3_dev_priv *dev_priv)
 
 		/*pool = mv_pp3_cfg_dp_long_bpid(dev_priv->index)*/
 		group_ctrl->long_pool = pp3_pool_gp_create(pool, MV_PP3_LONG_POOL_SIZE);
+		group_ctrl->long_pool->flags = POOL_F_LONG;
 		/*pool = mv_pp3_cfg_dp_short_bpid(dev_priv->index)*/
 		group_ctrl->short_pool = pp3_pool_gp_create(pool, MV_PP3_SHORT_POOL_SIZE);
+		group_ctrl->long_pool->flags = POOL_F_SHORT;
 		/*pool = mv_pp3_cfg_dp_lro_bpid(dev_priv->index)*/
 		group_ctrl->lro_pool = pp3_pool_gp_create(pool, MV_PP3_LRO_POOL_SIZE);
+		group_ctrl->long_pool->flags = POOL_F_LRO;
 
 		for (i = 0; i < group_ctrl->rxqs_num; i++) {
 			rxq_ctrl =  group_ctrl->rxqs[i];
 			mv_pp3_hmac_rxq_init(rxq_ctrl->frame_num, rxq_ctrl->sw_q, rxq_ctrl->size);
+			mv_pp3_hmac_rxq_enable(rxq_ctrl->frame_num, rxq_ctrl->sw_q);
 		}
 
 		for (i = 0; i < group_ctrl->txqs_num; i++) {
 			txq_ctrl =  group_ctrl->txqs[i];
 			mv_pp3_hmac_txq_init(txq_ctrl->frame_num, txq_ctrl->sw_q, txq_ctrl->size, 0);
+			mv_pp3_hmac_txq_enable(txq_ctrl->frame_num, txq_ctrl->sw_q);
 		}
 	}
 
@@ -861,13 +877,13 @@ static int mv_pp3_hw_shared_start(void)
 	/* TODO: HMAC HW unit int */
 
 	pp3_pools_dram_init(BM_DRAM_POOL_CAPACITY);
-	pp3_pools_dram_init(BM_GPM_POOL_CAPACITY);
+	pp3_pools_gpm_init(BM_GPM_POOL_CAPACITY);
 	/*bm_enable();*/
 
 	/* TODO: start fw */
 	/* TODO: Channel create */
 
-	cpu_ctrl->chan_id = mv_pp3_chan_create(MV_PP3_CHAN_SIZE, 0, pp3_chan_callback);
+	/*cpu_ctrl->chan_id = mv_pp3_chan_create(MV_PP3_CHAN_SIZE, 0, pp3_chan_callback);*/
 
 	return 0;
 oom:
@@ -910,8 +926,7 @@ static int mv_pp3_sw_shared_probe(struct platform_device *pdev)
 
 	pp3_frames = kzalloc(MV_PP3_FRAMES * sizeof(struct pp3_frame *), GFP_KERNEL);
 
-	mv_pp3_hmac_gl_unit_base(silicon_base + MV_PP3_HMAC_GL_UNIT_OFFSET);
-	mv_pp3_hmac_frame_unit_base(silicon_base + MV_PP3_HMAC_FR_UNIT_OFFSET, MV_PP3_HMAC_FR_INST_OFFSET);
+	mv_pp3_hmac_init();
 
 	for (i = 0; i < MV_PP3_FRAMES; i++) {
 		pp3_frames[i] = kzalloc(sizeof(struct pp3_frame), GFP_KERNEL);
@@ -1103,8 +1118,9 @@ void pp3_netdev_pool_status_print(int pool)
 		str = "UNKNOWN";
 
 	pr_info("/n");
-	pr_info("pool #%d: pool type = %s, buffers num = %d, buffer size = %d\n",
-			pool, str, ppool->buf_num, ppool->buf_size);
+	pr_info("pool #%d : ppool = 0x%p, pool type = %s, buffers num = %d, buffer size = %d, capacity = %d\n",
+			pool, ppool, str, ppool->buf_num, ppool->buf_size, ppool->capacity);
+
 	pr_info("virt_base = 0x%p, phys_base = 0x%lu\n", ppool->virt_base, ppool->phys_base);
 
 	return;
@@ -1127,7 +1143,7 @@ void pp3_netdev_cpu_status_print(int cpu)
 
 	cpu_ctrl = pp3_cpus[cpu];
 	pr_info("/n");
-	pr_info("cpu #%d: frames bitmap = 0x%x, bm_msg_irq = %d, bm_msg_groeup = %d, chan_id = %d\n", cpu,
+	pr_info("cpu #%d: frames bitmap = 0x%x, bm_msg_irq = %d, bm_msg_group = %d, chan_id = %d\n", cpu,
 			cpu_ctrl->frame_bmp, cpu_ctrl->bm_msg_irq, cpu_ctrl->bm_msg_group, cpu_ctrl->chan_id);
 
 	linux_pool_id = cpu_ctrl->tx_done_pool ? cpu_ctrl->tx_done_pool->pool : -1;
-- 
1.7.5.4

