From b188506c4b0de3e2e1694592f687ec2717c9f646 Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Tue, 4 Mar 2014 14:09:34 +0800
Subject: [PATCH 1430/1825] fix: alp: pon: compilation issue in Z1 version

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 758f1eeb97e7456787b17613f1a7df5828563805

Most of the macro definition(Z1, A0) in PON module are too old. They are actually the definition in KW2, in Avanta LP, both of Z1 and A0 has similar new definition, thus need to clean them.
And for Avanta LP, only need Z1/A0 macro when both of Z1 and A0 has the register but content is different.

Change-Id: I577deea6661b1d4a1973d192e41753a56022237c
Signed-off-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6109
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pon/core/epon/eponOnuDb.h    |    6 -
 .../mv_drivers_lsp/mv_pon/core/epon/eponOnuInit.c  |   17 ---
 arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c      |  127 --------------------
 arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h      |   18 ---
 arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c     |   54 +--------
 arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h     |    2 -
 6 files changed, 1 insertions(+), 223 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/epon/eponOnuDb.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/epon/eponOnuDb.h
index ad5830f..ed30161 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/epon/eponOnuDb.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/epon/eponOnuDb.h
@@ -194,11 +194,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define ONU_DEF_LASER_ON_OFF_TIME             (0x30)
 
 /* EPON TXM Definitions */
-#ifdef PON_Z1
-#define ONU_DEF_TXM_CFG_MODE                  (0x0)
-#define ONU_DEF_TXM_CFG_ALIGNMENT             (0x1)
-#define ONU_DEF_TXM_CFG_PRIORITY              (0x0)
-#else /* Z2,A0 or later */
 #define ONU_DEF_TXM_CFG_TFEC_1                (0x2)
 #define ONU_DEF_TXM_CFG_TFEC_2                (0x2)
 #define ONU_DEF_TXM_CFG_CTRL_FIFO_DIS_FCS_ON  (0x1)
@@ -219,7 +214,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define ONU_DEF_TXM_CFG_PRIORITY_RPRT_FIRST   (0x0)
 #define ONU_DEF_TXM_CFG_EPON_OVERHEAD         (0x0E01)
 #define ONU_DEF_TXM_CFG_P2P_OVERHEAD          (0x0E06)
-#endif
 
 /* EPON PCS Definitions */
 #define ONU_DEF_PCS_CFG_RX_EN                 (0x01)
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/epon/eponOnuInit.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/epon/eponOnuInit.c
index f96a603..57ed7ea 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/epon/eponOnuInit.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/epon/eponOnuInit.c
@@ -216,10 +216,7 @@ MV_STATUS onuEponAsicInit(void)
 	MV_STATUS status;
 	MV_U32 macAddrHigh;
 	MV_U32 macAddrLow;
-
-#ifndef PON_Z1
 	MV_U32 pcsConfig;
-#endif  /* PON_Z1 */
 	MV_U32 macId;
 	MV_U32 familyId = MV_88F66X0;    /*mvCtrlModelGet();*/
 
@@ -404,18 +401,6 @@ MV_STATUS onuEponAsicInit(void)
 		}
 	}
 
-#ifdef PON_Z1
-	status = mvOnuEponMacTxmConfigSet(ONU_DEF_TXM_CFG_MODE,
-					  ONU_DEF_TXM_CFG_ALIGNMENT,
-					  ONU_DEF_TXM_CFG_PRIORITY);
-	if (status != MV_OK) {
-		mvPonPrint(PON_PRINT_ERROR, PON_INIT_MODULE,
-			   "ERROR: (%s:%d) mvOnuEponMacTxmConfigSet\n\r", __FILE_DESC__, __LINE__);
-		return MV_ERROR;
-	}
-
-#else   /* Z2,A0 or later */
-
 	status = mvOnuEponMacTxmOverheadSet(0x0E01);
 	if (status != MV_OK) {
 		mvPonPrint(PON_PRINT_ERROR, PON_INIT_MODULE,
@@ -601,8 +586,6 @@ MV_STATUS onuEponAsicInit(void)
 		return MV_ERROR;
 	}
 
-#endif  /* Z2,A0 and later */
-
 	return MV_OK;
 }
 
diff --git a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c
index 1902556..6d35737 100755
--- a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c
+++ b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.c
@@ -5973,7 +5973,6 @@ MV_STATUS mvOnuEponMacGenOpcodeSet(MV_U32 opcodeType,
 	return status;
 }
 
-#ifdef PON_A0
 /*******************************************************************************
 **
 **  mvOnuEponMacGenTimestampConfig
@@ -6135,8 +6134,6 @@ MV_STATUS mvOnuEponMacGenRegPacketPaddingSet(MV_U32 regAckPadding, MV_U32 regReq
 	return asicOntGlbRegWrite(mvAsicReg_EPON_GEN_ONT_REGISTER_PACKET_PADDING, paddingConfig, 0);
 }
 
-#endif
-
 /*******************************************************************************
 **
 **  mvOnuEponMacGenDriftThresholdSet
@@ -7111,36 +7108,6 @@ MV_STATUS mvOnuEponMacGpmMinProcessingTimeSet(MV_U32 processingTime, MV_U32 effe
 	return status;
 }
 
-#ifdef PON_Z1
-/*******************************************************************************
-**
-**  mvOnuEponMacGpmDiscoveryGrantLengthSet
-**  ____________________________________________________________________________
-**
-**  DESCRIPTION: The function set discovery grant length
-**
-**  PARAMETERS:  MV_U32 grantLength
-**               MV_U32 grantLengthMultiTq
-**
-**  OUTPUTS:     None
-**
-**  RETURNS:     MV_OK or MV_ERROR
-**
-*******************************************************************************/
-MV_STATUS mvOnuEponMacGpmDiscoveryGrantLengthSet(MV_U32 grantLength, MV_U32 grantLengthMultiTq)
-{
-	MV_STATUS status;
-	MV_U32 discoveryGrantLength;
-
-	discoveryGrantLength = ((grantLengthMultiTq & 0x0FFF) << 16) |
-			       (grantLength  & 0x0FFF);
-
-	status = asicOntGlbRegWrite(mvAsicReg_EPON_GPM_DISCOVERY_GRANT_LENGTH, discoveryGrantLength, 0);
-
-	return status;
-}
-
-#else /* Z2,A0 or later */
 /*******************************************************************************
 **
 **  mvOnuEponMacGpmDiscoveryGrantLengthSet
@@ -7173,8 +7140,6 @@ MV_STATUS mvOnuEponMacGpmDiscoveryGrantLengthSet(MV_U32 grantLength,
 	return status;
 }
 
-#endif /* Z2,A0 or later */
-
 /*******************************************************************************
 **
 **  mvOnuEponMacGpmRxSyncGet
@@ -7577,38 +7542,6 @@ MV_STATUS mvOnuEponMacTxmOverheadGet(MV_U32 *overhead)
 	return status;
 }
 
-#ifdef PON_Z1
-/*******************************************************************************
-**
-**  mvOnuEponMacTxmConfigSet
-**  ____________________________________________________________________________
-**
-**  DESCRIPTION: The function set TX configuration
-**
-**  PARAMETERS:  MV_U32 mode
-**               MV_U32 alignment
-**               MV_U32 priority
-**
-**  OUTPUTS:     None
-**
-**  RETURNS:     MV_OK or MV_ERROR
-**
-*******************************************************************************/
-MV_STATUS mvOnuEponMacTxmConfigSet(MV_U32 mode, MV_U32 alignment, MV_U32 priority)
-{
-	MV_STATUS status;
-	MV_U32 config;
-
-	config =      ((mode & 0x0003) << 3) |
-		 ((alignment & 0x0003) << 1) |
-		 (priority & 0x0001);
-
-	status = asicOntGlbRegWrite(mvAsicReg_EPON_TXM_CONFIGURATION, config, 0);
-
-	return status;
-}
-
-#else /* Z2,A0 or later */
 /*******************************************************************************
 **
 **  mvOnuEponMacTxmConfigSet
@@ -7648,8 +7581,6 @@ MV_STATUS mvOnuEponMacTxmConfigSet(MV_U32 tFec1Cfg, MV_U32 tFec2Cfg, MV_U32 ctrl
 	return status;
 }
 
-#endif /* Z2,A0 or later */
-
 /*******************************************************************************
 **
 **  mvOnuEponMacTxmPowerUpIndSet
@@ -7715,35 +7646,6 @@ MV_STATUS mvOnuEponMacTxmLlidSet(MV_U32 llid, MV_U32 macId)
 	return status;
 }
 
-#ifdef PON_Z1
-/*******************************************************************************
-**
-**  mvOnuEponMacTxmCppReportConfig
-**  ____________________________________________________________________________
-**
-**  DESCRIPTION: The function set TX CPP Report configuration
-**
-**  PARAMETERS:  MV_U32 config
-**               MV_U32 macId
-**
-**  OUTPUTS:     None
-**
-**  RETURNS:     MV_OK or MV_ERROR
-**
-*******************************************************************************/
-MV_STATUS mvOnuEponMacTxmCppReportConfig(MV_U32 config, MV_U32 macId)
-{
-	MV_STATUS status;
-
-	if (macId >= EPON_MAX_MAC_NUM)
-		return MV_ERROR;
-
-	status = asicOntGlbRegWrite(mvAsicReg_EPON_TXM_CPP_RPRT_CONFIG, config, macId);
-
-	return status;
-}
-
-#else /* Z2,A0 or later */
 /*******************************************************************************
 **
 **  mvOnuEponMacTxmCppReportConfig
@@ -7780,8 +7682,6 @@ MV_STATUS mvOnuEponMacTxmCppReportConfig(MV_U32 queueReportQ2, MV_U32 reportBitm
 	return status;
 }
 
-#endif /* Z2,A0 or later */
-
 /*******************************************************************************
 **
 **  mvOnuEponMacTxmCppReportBitMap
@@ -8617,31 +8517,6 @@ MV_STATUS mvOnuEponMacDdmDelaySet(MV_U32 delay)
 	return status;
 }
 
-#ifdef PON_Z1
-/*******************************************************************************
-**
-**  mvOnuEponMacDdmTxPolaritySet
-**  ____________________________________________________________________________
-**
-**  DESCRIPTION: The function set DDM polarity
-**
-**  PARAMETERS:  MV_U32 polarity
-**
-**  OUTPUTS:     None
-**
-**  RETURNS:     MV_OK or MV_ERROR
-**
-*******************************************************************************/
-MV_STATUS mvOnuEponMacDdmTxPolaritySet(MV_U32 polarity)
-{
-	MV_STATUS status;
-
-	status = asicOntGlbRegWrite(mvAsicReg_EPON_DDM_TX_POLARITY, polarity, 0);
-
-	return status;
-}
-
-#else /* Z2,A0 or later */
 /*******************************************************************************
 **
 **  mvOnuEponMacDdmTxPolaritySet
@@ -8677,8 +8552,6 @@ MV_STATUS mvOnuEponMacDdmTxPolaritySet(MV_U32 txEnable,
 	return asicOntGlbRegWrite(mvAsicReg_EPON_DDM_TX_POLARITY, config, 0);
 }
 
-#endif /* Z2,A0 or later */
-
 /* ========================================================================== */
 /*                        Statistics Functions Section                        */
 /* ========================================================================== */
diff --git a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h
index 9597566..93ec25c 100755
--- a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h
+++ b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuMac.h
@@ -637,7 +637,6 @@ MV_STATUS mvOnuEponMacGenSglDebounceEnable(MV_U32 enable);
 MV_STATUS mvOnuEponMacGenChurningKeySet(MV_U32 key);
 MV_STATUS mvOnuEponMacGenOpcodeSet(MV_U32 opcodeType, MV_U32 value, MV_U32 index,
 				   MV_U32 timestamp, MV_U32 valid);
-#ifndef PON_Z1
 MV_STATUS mvOnuEponMacGenTimestampConfig(MV_U32 gpmAddSyncTimeToTimestamp, MV_U32 gpmAimestampOffset,
 					 MV_U32 txmAddSyncTimeToTimestamp, MV_U32 txmUseTimestampImage,
 					 MV_U32 txmTimestampOffset);
@@ -647,7 +646,6 @@ MV_STATUS mvOnuEponMacGenRxTimestampConfigGet(MV_U32 *rxpTimestampSelect, MV_U32
 					      MV_U32 *rxpTimestampOffset);
 MV_STATUS mvOnuEponMacGenRegPacketPaddingSet(MV_U32 regAckPadding, MV_U32 regReqPadding);
 MV_STATUS mvOnuEponMacGenRegPacketPaddingGet(MV_U32 *regAckPadding, MV_U32 *regReqPadding);
-#endif /* PON_Z1 */
 MV_STATUS mvOnuEponMacGenDriftThresholdSet(MV_U32 threshold);
 MV_STATUS mvOnuEponMacGenTimeStampForIntrSet(MV_U32 timestamp);
 MV_STATUS mvOnuEponMacGenTimeStampForIntrGet(MV_U32 *timestamp);
@@ -719,11 +717,7 @@ MV_STATUS mvOnuEponMacRxpDataFifoThresholdGet(MV_U32 *threshold);
 /* ========================================================================== */
 MV_STATUS mvOnuEponMacGpmMacFutureGrantTimeSet(MV_U32 grant);
 MV_STATUS mvOnuEponMacGpmMinProcessingTimeSet(MV_U32 processingTime, MV_U32 effectiveLength);
-#ifdef PON_Z1
-MV_STATUS mvOnuEponMacGpmDiscoveryGrantLengthSet(MV_U32 grantLength, MV_U32 grantLengthMultiTq);
-#else /* Z2,A0 or later */
 MV_STATUS mvOnuEponMacGpmDiscoveryGrantLengthSet(MV_U32 grantLength, MV_U32 addOffsetForCalc, MV_U32 grantLengthMultiTq);
-#endif /* Z2,A0 or later */
 MV_STATUS mvOnuEponMacGpmRxSyncGet(MV_U32 *syncTime, MV_U32 *syncTimeUpdateInd);
 MV_STATUS mvOnuEponMacGpmGrantValidCounterGet(MV_U32 *counter, MV_U32 macId);
 MV_STATUS mvOnuEponMacGpmGrantMaxFutureTimeErrorCounterGet(MV_U32 *counter, MV_U32 macId);
@@ -743,24 +737,16 @@ MV_STATUS mvOnuEponMacGpmOpcBackToBackCounterGet(MV_U32 *counter, MV_U32 macId);
 /* ========================================================================== */
 MV_STATUS mvOnuEponMacTxmOverheadSet(MV_U32 overhead);
 MV_STATUS mvOnuEponMacTxmOverheadGet(MV_U32 *overhead);
-#ifdef PON_Z1
-MV_STATUS mvOnuEponMacTxmConfigSet(MV_U32 mode, MV_U32 alignment, MV_U32 priority);
-#else /* Z2,A0 or later */
 MV_STATUS mvOnuEponMacTxmConfigSet(MV_U32 tFec1Cfg, MV_U32 tFec2Cfg, MV_U32 ctrlFifoDisFcs,
 				   MV_U32 maskGmiiSignal, MV_U32 blockDataFromDataPath,
 				   MV_U32 addIpgToLenCalc, MV_U32 mode, MV_U32 alignment,
 				   MV_U32 priority);
-#endif /* Z2,A0 or later */
 MV_STATUS mvOnuEponMacTxmPowerUpIndSet(MV_U32 time);
 MV_STATUS mvOnuEponMacTxmPowerUpIndGet(MV_U32 *time);
 MV_STATUS mvOnuEponMacTxmLlidSet(MV_U32 llid, MV_U32 macId);
-#ifdef PON_Z1
-MV_STATUS mvOnuEponMacTxmCppReportConfig(MV_U32 config, MV_U32 macId);
-#else /* Z2,A0 or later */
 MV_STATUS mvOnuEponMacTxmCppReportConfig(MV_U32 queueReportQ2, MV_U32 reportBitmapQ2,
 					 MV_U32 queueReport, MV_U32 queueSet,
 					 MV_U32 reportBitmap, MV_U32 macId);
-#endif /* Z2,A0 or later */
 MV_STATUS mvOnuEponMacTxmCppReportBitMap(MV_U32 bitMap, MV_U32 macId);
 MV_STATUS mvOnuEponMacTxmCppReportBitMapGet(MV_U32 *bitMap, MV_U32 macId);
 MV_STATUS mvOnuEponMacTxmCppReportQueueSet(MV_U32 queueSet, MV_U32 macId);
@@ -790,12 +776,8 @@ MV_STATUS mvOnuEponMacPcsFrameSizeLimitsGet(MV_U32 *size, MV_U32 *latency);
 /*                        DDM Functions Section                               */
 /* ========================================================================== */
 MV_STATUS mvOnuEponMacDdmDelaySet(MV_U32 delay);
-#ifdef PON_Z1
-MV_STATUS mvOnuEponMacDdmTxPolaritySet(MV_U32 polarity);
-#else /* Z2,A0 or later */
 MV_STATUS mvOnuEponMacDdmTxPolaritySet(MV_U32 txEnable, MV_U32 txPolarity, MV_U32 serdesPolarity,
 				       MV_U32 xvrPolarity, MV_U32 burstEnable);
-#endif /* Z2,A0 or later */
 /* ========================================================================== */
 /*                        Statistics Functions Section                        */
 /* ========================================================================== */
diff --git a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c
index b31b941..24ec6e7 100755
--- a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c
+++ b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.c
@@ -449,14 +449,10 @@ S_asicGlobalRegDb asicGlbDb[] =
 	[mvAsicReg_EPON_GEN_SYNC_TIME]                    =  { mvAsicReg_EPON_GEN_SYNC_TIME,                    MV_ASIC_ONT_GLB_ADDR + 0x0424,   0x0424,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "Sync Time"},
 	[mvAsicReg_EPON_GEN_BROADCAST_ADDR_LOW]           =  { mvAsicReg_EPON_GEN_BROADCAST_ADDR_LOW,           MV_ASIC_ONT_GLB_ADDR + 0x0428,   0x0428,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "Broadcast Address Low"},
 	[mvAsicReg_EPON_GEN_BROADCAST_ADDR_HIGH]          =  { mvAsicReg_EPON_GEN_BROADCAST_ADDR_HIGH,          MV_ASIC_ONT_GLB_ADDR + 0x042C,   0x042C,   asicRW,     0x0000FFFF,     0,      0,     0,      0,     "Broadcast Address High"},
-#ifdef PON_Z1
-	[mvAsicReg_EPON_GEN_CONFIGURATION]                =  { mvAsicReg_EPON_GEN_CONFIGURATION,                MV_ASIC_ONT_GLB_ADDR + 0x0430,   0x0430,   asicRW,     0x00000073,     0,      0,     0,      0,     "Gen Configuration"},
-#else  /* PON_A0 */
 	[mvAsicReg_EPON_GEN_CONFIGURATION]                =  { mvAsicReg_EPON_GEN_CONFIGURATION,                MV_ASIC_ONT_GLB_ADDR + 0x0430,   0x0430,   asicRW,     0x0000FF73,     0,      0,     0,      0,     "Gen Configuration"},
 	[mvAsicReg_EPON_GEN_CONFIGURATION_AUTO_REPORT]    =  { mvAsicReg_EPON_GEN_CONFIGURATION_AUTO_REPORT,    MV_ASIC_ONT_GLB_ADDR + 0x0430,   0x0430,   asicRW,     0x00000001,     4,      0,     0,      0,     "Gen Configuration Auto Report"},
 	[mvAsicReg_EPON_GEN_CONFIGURATION_AUTO_ACK]       =  { mvAsicReg_EPON_GEN_CONFIGURATION_AUTO_ACK,       MV_ASIC_ONT_GLB_ADDR + 0x0430,   0x0430,   asicRW,     0x00000001,     5,      0,     0,      0,     "Gen Configuration Auto Ack"},
 	[mvAsicReg_EPON_GEN_CONFIGURATION_AUTO_REQUEST]   =  { mvAsicReg_EPON_GEN_CONFIGURATION_AUTO_REQUEST,   MV_ASIC_ONT_GLB_ADDR + 0x0430,   0x0430,   asicRW,     0x00000001,     6,      0,     0,      0,     "Gen Configuration Auto Request"},
-#endif
 	[mvAsicReg_EPON_GEN_SLD]                          =  { mvAsicReg_EPON_GEN_SLD,                          MV_ASIC_ONT_GLB_ADDR + 0x0434,   0x0434,   asicRW,     0x000000FF,     0,      0,     0,      0,     "Sld"},
 	[mvAsicReg_EPON_GEN_MAC_CONTROL_TYPE]             =  { mvAsicReg_EPON_GEN_MAC_CONTROL_TYPE,             MV_ASIC_ONT_GLB_ADDR + 0x0438,   0x0438,   asicRW,     0x0000FFFF,     0,      0,     0,      0,     "Mac Control type"},
 	[mvAsicReg_EPON_GEN_LOCAL_TIMESTAMP]              =  { mvAsicReg_EPON_GEN_LOCAL_TIMESTAMP,              MV_ASIC_ONT_GLB_ADDR + 0x043C,   0x043C,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "Local TimeStamp"},
@@ -473,19 +469,12 @@ S_asicGlobalRegDb asicGlbDb[] =
 	[mvAsicReg_EPON_GEN_DRIFT_THRESHOLD]              =  { mvAsicReg_EPON_GEN_DRIFT_THRESHOLD,              MV_ASIC_ONT_GLB_ADDR + 0x0470,   0x0470,   asicRW,     0x0000FFFF,     0,      0,     0,      0,     "Drift Threshold"},
 	[mvAsicReg_EPON_GEN_TIMESTAMP_VAL_FOR_INTR]       =  { mvAsicReg_EPON_GEN_TIMESTAMP_VAL_FOR_INTR,       MV_ASIC_ONT_GLB_ADDR + 0x0474,   0x0474,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "Timestamp valuer for interrupt"},
 	[mvAsicReg_EPON_GEN_ADDITIONAL_OPCODE3]           =  { mvAsicReg_EPON_GEN_ADDITIONAL_OPCODE3,           MV_ASIC_ONT_GLB_ADDR + 0x0478,   0x0478,   asicRW,     0x001FFFFF,     0,      0,     0,      0,     "Additional Opcode 03"},
-#ifdef PON_A0
 	[mvAsicReg_EPON_GEN_LLID_CRC_CONFIG]              =  { mvAsicReg_EPON_GEN_LLID_CRC_CONFIG,              MV_ASIC_ONT_GLB_ADDR + 0x047C,   0x047C,   asicRW,     0x000003FF,     0,      0,     0,      0,     "LLID configuration"},
 	[mvAsicReg_EPON_GEN_TIMESTAMP_CONFIG]             =  { mvAsicReg_EPON_GEN_TIMESTAMP_CONFIG,             MV_ASIC_ONT_GLB_ADDR + 0x0480,   0x0480,   asicRW,     0x87FFC7FF,     0,      0,     0,      0,     "Timestamp configuration"},
 	[mvAsicReg_EPON_GEN_ONT_RX_TIMESTAMP_CONFIG]      =  { mvAsicReg_EPON_GEN_ONT_RX_TIMESTAMP_CONFIG,      MV_ASIC_ONT_GLB_ADDR + 0x0484,   0x0484,   asicRW,     0x00008FFF,     0,      0,     0,      0,     "ONT Rx Timestamp configuration"},
 	[mvAsicReg_EPON_GEN_ONT_REGISTER_PACKET_PADDING]  =  { mvAsicReg_EPON_GEN_ONT_REGISTER_PACKET_PADDING,  MV_ASIC_ONT_GLB_ADDR + 0x0488,   0x0488,   asicRW,     0x0000FFFF,     0,      0,     0,      0,     "ONT Register packet pading"},
-#endif
-#ifdef PON_Z1
-	[mvAsicReg_EPON_GEN_MAC_ADDR_LOW]                 =  { mvAsicReg_EPON_GEN_MAC_ADDR_LOW,                 MV_ASIC_ONT_GLB_ADDR + 0x0440,   0x0440,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "MAC address low part"},
-	[mvAsicReg_EPON_GEN_MAC_ADDR_HIGH]                =  { mvAsicReg_EPON_GEN_MAC_ADDR_HIGH,                MV_ASIC_ONT_GLB_ADDR + 0x0444,   0x0444,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "MAC address high part"},
-#else /* PON_A0 */
 	[mvAsicReg_EPON_GEN_MAC_ADDR_LOW]                 =  { mvAsicReg_EPON_GEN_MAC_ADDR_LOW,                 MV_ASIC_ONT_GLB_ADDR + 0x04A0,   0x04A0,   asicRW,     0xFFFFFFFF,     0,      8,     1,      0,     "MAC address low part"},
 	[mvAsicReg_EPON_GEN_MAC_ADDR_HIGH]                =  { mvAsicReg_EPON_GEN_MAC_ADDR_HIGH,                MV_ASIC_ONT_GLB_ADDR + 0x04C8,   0x04C8,   asicRW,     0xFFFFFFFF,     0,      8,     1,      0,     "MAC address high part"},
-#endif
 	[mvAsicReg_EPON_GEN_UTM_TC_PERIOD]                =  { mvAsicReg_EPON_GEN_UTM_TC_PERIOD,                MV_ASIC_ONT_GLB_ADDR + 0x0720,   0x0720,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "UTM TC Period"},
 	[mvAsicReg_EPON_GEN_UTM_TC_PERIOD_VALID]          =  { mvAsicReg_EPON_GEN_UTM_TC_PERIOD_VALID,          MV_ASIC_ONT_GLB_ADDR + 0x0724,   0x0724,   asicRW,     0x00000001,     0,      0,     0,      0,     "UTM TC Period valid"},
 	[mvAsicReg_EPON_GEN_GEM_IPG_VAL]                  =  { mvAsicReg_EPON_GEN_GEM_IPG_VAL,                  MV_ASIC_ONT_GLB_ADDR + 0x0728,   0x0728,   asicRW,     0x000000FF,     0,      0,     0,      0,     "IPG Value"},
@@ -519,13 +508,8 @@ S_asicGlobalRegDb asicGlbDb[] =
 	[mvAsicReg_EPON_RXP_LLT_LLID_DATA_INDEX]          =  { mvAsicReg_EPON_RXP_LLT_LLID_DATA_INDEX,          MV_ASIC_ONT_GLB_ADDR + 0x081C,   0x081C,   asicRW,     0x0000000F,    15,     10,     1,      0,     "Rxp LLID data index"},
 	[mvAsicReg_EPON_RXP_LLT_LLID_DATA_VALID]          =  { mvAsicReg_EPON_RXP_LLT_LLID_DATA_VALID,          MV_ASIC_ONT_GLB_ADDR + 0x081C,   0x081C,   asicRW,     0x00000001,    19,     10,     1,      0,     "Rxp LLID data valid"},
 	[mvAsicReg_EPON_RXP_ENCRYPTION_CONFIG]            =  { mvAsicReg_EPON_RXP_ENCRYPTION_CONFIG,            MV_ASIC_ONT_GLB_ADDR + 0x0844,   0x0844,   asicRW,     0x00000031,     0,      0,     0,      0,     "Rxp Enctyption Config"},
-#ifdef PON_Z1
-	[mvAsicReg_EPON_RXP_ENCRYPTION_KEY0]              =  { mvAsicReg_EPON_RXP_ENCRYPTION_KEY0,              MV_ASIC_ONT_GLB_ADDR + 0x0848,   0x0848,   asicRW,     0x00FFFFFF,     0,      0,     0,      0,     "Rxp Enctyption Key 0"},
-	[mvAsicReg_EPON_RXP_ENCRYPTION_KEY1]              =  { mvAsicReg_EPON_RXP_ENCRYPTION_KEY1,              MV_ASIC_ONT_GLB_ADDR + 0x084C,   0x084C,   asicRW,     0x00FFFFFF,     0,      0,     0,      0,     "Rxp Enctyption Key 1"},
-#else  /* PON_A0 */
 	[mvAsicReg_EPON_RXP_ENCRYPTION_KEY0]              =  { mvAsicReg_EPON_RXP_ENCRYPTION_KEY0,              MV_ASIC_ONT_GLB_ADDR + 0x0850,   0x0850,   asicRW,     0x00FFFFFF,     0,      8,     1,      0,     "Rxp Enctyption Key 0"},
 	[mvAsicReg_EPON_RXP_ENCRYPTION_KEY1]              =  { mvAsicReg_EPON_RXP_ENCRYPTION_KEY1,              MV_ASIC_ONT_GLB_ADDR + 0x0878,   0x0878,   asicRW,     0x00FFFFFF,     0,      8,     1,      0,     "Rxp Enctyption Key 1"},
-#endif
 	[mvAsicReg_EPON_RXP_DATA_FIFO_THRESH]             =  { mvAsicReg_EPON_RXP_DATA_FIFO_THRESH,             MV_ASIC_ONT_GLB_ADDR + 0x08C0,   0x08C0,   asicRW,     0x00000FFF,     0,      8,     1,      0,     "Rxp FIFO Threshold"},
 
 	/* =========================== */
@@ -555,30 +539,11 @@ S_asicGlobalRegDb asicGlbDb[] =
 	/* =========================== */
 	/*  EPON TXM Registers         */
 	/* =========================== */
-#ifdef PON_Z1
-	[mvAsicReg_EPON_TXM_DEFAULT_OVERHEAD]             =  { mvAsicReg_EPON_TXM_DEFAULT_OVERHEAD,             MV_ASIC_ONT_GLB_ADDR + 0x1010,   0x1010,   asicRW,     0x000000FF,     0,      0,     0,      0,     "Default overhead"},
-	[mvAsicReg_EPON_TXM_CONFIGURATION]                =  { mvAsicReg_EPON_TXM_CONFIGURATION,                MV_ASIC_ONT_GLB_ADDR + 0x1018,   0x1018,   asicRW,     0x00000007,     0,      0,     0,      0,     "Tx Configuration"},
-	[mvAsicReg_EPON_TXM_TX_LLID]                      =  { mvAsicReg_EPON_TXM_TX_LLID,                      MV_ASIC_ONT_GLB_ADDR + 0x1014,   0x1014,   asicRW,     0x00007FFF,     0,      0,     0,      0,     "Tx LLID"},
-#else /* PON_A0 */
 	[mvAsicReg_EPON_TXM_DEFAULT_OVERHEAD]             =  { mvAsicReg_EPON_TXM_DEFAULT_OVERHEAD,             MV_ASIC_ONT_GLB_ADDR + 0x1010,   0x1010,   asicRW,     0x0000FFFF,     0,      0,     0,      0,     "Default overhead"},
 	[mvAsicReg_EPON_TXM_CONFIGURATION]                =  { mvAsicReg_EPON_TXM_CONFIGURATION,                MV_ASIC_ONT_GLB_ADDR + 0x1018,   0x1018,   asicRW,     0x0000FFFF,     0,      0,     0,      0,     "Tx Configuration"},
 	[mvAsicReg_EPON_TXM_POWER_UP]                     =  { mvAsicReg_EPON_TXM_POWER_UP,                     MV_ASIC_ONT_GLB_ADDR + 0x1020,   0x1020,   asicRW,     0x00001FFF,     0,      0,     0,      0,     "Tx MUX Power UP"},
 	[mvAsicReg_EPON_TXM_TX_LLID]                      =  { mvAsicReg_EPON_TXM_TX_LLID,                      MV_ASIC_ONT_GLB_ADDR + 0x1050,   0x1050,   asicRW,     0x00007FFF,     0,      8,     1,      0,     "Tx LLID"},
-#endif
-#ifdef PON_Z1
-	[mvAsicReg_EPON_TXM_CPP_RPRT_CONFIG]              =  { mvAsicReg_EPON_TXM_CPP_RPRT_CONFIG,              MV_ASIC_ONT_GLB_ADDR + 0x1078,   0x1078,   asicRW,     0x000003FF,     0,      8,     1,      0,     "Cpp report configuration"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_BIT_MAP]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_BIT_MAP,             MV_ASIC_ONT_GLB_ADDR + 0x1098,   0x1098,   asicRW,     0x000000FF,     0,      8,     1,      0,     "Cpp report bit map"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_SET]           =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_SET,           MV_ASIC_ONT_GLB_ADDR + 0x10B8,   0x10B8,   asicRW,     0x0000003F,     0,      8,     1,      0,     "Cpp report queue sets"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_0]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_0,             MV_ASIC_ONT_GLB_ADDR + 0x10D8,   0x10D8,   asicRW,     0x0000FFFF,     0,      8,     1,      0,     "Cpp report queue0"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_1]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_1,             MV_ASIC_ONT_GLB_ADDR + 0x10F8,   0x10F8,   asicRW,     0x0000FFFF,     0,      8,     1,      0,     "Cpp report queue1"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_2]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_2,             MV_ASIC_ONT_GLB_ADDR + 0x1118,   0x1118,   asicRW,     0x0000FFFF,     0,      8,     1,      0,     "Cpp report queue2"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_3]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_3,             MV_ASIC_ONT_GLB_ADDR + 0x1138,   0x1138,   asicRW,     0x0000FFFF,     0,      8,     1,      0,     "Cpp report queue3"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_4]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_4,             MV_ASIC_ONT_GLB_ADDR + 0x1158,   0x1158,   asicRW,     0x0000FFFF,     0,      8,     1,      0,     "Cpp report queue4"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_5]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_5,             MV_ASIC_ONT_GLB_ADDR + 0x1178,   0x1178,   asicRW,     0x0000FFFF,     0,      8,     1,      0,     "Cpp report queue5"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_6]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_6,             MV_ASIC_ONT_GLB_ADDR + 0x1198,   0x1198,   asicRW,     0x0000FFFF,     0,      8,     1,      0,     "Cpp report queue6"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_7]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_7,             MV_ASIC_ONT_GLB_ADDR + 0x11B8,   0x11B8,   asicRW,     0x0000FFFF,     0,      8,     1,      0,     "Cpp report queue7"},
-	[mvAsicReg_EPON_TXM_CPP_RPRT_FEC_CONFIG]          =  { mvAsicReg_EPON_TXM_CPP_RPRT_FEC_CONFIG,          MV_ASIC_ONT_GLB_ADDR + 0x11DC,   0x11DC,   asicRW,     0x00FFFFFF,     0,      8,     1,      0,     "Cpp report fec config"},
-#else /* PON_A0 */
+
 	[mvAsicReg_EPON_TXM_CPP_RPRT_CONFIG]              =  { mvAsicReg_EPON_TXM_CPP_RPRT_CONFIG,              MV_ASIC_ONT_GLB_ADDR + 0x1078,   0x1078,   asicRW,     0x03FD03FF,     0,      8,     1,      0,     "Cpp report configuration"},
 	[mvAsicReg_EPON_TXM_CPP_RPRT_BIT_MAP]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_BIT_MAP,             MV_ASIC_ONT_GLB_ADDR + 0x1098,   0x1098,   asicRW,     0x0000FFFF,     0,      8,     1,      0,     "Cpp report bit map"},
 	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_SET]           =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_SET,           MV_ASIC_ONT_GLB_ADDR + 0x10B8,   0x10B8,   asicRW,     0x0000003F,     0,      8,     1,      0,     "Cpp report queue sets"},
@@ -591,8 +556,6 @@ S_asicGlobalRegDb asicGlbDb[] =
 	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_6]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_6,             MV_ASIC_ONT_GLB_ADDR + 0x1198,   0x1198,   asicRW,     0xFFFFFFFF,     0,      8,     1,      0,     "Cpp report queue6"},
 	[mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_7]             =  { mvAsicReg_EPON_TXM_CPP_RPRT_QUEUE_7,             MV_ASIC_ONT_GLB_ADDR + 0x11B8,   0x11B8,   asicRW,     0xFFFFFFFF,     0,      8,     1,      0,     "Cpp report queue7"},
 	[mvAsicReg_EPON_TXM_CPP_RPRT_FEC_CONFIG]          =  { mvAsicReg_EPON_TXM_CPP_RPRT_FEC_CONFIG,          MV_ASIC_ONT_GLB_ADDR + 0x11DC,   0x11DC,   asicRW,     0x00FFFFFF,     0,      8,     1,      0,     "Cpp report fec config"},
-#endif
-
 	[mvAsicReg_EPON_TXM_CPP_RPM_REPORT_CONFIG]        =  { mvAsicReg_EPON_TXM_CPP_RPM_REPORT_CONFIG,        MV_ASIC_ONT_GLB_ADDR + 0x11E0,   0x11E0,   asicRW,     0x0000001F,     0,      0,     0,      0,     "RPM Report config"},
 	[mvAsicReg_EPON_TXM_CPP_RPM_CTRL_FIFO_DBA]        =  { mvAsicReg_EPON_TXM_CPP_RPM_CTRL_FIFO_DBA,        MV_ASIC_ONT_GLB_ADDR + 0x11E0,   0x11E0,   asicRW,     0x000007FF,     5,      0,     0,      0,     "RPM contrl FIFO DBA config"},
 	[mvAsicReg_EPON_TXM_CPP_RPM_ADX_REPORT_TBL]       =  { mvAsicReg_EPON_TXM_CPP_RPM_ADX_REPORT_TBL,       MV_ASIC_ONT_GLB_ADDR + 0x11E4,   0x11E4,   asicRW,     0x003F00FF,     0,      0,     0,      0,     "RPM Index Report Table"},
@@ -623,20 +586,6 @@ S_asicGlobalRegDb asicGlbDb[] =
 	/* =========================== */
 	[mvAsicReg_EPON_DDM_DELAY_CONFIG]                 =  { mvAsicReg_EPON_DDM_DELAY_CONFIG,                 MV_ASIC_ONT_GLB_ADDR + 0x1814,   0x1814,   asicRW,     0x0000FFFF,     0,      0,     0,      0,     "DDM delay config"},
 	[mvAsicReg_EPON_DDM_TX_POLARITY]                  =  { mvAsicReg_EPON_DDM_TX_POLARITY,                  MV_ASIC_ONT_GLB_ADDR + 0x1818,   0x1818,   asicRW,     0x0000003F,     0,      0,     0,      0,     "DDM tx ploarity"},
-#ifdef PON_Z1
-	[mvAsicReg_EPON_STAT_RXP_FCS_ERROR_CNT]           =  { mvAsicReg_EPON_STAT_RXP_FCS_ERROR_CNT,           MV_ASIC_ONT_GLB_ADDR + 0x1828,   0x1828,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP fcs error counter"},
-	[mvAsicReg_EPON_STAT_RXP_SHORT_ERROR_CNT]         =  { mvAsicReg_EPON_STAT_RXP_SHORT_ERROR_CNT,         MV_ASIC_ONT_GLB_ADDR + 0x182c,   0x182c,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP short error counter"},
-	[mvAsicReg_EPON_STAT_RXP_LONG_ERROR_CNT]          =  { mvAsicReg_EPON_STAT_RXP_LONG_ERROR_CNT,          MV_ASIC_ONT_GLB_ADDR + 0x1830,   0x1830,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP long error counter"},
-	[mvAsicReg_EPON_STAT_RXP_DATA_FRAMES_CNT]         =  { mvAsicReg_EPON_STAT_RXP_DATA_FRAMES_CNT,         MV_ASIC_ONT_GLB_ADDR + 0x1834,   0x1834,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP data frame counter"},
-	[mvAsicReg_EPON_STAT_RXP_CTRL_FRAMES_CNT]         =  { mvAsicReg_EPON_STAT_RXP_CTRL_FRAMES_CNT,         MV_ASIC_ONT_GLB_ADDR + 0x1838,   0x1838,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP ctrl frame counter"},
-	[mvAsicReg_EPON_STAT_RXP_REPORT_FRAMES_CNT]       =  { mvAsicReg_EPON_STAT_RXP_REPORT_FRAMES_CNT,       MV_ASIC_ONT_GLB_ADDR + 0x183C,   0x183C,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP report frame counter"},
-	[mvAsicReg_EPON_STAT_RXP_GATE_FRAMES_CNT]         =  { mvAsicReg_EPON_STAT_RXP_GATE_FRAMES_CNT,         MV_ASIC_ONT_GLB_ADDR + 0x1840,   0x1840,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP gate frame counter"},
-	[mvAsicReg_EPON_STAT_TXP_CTRL_REG_REQ_FRAMES_CNT] =  { mvAsicReg_EPON_STAT_TXP_CTRL_REG_REQ_FRAMES_CNT, MV_ASIC_ONT_GLB_ADDR + 0x1844,   0x1844,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "TXP ctrl register req frame counter"},
-	[mvAsicReg_EPON_STAT_TXP_CTRL_REG_ACK_FRAMES_CNT] =  { mvAsicReg_EPON_STAT_TXP_CTRL_REG_ACK_FRAMES_CNT, MV_ASIC_ONT_GLB_ADDR + 0x1848,   0x1848,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "TXP ctrl register ack frame counter"},
-	[mvAsicReg_EPON_STAT_TXP_CTRL_REPORT_FRAMES_CNT]  =  { mvAsicReg_EPON_STAT_TXP_CTRL_REPORT_FRAMES_CNT,  MV_ASIC_ONT_GLB_ADDR + 0x184C,   0x184C,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "TXP ctrl report frame counter"},
-	[mvAsicReg_EPON_STAT_TXP_DATA_FRAMES_CNT]         =  { mvAsicReg_EPON_STAT_TXP_DATA_FRAMES_CNT,         MV_ASIC_ONT_GLB_ADDR + 0x1850,   0x1850,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "TXP data frame counter"},
-	[mvAsicReg_EPON_STAT_TXP_TX_ALLOWED_BYTE_CNT]     =  { mvAsicReg_EPON_STAT_TXP_TX_ALLOWED_BYTE_CNT,     MV_ASIC_ONT_GLB_ADDR + 0x1854,   0x1854,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "TXP tx allowed byte counter"},
-#else /* PON_A0 */
 	[mvAsicReg_EPON_STAT_RXP_FCS_ERROR_CNT]           =  { mvAsicReg_EPON_STAT_RXP_FCS_ERROR_CNT,           MV_ASIC_ONT_GLB_ADDR + 0x1828,   0x1828,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP fcs error counter"},
 	[mvAsicReg_EPON_STAT_RXP_SHORT_ERROR_CNT]         =  { mvAsicReg_EPON_STAT_RXP_SHORT_ERROR_CNT,         MV_ASIC_ONT_GLB_ADDR + 0x1848,   0x1848,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP short error counter"},
 	[mvAsicReg_EPON_STAT_RXP_LONG_ERROR_CNT]          =  { mvAsicReg_EPON_STAT_RXP_LONG_ERROR_CNT,          MV_ASIC_ONT_GLB_ADDR + 0x1868,   0x1868,   asicRW,     0xFFFFFFFF,     0,      0,     0,      0,     "RXP long error counter"},
@@ -649,7 +598,6 @@ S_asicGlobalRegDb asicGlbDb[] =
 	[mvAsicReg_EPON_STAT_TXP_CTRL_REPORT_FRAMES_CNT]  =  { mvAsicReg_EPON_STAT_TXP_CTRL_REPORT_FRAMES_CNT,  MV_ASIC_ONT_GLB_ADDR + 0x1948,   0x1948,   asicRW,     0xFFFFFFFF,     0,      8,     1,      0,     "TXP ctrl report frame counter"},
 	[mvAsicReg_EPON_STAT_TXP_DATA_FRAMES_CNT]         =  { mvAsicReg_EPON_STAT_TXP_DATA_FRAMES_CNT,         MV_ASIC_ONT_GLB_ADDR + 0x1968,   0x1968,   asicRW,     0xFFFFFFFF,     0,      8,     1,      0,     "TXP data frame counter"},
 	[mvAsicReg_EPON_STAT_TXP_TX_ALLOWED_BYTE_CNT]     =  { mvAsicReg_EPON_STAT_TXP_TX_ALLOWED_BYTE_CNT,     MV_ASIC_ONT_GLB_ADDR + 0x1988,   0x1988,   asicRW,     0xFFFFFFFF,     0,      8,     1,      0,     "TXP tx allowed byte counter"},
-#endif
 
 	/* ===================================== */
 	/*  EPON Control Packet queue Registers  */
diff --git a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h
index f32708b..4a2791f 100755
--- a/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pon/mvPonOnuRegs.h
@@ -444,12 +444,10 @@ typedef enum {
 	mvAsicReg_EPON_GEN_DRIFT_THRESHOLD                 = 348,
 	mvAsicReg_EPON_GEN_TIMESTAMP_VAL_FOR_INTR          = 349,
 	mvAsicReg_EPON_GEN_ADDITIONAL_OPCODE3              = 350,
-#ifndef PON_Z1
 	mvAsicReg_EPON_GEN_LLID_CRC_CONFIG                 = 351,
 	mvAsicReg_EPON_GEN_TIMESTAMP_CONFIG                = 352,
 	mvAsicReg_EPON_GEN_ONT_RX_TIMESTAMP_CONFIG         = 353,
 	mvAsicReg_EPON_GEN_ONT_REGISTER_PACKET_PADDING     = 354,
-#endif
 	mvAsicReg_EPON_GEN_MAC_ADDR_LOW                    = 355,
 	mvAsicReg_EPON_GEN_MAC_ADDR_HIGH                   = 356,
 	mvAsicReg_EPON_GEN_UTM_TC_PERIOD                   = 357,
-- 
1.7.5.4

