From 0abd8710ab6819e6874d26e862b022acf217cda3 Mon Sep 17 00:00:00 2001
From: Yoni Farhadian <yonif@marvell.com>
Date: Sun, 25 Aug 2013 15:43:32 +0300
Subject: [PATCH 0969/1825] fix: pp2: fix BM pool mask in RX descriptor

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 8d8e74cf4f3e6e43e19a2cfd02f2041d8b054648

	- Fix mask for BM pool ID in RX descriptor from 0x3 to 0x7
	- Verify pool ID in BM pool regs debug API

Change-Id: I438e2f9d4bb41442a1ac195e7e1e374f9dcf523f
Signed-off-by: Yoni Farhadian <yonif@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/3075
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Nadav Haklai <nadavh@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c |    3 +
 arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h |   70 ++++++++++----------
 2 files changed, 38 insertions(+), 35 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
index 58de497..adc8eb1 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeDebug.c
@@ -470,6 +470,9 @@ void      mvPp2FwdSwitchRegs(void)
 
 void mvPp2BmPoolRegs(int pool)
 {
+	if (mvPp2MaxCheck(pool, MV_BM_POOLS, "bm_pool"))
+		return;
+
 	mvOsPrintf("\n[BM pool registers: pool=%d]\n", pool);
 	mvPp2PrintReg(MV_BM_POOL_BASE_REG(pool), "MV_BM_POOL_BASE_REG");
 	mvPp2PrintReg(MV_BM_POOL_SIZE_REG(pool), "MV_BM_POOL_SIZE_REG");
diff --git a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
index 4bba2be..a1671c1 100644
--- a/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
+++ b/arch/arm/plat-armada/mv_hal/pp2/gbe/mvPp2GbeRegs.h
@@ -582,52 +582,52 @@ typedef struct pp2_rx_desc {
 #define PP2_RX_L3_OFFSET_OFFS			0
 #define PP2_RX_L3_OFFSET_MASK			(0x7F << PP2_RX_L3_OFFSET_OFFS)
 
-#define PP2_RX_IP_HLEN_OFFS                	8
-#define PP2_RX_IP_HLEN_MASK                	(0x1F << PP2_RX_IP_HLEN_OFFS)
+#define PP2_RX_IP_HLEN_OFFS			8
+#define PP2_RX_IP_HLEN_MASK			(0x1F << PP2_RX_IP_HLEN_OFFS)
 
-#define PP2_RX_ERR_CODE_OFFS               	13
-#define PP2_RX_ERR_CODE_MASK               	(3 << PP2_RX_ERR_CODE_OFFS)
-#define PP2_RX_ERR_CRC                     	(0 << PP2_RX_ERR_CODE_OFFS)
-#define PP2_RX_ERR_OVERRUN                 	(1 << PP2_RX_ERR_CODE_OFFS)
-#define PP2_RX_RESERVED                    	(2 << PP2_RX_ERR_CODE_OFFS)
-#define PP2_RX_ERR_RESOURCE                	(3 << PP2_RX_ERR_CODE_OFFS)
+#define PP2_RX_ERR_CODE_OFFS			13
+#define PP2_RX_ERR_CODE_MASK			(3 << PP2_RX_ERR_CODE_OFFS)
+#define PP2_RX_ERR_CRC				(0 << PP2_RX_ERR_CODE_OFFS)
+#define PP2_RX_ERR_OVERRUN			(1 << PP2_RX_ERR_CODE_OFFS)
+#define PP2_RX_RESERVED				(2 << PP2_RX_ERR_CODE_OFFS)
+#define PP2_RX_ERR_RESOURCE			(3 << PP2_RX_ERR_CODE_OFFS)
 
-#define PP2_RX_ES_BIT                      	15
-#define PP2_RX_ES_MASK                     	(1 << PP2_RX_ES_BIT)
+#define PP2_RX_ES_BIT				15
+#define PP2_RX_ES_MASK				(1 << PP2_RX_ES_BIT)
 
-#define PP2_RX_BM_POOL_ID_OFFS             	16
-#define PP2_RX_BM_POOL_ALL_MASK            	(0x3 << PP2_RX_BM_POOL_ID_OFFS)
-#define PP2_RX_BM_POOL_ID_MASK(pool)       	((pool) << PP2_RX_BM_POOL_ID_OFFS)
+#define PP2_RX_BM_POOL_ID_OFFS			16
+#define PP2_RX_BM_POOL_ALL_MASK			(0x7 << PP2_RX_BM_POOL_ID_OFFS)
+#define PP2_RX_BM_POOL_ID_MASK(pool)		((pool) << PP2_RX_BM_POOL_ID_OFFS)
 
-#define PP2_RX_HWF_SYNC_BIT                	21
-#define PP2_RX_HWF_SYNC_MASK               	(1 << PP2_RX_HWF_SYNC_BIT)
+#define PP2_RX_HWF_SYNC_BIT			21
+#define PP2_RX_HWF_SYNC_MASK			(1 << PP2_RX_HWF_SYNC_BIT)
 
-#define PP2_RX_L4_CHK_OK_BIT               	22
-#define PP2_RX_L4_CHK_OK_MASK              	(1 << PP2_RX_L4_CHK_OK_BIT)
+#define PP2_RX_L4_CHK_OK_BIT			22
+#define PP2_RX_L4_CHK_OK_MASK			(1 << PP2_RX_L4_CHK_OK_BIT)
 
-#define PP2_RX_IP_FRAG_BIT                 	23
-#define PP2_RX_IP_FRAG_MASK                	(1 << PP2_RX_IP_FRAG_BIT)
+#define PP2_RX_IP_FRAG_BIT			23
+#define PP2_RX_IP_FRAG_MASK			(1 << PP2_RX_IP_FRAG_BIT)
 
-#define PP2_RX_IP4_HEADER_ERR_BIT          	24
-#define PP2_RX_IP4_HEADER_ERR_MASK         	(1 << PP2_RX_IP4_HEADER_ERR_BIT)
+#define PP2_RX_IP4_HEADER_ERR_BIT		24
+#define PP2_RX_IP4_HEADER_ERR_MASK		(1 << PP2_RX_IP4_HEADER_ERR_BIT)
 
-#define PP2_RX_L4_OFFS                     	25
-#define PP2_RX_L4_MASK                     	(7 << PP2_RX_L4_OFFS)
+#define PP2_RX_L4_OFFS				25
+#define PP2_RX_L4_MASK				(7 << PP2_RX_L4_OFFS)
 /* Value 0 - N/A, 3-7 - User Defined */
-#define PP2_RX_L4_TCP                      	(1 << PP2_RX_L4_OFFS)
-#define PP2_RX_L4_UDP                      	(2 << PP2_RX_L4_OFFS)
+#define PP2_RX_L4_TCP				(1 << PP2_RX_L4_OFFS)
+#define PP2_RX_L4_UDP				(2 << PP2_RX_L4_OFFS)
 
-#define PP2_RX_L3_OFFS                     	28
-#define PP2_RX_L3_MASK                     	(7 << PP2_RX_L3_OFFS)
+#define PP2_RX_L3_OFFS				28
+#define PP2_RX_L3_MASK				(7 << PP2_RX_L3_OFFS)
 /* Value 0 - N/A, 6-7 - User Defined */
-#define PP2_RX_L3_IP4                		(1 << PP2_RX_L3_OFFS)
-#define PP2_RX_L3_IP4_OPT          	   	(2 << PP2_RX_L3_OFFS)
-#define PP2_RX_L3_IP4_OTHER                	(3 << PP2_RX_L3_OFFS)
-#define PP2_RX_L3_IP6                  		(4 << PP2_RX_L3_OFFS)
-#define PP2_RX_L3_IP6_EXT              		(5 << PP2_RX_L3_OFFS)
-
-#define PP2_RX_BUF_HDR_BIT                 	31
-#define PP2_RX_BUF_HDR_MASK                	(1 << PP2_RX_BUF_HDR_BIT)
+#define PP2_RX_L3_IP4				(1 << PP2_RX_L3_OFFS)
+#define PP2_RX_L3_IP4_OPT			(2 << PP2_RX_L3_OFFS)
+#define PP2_RX_L3_IP4_OTHER			(3 << PP2_RX_L3_OFFS)
+#define PP2_RX_L3_IP6				(4 << PP2_RX_L3_OFFS)
+#define PP2_RX_L3_IP6_EXT			(5 << PP2_RX_L3_OFFS)
+
+#define PP2_RX_BUF_HDR_BIT			31
+#define PP2_RX_BUF_HDR_MASK			(1 << PP2_RX_BUF_HDR_BIT)
 
 /* status field MACROs */
 #define PP2_RX_L3_IS_IP4(status)		(((status) & PP2_RX_L3_MASK) == PP2_RX_L3_IP4)
-- 
1.7.5.4

