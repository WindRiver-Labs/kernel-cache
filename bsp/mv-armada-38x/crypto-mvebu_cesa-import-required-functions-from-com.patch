From 81953888b331f0f245fc30cf2ed539802d15fb62 Mon Sep 17 00:00:00 2001
From: Nadav Haklai <nadavh@marvell.com>
Date: Wed, 12 Mar 2014 11:45:02 +0200
Subject: [PATCH 1456/1825] crypto: mvebu_cesa: import required functions from
 'common' directory

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit c718467a6685d9af402feba98e46bff0efe69f87

	- Due to requirement that each hal-based driver should use its own
	'common' folder some functions may be duplicated. This commit fixes that
	problem

Change-Id: I01b10f42714914fb5e646d29dac69f8d59859314
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
Signed-off-by: Nadav Haklai <nadavh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6351
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c |   27 ++++++++++++++++++++++++
 1 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c b/arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c
index 39c3eff..eef9aac 100644
--- a/arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c
+++ b/arch/arm/plat-armada/mv_hal/cesa/mvCesaDebug.c
@@ -72,6 +72,9 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "cesa/mvCesaRegs.h"
 #include "cesa/mvCesa.h"
 #include "cesa/AES/mvAes.h"
+#ifdef CONFIG_OF
+#include "cesa_if.h"
+#endif
 
 static const char *mvCesaDebugStateStr(MV_CESA_STATE state)
 {
@@ -188,7 +191,11 @@ void mvCesaDebugMbuf(const char *str, MV_CESA_MBUF *pMbuf, int offset, int size)
 			   frag, pMbuf->pFrags[frag].bufVirtPtr, pMbuf->pFrags[frag].bufSize);
 		if (size > 0) {
 			len = MV_MIN(pMbuf->pFrags[frag].bufSize, size);
+#ifdef CONFIG_OF
+			mv_debug_mem_dump(pMbuf->pFrags[frag].bufVirtPtr + fragOffset, len, 1);
+#else
 			mvDebugMemDump(pMbuf->pFrags[frag].bufVirtPtr + fragOffset, len, 1);
+#endif
 			size -= len;
 			fragOffset = 0;
 		}
@@ -353,13 +360,25 @@ void mvCesaDebugSramSA(MV_CESA_SRAM_SA *pSramSA, int mode)
 
 	if (mode != 0) {
 		mvOsPrintf("cryptoKey=%p, maxCryptoKey=%d bytes\n", pSramSA->cryptoKey, MV_CESA_MAX_CRYPTO_KEY_LENGTH);
+#ifdef CONFIG_OF
+		mv_debug_mem_dump(pSramSA->cryptoKey, MV_CESA_MAX_CRYPTO_KEY_LENGTH, 1);
+#else
 		mvDebugMemDump(pSramSA->cryptoKey, MV_CESA_MAX_CRYPTO_KEY_LENGTH, 1);
+#endif
 
 		mvOsPrintf("macInnerIV=%p, maxInnerIV=%d bytes\n", pSramSA->macInnerIV, MV_CESA_MAX_DIGEST_SIZE);
+#ifdef CONFIG_OF
+		mv_debug_mem_dump(pSramSA->macInnerIV, MV_CESA_MAX_DIGEST_SIZE, 1);
+#else
 		mvDebugMemDump(pSramSA->macInnerIV, MV_CESA_MAX_DIGEST_SIZE, 1);
+#endif
 
 		mvOsPrintf("macOuterIV=%p, maxOuterIV=%d bytes\n", pSramSA->macOuterIV, MV_CESA_MAX_DIGEST_SIZE);
+#ifdef CONFIG_OF
+		mv_debug_mem_dump(pSramSA->macOuterIV, MV_CESA_MAX_DIGEST_SIZE, 1);
+#else
 		mvDebugMemDump(pSramSA->macOuterIV, MV_CESA_MAX_DIGEST_SIZE, 1);
+#endif
 	}
 }
 
@@ -416,7 +435,11 @@ void mvCesaDebugSA(short sid, int mode)
 
 		mvOsPrintf("\n\t Sram buffer: size=%d, pVirt=%p\n", MV_CESA_MAX_BUF_SIZE, cesaSramVirtPtr[chan]->buf);
 		if (mode != 0)
+#ifdef CONFIG_OF
+			mv_debug_mem_dump(cesaSramVirtPtr[chan]->buf, 64, 1);
+#else
 			mvDebugMemDump(cesaSramVirtPtr[chan]->buf, 64, 1);
+#endif
 
 		mvOsPrintf("\n");
 		mvOsPrintf("\n\t Sram descriptor: size=%d, pVirt=%p\n", (int)sizeof(MV_CESA_DESC),
@@ -428,7 +451,11 @@ void mvCesaDebugSA(short sid, int mode)
 		mvOsPrintf("\n\t Sram IV: size=%d, pVirt=%p\n", MV_CESA_MAX_IV_LENGTH, &cesaSramVirtPtr[chan]->cryptoIV);
 		if (mode != 0) {
 			mvOsPrintf("\n");
+#ifdef CONFIG_OF
+			mv_debug_mem_dump(cesaSramVirtPtr[chan]->cryptoIV, MV_CESA_MAX_IV_LENGTH, 1);
+#else
 			mvDebugMemDump(cesaSramVirtPtr[chan]->cryptoIV, MV_CESA_MAX_IV_LENGTH, 1);
+#endif
 		}
 		mvOsPrintf("\n");
 		mvCesaDebugSramSA(&cesaSramVirtPtr[chan]->sramSA, 0);
-- 
1.7.5.4

