From 574d7ecf9e1bda36e622876d90f7d6477da39592 Mon Sep 17 00:00:00 2001
From: Ken Ma <make@marvell.com>
Date: Wed, 7 May 2014 09:18:43 +0800
Subject: [PATCH 1629/1825] fix: alp: tpm: add UNI&GEM explanation for
 "src_port_id" of tpm sysfs

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 58aff21bc3ae6399a1032fd48c112e53b799857a

	 add UNI&GEM explanation for "src_port_id" of tpm sysfs

Signed-off-by: Ken Ma <make@marvell.com>

Change-Id: Id4cc33ca8a33bc47be5656862bb366e212b39499
Signed-off-by: Ken Ma <make@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/7847
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hua Jing <jinghua@marvell.com>
Reviewed-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_tpm/src/sysfs/tpm_sysfs_api.c               |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/sysfs/tpm_sysfs_api.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/sysfs/tpm_sysfs_api.c
index 7b9f99b..4086495 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/sysfs/tpm_sysfs_api.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_tpm/src/sysfs/tpm_sysfs_api.c
@@ -1692,6 +1692,8 @@ int tpm_sfs_help_cls_rule_add(char *buf)
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_GMAC0), TPM_PP_GMAC0);
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_GMAC1), TPM_PP_GMAC1);
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_PMAC), TPM_PP_PMAC);
+	off += sprintf(buf+off, "\t\t%-19sbitmap  - if bitn is set 1, then UNI n is selected\n", "UNI");
+	off += sprintf(buf+off, "\t\t%-19sinteger - in [0..4095]\n", "GEM port");
 	off += sprintf(buf+off, "\trule_type                  (dec)valid from 0 to 16, rules with smaller rule_type gets higher priority, rule_type and caps in it should be set in TPM INIT\n");
 	off += sprintf(buf+off, "\tparse_rule_bm              (hex)Bitmap containing the significant flags for parsing fields of the packet:\n");
 	off += tpm_sfs_help_parse_rule_bm_print(buf, off);
@@ -1727,6 +1729,8 @@ int tpm_sfs_help_filter_rule_add(char *buf)
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_GMAC0), TPM_PP_GMAC0);
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_GMAC1), TPM_PP_GMAC1);
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_PMAC), TPM_PP_PMAC);
+	off += sprintf(buf+off, "\t\t%-19sbitmap  - if bitn is set 1, then UNI n is selected\n", "UNI");
+	off += sprintf(buf+off, "\t\t%-19sinteger - in [0..4095]\n", "GEM port");
 	off += sprintf(buf+off, "\trule_type                  (dec)valid from 0 to 16, rules with smaller rule_type gets higher priority, rule_type and caps in it should be set in TPM INIT\n");
 	off += sprintf(buf+off, "\tparse_rule_bm              (hex)Bitmap containing the significant flags for parsing fields of the packet:\n");
 	off += tpm_sfs_help_parse_rule_bm_print(buf, off);
@@ -1756,6 +1760,8 @@ int tpm_sys_help_exact_except_rule_add(char *buf)
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_GMAC0), TPM_PP_GMAC0);
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_GMAC1), TPM_PP_GMAC1);
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_PMAC), TPM_PP_PMAC);
+	off += sprintf(buf+off, "\t\t%-19sbitmap  - if bitn is set 1, then UNI n is selected\n", "UNI");
+	off += sprintf(buf+off, "\t\t%-19sinteger - in [0..4095]\n", "GEM port");
 	off += sprintf(buf+off, "\tparse_rule_bm   (hex)Bitmap containing the significant flags for parsing fields of the packet:\n");
 	off += tpm_sfs_help_parse_rule_bm_print(buf, off);
 	off += sprintf(buf+off, "\tkey_name        (str)Name of packet key data which has been defined by user [or %s]\n", key_empty_name);
@@ -1787,6 +1793,8 @@ int tpm_sys_help_exact_rule_add(char *buf)
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_GMAC0), TPM_PP_GMAC0);
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_GMAC1), TPM_PP_GMAC1);
 	off += sprintf(buf+off, "\t\t%-19s%#X\n", tpm_utils_pp_port_str_get(TPM_PP_PMAC), TPM_PP_PMAC);
+	off += sprintf(buf+off, "\t\t%-19sbitmap  - if bitn is set 1, then UNI n is selected\n", "UNI");
+	off += sprintf(buf+off, "\t\t%-19sinteger - in [0..4095]\n", "GEM port");
 	off += sprintf(buf+off, "\tip_version      (dec)IP version of the packet: 4 for IPv4; 6 for IPv6\n");
 	off += sprintf(buf+off, "\tkey_name        (str)Name of IPvX key data which has been defined by user\n");
 	off += sprintf(buf+off, "\tfrwd_name       (str)Name of pkt forwarding data which has been defined by user\n");
@@ -1908,6 +1916,8 @@ int tpm_sfs_help_mc_rule_add(char *buf)
 	off += sprintf(buf+off, "\t\tTPM_PP_GMAC0             %#.4X\n", TPM_PP_GMAC0);
 	off += sprintf(buf+off, "\t\tTPM_PP_GMAC1             %#.4X\n", TPM_PP_GMAC1);
 	off += sprintf(buf+off, "\t\tTPM_PP_PON               %#.4X\n", TPM_PP_PMAC);
+	off += sprintf(buf+off, "\t\t%-19sbitmap  - if bitn is set 1, then UNI n is selected\n", "UNI");
+	off += sprintf(buf+off, "\t\t%-19sinteger - in [0..4095]\n", "GEM port");
 	off += sprintf(buf+off, "\tmatch_bm                   (hex)Bitmap comibination of multicast:");
 	off += tpm_sfs_help_mc_match_bm_print(buf, off);
 	off += sprintf(buf+off, "\tkey_name                   (str)Name of Multicast key data which has been defined by user [or %s]\n", key_empty_name);
-- 
1.7.5.4

