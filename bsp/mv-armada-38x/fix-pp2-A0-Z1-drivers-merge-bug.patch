From d814e4c5bf2e8dcfc8ee7c8cb9e4789082ce9245 Mon Sep 17 00:00:00 2001
From: Uri Eliyahu <uriel@marvell.com>
Date: Wed, 4 Dec 2013 11:00:16 +0200
Subject: [PATCH 1183/1825] fix: pp2: A0-Z1 drivers merge bug

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 20651c098a937c04d148791c6190eb14641f701c

	- bug created in ppv2.1 (alp A0) and ppv2.0 (alp Z1) code merge
	- without this fix we cannot load linux via ppv2 ports
	- fix relevant for both Z1 and A0

Change-Id: Iae531842960724b90d69348b698f2d4e0e395d80
Signed-off-by: Uri Eliyahu <uriel@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/4583
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h      |   12 ++++++++----
 1 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
index c066d8a..8551e7a 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pp2/net_dev/mv_netdev.h
@@ -500,9 +500,13 @@ struct bm_pool {
 /* BM cookie (32 bits) definition */
 /* bits[0-7]   - Flags  */
 /*      bit0 - bm_cookie is invalid for SKB recycle */
-#define MV_ETH_BM_COOKIE_F_INVALID		0
+#define MV_ETH_BM_COOKIE_F_INVALID_BIT		0
+#define MV_ETH_BM_COOKIE_F_INVALID		(1 << 0)
+
 /*      bit7 - buffer is guaranteed */
-#define MV_ETH_BM_COOKIE_F_GRNTD_OFF		7
+#define MV_ETH_BM_COOKIE_F_GRNTD_BIT		7
+#define MV_ETH_BM_COOKIE_F_GRNTD		(1 << 7)
+
 /* bits[8-15]  - PoolId */
 #define MV_ETH_BM_COOKIE_POOL_OFFS		8
 /* bits[16-23] - Qset   */
@@ -512,7 +516,7 @@ struct bm_pool {
 
 static inline int mv_eth_bm_cookie_grntd_get(__u32 cookie)
 {
-	return (cookie >> MV_ETH_BM_COOKIE_F_GRNTD_OFF) & 0x1;
+	return (cookie & MV_ETH_BM_COOKIE_F_GRNTD) >> MV_ETH_BM_COOKIE_F_GRNTD_BIT;
 }
 
 static inline int mv_eth_bm_cookie_qset_get(__u32 cookie)
@@ -551,7 +555,7 @@ static inline __u32 mv_eth_bm_cookie_build(struct pp2_rx_desc *rx_desc)
 	return ((pool & 0xFF) << MV_ETH_BM_COOKIE_POOL_OFFS) |
 		((cpu & 0xFF) << MV_ETH_BM_COOKIE_CPU_OFFS) |
 		((qset & 0xFF) << MV_ETH_BM_COOKIE_QSET_OFFS) |
-		((grntd & 0x1) << MV_ETH_BM_COOKIE_F_GRNTD_OFF);
+		((grntd & 0x1) << MV_ETH_BM_COOKIE_F_GRNTD_BIT);
 
 }
 
-- 
1.7.5.4

