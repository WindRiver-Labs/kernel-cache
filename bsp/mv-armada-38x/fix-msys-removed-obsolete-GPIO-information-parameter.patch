From ad03c26ab76fd2bae9dce63ddcd987b1417b8344 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Thu, 10 Jul 2014 16:34:24 +0300
Subject: [PATCH 1791/1825] fix: msys: removed obsolete GPIO information
 parameters

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 56c5c0ab2ef0c82e1b4fa7c253690ac4230df510

        - Removed corresponding API's from mvBoardEnvLib.c
        - Removed unused MV_BOARD_GPP_INFO struct

Change-Id: Iafb29d8d8b7df3de2f013ba800a12132258a6594
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/9172
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../msys_family/boardEnv/mvBoardEnvSpec.c          |  124 +++++++++-----------
 1 files changed, 56 insertions(+), 68 deletions(-)

diff --git a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c
index fb14d3c..b966e36 100644
--- a/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-msys/msys_family/boardEnv/mvBoardEnvSpec.c
@@ -84,11 +84,11 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 MV_BOARD_TWSI_INFO	bobcat2_customer_board_0_InfoBoardTwsiDev[] = {
 /* {{MV_BOARD_DEV_CLASS	devClass, MV_U8	twsiDevAddr, MV_U8 twsiDevAddrType}} */
 	{BOARD_DEV_TWSI_PLD, 0x30, ADDR7_BIT},		/* Access to control PLD reg file */
-	{BOARD_DEV_TWSI_ZARLINK, 0x18, ADDR7_BIT},	/* Access to Zarlink */
+	{BOARD_DEV_TWSI_ZARLINK, 0x18, ADDR7_BIT},		/* Access to Zarlink */
 	{BOARD_DEV_TWSI_SATR, 0x4C, ADDR7_BIT},         /* SatR bios 0		*/
 	{BOARD_DEV_TWSI_SATR, 0x4D, ADDR7_BIT},         /* SatR bios 1		*/
-	{BOARD_DEV_TWSI_SATR, 0x4E, ADDR7_BIT},         /* SatR bios 2		*/
-	{BOARD_DEV_TWSI_SATR, 0x4F, ADDR7_BIT},         /* SatR bios 3		*/
+	{BOARD_DEV_TWSI_SATR, 0x4E, ADDR7_BIT},          /* SatR bios 2		*/
+	{BOARD_DEV_TWSI_SATR, 0x4F, ADDR7_BIT},          /* SatR bios 3		*/
 	{BOARD_DEV_TWSI_INIT_EPROM, 0x50, ADDR7_BIT},          /* Serial Ini EPROM	*/
 	{BOARD_DEV_TWSI_PCA9555_IO_EXPANDER, 0x20, ADDR7_BIT},          /* Qsgmii/sfp mux control PCA9555 IO expander */
 	{BOARD_DEV_TWSI_PCA9548_IO_MUX, 0x70, ADDR7_BIT},          /* PCA9548 I2C mux 0	*/
@@ -217,12 +217,6 @@ MV_BOARD_MODULE_TYPE_INFO alleycat3_customer_board_0_InfoBoardModTypeInfo[] = {
 	}
 };
 
-MV_BOARD_GPP_INFO alleycat3_customer_board_0_InfoBoardGppInfo[] = {
-	/* {{MV_BOARD_GPP_CLASS	devClass, MV_U8	gppPinNum}} */
-	{BOARD_GPP_USB_VBUS,    24} /* from MPP map */
-	/*{BOARD_GPP_RESET,       47},*/
-};
-
 MV_DEV_CS_INFO alleycat3_customer_board_0_InfoBoardDeCsInfo[] = {
 	/*{deviceCS, params, devType, devWidth, busWidth }*/
 #if defined(MV_INCLUDE_SPI)
@@ -246,34 +240,34 @@ MV_BOARD_MPP_INFO alleycat3_customer_board_0_InfoBoardMppConfigValue[] = {
 MV_BOARD_INFO alleycat3_customer_board_0_Info = {
 	.boardName			= "ALLEYCAT3-Customer-Board-0",
 	.numBoardMppTypeValue		= ARRSZ(alleycat3_customer_board_0_InfoBoardModTypeInfo),
-	.pBoardModTypeValue			= alleycat3_customer_board_0_InfoBoardModTypeInfo,
+	.pBoardModTypeValue		= alleycat3_customer_board_0_InfoBoardModTypeInfo,
 	.numBoardMppConfigValue		= ARRSZ(alleycat3_customer_board_0_InfoBoardMppConfigValue),
 	.pBoardMppConfigValue		= alleycat3_customer_board_0_InfoBoardMppConfigValue,
-	.intsGppMaskLow				= 0,
-	.intsGppMaskMid				= 0,
-	.intsGppMaskHigh			= 0,
-	.numBoardDeviceIf			= ARRSZ(alleycat3_customer_board_0_InfoBoardDeCsInfo),
-	.pDevCsInfo					= alleycat3_customer_board_0_InfoBoardDeCsInfo,
-	.numBoardTwsiDev			= ARRSZ(alleycat3_customer_board_0_InfoBoardTwsiDev),
-	.pBoardTwsiDev				= alleycat3_customer_board_0_InfoBoardTwsiDev,
-	.numBoardMacInfo			= ARRSZ(alleycat3_customer_board_0_InfoBoardMacInfo),
-	.pBoardMacInfo				= alleycat3_customer_board_0_InfoBoardMacInfo,
-	.numBoardGppInfo			= ARRSZ(alleycat3_customer_board_0_InfoBoardGppInfo),
-	.pBoardGppInfo				= alleycat3_customer_board_0_InfoBoardGppInfo,
-	.activeLedsNumber			= 0,
-	.pLedGppPin					= NULL,
-	.ledsPolarity				= 0,
+	.intsGppMaskLow			= 0,
+	.intsGppMaskMid			= 0,
+	.intsGppMaskHigh		= 0,
+	.numBoardDeviceIf		= ARRSZ(alleycat3_customer_board_0_InfoBoardDeCsInfo),
+	.pDevCsInfo			= alleycat3_customer_board_0_InfoBoardDeCsInfo,
+	.numBoardTwsiDev		= ARRSZ(alleycat3_customer_board_0_InfoBoardTwsiDev),
+	.pBoardTwsiDev			= alleycat3_customer_board_0_InfoBoardTwsiDev,
+	.numBoardMacInfo		= ARRSZ(alleycat3_customer_board_0_InfoBoardMacInfo),
+	.pBoardMacInfo			= alleycat3_customer_board_0_InfoBoardMacInfo,
+	.numBoardGppInfo		= 0,
+	.pBoardGppInfo			= NULL,
+	.activeLedsNumber		= 0,
+	.pLedGppPin			= NULL,
+	.ledsPolarity			= 0,
 
 	/* GPP values */
-	.gppOutEnValLow				= ALLEYCAT3_CUSTOMER_0_GPP_OUT_ENA_LOW,
-	.gppOutEnValMid				= ALLEYCAT3_CUSTOMER_0_GPP_OUT_ENA_MID,
-	.gppOutEnValHigh			= 0,
-	.gppOutValLow				= ALLEYCAT3_CUSTOMER_0_GPP_OUT_VAL_LOW,
-	.gppOutValMid				= ALLEYCAT3_CUSTOMER_0_GPP_OUT_VAL_MID,
-	.gppOutValHigh				= 0,
-	.gppPolarityValLow			= ALLEYCAT3_CUSTOMER_0_GPP_POL_LOW,
-	.gppPolarityValMid			= ALLEYCAT3_CUSTOMER_0_GPP_POL_MID,
-	.gppPolarityValHigh			= 0,
+	.gppOutEnValLow			= ALLEYCAT3_CUSTOMER_0_GPP_OUT_ENA_LOW,
+	.gppOutEnValMid			= ALLEYCAT3_CUSTOMER_0_GPP_OUT_ENA_MID,
+	.gppOutEnValHigh		= 0,
+	.gppOutValLow			= ALLEYCAT3_CUSTOMER_0_GPP_OUT_VAL_LOW,
+	.gppOutValMid			= ALLEYCAT3_CUSTOMER_0_GPP_OUT_VAL_MID,
+	.gppOutValHigh			= 0,
+	.gppPolarityValLow		= ALLEYCAT3_CUSTOMER_0_GPP_POL_LOW,
+	.gppPolarityValMid		= ALLEYCAT3_CUSTOMER_0_GPP_POL_MID,
+	.gppPolarityValHigh		= 0,
 
 	/* External Switch Configuration */
 	.pSwitchInfo = NULL,
@@ -282,9 +276,9 @@ MV_BOARD_INFO alleycat3_customer_board_0_Info = {
 	/* NAND init params */
 	.nandFlashReadParams		= ALLEYCAT3_CUSTOMER_0_BOARD_NAND_READ_PARAMS,
 	.nandFlashWriteParams		= ALLEYCAT3_CUSTOMER_0_BOARD_NAND_WRITE_PARAMS,
-	.nandFlashControl			= ALLEYCAT3_CUSTOMER_0_BOARD_NAND_CONTROL,
+	.nandFlashControl		= ALLEYCAT3_CUSTOMER_0_BOARD_NAND_CONTROL,
 	/* NOR init params */
-	.norFlashReadParams			= ALLEYCAT3_CUSTOMER_0_BOARD_NOR_READ_PARAMS,
+	.norFlashReadParams		= ALLEYCAT3_CUSTOMER_0_BOARD_NOR_READ_PARAMS,
 	.norFlashWriteParams		= ALLEYCAT3_CUSTOMER_0_BOARD_NOR_WRITE_PARAMS
 };
 
@@ -601,12 +595,6 @@ MV_BOARD_MODULE_TYPE_INFO db_dx_ac3InfoBoardModTypeInfo[] = {
 	}
 };
 
-MV_BOARD_GPP_INFO db_dx_ac3InfoBoardGppInfo[] = {
-	/* {{MV_BOARD_GPP_CLASS	devClass, MV_U8	gppPinNum}} */
-	{BOARD_GPP_USB_VBUS,    24} /* from MPP map */
-	/*{BOARD_GPP_RESET,       47},*/
-};
-
 MV_DEV_CS_INFO db_dx_ac3InfoBoardDeCsInfo[] = {
 	/*{deviceCS, params, devType, devWidth, busWidth }*/
 #if defined(MV_INCLUDE_SPI)
@@ -628,36 +616,36 @@ MV_BOARD_MPP_INFO db_dx_ac3InfoBoardMppConfigValue[] = {
 };
 
 MV_BOARD_INFO db_dx_ac3Info = {
-	.boardName					= "DB-DXAC3-MM",
+	.boardName			= "DB-DXAC3-MM",
 	.numBoardMppTypeValue		= ARRSZ(db_dx_ac3InfoBoardModTypeInfo),
-	.pBoardModTypeValue			= db_dx_ac3InfoBoardModTypeInfo,
+	.pBoardModTypeValue		= db_dx_ac3InfoBoardModTypeInfo,
 	.numBoardMppConfigValue		= ARRSZ(db_dx_ac3InfoBoardMppConfigValue),
 	.pBoardMppConfigValue		= db_dx_ac3InfoBoardMppConfigValue,
-	.intsGppMaskLow				= 0,
-	.intsGppMaskMid				= 0,
-	.intsGppMaskHigh			= 0,
-	.numBoardDeviceIf			= ARRSZ(db_dx_ac3InfoBoardDeCsInfo),
-	.pDevCsInfo					= db_dx_ac3InfoBoardDeCsInfo,
-	.numBoardTwsiDev			= ARRSZ(db_dx_ac3InfoBoardTwsiDev),
-	.pBoardTwsiDev				= db_dx_ac3InfoBoardTwsiDev,
-	.numBoardMacInfo			= ARRSZ(db_dx_ac3InfoBoardMacInfo),
-	.pBoardMacInfo				= db_dx_ac3InfoBoardMacInfo,
-	.numBoardGppInfo			= ARRSZ(db_dx_ac3InfoBoardGppInfo),
-	.pBoardGppInfo				= db_dx_ac3InfoBoardGppInfo,
-	.activeLedsNumber			= 0,
-	.pLedGppPin					= NULL,
-	.ledsPolarity				= 0,
+	.intsGppMaskLow			= 0,
+	.intsGppMaskMid			= 0,
+	.intsGppMaskHigh		= 0,
+	.numBoardDeviceIf		= ARRSZ(db_dx_ac3InfoBoardDeCsInfo),
+	.pDevCsInfo			= db_dx_ac3InfoBoardDeCsInfo,
+	.numBoardTwsiDev		= ARRSZ(db_dx_ac3InfoBoardTwsiDev),
+	.pBoardTwsiDev			= db_dx_ac3InfoBoardTwsiDev,
+	.numBoardMacInfo		= ARRSZ(db_dx_ac3InfoBoardMacInfo),
+	.pBoardMacInfo			= db_dx_ac3InfoBoardMacInfo,
+	.numBoardGppInfo		= 0,
+	.pBoardGppInfo			= NULL,
+	.activeLedsNumber		= 0,
+	.pLedGppPin			= NULL,
+	.ledsPolarity			= 0,
 
 	/* GPP values */
-	.gppOutEnValLow				= DB_DX_AC3_GPP_OUT_ENA_LOW,
-	.gppOutEnValMid				= DB_DX_AC3_GPP_OUT_ENA_MID,
-	.gppOutEnValHigh			= 0,
-	.gppOutValLow				= DB_DX_AC3_GPP_OUT_VAL_LOW,
-	.gppOutValMid				= DB_DX_AC3_GPP_OUT_VAL_MID,
-	.gppOutValHigh				= 0,
-	.gppPolarityValLow			= DB_DX_AC3_GPP_POL_LOW,
-	.gppPolarityValMid			= DB_DX_AC3_GPP_POL_MID,
-	.gppPolarityValHigh			= 0,
+	.gppOutEnValLow			= DB_DX_AC3_GPP_OUT_ENA_LOW,
+	.gppOutEnValMid			= DB_DX_AC3_GPP_OUT_ENA_MID,
+	.gppOutEnValHigh		= 0,
+	.gppOutValLow			= DB_DX_AC3_GPP_OUT_VAL_LOW,
+	.gppOutValMid			= DB_DX_AC3_GPP_OUT_VAL_MID,
+	.gppOutValHigh			= 0,
+	.gppPolarityValLow		= DB_DX_AC3_GPP_POL_LOW,
+	.gppPolarityValMid		= DB_DX_AC3_GPP_POL_MID,
+	.gppPolarityValHigh		= 0,
 
 	/* External Switch Configuration */
 	.pSwitchInfo = NULL,
@@ -666,9 +654,9 @@ MV_BOARD_INFO db_dx_ac3Info = {
 	/* NAND init params */
 	.nandFlashReadParams		= DB_DX_AC3_BOARD_NAND_READ_PARAMS,
 	.nandFlashWriteParams		= DB_DX_AC3_BOARD_NAND_WRITE_PARAMS,
-	.nandFlashControl			= DB_DX_AC3_BOARD_NAND_CONTROL,
+	.nandFlashControl		= DB_DX_AC3_BOARD_NAND_CONTROL,
 	/* NOR init params */
-	.norFlashReadParams			= DB_DX_AC3_BOARD_NOR_READ_PARAMS,
+	.norFlashReadParams		= DB_DX_AC3_BOARD_NOR_READ_PARAMS,
 	.norFlashWriteParams		= DB_DX_AC3_BOARD_NOR_WRITE_PARAMS
 };
 
-- 
1.7.5.4

