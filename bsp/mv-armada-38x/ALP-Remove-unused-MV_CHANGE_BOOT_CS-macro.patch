From a6cb5b69fda2f9059276181c621262cdd8c78c50 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Mon, 10 Jun 2013 11:00:29 +0300
Subject: [PATCH 0713/1825] ALP: Remove unused MV_CHANGE_BOOT_CS macro

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 3cca24df9bddc1ea707b3754990769cb6bf96429

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I819018e25bf24398c5679d79358cf231b37ac594
Reviewed-on: http://vgitil04.il.marvell.com:8080/2195
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Igor Patrik <igorp@marvell.com>
Reviewed-by: Eli Nidam <elini@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvAddrDec.c    |   16 +++++-----
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |    2 -
 .../avanta_lp_family/ctrlEnv/sys/mvCpuIf.c         |   32 +++----------------
 3 files changed, 13 insertions(+), 37 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvAddrDec.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvAddrDec.c
index 3c167fe..0c5a24b 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvAddrDec.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvAddrDec.c
@@ -98,16 +98,16 @@ extern MV_TARGET sampleAtResetTargetArray[];
 *******************************************************************************/
 MV_STATUS mvCtrlAttribGet(MV_TARGET target, MV_TARGET_ATTRIB *targetAttrib)
 {
-	targetAttrib->attrib = mvTargetDefaultsArray[MV_CHANGE_BOOT_CS(target)].attrib;
-	targetAttrib->targetId = mvTargetDefaultsArray[MV_CHANGE_BOOT_CS(target)].targetId;
+	targetAttrib->attrib   = mvTargetDefaultsArray[target].attrib;
+	targetAttrib->targetId = mvTargetDefaultsArray[target].targetId;
 
 	return MV_OK;
 }
 /*******************************************************************************/
 MV_STATUS mvCtrlAttribSet(MV_TARGET target, MV_TARGET_ATTRIB *targetAttrib)
 {
-	mvTargetDefaultsArray[MV_CHANGE_BOOT_CS(target)].attrib  = targetAttrib->attrib;
-	mvTargetDefaultsArray[MV_CHANGE_BOOT_CS(target)].targetId= targetAttrib->targetId;
+	mvTargetDefaultsArray[target].attrib   = targetAttrib->attrib;
+	mvTargetDefaultsArray[target].targetId = targetAttrib->targetId;
 
 	return MV_OK;
 }
@@ -129,9 +129,9 @@ MV_TARGET mvCtrlTargetGet(MV_TARGET_ATTRIB *targetAttrib)
 	MV_TARGET target;
 	MV_TARGET x;
 	for (target = SDRAM_CS0; target < MAX_TARGETS; target++) {
-		x = MV_CHANGE_BOOT_CS(target);
+		x = target;
 		if ((mvTargetDefaultsArray[x].attrib == targetAttrib->attrib) &&
-		    (mvTargetDefaultsArray[MV_CHANGE_BOOT_CS(target)].targetId == targetAttrib->targetId)) {
+		    (mvTargetDefaultsArray[target].targetId == targetAttrib->targetId)) {
 			/* found it */
 			break;
 		}
@@ -157,9 +157,9 @@ MV_TARGET mvCtrlTargetByWinInfoGet(MV_UNIT_WIN_INFO *unitWinInfo)
 	MV_TARGET target;
 	MV_TARGET x;
 	for (target = SDRAM_CS0; target < MAX_TARGETS; target++) {
-		x = MV_CHANGE_BOOT_CS(target);
+		x = target;
 		if ((mvTargetDefaultsArray[x].attrib == unitWinInfo->attrib) &&
-		    (mvTargetDefaultsArray[MV_CHANGE_BOOT_CS(target)].targetId == unitWinInfo->targetId)) {
+		    (mvTargetDefaultsArray[target].targetId == unitWinInfo->targetId)) {
 			/* found it */
 			break;
 		}
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index 313b744..af19681 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -304,8 +304,6 @@ typedef struct {
 
 #define MV_TARGET_IS_DEVICE(target)     ((target >= DEVICE_CS0) && (target <= DEVICE_CS3))
 
-#define MV_CHANGE_BOOT_CS(target) target
-
 #define START_DEV_CS            DEV_CS0
 #define DEV_TO_TARGET(dev)      ((dev) + START_DEV_CS)
 
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvCpuIf.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvCpuIf.c
index af748aa..55b4103 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvCpuIf.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/sys/mvCpuIf.c
@@ -119,6 +119,7 @@ MV_STATUS mvCpuIfVerify(MV_CPU_DEC_WIN *cpuAddrWinMap)
 	}
 	return MV_OK;
 }
+
 /*******************************************************************************
 * mvCpuIfInitForCpu - Initialize Controller CPU interface
 *
@@ -209,7 +210,7 @@ MV_STATUS mvCpuIfInitForCpu(MV_U32 cpu, MV_CPU_DEC_WIN *cpuAddrWinMap)
 		if (target == DEV_BOOCS)
 			continue;
 #endif /* MV_RUN_FROM_FLASH */
-		mvCpuIfTargetWinEnable(MV_CHANGE_BOOT_CS(target), MV_FALSE);
+		mvCpuIfTargetWinEnable(target, MV_FALSE);
 	}
 
 #if defined(MV_RUN_FROM_FLASH)
@@ -269,7 +270,6 @@ MV_STATUS mvCpuIfInitForCpu(MV_U32 cpu, MV_CPU_DEC_WIN *cpuAddrWinMap)
 	return MV_OK;
 }
 
-/*******************************************************************************/
 MV_STATUS mvCpuIfInit(MV_CPU_DEC_WIN *cpuAddrWinMap)
 {
 	return mvCpuIfInitForCpu(whoAmI(), cpuAddrWinMap);
@@ -307,13 +307,6 @@ MV_STATUS mvCpuIfDramInit()
 			temp = (base & 0xFF000000ll) | ((base >> 32) & 0xF);
 			MV_REG_WRITE(SDRAM_WIN_BASE_REG(cs), temp);
 
-			/* Check if out of max window size and resize the window */
-#if 0
-			if (base+size > SDRAM_MAX_ADDR) {
-				size = SDRAM_MAX_ADDR - base - 1;
-				MV_REG_WRITE(SDRAM_SIZE_REG(cs), 0);
-			}
-#endif
 			temp = (MV_REG_READ(SDRAM_WIN_CTRL_REG(cs)) & ~(SDRAM_ADDR_MASK)) | (1<<SDRAM_WIN_CTRL_WIN_ENA_OFFS);
 			temp |= (size & SDRAM_ADDR_MASK);
 
@@ -358,15 +351,11 @@ MV_STATUS mvCpuIfTargetWinSet(MV_TARGET target, MV_CPU_DEC_WIN *pAddrDecWin)
 	MV_U32 existingWinNum;
 	MV_DRAM_DEC_WIN addrDecWin;
 
-	target = MV_CHANGE_BOOT_CS(target);
-
-	/* Check parameters */
 	if (target >= MAX_TARGETS) {
 		mvOsPrintf("mvCpuIfTargetWinSet: target %d is illegal\n", target);
 		return MV_ERROR;
 	}
 
-	/* 2) Check if the requested window overlaps with current windows */
 	if (MV_TRUE == cpuTargetWinOverlap(target, &pAddrDecWin->addrWin)) {
 		mvOsPrintf("mvCpuIfTargetWinSet: ERR. Target %d overlap\n", target);
 		return MV_BAD_PARAM;
@@ -417,8 +406,7 @@ MV_STATUS mvCpuIfTargetWinSet(MV_TARGET target, MV_CPU_DEC_WIN *pAddrDecWin)
 /*******************************************************************************
 * mvCpuIfTargetWinGet - Get CPU-to-peripheral target address window
 *
-* DESCRIPTION:
-*		Get the CPU peripheral target address window.
+* DESCRIPTION: Get the CPU peripheral target address window.
 *
 * INPUT:
 *       target - Peripheral target enumerator
@@ -436,8 +424,6 @@ MV_STATUS mvCpuIfTargetWinGet(MV_TARGET target, MV_CPU_DEC_WIN *pAddrDecWin)
 	MV_AHB_TO_MBUS_DEC_WIN decWin;
 	MV_DRAM_DEC_WIN addrDecWin;
 
-	target = MV_CHANGE_BOOT_CS(target);
-
 	/* Check parameters */
 	if (target >= MAX_TARGETS) {
 		mvOsPrintf("mvCpuIfTargetWinGet: target %d is illegal\n", target);
@@ -504,8 +490,6 @@ MV_STATUS mvCpuIfTargetWinEnable(MV_TARGET target, MV_BOOL enable)
 	MV_U32 winNum, temp;
 	MV_CPU_DEC_WIN addrDecWin;
 
-	target = MV_CHANGE_BOOT_CS(target);
-
 	/* Check parameters */
 	if (target >= MAX_TARGETS) {
 		mvOsPrintf("mvCpuIfTargetWinEnable: target %d is illegal\n", target);
@@ -571,8 +555,6 @@ MV_U32 mvCpuIfTargetWinSizeGet(MV_TARGET target)
 {
 	MV_CPU_DEC_WIN addrDecWin;
 
-	target = MV_CHANGE_BOOT_CS(target);
-
 	/* Check parameters */
 	if (target >= MAX_TARGETS) {
 		mvOsPrintf("mvCpuIfTargetWinSizeGet: target %d is illegal\n", target);
@@ -614,8 +596,6 @@ MV_U32 mvCpuIfTargetWinBaseLowGet(MV_TARGET target)
 {
 	MV_CPU_DEC_WIN addrDecWin;
 
-	target = MV_CHANGE_BOOT_CS(target);
-
 	/* Check parameters */
 	if (target >= MAX_TARGETS) {
 		mvOsPrintf("mvCpuIfTargetWinBaseLowGet: target %d is illegal\n", target);
@@ -631,7 +611,7 @@ MV_U32 mvCpuIfTargetWinBaseLowGet(MV_TARGET target)
 	if (MV_FALSE == addrDecWin.enable)
 		return 0xffffffff;
 
-	return (addrDecWin.addrWin.baseLow);
+	return addrDecWin.addrWin.baseLow;
 }
 
 /*******************************************************************************
@@ -656,8 +636,6 @@ MV_U32 mvCpuIfTargetWinBaseHighGet(MV_TARGET target)
 {
 	MV_CPU_DEC_WIN addrDecWin;
 
-	target = MV_CHANGE_BOOT_CS(target);
-
 	/* Check parameters */
 	if (target >= MAX_TARGETS) {
 		mvOsPrintf("mvCpuIfTargetWinBaseLowGet: target %d is illegal\n", target);
@@ -673,7 +651,7 @@ MV_U32 mvCpuIfTargetWinBaseHighGet(MV_TARGET target)
 	if (MV_FALSE == addrDecWin.enable)
 		return 0;
 
-	return (addrDecWin.addrWin.baseHigh);
+	return addrDecWin.addrWin.baseHigh;
 }
 
 
-- 
1.7.5.4

