From b9bb9ccb780a57010e0101c5ea00ca4d81e96dab Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Wed, 9 Jul 2014 12:23:15 +0800
Subject: [PATCH 1773/1825] fix: alp: pon: the TX packet counter are not
 clear-on-read

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 4494486c67660384da0850ff691646a450c1ec14

	The root cause is the data array overflow, need to modify all
T-CONT related data array by the unified definition.
Signed-off-by: Victor Gu <xigu@marvell.com>

Change-Id: I0d62a18448a0a3aeb71377d80ff6c5fc9bda5c60
Reviewed-on: http://vgitil04.il.marvell.com:8080/9077
Reviewed-by: Yehuda Yitschak <yehuday@marvell.com>
Tested-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_pon/core/gpon/gponOnuDb.c    |    2 +-
 .../mv_drivers_lsp/mv_pon/core/gpon/gponOnuInit.c  |    8 ++++
 .../mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c  |   36 +++++++++++++++-----
 .../mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h  |    1 +
 .../mv_pon/perf/gpon/gponOnuLnxKsUI.c              |    6 ++--
 .../mv_pon/plat/gpon/gponOnuLnxKsOs.c              |    6 ++--
 6 files changed, 43 insertions(+), 16 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuDb.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuDb.c
index 5477a7f..fed39b2 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuDb.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuDb.c
@@ -3851,7 +3851,7 @@ MV_BOOL onuGponDbHighPriTxAddTcontCheck(MV_U32 addTcont)
 	if (MV_FALSE == onuGponDb_s.onuGponGenTbl_s.onuHighPriTx.state)
 		return MV_FALSE;
 
-	/* check whether it is addtional T-CONT */
+	/* check whether it is additional T-CONT */
 	for (idx = 0; idx < ONU_GPON_MAX_NUM_OF_T_CONTS; idx++) {
 		map = &onuGponDb_s.onuGponGenTbl_s.onuHighPriTx.tcontMap[idx];
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuInit.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuInit.c
index 06781c6..d393824 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuInit.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuInit.c
@@ -151,6 +151,14 @@ MV_STATUS onuGponSetup(void)
 		return MV_ERROR;
 	}
 
+	/* init T-cont flush data */
+	rcode = onuGponTcontFlushInit();
+	if (rcode != MV_OK) {
+		mvPonPrint(PON_PRINT_ERROR, PON_INIT_MODULE,
+			   "ERROR: (%s:%d) Failed to init T-cont flush data\n", __FILE_DESC__, __LINE__);
+		return MV_ERROR;
+	}
+
 	/* init onu Asic */
 	rcode = onuGponAsicInit(MV_TRUE);
 	if (rcode != MV_OK) {
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c
index 5780f43..2b30f75 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.c
@@ -115,14 +115,7 @@ MV_32 onuGponLogDbEntryIndex = 0;
 MV_32 onuGponLogDbEntryCount = 0;
 MV_BOOL onuGponLogEnable = MV_FALSE;
 
-MV_32 onuGponTcontFlushState[8] = { TCONT_FLUSH_READY_STATE,
-				    TCONT_FLUSH_READY_STATE,
-				    TCONT_FLUSH_READY_STATE,
-				    TCONT_FLUSH_READY_STATE,
-				    TCONT_FLUSH_READY_STATE,
-				    TCONT_FLUSH_READY_STATE,
-				    TCONT_FLUSH_READY_STATE,
-				    TCONT_FLUSH_READY_STATE };
+MV_32 onuGponTcontFlushState[ONU_GPON_MAX_NUM_OF_T_CONTS];
 
 /*******************************************************************************
 **
@@ -1344,7 +1337,7 @@ void onuGponWqTcontFunc(struct work_struct *work)
 				   __FILE_DESC__, __LINE__, tcont, stateText[onuGponTcontFlushState[tcont]]);
 		}
 	} else if (currentWork->action == TCONT_CLEAN_ALL_EVENT) { /* Handle All T-Cont Clear */
-		for (tcont = 0; tcont < 8; tcont++) {
+		for (tcont = 0; tcont < ONU_GPON_MAX_NUM_OF_T_CONTS; tcont++) {
 			if (onuGponTcontFlushState[tcont] == TCONT_FLUSH_RUNNING_STATE) {
 				mvPonPrint(PON_PRINT_DEBUG, PON_MNG_MODULE,
 					   "DEBUG: (%s:%d) TCONT (%d) CLEAN_EVENT\n", __FILE_DESC__, __LINE__, tcont);
@@ -1933,3 +1926,28 @@ MV_STATUS onuGponQueueOverheadSet(MV_U32 tcontId, MV_U32 queue, MV_U32 overhead)
 {
 	return mvOnuGponQueueOverheadSet(tcontId, queue, overhead);
 }
+
+/*******************************************************************************
+**
+**  onuGponTcontFlushInit
+**  ____________________________________________________________________________
+**
+**  DESCRIPTION: The function initializes T-CONT flush
+**
+**  PARAMETERS:  None
+**
+**  OUTPUTS:     None
+**
+**  RETURNS:     MV_OK or MV_ERROR
+**
+*******************************************************************************/
+MV_STATUS onuGponTcontFlushInit(void)
+{
+	MV_U32 tcont;
+
+	for (tcont = 0; tcont < ONU_GPON_MAX_NUM_OF_T_CONTS; tcont++)
+		onuGponTcontFlushState[tcont] = TCONT_FLUSH_READY_STATE;
+
+	return MV_OK;
+}
+
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h
index 70dcce0..132a6f4 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/core/gpon/gponOnuSrvc.h
@@ -212,6 +212,7 @@ MV_STATUS     onuGponHighPriTxMapDel(MV_U32 hostTcont);
 MV_STATUS     onuGponHighPriTxMapInit(S_PonHighPriTx *highPriTx);
 MV_STATUS     onuGponTxFlush(MV_U32 tcontNum);
 MV_STATUS     onuGponQueueOverheadSet(MV_U32 tcontId, MV_U32 queue, MV_U32 overhead);
+MV_STATUS     onuGponTcontFlushInit(void);
 extern void onuGponWqTcontFunc(struct work_struct *work);
 extern MV_STATUS onuGponWqTcontFlush(MV_U32 tcont);
 extern MV_STATUS onuGponWqTcontActivate(MV_U32 tcont);
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/gpon/gponOnuLnxKsUI.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/gpon/gponOnuLnxKsUI.c
index ea227ca..0ef6c6f 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/gpon/gponOnuLnxKsUI.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/perf/gpon/gponOnuLnxKsUI.c
@@ -4067,7 +4067,7 @@ static DEVICE_ATTR(txEnThresCfg,          S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(utmTxPeriodCfg,        S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(utmTcValidCfg,         S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(txDbrBlkSizeCfg,       S_IWUSR, misc_show, misc_store);
-static DEVICE_ATTR(overheadfg,	          S_IWUSR, misc_show, misc_store);
+static DEVICE_ATTR(overheadCfg,	          S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(readReg,               S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(writeReg,              S_IWUSR, misc_show, misc_store);
 static DEVICE_ATTR(debugModeCfg,          S_IWUSR, misc_show, misc_store);
@@ -4100,7 +4100,7 @@ static struct attribute *misc_attrs[] = {
 	&dev_attr_utmTxPeriodCfg.attr,
 	&dev_attr_utmTcValidCfg.attr,
 	&dev_attr_txDbrBlkSizeCfg.attr,
-	&dev_attr_overheadfg.attr,
+	&dev_attr_overheadCfg.attr,
 	&dev_attr_readReg.attr,
 	&dev_attr_writeReg.attr,
 	&dev_attr_debugModeCfg.attr,
@@ -4624,7 +4624,7 @@ static ssize_t gpon_pm_store(struct device *dev,
 
 	if (!strcmp(name, "cntRdClrFlState"))
 		onuGponUiCountersReadClearFlag((MV_BOOL)param1);
-	if (!strcmp(name, "bwMapCntByState"))
+	else if (!strcmp(name, "bwMapCntByState"))
 		onuGponBwMapCountersEnDisFlag((MV_BOOL)param1);
 	else if (!strcmp(name, "startGemPortMibPm"))
 		onuGponUiDebugGemPmStart((MV_U32)param1, (MV_U32)param2);               /* Start Gem port PM */
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/plat/gpon/gponOnuLnxKsOs.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/plat/gpon/gponOnuLnxKsOs.c
index ec6e945..000a207 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/plat/gpon/gponOnuLnxKsOs.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_pon/plat/gpon/gponOnuLnxKsOs.c
@@ -90,9 +90,9 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 /* Global Variables
    ------------------------------------------------------------------------------*/
-S_onuPonWork gponTcontCleanWork[10];
+S_onuPonWork gponTcontCleanWork[ONU_GPON_MAX_NUM_OF_T_CONTS];
 S_onuPonWork gponTcontCleanAllWork;
-S_onuPonWork gponTcontActiveWork[10];
+S_onuPonWork gponTcontActiveWork[ONU_GPON_MAX_NUM_OF_T_CONTS];
 S_onuPonWorkQueue gponTcontFlushWq;
 
 /* Global functions
@@ -128,7 +128,7 @@ MV_STATUS onuPonWqInit(void)
 
 	gponTcontFlushWq.ponWq = create_workqueue("gponTcontFlushWQ");
 	if (gponTcontFlushWq.ponWq) {
-		for (tcontIndex = 0; tcontIndex < 10; tcontIndex++) {
+		for (tcontIndex = 0; tcontIndex < ONU_GPON_MAX_NUM_OF_T_CONTS; tcontIndex++) {
 			INIT_WORK((struct work_struct *)&gponTcontCleanWork[tcontIndex], onuGponWqTcontFunc);
 			gponTcontCleanWork[tcontIndex].action = TCONT_CLEAN_EVENT;
 			gponTcontCleanWork[tcontIndex].param  = tcontIndex;
-- 
1.7.5.4

