From 17597dc75f73343a1cd3fc932ab4150878074222 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Wed, 15 Jan 2014 16:11:41 +0200
Subject: [PATCH 1297/1825] alp: tdm: Update TDM <-> TAL interface after TAL

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit b3761bdd2f265a5b422499e46a750a1512bfd781

	The new TAL communicates with its backends through
	new unified interface. This commit aligns the tdm_if
	interface to the new TAL module.

Change-Id: I8006c8a38d61a82fcf295649b6385235c4ac73d8
Signed-off-by: Piotr Ziecik <kosmo@semihalf.com>
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/5175
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../mv_drivers_lsp/mv_phone/tdm/tdm_if.c           |   99 ++++++++++++++------
 .../mv_drivers_lsp/mv_phone/tdm/tdm_if.h           |    4 +-
 2 files changed, 73 insertions(+), 30 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
index 9f3a3c1..f0d362f 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.c
@@ -63,6 +63,8 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/
 
 #include "tdm_if.h"
+#include "tal.h"
+#include "test/tal_dev.h"
 #include <linux/interrupt.h>
 #include <linux/module.h>
 #include <linux/init.h>
@@ -74,7 +76,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "gpp/mvGppRegs.h"
 #endif
 
-
 /* TDM Interrupt Service Routine */
 static irqreturn_t tdm_if_isr(int irq, void* dev_id);
 
@@ -116,7 +117,6 @@ static int __init tdm_if_module_init(void);
 static void __exit tdm_if_module_exit(void);
 
 /* Globals */
-static tdm_if_register_ops_t* tdm_if_register_ops;
 #if !(defined CONFIG_MV_PHONE_USE_IRQ_PROCESSING) && !(defined CONFIG_MV_PHONE_USE_FIQ_PROCESSING)
 static DECLARE_TASKLET(tdm_if_rx_tasklet, tdm_if_pcm_rx_process, 0);
 static DECLARE_TASKLET(tdm_if_tx_tasklet, tdm_if_pcm_tx_process, 0);
@@ -206,7 +206,7 @@ static int proc_dump_ext_stats(char *buffer, char **buffer_location, off_t offse
 }
 #endif
 
-MV_STATUS tdm_if_init(tdm_if_register_ops_t* register_ops, tdm_if_params_t* tdm_if_params)
+MV_STATUS tdm_if_init(tal_params_t *tal_params)
 {
 	MV_TDM_PARAMS tdm_params;
 
@@ -224,19 +224,12 @@ MV_STATUS tdm_if_init(tdm_if_register_ops_t* register_ops, tdm_if_params_t* tdm_
 		return MV_OK;
 	}
 
-	if ((register_ops == NULL) || (tdm_if_params == NULL)) {
+	if (tal_params == NULL) {
 		printk(KERN_ERR "%s: bad parameters\n", __func__);
 		return MV_ERROR;
 
 	}
 
-	/* Check callbacks */
-	if (register_ops->tdm_if_pcm_ops.pcm_tx_callback == NULL ||
-		register_ops->tdm_if_pcm_ops.pcm_rx_callback == NULL) {
-		printk(KERN_ERR "%s: missing parameters\n", __func__);
-		return MV_ERROR;
-	}
-
 	/* Reset globals */
 	rxBuff = txBuff = NULL;
 	irq_init = 0;
@@ -255,12 +248,9 @@ MV_STATUS tdm_if_init(tdm_if_register_ops_t* register_ops, tdm_if_params_t* tdm_
 	pcm_stop_fail = 0;
 #endif
 
-	/* Extract test enable */
-	test_enable = tdm_if_params->test_enable;
-
 	/* Calculate Rx/Tx buffer size(use in callbacks) */
-	buff_size = (tdm_if_params->pcm_format * tdm_if_params->total_lines * 80 *
-			(tdm_if_params->sampling_period/MV_TDM_BASE_SAMPLING_PERIOD));
+	buff_size = (tal_params->pcm_format * tal_params->total_lines * 80 *
+			(tal_params->sampling_period/MV_TDM_BASE_SAMPLING_PERIOD));
 
 	/* Extract TDM irq number */
 	irqnr = mvCtrlTdmUnitIrqGet();
@@ -271,12 +261,7 @@ MV_STATUS tdm_if_init(tdm_if_register_ops_t* register_ops, tdm_if_params_t* tdm_
 	TRC_REC("->%s\n", __func__);
 
 	/* Assign TDM parameters */
-	memcpy(&tdm_params, tdm_if_params, sizeof(MV_TDM_PARAMS));
-
-	/* Assign control callbacks */
-	tdm_if_register_ops = register_ops;
-	tdm_if_register_ops->tdm_if_ctl_ops.ctl_pcm_start = tdm_if_pcm_start;
-	tdm_if_register_ops->tdm_if_ctl_ops.ctl_pcm_stop = tdm_if_pcm_stop;
+	memcpy(&tdm_params, tal_params, sizeof(MV_TDM_PARAMS));
 
 #ifdef CONFIG_MV_TDM_SUPPORT
 	/* Soft reset to PCM I/F */
@@ -599,10 +584,10 @@ static void tdm_if_pcm_rx_process(unsigned long arg)
 		/* Fill TDM Rx aggregated buffer */
 #ifdef CONFIG_MV_TDM_SUPPORT
 		if (mvTdmRx(rxBuff) == MV_OK)
-			tdm_if_register_ops->tdm_if_pcm_ops.pcm_rx_callback(rxBuff, buff_size); /* Dispatch Rx handler */
+			tal_mmp_rx(rxBuff, buff_size); /* Dispatch Rx handler */
 #else
 		if (mvCommUnitRx(rxBuff) == MV_OK) {
-			tdm_if_register_ops->tdm_if_pcm_ops.pcm_rx_callback(rxBuff, buff_size); /* Dispatch Rx handler */
+			tal_mmp_rx(rxBuff, buff_size); /* Dispatch Rx handler */
 			/* Since data buffer is shared among MCDMA and CPU, need to invalidate
 				before it accessed by MCDMA. MMP may stop channels from this context,
 				so make sure the buffer is still valid	*/
@@ -652,7 +637,7 @@ static void tdm_if_pcm_tx_process(unsigned long arg)
 		}
 
 		/* Dispatch Tx handler */
-		tdm_if_register_ops->tdm_if_pcm_ops.pcm_tx_callback(txBuff, buff_size);
+		tal_mmp_tx(txBuff, buff_size);
 
 		if (test_enable == 0) {
 			/* Fill Tx aggregated buffer */
@@ -735,15 +720,75 @@ static void tdm_if_stop_channels(unsigned long arg)
 }
 #endif
 
+static int tdm_if_control(int cmd, void *arg)
+{
+#ifdef MV_TDM_USE_DCO
+	tdm_dev_clk_t *tdm_dev_clk = arg;
+#endif
+
+	switch (cmd) {
+	case TDM_DEV_TDM_TEST_MODE_ENABLE:
+		test_enable = 1;
+		break;
+
+	case TDM_DEV_TDM_TEST_MODE_DISABLE:
+		test_enable = 0;
+		break;
+
+#ifdef MV_TDM_USE_DCO
+	case TDM_DEV_TDM_CLK_CONFIG:
+		mvCtrlTdmClkCtrlConfig();
+		printk(KERN_INFO "ioctl: TDM_DEV_TDM_CLK_CONFIG\n");
+		break;
+
+	case TDM_DEV_TDM_CLK_GET:
+		tdm_dev_clk->correction = mvCtrlTdmClkCtrlGet();
+		printk(KERN_INFO "ioctl: TDM_DEV_TDM_CLK_GET\n");
+		break;
+
+	case TDM_DEV_TDM_CLK_SET:
+		printk(KERN_INFO "ioctl: TDM_DEV_TDM_CLK_SET: %x\n", tdm_dev_clk->correction);
+		mvCtrlTdmClkCtrlSet(tdm_dev_clk->correction);
+		break;
+#endif /* MV_TDM_USE_DCO */
+	default:
+		return -EINVAL;
+	};
+
+	return 0;
+}
+
+static int tdm_if_write(unsigned char *buffer, int size)
+{
+	if (test_enable)
+#ifdef CONFIG_MV_TDM_SUPPORT
+		return mvTdmTx(buffer);
+#else
+		return mvCommUnitTx(buffer);
+#endif /* CONFIG_MV_TDM_SUPPORT */
+
+	return MV_OK;
+}
+
+static tal_if_t tdm_if = {
+	.init		= tdm_if_init,
+	.exit		= tdm_if_exit,
+	.pcm_start	= tdm_if_pcm_start,
+	.pcm_stop	= tdm_if_pcm_stop,
+	.control	= tdm_if_control,
+	.write		= tdm_if_write,
+	.stats_get	= tdm_if_stats_get,
+};
+
 static int __init tdm_if_module_init(void)
 {
-	/* The real init is done later */
+	tal_set_if(&tdm_if);
 	return 0;
 }
 
 static void __exit tdm_if_module_exit(void)
 {
-	tdm_if_exit();
+	tal_set_if(NULL);
 	return;
 }
 
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.h b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.h
index e1753e5..b1bfcc8 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.h
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_phone/tdm/tdm_if.h
@@ -76,7 +76,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "ctrlEnv/mvCtrlEnvLib.h"
 #include "boardEnv/mvBoardEnvLib.h"
 
-
 /* Structures */
 typedef struct {
 	int tdm_init;
@@ -116,8 +115,7 @@ typedef struct {
 
 /* APIs */
 void tdm_if_stats_get(tdm_if_stats_t* tdm_if_stats);
-MV_STATUS tdm_if_init(tdm_if_register_ops_t* register_ops, tdm_if_params_t* tdm_if_params);
-void tdm_if_exit(void);
+
 #if defined(MV_TDM_USE_DCO)
 MV_VOID mvCtrlTdmDcoReset(MV_VOID);
 MV_32 mvCtrlTdmDcoGet(MV_VOID);
-- 
1.7.5.4

