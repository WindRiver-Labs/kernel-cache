From ad2d34b280ff1ac3796667727b7b7d5dfa22e5db Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Mon, 26 May 2014 14:27:29 +0300
Subject: [PATCH 1757/1825] sgmii: a38x: Added support for inBand SGMII SFP,
 Auto-detected from Sample at Reset

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit e606d4a95bf1c8fbedda0808fa8c725a5124c01c

	- Enabled auto detection sequence for both RD-NAS & RD-AP boards
	- Relocated mvBoardIoExpanderUpdate to Auto Detection sequence (to mvBoardInfoUpdate)
	- Added detection for SerDes#4 lane configuration.
	  If SerDes#4 = SGMII:
	  - Update PHY Address to be -1 (inBand SMI control: no SMI address)
	  - Updated IO Expander Values (SFP Tx Disable)

Change-Id: I53fdb098334b095ed5412f224908c816b43ffc15
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/8201
Tested-by: Star_Automation <star@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../armada_38x_family/boardEnv/mvBoardEnvLib.c     |   63 ++++++++++++-------
 .../armada_38x_family/boardEnv/mvBoardEnvSpec.c    |    4 +-
 .../armada_38x_family/ctrlEnv/mvCtrlEnvLib.c       |    2 +-
 3 files changed, 43 insertions(+), 26 deletions(-)

diff --git a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c
index 03927a4..4e2b12c 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvLib.c
@@ -980,19 +980,32 @@ MV_VOID mvBoardInfoUpdate(MV_VOID)
 {
 	MV_U32	reg;
 
-	if ((mvBoardIsModuleConnected(MV_CONFIG_MII)))	/* if Module MII connected change SMI address for port 0 */
-		mvBoardPhyAddrSet(0, 8);	/*set SMI address 8 for port 0*/
-
-	/* Update MPP group types and values according to board configuration */
-	mvBoardMppIdUpdate();
-	mvBoardEthComplexInfoUpdate();
-	/* board on test mode  */
-	reg = MV_REG_READ(MPP_SAMPLE_AT_RESET) & BIT20;
-	if (reg) {
-		/* if board on test mode reset MPP19 */
-		reg = mvBoardMppGet(2);
-		reg &= 0xffff0fff;
-		mvBoardMppSet(2, reg);
+	switch (mvBoardIdGet()) {
+	case RD_NAS_68XX_ID:
+	case RD_AP_68XX_ID:
+		mvBoardIoExpanderUpdate();
+		/* SGMII utilizes in-Band SMI access, no SMI address is used (set -1 to disable MAC SMI polling)*/
+		if (mvBoardSatRRead(MV_SATR_RD_SERDES4_CFG) == 1) /* 0 = USB3.  1 = SGMII. */
+			mvBoardPhyAddrSet(1, -1);
+		break;
+	case DB_68XX_ID:
+		if ((mvBoardIsModuleConnected(MV_CONFIG_MII)))	/* MII Module uses different PHY address */
+			mvBoardPhyAddrSet(0, 8);	/*set SMI address 8 for port 0*/
+
+		/* Update MPP group types and values according to board configuration */
+		mvBoardMppIdUpdate();
+		mvBoardEthComplexInfoUpdate();
+		/* board on test mode  */
+		reg = MV_REG_READ(MPP_SAMPLE_AT_RESET) & BIT20;
+		if (reg) {
+			/* if board on test mode reset MPP19 */
+			reg = mvBoardMppGet(2);
+			reg &= 0xffff0fff;
+			mvBoardMppSet(2, reg);
+		}
+		break;
+	default:
+		mvOsPrintf("%s: Error: Auto detection update sequence is not supported by current board.\n" , __func__);
 	}
 }
 /*******************************************************************************
@@ -1095,7 +1108,6 @@ MV_VOID mvBoardMppIdUpdate(MV_VOID)
 
 	if (mvBoardIsModuleConnected(MV_CONFIG_NAND_ON_BOARD))
 		mvModuleMppUpdate(4, nandOnBoard);
-
 }
 
 /*******************************************************************************
@@ -1140,21 +1152,26 @@ MV_STATUS mvBoardEthComplexInfoUpdate(MV_VOID)
 MV_STATUS mvBoardIoExpanderUpdate(MV_VOID)
 {
 	MV_U32 i = 0;
-	MV_U8 ioValue, boardId = mvBoardIdGet();
-	MV_U32 tmp = MV_ERROR;
+	MV_U8 ioValue, ioValue2, boardId = mvBoardIdGet();
+	MV_U32 rdSerdes4cfg = MV_ERROR;
 
-	if (mvBoardIoExpanderGet(0, 2, &ioValue) == MV_ERROR)
-		return MV_OK; /* ignore for boards not supported IO expander */
+	/* Verify existence of IO expander on board, and fetch 1st IO expander value to modify */
+	if (mvBoardIoExpanderGet(0, 2, &ioValue) == MV_ERROR ||
+		mvBoardIoExpanderGet(1, 6, &ioValue2) == MV_ERROR)
+		return MV_OK;
 
 	/* if RD board: detect SerDes Lane #4 configuration*/
 	if (boardId == RD_NAS_68XX_ID || boardId == RD_AP_68XX_ID)
-		tmp = mvBoardSatRRead(MV_SATR_RD_SERDES4_CFG);
+		rdSerdes4cfg = mvBoardSatRRead(MV_SATR_RD_SERDES4_CFG);
 
-	if (tmp != MV_ERROR) { /* ignore for none RD_NAS board */
-		if (tmp == 0) /* 0 = USB3.  1 = SGMII. */
+	if (rdSerdes4cfg != MV_ERROR) { /* ignore for none RD_NAS board */
+		if (rdSerdes4cfg == 0) /* 0 = USB3.  1 = SGMII. */
 			ioValue |= 1 ;	/* Setting USB3.0 interface: configure IO as output '1' */
-		else
-			ioValue &= ~1 ;	/* Setting SGMII interface:  configure IO as output '0' */
+		else {
+			ioValue &= ~1;		/* Setting SGMII interface:  configure IO as output '0' */
+			ioValue2 &= ~BIT5;	/* Set Tx disable for SGMII */
+		}
+		mvBoardIoExpanderSet(1, 6, ioValue2);
 		mvBoardIoExpanderSet(0, 2, ioValue);
 	}
 
diff --git a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.c b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.c
index cb2d67f..ce1d234 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/boardEnv/mvBoardEnvSpec.c
@@ -408,7 +408,7 @@ MV_BOARD_INFO rdNas88f68XX_board_info = {
 	.norFlashReadParams		= 0,
 	.norFlashWriteParams		= 0,
 	/* Enable modules auto-detection. */
-	.configAutoDetect		= MV_FALSE,
+	.configAutoDetect		= MV_TRUE,
 	.numIoExp			= ARRSZ(ioExpNas),
 	.pIoExp				= ioExpNas,
 	.boardOptionsConfig		= MV_CONFIG_NO_MODULE
@@ -486,7 +486,7 @@ MV_BOARD_INFO rdWAP88f68XX_board_info = {
 	.norFlashReadParams		= 0,
 	.norFlashWriteParams		= 0,
 	/* Enable modules auto-detection. */
-	.configAutoDetect		= MV_FALSE,
+	.configAutoDetect		= MV_TRUE,
 	.numIoExp			= ARRSZ(ioExpWap),
 	.pIoExp				= ioExpWap,
 	.boardOptionsConfig		= MV_CONFIG_NO_MODULE
diff --git a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
index 9ad913b..fec5955 100644
--- a/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-armada38x/armada_38x_family/ctrlEnv/mvCtrlEnvLib.c
@@ -380,7 +380,7 @@ MV_STATUS mvCtrlEnvInit(MV_VOID)
 	if (mvBoardConfigAutoDetectEnabled()) {
 		mvBoardInfoUpdate();
 	}
-	mvBoardIoExpanderUpdate();
+
 	if (mvBoardIsModuleConnected(MV_CONFIG_NOR) ||
 	    mvBoardIsModuleConnected(MV_CONFIG_NAND) ||
 	    mvBoardIsModuleConnected(MV_CONFIG_NAND_ON_BOARD))
-- 
1.7.5.4

