From c6837650c3ea62d178433fdd155d64d3c9b856af Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Thu, 13 Mar 2014 10:09:39 +0200
Subject: [PATCH 1512/1825] alp: added temperature sensor for A0, and update
 Zx read sequence

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 797ce63f1636cf1b8a9f086d830ffbffed37ac73

	- Added temperature sensor for A0
	- Update the read sequece of temperature sensor for Zx revisions

Change-Id: I029415403a25a4392c9648b67c5fd3516f210893
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/6386
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |   43 ++++++++++++++------
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h        |   25 ++++++++----
 2 files changed, 47 insertions(+), 21 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index be2e259..1d73d01 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -2261,26 +2261,43 @@ MV_BOOL mvCtrlDDRECC(MV_VOID)
 *******************************************************************************/
 MV_U32 mvCtrlGetJuncTemp(MV_VOID)
 {
-	/*Used Hard Coded values, TODO sync with Spec*/
 	MV_32 reg = 0;
 
-	/* init the TSEN sensor once */
-	if ((MV_REG_READ(TSEN_STATE_REG) & TSEN_STATE_MASK) == 0) {
-		MV_REG_BIT_RESET(TSEN_STATE_REG, TSEN_STATE_MASK);
-
-		MV_REG_WRITE(TSEN_STATE_REG, 0x8011E214);
-
-		reg = MV_REG_READ(TSEN_CONF_REG);
-
-		reg = 0x00a80909;
-		MV_REG_WRITE(TSEN_CONF_REG, reg);
-		mvOsDelay(10);
+	/* WA for Zx - write the default value to the register */
+	if (mvCtrlRevGet() <= MV_88F66X0_Z3_ID) {
+		reg = TSEN_CTRL_LSB_DEFAULT_VALUE;
+		MV_REG_WRITE(TSEN_CTRL_LSB_REG_Z_REV, reg);
+		mvOsDelay(20);
+		reg = TSEN_CTRL_MSB_DEFAULT_VALUE;
+		MV_REG_WRITE(TSEN_CTRL_MSB_REG, reg);
+		mvOsDelay(20);
 	}
 
+	/* Initialize TSEN CTRL MSB REG */
+	reg = MV_REG_READ(TSEN_CTRL_MSB_REG);
+	/* Set Temp sensor 0 to read */
+	reg &= ~TSEN_CTRL_UNIT_CTRL_MASK;
+	reg |= (0x0 << TSEN_CTRL_UNIT_CTRL_OFFSET);
+	/* Disable (0x0) readout invert */
+	reg &= ~TSEN_CTRL_READOUT_INVERT_MASK;
+	reg |= (0x0 << TSEN_CTRL_READOUT_INVERT_OFFSET);
+	/* Disable soft reset */
+	reg &= ~TSEN_CTRL_SOFT_RST_MASK;
+	reg |= (0x0 << TSEN_CTRL_SOFT_RST_OFFSET);
+	MV_REG_WRITE(TSEN_CTRL_MSB_REG, reg);
+	mvOsDelay(20);
+	/* Enable soft reset */
+	reg &= ~TSEN_CTRL_SOFT_RST_MASK;
+	reg |= (0x1 << TSEN_CTRL_SOFT_RST_OFFSET);
+	MV_REG_WRITE(TSEN_CTRL_MSB_REG, reg);
+
+	mvOsDelay(50);
+	/* Read temperature sensor status */
 	reg = MV_REG_READ(TSEN_STATUS_REG);
 	reg = (reg & TSEN_STATUS_TEMP_OUT_MASK) >> TSEN_STATUS_TEMP_OUT_OFFSET;
 
-	return (3171900 - (10000 * reg)) / 13553;
+	/* formula values taken from SPIC */
+	return (3239600 - (10000 * reg)) / 13616;
 }
 
 /*******************************************************************************
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
index 568fe61..2d6f5b5 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.h
@@ -233,17 +233,26 @@ typedef struct _boardSerdesConf {
 	                           SGMII        1.25 Gbps		3.125 Gbps	*/
 } MV_SERDES_CFG;
 
+/* Termal Sensor values */
+#define TSEN_CTRL_LSB_DEFAULT_VALUE			0x8011E214
+#define TSEN_CTRL_MSB_DEFAULT_VALUE			0x00a80809
+
 /* Termal Sensor Registers */
-#define TSEN_STATE_REG							0xE8070
-#define TSEN_STATE_OFFSET						31
-#define TSEN_STATE_MASK							(0x1 << TSEN_STATE_OFFSET)
+#define TSEN_CTRL_LSB_REG_Z_REV				0xE8070
+#define TSEN_CTRL_MSB_REG				((mvCtrlRevGet() <= MV_88F66X0_Z3_ID) ? 0xE8074 : 0xE8080)
+
+#define TSEN_CTRL_UNIT_CTRL_OFFSET			27
+#define TSEN_CTRL_UNIT_CTRL_MASK			(6 << TSEN_CTRL_UNIT_CTRL_OFFSET)
+
+#define TSEN_CTRL_READOUT_INVERT_OFFSET			15
+#define TSEN_CTRL_READOUT_INVERT_MASK			(1 << TSEN_CTRL_READOUT_INVERT_OFFSET)
 
-#define TSEN_CONF_REG							0xE8074
-#define TSEN_CONF_OTF_CALIB_MASK				(0x1 << 8)
+#define TSEN_CTRL_SOFT_RST_OFFSET			8
+#define TSEN_CTRL_SOFT_RST_MASK				(1 << TSEN_CTRL_SOFT_RST_OFFSET)
 
-#define TSEN_STATUS_REG							0xE8078
-#define TSEN_STATUS_TEMP_OUT_OFFSET				0
-#define TSEN_STATUS_TEMP_OUT_MASK				(0x1FF << TSEN_STATUS_TEMP_OUT_OFFSET)
+#define TSEN_STATUS_REG					0xE8078
+#define TSEN_STATUS_TEMP_OUT_OFFSET			0
+#define TSEN_STATUS_TEMP_OUT_MASK			(0x1FF << TSEN_STATUS_TEMP_OUT_OFFSET)
 
 /* BIOS Modes related defines */
 #define SAR_CPU_FAB_GET(cpu, fab)       (((cpu & 0x7) << 21) | ((fab & 0xF) << 24))
-- 
1.7.5.4

