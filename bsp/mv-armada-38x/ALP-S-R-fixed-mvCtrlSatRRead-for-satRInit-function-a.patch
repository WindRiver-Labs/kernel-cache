From ed7873d309551430b6d888c42190e411c8b53d86 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Mon, 6 May 2013 14:47:50 +0300
Subject: [PATCH 0644/1825] ALP: S@R : fixed mvCtrlSatRRead for satRInit
 function & added missing boot source options

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 9ef2f933f0caa4c3a23bb54377eb5a4a393eebdb

Change-Id: I81142e0e9f56d95b2ce6278f64dbb0771020a3c6
Reviewed-on: http://vgitil04.il.marvell.com:8080/1787
Reviewed-by: Star_Automation <star@marvell.com>
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c        |    4 +-
 .../avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h       |   58 +++++++++++---------
 2 files changed, 34 insertions(+), 28 deletions(-)

diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
index 4f86492..45008fc 100755
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvLib.c
@@ -354,8 +354,8 @@ MV_STATUS mvCtrlSatRWrite(MV_SATR_TYPE_ID satrWriteField, MV_SATR_TYPE_ID satrRe
 *******************************************************************************/
 MV_U32 mvCtrlSatRRead(MV_SATR_TYPE_ID satrField)
 {
-	MV_BOARD_SATR_INFO *satrInfo = NULL;;
-	if (satrField < MV_SATR_READ_MAX_OPTION && mvBoardSatrInfoGet(satrField, satrInfo))
+	MV_BOARD_SATR_INFO *satrInfo = NULL;
+	if (satrField < MV_SATR_READ_MAX_OPTION && mvBoardSatrInfoGet(satrField, satrInfo) == MV_OK)
 		return satrOptionsConfig[satrField];
 	else
 		return MV_ERROR;
diff --git a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
index cb7be28..6cc8d90 100644
--- a/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
+++ b/arch/arm/mach-avantalp/avanta_lp_family/ctrlEnv/mvCtrlEnvRegs.h
@@ -207,32 +207,38 @@ typedef struct _mvSATRBootTable {
 /*29*/ { MSAR_0_BOOT_NAND_NEW, MSAR_0_BOOT_DEV_BUS_WIDTH_8BIT, MSAR_0_NAND_PAGE_SZ_8KB, MSAR_0_NAND_ECC_16BIT }, \
 /*30*/ { 0,           5,            60,          60           }, \
 /*31*/ { 0,           2,            40,          40           }, \
-/*32*/ { 0,           1,            2,            2              }, \
-/*33*/ { 0,           3,            6,            6              }, \
-/*34*/ { 0,           3,            5,            5              }, \
-/*35*/ { 0,           2,            6,            3              }, \
-/*36*/ { 0,           4,            10,          5              }, \
-/*37*/ { 0,           3,            6,            6              }, \
-/*38*/ { 0,           2,            4,            4              }, \
-/*39*/ { 0,           3,            6,            3              }, \
-/*40*/ { 0,           2,            5,            5              }, \
-/*41*/ { MSAR_0_BOOT_PROMPT,         2,            5,            5              }, \
-/*42*/ { MSAR_0_BOOT_UART,               1,            3,            3              }, \
-/*43*/ { MSAR_0_BOOT_SATA,                5,            10,          10           }, \
-/*44*/ { MSAR_0_BOOT_PEX,   3,            8,            4              }, \
-/*45*/ { MSAR_0_BOOT_PEX,   1,            2,            1              }, \
-/*46*/ { 0,           3,            6,            3              }, \
-/*47*/ { 0,           2,            8,            4              }, \
-/*48*/ { 0,           5,            10,          5              }, \
-/*49*/ { 0,           1,            20,          20           }, \
-/*50*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI0, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_24_16BIT, 60        }, \
-/*51*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI0, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_32BIT, 60               }, \
-/*52*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI1, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_24_16BIT, 60        }, \
-/*53*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI1, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_32BIT, 60               }, \
-/*54*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI0, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_24_16BIT, 60        }, \
-/*55*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI0, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_32BIT, 60               }, \
-/*56*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI1, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_24_16BIT, 60        }, \
-/*57*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI1, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_32BIT, 40               } \
+/*32*/ {-1, -1, -1, -1 },\
+/*33*/ {-1, -1, -1, -1 },\
+/*34*/ {-1, -1, -1, -1 },\
+/*35*/ {-1, -1, -1, -1 },\
+/*36*/ {-1, -1, -1, -1 },\
+/*37*/ {-1, -1, -1, -1 },\
+/*38*/ { 0,           1,            2,            2              }, \
+/*39*/ { 0,           3,            6,            6              }, \
+/*40*/ { 0,           3,            5,            5              }, \
+/*41*/ { 0,           2,            6,            3              }, \
+/*42*/ { 0,           4,            10,          5              }, \
+/*43*/ { 0,           3,            6,            6              }, \
+/*44*/ { 0,           2,            4,            4              }, \
+/*45*/ { 0,           3,            6,            3              }, \
+/*46*/ { 0,           2,            5,            5              }, \
+/*47*/ { MSAR_0_BOOT_PROMPT,         2,            5,            5              }, \
+/*48*/ { MSAR_0_BOOT_UART,               1,            3,            3              }, \
+/*49*/ { MSAR_0_BOOT_SATA,                5,            10,          10           }, \
+/*50*/ { MSAR_0_BOOT_PEX,   3,            8,            4              }, \
+/*51*/ { MSAR_0_BOOT_PEX,   1,            2,            1              }, \
+/*52*/ { 0,           3,            6,            3              }, \
+/*53*/ { 0,           2,            8,            4              }, \
+/*54*/ { 0,           5,            10,          5              }, \
+/*55*/ { 0,           1,            20,          20           }, \
+/*56*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI0, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_24_16BIT, 60        }, \
+/*57*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI0, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_32BIT, 60               }, \
+/*58*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI1, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_24_16BIT, 60        }, \
+/*59*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI1, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_32BIT, 60               }, \
+/*60*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI0, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_24_16BIT, 60        }, \
+/*61*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI0, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_32BIT, 60               }, \
+/*62*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI1, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_24_16BIT, 60        }, \
+/*63*/ { MSAR_0_BOOT_SPI_FLASH,     MSAR_0_SPI1, MSAR_0_BOOT_DEV_BUS_WIDTH_SPI_32BIT, 40               } \
 }
 
 typedef struct {
-- 
1.7.5.4

