From 1bad58eb12178f910aaff25dfd78d1d88ad944a7 Mon Sep 17 00:00:00 2001
From: Kosta Zertsekel <konszert@marvell.com>
Date: Sun, 14 Apr 2013 19:12:38 +0300
Subject: [PATCH 0576/1825] ALP: Fix global IRQ naming convention

https://github.com/MISL-EBU-System-SW/misl-windriver.git linux-3.4.69-14t2-read
commit 2f639dac513a624b7bf8581c8f26e8a66f04f25c

Signed-off-by: Kosta Zertsekel <konszert@marvell.com>
Change-Id: I8b4779cc759a23cba3961d17511610e5de35f385
Reviewed-on: http://vgitil04.il.marvell.com:8080/1524
Reviewed-by: Eran Ben-Avi <benavi@marvell.com>
Tested-by: Eran Ben-Avi <benavi@marvell.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-avantalp/core.c              |   22 ++--
 arch/arm/mach-avantalp/include/mach/irqs.h |  144 ++++++++++++++--------------
 arch/arm/mach-avantalp/time.c              |    4 +-
 3 files changed, 86 insertions(+), 84 deletions(-)

diff --git a/arch/arm/mach-avantalp/core.c b/arch/arm/mach-avantalp/core.c
index 5eeafb3..36fd8b9 100644
--- a/arch/arm/mach-avantalp/core.c
+++ b/arch/arm/mach-avantalp/core.c
@@ -268,8 +268,8 @@ static struct resource uart0_resources[] = {
 		.end            = (INTER_REGS_PHYS_BASE | MV_UART_REGS_OFFSET(0)) + SZ_256 - 1,
 		.flags          = IORESOURCE_MEM,
 	}, {
-		.start          = IRQ_UART0,
-		.end            = IRQ_UART0,
+		.start          = IRQ_GLOBAL_UART0,
+		.end            = IRQ_GLOBAL_UART0,
 		.flags          = IORESOURCE_IRQ,
 	},
 };
@@ -301,8 +301,8 @@ static struct resource uart1_resources[] = {
 		.end            = (INTER_REGS_PHYS_BASE | MV_UART_REGS_OFFSET(1)) + SZ_256 - 1,
 		.flags          = IORESOURCE_MEM,
 	}, {
-		.start          = IRQ_UART1,
-		.end            = IRQ_UART1,
+		.start          = IRQ_GLOBAL_UART1,
+		.end            = IRQ_GLOBAL_UART1,
 		.flags          = IORESOURCE_IRQ,
 	},
 };
@@ -399,8 +399,8 @@ static void mv_pp2_giga_pdev_register(struct platform_device *pdev)
 
 static struct resource mv_pp2_ge0_resources[] = {
 	{
-		.start          = IRQ_PP_PORT0_RXTX,
-		.end            = IRQ_PP_PORT0_RXTX,
+		.start          = IRQ_GLOBAL_PP_PORT0_RXTX,
+		.end            = IRQ_GLOBAL_PP_PORT0_RXTX,
 		.flags          = IORESOURCE_IRQ,
 	},
 };
@@ -422,8 +422,8 @@ static struct platform_device mv_pp2_ge0_plat = {
 
 static struct resource mv_pp2_ge2_resources[] = {
 	{
-		.start          = IRQ_PP_PORT1_RXTX,
-		.end            = IRQ_PP_PORT1_RXTX,
+		.start          = IRQ_GLOBAL_PP_PORT1_RXTX,
+		.end            = IRQ_GLOBAL_PP_PORT1_RXTX,
 		.flags          = IORESOURCE_IRQ,
 	},
 };
@@ -450,8 +450,8 @@ static struct mv_pp2_pdata mv_pp2_ge3_pdata = {
 
 static struct resource mv_pp2_ge3_resources[] = {
 	{
-		.start          = IRQ_PP_PORT2_RXTX,
-		.end            = IRQ_PP_PORT2_RXTX,
+		.start          = IRQ_GLOBAL_PP_PORT2_RXTX,
+		.end            = IRQ_GLOBAL_PP_PORT2_RXTX,
 		.flags          = IORESOURCE_IRQ,
 	},
 };
@@ -536,7 +536,7 @@ static struct resource rtc_resource[] = {
 		.end    = INTER_REGS_PHYS_BASE + MV_RTC_REGS_OFFSET + 32 - 1,
 		.flags  = IORESOURCE_MEM,
 	}, {
-		.start  = IRQ_RTC,
+		.start  = IRQ_GLOBAL_RTC,
 		.flags  = IORESOURCE_IRQ,
 	}
 };
diff --git a/arch/arm/mach-avantalp/include/mach/irqs.h b/arch/arm/mach-avantalp/include/mach/irqs.h
index b224f50..d89d649 100644
--- a/arch/arm/mach-avantalp/include/mach/irqs.h
+++ b/arch/arm/mach-avantalp/include/mach/irqs.h
@@ -16,116 +16,118 @@
 /*
  * Private Peripheral Interrupts (PPI)
  */
-#define IRQ_CPU_GLOB_TIMER0		27
-#define IRQ_MPIC_PPI_FIQ		28
-#define IRQ_CPU_LOCAL_TIMER		29
-#define IRQ_CPU_LOCAL_WD		30
-#define IRQ_MPIC_PPI_IRQ		31
+#define IRQ_PRIV_CPU_TIMER0		27
+#define IRQ_PRIV_MPIC_PPI_FIQ		28
+#define IRQ_PRIV_CPU_LOCAL_TIMER	29
+#define IRQ_PRIV_CPU_LOCAL_WD		30
+#define IRQ_PRIV_MPIC_PPI_IRQ		31
 
 /*
  * Shared Peripheral Interrupts (SPI)
  */
-#define IRQ_SPI0			33
-#define IRQ_I2C0			34
-#define IRQ_I2C1			35
+#define IRQ_GLOBAL_SPI0			33
+#define IRQ_GLOBAL_I2C0			34
+#define IRQ_GLOBAL_I2C1			35
 
-#define IRQ_GLOB_TIMER0			40
-#define IRQ_GLOB_TIMER1			41
-#define IRQ_GLOB_TIMER2			42
-#define IRQ_GLOB_TIMER3			43
+#define IRQ_GLOBAL_TIMER0		40
+#define IRQ_GLOBAL_TIMER1		41
+#define IRQ_GLOBAL_TIMER2		42
+#define IRQ_GLOBAL_TIMER3		43
 
-#define IRQ_UART0			44
-#define IRQ_UART1			45
+#define IRQ_GLOBAL_UART0		44
+#define IRQ_GLOBAL_UART1		45
 
-#define IRQ_USB0			48
-#define IRQ_USB1			49
+#define IRQ_GLOBAL_USB0			48
+#define IRQ_GLOBAL_USB1			49
 
-#define IRQ_CESA0			51
-#define IRQ_CESA1			52
-#define CESA_IRQ(chan)			((chan == 0) ? IRQ_CESA0 : IRQ_CESA1)
+#define IRQ_GLOBAL_CESA0		51
+#define IRQ_GLOBAL_CESA1		52
+#define CESA_IRQ(chan)			((chan == 0) ? \
+					IRQ_GLOBAL_CESA0 : \
+					IRQ_GLOBAL_CESA1)
 
-#define IRQ_RTC				53
+#define IRQ_GLOBAL_RTC			53
 
-#define IRQ_XOR0_CHAN0			54
-#define IRQ_XOR0_CHAN1			55
+#define IRQ_GLOBAL_XOR0_CHAN0		54
+#define IRQ_GLOBAL_XOR0_CHAN1		55
 
-#define IRQ_SDIO			57
-#define IRQ_SATA0			58
-#define IRQ_TDM				59
+#define IRQ_GLOBAL_SDIO			57
+#define IRQ_GLOBAL_SATA0		58
+#define IRQ_GLOBAL_TDM			59
 
-#define IRQ_PCIE0			61
-#define IRQ_PCIE1			65
+#define IRQ_GLOBAL_PCIE0		61
+#define IRQ_GLOBAL_PCIE1		65
 
-#define IRQ_PP_PORT0_RXTX		69
-#define IRQ_PP_MISC			72
-#define IRQ_PP_PORT1_RXTX		73
-#define IRQ_PP_PORT2_RXTX		77
-#define IRQ_PP_PORT7_RXTX		81
+#define IRQ_GLOBAL_PP_PORT0_RXTX	69
+#define IRQ_GLOBAL_PP_MISC		72
+#define IRQ_GLOBAL_PP_PORT1_RXTX	73
+#define IRQ_GLOBAL_PP_PORT2_RXTX	77
+#define IRQ_GLOBAL_PP_PORT7_RXTX	81
 
-#define IRQ_GOP				82 /* Group of Ports (GOP) */
-#define IRQ_PON				83
+#define IRQ_GLOBAL_GOP			82 /* Group of Ports (GOP) */
+#define IRQ_GLOBAL_PON			83
 
-#define IRQ_ETH_COMPLEX			84
+#define IRQ_GLOBAL_ETH_COMPLEX		84
 
-#define IRQ_GLOB_GPIO_0_7		85
-#define IRQ_GLOB_GPIO_8_15		86
-#define IRQ_GLOB_GPIO_16_23		87
-#define IRQ_GLOB_GPIO_24_31		88
+#define IRQ_GLOBAL_GPIO_0_7		85
+#define IRQ_GLOBAL_GPIO_8_15		86
+#define IRQ_GLOBAL_GPIO_16_23		87
+#define IRQ_GLOBAL_GPIO_24_31		88
 
-#define IRQ_DYING_GASP			89
+#define IRQ_GLOBAL_DYING_GASP		89
 
-#define IRQ_GLOB_GPIO_32_39		90
-#define IRQ_GLOB_GPIO_40_47		91
-#define IRQ_GLOB_GPIO_48_55		92
-#define IRQ_GLOB_GPIO_56_63		93
-#define IRQ_GLOB_GPIO_64_66		94
+#define IRQ_GLOBAL_GPIO_32_39		90
+#define IRQ_GLOBAL_GPIO_40_47		91
+#define IRQ_GLOBAL_GPIO_48_55		92
+#define IRQ_GLOBAL_GPIO_56_63		93
+#define IRQ_GLOBAL_GPIO_64_66		94
 
-#define IRQ_SPI1			95
+#define IRQ_GLOBAL_SPI1			95
 
-#define IRQ_WD				96
+#define IRQ_GLOBAL_WD			96
 
-#define IRQ_XOR1_CHAN0			97
-#define IRQ_XOR1_CHAN1			98
+#define IRQ_GLOBAL_XOR1_CHAN0		97
+#define IRQ_GLOBAL_XOR1_CHAN1		98
 
-#define IRQ_GLOB_INB_DOOR_BELL_SUMMARY0	99
-#define IRQ_GLOB_INB_DOOR_BELL_SUMMARY1	100
-#define IRQ_GLOB_INB_DOOR_BELL_SUMMARY2	101
+#define IRQ_GLOBAL_INB_DOOR_BELL_SUMMARY0	99
+#define IRQ_GLOBAL_INB_DOOR_BELL_SUMMARY1	100
+#define IRQ_GLOBAL_INB_DOOR_BELL_SUMMARY2	101
 
-#define IRQ_AUDIO			107
-#define IRQ_CODEC_SUMMARY		109
+#define IRQ_GLOBAL_AUDIO		107
+#define IRQ_GLOBAL_CODEC_SUMMARY	109
 
-#define IRQ_THERMAL			110
+#define IRQ_GLOBAL_THERMAL		110
 
-#define IRQ_DRAM			111
+#define IRQ_GLOBAL_DRAM			111
 
-#define IRQ_NET_WAKE_UP			112
+#define IRQ_GLOBAL_NET_WAKE_UP		112
 
-#define IRQ_NFC				116
+#define IRQ_GLOBAL_NFC			116
 
-#define IRQ_SOC_MISC_SUMMARY		117
+#define IRQ_GLOBAL_SOC_MISC_SUMMARY	117
 
-#define IRQ_DRAGONITE			118
+#define IRQ_GLOBAL_DRAGONITE		118
 
 /*
  * Global GPIO interrupts
  */
-#define IRQ_START_GLOB_GPIO		192
-#define NR_IRQS_GLOB_GPIO		67
-#define IRQ_GLOB_GPIO(gpio_irq)		(gpio_irq >= NR_IRQS_GLOB_GPIO ? \
-			NR_IRQS_GLOB_GPIO : IRQ_START_GLOB_GPIO + gpio_irq)
+#define IRQ_START_GLOBAL_GPIO		192
+#define NR_IRQS_GLOBAL_GPIO		67
+#define IRQ_GLOBAL_GPIO(gpio_irq)	(gpio_irq >= NR_IRQS_GLOBAL_GPIO ? \
+			NR_IRQS_GLOBAL_GPIO : IRQ_START_GLOBAL_GPIO + gpio_irq)
 
 /*
  * Global PCIe MSI interrupts
  */
-#define IRQ_START_GLOB_MSI		(IRQ_START_GLOB_GPIO + NR_IRQS_GLOB_GPIO)
-#define NR_IRQS_GLOB_MSI		96
-#define IRQ_GLOB_MSI(msi_irq)		(msi_irq >= NR_IRQS_GLOB_MSI ? \
-			NR_IRQS_GLOB_MSI : NR_IRQS_GLOB_MSI + msi_irq)
+#define IRQ_START_GLOBAL_MSI		(IRQ_START_GLOBAL_GPIO + NR_IRQS_GLOBAL_GPIO)
+#define NR_IRQS_GLOBAL_MSI		96
+#define IRQ_GLOBAL_MSI(msi_irq)		(msi_irq >= NR_IRQS_GLOBAL_MSI ? \
+			NR_IRQS_GLOBAL_MSI : NR_IRQS_GLOBAL_MSI + msi_irq)
 
 /*
  * SoC private interrupts
  */
-#define IRQ_START_PRIV_SOC_PPI		(IRQ_START_GLOB_MSI + NR_IRQS_GLOB_MSI)
+#define IRQ_START_PRIV_SOC_PPI		(IRQ_START_GLOBAL_MSI + NR_IRQS_GLOBAL_MSI)
 #define NR_IRQS_PRIV_SOC_PPI		24
 
 #define IRQ_PRIV_INB_DOOR_BELL_SUMMARY0		(IRQ_START_PRIV_SOC_PPI + 0)
@@ -166,7 +168,7 @@
 			NR_IRQS_PRIV_MSI : IRQ_START_PRIV_MSI + msi_irq)
 
 /*
- * SoC error interrupts
+ * Private SoC error interrupts
  */
 #define IRQ_START_PRIV_ERROR		(IRQ_START_PRIV_MSI + NR_IRQS_PRIV_MSI)
 #define NR_IRQS_PRIV_ERROR		50
@@ -208,6 +210,6 @@
  * Total number of interrupts
  */
 #define NR_IRQS			(IRQ_START_PRIV_ERROR + NR_IRQS_PRIV_ERROR)
-#define NR_GPIO_IRQS		NR_IRQS_GLOB_GPIO
+#define NR_GPIO_IRQS		NR_IRQS_GLOBAL_GPIO
 
 #endif /* __ASM_ARCH_IRQS_H */
diff --git a/arch/arm/mach-avantalp/time.c b/arch/arm/mach-avantalp/time.c
index 99e8e21..84f68a2 100644
--- a/arch/arm/mach-avantalp/time.c
+++ b/arch/arm/mach-avantalp/time.c
@@ -184,7 +184,7 @@ static struct clk_lookup clk_twd_lookup = {
 
 static DEFINE_TWD_LOCAL_TIMER(twd_local_timer,
 			      INTER_REGS_PHYS_BASE + A9_MPCORE_TWD,
-			      IRQ_LOCALTIMER);
+			      IRQ_PRIV_CPU_LOCAL_TIMER);
 
 static void __init alp_twd_init(void)
 {
@@ -267,7 +267,7 @@ static void __init alp_timer_init(void)
 	alp_setup_clocksource(0, rate);
 
 	/* Global timer 1 - for clock event */
-	alp_setup_clockevent(IRQ_GLOB_TIMER1, rate);
+	alp_setup_clockevent(IRQ_GLOBAL_TIMER1, rate);
 
 	alp_twd_init();
 }
-- 
1.7.5.4

