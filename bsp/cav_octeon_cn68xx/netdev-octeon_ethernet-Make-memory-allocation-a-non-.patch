From 436f2a8cf859e4f83bf5f95cf52ead21ce1c4e41 Mon Sep 17 00:00:00 2001
From: David Daney <ddaney@caviumnetworks.com>
Date: Fri, 18 Mar 2011 12:43:14 -0700
Subject: [PATCH 74/97] netdev: octeon_ethernet: Make memory allocation a non-module for use by srio.

Source: Cavium SDK 2.1.0-407

The SRIO drivers need the same memory allocator the Ethernet driver
uses.  Build this in the main kernel so that it can be shared.

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
Integrated-by: Phil Staub <Phil.Staub@windriver.com>
---
 drivers/net/octeon/Makefile       |    2 +-
 drivers/net/octeon/ethernet-mem.c |   59 +++++++++++++++++++-----------------
 drivers/net/octeon/ethernet-mem.h |    1 -
 drivers/net/octeon/ethernet.c     |    4 --
 4 files changed, 32 insertions(+), 34 deletions(-)

diff --git a/drivers/net/octeon/Makefile b/drivers/net/octeon/Makefile
index 26af82b..cbafb3a 100644
--- a/drivers/net/octeon/Makefile
+++ b/drivers/net/octeon/Makefile
@@ -19,7 +19,6 @@ obj-${CONFIG_KEXEC} +=  octeon-kexec-net.o
 
 octeon-ethernet-objs := ethernet.o
 octeon-ethernet-objs += ethernet-mdio.o
-octeon-ethernet-objs += ethernet-mem.o
 octeon-ethernet-objs += ethernet-rgmii.o
 octeon-ethernet-objs += ethernet-rx.o
 octeon-ethernet-objs += ethernet-sgmii.o
@@ -30,3 +29,4 @@ octeon-ethernet-objs += ethernet-proc.o
 ifdef CONFIG_RAPIDIO
 octeon-ethernet-objs += ethernet-srio.o
 endif
+obj-y += ethernet-mem.o
\ No newline at end of file
diff --git a/drivers/net/octeon/ethernet-mem.c b/drivers/net/octeon/ethernet-mem.c
index a5576fa..adf68cc 100644
--- a/drivers/net/octeon/ethernet-mem.c
+++ b/drivers/net/octeon/ethernet-mem.c
@@ -195,6 +195,7 @@ int cvm_oct_mem_fill_fpa(int pool, int size, int elements)
 		freed = cvm_oct_fill_hw_memory(pool, size, elements);
 	return freed;
 }
+EXPORT_SYMBOL(cvm_oct_mem_fill_fpa);
 
 void cvm_oct_mem_empty_fpa(int pool, int size, int elements)
 {
@@ -203,8 +204,36 @@ void cvm_oct_mem_empty_fpa(int pool, int size, int elements)
 	else
 		cvm_oct_free_hw_memory(pool, size, elements);
 }
+EXPORT_SYMBOL(cvm_oct_mem_empty_fpa);
 
-int __init cvm_oct_mem_init(void)
+void cvm_oct_mem_uninit(void)
+{
+	if (USE_32BIT_SHARED)
+		return;
+
+	if (cvm_oct_kmem_128)
+		kmem_cache_destroy(cvm_oct_kmem_128);
+	if (cvm_oct_kmem_1024)
+		kmem_cache_destroy(cvm_oct_kmem_1024);
+
+	cvm_oct_kmem_128 = NULL;
+	cvm_oct_kmem_1024 = NULL;
+}
+EXPORT_SYMBOL(cvm_oct_mem_uninit);
+
+void cvm_oct_mem_cleanup(void)
+{
+	if (USE_32BIT_SHARED)
+		return;
+
+	if (cvm_oct_kmem_128)
+		kmem_cache_shrink(cvm_oct_kmem_128);
+	if (cvm_oct_kmem_1024)
+		kmem_cache_shrink(cvm_oct_kmem_1024);
+}
+EXPORT_SYMBOL(cvm_oct_mem_cleanup);
+
+static int __init cvm_oct_mem_init(void)
 {
 	int r = 0;
 
@@ -232,30 +261,4 @@ err:
 out:
 	return r;
 }
-
-void cvm_oct_mem_uninit(void)
-{
-	if (USE_32BIT_SHARED)
-		return;
-
-	if (cvm_oct_kmem_128)
-		kmem_cache_destroy(cvm_oct_kmem_128);
-	if (cvm_oct_kmem_1024)
-		kmem_cache_destroy(cvm_oct_kmem_1024);
-
-	cvm_oct_kmem_128 = NULL;
-	cvm_oct_kmem_1024 = NULL;
-}
-EXPORT_SYMBOL(cvm_oct_mem_uninit);
-
-void cvm_oct_mem_cleanup(void)
-{
-	if (USE_32BIT_SHARED)
-		return;
-
-	if (cvm_oct_kmem_128)
-		kmem_cache_shrink(cvm_oct_kmem_128);
-	if (cvm_oct_kmem_1024)
-		kmem_cache_shrink(cvm_oct_kmem_1024);
-}
-EXPORT_SYMBOL(cvm_oct_mem_cleanup);
+arch_initcall(cvm_oct_mem_init);
diff --git a/drivers/net/octeon/ethernet-mem.h b/drivers/net/octeon/ethernet-mem.h
index c3533ce..ecd0d6a 100644
--- a/drivers/net/octeon/ethernet-mem.h
+++ b/drivers/net/octeon/ethernet-mem.h
@@ -27,7 +27,6 @@
 
 int cvm_oct_mem_fill_fpa(int pool, int size, int elements);
 void cvm_oct_mem_empty_fpa(int pool, int size, int elements);
-int cvm_oct_mem_init(void);
 void cvm_oct_mem_cleanup(void);
 void cvm_oct_mem_uninit(void);
 void cvm_oct_mem_cleanup(void);
diff --git a/drivers/net/octeon/ethernet.c b/drivers/net/octeon/ethernet.c
index 8515061..0b84a6d 100644
--- a/drivers/net/octeon/ethernet.c
+++ b/drivers/net/octeon/ethernet.c
@@ -758,10 +758,6 @@ static int __init cvm_oct_init_module(void)
 	else
 		cvm_oct_mac_addr_offset = 0;
 
-	rv = cvm_oct_mem_init();
-	if (rv)
-		goto err;
-
 	cvm_oct_poll_queue = create_singlethread_workqueue("octeon-ethernet");
 	if (cvm_oct_poll_queue == NULL) {
 		pr_err("octeon-ethernet: Cannot create workqueue");
-- 
1.7.0

