From f62e29b4c79241cd9d8567a022518ebac66e6ae2 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 8 Jul 2011 16:37:29 -0700
Subject: [PATCH 71/97] MIPS: Octeon: Use phys_to_virt() instead of PHYS_TO_XKSEG_CACHED().

Source: Cavium SDK 2.1.0-407

Signed-off-by: David Daney <david.daney@cavium.com>
Integrated-by: Phil Staub <Phil.Staub@windriver.com>
---
 arch/mips/cavium-octeon/setup.c |   12 +++++-------
 arch/mips/cavium-octeon/smp.c   |    8 ++++----
 2 files changed, 9 insertions(+), 11 deletions(-)

diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index 386f1c0..d3ae782 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -670,17 +670,16 @@ void __init native_prom_init(void)
 
 	octeon_feature_init();
 
-	octeon_bootinfo =
-		cvmx_phys_to_ptr(octeon_boot_desc_ptr->cvmx_desc_vaddr);
+	octeon_bootinfo = phys_to_virt(octeon_boot_desc_ptr->cvmx_desc_vaddr);
 	MAX_MEMORY = (uint64_t)octeon_bootinfo->dram_size << 20;
-	cvmx_bootmem_init((u64)cvmx_phys_to_ptr(octeon_bootinfo->phy_mem_desc_addr));
+	cvmx_bootmem_init((u64)phys_to_virt(octeon_bootinfo->phy_mem_desc_addr));
 
 
 	sysinfo = cvmx_sysinfo_get();
 	memset(sysinfo, 0, sizeof(*sysinfo));
 	sysinfo->system_dram_size = octeon_bootinfo->dram_size << 20;
 	sysinfo->phy_mem_desc_addr =
-		(u64)cvmx_phys_to_ptr(octeon_bootinfo->phy_mem_desc_addr);
+		(u64)phys_to_virt(octeon_bootinfo->phy_mem_desc_addr);
 	sysinfo->core_mask = octeon_bootinfo->core_mask;
 	sysinfo->exception_base_addr = octeon_bootinfo->exception_base_addr;
 	sysinfo->cpu_clock_hz = octeon_bootinfo->eclock_hz;
@@ -794,8 +793,7 @@ void __init native_prom_init(void)
 	arcs_cmdline[0] = 0;
 	argc = octeon_boot_desc_ptr->argc;
 	for (i = 0; i < argc; i++) {
-		const char *arg =
-			cvmx_phys_to_ptr(octeon_boot_desc_ptr->argv[i]);
+		const char *arg = phys_to_virt(octeon_boot_desc_ptr->argv[i]);
 #ifndef CONFIG_CRASH_DUMP
 		if ((strncmp(arg, "MEM=", 4) == 0) ||
 		    (strncmp(arg, "mem=", 4) == 0)) {
@@ -873,7 +871,7 @@ void __init native_prom_init(void)
 		board_be_handler = octeon2_be_handler;
 
 
-	labi = (struct linux_app_boot_info *)PHYS_TO_XKSEG_CACHED(LABI_ADDR_IN_BOOTLOADER);
+	labi = phys_to_virt(LABI_ADDR_IN_BOOTLOADER);
 	if (labi->labi_signature == LABI_SIGNATURE)
 		octeon_bootloader_entry_addr = labi->InitTLBStart_addr;
 
diff --git a/arch/mips/cavium-octeon/smp.c b/arch/mips/cavium-octeon/smp.c
index 1ea2b75..06b5d3d 100644
--- a/arch/mips/cavium-octeon/smp.c
+++ b/arch/mips/cavium-octeon/smp.c
@@ -174,7 +174,7 @@ static void octeon_smp_setup(void)
 	}
 	memset(octeon_hotplug_global_ptr, 0, CVMX_APP_HOTPLUG_INFO_REGION_SIZE);
 
-	labi = (struct linux_app_boot_info *)PHYS_TO_XKSEG_CACHED(LABI_ADDR_IN_BOOTLOADER);
+	labi = phys_to_virt(LABI_ADDR_IN_BOOTLOADER);
 	octeon_hotplug_global_ptr->avail_coremask = labi->avail_coremask;
 
 	pr_info("Cavium Hotplug: Available coremask 0x%x\n",
@@ -269,7 +269,7 @@ void octeon_prepare_cpus(unsigned int max_cpus)
 	unsigned long t;
 	struct linux_app_boot_info *labi;
 
-	labi = (struct linux_app_boot_info *)PHYS_TO_XKSEG_CACHED(LABI_ADDR_IN_BOOTLOADER);
+	labi = phys_to_virt(LABI_ADDR_IN_BOOTLOADER);
 
 	if (labi->labi_signature != LABI_SIGNATURE)
 		panic("The bootloader version on this board is incorrect.");
@@ -392,7 +392,7 @@ static void octeon_cpu_die(unsigned int cpu)
 	if (!block_desc) {
 		struct linux_app_boot_info *labi;
 
-		labi = (struct linux_app_boot_info *)PHYS_TO_XKSEG_CACHED(LABI_ADDR_IN_BOOTLOADER);
+		labi = phys_to_virt(LABI_ADDR_IN_BOOTLOADER);
 
 		labi->avail_coremask |= mask;
 		new_mask = labi->avail_coremask;
@@ -434,7 +434,7 @@ static int octeon_update_boot_vector(unsigned int cpu)
 	if (!block_desc) {
 		struct linux_app_boot_info *labi;
 
-		labi = (struct linux_app_boot_info *)PHYS_TO_XKSEG_CACHED(LABI_ADDR_IN_BOOTLOADER);
+		labi = phys_to_virt(LABI_ADDR_IN_BOOTLOADER);
 
 		avail_coremask = labi->avail_coremask;
 		labi->avail_coremask &= ~(1 << coreid);
-- 
1.7.0

