From 1643a7f0cee9b89ee86483d4ef99ecc875a04850 Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Fri, 24 Sep 2010 10:09:03 -0700
Subject: [PATCH 82/97] MIPS: Octeon: Enable back trace buffer driver in OcteonII.

Source: Cavium SDK 2.1.0-407

Fix the address and address mask used for OcteonII. For now use only
one trigger event for OcteonII, as the memory is uniform. Use the
correct define for trace buffer interrupt.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
Integrated-by: Phil Staub <Phil.Staub@windriver.com>
---
 arch/mips/cavium-octeon/Kconfig      |    2 +-
 arch/mips/cavium-octeon/octeon-tra.c |   22 +++++++++++-----------
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig
index 9b5d28e..58bfa9f 100644
--- a/arch/mips/cavium-octeon/Kconfig
+++ b/arch/mips/cavium-octeon/Kconfig
@@ -278,7 +278,7 @@ config CAVIUM_OCTEON_WATCHDOG
 
 config CAVIUM_OCTEON_TRA
        tristate "Octeon trace buffer (TRA) driver"
-       depends on CPU_CAVIUM_OCTEON && !CAVIUM_OCTEON2
+       depends on CPU_CAVIUM_OCTEON
        default n
        help
          This option enables a driver for the Octeon trace buffer. By default
diff --git a/arch/mips/cavium-octeon/octeon-tra.c b/arch/mips/cavium-octeon/octeon-tra.c
index 4c142e1..178f0a3 100644
--- a/arch/mips/cavium-octeon/octeon-tra.c
+++ b/arch/mips/cavium-octeon/octeon-tra.c
@@ -112,26 +112,26 @@ static int __init octeon_tra_init(void)
 	   and 28-0. If we were monitoring a lower address we couldn't ignore
 	   so many bits.
 	   The memory is uniform in Octeon2, set the trigger to match invalid
-	   access at 512MB where the kernel is loaded. */
+	   access at end of DRAM (16GB + 256M hole). */
 	address = OCTEON_IS_MODEL(OCTEON_CN3XXX) || OCTEON_IS_MODEL(OCTEON_CN5XXX)
-		? 0x420000000ull : 0x20000000ull;
+		? 0x420000000ull : 0x410000000ull;
 	address_mask = address;
 
 	/* Setup the trigger 0 to stop the TRA when a specific memory address
 	   matches */
-	filter = (OCTEON_IS_MODEL(OCTEON_CN3XXX) || OCTEON_IS_MODEL(OCTEON_CN5XXX))
-		? 0x103ff : 0xccffff00e9ff033eull;
-
 	cvmx_tra_trig_setup(0, filter, source_filter, dest_filter, address, address_mask);
 
 	/* Setup the 2nd trigger to match a different address. Lets try
-	   the region 0x400000000-0x40fffffff. Everything else is the same */
-	address = 0x400000000ull;
-	address_mask = 0xfffffffff0000000ull;
-	cvmx_tra_trig_setup(1, filter, source_filter, dest_filter, address, address_mask);
+	   the region 0x400000000-0x40fffffff. */
+	if (OCTEON_IS_MODEL(OCTEON_CN3XXX) || OCTEON_IS_MODEL(OCTEON_CN5XXX)) {
+		address = 0x400000000ull;
+		address_mask = 0xfffffffff0000000ull;
+		cvmx_tra_trig_setup(1, filter, source_filter, dest_filter,
+				    address, address_mask);
+	}
 
 	/* Hook up to the trace buffer interrupt so we know when a trigger happens */
-	if (request_irq(OCTEON_IRQ_TRACE, octeon_tra_interrupt, IRQF_SHARED,
+	if (request_irq(OCTEON_IRQ_TRACE0, octeon_tra_interrupt, IRQF_SHARED,
 			"Trace buffer", octeon_tra_interrupt))
 		pr_err("Octeon TRA: failed to reserve TRACE IRQ\n");
 
@@ -150,7 +150,7 @@ static void __exit octeon_tra_cleanup(void)
 	if (!octeon_has_feature(OCTEON_FEATURE_TRA))
 		return;
 	cvmx_tra_enable(0);
-	free_irq(OCTEON_IRQ_TRACE, octeon_tra_interrupt);
+	free_irq(OCTEON_IRQ_TRACE0, octeon_tra_interrupt);
 }
 
 MODULE_LICENSE("GPL");
-- 
1.7.0

