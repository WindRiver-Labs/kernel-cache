From f6b826496d21706d59a9361ad32858dd4af42ba1 Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Thu, 14 Apr 2011 17:43:12 +0800
Subject: [PATCH 09/27] powerpc/44x: enable setting the physical start address

On ACP34xx board, uboot load kernel to physical address 0x400000,
We need to enable CONFIG_PHYSICAL_START_BOOL to configure
CONFIG_PHYSICAL_START to 0x400000.

CONFIG_KERNEL_START should be configured to 0xc0400000 which is mapped
to phyical address 0x400000.

When calculate the address of virtual address of LR after remapped in
boot routine, r22 stores the LR address before mapping, KERNELBASE
stands for the start of virtual address for kernel after mapping.

Since the page size for kernel is 256M, KERNELBASE should be aligned
to 256M boundary, r22 should be mask off the most significant 4 bits
so that they can be used to caculate virtual address of LR.

Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 arch/powerpc/Kconfig           |    2 +-
 arch/powerpc/kernel/head_44x.S |   13 +++++++++++++
 2 files changed, 14 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/Kconfig b/arch/powerpc/Kconfig
index 95104d7..b18b00c 100644
--- a/arch/powerpc/Kconfig
+++ b/arch/powerpc/Kconfig
@@ -947,7 +947,7 @@ config KERNEL_START
 
 config PHYSICAL_START_BOOL
 	bool "Set physical address where the kernel is loaded"
-	depends on ADVANCED_OPTIONS && FLATMEM && FSL_BOOKE
+	depends on ADVANCED_OPTIONS && FLATMEM && (FSL_BOOKE || PPC_47x)
 	help
 	  This gives the physical address where the kernel is loaded.
 
diff --git a/arch/powerpc/kernel/head_44x.S b/arch/powerpc/kernel/head_44x.S
index eea0e10..8c38020 100644
--- a/arch/powerpc/kernel/head_44x.S
+++ b/arch/powerpc/kernel/head_44x.S
@@ -1166,7 +1166,20 @@ head_start_common:
 	lis	r4,interrupt_base@h	/* IVPR only uses the high 16-bits */
 	mtspr	SPRN_IVPR,r4
 
+#ifdef CONFIG_PPC_47x
+	/*
+	 * If the kernel was loaded at a non-zero 256 MB page, we need to
+	 * mask off the most significant 4 bits to get the relative address
+	 * from the start of physical memory
+	 */
+
+	rlwinm	r22,r22,0,4,31
+	lis r23, KERNELBASE@h
+	rlwinm	r23,r23,0,0,3
+	add	r22,r22,r23
+#else
 	addis	r22,r22,KERNELBASE@h
+#endif
 	mtlr	r22
 	isync
 	blr
-- 
1.7.0.5

