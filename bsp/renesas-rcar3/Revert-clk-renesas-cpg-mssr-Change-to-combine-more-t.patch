From 2b2775eafeae5c0591e6427a65c71c05fd90afd1 Mon Sep 17 00:00:00 2001
From: Takeshi Kihara <takeshi.kihara.df@renesas.com>
Date: Wed, 8 Feb 2017 13:03:19 +0900
Subject: [PATCH 1809/2066] Revert "clk: renesas: cpg-mssr: Change to combine
 more than one clocks to device"

This reverts commit c1e6e2c38acb ("clk: renesas: cpg-mssr: Change to
combine more than one clocks to device").

It was not permitted by upstream.

Signed-off-by: Takeshi Kihara <takeshi.kihara.df@renesas.com>
---
 drivers/clk/renesas/renesas-cpg-mssr.c |   51 +++++++++++++++-----------------
 1 files changed, 24 insertions(+), 27 deletions(-)

diff --git a/drivers/clk/renesas/renesas-cpg-mssr.c b/drivers/clk/renesas/renesas-cpg-mssr.c
index 4480a1c..347cc3c 100644
--- a/drivers/clk/renesas/renesas-cpg-mssr.c
+++ b/drivers/clk/renesas/renesas-cpg-mssr.c
@@ -462,8 +462,6 @@ static bool cpg_mssr_is_pm_clk(const struct of_phandle_args *clkspec,
 
 	switch (clkspec->args[0]) {
 	case CPG_CORE:
-		if (!pd->num_core_pm_clks)
-			return true;
 		for (i = 0; i < pd->num_core_pm_clks; i++)
 			if (clkspec->args[1] == pd->core_pm_clks[i])
 				return true;
@@ -485,7 +483,6 @@ int cpg_mssr_attach_dev(struct generic_pm_domain *unused, struct device *dev)
 	struct clk *clk;
 	int i = 0;
 	int error;
-	bool had_clk = false;
 
 	if (!pd) {
 		dev_dbg(dev, "CPG/MSSR clock domain not yet available\n");
@@ -494,40 +491,40 @@ int cpg_mssr_attach_dev(struct generic_pm_domain *unused, struct device *dev)
 
 	while (!of_parse_phandle_with_args(np, "clocks", "#clock-cells", i,
 					   &clkspec)) {
-		i++;
-		if (!cpg_mssr_is_pm_clk(&clkspec, pd))
-			continue;
-
-		if (!had_clk) {
-			error = pm_clk_create(dev);
-			if (error) {
-				dev_err(dev, "pm_clk_create failed %d\n",
-					error);
-				return error;
-			}
-			had_clk = true;
-		}
+		if (cpg_mssr_is_pm_clk(&clkspec, pd))
+			goto found;
 
-		clk = of_clk_get_from_provider(&clkspec);
 		of_node_put(clkspec.np);
+		i++;
+	}
 
-		if (IS_ERR(clk))
-			goto fail_destroy;
+	return 0;
 
-		error = pm_clk_add_clk(dev, clk);
-		if (error) {
-			dev_err(dev, "pm_clk_add_clk %pC failed %d\n",
-				clk, error);
-			goto fail_put;
-		}
+found:
+	clk = of_clk_get_from_provider(&clkspec);
+	of_node_put(clkspec.np);
+
+	if (IS_ERR(clk))
+		return PTR_ERR(clk);
+
+	error = pm_clk_create(dev);
+	if (error) {
+		dev_err(dev, "pm_clk_create failed %d\n", error);
+		goto fail_put;
+	}
+
+	error = pm_clk_add_clk(dev, clk);
+	if (error) {
+		dev_err(dev, "pm_clk_add_clk %pC failed %d\n", clk, error);
+		goto fail_destroy;
 	}
 
 	return 0;
 
-fail_put:
-	clk_put(clk);
 fail_destroy:
 	pm_clk_destroy(dev);
+fail_put:
+	clk_put(clk);
 	return error;
 }
 
-- 
1.7.5.4

