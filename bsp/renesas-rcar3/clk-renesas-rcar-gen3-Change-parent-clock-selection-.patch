From 4a2e9f3288ca51c739f71ed26dd36889d4035b82 Mon Sep 17 00:00:00 2001
From: Takeshi Kihara <takeshi.kihara.df@renesas.com>
Date: Fri, 18 Nov 2016 11:05:48 +0900
Subject: [PATCH 1208/2066] clk: renesas: rcar-gen3: Change parent clock
 selection of RCLK

In R8A7795 ES2.0 SoC, parent clock selection of RCLK is changed from
CPG RCKCR.CLSEL register to MD28. This patch corresponds to this change.

[takeshi.kihara.df: Removed __initconst for r8a7795_es{10,11} and
 r8a7796_es10]
[takeshi.kihara.df: Separated r8a7795_es10 and r8a7795_es11 from
 r8a7795_es10_11]
[takeshi.kihara.df: Used rcar_rst_read_mode_pins() to get cpg_mode]
Signed-off-by: Takeshi Kihara <takeshi.kihara.df@renesas.com>
[zou:Original patch taken from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
 v4.9/rcar-3.5.1]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/clk/renesas/rcar-gen3-cpg.c |   54 +++++++++++++++++++++++++++-------
 1 files changed, 43 insertions(+), 11 deletions(-)

diff --git a/drivers/clk/renesas/rcar-gen3-cpg.c b/drivers/clk/renesas/rcar-gen3-cpg.c
index 6347f5e..9600276 100644
--- a/drivers/clk/renesas/rcar-gen3-cpg.c
+++ b/drivers/clk/renesas/rcar-gen3-cpg.c
@@ -20,10 +20,27 @@
 #include <linux/init.h>
 #include <linux/io.h>
 #include <linux/slab.h>
+#include <linux/sys_soc.h>
+#include <linux/soc/renesas/rcar-rst.h>
 
 #include "renesas-cpg-mssr.h"
 #include "rcar-gen3-cpg.h"
 
+static const struct soc_device_attribute r8a7795es10[] = {
+	{ .soc_id = "r8a7795", .revision = "ES1.0" },
+	{ /* sentinel */ }
+};
+
+static const struct soc_device_attribute r8a7795es11[] = {
+	{ .soc_id = "r8a7795", .revision = "ES1.1" },
+	{ /* sentinel */ }
+};
+
+static const struct soc_device_attribute r8a7796es10[] = {
+	{ .soc_id = "r8a7796", .revision = "ES1.0" },
+	{ /* sentinel */ }
+};
+
 #define CPG_PLL0CR		0x00d8
 #define CPG_PLL2CR		0x002c
 #define CPG_PLL4CR		0x01f4
@@ -455,6 +472,8 @@ struct clk * __init rcar_gen3_cpg_clk_register(struct device *dev,
 	unsigned int mult = 1;
 	unsigned int div = 1;
 	u32 value;
+	u32 cpg_mode;
+	int error;
 
 	parent = clks[core->parent];
 	if (IS_ERR(parent))
@@ -510,18 +529,31 @@ struct clk * __init rcar_gen3_cpg_clk_register(struct device *dev,
 		return cpg_sd_clk_register(core, base, __clk_get_name(parent));
 
 	case CLK_TYPE_GEN3_R:
-		/*
-		 * RINT is default.
-		 * Only if EXTALR is populated, we switch to it.
-		 */
-		value = readl(base + CPG_RCKCR) & 0x3f;
-
-		if (clk_get_rate(clks[cpg_clk_extalr])) {
-			parent = clks[cpg_clk_extalr];
-			value |= BIT(15);
+		if (soc_device_match(r8a7795es10) ||
+		    soc_device_match(r8a7795es11) ||
+		    soc_device_match(r8a7796es10)) {
+			/*
+			 * RINT is default.
+			 * Only if EXTALR is populated, we switch to it.
+			 */
+			value = readl(base + CPG_RCKCR) & 0x3f;
+
+			if (clk_get_rate(clks[cpg_clk_extalr])) {
+				parent = clks[cpg_clk_extalr];
+				value |= BIT(15);
+			}
+
+			writel(value, base + CPG_RCKCR);
+		} else {
+
+			error = rcar_rst_read_mode_pins(&cpg_mode);
+			if (error)
+				return ERR_PTR(error);
+
+			/* Select parent clock of RCLK by MD28 */
+			if (cpg_mode & BIT(28))
+				parent = clks[cpg_clk_extalr];
 		}
-
-		writel(value, base + CPG_RCKCR);
 		break;
 
 	case CLK_TYPE_GEN3_Z:
-- 
1.7.5.4

