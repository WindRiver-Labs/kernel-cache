From 9e2a0874c612b7db20d68437879890b3ce12879c Mon Sep 17 00:00:00 2001
From: Geert Uytterhoeven <geert+renesas@glider.be>
Date: Fri, 21 Aug 2015 20:02:52 +0200
Subject: [PATCH 0241/2066] serial: sh-sci: Use tty_insert_flip_string() for
 DMA receive

upstream 47b0e94a67d4ab771a05dd23a2c5cc5c2c533fdc commit

Switch from using tty_buffer_request_room() and looping over
tty_insert_flip_char() to tty_insert_flip_string().
Keep track of buffer overruns in the icount structure, like
serial_core.c does.

Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/tty/serial/sh-sci.c |   20 ++++++++------------
 1 files changed, 8 insertions(+), 12 deletions(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 16ec8a2..280d008 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1306,22 +1306,18 @@ static int sci_dma_rx_push(struct sci_port *s, struct scatterlist *sg,
 {
 	struct uart_port *port = &s->port;
 	struct tty_port *tport = &port->state->port;
-	int i, room;
+	int copied;
 
-	room = tty_buffer_request_room(tport, count);
-
-	if (room < count)
+	copied = tty_insert_flip_string(tport, sg_virt(sg), count);
+	if (copied < count) {
 		dev_warn(port->dev, "Rx overrun: dropping %zu bytes\n",
-			 count - room);
-	if (!room)
-		return room;
-
-	for (i = 0; i < room; i++)
-		tty_insert_flip_char(tport, ((u8 *)sg_virt(sg))[i], TTY_NORMAL);
+			 count - copied);
+		port->icount.buf_overrun++;
+	}
 
-	port->icount.rx += room;
+	port->icount.rx += copied;
 
-	return room;
+	return copied;
 }
 
 static int sci_dma_rx_find_active(struct sci_port *s)
-- 
1.7.5.4

