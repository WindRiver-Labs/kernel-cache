From 45fb56bfef48ec07aa99eb39c061c8adec56f87b Mon Sep 17 00:00:00 2001
From: Dien Pham <dien.pham.ry@renesas.com>
Date: Thu, 29 Sep 2016 10:44:30 +0700
Subject: [PATCH 1725/2066] usb: renesas_usbhs: Fix issue when hotplug
 workqueue run before resume

With below setting and calling flow,
after system resumes from System Suspend To RAM,
the hotplug workqueue will run and
it makes CFIFO register setting before usbhsc_resume() run.
And timeout error will occur in usbhsf_fifo_select().

So, this patch tries to avoid above situation.

Setting:
	INIT_DELAYED_WORK(&priv->notify_hotplug_work, usbhsc_notify_hotplug);
	dfunc->notify_hotplug	= usbhsc_drvcllbck_notify_hotplug;

Calling flow:
	usbhsc_drvcllbck_notify_hotplug()
	usbhsc_notify_hotplug  (go through priv->notify_hotplug_work)
	usbhsc_hotplug()
	usbhs_mod_call(priv, start, priv)
	usbhsg_start()
	usbhsg_try_start()
	usbhs_pipe_init()
	usbhs_pipe_clear()
	usbhs_fifo_clear_dcp()
	usbhsf_fifo_select()

Rework:
If it will prevent the hotplug notification during suspend, it should
be code that makes it easy to understand and general. This rework adds
the suspend status in private structure of usbhs. And it will prevent
the hotplug notification with using it.

Signed-off-by: Dien Pham <dien.pham.ry@renesas.com>
Signed-off-by: Gaku Inami <gaku.inami.xw@bp.renesas.com>
Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
[zou:Original patch taken from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
 v4.9/rcar-3.5.1]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/usb/renesas_usbhs/common.c |    8 ++++++++
 drivers/usb/renesas_usbhs/common.h |    2 ++
 2 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/drivers/usb/renesas_usbhs/common.c b/drivers/usb/renesas_usbhs/common.c
index 8aac1e5..5fc8794 100644
--- a/drivers/usb/renesas_usbhs/common.c
+++ b/drivers/usb/renesas_usbhs/common.c
@@ -443,6 +443,10 @@ static void usbhsc_notify_hotplug(struct work_struct *work)
 	struct usbhs_priv *priv = container_of(work,
 					       struct usbhs_priv,
 					       notify_hotplug_work.work);
+
+	if (priv->suspended)
+		return;
+
 	usbhsc_hotplug(priv);
 }
 
@@ -736,6 +740,8 @@ static int usbhsc_suspend(struct device *dev)
 	struct usbhs_priv *priv = dev_get_drvdata(dev);
 	struct usbhs_mod *mod = usbhs_mod_get_current(priv);
 
+	priv->suspended = 1;
+
 	if (mod) {
 		usbhs_mod_call(priv, stop, priv);
 		usbhs_mod_change(priv, -1);
@@ -757,6 +763,8 @@ static int usbhsc_resume(struct device *dev)
 
 	usbhs_platform_call(priv, phy_reset, pdev);
 
+	priv->suspended = 0;
+
 	usbhsc_drvcllbck_notify_hotplug(pdev);
 
 	return 0;
diff --git a/drivers/usb/renesas_usbhs/common.h b/drivers/usb/renesas_usbhs/common.h
index 8c5fc12a..6e02aa3 100644
--- a/drivers/usb/renesas_usbhs/common.h
+++ b/drivers/usb/renesas_usbhs/common.h
@@ -280,6 +280,8 @@ struct usbhs_priv {
 
 	struct usb_phy *usb_phy;
 	struct phy *phy;
+
+	int suspended;
 };
 
 /*
-- 
1.7.5.4

