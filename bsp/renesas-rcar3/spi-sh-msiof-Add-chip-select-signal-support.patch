From b7b350ac8b610b4d6d9885dd098e7dd0274b0e64 Mon Sep 17 00:00:00 2001
From: Hiromitsu Yamasaki <hiromitsu.yamasaki.ym@renesas.com>
Date: Fri, 2 Dec 2016 20:30:45 +0900
Subject: [PATCH 1332/2066] spi: sh-msiof: Add chip select signal support

The chip select signal MSIOF_SYNC only available.
This patch adds MSIOF_SS1 and MSIOF_SS2 chip select signal
support in addition to MSIOF_SYNC.

By the member chip_select of struct spi_device, select MSIOF_SYNC,
MSIOF_SS1 and MSIOF_SS2, set SYNCCH[1:0] in SITMDR1 register.

chip_select value:
 0 : set MSIOF_SYNC signal
 1 : set MSIOF_SS1 signal
 2 : set MSIOF_SS2 signal

SYNCCH[1:0] bit field:
 00: The frame synchronization signal output at MSIOF_SYNC.
 01: The frame synchronization signal output at MSIOF_SS1.
 10: The frame synchronization signal output at MSIOF_SS2.

<devicetree example>

&pfc {
        ...
        msiof1_pins: spi2 {
                groups = "msiof1_clk_c", "msiof1_sync_c",
                                "msiof1_rxd_c",  "msiof1_txd_c",
                                "msiof1_ss1_c",  "msiof1_ss2_c";
                function = "msiof1";
        };
        ...
};

&msiof1 {
        pinctrl-0 = <&msiof1_pins>;
        pinctrl-names = "default";
        num-cs = <3>;
        status = "okay";

        spidev@0 {
                compatible = "renesas,sh-msiof";
                reg = <0>;
		...
        };
        spidev@1 {
                compatible = "renesas,sh-msiof";
                reg = <1>;
		...
        };
        spidev@2 {
                compatible = "renesas,sh-msiof";
                reg = <2>;
		...
        };
};

Signed-off-by: Hiromitsu Yamasaki <hiromitsu.yamasaki.ym@renesas.com>
[zou:Original patch taken from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
 v4.9/rcar-3.5.1]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/spi/spi-sh-msiof.c |   18 ++++++++++++++++--
 1 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/drivers/spi/spi-sh-msiof.c b/drivers/spi/spi-sh-msiof.c
index edf1842..6a15b02 100644
--- a/drivers/spi/spi-sh-msiof.c
+++ b/drivers/spi/spi-sh-msiof.c
@@ -57,6 +57,7 @@ struct sh_msiof_spi_priv {
 	unsigned int tx_fifo_size;
 	unsigned int rx_fifo_size;
 	int mode;
+	int cs;
 	void *tx_dma_page;
 	void *rx_dma_page;
 	dma_addr_t tx_dma_addr;
@@ -87,6 +88,9 @@ struct sh_msiof_spi_priv {
 #define MDR1_SYNCMD_MASK 0x30000000 /* SYNC Mode */
 #define MDR1_SYNCMD_SPI	 0x20000000 /*   Level mode/SPI */
 #define MDR1_SYNCMD_LR	 0x30000000 /*   L/R mode */
+#define MDR1_SYNCCH_MASK 0x0c000000 /* SYNC Channel Select */
+#define MDR1_SYNCCH_SS1  0x04000000 /*   MSIOF_SS1 */
+#define MDR1_SYNCCH_SS2  0x08000000 /*   MSIOF_SS2 */
 #define MDR1_SYNCAC_SHIFT	 25 /* Sync Polarity (1 = Active-low) */
 #define MDR1_BITLSB_SHIFT	 24 /* MSB/LSB First (1 = LSB first) */
 #define MDR1_DTDL_MASK   0x00700000 /* Data Pin Bit Delay Mask */
@@ -376,9 +380,15 @@ static void sh_msiof_spi_set_pin_regs(struct sh_msiof_spi_priv *p,
 			tmp |= 1 << MDR1_DTDL_SHIFT;
 		}
 	}
-	if (p->mode == SPI_MSIOF_MASTER)
+	if (p->mode == SPI_MSIOF_MASTER) {
+		if (p->cs == 1)
+			tmp |= MDR1_SYNCCH_SS1;
+		else if (p->cs == 2)
+			tmp |= MDR1_SYNCCH_SS2;
+		else
+			tmp &= ~MDR1_SYNCCH_MASK;
 		sh_msiof_write(p, TMDR1, tmp | MDR1_TRMD | TMDR1_PCON);
-	else
+	} else
 		sh_msiof_write(p, TMDR1, tmp | TMDR1_PCON);
 	if (soc_device_match(r8a7795es10)) {
 		if (p->mode == SPI_MSIOF_MASTER) {
@@ -595,6 +605,8 @@ static int sh_msiof_spi_setup(struct spi_device *spi)
 		spi->cs_gpio = (uintptr_t)spi->controller_data;
 	}
 
+	p->cs = spi->chip_select;
+
 	/* Configure pins before deasserting CS */
 	sh_msiof_spi_set_pin_regs(p, !!(spi->mode & SPI_CPOL),
 				  !!(spi->mode & SPI_CPHA),
@@ -617,6 +629,8 @@ static int sh_msiof_prepare_message(struct spi_master *master,
 	struct sh_msiof_spi_priv *p = spi_master_get_devdata(master);
 	const struct spi_device *spi = msg->spi;
 
+	p->cs = spi->chip_select;
+
 	/* Configure pins before asserting CS */
 	sh_msiof_spi_set_pin_regs(p, !!(spi->mode & SPI_CPOL),
 				  !!(spi->mode & SPI_CPHA),
-- 
1.7.5.4

