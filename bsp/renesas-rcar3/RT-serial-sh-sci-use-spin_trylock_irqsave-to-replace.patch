From e02f2f4b52f7b58a3ff25f307dcde14cfa182a3a Mon Sep 17 00:00:00 2001
From: zou cao <cao.zou@windriver.com>
Date: Mon, 19 Jun 2017 16:51:04 +0800
Subject: [PATCH] RT: serial: sh-sci: use spin_trylock_irqsave to replace
 spin_trylock

Use spin_trylock_irqsave to replace spin_trylock, otherwise it will
cause a calltrace as follow:
BUG: sleeping function called from invalid context at kernel/locking/rtmutex.c:917
in_atomic(): 0, irqs_disabled(): 128, pid: 521, name: tcf-agent.init
CPU: 0 PID: 521 Comm: tcf-agent.init Not tainted 4.1.21-rt13-WR8.0.0.0_preempt-rt #2
Hardware name: Renesas Salvator-X board based on r8a7795 (DT)
Call trace:
[<ffff80000008a540>] dump_backtrace+0x0/0x128
[<ffff80000008a68c>] show_stack+0x24/0x30
[<ffff800000858e9c>] dump_stack+0x8c/0xb0
[<ffff8000000c75b0>] ___might_sleep+0x128/0x1a0
[<ffff80000085dc54>] rt_spin_lock+0x2c/0x40
[<ffff8000004fbc28>] serial_console_write+0x198/0x1a8
[<ffff8000000ea934>] call_console_drivers.constprop.13+0xec/0x1b0
[<ffff8000000ec000>] console_unlock+0x2c8/0x4b0
[<ffff8000000ec564>] vprintk_emit+0x37c/0x578
[<ffff8000008572f4>] printk_emit+0x80/0x94
[<ffff8000000ec86c>] devkmsg_write+0xb4/0x108
[<ffff8000001dc398>] new_sync_write+0x90/0xe8
[<ffff8000001dc464>] __vfs_write+0x74/0x90
[<ffff8000001dcea4>] vfs_write+0x9c/0x198
[<ffff8000001dd894>] SyS_write+0x54/0xb0ixed

Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/tty/serial/sh-sci.c |    8 +++-----
 1 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 0188c95..c9e5c02 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -3062,16 +3062,15 @@ static void serial_console_write(struct console *co, const char *s,
 	unsigned long flags;
 	int locked = 1;
 
-	local_irq_save(flags);
 #if defined(SUPPORT_SYSRQ)
 	if (port->sysrq)
 		locked = 0;
 	else
 #endif
 	if (oops_in_progress)
-		locked = spin_trylock(&port->lock);
+		locked = spin_trylock_irqsave(&port->lock, flags);
 	else
-		spin_lock(&port->lock);
+		spin_lock_irqsave(&port->lock, flags);
 
 	/* first save SCSCR then disable interrupts, keep clock source */
 	ctrl = serial_port_in(port, SCSCR);
@@ -3090,8 +3089,7 @@ static void serial_console_write(struct console *co, const char *s,
 	serial_port_out(port, SCSCR, ctrl);
 
 	if (locked)
-		spin_unlock(&port->lock);
-	local_irq_restore(flags);
+		spin_unlock_irqrestore(&port->lock, flags);
 }
 
 static int serial_console_setup(struct console *co, char *options)
-- 
1.7.5.4

