From 76c5ef8cb210f6f25e7ae891514a9be505a8fdbb Mon Sep 17 00:00:00 2001
From: Takeshi Kihara <takeshi.kihara.df@renesas.com>
Date: Thu, 22 Oct 2015 20:23:01 +0900
Subject: [PATCH 1320/2066] serial: sh-sci: Fix transfer sequence of unsupport
 DMA transfer

In several R-Car SoC, the channel which is supporting the DMA transfer,
and the channel which is not supporting the DMA transfer are present in
(H)SCIx device.

On this SoC, when a DMA transfer of (H)SCIx device is enabled,
the following errors occur frequently:

    sh-sci xxx: dma_request_slave_channel_compat failed

When the device tree is available, sci_parse_dt () sets the value of
"dmas" property to "dma_slave_tx" and "dma_slave_rx". And
sci_request_dma() does not call dma_request_slave_channel_compat()
regardless of the existence of the device tree, when "dma_slave_tx" or
"dma_slave_rx" is 0.

Signed-off-by: Takeshi Kihara <takeshi.kihara.df@renesas.com>
[zou:Original patch taken from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
 v4.9/rcar-3.5.1]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/tty/serial/sh-sci.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 8e297b0..83a5b19 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1470,8 +1470,7 @@ static void sci_request_dma(struct uart_port *port)
 
 	dev_dbg(port->dev, "%s: port %d\n", __func__, port->line);
 
-	if (!port->dev->of_node &&
-	    (s->cfg->dma_slave_tx <= 0 || s->cfg->dma_slave_rx <= 0))
+	if (s->cfg->dma_slave_tx <= 0 || s->cfg->dma_slave_rx <= 0)
 		return;
 
 	s->cookie_tx = -EINVAL;
-- 
1.7.5.4

