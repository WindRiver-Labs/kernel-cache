From d69eb68d9ebcc89ecc4399c1c11188ede3f9950d Mon Sep 17 00:00:00 2001
From: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date: Thu, 18 Feb 2016 08:16:04 +0000
Subject: [PATCH 0621/2066] ASoC: rsnd: fixup forever loop bug on SSI

upstream 5bf5d8fc7f5a8a1e75413939e4bdb00ebc2d5610 commit

commit b5b442abd9 ("ASoC: rsnd: add .irq callback")
added .irq support, and it cares both parent SSI and normal SSI.
But it should care only normal SSI. Otherwise SSI might be
forever loop if SSI is used as both parent SSI and normal SSI
(= 2 users), and if under/over run error happen. Because irq disable
do nothing in such case. This patch solve this issue.

Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Signed-off-by: Mark Brown <broonie@kernel.org>
---
 sound/soc/sh/rcar/ssi.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/sound/soc/sh/rcar/ssi.c b/sound/soc/sh/rcar/ssi.c
index c7d9b73..18ba72a 100644
--- a/sound/soc/sh/rcar/ssi.c
+++ b/sound/soc/sh/rcar/ssi.c
@@ -149,13 +149,12 @@ static int rsnd_ssi_irq(struct rsnd_mod *mod,
 			struct rsnd_priv *priv,
 			int enable)
 {
-	struct rsnd_ssi *ssi = rsnd_mod_to_ssi(mod);
 	u32 val = 0;
 
 	if (rsnd_is_gen1(priv))
 		return 0;
 
-	if (ssi->usrcnt != 1)
+	if (rsnd_ssi_is_parent(mod, io))
 		return 0;
 
 	if (enable)
-- 
1.7.5.4

