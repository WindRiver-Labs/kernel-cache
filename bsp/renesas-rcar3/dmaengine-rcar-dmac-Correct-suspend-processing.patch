From fc75d4b2b3cb298ef161be0fa884aeb1c0e421ef Mon Sep 17 00:00:00 2001
From: Hien Dang <hien.dang.eb@renesas.com>
Date: Wed, 24 Aug 2016 16:04:29 +0700
Subject: [PATCH 1679/2066] dmaengine: rcar-dmac: Correct suspend processing

In current implementation, when one channel is not available,
the processing will stop for all channel in same DMAC.

This modification will improve above situation. When one channel
is not available, processing will skip only it and still continue
to proceed for other channels on same DMAC.

Signed-off-by: Hien Dang <hien.dang.eb@renesas.com>
[zou:Original patch taken from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
 v4.9/rcar-3.5.1]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/dma/sh/rcar-dmac.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/dma/sh/rcar-dmac.c b/drivers/dma/sh/rcar-dmac.c
index 58ec30c..6126b6e 100644
--- a/drivers/dma/sh/rcar-dmac.c
+++ b/drivers/dma/sh/rcar-dmac.c
@@ -1586,7 +1586,7 @@ static int rcar_dmac_sleep_suspend(struct device *dev)
 
 	for (i = 0; i < dmac->n_channels; ++i) {
 		if (!dmac->channels[i].iomem)
-			break;
+			continue;
 
 		spin_lock(&dmac->channels[i].lock);
 		pm_runtime_get_sync(dev);
-- 
1.7.5.4

