From 6f45850669700195192aba5d511986deb13e9815 Mon Sep 17 00:00:00 2001
From: Muhammad Hamza Farooq <mfarooq@visteon.com>
Date: Tue, 29 Sep 2015 22:44:45 +0200
Subject: [PATCH 1868/2066] dma: rcar-dma: check if complete DMA packet
 received but not processed

At high speeds, DMA interrupts come very fast. If there's an interrupt
pending before previous is handled, this method can help return actual
status of the DMA transaction by reading the hardware flag

Signed-off-by: Muhammad Hamza Farooq <mfarooq@visteon.com>
Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
[zou:Original patch taken from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
 v4.9/rcar-3.5.1]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/dma/sh/rcar-dmac.c |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/drivers/dma/sh/rcar-dmac.c b/drivers/dma/sh/rcar-dmac.c
index 454fa29..0275591 100644
--- a/drivers/dma/sh/rcar-dmac.c
+++ b/drivers/dma/sh/rcar-dmac.c
@@ -333,6 +333,14 @@ static bool rcar_dmac_chan_is_busy(struct rcar_dmac_chan *chan)
 	return !!(chcr & (RCAR_DMACHCR_DE | RCAR_DMACHCR_TE));
 }
 
+/* Transfer completed but not yet handled */
+static bool rcar_dmac_last_tx_complete(struct rcar_dmac_chan *chan)
+{
+	u32 chcr = rcar_dmac_chan_read(chan, RCAR_DMACHCR);
+
+	return (chcr & RCAR_DMACHCR_TE) == RCAR_DMACHCR_TE;
+}
+
 static void rcar_dmac_chan_start_xfer(struct rcar_dmac_chan *chan)
 {
 	struct rcar_dmac_desc *desc = chan->desc.running;
@@ -1340,6 +1348,10 @@ static enum dma_status rcar_dmac_tx_status(struct dma_chan *chan,
 	unsigned long flags;
 	unsigned int residue;
 
+	/* Interrupt not yet serviced */
+	if (rcar_dmac_last_tx_complete(rchan))
+		return DMA_COMPLETE;
+
 	status = dma_cookie_status(chan, cookie, txstate);
 	if (status == DMA_COMPLETE || !txstate)
 		return status;
-- 
1.7.5.4

