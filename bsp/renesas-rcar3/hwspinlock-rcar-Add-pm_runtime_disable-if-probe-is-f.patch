From eda58b13685da5108b7d5c71f55160775210b61f Mon Sep 17 00:00:00 2001
From: Mitsuru Ezo <mitsuru.ezo.pz@ps.hitachi-solutions.com>
Date: Tue, 7 Feb 2017 12:58:17 +0900
Subject: [PATCH 1839/2066] hwspinlock: rcar: Add pm_runtime_disable if probe
 is failed.

If rcar_hwspinlock_probe() is failed, pm_runtime_disable is not executed.
This patch moves pm_runtime_enable() before hwspin_lock_register(), and
adds pm_runtime_disable() if hwspin_lock_register() returns other than 0.

Signed-off-by: Mitsuru Ezo <mitsuru.ezo.pz@ps.hitachi-solutions.com>
Signed-off-by: Hiroki Negishi <hiroki.negishi.bx@renesas.com>
[zou:Original patch taken from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
 v4.9/rcar-3.5.1]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/hwspinlock/rcar_hwspinlock.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/hwspinlock/rcar_hwspinlock.c b/drivers/hwspinlock/rcar_hwspinlock.c
index e089d9a..b92db1b 100644
--- a/drivers/hwspinlock/rcar_hwspinlock.c
+++ b/drivers/hwspinlock/rcar_hwspinlock.c
@@ -60,8 +60,6 @@ static int rcar_hwspinlock_probe(struct platform_device *pdev)
 	struct hwspinlock		*lock;
 	struct resource			*res = NULL;
 
-	pm_runtime_enable(&pdev->dev);
-
 	/* map MFIS register */
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	addr = (u32 __iomem *)devm_ioremap_nocache(&pdev->dev,
@@ -88,9 +86,13 @@ static int rcar_hwspinlock_probe(struct platform_device *pdev)
 	}
 	platform_set_drvdata(pdev, bank);
 
+	pm_runtime_enable(&pdev->dev);
+
 	/* register hwspinlock */
 	ret = hwspin_lock_register(bank, &pdev->dev, &rcar_hwspinlock_ops,
 				   0, RCAR_HWSPINLOCK_NUM);
+	if (ret)
+		pm_runtime_disable(&pdev->dev);
 
 out:
 	return ret;
-- 
1.7.5.4

