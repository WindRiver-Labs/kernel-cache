From 4f8805c678e98e333163f9b5201aebd62479dc50 Mon Sep 17 00:00:00 2001
From: Liwei Song <liwei.song@windriver.com>
Date: Fri, 13 Feb 2015 13:10:35 +0800
Subject: [PATCH 4/6] amd add support for AMD ML and CZ SMBus changes

The locations of SMBus register base address and enablement bit are changed
from AMD ML, which need this patch to be supported.

from amd verdor

Signed-off-by: Shane Huang <shane.huang@amd.com>
Reviewed-by: Jean Delvare <khali@linux-fr.org>
Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
Cc: stable@vger.kernel.org
Signed-off-by: Sanjay Mehta <Sanju.Mehta@amd.com>
Signed-off-by: Liwei Song <liwei.song@windriver.com>
---
 drivers/i2c/busses/i2c-piix4.c |   11 +++++++----
 1 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/i2c/busses/i2c-piix4.c b/drivers/i2c/busses/i2c-piix4.c
index 370e3e6..f7ea272 100644
--- a/drivers/i2c/busses/i2c-piix4.c
+++ b/drivers/i2c/busses/i2c-piix4.c
@@ -22,7 +22,7 @@
 	Intel PIIX4, 440MX
 	Serverworks OSB4, CSB5, CSB6, HT-1000, HT-1100
 	ATI IXP200, IXP300, IXP400, SB600, SB700/SP5100, SB800
-	AMD Hudson-2, MZ, CZ
+	AMD Hudson-2, ML, CZ
 	SMSC Victory66
 
    Note: we assume there can only be one device, with one or more
@@ -235,7 +235,8 @@ static int piix4_setup_sb800(struct pci_dev *PIIX4_dev,
 {
 	unsigned short piix4_smba;
 	unsigned short smba_idx = 0xcd6;
-	u8 smba_en_lo, smba_en_hi, i2ccfg, i2ccfg_offset = 0x10, smb_en;
+	u8 smba_en_lo, smba_en_hi, smb_en, smb_en_status;
+	u8 i2ccfg, i2ccfg_offset = 0x10;
 
 	/* SB800 and later SMBus does not support forcing address */
 	if (force || force_addr) {
@@ -252,8 +253,9 @@ static int piix4_setup_sb800(struct pci_dev *PIIX4_dev,
 	     PIIX4_dev->device == 0x790b &&
 	     PIIX4_dev->revision >= 0x49))
 		smb_en = 0x00;
+	else
+		smb_en = (aux) ? 0x28 : 0x2c;
 
-	smb_en = (aux) ? 0x28 : 0x2c;
 	if (!request_region(smba_idx, 2, "smba_idx")) {
 		dev_err(&PIIX4_dev->dev, "SMBus base address index region "
 			"0x%x already in use!\n", smba_idx);
@@ -268,13 +270,14 @@ static int piix4_setup_sb800(struct pci_dev *PIIX4_dev,
 	if (!smb_en) {
 		smb_en_status = smba_en_lo & 0x10;
 		piix4_smba = smba_en_hi << 8;
+		if (aux)
+			piix4_smba |= 0x20;
 	} else {
 		smb_en_status = smba_en_lo & 0x01;
 		piix4_smba = ((smba_en_hi << 8) | smba_en_lo) & 0xffe0;
 	}
 
 	if (!smb_en_status) {
-
 		dev_err(&PIIX4_dev->dev,
 			"Host SMBus controller not enabled!\n");
 		return -ENODEV;
-- 
1.7.5.4

