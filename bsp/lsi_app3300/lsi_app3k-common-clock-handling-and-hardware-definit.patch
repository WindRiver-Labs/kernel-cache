From 191ed0d9a17f76bd778ca32cdf6828db2ce545ec Mon Sep 17 00:00:00 2001
From: Tony Liu <Bo.Liu@windriver.com>
Date: Tue, 30 Mar 2010 15:48:33 +0800
Subject: [PATCH 11/13] lsi_app3k: common clock handling and hardware definition

Combine vendor drop algorithm into common clock framework for LSI APP3K SoC.
Merge APP3K specific hardware definitions from vendor drop -- Agere APP Linux
Version 2.6.1.5.pre10 05/07/2009.

Signed-off-by: Tonyliu <Bo.Liu@windriver.com>
---
 arch/arm/mach-app/clk-app3k.c          |  200 +++++++++++++++++++
 arch/arm/mach-app/include/mach/app3k.h |  331 ++++++++++++++++++++++++++++++++
 2 files changed, 531 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-app/clk-app3k.c
 create mode 100644 arch/arm/mach-app/include/mach/app3k.h

diff --git a/arch/arm/mach-app/clk-app3k.c b/arch/arm/mach-app/clk-app3k.c
new file mode 100644
index 0000000..d75e146
--- /dev/null
+++ b/arch/arm/mach-app/clk-app3k.c
@@ -0,0 +1,200 @@
+/*
+ * arch/arm/mach-app/clock.c
+ *
+ * Copyright (C) 2009 LSI Logic
+ * Copyright (c) 2010 Wind River Systems, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+#include <linux/io.h>
+#include <linux/clk.h>
+#include <linux/module.h>
+
+#include <asm/clkdev.h>
+#include <mach/hardware.h>
+#include <mach/clock.h>
+#include <mach/timers.h>
+#include <mach/pll.h>
+
+static unsigned long core_speed;
+
+static int app3k_clk_enable(struct clk *clk)
+{
+	int value;
+	unsigned long control = 0;
+
+	value = (core_speed / clk->rate) - 1;
+
+	__raw_writel(value, (clk->enable_reg + TIMER_n_LOAD));
+	__raw_writel(control, (clk->enable_reg + TIMER_n_CONTROL));
+
+
+	control = (TIMER_n_CONTROL_ENABLE |
+			TIMER_n_CONTROL_MODE |
+			TIMER_n_CONTROL_SIZE);
+
+
+	__raw_writel(control, (clk->enable_reg + TIMER_n_CONTROL));
+
+	return 0;
+}
+
+static void app3k_clk_disable(struct clk *clk)
+{
+	__raw_writel(0, (clk->enable_reg + TIMER_n_CONTROL));
+}
+
+static int app3k_clk_set_rate(struct clk *clk, unsigned long rate)
+{
+	int value;
+	unsigned long control;
+
+	value = (core_speed / rate) - 1;
+
+	__raw_writel(0, (clk->enable_reg + TIMER_n_CONTROL));
+	__raw_writel(value, (clk->enable_reg + TIMER_n_LOAD));
+
+	control = (TIMER_n_CONTROL_ENABLE |
+			TIMER_n_CONTROL_MODE |
+			TIMER_n_CONTROL_SIZE);
+
+	__raw_writel(control, (clk->enable_reg + TIMER_n_CONTROL));
+
+	clk->rate = value;
+
+	return 0;
+}
+
+static unsigned long app3k_clk_get_rate(struct clk *clk)
+{
+	return core_speed / (__raw_readl(clk->enable_reg + TIMER_n_LOAD) + 1);
+}
+
+static int app3k_clk_set_parent(struct clk *clk, struct clk *parent)
+{
+	list_del_init(&clk->sibling);
+	if (parent)
+		list_add(&clk->sibling, &parent->children);
+	clk->parent = parent;
+
+	return 0;
+}
+
+static void amba_uart_clk_init(struct clk *clk)
+{
+	/*Get default rate*/
+	clk->rate = core_speed /
+		(__raw_readl(clk->enable_reg + TIMER_n_LOAD) + 1);
+}
+
+static struct clk clk_timer0 = {
+	.name = "APP_TIMER0",
+	.enable_reg = (void __iomem *)TIMER0_BASE,
+};
+
+static struct clk clk_uart0 = {
+	.name = "UART",
+	.enable_reg = (void __iomem *)TIMER1_BASE,
+	.init	= amba_uart_clk_init,
+};
+
+static struct clk clk_timer2 = {
+	.name = "APP_TIMER2",
+	.enable_reg = (void __iomem *)TIMER2_BASE,
+};
+
+static struct clk clk_timer3 = {
+	.name = "APP_TIMER3",
+	.enable_reg = (void __iomem *)TIMER3_BASE,
+};
+
+static struct clk clk_timer4 = {
+	.name = "APP_TIMER4",
+	.enable_reg = (void __iomem *)TIMER4_BASE,
+};
+
+static struct clk clk_timer5 = {
+	.name = "APP_TIMER5",
+	.enable_reg = (void __iomem *)TIMER5_BASE,
+};
+
+static struct clk clk_timer6 = {
+	.name = "APP_TIMER6",
+	.enable_reg = (void __iomem *)TIMER6_BASE,
+};
+
+static struct clk clk_timer7 = {
+	.name = "APP_TIMER7",
+	.enable_reg = (void __iomem *)TIMER7_BASE,
+};
+
+static int apb_pclk_enable(struct clk *clk)
+{
+	return 0;
+}
+
+static void apb_pclk_disable(struct clk *clk)
+{
+	return;
+}
+
+static struct clk apb_pclk = {
+	.name = "apb_pclk",
+	.enable = apb_pclk_enable,
+	.disable = apb_pclk_disable,
+};
+
+static struct clk_lookup app3k_platform_clks[] = {
+	INIT_CL("timer0", NULL, &clk_timer0),
+	INIT_CL("amba:uart0", NULL, &clk_uart0),
+	INIT_CL("timer2", NULL, &clk_timer2),
+	INIT_CL("timer3", NULL, &clk_timer3),
+	INIT_CL("timer4", NULL, &clk_timer4),
+	INIT_CL("timer5", NULL, &clk_timer5),
+	INIT_CL("timer6", NULL, &clk_timer6),
+	INIT_CL("timer7", NULL, &clk_timer7),
+	INIT_CL("amba:uart0", "apb_pclk", &apb_pclk),
+};
+
+static struct clk_functions clk_func_app3k = {
+	.enable     = app3k_clk_enable,
+	.disable    = app3k_clk_disable,
+	.set_rate   = app3k_clk_set_rate,
+	.get_rate   = app3k_clk_get_rate,
+	.set_parent = app3k_clk_set_parent,
+};
+
+int __init app3k_clk_init(void)
+{
+	int i;
+	struct clk_lookup *cl;
+
+	/*get the core speed.*/
+	core_speed = (get_core_speed() / 2);
+
+	/*register platform dependent clock hooks */
+	clk_platform_register(&clk_func_app3k);
+
+	/*register clocks.*/
+	for (i = 0; i < ARRAY_SIZE(app3k_platform_clks); i++) {
+		cl = &app3k_platform_clks[i];
+		clkdev_add(cl);
+		clk_register(cl->clk);
+	}
+
+	return 0;
+}
+
+postcore_initcall(app3k_clk_init);
diff --git a/arch/arm/mach-app/include/mach/app3k.h b/arch/arm/mach-app/include/mach/app3k.h
new file mode 100644
index 0000000..f564221
--- /dev/null
+++ b/arch/arm/mach-app/include/mach/app3k.h
@@ -0,0 +1,331 @@
+/*
+ * include/mach/app3k.h
+ *
+ * Copyright (C) 2004 Agere Systems Inc.
+ * Copyright (c) 2010 Wind River Systems, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+#ifndef __ASM_ARCH_APP3K_H
+#define __ASM_ARCH_APP3K_H
+
+#include <mach/pmr.h>
+#include <mach/io.h>
+
+/*
+ * Memory Map definitions
+ */
+#define APP3K_PHYS_DDR2_BASE   0x00000000
+#define APP3K_PHYS_NOR_BASE    0x50000000
+#define APP3K_PHYS_NAND_BASE   0x58000000
+#define APP3K_PHYS_ASI_BASE    0x60000000
+#define APP3K_PHYS_AEI_BASE    0x68000000
+#define APP3K_PHYS_MAC_BASE    0x70000000
+#define APP3K_PHYS_USB_BASE    0x78000000
+#define APP3K_PHYS_PCI_BASE    0x80000000
+#define APP3K_PHYS_APB_BASE    0xc0000000
+#define APP3K_PHYS_PMR_BASE    0xc4000000
+#define APP3K_PHYS_GP_DMA_BASE 0xc8000000
+#define APP3K_PHYS_SHMEM_BASE  0xe0000000
+#define APP3K_PHYS_VIC_BASE    0xf0000000
+
+/*
+ * MAC
+ */
+#define APP3K_PHYS_MAC_RX_OFFSET	0x00000000
+#define APP3K_PHYS_MAC_RX_SIZE		0x00001000
+#define APP3K_PHYS_MAC_RX_BASE		(APP3K_PHYS_MAC_BASE + APP3K_PHYS_MAC_RX_OFFSET)
+
+#define APP3K_PHYS_MAC_TX_OFFSET	0x00001000
+#define APP3K_PHYS_MAC_TX_SIZE		0x00001000
+#define APP3K_PHYS_MAC_TX_BASE		(APP3K_PHYS_MAC_BASE + APP3K_PHYS_MAC_TX_OFFSET)
+
+#define APP3K_PHYS_MAC_DMA_OFFSET	0x00002000
+#define APP3K_PHYS_MAC_DMA_SIZE		0x00001000
+#define APP3K_PHYS_MAC_DMA_BASE		(APP3K_PHYS_MAC_BASE + APP3K_PHYS_MAC_DMA_OFFSET)
+
+/*
+ * APB
+ */
+#define APP3K_PHYS_GPIO_0_OFFSET	0x00000000
+#define APP3K_PHYS_GPIO_0_SIZE		0x00001000
+#define APP3K_PHYS_GPIO_0_BASE		(APP3K_PHYS_APB_BASE + APP3K_PHYS_GPIO_0_OFFSET)
+
+#define APP3K_PHYS_GPIO_1_OFFSET	0x00001000
+#define APP3K_PHYS_GPIO_1_SIZE		0x00001000
+#define APP3K_PHYS_GPIO_1_BASE		(APP3K_PHYS_APB_BASE + APP3K_PHYS_GPIO_1_OFFSET)
+
+#define APP3K_PHYS_UART_OFFSET	0x00002000
+#define APP3K_PHYS_UART_SIZE	0x00001000
+#define APP3K_PHYS_UART_BASE	(APP3K_PHYS_APB_BASE + APP3K_PHYS_UART_OFFSET)
+
+#define APP3K_PHYS_I2C_OFFSET	0x00003000
+#define APP3K_PHYS_I2C_SIZE	0x00001000
+#define APP3K_PHYS_I2C_BASE	(APP3K_PHYS_APB_BASE + APP3K_PHYS_I2C_OFFSET)
+
+#define APP3K_PHYS_SPI_OFFSET	0x00004000
+#define APP3K_PHYS_SPI_SIZE	0x00001000
+#define APP3K_PHYS_SPI_BASE	(APP3K_PHYS_APB_BASE + APP3K_PHYS_SPI_OFFSET)
+
+#define APP3K_PHYS_CT_OFFSET	0x00005000
+#define APP3K_PHYS_CT_SIZE	0x00001000
+#define APP3K_PHYS_CT_BASE	(APP3K_PHYS_APB_BASE + APP3K_PHYS_CT_OFFSET)
+
+#define APP3K_PHYS_PCI_CONFIG_OFFSET	0x00006000
+#define APP3K_PHYS_PCI_CONFIG_SIZE	0x00001000
+#define APP3K_PHYS_PCI_CONFIG_BASE	(APP3K_PHYS_APB_BASE + APP3K_PHYS_PCI_CONFIG_OFFSET)
+
+#define APP3K_PHYS_REMAP_OFFSET	0x00007000
+#define APP3K_PHYS_REMAP_SIZE	0x00001000
+#define APP3K_PHYS_REMAP_BASE	(APP3K_PHYS_APB_BASE + APP3K_PHYS_REMAP_OFFSET)
+
+#define APP3K_PHYS_DDR2_CONFIG_OFFSET	0x00008000
+#define APP3K_PHYS_DDR2_CONFIG_SIZE	0x00001000
+#define APP3K_PHYS_DDR2_CONFIG_BASE	(APP3K_PHYS_APB_BASE + APP3K_PHYS_DDR2_CONFIG_OFFSET)
+
+#define APP3K_PHYS_PL301_CONFIG_OFFSET	0x00009000
+#define APP3K_PHYS_PL301_CONFIG_SIZE	0x00001000
+#define APP3K_PHYS_PL301_CONFIG_BASE	(APP3K_PHYS_APB_BASE + APP3K_PHYS_PL301_CONFIG_OFFSET)
+
+#define APP3K_PHYS_TDM_OFFSET	0x0000b000
+#define APP3K_PHYS_TDM_SIZE	0x00001000
+#define APP3K_PHYS_TDM_BASE	(APP3K_PHYS_APB_BASE + APP3K_PHYS_TDM_OFFSET)
+
+/*
+ * APB
+ */
+#define APP_APB_OFFSET	0x00000000
+#define APP_APB_SIZE	0x00010000
+#define APP_APB_BASE	(IO_ADDRESS + APP_APB_OFFSET)
+
+#define APP_GPIO_1_OFFSET	0x00000000
+#define APP_GPIO_1_SIZE		0x1000
+#define APP_GPIO_1_BASE		(APP_APB_BASE + APP_GPIO_1_OFFSET)
+
+#define APP_GPIO_2_OFFSET	0x00001000
+#define APP_GPIO_2_SIZE		0x1000
+#define APP_GPIO_2_BASE		(APP_APB_BASE + APP_GPIO_2_OFFSET)
+
+#define APP_UART_OFFSET	0x00002000
+#define APP_UART_SIZE	0x1000
+#define APP_UART_BASE	(APP_APB_BASE + APP_UART_OFFSET)
+#define APP3XX_UART_BASE	APP_UART_BASE
+
+#define APP_I2C_OFFSET	0x00003000
+#define APP_I2C_SIZE	0x1000
+#define APP_I2C_BASE	(APP_APB_BASE + APP_I2C_OFFSET)
+#define APP3XX_I2C_BASE	APP_I2C_BASE
+
+#define APP_SPI_OFFSET	0x00004000
+#define APP_SPI_SIZE	0x1000
+#define APP_SPI_BASE	(APP_APB_BASE + APP_SPI_OFFSET)
+#define APP3XX_SPI_BASE	APP_SPI_BASE
+
+#define APP_CT_OFFSET	0x00005000
+#define APP_CT_SIZE	0x1000
+#define APP_CT_BASE	(APP_APB_BASE + APP_CT_OFFSET)
+#define APP3XX_CT_BASE	APP_CT_BASE
+
+#define APP_PCI_CONFIG_OFFSET	0x00006000
+#define APP_PCI_CONFIG_SIZE	0x1000
+#define APP_PCI_CONFIG_BASE	(APP_APB_BASE + APP_PCI_CONFIG_OFFSET)
+
+#define APP_REMAP_OFFSET	0x00007000
+#define APP_REMAP_SIZE		0x1000
+#define APP_REMAP_BASE		(APP_APB_BASE + APP_REMAP_OFFSET)
+
+#define APP_DDR2_CONFIG_OFFSET	0x00008000
+#define APP_DDR2_CONFIG_SIZE	0x1000
+#define APP_DDR2_CONFIG_BASE	(APP_APB_BASE + APP_DDR2_CONFIG_OFFSET)
+
+#define APP_PL301_CONFIG_OFFSET	0x00009000
+#define APP_PL301_CONFIG_SIZE	0x1000
+#define APP_PL301_CONFIG_BASE	(APP_APB_BASE + APP_PL301_CONFIG_OFFSET)
+
+#define APP_TDM_CONFIG_OFFSET	0x0000b000
+#define APP_TDM_CONFIG_SIZE	0x1000
+#define APP_TDM_CONFIG_BASE	(APP_APB_BASE + APP_TDM_CONFIG_OFFSET)
+
+/*
+ * ASI
+ */
+#define APP_ASI_OFFSET	0x00010000
+#define APP_ASI_SIZE	0x00100000
+#define APP_ASI_BASE	(IO_ADDRESS + APP_ASI_OFFSET)
+#define APP3XX_ASI_OFFSET	APP_ASI_OFFSET
+#define APP3XX_ASI_BASE		APP_ASI_BASE
+
+/*
+ * VIC
+ */
+#define APP_VIC_OFFSET	0x00110000
+#define APP_VIC_SIZE	0x00001000
+#define APP_VIC_BASE	(IO_ADDRESS + APP_VIC_OFFSET)
+#define APP3XX_VIC_BASE	APP_VIC_BASE
+
+/*
+ * MAC
+ */
+#define APP_MAC_RX_OFFSET	0x00111000
+#define APP_MAC_RX_SIZE		0x00001000
+#define APP_MAC_RX_BASE		(IO_ADDRESS + APP_MAC_RX_OFFSET)
+#define APP3XX_NIC_RX_BASE	APP_MAC_RX_BASE
+
+#define APP_MAC_TX_OFFSET	0x00112000
+#define APP_MAC_TX_SIZE		0x00001000
+#define APP_MAC_TX_BASE		(IO_ADDRESS + APP_MAC_TX_OFFSET)
+#define APP3XX_NIC_TX_BASE	APP_MAC_TX_BASE
+
+#define APP_MAC_DMA_OFFSET	0x00113000
+#define APP_MAC_DMA_SIZE	0x00001000
+#define APP_MAC_DMA_BASE	(IO_ADDRESS + APP_MAC_DMA_OFFSET)
+#define APP3XX_NIC_DMA_BASE	APP_MAC_DMA_BASE
+
+/*
+ * USB
+ */
+#define APP_USB_OFFSET	0x00114000
+#define APP_USB_SIZE	0x00100000
+#define APP_USB_BASE	(IO_ADDRESS + APP_USB_OFFSET)
+
+/*
+ * AEI
+ */
+#define APP_AEI_OFFSET	0x00214000
+#define APP_AEI_SIZE	0x00100000
+#define APP_AEI_BASE	(IO_ADDRESS + APP_AEI_OFFSET)
+
+/*
+ * PMR
+ */
+#define APP_PMR_OFFSET	0x00314000
+#define APP_PMR_SIZE	0x00002000
+#define APP_PMR_BASE	(IO_ADDRESS + APP_PMR_OFFSET)
+
+/*
+ * NAND
+ */
+#define APP_NAND_OFFSET	0x00316000
+#define APP_NAND_SIZE	0x00010000
+#define APP_NAND_BASE	(IO_ADDRESS + APP_NAND_OFFSET)
+
+/*
+ * NOR Flash
+ */
+#define APP_NOR_OFFSET	0x00326000
+#define APP_NOR_SIZE	0x04000000
+#define APP_NOR_BASE	(IO_ADDRESS + APP_NOR_OFFSET)
+
+/*
+ * SHMEM
+ */
+#define APP_SHMEM_OFFSET	0x04326000
+#define APP_SHMEM_SIZE		0x00040000
+#define APP_SHMEM_BASE		(IO_ADDRESS + APP_SHMEM_OFFSET)
+
+/*
+ * GP_DMA
+ */
+#define APP_GP_DMA_OFFSET	0x04366000
+#define APP_GP_DMA_SIZE		0x00001000
+#define APP_GP_DMA_BASE		(IO_ADDRESS + APP_GP_DMA_OFFSET)
+
+#define APP_PHYS_RAM_BASE	APP3K_PHYS_DDR2_BASE
+#define APP_STARTUP_PHYS_IO	APP3K_PHYS_APB_BASE
+#define APP_STARTUP_IO		APP_APB_BASE
+
+/*
+ * The following defines are to keep from breaking the RTE and
+ * should be removed with it has been updated.
+ */
+#define APP3XX_GPIO_OFFSET  APP_GPIO_1_BASE
+#define APP3XX_GPIO1_OFFSET APP_GPIO_2_BASE
+
+/*
+ * Timer definitions
+ * The first timer (timer 0) provides the system clock.
+ * The second timer (timer 1) provides the UART timing.
+ */
+#define APP3XX_TIMER0_OFFSET 0x0000 /* Reserved to core tick clock */
+#define APP3XX_TIMER1_OFFSET 0x0020 /* Reserved to UART clock      */
+#define APP3XX_TIMER2_OFFSET 0x0040 /* Reserved for i2c clock      */
+#define APP3XX_TIMER3_OFFSET 0x0060 /* Reserved for spi clock      */
+#define APP3XX_TIMER4_OFFSET 0x0080 /* Reserved for watchdog       */
+#define APP3XX_TIMER5_OFFSET 0x00a0 /* Reserved for MV statistics  */
+#define APP3XX_TIMER6_OFFSET 0x00c0 /* Reserved for HR timer       */
+#define APP3XX_TIMER7_OFFSET 0x00e0 /* Unused                      */
+
+#define MAX_TIMER 8
+
+/*
+ * MUST be one of the following for the UART baud rate divisors to work.
+ */
+#define TICKS_PER_uSEC 66
+
+/*
+ * ASIC or FPGA, release and revision
+ */
+#define APP3XX_REVISION_REGISTER (readl(APP3XX_ASI_BASE + 0xc))
+#define IS_ASIC (0 == (APP3XX_REVISION_REGISTER & 0x80000000))
+#define IS_FPGA (0 != (APP3XX_REVISION_REGISTER & 0x80000000))
+#define APP3XX_REVISION (APP3XX_REVISION_REGISTER & 0x1f)
+#define APP3XX_RELEASE  ((APP3XX_REVISION_REGISTER & 0xe0) >> 5)
+
+/*
+ *FLASH Partitioning.
+ */
+#define MAX_FLASH_PARTITIONS 10
+
+#define UBOOT_OFFSET 0
+#define UBOOT_SIZE   0x40000
+
+#define UBOOT_ENV_OFFSET 0x40000
+#define UBOOT_ENV_SIZE   0x40000
+
+/*
+ * NAND controller register offsets
+ */
+#define APP3K_NAND_DATA_REG             0x00000000
+#define APP3K_NAND_CMD_REG              0x00008000
+#define APP3K_NAND_INDEX_REG            0x00008004
+#define APP3K_NAND_STATUS1_REG          0x00008008
+#define APP3K_NAND_STATUS2_REG          0x0000800C
+#define APP3K_NAND_ID0_REG              0x00008010
+#define APP3K_NAND_ID1_REG              0x00008014
+#define APP3K_NAND_ID2_REG              0x00008018
+#define APP3K_NAND_ID3_REG              0x0000801C
+#define APP3K_NAND_ID4_REG              0x00008020
+#define APP3K_NAND_ID5_REG              0x00008024
+#define APP3K_NAND_ID6_REG              0x00008028
+#define APP3K_NAND_ID7_REG              0x0000802C
+#define APP3K_NAND_INTR_EN_REG          0x00008030
+#define APP3K_NAND_INTR_STATUS_REG      0x00008034
+#define APP3K_NAND_INTR_REG             0x00008038
+#define APP3K_NAND_ECC_ADDR_LOG_REG     0x0000803C
+#define APP3K_NAND_ECC_VAL_REG          0x00008040
+#define APP3K_NAND_ECC_INJECT_REG       0x00008044
+#define APP3K_NAND_EXT_INDEX_REG        0x00008048
+#define APP3K_NAND_TIMING1_REG          0x0000804C
+#define APP3K_NAND_TIMING2_REG          0x00008050
+#define APP3K_NAND_CONFIG_REG           0x00008054
+#define APP3K_NAND_PECC_REG             0x00008058
+
+/*
+ * AEI register offset definitions
+ */
+#define APP3K_AEI_LLP_CS_CTRL           0xcc
+
+#endif /* __ASM_ARCH_APP3K_H */
-- 
1.7.0.4

