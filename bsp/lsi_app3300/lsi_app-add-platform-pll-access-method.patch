From fad01027167cafb0c6f308fa4322036af5136084 Mon Sep 17 00:00:00 2001
From: Tony Liu <Bo.Liu@windriver.com>
Date: Tue, 30 Mar 2010 15:21:15 +0800
Subject: [PATCH 06/13] lsi_app: add platform pll access method

Merge platform PLL definition and access routines from vendor drop --
Agere APP Linux Version 2.6.1.5.pre10 05/07/2009.

Signed-off-by: Tonyliu <Bo.Liu@windriver.com>
---
 arch/arm/mach-app/include/mach/pll.h |   50 ++++++++++++++++++++
 arch/arm/mach-app/pll.c              |   84 ++++++++++++++++++++++++++++++++++
 2 files changed, 134 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-app/include/mach/pll.h
 create mode 100644 arch/arm/mach-app/pll.c

diff --git a/arch/arm/mach-app/include/mach/pll.h b/arch/arm/mach-app/include/mach/pll.h
new file mode 100644
index 0000000..d2bc35f
--- /dev/null
+++ b/arch/arm/mach-app/include/mach/pll.h
@@ -0,0 +1,50 @@
+/*
+ *  include/asm-arm/arch-app3xx/pll.h
+ *
+ *  Copyright (C) 2005 Agere Systems Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+#ifndef __ASM_ARCH_PLL_H
+#define __ASM_ARCH_PLL_H
+
+#include <mach/hardware.h>
+
+#ifdef CONFIG_ARCH_APP3K
+#define PLL_BASE APP_ASI_BASE
+#endif
+
+#define PLL_CMD            (PLL_BASE + 0x100)
+#define PLL_CMD_STRT_DN    0x80000000
+#define PLL_CMD_RD_WRT_FLG 0x00000004
+
+#define PLL_ADDR     (PLL_BASE + 0x104)
+
+#ifdef CONFIG_ARCH_APP3K
+#define PLL_ADDR_MSK 0xff
+#endif
+
+#define PLL_DATA     (PLL_BASE + 0x108)
+#define PLL_DATA_MSK 0xff
+
+#define RECONFIG_CONTROL_OFFSET 0x3c
+
+extern unsigned long get_core_speed(void);
+extern unsigned long get_host_speed(void);
+unsigned char pll_read(unsigned);
+void pll_write(unsigned, unsigned char);
+
+#endif /*__ASM_ARCH_PLL_H*/
diff --git a/arch/arm/mach-app/pll.c b/arch/arm/mach-app/pll.c
new file mode 100644
index 0000000..105cdcd
--- /dev/null
+++ b/arch/arm/mach-app/pll.c
@@ -0,0 +1,84 @@
+/*
+ * arch/arm/mach-app/pll.c
+ *
+ * (C) Copyright 2005
+ * Agere Systems, Inc. <www.agere.com>
+ * John Jacques <jjacques@agere.com>
+ * Michael W. Bringmann <mb@agere.com>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <linux/kernel.h>
+#include <linux/io.h>
+
+#include <mach/hardware.h>
+#include <mach/pll.h>
+
+unsigned long core_speed = 133844000;
+unsigned long host_speed;
+
+unsigned long get_core_speed(void)
+{
+	return core_speed;
+}
+
+unsigned long get_host_speed(void)
+{
+	return host_speed;
+}
+
+unsigned char pll_read(unsigned int offset)
+{
+	unsigned int retries = 100;
+
+	__raw_writel((offset & PLL_ADDR_MSK), PLL_ADDR);
+	__raw_writel(PLL_CMD_STRT_DN, PLL_CMD);
+
+	while (PLL_CMD_STRT_DN ==
+			(__raw_readl(PLL_CMD) & PLL_CMD_STRT_DN)) {
+
+		if (0 == --retries) {
+			printk(KERN_ERR "PLL Read Failed (offset=0x%x/%d)\n",
+					offset, offset);
+			break;
+		}
+	}
+
+	return __raw_readb(PLL_DATA);
+}
+
+void pll_write(unsigned offset, unsigned char value)
+{
+	int retries = 100;
+
+	__raw_writel((offset & PLL_ADDR_MSK), PLL_ADDR);
+	__raw_writel((value & PLL_DATA_MSK), PLL_DATA);
+	__raw_writel((PLL_CMD_STRT_DN | PLL_CMD_RD_WRT_FLG), PLL_CMD);
+
+	while (PLL_CMD_STRT_DN ==
+			(__raw_readl(PLL_CMD) & PLL_CMD_STRT_DN)) {
+
+		if (0 == retries) {
+			printk(KERN_ERR "PLL Write Failed (offset=0x%x/%d value=0x%x/%d)\n",
+					offset, offset, value, value);
+			break;
+		}
+	}
+}
-- 
1.6.5.2

