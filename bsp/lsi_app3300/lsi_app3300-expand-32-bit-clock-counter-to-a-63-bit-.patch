From 1acd98d5621ee21e905f8b84b75992d6adf2a8e5 Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Tue, 10 Apr 2012 15:49:19 +0800
Subject: [PATCH] lsi_app3300: expand 32-bit clock counter to a 63-bit value

The hardware clock counter this BSP used is a 32-bit one. Expand it to 63-bit
value to avoid sched_clock() wrap-around.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 arch/arm/mach-app/timer.c |   17 +++++++++++++++--
 1 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-app/timer.c b/arch/arm/mach-app/timer.c
index 77d189e..3906d89 100644
--- a/arch/arm/mach-app/timer.c
+++ b/arch/arm/mach-app/timer.c
@@ -42,6 +42,7 @@
 #include <linux/clockchips.h>
 #include <linux/cpumask.h>
 #include <linux/sched.h>
+#include <linux/cnt32_to_63.h>
 
 #include <asm/mach/time.h>
 #include <asm/smp_twd.h>
@@ -159,8 +160,11 @@ static struct clocksource clocksource_app = {
 /* Returns current time from boot in nsecs. */
 unsigned long long notrace sched_clock(void)
 {
-	return clocksource_cyc2ns(clocksource_app.read(&clocksource_app),
-			clocksource_app.mult, clocksource_app.shift);
+	unsigned long long v;
+
+	v = cnt32_to_63(clocksource_app.read(&clocksource_app));
+	return clocksource_cyc2ns(v, clocksource_app.mult,
+				  clocksource_app.shift);
 }
 
 static void __init app_clocksource_init(void)
@@ -176,6 +180,15 @@ static void __init app_clocksource_init(void)
 		(TIMER6_BASE + TIMER_n_CONTROL));
 	clocksource_app.mult = clocksource_khz2mult((core_speed / 1000),
 			clocksource_app.shift);
+
+	/*
+	 * We want an even value to automatically clear the top bit
+	 * returned by cnt32_to_63() without an additional run time
+	 * instruction. So if the LSB is 1 then round it up.
+	 */
+	if (clocksource_app.mult & 1)
+		clocksource_app.mult++;
+
 	clocksource_register(&clocksource_app);
 }
 
-- 
1.7.0

