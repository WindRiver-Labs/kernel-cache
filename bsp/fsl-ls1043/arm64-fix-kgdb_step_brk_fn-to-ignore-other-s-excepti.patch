From 834586f34abea5fe0953a7c4e54ed70fca7a9cbf Mon Sep 17 00:00:00 2001
From: Pratyush Anand <panand@redhat.com>
Date: Tue, 13 Jan 2015 14:20:55 +0530
Subject: [PATCH 5/8] arm64: fix kgdb_step_brk_fn to ignore other's exception

Taken from:
git://github.com/pratyushanand/linux.git:uprobe/upstream_arm64_devel

ARM64 step exception does not have any syndrome information. So, it is
responsibility of exception handler to take care that they handle it
only if exception was raised for them.
After kprobe support, both kprobe and kgdb uses register_step_hook
mechanism to register its step handler. So, if call_step_hook calls kgdb
handler first, it was always returning 0 and in that case if an
exception was raised for kprobe, it would never be handled.

Signed-off-by: Pratyush Anand <panand@redhat.com>
Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/arm64/include/asm/debug-monitors.h |    2 +-
 arch/arm64/kernel/kgdb.c                |    3 +++
 2 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/arch/arm64/include/asm/debug-monitors.h b/arch/arm64/include/asm/debug-monitors.h
index 81a13c1..d67b9ab 100644
--- a/arch/arm64/include/asm/debug-monitors.h
+++ b/arch/arm64/include/asm/debug-monitors.h
@@ -52,7 +52,7 @@
  * 0x401: for compile time BRK instruction
  */
 #define KGDB_DYN_DGB_BRK_IMM		0x400
-#define KDBG_COMPILED_DBG_BRK_IMM	0x401
+#define KGDB_COMPILED_DBG_BRK_IMM	0x401
 
 /*
  * BRK instruction encoding
diff --git a/arch/arm64/kernel/kgdb.c b/arch/arm64/kernel/kgdb.c
index a0d10c5..9469465 100644
--- a/arch/arm64/kernel/kgdb.c
+++ b/arch/arm64/kernel/kgdb.c
@@ -229,6 +229,9 @@ static int kgdb_compiled_brk_fn(struct pt_regs *regs, unsigned int esr)
 
 static int kgdb_step_brk_fn(struct pt_regs *regs, unsigned int esr)
 {
+	if (!kgdb_single_step)
+		return DBG_HOOK_ERROR;
+
 	kgdb_handle_exception(1, SIGTRAP, 0, regs);
 	return 0;
 }
-- 
1.7.5.4

