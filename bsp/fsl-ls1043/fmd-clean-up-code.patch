From 7d39a8e40253c25d261c585d23301db049abba67 Mon Sep 17 00:00:00 2001
From: Mandy Lavi <mandy.lavi@freescale.com>
Date: Wed, 1 Jul 2015 20:37:48 +0300
Subject: [PATCH 253/451] fmd: clean up code

Signed-off-by: Mandy Lavi <mandy.lavi@freescale.com>
[Xulin: Original patch taken from
Linux-LS1043A-SDK-V0.4-SOURCE-20150826-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 .../ethernet/freescale/fman/Peripherals/FM/fm.c    |    2 -
 .../ethernet/freescale/fman/Peripherals/FM/fman.c  |  102 +-------------------
 .../ethernet/freescale/fman/src/inc/types_linux.h  |    2 +
 .../freescale/fman/src/wrapper/fman_test.c         |    2 +-
 4 files changed, 4 insertions(+), 104 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fman/Peripherals/FM/fm.c b/drivers/net/ethernet/freescale/fman/Peripherals/FM/fm.c
index ed9017c..2bdaf113 100644
--- a/drivers/net/ethernet/freescale/fman/Peripherals/FM/fm.c
+++ b/drivers/net/ethernet/freescale/fman/Peripherals/FM/fm.c
@@ -3533,8 +3533,6 @@ t_Error FM_Init(t_Handle h_Fm)
 		CORE_MemoryBarrier();
 		XX_UDelay(100);
 //	}
-#warning remove printk below
-printk("<><> Fman reset passed. Hack not required\n");
 
         if (fman_is_qmi_halt_not_busy_state(p_Fm->p_FmQmiRegs))
         {
diff --git a/drivers/net/ethernet/freescale/fman/Peripherals/FM/fman.c b/drivers/net/ethernet/freescale/fman/Peripherals/FM/fman.c
index d410482..0df3fa2 100755
--- a/drivers/net/ethernet/freescale/fman/Peripherals/FM/fman.c
+++ b/drivers/net/ethernet/freescale/fman/Peripherals/FM/fman.c
@@ -321,7 +321,6 @@ void fman_set_liodn_per_port(struct fman_rg *fman_rg, uint8_t port_id,
 
 	if ((port_id > 63) || (port_id < 1))
 	        return;
-printk("|||| fman_set_liodn_per_port in params id %d  base 0x%lx  ofs 0x%lx \n", port_id, (unsigned long)liodn_base, (unsigned long)liodn_ofst );
 
 	/* set LIODN base for this port */
 	tmp = ioread32be(&fman_rg->dma_rg->fmdmplr[port_id / 2]);
@@ -849,55 +848,6 @@ int fman_fpm_init(struct fman_fpm_regs *fpm_rg, struct fman_cfg *cfg)
 		fman_enable_rams_ecc(fpm_rg);
 	}
 	iowrite32be(tmp_reg, &fpm_rg->fm_rie);
-/* hhhhhhhhhh */
-#if 0
-{
-  uint32_t tt1,tt2;
-  uint32_t kk;
-  union un_t {
-    uint32_t ii;
-    unsigned char cc[4];
-  };
-  union un_t *uu = &tt1;
-
-tt1 = ioread32be(&fpm_rg->fmfp_tsc2);
-printk("tttt-aa- tt1 fmfp_tsc2 = 0x%lx addr is %p \n",tt1, &fpm_rg->fmfp_tsc2);
-printk("tttt-aa- uu->ii fmfp_tsc2 = 0x%lx \n",uu->ii);
-printk("tttt-aa- uu->cc[0] fmfp_tsc2 = 0x%lx \n",uu->cc[0]);
-printk("tttt-aa- uu->cc[1] fmfp_tsc2 = 0x%lx \n",uu->cc[1]);
-printk("tttt-aa- uu->cc[2] fmfp_tsc2 = 0x%lx \n",uu->cc[2]);
-printk("tttt-aa- uu->cc[3] fmfp_tsc2 = 0x%lx \n",uu->cc[3]);
-
-iowrite32be(0x12345678,&fpm_rg->fmfp_tsc2);
-mb();
-
-printk("tttttttttttttt \n");
-mb();
-//kk = ioread32be((uint32_t *)0xa1c3064);
-tt1 = ioread32be(&fpm_rg->fmfp_tsc2);
-
-printk("tttt-bb- kk val = 0x%lx \n",kk);
-printk("tttt-bb- tt1 fmfp_tsc2 = 0x%lx \n",tt1);
-printk("tttt-bb- uu->ii fmfp_tsc2 = 0x%lx \n",uu->ii);
-printk("tttt-bb- uu->cc[0] fmfp_tsc2 = 0x%lx \n",uu->cc[0]);
-printk("tttt-bb- uu->cc[1] fmfp_tsc2 = 0x%lx \n",uu->cc[1]);
-printk("tttt-bb- uu->cc[2] fmfp_tsc2 = 0x%lx \n",uu->cc[2]);
-printk("tttt-bb- uu->cc[3] fmfp_tsc2 = 0x%lx \n",uu->cc[3]);
-
-mb();
-
-tt1 = 0xaaaaaaaa;
-tt2 = 0xbbbbbbbb;
-tt1 = ioread32be(&fpm_rg->fmfp_tsc2);
-printk("tttt-b1b- tt1 fmfp_tsc2 = 0x%lx \n",tt1);
-printk("tttt-b1b-  fmfp_tsc2 = 0x%lx \n",ioread32be(&fpm_rg->fmfp_tsc2));
-printk("tttt-b1b-  fmfp_tsc2 = 0x%x \n",ioread32be(&fpm_rg->fmfp_tsc2));
-
-
-
-}
-#endif /* 0 */
-/* hhhhhhhhhh */
 
 	return 0;
 }
@@ -957,20 +907,6 @@ int fman_qmi_init(struct fman_qmi_regs *qmi_rg, struct fman_cfg *cfg)
 	iowrite32be(QMI_ERR_INTR_EN_DOUBLE_ECC | QMI_ERR_INTR_EN_DEQ_FROM_DEF,
 			&qmi_rg->fmqm_eie);
 
-#if 0
-{
-uint32_t tt1;
-
-tt1 = ioread32be(&qmi_rg->fmqm_gc);
-printk("tttt-ee-  qmi_rg->fmqm_gc addr= %p val = 0x%lx \n",&qmi_rg->fmqm_gc,tt1);
-iowrite32be(0x12345678,&qmi_rg->fmqm_gc);
-iowrite32be(0xabcdef92,&qmi_rg->fmqm_etfc);
-tt1 = ioread32be(&qmi_rg->fmqm_gc);
-printk("tttt-ff-  qmi_rg->fmqm_gc = 0x%lx \n",tt1);
-
-}
-#endif
-
 	tmp_reg = 0;
 	if (cfg->exceptions & FMAN_EX_QMI_DEQ_FROM_UNKNOWN_PORTID)
 		tmp_reg |= QMI_ERR_INTR_EN_DEQ_FROM_DEF;
@@ -1020,33 +956,9 @@ int fman_enable(struct fman_rg *fman_rg, struct fman_cfg *cfg)
 		cfg_reg |= (uint32_t)(((cfg->qmi_def_tnums_thresh) << 8) |
 				(uint32_t)cfg->qmi_def_tnums_thresh);
 
-#if 0
-{
-uint32_t tt1;
-
-tt1 = ioread32be(&fman_rg->qmi_rg->fmqm_gc);
-printk("tttt-jj-  qmi_rg->fman_rg->fmqm_gc addr= %p val = 0x%lx \n",&fman_rg->qmi_rg->fmqm_gc,tt1);
-
-iowrite32be(0x12345678,&fman_rg->qmi_rg->fmqm_gc);
-
-tt1 = ioread32be(&fman_rg->qmi_rg->fmqm_gc);
-printk("tttt-kk-  fman_rg->qmi_rg->fmqm_gc = 0x%lx \n",tt1);
-
-}
-#endif
-
 	iowrite32be(BMI_INIT_START, &fman_rg->bmi_rg->fmbm_init);
 	iowrite32be(cfg_reg | QMI_CFG_ENQ_EN | QMI_CFG_DEQ_EN,
 			&fman_rg->qmi_rg->fmqm_gc);
-#if 0
-{
-uint32_t tt1;
-
-tt1 = ioread32be(&fman_rg->qmi_rg->fmqm_gc);
-printk("tttt-kk-  fman_rg->qmi_rg->fmqm_gc = 0x%lx \n",tt1);
-
-}
-#endif
 
 	return 0;
 }
@@ -1286,16 +1198,8 @@ void fman_get_revision(struct fman_fpm_regs *fpm_rg,
 
 	tmp = ioread32be(&fpm_rg->fm_ip_rev_1);
 
-printk("RRRRRRRRRR Ret version fm_ip_rev_1 0x%x\n",tmp);
-#warning Planting fman rev number
-tmp = 0xa070603;
-
 	*major = (uint8_t)((tmp & FPM_REV1_MAJOR_MASK) >> FPM_REV1_MAJOR_SHIFT);
 	*minor = (uint8_t)((tmp & FPM_REV1_MINOR_MASK) >> FPM_REV1_MINOR_SHIFT);
-
-printk("++fmd: fman_get_version fm_ip_rev=0x%x major=0x%x minor=0x%x\n",tmp,*major,*minor);
-printk("++fmd: fake version number need to retrive the original one\n");
-
 }
 
 uint32_t fman_get_counter(struct fman_rg *fman_rg,
@@ -1481,13 +1385,9 @@ void fman_force_intr(struct fman_rg *fman_rg,
 
 bool fman_is_qmi_halt_not_busy_state(struct fman_qmi_regs *qmi_rg)
 {
-
-  printk(">>>>>>  qmi_rg->fmqm_gs %x \n", ioread32be(&qmi_rg->fmqm_gs));
-  printk(">>>>>>  QMI_GS_HALT_NOT_BUSY %x \n", QMI_GS_HALT_NOT_BUSY);
-  printk(">>>>>>  (ioread32be(&qmi_rg->fmqm_gs) & QMI_GS_HALT_NOT_BUSY) %x \n", (ioread32be(&qmi_rg->fmqm_gs) & QMI_GS_HALT_NOT_BUSY));
-
     return (bool)!!(ioread32be(&qmi_rg->fmqm_gs) & QMI_GS_HALT_NOT_BUSY);
 }
+
 void fman_resume(struct fman_fpm_regs *fpm_rg)
 {
 	uint32_t tmp;
diff --git a/drivers/net/ethernet/freescale/fman/src/inc/types_linux.h b/drivers/net/ethernet/freescale/fman/src/inc/types_linux.h
index 6737c2d..3c9fa45 100644
--- a/drivers/net/ethernet/freescale/fman/src/inc/types_linux.h
+++ b/drivers/net/ethernet/freescale/fman/src/inc/types_linux.h
@@ -92,10 +92,12 @@ typedef  phys_addr_t physAddress_t;
 /************************/
 /* memory access macros */
 /************************/
+#ifdef CONFIG_ARM64
 #define in_be16(a)		__be16_to_cpu(__raw_readw(a))
 #define in_be32(a)		__be32_to_cpu(__raw_readl(a))
 #define out_be16(a, v)		__raw_writew(__cpu_to_be16(v), a)
 #define out_be32(a, v)		__raw_writel(__cpu_to_be32(v), a)
+#endif
 
 #define GET_UINT8(arg)              *(volatile uint8_t *)(&(arg))
 #define GET_UINT16(arg)             in_be16(&(arg))//*(volatile uint16_t*)(&(arg))
diff --git a/drivers/net/ethernet/freescale/fman/src/wrapper/fman_test.c b/drivers/net/ethernet/freescale/fman/src/wrapper/fman_test.c
index 7d04f20..270d07b 100644
--- a/drivers/net/ethernet/freescale/fman/src/wrapper/fman_test.c
+++ b/drivers/net/ethernet/freescale/fman/src/wrapper/fman_test.c
@@ -65,7 +65,7 @@
 #include "fsl_fman_test.h"
 
 #include "dpaa_eth.h"
-#include "dpaa_eth-common.h"
+#include "dpaa_eth_common.h"
 
 #define FMT_FRM_WATERMARK   0xdeadbeefdeadbeeaLL
 
-- 
1.7.5.4

