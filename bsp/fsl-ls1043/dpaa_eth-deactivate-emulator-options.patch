From f25830e59624b0c367f544ad6996f6df10295be9 Mon Sep 17 00:00:00 2001
From: Marian-Cristian Rotariu <marian.rotariu@freescale.com>
Date: Wed, 10 Jun 2015 17:32:40 +0300
Subject: [PATCH 194/451] dpaa_eth: deactivate emulator options

This patch disables the emulator Ethernet driver version. The emulator driver
version was created to bypass some of the lower level calls to some hardware
components that were not emulated (PHY).

Signed-off-by: Marian-Cristian Rotariu <marian.rotariu@freescale.com>
[Xulin: Original patch taken from
Linux-LS1043A-SDK-V0.4-SOURCE-20150826-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/Kconfig         |    2 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c |   10 +++-------
 .../net/ethernet/freescale/dpa/dpaa_eth_common.c   |   12 ++++--------
 3 files changed, 8 insertions(+), 16 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/Kconfig b/drivers/net/ethernet/freescale/dpa/Kconfig
index 7874b3a..ff9aa99 100644
--- a/drivers/net/ethernet/freescale/dpa/Kconfig
+++ b/drivers/net/ethernet/freescale/dpa/Kconfig
@@ -153,7 +153,7 @@ config FSL_DPAA_DBG_LOOP
 config FSL_DPAA_DBG_EMULATOR
 	bool "DPAA Ethernet for FSL Networking Emulation"
 	depends on FSL_DPAA_ETH
-	default y
+	default n
 	---help---
 	  The DPAA Ethernet driver can be used in one of the proprietary FSL
 	  emulator/simulator for debugging purposes. These tools do not emulate
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c
index b24be24..52ab00e 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c
@@ -38,6 +38,7 @@
 #include <linux/highmem.h>
 #include <linux/sort.h>
 #include <linux/fsl_qman.h>
+#include <linux/io.h>
 #include "dpaa_eth.h"
 #include "dpaa_eth_common.h"
 #include "dpaa_eth_base.h"
@@ -157,13 +158,8 @@ int dpa_bp_shared_port_seed(struct dpa_bp *bp)
 	/* allocate memory region for buffers */
 	devm_request_mem_region(bp->dev, bp->paddr,
 			bp->size * bp->config_count, KBUILD_MODNAME);
-#ifdef CONFIG_FSL_DPAA_DBG_EMULATOR
-	bp->vaddr = NULL;
-	/* TODO: there is a problem with devm_ioremap_prot() call */
-#else
-	bp->vaddr = devm_ioremap_prot(bp->dev, bp->paddr,
-			bp->size * bp->config_count, 0);
-#endif
+	bp->vaddr = devm_ioremap(bp->dev, bp->paddr,
+			bp->size * bp->config_count);
 	if (bp->vaddr == NULL) {
 		pr_err("Could not map memory for pool %d\n", bp->bpid);
 		return -EIO;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index 90ec10d..a262a21 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -49,17 +49,13 @@
 #include "mac.h"
 
 /* DPAA platforms benefit from hardware-assisted queue management */
+/* TODO: for the moment, NETIF_F_HW_ACCEL_MQ is missing and is available only
+ * in the SDK driver version
+ */
 #ifdef CONFIG_AS_FASTPATH
-#define DPA_NETIF_FEATURES	(NETIF_F_HW_QDISC | NETIF_F_HW_ACCEL_MQ)
+#define DPA_NETIF_FEATURES	NETIF_F_HW_QDISC
 #else
-
-#ifdef CONFIG_FSL_DPAA_DBG_EMULATOR
-/* TODO: find out why this feature is missing */
 #define DPA_NETIF_FEATURES	0
-#else
-#define DPA_NETIF_FEATURES	NETIF_F_HW_ACCEL_MQ
-#endif
-
 #endif
 
 /* Size in bytes of the FQ taildrop threshold */
-- 
1.7.5.4

