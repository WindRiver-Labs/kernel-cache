From 72e9d5d7bcd48e0407f96c9adf6f1aa1db813c4e Mon Sep 17 00:00:00 2001
From: Alex Porosanu <alexandru.porosanu@freescale.com>
Date: Mon, 10 Aug 2015 10:54:24 +0300
Subject: [PATCH 445/451] crypto/caam: fix SEC FQs WQ

The SEC FQs for both enqueue and dequeue should not be put
int a WQ of higher priority than the dpa_eth TX confirmation
FQs. Failure to take this into account can lead to TX stalling
due to confirmations never reaching the core.

Signed-off-by: Alex Porosanu <alexandru.porosanu@freescale.com>
[Xulin: Original patch taken from
Linux-LS1043A-SDK-V0.4-SOURCE-20150826-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/crypto/caam/qi.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/crypto/caam/qi.c b/drivers/crypto/caam/qi.c
index 439a298..65e28d0 100644
--- a/drivers/crypto/caam/qi.c
+++ b/drivers/crypto/caam/qi.c
@@ -195,7 +195,7 @@ static struct qman_fq *create_caam_req_fq(struct device *qidev,
 
 	opts.fqd.fq_ctrl = QM_FQCTRL_CPCSTASH;
 	opts.fqd.dest.channel = qm_channel_caam;
-	opts.fqd.dest.wq = 0;
+	opts.fqd.dest.wq = 2;
 	opts.fqd.context_b = qman_fq_fqid(rsp_fq);
 	opts.fqd.context_a.hi = upper_32_bits(hwdesc);
 	opts.fqd.context_a.lo = lower_32_bits(hwdesc);
@@ -671,7 +671,7 @@ static int alloc_rsp_fq_cpu(struct device *qidev, unsigned int cpu)
 
 	opts.fqd.dest.channel = qman_affine_channel(cpu);
 	opts.fqd.cgid = qipriv.rsp_cgr.cgrid;
-	opts.fqd.dest.wq = 0;
+	opts.fqd.dest.wq = 2;
 	opts.fqd.context_a.stashing.exclusive =
 					QM_STASHING_EXCL_CTX |
 					QM_STASHING_EXCL_DATA;
-- 
1.7.5.4

