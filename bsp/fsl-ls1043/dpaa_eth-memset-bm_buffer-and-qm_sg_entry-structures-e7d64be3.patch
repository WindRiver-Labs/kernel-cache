From 65e97bb5126bd762ff60ed66b3acb8a73e01a6b1 Mon Sep 17 00:00:00 2001
From: Cristian Sovaiala <cristian.sovaiala@freescale.com>
Date: Mon, 15 Jun 2015 17:30:24 +0300
Subject: [PATCH 298/451] dpaa_eth: memset bm_buffer and qm_sg_entry
 structures

Signed-off-by: Cristian Sovaiala <cristian.sovaiala@freescale.com>
Change-Id: I149d10c3a9c2a9174ebd84ddd107cef7ed05cff2
Reviewed-on: http://git.am.freescale.net:8181/39546
Tested-by: Marian Cristian Rotariu <marian.rotariu@freescale.com>
Reviewed-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
[Xulin: Original patch taken from
Linux-LS1043A-SDK-V0.4-SOURCE-20150826-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index 77a8f25..c72753c 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -59,6 +59,8 @@ static void dpa_bp_recycle_frag(struct dpa_bp *dpa_bp, unsigned long vaddr,
 	struct bm_buffer bmb;
 	dma_addr_t addr;
 
+	memset(&bmb, 0, sizeof(struct bm_buffer));
+
 	addr = dma_map_single(dpa_bp->dev, (void *)vaddr, dpa_bp->size,
 			      DMA_BIDIRECTIONAL);
 	if (unlikely(dma_mapping_error(dpa_bp->dev, addr))) {
@@ -749,11 +751,9 @@ int __hot skb_to_sg_fd(struct dpa_priv_s *priv,
 		return -ENOMEM;
 	}
 
-#ifdef CONFIG_FSL_DPAA_DBG_EMULATOR
 	/* it seems that the memory allocator does not zero the allocated mem */
 	memset(sgt_buf, 0, priv->tx_headroom +
 		sizeof(struct qm_sg_entry) * (1 + nr_frags));
-#endif
 
 	/* Enable L3/L4 hardware checksum computation.
 	 *
-- 
1.7.5.4

