From f9c23b94c26f305e7b9d943d30793ccf0b6fea0a Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Tue, 6 Sep 2016 08:37:42 +0800
Subject: [PATCH 17/18] dpaa_ethernet: fix kmemleak false-positive reports for
 skb

Kmemleak reports following false positive memory leaks for each sk
buffers allocated by DPAA (build_skb()) in _dpa_bp_add_8_bufs:

unreferenced object 0xffff80007348bd00 (size 256):
  comm "swapper/0", pid 1, jiffies 4294937718 (age 344156.010s)
  hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  backtrace:
    [<ffff8000001e5458>] create_object+0xf8/0x258
    [<ffff800000920790>] kmemleak_alloc+0x58/0xa0
    [<ffff8000001d58b8>] kmem_cache_alloc+0x2c0/0x350
    [<ffff8000007eb7a8>] __build_skb+0x30/0xc0
    [<ffff8000007eb860>] build_skb+0x28/0xa8
    [<ffff8000006716b0>] _dpa_bp_add_8_bufs+0xb0/0x2f8
    [<ffff8000006719f8>] dpa_bp_priv_seed+0x90/0xd0
    [<ffff800000673730>] dpa_bp_alloc+0x1b8/0x270
    [<ffff800000671044>] dpaa_eth_priv_probe+0x234/0x778
    [<ffff80000052847c>] platform_drv_probe+0x54/0xc0
    [<ffff800000526250>] driver_probe_device+0x1b0/0x2d0
    [<ffff80000052647c>] __driver_attach+0xac/0xb0
    [<ffff8000005240e8>] bus_for_each_dev+0x70/0xb0
    [<ffff800000525be0>] driver_attach+0x30/0x40
    [<ffff8000005257e8>] bus_add_driver+0x160/0x218
    [<ffff800000526ea8>] driver_register+0x68/0x128

This happens because DPAA allocates SK buffers and then passes pointers
for DMA usages, which belongs to DEV MMIO space.  Kmemleak does not scan
IO memory and so reports memory leaks.

Hence, mark allocated sk buffers as false positive explicitly.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index 6e5337c..f58dae1 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -116,6 +116,9 @@ static int _dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp)
 			put_page(virt_to_head_page(new_buf));
 			goto build_skb_failed;
 		}
+
+		kmemleak_not_leak(skb);
+
 		DPA_WRITE_SKB_PTR(skb, skbh, new_buf, -1);
 
 		addr = dma_map_single(dev, new_buf,
-- 
2.7.4

