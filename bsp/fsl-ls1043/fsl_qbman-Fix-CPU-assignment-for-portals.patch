From dd076d699bd38ca8e21589691dc7f4d11a6eb8eb Mon Sep 17 00:00:00 2001
From: Roy Pledge <Roy.Pledge@freescale.com>
Date: Mon, 15 Jun 2015 10:42:19 -0400
Subject: [PATCH 201/451] fsl_qbman: Fix CPU assignment for portals

Handle the case where not all CPUs are online at boot

Signed-off-by: Roy Pledge <Roy.Pledge@freescale.com>
[Xulin: Original patch taken from
Linux-LS1043A-SDK-V0.4-SOURCE-20150826-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl_qbman/bman_driver.c |    2 +-
 drivers/staging/fsl_qbman/bman_high.c   |    2 +-
 drivers/staging/fsl_qbman/qman_driver.c |    2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_driver.c b/drivers/staging/fsl_qbman/bman_driver.c
index 50df524..5d6df88 100644
--- a/drivers/staging/fsl_qbman/bman_driver.c
+++ b/drivers/staging/fsl_qbman/bman_driver.c
@@ -434,7 +434,7 @@ __init int bman_init(void)
 	}
 	if (list_empty(&shared_pcfgs) && list_empty(&unshared_pcfgs)) {
 		/* Default, give an unshared portal to each online cpu */
-		for_each_possible_cpu(cpu) {
+		for_each_online_cpu(cpu) {
 			pcfg = get_pcfg(&unused_pcfgs);
 			if (!pcfg)
 				break;
diff --git a/drivers/staging/fsl_qbman/bman_high.c b/drivers/staging/fsl_qbman/bman_high.c
index 50163b4..7882c53 100644
--- a/drivers/staging/fsl_qbman/bman_high.c
+++ b/drivers/staging/fsl_qbman/bman_high.c
@@ -316,7 +316,7 @@ struct bman_portal *bman_create_portal(
 			irq_can_set_affinity(config->public_cfg.irq) &&
 			irq_set_affinity(config->public_cfg.irq,
 				cpumask_of(config->public_cfg.cpu))) {
-		pr_err("irq_set_affinity() failed\n");
+		pr_err("irq_set_affinity() failed %s\n", portal->irqname);
 		goto fail_affinity;
 	}
 
diff --git a/drivers/staging/fsl_qbman/qman_driver.c b/drivers/staging/fsl_qbman/qman_driver.c
index e072afe..2f7da7f 100644
--- a/drivers/staging/fsl_qbman/qman_driver.c
+++ b/drivers/staging/fsl_qbman/qman_driver.c
@@ -824,7 +824,7 @@ __init int qman_init(void)
 		}
 	}
 	if (list_empty(&shared_pcfgs) && list_empty(&unshared_pcfgs)) {
-		for_each_possible_cpu(cpu) {
+		for_each_online_cpu(cpu) {
 			pcfg = get_pcfg(&unused_pcfgs);
 			if (!pcfg)
 				break;
-- 
1.7.5.4

