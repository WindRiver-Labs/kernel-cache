From 84f622203e526938f56bffefcf25a789262a324a Mon Sep 17 00:00:00 2001
From: Alex Porosanu <alexandru.porosanu@freescale.com>
Date: Mon, 10 Aug 2015 23:36:01 +0300
Subject: [PATCH 444/451] crypto/caam: fix final bit setting in JR SG entries

The "F" bit in the JR scatter-gather entries is not set
taking into account the core and SEC endianness.
This patch fixes it throughout the SEC codebase.

Signed-off-by: Alex Porosanu <alexandru.porosanu@freescale.com>
[Xulin: Original patch taken from
Linux-LS1043A-SDK-V0.4-SOURCE-20150826-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/crypto/caam/caamhash.c   |   13 ++++++++++---
 drivers/crypto/caam/caampkc.c    |    3 ++-
 drivers/crypto/caam/sg_sw_sec4.h |    3 ++-
 3 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/drivers/crypto/caam/caamhash.c b/drivers/crypto/caam/caamhash.c
index 1076103..625d7ba 100644
--- a/drivers/crypto/caam/caamhash.c
+++ b/drivers/crypto/caam/caamhash.c
@@ -829,8 +829,11 @@ static int ahash_update_ctx(struct ahash_request *req)
 				state->current_buf = !state->current_buf;
 			}
 		} else {
-			(edesc->sec4_sg + sec4_sg_src_index - 1)->len |=
-							SEC4_SG_LEN_FIN;
+			(edesc->sec4_sg + sec4_sg_src_index - 1)->len =
+				wr_en_val32(
+					rd_en_val32((edesc->sec4_sg +
+						sec4_sg_src_index - 1)->len) |
+						SEC4_SG_LEN_FIN);
 		}
 
 		sh_len = desc_len(sh_desc);
@@ -921,7 +924,11 @@ static int ahash_final_ctx(struct ahash_request *req)
 	state->buf_dma = try_buf_map_to_sec4_sg(jrdev, edesc->sec4_sg + 1,
 						buf, state->buf_dma, buflen,
 						last_buflen);
-	(edesc->sec4_sg + sec4_sg_bytes - 1)->len |= SEC4_SG_LEN_FIN;
+
+	(edesc->sec4_sg + sec4_sg_bytes - 1)->len =
+		wr_en_val32(rd_en_val32((edesc->sec4_sg +
+					sec4_sg_bytes - 1)->len) |
+			    SEC4_SG_LEN_FIN);
 
 	append_seq_in_ptr(desc, edesc->sec4_sg_dma, ctx->ctx_len + buflen,
 			  LDST_SGF);
diff --git a/drivers/crypto/caam/caampkc.c b/drivers/crypto/caam/caampkc.c
index e9944a4..56d27de 100644
--- a/drivers/crypto/caam/caampkc.c
+++ b/drivers/crypto/caam/caampkc.c
@@ -527,7 +527,8 @@ static int caam_keygen_edesc(struct pkc_request *req,
 	if (edesc->erratum_A_006899) {
 		dma_to_sec4_sg_one(&(edesc->g_sg), edesc->g_dma,
 				   key_req->g_len, 0);
-		edesc->g_sg.len |= SEC4_SG_LEN_FIN;
+		edesc->g_sg.len = wr_en_val32(rd_en_val32(edesc->g_sg.len) |
+					      SEC4_SG_LEN_FIN);
 
 		edesc->g_sg_dma = dma_map_single(dev, &(edesc->g_sg),
 						 sizeof(struct sec4_sg_entry),
diff --git a/drivers/crypto/caam/sg_sw_sec4.h b/drivers/crypto/caam/sg_sw_sec4.h
index 893f107..96d112c 100644
--- a/drivers/crypto/caam/sg_sw_sec4.h
+++ b/drivers/crypto/caam/sg_sw_sec4.h
@@ -58,7 +58,8 @@ static inline void sg_to_sec4_sg_last(struct scatterlist *sg, int sg_count,
 	if (!sg)
 		return;
 	sec4_sg_ptr = sg_to_sec4_sg(sg, sg_count, sec4_sg_ptr, offset);
-	sec4_sg_ptr->len |= SEC4_SG_LEN_FIN;
+	sec4_sg_ptr->len = wr_en_val32(rd_en_val32(sec4_sg_ptr->len) |
+				       SEC4_SG_LEN_FIN);
 }
 
 /* count number of elements in scatterlist */
-- 
1.7.5.4

