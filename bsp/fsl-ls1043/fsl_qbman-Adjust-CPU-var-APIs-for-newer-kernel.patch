From a528cd3f81c9d9b8ce39dbcbbb50b8e7fa7ecbd2 Mon Sep 17 00:00:00 2001
From: Roy Pledge <Roy.Pledge@freescale.com>
Date: Tue, 19 May 2015 15:44:55 -0400
Subject: [PATCH 141/451] fsl_qbman: Adjust CPU var APIs for newer kernel

The __get_cpu_var() API was removed in newer Linux kernels.
This patch addresses that change by calling the correct APIs

Signed-off-by: Roy Pledge <Roy.Pledge@freescale.com>
[Xulin: Original patch taken from
Linux-LS1043A-SDK-V0.4-SOURCE-20150826-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl_qbman/bman_high.c           |    2 +-
 drivers/staging/fsl_qbman/qman_high.c           |    2 +-
 drivers/staging/fsl_qbman/qman_test_hotpotato.c |    4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_high.c b/drivers/staging/fsl_qbman/bman_high.c
index 927faf2..d6ec015 100644
--- a/drivers/staging/fsl_qbman/bman_high.c
+++ b/drivers/staging/fsl_qbman/bman_high.c
@@ -117,7 +117,7 @@ static inline void put_affine_portal(void)
 }
 static inline struct bman_portal *get_poll_portal(void)
 {
-	return &__get_cpu_var(bman_affine_portal);
+	return this_cpu_ptr(&bman_affine_portal);
 }
 #define put_poll_portal()
 
diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 7ba897a..4486a38 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -188,7 +188,7 @@ static inline void put_affine_portal(void)
  * this case to not disable pre-emption. */
 static inline struct qman_portal *get_poll_portal(void)
 {
-	return &__get_cpu_var(qman_affine_portal);
+	return &get_cpu_var(qman_affine_portal);
 }
 #define put_poll_portal()
 
diff --git a/drivers/staging/fsl_qbman/qman_test_hotpotato.c b/drivers/staging/fsl_qbman/qman_test_hotpotato.c
index 05db7ee..85495da 100644
--- a/drivers/staging/fsl_qbman/qman_test_hotpotato.c
+++ b/drivers/staging/fsl_qbman/qman_test_hotpotato.c
@@ -273,7 +273,7 @@ static void create_per_cpu_handlers(void)
 {
 	struct hp_handler *handler;
 	int loop;
-	struct hp_cpu *hp_cpu = &__get_cpu_var(hp_cpus);
+	struct hp_cpu *hp_cpu = this_cpu_ptr(&hp_cpus);
 
 	hp_cpu->processor_id = smp_processor_id();
 	spin_lock(&hp_lock);
@@ -295,7 +295,7 @@ static void create_per_cpu_handlers(void)
 static void destroy_per_cpu_handlers(void)
 {
 	struct list_head *loop, *tmp;
-	struct hp_cpu *hp_cpu = &__get_cpu_var(hp_cpus);
+	struct hp_cpu *hp_cpu = this_cpu_ptr(&hp_cpus);
 
 	spin_lock(&hp_lock);
 	list_del(&hp_cpu->node);
-- 
1.7.5.4

