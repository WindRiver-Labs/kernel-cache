From 41a7cc4c25a867a3c844bb5ed3071b734883ab7f Mon Sep 17 00:00:00 2001
From: Roy Pledge <Roy.Pledge@freescale.com>
Date: Tue, 2 Jun 2015 09:07:40 -0400
Subject: [PATCH 173/451] fsl_qbman: Fix endianess issues related to frame
 queue cleanup

Update the QBMan frame queue cleanup routines to handle running on
little endian systems.

Signed-off-by: Roy Pledge <Roy.Pledge@freescale.com>
[Xulin: Original patch taken from
Linux-LS1043A-SDK-V0.4-SOURCE-20150826-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl_qbman/qman_low.h |   10 ++++++----
 1 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_low.h b/drivers/staging/fsl_qbman/qman_low.h
index f7dd92a..a27a132 100644
--- a/drivers/staging/fsl_qbman/qman_low.h
+++ b/drivers/staging/fsl_qbman/qman_low.h
@@ -1190,6 +1190,7 @@ static inline int qm_shutdown_fq(struct qm_portal **portal, int portal_count,
 	int orl_empty, fq_empty, i, drain = 0;
 	u32 result;
 	u32 channel, wq;
+	u16 dest_wq;
 
 	/* Determine the state of the FQID */
 	mcc = qm_mc_start(portal[0]);
@@ -1211,8 +1212,9 @@ static inline int qm_shutdown_fq(struct qm_portal **portal, int portal_count,
 	DPA_ASSERT((mcr->verb & QM_MCR_VERB_MASK) == QM_MCR_VERB_QUERYFQ);
 
 	/* Need to store these since the MCR gets reused */
-	channel = mcr->queryfq.fqd.dest.channel;
-	wq = mcr->queryfq.fqd.dest.wq;
+	dest_wq = be16_to_cpu(mcr->queryfq.fqd.dest_wq);
+	channel = dest_wq & 0x7;
+	wq = dest_wq>>3;
 
 	switch (state) {
 	case QM_MCR_NP_STATE_TEN_SCHED:
@@ -1363,7 +1365,7 @@ static inline int qm_shutdown_fq(struct qm_portal **portal, int portal_count,
 			cpu_relax();
 		}
 		mcc = qm_mc_start(portal[0]);
-		mcc->alterfq.fqid = fqid;
+		mcc->alterfq.fqid = cpu_to_be32(fqid);
 		qm_mc_commit(portal[0], QM_MCC_VERB_ALTER_OOS);
 		while (!(mcr = qm_mc_result(portal[0])))
 			cpu_relax();
@@ -1378,7 +1380,7 @@ static inline int qm_shutdown_fq(struct qm_portal **portal, int portal_count,
 	case QM_MCR_NP_STATE_RETIRED:
 		/* Send OOS Command */
 		mcc = qm_mc_start(portal[0]);
-		mcc->alterfq.fqid = fqid;
+		mcc->alterfq.fqid = cpu_to_be32(fqid);
 		qm_mc_commit(portal[0], QM_MCC_VERB_ALTER_OOS);
 		while (!(mcr = qm_mc_result(portal[0])))
 			cpu_relax();
-- 
1.7.5.4

