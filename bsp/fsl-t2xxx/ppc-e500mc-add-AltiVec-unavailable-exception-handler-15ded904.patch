From 1d4cf908445839963cf06d3cee3d7d09f0752042 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Wed, 2 Mar 2016 07:16:42 +0000
Subject: [PATCH 1/3] ppc/e500mc: add AltiVec unavailable exception handler

The E6500 core contains AltiVec, but it can only work on 64bit mode.
If E6500 works on 32bit mode(ppc_e500mc), and some user space applications
call Altivec instruction, the below calltrace would be triggered.
So add the Altivec exception handling code to avoid this error.

Unrecoverable FP Unavailable Exception 801 at c0000000
Oops: Unrecoverable FP Unavailable Exception, sig: 6 [#1]
PREEMPT SMP NR_CPUS=8 CoreNet Generic
Modules linked in: mpc85xx_edac edac_core
CPU: 0 PID: 302 Comm: dhclient Not tainted 3.14.39
task: c766ba80 ti: bfdf6000 task.ti: c646e000
NIP: c0000000 LR: 0f97fdfc CTR: 00000000
REGS: bfdf6cf0 TRAP: 0801   Not tainted  (3.14.39
MSR: 00021002 <CE,ME>  CR: 24000482  XER: 00000000

GPR00: 0f97fdf0 bfdf6da0 b7f704c0 00000000 0ffca32c 24000484 00000000 0fe87d3c
GPR08: 0002f902 00000000 00000000 fffffffe c646e000
NIP [c0000000] _start+0x0/0x1c
LR [0f97fdfc] 0xf97fdfc
Call Trace:
Instruction dump:
XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX
XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX <c0b44000> 48001be5 7c7e1b78 7c9f2378
---[ end trace 25fea6b5e3c32f5f ]---

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/powerpc/kernel/head_fsl_booke.S |    8 ++++++++
 1 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/kernel/head_fsl_booke.S b/arch/powerpc/kernel/head_fsl_booke.S
index 1b57106..cf8eb75 100644
--- a/arch/powerpc/kernel/head_fsl_booke.S
+++ b/arch/powerpc/kernel/head_fsl_booke.S
@@ -636,6 +636,12 @@ END_FTR_SECTION_IFSET(CPU_FTR_EMB_HV)
 		  unknown_exception, EXC_XFER_EE)
 #endif /* CONFIG_SPE_POSSIBLE */
 
+#ifdef CONFIG_PPC_E500MC
+	/* Altivec Unavailable Interrupt */
+	EXCEPTION(0x2020, ALTIVEC_UNAVAIL, altivec_unavailable, \
+		  altivec_unavailable_exception, EXC_XFER_EE)
+#endif /* CONFIG_PPC_E500MC */
+
 	/* SPE Floating Point Data */
 #ifdef CONFIG_SPE
 	EXCEPTION(0x2030, SPE_FP_DATA_ALTIVEC_ASSIST, SPEFloatingPointData,
@@ -993,6 +999,8 @@ _GLOBAL(__setup_e500_ivors)
 _GLOBAL(__setup_e500mc_ivors)
 	li	r3,DebugDebug@l
 	mtspr	SPRN_IVOR15,r3
+	li	r3,altivec_unavailable@l
+	mtspr	SPRN_IVOR32,r3
 	li	r3,PerformanceMonitor@l
 	mtspr	SPRN_IVOR35,r3
 	li	r3,Doorbell@l
-- 
1.7.5.4

