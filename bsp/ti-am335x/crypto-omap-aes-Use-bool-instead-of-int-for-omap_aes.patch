From 173bfe938c9e789ff6b01979d4462f149f4c722f Mon Sep 17 00:00:00 2001
From: Lokesh Vutla <lokeshvutla@ti.com>
Date: Wed, 22 Mar 2017 10:50:09 +0530
Subject: [PATCH 750/895] crypto: omap-aes: Use bool instead of int for
 omap_aes_check_aligned()

omap_aes_check_aligned() verifies whether the input buffer is aligned for
DMA or not but uses int for this verification. So use bool instead of int.
Also rename the function to omap_aes_copy_needed() as it is not checking
for just alignment.

Signed-off-by: Lokesh Vutla <lokeshvutla@ti.com>
(cherry picked from commit 4f15d74a43389f99e5d882db67e3b40aa5621d33)
---
 drivers/crypto/omap-aes-gcm.c |    6 +++---
 drivers/crypto/omap-aes.c     |   16 ++++++++--------
 drivers/crypto/omap-aes.h     |    2 +-
 3 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/drivers/crypto/omap-aes-gcm.c b/drivers/crypto/omap-aes-gcm.c
index 5be3a65..c0fc350 100644
--- a/drivers/crypto/omap-aes-gcm.c
+++ b/drivers/crypto/omap-aes-gcm.c
@@ -121,7 +121,7 @@ static int omap_aes_gcm_copy_buffers(struct omap_aes_dev *dd,
 	assoc = &req->src[0];
 	sg_init_table(dd->in_sgl, nsg + 1);
 	if (assoclen) {
-		if (omap_aes_check_aligned(assoc, assoclen)) {
+		if (omap_aes_copy_needed(assoc, assoclen)) {
 			dd->sgs_copied |= AES_ASSOC_DATA_COPIED;
 			pages = get_order(alen);
 			buf_in = (void *)__get_free_pages(GFP_ATOMIC, pages);
@@ -142,7 +142,7 @@ static int omap_aes_gcm_copy_buffers(struct omap_aes_dev *dd,
 	if (req->cryptlen) {
 		input = scatterwalk_ffwd(tmp, req->src, req->assoclen);
 
-		if (omap_aes_check_aligned(input, req->cryptlen)) {
+		if (omap_aes_copy_needed(input, req->cryptlen)) {
 			dd->sgs_copied |= AES_IN_DATA_COPIED;
 			pages = get_order(clen);
 			buf_in = (void *)__get_free_pages(GFP_ATOMIC, pages);
@@ -164,7 +164,7 @@ static int omap_aes_gcm_copy_buffers(struct omap_aes_dev *dd,
 	dd->assoc_len = assoclen;
 	dd->authsize = authlen;
 
-	if (omap_aes_check_aligned(req->dst, cryptlen + assoclen)) {
+	if (omap_aes_copy_needed(req->dst, cryptlen + assoclen)) {
 		pages = get_order(clen);
 
 		buf_in = (void *)__get_free_pages(GFP_ATOMIC, pages);
diff --git a/drivers/crypto/omap-aes.c b/drivers/crypto/omap-aes.c
index 9a84cb1..9d4befb 100644
--- a/drivers/crypto/omap-aes.c
+++ b/drivers/crypto/omap-aes.c
@@ -410,18 +410,18 @@ int omap_aes_crypt_dma_stop(struct omap_aes_dev *dd)
 	return 0;
 }
 
-int omap_aes_check_aligned(struct scatterlist *sg, int total)
+bool omap_aes_copy_needed(struct scatterlist *sg, int total)
 {
 	int len = 0;
 
 	if (!IS_ALIGNED(total, AES_BLOCK_SIZE))
-		return -EINVAL;
+		return true;
 
 	while (sg) {
 		if (!IS_ALIGNED(sg->offset, 4))
-			return -1;
+			return true;
 		if (!IS_ALIGNED(sg->length, AES_BLOCK_SIZE))
-			return -1;
+			return true;
 
 		len += sg->length;
 		sg = sg_next(sg);
@@ -431,9 +431,9 @@ int omap_aes_check_aligned(struct scatterlist *sg, int total)
 	}
 
 	if (len != total)
-		return -1;
+		return true;
 
-	return 0;
+	return false;
 }
 
 static int omap_aes_copy_sgs(struct omap_aes_dev *dd)
@@ -504,8 +504,8 @@ static int omap_aes_prepare_req(struct crypto_engine *engine,
 	if (dd->out_sg_len < 0)
 		return dd->out_sg_len;
 
-	if (omap_aes_check_aligned(dd->in_sg, dd->total) ||
-	    omap_aes_check_aligned(dd->out_sg, dd->total)) {
+	if (omap_aes_copy_needed(dd->in_sg, dd->total) ||
+	    omap_aes_copy_needed(dd->out_sg, dd->total)) {
 		if (omap_aes_copy_sgs(dd))
 			pr_err("Failed to copy SGs for unaligned cases\n");
 		dd->sgs_copied = 1;
diff --git a/drivers/crypto/omap-aes.h b/drivers/crypto/omap-aes.h
index 1d92847..37bc92d 100644
--- a/drivers/crypto/omap-aes.h
+++ b/drivers/crypto/omap-aes.h
@@ -212,7 +212,7 @@ int omap_aes_gcm_decrypt(struct aead_request *req);
 int omap_aes_4106gcm_encrypt(struct aead_request *req);
 int omap_aes_4106gcm_decrypt(struct aead_request *req);
 int omap_aes_write_ctrl(struct omap_aes_dev *dd);
-int omap_aes_check_aligned(struct scatterlist *sg, int total);
+bool omap_aes_copy_needed(struct scatterlist *sg, int total);
 int omap_aes_crypt_dma_start(struct omap_aes_dev *dd);
 void omap_aes_gcm_dma_out_callback(void *data);
 int omap_aes_crypt_dma_stop(struct omap_aes_dev *dd);
-- 
1.7.5.4

