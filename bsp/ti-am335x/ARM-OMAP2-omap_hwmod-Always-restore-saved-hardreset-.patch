From b32d06d5dbd329fb9a1f819d083694d7589e0b73 Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Wed, 14 Dec 2016 16:00:40 +0530
Subject: [PATCH 641/895] ARM: OMAP2+: omap_hwmod: Always restore saved
 hardreset context

Previously when restoring hardreset context during
omap_hwmod_restore_context we would only deassert the hardreset lines if
the module was previously active, however, if a hwmod has all hardresets
asserted then _enable will return without actually enabling the module.

This is a problem for the gfx hwmod on am437x as it gets disabled in
suspend path so it appears as disabled to the restore context code but
then during the attempted enable call during the regular kernel resume
path, the hwmod cannot actually be enabled.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
(cherry picked from commit b67ad14b10d091e4e4f3cc339deb88f438439b42)
---
 arch/arm/mach-omap2/omap_hwmod.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-omap2/omap_hwmod.c b/arch/arm/mach-omap2/omap_hwmod.c
index f2ad7b2..8fdf451 100644
--- a/arch/arm/mach-omap2/omap_hwmod.c
+++ b/arch/arm/mach-omap2/omap_hwmod.c
@@ -4160,7 +4160,7 @@ static int omap_hwmod_restore_context(struct omap_hwmod *oh, void *unused)
 	for (i = 0; i < oh->rst_lines_cnt; i++)
 		if (oh->rst_lines[i].context)
 			_assert_hardreset(oh, oh->rst_lines[i].name);
-		else if (oh->_state == _HWMOD_STATE_ENABLED)
+		else
 			_deassert_hardreset(oh, oh->rst_lines[i].name);
 
 	if (oh->_state == _HWMOD_STATE_ENABLED) {
-- 
1.7.5.4

