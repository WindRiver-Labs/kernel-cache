From 08e0be05944152cc6ed85dc9c9554d1401a80bc6 Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Wed, 2 Dec 2015 14:12:36 -0600
Subject: [PATCH 744/800] ARM: OMAP2+: omap_hwmod: Always restore saved
 hardreset context

Previously when restoring hardreset context during
omap_hwmod_restore_context we would only deassert the hardreset lines if
the module was previously active, however, if a hwmod has all hardresets
asserted then _enable will return without actually enabling the module.

This is a problem for the gfx hwmod on am437x as it gets disabled in
suspend path so it appears as disabled to the restore context code but
then during the attempted enable call during the regular kernel resume
path, the hwmod cannot actually be enabled.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
Acked-by: Tero Kristo <t-kristo@ti.com>
[zou: Original patch taken from PROCESSOR-SDK-LINUX-AM335X 02_00_01_07]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/omap_hwmod.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-omap2/omap_hwmod.c b/arch/arm/mach-omap2/omap_hwmod.c
index 520978ed..1bdbc0a 100644
--- a/arch/arm/mach-omap2/omap_hwmod.c
+++ b/arch/arm/mach-omap2/omap_hwmod.c
@@ -4110,7 +4110,7 @@ static int omap_hwmod_restore_context(struct omap_hwmod *oh, void *unused)
 	for (i = 0; i < oh->rst_lines_cnt; i++)
 		if (oh->rst_lines[i].context)
 			_assert_hardreset(oh, oh->rst_lines[i].name);
-		else if (oh->_state == _HWMOD_STATE_ENABLED)
+		else
 			_deassert_hardreset(oh, oh->rst_lines[i].name);
 
 	if (oh->_state == _HWMOD_STATE_ENABLED) {
-- 
1.7.5.4

