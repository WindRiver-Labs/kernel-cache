From 1134d69206f80037d214b2700b51a9269c045364 Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Mon, 27 Jul 2015 14:41:46 -0500
Subject: [PATCH 303/800] ARM: OMAP2+: pm33xx: Refactor am33xx_push_sram_idle

Separate out the portions of am33xx_push_sram_idle that handles the
generic allocator calls and emif function address lookup from the
actual copy functionailty. We only need to do the allocation during
init as this will be preserved, however we need to redo the copy to the
previously allocated address space after any transition that causes
us to lose SRAM context, like RTC+DDR mode, so that the PM code is
available to us at the same addresses as before for future low power
transitions.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
[zou: Original patch taken from PROCESSOR-SDK-LINUX-AM335X 02_00_01_07]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/pm33xx.c |   17 ++++++++++++-----
 1 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index 042c2cb..46fc213 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -162,10 +162,7 @@ static void am33xx_pm_set_ipc_ops(void)
 	wkup_m3_set_resume_address(resume_address);
 }
 
-/*
- * Push the minimal suspend-resume code to SRAM
- */
-static int am33xx_push_sram_idle(void)
+static int am33xx_prepare_push_sram_idle(void)
 {
 	struct device_node *np;
 	int ret;
@@ -205,6 +202,15 @@ static int am33xx_push_sram_idle(void)
 	/* Save physical address to calculate resume offset during pm init */
 	am33xx_do_wfi_sram_phys = gen_pool_virt_to_phys(sram_pool,
 							ocmcram_location);
+
+	return 0;
+}
+
+/*
+ * Push the minimal suspend-resume code to SRAM
+ */
+int am33xx_push_sram_idle(void)
+{
 	am33xx_do_wfi_sram = (void *)fncpy((void *)ocmcram_location,
 					   pm_sram->do_wfi,
 					   *pm_sram->do_wfi_sz);
@@ -226,10 +232,11 @@ int am33xx_pm_init(void)
 		return -ENODEV;
 	}
 
-	ret = am33xx_push_sram_idle();
+	ret = am33xx_prepare_push_sram_idle();
 	if (ret)
 		return ret;
 
+	am33xx_push_sram_idle();
 	am33xx_pm_set_ipc_ops();
 
 #ifdef CONFIG_SUSPEND
-- 
1.7.5.4

