From 11aa0cfe9dd842d95015d1dfdcf2b55dffb480cb Mon Sep 17 00:00:00 2001
From: Ramesh Gupta <grgupta@ti.com>
Date: Mon, 13 Jun 2011 23:51:13 +0300
Subject: [PATCH 449/800] iommu/omap: flush page table entries from L2 cache

The functions flush_iopgd_range() and flush_iopte_range()
are not performing any L2 cache operations when flushing
the MMU page table entries. This has resulted in unnecessary
MMU faults on the DSP and IPU processors on OMAP4 (not seen
on OMAP5 though due to the L2 cache differences). Fix this
by adding proper outer cache operations. The asm instruction
used for the inner cache has also been replaced with an
appropriate API.

NOTE:
This is a temporary patch and an up-port of an older product
version patch. The usage of dmac_flush_range() API is in
general frowned upon outside the dma-mapping layer, but some
usage already exists within the IOMMU drivers.

Signed-off-by: Ramesh Gupta <grgupta@ti.com>
Signed-off-by: Hari Kanigeri <h-kanigeri2@ti.com>
[s-anna@ti.com: add commit description]
Signed-off-by: Suman Anna <s-anna@ti.com>
[zou: Original patch taken from PROCESSOR-SDK-LINUX-AM335X 02_00_01_07]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/iommu/omap-iommu.c |   16 ++++------------
 1 files changed, 4 insertions(+), 12 deletions(-)

diff --git a/drivers/iommu/omap-iommu.c b/drivers/iommu/omap-iommu.c
index 41305b3..06ddcb0 100644
--- a/drivers/iommu/omap-iommu.c
+++ b/drivers/iommu/omap-iommu.c
@@ -453,22 +453,14 @@ static void flush_iotlb_all(struct omap_iommu *obj)
  */
 static void flush_iopgd_range(u32 *first, u32 *last)
 {
-	/* FIXME: L2 cache should be taken care of if it exists */
-	do {
-		asm("mcr	p15, 0, %0, c7, c10, 1 @ flush_pgd"
-		    : : "r" (first));
-		first += L1_CACHE_BYTES / sizeof(*first);
-	} while (first <= last);
+	dmac_flush_range(first, last);
+	outer_flush_range(virt_to_phys(first), virt_to_phys(last));
 }
 
 static void flush_iopte_range(u32 *first, u32 *last)
 {
-	/* FIXME: L2 cache should be taken care of if it exists */
-	do {
-		asm("mcr	p15, 0, %0, c7, c10, 1 @ flush_pte"
-		    : : "r" (first));
-		first += L1_CACHE_BYTES / sizeof(*first);
-	} while (first <= last);
+	dmac_flush_range(first, last);
+	outer_flush_range(virt_to_phys(first), virt_to_phys(last));
 }
 
 static void iopte_free(u32 *iopte)
-- 
1.7.5.4

