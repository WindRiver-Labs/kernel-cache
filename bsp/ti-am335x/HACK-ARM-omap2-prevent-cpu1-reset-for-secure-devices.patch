From f03f41dbf7d8280779240b790a1b1be109321087 Mon Sep 17 00:00:00 2001
From: Tero Kristo <t-kristo@ti.com>
Date: Tue, 28 Feb 2017 13:10:54 +0200
Subject: [PATCH 699/895] HACK: ARM: omap2+: prevent cpu1 reset for secure
 devices during boot

CPU1 can't be reset on secure devices, as this will wipe the CPU
out of its secure content also, effectively killing secure side
OS. This patch breaks kexec on secure devices and should be fixed
at some point properly by parking CPU1 to the ROM code, and
letting it be released similar to how cold boot does it.

Signed-off-by: Tero Kristo <t-kristo@ti.com>
Tested-by: Andrew F. Davis <afd@ti.com>
Tested-by: Keerthy <j-keerthy@ti.com>
(cherry picked from commit ba19beeb02fa8f43f61b387c3b161cce0b14bdd3)
---
 arch/arm/mach-omap2/omap-smp.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-omap2/omap-smp.c b/arch/arm/mach-omap2/omap-smp.c
index b528933..d0a5282 100644
--- a/arch/arm/mach-omap2/omap-smp.c
+++ b/arch/arm/mach-omap2/omap-smp.c
@@ -302,8 +302,12 @@ static void __init omap4_smp_prepare_cpus(unsigned int max_cpus)
 	/*
 	 * Reset CPU1 before configuring, otherwise kexec will
 	 * end up trying to use old kernel startup address.
+	 * Resetting CPU1 causes secure side to lose context
+	 * on HS devices, so this step is skipped for them.
+	 * This breaks Kexec on HS devices and should be fixed
+	 * properly at some point.
 	 */
-	if (cfg.cpu1_rstctrl_va) {
+	if (omap_type() != OMAP2_DEVICE_TYPE_SEC && cfg.cpu1_rstctrl_va) {
 		writel_relaxed(1, cfg.cpu1_rstctrl_va);
 		readl_relaxed(cfg.cpu1_rstctrl_va);
 		writel_relaxed(0, cfg.cpu1_rstctrl_va);
-- 
1.7.5.4

