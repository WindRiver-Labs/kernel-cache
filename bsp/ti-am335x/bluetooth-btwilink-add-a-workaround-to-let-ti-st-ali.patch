From 5c290c76e66c8503007916b54ded83d30988f648 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 8 Nov 2017 09:31:32 +0800
Subject: [PATCH 3/3] bluetooth: btwilink: add a workaround to let ti-st alive

Generally speaking, hci-dev should close hci_uart->close, but unlucky,
ti-st has taken the ball from hci_uart, it should never register into
hci-core, otherwise, auto poweroff will close the driver directly. So
we add a workaround to avoid this ugly situation.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/bluetooth/btwilink.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/drivers/bluetooth/btwilink.c b/drivers/bluetooth/btwilink.c
index 4150dbd..6d49d66 100644
--- a/drivers/bluetooth/btwilink.c
+++ b/drivers/bluetooth/btwilink.c
@@ -230,6 +230,14 @@ static int ti_st_close(struct hci_dev *hdev)
 	int err, i;
 	struct ti_st *hst = hci_get_drvdata(hdev);
 
+	/*
+         * A workaround plug to a mismatch between driver and proto. This should
+         * never happen normally, but unlucky we have a wrong TI_ST driver and
+         * apps, so we set the plug to workaround.
+	 */
+	if(test_bit(HCI_RUNNING, hdev->dev_flags))
+		return 0;
+
 	for (i = MAX_BT_CHNL_IDS-1; i >= 0; i--) {
 		err = st_unregister(&ti_st_proto[i]);
 		if (err)
@@ -307,6 +315,7 @@ static int bt_ti_probe(struct platform_device *pdev)
 	hdev->send = ti_st_send_frame;
 
 	err = hci_register_dev(hdev);
+	clear_bit(HCI_AUTO_OFF, (hdev)->dev_flags);
 	if (err < 0) {
 		BT_ERR("Can't register HCI device error %d", err);
 		hci_free_dev(hdev);
-- 
2.7.4

