From b833d80922177671ad80dd41db59880e7f8595a2 Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Wed, 1 Feb 2017 13:40:11 -0600
Subject: [PATCH 574/895] remoteproc/pruss: add support for PRU-ICSS
 subsystems on AM57xx SoCs

The AM57xx family of SoCs supports two PRU-ICSS instances, each of
which has two PRU processor cores. The two PRU-ICSS instances are
identical to each other, and are very similar to the PRU-ICSS1 of
AM33xx/AM43xx except for a few minor differences like the RAM sizes
and the number of interrupts coming into the MPU INTC. They do
not have a programmable module reset line unlike those present on
AM33xx/AM43xx SoCs. The modules are reset just like any other IP
with the SoC's global cold/warm resets. Each PRU-ICSS's INTC is also
preceded by a Crossbar that enables multiple external events to be
routed to a specific number of input interrupt events. Any interrupt
event directed towards PRUSS needs this crossbar to be setup properly
on the firmware side.

The existing PRUSS platform drivers have been enhanced to support
these AM57xx PRU-ICSS instances through new AM57xx specific
compatibles for properly probing and booting all the different PRU
cores in each PRU-ICSS processor subsystem. A build dependency
with SOC_DRA7XX is also added to enable the driver to be built in
AM57xx-only configuration (there is no separate Kconfig option
for AM57xx vs DRA7xx).

The auxdata lookup logic already supports multiple instances and
has been reused for AM57xx. This is required to differentiate the
firmware image names for the PRU cores between the two PRU-ICSS
processor subsystems.

The initial names for the firmware images are fixed for each PRU
core are expected to be as follows (these can be adjusted through
sysfs if required):
     PRU-ICSS1 PRU0 Core: am57xx-pru1_0-fw
     PRU-ICSS1 PRU1 Core: am57xx-pru1_1-fw
     PRU-ICSS2 PRU0 Core: am57xx-pru2_0-fw
     PRU-ICSS2 PRU1 Core: am57xx-pru2_1-fw

Signed-off-by: Suman Anna <s-anna@ti.com>
(cherry picked from commit f2dfa776cced7296aef7cddc0718ca6336779c7f)
---
 drivers/remoteproc/Kconfig         |    2 +-
 drivers/remoteproc/pru_rproc.c     |   46 ++++++++++++++++++++++++++++++++++++
 drivers/remoteproc/pruss.c         |   35 +++++++++++++++++++++++++++
 drivers/remoteproc/pruss_intc.c    |    4 +++
 drivers/remoteproc/pruss_soc_bus.c |    5 ++++
 5 files changed, 91 insertions(+), 1 deletions(-)

diff --git a/drivers/remoteproc/Kconfig b/drivers/remoteproc/Kconfig
index c176031..edc416b 100644
--- a/drivers/remoteproc/Kconfig
+++ b/drivers/remoteproc/Kconfig
@@ -95,7 +95,7 @@ config DA8XX_REMOTEPROC
 
 config PRUSS_REMOTEPROC
 	tristate "TI PRUSS remoteproc support"
-	depends on HAS_DMA && (SOC_AM33XX || SOC_AM43XX)
+	depends on HAS_DMA && (SOC_AM33XX || SOC_AM43XX || SOC_DRA7XX)
 	depends on REMOTEPROC
 	select MAILBOX
 	select OMAP2PLUS_MBOX
diff --git a/drivers/remoteproc/pru_rproc.c b/drivers/remoteproc/pru_rproc.c
index 1696529b..9d87b88 100644
--- a/drivers/remoteproc/pru_rproc.c
+++ b/drivers/remoteproc/pru_rproc.c
@@ -797,6 +797,28 @@ static struct pru_private_data am437x_pru0_1_rproc_pdata = {
 	.fw_name = "am437x-pru0_1-fw",
 };
 
+/* AM57xx PRUSS1 PRU core-specific private data */
+static struct pru_private_data am57xx_pru1_0_rproc_pdata = {
+	.id = 0,
+	.fw_name = "am57xx-pru1_0-fw",
+};
+
+static struct pru_private_data am57xx_pru1_1_rproc_pdata = {
+	.id = 1,
+	.fw_name = "am57xx-pru1_1-fw",
+};
+
+/* AM57xx PRUSS2 PRU core-specific private data */
+static struct pru_private_data am57xx_pru2_0_rproc_pdata = {
+	.id = 0,
+	.fw_name = "am57xx-pru2_0-fw",
+};
+
+static struct pru_private_data am57xx_pru2_1_rproc_pdata = {
+	.id = 1,
+	.fw_name = "am57xx-pru2_1-fw",
+};
+
 /* AM33xx SoC-specific PRU Device data */
 static struct pru_match_private_data am335x_pru_match_data[] = {
 	{
@@ -835,9 +857,33 @@ static struct pru_match_private_data am437x_pru_match_data[] = {
 	},
 };
 
+/* AM57xx SoC-specific PRU Device data */
+static struct pru_match_private_data am57xx_pru_match_data[] = {
+	{
+		.device_name	= "4b234000.pru0",
+		.priv_data	= &am57xx_pru1_0_rproc_pdata,
+	},
+	{
+		.device_name	= "4b238000.pru1",
+		.priv_data	= &am57xx_pru1_1_rproc_pdata,
+	},
+	{
+		.device_name	= "4b2b4000.pru0",
+		.priv_data	= &am57xx_pru2_0_rproc_pdata,
+	},
+	{
+		.device_name	= "4b2b8000.pru1",
+		.priv_data	= &am57xx_pru2_1_rproc_pdata,
+	},
+	{
+		/* sentinel */
+	},
+};
+
 static const struct of_device_id pru_rproc_match[] = {
 	{ .compatible = "ti,am3356-pru", .data = am335x_pru_match_data, },
 	{ .compatible = "ti,am4376-pru", .data = am437x_pru_match_data, },
+	{ .compatible = "ti,am5728-pru", .data = am57xx_pru_match_data, },
 	{},
 };
 MODULE_DEVICE_TABLE(of, pru_rproc_match);
diff --git a/drivers/remoteproc/pruss.c b/drivers/remoteproc/pruss.c
index 8598d01..e9fe3d7 100644
--- a/drivers/remoteproc/pruss.c
+++ b/drivers/remoteproc/pruss.c
@@ -163,6 +163,18 @@ static struct of_dev_auxdata am437x_pruss0_rproc_auxdata_lookup[] = {
 	{ /* sentinel */ },
 };
 
+static struct of_dev_auxdata am57xx_pruss1_rproc_auxdata_lookup[] = {
+	OF_DEV_AUXDATA("ti,am5728-pru", 0x4b234000, "4b234000.pru0", NULL),
+	OF_DEV_AUXDATA("ti,am5728-pru", 0x4b238000, "4b238000.pru1", NULL),
+	{ /* sentinel */ },
+};
+
+static struct of_dev_auxdata am57xx_pruss2_rproc_auxdata_lookup[] = {
+	OF_DEV_AUXDATA("ti,am5728-pru", 0x4b2b4000, "4b2b4000.pru0", NULL),
+	OF_DEV_AUXDATA("ti,am5728-pru", 0x4b2b8000, "4b2b8000.pru1", NULL),
+	{ /* sentinel */ },
+};
+
 /* instance-specific driver private data */
 static struct pruss_private_data am335x_pruss_priv_data = {
 	.aux_data = am335x_pruss_rproc_auxdata_lookup,
@@ -177,6 +189,14 @@ static struct pruss_private_data am437x_pruss0_priv_data = {
 	.has_no_sharedram = true,
 };
 
+static struct pruss_private_data am57xx_pruss1_priv_data = {
+	.aux_data = am57xx_pruss1_rproc_auxdata_lookup,
+};
+
+static struct pruss_private_data am57xx_pruss2_priv_data = {
+	.aux_data = am57xx_pruss2_rproc_auxdata_lookup,
+};
+
 static struct pruss_match_private_data am335x_match_data[] = {
 	{
 		.device_name	= "4a300000.pruss",
@@ -201,9 +221,24 @@ static struct pruss_match_private_data am437x_match_data[] = {
 	},
 };
 
+static struct pruss_match_private_data am57xx_match_data[] = {
+	{
+		.device_name	= "4b200000.pruss",
+		.priv_data	= &am57xx_pruss1_priv_data,
+	},
+	{
+		.device_name	= "4b280000.pruss",
+		.priv_data	= &am57xx_pruss2_priv_data,
+	},
+	{
+		/* sentinel */
+	},
+};
+
 static const struct of_device_id pruss_of_match[] = {
 	{ .compatible = "ti,am3356-pruss", .data = &am335x_match_data, },
 	{ .compatible = "ti,am4376-pruss", .data = &am437x_match_data, },
+	{ .compatible = "ti,am5728-pruss", .data = &am57xx_match_data, },
 	{ /* sentinel */ },
 };
 MODULE_DEVICE_TABLE(of, pruss_of_match);
diff --git a/drivers/remoteproc/pruss_intc.c b/drivers/remoteproc/pruss_intc.c
index 72c2494..548c3f0 100644
--- a/drivers/remoteproc/pruss_intc.c
+++ b/drivers/remoteproc/pruss_intc.c
@@ -580,6 +580,10 @@ static const struct of_device_id pruss_intc_of_match[] = {
 		.compatible = "ti,am4376-pruss-intc",
 		.data = &am437x_pruss_intc_data,
 	},
+	{
+		.compatible = "ti,am5728-pruss-intc",
+		.data = NULL,
+	},
 	{ /* sentinel */ },
 };
 MODULE_DEVICE_TABLE(of, pruss_intc_of_match);
diff --git a/drivers/remoteproc/pruss_soc_bus.c b/drivers/remoteproc/pruss_soc_bus.c
index 101b930db..2c936e2 100644
--- a/drivers/remoteproc/pruss_soc_bus.c
+++ b/drivers/remoteproc/pruss_soc_bus.c
@@ -146,9 +146,14 @@ static struct pruss_soc_bus_match_data am437x_data = {
 	.has_reset = true,
 };
 
+static struct pruss_soc_bus_match_data am57xx_data = {
+	.has_reset = false,
+};
+
 static const struct of_device_id pruss_soc_bus_of_match[] = {
 	{ .compatible = "ti,am3356-pruss-soc-bus", .data = &am335x_data, },
 	{ .compatible = "ti,am4376-pruss-soc-bus", .data = &am437x_data, },
+	{ .compatible = "ti,am5728-pruss-soc-bus", .data = &am57xx_data, },
 	{ /* sentinel */ },
 };
 MODULE_DEVICE_TABLE(of, pruss_soc_bus_of_match);
-- 
1.7.5.4

