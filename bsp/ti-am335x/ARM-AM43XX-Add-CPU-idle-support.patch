From 87ea159735c2f6331fdddf294f294d9a6eb2656b Mon Sep 17 00:00:00 2001
From: Russ Dill <russ.dill@ti.com>
Date: Fri, 25 Jul 2014 17:52:46 -0500
Subject: [PATCH 215/800] ARM: AM43XX: Add CPU idle support

This patch adds support for CPU idle on am437x. It has been tested on
the GP EVM. Currently it just gates the MPU clockdomain.

Future CPU idle changes could include powering off the MPU clock domain,
putting DDR into self refresh, putting the MPU PLL into bypass, and
disabling the EMIF.

Signed-off-by: Russ Dill <Russ.Dill@ti.com>
Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
[zou: Original patch taken from PROCESSOR-SDK-LINUX-AM335X 02_00_01_07]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/Makefile      |    1 +
 arch/arm/mach-omap2/cpuidle43xx.c |   52 +++++++++++++++++++++++++++++++++++++
 arch/arm/mach-omap2/pm.h          |    1 +
 arch/arm/mach-omap2/pm33xx-core.c |    2 +
 4 files changed, 56 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-omap2/cpuidle43xx.c

diff --git a/arch/arm/mach-omap2/Makefile b/arch/arm/mach-omap2/Makefile
index 5bdaf25..7241df4 100644
--- a/arch/arm/mach-omap2/Makefile
+++ b/arch/arm/mach-omap2/Makefile
@@ -108,6 +108,7 @@ endif
 
 ifeq ($(CONFIG_CPU_IDLE),y)
 obj-$(CONFIG_SOC_AM33XX)                += cpuidle33xx.o
+obj-$(CONFIG_SOC_AM43XX)                += cpuidle43xx.o
 obj-$(CONFIG_ARCH_OMAP3)                += cpuidle34xx.o
 omap-4-5-idle-common			=  cpuidle44xx.o
 obj-$(CONFIG_ARCH_OMAP4)		+= $(omap-4-5-idle-common)
diff --git a/arch/arm/mach-omap2/cpuidle43xx.c b/arch/arm/mach-omap2/cpuidle43xx.c
new file mode 100644
index 0000000..2b9df0a
--- /dev/null
+++ b/arch/arm/mach-omap2/cpuidle43xx.c
@@ -0,0 +1,52 @@
+/*
+ * AM43XX CPU idle Routines
+ *
+ * Copyright (C) 2014 Texas Instruments, Inc.
+ * Russ Dill <russ.dill@ti.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/cpuidle.h>
+#include <linux/io.h>
+#include <asm/smp_scu.h>
+#include <asm/cpuidle.h>
+
+static void __iomem *scu_base;
+
+static int am43xx_enter_idle(struct cpuidle_device *dev,
+			     struct cpuidle_driver *drv, int index)
+{
+	scu_power_mode(scu_base, SCU_PM_DORMANT);
+	wfi();
+	scu_power_mode(scu_base, SCU_PM_NORMAL);
+
+	return index;
+}
+
+static struct cpuidle_driver am437x_idle_driver = {
+	.name		= "am437x_idle",
+	.states		= {
+		ARM_CPUIDLE_WFI_STATE,
+		{
+			.exit_latency = 100,
+			.target_residency = 200,
+			.power_usage = 500,
+			.enter = am43xx_enter_idle,
+			.name = "C1",
+			.desc = "Bypass MPU PLL",
+		},
+	},
+	.state_count	= 2,
+};
+
+int am437x_idle_init(void)
+{
+	scu_base = ioremap(scu_a9_get_base(), SZ_256);
+	if (!scu_base)
+		return -ENOMEM;
+
+	return cpuidle_register(&am437x_idle_driver, NULL);
+}
diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 399768d..b466b18 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -17,6 +17,7 @@
 
 #ifdef CONFIG_CPU_IDLE
 extern int am33xx_idle_init(bool ddr3, void (*do_idle)(u32 wfi_flags));
+extern int am437x_idle_init(void);
 extern int __init omap3_idle_init(void);
 extern int __init omap4_idle_init(void);
 #else
diff --git a/arch/arm/mach-omap2/pm33xx-core.c b/arch/arm/mach-omap2/pm33xx-core.c
index e902281..fc48fff 100644
--- a/arch/arm/mach-omap2/pm33xx-core.c
+++ b/arch/arm/mach-omap2/pm33xx-core.c
@@ -93,6 +93,8 @@ static int am43xx_suspend_init(void (*do_sram_cpuidle)(u32 wfi_flags))
 		return ret;
 	}
 
+	am437x_idle_init();
+
 	ret = amx3_common_init();
 
 	return ret;
-- 
1.7.5.4

