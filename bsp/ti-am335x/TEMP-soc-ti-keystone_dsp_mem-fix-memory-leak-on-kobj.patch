From 1f0712164840a72a10faf75a15ab5085fce66a1d Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Mon, 1 May 2017 15:07:33 -0500
Subject: [PATCH 675/895] TEMP: soc: ti: keystone_dsp_mem: fix memory leak on
 kobject_uevent()

The keystone-dsp-mem driver provides sysfs entries for various SoC-level
memory regions that are exposed to userspace. A KOBJ_ADD event is raised
once these sysfs files were added, but any failure of this event results
in a memory leak due to an incorrect loop iterator initialization. Fix
this memory leak properly.

Fixes: 56f72f081b10 ("TEMP: soc: ti: keystone_dsp_mem: create sysfs entries for memories")
Signed-off-by: Suman Anna <s-anna@ti.com>
(cherry picked from commit ae1cc5726ed5360d8e5c0777a889374105dc6e8c)
---
 drivers/soc/ti/keystone_dsp_mem.c |    8 +++-----
 1 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/drivers/soc/ti/keystone_dsp_mem.c b/drivers/soc/ti/keystone_dsp_mem.c
index 37313da..3027ae5 100644
--- a/drivers/soc/ti/keystone_dsp_mem.c
+++ b/drivers/soc/ti/keystone_dsp_mem.c
@@ -114,17 +114,15 @@ static int keystone_dsp_mem_add_attrs(struct keystone_dsp_mem_info *dsp_mem)
 		kobject_init(&mem->kobj, &mem_attr_type);
 		ret = kobject_add(&mem->kobj, kobj_parent, "memory%d", i);
 		if (ret)
-			goto err_add_kobj;
+			goto err_kobj;
 		ret = kobject_uevent(&mem->kobj, KOBJ_ADD);
 		if (ret)
-			goto err_event;
+			goto err_kobj;
 	}
 
 	return 0;
 
-err_event:
-	i--;
-err_add_kobj:
+err_kobj:
 	for (; i >= 0; i--) {
 		mem = &dsp_mem->mem[i];
 		kobject_put(&mem->kobj);
-- 
1.7.5.4

