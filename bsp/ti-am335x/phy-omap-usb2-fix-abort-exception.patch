From 84e850d742ac0aa0d8bae00ebc6f6f92ad6626f9 Mon Sep 17 00:00:00 2001
From: Felipe Balbi <balbi@ti.com>
Date: Wed, 18 Nov 2015 09:20:27 -0600
Subject: [PATCH 732/800] phy: omap-usb2: fix abort exception

to fix this, all we have to do is call
pm_runtime_enable() and pm_runtime_get_sync() at
appropriate locations.

Without pm_runtime_get_sync(), ocp2scp hwmod will
_not_ enable the IP and, thus, we will have abort
exceptions.

Signed-off-by: Felipe Balbi <balbi@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
[zou: Original patch taken from PROCESSOR-SDK-LINUX-AM335X 02_00_01_07]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/phy/phy-omap-usb2.c |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/drivers/phy/phy-omap-usb2.c b/drivers/phy/phy-omap-usb2.c
index b59a816..5e01d54 100644
--- a/drivers/phy/phy-omap-usb2.c
+++ b/drivers/phy/phy-omap-usb2.c
@@ -25,6 +25,7 @@
 #include <linux/usb/phy_companion.h>
 #include <linux/clk.h>
 #include <linux/err.h>
+#include <linux/pm_runtime.h>
 #include <linux/delay.h>
 #include <linux/phy/omap_control_phy.h>
 #include <linux/phy/phy.h>
@@ -140,6 +141,8 @@ static int omap_usb2_disable_clocks(struct omap_usb *phy)
 	if (!IS_ERR(phy->optclk))
 		clk_disable(phy->optclk);
 
+	WARN_ON_ONCE(pm_runtime_put_sync(phy->dev));
+
 	return 0;
 }
 
@@ -147,6 +150,12 @@ static int omap_usb2_enable_clocks(struct omap_usb *phy)
 {
 	int ret;
 
+	ret = pm_runtime_get_sync(phy->dev);
+	if (ret < 0) {
+		pm_runtime_put_sync(phy->dev);
+		return ret;
+	}
+
 	ret = clk_enable(phy->wkupclk);
 	if (ret < 0) {
 		dev_err(phy->dev, "Failed to enable wkupclk %d\n", ret);
@@ -356,9 +365,11 @@ static int omap_usb2_probe(struct platform_device *pdev)
 	otg->usb_phy		= &phy->phy;
 
 	platform_set_drvdata(pdev, phy);
+	pm_runtime_enable(phy->dev);
 
 	generic_phy = devm_phy_create(phy->dev, NULL, &ops);
 	if (IS_ERR(generic_phy)) {
+		pm_runtime_disable(phy->dev);
 		return PTR_ERR(generic_phy);
 	}
 
@@ -368,6 +379,7 @@ static int omap_usb2_probe(struct platform_device *pdev)
 	phy_provider = devm_of_phy_provider_register(phy->dev,
 			of_phy_simple_xlate);
 	if (IS_ERR(phy_provider)) {
+		pm_runtime_disable(phy->dev);
 		return PTR_ERR(phy_provider);
 	}
 
@@ -377,6 +389,7 @@ static int omap_usb2_probe(struct platform_device *pdev)
 		phy->wkupclk = devm_clk_get(phy->dev, "usb_phy_cm_clk32k");
 		if (IS_ERR(phy->wkupclk)) {
 			dev_err(&pdev->dev, "unable to get usb_phy_cm_clk32k\n");
+			pm_runtime_disable(phy->dev);
 			return PTR_ERR(phy->wkupclk);
 		} else {
 			dev_warn(&pdev->dev,
@@ -414,6 +427,7 @@ static int omap_usb2_remove(struct platform_device *pdev)
 	if (!IS_ERR(phy->optclk))
 		clk_unprepare(phy->optclk);
 	usb_remove_phy(&phy->phy);
+	pm_runtime_disable(phy->dev);
 
 	return 0;
 }
-- 
1.7.5.4

