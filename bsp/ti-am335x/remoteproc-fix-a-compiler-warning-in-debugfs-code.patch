From 3360186de794b27317739f06a32d5e9e6980a025 Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Fri, 7 Aug 2015 21:48:56 -0500
Subject: [PATCH 458/800] remoteproc: fix a compiler warning in debugfs code

The following compiler warning is seen with the Linaro
4.9-based 2015.05 compiler:

  drivers/remoteproc/remoteproc_debugfs.c:
    In function 'rproc_recovery_write':
  drivers/remoteproc/remoteproc_debugfs.c:167:9: warning:
    'buf[4294967295u]' may be used uninitialized in this function
    [-Wmaybe-uninitialized]
  if (buf[count - 1] == '\n')

The above is a false alarm, as the variable 'count' is indeed
checked for an upper limit before using it as an array index.
In anycase, re-work the logic and fix the compiler warning by
introducing another variable. There is no change in functionality
of the debugfs behavior.

Signed-off-by: Suman Anna <s-anna@ti.com>
[zou: Original patch taken from PROCESSOR-SDK-LINUX-AM335X 02_00_01_07]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/remoteproc/remoteproc_debugfs.c |    8 +++++---
 1 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/remoteproc/remoteproc_debugfs.c b/drivers/remoteproc/remoteproc_debugfs.c
index 9d30809..7bbcc18 100644
--- a/drivers/remoteproc/remoteproc_debugfs.c
+++ b/drivers/remoteproc/remoteproc_debugfs.c
@@ -154,18 +154,20 @@ rproc_recovery_write(struct file *filp, const char __user *user_buf,
 {
 	struct rproc *rproc = filp->private_data;
 	char buf[10];
+	size_t buf_size;
 	int ret;
 
 	if (count > sizeof(buf))
 		return count;
 
-	ret = copy_from_user(buf, user_buf, count);
+	buf_size = min_t(size_t, count, sizeof(buf) - 1);
+	ret = copy_from_user(buf, user_buf, buf_size);
 	if (ret)
 		return -EFAULT;
 
 	/* remove end of line */
-	if (buf[count - 1] == '\n')
-		buf[count - 1] = '\0';
+	if (buf[buf_size - 1] == '\n')
+		buf[buf_size - 1] = '\0';
 
 	if (!strncmp(buf, "enabled", count)) {
 		rproc->recovery_disabled = false;
-- 
1.7.5.4

