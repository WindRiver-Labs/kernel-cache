From 37c836291924897375a27b2a2044f3c513977f72 Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Thu, 2 Feb 2017 17:51:39 -0600
Subject: [PATCH 573/895] remoteproc/pruss: add support for PRUSS0 on AM437x
 SoCs

The AM437x SoCs have a second smaller PRU-ICSS subsystem (PRUSS0)
in addition to the primary PRUSS1 instance. The PRUSS0 is another
instantiation of the IP, but is not identical to PRUSS1. It is
essentially a cut-down version of the IP, with less DRAM per PRU,
no Shared DRAM etc. It also does not have direct access to L3 bus
regions, there is a single interface to L3 for both PRUSS0 and
PRUSS1, and it would have to go through the PRUSS1's interface.
The PRUSS_SYSCFG register is reserved on PRUSS0, so any external
access requires the programming the corresponding PRUSS_SYSCFG
register in PRUSS1. It does have its own dedicated I/O lines
though.

The PRUSS remoteproc drivers have been enhanced to support this
smaller PRUSS0 instance using instance-specific data. There is
no PRU Ethernet support for this instance. The reset and the
L3 external access are managed by the common PRUSS SoC bus
driver so that PRUSS1 and PRUSS0 can be independently supported.

The initial names for the firmware images for each PRU core are
expected to be as follows (these can be adjusted through sysfs
if required):
     PRU-ICSS0 PRU0 Core: am437x-pru0_0-fw
     PRU-ICSS0 PRU1 Core: am437x-pru0_1-fw

Signed-off-by: Andrew F. Davis <afd@ti.com>
Signed-off-by: Suman Anna <s-anna@ti.com>
(cherry picked from commit 90c8541a301decae079d94974cb8d1f82cbd27cc)
---
 drivers/remoteproc/pru_rproc.c |   19 +++++++++++++++++++
 drivers/remoteproc/pruss.c     |   19 +++++++++++++++++++
 2 files changed, 38 insertions(+), 0 deletions(-)

diff --git a/drivers/remoteproc/pru_rproc.c b/drivers/remoteproc/pru_rproc.c
index 40a284b..1696529b 100644
--- a/drivers/remoteproc/pru_rproc.c
+++ b/drivers/remoteproc/pru_rproc.c
@@ -786,6 +786,17 @@ static struct pru_private_data am437x_pru1_1_rproc_pdata = {
 	.fw_name = "am437x-pru1_1-fw",
 };
 
+/* AM437x PRUSS0 PRU core-specific private data */
+static struct pru_private_data am437x_pru0_0_rproc_pdata = {
+	.id = 0,
+	.fw_name = "am437x-pru0_0-fw",
+};
+
+static struct pru_private_data am437x_pru0_1_rproc_pdata = {
+	.id = 1,
+	.fw_name = "am437x-pru0_1-fw",
+};
+
 /* AM33xx SoC-specific PRU Device data */
 static struct pru_match_private_data am335x_pru_match_data[] = {
 	{
@@ -812,6 +823,14 @@ static struct pru_match_private_data am437x_pru_match_data[] = {
 		.priv_data	= &am437x_pru1_1_rproc_pdata,
 	},
 	{
+		.device_name    = "54474000.pru0",
+		.priv_data      = &am437x_pru0_0_rproc_pdata,
+	},
+	{
+		.device_name    = "54478000.pru1",
+		.priv_data      = &am437x_pru0_1_rproc_pdata,
+	},
+	{
 		/* sentinel */
 	},
 };
diff --git a/drivers/remoteproc/pruss.c b/drivers/remoteproc/pruss.c
index a4e71c6..8598d01 100644
--- a/drivers/remoteproc/pruss.c
+++ b/drivers/remoteproc/pruss.c
@@ -24,9 +24,11 @@
 /**
  * struct pruss_private_data - PRUSS driver private data
  * @aux_data: auxiliary data used for creating the child nodes
+ * @has_no_sharedram: flag to indicate the absence of PRUSS Shared Data RAM
  */
 struct pruss_private_data {
 	struct of_dev_auxdata *aux_data;
+	bool has_no_sharedram;
 };
 
 /**
@@ -95,6 +97,8 @@ static int pruss_probe(struct platform_device *pdev)
 	pruss->dev = dev;
 
 	for (i = 0; i < ARRAY_SIZE(mem_names); i++) {
+		if (data->has_no_sharedram && !strcmp(mem_names[i], "shrdram2"))
+			continue;
 		res = platform_get_resource_byname(pdev, IORESOURCE_MEM,
 						   mem_names[i]);
 		pruss->mem_regions[i].va = devm_ioremap_resource(dev, res);
@@ -153,6 +157,12 @@ static struct of_dev_auxdata am437x_pruss1_rproc_auxdata_lookup[] = {
 	{ /* sentinel */ },
 };
 
+static struct of_dev_auxdata am437x_pruss0_rproc_auxdata_lookup[] = {
+	OF_DEV_AUXDATA("ti,am4376-pru", 0x54474000, "54474000.pru0", NULL),
+	OF_DEV_AUXDATA("ti,am4376-pru", 0x54478000, "54478000.pru1", NULL),
+	{ /* sentinel */ },
+};
+
 /* instance-specific driver private data */
 static struct pruss_private_data am335x_pruss_priv_data = {
 	.aux_data = am335x_pruss_rproc_auxdata_lookup,
@@ -162,6 +172,11 @@ static struct pruss_private_data am437x_pruss1_priv_data = {
 	.aux_data = am437x_pruss1_rproc_auxdata_lookup,
 };
 
+static struct pruss_private_data am437x_pruss0_priv_data = {
+	.aux_data = am437x_pruss0_rproc_auxdata_lookup,
+	.has_no_sharedram = true,
+};
+
 static struct pruss_match_private_data am335x_match_data[] = {
 	{
 		.device_name	= "4a300000.pruss",
@@ -178,6 +193,10 @@ static struct pruss_match_private_data am437x_match_data[] = {
 		.priv_data	= &am437x_pruss1_priv_data,
 	},
 	{
+		.device_name	= "54440000.pruss",
+		.priv_data	= &am437x_pruss0_priv_data,
+	},
+	{
 		/* sentinel */
 	},
 };
-- 
1.7.5.4

