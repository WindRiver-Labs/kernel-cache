From 09789104bd65b832ee2a34f81d7ed2e7655fcec4 Mon Sep 17 00:00:00 2001
From: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date: Thu, 5 Nov 2015 19:36:02 +0200
Subject: [PATCH 703/800] OMAPDSS: add dispc_ops

We want to change the dispc API from plain functions to a struct with
functions pointers, so that omapdrm can call either omapdss or omapdss6
depending on the platform.

This patchs adds 'struct dispc_ops' and adds functions to omapdss-base
to set and get the ops.

Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
Signed-off-by: Jyri Sarha <jsarha@ti.com>
[zou: Original patch taken from PROCESSOR-SDK-LINUX-AM335X 02_00_01_07]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/video/fbdev/omap2/dss/base.c       |   13 +++++++
 drivers/video/fbdev/omap2/dss/dss-common.h |    1 +
 include/video/omapdss.h                    |   50 ++++++++++++++++++++++++++++
 3 files changed, 64 insertions(+), 0 deletions(-)

diff --git a/drivers/video/fbdev/omap2/dss/base.c b/drivers/video/fbdev/omap2/dss/base.c
index 0394209..7dd447e 100644
--- a/drivers/video/fbdev/omap2/dss/base.c
+++ b/drivers/video/fbdev/omap2/dss/base.c
@@ -2,6 +2,7 @@
 #include <linux/module.h>
 
 static bool dss_initialized;
+static const struct dispc_ops *ops;
 
 void omapdss_set_is_initialized(bool set)
 {
@@ -15,6 +16,18 @@ bool omapdss_is_initialized(void)
 }
 EXPORT_SYMBOL(omapdss_is_initialized);
 
+void dispc_set_ops(const struct dispc_ops *o)
+{
+	ops = o;
+}
+EXPORT_SYMBOL(dispc_set_ops);
+
+const struct dispc_ops *dispc_get_ops(void)
+{
+	return ops;
+}
+EXPORT_SYMBOL(dispc_get_ops);
+
 MODULE_AUTHOR("Tomi Valkeinen <tomi.valkeinen@ti.com>");
 MODULE_DESCRIPTION("OMAP Display Subsystem Base");
 MODULE_LICENSE("GPL v2");
diff --git a/drivers/video/fbdev/omap2/dss/dss-common.h b/drivers/video/fbdev/omap2/dss/dss-common.h
index c29aaa2..19e105c 100644
--- a/drivers/video/fbdev/omap2/dss/dss-common.h
+++ b/drivers/video/fbdev/omap2/dss/dss-common.h
@@ -2,6 +2,7 @@
 #define __OMAP_DSS_COMMON_H
 
 void omapdss_set_is_initialized(bool set);
+void dispc_set_ops(const struct dispc_ops *o);
 
 struct device_node *dss_of_port_get_parent_device(struct device_node *port);
 u32 dss_of_port_get_port_number(struct device_node *port);
diff --git a/include/video/omapdss.h b/include/video/omapdss.h
index 22230c5..4b53ea8 100644
--- a/include/video/omapdss.h
+++ b/include/video/omapdss.h
@@ -1003,4 +1003,54 @@ omapdss_of_find_source_for_first_ep(struct device_node *node);
 struct device_node *omapdss_of_get_endpoint(struct device_node *parent,
 	int port_index, int ep_index);
 
+/* dispc ops */
+
+struct dispc_ops {
+	u32 (*read_irqstatus)(void);
+	void (*clear_irqstatus)(u32 mask);
+	u32 (*read_irqenable)(void);
+	void (*write_irqenable)(u32 mask);
+
+	int (*request_irq)(irq_handler_t handler, void *dev_id);
+	void (*free_irq)(void *dev_id);
+
+	int (*runtime_get)(void);
+	void (*runtime_put)(void);
+
+	int (*get_num_ovls)(void);
+	int (*get_num_mgrs)(void);
+
+	void (*mgr_enable)(enum omap_channel channel, bool enable);
+	bool (*mgr_is_enabled)(enum omap_channel channel);
+	u32 (*mgr_get_vsync_irq)(enum omap_channel channel);
+	u32 (*mgr_get_framedone_irq)(enum omap_channel channel);
+	u32 (*mgr_get_sync_lost_irq)(enum omap_channel channel);
+	bool (*mgr_go_busy)(enum omap_channel channel);
+	void (*mgr_go)(enum omap_channel channel);
+	void (*mgr_set_lcd_config)(enum omap_channel channel,
+			const struct dss_lcd_mgr_config *config);
+	void (*mgr_set_timings)(enum omap_channel channel,
+			const struct omap_video_timings *timings);
+	void (*mgr_setup)(enum omap_channel channel,
+			const struct omap_overlay_manager_info *info);
+	enum omap_dss_output_id (*mgr_get_supported_outputs)(enum omap_channel channel);
+
+	int (*ovl_check)(enum omap_plane plane, enum omap_channel channel,
+			const struct omap_overlay_info *oi,
+			const struct omap_video_timings *timings,
+			int *x_predecim, int *y_predecim);
+
+	int (*ovl_enable)(enum omap_plane plane, bool enable);
+	bool (*ovl_enabled)(enum omap_plane plane);
+	void (*ovl_set_channel_out)(enum omap_plane plane,
+			enum omap_channel channel);
+	int (*ovl_setup)(enum omap_plane plane, const struct omap_overlay_info *oi,
+			bool replication, const struct omap_video_timings *mgr_timings,
+			bool mem_to_mem);
+
+	enum omap_color_mode (*ovl_get_color_modes)(enum omap_plane plane);
+};
+
+const struct dispc_ops *dispc_get_ops(void);
+
 #endif
-- 
1.7.5.4

