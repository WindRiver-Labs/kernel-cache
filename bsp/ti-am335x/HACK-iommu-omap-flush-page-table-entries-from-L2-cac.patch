From 25591a32122df54928efe8fa58ce94d3ba88ff9c Mon Sep 17 00:00:00 2001
From: Ramesh Gupta <grgupta@ti.com>
Date: Mon, 13 Jun 2011 23:51:13 +0300
Subject: [PATCH 681/895] HACK: iommu/omap: flush page table entries from L2
 cache

The functions flush_iopgd_range() and flush_iopte_range()
are not performing any L2 cache operations when flushing
the MMU page table entries. This has resulted in unnecessary
MMU faults on the DSP and IPU processors on OMAP4 (not seen
on OMAP5 though due to the L2 cache differences). Fix this
by adding proper outer cache operations. The asm instruction
used for the inner cache has also been replaced with an
appropriate API.

NOTE:
This is a temporary patch and an up-port of an older product
version patch. The usage of dmac_flush_range() API outside
the dma-mapping layer is very much frowned upon, some usage
existed before within the IOMMU drivers but is no longer
present on 4.9 kernel.

Signed-off-by: Ramesh Gupta <grgupta@ti.com>
Signed-off-by: Hari Kanigeri <h-kanigeri2@ti.com>
[s-anna@ti.com: add commit description]
Signed-off-by: Suman Anna <s-anna@ti.com>

(cherry picked from commit 59116088bdb373c13a97f5a4c7ee1418d7095d5d)
---
 drivers/iommu/omap-iommu.c |   16 ++++------------
 1 files changed, 4 insertions(+), 12 deletions(-)

diff --git a/drivers/iommu/omap-iommu.c b/drivers/iommu/omap-iommu.c
index 53d0a08..1202e6c 100644
--- a/drivers/iommu/omap-iommu.c
+++ b/drivers/iommu/omap-iommu.c
@@ -470,22 +470,14 @@ static void flush_iotlb_all(struct omap_iommu *obj)
  */
 static void flush_iopgd_range(u32 *first, u32 *last)
 {
-	/* FIXME: L2 cache should be taken care of if it exists */
-	do {
-		asm("mcr	p15, 0, %0, c7, c10, 1 @ flush_pgd"
-		    : : "r" (first));
-		first += L1_CACHE_BYTES / sizeof(*first);
-	} while (first <= last);
+	dmac_flush_range(first, last);
+	outer_flush_range(virt_to_phys(first), virt_to_phys(last));
 }
 
 static void flush_iopte_range(u32 *first, u32 *last)
 {
-	/* FIXME: L2 cache should be taken care of if it exists */
-	do {
-		asm("mcr	p15, 0, %0, c7, c10, 1 @ flush_pte"
-		    : : "r" (first));
-		first += L1_CACHE_BYTES / sizeof(*first);
-	} while (first <= last);
+	dmac_flush_range(first, last);
+	outer_flush_range(virt_to_phys(first), virt_to_phys(last));
 }
 
 static void iopte_free(u32 *iopte)
-- 
1.7.5.4

