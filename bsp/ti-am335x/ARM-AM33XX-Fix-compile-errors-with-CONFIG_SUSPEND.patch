From 677cd9675e75243606376c8aa7983bd78ebab370 Mon Sep 17 00:00:00 2001
From: Russ Dill <russ.dill@ti.com>
Date: Thu, 23 Jan 2014 01:56:49 -0800
Subject: [PATCH 143/188] ARM: AM33XX: Fix compile errors with !CONFIG_SUSPEND

This commit comes from branch ti-linux-3.12.y:
  git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git

In preperation for the CPU idle patches, fix up some compile
errors when compiling without CONFIG_SUSPEND. This is helpful as
CPU idle support can be tested with and without CONFIG_SUSPEND.

Signed-off-by: Russ Dill <russ.dill@ti.com>
(cherry picked from commit 2430ce4dfe3658da2cc71922734989ee5fb16c09)
---
 arch/arm/mach-omap2/common.h         |    2 +-
 arch/arm/mach-omap2/omap-wakeupgen.c |   10 ++++++++++
 arch/arm/mach-omap2/pm.c             |    3 ++-
 arch/arm/mach-omap2/pm33xx.c         |   21 ++++++++++++++-------
 arch/arm/mach-omap2/sram.c           |    4 ++--
 5 files changed, 29 insertions(+), 11 deletions(-)

diff --git a/arch/arm/mach-omap2/common.h b/arch/arm/mach-omap2/common.h
index b931655..712c33b 100644
--- a/arch/arm/mach-omap2/common.h
+++ b/arch/arm/mach-omap2/common.h
@@ -170,7 +170,7 @@ static inline void omap44xx_restart(char mode, const char *cmd)
 #if defined(CONFIG_SUSPEND)
 void omap2_common_suspend_init(void);
 #else
-inline void omap2_common_suspend_init(void);
+static inline void omap2_common_suspend_init(void)
 {
 }
 #endif
diff --git a/arch/arm/mach-omap2/omap-wakeupgen.c b/arch/arm/mach-omap2/omap-wakeupgen.c
index c302657..51b8f64 100644
--- a/arch/arm/mach-omap2/omap-wakeupgen.c
+++ b/arch/arm/mach-omap2/omap-wakeupgen.c
@@ -59,6 +59,7 @@ static unsigned int max_irqs = DEFAULT_IRQS;
 static unsigned int omap_secure_apis, secure_api_index;
 static unsigned int irq_banks = MAX_NR_REG_BANKS;
 static unsigned int irq_target_cpu[MAX_IRQS];
+#ifdef CONFIG_CPU_PM
 static unsigned int wakeupgen_context[MAX_NR_REG_BANKS];
 
 struct omap_wakeupgen_ops {
@@ -67,6 +68,7 @@ struct omap_wakeupgen_ops {
 };
 
 static struct omap_wakeupgen_ops *wakeupgen_ops;
+#endif /* CONFIG_CPU_PM */
 
 /*
  * Static helper functions.
@@ -432,6 +434,7 @@ int omap_secure_apis_support(void)
 	return omap_secure_apis;
 }
 
+#ifdef CONFIG_CPU_PM
 /* Define ops for context save and restore for each SoC */
 
 static struct omap_wakeupgen_ops omap4_wakeupgen_ops = {
@@ -448,6 +451,7 @@ static struct omap_wakeupgen_ops am43xx_wakeupgen_ops = {
 	.save_context = am43xx_irq_save_context,
 	.restore_context = am43xx_irq_restore_context,
 };
+#endif /* CONFIG_CPU_PM */
 
 /*
  * Initialise the wakeupgen module.
@@ -474,13 +478,19 @@ int __init omap_wakeupgen_init(void)
 		irq_banks = OMAP4_NR_BANKS;
 		omap_secure_apis = 1;
 		secure_api_index = OMAP4_HAL_SAVEGIC_INDEX;
+#ifdef CONFIG_CPU_PM
 		wakeupgen_ops = &omap4_wakeupgen_ops;
+#endif
 	} else if (soc_is_omap54xx()) {
 		secure_api_index = OMAP5_HAL_SAVEGIC_INDEX;
+#ifdef CONFIG_CPU_PM
 		wakeupgen_ops = &omap5_wakeupgen_ops;
+#endif
 	} else if (am43x) {
 		irq_banks = MAX_NR_REG_BANKS;
+#ifdef CONFIG_CPU_PM
 		wakeupgen_ops = &am43xx_wakeupgen_ops;
+#endif
 	}
 
 	max_irqs = MAX_IRQS;
diff --git a/arch/arm/mach-omap2/pm.c b/arch/arm/mach-omap2/pm.c
index 613a7b0..731129b 100644
--- a/arch/arm/mach-omap2/pm.c
+++ b/arch/arm/mach-omap2/pm.c
@@ -313,8 +313,9 @@ int __init omap2_common_pm_late_init(void)
 	return 0;
 }
 
+#ifdef CONFIG_SUSPEND
 void __init omap2_common_suspend_init(void)
 {
 	suspend_set_ops(&omap_pm_ops);
 }
-
+#endif
diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index e42a257..bf9b725 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -47,8 +47,10 @@
 #include "sram.h"
 #include "omap_device.h"
 
-static void __iomem *am33xx_emif_base, *scu_base;
-static struct powerdomain *cefuse_pwrdm, *gfx_pwrdm, *per_pwrdm, *mpu_pwrdm;
+#ifdef CONFIG_SUSPEND
+static void __iomem *scu_base;
+static void __iomem *am33xx_emif_base;
+static struct powerdomain *mpu_pwrdm, *per_pwrdm, *gfx_pwrdm;
 static struct clockdomain *gfx_l4ls_clkdm;
 static struct clockdomain *l3s_clkdm, *l4fw_clkdm, *clk_24mhz_clkdm;
 
@@ -65,8 +67,6 @@ static void (*am33xx_do_wfi_sram)(struct am33xx_suspend_params *);
 
 static struct am33xx_suspend_params susp_params;
 
-#ifdef CONFIG_SUSPEND
-
 static int am33xx_do_sram_idle(long unsigned int unused)
 {
 	am33xx_do_wfi_sram(&susp_params);
@@ -244,7 +244,6 @@ static const struct platform_suspend_ops am33xx_pm_ops = {
 	.enter		= am33xx_pm_enter,
 	.valid		= am33xx_pm_valid,
 };
-#endif /* CONFIG_SUSPEND */
 
 static void am33xx_txev_handler(void)
 {
@@ -295,9 +294,7 @@ static void am33xx_m3_fw_ready_cb(void)
 					am33xx_pm->ver);
 	}
 
-#ifdef CONFIG_SUSPEND
 	suspend_set_ops(&am33xx_pm_ops);
-#endif /* CONFIG_SUSPEND */
 }
 
 static struct wkup_m3_ops am33xx_wkup_m3_ops = {
@@ -484,16 +481,21 @@ static struct am33xx_pm_ops am43xx_ops = {
 	.pre_suspend = am43xx_pre_suspend,
 	.post_suspend = am43xx_post_suspend,
 };
+#endif /* CONFIG_SUSPEND */
 
 int __init am33xx_pm_init(void)
 {
+	struct powerdomain *cefuse_pwrdm;
+#ifdef CONFIG_SUSPEND
 	int ret;
 	u32 temp;
 	struct device_node *np;
+#endif /* CONFIG_SUSPEND */
 
 	if (!soc_is_am33xx() && !soc_is_am43xx())
 		return -ENODEV;
 
+#ifdef CONFIG_SUSPEND
 	gfx_pwrdm = pwrdm_lookup("gfx_pwrdm");
 	per_pwrdm = pwrdm_lookup("per_pwrdm");
 	mpu_pwrdm = pwrdm_lookup("mpu_pwrdm");
@@ -560,6 +562,7 @@ int __init am33xx_pm_init(void)
 		pr_err("Error fetching I2C sleep/wake sequence\n");
 		goto err;
 	}
+#endif /* CONFIG_SUSPEND */
 
 	(void) clkdm_for_each(omap_pm_clkdms_setup, NULL);
 
@@ -570,6 +573,7 @@ int __init am33xx_pm_init(void)
 	else
 		pr_err("PM: Failed to get cefuse_pwrdm\n");
 
+#ifdef CONFIG_SUSPEND
 	am33xx_pm->state = M3_STATE_RESET;
 
 	wkup_m3_set_ops(&am33xx_wkup_m3_ops);
@@ -579,10 +583,13 @@ int __init am33xx_pm_init(void)
 
 	if (wkup_m3_is_valid())
 		am33xx_m3_fw_ready_cb();
+#endif /* CONFIG_SUSPEND */
 
 	return 0;
 
+#ifdef CONFIG_SUSPEND
 err:
 	kfree(am33xx_pm);
 	return ret;
+#endif /* CONFIG_SUSPEND */
 }
diff --git a/arch/arm/mach-omap2/sram.c b/arch/arm/mach-omap2/sram.c
index 13cf863..91e738d 100644
--- a/arch/arm/mach-omap2/sram.c
+++ b/arch/arm/mach-omap2/sram.c
@@ -285,7 +285,7 @@ static inline int omap34xx_sram_init(void)
 }
 #endif /* CONFIG_ARCH_OMAP3 */
 
-#ifdef CONFIG_SOC_AM33XX
+#if defined(CONFIG_SOC_AM33XX) && defined(CONFIG_CPU_PM)
 static inline int am33xx_sram_init(void)
 {
 	am33xx_push_sram_idle();
@@ -298,7 +298,7 @@ static inline int am33xx_sram_init(void)
 }
 #endif
 
-#ifdef CONFIG_SOC_AM43XX
+#if defined(CONFIG_SOC_AM43XX) && defined(CONFIG_CPU_PM)
 static inline int am43xx_sram_init(void)
 {
 	am43xx_push_sram_idle();
-- 
1.7.5.4

