From bfb424d21cde21d68bd1d34c286a0ff19741b6a6 Mon Sep 17 00:00:00 2001
From: Felipe Balbi <balbi@ti.com>
Date: Tue, 25 Aug 2015 12:21:15 -0500
Subject: [PATCH 506/800] usb: dwc3: core: prevent OTG irq from being disabled

If we *always* return IRQ_NONE (even though we *ARE*
handling our IRQs), after 100k iterations, OTG
irq line will be disabled.

Signed-off-by: Felipe Balbi <balbi@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
[zou: Original patch taken from PROCESSOR-SDK-LINUX-AM335X 02_00_01_07]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/usb/dwc3/core.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index fabd03c..b28f3e5 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -853,7 +853,6 @@ static irqreturn_t dwc3_otg_thread_irq(int irq, void *_dwc)
 {
 	struct dwc3 *dwc = _dwc;
 	unsigned long flags;
-	irqreturn_t ret = IRQ_NONE;
 
 	spin_lock_irqsave(&dwc->lock, flags);
 	dwc3_otg_fsm_sync(dwc);
@@ -861,7 +860,7 @@ static irqreturn_t dwc3_otg_thread_irq(int irq, void *_dwc)
 	dwc3_writel(dwc->regs, DWC3_OEVTEN, dwc->oevten);
 	spin_unlock_irqrestore(&dwc->lock, flags);
 
-	return ret;
+	return IRQ_HANDLED;
 }
 
 static irqreturn_t dwc3_otg_irq(int irq, void *_dwc)
-- 
1.7.5.4

