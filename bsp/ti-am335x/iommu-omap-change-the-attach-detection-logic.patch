From 76d29de9f549068c90203fc949b79d7e50bcbadf Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Tue, 4 Mar 2014 17:21:04 -0600
Subject: [PATCH 455/800] iommu/omap: change the attach detection logic

The OMAP IOMMU driver allows only a single device (eg: a rproc
device) to be attached per domain. The current attach detection
logic relies on a check for an attached iommu for the respective
client device. Change this logic to use a dedicated flag in
preparation for supporting multiple iommu devices to be bound to
a single iommu domain, and thereby to a client device.

Signed-off-by: Suman Anna <s-anna@ti.com>
[zou: Original patch taken from PROCESSOR-SDK-LINUX-AM335X 02_00_01_07]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/iommu/omap-iommu.c |   17 +++++++++++++----
 1 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/drivers/iommu/omap-iommu.c b/drivers/iommu/omap-iommu.c
index bc31248..c1de937 100644
--- a/drivers/iommu/omap-iommu.c
+++ b/drivers/iommu/omap-iommu.c
@@ -44,6 +44,7 @@
 
 /**
  * struct omap_iommu_domain - omap iommu domain
+ * @attached:	flag to indicate if domain is already attached to
  * @pgtable:	the page table
  * @iommu_dev:	an omap iommu device attached to this domain. only a single
  *		iommu device can be attached for now.
@@ -51,6 +52,7 @@
  * @lock:	domain lock, should be taken when attaching/detaching
  */
 struct omap_iommu_domain {
+	u32 attached;
 	u32 *pgtable;
 	struct omap_iommu *iommu_dev;
 	struct device *dev;
@@ -779,7 +781,7 @@ static irqreturn_t iommu_fault_handler(int irq, void *data)
 	struct iommu_domain *domain = obj->domain;
 	struct omap_iommu_domain *omap_domain = to_omap_domain(domain);
 
-	if (!omap_domain->iommu_dev)
+	if (!omap_domain->attached)
 		return IRQ_NONE;
 
 	errs = iommu_report_fault(obj, &da);
@@ -1079,8 +1081,8 @@ omap_iommu_attach_dev(struct iommu_domain *domain, struct device *dev)
 
 	spin_lock(&omap_domain->lock);
 
-	/* only a single device is supported per domain for now */
-	if (omap_domain->iommu_dev) {
+	/* only a single client device can be attached to a domain */
+	if (omap_domain->attached) {
 		dev_err(dev, "iommu domain is already attached\n");
 		ret = -EBUSY;
 		goto out;
@@ -1097,6 +1099,7 @@ omap_iommu_attach_dev(struct iommu_domain *domain, struct device *dev)
 	omap_domain->iommu_dev = oiommu;
 	arch_data->iommu_dev = oiommu;
 	omap_domain->dev = dev;
+	omap_domain->attached = 1;
 	oiommu->domain = domain;
 
 out:
@@ -1110,6 +1113,11 @@ static void _omap_iommu_detach_dev(struct omap_iommu_domain *omap_domain,
 	struct omap_iommu *oiommu = dev_to_omap_iommu(dev);
 	struct omap_iommu_arch_data *arch_data = dev->archdata.iommu;
 
+	if (!omap_domain->attached) {
+		dev_err(dev, "domain has no attached devices.\n");
+		return;
+	}
+
 	/* only a single device is supported per domain for now */
 	if (omap_domain->iommu_dev != oiommu) {
 		dev_err(dev, "invalid iommu device\n");
@@ -1123,6 +1131,7 @@ static void _omap_iommu_detach_dev(struct omap_iommu_domain *omap_domain,
 	omap_domain->iommu_dev = NULL;
 	arch_data->iommu_dev = NULL;
 	omap_domain->dev = NULL;
+	omap_domain->attached = 0;
 	oiommu->domain = NULL;
 }
 
@@ -1180,7 +1189,7 @@ static void omap_iommu_domain_free(struct iommu_domain *domain)
 	 * An iommu device is still attached
 	 * (currently, only one device can be attached) ?
 	 */
-	if (omap_domain->iommu_dev)
+	if (omap_domain->attached)
 		_omap_iommu_detach_dev(omap_domain, omap_domain->dev);
 
 	kfree(omap_domain->pgtable);
-- 
1.7.5.4

