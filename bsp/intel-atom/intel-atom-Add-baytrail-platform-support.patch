From 3a6c7faf127e298ea78b3f02a1c8e260d2f6eb3c Mon Sep 17 00:00:00 2001
From: Peng Chao <chao.peng@windriver.com>
Date: Wed, 26 Jun 2013 13:26:03 +0800
Subject: [PATCH 129/134] intel-atom: Add baytrail platform support

Provide minimal device initialization on Intel Baytrail platform.

Signed-off-by: Peng Chao <chao.peng@windriver.com>
---
 drivers/platform/x86/Makefile    |    1 +
 drivers/platform/x86/byt-board.c |   51 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 52 insertions(+), 0 deletions(-)
 create mode 100644 drivers/platform/x86/byt-board.c

diff --git a/drivers/platform/x86/Makefile b/drivers/platform/x86/Makefile
index 171cd8d..f9df1e3 100644
--- a/drivers/platform/x86/Makefile
+++ b/drivers/platform/x86/Makefile
@@ -8,6 +8,7 @@ obj-$(CONFIG_MINNOWBOARD_KEYS)	+= minnowboard-keys.o
 obj-$(CONFIG_ASUS_LAPTOP)	+= asus-laptop.o
 obj-$(CONFIG_ASUS_WMI)		+= asus-wmi.o
 obj-$(CONFIG_ASUS_NB_WMI)	+= asus-nb-wmi.o
+obj-$(CONFIG_BYT_LPSS_BRD)	+= byt-board.o
 obj-$(CONFIG_EEEPC_LAPTOP)	+= eeepc-laptop.o
 obj-$(CONFIG_EEEPC_WMI)		+= eeepc-wmi.o
 obj-$(CONFIG_MSI_LAPTOP)	+= msi-laptop.o
diff --git a/drivers/platform/x86/byt-board.c b/drivers/platform/x86/byt-board.c
new file mode 100644
index 0000000..03aa040
--- /dev/null
+++ b/drivers/platform/x86/byt-board.c
@@ -0,0 +1,51 @@
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/device.h>
+#include <linux/clk.h>
+#include <linux/clkdev.h>
+#include <linux/clk-provider.h>
+#include <linux/spi/spidev.h>
+#include <linux/spi/spi.h>
+#include <linux/spi/pxa2xx_spi.h>
+
+static struct pxa2xx_spi_chip chip_data = {
+        .gpio_cs = -EINVAL,
+	.dma_burst_size = 16,
+};
+
+static struct spi_board_info byt_spi_slaves[] = {
+        {
+         .modalias = "spidev",
+         .max_speed_hz = 50000000,
+         .bus_num = 0,
+         .chip_select = 0,
+         .controller_data = &chip_data,
+         .mode = SPI_MODE_0,
+         }
+};
+
+static int byt_spi_board_setup()
+{
+        int ret = -1;
+
+        /* Register the SPI devices */
+        if (!spi_register_board_info
+            (byt_spi_slaves, ARRAY_SIZE(byt_spi_slaves)))
+                ret = 0;
+
+        return ret;
+}
+
+static int __init byt_board_init(void)
+{
+	int ret;
+
+	ret = byt_spi_board_setup();
+	if (ret)
+		goto exit;
+
+exit:
+	return ret;
+}
+arch_initcall(byt_board_init);
+MODULE_LICENSE(GPL);
-- 
1.7.5.4

