From aa7a35fc30f859ac98472cc0ddba2f72bf1314a9 Mon Sep 17 00:00:00 2001
From: Wei Yang <Wei.Yang@windriver.com>
Date: Mon, 6 Aug 2012 15:01:53 +0800
Subject: [PATCH] misc/lis331dlh: Fix the calltrace upon testing accelerometer

* since lis331ldlh is not 100% compatible with smbus,i2c_smbus_read_block_data()
  will result in the calltrace occurrence, and moreover, i2c_smbus_read_i2c_block_data()
  can read specified length of data via i2c, so use it instead of i2c_smbus_read_block_data().
  additionally, change the index of buffer to 0 from 1 to avoid the overflow of buffer
  upon reading data from accelerometer.

* delete the print info added by us while debugging the driver.

* i2c_smbus_write_block_data() cannot successfully write a value to
  corresponding register, therefore use i2c_smbus_write_i2c_block_data()

Signed-off-by: Yang Wei <wei.yang@windriver.com>
---
 drivers/misc/lis331dlh/lis331dlh_acc.c |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/misc/lis331dlh/lis331dlh_acc.c b/drivers/misc/lis331dlh/lis331dlh_acc.c
index e3fcfb8..a5db5fe 100644
--- a/drivers/misc/lis331dlh/lis331dlh_acc.c
+++ b/drivers/misc/lis331dlh/lis331dlh_acc.c
@@ -216,7 +216,7 @@ static int lis331dlh_acc_i2c_read(struct i2c_client *client,
 	u8 cmd;
 	cmd = buf[0];
 
-	ret = i2c_smbus_read_block_data(client, cmd, &buf[1]);
+	ret = i2c_smbus_read_i2c_block_data(client, cmd, len, buf);
 	if (ret < 0) {
 		dev_err(&client->dev, "read transfer error\n");
 		return -EIO;
@@ -231,7 +231,7 @@ static int lis331dlh_acc_i2c_write(struct i2c_client *client,
 	u8 cmd;
 
 	cmd = buf[0];
-	ret = i2c_smbus_write_block_data(client, cmd, len, &buf[1]);
+	ret = i2c_smbus_write_i2c_block_data(client, cmd, len, &buf[1]);
 	if (ret < 0) {
 		dev_err(&client->dev, "write transfer error\n");
 		return -EIO;
@@ -702,10 +702,8 @@ static int write_reg(struct device *dev, const char *buf, u8 reg)
 	if (strict_strtoul(buf, 16, &val))
 		return -EINVAL;
 
-	printk(KERN_ERR "val is 0x%x\n", val);
 	rc = lis331dlh_acc_i2c_write_reg8(acc->client, reg, val);
 	/*TODO: error need to be managed */
-	printk(KERN_ERR "val is 0x%x\n", val);
 	return rc;
 }
 
-- 
1.7.9.7

