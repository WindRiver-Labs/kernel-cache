From ec229445c99c1702eb3af7eadf3dc271a509bec8 Mon Sep 17 00:00:00 2001
From: Kishon Vijay Abraham I <kishon@ti.com>
Date: Tue, 26 Jun 2012 17:40:32 +0530
Subject: [PATCH 141/142] usb: phy: fix return value check of usb_get_phy

commit ded017ee6c7b90f7356bd8488f8af1c10ba90490 upstream

usb_get_phy will return -ENODEV if it's not able to find the phy. Hence
fixed all the callers of usb_get_phy to check for this error condition
instead of relying on a non-zero value as success condition.

Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
Signed-off-by: Felipe Balbi <balbi@ti.com>
Signed-off-by: fupan li <fupan.li@windriver.com>
---
 drivers/usb/otg/otg.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/otg/otg.c b/drivers/usb/otg/otg.c
index 12d803c..104d9ac 100644
--- a/drivers/usb/otg/otg.c
+++ b/drivers/usb/otg/otg.c
@@ -146,7 +146,7 @@ struct usb_phy *devm_usb_get_phy(struct device *dev, enum usb_phy_type type)
 		return NULL;
 
 	phy = usb_get_phy(type);
-	if (phy) {
+	if (!IS_ERR(phy)) {
 		*ptr = phy;
 		devres_add(dev, ptr);
 	} else
@@ -161,7 +161,7 @@ EXPORT_SYMBOL(devm_usb_get_phy);
  * @type - the type of the phy the controller requires 
  *
  * Returns the phy driver, after getting a refcount to it; or
- * null if there is no such phy.  The caller is responsible for
+ * -ENODEV if there is no such phy.  The caller is responsible for
  * calling usb_put_phy() to release that count.
  *
  * For use by USB host and peripheral drivers.
-- 
1.7.5.4

