From e49b1981b0abb1cde950c6a39c8456ba94ca5826 Mon Sep 17 00:00:00 2001
From: Wei Yang <Wei.Yang@windriver.com>
Date: Fri, 29 Jun 2012 14:12:52 +0800
Subject: [PATCH 2/8] misc/lis331dlh: change paremeter of
 lis331dlh_acc_i2c_read/write

change paremeter of lis331dlh_acc_i2c_read and lis331dlh_acc_i2c_write
from lis331dlh_acc_data to i2c_client in order to keep their coding style
consistent with lis331dlh_acc_i2c_read_reg8 and lis331dlh_acc_i2c_write_reg8.

Signed-off-by: Yang Wei <wei.yang@windriver.com>
---
 drivers/misc/lis331dlh/lis331dlh_acc.c |   19 +++++++++----------
 1 files changed, 9 insertions(+), 10 deletions(-)

diff --git a/drivers/misc/lis331dlh/lis331dlh_acc.c b/drivers/misc/lis331dlh/lis331dlh_acc.c
index 7e95e5d..b6c38df 100644
--- a/drivers/misc/lis331dlh/lis331dlh_acc.c
+++ b/drivers/misc/lis331dlh/lis331dlh_acc.c
@@ -206,32 +206,31 @@ static int lis331dlh_acc_i2c_write_reg8(struct i2c_client *client, u8 reg, u8 va
 
 	return ret;
 }
-static int lis331dlh_acc_i2c_read(struct lis331dlh_acc_data *acc,
+static int lis331dlh_acc_i2c_read(struct i2c_client *client,
 				  u8 *buf, int len)
 {
 	int ret;
 	u8 cmd;
 	cmd = buf[0];
-	printk(KERN_INFO "%s---\n", __FUNCTION__);
 
-	ret = i2c_smbus_read_block_data(acc->client, cmd, &buf[1]);
+	ret = i2c_smbus_read_block_data(client, cmd, &buf[1]);
 	if (ret < 0) {
-		dev_err(&acc->client->dev, "read transfer error\n");
+		dev_err(&client->dev, "read transfer error\n");
 		return -EIO;
 	}
 	return ret;
 }
 
-static int lis331dlh_acc_i2c_write(struct lis331dlh_acc_data *acc,
+static int lis331dlh_acc_i2c_write(struct i2c_client *client,
 				   u8 *buf, int len)
 {
 	int ret;
 	u8 cmd;
 
 	cmd = buf[0];
-	ret = i2c_smbus_write_block_data(acc->client, cmd, len, &buf[1]);
+	ret = i2c_smbus_write_block_data(client, cmd, len, &buf[1]);
 	if (ret < 0) {
-		dev_err(&acc->client->dev, "write transfer error\n");
+		dev_err(&client->dev, "write transfer error\n");
 		return -EIO;
 	}
 	return ret;
@@ -330,7 +329,7 @@ static void lis331dlh_acc_device_power_off(struct lis331dlh_acc_data *acc)
 	int err;
 	u8 buf[2] = { CTRL_REG1, LIS331DLH_ACC_PM_OFF };
 
-	err = lis331dlh_acc_i2c_write(acc, buf, 1);
+	err = lis331dlh_acc_i2c_write(acc->client, buf, 1);
 	if (err < 0)
 		dev_err(&acc->client->dev, "soft power off failed: %d\n", err);
 
@@ -617,7 +616,7 @@ static int lis331dlh_acc_get_acceleration_data(struct lis331dlh_acc_data *acc,
 	s16 hw_d[3] = { 0 };
 
 	acc_data[0] = (I2C_AUTO_INCREMENT | AXISDATA_REG);
-	err = lis331dlh_acc_i2c_read(acc, acc_data, 6);
+	err = lis331dlh_acc_i2c_read(acc->client, acc_data, 6);
 	if (err < 0)
 		return err;
 
@@ -938,7 +937,7 @@ static ssize_t attr_reg_set(struct device *dev, struct device_attribute *attr,
 	x[0] = acc->reg_addr;
 	mutex_unlock(&acc->lock);
 	x[1] = val;
-	rc = lis331dlh_acc_i2c_write(acc, x, 1);
+	rc = lis331dlh_acc_i2c_write(acc->client, x, 1);
 	/*TODO: error need to be managed */
 	return size;
 }
-- 
1.7.7

