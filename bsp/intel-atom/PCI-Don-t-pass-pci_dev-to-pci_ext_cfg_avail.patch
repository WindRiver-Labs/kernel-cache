From 6031132fd1a782f95ce757262a50db7e038bd6ef Mon Sep 17 00:00:00 2001
From: Peng Chao <chao.peng@windriver.com>
Date: Tue, 6 Aug 2013 16:10:04 +0800
Subject: [PATCH 015/134] PCI: Don't pass pci_dev to pci_ext_cfg_avail()

upstream: 642c92da36ae0bed3c31fdd408411ab95f4e326b

pci_ext_cfg_avail() doesn't use the "struct pci_dev *" passed to
it, and there's no requirement that a host bridge even be represented
by a pci_dev.  This drops the pci_ext_cfg_avail() parameter.

[bhelgaas: changelog]
Signed-off-by: Taku Izumi <izumi.taku@jp.fujitsu.com>
Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
Signed-off-by: Peng Chao <chao.peng@windriver.com>
---
 arch/x86/pci/common.c   |    2 +-
 drivers/acpi/pci_root.c |    2 +-
 drivers/pci/pci.c       |    5 ++---
 include/linux/pci.h     |    2 +-
 4 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/arch/x86/pci/common.c b/arch/x86/pci/common.c
index b68c189..30ee626 100644
--- a/arch/x86/pci/common.c
+++ b/arch/x86/pci/common.c
@@ -648,7 +648,7 @@ void pcibios_disable_device (struct pci_dev *dev)
 		pcibios_disable_irq(dev);
 }
 
-int pci_ext_cfg_avail(struct pci_dev *dev)
+int pci_ext_cfg_avail(void)
 {
 	if (raw_pci_ext_ops)
 		return 1;
diff --git a/drivers/acpi/pci_root.c b/drivers/acpi/pci_root.c
index 609a540..fd3f0d3 100644
--- a/drivers/acpi/pci_root.c
+++ b/drivers/acpi/pci_root.c
@@ -563,7 +563,7 @@ static int __devinit acpi_pci_root_add(struct acpi_device *device)
 		acpi_pci_bridge_scan(child);
 
 	/* Indicate support for various _OSC capabilities. */
-	if (pci_ext_cfg_avail(root->bus->self))
+	if (pci_ext_cfg_avail())
 		flags |= OSC_EXT_PCI_CONFIG_SUPPORT;
 	if (pcie_aspm_support_enabled())
 		flags |= OSC_ACTIVE_STATE_PWR_SUPPORT |
diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index 111569c..3e963ae 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -3836,14 +3836,13 @@ static void __devinit pci_no_domains(void)
 }
 
 /**
- * pci_ext_cfg_enabled - can we access extended PCI config space?
- * @dev: The PCI device of the root bridge.
+ * pci_ext_cfg_avail - can we access extended PCI config space?
  *
  * Returns 1 if we can access PCI extended config space (offsets
  * greater than 0xff). This is the default implementation. Architecture
  * implementations can override this.
  */
-int __attribute__ ((weak)) pci_ext_cfg_avail(struct pci_dev *dev)
+int __attribute__ ((weak)) pci_ext_cfg_avail(void)
 {
 	return 1;
 }
diff --git a/include/linux/pci.h b/include/linux/pci.h
index 4fce0e7..8e67f93 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -1550,7 +1550,7 @@ static inline void pci_mmcfg_early_init(void) { }
 static inline void pci_mmcfg_late_init(void) { }
 #endif
 
-int pci_ext_cfg_avail(struct pci_dev *dev);
+int pci_ext_cfg_avail(void);
 
 void __iomem *pci_ioremap_bar(struct pci_dev *pdev, int bar);
 
-- 
1.7.5.4

