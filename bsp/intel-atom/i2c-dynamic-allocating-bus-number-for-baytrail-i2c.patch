From e9de1e8700a35af66b533307f26b8c4c3a30eb03 Mon Sep 17 00:00:00 2001
From: fupan li <fupan.li@windriver.com>
Date: Wed, 13 May 2015 14:28:28 +0800
Subject: [PATCH] i2c: dynamic allocating bus number for baytrail i2c

Statically specified bus number for baytrail i2c should
register designware i2c before i2c-i801, which is not compatible
with upstream. So this patch dynamically allocate bus number and
restore the register order.

Signed-off-by: fupan li <fupan.li@windriver.com>
---
 drivers/i2c/busses/Makefile                |    2 +-
 drivers/i2c/busses/i2c-designware-pcidrv.c |  104 +++-------------------------
 2 files changed, 11 insertions(+), 95 deletions(-)

diff --git a/drivers/i2c/busses/Makefile b/drivers/i2c/busses/Makefile
index 882c2f8..a0c43a8 100644
--- a/drivers/i2c/busses/Makefile
+++ b/drivers/i2c/busses/Makefile
@@ -13,6 +13,7 @@ obj-$(CONFIG_I2C_ALI15X3)	+= i2c-ali15x3.o
 obj-$(CONFIG_I2C_AMD756)	+= i2c-amd756.o
 obj-$(CONFIG_I2C_AMD756_S4882)	+= i2c-amd756-s4882.o
 obj-$(CONFIG_I2C_AMD8111)	+= i2c-amd8111.o
+obj-$(CONFIG_I2C_I801)		+= i2c-i801.o
 obj-$(CONFIG_I2C_ISCH)		+= i2c-isch.o
 obj-$(CONFIG_I2C_ISMT)		+= i2c-ismt.o
 obj-$(CONFIG_I2C_NFORCE2)	+= i2c-nforce2.o
@@ -39,7 +40,6 @@ obj-$(CONFIG_I2C_DESIGNWARE_PLATFORM)	+= i2c-designware-platform.o
 i2c-designware-platform-objs := i2c-designware-platdrv.o
 obj-$(CONFIG_I2C_DESIGNWARE_PCI)	+= i2c-designware-pci.o
 i2c-designware-pci-objs := i2c-designware-pcidrv.o
-obj-$(CONFIG_I2C_I801)          += i2c-i801.o
 obj-$(CONFIG_I2C_EG20T)		+= i2c-eg20t.o
 obj-$(CONFIG_I2C_GPIO)		+= i2c-gpio.o
 obj-$(CONFIG_I2C_HIGHLANDER)	+= i2c-highlander.o
diff --git a/drivers/i2c/busses/i2c-designware-pcidrv.c b/drivers/i2c/busses/i2c-designware-pcidrv.c
index cd30681..cbe283c 100644
--- a/drivers/i2c/busses/i2c-designware-pcidrv.c
+++ b/drivers/i2c/busses/i2c-designware-pcidrv.c
@@ -59,13 +59,7 @@ enum dw_pci_ctl_id_t {
 	medfield_4,
 	medfield_5,
 
-	byt_0,
-	byt_1,
-	byt_2,
-	byt_3,
-	byt_4,
-	byt_5,
-	byt_6,
+	baytrail,
 };
 
 struct dw_pci_controller {
@@ -154,86 +148,8 @@ static struct  dw_pci_controller  dw_pci_controllers[] = {
 		.rx_fifo_depth = 32,
 		.clk_khz      = 25000,
 	},
-	[byt_0] = {
-		.bus_num     = 0,
-		.bus_cfg   = INTEL_BYT_STD_CFG | DW_IC_CON_SPEED_FAST,
-		.tx_fifo_depth = 32,
-		.rx_fifo_depth = 32,
-		.clk_khz      = 100000,
-		.ss_hcnt	= 0x200,
-		.ss_lcnt	= 0x200,
-		.fs_hcnt	= 0x55,
-		.fs_lcnt	= 0x99,
-		.ss_sda		= 0x6,
-		.fs_sda		= 0x6,
-	},
-	[byt_1] = {
-		.bus_num     = 1,
-		.bus_cfg   = INTEL_BYT_STD_CFG | DW_IC_CON_SPEED_FAST,
-		.tx_fifo_depth = 32,
-		.rx_fifo_depth = 32,
-		.clk_khz      = 100000,
-		.ss_hcnt	= 0x200,
-		.ss_lcnt	= 0x200,
-		.fs_hcnt	= 0x55,
-		.fs_lcnt	= 0x99,
-		.ss_sda		= 0x6,
-		.fs_sda		= 0x6,
-	},
-	[byt_2] = {
-		.bus_num     = 2,
-		.bus_cfg   = INTEL_BYT_STD_CFG | DW_IC_CON_SPEED_FAST,
-		.tx_fifo_depth = 32,
-		.rx_fifo_depth = 32,
-		.clk_khz      = 100000,
-		.ss_hcnt	= 0x200,
-		.ss_lcnt	= 0x200,
-		.fs_hcnt	= 0x55,
-		.fs_lcnt	= 0x99,
-		.ss_sda		= 0x6,
-		.fs_sda		= 0x6,
-	},
-	[byt_3] = {
-		.bus_num     = 3,
-		.bus_cfg   = INTEL_BYT_STD_CFG | DW_IC_CON_SPEED_FAST,
-		.tx_fifo_depth = 32,
-		.rx_fifo_depth = 32,
-		.clk_khz      = 100000,
-		.ss_hcnt	= 0x200,
-		.ss_lcnt	= 0x200,
-		.fs_hcnt	= 0x55,
-		.fs_lcnt	= 0x99,
-		.ss_sda		= 0x6,
-		.fs_sda		= 0x6,
-	},
-	[byt_4] = {
-		.bus_num     = 4,
-		.bus_cfg   = INTEL_BYT_STD_CFG | DW_IC_CON_SPEED_FAST,
-		.tx_fifo_depth = 32,
-		.rx_fifo_depth = 32,
-		.clk_khz      = 100000,
-		.ss_hcnt	= 0x200,
-		.ss_lcnt	= 0x200,
-		.fs_hcnt	= 0x55,
-		.fs_lcnt	= 0x99,
-		.ss_sda		= 0x6,
-		.fs_sda		= 0x6,
-	},
-	[byt_5] = {
-		.bus_num     = 5,
-		.bus_cfg   = INTEL_BYT_STD_CFG | DW_IC_CON_SPEED_FAST,
-		.tx_fifo_depth = 32,
-		.rx_fifo_depth = 32,
-		.clk_khz      = 100000,
-		.ss_hcnt	= 0x200,
-		.ss_lcnt	= 0x200,
-		.fs_hcnt	= 0x55,
-		.fs_lcnt	= 0x99,
-		.ss_sda		= 0x06,
-		.fs_sda		= 0x06,
-	},
-	[byt_6] = {
-		.bus_num     = 6,
+	[baytrail] = {
+		.bus_num = -1,
 		.bus_cfg   = INTEL_BYT_STD_CFG | DW_IC_CON_SPEED_FAST,
 		.tx_fifo_depth = 32,
 		.rx_fifo_depth = 32,
@@ -449,13 +365,13 @@ static DEFINE_PCI_DEVICE_TABLE(i2_designware_pci_ids) = {
 	{ PCI_VDEVICE(INTEL, 0x082D), medfield_1 },
 	{ PCI_VDEVICE(INTEL, 0x082E), medfield_2 },
 	/* BYT */
-	{ PCI_VDEVICE(INTEL, 0x0F41), byt_0 },
-	{ PCI_VDEVICE(INTEL, 0x0F42), byt_1 },
-	{ PCI_VDEVICE(INTEL, 0x0F43), byt_2 },
-	{ PCI_VDEVICE(INTEL, 0x0F44), byt_3 },
-	{ PCI_VDEVICE(INTEL, 0x0F45), byt_4 },
-	{ PCI_VDEVICE(INTEL, 0x0F46), byt_5 },
-	{ PCI_VDEVICE(INTEL, 0x0F47), byt_6 },
+	{ PCI_VDEVICE(INTEL, 0x0F41), baytrail },
+	{ PCI_VDEVICE(INTEL, 0x0F42), baytrail },
+	{ PCI_VDEVICE(INTEL, 0x0F43), baytrail },
+	{ PCI_VDEVICE(INTEL, 0x0F44), baytrail },
+	{ PCI_VDEVICE(INTEL, 0x0F45), baytrail },
+	{ PCI_VDEVICE(INTEL, 0x0F46), baytrail },
+	{ PCI_VDEVICE(INTEL, 0x0F47), baytrail },
 	{ 0,}
 };
 MODULE_DEVICE_TABLE(pci, i2_designware_pci_ids);
-- 
1.7.5.4

