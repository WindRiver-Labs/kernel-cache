From 88d080e0ab318fcaa9aaff9f39c0dee04fcdf23a Mon Sep 17 00:00:00 2001
From: Shuo Liu <shuo.liu@windriver.com>
Date: Tue, 13 Oct 2009 13:03:19 +0800
Subject: [PATCH 3/4] MTD support

Add Flash MTD driver support for BCM5621x, and create three
partitions. They are boot, os and rootfs. Boot partition is
read-only, because bootloader is stored in the Boot partition.

Signed-off-by: Shuo Liu <shuo.liu@windriver.com>
---
 drivers/mtd/maps/Kconfig          |    7 ++
 drivers/mtd/maps/Makefile         |    1 +
 drivers/mtd/maps/bcm5621x_flash.c |  120 +++++++++++++++++++++++++++++++++++++
 3 files changed, 128 insertions(+), 0 deletions(-)
 create mode 100644 drivers/mtd/maps/bcm5621x_flash.c

diff --git a/drivers/mtd/maps/Kconfig b/drivers/mtd/maps/Kconfig
index 5c79fc2..71a071d 100644
--- a/drivers/mtd/maps/Kconfig
+++ b/drivers/mtd/maps/Kconfig
@@ -580,5 +580,12 @@ config MTD_ATMEL49XX_FLASH
           flash is split into 2 partitions which are accessed as separate
           MTD devices.
 
+config MTD_BCM5612x_FLASH
+	tristate "Flash chip on BCM5621x  Boards"
+	depends on BCM5621X && MTD_PARTITIONS
+	default y
+	help
+	  This enables access to the flash chip on BCM5612x boards.
+
 endmenu
 
diff --git a/drivers/mtd/maps/Makefile b/drivers/mtd/maps/Makefile
index 9e17291..4c6a80b 100644
--- a/drivers/mtd/maps/Makefile
+++ b/drivers/mtd/maps/Makefile
@@ -66,3 +66,4 @@ obj-$(CONFIG_MTD_OMAP_NOR)	+= omap_nor.o
 obj-$(CONFIG_MTD_INTEL_VR_NOR)	+= intel_vr_nor.o
 obj-$(CONFIG_MTD_BFIN_ASYNC)	+= bfin-async-flash.o
 obj-$(CONFIG_MTD_ATMEL49XX_FLASH)   += atmel49xx_flash.o atmel49xx_uflash.o
+obj-$(CONFIG_MTD_BCM5612x_FLASH) 	+= bcm5621x_flash.o
diff --git a/drivers/mtd/maps/bcm5621x_flash.c b/drivers/mtd/maps/bcm5621x_flash.c
new file mode 100644
index 0000000..c4c5c6d
--- /dev/null
+++ b/drivers/mtd/maps/bcm5621x_flash.c
@@ -0,0 +1,120 @@
+/*
+   * drivers/mtd/maps/bcm5621x_flash.c
+	*
+	* Mapping for the Broadcom5621x.
+	*
+	* Copyright (C) 2009 Wind River Systems, Inc.
+	*
+	* Author: Shuo Liu <shuo.liu@windriver.com>
+	*
+	* This program is free software; you can redistribute it and/or modify
+	* it under the terms of the GNU General Public License version 2 as
+	* published by the Free Software Foundation.
+	*
+ */
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/mtd/map.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/partitions.h>
+#include <linux/types.h>
+
+
+#define WINDOW_ADDR	0x1C000000
+#define WINDOW_SIZE	0x02000000           /* 32M */
+
+static struct map_info bcm_map = {
+	.name = "BCM Flash",
+	.size = WINDOW_SIZE,
+	.phys = WINDOW_ADDR,
+	.bankwidth = 2,
+};
+
+static struct mtd_partition bcm_partitions[] = {
+	{
+		.name = "boot",
+		.offset = 0,
+		.size = 0x80000,              /* New CFI flash at 1C000000 offset 00000000 size 512KB(0.5MB) */
+		.mask_flags = MTD_WRITEABLE,
+	},
+	{
+		.name = "os",
+		.offset = 0x80000,
+		.size = 0x400000,			  /* New CFI flash at 1C000000 offset 00080000 size 4096KB(4MB) */
+	},
+	{
+		.name = "rootfs",
+		.offset = 0x480000,
+		.size = 0xb00000,			  /* New CFI flash at 1C000000 offset 00480000 size 11264KB(11MB) */
+	}
+};
+
+#define NUM_PARTITIONS ARRAY_SIZE(bcm_partitions)
+
+static struct mtd_info *mymtd;
+static struct mtd_partition *parsed_part;
+static const char *probe;
+static int nr_parsed_parts;
+
+static int __init init_bcm_map(void)
+{
+	int rc = 0;
+
+	bcm_map.virt = ioremap_nocache(bcm_map.phys, bcm_map.size);
+
+	if (!bcm_map.virt) {
+		printk(KERN_ERR "Failed to ioremap_nocache\n");
+		rc = -EIO;
+		goto err2;
+	}
+
+	simple_map_init(&bcm_map);
+
+	mymtd = do_map_probe("cfi_probe", &bcm_map);
+	if (!mymtd) {
+		printk(KERN_WARNING "%s is absent.\n", bcm_map.name);
+		rc = -ENXIO;
+		goto err1;
+	}
+
+	mymtd->owner = THIS_MODULE;
+	nr_parsed_parts = parse_mtd_partitions(mymtd, &probe, &parsed_part, 0);
+
+
+	if(nr_parsed_parts > 0) {
+		add_mtd_partitions(mymtd, parsed_part, nr_parsed_parts);
+	} else {
+		printk("using static partitions on %s\n", bcm_map.name);
+		add_mtd_partitions(mymtd, bcm_partitions,NUM_PARTITIONS);
+	}
+
+	return 0;
+
+err1:
+	map_destroy(mymtd);
+	iounmap(bcm_map.virt);
+err2:
+	return rc;
+}
+
+static void __exit cleanup_bcm_map(void)
+{
+	if (mymtd) {
+		del_mtd_partitions(mymtd);
+		map_destroy(mymtd);
+	}
+
+	if (bcm_map.virt) {
+		iounmap(bcm_map.virt);
+		bcm_map.virt = NULL;
+	}
+}
+
+module_init(init_bcm_map);
+module_exit(cleanup_bcm_map);
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Shuoliu <shuo.liu@windriver.com>");
+MODULE_DESCRIPTION("MTD map driver for BCM5621X board");
-- 
1.6.5.2

