From 8d0c6f393209e8846e3d2c2597a6582d6f7819c0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Noralf=20Tr=C3=B8nnes?= <noralf@tronnes.org>
Date: Mon, 10 Oct 2016 19:26:42 +0200
Subject: [PATCH 115/203] bcm270x: Drop map_io device mapping
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

All drivers map their own io now so it's not necessary to do this
mapping anymore. The mapping for the uart debug console is handled by
debug_ll_io_init() if necessary.

Remove local uart debug code and rely on mainline.
Use these kconfig options to enable:
CONFIG_DEBUG_BCM2835
CONFIG_DEBUG_BCM2836

Signed-off-by: Noralf Tr√∏nnes <noralf@tronnes.org>
[Xulin: Original patch taken from
https://github.com/raspberrypi/linux.git branch rpi-4.8.y]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 arch/arm/Kconfig.debug                           |   18 +--
 arch/arm/mach-bcm2708/bcm2708.c                  |   75 +--------
 arch/arm/mach-bcm2708/include/mach/debug-macro.S |   22 ---
 arch/arm/mach-bcm2708/include/mach/platform.h    |  114 -------------
 arch/arm/mach-bcm2708/include/mach/system.h      |   37 -----
 arch/arm/mach-bcm2708/include/mach/uncompress.h  |   84 ----------
 arch/arm/mach-bcm2709/bcm2709.c                  |   86 +----------
 arch/arm/mach-bcm2709/include/mach/debug-macro.S |   22 ---
 arch/arm/mach-bcm2709/include/mach/platform.h    |  190 ----------------------
 arch/arm/mach-bcm2709/include/mach/system.h      |   37 -----
 arch/arm/mach-bcm2709/include/mach/uncompress.h  |   84 ----------
 11 files changed, 11 insertions(+), 758 deletions(-)
 delete mode 100644 arch/arm/mach-bcm2708/include/mach/debug-macro.S
 delete mode 100644 arch/arm/mach-bcm2708/include/mach/platform.h
 delete mode 100644 arch/arm/mach-bcm2708/include/mach/system.h
 delete mode 100644 arch/arm/mach-bcm2708/include/mach/uncompress.h
 delete mode 100644 arch/arm/mach-bcm2709/include/mach/debug-macro.S
 delete mode 100644 arch/arm/mach-bcm2709/include/mach/platform.h
 delete mode 100644 arch/arm/mach-bcm2709/include/mach/system.h
 delete mode 100644 arch/arm/mach-bcm2709/include/mach/uncompress.h

diff --git a/arch/arm/Kconfig.debug b/arch/arm/Kconfig.debug
index f47f4e7..11aa81f 100644
--- a/arch/arm/Kconfig.debug
+++ b/arch/arm/Kconfig.debug
@@ -147,12 +147,12 @@ choice
 
 	config DEBUG_BCM2835
 		bool "Kernel low-level debugging on BCM2835 PL011 UART"
-		depends on ARCH_BCM2835 && ARCH_MULTI_V6
+		depends on (ARCH_BCM2835 && ARCH_MULTI_V6) || ARCH_BCM2708
 		select DEBUG_UART_PL01X
 
 	config DEBUG_BCM2836
 		bool "Kernel low-level debugging on BCM2836 PL011 UART"
-		depends on ARCH_BCM2835 && ARCH_MULTI_V7
+		depends on (ARCH_BCM2835 && ARCH_MULTI_V7) || ARCH_BCM2709
 		select DEBUG_UART_PL01X
 
 	config DEBUG_BCM_5301X
@@ -1312,14 +1312,6 @@ choice
 		  options; the platform specific options are deprecated
 		  and will be soon removed.
 
-	config DEBUG_BCM2708_UART0
-		bool "Broadcom BCM270X UART0 (PL011)"
-		depends on ARCH_BCM2708 || ARCH_BCM2709
-		help
-		  Say Y here if you want the debug print routines to direct
-		  their output to UART 0. The port must have been initialised
-		  by the boot-loader before use.
-
 endchoice
 
 config DEBUG_AT91_UART
@@ -1703,7 +1695,8 @@ config DEBUG_UART_8250_FLOW_CONTROL
 
 config DEBUG_UNCOMPRESS
 	bool
-	depends on ARCH_MULTIPLATFORM || PLAT_SAMSUNG || ARM_SINGLE_ARMV7M
+	depends on ARCH_MULTIPLATFORM || PLAT_SAMSUNG || ARM_SINGLE_ARMV7M || \
+		   ARCH_BCM2708 || ARCH_BCM2709
 	default y if DEBUG_LL && !DEBUG_OMAP2PLUS_UART && \
 		     (!DEBUG_TEGRA_UART || !ZBOOT_ROM)
 	help
@@ -1720,7 +1713,8 @@ config DEBUG_UNCOMPRESS
 config UNCOMPRESS_INCLUDE
 	string
 	default "debug/uncompress.h" if ARCH_MULTIPLATFORM || ARCH_MSM || \
-					PLAT_SAMSUNG || ARM_SINGLE_ARMV7M
+					PLAT_SAMSUNG || ARM_SINGLE_ARMV7M || \
+					ARCH_BCM2708 || ARCH_BCM2709
 	default "mach/uncompress.h"
 
 config EARLY_PRINTK
diff --git a/arch/arm/mach-bcm2708/bcm2708.c b/arch/arm/mach-bcm2708/bcm2708.c
index 0dc1efd..47d5f36 100644
--- a/arch/arm/mach-bcm2708/bcm2708.c
+++ b/arch/arm/mach-bcm2708/bcm2708.c
@@ -19,84 +19,16 @@
  */
 
 #include <linux/init.h>
-#include <linux/dma-mapping.h>
 #include <linux/module.h>
-#include <asm/system_info.h>
-#include <asm/mach-types.h>
-#include <asm/mach/arch.h>
-#include <asm/mach/map.h>
-
-#include <mach/system.h>
-
 #include <linux/broadcom/vc_cma.h>
 
-/* Effectively we have an IOMMU (ARM<->VideoCore map) that is set up to
- * give us IO access only to 64Mbytes of physical memory (26 bits).  We could
- * represent this window by setting our dmamasks to 26 bits but, in fact
- * we're not going to use addresses outside this range (they're not in real
- * memory) so we don't bother.
- *
- * In the future we might include code to use this IOMMU to remap other
- * physical addresses onto VideoCore memory then the use of 32-bits would be
- * more legitimate.
- */
+#include <asm/mach-types.h>
+#include <asm/mach/arch.h>
+#include <asm/system_info.h>
 
 /* command line parameters */
 static unsigned boardrev, serial;
 
-static struct map_desc bcm2708_io_desc[] __initdata = {
-	{
-	 .virtual = IO_ADDRESS(ARMCTRL_BASE),
-	 .pfn = __phys_to_pfn(ARMCTRL_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(UART0_BASE),
-	 .pfn = __phys_to_pfn(UART0_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(UART1_BASE),
-	 .pfn = __phys_to_pfn(UART1_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(DMA_BASE),
-	 .pfn = __phys_to_pfn(DMA_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(MCORE_BASE),
-	 .pfn = __phys_to_pfn(MCORE_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(ST_BASE),
-	 .pfn = __phys_to_pfn(ST_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(USB_BASE),
-	 .pfn = __phys_to_pfn(USB_BASE),
-	 .length = SZ_128K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(PM_BASE),
-	 .pfn = __phys_to_pfn(PM_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(GPIO_BASE),
-	 .pfn = __phys_to_pfn(GPIO_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE}
-};
-
-void __init bcm2708_map_io(void)
-{
-	iotable_init(bcm2708_io_desc, ARRAY_SIZE(bcm2708_io_desc));
-}
-
 static void __init bcm2708_init(void)
 {
 	vc_cma_early_init();
@@ -117,7 +49,6 @@ static const char * const bcm2708_compat[] = {
 
 MACHINE_START(BCM2708, "BCM2708")
     /* Maintainer: Broadcom Europe Ltd. */
-	.map_io = bcm2708_map_io,
 	.init_machine = bcm2708_init,
 	.reserve = board_reserve,
 	.dt_compat = bcm2708_compat,
diff --git a/arch/arm/mach-bcm2708/include/mach/debug-macro.S b/arch/arm/mach-bcm2708/include/mach/debug-macro.S
deleted file mode 100644
index b24304a..0000000
--- a/arch/arm/mach-bcm2708/include/mach/debug-macro.S
+++ /dev/null
@@ -1,22 +0,0 @@
-/* arch/arm/mach-bcm2708/include/mach/debug-macro.S
- *
- * Debugging macro include header
- *
- *  Copyright (C) 2010 Broadcom
- *  Copyright (C) 1994-1999 Russell King
- *  Moved from linux/arch/arm/kernel/debug.S by Ben Dooks
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
-*/
-
-#include <mach/platform.h>
-
-		.macro	addruart, rp, rv, tmp
-		ldr	\rp, =UART0_BASE
-		ldr	\rv, =IO_ADDRESS(UART0_BASE)
-		.endm
-
-#include <debug/pl01x.S>
diff --git a/arch/arm/mach-bcm2708/include/mach/platform.h b/arch/arm/mach-bcm2708/include/mach/platform.h
deleted file mode 100644
index e98ec5a..0000000
--- a/arch/arm/mach-bcm2708/include/mach/platform.h
+++ /dev/null
@@ -1,114 +0,0 @@
-/*
- * arch/arm/mach-bcm2708/include/mach/platform.h
- *
- * Copyright (C) 2010 Broadcom
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#ifndef _BCM2708_PLATFORM_H
-#define _BCM2708_PLATFORM_H
-
-
-/* macros to get at IO space when running virtually */
-#define IO_ADDRESS(x)	(((x) & 0x0fffffff) + (((x) >> 4) & 0x0f000000) + 0xf0000000)
-
-#define __io_address(n)     IOMEM(IO_ADDRESS(n))
-
-
-/*
- *  SDRAM
- */
-#define BCM2708_SDRAM_BASE           0x00000000
-
-/*
- *  Logic expansion modules
- *
- */
-
-
-/* ------------------------------------------------------------------------
- *  BCM2708 ARMCTRL Registers
- * ------------------------------------------------------------------------
- */
-
-#define HW_REGISTER_RW(addr) (addr)
-#define HW_REGISTER_RO(addr) (addr)
-
-/*
- * Definitions and addresses for the ARM CONTROL logic
- * This file is manually generated.
- */
-
-#define BCM2708_PERI_BASE        0x20000000
-#define IC0_BASE                 (BCM2708_PERI_BASE + 0x2000)
-#define ST_BASE                  (BCM2708_PERI_BASE + 0x3000)   /* System Timer */
-#define MPHI_BASE		 (BCM2708_PERI_BASE + 0x6000)	/* Message -based Parallel Host Interface */
-#define DMA_BASE		 (BCM2708_PERI_BASE + 0x7000)	/* DMA controller */
-#define ARM_BASE                 (BCM2708_PERI_BASE + 0xB000)	 /* BCM2708 ARM control block */
-#define PM_BASE			 (BCM2708_PERI_BASE + 0x100000) /* Power Management, Reset controller and Watchdog registers */
-#define PCM_CLOCK_BASE           (BCM2708_PERI_BASE + 0x101098) /* PCM Clock */
-#define RNG_BASE                 (BCM2708_PERI_BASE + 0x104000) /* Hardware RNG */
-#define GPIO_BASE                (BCM2708_PERI_BASE + 0x200000) /* GPIO */
-#define UART0_BASE               (BCM2708_PERI_BASE + 0x201000)	/* Uart 0 */
-#define MMCI0_BASE               (BCM2708_PERI_BASE + 0x202000) /* MMC interface */
-#define I2S_BASE                 (BCM2708_PERI_BASE + 0x203000) /* I2S */
-#define SPI0_BASE		 (BCM2708_PERI_BASE + 0x204000) /* SPI0 */
-#define BSC0_BASE		 (BCM2708_PERI_BASE + 0x205000) /* BSC0 I2C/TWI */
-#define UART1_BASE               (BCM2708_PERI_BASE + 0x215000) /* Uart 1 */
-#define EMMC_BASE                (BCM2708_PERI_BASE + 0x300000) /* eMMC interface */
-#define SMI_BASE		 (BCM2708_PERI_BASE + 0x600000) /* SMI */
-#define BSC1_BASE		 (BCM2708_PERI_BASE + 0x804000) /* BSC1 I2C/TWI */
-#define USB_BASE                 (BCM2708_PERI_BASE + 0x980000) /* DTC_OTG USB controller */
-#define MCORE_BASE               (BCM2708_PERI_BASE + 0x0000)   /* Fake frame buffer device (actually the multicore sync block*/
-
-#define ARMCTRL_BASE             (ARM_BASE + 0x000)
-#define ARMCTRL_IC_BASE          (ARM_BASE + 0x200)           /* ARM interrupt controller */
-#define ARMCTRL_TIMER0_1_BASE    (ARM_BASE + 0x400)           /* Timer 0 and 1 */
-#define ARMCTRL_0_SBM_BASE       (ARM_BASE + 0x800)           /* User 0 (ARM)'s Semaphores Doorbells and Mailboxes */
-#define ARMCTRL_0_BELL_BASE      (ARMCTRL_0_SBM_BASE + 0x40)  /* User 0 (ARM)'s Doorbell */
-#define ARMCTRL_0_MAIL0_BASE     (ARMCTRL_0_SBM_BASE + 0x80)  /* User 0 (ARM)'s Mailbox 0 */
-
-/*
- * Watchdog
- */
-#define PM_RSTC			       (PM_BASE+0x1c)
-#define PM_RSTS			       (PM_BASE+0x20)
-#define PM_WDOG			       (PM_BASE+0x24)
-
-#define PM_WDOG_RESET                                         0000000000
-#define PM_PASSWORD		       0x5a000000
-#define PM_WDOG_TIME_SET	       0x000fffff
-#define PM_RSTC_WRCFG_CLR              0xffffffcf
-#define PM_RSTC_WRCFG_SET              0x00000030
-#define PM_RSTC_WRCFG_FULL_RESET       0x00000020
-#define PM_RSTC_RESET                  0x00000102
-
-#define PM_RSTS_HADPOR_SET                                 0x00001000
-#define PM_RSTS_HADSRH_SET                                 0x00000400
-#define PM_RSTS_HADSRF_SET                                 0x00000200
-#define PM_RSTS_HADSRQ_SET                                 0x00000100
-#define PM_RSTS_HADWRH_SET                                 0x00000040
-#define PM_RSTS_HADWRF_SET                                 0x00000020
-#define PM_RSTS_HADWRQ_SET                                 0x00000010
-#define PM_RSTS_HADDRH_SET                                 0x00000004
-#define PM_RSTS_HADDRF_SET                                 0x00000002
-#define PM_RSTS_HADDRQ_SET                                 0x00000001
-
-#define UART0_CLOCK      3000000
-
-#endif
-
-/* END */
diff --git a/arch/arm/mach-bcm2708/include/mach/system.h b/arch/arm/mach-bcm2708/include/mach/system.h
deleted file mode 100644
index c9a9c9a..0000000
--- a/arch/arm/mach-bcm2708/include/mach/system.h
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- *  arch/arm/mach-bcm2708/include/mach/system.h
- *
- *  Copyright (C) 2010 Broadcom
- *  Copyright (C) 2003 ARM Limited
- *  Copyright (C) 2000 Deep Blue Solutions Ltd
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-#ifndef __ASM_ARCH_SYSTEM_H
-#define __ASM_ARCH_SYSTEM_H
-
-#include <linux/io.h>
-#include <mach/platform.h>
-
-static inline void arch_idle(void)
-{
-	/*
-	 * This should do all the clock switching
-	 * and wait for interrupt tricks
-	 */
-	cpu_do_idle();
-}
-
-#endif
diff --git a/arch/arm/mach-bcm2708/include/mach/uncompress.h b/arch/arm/mach-bcm2708/include/mach/uncompress.h
deleted file mode 100644
index de7504b..0000000
--- a/arch/arm/mach-bcm2708/include/mach/uncompress.h
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- *  arch/arm/mach-bcn2708/include/mach/uncompress.h
- *
- *  Copyright (C) 2010 Broadcom
- *  Copyright (C) 2003 ARM Limited
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#include <linux/io.h>
-#include <linux/amba/serial.h>
-#include <mach/platform.h>
-
-#define UART_BAUD 115200
-
-#define BCM2708_UART_DR   __io(UART0_BASE + UART01x_DR)
-#define BCM2708_UART_FR   __io(UART0_BASE + UART01x_FR)
-#define BCM2708_UART_IBRD __io(UART0_BASE + UART011_IBRD)
-#define BCM2708_UART_FBRD __io(UART0_BASE + UART011_FBRD)
-#define BCM2708_UART_LCRH __io(UART0_BASE + UART011_LCRH)
-#define BCM2708_UART_CR   __io(UART0_BASE + UART011_CR)
-
-/*
- * This does not append a newline
- */
-static inline void putc(int c)
-{
-	while (__raw_readl(BCM2708_UART_FR) & UART01x_FR_TXFF)
-		barrier();
-
-	__raw_writel(c, BCM2708_UART_DR);
-}
-
-static inline void flush(void)
-{
-	int fr;
-
-	do {
-		fr = __raw_readl(BCM2708_UART_FR);
-		barrier();
-	} while ((fr & (UART011_FR_TXFE | UART01x_FR_BUSY)) != UART011_FR_TXFE);
-}
-
-static inline void arch_decomp_setup(void)
-{
-	int temp, div, rem, frac;
-
-	temp = 16 * UART_BAUD;
-	div = UART0_CLOCK / temp;
-	rem = UART0_CLOCK % temp;
-	temp = (8 * rem) / UART_BAUD;
-	frac = (temp >> 1) + (temp & 1);
-
-	/* Make sure the UART is disabled before we start */
-	__raw_writel(0, BCM2708_UART_CR);
-
-	/* Set the baud rate */
-	__raw_writel(div, BCM2708_UART_IBRD);
-	__raw_writel(frac, BCM2708_UART_FBRD);
-
-	/* Set the UART to 8n1, FIFO enabled */
-	__raw_writel(UART01x_LCRH_WLEN_8 | UART01x_LCRH_FEN, BCM2708_UART_LCRH);
-
-	/* Enable the UART */
-	__raw_writel(UART01x_CR_UARTEN | UART011_CR_TXE | UART011_CR_RXE,
-			BCM2708_UART_CR);
-}
-
-/*
- * nothing to do
- */
-#define arch_decomp_wdog()
diff --git a/arch/arm/mach-bcm2709/bcm2709.c b/arch/arm/mach-bcm2709/bcm2709.c
index d0e4361..39d3043 100644
--- a/arch/arm/mach-bcm2709/bcm2709.c
+++ b/arch/arm/mach-bcm2709/bcm2709.c
@@ -19,96 +19,16 @@
  */
 
 #include <linux/init.h>
-#include <linux/dma-mapping.h>
-#include <linux/interrupt.h>
-#include <linux/clk-provider.h>
-#include <linux/clocksource.h>
-#include <linux/io.h>
 #include <linux/module.h>
+#include <linux/broadcom/vc_cma.h>
 
-#include <asm/system_info.h>
 #include <asm/mach-types.h>
-#include <asm/cputype.h>
-
 #include <asm/mach/arch.h>
-#include <asm/mach/map.h>
-
-#include <mach/system.h>
-
-#include <linux/broadcom/vc_cma.h>
-
-/* Effectively we have an IOMMU (ARM<->VideoCore map) that is set up to
- * give us IO access only to 64Mbytes of physical memory (26 bits).  We could
- * represent this window by setting our dmamasks to 26 bits but, in fact
- * we're not going to use addresses outside this range (they're not in real
- * memory) so we don't bother.
- *
- * In the future we might include code to use this IOMMU to remap other
- * physical addresses onto VideoCore memory then the use of 32-bits would be
- * more legitimate.
- */
+#include <asm/system_info.h>
 
 /* command line parameters */
 static unsigned boardrev, serial;
 
-static struct map_desc bcm2709_io_desc[] __initdata = {
-	{
-	 .virtual = IO_ADDRESS(ARMCTRL_BASE),
-	 .pfn = __phys_to_pfn(ARMCTRL_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(UART0_BASE),
-	 .pfn = __phys_to_pfn(UART0_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(UART1_BASE),
-	 .pfn = __phys_to_pfn(UART1_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(DMA_BASE),
-	 .pfn = __phys_to_pfn(DMA_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(MCORE_BASE),
-	 .pfn = __phys_to_pfn(MCORE_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(ST_BASE),
-	 .pfn = __phys_to_pfn(ST_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(USB_BASE),
-	 .pfn = __phys_to_pfn(USB_BASE),
-	 .length = SZ_128K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(PM_BASE),
-	 .pfn = __phys_to_pfn(PM_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(GPIO_BASE),
-	 .pfn = __phys_to_pfn(GPIO_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-	{
-	 .virtual = IO_ADDRESS(ARM_LOCAL_BASE),
-	 .pfn = __phys_to_pfn(ARM_LOCAL_BASE),
-	 .length = SZ_4K,
-	 .type = MT_DEVICE},
-};
-
-void __init bcm2709_map_io(void)
-{
-	iotable_init(bcm2709_io_desc, ARRAY_SIZE(bcm2709_io_desc));
-}
-
 static void __init bcm2709_init(void)
 {
 	vc_cma_early_init();
@@ -130,7 +50,6 @@ static const char * const bcm2709_compat[] = {
 
 MACHINE_START(BCM2709, "BCM2709")
     /* Maintainer: Broadcom Europe Ltd. */
-	.map_io = bcm2709_map_io,
 	.init_machine = bcm2709_init,
 	.reserve = board_reserve,
 	.dt_compat = bcm2709_compat,
@@ -138,7 +57,6 @@ MACHINE_END
 
 MACHINE_START(BCM2708, "BCM2709")
     /* Maintainer: Broadcom Europe Ltd. */
-	.map_io = bcm2709_map_io,
 	.init_machine = bcm2709_init,
 	.reserve = board_reserve,
 	.dt_compat = bcm2709_compat,
diff --git a/arch/arm/mach-bcm2709/include/mach/debug-macro.S b/arch/arm/mach-bcm2709/include/mach/debug-macro.S
deleted file mode 100644
index b24304a..0000000
--- a/arch/arm/mach-bcm2709/include/mach/debug-macro.S
+++ /dev/null
@@ -1,22 +0,0 @@
-/* arch/arm/mach-bcm2708/include/mach/debug-macro.S
- *
- * Debugging macro include header
- *
- *  Copyright (C) 2010 Broadcom
- *  Copyright (C) 1994-1999 Russell King
- *  Moved from linux/arch/arm/kernel/debug.S by Ben Dooks
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
-*/
-
-#include <mach/platform.h>
-
-		.macro	addruart, rp, rv, tmp
-		ldr	\rp, =UART0_BASE
-		ldr	\rv, =IO_ADDRESS(UART0_BASE)
-		.endm
-
-#include <debug/pl01x.S>
diff --git a/arch/arm/mach-bcm2709/include/mach/platform.h b/arch/arm/mach-bcm2709/include/mach/platform.h
deleted file mode 100644
index 9a638f5..0000000
--- a/arch/arm/mach-bcm2709/include/mach/platform.h
+++ /dev/null
@@ -1,190 +0,0 @@
-/*
- * arch/arm/mach-bcm2708/include/mach/platform.h
- *
- * Copyright (C) 2010 Broadcom
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#ifndef _BCM2708_PLATFORM_H
-#define _BCM2708_PLATFORM_H
-
-
-/* macros to get at IO space when running virtually */
-#define IO_ADDRESS(x)	(((x) & 0x00ffffff) + (((x) >> 4) & 0x0f000000) + 0xf0000000)
-
-#define __io_address(n)     IOMEM(IO_ADDRESS(n))
-
-
-/*
- *  SDRAM
- */
-#define BCM2708_SDRAM_BASE           0x00000000
-
-/*
- *  Logic expansion modules
- *
- */
-
-
-/* ------------------------------------------------------------------------
- *  BCM2708 ARMCTRL Registers
- * ------------------------------------------------------------------------
- */
-
-#define HW_REGISTER_RW(addr) (addr)
-#define HW_REGISTER_RO(addr) (addr)
-
-/*
- * Definitions and addresses for the ARM CONTROL logic
- * This file is manually generated.
- */
-
-#define BCM2708_PERI_BASE        0x3F000000
-#define IC0_BASE                 (BCM2708_PERI_BASE + 0x2000)
-#define ST_BASE                  (BCM2708_PERI_BASE + 0x3000)   /* System Timer */
-#define MPHI_BASE		 (BCM2708_PERI_BASE + 0x6000)	/* Message -based Parallel Host Interface */
-#define DMA_BASE		 (BCM2708_PERI_BASE + 0x7000)	/* DMA controller */
-#define ARM_BASE                 (BCM2708_PERI_BASE + 0xB000)	 /* BCM2708 ARM control block */
-#define PM_BASE			 (BCM2708_PERI_BASE + 0x100000) /* Power Management, Reset controller and Watchdog registers */
-#define PCM_CLOCK_BASE           (BCM2708_PERI_BASE + 0x101098) /* PCM Clock */
-#define RNG_BASE                 (BCM2708_PERI_BASE + 0x104000) /* Hardware RNG */
-#define GPIO_BASE                (BCM2708_PERI_BASE + 0x200000) /* GPIO */
-#define UART0_BASE               (BCM2708_PERI_BASE + 0x201000)	/* Uart 0 */
-#define MMCI0_BASE               (BCM2708_PERI_BASE + 0x202000) /* MMC interface */
-#define I2S_BASE                 (BCM2708_PERI_BASE + 0x203000) /* I2S */
-#define SPI0_BASE		 (BCM2708_PERI_BASE + 0x204000) /* SPI0 */
-#define BSC0_BASE		 (BCM2708_PERI_BASE + 0x205000) /* BSC0 I2C/TWI */
-#define UART1_BASE               (BCM2708_PERI_BASE + 0x215000) /* Uart 1 */
-#define EMMC_BASE                (BCM2708_PERI_BASE + 0x300000) /* eMMC interface */
-#define SMI_BASE		 (BCM2708_PERI_BASE + 0x600000) /* SMI */
-#define BSC1_BASE		 (BCM2708_PERI_BASE + 0x804000) /* BSC1 I2C/TWI */
-#define USB_BASE                 (BCM2708_PERI_BASE + 0x980000) /* DTC_OTG USB controller */
-#define MCORE_BASE               (BCM2708_PERI_BASE + 0x0000)   /* Fake frame buffer device (actually the multicore sync block*/
-
-#define ARMCTRL_BASE             (ARM_BASE + 0x000)
-#define ARMCTRL_IC_BASE          (ARM_BASE + 0x200)           /* ARM interrupt controller */
-#define ARMCTRL_TIMER0_1_BASE    (ARM_BASE + 0x400)           /* Timer 0 and 1 */
-#define ARMCTRL_0_SBM_BASE       (ARM_BASE + 0x800)           /* User 0 (ARM)'s Semaphores Doorbells and Mailboxes */
-#define ARMCTRL_0_BELL_BASE      (ARMCTRL_0_SBM_BASE + 0x40)  /* User 0 (ARM)'s Doorbell */
-#define ARMCTRL_0_MAIL0_BASE     (ARMCTRL_0_SBM_BASE + 0x80)  /* User 0 (ARM)'s Mailbox 0 */
-
-/*
- * Watchdog
- */
-#define PM_RSTC			       (PM_BASE+0x1c)
-#define PM_RSTS			       (PM_BASE+0x20)
-#define PM_WDOG			       (PM_BASE+0x24)
-
-#define PM_WDOG_RESET                                         0000000000
-#define PM_PASSWORD		       0x5a000000
-#define PM_WDOG_TIME_SET	       0x000fffff
-#define PM_RSTC_WRCFG_CLR              0xffffffcf
-#define PM_RSTC_WRCFG_SET              0x00000030
-#define PM_RSTC_WRCFG_FULL_RESET       0x00000020
-#define PM_RSTC_RESET                  0x00000102
-
-#define PM_RSTS_HADPOR_SET                                 0x00001000
-#define PM_RSTS_HADSRH_SET                                 0x00000400
-#define PM_RSTS_HADSRF_SET                                 0x00000200
-#define PM_RSTS_HADSRQ_SET                                 0x00000100
-#define PM_RSTS_HADWRH_SET                                 0x00000040
-#define PM_RSTS_HADWRF_SET                                 0x00000020
-#define PM_RSTS_HADWRQ_SET                                 0x00000010
-#define PM_RSTS_HADDRH_SET                                 0x00000004
-#define PM_RSTS_HADDRF_SET                                 0x00000002
-#define PM_RSTS_HADDRQ_SET                                 0x00000001
-
-#define UART0_CLOCK      3000000
-
-#define ARM_LOCAL_BASE 0x40000000
-#define ARM_LOCAL_CONTROL		HW_REGISTER_RW(ARM_LOCAL_BASE+0x000)
-
-#define ARM_LOCAL_CONTROL		HW_REGISTER_RW(ARM_LOCAL_BASE+0x000)
-#define ARM_LOCAL_PRESCALER		HW_REGISTER_RW(ARM_LOCAL_BASE+0x008)
-#define ARM_LOCAL_GPU_INT_ROUTING	HW_REGISTER_RW(ARM_LOCAL_BASE+0x00C)
-#define ARM_LOCAL_PM_ROUTING_SET	HW_REGISTER_RW(ARM_LOCAL_BASE+0x010)
-#define ARM_LOCAL_PM_ROUTING_CLR	HW_REGISTER_RW(ARM_LOCAL_BASE+0x014)
-#define ARM_LOCAL_TIMER_LS		HW_REGISTER_RW(ARM_LOCAL_BASE+0x01C)
-#define ARM_LOCAL_TIMER_MS		HW_REGISTER_RW(ARM_LOCAL_BASE+0x020)
-#define ARM_LOCAL_INT_ROUTING		HW_REGISTER_RW(ARM_LOCAL_BASE+0x024)
-#define ARM_LOCAL_AXI_COUNT		HW_REGISTER_RW(ARM_LOCAL_BASE+0x02C)
-#define ARM_LOCAL_AXI_IRQ		HW_REGISTER_RW(ARM_LOCAL_BASE+0x030)
-#define ARM_LOCAL_TIMER_CONTROL		HW_REGISTER_RW(ARM_LOCAL_BASE+0x034)
-#define ARM_LOCAL_TIMER_WRITE		HW_REGISTER_RW(ARM_LOCAL_BASE+0x038)
-
-#define ARM_LOCAL_TIMER_INT_CONTROL0	HW_REGISTER_RW(ARM_LOCAL_BASE+0x040)
-#define ARM_LOCAL_TIMER_INT_CONTROL1	HW_REGISTER_RW(ARM_LOCAL_BASE+0x044)
-#define ARM_LOCAL_TIMER_INT_CONTROL2	HW_REGISTER_RW(ARM_LOCAL_BASE+0x048)
-#define ARM_LOCAL_TIMER_INT_CONTROL3	HW_REGISTER_RW(ARM_LOCAL_BASE+0x04C)
-
-#define ARM_LOCAL_MAILBOX_INT_CONTROL0	HW_REGISTER_RW(ARM_LOCAL_BASE+0x050)
-#define ARM_LOCAL_MAILBOX_INT_CONTROL1	HW_REGISTER_RW(ARM_LOCAL_BASE+0x054)
-#define ARM_LOCAL_MAILBOX_INT_CONTROL2	HW_REGISTER_RW(ARM_LOCAL_BASE+0x058)
-#define ARM_LOCAL_MAILBOX_INT_CONTROL3	HW_REGISTER_RW(ARM_LOCAL_BASE+0x05C)
-
-#define ARM_LOCAL_IRQ_PENDING0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x060)
-#define ARM_LOCAL_IRQ_PENDING1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x064)
-#define ARM_LOCAL_IRQ_PENDING2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x068)
-#define ARM_LOCAL_IRQ_PENDING3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x06C)
-
-#define ARM_LOCAL_FIQ_PENDING0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x070)
-#define ARM_LOCAL_FIQ_PENDING1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x074)
-#define ARM_LOCAL_FIQ_PENDING2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x078)
-#define ARM_LOCAL_FIQ_PENDING3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x07C)
-
-#define ARM_LOCAL_MAILBOX0_SET0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x080)
-#define ARM_LOCAL_MAILBOX1_SET0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x084)
-#define ARM_LOCAL_MAILBOX2_SET0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x088)
-#define ARM_LOCAL_MAILBOX3_SET0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x08C)
-
-#define ARM_LOCAL_MAILBOX0_SET1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x090)
-#define ARM_LOCAL_MAILBOX1_SET1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x094)
-#define ARM_LOCAL_MAILBOX2_SET1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x098)
-#define ARM_LOCAL_MAILBOX3_SET1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x09C)
-
-#define ARM_LOCAL_MAILBOX0_SET2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0A0)
-#define ARM_LOCAL_MAILBOX1_SET2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0A4)
-#define ARM_LOCAL_MAILBOX2_SET2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0A8)
-#define ARM_LOCAL_MAILBOX3_SET2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0AC)
-
-#define ARM_LOCAL_MAILBOX0_SET3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0B0)
-#define ARM_LOCAL_MAILBOX1_SET3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0B4)
-#define ARM_LOCAL_MAILBOX2_SET3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0B8)
-#define ARM_LOCAL_MAILBOX3_SET3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0BC)
-
-#define ARM_LOCAL_MAILBOX0_CLR0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0C0)
-#define ARM_LOCAL_MAILBOX1_CLR0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0C4)
-#define ARM_LOCAL_MAILBOX2_CLR0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0C8)
-#define ARM_LOCAL_MAILBOX3_CLR0		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0CC)
-
-#define ARM_LOCAL_MAILBOX0_CLR1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0D0)
-#define ARM_LOCAL_MAILBOX1_CLR1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0D4)
-#define ARM_LOCAL_MAILBOX2_CLR1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0D8)
-#define ARM_LOCAL_MAILBOX3_CLR1		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0DC)
-
-#define ARM_LOCAL_MAILBOX0_CLR2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0E0)
-#define ARM_LOCAL_MAILBOX1_CLR2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0E4)
-#define ARM_LOCAL_MAILBOX2_CLR2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0E8)
-#define ARM_LOCAL_MAILBOX3_CLR2		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0EC)
-
-#define ARM_LOCAL_MAILBOX0_CLR3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0F0)
-#define ARM_LOCAL_MAILBOX1_CLR3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0F4)
-#define ARM_LOCAL_MAILBOX2_CLR3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0F8)
-#define ARM_LOCAL_MAILBOX3_CLR3		HW_REGISTER_RW(ARM_LOCAL_BASE+0x0FC)
-
-#endif
-
-/* END */
diff --git a/arch/arm/mach-bcm2709/include/mach/system.h b/arch/arm/mach-bcm2709/include/mach/system.h
deleted file mode 100644
index c9a9c9a..0000000
--- a/arch/arm/mach-bcm2709/include/mach/system.h
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- *  arch/arm/mach-bcm2708/include/mach/system.h
- *
- *  Copyright (C) 2010 Broadcom
- *  Copyright (C) 2003 ARM Limited
- *  Copyright (C) 2000 Deep Blue Solutions Ltd
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-#ifndef __ASM_ARCH_SYSTEM_H
-#define __ASM_ARCH_SYSTEM_H
-
-#include <linux/io.h>
-#include <mach/platform.h>
-
-static inline void arch_idle(void)
-{
-	/*
-	 * This should do all the clock switching
-	 * and wait for interrupt tricks
-	 */
-	cpu_do_idle();
-}
-
-#endif
diff --git a/arch/arm/mach-bcm2709/include/mach/uncompress.h b/arch/arm/mach-bcm2709/include/mach/uncompress.h
deleted file mode 100644
index de7504b..0000000
--- a/arch/arm/mach-bcm2709/include/mach/uncompress.h
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- *  arch/arm/mach-bcn2708/include/mach/uncompress.h
- *
- *  Copyright (C) 2010 Broadcom
- *  Copyright (C) 2003 ARM Limited
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#include <linux/io.h>
-#include <linux/amba/serial.h>
-#include <mach/platform.h>
-
-#define UART_BAUD 115200
-
-#define BCM2708_UART_DR   __io(UART0_BASE + UART01x_DR)
-#define BCM2708_UART_FR   __io(UART0_BASE + UART01x_FR)
-#define BCM2708_UART_IBRD __io(UART0_BASE + UART011_IBRD)
-#define BCM2708_UART_FBRD __io(UART0_BASE + UART011_FBRD)
-#define BCM2708_UART_LCRH __io(UART0_BASE + UART011_LCRH)
-#define BCM2708_UART_CR   __io(UART0_BASE + UART011_CR)
-
-/*
- * This does not append a newline
- */
-static inline void putc(int c)
-{
-	while (__raw_readl(BCM2708_UART_FR) & UART01x_FR_TXFF)
-		barrier();
-
-	__raw_writel(c, BCM2708_UART_DR);
-}
-
-static inline void flush(void)
-{
-	int fr;
-
-	do {
-		fr = __raw_readl(BCM2708_UART_FR);
-		barrier();
-	} while ((fr & (UART011_FR_TXFE | UART01x_FR_BUSY)) != UART011_FR_TXFE);
-}
-
-static inline void arch_decomp_setup(void)
-{
-	int temp, div, rem, frac;
-
-	temp = 16 * UART_BAUD;
-	div = UART0_CLOCK / temp;
-	rem = UART0_CLOCK % temp;
-	temp = (8 * rem) / UART_BAUD;
-	frac = (temp >> 1) + (temp & 1);
-
-	/* Make sure the UART is disabled before we start */
-	__raw_writel(0, BCM2708_UART_CR);
-
-	/* Set the baud rate */
-	__raw_writel(div, BCM2708_UART_IBRD);
-	__raw_writel(frac, BCM2708_UART_FBRD);
-
-	/* Set the UART to 8n1, FIFO enabled */
-	__raw_writel(UART01x_LCRH_WLEN_8 | UART01x_LCRH_FEN, BCM2708_UART_LCRH);
-
-	/* Enable the UART */
-	__raw_writel(UART01x_CR_UARTEN | UART011_CR_TXE | UART011_CR_RXE,
-			BCM2708_UART_CR);
-}
-
-/*
- * nothing to do
- */
-#define arch_decomp_wdog()
-- 
1.7.5.4

