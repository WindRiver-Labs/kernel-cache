From 2a8e8eac3909ca8924ee733e62b232a7ec13a240 Mon Sep 17 00:00:00 2001
From: Wang Hui <Hui.Wang@windriver.com>
Date: Mon, 14 Jan 2013 17:13:59 +0800
Subject: [PATCH 44/50] armadaxp: nand: set all databuf to 0xff before write

The marvell nand flash controller doesn't support partial write, if we
want to write to the nand flash, we must write a whole page.

But Linux kernel support partial write API, to implement this function,
we will set all databuf to 0xff first, then copy real data to databuf,
since write 0xff to nand flash won't change its content, this method is
OK for partial write.

Because we move the building rules from drivers/mtd/Makefile to arch/
arm/plat-armada/Makefile, and the nand_nfc init function needs to be
executed after mtd layer init function, so change module_init to
late_initcall to guarantee nfc init is later than mtd init.

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 .../plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c   |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c
index 7e8347e..17e6d1b 100644
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_mtd/nand_nfc.c
@@ -1056,7 +1056,7 @@ static void orion_nfc_cmdfunc(struct mtd_info *mtd, unsigned command,
 	case NAND_CMD_SEQIN:
 		info->buf_start = column;
 		info->buf_count = mtd->writesize + mtd->oobsize;
-		memset(info->data_buff + mtd->writesize, 0xff, mtd->oobsize);
+		memset(info->data_buff, 0xff, mtd->oobsize);
 
 		/* save column/page_addr for next CMD_PAGEPROG */
 		info->seqin_column = column;
@@ -1751,7 +1751,7 @@ static int __init orion_nfc_init(void)
 {
 	return platform_driver_register(&orion_nfc_driver);
 }
-module_init(orion_nfc_init);
+late_initcall(orion_nfc_init);
 
 static void __exit orion_nfc_exit(void)
 {
-- 
1.7.0

