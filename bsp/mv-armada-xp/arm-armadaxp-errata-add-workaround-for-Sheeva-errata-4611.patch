From e50e54fc2b1ddd6d6606aad73e9079d0fe944127 Mon Sep 17 00:00:00 2001
From: Wang Hui <Hui.Wang@windriver.com>
Date: Tue, 15 Jan 2013 17:49:00 +0800
Subject: [PATCH 1/5] arm: armadaxp: errata: add workaround for Sheeva errata 4611

Sheeva Errata 4611: A CP15 clean operation can result in a dead lock
state if it is hit by an incoming snoop event.

The code is extracted from linux-3.2.27-axp_a370-2012_Q4.1, which
can be downloaded from:
https://extranet.marvell.com/extranet/dms/documents.do?groupID=4&\
subGroupID=53015

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 arch/arm/include/asm/tlbflush.h |   22 ++++++++++++++++++++++
 arch/arm/mm/copypage-v6.c       |    9 +++++++++
 arch/arm/mm/proc-macros.S       |   22 ++++++++++++++++++++++
 3 files changed, 53 insertions(+), 0 deletions(-)

diff --git a/arch/arm/include/asm/tlbflush.h b/arch/arm/include/asm/tlbflush.h
index 9669275..6bb71e9 100644
--- a/arch/arm/include/asm/tlbflush.h
+++ b/arch/arm/include/asm/tlbflush.h
@@ -468,7 +468,18 @@ static inline void flush_pmd_entry(void *pmd)
 {
 	const unsigned int __tlb_flag = __cpu_tlb_flags;
 
+	if (tlb_flag(TLB_DCLEAN))
+#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_4611
+	{
+		unsigned long flags;
+		raw_local_irq_save(flags);
+		dmb();
+#endif
 	tlb_op(TLB_DCLEAN, "c7, c10, 1	@ flush_pmd", pmd);
+#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_4611
+		raw_local_irq_restore(flags);
+	}
+#endif
 
 #ifdef CONFIG_CACHE_AURORA_L2
 	if (tlb_flag(TLB_L2CLEAN_FR))
@@ -485,7 +496,18 @@ static inline void clean_pmd_entry(void *pmd)
 {
 	const unsigned int __tlb_flag = __cpu_tlb_flags;
 
+	if (tlb_flag(TLB_DCLEAN))
+#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_4611
+	{
+		unsigned long flags;
+                raw_local_irq_save(flags);
+                dmb();
+#endif
 	tlb_op(TLB_DCLEAN, "c7, c10, 1	@ flush_pmd", pmd);
+#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_4611
+		raw_local_irq_restore(flags);
+	}
+#endif
 
 #ifdef CONFIG_CACHE_AURORA_L2
 	if (tlb_flag(TLB_L2CLEAN_FR))
diff --git a/arch/arm/mm/copypage-v6.c b/arch/arm/mm/copypage-v6.c
index b9bcc9d..535bde0 100644
--- a/arch/arm/mm/copypage-v6.c
+++ b/arch/arm/mm/copypage-v6.c
@@ -59,11 +59,20 @@ static void v6_clear_user_highpage_nonaliasing(struct page *page, unsigned long
  */
 static void discard_old_kernel_data(void *kto)
 {
+#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_4611
+	unsigned long flags;
+
+	raw_local_irq_save(flags);
+	dmb();
+#endif
 	__asm__("mcrr	p15, 0, %1, %0, c6	@ 0xec401f06"
 	   :
 	   : "r" (kto),
 	     "r" ((unsigned long)kto + PAGE_SIZE - L1_CACHE_BYTES)
 	   : "cc");
+#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_4611
+	raw_local_irq_restore(flags);
+#endif
 }
 
 /*
diff --git a/arch/arm/mm/proc-macros.S b/arch/arm/mm/proc-macros.S
index 8ae1946..f2e69f1 100644
--- a/arch/arm/mm/proc-macros.S
+++ b/arch/arm/mm/proc-macros.S
@@ -169,11 +169,33 @@
 	moveq	r3, #0
 
 	str	r3, [r0]
+#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_4611
+        mrs     r2, cpsr
+        orr     r3, r2, #PSR_F_BIT | PSR_I_BIT
+        msr     cpsr_c, r3                      @ Disable interrupts
+#if __LINUX_ARM_ARCH__ >= 7
+#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_6075
+#ifdef CONFIG_ARMADA_XP_A0_WITH_B0
+	a0_with_b0_errata_6075 r3
+#else
+	dsb
+#endif
+#else
+	dmb					@ ensure ordering with previous memory accesses
+#endif
+#elif __LINUX_ARM_ARCH__ == 6
+        mcr     p15, 0, r0, c7, c10, 5          @ DMB for V6
+#endif
+#endif
 	mcr	p15, 0, r0, c7, c10, 1		@ flush_pte
 #if defined (CONFIG_CACHE_AURORA_L2) && defined (CONFIG_AURORA_L2_OUTER) && !defined (CONFIG_AURORA_L2_PT_WALK)
 #error "armv6_set_pte_ext: calling l2_clean_va corrupts r2. SHOULD BE FIXED"
 	bl	l2_clean_va
 #endif
+#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_4611
+	msr     cpsr_c, r2                      @ Restore interrupts
+	mcr     p15, 0, r0, c7, c10, 4          @ drain write buffer
+#endif
 
 	.endm
 
-- 
1.7.0.2

