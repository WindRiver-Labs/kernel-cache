From 4b8eb18e588f203d8c1257797fb1c4bb1e41e8e8 Mon Sep 17 00:00:00 2001
From: Wang Hui <Hui.Wang@windriver.com>
Date: Thu, 20 Dec 2012 17:08:46 +0800
Subject: [PATCH 45/50] arm: armadaxp: process: disable l2 cache in the soft_restart

The kexec will call soft_restart to reset a cpu core, and it needs
to disable all outer_cache before reset the cpu, but on armdaxp, the
outer cache is aurora L2 cache which doesn't follow outer cache api,
we needs to disable it explicitly in the soft_restart().

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 arch/arm/include/asm/cacheflush.h |    4 ++++
 arch/arm/kernel/process.c         |    8 +++++---
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/arch/arm/include/asm/cacheflush.h b/arch/arm/include/asm/cacheflush.h
index f09b28c..0e1029a 100644
--- a/arch/arm/include/asm/cacheflush.h
+++ b/arch/arm/include/asm/cacheflush.h
@@ -275,6 +275,10 @@ extern void aurora_l2_flush_range(unsigned long start, unsigned long end);
 #define clean_dcache_area(start,size)	cpu_dcache_clean_area(start, size)
 #endif
 
+#if defined (CONFIG_CACHE_AURORA_L2) && !defined (CONFIG_AURORA_L2_OUTER)
+void auroraL2_disable(void);
+#endif
+
 /*
  * flush_dcache_page is used when the kernel has written to the page
  * cache page at virtual address page->virtual.
diff --git a/arch/arm/kernel/process.c b/arch/arm/kernel/process.c
index ca387ce..969098a 100644
--- a/arch/arm/kernel/process.c
+++ b/arch/arm/kernel/process.c
@@ -103,7 +103,6 @@ typedef void (*phys_reset_t)(unsigned long);
  * code.
  */
 static u64 soft_restart_stack[16];
-
 static void __soft_restart(void *addr)
 {
 	phys_reset_t phys_reset;
@@ -137,9 +136,12 @@ void soft_restart(unsigned long addr)
 	local_fiq_disable();
 
 	/* Disable the L2 if we're the last man standing. */
-	if (num_online_cpus() == 1)
+	if (num_online_cpus() == 1) {
 		outer_disable();
-
+#if defined (CONFIG_CACHE_AURORA_L2) && !defined (CONFIG_AURORA_L2_OUTER)
+		auroraL2_disable();
+#endif
+	}
 	/* Change to the new stack and continue with the reset. */
 	call_with_stack(__soft_restart, (void *)addr, (void *)stack);
 
-- 
1.7.0

