From 455eebbe637d625a1c0085d2fff3b1bb1e6d98d9 Mon Sep 17 00:00:00 2001
From: Shan Hai <shan.hai@windriver.com>
Date: Thu, 9 Oct 2014 09:27:26 +0800
Subject: [PATCH] arch/arm/armada-xp: enable cache coherency on NON-SMP kernel
 configuration

Integrate a patch from vendor SDK to fix a cache incoherence bug.

The USB storage device read/write operations fail with message
"reset high-speed USB device number X using ehci_marvell" for the
reason of cache incoherence.

Fix the bug by enabling cache coherence feature of armada-xp on
NON-SMP kernel configuration.

Signed-off-by: Shan Hai <shan.hai@windriver.com>
---
 arch/arm/mm/mmu.c                |    5 +++--
 arch/arm/mm/proc-sheeva_pj4bv7.S |    3 ++-
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mm/mmu.c b/arch/arm/mm/mmu.c
index 6c030b4..f7c96d1 100644
--- a/arch/arm/mm/mmu.c
+++ b/arch/arm/mm/mmu.c
@@ -476,8 +476,9 @@ static void __init build_mem_type_table(void)
 			mem_types[MT_MEMORY_NONCACHED].prot_pte |= L_PTE_SHARED;
 		}
 
-#ifdef CONFIG_SHEEVA_ERRATA_ARM_CPU_5114
-
+#if defined(CONFIG_SHEEVA_ERRATA_ARM_CPU_5114) || \
+	(defined(CONFIG_AURORA_IO_CACHE_COHERENCY) && \
+	!defined(CONFIG_ARCH_ARMADA370))
 			user_pgprot |= L_PTE_SHARED;
 			kern_pgprot |= L_PTE_SHARED;
 			vecs_pgprot |= L_PTE_SHARED;
diff --git a/arch/arm/mm/proc-sheeva_pj4bv7.S b/arch/arm/mm/proc-sheeva_pj4bv7.S
index 3642de3..89c1d2ef 100644
--- a/arch/arm/mm/proc-sheeva_pj4bv7.S
+++ b/arch/arm/mm/proc-sheeva_pj4bv7.S
@@ -424,7 +424,8 @@ defined(CONFIG_SMP)
 	
 /* Auxiliary Functional Modes Control Register 0 */
 	mrc        p15, 1, r0, c15, c2, 0                         /* Read */
-#ifdef CONFIG_SMP
+#if defined(CONFIG_SMP) || (defined(CONFIG_AURORA_IO_CACHE_COHERENCY) && \
+	defined(CONFIG_ARCH_ARMADA_XP))
 	orr          r0, r0, #0x00002                                /* BIT1 SMP/nAMP --> '1' taking part in coherency */
 #endif
 	orr     r0, r0, #0x00004                                /* BIT2 L1 parity --> '1' Enabled */
-- 
1.7.5.4

