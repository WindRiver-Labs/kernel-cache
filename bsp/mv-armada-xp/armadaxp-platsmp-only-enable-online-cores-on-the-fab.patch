From d019215135ff5cbec0baf460de68a0c433d93c83 Mon Sep 17 00:00:00 2001
From: Wang Hui <Hui.Wang@windriver.com>
Date: Fri, 18 Jan 2013 18:21:58 +0800
Subject: [PATCH 39/50] armadaxp: platsmp: only enable online cores on the fabric

The fabric is a coherence snooper on the armadaxp, original code
enabled all four cores on the fabric, if we run smp 4 cores kernel,
it can work well, but if we disable one or some of cores, for example
passing max_cpus=1, the system will crash sooner or later. If we only
enable online cores on the fabric, this issue disappears.

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 arch/arm/mach-armadaxp/platsmp.c |   11 +++++++----
 1 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/arch/arm/mach-armadaxp/platsmp.c b/arch/arm/mach-armadaxp/platsmp.c
index c45f6e2..d262aac 100644
--- a/arch/arm/mach-armadaxp/platsmp.c
+++ b/arch/arm/mach-armadaxp/platsmp.c
@@ -260,14 +260,17 @@ static void __init wakeup_cpus(void)
 	udelay(10);
 }
 
-static void __init initialize_bridge(void)
+static void __init initialize_bridge(int max_cpus)
 {
 	MV_U32 reg;
-	MV_U32 ncores = get_core_count();
 	MV_U32 core_bits;
+	MV_U32 ncores = get_core_count();
 
 	/* Set 1 bits for cores in this group */
-	core_bits = ((0x1 << ncores) - 1) << master_cpu_id;
+	if (max_cpus == 1)
+		core_bits = ((0x1 << max_cpus) - 1) << master_cpu_id;
+	else
+		core_bits = ((0x1 << ncores) - 1) << master_cpu_id;
 
 #ifdef CONFIG_MV_AMP_ENABLE
 	mvSemaLock(MV_SEMA_BRIDGE);
@@ -371,5 +374,5 @@ void __init platform_smp_prepare_cpus(unsigned int max_cpus)
 		flush_cache_all();
 		wakeup_cpus();
 	}
-	initialize_bridge();
+	initialize_bridge(max_cpus);
 }
-- 
1.7.0

