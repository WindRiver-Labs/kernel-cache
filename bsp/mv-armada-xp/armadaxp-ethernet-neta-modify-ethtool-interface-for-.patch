From c67ee0a978a1307b0794cd4d02a64256e596406f Mon Sep 17 00:00:00 2001
From: Wang Hui <Hui.Wang@windriver.com>
Date: Wed, 16 Jan 2013 10:59:06 +0800
Subject: [PATCH 17/50] armadaxp: ethernet: neta: modify ethtool interface for neta driver

Marvell ethernet driver is basing on the linux-3.2 which has more
interfaces for the ethertool, but from linux-3.3, the commit bc5787c6
removed lots of unused interfaces. To be consistent with current
linux version, removed those unused functions in the Marvell
ethernet driver.

The code is extracted from linux-3.2.27-axp_a370-2012_Q4.1, which
can be downloaded from:
https://extranet.marvell.com/extranet/dms/documents.do?groupID=4&\
subGroupID=53015

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 arch/arm/plat-armada/Makefile                      |    3 +
 .../mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c   |  171 --------------------
 include/linux/mv_neta.h                            |   75 +++++++++
 include/linux/skbuff.h                             |    4 +
 4 files changed, 82 insertions(+), 171 deletions(-)
 create mode 100644 include/linux/mv_neta.h

diff --git a/arch/arm/plat-armada/Makefile b/arch/arm/plat-armada/Makefile
index ea19ed2..7f19730 100644
--- a/arch/arm/plat-armada/Makefile
+++ b/arch/arm/plat-armada/Makefile
@@ -10,3 +10,6 @@ obj-$(CONFIG_PLAT_ARMADA)		+= pmu.o
 obj-$(CONFIG_PCI_MSI)			+= msi.o
 obj-$(CONFIG_ERROR_HANDLING)		+=error_handling.o
 obj-$(CONFIG_CPU_FREQ_ARMADA_XP)	+= cpufreq.o
+
+obj-$(CONFIG_MV_ETH_LEGACY) += mv_drivers_lsp/mv_network/mv_ethernet/
+obj-$(CONFIG_MV_ETH_NETA) += mv_drivers_lsp/mv_neta/net_dev/
diff --git a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c
index 857c782..dfdc6b1 100755
--- a/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c
+++ b/arch/arm/plat-armada/mv_drivers_lsp/mv_neta/net_dev/mv_eth_tool.c
@@ -632,113 +632,6 @@ int mv_eth_tool_set_pauseparam(struct net_device *netdev,
 
 
 /******************************************************************************
-* mv_eth_tool_get_rx_csum
-* Description:
-*	ethtool get RX checksum offloading status
-* INPUT:
-*	netdev		Network device structure pointer
-* OUTPUT
-*	None
-* RETURN:
-*	RX checksum
-*
-*******************************************************************************/
-u32 mv_eth_tool_get_rx_csum(struct net_device *netdev)
-{
-#ifdef CONFIG_MV_ETH_RX_CSUM_OFFLOAD
-	struct eth_port *priv = MV_ETH_PRIV(netdev);
-
-	return (priv->rx_csum_offload != 0);
-#else
-	return 0;
-#endif
-}
-
-/******************************************************************************
-* mv_eth_tool_set_rx_csum
-* Description:
-*	ethtool enable/disable RX checksum offloading
-* INPUT:
-*	netdev		Network device structure pointer
-*	data		Command data
-* OUTPUT
-*	None
-* RETURN:
-*	0 on success
-*
-*******************************************************************************/
-int mv_eth_tool_set_rx_csum(struct net_device *netdev, uint32_t data)
-{
-#ifdef CONFIG_MV_ETH_RX_CSUM_OFFLOAD
-	struct eth_port *priv = MV_ETH_PRIV(netdev);
-
-	priv->rx_csum_offload = data;
-	return 0;
-#else
-	return -EOPNOTSUPP;
-#endif
-}
-
-/******************************************************************************
-* mv_eth_tool_set_tx_csum
-* Description:
-*	ethtool enable/disable TX checksum offloading
-* INPUT:
-*	netdev		Network device structure pointer
-*	data		Command data
-* OUTPUT
-*	None
-* RETURN:
-*	0 on success
-*
-*******************************************************************************/
-int mv_eth_tool_set_tx_csum(struct net_device *netdev, uint32_t data)
-{
-#ifdef CONFIG_MV_ETH_TX_CSUM_OFFLOAD
-	if (data) {
-		if (netdev->mtu > MV_ETH_TX_CSUM_MAX_SIZE) {
-			printk(KERN_ERR "Cannot set TX checksum when MTU > %d\n", MV_ETH_TX_CSUM_MAX_SIZE);
-			return -EOPNOTSUPP;
-		}
-		netdev->features |= NETIF_F_IP_CSUM;
-	} else {
-		netdev->features &= ~NETIF_F_IP_CSUM;
-	}
-
-	return 0;
-#else
-	return -EOPNOTSUPP;
-#endif /* TX_CSUM_OFFLOAD */
-}
-
-
-/******************************************************************************
-* mv_eth_tool_set_tso
-* Description:
-*	ethtool enable/disable TCP segmentation offloading
-* INPUT:
-*	netdev		Network device structure pointer
-*	data		Command data
-* OUTPUT
-*	None
-* RETURN:
-*	0 on success
-*
-*******************************************************************************/
-int mv_eth_tool_set_tso(struct net_device *netdev, uint32_t data)
-{
-#if defined(CONFIG_MV_ETH_TSO)
-	if (data)
-		netdev->features |= NETIF_F_TSO;
-	else
-		netdev->features &= ~NETIF_F_TSO;
-
-	return 0;
-#else
-	return -EOPNOTSUPP;
-#endif
-}
-/******************************************************************************
 * mv_eth_tool_get_strings
 * Description:
 *	ethtool get strings (used for statistics and self-test descriptions)
@@ -821,61 +714,6 @@ static int mv_eth_tool_get_rxnfc(struct net_device *dev, struct ethtool_rxnfc *i
 	return 0;
 }
 
-/******************************************************************************
-* mv_eth_tool_set_rx_ntuple
-* Description:
-*	ethtool set mapping from 2t/5t rule to rxq/drop
-*	ignore mask parameters (assume mask=0xFF for each byte provided)
-*	support only tcp4 / udp4 protocols
-*	support only full 2t/5t rules:
-*		** 2t - must provide src-ip, dst-ip
-*		** 5t - must provide src-ip, dst-ip, src-port, dst-port
-* INPUT:
-*	netdev		Network device structure pointer
-*	ntuple
-* OUTPUT
-*	None
-* RETURN:
-*
-*******************************************************************************/
-static int mv_eth_tool_set_rx_ntuple(struct net_device *dev, struct ethtool_rx_ntuple *ntuple)
-{
-#ifdef CONFIG_MV_ETH_PNC_L3_FLOW
-	unsigned int sip, dip, ports, sport, dport, proto;
-	struct eth_port *pp;
-
-	if ((ntuple->fs.flow_type != TCP_V4_FLOW) && (ntuple->fs.flow_type != UDP_V4_FLOW))
-		return -EOPNOTSUPP;
-
-	if ((ntuple->fs.action >= CONFIG_MV_ETH_RXQ) || (ntuple->fs.action < ETHTOOL_RXNTUPLE_ACTION_CLEAR))
-		return -EINVAL;
-
-	if (ntuple->fs.flow_type == TCP_V4_FLOW)
-		proto = 6; /* tcp */
-	else
-		proto = 17; /* udp */
-
-	sip = ntuple->fs.h_u.tcp_ip4_spec.ip4src;
-	dip = ntuple->fs.h_u.tcp_ip4_spec.ip4dst;
-	sport = ntuple->fs.h_u.tcp_ip4_spec.psrc;
-	dport = ntuple->fs.h_u.tcp_ip4_spec.pdst;
-	if (!sip || !dip)
-		return -EINVAL;
-
-	pp = MV_ETH_PRIV(dev);
-	if (!sport || !dport) { /* 2-tuple */
-		pnc_ip4_2tuple_rxq(pp->port, sip, dip, ntuple->fs.action);
-	} else {
-		ports = (dport << 16) | ((sport << 16) >> 16);
-		pnc_ip4_5tuple_rxq(pp->port, sip, dip, ports, proto, ntuple->fs.action);
-	}
-
-	return 0;
-#else
-	return 1;
-#endif /* CONFIG_MV_ETH_PNC_L3_FLOW */
-}
-
 
 /******************************************************************************
 * mv_eth_tool_get_ethtool_stats
@@ -909,14 +747,6 @@ const struct ethtool_ops mv_eth_tool_ops = {
 	.get_ringparam  			= mv_eth_tool_get_ringparam,
 	.get_pauseparam				= mv_eth_tool_get_pauseparam,
 	.set_pauseparam				= mv_eth_tool_set_pauseparam,
-	.get_rx_csum				= mv_eth_tool_get_rx_csum,
-	.set_rx_csum				= mv_eth_tool_set_rx_csum,
-	.get_tx_csum				= ethtool_op_get_tx_csum,
-	.set_tx_csum				= mv_eth_tool_set_tx_csum,
-	.get_sg						= ethtool_op_get_sg,
-	.set_sg						= ethtool_op_set_sg,
-	.get_tso					= ethtool_op_get_tso,
-	.set_tso					= mv_eth_tool_set_tso,
 	.get_strings				= mv_eth_tool_get_strings,
 #if LINUX_VERSION_CODE <= KERNEL_VERSION(2, 6, 32)
 	.get_stats_count			= mv_eth_tool_get_stats_count,
@@ -925,6 +755,5 @@ const struct ethtool_ops mv_eth_tool_ops = {
 	.get_rxfh_indir				= mv_eth_tool_get_rxfh_indir,
 	.set_rxfh_indir				= mv_eth_tool_set_rxfh_indir,
 	.get_rxnfc                  = mv_eth_tool_get_rxnfc,
-	.set_rx_ntuple				= mv_eth_tool_set_rx_ntuple,
 };
 
diff --git a/include/linux/mv_neta.h b/include/linux/mv_neta.h
new file mode 100644
index 0000000..b5f2391
--- /dev/null
+++ b/include/linux/mv_neta.h
@@ -0,0 +1,75 @@
+/*******************************************************************************
+Copyright (C) Marvell International Ltd. and its affiliates
+
+This software file (the "File") is owned and distributed by Marvell
+International Ltd. and/or its affiliates ("Marvell") under the following
+alternative licensing terms.  Once you have made an election to distribute the
+File under one of the following license alternatives, please (i) delete this
+introductory statement regarding license alternatives, (ii) delete the two
+license alternatives that you have not elected to use and (iii) preserve the
+Marvell copyright notice above.
+
+********************************************************************************
+Marvell Commercial License Option
+
+If you received this File from Marvell and you have entered into a commercial
+license agreement (a "Commercial License") with Marvell, the File is licensed
+to you under the terms of the applicable Commercial License.
+
+********************************************************************************
+Marvell GPL License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File in accordance with the terms and conditions of the General
+Public License Version 2, June 1991 (the "GPL License"), a copy of which is
+available along with the File in the license.txt file or by writing to the Free
+Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
+on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
+
+THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
+WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
+DISCLAIMED.  The GPL License provides additional details about this warranty
+disclaimer.
+********************************************************************************
+Marvell BSD License Option
+
+If you received this File from Marvell, you may opt to use, redistribute and/or
+modify this File under the following licensing terms.
+Redistribution and use in source and binary forms, with or without modification,
+are permitted provided that the following conditions are met:
+
+    *   Redistributions of source code must retain the above copyright notice,
+	this list of conditions and the following disclaimer.
+
+    *   Redistributions in binary form must reproduce the above copyright
+	notice, this list of conditions and the following disclaimer in the
+	documentation and/or other materials provided with the distribution.
+
+    *   Neither the name of Marvell nor the names of its contributors may be
+	used to endorse or promote products derived from this software without
+	specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+*******************************************************************************/
+/*  mv_neta.h */
+
+#ifndef LINUX_MV_NETA_H
+#define LINUX_MV_NETA_H
+
+struct netaSmpGroupStruct {
+	MV_U32 portMask;
+	MV_U32 cpuMask;
+};
+
+
+#endif  /* LINUX_MV_NETA_H */
diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index c1bae8d..a9e45b5 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -434,6 +434,10 @@ struct sk_buff {
 	__be16			protocol;
 
 	void			(*destructor)(struct sk_buff *skb);
+#ifdef CONFIG_NET_SKB_RECYCLE
+	int			(*skb_recycle) (struct sk_buff *skb);
+	void			*hw_cookie;
+#endif /* CONFIG_NET_SKB_RECYCLE */
 #if defined(CONFIG_NF_CONNTRACK) || defined(CONFIG_NF_CONNTRACK_MODULE)
 	struct nf_conntrack	*nfct;
 #endif
-- 
1.7.0

