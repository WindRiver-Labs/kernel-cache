From 80298225db26a5d794738ada9586c25e1200869c Mon Sep 17 00:00:00 2001
From: Wang Hui <Hui.Wang@windriver.com>
Date: Wed, 19 Dec 2012 10:37:32 +0800
Subject: [PATCH 41/50] armadaxp: proc-sheeva: fix for cpu_reset and cpu_fin function

Refer to proc-v7.S, we need to disable MMU in the cpu_reset function,
and set this function in the idmap section to guarantee kexec can
work successfully.

Refer to proc-v7.S, in the proc_fin function, we need disable L2
cache, proc_sheeva already disable it, while proc_sheeva_lpae forget
to disable it, now add missed code.

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 arch/arm/mm/proc-sheeva_pj4bv7.S     |    9 ++++++++-
 arch/arm/mm/proc-sheeva_pj4bv7lpae.S |   24 +++++++++++++++++++++++-
 2 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mm/proc-sheeva_pj4bv7.S b/arch/arm/mm/proc-sheeva_pj4bv7.S
index 66aa0d6..3642de3 100644
--- a/arch/arm/mm/proc-sheeva_pj4bv7.S
+++ b/arch/arm/mm/proc-sheeva_pj4bv7.S
@@ -85,10 +85,17 @@ ENDPROC(cpu_pj4bv7_proc_fin)
  *	- loc   - location to jump to for soft reset
  */
 	.align	5
+	.pushsection	.idmap.text, "ax"
 ENTRY(cpu_pj4bv7_reset)
+	mrc	p15, 0, r1, c1, c0, 0		@ ctrl register
+	bic	r1, r1, #0x1			@ ...............m
+ THUMB(	bic	r1, r1, #1 << 30 )		@ SCTLR.TE (Thumb exceptions)
+	mcr	p15, 0, r1, c1, c0, 0		@ disable MMU
+	isb
+
 	mov	pc, r0
 ENDPROC(cpu_pj4bv7_reset)
-
+	.popsection
 /*
 ++ *	cpu_pj4bv7_do_idle()
  *
diff --git a/arch/arm/mm/proc-sheeva_pj4bv7lpae.S b/arch/arm/mm/proc-sheeva_pj4bv7lpae.S
index 55ebc78..33cf39d 100644
--- a/arch/arm/mm/proc-sheeva_pj4bv7lpae.S
+++ b/arch/arm/mm/proc-sheeva_pj4bv7lpae.S
@@ -55,6 +55,21 @@ ENTRY(cpu_pj4bv7_proc_init)
 ENDPROC(cpu_pj4bv7_proc_init)
 
 ENTRY(cpu_pj4bv7_proc_fin)
+#ifdef CONFIG_CACHE_AURORA_L2
+	mcr	p15, 0, r0, c7, c10, 4		@ Data Synchronization Barrier
+	ldr	r0, =0xffff			@ L2C clean all 16 ways
+	ldr	r1, =AXP_L2_CLEAN_WAY_REG
+	str	r0, [r1]
+	mrc	p15, 0, r0, c0, c0, 5		@ Read CPU core number
+	and	r0, r0, #0xF
+	mov	r1, #0x1
+	lsl	r0, r1, r0
+1:	ldr	r1, =AXP_L2_MNTNC_STAT_REG	@ Read maintanence status to check done per CPU
+	ldr	r1, [r1]
+	tst	r0, r1
+	bne	1b
+	mcr	p15, 0, r0, c7, c10, 4		@ Data Synchronization Barrier
+#endif
 	mrc	p15, 0, r0, c1, c0, 0		@ ctrl register
 	bic	r0, r0, #0x1000			@ ...i............
 	bic	r0, r0, #0x0006			@ .............ca.
@@ -72,10 +87,17 @@ ENDPROC(cpu_pj4bv7_proc_fin)
  *	- loc   - location to jump to for soft reset
  */
 	.align	5
+	.pushsection	.idmap.text, "ax"
 ENTRY(cpu_pj4bv7_reset)
+	mrc	p15, 0, r1, c1, c0, 0		@ ctrl register
+	bic	r1, r1, #0x1			@ ...............m
+ THUMB(	bic	r1, r1, #1 << 30 )		@ SCTLR.TE (Thumb exceptions)
+	mcr	p15, 0, r1, c1, c0, 0		@ disable MMU
+	isb
+
 	mov	pc, r0
 ENDPROC(cpu_pj4bv7_reset)
-
+	.popsection
 /*
  *	cpu_pj4bv7_do_idle()
  *
-- 
1.7.0

