From 74691e15188271bf4e9beb8b2e6fdd1bf1ccb579 Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Fri, 17 May 2013 13:35:28 +0800
Subject: [PATCH 1/2] LSI:Acp34xx:Drop 'enabled' field in device-tree

Using the standard 'status' field to replace 'enabled' field in
device-tree.

1.Drop the "enabled" attribute from the device trees.
2.In perpherial drivers, invoke of_device_is_available() to
check device availability.

Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 arch/powerpc/boot/dts/ACP344xV2.dts    |   11 ------
 arch/powerpc/sysdev/ppc4xx_pci.c       |    9 -----
 drivers/i2c/busses/acp3400-i2c.c       |    4 +--
 drivers/mtd/nand/lsi_acp_nand.c        |    5 +--
 drivers/net/ethernet/lsi/lsi_acp_net.c |    4 +--
 drivers/spi/spi-pl022.c                |    4 +--
 drivers/tty/serial/lsi_acp_serial.c    |   61 +++++++++++---------------------
 drivers/usb/host/ehci-ci13612.c        |    4 +--
 8 files changed, 26 insertions(+), 76 deletions(-)

diff --git a/arch/powerpc/boot/dts/ACP344xV2.dts b/arch/powerpc/boot/dts/ACP344xV2.dts
index 1a4040f..cccaf09 100644
--- a/arch/powerpc/boot/dts/ACP344xV2.dts
+++ b/arch/powerpc/boot/dts/ACP344xV2.dts
@@ -136,7 +136,6 @@
                         UART0: serial@00404000 {
                                 device_type = "serial";
                                 compatible = "acp-uart0";
-                                enabled = <0>;
                                 reg = <0x00404000 0x1000>;
                                 clock-reg = <0x00408040 0x20>;
                                 clock-frequency = <200000000>;
@@ -147,7 +146,6 @@
                         UART1: serial@00405000 {
                                 device_type = "serial";
                                 compatible = "acp-uart1";
-                                enabled = <0>;
                                 reg = <0x00405000 0x1000>;
                                 clock-reg = <0x00408060 0x20>;
                                 clock-frequency = <200000000>;
@@ -158,7 +156,6 @@
                         USB0: usb@004a4000 {
                                 device_type = "usb";
                                 compatible = "acp-usb";
-                                enabled = <0>;
                                 reg = <0x004a0000 0x00020000
 				       0x0040c000 0x00001000>;
                                 interrupt-parent = <&MPIC>;
@@ -168,7 +165,6 @@
 				#address-cells = <1>;
 				#size-cells = <0>;
                                 compatible = "acp-i2c";
-                                enabled = <0>;
 				reg = <0x403000 0x1000 0x408020 0x1000>;
                                 interrupt-parent = <&MPIC>;
                                 interrupts = <21 2>;
@@ -184,7 +180,6 @@
 				cell-index = <0>;
                                 compatible = "acp-ssp";
 				clock-frequency = <25000000>;
-                                enabled = <1>;
                                 reg = <0x00402000 0x00001000>;
                                 interrupt-parent = <&MPIC>;
                                 interrupts = <20 2>;
@@ -208,7 +203,6 @@
 				#size-cells = <1>;
                                 device_type = "nand";
                                 compatible = "acp-nand";
-                                enabled = <0>;
                                 reg = <0x00440000 0x20000
                                        0x0040c000 0x1000>;
 
@@ -280,7 +274,6 @@
                         FEMAC: femac@00480000 {
                                 device_type = "network";
                                 compatible = "acp-femac";
-                                enabled = <0>;
                                 reg = <0x00480000 0x1000
                                        0x00481000 0x1000
                                        0x00482000 0x1000>;
@@ -355,7 +348,6 @@
         PCIE0: pciex@f00c0000 {
                 compatible = "lsi,plb-pciex";
                 device_type = "pci";
-                enabled = <0>;
                 plx = <0>;
                 primary;
                 port = <0>;
@@ -391,7 +383,6 @@
         PCIE1: pciex@f00c8000 {
                 compatible = "lsi,plb-pciex";
                 device_type = "pci";
-                enabled = <0>;
                 plx = <0>;
                 primary;
                 port = <1>;
@@ -427,7 +418,6 @@
         PCIE2: pciex@f00d0000 {
                 compatible = "lsi,plb-pciex";
                 device_type = "pci";
-                enabled = <0>;
                 plx = <0>;
                 primary;
                 port = <2>;
@@ -464,7 +454,6 @@
         rio0: rapidio@f0020000 {
                 compatible = "acp,rapidio-delta";
                 device_type = "rapidio";
-                enabled = <0>;
                 #size = <0>;    /* 0 = (256, small system)
                                  * 1 = (65536, large system) */
 /*
diff --git a/arch/powerpc/sysdev/ppc4xx_pci.c b/arch/powerpc/sysdev/ppc4xx_pci.c
index b3ccd27..2205fd1 100644
--- a/arch/powerpc/sysdev/ppc4xx_pci.c
+++ b/arch/powerpc/sysdev/ppc4xx_pci.c
@@ -2951,15 +2951,6 @@ static void __init ppc4xx_probe_acp_pciex_bridge(struct device_node *np)
 		return;
 	}
 
-	/* Make sure PCIe is enabled in the device tree. */
-	field = of_get_property(np, "enabled", NULL);
-
-	if (!field || (field && (0 == *field))) {
-		printk(KERN_INFO "%s: Port disabled via device-tree\n",
-		       np->full_name);
-		return;
-	}
-
 	/* Check for the PLX work-around. */
 	field = of_get_property(np, "plx", NULL);
 
diff --git a/drivers/i2c/busses/acp3400-i2c.c b/drivers/i2c/busses/acp3400-i2c.c
index d98bb0a..959a0f7 100644
--- a/drivers/i2c/busses/acp3400-i2c.c
+++ b/drivers/i2c/busses/acp3400-i2c.c
@@ -427,13 +427,11 @@ static int acp34xx_i2c_probe(struct platform_device *dev)
 
 	struct acp3400_i2c *i2c;
 	int result = -ENODEV;
-	const u32 *field;
 
 	if (!np)
 		return -ENODEV;
 
-	field = of_get_property(np, "enabled", NULL);
-	if (!field || (field && (0 == *field)))
+	if (!of_device_is_available(np))
 		return -EINVAL;
 
 	i2c = kzalloc(sizeof(*i2c), GFP_KERNEL);
diff --git a/drivers/mtd/nand/lsi_acp_nand.c b/drivers/mtd/nand/lsi_acp_nand.c
index c3165d9..79f3e3b 100644
--- a/drivers/mtd/nand/lsi_acp_nand.c
+++ b/drivers/mtd/nand/lsi_acp_nand.c
@@ -3485,11 +3485,8 @@ lsi_nand_init(void)
 		unsigned long nand_length;
 		u64 gpreg_address;
 		unsigned long gpreg_length;
-		const u32 *enabled;
 
-		enabled = of_get_property(np, "enabled", NULL);
-
-		if (!enabled || (enabled && (0 == *enabled))) {
+		if (!of_device_is_available(np)) {
 			printk("ACP NAND Controller Isn't Enabled.\n");
 			return -ENODEV;
 		}
diff --git a/drivers/net/ethernet/lsi/lsi_acp_net.c b/drivers/net/ethernet/lsi/lsi_acp_net.c
index 21153bf..fea5f43 100644
--- a/drivers/net/ethernet/lsi/lsi_acp_net.c
+++ b/drivers/net/ethernet/lsi/lsi_acp_net.c
@@ -1767,9 +1767,7 @@ static int __devinit appnic_probe_config_dt(struct net_device *dev,
 	if (!np)
 		return -ENODEV;
 
-	field = of_get_property(np, "enabled", NULL);
-
-	if (!field || (field && (0 == *field)))
+	if (!of_device_is_available(np))
 		return -EINVAL;
 
 	field = of_get_property(np, "reg", NULL);
diff --git a/drivers/spi/spi-pl022.c b/drivers/spi/spi-pl022.c
index b4617dc..1e98900 100644
--- a/drivers/spi/spi-pl022.c
+++ b/drivers/spi/spi-pl022.c
@@ -2527,10 +2527,8 @@ pl022_of_probe(struct platform_device *ofdev)
 	int len;
 	struct device_node *of_node = ofdev->dev.of_node;
 	const struct of_device_id *id = of_match_node(pl022_match, of_node);
-	const int *enabled;
 
-	enabled = of_get_property(of_node, "enabled", NULL);
-	if (enabled && !*enabled)
+	if (!of_device_is_available(of_node))
 		return -ENODEV;
 
 	platform_info = kmalloc(sizeof(struct pl022_ssp_controller),
diff --git a/drivers/tty/serial/lsi_acp_serial.c b/drivers/tty/serial/lsi_acp_serial.c
index 96adf00..0d763ea 100644
--- a/drivers/tty/serial/lsi_acp_serial.c
+++ b/drivers/tty/serial/lsi_acp_serial.c
@@ -1024,7 +1024,6 @@ acp_serial_add_ports(struct uart_driver *driver)
 	u64 addr = 0;
 	const u32 *reg, *interrupts, *clk, *speed;
 	int baud_rate = 9600;
-	const int *enabled = NULL;
 
 	for (i = 0; i < ARRAY_SIZE(acp_ports); ++i) {
 		if (acp_ports[i] == NULL)
@@ -1043,59 +1042,41 @@ acp_serial_add_ports(struct uart_driver *driver)
 		goto out;
 	}
 
-	np = of_find_node_by_type(np, "serial");
-
-	while (np && !of_device_is_compatible(np, "acp-uart0"))
+	do {
 		np = of_find_node_by_type(np, "serial");
+	} while (np &&
+		(!of_device_is_compatible(np, "acp-uart0")
+		|| !of_device_is_available(np)));
 
-	if (np)
-		enabled = of_get_property(np, "enabled", NULL);
-
-	if (!enabled) {
-		/*
-		  Older LSI U-Boot package (prior to 4.8.1.36).
-
-		  Only use UART0.  The timer registers are defined
-		  differently in the device tree.
-		*/
-		uap->timer_base = ioremap(0x002000408040ULL, 0x20);
-	} else {
+	if (!np) {
 		/*
 		  Newer LSI U-Boot package (4.8.1.36 on).
 
 		  Only use a serial port if it is enabled.
 		*/
-
-		if (!np || (0 == *enabled)) {
-			np = NULL;
+		do {
 			np = of_find_node_by_type(np, "serial");
+		} while (np &&
+			(!of_device_is_compatible(np, "acp-uart1")
+			 || !of_device_is_available(np)));
+	}
 
-			while (np && !of_device_is_compatible(np, "acp-uart1"))
-				np = of_find_node_by_type(np, "serial");
+	if (np) {
+		reg = of_get_property(np, "clock-reg", NULL);
 
-			if (np)
-				enabled = of_get_property(np, "enabled", NULL);
+		if (reg) {
+			addr = of_translate_address(np, reg);
+			if (addr == OF_BAD_ADDR)
+				addr = 0;
 		}
 
-		if (np && (0 != *enabled)) {
-			reg = of_get_property(np, "clock-reg", NULL);
-
-			if (reg) {
-				addr = of_translate_address(np, reg);
-				if (addr == OF_BAD_ADDR)
-					addr = 0;
-			}
-
-			if (addr)
-				uap->timer_base = ioremap(addr, reg[1]);
-			else {
-				printk(KERN_ERR "timer io address not found\n");
-				ret = -ENOMEM;
-			}
+		if (addr)
+			uap->timer_base = ioremap(addr, reg[1]);
+		else {
+			printk(KERN_ERR "timer io address not found\n");
+			ret = -ENOMEM;
 		}
-	}
 
-	if (np) {
 		reg = of_get_property(np, "reg", NULL);
 
 		if (reg) {
diff --git a/drivers/usb/host/ehci-ci13612.c b/drivers/usb/host/ehci-ci13612.c
index 34a48b3..8ff8e92 100644
--- a/drivers/usb/host/ehci-ci13612.c
+++ b/drivers/usb/host/ehci-ci13612.c
@@ -162,11 +162,9 @@ static int ci13612_ehci_probe(struct platform_device *pdev)
 	int irq;
 	int retval;
 	struct device_node *np = pdev->dev.of_node;
-	const int *enabled;
 	struct resource *res;
 
-	enabled = of_get_property(np, "enabled", NULL);
-	if (!enabled || !*enabled)
+	if (!of_device_is_available(np))
 		return -ENODEV;
 
 	if (usb_disabled())
-- 
1.7.5.4

