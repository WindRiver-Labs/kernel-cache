From 5219dce9f648de7b0ee8a9da29a56181055db514 Mon Sep 17 00:00:00 2001
From: Ming Liu <ming.liu@windriver.com>
Date: Fri, 5 Dec 2014 14:43:37 +0800
Subject: [PATCH 2/2] dma: lsi-dma32: Add parameter to setup burst size

git://git.yoctoproject.org/linux-yocto-3.10 standard/axxia/base
commit e437d329fad075edcec69386d055dfd47eed142a

Added module parameter 'burst' that allows the setup of the DMA controller
preferred burst setting on reads and writes. Set this to 7 for INCR16, 5 for
INCR8, 3 for INCR4 or 0 for singles (no bursts).

Signed-off-by: Anders Berg <anders.berg@lsi.com>
Signed-off-by: Ming Liu <ming.liu@windriver.com>
---
 drivers/dma/lsi-dma32.c |   12 ++++++++++--
 1 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/dma/lsi-dma32.c b/drivers/dma/lsi-dma32.c
index d62af64..b544c68 100644
--- a/drivers/dma/lsi-dma32.c
+++ b/drivers/dma/lsi-dma32.c
@@ -66,6 +66,9 @@
 
 static dma_cookie_t gpdma_tx_submit(struct dma_async_tx_descriptor *txd);
 
+static unsigned int burst = 5;
+module_param(burst, uint, 0644);
+MODULE_PARM_DESC(burst, "Set preferred bust size during DMA transfters");
 
 static void reset_channel(struct gpdma_channel *dmac)
 {
@@ -525,6 +528,8 @@ gpdma_prep_memcpy(struct dma_chan *chan,
 	struct gpdma_channel *dmac = dchan_to_gchan(chan);
 	struct gpdma_desc *desc;
 	u16 rot_len, x_count, src_size, access_size;
+	u16 src_burst = burst;
+	u16 dst_burst = burst;
 
 	desc = get_descriptor(dmac->engine);
 	if (desc == NULL) {
@@ -570,8 +575,11 @@ gpdma_prep_memcpy(struct dma_chan *chan,
 	desc->hw.src_y_mod     = 0;
 	desc->hw.src_addr      = cpu_to_le32(src & 0xffffffff);
 	desc->hw.src_data_mask = ~0;
-	desc->hw.src_access    = cpu_to_le16((rot_len << 6) | access_size);
-	desc->hw.dst_access    = cpu_to_le16(access_size);
+	desc->hw.src_access    = cpu_to_le16((rot_len << 6) |
+					     access_size |
+					     (src_burst & 7));
+	desc->hw.dst_access    = cpu_to_le16(access_size |
+					     (dst_burst & 7));
 	desc->hw.ch_config     = cpu_to_le32(DMA_CONFIG_ONE_SHOT(1));
 	desc->hw.next_ptr      = 0;
 	desc->hw.dst_x_ctr     = cpu_to_le16(x_count);
-- 
1.7.5.4

