From 7cb43e518377936ba8742d2b5c24e470967af3d6 Mon Sep 17 00:00:00 2001
From: Niraj Desai <nirajvdesai@gmail.com>
Date: Wed, 12 Jun 2013 11:57:14 -0700
Subject: [PATCH 01/75] drivers/usb: LSI AXM5500 USB driver support

Added USB driver support for LSI AXM5500 device.
The USB s/w workarounds apply only to older PPC 34xx devices
hence added Kconfig option CONFIG_LSI_USB_SW_WORKAROUND

Signed-off-by: SangeethaRao <sangeetha.rao@lsi.com>
Signed-off-by: Niraj Desai <nirajvdesai@gmail.com>
---
 drivers/usb/host/Kconfig        |    8 +++++++-
 drivers/usb/host/ehci-ci13612.c |    6 ++++++
 2 files changed, 13 insertions(+), 1 deletions(-)

diff --git a/drivers/usb/host/Kconfig b/drivers/usb/host/Kconfig
index c532b6e..7525a5a 100644
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@ -4,6 +4,12 @@
 comment "USB Host Controller Drivers"
 	depends on USB
 
+config LSI_USB_SW_WORKAROUND
+	bool "LSI USB SW Workaround for ACP34xx devices"
+	default n
+	help
+	  LSI USB SW Workaround for ACP34xx devices
+
 config USB_C67X00_HCD
 	tristate "Cypress C67x00 HCD support"
 	depends on USB
@@ -578,7 +584,7 @@ config USB_SL811_HCD
 	help
 	  The SL811HS is a single-port USB controller that supports either
 	  host side or peripheral side roles.  Enable this option if your
-	  board has this chip, and you want to use it as a host controller. 
+	  board has this chip, and you want to use it as a host controller.
 	  If unsure, say N.
 
 	  To compile this driver as a module, choose M here: the
diff --git a/drivers/usb/host/ehci-ci13612.c b/drivers/usb/host/ehci-ci13612.c
index 8ff8e92..e7e54cd 100644
--- a/drivers/usb/host/ehci-ci13612.c
+++ b/drivers/usb/host/ehci-ci13612.c
@@ -63,7 +63,10 @@ static void ci13612_usb_setup(struct usb_hcd *hcd)
 /* called after powerup, by probe or system-pm "wakeup" */
 static int ehci_ci13612_reinit(struct ehci_hcd *ehci)
 {
+#ifdef CONFIG_LSI_USB_SW_WORKAROUND
+	/* S/W workarounds are not needed in AXM55xx */
 	ci13612_usb_setup(ehci_to_hcd(ehci));
+#endif
 	ehci_port_power(ehci, 0);
 
 	return 0;
@@ -109,6 +112,7 @@ static int ehci_run_fix(struct usb_hcd *hcd)
 	u32 port_status;
 	unsigned burst_size;
 	int retval;
+#ifdef CONFIG_LSI_USB_SW_WORKAROUND
 
 	/* Fix a HW erratum during the USB reset process. */
 	port_status = ehci_readl(ehci, &ehci->regs->port_status[0]);
@@ -127,6 +131,8 @@ static int ehci_run_fix(struct usb_hcd *hcd)
 	burst_size = (burst_size & 0xffff00ff) | 0x4000;	/* TXPBURST */
 	ehci_writel(ehci, burst_size, &ehci->regs->reserved[1]);
 
+#endif
+
 	return 0;
 }
 
-- 
1.7.5.4

