From 95bcd905aceef16460ff7fe90285c19c5cd77f0d Mon Sep 17 00:00:00 2001
From: "Reece R. Pollack" <x0183204@ti.com>
Date: Tue, 20 May 2014 16:42:41 -0400
Subject: [PATCH 106/256] hwqueue: keystone: Correct Linking RAM 0 Size
 register configuration

This patch corrects a configuration error in the Linking RAM 0 Size
register. The spec reads "Any descriptor index less than or equal to
this value will be considered in Linking RAM 0." Thus this register
needs to be configured as (Size - 1), rather than Size.

Signed-off-by: Reece R. Pollack <x0183204@ti.com>
(cherry picked from commit b4d2f61f02441dda24e0e5ef2842f26054f80406)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/hwqueue/keystone_hwqueue.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/hwqueue/keystone_hwqueue.c b/drivers/hwqueue/keystone_hwqueue.c
index 1f72ddc..61a5733 100644
--- a/drivers/hwqueue/keystone_hwqueue.c
+++ b/drivers/hwqueue/keystone_hwqueue.c
@@ -663,7 +663,7 @@ static int khwq_setup_link_ram(struct khwq_device *kdev)
 		dev_dbg(kdev->dev, "linkram0: phys:%x, virt:%p, size:%x\n",
 			block->phys, block->virt, block->size);
 		__raw_writel(block->phys, &qmgr->reg_config->link_ram_base0);
-		__raw_writel(block->size, &qmgr->reg_config->link_ram_size0);
+		__raw_writel(block->size - 1, &qmgr->reg_config->link_ram_size0);
 
 		block++;
 		if (!block->size)
-- 
1.7.5.4

