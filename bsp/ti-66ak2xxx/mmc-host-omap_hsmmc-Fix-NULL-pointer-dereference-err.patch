From 499003ea195513eed618e6a518d4ec1ef9446195 Mon Sep 17 00:00:00 2001
From: Kishon Vijay Abraham I <kishon@ti.com>
Date: Tue, 31 May 2016 18:07:42 +0530
Subject: [PATCH 136/347] mmc: host: omap_hsmmc: Fix NULL pointer dereference
 error

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

commit d6d077a7bae88770027 ("mmc: host: omap_hsmmc: Fix
workaround for errata i834") uses SW timeout mechanism
for timeouts that can't be handled by the hardware.
But this SW timeout mechanism is applicable only for
data transfers and it results in NULL pointer dereference
error when SW timeout is used for SWITCH command.

Fix it here.

Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
(cherry picked from commit e91a573bcd6399de9620b3e3e65f3af070c24dc4)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/mmc/host/omap_hsmmc.c |   11 +++++++----
 1 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
index edc0e17..802102e 100644
--- a/drivers/mmc/host/omap_hsmmc.c
+++ b/drivers/mmc/host/omap_hsmmc.c
@@ -1595,10 +1595,13 @@ static void set_data_timeout(struct omap_hsmmc_host *host,
 		 * transfer to complete from the timeout value given
 		 * by the upper layer.
 		 */
-		host->data_timeout = (data->blocks *
-				     (timeout_ns + MMC_BLOCK_TRANSFER_TIME_NS(
-				      data->blksz, ios->bus_width,
-				      ios->clock)));
+		if (data)
+			host->data_timeout = (data->blocks *
+					      (timeout_ns +
+					      MMC_BLOCK_TRANSFER_TIME_NS(
+					      data->blksz, ios->bus_width,
+					      ios->clock)));
+		dto = 14;
 	}
 
 out:
-- 
1.7.5.4

