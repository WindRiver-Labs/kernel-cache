From 1b3c202b37495a06741a4229357cbc26d260c739 Mon Sep 17 00:00:00 2001
From: Sandeep Paulraj <s-paulraj@ti.com>
Date: Thu, 29 Nov 2012 15:50:20 -0500
Subject: [PATCH 077/257] hwqueue: keystone: use qos specific push operation

Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>
(cherry picked from commit 3a72ab75b8a46a13d817936a15b5c89dd603dff2)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/hwqueue/keystone_hwqueue_qos.c | 35 ++++++++++++++++++++++++++++++++++
 drivers/hwqueue/keystone_qos.h         |  2 +-
 2 files changed, 36 insertions(+), 1 deletion(-)

diff --git a/drivers/hwqueue/keystone_hwqueue_qos.c b/drivers/hwqueue/keystone_hwqueue_qos.c
index 5cb55c8..8675f3a 100644
--- a/drivers/hwqueue/keystone_hwqueue_qos.c
+++ b/drivers/hwqueue/keystone_hwqueue_qos.c
@@ -3243,6 +3243,39 @@ static int khwq_qos_set_notify(struct khwq_range_info *range,
 	return 0;
 }
 
+static int khwq_qos_push(struct hwqueue_instance *inst, dma_addr_t dma,
+			 unsigned size, unsigned flags)
+{
+	struct khwq_instance *kq = hwqueue_inst_to_priv(inst);
+	struct khwq_range_info *range = kq->range;
+	unsigned id = hwqueue_inst_to_id(inst);
+	struct khwq_qmgr_info *qmgr;
+	struct khwq_pdsp_info *pdsp;
+	struct khwq_qos_info *info;
+	unsigned long irq_flags;
+	u32 val;
+
+	qmgr = khwq_find_qmgr(inst);
+	if (!qmgr)
+		return -ENODEV;
+
+	info = range->qos_info;
+	pdsp = info->pdsp;
+
+	spin_lock_irqsave(&info->lock, irq_flags);
+
+	while(__raw_readl(pdsp->command + QOS_PUSH_PROXY_OFFSET + 0x4));
+	val = (id << 16) | (flags & BITS(17));
+	__raw_writel(val, pdsp->command + QOS_PUSH_PROXY_OFFSET);
+	
+	val = (u32)dma | ((size / 16) - 1);
+	__raw_writel(val, pdsp->command + QOS_PUSH_PROXY_OFFSET + 0x4);
+
+	spin_unlock_irqrestore(&info->lock, irq_flags);
+
+	return 0;
+}
+
 static int khwq_qos_init_range(struct khwq_range_info *range)
 {
 	struct khwq_pdsp_info *pdsp;
@@ -3255,6 +3288,8 @@ static int khwq_qos_init_range(struct khwq_range_info *range)
 	pdsp = info->pdsp;
 	kdev = info->kdev;
 
+	range->inst_ops.push = khwq_qos_push;
+
 	spin_lock_bh(&info->lock);
 
 	magic = __raw_readl(pdsp->command + QOS_MAGIC_OFFSET);
diff --git a/drivers/hwqueue/keystone_qos.h b/drivers/hwqueue/keystone_qos.h
index d44ea48..ec926df 100644
--- a/drivers/hwqueue/keystone_qos.h
+++ b/drivers/hwqueue/keystone_qos.h
@@ -249,7 +249,7 @@ struct khwq_query_stats_regs {
 };
 
 #define QOS_SHADOW_OFFSET	0x40
-#define QOS_PUSH_STATS_OFFSET	0x2e0
+#define QOS_PUSH_PROXY_OFFSET	0x2e0
 #define QOS_STATS_OFFSET	0x300
 #define QOS_MAGIC_OFFSET	0x1ff8
 #define QOS_VERSION_OFFSET	0x1ffc
-- 
2.7.4

