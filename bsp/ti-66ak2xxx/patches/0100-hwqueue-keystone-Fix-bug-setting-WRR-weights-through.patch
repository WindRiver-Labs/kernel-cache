From 4c0727dc3d7cc22b93e850ce6e6e32e99bd23e53 Mon Sep 17 00:00:00 2001
From: "Reece R. Pollack" <x0183204@ti.com>
Date: Thu, 15 May 2014 17:20:22 -0400
Subject: [PATCH 100/257] hwqueue: keystone: Fix bug setting WRR weights
 through sysfs

This patch corrects a bug when changing the WRR weights through
sysfs. This bug affected only the input queues associated with
the odd port of an even/odd port pair.

Signed-off-by: Reece R. Pollack <x0183204@ti.com>
(cherry picked from commit f4ec607a39477880e4b9c360b986a50ac2824b95)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/hwqueue/keystone_hwqueue_qos.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/drivers/hwqueue/keystone_hwqueue_qos.c b/drivers/hwqueue/keystone_hwqueue_qos.c
index 5436ae0..d5812d0 100644
--- a/drivers/hwqueue/keystone_hwqueue_qos.c
+++ b/drivers/hwqueue/keystone_hwqueue_qos.c
@@ -1408,6 +1408,16 @@ static ssize_t qnode_weight_store(struct khwq_qos_tree_node *qnode,
 
 	idx = parent->sched_port_idx;
 	for (i = inputs - 1; i >= 0; --i) {
+		int port, queue;
+
+		if (parent->is_joint_port && (i >= info->inputs_per_port)) {
+			port = khwq_qos_id_odd(idx);
+			queue = i - info->inputs_per_port;
+		} else {
+			port = idx;
+			queue = i;
+		}
+
 		tmp = parent->child_weight[i];
 		tmp *= scale;
 
@@ -1420,7 +1430,7 @@ static ssize_t qnode_weight_store(struct khwq_qos_tree_node *qnode,
 		}
 		val = (u32)(tmp);
 
-		khwq_qos_set_sched_wrr_credit(info, idx, i, val, (i == 0));
+		khwq_qos_set_sched_wrr_credit(info, port, queue, val, (queue == 0));
 	}
 
 	return size;
-- 
2.7.4

