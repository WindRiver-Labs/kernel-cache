From 7a4e31e36687239c96deb178becf9e9764657cb2 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 13 Apr 2015 14:38:16 +0800
Subject: [PATCH 059/257] of/mdio: add context argument to adjust link callback

This patch comes from TI
  git://git.ti.com/keystone-linux/linux.git

And changes to cater for 3.14.x kernel, need to be re-considerated.

e1d4fc9f5555671662456197de5bbfc31823c502

This patch implements extensions to device-tree phy interfaces in order to
have context information passed back into the adjust link callbacks.

Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/of/of_mdio.c    | 20 ++++++++++++++++++++
 include/linux/of_mdio.h | 10 ++++++++++
 2 files changed, 30 insertions(+)

diff --git a/drivers/of/of_mdio.c b/drivers/of/of_mdio.c
index 5b3c24f..6691806 100644
--- a/drivers/of/of_mdio.c
+++ b/drivers/of/of_mdio.c
@@ -206,20 +206,30 @@ EXPORT_SYMBOL(of_phy_find_device);
  * @phy_np: Pointer to device tree node for the PHY
  * @hndlr: Link state callback for the network device
  * @iface: PHY data interface type
+ * @context: Context for callback handler
  *
  * Returns a pointer to the phy_device if successful.  NULL otherwise
  */
 struct phy_device *of_phy_connect(struct net_device *dev,
 				  struct device_node *phy_np,
+#ifdef CONFIG_TI_KEYSTONE
+	       void (*hndlr)(struct net_device *, void *context),
+	       u32 flags, phy_interface_t iface, void *context)
+#else
 				  void (*hndlr)(struct net_device *), u32 flags,
 				  phy_interface_t iface)
+#endif
 {
 	struct phy_device *phy = of_phy_find_device(phy_np);
 
 	if (!phy)
 		return NULL;
 
+#ifdef CONFIG_TI_KEYSTONE
+	return phy_connect_direct(dev, phy, hndlr, iface, context) ? NULL: phy;
+#else
 	return phy_connect_direct(dev, phy, hndlr, iface) ? NULL : phy;
+#endif
 }
 EXPORT_SYMBOL(of_phy_connect);
 
@@ -228,14 +238,20 @@ EXPORT_SYMBOL(of_phy_connect);
  * @dev: pointer to net_device claiming the phy
  * @hndlr: Link state callback for the network device
  * @iface: PHY data interface type
+ * @context: Context for callback handler
  *
  * This function is a temporary stop-gap and will be removed soon.  It is
  * only to support the fs_enet, ucc_geth and gianfar Ethernet drivers.  Do
  * not call this function from new drivers.
  */
 struct phy_device *of_phy_connect_fixed_link(struct net_device *dev,
+#ifdef CONFIG_TI_KEYSTONE
+			  void (*hndlr)(struct net_device *, void *context),
+			  phy_interface_t iface, void *context)
+#else
 					     void (*hndlr)(struct net_device *),
 					     phy_interface_t iface)
+#endif
 {
 	struct device_node *net_np;
 	char bus_id[MII_BUS_ID_SIZE + 3];
@@ -256,7 +272,11 @@ struct phy_device *of_phy_connect_fixed_link(struct net_device *dev,
 
 	sprintf(bus_id, PHY_ID_FMT, "fixed-0", be32_to_cpu(phy_id[0]));
 
+#ifdef CONFIG_TI_KEYSTONE
+	phy = phy_connect(dev, bus_id, hndlr, iface, context);
+#else
 	phy = phy_connect(dev, bus_id, hndlr, iface);
+#endif
 	return IS_ERR(phy) ? NULL : phy;
 }
 EXPORT_SYMBOL(of_phy_connect_fixed_link);
diff --git a/include/linux/of_mdio.h b/include/linux/of_mdio.h
index 6fe8464..db36ce5 100644
--- a/include/linux/of_mdio.h
+++ b/include/linux/of_mdio.h
@@ -15,6 +15,15 @@
 #ifdef CONFIG_OF
 extern int of_mdiobus_register(struct mii_bus *mdio, struct device_node *np);
 extern struct phy_device *of_phy_find_device(struct device_node *phy_np);
+#ifdef CONFIG_TI_KEYSTONE
+extern struct phy_device *
+of_phy_connect(struct net_device *dev, struct device_node *phy_np,
+	       void (*hndlr)(struct net_device *, void *context),
+	       u32 flags, phy_interface_t iface, void *context);
+extern struct phy_device * of_phy_connect_fixed_link(struct net_device *dev,
+			  void (*hndlr)(struct net_device *, void *context),
+			  phy_interface_t iface, void *context);
+#else
 extern struct phy_device *of_phy_connect(struct net_device *dev,
 					 struct device_node *phy_np,
 					 void (*hndlr)(struct net_device *),
@@ -25,6 +34,7 @@ struct phy_device *of_phy_attach(struct net_device *dev,
 extern struct phy_device *of_phy_connect_fixed_link(struct net_device *dev,
 					 void (*hndlr)(struct net_device *),
 					 phy_interface_t iface);
+#endif
 
 extern struct mii_bus *of_mdio_find_bus(struct device_node *mdio_np);
 
-- 
2.7.4

