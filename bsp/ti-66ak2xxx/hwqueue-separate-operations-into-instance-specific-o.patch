From 81887fc6bc128c85f187e344889096a154872283 Mon Sep 17 00:00:00 2001
From: Sandeep Paulraj <s-paulraj@ti.com>
Date: Thu, 29 Nov 2012 15:49:33 -0500
Subject: [PATCH 060/256] hwqueue: separate operations into instance specific
 operations

Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>
(cherry picked from commit 66dc32ec5875e8c5dab8ffd084161fef1822fbe1)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/hwqueue/hwqueue_core.c     |   24 ++++++++++++------------
 drivers/hwqueue/hwqueue_internal.h |    3 +++
 include/linux/hwqueue.h            |    6 +++---
 3 files changed, 18 insertions(+), 15 deletions(-)

diff --git a/drivers/hwqueue/hwqueue_core.c b/drivers/hwqueue/hwqueue_core.c
index ec7e66c..c6d3d54 100644
--- a/drivers/hwqueue/hwqueue_core.c
+++ b/drivers/hwqueue/hwqueue_core.c
@@ -101,7 +101,7 @@ int hwqueue_device_register(struct hwqueue_device *hdev)
 	int id, size, ret = -EEXIST;
 	struct hwqueue_device *b;
 
-	if (!hdev->ops || !hdev->dev || !hdev->ops->push || !hdev->ops->pop)
+	if (!hdev->ops || !hdev->dev)
 		return -EINVAL;
 
 	mutex_lock(&hwqueue_devices_lock);
@@ -205,15 +205,15 @@ static struct hwqueue *__hwqueue_open(struct hwqueue_instance *inst,
 	}
 
 	if (hwqueue_is_readable(qh)) {
-		qh->get_count	= hdev->ops->get_count;
-		qh->pop		= hdev->ops->pop;
-		qh->unmap	= hdev->ops->unmap;
+		qh->get_count	= inst->ops->get_count;
+		qh->pop		= inst->ops->pop;
+		qh->unmap	= inst->ops->unmap;
 	}
 
 	if (hwqueue_is_writable(qh)) {
-		qh->flush	= hdev->ops->flush;
-		qh->push	= hdev->ops->push;
-		qh->map		= hdev->ops->map;
+		qh->flush	= inst->ops->flush;
+		qh->push	= inst->ops->push;
+		qh->map		= inst->ops->map;
 	}
 
 	list_add_tail_rcu(&qh->list, &inst->handles);
@@ -577,10 +577,10 @@ int hwqueue_set_notifier(struct hwqueue *qh, hwqueue_notify_fn fn,
 }
 EXPORT_SYMBOL(hwqueue_set_notifier);
 
-dma_addr_t __hwqueue_pop_slow(struct hwqueue_instance *inst, unsigned *size,
-			 struct timeval *timeout, unsigned flags)
+dma_addr_t __hwqueue_pop_slow(struct hwqueue *qh, unsigned *size,
+			      struct timeval *timeout, unsigned flags)
 {
-	struct hwqueue_device *hdev = inst->hdev;
+	struct hwqueue_instance *inst = qh->inst;
 	dma_addr_t dma_addr = 0;
 	int ret;
 
@@ -588,7 +588,7 @@ dma_addr_t __hwqueue_pop_slow(struct hwqueue_instance *inst, unsigned *size,
 		unsigned long expires = timeval_to_jiffies(timeout);
 
 		ret = wait_event_interruptible_timeout(inst->wait,
-				(dma_addr = hdev->ops->pop(inst, size, flags)),
+				(dma_addr = qh->pop(inst, size, flags)),
 				expires);
 		if (ret < 0)
 			return 0;
@@ -597,7 +597,7 @@ dma_addr_t __hwqueue_pop_slow(struct hwqueue_instance *inst, unsigned *size,
 		jiffies_to_timeval(ret, timeout);
 	} else {
 		ret = wait_event_interruptible(inst->wait,
-				(dma_addr = hdev->ops->pop(inst, size, flags)));
+				(dma_addr = qh->pop(inst, size, flags)));
 		if (ret < 0)
 			return 0;
 		if (WARN_ON(!ret && !dma_addr))
diff --git a/drivers/hwqueue/hwqueue_internal.h b/drivers/hwqueue/hwqueue_internal.h
index 0c2cd07..ce99b54 100644
--- a/drivers/hwqueue/hwqueue_internal.h
+++ b/drivers/hwqueue/hwqueue_internal.h
@@ -32,6 +32,7 @@ struct hwqueue_instance {
 	void			*priv;
 	char			 name[32];
 	atomic_t		 num_notifiers;
+	struct hwqueue_inst_ops	*ops;
 };
 
 struct hwqueue_device_ops {
@@ -52,7 +53,9 @@ struct hwqueue_device_ops {
 
 	/* Get a hardware identifier for a queue */
 	int	 (*get_hw_id)(struct hwqueue_instance *inst);
+};
 
+struct hwqueue_inst_ops {
 	/* Push something into the queue */
 	int	 (*push)(struct hwqueue_instance *inst, dma_addr_t dma,
 			 unsigned size, unsigned flags);
diff --git a/include/linux/hwqueue.h b/include/linux/hwqueue.h
index 586a606..3b4e3f2 100644
--- a/include/linux/hwqueue.h
+++ b/include/linux/hwqueue.h
@@ -85,8 +85,8 @@ int hwqueue_enable_notifier(struct hwqueue *queue);
 
 int hwqueue_disable_notifier(struct hwqueue *queue);
 
-dma_addr_t __hwqueue_pop_slow(struct hwqueue_instance *inst, unsigned *size,
-			 struct timeval *timeout, unsigned flags);
+dma_addr_t __hwqueue_pop_slow(struct hwqueue *qh, unsigned *size,
+			      struct timeval *timeout, unsigned flags);
 
 /**
  * hwqueue_get_count() - poll a hardware queue and check if empty
@@ -173,7 +173,7 @@ static inline dma_addr_t hwqueue_pop(struct hwqueue *qh, unsigned *size,
 			   (timeout && !timeout->tv_sec && !timeout->tv_usec)))
 			break;
 
-		ret = __hwqueue_pop_slow(qh->inst, size, timeout, flags);
+		ret = __hwqueue_pop_slow(qh, size, timeout, flags);
 	} while (0);
 
 	if (likely(ret)) {
-- 
1.7.5.4

