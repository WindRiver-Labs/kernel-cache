From 5caac96071ba791b8b995cdb3d469cca7e92ba96 Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Thu, 1 Sep 2016 15:57:32 -0400
Subject: [PATCH 296/347] phy: keystone: fix async abort during probe on k2g
 soc

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

SerDes is part of the peripheral device. With recent change to the
keystone SerDes driver, the phy provider may get initialized
before the peripheral device to which SerDes is part of. So it
needs the associated peripheral to be powered and clocked before
initialization can happen. Without this, an async abort is seen as
below during probe due to peripheral registers not accessible when
register writes happens.

[    0.759672] ti,keystone-serdes 2320000.phy: init fw ks2_pcie_serdes.bin:
version 3.3.0.2c
[    0.768099] Unhandled fault: asynchronous external abort (0x211) at
0x00000000
[    0.775455] pgd = c0003000
[    0.778261] [00000000] *pgd=80000800004003, *pmd=00000000
[    0.783791] Internal error: : 211 [#1] PREEMPT ARM
[    0.788697] Modules linked in:
[    0.791862] CPU: 0 PID: 1 Comm: swapper Not tainted 4.4.19-02872-g3b233bc #13
[    0.799130] Hardware name: Keystone
[    0.802726] task: de050000 ti: de04e000 task.ti: de04e000
[    0.808255] PC is at kserdes_load_init_fw.constprop.3+0x194/0x1d0
[    0.814477] LR is at kserdes_load_init_fw.constprop.3+0x180/0x1d0
[    0.820697] pc : [<c02c6768>]    lr : [<c02c6754>]    psr: 60000013
[    0.820697] sp : de04fcb0  ip : 00000008  fp : de04fd24
[    0.832427] r10: de17f410  r9 : de0d3010  r8 : ffffffff
[    0.837771] r7 : f0888000  r6 : 00000000  r5 : de00bae0  r4 : de00b010
[    0.844426] r3 : f0888000  r2 : 00000000  r1 : 60000013  r0 : de1a4c80
[    0.851084] Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment
kernel
[    0.858527] Control: 30c53c7d  Table: 00003000  DAC: fffffffd
[    0.864396] Process swapper (pid: 1, stack limit = 0xde04e208)

This patch fixes this by adding support for clock enable through
runtime PM API calls during serdes driver probe. Also add functional
clock for serdes DT node for various peripheral devices using the
serdes.

Fixes: 762fc5d069b8 ("ARM: dts: keystone: update SerDes bindings for one PHY per
lan")
Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
Signed-off-by: Jacob Stiffler <j-stiffler@ti.com>

(cherry picked from commit c9c2efa1c4c030d8bce9a858aea83c24e12ca8cc)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/boot/dts/keystone-k2g.dtsi |    8 ++++++++
 drivers/phy/phy-keystone-serdes.c   |   22 +++++++++++++++++++---
 2 files changed, 27 insertions(+), 3 deletions(-)

diff --git a/arch/arm/boot/dts/keystone-k2g.dtsi b/arch/arm/boot/dts/keystone-k2g.dtsi
index 45faf40..c784aed 100644
--- a/arch/arm/boot/dts/keystone-k2g.dtsi
+++ b/arch/arm/boot/dts/keystone-k2g.dtsi
@@ -893,11 +893,19 @@
 			link-rate-kbps = <5000000>;
 			num-lanes = <1>;
 			status = "disabled";
+			#address-cells  = <1>;
+			#size-cells     = <0>;
 
 			power-domains = <&k2g_pds K2G_DEV_PCIE0>;
 			clocks = <&k2g_clks
 					K2G_DEV_PCIE0 K2G_DEV_PCIE_VBUS_CLK>;
 			clock-names = "fck";
+
+			pciserdes0_lane0: lane@0 {
+				status		= "ok";
+				#phy-cells	= <0>;
+				reg		= <0>;
+			};
 		};
 
 		pcie0: pcie@21800000 {
diff --git a/drivers/phy/phy-keystone-serdes.c b/drivers/phy/phy-keystone-serdes.c
index 092f3c5..089142a 100644
--- a/drivers/phy/phy-keystone-serdes.c
+++ b/drivers/phy/phy-keystone-serdes.c
@@ -2474,21 +2474,37 @@ static int kserdes_probe(struct platform_device *pdev)
 	if (!sd)
 		return -ENOMEM;
 
+	pm_runtime_enable(dev);
+	ret = pm_runtime_get_sync(dev);
+	if (ret < 0) {
+		dev_err(dev, "pm_runtime_get_sync failed\n");
+		goto err_get_sync;
+	}
+
 	sd->dev = dev;
 	dev_set_drvdata(dev, sd);
 
 	ret = kserdes_of_parse(pdev, sd, np);
 	if (ret)
-		return ret;
+		goto err_of_parse;
 
 	phy_provider = devm_of_phy_provider_register(sd->dev, kserdes_xlate);
-	if (IS_ERR(phy_provider))
-		return PTR_ERR_OR_ZERO(phy_provider);
+	if (IS_ERR(phy_provider)) {
+		ret =  PTR_ERR_OR_ZERO(phy_provider);
+		goto err_of_parse;
+	}
 
 	kserdes_provider_init(sd);
 
 	dev_vdbg(&pdev->dev, "probed");
 	return 0;
+
+err_of_parse:
+	pm_runtime_put(dev);
+
+err_get_sync:
+	pm_runtime_disable(dev);
+	return ret;
 }
 
 static struct platform_driver kserdes_driver = {
-- 
1.7.5.4

