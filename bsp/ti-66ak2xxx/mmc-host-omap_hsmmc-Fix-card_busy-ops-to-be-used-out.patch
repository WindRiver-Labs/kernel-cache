From 8ac3c86dc14a2853ee3c658acf22bc6e5f0dad18 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 17 Apr 2017 14:46:26 +0800
Subject: [PATCH 134/347] mmc: host: omap_hsmmc: Fix card_busy ops to be used
 outside of voltage switching

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

card_busy ops in omap hsmmc is implemented for the voltage switching
sequence. commit 5d3f6ef04d65dda92 ("mmc: Wait for card_busy before
starting sdio requests") started invoking card_busy ops outside
the voltage switching sequence resulting in spurious "card busy"
prints. Fix it here by making card_busy ops to be used both during
voltage switching and outside of voltage switching sequence.

Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
(cherry picked from commit 5fdb9d95a7724656543cb3b58a554bd8fedd9cf6)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/mmc/host/omap_hsmmc.c |   21 +++++++++++++++++++++
 1 files changed, 21 insertions(+), 0 deletions(-)

diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
index 3f85673..d78766a 100644
--- a/drivers/mmc/host/omap_hsmmc.c
+++ b/drivers/mmc/host/omap_hsmmc.c
@@ -45,6 +45,7 @@
 #include <linux/pm_runtime.h>
 #include <linux/pm_wakeirq.h>
 #include <linux/platform_data/hsmmc-omap.h>
+#include <linux/mmc/sd.h>
 
 /* OMAP HSMMC Host Controller Registers */
 #define OMAP_HSMMC_SYSSTATUS	0x0014
@@ -182,6 +183,7 @@
 #define CON_PADEN		(1 << 15)
 #define PSTATE_CLEV		(1 << 24)
 #define PSTATE_DLEV		(0xF << 20)
+#define PSTATE_DLEV_DAT0	(0x1 << 20)
 
 #define MMC_BLOCK_TRANSFER_TIME_NS(blksz, bus_width, freq)		\
 				   ((unsigned long long)		\
@@ -214,6 +216,7 @@ struct omap_hsmmc_host {
 	struct	mmc_host	*mmc;
 	struct	mmc_request	*mrq;
 	struct	mmc_command	*cmd;
+	u32			last_cmd;
 	struct	mmc_data	*data;
 	struct	clk		*fclk;
 	struct	clk		*dbclk;
@@ -1016,6 +1019,7 @@ omap_hsmmc_start_command(struct omap_hsmmc_host *host, struct mmc_command *cmd,
 		cmdreg |= DMAE;
 
 	host->req_in_progress = 1;
+	host->last_cmd = cmd->opcode;
 
 	OMAP_HSMMC_WRITE(host->base, ARG, cmd->arg);
 	OMAP_HSMMC_WRITE(host->base, CMD, cmdreg);
@@ -2104,10 +2108,27 @@ static int omap_hsmmc_card_busy(struct mmc_host *mmc)
 {
 	struct omap_hsmmc_host *host;
 	u32 val;
+	u32 reg;
 	int ret;
 
 	host  = mmc_priv(mmc);
 
+	if (host->last_cmd != SD_SWITCH_VOLTAGE) {
+		/*
+		 * PADEN should be set for DLEV to reflect the correct
+		 * state of data lines atleast for MMC1 on AM57x.
+		 */
+		reg = OMAP_HSMMC_READ(host->base, CON);
+		reg |= CON_PADEN;
+		OMAP_HSMMC_WRITE(host->base, CON, reg);
+		val = OMAP_HSMMC_READ(host->base, PSTATE);
+		reg &= ~CON_PADEN;
+		OMAP_HSMMC_WRITE(host->base, CON, reg);
+		if (val & PSTATE_DLEV_DAT0)
+			return false;
+		return true;
+	}
+
 	val = OMAP_HSMMC_READ(host->base, AC12);
 	if (val & AC12_V1V8_SIGEN)
 		ret = omap_hsmmc_card_busy_high(host);
-- 
1.7.5.4

