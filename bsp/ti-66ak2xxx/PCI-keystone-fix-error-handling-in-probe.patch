From 02d1622a9134b8c8e8e5fb125faba285f53fd310 Mon Sep 17 00:00:00 2001
From: Sekhar Nori <nsekhar@ti.com>
Date: Fri, 11 Mar 2016 03:08:21 +0000
Subject: [PATCH 056/347] PCI: keystone: fix error handling in probe()

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

ks_pcie_probe() causes a kernel crash if it fails
to find the serdes phy because it calls phy_exit()
on an non-exising phy.

Fix it. While at it, also fix return value when
devm_of_phy_get() fails.

Signed-off-by: Sekhar Nori <nsekhar@ti.com>
(cherry picked from commit 36faffa1ec5b5791abf1c2afdeb408ca81f5030f)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/pci/host/pci-keystone.c |   12 +++++++-----
 1 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/pci/host/pci-keystone.c b/drivers/pci/host/pci-keystone.c
index fd4f9ca..f697c66 100644
--- a/drivers/pci/host/pci-keystone.c
+++ b/drivers/pci/host/pci-keystone.c
@@ -411,8 +411,9 @@ static int __init ks_pcie_probe(struct platform_device *pdev)
 
 	ks_pcie->serdes_phy = devm_of_phy_get(dev, node, NULL);
 	if (IS_ERR(ks_pcie->serdes_phy)) {
-		dev_err(dev, "No %s serdes driver found: %ld\n",
-			node->name, PTR_ERR(ks_pcie->serdes_phy));
+		ret = PTR_ERR(ks_pcie->serdes_phy);
+		dev_err(dev, "No %s serdes driver found: %d\n",
+			node->name, ret);
 		goto fail_clk;
 	}
 
@@ -422,13 +423,14 @@ static int __init ks_pcie_probe(struct platform_device *pdev)
 
 	ret = ks_add_pcie_port(ks_pcie, pdev);
 	if (ret < 0)
-		goto fail_clk;
+		goto fail_phy;
 
 	return 0;
-fail_clk:
-	clk_disable_unprepare(ks_pcie->clk);
 
+fail_phy:
 	phy_exit(ks_pcie->serdes_phy);
+fail_clk:
+	clk_disable_unprepare(ks_pcie->clk);
 	return ret;
 }
 
-- 
1.7.5.4

