From f0d7a9a776f007ec3284366cb4ca509a74f412c6 Mon Sep 17 00:00:00 2001
From: Sam Nelson <sam.nelson@ti.com>
Date: Wed, 3 Jul 2013 18:04:30 -0400
Subject: [PATCH 211/256] remoteproc: undo earlier patch to avoid dead lock

The following patch was originally applied to avoid
a dead lock issue.
(remoteproc: TEMPORARY: fix to avoid deadlock)
The original problem is now resolved using changes
remoteproc_core.c. And hence no longer required.

Signed-off-by: Sam Nelson <sam.nelson@ti.com>
(cherry picked from commit 4d4f13a365ba6fe52206a1bcd17c9b235104d885)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/remoteproc/remoteproc_virtio.c |    4 ----
 1 files changed, 0 insertions(+), 4 deletions(-)

diff --git a/drivers/remoteproc/remoteproc_virtio.c b/drivers/remoteproc/remoteproc_virtio.c
index 103f0b1..80aaf3e 100644
--- a/drivers/remoteproc/remoteproc_virtio.c
+++ b/drivers/remoteproc/remoteproc_virtio.c
@@ -156,9 +156,7 @@ static int rproc_virtio_find_vqs(struct virtio_device *vdev, unsigned nvqs,
 		       vq_callback_t *callbacks[],
 		       const char *names[])
 {
-#if 0
 	struct rproc *rproc = vdev_to_rproc(vdev);
-#endif
 	int i, ret;
 
 	for (i = 0; i < nvqs; ++i) {
@@ -169,14 +167,12 @@ static int rproc_virtio_find_vqs(struct virtio_device *vdev, unsigned nvqs,
 		}
 	}
 
-#if 0
 	/* now that the vqs are all set, boot the remote processor */
 	ret = rproc_boot(rproc);
 	if (ret) {
 		dev_err(&rproc->dev, "rproc_boot() failed %d\n", ret);
 		goto error;
 	}
-#endif
 	return 0;
 
 error:
-- 
1.7.5.4

