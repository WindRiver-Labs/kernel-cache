From 25fd115736e3284e7f531b7ddbb42b29c5442f43 Mon Sep 17 00:00:00 2001
From: Ravikumar Kattekola <rk@ti.com>
Date: Wed, 19 Oct 2016 14:10:18 +0530
Subject: [PATCH 147/347] mmc: host: omap_hsmmc: disable DEB interrupt during
 tuning

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

When clock tuning is in progress for high speed operation
it's expected that there may be data related failures
such as DEB because clk-data lines go out of sync
so do not act upon such errors.
A simple way to avoid acting upon DEB error is to just
disable the event altogether.

This finding will be reflected in future revisions of TRM.

Reviewed-by: Kishon Vijay Abraham I <kishon@ti.com>
Signed-off-by: Ravikumar Kattekola <rk@ti.com>
[nsekhar@ti.com: drop stray empty line]
Signed-off-by: Sekhar Nori <nsekhar@ti.com>

(cherry picked from commit 1c610e323aac5423dca2f3d0f872e08461ddb613)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/mmc/host/omap_hsmmc.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
index eea1fa3..110d25a 100644
--- a/drivers/mmc/host/omap_hsmmc.c
+++ b/drivers/mmc/host/omap_hsmmc.c
@@ -291,6 +291,7 @@ struct omap_hsmmc_host {
 
 	struct timer_list	timer;
 	unsigned long long	data_timeout;
+	bool			is_tuning;
 
 	struct pinctrl		*pinctrl;
 	struct pinctrl_state	*pinctrl_state;
@@ -685,19 +686,15 @@ static void omap_hsmmc_enable_irq(struct omap_hsmmc_host *host,
 {
 	u32 irq_mask = INT_EN_MASK;
 	unsigned long flags;
-	bool is_tuning;
 
-	is_tuning = cmd && ((cmd->opcode == MMC_SEND_TUNING_BLOCK) ||
-		    (cmd->opcode == MMC_SEND_TUNING_BLOCK_HS200));
-
-	if (is_tuning)
+	if (host->is_tuning)
 		/*
 		 * OMAP5/DRA74X/DRA72x Errata i802:
 		 * DCRC error interrupts (MMCHS_STAT[21] DCRC=0x1) can occur
 		 * during the tuning procedure. So disable it during the
 		 * tuning procedure.
 		 */
-		irq_mask &= ~DCRC_EN;
+		irq_mask &= ~(DCRC_EN | DEB_EN);
 
 	/* BRR and BWR need not be enabled for DMA */
 	irq_mask &= ~(BRR_EN | BWR_EN);
@@ -2373,11 +2370,12 @@ static int omap_hsmmc_execute_tuning(struct mmc_host *mmc, u32 opcode)
 	val |= DLL_SWT;
 	OMAP_HSMMC_WRITE(host->base, DLL, val);
 
+	host->is_tuning =  true;
+
 	while (phase_delay <= MAX_PHASE_DELAY) {
 		omap_hsmmc_set_dll(host, phase_delay);
 
 		cur_match = !mmc_send_tuning(mmc, opcode, NULL);
-
 		if (cur_match) {
 			if (prev_match) {
 				length++;
@@ -2396,6 +2394,8 @@ static int omap_hsmmc_execute_tuning(struct mmc_host *mmc, u32 opcode)
 		phase_delay += 4;
 	}
 
+	host->is_tuning = false;
+
 	if (!max_len) {
 		dev_err(mmc_dev(host->mmc), "Unable to find match\n");
 		ret = -EIO;
-- 
1.7.5.4

