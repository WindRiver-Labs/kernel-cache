From 183706b073e6a233a4eae5fcc2ecdff96f945332 Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Wed, 19 Oct 2016 16:00:24 -0400
Subject: [PATCH 272/347] net: netcp: add support for rgmii modes with
 internal delay

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

When a phy with rgmii interface requires internal delay, the
same is set in the phy driver. To support such phy devices, add
a phy-mode handling code in the driver using of_get_phy_mode()
and pass the obtained phy mode to of_phy_connect()

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
(cherry picked from commit 49343015a33988ea859b8e84ab6b0b5ba6cb7058)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/ti/netcp_ethss.c |    9 ++++++++-
 drivers/net/ethernet/ti/netcp_ethss.h |    1 +
 2 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/ti/netcp_ethss.c b/drivers/net/ethernet/ti/netcp_ethss.c
index cba1d2b..9302efa 100644
--- a/drivers/net/ethernet/ti/netcp_ethss.c
+++ b/drivers/net/ethernet/ti/netcp_ethss.c
@@ -22,6 +22,7 @@
 #include <linux/mfd/syscon.h>
 #include <linux/module.h>
 #include <linux/of_mdio.h>
+#include <linux/of_net.h>
 #include <linux/of_address.h>
 #include <linux/regmap.h>
 #include <linux/if_vlan.h>
@@ -2235,7 +2236,12 @@ static int gbe_slave_open(struct gbe_intf *gbe_intf)
 		slave->phy_port_t = PORT_MII;
 	} else if (slave->link_interface == RGMII_LINK_MAC_PHY) {
 		has_phy = true;
-		phy_mode = PHY_INTERFACE_MODE_RGMII;
+		phy_mode = of_get_phy_mode(slave->node);
+		/* if phy-mode is not present, default to
+		 * PHY_INTERFACE_MODE_RGMII
+		 */
+		if (phy_mode < 0)
+			phy_mode = PHY_INTERFACE_MODE_RGMII;
 		slave->phy_port_t = PORT_MII;
 	} else if (slave->link_interface == XGMII_LINK_MAC_PHY) {
 		has_phy = true;
@@ -2961,6 +2967,7 @@ static int init_slave(struct gbe_priv *gbe_dev, struct gbe_slave *slave,
 	}
 
 	slave->gbe_dev = gbe_dev;
+	slave->node = node;
 	slave->open = false;
 	if ((slave->link_interface == SGMII_LINK_MAC_PHY) ||
 	    (slave->link_interface == RGMII_LINK_MAC_PHY) ||
diff --git a/drivers/net/ethernet/ti/netcp_ethss.h b/drivers/net/ethernet/ti/netcp_ethss.h
index dfea55b..f50c2d2 100644
--- a/drivers/net/ethernet/ti/netcp_ethss.h
+++ b/drivers/net/ethernet/ti/netcp_ethss.h
@@ -171,6 +171,7 @@ struct gbe_slave {
 					/* 0:NOT, > 0:recovering */
 	u32				link_recovering;
 	struct delayed_work		link_recover_work;
+	struct device_node		*node;
 	struct device_node		*phy_node;
 	struct ts_ctl			ts_ctl;
 	struct list_head		slave_list;
-- 
1.7.5.4

