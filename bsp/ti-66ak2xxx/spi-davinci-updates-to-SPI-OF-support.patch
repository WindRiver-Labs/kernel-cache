From 2f65116734aba486740c6e264654bf108ef10ccd Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Fri, 17 Apr 2015 10:08:14 +0800
Subject: [PATCH 141/256] spi: davinci: updates to SPI OF support

This adds OF support to DaVinci SPI controller to configure platform
data through device bindings.

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../devicetree/bindings/spi/spi-davinci.txt        |   10 +++++-----
 drivers/spi/spi-davinci.c                          |   16 +++++++++++-----
 2 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/Documentation/devicetree/bindings/spi/spi-davinci.txt b/Documentation/devicetree/bindings/spi/spi-davinci.txt
index 6d0ac8d..b0a2516 100644
--- a/Documentation/devicetree/bindings/spi/spi-davinci.txt
+++ b/Documentation/devicetree/bindings/spi/spi-davinci.txt
@@ -5,8 +5,8 @@ Required properties:
 	address on the SPI bus. Should be set to 1.
 - #size-cells: should be zero.
 - compatible:
-	- "ti,dm6441-spi" for SPI used similar to that on DM644x SoC family
-	- "ti,da830-spi" for SPI used similar to that on DA8xx SoC family
+	- "ti,davinci-spi-v1" for SPI version 1.0
+	- "ti,davinci-spi-v2" for SPI version 2.0
 - reg: Offset and length of SPI controller register space
 - num-cs: Number of chip selects
 - ti,davinci-spi-intr-line: interrupt line used to connect the SPI
@@ -14,7 +14,7 @@ Required properties:
 	are 0 and 1. Manual says one of the two possible interrupt
 	lines can be tied to the interrupt controller. Set this
 	based on a specifc SoC configuration.
-- interrupts: interrupt number mapped to CPU.
+- interrupts: interrupt number offset at the irq parent
 - clocks: spi clk phandle
 
 Example of a NOR flash slave device (n25q032) connected to DaVinci
@@ -23,9 +23,9 @@ SPI controller device over the SPI bus.
 spi0:spi@20BF0000 {
 	#address-cells			= <1>;
 	#size-cells			= <0>;
-	compatible			= "ti,dm6446-spi";
+	compatible			= "ti,davinci-spi-v1";
 	reg				= <0x20BF0000 0x1000>;
-	num-cs				= <4>;
+	ti,davinci-spi-num-cs		= <4>;
 	ti,davinci-spi-intr-line	= <0>;
 	interrupts			= <338>;
 	clocks				= <&clkspi>;
diff --git a/drivers/spi/spi-davinci.c b/drivers/spi/spi-davinci.c
index 5e7389f..a0946d0 100644
--- a/drivers/spi/spi-davinci.c
+++ b/drivers/spi/spi-davinci.c
@@ -29,6 +29,7 @@
 #include <linux/dma-mapping.h>
 #include <linux/edma.h>
 #include <linux/of.h>
+#include <linux/of_irq.h>
 #include <linux/of_device.h>
 #include <linux/spi/spi.h>
 #include <linux/spi/spi_bitbang.h>
@@ -772,10 +773,10 @@ rx_dma_failed:
 #if defined(CONFIG_OF)
 static const struct of_device_id davinci_spi_of_match[] = {
 	{
-		.compatible = "ti,dm6441-spi",
+		.compatible = "ti,davinci-spi-v1",
 	},
 	{
-		.compatible = "ti,da830-spi",
+		.compatible = "ti,davinci-spi-v2",
 		.data = (void *)SPI_VERSION_2,
 	},
 	{ },
@@ -817,7 +818,7 @@ static int spi_davinci_get_pdata(struct platform_device *pdev,
 	 * supported yet in DT bindings.
 	 */
 	num_cs = 1;
-	of_property_read_u32(node, "num-cs", &num_cs);
+	of_property_read_u32(node, "ti,davinci-spi-num-cs", &num_cs);
 	pdata->num_chipselect = num_cs;
 	of_property_read_u32(node, "ti,davinci-spi-intr-line", &intr_line);
 	pdata->intr_line = intr_line;
@@ -897,9 +898,14 @@ static int davinci_spi_probe(struct platform_device *pdev)
 	}
 
 	dspi->irq = platform_get_irq(pdev, 0);
+
 	if (dspi->irq <= 0) {
-		ret = -EINVAL;
-		goto free_master;
+		dspi->irq = irq_of_parse_and_map(pdev->dev.of_node, 0);
+
+		if (dspi->irq <= 0) {
+			ret = -EINVAL;
+			goto free_master;
+		}
 	}
 
 	ret = devm_request_threaded_irq(&pdev->dev, dspi->irq, davinci_spi_irq,
-- 
1.7.5.4

