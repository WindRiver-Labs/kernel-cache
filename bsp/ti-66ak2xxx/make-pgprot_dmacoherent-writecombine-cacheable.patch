From c5de26fad2be2fa17a1ca52ee3a39643b06caf7a Mon Sep 17 00:00:00 2001
From: Vitaly Andrianov <vitalya@ti.com>
Date: Mon, 13 May 2013 12:59:31 -0400
Subject: [PATCH 129/256] make pgprot_dmacoherent/writecombine cacheable

This patch comes from:
  git://git.ti.com/keystone-linux/linux.git

The original pgprot_writecombine and pgprot_dmacoherent definitions use
L_PTE_MT_BUFFERABLE memory attribute. That makes memory non-cachaeble.
Keytone2 architecture has hardware support for cache coherency and it is more
efficient to make dma memory cacheable.

Signed-off-by: Vitaly Andrianov <vitalya@ti.com>
(cherry picked from commit 3b1d45efaa28e1da8f843236992db0fa1cc026e0)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/include/asm/pgtable.h |   11 ++++++++++-
 1 files changed, 10 insertions(+), 1 deletions(-)

diff --git a/arch/arm/include/asm/pgtable.h b/arch/arm/include/asm/pgtable.h
index 7d59b52..e0cf542 100644
--- a/arch/arm/include/asm/pgtable.h
+++ b/arch/arm/include/asm/pgtable.h
@@ -116,15 +116,24 @@ extern pgprot_t		pgprot_s2_device;
 #define pgprot_noncached(prot) \
 	__pgprot_modify(prot, L_PTE_MT_MASK, L_PTE_MT_UNCACHED)
 
+#ifdef CONFIG_KEYSTONE2_DMA_COHERENT
+#define pgprot_writecombine(prot) \
+	__pgprot_modify(prot, L_PTE_MT_MASK, L_PTE_MT_WRITEALLOC)
+#else
 #define pgprot_writecombine(prot) \
 	__pgprot_modify(prot, L_PTE_MT_MASK, L_PTE_MT_BUFFERABLE)
-
+#endif
 #define pgprot_stronglyordered(prot) \
 	__pgprot_modify(prot, L_PTE_MT_MASK, L_PTE_MT_UNCACHED)
 
 #ifdef CONFIG_ARM_DMA_MEM_BUFFERABLE
+#ifdef CONFIG_KEYSTONE2_DMA_COHERENT
+#define pgprot_dmacoherent(prot) \
+	__pgprot_modify(prot, L_PTE_MT_MASK, L_PTE_MT_WRITEALLOC | L_PTE_XN)
+#else
 #define pgprot_dmacoherent(prot) \
 	__pgprot_modify(prot, L_PTE_MT_MASK, L_PTE_MT_BUFFERABLE | L_PTE_XN)
+#endif
 #define __HAVE_PHYS_MEM_ACCESS_PROT
 struct file;
 extern pgprot_t phys_mem_access_prot(struct file *file, unsigned long pfn,
-- 
1.7.5.4

