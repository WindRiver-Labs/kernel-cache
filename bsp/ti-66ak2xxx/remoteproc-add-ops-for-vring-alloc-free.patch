From f29cc815ca78e15d025c1b920795d3b7a048ea64 Mon Sep 17 00:00:00 2001
From: Cyril Chemparathy <cyril@ti.com>
Date: Tue, 11 Dec 2012 08:10:35 -0500
Subject: [PATCH 202/256] remoteproc: add ops for vring alloc/free

This patch adds ops callouts to alloc/free vring memory.  This is necessary on
platforms on which vring memory may need to be ioremapped for CPU access.
(cherry picked from commit 6cd0a7821634804f3c598aa788d3872dfbddcb15)

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/remoteproc/remoteproc_core.c |   11 +++++++++--
 include/linux/remoteproc.h           |    4 ++++
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/drivers/remoteproc/remoteproc_core.c b/drivers/remoteproc/remoteproc_core.c
index 69a5a80..b6fae8c 100644
--- a/drivers/remoteproc/remoteproc_core.c
+++ b/drivers/remoteproc/remoteproc_core.c
@@ -206,7 +206,10 @@ int rproc_alloc_vring(struct rproc_vdev *rvdev, int i)
 	 * Allocate non-cacheable memory for the vring. In the future
 	 * this call will also configure the IOMMU for us
 	 */
-	va = dma_alloc_coherent(dev->parent, size, &dma, GFP_KERNEL);
+	if (rproc->ops->alloc)
+		va = rproc->ops->alloc(dev->parent, size, &dma, GFP_KERNEL);
+	else
+		va = dma_alloc_coherent(dev->parent, size, &dma, GFP_KERNEL);
 	if (!va) {
 		dev_err(dev->parent, "dma_alloc_coherent failed\n");
 		return -EINVAL;
@@ -281,8 +284,12 @@ void rproc_free_vring(struct rproc_vring *rvring)
 	struct rproc *rproc = rvring->rvdev->rproc;
 	int idx = rvring->rvdev->vring - rvring;
 	struct fw_rsc_vdev *rsc;
+	struct device *dev = rproc->dev.parent;
 
-	dma_free_coherent(rproc->dev.parent, size, rvring->va, rvring->dma);
+	if (rproc->ops->free)
+		rproc->ops->free(dev, size, rvring->va, rvring->dma);
+	else
+		dma_free_coherent(dev, size, rvring->va, rvring->dma);
 	idr_remove(&rproc->notifyids, rvring->notifyid);
 
 	/* reset resource entry info */
diff --git a/include/linux/remoteproc.h b/include/linux/remoteproc.h
index 9e7e745..c060c34 100644
--- a/include/linux/remoteproc.h
+++ b/include/linux/remoteproc.h
@@ -335,6 +335,10 @@ struct rproc_ops {
 	int (*start)(struct rproc *rproc);
 	int (*stop)(struct rproc *rproc);
 	void (*kick)(struct rproc *rproc, int vqid);
+	void *(*alloc)(struct device *dev, size_t size, dma_addr_t *handle,
+		       gfp_t gfp);
+	void (*free)(struct device *dev, size_t size, void *cpu,
+		     dma_addr_t handle);
 };
 
 /**
-- 
1.7.5.4

