From 1812c91c62014f38f3c6dc1c1b6d27ad9f6f1f03 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 13 Mar 2017 23:02:48 +0800
Subject: [PATCH 2/2] mach-keystone: mark dma_mask with kmemleak_ignore()

The dma_mask gets caught by kmemleak with the following:

  unreferenced object 0xed80ad80 (size 64):
  comm "swapper/0", pid 1, jiffies 4294937380 (age 170.980s)
  hex dump (first 32 bytes):
    ff ff ff 7f 08 00 00 00 00 00 00 00 00 00 00 00 ................
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
  backtrace:
    [<c012909c>] kmem_cache_alloc_trace+0x194/0x278
    [<c00221d4>] keystone_platform_notifier+0x34/0xc8
    [<c06f8bfc>] notifier_call_chain+0x50/0x78
    [<c004aa7c>] __blocking_notifier_call_chain+0x54/0x6c
    [<c004aabc>] blocking_notifier_call_chain+0x28/0x30
    [<c0467dec>] device_add+0x400/0x4f0
    [<c05be89c>] of_device_add+0x44/0x48
    [<c05bef34>] of_platform_device_create_pdata+0x7c/0x9c
    [<c05bf068>] of_platform_bus_create+0xf0/0x16c
    [<c05bf0b8>] of_platform_bus_create+0x140/0x16c
    [<c05bf228>] of_platform_populate+0x74/0xa0
    [<c099fe6c>] 0xc099fe6c
    [<c099aea0>] 0xc099aea0
    [<c0008904>] do_one_initcall+0xa4/0x134
    [<c0997e4c>] 0xc0997e4c
    [<c06ead3c>] kernel_init+0x1c/0xf4

This patch is to ignore this calltrace since dma_mask will be destroyed
by BUS_NOTIFY_DEL_DEVICE in an async way.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/mach-keystone/keystone.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-keystone/keystone.c b/arch/arm/mach-keystone/keystone.c
index 4581dce..ba3b479 100644
--- a/arch/arm/mach-keystone/keystone.c
+++ b/arch/arm/mach-keystone/keystone.c
@@ -113,6 +113,7 @@ static int keystone_platform_notifier(struct notifier_block *nb,
 
 	if (event == BUS_NOTIFY_ADD_DEVICE) {
 		dev->dma_mask = kmalloc(sizeof(*dev->dma_mask), GFP_KERNEL);
+		kmemleak_ignore(dev->dma_mask);
 		dev->coherent_dma_mask = arm_dma_limit;
 		if (dev->dma_mask)
 			*dev->dma_mask = arm_dma_limit;
-- 
1.7.5.4

