From b8c074dfd17d66624db257a8c886f9cb9467f02d Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Fri, 6 May 2016 10:54:27 -0500
Subject: [PATCH 328/347] regulator: core: Refactor regulator_set_voltage_time

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

Now that regulator_set_voltage_time_triplet has been introduced
regulator_set_voltage_time is just a special call to it using the min
argument for all three old voltage values and the max argument for all
three new voltage values. Let's change regulator_set_voltage_time into a
wrapper for regulator_set_voltage_time_triplet that does just that to
avoid duplicating code that doesn't need to be.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
(cherry picked from commit c7b24051cf32691261934f5fa2456becc90d4356)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/regulator/core.c           |   44 ------------------------------------
 include/linux/regulator/consumer.h |   16 ++++++------
 2 files changed, 8 insertions(+), 52 deletions(-)

diff --git a/drivers/regulator/core.c b/drivers/regulator/core.c
index 99c8b9d..5d5d6cc 100644
--- a/drivers/regulator/core.c
+++ b/drivers/regulator/core.c
@@ -2978,50 +2978,6 @@ int regulator_set_voltage(struct regulator *regulator, int min_uV, int max_uV)
 }
 EXPORT_SYMBOL_GPL(regulator_set_voltage);
 
-/**
- * regulator_set_voltage_time - get raise/fall time
- * @regulator: regulator source
- * @old_uV: starting voltage in microvolts
- * @new_uV: target voltage in microvolts
- *
- * Provided with the starting and ending voltage, this function attempts to
- * calculate the time in microseconds required to rise or fall to this new
- * voltage.
- */
-int regulator_set_voltage_time(struct regulator *regulator,
-			       int old_uV, int new_uV)
-{
-	struct regulator_dev *rdev = regulator->rdev;
-	const struct regulator_ops *ops = rdev->desc->ops;
-	int old_sel = -1;
-	int new_sel = -1;
-	int voltage;
-	int i;
-
-	/* Currently requires operations to do this */
-	if (!ops->list_voltage || !ops->set_voltage_time_sel
-	    || !rdev->desc->n_voltages)
-		return -EINVAL;
-
-	for (i = 0; i < rdev->desc->n_voltages; i++) {
-		/* We only look for exact voltage matches here */
-		voltage = regulator_list_voltage(regulator, i);
-		if (voltage < 0)
-			return -EINVAL;
-		if (voltage == 0)
-			continue;
-		if (voltage == old_uV)
-			old_sel = i;
-		if (voltage == new_uV)
-			new_sel = i;
-	}
-
-	if (old_sel < 0 || new_sel < 0)
-		return -EINVAL;
-
-	return ops->set_voltage_time_sel(rdev, old_sel, new_sel);
-}
-EXPORT_SYMBOL_GPL(regulator_set_voltage_time);
 
 /**
  * regulator_set_voltage_time_sel - get raise/fall time
diff --git a/include/linux/regulator/consumer.h b/include/linux/regulator/consumer.h
index c0fab32..864ba85 100644
--- a/include/linux/regulator/consumer.h
+++ b/include/linux/regulator/consumer.h
@@ -230,8 +230,6 @@ int regulator_is_supported_voltage(struct regulator *regulator,
 				   int min_uV, int max_uV);
 unsigned int regulator_get_linear_step(struct regulator *regulator);
 int regulator_set_voltage(struct regulator *regulator, int min_uV, int max_uV);
-int regulator_set_voltage_time(struct regulator *regulator,
-			       int old_uV, int new_uV);
 int regulator_set_voltage_time_triplet(struct regulator *regulator,
 				       int old_uV, int old_uV_min,
 				       int old_uV_max, int new_uV,
@@ -445,12 +443,6 @@ static inline int regulator_set_voltage(struct regulator *regulator,
 	return 0;
 }
 
-static inline int regulator_set_voltage_time(struct regulator *regulator,
-					     int old_uV, int new_uV)
-{
-	return 0;
-}
-
 static inline
 int regulator_set_voltage_time_triplet(struct regulator *regulator,
 				       int old_uV, int old_uV_min,
@@ -596,4 +588,12 @@ static inline int regulator_is_supported_voltage_tol(struct regulator *regulator
 					      target_uV + tol_uV);
 }
 
+static inline int regulator_set_voltage_time(struct regulator *regulator,
+					     int old_uV, int new_uV)
+{
+	return regulator_set_voltage_time_triplet(regulator,
+						  old_uV, old_uV, old_uV,
+						  new_uV, new_uV, new_uV);
+}
+
 #endif
-- 
1.7.5.4

