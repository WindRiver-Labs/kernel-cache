From 5ae364e83146353eb606aa151b99b0de8395c5c1 Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Tue, 15 Oct 2013 10:28:17 -0400
Subject: [PATCH 029/256] pcie: keystone: fix section mismatch warnings during
 build

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
(cherry picked from commit e7e4d91a65e04ebcd0dee857e3309fc5a7dc4a94)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/pci/host/pcie-keystone.c |   10 ++++++----
 drivers/pci/quirks.c             |    2 +-
 2 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/pci/host/pcie-keystone.c b/drivers/pci/host/pcie-keystone.c
index 6a9dcb0..7de1f26 100644
--- a/drivers/pci/host/pcie-keystone.c
+++ b/drivers/pci/host/pcie-keystone.c
@@ -950,7 +950,7 @@ static irqreturn_t pcie_err_irq_handler(int irq, void *reg_virt)
  * - Additional delay/handshaking for EPs indulging in CRRS
  */
 
-static int keystone_pcie_setup(int nr, struct pci_sys_data *sys)
+static __init int keystone_pcie_setup(int nr, struct pci_sys_data *sys)
 {
 	struct keystone_pcie_info *info;
 	void __iomem *reg_virt;
@@ -1327,7 +1327,8 @@ static struct pci_ops keystone_pci_ops = {
 	.write	= keystone_pci_write_config,
 };
 
-static struct pci_bus *keystone_pcie_scan(int nr, struct pci_sys_data *sys)
+static __init struct pci_bus *keystone_pcie_scan(int nr,
+					struct pci_sys_data *sys)
 {
 	struct keystone_pcie_info *info;
 	struct pci_bus *bus = NULL;
@@ -1355,7 +1356,8 @@ static struct pci_bus *keystone_pcie_scan(int nr, struct pci_sys_data *sys)
  * @pin: Pin number for the function
  *
  */
-static int keystone_pcie_map_irq(const struct pci_dev *dev, u8 slot, u8 pin)
+static __init int keystone_pcie_map_irq(const struct pci_dev *dev, u8 slot,
+					u8 pin)
 {
 	struct keystone_pcie_info *info = pbus_to_kspci(dev->bus);
 
@@ -1379,7 +1381,7 @@ static int keystone_pcie_map_irq(const struct pci_dev *dev, u8 slot, u8 pin)
 		info->virqs[pin - 1] : -1;
 }
 
-static struct hw_pci keystone_pcie_hw = {
+static struct hw_pci __initdata keystone_pcie_hw = {
 	.nr_controllers	= 1,
 	.setup		= keystone_pcie_setup,
 	.scan		= keystone_pcie_scan,
diff --git a/drivers/pci/quirks.c b/drivers/pci/quirks.c
index 3ae0356..5376b2d 100644
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@ -3711,7 +3711,7 @@ void pci_dev_specific_enable_acs(struct pci_dev *dev)
  * The KeyStone PCIe controller has maximum read request size of 256 bytes.
  * Force this configuration for all EP including bridges.
  */
-static void __init quirk_limit_readrequest(struct pci_dev *dev)
+static void quirk_limit_readrequest(struct pci_dev *dev)
 {
        pcie_set_readrq(dev, 256);
 }
-- 
1.7.5.4

