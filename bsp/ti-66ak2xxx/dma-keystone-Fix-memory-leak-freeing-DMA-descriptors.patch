From 3611923c1dee8ca2589afc7187f75c3bc07f16a6 Mon Sep 17 00:00:00 2001
From: "Reece R. Pollack" <x0183204@ti.com>
Date: Fri, 13 Feb 2015 12:03:53 -0500
Subject: [PATCH 057/256] dma: keystone: Fix memory leak freeing DMA
 descriptors

This patch corrects a memory leak when freeing software DMA
descriptors. The loop containing the error was intended to
identify any hardware DMA descriptors which did not get freed
by the previous loop, but do to missing braces ({..}) it always
set "leaked" to "true" which prevented the software descriptor
array from being freed.

Signed-off-by: Reece R. Pollack <x0183204@ti.com>
(cherry picked from commit b03561ff560f1f4ad6fccc1047158f751897ff22)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/dma/keystone-pktdma.c |    7 +++++--
 1 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/drivers/dma/keystone-pktdma.c b/drivers/dma/keystone-pktdma.c
index 3b56275..b44b5fb 100644
--- a/drivers/dma/keystone-pktdma.c
+++ b/drivers/dma/keystone-pktdma.c
@@ -1165,9 +1165,12 @@ static void chan_destroy_descs(struct keystone_dma_chan *chan)
 
 	for (i = 0; i < chan->num_descs; i++) {
 		desc = desc_from_index(chan, i);
-		if (desc->hwdesc)
+		if (desc->hwdesc) {
+			dev_warn(chan_dev(chan), "%s leaked descriptor %d\n",
+					chan->achan.name, i);
 			desc_dump(chan, desc, "leaked descriptor");
-		leaked = true;
+			leaked = true;
+		}
 	}
 
 	if (!leaked)
-- 
1.7.5.4

