From d5cb543149c9e8eddd9cafec0cbefde338a6f0a8 Mon Sep 17 00:00:00 2001
From: Cyril Chemparathy <cyril@ti.com>
Date: Tue, 11 Dec 2012 12:46:21 -0500
Subject: [PATCH 203/256] remoteproc: add support for broadcast vq interrupts

This patch adds support for broadcast ring interrupts in cases where the
underlying driver may not have individual interrupts per virtring.
(cherry picked from commit 3a67dd0972cf3cd9cad28ce8e1378cdb53edc8d4)

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/remoteproc/remoteproc_virtio.c |   17 ++++++++++++-----
 1 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/drivers/remoteproc/remoteproc_virtio.c b/drivers/remoteproc/remoteproc_virtio.c
index a34b506..78e40fc 100644
--- a/drivers/remoteproc/remoteproc_virtio.c
+++ b/drivers/remoteproc/remoteproc_virtio.c
@@ -45,7 +45,7 @@ static bool rproc_virtio_notify(struct virtqueue *vq)
 /**
  * rproc_vq_interrupt() - tell remoteproc that a virtqueue is interrupted
  * @rproc: handle to the remote processor
- * @notifyid: index of the signalled virtqueue (unique per this @rproc)
+ * @notifyid: index of the signalled virtqueue (-1 for all vqs)
  *
  * This function should be called by the platform-specific rproc driver,
  * when the remote processor signals that a specific virtqueue has pending
@@ -57,14 +57,21 @@ static bool rproc_virtio_notify(struct virtqueue *vq)
 irqreturn_t rproc_vq_interrupt(struct rproc *rproc, int notifyid)
 {
 	struct rproc_vring *rvring;
+	irqreturn_t ret = IRQ_NONE;
+	int start = (notifyid >= 0) ? notifyid : 0;
+	int end   = (notifyid >= 0) ? notifyid : rproc->max_notifyid;
 
 	dev_dbg(&rproc->dev, "vq index %d is interrupted\n", notifyid);
 
-	rvring = idr_find(&rproc->notifyids, notifyid);
-	if (!rvring || !rvring->vq)
-		return IRQ_NONE;
+	for (notifyid = start; notifyid <= end; notifyid++) {
+		rvring = idr_find(&rproc->notifyids, notifyid);
+		if (!rvring || !rvring->vq)
+			continue;
+		if (vring_interrupt(0, rvring->vq) == IRQ_HANDLED)
+			ret = IRQ_HANDLED;
+	}
 
-	return vring_interrupt(0, rvring->vq);
+	return ret;
 }
 EXPORT_SYMBOL(rproc_vq_interrupt);
 
-- 
1.7.5.4

