From 28c47ba62db76f84a8b384d5e9fa3b17e7cc6444 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Thu, 16 Apr 2015 09:59:37 +0800
Subject: [PATCH 126/256] arm: keystone2: use ks2 aliased physical address for
 cpu_reset

This patch comes from:
  git://git.ti.com/keystone-linux/linux.git

This is is only for KS2, so it should be re-considerated again.

KS2 system uses physical addresses outside of first 4GB memory range.
Once the cpu_reset() disables MMU that memory cannot be used.
To let the cpu_reset() successfully restart CPU we need to run it from
KS2 aliased memory address space.

Signed-off-by: Vitaly Andrianov <vitalya@ti.com>
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/kernel/process.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/arch/arm/kernel/process.c b/arch/arm/kernel/process.c
index 5f6e650..8805fe7 100644
--- a/arch/arm/kernel/process.c
+++ b/arch/arm/kernel/process.c
@@ -88,7 +88,11 @@ static void __soft_restart(void *addr)
 	flush_cache_all();
 
 	/* Switch to the identity mapping. */
+#ifdef CONFIG_ARCH_KEYSTONE
+	phys_reset = (phys_reset_t)(unsigned long)virt_to_idmap(cpu_reset);
+#else
 	phys_reset = (phys_reset_t)(unsigned long)virt_to_phys(cpu_reset);
+#endif
 	phys_reset((unsigned long)addr);
 
 	/* Should never get here. */
-- 
1.7.5.4

