From 21ef346a68653214fc3df702aec367ab2a8eb11c Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Fri, 4 Jan 2013 11:22:58 -0500
Subject: [PATCH 206/256] remoteproc: TEMPORARY: fix to avoid deadlock

rproc_boot is called second time in the same call chain resulting in the

Signed-off-by: Sam Nelson <sam.nelson@ti.com>
Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
(cherry picked from commit adbce6fcabef271d9b19c3a0a7044a4e3558e147)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/remoteproc/remoteproc_virtio.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/drivers/remoteproc/remoteproc_virtio.c b/drivers/remoteproc/remoteproc_virtio.c
index 78e40fc..103f0b1 100644
--- a/drivers/remoteproc/remoteproc_virtio.c
+++ b/drivers/remoteproc/remoteproc_virtio.c
@@ -156,7 +156,9 @@ static int rproc_virtio_find_vqs(struct virtio_device *vdev, unsigned nvqs,
 		       vq_callback_t *callbacks[],
 		       const char *names[])
 {
+#if 0
 	struct rproc *rproc = vdev_to_rproc(vdev);
+#endif
 	int i, ret;
 
 	for (i = 0; i < nvqs; ++i) {
@@ -167,13 +169,14 @@ static int rproc_virtio_find_vqs(struct virtio_device *vdev, unsigned nvqs,
 		}
 	}
 
+#if 0
 	/* now that the vqs are all set, boot the remote processor */
 	ret = rproc_boot(rproc);
 	if (ret) {
 		dev_err(&rproc->dev, "rproc_boot() failed %d\n", ret);
 		goto error;
 	}
-
+#endif
 	return 0;
 
 error:
-- 
1.7.5.4

