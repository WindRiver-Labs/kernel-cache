From fdd46660410fb26a01b107b32bf57697e45116c0 Mon Sep 17 00:00:00 2001
From: "Reece R. Pollack" <x0183204@ti.com>
Date: Thu, 18 Sep 2014 17:19:20 -0400
Subject: [PATCH 112/256] hwqueue: keystone: Fix WARN assertion when
 CONFIG_DEBUG_MUTEXES enabled

During QoS initialization, the pdsp clock rate is needed to configure
the timer rate. This is done by calling clk_get_rate() which attempts to
acquire a mutex, but a spinlock is already held. This lock sequence
violation results in the WARN assertion. This patch determines the PDSP
clock rate before the spinlock is acquired.

Signed-off-by: Reece R. Pollack <x0183204@ti.com>
(cherry picked from commit bf2438d2c6a0cffa0a65fe90932d71aed14de236)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/hwqueue/keystone_hwqueue_qos.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/drivers/hwqueue/keystone_hwqueue_qos.c b/drivers/hwqueue/keystone_hwqueue_qos.c
index e309389..1a165a5 100644
--- a/drivers/hwqueue/keystone_hwqueue_qos.c
+++ b/drivers/hwqueue/keystone_hwqueue_qos.c
@@ -3711,12 +3711,15 @@ static int khwq_qos_init_range(struct khwq_range_info *range)
 	struct khwq_device *kdev;
 	u32 command, magic, version;
 	int error, i, idx, timer_config;
+	unsigned long pdsp_clock_rate;
 	char name[24];
 
 	info = range->qos_info;
 	pdsp = info->pdsp;
 	kdev = info->kdev;
 
+	pdsp_clock_rate = clk_get_rate(kdev->clk);
+
 	range->inst_ops.push = khwq_qos_push;
 
 	snprintf(name, sizeof(name), "qos-%d", pdsp->id);
@@ -3767,7 +3770,7 @@ static int khwq_qos_init_range(struct khwq_range_info *range)
 	}
 
 	/* calculate the timer config from the pdsp tick */
-	timer_config = (clk_get_rate(kdev->clk) / info->ticks_per_sec);
+	timer_config = pdsp_clock_rate / info->ticks_per_sec;
 	timer_config /= 2;
 	command = (QOS_CMD_SET_TIMER_CONFIG | ((timer_config & 0xffff) << 16));
 	error = khwq_qos_write_cmd(info, command);
-- 
1.7.5.4

