From a9934b1b2ed26201e4d647e4138c11f23b41aa02 Mon Sep 17 00:00:00 2001
From: WingMan Kwok <w-kwok2@ti.com>
Date: Thu, 10 Mar 2016 18:40:40 -0500
Subject: [PATCH 223/347] soc: ti: add support of loading qos firmware

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

This patch adds the support of loading QoS firmware
to a QMSS PDSP when the firmware_type specified in
a pdsp node in the dts bindings is "qos"

Signed-off-by: WingMan Kwok <w-kwok2@ti.com>
Signed-off-by: Jacob Stiffler <j-stiffler@ti.com>
(cherry picked from commit 9d36948d0500f7adf9106f58a019457f08bcdc80)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/soc/ti/knav_qmss_queue.c |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

diff --git a/drivers/soc/ti/knav_qmss_queue.c b/drivers/soc/ti/knav_qmss_queue.c
index 867431b..e340920 100644
--- a/drivers/soc/ti/knav_qmss_queue.c
+++ b/drivers/soc/ti/knav_qmss_queue.c
@@ -75,6 +75,7 @@ static DEFINE_MUTEX(knav_dev_lock);
  * until a firmware file is found.
  */
 const char *knav_acc_firmwares[] = {"ks2_qmss_pdsp_acc48.bin"};
+const char *knav_qos_firmwares[] = {"ks2_qmss_pdsp_qos.bin"};
 
 static bool device_ready;
 
@@ -1617,6 +1618,10 @@ static int knav_queue_init_pdsps(struct knav_device *kdev,
 			pdsp->firmware  = &knav_acc_firmwares[0];
 			pdsp->num_firmwares = ARRAY_SIZE(knav_acc_firmwares);
 			pdsp->firmware_type = KNAV_PDSP_FW_TYPE_ACC;
+		} else if (strcmp(fw_type, "qos") == 0) {
+			pdsp->firmware  = &knav_qos_firmwares[0];
+			pdsp->num_firmwares = ARRAY_SIZE(knav_qos_firmwares);
+			pdsp->firmware_type = KNAV_PDSP_FW_TYPE_QOS;
 		} else {
 			dev_err(dev, "unknown firmware_type %s for pdsp %s\n",
 				fw_type, pdsp->name);
-- 
1.7.5.4

