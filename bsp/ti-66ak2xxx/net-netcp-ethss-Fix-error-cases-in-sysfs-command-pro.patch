From b33628a816c91f4b9edb2225c4186c07a6b07b20 Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Wed, 20 Jul 2016 12:45:52 -0400
Subject: [PATCH 200/347] net: netcp: ethss: Fix error cases in sysfs command
 processing

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

Fix the error code returned in port_vlan and port_tx_pri_map command
processing code. For newer version of NetCP available on K2L/E/G ,
there are n stats blocks, one per port. For these, check if port
requested is supported and return error if not.

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
(cherry picked from commit be2f6b120230acdd0f50a379ff8dcf0c95658bcb)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/ti/netcp_ethss_sysfs.c |   17 ++++++++++++++---
 1 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/ti/netcp_ethss_sysfs.c b/drivers/net/ethernet/ti/netcp_ethss_sysfs.c
index 1061f3b..1774c4a 100644
--- a/drivers/net/ethernet/ti/netcp_ethss_sysfs.c
+++ b/drivers/net/ethernet/ti/netcp_ethss_sysfs.c
@@ -727,7 +727,7 @@ static ssize_t gbe_sw_port_tx_pri_map_store(struct gbe_priv *gbe_dev,
 
 	slave = gbe_port_num_get_slave(gbe_dev, port);
 	if (!slave)
-		return 0;
+		return -EINVAL;
 
 	ret = gbe_sw_attr_parse_set_command(gbe_dev, attr, buf, count, &res);
 	if (ret)
@@ -943,7 +943,7 @@ static ssize_t gbe_sw_port_vlan_store(struct gbe_priv *gbe_dev,
 
 	slave = gbe_port_num_get_slave(gbe_dev, port);
 	if (!slave)
-		return 0;
+		return -EINVAL;
 
 	/* Slave port */
 	reg = GBE_REG_ADDR(slave, port_regs, port_vlan);
@@ -1105,13 +1105,24 @@ static ssize_t gbe_sw_stats_mod_store(struct gbe_priv *gbe_dev,
 				      struct gbe_attribute *attr,
 				      const char *buf, size_t count)
 {
+	int stat_mod, max_ports;
 	unsigned long end;
-	int stat_mod;
 
 	if (kstrtoul(buf, 0, &end) != 0 || (end != 0))
 		return -EINVAL;
 
 	stat_mod = (int)(attr->context);
+
+	/* We have stats blocks for only slave ports on GBE_SS_VERSION_14
+	 * but also for host port for other variations. So check this
+	 * value accordingly
+	 */
+	max_ports = (gbe_dev->ss_version == GBE_SS_VERSION_14) ?
+		     gbe_dev->max_num_slaves : gbe_dev->max_num_ports;
+
+	if (stat_mod >= max_ports)
+		return -EINVAL;
+
 	spin_lock_bh(&gbe_dev->hw_stats_lock);
 	if (gbe_dev->ss_version == GBE_SS_VERSION_14)
 		gbe_reset_mod_stats_ver14(gbe_dev, stat_mod);
-- 
1.7.5.4

