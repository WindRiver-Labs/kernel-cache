From bd0590107ea585ff6f04e1ac3b1752dd01d7d09b Mon Sep 17 00:00:00 2001
From: Nishanth Menon <nm@ti.com>
Date: Fri, 10 Jun 2016 12:33:03 -0500
Subject: [PATCH 197/347] soc: ti: opp-domain: Fix wrong scaling of VDD
 regulator when VBB regulator is required

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

Fix the copy paste typo causing VBB regulator to be never set, instead
VDD regulator is attempted to be set. This causes multiple issues
depending on Silicon type and direction of transition.

When scaling in the direction that requires ABB to be set first, indicative
voltage is first set on VDD, followed by setup of optimized voltage for
VDD. In this case, the Bias voltage remains the same as set up by boot
loader, and the VDD voltage looks right.

When scaling in the direction that requires ABB to be set last, indicative
VDD optimized voltage is setup first, followed by override with
indicative voltage on VDD. This leaves Bias voltage at the same voltage
set at boot, and VDD voltage looks broken. If we transitioned to the OPP
that bootloader setup, VBB looks right and VDD voltage looks broken.

Fix the typo. I guess we never scaled ABB.. and could only be caught
with right samples.

Fixes: 9fd88710a161 ("soc: ti: Introduce TI OPP domain driver")
Reviewed-by: Suman Anna <s-anna@ti.com>
Reported-by: Carlos Hernandez <ceh@ti.com>
Signed-off-by: Nishanth Menon <nm@ti.com>
(cherry picked from commit fc03f11354a74d8b61612b157fbd5891fad62044)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/soc/ti/ti-opp-domain.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/soc/ti/ti-opp-domain.c b/drivers/soc/ti/ti-opp-domain.c
index 10e16b5..528776d 100644
--- a/drivers/soc/ti/ti-opp-domain.c
+++ b/drivers/soc/ti/ti-opp-domain.c
@@ -277,7 +277,7 @@ static int ti_oppdm_do_transition(struct device *dev,
 	if (do_abb_first && !IS_ERR(data->vbb_reg)) {
 		dev_dbg(dev, "vbb pre %duV[min %duV max %duV]\n", uv, uv_min,
 			uv_max);
-		ret = regulator_set_voltage_triplet(data->vdd_reg, uv_min,
+		ret = regulator_set_voltage_triplet(data->vbb_reg, uv_min,
 						    uv, uv_max);
 		if (ret) {
 			dev_err(dev,
@@ -302,7 +302,7 @@ static int ti_oppdm_do_transition(struct device *dev,
 	if (!do_abb_first && !IS_ERR(data->vbb_reg)) {
 		dev_dbg(dev, "vbb post %duV[min %duV max %duV]\n", uv, uv_min,
 			uv_max);
-		ret = regulator_set_voltage_triplet(data->vdd_reg, uv_min,
+		ret = regulator_set_voltage_triplet(data->vbb_reg, uv_min,
 						    uv, uv_max);
 		if (ret) {
 			dev_err(dev,
-- 
1.7.5.4

