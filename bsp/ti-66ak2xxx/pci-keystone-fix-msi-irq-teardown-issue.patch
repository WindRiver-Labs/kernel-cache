From 289ab43033a6304df9d21ff40663ad7bb2515e14 Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Mon, 4 Aug 2014 15:12:09 -0400
Subject: [PATCH 033/256] pci: keystone: fix msi irq teardown issue

Currently arch_teardown_msi_irq() casues a kernel crash due to invalid
info structure. This seems to be not right way to retrieve the info.
retrieve the info data from msi descriptor instead.

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
(cherry picked from commit 83494a9f4b08785ce5a539acdd56e6ed54b9d9ed)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/pci/host/pcie-keystone.c |    9 ++++-----
 1 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/drivers/pci/host/pcie-keystone.c b/drivers/pci/host/pcie-keystone.c
index dfb57eb..648d7c4 100644
--- a/drivers/pci/host/pcie-keystone.c
+++ b/drivers/pci/host/pcie-keystone.c
@@ -901,14 +901,13 @@ int arch_setup_msi_irq(struct pci_dev *pdev, struct msi_desc *desc)
 
 void arch_teardown_msi_irq(unsigned int irq)
 {
-	struct irq_data *irq_data = irq_get_chip_data(irq);
-	struct keystone_pcie_info *info = irq_data_get_irq_chip_data(irq_data);
+	struct msi_desc *entry = irq_get_msi_desc(irq);
+	struct pci_dev *pdev = entry->dev;
+	struct keystone_pcie_info *info = pbus_to_kspci(pdev->bus);
 
 	if (info) {
 		int pos = irq - irq_linear_revmap(info->msi_irqd, 0);
-
-		irq_set_chip_and_handler(irq, NULL, NULL);
-		irq_set_chip_data(irq, NULL);
+		dynamic_irq_cleanup(irq);
 		clear_bit(pos, msi_irq_bits);
 		return;
 	}
-- 
1.7.5.4

