From 535e3dc017594a7738a1fd0edb6dfafb9a36a532 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 10 Apr 2017 11:19:57 +0800
Subject: [PATCH 160/347] soc: ti: knav_qmss_queue: fix Linking RAM 0 Size
 register configuration

This patch comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

commit 05d0982c4b78302ff976c753ffaed3d3ecc17d13 ti-sdks

This patch corrects a configuration error in the Linking RAM 0 Size
register. Per spec, descriptors with index less than equal to
regions0_size is in region 0, in the case of NSS found in K2E/L/HK
where as for NSS lite found in K2G, descriptors with index less
than regions0_size is in region 0. So update the size accordingly
in the regions0_size bits of the linking ram size 0 register.

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/soc/ti/knav_qmss_queue.c |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/drivers/soc/ti/knav_qmss_queue.c b/drivers/soc/ti/knav_qmss_queue.c
index 4b41da7..5beb6ea 100644
--- a/drivers/soc/ti/knav_qmss_queue.c
+++ b/drivers/soc/ti/knav_qmss_queue.c
@@ -1192,7 +1192,12 @@ static int knav_queue_setup_link_ram(struct knav_device *kdev)
 		dev_dbg(kdev->dev, "linkram0: dma:%pad, virt:%p, size:%x\n",
 			&block->dma, block->virt, block->size);
 		writel_relaxed((u32)block->dma, &qmgr->reg_config->link_ram_base0);
-		writel_relaxed(block->size, &qmgr->reg_config->link_ram_size0);
+		if (kdev->version == QMSS_LITE)
+			writel_relaxed(block->size,
+				       &qmgr->reg_config->link_ram_size0);
+		else
+			writel_relaxed(block->size - 1,
+				       &qmgr->reg_config->link_ram_size0);
 
 		block++;
 		if (!block->size)
-- 
1.7.5.4

