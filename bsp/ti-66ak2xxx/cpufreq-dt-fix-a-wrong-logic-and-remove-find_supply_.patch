From 53a471a357902f86a81bcd9379d2a6d1ea179e29 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Thu, 13 Apr 2017 12:24:02 +0800
Subject: [PATCH 339/347] cpufreq: dt: fix a wrong logic and remove
 find_supply_name twice

Keep the upstream part and optimize the find_supply_name

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/cpufreq/cpufreq-dt.c |   33 +++++++++++++++++++++++++--------
 1 files changed, 25 insertions(+), 8 deletions(-)

diff --git a/drivers/cpufreq/cpufreq-dt.c b/drivers/cpufreq/cpufreq-dt.c
index 54f9bad..00ddfbb 100644
--- a/drivers/cpufreq/cpufreq-dt.c
+++ b/drivers/cpufreq/cpufreq-dt.c
@@ -119,27 +119,44 @@ static int resources_available(void)
 	/* Platform doesn't require regulator */
 	if (!name)
 		return 0;
+	else {
+		struct opp_table *opp_table = NULL;
 
-	name = find_supply_name(cpu_dev);
-	if (name) {
-		ret = dev_pm_opp_set_supply(cpu_dev, name);
-		if (ret) {
+		opp_table = dev_pm_opp_set_regulator(cpu_dev, name);
+		if (IS_ERR(opp_table)) {
+			ret = PTR_ERR(opp_table);
+			dev_err(cpu_dev, "Failed set regulator ret %d\n", ret);
 			/*
 			 * If cpu's supply node is present, but supply is
 			 * not yet registered, we should try defering probe.
 			 */
 			if (ret == -EPROBE_DEFER)
-				dev_dbg(cpu_dev, "cpu0 supply not ready, retry\n");
+				dev_dbg(cpu_dev, "Supply not ready, retry\n");
 			else
-				dev_dbg(cpu_dev, "no supply for cpu0: %d\n",
-					ret);
+				dev_dbg(cpu_dev, "No supply: ret %d\n", ret);
 
 			return ret;
 		}
+		dev_pm_opp_put_regulator(opp_table);
+	}
 
+#ifndef CONFIG_ARCH_KEYSTONE
+	cpu_reg = regulator_get_optional(cpu_dev, name);
+	ret = PTR_ERR_OR_ZERO(cpu_reg);
+	if (ret) {
+		/*
+		 * If cpu's regulator supply node is present, but regulator is
+		 * not yet registered, we should try defering probe.
+		 */
+		if (ret == -EPROBE_DEFER)
+			dev_dbg(cpu_dev, "cpu0 regulator not ready, retry\n");
+		else
+			dev_dbg(cpu_dev, "no regulator for cpu0: %d\n", ret);
+		return ret;
 	}
 
-	dev_pm_opp_put_supply(cpu_dev);
+	regulator_put(cpu_reg);
+#endif
 
 	return 0;
 }
-- 
1.7.5.4

