From 58a8bcd8d8317d81080c5c34ac9df6c4369d74cc Mon Sep 17 00:00:00 2001
From: Radu Bulie <radu.bulie@freescale.com>
Date: Fri, 7 Dec 2012 23:11:14 +0000
Subject: [PATCH 439/518] dpa_classifier: Add distribution handle to multiast
 group

If a multicast group receives an external distribution handle,
each member of the group will send the frames to that distribution.

Signed-off-by: Radu Bulie <radu.bulie@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c   |   39 ++++++++++++++++----
 .../staging/fsl_dpa_offload/dpa_classifier_ioctl.h |    1 +
 .../staging/fsl_dpa_offload/wrp_dpa_classifier.c   |    7 ++++
 include/linux/fsl_dpa_classifier.h                 |    9 ++++-
 4 files changed, 47 insertions(+), 9 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 9a321fa..f04e230 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -6224,13 +6224,24 @@ int dpa_classif_mcast_create_group(
 		replic_grp_params->numOfEntries = pgroup->num_members + 1;
 		next_engine_params = &replic_grp_params->nextEngineParams[0];
 
-		next_engine_params->nextEngine = e_FM_PCD_DONE;
-		next_engine_params->params.enqueueParams.action =
+		if (group_params->distribution) {
+			/* Redirect frames to KeyGen direct scheme */
+			next_engine_params->nextEngine = e_FM_PCD_KG;
+			next_engine_params->params.kgParams.h_DirectScheme =
+						group_params->distribution;
+			next_engine_params->params.kgParams.newFqid =
+						member_params->new_fqid;
+			next_engine_params->params.kgParams.overrideFqid =
+						member_params->override_fqid;
+		} else {
+			next_engine_params->nextEngine = e_FM_PCD_DONE;
+			next_engine_params->params.enqueueParams.action =
 						e_FM_PCD_ENQ_FRAME;
-		next_engine_params->params.enqueueParams.overrideFqid =
+			next_engine_params->params.enqueueParams.overrideFqid =
 						member_params->override_fqid;
-		next_engine_params->params.enqueueParams.newFqid =
+			next_engine_params->params.enqueueParams.newFqid =
 						member_params->new_fqid;
+		}
 		if (member_params->hmd != DPA_OFFLD_DESC_NONE) {
 			next_engine_params->h_Manip = (t_Handle)
 				dpa_classif_hm_lock_chain(member_params->hmd);
@@ -6355,12 +6366,24 @@ int dpa_classif_mcast_add_member(int grpd,
 	replic_grp_params->maxNumOfEntries = max_members;
 	replic_grp_params->numOfEntries = pgroup->num_members;
 	next_engine_params = &replic_grp_params->nextEngineParams[0];
-	next_engine_params->nextEngine = e_FM_PCD_DONE;
-	next_engine_params->params.enqueueParams.action = e_FM_PCD_ENQ_FRAME;
-	next_engine_params->params.enqueueParams.overrideFqid =
+	if (pgroup->group_params.distribution) {
+		/* Redirect frames to KeyGen direct scheme */
+		next_engine_params->nextEngine = e_FM_PCD_KG;
+		next_engine_params->params.kgParams.h_DirectScheme =
+					pgroup->group_params.distribution;
+		next_engine_params->params.kgParams.newFqid =
+					member_params->new_fqid;
+		next_engine_params->params.kgParams.overrideFqid =
+					member_params->override_fqid;
+	} else {
+		next_engine_params->nextEngine = e_FM_PCD_DONE;
+		next_engine_params->params.enqueueParams.action =
+						e_FM_PCD_ENQ_FRAME;
+		next_engine_params->params.enqueueParams.overrideFqid =
 						member_params->override_fqid;
-	next_engine_params->params.enqueueParams.newFqid =
+		next_engine_params->params.enqueueParams.newFqid =
 						member_params->new_fqid;
+	}
 
 	if (member_params->hmd != DPA_OFFLD_DESC_NONE) {
 		next_engine_params->h_Manip = (t_Handle)
diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h b/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h
index bbcc586..9d772d1 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h
@@ -473,6 +473,7 @@ struct dpa_cls_compat_mcast_group_params {
 	struct	dpa_cls_compat_tbl_enq_action_desc member_params;
 	unsigned int prefilled_members;
 	compat_uptr_t group;
+	compat_uptr_t distribution;
 };
 
 struct compat_ioc_dpa_cls_mcast_group_params {
diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
index f069a90..bd14909 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
@@ -2872,6 +2872,13 @@ int dpa_cls_mcast_group_params_compatcpy(
 	else
 		kparam->mcast_grp_params.group = NULL;
 
+	if (compat_ptr(uparam->mcast_grp_params.distribution))
+		kparam->mcast_grp_params.distribution = compat_get_id2ptr(
+					uparam->mcast_grp_params.distribution,
+					FM_MAP_TYPE_PCD_NODE);
+	else
+		kparam->mcast_grp_params.distribution = NULL;
+
 	return 0;
 }
 
diff --git a/include/linux/fsl_dpa_classifier.h b/include/linux/fsl_dpa_classifier.h
index 8854445..216778d 100644
--- a/include/linux/fsl_dpa_classifier.h
+++ b/include/linux/fsl_dpa_classifier.h
@@ -1509,7 +1509,14 @@ struct dpa_cls_mcast_group_params {
 	 * External group handle given as input parameter for an import
 	 * operation
 	 */
-	void *group;
+	void		*group;
+
+	/*
+	 * External distribution handle. When provided, replicated frames
+	 * are not enqueued to members' frame queues. They are sent to this
+	 * distribution.
+	 */
+	void		*distribution;
 };
 
 /*
-- 
1.7.5.4

