From b8b505e3518dc04d18bfb01171eae76b22437b16 Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Fri, 15 Jun 2012 14:49:05 +0000
Subject: [PATCH 211/518] Fix in dpa_offld_malloc_smart. Smart allocation
 crashed for 64bit KS.

alignament should also be casted to unsigned long, otherwise
the memory pointer is corrupted when running KS in 64 bit.

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Acked-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_compat.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_compat.c b/drivers/staging/fsl_dpa_offload/dpa_compat.c
index b185644..80cb2b3 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_compat.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_compat.c
@@ -96,7 +96,7 @@ void *dpa_offld_malloc_smart(size_t	size,
 	if (tmp == NULL)
 		return NULL;
 	memory = (void *)(((unsigned long)tmp + alignment + sizeof(void *)) &
-			~(alignment - 1));
+			~((unsigned long)alignment - 1));
 	*(void **)((uint8_t *)memory - sizeof(void *)) = tmp;
 
 	return memory;
-- 
1.7.5.4

