From eb8fac08c45eba47655a49be7887396f2d9b46bb Mon Sep 17 00:00:00 2001
From: Mandy Lavi <mandy.lavi@freescale.com>
Date: Mon, 8 Apr 2013 15:46:54 +0300
Subject: [PATCH 23/36] fmd: add missing field in
 ioc_fm_pcd_hash_table_params_t

Signed-off-by: Mandy Lavi <mandy.lavi@freescale.com>

kg_hash_shift field was added to t_FmPcdHashTableParams
but was missing from its corresponding struct ioc_fm_pcd_hash_table_params_t

[Grabbed from the branch, LINUX_IR5.3.0_ALPHA, of
https://git.freescale.com/git-private/cgit.cgi/ppc/dpaa-offload/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 include/linux/fmd/Peripherals/fm_pcd_ioctls.h |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/include/linux/fmd/Peripherals/fm_pcd_ioctls.h b/include/linux/fmd/Peripherals/fm_pcd_ioctls.h
index a5004ca..93bbebb 100644
--- a/include/linux/fmd/Peripherals/fm_pcd_ioctls.h
+++ b/include/linux/fmd/Peripherals/fm_pcd_ioctls.h
@@ -840,7 +840,9 @@ typedef enum ioc_fm_pcd_cc_stats_mode {
     e_IOC_FM_PCD_CC_STATS_MODE_NONE = 0,        /**< No statistics support */
     e_IOC_FM_PCD_CC_STATS_MODE_FRAME,           /**< Frame count statistics */
     e_IOC_FM_PCD_CC_STATS_MODE_BYTE_AND_FRAME,  /**< Byte and frame count statistics */
+#if (DPAA_VERSION >= 11)
     e_IOC_FM_PCD_CC_STATS_MODE_RMON,            /**< Byte and frame length range count statistics */
+#endif /* (DPAA_VERSION >= 11) */
 } ioc_fm_pcd_cc_stats_mode;
 
 /**************************************************************************//**
@@ -1431,6 +1433,8 @@ typedef struct ioc_fm_pcd_hash_table_params_t {
     uint16_t                    max_num_of_keys;            /**< Maximum Number Of Keys that will (ever) be used in this Hash-table */
     ioc_fm_pcd_cc_stats_mode    statistics_mode;            /**< If not e_IOC_FM_PCD_CC_STATS_MODE_NONE, the required structures for the
                                                                  requested statistics mode will be allocated according to max_num_of_keys. */
+    uint8_t                     kg_hash_shift;              /**< KG-Hash-shift as it was configured in the KG-scheme
+                                                                 that leads to this hash-table. */
     uint16_t                    hash_res_mask;              /**< Mask that will be used on the hash-result;
                                                                  The number-of-sets for this hash will be calculated
                                                                  as (2^(number of bits set in 'hash_res_mask'));
-- 
1.7.5.4

