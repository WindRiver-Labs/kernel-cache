From 66d9a9df474446b6c16a60e192c675c70d9f73c5 Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Fri, 15 Feb 2013 22:12:42 +0000
Subject: [PATCH 478/518] crypto: caam - Create math OR function operation on
 64 bit with IFB

Math OR performed on 64 bit SRC1 & IMM with immediate value

Use four bytes of immediate data even if LEN is 8. This allows
8-byte operations to get a 4-byte immediate value without
requiring that value to be padded out to 8 bytes.

This shortens the descriptor by one word.

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/crypto/caam/desc_constr.h |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/drivers/crypto/caam/desc_constr.h b/drivers/crypto/caam/desc_constr.h
index 978190e..f0f696c 100644
--- a/drivers/crypto/caam/desc_constr.h
+++ b/drivers/crypto/caam/desc_constr.h
@@ -397,3 +397,10 @@ do { \
 	*((u32 *)desc_end(desc) - 1) |= MATH_IFB; \
 	append_cmd(desc, data); \
 } while (0);
+
+#define append_math_or_imm_u64_ifb(desc, dest, src0, src1, data) \
+do { \
+	APPEND_MATH(OR, desc, dest, src0, src1, 2 * CAAM_CMD_SZ) \
+	*((u32 *)desc_end(desc) - 1) |= MATH_IFB; \
+	append_cmd(desc, data); \
+} while (0);
-- 
1.7.5.4

