From f7462a948d88da6c8c787e704ed499d08fcb259a Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Fri, 18 May 2012 20:54:11 +0000
Subject: [PATCH 176/518] Flush all SA function is now SMP safe

restructured the dpa_ipsec_flush_all_sa function to be SMP
safe and make use of dpa_ipsec_remove_sa

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Acked-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |   22 +++++++++++-----------
 1 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 0ae23a9..f60cb82 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -4047,12 +4047,14 @@ int dpa_ipsec_disable_sa(int sa_id)
 }
 EXPORT_SYMBOL(dpa_ipsec_disable_sa);
 
+/* Flush all SAs. If an error occurs while removing an SA, the flush process
+ * will continue with the next SAs and the return value will be -EAGAIN,
+ * which informs the upper layer that there is still at least one SA left */
 int dpa_ipsec_flush_all_sa(int dpa_ipsec_id)
 {
 	struct dpa_ipsec *dpa_ipsec;
-	struct list_head *pos, *tmp;
 	uint32_t i, sa_id;
-	int err;
+	int err = 0, ret;
 
 	/* multiple DPA IPSec instances are not currently supported */
 	unused(dpa_ipsec_id);
@@ -4063,23 +4065,21 @@ int dpa_ipsec_flush_all_sa(int dpa_ipsec_id)
 	}
 	dpa_ipsec = gbl_dpa_ipsec;
 
-	list_for_each_safe(pos, tmp, &dpa_ipsec->sa_mng.sa_rekeying_headlist)
-		list_del(pos);
-	INIT_LIST_HEAD(&dpa_ipsec->sa_mng.sa_rekeying_headlist);
 	flush_delayed_work(&dpa_ipsec->sa_mng.sa_rekeying_work);
 
 	for (i = 0; i < dpa_ipsec->sa_mng.max_num_sa; i++) {
+		mutex_lock(&dpa_ipsec->lock);
 		sa_id = dpa_ipsec->used_sa_ids[i];
+		mutex_unlock(&dpa_ipsec->lock);
+
 		if (sa_id != DPA_IPSEC_INVALID_SA_ID) {
-			err = dpa_ipsec_remove_sa(sa_id);
-			if (err < 0) {
-				xx_pr_err("Could not remove SA %d\n", sa_id);
-				return err;
-			}
+			ret = dpa_ipsec_remove_sa(sa_id);
+			if (ret < 0)
+				err = -EAGAIN;
 		}
 	}
 
-	return 0;
+	return err;
 }
 EXPORT_SYMBOL(dpa_ipsec_flush_all_sa);
 
-- 
1.7.5.4

