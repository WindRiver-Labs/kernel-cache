From 738432d70ddba2da55bf0593d2af85baf2ab8c70 Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Fri, 18 May 2012 20:53:00 +0000
Subject: [PATCH 172/518] Updated remove_sa_sec_fq & remove_sa_fq_pair
 functions

wait until queue is empty should be done prior to
calling qman_retire_fq.

added check to see if this queue was already removed

updated remove_sa_fq_pair to distinguish between
case when SA is single or parent in rekeying

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Acked-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |   24 +++++++++++-------------
 1 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 75df16a..9e932c2 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -1720,16 +1720,20 @@ static int remove_sa_sec_fq(struct qman_fq *sec_fq)
 		return -EFAULT;
 	}
 
+	/* Check if already removed, and return success if so. */
+	if (qman_fq_fqid(sec_fq) == 0)
+		return 0;
+
+	err = wait_until_fq_empty(sec_fq, timeout);
+	if (err < 0)
+		return err;
+
 	err = qman_retire_fq(sec_fq, &flags);
 	if (err < 0) {
 		xx_pr_err("Failed to retire FQ %d\n", sec_fq->fqid);
 		return err;
 	}
 
-	err = wait_until_fq_empty(sec_fq, timeout);
-	if (err < 0)
-		return err;
-
 	err = qman_oos_fq(sec_fq);
 	if (err < 0) {
 		xx_pr_err("Failed to OOS FQ %d\n", sec_fq->fqid);
@@ -1749,7 +1753,6 @@ static int remove_sa_sec_fq(struct qman_fq *sec_fq)
 
 static int remove_sa_fq_pair(struct dpa_ipsec_sa *sa)
 {
-	struct qman_fq *to_sec_fq, *from_sec_fq;
 	int err;
 
 	/* sanity checks */
@@ -1758,17 +1761,12 @@ static int remove_sa_fq_pair(struct dpa_ipsec_sa *sa)
 		return -EFAULT;
 	}
 
-	to_sec_fq = sa->to_sec_fq;
-	from_sec_fq = sa->from_sec_fq;
-
-	if (qman_fq_fqid(to_sec_fq) != 0) {
-		err = remove_sa_sec_fq(to_sec_fq);
+	err = remove_sa_sec_fq(sa->to_sec_fq);
 		if (err < 0)
 			return err;
-	}
 
-	if (!sa->parent_sa && !sa->child_sa) {
-		err = remove_sa_sec_fq(from_sec_fq);
+	if (sa_is_single(sa) && qman_fq_fqid(sa->from_sec_fq)) {
+		err = remove_sa_sec_fq(sa->from_sec_fq);
 		if (err < 0)
 			return err;
 	}
-- 
1.7.5.4

