From 37bcb4f66a5f3b6b15844849e84630f03318104e Mon Sep 17 00:00:00 2001
From: Mihai Serb <mihai.serb@freescale.com>
Date: Thu, 15 Mar 2012 22:07:21 +0000
Subject: [PATCH 116/518] Add support for inner / outer IP header fields
 update

Add support for configuring the shared descriptors to copy the DSCP
& DF bits between inner and outer IP headers (and vice-versa) and
automatically decrement TTL, based on the values of the
hdr_upd_flags parameter.

Signed-off-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |   24 +++++++++++++++++++++++-
 1 files changed, 23 insertions(+), 1 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 176884bb..c7244be 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -1837,6 +1837,15 @@ static int copy_sa_params_to_out_sa(struct dpa_ipsec_sa *sa,
 				       PDBOPTS_ESP_INCIPHDR |
 				       PDBOPTS_ESP_IPHDRSRC |
 				       PDBOPTS_ESP_UPDATE_CSUM;
+	if (sa_params->hdr_upd_flags) {
+		if (sa_params->hdr_upd_flags & DPA_IPSEC_HDR_COPY_DSCP)
+			sa->sec_desc->pdb_en.options |= PDBOPTS_ESP_DIFFSERV;
+		if (sa_params->hdr_upd_flags & DPA_IPSEC_HDR_COPY_DF)
+			sa->sec_desc->pdb_en.hmo_rsvd |= PDBHMO_ESP_DFBIT;
+		if (sa_params->hdr_upd_flags & DPA_IPSEC_HDR_DEC_TTL)
+			sa->sec_desc->pdb_en.hmo_rsvd |=
+					PDBHMO_ESP_ENCAP_DEC_TTL;
+	}
 	if (sa_params->use_ext_seq_num) {
 		sa->sec_desc->pdb_en.seq_num_ext_hi =
 			(sa_params->start_seq_num & SEQ_NUM_HI_MASK) >> 32;
@@ -1948,7 +1957,9 @@ static int copy_sa_params_to_in_sa(struct dpa_ipsec_sa *sa,
 	sa->sec_desc->pdb_dec.seq_num =
 			sa_params->start_seq_num & SEQ_NUM_LOW_MASK;
 	sa->sec_desc->pdb_dec.options = PDBOPTS_ESP_TUNNEL |
-					PDBOPTS_ESP_OUTFMT;
+					PDBOPTS_ESP_OUTFMT |
+					PDBOPTS_ESP_VERIFY_CSUM;
+
 	if (sa_params->use_ext_seq_num) {
 		sa->sec_desc->pdb_en.seq_num_ext_hi =
 			(sa_params->start_seq_num & SEQ_NUM_HI_MASK) >> 32;
@@ -1977,6 +1988,17 @@ static int copy_sa_params_to_in_sa(struct dpa_ipsec_sa *sa,
 	if (sa->use_udp_encap)
 		sa->sec_desc->pdb_dec.hmo_ip_hdr_len += UDP_HEADER_LEN;
 
+	if (sa_params->hdr_upd_flags) {
+		if (sa_params->hdr_upd_flags & DPA_IPSEC_HDR_COPY_DSCP)
+			sa->sec_desc->pdb_dec.hmo_ip_hdr_len |=
+					PDBHMO_ESP_DIFFSERV;
+		if (sa_params->hdr_upd_flags & DPA_IPSEC_HDR_DEC_TTL)
+			sa->sec_desc->pdb_dec.hmo_ip_hdr_len |=
+					PDBHMO_ESP_DECAP_DEC_TTL;
+		if (sa_params->hdr_upd_flags & DPA_IPSEC_HDR_COPY_DF)
+			xx_pr_info("Copy DF bit not supported for inbound SAs");
+	}
+
 	memcpy(&sa->src_addr,
 	       &sa_params->sa_in_params.src_addr,
 	       sizeof(struct dpa_ipsec_ip_address));
-- 
1.7.5.4

