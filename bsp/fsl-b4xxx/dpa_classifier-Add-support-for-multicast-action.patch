From 8bf78099a8f6ab06e20c1cf44c1b3e9ca9a9ac4a Mon Sep 17 00:00:00 2001
From: Radu Bulie <radu.bulie@freescale.com>
Date: Fri, 7 Dec 2012 23:11:06 +0000
Subject: [PATCH 438/518] dpa_classifier: Add support for multicast action

This patch adds the multicast entry type to classifier component.

Signed-off-by: Radu Bulie <radu.bulie@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c   |   47 +++++++++++++++++---
 .../staging/fsl_dpa_offload/dpa_classifier_ioctl.h |    3 +-
 .../staging/fsl_dpa_offload/wrp_dpa_classifier.c   |    4 ++
 3 files changed, 47 insertions(+), 7 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 57d17807..9a321fa 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -2895,6 +2895,7 @@ static int action_to_next_engine_params(const struct dpa_cls_tbl_action *action,
 				t_Handle distribution)
 {
 	struct dpa_cls_table *next_table;
+	struct dpa_cls_mcast_group *pgroup;
 
 	dpa_cls_dbg(("DEBUG: dpa_classifier %s (%d) -->\n", __func__,
 		__LINE__));
@@ -2993,6 +2994,40 @@ static int action_to_next_engine_params(const struct dpa_cls_tbl_action *action,
 			(t_Handle)next_table->params.cc_node;
 
 		break;
+	case DPA_CLS_TBL_ACTION_MCAST:
+		if (action->mcast_params.hmd != DPA_OFFLD_DESC_NONE) {
+			if (!hmd) {
+				pr_err("ERROR: %s, %s (%d): Header "
+					"manipulations are not allowed on this "
+					"action.\n", __FILE__, __func__,
+					__LINE__);
+				return -EINVAL;
+			}
+			next_engine_params->h_Manip = (t_Handle)
+			dpa_classif_hm_lock_chain(action->enq_params.hmd);
+			if (!next_engine_params->h_Manip) {
+				pr_err("ERROR: %s, %s (%d): Failed to attach "
+					"HM op hmd=%d to classification entry.",
+					__FILE__, __func__, __LINE__,
+					action->enq_params.hmd);
+				return -EINVAL;
+			}
+
+			*hmd = action->enq_params.hmd;
+		} else
+			next_engine_params->h_Manip = NULL;
+		next_engine_params->nextEngine = e_FM_PCD_FR;
+		pgroup = desc_to_object(&mcast_grp_array,
+					action->mcast_params.grpd);
+		if (!pgroup) {
+			pr_err("ERROR: %s, %s (%d): No such group (grpd=%d).\n",
+				__FILE__, __func__, __LINE__,
+				action->mcast_params.grpd);
+			return -EINVAL;
+		}
+
+		next_engine_params->params.frParams.h_FrmReplic = pgroup->group;
+		break;
 	default:
 		pr_err("ERROR: %s, %s (%d): Unsupported DPA Classifier action "
 			"type (%d).\n", __FILE__, __func__, __LINE__,
@@ -6089,14 +6124,14 @@ int dpa_classif_mcast_create_group(
 	t_FmPcdCcNextEngineParams		*next_engine_params;
 
 	if (!group_params) {
-		pr_err("\nERROR: %s, %s (%d): Group params is NULL.\n",
-			__FILE__, __func__, __LINE__);
+		pr_err("\nERROR: %s, %s (%d): Invalid value for group "
+			"params.\n", __FILE__, __func__, __LINE__);
 		err = -EINVAL;
 		return err;
 	}
 
 	if (!grpd) {
-		pr_err("\nERROR: %s, %s (%d): Group desc is NULL\n",
+		pr_err("\nERROR: %s, %s (%d): Invalid group desc\n",
 			__FILE__, __func__, __LINE__);
 		err = -EINVAL;
 		return err;
@@ -6270,13 +6305,13 @@ int dpa_classif_mcast_add_member(int grpd,
 	}
 
 	if (!member_params) {
-		pr_err("\nERROR: %s, %s (%d): Member params is NULL.\n",
-			__FILE__, __func__, __LINE__);
+		pr_err("\nERROR: %s, %s (%d): Invalid value for member "
+			"params.\n", __FILE__, __func__, __LINE__);
 		return -EINVAL;
 	}
 
 	if (!membrd) {
-		pr_err("\nERROR: %s, %s (%d): Member desc is NULL.\n",
+		pr_err("\nERROR: %s, %s (%d): Invalid member desc.\n",
 			__FILE__, __func__, __LINE__);
 		return -EINVAL;
 	}
diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h b/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h
index 53ca557..bbcc586 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h
@@ -229,7 +229,8 @@ struct dpa_cls_compat_tbl_action {
 	bool				enable_statistics;
 	union {
 		struct dpa_cls_compat_tbl_enq_action_desc enq_params;
-		struct dpa_cls_tbl_next_table_desc	  next_table_params;
+		struct dpa_cls_tbl_next_table_desc	next_table_params;
+		struct dpa_cls_tbl_mcast_group_desc	mcast_params;
 	};
 };
 
diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
index 58ef003..f069a90 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
@@ -2377,6 +2377,10 @@ int dpa_cls_tbl_action_params_compatcpy(
 		kparam->next_table_params.next_td =
 				uparam->next_table_params.next_td;
 		break;
+	case DPA_CLS_TBL_ACTION_MCAST:
+		kparam->mcast_params.grpd = uparam->mcast_params.grpd;
+		kparam->mcast_params.hmd = uparam->mcast_params.hmd;
+		break;
 	default:
 		break;
 	}
-- 
1.7.5.4

