From 4c13f4677d9781f707b5ea68b2cea38836faae83 Mon Sep 17 00:00:00 2001
From: Alexandru BADICIOIU <alexandru.badicioiu@freescale.com>
Date: Thu, 17 May 2012 15:55:21 +0000
Subject: [PATCH 182/518] dpa_offload use case : add module entry/exit points
 and common header files

Signed-off-by: Alexandru BADICIOIU <alexandru.badicioiu@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/usecases/common.h  |   51 ++++++++
 drivers/staging/fsl_dpa_offload/usecases/main.c    |  109 ++++++++++++++++
 .../fsl_dpa_offload/usecases/platform_defs.h       |  133 ++++++++++++++++++++
 .../staging/fsl_dpa_offload/usecases/ports_conf.h  |   53 ++++++++
 4 files changed, 346 insertions(+), 0 deletions(-)
 create mode 100644 drivers/staging/fsl_dpa_offload/usecases/common.h
 create mode 100644 drivers/staging/fsl_dpa_offload/usecases/main.c
 create mode 100644 drivers/staging/fsl_dpa_offload/usecases/platform_defs.h
 create mode 100644 drivers/staging/fsl_dpa_offload/usecases/ports_conf.h

diff --git a/drivers/staging/fsl_dpa_offload/usecases/common.h b/drivers/staging/fsl_dpa_offload/usecases/common.h
new file mode 100644
index 0000000..3a48a68
--- /dev/null
+++ b/drivers/staging/fsl_dpa_offload/usecases/common.h
@@ -0,0 +1,51 @@
+/* Copyright 2008-2012 Freescale Semiconductor, Inc.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ *       notice, this list of conditions and the following disclaimer in the
+ *       documentation and/or other materials provided with the distribution.
+ *     * Neither the name of Freescale Semiconductor nor the
+ *       names of its contributors may be used to endorse or promote products
+ *       derived from this software without specific prior written permission.
+ *
+ *
+ * ALTERNATIVELY, this software may be distributed under the terms of the
+ * GNU General Public License ("GPL") as published by the Free Software
+ * Foundation, either version 2 of that License or (at your option) any
+ * later version.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Freescale Semiconductor ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL Freescale Semiconductor BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef _COMMON_H_
+#define _COMMON_H_
+
+#include <linux/kernel.h>
+#include "lnxwrp_fm.h"
+
+t_LnxWrpFmDev *get_fm(int fm_idx);
+t_LnxWrpFmPortDev *get_fm_port(int fm_idx,
+				int port_idx,
+				e_FmPortType port_type);
+
+extern struct fmc_model_t cmodel;
+
+extern t_Handle cc_in_rx;
+extern t_Handle cc_flow_id;
+extern t_Handle cc_out_pre_enc[2];
+
+extern int dpa_ipsec_id;
+
+#endif
diff --git a/drivers/staging/fsl_dpa_offload/usecases/main.c b/drivers/staging/fsl_dpa_offload/usecases/main.c
new file mode 100644
index 0000000..23cc1e0
--- /dev/null
+++ b/drivers/staging/fsl_dpa_offload/usecases/main.c
@@ -0,0 +1,109 @@
+/* Copyright 2008-2012 Freescale Semiconductor, Inc.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ *       notice, this list of conditions and the following disclaimer in the
+ *       documentation and/or other materials provided with the distribution.
+ *     * Neither the name of Freescale Semiconductor nor the
+ *       names of its contributors may be used to endorse or promote products
+ *       derived from this software without specific prior written permission.
+ *
+ *
+ * ALTERNATIVELY, this software may be distributed under the terms of the
+ * GNU General Public License ("GPL") as published by the Free Software
+ * Foundation, either version 2 of that License or (at your option) any
+ * later version.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Freescale Semiconductor ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL Freescale Semiconductor BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/fsl_bman.h>
+#include <linux/fsl_qman.h>
+
+#include "ports_conf.h"
+#include "common.h"
+
+static int dl_loop;
+module_param(dl_loop, int, 0);
+MODULE_PARM_DESC(dl_loop, "\tEnable MAC loopback for DL port\n");
+
+int config_loopback(int fm_id, int port_id, int set);
+int check_ports(void);
+int genl_ctl_init(void);
+int genl_ctl_exit(void);
+void fmc_cleanup(void);
+void cleanup_xfrm_km(void);
+void cleanup_ipsec_offload(int dpa_ipsec_id);
+
+
+int __init usecase_init(void)
+{
+	int ret = 0;
+
+	ret = check_ports();
+	if (ret < 0)
+		return ret;
+
+	if (dl_loop) {
+		ret = config_loopback(FM, DL_RX, 1);
+		if (ret) {
+			pr_err("%s(%d): Cannot set loopback on DL_RX port!\n",
+				__func__, __LINE__);
+			goto dl_loop_exit;
+		}
+		pr_info("DL_RX port MAC loopback set\n");
+	}
+
+	ret = genl_ctl_init();
+	if (ret < 0) {
+		pr_err("%s(%d): Failed to register DPA_IPACC genl family\n",
+			__func__, __LINE__);
+		goto dl_loop_exit;
+	}
+	pr_info("Registered DPA_IPACC genl family\n");
+
+	return 0;
+
+dl_loop_exit:
+	config_loopback(FM, DL_RX, 0);
+	return ret;
+}
+
+
+void __exit usecase_exit(void)
+{
+	int ret;
+
+	pr_info("Unregistering DPA_IPACC genl family\n");
+	ret = genl_ctl_exit();
+	if (ret)
+		pr_err("%s(%d): Failed to unregister DPA_IPACC genl family %d",
+			__func__, __LINE__, ret);
+
+	if (dl_loop) {
+		pr_info("Reseting DL_RX port MAC loopback\n");
+		config_loopback(FM, DL_RX, 0);
+	}
+	cleanup_xfrm_km();
+	cleanup_ipsec_offload(dpa_ipsec_id);
+	fmc_cleanup();
+}
+
+module_init(usecase_init);
+module_exit(usecase_exit);
+
+MODULE_LICENSE("GPL");
diff --git a/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h b/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h
new file mode 100644
index 0000000..91259b0
--- /dev/null
+++ b/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h
@@ -0,0 +1,133 @@
+/* Copyright 2008-2012 Freescale Semiconductor, Inc.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ *       notice, this list of conditions and the following disclaimer in the
+ *       documentation and/or other materials provided with the distribution.
+ *     * Neither the name of Freescale Semiconductor nor the
+ *       names of its contributors may be used to endorse or promote products
+ *       derived from this software without specific prior written permission.
+ *
+ *
+ * ALTERNATIVELY, this software may be distributed under the terms of the
+ * GNU General Public License ("GPL") as published by the Free Software
+ * Foundation, either version 2 of that License or (at your option) any
+ * later version.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Freescale Semiconductor ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL Freescale Semiconductor BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef _PLATFORM_H_
+#define _PLATFORM_H_
+
+/* P4080 refman dTDEC */
+#define MACCFG1_LOOPBACK				0x00000100
+#define FM_1GMAC_CMD_CONF_CTRL_OFFSET	0x100
+
+
+#define SOC_BASE					0xffe000000
+/* P4080 refman MPIC section */
+#define IIDR_BASE					0x50210
+#define JR0_INT_NUM					72
+#define JR_INT_NUM(n)					(JR0_INT_NUM + n)
+#define IIDR(n)					(IIDR_BASE + n*0x20)
+
+#ifdef CONFIG_P4080_BUILD
+#define QM_CHANNEL_FM0_SP_OH	qm_channel_fman0_sp5
+#define QM_CHANNEL_FM1_SP_OH	qm_channel_fman1_sp5
+#define QM_CHANNEL_FM0_SP_ETH	qm_channel_fman0_sp1
+#define QM_CHANNEL_FM1_SP_ETH	qm_channel_fman1_sp1
+
+#elif defined CONFIG_P3041_BUILD
+#define QM_CHANNEL_FM0_SP_OH	qm_channel_fman0_sp6
+#define QM_CHANNEL_FM1_SP_OH	qm_channel_fman1_sp6
+#define QM_CHANNEL_FM0_SP_ETH	qm_channel_fman0_sp1
+#define QM_CHANNEL_FM1_SP_ETH	qm_channel_fman1_sp1
+
+#elif defined CONFIG_P5020_BUILD
+#define QM_CHANNEL_FM0_SP_OH	qm_channel_fman0_sp6
+#define QM_CHANNEL_FM1_SP_OH	qm_channel_fman1_sp6
+#define QM_CHANNEL_FM0_SP_ETH	qm_channel_fman0_sp1
+#define QM_CHANNEL_FM1_SP_ETH	qm_channel_fman1_sp1
+#else
+	#error "Build not defined : P4080_BUILD P5020_BUILD P3041_BUILD"
+#endif
+
+
+/*
+ * Return the channel dedicated to a specific 1GB port of the first FMan
+ *
+ * @eth_port_index : index of the ethernet port to use. Valid values: [0..3]
+ */
+#ifndef ETH_PORT_CHANNEL_FM0
+#define ETH_PORT_CHANNEL_FM0(eth_port_index) \
+	(QM_CHANNEL_FM0_SP_ETH + (eth_port_index))
+#endif
+
+/*
+ * Return the channel dedicated to a specific 1GB port of the first FMan
+ *
+ * @eth_port_index : index of the ethernet to use. Valid values: [0..3]
+ */
+#ifndef ETH_PORT_CHANNEL_FM1
+#define ETH_PORT_CHANNEL_FM1(eth_port_index) \
+	(QM_CHANNEL_FM1_SP_ETH + (eth_port_index))
+#endif
+
+/*
+ * Return the channel dedicated to a specific OH port of the first FMan
+ *
+ * @oh_port_index : index of the offline port to use. Valid values: [1..6]
+ * (OH port 0 is reserved by FMD for Host commands)
+ */
+#ifndef OH_PORT_CHANNEL_FM0
+#define OH_PORT_CHANNEL_FM0(oh_port_index) \
+	(QM_CHANNEL_FM0_SP_OH + (oh_port_index))
+#endif
+/**
+ * Return the channel dedicated to a specific OH port of the second FMan
+ *
+ * @oh_port_index : index of the offline port to use. Valid values: [1..6]
+ * (port 0 is reserved by FMD for Host commands)
+ */
+#ifndef OH_PORT_CHANNEL_FM1
+#define OH_PORT_CHANNEL_FM1(oh_port_index) \
+	(QM_CHANNEL_FM1_SP_OH + (oh_port_index))
+#endif
+
+
+#ifndef OH_PORT_CHANNEL
+#define OH_PORT_CHANNEL(fm, oh_port_index) \
+	((fm == 1) ? OH_PORT_CHANNEL_FM1(oh_port_index) : \
+		OH_PORT_CHANNEL_FM0(oh_port_index))
+#endif
+
+#ifndef ETH_PORT_CHANNEL
+#define ETH_PORT_CHANNEL(fm, eth_port_index) \
+	((fm == 1) ? ETH_PORT_CHANNEL_FM1(eth_port_index) : \
+		ETH_PORT_CHANNEL_FM0(eth_port_index))
+#endif
+
+/**
+ * Return the channel dedicated to a software portal.
+ *
+ * @sw_portal_index Valid values: [0..7]
+ */
+#ifndef SW_PORTAL_CHANNEL
+#define SW_PORTAL_CHANNEL(sw_portal_index) \
+	(qm_channel_swportal0 + (sw_portal_index))
+#endif
+
+#endif /*_PLATFORM_H_*/
diff --git a/drivers/staging/fsl_dpa_offload/usecases/ports_conf.h b/drivers/staging/fsl_dpa_offload/usecases/ports_conf.h
new file mode 100644
index 0000000..fd4d845
--- /dev/null
+++ b/drivers/staging/fsl_dpa_offload/usecases/ports_conf.h
@@ -0,0 +1,53 @@
+/* Copyright 2008-2012 Freescale Semiconductor, Inc.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ *       notice, this list of conditions and the following disclaimer in the
+ *       documentation and/or other materials provided with the distribution.
+ *     * Neither the name of Freescale Semiconductor nor the
+ *       names of its contributors may be used to endorse or promote products
+ *       derived from this software without specific prior written permission.
+ *
+ *
+ * ALTERNATIVELY, this software may be distributed under the terms of the
+ * GNU General Public License ("GPL") as published by the Free Software
+ * Foundation, either version 2 of that License or (at your option) any
+ * later version.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Freescale Semiconductor ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL Freescale Semiconductor BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef _PORTS_H_
+#define _PORTS_H_
+
+/* In this usecase all ports are on the same FM */
+#if defined CONFIG_P4080_BUILD
+#define FM			1
+#define DL_RX			1
+#define UL_RX			0
+#elif defined CONFIG_P3041_BUILD
+#define FM			0
+#define DL_RX			3
+#define UL_RX			4
+#elif defined CONFIG_P5020_BUILD
+#define FM			0
+#define DL_RX			3
+#define UL_RX			4
+#endif
+#define DL_POST_IPSEC_OH	1
+#define UL_PRE_IPSEC_OH	2
+#define UL_POST_IPSEC_OH	3
+
+#endif
-- 
1.7.5.4

