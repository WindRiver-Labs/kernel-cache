From 27f8b7f640613718d0fa9da0a31bdb4d6456d226 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Fri, 9 Nov 2012 19:07:12 +0000
Subject: [PATCH 385/518] dpa_classifier: Bug fix. Avoid adding header manip
 nodes to a NULL chain

In function "import_hm_nodes_to_chain" header manip nodes are processed
and they are appended to a header manipulation chain. However, if the
header manipulation op is not linked to another header manip chain, the
"chain" pointer may remain NULL and a crash occurs when the new HM node
is appended to this chain. This fix avoids this crash by detecting this
situation and, instead of appending the HM node to the empty chain,
the chain pointer is updated.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c |   14 ++++++++------
 1 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 1a7e7dd..8c4be82 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -3512,10 +3512,11 @@ static int import_hm_nodes_to_chain(void * const *node_array,
 				hm->hm_node[j]->node = node_array[i];
 				INIT_LIST_HEAD(&hm->hm_node[j]->list_node);
 
-				/* Add this new node to the HM chain: */
+			/* Add this new node to the HM chain: */
+			if (chain)
 				list_add_tail(&hm->hm_node[j]->list_node,
-						chain);
-				chain = &hm->hm_node[j++]->list_node;
+					chain);
+			chain = &hm->hm_node[j++]->list_node;
 			}
 		}
 
@@ -3555,11 +3556,12 @@ static int import_hm_nodes_to_chain(void * const *node_array,
 			hm->hm_node[j]->node = node_array[i];
 			INIT_LIST_HEAD(&hm->hm_node[j]->list_node);
 
-			if (j <= 0)
-				chain = &hm->hm_node[j]->list_node;
-			else
+			if (chain)
 				list_add_tail(&hm->hm_node[j]->list_node,
 						chain);
+			else
+				chain = &hm->hm_node[j]->list_node;
+
 			j++;
 		}
 	}
-- 
1.7.5.4

