From 7619b40e4bca4910125166680c227c87e0b437d8 Mon Sep 17 00:00:00 2001
From: Anca-Jeanina Floarea <anca.floarea@freescale.com>
Date: Wed, 8 Aug 2012 18:17:40 +0000
Subject: [PATCH 265/518] dpa_stats: Fix improper use of counter identifier

The cnt_id parameter of structure dpa_stats_cnt_cb and
req_id of structure dpa_stats_req_cb were improperly
set and checked against a negative value.

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_stats.c |   27 ++++++++++++++++++---------
 drivers/staging/fsl_dpa_offload/dpa_stats.h |    4 ++--
 2 files changed, 20 insertions(+), 11 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_stats.c b/drivers/staging/fsl_dpa_offload/dpa_stats.c
index 836c85b..9902a34 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_stats.c
@@ -171,9 +171,9 @@ static int put_cnt(struct dpa_stats *dpa_stats, struct dpa_stats_cnt_cb *cnt_cb)
 	dpa_stats->used_cnt_ids[cnt_cb->cnt_index] =
 						DPA_OFFLD_INVALID_OBJECT_ID;
 
-	/* Clear all 'cnt_cb' information */
-	cnt_cb->cnt_index = DPA_OFFLD_INVALID_OBJECT_ID;
-	cnt_cb->cnt_id = DPA_OFFLD_INVALID_OBJECT_ID;
+	/* Clear all 'cnt_cb' information by setting them to a maximum value */
+	cnt_cb->cnt_index = DPA_STATS_MAX_NUM_OF_COUNTERS;
+	cnt_cb->cnt_id = DPA_STATS_MAX_NUM_OF_COUNTERS;
 
 	return 0;
 }
@@ -193,9 +193,9 @@ static int put_req(struct dpa_stats *dpa_stats, struct dpa_stats_req_cb *req_cb)
 	dpa_stats->used_req_ids[req_cb->req_index] =
 						DPA_OFFLD_INVALID_OBJECT_ID;
 
-	/* Clear all 'cnt_cb' information */
-	req_cb->req_index = DPA_OFFLD_INVALID_OBJECT_ID;
-	req_cb->req_id = DPA_OFFLD_INVALID_OBJECT_ID;
+	/* Clear all 'req_cb' information by setting them to a maximum value */
+	req_cb->req_index = DPA_STATS_MAX_NUM_OF_REQUESTS;
+	req_cb->req_id = DPA_STATS_MAX_NUM_OF_REQUESTS;
 
 	return 0;
 }
@@ -2418,7 +2418,8 @@ int dpa_stats_modify_class_counter(int dpa_stats_cnt_id,
 	cnt_cb = &dpa_stats->cnts_cb[dpa_stats_cnt_id];
 
 	/* Validity check for this Counter */
-	if (cnt_cb->cnt_index == DPA_OFFLD_INVALID_OBJECT_ID) {
+	if (dpa_stats->used_cnt_ids[cnt_cb->cnt_index] ==
+			DPA_OFFLD_INVALID_OBJECT_ID) {
 		pr_err("Invalid Counter id %d provided\n", dpa_stats_cnt_id);
 		return -EINVAL;
 	}
@@ -2471,8 +2472,9 @@ int dpa_stats_remove_counter(int dpa_stats_cnt_id)
 	/* Get counter control block */
 	cnt_cb = &dpa_stats->cnts_cb[dpa_stats_cnt_id];
 
-	/* Validity check for this Counter */
-	if (cnt_cb->cnt_index == DPA_OFFLD_INVALID_OBJECT_ID) {
+	/* Validity check for this counter */
+	if (dpa_stats->used_cnt_ids[cnt_cb->cnt_index] ==
+			DPA_OFFLD_INVALID_OBJECT_ID) {
 		pr_err("Invalid Counter id %d provided\n", dpa_stats_cnt_id);
 		return -EINVAL;
 	}
@@ -2535,6 +2537,13 @@ int dpa_stats_get_counters(struct dpa_stats_cnt_request_params params,
 		/* Get counter's control block */
 		cnt_cb = &(dpa_stats->cnts_cb[cnt_id]);
 
+		/* Check if counter control block is initialized */
+		if (dpa_stats->used_cnt_ids[cnt_cb->cnt_index] ==
+				DPA_OFFLD_INVALID_OBJECT_ID) {
+			pr_err("Invalid Counter id %d provided\n", cnt_id);
+			return -EINVAL;
+		}
+
 		*cnts_len += cnt_cb->bytes_num;
 	}
 
diff --git a/drivers/staging/fsl_dpa_offload/dpa_stats.h b/drivers/staging/fsl_dpa_offload/dpa_stats.h
index df02c3d..598b822 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_stats.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_stats.h
@@ -52,10 +52,10 @@ struct dpa_stats {
 	struct dpa_stats_params config;	/* Configuration parameters as
 					provided in dap_stats_init */
 	struct cq *cnt_id_cq;	/* Circular Queue with ids for stats counters */
-	uint32_t *used_cnt_ids;	/* Counter ids used by this dpa_stats instance*/
+	int *used_cnt_ids;	/* Counter ids used by this dpa_stats instance*/
 	struct dpa_stats_cnt_cb *cnts_cb; /* Array of counters control blocks */
 
-	uint32_t *used_req_ids;	/* Request ids used by this dpa_stats instance*/
+	int *used_req_ids;	/* Request ids used by this dpa_stats instance*/
 	struct dpa_stats_req_cb *reqs_cb; /* Array of counter requests */
 	struct cq *req_id_cq; /* Circular Queue with ids for counters request */
 
-- 
1.7.5.4

