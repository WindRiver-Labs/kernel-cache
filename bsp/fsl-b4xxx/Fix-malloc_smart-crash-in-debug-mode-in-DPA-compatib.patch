From 8b7379307ff79dc7461ff29c7ffd5e0a962966d3 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Fri, 9 Mar 2012 20:14:12 +0000
Subject: [PATCH 109/518] Fix malloc_smart crash in debug mode in DPA
 compatibility layer

The function xx_malloc_smart_debug was using the dpa_offld_malloc
function to allocate the memory block instead of dpa_offld_malloc_smart
function. This was causing a nasty crash when running in DPA memory
debug mode.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
Signed-off-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_compat.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_compat.c b/drivers/staging/fsl_dpa_offload/dpa_compat.c
index a416d0d..c3f01ad 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_compat.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_compat.c
@@ -217,7 +217,10 @@ void *xx_malloc_smart_debug(size_t	size,
 		return NULL;
 
 	memblk->size	= size;
-	memblk->mem	= dpa_offld_malloc(size, zero);
+	memblk->mem	= dpa_offld_malloc_smart(size,
+						mem_partition_id,
+						alignment,
+						zero);
 	if (!memblk->mem) {
 		dpa_offld_free(memblk);
 		return NULL;
-- 
1.7.5.4

