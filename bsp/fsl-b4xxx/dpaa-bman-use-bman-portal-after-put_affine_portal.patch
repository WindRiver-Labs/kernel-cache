From bfc9066590135e8347eecbd620fe1231a8831661 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Wed, 27 Mar 2013 09:39:19 +0800
Subject: [PATCH 517/518] dpaa/bman: use bman portal after put_affine_portal()

A criteria for calling bman_create_affine_portal() is that
we're already affine to the cpu and won't schedule onto another cpu.
This means we can put_affine_portal() and yet continue to use
"portal", which in turn means aspects of this routine can sleep.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_qbman/bman_high.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_high.c b/drivers/staging/fsl_qbman/bman_high.c
index 1a8c07b..f53084e 100644
--- a/drivers/staging/fsl_qbman/bman_high.c
+++ b/drivers/staging/fsl_qbman/bman_high.c
@@ -303,13 +303,17 @@ struct bman_portal *bman_create_affine_portal(
 			const struct bm_portal_config *config)
 {
 	struct bman_portal *portal = get_raw_affine_portal();
+	/* A criteria for calling this function (from bman_driver.c) is that
+	 * we're already affine to the cpu and won't schedule onto another cpu.
+	 * This means we can put_affine_portal() and yet continue to use
+	 * "portal", which in turn means aspects of this routine can sleep. */
+	put_affine_portal();
 	portal = bman_create_portal(portal, config);
 	if (portal) {
 		spin_lock(&affine_mask_lock);
 		cpumask_set_cpu(config->public_cfg.cpu, &affine_mask);
 		spin_unlock(&affine_mask_lock);
 	}
-	put_affine_portal();
 	return portal;
 }
 
-- 
1.7.5.4

