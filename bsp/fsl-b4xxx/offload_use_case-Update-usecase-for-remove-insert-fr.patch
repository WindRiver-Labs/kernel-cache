From 7564ebad84ae4afce9e05e8e7886e05dc91e860f Mon Sep 17 00:00:00 2001
From: Radu-Andrei BULIE <radu.bulie@freescale.com>
Date: Wed, 12 Sep 2012 21:26:36 +0000
Subject: [PATCH 324/518] offload_use_case: Update usecase for remove insert
 frag vlan and nat header manip operations

Removed vpri update from usecase according to updates in FMD - only two
hm operations in chain are supported (insert and remove in this case).
Removed frag manip operation according to last modifications in FMD - frag
manip can not be chained with other operations.
Added resources parameters for insert, remove and nat operations. These
manips are prealocated and their params are modified at runtime by
header manip API. These handles are received from userspace through
netlink.

Signed-off-by: Radu-Andrei BULIE <radu.bulie@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 .../staging/fsl_dpa_offload/usecases/genl_ctl.c    |   12 +++
 .../staging/fsl_dpa_offload/usecases/genl_ctl.h    |   10 ++-
 .../staging/fsl_dpa_offload/usecases/ipsec_init.c  |   76 +++++++-------------
 3 files changed, 47 insertions(+), 51 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
index eb4dcf9..293569b 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
+++ b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
@@ -388,6 +388,18 @@ static int put_fm_params(struct sk_buff *skb_2, struct genl_info *info)
 				fm_params.cc_out_post_enc[i] = ptr;
 			}
 		}
+		fm_params.remove_eth_hm = compat_get_id2ptr(
+						compat_fm_params.remove_eth_hm,
+						FM_MAP_TYPE_PCD_NODE);
+		fm_params.insert_eth_hm = compat_get_id2ptr(
+						compat_fm_params.insert_eth_hm,
+						FM_MAP_TYPE_PCD_NODE);
+		fm_params.nat_ip_hm = compat_get_id2ptr(
+						compat_fm_params.nat_ip_hm,
+						FM_MAP_TYPE_PCD_NODE);
+		fm_params.nat_udp_hm = compat_get_id2ptr(
+						compat_fm_params.nat_udp_hm,
+						FM_MAP_TYPE_PCD_NODE);
 
 		fm_params.ip4_num_keys = compat_fm_params.ip4_num_keys;
 		fm_params.ip6_num_keys = compat_fm_params.ip6_num_keys;
diff --git a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h
index d84907c..3729c0a 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h
+++ b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h
@@ -94,8 +94,6 @@ struct ipsec_uparms {
 	__u32 outb_pre_ipsec_oh_tx_fqid;
 	u8 dmac[ETH_ALEN];
 	u8 smac[ETH_ALEN];
-	u8 vlan_priority;
-	__u16 mtu_post_enc;
 	__u32 ip_src_ob_nat;
 	__u32 ip_dst_ob_nat;
 	__u32 udp_dport_ob_nat;
@@ -125,6 +123,10 @@ struct compat_ipsec_fm_uparms {
 	compat_uptr_t cc_out_pre_enc[DPA_IPSEC_MAX_SUPPORTED_PROTOS];
 	compat_uptr_t cc_out_post_enc[MAX_POST_ENC_CCNODES];
 	compat_uptr_t cc_out_rx_pre_enc;
+	compat_uptr_t nat_ip_hm;
+	compat_uptr_t nat_udp_hm;
+	compat_uptr_t remove_eth_hm;
+	compat_uptr_t insert_eth_hm;
 	int ip4_num_keys;
 	int ip6_num_keys;
 	int nat_num_keys;
@@ -141,6 +143,10 @@ struct ipsec_fm_uparms {
 	void *cc_out_pre_enc[DPA_IPSEC_MAX_SUPPORTED_PROTOS];
 	void *cc_out_post_enc[MAX_POST_ENC_PROTOS];
 	void *cc_out_rx_pre_enc;
+	void *nat_ip_hm;
+	void *nat_udp_hm;
+	void *remove_eth_hm;
+	void *insert_eth_hm;
 	int ip4_num_keys;
 	int ip6_num_keys;
 	int nat_num_keys;
diff --git a/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c b/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c
index eac9c0d..3304bdf 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c
+++ b/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c
@@ -130,7 +130,7 @@ static int outb_post_enc_ccnode_num_entries[] = IPSEC_OUT_POST_ENC_NUM_ENTRIES;
 static int outb_post_enc_ccnode_key_size[] = IPSEC_OUT_POST_ENC_KEY_SIZE;
 static struct dpa_ipsec_params ipsec_params;
 static int ipsec_initialized = 0;
-static int hmd_ins, hmd_rm, hmd_vlan, hmd_frag, hmd_nat;
+static int hmd_ins, hmd_rm, hmd_nat;
 
 extern struct ipsec_fm_uparms fm_params;
 
@@ -298,17 +298,17 @@ static int create_hm_outb_post_enc(int *outb_hmd, struct ipsec_uparms *params)
 {
 	struct dpa_cls_hm_remove_params rm_params;
 	struct dpa_cls_hm_insert_params ins_params;
-	struct dpa_cls_hm_vlan_params vlan_params;
-	struct dpa_cls_hm_update_params update_params;
+	struct dpa_cls_hm_remove_resources rm_res;
+	struct dpa_cls_hm_insert_resources ins_res;
+	struct dpa_cls_hm_remove_resources *p_rm_res = NULL;
+	struct dpa_cls_hm_insert_resources *p_ins_res = NULL;
 	t_LnxWrpFmDev *fm_dev;
 	struct file *fm_pcd_file;
 	unsigned char data[2 * ETH_ALEN];
 	int err = 0;
 
-	hmd_frag =	DPA_OFFLD_DESC_NONE;
 	hmd_ins  =	DPA_OFFLD_DESC_NONE;
 	hmd_rm   =	DPA_OFFLD_DESC_NONE;
-	hmd_vlan =	DPA_OFFLD_DESC_NONE;
 
 	memset(&rm_params, 0, sizeof(struct dpa_cls_hm_remove_params));
 	memset(&ins_params, 0, sizeof(struct dpa_cls_hm_insert_params));
@@ -335,53 +335,27 @@ static int create_hm_outb_post_enc(int *outb_hmd, struct ipsec_uparms *params)
 	ins_params.custom.data = data;
 	ins_params.fm_pcd = fm_dev->h_PcdDev;
 
-	/* VLAN priority update operation */
-	memset(&vlan_params, 0, sizeof(struct dpa_cls_hm_vlan_params));
-	vlan_params.fm_pcd = fm_dev->h_PcdDev;
-	vlan_params.type = DPA_CLS_HM_VLAN_EGRESS;
-	vlan_params.egress.update_op = DPA_CLS_HM_VLAN_UPDATE_VPri;
-	vlan_params.egress.update.vpri = params->vlan_priority;
-
-	/* Update - fragmentation operation */
-	memset(&update_params, 0, sizeof(struct dpa_cls_hm_update_params));
-	update_params.fm_pcd =  fm_dev->h_PcdDev;
-	update_params.op_flags = DPA_CLS_HM_UPDATE_NONE;
-	update_params.ip_frag_params.mtu = params->mtu_post_enc;
-	update_params.ip_frag_params.scratch_bpid = params->ipf_bpid;
-	update_params.ip_frag_params.df_action =
-					DPA_CLS_HM_DF_ACTION_FRAG_ANYWAY;
-
-	if (params->mtu_post_enc) {
-		err = dpa_classif_set_update_hm(&update_params,
-						DPA_OFFLD_DESC_NONE,
-						&hmd_frag, false, NULL);
-
-		if (err < 0) {
-			pr_err("%d - Failed to create frag hm operation\n",
-				err);
-			return err;
-		}
-	}
+	memset(&ins_res, 0, sizeof(struct dpa_cls_hm_insert_resources));
+	memset(&rm_res, 0, sizeof(struct dpa_cls_hm_remove_resources));
 
-	err = dpa_classif_set_vlan_hm(&vlan_params, hmd_frag,
-					&hmd_vlan, false, NULL);
+	rm_res.remove_node  =	fm_params.remove_eth_hm;
+	ins_res.insert_node =	fm_params.insert_eth_hm;
 
-	if (err < 0) {
-		pr_err("%d - Failed to create vlan hm update vpri operation\n",
-			err);
-		return err;
-	}
+	if (rm_res.remove_node)
+		p_rm_res = &rm_res;
 
+	if (ins_res.insert_node)
+		p_ins_res = &ins_res;
 
-	err = dpa_classif_set_insert_hm(&ins_params, hmd_vlan,
-			&hmd_ins, false, NULL);
+	err = dpa_classif_set_insert_hm(&ins_params, DPA_OFFLD_DESC_NONE,
+					&hmd_ins, false, p_ins_res);
 	if (err < 0) {
 		pr_err("%d - Failed to create insert hm operation\n", err);
 		return err;
 	}
 
 	err = dpa_classif_set_remove_hm(&rm_params, hmd_ins, &hmd_rm, true,
-					NULL);
+					p_rm_res);
 
 	if (err < 0) {
 		pr_err("%d - Failed to create remove hm operation\n", err);
@@ -396,6 +370,8 @@ static int create_hm_outb_post_enc(int *outb_hmd, struct ipsec_uparms *params)
 static int create_hm_outb_pre_enc(int *outb_hmd, struct ipsec_uparms *params)
 {
 	struct dpa_cls_hm_nat_params nat_params;
+	struct dpa_cls_hm_nat_resources nat_res;
+	struct dpa_cls_hm_nat_resources *p_nat_res = NULL;
 	t_LnxWrpFmDev *fm_dev;
 	struct file *fm_pcd_file;
 	int err = 0;
@@ -423,8 +399,16 @@ static int create_hm_outb_pre_enc(int *outb_hmd, struct ipsec_uparms *params)
 	nat_params.nat.dip.addr.ipv4.word = params->ip_dst_ob_nat;
 	nat_params.dport = params->udp_dport_ob_nat;
 
+	memset(&nat_res, 0, sizeof(struct dpa_cls_hm_nat_resources));
+
+	nat_res.l3_update_node = fm_params.nat_ip_hm;
+	nat_res.l4_update_node = fm_params.nat_udp_hm;
+
+	if (nat_res.l3_update_node || nat_res.l4_update_node)
+		p_nat_res = &nat_res;
+
 	err = dpa_classif_set_nat_hm(&nat_params, DPA_OFFLD_DESC_NONE,
-					&hmd_nat, true, NULL);
+					&hmd_nat, true, p_nat_res);
 	if (err < 0) {
 		pr_err("%d - Failed to create nat hm operation\n", err);
 		return err;
@@ -700,12 +684,6 @@ int cleanup_ipsec_offload(int dpa_ipsec_id)
 	if (hmd_nat != DPA_OFFLD_DESC_NONE)
 		dpa_classif_free_hm(hmd_nat);
 
-	if (hmd_frag != DPA_OFFLD_DESC_NONE)
-		dpa_classif_free_hm(hmd_frag);
-
-	if (hmd_vlan != DPA_OFFLD_DESC_NONE)
-		dpa_classif_free_hm(hmd_vlan);
-
 	if (hmd_ins != DPA_OFFLD_DESC_NONE)
 		dpa_classif_free_hm(hmd_ins);
 
-- 
1.7.5.4

