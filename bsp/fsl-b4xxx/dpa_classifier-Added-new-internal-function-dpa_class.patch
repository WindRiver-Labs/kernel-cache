From 5aaf1cead65a3e0a3d709642a7c6bc01fda5d894 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Tue, 11 Sep 2012 20:01:27 +0000
Subject: [PATCH 295/518] dpa_classifier: Added new internal function -
 dpa_classif_get_frag_hm_handle

Added a new function to be used internally by the dpa_offload driver
components - dpa_classif_get_frag_hm_handle. This function searches
through a header manipulation object chain and retrieves the FMan driver
handle of the IP fragmentation header manipulation node.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c |   37 ++++++++++++++++++++++
 drivers/staging/fsl_dpa_offload/dpa_classifier.h |    8 +++++
 2 files changed, 45 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 55d2355..e91650d 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -4398,6 +4398,43 @@ void *dpa_classif_get_static_hm_handle(int hmd)
 	return hm->hm_node[0]->node;
 }
 
+void *dpa_classif_get_frag_hm_handle(int hmd)
+{
+	struct dpa_cls_hm *hm;
+	struct dpa_cls_hm_node *pcurrent;
+	void *frag_hm_handle = NULL;
+	struct list_head *hm_list_node;
+
+	if (hmd == DPA_OFFLD_DESC_NONE)
+		/* Nothing to do */
+		return NULL;
+
+	xx_sanity_check_return_value(((hmd >= 0) &&
+		(hmd < hm_array.num_descriptors)), "hmd", NULL);
+
+	if (!hm_array.object[hmd])
+		return NULL;
+
+	hm = hm_array.object[hmd];
+
+	if (hm->hm_chain) {
+		hm_list_node = hm->hm_chain;
+		do {
+			pcurrent = list_entry(hm_list_node,
+					struct dpa_cls_hm_node,
+					list_node);
+			if ((pcurrent->node) && (pcurrent->params.type ==
+							e_FM_PCD_MANIP_FRAG)) {
+				frag_hm_handle = pcurrent->node;
+				break;
+			}
+			hm_list_node = hm_list_node->next;
+		} while (hm_list_node != hm->hm_chain);
+	}
+
+	return frag_hm_handle;
+}
+
 int dpa_classif_free_hm(int hmd)
 {
 	struct dpa_cls_hm *phm;
diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.h b/drivers/staging/fsl_dpa_offload/dpa_classifier.h
index 39bb859..292e11e 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.h
@@ -552,5 +552,13 @@ int dpa_classif_import_static_hm(void *hm, int next_hmd, int *hmd);
  */
 void *dpa_classif_get_static_hm_handle(int hmd);
 
+/*
+ * Given a header manipulation object descriptor, this function searches
+ * through the header manipulation chain that this object belongs to and
+ * provides the FMan driver handle of the IP fragmentation header manipulation
+ * node.
+ */
+void *dpa_classif_get_frag_hm_handle(int hmd);
+
 
 #endif /* __DPA_CLASSIFIER_H */
-- 
1.7.5.4

