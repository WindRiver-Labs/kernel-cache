From 1b8effee4c44ccf985817b03d672086c3f26a8b1 Mon Sep 17 00:00:00 2001
From: Anca-Jeanina Floarea <anca.floarea@freescale.com>
Date: Mon, 12 Nov 2012 20:34:37 +0000
Subject: [PATCH 403/518] dpa_stats: Fix IPSec support in
 dpa_stats_modify_class_counter wrapper

The user-provided sa_id is copied 'as is' in kernel parameters that will
be provided to dpa_stats_modify_class_counter function in case the mode
of operation is 32 bits user space/64bits kernel space.

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c |   27 ++++++++++++++--------
 1 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
index 87c98a6..df57fed 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
@@ -1040,7 +1040,7 @@ static int do_ioctl_stats_modify_class_counter(void *args)
 	int ret;
 
 	if (copy_from_user(&prm, args, sizeof(prm))) {
-		pr_err("Could not copy Counter parameters");
+		pr_err("Could not copy user parameters\n");
 		return -EINVAL;
 	}
 
@@ -1075,8 +1075,8 @@ static int do_ioctl_stats_modify_class_counter(void *args)
 	case DPA_STATS_CLS_MEMBER_SA_ID:
 		break;
 	default:
-		pr_err("invalid class member type\n");
-		break;
+		pr_err("Invalid class member type\n");
+		return -EINVAL;
 	}
 
 	ret = dpa_stats_modify_class_counter(prm.cnt_id,
@@ -1095,12 +1095,15 @@ static int do_ioctl_stats_modify_class_counter(void *args)
 		kfree(prm.params.pair.second_key.byte);
 		kfree(prm.params.pair.second_key.mask);
 		break;
+	case DPA_STATS_CLS_MEMBER_SA_ID:
+		break;
 	default:
-		pr_err("invalid class member type\n");
+		pr_err("Invalid class member type\n");
 		break;
 	}
 	if (copy_to_user((void *) args, &prm, sizeof(prm))) {
-		pr_err("Could not write dpa_stats_init result");
+		pr_err("Could not write "
+				"dpa_stats_modify_class_counter result\n");
 		return -EBUSY;
 	}
 
@@ -1115,7 +1118,7 @@ static int do_ioctl_stats_compat_modify_class_counter(void *args)
 	int ret;
 
 	if (copy_from_user(&uprm, args, sizeof(uprm))) {
-		pr_err("Could not copy Counter parameters");
+		pr_err("Could not copy user parameters\n");
 		return -EINVAL;
 	}
 
@@ -1152,10 +1155,11 @@ static int do_ioctl_stats_compat_modify_class_counter(void *args)
 		}
 		break;
 	case DPA_STATS_CLS_MEMBER_SA_ID:
+		kprm.params.sa_id = uprm.params.sa_id;
 		break;
 	default:
-		pr_err("invalid class member type\n");
-		break;
+		pr_err("Invalid class member type\n");
+		return -EINVAL;
 	}
 
 	ret = dpa_stats_modify_class_counter(kprm.cnt_id,
@@ -1176,13 +1180,16 @@ static int do_ioctl_stats_compat_modify_class_counter(void *args)
 		kfree(kprm.params.pair.second_key.byte);
 		kfree(kprm.params.pair.second_key.mask);
 		break;
+	case DPA_STATS_CLS_MEMBER_SA_ID:
+		break;
 	default:
-		pr_err("invalid class member type\n");
+		pr_err("Invalid class member type\n");
 		break;
 	}
 
 	if (copy_to_user((void *) args, &uprm, sizeof(uprm))) {
-		pr_err("Could not write dpa_stats_init result");
+		pr_err("Could not write "
+				"dpa_stats_modify_class_counter result\n");
 		return -EBUSY;
 	}
 
-- 
1.7.5.4

