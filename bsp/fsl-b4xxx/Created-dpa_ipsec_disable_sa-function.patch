From 7e2105bcb6edbfcbe68a00d8b8ff691acd7fcb00 Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Fri, 18 May 2012 20:54:00 +0000
Subject: [PATCH 175/518] Created dpa_ipsec_disable_sa function

lock SA structure
disable SA works only on SA which is not parent nor child
in rekeying process.

if SA is single - flush SA policies.

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Acked-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |   44 ++++++++++++++++++++++++++-
 1 files changed, 43 insertions(+), 1 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index dec7b6e..0ae23a9 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -3998,11 +3998,53 @@ void sa_rekeying_work_func(struct work_struct *work)
 	return;
 }
 
+/*
+ * Functional description:
+ *
+ * Removes the PCD entries that make traffic go to SEC for the SA given as input
+ *
+ * Returns:
+ *	- operation successful, returned code 0
+ *	- resource currently busy try again, returned code -EAGAIN
+ *	- remove inbound entry failed, returned code -ENOTRECOVERABLE
+ *	- remove outbound policies failed, at least one policy for this SA is
+ *	  still in the system, returned code -EBADSLT
+ */
 int dpa_ipsec_disable_sa(int sa_id)
 {
-	xx_pr_err("This function is currently not supported\n");
+	struct dpa_ipsec_sa *sa;
+	int ret = 0, err = 0;
+
+	sa = get_sa_from_sa_id(sa_id);
+	if (!sa) {
+		xx_pr_err("Invalid SA handle for SA id %d\n", sa_id);
 	return -EINVAL;
 }
+
+	/* Acquire protective lock for this SA */
+	ret = mutex_trylock(&sa->lock);
+	if (ret == 0)
+		return -EAGAIN;
+
+	if (!sa_is_single(sa)) {
+		xx_pr_err("SA %d is a parent or child in rekeying\n", sa_id);
+		mutex_unlock(&sa->lock);
+		return -EINPROGRESS;
+	}
+
+	if (sa->sa_dir == DPA_IPSEC_INBOUND && sa->inbound_hash_entry != -1)
+		ret = remove_inbound_hash_entry(sa);
+	else { /* DPA_IPSEC_OUTBOUND */
+		err = sa_flush_policies(sa);
+		if (err < 0)
+			ret = -EBADSLT;
+	}
+
+	/* Release protective lock for this SA */
+	mutex_unlock(&sa->lock);
+
+	return ret;
+}
 EXPORT_SYMBOL(dpa_ipsec_disable_sa);
 
 int dpa_ipsec_flush_all_sa(int dpa_ipsec_id)
-- 
1.7.5.4

