From 6842d075d8bffeb0ce2268988cbfcf96b2c5f110 Mon Sep 17 00:00:00 2001
From: Anca-Jeanina Floarea <anca.floarea@freescale.com>
Date: Mon, 18 Feb 2013 21:58:04 +0000
Subject: [PATCH 473/518] dpa_ipsec: Fix implicit conversion for parameter
 "l2_hdr_size"

Changed the "l2_hdr_size" parameter from uint8_t to uint32_t in
order to prevent implicit conversion due to the fact that in API
it was declared as an uin32_t and in implementation used as an uin8_t.

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.h      |    2 +-
 drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c |    6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
index 5d345e4..2fc5909 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
@@ -297,7 +297,7 @@ struct dpa_ipsec_sa {
 	bool use_var_iphdr_len; /* Enable variable IP header length support   */
 	int ipsec_hmd;		/* Manip object for special IPSec functions   */
 	dpa_ipsec_rekey_event_cb rekey_event_cb;
-	uint8_t l2_hdr_size; /* Size of the Ethernet header, including any
+	uint32_t l2_hdr_size; /* Size of the Ethernet header, including any
 			      * VLAN information.			      */
 	struct mutex lock; /* Lock for this SA structure */
 };
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
index 0c5a3eb..cd2b4f7 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
@@ -514,7 +514,7 @@ static void build_meta_data_desc_cmds(struct dpa_ipsec_sa *sa,
 
 int build_shared_descriptor(struct dpa_ipsec_sa *sa,
 			    dma_addr_t auth_key_dma,
-			    dma_addr_t crypto_key_dma, u8 bytes_to_copy)
+			    dma_addr_t crypto_key_dma, u32 bytes_to_copy)
 {
 	uint32_t *desc, *key_jump_cmd, copy_ptr_index = 0;
 	int opthdrsz;
@@ -1114,7 +1114,7 @@ int build_extended_encap_shared_descriptor(struct dpa_ipsec_sa *sa,
 int build_extended_decap_shared_descriptor(struct dpa_ipsec_sa *sa,
 					   dma_addr_t auth_key_dma,
 					   dma_addr_t crypto_key_dma,
-					   uint8_t bytes_to_copy,
+					   uint32_t bytes_to_copy,
 					   uint8_t move_size,
 					   int sec_era)
 {
@@ -1288,7 +1288,7 @@ int build_extended_decap_shared_descriptor(struct dpa_ipsec_sa *sa,
 	/* seqfifostr: msgdata len=4 */
 	append_seq_fifo_store(desc, FIFOST_TYPE_MESSAGE_DATA, bytes_to_copy);
 
-	/* move: ififo->deco-alnblk -> ofifo, len=4 */
+	/* move: ififo->deco-alnblk -> ofifo, len */
 	append_move(desc, MOVE_SRC_INFIFO | MOVE_DEST_OUTFIFO | bytes_to_copy);
 
 	/* Overwrite the job-desc location (word 50) with the first
-- 
1.7.5.4

