From 6f0889b8ba453e3cac0d9c05a79fc129f4175f95 Mon Sep 17 00:00:00 2001
From: Bulie Radu-Andrei-B37577 <radu.bulie@freescale.com>
Date: Fri, 9 Nov 2012 19:37:54 +0000
Subject: [PATCH 400/518] dpa_ipsec: Avoid using uninitialized data

The local variables key_data and mask_data were not initialized
prior to use in functions "update_outbound_policy" and "update_inbound_policy".
The two arrays "key_data" and "mask_data" are transmitted further
to the key and mask pointers. These arrays on the stack, were not initialized
so sometimes garbage values appeared in the mask_data and key_data content
before assigning  them to the corresponding pointers.
The new version of the patch updates the comment.

Signed-off-by: Bulie Radu-Andrei-B37577 <radu.bulie@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index a34e9d8..802460d 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -1531,6 +1531,8 @@ static int update_inbound_policy(struct dpa_ipsec_sa *sa,
 	BUG_ON(!sa);
 	BUG_ON(!policy_entry);
 
+	memset(key_data, 0, DPA_OFFLD_MAXENTRYKEYSIZE);
+	memset(mask_data, 0, DPA_OFFLD_MAXENTRYKEYSIZE);
 	if (sa->em_inpol_td < 0) {
 		pr_err("Invalid exact match table for SA %d.\n", sa->id);
 		return -EINVAL;
@@ -1612,6 +1614,8 @@ static int update_outbound_policy(struct dpa_ipsec_sa *sa,
 	BUG_ON(!sa);
 	BUG_ON(!policy_entry);
 
+	memset(key_data, 0, DPA_OFFLD_MAXENTRYKEYSIZE);
+	memset(mask_data, 0, DPA_OFFLD_MAXENTRYKEYSIZE);
 	dpa_ipsec = sa->dpa_ipsec;
 	BUG_ON(!dpa_ipsec);
 	pre_sec_out_params = &dpa_ipsec->config.pre_sec_out_params;
-- 
1.7.5.4

