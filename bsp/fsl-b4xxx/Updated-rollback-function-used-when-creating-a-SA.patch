From efcfa106a2cfa43ebb7b50f4b90fd382a5e20748 Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Fri, 18 May 2012 20:49:23 +0000
Subject: [PATCH 164/518] Updated rollback function used when creating a SA

rollback updated to used put_sa function
updated dpa_ipsec_create_sa accordingly
spelling correction in dpa_ipsec_create_sa

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Acked-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |   20 +++++++-------------
 1 files changed, 7 insertions(+), 13 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 1792aea..c6d861f 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -2660,7 +2660,7 @@ static int put_sa(struct dpa_ipsec_sa *sa)
 	return 0;
 }
 
-static int rollback_create_sa(struct dpa_ipsec_sa *sa, uint32_t id)
+static int rollback_create_sa(struct dpa_ipsec_sa *sa)
 {
 	int err_rb;
 	struct dpa_ipsec *dpa_ipsec;
@@ -2701,18 +2701,12 @@ static int rollback_create_sa(struct dpa_ipsec_sa *sa, uint32_t id)
 	}
 
 	/* Free the SA id and FlowID (for inbound SAs only).*/
-	if (sa->sa_dir == DPA_IPSEC_INBOUND &&
-			sa->inbound_flowid != INVALID_INB_FLOW_ID)
+	if (sa->sa_dir == DPA_IPSEC_INBOUND && sa->inbound_flowid >= 0)
 		put_inbound_flowid(dpa_ipsec, sa->inbound_flowid);
-	if (sa->used_sa_index != -1) {
-		sa->dpa_ipsec->used_sa_ids[sa->used_sa_index] =
-					DPA_IPSEC_INVALID_SA_ID;
-		sa->used_sa_index = -1;
-		sa->dpa_ipsec->num_used_sas--;
-	}
-	cq_put_4bytes(dpa_ipsec->sa_mng.sa_id_cq, id);
 
-	return 0;
+	err_rb = put_sa(sa);
+
+	return err_rb;
 }
 
 int dpa_ipsec_init(const struct dpa_ipsec_params *params, int *dpa_ipsec_id)
@@ -2824,7 +2818,7 @@ int dpa_ipsec_create_sa(int dpa_ipsec_id,
 
 	err = get_new_sa(dpa_ipsec, &sa, &id);
 	if (err < 0) {
-		xx_pr_err("Failed retrieveing a preallocated SA\n");
+		xx_pr_err("Failed retrieving a preallocated SA\n");
 		return err;
 	}
 
@@ -2935,7 +2929,7 @@ int dpa_ipsec_create_sa(int dpa_ipsec_id,
 	 * reserved SA ID if it fails. The SA ID can be used to try again to
 	 * free resources by calling dpa_ipsec_remove_sa
 	 */
-	err_rb = rollback_create_sa(sa, id);
+	err_rb = rollback_create_sa(sa);
 	if (err_rb < 0)
 		*sa_id = id;
 
-- 
1.7.5.4

