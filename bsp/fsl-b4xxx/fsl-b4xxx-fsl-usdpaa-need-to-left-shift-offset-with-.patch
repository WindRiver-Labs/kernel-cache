From e4e597cc41fa1acd5003c182d629143b9f8c1e95 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Mon, 6 May 2013 14:36:27 +0800
Subject: [PATCH] fsl-b4xxx/fsl-usdpaa: need to left shift offset with
 PAGE_SHIFT

Commit "drivers/fsl_dpa_offload: use do_mmap to replace do_mmap_pgoff"
is introduced to use that similar do_mmap() in stead of do_mmap_pgoff()
to avoid exporting do_mmap_pgoff(), but looks we forget shifting
that offset with PAGE_SHIFT.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_qbman/fsl_usdpaa.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_qbman/fsl_usdpaa.c b/drivers/staging/fsl_qbman/fsl_usdpaa.c
index ececf21..e980bb4 100644
--- a/drivers/staging/fsl_qbman/fsl_usdpaa.c
+++ b/drivers/staging/fsl_qbman/fsl_usdpaa.c
@@ -884,7 +884,7 @@ out:
 		down_write(&current->mm->mmap_sem);
 		longret = do_mmap(fp, 0, map->frag->len, PROT_READ |
 			(i.flags & USDPAA_DMA_FLAG_RDONLY ? 0 : PROT_WRITE),
-			MAP_SHARED, map->frag->pfn_base);
+			MAP_SHARED, map->frag->pfn_base << PAGE_SHIFT);
 		up_write(&current->mm->mmap_sem);
 		if (longret & ~PAGE_MASK)
 			ret = (int)longret;
@@ -1028,7 +1028,7 @@ static int portal_mmap(struct file *fp, struct resource *res, compat_uptr_t *ptr
 	do {
 		longret = do_mmap(fp, 0, resource_size(res),
 					PROT_READ | PROT_WRITE, MAP_SHARED,
-					res->start >> PAGE_SHIFT);
+					res->start);
 	} while (longret == 0);
 	up_write(&current->mm->mmap_sem);
 	if (longret & ~PAGE_MASK)
-- 
1.7.5.4

