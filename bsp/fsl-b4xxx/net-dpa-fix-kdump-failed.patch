From 32d31782249183ea7cc735bfd56182b878db17fe Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Wed, 17 Apr 2013 14:53:33 +0800
Subject: [PATCH 36/36] net/dpa: fix kdump failed

When kdump runs, the second kernel always gets a failure when qman_init_fq
is called, but the ethernet can still work well when we skip the failure.
So return value judgement is commented off here and kdump can work well now.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 .../dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c     |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
index 7c83f83..8727a64b 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
@@ -156,6 +156,7 @@ static struct qman_fq *FqAlloc(t_LnxWrpFmDev * p_LnxWrpFmDev,
 		initfq.fqd.dest.wq = wq;
 
 		_errno = qman_init_fq(fq, QMAN_INITFQ_FLAG_SCHED, &initfq);
+#ifndef CONFIG_CRASH_DUMP
 		if (unlikely(_errno < 0)) {
 			REPORT_ERROR(MAJOR, E_NO_MEMORY,
 				     ("FQ obj - qman_init_fq!!!"));
@@ -163,6 +164,7 @@ static struct qman_fq *FqAlloc(t_LnxWrpFmDev * p_LnxWrpFmDev,
 			XX_Free(p_FmtFq);
 			return NULL;
 		}
+#endif
 	}
 
 	DBG(TRACE,
-- 
1.7.5.4

