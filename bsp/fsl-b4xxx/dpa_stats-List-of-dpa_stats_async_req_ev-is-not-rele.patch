From ea42deddf55dfefe6a9201b9dc6bbe9c9b0c1487 Mon Sep 17 00:00:00 2001
From: Anca-Jeanina Floarea <anca.floarea@freescale.com>
Date: Fri, 9 Nov 2012 21:06:28 +0000
Subject: [PATCH 393/518] dpa_stats: List of dpa_stats_async_req_ev is not
 released in case of failure

In case a new [dpa_stats_async_req_ev] can not be allocated, the list
of previously allocated [dpa_stats_async_req_ev] must be released.

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
index 73241b3..87c98a6 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
@@ -508,6 +508,13 @@ static long do_ioctl_stats_init(struct ioc_dpa_stats_params *prm)
 		/* Allocate an asynchronous request event node */
 		async_req_ev = kzalloc(sizeof(*async_req_ev), GFP_KERNEL);
 		if (!async_req_ev) {
+			struct dpa_stats_async_req_ev *tmp;
+
+			list_for_each_entry_safe(async_req_ev, tmp,
+				&wrp_dpa_stats.async_req_pool, node) {
+				list_del(&async_req_ev->node);
+				kfree(async_req_ev);
+			}
 			pr_err("Could not allocate "
 				"memory for asynchronous request event\n");
 			return -ENOMEM;
-- 
1.7.5.4

