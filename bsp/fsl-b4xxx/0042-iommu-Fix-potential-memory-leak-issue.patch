From fd77744dc44f69786aa610ccb7ce381b7f1adb55 Mon Sep 17 00:00:00 2001
From: Bharat Bhushan <Bharat.Bhushan@freescale.com>
Date: Thu, 18 Apr 2013 11:31:45 +0530
Subject: [PATCH 042/130] iommu: Fix potential memory leak issue

The dma_domain->win_arr is allocated when geometry is set.
But if domain is destroyed then the allocated memory is not freed.

When the dma_domain is created again then dma_domain is
allocated again, so previous win_arr pointer is lost and never freed.

Signed-off-by: Bharat Bhushan <bharat.bhushan@freescale.com>
Change-Id: Ie6d964215c43aa59b9e38ac544169b58aba4bc1a
Reviewed-on: http://git.am.freescale.net:8181/1488
Reviewed-by: Yoder Stuart-B08248 <stuart.yoder@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[Fetch from http://git.freescale.com/git/cgit.cgi/ppc/sdk/linux.git/,
 Tag: fsl-sdk-v1.4.5
 rebase on current context.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/iommu/fsl_pamu_domain.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/drivers/iommu/fsl_pamu_domain.c b/drivers/iommu/fsl_pamu_domain.c
index f85da57..74d85bd 100644
--- a/drivers/iommu/fsl_pamu_domain.c
+++ b/drivers/iommu/fsl_pamu_domain.c
@@ -433,6 +433,7 @@ static void fsl_pamu_domain_destroy(struct iommu_domain *domain)
 	dma_domain->enabled = 0;
 	dma_domain->mapped = 0;
 
+	kfree(dma_domain->win_arr);
 	kmem_cache_free(fsl_pamu_domain_cache, dma_domain);
 }
 
-- 
1.7.5.4

