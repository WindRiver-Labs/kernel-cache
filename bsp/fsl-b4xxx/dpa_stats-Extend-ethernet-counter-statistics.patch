From 265a3293a13fee34ba81d57dffbe3fabca6c8e27 Mon Sep 17 00:00:00 2001
From: Anca-Jeanina Floarea <anca.floarea@freescale.com>
Date: Fri, 7 Sep 2012 20:13:53 +0000
Subject: [PATCH 309/518] dpa_stats: Extend ethernet counter statistics

Extended the Ethernet counter selection with
additional statistics available in the hardware

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_stats.c     |   37 ++++++++++++++--------
 drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c |   28 ++++++++++++++++-
 include/linux/fsl_dpa_stats.h                   |   12 +++++--
 3 files changed, 59 insertions(+), 18 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_stats.c b/drivers/staging/fsl_dpa_offload/dpa_stats.c
index 83caa2e..005952d 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_stats.c
@@ -553,10 +553,19 @@ static void create_cnt_eth_stats(struct dpa_stats *dpa_stats)
 	/* DPA_STATS_CNT_ETH_OUT_DROP_PKTS */
 	dpa_stats->stats_sel[DPA_STATS_CNT_ETH][17] =
 			(void *)&stats.ifOutDiscards - (void *)&stats;
+	/* DPA_STATS_CNT_ETH_OUT_BYTES */
+	dpa_stats->stats_sel[DPA_STATS_CNT_ETH][18] =
+			(void *)&stats.ifOutOctets - (void *)&stats;
+	/* DPA_STATS_CNT_ETH_IN_ERRORS */
+	dpa_stats->stats_sel[DPA_STATS_CNT_ETH][19] =
+			(void *)&stats.ifInErrors - (void *)&stats;
+	/* DPA_STATS_CNT_ETH_OUT_ERRORS */
+	dpa_stats->stats_sel[DPA_STATS_CNT_ETH][20] =
+			(void *)&stats.ifOutErrors - (void *)&stats;
 	/* DPA_STATS_CNT_ETH_IN_UNICAST_PKTS : Not supported for now */
-	dpa_stats->stats_sel[DPA_STATS_CNT_ETH][18] = 0;
+	dpa_stats->stats_sel[DPA_STATS_CNT_ETH][21] = 0;
 	/* DPA_STATS_CNT_ETH_OUT_UNICAST_PKTS : Not supported for now */
-	dpa_stats->stats_sel[DPA_STATS_CNT_ETH][19] = 0;
+	dpa_stats->stats_sel[DPA_STATS_CNT_ETH][22] = 0;
 }
 
 static void create_cnt_reass_stats(struct dpa_stats *dpa_stats)
@@ -1092,10 +1101,10 @@ static int set_cnt_classif_tbl_cb(struct dpa_stats_cnt_cb *cnt_cb,
 
 	/* Check the Classifier Table counter */
 	err = FM_PCD_MatchTableFindNGetKeyStatistics(
-			cnt_cb->tbl_cb.keys[0].cc_node,
-			cnt_cb->tbl_cb.keys[0].key.size,
-			cnt_cb->tbl_cb.keys[0].key.byte,
-			cnt_cb->tbl_cb.keys[0].key.mask, &stats);
+			cnt_tbl_cb->keys[0].cc_node,
+			cnt_tbl_cb->keys[0].key.size,
+			cnt_tbl_cb->keys[0].key.byte,
+			cnt_tbl_cb->keys[0].key.mask, &stats);
 	if (err != 0) {
 		pr_err("Invalid Classifier Table counter parameters\n");
 		return -EINVAL;
@@ -1529,10 +1538,10 @@ static int set_cls_cnt_classif_tbl_cb(struct dpa_stats_cnt_cb *cnt_cb,
 
 			/* Check the Classifier Table counter */
 			err = FM_PCD_MatchTableFindNGetKeyStatistics(
-					cnt_cb->tbl_cb.keys[i].cc_node,
-					cnt_cb->tbl_cb.keys[i].key.size,
-					cnt_cb->tbl_cb.keys[i].key.byte,
-					cnt_cb->tbl_cb.keys[i].key.mask,
+					cnt_tbl_cb->keys[i].cc_node,
+					cnt_tbl_cb->keys[i].key.size,
+					cnt_tbl_cb->keys[i].key.byte,
+					cnt_tbl_cb->keys[i].key.mask,
 					&stats);
 			if (err != 0) {
 				pr_err("Invalid Classif Table parameters\n");
@@ -1560,10 +1569,10 @@ static int set_cls_cnt_classif_tbl_cb(struct dpa_stats_cnt_cb *cnt_cb,
 
 			/* Check the Classifier Table counter */
 			err = FM_PCD_MatchTableFindNGetKeyStatistics(
-					cnt_cb->tbl_cb.keys[i].cc_node,
-					cnt_cb->tbl_cb.keys[i].key.size,
-					cnt_cb->tbl_cb.keys[i].key.byte,
-					cnt_cb->tbl_cb.keys[i].key.mask,
+					cnt_tbl_cb->keys[i].cc_node,
+					cnt_tbl_cb->keys[i].key.size,
+					cnt_tbl_cb->keys[i].key.byte,
+					cnt_tbl_cb->keys[i].key.mask,
 					&stats);
 			if (err != 0) {
 				pr_err("Invalid Classif Table parameters\n");
diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
index 4f111c6..1713d7e 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
@@ -379,9 +379,10 @@ static int do_ioctl_stats_create_class_counter(void *args)
 	struct dpa_stats_cls_cnt_classif_node *cnode;
 	struct dpa_stats_cls_cnt_classif_tbl  *tbl;
 	struct dpa_offload_lookup_key key;
+	struct dpa_stats_cnt_eth_src *eth_src = NULL;
+	uint32_t i = 0, eth_src_size = 0;
 	int *sa_ids = NULL;
 	long ret = 0;
-	uint32_t i = 0;
 
 	if (copy_from_user(&prm, args, sizeof(prm))) {
 		pr_err("Could not copy Counter parameters");
@@ -389,6 +390,28 @@ static int do_ioctl_stats_create_class_counter(void *args)
 	}
 
 	switch (prm.cnt_params.type) {
+	case DPA_STATS_CNT_ETH:
+		eth_src_size = prm.cnt_params.class_members *
+				sizeof(struct dpa_stats_cnt_eth_src);
+
+		/* Allocate memory to store the sources array */
+		eth_src = kmalloc(prm.cnt_params.class_members *
+			sizeof(struct dpa_stats_cnt_eth_src), GFP_KERNEL);
+		if (!eth_src) {
+			pr_err("No more memory for ethernet sources array\n");
+			return -ENOMEM;
+		}
+
+		if (copy_from_user(eth_src,
+				prm.cnt_params.eth_params.src,
+				eth_src_size)) {
+			pr_err("Could not copy array of ethernet sources\n");
+			kfree(eth_src);
+			return -EBUSY;
+		}
+
+		prm.cnt_params.eth_params.src = eth_src;
+		break;
 	case DPA_STATS_CNT_CLASSIF_TBL:
 		tbl = &prm.cnt_params.classif_tbl_params;
 
@@ -472,6 +495,9 @@ static int do_ioctl_stats_create_class_counter(void *args)
 	}
 
 	switch (prm.cnt_params.type) {
+	case DPA_STATS_CNT_ETH:
+		kfree(eth_src);
+		break;
 	case DPA_STATS_CNT_CLASSIF_TBL:
 		tbl = &prm.cnt_params.classif_tbl_params;
 
diff --git a/include/linux/fsl_dpa_stats.h b/include/linux/fsl_dpa_stats.h
index 1442d9c..6ebf6df 100644
--- a/include/linux/fsl_dpa_stats.h
+++ b/include/linux/fsl_dpa_stats.h
@@ -170,12 +170,18 @@ enum dpa_stats_cnt_eth_sel {
 	DPA_STATS_CNT_ETH_OUT_PKTS		= 0x00010000,
 	/* Total number of dropped packets on transmit */
 	DPA_STATS_CNT_ETH_OUT_DROP_PKTS		= 0x00020000,
+	/* Total number of transmitted bytes of data */
+	DPA_STATS_CNT_ETH_OUT_BYTES		= 0x00040000,
+	/* Total number of received frames with errors */
+	DPA_STATS_CNT_ETH_IN_ERRORS		= 0x00080000,
+	/* Total number of transmitted frames with errors */
+	DPA_STATS_CNT_ETH_OUT_ERRORS		= 0x00100000,
 	/* Total number of unicast packets on receive */
-	DPA_STATS_CNT_ETH_IN_UNICAST_PKTS	= 0x00040000,
+	DPA_STATS_CNT_ETH_IN_UNICAST_PKTS	= 0x00200000,
 	/* Total number of unicast packets on transmit */
-	DPA_STATS_CNT_ETH_OUT_UNICAST_PKTS	= 0x00080000,
+	DPA_STATS_CNT_ETH_OUT_UNICAST_PKTS	= 0x00400000,
 	/* Select all counters */
-	DPA_STATS_CNT_ETH_ALL			= 0x00100000
+	DPA_STATS_CNT_ETH_ALL			= 0x00800000
 };
 
 /* DPA Stats Ethernet id */
-- 
1.7.5.4

