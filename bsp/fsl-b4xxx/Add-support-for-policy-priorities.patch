From 1d4146e12c62acfe5b7ffa39fedcbb76e3e3bc78 Mon Sep 17 00:00:00 2001
From: Mihai Serb <mihai.serb@freescale.com>
Date: Thu, 15 Mar 2012 22:07:41 +0000
Subject: [PATCH 117/518] Add support for policy priorities

Update policy management functions to include support for configuring
priority for policy keys inserted into DPA Classifier tables.

Signed-off-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |   12 ++++++++----
 1 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index c7244be..41b9055 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -434,7 +434,7 @@ static int create_inpol_cls_tbl(struct dpa_ipsec *dpa_ipsec,
 	params.type = DPA_CLS_TBL_EXACT_MATCH;
 	params.exact_match_params.entries_cnt = DPA_IPSEC_MAX_IN_POL_PER_SA;
 	params.exact_match_params.key_size = dpa_ipsec->sa_mng.inpol_key_size;
-	params.exact_match_params.use_priorities = 0;
+	params.exact_match_params.use_priorities = TRUE;
 	params.cc_node = cc_node;
 	err = dpa_classif_table_create(&params, td);
 	if (err < 0) {
@@ -1201,7 +1201,9 @@ static int update_inbound_policy(struct dpa_ipsec_sa *sa,
 
 		action = &sa->def_sa_action;
 		err = dpa_classif_table_insert_entry(sa->em_inpol_td, &tbl_key,
-						     action, 0, &entry_id);
+						     action,
+						     policy_entry->priority,
+						     &entry_id);
 		if (err < 0) {
 			xx_pr_err("Could not insert key in EM table\n");
 			return err;
@@ -1305,7 +1307,8 @@ static int update_outbound_policy(struct dpa_ipsec_sa *sa,
 		policy_entry->hm = hm;
 
 		err = dpa_classif_table_insert_entry(table, &tbl_key,
-					   &action, 0, &policy_entry->entry_id);
+						&action, policy_entry->priority,
+						&policy_entry->entry_id);
 		if (err < 0) {
 			xx_pr_err("Could not add key in exact match table\n");
 			return err;
@@ -2103,7 +2106,8 @@ static int find_policy_in_sa_policy_list(struct dpa_ipsec_sa  *sa,
 	list_for_each_entry_safe(pol_entry, tmp_policy_entry,
 				 &sa->policy_headlist, node) {
 		if (!memcmp(&pol_entry->policy_selectors, &pol_sel,
-			    sizeof(pol_sel))) {
+				sizeof(pol_sel)) &&
+		    pol_entry->priority == policy_params->priority) {
 			/* found entry matching the input policy parameters */
 			*policy_entry = pol_entry;
 			return 0;
-- 
1.7.5.4

