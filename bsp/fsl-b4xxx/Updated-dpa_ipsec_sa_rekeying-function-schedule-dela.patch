From efae1351ec9ea440f87c28f93afaff33dba9ead4 Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Fri, 18 May 2012 20:51:07 +0000
Subject: [PATCH 167/518] Updated dpa_ipsec_sa_rekeying function schedule
 delay

REKEY_SCHED_DELAY - 100 time in microseconds
calculate amount of jiffies represent REKEY_SCHED_DELAY
use jiffies value instead of value 1

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Acked-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |   15 +++++++++++----
 1 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 1ee5be5..5f6420d 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -3177,6 +3177,8 @@ int dpa_ipsec_sa_rekeying(int sa_id,
 	struct dpa_ipsec_sa_mng *sa_mng = NULL;
 	struct dpa_ipsec_sa *old_sa, *new_sa;
 	struct dpa_ipsec_policy_entry *policy_entry, *tmp_policy_entry;
+	struct timeval timeval;
+	unsigned long jiffies_to_wait;
 	uint32_t id;
 	int err = 0;
 
@@ -3259,14 +3261,17 @@ int dpa_ipsec_sa_rekeying(int sa_id,
 	/* Exact match table will be reused by the new SA. */
 	new_sa->em_inpol_td = old_sa->em_inpol_td;
 
-	/* Call internal function to create SEC queues according to SA
-	 * parameters */
+	/* Create SEC queues according to SA parameters */
 	err = create_sa_fq_pair(new_sa, TRUE, TRUE);
 	if (err < 0) {
 		xx_pr_err("Could not create SEC frame queues\n");
 		goto rekey_sa_err;
 	}
 
+	timeval.tv_sec = 0;
+	timeval.tv_usec = REKEY_SCHED_DELAY;
+	jiffies_to_wait = timeval_to_jiffies(&timeval);
+
 	/* AV's note: Since we have reused the FROM SEC FQ it is not needed to
 	 * make another entry in the PCD node of the post encryption OH PORT. */
 	if (new_sa->sa_dir == DPA_IPSEC_OUTBOUND) {
@@ -3296,7 +3301,8 @@ int dpa_ipsec_sa_rekeying(int sa_id,
 		list_add(&new_sa->sa_rekeying_node,
 			 &sa_mng->sa_rekeying_headlist);
 		queue_delayed_work(sa_mng->sa_rekeying_wq,
-				   &sa_mng->sa_rekeying_work, 1);
+				   &sa_mng->sa_rekeying_work,
+				   jiffies_to_wait);
 	} else {		/* DPA_IPSEC_INBOUND */
 		/* Need to update the IN SA PCD entry */
 		err = update_pre_sec_inbound_table(new_sa, MNG_OP_ADD);
@@ -3313,7 +3319,8 @@ int dpa_ipsec_sa_rekeying(int sa_id,
 
 			/* schedule inbound SA's rekeying */
 			queue_delayed_work(sa_mng->sa_rekeying_wq,
-					   &sa_mng->sa_rekeying_work, 1);
+					   &sa_mng->sa_rekeying_work,
+					   jiffies_to_wait);
 		} else {
 			/* The old SA has to be removed using the
 			 * dpa_ipsec_remove_sa function when the hard SA
-- 
1.7.5.4

