From 9d9f186869b2a83acb13264f5f5d55fdccaf2373 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Tue, 22 May 2012 14:39:05 +0000
Subject: [PATCH 202/518] dpa_classifier: Pre-allocate MURAM for HASH & exact
 match tables

The HASH and exact match tables have components that are
managed internally by the dpa_classifier. In these cases
the classifier may create internal Cc nodes that the
application is not aware of. As the requirement is to
allocate all needed MURAM in the table initialization phase,
the dpa_classifier was updated to make use of the Cc node
MURAM pre-allocation feature introduced by FMD16 (from GA
4.5) for all internally allocated Cc nodes.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 8643cfd..161613a 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -1187,8 +1187,11 @@ static int table_init_hash(struct dpa_cls_table *cls_table)
 		cls_table->params.hash_params.key_size;
 
 	hash_set_params->keysParams.numOfKeys = 0;
+	hash_set_params->keysParams.maxNumOfKeys = (uint16_t)
+		cls_table->params.hash_params.max_ways;
 	hash_set_params->keysParams.keySize =
 		cls_table->params.hash_params.key_size;
+	hash_set_params->keysParams.maskSupport = TRUE;
 	hash_set_params->keysParams.ccNextEngineParamsForMiss.nextEngine =
 		e_FM_PCD_DONE;
 	hash_set_params->keysParams.ccNextEngineParamsForMiss.params.
@@ -1289,6 +1292,7 @@ static int table_init_exact_match(struct dpa_cls_table *cls_table)
 	cc_node_params->keysParams.numOfKeys = 0;
 	cc_node_params->keysParams.keySize =
 		cls_table->params.exact_match_params.key_size;
+	cc_node_params->keysParams.maskSupport = TRUE;
 	cc_node_params->keysParams.ccNextEngineParamsForMiss.nextEngine =
 		e_FM_PCD_DONE;
 	cc_node_params->keysParams.ccNextEngineParamsForMiss.params.
@@ -1308,6 +1312,14 @@ static int table_init_exact_match(struct dpa_cls_table *cls_table)
 	for (i = 0; i < cls_table->int_cc_nodes_count; i++) {
 		if (i > 0) { /* First node provided by user. Doesn't need to be
 				* created */
+
+			cc_node_params->keysParams.maxNumOfKeys = (uint16_t)
+		(cls_table->params.exact_match_params.entries_cnt -
+		(i * DPA_CLS_TBL_MAXSHADOWTABLESIZE));
+			if (cc_node_params->keysParams.maxNumOfKeys >
+				DPA_CLS_TBL_MAXSHADOWTABLESIZE)
+				cc_node_params->keysParams.maxNumOfKeys =
+					DPA_CLS_TBL_MAXSHADOWTABLESIZE;
 			/* Dynamically create Cc node */
 			cls_table->int_cc_node[i].cc_node =
 				(void *)FM_PCD_MatchTableSet(fm_pcd,
-- 
1.7.5.4

