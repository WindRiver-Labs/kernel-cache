From ded9981ebec36bc3af267b2bde28d619a75594b1 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Fri, 22 Feb 2013 21:42:37 +0000
Subject: [PATCH 465/518] dpa_classifier: Fix header manipulation chaining
 error

The FMan driver ManipNodeReplace function fails if the replacement
header manipulation parameters are specifying a link to another
header manipulation node. The dpa_classifier header manipulation
runtime modification functions were updated to make a local copy
of the parameters and set the h_NextManip pointer to NULL before
calling the ManipNodeReplace function.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c |   61 +++++++++++++++++++--
 1 files changed, 55 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index a4edfd8..387e7c0 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -3834,6 +3834,10 @@ static int init_hm_chain(void *fm_pcd, struct list_head *chain_head,
 			"HM node (h_node=0x%p).\n", __func__, __LINE__,
 			pcurrent->node));
 		/* Need to sync with an existing node */
+		/*
+		 * Have to make a copy of the manip node params because
+		 * ManipNodeReplace does not accept h_NextManip != NULL.
+		 */
 		memcpy(&params, &pcurrent->params, sizeof(params));
 		params.h_NextManip = NULL;
 		error = FM_PCD_ManipNodeReplace(pcurrent->node, &params);
@@ -4556,7 +4560,7 @@ int dpa_classif_modify_nat_hm(int hmd,
 				new_hm_node_params.h_NextManip = NULL;
 
 				error = FM_PCD_ManipNodeReplace(hm_node->node,
-							&hm_node->params);
+							&new_hm_node_params);
 				if (error != E_OK) {
 					pr_err("ERROR: %s, %s (%d): FMan "
 						"driver call failed - "
@@ -5253,10 +5257,19 @@ int dpa_classif_modify_remove_hm(int hmd,
 	if (update) {
 		ret = remove_hm_update_params(premove_hm);
 		if (ret == 0) {
+			t_FmPcdManipParams new_hm_node_params;
+
 			hm_node = premove_hm->hm_node[0];
 
+			/*
+			 * Have to make a copy of the manip node params because
+			 * ManipNodeReplace does not accept h_NextManip != NULL.
+			 */
+			memcpy(&new_hm_node_params, &hm_node->params,
+						sizeof(new_hm_node_params));
+			new_hm_node_params.h_NextManip = NULL;
 			error = FM_PCD_ManipNodeReplace(hm_node->node,
-							&hm_node->params);
+							&new_hm_node_params);
 			if (error != E_OK) {
 				pr_err("ERROR: %s, %s (%d): FMan driver call "
 					"failed - FM_PCD_ManipNodeReplace, "
@@ -5641,10 +5654,19 @@ int dpa_classif_modify_insert_hm(int hmd,
 	if (update) {
 		ret = insert_hm_update_params(pinsert_hm);
 		if (ret == 0) {
+			t_FmPcdManipParams new_hm_node_params;
+
 			hm_node = pinsert_hm->hm_node[0];
 
+			/*
+			 * Have to make a copy of the manip node params because
+			 * ManipNodeReplace does not accept h_NextManip != NULL.
+			 */
+			memcpy(&new_hm_node_params, &hm_node->params,
+						sizeof(new_hm_node_params));
+			new_hm_node_params.h_NextManip = NULL;
 			error = FM_PCD_ManipNodeReplace(hm_node->node,
-							&hm_node->params);
+							&new_hm_node_params);
 			if (error != E_OK) {
 				pr_err("ERROR: %s, %s (%d): FMan driver call "
 					"failed - FM_PCD_ManipNodeReplace, "
@@ -6298,10 +6320,19 @@ int dpa_classif_modify_update_hm(int hmd,
 	if (update[0]) {
 		ret = update_hm_update_params(pupdate_hm);
 		if (ret == 0) {
+			t_FmPcdManipParams new_hm_node_params;
+
 			hm_node = pupdate_hm->hm_node[0];
 
+			/*
+			 * Have to make a copy of the manip node params because
+			 * ManipNodeReplace does not accept h_NextManip != NULL.
+			 */
+			memcpy(&new_hm_node_params, &hm_node->params,
+						sizeof(new_hm_node_params));
+			new_hm_node_params.h_NextManip = NULL;
 			error = FM_PCD_ManipNodeReplace(hm_node->node,
-							&hm_node->params);
+							&new_hm_node_params);
 			if (error != E_OK) {
 				pr_err("ERROR: %s, %s (%d): FMan driver call "
 					"failed - FM_PCD_ManipNodeReplace, "
@@ -6673,10 +6704,19 @@ int dpa_classif_modify_vlan_hm(int hmd,
 	if (update) {
 		ret = vlan_hm_update_params(pvlan_hm);
 		if (ret == 0) {
+			t_FmPcdManipParams new_hm_node_params;
+
 			hm_node = pvlan_hm->hm_node[0];
 
+			/*
+			 * Have to make a copy of the manip node params because
+			 * ManipNodeReplace does not accept h_NextManip != NULL.
+			 */
+			memcpy(&new_hm_node_params, &hm_node->params,
+						sizeof(new_hm_node_params));
+			new_hm_node_params.h_NextManip = NULL;
 			error = FM_PCD_ManipNodeReplace(hm_node->node,
-							&hm_node->params);
+							&new_hm_node_params);
 			if (error != E_OK) {
 				pr_err("ERROR: %s, %s (%d): FMan driver call "
 					"failed - FM_PCD_ManipNodeReplace, "
@@ -6953,10 +6993,19 @@ int dpa_classif_modify_mpls_hm(int hmd,
 	if (update) {
 		ret = mpls_hm_update_params(pmpls_hm);
 		if (ret == 0) {
+			t_FmPcdManipParams new_hm_node_params;
+
 			hm_node = pmpls_hm->hm_node[0];
 
+			/*
+			 * Have to make a copy of the manip node params because
+			 * ManipNodeReplace does not accept h_NextManip != NULL.
+			 */
+			memcpy(&new_hm_node_params, &hm_node->params,
+						sizeof(new_hm_node_params));
+			new_hm_node_params.h_NextManip = NULL;
 			error = FM_PCD_ManipNodeReplace(hm_node->node,
-							&hm_node->params);
+							&new_hm_node_params);
 			if (error != E_OK) {
 				pr_err("ERROR: %s, %s (%d): FMan driver call "
 					"failed - FM_PCD_ManipNodeReplace, "
-- 
1.7.5.4

