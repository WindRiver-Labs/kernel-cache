From 1bd21411d193e835c06eb8744910764475fb21c5 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Fri, 18 Jan 2013 21:58:34 +0000
Subject: [PATCH 007/518] fmd: Reorganize port param structures in wrapper API

The structures containing configuration parameters for Rx and
non-Rx ports are now almost identical, so merge them in a single
structure.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 .../dpa/NetCommSw/src/inc/wrapper/fsl_fman.h       |   37 ++++++--------------
 .../dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c     |    4 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c      |    4 +-
 drivers/net/ethernet/freescale/dpa/offline_port.c  |    2 +-
 4 files changed, 16 insertions(+), 31 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/inc/wrapper/fsl_fman.h b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/inc/wrapper/fsl_fman.h
index 8123550..9a89e8c 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/inc/wrapper/fsl_fman.h
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/inc/wrapper/fsl_fman.h
@@ -100,39 +100,24 @@ struct fm_port_pool_param {
 };
 
 /**************************************************************************//**
- @Description   structure for additional Rx port parameters
+ @Description   structure for additional port parameters
 *//***************************************************************************/
-struct fm_port_rx_params {
+struct fm_port_params {
     uint32_t                    errq;               /**< Error Queue Id. */
-    uint32_t                    defq;               /**< Default Queue Id.  */
+    uint32_t                    defq;               /**< For Tx and HC - Default Confirmation queue,
+                                                         0 means no Tx confirmation for processed frames.
+                                                         For Rx and OP - default Rx queue. */
     uint8_t                     num_pools;          /**< Number of pools use by this port */
     struct fm_port_pool_param   pool_param[FM_PORT_MAX_NUM_OF_EXT_POOLS];
                                                     /**< Parameters for each pool */
     uint16_t                    priv_data_size;     /**< Area that user may save for his own need (E.g. save the SKB) */
-    bool                        parse_results;      /**< Whether to have the parser-results in the Received buffer */
-    bool                        hash_results;       /**< Whether to have the hash-results in the Received buffer */
-    bool                        time_stamp;         /**< Whether to have the time-stamp in the Received buffer */
+    bool                        parse_results;      /**< Whether to have the parser-results in the Rx/Tx buffer */
+    bool                        hash_results;       /**< Whether to have the hash-results in the Rx/Tx buffer */
+    bool                        time_stamp;         /**< Whether to have the time-stamp in the Rx/Tx buffer */
+    bool                        frag_enable;        /**< Whether to enable fragmentation support, for OP only */
 };
 
 /**************************************************************************//**
- @Description   structure for additional non-Rx port parameters
-*//***************************************************************************/
-struct fm_port_non_rx_params {
-    uint32_t                errq;               /**< Error Queue Id. */
-    uint32_t                defq;               /**< For Tx and HC - Default Confirmation queue,
-                                                     0 means no Tx confirmation for processed
-                                                     frames. For OP - default Rx queue. */
-    uint16_t                priv_data_size;     /**< Area that user may save for his own need (E.g. save the SKB) */
-    bool                    parse_results;      /**< Whether to put the parser-results in the Transmitted buffer */
-    bool                    hash_results;       /**< Whether to have the hash-results in the Received buffer */
-    bool                    time_stamp;         /**< Whether to have the time-stamp in the Received buffer */
-    bool                    frag_enable;        /**< Whether to call extra config functions for OH, to enable fragmentation */
-    struct fm_port_pool_param pool_param[FM_PORT_MAX_NUM_OF_EXT_POOLS]; /**< External Buffer Pool params for OH port only */
-    uint8_t                 num_pools;          /**< Number of pools use by this port */
-};
-
-
-/**************************************************************************//**
  @Function      fm_bind
 
  @Description   Bind to a specific FM device.
@@ -194,7 +179,7 @@ void fm_port_unbind(struct fm_port *port);
 
  @Cautions      Allowed only after the port is binded.
 *//***************************************************************************/
-void fm_set_rx_port_params(struct fm_port *port, struct fm_port_rx_params *params);
+void fm_set_rx_port_params(struct fm_port *port, struct fm_port_params *params);
 
 /**************************************************************************//**
  @Function      fm_port_pcd_bind
@@ -231,7 +216,7 @@ int fm_get_tx_port_channel(struct fm_port *port);
 
  @Cautions      Allowed only after the port is binded.
 *//***************************************************************************/
-void fm_set_tx_port_params(struct fm_port *port, struct fm_port_non_rx_params *params);
+void fm_set_tx_port_params(struct fm_port *port, struct fm_port_params *params);
 
 /**************************************************************************//**
  @Function      fm_mac_set_handle
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
index b7b038e..8ddc46a 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
@@ -622,7 +622,7 @@ static t_Error InitFmPortDev(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev)
 }
 
 void fm_set_rx_port_params(struct fm_port *port,
-			   struct fm_port_rx_params *params)
+			   struct fm_port_params *params)
 {
 	t_LnxWrpFmPortDev *p_LnxWrpFmPortDev = (t_LnxWrpFmPortDev *) port;
 	int i;
@@ -666,7 +666,7 @@ EXPORT_SYMBOL(fm_set_rx_port_params);
 /* this function is called from oh_probe as well, thus it contains oh port
  * specific parameters (make sure everything is checked) */
 void fm_set_tx_port_params(struct fm_port *port,
-			   struct fm_port_non_rx_params *params)
+			   struct fm_port_params *params)
 {
 	t_LnxWrpFmPortDev *p_LnxWrpFmPortDev = (t_LnxWrpFmPortDev *) port;
 
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index 0375dac..ff675ce 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -3330,7 +3330,7 @@ static void __devinit
 dpaa_eth_init_tx_port(struct fm_port *port, struct dpa_fq *errq,
 		struct dpa_fq *defq, bool has_timer)
 {
-	struct fm_port_non_rx_params tx_port_param;
+	struct fm_port_params tx_port_param;
 
 	dpaa_eth_init_port(tx, port, tx_port_param, errq->fqid, defq->fqid,
 			DPA_TX_PRIV_DATA_SIZE, has_timer);
@@ -3340,7 +3340,7 @@ static void __devinit
 dpaa_eth_init_rx_port(struct fm_port *port, struct dpa_bp *bp, size_t count,
 		struct dpa_fq *errq, struct dpa_fq *defq, bool has_timer)
 {
-	struct fm_port_rx_params rx_port_param;
+	struct fm_port_params rx_port_param;
 	int i;
 
 	count = min(ARRAY_SIZE(rx_port_param.pool_param), count);
diff --git a/drivers/net/ethernet/freescale/dpa/offline_port.c b/drivers/net/ethernet/freescale/dpa/offline_port.c
index 9db069f..c11dc3e 100644
--- a/drivers/net/ethernet/freescale/dpa/offline_port.c
+++ b/drivers/net/ethernet/freescale/dpa/offline_port.c
@@ -108,7 +108,7 @@ oh_port_probe(struct platform_device *_of_dev)
 	uint32_t		 queues_count;
 	uint32_t		 crt_fqid_base;
 	uint32_t		 crt_fq_count;
-	struct fm_port_non_rx_params	oh_port_tx_params;
+	struct fm_port_params	 oh_port_tx_params;
 	struct fm_port_pcd_param	oh_port_pcd_params;
 	/* True if the current partition owns the OH port. */
 	bool init_oh_port;
-- 
1.7.5.4

