From 1095c12a37bd9d06fc5537b9863e1da75d13460a Mon Sep 17 00:00:00 2001
From: Radu-Andrei BULIE <radu.bulie@freescale.com>
Date: Wed, 31 Oct 2012 22:38:40 +0000
Subject: [PATCH 367/518] offload_use_case: Remove memory leaks

If nla_put returns a negative value, get_ipsec_offld_data_fromsa
exits with that value and must free the pointer used for encryption
information, [ealg]. The same comment is applied to
get_ipsec_offld_data_frompol

Signed-off-by: Radu-Andrei BULIE <radu.bulie@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 .../staging/fsl_dpa_offload/usecases/genl_ctl.c    |    8 ++++++--
 1 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
index 40ac510..a867ddb 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
+++ b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
@@ -203,8 +203,10 @@ static int get_ipsec_offld_data_fromsa(struct sk_buff *skb_2,
 	rc = nla_put(skb, XFRMA_ALG_AUTH,
 		     sizeof(*aalg) + x->aalg->alg_key_len / 8, aalg);
 	kfree(aalg);
-	if (rc < 0)
+	if (rc < 0) {
+		kfree(ealg);
 		goto out;
+	}
 
 	memcpy(ealg, x->ealg,
 	       sizeof(struct xfrm_algo) + x->ealg->alg_key_len / 8);
@@ -310,8 +312,10 @@ static int get_ipsec_offld_data_frompol(struct sk_buff *skb_2,
 			     sizeof(*aalg) + state->aalg->alg_key_len / 8,
 			     aalg);
 		kfree(aalg);
-		if (rc < 0)
+		if (rc < 0) {
+			kfree(ealg);
 			goto out;
+		}
 
 		memcpy(ealg, state->ealg,
 		       sizeof(struct xfrm_algo) + state->ealg->alg_key_len / 8);
-- 
1.7.5.4

