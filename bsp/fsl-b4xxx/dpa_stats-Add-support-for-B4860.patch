From a60baa3fa931daf9527b8b093255985de6bf1b35 Mon Sep 17 00:00:00 2001
From: Aurelian Zanoschi <aurelian.zanoschi@freescale.com>
Date: Tue, 11 Dec 2012 21:32:39 +0000
Subject: [PATCH 445/518] dpa_stats: Add support for B4860

Updated the dpa_stats api with kernel API for B4860DQS.
Added support for B4860 in ETH counter.

Signed-off-by: Aurelian Zanoschi <aurelian.zanoschi@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_stats.c |   55 +++++++++++++++++++-------
 include/linux/fsl_dpa_stats.h               |    4 +-
 2 files changed, 43 insertions(+), 16 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_stats.c b/drivers/staging/fsl_dpa_offload/dpa_stats.c
index b5d7894..b56004d 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_stats.c
@@ -925,23 +925,16 @@ static int copy_key_descriptor(const struct dpa_offload_lookup_key *src,
 }
 
 static t_Handle get_fman_ethernet_dev_node(
-		struct device_node *parent_dev_node, int port_id)
+		struct device_node *parent_dev_node,
+		int port_id, char *mac_name)
 {
 	struct device_node *dev_node, *tmp_node = NULL;
 	struct mac_device  *mac_dev = NULL;
 	const uint32_t	*cell_index;
-	char *mac;
 	int lenp;
 
-	if (port_id > DPA_STATS_ETH_1G_PORT4) {
-		mac = "fsl,fman-10g-mac";
-		port_id -= DPA_STATS_ETH_10G_PORT0;
-	} else {
-		mac = "fsl,fman-1g-mac";
-	}
-
 	while ((dev_node = of_find_compatible_node(tmp_node, NULL,
-			mac)) != NULL) {
+			mac_name)) != NULL) {
 		if (parent_dev_node == of_get_parent(dev_node)) {
 			cell_index = (uint32_t *)of_get_property(
 					dev_node, "cell-index", &lenp);
@@ -981,6 +974,7 @@ static int get_fm_mac(struct dpa_stats_cnt_eth_src src, void **mac)
 {
 	struct device_node *dev_node = NULL;
 	t_Handle *h_FmMac = NULL;
+	char *mac_name;
 
 	/* Get FMAN device node */
 	dev_node = get_fman_dev_node(src.engine_id);
@@ -990,11 +984,42 @@ static int get_fm_mac(struct dpa_stats_cnt_eth_src src, void **mac)
 
 	}
 
-	/* Get Ethernet device node */
-	h_FmMac = get_fman_ethernet_dev_node(dev_node, src.eth_id);
-	if (!h_FmMac) {
-		pr_err("Ethernet device node couldn't be found\n");
-		return -EINVAL;
+	if (src.eth_id > DPA_STATS_ETH_1G_PORT5) {
+		/* Get Ethernet device node first for DTSEC case 10G port*/
+		mac_name = "fsl,fman-10g-mac";
+		src.eth_id -= DPA_STATS_ETH_10G_PORT0;
+
+		h_FmMac = get_fman_ethernet_dev_node(dev_node,
+			src.eth_id, mac_name);
+
+		if (!h_FmMac) {
+			/* Get Ethernet device node for MEMAC case 10G port */
+			mac_name = "fsl,fman-memac";
+			h_FmMac = get_fman_ethernet_dev_node(dev_node,
+				src.eth_id, mac_name);
+			if (!h_FmMac) {
+				pr_err("Ethernet device node couldn't be found\n");
+				return -EINVAL;
+			}
+		}
+	} else {
+		/* Get Ethernet device node first for DTSEC case 1G port*/
+		mac_name = "fsl,fman-1g-mac";
+
+		h_FmMac = get_fman_ethernet_dev_node(dev_node,
+			src.eth_id, mac_name);
+
+		if (!h_FmMac) {
+			/* Get Ethernet device node for MEMAC case 1G port*/
+
+			mac_name = "fsl,fman-memac";
+			h_FmMac = get_fman_ethernet_dev_node(dev_node,
+				src.eth_id, mac_name);
+			if (!h_FmMac) {
+				pr_err("Ethernet device node couldn't be found\n");
+				return -EINVAL;
+			}
+		}
 	}
 
 	/* Return FM MAC handle */
diff --git a/include/linux/fsl_dpa_stats.h b/include/linux/fsl_dpa_stats.h
index 878fd98..e3087fa 100644
--- a/include/linux/fsl_dpa_stats.h
+++ b/include/linux/fsl_dpa_stats.h
@@ -190,7 +190,9 @@ enum dpa_stats_cnt_eth_id {
 	DPA_STATS_ETH_1G_PORT2,		/* 1G port, ETH id 2 */
 	DPA_STATS_ETH_1G_PORT3,		/* 1G port, ETH id 3 */
 	DPA_STATS_ETH_1G_PORT4,		/* 1G port, ETH id 4 */
-	DPA_STATS_ETH_10G_PORT0		/* 10G port, ETH id 0 */
+	DPA_STATS_ETH_1G_PORT5,		/* 1G port, ETH id 5 */
+	DPA_STATS_ETH_10G_PORT0,	/* 10G port, ETH id 0 */
+	DPA_STATS_ETH_10G_PORT1		/* 10G port, ETH id 1 */
 };
 
 /* DPA Stats Ethernet counter source definition */
-- 
1.7.5.4

