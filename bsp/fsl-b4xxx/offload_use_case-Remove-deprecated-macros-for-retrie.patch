From 600bcc4875e7cfbfd8990e206199ddffead6b822 Mon Sep 17 00:00:00 2001
From: Radu-Andrei BULIE <radu.bulie@freescale.com>
Date: Wed, 12 Sep 2012 21:26:26 +0000
Subject: [PATCH 323/518] offload_use_case: Remove deprecated macros for
 retrieving qm_channels

qm_channels enum was removed from the qman dirver. This patch
removes the macros that used this enum. Instead the get_fm_port
function is used -based on the dts file.

Signed-off-by: Radu-Andrei BULIE <radu.bulie@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 .../staging/fsl_dpa_offload/usecases/ipsec_init.c  |   25 +++++-
 .../fsl_dpa_offload/usecases/platform_defs.h       |   86 --------------------
 2 files changed, 21 insertions(+), 90 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c b/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c
index e8199cd..eac9c0d 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c
+++ b/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c
@@ -147,6 +147,7 @@ int init_ipsec_offload(int *dpa_ipsec_id, struct ipsec_uparms *params)
 	t_LnxWrpFmDev *fm_dev;
 	t_FmPcdParams pcd_params;
 	struct file *fm_pcd_file;
+	t_LnxWrpFmPortDev *ib_oh_post, *ob_oh_post;
 
 	outb_update_hmd = DPA_OFFLD_DESC_NONE;
 
@@ -161,6 +162,24 @@ int init_ipsec_offload(int *dpa_ipsec_id, struct ipsec_uparms *params)
 
 	fm_dev = (t_LnxWrpFmDev *)fm_pcd_file->private_data;
 	dbgfs_init_stats();
+	ib_oh_post = get_fm_port(FM, DL_POST_IPSEC_OH,
+				e_FM_PORT_TYPE_OH_OFFLINE_PARSING);
+
+	if (!ib_oh_post) {
+		pr_err("%s:%d: Could not get Inbound Post Ipsec OH port\n",
+			__func__, __LINE__);
+		return -EINVAL;
+	}
+
+	ob_oh_post = get_fm_port(FM, UL_POST_IPSEC_OH,
+				e_FM_PORT_TYPE_OH_OFFLINE_PARSING);
+
+	if (!ob_oh_post) {
+		pr_err("%s:%d: Could not get Outbound Post Ipsec OH port\n",
+			__func__, __LINE__);
+		return -EINVAL;
+	}
+
 	ipsec_params.max_sa_pairs = params->max_sa;
 	outb_post_tx_fqid = params->outb_post_tx_fqid;
 	ipsec_params.fm_pcd = fm_dev->h_PcdDev;
@@ -195,8 +214,7 @@ int init_ipsec_offload(int *dpa_ipsec_id, struct ipsec_uparms *params)
 	ipsec_params.post_sec_in_params.data_off = DPA_IPSEC_DATA_OFF_3_BURST;
 	ipsec_params.post_sec_in_params.base_flow_id = IPSEC_START_IN_FLOW_ID;
 	ipsec_params.post_sec_in_params.use_ipv6_pol = FALSE;
-	ipsec_params.post_sec_in_params.qm_tx_ch =
-			OH_PORT_CHANNEL(FM, DL_POST_IPSEC_OH);
+	ipsec_params.post_sec_in_params.qm_tx_ch = ib_oh_post->txCh;
 	memset(&cls_tbl_params, 0, sizeof(cls_tbl_params));
 	cls_tbl_params.fm_pcd = fm_dev->h_PcdDev;
 	cls_tbl_params.cc_node = fm_params.cc_flow_id;
@@ -218,8 +236,7 @@ int init_ipsec_offload(int *dpa_ipsec_id, struct ipsec_uparms *params)
 	/* OUTB/UL post SEC params */
 	/* data_off - SEC preheader burst size in bytes */
 	ipsec_params.post_sec_out_params.data_off = DPA_IPSEC_DATA_OFF_3_BURST;
-	ipsec_params.post_sec_out_params.qm_tx_ch =
-			OH_PORT_CHANNEL(FM, UL_POST_IPSEC_OH);
+	ipsec_params.post_sec_out_params.qm_tx_ch = ob_oh_post->txCh;
 
 	/* OUTB/UL pre SEC params */
 	for (i = 0; i < DPA_IPSEC_MAX_SUPPORTED_PROTOS; i++) {
diff --git a/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h b/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h
index 91259b0..05dffc7 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h
+++ b/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h
@@ -44,90 +44,4 @@
 #define JR_INT_NUM(n)					(JR0_INT_NUM + n)
 #define IIDR(n)					(IIDR_BASE + n*0x20)
 
-#ifdef CONFIG_P4080_BUILD
-#define QM_CHANNEL_FM0_SP_OH	qm_channel_fman0_sp5
-#define QM_CHANNEL_FM1_SP_OH	qm_channel_fman1_sp5
-#define QM_CHANNEL_FM0_SP_ETH	qm_channel_fman0_sp1
-#define QM_CHANNEL_FM1_SP_ETH	qm_channel_fman1_sp1
-
-#elif defined CONFIG_P3041_BUILD
-#define QM_CHANNEL_FM0_SP_OH	qm_channel_fman0_sp6
-#define QM_CHANNEL_FM1_SP_OH	qm_channel_fman1_sp6
-#define QM_CHANNEL_FM0_SP_ETH	qm_channel_fman0_sp1
-#define QM_CHANNEL_FM1_SP_ETH	qm_channel_fman1_sp1
-
-#elif defined CONFIG_P5020_BUILD
-#define QM_CHANNEL_FM0_SP_OH	qm_channel_fman0_sp6
-#define QM_CHANNEL_FM1_SP_OH	qm_channel_fman1_sp6
-#define QM_CHANNEL_FM0_SP_ETH	qm_channel_fman0_sp1
-#define QM_CHANNEL_FM1_SP_ETH	qm_channel_fman1_sp1
-#else
-	#error "Build not defined : P4080_BUILD P5020_BUILD P3041_BUILD"
-#endif
-
-
-/*
- * Return the channel dedicated to a specific 1GB port of the first FMan
- *
- * @eth_port_index : index of the ethernet port to use. Valid values: [0..3]
- */
-#ifndef ETH_PORT_CHANNEL_FM0
-#define ETH_PORT_CHANNEL_FM0(eth_port_index) \
-	(QM_CHANNEL_FM0_SP_ETH + (eth_port_index))
-#endif
-
-/*
- * Return the channel dedicated to a specific 1GB port of the first FMan
- *
- * @eth_port_index : index of the ethernet to use. Valid values: [0..3]
- */
-#ifndef ETH_PORT_CHANNEL_FM1
-#define ETH_PORT_CHANNEL_FM1(eth_port_index) \
-	(QM_CHANNEL_FM1_SP_ETH + (eth_port_index))
-#endif
-
-/*
- * Return the channel dedicated to a specific OH port of the first FMan
- *
- * @oh_port_index : index of the offline port to use. Valid values: [1..6]
- * (OH port 0 is reserved by FMD for Host commands)
- */
-#ifndef OH_PORT_CHANNEL_FM0
-#define OH_PORT_CHANNEL_FM0(oh_port_index) \
-	(QM_CHANNEL_FM0_SP_OH + (oh_port_index))
-#endif
-/**
- * Return the channel dedicated to a specific OH port of the second FMan
- *
- * @oh_port_index : index of the offline port to use. Valid values: [1..6]
- * (port 0 is reserved by FMD for Host commands)
- */
-#ifndef OH_PORT_CHANNEL_FM1
-#define OH_PORT_CHANNEL_FM1(oh_port_index) \
-	(QM_CHANNEL_FM1_SP_OH + (oh_port_index))
-#endif
-
-
-#ifndef OH_PORT_CHANNEL
-#define OH_PORT_CHANNEL(fm, oh_port_index) \
-	((fm == 1) ? OH_PORT_CHANNEL_FM1(oh_port_index) : \
-		OH_PORT_CHANNEL_FM0(oh_port_index))
-#endif
-
-#ifndef ETH_PORT_CHANNEL
-#define ETH_PORT_CHANNEL(fm, eth_port_index) \
-	((fm == 1) ? ETH_PORT_CHANNEL_FM1(eth_port_index) : \
-		ETH_PORT_CHANNEL_FM0(eth_port_index))
-#endif
-
-/**
- * Return the channel dedicated to a software portal.
- *
- * @sw_portal_index Valid values: [0..7]
- */
-#ifndef SW_PORTAL_CHANNEL
-#define SW_PORTAL_CHANNEL(sw_portal_index) \
-	(qm_channel_swportal0 + (sw_portal_index))
-#endif
-
 #endif /*_PLATFORM_H_*/
-- 
1.7.5.4

