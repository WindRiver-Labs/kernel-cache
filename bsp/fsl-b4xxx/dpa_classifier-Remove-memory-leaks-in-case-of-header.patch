From a623add76bc7589d535470284629f0cab9165366 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Fri, 22 Feb 2013 21:42:46 +0000
Subject: [PATCH 466/518] dpa_classifier: Remove memory leaks in case of
 header manipulation runtime updates

The header manipulation operations parameters update functions were
modified to take into account that they can also be called in case
of parameter runtime modifications (instead of only for parameters
initialization). In this case they have to consider that data buffers
may have already been allocated for the initialized parameters and
they need to be released before allocating new ones.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 387e7c0..d4d2593 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -4763,6 +4763,8 @@ static int fwd_hm_update_params(struct dpa_cls_hm *pfwd_hm)
 		memcpy(&pdata[ETH_ALEN], pfwd_hm->fwd_params.eth.macsa,
 			ETH_ALEN);
 
+		kfree(hm_node->params.u.hdr.insrtParams.u.generic.p_Data);
+
 		hm_node->params.u.hdr.insrtParams.u.generic.offset	= 0;
 		hm_node->params.u.hdr.insrtParams.u.generic.size	= size;
 		hm_node->params.u.hdr.insrtParams.u.generic.p_Data	= pdata;
@@ -4796,6 +4798,8 @@ static int fwd_hm_update_params(struct dpa_cls_hm *pfwd_hm)
 		memcpy(pdata, &pfwd_hm->fwd_params.ppp.ppp_pid,
 			PPP_HEADER_SIZE);
 
+		kfree(hm_node->params.u.hdr.insrtParams.u.generic.p_Data);
+
 		hm_node->params.u.hdr.insrtParams.u.generic.offset	= 0;
 		hm_node->params.u.hdr.insrtParams.u.generic.size	= size;
 		hm_node->params.u.hdr.insrtParams.u.generic.p_Data	= pdata;
@@ -5504,6 +5508,8 @@ static int insert_hm_update_params(struct dpa_cls_hm *pinsert_hm)
 		break;
 	}
 
+	kfree(hm_node->params.u.hdr.insrtParams.u.generic.p_Data);
+
 	hm_node->params.u.hdr.insrtParams.u.generic.offset	= offset;
 	hm_node->params.u.hdr.insrtParams.u.generic.size	= size;
 	hm_node->params.u.hdr.insrtParams.u.generic.p_Data	= pdata;
@@ -6534,6 +6540,9 @@ static int vlan_hm_update_params(struct dpa_cls_hm *pvlan_hm)
 			memcpy(pdata, pvlan_hm->vlan_params.egress.qtag,
 				size);
 
+			kfree(hm_node->params.u.hdr.insrtParams.u.generic.
+									p_Data);
+
 			hm_node->params.u.hdr.insrtParams.u.generic.size =
 									size;
 			hm_node->params.u.hdr.insrtParams.u.generic.p_Data =
@@ -6914,6 +6923,9 @@ static int mpls_hm_update_params(struct dpa_cls_hm *pmpls_hm)
 
 		memcpy(pdata, pmpls_hm->mpls_params.mpls_hdr, size);
 
+		kfree(hm_node->params.u.hdr.insrtParams.u.byHdr.u.
+						specificL2Params.p_Data);
+
 		hm_node->params.u.hdr.insrtParams.u.byHdr.u.specificL2Params.
 			size = size;
 		hm_node->params.u.hdr.insrtParams.u.byHdr.u.specificL2Params.
-- 
1.7.5.4

