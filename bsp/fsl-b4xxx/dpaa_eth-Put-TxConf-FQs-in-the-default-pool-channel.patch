From 33ee3abaa5a680cd300dc729632a95d988de0a7f Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Wed, 20 Feb 2013 16:48:06 +0000
Subject: [PATCH 063/518] dpaa_eth: Put TxConf FQs in the default pool channel

Up until now, each Tx Confirmation FQ would stay in the dedicated
channel of the CPU "owning" its peer Tx FQ. Although that boosts L2
statistics, in the end the Rx endpoint has to spend more time in Rx
softirqs, thereby starving the userspace application listening on a UDP
socket. So in our non-preemptible, default kernel configuration, more
was in fact less, because the L4 throughput ("the goodput") was lower.

By moving the Tx Confirmation FQs into the default pool channel, we get
slightly lower L2 performance, but better L4 figures. This is especially
the case for "power-deprived" configurations, such as 4-core setups with
small-sized UDP traffic.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c |    5 +----
 1 files changed, 1 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index c2cba1a..12292d4 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -3433,7 +3433,6 @@ static void dpa_setup_recycle_queues(struct dpa_priv_s *priv, struct dpa_fq *fq,
 
 static void dpa_setup_conf_queues(struct dpa_priv_s *priv, struct dpa_fq *fq)
 {
-	const cpumask_t *affine_cpus = qman_affine_cpus();
 	struct list_head *ptr = &fq->list;
 	int i;
 
@@ -3445,9 +3444,7 @@ static void dpa_setup_conf_queues(struct dpa_priv_s *priv, struct dpa_fq *fq)
 		struct dpa_fq *iter = list_entry(ptr, struct dpa_fq, list);
 
 		dpa_setup_ingress(priv, iter, &tx_private_defq);
-		/* If cpu not online, just leave the default pool channel */
-		if (cpumask_test_cpu(i, affine_cpus))
-			iter->channel = qman_affine_channel(i);
+		/* Leave the confirmation queue in the default pool channel */
 		priv->conf_fqs[i] = &iter->fq_base;
 
 		ptr = ptr->next;
-- 
1.7.5.4

