From 913f9144cf0db63b2b2e119457c74c72502073b5 Mon Sep 17 00:00:00 2001
From: Anca-Jeanina Floarea <anca.floarea@freescale.com>
Date: Thu, 6 Dec 2012 22:45:15 +0000
Subject: [PATCH 442/518] dpa_ipsec: Extend function get_sec_era_info to
 provide SEC version

Change function  get_sec_era_info to provide both the SEC era
and the SEC version. In case the SEC version is above 5.3, the PDB
on the decapsulation needs to have the AOFL bit set.

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c      |    5 +++-
 drivers/staging/fsl_dpa_offload/dpa_ipsec.h      |    4 +++
 drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c |   25 +++++++++++----------
 drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.h |    2 +-
 4 files changed, 22 insertions(+), 14 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index e3f452c..47fa2a3 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -2489,6 +2489,9 @@ static int copy_sa_params_to_in_sa(struct dpa_ipsec_sa *sa,
 	sa->sec_desc->pdb_dec.options = PDBOPTS_ESP_TUNNEL |
 					PDBOPTS_ESP_OUTFMT;
 
+	if (dpa_ipsec->sec_ver >= SEC_VER_5_3)
+		sa->sec_desc->pdb_dec.options |= PDBOPTS_ESP_AOFL;
+
 	if (sa_params->use_ext_seq_num) {
 		sa->sec_desc->pdb_dec.seq_num_ext_hi =
 			(sa_params->start_seq_num & SEQ_NUM_HI_MASK) >> 32;
@@ -3135,7 +3138,7 @@ int dpa_ipsec_init(const struct dpa_ipsec_params *params, int *dpa_ipsec_id)
 	dpa_ipsec->num_used_sas = 0;
 
 	/* retrieve and store SEC ERA information */
-	get_sec_era_info(dpa_ipsec);
+	get_sec_info(dpa_ipsec);
 
 	return 0;
 }
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
index 0fd7264..66309d7 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
@@ -193,6 +193,9 @@
 
 #define NIA_OPCODE_MASK		0x0F
 
+#define SEC_DEF_VER 40 /* like in P4080 */
+#define SEC_VER_5_3 53
+
 /*
  * calculate the size of the fields in the policy params structure that
  * are used to identify a policy
@@ -377,6 +380,7 @@ struct dpa_ipsec {
 	int *used_sa_ids;	/* Sa ids used by this dpa ipsec instance     */
 	int num_used_sas;  /* The current number of sa's used by this instance*/
 	int sec_era; /* SEC ERA information */
+	int sec_ver; /* SEC version information */
 	struct mutex lock; /* Lock for this dpa_ipsec instance */
 };
 
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
index ddb719c..f792d92 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
@@ -58,29 +58,30 @@
 #define PTR_LEN			2	/* Descriptor is created only for 8 byte
 					 * pointer. PTR_LEN is in words. */
 
-static const struct of_device_id sec_match[] = {
-	{
-	 .compatible = "fsl,sec-v4.0"
-	}
-};
-
 static const struct of_device_id sec_jr_match[] = {
 	{
 	 .compatible = "fsl,sec-v4.0-job-ring"
 	}
 };
 
-/* retrieve and store SEC ERA information */
-void get_sec_era_info(struct dpa_ipsec *dpa_ipsec)
+/* retrieve and store SEC information */
+void get_sec_info(struct dpa_ipsec *dpa_ipsec)
 {
 	struct device_node *sec_node;
 	struct platform_device *sec_of_dev;
 	int sec_era = -EINVAL;
 
-	sec_node = of_find_matching_node(NULL, &sec_match[0]);
-	if (sec_node == NULL) {
-		pr_err("Can't find device_node for SEC! Check device tree!\n");
-		goto def_sec_era;
+	sec_node = of_find_compatible_node(NULL, NULL, "fsl,sec-v5.3");
+	if (sec_node)
+		dpa_ipsec->sec_ver = SEC_VER_5_3;
+	else {
+		dpa_ipsec->sec_ver = SEC_DEF_VER;
+
+		sec_node = of_find_compatible_node(NULL, NULL, "fsl,sec-v4.0");
+		if (sec_node == NULL) {
+			pr_err("Can't find device_node for SEC! Check device tree!\n");
+			goto def_sec_era;
+		}
 	}
 
 	sec_of_dev = of_find_device_by_node(sec_node);
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.h b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.h
index 0d58dfe..6258259 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.h
@@ -87,7 +87,7 @@ struct sec_descriptor {
 	};
 };
 
-void get_sec_era_info(struct dpa_ipsec *dpa_ipsec);
+void get_sec_info(struct dpa_ipsec *dpa_ipsec);
 int create_sec_descriptor(struct dpa_ipsec_sa *sa);
 int generate_split_key(struct auth_params *auth_param);
 
-- 
1.7.5.4

