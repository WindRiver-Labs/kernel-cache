From 8f87d3d9cf303406e4ce20a1d99175e4188f24f7 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Fri, 22 Feb 2013 21:43:17 +0000
Subject: [PATCH 468/518] dpa_classifier: Bug fix. Block possibility to add HM
 to prefilled HASH table entries

Prefilled HASH tables do not support HM because they don't have
any local management other than the low level driver. This
introduces the risk to not be able to release a HM chain used
on its entries. This patch blocks the possibility of a user
adding HM to entries in a prefilled HASH table.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c |   17 ++++++++++++-----
 1 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 91cace8..215429b 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -2753,14 +2753,14 @@ static int table_insert_entry_hash(struct dpa_cls_table		*cls_table,
 	memcpy(key_data, key->byte, key->size);
 	key_params.p_Key = key_data;
 
-	errno = action_to_next_engine_params(action,
+	if (cls_table->params.prefilled_entries) {
+		errno = action_to_next_engine_params(action,
 				&key_params.ccNextEngineParams,
-				&hmd,
+				NULL,
 				(t_Handle)cls_table->params.distribution);
-	if (errno < 0)
-		return errno;
+		if (errno < 0)
+			return errno;
 
-	if (cls_table->params.prefilled_entries) {
 		/*
 		 * If pre-filled entries exist, fall through to the low level
 		 * driver only
@@ -2780,6 +2780,13 @@ static int table_insert_entry_hash(struct dpa_cls_table		*cls_table,
 		return 0;
 	}
 
+	errno = action_to_next_engine_params(action,
+				&key_params.ccNextEngineParams,
+				&hmd,
+				(t_Handle)cls_table->params.distribution);
+	if (errno < 0)
+		return errno;
+
 	hash_set_index = crc64_init();
 	hash_set_index = crc64_compute(key_data,
 				cls_table->params.hash_params.key_size,
-- 
1.7.5.4

