From 08ca0aa3744dba57244d7d556c8b1e46b39cb156 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 2 Apr 2013 17:47:27 +0800
Subject: [PATCH 009/518] dpaa_eth: Cleanup sysfs interface

Some code cleanup to simplify the internal representation of
sysfs objects associated with a dpaa ethernet interface.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c |   53 ++++++++++--------------
 drivers/net/ethernet/freescale/dpa/dpaa_eth.h |    5 --
 2 files changed, 22 insertions(+), 36 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index ff675ce..ff89fdd 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -3553,8 +3553,6 @@ static ssize_t dpaa_eth_show_addr(struct device *dev,
 		return sprintf(buf, "none");
 }
 
-static DEVICE_ATTR(device_addr, S_IRUGO, dpaa_eth_show_addr, NULL);
-
 static ssize_t dpaa_eth_show_fqids(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
@@ -3624,8 +3622,6 @@ static ssize_t dpaa_eth_show_fqids(struct device *dev,
 	return bytes;
 }
 
-static DEVICE_ATTR(fqids, S_IRUGO, dpaa_eth_show_fqids, NULL);
-
 static ssize_t dpaa_eth_show_dflt_bpid(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
@@ -3641,8 +3637,6 @@ static ssize_t dpaa_eth_show_dflt_bpid(struct device *dev,
 	return bytes;
 }
 
-static DEVICE_ATTR(dflt_bpid, S_IRUGO, dpaa_eth_show_dflt_bpid, NULL);
-
 static ssize_t dpaa_eth_show_mac_regs(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
@@ -3654,40 +3648,37 @@ static ssize_t dpaa_eth_show_mac_regs(struct device *dev,
 	return 0;
 }
 
-static DEVICE_ATTR(mac_regs, S_IRUGO, dpaa_eth_show_mac_regs, NULL);
+static struct device_attribute dpaa_eth_attrs[] = {
+	__ATTR(device_addr, S_IRUGO, dpaa_eth_show_addr, NULL),
+	__ATTR(fqids, S_IRUGO, dpaa_eth_show_fqids, NULL),
+	__ATTR(dflt_bpid, S_IRUGO, dpaa_eth_show_dflt_bpid, NULL),
+	__ATTR(mac_regs, S_IRUGO, dpaa_eth_show_mac_regs, NULL)
+};
 
 static void __devinit dpaa_eth_sysfs_init(struct device *dev)
 {
-	struct dpa_priv_s *priv = netdev_priv(to_net_dev(dev));
-	int i = 0;
-
-	if (device_create_file(dev, &dev_attr_device_addr))
-		dev_err(dev, "Error creating dpaa_eth addr file\n");
-	priv->sysfs_attrs[i++] = &dev_attr_device_addr;
-
-	if (device_create_file(dev, &dev_attr_fqids))
-		dev_err(dev, "Error creating dpaa_eth fqids file\n");
-	priv->sysfs_attrs[i++] = &dev_attr_fqids;
+	int i;
 
-	if (device_create_file(dev, &dev_attr_dflt_bpid))
-		dev_err(dev, "Error creating dpaa_eth dflt_bpid file\n");
-	priv->sysfs_attrs[i++] = &dev_attr_dflt_bpid;
+	for (i = 0; i < ARRAY_SIZE(dpaa_eth_attrs); i++)
+		if (device_create_file(dev, &dpaa_eth_attrs[i])) {
+			dev_err(dev, "Error creating sysfs file %s\n",
+				dpaa_eth_attrs[i].attr.name);
+			goto device_create_file_failed;
+		}
 
-	if (device_create_file(dev, &dev_attr_mac_regs))
-		dev_err(dev, "Error creating dpaa_eth mac_regs file\n");
-	priv->sysfs_attrs[i++] = &dev_attr_mac_regs;
+	return;
 
-	/* last entry must be NULL */
-	priv->sysfs_attrs[i] = NULL;
+device_create_file_failed:
+	while (i > 0)
+		device_remove_file(dev, &dpaa_eth_attrs[--i]);
 }
 
-static void dpaa_eth_sysfs_remove(struct net_device *net_dev)
+static void dpaa_eth_sysfs_remove(struct device *dev)
 {
-	struct dpa_priv_s *priv = netdev_priv(net_dev);
-	struct device_attribute **p = &priv->sysfs_attrs[0];
+	int i;
 
-	while (*p)
-		device_remove_file(&net_dev->dev, *p++);
+	for (i = 0; i < ARRAY_SIZE(dpaa_eth_attrs); i++)
+		device_remove_file(dev, &dpaa_eth_attrs[i]);
 }
 
 static int dpaa_eth_add_channel(void *__arg)
@@ -4043,7 +4034,7 @@ static int __devexit __cold dpa_remove(struct platform_device *of_dev)
 	net_dev = dev_get_drvdata(dev);
 	priv = netdev_priv(net_dev);
 
-	dpaa_eth_sysfs_remove(net_dev);
+	dpaa_eth_sysfs_remove(dev);
 
 	dev_set_drvdata(dev, NULL);
 	unregister_netdev(net_dev);
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
index 27f5812..5fc6efc 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
@@ -345,9 +345,6 @@ struct dpa_percpu_priv_s {
 	struct dpa_ern_cnt ern_cnt;
 };
 
-/* increment when adding new sysfs entries */
-#define DPA_MAX_NUM_OF_SYSFS_ATTRS 5
-
 struct dpa_priv_s {
 	struct dpa_bp *dpa_bp;
 	size_t bp_count;
@@ -390,8 +387,6 @@ struct dpa_priv_s {
 		 */
 		u32 cgr_congested_count;
 	} cgr_data;
-	/* sysfs entries, last value must be NULL */
-	struct device_attribute *sysfs_attrs[DPA_MAX_NUM_OF_SYSFS_ATTRS + 1];
 };
 
 extern const struct ethtool_ops dpa_ethtool_ops;
-- 
1.7.5.4

