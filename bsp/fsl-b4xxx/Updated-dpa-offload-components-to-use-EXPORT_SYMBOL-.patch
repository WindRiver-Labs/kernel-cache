From e06fe741b80f4fe352d34a3f3396074bfab92bcf Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Mon, 5 Mar 2012 18:41:55 +0000
Subject: [PATCH 103/518] Updated dpa offload components to use EXPORT_SYMBOL
 instead of EXPORT_SYMBOL_GPL

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Signed-off-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c |   28 +++++++++++-----------
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c      |   22 ++++++++--------
 2 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index ec2a044..ba78119 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -239,7 +239,7 @@ dpa_classif_table_create_error:
 
 	return err;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_create);
+EXPORT_SYMBOL(dpa_classif_table_create);
 
 int dpa_classif_table_free(int td)
 {
@@ -282,7 +282,7 @@ int dpa_classif_table_free(int td)
 
 	return err;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_free);
+EXPORT_SYMBOL(dpa_classif_table_free);
 
 int dpa_classif_table_modify_miss_action(int			td,
 				const struct dpa_cls_tbl_action	*miss_action)
@@ -360,7 +360,7 @@ int dpa_classif_table_modify_miss_action(int			td,
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_modify_miss_action);
+EXPORT_SYMBOL(dpa_classif_table_modify_miss_action);
 
 int dpa_classif_table_insert_entry(int				td,
 				const struct dpa_cls_tbl_key	*key,
@@ -415,7 +415,7 @@ int dpa_classif_table_insert_entry(int				td,
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_insert_entry);
+EXPORT_SYMBOL(dpa_classif_table_insert_entry);
 
 int dpa_classif_table_modify_entry_by_key(int			td,
 		const struct dpa_cls_tbl_key			*key,
@@ -461,7 +461,7 @@ int dpa_classif_table_modify_entry_by_key(int			td,
 
 	return dpa_classif_table_modify_entry_by_ref(td, entry_id, mod_params);
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_modify_entry_by_key);
+EXPORT_SYMBOL(dpa_classif_table_modify_entry_by_key);
 
 int dpa_classif_table_modify_entry_by_ref(int			td,
 		int						entry_id,
@@ -643,7 +643,7 @@ int dpa_classif_table_modify_entry_by_ref(int			td,
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_modify_entry_by_ref);
+EXPORT_SYMBOL(dpa_classif_table_modify_entry_by_ref);
 
 int dpa_classif_table_delete_entry_by_key(int				td,
 					const struct dpa_cls_tbl_key	*key)
@@ -679,7 +679,7 @@ int dpa_classif_table_delete_entry_by_key(int				td,
 
 	return dpa_classif_table_delete_entry_by_ref(td, entry_id);
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_delete_entry_by_key);
+EXPORT_SYMBOL(dpa_classif_table_delete_entry_by_key);
 
 int dpa_classif_table_delete_entry_by_ref(int td, int entry_id)
 {
@@ -805,7 +805,7 @@ int dpa_classif_table_delete_entry_by_ref(int td, int entry_id)
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_delete_entry_by_ref);
+EXPORT_SYMBOL(dpa_classif_table_delete_entry_by_ref);
 
 int dpa_classif_table_lookup_by_key(int				td,
 				const struct dpa_cls_tbl_key	*key,
@@ -845,7 +845,7 @@ int dpa_classif_table_lookup_by_key(int				td,
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_lookup_by_key);
+EXPORT_SYMBOL(dpa_classif_table_lookup_by_key);
 
 int dpa_classif_table_lookup_by_ref(int				td,
 				int				entry_id,
@@ -908,7 +908,7 @@ int dpa_classif_table_lookup_by_ref(int				td,
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_lookup_by_ref);
+EXPORT_SYMBOL(dpa_classif_table_lookup_by_ref);
 
 int dpa_classif_table_flush(int td)
 {
@@ -1030,7 +1030,7 @@ int dpa_classif_table_flush(int td)
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_flush);
+EXPORT_SYMBOL(dpa_classif_table_flush);
 
 int dpa_classif_table_get_entry_stats_by_key(int			td,
 					const struct dpa_cls_tbl_key	*key,
@@ -1068,7 +1068,7 @@ int dpa_classif_table_get_entry_stats_by_key(int			td,
 
 	return dpa_classif_table_get_entry_stats_by_ref(td, entry_id, stats);
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_get_entry_stats_by_key);
+EXPORT_SYMBOL(dpa_classif_table_get_entry_stats_by_key);
 
 int dpa_classif_table_get_entry_stats_by_ref(int		td,
 				int				entry_id,
@@ -1107,7 +1107,7 @@ int dpa_classif_table_get_entry_stats_by_ref(int		td,
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_get_entry_stats_by_ref);
+EXPORT_SYMBOL(dpa_classif_table_get_entry_stats_by_ref);
 
 int dpa_classif_table_get_params(int td, struct dpa_cls_tbl_params *params)
 {
@@ -1119,7 +1119,7 @@ int dpa_classif_table_get_params(int td, struct dpa_cls_tbl_params *params)
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_classif_table_get_params);
+EXPORT_SYMBOL(dpa_classif_table_get_params);
 
 static int alloc_table_management(struct dpa_cls_table *cls_table)
 {
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 0c4d266..2e3ab0c 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -2502,7 +2502,7 @@ int dpa_ipsec_init(const struct dpa_ipsec_params *params, int *dpa_ipsec_id)
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_init);
+EXPORT_SYMBOL(dpa_ipsec_init);
 
 int dpa_ipsec_free(int dpa_ipsec_id)
 {
@@ -2522,7 +2522,7 @@ int dpa_ipsec_free(int dpa_ipsec_id)
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_free);
+EXPORT_SYMBOL(dpa_ipsec_free);
 
 int dpa_ipsec_create_sa(int dpa_ipsec_id,
 			struct dpa_ipsec_sa_params *sa_params, int *sa_id)
@@ -2672,7 +2672,7 @@ int dpa_ipsec_create_sa(int dpa_ipsec_id,
 
 	return err;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_create_sa);
+EXPORT_SYMBOL(dpa_ipsec_create_sa);
 
 /*
  * The steps implemented here are:
@@ -2791,7 +2791,7 @@ int dpa_ipsec_remove_sa(int sa_id)
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_remove_sa);
+EXPORT_SYMBOL(dpa_ipsec_remove_sa);
 
 int dpa_ipsec_sa_add_policy(int sa_id,
 			    struct dpa_ipsec_policy_params *policy_params)
@@ -2841,7 +2841,7 @@ int dpa_ipsec_sa_add_policy(int sa_id,
 
 	return err;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_sa_add_policy);
+EXPORT_SYMBOL(dpa_ipsec_sa_add_policy);
 
 int dpa_ipsec_sa_remove_policy(int sa_id,
 			       struct dpa_ipsec_policy_params *policy_params)
@@ -2874,7 +2874,7 @@ int dpa_ipsec_sa_remove_policy(int sa_id,
 
 	return err;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_sa_remove_policy);
+EXPORT_SYMBOL(dpa_ipsec_sa_remove_policy);
 
 int dpa_ipsec_sa_rekeying(int sa_id,
 			  struct dpa_ipsec_sa_params *sa_params,
@@ -3043,7 +3043,7 @@ int dpa_ipsec_sa_rekeying(int sa_id,
 
 	return err;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_sa_rekeying);
+EXPORT_SYMBOL(dpa_ipsec_sa_rekeying);
 
 void sa_rekeying_work_func(struct work_struct *work)
 {
@@ -3158,7 +3158,7 @@ int dpa_ipsec_disable_sa(int sa_id)
 	xx_pr_err("This function is currently not supported\n");
 	return -EINVAL;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_disable_sa);
+EXPORT_SYMBOL(dpa_ipsec_disable_sa);
 
 int dpa_ipsec_flush_all_sa(int dpa_ipsec_id)
 {
@@ -3194,7 +3194,7 @@ int dpa_ipsec_flush_all_sa(int dpa_ipsec_id)
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_flush_all_sa);
+EXPORT_SYMBOL(dpa_ipsec_flush_all_sa);
 
 int dpa_ipsec_sa_get_policies(int sa_id,
 			      struct dpa_ipsec_policy_params *policy_params,
@@ -3231,7 +3231,7 @@ int dpa_ipsec_sa_get_policies(int sa_id,
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_sa_get_policies);
+EXPORT_SYMBOL(dpa_ipsec_sa_get_policies);
 
 int dpa_ipsec_sa_flush_policies(int sa_id)
 {
@@ -3255,4 +3255,4 @@ int dpa_ipsec_sa_flush_policies(int sa_id)
 	}
 	return 0;
 }
-EXPORT_SYMBOL_GPL(dpa_ipsec_sa_flush_policies);
+EXPORT_SYMBOL(dpa_ipsec_sa_flush_policies);
-- 
1.7.5.4

