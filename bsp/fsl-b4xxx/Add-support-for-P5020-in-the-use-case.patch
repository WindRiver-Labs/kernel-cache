From b3cd0772f73d7d9380a3a3aaecde28b123af8ed7 Mon Sep 17 00:00:00 2001
From: Cristian Birsan <cristian.birsan@freescale.com>
Date: Tue, 14 Feb 2012 17:30:32 +0000
Subject: [PATCH 099/518] Add support for P5020 in the use case

Signed-off-by: Cristian Birsan <cristian.birsan@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 .../usecases/dts/p5020ds-usdpaa.dts                |   39 ++++++++++++--------
 .../fsl_dpa_offload/usecases/platform_defs.h       |    8 ++++-
 drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c |    2 +-
 3 files changed, 32 insertions(+), 17 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/usecases/dts/p5020ds-usdpaa.dts b/drivers/staging/fsl_dpa_offload/usecases/dts/p5020ds-usdpaa.dts
index 8e84aa0..b7efccd 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/dts/p5020ds-usdpaa.dts
+++ b/drivers/staging/fsl_dpa_offload/usecases/dts/p5020ds-usdpaa.dts
@@ -62,15 +62,15 @@
 		};
 		bman-portal@24000 {
 		};
-
+		/* BPID 0 is used as dynamic FQID allocator */
 		buffer-pool@0 {
 			compatible = "fsl,p5020-bpool", "fsl,bpool";
 			fsl,bpid = <0>;
 			fsl,bpool-cfg = <0 0x100 0 1 0 0x100>;
 		};
-		/* NB: the bpool-cfg is set for no seeding (count==0), because
-		 * apps seed these pools buffers which are determined only at
-		 * run-time.
+		/* NB: the bpool-ethernet-seeds is not set to avoid buffer seeding,
+		 * because apps seed these pools buffers which are determined only
+		 * at run-time.
 		 * HOWEVER, the kernel driver requires the buffer-size and also
 		 * mis-interprets things if the base-address is zero (hence the
 		 * bogus values).
@@ -78,19 +78,34 @@
 		bp7: buffer-pool@7 {
 			compatible = "fsl,p5020-bpool", "fsl,bpool";
 			fsl,bpid = <7>;
-			fsl,bpool-cfg = <0 0 0 192 0 0xdeadbeef>;
+			fsl,bpool-ethernet-cfg = <0 0 0 192 0 0xdeadbeef>;
 			fsl,bpool-thresholds = <0x400 0xc00 0x0 0x0>;
 		};
 		bp8: buffer-pool@8 {
 			compatible = "fsl,p5020-bpool", "fsl,bpool";
 			fsl,bpid = <8>;
-			fsl,bpool-cfg = <0 0 0 576 0 0xabbaf00d>;
+			fsl,bpool-ethernet-cfg = <0 0 0 576 0 0xabbaf00d>;
 			fsl,bpool-thresholds = <0x100 0x300 0x0 0x0>;
 		};
 		bp9: buffer-pool@9 {
 			compatible = "fsl,p5020-bpool", "fsl,bpool";
 			fsl,bpid = <9>;
-			fsl,bpool-cfg = <0 0 0 1600 0 0xfeedabba>;
+			fsl,bpool-ethernet-cfg = <0 0 0 1600 0 0xfeedabba>;
+			fsl,bpool-thresholds = <0x100 0x300 0x0 0x0>;
+		};
+		bp10: buffer-pool@10 {
+			compatible = "fsl,p5020-bpool", "fsl,bpool";
+			fsl,bpid = <10>;
+			fsl,bpool-thresholds = <0x10 0x30 0x0 0x0>;
+		};
+		bp11: buffer-pool@11 {
+			compatible = "fsl,p5020-bpool", "fsl,bpool";
+			fsl,bpid = <11>;
+			fsl,bpool-thresholds = <0x100 0x300 0x0 0x0>;
+		};
+		bp12: buffer-pool@12 {
+			compatible = "fsl,p5020-bpool", "fsl,bpool";
+			fsl,bpid = <12>;
 			fsl,bpool-thresholds = <0x100 0x300 0x0 0x0>;
 		};
 	};
@@ -202,24 +217,18 @@
         };
        dpa_fman0_oh1: dpa-fman0-oh@1 {
 			compatible = "fsl,dpa-oh";
-			/* Define frame queues for the OH port*/
-			/* <OH Rx error, OH Rx default> */
 			fsl,qman-frame-queues-oh = <0x68 1 0x69 1>;
 			fsl,fman-oh-port = <&fman0_oh1>;
 		};
         dpa_fman0_oh2: dpa-fman0-oh@2 {
             compatible = "fsl,dpa-oh";
-	    fsl,bman-buffer-pools = <&bp9>;
-            /* Define frame queues for the OH port*/
-            /* <OH Rx error, OH Rx default> */
+            fsl,bman-buffer-pools = <&bp9>;
             fsl,qman-frame-queues-oh = <0x70 1 0x71 1>;
             fsl,fman-oh-port = <&fman0_oh2>;
         };
         dpa_fman0_oh3: dpa-fman0-oh@3 {
             compatible = "fsl,dpa-oh";
-	    fsl,bman-buffer-pools = <&bp9>;
-            /* Define frame queues for the OH port*/
-            /* <OH Rx error, OH Rx default> */
+            fsl,bman-buffer-pools = <&bp9>;
             fsl,qman-frame-queues-oh = <0x72 1 0x73 1>;
             fsl,fman-oh-port = <&fman0_oh3>;
         };
diff --git a/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h b/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h
index 143ff5a..0b1418a 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h
+++ b/drivers/staging/fsl_dpa_offload/usecases/platform_defs.h
@@ -36,13 +36,15 @@
 #define MACCFG1_LOOPBACK            0x00000100
 #define FM_1GMAC_CMD_CONF_CTRL_OFFSET   0x100
 
-#ifdef CONFIG_P4080_BUILD
+
 #define SOC_BASE		0xffe000000
 /* P4080 refman MPIC section */
 #define IIDR_BASE		0x50210
 #define JR0_INT_NUM		72
 #define JR_INT_NUM(n)		(JR0_INT_NUM + n)
 #define IIDR(n)			(IIDR_BASE + n*0x20)
+
+#ifdef CONFIG_P4080_BUILD
 #define QM_CHANNEL_FM0_SP_OH	qm_channel_fman0_sp5
 #define QM_CHANNEL_FM1_SP_OH	qm_channel_fman1_sp5
 #define QM_CHANNEL_FM0_SP_ETH	qm_channel_fman0_sp1
@@ -51,10 +53,14 @@
 #elif defined CONFIG_P3041_BUILD
 #define QM_CHANNEL_FM0_SP_OH	qm_channel_fman0_sp6
 #define QM_CHANNEL_FM1_SP_OH	qm_channel_fman1_sp6
+#define QM_CHANNEL_FM0_SP_ETH	qm_channel_fman0_sp1
+#define QM_CHANNEL_FM1_SP_ETH	qm_channel_fman1_sp1
 
 #elif defined CONFIG_P5020_BUILD
 #define QM_CHANNEL_FM0_SP_OH	qm_channel_fman0_sp6
 #define QM_CHANNEL_FM1_SP_OH	qm_channel_fman1_sp6
+#define QM_CHANNEL_FM0_SP_ETH	qm_channel_fman0_sp1
+#define QM_CHANNEL_FM1_SP_ETH	qm_channel_fman1_sp1
 #else
 	#error "Build not defined : P4080_BUILD P5020_BUILD P3041_BUILD"
 #endif
diff --git a/drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c b/drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c
index 014a026..1367920 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c
+++ b/drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c
@@ -74,7 +74,7 @@ struct work_arg {
 /*
   Returns core number where CAAM job ring 0 interrupt is routed
 */
-#ifdef CONFIG_P4080_BUILD
+#if defined(CONFIG_P4080_BUILD) || defined(CONFIG_P5020_BUILD)
 int get_offld_work_cpu(void)
 {
 	u32 *addr, iidr;
-- 
1.7.5.4

