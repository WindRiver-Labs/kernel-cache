From 89df9374e5a1e72d888fa71ebd6bd286b9555cde Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Wed, 20 Feb 2013 20:10:36 +0000
Subject: [PATCH 3/7] dpa_classifier: Add support for runtime modification of Remove type header manipulations

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c   |   88 ++++++++++++++++++--
 .../staging/fsl_dpa_offload/wrp_dpa_classifier.c   |    6 --
 2 files changed, 79 insertions(+), 15 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 5a825af..12f2dbf 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -4927,13 +4927,9 @@ static int remove_hm_update_params(struct dpa_cls_hm *premove_hm)
 	struct dpa_cls_hm_node *hm_node;
 
 	BUG_ON(!premove_hm);
+	BUG_ON(premove_hm->num_nodes != 1);
+	BUG_ON(!premove_hm->hm_node[0]);
 
-	if ((premove_hm->num_nodes < 1) || (!premove_hm->hm_node[0])) {
-		pr_err("ERROR: %s, %s (%d): Inconsistency between resources "
-			"and provided parameters.\n", __FILE__, __func__,
-			__LINE__);
-		return -EINVAL;
-	}
 	hm_node = premove_hm->hm_node[0];
 
 	hm_node->params.type			= e_FM_PCD_MANIP_HDR;
@@ -4978,9 +4974,83 @@ int dpa_classif_modify_remove_hm(int hmd,
 	const struct dpa_cls_hm_remove_params *new_remove_params,
 	int modify_flags)
 {
-	pr_err("ERROR: %s, %s (%d): Not implemented yet.\n", __FILE__, __func__,
-		__LINE__);
-	return -ENOSYS;
+	struct dpa_cls_hm_node *hm_node;
+	struct dpa_cls_hm *premove_hm;
+	bool update = false;
+	t_Error error;
+	int ret = 0;
+
+	if (!modify_flags)
+		/* Nothing to do */
+		return 0;
+
+	/* Parameters sanity checks: */
+	if (!new_remove_params) {
+		pr_err("ERROR: %s, %s (%d): \"new_remove_params\" cannot be "
+			"NULL.\n", __FILE__, __func__, __LINE__);
+		return -EINVAL;
+	}
+	if ((hmd < 0) || (hmd >= hm_array.num_descriptors)) {
+		pr_err("ERROR: %s, %s (%d): Invalid HM descriptor hmd=%d. "
+			"Should be between %d and %d.\n", __FILE__, __func__,
+			__LINE__, hmd, 0, hm_array.num_descriptors-1);
+		return -EINVAL;
+	}
+	if (!hm_array.object[hmd]) {
+		pr_err("ERROR: %s, %s (%d): Invalid HM descriptor hmd=%d.\n",
+			__FILE__, __func__, __LINE__, hmd);
+		return -EINVAL;
+	}
+
+	premove_hm = (struct dpa_cls_hm *)hm_array.object[hmd];
+
+	if (premove_hm->type != DPA_CLS_HM_TYPE_REMOVE) {
+		pr_err("ERROR: %s, %s (%d): hmd=%d is not an REMOVE type "
+			"header manip.\n", __FILE__, __func__, __LINE__, hmd);
+		return -EINVAL;
+	}
+
+	if ((modify_flags & DPA_CLS_HM_RM_MOD_TYPE) &&
+		(new_remove_params->type != premove_hm->remove_params.type)) {
+		update = true;
+		premove_hm->remove_params.type = new_remove_params->type;
+	}
+
+	if ((modify_flags & DPA_CLS_HM_RM_MOD_CUSTOM_OFFSET) &&
+		(new_remove_params->custom.offset !=
+				premove_hm->remove_params.custom.offset)) {
+		update = true;
+		premove_hm->remove_params.custom.offset =
+				new_remove_params->custom.offset;
+	}
+
+	if ((modify_flags & DPA_CLS_HM_RM_MOD_CUSTOM_SIZE) &&
+		(new_remove_params->custom.size !=
+				premove_hm->remove_params.custom.size)) {
+		update = true;
+		premove_hm->remove_params.custom.size =
+					new_remove_params->custom.size;
+	}
+
+	if (update) {
+		ret = remove_hm_update_params(premove_hm);
+		if (ret == 0) {
+			hm_node = premove_hm->hm_node[0];
+
+			error = FM_PCD_ManipNodeReplace(hm_node->node,
+							&hm_node->params);
+			if (error != E_OK) {
+				pr_err("ERROR: %s, %s (%d): FMan driver call "
+					"failed - FM_PCD_ManipNodeReplace, "
+					"while trying to modify hmd=%d, manip "
+					"node handle=0x%p.\n", __FILE__,
+					__func__, __LINE__, hmd, hm_node->node);
+				return -EBUSY;
+			}
+		}
+	}
+
+	return ret;
 }
 EXPORT_SYMBOL(dpa_classif_modify_remove_hm);
 
diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
index 9ae9440..bf7d426 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
@@ -821,12 +821,6 @@ static long do_ioctl_modify_remove_hm(unsigned long args, bool compat_mode)
 	dpa_cls_wrp_dbg(("DEBUG: classifier_wrp %s (%d)\n", __func__,
 		__LINE__));
 
-	/* Translate FM_PCD file descriptor */
-	kparam.rm_params.fm_pcd = translate_fm_pcd_handle(kparam.rm_params.
-								fm_pcd);
-	if (!kparam.rm_params.fm_pcd)
-		return -EINVAL;
-
 	return dpa_classif_modify_remove_hm(kparam.hmd, &kparam.rm_params,
 					   kparam.modify_flags);
 }
-- 
1.7.0.2

