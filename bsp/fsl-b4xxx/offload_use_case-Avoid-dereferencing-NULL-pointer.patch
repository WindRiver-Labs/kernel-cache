From 9a3b211f6a91d3ea6f15e90d79d7e79870cd0a27 Mon Sep 17 00:00:00 2001
From: Radu-Andrei BULIE <radu.bulie@freescale.com>
Date: Wed, 31 Oct 2012 22:38:50 +0000
Subject: [PATCH 368/518] offload_use_case: Avoid dereferencing NULL pointer

The patch fixes the problem raised by dereferencing a pointer
that can be NULL. No check was done to verify if the pointer was
valid or not.

Signed-off-by: Radu-Andrei BULIE <radu.bulie@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 .../staging/fsl_dpa_offload/usecases/genl_ctl.c    |   15 +++++++--------
 1 files changed, 7 insertions(+), 8 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
index a867ddb..6fd4af3 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
+++ b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
@@ -175,6 +175,8 @@ static int get_ipsec_offld_data_fromsa(struct sk_buff *skb_2,
 	x = xfrm_state_lookup(&init_net, 0, &sa_req.sa_info.id.daddr,
 			      sa_req.sa_info.id.spi, sa_req.sa_info.id.proto,
 			      sa_req.sa_info.family);
+	if (!x)
+		return -ENOKEY;
 
 	/* allocate reply */
 	skb = genlmsg_new(NLMSG_GOODSIZE, GFP_KERNEL);
@@ -217,14 +219,11 @@ static int get_ipsec_offld_data_fromsa(struct sk_buff *skb_2,
 		goto out;
 
 	/* run policy walking and fill skb with policy information */
-	if (x) {
-		arg.x = x;
-		arg.skb = skb;
-		xfrm_policy_walk_init(&walk, XFRM_POLICY_TYPE_ANY);
-		xfrm_policy_walk(&init_net, &walk, policy_walk_func_fromsa,
-				 &arg);
-		xfrm_policy_walk_done(&walk);
-	}
+	arg.x = x;
+	arg.skb = skb;
+	xfrm_policy_walk_init(&walk, XFRM_POLICY_TYPE_ANY);
+	xfrm_policy_walk(&init_net, &walk, policy_walk_func_fromsa, &arg);
+	xfrm_policy_walk_done(&walk);
 
 	/* send reply to user */
 	genlmsg_end(skb, msg_head);
-- 
1.7.5.4

