From e35c55982991b602d7822a1251b312273ef91e76 Mon Sep 17 00:00:00 2001
From: Radu-Andrei BULIE <radu.bulie@freescale.com>
Date: Thu, 27 Sep 2012 21:22:35 +0000
Subject: [PATCH 329/518] offload_use_case: Set inbound policy verification as
 optional

Inbound policy verification is set optional. A parameter  received
in  kernel usecase, informs the module if inbound policy verification
was requested by the user. If this is true, inbound policies are
offloaded.

Signed-off-by: Radu-Andrei BULIE <radu.bulie@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/usecases/common.h  |    2 +-
 .../staging/fsl_dpa_offload/usecases/genl_ctl.h    |    1 +
 .../staging/fsl_dpa_offload/usecases/ipsec_init.c  |    8 ++++++--
 drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c |    7 +++++++
 4 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/usecases/common.h b/drivers/staging/fsl_dpa_offload/usecases/common.h
index d6252ce..1a2b80e 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/common.h
+++ b/drivers/staging/fsl_dpa_offload/usecases/common.h
@@ -70,6 +70,6 @@ extern int dpa_ipsec_id;
 extern int outb_post_ipsec_td[MAX_POST_ENC_PROTOS];
 extern int outb_post_tx_fqid;
 extern int outb_update_hmd;
-
+extern bool inb_pol_check;
 
 #endif
diff --git a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h
index 3729c0a..7adcfa8 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h
+++ b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h
@@ -97,6 +97,7 @@ struct ipsec_uparms {
 	__u32 ip_src_ob_nat;
 	__u32 ip_dst_ob_nat;
 	__u32 udp_dport_ob_nat;
+	bool inb_pol_check;
 };
 
 /* Inbound post IPSEC OH queue types*/
diff --git a/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c b/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c
index 3304bdf..0fde9d6 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c
+++ b/drivers/staging/fsl_dpa_offload/usecases/ipsec_init.c
@@ -138,6 +138,7 @@ int outb_post_ipsec_td[MAX_POST_ENC_PROTOS];
 int outb_pre_ipsec_nat_td;
 int outb_post_tx_fqid;
 int outb_update_hmd;
+bool inb_pol_check;
 
 int init_ipsec_offload(int *dpa_ipsec_id, struct ipsec_uparms *params)
 {
@@ -230,8 +231,11 @@ int init_ipsec_offload(int *dpa_ipsec_id, struct ipsec_uparms *params)
 
 	/* INB policy verification */
 	ipsec_params.post_sec_in_params.dpa_cls_td = cls_td;
-	ipsec_params.post_sec_in_params.do_pol_check = TRUE;
-	ipsec_params.post_sec_in_params.key_fields = DPA_IPSEC_KEY_FIELD_DPORT;
+	ipsec_params.post_sec_in_params.do_pol_check = params->inb_pol_check;
+	inb_pol_check = params->inb_pol_check;
+	if (inb_pol_check)
+		ipsec_params.post_sec_in_params.key_fields =
+						DPA_IPSEC_KEY_FIELD_DPORT;
 
 	/* OUTB/UL post SEC params */
 	/* data_off - SEC preheader burst size in bytes */
diff --git a/drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c b/drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c
index 6877b54..cca654d 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c
+++ b/drivers/staging/fsl_dpa_offload/usecases/xfrm_km.c
@@ -704,6 +704,11 @@ static int policy_walk_func(struct xfrm_policy *pol, int dir, int count,
 		}
 
 	}
+	/* if inbound policy verification is not required, inbound policy is not
+	 * offloaded */
+	if (dir == XFRM_POLICY_IN && inb_pol_check == false)
+		goto no_offload;
+
 	err = offload_policy(&pol_params, &pol->selector, sa->sa_id, dir,
 				policy_fqid);
 	if (err < 0) {
@@ -711,6 +716,8 @@ static int policy_walk_func(struct xfrm_policy *pol, int dir, int count,
 		       __func__, __LINE__, pol->index, err);
 		return err;
 	}
+
+no_offload:
 	/* stop walking if notified by policy to avoid
 	offloading twice the same policy*/
 	if (from_pol)
-- 
1.7.5.4

