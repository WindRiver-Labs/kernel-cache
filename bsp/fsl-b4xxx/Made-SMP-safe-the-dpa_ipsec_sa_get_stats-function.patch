From 25ee57a115441e0d4612aae4085de5c2a7e04a82 Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Fri, 18 May 2012 20:54:43 +0000
Subject: [PATCH 178/518] Made SMP safe the dpa_ipsec_sa_get_stats function

lock on SA structure.
return -EBUSY if lock is contended.

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Acked-by: Mihai Serb <mihai.serb@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |   14 ++++++++++++--
 1 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 04964e7..dba62c5 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -4176,6 +4176,7 @@ EXPORT_SYMBOL(dpa_ipsec_sa_flush_policies);
 int dpa_ipsec_sa_get_stats(int sa_id, struct dpa_ipsec_sa_stats *sa_stats)
 {
 	struct dpa_ipsec_sa *sa;
+	int ret = 0;
 	uint32_t *desc;
 
 	if (!sa_stats) {
@@ -4189,14 +4190,23 @@ int dpa_ipsec_sa_get_stats(int sa_id, struct dpa_ipsec_sa_stats *sa_stats)
 		return -EINVAL;
 	}
 
+	ret = mutex_trylock(&sa->lock);
+	if (ret == 0) {
+		xx_pr_err("Failed to acquire lock for SA %d\n", sa->id);
+		return -EBUSY;
+	}
+
 	if (!sa->enable_stats) {
 		xx_pr_err("Statistics are not enabled for SA id %d\n", sa_id);
+		mutex_unlock(&sa->lock);
 		return -EPERM;
 	}
 
 	desc = (uint32_t *)sa->sec_desc->desc;
-	sa_stats->packets_count = *(desc + sa->stats_offset / sizeof(u32));
-	sa_stats->bytes_count = *(desc + sa->stats_offset / sizeof(u32) + 1);
+	sa_stats->packets_count = *(desc + sa->stats_offset / 4);
+	sa_stats->bytes_count = *(desc + sa->stats_offset / 4 + 1);
+
+	mutex_unlock(&sa->lock);
 
 	return 0;
 }
-- 
1.7.5.4

