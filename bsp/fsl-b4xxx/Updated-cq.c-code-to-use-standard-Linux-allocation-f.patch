From 4f99c430449d45083972a5a45d0967f29e972efb Mon Sep 17 00:00:00 2001
From: andrei varvara <andrei.varvara@freescale.com>
Date: Fri, 29 Jun 2012 16:15:49 +0000
Subject: [PATCH 216/518] Updated cq.c code to use standard Linux
 allocation/free funtions

replaced xx_malloc/xx_free with kmalloc/kfree

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Acked-by: Mihai Serb <mihai.serb@freescale.com>
Acked-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/cq.c |    5 ++---
 1 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/cq.c b/drivers/staging/fsl_dpa_offload/cq.c
index 67e4606..e04bc88 100644
--- a/drivers/staging/fsl_dpa_offload/cq.c
+++ b/drivers/staging/fsl_dpa_offload/cq.c
@@ -46,8 +46,7 @@ struct cq *cq_new(int max_items, int item_size)
 	xx_assert(max_items);
 	xx_assert(item_size);
 
-	cq = (struct cq *)xx_malloc((uint32_t)
-				(sizeof(struct cq) + max_items * item_size));
+	cq = kmalloc(sizeof(*cq) + max_items * item_size, GFP_KERNEL);
 	if (cq) {
 		cq->max_items = max_items;
 		cq->item_size = item_size;
@@ -67,7 +66,7 @@ void cq_delete(struct cq *cq)
 		udelay(100);
 		cpu_relax();
 	}
-	xx_free(cq);
+	kfree(cq);
 }
 
 int cq_flush(struct cq *cq)
-- 
1.7.5.4

