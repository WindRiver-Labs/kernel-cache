From 5b9350cb0516ed563a7f7af80d350975494682fb Mon Sep 17 00:00:00 2001
From: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
Date: Tue, 26 Feb 2013 12:00:35 +0200
Subject: [PATCH 474/518] dpa_ipsec: Fix support for protocol type ICMP

The implementation treated the protocol ICMP as having the same
number (1) both for IPv4 and IPv6 header. For IPv6 protocol the
ICMP protocol has the number 58 so the code was adjusted to have
support both for ICMP and ICMPv6.

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |    7 +++++--
 drivers/staging/fsl_dpa_offload/dpa_ipsec.h |   11 ++++++-----
 2 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 52485f4..78c5934 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -32,6 +32,7 @@
 #include <linux/netdevice.h>
 #include <linux/delay.h>
 #include <linux/in.h>
+#include <linux/in6.h>
 
 #include "dpa_ipsec.h"
 #include "dpa_ipsec_desc.h"
@@ -1221,7 +1222,8 @@ static int fill_policy_key(int td,
 
 		/* case DPA_IPSEC_KEY_FIELD_ICMP_TYPE: */
 		case DPA_IPSEC_KEY_FIELD_SPORT:
-			if (pol_params->protocol == IPPROTO_ICMP) {
+			if ((pol_params->protocol == IPPROTO_ICMP) ||
+			   (pol_params->protocol == IPPROTO_ICMPV6)) {
 				SET_BYTE_VAL_IN_ARRAY(key, offset,
 						    pol_params->icmp.icmp_type);
 				SET_BYTE_VAL_IN_ARRAY(mask, offset,
@@ -1239,7 +1241,8 @@ static int fill_policy_key(int td,
 
 		/* case DPA_IPSEC_KEY_FIELD_ICMP_CODE: */
 		case DPA_IPSEC_KEY_FIELD_DPORT:
-			if (pol_params->protocol == IPPROTO_ICMP) {
+			if ((pol_params->protocol == IPPROTO_ICMP) ||
+			   (pol_params->protocol == IPPROTO_ICMPV6)) {
 				SET_BYTE_VAL_IN_ARRAY(key, offset,
 						    pol_params->icmp.icmp_code);
 				SET_BYTE_VAL_IN_ARRAY(mask, offset,
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
index 2fc5909..1a3de5a 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
@@ -124,11 +124,12 @@
 	IPSEC_ALGS_ENTRY(AES_CTR, HMAC_SHA2_512_256)		\
 }
 
-#define GET_POL_TABLE_IDX(_proto, _ip_ver) \
-	((_proto == IPPROTO_TCP)  ? DPA_IPSEC_PROTO_TCP_##_ip_ver :  \
-	 (_proto == IPPROTO_UDP)  ? DPA_IPSEC_PROTO_UDP_##_ip_ver :  \
-	 (_proto == IPPROTO_ICMP) ? DPA_IPSEC_PROTO_ICMP_##_ip_ver : \
-	 (_proto == IPPROTO_SCTP) ? DPA_IPSEC_PROTO_SCTP_##_ip_ver : \
+#define GET_POL_TABLE_IDX(_proto, _ip_ver)				\
+	((_proto == IPPROTO_TCP)  ? DPA_IPSEC_PROTO_TCP_##_ip_ver :	\
+	 (_proto == IPPROTO_UDP)  ? DPA_IPSEC_PROTO_UDP_##_ip_ver :	\
+	((_proto == IPPROTO_ICMP) ||					\
+	 (_proto == IPPROTO_ICMPV6)) ? DPA_IPSEC_PROTO_ICMP_##_ip_ver:	\
+	 (_proto == IPPROTO_SCTP) ? DPA_IPSEC_PROTO_SCTP_##_ip_ver :	\
 	  DPA_IPSEC_PROTO_ANY_##_ip_ver)
 
 #define DPA_IPSEC_ADDR_T_IPv4	4
-- 
1.7.5.4

