From 9ac9d3df6632ef7142835c4629c2bf646b5e6980 Mon Sep 17 00:00:00 2001
From: shaohui xie <Shaohui.Xie@freescale.com>
Date: Wed, 23 Jan 2013 16:18:32 +0000
Subject: [PATCH 023/518] powerpc/sata: add workaround for erratum A-005636

When NCQ is enabled, the SATA controller does not support
DMA setup FIS with autoactivate enabled from the device. The SATA host
may timeout without finishing the transaction.

This will have a minor performance impact as disabling the
auto-activate feature requires the device to send a DMA setup as
well as a DMA activate FIS to enable reception of the first data
FIS.

Workaround:
Software will set a flag if it's running on t4240 rev 1.0, and check if
device enables DMA AA by default, then driver will:
1. Disable the DMA setup auto-activate feature by a set features command.
2. if 1# fail, then disable NCQ by setting the queue depth to one.

Signed-off-by: Shaohui Xie <Shaohui.Xie@freescale.com>
Signed-off-by: Andy Fleming <afleming@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/ata/libata-core.c |   15 +++++++++++++++
 drivers/ata/sata_fsl.c    |   18 +++++++++++++++++-
 include/linux/ata.h       |    2 ++
 include/linux/libata.h    |    2 ++
 4 files changed, 36 insertions(+), 1 deletions(-)

diff --git a/drivers/ata/libata-core.c b/drivers/ata/libata-core.c
index 4b4caa3..fcc40f4 100644
--- a/drivers/ata/libata-core.c
+++ b/drivers/ata/libata-core.c
@@ -2125,6 +2125,21 @@ static int ata_dev_config_ncq(struct ata_device *dev,
 			aa_desc = ", AA";
 	}
 
+	if ((ap->flags & ATA_FLAG_BROKENAA)
+			&& (ata_id_has_fpdma_aa(dev->id))
+			&& (ata_id_enabled_fpdma_aa(dev->id))) {
+		err_mask = ata_dev_set_feature(dev, SETFEATURES_SATA_DISABLE,
+				SATA_FPDMA_AA);
+		if (err_mask) {
+			ata_dev_printk(dev, KERN_ERR, "failed to disable AA"
+				"(error_mask=0x%x)\n", err_mask);
+			/* turn off NCQ if failed disable SATA_FPDMA_AA */
+			hdepth = 1;
+			dev->flags &= ~ATA_DFLAG_NCQ;
+			dev->flags |= ATA_DFLAG_NCQ_OFF;
+		}
+	}
+
 	if (hdepth >= ddepth)
 		snprintf(desc, desc_sz, "NCQ (depth %d)%s", ddepth, aa_desc);
 	else
diff --git a/drivers/ata/sata_fsl.c b/drivers/ata/sata_fsl.c
index 0e836e7..94dc37d 100644
--- a/drivers/ata/sata_fsl.c
+++ b/drivers/ata/sata_fsl.c
@@ -1570,7 +1570,7 @@ static int sata_fsl_probe(struct platform_device *ofdev)
 		}
 	}
 
-	if (of_device_is_compatible(ofdev->dev.of_node, "fsl,pq-sata-v2"))
+	if (of_device_is_compatible(ofdev->dev.of_node, "fsl,pq-sata-v2")) {
 		/*
 		 * if SATA_FSL_QUIRK_P3P5_ERRATA is applied already,
 		 * we will not apply the SATA_FSL_QUIRK_V2_ERRATA, the former
@@ -1579,6 +1579,22 @@ static int sata_fsl_probe(struct platform_device *ofdev)
 		if (!(host_priv->quirks & SATA_FSL_QUIRK_P3P5_ERRATA))
 			host_priv->quirks |= SATA_FSL_QUIRK_V2_ERRATA;
 
+		/*
+		 * workaround A-005636.
+		 * This erratum will only be fixed on T4 Rev2.0, Any
+		 * platforms except T4 rev2.0 will have this workaround.
+		 */
+		pi.flags |= ATA_FLAG_BROKENAA;
+
+		if (of_device_is_compatible(ofdev->dev.of_node,
+					"fsl,t4240-rev1.0-sata")) {
+			if ((mfspr(SPRN_SVR) & 0xff) != 0x10) {
+				/* remove workaround A-005636 if not rev1.0 */
+				pi.flags &= ~ATA_FLAG_BROKENAA;
+			}
+		}
+	}
+
 	/* allocate host structure */
 	host = ata_host_alloc_pinfo(&ofdev->dev, ppi, SATA_FSL_MAX_PORTS);
 	if (!host) {
diff --git a/include/linux/ata.h b/include/linux/ata.h
index 32df2b6..1233d67 100644
--- a/include/linux/ata.h
+++ b/include/linux/ata.h
@@ -567,6 +567,8 @@ static inline int ata_is_data(u8 prot)
 #define ata_id_has_fpdma_aa(id)	\
 	( (((id)[76] != 0x0000) && ((id)[76] != 0xffff)) && \
 	  ((id)[78] & (1 << 2)) )
+#define ata_id_enabled_fpdma_aa(id)	\
+	  ((id)[79] & (1 << 2))
 #define ata_id_iordy_disable(id) ((id)[ATA_ID_CAPABILITY] & (1 << 10))
 #define ata_id_has_iordy(id) ((id)[ATA_ID_CAPABILITY] & (1 << 11))
 #define ata_id_u32(id,n)	\
diff --git a/include/linux/libata.h b/include/linux/libata.h
index 3d195c0..cc92149 100644
--- a/include/linux/libata.h
+++ b/include/linux/libata.h
@@ -208,6 +208,8 @@ enum {
 	ATA_FLAG_SW_ACTIVITY	= (1 << 22), /* driver supports sw activity
 					      * led */
 	ATA_FLAG_NO_DIPM	= (1 << 23), /* host not happy with DIPM */
+	ATA_FLAG_BROKENAA	= (1 << 24),  /* host not support DMA AA
+						 enabled by default */
 
 	/* bits 24:31 of ap->flags are reserved for LLD specific flags */
 
-- 
1.7.5.4

