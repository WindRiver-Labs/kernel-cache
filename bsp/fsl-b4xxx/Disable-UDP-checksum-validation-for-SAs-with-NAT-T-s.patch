From 0b5fb003c98ef581730c40f5ec1b70b794757534 Mon Sep 17 00:00:00 2001
From: Mihai Serb <mihai.serb@freescale.com>
Date: Thu, 17 May 2012 20:35:51 +0000
Subject: [PATCH 150/518] Disable UDP checksum validation for SAs with NAT-T
 support

It is possible that the calling application provides as parameter
to dpa_ipsec_create_sa an encapsulating udp header with the
checksum field != 0. Because there is currently no mechanism to
update the UDP checksum, the resulting ESP packet will have an
invalid UDP checksum.

The changes in this patch ensure that the UDP checksum field is
automatically set to 0x0000 (i.e. disabled).

Signed-off-by: Mihai Serb <maihai.serb@freescale.com>
Acked-by: Andrei Varvara <andrei.varvara@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |    8 ++++++++
 drivers/staging/fsl_dpa_offload/dpa_ipsec.h |    3 +++
 2 files changed, 11 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 7a5ea42..fcef656 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -1996,6 +1996,8 @@ static int copy_sa_params_to_out_sa(struct dpa_ipsec_sa *sa,
 
 	if (sa_params->sa_out_params.outer_udp_header) {
 		uint8_t *tmp;
+		struct udphdr *udp_hdr;
+
 		tmp = (uint8_t *) &sa->sec_desc->pdb_en.ip_hdr[0];
 		memcpy(tmp + sa_params->sa_out_params.ip_hdr_size,
 		       sa_params->sa_out_params.outer_udp_header,
@@ -2003,6 +2005,12 @@ static int copy_sa_params_to_out_sa(struct dpa_ipsec_sa *sa,
 		sa->sec_desc->pdb_en.ip_hdr_len =
 			sa_params->sa_out_params.ip_hdr_size + UDP_HEADER_LEN;
 		sa->use_udp_encap = TRUE;
+
+		/* disable UDP checksum calculation, because for now there is
+		 * no mechanism for UDP checksum update */
+		udp_hdr = (struct udphdr *) (tmp +
+				sa_params->sa_out_params.ip_hdr_size);
+		udp_hdr->check = 0x0000;
 	} else {
 		sa->sec_desc->pdb_en.ip_hdr_len =
 				sa_params->sa_out_params.ip_hdr_size;
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
index eb9e1e2..f21c41f 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
@@ -43,6 +43,9 @@
 /*For IP header structure definition */
 #include <linux/ip.h>
 
+/*For UDP header structure definition */
+#include <linux/udp.h>
+
 #include "desc.h"
 
 #include "dpa_compat.h"
-- 
1.7.5.4

