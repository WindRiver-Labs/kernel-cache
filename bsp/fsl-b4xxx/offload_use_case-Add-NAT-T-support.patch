From 91625c29a5faa499ab3f1480c258f16edb71ffcb Mon Sep 17 00:00:00 2001
From: Radu Bulie <radu.bulie@freescale.com>
Date: Wed, 12 Dec 2012 21:47:42 +0000
Subject: [PATCH 446/518] offload_use_case: Add NAT-T support

When an SA with NAT-T support is added by the Linux XFRM
module, information about NAT encapsulation can be found
in xfrm_encap_tmpl structure.

This patch adds the extra information from xfrm encap structure
which is passed to userspace through generic netlink when
a new SA is added. Using this structure it can be established
whether an SA uses NAT-T, thus enabling the offload of NAT-T IPSec
flows.

Signed-off-by: Radu Bulie <radu.bulie@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 .../staging/fsl_dpa_offload/usecases/genl_ctl.c    |   33 +++++++++++--------
 .../staging/fsl_dpa_offload/usecases/genl_ctl.h    |   10 ++++++
 2 files changed, 29 insertions(+), 14 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
index 7a65c8a..9f73c9b 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
+++ b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.c
@@ -80,7 +80,7 @@ static int policy_walk_func_fromsa(struct xfrm_policy *pol, int dir, int count,
 	struct pol_walk_arg_fromsa *arg = (struct pol_walk_arg_fromsa *)ptr;
 	struct xfrm_state *x = arg->x;
 	struct sk_buff *skb = arg->skb;
-	struct xfrm_userpolicy_id pol_id;
+	struct xfrm_pol_userinfo xfrm_info;
 	int ret;
 
 	/* we support only one template per policy so only the
@@ -101,11 +101,16 @@ static int policy_walk_func_fromsa(struct xfrm_policy *pol, int dir, int count,
 	}
 
 	if (dir == XFRM_POLICY_OUT || dir == XFRM_POLICY_IN) {
-		memset(&pol_id, 0, sizeof(pol_id));
-		pol_id.sel = pol->selector;
-		pol_id.dir = (uint8_t)dir;
-		pol_id.index = pol->index;
-		ret = nla_put(skb, XFRMA_POLICY, sizeof(pol_id), &pol_id);
+		memset(&xfrm_info, 0, sizeof(xfrm_info));
+		xfrm_info.pol_id.sel = pol->selector;
+		xfrm_info.pol_id.dir = (uint8_t)dir;
+		xfrm_info.pol_id.index = pol->index;
+		if (x->encap) {
+			memcpy(&xfrm_info.encap, x->encap,
+			       sizeof(xfrm_info.encap));
+		}
+		ret = nla_put(skb, XFRMA_POLICY, sizeof(xfrm_info), &xfrm_info);
+
 		if (ret) {
 			pr_err("%s(%d): error constructing policy reply\n",
 			       __func__, __LINE__);
@@ -241,7 +246,7 @@ static int get_ipsec_offld_data_frompol(struct sk_buff *skb_2,
 	struct new_pol_req pol_req;
 	struct nlattr *na;
 	struct xfrm_state *state = NULL;
-	struct xfrm_usersa_info sa_info;
+	struct xfrm_sa_userinfo xfrm_info;
 	struct sk_buff *skb;
 	void *msg_head;
 	struct xfrm_policy_walk walk;
@@ -325,13 +330,13 @@ static int get_ipsec_offld_data_frompol(struct sk_buff *skb_2,
 		if (rc < 0)
 			goto out;
 
-		memset(&sa_info, 0, sizeof(sa_info));
-		sa_info.saddr = state->props.saddr;
-		sa_info.id.daddr = state->id.daddr;
-		sa_info.id.spi = state->id.spi;
-		sa_info.id.proto = state->id.proto;
-		sa_info.family = state->props.family;
-		rc = nla_put(skb, XFRMA_SA, sizeof(sa_info), &sa_info);
+		memset(&xfrm_info, 0, sizeof(xfrm_info));
+		xfrm_info.sa_info.saddr = state->props.saddr;
+		xfrm_info.sa_info.id.daddr = state->id.daddr;
+		xfrm_info.sa_info.id.spi = state->id.spi;
+		xfrm_info.sa_info.id.proto = state->id.proto;
+		xfrm_info.sa_info.family = state->props.family;
+		rc = nla_put(skb, XFRMA_SA, sizeof(xfrm_info), &xfrm_info);
 		if (rc < 0)
 			goto out;
 	}
diff --git a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h
index 19eeacd..e64f1b2 100644
--- a/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h
+++ b/drivers/staging/fsl_dpa_offload/usecases/genl_ctl.h
@@ -157,5 +157,15 @@ struct ipsec_fm_uparms {
 	struct outb_nat_keys nat_keys[OUTB_NAT_MAX_NUM_KEYS];
 };
 
+struct xfrm_pol_userinfo {
+	struct xfrm_userpolicy_id pol_id;
+	struct xfrm_encap_tmpl	encap;
+};
+
+struct xfrm_sa_userinfo {
+	struct xfrm_usersa_info sa_info;
+	struct xfrm_encap_tmpl	encap;
+};
+
 
 #endif
-- 
1.7.5.4

