From b69958f4d0203d4c64b5d73b1f5e87005c00c795 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Wed, 30 Jan 2013 22:42:32 +0000
Subject: [PATCH 030/518] qman: Increase default size of PFDR pool

In (not so) pathological scenarios where cores are transmitting small
datagrams at a very fast pace, QMan's PFDR pool may deplete and a "PFDR
low" interrupt is raised, shortly followed by an "enqueues blocked
interrupt".
Because the combination of the two may lead to a system-wide deadlock
(all entities - cores, FMan - remaining stuck while trying to
enqueue to a PFDR-depleted QMan), the worst-case scenario may entail a
system reboot.

As it turns out, increasing the default PFDR pool size from 16M to 32M
suffices to work around the described problem, at least on a 8-core
P4080 (on which the problem was reported).

While we're at it, moved the hard-coded DEFAULT_PFDR_SZ value to the
Kconfig.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Signed-off-by: Andy Fleming <afleming@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_qbman/Kconfig       |    7 +++++++
 drivers/staging/fsl_qbman/qman_config.c |    3 +--
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_qbman/Kconfig b/drivers/staging/fsl_qbman/Kconfig
index ebf6dd3..1c3906b 100644
--- a/drivers/staging/fsl_qbman/Kconfig
+++ b/drivers/staging/fsl_qbman/Kconfig
@@ -171,6 +171,13 @@ config FSL_QMAN_FQD_SZ
 	  ex: 10 => PAGE_SIZE * (2^10)
 	  Note: Default device-trees now require minimum Kconfig setting of 10.
 
+config FSL_QMAN_PFDR_SZ
+	int "size of the PFDR pool"
+	default 13
+	---help---
+	  This is the size of the PFDR pool defined as: PAGE_SIZE * (2^value)
+	  ex: 13 => PAGE_SIZE * (2^13)
+
 # Corenet initiator settings. Stash request queues are 4-deep to match cores'
 # ability to snart. Stash priority is 3, other priorities are 2.
 config FSL_QMAN_CI_SCHED_CFG_SRCCIV
diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index 9751c02..df65dfb 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -571,9 +571,8 @@ static int qm_init_pfdr(struct qman *qm, u32 pfdr_start, u32 num)
 /* Config driver */
 /*****************/
 
-/* TODO: Kconfig these? */
 #define DEFAULT_FQD_SZ	(PAGE_SIZE << CONFIG_FSL_QMAN_FQD_SZ)
-#define DEFAULT_PFDR_SZ	(PAGE_SIZE << 12)
+#define DEFAULT_PFDR_SZ	(PAGE_SIZE << CONFIG_FSL_QMAN_PFDR_SZ)
 
 /* We support only one of these */
 static struct qman *qm;
-- 
1.7.5.4

