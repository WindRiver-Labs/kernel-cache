From aed30e828d9d586a55216efed111772790a4b802 Mon Sep 17 00:00:00 2001
From: Anca-Jeanina Floarea <anca.floarea@freescale.com>
Date: Fri, 9 Nov 2012 15:49:01 +0000
Subject: [PATCH 389/518] dpa_stats: Add check for fragmentation statistics

Modify the set_classif_tbl_member code in order to verify
if the counter needs to return statistics for Classification
Table or statistics for Fragmentation node.

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_stats.c |   54 +++++++++++----------------
 1 files changed, 22 insertions(+), 32 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_stats.c b/drivers/staging/fsl_dpa_offload/dpa_stats.c
index 85c94a0..0c53074 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_stats.c
@@ -1907,7 +1907,7 @@ static int set_cls_cnt_ipsec_cb(struct dpa_stats_cnt_cb *cnt_cb,
 	return 0;
 }
 
-int set_classif_tbl_member(const struct dpa_stats_cls_member_params *params,
+int set_classif_tbl_member(const struct dpa_stats_cls_member_params *prm,
 		int member_index, struct dpa_stats_cnt_cb *cnt_cb)
 {
 	struct dpa_stats_cnt_classif_tbl_cb *tbl_cb = &cnt_cb->tbl_cb;
@@ -1940,57 +1940,47 @@ int set_classif_tbl_member(const struct dpa_stats_cls_member_params *params,
 		cnt_cb->info.last_stats[member_index][i] = 0;
 	}
 
-	if (params->type == DPA_STATS_CLS_MEMBER_SINGLE_KEY) {
-		if (!params->key.byte) {
-			/* Mark the key as invalid */
-			tbl_cb->keys[member_index].valid = FALSE;
-			return 0;
-		} else {
-			tbl_cb->keys[member_index].valid = TRUE;
+	if (((prm->type == DPA_STATS_CLS_MEMBER_SINGLE_KEY) &&
+		(!prm->key.byte)) ||
+	    ((prm->type == DPA_STATS_CLS_MEMBER_PAIR_KEY) &&
+		(!prm->pair.first_key.byte))) {
+		/* Mark the key as invalid */
+		tbl_cb->keys[member_index].valid = FALSE;
+		return 0;
+	} else {
+		tbl_cb->keys[member_index].valid = TRUE;
 
+		if (prm->type == DPA_STATS_CLS_MEMBER_SINGLE_KEY) {
 			/* Copy the key descriptor */
-			err = copy_key_descriptor(&params->key,
+			err = copy_key_descriptor(&prm->key,
 					&tbl_cb->keys[member_index].key);
 			if (err != 0) {
 				pr_err("Unable to copy key descriptor\n");
 				return -EINVAL;
 			}
-			err = check_tbl_cls_counter(cnt_cb,
-					&tbl_cb->keys[member_index]);
-			if (err != 0)
-				return -EINVAL;
-		}
-	} else {
-		if (!params->pair.first_key.byte) {
-			/* Mark the key as invalid */
-			tbl_cb->keys[member_index].valid = FALSE;
-			return 0;
 		} else {
-			tbl_cb->keys[member_index].valid = TRUE;
 			err = set_cls_cnt_classif_tbl_pair(tbl_cb, tbl_cb->td,
-					&params->pair,
-					&tbl_cb->keys[member_index]);
+				&prm->pair, &tbl_cb->keys[member_index]);
 			if (err != 0) {
 				pr_err("Unable to configure the key pair\n");
 				return -EINVAL;
 			}
-
+		}
+		if (cnt_cb->f_get_cnt_stats != get_cnt_cls_tbl_frag_stats) {
 			err = check_tbl_cls_counter(cnt_cb,
 					&tbl_cb->keys[member_index]);
 			if (err != 0)
 				return -EINVAL;
+		} else{
+			err = set_frag_manip(tbl_cb->td,
+					&tbl_cb->keys[member_index]);
+			if (err < 0) {
+				pr_err("Invalid Fragmentation manip handle\n");
+				return -EINVAL;
+			}
 		}
 	}
 
-	if (cnt_cb->f_get_cnt_stats != get_cnt_cls_tbl_frag_stats)
-		return 0;
-
-	err = set_frag_manip(tbl_cb->td, &cnt_cb->tbl_cb.keys[member_index]);
-	if (err < 0) {
-		pr_err("Invalid Fragmentation manip handle\n");
-		return -EINVAL;
-	}
-
 	return 0;
 }
 
-- 
1.7.5.4

