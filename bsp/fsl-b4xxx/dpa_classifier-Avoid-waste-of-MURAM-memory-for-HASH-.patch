From 663cacb311b984b81c5a323ece2784bb060aef47 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Wed, 23 May 2012 20:19:52 +0000
Subject: [PATCH 206/518] dpa_classifier: Avoid waste of MURAM memory for HASH
 table masks

The dpa_classifier was activating mask support for the HASH
tables internal Cc nodes. This is not necessary as the HASH
doesn't support entry masks and the feature was disabled
to save MURAM space.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c |    7 +------
 1 files changed, 1 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 161613a..c1029d0 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -1191,7 +1191,7 @@ static int table_init_hash(struct dpa_cls_table *cls_table)
 		cls_table->params.hash_params.max_ways;
 	hash_set_params->keysParams.keySize =
 		cls_table->params.hash_params.key_size;
-	hash_set_params->keysParams.maskSupport = TRUE;
+	hash_set_params->keysParams.maskSupport = FALSE;
 	hash_set_params->keysParams.ccNextEngineParamsForMiss.nextEngine =
 		e_FM_PCD_DONE;
 	hash_set_params->keysParams.ccNextEngineParamsForMiss.params.
@@ -1952,7 +1952,6 @@ static int table_insert_entry_hash(struct dpa_cls_table		*cls_table,
 	uint8_t shadow_table_index;
 	uint64_t hash_set_index;
 	uint8_t key_data[DPA_CLS_TBL_MAXENTRYKEYSIZE];
-	uint8_t mask_data[DPA_CLS_TBL_MAXENTRYKEYSIZE];
 	int j;
 	struct dpa_cls_tbl_shadow_table *shadow_table;
 	struct list_head *list_current;
@@ -1971,9 +1970,7 @@ static int table_insert_entry_hash(struct dpa_cls_table		*cls_table,
 	 * the user provided.
 	 */
 	memcpy(key_data, key->byte, cls_table->params.hash_params.key_size);
-	memcpy(mask_data, key->mask, cls_table->params.hash_params.key_size);
 	key_params.p_Key	= key_data;
-	key_params.p_Mask	= mask_data;
 
 	errno = action_to_next_engine_params(action,
 				&key_params.ccNextEngineParams);
@@ -2069,8 +2066,6 @@ static int table_insert_entry_hash(struct dpa_cls_table		*cls_table,
 		cls_table->entry[j].shadow_entry = &shadow_entry->list_node;
 
 		/* Add entry to the proper shadow table. */
-		key_apply_mask(key, key_data,
-			cls_table->params.exact_match_params.key_size);
 		shadow_table_index = crc8(key_data,
 				cls_table->params.hash_params.key_size);
 		shadow_table = cls_table->shadow_table;
-- 
1.7.5.4

