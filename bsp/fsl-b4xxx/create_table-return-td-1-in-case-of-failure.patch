From 3a44c3afd2e158d5d6de1db55ce4081f98a247e7 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Mon, 19 Mar 2012 22:18:19 +0000
Subject: [PATCH 123/518] create_table return td=-1 in case of failure

In case of failure the function dpa_classif_table_create would
not change the memory location provided by the user for it to
deposit the created table descriptor. This sometimes caused
confusion for developers who fail to check the return code of
the function before using the table descriptor returned by it.
With this fix the function will update the location provided
by the user for the table descriptor even in case of failure
and it will update it to -1 in this case.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 5550651..840efb7 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -70,6 +70,8 @@ int dpa_classif_table_create(const struct dpa_cls_tbl_params	*params,
 	xx_sanity_check_return_value(params, "params", -EINVAL);
 	xx_sanity_check_return_value(td, "td", -EINVAL);
 
+	*td = -1;
+
 	err = verify_table_params(params);
 	if (err < 0)
 		return err;
@@ -195,6 +197,8 @@ dpa_classif_table_create_error:
 		put_table_descriptor(*td);
 	}
 
+	*td = -1;
+
 	return err;
 }
 EXPORT_SYMBOL(dpa_classif_table_create);
-- 
1.7.5.4

