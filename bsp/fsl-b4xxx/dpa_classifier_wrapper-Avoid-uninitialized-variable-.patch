From d8a5b3f9cb50570e9e8af959fc4802898c2e43fc Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Tue, 4 Dec 2012 15:57:24 +0200
Subject: [PATCH 431/518] dpa_classifier_wrapper: Avoid uninitialized variable
 build warning

In function "do_ioctl_mcast_create_group" the "ret" variable is tested
outside the #ifdef block which guards the function call to
"dpa_classif_mcast_create_group". Although this is not a real problem
because the #else branch is directly returning from the function, it is
not good programming practice.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 .../staging/fsl_dpa_offload/wrp_dpa_classifier.c   |    5 ++---
 1 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
index 92eb2ac..3987aa7 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
@@ -1567,6 +1567,8 @@ static long do_ioctl_mcast_create_group(unsigned long args, bool compat_mode)
 #if (DPAA_VERSION >= 11)
 	ret = dpa_classif_mcast_create_group(&kparam.mcast_grp_params,
 					     &kparam.grpd);
+	if (ret < 0)
+		return ret;
 #else
 	pr_err("ERROR: %s, %s (%d): Multicast not supported  on this"
 	       "platform.\n", __FILE__, __func__, __LINE__);
@@ -1574,9 +1576,6 @@ static long do_ioctl_mcast_create_group(unsigned long args, bool compat_mode)
 	return ret;
 #endif
 
-	if (ret < 0)
-		return ret;
-
 #ifdef CONFIG_COMPAT
 	if (compat_mode) {
 		uparam.grpd = kparam.grpd;
-- 
1.7.5.4

