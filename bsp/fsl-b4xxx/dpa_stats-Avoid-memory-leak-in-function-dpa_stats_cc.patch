From 466b15e357795d7c51ce778725fc4c886cef4dc5 Mon Sep 17 00:00:00 2001
From: Anca-Jeanina Floarea <anca.floarea@freescale.com>
Date: Fri, 9 Nov 2012 19:13:13 +0000
Subject: [PATCH 391/518] dpa_stats: Avoid memory leak in function
 "dpa_stats_ccnode_cls_compatcpy"

The kernel allocated memory for "keys" is now released in case of error
or before function returns.

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
[Grabbed from the branch, LINUX_IR5.2.0, of
https://git.freescale.com/git-private/cgit.cgi/ppc/alu-b4860/linux.git.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
index b4540e7..797aad0 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
@@ -946,9 +946,13 @@ static int do_ioctl_stats_compat_create_class_counter(void *args)
 			&kprm_cls->classif_node_params,
 			&uprm_cls->ccnode_params,
 			kprm_cls->class_members);
-		if (ret < 0)
-			return ret;
-		break;
+		if (!ret)
+			break;
+		for (i = 0; i < kprm_cls->class_members; i++) {
+			kfree(kprm_cls->classif_node_params.keys[i].byte);
+			kfree(kprm_cls->classif_node_params.keys[i].mask);
+		}
+		return ret;
 	case DPA_STATS_CNT_IPSEC:
 		ret = dpa_stats_ipsec_cls_compatcpy(&kprm_cls->ipsec_params,
 			&uprm_cls->ipsec_params, kprm_cls->class_members);
@@ -2033,9 +2037,11 @@ static long dpa_stats_ccnode_cls_compatcpy(
 		ret = copy_key_descriptor_compatcpy(&kprm->keys[i], &keys[i]);
 		if (ret != 0) {
 			pr_err("Couldn't copy the key descriptor\n");
+			kfree(keys);
 			return -EINVAL;
 		}
 	}
+	kfree(keys);
 	return ret;
 }
 
-- 
1.7.5.4

