From 2ed4ea2086cb7375b4e2c36e1cf4f18f1a955ba4 Mon Sep 17 00:00:00 2001
From: Scott Wood <scottwood@freescale.com>
Date: Sat, 9 Jun 2012 06:00:37 +0000
Subject: [PATCH 25/57] powerpc/e6500: hw tablewalk: fix corruption when no
 lock needed

commit 063ad429f86273abd7615487d6accb8ac93c8516 from
https://git.freescale.com/git-private/cgit.cgi/ppc/t4240/linux.git

If the low bit is not set, that indicates the need for a TLB miss lock,
the next tlb entry was written to the wrong byte, corrupting pgdir_kernel.

This can happen when there's a TLB miss before threading is started
(e.g. serial port MMIO), or if threading is disabled.

Signed-off-by: Scott Wood <scottwood@freescale.com>
---
 arch/powerpc/mm/tlb_low_64e.S |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/arch/powerpc/mm/tlb_low_64e.S b/arch/powerpc/mm/tlb_low_64e.S
index 7bd27ca..1a52e02 100644
--- a/arch/powerpc/mm/tlb_low_64e.S
+++ b/arch/powerpc/mm/tlb_low_64e.S
@@ -350,8 +350,8 @@ tlb_miss_common_fsl_htw:
 
 
 	mfspr	r10,SPRN_MAS0
-	rldicr	r15,r11,0,62
-	lwz	r15,0(r15)
+	rldicr	r16,r11,0,62
+	lwz	r15,0(r16)
 
 	ori	r14,r14,(BOOK3E_PAGESZ_4K << MAS3_SPSIZE_SHIFT)
 	mtspr	SPRN_MAS7_MAS3,r14
@@ -365,7 +365,7 @@ tlb_miss_common_fsl_htw:
 	cmpw	r10,r14
 	rlwinm	r10,r15,24,0xff		/* extract first */
 	iseleq	r14,r10,r14		/* if next == last use first */
-	stb	r14,PACA_TLB_ESEL_NEXT-1(r11)
+	stb	r14,PACA_TLB_ESEL_NEXT(r16)
 
 	tlbwe
 
-- 
1.7.9.7

