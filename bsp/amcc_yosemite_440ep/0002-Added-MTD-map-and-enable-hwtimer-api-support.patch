From 6ebe0a37710098090c10e8b0b88f5ecc976c2735 Mon Sep 17 00:00:00 2001
From: Thomas Tai <Thomas.Tai@windriver.com>
Date: Wed, 10 Sep 2008 10:02:05 -0400
Subject: [PATCH] Added MTD map and enable hwtimer api support

Added physical MTD map and machine name for yosemite 440EP board.
Added hwtimer api support via HWTIMER_USE_JIFFY.

Signed-off-by: Thomas Tai <Thomas.Tai@windriver.com>
---
 arch/powerpc/kernel/time.c          |   79 ++++++++++++++++++----------------
 arch/powerpc/platforms/44x/bamboo.c |   49 +++++++++++++++++++++-
 2 files changed, 90 insertions(+), 38 deletions(-)

diff --git a/arch/powerpc/kernel/time.c b/arch/powerpc/kernel/time.c
index 287a0f5..3d2e4a7 100644
--- a/arch/powerpc/kernel/time.c
+++ b/arch/powerpc/kernel/time.c
@@ -555,6 +555,42 @@ void __init iSeries_time_init_early(void)
  * call will not be needed)
  */
 
+#if defined(CONFIG_HWTIMER_HOOKS) && ( defined(CONFIG_PPC_MAPLE) || defined(CONFIG_YOSEMITE))
+ #define HWTIMER_USE_JIFFY 1
+#endif
+
+#if defined(HWTIMER_USE_JIFFY)
+
+#include <linux/hwtimer.h>
+
+static int powerpc_timer_get_freq(void)
+{
+       return HZ;
+}
+
+static struct hwtimer_data powerpc_timer_data = {
+       name: "PowerPC timer",
+       desc: "PowerPC kernel jiffy timer",
+       def_freq: HZ,
+       min_freq: HZ,
+       max_freq: HZ
+};
+
+static DECLARE_HWTIMER_LOCK(powerpc_timer_lock);
+
+static struct hwtimer powerpc_timer = {
+       data: &powerpc_timer_data,
+       set_freq: NULL,
+       get_freq: powerpc_timer_get_freq,
+       start: NULL,
+       stop: NULL,
+       lock: &powerpc_timer_lock,
+       hook: NULL,
+       hook_data: NULL
+};
+
+#endif  /*  CONFIG_HWTIMER_HOOKS */
+
 /*
  * timer_interrupt - gets called when the decrementer overflows,
  * with interrupts disabled.
@@ -612,6 +648,12 @@ void timer_interrupt(struct pt_regs * regs)
 	}
 #endif
 
+#if defined(HWTIMER_USE_JIFFY)
+	if (powerpc_timer.hook != NULL) {
+		(powerpc_timer.hook) (powerpc_timer.hook_data);
+	}
+#endif
+
 	irq_exit();
 	set_irq_regs(old_regs);
 
@@ -862,43 +904,6 @@ static int decrementer_set_next_event(unsigned long evt,
 	return 0;
 }
 
-#if defined(CONFIG_HWTIMER_HOOKS) && ( defined(CONFIG_PPC_MAPLE) )
- #define HWTIMER_USE_JIFFY 1
-#endif
-
-#if defined(HWTIMER_USE_JIFFY)
-
-#include <linux/hwtimer.h>
-
-static int powerpc_timer_get_freq(void)
-{
-       return HZ;
-}
-
-static struct hwtimer_data powerpc_timer_data = {
-       name: "PowerPC timer",
-       desc: "PowerPC kernel jiffy timer",
-       def_freq: HZ,
-       min_freq: HZ,
-       max_freq: HZ
-};
-
-static DECLARE_HWTIMER_LOCK(powerpc_timer_lock);
-
-static struct hwtimer powerpc_timer = {
-       data: &powerpc_timer_data,
-       set_freq: NULL,
-       get_freq: powerpc_timer_get_freq,
-       start: NULL,
-       stop: NULL,
-       lock: &powerpc_timer_lock,
-       hook: NULL,
-       hook_data: NULL
-};
-
-#endif  /*  CONFIG_HWTIMER_HOOKS */
-
-
 static void decrementer_set_mode(enum clock_event_mode mode,
 				 struct clock_event_device *dev)
 {
diff --git a/arch/powerpc/platforms/44x/bamboo.c b/arch/powerpc/platforms/44x/bamboo.c
index cef169e..c8b969c 100644
--- a/arch/powerpc/platforms/44x/bamboo.c
+++ b/arch/powerpc/platforms/44x/bamboo.c
@@ -24,6 +24,37 @@
 #include <asm/pci-bridge.h>
 #include <asm/ppc4xx.h>
 
+#ifdef CONFIG_MTD
+#include <linux/mtd/partitions.h>
+#include <linux/mtd/physmap.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/map.h>
+#include <linux/mtd/cfi.h>
+#endif
+
+#if defined(CONFIG_MTD_PARTITIONS) && defined(CONFIG_MTD_PHYSMAP)
+static struct mtd_partition  yosemite_mtd_ptbl[] = {
+	{
+		.name =		"bootloader",
+		.offset =	0x0,
+		.size =		0x80000,	/* two 256KiB sectors */
+		.mask_flags =	MTD_WRITEABLE,	/* force read-only */
+	},
+	{
+		.name =		"kernel",
+		.offset = 	MTDPART_OFS_APPEND,
+		.size =		0x200000,	/* 2 MiB */
+		.mask_flags =	0,
+	},
+	{
+		.name =		"rootfs",
+		.offset =	MTDPART_OFS_APPEND,
+		.size =		0x1D80000,	/* 29.5 MiB */
+		.mask_flags =	0,
+	}
+};
+#endif
+
 static __initdata struct of_device_id bamboo_of_bus[] = {
 	{ .compatible = "ibm,plb4", },
 	{ .compatible = "ibm,opb", },
@@ -51,12 +82,28 @@ static int __init bamboo_probe(void)
 	return 1;
 }
 
+static void __init
+yosemite_setup_arch(void)
+{
+
+#if defined(CONFIG_MTD_PARTITIONS) && defined(CONFIG_MTD_PHYSMAP)
+	/*
+	 * Support for MTD on yosemite. Use the generic physmap driver
+	 * NOTE: AMCC yosemite 440ep  board uses 32MB NOR Flashes as BootROM
+	 */
+	physmap_configure(0xFE000000, 0x2000000, CFI_DEVICETYPE_X16, NULL);
+	physmap_set_partitions(yosemite_mtd_ptbl, ARRAY_SIZE(yosemite_mtd_ptbl));
+#endif
+
+}
+
 define_machine(bamboo) {
-	.name 			= "Bamboo",
+	.name 			= "Bamboo/Yosemite",
 	.probe 			= bamboo_probe,
 	.progress 		= udbg_progress,
 	.init_IRQ 		= uic_init_tree,
 	.get_irq 		= uic_get_irq,
 	.restart		= ppc4xx_reset_system,
 	.calibrate_decr 	= generic_calibrate_decr,
+	.setup_arch		= yosemite_setup_arch,
 };
-- 
1.5.5.1

