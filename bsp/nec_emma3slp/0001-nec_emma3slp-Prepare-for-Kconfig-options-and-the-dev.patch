From de08c835ddc249f8f3cc4120e3933b827f15efe9 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Mon, 7 Sep 2009 09:55:10 +0900
Subject: [PATCH 1/2] nec_emma3slp: Prepare for Kconfig options and the device header

EMMA3SL/P has the following features:
* Multi-processor system (Main 4KEc + Sub 4KEc)
* DDR2 memory interface
* Peripheral interfaces (Ethernet, USB2.0, UART, I2C, GPIO, etc.)
* etc.

This patch adds minimum basic stuff.

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 arch/mips/emma/Kconfig           |    9 +++
 include/asm-mips/emma/emma3slp.h |  123 ++++++++++++++++++++++++++++++++++++++
 include/asm-mips/emma/emmaxxx.h  |    3 +
 3 files changed, 135 insertions(+), 0 deletions(-)
 create mode 100644 include/asm-mips/emma/emma3slp.h

diff --git a/arch/mips/emma/Kconfig b/arch/mips/emma/Kconfig
index 673fa50..6d380e1 100644
--- a/arch/mips/emma/Kconfig
+++ b/arch/mips/emma/Kconfig
@@ -23,6 +23,15 @@ config SOC_EMMA3PF
 	select SYS_HAS_CPU_MIPS32_R2
 	select SYS_HAS_CPU_SS1000
 
+config SOC_EMMA3SLP
+	bool
+	select EMMA_HAS_I2C
+	select EMMA_HAS_NEC_CANDY
+	select EMMA_HAS_USB_EHCI
+	select EMMA_HAS_USB_OHCI
+	select SOC_EMMA
+	select SYS_HAS_CPU_MIPS32_R2
+
 config SOC_EMMA
 	bool
 	select CEVT_R4K
diff --git a/include/asm-mips/emma/emma3slp.h b/include/asm-mips/emma/emma3slp.h
new file mode 100644
index 0000000..e0a7b93
--- /dev/null
+++ b/include/asm-mips/emma/emma3slp.h
@@ -0,0 +1,123 @@
+/*
+ * EMMA3SL/P register definitions, etc.
+ *
+ * Copyright (C) 2009  NEC Electronics Corporation
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * (version 2) as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+#ifndef __ASM_EMMA_EMMA3SLP_H
+#define __ASM_EMMA_EMMA3SLP_H
+
+#define EMMA_BHIF_BASE			0x10000000
+#define EMMA_BROI_BASE			0x10000400
+#define EMMA_XDMA_BASE			0x10009000
+#define EMMA_ETHER_BASE			0x10012000
+#define EMMA_PBRD_BASE			0x10100000
+#define EMMA_TIMER_BASE			0x10110000
+#define EMMA_FLIP_BASE			0x10200000
+
+#define EMMA_BHIF_STRAP_0		(EMMA_BHIF_BASE + 0x0010)
+#define EMMA_BHIF_CLKSEL		(EMMA_BHIF_BASE + 0x001c)
+#define EMMA_BHIF_ALTERNATE0		(EMMA_BHIF_BASE + 0x0028)
+#define EMMA_BHIF_ALTERNATE1		(EMMA_BHIF_BASE + 0x0018)
+#define EMMA_BHIF_INT_ST_0		(EMMA_BHIF_BASE + 0x0030)
+#define EMMA_BHIF_INT_ST_1		(EMMA_BHIF_BASE + 0x0034)
+#define EMMA_BHIF_INT_ST_2		(EMMA_BHIF_BASE + 0x0038)
+#define EMMA_BHIF_INT_EN_0		(EMMA_BHIF_BASE + 0x0040)
+#define EMMA_BHIF_INT_EN_1		(EMMA_BHIF_BASE + 0x0044)
+#define EMMA_BHIF_INT_EN_2		(EMMA_BHIF_BASE + 0x0048)
+#define EMMA_BHIF_SUB_INT_ST_0		(EMMA_BHIF_BASE + 0x0100)
+#define EMMA_BHIF_SUB_INT_ST_1		(EMMA_BHIF_BASE + 0x0104)
+#define EMMA_BHIF_SUB_INT_ST_2		(EMMA_BHIF_BASE + 0x0108)
+#define EMMA_BHIF_SUB_INT_EN_0		(EMMA_BHIF_BASE + 0x0110)
+#define EMMA_BHIF_SUB_INT_EN_1		(EMMA_BHIF_BASE + 0x0114)
+#define EMMA_BHIF_SUB_INT_EN_2		(EMMA_BHIF_BASE + 0x0118)
+#define EMMA_BHIF_SW_INT		(EMMA_BHIF_BASE + 0x01a0)
+#define EMMA_BHIF_SW_INT_EN		(EMMA_BHIF_BASE + 0x01a4)
+#define EMMA_BHIF_SW_INT_CLR		(EMMA_BHIF_BASE + 0x01a8)
+
+#define EMMA_NAND_ROM_MODE		(EMMA_BROI_BASE + 0x0000)
+#define EMMA_NAND_ROM_ACCESS_TIME	(EMMA_BROI_BASE + 0x0004)
+#define EMMA_NAND_ROMIF_MODE		(EMMA_BROI_BASE + 0x0008)
+#define EMMA_NAND_ROM_COMMAND		(EMMA_BROI_BASE + 0x0010)
+#define EMMA_NAND_ROM_ADDR1		(EMMA_BROI_BASE + 0x0014)
+#define EMMA_NAND_ROM_ADDR2		(EMMA_BROI_BASE + 0x0018)
+#define EMMA_NAND_ROM_STATUS		(EMMA_BROI_BASE + 0x0020)
+#define EMMA_NAND_ROM_SEQ_STATUS	(EMMA_BROI_BASE + 0x0024)
+#define EMMA_NAND_ROM_INTERRUPT		(EMMA_BROI_BASE + 0x0028)
+#define EMMA_NAND_ROM_INTERRUPT_ENABLE	(EMMA_BROI_BASE + 0x002c)
+#define EMMA_NAND_ROM_CONTROL3		(EMMA_BROI_BASE + 0x0030)
+#define EMMA_NAND_ROM_CONTROL6		(EMMA_BROI_BASE + 0x003c)
+#define EMMA_NAND_ROM_ECC_RESULT	(EMMA_BROI_BASE + 0x0070)
+#define EMMA_NAND_ROM_PROGRAM_STATUS	(EMMA_BROI_BASE + 0x01b0)
+
+#define EMMA_DMAC_LIST_ENABLE		(EMMA_XDMA_BASE + 0x0088)
+#define EMMA_DMAC_MEM_LIST0		(EMMA_XDMA_BASE + 0x0100)
+#define EMMA_DMAC_MEM_LIST1		(EMMA_XDMA_BASE + 0x0104)
+#define EMMA_DMAC_MEM_LIST2		(EMMA_XDMA_BASE + 0x0108)
+#define EMMA_DMAC_MEM_LIST3		(EMMA_XDMA_BASE + 0x010c)
+#define EMMA_DMAC_MEM_LIST4		(EMMA_XDMA_BASE + 0x0110)
+#define EMMA_DMAC_MAIN_INT2		(EMMA_XDMA_BASE + 0x0508)
+#define EMMA_DMAC_MAIN_INT_EN2		(EMMA_XDMA_BASE + 0x0518)
+
+#define EMMA_PUART0_BASE		(EMMA_PBRD_BASE + 0x1000)
+#define EMMA_PUART1_BASE		(EMMA_PBRD_BASE + 0x2000)
+#define EMMA_PIIC0_BASE			(EMMA_PBRD_BASE + 0x7000)
+#define EMMA_PIIC1_BASE			(EMMA_PBRD_BASE + 0x8000)
+
+#define EMMA_OHCI_CONFIG_BASE		(EMMA_FLIP_BASE + 0x0200)
+#define EMMA_EHCI_CONFIG_BASE		(EMMA_FLIP_BASE + 0x0500)
+#define EMMA_EHCI_BASE			(EMMA_FLIP_BASE + 0x0f00)
+#define EMMA_OHCI_BASE			(EMMA_FLIP_BASE + 0x1000)
+
+/*
+ *  Memory map (physical address)
+ *
+ *  Note most of the following address must be properly aligned by the
+ *  corresponding size.
+ */
+
+/* the actual ram size is detected at run-time */
+#define EMMA_RAM_BASE		0x00000000
+#define EMMA_RAM_SIZE		0x10000000	/* 256 MB */
+
+#define EMMA_IO_BASE		0x10000000
+#define EMMA_IO_SIZE		0x01000000	/* 16 MB */
+
+#define EMMA_GIO_BASE		0x11000000
+#define EMMA_GIO_SIZE		0x01000000	/* 16 MB */
+
+#define EMMA_NAND_BASE		0x1f000000
+#define EMMA_NAND_SIZE		0x00800000	/* 8 MB */
+
+#define NUM_EMMA_IRQ		96
+#define NUM_EMMA_IRQ_SW		32
+
+#define EMMA_IRQ_BASE		(MIPS_CPU_IRQ_BASE + 8)
+#define EMMA_SW_IRQ_BASE	(EMMA_IRQ_BASE + NUM_EMMA_IRQ)
+
+#define EMMA_IRQ_INT(n)		(EMMA_IRQ_BASE + (n))
+#define EMMA_SW_IRQ_INT(n)	(EMMA_SW_IRQ_BASE + (n))
+
+#define EMMA_SW_CASCADE		EMMA_IRQ_INT(6)
+
+#define EMMA_IRQ_NAND		EMMA_IRQ_INT(1)
+#define EMMA_IRQ_USB		EMMA_IRQ_INT(32)
+#define EMMA_IRQ_ETHER		EMMA_IRQ_INT(36)
+#define EMMA_IRQ_PUART0		EMMA_IRQ_INT(48)
+#define EMMA_IRQ_PUART1		EMMA_IRQ_INT(49)
+#define EMMA_IRQ_PIIC0		EMMA_IRQ_INT(56)
+#define EMMA_IRQ_PIIC1		EMMA_IRQ_INT(57)
+
+#endif	/* __ASM_EMMA_EMMA3SLP_H */
diff --git a/include/asm-mips/emma/emmaxxx.h b/include/asm-mips/emma/emmaxxx.h
index a11f592..0e5630f 100644
--- a/include/asm-mips/emma/emmaxxx.h
+++ b/include/asm-mips/emma/emmaxxx.h
@@ -14,6 +14,9 @@
 #ifdef CONFIG_SOC_EMMA3PF
 #include <asm/emma/emma3pf.h>
 #endif
+#ifdef CONFIG_SOC_EMMA3SLP
+#include <asm/emma/emma3slp.h>
+#endif
 
 /* Processor-dependent register abstraction */
 #ifdef CONFIG_EMMA_SUBCPU
-- 
1.6.3.3

