From 991135b7b7ac4e82c3aa1996ac54a1de30cd3265 Mon Sep 17 00:00:00 2001
From: Stanley.Miao <stanley.miao@windriver.com>
Date: Thu, 25 Nov 2010 19:01:23 +0800
Subject: [PATCH 1/3] Comcerto: set pinmux according to the state of the switch SW1-3 on the board

The switch SW1-3 on the board decides if NOR or NAND is supported, but the
pinmux setting is according to the kernel CONFIGs. This will causes problems
when both CONFIG_MTD_COMCERTO_NOR and CONFIG_MTD_NAND_COMCERTO are enabled.
Now we set the pinmux according to the state of the switch SW1-3 to fix this
problem.

Signed-off-by: Stanley.Miao <stanley.miao@windriver.com>
---
 arch/arm/mach-comcerto/board-c1kmfcn_evm.c |   21 ++++++++++-----------
 1 files changed, 10 insertions(+), 11 deletions(-)

diff --git a/arch/arm/mach-comcerto/board-c1kmfcn_evm.c b/arch/arm/mach-comcerto/board-c1kmfcn_evm.c
index 11e8182..0d0015b 100644
--- a/arch/arm/mach-comcerto/board-c1kmfcn_evm.c
+++ b/arch/arm/mach-comcerto/board-c1kmfcn_evm.c
@@ -37,18 +37,17 @@ static u32 EXP_NAND_SEL;
 
 static void __init board_gpio_init(void)
 {
-#if defined(CONFIG_MTD_NAND_COMCERTO) || defined(CONFIG_MTD_NAND_COMCERTO_MODULE)
-	writel(readl(COMCERTO_GPIO_PIN_SELECT_REG) & ~NAND_BUS, COMCERTO_GPIO_PIN_SELECT_REG);
-	writel(readl(COMCERTO_GPIO_PIN_SELECT_REG) | EXP_NAND_RDY, COMCERTO_GPIO_PIN_SELECT_REG);
-	comcerto_gpio_enable_output(COMCERTO_OUTPUT_GPIO);
-	writel((readl(COMCERTO_GPIO_BOOTSTRAP_OVERRIDE) | (0x3 << 12)), COMCERTO_GPIO_BOOTSTRAP_OVERRIDE);
-#elif defined(CONFIG_MTD_COMCERTO_NOR) || defined(CONFIG_MTD_COMCERTO_NOR_MODULE)
-	writel(readl(COMCERTO_GPIO_PIN_SELECT_REG) & ~EXP_BUS, COMCERTO_GPIO_PIN_SELECT_REG);
-	writel((readl(COMCERTO_GPIO_BOOTSTRAP_OVERRIDE) & ~(0x3 << 12)), COMCERTO_GPIO_BOOTSTRAP_OVERRIDE);
-#else
-	writel(readl(COMCERTO_GPIO_PIN_SELECT_REG) | NAND_BUS, COMCERTO_GPIO_PIN_SELECT_REG);
-#endif
 	EXP_NAND_SEL = (readl(COMCERTO_GPIO_BOOTSTRAP_STATUS) & GPIO_8) >> 8 ;
+
+	if (EXP_NAND_SEL) {
+		writel(readl(COMCERTO_GPIO_PIN_SELECT_REG) & ~NAND_BUS, COMCERTO_GPIO_PIN_SELECT_REG);
+		writel(readl(COMCERTO_GPIO_PIN_SELECT_REG) | EXP_NAND_RDY, COMCERTO_GPIO_PIN_SELECT_REG);
+		comcerto_gpio_enable_output(COMCERTO_OUTPUT_GPIO);
+		writel((readl(COMCERTO_GPIO_BOOTSTRAP_OVERRIDE) | (0x3 << 12)), COMCERTO_GPIO_BOOTSTRAP_OVERRIDE);
+	} else {
+		writel(readl(COMCERTO_GPIO_PIN_SELECT_REG) & ~EXP_BUS, COMCERTO_GPIO_PIN_SELECT_REG);
+		writel((readl(COMCERTO_GPIO_BOOTSTRAP_OVERRIDE) & ~(0x3 << 12)), COMCERTO_GPIO_BOOTSTRAP_OVERRIDE);
+	}
 }
 
 /* --------------------------------------------------------------------
-- 
1.5.4.3

