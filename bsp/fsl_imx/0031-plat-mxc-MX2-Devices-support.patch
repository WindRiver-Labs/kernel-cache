From 3b7eabfcf9f6af6f409db15c9187959b112bfb5e Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce.ashfield@windriver.com>
Date: Sun, 11 Jan 2009 00:27:54 -0500
Subject: [PATCH] plat-mxc: MX2 Devices support [ This patch expands the known devices on i.MX21/i.MX27 procesors.

New devices are:

 - spi
 - i2c
 - ssi
 - watchdog
 - framebuffer
 - camera

Note: This is for development. Not for mainline yet.

Signed-off-by: Juergen Beisert <j.beisert@pengutronix.de>
Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
Signed-off-by: Alexander Smirnov <asmirnov@embeddedalley.com>

Merged from pengutronix.de
]

Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 arch/arm/plat-mxc/include/mach/imx_dam.h      |   63 +++++++
 arch/arm/plat-mxc/include/mach/imx_i2c.h      |   81 +++++++++
 arch/arm/plat-mxc/include/mach/imx_spi.h      |  220 +++++++++++++++++++++++++
 arch/arm/plat-mxc/include/mach/imx_ssi.h      |  191 +++++++++++++++++++++
 arch/arm/plat-mxc/include/mach/imx_watchdog.h |   44 +++++
 5 files changed, 599 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/plat-mxc/include/mach/imx_dam.h
 create mode 100644 arch/arm/plat-mxc/include/mach/imx_i2c.h
 create mode 100644 arch/arm/plat-mxc/include/mach/imx_spi.h
 create mode 100644 arch/arm/plat-mxc/include/mach/imx_ssi.h
 create mode 100644 arch/arm/plat-mxc/include/mach/imx_watchdog.h

diff --git a/arch/arm/plat-mxc/include/mach/imx_dam.h b/arch/arm/plat-mxc/include/mach/imx_dam.h
new file mode 100644
index 0000000..afd52ae
--- /dev/null
+++ b/arch/arm/plat-mxc/include/mach/imx_dam.h
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2008 Juergen Beisert, kernel@pengutronix.de
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#ifndef __ASM_ARCH_MXC_DAM_H
+#define __ASM_ARCH_MXC_DAM_H
+
+#define DAM_HPCR1	0x00
+#define DAM_HPCR2	0x04
+/*
+ * manual says this port is a host port. But its connected like
+ * the other peripheral ports to the external SSI_4* pin group
+ */
+#define DAM_HPCR3	0x08
+
+/* all host ports share these bits */
+# define DAM_HPCR_INMMASK_MASK (0xff << 0)
+# define DAM_HPCR_INMMASK(x) ((x) & 0xff)
+# define DAM_HPCR_INMEN (1 << 8)
+# define DAM_HPCR_SYN (1 << 12)
+# define DAM_HPCR_RXDSEL_MASK (0x7 << 13)
+# define DAM_HPCR_RXDSEL(x) (((x) & 0x7) << 13)
+# define DAM_HPCR_RFCSEL_MASK (0xf << 20)
+# define DAM_HPCR_RFCSEL(x) (((x) & 0xf) << 20)
+# define DAM_HPCR_RCLKDIR (1 << 24)
+# define DAM_HPCR_RFSDIR (1 << 25)
+# define DAM_HPCR_TFCSEL_MASK (0xf << 26)
+# define DAM_HPCR_TFCSEL(x) (((x) & 0xf) << 26)
+# define DAM_HPCR_TCLKDIR (1 << 30)
+# define DAM_HPCR_TFSDIR (1 << 31)
+
+#define DAM_PPCR1	0x10
+#define DAM_PPCR2	0x14
+#define DAM_PPCR3	0x1C
+
+/* all peripheral ports share these bits */
+# define DAM_PPCR_TXRXEN (1 << 10)
+# define DAM_PPCR_SYN (1 << 12)
+# define DAM_PPCR_RXDSEL_MASK (0x7 << 13)
+# define DAM_PPCR_RXDSEL(x) (((x) & 0x7) << 13)
+# define DAM_PPCR_RFCSEL_MASK (0xf << 20)
+# define DAM_PPCR_RFCSEL(x) (((x) & 0xf) << 20)
+# define DAM_PPCR_RCLKDIR (1 << 24)
+# define DAM_PPCR_RFSDIR (1 << 25)
+# define DAM_PPCR_TFCSEL_MASK (0xf << 26)
+# define DAM_PPCR_TFCSEL(x) (((x) & 0xf) << 26)
+# define DAM_PPCR_TCLKDIR (1 << 30)
+# define DAM_PPCR_TFSDIR (1 << 31)
+
+#endif /* __ASM_ARCH_MXC_DAM_H */
diff --git a/arch/arm/plat-mxc/include/mach/imx_i2c.h b/arch/arm/plat-mxc/include/mach/imx_i2c.h
new file mode 100644
index 0000000..905499e
--- /dev/null
+++ b/arch/arm/plat-mxc/include/mach/imx_i2c.h
@@ -0,0 +1,81 @@
+/*
+ * Copyright 2004-2007 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2008 Juergen Beisert, kernel@pengutronix.de
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#ifndef __ASM_ARCH_MXC_I2C_H__
+#define __ASM_ARCH_MXC_I2C_H__
+
+struct imx_i2c_platform_data {
+	u32 max_clk;
+	int (*init)(struct platform_device *pdev);
+	int (*exit)(struct platform_device *pdev);
+};
+
+/*
+ * This file contains the I2C chip level configuration details.
+ *
+ * It also contains the API function that other drivers can use to read/write
+ * to the I2C device registers.
+ */
+
+/*
+ * This defines the string used to identify MXC I2C Bus drivers
+ */
+#define MXC_ADAPTER_NAME        "MXC I2C Adapter"
+
+#define MXC_I2C_FLAG_READ	0x01	/* if set, is read; else is write */
+#define MXC_I2C_FLAG_POLLING	0x02	/* if set, is polling mode; else is interrupt mode */
+
+int mxc_i2c_read(int bus_id, unsigned int addr, char *reg, int reg_len,
+		 char *buf, int num);
+
+int mxc_i2c_write(int bus_id, unsigned int addr, char *reg, int reg_len,
+		  char *buf, int num);
+
+int mxc_i2c_polling_read(int bus_id, unsigned int addr, char *reg, int reg_len,
+			 char *buf, int num);
+
+int mxc_i2c_polling_write(int bus_id, unsigned int addr, char *reg, int reg_len,
+			  char *buf, int num);
+
+/* FIXME: This should be in a generic register file */
+
+/* Address offsets of the I2C registers */
+#define MXC_IADR                0x00	/* Address Register */
+#define MXC_IFDR                0x04	/* Freq div register */
+#define MXC_I2CR                0x08	/* Control regsiter */
+#define MXC_I2SR                0x0C	/* Status register */
+#define MXC_I2DR                0x10	/* Data I/O register */
+
+/* Bit definitions of I2CR */
+#define MXC_I2CR_IEN            0x0080
+#define MXC_I2CR_IIEN           0x0040
+#define MXC_I2CR_MSTA           0x0020
+#define MXC_I2CR_MTX            0x0010
+#define MXC_I2CR_TXAK           0x0008
+#define MXC_I2CR_RSTA           0x0004
+
+/* Bit definitions of I2SR */
+#define MXC_I2SR_ICF            0x0080
+#define MXC_I2SR_IAAS           0x0040
+#define MXC_I2SR_IBB            0x0020
+#define MXC_I2SR_IAL            0x0010
+#define MXC_I2SR_SRW            0x0004
+#define MXC_I2SR_IIF            0x0002
+#define MXC_I2SR_RXAK           0x0001
+
+#endif /* __ASM_ARCH_MXC_I2C_H__ */
diff --git a/arch/arm/plat-mxc/include/mach/imx_spi.h b/arch/arm/plat-mxc/include/mach/imx_spi.h
new file mode 100644
index 0000000..684bf7c
--- /dev/null
+++ b/arch/arm/plat-mxc/include/mach/imx_spi.h
@@ -0,0 +1,220 @@
+/*
+ * Copyright 2004-2007 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2008 Juergen Beisert, kernel@pengutronix.de
+ * Copyright 2008 Luotao Fu, kernel@pengutronix.de
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#ifndef __MXC_SPI_MX27_H__
+#define __MXC_SPI_MX27_H__
+
+#include <mach/hardware.h>
+#include <asm/mach-types.h>
+
+/*
+ * This structure is used to define the SPI master controller's platform
+ * data. It includes the SPI  bus number and the maximum number of
+ * slaves/chips it supports.
+ */
+struct mxc_spi_master {
+	unsigned int bus_num;		/* bus number. */
+	unsigned int maxchipselect;	/* number of chip selects. */
+	unsigned int spi_version;	/* CSPI Hardware Version. */
+
+	int (*init)(struct platform_device *pdev);
+	int (*exit)(struct platform_device *pdev);
+};
+
+/* Register definitions.
+ * XXX: The ifdef CONFIG_ARCH_MX2 segments are merged from the
+ * freescale mxc_spi_mx27.h. This is actually highly strange, since according
+ * to the processor reference manuals the spi controllers on mx27 and mx31 are
+ * identical. We might want to clearify this after chatting with freescale on
+ * this issue */
+
+#define MXC_CSPIRXDATA		0x00
+#define MXC_CSPITXDATA		0x04
+#define MXC_CSPICTRL		0x08
+#define MXC_CSPIINT		0x0C
+
+#ifdef CONFIG_ARCH_MX2
+#define MXC_CSPIDMA		0x18
+#define MXC_CSPISTAT		0x0C
+#define MXC_CSPIPERIOD		0x14
+#define MXC_CSPITEST		0x10
+#define MXC_CSPIRESET		0x1C
+#define MXC_CSPICTRL_ENABLE	(1 << 10)
+#else
+#define MXC_CSPIDMA		0x10
+#define MXC_CSPISTAT		0x14
+#define MXC_CSPIPERIOD		0x18
+#define MXC_CSPITEST		0x1C
+#define MXC_CSPIRESET		0x00
+#define MXC_CSPICTRL_ENABLE	0x1
+#endif
+
+#define MXC_CSPICTRL_DISABLE	0x0
+
+#ifdef CONFIG_ARCH_MX2
+#define MXC_CSPICTRL_MASTER	(1 << 11)
+#else
+#define MXC_CSPICTRL_MASTER	(1 << 1)
+#endif
+
+#define MXC_CSPICTRL_SLAVE	0x0
+
+#ifdef CONFIG_ARCH_MX2
+#define MXC_CSPICTRL_XCH	(1 << 9)
+#define MXC_CSPICTRL_LOWPOL	(1 << 5)
+#else
+#define MXC_CSPICTRL_XCH	(1 << 2)
+#define MXC_CSPICTRL_SMC	(1 << 3)
+#define MXC_CSPICTRL_LOWPOL	(1 << 4)
+#endif
+
+#define MXC_CSPICTRL_HIGHPOL	0x0
+
+#ifdef CONFIG_ARCH_MX2
+#define MXC_CSPICTRL_PHA	(1 << 6)
+#else
+#define MXC_CSPICTRL_PHA	(1 << 5)
+#endif
+
+#define MXC_CSPICTRL_NOPHA	0x0
+
+#ifdef CONFIG_ARCH_MX2
+#define MXC_CSPICTRL_SSCTL	(1 << 7)
+#define MXC_CSPICTRL_HIGHSSPOL 	(1 << 8)
+#else
+#define MXC_CSPICTRL_SSCTL	(1 << 6)
+#define MXC_CSPICTRL_HIGHSSPOL 	(1 << 7)
+#endif
+
+#define MXC_CSPICTRL_LOWSSPOL	0x0
+#define MXC_CSPICTRL_CSMASK	0x3
+
+#ifdef CONFIG_ARCH_MX2
+#define MXC_CSPICTRL_MAXDATRATE	0x10
+#define MXC_CSPICTRL_DATAMASK	0x1F
+#define MXC_CSPICTRL_DATASHIFT 	14
+/* This adjustment in the shift is valid only for even states only(i.e. divide
+   ratio of 2). SDHC_SPIEN is not set by default. If SDHC_SPIEN bit is set in
+   MXC_CSPICTRL, then divide ratio is 3, this shift adjustment is invalid. */
+#define MXC_CSPICTRL_ADJUST_SHIFT(x) ((x) = ((x) - 1) * 2)
+#else
+#define MXC_CSPICTRL_MAXDATRATE	0x7
+#define MXC_CSPICTRL_DATAMASK	0x7
+#define MXC_CSPICTRL_DATASHIFT 	16
+#define MXC_CSPICTRL_ADJUST_SHIFT(x) ((x) -= 2)
+#endif
+
+#define MXC_CSPICTRL_CSSHIFT_0_7	12
+#define MXC_CSPICTRL_BCSHIFT_0_7	20
+#define MXC_CSPICTRL_BCMASK_0_7		0xFFF
+#define MXC_CSPICTRL_DRCTRLSHIFT_0_7	8
+
+#define MXC_CSPICTRL_CSSHIFT_0_5	12
+#define MXC_CSPICTRL_BCSHIFT_0_5	20
+#define MXC_CSPICTRL_BCMASK_0_5		0xFFF
+#define MXC_CSPICTRL_DRCTRLSHIFT_0_5	8
+
+#define MXC_CSPICTRL_CSSHIFT_0_4	24
+#define MXC_CSPICTRL_BCSHIFT_0_4	8
+#define MXC_CSPICTRL_BCMASK_0_4		0x1F
+#define MXC_CSPICTRL_DRCTRLSHIFT_0_4	20
+
+#define MXC_CSPICTRL_CSSHIFT_0_0	19
+#define MXC_CSPICTRL_BCSHIFT_0_0	0
+#define MXC_CSPICTRL_BCMASK_0_0		0x1F
+#define MXC_CSPICTRL_DRCTRLSHIFT_0_0	12
+
+#define MXC_CSPIINT_IRQSHIFT_0_7	8
+#define MXC_CSPIINT_IRQSHIFT_0_5	9
+#define MXC_CSPIINT_IRQSHIFT_0_4	9
+#define MXC_CSPIINT_IRQSHIFT_0_0	18
+
+#ifdef CONFIG_ARCH_MX2
+#define MXC_CSPIINT_TEEN	(1 << 9)
+#define MXC_CSPIINT_THEN	(1 << 10)
+#define MXC_CSPIINT_TFEN	(1 << 11)
+#define MXC_CSPIINT_RREN	(1 << 13)
+#define MXC_CSPIINT_RHEN        (1 << 14)
+#define MXC_CSPIINT_RFEN        (1 << 15)
+#define MXC_CSPIINT_ROEN        (1 << 16)
+#else
+#define MXC_CSPIINT_TEEN	(1 << 0)
+#define MXC_CSPIINT_THEN	(1 << 1)
+#define MXC_CSPIINT_TFEN	(1 << 2)
+#define MXC_CSPIINT_RREN	(1 << 3)
+#define MXC_CSPIINT_RHEN        (1 << 4)
+#define MXC_CSPIINT_RFEN        (1 << 5)
+#define MXC_CSPIINT_ROEN        (1 << 6)
+#endif
+
+#define MXC_CSPIINT_TCEN_0_7	(1 << 7)
+#define MXC_CSPIINT_TCEN_0_5	(1 << 8)
+#define MXC_CSPIINT_TCEN_0_4	(1 << 8)
+
+#ifdef CONFIG_ARCH_MX2
+#define MXC_CSPIINT_TCEN_0_0	(1 << 12)
+#else
+#define MXC_CSPIINT_TCEN_0_0	(1 << 3)
+#endif
+
+#define MXC_CSPIINT_BOEN_0_7	0
+#define MXC_CSPIINT_BOEN_0_5	(1 << 7)
+#define MXC_CSPIINT_BOEN_0_4	(1 << 7)
+
+#ifdef CONFIG_ARCH_MX2
+#define MXC_CSPIINT_BOEN_0_0	(1 << 17)
+#else
+#define MXC_CSPIINT_BOEN_0_0	(1 << 8)
+#endif
+
+#define MXC_CSPISTAT_TE		(1 << 0)
+#define MXC_CSPISTAT_TH		(1 << 1)
+#define MXC_CSPISTAT_TF		(1 << 2)
+#define MXC_CSPISTAT_RR		(1 << 3)
+#define MXC_CSPISTAT_RH         (1 << 4)
+#define MXC_CSPISTAT_RF         (1 << 5)
+#define MXC_CSPISTAT_RO         (1 << 6)
+#define MXC_CSPISTAT_TC_0_7	(1 << 7)
+#define MXC_CSPISTAT_TC_0_5	(1 << 8)
+#define MXC_CSPISTAT_TC_0_4	(1 << 8)
+#define MXC_CSPISTAT_TC_0_0	(1 << 3)
+#define MXC_CSPISTAT_BO_0_7	0
+#define MXC_CSPISTAT_BO_0_5	(1 << 7)
+#define MXC_CSPISTAT_BO_0_4	(1 << 7)
+#define MXC_CSPISTAT_BO_0_0	(1 << 8)
+
+#define MXC_CSPIPERIOD_32KHZ	(1 << 15)
+
+#define MXC_CSPITEST_LBC	(1 << 14)
+
+/*
+ * This structure contains information that differs with
+ * SPI master controller hardware version
+ */
+struct mxc_spi_unique_def {
+	unsigned int intr_bit_shift;	/* Width of valid bits in MXC_CSPIINT. */
+	unsigned int cs_shift;	/* Chip Select shift. */
+	unsigned int bc_shift;	/* Bit count shift. */
+	unsigned int bc_mask;	/* Bit count mask. */
+	unsigned int drctrl_shift;	/* Data Control shift. */
+	unsigned int xfer_complete;	/* Transfer Complete shift. */
+	unsigned int bc_overflow;	/* Bit counnter overflow shift. */
+};
+
+#endif /*__MXC_SPI_MX27_H__ */
diff --git a/arch/arm/plat-mxc/include/mach/imx_ssi.h b/arch/arm/plat-mxc/include/mach/imx_ssi.h
new file mode 100644
index 0000000..eba6014
--- /dev/null
+++ b/arch/arm/plat-mxc/include/mach/imx_ssi.h
@@ -0,0 +1,191 @@
+/*
+ * Copyright 2004-2007 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2008 Juergen Beisert, kernel@pengutronix.de
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#ifndef __ASM_ARCH_MXC_SSI_H
+#define __ASM_ARCH_MXC_SSI_H
+
+#include <linux/platform_device.h>
+
+struct imx_ssi_platform_data {
+	int (*init)(struct platform_device *pdev);
+	int (*exit)(struct platform_device *pdev);
+};
+
+#define SSI_STX0	0x00
+#define SSI_STX1	0x04
+#define SSI_SRX0	0x08
+#define SSI_SRX1	0x0c
+
+#define SSI_SCR		0x10
+# define SSI_SCR_CLK_IST (1 << 9)
+#  define SSI_SCR_CLK_IST_SHIFT 9
+# define SSI_SCR_TCH_EN	(1 << 8)
+# define SSI_SCR_SYS_CLK_EN (1 << 7)
+# define SSI_SCR_I2S_MODE_NORM (0 << 5)
+# define SSI_SCR_I2S_MODE_MSTR (1 << 5)
+# define SSI_SCR_I2S_MODE_SLAVE (2 << 5)
+# define SSI_SCR_SYN	(1 << 4)
+# define SSI_SCR_NET	(1 << 3)
+# define SSI_SCR_RE	(1 << 2)
+# define SSI_SCR_TE	(1 << 1)
+# define SSI_SCR_SSIEN	(1 << 0)
+# define SSI_I2S_MODE_SHIFT 5
+
+#define SSI_SISR	0x14
+# define SSI_SISR_MASK ((1 << 19) - 1)
+# define SSI_SISR_CMDAU	(1 << 18)
+# define SSI_SISR_CMDDU	(1 << 17)
+# define SSI_SISR_RXT	(1 << 16)
+# define SSI_SISR_RDR1	(1 << 15)
+# define SSI_SISR_RDR0	(1 << 14)
+# define SSI_SISR_TDE1	(1 << 13)
+# define SSI_SISR_TDE0	(1 << 12)
+# define SSI_SISR_ROE1	(1 << 11)
+# define SSI_SISR_ROE0	(1 << 10)
+# define SSI_SISR_TUE1	(1 << 9)
+# define SSI_SISR_TUE0	(1 << 8)
+# define SSI_SISR_TFS	(1 << 7)
+# define SSI_SISR_RFS	(1 << 6)
+# define SSI_SISR_TLS	(1 << 5)
+# define SSI_SISR_RLS	(1 << 4)
+# define SSI_SISR_RFF1	(1 << 3)
+# define SSI_SISR_RFF0	(1 << 2)
+# define SSI_SISR_TFE1	(1 << 1)
+# define SSI_SISR_TFE0	(1 << 0)
+
+#define SSI_SIER	0x18
+# define SSI_SIER_RDMAE	(1 << 22)
+# define SSI_SIER_RIE	(1 << 21)
+# define SSI_SIER_TDMAE	(1 << 20)
+# define SSI_SIER_TIE	(1 << 19)
+# define SSI_SIER_CMDAU_EN (1 << 18)
+# define SSI_SIER_CMDDU_EN (1 << 17)
+# define SSI_SIER_RXT_EN (1 << 16)
+# define SSI_SIER_RDR1_EN (1 << 15)
+# define SSI_SIER_RDR0_EN (1 << 14)
+# define SSI_SIER_TDE1_EN (1 << 13)
+# define SSI_SIER_TDE0_EN (1 << 12)
+# define SSI_SIER_ROE1_EN (1 << 11)
+# define SSI_SIER_ROE0_EN (1 << 10)
+# define SSI_SIER_TUE1_EN (1 << 9)
+# define SSI_SIER_TUE0_EN (1 << 8)
+# define SSI_SIER_TFS_EN (1 << 7)
+# define SSI_SIER_RFS_EN (1 << 6)
+# define SSI_SIER_TLS_EN (1 << 5)
+# define SSI_SIER_RLS_EN (1 << 4)
+# define SSI_SIER_RFF1_EN (1 << 3)
+# define SSI_SIER_RFF0_EN (1 << 2)
+# define SSI_SIER_TFE1_EN (1 << 1)
+# define SSI_SIER_TFE0_EN (1 << 0)
+
+#define SSI_STCR	0x1c
+# define SSI_STCR_TXBIT0 (1 << 9)
+# define SSI_STCR_TFEN1	(1 << 8)
+# define SSI_STCR_TFEN0	(1 << 7)
+#  define SSI_FIFO_ENABLE_0_SHIFT 7
+# define SSI_STCR_TFDIR	(1 << 6)
+# define SSI_STCR_TXDIR	(1 << 5)
+# define SSI_STCR_TSHFD	(1 << 4)
+# define SSI_STCR_TSCKP	(1 << 3)
+# define SSI_STCR_TFSI	(1 << 2)
+# define SSI_STCR_TFSL	(1 << 1)
+# define SSI_STCR_TEFS	(1 << 0)
+
+#define SSI_SRCR	0x20
+# define SSI_SRCR_RXBIT0 (1 << 9)
+# define SSI_SRCR_RFEN1	(1 << 8)
+# define SSI_SRCR_RFEN0	(1 << 7)
+#  define SSI_FIFO_ENABLE_0_SHIFT 7
+# define SSI_SRCR_RFDIR	(1 << 6)
+# define SSI_SRCR_RXDIR	(1 << 5)
+# define SSI_SRCR_RSHFD	(1 << 4)
+# define SSI_SRCR_RSCKP	(1 << 3)
+# define SSI_SRCR_RFSI	(1 << 2)
+# define SSI_SRCR_RFSL	(1 << 1)
+# define SSI_SRCR_REFS	(1 << 0)
+
+#define SSI_SRCCR	0x28
+# define SSI_SRCCR_DIV2	(1 << 18)
+# define SSI_SRCCR_PSR	(1 << 17)
+# define SSI_SRCCR_WL(x) ((((x) - 2) >> 1) << 13)
+# define SSI_SRCCR_DC(x) (((x) & 0x1f) << 8)
+# define SSI_SRCCR_PM(x) (((x) & 0xff) << 0)
+# define SSI_SRCCR_WL_MASK (0xf << 13)
+# define SSI_SRCCR_DC_MASK (0x1f << 8)
+# define SSI_SRCCR_PM_MASK (0xff << 0)
+
+#define SSI_STCCR  0x24
+# define SSI_STCCR_DIV2 (1 << 18)
+# define SSI_STCCR_PSR (1 << 17)
+# define SSI_STCCR_WL(x) ((((x) - 2) >> 1) << 13)
+# define SSI_STCCR_DC(x) (((x) & 0x1f) << 8)
+# define SSI_STCCR_PM(x) (((x) & 0xff) << 0)
+# define SSI_STCCR_WL_MASK (0xf << 13)
+# define SSI_STCCR_DC_MASK (0x1f << 8)
+# define SSI_STCCR_PM_MASK (0xff << 0)
+
+#define SSI_SFCSR	0x2c
+# define SSI_SFCSR_RFCNT1(x) (((x) & 0xf) << 28)
+#  define SSI_RX_FIFO_1_COUNT_SHIFT 28
+# define SSI_SFCSR_TFCNT1(x) (((x) & 0xf) << 24)
+#  define SSI_TX_FIFO_1_COUNT_SHIFT 24
+# define SSI_SFCSR_RFWM1(x) (((x) & 0xf) << 20)
+# define SSI_SFCSR_TFWM1(x) (((x) & 0xf) << 16)
+# define SSI_SFCSR_RFCNT0(x) (((x) & 0xf) << 12)
+#  define SSI_RX_FIFO_0_COUNT_SHIFT 12
+# define SSI_SFCSR_TFCNT0(x) (((x) & 0xf) <<  8)
+#  define SSI_TX_FIFO_0_COUNT_SHIFT 8
+# define SSI_SFCSR_RFWM0(x) (((x) & 0xf) <<  4)
+# define SSI_SFCSR_TFWM0(x) (((x) & 0xf) <<  0)
+# define SSI_SFCSR_RFWM0_MASK (0xf <<  4)
+# define SSI_SFCSR_TFWM0_MASK (0xf <<  0)
+
+#define SSI_STR		0x30
+# define SSI_STR_TEST	(1 << 15)
+# define SSI_STR_RCK2TCK (1 << 14)
+# define SSI_STR_RFS2TFS (1 << 13)
+# define SSI_STR_RXSTATE(x) (((x) & 0xf) << 8)
+# define SSI_STR_TXD2RXD (1 <<  7)
+# define SSI_STR_TCK2RCK (1 <<  6)
+# define SSI_STR_TFS2RFS (1 <<  5)
+# define SSI_STR_TXSTATE(x) (((x) & 0xf) << 0)
+
+#define SSI_SOR		0x34
+# define SSI_SOR_CLKOFF	(1 << 6)
+# define SSI_SOR_RX_CLR	(1 << 5)
+# define SSI_SOR_TX_CLR	(1 << 4)
+# define SSI_SOR_INIT	(1 << 3)
+# define SSI_SOR_WAIT(x) (((x) & 0x3) << 1)
+# define SSI_SOR_WAIT_MASK (0x3 << 1)
+# define SSI_SOR_SYNRST	(1 << 0)
+
+#define SSI_SACNT	0x38
+# define SSI_SACNT_FRDIV(x) (((x) & 0x3f) << 5)
+# define SSI_SACNT_WR	(x << 4)
+# define SSI_SACNT_RD	(x << 3)
+# define SSI_SACNT_TIF	(x << 2)
+# define SSI_SACNT_FV	(x << 1)
+# define SSI_SACNT_AC97EN (x << 0)
+
+#define SSI_SACADD	0x3c
+#define SSI_SRMSK	0x4c
+#define SSI_SACDAT	0x40
+#define SSI_SATAG	0x44
+#define SSI_STMSK	0x48
+
+#endif /* __ASM_ARCH_MXC_SSI_H */
diff --git a/arch/arm/plat-mxc/include/mach/imx_watchdog.h b/arch/arm/plat-mxc/include/mach/imx_watchdog.h
new file mode 100644
index 0000000..ab87889
--- /dev/null
+++ b/arch/arm/plat-mxc/include/mach/imx_watchdog.h
@@ -0,0 +1,44 @@
+/*
+ * imx_watchdog.h
+ *
+ * Copyright (C) 2008 Juergen Beisert (kernel@pengutronix.de)
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+/*
+ * Watchdog register definition for:
+ * - i.MX21
+ * - i.MX27
+ */
+
+/* for direct access, note: All registers are 16 bit wide */
+#define IMX_WCR_REG(x)	(*(volatile unsigned short __force*)(x))
+#define IMX_WSR_REG(x)	(*(volatile unsigned short __force*)((x) + 2))
+#define IMX_WRSR_REG(x)	(*(volatile unsigned short __force*)((x) + 4))
+
+/* for drivers usage */
+#define IMX_WCR 0
+#define IMX_WSR 2
+#define IMX_WRSR 4
+
+/* Bit definitions */
+#define IMX_WCR_WT_SHIFT	8
+#define IMX_WCR_WT_MASK		0xFF00
+#define IMX_WCR_WDA		(1<<5)
+#define IMX_WCR_SRS		(1<<4)
+#define IMX_WCR_WRE		(1<<3)
+#define IMX_WCR_WDE		(1<<2)
+#define IMX_WCR_WDBG		(1<<1)
+#define IMX_WCR_WDZST		(1<<0)
-- 
1.6.0.3

