From 9b3256a1b7bcc7287c15843e9b7e749949453b0f Mon Sep 17 00:00:00 2001
From: "J. R. Okajima" <hooanon05g@gmail.com>
Date: Tue, 16 Feb 2016 14:32:33 +0900
Subject: [PATCH 3/6] aufs: bugfix, set ACL too in copy-up and chmod

commit f5b222f7be36dcc33e7815c3467bfbe29cc47dfb from
https://github.com/sfjro/aufs4-standalone.git aufs4.0

In ACL-aware world, the files processed by chmod or copy-up in aufs
might have the incorrect ACL. Force synchronizing ACL to the
mode/permission-bits so that the final ACL will be equivalent to the
original one on the lower RO branch.

Signed-off-by: J. R. Okajima <hooanon05g@gmail.com>
(cherry picked from commit 152ff48b787f0416eb983161e8504a1ca8d3f521)
Signed-off-by: Qi Hou <qi.hou@windriver.com>
---
 fs/aufs/cpup.c      |    2 ++
 fs/aufs/i_op.c      |    6 ++++++
 fs/aufs/posix_acl.c |    1 -
 fs/aufs/vfsub.h     |   15 +++++++++++++++
 4 files changed, 23 insertions(+), 1 deletions(-)

diff --git a/fs/aufs/cpup.c b/fs/aufs/cpup.c
index 29c0f13..aa69664 100644
--- a/fs/aufs/cpup.c
+++ b/fs/aufs/cpup.c
@@ -593,6 +593,8 @@ int cpup_entry(struct au_cp_generic *cpg, struct dentry *dst_parent,
 		AuIOErr("Unknown inode type 0%o\n", mode);
 		err = -EIO;
 	}
+	if (!err)
+		err = vfsub_acl_chmod(h_path.dentry->d_inode, mode);
 
 	mnt_flags = au_mntflags(sb);
 	if (!au_opt_test(mnt_flags, UDBA_NONE)
diff --git a/fs/aufs/i_op.c b/fs/aufs/i_op.c
index bfbe4a3..4411807 100644
--- a/fs/aufs/i_op.c
+++ b/fs/aufs/i_op.c
@@ -981,6 +981,12 @@ static int aufs_setattr(struct dentry *dentry, struct iattr *ia)
 			break;
 		}
 	}
+	/*
+	 * regardless aufs 'acl' option setting.
+	 * why don't all acl-aware fs call this func from their ->setattr()?
+	 */
+	if (!err && (ia->ia_valid & ATTR_MODE))
+		err = vfsub_acl_chmod(a->h_inode, ia->ia_mode);
 	if (!err)
 		au_cpup_attr_changeable(inode);
 
diff --git a/fs/aufs/posix_acl.c b/fs/aufs/posix_acl.c
index d5266ef..c98f28d 100644
--- a/fs/aufs/posix_acl.c
+++ b/fs/aufs/posix_acl.c
@@ -20,7 +20,6 @@
  */
 
 #include <linux/fs.h>
-#include <linux/posix_acl.h>
 #include "aufs.h"
 
 struct posix_acl *aufs_get_acl(struct inode *inode, int type)
diff --git a/fs/aufs/vfsub.h b/fs/aufs/vfsub.h
index ca86c3d..41ad33e 100644
--- a/fs/aufs/vfsub.h
+++ b/fs/aufs/vfsub.h
@@ -26,6 +26,7 @@
 
 #include <linux/fs.h>
 #include <linux/mount.h>
+#include <linux/posix_acl.h>
 #include <linux/xattr.h>
 #include "debug.h"
 
@@ -213,6 +214,20 @@ static inline int vfsub_update_time(struct inode *h_inode, struct timespec *ts,
 	/* no vfsub_update_h_iattr() since we don't have struct path */
 }
 
+#ifdef CONFIG_FS_POSIX_ACL
+static inline int vfsub_acl_chmod(struct inode *h_inode, umode_t h_mode)
+{
+	int err;
+
+	err = posix_acl_chmod(h_inode, h_mode);
+	if (err == -EOPNOTSUPP)
+		err = 0;
+	return err;
+}
+#else
+AuStubInt0(vfsub_acl_chmod, struct inode *h_inode, umode_t h_mode);
+#endif
+
 long vfsub_splice_to(struct file *in, loff_t *ppos,
 		     struct pipe_inode_info *pipe, size_t len,
 		     unsigned int flags);
-- 
1.7.5.4

