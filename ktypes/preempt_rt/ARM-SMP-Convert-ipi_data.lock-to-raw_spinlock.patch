From c782d085eeb46cf09222cb70fca15ceac918aa0a Mon Sep 17 00:00:00 2001
From: Tonyliu <Bo.Liu@windriver.com>
Date: Thu, 29 Jul 2010 13:39:20 +0800
Subject: [PATCH 2/4] ARM SMP: Convert ipi_data.lock to raw_spinlock

IPI ISR/Send routine is in atomic context, needs real spinlock
ipi_data.lock to keep it preemption-safe. Convert it to raw_spinlock.
No change for !RT kernels.

Signed-off-by: Tonyliu <Bo.Liu@windriver.com>
---
 arch/arm/kernel/smp.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/arch/arm/kernel/smp.c b/arch/arm/kernel/smp.c
index fd4c58f..2d2c879 100644
--- a/arch/arm/kernel/smp.c
+++ b/arch/arm/kernel/smp.c
@@ -50,13 +50,13 @@ struct secondary_data secondary_data;
  * - A collection of single bit ipi messages.
  */
 struct ipi_data {
-	spinlock_t lock;
+	raw_spinlock_t lock;
 	unsigned long ipi_count;
 	unsigned long bits;
 };
 
 static DEFINE_PER_CPU(struct ipi_data, ipi_data) = {
-	.lock	= SPIN_LOCK_UNLOCKED,
+	.lock	= __ARCH_SPIN_LOCK_UNLOCKED,
 };
 
 enum ipi_msg_type {
@@ -349,9 +349,9 @@ static void send_ipi_message(const struct cpumask *mask, enum ipi_msg_type msg)
 	for_each_cpu(cpu, mask) {
 		struct ipi_data *ipi = &per_cpu(ipi_data, cpu);
 
-		spin_lock(&ipi->lock);
+		raw_spin_lock(&ipi->lock);
 		ipi->bits |= 1 << msg;
-		spin_unlock(&ipi->lock);
+		raw_spin_unlock(&ipi->lock);
 	}
 
 	/*
@@ -501,10 +501,10 @@ asmlinkage void __exception do_IPI(struct pt_regs *regs)
 	for (;;) {
 		unsigned long msgs;
 
-		spin_lock(&ipi->lock);
+		raw_spin_lock(&ipi->lock);
 		msgs = ipi->bits;
 		ipi->bits = 0;
-		spin_unlock(&ipi->lock);
+		raw_spin_unlock(&ipi->lock);
 
 		if (!msgs)
 			break;
-- 
1.6.5.2

