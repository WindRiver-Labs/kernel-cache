From 3c271c3c01dde36767b7b0d715e0e447ea106dc3 Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Mon, 26 Jul 2010 01:11:19 -0700
Subject: [PATCH 2/2] lttng: stop tracing of the notifier atomic call chain

The last patch reverts the commit 3a6c5a5b6f13e6e4c29bc2165b02cea4d6e8141c,
This patch re-implement the idea of the commit but avoid introducing preemption
disabling via calling tracing_stop/start() instead of
rcu_read_lock/unlock_sched_notrace() and also we will not try to implement the
notrace variant of rcu_read_lock/unlock() for it's hard to convert all of the
callees of them to notrace.

With the last patch and this one, the un-necessary preemption disabling block
is removed and the pontential "BUG: sleeping function called from invalid
context" is also fixed.

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 kernel/notifier.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/kernel/notifier.c b/kernel/notifier.c
index 0230f2e..e555cae 100644
--- a/kernel/notifier.c
+++ b/kernel/notifier.c
@@ -179,9 +179,11 @@ int __kprobes __atomic_notifier_call_chain(struct atomic_notifier_head *nh,
 {
 	int ret;
 
+	tracing_stop();
 	rcu_read_lock();
 	ret = notifier_call_chain(&nh->head, val, v, nr_to_call, nr_calls);
 	rcu_read_unlock();
+	tracing_start();
 
 	return ret;
 }
-- 
1.6.5.2

