From 654402830cf0b9322d2279859ab05e100825de47 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Thu, 6 Jun 2013 15:16:17 +0800
Subject: [PATCH 2/5] x86-no-perf-irq-work-rt.patch

From git://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-stable-rt.git:
commit fe62f2e6fc7b23101874b07ad277e540f7765490 upstream

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 arch/x86/kernel/irq_work.c |    2 ++
 kernel/irq_work.c          |    2 ++
 kernel/perf_event.c        |    8 +++++++-
 kernel/timer.c             |    6 +++++-
 4 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kernel/irq_work.c b/arch/x86/kernel/irq_work.c
index ca8f703..6e20cf0 100644
--- a/arch/x86/kernel/irq_work.c
+++ b/arch/x86/kernel/irq_work.c
@@ -18,6 +18,7 @@ void smp_irq_work_interrupt(struct pt_regs *regs)
 	irq_exit();
 }
 
+#ifndef CONFIG_PREEMPT_RT
 void arch_irq_work_raise(void)
 {
 #ifdef CONFIG_X86_LOCAL_APIC
@@ -28,3 +29,4 @@ void arch_irq_work_raise(void)
 	apic_wait_icr_idle();
 #endif
 }
+#endif
diff --git a/kernel/irq_work.c b/kernel/irq_work.c
index f16763f..dcd95c9 100644
--- a/kernel/irq_work.c
+++ b/kernel/irq_work.c
@@ -126,8 +126,10 @@ void irq_work_run(void)
 	if (*head == NULL)
 		return;
 
+#ifndef CONFIG_PREEMPT_RT
 	BUG_ON(!in_irq());
 	BUG_ON(!irqs_disabled());
+#endif
 
 	list = xchg(head, NULL);
 	while (list != NULL) {
diff --git a/kernel/perf_event.c b/kernel/perf_event.c
index 9fe97bf..6a842ee 100644
--- a/kernel/perf_event.c
+++ b/kernel/perf_event.c
@@ -2930,9 +2930,15 @@ static bool perf_output_space(struct perf_mmap_data *data, unsigned long tail,
 
 static void perf_output_wakeup(struct perf_output_handle *handle)
 {
+	int queue = handle->nmi;
+
+#ifdef CONFIG_PREEMPT_RT
+	queue |= irqs_disabled() || preempt_count();
+#endif
+
 	atomic_set(&handle->data->poll, POLL_IN);
 
-	if (handle->nmi) {
+	if (queue) {
 		handle->event->pending_wakeup = 1;
 		irq_work_queue(&handle->event->pending);
 	} else
diff --git a/kernel/timer.c b/kernel/timer.c
index f718f1b..ce4afd7 100644
--- a/kernel/timer.c
+++ b/kernel/timer.c
@@ -1280,7 +1280,7 @@ void update_process_times(int user_tick)
 	scheduler_tick();
 	run_local_timers();
 	rcu_check_callbacks(cpu, user_tick);
-#ifdef CONFIG_IRQ_WORK
+#if defined(CONFIG_IRQ_WORK) && !defined(CONFIG_PREEMPT_RT)
 	if (in_irq())
 		irq_work_run();
 #endif
@@ -1294,6 +1294,10 @@ static void run_timer_softirq(struct softirq_action *h)
 {
 	struct tvec_base *base = per_cpu(tvec_bases, raw_smp_processor_id());
 
+#if defined(CONFIG_IRQ_WORK)
+	irq_work_run();
+#endif
+
 	printk_tick();
 	hrtimer_run_pending();
 
-- 
1.7.5.4

