From d2eafa17ec80af5b58ad7b990026fad17882cf1b Mon Sep 17 00:00:00 2001
From: Hui Wang <Hui.Wang@windriver.com>
Date: Thu, 6 Jan 2011 19:23:27 +0800
Subject: [PATCH 4/4] oprofile/armv7: change the interrupt handler from thread to irq

If we don't add IRQF_NODELAY parameter in the preempt_rt kernel, the
interrupt handler will execute in the thread context, but oprofile
interrupt handler will call get_irq_regs() to get irq context and
use it in the following routines, under thread context it can't get
a correct irq context, so the system will crash because of using a
wrong irq context. To solve it, we change interrupt handler from
thread to irq.

Signed-off-by: Hui Wang <Hui.Wang@windriver.com>
---
 arch/arm/oprofile/op_model_v7.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/arch/arm/oprofile/op_model_v7.c b/arch/arm/oprofile/op_model_v7.c
index 6971bc9..dd23b9b 100644
--- a/arch/arm/oprofile/op_model_v7.c
+++ b/arch/arm/oprofile/op_model_v7.c
@@ -307,7 +307,7 @@ int armv7_request_interrupts(const int *irqs, int nr)
 
 	for (i = 0; i < nr; i++) {
 		ret = request_irq(irqs[i], armv7_pmnc_interrupt,
-				IRQF_DISABLED, "CP15 PMNC", NULL);
+				IRQF_DISABLED | IRQF_NODELAY, "CP15 PMNC", NULL);
 		if (ret != 0) {
 			printk(KERN_ERR "oprofile: unable to request IRQ%u"
 				" for ARMv7\n",
-- 
1.6.5.2

