From 47530c9234c6173710536899617f9195624aa10d Mon Sep 17 00:00:00 2001
From: Mark Asselstine <mark.asselstine@windriver.com>
Date: Fri, 13 Aug 2010 09:44:40 -0700
Subject: [PATCH 2/2] vfs: unionfs: revert scalability patches

Another part to the scalability patches revert. unionfs is not
part of the mainline kernel and so this is done independently
here.

See commit "vfs: Revert the scalability patches" (Tue, 13 Jul 2010)

Signed-off-by: Mark Asselstine <mark.asselstine@windriver.com>
---
 fs/unionfs/commonfops.c |    4 +---
 fs/unionfs/copyup.c     |    4 +---
 fs/unionfs/dentry.c     |    2 +-
 3 files changed, 3 insertions(+), 7 deletions(-)

diff --git a/fs/unionfs/commonfops.c b/fs/unionfs/commonfops.c
index 3b550b9..740c4ad 100644
--- a/fs/unionfs/commonfops.c
+++ b/fs/unionfs/commonfops.c
@@ -82,9 +82,7 @@ retry:
 	/* bring it to the same state as an unlinked file */
 	lower_dentry = unionfs_lower_dentry_idx(dentry, dbstart(dentry));
 	if (!unionfs_lower_inode_idx(dentry->d_inode, bindex)) {
-		spin_lock(&lower_dentry->d_inode->i_lock);
-		lower_dentry->d_inode->i_count++;
-		spin_unlock(&lower_dentry->d_inode->i_lock);
+		atomic_inc(&lower_dentry->d_inode->i_count);
 		unionfs_set_lower_inode_idx(dentry->d_inode, bindex,
 					    lower_dentry->d_inode);
 	}
diff --git a/fs/unionfs/copyup.c b/fs/unionfs/copyup.c
index 8af03a7..9c7b2ac 100644
--- a/fs/unionfs/copyup.c
+++ b/fs/unionfs/copyup.c
@@ -546,9 +546,7 @@ out_free:
 			 * unlinked-open file, whose name is .unionfsXXXXX.
 			 */
 			struct inode *inode = new_lower_dentry->d_inode;
-			spin_lock(&inode->i_lock);
-			inode->i_count++;
-			spin_unlock(&inode->i_lock);
+			atomic_inc(&inode->i_count);
 			unionfs_set_lower_inode_idx(dentry->d_inode,
 						    ibstart(dentry->d_inode),
 						    inode);
diff --git a/fs/unionfs/dentry.c b/fs/unionfs/dentry.c
index 124fe86..a0c3bba 100644
--- a/fs/unionfs/dentry.c
+++ b/fs/unionfs/dentry.c
@@ -374,7 +374,7 @@ static void unionfs_d_iput(struct dentry *dentry, struct inode *inode)
 	path_put_lowers_all(dentry, false);
 
 drop_lower_inodes:
-	rc = inode->i_count;
+	rc = atomic_read(&inode->i_count);
 	if (rc == 1 && inode->i_nlink == 1 && ibstart(inode) >= 0) {
 		/* see Documentation/filesystems/unionfs/issues.txt */
 		lockdep_off();
-- 
1.6.5.2

