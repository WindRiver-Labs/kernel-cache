From 2aeac7c101dbe816f339e324b377763a14a08d4d Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Sat, 19 Feb 2011 14:36:23 -0500
Subject: [PATCH] kvm: revert obsolete preempt_[dis/en]able calls from RT patch

Bundled into "preempt-rt: -rt20 applied to 2.6.34 -standard" was
the change which could be tracked back to this in tip:

  commit 5f0028625b529f647e747d043ebde087be60e5b7
  Author: Thomas Gleixner <tglx@linutronix.de>
  Date:   Wed Feb 24 17:28:10 2010 +0100

    kvm: make_all_cpus_request() needs preempt_disable() on RT

    smp_call_function_many() needs to be called with preemption disabled,
    but on RT spin_lock(&kvm->requests_lock) is not doing that.

    Explicitely disable preemption on RT for the smp_call_function_many()
    call.

However, since this change was done, the main upstream converted the
kvm->requests_lock to a raw lock in:

   commit 70e335e16882df5b5d6971022e63c3603a1e8c23
   Author: Avi Kivity <avi@redhat.com>
   Date:   Thu Feb 18 11:25:22 2010 +0200

    KVM: Convert kvm->requests_lock to raw_spinlock_t

    The code relies on kvm->requests_lock inhibiting preemption.

Hence the original change from tip is no longer required on a 34.x tree.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 virt/kvm/kvm_main.c |    2 --
 1 files changed, 0 insertions(+), 2 deletions(-)

diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index a66ce56..05bc0ee 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -150,14 +150,12 @@ static bool make_all_cpus_request(struct kvm *kvm, unsigned int req)
 		if (cpus != NULL && cpu != -1 && cpu != me)
 			cpumask_set_cpu(cpu, cpus);
 	}
-	preempt_disable_rt();
 	if (unlikely(cpus == NULL))
 		smp_call_function_many(cpu_online_mask, ack_flush, NULL, 1);
 	else if (!cpumask_empty(cpus))
 		smp_call_function_many(cpus, ack_flush, NULL, 1);
 	else
 		called = false;
-	preempt_enable_rt();
 	raw_spin_unlock(&kvm->requests_lock);
 	free_cpumask_var(cpus);
 	return called;
-- 
1.7.4

