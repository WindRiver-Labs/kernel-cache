From 98663188675885044a5fe4c662fbd6c7b81786bf Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Wed, 24 Oct 2012 15:06:23 +0800
Subject: [PATCH] preempt_rt/gianfar: Fix ethtool generate call trace

ethtool on preemt_rt kernel may introduce call trace:
BUG: sleeping function called from invalid context at kernel/rtmutex.c:707
pcnt: 0 0 in_atomic(): 0, irqs_disabled(): 1, pid: 712, name: ethtool
Call Trace:
[ef2f7c70] [c00082a0] show_stack+0x44/0x160 (unreliable)
[ef2f7ca0] [c003d370] __might_sleep+0xe4/0x108
[ef2f7cb0] [c056c984] rt_spin_lock+0x38/0xac
[ef2f7cc0] [c040b144] lock_tx_qs+0x38/0x58
[ef2f7ce0] [c0411d2c] gfar_sringparam+0x2b0/0x324
[ef2f7d50] [c04c2f74] dev_ethtool+0x16fc/0x1e38
[ef2f7dd0] [c04bf6cc] dev_ioctl+0x484/0x714
[ef2f7e60] [c04a5e98] sock_ioctl+0x88/0x2dc
[ef2f7e80] [c011d794] vfs_ioctl+0x3c/0xec
[ef2f7ea0] [c011da0c] do_vfs_ioctl+0x84/0x7d8
[ef2f7f10] [c011e1f4] sys_ioctl+0x94/0x108
[ef2f7f40] [c0011a7c] ret_from_syscall+0x0/0x4
---
 drivers/net/gianfar_ethtool.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/net/gianfar_ethtool.c b/drivers/net/gianfar_ethtool.c
index f22a43a..0788123 100644
--- a/drivers/net/gianfar_ethtool.c
+++ b/drivers/net/gianfar_ethtool.c
@@ -491,7 +491,7 @@ static int gfar_sringparam(struct net_device *dev, struct ethtool_ringparam *rva
 
 		/* Halt TX and RX, and process the frames which
 		 * have already been received */
-		local_irq_save(flags);
+		local_irq_save_nort(flags);
 		lock_tx_qs(priv);
 		lock_rx_qs(priv);
 
@@ -499,7 +499,7 @@ static int gfar_sringparam(struct net_device *dev, struct ethtool_ringparam *rva
 
 		unlock_rx_qs(priv);
 		unlock_tx_qs(priv);
-		local_irq_restore(flags);
+		local_irq_restore_nort(flags);
 
 		for (i = 0; i < priv->num_rx_queues; i++)
 			gfar_clean_rx_ring(priv->rx_queue[i],
@@ -552,7 +552,7 @@ static int gfar_set_rx_csum(struct net_device *dev, uint32_t data)
 	if (dev->flags & IFF_UP) {
 		/* Halt TX and RX, and process the frames which
 		 * have already been received */
-		local_irq_save(flags);
+		local_irq_save_nort(flags);
 		lock_tx_qs(priv);
 		lock_rx_qs(priv);
 
@@ -560,7 +560,7 @@ static int gfar_set_rx_csum(struct net_device *dev, uint32_t data)
 
 		unlock_tx_qs(priv);
 		unlock_rx_qs(priv);
-		local_irq_restore(flags);
+		local_irq_restore_nort(flags);
 
 		for (i = 0; i < priv->num_rx_queues; i++)
 			gfar_clean_rx_ring(priv->rx_queue[i],
-- 
1.7.0

