From 38e9b054f7fedbe692218a969e5478129c3ced62 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Sun, 20 Feb 2011 13:56:30 -0500
Subject: [PATCH] kmap_atomic: restore the direct versions
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

They were originally used as part of paravirt stuff, and the
RT patches capitalized on that, but then upstream dad52fc0116
did some housecleaning and removed the kmap paravirt code.

But for RT, we still need basic defines, or on a UP compile:

  CC      arch/x86/mm/gup.o
arch/x86/mm/gup.c: In function ‘gup_pte_range’:
arch/x86/mm/gup.c:80: error: implicit declaration of function ‘kmap_atomic_pte_direct’
make[4]: *** [arch/x86/mm/gup.o] Error 1

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/x86/include/asm/highmem.h |    4 ++++
 include/linux/highmem.h        |    2 ++
 2 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/arch/x86/include/asm/highmem.h b/arch/x86/include/asm/highmem.h
index 76a08d9..d20a885 100644
--- a/arch/x86/include/asm/highmem.h
+++ b/arch/x86/include/asm/highmem.h
@@ -72,6 +72,10 @@ void __kunmap_atomic(void *kvaddr, enum km_type type);
 void *__kmap_atomic_pfn(unsigned long pfn, enum km_type type);
 struct page *__kmap_atomic_to_page(void *ptr);
 
+
+#define kmap_atomic_pte(page, type)		kmap_atomic(page, type)
+#define kmap_atomic_pte_direct(page, type)	kmap_atomic_direct(page, type)
+
 #define flush_cache_kmaps()	do { } while (0)
 
 extern void add_highpages_with_active_regions(int nid, unsigned long start_pfn,
diff --git a/include/linux/highmem.h b/include/linux/highmem.h
index 74152c0..79f7960 100644
--- a/include/linux/highmem.h
+++ b/include/linux/highmem.h
@@ -71,8 +71,10 @@ static inline void *kmap_atomic(struct page *page, enum km_type idx)
 	return page_address(page);
 }
 #define kmap_atomic_prot(page, idx, prot)	kmap_atomic(page, idx)
+#define kmap_atomic_direct(page, idx)		kmap_atomic(page, idx)
 
 #define kunmap_atomic(addr, idx)	do { pagefault_enable(); } while (0)
+#define kunmap_atomic_direct(page, idx)	kunmap_atomic(page, idx)
 #define kmap_atomic_pfn(pfn, idx)	kmap_atomic(pfn_to_page(pfn), (idx))
 #define kmap_atomic_to_page(ptr)	virt_to_page(ptr)
 
-- 
1.7.4

