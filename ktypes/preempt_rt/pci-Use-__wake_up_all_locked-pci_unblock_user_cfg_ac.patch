From 793374691e9e5357b9e34b3f1212b9a1af4aec61 Mon Sep 17 00:00:00 2001
From: Thomas Gleixner <tglx@linutronix.de>
Date: Thu, 12 Jul 2012 17:36:10 +0800
Subject: [PATCH 2/2] pci: Use __wake_up_all_locked
 pci_unblock_user_cfg_access()

commit e8af0ebc1ecaec6fa17560de5f5a1b154648e2a6 -tip

The waitqueue is protected by the pci_lock, so we can just avoid to
lock the waitqueue lock itself. That prevents the
might_sleep()/scheduling while atomic problem on RT

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Cc: stable-rt@vger.kernel.org
Integrated-by: Yong Zhang <yong.zhang@windriver.com>
---
 drivers/pci/access.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/pci/access.c b/drivers/pci/access.c
index affb83b..b42b0fd 100644
--- a/drivers/pci/access.c
+++ b/drivers/pci/access.c
@@ -424,7 +424,7 @@ void pci_unblock_user_cfg_access(struct pci_dev *dev)
 	WARN_ON(!dev->block_ucfg_access);
 
 	dev->block_ucfg_access = 0;
-	wake_up_all(&pci_ucfg_wait);
+	wake_up_all_locked(&pci_ucfg_wait);
 	raw_spin_unlock_irqrestore(&pci_lock, flags);
 }
 EXPORT_SYMBOL_GPL(pci_unblock_user_cfg_access);
-- 
1.7.9.7

