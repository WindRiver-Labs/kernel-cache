From 4dadf2500c4bb67f770e0a69837aade7a054f67e Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Sun, 20 Feb 2011 00:17:34 -0500
Subject: [PATCH] sched: add in dropped lock contention break

In the tip changeset 5d2740b70e7f6ad29104aec72956fb6e4d143809 is:

    From: Peter Zijlstra <peterz@infradead.org>
    Date: Tue, 16 Mar 2010 14:31:44 -0700
    Subject: sched: Break out from load_balancing on rq_lock contention

The lock break portion can be found in upstream baa8c110, but
the change to balance_tasks() was not upstreamed, nor maintained
in the giant RT "preempt-rt: -rt20 applied to 2.6.34 -standard"
patch.  Note that code relocations from sched --> sched_fair
took place in the 33 --> 34 kernel development cycle.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 kernel/sched_fair.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/kernel/sched_fair.c b/kernel/sched_fair.c
index bd3e452..80d0d76 100644
--- a/kernel/sched_fair.c
+++ b/kernel/sched_fair.c
@@ -1969,6 +1969,10 @@ balance_tasks(struct rq *this_rq, int this_cpu, struct rq *busiest,
 		 */
 		if (idle == CPU_NEWLY_IDLE)
 			break;
+
+		if (raw_spin_is_contended(&this_rq->lock) ||
+		    raw_spin_is_contended(&busiest->lock))
+			break;
 #endif
 
 		/*
-- 
1.7.4

