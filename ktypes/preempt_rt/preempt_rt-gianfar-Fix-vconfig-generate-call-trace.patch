From 5b790dde59c21484d5e9369e410d87a9ba98c0aa Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Tue, 17 Jan 2012 12:58:39 +0800
Subject: [PATCH] preempt_rt/gianfar: Fix vconfig generate call trace

When configure vlan-devices, sleepable spinlocks introduce call trace:

BUG: sleeping function called from invalid context at kernel/rtmutex.c:707
pcnt: 0 0 in_atomic(): 0, irqs_disabled(): 1, pid: 633, name: vconfig
Call Trace:
[def37d20] [c00084e8] show_stack+0x44/0x160 (unreliable)
[def37d50] [c003d588] __might_sleep+0xe4/0x108
[def37d60] [c059cd34] rt_spin_lock+0x38/0xb4
[def37d70] [c0423fec] lock_rx_qs+0x38/0x58
[def37d90] [c0429598] gfar_vlan_rx_register+0x30/0x10c
[def37db0] [e22af38c] register_vlan_dev+0x15c/0x360 [8021q]
[def37df0] [e22b0038] vlan_ioctl_handler+0x430/0x4a8 [8021q]
[def37e60] [c04d69d8] sock_ioctl+0x294/0x2d8
[def37e80] [c01299ac] vfs_ioctl+0x3c/0xec
[def37ea0] [c0129c28] do_vfs_ioctl+0x84/0x7d8
[def37f10] [c012a410] sys_ioctl+0x94/0x108
[def37f40] [c00121c4] ret_from_syscall+0x0/0x4

Function gfar_vlan_rx_register closes interrupts before locks rx queues thus
cause the BUG report. All gainfar's irq handlers are threaded and there is no
critical operation in this function. Replace local_irq_save/restore to
local_irq_save_nort/restore_nort in function gfar_vlan_rx_register.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 drivers/net/gianfar.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index af4ff18..0a431ab 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -3212,7 +3212,7 @@ static void gfar_vlan_rx_register(struct net_device *dev,
 	u32 tempval;
 
 	regs = priv->gfargrp[0].regs;
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 	lock_rx_qs(priv);
 
 	priv->vlgrp = grp;
@@ -3248,7 +3248,7 @@ static void gfar_vlan_rx_register(struct net_device *dev,
 	gfar_change_mtu(dev, dev->mtu);
 
 	unlock_rx_qs(priv);
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 }
 
 static int gfar_change_mtu(struct net_device *dev, int new_mtu)
-- 
1.7.0.4

