From fd00ad3609a4a5245589c2b1102ca1ede8676c2c Mon Sep 17 00:00:00 2001
From: Liming Wang <liming.wang@windriver.com>
Date: Wed, 15 Apr 2009 10:34:49 +0800
Subject: [PATCH] lttng: fix lttng deadlock on preempt_rt kernel

Here is the scenario:

ltt_concol
  acquire ltt_traces_mutex	      <-----acquired successfully
     trigger ltt_async_wakeup_timer
     synchronize_sched

Then synchronize_sched will block until kernel thread
rcu_sched_grace_period completes a grace period.

rcu_sched_grace_period
  schedule_timeout_interruptible

If ltt_async_wakeup_timer is running at this time, it will
acquire ltt_traces_mutex as follows.

ltt_async_wakeup_timer
  async_wakeup
    to acquire ltt_traces_mutex		<-----will be blocked

Then async_wakeup will block timer softirq thread
because it can't get ltt_traces_mutex.
If the timer which will wake up kernel thread rcu_sched_grace_period
is also on this cpu, rcu_sched_grace_period can't be wakeuped in
schedule_timeout_interruptible. Then a deadlock occurs.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Tested-by: Liming Wang <liming.wang@windriver.com>
---
 include/linux/ltt-tracer.h |    1 +
 ltt/ltt-core.c             |    5 +++++
 ltt/ltt-tracer.c           |    4 +++-
 3 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/include/linux/ltt-tracer.h b/include/linux/ltt-tracer.h
index 277d42f..cbeaed8 100644
--- a/include/linux/ltt-tracer.h
+++ b/include/linux/ltt-tracer.h
@@ -722,6 +722,7 @@ extern void ltt_dump_marker_state(struct ltt_trace_struct *trace);
 extern void probe_id_defrag(void);
 
 void ltt_lock_traces(void);
+int ltt_trylock_traces(void);
 void ltt_unlock_traces(void);
 
 extern void ltt_dump_softirq_vec(void *call_data);
diff --git a/ltt/ltt-core.c b/ltt/ltt-core.c
index abd3d6d..a079108 100644
--- a/ltt/ltt-core.c
+++ b/ltt/ltt-core.c
@@ -25,6 +25,11 @@ void ltt_lock_traces(void)
 }
 EXPORT_SYMBOL_GPL(ltt_lock_traces);
 
+int ltt_trylock_traces(void)
+{
+	return mutex_trylock(&ltt_traces_mutex);
+}
+
 void ltt_unlock_traces(void)
 {
 	mutex_unlock(&ltt_traces_mutex);
diff --git a/ltt/ltt-tracer.c b/ltt/ltt-tracer.c
index e4358cf..eb07da1 100644
--- a/ltt/ltt-tracer.c
+++ b/ltt/ltt-tracer.c
@@ -239,7 +239,8 @@ static void async_wakeup(unsigned long data)
 #ifndef CONFIG_PREEMPT_RT
 	rcu_read_lock_sched();
 #else
-	ltt_lock_traces();
+	if (!ltt_trylock_traces())
+		goto out;
 #endif
 	list_for_each_entry_rcu(trace, &ltt_traces.head, list) {
 		trace_async_wakeup(trace);
@@ -250,6 +251,7 @@ static void async_wakeup(unsigned long data)
 	ltt_unlock_traces();
 #endif
 
+out:
 	mod_timer(&ltt_async_wakeup_timer, jiffies + LTT_PERCPU_TIMER_INTERVAL);
 }
 
-- 
1.6.3.3

