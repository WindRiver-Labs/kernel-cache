From 06a26f8e0d6461ad39faf519423703242f9c7516 Mon Sep 17 00:00:00 2001
From: Andrew Liu <shengping.liu@windriver.com>
Date: Tue, 22 Feb 2011 17:13:22 +0800
Subject: [PATCH 1/4] DPAA: Update DPA/FMan driver on preempt_rt branch

Patch taken from FSL vendor SDK 2.2

Update FMan low level driver/API.
Update Freescale DPA(data-path) ethernet driver.

Add FMAN processor kernel option to support different board.
Change dpa.c(h) to dpaa_eth.c(h)
Remove the ioctls files.
Add Fman operation files: m_manip.c(h).
Modify code style.
Add more asserations and exceptions code o perfect code.
Add process branch for 10G Ethernet operation

Integrated-by: Andrew Liu <shengping.liu@windriver.com>
---
 .../kernel/2.6/wrappers/Peripherals/FM/lnxwrp_fm.c |   20 ++++----
 .../user/env/linux/kernel/2.6/xx/xx_linux.c        |    4 +-
 drivers/net/dpa/dpa-common.h                       |   24 ++++++---
 drivers/net/dpa/dpaa_eth.c                         |   54 ++++++++++---------
 4 files changed, 56 insertions(+), 46 deletions(-)

diff --git a/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/wrappers/Peripherals/FM/lnxwrp_fm.c b/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/wrappers/Peripherals/FM/lnxwrp_fm.c
index 6184dc7..6d40dd4 100644
--- a/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/wrappers/Peripherals/FM/lnxwrp_fm.c
+++ b/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/wrappers/Peripherals/FM/lnxwrp_fm.c
@@ -980,7 +980,7 @@ static void qm_err_cb(struct qman_portal       *portal,
                        struct qman_fq           *fq,
                        const struct qm_mr_entry *msg)
 {
-    /* In guest OS, we maybe get a ISR when retiring a FQ */
+     /* In guest OS, we maybe get a ISR when retiring a FQ */
 #if !defined(CONFIG_PPC85xx_VT_MODE) && !defined(CONFIG_KEXEC)
     BUG();
 #endif
@@ -1047,18 +1047,18 @@ static t_Error QmEnqueueCB (t_Handle h_Arg, void *p_Fd)
 
     ASSERT_COND(p_LnxWrpFmDev);
 
-   spin_lock_irqsave(&lock, flags);
-   hcFrmRcv++;
-   spin_unlock_irqrestore(&lock, flags);
+    spin_lock_irqsave(&lock, flags);
+    hcFrmRcv++;
+    spin_unlock_irqrestore(&lock, flags);
 //MemDisp((uint8_t*)p_Fd,sizeof(t_DpaaFD));
     _errno = qman_enqueue(p_LnxWrpFmDev->hc_tx_fq, (struct qm_fd*)p_Fd, 0);
     if (_errno)
         RETURN_ERROR(MINOR, E_INVALID_STATE, NO_MSG);
 
-   while (hcFrmRcv && --timeout)
+    while (hcFrmRcv && --timeout)
     {
-       udelay(1);
-       cpu_relax();
+        udelay(1);
+        cpu_relax();
     }
     BUG_ON(!timeout);
 
@@ -1324,7 +1324,7 @@ static const struct qe_firmware *FindFmanMicrocode(void)
 		    REPORT_ERROR(WARNING, E_NOT_FOUND, ("firmware node is incomplete"));
     }
 #ifdef	CONFIG_PPC85xx_VT_MODE
-	P4080_UCPatch = &p4080_fman_firmware;
+    P4080_UCPatch = &p4080_fman_firmware;
 #else
     /* If not, then we have a legacy U-Boot.  The firmware is in flash. */
 
@@ -1349,7 +1349,7 @@ static const struct qe_firmware *FindFmanMicrocode(void)
      */
     P4080_UCSize = sizeof(u32) * P4080_UCPatch->microcode[0].count;
 #ifndef	CONFIG_PPC85xx_VT_MODE
-    iounmap((void *)P4080_UCPatch);
+    iounmap(P4080_UCPatch);
     P4080_UCPatch = ioremap(P4080_UCAddr, P4080_UCSize);
 #endif
     if (!P4080_UCPatch) {
@@ -2556,7 +2556,7 @@ static struct of_platform_driver fm_driver = {
     .owner          = THIS_MODULE,
     .probe          = fm_probe,
 #if defined(CONFIG_PPC85xx_VT_MODE) || defined(CONFIG_KEXEC)
-    .shutdown	    = fm_shutdown,
+   .shutdown	    = fm_shutdown,
 #endif
     .remove         = __devexit_p(fm_remove)
 };
diff --git a/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/xx/xx_linux.c b/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/xx/xx_linux.c
index 4b62be9..c3bdbc6 100644
--- a/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/xx/xx_linux.c
+++ b/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/xx/xx_linux.c
@@ -183,7 +183,7 @@ void XX_Print(char *str, ...)
 #ifdef CONFIG_SMP
     if (vsnprintf (buf, BUF_SIZE, str, args) >= BUF_SIZE)
         printk(KERN_WARNING "Illegal string to print!\n    more than %d characters.\n\tString was not printed completelly.\n", BUF_SIZE);
-    printk (KERN_CRIT "cpu%d/%d: %s",hard_smp_processor_id(), smp_processor_id(), buf);
+    printk (KERN_CRIT "cpu%d/%d: %s",hard_smp_processor_id(), raw_smp_processor_id(), buf);
 #else
     vprintk(str, args);
 #endif /* CONFIG_SMP */
@@ -201,7 +201,7 @@ void XX_Fprint(void *file, char *str, ...)
 #ifdef CONFIG_SMP
     if (vsnprintf (buf, BUF_SIZE, str, args) >= BUF_SIZE)
         printk(KERN_WARNING "Illegal string to print!\n    more than %d characters.\n\tString was not printed completelly.\n", BUF_SIZE);
-    printk (KERN_CRIT "cpu%d/%d: %s",hard_smp_processor_id(), smp_processor_id(), buf);
+    printk (KERN_CRIT "cpu%d/%d: %s",hard_smp_processor_id(), raw_smp_processor_id(), buf);
 #else
     vprintk(str, args);
 #endif /* CONFIG_SMP */
diff --git a/drivers/net/dpa/dpa-common.h b/drivers/net/dpa/dpa-common.h
index 3a23a59..ef61067 100644
--- a/drivers/net/dpa/dpa-common.h
+++ b/drivers/net/dpa/dpa-common.h
@@ -44,22 +44,30 @@
 
 #define __hot
 
+#define cpu_pr_xxx(level, format, arg...) \
+	do {								\
+		int __id, __hid;					\
+		__id = raw_smp_processor_id();				\
+		__hid = get_hard_smp_processor_id(__id);		\
+		pr_##level("cpu%d/%d: " format, __hid, __id, ##arg);	\
+	} while (0)
+
 #define cpu_pr_emerg(format, arg...)	\
-	pr_emerg("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(emerg, format, ##arg)
 #define cpu_pr_alert(format, arg...)	\
-	pr_alert("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(alert, format, ##arg)
 #define cpu_pr_crit(format, arg...)	\
-	pr_crit("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(crit, format, ##arg)
 #define cpu_pr_err(format, arg...)	\
-	pr_err("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(err, format, ##arg)
 #define cpu_pr_warning(format, arg...)	\
-	pr_warning("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(warning, format, ##arg)
 #define cpu_pr_notice(format, arg...)	\
-	pr_notice("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(notice, format, ##arg)
 #define cpu_pr_info(format, arg...)	\
-	pr_info("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(info, format, ##arg)
 #define cpu_pr_debug(format, arg...)	\
-	pr_debug("cpu%d/%d: " format, hard_smp_processor_id(), smp_processor_id(), ##arg)
+	cpu_pr_xxx(debug, format, ##arg)
 
 /* Keep these in sync with the dev_*() definitions from linux/device.h */
 #define cpu_dev_emerg(dev, format, arg...)	\
diff --git a/drivers/net/dpa/dpaa_eth.c b/drivers/net/dpa/dpaa_eth.c
index eb3c934..14d211e 100644
--- a/drivers/net/dpa/dpaa_eth.c
+++ b/drivers/net/dpa/dpaa_eth.c
@@ -53,6 +53,7 @@
 #ifdef CONFIG_PPC85xx_VT_MODE
 #include <vbi/vbi.h>
 #endif
+
 #include <linux/fsl_bman.h>
 
 #include "fsl_fman.h"
@@ -68,8 +69,8 @@
 #define DEFAULT_BUF_SIZE DPA_BP_SIZE(FSL_FMAN_PHY_MAXFRM);
 #define DPA_MAX_TX_BACKLOG	512
 
-#define DPA_BP_REFILL (1 | (smp_processor_id() << 16))
-#define DPA_BP_FINE ((smp_processor_id() << 16))
+#define DPA_BP_REFILL (1 | (raw_smp_processor_id() << 16))
+#define DPA_BP_FINE ((raw_smp_processor_id() << 16))
 #define DPA_BP_REFILL_NEEDED 1
 
 /*
@@ -113,16 +114,16 @@ static const char rtx[][3] = {
 	[TX] = "TX"
 };
 
-#ifdef CONFIG_PPC85xx_VT_MODE
+#ifdef	CONFIG_PPC85xx_VT_MODE
 static u64 guest_dma_offset;
 
-#define dpa_bus_to_virt(addr)  \
-       __va(addr - guest_dma_offset)
+#define dpa_bus_to_virt(addr) 	\
+	__va(addr - guest_dma_offset)
 #else
-#define dpa_bus_to_virt(addr)   \
-       bus_to_virt(addr)
+#define	dpa_bus_to_virt(addr)	\
+	bus_to_virt(addr)
 #endif
- 
+
 static const char dpa_oh_compatibles[][24] __devinitconst = {
 	/* The dpa-ethernet node owns the OH port and must initialize it */
 	[OH_INIT] = "fsl,fman-port-oh",
@@ -198,7 +199,7 @@ static void dpa_bp_add_8(struct dpa_bp *dpa_bp)
 	int err;
 	unsigned int *count_ptr;
 
-	count_ptr = per_cpu_ptr(dpa_bp->percpu_count, smp_processor_id());
+	count_ptr = per_cpu_ptr(dpa_bp->percpu_count, raw_smp_processor_id());
 
 	for (i = 0; i < 8; i++) {
 		skb = dev_alloc_skb(dpa_bp->skb_size);
@@ -240,7 +241,7 @@ static void dpa_make_private_pool(struct dpa_bp *dpa_bp)
 		int *countptr;
 		int j;
 		thiscount = per_cpu_ptr(dpa_bp->percpu_count,
-				smp_processor_id());
+				raw_smp_processor_id());
 		countptr = per_cpu_ptr(dpa_bp->percpu_count, i);
 
 		for (j = 0; j < dpa_bp->count; j += 8)
@@ -668,7 +669,7 @@ static int dpa_process_one(struct dpa_percpu_priv_s *percpu_priv,
 {
 	int *countptr;
 
-	countptr = per_cpu_ptr(bp->percpu_count, smp_processor_id());
+	countptr = per_cpu_ptr(bp->percpu_count, raw_smp_processor_id());
 
 	(*countptr)--;
 
@@ -788,7 +789,7 @@ static void __hot _dpa_rx(struct net_device *net_dev,
 	return;
 
 drop_large_frame:
-	countptr = per_cpu_ptr(dpa_bp->percpu_count, smp_processor_id());
+	countptr = per_cpu_ptr(dpa_bp->percpu_count, raw_smp_processor_id());
 	(*countptr)++;
 	skb_recycle(skb);
 _return_dpa_fd_release:
@@ -836,7 +837,7 @@ static int dpaa_eth_poll(struct napi_struct *napi, int budget)
 	percpu_priv = container_of(napi, struct dpa_percpu_priv_s, napi);
 
 	countptr = per_cpu_ptr(percpu_priv->dpa_bp->percpu_count,
-				smp_processor_id());
+				raw_smp_processor_id());
 
 	if (*countptr < DEFAULT_COUNT / 4) {
 		int i;
@@ -1020,7 +1021,7 @@ static int __hot dpa_shared_tx(struct sk_buff *skb, struct net_device *net_dev)
 	void *dpa_bp_vaddr;
 
 	priv = netdev_priv(net_dev);
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 	dev = net_dev->dev.parent;
 
 	memset(&fd, 0, sizeof(fd));
@@ -1093,7 +1094,7 @@ static int __hot dpa_tx(struct sk_buff *skb, struct net_device *net_dev)
 	int err;
 
 	priv = netdev_priv(net_dev);
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 	dev = net_dev->dev.parent;
 
 	memset(&fd, 0, sizeof(fd));
@@ -1122,7 +1123,7 @@ static int __hot dpa_tx(struct sk_buff *skb, struct net_device *net_dev)
 
 	dpa_bp = priv->dpa_bp;
 
-	countptr = per_cpu_ptr(dpa_bp->percpu_count, smp_processor_id());
+	countptr = per_cpu_ptr(dpa_bp->percpu_count, raw_smp_processor_id());
 
 	/* Enable L3/L4 hardware checksum computation.
 	 *
@@ -1195,7 +1196,7 @@ ingress_rx_error_dqrr(struct qman_portal		*portal,
 	net_dev = ((struct dpa_fq *)fq)->net_dev;
 	priv = netdev_priv(net_dev);
 
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	if (dpaa_eth_napi_schedule(percpu_priv))
 		return qman_cb_dqrr_stop;
@@ -1221,7 +1222,7 @@ shared_rx_dqrr(struct qman_portal *portal, struct qman_fq *fq,
 	net_dev = ((struct dpa_fq *)fq)->net_dev;
 	priv = netdev_priv(net_dev);
 
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	if (unlikely(fd->status & FM_FD_STAT_ERRORS) != 0) {
 		if (netif_msg_hw(priv) && net_ratelimit())
@@ -1307,7 +1308,7 @@ ingress_rx_default_dqrr(struct qman_portal		*portal,
 	net_dev = ((struct dpa_fq *)fq)->net_dev;
 	priv = netdev_priv(net_dev);
 
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	if (unlikely(dpaa_eth_napi_schedule(percpu_priv))) {
 		percpu_priv->in_interrupt++;
@@ -1333,7 +1334,7 @@ ingress_tx_error_dqrr(struct qman_portal		*portal,
 	net_dev = ((struct dpa_fq *)fq)->net_dev;
 	priv = netdev_priv(net_dev);
 
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	if (dpaa_eth_napi_schedule(percpu_priv))
 		return qman_cb_dqrr_stop;
@@ -1355,7 +1356,7 @@ ingress_tx_default_dqrr(struct qman_portal		*portal,
 	net_dev = ((struct dpa_fq *)fq)->net_dev;
 	priv = netdev_priv(net_dev);
 
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	percpu_priv->tx_confirm++;
 
@@ -1379,7 +1380,7 @@ static void shared_ern(struct qman_portal	*portal,
 
 	net_dev = dpa_fq->net_dev;
 	priv = netdev_priv(net_dev);
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	err = dpa_fd_release(net_dev, &msg->ern.fd);
 	if (unlikely(err < 0)) {
@@ -1406,7 +1407,7 @@ static void egress_ern(struct qman_portal	*portal,
 	net_dev = ((struct dpa_fq *)fq)->net_dev;
 	priv = netdev_priv(net_dev);
 	bp = priv->dpa_bp;
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	skbh = (struct sk_buff **)bus_to_virt(addr);
 	skb = *skbh;
@@ -1528,7 +1529,7 @@ static void __cold dpa_timeout(struct net_device *net_dev)
 	struct dpa_percpu_priv_s *percpu_priv;
 
 	priv = netdev_priv(net_dev);
-	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
+	percpu_priv = per_cpu_ptr(priv->percpu_priv, raw_smp_processor_id());
 
 	if (netif_msg_timer(priv))
 		cpu_netdev_crit(net_dev, "Transmit timeout latency: %lu ms\n",
@@ -1824,7 +1825,7 @@ static const struct file_operations dpa_debugfs_fops = {
 
 static u16 dpa_select_queue(struct net_device *net_dev, struct sk_buff *skb)
 {
-	return smp_processor_id();
+	return raw_smp_processor_id();
 }
 
 static const struct net_device_ops dpa_private_ops = {
@@ -2826,9 +2827,10 @@ static int __init __cold dpa_load(void)
 		goto _return;
 	}
 #endif
+
 #ifdef	CONFIG_PPC85xx_VT_MODE
 	vbi_get_guest_dma_addr((void *)virt_to_phys((void *)PAGE_OFFSET),
-		&guest_dma_offset);
+			&guest_dma_offset);
 #endif
 	_errno = of_register_platform_driver(&dpa_driver);
 	if (unlikely(_errno < 0)) {
-- 
1.6.5.2

