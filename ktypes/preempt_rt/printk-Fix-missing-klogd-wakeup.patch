From 81f709cd52a853dbe89efdc3154bc716cae46958 Mon Sep 17 00:00:00 2001
From: Thomas Gleixner <tglx@linutronix.de>
Date: Fri, 3 Sep 2010 00:07:14 -0700
Subject: [PATCH 01/27] printk: Fix missing klogd wakeup

(cherry picked from tip commit ea17fed8d36978aa00f844949a1d820dfe58b992)

The RT check for !in_atomic() && !irqs_disabled()) to prevent the
klogd wakeup is actually bogus as wake_up_klogd() is just setting the
needs print flag which is then evaluated from printk_tick() which does
the actual wakeup.

Reported-by: Nikita V. Youshchenko <yoush@cs.msu.su>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 kernel/printk.c |    9 ---------
 1 files changed, 0 insertions(+), 9 deletions(-)

diff --git a/kernel/printk.c b/kernel/printk.c
index 1b37d3c..f741fe8 100644
--- a/kernel/printk.c
+++ b/kernel/printk.c
@@ -1164,15 +1164,6 @@ void release_console_mutex(void)
 	raw_spin_unlock_irqrestore(&logbuf_lock, flags);
 	mutex_unlock(&console_mutex);
 
-	/*
-	 * On PREEMPT_RT kernels __wake_up may sleep, so wake syslogd
-	 * up only if we are in a preemptible section. We normally dont
-	 * printk from non-preemptible sections so this is for the emergency
-	 * case only.
-	 */
-#ifdef CONFIG_PREEMPT_RT
-	if (!in_atomic() && !irqs_disabled())
-#endif
 	if (wake_klogd)
 		wake_up_klogd();
 }
-- 
1.6.5.2

