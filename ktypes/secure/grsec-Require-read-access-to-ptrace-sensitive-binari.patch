From 2b4e0f1fd939f13f87149c8fcacf74da398c0662 Mon Sep 17 00:00:00 2001
From: Jianchuan Wang <jianchuan.wang@windriver.com>
Date: Mon, 7 Mar 2016 15:46:29 +0800
Subject: [PATCH 3/8] grsec: Require read access to ptrace sensitive binaries

The origin patch is from
deb.digdeo.fr/grsecurity-archives/kernel-4.1/grsecurity-3.1-4.1.7-201509201149.patch

unprivileged users will not be able to ptrace unreadable binaries. It is useful
in environments that remove the read bits (e.g. file mode 4711) from suid binaries
to prevent infoleaking of their contents.

Signed-off-by: Jianchuan Wang <jianchuan.wang@windriver.com>
---
 fs/exec.c          |    9 ++++++++-
 grsecurity/Kconfig |   14 ++++++++++++++
 2 files changed, 22 insertions(+), 1 deletions(-)

diff --git a/fs/exec.c b/fs/exec.c
index 1977c2a..45b91efe 100644
--- a/fs/exec.c
+++ b/fs/exec.c
@@ -66,6 +66,8 @@
 
 #include <trace/events/sched.h>
 
+#include <linux/grsecurity.h>
+
 int suid_dumpable = 0;
 
 static LIST_HEAD(formats);
@@ -1525,7 +1527,12 @@ static int do_execveat_common(int fd, struct filename *filename,
 	retval = PTR_ERR(file);
 	if (IS_ERR(file))
 		goto out_unmark;
-
+#ifdef CONFIG_GRKERNSEC_PTRACE_READEXEC
+	if (gr_ptrace_readexec(file, bprm->unsafe)) {
+		retval = -EPERM;
+		goto out_unmark;
+	}
+#endif
 	sched_exec();
 
 	bprm->file = file;
diff --git a/grsecurity/Kconfig b/grsecurity/Kconfig
index 7986e84..094f205 100644
--- a/grsecurity/Kconfig
+++ b/grsecurity/Kconfig
@@ -21,4 +21,18 @@ config GRKERNSEC_HARDEN_PTRACE
 	  option is enabled, a sysctl option with name "harden_ptrace" is
 	  created.
 
+config GRKERNSEC_PTRACE_READEXEC
+	bool "Require read access to ptrace sensitive binaries"
+	default y if GRKERNSEC_ALL
+	help
+	  If you say Y here, unprivileged users will not be able to ptrace unreadable
+	  binaries.  This option is useful in environments that
+	  remove the read bits (e.g. file mode 4711) from suid binaries to
+	  prevent infoleaking of their contents.  This option adds
+	  consistency to the use of that file mode, as the binary could normally
+	  be read out when run without privileges while ptracing.
+
+	  If the sysctl option is enabled, a sysctl option with name "ptrace_readexec"
+	  is created.
+
 endmenu
-- 
1.7.5.4

