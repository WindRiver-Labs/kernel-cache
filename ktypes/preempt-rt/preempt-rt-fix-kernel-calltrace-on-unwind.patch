From 1559ef5d23a1cb465675febf413157e76b93f439 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Thu, 20 Feb 2014 12:51:47 +0800
Subject: [PATCH] preempt-rt: fix kernel calltrace on unwind

RT source: https://www.kernel.org/pub/linux/kernel/projects/rt/3.10/incr/patch-3.10.32-rt30-rt31.patch.gz

CPU: 3 PID: 146 Comm: irq/75-ci_hdrc_ Not tainted 3.10.19-rt11-WR6.0.0.0_preempt-rt #2
[<80017774>] (unwind_backtrace+0x0/0x100) from [<800133d4>] (show_stack+0x20/0x24)
[<800133d4>] (show_stack+0x20/0x24) from [<807adca0>] (dump_stack+0x24/0x28)
[<807adca0>] (dump_stack+0x24/0x28) from [<8006142c>] (__might_sleep+0x12c/0x188)
[<8006142c>] (__might_sleep+0x12c/0x188) from [<807b2dbc>] (rt_spin_lock+0x34/0x68)
[<807b2dbc>] (rt_spin_lock+0x34/0x68) from [<80017580>] (unwind_frame+0x2d4/0x4c8)
[<80017580>] (unwind_frame+0x2d4/0x4c8) from [<80012e78>] (walk_stackframe+0x34/0x40)
[<80012e78>] (walk_stackframe+0x34/0x40) from [<80012f20>] (save_stack_trace_tsk+0x9c/0xa0)
[<80012f20>] (save_stack_trace_tsk+0x9c/0xa0) from [<80012f50>] (save_stack_trace+0x2c/0x30)
[<80012f50>] (save_stack_trace+0x2c/0x30) from [<80084a24>] (__lock_acquire.isra.24+0x56c/0xc80)
[<80084a24>] (__lock_acquire.isra.24+0x56c/0xc80) from [<80085970>] (lock_acquire+0xa8/0x158)
[<80085970>] (lock_acquire+0xa8/0x158) from [<807b37a4>] (_raw_spin_lock+0x4c/0x5c)
[<807b37a4>] (_raw_spin_lock+0x4c/0x5c) from [<807b267c>] (rt_spin_lock_slowlock+0x40/0x294)
[<807b267c>] (rt_spin_lock_slowlock+0x40/0x294) from [<807b2dc4>] (rt_spin_lock+0x3c/0x68)
[<807b2dc4>] (rt_spin_lock+0x3c/0x68) from [<805e3e4c>] (skb_queue_tail+0x2c/0x5c)
[<805e3e4c>] (skb_queue_tail+0x2c/0x5c) from [<7f04c294>] (rx_complete+0x218/0x230 [g_ether])
[<7f04c294>] (rx_complete+0x218/0x230 [g_ether]) from [<804a3a78>] (udc_irq+0x4b8/0xd5c)
[<804a3a78>] (udc_irq+0x4b8/0xd5c) from [<804a0590>] (ci_irq+0xb4/0x178)
[<804a0590>] (ci_irq+0xb4/0x178) from [<800ae300>] (irq_forced_thread_fn+0x30/0x74)
[<800ae300>] (irq_forced_thread_fn+0x30/0x74) from [<800ae650>] (irq_thread+0x16c/0x1c8)
[<800ae650>] (irq_thread+0x16c/0x1c8) from [<800542bc>] (kthread+0xb4/0xb8)
[<800542bc>] (kthread+0xb4/0xb8) from [<8000e7a8>] (ret_from_fork+0x14/0x20)

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/kernel/unwind.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/arch/arm/kernel/unwind.c b/arch/arm/kernel/unwind.c
index 00df012..bbafc67 100644
--- a/arch/arm/kernel/unwind.c
+++ b/arch/arm/kernel/unwind.c
@@ -87,7 +87,7 @@ extern const struct unwind_idx __start_unwind_idx[];
 static const struct unwind_idx *__origin_unwind_idx;
 extern const struct unwind_idx __stop_unwind_idx[];
 
-static DEFINE_SPINLOCK(unwind_lock);
+static DEFINE_RAW_SPINLOCK(unwind_lock);
 static LIST_HEAD(unwind_tables);
 
 /* Convert a prel31 symbol to an absolute address */
@@ -195,7 +195,7 @@ static const struct unwind_idx *unwind_find_idx(unsigned long addr)
 		/* module unwind tables */
 		struct unwind_table *table;
 
-		spin_lock_irqsave(&unwind_lock, flags);
+		raw_spin_lock_irqsave(&unwind_lock, flags);
 		list_for_each_entry(table, &unwind_tables, list) {
 			if (addr >= table->begin_addr &&
 			    addr < table->end_addr) {
@@ -207,7 +207,7 @@ static const struct unwind_idx *unwind_find_idx(unsigned long addr)
 				break;
 			}
 		}
-		spin_unlock_irqrestore(&unwind_lock, flags);
+		raw_spin_unlock_irqrestore(&unwind_lock, flags);
 	}
 
 	pr_debug("%s: idx = %p\n", __func__, idx);
@@ -469,9 +469,9 @@ struct unwind_table *unwind_table_add(unsigned long start, unsigned long size,
 	tab->begin_addr = text_addr;
 	tab->end_addr = text_addr + text_size;
 
-	spin_lock_irqsave(&unwind_lock, flags);
+	raw_spin_lock_irqsave(&unwind_lock, flags);
 	list_add_tail(&tab->list, &unwind_tables);
-	spin_unlock_irqrestore(&unwind_lock, flags);
+	raw_spin_unlock_irqrestore(&unwind_lock, flags);
 
 	return tab;
 }
@@ -483,9 +483,9 @@ void unwind_table_del(struct unwind_table *tab)
 	if (!tab)
 		return;
 
-	spin_lock_irqsave(&unwind_lock, flags);
+	raw_spin_lock_irqsave(&unwind_lock, flags);
 	list_del(&tab->list);
-	spin_unlock_irqrestore(&unwind_lock, flags);
+	raw_spin_unlock_irqrestore(&unwind_lock, flags);
 
 	kfree(tab);
 }
-- 
1.7.5.4

