From 2c390dd56c8616edfb399bc0ad69247cee296134 Mon Sep 17 00:00:00 2001
From: "yadi.hu@windriver.com" <yadi.hu@windriver.com>
Date: Tue, 29 Mar 2016 09:23:14 +0800
Subject: [PATCH 2/2] tty/pty: add lockdep annotations

With enabled deadlock detection the following warning occurs when
connected via ssh With "while :; do dmesg -c; done" the problem was fast
reproduceable.System: Kernel with RT-patch applied:

[ INFO: possible recursive locking detected ]
3.10.62-ltsi-rt55-WR6.0.0.26_preempt-rt #3 Not tainted
---------------------------------------------
sshd/1871 is trying to acquire lock:
(&ldata->output_lock){+.+...}, at: [<ffffffff814409e3>] process_echoes+0x53/0x2f0
but task is already holding lock:
(&ldata->output_lock){+.+...}, at: [<ffffffff8144125d>] n_tty_write+0x36d/0x490
other info that might help us debug this:
   Possible unsafe locking scenario:

   CPU0
   ----
   lock(&ldata->output_lock);
   lock(&ldata->output_lock);

 Call Trace:
  [<ffffffff8192c30b>] dump_stack+0x19/0x1b
  [<ffffffff810a275e>] __lock_acquire+0x15ee/0x1e70
  [<ffffffff81931d40>] ? rt_mutex_slowlock+0x160/0x230
  [<ffffffff810a386a>] lock_acquire+0x9a/0x170
  [<ffffffff814409e3>] ? process_echoes+0x53/0x2f0
  [<ffffffff81932661>] _mutex_lock+0x31/0x40
  [<ffffffff814409e3>] ? process_echoes+0x53/0x2f0
  [<ffffffff814409e3>] process_echoes+0x53/0x2f0
  [<ffffffff819328d7>] ? _mutex_unlock+0x27/0x30
  [<ffffffff814439f9>] n_tty_receive_buf+0x1259/0x1550
  [<ffffffff81931a62>] ? rt_spin_lock_slowlock+0x2d2/0x320
  [<ffffffff81931b32>] ? rt_spin_lock_slowunlock+0x12/0x20
  [<ffffffff810778ed>] ? get_parent_ip+0xd/0x50
  [<ffffffff81044386>] ? unpin_current_cpu+0x16/0x70
  [<ffffffff81446d42>] flush_to_ldisc+0x112/0x160
  [<ffffffff81446dd7>] tty_flip_buffer_push+0x47/0x50
  [<ffffffff8144864d>] pty_write+0x5d/0x70
  [<ffffffff8144126c>] n_tty_write+0x37c/0x490

this issue just affects kernel 3.10-rt i.e, WRlinux6. The warning doesn't happen
in mainline and even disapper since 3.12-rt, because input is handled by an autonomous
worker (iow, tty_flip_buffer_push() doesn't execute flush_to_ldisc() directly).

looking at tty code, the first lock belongs to master pty, and the second is slave's.
so,a lockdep annotation is needed to fix this warning.

Signed-off-by: Hu <yadi.hu@windriver.com>
---
 drivers/tty/n_tty.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/drivers/tty/n_tty.c b/drivers/tty/n_tty.c
index 6cfe401..a0d0639 100644
--- a/drivers/tty/n_tty.c
+++ b/drivers/tty/n_tty.c
@@ -1630,6 +1630,12 @@ static int n_tty_open(struct tty_struct *tty)
 	ldata->overrun_time = jiffies;
 	mutex_init(&ldata->atomic_read_lock);
 	mutex_init(&ldata->output_lock);
+#ifdef CONFIG_PREEMPT_RT_FULL 
+	/* slave pty locks to it's own subclass */
+	if (tty->driver->type == TTY_DRIVER_TYPE_PTY && tty->driver->subtype == PTY_TYPE_SLAVE) 
+		lockdep_set_subclass(&ldata->output_lock, 1);
+
+#endif		
 	mutex_init(&ldata->echo_lock);
 	raw_spin_lock_init(&ldata->read_lock);
 
-- 
1.7.5.4

