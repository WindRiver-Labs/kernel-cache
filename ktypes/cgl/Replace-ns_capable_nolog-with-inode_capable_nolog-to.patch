From 3066f9c56bb37c759f307d209e655bd0c3657960 Mon Sep 17 00:00:00 2001
From: Yue Tao <Yue.Tao@windriver.com>
Date: Thu, 29 Dec 2016 13:01:34 +0800
Subject: [PATCH] Replace ns_capable_nolog with inode_capable_nolog to follow
 the change of upstream commit 1a48e2ac

Signed-off-by: Yue Tao <Yue.Tao@windriver.com>
---
 fs/namei.c                 |    4 ++--
 include/linux/capability.h |    1 +
 kernel/capability.c        |    7 +++++++
 3 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/fs/namei.c b/fs/namei.c
index 3866796..e680205 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -283,7 +283,7 @@ int generic_permission(struct inode *inode, int mask)
 	if (S_ISDIR(inode->i_mode)) {
 		/* DACs are overridable for directories */
 		if (!(mask & MAY_WRITE))
-			if (ns_capable_nolog(inode_userns(inode), CAP_DAC_OVERRIDE) ||
+			if (inode_capable_nolog(inode, CAP_DAC_OVERRIDE) ||
 			    inode_capable(inode, CAP_DAC_READ_SEARCH))
 				return 0;
 		if (inode_capable(inode, CAP_DAC_OVERRIDE))
@@ -295,7 +295,7 @@ int generic_permission(struct inode *inode, int mask)
 	 */
 	mask &= MAY_READ | MAY_WRITE | MAY_EXEC;
 	if (mask == MAY_READ)
-		if (ns_capable_nolog(inode_userns(inode), CAP_DAC_OVERRIDE) ||
+		if (inode_capable_nolog(inode, CAP_DAC_OVERRIDE) ||
 		    inode_capable(inode, CAP_DAC_READ_SEARCH))
 			return 0;
 
diff --git a/include/linux/capability.h b/include/linux/capability.h
index 4820fb3..7c738f3 100644
--- a/include/linux/capability.h
+++ b/include/linux/capability.h
@@ -552,6 +552,7 @@ extern bool nsown_capable(int cap);
 extern bool capable_nolog(int cap);
 extern bool ns_capable_nolog(struct user_namespace *ns, int cap);
 extern bool inode_capable(const struct inode *inode, int cap);
+extern bool inode_capable_nolog(const struct inode *inode, int cap);
 
 /* audit system wants to get cap info from files as well */
 extern int get_vfs_caps_from_disk(const struct dentry *dentry, struct cpu_vfs_cap_data *cpu_caps);
diff --git a/kernel/capability.c b/kernel/capability.c
index 06c94a1..4db7f5e 100644
--- a/kernel/capability.c
+++ b/kernel/capability.c
@@ -463,3 +463,10 @@ bool inode_capable(const struct inode *inode, int cap)
 
 	return ns_capable(ns, cap) && (ns == &init_user_ns);
 }
+
+bool inode_capable_nolog(const struct inode *inode, int cap)
+{
+	struct user_namespace *ns = current_user_ns();
+
+	return ns_capable_nolog(ns, cap) && (ns == &init_user_ns);
+}
-- 
1.7.5.4

