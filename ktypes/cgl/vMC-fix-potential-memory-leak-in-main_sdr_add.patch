From 77e0b438e42bef4876738db1f2e3d2a651d25a55 Mon Sep 17 00:00:00 2001
From: Yong Zhang <yong.zhang@windriver.com>
Date: Fri, 24 Feb 2012 10:14:09 +0800
Subject: [PATCH] vMC: fix potential memory leak in main_sdr_add()

According to the call trace:
vmc_write()
  exec_emu_command()
    ipmi_emu_cmd()
      main_sdr_add()
        vMC_alloc_sdr_record()       [1]
        ipmi_mc_add_main_sdr()       [2]

If at [2], ipmi_mc_add_main_sdr() returns with VMC_INVALID_RECORD_TYPE,
there is no way to release the 'sdr' allocated in [1].

Fix it by checking the return value of ipmi_mc_add_main_sdr().

Signed-off-by: Yong Zhang <yong.zhang@windriver.com>
---
 drivers/char/ipmi/vmc_cmd.c |   11 ++++++++++-
 1 files changed, 10 insertions(+), 1 deletions(-)

diff --git a/drivers/char/ipmi/vmc_cmd.c b/drivers/char/ipmi/vmc_cmd.c
index fae9320..5a07e91 100644
--- a/drivers/char/ipmi/vmc_cmd.c
+++ b/drivers/char/ipmi/vmc_cmd.c
@@ -168,7 +168,16 @@ static int main_sdr_add(lmc_data_t *mc, unsigned char ipmb, char **toks)
 		}
 	}
 
-	return ipmi_mc_add_main_sdr(sdr);
+	rv = ipmi_mc_add_main_sdr(sdr);
+
+	/*
+	 * if ipmi_mc_add_main_sdr() didn't succeed, we need to
+	 * free up the memory allocated for the record
+	 */
+	if (rv != VMC_NO_ERROR)
+		vmc_kfree(sdr);
+
+	return rv;
 }
 
 static int
-- 
1.7.0.4

