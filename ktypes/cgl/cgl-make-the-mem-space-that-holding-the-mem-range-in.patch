From 024c2e00d625edd5febbd7f3917f80656f3fd2cd Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Thu, 22 Nov 2012 14:08:06 +0800
Subject: [PATCH] cgl: make the mem space that holding the mem range info PAGE_SIZE aligned

Commit "release the page holding the mem range info last" release
those pages holding the mem range info to align PAX principle.
While that mem space is not always page aligned thus may share a page
with others that should not been released. Make this mem space PAGE_SIZE
align to avoid it.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 kernel/early_res.c |    8 ++++++--
 1 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/kernel/early_res.c b/kernel/early_res.c
index b11958a..6685aa7 100644
--- a/kernel/early_res.c
+++ b/kernel/early_res.c
@@ -400,7 +400,7 @@ int __init get_free_all_memory_range(struct range **rangep, int nodeid)
 {
 	int i, count;
 	u64 start = 0, end;
-	u64 size;
+	u64 size, align;
 	u64 mem;
 	struct range *range;
 	int nr_range;
@@ -418,7 +418,11 @@ int __init get_free_all_memory_range(struct range **rangep, int nodeid)
 	if (end > (MAX_DMA32_PFN << PAGE_SHIFT))
 		start = MAX_DMA32_PFN << PAGE_SHIFT;
 #endif
-	mem = find_fw_memmap_area(start, end, size, sizeof(struct range));
+	align = sizeof(struct range) > PAGE_SIZE ?
+		sizeof(struct range) : PAGE_SIZE;
+
+	size = round_up(size, PAGE_SIZE);
+	mem = find_fw_memmap_area(start, end, size, align);
 	if (mem == -1ULL)
 		panic("can not find more space for range free");
 
-- 
1.7.0

