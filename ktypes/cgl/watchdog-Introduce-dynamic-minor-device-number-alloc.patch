From 5c8ef7415cb0b6412770a3946d579fe5e3154390 Mon Sep 17 00:00:00 2001
From: Yong Zhang <yong.zhang@windriver.com>
Date: Wed, 21 Apr 2010 00:38:08 -0700
Subject: [PATCH] watchdog: Introduce dynamic minor device number allocation

Enables software watchdog minor number to be allocated dynamically.
This can be applied with the kernel parameter softdog.dynamic_dev (0|1).
By default, kernel take the traditional action(softdog.dynamic_dev=0).

Signed-off-by: Liming Wang <liming.wang@windriver.com>
Integrated-by: Yong Zhang <yong.zhang@windriver.com>
---
 drivers/watchdog/Kconfig   |    8 ++++++++
 drivers/watchdog/softdog.c |   29 +++++++++++++++++++++++++++++
 2 files changed, 37 insertions(+), 0 deletions(-)

diff --git a/drivers/watchdog/Kconfig b/drivers/watchdog/Kconfig
index 0e8468f..37b1ffb 100644
--- a/drivers/watchdog/Kconfig
+++ b/drivers/watchdog/Kconfig
@@ -69,6 +69,14 @@ config WM8350_WATCHDOG
 	  Support for the watchdog in the WM8350 AudioPlus PMIC.  When
 	  the watchdog triggers the system will be reset.
 
+config SOFT_WATCHDOG_DYNDEV
+	bool "Software watchdog dynamic minor device number"
+	depends on SOFT_WATCHDOG
+	help
+	  Enables software watchdog minor number to be allocated
+	  dynamically. This is enables with the kenrel parameter
+	  dynamic_dev (0|1).
+
 # ALPHA Architecture
 
 # ARM Architecture
diff --git a/drivers/watchdog/softdog.c b/drivers/watchdog/softdog.c
index 833f49f..c72ffac 100644
--- a/drivers/watchdog/softdog.c
+++ b/drivers/watchdog/softdog.c
@@ -75,6 +75,13 @@ MODULE_PARM_DESC(soft_noboot,
 	"Softdog action, set to 1 to ignore reboots, 0 to reboot "
 					"(default depends on ONLY_TESTING)");
 
+#ifdef CONFIG_SOFT_WATCHDOG_DYNDEV
+static bool dynamic_dev;
+
+module_param(dynamic_dev, bool, 0);
+MODULE_PARM_DESC(dynamic_dev, "Watchdog minor number is allocated dynamically");
+#endif
+
 /*
  *	Our timer
  */
@@ -262,6 +269,14 @@ static struct miscdevice softdog_miscdev = {
 	.fops		= &softdog_fops,
 };
 
+#ifdef CONFIG_SOFT_WATCHDOG_DYNDEV
+static struct miscdevice softdog_dynamic_miscdev = {
+	.minor		= MISC_DYNAMIC_MINOR,
+	.name		= "softdog",
+	.fops		= &softdog_fops,
+};
+#endif
+
 static struct notifier_block softdog_notifier = {
 	.notifier_call	= softdog_notify_sys,
 };
@@ -289,7 +304,14 @@ static int __init watchdog_init(void)
 		return ret;
 	}
 
+#ifdef CONFIG_SOFT_WATCHDOG_DYNDEV
+	if (dynamic_dev)
+		ret = misc_register(&softdog_dynamic_miscdev);
+	else
+		ret = misc_register(&softdog_miscdev);
+#else
 	ret = misc_register(&softdog_miscdev);
+#endif
 	if (ret) {
 		printk(KERN_ERR PFX
 			"cannot register miscdev on minor=%d (err=%d)\n",
@@ -305,7 +327,14 @@ static int __init watchdog_init(void)
 
 static void __exit watchdog_exit(void)
 {
+#ifdef CONFIG_SOFT_WATCHDOG_DYNDEV
+	if (dynamic_dev)
+		misc_deregister(&softdog_dynamic_miscdev);
+	else
+		misc_deregister(&softdog_miscdev);
+#else
 	misc_deregister(&softdog_miscdev);
+#endif
 	unregister_reboot_notifier(&softdog_notifier);
 }
 
-- 
1.6.5.2

