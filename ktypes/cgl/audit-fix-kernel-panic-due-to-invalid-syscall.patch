From 345fc14127175fd6de70ae7d6b73a5501a29b0d7 Mon Sep 17 00:00:00 2001
From: Lans Zhang <jia.zhang@windriver.com>
Date: Tue, 24 Aug 2010 10:42:10 +0800
Subject: [PATCH] audit: fix kernel panic due to invalid syscall

A program making a syscall with an invalid syscall number can cause kernel
panic. The audit code uses a hash table with syscall number used to index
hash table, but it only handles up to 2048 entries. Therefore, with a large
syscall number, an invalid bucket in the hash table is accessed, and the kernel
panics or sometimes just hangs(which is worse). To fix the problem, just add
the range check for syscall number.

Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
---
 kernel/auditsc.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/kernel/auditsc.c b/kernel/auditsc.c
index 3828ad5..6d6ed04 100644
--- a/kernel/auditsc.c
+++ b/kernel/auditsc.c
@@ -1578,6 +1578,9 @@ void audit_syscall_entry(int arch, int major,
 	struct audit_context *context = tsk->audit_context;
 	enum audit_state     state;
 
+	if (unlikely(major >= NR_syscalls || major < 0))
+		return;
+
 	if (unlikely(!context))
 		return;
 
-- 
1.6.5.2

