From be334f24ec742c2d7bc62d4dc16a642eeee44e1f Mon Sep 17 00:00:00 2001
From: Lans Zhang <jia.zhang@windriver.com>
Date: Tue, 24 Aug 2010 10:44:16 +0800
Subject: [PATCH] audit: add NR_syscalls for mips

We need a NR_syscalls macro for mips under cgl configuration, because the
check is placed at common area and other architectures all have NR_syscalls.

NR_syscalls is the number of the highest numbered syscall but
__NR_Linux_syscalls is the number of syscalls for a particular ABI.
Syscall numbers depending on the ABI start from 4000 (O32), 5000 (N64)
or 6000(N32) so the values are not the same.

Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
Signed-off-by: Ralf Baechle <ralf.baechle@windriver.com>
---
 arch/mips/include/asm/unistd.h |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/arch/mips/include/asm/unistd.h b/arch/mips/include/asm/unistd.h
index 9ce639c..8bfdf7b 100644
--- a/arch/mips/include/asm/unistd.h
+++ b/arch/mips/include/asm/unistd.h
@@ -1086,5 +1086,15 @@
  */
 #define cond_syscall(x) asm(".weak\t" #x "\n" #x "\t=\tsys_ni_syscall")
 
+#ifdef CONFIG_MIPS32_N32
+#define NR_syscalls	(__NR_N32_Linux + __NR_N32_Linux_syscalls)
+#elif defined(CONFIG_64BIT)
+#define NR_syscalls	(__NR_64_Linux  + __NR_64_Linux_syscalls)
+#elif defined(CONFIG_32BIT)
+#define NR_syscalls	(__NR_O32_Linux + __NR_O32_Linux_syscalls)
+#else
+#error Must know ABIs in use to define NR_syscalls
+#endif
+
 #endif /* __KERNEL__ */
 #endif /* _ASM_UNISTD_H */
-- 
1.7.4.4

