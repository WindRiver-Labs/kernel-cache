From 2950d8322aa78705591e8ad02e4ef93f0d113212 Mon Sep 17 00:00:00 2001
From: Yong Zhang <yong.zhang@windriver.com>
Date: Thu, 25 Mar 2010 00:59:26 -0700
Subject: [PATCH] md: get rebuild info support

Intruduce ioctl command GET_ARRAY_REBUILD_INFO which can return rebuild
status described in struct mdu_array_rebuild_info_t.
But this is only for back compatibility and it's marked as deprecated.
New users should check status /proc/mdstat instead.

Signed-off-by: Yongli he   <yongli.he@windriver.com>
Signed-off-by: MacDonald, Joe <Joe.MacDonald@windriver.com>
Signed-off-by: Yong Zhang <yong.zhang@windriver.com>
---
 drivers/md/md.c           |   64 +++++++++++++++++++++++++++++++++++++++++++++
 include/linux/raid/md_u.h |   19 +++++++++++++
 2 files changed, 83 insertions(+), 0 deletions(-)

diff --git a/drivers/md/md.c b/drivers/md/md.c
index fdc1890..f0b0d75 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -4859,6 +4859,66 @@ out:
 	return err;
 }
 
+static int __deprecated get_array_rebuild_info(mddev_t *mddev, void __user *arg)
+{
+	mdu_array_rebuild_info_t info;
+	unsigned long  dt, db;
+	sector_t rt;
+
+	memset(&info, 0, sizeof(info));
+
+	if (mddev->curr_resync > 2)
+		info.state = MDU_REBUILD_STATE_REBUILDING;
+	else if (mddev->curr_resync > 0)
+		info.state = MDU_REBUILD_STATE_DELAYED; /* delayed sync */
+
+	if (info.state != MDU_REBUILD_STATE_REBUILDING)
+		goto done;
+
+	info.resync_blocks =
+		(mddev->curr_resync - atomic_read(&mddev->recovery_active)) / 2;
+
+	info.max_blocks = mddev->dev_sectors / 2;
+
+	/* Should not happen. */
+	if (!info.max_blocks) {
+		MD_BUG();
+		return -ENOENT;
+	}
+
+	/*
+	 * dt: time from mark until now
+	 * db: blocks written from mark until now
+	 * rt: remaining time
+	 *
+	 * rt is a sector_t, so could be 32bit or 64bit.
+	 * So we divide before multiply in case it is 32bit and close
+	 * to the limit.
+	 * We scale the divisor (db) by 32 to avoid loosing precision
+	 * near the end of resync when the number of remaining sectors
+	 * is close to 'db'.
+	 * We then divide rt by 32 after multiplying by db to compensate.
+	 * The '+1' avoids division by zero if db is very small.
+	 */
+	dt = ((jiffies - mddev->resync_mark) / HZ);
+	if (!dt)
+		dt++;
+	db = ((mddev->curr_mark_cnt - atomic_read(&mddev->recovery_active))
+		- mddev->resync_mark_cnt) / 2;
+
+	rt = info.max_blocks - info.resync_blocks; /* number of remaining sectors */
+	sector_div(rt, db/32+1);
+	rt *= dt;
+	rt >>= 5;
+	info.time_remaining = rt;
+	info.speed = db / dt;
+done:
+	if (copy_to_user(arg, &info, sizeof(info)))
+		return -EFAULT;
+
+	return 0;
+}
+
 static int get_disk_info(mddev_t * mddev, void __user * arg)
 {
 	mdu_disk_info_t info;
@@ -5608,6 +5668,10 @@ static int md_ioctl(struct block_device *bdev, fmode_t mode,
 			err = get_bitmap_file(mddev, argp);
 			goto done_unlock;
 
+		case GET_ARRAY_REBUILD_INFO:
+			err = get_array_rebuild_info(mddev, argp);
+			goto done_unlock;
+
 		case GET_DISK_INFO:
 			err = get_disk_info(mddev, argp);
 			goto done_unlock;
diff --git a/include/linux/raid/md_u.h b/include/linux/raid/md_u.h
index fb1abb3..99b14d5 100644
--- a/include/linux/raid/md_u.h
+++ b/include/linux/raid/md_u.h
@@ -42,6 +42,10 @@
 #define PRINT_RAID_DEBUG	_IO (MD_MAJOR, 0x13)
 #define RAID_AUTORUN		_IO (MD_MAJOR, 0x14)
 #define GET_BITMAP_FILE		_IOR (MD_MAJOR, 0x15, mdu_bitmap_file_t)
+/* this command will be removed in the future, new user please
+ * check /proc/mdstat for rebuild info
+ */
+#define GET_ARRAY_REBUILD_INFO  _IOR (MD_MAJOR, 0x16, mdu_array_rebuild_info_t)
 
 /* configuration */
 #define CLEAR_ARRAY		_IO (MD_MAJOR, 0x20)
@@ -109,6 +113,21 @@ typedef struct mdu_array_info_s {
 
 } mdu_array_info_t;
 
+#define MDU_REBUILD_STATE_NO_REBUILD	0
+#define MDU_REBUILD_STATE_REBUILDING	1
+#define MDU_REBUILD_STATE_DELAYED	2
+typedef struct mdu_array_rebuild_info_s {
+	/*
+	 *  rebuild status of one particular array
+	 */
+	int state;
+	unsigned long resync_blocks;
+	unsigned long max_blocks;
+	unsigned long time_remaining;
+	unsigned long speed;
+
+} mdu_array_rebuild_info_t;
+
 /* non-obvious values for 'level' */
 #define	LEVEL_MULTIPATH		(-4)
 #define	LEVEL_LINEAR		(-1)
-- 
1.6.5.2

