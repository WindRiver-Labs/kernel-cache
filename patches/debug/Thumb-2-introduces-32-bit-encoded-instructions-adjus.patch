From c5d6f88ca50079b7f30080866d2d68847e48bd9d Mon Sep 17 00:00:00 2001
From: Jason Wessel <jason.wessel@windriver.com>
Date: Thu, 6 Jan 2011 12:42:36 -0600
Subject: [PATCH] Thumb 2 introduces 32 bit encoded instructions adjust ptrace accordingly

Some thumb 2 instructions are 32 bit.  The instruction decoder needs
to take this into account.  Specifically for 32 bit data move
instructions, the next PC needs to be incremented by 4 and not 2.

Also fix the warning generated by the duplicate definition for BIT_SET.

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
---
 arch/arm/kernel/ptrace.c |   12 +++++++++++-
 1 files changed, 11 insertions(+), 1 deletions(-)

diff --git a/arch/arm/kernel/ptrace.c b/arch/arm/kernel/ptrace.c
index a9004ce..0699aa2 100644
--- a/arch/arm/kernel/ptrace.c
+++ b/arch/arm/kernel/ptrace.c
@@ -44,6 +44,7 @@
 typedef unsigned int UINT32;
 typedef int INT32;
 
+#undef BIT
 #define BIT(n) ((UINT32)1U << (n))
 #define BITSET(x,n) (((UINT32)(x) & (1U<<(n))) >> (n))
 #define BITS(x,m,n) (((UINT32)((x) & (BIT(n) - BIT(m) + BIT(n)))) >> (m))
@@ -991,9 +992,18 @@ static u32 *thumbGetNpc(u16 instr,	/* the current instruction */
 				break;
 			}
 
+			pr_debug("  nextBit: %x\n", (u16)nextBit);
+
+			/* Thumb 2 32 bit instruction */
+			if (BITSET(nextBit, 15) == 0) {
+				nPc = pc + 4;
+				break;
+			}
+
 			if ((nextBit & 0xE800) != 0xE800) {
 				pr_debug("Strange BL\n");
-				/* Something strange going on */
+				/* Something strange going on assume 32 bit arm instruction */
+				nPc = pc + 4;
 				break;
 			}
 
-- 
1.6.5.2

