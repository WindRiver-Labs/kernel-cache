From f7910933a5eeb41cfc7fbff0cec0bb91a160d8af Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Tue, 13 Apr 2010 00:19:14 -0700
Subject: [PATCH 4/4] Fix ptrace.h namespace collsion with glibc.

The following constants:

PTRACE_TRACEME
PTRACE_PEEKTEXT
PTRACE_PEEKDATA
PTRACE_POKETEXT
PTRACE_POKEDATA
PTRACE_POKEUSER
PTRACE_CONT
PTRACE_KILL
PTRACE_SINGLESTEP
PTRACE_GETREGS
PTRACE_SETREGS
PTRACE_GETFPREGS
PTRACE_SETFPREGS
PTRACE_ATTACH
PTRACE_DETACH
PTRACE_GETFPXREGS
PTRACE_SETFPXREGS
PTRACE_SYSCALL
PTRACE_SETOPTIONS
PTRACE_GETEVENTMSG
PTRACE_GETSIGINFO
PTRACE_SETSIGINFO

defined in glibc.

So we need to make these invisible to user space. Because, if someone
included asm/ptrace.h before sys/ptrace.h there would be a macro
definition collision which cause a compile-time error.

So, we don't support user applications building against the kernel
headers directly, but instead our sanitized ones. And on top of that,
we only really support them building against the glibc ones.

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/arm/include/asm/ptrace.h     |    2 ++
 arch/mips/include/asm/ptrace.h    |    2 ++
 arch/x86/include/asm/ptrace-abi.h |    2 ++
 include/linux/ptrace.h            |    2 ++
 4 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/arch/arm/include/asm/ptrace.h b/arch/arm/include/asm/ptrace.h
index 9dcb11e..5114d42 100644
--- a/arch/arm/include/asm/ptrace.h
+++ b/arch/arm/include/asm/ptrace.h
@@ -12,10 +12,12 @@
 
 #include <asm/hwcap.h>
 
+#ifdef __KERNEL__
 #define PTRACE_GETREGS		12
 #define PTRACE_SETREGS		13
 #define PTRACE_GETFPREGS	14
 #define PTRACE_SETFPREGS	15
+#endif
 /* PTRACE_ATTACH is 16 */
 /* PTRACE_DETACH is 17 */
 #define PTRACE_GETWMMXREGS	18
diff --git a/arch/mips/include/asm/ptrace.h b/arch/mips/include/asm/ptrace.h
index ce47118..732007e 100644
--- a/arch/mips/include/asm/ptrace.h
+++ b/arch/mips/include/asm/ptrace.h
@@ -54,6 +54,7 @@ struct pt_regs {
 #endif
 } __attribute__ ((aligned (8)));
 
+#ifdef __KERNEL__
 /* Arbitrarily choose the same ptrace numbers as used by the Sparc code. */
 #define PTRACE_GETREGS		12
 #define PTRACE_SETREGS		13
@@ -61,6 +62,7 @@ struct pt_regs {
 #define PTRACE_SETFPREGS		15
 /* #define PTRACE_GETFPXREGS		18 */
 /* #define PTRACE_SETFPXREGS		19 */
+#endif
 
 #define PTRACE_OLDSETOPTIONS	21
 
diff --git a/arch/x86/include/asm/ptrace-abi.h b/arch/x86/include/asm/ptrace-abi.h
index 8672303..adb9c92 100644
--- a/arch/x86/include/asm/ptrace-abi.h
+++ b/arch/x86/include/asm/ptrace-abi.h
@@ -57,6 +57,7 @@
 
 #endif /* !__i386__ */
 
+#ifdef __KERNEL__
 /* Arbitrarily choose the same ptrace numbers as used by the Sparc code. */
 #define PTRACE_GETREGS            12
 #define PTRACE_SETREGS            13
@@ -64,6 +65,7 @@
 #define PTRACE_SETFPREGS          15
 #define PTRACE_GETFPXREGS         18
 #define PTRACE_SETFPXREGS         19
+#endif
 
 #define PTRACE_OLDSETOPTIONS      21
 
diff --git a/include/linux/ptrace.h b/include/linux/ptrace.h
index e1fb607..dae0e5a 100644
--- a/include/linux/ptrace.h
+++ b/include/linux/ptrace.h
@@ -3,6 +3,7 @@
 /* ptrace.h */
 /* structs and defines to help the user use the ptrace system call. */
 
+#ifdef __KERNEL__
 /* has the defines to get at the registers. */
 
 #define PTRACE_TRACEME		   0
@@ -26,6 +27,7 @@
 #define PTRACE_GETEVENTMSG	0x4201
 #define PTRACE_GETSIGINFO	0x4202
 #define PTRACE_SETSIGINFO	0x4203
+#endif
 
 /*
  * Generic ptrace interface that exports the architecture specific regsets
-- 
1.6.5.2

