From 9fdf1fe1d3f499c8b92faa4c7f96dbc61a1921d1 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Thu, 5 Apr 2012 09:34:23 -0400
Subject: [PATCH] ARM: add an extra pass for kallsyms generation

This error keeps seemingly pop up at random:

 SYSMAP  .tmp_System.map
 Inconsistent kallsyms data
 This is a bug - please report about it
 Try make KALLSYMS_EXTRA_PASS=1 as a workaround
 make[1]: *** [vmlinux] Error 1

The executive summary is that expected differences in symbol
ordering lead to differences in compression.  For full details
see this link:

	http://marc.info/?l=linux-next&m=133267456809502

Implement a temporary workaround so that build coverage is not
sporadically impacted.  This is not to be considered a final
fix worthy of upstream, but just a stop gap measure.

Not-Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 Makefile          |    2 ++
 arch/arm/Makefile |    1 +
 2 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/Makefile b/Makefile
index 9728493..fce0b4e 100644
--- a/Makefile
+++ b/Makefile
@@ -825,7 +825,9 @@ ifdef CONFIG_KALLSYMS
 #   temporary bypass to allow the kernel to be built while the
 #   maintainers work out what went wrong with kallsyms.
 
+ifndef last_kallsyms
 last_kallsyms := 2
+endif
 
 ifdef KALLSYMS_EXTRA_PASS
 ifneq ($(KALLSYMS_EXTRA_PASS),0)
diff --git a/arch/arm/Makefile b/arch/arm/Makefile
index 3427b2a..9db0fd0 100644
--- a/arch/arm/Makefile
+++ b/arch/arm/Makefile
@@ -17,6 +17,7 @@ endif
 
 OBJCOPYFLAGS	:=-O binary -R .comment -S
 GZFLAGS		:=-9
+last_kallsyms	:= 3
 #KBUILD_CFLAGS	+=-pipe
 # Explicitly specifiy 32-bit ARM ISA since toolchain default can be -mthumb:
 KBUILD_CFLAGS	+=$(call cc-option,-marm,)
-- 
1.7.5.4

