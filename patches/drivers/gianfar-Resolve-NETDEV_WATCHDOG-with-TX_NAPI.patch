From 9fe58de7b675eff582193cb5cceb9a55a1473160 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Tue, 9 Aug 2011 19:23:02 +0800
Subject: [PATCH 20/47] gianfar: Resolve NETDEV_WATCHDOG with TX_NAPI

When TX_NAPI is enabled, the gfar_poll_tx() was still using
spin_trylock_irqsave(), because of which there was a potential
case where tx queue would not have been cleaned and eventually
trigger a NETDEV_WATCHDOG.

Replace spin_trylock_irqsave() with spin_lock_irqsave().

Extracted from vendor drop QorIQ-NONDPAA-SDK-V1-20110429_ltib.iso
linux-2.6.35-qoriq-gianfar-Resolve-NETDEV_WATCHDOG-with-TX.patch.

Signed-off-by: Sandeep Gopalpet <sandeep.kumar@freescale.com>
Signed-off-by: Jiajun Wu <b06378@freescale.com>
Integrated-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/net/gianfar.c |    7 +++----
 1 files changed, 3 insertions(+), 4 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index 35942e6..a471bfc 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -3792,13 +3792,12 @@ static int gfar_poll_tx(struct napi_struct *napi, int budget)
 		mask = mask >> i;
 		if (tstat & mask) {
 			tx_queue = priv->tx_queue[i];
-			if (spin_trylock_irqsave(&tx_queue->txlock, flags)) {
-				tx_cleaned_per_queue =
+			spin_lock_irqsave(&tx_queue->txlock, flags);
+			tx_cleaned_per_queue =
 					gfar_clean_tx_ring(tx_queue,
 							budget_per_queue);
-				spin_unlock_irqrestore(&tx_queue->txlock,
+			spin_unlock_irqrestore(&tx_queue->txlock,
 							flags);
-			}
 			tx_cleaned += tx_cleaned_per_queue;
 			tx_cleaned_per_queue = 0;
 		}
-- 
1.7.0.2

