From 1bdcdc24b5af9eb868d50bcfa3b58925e4438b67 Mon Sep 17 00:00:00 2001
From: Shan Hai <shan.hai@windriver.com>
Date: Fri, 17 Jun 2016 01:15:52 -0700
Subject: [PATCH] serial/kgdboc: fix a use-after-free bug in the kgdboc driver

The following kernel crash can be observed when the kgdboc is built
as kernel module and after the below commands:
insmod kgdboc kgdboc=ttyS0,115200
rmmod kgdboc

Fix it by freeing the resources when the driver is removed from kernel.

Kernel panic - not syncing: Fatal exception in interrupt
Call Trace:
[c0797b10] [c0007ce0] show_stack+0x50/0x160 (unreliable)
[c0797b40] [c0595974] panic+0x12c/0x1a4
[c0797b90] [c000eb70] die+0x140/0x230
[c0797bc0] [c000ef30] _exception+0x150/0x270
[c0797cd0] [c0012134] ret_from_except_full+0x0/0x4c
---
 drivers/tty/serial/kgdboc.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/tty/serial/kgdboc.c b/drivers/tty/serial/kgdboc.c
index 1f11ac5..84ca8a8 100644
--- a/drivers/tty/serial/kgdboc.c
+++ b/drivers/tty/serial/kgdboc.c
@@ -235,13 +235,6 @@ static int kgdboc_rx_callback(u8 c)
 
 __setup("kgdboc=", kgdboc_option_setup);
 
-static void cleanup_kgdboc(void)
-{
-	kgdboc_unregister_kbd();
-	if (configured == 1)
-		kgdb_unregister_io_module(&kgdboc_io_ops);
-}
-
 static void release_kgdboc_tty(void)
 {
 	if (kgdb_tty_driver)
@@ -252,6 +245,14 @@ static void release_kgdboc_tty(void)
 	kgdb_tty_driver = NULL;
 }
 
+static void cleanup_kgdboc(void)
+{
+	release_kgdboc_tty();
+	kgdboc_unregister_kbd();
+	if (configured == 1)
+		kgdb_unregister_io_module(&kgdboc_io_ops);
+}
+
 static int configure_kgdboc(void)
 {
 	struct tty_driver *p;
@@ -338,7 +339,6 @@ do_register:
 	return 0;
 
 noconfig:
-	release_kgdboc_tty();
 	config[0] = 0;
 	configured = 0;
 	cleanup_kgdboc();
-- 
1.7.5.4

