From 9f589733fe28c0ba6e85087545b3f56904e49c3e Mon Sep 17 00:00:00 2001
From: Qi Hou <qi.hou@windriver.com>
Date: Tue, 24 May 2016 11:20:37 +0800
Subject: [PATCH] gpio: check if ACPI is supported by architecture

  5 menuconfig ACPI
  6         bool "ACPI (Advanced Configuration and Power Interface) Support"
  7         depends on !IA64_HP_SIM
  8         depends on IA64 || X86 || (ARM64 && EXPERT)

It's abvious that ACPI should be checked if it is supported by architecure
of ARM,the chips of axxiaarm.

Signed-off-by: Qi Hou <qi.hou@windriver.com>
---
 drivers/gpio/gpio-pca953x.c |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/drivers/gpio/gpio-pca953x.c b/drivers/gpio/gpio-pca953x.c
index 8f49bd6..134acf7 100644
--- a/drivers/gpio/gpio-pca953x.c
+++ b/drivers/gpio/gpio-pca953x.c
@@ -21,7 +21,9 @@
 #ifdef CONFIG_OF_GPIO
 #include <linux/of_platform.h>
 #endif
+#if (!defined(CONFIG_IA64_HP_SIM)) && (defined(CONFIG_IA64) || defined(CONFIG_X86) || (defined(CONFIG_ARM64) && defined(CONFIG_EXPERT)))
 #include <linux/acpi.h>
+#endif
 
 #define PCA953X_INPUT		0
 #define PCA953X_OUTPUT		1
@@ -112,11 +114,15 @@ struct pca953x_info {
 
 static void pca953x_setup_int3491(struct pca953x_chip *chip)
 {
+#if (!defined(CONFIG_IA64_HP_SIM)) && (defined(CONFIG_IA64) || defined(CONFIG_X86) || (defined(CONFIG_ARM64) && defined(CONFIG_EXPERT)))
 	struct acpi_device *adev = ACPI_COMPANION(&chip->client->dev);
+#endif
 	unsigned int uid;
 
+#if (!defined(CONFIG_IA64_HP_SIM)) && (defined(CONFIG_IA64) || defined(CONFIG_X86) || (defined(CONFIG_ARM64) && defined(CONFIG_EXPERT)))
 	if (kstrtouint(acpi_device_uid(adev), 0, &uid) || !uid--)
 		return;
+#endif
 
 	chip->gpio_start = 8 /* sch_gpio */ +
 			   8 /* gpio-dwapb */ +
@@ -128,11 +134,13 @@ static const struct pca953x_info pca953x_info_int3491 = {
 	.setup = pca953x_setup_int3491,
 };
 
+#if (!defined(CONFIG_IA64_HP_SIM)) && (defined(CONFIG_IA64) || defined(CONFIG_X86) || (defined(CONFIG_ARM64) && defined(CONFIG_EXPERT)))
 static const struct acpi_device_id pca953x_acpi_ids[] = {
 	{ "INT3491",  (kernel_ulong_t)&pca953x_info_int3491 },
 	{ }
 };
 MODULE_DEVICE_TABLE(acpi, pca953x_acpi_ids);
+#endif
 
 static inline struct pca953x_chip *to_pca(struct gpio_chip *gc)
 {
@@ -744,12 +752,16 @@ static int pca953x_probe(struct i2c_client *client,
 	if (id) {
 		chip->driver_data = id->driver_data;
 	} else {
+#if (!defined(CONFIG_IA64_HP_SIM)) && (defined(CONFIG_IA64) || defined(CONFIG_X86) || (defined(CONFIG_ARM64) && defined(CONFIG_EXPERT)))
 		const struct acpi_device_id *id;
+#endif
 		const struct pca953x_info *info;
 
+#if (!defined(CONFIG_IA64_HP_SIM)) && (defined(CONFIG_IA64) || defined(CONFIG_X86) || (defined(CONFIG_ARM64) && defined(CONFIG_EXPERT)))
 		id = acpi_match_device(pca953x_acpi_ids, &client->dev);
 		if (!id)
 			return -ENODEV;
+#endif
 
 		info = (struct pca953x_info *)id->driver_data;
 		if (!info)
@@ -852,7 +864,9 @@ static struct i2c_driver pca953x_driver = {
 	.driver = {
 		.name	= "pca953x",
 		.of_match_table = pca953x_dt_ids,
+#if (!defined(CONFIG_IA64_HP_SIM)) && (defined(CONFIG_IA64) || defined(CONFIG_X86) || (defined(CONFIG_ARM64) && defined(CONFIG_EXPERT)))
 		.acpi_match_table = ACPI_PTR(pca953x_acpi_ids),
+#endif
 	},
 	.probe		= pca953x_probe,
 	.remove		= pca953x_remove,
-- 
1.7.5.4

