From fb8d77de5fe6156e63c895a0d50cbfb6e38eae57 Mon Sep 17 00:00:00 2001
From: Shan Hai <shan.hai@windriver.com>
Date: Mon, 17 Jan 2011 10:08:57 +0800
Subject: [PATCH] fix MTU value overflow in gianfar driver

check the scope of valid MTU value after 512 boundary round up to the user
given MTU value, otherwise the NIC register could not hold the new MTU value
when user given MTU equals 9600 because of 512 boundary round up.

Signed-off-by: Shan Hai <shan.hai@windriver.com>
---
 drivers/net/gianfar.c |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index 657afc0..b17284f 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -1341,17 +1341,17 @@ static int gfar_change_mtu(struct net_device *dev, int new_mtu)
 
 	frame_size += priv->padding;
 
-	if ((frame_size < 64) || (frame_size > JUMBO_FRAME_SIZE)) {
+	tempsize =
+	    (frame_size & ~(INCREMENTAL_BUFFER_SIZE - 1)) +
+	    INCREMENTAL_BUFFER_SIZE;
+
+	if ((frame_size < 64) || (tempsize > JUMBO_FRAME_SIZE)) {
 		if (netif_msg_drv(priv))
 			printk(KERN_ERR "%s: Invalid MTU setting\n",
 					dev->name);
 		return -EINVAL;
 	}
 
-	tempsize =
-	    (frame_size & ~(INCREMENTAL_BUFFER_SIZE - 1)) +
-	    INCREMENTAL_BUFFER_SIZE;
-
 	/* Only stop and start the controller if it isn't already
 	 * stopped, and we changed something */
 	if ((oldsize != tempsize) && (dev->flags & IFF_UP))
-- 
1.7.0.4

