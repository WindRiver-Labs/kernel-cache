From 260692babfc83c19cd489a5fbbf17a86c6627abf Mon Sep 17 00:00:00 2001
From: Keith Busch <keith.busch@intel.com>
Date: Mon, 29 Jul 2013 16:20:56 -0600
Subject: [PATCH 14/72] NVMe: Bring up cdev on set feature failure

commit 7e03b124065507e72008ef294c30001eca74a031 upstream

This patch creates the character device as long as a device's admin queues
are usable so a user has an opprotunity to perform administration tasks.
A device may be in a state that does not allow IO and setting the queue
count feature in such a state returns an error. Previously the driver
would bail and the controller would be unusable.

Signed-off-by: Keith Busch <keith.busch@intel.com>
Signed-off-by: fupan li <fupan.li@windriver.com>
---
 drivers/block/nvme-core.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/block/nvme-core.c b/drivers/block/nvme-core.c
index f924413..8cfa457 100644
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@ -1664,7 +1664,7 @@ static int set_queue_count(struct nvme_dev *dev, int count)
 	status = nvme_set_features(dev, NVME_FEAT_NUM_QUEUES, q_count, 0,
 								&result);
 	if (status)
-		return -EIO;
+		return status < 0 ? -EIO : -EBUSY;
 	return min(result & 0xffff, result >> 16) + 1;
 }
 
@@ -2018,7 +2018,7 @@ static int nvme_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	spin_unlock(&dev_list_lock);
 
 	result = nvme_dev_add(dev);
-	if (result)
+	if (result && result != -EBUSY)
 		goto delete;
 
 	scnprintf(dev->name, sizeof(dev->name), "nvme%d", dev->instance);
-- 
1.7.5.4

