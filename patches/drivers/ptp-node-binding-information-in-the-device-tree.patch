From 6bf4d7468db477e16eba21e5c5373cf7c578066d Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Tue, 9 Aug 2011 19:23:25 +0800
Subject: [PATCH 43/47] ptp node binding-information in the device tree

Extracted from vendor drop QorIQ-NONDPAA-SDK-V1-20110429_ltib.iso
linux-2.6.35-qoriq-ptp-node-binding-information-in-the-dev.patch.

Signed-off-by: Bhaskar Upadhaya <Bhaskar.Upadhaya@freescale.com>
Integrated-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 Documentation/powerpc/dts-bindings/fsl/tsec.txt |   63 +++++++++++++++++++++++
 1 files changed, 63 insertions(+), 0 deletions(-)

diff --git a/Documentation/powerpc/dts-bindings/fsl/tsec.txt b/Documentation/powerpc/dts-bindings/fsl/tsec.txt
index edb7ae1..132ad37 100644
--- a/Documentation/powerpc/dts-bindings/fsl/tsec.txt
+++ b/Documentation/powerpc/dts-bindings/fsl/tsec.txt
@@ -74,3 +74,66 @@ Example:
 		interrupt-parent = <&mpic>;
 		phy-handle = <&phy0>
 	};
+
+* Gianfar PTP clock nodes
+
+General Properties:
+
+  - compatible   Should be "fsl,gianfar-ptp-timer"
+  - reg          Offset and length of the register set for the device
+  - interrupts   There should be at least two interrupts. Some devices
+                 have as many as four PTP related interrupts.
+
+Clock Properties:
+
+  - tclk-period  Timer reference clock period in nanoseconds.
+  - tmr-prsc     Prescaler, divides the output clock.
+  - tmr-add      Frequency compensation value.
+  - cksel        0= external clock, 1= eTSEC system clock, 3= RTC clock input.
+                 Currently the driver only supports choice "1".
+  - tmr-fiper1   Fixed interval period pulse generator.
+  - tmr-fiper2   Fixed interval period pulse generator.
+  - max-adj      Maximum frequency adjustment in parts per billion.
+
+  These properties set the operational parameters for the PTP
+  clock. You must choose these carefully for the clock to work right.
+  Here is how to figure good values:
+
+  TimerOsc     = system clock               MHz
+  tclk_period  = desired clock period       nanoseconds
+		 tclk_period = 10^9/NominalFreq
+  NominalFreq  = NominalFreq should be less than the Timer Oscillator frequency.
+  Nominal frequency should be a factor of 1000.
+  Eg If Timer Oscillator frequency is 400.
+    then nominal frequency can be 250 or 200.
+    If Timer Oscillator frequency is 600.
+    then nominal frequency can be 500 or 250.
+    If Timer Oscillator frequency is 333.
+    then nominal frequency can be 250 or 200.
+
+  FreqDivRatio = TimerOsc / NominalFreq     (must be greater that 1.0)
+  tmr_add      = ceil(2^32 / FreqDivRatio)
+  OutputClock  = NominalFreq / tmr_prsc     MHz
+  PulseWidth   = 1 / OutputClock            microseconds
+  FiperFreq1   = desired frequency in Hz
+  FiperDiv1    = 1000000 * OutputClock / FiperFreq1
+  tmr_fiper1   = tmr_prsc * tclk_period * FiperDiv1 - tclk_period
+  max_adj      = 1000000000 * (FreqDivRatio - 1.0) - 1
+
+  The calculation for tmr_fiper2 is the same as for tmr_fiper1. The
+  driver expects that tmr_fiper1 will be correctly set to produce a 1
+  Pulse Per Second (PPS) signal, since this will be offered to the PPS
+  subsystem to synchronize the Linux clock.
+
+Example:
+		ptp_timer: ptimer@b0e00 {
+                         compatible = "fsl,gianfar-ptp-timer";
+                         reg = <0xb0e00 0xb0>;
+                         interrupts = <12 0x8 13 0x8>;
+                         interrupt-parent = <&mpic>;
+                         tmr-prsc = <0x2>;
+                         cksel = <1>;
+                         tmr-fiper1 = <999999995>;
+                         tmr-fiper2 = <999999990>;
+                         max-adj    = <999999999>;
+                 };
-- 
1.7.0.2

