From 99b53faa4208c386420220490b7263a5b074f00a Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Wed, 9 Apr 2014 12:37:32 +0800
Subject: [PATCH 04/10] ixgbe: Use rcu_dereference_bh to deference pointer protected by rcu_read_lock_bh

A kernel with enabled lockdep complains about the wrong usage of
rcu_dereference() under a rcu_read_lock_bh() protected region:
[ 20.134164] ===================================================
[ 20.141715] [ INFO: suspicious rcu_dereference_check() usage. ]
[ 20.147755] ---------------------------------------------------
[ 20.153814] drivers/net/ixgbe/kcompat.c:1621 invoked rcu_dereference_check() without protection!
[ 20.169912]
[ 20.169912] other info that might help us debug this:
[ 20.169913]
[ 20.171366] ADDRCONF(NETDEV_UP): eth3: link is not ready
[ 20.171413] ixgbe 0000:02:00.1: eth3: NIC Link is Up 10 Gbps, Flow Control: RX/TX
[ 20.171679] ADDRCONF(NETDEV_CHANGE): eth3: link becomes ready
[ 20.197063]
[ 20.197064] rcu_scheduler_active = 1, debug_locks = 0
[ 20.203789] 2 locks held by swapper/0:
[ 20.207669] #0: (&idev->mc_ifc_timer){+.-...}, at: [<ffffffff8105c788>] run_timer_softirq+0x178/0x420
[ 20.217336] #1: (rcu_read_lock_bh){.+....}, at: [<ffffffff81448aca>] dev_queue_xmit+0x4a/0x640
[ 20.226371]
[ 20.226372] stack backtrace:
[ 20.230819] Pid: 0, comm: swapper Not tainted 2.6.34.13-WR4.3.x86_64_standard-00046-ge042840 #1
[ 20.240214] Call Trace:
[ 20.242726] <IRQ> [<ffffffff810817db>] lockdep_rcu_dereference+0xbb/0xc0
[ 20.249761] [<ffffffffa0128fab>] __kc_netdev_pick_tx+0x12b/0x160 [ixgbe]
[ 20.256749] [<ffffffff81448d0c>] dev_queue_xmit+0x28c/0x640
[ 20.262606] [<ffffffff81448aca>] ? dev_queue_xmit+0x4a/0x640
[ 20.268459] [<ffffffff8108386d>] ? trace_hardirqs_on+0xd/0x10
[ 20.274446] [<ffffffff810536a2>] ? local_bh_enable_ip+0x82/0xe0
[ 20.280571] [<ffffffff814513a7>] neigh_resolve_output+0x107/0x3a0
[ 20.286916] [<ffffffff810536a2>] ? local_bh_enable_ip+0x82/0xe0
[ 20.293049] [<ffffffff814d0c1f>] ip6_output_finish+0x9f/0xf0
[ 20.298934] [<ffffffff814d287d>] ip6_output2+0x1ad/0x2e0
[ 20.304452] [<ffffffff814d2f95>] ip6_output+0x5e5/0xcb0
...

Fix that by using rcu_dereference_bh() instead.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/net/ixgbe/kcompat.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ixgbe/kcompat.c b/drivers/net/ixgbe/kcompat.c
index 2a1b42a..30c0a3b 100644
--- a/drivers/net/ixgbe/kcompat.c
+++ b/drivers/net/ixgbe/kcompat.c
@@ -1618,7 +1618,7 @@ u16 __kc_netdev_pick_tx(struct net_device *dev, struct sk_buff *skb)
 
 	if (queue_index != new_index && sk) {
 		struct dst_entry *dst =
-			    rcu_dereference(sk->sk_dst_cache);
+			    rcu_dereference_bh(sk->sk_dst_cache);
 
 		if (dst && skb_dst(skb) == dst)
 			sk_tx_queue_set(sk, queue_index);
-- 
1.7.0

