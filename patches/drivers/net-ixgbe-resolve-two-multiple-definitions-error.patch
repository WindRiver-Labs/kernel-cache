From 072f748a2bbb000655ba6adffa70d02fb373a0f2 Mon Sep 17 00:00:00 2001
From: Hui Wang <Hui.Wang@windriver.com>
Date: Mon, 7 Mar 2011 16:01:09 +0800
Subject: [PATCH 01/14] net/ixgbe: resolve two multiple definitions error

The igb/kcompat.c and ixgbe kcompat.c have several functions with the
same name, this will generate multiple definitions error when enable
them in the kernel at the same time. So rename ixgbe function names
to avoid building errors.

Signed-off-by: Hui Wang <Hui.Wang@windriver.com>
---
 drivers/net/ixgbe/kcompat.c |    4 ++--
 drivers/net/ixgbe/kcompat.h |    8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ixgbe/kcompat.c b/drivers/net/ixgbe/kcompat.c
index e23ae6b..56cc8da 100644
--- a/drivers/net/ixgbe/kcompat.c
+++ b/drivers/net/ixgbe/kcompat.c
@@ -1061,7 +1061,7 @@ struct sk_buff *_kc_netdev_alloc_skb_ip_align(struct net_device *dev,
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(2,6,35) )
 #ifdef HAVE_TX_MQ
 #ifndef CONFIG_NETDEVICES_MULTIQUEUE
-void _kc_netif_set_real_num_tx_queues(struct net_device *dev, unsigned int txq)
+void _kc_netif_set_real_num_tx_queues_ixgbe(struct net_device *dev, unsigned int txq)
 {
 	unsigned int real_num = dev->real_num_tx_queues;
 	struct Qdisc *qdisc;
@@ -1089,7 +1089,7 @@ void _kc_netif_set_real_num_tx_queues(struct net_device *dev, unsigned int txq)
 
 /*****************************************************************************/
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(2,6,36) )
-int _kc_ethtool_op_set_flags(struct net_device *dev, u32 data, u32 supported)
+int _kc_ethtool_op_set_flags_ixgbe(struct net_device *dev, u32 data, u32 supported)
 {
 	unsigned long features = dev->features;
 
diff --git a/drivers/net/ixgbe/kcompat.h b/drivers/net/ixgbe/kcompat.h
index e954554..3b1bcef 100644
--- a/drivers/net/ixgbe/kcompat.h
+++ b/drivers/net/ixgbe/kcompat.h
@@ -2437,8 +2437,8 @@ do {								\
 #ifdef HAVE_TX_MQ
 #include <net/sch_generic.h>
 #ifndef CONFIG_NETDEVICES_MULTIQUEUE
-void _kc_netif_set_real_num_tx_queues(struct net_device *, unsigned int);
-#define netif_set_real_num_tx_queues  _kc_netif_set_real_num_tx_queues
+void _kc_netif_set_real_num_tx_queues_ixgbe(struct net_device *, unsigned int);
+#define netif_set_real_num_tx_queues  _kc_netif_set_real_num_tx_queues_ixgbe
 #else /* CONFIG_NETDEVICES_MULTI_QUEUE */
 #define netif_set_real_num_tx_queues(_netdev, _count) \
 	do { \
@@ -2455,8 +2455,8 @@ void _kc_netif_set_real_num_tx_queues(struct net_device *, unsigned int);
 
 /*****************************************************************************/
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(2,6,36) )
-extern int _kc_ethtool_op_set_flags(struct net_device *, u32, u32);
-#define ethtool_op_set_flags _kc_ethtool_op_set_flags
+extern int _kc_ethtool_op_set_flags_ixgbe(struct net_device *, u32, u32);
+#define ethtool_op_set_flags _kc_ethtool_op_set_flags_ixgbe
 #else /* < 2.6.36 */
 #define HAVE_PM_QOS_REQUEST_ACTIVE
 #define HAVE_8021P_SUPPORT
-- 
1.7.0.4

