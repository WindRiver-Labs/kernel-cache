From b6ad4545ba17d42410d9a86185ef45895e6c6fea Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Thu, 24 Jun 2010 17:30:10 +0800
Subject: [PATCH 1/3] gianfar: reallocate skb when headroom is not enough for fcb

Gianfar uses a hardware header FCB for offloading.  However when used
with bridging or IP forwarding, TX skb might not have enough headroom
for the FCB.  Reallocate skb for such cases.

This patch was backported from mainline.
commit upstream: commit 93c1285c5d92c31f9bcc20355f1e86e95bec165e

Signed-off-by: Li Yang <leoli@freescale.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Integrated-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 drivers/net/gianfar.c |   30 +++++++++++++++++++++---------
 1 files changed, 21 insertions(+), 9 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index 1698b16..eb04550 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -1103,9 +1103,19 @@ static int gfar_enet_open(struct net_device *dev)
 	return err;
 }
 
-static inline struct txfcb *gfar_add_fcb(struct sk_buff *skb, struct txbd8 *bdp)
+static inline struct txfcb *gfar_add_fcb(struct sk_buff **skbp, struct txbd8 *bdp)
 {
-	struct txfcb *fcb = (struct txfcb *)skb_push (skb, GMAC_FCB_LEN);
+	struct txfcb *fcb;
+	struct sk_buff *skb = *skbp;
+
+	if (unlikely(skb_headroom(skb) < GMAC_FCB_LEN)) {
+		struct sk_buff *old_skb = skb;
+		skb = skb_realloc_headroom(old_skb, GMAC_FCB_LEN);
+		if (!skb)
+			return NULL;
+		dev_kfree_skb_any(old_skb);
+	}
+	fcb = (struct txfcb *)skb_push(skb, GMAC_FCB_LEN);
 
 	memset(fcb, 0, GMAC_FCB_LEN);
 
@@ -1171,19 +1181,21 @@ static int gfar_start_xmit(struct sk_buff *skb, struct net_device *dev)
 	/* Set up checksumming */
 	if (likely((dev->features & NETIF_F_IP_CSUM)
 			&& (CHECKSUM_PARTIAL == skb->ip_summed))) {
-		fcb = gfar_add_fcb(skb, txbdp);
-		status |= TXBD_TOE;
-		gfar_tx_checksum(skb, fcb);
+		fcb = gfar_add_fcb(&skb, txbdp);
+		if (likely(fcb != NULL)) {
+			status |= TXBD_TOE;
+			gfar_tx_checksum(skb, fcb);
+		}
 	}
 
 	if (priv->vlan_enable &&
 			unlikely(priv->vlgrp && vlan_tx_tag_present(skb))) {
-		if (unlikely(NULL == fcb)) {
-			fcb = gfar_add_fcb(skb, txbdp);
+		if (unlikely(NULL == fcb))
+			fcb = gfar_add_fcb(&skb, txbdp);
+		if (likely(fcb != NULL)) {
 			status |= TXBD_TOE;
+			gfar_tx_vlan(skb, fcb);
 		}
-
-		gfar_tx_vlan(skb, fcb);
 	}
 
 	/* Set buffer length and pointer */
-- 
1.7.0.4

