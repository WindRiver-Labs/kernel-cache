From e408177943c453f9ce9ed34ba9a1e0f236a41361 Mon Sep 17 00:00:00 2001
From: Hui Wang <Hui.Wang@windriver.com>
Date: Mon, 5 Jul 2010 15:31:04 +0800
Subject: [PATCH] net/smc911x: modify TX FIFO size and TX status FIFO level

The original design set TX FIFO size to 8K and TX status FIFO level
to 64, that is to say when TX packet states are greater than 64 or 1
second timeout arrives, the driver will clear TX status FIFO and
update TX statistics. If we don't clear TX status FIFO in time and
the TX status FIFO is full, the TX action will stop, so large
watermark of TX FIFO level is not acceptable for some high response
time usage(i.e. gdb batch patckets).

Refer to the function smsc911x_open in the drivers/net/smsc911x.c,
we set TX FIFO size to 5L and TX status FIFO level to 0, this
increases both response time and throughput for this driver.

Tested on TI_OMAP3530EVM(baseboard: REV D).

Signed-off-by: Hui Wang <Hui.Wang@windriver.com>
---
 drivers/net/smc911x.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/net/smc911x.c b/drivers/net/smc911x.c
index 2f7f335..dc2db6b 100644
--- a/drivers/net/smc911x.c
+++ b/drivers/net/smc911x.c
@@ -87,9 +87,9 @@ static int watchdog = 5000;
 module_param(watchdog, int, 0400);
 MODULE_PARM_DESC(watchdog, "transmit timeout in milliseconds");
 
-static int tx_fifo_kb=8;
+static int tx_fifo_kb=5;
 module_param(tx_fifo_kb, int, 0400);
-MODULE_PARM_DESC(tx_fifo_kb,"transmit FIFO size in KB (1<x<15)(default=8)");
+MODULE_PARM_DESC(tx_fifo_kb,"transmit FIFO size in KB (1<x<15)(default=5)");
 
 MODULE_LICENSE("GPL");
 MODULE_ALIAS("platform:smc911x");
@@ -282,8 +282,8 @@ static void smc911x_enable(struct net_device *dev)
 	cfg |= HW_CFG_SF_;
 	SMC_SET_HW_CFG(lp, cfg);
 	SMC_SET_FIFO_TDA(lp, 0xFF);
-	/* Update TX stats on every 64 packets received or every 1 sec */
-	SMC_SET_FIFO_TSL(lp, 64);
+	/* Update TX stats for all packets received in the last 1 sec */
+	SMC_SET_FIFO_TSL(lp, 0);
 	SMC_SET_GPT_CFG(lp, GPT_CFG_TIMER_EN_ | 10000);
 
 	spin_lock_irqsave(&lp->lock, flags);
-- 
1.7.0.4

