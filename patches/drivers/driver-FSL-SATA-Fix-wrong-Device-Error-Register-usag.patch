From 5bf8d5d8a73485916e5175dd5a8461a95971e7a4 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Mon, 11 Jul 2011 15:43:44 +0800
Subject: [PATCH 46/47] driver/FSL SATA:Fix wrong Device Error Register usage

When a single device error is detected, the device under the error is indicated
by the error bit set in the DER. There is a one-to-one mapping between register
bit and devices on Port multiplier(PMP), i.e. bit 0 represents PMP device 0 and
bit 1 represents PMP device 1 etc.

Current implementation treats Device error register value as device number and
not set of bits representing multiple device on PMP. It is changed to consider
bit level.
No need to check for each set bit as all commands are going to be aborted.

Extracted from vendor drop QorIQ-NONDPAA-SDK-V1-20110429_ltib.iso
0006-driver-FSL-SATA-Fix-wrong-Device-Error-Register-usag.patch.

Signed-off-by: Prabhakar Kushwaha <prabhakar@freescale.com>
Signed-off-by: Ashish Kalra <B00888@freescale.com>
Integrated-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/ata/sata_fsl.c |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/ata/sata_fsl.c b/drivers/ata/sata_fsl.c
index a69192b..cd653f1 100644
--- a/drivers/ata/sata_fsl.c
+++ b/drivers/ata/sata_fsl.c
@@ -1043,8 +1043,9 @@ static void sata_fsl_error_intr(struct ata_port *ap)
 			iowrite32(dereg, hcr_base + DE);
 			iowrite32(cereg, hcr_base + CE);
 
-			if (dereg < ap->nr_pmp_links) {
-				link = &ap->pmp_link[dereg];
+			if ((ffs(dereg)-1) < ap->nr_pmp_links) {
+				/* array start from 0 */
+				link = &ap->pmp_link[ffs(dereg)-1];
 				ehi = &link->eh_info;
 				qc = ata_qc_from_tag(ap, link->active_tag);
 				/*
-- 
1.7.0.4

