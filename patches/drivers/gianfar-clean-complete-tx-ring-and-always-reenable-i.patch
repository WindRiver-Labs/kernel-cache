From 9da7a60d91651da135ecdef0a2512fc8da752cee Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Tue, 9 Aug 2011 19:22:52 +0800
Subject: [PATCH 10/47] gianfar: clean complete tx ring and always reenable interrupt

Extracted from vendor drop QorIQ-NONDPAA-SDK-V1-20110429_ltib.iso
linux-2.6.35-qoriq-gianfar-clean-complete-tx-ring-and-alwa.patch.

Signed-off-by: Sandeep Gopalpet <sandeep.kumar@freescale.com>
Signed-off-by: Jiajun Wu <b06378@freescale.com>
Integrated-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/net/gianfar.c |    6 ++----
 1 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index 3e6169c..c4213fe 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -2943,11 +2943,7 @@ static int gfar_clean_tx_ring(struct gfar_priv_tx_q *tx_queue)
 	bdp = tx_queue->dirty_tx;
 	skb_dirtytx = tx_queue->skb_dirtytx;
 
-#ifdef CONFIG_GIANFAR_TXNAPI
-	while ((skb = tx_queue->tx_skbuff[skb_dirtytx]) && !(--tx_work_limit < 0)) {
-#else
 	while ((skb = tx_queue->tx_skbuff[skb_dirtytx])) {
-#endif
 		unsigned long flags;
 
 		frags = skb_shinfo(skb)->nr_frags;
@@ -3448,6 +3444,7 @@ static int gfar_poll_tx(struct napi_struct *napi, int budget)
 		}
 	}
 
+	budget = (num_act_qs * DEFAULT_TX_RING_SIZE) + 1;
 	if (tx_cleaned < budget) {
 		napi_complete(napi);
 		spin_lock_irq(&gfargrp->grplock);
@@ -3457,6 +3454,7 @@ static int gfar_poll_tx(struct napi_struct *napi, int budget)
 		gfar_write(&regs->imask, imask);
 		spin_unlock_irq(&gfargrp->grplock);
 		gfar_configure_tx_coalescing(priv, gfargrp->tx_bit_map);
+		return 1;
 	}
 
 	return tx_cleaned;
-- 
1.7.0.2

