From fc83da4bf67348403aa27a9ecb57107837595c18 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Wed, 4 Jul 2012 15:16:50 +0800
Subject: [PATCH] igb/ixgbe: Ensure driver is registered before processing dca
 notification

A NULL pointer exception happens in igb and ixgbe drivers when CONFIG_DCA
is enabled:
BUG: unable to handle kernel NULL pointer dereference at 00000030
IP: [<c157df70>] klist_next+0x10/0xd0
*pde = 00000000
Oops: 0000 [#1] PREEMPT
LTT NESTING LEVEL : 0
last sysfs file:
Modules linked in: dca igb(+)
Pid: 101, comm: modprobe Not tainted 2.6.34.10-WR4.3.0.0_standard #4 MATXM-CORE-411-B/Calpella
platform
EIP: 0060:[<c157df70>] EFLAGS: 00010286 CPU: 0
EIP is at klist_next+0x10/0xd0
EAX: 00000024 EBX: f697ff18 ECX: 00000000 EDX: f697ff18
ESI: 00000000 EDI: 00000000 EBP: f697ff10 ESP: f697ff00
 DS: 007b ES: 007b FS: 0000 GS: 0033 SS: 0068
Process modprobe (pid: 101, ti=f697e000 task=f69d1270 task.ti=f697e000)
Stack:
 f82f85a4 f697ff18 f697ff38 00000000 f697ff2c c134be31 00000024 00000000
<0> fffffffc f82f8c00 00000000 f697ff3c f82e681f f82e5730 00000000 f697ff5c
<0> f82b804c f82f7525 f82f5820 f82f7984 00000000 f697ff78 c10533af f697ff88
Call Trace:
 [<c134be31>] ? driver_for_each_device+0x51/0x70
 [<f82e681f>] ? igb_notify_dca+0x1f/0x30 [igb]
 [<f82e5730>] ? __igb_notify_dca+0x0/0xd0 [igb]
 [<f82b804c>] ? igb_init_module+0x4c/0x62 [igb]
 [<c10533af>] ? __blocking_notifier_call_chain+0x4f/0x60
 [<c100111d>] ? do_one_initcall+0x2d/0x180
 [<f82b8000>] ? igb_init_module+0x0/0x62 [igb]
 [<c1065b41>] ? sys_init_module+0xb1/0x240
 [<c10b9cfd>] ? sys_mmap_pgoff+0xed/0x100
 [<c1590b81>] ? system_call_done+0x0/0x4
Code: 83 e2 01 75 02 5d c3 ba 3f 00 00 00 b8 14 8c 6d c1 e8 15 45 ab ff 5d c3 8d 76 00 55 89 e5
 57 56 53 89 c3 83 ec 04 8b 00 8b 73 04 <8b> 40 0c 89 45 f0 b8 01 00 00 00 e8 d0 99 aa ff 85 f6
 74 7c 8d
EIP: [<c157df70>] klist_next+0x10/0xd0 SS:ESP 0068:f697ff00
CR2: 0000000000000030
---[ end trace f2ceb9f0e15eef3f ]---

The NULL exception is happening because in igb(or ixgbe) driver, igb_nodify_dca() is being called
asynchronously before the igb driver has a chance to call pci_register_driver(), which means that
driver private member driver->p is NULL when igb_notify_dca is called although the chance of this
happening is very small.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/net/igb/igb_main.c     |    6 ++++++
 drivers/net/ixgbe/ixgbe_main.c |    6 ++++++
 2 files changed, 12 insertions(+)

diff --git a/drivers/net/igb/igb_main.c b/drivers/net/igb/igb_main.c
index c40f681..09d5b2d 100644
--- a/drivers/net/igb/igb_main.c
+++ b/drivers/net/igb/igb_main.c
@@ -4666,6 +4666,12 @@ static int igb_notify_dca(struct notifier_block *nb, unsigned long event,
 {
 	int ret_val;
 
+	if (!(igb_driver.driver.p)) {
+		printk(KERN_ERR "igb: !!! igb_notify_dca() was called but "
+			"driver is not yet initialized !!!\n");
+		return NOTIFY_BAD;
+	}
+
 	ret_val = driver_for_each_device(&igb_driver.driver, NULL, &event,
 	                                 __igb_notify_dca);
 
diff --git a/drivers/net/ixgbe/ixgbe_main.c b/drivers/net/ixgbe/ixgbe_main.c
index 9e90d37..2abe32b 100644
--- a/drivers/net/ixgbe/ixgbe_main.c
+++ b/drivers/net/ixgbe/ixgbe_main.c
@@ -8698,6 +8698,12 @@ static int ixgbe_notify_dca(struct notifier_block *nb, unsigned long event,
 {
 	int ret_val;
 
+	if (!(ixgbe_driver.driver.p)) {
+		printk(KERN_ERR "igb: !!! igb_notify_dca() was called but "
+			"driver is not yet initialized !!!\n");
+		return NOTIFY_BAD;
+	}
+
 	ret_val = driver_for_each_device(&ixgbe_driver.driver, NULL, &event,
 					 __ixgbe_notify_dca);
 
-- 
1.7.9.7

