From ec1bc7777e941bb6433f21ad9939268bd2800dc4 Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Wed, 6 Jul 2016 03:38:41 +0000
Subject: [PATCH] mmc: conditional enlarge the partition size to 64bit
 variable

The original partition size of struct mmc_part is 32 bit while
it is fit for huge partitions larger then 4G. Add macro
MMC_HUGE_PARTITION to conditional enlarge it to 64 bit to
support huge partitions.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 drivers/mmc/core/mmc.c   |    8 ++++++++
 include/linux/mmc/card.h |   15 +++++++++++++++
 2 files changed, 23 insertions(+), 0 deletions(-)

diff --git a/drivers/mmc/core/mmc.c b/drivers/mmc/core/mmc.c
index 18d1e2d..5d504f6 100644
--- a/drivers/mmc/core/mmc.c
+++ b/drivers/mmc/core/mmc.c
@@ -293,7 +293,11 @@ static void mmc_manage_gp_partitions(struct mmc_card *card, u8 *ext_csd)
 {
 	int idx;
 	u8 hc_erase_grp_sz, hc_wp_grp_sz;
+#ifdef MMC_HUGE_PARTITION
+	u64 part_size;
+#else
 	unsigned int part_size;
+#endif /* MMC_HUGE_PARTITION */
 
 	/*
 	 * General purpose partition feature support --
@@ -339,7 +343,11 @@ static void mmc_manage_gp_partitions(struct mmc_card *card, u8 *ext_csd)
 static int mmc_decode_ext_csd(struct mmc_card *card, u8 *ext_csd)
 {
 	int err = 0, idx;
+#ifdef MMC_HUGE_PARTITION
+	u64 part_size;
+#else
 	unsigned int part_size;
+#endif /* MMC_HUGE_PARTITION */
 	struct device_node *np;
 	bool broken_hpi = false;
 
diff --git a/include/linux/mmc/card.h b/include/linux/mmc/card.h
index 4d3776d..f98baef 100644
--- a/include/linux/mmc/card.h
+++ b/include/linux/mmc/card.h
@@ -230,8 +230,19 @@ enum mmc_blk_status {
 /*
  * MMC Physical partitions
  */
+
+/*
+ * Fix me: For huge partition larger then 4GB, 32bit "size" is
+ * not enough. Enlarge it to a 64 bit.
+ */
+#define MMC_HUGE_PARTITION
+
 struct mmc_part {
+#ifdef MMC_HUGE_PARTITION
+	u64		size;	/* partition size (in bytes) */
+#else
 	unsigned int	size;	/* partition size (in bytes) */
+#endif /* MMC_HUGE_PARTITION */
 	unsigned int	part_cfg;	/* partition type */
 	char	name[MAX_MMC_PART_NAME_LEN];
 	bool	force_ro;	/* to make boot parts RO by default */
@@ -316,7 +327,11 @@ struct mmc_card {
 /*
  * This function fill contents in mmc_part.
  */
+#ifdef MMC_HUGE_PARTITION
+static inline void mmc_part_add(struct mmc_card *card, u64 size,
+#else
 static inline void mmc_part_add(struct mmc_card *card, unsigned int size,
+#endif /* MMC_HUGE_PARTITION */
 			unsigned int part_cfg, char *name, int idx, bool ro,
 			int area_type)
 {
-- 
1.7.5.4

