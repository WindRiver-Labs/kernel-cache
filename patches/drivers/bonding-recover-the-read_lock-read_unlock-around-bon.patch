From 98a90aa0f24276e44a4c013e1c66ab1e489647ce Mon Sep 17 00:00:00 2001
From: Li Zhou <li.zhou@windriver.com>
Date: Thu, 24 Nov 2016 15:37:38 +0800
Subject: [PATCH] bonding: recover the read_lock/read_unlock around
 bond_miimon_commit

The commit <bonding: don't use stale speed and duplex information>
on wrlinux6 does some extra work besides what upstream has done:
the read_lock/read_unlock around bond_miimon_commit are removed.
This ruins the lock's balance in functions which are called by
bond_miimon_commit finally, and cause a warning and many error logs,
such as:
WARNING: at .../kernel/sched/core.c:2828 sub_preempt_count+0x70/0xb0()
DEBUG_LOCKS_WARN_ON(val > preempt_count())
BUG: workqueue leaked lock or atomic: kworker/u8:4/0x00000001/62
BUG: scheduling while atomic: kworker/u8:4/62/0x10000002

Here recover the lock.

Signed-off-by: Li Zhou <li.zhou@windriver.com>
---
 drivers/net/bonding/bond_main.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c
index be67412..599183c 100644
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@ -2520,8 +2520,11 @@ void bond_mii_monitor(struct work_struct *work)
 			goto re_arm;
 		}
 
+		read_lock(&bond->lock);
+
 		bond_miimon_commit(bond);
 
+		read_unlock(&bond->lock);
 		rtnl_unlock();	/* might sleep, hold no other locks */
 		read_lock(&bond->lock);
 	}
-- 
1.7.5.4

