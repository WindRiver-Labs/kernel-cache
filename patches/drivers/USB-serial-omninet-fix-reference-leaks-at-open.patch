From 9de36df6003d99c5644efcc727f4665bcb1b9b65 Mon Sep 17 00:00:00 2001
From: Haiqing Bai <Haiqing.Bai@windriver.com>
Date: Sat, 27 May 2017 02:09:30 +0000
Subject: [PATCH] USB: serial: omninet: fix reference leaks at open

commit 30572418b445d85fcfe6c8fe84c947d2606767d8 upstream

This driver needlessly took another reference to the tty on open, a
reference which was then never released on close. This lead to not just
a leak of the tty, but also a driver reference leak that prevented the
driver from being unloaded after a port had once been opened.

Fixes: 4a90f09b20f4 ("tty: usb-serial krefs")
Cc: stable <stable@vger.kernel.org>     # 2.6.28
Signed-off-by: Johan Hovold <johan@kernel.org>

[Regenerated this patch for context change]
Signed-off-by: Haiqing Bai <Haiqing.Bai@windriver.com>
---
 drivers/usb/serial/omninet.c |    9 +--------
 1 files changed, 1 insertions(+), 8 deletions(-)

diff --git a/drivers/usb/serial/omninet.c b/drivers/usb/serial/omninet.c
index 88dc785..d005e5d 100644
--- a/drivers/usb/serial/omninet.c
+++ b/drivers/usb/serial/omninet.c
@@ -140,14 +140,7 @@ static int omninet_attach(struct usb_serial *serial)
 
 static int omninet_open(struct tty_struct *tty, struct usb_serial_port *port)
 {
-	struct usb_serial	*serial = port->serial;
-	struct usb_serial_port	*wport;
-	int			result = 0;
-
-	dbg("%s - port %d", __func__, port->number);
-
-	wport = serial->port[1];
-	tty_port_tty_set(&wport->port, tty);
+	int result = 0;
 
 	/* Start reading from the device */
 	result = usb_submit_urb(port->read_urb, GFP_KERNEL);
-- 
1.7.5.4

