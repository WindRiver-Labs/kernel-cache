From a3cb43a561c23ef56a4f9180edc5eb17a4ef45e6 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Thu, 29 Sep 2011 09:54:34 +0800
Subject: [PATCH] gianfar/1588: Disable PTP timer only when there is no NIC port up

PTP timer is shared among multiple NIC ports, every time when there is
one NIC port is uped and downed, PTP timer is disabled by calling
gfar_1588_stop(), this makes the available NIC port can't synchronize
the IEEE 1588 clock between slaves and masters.

Fix this problem by adding a eth_counter variable to determine when to
disable PTP timer really.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/net/gianfar.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index 2dcb6ee..753cb74 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -120,6 +120,8 @@ const char gfar_driver_version[] = "1.3";
 
 /* Used for determining hardware time stamps support */
 int ptp_1588_present = FALSE;
+/* Used for determining when to disable PTP timer */
+static int eth_counter = 0;
 
 static int gfar_enet_open(struct net_device *dev);
 static int gfar_start_xmit(struct sk_buff *skb, struct net_device *dev);
@@ -2238,7 +2240,7 @@ void stop_gfar(struct net_device *dev)
 	unlock_tx_qs(priv);
 	local_irq_restore(flags);
 
-	if (priv->ptimer_present)
+	if (priv->ptimer_present && !eth_counter)
 		gfar_1588_stop(dev);
 
 	/* Free the IRQs */
@@ -2608,6 +2610,8 @@ static int gfar_enet_open(struct net_device *dev)
 		return err;
 	}
 
+	eth_counter++;
+
 	netif_tx_start_all_queues(dev);
 
 	device_set_wakeup_enable(&priv->ofdev->dev, priv->wol_en);
@@ -3175,6 +3179,8 @@ static int gfar_close(struct net_device *dev)
 {
 	struct gfar_private *priv = netdev_priv(dev);
 
+	eth_counter--;
+
 	disable_napi(priv);
 
 	cancel_work_sync(&priv->reset_task);
-- 
1.7.0.4

