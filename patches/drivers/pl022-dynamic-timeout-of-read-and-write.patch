From b5f8de0964125679f4a2f78e0407e1c979c450f3 Mon Sep 17 00:00:00 2001
From: lwang1 <li.wang@windriver.com>
Date: Wed, 7 Jun 2017 01:49:40 +0000
Subject: [PATCH] pl022: dynamic timeout of read and write

a fixed timeout is triggered by big size r/w operation.
the fix patch refers to common spi r/w functions:

commit 16a0ce4e10 [spi: Add a timeout when waiting for transfers]

Don't wait indefinitely for transfers to complete but time out after 10ms
more than we expect the transfer to take on the wire.

Signed-off-by: lwang1 <li.wang@windriver.com>
---
 drivers/spi/spi-pl022.c |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)
 mode change 100644 => 100755 drivers/spi/spi-pl022.c

diff --git a/drivers/spi/spi-pl022.c b/drivers/spi/spi-pl022.c
old mode 100644
new mode 100755
index f7f7ba1..4165ebe
--- a/drivers/spi/spi-pl022.c
+++ b/drivers/spi/spi-pl022.c
@@ -294,8 +294,6 @@
 
 #define CLEAR_ALL_INTERRUPTS  0x3
 
-#define SPI_POLLING_TIMEOUT 1000
-
 /*
  * The type of reading going on on this chip
  */
@@ -1492,6 +1490,7 @@ static void do_polling_transfer(struct pl022 *pl022)
 	struct spi_transfer *previous = NULL;
 	struct chip_data *chip;
 	unsigned long time, timeout;
+	unsigned long long ms;
 
 	chip = pl022->cur_chip;
 	message = pl022->cur_msg;
@@ -1531,7 +1530,14 @@ static void do_polling_transfer(struct pl022 *pl022)
 
 		dev_dbg(&pl022->adev->dev, "polling transfer ongoing ...\n");
 
-		timeout = jiffies + msecs_to_jiffies(SPI_POLLING_TIMEOUT);
+		ms = 8LL * 1000LL * transfer->len;
+		do_div(ms, transfer->speed_hz);
+		ms += ms + 200; /* some tolerance */
+
+		if (ms > UINT_MAX)
+			ms = UINT_MAX;
+
+		timeout = jiffies + msecs_to_jiffies(ms);
 		while (pl022->tx < pl022->tx_end || pl022->rx < pl022->rx_end) {
 			time = jiffies;
 			readwriter(pl022);
-- 
1.7.5.4

