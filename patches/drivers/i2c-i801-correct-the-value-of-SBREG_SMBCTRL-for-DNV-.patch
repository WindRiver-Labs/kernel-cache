From 30311822495e1f69846eaae37db72a1f46d9614d Mon Sep 17 00:00:00 2001
From: Zhenbo Gao <zhenbo.gao@windriver.com>
Date: Mon, 11 Dec 2017 16:48:36 +0800
Subject: [PATCH] i2c: i801: correct the value of SBREG_SMBCTRL for DNV
 platform

The hardware watchdog doesn't work well for Denverton platform.

The value of SBREG_SMBCTRL should be set to 0xcf000c according
to the document C3000_EDS_Rev2_0_review.pdf provided by Intel.
(Section no: 59.6.2 General Control (GC), Page no:2772)

The hardware watchdog can work well with this modification.

Signed-off-by: Zhenbo Gao <zhenbo.gao@windriver.com>
---
 drivers/i2c/busses/i2c-i801.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/drivers/i2c/busses/i2c-i801.c b/drivers/i2c/busses/i2c-i801.c
index 3e4a295..9a30d91 100644
--- a/drivers/i2c/busses/i2c-i801.c
+++ b/drivers/i2c/busses/i2c-i801.c
@@ -1232,7 +1232,11 @@ static void i801_add_tco(struct i801_priv *priv)
 	spin_unlock(&p2sb_spinlock);
 
 	res = &tco_res[ICH_RES_MEM_OFF];
-	res->start = (resource_size_t)base64_addr + SBREG_SMBCTRL;
+	/* SBREG_SMBCTRL should be 0xcf000c for Denverton platform */
+	if (pci_dev->device == PCI_DEVICE_ID_INTEL_DNV_SMBUS)
+		res->start = (resource_size_t)base64_addr + 0xcf000c;
+	else
+		res->start = (resource_size_t)base64_addr + SBREG_SMBCTRL;
 	res->end = res->start + 3;
 	res->flags = IORESOURCE_MEM;
 
-- 
1.7.5.4

