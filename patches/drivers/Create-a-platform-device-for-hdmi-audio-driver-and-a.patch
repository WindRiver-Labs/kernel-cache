From 9a153c5eecf0299b9b029b778f5f311be3433fde Mon Sep 17 00:00:00 2001
From: Jerome Anand <jerome.anand@intel.com>
Date: Fri, 1 Apr 2016 11:07:48 +0530
Subject: [PATCH 12/13] Create a platform device for hdmi audio driver and
 allocate full resources

patch from: https://github.com/plbossart/sound/tree/byt-cht-hdmi-v4.7

Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Signed-off-by: Liwei Song <liwei.song@windriver.com>
---
 sound/hdmi_audio/intel_mid_hdmi_audio.c | 22 +++++++++++++++++++---
 1 file changed, 19 insertions(+), 3 deletions(-)

diff --git a/sound/hdmi_audio/intel_mid_hdmi_audio.c b/sound/hdmi_audio/intel_mid_hdmi_audio.c
index 8c3de73..88e97d4 100644
--- a/sound/hdmi_audio/intel_mid_hdmi_audio.c
+++ b/sound/hdmi_audio/intel_mid_hdmi_audio.c
@@ -47,6 +47,8 @@ static int hdmi_card_index = SNDRV_DEFAULT_IDX1;
 static char *hdmi_card_id = SNDRV_DEFAULT_STR1;
 static struct snd_intelhad *had_data;
 
+struct platform_device *gpdev;
+
 module_param(hdmi_card_index, int, 0444);
 MODULE_PARM_DESC(hdmi_card_index,
 		"Index value for INTEL Intel HDMI Audio controller.");
@@ -1481,9 +1483,9 @@ static int snd_intelhad_pcm_prepare(struct snd_pcm_substream *substream)
 	}
 
 	pr_debug("period_size=%d\n",
-				frames_to_bytes(runtime, runtime->period_size));
+				(int)frames_to_bytes(runtime, runtime->period_size));
 	pr_debug("periods=%d\n", runtime->periods);
-	pr_debug("buffer_size=%d\n", snd_pcm_lib_buffer_bytes(substream));
+	pr_debug("buffer_size=%d\n", (int)snd_pcm_lib_buffer_bytes(substream));
 	pr_debug("rate=%d\n", runtime->rate);
 	pr_debug("channels=%d\n", runtime->channels);
 
@@ -1997,10 +1999,16 @@ static struct platform_driver had_driver = {
 #ifdef CONFIG_PM
 		.pm	= &had_pm_ops,
 #endif
-		.acpi_match_table = ACPI_PTR(had_acpi_ids),
+		//.acpi_match_table = ACPI_PTR(had_acpi_ids),
 	},
 };
 
+static const struct platform_device_info hdmi_audio_dev_info = {
+	.name = HDMI_AUDIO_DRIVER,
+	.id = -1,
+	.dma_mask = DMA_BIT_MASK(32),
+};
+
 /*
 * alsa_card_intelhad_init- driver init function
 * This function is called when driver module is inserted
@@ -2020,6 +2028,13 @@ static int __init alsa_card_intelhad_init(void)
 		return retval;
 	}
 
+	//gpdev = platform_device_register_simple(HDMI_AUDIO_DRIVER, -1, NULL, 0);
+	gpdev = platform_device_register_full(&hdmi_audio_dev_info);
+	if (!gpdev) {
+		pr_err("[jerome] Failed to register platform device \n");
+		return -1;
+	}
+
 	pr_debug("init complete\n");
 	return retval;
 }
@@ -2032,6 +2047,7 @@ static void __exit alsa_card_intelhad_exit(void)
 {
 	pr_debug("had_exit called\n");
 	platform_driver_unregister(&had_driver);
+	platform_device_unregister(gpdev);
 }
 late_initcall(alsa_card_intelhad_init);
 module_exit(alsa_card_intelhad_exit);
-- 
2.0.2

