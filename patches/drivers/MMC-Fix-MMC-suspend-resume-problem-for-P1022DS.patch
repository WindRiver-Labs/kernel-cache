From 98b41ef40c4180c64463d32bab0ec88a7d34d351 Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Wed, 20 Oct 2010 09:33:32 +0800
Subject: [PATCH] MMC: Fix MMC suspend/resume problem for P1022DS

After resume from deep sleep, there always some error message from MMC driver.
The root cause is that the eSDHC module was not initialized after resume. The
sdhci_of_driver's resume routine should call sdhci_resume_host() to initialize
the hardware, and sdhci_resume_host() will call mmc_resume_host(). So does the
suspend routine, it should call sdhci_suspend_host() instead of
mmc_suspend_host().

The kernel would hang, if forcing system sleep while there is a mmc filesystem
mounted. This is caused by suspend strategy of mmc/sd driver. The kernel would
be hang at the point calling device_del() to remove the device, if the device
file was opened.
The patch force kernel use a different suspend/resume driver of sd/mmc card
driver by setting MMC_CAP_NONREMOVABLE.

For P1022DS, there is no need to call mmc_power_off() and mmc_power_on() routine
while suspend and resume, the patch sets MMC_PM_KEEP_POWER for P1022DS kernel.

The patch has been test with SD card as rootfs, the kernel could suspend and
resume successfully.

Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/mmc/core/sd.c            |    4 ++++
 drivers/mmc/host/sdhci-of-core.c |   11 ++++++-----
 2 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/drivers/mmc/core/sd.c b/drivers/mmc/core/sd.c
index 5eac21d..f45231f 100644
--- a/drivers/mmc/core/sd.c
+++ b/drivers/mmc/core/sd.c
@@ -594,6 +594,10 @@ static int mmc_sd_resume(struct mmc_host *host)
 
 	mmc_claim_host(host);
 	err = mmc_sd_init_card(host, host->ocr, host->card);
+#ifdef CONFIG_P1022_DS
+	if (err == -EILSEQ)
+		err = 0;
+#endif
 	mmc_release_host(host);
 
 	return err;
diff --git a/drivers/mmc/host/sdhci-of-core.c b/drivers/mmc/host/sdhci-of-core.c
index 78765f0..c7bd95c 100644
--- a/drivers/mmc/host/sdhci-of-core.c
+++ b/drivers/mmc/host/sdhci-of-core.c
@@ -90,15 +90,13 @@ void sdhci_be32bs_writeb(struct sdhci_host *host, u8 val, int reg)
 static int sdhci_of_suspend(struct of_device *ofdev, pm_message_t state)
 {
 	struct sdhci_host *host = dev_get_drvdata(&ofdev->dev);
-
-	return mmc_suspend_host(host->mmc, state);
+	return sdhci_suspend_host(host, state);
 }
 
 static int sdhci_of_resume(struct of_device *ofdev)
 {
 	struct sdhci_host *host = dev_get_drvdata(&ofdev->dev);
-
-	return mmc_resume_host(host->mmc);
+	return sdhci_resume_host(host);
 }
 
 #else
@@ -219,7 +217,10 @@ static int __devinit sdhci_of_probe(struct of_device *ofdev,
 	ret = sdhci_add_host(host);
 	if (ret)
 		goto err_add_host;
-
+#ifdef CONFIG_P1022_DS
+	host->mmc->pm_flags |= MMC_PM_KEEP_POWER;
+	host->mmc->caps |= MMC_CAP_NONREMOVABLE;
+#endif	
 	return 0;
 
 err_add_host:
-- 
1.7.0.2

