From 452522d8c73fb6d095d182bf05e63f9edadb7304 Mon Sep 17 00:00:00 2001
From: David Woodhouse <David.Woodhouse@intel.com>
Date: Thu, 6 Mar 2014 16:19:30 +0000
Subject: [PATCH 027/108] iommu/vt-d: Make dmar_insert_dev_info() take struct
 device instead of struct pci_dev

commit 1525a29a7d619901aed0dc5f1eb0592fc881805a upstream.

Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
Signed-off-by: Liwei Song <liwei.song@windriver.com>
---
 drivers/iommu/intel-iommu.c |   21 ++++++++++-----------
 1 files changed, 10 insertions(+), 11 deletions(-)

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index 67cb5fe..9be1a01 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -2111,15 +2111,14 @@ static void domain_remove_dev_info(struct dmar_domain *domain)
 
 /*
  * find_domain
- * Note: we use struct pci_dev->dev.archdata.iommu stores the info
+ * Note: we use struct device->archdata.iommu stores the info
  */
-static struct dmar_domain *
-find_domain(struct pci_dev *pdev)
+static struct dmar_domain *find_domain(struct device *dev)
 {
 	struct device_domain_info *info;
 
 	/* No lock here, assumes no domain exit in normal case */
-	info = pdev->dev.archdata.iommu;
+	info = dev->archdata.iommu;
 	if (info)
 		return info->domain;
 	return NULL;
@@ -2159,7 +2158,7 @@ static int dmar_insert_dev_info(int segment, int bus, int devfn,
 
 	spin_lock_irqsave(&device_domain_lock, flags);
 	if (dev)
-		found = find_domain(dev);
+		found = find_domain(&dev->dev);
 	else
 		found = dmar_search_domain_by_dev_info(segment, bus, devfn);
 	if (found) {
@@ -2191,7 +2190,7 @@ static struct dmar_domain *get_domain_for_dev(struct pci_dev *pdev, int gaw)
 	int bus = 0, devfn = 0;
 	int segment;
 
-	domain = find_domain(pdev);
+	domain = find_domain(&pdev->dev);
 	if (domain)
 		return domain;
 
@@ -2250,7 +2249,7 @@ error:
 	if (free)
 		domain_exit(free);
 	/* recheck it here, maybe others set it */
-	return find_domain(pdev);
+	return find_domain(&pdev->dev);
 }
 
 static int iommu_identity_mapping;
@@ -3106,7 +3105,7 @@ static void intel_unmap_page(struct device *dev, dma_addr_t dev_addr,
 	if (iommu_no_mapping(dev))
 		return;
 
-	domain = find_domain(pdev);
+	domain = find_domain(dev);
 	BUG_ON(!domain);
 
 	iommu = domain_get_iommu(domain);
@@ -3212,7 +3211,7 @@ static void intel_unmap_sg(struct device *hwdev, struct scatterlist *sglist,
 	if (iommu_no_mapping(hwdev))
 		return;
 
-	domain = find_domain(pdev);
+	domain = find_domain(hwdev);
 	BUG_ON(!domain);
 
 	iommu = domain_get_iommu(domain);
@@ -3820,7 +3819,7 @@ static int device_notifier(struct notifier_block *nb,
 	    action != BUS_NOTIFY_DEL_DEVICE)
 		return 0;
 
-	domain = find_domain(pdev);
+	domain = find_domain(dev);
 	if (!domain)
 		return 0;
 
@@ -4159,7 +4158,7 @@ static int intel_iommu_attach_device(struct iommu_domain *domain,
 	if (unlikely(domain_context_mapped(pdev))) {
 		struct dmar_domain *old_domain;
 
-		old_domain = find_domain(pdev);
+		old_domain = find_domain(dev);
 		if (old_domain) {
 			if (dmar_domain->flags & DOMAIN_FLAG_VIRTUAL_MACHINE ||
 			    dmar_domain->flags & DOMAIN_FLAG_STATIC_IDENTITY)
-- 
1.7.5.4

