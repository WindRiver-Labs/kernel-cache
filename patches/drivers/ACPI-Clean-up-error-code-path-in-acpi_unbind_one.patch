From dac611328b64b682d38855e9ac5473ef09aa4750 Mon Sep 17 00:00:00 2001
From: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
Date: Wed, 7 Aug 2013 01:22:51 +0200
Subject: [PATCH 73/97] ACPI: Clean up error code path in acpi_unbind_one()

commit 38e88839eff8a3d2e8d3bcc2ad833fe51cca0496 upstream.

The error code path in acpi_unbind_one() is unnecessarily complicated
(in particular, the err label is not really necessary) and the error
message printed by it is inaccurate (there's nothing called
'acpi_handle' in that function), so clean up those things.

Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Acked-by: Toshi Kani <toshi.kani@hp.com>
Acked-by: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
Signed-off-by: Liwei Song <liwei.song@windriver.com>
---
 drivers/acpi/glue.c |   11 ++++-------
 1 files changed, 4 insertions(+), 7 deletions(-)

diff --git a/drivers/acpi/glue.c b/drivers/acpi/glue.c
index 67c4e3c..88e78da 100644
--- a/drivers/acpi/glue.c
+++ b/drivers/acpi/glue.c
@@ -268,8 +268,10 @@ int acpi_unbind_one(struct device *dev)
 		return 0;
 
 	status = acpi_bus_get_device(ACPI_HANDLE(dev), &acpi_dev);
-	if (ACPI_FAILURE(status))
-		goto err;
+	if (ACPI_FAILURE(status)) {
+		dev_err(dev, "Oops, ACPI handle corrupt in %s()\n", __func__);
+		return -EINVAL;
+	}
 
 	mutex_lock(&acpi_dev->physical_node_lock);
 	list_for_each_safe(node, next, &acpi_dev->physical_node_list) {
@@ -299,12 +301,7 @@ int acpi_unbind_one(struct device *dev)
 		kfree(entry);
 	}
 	mutex_unlock(&acpi_dev->physical_node_lock);
-
 	return 0;
-
-err:
-	dev_err(dev, "Oops, 'acpi_handle' corrupt\n");
-	return -EINVAL;
 }
 EXPORT_SYMBOL_GPL(acpi_unbind_one);
 
-- 
1.7.5.4

