From d4bc29e7f0da92ece7ea0987bf00205b1bb6e9c3 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Tue, 9 Aug 2011 19:22:53 +0800
Subject: [PATCH 11/47] eTSEC: Fix tx/rx queue dma_base programming for 36bit mode

For 36 bit operation TBASEH/RBASEH in eTSEC must be programmed
for correct operation. This is needed when BDs are located in high
addresses (for example when using L2SRAM).

Extracted from vendor drop QorIQ-NONDPAA-SDK-V1-20110429_ltib.iso
linux-2.6.35-qoriq-eTSEC-Fix-tx-rx-queue-dma_base-programm.patch.

Signed-off-by: Jin Qing <b24347@freescale.com>
Signed-off-by: Li Yang <leoli@freescale.com>
Signed-off-by: Pankaj Chauhan <B32944@freescale.com>
Integrated-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/net/gianfar.c |    7 +++++++
 drivers/net/gianfar.h |    2 ++
 2 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index c4213fe..c2d73cd 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -428,7 +428,14 @@ static void gfar_init_tx_rx_base(struct gfar_private *priv)
 	struct gfar __iomem *regs = priv->gfargrp[0].regs;
 	u32 __iomem *baddr;
 	int i;
+#ifdef CONFIG_PHYS_64BIT
+	dma_addr_t addr;
 
+	addr = priv->tx_queue[0]->tx_bd_dma_base;
+	gfar_write(&regs->tbaseh, ((addr >> 32) & GFAR_TX_BASE_H));
+	addr = priv->rx_queue[0]->rx_bd_dma_base;
+	gfar_write(&regs->rbaseh, ((addr >> 32) & GFAR_RX_BASE_H));
+#endif
 	baddr = &regs->tbase0;
 	for(i = 0; i < priv->num_tx_queues; i++) {
 		gfar_write(baddr, priv->tx_queue[i]->tx_bd_dma_base);
diff --git a/drivers/net/gianfar.h b/drivers/net/gianfar.h
index 2e49df4..abaaca3 100644
--- a/drivers/net/gianfar.h
+++ b/drivers/net/gianfar.h
@@ -616,6 +616,8 @@ extern const char gfar_driver_version[];
 
 #define GFAR_INT_NAME_MAX	IFNAMSIZ + 4
 
+#define GFAR_TX_BASE_H	0xf
+#define GFAR_RX_BASE_H	0xf
 #define GIANFAR_WOL_MAGIC       (1 << 5)
 
 struct txbd8
-- 
1.7.0.2

