From eeb18036c13c6fe99cf639e4faea2de5dc925820 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Thu, 30 Jun 2011 18:02:01 +0800
Subject: [PATCH 4/4] serial: Fix NULL Pointer Dereference n_tty.c

read_buf needs to be properly synchronized.

n_tty_close() has not properly synchronized with a spinlock
when release and reset read_buf, this will lead to NULL pointer
dereference in put_tty_queue_nolock() if TTY received characters
at this process.

Extracted from vendor drop QorIQ-NONDPAA-SDK-V1-20110429_ltib.iso
linux-2.6.35-qoriq-serial-Fix-NULL-Pointer-Dereference-n_t.patch.

Signed-off-by: Rajesh Bv <B22233@freescale.com>
Signed-off-by: Drona Pratap <B20017@freescale.com>
Signed-off-by: Naidu Sai <B22341@freescale.com>
Integrated-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/char/n_tty.c |   13 ++++++++++---
 1 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/drivers/char/n_tty.c b/drivers/char/n_tty.c
index bdae832..72c03aa 100644
--- a/drivers/char/n_tty.c
+++ b/drivers/char/n_tty.c
@@ -109,7 +109,7 @@ static void n_tty_set_room(struct tty_struct *tty)
 
 static void put_tty_queue_nolock(unsigned char c, struct tty_struct *tty)
 {
-	if (tty->read_cnt < N_TTY_BUF_SIZE) {
+	if (tty->read_cnt < N_TTY_BUF_SIZE && tty->read_buf != NULL) {
 		tty->read_buf[tty->read_head] = c;
 		tty->read_head = (tty->read_head + 1) & (N_TTY_BUF_SIZE-1);
 		tty->read_cnt++;
@@ -1536,14 +1536,21 @@ static void n_tty_set_termios(struct tty_struct *tty, struct ktermios *old)
 
 static void n_tty_close(struct tty_struct *tty)
 {
+	char *tmpbuf;
+	unsigned long flags;
+
 	n_tty_flush_buffer(tty);
 	if (tty->read_buf) {
-		kfree(tty->read_buf);
+		tmpbuf = tty->read_buf;
+		spin_lock_irqsave(&tty->read_lock, flags);
 		tty->read_buf = NULL;
+		spin_unlock_irqrestore(&tty->read_lock, flags);
+		kfree(tmpbuf);
 	}
 	if (tty->echo_buf) {
-		kfree(tty->echo_buf);
+		tmpbuf = tty->echo_buf;
 		tty->echo_buf = NULL;
+		kfree(tmpbuf);
 	}
 }
 
-- 
1.7.0.2

