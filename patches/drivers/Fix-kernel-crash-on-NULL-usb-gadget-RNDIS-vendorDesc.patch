From 927f5200eae25ef6957b316e97ca9e63182db5fb Mon Sep 17 00:00:00 2001
From: Shan Hai <shan.hai@windriver.com>
Date: Fri, 25 Mar 2011 14:11:19 +0800
Subject: [PATCH] Fix kernel crash on NULL usb gadget RNDIS vendorDescr

Leaving the USB gadget RNDIS device's vendorDescr NULL causes kernel OOPS
when the host tools like wireshark scanning the gadget, fix it by calling
rndis_set_param_vendor() to set the vendorDescr of RNDIS gadget device.

Signed-off-by: Shan Hai <shan.hai@windriver.com>
---
 drivers/usb/gadget/ether.c   |    7 +++++--
 drivers/usb/gadget/f_rndis.c |    5 +----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/usb/gadget/ether.c b/drivers/usb/gadget/ether.c
index 400f803..d95315b 100644
--- a/drivers/usb/gadget/ether.c
+++ b/drivers/usb/gadget/ether.c
@@ -80,6 +80,9 @@
 #define PREFIX			""
 #endif
 
+static char manufacturer[50];
+static u32 vendorID;
+
 /*
  * This driver aims for interoperability by using CDC ECM unless
  *
@@ -210,8 +213,6 @@ static const struct usb_descriptor_header *otg_desc[] = {
 #define STRING_MANUFACTURER_IDX		0
 #define STRING_PRODUCT_IDX		1
 
-static char manufacturer[50];
-
 static struct usb_string strings_dev[] = {
 	[STRING_MANUFACTURER_IDX].s = manufacturer,
 	[STRING_PRODUCT_IDX].s = PREFIX DRIVER_DESC,
@@ -334,6 +335,8 @@ static int __init eth_bind(struct usb_composite_dev *cdev)
 		device_desc.bNumConfigurations = 2;
 	}
 
+	vendorID = device_desc.idVendor;
+
 	gcnum = usb_gadget_controller_number(gadget);
 	if (gcnum >= 0)
 		device_desc.bcdDevice = cpu_to_le16(0x0300 | gcnum);
diff --git a/drivers/usb/gadget/f_rndis.c b/drivers/usb/gadget/f_rndis.c
index 56b0221..d5eb290 100644
--- a/drivers/usb/gadget/f_rndis.c
+++ b/drivers/usb/gadget/f_rndis.c
@@ -707,12 +707,9 @@ rndis_bind(struct usb_configuration *c, struct usb_function *f)
 	rndis_set_param_medium(rndis->config, NDIS_MEDIUM_802_3, 0);
 	rndis_set_host_mac(rndis->config, rndis->ethaddr);
 
-#if 0
-// FIXME
 	if (rndis_set_param_vendor(rndis->config, vendorID,
 				manufacturer))
-		goto fail0;
-#endif
+		goto fail;
 
 	/* NOTE:  all that is done without knowing or caring about
 	 * the network link ... which is unavailable to this code
-- 
1.7.0.4

