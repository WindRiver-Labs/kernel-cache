From d8930d0a9f211ad43ca1e05587ffbff8ae4546d3 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Tue, 19 Nov 2013 17:51:12 +0800
Subject: [PATCH] tty: Replace flush_delayed_work by flush_to_ldisc

When there are several busy real-time processes running on the ssh console,
the console would hang and can't be interrupted by signal, and hung_task
call trace may happen like below:
  [ef8538e0] [c0007b78] __switch_to+0x64/0xd0
  [ef8538f0] [c05f02a0] schedule+0x258/0x638
  [ef853970] [c05f0a8c] schedule_timeout+0x1b4/0x2b8
  [ef8539c0] [c05efe8c] wait_for_common+0xac/0x1b0
  [ef853a00] [c00613bc] flush_work+0x74/0xd8
  [ef853a50] [c0367e44] tty_flush_to_ldisc+0x14/0x24
  [ef853a60] [c0362278] n_tty_poll+0x74/0x188
  [ef853a80] [c035d82c] tty_poll+0x88/0xac
  [ef853aa0] [c0111620] do_select+0x2ec/0x590
  [ef853db0] [c0111a88] core_sys_select+0x1c4/0x380
  [ef853f00] [c0111f58] sys_select+0x38/0x158
  [ef853f40] [c00105ec] ret_from_syscall+0x0/0x4
  --- Exception: c01 at 0xfeb38dc

commit 514fc01d3 or 97ad5a034 ("tty: use the new 'flush_delayed_work()' helper
to do ldisc flush") makes tty do the flush data to line discipline work through
work queue under the select() syscall context, however, there is a possibility
here that the worker thread has no chance to be scheduled if there are busy
real-time threads in the system because worker thread is not RT thread, finally,
when call flush_delayed_work to flush the pending work, it will block to wait for
the termination of the work's callback, and it blocks forever.

Since we can't make the worker thread as RT, this dilemma could be resolved by
invoking the flush to ldisc work directly without involve the work queue, this
fix would not introduce any side effect as this is exactly the same thing which
tty does before linux-2.6.31.

Also, add a runtime module parameter(ldisc_flush_wq) so that we can dynamically
disable tty do the line discipline flush work through workqueues.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/tty/tty_buffer.c |   12 +++++++++++-
 1 files changed, 11 insertions(+), 1 deletions(-)

diff --git a/drivers/tty/tty_buffer.c b/drivers/tty/tty_buffer.c
index 6c9b7cd..e7d431f 100644
--- a/drivers/tty/tty_buffer.c
+++ b/drivers/tty/tty_buffer.c
@@ -17,6 +17,13 @@
 #include <linux/delay.h>
 #include <linux/module.h>
 
+/*
+ * Enable/Disable line discipline flush work done through the workqueues
+ */
+static bool ldisc_flush_wq = 1;
+module_param(ldisc_flush_wq, bool, 0644);
+MODULE_PARM_DESC(ldisc_flush_wq, "line discipline flush by workqueue (0=disable, default=1)");
+
 /**
  *	tty_buffer_free_all		-	free buffers used by a tty
  *	@tty: tty to free from
@@ -469,7 +476,10 @@ static void flush_to_ldisc(struct work_struct *work)
  */
 void tty_flush_to_ldisc(struct tty_struct *tty)
 {
-	flush_work(&tty->buf.work);
+	if (likely(ldisc_flush_wq))
+		flush_work(&tty->buf.work);
+	else
+		flush_to_ldisc(&tty->buf.work);
 }
 
 /**
-- 
1.7.5.4

