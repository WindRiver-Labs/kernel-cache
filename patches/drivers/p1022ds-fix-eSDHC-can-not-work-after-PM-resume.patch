From 57caf0afa7e6619d289b3013d971df15e14e04bc Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Thu, 14 Jul 2011 17:00:57 +0800
Subject: [PATCH 37/47] p1022ds: fix eSDHC can not work after PM resume

Extracted from vendor drop QorIQ-NONDPAA-SDK-V1-20110429_ltib.iso
linux-2.6.35-qoriq-p1022ds-fix-eSDHC-can-not-work-after-PM.patch.

Signed-off-by: Jiang Yutang <b14898@freescale.com>
Integrated-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/mmc/host/sdhci-of-core.c |   19 +++++++++++++++++--
 1 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/drivers/mmc/host/sdhci-of-core.c b/drivers/mmc/host/sdhci-of-core.c
index 893755d..d6d4a1e 100644
--- a/drivers/mmc/host/sdhci-of-core.c
+++ b/drivers/mmc/host/sdhci-of-core.c
@@ -29,6 +29,9 @@
 
 #ifdef CONFIG_MMC_SDHCI_BIG_ENDIAN_32BIT_BYTE_SWAPPER
 
+static int sdhc_pmsaveproctlreg = 0;
+static u32 esdhc_proctl;
+
 /*
  * These accessors are designed for big endian hosts doing I/O to
  * little endian controllers incorporating a 32-bit hardware byte swapper.
@@ -90,15 +93,23 @@ void sdhci_be32bs_writeb(struct sdhci_host *host, u8 val, int reg)
 static int sdhci_of_suspend(struct of_device *ofdev, pm_message_t state)
 {
 	struct sdhci_host *host = dev_get_drvdata(&ofdev->dev);
+	if (sdhc_pmsaveproctlreg == 1)
+		esdhc_proctl = sdhci_readl(host, SDHCI_HOST_CONTROL);
+
 	return sdhci_suspend_host(host, state);
 }
 
 static int sdhci_of_resume(struct of_device *ofdev)
 {
+	int ret;
 	struct sdhci_host *host = dev_get_drvdata(&ofdev->dev);
 
 	host->ops->enable_dma(host);
-	return sdhci_resume_host(host);
+	ret = sdhci_resume_host(host);
+	if (sdhc_pmsaveproctlreg == 1)
+		sdhci_writel(host, esdhc_proctl, SDHCI_HOST_CONTROL);
+
+	return ret;
 }
 
 #else
@@ -124,7 +135,7 @@ static int __devinit sdhci_of_probe(struct of_device *ofdev,
 	struct sdhci_of_data *sdhci_of_data = match->data;
 	struct sdhci_host *host;
 	struct sdhci_of_host *of_host;
-	const u32 *clk;
+	const u32 *clk, *sdhc_proctl;
 	int size;
 	int ret;
 
@@ -216,6 +227,10 @@ static int __devinit sdhci_of_probe(struct of_device *ofdev,
 		}
 	}
 
+	sdhc_proctl = of_get_property(np, "pmsaveproctlreg", NULL);
+	if (sdhc_proctl && (*sdhc_proctl == 1))
+		sdhc_pmsaveproctlreg = 1;
+
 	ret = sdhci_add_host(host);
 	if (ret)
 		goto err_add_host;
-- 
1.7.0.4

