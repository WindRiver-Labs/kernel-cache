From 93396467a3e71b382927e093aa24bcaca3086bc1 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Tue, 28 Jun 2011 16:31:44 +0800
Subject: [PATCH 08/47] Fix removing talitos modules issue

When removing the talitos modules, the error message is as below,
Trying to free already-free IRQ 58
------------[ cut here ]------------
Badness at c0089250 [verbose debug info unavailable]
NIP: c0089250 LR: c0089250 CTR: c0277c88
REGS: ef3c5d20 TRAP: 0700   Not tainted  (2.6.32.13-00294-g3b3e483-dirty)
MSR: 00021000 <ME,CE>  CR: 24000424  XER: 20000000
TASK = ef3b9c80[2316] 'rmmod' THREAD: ef3c4000 CPU: 0
GPR00: c0089250 ef3c5dd0 ef3b9c80 00000026 00021000 ffffffff c0278720 00000000
GPR08: c06c77bc c06779bc 00005c7a 01599000 24000422 100196a4 7ff55a00 1007e528
GPR16: 100b93fc 10092404 100bb02c 00000000 00000000 100b9410 100d19a8 00000002
GPR24: 00000000 00100100 00029000 c06b671c 0000003a c06b66e0 ef9f5010 00000000
NIP [c0089250] __free_irq+0x170/0x1a0
LR [c0089250] __free_irq+0x170/0x1a0
Call Trace:
[ef3c5dd0] [c0089250] __free_irq+0x170/0x1a0 (unreliable)
[ef3c5df0] [c00892c0] free_irq+0x40/0x88
[ef3c5e10] [f9642564] talitos_remove+0x27c/0x288 [talitos]
[ef3c5e40] [c0399fc8] of_platform_device_remove+0x30/0x44
[ef3c5e50] [c0281370] __device_release_driver+0x68/0xc8
[ef3c5e60] [c02814a0] driver_detach+0xd0/0xd4
[ef3c5e80] [c02803e0] bus_remove_driver+0x90/0xe8
[ef3c5ea0] [c0281b14] driver_unregister+0x5c/0x84
[ef3c5eb0] [c039a0e4] of_unregister_driver+0x14/0x24
[ef3c5ec0] [f9646c3c] talitos_exit+0x1c/0x340 [talitos]
[ef3c5ed0] [c007da54] sys_delete_module+0x1ac/0x248
[ef3c5f40] [c001082c] ret_from_syscall+0x0/0x3c
Instruction dump:
2f800000 419e0014 7f83e378 7c0903a6 4e800421 4bffff3c 80090010 4bffffec
3c60c05b 7f84e378 38634240 4842e309 <0fe00000> 7f63db78 7f44d378 4842d999
Trying to free already-free IRQ 45
------------[ cut here ]------------
Badness at c0089250 [verbose debug info unavailable]
NIP: c0089250 LR: c0089250 CTR: c0277c88
REGS: ef3c5d20 TRAP: 0700   Tainted: G        W
(2.6.32.13-00294-g3b3e483-dirty)
MSR: 00021000 <ME,CE>  CR: 24000422  XER: 20000000
TASK = ef3b9c80[2316] 'rmmod' THREAD: ef3c4000 CPU: 0
GPR00: c0089250 ef3c5dd0 ef3b9c80 00000026 00021000 ffffffff c0278720 00000000
GPR08: c06c77bc 00000000 000062da 00000001 24000422 100196a4 7ff55a00 1007e528
GPR16: 100b93fc 10092404 100bb02c 00000000 00000000 100b9410 100d19a8 00000002
GPR24: 00000000 00100100 00029000 c06b623c 0000002d c06b6200 ef9f5010 00000000
NIP [c0089250] __free_irq+0x170/0x1a0
LR [c0089250] __free_irq+0x170/0x1a0
Call Trace:
[ef3c5dd0] [c0089250] __free_irq+0x170/0x1a0 (unreliable)
[ef3c5df0] [c00892c0] free_irq+0x40/0x88
[ef3c5e10] [f9642550] talitos_remove+0x268/0x288 [talitos]
[ef3c5e40] [c0399fc8] of_platform_device_remove+0x30/0x44
[ef3c5e50] [c0281370] __device_release_driver+0x68/0xc8
[ef3c5e60] [c02814a0] driver_detach+0xd0/0xd4
[ef3c5e80] [c02803e0] bus_remove_driver+0x90/0xe8
[ef3c5ea0] [c0281b14] driver_unregister+0x5c/0x84
[ef3c5eb0] [c039a0e4] of_unregister_driver+0x14/0x24
[ef3c5ec0] [f9646c3c] talitos_exit+0x1c/0x340 [talitos]
[ef3c5ed0] [c007da54] sys_delete_module+0x1ac/0x248
[ef3c5f40] [c001082c] ret_from_syscall+0x0/0x3c
Instruction dump:
2f800000 419e0014 7f83e378 7c0903a6 4e800421 4bffff3c 80090010 4bffffec
3c60c05b 7f84e378 38634240 4842e309 <0fe00000> 7f63db78 7f44d378 4842d999
Unable to handle kernel paging request for data at address 0x00000000
Faulting instruction address: 0xf9642280
Oops: Kernel access of bad area, sig: 11 [#1]
SMP NR_CPUS=2 P2020 DS
Modules linked in: talitos(-)
NIP: f9642280 LR: f96422a0 CTR: c00bbcb8
REGS: ef3c5d40 TRAP: 0300   Tainted: G        W
(2.6.32.13-00294-g3b3e483-dirty)
MSR: 00029000 <EE,ME,CE>  CR: 44000428  XER: 00000000
DEAR: 00000000, ESR: 00800000
TASK = ef3b9c80[2316] 'rmmod' THREAD: ef3c4000 CPU: 0
GPR00: 00100100 ef3c5df0 ef3b9c80 001000c0 c11ead20 ef369f00 c0387184 00000000
GPR08: 0000000f 00000000 00000003 00000000 0200800f 100196a4 7ff55a00 1007e528
GPR16: 100b93fc 10092404 100bb02c 00000000 00000000 100b9410 00000004 00000002
GPR24: ff7bf660 ff7bf668 ef9f5010 00100100 00200200 ef3bcea4 ef3bcc00 001000f0
NIP [f9642280] talitos_unregister_async_xor+0x48/0xb0 [talitos]
LR [f96422a0] talitos_unregister_async_xor+0x68/0xb0 [talitos]
Call Trace:
[ef3c5df0] [f96422a0] talitos_unregister_async_xor+0x68/0xb0 [talitos]
(unreliable)
[ef3c5e10] [f9642544] talitos_remove+0x25c/0x288 [talitos]
[ef3c5e40] [c0399fc8] of_platform_device_remove+0x30/0x44
[ef3c5e50] [c0281370] __device_release_driver+0x68/0xc8
[ef3c5e60] [c02814a0] driver_detach+0xd0/0xd4
[ef3c5e80] [c02803e0] bus_remove_driver+0x90/0xe8
[ef3c5ea0] [c0281b14] driver_unregister+0x5c/0x84
[ef3c5eb0] [c039a0e4] of_unregister_driver+0x14/0x24
[ef3c5ec0] [f9646c3c] talitos_exit+0x1c/0x340 [talitos]
[ef3c5ed0] [c007da54] sys_delete_module+0x1ac/0x248
[ef3c5f40] [c001082c] ret_from_syscall+0x0/0x3c
Instruction dump:
8003029c 2f800000 409e0084 7fddf378 87fd02a4 3f600010 3f800020 3bfffff0
637b0100 639c0200 48000030 817f0014 <912b0000> 91690004 937f0010 939f0014
---[ end trace c89d6d847b9d20e1 ]---
Segmentation fault

Extracted from vendor drop QorIQ-NONDPAA-SDK-V1-20110429_ltib.iso
linux-2.6.35-qoriq-Fix-removing-talitos-modules-issue.patch.

Signed-off-by: Jin Qing <b24347@freescale.com>
Signed-off-by: Li Yang <leoli@freescale.com>
Integrated-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/crypto/talitos.c |   12 +++++++-----
 1 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/crypto/talitos.c b/drivers/crypto/talitos.c
index 82dbe51..7695689 100644
--- a/drivers/crypto/talitos.c
+++ b/drivers/crypto/talitos.c
@@ -1173,13 +1173,15 @@ static void talitos_unregister_async_xor(struct device *dev)
 {
 	struct talitos_private *priv = dev_get_drvdata(dev);
 	struct talitos_xor_chan *xor_chan;
-	struct dma_chan *chan;
+	struct dma_chan *chan, *_chan;
 
 	if (priv->dma_dev_common.chancnt)
 		dma_async_device_unregister(&priv->dma_dev_common);
 
-	list_for_each_entry(chan, &priv->dma_dev_common.channels, device_node) {
-		xor_chan = container_of(chan, struct talitos_xor_chan, common);
+	list_for_each_entry_safe(chan, _chan, &priv->dma_dev_common.channels,
+				device_node) {
+		xor_chan = container_of(chan, struct talitos_xor_chan,
+					common);
 		list_del(&chan->device_node);
 		priv->dma_dev_common.chancnt--;
 		kfree(xor_chan);
@@ -2308,12 +2310,12 @@ static int talitos_remove(struct of_device *ofdev)
 	kfree(priv->chan);
 
 	if (priv->irq[1] != NO_IRQ) {
-		free_irq(priv->irq[1], dev);
+		free_irq(priv->irq[1], priv);
 		irq_dispose_mapping(priv->irq[1]);
 	}
 
 	if (priv->irq[0] != NO_IRQ) {
-		free_irq(priv->irq[0], dev);
+		free_irq(priv->irq[0], priv);
 		irq_dispose_mapping(priv->irq[0]);
 	}
 
-- 
1.7.0.4

