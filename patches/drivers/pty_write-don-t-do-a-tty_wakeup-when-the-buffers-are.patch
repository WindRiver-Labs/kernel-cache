From 276aaca7cff132772006a9069b65bfaa279413c3 Mon Sep 17 00:00:00 2001
From: xiao zhang <xzhang1@ala-lpggp1.wrs.com>
Date: Wed, 14 Aug 2013 18:35:51 -0700
Subject: [PATCH] pty_write: don't do a tty_wakeup() when the buffers are full

Commit 202c4675c55ddf6b443c7e057d2dff6b42ef71aa upstream.

Commit ac89a9174 ("pty: don't limit the writes to 'pty_space()' inside
'pty_write()'") removed the pty_space() checking, in order to let the
regular tty buffer code limit the buffering itself.

That was all good, but as a subtle side effect it meant that we'd be
doing a tty_wakeup() even in the case where the buffers were all filled
up, and didn't actually make any progress on the write.

Which sounds innocuous, but it interacts very badly with the ppp_async
code, which has an infinite loop in ppp_async_push() that tries to push
out data to the tty.  When we call tty_wakeup(), that loop ends up
thinking that progress was made (see the subtle interactions between
XMIT_WAKEUP and 'tty_stuffed' for details).  End result: one unhappy ppp
user.

Fixed by noticing when tty_insert_flip_string() didn't actually do
anything, and then not doing any more processing (including, very much
not calling tty_wakeup()).

Bisected-and-tested-by: Peter Volkov <pva@gentoo.org>
Cc: stable@kernel.org (2.6.31)
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: xiao zhang <xzhang1@ala-lpggp1.wrs.com>
---
 drivers/char/pty.c |   16 +++++++++-------
 1 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/drivers/char/pty.c b/drivers/char/pty.c
index 8386a77..15b0b01 100644
--- a/drivers/char/pty.c
+++ b/drivers/char/pty.c
@@ -115,13 +115,15 @@ static int pty_write(struct tty_struct * tty, const unsigned char *buf, int c)
 	if (tty->stopped)
 		return 0;
 
-       if (c > 0) {
-               /* Stuff the data into the input queue of the other end */
-               c = tty_insert_flip_string(to, buf, c);
-               /* And shovel */
-               tty_flip_buffer_push(to);
-               tty_wakeup(tty);
-        }
+	if (c > 0) {
+		/* Stuff the data into the input queue of the other end */
+		c = tty_insert_flip_string(to, buf, c);
+		/* And shovel */
+		if (c) {
+			tty_flip_buffer_push(to);
+			tty_wakeup(tty);
+		}
+	}
 	return c;
 }
 
-- 
1.7.0

