From 5b930c3a2b518f2aa0533a7cfedfc19185982ca5 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Tue, 9 Aug 2011 19:23:24 +0800
Subject: [PATCH 42/47] fix ETSEC L2SRAM support for no cache situations

When cache size is not set or the cache has been used up, ETSEC will
stop working.  This patch makes the ETSEC driver fallback to normal
memory allocation.

Extracted from vendor drop QorIQ-NONDPAA-SDK-V1-20110429_ltib.iso
linux-2.6.35-qoriq-fix-ETSEC-L2SRAM-support-for-no-cache-s.patch.

Signed-off-by: Li Yang <leoli@freescale.com>
Integrated-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 drivers/net/gianfar.c |   18 +++++++++++++++++-
 drivers/net/gianfar.h |    3 +++
 2 files changed, 20 insertions(+), 1 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index 46b1566..32b445e 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -280,6 +280,14 @@ unsigned long alloc_bds(struct gfar_private *priv, dma_addr_t *addr)
 			priv->total_rx_ring_size;
 	vaddr =  (unsigned long) mpc85xx_cache_sram_alloc(region_size,
 					(phys_addr_t *)addr, ALIGNMENT);
+	if (vaddr == NULL) {
+		/* fallback to normal memory rather than stop working */
+		vaddr = (unsigned long) dma_alloc_coherent(&priv->ofdev->dev,
+				region_size, addr, GFP_KERNEL);
+		priv->bd_in_ram = 1;
+	} else {
+		priv->bd_in_ram = 0;
+	}
 #else
 	region_size = sizeof(struct txbd8) * priv->total_tx_ring_size +
 			sizeof(struct rxbd8) * priv->total_rx_ring_size;
@@ -2185,7 +2193,15 @@ static void free_grp_irqs(struct gfar_priv_grp *grp)
 void free_bds(struct gfar_private *priv)
 {
 #ifdef CONFIG_GIANFAR_L2SRAM
-	mpc85xx_cache_sram_free(priv->tx_queue[0]->tx_bd_base);
+	if (priv->bd_in_ram) {
+		dma_free_coherent(&priv->ofdev->dev,
+			sizeof(struct txbd8) * priv->total_tx_ring_size +
+			sizeof(struct rxbd8) * priv->total_rx_ring_size,
+			priv->tx_queue[0]->tx_bd_base,
+			priv->tx_queue[0]->tx_bd_dma_base);
+	} else {
+		mpc85xx_cache_sram_free(priv->tx_queue[0]->tx_bd_base);
+	}
 #else
 	dma_free_coherent(&priv->ofdev->dev,
 			sizeof(struct txbd8) * priv->total_tx_ring_size +
diff --git a/drivers/net/gianfar.h b/drivers/net/gianfar.h
index c98e804..1850be5 100644
--- a/drivers/net/gianfar.h
+++ b/drivers/net/gianfar.h
@@ -1336,6 +1336,9 @@ struct gfar_private {
 	struct gfar_regs_1588 __iomem *ptimer;
 	struct resource timer_resource;
 	uint32_t ptimer_present;
+#ifdef CONFIG_GIANFAR_L2SRAM
+	int bd_in_ram;
+#endif
 };
 
 struct gfar_ptp_attr_t {
-- 
1.7.0.2

