From 6be0ac9545ab051230adcca50b198da7e5c4c5b1 Mon Sep 17 00:00:00 2001
From: "yadi.hu@windriver.com" <yadi.hu@windriver.com>
Date: Tue, 1 Aug 2017 16:50:49 +0800
Subject: [PATCH] fec: Fix ERR006358 tx hang due to TDAR bit cleared by uDMA

MTIP enet IP have one IC issue recorded at PDM ticket:TKT168103

The issue description: The TDAR bit after being set by software is not
acted upon by the ENET module due to the timing of when the ENET state
machine clearing the TDAR bit occurring coincident or momentarily after
the software sets the bit.

this patch is based on upstream
ccea2968398c ("net: fec: better implementation of iMX6 ERR006358 quirk")

Signed-off-by: Hu <yadi.hu@windriver.com>
---
 drivers/net/ethernet/freescale/fec_main.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fec_main.c b/drivers/net/ethernet/freescale/fec_main.c
index 31c6884..9ddb048 100644
--- a/drivers/net/ethernet/freescale/fec_main.c
+++ b/drivers/net/ethernet/freescale/fec_main.c
@@ -779,11 +779,12 @@ fec_enet_tx(struct net_device *ndev)
 			if (netif_queue_stopped(ndev))
 				netif_wake_queue(ndev);
 		}
+		if (bdp != fep->cur_tx && readl(fep->hwp + FEC_X_DES_ACTIVE) == 0)
+			writel(0, fep->hwp + FEC_X_DES_ACTIVE);
 	}
 	return;
 }
 
-
 /* During a receive, the cur_rx points to the current incoming buffer.
  * When we update through the ring, if the next incoming buffer has
  * not been given to the system, we just set the empty indicator,
-- 
1.7.5.4

