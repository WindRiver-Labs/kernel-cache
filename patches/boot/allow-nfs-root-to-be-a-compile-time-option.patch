From 30602ae55ad235b8794ec7e123e86f04c378ab9a Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce.ashfield@windriver.com>
Date: Thu, 8 Apr 2010 23:44:23 -0700
Subject: [PATCH 3/3] allow nfs root to be a compile time option

make NFS_ROOT compile time configurable with a sane
default so as to not surprise anyone.

Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
diff --git a/fs/Kconfig b/fs/Kconfig
index 771f457..ab3f137 100644
--- a/fs/Kconfig
+++ b/fs/Kconfig
@@ -213,6 +213,26 @@ if NETWORK_FILESYSTEMS
 source "fs/nfs/Kconfig"
 source "fs/nfsd/Kconfig"
 
+config ROOT_NFS_PATH
+	string "Default NFS Root file system path"
+	depends on ROOT_NFS
+	default "/tftpboot/%s"
+	help
+	  If you intend to boot your box with an NFS-mounted root filesystem,
+	  you will need to specify a path on your boot server where the
+	  filesytems is located.  If you don't specify one in your kernel boot
+	  arguments, or if you specify the 'ip=on' option, this is the path
+	  which will actually be used.  Only one format option is respected
+	  here, '%s' is translated into the ip address of your box, and it is
+	  only interpreted the first time it is found in the string.  Strings
+	  are silently truncated to 255 bytes total, including the string
+	  representation of the local IP address.
+
+	  This has no effect if you specify a path in your kernel boot
+	  arguments.
+
+	  Choose the default unless you know why you want something different.
+
 config LOCKD
 	tristate
 	depends on FILE_LOCKING
diff --git a/fs/nfs/nfsroot.c b/fs/nfs/nfsroot.c
index 903908a..e70a16f 100644
--- a/fs/nfs/nfsroot.c
+++ b/fs/nfs/nfsroot.c
@@ -84,7 +84,7 @@
 #define NFSDBG_FACILITY NFSDBG_ROOT
 
 /* Default path we try to mount. "%s" gets replaced by our IP address */
-#define NFS_ROOT		"/tftpboot/%s"
+#define NFS_ROOT		CONFIG_ROOT_NFS_PATH
 
 /* Parameters passed from the kernel command line */
 static char nfs_root_parms[256] __initdata = "";
@@ -134,7 +134,10 @@ static int __init nfs_root_setup(char *line)
 		size_t n = strlen(line) + sizeof(NFS_ROOT) - 1;
 		if (n >= sizeof(nfs_root_parms))
 			line[sizeof(nfs_root_parms) - sizeof(NFS_ROOT) - 2] = '\0';
-		sprintf(nfs_root_parms, NFS_ROOT, line);
+		if (strstr(NFS_ROOT, "%s"))
+			sprintf(nfs_root_parms, NFS_ROOT, line);
+		else
+			strlcpy(nfs_root_name, NFS_ROOT, sizeof(nfs_root_name));
 	}
 
 	/*
