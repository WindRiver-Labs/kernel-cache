From a71d0063db9e99f3dc824d82105d0a8c4d496f1d Mon Sep 17 00:00:00 2001
From: Ming Liu <ming.liu@windriver.com>
Date: Tue, 20 Mar 2012 09:23:08 +0800
Subject: [PATCH 1/2] security,rcu: convert call_rcu(user_update_rcu_disposal) to kfree_rcu()

commit 3acb458c32293405cf68985b7b3ac5dc0a5e7929 upstream

The rcu callback user_update_rcu_disposal() just calls a kfree(),
so we use kfree_rcu() instead of the call_rcu(user_update_rcu_disposal).

Signed-off-by: Lai Jiangshan <laijs@cn.fujitsu.com>
Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
Acked-by: David Howells <dhowells@redhat.com>
Reviewed-by: Josh Triplett <josh@joshtriplett.org>
Integrated-by: Ming Liu <ming.liu@windriver.com>
---
 security/keys/user_defined.c |   18 ++----------------
 1 files changed, 2 insertions(+), 16 deletions(-)

diff --git a/security/keys/user_defined.c b/security/keys/user_defined.c
index e9aa079..e4f04d1 100644
--- a/security/keys/user_defined.c
+++ b/security/keys/user_defined.c
@@ -72,20 +72,6 @@ EXPORT_SYMBOL_GPL(user_instantiate);
 
 /*****************************************************************************/
 /*
- * dispose of the old data from an updated user defined key
- */
-static void user_update_rcu_disposal(struct rcu_head *rcu)
-{
-	struct user_key_payload *upayload;
-
-	upayload = container_of(rcu, struct user_key_payload, rcu);
-
-	kfree(upayload);
-
-} /* end user_update_rcu_disposal() */
-
-/*****************************************************************************/
-/*
  * update a user defined key
  * - the key's semaphore is write-locked
  */
@@ -119,7 +105,7 @@ int user_update(struct key *key, const void *data, size_t datalen)
 		key->expiry = 0;
 	}
 
-	call_rcu(&zap->rcu, user_update_rcu_disposal);
+	kfree_rcu(zap, rcu);
 
 error:
 	return ret;
@@ -154,7 +140,7 @@ void user_revoke(struct key *key)
 
 	if (upayload) {
 		rcu_assign_pointer(key->payload.data, NULL);
-		call_rcu(&upayload->rcu, user_update_rcu_disposal);
+		kfree_rcu(upayload, rcu);
 	}
 
 } /* end user_revoke() */
-- 
1.7.0.4

