From 3479969447e176c45a1dc361847776074a630e2e Mon Sep 17 00:00:00 2001
From: Jody Bruchon <jody@nctritech.com>
Date: Wed, 7 Apr 2010 20:20:25 +0800
Subject: [PATCH] ALSA: hda-intel: Avoid divide by zero crash

commit fed08d036f2aabd8d0c684439de37f8ebec2bbc2 from upstream

On my AMD780V chipset, hda_intel.c can crash the kernel with a divide by
zero
for as-yet unknown reasons. A simple check for zero prevents it, though
the problem that causes it remains. Since the workaround is harmless and
won't affect anyone except victims of this bug, it should be safe;
moreover,
because this crash can be triggered by a user-mode application, there are
denial of service implications on the systems affected by the bug without
the patch.

Signed-off-by: Jody Bruchon <jody@nctritech.com>
Cc: <stable@kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 sound/pci/hda/hda_intel.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/sound/pci/hda/hda_intel.c b/sound/pci/hda/hda_intel.c
index 0b93ef6..b07943e 100644
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@ -1563,6 +1563,12 @@ static int azx_position_ok(struct azx *chip, struct azx_dev *azx_dev)
 			chip->position_fix = POS_FIX_POSBUF;
 	}
 
+	if (azx_dev->period_bytes == 0) {
+		printk(KERN_WARNING
+			"hda-intel: Divide by zero was avoided "
+			"in azx_dev->period_bytes.\n");
+		return 0;
+	}
 	if (pos % azx_dev->period_bytes > azx_dev->period_bytes / 2)
 		return 0; /* NG - it's below the period boundary */
 	return 1; /* OK, it's fine */
-- 
1.6.0.4

