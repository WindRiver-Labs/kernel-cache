From 7c1a7f3a6b73fa77af8fd39a32b5eee5681767c8 Mon Sep 17 00:00:00 2001
From: Wenlin Kang <wenlin.kang@windriver.com>
Date: Wed, 17 Dec 2014 14:54:15 +0800
Subject: [PATCH] mips/oprofile: correct array segranges's value

This patch corrects array segranges's value, solve some missing oprofile
output which was introduced by "oprofile: fix RCU core stalled failures
in backtrace logic".

Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../asm/mach-cavium-octeon/cpu-feature-overrides.h |    4 ++++
 arch/mips/oprofile/context.c                       |    4 ++--
 arch/mips/oprofile/mem_validate.h                  |    6 +++---
 arch/mips/oprofile/mips_crawl.c                    |    9 +++++----
 4 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/arch/mips/include/asm/mach-cavium-octeon/cpu-feature-overrides.h b/arch/mips/include/asm/mach-cavium-octeon/cpu-feature-overrides.h
index bbf0540..3391776 100644
--- a/arch/mips/include/asm/mach-cavium-octeon/cpu-feature-overrides.h
+++ b/arch/mips/include/asm/mach-cavium-octeon/cpu-feature-overrides.h
@@ -14,6 +14,10 @@
 /*
  * Cavium Octeons are MIPS64v2 processors
  */
+
+ /* for cavium_oceton: SEGBITS is 49. */
+#define MIPS_SEGBITS		49
+
 #define cpu_dcache_line_size()	128
 #define cpu_icache_line_size()	128
 
diff --git a/arch/mips/oprofile/context.c b/arch/mips/oprofile/context.c
index 553793f..d96a276 100644
--- a/arch/mips/oprofile/context.c
+++ b/arch/mips/oprofile/context.c
@@ -108,7 +108,7 @@ bool apply_delta(const struct new_value_delta *const delta,
 			    (void *)((unsigned long)child->gpregs[delta->reg] +
 				     delta->offset);
 		}
-		if (!octeon_addr_valid(target) ||
+		if (!mips_addr_valid(target) ||
 			probe_kernel_read(result, target, sizeof(*result))) {
 			d1printf("Invalid address %p picked up from gpregs+%d\n",
 				target, delta->reg);
@@ -220,7 +220,7 @@ bool apply_context_results(struct op_context *const child,
 			     target);
 			return false;
 		}
-		if (!octeon_addr_valid(target) ||
+		if (!mips_addr_valid(target) ||
 			probe_kernel_read(&parent->pc, target, sizeof(parent->pc)))
 			return false;
 	}
diff --git a/arch/mips/oprofile/mem_validate.h b/arch/mips/oprofile/mem_validate.h
index 85a87ff..350766f 100644
--- a/arch/mips/oprofile/mem_validate.h
+++ b/arch/mips/oprofile/mem_validate.h
@@ -78,8 +78,8 @@ struct memory_access_data {
 };
 
 
-/* patch for cavium_oceton board ranges */
-bool octeon_addr_valid(const void *target);
+/* patch for board ranges */
+bool mips_addr_valid(const void *target);
 
 /*
  * PCOk - check for valid PC address
@@ -93,7 +93,7 @@ bool octeon_addr_valid(const void *target);
  */
 static inline bool PCOk(const void const *pc, struct memory_access_data *membuf)
 {
-	if (!octeon_addr_valid(pc))
+	if (!mips_addr_valid(pc))
 		return false;
 
 	if (__will_fault(pc, sizeof(tInst)))
diff --git a/arch/mips/oprofile/mips_crawl.c b/arch/mips/oprofile/mips_crawl.c
index 308a796..e6e7db7 100644
--- a/arch/mips/oprofile/mips_crawl.c
+++ b/arch/mips/oprofile/mips_crawl.c
@@ -264,13 +264,14 @@ static const struct SEGRANGE const segranges[] = {
 	{"ksseg", (void *)0xffffffffc0000000, (void *)0xffffffffdfffffff},
 	{"kseg1", (void *)0xffffffffa0000000, (void *)0xffffffffbfffffff},
 	{"kseg0", (void *)0xffffffff80000000, (void *)0xffffffff9fffffff},
-	{"xkseg", (void *)0xc000000000000000, (void *)0xc000001fffffffff},
-	{"xsseg", (void *)0x4000000000000000, (void *)0x4000001fffffffff},
-	{"xuseg", (void *)0x0000000080000000, (void *)0x0000001fffffffff},
+	{"xkseg", (void *)0xc000000000000000, (void *)(0xc000000000000000 + (1UL << MIPS_SEGBITS) - (1UL << 31) - 1)},
+	{"xkphys",(void *)0x8000000000000000, (void *)0xbfffffffffffffff},
+	{"xsseg", (void *)0x4000000000000000, (void *)(0x4000000000000000 + (1UL << MIPS_SEGBITS) - 1)},
+	{"xuseg", (void *)0x0000000080000000, (void *)((1UL << MIPS_SEGBITS) - 1)},
 	{"useg",  (void *)0x0000000000000000, (void *)0x000000007fffffff}
 };
 
-bool octeon_addr_valid(const void *target)
+bool mips_addr_valid(const void *target)
 {
 #if defined(CONFIG_64BIT)
 	int i;
-- 
1.7.0

