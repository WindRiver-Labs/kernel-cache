From 0d56d161edf0fb83d8dd58f292f38e338cb052ac Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Thu, 30 Aug 2012 00:51:38 -0700
Subject: [PATCH 327/628] Xilinx: ARM: xgpiops: Error handling

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 95c97125134201a8a77ca606f5b41095bbd37bba

Using clk_prepare_enable() and clk_disable_unprepare() in favor of
calling (un)prepare and dis/enable routines individually.
Honoring clk_prepare_enable() return code to recognize an error.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/gpio/gpio-xilinxps.c |   13 +++++++++----
 1 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/gpio/gpio-xilinxps.c b/drivers/gpio/gpio-xilinxps.c
index 1b3772f..a30579d 100644
--- a/drivers/gpio/gpio-xilinxps.c
+++ b/drivers/gpio/gpio-xilinxps.c
@@ -569,10 +569,14 @@ static int __init xgpiops_probe(struct platform_device *pdev)
 	gpio->clk = clk_get_sys("GPIO_APER", NULL);
 	if (IS_ERR(gpio->clk)) {
 		pr_err("Xilinx GPIOPS clock not found.\n");
+		ret = PTR_ERR(gpio->clk);
 		goto err_chip_remove;
 	}
-	clk_prepare(gpio->clk);
-	clk_enable(gpio->clk);
+	ret = clk_prepare_enable(gpio->clk);
+	if (ret) {
+		pr_err("Xilinx GPIOPS unable to enable clock.\n");
+		goto err_clk_put;
+	}
 #endif
 
 	/* disable interrupts for all banks */
@@ -602,6 +606,8 @@ static int __init xgpiops_probe(struct platform_device *pdev)
 	return 0;
 
 #ifdef CONFIG_COMMON_CLK
+err_clk_put:
+	clk_put(gpio->clk);
 err_chip_remove:
 	gpiochip_remove(chip);
 #endif
@@ -621,8 +627,7 @@ static int xgpiops_remove(struct platform_device *pdev)
 #ifdef CONFIG_COMMON_CLK
 	struct xgpiops *gpio = platform_get_drvdata(pdev);
 
-	clk_disable(gpio->clk);
-	clk_unprepare(gpio->clk);
+	clk_disable_unprepare(gpio->clk);
 	clk_put(gpio->clk);
 #endif
 	return 0;
-- 
1.7.5.4

