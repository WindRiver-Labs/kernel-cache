From ad16f4e67462e82141723074c528b2a6d111d226 Mon Sep 17 00:00:00 2001
From: David Vrabel <david.vrabel@citrix.com>
Date: Thu, 27 Jun 2013 11:35:46 +0100
Subject: [PATCH 2/4] timekeeping: Indicate that clock was set in the pvclock
 gtod notifier

commit 780427f0e113b4c77dfff4d258c05a902cdb0eb9 upstream

If the clock was set (stepped), set the action parameter to functions
in the pvclock gtod notifier chain to non-zero.  This allows the
callee to only do work if the clock was stepped.

This will be used on Xen as the synchronization of the Xen wallclock
to the control domain's (dom0) system time will be done with this
notifier and updating on every timer tick is unnecessary and too
expensive.

Signed-off-by: David Vrabel <david.vrabel@citrix.com>
Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Cc: John Stultz <john.stultz@linaro.org>
Cc: <xen-devel@lists.xen.org>
Link: http://lkml.kernel.org/r/1372329348-20841-4-git-send-email-david.vrabel@citrix.com
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Shan Hai <shan.hai@windriver.com>
---
 kernel/time/timekeeping.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/kernel/time/timekeeping.c b/kernel/time/timekeeping.c
index 14946d6..aab8568 100644
--- a/kernel/time/timekeeping.c
+++ b/kernel/time/timekeeping.c
@@ -48,6 +48,7 @@ struct timekeeper {
 	/* NTP adjusted clock multiplier */
 	u32	mult;
 };
+#define TK_CLOCK_WAS_SET	(1 << 2)
 
 struct timekeeper timekeeper;
 
@@ -800,9 +801,10 @@ static void timekeeping_adjust(s64 offset)
  * It also calls into the NTP code to handle leapsecond processing.
  *
  */
-static inline void accumulate_nsecs_to_secs(struct timekeeper *tk)
+static inline unsigned int accumulate_nsecs_to_secs(struct timekeeper *tk)
 {
 	u64 nsecps = (u64)NSEC_PER_SEC << tk->shift;
+	unsigned int action = 0;
 
 	while (tk->xtime_nsec >= nsecps) {
 		int leap;
@@ -811,9 +813,12 @@ static inline void accumulate_nsecs_to_secs(struct timekeeper *tk)
 		leap = second_overflow(xtime.tv_sec);
 		xtime.tv_sec += leap;
 		wall_to_monotonic.tv_sec -= leap;
-		if (leap)
+		if (leap) {
 			clock_was_set_delayed();
+			action = TK_CLOCK_WAS_SET;
+		}
 	}
+	return action;
 }
 
 
-- 
1.7.5.4

