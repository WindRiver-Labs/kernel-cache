From 9737caf9512f5bd585b11cc7fd50a3c74671dc87 Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Thu, 29 Nov 2012 11:37:45 -0800
Subject: [PATCH 345/628] gpio: xilinxps: Enable clock for non PM mode

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit f300d346e182348e70ee20aeb50bbf15e98af406

Assuming the device clock would be enabled through RUNTIME_PM,
the clock was disabled in the driver's probe routine.
Obviously, this did break functionality in case the kernel is
compiled without CONFIG_PM_RUNTIME.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/gpio/gpio-xilinxps.c |   12 ++++++++++--
 1 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/gpio/gpio-xilinxps.c b/drivers/gpio/gpio-xilinxps.c
index 4991e34..1e19ebc 100644
--- a/drivers/gpio/gpio-xilinxps.c
+++ b/drivers/gpio/gpio-xilinxps.c
@@ -503,9 +503,18 @@ static void xgpiops_free(struct gpio_chip *chip, unsigned offset)
 	pm_runtime_put_sync(chip->dev);
 }
 
+static void xgpiops_pm_runtime_init(struct platform_device *pdev)
+{
+	struct xgpiops *gpio = platform_get_drvdata(pdev);
+
+	clk_disable(gpio->clk);
+	pm_runtime_enable(&pdev->dev);
+}
+
 #else /* ! CONFIG_PM_RUNTIME */
 #define xgpiops_request	NULL
 #define xgpiops_free	NULL
+static void xgpiops_pm_runtime_init(struct platform_device *pdev) {}
 #endif /* ! CONFIG_PM_RUNTIME */
 
 #if defined(CONFIG_PM_RUNTIME) || defined(CONFIG_PM_SLEEP)
@@ -639,8 +648,7 @@ static int __devinit xgpiops_probe(struct platform_device *pdev)
 	irq_set_handler_data(irq_num, (void *)(XGPIOPS_IRQBASE));
 	irq_set_chained_handler(irq_num, xgpiops_irqhandler);
 
-	clk_disable(gpio->clk);
-	pm_runtime_enable(&pdev->dev);
+	xgpiops_pm_runtime_init(pdev);
 
 	device_set_wakeup_capable(&pdev->dev, 1);
 
-- 
1.7.5.4

