From b4b749c24af3547525899563e94d9d20cdcf27e3 Mon Sep 17 00:00:00 2001
From: Junxiao Bi <junxiao.bi@windriver.com>
Date: Tue, 20 Mar 2012 17:15:56 +0800
Subject: [PATCH] security: fix compile issue

When CONFIG_SECURITY is disabled, the following compile error is reported,
In file included from init/main.c:33:
include/linux/security.h:1820: error: static declaration of 'security_capable' follows non-static declaration
include/linux/capability.h:523: error: previous declaration of 'security_capable' was here
include/linux/security.h:1825: error: static declaration of 'security_capable_noaudit' follows non-static declaration
linux/capability.h:524: error: previous declaration of 'security_capable_noaudit' was here
scripts/Makefile.build:214: *** [init/main.o] Error 1
Makefile:872: *** [init] Error 2
Makefile:128: *** [sub-make] Error 2

As these two functions have been declared in include/linux/security.h,
so remove them here.

Signed-off-by: Junxiao Bi <junxiao.bi@windriver.com>
---
 include/linux/capability.h |    2 --
 1 files changed, 0 insertions(+), 2 deletions(-)

diff --git a/include/linux/capability.h b/include/linux/capability.h
index 60da9c5..82af92e 100644
--- a/include/linux/capability.h
+++ b/include/linux/capability.h
@@ -520,8 +520,6 @@ extern const kernel_cap_t __cap_init_eff_set;
 
 kernel_cap_t cap_set_effective(const kernel_cap_t pE_new);
 
-extern int security_capable(struct task_struct *t, int cap);
-extern int security_capable_noaudit(struct task_struct *t, int cap);
 /**
  * has_capability - Determine if a task has a superior capability available
  * @t: The task in question
-- 
1.7.0.4

