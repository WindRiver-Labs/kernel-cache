From bceee9f6d05df2de6a95e677fad8ded954bbc8cc Mon Sep 17 00:00:00 2001
From: Suneel <suneelg@xilinx.com>
Date: Thu, 30 Aug 2012 17:27:05 +0530
Subject: [PATCH 297/628] Xilinx: ARM: I2C: Support for TI PMBus Controllers
 on ZC702

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit cbb99801b4430beb0bbfc401134f35dfe0ecfe87

This patch adds support for I2C_M_RECV_LEN flag and
SMBUS Block Read call in I2C Controller driver.
This support is required by TI PMBus controller driver.

Signed-off-by: Suneel <suneelg@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/i2c/busses/i2c-xilinx_ps.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/i2c/busses/i2c-xilinx_ps.c b/drivers/i2c/busses/i2c-xilinx_ps.c
index bb117b5..2a98a1f 100644
--- a/drivers/i2c/busses/i2c-xilinx_ps.c
+++ b/drivers/i2c/busses/i2c-xilinx_ps.c
@@ -316,6 +316,9 @@ static void xi2cps_mrecv(struct xi2cps *id)
 	ctrl_reg = xi2cps_readreg(XI2CPS_CR_OFFSET);
 	ctrl_reg |= (XI2CPS_CR_RW_MASK | XI2CPS_CR_CLR_FIFO_MASK);
 
+	if ((id->p_msg->flags & I2C_M_RECV_LEN) == I2C_M_RECV_LEN)
+		id->recv_count = I2C_SMBUS_BLOCK_MAX + 1;
+
 	if (id->recv_count > XI2CPS_FIFO_DEPTH)
 		ctrl_reg |= XI2CPS_CR_HOLD_BUS_MASK;
 
@@ -341,7 +344,8 @@ static void xi2cps_mrecv(struct xi2cps *id)
 	/*
 	 * Clear the bus hold flag if bytes to receive is less than FIFO size.
 	 */
-		if (id->bus_hold_flag == 0) {
+		if (id->bus_hold_flag == 0 &&
+		((id->p_msg->flags & I2C_M_RECV_LEN) != I2C_M_RECV_LEN)) {
 			/* Clear the hold bus bit */
 			ctrl_reg = xi2cps_readreg(XI2CPS_CR_OFFSET);
 			if ((ctrl_reg & XI2CPS_CR_HOLD_BUS_MASK)
@@ -542,7 +546,8 @@ retry:
 static u32 xi2cps_func(struct i2c_adapter *adap)
 {
 	return I2C_FUNC_I2C | I2C_FUNC_10BIT_ADDR | \
-		(I2C_FUNC_SMBUS_EMUL & ~I2C_FUNC_SMBUS_QUICK);
+		(I2C_FUNC_SMBUS_EMUL & ~I2C_FUNC_SMBUS_QUICK) | \
+		I2C_FUNC_SMBUS_BLOCK_DATA;
 }
 
 static const struct i2c_algorithm xi2cps_algo = {
-- 
1.7.5.4

