From c1315e36a50702971056eacf90f585f6239404a8 Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Fri, 16 Nov 2012 18:17:39 -0800
Subject: [PATCH 220/628] spi: xilinx_spips: Fix potential memory leaks

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 1bbe0990d0434d0f6791b2b6fc2741d3da8fb0d4

The spi_master struct was dynamically allocated but never freed.
Memory allocation used the type instead of *identifier to determine
the size of the area to allocate.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Acked-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/spi/spi-xilinx-ps.c |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

diff --git a/drivers/spi/spi-xilinx-ps.c b/drivers/spi/spi-xilinx-ps.c
index 18fea36..985d2c2 100644
--- a/drivers/spi/spi-xilinx-ps.c
+++ b/drivers/spi/spi-xilinx-ps.c
@@ -645,7 +645,7 @@ static int __devinit xspips_probe(struct platform_device *dev)
 	struct resource *r;
 	const unsigned int *prop;
 
-	master = spi_alloc_master(&dev->dev, sizeof(struct xspips));
+	master = spi_alloc_master(&dev->dev, sizeof(*xspi));
 	if (master == NULL)
 		return -ENOMEM;
 
@@ -769,6 +769,7 @@ release_mem:
 put_master:
 	platform_set_drvdata(dev, NULL);
 	spi_master_put(master);
+	kfree(master);
 	return ret;
 }
 
@@ -807,6 +808,7 @@ static int __devexit xspips_remove(struct platform_device *dev)
 
 	spi_unregister_master(master);
 	spi_master_put(master);
+	kfree(master);
 
 	/* Prevent double remove */
 	platform_set_drvdata(dev, NULL);
-- 
1.7.5.4

