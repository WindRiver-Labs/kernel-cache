From aa7a462fe947876df7e61b8c8ad72c59281cb3b4 Mon Sep 17 00:00:00 2001
From: Liming Wang <liming.wang@windriver.com>
Date: Tue, 25 Mar 2014 21:15:57 +0800
Subject: [PATCH 239/628] spi: xilinx-ps: Remove __devinit, __devexit,
 __definitdata, __devexit_p, __exit_p

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 068160c0 Merge commit 'v3.8' into master-next

cherry picked the xilinx spi driver modification.

Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/spi/spi-xilinx-ps.c  |    8 ++++----
 drivers/spi/spi-xilinx-qps.c |   14 +++++++-------
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/drivers/spi/spi-xilinx-ps.c b/drivers/spi/spi-xilinx-ps.c
index 3a27b6e..04973c3 100644
--- a/drivers/spi/spi-xilinx-ps.c
+++ b/drivers/spi/spi-xilinx-ps.c
@@ -649,7 +649,7 @@ static int xspips_clk_notifier_cb(struct notifier_block *nb,
  *
  * returns:	0 on success and error value on error
  **/
-static int __devinit xspips_probe(struct platform_device *dev)
+static int xspips_probe(struct platform_device *dev)
 {
 	int ret = 0;
 	struct spi_master *master;
@@ -836,7 +836,7 @@ put_master:
  *
  * returns:	0 on success and error value on error
  **/
-static int __devexit xspips_remove(struct platform_device *dev)
+static int xspips_remove(struct platform_device *dev)
 {
 	struct spi_master *master = platform_get_drvdata(dev);
 	struct xspips *xspi = spi_master_get_devdata(master);
@@ -963,7 +963,7 @@ static const struct dev_pm_ops xspips_dev_pm_ops = {
 /* Work with hotplug and coldplug */
 MODULE_ALIAS("platform:" XSPIPS_NAME);
 
-static struct of_device_id xspips_of_match[] __devinitdata = {
+static struct of_device_id xspips_of_match[] = {
 	{ .compatible = "xlnx,ps7-spi-1.00.a", },
 	{ /* end of table */}
 };
@@ -974,7 +974,7 @@ MODULE_DEVICE_TABLE(of, xspips_of_match);
  */
 static struct platform_driver xspips_driver = {
 	.probe	= xspips_probe,
-	.remove	= __devexit_p(xspips_remove),
+	.remove	= xspips_remove,
 	.driver = {
 		.name = XSPIPS_NAME,
 		.owner = THIS_MODULE,
diff --git a/drivers/spi/spi-xilinx-qps.c b/drivers/spi/spi-xilinx-qps.c
index 3ebbd63..c433cee 100644
--- a/drivers/spi/spi-xilinx-qps.c
+++ b/drivers/spi/spi-xilinx-qps.c
@@ -200,7 +200,7 @@ struct xqspips_inst_format {
 /*
  * List of all the QSPI instructions and its format
  */
-static struct xqspips_inst_format __devinitdata flash_inst[] = {
+static struct xqspips_inst_format flash_inst[] = {
 	{ XQSPIPS_FLASH_OPCODE_WREN, 1, XQSPIPS_TXD_00_01_OFFSET },
 	{ XQSPIPS_FLASH_OPCODE_WRDS, 1, XQSPIPS_TXD_00_01_OFFSET },
 	{ XQSPIPS_FLASH_OPCODE_RDSR1, 1, XQSPIPS_TXD_00_01_OFFSET },
@@ -597,7 +597,7 @@ static irqreturn_t xqspips_irq(int irq, void *dev_id)
  *
  * returns:	Number of bytes transferred in the last transfer
  **/
-static int __devinit xqspips_start_transfer(struct spi_device *qspi,
+static int xqspips_start_transfer(struct spi_device *qspi,
 			struct spi_transfer *transfer)
 {
 	struct xqspips *xqspi = spi_master_get_devdata(qspi->master);
@@ -696,7 +696,7 @@ xfer_data:
  * xqspips_work_queue - Get the request from queue to perform transfers
  * @work:	Pointer to the work_struct structure
  **/
-static void __devinit xqspips_work_queue(struct work_struct *work)
+static void xqspips_work_queue(struct work_struct *work)
 {
 	struct xqspips *xqspi = container_of(work, struct xqspips, work);
 	unsigned long flags;
@@ -1015,7 +1015,7 @@ static const struct dev_pm_ops xqspips_dev_pm_ops = {
  *
  * returns:	0 on success and error value on failure
  **/
-static int __devinit xqspips_probe(struct platform_device *dev)
+static int xqspips_probe(struct platform_device *dev)
 {
 	int ret = 0;
 	struct spi_master *master;
@@ -1201,7 +1201,7 @@ put_master:
  *
  * returns:	0 on success and error value on failure
  **/
-static int __devexit xqspips_remove(struct platform_device *dev)
+static int xqspips_remove(struct platform_device *dev)
 {
 	struct spi_master *master = platform_get_drvdata(dev);
 	struct xqspips *xqspi = spi_master_get_devdata(master);
@@ -1246,7 +1246,7 @@ static int __devexit xqspips_remove(struct platform_device *dev)
 /* Work with hotplug and coldplug */
 MODULE_ALIAS("platform:" DRIVER_NAME);
 
-static struct of_device_id xqspips_of_match[] __devinitdata = {
+static struct of_device_id xqspips_of_match[] = {
 	{ .compatible = "xlnx,ps7-qspi-1.00.a", },
 	{ /* end of table */}
 };
@@ -1257,7 +1257,7 @@ MODULE_DEVICE_TABLE(of, xqspips_of_match);
  */
 static struct platform_driver xqspips_driver = {
 	.probe	= xqspips_probe,
-	.remove	= __devexit_p(xqspips_remove),
+	.remove	= xqspips_remove,
 	.driver = {
 		.name = DRIVER_NAME,
 		.owner = THIS_MODULE,
-- 
1.7.5.4

