From 9525c4b2489168367d9d0c6a4df1887d735decf2 Mon Sep 17 00:00:00 2001
From: Naveen Mamindlapalli <naveen.mamindlapalli@xilinx.com>
Date: Fri, 8 Mar 2013 20:16:17 +0530
Subject: [PATCH 513/628] usb: xilinxps_udc: Fixed USB halt endpoint support.

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit d5d710a976e32975cf55348535f09af55441c0b9

Fixed USB halt endpoint support as part of compliance testing
using Windows USBCV tool. The halt endpoint test is
working with g_mass_storage and g_ether gadget. It fails with
g_zero because of g_zero queuing some BULK requests and DCD is
checking whether endpoint request queue is empty before halting.

Signed-off-by: Naveen Mamindlapalli <naveenm@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/usb/gadget/xilinx_usbps_udc.c |    9 ++++++++-
 1 files changed, 8 insertions(+), 1 deletions(-)

diff --git a/drivers/usb/gadget/xilinx_usbps_udc.c b/drivers/usb/gadget/xilinx_usbps_udc.c
index 88d0d34..595d18f 100644
--- a/drivers/usb/gadget/xilinx_usbps_udc.c
+++ b/drivers/usb/gadget/xilinx_usbps_udc.c
@@ -1767,6 +1767,10 @@ static int ep0_prime_status(struct xusbps_udc *udc, int direction)
 	req->req.actual = 0;
 	req->req.complete = NULL;
 	req->dtd_count = 0;
+	req->req.dma = dma_map_single(ep->udc->gadget.dev.parent,
+				req->req.buf, req->req.length,
+				ep_is_in(ep) ? DMA_TO_DEVICE : DMA_FROM_DEVICE);
+	req->mapped = 1;
 
 	if (xusbps_req_to_dtd(req) == 0)
 		xusbps_queue_td(ep, req);
@@ -1837,6 +1841,10 @@ static void ch9getstatus(struct xusbps_udc *udc, u8 request_type, u16 value,
 	req->req.actual = 0;
 	req->req.complete = NULL;
 	req->dtd_count = 0;
+	req->req.dma = dma_map_single(ep->udc->gadget.dev.parent,
+				req->req.buf, req->req.length,
+				ep_is_in(ep) ? DMA_TO_DEVICE : DMA_FROM_DEVICE);
+	req->mapped = 1;
 
 	/* prime the data phase */
 	if ((xusbps_req_to_dtd(req) == 0))
@@ -2698,7 +2706,6 @@ static int __devinit struct_udc_setup(struct xusbps_udc *udc,
 			struct xusbps_req, req);
 	/* allocate a small amount of memory to get valid address */
 	udc->status_req->req.buf = kmalloc(8, GFP_KERNEL);
-	udc->status_req->req.dma = virt_to_phys(udc->status_req->req.buf);
 
 	udc->resume_state = USB_STATE_NOTATTACHED;
 	udc->usb_state = USB_STATE_POWERED;
-- 
1.7.5.4

