From b323e420207054f98f57cbf0e87cb687f0cc79f9 Mon Sep 17 00:00:00 2001
From: Li Zhou <li.zhou@windriver.com>
Date: Wed, 23 Dec 2015 14:45:39 +0800
Subject: [PATCH] aufs3: mmap: Fix races in madvise_remove() and sys_msync()

Bug-Debian: https://bugs.debian.org/796036

In madvise_remove() and sys_msync() we drop the mmap_sem before
dropping references to the mapped file(s).  As soon as we drop the
mmap_sem, the vma we got them from might be destroyed by another
thread, so calling vma_do_fput() is a possible use-after-free.

In these cases we don't actually need a reference to the aufs file, so
revert to using get_file() and fput() directly.

Signed-off-by: Ben Hutchings <ben@...>
[lz: This patch comes from
<http://sourceforge.net/p/aufs/mailman/message/34449209/>, for
CVE-2015-7312. It has been accepted by aufs upstream as
Commit c17d4026280ab660d1da2002437fcdebdd3c06ba on branch aufs3.14
of <git://git.code.sf.net/p/aufs/aufs3-standalone>. Since the original
commit works as patch's patch, here just pull in it in a patch's format.]
Signed-off-by: Li Zhou <li.zhou@windriver.com>
---
 mm/madvise.c |    4 ++--
 mm/msync.c   |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/mm/madvise.c b/mm/madvise.c
index a19bcbc..f5e5daa 100644
--- a/mm/madvise.c
+++ b/mm/madvise.c
@@ -358,12 +358,12 @@ static long madvise_remove(struct vm_area_struct *vma,
 	 * vma's reference to the file) can go away as soon as we drop
 	 * mmap_sem.
 	 */
-	vma_get_file(vma);
+	get_file(f);
 	up_read(&current->mm->mmap_sem);
 	error = do_fallocate(f,
 				FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE,
 				offset, end - start);
-	vma_fput(vma);
+	fput(f);
 	down_read(&current->mm->mmap_sem);
 	return error;
 }
diff --git a/mm/msync.c b/mm/msync.c
index 02d770e..632df45 100644
--- a/mm/msync.c
+++ b/mm/msync.c
@@ -80,10 +80,10 @@ SYSCALL_DEFINE3(msync, unsigned long, start, size_t, len, int, flags)
 		start = vma->vm_end;
 		if ((flags & MS_SYNC) && file &&
 				(vma->vm_flags & VM_SHARED)) {
-			vma_get_file(vma);
+			get_file(file);
 			up_read(&mm->mmap_sem);
 			error = vfs_fsync(file, 0);
-			vma_fput(vma);
+			fput(file);
 			if (error || start >= end)
 				goto out;
 			down_read(&mm->mmap_sem);
-- 
1.7.5.4

