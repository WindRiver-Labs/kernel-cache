From cb11b4acc1ce12040b2b89017c0e6246d95bc8c0 Mon Sep 17 00:00:00 2001
From: Anirudha Sarangi <anirudh@xilinx.com>
Date: Wed, 3 Apr 2013 23:07:01 +0530
Subject: [PATCH 377/628] xilinx_emacps: Fix bug in the logic for fragmented
 packets

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 6c87e8a552cfaebe050c0f6a6de0a7fa8e0fbb26

The existing driver has a bug for freeing up Tx BDs for fragmented
Tx packets. This patch fixes it.

Signed-off-by: Anirudha Sarangi <anirudh@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |   10 ++++++----
 1 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 7b307be..dbc1448 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -1295,10 +1295,12 @@ static void xemacps_tx_poll(unsigned long data)
 	cur_i = lp->tx_bd_ci;
 	cur_p = &lp->tx_bd[cur_i];
 	while (bdcount < XEMACPS_SEND_BD_CNT) {
-		if ((sop == 0) && (cur_p->ctrl & XEMACPS_TXBUF_USED_MASK))
-			sop = 1;
-		else
-			break;
+		if (sop == 0) {
+			if (cur_p->ctrl & XEMACPS_TXBUF_USED_MASK)
+				sop = 1;
+			else
+				break;
+		}
 
 		if (sop == 1) {
 			bdcount++;
-- 
1.7.5.4

