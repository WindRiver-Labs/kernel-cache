From 6904d4d12b2ad393a3b88c46d46ae2a95ca94532 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Wed, 20 Mar 2013 16:15:36 +0800
Subject: [PATCH 4/4] NFS: Replace get_expiry by get_uint to avoid exportfs failure

exportfs would failed after change the system time to "19700101" and
nfs client side can't mount the accordingly directory(hang forever):
  # date -s "19700101"
  Thu Jan  1 00:00:00 GMT 1970
  # exportfs -av
  exporting *:/tmp/nfsserver
  exportfs: /tmp/nfsserver does not support NFS export

This is a regression problem caused by upstream commit c5b29f885 ("sunrpc:
use seconds since boot in expiry cache"), after this commit, get_expiry function
has changed and it can return a large minus expiry_time(such as -2147483574),
this would make the cache entry can't pass the cache_is_expired check and finally
the cache entry is released, so the sys_write syscall return -ENOENT error and
makes exportfs failed.

Inspired by upstream commit 8d96b1063 ("NFS: fix bug in legacy DNS resolver."),
we can fix this problem by replacing get_expiry with get_uint to get the correct
expiry_time.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 fs/nfsd/export.c                  |   10 ++++++----
 net/sunrpc/auth_gss/svcauth_gss.c |   10 ++++------
 net/sunrpc/svcauth_unix.c         |   10 ++++------
 3 files changed, 14 insertions(+), 16 deletions(-)

diff --git a/fs/nfsd/export.c b/fs/nfsd/export.c
index 8274f88..4f0b50e 100644
--- a/fs/nfsd/export.c
+++ b/fs/nfsd/export.c
@@ -91,6 +91,7 @@ static int expkey_parse(struct cache_detail *cd, char *mesg, int mlen)
 	char *ep;
 	struct svc_expkey key;
 	struct svc_expkey *ek = NULL;
+	unsigned int expiry;
 
 	if (mesg[mlen-1] != '\n')
 		return -EINVAL;
@@ -128,9 +129,9 @@ static int expkey_parse(struct cache_detail *cd, char *mesg, int mlen)
 
 	/* OK, we seem to have a valid key */
 	key.h.flags = 0;
-	key.h.expiry_time = get_expiry(&mesg);
-	if (key.h.expiry_time == 0)
+	if (get_uint(&mesg, &expiry) < 0)
 		goto out;
+	key.h.expiry_time = expiry;
 
 	key.ek_client = dom;	
 	key.ek_fsidtype = fsidtype;
@@ -501,6 +502,7 @@ static int svc_export_parse(struct cache_detail *cd, char *mesg, int mlen)
 	struct auth_domain *dom = NULL;
 	struct svc_export exp = {}, *expp;
 	int an_int;
+	unsigned int expiry;
 
 	if (mesg[mlen-1] != '\n')
 		return -EINVAL;
@@ -539,9 +541,9 @@ static int svc_export_parse(struct cache_detail *cd, char *mesg, int mlen)
 
 	/* expiry */
 	err = -EINVAL;
-	exp.h.expiry_time = get_expiry(&mesg);
-	if (exp.h.expiry_time == 0)
+	if (get_uint(&mesg, &expiry) < 0)
 		goto out3;
+	exp.h.expiry_time = expiry;
 
 	/* flags */
 	err = get_int(&mesg, &an_int);
diff --git a/net/sunrpc/auth_gss/svcauth_gss.c b/net/sunrpc/auth_gss/svcauth_gss.c
index b81e790..f3d029e 100644
--- a/net/sunrpc/auth_gss/svcauth_gss.c
+++ b/net/sunrpc/auth_gss/svcauth_gss.c
@@ -196,7 +196,7 @@ static int rsi_parse(struct cache_detail *cd,
 	char *ep;
 	int len;
 	struct rsi rsii, *rsip = NULL;
-	time_t expiry;
+	unsigned int expiry;
 	int status = -EINVAL;
 
 	memset(&rsii, 0, sizeof(rsii));
@@ -223,9 +223,8 @@ static int rsi_parse(struct cache_detail *cd,
 
 	rsii.h.flags = 0;
 	/* expiry */
-	expiry = get_expiry(&mesg);
 	status = -EINVAL;
-	if (expiry == 0)
+	if (get_uint(&mesg, &expiry) < 0)
 		goto out;
 
 	/* major/minor */
@@ -427,7 +426,7 @@ static int rsc_parse(struct cache_detail *cd,
 	char *buf = mesg;
 	int len, rv;
 	struct rsc rsci, *rscp = NULL;
-	time_t expiry;
+	unsigned int expiry;
 	int status = -EINVAL;
 	struct gss_api_mech *gm = NULL;
 
@@ -441,9 +440,8 @@ static int rsc_parse(struct cache_detail *cd,
 
 	rsci.h.flags = 0;
 	/* expiry */
-	expiry = get_expiry(&mesg);
 	status = -EINVAL;
-	if (expiry == 0)
+	if (get_uint(&mesg, &expiry) < 0)
 		goto out;
 
 	rscp = rsc_lookup(&rsci);
diff --git a/net/sunrpc/svcauth_unix.c b/net/sunrpc/svcauth_unix.c
index 2073116..fe931ec 100644
--- a/net/sunrpc/svcauth_unix.c
+++ b/net/sunrpc/svcauth_unix.c
@@ -200,7 +200,7 @@ static int ip_map_parse(struct cache_detail *cd,
 
 	struct ip_map *ipmp;
 	struct auth_domain *dom;
-	time_t expiry;
+	unsigned int expiry;
 
 	if (mesg[mlen-1] != '\n')
 		return -EINVAL;
@@ -233,8 +233,7 @@ static int ip_map_parse(struct cache_detail *cd,
 		return -EINVAL;
 	}
 
-	expiry = get_expiry(&mesg);
-	if (expiry ==0)
+	if (get_uint(&mesg, &expiry) < 0)
 		return -EINVAL;
 
 	/* domainname, or empty for NEGATIVE */
@@ -551,7 +550,7 @@ static int unix_gid_parse(struct cache_detail *cd,
 	int rv;
 	int i;
 	int err;
-	time_t expiry;
+	unsigned int expiry;
 	struct unix_gid ug, *ugp;
 
 	if (mlen <= 0 || mesg[mlen-1] != '\n')
@@ -563,8 +562,7 @@ static int unix_gid_parse(struct cache_detail *cd,
 		return -EINVAL;
 	ug.uid = uid;
 
-	expiry = get_expiry(&mesg);
-	if (expiry == 0)
+	if (get_uint(&mesg, &expiry) < 0)
 		return -EINVAL;
 
 	rv = get_int(&mesg, &gids);
-- 
1.7.0

