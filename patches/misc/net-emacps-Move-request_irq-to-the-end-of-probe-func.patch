From 4a23a458f84adc792eec30c505ff202ef4b84212 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Wed, 22 May 2013 10:10:54 +0200
Subject: [PATCH 391/628] net: emacps: Move request_irq to the end of probe
 function

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit a3d46f7baee35f2d71c300db10fd06ba4f88fe27

Move request_irq function to the end of emacps probe
because when system crashes there could be unhadled
interrupts when crashkernel come again and after
request_irq driver starts to handle it but not all
things are initialized yet.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |   20 +++++++++-----------
 1 files changed, 9 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 6ef3d85..3a223d6 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -2616,14 +2616,6 @@ static int xemacps_probe(struct platform_device *pdev)
 
 	ndev->irq = platform_get_irq(pdev, 0);
 
-	rc = request_irq(ndev->irq, xemacps_interrupt, 0,
-		ndev->name, ndev);
-	if (rc) {
-		dev_err(&lp->pdev->dev, "Unable to request IRQ %p, error %d\n",
-				r_irq, rc);
-		goto err_out_iounmap;
-	}
-
 	ndev->netdev_ops = &netdev_ops;
 	ndev->watchdog_timeo = TX_TIMEOUT;
 	ndev->ethtool_ops = &xemacps_ethtool_ops;
@@ -2636,7 +2628,7 @@ static int xemacps_probe(struct platform_device *pdev)
 	rc = register_netdev(ndev);
 	if (rc) {
 		dev_err(&pdev->dev, "Cannot register net device, aborting.\n");
-		goto err_out_free_irq;
+		goto err_out_iounmap;
 	}
 
 	if (ndev->irq == 54)
@@ -2730,6 +2722,14 @@ static int xemacps_probe(struct platform_device *pdev)
 	dev_info(&lp->pdev->dev, "pdev->id %d, baseaddr 0x%08lx, irq %d\n",
 		pdev->id, ndev->base_addr, ndev->irq);
 
+	rc = request_irq(ndev->irq, xemacps_interrupt, 0,
+		ndev->name, ndev);
+	if (rc) {
+		dev_err(&lp->pdev->dev, "Unable to request IRQ %p, error %d\n",
+				r_irq, rc);
+		goto err_out_unregister_clk_notifier;
+	}
+
 	return 0;
 
 err_out_unregister_clk_notifier:
@@ -2743,8 +2743,6 @@ err_out_clk_put_aper:
 	clk_put(lp->aperclk);
 err_out_unregister_netdev:
 	unregister_netdev(ndev);
-err_out_free_irq:
-	free_irq(ndev->irq, ndev);
 err_out_iounmap:
 	iounmap(lp->baseaddr);
 err_out_free_netdev:
-- 
1.7.5.4

