From 7fce9b260f5284620a9cc74529991b39e73148c3 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 18 Dec 2013 09:31:23 +0800
Subject: [PATCH 05/26] security: don't alloc the credential for the
 non-implemented function in cap_task_prctl

In function cap_task_prctl(), we would allocate a credential
unconditionally and then check if we support the requested function.
If not we would release this credential with abort_creds() by using
RCU method. But on some archs such as powerpc, the sys_prctl is heavily
used to get/set the floating point exception mode. So the unnecessary
allocating/releasing of credential not only introduce runtime overhead
but also do cause OOM due to the RCU implementation.  So we should
return immediately for the non-implemented function in the
cap_task_prctl().

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 security/commoncap.c |   17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/security/commoncap.c b/security/commoncap.c
index 8224faf..556e419 100644
--- a/security/commoncap.c
+++ b/security/commoncap.c
@@ -880,6 +880,20 @@ int cap_task_prctl(int option, unsigned long arg2, unsigned long arg3,
 	struct cred *new;
 	long error = 0;
 
+	switch (option) {
+	case PR_CAPBSET_READ:
+	case PR_CAPBSET_DROP:
+	case PR_SET_SECUREBITS:
+	case PR_GET_SECUREBITS:
+	case PR_GET_KEEPCAPS:
+	case PR_SET_KEEPCAPS:
+		break;
+
+	/* No functionality available - return with -ENOSYS */
+	default:
+		return -ENOSYS;
+	}
+
 	new = prepare_creds();
 	if (!new)
 		return -ENOMEM;
@@ -962,7 +976,8 @@ int cap_task_prctl(int option, unsigned long arg2, unsigned long arg3,
 		goto changed;
 
 	default:
-		/* No functionality available - continue with default */
+		/* We shouldn't be here */
+		WARN_ON_ONCE(1);
 		error = -ENOSYS;
 		goto error;
 	}
-- 
1.7.9.5

