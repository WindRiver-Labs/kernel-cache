From a9a7f45a142b22e60c71ff0dcdb8d94144cbc375 Mon Sep 17 00:00:00 2001
From: Punnaiah Choudary Kalluri <punnaiah.choudary.kalluri@xilinx.com>
Date: Sat, 21 Sep 2013 19:54:10 +0530
Subject: [PATCH 273/628] spi: xspips: Fix erranious chipselect togle

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit eb32d1878103f38004374645704212c2985f52f2

Fixed the bug in driver that erraniously disable and enable the
controller while the transfer is in progress and causes the
chip select toggle in between the transfer.

Signed-off-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/spi/spi-xilinx-ps.c |    5 ++---
 1 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/spi/spi-xilinx-ps.c b/drivers/spi/spi-xilinx-ps.c
index 6ca26ab..79f9233 100644
--- a/drivers/spi/spi-xilinx-ps.c
+++ b/drivers/spi/spi-xilinx-ps.c
@@ -450,7 +450,8 @@ static void xspips_work_queue(struct work_struct *work)
 		spi = msg->spi;
 
 		list_for_each_entry(transfer, &msg->transfers, transfer_list) {
-			if (transfer->bits_per_word || transfer->speed_hz) {
+			if ((transfer->bits_per_word || transfer->speed_hz) &&
+								cs_change) {
 				status = xspips_setup_transfer(spi, transfer);
 				if (status < 0)
 					break;
@@ -492,8 +493,6 @@ static void xspips_work_queue(struct work_struct *work)
 		msg->status = status;
 		msg->complete(msg->context);
 
-		xspips_setup_transfer(spi, NULL);
-
 		if (!(status == 0 && cs_change))
 			xspips_chipselect(spi, 0);
 
-- 
1.7.5.4

