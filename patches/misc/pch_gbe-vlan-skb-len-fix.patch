From 3e81c8cc3cd33bfb9530de4ef4d5d8da85256f9d Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Fri, 12 Oct 2012 09:36:14 +0800
Subject: [PATCH] pch_gbe: vlan skb len fix

commit 4487e64de63b8e42efe5a5543871c42c5a5859d9 upstream

pch_gbe_xmit_frame skb->len verification was incorrect in vlan case
causing bogus transfer length errors.  One correction could be:
    offset = skb->protocol == htons(ETH_P_8021Q) ? 0 : 4;
    if (unlikely(skb->len > (adapter->hw.mac.max_frame_size - offset)))
However, this verification is not necessary, so remove it.

Signed-off-by: Andy Cress <andy.cress@us.kontron.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Integrated-by: Li Wang <li.wang@windriver.com>
---
 drivers/net/pch_gbe/pch_gbe_main.c |   12 ------------
 1 files changed, 0 insertions(+), 12 deletions(-)

diff --git a/drivers/net/pch_gbe/pch_gbe_main.c b/drivers/net/pch_gbe/pch_gbe_main.c
index ff90101..8e34406 100644
--- a/drivers/net/pch_gbe/pch_gbe_main.c
+++ b/drivers/net/pch_gbe/pch_gbe_main.c
@@ -822,18 +822,6 @@ static int pch_gbe_xmit_frame(struct sk_buff *skb, struct net_device *netdev)
 
  DPRINTK(PROBE, DEBUG, "\n");
 
- if (unlikely(skb->len <= 0)) {
-  dev_kfree_skb_any(skb);
-  PCH_DEBUG("Return : OK  skb len : %d\n", skb->len);
-  return NETDEV_TX_OK;
- }
- if (unlikely(skb->len > (adapter->hw.mac.max_frame_size - 4))) {
-  DPRINTK(PROBE, ERR, "Transfer length Error: %d over %d\n",
-   skb->len, adapter->hw.mac.max_frame_size);
-  dev_kfree_skb_any(skb);
-  adapter->stats.tx_length_errors++;
-  return NETDEV_TX_BUSY;
- }
  if (!spin_trylock_irqsave(&tx_ring->tx_lock, flags)) {
   /* Collision - tell upper layer to requeue */
   return NETDEV_TX_LOCKED;
-- 
1.7.0

