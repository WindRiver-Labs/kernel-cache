From 30e983a7134f41b9d08555c57f3d42e6369df762 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Wed, 12 Dec 2012 17:01:33 +0100
Subject: [PATCH 104/628] dma: xilinx: Fix OF binding - warnings reported by
 sparse

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 26695e8c81495a69703eaa6fd23759a478109c75

Use correct type which fix sparse warnings.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/dma/xilinx/xilinx_axicdma.c |   18 +++++++-----------
 drivers/dma/xilinx/xilinx_axidma.c  |   15 ++++++---------
 drivers/dma/xilinx/xilinx_axivdma.c |   10 ++++------
 3 files changed, 17 insertions(+), 26 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_axicdma.c b/drivers/dma/xilinx/xilinx_axicdma.c
index 170c67a..da9bad1 100644
--- a/drivers/dma/xilinx/xilinx_axicdma.c
+++ b/drivers/dma/xilinx/xilinx_axicdma.c
@@ -863,7 +863,7 @@ static int __devinit xilinx_cdma_chan_probe(struct xilinx_cdma_device *xdev,
 {
 	struct xilinx_cdma_chan *chan;
 	int err;
-	int *value;
+	const __be32 *value;
 	u32 width = 0, device_id = 0;
 
 	/* alloc channel */
@@ -880,14 +880,11 @@ static int __devinit xilinx_cdma_chan_probe(struct xilinx_cdma_device *xdev,
 	chan->has_SG = 0;
 	chan->max_len = XILINX_CDMA_MAX_TRANS_LEN;
 
-	value = (int *)of_get_property(node, "xlnx,include-dre",
-			NULL);
+	value = of_get_property(node, "xlnx,include-dre", NULL);
 	if (value)
 		chan->has_DRE = be32_to_cpup(value);
 
-	value = (int *)of_get_property(node,
-			"xlnx,datawidth",
-			NULL);
+	value = of_get_property(node, "xlnx,datawidth", NULL);
 	if (value) {
 		width = be32_to_cpup(value) >> 3; /* convert bits to bytes */
 
@@ -898,7 +895,7 @@ static int __devinit xilinx_cdma_chan_probe(struct xilinx_cdma_device *xdev,
 		chan->feature |= width - 1;
 	}
 
-	value = (int *)of_get_property(node, "xlnx,device-id", NULL);
+	value = of_get_property(node, "xlnx,device-id", NULL);
 	if (value)
 		device_id = be32_to_cpup(value);
 
@@ -908,13 +905,12 @@ static int __devinit xilinx_cdma_chan_probe(struct xilinx_cdma_device *xdev,
 	chan->has_SG = (xdev->feature & XILINX_CDMA_FTR_HAS_SG) >>
 			XILINX_CDMA_FTR_HAS_SG_SHIFT;
 
-	value = (int *)of_get_property(node,
-			"xlnx,lite-mode", NULL);
+	value = of_get_property(node, "xlnx,lite-mode", NULL);
 	if (value) {
 		if (be32_to_cpup(value) == 1) {
 			chan->is_lite = 1;
-			value = (int *)of_get_property(node,
-				"xlnx,max-burst-len", NULL);
+			value = of_get_property(node,
+					"xlnx,max-burst-len", NULL);
 			if (value) {
 				if (!width) {
 					dev_err(xdev->dev,
diff --git a/drivers/dma/xilinx/xilinx_axidma.c b/drivers/dma/xilinx/xilinx_axidma.c
index 65a16ed..d38a25b 100644
--- a/drivers/dma/xilinx/xilinx_axidma.c
+++ b/drivers/dma/xilinx/xilinx_axidma.c
@@ -965,7 +965,7 @@ static int __devinit xilinx_dma_chan_probe(struct xilinx_dma_device *xdev,
 {
 	struct xilinx_dma_chan *chan;
 	int err;
-	int *value;
+	const __be32 *value;
 	u32 width = 0, device_id = 0;
 
 	/* alloc channel */
@@ -982,14 +982,11 @@ static int __devinit xilinx_dma_chan_probe(struct xilinx_dma_device *xdev,
 	chan->has_SG = 0;
 	chan->max_len = XILINX_DMA_MAX_TRANS_LEN;
 
-	value = (int *)of_get_property(node, "xlnx,include-dre",
-			NULL);
+	value = of_get_property(node, "xlnx,include-dre", NULL);
 	if (value)
 		chan->has_DRE = be32_to_cpup(value);
 
-	value = (int *)of_get_property(node,
-			"xlnx,datawidth",
-			NULL);
+	value = of_get_property(node, "xlnx,datawidth", NULL);
 	if (value) {
 		width = be32_to_cpup(value) >> 3; /* convert bits to bytes */
 
@@ -1000,7 +997,7 @@ static int __devinit xilinx_dma_chan_probe(struct xilinx_dma_device *xdev,
 		chan->feature |= width - 1;
 	}
 
-	value = (int *)of_get_property(node, "xlnx,device-id", NULL);
+	value = of_get_property(node, "xlnx,device-id", NULL);
 	if (value)
 		device_id = be32_to_cpup(value);
 
@@ -1087,7 +1084,7 @@ static int __devinit xilinx_dma_of_probe(struct platform_device *op)
 	struct xilinx_dma_device *xdev;
 	struct device_node *child, *node;
 	int err;
-	int *value;
+	const __be32 *value;
 
 	dev_info(&op->dev, "Probing xilinx axi dma engine\n");
 
@@ -1118,7 +1115,7 @@ static int __devinit xilinx_dma_of_probe(struct platform_device *op)
 	if (of_device_is_compatible(node, "xlnx,axi-dma")) {
 
 		xdev->feature |= XILINX_DMA_IP_DMA;
-		value = (int *)of_get_property(node,
+		value = of_get_property(node,
 				"xlnx,sg-include-stscntrl-strm",
 				NULL);
 		if (value) {
diff --git a/drivers/dma/xilinx/xilinx_axivdma.c b/drivers/dma/xilinx/xilinx_axivdma.c
index e39676c..9ef112a 100644
--- a/drivers/dma/xilinx/xilinx_axivdma.c
+++ b/drivers/dma/xilinx/xilinx_axivdma.c
@@ -1196,7 +1196,7 @@ static int __devinit xilinx_vdma_of_probe(struct platform_device *op)
 	struct xilinx_vdma_device *xdev;
 	struct device_node *child, *node;
 	int err, i;
-	int *value;
+	const __be32 *value;
 	int num_frames = 0;
 
 	dev_info(&op->dev, "Probing xilinx axi vdma engine\n");
@@ -1226,19 +1226,17 @@ static int __devinit xilinx_vdma_of_probe(struct platform_device *op)
 	if (of_device_is_compatible(node, "xlnx,axi-vdma")) {
 		xdev->feature |= XILINX_DMA_IP_VDMA;
 
-		value = (int *)of_get_property(node, "xlnx,include-sg",
-				NULL);
+		value = of_get_property(node, "xlnx,include-sg", NULL);
 		if (value) {
 			if (be32_to_cpup(value) == 1)
 				xdev->feature |= XILINX_VDMA_FTR_HAS_SG;
 		}
 
-		value = (int *)of_get_property(node, "xlnx,num-fstores",
-			NULL);
+		value = of_get_property(node, "xlnx,num-fstores", NULL);
 		if (value)
 			num_frames = be32_to_cpup(value);
 
-		value = (int *)of_get_property(node, "xlnx,flush-fsync", NULL);
+		value = of_get_property(node, "xlnx,flush-fsync", NULL);
 		if (value)
 			xdev->feature |= be32_to_cpup(value) <<
 				XILINX_VDMA_FTR_FLUSH_SHIFT;
-- 
1.7.5.4

