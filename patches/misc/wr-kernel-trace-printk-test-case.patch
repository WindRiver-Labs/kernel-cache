From 77016d47eed36ad97ccbe0c8eb9d42c4c56021fa Mon Sep 17 00:00:00 2001
From: Paul Barrette <paul.barrette@windriver.com>
Date: Wed, 7 Nov 2012 11:34:57 -0500
Subject: [PATCH] wr-kernel: trace printk test case

This is a kernel module that tests the printk console feature.

Signed-off-by: Paul Barrette <paul.barrette@windriver.com>
---
 tools/testing/trace_printk_test/Makefile           |    8 +++
 tools/testing/trace_printk_test/README             |   37 ++++++++++++++
 .../testing/trace_printk_test/trace_printk_test.c  |   53 ++++++++++++++++++++
 3 files changed, 98 insertions(+)
 create mode 100644 tools/testing/trace_printk_test/Makefile
 create mode 100644 tools/testing/trace_printk_test/README
 create mode 100644 tools/testing/trace_printk_test/trace_printk_test.c

diff --git a/tools/testing/trace_printk_test/Makefile b/tools/testing/trace_printk_test/Makefile
new file mode 100644
index 0000000..ec68bf3
--- /dev/null
+++ b/tools/testing/trace_printk_test/Makefile
@@ -0,0 +1,8 @@
+# Note: this Makefile is designed to work with the wrlinux "make kds"
+# shell.
+obj-m := trace_printk_test.o
+
+all:
+	make -C $(KBUILD_OUTPUT) M=$(PWD)
+clean:
+	make -C $(KBUILD_OUTPUT) M=$(PWD) clean
diff --git a/tools/testing/trace_printk_test/README b/tools/testing/trace_printk_test/README
new file mode 100644
index 0000000..f585cda
--- /dev/null
+++ b/tools/testing/trace_printk_test/README
@@ -0,0 +1,37 @@
+Building:
+ * use the wrlinux "make kds" command
+ * then cd into tools/testing/trace_printk_test
+ * make
+ * make clean to cleanup
+
+Usage:
+ * load the module on the target
+ * On the target, do the following:
+ * $ mount -t debugfs nodev /sys/kernel/debug
+ * $ cd /sys/kernel/debug/tracing
+ * $ echo 1 > /sys/kernel/debug/tracing/events/printk/enable
+ * $ insmod <path>/trace_printk_test
+ * $ echo 0 > /sys/kernel/debug/tracing/events/printk/enable
+ * $ cat /sys/kernel/debug/tracing/trace
+ * Verify the dump log.
+ * You should see "XXX printk trace" msgs, e.g.:
+# tracer: nop
+#
+# entries-in-buffer/entries-written: 5/5   #P:1
+#
+#                              _-----=> irqs-off
+#                             / _----=> need-resched
+#                            | / _---=> hardirq/softirq
+#                            || / _--=> preempt-depth
+#                            ||| /     delay
+#           TASK-PID   CPU#  ||||    TIMESTAMP  FUNCTION
+#              | |       |   ||||       |         |
+          insmod-490   [000] ....    91.247266: :
+<6>START-trace_printk
+          insmod-490   [000] d..1    91.247358: console: XXX printk trace (1) dumb_print_handler
+
+          insmod-490   [000] d..1    91.248890: console: XXX printk trace this msg
+
+          insmod-490   [000] d..1    91.249055: console: XXX printk trace (2) dumb_print_handler
+
+          insmod-490   [000] ....    91.249233: : <6>STOP-trace_printk
diff --git a/tools/testing/trace_printk_test/trace_printk_test.c b/tools/testing/trace_printk_test/trace_printk_test.c
new file mode 100644
index 0000000..e33f580
--- /dev/null
+++ b/tools/testing/trace_printk_test/trace_printk_test.c
@@ -0,0 +1,53 @@
+/*Usage:
+ * Enable build as a module
+ * On the target, do the following:
+ * $ mount -t debugfs nodev /sys/kernel/debug
+ * $ cd /sys/kernel/debug/tracing
+ * $ echo 1 > /sys/kernel/debug/tracing/events/printk/enable
+ * $ modprobe trace_printk_test
+ * $ echo 0 > /sys/kernel/debug/tracing/events/printk/enable
+ * $ cat /sys/kernel/debug/tracing/trace
+ * Verify the dump log.
+ * You should see "XXX printk trace" msgs*/
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/console.h>
+
+MODULE_AUTHOR("Paul Barrette");
+MODULE_DESCRIPTION("Simple kmod for testing printk tracing");
+MODULE_LICENSE("GPL");
+
+static void dumb_print_handler (unsigned int l)
+{
+	printk("XXX printk trace (%d) %s\n", l, __func__);
+}
+static int __init init_trace_printk_test(void)
+{
+	/* enable tracing now */
+	tracing_on();
+
+	/* mark the trace so that you know where to start looking */
+	trace_printk(KERN_INFO "START-trace_printk\n");
+
+	/* call a function that printks */
+	dumb_print_handler(1);
+
+	/* dump a few more printks */
+	printk(KERN_INFO "XXX printk trace this msg\n");
+	dumb_print_handler(2);
+
+	/* mark the trace so that you know where to stop looking */
+	trace_printk(KERN_INFO "STOP-trace_printk\n");
+
+	/* disable tracking */
+	tracing_off();
+	return 0;
+}
+
+static void __exit exit_trace_printk_test(void)
+{
+}
+
+module_init(init_trace_printk_test);
+module_exit(exit_trace_printk_test);
-- 
1.7.9.7

