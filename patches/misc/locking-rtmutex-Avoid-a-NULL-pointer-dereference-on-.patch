From fd8cae92acd33fc3f2fd936451df92b82bf54679 Mon Sep 17 00:00:00 2001
From: "Junxian.Xiao" <Junxian.Xiao@windriver.com>
Date: Mon, 5 Sep 2016 03:06:26 +0800
Subject: [PATCH 1/2] locking/rtmutex: Avoid a NULL pointer dereference on
 deadlock

Commit 8d1e5a1a1ccf5ae9d8a5a0ee7960202ccb0c5429 upstream

With task_blocks_on_rt_mutex() returning early -EDEADLK we never
add the waiter to the waitqueue. Later, we try to remove it via
remove_waiter() and go boom in rt_mutex_top_waiter() because
rb_entry() gives a NULL pointer.

( Tested on v3.18-RT where rtmutex is used for regular mutex and I
tried to get one twice in a row. )

Not sure when this started but I guess 397335f004f4 ("rtmutex: Fix
deadlock detector for real") or commit 3d5c9340d194 ("rtmutex:
Handle deadlock detection smarter").

Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Acked-by: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: <stable@vger.kernel.org> # for v3.16 and later kernels
Link: http://lkml.kernel.org/r/1424187823-19600-1-git-send-email-bigeasy@linutronix.de
Signed-off-by: Ingo Molnar <mingo@kernel.org>
Signed-off-by: Junxian.Xiao <Junxian.Xiao@windriver.com>
---
 kernel/rtmutex.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/kernel/rtmutex.c b/kernel/rtmutex.c
index d9ca207..c4f1848 100644
--- a/kernel/rtmutex.c
+++ b/kernel/rtmutex.c
@@ -805,7 +805,8 @@ rt_mutex_slowlock(struct rt_mutex *lock, int state,
 	set_current_state(TASK_RUNNING);
 
 	if (unlikely(ret)) {
-		remove_waiter(lock, &waiter);
+		if (rt_mutex_has_waiters(lock))
+			remove_waiter(lock, &waiter);
 		rt_mutex_handle_deadlock(ret, detect_deadlock, &waiter);
 	}
 
-- 
1.7.5.4

