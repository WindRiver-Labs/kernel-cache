From 0cf0fd6767ab2710547022ddf83c8a3c303c1d11 Mon Sep 17 00:00:00 2001
From: Ovidiu Panait <ovidiu.panait@windriver.com>
Date: Mon, 18 Dec 2017 13:22:07 +0200
Subject: [PATCH] Revert "kvm: vmx: handle invvpid vm exit gracefully"

Commit 20a1fa44dd23be371b6f9056d6711ea33f28668d for fixing CVE-2014-3646
introduced a patch that was already present in WRL7 kernel tree (commit
8b74c6f87d4baf5e48e44af2f90cda91ed7b848e)

The duplicated function "handle_invvpid" breaks the build when CONFIG_KVM_INTEL=y.

This reverts commit 20a1fa44dd23be371b6f9056d6711ea33f28668d

Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 arch/x86/kvm/vmx.c |    7 -------
 1 files changed, 0 insertions(+), 7 deletions(-)

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 1f6612c..c8c0277 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -6477,12 +6477,6 @@ static int handle_invvpid(struct kvm_vcpu *vcpu)
 	return 1;
 }
 
-static int handle_invvpid(struct kvm_vcpu *vcpu)
-{
-	kvm_queue_exception(vcpu, UD_VECTOR);
-	return 1;
-}
-
 /*
  * The exit handlers return 1 if the exit was handled fully and guest execution
  * may resume.  Otherwise they set the kvm_run parameter to indicate what needs
@@ -6529,7 +6523,6 @@ static int (*const kvm_vmx_exit_handlers[])(struct kvm_vcpu *vcpu) = {
 	[EXIT_REASON_MONITOR_INSTRUCTION]     = handle_invalid_op,
 	[EXIT_REASON_INVEPT]                  = handle_invept,
 	[EXIT_REASON_INVVPID]                 = handle_invvpid,
-	[EXIT_REASON_INVVPID]                 = handle_invvpid,
 };
 
 static const int kvm_vmx_max_exit_handlers =
-- 
1.7.5.4

