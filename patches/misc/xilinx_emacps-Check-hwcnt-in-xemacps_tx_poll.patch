From 3479116593ba23d3fea16dcaeff3f405ff76e9a7 Mon Sep 17 00:00:00 2001
From: Thomas Betker <thomas.betker@rohde-schwarz.com>
Date: Sat, 11 May 2013 11:10:42 +0200
Subject: [PATCH 398/628] xilinx_emacps: Check hwcnt in xemacps_tx_poll()

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit fcc674f26ccd4daec1ce9c03f3ff024c88a7f6c3

In xemacps_tx_poll(), loop only while bdcount < SEND_BD_CNT - freecnt
(formerly known as hwcnt). Otherwise, we may loop through the whole Tx
BD list since "free" BDs always have the USED bit set. This should not
result in an error since no LAST bit is found, but it eats up time.

This issue was introduced by the commit "xilinx_emacps: Optimize the BD
handling logic" on Jan 21, 2013.

Note that there is no corresponding issue for the Rx BD list because
its freecnt is 0.

Signed-off-by: Thomas Betker <thomas.betker@rohde-schwarz.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index e296b5b..6d5ace1 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -1248,6 +1248,7 @@ static void xemacps_tx_poll(unsigned long data)
 	struct xemacps_bd *cur_p;
 	u32 cur_i;
 	u32 numbdstofree;
+	u32 numbdsinhw;
 	struct ring_info *rp;
 	struct sk_buff *skb;
 
@@ -1260,7 +1261,8 @@ static void xemacps_tx_poll(unsigned long data)
 
 	cur_i = lp->tx_bd_ci;
 	cur_p = &lp->tx_bd[cur_i];
-	while (bdcount < XEMACPS_SEND_BD_CNT) {
+	numbdsinhw = XEMACPS_SEND_BD_CNT - lp->tx_bd_freecnt;
+	while (bdcount < numbdsinhw) {
 		if (sop == 0) {
 			if (cur_p->ctrl & XEMACPS_TXBUF_USED_MASK)
 				sop = 1;
-- 
1.7.5.4

