From 7372f3edac0b2c1be7573bbcab780c58b955cd53 Mon Sep 17 00:00:00 2001
From: Jian Liu <jian.liu@windriver.com>
Date: Fri, 15 Aug 2014 13:48:35 +0800
Subject: [PATCH] jffs2: fix IN_DELETE_SELF on overwriting rename() killing a directory

commit 22ba747f660c0acd14761628c24aa972d18058a0 upstream

We don't generate IN_DELETE_SELF on victim of overwriting rename() if
it happens to be a directory. Trivially fixed by doing to ->i_nlink
what we do ->pino_nlink a couple of lines later in jffs2_rename().

Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Signed-off-by: Jian Liu <jian.liu@windriver.com>
---
 fs/jffs2/dir.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/fs/jffs2/dir.c b/fs/jffs2/dir.c
index 7aa4417..4a54624 100644
--- a/fs/jffs2/dir.c
+++ b/fs/jffs2/dir.c
@@ -830,7 +830,10 @@ static int jffs2_rename (struct inode *old_dir_i, struct dentry *old_dentry,
 
 	if (victim_f) {
 		/* There was a victim. Kill it off nicely */
-		drop_nlink(new_dentry->d_inode);
+		if (S_ISDIR(new_dentry->d_inode->i_mode))
+			clear_nlink(new_dentry->d_inode);
+		else
+			drop_nlink(new_dentry->d_inode); 
 		/* Don't oops if the victim was a dirent pointing to an
 		   inode which didn't exist. */
 		if (victim_f->inocache) {
-- 
1.7.0

