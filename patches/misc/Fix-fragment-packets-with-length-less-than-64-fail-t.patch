From 9627aed826793f7058f7e5ef6d49335e26cc0629 Mon Sep 17 00:00:00 2001
From: Jiang Bin <bin.jiang@windriver.com>
Date: Mon, 30 May 2011 13:42:46 +0800
Subject: [PATCH] Fix: fragment packets with length less than 64 fail to transmit

The ethernet driver will check the checksum of UDP/TCP packet with
length less than 64. For fragment packets, the checksum is stored
in the first fragment packet. When ethernet driver check and store
checksum in last fragment packet, the checksum value may be actually
stored in data section of UDP/TCP packet and then destroy the content
of the UDP/TCP packet.

Ethernet driver doesn't need to check the checksum of fragment packets.

Signed-off-by: Jiang Bin <bin.jiang@windriver.com>
---
 drivers/net/pch_gbe/pch_gbe_main.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/pch_gbe/pch_gbe_main.c b/drivers/net/pch_gbe/pch_gbe_main.c
index 31ad114..f4a42ce 100644
--- a/drivers/net/pch_gbe/pch_gbe_main.c
+++ b/drivers/net/pch_gbe/pch_gbe_main.c
@@ -2351,7 +2351,7 @@ pch_gbe_tx_queue(struct pch_gbe_adapter *adapter,
  if ((skb->len < PCH_GBE_SHORT_PKT) && (adapter->tx_csum == TRUE)) {
   frame_ctrl |=
    PCH_GBE_TXD_CTRL_APAD | PCH_GBE_TXD_CTRL_TCPIP_ACC_OFF;
-  if (skb->protocol == htons(ETH_P_IP)) {
+  if (skb->protocol == htons(ETH_P_IP) && !(ip_hdr(skb)->frag_off & htons(IP_MF | IP_OFFSET))) {
    struct iphdr *iph = ip_hdr(skb);
    unsigned int offset;
    iph->check = 0;
@@ -2368,7 +2368,7 @@ pch_gbe_tx_queue(struct pch_gbe_adapter *adapter,
        iph->daddr,
        skb->len - offset,
        IPPROTO_TCP, skb->csum);
-   } else if (iph->protocol == IPPROTO_UDP) {
+   } else if (iph->protocol == IPPROTO_UDP && !(ip_hdr(skb)->frag_off & htons(IP_MF | IP_OFFSET))) {
     skb->csum = 0;
     udp_hdr(skb)->check = 0;
     skb->csum =
-- 
1.7.0.4

