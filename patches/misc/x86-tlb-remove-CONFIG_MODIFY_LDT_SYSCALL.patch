From 359a50c6aeda64dd097f47b74a21e1b530d5fc2c Mon Sep 17 00:00:00 2001
From: Catalin Enache <catalin.enache@windriver.com>
Date: Fri, 30 Mar 2018 20:53:42 +0300
Subject: [PATCH] x86/tlb: remove CONFIG_MODIFY_LDT_SYSCALL

Fix for the following ldt_gdt* tests errors:
RUN]	Test fork
[FAIL]	LDT entry 2 is invalid but should be valid
...
[RUN]	Test fork
[FAIL]	Child failed

This removes CONFIG_MODIFY_LDT_SYSCALL added by:
x86/mm, sched/core: Uninline switch_mm()

This config is not present in linux v4.1

Signed-off-by: Catalin Enache <catalin.enache@windriver.com>
---
 arch/x86/mm/tlb.c |    2 --
 1 files changed, 0 insertions(+), 2 deletions(-)

diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c
index 91492c2..0ecc167 100644
--- a/arch/x86/mm/tlb.c
+++ b/arch/x86/mm/tlb.c
@@ -146,7 +146,6 @@ void switch_mm_irqs_off(struct mm_struct *prev, struct mm_struct *next,
 		/* Load per-mm CR4 state */
 		load_mm_cr4(next);
 
-#ifdef CONFIG_MODIFY_LDT_SYSCALL
 		/*
 		 * Load the LDT, if the LDT is different.
 		 *
@@ -161,7 +160,6 @@ void switch_mm_irqs_off(struct mm_struct *prev, struct mm_struct *next,
 		 */
 		if (unlikely(prev->context.ldt != next->context.ldt))
 			load_mm_ldt(next);
-#endif
 	} else {
 		this_cpu_write(cpu_tlbstate.state, TLBSTATE_OK);
 		BUG_ON(this_cpu_read(cpu_tlbstate.active_mm) != next);
-- 
1.7.5.4

