From c82eb2c726feb952dc6c524d2f5f8277a7403141 Mon Sep 17 00:00:00 2001
From: Suneel Garapati <suneel.garapati@xilinx.com>
Date: Tue, 16 Apr 2013 12:12:11 +0530
Subject: [PATCH 312/628] xilinx: arm: i2c: add support for graceful exit

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit cea356528f5de57c579e05614cc8c203efcd90e3

Changes the blocking completion call to non-blocking
using the timeout variant of wait_for_completion.

Signed-off-by: Suneel Garapati <suneelg@xilinx.com>
Tested-by: Radhey Shyam Pandey <radheys@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/i2c/busses/i2c-xilinx_ps.c |    9 ++++++++-
 1 files changed, 8 insertions(+), 1 deletions(-)

diff --git a/drivers/i2c/busses/i2c-xilinx_ps.c b/drivers/i2c/busses/i2c-xilinx_ps.c
index 1191a8b..fe9122d 100644
--- a/drivers/i2c/busses/i2c-xilinx_ps.c
+++ b/drivers/i2c/busses/i2c-xilinx_ps.c
@@ -455,6 +455,7 @@ static int xi2cps_master_xfer(struct i2c_adapter *adap, struct i2c_msg *msgs,
 	struct xi2cps *id = adap->algo_data;
 	unsigned int count, retries;
 	unsigned long timeout;
+	int ret;
 
 	/* Waiting for bus-ready. If bus not ready, it returns after timeout */
 	timeout = jiffies + XI2CPS_TIMEOUT;
@@ -517,7 +518,13 @@ retry:
 			xi2cps_msend(id);
 
 		/* Wait for the signal of completion */
-		wait_for_completion_interruptible(&id->xfer_done);
+		ret = wait_for_completion_interruptible_timeout(
+							&id->xfer_done, HZ);
+		if (ret == 0) {
+			dev_err(id->adap.dev.parent,
+				 "timeout waiting on completion\n");
+			return -ETIMEDOUT;
+		}
 		xi2cps_writereg(XI2CPS_IXR_ALL_INTR_MASK, XI2CPS_IDR_OFFSET);
 
 		/* If it is bus arbitration error, try again */
-- 
1.7.5.4

