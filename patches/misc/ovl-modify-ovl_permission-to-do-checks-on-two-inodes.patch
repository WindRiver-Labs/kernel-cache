From eabf5d904b9fb8b09a9cd4fcec07eb27d4bfb22e Mon Sep 17 00:00:00 2001
From: Ovidiu Panait <ovidiu.panait@windriver.com>
Date: Thu, 4 Oct 2018 10:11:59 +0300
Subject: [PATCH 4/4] ovl: modify ovl_permission() to do checks on two inodes

commit c0ca3d70e8d3cf81e2255a217f7ca402f5ed0862 upstream

Right now ovl_permission() calls __inode_permission(realinode), to do
permission checks on real inode and no checks are done on overlay inode.

Modify it to do checks both on overlay inode as well as underlying inode.
Checks on overlay inode will be done with the creds of calling task while
checks on underlying inode will be done with the creds of mounter.

Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
[OP: adjusted context for kernel version 4.1]
Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 fs/overlayfs/inode.c |   16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/fs/overlayfs/inode.c b/fs/overlayfs/inode.c
index 91c17be..3fd74f3 100644
--- a/fs/overlayfs/inode.c
+++ b/fs/overlayfs/inode.c
@@ -9,6 +9,7 @@
 
 #include <linux/fs.h>
 #include <linux/slab.h>
+#include <linux/cred.h>
 #include <linux/xattr.h>
 #include "overlayfs.h"
 
@@ -92,6 +93,7 @@ int ovl_permission(struct inode *inode, int mask)
 	bool is_upper;
 	struct dentry *realdentry = ovl_entry_real(oe, &is_upper);
 	struct inode *realinode;
+	const struct cred *old_cred;
 	int err;
 
 	if (ovl_is_default_permissions(inode)) {
@@ -145,7 +147,19 @@ int ovl_permission(struct inode *inode, int mask)
 			return -EROFS;
 	}
 
-	return __inode_permission(realinode, mask);
+	/*
+	 * Check overlay inode with the creds of task and underlying inode
+	 * with creds of mounter
+	 */
+	err = generic_permission(inode, mask);
+	if (err)
+		return err;
+
+	old_cred = ovl_override_creds(inode->i_sb);
+	err = __inode_permission(realinode, mask);
+	revert_creds(old_cred);
+
+	return err;
 }
 
 
-- 
1.7.9.5

