From 019a005d53b5415e25706a65d7be03e79423397d Mon Sep 17 00:00:00 2001
From: Ming Liu <ming.liu@windriver.com>
Date: Wed, 18 Sep 2013 14:57:35 +0800
Subject: [PATCH 1/2] oom: avoid killing kthreads if they assume the oom killed thread's mm

commit 7b0d44fa49b1dcfdcf4897f12ddd12ddeab1a9d7 upstream.

After selecting a task to kill, the oom killer iterates all processes and
kills all other threads that share the same mm_struct in different thread
groups.  It would not otherwise be helpful to kill a thread if its memory
would not be subsequently freed.

A kernel thread, however, may assume a user thread's mm by using
use_mm().  This is only temporary and should not result in sending a
SIGKILL to that kthread.

This patch ensures that only user threads and not kthreads are sent a
SIGKILL if they share the same mm_struct as the oom killed task.

Signed-off-by: David Rientjes <rientjes@google.com>
Reviewed-by: Michal Hocko <mhocko@suse.cz>
Reviewed-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Ming Liu <ming.liu@windriver.com>
---
 mm/oom_kill.c |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/mm/oom_kill.c b/mm/oom_kill.c
index 64e5b4b..93dd52b 100644
--- a/mm/oom_kill.c
+++ b/mm/oom_kill.c
@@ -369,12 +369,13 @@ static int oom_kill_task(struct task_struct *p)
 	__oom_kill_task(p, 1);
 
 	/*
-	 * kill all processes that share the ->mm (i.e. all threads),
+	 * kill all user processes that share the ->mm (i.e. all threads),
 	 * but are in a different thread group. Don't let them have access
 	 * to memory reserves though, otherwise we might deplete all memory.
 	 */
 	do_each_thread(g, q) {
-		if (q->mm == mm && !same_thread_group(q, p))
+		if (q->mm == mm && !same_thread_group(q, p) &&
+		    !(q->flags & PF_KTHREAD))
 			force_sig(SIGKILL, q);
 	} while_each_thread(g, q);
 
-- 
1.7.0

