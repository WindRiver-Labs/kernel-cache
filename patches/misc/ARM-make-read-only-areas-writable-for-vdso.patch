From 769a1a35df9115a695b83552c3bc429db726149f Mon Sep 17 00:00:00 2001
From: Wang Quanyang <quanyang.wang@windriver.com>
Date: Thu, 9 Mar 2017 17:24:21 +0800
Subject: [PATCH] ARM: make read-only areas writable for vdso

According to commit 80d6b0c2eed2("ARM: mn: allow ext and rodata sections to be read-only"),
once ftrace call set_kernel_text_ro to make kernel text and rodata read-only, the function
vdso_nullpatch_one() will fail to modify the contents of st_name which is in read-only areas
and calltrace occur as below:

Unable to handle kernel paging request at virtual address 80efc12c
pgd = 80004000
[80efc12c] *pgd=10e1940e(bad)
Internal error: Oops: 80d [#1] PREEMPT SMP ARM
Modules linked in:
CPU: 2 PID: 1 Comm: swapper/0 Not tainted 4.8.17-WR9.0.0.4_standard #161
Hardware name: Freescale i.MX6 Quad/DualLite (Device Tree)
task: a8208000 task.stack: a8210000
PC is at vdso_nullpatch_one+0x8c/0x98
LR is at vdso_nullpatch_one+0x7c/0x98
pc : [<81106618>]    lr : [<81106608>]    psr: 80000013
sp : a8211e18  ip : a8211e18  fp : a8211e74
r10: 00000000  r9 : 8128a1b8  r8 : 814d6000
r7 : 80e244dc  r6 : 00000030  r5 : a8211e78  r4 : 00000003
r3 : 80efc0fc  r2 : 00000000  r1 : a8211e2c  r0 : 00000000
Flags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
Control: 10c5387d  Table: 1000404a  DAC: 00000051
Process swapper/0 (pid: 1, stack limit = 0xa8210210)
Stack: (0xa8211e18 to 0xa8212000)
1e00:                                                       64765f5f 675f6f73
1e20: 69747465 666f656d 00796164 80e24498 a8211e54 a8211e40 a8211e74 a8211e48
1e40: 81106560 80577150 00000000 00000000 80efc000 00000000 00000000 80efc000
1e60: 00000000 8140258c a8211ea4 a8211e78 81106760 81106598 80efc000 80efc0fc
1e80: 00000050 80efc14c 81106624 ffffe000 00000000 00000119 a8211f1c a8211ea8
1ea0: 80102004 81106630 a8211ecc a8211eb8 81100620 80577284 abfff800 abfff8f6
1ec0: a8211f1c a8211ed0 80156180 81100610 cccccccd 80f516dc 80f516dc 00000003
1ee0: 00000003 00000119 80f500e8 abfff939 814147d4 00000004 00000004 814d6000
1f00: 8118884c 00000119 814d6000 8128a1b8 a8211f94 a8211f20 81100f88 80101ed4
1f20: 00000003 00000003 00000000 81100604 a8209080 ab1d2200 a8211f8c a8211f48
1f40: 8015e440 00000001 80162f94 80162f94 00000000 00000000 00000000 00000000
1f60: a8211f8c a8211f70 8015f068 8020ff8c 00000000 80b79688 00000000 00000000
1f80: 00000000 00000000 a8211fac a8211f98 80b796a0 81100d58 00000000 80b79688
1fa0: 00000000 a8211fb0 80107c90 80b79694 00000000 00000000 00000000 00000000
1fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
1fe0: 00000000 00000000 00000000 00000000 00000013 00000000 d7f77e7f df3b5f74
[<81106618>] (vdso_nullpatch_one) from [<81106760>] (vdso_init+0x13c/0x1ac)
[<81106760>] (vdso_init) from [<80102004>] (do_one_initcall+0x13c/0x164)
<80102004>] (do_one_initcall) from [<81100f88>] (kernel_init_freeable+0x23c/0x2fc)
[<81100f88>] (kernel_init_freeable) from [<80b796a0>] (kernel_init+0x18/0x11c)
[<80b796a0>] (kernel_init) from [<80107c90>] (ret_from_fork+0x14/0x24)
Code: e3500000 1affffed e5953004 e1730006 (17830006)
---[ end trace 553d001027176bc1 ]---

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/arm/kernel/vdso.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/arch/arm/kernel/vdso.c b/arch/arm/kernel/vdso.c
index 994e971..628be5c 100644
--- a/arch/arm/kernel/vdso.c
+++ b/arch/arm/kernel/vdso.c
@@ -149,7 +149,9 @@ static void __init vdso_nullpatch_one(struct elfinfo *lib, const char *symname)
 	if (!sym)
 		return;
 
+	set_kernel_text_rw();
 	sym->st_name = 0;
+	set_kernel_text_ro();
 }
 
 static void __init patch_vdso(void *ehdr)
-- 
1.7.5.4

