From 2327b6042f6ccaa750567c022b2b23fbd70a2a9d Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Wed, 12 Jul 2017 10:15:07 +0800
Subject: [PATCH] arm64: debug: fix lockdep unannotated irqs-off warning in
 kgdbts singlestep selftest

When enable CONFIG_PROVE_LOCKING, CONFIG_DEBUG_LOCKDEP and
CONFIG_TRACE_IRQFLAGS options, run singlekgbdts will produce
warnings as below:

	DEBUG_LOCKS_WARN_ON(current->hardirqs_enabled)
	------------[ cut here ]------------
	WARNING: CPU: 4 PID: 1994 at locking/lockdep.c:3680 check_flags.part.26+0x18c/0x198
	Modules linked in: openvswitch libcrc32c softdog
	CPU: 4 PID: 1994 Comm: sh Not tainted 4.8.22-WR9.0.0.8_standard #1
	Hardware name: AXM56xx Victoria (DT)
	task: ffffffc3eb846400 task.stack: ffffffc3e110c000
	PC is at check_flags.part.26+0x18c/0x198
	LR is at check_flags.part.26+0x18c/0x198
	pc : [<ffffff80080f56dc>] lr : [<ffffff80080f56dc>] pstate: 600003c5
	sp : ffffffc3e110f870
	x29: ffffffc3e110f870 x28: ffffffc3e110c000
	x27: 0000000000000000 x26: 00000000000003c0
	x25: ffffff8008084d48 x24: 0000000000000000
	x23: 0000000000000000 x22: 0000000000000002
	x21: 0000000000000000 x20: 0000000000000000
	x19: ffffff8009dd9000 x18: 0000000000000001
	x17: 0000000000005dc0 x16: 0000000000005dbc
	x15: ffffffffffffffff x14: 0000000000000000
	x13: 0000000000000007 x12: 0000000000000738
	x11: 0000000000000006 x10: 0000000000000739
	x9 : ffffffc3e110f870 x8 : 7261683e2d746e65
	x7 : 0000000000000001 x6 : ffffff80081033f0
	x5 : 0000000000000000 x4 : 0000000000000006
	x3 : ffffff8009006000 x2 : 0000000000000002
	x1 : ffffffc3eb846400 x0 : 000000000000002e
	---[ end trace 07fa31cc76d1c004 ]---
	Call trace:
	[<ffffff80080f56dc>] check_flags.part.26+0x18c/0x198
	[<ffffff80080f5be8>] lock_acquire+0x1d0/0x2a0
	[<ffffff8008084d98>] call_step_hook+0x50/0x158
	[<ffffff80080852c4>] single_step_handler+0x54/0xb0
	[<ffffff80080812d0>] do_debug_exception+0x60/0xd8
	[<ffffff8008082d5c>] el1_dbg+0x18/0x74
	[<ffffff80085e5a7c>] param_set_kgdbts_var+0x74/0xd0
	[<ffffff80080c1278>] param_attr_store+0x68/0x100
	[<ffffff80080c06ec>] module_attr_store+0x44/0x60
	[<ffffff80082bf9f8>] sysfs_kf_write+0x68/0x78
	[<ffffff80082bea90>] kernfs_fop_write+0x170/0x208
	[<ffffff800823d558>] __vfs_write+0x48/0x90
	[<ffffff800823e21c>] vfs_write+0xa4/0x1c0
	[<ffffff800823f254>] SyS_write+0x54/0xb0
	[<ffffff8008083430>] el0_svc_naked+0x24/0x28
	possible reason: unannotated irqs-off.
	irq event stamp: 48695

This happens because when kgdbts run single step, the software step
bit(SS) in SPSR will be set and once el1_irq call enable_dbg,
do_debug_exception will run and check that the irq is off but the
state of irq is not updated. So put function "trace_hardirqs_off" at
the very beginning of el1_irq.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/arm64/kernel/entry.S |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/arm64/kernel/entry.S b/arch/arm64/kernel/entry.S
index 1fb5ca6..68a025a 100644
--- a/arch/arm64/kernel/entry.S
+++ b/arch/arm64/kernel/entry.S
@@ -425,10 +425,10 @@ ENDPROC(el1_sync)
 	.align	6
 el1_irq:
 	kernel_entry 1
-	enable_dbg
 #ifdef CONFIG_TRACE_IRQFLAGS
 	bl	trace_hardirqs_off
 #endif
+	enable_dbg
 
 	irq_handler
 
@@ -638,10 +638,10 @@ ENDPROC(el0_sync)
 el0_irq:
 	kernel_entry 0
 el0_irq_naked:
-	enable_dbg
 #ifdef CONFIG_TRACE_IRQFLAGS
 	bl	trace_hardirqs_off
 #endif
+	enable_dbg
 
 	ct_user_exit
 	irq_handler
-- 
1.7.5.4

