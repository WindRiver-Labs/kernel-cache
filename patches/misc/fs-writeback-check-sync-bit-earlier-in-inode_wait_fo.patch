From 064aca1e810dca7368013e758f6a2def1e5514c9 Mon Sep 17 00:00:00 2001
From: yadi.hu@windriver.com <yadi.hu@windriver.com>
Date: Tue, 29 Jul 2014 09:32:08 +0800
Subject: [PATCH] fs-writeback: check sync bit earlier in inode_wait_for_writeback

58a9d3d8db06ca2ec31f64ec49ab0aeb89971b85 upstream

When wb_writeback() hasn't written anything it will re-acquire the
inode lock before calling inode_wait_for_writeback. This change
tests the sync bit first so that is doesn't need to drop & re-acquire
the lock if the inode became available while wb_writeback() was
waiting to get the lock.

Signed-off-by: Richard Kennedy <richard@rsk.demon.co.uk>
Cc: Alexander Viro <viro@zeniv.linux.org.uk>
Cc: Jens Axboe <jens.axboe@oracle.com>
Cc: Wu Fengguang <fengguang.wu@intel.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Hu <yadi.hu@windriver.com>
---
 fs/fs-writeback.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/fs/fs-writeback.c b/fs/fs-writeback.c
index 9a1de82..21f8e1c 100644
--- a/fs/fs-writeback.c
+++ b/fs/fs-writeback.c
@@ -275,11 +275,11 @@ static void inode_wait_for_writeback(struct inode *inode)
 	wait_queue_head_t *wqh;
 
 	wqh = bit_waitqueue(&inode->i_state, __I_SYNC);
-	do {
+        while (inode->i_state & I_SYNC) {
 		spin_unlock(&inode_lock);
 		__wait_on_bit(wqh, &wq, inode_wait, TASK_UNINTERRUPTIBLE);
 		spin_lock(&inode_lock);
-	} while (inode->i_state & I_SYNC);
+	} 
 }
 
 /*
-- 
1.7.0

