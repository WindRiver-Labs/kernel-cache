From 6c3726b65410843a4bff70733163d2f3fb3044c1 Mon Sep 17 00:00:00 2001
From: Shan Hai <shan.hai@windriver.com>
Date: Mon, 17 Dec 2012 17:08:25 +0800
Subject: [PATCH] block: Free queue resources at blk_release_queue()

This is back port of upstream commit 777eb1bf15b8532c396821774bf6451e563438f5
(block: Free queue resources at blk_release_queue()).

Original commit log:
---
 block/blk-core.c  |   10 ++++++++--
 block/blk-sysfs.c |    3 +++
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/block/blk-core.c b/block/blk-core.c
index 94f274b..6b8e839 100644
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -441,6 +441,12 @@ void blk_put_queue(struct request_queue *q)
 }
 EXPORT_SYMBOL(blk_put_queue);
 
+/*
+ * Note: If a driver supplied the queue lock, it is disconnected
+ * by this function. The actual state of the lock doesn't matter
+ * here as the request_queue isn't accessible after this point
+ * (QUEUE_FLAG_DEAD is set) and no other requests will be queued.
+ */
 void blk_cleanup_queue(struct request_queue *q)
 {
 	/*
@@ -455,8 +461,8 @@ void blk_cleanup_queue(struct request_queue *q)
 	queue_flag_set_unlocked(QUEUE_FLAG_DEAD, q);
 	mutex_unlock(&q->sysfs_lock);
 
-	if (q->elevator)
-		elevator_exit(q->elevator);
+	if (q->queue_lock != &q->__queue_lock)
+		q->queue_lock = &q->__queue_lock;
 
 	blk_put_queue(q);
 }
diff --git a/block/blk-sysfs.c b/block/blk-sysfs.c
index 3eede79..52e17b0 100644
--- a/block/blk-sysfs.c
+++ b/block/blk-sysfs.c
@@ -464,6 +464,9 @@ static void blk_release_queue(struct kobject *kobj)
 
 	blk_sync_queue(q);
 
+	if (q->elevator)
+		elevator_exit(q->elevator);
+
 	if (rl->rq_pool)
 		mempool_destroy(rl->rq_pool);
 
-- 
1.7.0

