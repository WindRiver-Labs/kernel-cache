From 6256cc1c1627c33a7c529c44507693fac8060365 Mon Sep 17 00:00:00 2001
From: He Zhe <zhe.he@windriver.com>
Date: Thu, 12 Mar 2015 19:00:40 +0800
Subject: [PATCH] trace: Adjust position of trace_softirqs_on to avoid call
 trace

In __local_bh_enable, if softirq is going to be enabled,
trace_softirqs_on will set current->softirqs_enabled to 1 for
lockdep's further check. But the check is triggered by trace_preempt_on
before subtracting softirq count. Then lockdep will warn this case
as below, if CONFIG_PROVE_LOCKING CONFIG_DEBUG_LOCKDEP and
CONFIG_TRACE_IRQFLAGS are enabled.

kernel bugzilla describes the same issue but the given fix is wrong:
https://bugzilla.kernel.org/show_bug.cgi?id=37012

This patch has trace_softirqs_on called after triggering that check.

DEBUG_LOCKS_WARN_ON(current->softirqs_enabled)
Modules linked in: xfrm_user xfrm4_tunnel ipcomp xfrm_ipcomp esp4 ah4
af_key iTCO_wdt iTCO_vendor_support gpio_ich snd_hda_codec_idt
snd_hda_codec_generic lpc_ich snd_hda_intel coretemp snd_hda_codec
i2c_i801 rng_core ata_generic acpi_cpufreq
CPU: 1 PID: 12 Comm: ksoftirqd/1 Not tainted 3.14.29ltsi-WR7.0.0.0_cgl
Hardware name: Dell Inc.                 Precision WorkStation 390
/0DN075, BIOS 2.1.2  11/30/2006
 0000000000000009 ffff88007b4bfba8 ffffffff81a86eee ffff88007b4bfbf0
 ffff88007b4bfbe0 ffffffff8104dd6d ffffffff8225dc40 0000000000000000
 0000000000000000 0000000000000002 0000000000000000 ffff88007b4bfc40
Call Trace:
 [<ffffffff81a86eee>] dump_stack+0x4e/0x7a
 [<ffffffff8104dd6d>] warn_slowpath_common+0x7d/0xa0
 [<ffffffff8104dddc>] warn_slowpath_fmt+0x4c/0x50
 [<ffffffff8104dd95>] ? warn_slowpath_fmt+0x5/0x50
 [<ffffffff8109dfa4>] check_flags.part.35+0x1b4/0x210
 [<ffffffff810a1839>] lock_acquire+0xd9/0x160
 [<ffffffff81a8fd86>] _raw_spin_lock_irqsave+0x46/0x60
 [<ffffffff8111a789>] ? check_critical_timing+0xa9/0x170
 [<ffffffff8111a789>] check_critical_timing+0xa9/0x170
 [<ffffffff810532d8>] ? __do_softirq+0x2e8/0x350
 [<ffffffff810532d8>] ? __do_softirq+0x2e8/0x350
 [<ffffffff81052ce3>] ? __local_bh_enable+0x33/0x70
 [<ffffffff8111b0c2>] trace_preempt_on+0xe2/0x100
 [<ffffffff81a945cb>] preempt_count_sub+0xab/0x100
 [<ffffffff81052ce3>] __local_bh_enable+0x33/0x70
 [<ffffffff810532d8>] __do_softirq+0x2e8/0x350
 [<ffffffff81053375>] run_ksoftirqd+0x35/0x50
 [<ffffffff8107a65d>] smpboot_thread_fn+0x18d/0x2d0
 [<ffffffff8107a4d0>] ? SyS_setgroups+0x170/0x170
 [<ffffffff81072f76>] kthread+0xf6/0x110
 [<ffffffff81072e80>] ? kthread_create_on_node+0x210/0x210
 [<ffffffff81a98b2c>] ret_from_fork+0x7c/0xb0
 [<ffffffff81072e80>] ? kthread_create_on_node+0x210/0x210
---[ end trace f11584a984c45671 ]---
irq event stamp: 516622
hardirqs last  enabled at (516620): [<ffffffff810bcbfd>] rcu_process_callbacks+0x3cd/0x680
hardirqs last disabled at (516621): [<ffffffff8105326e>] __do_softirq+0x27e/0x350
softirqs last  enabled at (516622): [<ffffffff810532d8>] __do_softirq+0x2e8/0x350
softirqs last disabled at (516601): [<ffffffff81053375>] run_ksoftirqd+0x35/0x50

Signed-off-by: He Zhe <zhe.he@windriver.com>
---
 kernel/softirq.c |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/kernel/softirq.c b/kernel/softirq.c
index 3c8b4e7..7e04a50 100644
--- a/kernel/softirq.c
+++ b/kernel/softirq.c
@@ -121,11 +121,23 @@ EXPORT_SYMBOL(__local_bh_disable_ip);
 
 static void __local_bh_enable(unsigned int cnt)
 {
+#if defined(CONFIG_PROVE_LOCKING) && defined(CONFIG_DEBUG_LOCKDEP) && \
+    defined(CONFIG_TRACE_IRQFLAGS)
+	int sirq_count;
+
+	WARN_ON_ONCE(!irqs_disabled());
+
+	sirq_count = softirq_count();
+	preempt_count_sub(cnt);
+	if (sirq_count == (cnt & SOFTIRQ_MASK))
+		trace_softirqs_on(_RET_IP_);
+#else
 	WARN_ON_ONCE(!irqs_disabled());
 
 	if (softirq_count() == (cnt & SOFTIRQ_MASK))
 		trace_softirqs_on(_RET_IP_);
 	preempt_count_sub(cnt);
+#endif
 }
 
 /*
-- 
1.7.5.4

