From 68cf4945bace3dd1875c556231f23f5aca1f0ede Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Mon, 10 Dec 2012 13:55:48 -0800
Subject: [PATCH 499/628] usb: xilinxps_udc: Migrating to dev_pm_ops

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 344d2239108ba38f412fcb68f91d9ce6d7efb3a7

Migration to the new PM API.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Acked-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/usb/gadget/xilinx_usbps_udc.c |   17 +++++++++++++----
 1 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/gadget/xilinx_usbps_udc.c b/drivers/usb/gadget/xilinx_usbps_udc.c
index 9c9ae70..1926b06 100644
--- a/drivers/usb/gadget/xilinx_usbps_udc.c
+++ b/drivers/usb/gadget/xilinx_usbps_udc.c
@@ -2894,11 +2894,12 @@ static int __exit xusbps_udc_remove(struct platform_device *pdev)
 	return 0;
 }
 
+#ifdef CONFIG_PM_SLEEP
 /*-----------------------------------------------------------------
  * Modify Power management attributes
  * Used by OTG statemachine to disable gadget temporarily
  -----------------------------------------------------------------*/
-static int xusbps_udc_suspend(struct platform_device *pdev, pm_message_t state)
+static int xusbps_udc_suspend(struct device *dev)
 {
 	dr_controller_stop(udc_controller);
 	return 0;
@@ -2908,7 +2909,7 @@ static int xusbps_udc_suspend(struct platform_device *pdev, pm_message_t state)
  * Invoked on USB resume. May be called in_interrupt.
  * Here we start the DR controller and enable the irq
  *-----------------------------------------------------------------*/
-static int xusbps_udc_resume(struct platform_device *pdev)
+static int xusbps_udc_resume(struct device *dev)
 {
 	/* Enable DR irq reg and set controller Run */
 	if (udc_controller->stopped) {
@@ -2921,6 +2922,15 @@ static int xusbps_udc_resume(struct platform_device *pdev)
 	return 0;
 }
 
+static const struct dev_pm_ops xusbps_udc_dev_pm_ops = {
+	SET_SYSTEM_SLEEP_PM_OPS(xusbps_udc_suspend, xusbps_udc_resume)
+};
+#define XUSBPS_UDC_PM	(&xusbps_udc_dev_pm_ops)
+
+#else /* ! CONFIG_PM_SLEEP */
+#define XUSBPS_UDC_PM	NULL
+#endif /* ! CONFIG_PM_SLEEP */
+
 /*-------------------------------------------------------------------------
 	Register entry point for the peripheral controller driver
 --------------------------------------------------------------------------*/
@@ -2929,11 +2939,10 @@ static struct platform_driver udc_driver = {
 	.probe   = xusbps_udc_probe,
 	.remove  = __exit_p(xusbps_udc_remove),
 	/* these suspend and resume are not usb suspend and resume */
-	.suspend = xusbps_udc_suspend,
-	.resume  = xusbps_udc_resume,
 	.driver  = {
 		.name = (char *)driver_name,
 		.owner = THIS_MODULE,
+		.pm = XUSBPS_UDC_PM,
 	},
 };
 
-- 
1.7.5.4

