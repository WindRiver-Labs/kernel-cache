From f86ccf54cba83308823cc4581ba96edd6f323b28 Mon Sep 17 00:00:00 2001
From: Bin Wang <binw@marvell.com>
Date: Tue, 25 Mar 2014 13:52:06 +0800
Subject: [PATCH] uio: fix vma io range check in mmap

commit ddb09754e6c7239e302c7b675df9bbd415f8de5d upstream

the vma range size is always page size aligned in mmap, while the
real io space range may not be page aligned, thus leading to range
check failure in the uio_mmap_physical().

for example, in a case of io range size "mem->size == 1KB", and we
have (vma->vm_end - vma->vm_start) == 4KB, due to "len" is aligned
to page size in do_mmap_pgoff().

now fix this issue by align mem->size to page size in the check.

Signed-off-by: Bin Wang <binw@marvell.com>
Signed-off-by: Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com>
Cc: stable <stable@vger.kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Shan Hai <shan.hai@windriver.com>
---
 drivers/uio/uio.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/uio/uio.c b/drivers/uio/uio.c
index dc2765b..4be71cf 100644
--- a/drivers/uio/uio.c
+++ b/drivers/uio/uio.c
@@ -675,7 +675,7 @@ static int uio_mmap_physical(struct vm_area_struct *vma)
 		return -EINVAL;
 	mem = idev->info->mem + mi;
 
-	if (vma->vm_end - vma->vm_start > mem->size)
+	if (vma->vm_end - vma->vm_start > PAGE_ALIGN(mem->size))
 		return -EINVAL;
 
 	vma->vm_flags |= VM_IO | VM_RESERVED;
-- 
1.7.0

