From be03f71c8cb420372ac3dcd2bf1522f1d598fb10 Mon Sep 17 00:00:00 2001
From: Yuanjie Huang <yuanjie.huang@windriver.com>
Date: Thu, 3 Nov 2016 13:39:37 +0800
Subject: [PATCH] powrepc/ptrace: Fix syscall from 32-bit userspace to 64-bit
 kernel

The live core dump feature introduces a trampoline to sys_ptrace for
both 64-bit and 32-bit syscalls and breaks ptrace for 32-bit userspace.
This fix creates trampolines for both case.

Signed-off-by: Yuanjie Huang <yuanjie.huang@windriver.com>
---
 arch/powerpc/include/asm/systbl.h |    2 +-
 arch/powerpc/kernel/entry_64.S    |    7 +++++++
 arch/powerpc/kernel/systbl.S      |    2 ++
 arch/powerpc/kernel/systbl_chk.c  |    1 +
 4 files changed, 11 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/include/asm/systbl.h b/arch/powerpc/include/asm/systbl.h
index 3eaecaf..d9b3532 100644
--- a/arch/powerpc/include/asm/systbl.h
+++ b/arch/powerpc/include/asm/systbl.h
@@ -29,7 +29,7 @@ SYSX(sys_ni_syscall,sys_oldumount,sys_oldumount)
 SYSCALL_SPU(setuid)
 SYSCALL_SPU(getuid)
 COMPAT_SYS_SPU(stime)
-PPC_SYS(ptrace)
+COMPAT_PPC(ptrace)
 SYSCALL_SPU(alarm)
 OLDSYS(fstat)
 SYSCALL(pause)
diff --git a/arch/powerpc/kernel/entry_64.S b/arch/powerpc/kernel/entry_64.S
index 1b7d88f..512f795 100644
--- a/arch/powerpc/kernel/entry_64.S
+++ b/arch/powerpc/kernel/entry_64.S
@@ -368,6 +368,13 @@ _GLOBAL(ppc_ptrace)
 	bl	.sys_ptrace
 	b	.Lsyscall_exit
 
+_GLOBAL(compat_ppc_ptrace)
+#ifdef CONFIG_LIVEDUMP
+	bl	.save_nvgprs
+#endif
+	bl	.compat_sys_ptrace
+	b	.Lsyscall_exit
+
 _GLOBAL(ppc_exit_group)
 #ifdef CONFIG_LIVEDUMP
 	bl	.save_nvgprs
diff --git a/arch/powerpc/kernel/systbl.S b/arch/powerpc/kernel/systbl.S
index 4d6b1d3..1e81563 100644
--- a/arch/powerpc/kernel/systbl.S
+++ b/arch/powerpc/kernel/systbl.S
@@ -20,6 +20,7 @@
 #define SYSCALL(func)		.llong	DOTSYM(sys_##func),DOTSYM(sys_##func)
 #define COMPAT_SYS(func)	.llong	DOTSYM(sys_##func),DOTSYM(compat_sys_##func)
 #define PPC_SYS(func)		.llong	DOTSYM(ppc_##func),DOTSYM(ppc_##func)
+#define COMPAT_PPC(func)	.llong	DOTSYM(ppc_##func),DOTSYM(compat_ppc_##func)
 #define OLDSYS(func)		.llong	DOTSYM(sys_ni_syscall),DOTSYM(sys_ni_syscall)
 #define SYS32ONLY(func)		.llong	DOTSYM(sys_ni_syscall),DOTSYM(compat_sys_##func)
 #define PPC64ONLY(func)		.llong	DOTSYM(ppc_##func),DOTSYM(sys_ni_syscall)
@@ -28,6 +29,7 @@
 #define SYSCALL(func)		.long	sys_##func
 #define COMPAT_SYS(func)	.long	sys_##func
 #define PPC_SYS(func)		.long	ppc_##func
+#define COMPAT_PPC(func)	.long	ppc_##func
 #define OLDSYS(func)		.long	sys_##func
 #define SYS32ONLY(func)		.long	sys_##func
 #define PPC64ONLY(func)		.long	sys_ni_syscall
diff --git a/arch/powerpc/kernel/systbl_chk.c b/arch/powerpc/kernel/systbl_chk.c
index 2384129..1b7f11b 100644
--- a/arch/powerpc/kernel/systbl_chk.c
+++ b/arch/powerpc/kernel/systbl_chk.c
@@ -18,6 +18,7 @@
 #define SYSCALL(func)		__NR_##func
 #define COMPAT_SYS(func)	__NR_##func
 #define PPC_SYS(func)		__NR_##func
+#define COMPAT_PPC(func)	__NR_##func
 #ifdef CONFIG_PPC64
 #define OLDSYS(func)		-1
 #define SYS32ONLY(func)		-1
-- 
1.7.5.4

