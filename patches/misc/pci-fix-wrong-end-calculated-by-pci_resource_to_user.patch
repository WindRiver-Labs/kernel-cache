From ae7b21db17894d21da299176067931ffb4476ef7 Mon Sep 17 00:00:00 2001
From: Rui Wang <rui.wang@windriver.com>
Date: Wed, 11 Jul 2018 15:22:18 +0800
Subject: [PATCH] pci: fix wrong end calculated by pci_resource_to_user

Some special archs such as mips, ppc and sparc, use a specified
pci_resource_to_user function to calculate the start and the end
of pci resource. But the function has a bug when calculating the
end value. It first gets the resource size by "end - start + 1",
which is all right. Then it uses the return value of fixup_bigphys_addr
as the start of resource, this only matters to Alchemy platforms,
on other platforms fixup_bigphys_addr is just an identidy mapping.
Finally, it sets the end value to "start + size", which is obviously
wrong, because the value becomes "end + 1".

Signed-off-by: Rui Wang <rui.wang@windriver.com>
---
 arch/mips/include/asm/pci.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/mips/include/asm/pci.h b/arch/mips/include/asm/pci.h
index d969299..a608afdf 100644
--- a/arch/mips/include/asm/pci.h
+++ b/arch/mips/include/asm/pci.h
@@ -89,7 +89,7 @@ static inline void pci_resource_to_user(const struct pci_dev *dev, int bar,
 	phys_addr_t size = resource_size(rsrc);
 
 	*start = fixup_bigphys_addr(rsrc->start, size);
-	*end = rsrc->start + size;
+	*end = rsrc->start + size - 1;
 }
 
 /*
-- 
1.7.9.5

