From 307f911e9d85f28a7b677fda8aebbd9ff3d35643 Mon Sep 17 00:00:00 2001
From: Li Zhou <li.zhou@windriver.com>
Date: Tue, 22 Sep 2015 09:52:15 +0800
Subject: [PATCH] path_openat(): fix double fput()

commit f15133df088ecadd141ea1907f2c96df67c729f0 upstream

path_openat() jumps to the wrong place after do_tmpfile() - it has
already done path_cleanup() (as part of path_lookupat() called by
do_tmpfile()), so doing that again can lead to double fput().

Cc: stable@vger.kernel.org	# v3.11+
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
[lz: adapted the patch to solve context issues - CVE-2015-5706]
Signed-off-by: Li Zhou <li.zhou@windriver.com>
---
 fs/namei.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/fs/namei.c b/fs/namei.c
index 0dd72c8..f6e0d1a 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -3169,7 +3169,7 @@ static struct file *path_openat(int dfd, struct filename *pathname,
 
 	if (unlikely(file->f_flags & __O_TMPFILE)) {
 		error = do_tmpfile(dfd, pathname, nd, flags, op, file, &opened);
-		goto out;
+		goto out2;
 	}
 
 	error = path_init(dfd, pathname->name, flags | LOOKUP_PARENT, nd, &base);
@@ -3207,6 +3207,7 @@ out:
 		path_put(&nd->root);
 	if (base)
 		fput(base);
+out2:
 	if (!(opened & FILE_OPENED)) {
 		BUG_ON(!error);
 		put_filp(file);
-- 
1.7.5.4

