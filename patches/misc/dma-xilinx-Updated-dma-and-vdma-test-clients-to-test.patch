From 58b273ab049363b736b6f6da0ba5d6e777ff7fd1 Mon Sep 17 00:00:00 2001
From: Srikanth Thokala <srikanth.thokala@xilinx.com>
Date: Thu, 11 Jul 2013 12:19:17 +0530
Subject: [PATCH 111/628] dma: xilinx: Updated dma and vdma test clients to
 test multiple instances

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit fb54305dc9ba3ceda18430b2d67d43e8a383ab6c

This patch updates the AXI DMA and AXI VDMA test clients to test
multiple instances of IP, if present in the hardware design.

Signed-off-by: Srikanth Thokala <sthokal@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/dma/xilinx/axidmatest.c |   59 +++++++++++++++++++++----------------
 drivers/dma/xilinx/vdmatest.c   |   61 +++++++++++++++++++++-----------------
 2 files changed, 67 insertions(+), 53 deletions(-)

diff --git a/drivers/dma/xilinx/axidmatest.c b/drivers/dma/xilinx/axidmatest.c
index e9104f2..dfd125791 100644
--- a/drivers/dma/xilinx/axidmatest.c
+++ b/drivers/dma/xilinx/axidmatest.c
@@ -590,37 +590,44 @@ static int __init dmatest_init(void)
 	/* JZ for slave transfer channels */
 	enum dma_data_direction direction;
 	struct dma_chan *rx_chan;
-	u32 match;
+	u32 match, device_id = 0;
 
 	dma_cap_zero(mask);
 	dma_cap_set(DMA_SLAVE | DMA_PRIVATE, mask);
 
-	direction = DMA_MEM_TO_DEV;
-	match = (direction & 0xFF) | XILINX_DMA_IP_DMA;
-	pr_debug("dmatest: match is %x\n", match);
-
-	chan = dma_request_channel(mask, xdma_filter, (void *)&match);
-
-	if (chan)
-		pr_debug("dmatest: Found tx device\n");
-	else
-		pr_info("dmatest: Did not find tx device\n");
-
-	direction = DMA_DEV_TO_MEM;
-	match = (direction & 0xFF) | XILINX_DMA_IP_DMA;
-	rx_chan = dma_request_channel(mask, xdma_filter, &match);
-
-	if (rx_chan)
-		pr_debug("dmatest: Found rx device\n");
-	else
-		pr_info("dmatest: Did not find rx device\n");
+	for (;;) {
+		direction = DMA_MEM_TO_DEV;
+		match = (direction & 0xFF) | XILINX_DMA_IP_DMA |
+				(device_id << XILINX_DMA_DEVICE_ID_SHIFT);
+		pr_debug("dmatest: match is %x\n", match);
+
+		chan = dma_request_channel(mask, xdma_filter, (void *)&match);
+
+		if (chan)
+			pr_debug("dmatest: Found tx device\n");
+		else
+			pr_debug("dmatest: No more tx channels available\n");
+
+		direction = DMA_DEV_TO_MEM;
+		match = (direction & 0xFF) | XILINX_DMA_IP_DMA |
+				(device_id << XILINX_DMA_DEVICE_ID_SHIFT);
+		rx_chan = dma_request_channel(mask, xdma_filter, &match);
+
+		if (rx_chan)
+			pr_debug("dmatest: Found rx device\n");
+		else
+			pr_debug("dmatest: No more rx channels available\n");
+
+		if (chan && rx_chan) {
+			err = dmatest_add_slave_channels(chan, rx_chan);
+			if (err) {
+				dma_release_channel(chan);
+				dma_release_channel(rx_chan);
+			}
+		} else
+			break;
 
-	if (chan && rx_chan) {
-		err = dmatest_add_slave_channels(chan, rx_chan);
-		if (err) {
-			dma_release_channel(chan);
-			dma_release_channel(rx_chan);
-		}
+		device_id++;
 	}
 
 	return err;
diff --git a/drivers/dma/xilinx/vdmatest.c b/drivers/dma/xilinx/vdmatest.c
index 6c7ada8..f6225cd 100644
--- a/drivers/dma/xilinx/vdmatest.c
+++ b/drivers/dma/xilinx/vdmatest.c
@@ -1,5 +1,5 @@
 /*
- * XILIN VDMA Engine test module
+ * XILINX VDMA Engine test module
  *
  * Copyright (C) 2012 Xilinx, Inc. All rights reserved.
  *
@@ -561,38 +561,45 @@ static int __init vdmatest_init(void)
 	int err = 0;
 
 	enum dma_data_direction direction;
-	u32 match;
+	u32 match, device_id = 0;
 	struct dma_chan *rx_chan;
 
 	dma_cap_zero(mask);
 	dma_cap_set(DMA_SLAVE | DMA_PRIVATE, mask);
 
-	direction = DMA_MEM_TO_DEV;
-	match = (direction & 0xFF) | XILINX_DMA_IP_VDMA;
-	pr_debug("vdmatest: match is %x\n", match);
-
-	chan = dma_request_channel(mask, xdma_filter, (void *)&match);
-
-	if (chan)
-		pr_debug("vdmatest: Found tx device\n");
-	else
-		pr_info("vdmatest: Did not find tx device\n");
-
-	direction = DMA_DEV_TO_MEM;
-	match = (direction & 0xFF) | XILINX_DMA_IP_VDMA;
-	rx_chan = dma_request_channel(mask, xdma_filter, &match);
-
-	if (rx_chan)
-		pr_debug("vdmatest: Found rx device\n");
-	else
-		pr_info("vdmatest: Did not find rx device\n");
+	for (;;) {
+		direction = DMA_MEM_TO_DEV;
+		match = (direction & 0xFF) | XILINX_DMA_IP_VDMA |
+				device_id << XILINX_DMA_DEVICE_ID_SHIFT;
+		pr_debug("vdmatest: match is %x\n", match);
+
+		chan = dma_request_channel(mask, xdma_filter, (void *)&match);
+
+		if (chan)
+			pr_debug("vdmatest: Found tx device\n");
+		else
+			pr_debug("vdmatest: No more tx channels available\n");
+
+		direction = DMA_DEV_TO_MEM;
+		match = (direction & 0xFF) | XILINX_DMA_IP_VDMA |
+				device_id << XILINX_DMA_DEVICE_ID_SHIFT;
+		rx_chan = dma_request_channel(mask, xdma_filter, &match);
+
+		if (rx_chan)
+			pr_debug("vdmatest: Found rx device\n");
+		else
+			pr_debug("vdmatest: No more rx channels available\n");
+
+		if (chan && rx_chan) {
+			err = vdmatest_add_slave_channels(chan, rx_chan);
+			if (err) {
+				dma_release_channel(chan);
+				dma_release_channel(rx_chan);
+			}
+		} else
+			break;
 
-	if (chan && rx_chan) {
-		err = vdmatest_add_slave_channels(chan, rx_chan);
-		if (err) {
-			dma_release_channel(chan);
-			dma_release_channel(rx_chan);
-		}
+		device_id++;
 	}
 	return err;
 }
-- 
1.7.5.4

