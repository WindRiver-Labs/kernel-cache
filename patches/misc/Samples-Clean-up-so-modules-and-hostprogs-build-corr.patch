From 28048cfc3dd949e0c160c86c87e966cdfb831eb1 Mon Sep 17 00:00:00 2001
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Fri, 17 Aug 2012 14:39:26 -0400
Subject: [PATCH] Samples: Clean up so modules and hostprogs build correctly

Add the samples directory to the core so that modules will
build.

Only build hostprogs if not cross compiling.  Otherwise the
resulting executables would be pretty much useless.

Change to include headers from the source directories
instead of the object directories.

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 Makefile                 |    5 +----
 samples/hidraw/Makefile  |    4 +++-
 samples/seccomp/Makefile |   18 ++++++++++--------
 3 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/Makefile b/Makefile
index e9c6e5e..3c27116 100644
--- a/Makefile
+++ b/Makefile
@@ -708,7 +708,7 @@ export mod_strip_cmd
 
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/ ltt/
+core-y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/ ltt/ samples/
 
 vmlinux-dirs	:= $(patsubst %/,%,$(filter %/, $(init-y) $(init-m) \
 		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \
@@ -913,9 +913,6 @@ vmlinux: $(vmlinux-lds) $(vmlinux-init) $(vmlinux-main) vmlinux.o $(kallsyms.o)
 ifdef CONFIG_HEADERS_CHECK
 	$(Q)$(MAKE) -f $(srctree)/Makefile headers_check
 endif
-ifdef CONFIG_SAMPLES
-	$(Q)$(MAKE) $(build)=samples
-endif
 ifdef CONFIG_BUILD_DOCSRC
 	$(Q)$(MAKE) $(build)=Documentation
 endif
diff --git a/samples/hidraw/Makefile b/samples/hidraw/Makefile
index 382eeae..583afd5 100644
--- a/samples/hidraw/Makefile
+++ b/samples/hidraw/Makefile
@@ -4,7 +4,9 @@ obj- := dummy.o
 # List of programs to build
 hostprogs-y := hid-example
 
+ifeq ($(CROSS_COMPILE),)
 # Tell kbuild to always build the programs
 always := $(hostprogs-y)
+endif
 
-HOSTCFLAGS_hid-example.o += -I$(objtree)/usr/include
+HOSTCFLAGS_hid-example.o += -I$(srctree)/usr/include
diff --git a/samples/seccomp/Makefile b/samples/seccomp/Makefile
index e8fe0f5..7dfc30a 100644
--- a/samples/seccomp/Makefile
+++ b/samples/seccomp/Makefile
@@ -4,13 +4,13 @@ obj- := dummy.o
 hostprogs-$(CONFIG_SECCOMP) := bpf-fancy dropper
 bpf-fancy-objs := bpf-fancy.o bpf-helper.o
 
-HOSTCFLAGS_bpf-fancy.o += -I$(objtree)/usr/include
-HOSTCFLAGS_bpf-fancy.o += -idirafter $(objtree)/include
-HOSTCFLAGS_bpf-helper.o += -I$(objtree)/usr/include
-HOSTCFLAGS_bpf-helper.o += -idirafter $(objtree)/include
+HOSTCFLAGS_bpf-fancy.o += -I$(srctree)/usr/include
+HOSTCFLAGS_bpf-fancy.o += -idirafter $(srctree)/include
+HOSTCFLAGS_bpf-helper.o += -I$(srctree)/usr/include
+HOSTCFLAGS_bpf-helper.o += -idirafter $(srctree)/include
 
-HOSTCFLAGS_dropper.o += -I$(objtree)/usr/include
-HOSTCFLAGS_dropper.o += -idirafter $(objtree)/include
+HOSTCFLAGS_dropper.o += -I$(srctree)/usr/include
+HOSTCFLAGS_dropper.o += -idirafter $(srctree)/include
 dropper-objs := dropper.o
 
 # bpf-direct.c is x86-only.
@@ -20,8 +20,8 @@ hostprogs-$(CONFIG_SECCOMP) += bpf-direct
 bpf-direct-objs := bpf-direct.o
 endif
 
-HOSTCFLAGS_bpf-direct.o += -I$(objtree)/usr/include
-HOSTCFLAGS_bpf-direct.o += -idirafter $(objtree)/include
+HOSTCFLAGS_bpf-direct.o += -I$(srctree)/usr/include
+HOSTCFLAGS_bpf-direct.o += -idirafter $(srctree)/include
 
 # Try to match the kernel target.
 ifeq ($(CONFIG_64BIT),)
@@ -34,5 +34,7 @@ HOSTLOADLIBES_bpf-fancy += -m32
 HOSTLOADLIBES_dropper += -m32
 endif
 
+ifeq ($(CROSS_COMPILE),)
 # Tell kbuild to always build the programs
 always := $(hostprogs-y)
+endif
-- 
1.7.9.7

