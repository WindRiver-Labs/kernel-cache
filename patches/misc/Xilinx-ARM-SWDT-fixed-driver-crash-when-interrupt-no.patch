From 35b62a193a0e15bad89b7e997c48d7096824d02e Mon Sep 17 00:00:00 2001
From: Bryce Kellogg <bryce.kellogg@xilinx.com>
Date: Mon, 30 Jul 2012 15:28:39 -0700
Subject: [PATCH 084/628] Xilinx: ARM: SWDT: fixed driver crash when interrupt
 not specified.

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit b5840c2481e55e3c517fa1ea9f804bfabbb8caad

Previously the driver was not checking if the optional interrupt
parameters were in the devicetree and was trying to register
an interrupt handler no matter what. The driver has been changed
to only register an interrupt handler if the interrupt information
is present.

Signed-off-by: Bryce Kellogg <bryce.kellogg@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/watchdog/xilinx_wdtps.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/watchdog/xilinx_wdtps.c b/drivers/watchdog/xilinx_wdtps.c
index 079004d..3609412 100644
--- a/drivers/watchdog/xilinx_wdtps.c
+++ b/drivers/watchdog/xilinx_wdtps.c
@@ -324,8 +324,8 @@ static int __init xwdtps_probe(struct platform_device *pdev)
 	/* Register the interrupt */
 	prop = of_get_property(pdev->dev.of_node, "reset", NULL);
 	wdt->rst = prop ? be32_to_cpup(prop) : 0;
-	if (!wdt->rst) {
-		irq = platform_get_irq(pdev, 0);
+	irq = platform_get_irq(pdev, 0);
+	if (!wdt->rst && irq >= 0) {
 		res = request_irq(irq, xwdtps_irq_handler, 0, pdev->name, pdev);
 		if (res != 0) {
 			dev_err(&pdev->dev, "cannot register interrupt handler err=%d\n",
-- 
1.7.5.4

