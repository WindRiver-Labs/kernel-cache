From 38d2f921d46c6c80adec75722dd9691d77876d6f Mon Sep 17 00:00:00 2001
From: Jibin Xu <jibin.xu@windriver.com>
Date: Wed, 31 Jan 2018 11:24:53 +0800
Subject: [PATCH] Update kvm instrumentation for 4.15

Backport from git://git.lttng.org/lttng-modules.git
commit 33630522da97345c2b0c569c04c1d5d33ab7efa6

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>

commit e39d200fa5bf5b94a0948db0dae44c1b73b84a56 upstream of linux
fixed CVE-2017-17741,and lttng backported it.
Use tp_memcpy() instead of ctf_sequence_hex() here due to great changes
between different versions and they have similar function.

Signed-off-by: Jibin Xu <jibin.xu@windriver.com>
---
 .../instrumentation/events/lttng-module/kvm.h      |   29 ++++++++++++++++++++
 .../instrumentation/events/lttng-module/kvm.h      |   29 ++++++++++++++++++++
 2 files changed, 58 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/lttng/instrumentation/events/lttng-module/kvm.h b/drivers/staging/lttng/instrumentation/events/lttng-module/kvm.h
index ba4e528..5e52fd4 100644
--- a/drivers/staging/lttng/instrumentation/events/lttng-module/kvm.h
+++ b/drivers/staging/lttng/instrumentation/events/lttng-module/kvm.h
@@ -188,6 +188,33 @@ TRACE_EVENT(kvm_ack_irq,
 	{ KVM_TRACE_MMIO_READ, "read" }, \
 	{ KVM_TRACE_MMIO_WRITE, "write" }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,34))
+
+TRACE_EVENT(kvm_mmio,
+	TP_PROTO(int type, int len, u64 gpa, void *val),
+	TP_ARGS(type, len, gpa, val),
+
+	TP_STRUCT__entry(
+		__field(	u32,	type		)
+		__field(	u32,	len		)
+		__field(	u64,	gpa		)
+		__field(	u64,	val		)
+	),
+
+	TP_fast_assign(
+		tp_assign(type, type)
+		tp_assign(len, len)
+		tp_assign(gpa, gpa)
+		tp_memcpy(val, val, len)
+	),
+
+	TP_printk("mmio %s len %u gpa 0x%llx val 0x%llx",
+		  __print_symbolic(__entry->type, kvm_trace_symbol_mmio),
+		  __entry->len, __entry->gpa, __entry->val)
+)
+
+#else /* #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,15,0)) */
+
 TRACE_EVENT(kvm_mmio,
 	TP_PROTO(int type, int len, u64 gpa, u64 val),
 	TP_ARGS(type, len, gpa, val),
@@ -211,6 +238,8 @@ TRACE_EVENT(kvm_mmio,
 		  __entry->len, __entry->gpa, __entry->val)
 )
 
+#endif /* #else #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,15,0)) */
+
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,34))
 
 #define kvm_fpu_load_symbol	\
diff --git a/drivers/staging/lttng2/instrumentation/events/lttng-module/kvm.h b/drivers/staging/lttng2/instrumentation/events/lttng-module/kvm.h
index ba4e528..5e52fd4 100644
--- a/drivers/staging/lttng2/instrumentation/events/lttng-module/kvm.h
+++ b/drivers/staging/lttng2/instrumentation/events/lttng-module/kvm.h
@@ -188,6 +188,33 @@ TRACE_EVENT(kvm_ack_irq,
 	{ KVM_TRACE_MMIO_READ, "read" }, \
 	{ KVM_TRACE_MMIO_WRITE, "write" }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,34))
+
+TRACE_EVENT(kvm_mmio,
+	TP_PROTO(int type, int len, u64 gpa, void *val),
+	TP_ARGS(type, len, gpa, val),
+
+	TP_STRUCT__entry(
+		__field(	u32,	type		)
+		__field(	u32,	len		)
+		__field(	u64,	gpa		)
+		__field(	u64,	val		)
+	),
+
+	TP_fast_assign(
+		tp_assign(type, type)
+		tp_assign(len, len)
+		tp_assign(gpa, gpa)
+		tp_memcpy(val, val, len)
+	),
+
+	TP_printk("mmio %s len %u gpa 0x%llx val 0x%llx",
+		  __print_symbolic(__entry->type, kvm_trace_symbol_mmio),
+		  __entry->len, __entry->gpa, __entry->val)
+)
+
+#else /* #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,15,0)) */
+
 TRACE_EVENT(kvm_mmio,
 	TP_PROTO(int type, int len, u64 gpa, u64 val),
 	TP_ARGS(type, len, gpa, val),
@@ -211,6 +238,8 @@ TRACE_EVENT(kvm_mmio,
 		  __entry->len, __entry->gpa, __entry->val)
 )
 
+#endif /* #else #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,15,0)) */
+
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,34))
 
 #define kvm_fpu_load_symbol	\
-- 
1.7.5.4

