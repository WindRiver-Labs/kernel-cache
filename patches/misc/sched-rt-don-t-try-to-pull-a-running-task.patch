From f118c186452c6d2b61337513ffa27cc66d1d813b Mon Sep 17 00:00:00 2001
From: Yong Zhang <yong.zhang@windriver.com>
Date: Tue, 6 Aug 2013 10:57:41 +0800
Subject: [PATCH] sched:rt: don't try to pull a running task

If we happen to pull a running task on other cpu, a WARNING
will happen. But the very task will be pulled to this cpu
finally. This pulling is dangerous since the task's private
data could be broken. Fix it by skipping this kind of task.

Signed-off-by: Yong Zhang <yong.zhang@windriver.com>
---
 kernel/sched_rt.c |   10 +++++++++-
 1 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/kernel/sched_rt.c b/kernel/sched_rt.c
index da77380..7597249 100644
--- a/kernel/sched_rt.c
+++ b/kernel/sched_rt.c
@@ -1452,7 +1452,15 @@ static int pull_rt_task(struct rq *this_rq)
 		 * the to-be-scheduled task?
 		 */
 		if (p && (p->prio < this_rq->rt.highest_prio.curr)) {
-			WARN_ON(p == src_rq->curr);
+			/*
+			 * if we happen to choose a running task on other
+			 * cpu, skip it and find another one.
+			 */
+			if (unlikely(p == src_rq->curr)) {
+				WARN_ON_ONCE(1);
+				goto skip;
+			}
+
 			WARN_ON(!p->se.on_rq);
 
 			/*
-- 
1.7.0

