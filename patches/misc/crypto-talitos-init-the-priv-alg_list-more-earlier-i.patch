From 3a04a4b4e907d1a58d52f9bc7c7060cd51904561 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Tue, 28 Jan 2014 19:14:34 +0800
Subject: [PATCH 1/2] crypto: talitos: init the priv->alg_list more earlier in
 talitos_probe()

In function talitos_probe(), it will jump to err_out when getting an
error in talitos_probe_irq(). Then the uninitialized list head
priv->alg_list will be used in function talitos_remove(). In this case
we would get a call trace like the following. So move up the
initialization of priv->alg_list.

  Unable to handle kernel paging request for data at address 0x00000000
  Faulting instruction address: 0xc05c41ac
  Oops: Kernel access of bad area, sig: 11 [#1]
  PREEMPT LTT NESTING LEVEL : 0
  P1020 RDB
  Modules linked in:
  NIP: c05c41ac LR: c05c419c CTR: c03f1b08
  REGS: cf489d00 TRAP: 0300   Tainted: G        W     (3.4.43-WR5.0.1.0_standard)
  MSR: 00029000 <CE,EE,ME>  CR: 82022084  XER: 20000000
  DEAR: 00000000, ESR: 00000000
  TASK = cf480000[1] 'swapper' THREAD: cf488000
  GPR00: c05c419c cf489db0 cf480000 c66bcc00 00005729 ffffffff c03f45c4 0001ffff
  GPR08: 0001ffff cf4a7a80 c0a0a9b0 bb28d36c 82022082 1001abe0 ffffffff 1ffb0b38
  GPR16: c0000900 00000012 0fffffff 03ff9000 00000015 00000000 c09f4000 c09963a8
  GPR24: ffffffea cfac8d14 c66bcc00 c66bcc4c cf4ab408 cf4ab400 00000000 c66bcc00
  NIP [c05c41ac] talitos_remove+0x38/0x250
  LR [c05c419c] talitos_remove+0x28/0x250
  Call Trace:
  [cf489db0] [c05c419c] talitos_remove+0x28/0x250 (unreliable)
  [cf489de0] [c05c5db4] talitos_probe+0x49c/0xdac
  [cf489e40] [c0406dac] platform_drv_probe+0x2c/0x3c
  [cf489e50] [c04053a8] driver_probe_device+0x98/0x224
  [cf489e70] [c04055dc] __driver_attach+0xa8/0xc0
  [cf489e90] [c040354c] bus_for_each_dev+0x74/0xb0
  [cf489ec0] [c0404e0c] driver_attach+0x30/0x40
  [cf489ed0] [c0404950] bus_add_driver+0x1b0/0x27c
  [cf489f00] [c0405c4c] driver_register+0x94/0x160
  [cf489f20] [c040734c] platform_driver_register+0x74/0x84
  [cf489f30] [c0967dbc] talitos_driver_init+0x18/0x28
  [cf489f40] [c0002278] do_one_initcall+0x144/0x1b8
  [cf489f70] [c09459b4] kernel_init+0x15c/0x224
  [cf489ff0] [c000e7c4] original_kernel_thread+0x4c/0x68
  Instruction dump:
  60000000 9421ffd0 7c0802a6 90010034 bf210014 3b830008 7f83e378 4be4096d
  7c7b1b78 87db004c 7c7f1b78 7f9ed800 <83be0000> 419e00a4 3f200010 3f400020

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/crypto/talitos.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/crypto/talitos.c b/drivers/crypto/talitos.c
index 921039e..958ac5e 100644
--- a/drivers/crypto/talitos.c
+++ b/drivers/crypto/talitos.c
@@ -2727,6 +2727,8 @@ static int talitos_probe(struct platform_device *ofdev)
 	if (!priv)
 		return -ENOMEM;
 
+	INIT_LIST_HEAD(&priv->alg_list);
+
 	dev_set_drvdata(dev, priv);
 
 	priv->ofdev = ofdev;
@@ -2747,8 +2749,6 @@ static int talitos_probe(struct platform_device *ofdev)
 			     (unsigned long)dev);
 	}
 
-	INIT_LIST_HEAD(&priv->alg_list);
-
 	priv->reg = of_iomap(np, 0);
 	if (!priv->reg) {
 		dev_err(dev, "failed to of_iomap\n");
-- 
1.7.5.4

