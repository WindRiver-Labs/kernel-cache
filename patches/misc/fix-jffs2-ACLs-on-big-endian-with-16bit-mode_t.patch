From 76224f472901621bb53f1bb74294e42bfcaed99c Mon Sep 17 00:00:00 2001
From: Jian Liu <jian.liu@windriver.com>
Date: Fri, 15 Aug 2014 09:39:20 +0800
Subject: [PATCH] fix jffs2 ACLs on big-endian with 16bit mode_t

commit 963945bf93e46b9bf71a07bf9c78183e0f57733a upstream

casting int * to mode_t * is not a good thing - on a *lot* of big-endian
architectures mode_t happens to be smaller than int and there it breaks
quite spectaculary...

Fucked-up-by: commit cfc8dc6f6f69ede939e09c2af06a01adee577285
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Signed-off-by: Jian Liu <jian.liu@windriver.com>
---
 fs/jffs2/acl.c      |    4 ++--
 fs/jffs2/acl.h      |    2 +-
 fs/jffs2/fs.c       |    2 +-
 fs/jffs2/os-linux.h |    2 +-
 4 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/fs/jffs2/acl.c b/fs/jffs2/acl.c
index 7cdc319..17c05b7 100644
--- a/fs/jffs2/acl.c
+++ b/fs/jffs2/acl.c
@@ -274,7 +274,7 @@ int jffs2_check_acl(struct inode *inode, int mask)
 	return -EAGAIN;
 }
 
-int jffs2_init_acl_pre(struct inode *dir_i, struct inode *inode, int *i_mode)
+int jffs2_init_acl_pre(struct inode *dir_i, struct inode *inode, mode_t *i_mode)
 {
 	struct posix_acl *acl, *clone;
 	int rc;
@@ -297,7 +297,7 @@ int jffs2_init_acl_pre(struct inode *dir_i, struct inode *inode, int *i_mode)
 		clone = posix_acl_clone(acl, GFP_KERNEL);
 		if (!clone)
 			return -ENOMEM;
-		rc = posix_acl_create_masq(clone, (mode_t *)i_mode);
+		rc = posix_acl_create_masq(clone, i_mode);
 		if (rc < 0) {
 			posix_acl_release(clone);
 			return rc;
diff --git a/fs/jffs2/acl.h b/fs/jffs2/acl.h
index f0ba63e..4217a84 100644
--- a/fs/jffs2/acl.h
+++ b/fs/jffs2/acl.h
@@ -28,7 +28,7 @@ struct jffs2_acl_header {
 
 extern int jffs2_check_acl(struct inode *, int);
 extern int jffs2_acl_chmod(struct inode *);
-extern int jffs2_init_acl_pre(struct inode *, struct inode *, int *);
+extern int jffs2_init_acl_pre(struct inode *, struct inode *, mode_t *);
 extern int jffs2_init_acl_post(struct inode *);
 
 extern struct xattr_handler jffs2_acl_access_xattr_handler;
diff --git a/fs/jffs2/fs.c b/fs/jffs2/fs.c
index 7adcc72..89809f5 100644
--- a/fs/jffs2/fs.c
+++ b/fs/jffs2/fs.c
@@ -407,7 +407,7 @@ int jffs2_remount_fs (struct super_block *sb, int *flags, char *data)
 
 /* jffs2_new_inode: allocate a new inode and inocache, add it to the hash,
    fill in the raw_inode while you're at it. */
-struct inode *jffs2_new_inode (struct inode *dir_i, int mode, struct jffs2_raw_inode *ri)
+struct inode *jffs2_new_inode (struct inode *dir_i, mode_t mode, struct jffs2_raw_inode *ri)
 {
 	struct inode *inode;
 	struct super_block *sb = dir_i->i_sb;
diff --git a/fs/jffs2/os-linux.h b/fs/jffs2/os-linux.h
index 150c819..7036191 100644
--- a/fs/jffs2/os-linux.h
+++ b/fs/jffs2/os-linux.h
@@ -173,7 +173,7 @@ int jffs2_do_setattr (struct inode *, struct iattr *);
 struct inode *jffs2_iget(struct super_block *, unsigned long);
 void jffs2_clear_inode (struct inode *);
 void jffs2_dirty_inode(struct inode *inode);
-struct inode *jffs2_new_inode (struct inode *dir_i, int mode,
+struct inode *jffs2_new_inode (struct inode *dir_i, mode_t mode,
 			       struct jffs2_raw_inode *ri);
 int jffs2_statfs (struct dentry *, struct kstatfs *);
 int jffs2_remount_fs (struct super_block *, int *, char *);
-- 
1.7.0

