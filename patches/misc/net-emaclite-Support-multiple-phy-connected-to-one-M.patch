From 649a098cd6a871c5893287f1b08b19a85bc7afbb Mon Sep 17 00:00:00 2001
From: Michal Simek <monstr@monstr.eu>
Date: Tue, 27 Sep 2011 10:18:41 +0200
Subject: [PATCH 432/628] net: emaclite: Support multiple phy connected to one
 MDIO

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 01499ccf2e2d68359f125db9ee6346b7f2628cd6

For system which contains at least two ethernet IP where
one IP manage MDIO bus with several PHYs.

Example dts node:
	ethernet_mac0: ethernet@81000000 {
			compatible = "xlnx,xps-ethernetlite-3.01.a", "xlnx,xps-ethernetlite-1.00.a";
			device_type = "network";
			interrupt-parent = <&xps_intc_0>;
			interrupts = < 1 0 >;
				local-mac-address = [ 00 0a 35 00 db bb ];
			phy-handle = <&ethernet_mac0_phy0>;
			reg = < 0x81000000 0x10000 >;
			xlnx,duplex = <0x1>;
			xlnx,family = "spartan3e";
			xlnx,include-internal-loopback = <0x0>;
			xlnx,include-mdio = <0x1>;
			xlnx,rx-ping-pong = <0x0>;
			xlnx,tx-ping-pong = <0x0>;
			ethernet_mac0_mdio {
				#address-cells = <1>;
				#size-cells = <0>;
				ethernet_mac0_phy0: phy@1 {
					reg = <0x1>;
				} ;
				ethernet_mac0_phy1: phy@3 {
					reg = <0x3>;
				} ;
			} ;
		} ;
		ethernet_mac2: ethernet@81040000 {
			compatible = "xlnx,xps-ethernetlite-3.01.a", "xlnx,xps-ethernetlite-1.00.a";
			device_type = "network";
			interrupt-parent = <&xps_intc_0>;
			interrupts = < 11 0 >;
				local-mac-address = [ 00 0a 35 00 db bb ];
			phy-handle = <&ethernet_mac0_phy1>;
			reg = < 0x81040000 0x10000 >;
			xlnx,duplex = <0x1>;
			xlnx,family = "spartan3e";
			xlnx,include-internal-loopback = <0x0>;
			xlnx,include-mdio = <0x0>;
			xlnx,rx-ping-pong = <0x0>;
			xlnx,tx-ping-pong = <0x0>;
		} ;

Signed-off-by: Wendy Liang <wendy.liang@petalogix.com>
Signed-off-by: Michal Simek <monstr@monstr.eu>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_emaclite.c |   24 ++++++++++++++++++++----
 1 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emaclite.c b/drivers/net/ethernet/xilinx/xilinx_emaclite.c
index b7268b3..fa6c313 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emaclite.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emaclite.c
@@ -848,12 +848,25 @@ static int xemaclite_mdio_setup(struct net_local *lp, struct device *dev)
 	int rc;
 	struct resource res;
 	struct device_node *np = of_get_parent(lp->phy_node);
+	struct device_node *npp;
 
 	/* Don't register the MDIO bus if the phy_node or its parent node
 	 * can't be found.
 	 */
-	if (!np)
+	if (!np) {
+		printk(KERN_WARNING "No mdio handler\n");
 		return -ENODEV;
+	}
+	npp = of_get_parent(np);
+
+	of_address_to_resource(npp, 0, &res);
+	if (lp->ndev->mem_start != res.start) {
+		struct phy_device *phydev;
+		phydev = of_phy_find_device(lp->phy_node);
+		if (!phydev)
+			dev_info(dev, "MIDO of the phy is not registered yet\n");
+		return 0;
+	}
 
 	/* Enable the MDIO bus by asserting the enable bit in MDIO Control
 	 * register.
@@ -862,10 +875,11 @@ static int xemaclite_mdio_setup(struct net_local *lp, struct device *dev)
 		 XEL_MDIOCTRL_MDIOEN_MASK);
 
 	bus = mdiobus_alloc();
-	if (!bus)
+	if (!bus) {
+		printk(KERN_WARNING "Failed to allocal mdiobus\n");
 		return -ENOMEM;
+	}
 
-	of_address_to_resource(np, 0, &res);
 	snprintf(bus->id, MII_BUS_ID_SIZE, "%.8llx",
 		 (unsigned long long)res.start);
 	bus->priv = lp;
@@ -879,8 +893,10 @@ static int xemaclite_mdio_setup(struct net_local *lp, struct device *dev)
 	lp->mii_bus = bus;
 
 	rc = of_mdiobus_register(bus, np);
-	if (rc)
+	if (rc) {
+		dev_err(&lp->ndev->dev, "Failed to register mdio bus.\n");
 		goto err_register;
+	}
 
 	return 0;
 
-- 
1.7.5.4

