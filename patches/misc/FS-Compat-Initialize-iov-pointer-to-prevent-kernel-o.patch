From e8446b83d5a5d5f6a2f0f5299c9a8329ac06b9b0 Mon Sep 17 00:00:00 2001
From: Michel Thebeau <michel.thebeau@windriver.com>
Date: Mon, 4 Oct 2010 07:29:36 -0700
Subject: [PATCH 1/2] FS Compat: Initialize iov pointer to prevent kernel oops

Fixes kernel oops after failing parameter checks.

The "iov" pointer is not initiatized prior to calling
compat_rw_copy_check_uvector such that a kernel oops is caused
when a parameter check failure jumps to the "unwind" code and kfree
is called.  The kernel oops looks like this:

    ...
    CPU 0 Unable to handle kernel paging request at virtual address
    000000af8176a4a0, epc == ffffffff81210af4, ra == ffffffff8126561c

    Oops[#17]:
    ... etc ...

    Call Trace:
    [<ffffffff81210af4>] kfree+0x5c/0x1b0
    [<ffffffff8126561c>] compat_do_readv_writev+0x54/0x208
    [<ffffffff81265ae0>] compat_sys_readv+0x68/0xd8
    [<ffffffff81103684>] handle_sysn32+0x44/0x84
    ...

kfree checks for NULL parameter so it is safe just to set iov
to NULL.

Signed-off-by: Michel Thebeau <michel.thebeau@windriver.com>
---
 fs/compat.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/fs/compat.c b/fs/compat.c
index cbaee76..5055804 100644
--- a/fs/compat.c
+++ b/fs/compat.c
@@ -1151,7 +1151,7 @@ static ssize_t compat_do_readv_writev(int type, struct file *file,
 {
 	compat_ssize_t tot_len;
 	struct iovec iovstack[UIO_FASTIOV];
-	struct iovec *iov;
+	struct iovec *iov = NULL;
 	ssize_t ret;
 	io_fn_t fn;
 	iov_fn_t fnv;
-- 
1.6.5.2

