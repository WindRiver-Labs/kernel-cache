From adfb0aefc221a0826ac281950ac6c7ca8801ca7c Mon Sep 17 00:00:00 2001
From: Li Zhou <li.zhou@windriver.com>
Date: Fri, 11 Jan 2019 13:27:36 +0800
Subject: [PATCH] media: vb2: replace get_user_pages() write/force parameters
 with gup_flags

Replace get_user_pages() write/force parameters with gup_flags
in videobuf2 codes, because the parameters of get_user_pages
function have been changed as below:
-		    int write, int force, struct page **pages,
+		    unsigned int gup_flags, struct page **pages,

Here do the modification referring to the earlier commit:
<mm: replace get_user_pages() write/force parameters with gup_flags>

Signed-off-by: Li Zhou <li.zhou@windriver.com>
---
 drivers/media/v4l2-core/videobuf2-dma-contig.c |    6 +++++-
 drivers/media/v4l2-core/videobuf2-dma-sg.c     |   11 ++++++++---
 drivers/media/v4l2-core/videobuf2-vmalloc.c    |    8 ++++++--
 3 files changed, 19 insertions(+), 6 deletions(-)

diff --git a/drivers/media/v4l2-core/videobuf2-dma-contig.c b/drivers/media/v4l2-core/videobuf2-dma-contig.c
index 644dec7..fee70fd 100644
--- a/drivers/media/v4l2-core/videobuf2-dma-contig.c
+++ b/drivers/media/v4l2-core/videobuf2-dma-contig.c
@@ -489,9 +489,13 @@ static int vb2_dc_get_user_pages(unsigned long start, struct page **pages,
 		}
 	} else {
 		int n;
+		unsigned int flags = FOLL_FORCE;
+
+		if (dma_dir == DMA_FROM_DEVICE)
+			flags |= FOLL_WRITE;
 
 		n = get_user_pages(current, current->mm, start & PAGE_MASK,
-			n_pages, dma_dir == DMA_FROM_DEVICE, 1, pages, NULL);
+			n_pages, flags, pages, NULL);
 		/* negative error means that no page was pinned */
 		n = max(n, 0);
 		if (n != n_pages) {
diff --git a/drivers/media/v4l2-core/videobuf2-dma-sg.c b/drivers/media/v4l2-core/videobuf2-dma-sg.c
index 45c708e..f3fa72b 100644
--- a/drivers/media/v4l2-core/videobuf2-dma-sg.c
+++ b/drivers/media/v4l2-core/videobuf2-dma-sg.c
@@ -293,14 +293,19 @@ static void *vb2_dma_sg_get_userptr(void *alloc_ctx, unsigned long vaddr,
 			}
 			buf->pages[num_pages_from_user] = pfn_to_page(pfn);
 		}
-	} else
+	} else {
+		unsigned int flags = FOLL_FORCE;
+
+		if (buf->dma_dir == DMA_FROM_DEVICE)
+			flags |= FOLL_WRITE;
+
 		num_pages_from_user = get_user_pages(current, current->mm,
 					     vaddr & PAGE_MASK,
 					     buf->num_pages,
-					     buf->dma_dir == DMA_FROM_DEVICE,
-					     1, /* force */
+					     flags,
 					     buf->pages,
 					     NULL);
+	}
 
 	if (num_pages_from_user != buf->num_pages)
 		goto userptr_fail_get_user_pages;
diff --git a/drivers/media/v4l2-core/videobuf2-vmalloc.c b/drivers/media/v4l2-core/videobuf2-vmalloc.c
index 657ab30..8730832 100644
--- a/drivers/media/v4l2-core/videobuf2-vmalloc.c
+++ b/drivers/media/v4l2-core/videobuf2-vmalloc.c
@@ -99,6 +99,11 @@ static void *vb2_vmalloc_get_userptr(void *alloc_ctx, unsigned long vaddr,
 		if (!buf->vaddr)
 			goto fail_pages_array_alloc;
 	} else {
+		unsigned int flags = FOLL_FORCE;
+
+		if (dma_dir == DMA_FROM_DEVICE)
+			flags |= FOLL_WRITE;
+
 		first = vaddr >> PAGE_SHIFT;
 		last  = (vaddr + size - 1) >> PAGE_SHIFT;
 		buf->n_pages = last - first + 1;
@@ -110,8 +115,7 @@ static void *vb2_vmalloc_get_userptr(void *alloc_ctx, unsigned long vaddr,
 		/* current->mm->mmap_sem is taken by videobuf2 core */
 		n_pages = get_user_pages(current, current->mm,
 					 vaddr & PAGE_MASK, buf->n_pages,
-					 dma_dir == DMA_FROM_DEVICE,
-					 1, /* force */
+					 flags,
 					 buf->pages, NULL);
 		if (n_pages != buf->n_pages)
 			goto fail_get_user_pages;
-- 
1.7.9.5

