From 7d1c48531c5d2dea6309645181478eac0b8db094 Mon Sep 17 00:00:00 2001
From: Naveen Mamindlapalli <naveen.mamindlapalli@xilinx.com>
Date: Fri, 8 Mar 2013 20:15:29 +0530
Subject: [PATCH 516/628] usb: xilinxps_udc: Added support for Test Mode
 feature

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 1ab6ac150a1eebacfe21a7ed0a0ccbe4f33eb026

The test mode is used for compliance testing of USB devices.
All the devices must support this feature for compliance.

As part of this feature, the host sends SET_FEATURE command
with TEST_MODE feature and device needs to enable that test mode.
The exit from TEST_MODE is to power cycle the device.

There are 5 test modes as given below.
1. Test_SE0_NAK
2. Test_J
3. Test_K
4. Test_Packet
5. Test_Force_Enable

For more information, refer to "section 7.1.20 Test Mode Support" of USB 2.0 spec.

Signed-off-by: Naveen Mamindlapalli <naveenm@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/usb/gadget/xilinx_usbps_udc.c |   21 ++++++++++++++++++++-
 1 files changed, 20 insertions(+), 1 deletions(-)

diff --git a/drivers/usb/gadget/xilinx_usbps_udc.c b/drivers/usb/gadget/xilinx_usbps_udc.c
index f2ee9af..8462b78 100644
--- a/drivers/usb/gadget/xilinx_usbps_udc.c
+++ b/drivers/usb/gadget/xilinx_usbps_udc.c
@@ -1889,6 +1889,7 @@ static void setup_received_irq(struct xusbps_udc *udc,
 	u16 wValue = le16_to_cpu(setup->wValue);
 	u16 wIndex = le16_to_cpu(setup->wIndex);
 	u16 wLength = le16_to_cpu(setup->wLength);
+	u16 testsel = 0;
 
 	udc_reset_ep_queue(udc, 0);
 
@@ -1939,6 +1940,13 @@ static void setup_received_irq(struct xusbps_udc *udc,
 		} else if ((setup->bRequestType & (USB_RECIP_MASK
 				| USB_TYPE_MASK)) == (USB_RECIP_DEVICE
 				| USB_TYPE_STANDARD)) {
+			/* TEST MODE feature */
+			if (wValue == USB_DEVICE_TEST_MODE) {
+				testsel = (wIndex >> 8) & 0xff;
+				rc = 0;
+				goto status_phase;
+			}
+
 			/* Note: The driver has not include OTG support yet.
 			 * This will be set when OTG support is added */
 			if (!gadget_is_otg(&udc->gadget))
@@ -1960,9 +1968,20 @@ static void setup_received_irq(struct xusbps_udc *udc,
 		} else
 			break;
 
+status_phase:
 		if (rc == 0) {
-			if (ep0_prime_status(udc, EP_DIR_IN))
+			if (ep0_prime_status(udc, EP_DIR_IN)) {
 				ep0stall(udc);
+			} else {
+				if (testsel) {
+					u32 tmp;
+					/* Wait for status phase to complete */
+					mdelay(1);
+					tmp = xusbps_readl(&dr_regs->portsc1);
+					tmp |= (testsel << 16);
+					xusbps_writel(tmp, &dr_regs->portsc1);
+				}
+			}
 		}
 		return;
 	}
-- 
1.7.5.4

