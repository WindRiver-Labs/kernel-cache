From b496a65483bd8c4608f31530a8a3f065747985d9 Mon Sep 17 00:00:00 2001
From: Trond Myklebust <Trond.Myklebust@netapp.com>
Date: Fri, 1 Feb 2013 17:43:04 +0800
Subject: [PATCH 3/3] NFS: nfs_lookup_revalidate should not trust an inode
 with i_nlink == 0

commit 65a0c14954493802de01968a73b849f9fc4b4d1a	upstream

If the inode has no links, then we should force a new lookup.

Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
[LZ: make minor changes to adapt to 3.4.]
Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
---
 fs/nfs/dir.c |   11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/fs/nfs/dir.c b/fs/nfs/dir.c
index a0daac7..32a3257 100644
--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@ -1040,10 +1040,11 @@ static int nfs_is_exclusive_create(struct inode *dir, struct nameidata *nd)
  * particular file and the "nocto" mount flag is not set.
  *
  */
-static inline
+static
 int nfs_lookup_verify_inode(struct inode *inode, struct nameidata *nd)
 {
 	struct nfs_server *server = NFS_SERVER(inode);
+	int ret;
 
 	if (IS_AUTOMOUNT(inode))
 		return 0;
@@ -1057,11 +1058,15 @@ int nfs_lookup_verify_inode(struct inode *inode, struct nameidata *nd)
 				(S_ISREG(inode->i_mode) ||
 				 S_ISDIR(inode->i_mode)))
 			goto out_force;
-		return 0;
+out:
+		return (inode->i_nlink == 0) ? -ENOENT : 0;
 	}
 	return nfs_revalidate_inode(server, inode);
 out_force:
-	return __nfs_revalidate_inode(server, inode);
+	ret = __nfs_revalidate_inode(server, inode);
+	if (ret != 0)
+		return ret;
+	goto out;
 }
 
 /*
-- 
1.7.9.7

