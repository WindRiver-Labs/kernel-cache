From fb160ea951a04bba3ec71d92b841c608593c9bfb Mon Sep 17 00:00:00 2001
From: Srikanth Thokala <srikanth.thokala@xilinx.com>
Date: Wed, 18 Sep 2013 17:27:22 +0530
Subject: [PATCH 113/628] axidma: xilinx: Use pdev instead of op

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 591177b70d5768fb2445adf65eb859d49cf39514

Synchronize names with other drivers

Signed-off-by: Srikanth Thokala <sthokal@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/dma/xilinx/xilinx_axidma.c |   20 ++++++++++----------
 1 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_axidma.c b/drivers/dma/xilinx/xilinx_axidma.c
index f779759..716ac21 100644
--- a/drivers/dma/xilinx/xilinx_axidma.c
+++ b/drivers/dma/xilinx/xilinx_axidma.c
@@ -1072,32 +1072,32 @@ out_return:
 	return err;
 }
 
-static int xilinx_dma_of_probe(struct platform_device *op)
+static int xilinx_dma_of_probe(struct platform_device *pdev)
 {
 	struct xilinx_dma_device *xdev;
 	struct device_node *child, *node;
 	int err;
 	const __be32 *value;
 
-	dev_info(&op->dev, "Probing xilinx axi dma engine\n");
+	dev_info(&pdev->dev, "Probing xilinx axi dma engine\n");
 
 	xdev = kzalloc(sizeof(struct xilinx_dma_device), GFP_KERNEL);
 	if (!xdev) {
-		dev_err(&op->dev, "Not enough memory for device\n");
+		dev_err(&pdev->dev, "Not enough memory for device\n");
 		err = -ENOMEM;
 		goto out_return;
 	}
 
-	xdev->dev = &(op->dev);
+	xdev->dev = &(pdev->dev);
 	INIT_LIST_HEAD(&xdev->common.channels);
 
-	node = op->dev.of_node;
+	node = pdev->dev.of_node;
 	xdev->feature = 0;
 
 	/* iomap registers */
 	xdev->regs = of_iomap(node, 0);
 	if (!xdev->regs) {
-		dev_err(&op->dev, "unable to iomap registers\n");
+		dev_err(&pdev->dev, "unable to iomap registers\n");
 		err = -ENOMEM;
 		goto out_free_xdev;
 	}
@@ -1130,9 +1130,9 @@ static int xilinx_dma_of_probe(struct platform_device *op)
 	xdev->common.device_free_chan_resources =
 				xilinx_dma_free_chan_resources;
 	xdev->common.device_tx_status = xilinx_tx_status;
-	xdev->common.dev = &op->dev;
+	xdev->common.dev = &pdev->dev;
 
-	platform_set_drvdata(op, xdev);
+	platform_set_drvdata(pdev, xdev);
 
 	for_each_child_of_node(node, child) {
 		xilinx_dma_chan_probe(xdev, child, xdev->feature);
@@ -1149,12 +1149,12 @@ out_return:
 	return err;
 }
 
-static int xilinx_dma_of_remove(struct platform_device *op)
+static int xilinx_dma_of_remove(struct platform_device *pdev)
 {
 	struct xilinx_dma_device *xdev;
 	int i;
 
-	xdev = platform_get_drvdata(op);
+	xdev = platform_get_drvdata(pdev);
 	dma_async_device_unregister(&xdev->common);
 
 	for (i = 0; i < XILINX_DMA_MAX_CHANS_PER_DEVICE; i++) {
-- 
1.7.5.4

