From 09b4e93b35d202fefd26de5d603e38b8abf09cf0 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Mon, 10 Jun 2013 09:31:41 +0200
Subject: [PATCH 009/628] zynq: pcie: Fix comments coding style

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 263607802740bf89f178827bf18cd3bcc558888f

Trivial.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 arch/arm/mach-zynq/xaxipcie-msi.c |   72 ++++++++++++++++++------------------
 1 files changed, 36 insertions(+), 36 deletions(-)

diff --git a/arch/arm/mach-zynq/xaxipcie-msi.c b/arch/arm/mach-zynq/xaxipcie-msi.c
index a0cb0e8..43500e0 100644
--- a/arch/arm/mach-zynq/xaxipcie-msi.c
+++ b/arch/arm/mach-zynq/xaxipcie-msi.c
@@ -39,13 +39,13 @@ static int xaxipcie_msi_irq_base;
 /* Dynamic irq allocate and deallocation */
 
 /**
-* create_irq- Dynamic irq allocate
-* void
-*
-* @return: Interrupt number allocated/ error
-*
-* @note: None
-*/
+ * create_irq- Dynamic irq allocate
+ * void
+ *
+ * @return: Interrupt number allocated/ error
+ *
+ * @note: None
+ */
 int create_irq(void)
 {
 	int irq, pos;
@@ -65,13 +65,13 @@ again:
 }
 
 /**
-* destroy_irq- Dynamic irq de-allocate
-* @irq: Interrupt number to de-allocate
-*
-* @return: None
-*
-* @note: None
-*/
+ * destroy_irq- Dynamic irq de-allocate
+ * @irq: Interrupt number to de-allocate
+ *
+ * @return: None
+ *
+ * @note: None
+ */
 void destroy_irq(unsigned int irq)
 {
 	int pos = irq - xaxipcie_msi_irq_base;
@@ -82,26 +82,26 @@ void destroy_irq(unsigned int irq)
 }
 
 /**
-* arch_teardown_msi_irq-Teardown the Interrupt
-* @irq: Interrupt number to teardown
-*
-* @return: None
-*
-* @note: This function  is called when pci_disable_msi is called
-*/
+ * arch_teardown_msi_irq-Teardown the Interrupt
+ * @irq: Interrupt number to teardown
+ *
+ * @return: None
+ *
+ * @note: This function  is called when pci_disable_msi is called
+ */
 void arch_teardown_msi_irq(unsigned int irq)
 {
 	destroy_irq(irq);
 }
 
 /**
-* xilinx_msi_nop-No operation handler
-* @irq: Interrupt number
-*
-* @return: None
-*
-* @note: None
-*/
+ * xilinx_msi_nop-No operation handler
+ * @irq: Interrupt number
+ *
+ * @return: None
+ *
+ * @note: None
+ */
 static void xilinx_msi_nop(struct irq_data *d)
 {
 	return;
@@ -117,14 +117,14 @@ static struct irq_chip xilinx_msi_chip = {
 };
 
 /**
-* arch_setup_msi_irq-Setup MSI interrupt
-* @pdev: Pointer to current pci device structure
-* @desc: Pointer to MSI description structure
-*
-* @return: Error/ no-error
-*
-* @note: This function  is called when pci_enable_msi is called
-*/
+ * arch_setup_msi_irq-Setup MSI interrupt
+ * @pdev: Pointer to current pci device structure
+ * @desc: Pointer to MSI description structure
+ *
+ * @return: Error/ no-error
+ *
+ * @note: This function  is called when pci_enable_msi is called
+ */
 int arch_setup_msi_irq(struct pci_dev *pdev, struct msi_desc *desc)
 {
 	int irq = create_irq();
-- 
1.7.5.4

