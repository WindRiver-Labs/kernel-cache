From d944b049033ec525a180f93c1f68d0837e51dcdd Mon Sep 17 00:00:00 2001
From: Zhixiong Chi <Zhixiong.Chi@windriver.com>
Date: Tue, 3 Nov 2015 17:57:53 +0800
Subject: [PATCH 1/3] Revert "random: use the architectural HWRNG for the
 SHA's IV in extract_buf()"

This reverts commit 8f494e83045b2166bc33610e421a73c25016925f.
---
 drivers/char/random.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/char/random.c b/drivers/char/random.c
index dd68a10..34610bb 100644
--- a/drivers/char/random.c
+++ b/drivers/char/random.c
@@ -999,6 +999,7 @@ static void extract_buf(struct entropy_store *r, __u8 *out)
 	unsigned long flags;
 
 	/* Generate a hash across the pool, 16 words (512 bits) at a time */
+	sha_init(hash.w);
 	spin_lock_irqsave(&r->lock, flags);
 	for (i = 0; i < r->poolinfo->poolwords; i += 16)
 		sha_transform(hash.w, (__u8 *)(r->pool + i), workspace);
@@ -1034,14 +1035,13 @@ static void extract_buf(struct entropy_store *r, __u8 *out)
 
 	/*
 	 * If we have a architectural hardware random number
-	 * generator, use it for SHA's initial vector
+	 * generator, mix that in, too.
 	 */
-	sha_init(hash.w);
 	for (i = 0; i < LONGS(EXTRACT_SIZE); i++) {
 		unsigned long v;
 		if (!arch_get_random_long(&v))
 			break;
-		hash.l[i] = v;
+		hash.l[i] ^= v;
 	}
 
 	memcpy(out, &hash, EXTRACT_SIZE);
-- 
1.7.5.4

