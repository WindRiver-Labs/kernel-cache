From f24180069814aeb7c66066c419b3f84c0a684a98 Mon Sep 17 00:00:00 2001
From: Subbaraya Sundeep Bhatta <subbaraya.sundeep.bhatta@xilinx.com>
Date: Thu, 14 Mar 2013 16:19:26 +0530
Subject: [PATCH 521/628] usb: gadget: Updated as per latest usb gadget
 framework-init

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 17c26613b4720b88e86ac8e122e191e3968ac31f

Modified usb_of_probe, xudc_init, usb_of_remove and
xusb_remove functions as per latest usb gadget framework

Signed-off-by: Subbaraya Sundeep Bhatta <sbhatta@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/usb/gadget/xilinx_udc.c |   44 ++++++++++++++++++--------------------
 1 files changed, 21 insertions(+), 23 deletions(-)

diff --git a/drivers/usb/gadget/xilinx_udc.c b/drivers/usb/gadget/xilinx_udc.c
index a778df9..89f4ac7 100644
--- a/drivers/usb/gadget/xilinx_udc.c
+++ b/drivers/usb/gadget/xilinx_udc.c
@@ -2253,6 +2253,7 @@ static int xudc_init(struct device *dev, struct resource *regs_res,
 	void __iomem *v_addr;
 	resource_size_t remap_size;
 	struct platform_device *pdev = to_platform_device(dev);
+	int retval;
 
 	device_initialize(&udc->gadget.dev);
 
@@ -2296,6 +2297,13 @@ static int xudc_init(struct device *dev, struct resource *regs_res,
 		release_mem_region(regs_res->start, remap_size);
 		return -EBUSY;
 	}
+	retval = device_add(&udc->gadget.dev);
+	if (retval)
+		dev_dbg(dev, "device_add returned %d\n", retval);
+
+	retval = usb_add_gadget_udc(dev, &udc->gadget);
+	if (retval)
+		dev_dbg(dev, "usb_add_gadget_udc returned %d\n", retval);
 
 	/* Enable the interrupts.*/
 	out_be32((udc->base_address + XUSB_IER_OFFSET),
@@ -2320,33 +2328,26 @@ static int xudc_init(struct device *dev, struct resource *regs_res,
 /**
  * xudc_remove() - Releases the resources allocated during the initialization.
  * @pdev:	Pointer to the platform device structure.
- * @op:		Pointer to the device structure.
  *
  * returns: 0 for success and error value on failure
  *
  **/
-static int __devexit xudc_remove(struct platform_device *pdev,
-					struct of_device *op)
+static int __devexit xudc_remove(struct platform_device *pdev)
 {
 
 	struct xusb_udc *udc = platform_get_drvdata(pdev);
 	struct resource *irq_res;
 	struct resource *res; /* IO mem resources */
 	struct device *dev;
-	dev = &op->dev;
-
-	/* Map the control registers in */
-	irq_res = platform_get_resource(pdev, IORESOURCE_IRQ, 0);
+	dev = &pdev->dev;
 
 	dev_dbg(dev, "remove\n");
-
-	if (udc->driver != NULL)
-		usb_gadget_unregister_driver(udc->driver);
-
-	free_irq(irq_res->start, udc);
-
+	usb_del_gadget_udc(&udc->gadget);
+	if (udc->driver)
+		return -EBUSY;
 	iounmap(udc->base_address);
-
+	irq_res = platform_get_resource(pdev, IORESOURCE_IRQ, 0);
+	free_irq(irq_res->start, udc);
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	release_mem_region(res->start, resource_size(res));
 
@@ -2357,21 +2358,20 @@ static int __devexit xudc_remove(struct platform_device *pdev,
 
 /**
  * usb_of_probe() - The device probe function for driver initialization.
- * @op:		Pointer to the OF device structure.
- * @match:	Pointer to the device id structure.
+ * @op:		Pointer to the platform device structure.
  *
  * returns: 0 for success and error value on failure
  *
  **/
 static int __devinit
-usb_of_probe(struct of_device *op, const struct of_device_id *match)
+usb_of_probe(struct platform_device *op)
 {
 	struct device_node *np = op->dev.of_node;
 	struct resource res, irq_res;
 	int rc;
 	const u32 *dma;
 
-	dev_dbg(&op->dev, "%s(%p, %p)\n", __func__, op, match);
+	dev_dbg(&op->dev, "%s(%p)\n", __func__, op);
 
 	rc = of_address_to_resource(np, 0, &res);
 	if (rc) {
@@ -2401,16 +2401,14 @@ usb_of_probe(struct of_device *op, const struct of_device_id *match)
 
 /**
  * usb_of_remove() - The device driver remove function.
- * @op:		Pointer to the device structure.
+ * @pdev:		Pointer to the platform device structure.
  *
  * returns: 0 for success and error value on failure
  *
  **/
-static int __devexit usb_of_remove(struct of_device *op)
+static int __devexit usb_of_remove(struct platform_device *pdev)
 {
-	struct platform_device *pdev = to_platform_device(&op->dev);
-
-	return xudc_remove(pdev, op);
+	return xudc_remove(pdev);
 }
 
 static struct platform_driver usb_of_driver = {
-- 
1.7.5.4

