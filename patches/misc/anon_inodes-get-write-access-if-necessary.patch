From 8f507f1f419e17dc32d07d1c0259130d87b4c0ad Mon Sep 17 00:00:00 2001
From: Yong Zhang <yong.zhang@windriver.com>
Date: Tue, 14 Jan 2014 10:17:01 +0800
Subject: [PATCH] anon_inodes: get write access if necessary

For file based on anonymous inode, when the file is freed,
inode->i_writecount will be decreased by:
__fput()
   drop_file_write_access()
      put_write_access()

But we never try to increase the i_writecount at somewhere,
in the end inode->i_wrtiecount gets underflow and if PAX_REFCOUNT
is enable the very task will be killed. So put get_write_access()
at suitable place to fix the issue.

Signed-off-by: Yong Zhang <yong.zhang@windriver.com>
---
 fs/anon_inodes.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/fs/anon_inodes.c b/fs/anon_inodes.c
index e4b75d6..5cb39cf 100644
--- a/fs/anon_inodes.c
+++ b/fs/anon_inodes.c
@@ -123,6 +123,8 @@ struct file *anon_inode_getfile(const char *name,
 	file = alloc_file(&path, OPEN_FMODE(flags), fops);
 	if (!file)
 		goto err_dput;
+	if (file->f_mode & FMODE_WRITE)
+		get_write_access(anon_inode_inode);
 	file->f_mapping = anon_inode_inode->i_mapping;
 
 	file->f_pos = 0;
-- 
1.7.0

