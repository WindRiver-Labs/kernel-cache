From 6b6a96916e4518a6ffafe5ddb8b3f197f244da03 Mon Sep 17 00:00:00 2001
From: Anirudha Sarangi <anirudh@xilinx.com>
Date: Wed, 3 Apr 2013 23:06:58 +0530
Subject: [PATCH 374/628] xilinx_emacps: Fixes a potential bug for PEEP

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 67062a4e580870095be51d723c4b1254dfb12edd

This patch fixes a very minor bug that can show up when someone
tests the Ethernet interface on PEEP. The bug is related to PHY
handling. This patch fixes it.

Signed-off-by: Anirudha Sarangi <anirudh@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |   10 +++++++---
 1 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index bca744d..8a7c19e 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -1868,8 +1868,10 @@ static int xemacps_close(struct net_device *ndev)
 	netif_carrier_off(ndev);
 	spin_unlock(&lp->rx_lock);
 	spin_unlock_bh(&lp->tx_lock);
-	if (lp->phy_dev)
-		phy_disconnect(lp->phy_dev);
+	if (lp->phy_dev) {
+		if (lp->board_type == BOARD_TYPE_ZYNQ)
+			phy_disconnect(lp->phy_dev);
+		}
 	xemacps_descriptor_free(lp);
 
 	pm_runtime_put(&lp->pdev->dev);
@@ -1913,8 +1915,10 @@ static void xemacps_reinit_for_txtimeout(struct work_struct *data)
 	lp->link    = 0;
 	lp->speed   = 0;
 	lp->duplex  = -1;
-	if (lp->phy_dev)
+	if (lp->phy_dev) {
+		if (lp->board_type == BOARD_TYPE_ZYNQ)
 			phy_start(lp->phy_dev);
+	}
 	napi_enable(&lp->napi);
 	tasklet_enable(&lp->tx_bdreclaim_tasklet);
 	netif_start_queue(lp->ndev);
-- 
1.7.5.4

