From dbbd8ad1c7ad36d7d62404a3a146af24f48efb4d Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Tue, 21 May 2019 15:49:12 +0800
Subject: [PATCH] Fix nfs hang due to freeze with locked inodes

the patch comes from:
https://lkml.org/lkml/2016/7/8/332

Signed-off-by: Marian Florea <marian.florea@windriver.com>
Signed-off-by: Li Wang <li.wang@windriver.com>
---
 fs/nfs/inode.c     | 4 ++--
 fs/nfs/nfs3proc.c  | 4 ++--
 fs/nfs/nfs4proc.c  | 7 +++----
 net/sunrpc/sched.c | 4 ++--
 4 files changed, 9 insertions(+), 10 deletions(-)

diff --git a/fs/nfs/inode.c b/fs/nfs/inode.c
index 723b8922d76b..cdd173632e6a 100644
--- a/fs/nfs/inode.c
+++ b/fs/nfs/inode.c
@@ -77,9 +77,9 @@ nfs_fattr_to_ino_t(struct nfs_fattr *fattr)
  */
 int nfs_wait_bit_killable(struct wait_bit_key *key)
 {
-	if (fatal_signal_pending(current))
+	schedule();
+	if (fatal_signal_pending(current) || freezing(current))
 		return -ERESTARTSYS;
-	freezable_schedule_unsafe();
 	return 0;
 }
 EXPORT_SYMBOL_GPL(nfs_wait_bit_killable);
diff --git a/fs/nfs/nfs3proc.c b/fs/nfs/nfs3proc.c
index cb28cceefebe..23151831f958 100644
--- a/fs/nfs/nfs3proc.c
+++ b/fs/nfs/nfs3proc.c
@@ -35,9 +35,9 @@ nfs3_rpc_wrapper(struct rpc_clnt *clnt, struct rpc_message *msg, int flags)
 		res = rpc_call_sync(clnt, msg, flags);
 		if (res != -EJUKEBOX)
 			break;
-		freezable_schedule_timeout_killable_unsafe(NFS_JUKEBOX_RETRY_TIME);
+		schedule_timeout_killable(NFS_JUKEBOX_RETRY_TIME);
 		res = -ERESTARTSYS;
-	} while (!fatal_signal_pending(current));
+	} while (!fatal_signal_pending(current) && !freezing(current));
 	return res;
 }
 
diff --git a/fs/nfs/nfs4proc.c b/fs/nfs/nfs4proc.c
index 84706204cc33..1a0683a45046 100644
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@ -334,9 +334,8 @@ static int nfs4_delay(struct rpc_clnt *clnt, long *timeout)
 
 	might_sleep();
 
-	freezable_schedule_timeout_killable_unsafe(
-		nfs4_update_delay(timeout));
-	if (fatal_signal_pending(current))
+	schedule_timeout_killable(nfs4_update_delay(timeout));
+	if (fatal_signal_pending(current) || freezing(current))
 		res = -ERESTARTSYS;
 	return res;
 }
@@ -5304,7 +5303,7 @@ int nfs4_proc_delegreturn(struct inode *inode, struct rpc_cred *cred, const nfs4
 static unsigned long
 nfs4_set_lock_task_retry(unsigned long timeout)
 {
-	freezable_schedule_timeout_killable_unsafe(timeout);
+	schedule_timeout_killable(timeout);
 	timeout <<= 1;
 	if (timeout > NFS4_LOCK_MAXTIMEOUT)
 		return NFS4_LOCK_MAXTIMEOUT;
diff --git a/net/sunrpc/sched.c b/net/sunrpc/sched.c
index 337ca851a350..df282fa22d0e 100644
--- a/net/sunrpc/sched.c
+++ b/net/sunrpc/sched.c
@@ -252,9 +252,9 @@ EXPORT_SYMBOL_GPL(rpc_destroy_wait_queue);
 
 static int rpc_wait_bit_killable(struct wait_bit_key *key)
 {
-	if (fatal_signal_pending(current))
+	schedule();
+	if (fatal_signal_pending(current) || freezing(current))
 		return -ERESTARTSYS;
-	freezable_schedule_unsafe();
 	return 0;
 }
 
-- 
2.17.1

