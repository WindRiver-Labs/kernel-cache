From 2fcc4574f4fac323cf2c5db23fa3169ba042584f Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Thu, 3 Jan 2013 11:05:27 -0800
Subject: [PATCH 192/628] hwmon: xilinxps: Fix sparse warning

git://github.com/Xilinx/linux-xlnx.git xilinx-v14.7
commit 0956c11afcd2c0fd3cdd136ec310d2b0bacaeb97

Sparse warned about 'drivers/hwmon/xilinx-xadcps.c:684:27: warning: invalid
access past the end of 'setup' (56 36)'. The struct declaration and variable
initalization is changed to fix this warning.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 drivers/hwmon/xilinx-xadcps.c |   74 +++++++++++++++++++++++++----------------
 1 files changed, 45 insertions(+), 29 deletions(-)

diff --git a/drivers/hwmon/xilinx-xadcps.c b/drivers/hwmon/xilinx-xadcps.c
index 92f58719..30a96e9 100644
--- a/drivers/hwmon/xilinx-xadcps.c
+++ b/drivers/hwmon/xilinx-xadcps.c
@@ -151,7 +151,7 @@ struct xadc_batch {
 	int readptr;
 	struct list_head q;
 	struct completion comp;
-	struct xadc_op ops[];
+	struct xadc_op *ops;
 };
 
 
@@ -218,18 +218,26 @@ static void add_batch(struct xadc_t *xadc, struct xadc_batch *b)
 
 static inline u16 read_register(struct xadc_t *xadc, unsigned int reg)
 {
-	struct xadc_batch *b = kzalloc(sizeof(*b) +
-			2 * sizeof(struct xadc_op), GFP_KERNEL);
 	u16 ret;
+	struct xadc_op *ops;
+	struct xadc_batch *b = kzalloc(sizeof(*b), GFP_KERNEL);
 
-	if (NULL == b)
+	if (!b)
 		return 0;
+	ops = kzalloc(sizeof(*ops) * 2, GFP_KERNEL);
+	if (!ops) {
+		kfree(b);
+		return 0;
+	}
+
 	b->count = 2;
-	b->ops[0].cmd = READOP(reg);
-	b->ops[1].cmd = NOOP;
+	b->ops = ops;
+	ops[0].cmd = READOP(reg);
+	ops[1].cmd = NOOP;
 	add_batch(xadc, b);
 	wait_for_completion_interruptible(&b->comp);
 	ret = GETFIELD(XADC_FIFO, DATA, b->ops[1].res);
+	kfree(ops);
 	kfree(b);
 	return ret;
 }
@@ -237,15 +245,23 @@ static inline u16 read_register(struct xadc_t *xadc, unsigned int reg)
 static inline void write_register(struct xadc_t *xadc, unsigned int reg,
 		u16 val)
 {
-	struct xadc_batch *b = kzalloc(sizeof(*b) +
-			sizeof(struct xadc_op), GFP_KERNEL);
+	struct xadc_op *ops;
+	struct xadc_batch *b = kzalloc(sizeof(*b), GFP_KERNEL);
 
-	if (NULL == b)
+	if (!b)
+		return;
+	ops = kzalloc(sizeof(*ops), GFP_KERNEL);
+	if (!ops) {
+		kfree(b);
 		return;
+	}
+
 	b->count = 1;
-	b->ops[0].cmd = WRITEOP(reg, val);
+	b->ops = ops;
+	ops[0].cmd = WRITEOP(reg, val);
 	add_batch(xadc, b);
 	wait_for_completion_interruptible(&b->comp);
+	kfree(ops);
 	kfree(b);
 }
 
@@ -579,25 +595,25 @@ static irqreturn_t xadc_irq(int irq, void *data)
 	return IRQ_HANDLED;
 }
 
-static struct xadc_batch setup = {
-	.count = 11,
-	.ops = {
-		{.cmd = WRITEOP(REG_CFG1, REG_CFG1_CAL_SSOG |
-				REG_CFG1_CAL_ADCOG |
-				SETFIELD(REG_CFG1, SEQ, MODE_DEF)),},
-		{.cmd = READOP(REG_FLAG),}, /* read flags */
-		{.cmd = WRITEOP(REG_SEQ_SEL0, 0)},
-		{.cmd = WRITEOP(REG_SEQ_AVG0, 0)},
-		{.cmd = WRITEOP(REG_SEQ_BIP0, 0)},
-		{.cmd = WRITEOP(REG_SEQ_ACQ0, 0)},
-		{.cmd = WRITEOP(REG_SEQ_SEL1, 0)},
-		{.cmd = WRITEOP(REG_SEQ_AVG1, 0)},
-		{.cmd = WRITEOP(REG_SEQ_BIP1, 0)},
-		{.cmd = WRITEOP(REG_SEQ_ACQ1, 0)},
-		{.cmd = WRITEOP(REG_CFG1, REG_CFG1_CAL_SSOG |
-				REG_CFG1_CAL_ADCOG |
-				SETFIELD(REG_CFG1, SEQ, MODE_IND)),},
-	},
+static struct xadc_op xadc_ops[] __devinitdata = {
+	{.cmd = WRITEOP(REG_CFG1, REG_CFG1_CAL_SSOG |
+			REG_CFG1_CAL_ADCOG |
+			SETFIELD(REG_CFG1, SEQ, MODE_DEF)),},
+	{.cmd = READOP(REG_FLAG),}, /* read flags */
+	{.cmd = WRITEOP(REG_SEQ_SEL0, 0)},
+	{.cmd = WRITEOP(REG_SEQ_AVG0, 0)},
+	{.cmd = WRITEOP(REG_SEQ_BIP0, 0)},
+	{.cmd = WRITEOP(REG_SEQ_ACQ0, 0)},
+	{.cmd = WRITEOP(REG_SEQ_SEL1, 0)},
+	{.cmd = WRITEOP(REG_SEQ_AVG1, 0)},
+	{.cmd = WRITEOP(REG_SEQ_BIP1, 0)},
+	{.cmd = WRITEOP(REG_SEQ_ACQ1, 0)},
+	{.cmd = WRITEOP(REG_CFG1, REG_CFG1_CAL_SSOG | REG_CFG1_CAL_ADCOG |
+			SETFIELD(REG_CFG1, SEQ, MODE_IND)),},
+};
+static struct xadc_batch setup __devinitdata = {
+	.count = ARRAY_SIZE(xadc_ops),
+	.ops = xadc_ops,
 };
 
 static int __devinit xadc_probe(struct platform_device *pdev)
-- 
1.7.5.4

