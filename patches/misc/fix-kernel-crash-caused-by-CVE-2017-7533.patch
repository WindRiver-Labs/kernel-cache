From 8960c584fc6a96f72f2701c15eacf0072c333125 Mon Sep 17 00:00:00 2001
From: Liu Haitao <haitao.liu@windriver.com>
Date: Thu, 14 Sep 2017 01:34:26 -0700
Subject: [PATCH] fix kernel crash caused by CVE-2017-7533

Issue: LIN7-8722 LIN7-8735

When booting up the target, it fails with:

```

	[<ffffffff8117bf64>] SyS_renameat+0xc4/0x390
	[<ffffffff811ac58c>] ? fsnotify+0x27c/0x350
	[<ffffffff8116ab0a>] ? do_sync_write+0x5a/0x90
	[<ffffffff8116b2aa>] ? vfs_write+0x17a/0x1b0
	[<ffffffff8117c24b>] SyS_rename+0x1b/0x20
	[<ffffffff81825ff6>] system_call_fastpath+0x1a/0x1f

```
There is a mistake when backporint the upstream commit to fix CVE-2017-7533.
The 'take_dentry_name_snapshot' do not consider the bound of array.
When tackling the file with a long filename this function would cause memory
overflow issue.

And in linux kernel, if a filename consist of only a few characters, it is
held in 'struct dentry -> d_iname'. But if it has many characters it is held in
"struct dentry -> d_name" instead of "d_iname".

Signed-off-by: Haitao Liu <Haitao.Liu@windriver.com>
---
 fs/dcache.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/fs/dcache.c b/fs/dcache.c
index fb8134b..e664dfd 100644
--- a/fs/dcache.c
+++ b/fs/dcache.c
@@ -270,13 +270,13 @@ static void d_free(struct dentry *dentry)
 void take_dentry_name_snapshot(struct name_snapshot *name, struct dentry *dentry)
 {
 	spin_lock(&dentry->d_lock);
-	if (unlikely(dname_external(dentry)))
-		memcpy(name->inline_name, dentry->d_name.name, dentry->d_name.len + 1);
-	else
-		memcpy(name->inline_name, dentry->d_iname, DNAME_INLINE_LEN);
-
+	if (unlikely(dname_external(dentry))){
+		name->name = dentry->d_name.name;
+	}else{
+		memcpy(name->inline_name, dentry->d_iname, DNAME_INLINE_LEN);		
+		name->name = name->inline_name;
+	}
 	spin_unlock(&dentry->d_lock);
-	name->name = name->inline_name;
 }
 EXPORT_SYMBOL(take_dentry_name_snapshot);
 
-- 
1.7.5.4

