From f241900a4fd73d1c5ec779bab25fa5e1b9ece773 Mon Sep 17 00:00:00 2001
From: Liu Haitao <haitao.liu@windriver.com>
Date: Thu, 14 Sep 2017 15:32:49 +0800
Subject: [PATCH] fix kernel crash caused by CVE-2017-7533

Issue: CGP5-1310

When booting up the target, it fails with:

```
	[<ffffffff8118da51>] ? vfsmount_lock_local_unlock+0x31/0x60
	[<ffffffff8116f3a8>] ? fput+0x1a8/0x250
	[<ffffffff8116b1e6>] ? filp_close+0x66/0x90
	[<ffffffff8100c818>] ? pax_randomize_kstack+0x38/0x70
	[<ffffffff818822ee>] ? sysret_check+0x17/0x53
	[<ffffffff8117f93b>] sys_rename+0x1b/0x20
	[<ffffffff818822cd>] system_call_fastpath+0x1c/0x21

```

There is a mkistake when backporint the upstream commit to fix CVE-2017-7533.
The 'take_dentry_name_snapshot' do not consider the bound of array.
When tackling the file with a long filename this function would cause memory
overflow issue.

And in linux kernel, if a filename consist of only a few characters, it is
held in 'struct dentry -> d_iname'. But if it has many characters it is held in
"struct dentry -> d_name" instead of "d_iname".

Signed-off-by: Haitao Liu <Haitao.Liu@windriver.com>
---
 fs/dcache.c |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/fs/dcache.c b/fs/dcache.c
index 17d1dc6..aab0f44 100644
--- a/fs/dcache.c
+++ b/fs/dcache.c
@@ -233,13 +233,13 @@ static void d_free(struct dentry *dentry)
 void take_dentry_name_snapshot(struct name_snapshot *name, struct dentry *dentry)
 {
 	spin_lock(&dentry->d_lock);
-	if (unlikely(dname_external(dentry)))
-		memcpy(name->inline_name, dentry->d_name.name, dentry->d_name.len + 1);
-	else
+	if (unlikely(dname_external(dentry))){
+		name->name = dentry->d_name.name;
+	}else{
 		memcpy(name->inline_name, dentry->d_iname, DNAME_INLINE_LEN);
-
+		name->name = name->inline_name;
+	}
 	spin_unlock(&dentry->d_lock);
-	name->name = name->inline_name;
 }
 EXPORT_SYMBOL(take_dentry_name_snapshot);
 
-- 
1.7.5.4

