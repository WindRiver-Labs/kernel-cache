From eaf01770805ac2122560256a64935bf86fe9f4ac Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Fri, 6 Jun 2014 09:35:31 +0800
Subject: [PATCH] ARM: timer-sp: delay to enable the time irq

The event_handler function must be setup before the time interrupt
is enabled, otherwise a NULL pointer call trace may be generated.

Unable to handle kernel NULL pointer dereference at virtual address 00000000
pgd = c0403000
[00000000] *pgd=80000000404003, *pmd=00000000
Internal error: Oops: 80000206 [#1] PREEMPT SMP ARM
Modules linked in:
CPU: 0 PID: 0 Comm: swapper/0 Not tainted 3.10.38-ltsi-WR6.0.0.0_standard #8
task: c0d19bc8 ti: c0d00000 task.ti: c0d00000
PC is at 0x0
LR is at sp804_timer_interrupt+0x4c/0x5c
pc : [<00000000>]    lr : [<c041fad0>]    psr: 600001d3
sp : c0d01d58  ip : c041fa98  fp : c0d01d6c
r10: f0000000  r9 : 413fc0f2  r8 : 00000000
r7 : 00000000  r6 : 0000004e  r5 : c0d05c00  r4 : c0d1c7c0
r3 : 00000000  r2 : 00000001  r1 : c0d1c7c0  r0 : c0d1c7c0
Flags: nZCv  IRQs off  FIQs off  Mode SVC_32  ISA ARM  Segment kernel
Control: 30c5387d  Table: 00403000  DAC: fffffffd
Process swapper/0 (pid: 0, stack limit = 0xc0d00238)
Stack: (0xc0d01d58 to 0xc0d02000)
1d40:                                                       c041fa84 c0d1c840
1d60: c0d01dac c0d01d70 c049d2d8 c041fa90 c0d05c50 c09f172c 00000008 c0d05c50
1d80: c0d05c50 c0d05c00 c0d05c50 c0d1c840 0000004e c0cfd7c0 413fc0f2 f0000000
1da0: c0d01dcc c0d01db0 c049d508 c049d21c 00000000 c0d05c00 c0d05c50 c0d01f78
1dc0: c0d01de4 c0d01dd0 c04a056c c049d4c8 0000004e c0cfd188 c0d01dfc c0d01de8
1de0: c049caf0 c04a04b4 00000100 0000004e c0d01e1c c0d01e00 c040ef84 c049cacc
1e00: ffffff70 f0002000 c0d01e58 00000000 c0d01e54 c0d01e20 c04088e4 c040ef18
1e20: c0d01e64 00000000 c046c674 c042e220 60000153 ffffffff c0d01e8c 3f2fdf7c
1e40: 413fc0f2 f0000000 c0d01eec c0d01e58 c09f2384 c0408704 00000000 c0d16a44
1e60: 00000000 c0d16a44 00000002 c0d00000 c0d020c0 c042e534 3f2fdf7c 413fc0f2
1e80: f0000000 c0d01eec c0d01ea0 c0d01ea0 c042e21c c042e220 60000153 ffffffff
1ea0: c0d035c0 ef003b40 00000000 0000001b 00000000 ffff8ad2 00200000 0000000a
1ec0: c08abe14 600001d3 c0d00000 00000000 0000001b c0cfd7c0 413fc0f2 f0000000
1ee0: c0d01f04 c0d01ef0 c042e534 c042e17c 00000002 c0d00008 c0d01f1c c0d01f08
1f00: c042e864 c042e4e8 0000001b c0cfd188 c0d01f3c c0d01f20 c040ef88 c042e7dc
1f20: ffffff3d f0002000 c0d01f78 00000000 c0d01f74 c0d01f40 c04088e4 c040ef18
1f40: c0d01f5c 00000000 c09ef650 c0c55a28 60000153 ffffffff c0d01fac 00407000
1f60: 413fc0f2 00000000 c0d01ff4 c0d01f78 c09f2384 c0408704 00000000 c0d16a44
1f80: 00000000 c0d16a44 c0d67300 c0c89180 c1a26480 c0d14400 00407000 413fc0f2
1fa0: 00000000 c0d01ff4 c0d01fc0 c0d01fc0 c0c55a24 c0c55a28 60000153 ffffffff
1fc0: ffffffff ffffffff c0c55598 00000000 00000000 c0c89180 30c7387d c0d14434
1fe0: c0c8917c c0d1b07c 00000000 c0d01ff8 00408084 c0c55808 00000000 00000000
[<c041fad0>] (sp804_timer_interrupt+0x4c/0x5c) from [<c049d2d8>] (handle_irq_event_percpu+0xc8/0x2ac)
[<c049d2d8>] (handle_irq_event_percpu+0xc8/0x2ac) from [<c049d508>] (handle_irq_event+0x4c/0x6c)
[<c049d508>] (handle_irq_event+0x4c/0x6c) from [<c04a056c>] (handle_fasteoi_irq+0xc4/0x10c)
[<c04a056c>] (handle_fasteoi_irq+0xc4/0x10c) from [<c049caf0>] (generic_handle_irq+0x30/0x40)
[<c049caf0>] (generic_handle_irq+0x30/0x40) from [<c040ef84>] (handle_IRQ+0x78/0xa0)
[<c040ef84>] (handle_IRQ+0x78/0xa0) from [<c04088e4>] (axxia_gic_handle_irq+0x1ec/0x224)
[<c04088e4>] (axxia_gic_handle_irq+0x1ec/0x224) from [<c09f2384>] (__irq_svc+0x44/0x78)
Exception stack(0xc0d01e58 to 0xc0d01ea0)
1e40:                                                       00000000 c0d16a44
1e60: 00000000 c0d16a44 00000002 c0d00000 c0d020c0 c042e534 3f2fdf7c 413fc0f2
1e80: f0000000 c0d01eec c0d01ea0 c0d01ea0 c042e21c c042e220 60000153 ffffffff
[<c09f2384>] (__irq_svc+0x44/0x78) from [<c042e220>] (__do_softirq+0xb0/0x30c)
[<c042e220>] (__do_softirq+0xb0/0x30c) from [<c042e534>] (do_softirq+0x58/0x7c)
[<c042e534>] (do_softirq+0x58/0x7c) from [<c042e864>] (irq_exit+0x94/0xe0)
[<c042e864>] (irq_exit+0x94/0xe0) from [<c040ef88>] (handle_IRQ+0x7c/0xa0)
[<c040ef88>] (handle_IRQ+0x7c/0xa0) from [<c04088e4>] (axxia_gic_handle_irq+0x1ec/0x224)
[<c04088e4>] (axxia_gic_handle_irq+0x1ec/0x224) from [<c09f2384>] (__irq_svc+0x44/0x78)
Exception stack(0xc0d01f78 to 0xc0d01fc0)
1f60:                                                       00000000 c0d16a44
1f80: 00000000 c0d16a44 c0d67300 c0c89180 c1a26480 c0d14400 00407000 413fc0f2
1fa0: 00000000 c0d01ff4 c0d01fc0 c0d01fc0 c0c55a24 c0c55a28 60000153 ffffffff
[<c09f2384>] (__irq_svc+0x44/0x78) from [<c0c55a28>] (start_kernel+0x22c/0x374)
[<c0c55a28>] (start_kernel+0x22c/0x374) from [<00408084>] (0x408084)
Code: bad PC value
---[ end trace 1b75b31a2719ed1c ]---

Signed-off-by: Hongbo Zhong <hongbo.zhong@windriver.com>
---
 arch/arm/common/timer-sp.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/arm/common/timer-sp.c b/arch/arm/common/timer-sp.c
index ddc7407..2925ac6 100644
--- a/arch/arm/common/timer-sp.c
+++ b/arch/arm/common/timer-sp.c
@@ -202,10 +202,10 @@ void __init __sp804_clockevents_init(void __iomem *base, unsigned int irq, struc
 	evt->irq = irq;
 	evt->cpumask = cpu_possible_mask;
 
-	writel(0, base + TIMER_CTRL);
-
 	setup_irq(irq, &sp804_timer_irq);
 	clockevents_config_and_register(evt, rate, 0xf, 0xffffffff);
+
+	writel(0, base + TIMER_CTRL);
 }
 
 static void __init sp804_of_init(struct device_node *np)
-- 
1.7.5.4

