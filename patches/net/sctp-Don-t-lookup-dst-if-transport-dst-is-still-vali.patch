From 6e6809dbec896f3716dd1b8e7c0a5a175f6c9985 Mon Sep 17 00:00:00 2001
From: fan.du <fan.du@windriver.com>
Date: Thu, 19 Jun 2014 16:18:30 +0800
Subject: [PATCH 2/2] sctp: Don't lookup dst if transport dst is still valid

commit d27fc78208b53ccdfd6a57d4ac44a459ca66806f upstream

When sctp sits on IPv6, sctp_transport_dst_check pass cookie as ZERO,
as a result ip6_dst_check always fail out. This behaviour makes
transport->dst useless, because every sctp_packet_transmit must look
for valid dst.

Add a dst_cookie into sctp_transport, and set the cookie whenever we
get new dst for sctp_transport. So dst validness could be checked
against it.

Since I have split genid for IPv4 and IPv6, also delete/add IPv6 address
will also bump IPv6 genid. So issues we discussed in:
http://marc.info/?l=linux-netdev&m=137404469219410&w=4
have all been sloved for this patch.

Signed-off-by: Fan Du <fan.du@windriver.com>
Acked-by: Vlad Yasevich <vyasevich@gmail.com>
Acked-by: Neil Horman <nhorman@tuxdriver.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 include/net/sctp/sctp.h    |    2 +-
 include/net/sctp/structs.h |    2 ++
 net/sctp/ipv6.c            |    2 ++
 3 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/include/net/sctp/sctp.h b/include/net/sctp/sctp.h
index 29d12e3..0ee6161 100644
--- a/include/net/sctp/sctp.h
+++ b/include/net/sctp/sctp.h
@@ -702,7 +702,7 @@ static inline struct dst_entry *sctp_transport_dst_check(struct sctp_transport *
 	/* The 'obsolete' field of dst is set to 2 when a dst is freed. */
 	if (dst &&
 	   (dst->obsolete > 1 ||
-	   (dst->obsolete && dst->ops->check(dst, 0) == NULL))) {
+	   (dst->obsolete && dst->ops->check(dst, t->dst_cookie) == NULL))) {
 		dst_release(t->dst);
 		t->dst = NULL;
 		return NULL;
diff --git a/include/net/sctp/structs.h b/include/net/sctp/structs.h
index 451b18d..c83bcce 100644
--- a/include/net/sctp/structs.h
+++ b/include/net/sctp/structs.h
@@ -1061,6 +1061,8 @@ struct sctp_transport {
 
 	/* 64-bit random number sent with heartbeat. */
 	__u64 hb_nonce;
+
+	u32 dst_cookie;
 };
 
 struct sctp_transport *sctp_transport_new(const union sctp_addr *,
diff --git a/net/sctp/ipv6.c b/net/sctp/ipv6.c
index 66ddd38..2ffa958 100644
--- a/net/sctp/ipv6.c
+++ b/net/sctp/ipv6.c
@@ -363,6 +363,8 @@ out:
 				goto failure;
 		}
 		t->dst = dst;
+		t->dst_cookie = rt->rt6i_node ? rt->rt6i_node->fn_sernum : 0;
+
 		SCTP_DEBUG_PRINTK("rt6_dst:%pI6 rt6_src:%pI6\n",
 			&rt->rt6i_dst.addr, &fl->fl6_src);
 		return;
-- 
1.7.0

