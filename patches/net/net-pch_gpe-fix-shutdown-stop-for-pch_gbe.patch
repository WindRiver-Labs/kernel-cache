From 7c301f68f93727081b49e69534dc2288e7756346 Mon Sep 17 00:00:00 2001
From: Liang Li <liang.li@windriver.com>
Date: Fri, 4 Jan 2013 17:53:33 +0800
Subject: [PATCH] net/pch_gpe: fix shutdown/stop for pch_gbe

After commit a8735c7008288(net/pch_gpe: cannot disable ethernet card
autonegation via ethtool), pch_gbe_reset will be called from
pch_gbe_down only in 'error state' is found.

In machine shutdown stage, the net_dev_ops.ndo_stop or pci_driver.shutdown
will be called to stop / shutdown device, then pch_gbe_down is called from
pch_gbe_stop / pch_gbe_shutdown, but the situation just falls into the
state that 'everything just fine so just skip pch_gbe_reset' in pch_gbe_down.
Then without the pch_gbe_reset called in 'stop / shutdown device' sequence,
the PCI legacy interrupts will fire up then the 'nobody cared IRQ' warning
will flow up on -rt kernel like this:

Rebooting... Disabling non-boot CPUs ...
irq 16: nobody cared (try booting with the "irqpoll" option)
Call Trace:
[<c109810a>] __report_bad_irq+0x2a/0xd0
[<c10983ae>] note_interrupt+0x11e/0x1c0
[<c1096f2a>] ? irq_forced_thread_fn+0x3a/0x80
[<c1096d24>] irq_thread+0x174/0x180
[<c1096ef0>] ? irq_thread_fn+0x50/0x50
[<c1096df0>] ? irq_finalize_oneshot.part.32+0xc0/0xc0
[<c1096bb0>] ? wake_threads_waitq+0x50/0x50
[<c1049f93>] kthread+0x73/0x80
[<c1049f20>] ? __init_kthread_worker+0x40/0x40
[<c163b1ba>] kernel_thread_helper+0x6/0x10
handlers:
[<c10963a0>] irq_default_primary_handler threaded [<c12d5690>] pch_gpio_handler
[<c10963a0>] irq_default_primary_handler threaded [<c142cdf0>] usb_hcd_irq
[<c10963a0>] irq_default_primary_handler threaded [<c142cdf0>] usb_hcd_irq
[<c10963a0>] irq_default_primary_handler threaded [<c142cdf0>] usb_hcd_irq
[<c10963a0>] irq_default_primary_handler threaded [<c142cdf0>] usb_hcd_irq
[<c10963a0>] irq_default_primary_handler threaded [<c1520140>] azx_interrupt
Disabling IRQ #16

I believe the same story would happen on non-rt kernel as well but seems
like the 'nobody cared IRQ' just does not accumulate to the trigger
number before machine_restart so the warning doesn't exists on non-rt
kernel.

Signed-off-by: Liang Li <liang.li@windriver.com>
---
 .../net/ethernet/oki-semi/pch_gbe/pch_gbe_main.c   |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_main.c b/drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_main.c
index c559c4c..f716fe4 100644
--- a/drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_main.c
+++ b/drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_main.c
@@ -2106,6 +2106,7 @@ static int pch_gbe_stop(struct net_device *netdev)
 	struct pch_gbe_hw *hw = &adapter->hw;
 
 	pch_gbe_down(adapter);
+	pch_gbe_reset(adapter);
 	if (!adapter->wake_up_evt)
 		pch_gbe_hal_power_down_phy(hw);
 	pch_gbe_free_tx_resources(adapter, adapter->tx_ring);
@@ -2505,8 +2506,10 @@ static int __pch_gbe_suspend(struct pci_dev *pdev)
 	int retval = 0;
 
 	netif_device_detach(netdev);
-	if (netif_running(netdev))
+	if (netif_running(netdev)) {
 		pch_gbe_down(adapter);
+		pch_gbe_reset(adapter);
+	}
 	if (wufc) {
 		pch_gbe_set_multi(netdev);
 		pch_gbe_setup_rctl(adapter);
-- 
1.7.9.7

