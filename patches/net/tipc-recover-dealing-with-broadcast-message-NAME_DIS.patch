From 7a1f440f08d6ad766a741b9f94c9ab3d29fe43ef Mon Sep 17 00:00:00 2001
From: Qi Hou <qi.hou@windriver.com>
Date: Tue, 23 Jan 2018 02:51:12 -0800
Subject: [PATCH] tipc: recover dealing with broadcast message
 NAME_DISTRIBUTOR

In TIPC_1.7, a new created port is published with broadcast message
"NAME_DISTRIBUTOR".

But in TIPC_2.0, the dealing with that broadcast message is deleted
by the commit below:

commit cb1b728096f5 ("tipc: eliminate race condition at multicast
reception")

It causes a compatible issue between TIPC_2.0 and TIPC_1.7.

To fix it, recover the deleted dealing with the broadcast message
"NAME_DISTRIBUTOR".

Reviewed-by: Ying Xue <ying.xue@windriver.com>
Signed-off-by: Qi Hou <qi.hou@windriver.com>
---
 net/tipc/bcast.c |    9 +++++++++
 1 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/net/tipc/bcast.c b/net/tipc/bcast.c
index c5cbdcb..023c470 100644
--- a/net/tipc/bcast.c
+++ b/net/tipc/bcast.c
@@ -435,6 +435,7 @@ void tipc_bclink_rcv(struct net *net, struct sk_buff *buf)
 	int pos = 0;
 	struct sk_buff *iskb;
 	struct sk_buff_head *arrvq, *inputq;
+	struct sk_buff_head msgs;
 
 	/* Screen out unwanted broadcast messages */
 	if (msg_mc_netid(msg) != tn->net_id)
@@ -518,6 +519,14 @@ receive:
 			}
 			tipc_bclink_unlock(net);
 			tipc_node_unlock(node);
+		} else if (msg_user(msg) == NAME_DISTRIBUTOR) {
+			tipc_bclink_lock(net);
+			bclink_accept_pkt(node, seqno);
+			tipc_bclink_unlock(net);
+			tipc_node_unlock(node);
+			skb_queue_head_init(&msgs);
+			skb_queue_tail(&msgs, buf);
+			tipc_named_rcv(net, &msgs);
 		} else {
 			tipc_bclink_lock(net);
 			bclink_accept_pkt(node, seqno);
-- 
1.7.5.4

