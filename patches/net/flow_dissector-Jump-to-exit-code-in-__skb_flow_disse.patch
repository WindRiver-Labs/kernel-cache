From 3431b18649cf66542535cf6c2dd4becaf236dc47 Mon Sep 17 00:00:00 2001
From: Ovidiu Panait <ovidiu.panait@windriver.com>
Date: Sat, 9 Sep 2017 16:05:22 +0000
Subject: [PATCH] flow_dissector: Jump to exit code in __skb_flow_dissect

commit a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0 upstream

Instead of returning immediately (on a parsing failure for instance) we
jump to cleanup code. This always sets protocol values in key_control
(even on a failure there is still valid information in the key_tags that
was set before the problem was hit).

Signed-off-by: Tom Herbert <tom@herbertland.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 net/core/flow_dissector.c |   25 +++++++++++++++----------
 1 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/net/core/flow_dissector.c b/net/core/flow_dissector.c
index e29e810..00ee760 100644
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@ -55,6 +55,7 @@ bool skb_flow_dissect(const struct sk_buff *skb, struct flow_keys *flow)
 {
 	int nhoff = skb_network_offset(skb);
 	u8 ip_proto;
+	bool ret = false;
 	__be16 proto = skb->protocol;
 
 	memset(flow, 0, sizeof(*flow));
@@ -67,7 +68,7 @@ again:
 ip:
 		iph = skb_header_pointer(skb, nhoff, sizeof(_iph), &_iph);
 		if (!iph || iph->ihl < 5)
-			return false;
+			goto out_bad;
 		nhoff += iph->ihl * 4;
 
 		ip_proto = iph->protocol;
@@ -83,7 +84,7 @@ ip:
 ipv6:
 		iph = skb_header_pointer(skb, nhoff, sizeof(_iph), &_iph);
 		if (!iph)
-			return false;
+			goto out_bad;
 
 		ip_proto = iph->nexthdr;
 		flow->src = (__force __be32)ipv6_addr_hash(&iph->saddr);
@@ -98,7 +99,7 @@ ipv6:
 
 		vlan = skb_header_pointer(skb, nhoff, sizeof(_vlan), &_vlan);
 		if (!vlan)
-			return false;
+			goto out_bad;
 
 		proto = vlan->h_vlan_encapsulated_proto;
 		nhoff += sizeof(*vlan);
@@ -111,7 +112,7 @@ ipv6:
 		} *hdr, _hdr;
 		hdr = skb_header_pointer(skb, nhoff, sizeof(_hdr), &_hdr);
 		if (!hdr)
-			return false;
+			goto out_bad;
 		proto = hdr->proto;
 		nhoff += PPPOE_SES_HLEN;
 		switch (proto) {
@@ -120,11 +121,11 @@ ipv6:
 		case __constant_htons(PPP_IPV6):
 			goto ipv6;
 		default:
-			return false;
+			goto out_bad;
 		}
 	}
 	default:
-		return false;
+		goto out_bad;
 	}
 
 	switch (ip_proto) {
@@ -136,7 +137,7 @@ ipv6:
 
 		hdr = skb_header_pointer(skb, nhoff, sizeof(_hdr), &_hdr);
 		if (!hdr)
-			return false;
+			goto out_bad;
 		/*
 		 * Only look inside GRE if version zero and no
 		 * routing
@@ -157,7 +158,7 @@ ipv6:
 				eth = skb_header_pointer(skb, nhoff,
 							 sizeof(_eth), &_eth);
 				if (!eth)
-					return false;
+					goto out_bad;
 				proto = eth->h_proto;
 				nhoff += sizeof(*eth);
 			}
@@ -175,11 +176,15 @@ ipv6:
 		break;
 	}
 
-	flow->ip_proto = ip_proto;
+out_good:
+	ret = true;
 	flow->ports = skb_flow_get_ports(skb, nhoff, ip_proto);
+
+out_bad:
+	flow->ip_proto = ip_proto;
 	flow->thoff = (u16) nhoff;
 
-	return true;
+	return ret;
 }
 EXPORT_SYMBOL(skb_flow_dissect);
 
-- 
1.7.5.4

