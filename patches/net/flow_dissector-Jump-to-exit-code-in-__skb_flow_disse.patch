From 454359fa48d5b8ccf0cdbef3a426ae7e828288f1 Mon Sep 17 00:00:00 2001
From: Ovidiu Panait <ovidiu.panait@windriver.com>
Date: Sun, 10 Sep 2017 18:48:27 +0000
Subject: [PATCH] flow_dissector: Jump to exit code in __skb_flow_dissect

commit a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0 upstream

Instead of returning immediately (on a parsing failure for instance) we
jump to cleanup code. This always sets protocol values in key_control
(even on a failure there is still valid information in the key_tags that
was set before the problem was hit).

Signed-off-by: Tom Herbert <tom@herbertland.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 net/core/flow_dissector.c |   24 +++++++++++++++---------
 1 files changed, 15 insertions(+), 9 deletions(-)

diff --git a/net/core/flow_dissector.c b/net/core/flow_dissector.c
index 200707c..9dd024c 100644
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@ -24,6 +24,7 @@ bool skb_flow_dissect(const struct sk_buff *skb, struct flow_keys *flow)
 {
 	int poff, nhoff = skb_network_offset(skb);
 	u8 ip_proto;
+	bool ret = false;
 	__be16 proto = skb->protocol;
 
 	memset(flow, 0, sizeof(*flow));
@@ -36,7 +37,7 @@ again:
 ip:
 		iph = skb_header_pointer(skb, nhoff, sizeof(_iph), &_iph);
 		if (!iph || iph->ihl < 5)
-			return false;
+			goto out_bad;
 
 		if (ip_is_fragment(iph))
 			ip_proto = 0;
@@ -52,7 +53,7 @@ ip:
 ipv6:
 		iph = skb_header_pointer(skb, nhoff, sizeof(_iph), &_iph);
 		if (!iph)
-			return false;
+			goto out_bad;
 
 		ip_proto = iph->nexthdr;
 		flow->src = iph->saddr.s6_addr32[3];
@@ -66,7 +67,7 @@ ipv6:
 
 		vlan = skb_header_pointer(skb, nhoff, sizeof(_vlan), &_vlan);
 		if (!vlan)
-			return false;
+			goto out_bad;
 
 		proto = vlan->h_vlan_encapsulated_proto;
 		nhoff += sizeof(*vlan);
@@ -79,7 +80,7 @@ ipv6:
 		} *hdr, _hdr;
 		hdr = skb_header_pointer(skb, nhoff, sizeof(_hdr), &_hdr);
 		if (!hdr)
-			return false;
+			goto out_bad;
 		proto = hdr->proto;
 		nhoff += PPPOE_SES_HLEN;
 		switch (proto) {
@@ -88,11 +89,11 @@ ipv6:
 		case __constant_htons(PPP_IPV6):
 			goto ipv6;
 		default:
-			return false;
+			goto out_bad;
 		}
 	}
 	default:
-		return false;
+		goto out_bad;
 	}
 
 	switch (ip_proto) {
@@ -104,7 +105,7 @@ ipv6:
 
 		hdr = skb_header_pointer(skb, nhoff, sizeof(_hdr), &_hdr);
 		if (!hdr)
-			return false;
+			goto out_bad;
 		/*
 		 * Only look inside GRE if version zero and no
 		 * routing
@@ -128,7 +129,6 @@ ipv6:
 		break;
 	}
 
-	flow->ip_proto = ip_proto;
 	poff = proto_ports_offset(ip_proto);
 	if (poff >= 0) {
 		__be32 *ports, _ports;
@@ -139,6 +139,12 @@ ipv6:
 			flow->ports = *ports;
 	}
 
-	return true;
+out_good:
+	ret = true;
+
+out_bad:
+	flow->ip_proto = ip_proto;
+
+	return ret;
 }
 EXPORT_SYMBOL(skb_flow_dissect);
-- 
1.7.5.4

