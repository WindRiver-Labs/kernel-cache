From 28b985d1264ea1ac2700790805681438f968e263 Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce.ashfield@windriver.com>
Date: Tue, 24 Aug 2010 11:19:30 -0400
Subject: [PATCH] sctp: invalid retransmission intervals of the INIT chunk when rto_max is over 65535
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

lksctp associates a sctp_initmsg structure to each sctp socket. As socket
initialization, lksctp copies the value of rto_max to the sinit_max_init_timeo
member of the sctp_initmsg structure. Then as the INIT chunk’s retransmission,
sinit_max_init_timeo is used as the upper limit of the retransmission interval.

The problem is type-mismatch between sinit_max_init_timeo and rto_max. The type
of sinit_max_init_timeo is uint16 as specified in draft-ietf-tsvwg-sctpsocket.
In contrast, rto_max’s type is unsigned int. unsigned int will be either
32bit of 64bit variable. So copying rto_max to sinit_max_init_timeo makes a big
round-off error. That is the root cause.

draft-ietf-tsvwg-sctpsocket stated,

   sinit_max_init_timeo:  This value represents the largest Time-Out or
      RTO value (in milliseconds) to use in attempting an INIT.
      Normally the 'RTO.Max' is used to limit the doubling of the RTO
      upon timeout.  For the INIT message this value may override
      'RTO.Max'.  This value must not influence 'RTO.Max' during data
      transmission and is only used to bound the initial setup time.  A
      default value of 0 indicates to use the endpoints default value.
      This is normally set to the system's 'RTO.Max' value (60 seconds).

According to it, unless ULP calls the SCTP_INIT socket option, an
implementation should use 'RTO.Max' as the limit for the retransmission
interval.

However draft-ietf-tsvwg-sctpsocket also specified the type of
sinit_max_init_timeo as uint16 from below discription:

5.2.1. SCTP Initiation Structure (SCTP_INIT)

...
   The sctp_initmsg structure is defined below:

   struct sctp_initmsg {
     uint16_t sinit_num_ostreams;
     uint16_t sinit_max_instreams;
     uint16_t sinit_max_attempts;
     uint16_t sinit_max_init_timeo;
   };

So the spec assumes the maximum interval of the INIT chunk should be within in
65535 (=uint16) according to this point. If an implementation advocates this
stand, it should just copy rto_max to sinit_max_init_timeo as long as rto_max
is less than equal to 65535. Otherwise directly refers 65535 instead of rto_max
as the sinit_max_init_timeo limit.

Signed-off-by: Xue Ying <ying.xue@windriver.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 net/sctp/socket.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/net/sctp/socket.c b/net/sctp/socket.c
index 44a1ab0..04558aa 100644
--- a/net/sctp/socket.c
+++ b/net/sctp/socket.c
@@ -3642,7 +3642,8 @@ SCTP_STATIC int sctp_init_sock(struct sock *sk)
 	sp->initmsg.sinit_num_ostreams   = sctp_max_outstreams;
 	sp->initmsg.sinit_max_instreams  = sctp_max_instreams;
 	sp->initmsg.sinit_max_attempts   = sctp_max_retrans_init;
-	sp->initmsg.sinit_max_init_timeo = sctp_rto_max;
+	sp->initmsg.sinit_max_init_timeo = (sctp_rto_max <= USHORT_MAX) ?
+					   sctp_rto_max : USHORT_MAX;
 
 	/* Initialize default RTO related parameters.  These parameters can
 	 * be modified for with the SCTP_RTOINFO socket option.
-- 
1.6.5.2

