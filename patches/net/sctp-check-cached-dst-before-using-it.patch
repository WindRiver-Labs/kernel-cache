From 02fd088ce88547c6511fa6125c9529d965636eef Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Thu, 30 Dec 2010 10:56:49 +0800
Subject: [PATCH] sctp: check cached dst before using it

dst_check() will take care of SA, hence IPsec rekeying scenario
is taken into account.
Note that now sctp_transport_dst_check() check if obsolete field
is > 1, which means that dst is freed.

Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Integrated-by:  Xufeng Zhang <xufeng.zhang@windriver.com>
---
 include/net/sctp/sctp.h |   20 ++++++++++++++++++++
 net/sctp/output.c       |    4 +---
 net/sctp/transport.c    |   17 -----------------
 3 files changed, 21 insertions(+), 20 deletions(-)

diff --git a/include/net/sctp/sctp.h b/include/net/sctp/sctp.h
index 17b932b..7b0396d 100644
--- a/include/net/sctp/sctp.h
+++ b/include/net/sctp/sctp.h
@@ -699,4 +699,24 @@ static inline void sctp_v4_map_v6(union sctp_addr *addr)
 	addr->v6.sin6_addr.s6_addr32[2] = htonl(0x0000ffff);
 }
 
+/* This is inspired from __sk_dst_check().
+ * The cookie is always 0 since this is how it's used in the
+ * pmtu code.
+ */
+static inline struct dst_entry *sctp_transport_dst_check(struct sctp_transport *t)
+{
+	struct dst_entry *dst = t->dst;
+
+	/* The 'obsolete' field of dst is set to 2 when a dst is freed. */
+	if (dst &&
+	   (dst->obsolete > 1 ||
+	   (dst->obsolete && dst->ops->check(dst, 0) == NULL))) {
+		dst_release(t->dst);
+		t->dst = NULL;
+		return NULL;
+	}
+
+	return dst;
+}
+
 #endif /* __net_sctp_h__ */
diff --git a/net/sctp/output.c b/net/sctp/output.c
index 5fce06b..dd82755 100644
--- a/net/sctp/output.c
+++ b/net/sctp/output.c
@@ -401,9 +401,7 @@ int sctp_packet_transmit(struct sctp_packet *packet)
 	 */
 	skb_set_owner_w(nskb, sk);
 
-	/* The 'obsolete' field of dst is set to 2 when a dst is freed. */
-	if (!dst || (dst->obsolete > 1)) {
-		dst_release(dst);
+	if (!sctp_transport_dst_check(tp)) {
 		sctp_transport_route(tp, NULL, sctp_sk(sk));
 		if (asoc && (asoc->param_flags & SPP_PMTUD_ENABLE)) {
 			sctp_assoc_sync_pmtu(asoc);
diff --git a/net/sctp/transport.c b/net/sctp/transport.c
index 5c29b14..6be7011 100644
--- a/net/sctp/transport.c
+++ b/net/sctp/transport.c
@@ -241,23 +241,6 @@ void sctp_transport_pmtu(struct sctp_transport *transport)
 		transport->pathmtu = SCTP_DEFAULT_MAXSEGMENT;
 }
 
-/* this is a complete rip-off from __sk_dst_check
- * the cookie is always 0 since this is how it's used in the
- * pmtu code
- */
-static struct dst_entry *sctp_transport_dst_check(struct sctp_transport *t)
-{
-	struct dst_entry *dst = t->dst;
-
-	if (dst && dst->obsolete && dst->ops->check(dst, 0) == NULL) {
-		dst_release(t->dst);
-		t->dst = NULL;
-		return NULL;
-	}
-
-	return dst;
-}
-
 void sctp_transport_update_pmtu(struct sctp_transport *t, u32 pmtu)
 {
 	struct dst_entry *dst;
-- 
1.7.0.4

