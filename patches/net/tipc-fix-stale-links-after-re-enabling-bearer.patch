From 1a7f4f40b10617732cecc33e166005f2a7dc1cde Mon Sep 17 00:00:00 2001
From: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
Date: Thu, 21 Apr 2016 15:51:13 +0200
Subject: [PATCH 168/376] tipc: fix stale links after re-enabling bearer

commit 8cee83dd29dea4e7d27fda3b170381059f628868 upstream

Commit 42b18f605fea ("tipc: refactor function tipc_link_timeout()"),
introduced a bug which prevents sending of probe messages during
link synchronization phase. This leads to hanging links, if the
bearer is disabled/enabled after links are up.

In this commit, we send the probe messages correctly.

Fixes: 42b18f605fea ("tipc: refactor function tipc_link_timeout()")
Acked-by: Jon Maloy <jon.maloy@ericsson.com>
Signed-off-by: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Zhenbo Gao <zhenbo.gao@windriver.com>
---
 net/tipc/link.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/net/tipc/link.c b/net/tipc/link.c
index 2e28a7d..7059c94 100644
--- a/net/tipc/link.c
+++ b/net/tipc/link.c
@@ -721,8 +721,7 @@ int tipc_link_timeout(struct tipc_link *l, struct sk_buff_head *xmitq)
 		mtyp = STATE_MSG;
 		state = bc_acked != bc_snt;
 		probe = l->silent_intv_cnt;
-		if (probe)
-			l->silent_intv_cnt++;
+		l->silent_intv_cnt++;
 		break;
 	case LINK_RESET:
 		setup = l->rst_cnt++ <= 4;
-- 
1.7.5.4

