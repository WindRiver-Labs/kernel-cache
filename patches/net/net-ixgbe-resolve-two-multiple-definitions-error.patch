From e69511c700ac4530838c69d6892d02ff547ec9d5 Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Fri, 7 Feb 2014 17:32:52 +0800
Subject: [PATCH] net/ixgbe: resolve two multiple definitions error

The igb/kcompat.c and ixgbe/kcompat.c have several functions with the
same name, this will generate multiple definitions error when enable
them in the kernel at the same time. So rename ixgbe function names
to avoid building errors.

Signed-off-by: Li Wang <li.wang@windriver.com>
---
 drivers/net/igb/kcompat.c   |    2 +-
 drivers/net/igb/kcompat.h   |    6 +++---
 drivers/net/ixgbe/kcompat.c |    2 +-
 drivers/net/ixgbe/kcompat.h |    6 +++---
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/net/igb/kcompat.c b/drivers/net/igb/kcompat.c
index d45eec5..c5edb27 100644
--- a/drivers/net/igb/kcompat.c
+++ b/drivers/net/igb/kcompat.c
@@ -1435,7 +1435,7 @@ int __kc_pcie_capability_clear_and_set_word(struct pci_dev *dev, int pos,
 /*****************************************************************************/
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0) )
 #ifdef CONFIG_PCI_IOV
-int __kc_pci_vfs_assigned(struct pci_dev *dev)
+int __kc_pci_vfs_assigned_igb(struct pci_dev *dev)
 {
 	unsigned int vfs_assigned = 0;
 #ifdef HAVE_PCI_DEV_FLAGS_ASSIGNED
diff --git a/drivers/net/igb/kcompat.h b/drivers/net/igb/kcompat.h
index fd37e13..7034dbb 100644
--- a/drivers/net/igb/kcompat.h
+++ b/drivers/net/igb/kcompat.h
@@ -3786,14 +3786,14 @@ extern u16 __kc_netdev_pick_tx(struct net_device *dev, struct sk_buff *skb);
 /*****************************************************************************/
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0) )
 #ifdef CONFIG_PCI_IOV
-extern int __kc_pci_vfs_assigned(struct pci_dev *dev);
+extern int __kc_pci_vfs_assigned_igb(struct pci_dev *dev);
 #else
-static inline int __kc_pci_vfs_assigned(struct pci_dev *dev)
+static inline int __kc_pci_vfs_assigned_igb(struct pci_dev *dev)
 {
 	return 0;
 }
 #endif
-#define pci_vfs_assigned(dev) __kc_pci_vfs_assigned(dev)
+#define pci_vfs_assigned(dev) __kc_pci_vfs_assigned_igb(dev)
 
 #ifndef VLAN_TX_COOKIE_MAGIC
 static inline struct sk_buff *__kc__vlan_hwaccel_put_tag(struct sk_buff *skb,
diff --git a/drivers/net/ixgbe/kcompat.c b/drivers/net/ixgbe/kcompat.c
index c645237..2a1b42a 100644
--- a/drivers/net/ixgbe/kcompat.c
+++ b/drivers/net/ixgbe/kcompat.c
@@ -1634,7 +1634,7 @@ u16 __kc_netdev_pick_tx(struct net_device *dev, struct sk_buff *skb)
 /*****************************************************************************/
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0) )
 #ifdef CONFIG_PCI_IOV
-int __kc_pci_vfs_assigned(struct pci_dev *dev)
+int __kc_pci_vfs_assigned_ixgbe(struct pci_dev *dev)
 {
 	unsigned int vfs_assigned = 0;
 #ifdef HAVE_PCI_DEV_FLAGS_ASSIGNED
diff --git a/drivers/net/ixgbe/kcompat.h b/drivers/net/ixgbe/kcompat.h
index 0401176..e87b22e 100644
--- a/drivers/net/ixgbe/kcompat.h
+++ b/drivers/net/ixgbe/kcompat.h
@@ -3803,14 +3803,14 @@ extern u16 __kc_netdev_pick_tx(struct net_device *dev, struct sk_buff *skb);
 /*****************************************************************************/
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0) )
 #ifdef CONFIG_PCI_IOV
-extern int __kc_pci_vfs_assigned(struct pci_dev *dev);
+extern int __kc_pci_vfs_assigned_ixgbe(struct pci_dev *dev);
 #else
-static inline int __kc_pci_vfs_assigned(struct pci_dev *dev)
+static inline int __kc_pci_vfs_assigned_ixgbe(struct pci_dev *dev)
 {
 	return 0;
 }
 #endif
-#define pci_vfs_assigned(dev) __kc_pci_vfs_assigned(dev)
+#define pci_vfs_assigned(dev) __kc_pci_vfs_assigned_ixgbe(dev)
 
 #ifndef VLAN_TX_COOKIE_MAGIC
 static inline struct sk_buff *__kc__vlan_hwaccel_put_tag(struct sk_buff *skb,
-- 
1.7.0

