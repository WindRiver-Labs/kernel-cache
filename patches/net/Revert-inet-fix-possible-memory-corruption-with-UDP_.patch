From db62a3582d116822ae6b63abd58a640b1386ee29 Mon Sep 17 00:00:00 2001
From: Liu Haitao <haitao.liu@windriver.com>
Date: Thu, 4 Jan 2018 15:54:53 +0800
Subject: [PATCH] Revert "inet: fix possible memory corruption with UDP_CORK
 and UFO"

This reverts commit b90cd7b9d0baab2e8176d9cca5f18a592ef16063.

Conflicts:
	net/ipv4/ip_output.c
	net/ipv6/ip6_output.c

This commit  b90cd7b9d0 is a replacement patch only for stable which does
fix the problems handled by the following two commits in -net:

"ip_output: do skb ufo init for peeked non ufo skb as well" (e93b7d748be887cd7639b113ba7d7ef792a7efb9)
"ip6_output: do skb ufo init for peeked non ufo skb as well" (c547dbf55d5f8cf615ccc0e7265e98db27d3fb8b)

These two patch had been introduced for several years ago. So we should revert
it.

Signed-off-by: Liu Haitao <haitao.liu@windriver.com>
---
 include/linux/skbuff.h |    5 -----
 net/ipv4/ip_output.c   |    2 +-
 net/ipv6/ip6_output.c  |    2 +-
 3 files changed, 2 insertions(+), 7 deletions(-)

diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index b7df717..ddf9839 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -1339,11 +1339,6 @@ static inline int skb_pagelen(const struct sk_buff *skb)
 	return len + skb_headlen(skb);
 }
 
-static inline bool skb_has_frags(const struct sk_buff *skb)
-{
-	return skb_shinfo(skb)->nr_frags;
-}
-
 /**
  * __skb_fill_page_desc - initialise a paged fragment in an skb
  * @skb: buffer containing fragment to be initialised
diff --git a/net/ipv4/ip_output.c b/net/ipv4/ip_output.c
index cab12ed..70cccf9 100644
--- a/net/ipv4/ip_output.c
+++ b/net/ipv4/ip_output.c
@@ -847,7 +847,7 @@ static int __ip_append_data(struct sock *sk,
 		csummode = CHECKSUM_PARTIAL;
 
 	cork->length += length;
-	if ((skb && skb_has_frags(skb)) ||
+	if ((skb && skb_is_gso(skb)) ||
 	    ((length > mtu) &&
 	    (skb_queue_len(queue) <= 1) &&
 	    (sk->sk_protocol == IPPROTO_UDP) &&
diff --git a/net/ipv6/ip6_output.c b/net/ipv6/ip6_output.c
index 29eb149..80d1fe6 100644
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@ -1289,7 +1289,7 @@ int ip6_append_data(struct sock *sk, int getfrag(void *from, char *to,
 
 	skb = skb_peek_tail(&sk->sk_write_queue);
 	cork->length += length;
-	if ((skb && skb_has_frags(skb)) ||
+	if ((skb && skb_is_gso(skb)) ||
 	    ((length > mtu) &&
 	    (skb_queue_len(&sk->sk_write_queue) <= 1) &&
 	    (sk->sk_protocol == IPPROTO_UDP) &&
-- 
1.7.5.4

