From 7ad0cd2ab4fe604c918cbfb669573fb63a7c7ab6 Mon Sep 17 00:00:00 2001
From: Schoch Christian <e0326715@student.tuwien.ac.at>
Date: Thu, 5 Dec 2013 10:22:38 +0800
Subject: [PATCH 1/2] sctp: Error in calculation of RTTvar

commit 92d64c261e77cb2a6117887617e2a629fea6b67c upstream

The calculation of RTTVAR involves the subtraction of two unsigned
numbers which
may causes rollover and results in very high values of RTTVAR when RTT > SRTT.
With this patch it is possible to set RTOmin = 1 to get the minimum of RTO at
4 times the clock granularity.

Change Notes:

v2)
        *Replaced abs() by abs64() and long by __s64, changed patch
description.

Signed-off-by: Christian Schoch <e0326715@student.tuwien.ac.at>
CC: Vlad Yasevich <vyasevich@gmail.com>
CC: Sridhar Samudrala <sri@us.ibm.com>
CC: Neil Horman <nhorman@tuxdriver.com>
CC: linux-sctp@vger.kernel.org
Acked-by: Vlad Yasevich <vyasevich@gmail.com>
Acked-by: Neil Horman <nhorman@tuxdriver.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 net/sctp/transport.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/net/sctp/transport.c b/net/sctp/transport.c
index b026ba0..d5447ef 100644
--- a/net/sctp/transport.c
+++ b/net/sctp/transport.c
@@ -317,7 +317,7 @@ void sctp_transport_update_rto(struct sctp_transport *tp, __u32 rtt)
 		 * 1/8, rto_alpha would be expressed as 3.
 		 */
 		tp->rttvar = tp->rttvar - (tp->rttvar >> sctp_rto_beta)
-			+ ((abs(tp->srtt - rtt)) >> sctp_rto_beta);
+			+ (((__u32)abs64((__s64)tp->srtt - (__s64)rtt)) >> sctp_rto_beta);
 		tp->srtt = tp->srtt - (tp->srtt >> sctp_rto_alpha)
 			+ (rtt >> sctp_rto_alpha);
 	} else {
-- 
1.7.5.4

