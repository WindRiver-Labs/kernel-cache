From 21ca2e973aca23466f2168f158a72d815ae18f55 Mon Sep 17 00:00:00 2001
From: Shan Hai <shan.hai@windriver.com>
Date: Fri, 11 Oct 2013 16:33:51 +0800
Subject: [PATCH] net/gianfa.c: initialize wk_bd_base before using it

Using uninitilized wk_bd_base triggers following backtrace during
suspend/resume operations, fix it by initialize the wk_bd_base to
a proper value.

Unable to handle kernel paging request for data at address 0x0000
Faulting instruction address: 0xc0337ac4
Oops: Kernel access of bad area, sig: 11 [#1]
PREEMPT SMP NR_CPUS=2 LTT NESTING LEVEL : 0
last sysfs file: /sys/power/state
Modules linked in: physmap_of cfi_util gen_probe cfi_probe cfi_c]
NIP: c0337ac4 LR: c0337a78 CTR: 00000000
REGS: e1a9be60 TRAP: 0300   Not tainted  (2.6.34)
MSR: 00029000 <EE,ME,CE>  CR: 44000088  XER: 20000000
DEAR: 00000000, ESR: 00000000
TASK = e07a8cd0[760] 'irq/26-eth0_g1_' THREAD: e1a9a000 CPU: 0
GPR00: 0000b000 e1a9bf10 e07a8cd0 00000000 0000000e 00000002 e0d
GPR08: 0000045b 0000665e 00008000 00002000 24000084 00000000 000
GPR16: 0000001f 00000000 00000080 c05daa2c e196d860 ffff8000 000
GPR24: e017f840 20100040 000066c0 ef8ce460 e1ae70c0 ef8ce000 000
NIP [c0337ac4] gfar_receive+0x17c/0x200
LR [c0337a78] gfar_receive+0x130/0x200
Call Trace:
[e1a9bf10] [c0337a78] gfar_receive+0x130/0x200 (unreliable)
[e1a9bf50] [c00b0874] irq_thread+0x13c/0x23c
[e1a9bfa0] [c0076c74] kthread+0x88/0x8c
[e1a9bff0] [c001398c] original_kernel_thread+0x4c/0x68
Instruction dump:
935d0060 a01e0000 b2de0002 540004a6 7c00ab78 b01e0000 7c0004ac a
3bde0008 700b2000 41a2ff28 83db0210 <a81e0000> 2f800000 409cff24
 ---[ end trace d83cd3d5b22cef82 ]---
exiting task "irq/26-eth0_g1_" (760) is an active IRQ thread (ir)

Signed-off-by: Shan Hai <shan.hai@windriver.com>
---
 drivers/net/gianfar.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index 2807a93..c0002e0 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -429,6 +429,7 @@ static int gfar_alloc_skb_resources(struct net_device *ndev)
 						& ~(RXBUF_ALIGNMENT - 1);
 		priv->wk_buf_align_vaddr = wk_buf_vaddr;
 		priv->wk_buf_align_paddr = wk_buf_paddr;
+		priv->wk_bd_base = rx_queue->rx_bd_base;
 
 		/* Setup wake up rx ring and buffer */
 		wkbdp = rx_queue->rx_bd_base;
-- 
1.7.0

