From 82a86944c188a1ab789e3b1c7a8c35a80038f34b Mon Sep 17 00:00:00 2001
From: Liming Wang <liming.wang@windriver.com>
Date: Wed, 28 Apr 2010 13:32:12 +0800
Subject: [PATCH] net: change sysctl/core initcall position to prevent two duplicated entries

when disabling native TCP/IP, only two sysctl/net exists: unix and core.

If sysctl/unix is initialized before sysctl/core, there will be two
duplicated "/proc/sys/net" entries. Change sysctl/core initcall position
can make sysctl/core initialize before sysctl/unix, so as to prevent
two duplicated entries.

But only change the position will lead to another problem: when enabling
native TCP/IP, sysctl/core will initialize before sysctl/ipv4, so as to still
make duplicated "/proc/sys/net" entries. To resolve this problem, we use
register_sysctl_paths to register a empty "/proc/sys/net" early to
prevent this issus.

This patch is inspired by commit in upstream:
b27aeadb5948d400df83db4d29590fb9862ba49d

Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 net/core/sysctl_net_core.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/net/core/sysctl_net_core.c b/net/core/sysctl_net_core.c
index f686467..2365f1c 100644
--- a/net/core/sysctl_net_core.c
+++ b/net/core/sysctl_net_core.c
@@ -207,8 +207,11 @@ static __net_initdata struct pernet_operations sysctl_core_ops = {
 
 static __init int sysctl_core_init(void)
 {
+	static struct ctl_table empty[1];
+
+	register_sysctl_paths(net_core_path, empty);
 	register_net_sysctl_rotable(net_core_path, net_core_table);
 	return register_pernet_subsys(&sysctl_core_ops);
 }
 
-__initcall(sysctl_core_init);
+fs_initcall(sysctl_core_init);
-- 
1.6.0.4

