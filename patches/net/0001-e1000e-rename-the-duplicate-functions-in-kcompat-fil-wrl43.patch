>From 9c5e0ea59fe7451ac3c0e6a49801f3df255f318e Mon Sep 17 00:00:00 2001
From: yanjun.zhu <yanjun.zhu@windriver.com>
Date: Wed, 22 Jul 2015 12:47:53 +0800
Subject: [PATCH 1/1] e1000e: rename the duplicate functions in kcompat file

Some functions in e1000e are duplicate with the functions in ixgbevf.
To avoid duplicate, rename these functions.

Signed-off-by: yanjun.zhu <yanjun.zhu@windriver.com>
---
 drivers/net/e1000e/kcompat.c |   14 +++++++-------
 drivers/net/e1000e/kcompat.h |   36 ++++++++++++++++++------------------
 2 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/drivers/net/e1000e/kcompat.c b/drivers/net/e1000e/kcompat.c
index b673d66..e848863 100644
--- a/drivers/net/e1000e/kcompat.c
+++ b/drivers/net/e1000e/kcompat.c
@@ -1336,7 +1336,7 @@ int __e1000e_kc_pcie_capability_clear_and_set_word(struct pci_dev *dev, int pos,
 	return ret;
 }
 
-int __kc_pcie_capability_clear_word(struct pci_dev *dev, int pos, u16 clear)
+int __e1000e_kc_pcie_capability_clear_word(struct pci_dev *dev, int pos, u16 clear)
 {
 	return __e1000e_kc_pcie_capability_clear_and_set_word(dev, pos, clear, 0);
 }
@@ -1351,7 +1351,7 @@ int __kc_pcie_capability_clear_word(struct pci_dev *dev, int pos, u16 clear)
 #endif /* 3.10.0 */
 
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,13,0) )
-int __kc_dma_set_mask_and_coherent(struct device *dev, u64 mask)
+int __e1000e_kc_dma_set_mask_and_coherent(struct device *dev, u64 mask)
 {
 	int err = dma_set_mask(dev, mask);
 
@@ -1383,7 +1383,7 @@ void __kc_netdev_rss_key_fill(void *buffer, size_t len)
 #endif /* 3.13.0 */
 
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,14,0) )
-int __kc_pci_enable_msix_range(struct pci_dev *dev, struct msix_entry *entries,
+int __e1000e_kc_pci_enable_msix_range(struct pci_dev *dev, struct msix_entry *entries,
 			       int minvec, int maxvec)
 {
 	int nvec = maxvec;
@@ -1410,7 +1410,7 @@ int __kc_pci_enable_msix_range(struct pci_dev *dev, struct msix_entry *entries,
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,16,0) )
 #ifdef HAVE_SET_RX_MODE
 #ifdef NETDEV_HW_ADDR_T_UNICAST
-int __kc_hw_addr_sync_dev(struct netdev_hw_addr_list *list,
+int __e1000e_kc_hw_addr_sync_dev(struct netdev_hw_addr_list *list,
 			  struct net_device *dev,
 			  int (*sync) (struct net_device *,
 				       const unsigned char *),
@@ -1460,7 +1460,7 @@ int __kc_hw_addr_sync_dev(struct netdev_hw_addr_list *list,
 	return 0;
 }
 
-void __kc_hw_addr_unsync_dev(struct netdev_hw_addr_list *list,
+void __e1000e_kc_hw_addr_unsync_dev(struct netdev_hw_addr_list *list,
 			     struct net_device *dev,
 			     int (*unsync) (struct net_device *,
 					    const unsigned char *))
@@ -1494,7 +1494,7 @@ void __kc_hw_addr_unsync_dev(struct netdev_hw_addr_list *list,
 
 #endif /* NETDEV_HW_ADDR_T_UNICAST  */
 #ifndef NETDEV_HW_ADDR_T_MULTICAST
-int __kc_dev_addr_sync_dev(struct dev_addr_list **list, int *count,
+int __e1000e_kc_dev_addr_sync_dev(struct dev_addr_list **list, int *count,
 			   struct net_device *dev,
 			   int (*sync) (struct net_device *,
 					const unsigned char *),
@@ -1533,7 +1533,7 @@ int __kc_dev_addr_sync_dev(struct dev_addr_list **list, int *count,
 	return 0;
 }
 
-void __kc_dev_addr_unsync_dev(struct dev_addr_list **list, int *count,
+void __e1000e_kc_dev_addr_unsync_dev(struct dev_addr_list **list, int *count,
 			      struct net_device *dev,
 			      int (*unsync) (struct net_device *,
 					     const unsigned char *))
diff --git a/drivers/net/e1000e/kcompat.h b/drivers/net/e1000e/kcompat.h
index 0ce01a3..64eb84f 100644
--- a/drivers/net/e1000e/kcompat.h
+++ b/drivers/net/e1000e/kcompat.h
@@ -3938,9 +3938,9 @@ int __e1000e_kc_pcie_capability_clear_and_set_word(struct pci_dev *dev, int pos,
 #endif /* pcie_capability_clear_and_set_word */
 
 #ifndef pcie_capability_clear_word
-int __kc_pcie_capability_clear_word(struct pci_dev *dev, int pos, u16 clear);
+int __e1000e_kc_pcie_capability_clear_word(struct pci_dev *dev, int pos, u16 clear);
 #define pcie_capability_clear_word(d, p, c) \
-	__kc_pcie_capability_clear_word(d, p, c)
+	__e1000e_kc_pcie_capability_clear_word(d, p, c)
 #endif /* pcie_capability_clear_word */
 
 #ifndef PCI_EXP_LNKSTA2
@@ -4133,8 +4133,8 @@ extern int __kc_ndo_dflt_fdb_del(struct ndmsg *ndm, struct net_device *dev,
 
 /*****************************************************************************/
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,13,0) )
-#define dma_set_mask_and_coherent(_p, _m) __kc_dma_set_mask_and_coherent(_p, _m)
-extern int __kc_dma_set_mask_and_coherent(struct device *dev, u64 mask);
+#define dma_set_mask_and_coherent(_p, _m) __e1000e_kc_dma_set_mask_and_coherent(_p, _m)
+extern int __e1000e_kc_dma_set_mask_and_coherent(struct device *dev, u64 mask);
 #ifndef u64_stats_init
 #define u64_stats_init(a) do { } while(0)
 #endif
@@ -4201,10 +4201,10 @@ static inline void __kc_skb_set_hash(struct sk_buff __maybe_unused * skb,
 #endif /* !(RHEL_RELEASE_CODE&&RHEL_RELEASE_CODE>=RHEL_RELEASE_VERSION(7,0)) */
 
 #ifndef pci_enable_msix_range
-extern int __kc_pci_enable_msix_range(struct pci_dev *dev,
+extern int __e1000e_kc_pci_enable_msix_range(struct pci_dev *dev,
 				      struct msix_entry *entries,
 				      int minvec, int maxvec);
-#define pci_enable_msix_range __kc_pci_enable_msix_range
+#define pci_enable_msix_range __e1000e_kc_pci_enable_msix_range
 #endif
 
 #ifndef ether_addr_copy
@@ -4256,25 +4256,25 @@ static inline void __kc_ether_addr_copy(u8 *dst, const u8 *src)
 #ifndef __dev_uc_sync
 #ifdef HAVE_SET_RX_MODE
 #ifdef NETDEV_HW_ADDR_T_UNICAST
-int __kc_hw_addr_sync_dev(struct netdev_hw_addr_list *list,
+int __e1000e_kc_hw_addr_sync_dev(struct netdev_hw_addr_list *list,
 			  struct net_device *dev,
 			  int (*sync) (struct net_device *,
 				       const unsigned char *),
 			  int (*unsync) (struct net_device *,
 					 const unsigned char *));
-void __kc_hw_addr_unsync_dev(struct netdev_hw_addr_list *list,
+void __e1000e_kc_hw_addr_unsync_dev(struct netdev_hw_addr_list *list,
 			     struct net_device *dev,
 			     int (*unsync) (struct net_device *,
 					    const unsigned char *));
 #endif
 #ifndef NETDEV_HW_ADDR_T_MULTICAST
-int __kc_dev_addr_sync_dev(struct dev_addr_list **list, int *count,
+int __e1000e_kc_dev_addr_sync_dev(struct dev_addr_list **list, int *count,
 			   struct net_device *dev,
 			   int (*sync) (struct net_device *,
 					const unsigned char *),
 			   int (*unsync) (struct net_device *,
 					  const unsigned char *));
-void __kc_dev_addr_unsync_dev(struct dev_addr_list **list, int *count,
+void __e1000e_kc_dev_addr_unsync_dev(struct dev_addr_list **list, int *count,
 			      struct net_device *dev,
 			      int (*unsync) (struct net_device *,
 					     const unsigned char *));
@@ -4292,9 +4292,9 @@ static inline int __kc_dev_uc_sync(struct net_device __maybe_unused * dev,
 								char *))
 {
 #ifdef NETDEV_HW_ADDR_T_UNICAST
-	return __kc_hw_addr_sync_dev(&dev->uc, dev, sync, unsync);
+	return __e1000e_kc_hw_addr_sync_dev(&dev->uc, dev, sync, unsync);
 #elif defined(HAVE_SET_RX_MODE)
-	return __kc_dev_addr_sync_dev(&dev->uc_list, &dev->uc_count,
+	return __e1000e_kc_dev_addr_sync_dev(&dev->uc_list, &dev->uc_count,
 				      dev, sync, unsync);
 #else
 	return 0;
@@ -4312,9 +4312,9 @@ static inline void __kc_dev_uc_unsync(struct net_device __maybe_unused * dev,
 {
 #ifdef HAVE_SET_RX_MODE
 #ifdef NETDEV_HW_ADDR_T_UNICAST
-	__kc_hw_addr_unsync_dev(&dev->uc, dev, unsync);
+	__e1000e_kc_hw_addr_unsync_dev(&dev->uc, dev, unsync);
 #else /* NETDEV_HW_ADDR_T_MULTICAST */
-	__kc_dev_addr_unsync_dev(&dev->uc_list, &dev->uc_count, dev, unsync);
+	__e1000e_kc_dev_addr_unsync_dev(&dev->uc_list, &dev->uc_count, dev, unsync);
 #endif /* NETDEV_HW_ADDR_T_UNICAST */
 #endif /* HAVE_SET_RX_MODE */
 }
@@ -4332,9 +4332,9 @@ static inline int __kc_dev_mc_sync(struct net_device __maybe_unused * dev,
 								char *))
 {
 #ifdef NETDEV_HW_ADDR_T_MULTICAST
-	return __kc_hw_addr_sync_dev(&dev->mc, dev, sync, unsync);
+	return __e1000e_kc_hw_addr_sync_dev(&dev->mc, dev, sync, unsync);
 #elif defined(HAVE_SET_RX_MODE)
-	return __kc_dev_addr_sync_dev(&dev->mc_list, &dev->mc_count,
+	return __e1000e_kc_dev_addr_sync_dev(&dev->mc_list, &dev->mc_count,
 				      dev, sync, unsync);
 #else
 	return 0;
@@ -4353,9 +4353,9 @@ static inline void __kc_dev_mc_unsync(struct net_device __maybe_unused * dev,
 {
 #ifdef HAVE_SET_RX_MODE
 #ifdef NETDEV_HW_ADDR_T_MULTICAST
-	__kc_hw_addr_unsync_dev(&dev->mc, dev, unsync);
+	__e1000e_kc_hw_addr_unsync_dev(&dev->mc, dev, unsync);
 #else /* NETDEV_HW_ADDR_T_MULTICAST */
-	__kc_dev_addr_unsync_dev(&dev->mc_list, &dev->mc_count, dev, unsync);
+	__e1000e_kc_dev_addr_unsync_dev(&dev->mc_list, &dev->mc_count, dev, unsync);
 #endif /* NETDEV_HW_ADDR_T_MULTICAST */
 #endif /* HAVE_SET_RX_MODE */
 }
-- 
1.7.0.5

