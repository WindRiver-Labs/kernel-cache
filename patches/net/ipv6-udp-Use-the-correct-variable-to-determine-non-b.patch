From edbbd26de9b737f5b600e74d35d87f7f42d1aaaa Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Tue, 24 May 2011 17:34:22 +0800
Subject: [PATCH] ipv6/udp: Use the correct variable to determine non-blocking condition

udpv6_recvmsg() function is not using the correct variable to determine
whether or not the socket is in non-blocking operation, this will lead
to unexpected behavior when udp checksum error occurs.

Consider non-blocking udp receive scenario: when udpv6_recvmsg() is
called by sock_common_recvmsg(), MSG_DONTWAIT bit of flags variable in
udpv6_recvmsg() is cleared by:
    err = sk->sk_prot->recvmsg(iocb, sk, msg, size, flags & MSG_DONTWAIT,
                   flags & ~MSG_DONTWAIT, &addr_len);
But it save MSG_DONTWAIT to noblock variable in udpv6_recvmsg() meanwhile,
when udp checksum error occurs, the execution will go to csum_copy_err,
then the problem happens:
    csum_copy_err:
	    ...............
            if (flags & MSG_DONTWAIT)
                    return -EAGAIN;
            goto try_again;
	    ...............
It will always go to try_again as MSG_DONTWAIT has been cleared previously,
this is not true because it's a non-blocking socket, we should do like this:
	    if (noblock)
                    return -EAGAIN;
This is really what ipv4/udp do.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 net/ipv6/udp.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/net/ipv6/udp.c b/net/ipv6/udp.c
index e53d101..b77bfa0 100644
--- a/net/ipv6/udp.c
+++ b/net/ipv6/udp.c
@@ -217,7 +217,7 @@ csum_copy_err:
 		UDP6_INC_STATS_USER(sock_net(sk), UDP_MIB_INERRORS, is_udplite);
 	release_sock(sk);
 
-	if (flags & MSG_DONTWAIT)
+	if (noblock)
 		return -EAGAIN;
 	goto try_again;
 }
-- 
1.7.0.4

