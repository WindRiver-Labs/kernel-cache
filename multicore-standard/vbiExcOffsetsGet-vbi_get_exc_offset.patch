From 10379a55487d5d0523340d873f60a524e16a938d Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 18 Nov 2009 10:07:26 -0500
Subject: [PATCH 36/80] vbiExcOffsetsGet --> vbi_get_exc_offset

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/syscalls.S |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/syscalls.S b/arch/powerpc/kernel/vbi/syscalls.S
index fbddc95..81a42d2 100644
--- a/arch/powerpc/kernel/vbi/syscalls.S
+++ b/arch/powerpc/kernel/vbi/syscalls.S
@@ -53,7 +53,7 @@ FUNC_EXPORT(vbi_vcore_irq_lock)
 FUNC_EXPORT(vbi_vcore_irq_state)
 FUNC_EXPORT(vbi_set_exc_base)
 FUNC_EXPORT(vbi_set_exc_offset)
-FUNC_EXPORT(vbiExcOffsetsGet)
+FUNC_EXPORT(vbi_get_exc_offset)
 FUNC_EXPORT(vbiMemAttrSet)
 FUNC_EXPORT(vbiMemAttrGet)
 FUNC_EXPORT(vbiVmmuConfig)
@@ -511,7 +511,7 @@ FUNC_END(vbi_set_exc_base)
  *
  * This routine changes the exceptions vector table offset addresses for the
  * active virtual core. By default they follow the standard PPC exception
- * offsets. vbiExcOffsetsGet will provide the offsets being used for the
+ * offsets. vbi_get_exc_offset will provide the offsets being used for the
  * virtual board. The offset table uses an index based on IVOR number.
  * If the guest OS programmer wishes to move these address then this function
  * must be called to inform hypervisor. This function must be called with
@@ -536,7 +536,7 @@ FUNC_LABEL(vbi_set_exc_offset)
 FUNC_END(vbi_set_exc_offset)
 
 /*
- * vbiExcOffsetsGet - Get the exceptions vector offsetcs for a virtual core
+ * vbi_get_exc_offset - Get the exceptions vector offsetcs for a virtual core
  *
  * This routine gets the exceptions vector table offset addresses for the
  * active virtual core. By default they follow the standard PPC exception
@@ -544,7 +544,7 @@ FUNC_END(vbi_set_exc_offset)
  * virtual board. The offset table uses an index based on IVOR number.
  *
  */
-FUNC_LABEL(vbiExcOffsetsGet)
+FUNC_LABEL(vbi_get_exc_offset)
 	/* set command for the ioctl */
 	mr      r4, r3
 	li	r3, VBI_HYIOCTL_EXCOFFSETS_GET
@@ -554,7 +554,7 @@ FUNC_LABEL(vbiExcOffsetsGet)
 	ori r0, r0, LO(VBI_SYS_hyIoctl)
 	HCALL
 	blr
-FUNC_END(vbiExcOffsetsGet)
+FUNC_END(vbi_get_exc_offset)
 
 /*
  * vbi_update_text_cache - flush data cache then invalidate instruction cache
-- 
1.6.5.2

