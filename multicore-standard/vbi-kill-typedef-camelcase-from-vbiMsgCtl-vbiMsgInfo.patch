From 60b9d147ce566a6d95a36376491ab067ca396a30 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 2 Dec 2009 17:10:52 -0500
Subject: [PATCH 20/43] vbi: kill typedef/camelcase from vbiMsgCtl vbiMsgInfo vbiMemCtl

Also Add compatibility for old typdefs.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/vbi/compat.h  |    4 ++++
 include/vbi/syscall.h |   12 ++++++------
 2 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index 99e88e1..ae9d296 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -38,6 +38,10 @@
 #define VB_MEM_INFO	struct vb_mem_info
 #define VB_SM_INFO	struct vb_sm_info
 
+#define VBI_MSG_INFO		struct vbi_msg_info
+#define VBI_MSG_CTL		struct vbi_msg_ctl
+#define VBI_MEM_CTL		struct vbi_mem_ctl
+
 #define VBI_CLK_HOOK_INFO	struct vbi_clk_hook
 #define VBI_CLK_HOOK_INFO_PTR	struct vbi_clk_hook *
 
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index dc2339f..599710a 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -30,7 +30,7 @@ struct vmmuConfig;
 
 /* information about incoming message */
 
-typedef struct vbiMsgInfo
+struct vbi_msg_info
 {
 	int32_t    id;	/* context id of sender */
 	uint32_t type;	/* message type (msg/event) */
@@ -39,7 +39,7 @@ typedef struct vbiMsgInfo
 	uint32_t error;	/* extended error status */
 	time_t   timestamp;	/* time message was sent */
 	uint32_t nmsg;	/* number of queued messages remaining */
-} VBI_MSG_INFO;
+};
 
 /* extended error codes reported in "error" field */
 
@@ -58,25 +58,25 @@ typedef struct vbiMsgInfo
 
 /* modifiers for message processing */
 
-typedef struct vbiMsgCtl
+struct vbi_msg_ctl
 {
 	uint32_t flags;		/* operation flags */
 	uint32_t ordering;	/* order to receive messages */
 	time_t timeout;		/* receive timeout */
-} VBI_MSG_CTL;
+};
 
 /* message control flags */
 #define VBI_MSG_CTL_FLAG_RETRY 1
 
 /* memory read/write control structure */
-typedef struct vbiMemCtl
+struct vbi_mem_ctl
 {
 	VB_ALIGN_FIELD_64 (void *pBuffer, pad1); /* address of target context   */
 	VB_ALIGN_FIELD_64 (void *pAddress, pad2);/* address of calling context  */
 	uint64_t sizeIn;	    /* number of bytes to be read	    */
 	uint64_t sizeOut;	    /* number of bytes successfully read    */
 	uint32_t flags;	    /* data/instruction flush option	    */
-} VBI_MEM_CTL;
+};
 
 #define VBI_DCACHE_FLUSH 	0x0001
 #define VBI_ICACHE_INV 		0x0002
-- 
1.6.5.2

