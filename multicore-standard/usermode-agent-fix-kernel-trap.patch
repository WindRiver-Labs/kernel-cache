From eba948d49e207828b39116c4f6a9f0d480bda97c Mon Sep 17 00:00:00 2001
From: Thomas Tai <thomas.tai@windriver.com>
Date: Fri, 2 Oct 2009 15:17:27 -0400
Subject: [PATCH] usermode-agent: fix kernel trap

When running usermode-agent, trap at flush_spe_to_thread().
Found giveup_spe() not implemented, follow native implementation
to add giveup_spe() in process.c, which mask off MSR_SPE in
thread's msr register.

Signed-off-by: Thomas Tai <thomas.tai@windriver.com>
---
 arch/powerpc/kernel/head_wrhv.S |    9 ---------
 arch/powerpc/kernel/process.c   |   21 +++++++++++++++++++++
 2 files changed, 21 insertions(+), 9 deletions(-)

diff --git a/arch/powerpc/kernel/head_wrhv.S b/arch/powerpc/kernel/head_wrhv.S
index c9c3674..fe52654 100644
--- a/arch/powerpc/kernel/head_wrhv.S
+++ b/arch/powerpc/kernel/head_wrhv.S
@@ -632,15 +632,6 @@ _GLOBAL(loadcam_entry)
 _GLOBAL(giveup_altivec)
 	blr
 
-#ifdef CONFIG_SPE
-/*
- * extern void giveup_spe(struct task_struct *prev)
- *
- */
-_GLOBAL(giveup_spe)
-	blr
-#endif /* CONFIG_SPE */
-
 /*
  * extern void giveup_fpu(struct task_struct *prev)
  *
diff --git a/arch/powerpc/kernel/process.c b/arch/powerpc/kernel/process.c
index 5966700..34e37d1 100644
--- a/arch/powerpc/kernel/process.c
+++ b/arch/powerpc/kernel/process.c
@@ -186,6 +186,27 @@ void flush_vsx_to_thread(struct task_struct *tsk)
 
 #ifdef CONFIG_SPE
 
+
+#ifdef CONFIG_PARAVIRT
+/* refer to native implementation in
+ * linux/arch/powerpc/kernel/head_fsl_booke.S
+ */
+void giveup_spe(struct task_struct *tsk)
+{
+	/* if no previous owner, done */
+	if (!tsk){
+                return;
+        }
+
+        /* disable SPE for previous task */
+        tsk->thread.regs->msr &= ~MSR_SPE;
+
+#ifndef CONFIG_SMP
+        last_task_used_spe = 0;
+#endif /* CONFIG_SMP */
+}
+#endif
+
 void enable_kernel_spe(void)
 {
 	WARN_ON(preemptible());
-- 
1.6.5.2

