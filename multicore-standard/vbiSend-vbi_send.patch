From b98b860a9c5293269278b78bba1b2ed99b83c1ee Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 18 Nov 2009 10:07:13 -0500
Subject: [PATCH 20/80] vbiSend --> vbi_send

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/syscalls.S        |    8 ++++----
 arch/powerpc/platforms/85xx/wrhv_8572ds.c |    4 ++--
 arch/x86/kernel/vbi/syscalls.S            |    6 +++---
 include/vbi/syscall.h                     |    2 +-
 4 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/syscalls.S b/arch/powerpc/kernel/vbi/syscalls.S
index ec7f8c6..d1588ef 100644
--- a/arch/powerpc/kernel/vbi/syscalls.S
+++ b/arch/powerpc/kernel/vbi/syscalls.S
@@ -37,7 +37,7 @@ FUNC_EXPORT(vbi_io_apic_op)
 FUNC_EXPORT(vbi_io_apic_ioctl)
 FUNC_EXPORT(vbi_hy_ioctl)
 FUNC_EXPORT(vbi_ctx_ctl)
-FUNC_EXPORT(vbiSend)
+FUNC_EXPORT(vbi_send)
 FUNC_EXPORT(vbiReceiveOp)
 FUNC_EXPORT(vbiReply)
 FUNC_EXPORT(vbiIcacheFlush)
@@ -241,19 +241,19 @@ FUNC_END(vbi_vb_resume)
 
 /*
  *
- * vbiSend - Send a message to another context
+ * vbi_send - Send a message to another context
  *
  * This routine makes a hypercall to send a message to the specified context
  * and waits for a reply.  The caller will block until the sender replies to
  * the sent message.
  *
  */
-FUNC_LABEL(vbiSend)
+FUNC_LABEL(vbi_send)
 	lis r0, HI(VBI_SYS_send)
 	ori r0, r0, LO(VBI_SYS_send)
 	HCALL
 	blr
-FUNC_END(vbiSend)
+FUNC_END(vbi_send)
 
 /*
  * vbiReceiveOp - Receive a message from another context
diff --git a/arch/powerpc/platforms/85xx/wrhv_8572ds.c b/arch/powerpc/platforms/85xx/wrhv_8572ds.c
index abf30a7..23773ad 100644
--- a/arch/powerpc/platforms/85xx/wrhv_8572ds.c
+++ b/arch/powerpc/platforms/85xx/wrhv_8572ds.c
@@ -83,11 +83,11 @@ static int get_bsp_clock_freq(void)
 
 	clk_msg.request = VBI_BSP_CLK_FREQ; /* read or write */
 
-	rc = vbiSend (serviceHandle, &clk_msg,
+	rc = vbi_send (serviceHandle, &clk_msg,
 		sizeof(clk_msg), &clk_reply, sizeof(clk_reply), NULL, NULL);
 
 	if (rc != 0) {
-		printk("vbiSend to the bspServer returned error code: %d\n",
+		printk("vbi_send to the bspServer returned error code: %d\n",
 			rc);
 		return 0;
 	}
diff --git a/arch/x86/kernel/vbi/syscalls.S b/arch/x86/kernel/vbi/syscalls.S
index 84783c7..5eb7700 100644
--- a/arch/x86/kernel/vbi/syscalls.S
+++ b/arch/x86/kernel/vbi/syscalls.S
@@ -32,7 +32,7 @@
 .globl vbi_io_apic_ioctl
 .globl vbi_hy_ioctl
 .globl vbi_ctx_ctl
-.globl vbiSend
+.globl vbi_send
 .globl vbiReceiveOp
 .globl vbiReply
 .globl vbiTlbFlush
@@ -60,7 +60,7 @@
 #define VBI_STACK_FRAME_SIZE	4
 
 /*
- * vbiSend - Send a message to another context
+ * vbi_send - Send a message to another context
  *
  * This routine makes a hypercall to send a message to the specified context
  * and waits for a reply.  The caller will block until the sender replies to
@@ -68,7 +68,7 @@
  *
  *
  */
-vbiSend:
+vbi_send:
 	movl $VBI_SYS_send,%eax
 	push $7
 	vmcall
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index d895d52..2b28bd0 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -99,7 +99,7 @@ extern asmlinkage int vbiVtlbOp(unsigned int op, unsigned long arg1,
  */
 
 /* Message send */
-extern asmlinkage vbiStatus_t vbiSend(vbiCtx_t id, void *smsg, size_t slen, 
+extern asmlinkage vbiStatus_t vbi_send(vbiCtx_t id, void *smsg, size_t slen, 
 			    void *rmsg, size_t rlen, VBI_MSG_INFO *info, 
 			    VBI_MSG_CTL *ctl);
 /* message receive */
-- 
1.6.5.2

