From f03747439d3510d569fc8a421d714756d0e1fb93 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 2 Dec 2009 13:31:54 -0500
Subject: [PATCH 11/43] vbi: vbiPhysAddr_t --> uint64_t

for i in `git grep -l vbiPhysAddr_t` ; do mv $i $i~ ; cat $i~|sed 's/vbiPhysAddr_t/uint64_t/' > $i ; done

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/vbi/compat.h |    1 +
 include/vbi/types.h  |    1 -
 include/vbi/vbi.h    |    4 ++--
 kernel/vbi/paddr.c   |    4 ++--
 4 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index 4bf1d0d..57bfc1c 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -50,6 +50,7 @@
 #define vbiVb_t			uint32_t
 #define vbiCore_t		int32_t
 #define vbiCtx_t		int32_t
+#define vbiPhysAddr_t		uint64_t
 
 /*
  * struct fields and similar
diff --git a/include/vbi/types.h b/include/vbi/types.h
index 9f2853d..73ddf31 100644
--- a/include/vbi/types.h
+++ b/include/vbi/types.h
@@ -34,7 +34,6 @@
 
 #ifndef _ASMLANGUAGE
 
-typedef uint64_t vbiPhysAddr_t;
 typedef void *vbiGuestPhysAddr_t;
 typedef int32_t vbiIntState_t;
 typedef int32_t vbiMemAttr_t;
diff --git a/include/vbi/vbi.h b/include/vbi/vbi.h
index e4afed2..ed8b9da 100644
--- a/include/vbi/vbi.h
+++ b/include/vbi/vbi.h
@@ -539,9 +539,9 @@ extern int32_t vbi_redir_vioapic_irq(uint32_t irq, int32_t tCore);
 extern int32_t vbi_send_vcore_vioapic_irq(uint32_t irq, vbiCoreSet_t vcoreSet, 
 					  uint32_t options);
 extern int32_t vbi_get_guest_dma_addr(vbiGuestPhysAddr_t gaddr,
-				vbiPhysAddr_t  *paddr);
+				uint64_t *paddr);
 extern int32_t vbi_guest_phys_to_phys(vbiGuestPhysAddr_t gaddr,
-				vbiPhysAddr_t  *paddr);
+				uint64_t *paddr);
 
 extern void vbi_disp_vioapic(void);
 extern void vbi_show_shmem(void);
diff --git a/kernel/vbi/paddr.c b/kernel/vbi/paddr.c
index 582bc37..ba4075d 100644
--- a/kernel/vbi/paddr.c
+++ b/kernel/vbi/paddr.c
@@ -38,7 +38,7 @@ perhaps to communicate with the hypervisor itself maybe buffer pointers.
  *
  */
 int32_t vbi_guest_phys_to_phys(vbiGuestPhysAddr_t gaddr,
-					vbiPhysAddr_t *paddr)
+					uint64_t *paddr)
 {
 	return vbi_hy_ioctl(VBI_HYIOCTL_PADDR, gaddr, paddr, (void*)VBI_HYIOCTL_PADDR_PHYS, 0 );
 }
@@ -52,7 +52,7 @@ int32_t vbi_guest_phys_to_phys(vbiGuestPhysAddr_t gaddr,
  * running with > 4GB memory so the phys address is always 64-bit.
  *
  */
-int32_t vbi_get_guest_dma_addr(vbiGuestPhysAddr_t gaddr, vbiPhysAddr_t *paddr)
+int32_t vbi_get_guest_dma_addr(vbiGuestPhysAddr_t gaddr, uint64_t *paddr)
 {
 	return vbi_hy_ioctl(VBI_HYIOCTL_PADDR, gaddr, paddr, VBI_HYIOCTL_PADDR_DMA, 0);
 }
-- 
1.6.5.2

