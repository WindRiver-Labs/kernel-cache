From 99383164f257256b37a07c3ddff0083e56470629 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 18 Nov 2009 10:07:17 -0500
Subject: [PATCH 25/80] vbiCacheTextUpdate --> vbi_update_text_cache

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/syscalls.S |    8 ++++----
 include/vbi/syscall.h              |    2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/syscalls.S b/arch/powerpc/kernel/vbi/syscalls.S
index 15d1403..16b5b00 100644
--- a/arch/powerpc/kernel/vbi/syscalls.S
+++ b/arch/powerpc/kernel/vbi/syscalls.S
@@ -42,7 +42,7 @@ FUNC_EXPORT(vbi_rx_op)
 FUNC_EXPORT(vbi_reply)
 FUNC_EXPORT(vbi_flush_icache)
 FUNC_EXPORT(vbi_flush_dcache)
-FUNC_EXPORT(vbiCacheTextUpdate)
+FUNC_EXPORT(vbi_update_text_cache)
 FUNC_EXPORT(vbiTlbFlush)
 FUNC_EXPORT(vbiPanic)
 FUNC_EXPORT(vbiPs)
@@ -557,18 +557,18 @@ FUNC_LABEL(vbiExcOffsetsGet)
 FUNC_END(vbiExcOffsetsGet)
 
 /*
- * vbiCacheTextUpdate - flush data cache then invalidate instruction cache
+ * vbi_update_text_cache - flush data cache then invalidate instruction cache
  *
  * This routine makes a hypercall to flush the data cache then invalidates the
  * instruction cache of the calling core for the specified address range.
  *
  */
-FUNC_LABEL(vbiCacheTextUpdate)
+FUNC_LABEL(vbi_update_text_cache)
 	lis r0, HI(VBI_SYS_cache_text_update)
 	ori r0, r0, LO(VBI_SYS_cache_text_update)
 	HCALL
 	blr
-FUNC_END(vbiCacheTextUpdate)
+FUNC_END(vbi_update_text_cache)
 
 /*
  * vbiVmmuConfig - configure the hypervisor virtual MMU
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 178f9f6..15b2b7e 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -134,7 +134,7 @@ extern asmlinkage vbiStatus_t  vbiMemAttrGet(void *vaddr, vbiMemAttr_t * attr);
 
 extern asmlinkage vbiStatus_t vbiIntVCoreUnlock(void);
 extern asmlinkage vbiIntState_t vbiIntVCoreLock(void);
-extern vbiStatus_t vbiCacheTextUpdate(void *saddr, size_t size);
+extern vbiStatus_t vbi_update_text_cache(void *saddr, size_t size);
 extern vbiStatus_t  vbiExcBaseSet(void * excTblBase);
 
 /* virtual board management API's */
-- 
1.6.5.2

