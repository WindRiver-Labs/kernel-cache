From 0b6c6cfbcf6123fb5b17f19427a025f4878f6414 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Thu, 5 Nov 2009 17:40:55 -0500
Subject: [PATCH 12/22] v2009.10.16: add vbiVioapicIntSend

Integrate addition from Oct16 drop

[cf: 01r,29sep09,mmi  add vbiVioapicVcoreIntSend]

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 kernel/vbi/io_apic.c |   21 +++++++++++++++++++++
 1 files changed, 21 insertions(+), 0 deletions(-)

diff --git a/kernel/vbi/io_apic.c b/kernel/vbi/io_apic.c
index 37ca33f..2269425 100644
--- a/kernel/vbi/io_apic.c
+++ b/kernel/vbi/io_apic.c
@@ -332,6 +332,27 @@ vbiStatus_t vbiVioapicIntSend(vbiIrq_t irq, uint32_t filter, vbiVb_t target)
 EXPORT_SYMBOL(vbiVioapicIntSend);
 
 /*
+ * vbiVioapicVcoreIntSend - Send an IRQ to a set of virtual cores within a VB
+ *
+ * This routine makes a hypercall to send an IRQ to a set of virtual cores
+ * specified by a 32bit bitmap value. This routine dispatches the output
+ * IRQ to the target cores.  The destination cores must be within the same
+ * VB as the core sending the interrupt.  The output irq must be mapped in
+ * the VB xml configuration xml file. The name of the output IRQ is
+ * matched with an incoming IRQ that is mapped to the VB. Setting a bit
+ * corresponding to an invalid virtual core will simply be ignored. The
+ * same IRQ is delivered for all cores for any given output IRQ. The third
+ * argument passed to this function must be defined as
+ * VBI_IOAPICSEND_VCORE_NONE.
+ *
+ */
+vbiStatus_t vbiVioapicVcoreIntSend(vbiIrq_t irq, vbiCoreSet_t coreSet,
+			uint32_t options)
+{
+	return vbiIoapicOp(VBI_IOAPICIOCTL_VCORE_SEND, irq, coreSet, options);
+}
+
+/*
  * vbiVioapicIntRedirect - Redirect an irq to another core
  *
  * This routine makes a hypercall to redirect an irq from one core to another
-- 
1.6.5.2

