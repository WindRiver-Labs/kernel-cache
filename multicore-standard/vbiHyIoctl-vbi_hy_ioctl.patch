From 91252f8c71f8e51b5c4e55c69c97cb613df6320b Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 18 Nov 2009 10:07:12 -0500
Subject: [PATCH 18/80] vbiHyIoctl --> vbi_hy_ioctl

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/syscalls.S |    8 ++++----
 arch/x86/kernel/vbi/syscalls.S     |    6 +++---
 include/vbi/syscall.h              |    2 +-
 include/vbi/syscalls.h             |    2 +-
 kernel/vbi/paddr.c                 |    4 ++--
 5 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/syscalls.S b/arch/powerpc/kernel/vbi/syscalls.S
index 40019b9..e6b3a0d 100644
--- a/arch/powerpc/kernel/vbi/syscalls.S
+++ b/arch/powerpc/kernel/vbi/syscalls.S
@@ -35,7 +35,7 @@ FUNC_EXPORT(vbi_vb_read_reg)
 FUNC_EXPORT(vbi_vb_write_reg)
 FUNC_EXPORT(vbi_io_apic_op)
 FUNC_EXPORT(vbi_io_apic_ioctl)
-FUNC_EXPORT(vbiHyIoctl)
+FUNC_EXPORT(vbi_hy_ioctl)
 FUNC_EXPORT(vbiCtxctl)
 FUNC_EXPORT(vbiSend)
 FUNC_EXPORT(vbiReceiveOp)
@@ -643,7 +643,7 @@ FUNC_END(vbiVmmuTlbFlush)
 
 /*
  *
- * vbiHyIoctl - hypervisor ioctl call
+ * vbi_hy_ioctl - hypervisor ioctl call
  *
  * This system call interfaces to the general purpose hypervisor ioctl
  * function.
@@ -656,12 +656,12 @@ FUNC_END(vbiVmmuTlbFlush)
  *     VBI_HYIOCTL_EXCBASE
  *
  */
-FUNC_LABEL(vbiHyIoctl)
+FUNC_LABEL(vbi_hy_ioctl)
 	lis r0, HI(VBI_SYS_hyIoctl)
 	ori r0, r0, LO(VBI_SYS_hyIoctl)
 	HCALL
 	blr
-FUNC_END(vbiHyIoctl)
+FUNC_END(vbi_hy_ioctl)
 
 /*
  *
diff --git a/arch/x86/kernel/vbi/syscalls.S b/arch/x86/kernel/vbi/syscalls.S
index 7a0d401..b8ce076 100644
--- a/arch/x86/kernel/vbi/syscalls.S
+++ b/arch/x86/kernel/vbi/syscalls.S
@@ -30,7 +30,7 @@
 .globl vbi_vb_read_mem
 .globl vbi_io_apic_op
 .globl vbi_io_apic_ioctl
-.globl vbiHyIoctl
+.globl vbi_hy_ioctl
 .globl vbiCtxctl
 .globl vbiSend
 .globl vbiReceiveOp
@@ -385,7 +385,7 @@ vbi_vb_resume:
         ret
 
 /*
- * vbiHyIoctl - hypervisor ioctl call
+ * vbi_hy_ioctl - hypervisor ioctl call
  *
  * This system call interfaces to the general purpose hypervisor ioctl
  * function.
@@ -399,7 +399,7 @@ vbi_vb_resume:
  * Returns: ioctl specific value
  *
  */
-vbiHyIoctl:
+vbi_hy_ioctl:
 	movl $VBI_SYS_hyIoctl,%eax
 	push $5
 	vmcall
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 088b29e..010b008 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -83,7 +83,7 @@ typedef struct vbiMemCtl
 
 /* system call prototypes for use within a context */
 
-extern asmlinkage int vbiHyIoctl(unsigned ioctl, void *arg1, void *arg2,
+extern asmlinkage int vbi_hy_ioctl(unsigned ioctl, void *arg1, void *arg2,
 				void *arg3, void *arg4);
 extern asmlinkage int vbi_io_apic_ioctl(unsigned ioctl, unsigned arg1,
 				unsigned arg2);
diff --git a/include/vbi/syscalls.h b/include/vbi/syscalls.h
index b4a47d2..fc06d20 100644
--- a/include/vbi/syscalls.h
+++ b/include/vbi/syscalls.h
@@ -186,7 +186,7 @@
 #define MDIO_INT_ENABLE 3
 #define MDIO_INT_DISABLE 4
 
-/* vbiHyIoctl for PADDR */
+/* vbi_hy_ioctl for PADDR */
 #define VBI_HYIOCTL_PADDR_DMA        0x0 /* Default used for DMA */
 #define VBI_HYIOCTL_PADDR_PHYS       0x1 /* When absolute phys addr needed */
 
diff --git a/kernel/vbi/paddr.c b/kernel/vbi/paddr.c
index 0367eb5..750ce36 100644
--- a/kernel/vbi/paddr.c
+++ b/kernel/vbi/paddr.c
@@ -40,7 +40,7 @@ perhaps to communicate with the hypervisor itself maybe buffer pointers.
 vbiStatus_t vbiGuestPhysToPhysAddr(vbiGuestPhysAddr_t gaddr,
 					vbiPhysAddr_t *paddr)
 {
-	return vbiHyIoctl(VBI_HYIOCTL_PADDR, gaddr, paddr, (void*)VBI_HYIOCTL_PADDR_PHYS, 0 );
+	return vbi_hy_ioctl(VBI_HYIOCTL_PADDR, gaddr, paddr, (void*)VBI_HYIOCTL_PADDR_PHYS, 0 );
 }
 
 /*
@@ -54,5 +54,5 @@ vbiStatus_t vbiGuestPhysToPhysAddr(vbiGuestPhysAddr_t gaddr,
  */
 vbiStatus_t vbiGuestDmaAddrGet(vbiGuestPhysAddr_t gaddr, vbiPhysAddr_t *paddr)
 {
-	return vbiHyIoctl(VBI_HYIOCTL_PADDR, gaddr, paddr, VBI_HYIOCTL_PADDR_DMA, 0);
+	return vbi_hy_ioctl(VBI_HYIOCTL_PADDR, gaddr, paddr, VBI_HYIOCTL_PADDR_DMA, 0);
 }
-- 
1.6.5.2

