From 987446ad4eef3267762fa64572cf0a569a15e5ed Mon Sep 17 00:00:00 2001
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Thu, 8 Oct 2009 21:23:29 -0400
Subject: [PATCH] Make powerpc work with new vbi 2.0.

Cutover from old to new interfaces is NOT complete, as
entries under arch/powerpc/kernel/ are still using
interfaces which are supposed to be hidden.  The plan is
to migrate off them now that the full vbi with the new
interfaces is available.

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 arch/powerpc/include/asm/pv_dma-mapping.h |    2 +-
 arch/powerpc/include/asm/wrhv.h           |    2 +-
 arch/powerpc/kernel/entry_32.S            |    3 ++
 arch/powerpc/kernel/vbi/wrhv.c            |   12 +++++----
 arch/powerpc/platforms/85xx/wrhv_8572ds.c |   37 +++++++++++++++++++++++++++-
 5 files changed, 47 insertions(+), 9 deletions(-)

diff --git a/arch/powerpc/include/asm/pv_dma-mapping.h b/arch/powerpc/include/asm/pv_dma-mapping.h
index bd148ed..2a6fc4a 100644
--- a/arch/powerpc/include/asm/pv_dma-mapping.h
+++ b/arch/powerpc/include/asm/pv_dma-mapping.h
@@ -13,7 +13,7 @@
 #define dma_alloc_coherent	paravirt_dma_alloc_coherent
 #define dma_map_single		paravirt_dma_map_single
 
-#include <vbi/vbiPaddr.h>
+#include <vbi/vbi.h>
 
 static inline void *paravirt_dma_alloc_coherent(struct device *dev, size_t size,
                                        dma_addr_t * dma_handle,
diff --git a/arch/powerpc/include/asm/wrhv.h b/arch/powerpc/include/asm/wrhv.h
index 9adb8c9..84a4881 100644
--- a/arch/powerpc/include/asm/wrhv.h
+++ b/arch/powerpc/include/asm/wrhv.h
@@ -20,7 +20,7 @@ extern void wrhv_mapping(void);
 extern void wrhv_restart(void);
 extern unsigned long __init wrhv_find_end_of_memory(void);
 extern void wrhv_power_save(void);
-extern int wrhv_vioapic_get_irq(void);
+extern unsigned int wrhv_vioapic_get_irq(void);
 extern void wrhv_init_irq(void);
 extern void __init wrhv_calibrate_decr(void);
 extern void __init wrhv_time_init(void);
diff --git a/arch/powerpc/kernel/entry_32.S b/arch/powerpc/kernel/entry_32.S
index 7dcdf97..5ea8c58 100644
--- a/arch/powerpc/kernel/entry_32.S
+++ b/arch/powerpc/kernel/entry_32.S
@@ -31,6 +31,9 @@
 #include <asm/asm-offsets.h>
 #include <asm/unistd.h>
 #include <asm/ftrace.h>
+#ifdef CONFIG_WRHV
+#include <vbi/syscalls.h>
+#endif /* CONFIG_WRHV */
 
 /*
  * MSR_KERNEL is > 0x10000 on 4xx/Book-E since it include MSR_CE.
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 9ca1250..ad9d892 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -124,6 +124,10 @@ void mpc85xx_power_down(void);
 
 extern int map_page(unsigned long, phys_addr_t, int);
 
+extern int vb_context_mmu_on(int pid,  /* context id */
+			void *pgtable,    /* level 1 page table */
+			int pagesize, int debug);
+
 unsigned long wrhv_cpu_freq = 0;
 
 void wrhv_mapping(void)
@@ -193,7 +197,7 @@ void __init wrhv_calibrate_decr(void)
 {
 	/* The timebase is updated every 8 bus clocks */
 	ppc_tb_freq = wrhv_cpu_freq / 8;
-	printk(KERN_DEBUG "WRHV-TIME: wrhv_cpu_freq=%u  ppc_tb_freq =%u\r \n",
+	printk(KERN_DEBUG "WRHV-TIME: wrhv_cpu_freq=%lu  ppc_tb_freq =%lu\n",
 			wrhv_cpu_freq, ppc_tb_freq);
 	
 }
@@ -239,9 +243,9 @@ static int __init wrhv_late_init_irq(void)
 subsys_initcall(wrhv_late_init_irq);
 #endif
 
-int wrhv_vioapic_get_irq(void)
+unsigned int wrhv_vioapic_get_irq(void)
 {
-	int irq;
+	unsigned int irq;
 
 	irq = wrhvControl->int_pend;
 
@@ -400,8 +404,6 @@ static struct clock_event_device wrhv_clockevent = {
 void wrhv_hw_timer_interrupt(struct pt_regs * regs)
 {
         struct pt_regs *old_regs;
-        struct clock_event_device *evt = &wrhv_clockevent;
-        u64 now;
 
         if (atomic_read(&ppc_n_lost_interrupts) != 0)
                 do_IRQ(regs);
diff --git a/arch/powerpc/platforms/85xx/wrhv_8572ds.c b/arch/powerpc/platforms/85xx/wrhv_8572ds.c
index e106d53..4c3d6ce 100644
--- a/arch/powerpc/platforms/85xx/wrhv_8572ds.c
+++ b/arch/powerpc/platforms/85xx/wrhv_8572ds.c
@@ -67,6 +67,36 @@ static int mpc85xx_exclude_device(struct pci_controller *hose,
 }
 #endif /* CONFIG_PCI */
 
+static int get_bsp_clock_freq(void)
+{
+	VBI_BSP_MSG		clk_msg;
+	VBI_BSP_MSG_REPLY	clk_reply;
+	VBI_NS_HANDLE		serviceHandle;
+	int32_t			rc;
+
+	rc = vbi_ns_lookup ("bspServer", 0, &serviceHandle);
+
+	if (rc != 0) {
+		printk ("bspServer lookup returned error code: %d\n", rc);
+		return 0;
+	}
+
+	clk_msg.request = VBI_BSP_CLK_FREQ; /* read or write */
+
+	rc = vbi_send (serviceHandle, &clk_msg,
+		sizeof(clk_msg), &clk_reply, sizeof(clk_reply), NULL, NULL);
+
+	if (rc != 0) {
+		printk("vbi_send to the bspServer returned error code: %d\n",
+			rc);
+		return 0;
+	}
+
+	printk("bspServer replied clock freq value 0x%x\n",
+		 clk_reply.dataVal);
+	return clk_reply.dataVal;
+}
+
 /*
  * Setup the architecture
  */
@@ -80,8 +110,7 @@ static void __init wrhv_8572ds_setup_arch(void)
 		ppc_md.progress("wrhv_8572ds_setup_arch()", 0);
 
 #ifdef CONFIG_WRHV
-#define VBI_BSPIOCTL_SYS_CLK   2
-	wrhv_cpu_freq = vbiBspIoctl(VBI_BSPIOCTL_SYS_CLK,0,0,0,0,0,0,0);
+	wrhv_cpu_freq = get_bsp_clock_freq();
 #endif
 
 #ifdef CONFIG_PCI
@@ -111,6 +140,10 @@ static void wrhv_8572ds_show_cpuinfo(struct seq_file *m)
 	seq_printf(m, "Memory\t\t: %d MB\n", memsize / (1024 * 1024));
 }
 
+extern VB_CONFIG	*wrhvConfig;
+extern VB_STATUS	*wrhvStatus;
+extern VB_CONTROL	*wrhvControl;
+
 /*
  * Called very early, device-tree isn't unflattened
  */
-- 
1.6.5.2

