From df942d986ef481ccee3c702a091c73c38c6c7c30 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 2 Dec 2009 19:50:20 -0500
Subject: [PATCH 28/43] wrhvStatus --> wr_status

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/include/asm/reg_wrhv.h       |    8 ++++----
 arch/powerpc/kernel/head_wrhv.S           |    8 ++++----
 arch/powerpc/kernel/head_wrhv.h           |    4 ++--
 arch/powerpc/kernel/vbi/util.c            |    2 +-
 arch/powerpc/kernel/vbi/wrhv.c            |   10 +++++-----
 arch/powerpc/kernel/wrhv_entry_32.S       |   18 +++++++++---------
 arch/powerpc/platforms/85xx/wrhv_8572ds.c |    2 +-
 arch/x86/kernel/vbi/wrhv.c                |    2 +-
 include/vbi/compat.h                      |    1 +
 include/vbi/interface.h                   |    2 +-
 kernel/vbi/lib.c                          |    2 +-
 11 files changed, 30 insertions(+), 29 deletions(-)

diff --git a/arch/powerpc/include/asm/reg_wrhv.h b/arch/powerpc/include/asm/reg_wrhv.h
index b3c537f..4d88f9e 100644
--- a/arch/powerpc/include/asm/reg_wrhv.h
+++ b/arch/powerpc/include/asm/reg_wrhv.h
@@ -69,8 +69,8 @@
 	lwz	tmpr1,wr_control@l(tmpr1);             \
 	li	tmpr2,0;                                \
 	stw	tmpr2,VB_CONTROL_INT_DISABLE(tmpr1);    \
-	lis	tmpr1,wrhvStatus@ha;                    \
-	lwz	tmpr1,wrhvStatus@l(tmpr1);              \
+	lis	tmpr1,wr_status@ha;                    \
+	lwz	tmpr1,wr_status@l(tmpr1);              \
 	lwz	tmpr1,VB_STATUS_INT_PENDING(tmpr1);     \
 	cmpwi	0,tmpr1,0;                              \
 	beq	1f;                                     \
@@ -116,8 +116,8 @@
 
 #define WRHV_FIX_MSR2(msr,tmpr)                         \
 	rlwinm	msr,msr,0,18,15; /* Clear EE & PR bits */       \
-	lis	tmpr,wrhvStatus@ha;                             \
-	lwz	tmpr,wrhvStatus@l(tmpr);                        \
+	lis	tmpr,wr_status@ha;                             \
+	lwz	tmpr,wr_status@l(tmpr);                        \
 	lwz	tmpr,VB_STATUS_OLD_INT_DISABLE(tmpr);           \
 	cmpwi	0,tmpr,0;                                       \
 	bne	1f;                                             \
diff --git a/arch/powerpc/kernel/head_wrhv.S b/arch/powerpc/kernel/head_wrhv.S
index 938b775..e1f3e2b 100644
--- a/arch/powerpc/kernel/head_wrhv.S
+++ b/arch/powerpc/kernel/head_wrhv.S
@@ -275,8 +275,8 @@ interrupt_base:
 	 * read-protected page.  Otherwise, get the
 	 * offending address and handle it.
 	 */
-        lis     r11,wrhvStatus@ha
-        lwz     r11,wrhvStatus@l(r11)
+        lis     r11,wr_status@ha
+        lwz     r11,wr_status@l(r11)
 	lwz	r10,VB_STATUS_ESR(r11)
 	srwi	r10,r10,16    /* get the hibit of ESR_ST */
 	andis.	r10, r10, ESR_ST@h
@@ -498,8 +498,8 @@ interrupt_base:
 	 */
 data_access:
 	NORMAL_EXCEPTION_PROLOG
-	lis	r6,wrhvStatus@ha
-	lwz	r6,wrhvStatus@l(r6)
+	lis	r6,wr_status@ha
+	lwz	r6,wr_status@l(r6)
 	lwz	r5, VB_STATUS_ESR(r6)
 	stw	r5,_ESR(r11)
 	lwz	r4, VB_STATUS_DEAR(r6)
diff --git a/arch/powerpc/kernel/head_wrhv.h b/arch/powerpc/kernel/head_wrhv.h
index 5615acd..cbb439f 100644
--- a/arch/powerpc/kernel/head_wrhv.h
+++ b/arch/powerpc/kernel/head_wrhv.h
@@ -47,8 +47,8 @@
         SAVE_4GPRS(5, r3);                                                   \
         SAVE_4GPRS(9, r3);                                                   \
         mr      r11,r3;                                                      \
-        lis     r4,wrhvStatus@ha;                                           \
-        lwz     r4,wrhvStatus@l(r4);                                        \
+        lis     r4,wr_status@ha;                                           \
+        lwz     r4,wr_status@l(r4);                                        \
         lwz     r12,VB_STATUS_LR(r4);                                        \
         stw     r12,_LINK(r11);                                              \
         lwz     r12,VB_STATUS_R3(r4);                                        \
diff --git a/arch/powerpc/kernel/vbi/util.c b/arch/powerpc/kernel/vbi/util.c
index bdc41a0..62d84cb 100644
--- a/arch/powerpc/kernel/vbi/util.c
+++ b/arch/powerpc/kernel/vbi/util.c
@@ -38,7 +38,7 @@ para-virtualize linux, therefore, may need some tweaks to be generic.
  */
 
 extern struct vb_config *wr_config;
-extern struct vb_status *wrhvStatus;
+extern struct vb_status *wr_status;
 extern struct vb_control *wr_control;
 
 /* local */
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 9b0b406..e3bce84 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -118,7 +118,7 @@
 static struct vb_config __wr_config;
 struct vb_config *wr_config;		/* TODO kernel relocation friendly ? */
 struct vb_control *wr_control;
-struct vb_status *wrhvStatus;
+struct vb_status *wr_status;
 EXPORT_SYMBOL(wr_config);
 
 void wrhv_mapping(void);
@@ -311,7 +311,7 @@ unsigned int wrhv_vioapic_get_irq(void)
 
 #ifdef CONFIG_DEBUG_VIRTUAL_IRQS
 	/* Maybe this is useless for real external interrupt */
-	wrhvStatus->int_pend = 0;
+	wr_status->int_pend = 0;
 #endif
 
 	if (irq == 0xffff)
@@ -515,8 +515,8 @@ void wrhv_vmmu_restore(void)
 	/*
 	 * called by the end of page fault handling to reinstall the vmmu
 	 */
-	wr_control->vmmu0 = wrhvStatus->vmmu0;
-	wr_control->vmmu1 = wrhvStatus->vmmu1;
+	wr_control->vmmu0 = wr_status->vmmu0;
+	wr_control->vmmu1 = wr_status->vmmu1;
 	return;
 }
 
@@ -967,7 +967,7 @@ void wrhv_init(void)
 	 */
 	wr_config = (struct vb_config *)0xF0000000;
 	wr_control = wr_config->vbControl;
-	wrhvStatus = wr_config->vbStatus;
+	wr_status = wr_config->vbStatus;
 
 	pv_info.name = "wrhv";
 	pv_info.paravirt_enabled = 1;
diff --git a/arch/powerpc/kernel/wrhv_entry_32.S b/arch/powerpc/kernel/wrhv_entry_32.S
index 8e550b5..7a00e7d 100644
--- a/arch/powerpc/kernel/wrhv_entry_32.S
+++ b/arch/powerpc/kernel/wrhv_entry_32.S
@@ -142,8 +142,8 @@ paravirt_transfer_to_handler_cont:
 	stw	r11,VB_CONTROL_CR(r9)
 	stw	r0,VB_CONTROL_R0(r9)
 
-	lis	r12,wrhvStatus@ha
-	lwz	r12,wrhvStatus@l(r12)
+	lis	r12,wr_status@ha
+	lwz	r12,wr_status@l(r12)
 
 	lwz	r11,VB_STATUS_OLD_INT_DISABLE(r12)
 	stw	r11,VB_CONTROL_NEW_INT_DISABLE(r9)
@@ -154,7 +154,7 @@ paravirt_transfer_to_handler_cont:
 */
 
 #ifdef VMMU
-        /* restore vmmu from wrhvStatus to wr_control */
+        /* restore vmmu from wr_status to wr_control */
 
 	lwz	r11,VB_STATUS_VMMU0(r12)
 	stw	r11,VB_CONTROL_VMMU0(r9)
@@ -279,8 +279,8 @@ END_FTR_SECTION_IFSET(CPU_FTR_NEED_PAIRED_STWCX)
 	lwz	r5,_NIP(r1)
 	stw	r5,VB_CONTROL_SRR0(r4)
 
-	lis	r5,wrhvStatus@ha
-	lwz	r5,wrhvStatus@l(r5)
+	lis	r5,wr_status@ha
+	lwz	r5,wr_status@l(r5)
 	lwz	r5,VB_STATUS_OLD_INT_DISABLE(r5)
 	stw	r5,VB_CONTROL_NEW_INT_DISABLE(r4)
  
@@ -426,8 +426,8 @@ paravirt_restore:
 	lwz	r10,GPR10(r1)
 	lwz	r11,GPR11(r1)
 
-	lis	r12,wrhvStatus@ha
-	lwz	r12,wrhvStatus@l(r12)
+	lis	r12,wr_status@ha
+	lwz	r12,wr_status@l(r12)
 	lwz	r5,VB_STATUS_OLD_INT_DISABLE(r12)
 	stw	r5,VB_CONTROL_NEW_INT_DISABLE(r4)
 
@@ -468,8 +468,8 @@ paravirt_restore:
 	lwz	r5,GPR4(r1)
 	stw	r5,VB_CONTROL_R4(r4)
 
-	lis	r12,wrhvStatus@ha
-	lwz	r12,wrhvStatus@l(r12)
+	lis	r12,wr_status@ha
+	lwz	r12,wr_status@l(r12)
 
 	lwz	r5,VB_STATUS_EMSR(r12)
 	stw	r5,VB_CONTROL_EMSR(r4)
diff --git a/arch/powerpc/platforms/85xx/wrhv_8572ds.c b/arch/powerpc/platforms/85xx/wrhv_8572ds.c
index b59f455..01aeb1c 100644
--- a/arch/powerpc/platforms/85xx/wrhv_8572ds.c
+++ b/arch/powerpc/platforms/85xx/wrhv_8572ds.c
@@ -37,7 +37,7 @@
 #include <asm/wrhv.h>
 
 extern struct vb_config *wr_config;
-extern struct vb_status *wrhvStatus;
+extern struct vb_status *wr_status;
 extern struct vb_control *wr_control;
 
 static void __init wrhv_85xx_pic_init(void)
diff --git a/arch/x86/kernel/vbi/wrhv.c b/arch/x86/kernel/vbi/wrhv.c
index f7a20c8..5646cbb 100644
--- a/arch/x86/kernel/vbi/wrhv.c
+++ b/arch/x86/kernel/vbi/wrhv.c
@@ -41,7 +41,7 @@
 struct vb_config __wr_config = { .pid = -1 };
 struct vb_config *_wr_config; /* Pointer passed from hypervisor */
 struct vb_config *wr_config = &__wr_config;
-struct vb_status *wrhvStatus;
+struct vb_status *wr_status;
 struct vb_control *wr_control;
 
 #ifdef CONFIG_PCI
diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index cfe4ced..2226cf6 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -67,6 +67,7 @@
 #define vbControlRegs		vb_control_regs
 #define wrhvControl		wr_control
 #define wrhvConfig		wr_config
+#define wrhvStatus		wr_status
 #define wrhvVbStatus		wr_vb_status
 #define wrhvVbControl		wr_vb_control
 #define wrhvVbConfig		wr_vb_config
diff --git a/include/vbi/interface.h b/include/vbi/interface.h
index 153d78c..fc360c0 100644
--- a/include/vbi/interface.h
+++ b/include/vbi/interface.h
@@ -49,7 +49,7 @@ flag.
 The VBI library provides a initialization function vbi_init() to ensures
 that Hypervisor version number is compatible with the VBI library in
 use. If the versions match then the configuration, status and control
-pointers are stored respectively to wr_vb_config, wrhvStatus and
+pointers are stored respectively to wr_vb_config, wr_status and
 wr_vb_control.
 
 Therefore a virtual board must always call vbi_init() before accessing
diff --git a/kernel/vbi/lib.c b/kernel/vbi/lib.c
index 16e1b69..5bfd9ef 100644
--- a/kernel/vbi/lib.c
+++ b/kernel/vbi/lib.c
@@ -89,7 +89,7 @@ first parameter when the virtual board is started running at it's boot location.
 This write protected memory area provides data to the virtual board that
 changes due to run-time activity, such as registers saved due to an
 interrupt, timestamps, virtual interrupts etc.  The address of this is
-kept in the global variable wrhvStatus.
+kept in the global variable wr_status.
 
 3) Virtual Board Control Area
 
-- 
1.6.5.2

