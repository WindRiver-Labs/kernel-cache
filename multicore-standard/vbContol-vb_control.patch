From 1d1dac463893b18a3765ddbecefd5ea40f2e5d48 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 2 Dec 2009 20:21:04 -0500
Subject: [PATCH 32/43] vbContol --> vb_control

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/wrhv.c |   10 +++++-----
 include/vbi/compat.h           |    1 +
 include/vbi/interface.h        |    2 +-
 include/vbi/syscalls.h         |    2 +-
 kernel/vbi/lib.c               |    2 +-
 kernel/vbi/show.c              |    2 +-
 6 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 4ac355d..b0e0ed8 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -184,12 +184,12 @@ void wrhv_mapping(void)
 
 	map_page((unsigned long)wr_config->vb_status,
 		 (unsigned long)wr_config->vb_status, _PAGE_RAM);
-	map_page((unsigned long)wr_config->vbControl,
-		 (unsigned long)wr_config->vbControl, _PAGE_RAM);
+	map_page((unsigned long)wr_config->vb_control,
+		 (unsigned long)wr_config->vb_control, _PAGE_RAM);
 	map_page((unsigned long)wr_config->interruptConfiguration,
 		 (unsigned long)wr_config->interruptConfiguration, _PAGE_RAM);
-	map_page((unsigned long)wr_config->vbControl->vIoapic,
-		 (unsigned long)wr_config->vbControl->vIoapic, _PAGE_RAM);
+	map_page((unsigned long)wr_config->vb_control->vIoapic,
+		 (unsigned long)wr_config->vb_control->vIoapic, _PAGE_RAM);
 
 	memcpy(&__wr_config, wr_config, sizeof(__wr_config));
 	/* map any shared memory region info */
@@ -966,7 +966,7 @@ void wrhv_init(void)
 	 * is defined in Hypervisor linux.xml
 	 */
 	wr_config = (struct vb_config *)0xF0000000;
-	wr_control = wr_config->vbControl;
+	wr_control = wr_config->vb_control;
 	wr_status = wr_config->vb_status;
 
 	pv_info.name = "wrhv";
diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index 3e9c403..2cf7bad 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -67,6 +67,7 @@
 #define vbControlRegs		vb_control_regs
 #define vbStatusRegs		vb_status_regs
 #define vbStatus		vb_status
+#define vbControl		vb_control
 
 #define wrhvControl		wr_control
 #define wrhvConfig		wr_config
diff --git a/include/vbi/interface.h b/include/vbi/interface.h
index a2cea11..02f4a96 100644
--- a/include/vbi/interface.h
+++ b/include/vbi/interface.h
@@ -491,7 +491,7 @@ struct vb_config
 	VB_ALIGN_FIELD_64 (struct vb_status *vb_status, pad1);
 
 	/* read-write control information */
-	VB_ALIGN_FIELD_64 (struct vb_control *vbControl, pad2);
+	VB_ALIGN_FIELD_64 (struct vb_control *vb_control, pad2);
 
 	/* shared memory information (memory map) */
 	VB_ALIGN_FIELD_64 (struct vb_sm_info *sharedMemoryRegionsConfigAddress, pad3);
diff --git a/include/vbi/syscalls.h b/include/vbi/syscalls.h
index 34c3b30..ce475ea 100644
--- a/include/vbi/syscalls.h
+++ b/include/vbi/syscalls.h
@@ -151,7 +151,7 @@
 #define VBI_IOAPICIOCTL_SEND	    2	/* inject a v io apic interrupt */
 #define VBI_IOAPICIOCTL_EOI	    3	/* end of interrupt acknowledge */
 #define VBI_IOAPICIOCTL_VCORE_SEND  4	/* Send an irq to a core	*/
-/* remove this after vbControl is working, we don't need a hypercall for it: */
+/* remove this after vb_control is working, we don't need a hypercall for it: */
 #define VBI_IOAPICIOCTL_MASK	 10	/* mask v io apic interrupt src */
 
 /* VBI_IOAPICIOCTL_SEND options */
diff --git a/kernel/vbi/lib.c b/kernel/vbi/lib.c
index 1e51d22..a524769 100644
--- a/kernel/vbi/lib.c
+++ b/kernel/vbi/lib.c
@@ -191,7 +191,7 @@ void vbi_init(struct vb_config *config)
 		vbi_panic("Invalid vbi version");
 
 	wr_vb_config = config;
-	wr_vb_control = wr_vb_config->vbControl;
+	wr_vb_control = wr_vb_config->vb_control;
 	wr_vb_status = wr_vb_config->vb_status;
 
 }
diff --git a/kernel/vbi/show.c b/kernel/vbi/show.c
index 1d76048..5293064 100644
--- a/kernel/vbi/show.c
+++ b/kernel/vbi/show.c
@@ -165,7 +165,7 @@ void vbi_show_cfg(void)
 	printk("Board ID:           %d\n", p->boardID);
 
 	printk("Status Address:     0x%p\n", p->vb_status);
-	printk("Control Address:    0x%p\n", p->vbControl);
+	printk("Control Address:    0x%p\n", p->vb_control);
 #if defined (_WRHV_ARCH_HAS_VB_SYSTBL)
 	printk("Syscall Table Address:    0x%lx\n",
 			p->vbSyscallTable);
-- 
1.6.5.2

