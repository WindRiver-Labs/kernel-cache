From 17ea5a0c7b47ce99e3f8103169aabc3343033b49 Mon Sep 17 00:00:00 2001
From: WRS Support <support@windriver.com>
Date: Fri, 2 Oct 2009 16:12:13 -0400
Subject: [PATCH] hypervisor: powerpc module fix

Replace vmalloc(...) with kmalloc(..., GFP_KERNEL) for PPC.

---
 kernel/module.c              |   22 +++++++++++++++++++++-

diff --git a/kernel/module.c b/kernel/module.c
index 39eca39..29c92ff 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -1892,7 +1892,12 @@ static noinline struct module *load_module(void __user *umod,
 
 	/* Suck in entire file: we'll want most of it. */
 	/* vmalloc barfs on "unusual" numbers.  Check here */
+
+#if defined(CONFIG_WRHV) && defined(CONFIG_PPC)
+	if (len > 64 * 1024 * 1024 || (hdr = kmalloc(len, GFP_KERNEL)) == NULL)
+#else
 	if (len > 64 * 1024 * 1024 || (hdr = vmalloc(len)) == NULL)
+#endif
 		return ERR_PTR(-ENOMEM);
 	if (copy_from_user(hdr, umod, len) != 0) {
 		err = -EFAULT;
@@ -2273,12 +2278,19 @@ static noinline struct module *load_module(void __user *umod,
 	 * Do it before processing of module parameters, so the module
 	 * can provide parameter accessor functions of its own.
 	 */
-	if (mod->module_init)
+	if (mod->module_init) {
 		flush_icache_range((unsigned long)mod->module_init,
 				   (unsigned long)mod->module_init
 				   + mod->init_size);
+#if defined(CONFIG_WRHV) && defined(CONFIG_PPC)
+		flush_dcache_page(virt_to_page(mod->module_init));
+#endif
+	}
 	flush_icache_range((unsigned long)mod->module_core,
 			   (unsigned long)mod->module_core + mod->core_size);
+#if defined(CONFIG_WRHV) && defined(CONFIG_PPC)
+	flush_dcache_page(virt_to_page(mod->module_core));
+#endif
 
 	set_fs(old_fs);
 
@@ -2318,7 +2330,11 @@ static noinline struct module *load_module(void __user *umod,
 					    sechdrs[unwindex].sh_size);
 
 	/* Get rid of temporary copy */
+#if defined(CONFIG_WRHV) && defined(CONFIG_PPC)
+	kfree(hdr);
+#else
 	vfree(hdr);
+#endif
 
 	trace_kernel_module_load(mod);
 
@@ -2343,7 +2359,11 @@ static noinline struct module *load_module(void __user *umod,
  free_mod:
 	kfree(args);
  free_hdr:
+#if defined(CONFIG_WRHV) && defined(CONFIG_PPC)
+	kfree(hdr);
+#else
 	vfree(hdr);
+#endif
 	return ERR_PTR(err);
 
  truncated:
-- 
1.6.5.2

