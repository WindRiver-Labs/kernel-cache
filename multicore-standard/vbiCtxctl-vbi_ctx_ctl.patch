From 30f2c538291a6b5cbd15e0da09352d76437f8930 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 18 Nov 2009 10:07:12 -0500
Subject: [PATCH 19/80] vbiCtxctl --> vbi_ctx_ctl

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/syscalls.S |    8 ++++----
 arch/x86/kernel/vbi/syscalls.S     |    6 +++---
 include/vbi/syscall.h              |    2 +-
 kernel/vbi/idle.c                  |    2 +-
 4 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/syscalls.S b/arch/powerpc/kernel/vbi/syscalls.S
index e6b3a0d..ec7f8c6 100644
--- a/arch/powerpc/kernel/vbi/syscalls.S
+++ b/arch/powerpc/kernel/vbi/syscalls.S
@@ -36,7 +36,7 @@ FUNC_EXPORT(vbi_vb_write_reg)
 FUNC_EXPORT(vbi_io_apic_op)
 FUNC_EXPORT(vbi_io_apic_ioctl)
 FUNC_EXPORT(vbi_hy_ioctl)
-FUNC_EXPORT(vbiCtxctl)
+FUNC_EXPORT(vbi_ctx_ctl)
 FUNC_EXPORT(vbiSend)
 FUNC_EXPORT(vbiReceiveOp)
 FUNC_EXPORT(vbiReply)
@@ -665,7 +665,7 @@ FUNC_END(vbi_hy_ioctl)
 
 /*
  *
- * vbiCtxctl - hypervisor context control call
+ * vbi_ctx_ctl - hypervisor context control call
  *
  * This system call interfaces to the general purpose hypervisor context
  * control function.
@@ -674,12 +674,12 @@ FUNC_END(vbi_hy_ioctl)
  *	VBI_CTXCTL_IDLE /@ Make this virtual board go idle @/
  *
  */
-FUNC_LABEL(vbiCtxctl)
+FUNC_LABEL(vbi_ctx_ctl)
 	lis r0, HI(VBI_SYS_ctxctl)
 	ori r0, r0, LO(VBI_SYS_ctxctl)
 	HCALL
 	blr
-FUNC_END(vbiCtxctl)
+FUNC_END(vbi_ctx_ctl)
 
 /*
  *
diff --git a/arch/x86/kernel/vbi/syscalls.S b/arch/x86/kernel/vbi/syscalls.S
index b8ce076..84783c7 100644
--- a/arch/x86/kernel/vbi/syscalls.S
+++ b/arch/x86/kernel/vbi/syscalls.S
@@ -31,7 +31,7 @@
 .globl vbi_io_apic_op
 .globl vbi_io_apic_ioctl
 .globl vbi_hy_ioctl
-.globl vbiCtxctl
+.globl vbi_ctx_ctl
 .globl vbiSend
 .globl vbiReceiveOp
 .globl vbiReply
@@ -451,7 +451,7 @@ vbi_io_apic_op:
 
 
 /*
- * vbiCtxctl - hypervisor context control call
+ * vbi_ctx_ctl - hypervisor context control call
  *
  * This system call interfaces to the general purpose hypervisor context
  * control function.
@@ -462,7 +462,7 @@ vbi_io_apic_op:
  * Returns: ioctl specific value
  *
  */
-vbiCtxctl:
+vbi_ctx_ctl:
 	movl $VBI_SYS_ctxctl,%eax
 	push $2
 	vmcall
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 010b008..d895d52 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -87,7 +87,7 @@ extern asmlinkage int vbi_hy_ioctl(unsigned ioctl, void *arg1, void *arg2,
 				void *arg3, void *arg4);
 extern asmlinkage int vbi_io_apic_ioctl(unsigned ioctl, unsigned arg1,
 				unsigned arg2);
-extern asmlinkage int vbiCtxctl(unsigned operation, unsigned arg1,
+extern asmlinkage int vbi_ctx_ctl(unsigned operation, unsigned arg1,
 				unsigned arg2);
 extern asmlinkage int32_t vbiVbMgmt(uint32_t cmd, uint32_t boardId,
 				int32_t *outError, uint32_t flags, void * ctl);
diff --git a/kernel/vbi/idle.c b/kernel/vbi/idle.c
index 8053b68..538fc72 100644
--- a/kernel/vbi/idle.c
+++ b/kernel/vbi/idle.c
@@ -40,5 +40,5 @@ void vbiIdle(uint64_t timeStamp)
 
 	/* use the hypervisor system call to go into the idle state */
 
-	vbiCtxctl(VBI_CTXCTL_IDLE, tick_count, 0);
+	vbi_ctx_ctl(VBI_CTXCTL_IDLE, tick_count, 0);
 }
-- 
1.6.5.2

