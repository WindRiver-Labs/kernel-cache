From 2e972ccf78d57392e32ba40d7e0dc9fc53d888e7 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 18 Nov 2009 10:07:25 -0500
Subject: [PATCH 34/80] vbiExcBaseSet --> vbi_set_exc_base

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/syscalls.S |    8 ++++----
 include/vbi/syscall.h              |    2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/syscalls.S b/arch/powerpc/kernel/vbi/syscalls.S
index e7a8728..ddeac6d 100644
--- a/arch/powerpc/kernel/vbi/syscalls.S
+++ b/arch/powerpc/kernel/vbi/syscalls.S
@@ -51,7 +51,7 @@ FUNC_EXPORT(vbi_kputc)
 FUNC_EXPORT(vbi_vcore_irq_unlock)
 FUNC_EXPORT(vbi_vcore_irq_lock)
 FUNC_EXPORT(vbi_vcore_irq_state)
-FUNC_EXPORT(vbiExcBaseSet)
+FUNC_EXPORT(vbi_set_exc_base)
 FUNC_EXPORT(vbiExcOffsetsSet)
 FUNC_EXPORT(vbiExcOffsetsGet)
 FUNC_EXPORT(vbiMemAttrSet)
@@ -472,7 +472,7 @@ FUNC_LABEL(vbi_vcore_irq_state)
 FUNC_END(vbi_vcore_irq_state)
 
 /*
- * vbiExcBaseSet - Set the exceptions vector table base for a virtual core
+ * vbi_set_exc_base - Set the exceptions vector table base for a virtual core
  *
  * This routine changes the exceptions vector table base address for the active
  * virtual core. By default the base address of the exception table is at
@@ -482,7 +482,7 @@ FUNC_END(vbi_vcore_irq_state)
  * to an incorrect table.
  *
  */
-FUNC_LABEL(vbiExcBaseSet)
+FUNC_LABEL(vbi_set_exc_base)
 	/*
 	 * r3 has the base address to set; make sure it is aligned
 	 * align to 32 bytes
@@ -504,7 +504,7 @@ baseAlignError:
 	li r3, VBI_EXCBASE_SET_ERROR
 	blr
 
-FUNC_END(vbiExcBaseSet)
+FUNC_END(vbi_set_exc_base)
 
 /*
  * vbiExcOffsetsSet - Set the exceptions vector offsetcs for a virtual core
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 02dbee6..e32228b 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -135,7 +135,7 @@ extern asmlinkage vbiStatus_t  vbiMemAttrGet(void *vaddr, vbiMemAttr_t * attr);
 extern asmlinkage vbiStatus_t vbi_vcore_irq_unlock(void);
 extern asmlinkage vbiIntState_t vbi_vcore_irq_lock(void);
 extern vbiStatus_t vbi_update_text_cache(void *saddr, size_t size);
-extern vbiStatus_t  vbiExcBaseSet(void * excTblBase);
+extern vbiStatus_t  vbi_set_exc_base(void * excTblBase);
 
 /* virtual board management API's */
 extern asmlinkage vbiStatus_t vbi_vb_suspend(vbiVb_t id, vbiCore_t core);
-- 
1.6.5.2

