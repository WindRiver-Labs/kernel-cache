From 6dbda87090834628bf5754920893335e3a219302 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Thu, 3 Dec 2009 17:11:00 -0500
Subject: [PATCH] MILS: remove dependency on compat.h

The compat.h was intended for 3rd party additions to the kernel,
and not for exporters of VBI/VDK functionality.  This removes
all usage of old names that the MILS shim was relying on getting
from <include/compat.h>

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/vbi/vdk_interface.h |   63 +++++++++++++++++++++----------------------
 1 files changed, 31 insertions(+), 32 deletions(-)

diff --git a/include/vbi/vdk_interface.h b/include/vbi/vdk_interface.h
index bf2af37..af5c03b 100644
--- a/include/vbi/vdk_interface.h
+++ b/include/vbi/vdk_interface.h
@@ -20,7 +20,6 @@
 
 #include <vbi/types.h>
 #include <vbi/arch.h>
-#include <vbi/compat.h>
 
 
 /* VB versioning information */
@@ -276,7 +275,7 @@ typedef struct vb_log_status
 /* Status information about one interrupt */
 typedef struct vbInterruptLevel
 {
-    VB_TIMESTAMP   timeStamp;    /* Time when last interrupt delivered here */
+    uint64_t       timeStamp;    /* Time when last interrupt delivered here */
     unsigned long  numInts;      /* How many interrupts since last delivered */
     unsigned long  numIntData;   /* How many data elements have been stored */
     unsigned long  intData[VB_MAX_INTERRUPT_DATA];
@@ -324,7 +323,7 @@ struct vb_status
     unsigned long reserved1; /* 1: */
 
     /* Timestamp when last interrupt was delivered */
-    VB_TIMESTAMP timeStamp;  /* 2-3:    64 bits*/
+    uint64_t timeStamp;  /* 2-3:    64 bits*/
 
     /* Interrupt registers
      *
@@ -336,7 +335,7 @@ struct vb_status
      * control->intDisable is set to -1 by WRHV at the time of delivery of
      * the interrupt
      */
-    unsigned long oldIntDisable;                /*  4: */
+    unsigned long prev_irq_disable;                /*  4: */
 
     /* VMMU tables which were active when an MMU exception occurred */
 
@@ -356,7 +355,7 @@ struct vb_status
     VB_LOG_STATUS secAuditLogStatus; /* 12-16: Security Audit Event log status */
     VB_LOG_STATUS safetyLogStatus;   /* 17-21: Safety Critical Event log status */
     TD_STATUS     tdStatus;          /* 22-25: time donation status */
-    unsigned long tickCount;    /* how many ticks VB should have received */
+    unsigned long tick_count;    /* how many ticks VB should have received */
 };
 
 /*
@@ -376,13 +375,13 @@ struct vb_status
 
 struct vb_control
 {
-    unsigned long intDisable;	/*  0: -1 => Disable all interrupts */
-    unsigned long newIntDisable;/*  1: New value for vbControl->intDisable */
+    unsigned long irq_disable;	/*  0: -1 => Disable all interrupts */
+    unsigned long next_irq_disable;/*  1: New value for vbControl->intDisable */
 
     void *        vmmu0;	/*  2: VMMU 0 table for context switch */
     void *        vmmu1;	/*  3: VMMU 1 table for context switch */
 
-    unsigned long intLevelDisable; /* TBD interrupt level enabling */
+    unsigned long level_irq_disable; /* TBD interrupt level enabling */
     unsigned long vIoapic;  /* filler */
 };
 
@@ -419,12 +418,12 @@ struct vb_config
     int           boardID;     /* partition ID from the XML configuration */
 
     unsigned int  sizeStatus;  /* effective size of vbStatus */
-    VB_STATUS *   vbStatus;    /* Read only status */
+    struct vb_status *vb_status;    /* Read only status */
     unsigned int  sizeControl; /* effective size of vbControl */
-    VB_CONTROL *  vbControl;   /* Read Write area */
+    struct vb_control *vb_control;   /* Read Write area */
     int           supervisoryMode; /* Is this board is privileged mode? */
 
-    VB_WRHV_NAME board_name;   /* The name of this board */
+    char board_name[VB_NAMELEN];   /* The name of this board */
     unsigned int  partitionType;  /* TBD field */
     unsigned int  phys_mem_size; /* The vbPhysical size of RAM */
     unsigned int  mem_alias_addr;	/* address to which memory is aliased */
@@ -433,21 +432,21 @@ struct vb_config
 
     /* The frequency of the periodic tick interrupt */
 
-    unsigned int  tickTimerFrequency; /* Ticks per second */
+    unsigned int  tick_freq; /* Ticks per second */
 
     /* The frequency of the timestamp */
 
-    unsigned int  timeStampFrequency; /* Ticks per second */
+    unsigned int  stamp_freq; /* Ticks per second */
 
     /* Interrupt configuration of this board */
 
     unsigned int  num_ints;    /* Number of interrupt configurations */
-    VB_INT_INFO * interruptConfiguration; /* Configuration location */
+    struct vb_int_info *interruptConfiguration; /* Configuration location */
 
     /* Shared memory configuration information */
 
     unsigned int  num_sm;     /* Number of shared memory regions */
-    VB_SM_INFO *  sharedMemoryRegionsConfigAddress; /* configuration info */
+    struct vb_sm_info *sharedMemoryRegionsConfigAddress; /* config info */
 
     /* Shared memory state information */
 
@@ -456,7 +455,7 @@ struct vb_config
     /* Memory map configuration for this virtual board */
 
     unsigned int  num_mem;     /* Number of memory regions */
-    VB_MEM_INFO * memoryRegionsConfigAddress; /* configuration info */
+    struct vb_mem_info *memoryRegionsConfigAddress; /* configuration info */
 
     /* IO port region for the virtual board */
     unsigned int     numIoPortRgn;     /* number of io port regions */
@@ -487,26 +486,26 @@ struct vb_config
 };
 
 /* IOAPIC and IRQ chip stubs */
-static inline vbiStatus_t vbi_send_vcore_vioapic_irq (vbiIrq_t irq,
-	vbiCoreSet_t vcoreSet, uint32_t options) {return (vbiStatus_t)NULL;};
+static inline int32_t vbi_send_vcore_vioapic_irq (uint32_t irq,
+	uint32_t vcoreSet, uint32_t options) {return (int32_t)NULL;};
 
-static inline vbiStatus_t vbi_mask_vioapic_irq(vbiIrq_t irq) \
-	{return (vbiStatus_t)NULL;};
+static inline int32_t vbi_mask_vioapic_irq(uint32_t irq) \
+	{return (int32_t)NULL;};
 
 static inline void vbi_idle(uint64_t timeStamp) {};
 
-static inline vbiStatus_t vbi_set_vioapic_vec(vbiIrq_t irq, vbiVector_t vector) \
-	{return (vbiStatus_t)NULL;};
-static inline vbiVector_t vbi_get_vioapic_vec(vbiIrq_t irq) \
-	{return (vbiVector_t)NULL;};
-static inline vbiStatus_t vbi_unmask_vioapic_irq(vbiIrq_t irq) \
-	{return (vbiStatus_t)NULL;};
-static inline vbiStatus_t vbi_ack_vioapic_irq(vbiIrq_t irq) \
-	{return (vbiStatus_t)NULL;};
-static inline vbiStatus_t vbi_send_vioapic_irq(vbiIrq_t irq, uint32_t filter, \
-                                     vbiVb_t vb) {return (vbiStatus_t)NULL;};
-static inline vbiStatus_t vbi_redir_vioapic_irq(vbiIrq_t irq, vbiCore_t tCore) \
-	{return (vbiStatus_t)NULL;};
+static inline int32_t vbi_set_vioapic_vec(uint32_t irq, int32_t vector) \
+	{return (int32_t)NULL;};
+static inline int32_t vbi_get_vioapic_vec(uint32_t irq) \
+	{return (int32_t)NULL;};
+static inline int32_t vbi_unmask_vioapic_irq(uint32_t irq) \
+	{return (int32_t)NULL;};
+static inline int32_t vbi_ack_vioapic_irq(uint32_t irq) \
+	{return (int32_t)NULL;};
+static inline int32_t vbi_send_vioapic_irq(uint32_t irq, uint32_t filter, \
+                                     uint32_t vb) {return (int32_t)NULL;};
+static inline int32_t vbi_redir_vioapic_irq(uint32_t irq, int32_t tCore) \
+	{return (int32_t)NULL;};
 
 #endif /*_ASMLANGUAGE */
 #endif  /* _VDK_INTERFACE_H */
-- 
1.6.5.2

