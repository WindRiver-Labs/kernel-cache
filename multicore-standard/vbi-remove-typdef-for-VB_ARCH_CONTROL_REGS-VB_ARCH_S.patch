From c94c1be453c9fea018ebbcb7bae4d59d63bfdf75 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Thu, 29 Oct 2009 20:10:27 -0400
Subject: [PATCH 09/26] vbi: remove typdef for VB_ARCH_CONTROL_REGS, VB_ARCH_STATUS_REGS

Remove macro like typedefs, and map as follows:

 VB_ARCH_CONTROL_REGS    struct vb_arch_ctrl_regs
 VB_ARCH_STATUS_REGS     struct vb_arch_stat_regs

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/include/asm/arch_vbi.h |   15 ++++++---------
 include/vbi/compat.h                |    3 +++
 include/vbi/interface.h             |   12 ++++++------
 include/vbi/syscall.h               |    1 -
 4 files changed, 15 insertions(+), 16 deletions(-)

diff --git a/arch/powerpc/include/asm/arch_vbi.h b/arch/powerpc/include/asm/arch_vbi.h
index 3895a56..12e0a32 100644
--- a/arch/powerpc/include/asm/arch_vbi.h
+++ b/arch/powerpc/include/asm/arch_vbi.h
@@ -160,8 +160,7 @@
 	base->vbControlRegs.field		
 
 /*
- *
- * VB_ARCH_CONTROL_REGS - Virtual core PPC control structure
+ * vb_arch_ctrl_regs - Virtual core PPC control structure
  *
  * Virtual board emulated control registers. These registers are used
  * by a guest running on hypervisor to configure the virtual CPU register.
@@ -196,9 +195,8 @@
  *
  */
 
-typedef struct vbArchControlRegs
+struct vb_arch_ctrl_regs
 {
-
 	/* Registers to be restored by the VDK_SYS_ctx_load fast system call */
 
 	uint32_t srr0;		/*  0: PC */
@@ -246,11 +244,11 @@ typedef struct vbArchControlRegs
 	/* reserved fields for future use */
 
 	uint32_t reserved[10];      /* 26: Reserved */
-} VB_ARCH_CONTROL_REGS;
+};
 
 /*
  *
- * VB_ARCH_STATUS_REGS - Virtual core PPC emulated status registers
+ * vb_arch_stat_regs - Virtual core PPC emulated status registers
  *
  * Virtual board emulated CPU status registers
  *
@@ -309,8 +307,7 @@ typedef struct vbArchControlRegs
  *       |---------------|
  *
  */
-
-typedef struct archStatusRegs
+struct vb_arch_stat_regs
 {
 
 	/*
@@ -362,7 +359,7 @@ typedef struct archStatusRegs
 
 	uint32_t reserved2[9]; /* 31 - 39 */
 
-} VB_ARCH_STATUS_REGS;
+};
 
 
 /*
diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index 89a9b32..b3b637c 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -43,4 +43,7 @@
 #define VBI_CLK_HOOK_INFO	struct vbi_clk_hook
 #define VBI_CLK_HOOK_INFO_PTR	struct vbi_clk_hook *
 
+#define VB_ARCH_CONTROL_REGS	struct vb_arch_ctrl_regs
+#define VB_ARCH_STATUS_REGS	struct vb_arch_stat_regs
+
 #endif  /* _VBI_COMPAT_H */
diff --git a/include/vbi/interface.h b/include/vbi/interface.h
index a62f817..a70315d 100644
--- a/include/vbi/interface.h
+++ b/include/vbi/interface.h
@@ -259,7 +259,7 @@ typedef uint64_t VB_TIMESTAMP;
  * The control structure definition is generic accross the various
  * architecture flavours supported by Hypervisor with the exception of
  * the emulated registers.  There is an architecture specific extention
- * available via a pointer of type VB_ARCH_STATUS_REGS to accomodate the
+ * available via a pointer of type vb_arch_stat_regs to accomodate the
  * registers unique for a given hardware platform.  However that does
  * imply that other fields defined in this structure are used in every
  * architecture. A field is considered generic if it is usefull at least
@@ -272,7 +272,7 @@ typedef uint64_t VB_TIMESTAMP;
  * as duplex communication channel between Hypervisor and a virtual
  * core. This mechanism is fall back when it is not possible to use
  * registers for transmitting data from the virtual core to Hypervisor
- * or vis-versa.  More information about VB_ARCH_CONTROL_REGS may be
+ * or vis-versa.  More information about vb_arch_ctrl_regs may be
  * found in the architecture supplement document.
  *
  *
@@ -317,7 +317,7 @@ struct vb_control
 {
 
 #ifdef  _WRHV_ARCH_HAS_CTRL_REGS	
-	VB_ARCH_CONTROL_REGS  vbControlRegs;
+	struct vb_arch_ctrl_regs vbControlRegs;
 #endif
 
 	uint32_t intDisable;		/*  0: -1 => Disable all interrupts */
@@ -351,7 +351,7 @@ struct vb_control
  * _WRHV_ARCH_HAS_STATUS_REGS flag is defined. The data type
  * VB_STATUS_ARCH_REGS holding the architecture dependent registers is
  * defined by a file pulled vbi/arch.h at compile type according to CPU
- * value.  The definition of VB_ARCH_STATUS_REGS can be found in the
+ * value.  The definition of vb_arch_stat_regs can be found in the
  * architecture supplement documentation.  The purpose of this structure
  * is to inform a virtual core at runtime the status of a core's time
  * variant data such as:
@@ -376,7 +376,7 @@ struct vb_control
  *
  *        ______________
  *       |		|	
- *       |		|<-------64bits - VB_ARCH_STATUS_REGS; arch dependent
+ *       |		|<-------64bits - vb_arch_stat_regs; arch dependent
  *       |		|		structure pointer
  *       |--------------|
  *       |		|<-------32bits - intPending; pending vector number
@@ -405,7 +405,7 @@ struct vb_control
 struct vb_status {
 
 #ifdef _WRHV_ARCH_HAS_STATUS_REGS
-	VB_ARCH_STATUS_REGS  vbStatusRegs;
+	struct vb_arch_stat_regs vbStatusRegs;
 #endif
 
 	/* Bits indicating which interrupts are pending */
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index cc79748..e7910d9 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -26,7 +26,6 @@
 
 /* Forward declaration */
 struct vmmuConfig;
-struct VB_ARCH_CONTROL_REGS; 
 
 /* information about incoming message */
 
-- 
1.6.5.2

