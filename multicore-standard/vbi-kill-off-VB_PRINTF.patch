From ec5cc925d4a1a660a758fb02072c5223bd63fa73 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Thu, 29 Oct 2009 22:23:12 -0400
Subject: [PATCH 12/26] vbi: kill off VB_PRINTF

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/show.c |   20 ++++++------
 include/vbi/interface.h        |    4 +--
 include/vbi/vbi.h              |    2 +-
 kernel/vbi/io_apic.c           |   20 ++++++------
 kernel/vbi/show.c              |   66 ++++++++++++++++++++--------------------
 5 files changed, 55 insertions(+), 57 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/show.c b/arch/powerpc/kernel/vbi/show.c
index 8ac0201..912c40e 100644
--- a/arch/powerpc/kernel/vbi/show.c
+++ b/arch/powerpc/kernel/vbi/show.c
@@ -33,35 +33,35 @@ void vbiStsRegsDisplay(void)
 #endif
 
 #if CPU == PPC85XX /* don't know how to handle cpu variant */
-    VB_PRINTF ("  srr0/srr1:          0x%08x 0x%08x\n", 
+    printk("  srr0/srr1:          0x%08x 0x%08x\n", 
 		VB_STATUS_REGS_ACCESS (p, srr0) ,
 		VB_STATUS_REGS_ACCESS (p, srr1));
 
-    VB_PRINTF ("  mcsrr0/mcsrr1:      0x%08x 0x%08x\n", 
+    printk("  mcsrr0/mcsrr1:      0x%08x 0x%08x\n", 
 		VB_STATUS_REGS_ACCESS (p, mcsrr0) ,
 		VB_STATUS_REGS_ACCESS (p, mcsrr1));
 
-    VB_PRINTF ("  mcsr/mcar:          0x%08x 0x%08x\n", 
+    printk("  mcsr/mcar:          0x%08x 0x%08x\n", 
 		VB_STATUS_REGS_ACCESS (p, mcsr) ,
 		VB_STATUS_REGS_ACCESS (p, mcar));
 
-    VB_PRINTF ("  dear/esr:           0x%08x 0x%08x\n", 
+    printk("  dear/esr:           0x%08x 0x%08x\n", 
 		VB_STATUS_REGS_ACCESS (p, dear) , 
 		VB_STATUS_REGS_ACCESS (p, esr));
 
-    VB_PRINTF ("  svr/pvr:            0x%08x 0x%08x\n", 
+    printk("  svr/pvr:            0x%08x 0x%08x\n", 
 		VB_STATUS_REGS_ACCESS (p, svr) ,
 		VB_STATUS_REGS_ACCESS (p, pvr));
 
-    VB_PRINTF ("  hid0/hid1:          0x%08x 0x%08x\n", 
+    printk("  hid0/hid1:          0x%08x 0x%08x\n", 
 		VB_STATUS_REGS_ACCESS (p, hid0) ,
 		VB_STATUS_REGS_ACCESS (p, hid1));
 
-    VB_PRINTF ("  l1csr0/l1csr1:      0x%08x 0x%08x\n", 
+    printk("  l1csr0/l1csr1:      0x%08x 0x%08x\n", 
 		VB_STATUS_REGS_ACCESS (p, l1csr0) ,
 		VB_STATUS_REGS_ACCESS (p, l1csr1));
 
-    VB_PRINTF ("  bucsr:              0x%08x\n",  
+    printk("  bucsr:              0x%08x\n",  
 		VB_STATUS_REGS_ACCESS (p, bucsr));
 #endif
 }
@@ -79,11 +79,11 @@ void vbiCtrlRegsDisplay(void)
     struct vb_control *p = VBI_CNTRL_ADDR_GET();
 
 #if CPU == PPC85XX /* don't know how to handler cpu variant */
-    VB_PRINTF ("  srr0/srr1:           0x%08x 0x%08x\n", 
+    printk("  srr0/srr1:           0x%08x 0x%08x\n", 
 		VB_CONTROL_REGS_ACCESS (p, srr0),  
 		VB_CONTROL_REGS_ACCESS (p, srr1));
 
-    VB_PRINTF ("  cr/r0:               0x%08x 0x%08x\n", 
+    printk("  cr/r0:               0x%08x 0x%08x\n", 
 		VB_CONTROL_REGS_ACCESS (p, cr), 
 		VB_CONTROL_REGS_ACCESS (p, r0));
 #endif
diff --git a/include/vbi/interface.h b/include/vbi/interface.h
index ede1d68..fa5462d 100644
--- a/include/vbi/interface.h
+++ b/include/vbi/interface.h
@@ -109,11 +109,9 @@ identity mapped.
 #endif
 #endif
 
-#define VB_PRINTF(fmt, args...)    printk(fmt, ##args)
-
 #undef VB_DEBUG  /* define it to turn on debugging */
 #ifdef VB_DEBUG
-#define VB_DEBUG_MSG(fmt, args...)    VB_PRINTF(fmt, ##args)
+#define VB_DEBUG_MSG(fmt, args...)    printk(fmt, ##args)
 #else
 #define VB_DEBUG_MSG(fmt, args...)
 #endif
diff --git a/include/vbi/vbi.h b/include/vbi/vbi.h
index 0284233..2f774b1 100644
--- a/include/vbi/vbi.h
+++ b/include/vbi/vbi.h
@@ -498,7 +498,7 @@ various data structures.
 
 #define VBI_PANIC(vector, halt)					\
 {								\
-	VB_PRINTF("core%d: unhandled exception: 0x%x\n",	\
+	printk("core%d: unhandled exception: 0x%x\n",		\
 		wrhvVbConfig->coreId, vector);			\
 	if (halt)						\
         	vbiPanic("unhandled exception");		\
diff --git a/kernel/vbi/io_apic.c b/kernel/vbi/io_apic.c
index 280b8b6..477bb56 100644
--- a/kernel/vbi/io_apic.c
+++ b/kernel/vbi/io_apic.c
@@ -380,18 +380,18 @@ void vbiVioapicDisplay(void)
 
 	/* get the general virtual I/O APIC info */
 
-	VB_PRINTF("Virtual I/O APIC:\n");
-	VB_PRINTF("  Base address: 0x%p\n", pVioapic);
-	VB_PRINTF("  id:          %d\n", pVioapic->id.field.IOAPIC_id);
-	VB_PRINTF("  version:     %d\n", pVioapic->version.field.version);
-	VB_PRINTF("  max entries: %d\n", pVioapic->version.field.maxRedirEntry);
+	printk("Virtual I/O APIC:\n");
+	printk("  Base address: 0x%p\n", pVioapic);
+	printk("  id:          %d\n", pVioapic->id.field.IOAPIC_id);
+	printk("  version:     %d\n", pVioapic->version.field.version);
+	printk("  max entries: %d\n", pVioapic->version.field.maxRedirEntry);
 
 	/* dump the virtual I/O APIC table */
 
-	VB_PRINTF("\nRedirection Table:\n");
-	VB_PRINTF("Entry Vector Mask Status Trig"
+	printk("\nRedirection Table:\n");
+	printk("Entry Vector Mask Status Trig"
 		"  Pol IRR DeliverMode Destination\n");
-	VB_PRINTF(
+	printk(
 	"----- ------ ---- ------ ----- --- --- ----------- -----------\n");
 
 	for (i=0; i < VIOAPIC_MAX_REDTABLE_ENTRIES; i++) {
@@ -399,7 +399,7 @@ void vbiVioapicDisplay(void)
 	regIoApicRedirLow  = pVioapic->entry[i].vioapicLow;
 	regIoApicRedirHigh = pVioapic->entry[i].vioapicHigh;
 
-	VB_PRINTF(" %3.3d   %3.3d   %4s %6s %5s %3s  %1d     %6s   %6s %d\n",
+	printk(" %3.3d   %3.3d   %4s %6s %5s %3s  %1d     %6s   %6s %d\n",
 			i,
 			regIoApicRedirLow.field.vector,
 			regIoApicRedirLow.field.mask ? "MASK" : "none",
@@ -411,5 +411,5 @@ void vbiVioapicDisplay(void)
 			regIoApicRedirLow.field.destMode ? "Set: " : "ID: ",
 			regIoApicRedirHigh.field.destination);
 	}
-	VB_PRINTF ("\n");
+	printk("\n");
 }
diff --git a/kernel/vbi/show.c b/kernel/vbi/show.c
index 4a08562..05be456 100644
--- a/kernel/vbi/show.c
+++ b/kernel/vbi/show.c
@@ -42,16 +42,16 @@ void vbiSharedMemoryShow(struct vb_config *config)
 	void *pState = config->sharedMemoryRegionsStateAddress;
 	int i;
 
-	VB_PRINTF("%d Shared memory regions, Config at 0x%x:\n", numSm, p);
+	printk("%d Shared memory regions, Config at 0x%x:\n", numSm, p);
 
 	/* dump shared memory info if we have any attached */
 	for (i=0; i < numSm; i++,p++) {
-		VB_PRINTF("%8s: 0x%08x -> 0x%08x  (attr: 0x%x)\n",
+		printk("%8s: 0x%08x -> 0x%08x  (attr: 0x%x)\n",
 		p->name, p->addr,
 		((unsigned int)p->addr + p->length) - 1, p->attr);
 	}
 
-	VB_PRINTF("Shared memory State at 0x%x:\n", pState);
+	printk("Shared memory State at 0x%x:\n", pState);
 }
 
 /*
@@ -70,11 +70,11 @@ void vbiMemoryShow(struct vb_config *config)
 	int numSm = config->numMem;
 	int i;
 
-	VB_PRINTF("%d memory regions, Config at 0x%x:\n", numSm, p);
+	printk("%d memory regions, Config at 0x%x:\n", numSm, p);
 
 	/* dump shared memory info if we have any attached */
 	for (i=0; i < numSm; i++,p++) {
-		VB_PRINTF("%8s: 0x%08x -> 0x%08x  (attr: 0x%x) (type: %s)\n",
+		printk("%8s: 0x%08x -> 0x%08x  (attr: 0x%x) (type: %s)\n",
 			p->name, p->addr,
 			((unsigned int)p->addr + p->length) - 1,
 			p->attr, p->type);
@@ -95,14 +95,14 @@ static void vbiInterruptsShow(struct vb_config *config)
 	int numInt = config->numInts;
 	int i;
 
-	VB_PRINTF("%d interrupt configurations, Config at 0x%x\n", numInt, p);
+	printk("%d interrupt configurations, Config at 0x%x\n", numInt, p);
 
 	for (i = 0; i < numInt; i++, p++) {
 		if (p->intDirection == VB_INPUT_INT)
-			VB_PRINTF("%8s: Dir: In, Vector #: %d, Core: %d\n",
+			printk("%8s: Dir: In, Vector #: %d, Core: %d\n",
 		            p->intName, p->intNumber, p->intCore);
 		else
-			VB_PRINTF("%8s: Dir: Out, Vector #: %d\n",
+			printk("%8s: Dir: Out, Vector #: %d\n",
 		            p->intName, p->intNumber);
 	}
 }
@@ -115,11 +115,11 @@ static void vbiInterruptsShow(struct vb_config *config)
  */
 void vbiStatusShow(struct vb_status *p)
 {
-	VB_PRINTF("VB status: 0x%x\n", p);
+	printk("VB status: 0x%x\n", p);
 
-	VB_PRINTF("  Pending interrupts: 0x%08x\n", p->intPendingType);
-	VB_PRINTF("  timestamp:          %lld\n", p->timeStamp);
-	VB_PRINTF("  old int disable:    0x%08x\n", p->oldIntDisable);
+	printk("  Pending interrupts: 0x%08x\n", p->intPendingType);
+	printk("  timestamp:          %lld\n", p->timeStamp);
+	printk("  old int disable:    0x%08x\n", p->oldIntDisable);
 #ifdef _WRHV_ARCH_HAS_STATUS_REGS
 	vbiStsRegsDisplay();
 #endif
@@ -135,20 +135,20 @@ void vbiControlShow(struct vb_control *p)
 {
 	int i;
 
-	VB_PRINTF("VB control data: 0x%x\n", p);
+	printk("VB control data: 0x%x\n", p);
 
-	VB_PRINTF("  Disable interrupts:  0x%08x\n", p->intDisable);
+	printk("  Disable interrupts:  0x%08x\n", p->intDisable);
 
 #ifdef _WRHV_ARCH_HAS_STATUS_REGS
 	vbiCtrlRegsDisplay();
 #endif
 
-	VB_PRINTF("  Disabled interrupts:");
+	printk("  Disabled interrupts:");
 	for (i=0; i < VB_MAX_INTERRUPTS; i++) {
 		if ((p->intLevelDisable & (1 << (32 - i))) != 0)
-			VB_PRINTF(" %d", i);
+			printk(" %d", i);
 	}
-	VB_PRINTF("\n");
+	printk("\n");
 }
 
 /*
@@ -160,30 +160,30 @@ void vbiControlShow(struct vb_control *p)
 
 void vbiConfigShow(struct vb_config *p)
 {
-	VB_PRINTF("VB config data: 0x%x\n", p);
+	printk("VB config data: 0x%x\n", p);
 
-	VB_PRINTF("pid:                %d\n", p->pid);
-	VB_PRINTF("Board ID:           %d\n", p->boardID);
+	printk("pid:                %d\n", p->pid);
+	printk("Board ID:           %d\n", p->boardID);
 
-	VB_PRINTF("Status Address:     0x%lx\n", p->vbStatus);
-	VB_PRINTF("Control Address:    0x%lx\n", p->vbControl);
+	printk("Status Address:     0x%lx\n", p->vbStatus);
+	printk("Control Address:    0x%lx\n", p->vbControl);
 #if defined (_WRHV_ARCH_HAS_VB_SYSTBL)
-	VB_PRINTF("Syscall Table Address:    0x%lx\n",
+	printk("Syscall Table Address:    0x%lx\n",
 			p->vbSyscallTable);
 #endif
-	VB_PRINTF("SupervisoryMode:    %d\n", p->supervisoryMode);
+	printk("SupervisoryMode:    %d\n", p->supervisoryMode);
 
-	VB_PRINTF("Board Name:         %s\n", p->boardName);
-	VB_PRINTF("Board Type:         %d\n", p->boardType);
-	VB_PRINTF("Physical Memory:    %d\n", p->physicalMemorySize);
-	VB_PRINTF("Memory Alias Addr:  0x%08x\n", p->memoryAliasAddress);
-	VB_PRINTF("Memory Alias Size:  %u\n", p->memoryAliasSize);
-	VB_PRINTF("Reset PC:           0x%08x\n", p->resetPC);
+	printk("Board Name:         %s\n", p->boardName);
+	printk("Board Type:         %d\n", p->boardType);
+	printk("Physical Memory:    %d\n", p->physicalMemorySize);
+	printk("Memory Alias Addr:  0x%08x\n", p->memoryAliasAddress);
+	printk("Memory Alias Size:  %u\n", p->memoryAliasSize);
+	printk("Reset PC:           0x%08x\n", p->resetPC);
 
-	VB_PRINTF("Timer Frequency:     %d/sec\n", p->tickTimerFrequency);
-	VB_PRINTF("TimeStamp Frequency: %dULL/sec\n", p->timeStampFrequency);
+	printk("Timer Frequency:     %d/sec\n", p->tickTimerFrequency);
+	printk("TimeStamp Frequency: %dULL/sec\n", p->timeStampFrequency);
 
-	VB_PRINTF("numInts:             %d\n", p->numInts);
+	printk("numInts:             %d\n", p->numInts);
 
 	vbiMemoryShow(p);
 	vbiSharedMemoryShow(p);
-- 
1.6.5.2

