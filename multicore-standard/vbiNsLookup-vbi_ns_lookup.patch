From 67b030654f5c7344b770022729fe7b042177b4fe Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 18 Nov 2009 12:35:04 -0500
Subject: [PATCH 62/80] vbiNsLookup --> vbi_ns_lookup

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/platforms/85xx/wrhv_8572ds.c |    2 +-
 include/vbi/syscall.h                     |    2 +-
 kernel/vbi/ns.c                           |    4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/wrhv_8572ds.c b/arch/powerpc/platforms/85xx/wrhv_8572ds.c
index fb95008..ea43d4e 100644
--- a/arch/powerpc/platforms/85xx/wrhv_8572ds.c
+++ b/arch/powerpc/platforms/85xx/wrhv_8572ds.c
@@ -74,7 +74,7 @@ static int get_bsp_clock_freq(void)
 	VBI_NS_HANDLE		serviceHandle;
 	int32_t			rc;
 
-	rc = vbiNsLookup ("bspServer", 0, &serviceHandle);
+	rc = vbi_ns_lookup ("bspServer", 0, &serviceHandle);
 
 	if (rc != 0) {
 		printk ("bspServer lookup returned error code: %d\n", rc);
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 85cfcdb..836e038 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -119,7 +119,7 @@ extern vbiStatus_t vbi_enable_vmmu(uint32_t  vmmu_num);
 extern vbiStatus_t vbi_disable_vmmu(uint32_t vmmu_num);
 extern vbiStatus_t vbiNsRegister(char  *name, uint32_t  revision);
 extern vbiStatus_t vbiNsUnRegister(char *name, uint32_t  revision);
-extern vbiStatus_t vbiNsLookup(char *name, uint32_t  rev, VBI_NS_HANDLE *pHandle);
+extern vbiStatus_t vbi_ns_lookup(char *name, uint32_t  rev, VBI_NS_HANDLE *pHandle);
 extern vbiStatus_t vbi_tlb_flush_vmmu(struct vmmuConfig * config, void *addr, size_t len);
 
 
diff --git a/kernel/vbi/ns.c b/kernel/vbi/ns.c
index 43bdc6b..49281bf 100644
--- a/kernel/vbi/ns.c
+++ b/kernel/vbi/ns.c
@@ -68,14 +68,14 @@ vbiStatus_t vbiNsUnregister(char *name, uint32_t revision)
 }
 
 /*
- * vbiNsLookup - look up a service provider using the naming system
+ * vbi_ns_lookup - look up a service provider using the naming system
  *
  * This routine uses the naming system to look up the context id of the
  * provider of the specified service.  A message for the request is
  * formulated and sent off to the name service manager for processing.
  *
  */
-vbiStatus_t vbiNsLookup(char *name, uint32_t revision, VBI_NS_HANDLE *handle)
+vbiStatus_t vbi_ns_lookup(char *name, uint32_t revision, VBI_NS_HANDLE *handle)
 {
 	if (name == NULL || handle == NULL)
 		return -1;
-- 
1.6.5.2

