From 319b72db2f640c15c76a1f48d416838f50e08a98 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Wed, 28 Oct 2009 15:42:56 +0800
Subject: [PATCH] Enable MAC address configuration in kernel commandline

Add wrhv_macaddr and wrhv_pci_devfn into kernel commandline so
that Ethernet MAC address and PHY ID can be setup in kernel
commandline.

For wrhv_pci_devfn, the following number can be set:
0 - Ethernet 0
1 - Ethernet 1
2 - Ethernet 2
3 - Ethernet 3

However, just one of four Ethernet can be used and the device name
is always "eth0".

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/powerpc/kernel/vbi/wrhv.c |   31 +++++++++++++++++++++++++++++++
 drivers/net/gianfar.c          |   22 ++++++++++++++++++++++
 2 files changed, 53 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 8c45ad8..3abab97 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -136,6 +136,37 @@ extern struct hwtimer powerpc_timer;
 
 unsigned long wrhv_cpu_freq = 0;
 
+int wrhv_pci_devfn = -1;
+char wrhv_macaddr[6];
+
+static int __init wrhv_pci_devfn_setup(char *s)
+{
+	wrhv_pci_devfn = simple_strtoul(s, NULL, 0);
+	return 1;
+}
+
+__setup("wrhv_pci_devfn=", wrhv_pci_devfn_setup);
+
+static int __init wrhv_macaddr_setup(char *str)
+{
+	int i;
+
+	for (i = 0; i < 6; i++) {
+		int ret, oct;
+
+		ret = get_option(&str, &oct);
+		if (!ret)
+			break;
+
+		wrhv_macaddr[i] = oct;
+		if (ret != 2)
+			break;
+	}
+	return 1;
+}
+
+__setup("wrhv_macaddr=", wrhv_macaddr_setup);
+
 void wrhv_mapping(void)
 {
 	/* map in vbConfig address */
diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index c9e6a5d..d7419e9 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -142,6 +142,11 @@ static void gfar_set_mac_for_addr(struct net_device *dev, int num, u8 *addr);
 
 extern const struct ethtool_ops gfar_ethtool_ops;
 
+#ifdef CONFIG_WRHV
+extern int wrhv_pci_devfn;
+extern char wrhv_macaddr[MAC_ADDR_LEN];
+#endif
+
 MODULE_AUTHOR("Freescale Semiconductor, Inc");
 MODULE_DESCRIPTION("Gianfar Ethernet Driver");
 MODULE_LICENSE("GPL");
@@ -173,6 +178,18 @@ static int gfar_probe(struct platform_device *pdev)
 		return -ENODEV;
 	}
 
+#ifdef CONFIG_WRHV
+	/* Get phy ID from commandline wrhv_pci_devfn.
+	 * wrhv_pci_devfn can be set to the following number:
+	 * 0 - Ethernet 0
+	 * 1 - Ethernet 1
+	 * 2 - Ethernet 2
+	 * 3 - Ethernet 3
+	 */
+	if (einfo->phy_id != wrhv_pci_devfn)
+		return -ENODEV;
+#endif
+
 	/* Create an ethernet device instance */
 	dev = alloc_etherdev(sizeof (*priv));
 
@@ -243,7 +260,12 @@ static int gfar_probe(struct platform_device *pdev)
 	gfar_write(&priv->regs->ecntrl, ECNTRL_INIT_SETTINGS);
 
 	/* Copy the station address into the dev structure, */
+#ifndef CONFIG_WRHV
 	memcpy(dev->dev_addr, einfo->mac_addr, MAC_ADDR_LEN);
+#else
+	/* Get MAC address from commandline wrhv_macaddr */
+	memcpy(dev->dev_addr, wrhv_macaddr, MAC_ADDR_LEN);
+#endif
 
 	/* Set the dev->base_addr to the gfar reg region */
 	dev->base_addr = (unsigned long) (priv->regs);
-- 
1.6.5.2

