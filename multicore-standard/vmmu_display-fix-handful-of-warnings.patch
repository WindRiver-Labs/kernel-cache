From 9ab8ff9118e935237ca7decffcbb2ea205b5b23a Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Fri, 30 Oct 2009 14:30:35 -0400
Subject: [PATCH 10/26] vmmu_display: fix handful of warnings

 vmmu_display.c: In function 'vmmuPageTableDisplay':
 vmmu_display.c:53: warning: assignment makes pointer from integer
	without a cast
 vmmu_display.c:64: warning: format '%08x' expects type 'unsigned int',
	but argument 2 has type 'void *'
 vmmu_display.c: In function 'vmmuPteDisplay':
 vmmu_display.c:111: warning: assignment makes pointer from integer
	 without a cast
 vmmu_display.c:113: warning: assignment discards qualifiers from
	pointer target type
 vmmu_display.c:118: warning: format '%08x' expects type 'unsigned int',
	but argument 2 has type 'void *'

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/vmmu_display.c |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/vmmu_display.c b/arch/powerpc/kernel/vbi/vmmu_display.c
index 43fb058..d1fc41a 100644
--- a/arch/powerpc/kernel/vbi/vmmu_display.c
+++ b/arch/powerpc/kernel/vbi/vmmu_display.c
@@ -50,7 +50,7 @@ void vmmuPageTableDisplay(VMMU_LEVEL_1_DESC *l1, int vmmuon)
 			ea.field.l1index = l1_index;
 			l2 = (VMMU_LEVEL_2_DESC *)VMMU_LBA_TO_ADDR(l1->field.l2ba);
 			if (vmmuon)
-				l2 = __va (l2);
+				l2 = (VMMU_LEVEL_2_DESC *)__va(l2);
 
 			pte = (VMMU_PTE *)l2;
 
@@ -58,7 +58,7 @@ void vmmuPageTableDisplay(VMMU_LEVEL_1_DESC *l1, int vmmuon)
 				if (pte->field.v) {
 					ea.field.l2index = j;
 					printk ("%08x-%08x %08x-%08x %d %d ",
-					ea.addr, (u_int)ea.addr + 0xfff,
+					(u_int)ea.addr, (u_int)ea.addr + 0xfff,
 					pte->field.rpn << VMMU_RPN_SHIFT,
 					(pte->field.rpn << VMMU_RPN_SHIFT) + 0xfff,
 					pte->field.r, pte->field.c);
@@ -94,7 +94,7 @@ void vmmuPageTableDisplay(VMMU_LEVEL_1_DESC *l1, int vmmuon)
  */
 unsigned int vmmuPteDisplay(VMMU_LEVEL_1_DESC *l1, void *vaddr)
 {
-	volatile VMMU_LEVEL_2_DESC  *l2;
+	VMMU_LEVEL_2_DESC  *l2;
 	VMMU_PTE *pte;
 
 	/* find the level-1 page table descriptor for the virtual address */
@@ -108,14 +108,14 @@ unsigned int vmmuPteDisplay(VMMU_LEVEL_1_DESC *l1, void *vaddr)
 	l2  = (VMMU_LEVEL_2_DESC *)VMMU_LBA_TO_ADDR(l1->field.l2ba) +
 		VMMU_L2_INDEX(vaddr);
 
-	l2 = __va (l2);
+	l2 = (VMMU_LEVEL_2_DESC *)__va(l2);
 
 	pte = &l2->pte;
 
 	if (!pte->field.v)
 		return  -1;
 
-	printk("PTE for virtual address 0x%08x:\n", vaddr);
+	printk("PTE for virtual address 0x%p:\n", vaddr);
 	printk("  Page Number:  0x%08x\n", pte->field.rpn<<VMMU_RPN_SHIFT);
 	printk("  Referenced:   %d\n", pte->field.r);
 	printk("  Changed:      %d\n", pte->field.c);
-- 
1.6.5.2

