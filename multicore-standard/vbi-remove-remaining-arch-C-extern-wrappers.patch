From 0e41f20f0469da421be46410a11142f7adaf6ad5 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Tue, 20 Oct 2009 17:37:38 -0400
Subject: [PATCH 2/8] vbi: remove remaining arch C++ extern wrappers

The kernel dabbled in C++ once back about 15 years ago; it
isn't ever going to happen again.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/include/asm/arch_vbi.h    |    7 -------
 arch/powerpc/include/asm/ppc85xx_vbi.h |   10 ----------
 arch/powerpc/include/asm/reg_vbi.h     |    8 --------
 arch/powerpc/include/asm/vbi.h         |    8 --------
 include/asm-x86/arch_vbi.h             |    8 +-------
 include/asm-x86/reg_vbi.h              |    9 ---------
 include/asm-x86/sys_vbi.h              |    8 --------
 include/asm-x86/vbi.h                  |    9 ---------
 8 files changed, 1 insertions(+), 66 deletions(-)

diff --git a/arch/powerpc/include/asm/arch_vbi.h b/arch/powerpc/include/asm/arch_vbi.h
index 529d1f3..aa4e82f 100644
--- a/arch/powerpc/include/asm/arch_vbi.h
+++ b/arch/powerpc/include/asm/arch_vbi.h
@@ -16,10 +16,6 @@
 #ifndef __INCvbiPpcArchh
 #define __INCvbiPpcArchh
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 /* PPC uses big endian byte ordering */
 
 #define __VBI_BYTE_ORDER __VBI_BIG_ENDIAN
@@ -914,7 +910,4 @@ endIntVcoreLock:
 
 #endif /*_ASMLANGUAGE */
     
-#ifdef __cplusplus
-}
-#endif /* __cplusplus */
 #endif /* __INCvbiPpcArchh */
diff --git a/arch/powerpc/include/asm/ppc85xx_vbi.h b/arch/powerpc/include/asm/ppc85xx_vbi.h
index 3213fe9..172f890 100644
--- a/arch/powerpc/include/asm/ppc85xx_vbi.h
+++ b/arch/powerpc/include/asm/ppc85xx_vbi.h
@@ -21,10 +21,6 @@
 #include <sys/ppc/ppcE500mc.h>
 #endif
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 #if (CPU==PPC85XX)
 #define PPC_e500v2
 #endif
@@ -632,10 +628,4 @@ typedef union e200_l1cfg0
                           _DBSR_DAC1R | _DBSR_DAC1W | \
                           _DBSR_DAC2R | _DBSR_DAC2W )
 
-
-
-#ifdef __cplusplus
-}
-#endif
-
 #endif /* __INCppc85xxh */
diff --git a/arch/powerpc/include/asm/reg_vbi.h b/arch/powerpc/include/asm/reg_vbi.h
index 9afd54d..7d2b156 100644
--- a/arch/powerpc/include/asm/reg_vbi.h
+++ b/arch/powerpc/include/asm/reg_vbi.h
@@ -17,10 +17,6 @@
 #ifndef __INCppcRegsh
 #define __INCppcRegsh
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 #define GREG_NUM	32	/* has 32 32/64-bit data registers */
 #define	_PPC_HREG_SIZE	4	/* only support 32-bit registers */
 
@@ -59,8 +55,4 @@ extern "C" {
 # include <sys/ppc/ppc85xx.h>
 #endif
 
-#ifdef __cplusplus
-}
-#endif
-
 #endif /* __INCppcRegsh */
diff --git a/arch/powerpc/include/asm/vbi.h b/arch/powerpc/include/asm/vbi.h
index 17c5b6c..8f3ee2e 100644
--- a/arch/powerpc/include/asm/vbi.h
+++ b/arch/powerpc/include/asm/vbi.h
@@ -17,10 +17,6 @@
 #ifndef __INCsysPpcAsmh
 #define __INCsysPpcAsmh
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 #if	!defined(_DIAB_TOOL) && !defined(_GNU_TOOL)
 #define	_GNU_TOOL
 #endif
@@ -524,8 +520,4 @@ extern	int	_ppcAllocationQuantumSize;
 
 #endif	/* _ASMLANGUAGE */
 
-#ifdef __cplusplus
-}
-#endif
-
 #endif /* __INCsysPpcAsmh */
diff --git a/include/asm-x86/arch_vbi.h b/include/asm-x86/arch_vbi.h
index e8c04fa..f872a46 100644
--- a/include/asm-x86/arch_vbi.h
+++ b/include/asm-x86/arch_vbi.h
@@ -17,10 +17,6 @@
 #ifndef __INCvbiX86Archh
 #define __INCvbiX86Archh
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 #ifndef _ASMLANGUAGE
 
 /*******************************************************************************
@@ -186,7 +182,5 @@ typedef struct			/* VBI_REG_SET - used for sys_regsRead/Write */
 
 #define VBI_CLOCK_TIMER_VECTOR		(0)
 #define VBI_IN_APIC_TIMER		(VBI_IN_EXT_IRQ0)    
-#ifdef __cplusplus
-}
-#endif
+
 #endif /* __INCVbiX86Archh */
diff --git a/include/asm-x86/reg_vbi.h b/include/asm-x86/reg_vbi.h
index 3e11bd3..968053c 100644
--- a/include/asm-x86/reg_vbi.h
+++ b/include/asm-x86/reg_vbi.h
@@ -22,10 +22,6 @@
 #include <sys/types.h>
 #endif /* CONFIG_WRHV */
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 #define IO_BMAP_SIZE	32	/* IO bitmap for port 0x000 - 0x3ff */
 
 #ifndef	_ASMLANGUAGE
@@ -1924,9 +1920,4 @@ extern void	x86GetCpuid (uint32_t operation,
     WRS_ASM ("testl $0x00000200, %0 ; jz 0f ; sti ; 0:" \
     : /* no output */ : "rm" (oldLevel) : "memory")
 
-
-#ifdef __cplusplus
-}
-#endif
-
 #endif	/* __INCx86regsh */
diff --git a/include/asm-x86/sys_vbi.h b/include/asm-x86/sys_vbi.h
index c90757b..9ff0c08 100644
--- a/include/asm-x86/sys_vbi.h
+++ b/include/asm-x86/sys_vbi.h
@@ -21,10 +21,6 @@
 #include <sys/x86/vmx.h>
 #include <interface.h>
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 #ifdef LP64
 #define _WRS_PORTABLE_bLib
 #define _WRS_BLIB_ALIGNMENT     1       /* 2 byte alignment mask */
@@ -705,8 +701,4 @@ CPU_PRIVATE extern ctx_t excMgrId;	/* exception mananger */
 
 #define cpuCoreIpiDoneNum(x) (IN_IPI_DONE_CORE0 + cpuId)
 
-#ifdef __cplusplus
-}
-#endif
-
 #endif /* __INCx86Archh */
diff --git a/include/asm-x86/vbi.h b/include/asm-x86/vbi.h
index 7a5f0b8..7d9ef0f 100644
--- a/include/asm-x86/vbi.h
+++ b/include/asm-x86/vbi.h
@@ -54,11 +54,6 @@
 #define GDATA(sym) FUNC(sym)
 #endif
 
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 #ifdef LP64
 /* x86-64 ABI */
 #define INTARG1_64 %rdi
@@ -139,8 +134,4 @@ extern "C" {
 
 #define _WRS_ASM(x) __asm volatile (x)
 
-#ifdef __cplusplus
-}
-#endif
-
 #endif /* __INCsysX86Asmh */
-- 
1.6.5.rc3

