From 9674c57ba2d0e6dab84b3379cdf30cc6afe29fe7 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 2 Dec 2009 12:54:55 -0500
Subject: [PATCH 09/43] vbi: vbiCore_t --> int32_t

for i in `git grep -l vbiCore_t` ; do mv $i $i~ ; cat $i~|sed 's/vbiCore_t/int32_t/' > $i ; done

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/vbi/compat.h  |    1 +
 include/vbi/private.h |    2 +-
 include/vbi/syscall.h |   12 ++++++------
 include/vbi/types.h   |    1 -
 include/vbi/vbi.h     |    2 +-
 kernel/vbi/io_apic.c  |    2 +-
 6 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index bde88e1..77e68d7 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -48,6 +48,7 @@
 #define vbiStatus_t		int32_t
 #define vbiIrq_t		uint32_t
 #define vbiVb_t			uint32_t
+#define vbiCore_t		int32_t
 
 /*
  * struct fields and similar
diff --git a/include/vbi/private.h b/include/vbi/private.h
index 76a99bd..bbfda38 100644
--- a/include/vbi/private.h
+++ b/include/vbi/private.h
@@ -29,7 +29,7 @@
 extern asmlinkage int32_t vbi_io_apic_op(uint32_t ioctl, uint32_t irq, uint32_t filter, uint32_t vbId);
 
 /* private interrupt redirection operator */
-extern asmlinkage int32_t vbi_vcore_irq_redirect(uint32_t irq, vbiCore_t CoreId);
+extern asmlinkage int32_t vbi_vcore_irq_redirect(uint32_t irq, int32_t CoreId);
 
 /* Name service private operator */
 extern asmlinkage int32_t vbi_ns_op(uint32_t op, char* name, uint32_t rev, 
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index c80993f..276e376 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -138,10 +138,10 @@ extern int32_t vbi_update_text_cache(void *saddr, size_t size);
 extern int32_t vbi_set_exc_base(void *excTblBase);
 
 /* virtual board management API's */
-extern asmlinkage int32_t vbi_vb_suspend(uint32_t id, vbiCore_t core);
-extern asmlinkage int32_t vbi_vb_reset(uint32_t id, vbiCore_t core, uint32_t options);
-extern asmlinkage int32_t vbi_vb_restart(uint32_t id, vbiCore_t core);
-extern asmlinkage int32_t vbi_vb_resume(uint32_t id, vbiCore_t core);
+extern asmlinkage int32_t vbi_vb_suspend(uint32_t id, int32_t core);
+extern asmlinkage int32_t vbi_vb_reset(uint32_t id, int32_t core, uint32_t options);
+extern asmlinkage int32_t vbi_vb_restart(uint32_t id, int32_t core);
+extern asmlinkage int32_t vbi_vb_resume(uint32_t id, int32_t core);
 
 /* read remote vb's memory */
 extern asmlinkage int32_t vbi_vb_read_mem(VBI_MEM_CTL *memCtl, uint32_t targetBoard);
@@ -150,9 +150,9 @@ extern asmlinkage void vbi_shell_start_debug(uint32_t  flags);
 
 /* read remote vb's registers */
 extern asmlinkage int32_t vbi_vb_read_reg(VBI_HREG_SET *regCtl, 
-				       uint32_t targetBoard, vbiCore_t core);
+				       uint32_t targetBoard, int32_t core);
 extern asmlinkage int32_t vbi_vb_write_reg(VBI_HREG_SET *regCtl, 
-					uint32_t targetBoard, vbiCore_t core);
+					uint32_t targetBoard, int32_t core);
 
 /*
  * END: New APIs introduced for vbi 2.0  
diff --git a/include/vbi/types.h b/include/vbi/types.h
index 308a523..3de0908 100644
--- a/include/vbi/types.h
+++ b/include/vbi/types.h
@@ -34,7 +34,6 @@
 
 #ifndef _ASMLANGUAGE
 
-typedef int32_t vbiCore_t;
 typedef int32_t vbiCtx_t;
 typedef uint64_t vbiPhysAddr_t;
 typedef void *vbiGuestPhysAddr_t;
diff --git a/include/vbi/vbi.h b/include/vbi/vbi.h
index 0ba0b7d..f4cc47c 100644
--- a/include/vbi/vbi.h
+++ b/include/vbi/vbi.h
@@ -529,7 +529,7 @@ extern int32_t vbi_send_vioapic_irq(uint32_t irq, uint32_t filter,
 				      uint32_t target);
 extern int32_t vbi_send_vioapic_irq(uint32_t irq, uint32_t filter, 
 				     uint32_t vb);
-extern int32_t vbi_redir_vioapic_irq(uint32_t irq, vbiCore_t tCore);
+extern int32_t vbi_redir_vioapic_irq(uint32_t irq, int32_t tCore);
 extern int32_t vbi_send_vcore_vioapic_irq(uint32_t irq, vbiCoreSet_t vcoreSet, 
 					  uint32_t options);
 extern int32_t vbi_get_guest_dma_addr(vbiGuestPhysAddr_t gaddr,
diff --git a/kernel/vbi/io_apic.c b/kernel/vbi/io_apic.c
index 9afddb0..478e7fe 100644
--- a/kernel/vbi/io_apic.c
+++ b/kernel/vbi/io_apic.c
@@ -352,7 +352,7 @@ int32_t vbi_send_vcore_vioapic_irq(uint32_t irq, vbiCoreSet_t coreSet,
  * within the same virtual board.
  *
  */
-int32_t vbi_redir_vioapic_irq(uint32_t irq, vbiCore_t core)
+int32_t vbi_redir_vioapic_irq(uint32_t irq, int32_t core)
 {
 	return vbi_vcore_irq_redirect(irq, core);
 }
-- 
1.6.5.2

