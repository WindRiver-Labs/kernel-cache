From adab37821a523ea7bdfd0a52b0c2a47f5f861e7e Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 24 Feb 2010 21:53:04 -0500
Subject: [PATCH] MILS shim: remove unused port_type.h file

This was added in the anticipation that it would be used by
cross-functional teams, but as it turns out, they don't
need or use this file.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/vbi/port_type.h |  129 -----------------------------------------------
 1 files changed, 0 insertions(+), 129 deletions(-)
 delete mode 100644 include/vbi/port_type.h

diff --git a/include/vbi/port_type.h b/include/vbi/port_type.h
deleted file mode 100644
index ddc60ee..0000000
--- a/include/vbi/port_type.h
+++ /dev/null
@@ -1,129 +0,0 @@
-/* port_type.h - port type header file */
-
-/* Copyright (c) 2009 Wind River Systems, Inc.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
- * See the GNU General Public License for more details.
- *
- */
-
-
-
-#ifndef _VDK_PORT_TYPE_H
-#define _VDK_PORT_TYPE_H
-
-#ifndef	_ASMLANGUAGE
-
-#define  PORT_INFO_MAGIC 168      /* port info magic number */
-#define  PORT_NAME_MAX   32       /* max port name, including EOS */
-
-/* VB XML  tags */
-#define VB_XML_PORT_TAG               "PortsList"
-#define VB_XML_PORT_NAME_TAG          "Port"
-#define VB_XML_PORT_NAME              "Name"
-#define VB_XML_PORT_CHANNEL           "Channel"
-#define VB_XML_PORT_BACKLOG           "BackLog"
-#define VB_XML_PORT_NOTIFICATION      "Notification"
-
-typedef enum                    /* port message queuing  protocol */
-{
-    DISCARD,                    /* discard if  overflow, default protocol */
-    RELIABLE,
-    OVERWRITE_FIRST,
-    OVERWRITE_LAST
-} CHANNEL_PROTO;
-
-typedef enum                    /* port VB notificatiom method */
-{
-    P_NOTIFY_NONE=0,              /* no notification */
-    P_NOTIFY_NON_FULL,            /* sender only, when queue becomes non full */
-    P_NOTIFY_NON_EMPTY=P_NOTIFY_NON_FULL,
-                                /* receiver only, when queue becomes
-                                 * non-empty
-                                 */
-    P_NOTIFY_ALWAYS               /* receiver only, always get notified */
-} PORT_NOTIFY;
-
-typedef enum                      /* message transfer protocol */
-{
-    P_COPY=0,                     /* copy from sender to reciver */
-    P_PAGED,                      /* swap page between sender and recver */
-    P_SECURE_PAGED,               /* swap page, zero the filler */
-    P_PROCTECT_PAGED,             /* MMU rdonly PAGED area still in queue */
-    P_PROTECT_SECURE_PAGED        /* MMU rdonly SECURE_PAGED still in queue */
-} PORT_COPY_PROTO;
-
-
-typedef enum                     /* port state */
-{
-    P_INACTIVE,
-    P_READY,                       /* q length =1, we always use P_FULL */
-    P_FULL,
-    P_EMPTY
-} PORT_STATE;
-
-typedef struct status_entry
-{
-    int      len;                 /* message length */
-    uint64_t tmStamp;             /* time stamp */
-    void  *  msgAddr;             /* message address, if the port is VB
-                                     managed buffer, the address is VB physical
-                                     address, so VB can directly access it.
-                                     otherwise, it is wrhv physicall address
-                                     VB should not touch it.
-                                   */
-} PORT_DATA_ENTRY;
-
-typedef struct portStatus         /* port runtime status */
-{
-    PORT_STATE  state;            /* port current state */
-    u_int        seqno;            /* latest message received, or first message
-                                   * on the sender queue
-                                   */
-    u_int       nMsgs;            /* number of messages in the queue */
-    u_int       head;             /* queue  head index */
-    u_int       tail;             /* queue  tail index */
-    PORT_DATA_ENTRY * dataEntry;  /* port data region */
-} PORT_STATUS;
-
-typedef struct portSendMsg         /* port message structure */
-{
-    void  * buffer;                /* point to the data area */
-    int     len;                   /* size of message to follow */
-} PORT_SEND_MESSAGE_DESC;
-
-typedef struct vbPortReceiveMessageDescriptor
-{
-    void  *  buffer;
-    u_int     bufLen;
-    u_int     msgLen;
-    uint64_t sentMessageTimestamp;
-} PORT_RECEIVE_MESSAGE_DESC;
-
-
-typedef enum                      /* port distribution status */
-{
-    PORT_DIST_OK,                 /* all messages distributed */
-    PORT_DIST_OVERFLOW,           /* overflow happens in at least one of the
-                                   * port */
-    PORT_DIST_PROTO_NOTSUP        /* not supported protocol */
-} PORT_DIST_STATUS;
-
-typedef enum                      /* status queuing on the receiver queue */
-{
-    DESTINATION_NO_SPACE=0,
-    DESTINATION_ACCEPTED,         /* new message accepted */
-    DESTINATION_ACCEPTED_ALREADY  /* destination already dragged the message */
-} DIST_STATUS;
-
-typedef void * PORT_ID;
-
-#endif /* _ASMLANGUAGE */
-
-#endif  /* _VDK_PORT_TYPE_H */
-- 
1.7.0

