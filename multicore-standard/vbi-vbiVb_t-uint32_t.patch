From 55ead8b890ab14e8f8b21246b2835ec0eec2ef1a Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 2 Dec 2009 12:03:58 -0500
Subject: [PATCH 08/43] vbi: vbiVb_t --> uint32_t

for i in `git grep -l vbiVb_t` ; do mv $i $i~ ; cat $i~|sed 's/vbiVb_t/uint32_t/' > $i ; done

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/vbi/compat.h    |    1 +
 include/vbi/interface.h |    2 +-
 include/vbi/private.h   |    2 +-
 include/vbi/syscall.h   |   16 ++++++++--------
 include/vbi/types.h     |    1 -
 include/vbi/vbi.h       |    4 ++--
 kernel/vbi/io_apic.c    |    2 +-
 7 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index d2068ab..bde88e1 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -47,6 +47,7 @@
 #define VB_TIMESTAMP		uint64_t
 #define vbiStatus_t		int32_t
 #define vbiIrq_t		uint32_t
+#define vbiVb_t			uint32_t
 
 /*
  * struct fields and similar
diff --git a/include/vbi/interface.h b/include/vbi/interface.h
index 240089f..dd6d0f3 100644
--- a/include/vbi/interface.h
+++ b/include/vbi/interface.h
@@ -511,7 +511,7 @@ struct vb_config
 	 */
 
 	uint32_t pid;		/* hypervisor context id */
-	vbiVb_t boardID;	/* board ID from the XML configuration */
+	uint32_t boardID;	/* board ID from the XML configuration */
 
 	int32_t supervisoryMode;/* board is running in privileged mode */
 
diff --git a/include/vbi/private.h b/include/vbi/private.h
index 1d5c1ac..76a99bd 100644
--- a/include/vbi/private.h
+++ b/include/vbi/private.h
@@ -26,7 +26,7 @@
 #ifndef _ASMLANGUAGE
 
 /* private ioapic operator */
-extern asmlinkage int32_t vbi_io_apic_op(uint32_t ioctl, uint32_t irq, uint32_t filter, vbiVb_t vbId);
+extern asmlinkage int32_t vbi_io_apic_op(uint32_t ioctl, uint32_t irq, uint32_t filter, uint32_t vbId);
 
 /* private interrupt redirection operator */
 extern asmlinkage int32_t vbi_vcore_irq_redirect(uint32_t irq, vbiCore_t CoreId);
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 7b1fa5a..c80993f 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -138,21 +138,21 @@ extern int32_t vbi_update_text_cache(void *saddr, size_t size);
 extern int32_t vbi_set_exc_base(void *excTblBase);
 
 /* virtual board management API's */
-extern asmlinkage int32_t vbi_vb_suspend(vbiVb_t id, vbiCore_t core);
-extern asmlinkage int32_t vbi_vb_reset(vbiVb_t id, vbiCore_t core, uint32_t options);
-extern asmlinkage int32_t vbi_vb_restart(vbiVb_t id, vbiCore_t core);
-extern asmlinkage int32_t vbi_vb_resume(vbiVb_t id, vbiCore_t core);
+extern asmlinkage int32_t vbi_vb_suspend(uint32_t id, vbiCore_t core);
+extern asmlinkage int32_t vbi_vb_reset(uint32_t id, vbiCore_t core, uint32_t options);
+extern asmlinkage int32_t vbi_vb_restart(uint32_t id, vbiCore_t core);
+extern asmlinkage int32_t vbi_vb_resume(uint32_t id, vbiCore_t core);
 
 /* read remote vb's memory */
-extern asmlinkage int32_t vbi_vb_read_mem(VBI_MEM_CTL *memCtl, vbiVb_t targetBoard);
-extern asmlinkage int32_t vbi_vb_write_mem(VBI_MEM_CTL *memCtl, vbiVb_t targetBoard);
+extern asmlinkage int32_t vbi_vb_read_mem(VBI_MEM_CTL *memCtl, uint32_t targetBoard);
+extern asmlinkage int32_t vbi_vb_write_mem(VBI_MEM_CTL *memCtl, uint32_t targetBoard);
 extern asmlinkage void vbi_shell_start_debug(uint32_t  flags);
 
 /* read remote vb's registers */
 extern asmlinkage int32_t vbi_vb_read_reg(VBI_HREG_SET *regCtl, 
-				       vbiVb_t targetBoard, vbiCore_t core);
+				       uint32_t targetBoard, vbiCore_t core);
 extern asmlinkage int32_t vbi_vb_write_reg(VBI_HREG_SET *regCtl, 
-					vbiVb_t targetBoard, vbiCore_t core);
+					uint32_t targetBoard, vbiCore_t core);
 
 /*
  * END: New APIs introduced for vbi 2.0  
diff --git a/include/vbi/types.h b/include/vbi/types.h
index 5e5b136..308a523 100644
--- a/include/vbi/types.h
+++ b/include/vbi/types.h
@@ -34,7 +34,6 @@
 
 #ifndef _ASMLANGUAGE
 
-typedef uint32_t vbiVb_t;
 typedef int32_t vbiCore_t;
 typedef int32_t vbiCtx_t;
 typedef uint64_t vbiPhysAddr_t;
diff --git a/include/vbi/vbi.h b/include/vbi/vbi.h
index 80cd8e3..0ba0b7d 100644
--- a/include/vbi/vbi.h
+++ b/include/vbi/vbi.h
@@ -526,9 +526,9 @@ extern int32_t vbi_unmask_vioapic_irq(uint32_t irq);
 extern int32_t vbi_mask_vioapic_irq(uint32_t irq);
 extern int32_t vbi_ack_vioapic_irq(uint32_t irq);
 extern int32_t vbi_send_vioapic_irq(uint32_t irq, uint32_t filter,
-				      vbiVb_t target);
+				      uint32_t target);
 extern int32_t vbi_send_vioapic_irq(uint32_t irq, uint32_t filter, 
-				     vbiVb_t vb);
+				     uint32_t vb);
 extern int32_t vbi_redir_vioapic_irq(uint32_t irq, vbiCore_t tCore);
 extern int32_t vbi_send_vcore_vioapic_irq(uint32_t irq, vbiCoreSet_t vcoreSet, 
 					  uint32_t options);
diff --git a/kernel/vbi/io_apic.c b/kernel/vbi/io_apic.c
index f2f9f7e..9afddb0 100644
--- a/kernel/vbi/io_apic.c
+++ b/kernel/vbi/io_apic.c
@@ -318,7 +318,7 @@ int32_t vbi_ack_vioapic_irq(uint32_t irq)
  * VIOAPIC_SEND_NONE	- Ignore this call.
  *
  */
-int32_t vbi_send_vioapic_irq(uint32_t irq, uint32_t filter, vbiVb_t target)
+int32_t vbi_send_vioapic_irq(uint32_t irq, uint32_t filter, uint32_t target)
 {
 	return vbi_io_apic_op(VBI_IOAPICIOCTL_SEND, irq, filter, target);
 }
-- 
1.6.5.2

