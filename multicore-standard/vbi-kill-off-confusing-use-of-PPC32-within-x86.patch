From ffdffeadfbab924022747afe2e1b38993df1bc72 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Tue, 27 Oct 2009 12:59:58 -0400
Subject: [PATCH 1/2] vbi: kill off confusing use of PPC32 within x86

There is a use of "PPC32" in the vbi code with respect to the
setting of "CPU".  Unfortunately it is confusing, because it is
only set for x86 (?!) and it kind of gets confused with the
kernel's already existing CONFIG_PPC32.  Fortunately it can be
removed completely.  The existing trivial use case is shown below:

Current define:

  If CONFIG_X86=y
	PPC32 set to -1

  If CONFIG_PPC=y
	PPC never set

Current user (only the one!):
  #if ((CPU == PPC604)   || (CPU == PPC85XX) || \
      (CPU == PPCE500MC) || (CPU == PPC970))
  ...
  #elif (CPU != PPC32)
  ...
  #endif

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/include/asm/vbi.h |   12 ++++++++----
 include/vbi/types.h            |    1 -
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/include/asm/vbi.h b/arch/powerpc/include/asm/vbi.h
index 8f3ee2e..77fbe0a 100644
--- a/arch/powerpc/include/asm/vbi.h
+++ b/arch/powerpc/include/asm/vbi.h
@@ -80,11 +80,16 @@ SP=>|      Back chain                  |
 #define _CPU_STACK_ALIGN_SIZE	16	/* stack alignment (for all PPC) */
 #define	_CPU_STACK_ALIGN_SHIFT	4
 
-#if	((CPU == PPC604) || (CPU == PPC85XX) || (CPU == PPCE500MC) || (CPU == PPC970)) /* Altivec, E500 EABI */
+/*
+ * The use of CPU could/should be replaced with existing defines,
+ * like CONFIG_MPC85xx etc.
+ */
+#if ((CPU == PPC604)   || (CPU == PPC85XX) || \
+    (CPU == PPCE500MC) || (CPU == PPC970)) /* Altivec, E500 EABI */
 # define _CPU_ALLOC_ALIGN_SIZE	16	/* allocation alignment */
-#elif	(CPU != PPC32)			/* for others, !defined for generic */
+#else					/* for others, !defined for generic */
 # define _CPU_ALLOC_ALIGN_SIZE	8	/* allocation alignment */
-#endif	/* PPC604|PPC85XX|PPC970 : !PPC32 */
+#endif	/* PPC604|PPC85XX|PPC970 */
 
 #define	FRAMEBASESZ		16	/* minimum stack frame size */
 
@@ -98,7 +103,6 @@ SP=>|      Back chain                  |
 * back chain word and the LR register. Both these locations are set to 0 to 
 * prevent stack traces and debuggers from looking ahead.
 *
-* NOMANUAL
 */
 
 #define _WRS_ARCH_USER_STACK_FRAME_EXTENSION(sp)			     \
diff --git a/include/vbi/types.h b/include/vbi/types.h
index 5e62c5f..ac13344 100644
--- a/include/vbi/types.h
+++ b/include/vbi/types.h
@@ -22,7 +22,6 @@
 #ifdef CONFIG_WRHV
 #ifdef CONFIG_X86
 #define CPU PENTIUM
-#define PPC32 -1
 #endif /* CONFIG_X86 */
 #ifdef CONFIG_PPC
 #define CPU PPC85XX   /* Currently all PPC treated the same in vbi */
-- 
1.6.5.2

