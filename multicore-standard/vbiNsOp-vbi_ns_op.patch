From fd427b9927765adc1c5c3485c8812b0bf9567d9e Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 18 Nov 2009 10:07:33 -0500
Subject: [PATCH 45/80] vbiNsOp --> vbi_ns_op

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/syscalls.S |    8 ++++----
 arch/x86/kernel/vbi/syscalls.S     |    6 +++---
 include/vbi/private.h              |    2 +-
 include/vbi/syscalls.h             |    2 +-
 kernel/vbi/ns.c                    |    6 +++---
 5 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/syscalls.S b/arch/powerpc/kernel/vbi/syscalls.S
index 347dc77..0f90ff8 100644
--- a/arch/powerpc/kernel/vbi/syscalls.S
+++ b/arch/powerpc/kernel/vbi/syscalls.S
@@ -62,7 +62,7 @@ FUNC_EXPORT(vbi_disable_vmmu)
 FUNC_EXPORT(vbi_tlb_load_vmmu)
 FUNC_EXPORT(vbi_tlb_flush_vmmu)
 FUNC_EXPORT(vbi_vb_mgmt)
-FUNC_EXPORT(vbiNsOp)
+FUNC_EXPORT(vbi_ns_op)
 FUNC_EXPORT(vbi_vb_suspend)
 FUNC_EXPORT(vbi_vb_reset)
 FUNC_EXPORT(vbi_vb_restart)
@@ -737,7 +737,7 @@ FUNC_END(vbi_io_apic_ioctl)
 
 /*
  *
- * vbiNsOp - virtua board name service call
+ * vbi_ns_op - virtua board name service call
  *
  * This system call interfaces to the virtual board
  *
@@ -747,12 +747,12 @@ FUNC_END(vbi_io_apic_ioctl)
  *	VBI_VBI_NS_LOOKUP	   /@ lookup service	 @/
  *
  */
-FUNC_LABEL(vbiNsOp)
+FUNC_LABEL(vbi_ns_op)
 	lis r0, HI(VBI_SYS_ns_op)
 	ori r0, r0, LO(VBI_SYS_ns_op)
 	HCALL
 	blr
-FUNC_END(vbiNsOp)
+FUNC_END(vbi_ns_op)
 
 /*
  * vbi_vb_read_mem - Read a virtual board's memory
diff --git a/arch/x86/kernel/vbi/syscalls.S b/arch/x86/kernel/vbi/syscalls.S
index 046baf9..33f7c1d 100644
--- a/arch/x86/kernel/vbi/syscalls.S
+++ b/arch/x86/kernel/vbi/syscalls.S
@@ -45,7 +45,7 @@
 .globl vbi_vb_mgmt
 .globl vbi_set_mem_attr
 .globl vbi_get_mem_attr
-.globl vbiNsOp
+.globl vbi_ns_op
 .globl vbi_vb_reset
 .globl vbi_vb_restart
 .globl vbi_vb_resume
@@ -509,7 +509,7 @@ vbiMmuAttrGet:
 
 
 /*
- * vbiNsOp - virtua board name service call
+ * vbi_ns_op - virtua board name service call
  *
  * This system call interfaces to the virtual board
  *
@@ -521,7 +521,7 @@ vbiMmuAttrGet:
  * Returns: OK or ERROR in case of failure
  *
  */
-vbiNsOp:
+vbi_ns_op:
 	movl $VBI_SYS_ns_op, %eax
 	push $4
 	vmcall
diff --git a/include/vbi/private.h b/include/vbi/private.h
index abf5366..dfeae33 100644
--- a/include/vbi/private.h
+++ b/include/vbi/private.h
@@ -32,7 +32,7 @@ extern asmlinkage vbiStatus_t vbi_io_apic_op (uint32_t ioctl, vbiIrq_t irq, uint
 extern asmlinkage vbiStatus_t vbi_vcore_irq_redirect(vbiIrq_t irq, vbiCore_t CoreId);
 
 /* Name service private operator */
-extern asmlinkage vbiStatus_t vbiNsOp(uint32_t op, char* name, uint32_t rev, 
+extern asmlinkage vbiStatus_t vbi_ns_op(uint32_t op, char* name, uint32_t rev, 
 			VBI_NS_HANDLE *handle);
 
 /* Message receive private operator */
diff --git a/include/vbi/syscalls.h b/include/vbi/syscalls.h
index 7cfeff7..fe07677 100644
--- a/include/vbi/syscalls.h
+++ b/include/vbi/syscalls.h
@@ -232,7 +232,7 @@
 #define VBI_VTLB_OPS_CACHE_ENABLED		4
 #define VBI_VTLB_DIRTY_BIT_SUPPORT_ENABLED	8
 
-/* vbiNsOp system call supported operations */
+/* vbi_ns_op system call supported operations */
 #define VBI_NS_REGISTER		1	/* register service name    */
 #define VBI_NS_UNREGISTER	2	/* unregister service name  */
 #define VBI_NS_LOOKUP	        3	/* look up service name	    */
diff --git a/kernel/vbi/ns.c b/kernel/vbi/ns.c
index 1a3cf1f..43bdc6b 100644
--- a/kernel/vbi/ns.c
+++ b/kernel/vbi/ns.c
@@ -48,7 +48,7 @@ vbiStatus_t vbiNsRegister(char *name, uint32_t revision)
 	if (name == NULL)
 		return -1;
 
-	return vbiNsOp(VBI_NS_REGISTER, name, revision, NULL);
+	return vbi_ns_op(VBI_NS_REGISTER, name, revision, NULL);
 }
 
 /*
@@ -64,7 +64,7 @@ vbiStatus_t vbiNsUnregister(char *name, uint32_t revision)
 	if (name == NULL)
 		return -1;
 
-	return vbiNsOp(VBI_NS_UNREGISTER, name, revision, NULL);
+	return vbi_ns_op(VBI_NS_UNREGISTER, name, revision, NULL);
 }
 
 /*
@@ -80,5 +80,5 @@ vbiStatus_t vbiNsLookup(char *name, uint32_t revision, VBI_NS_HANDLE *handle)
 	if (name == NULL || handle == NULL)
 		return -1;
 
-	return vbiNsOp(VBI_NS_LOOKUP , name, revision, handle);
+	return vbi_ns_op(VBI_NS_LOOKUP , name, revision, handle);
 }
-- 
1.6.5.2

