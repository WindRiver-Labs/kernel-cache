From 29745415f9e175f58cdc59c83ddb5f4880c847e2 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 14 Oct 2009 20:25:04 -0400
Subject: [PATCH 12/23] include/vbi/vbiVioapic.h -> include/vbi/io_apic.h

Seems there are no other users for this file; looks like a
candidate for nukage.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/vbi/io_apic.h    |  132 ++++++++++++++++++++++++++++++++++++++++++++++
 include/vbi/vbiVioapic.h |  132 ----------------------------------------------
 2 files changed, 132 insertions(+), 132 deletions(-)
 create mode 100644 include/vbi/io_apic.h
 delete mode 100644 include/vbi/vbiVioapic.h

diff --git a/include/vbi/io_apic.h b/include/vbi/io_apic.h
new file mode 100644
index 0000000..8b0751b
--- /dev/null
+++ b/include/vbi/io_apic.h
@@ -0,0 +1,132 @@
+/* vIoapic.h - virtual IO APIC definitions */
+
+/*
+ * Copyright (c) 2008 Wind River Systems, Inc.
+ *
+ * The right to copy, distribute or otherwise make use of this software
+ * may be licensed only pursuant to the terms of an applicable Wind River
+ * license agreement. 
+*/
+
+/*
+modification history
+--------------------
+01f,13jul09,mmi  adjust max ioapic entries
+01e,17jun09,mmi  create a vioapic structure
+01d,14apr09,mpk  use uint32_t instead of long
+01c,12dec08,md   rename header files
+01b,09dec08,md   fix reg set/get macros
+01a,14apr08,gws  written
+*/
+
+#ifndef	__INCVIOAPICh
+#define	__INCVIOAPICh
+
+#include <wrhv.h>
+#include <sys/types.h>
+#include <vbMgr.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/* define 128 entries for all platforms */
+
+#define VIOAPIC_REDTABLE_ENTRIES	(128)	
+#define VIOAPIC_MAX_REDTABLE_ENTRIES	(VIOAPIC_REDTABLE_ENTRIES)
+
+#ifndef	_ASMLANGUAGE
+
+/* data structures */
+
+/* IO APIC ID register */
+typedef union {
+    struct {
+	uint32_t reserved1:24;	/* reserved bits */
+	uint32_t IOAPIC_id:4;	/* apic id */
+	uint32_t reserved2:4;	/* reserved bits */
+    } field;
+
+    uint32_t value;
+} VIOAPIC_ID;
+
+
+/* IO APIC Version Register */
+
+typedef union {
+    struct {
+	uint32_t version:8;		/* version identifier */
+	uint32_t reserved1:8;		/* reserved bits */
+	uint32_t maxRedirEntry:8;	/* maximum number of entries - 1, or
+					 * number of IRQ pins - 1 */
+	uint32_t reserved2:8;		/* reserved bits */
+    } field;
+
+    uint32_t value;
+} VIOAPIC_VERSION;
+
+/* Virtual IO APIC redirection table entry. Split into high/low 32 */
+
+typedef union {
+    struct {
+	uint32_t reserved:24;	/* reserved bits */
+	uint32_t destination:8;	/* destination field */
+    } field;
+
+    uint32_t value;
+} VIOAPIC_REDIR_HIGH;
+
+typedef union {
+    struct {
+	uint32_t vector:8;	/* vector number */
+	uint32_t deliveryMode:3;/* delivery mode:
+				 * fixed, lowest, SMI, reserved, NMI, 
+				 * INIT, reserved, extInt */
+	uint32_t destMode:1;	/* destination mode: 0=physical, 1=logical */
+	uint32_t delivStatus:1;	/* delivery status: 0=idle, 1=pending*/
+	uint32_t polarity:1;	/* polarity: 0=high active */
+	uint32_t irr:1;		/* remote IRR (level only): 1 before LAPIC
+				 * accepts level, 0 after EOI */
+	uint32_t trigger:1;	/* 0=edge, 1=level */
+	uint32_t mask:1;	/* 1=masked */
+	uint32_t reserved:15;	/* reserved bits */
+    } field;
+
+    uint32_t value;
+} VIOAPIC_REDIR_LOW;
+
+typedef struct vioapicEntry 
+    {
+    VIOAPIC_REDIR_LOW	vioapicLow;
+    VIOAPIC_REDIR_HIGH	vioapicHigh;
+
+    } VIOAPIC_ENTRY;
+    
+typedef struct vioapic
+    {
+    VIOAPIC_ID	    id;
+    VIOAPIC_VERSION version;
+    uint32_t	    arb;
+    uint32_t	    boot;
+    uint32_t	    reserved[6];
+    VIOAPIC_ENTRY   entry [VIOAPIC_MAX_REDTABLE_ENTRIES];
+    } VIOAPIC;
+
+/* external declarations */
+
+extern int vIoapicInterrupt (HY_CTX * ctx, uint32_t globalInt);
+extern void vIoapicInit (VB_INFO * info);
+extern uint32_t vIoapicGetVector (HY_CTX * ctx, uint32_t irq);
+extern uint32_t vIoapicGetMask (HY_CTX * ctx, uint32_t irq);
+extern void vIoapicSetMask (HY_CTX * ctx, uint32_t irq, uint32_t mask);
+
+#endif /* _ASMLANGUAGE */
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif	/* __INCVIOAPICh */
+
+
diff --git a/include/vbi/vbiVioapic.h b/include/vbi/vbiVioapic.h
deleted file mode 100644
index 8b0751b..0000000
--- a/include/vbi/vbiVioapic.h
+++ /dev/null
@@ -1,132 +0,0 @@
-/* vIoapic.h - virtual IO APIC definitions */
-
-/*
- * Copyright (c) 2008 Wind River Systems, Inc.
- *
- * The right to copy, distribute or otherwise make use of this software
- * may be licensed only pursuant to the terms of an applicable Wind River
- * license agreement. 
-*/
-
-/*
-modification history
---------------------
-01f,13jul09,mmi  adjust max ioapic entries
-01e,17jun09,mmi  create a vioapic structure
-01d,14apr09,mpk  use uint32_t instead of long
-01c,12dec08,md   rename header files
-01b,09dec08,md   fix reg set/get macros
-01a,14apr08,gws  written
-*/
-
-#ifndef	__INCVIOAPICh
-#define	__INCVIOAPICh
-
-#include <wrhv.h>
-#include <sys/types.h>
-#include <vbMgr.h>
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-/* define 128 entries for all platforms */
-
-#define VIOAPIC_REDTABLE_ENTRIES	(128)	
-#define VIOAPIC_MAX_REDTABLE_ENTRIES	(VIOAPIC_REDTABLE_ENTRIES)
-
-#ifndef	_ASMLANGUAGE
-
-/* data structures */
-
-/* IO APIC ID register */
-typedef union {
-    struct {
-	uint32_t reserved1:24;	/* reserved bits */
-	uint32_t IOAPIC_id:4;	/* apic id */
-	uint32_t reserved2:4;	/* reserved bits */
-    } field;
-
-    uint32_t value;
-} VIOAPIC_ID;
-
-
-/* IO APIC Version Register */
-
-typedef union {
-    struct {
-	uint32_t version:8;		/* version identifier */
-	uint32_t reserved1:8;		/* reserved bits */
-	uint32_t maxRedirEntry:8;	/* maximum number of entries - 1, or
-					 * number of IRQ pins - 1 */
-	uint32_t reserved2:8;		/* reserved bits */
-    } field;
-
-    uint32_t value;
-} VIOAPIC_VERSION;
-
-/* Virtual IO APIC redirection table entry. Split into high/low 32 */
-
-typedef union {
-    struct {
-	uint32_t reserved:24;	/* reserved bits */
-	uint32_t destination:8;	/* destination field */
-    } field;
-
-    uint32_t value;
-} VIOAPIC_REDIR_HIGH;
-
-typedef union {
-    struct {
-	uint32_t vector:8;	/* vector number */
-	uint32_t deliveryMode:3;/* delivery mode:
-				 * fixed, lowest, SMI, reserved, NMI, 
-				 * INIT, reserved, extInt */
-	uint32_t destMode:1;	/* destination mode: 0=physical, 1=logical */
-	uint32_t delivStatus:1;	/* delivery status: 0=idle, 1=pending*/
-	uint32_t polarity:1;	/* polarity: 0=high active */
-	uint32_t irr:1;		/* remote IRR (level only): 1 before LAPIC
-				 * accepts level, 0 after EOI */
-	uint32_t trigger:1;	/* 0=edge, 1=level */
-	uint32_t mask:1;	/* 1=masked */
-	uint32_t reserved:15;	/* reserved bits */
-    } field;
-
-    uint32_t value;
-} VIOAPIC_REDIR_LOW;
-
-typedef struct vioapicEntry 
-    {
-    VIOAPIC_REDIR_LOW	vioapicLow;
-    VIOAPIC_REDIR_HIGH	vioapicHigh;
-
-    } VIOAPIC_ENTRY;
-    
-typedef struct vioapic
-    {
-    VIOAPIC_ID	    id;
-    VIOAPIC_VERSION version;
-    uint32_t	    arb;
-    uint32_t	    boot;
-    uint32_t	    reserved[6];
-    VIOAPIC_ENTRY   entry [VIOAPIC_MAX_REDTABLE_ENTRIES];
-    } VIOAPIC;
-
-/* external declarations */
-
-extern int vIoapicInterrupt (HY_CTX * ctx, uint32_t globalInt);
-extern void vIoapicInit (VB_INFO * info);
-extern uint32_t vIoapicGetVector (HY_CTX * ctx, uint32_t irq);
-extern uint32_t vIoapicGetMask (HY_CTX * ctx, uint32_t irq);
-extern void vIoapicSetMask (HY_CTX * ctx, uint32_t irq, uint32_t mask);
-
-#endif /* _ASMLANGUAGE */
-
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif	/* __INCVIOAPICh */
-
-
-- 
1.6.3.3

