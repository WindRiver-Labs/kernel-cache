From 740f8828599a32a481621d221221d31e4d3cbf9f Mon Sep 17 00:00:00 2001
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Wed, 10 Feb 2010 13:03:05 -0500
Subject: [PATCH 4/4] x86 - Clean up linker section warnings

Label routines properly to get the section types correct, and also
a change to reference boot_command_line from an __init
routine instead of from __cpuinit.

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 arch/x86/kernel/vbi/wrhv.c |   12 +++++++-----
 1 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/arch/x86/kernel/vbi/wrhv.c b/arch/x86/kernel/vbi/wrhv.c
index a01608f..b81ac2a 100644
--- a/arch/x86/kernel/vbi/wrhv.c
+++ b/arch/x86/kernel/vbi/wrhv.c
@@ -70,6 +70,7 @@ static struct mm_struct *flush_mm;
 static unsigned long flush_va;
 static DEFINE_SPINLOCK(tlbstate_lock);
 static int enable_hrtimer = 0;
+static int novtlbopt;
 
 #define VBI_VTLB_OPTIM_OPTION (\
 			 VBI_VTLB_OPTIM_ENABLED |  \
@@ -467,7 +468,7 @@ void wrhv_cpu_workarounds(struct cpuinfo_x86 *c)
 	clear_bit(X86_FEATURE_DE, (void *)boot_cpu_data.x86_capability);
 }
 
-void wrhv_boot_config(void)
+void __init wrhv_boot_config(void)
 {
 	boot_params.hdr.type_of_loader = 0xff; /* Unknown */
 	if (__initrd_start != __initrd_end) {
@@ -488,6 +489,8 @@ void wrhv_boot_config(void)
 		wr_config->phys_mem_size / 1024, (int)WRHV_RESERVED_TOP,
 		wr_config->bootLine);
 #endif
+	if (strstr(boot_command_line, "novtlbopt"))
+		novtlbopt = 1;
 }
 
 #ifdef CONFIG_SMP
@@ -774,7 +777,7 @@ static void wrhv_exit_mmap (struct mm_struct *mm)
 #endif
 }
 
-static void wrhv_init_vtlb_per_cpu(void)
+static void __cpuinit wrhv_init_vtlb_per_cpu(void)
 {
 	/* Initialize the cached copy of cr3 */
 	VTLB_GET_CPU_VAR(cr3_val) = native_read_cr3();
@@ -792,7 +795,7 @@ static void wrhv_init_vtlb_per_cpu(void)
 	   one will actually be in use.
 	*/
 
-	if (strstr(boot_command_line, "novtlbopt")) {
+	if (novtlbopt) {
 		VTLB_GET_CPU_VAR(vtlb_ctrl).mode = VBI_VTLB_OPTIM_OPTION_NOOPT;
 		printk("WRHV:  CPU %d vtlb optimization disabled\n",
 			smp_processor_id());
@@ -888,7 +891,6 @@ void __init wrhv_calibrate_smp_cpus(void)
 	}
 	return;
 }
-EXPORT_SYMBOL(wrhv_calibrate_smp_cpus);
 
 static void inline wrhv_umask_IPIs_for_vcore(void)
 {
@@ -1208,7 +1210,7 @@ static int __cpuinit wrhv_cpu_up(unsigned int cpu)
 	return 0;
 }
 
-static void wrhv_smp_cpus_done(unsigned int max_cpus)
+static void __init wrhv_smp_cpus_done(unsigned int max_cpus)
 {
 	printk(KERN_INFO "BP: smp_init done. \n");
 	native_smp_cpus_done(max_cpus);
-- 
1.6.5.2

