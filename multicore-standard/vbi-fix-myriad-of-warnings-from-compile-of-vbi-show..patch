From f88f640bb3a66a75b77d637e7139f9237889b56b Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Fri, 30 Oct 2009 17:30:27 -0400
Subject: [PATCH 25/26] vbi: fix myriad of warnings from compile of vbi/show.c

There were lots of formatting warnings in this file, all of
the kind "expected type A, got type B".  Clobber them.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 kernel/vbi/show.c |   30 ++++++++++++++----------------
 1 files changed, 14 insertions(+), 16 deletions(-)

diff --git a/kernel/vbi/show.c b/kernel/vbi/show.c
index 9a6bcaa..471ef44 100644
--- a/kernel/vbi/show.c
+++ b/kernel/vbi/show.c
@@ -42,16 +42,15 @@ void vbiSharedMemoryShow(struct vb_config *config)
 	void *pState = config->sharedMemoryRegionsStateAddress;
 	int i;
 
-	printk("%d Shared memory regions, Config at 0x%x:\n", num_sm, p);
+	printk("%d Shared memory regions, Config at 0x%p:\n", num_sm, p);
 
 	/* dump shared memory info if we have any attached */
 	for (i=0; i < num_sm; i++,p++) {
-		printk("%8s: 0x%08x -> 0x%08x  (attr: 0x%x)\n",
-		p->name, p->addr,
-		((unsigned int)p->addr + p->length) - 1, p->attr);
+		printk("%8s: 0x%p -> 0x%08x  (attr: 0x%x)\n",
+		p->name, p->addr, p->addr + p->length - 1, p->attr);
 	}
 
-	printk("Shared memory State at 0x%x:\n", pState);
+	printk("Shared memory State at 0x%p:\n", pState);
 }
 
 /*
@@ -70,13 +69,12 @@ void vbiMemoryShow(struct vb_config *config)
 	int num_sm = config->num_mem;
 	int i;
 
-	printk("%d memory regions, Config at 0x%x:\n", num_sm, p);
+	printk("%d memory regions, Config at 0x%p:\n", num_sm, p);
 
 	/* dump shared memory info if we have any attached */
 	for (i=0; i < num_sm; i++,p++) {
-		printk("%8s: 0x%08x -> 0x%08x  (attr: 0x%x) (type: %s)\n",
-			p->name, p->addr,
-			((unsigned int)p->addr + p->length) - 1,
+		printk("%8s: 0x%p -> 0x%p  (attr: 0x%x) (type: %s)\n",
+			p->name, p->addr, p->addr + p->length - 1,
 			p->attr, p->type);
 	}
 }
@@ -95,7 +93,7 @@ static void vbiInterruptsShow(struct vb_config *config)
 	int numInt = config->numInts;
 	int i;
 
-	printk("%d interrupt configurations, Config at 0x%x\n", numInt, p);
+	printk("%d interrupt configurations, Config at 0x%p\n", numInt, p);
 
 	for (i = 0; i < numInt; i++, p++) {
 		if (p->intDirection == VB_INPUT_INT)
@@ -115,7 +113,7 @@ static void vbiInterruptsShow(struct vb_config *config)
  */
 void vbiStatusShow(struct vb_status *p)
 {
-	printk("VB status: 0x%x\n", p);
+	printk("VB status: 0x%p\n", p);
 
 	printk("  Pending interrupts: 0x%08x\n", p->int_pend_type);
 	printk("  timestamp:          %lld\n", p->timeStamp);
@@ -135,7 +133,7 @@ void vbiControlShow(struct vb_control *p)
 {
 	int i;
 
-	printk("VB control data: 0x%x\n", p);
+	printk("VB control data: 0x%p\n", p);
 
 	printk("  Disable interrupts:  0x%08x\n", p->intDisable);
 
@@ -160,13 +158,13 @@ void vbiControlShow(struct vb_control *p)
 
 void vbiConfigShow(struct vb_config *p)
 {
-	printk("VB config data: 0x%x\n", p);
+	printk("VB config data: 0x%p\n", p);
 
 	printk("pid:                %d\n", p->pid);
 	printk("Board ID:           %d\n", p->boardID);
 
-	printk("Status Address:     0x%lx\n", p->vbStatus);
-	printk("Control Address:    0x%lx\n", p->vbControl);
+	printk("Status Address:     0x%p\n", p->vbStatus);
+	printk("Control Address:    0x%p\n", p->vbControl);
 #if defined (_WRHV_ARCH_HAS_VB_SYSTBL)
 	printk("Syscall Table Address:    0x%lx\n",
 			p->vbSyscallTable);
@@ -178,7 +176,7 @@ void vbiConfigShow(struct vb_config *p)
 	printk("Physical Memory:    %d\n", p->phys_mem_size);
 	printk("Memory Alias Addr:  0x%08x\n", p->mem_alias_addr);
 	printk("Memory Alias Size:  %u\n", p->mem_alias_size);
-	printk("Reset PC:           0x%08x\n", p->reset_pc);
+	printk("Reset PC:           0x%p\n", p->reset_pc);
 
 	printk("Timer Frequency:     %d/sec\n", p->tickTimerFrequency);
 	printk("TimeStamp Frequency: %dULL/sec\n", p->timeStampFrequency);
-- 
1.6.5.2

