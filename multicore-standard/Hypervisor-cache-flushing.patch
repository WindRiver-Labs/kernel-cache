From 9b336eb8a0ebcd2c415178d3b7ddce82eb778768 Mon Sep 17 00:00:00 2001
From: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
Date: Wed, 10 Mar 2010 16:44:55 -0500
Subject: [PATCH] Hypervisor cache flushing

The proper cache flush call for the given version of
the hypervisor needs to be made in order to avoid
segfaults. (system stability)

Signed-off-by: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
---
 arch/powerpc/include/asm/paravirt.h |    2 ++
 arch/powerpc/kernel/paravirt.c      |    4 ++++
 arch/powerpc/kernel/vbi/wrhv.c      |    4 ++++
 arch/powerpc/kernel/wrhv_misc_32.S  |   10 ++++++++++
 4 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/include/asm/paravirt.h b/arch/powerpc/include/asm/paravirt.h
index caca81c..707413c 100644
--- a/arch/powerpc/include/asm/paravirt.h
+++ b/arch/powerpc/include/asm/paravirt.h
@@ -20,6 +20,8 @@ extern void __init native_MMU_init(void);
 extern void native_flush_dcache_page(struct page *page);
 extern void native_update_mmu_cache(struct vm_area_struct *vma,
 				unsigned long address, pte_t pte);
+extern void wrhv_update_mmu_cache(struct vm_area_struct *vma,
+				unsigned long address, pte_t pte);
 extern int native_map_page(unsigned long va, phys_addr_t pa, int flags);
 extern int native_kgdb_arch_handle_exception(int vector, int signo,
 				int err_code,
diff --git a/arch/powerpc/kernel/paravirt.c b/arch/powerpc/kernel/paravirt.c
index 888418e..8f92d51 100644
--- a/arch/powerpc/kernel/paravirt.c
+++ b/arch/powerpc/kernel/paravirt.c
@@ -138,7 +138,11 @@ struct pv_mmu_ops pv_mmu_ops = {
 	.MMU_setup = native_MMU_setup,
 	.MMU_init = native_MMU_init,
 	.flush_dcache_page = native_flush_dcache_page,
+#ifdef CONFIG_WRHV_MILS
+	.update_mmu_cache = wrhv_update_mmu_cache,
+#else
 	.update_mmu_cache = native_update_mmu_cache,
+#endif
 	.map_page = native_map_page,
 	.early_init_dt_scan_memory =
 		native_early_init_dt_scan_memory,
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 64a2918..8ce048c 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -921,6 +921,10 @@ void wrhv_update_mmu_cache(struct vm_area_struct *vma, unsigned long address,
 		 */
 		if (!PageReserved(page) && (pte_val(pte) & _PAGE_USER)
 		    && !test_bit(PG_arch_1, &page->flags)) {
+#ifdef CONFIG_WRHV_MILS
+			flush_tlb_page(vma, address);
+#endif
+
 			if (vma->vm_mm == current->active_mm) {
 				__flush_dcache_icache((void *) address);
 			} else
diff --git a/arch/powerpc/kernel/wrhv_misc_32.S b/arch/powerpc/kernel/wrhv_misc_32.S
index 3f96eee..72670a7 100644
--- a/arch/powerpc/kernel/wrhv_misc_32.S
+++ b/arch/powerpc/kernel/wrhv_misc_32.S
@@ -44,8 +44,13 @@ _GLOBAL(wrhv_int_unlock)
  * Flush MMU TLB
  */
 _GLOBAL(paravirt_tlbia)
+#ifdef CONFIG_WRHV_MILS
+	lis	r0, VBI_SYS_vmmu_tlbflush@h
+	ori	r0, r0, VBI_SYS_vmmu_tlbflush@l
+#else
 	lis	r0, VBI_SYS_tlb_flush@h
 	ori	r0, r0, VBI_SYS_tlb_flush@l
+#endif
 	sc
 	blr
 
@@ -53,8 +58,13 @@ _GLOBAL(paravirt_tlbia)
  * Flush MMU TLB for a particular address
  */
 _GLOBAL(paravirt_tlbie)
+#ifdef CONFIG_WRHV_MILS
+	lis	r0, VBI_SYS_invalidate_tlb_entry@h
+	ori	r0, r0, VBI_SYS_invalidate_tlb_entry@l
+#else
 	lis	r0, VBI_SYS_tlb_flush@h
 	ori	r0, r0, VBI_SYS_tlb_flush@l
+#endif
 	sc
 	blr
 
-- 
1.7.0

