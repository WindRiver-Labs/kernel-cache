From 05f4dbb89a1b8602a016897efed4f36204a6fdb1 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Thu, 5 Nov 2009 17:40:55 -0500
Subject: [PATCH 07/22] v2009.10.16: 64-bit hypervisor and 32-bit guest

Integrate fix from Oct16 drop

[cf: 02t,29sep09,mpk  handle 64-bit hypervisor and 32-bit
 guest case for MEM_CTL]

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/vbi/syscall.h |    9 +++++----
 1 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 8a15005..837683a 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -20,6 +20,7 @@
 #include <linux/linkage.h>
 #include <vbi/types.h>
 #include <vbi/arch.h>
+#include <vbi/interface.h>
 #include <vbi/syscalls.h>
 
 #ifndef	_ASMLANGUAGE
@@ -70,10 +71,10 @@ typedef struct vbiMsgCtl
 /* memory read/write control structure */
 typedef struct vbiMemCtl
 {
-	void *pBuffer;	    /* address of target context	    */
-	void *pAddress;	    /* address of calling context	    */
-	size_t sizeIn;	    /* number of bytes to be read	    */
-	size_t sizeOut;	    /* number of bytes successfully read    */
+	VB_ALIGN_FIELD_64 (void *pBuffer, pad1); /* address of target context   */
+	VB_ALIGN_FIELD_64 (void *pAddress, pad2);/* address of calling context  */
+	uint64_t sizeIn;	    /* number of bytes to be read	    */
+	uint64_t sizeOut;	    /* number of bytes successfully read    */
 	uint32_t flags;	    /* data/instruction flush option	    */
 } VBI_MEM_CTL;
 
-- 
1.6.5.2

