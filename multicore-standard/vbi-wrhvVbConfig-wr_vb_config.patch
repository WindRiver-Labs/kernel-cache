From 2e0fc295d10fe37943b9c1fb97caa5870d1c3aee Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Tue, 1 Dec 2009 21:45:02 -0500
Subject: [PATCH 04/43] vbi: wrhvVbConfig/wr_vb_config/

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/include/asm/arch_vbi.h |    4 ++--
 include/vbi/compat.h                |    1 +
 include/vbi/interface.h             |    4 ++--
 include/vbi/vbi.h                   |    6 +++---
 kernel/vbi/lib.c                    |   12 ++++++------
 kernel/vbi/wrhv.c                   |    4 ++--
 6 files changed, 16 insertions(+), 15 deletions(-)

diff --git a/arch/powerpc/include/asm/arch_vbi.h b/arch/powerpc/include/asm/arch_vbi.h
index bfd023a..81e0673 100644
--- a/arch/powerpc/include/asm/arch_vbi.h
+++ b/arch/powerpc/include/asm/arch_vbi.h
@@ -612,8 +612,8 @@ endIntVcoreLock:
  */
 
 #define VBI_CONFIG_ADDR_GET(reg)		\
-	lis reg, HIADJ(wrhvVbConfig);		\
-	lwz reg, LO(wrhvVbConfig)(reg)
+	lis reg, HIADJ(wr_vb_config);		\
+	lwz reg, LO(wr_vb_config)(reg)
 
 /*
  * VBI_CNTRL_ADDR_GET - Get virtual core control structure base address
diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index bede073..b4fddb2 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -51,6 +51,7 @@
  */
 #define wrhvVbStatus		wr_vb_status
 #define wrhvVbControl		wr_vb_control
+#define wrhvVbConfig		wr_vb_config
 
 #define memoryAliasSize		mem_alias_size
 #define memoryAliasAddress	mem_alias_addr
diff --git a/include/vbi/interface.h b/include/vbi/interface.h
index 6c09842..240089f 100644
--- a/include/vbi/interface.h
+++ b/include/vbi/interface.h
@@ -49,7 +49,7 @@ flag.
 The VBI library provides a initialization function vbi_init() to ensures
 that Hypervisor version number is compatible with the VBI library in
 use. If the versions match then the configuration, status and control
-pointers are stored respectively to wrhvVbConfig, wrhvStatus and
+pointers are stored respectively to wr_vb_config, wrhvStatus and
 wr_vb_control.
 
 Therefore a virtual board must always call vbi_init() before accessing
@@ -58,7 +58,7 @@ vbi_init() description in the VBI API description document for more
 information.
 
 Once the VBI library is initialized the virtual board should employ the
-provided macros in order to access the fieds in wrhVbConfig,
+provided macros in order to access the fieds in wr_vb_config,
 wr_vb_status and wr_vb_control data structures. Accessing these
 structures via the VBI function guaranties source level compatibily
 between VBI versions.
diff --git a/include/vbi/vbi.h b/include/vbi/vbi.h
index cc140b3..827b8a2 100644
--- a/include/vbi/vbi.h
+++ b/include/vbi/vbi.h
@@ -279,7 +279,7 @@ various data structures.
  * RETURNS: virtual core configuration structure base address
  *
  */
-#define VBI_CONFIG_ADDR_GET()       (wrhvVbConfig)
+#define VBI_CONFIG_ADDR_GET()       (wr_vb_config)
 
 /*
  * VBI_CONTEXT_ID_GET - Get virtual core context Id
@@ -505,7 +505,7 @@ various data structures.
 #define VBI_PANIC(vector, halt)					\
 {								\
 	printk("core%d: unhandled exception: 0x%x\n",		\
-		wrhvVbConfig->coreId, vector);			\
+		wr_vb_config->coreId, vector);			\
 	if (halt)						\
         	vbi_panic("unhandled exception");		\
 }							 
@@ -518,7 +518,7 @@ struct vbi_clk_hook
 
 /* externs */
 
-extern struct vb_config *wrhvVbConfig;
+extern struct vb_config *wr_vb_config;
 extern struct vb_status *wr_vb_status;
 extern struct vb_control *wr_vb_control;
 extern int32_t wrhvVbIntNested;
diff --git a/kernel/vbi/lib.c b/kernel/vbi/lib.c
index f594e57..425298e 100644
--- a/kernel/vbi/lib.c
+++ b/kernel/vbi/lib.c
@@ -103,10 +103,10 @@ The address of this area is kept in the global variable wrhvControl.
 #include <linux/module.h>
 #include <vbi/vbi.h>
 
-struct vb_config *wrhvVbConfig;	/* The address of the core's Config area
+struct vb_config *wr_vb_config;	/* The address of the core's Config area
 				 * This value is passed to the virtual board
 				 * as the first parameter upon startup */
-EXPORT_SYMBOL(wrhvVbConfig);
+EXPORT_SYMBOL(wr_vb_config);
 
 struct vb_control *wr_vb_control;/* The address of the core's Control area */
 
@@ -127,7 +127,7 @@ int32_t wrhvVbIntNested;	/* Used by VBI IRQ/exception management */
  * configuration page and initializes the following global variables for future
  * reference.
  *
- * Configuration page base address is stored in wrhvVbConfig
+ * Configuration page base address is stored in wr_vb_config
  * Status page base address is stored in wr_vb_status
  * Control page base address is stored in wr_vb_control
  *
@@ -193,8 +193,8 @@ void vbi_init(struct vb_config *config)
 					 (config->minor < vbiVersionMinor))
 		vbi_panic("Invalid vbi version");
 #endif
-	wrhvVbConfig = config;
-	wr_vb_control = wrhvVbConfig->vbControl;
-	wr_vb_status = wrhvVbConfig->vbStatus;
+	wr_vb_config = config;
+	wr_vb_control = wr_vb_config->vbControl;
+	wr_vb_status = wr_vb_config->vbStatus;
 
 }
diff --git a/kernel/vbi/wrhv.c b/kernel/vbi/wrhv.c
index 43d166d..59fa6a7 100644
--- a/kernel/vbi/wrhv.c
+++ b/kernel/vbi/wrhv.c
@@ -141,8 +141,8 @@ struct irq_chip wrhv_ipi_irq_chip = {
 unsigned long wrhv_calculate_cpu_khz(void)
 {
 	printk(KERN_DEBUG "WRHV: Timestamp Frequency %u Hz\n",
-		wrhvVbConfig->stamp_freq);
-	return wrhvVbConfig->stamp_freq / 1000;
+		wr_vb_config->stamp_freq);
+	return wr_vb_config->stamp_freq / 1000;
 }
 
 irqreturn_t __weak wrhv_timer_interrupt(int irq, void *dev_id)
-- 
1.6.5.2

