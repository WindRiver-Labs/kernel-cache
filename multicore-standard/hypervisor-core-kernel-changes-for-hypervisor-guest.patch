From 82fcc6e86aa034d8bd6af05cbf061c4654ebacc0 Mon Sep 17 00:00:00 2001
From: WRS Support <support@windriver.com>
Date: Fri, 2 Oct 2009 16:12:13 -0400
Subject: [PATCH] hypervisor: core kernel changes for hypervisor/guest

This represents changes to existing core kernel files in
order to support linux as a guest OS on WR hypervisor.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 include/linux/interrupt.h    |    2 +-
 init/Kconfig                 |    2 ++
 kernel/Makefile              |    1 +
 kernel/dma-coherent.c        |   21 ++++++++++++++++++++-
 kernel/module.c              |    1 +
 kernel/time/Kconfig          |    5 +++++
 kernel/time/tick-broadcast.c |   15 +++++++++++++++
 kernel/time/tick-oneshot.c   |    5 ++++-
 8 files changed, 49 insertions(+), 3 deletions(-)

diff --git a/include/linux/interrupt.h b/include/linux/interrupt.h
index 58ff4e7..0c5ca39 100644
--- a/include/linux/interrupt.h
+++ b/include/linux/interrupt.h
@@ -92,7 +92,7 @@ extern void devm_free_irq(struct device *dev, unsigned int irq, void *dev_id);
  * places left. So the only effect should be slightly increased
  * irqs-off latencies.
  */
-#ifdef CONFIG_LOCKDEP
+#if defined(CONFIG_LOCKDEP) || defined(CONFIG_PARAVIRT)
 # define local_irq_enable_in_hardirq()	do { } while (0)
 #else
 # define local_irq_enable_in_hardirq()	local_irq_enable()
diff --git a/init/Kconfig b/init/Kconfig
index 182303f..a2cef77 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -18,6 +18,8 @@ config DEFCONFIG_LIST
 
 menu "General setup"
 
+source init/Kconfig.wrhv
+
 config EXPERIMENTAL
 	bool "Prompt for development and/or incomplete code/drivers"
 	---help---
diff --git a/kernel/Makefile b/kernel/Makefile
index 77a91d8..c723c24 100644
--- a/kernel/Makefile
+++ b/kernel/Makefile
@@ -35,6 +35,7 @@ obj-$(CONFIG_FUTEX) += futex.o
 ifeq ($(CONFIG_COMPAT),y)
 obj-$(CONFIG_FUTEX) += futex_compat.o
 endif
+obj-$(CONFIG_WRHV) += vbi/
 obj-$(CONFIG_RT_MUTEXES) += rtmutex.o
 obj-$(CONFIG_DEBUG_RT_MUTEXES) += rtmutex-debug.o
 obj-$(CONFIG_RT_MUTEX_TESTER) += rtmutex-tester.o
diff --git a/kernel/dma-coherent.c b/kernel/dma-coherent.c
index c1d4d5b..6bf332a 100644
--- a/kernel/dma-coherent.c
+++ b/kernel/dma-coherent.c
@@ -5,6 +5,10 @@
 #include <linux/kernel.h>
 #include <linux/dma-mapping.h>
 
+#ifdef CONFIG_WRHV
+#include <vbi/interface.h>
+#endif
+
 struct dma_coherent_mem {
 	void		*virt_base;
 	u32		device_base;
@@ -116,8 +120,23 @@ int dma_alloc_from_coherent(struct device *dev, ssize_t size,
 		int page = bitmap_find_free_region(mem->bitmap, mem->size,
 						     order);
 		if (page >= 0) {
-			*dma_handle = mem->device_base + (page << PAGE_SHIFT);
 			*ret = mem->virt_base + (page << PAGE_SHIFT);
+#ifdef CONFIG_WRHV
+			if (paravirt_enabled()) {
+				u64 paddr;
+
+				if (vbiGuestDmaAddrGet((void *)(*ret),
+							&paddr) == 0)
+					*dma_handle = (dma_addr_t)paddr;
+				else {
+					bitmap_release_region(mem->bitmap,
+							      mem->size, order);
+					return 0;
+				}
+			} else
+#endif
+			*dma_handle = mem->device_base + (page << PAGE_SHIFT);
+
 			memset(*ret, 0, size);
 		} else if (mem->flags & DMA_MEMORY_EXCLUSIVE)
 			*ret = NULL;
diff --git a/kernel/module.c b/kernel/module.c
index 39eca39..4d93125 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -1892,6 +1892,7 @@ static noinline struct module *load_module(void __user *umod,
 
 	/* Suck in entire file: we'll want most of it. */
 	/* vmalloc barfs on "unusual" numbers.  Check here */
+
 	if (len > 64 * 1024 * 1024 || (hdr = vmalloc(len)) == NULL)
 		return ERR_PTR(-ENOMEM);
 	if (copy_from_user(hdr, umod, len) != 0) {
diff --git a/kernel/time/Kconfig b/kernel/time/Kconfig
index 8d53106..6371418 100644
--- a/kernel/time/Kconfig
+++ b/kernel/time/Kconfig
@@ -5,6 +5,10 @@ config TICK_ONESHOT
 	bool
 	default n
 
+config WRHV_X86_HRTIMERS
+	bool
+	default n
+
 config NO_HZ
 	bool "Tickless System (Dynamic Ticks)"
 	depends on GENERIC_TIME && GENERIC_CLOCKEVENTS
@@ -18,6 +22,7 @@ config HIGH_RES_TIMERS
 	bool "High Resolution Timer Support"
 	depends on GENERIC_TIME && GENERIC_CLOCKEVENTS
 	select TICK_ONESHOT
+	select WRHV_X86_HRTIMERS if WRHV && X86
 	help
 	  This option enables high resolution timer support. If your
 	  hardware is not capable then this option only increases
diff --git a/kernel/time/tick-broadcast.c b/kernel/time/tick-broadcast.c
index cb01cd8..ba8b944 100644
--- a/kernel/time/tick-broadcast.c
+++ b/kernel/time/tick-broadcast.c
@@ -430,7 +430,15 @@ again:
 		 */
 		if (tick_broadcast_set_event(next_event, 0))
 			goto again;
+#ifdef CONFIG_WRHV_X86_HRTIMERS
+	} else {
+		now = ktime_get();
+		next_event = ktime_add_ns(now, dev->min_delta_ns);
+		tick_broadcast_set_event(next_event, 1);
+	}
+#else
 	}
+#endif
 	spin_unlock(&tick_broadcast_lock);
 }
 
@@ -528,7 +536,9 @@ void tick_broadcast_setup_oneshot(struct clock_event_device *bc)
 		 * broadcast device to fire.
 		 */
 		mask = tick_broadcast_mask;
+#ifndef CONFIG_WRHV_X86_HRTIMERS
 		cpu_clear(cpu, mask);
+#endif
 		cpus_or(tick_broadcast_oneshot_mask,
 			tick_broadcast_oneshot_mask, mask);
 
@@ -552,7 +562,12 @@ void tick_broadcast_switch_to_oneshot(void)
 
 	tick_broadcast_device.mode = TICKDEV_MODE_ONESHOT;
 	bc = tick_broadcast_device.evtdev;
+
+#ifdef CONFIG_WRHV_X86_HRTIMERS
+	if (bc && !smp_processor_id())
+#else
 	if (bc)
+#endif
 		tick_broadcast_setup_oneshot(bc);
 	spin_unlock_irqrestore(&tick_broadcast_lock, flags);
 }
diff --git a/kernel/time/tick-oneshot.c b/kernel/time/tick-oneshot.c
index 2e8de67..7910e41 100644
--- a/kernel/time/tick-oneshot.c
+++ b/kernel/time/tick-oneshot.c
@@ -104,9 +104,12 @@ int tick_switch_to_oneshot(void (*handler)(struct clock_event_device *))
 	struct tick_device *td = &__get_cpu_var(tick_cpu_device);
 	struct clock_event_device *dev = td->evtdev;
 
+#ifndef CONFIG_WRHV_X86_HRTIMERS
 	if (!dev || !(dev->features & CLOCK_EVT_FEAT_ONESHOT) ||
 		    !tick_device_is_functional(dev)) {
-
+#else
+	if (!dev || !(dev->features & CLOCK_EVT_FEAT_ONESHOT)) {
+#endif
 		printk(KERN_INFO "Clockevents: "
 		       "could not switch to one-shot mode:");
 		if (!dev) {
-- 
1.6.5.2

