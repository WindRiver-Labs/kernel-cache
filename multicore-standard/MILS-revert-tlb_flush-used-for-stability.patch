From a2e100cddb6d2d6cbf9056cd622ecb3f24f2a5c0 Mon Sep 17 00:00:00 2001
From: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
Date: Fri, 26 Mar 2010 12:52:56 -0400
Subject: [PATCH] (MILS) revert tlb_flush used for stability

Given that an outstanding cache flushing problem with the MILS sk
has now been addressed there is no longer a need to keep this change.
Without this modification random unexplained segfaults were
observed in the guest while booting standard file systems.

Signed-off-by: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
---
 arch/powerpc/include/asm/paravirt.h |    2 --
 arch/powerpc/kernel/paravirt.c      |    4 ----
 arch/powerpc/kernel/vbi/wrhv.c      |    4 ----
 3 files changed, 0 insertions(+), 10 deletions(-)

diff --git a/arch/powerpc/include/asm/paravirt.h b/arch/powerpc/include/asm/paravirt.h
index 707413c..caca81c 100644
--- a/arch/powerpc/include/asm/paravirt.h
+++ b/arch/powerpc/include/asm/paravirt.h
@@ -20,8 +20,6 @@ extern void __init native_MMU_init(void);
 extern void native_flush_dcache_page(struct page *page);
 extern void native_update_mmu_cache(struct vm_area_struct *vma,
 				unsigned long address, pte_t pte);
-extern void wrhv_update_mmu_cache(struct vm_area_struct *vma,
-				unsigned long address, pte_t pte);
 extern int native_map_page(unsigned long va, phys_addr_t pa, int flags);
 extern int native_kgdb_arch_handle_exception(int vector, int signo,
 				int err_code,
diff --git a/arch/powerpc/kernel/paravirt.c b/arch/powerpc/kernel/paravirt.c
index 8f92d51..888418e 100644
--- a/arch/powerpc/kernel/paravirt.c
+++ b/arch/powerpc/kernel/paravirt.c
@@ -138,11 +138,7 @@ struct pv_mmu_ops pv_mmu_ops = {
 	.MMU_setup = native_MMU_setup,
 	.MMU_init = native_MMU_init,
 	.flush_dcache_page = native_flush_dcache_page,
-#ifdef CONFIG_WRHV_MILS
-	.update_mmu_cache = wrhv_update_mmu_cache,
-#else
 	.update_mmu_cache = native_update_mmu_cache,
-#endif
 	.map_page = native_map_page,
 	.early_init_dt_scan_memory =
 		native_early_init_dt_scan_memory,
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index ac1a001..e4fc5fc 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -970,10 +970,6 @@ void wrhv_update_mmu_cache(struct vm_area_struct *vma, unsigned long address,
 		 */
 		if (!PageReserved(page) && (pte_val(pte) & _PAGE_USER)
 		    && !test_bit(PG_arch_1, &page->flags)) {
-#ifdef CONFIG_WRHV_MILS
-			flush_tlb_page(vma, address);
-#endif
-
 			if (vma->vm_mm == current->active_mm) {
 				__flush_dcache_icache((void *) address);
 			} else
-- 
1.6.5.2

