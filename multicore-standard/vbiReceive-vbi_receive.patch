From d8ee5746895c58e3886856188a9c0b3643475028 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 18 Nov 2009 12:35:06 -0500
Subject: [PATCH 65/80] vbiReceive --> vbi_receive

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/syscalls.S |    2 +-
 arch/x86/kernel/vbi/syscalls.S     |    2 +-
 include/vbi/syscall.h              |    2 +-
 kernel/vbi/msg.c                   |    4 ++--
 4 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/syscalls.S b/arch/powerpc/kernel/vbi/syscalls.S
index d3b83ba..e22d0b6 100644
--- a/arch/powerpc/kernel/vbi/syscalls.S
+++ b/arch/powerpc/kernel/vbi/syscalls.S
@@ -274,7 +274,7 @@ FUNC_END(vbi_rx_op)
  *
  * This routine makes a hypercall in order to reply to a message received from
  * another context. A message is received from remote context by calling
- * vbiReceive(). The reply will unblock the recipient which may preempt
+ * vbi_receive(). The reply will unblock the recipient which may preempt
  * the caller.
  *
  */
diff --git a/arch/x86/kernel/vbi/syscalls.S b/arch/x86/kernel/vbi/syscalls.S
index 24988b6..14c3077 100644
--- a/arch/x86/kernel/vbi/syscalls.S
+++ b/arch/x86/kernel/vbi/syscalls.S
@@ -96,7 +96,7 @@ vbi_rx_op:
  *
  * This routine makes a hypercall in order to reply to a message received from
  * another context. A message is received from remote context by calling
- * vbiReceive(). The reply will unblock the recipient which may preempt
+ * vbi_receive(). The reply will unblock the recipient which may preempt
  * the caller.
  *
  * RETURNS: OK or an error number in case of failure
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 89da136..1488f68 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -103,7 +103,7 @@ extern asmlinkage vbiStatus_t vbi_send(vbiCtx_t id, void *smsg, size_t slen,
 			    void *rmsg, size_t rlen, VBI_MSG_INFO *info, 
 			    VBI_MSG_CTL *ctl);
 /* message receive */
-extern vbiStatus_t vbiReceive(void *rmsg, uint32_t rlen, VBI_MSG_INFO *info,
+extern vbiStatus_t vbi_receive(void *rmsg, uint32_t rlen, VBI_MSG_INFO *info,
 				VBI_MSG_CTL *ctl);
 /* message reply */
 extern asmlinkage int32_t vbi_reply(vbiCtx_t id, void *smsg, size_t slen, 
diff --git a/kernel/vbi/msg.c b/kernel/vbi/msg.c
index 3ff03f3..e79f19d 100644
--- a/kernel/vbi/msg.c
+++ b/kernel/vbi/msg.c
@@ -21,7 +21,7 @@
 #define _DEBUGM(fmt, args...) printk(fmt, ##args)
 
 /*
- * vbiReceive - Receive a message from another context
+ * vbi_receive - Receive a message from another context
  *
  * This routine makes a hypercall and waits for a message to be received from
  * another context. It blocks until a message is received. This operation may
@@ -32,7 +32,7 @@
  *
  */
 
-vbiStatus_t vbiReceive(void *rmsg, uint32_t rlen, VBI_MSG_INFO *info,
+vbiStatus_t vbi_receive(void *rmsg, uint32_t rlen, VBI_MSG_INFO *info,
 			VBI_MSG_CTL *ctl)
 {
 	vbiStatus_t retval;
-- 
1.6.5.2

