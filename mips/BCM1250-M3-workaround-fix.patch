From 26bebdc4750b703ab364fbb4e3baccf081446331 Mon Sep 17 00:00:00 2001
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Thu, 30 Oct 2008 09:11:41 +0800
Subject: [PATCH] BCM1250 M3 workaround fix

Original M3 workaround code in tlb refill handler for
BCM1250 uncorrectly handles the kseg2 area address
(0xFFFFFFFFC0000000 and above), and causes soft hang
when kernel loads modules.

Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
Signed-off-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 arch/mips/mm/tlbex.c |   39 ++++++++++++++++++++++-----------------
 arch/mips/mm/uasm.c  |   11 +++++++----
 arch/mips/mm/uasm.h  |    3 ++-
 3 files changed, 31 insertions(+), 22 deletions(-)

diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c
index 5a0835b..0ff0deb 100644
--- a/arch/mips/mm/tlbex.c
+++ b/arch/mips/mm/tlbex.c
@@ -6,7 +6,7 @@
  * Synthesize TLB refill handlers at runtime.
  *
  * Copyright (C) 2004, 2005, 2006, 2008  Thiemo Seufer
- * Copyright (C) 2005, 2007  Maciej W. Rozycki
+ * Copyright (C) 2005, 2007, 2008  Maciej W. Rozycki
  * Copyright (C) 2006  Ralf Baechle (ralf@linux-mips.org)
  *
  * ... and the days got worse and worse and now you see
@@ -200,6 +200,23 @@ static void __cpuinit build_r3000_tlb_refill_handler(void)
 static u32 final_handler[64] __cpuinitdata;
 
 /*
+ * To avoid the BCM1250 M3 erratum check whether EntryHi is consistent
+ * with BadVAddr and return for the exception to retrigger if not.
+ */
+static void __cpuinit build_bcm1250_m3_war(u32 **p, struct uasm_reloc **r)
+{
+	uasm_i_dmfc0(p, K0, C0_BADVADDR);
+	uasm_i_dmfc0(p, K1, C0_ENTRYHI);
+	uasm_i_xor(p, K0, K0, K1);
+	uasm_i_dsll(p, K1, K0, 20);
+	uasm_i_dsrl32(p, K1, K1, (20 + PAGE_SHIFT + 1) - 32);
+	uasm_i_dsrl32(p, K0, K0, 30);
+	uasm_i_or(p, K0, K0, K1);
+	uasm_il_bnez(p, r, K0, label_leave);
+	/* No need for uasm_i_nop */
+}
+
+/*
  * Hazards
  *
  * From the IDT errata for the QED RM5230 (Nevada), processor revision 1.0:
@@ -670,14 +687,8 @@ static void __cpuinit build_r4000_tlb_refill_handler(void)
 	/*
 	 * create the plain linear handler
 	 */
-	if (bcm1250_m3_war()) {
-		UASM_i_MFC0(&p, K0, C0_BADVADDR);
-		UASM_i_MFC0(&p, K1, C0_ENTRYHI);
-		uasm_i_xor(&p, K0, K0, K1);
-		UASM_i_SRL(&p, K0, K0, PAGE_SHIFT + 1);
-		uasm_il_bnez(&p, &r, K0, label_leave);
-		/* No need for uasm_i_nop */
-	}
+	if (bcm1250_m3_war())
+		build_bcm1250_m3_war(&p, &r);
 
 #ifdef CONFIG_64BIT
 	build_get_pmde64(&p, &l, &r, K0, K1); /* get pmd in K1 */
@@ -1133,14 +1144,8 @@ static void __cpuinit build_r4000_tlb_load_handler(void)
 	memset(labels, 0, sizeof(labels));
 	memset(relocs, 0, sizeof(relocs));
 
-	if (bcm1250_m3_war()) {
-		UASM_i_MFC0(&p, K0, C0_BADVADDR);
-		UASM_i_MFC0(&p, K1, C0_ENTRYHI);
-		uasm_i_xor(&p, K0, K0, K1);
-		UASM_i_SRL(&p, K0, K0, PAGE_SHIFT + 1);
-		uasm_il_bnez(&p, &r, K0, label_leave);
-		/* No need for uasm_i_nop */
-	}
+	if (bcm1250_m3_war())
+		build_bcm1250_m3_war(&p, &r);
 
 	build_r4000_tlbchange_handler_head(&p, &l, &r, K0, K1);
 	build_pte_present(&p, &l, &r, K0, K1, label_nopage_tlbl);
diff --git a/arch/mips/mm/uasm.c b/arch/mips/mm/uasm.c
index f467199..8224faa 100644
--- a/arch/mips/mm/uasm.c
+++ b/arch/mips/mm/uasm.c
@@ -8,7 +8,7 @@
  * effects like branch delay slots.
  *
  * Copyright (C) 2004, 2005, 2006, 2008  Thiemo Seufer
- * Copyright (C) 2005, 2007  Maciej W. Rozycki
+ * Copyright (C) 2005, 2007, 2008  Maciej W. Rozycki
  * Copyright (C) 2006  Ralf Baechle (ralf@linux-mips.org)
  */
 
@@ -62,9 +62,10 @@ enum opcode {
 	insn_dmtc0, insn_dsll, insn_dsll32, insn_dsra, insn_dsrl,
 	insn_dsrl32, insn_dsubu, insn_eret, insn_j, insn_jal, insn_jr,
 	insn_ld, insn_ll, insn_lld, insn_lui, insn_lw, insn_mfc0,
-	insn_mtc0, insn_ori, insn_pref, insn_rfe, insn_sc, insn_scd,
-	insn_sd, insn_sll, insn_sra, insn_srl, insn_subu, insn_sw,
-	insn_tlbp, insn_tlbwi, insn_tlbwr, insn_xor, insn_xori
+	insn_mtc0, insn_or, insn_ori, insn_pref, insn_rfe, insn_sc,
+	insn_scd, insn_sd, insn_sll, insn_sra, insn_srl, insn_subu,
+	insn_sw, insn_tlbp, insn_tlbwi, insn_tlbwr, insn_xor,
+	insn_xori
 };
 
 struct insn {
@@ -116,6 +117,7 @@ static struct insn insn_table[] __cpuinitdata = {
 	{ insn_lw,  M(lw_op, 0, 0, 0, 0, 0),  RS | RT | SIMM },
 	{ insn_mfc0,  M(cop0_op, mfc_op, 0, 0, 0, 0),  RT | RD | SET},
 	{ insn_mtc0,  M(cop0_op, mtc_op, 0, 0, 0, 0),  RT | RD | SET},
+	{ insn_or,  M(spec_op, 0, 0, 0, 0, or_op),  RS | RT | RD },
 	{ insn_ori,  M(ori_op, 0, 0, 0, 0, 0),  RS | RT | UIMM },
 	{ insn_pref,  M(pref_op, 0, 0, 0, 0, 0),  RS | RT | SIMM },
 	{ insn_rfe,  M(cop0_op, cop_op, 0, 0, 0, rfe_op),  0 },
@@ -361,6 +363,7 @@ I_u1s2(_lui)
 I_u2s3u1(_lw)
 I_u1u2u3(_mfc0)
 I_u1u2u3(_mtc0)
+I_u3u1u2(_or)
 I_u2u1u3(_ori)
 I_u2s3u1(_pref)
 I_0(_rfe)
diff --git a/arch/mips/mm/uasm.h b/arch/mips/mm/uasm.h
index c6d1e3d..67e54e4 100644
--- a/arch/mips/mm/uasm.h
+++ b/arch/mips/mm/uasm.h
@@ -4,7 +4,7 @@
  * for more details.
  *
  * Copyright (C) 2004, 2005, 2006, 2008  Thiemo Seufer
- * Copyright (C) 2005  Maciej W. Rozycki
+ * Copyright (C) 2005, 2008  Maciej W. Rozycki
  * Copyright (C) 2006  Ralf Baechle (ralf@linux-mips.org)
  */
 
@@ -77,6 +77,7 @@ Ip_u1s2(_lui);
 Ip_u2s3u1(_lw);
 Ip_u1u2u3(_mfc0);
 Ip_u1u2u3(_mtc0);
+Ip_u3u1u2(_or);
 Ip_u2u1u3(_ori);
 Ip_u2s3u1(_pref);
 Ip_0(_rfe);
-- 
1.6.0.90.g436ed

