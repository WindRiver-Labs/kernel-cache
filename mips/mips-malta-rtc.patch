From 7d806b495323d3605d020e0b7101652baf10a482 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 12 Aug 2008 09:52:55 +0800
Subject: [PATCH] Support CMOS-RTC for Malta Board

This patch supports CMOS-RTC for Malta board while the configuration option,
CONFIG_RTC_LIB is enable in the latest kernel version. Here it's reasonable to
replace CONFIG_RTC_LIB with CONFIG_RTC_CLASS in the future.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 arch/mips/Kconfig                 |    2 +-
 arch/mips/configs/malta_defconfig |    2 +-
 arch/mips/mti-malta/Makefile      |    2 +-
 arch/mips/mti-malta/malta-rtc.c   |   72 +++++++++++++++++++++++++++++++++++++
 4 files changed, 75 insertions(+), 3 deletions(-)
 create mode 100644 arch/mips/mti-malta/malta-rtc.c

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index 4da736e..30387b5 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -6,7 +6,7 @@ config MIPS
 	select HAVE_ARCH_KGDB
 	# Horrible source of confusion.  Die, die, die ...
 	select EMBEDDED
-	select RTC_LIB
+	select RTC_CLASS
 
 mainmenu "Linux/MIPS Kernel Configuration"
 
diff --git a/arch/mips/configs/malta_defconfig b/arch/mips/configs/malta_defconfig
index 74daa0c..763d6c1 100644
--- a/arch/mips/configs/malta_defconfig
+++ b/arch/mips/configs/malta_defconfig
@@ -1126,7 +1126,7 @@ CONFIG_LEGACY_PTY_COUNT=256
 # CONFIG_IPMI_HANDLER is not set
 # CONFIG_WATCHDOG is not set
 CONFIG_HW_RANDOM=m
-CONFIG_RTC=y
+CONFIG_RTC_DRV_CMOS=y
 # CONFIG_R3964 is not set
 # CONFIG_APPLICOM is not set
 # CONFIG_DRM is not set
diff --git a/arch/mips/mti-malta/Makefile b/arch/mips/mti-malta/Makefile
index 3b7dd72..1e41f27 100644
--- a/arch/mips/mti-malta/Makefile
+++ b/arch/mips/mti-malta/Makefile
@@ -8,7 +8,7 @@
 obj-y				:= malta-amon.o malta-cmdline.o \
 				   malta-display.o malta-init.o malta-int.o \
 				   malta-memory.o malta-mtd.o \
-				   malta-platform.o malta-reset.o \
+				   malta-platform.o malta-reset.o malta-rtc.o \
 				   malta-setup.o malta-time.o
 
 obj-$(CONFIG_EARLY_PRINTK)	+= malta-console.o
diff --git a/arch/mips/mti-malta/malta-rtc.c b/arch/mips/mti-malta/malta-rtc.c
new file mode 100644
index 0000000..bd5c8f1
--- /dev/null
+++ b/arch/mips/mti-malta/malta-rtc.c
@@ -0,0 +1,72 @@
+/*
+ *  Registration of Malta RTC platform device.
+ *
+ *  Copyright (C) 2008  Tiejun Chen <tiejun.chen@windriver.com>
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+#include <linux/mc146818rtc.h>
+#include <linux/platform_device.h>
+#include <linux/errno.h>
+#include <linux/init.h>
+#include <linux/ioport.h>
+
+static struct resource malta_platform_rtc_resource[] __initdata = {
+	{
+		.start	= RTC_PORT(0),
+		.end	= RTC_PORT(7),
+		.flags	= IORESOURCE_IO,
+	},
+	{
+		.start	= RTC_IRQ,
+		.end	= RTC_IRQ,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static __init int malta_platform_rtc_add(void)
+{
+	struct platform_device *pdev;
+	int ret;
+
+	pdev = platform_device_alloc("rtc_cmos", -1);
+	if (!pdev)
+		return -ENOMEM;
+
+	ret = platform_device_add_resources(pdev, malta_platform_rtc_resource,
+	                                       ARRAY_SIZE(malta_platform_rtc_resource));
+	if (ret)
+		goto err;
+
+	ret = platform_device_add(pdev);
+	if (ret)
+		goto err;
+
+	/* Try setting rtc as BCD mode to support
+	 * current alarm code if possible.
+	 */
+	if (!RTC_ALWAYS_BCD)
+		CMOS_WRITE(CMOS_READ(RTC_CONTROL) & ~RTC_DM_BINARY, RTC_CONTROL);
+
+	return 0;
+
+err:
+	platform_device_put(pdev);
+
+	return ret;
+}
+
+device_initcall(malta_platform_rtc_add);
-- 
1.5.5.1

