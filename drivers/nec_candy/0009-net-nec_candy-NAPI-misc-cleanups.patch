From 5ff64c8be07cdcd7d1a97aee053cdea54e31f066 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Tue, 28 Apr 2009 14:17:22 +0900
Subject: [PATCH] net: nec_candy: NAPI misc cleanups

* candy_napi_poll: Make sure netif_rx_complete is required here.
* candy_close: Delete phy_timer first, then disable NAPI for consistency
  with candy_open.
* Cleanup dead/redundant code.

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 drivers/net/nec_candy.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/net/nec_candy.c b/drivers/net/nec_candy.c
index ba94cc4..c19f6d4 100644
--- a/drivers/net/nec_candy.c
+++ b/drivers/net/nec_candy.c
@@ -1011,7 +1011,6 @@ static int candy_napi_rx(struct net_device *dev, int budget)
 	return received;
 }
 
-//static int candy_napi_poll(struct net_device *dev, int *budget)
 static int candy_napi_poll(struct napi_struct *napi, int budget)
 {
 	struct candy_private *pp = container_of(napi, struct candy_private, napi);
@@ -1019,11 +1018,11 @@ static int candy_napi_poll(struct napi_struct *napi, int budget)
 	int work_done;
 
 	spin_lock(&pp->rxlock);
-	work_done = 0;
-	work_done += candy_napi_rx(dev, budget);
+
+	work_done = candy_napi_rx(dev, budget);
 
 	if (work_done < budget) {
-		__netif_rx_complete(dev, napi);
+		netif_rx_complete(dev, napi);
 		candy_unmask_napi_ints(pp->regs);
 	}
 
@@ -1597,14 +1596,15 @@ candy_close(struct net_device *dev)
 {
 	struct candy_private *pp = (struct candy_private *)dev->priv;
 
-#ifdef CONFIG_CANDY_NAPI
-	napi_disable(&pp->napi);
-#endif
 	if (netif_msg_ifdown(pp))
 		printk(KERN_DEBUG "%s: disabling interface\n", dev->name);
 
 	del_timer_sync(&pp->phy_timer);
 
+#ifdef CONFIG_CANDY_NAPI
+	napi_disable(&pp->napi);
+#endif
+
 	if (netif_device_present(dev)) {
 		netif_stop_queue(dev);
 		netif_carrier_off(dev);
-- 
1.6.0.4

