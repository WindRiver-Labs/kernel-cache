From 1bb67f0f265a47a65784835a1801561e6bfb6766 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Tue, 28 Apr 2009 14:12:44 +0900
Subject: [PATCH] net: nec_candy: Introduce platform_data->clks

Now we can configure Candy driver to have proper CLKS settings without
editting source codes.

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 drivers/net/nec_candy.c      |   27 ++++++++++++++++++++++-----
 drivers/net/nec_candy.h      |    6 ++----
 include/linux/nec_candy_pd.h |   12 ++++++++++++
 3 files changed, 36 insertions(+), 9 deletions(-)

diff --git a/drivers/net/nec_candy.c b/drivers/net/nec_candy.c
index cde7f49..f82a1e4 100644
--- a/drivers/net/nec_candy.c
+++ b/drivers/net/nec_candy.c
@@ -496,6 +496,7 @@ static void
 candy_hw_init(struct net_device *dev)
 {
 	struct candy_private *pp = (struct candy_private *)dev->priv;
+	struct nec_candy_platform_data *pdata = pp->dev->platform_data;
 	candy_regs *p = pp->regs;
 	unsigned int temp;
 	u32 afr, ht1, ht2;
@@ -541,11 +542,27 @@ candy_hw_init(struct net_device *dev)
 	candy_out(p->clrt, LCOLW | RETRY);
 	candy_out(p->lmax, MAXF);
 	candy_out(p->vltp, 0x0);
-#ifdef EMMA3P
-	candy_out(p->miic, CLKS166);
-#else
-	candy_out(p->miic, CLKS66);
-#endif
+
+	switch (pdata->clks) {
+	case MIIC_CLKS166:
+		candy_out(p->miic, CLKS166);
+		break;
+	case MIIC_CLKS133:
+		candy_out(p->miic, CLKS133);
+		break;
+	case MIIC_CLKS100:
+		candy_out(p->miic, CLKS100);
+		break;
+	case MIIC_CLKS66:
+		candy_out(p->miic, CLKS66);
+		break;
+	case MIIC_CLKS50:
+		candy_out(p->miic, CLKS50);
+		break;
+	case MIIC_CLKS33:
+	default:
+		candy_out(p->miic, CLKS33);
+	}
 
 	/*
 	 * initialize DMA / FIFO
diff --git a/drivers/net/nec_candy.h b/drivers/net/nec_candy.h
index 60fb72c..669470c 100644
--- a/drivers/net/nec_candy.h
+++ b/drivers/net/nec_candy.h
@@ -173,13 +173,11 @@ static int rx_copybreak = 160;
 #define CLKS33		0x00000004	/* HCLK <= 33 MHz */
 #define CLKS50		0x00000008	/* HCLK <= 50 MHz */
 #define CLKS66		0x0000000c	/* HCLK <= 66 MHz */
-#ifdef EMMA3P
+#define CLKS100		0x00000010	/* HCLK <= 100 MHz */
+#define CLKS133		0x00000014	/* HCLK <= 133 MHz */
 #define CLKS166		0x00000018	/* HCLK <= 166 MHz */
 #define CLKS200		0x0000001c	/* HCLK <= 200 MHz */
 #define MIIC_RESERVED	0x0000801c	/* reserved bit 0 */
-#else
-#define MIIC_RESERVED	0x0000800c	/* reserved bit 0 */
-#endif
 
 /*---------------------------------------------------------------------------*/
 /* MCMD - MII command register (94H Write)                                   */
diff --git a/include/linux/nec_candy_pd.h b/include/linux/nec_candy_pd.h
index 22e23d9..5dd0f7d 100644
--- a/include/linux/nec_candy_pd.h
+++ b/include/linux/nec_candy_pd.h
@@ -14,10 +14,22 @@
 #ifndef NEC_CANDY_PD_H
 #define NEC_CANDY_PD_H
 
+enum candy_clks_enum {
+	MIIC_CLKS25,	/* Reserved */
+	MIIC_CLKS33,	/* Divided by 14 */
+	MIIC_CLKS50,	/* Divided by 20 */
+	MIIC_CLKS66,	/* Divided by 28 */
+	MIIC_CLKS100,	/* Divided by 40 */
+	MIIC_CLKS133,	/* Divided by 56 */
+	MIIC_CLKS166,	/* Divided by 70 */
+	MIIC_CLKS200	/* Reserved */
+};
+
 struct nec_candy_platform_data {
 	unsigned char mac_addr[6];
 	unsigned long pmd_addr;
 	int rmii;	/* 0:MII, 1:RMII */
+	int clks;
 };
 
 #endif
-- 
1.6.0.4

