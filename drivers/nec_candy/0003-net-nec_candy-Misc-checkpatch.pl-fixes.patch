From 08b18e8349cbbf57a6d75b4241edd63a0465e076 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Tue, 28 Apr 2009 14:11:27 +0900
Subject: [PATCH] net: nec_candy: Misc checkpatch.pl fixes

* printk: printk() should include KERN_ facility level
* candy_priv_head: do not initialise statics to 0 or NULL

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 drivers/net/nec_candy.c |   24 ++++++++++++------------
 1 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/drivers/net/nec_candy.c b/drivers/net/nec_candy.c
index a3b30b1..b8590fd 100644
--- a/drivers/net/nec_candy.c
+++ b/drivers/net/nec_candy.c
@@ -104,7 +104,7 @@ static int debug = -1;
 static char version[] __devinitdata =
     DRV_NAME ": 10/100 Ethernet driver v" DRV_VERSION " (" DRV_RELDATE ")";
 
-static struct candy_private *candy_priv_head = NULL;
+static struct candy_private *candy_priv_head;
 
 /***********************************************************************
  * helpers
@@ -613,7 +613,7 @@ candy_down(struct net_device *dev)
 	struct candy_private *pp = (struct candy_private *)dev->priv;
 	candy_regs *p = pp->regs;
 
-	DEBUG_VERBOSE(printk("candy_down() invoked.\n"));
+	DEBUG_VERBOSE(printk(KERN_DEBUG "candy_down() invoked.\n"));
 
 	candy_clear_macc1_bits(p->macc1, SRXEN);
 
@@ -636,7 +636,7 @@ candy_up(struct net_device *dev)
 	struct candy_private *pp = (struct candy_private *)dev->priv;
 	candy_regs *p = pp->regs;
 
-	DEBUG_VERBOSE(printk("candy_up() invoked.\n"));
+	DEBUG_VERBOSE(printk(KERN_DEBUG "candy_up() invoked.\n"));
 
 	/* set number of descriptors */
 	candy_out(p->rxpd, AL | DUWM | DLWM | (RX_RING_SIZE & RNOD_MASK));
@@ -666,8 +666,8 @@ candy_set_filter(struct net_device *dev, int on)
 	int i;
 	u32 bit_nr;
 
-	DEBUG_VERBOSE(printk
-		      ("candy_set_filter() invoked - %s\n", on ? "on" : "off"));
+	DEBUG_VERBOSE(printk(KERN_DEBUG "candy_set_filter() invoked - %s\n",
+			     on ? "on" : "off"));
 
 	ht[0] = ht[1] = 0;
 
@@ -747,7 +747,7 @@ candy_init_rings(struct net_device *dev)
 	struct candy_private *pp = (struct candy_private *)dev->priv;
 	int i;
 
-	DEBUG_VERBOSE(printk("candy_init_rings() invoked.\n"));
+	DEBUG_VERBOSE(printk(KERN_DEBUG "candy_init_rings() invoked.\n"));
 
 	/* tx rings */
 	for (i = 0; i < TX_RING_SIZE; i++) {
@@ -821,7 +821,7 @@ candy_check_intr(ulong isr)
 
 	for (i = 0, j = 1; i < 32; j <<= 1, i++) {
 		if (j & isr)
-			printk("\t%s\n", intr_name[i]);
+			printk(KERN_DEBUG "\t%s\n", intr_name[i]);
 	}
 }
 
@@ -1127,16 +1127,16 @@ candy_rx(struct net_device *dev, ulong isr)
 	if ((candy_in(p->rxdp) != CPHYSADDR(&pp->rx_ring[pp->rx_head])) &&
 	    (candy_in(p->rxdp) != CPHYSADDR(&pp->rx_ring[RX_RING_SIZE]))) {
 		int i;
-		printk
-		    ("%s : unexpected out of rx - rx_ring[rx_head] = (%04x, %d)\n",
-		     dev->name, dp->status, dp->size);
+		printk(KERN_ERR "%s : unexpected out of rx - rx_ring[rx_head] "
+		       "= (%04x, %d)\n", dev->name, dp->status, dp->size);
 		for (i = 0; i < RX_RING_SIZE + 1; i++) {
 			if (p->rxdp == CPHYSADDR(&pp->rx_ring[i]))
 				break;
 		}
 		if (i == RX_RING_SIZE + 1)
 			panic("cannot find current rx tail");
-		printk("\trx_head = %d, rx_tail = %d\n", pp->rx_head, i);
+		printk(KERN_ERR "\trx_head = %d, rx_tail = %d\n",
+		       pp->rx_head, i);
 	}
 #endif
 	return;
@@ -1666,7 +1666,7 @@ candy_set_rx_mode(struct net_device *dev)
 	candy_regs *p = pp->regs;
 	ulong val;
 
-	DEBUG_VERBOSE(printk("candy_set_rx_mode() invoked.\n"));
+	DEBUG_VERBOSE(printk(KERN_DEBUG "candy_set_rx_mode() invoked.\n"));
 
 	/* TODO: need to acquire spinlock and stop receiving */
 
-- 
1.6.0.4

