From 7d69a96b34acf8bb8ac2b2e522ad33fd0073e1af Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Mon, 7 Sep 2009 09:29:21 +0900
Subject: [PATCH 09/12] USB: EMMA EHCI/OHCI: Sanity check on the number of platform resources

This driver now requires the following three resources:
1. 1st IORESOURCE_MEM is for USB HC's operational registers
2. 2nd IORESOURCE_MEM is for pseudo PCI configuration space
3. IORESOURCE_IRQ if for the IRQ number

Check the number of resources prior to any other platform_get_* calls.

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 drivers/usb/host/ehci-emma.c |   12 ++++++++++++
 drivers/usb/host/ohci-emma.c |   12 ++++++++++++
 2 files changed, 24 insertions(+), 0 deletions(-)

diff --git a/drivers/usb/host/ehci-emma.c b/drivers/usb/host/ehci-emma.c
index 848737a..360aa3b 100644
--- a/drivers/usb/host/ehci-emma.c
+++ b/drivers/usb/host/ehci-emma.c
@@ -87,6 +87,18 @@ int usb_ehci_emma_probe(const struct hc_driver *driver,
 	struct resource *res;
 	int irq, ret;
 
+	/*
+	 * Basic sanity checks first.  Board-specific init logic should
+	 * have initialized these three resources and probably board
+	 * specific platform_data.  We don't probe for IRQs, and do only
+	 * minimal sanity checking.
+	 */
+	if (pdev->num_resources != 3) {
+		dev_err(&pdev->dev, "hcd probe: invalid num_resources: %i\n",
+			pdev->num_resources);
+		return -ENODEV;
+	}
+
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	if (!res) {
 		dev_err(&pdev->dev, "Found HC with no register addr!\n");
diff --git a/drivers/usb/host/ohci-emma.c b/drivers/usb/host/ohci-emma.c
index 286a4eb..60b47ce 100644
--- a/drivers/usb/host/ohci-emma.c
+++ b/drivers/usb/host/ohci-emma.c
@@ -85,6 +85,18 @@ int usb_hcd_emma_probe(const struct hc_driver *driver,
 	struct usb_hcd	*hcd;
 	int irq, ret;
 
+	/*
+	 * Basic sanity checks first.  Board-specific init logic should
+	 * have initialized these three resources and probably board
+	 * specific platform_data.  We don't probe for IRQs, and do only
+	 * minimal sanity checking.
+	 */
+	if (pdev->num_resources != 3) {
+		dev_err(&pdev->dev, "hcd probe: invalid num_resources: %i\n",
+			pdev->num_resources);
+		return -ENODEV;
+	}
+
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	if (!res) {
 		dev_err(&pdev->dev, "Found HC with no register addr!\n");
-- 
1.6.3.3

