From 7b02f543057e394d00866990eacb13b2476c275a Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Mon, 7 Sep 2009 09:27:23 +0900
Subject: [PATCH 04/12] USB: EMMA EHCI/OHCI: Misc cleanups and fixes on platform_get_irq

* Use platform_get_irq() instead of platform_get_irq_byname(),
  as it's in a minority in USB HC drivers.
* Take care of 'irq == 0' case.  We would regard it as invalid here.
* Use dev_err() helper which will print dev_name() at the same time.
* Do not 'goto' on error.  We have nothing left to be cleaned up here.
* Use 'irq' instead of refering to 'pdev->resource[1].start' directly.

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 drivers/usb/host/ehci-emma.c |   12 +++++-------
 drivers/usb/host/ohci-emma.c |   12 +++++-------
 2 files changed, 10 insertions(+), 14 deletions(-)

diff --git a/drivers/usb/host/ehci-emma.c b/drivers/usb/host/ehci-emma.c
index 2b441bb..d5d75f7 100644
--- a/drivers/usb/host/ehci-emma.c
+++ b/drivers/usb/host/ehci-emma.c
@@ -92,12 +92,10 @@ int usb_ehci_emma_probe(const struct hc_driver *driver,
 		goto err1;
 	}
 
-	irq = platform_get_irq_byname(pdev, "ehci_irq");
-	if (irq == -ENXIO) {
-		pr_debug("Found HC with no IRQ.  Check %s setup!\n",
-			 pdev->dev.bus_id);
-		ret = -ENODEV;
-		goto err1;
+	irq = platform_get_irq(pdev, 0);
+	if (irq <= 0) {
+		dev_err(&pdev->dev, "Found HC with no IRQ!\n");
+		return -ENODEV;
 	}
 
 	hcd = usb_create_hcd(driver, &pdev->dev, "emma-ehci");
@@ -122,7 +120,7 @@ int usb_ehci_emma_probe(const struct hc_driver *driver,
 	/* cache this readonly data; minimize chip reads */
 	ehci->hcs_params = readl(&ehci->caps->hcs_params);
 
-	ret = usb_add_hcd(hcd, pdev->resource[1].start, IRQF_SHARED);
+	ret = usb_add_hcd(hcd, irq, IRQF_SHARED);
 	if (ret)
 		goto err4;
 
diff --git a/drivers/usb/host/ohci-emma.c b/drivers/usb/host/ohci-emma.c
index 841f13c..efb8b0d 100644
--- a/drivers/usb/host/ohci-emma.c
+++ b/drivers/usb/host/ohci-emma.c
@@ -90,12 +90,10 @@ int usb_hcd_emma_probe(const struct hc_driver *driver,
 		goto err1;
 	}
 
-	irq = platform_get_irq_byname(pdev, "ohci_irq");
-	if (irq == -ENXIO) {
-		pr_debug("Found HC with no IRQ.  Check %s setup!\n",
-			 pdev->dev.bus_id);
-		ret = -ENODEV;
-		goto err1;
+	irq = platform_get_irq(pdev, 0);
+	if (irq <= 0) {
+		dev_err(&pdev->dev, "Found HC with no IRQ!\n");
+		return -ENODEV;
 	}
 
 	hcd = usb_create_hcd(driver, &pdev->dev, "emma-ohci");
@@ -115,7 +113,7 @@ int usb_hcd_emma_probe(const struct hc_driver *driver,
 	emma_start_hc(pdev);
 	ohci_hcd_init(hcd_to_ohci(hcd));
 
-	ret = usb_add_hcd(hcd, pdev->resource[1].start, IRQF_SHARED);
+	ret = usb_add_hcd(hcd, irq, IRQF_SHARED);
 	if (ret)
 		goto err4;
 
-- 
1.6.3.3

