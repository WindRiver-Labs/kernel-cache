From 92fa8224e35291eed4a0def97f27d758c19bdc47 Mon Sep 17 00:00:00 2001
From: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
Date: Mon, 7 Sep 2009 09:28:59 +0900
Subject: [PATCH 08/12] USB: EMMA EHCI/OHCI: Use pci_regs.h

Don't duplicate similar definitions here and there.

Signed-off-by: Shinya Kuribayashi <shinya.kuribayashi@necel.com>
---
 drivers/usb/host/ehci-emma.c |   12 +++++-------
 drivers/usb/host/ohci-emma.c |   12 +++++-------
 2 files changed, 10 insertions(+), 14 deletions(-)

diff --git a/drivers/usb/host/ehci-emma.c b/drivers/usb/host/ehci-emma.c
index b2052df..848737a 100644
--- a/drivers/usb/host/ehci-emma.c
+++ b/drivers/usb/host/ehci-emma.c
@@ -25,11 +25,9 @@
  */
 
 #include <linux/platform_device.h>
+#include <linux/pci_regs.h>
 #include <linux/usb.h>
 
-#define	PCI_CMD_MEM_ENABLE	(0x0002)
-#define	PCI_CMD_MASTER_ENABLE	(0x0004)
-
 static int emma_pseudo_pci_init(struct platform_device *pdev)
 {
 	struct resource *res, *cfg;
@@ -44,11 +42,11 @@ static int emma_pseudo_pci_init(struct platform_device *pdev)
 	if (!base)
 		return -ENOMEM;
 
-	/* PCI BAR */
-	writel(res->start, base + 0x10);
+	/* Base Address Register */
+	writel(res->start, base + PCI_BASE_ADDRESS_0);
 
-	/* PCI command status */
-	writel(PCI_CMD_MASTER_ENABLE | PCI_CMD_MEM_ENABLE, base + 0x4);
+	/* Command */
+	writel(PCI_COMMAND_MASTER | PCI_COMMAND_MEMORY, base + PCI_COMMAND);
 
 	iounmap(base);
 	return 0;
diff --git a/drivers/usb/host/ohci-emma.c b/drivers/usb/host/ohci-emma.c
index 27e95d5..286a4eb 100644
--- a/drivers/usb/host/ohci-emma.c
+++ b/drivers/usb/host/ohci-emma.c
@@ -24,11 +24,9 @@
  */
 
 #include <linux/platform_device.h>
+#include <linux/pci_regs.h>
 #include <linux/usb.h>
 
-#define	PCI_CMD_MEM_ENABLE	(0x0002)
-#define	PCI_CMD_MASTER_ENABLE	(0x0004)
-
 static int emma_pseudo_pci_init(struct platform_device *pdev)
 {
 	struct resource *res, *cfg;
@@ -43,11 +41,11 @@ static int emma_pseudo_pci_init(struct platform_device *pdev)
 	if (!base)
 		return -ENOMEM;
 
-	/* PCI BAR */
-	writel(res->start, base + 0x10);
+	/* Base Address Register */
+	writel(res->start, base + PCI_BASE_ADDRESS_0);
 
-	/* PCI command status */
-	writel(PCI_CMD_MASTER_ENABLE | PCI_CMD_MEM_ENABLE, base + 0x4);
+	/* Command */
+	writel(PCI_COMMAND_MASTER | PCI_COMMAND_MEMORY, base + PCI_COMMAND);
 
 	iounmap(base);
 	return 0;
-- 
1.6.3.3

