this works: 

  time git-fetch-pack --all --thin  /opt/kernel/git-trees/linux-omap

   real 14m54.057s
   user    5m8.539s
   sys     0m20.877s

so does this: and slightly faster..

  time git-fetch-pack --thin  /opt/kernel/git-trees/linux-omap HEAD

  real  9m14.550s
  user    5m8.975s
  sys     0m19.445s

yow-bashfiel-d1 [/opt/HEAD/...build/test]> time git-fetch --no-tags  /opt/kernel/git-trees/linux-omap
warning: no common commits
remote: Generating pack...
remote: Counting objects: 742476
remote: Done counting 743687 objects.
remote: Deltifying 743687 objects...
remote:  100% (743687/743687) done
Indexing 743687 objects...
 100% (743687/743687) done
remote: Total 743687 (delta 613578), reused 712442 (delta 583117)
Resolving 613578 deltas...
 100% (613578/613578) done

real    8m12.037s
user    5m1.423s
sys     0m9.633s

yow-bashfiel-d1 [/opt/HEAD/...build/test]> time git-fetch --no-tags --depth=20 /opt/kernel/git-trees/linux-omap
warning: no common commits
remote: Generating pack...
remote: Counting objects: 6478
remote: Done counting 27469 objects.
remote: Deltifying 27469 objects...
remote:  100% (27469/27469) done
Indexing 27469 objects...
 100% (27469/27469) done
Resolving 4612 deltas...
remote: Total 27469 (delta 4612), reused 15580 (delta 1542)
 100% (4612/4612) done

real    0m59.459s
user    0m48.311s
sys     0m1.396s

<when deepened to 2000, the mips merge worked> : 7m for that deepen


   OR

delete .git/shallow and reclone.


-------------

TODO: update the import script to incrementally deepen when looking
      for an object

      and take a flag to just delete and go nuts with a shallow depth


