From 9e6b21e4f24561faa06de7a993fefd17f32109f2 Mon Sep 17 00:00:00 2001
From: Hong H. Pham <hong.pham@windriver.com>
Date: Wed, 5 Nov 2008 11:41:41 -0500
Subject: [PATCH] SPARC64 handle unaligned 32 relocation bit symbols

Handle unaligned 32 bit symbols when loading kernel modules.

The following code in arch/sparc/include/asm/immediate.h in a LTTng SPARC
patch introduces an unaligned 32 bit symbol.

  #define imv_read(name)				\
	....
	asm(".section __imv,\"aw\",@progbits\n\t"	\
			".uaword %c1, 1f\n\t"		\
	....

This patch was ported from a fix for SPARC32, originally from here:
http://osdir.com/ml/ports.sparc/2006-05/msg00040.html

Signed-off-by: Hong H. Pham <hong.pham@windriver.com>
---
 arch/sparc64/kernel/module.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/arch/sparc64/kernel/module.c b/arch/sparc64/kernel/module.c
index 158484b..5bcbc1b 100644
--- a/arch/sparc64/kernel/module.c
+++ b/arch/sparc64/kernel/module.c
@@ -131,16 +131,17 @@ int apply_relocate_add(Elf64_Shdr *sechdrs,
 			location[3] = v >> 32;
 			location[4] = v >> 24;
 			location[5] = v >> 16;
 			location[6] = v >>  8;
 			location[7] = v >>  0;
 			break;
 
 		case R_SPARC_32:
+		case R_SPARC_UA32:
 			location[0] = v >> 24;
 			location[1] = v >> 16;
 			location[2] = v >>  8;
 			location[3] = v >>  0;
 			break;
 
 		case R_SPARC_DISP32:
 			v -= (Elf64_Addr) location;
-- 
1.5.5.1

