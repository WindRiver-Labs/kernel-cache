From 530d89defa3ba62eb9a24f96325e47468ee17cb6 Mon Sep 17 00:00:00 2001
From: Yongli He <yongli.he@windriver.com>
Date: Mon, 28 Sep 2009 22:32:47 -0400
Subject: [PATCH] sparc: sun ldom vnet driver dead lock

if 2 vnet attach to same vswitch, ldom will report
2 same irq then lead to dead lock on the lp->lock
or the vio->lock

static irqreturn_t ldc_rx(int irq, void *dev_id){
...
out:
	spin_unlock_irqrestore(&lp->lock, flags);
           << here run with out any lock
	send_events(lp, event_mask);
           >> vnet evetn process will dead lock on
           >> lp->lock or the vio->lock

Signed-off-by: Yongli He <yongli.he@windriver.com>
---
 arch/sparc/include/asm/ldc.h |    1 +
 arch/sparc64/kernel/ds.c     |    1 +
 arch/sparc64/kernel/ldc.c    |    4 ++++
 drivers/net/sunvnet.c        |    2 ++
 4 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/arch/sparc/include/asm/ldc.h b/arch/sparc/include/asm/ldc.h
index bdb524a..dd2b30f 100644
--- a/arch/sparc/include/asm/ldc.h
+++ b/arch/sparc/include/asm/ldc.h
@@ -20,6 +20,7 @@ extern void ldom_power_off(void);
  */
 struct ldc_channel_config {
 	void (*event)(void *arg, int event);
+	spinlock_t *serial_lock;
 
 	u32			mtu;
 	unsigned int		rx_irq;
diff --git a/arch/sparc64/kernel/ds.c b/arch/sparc64/kernel/ds.c
index d0fa5aa..0a89b0f 100644
--- a/arch/sparc64/kernel/ds.c
+++ b/arch/sparc64/kernel/ds.c
@@ -1134,6 +1134,7 @@ static int __devinit ds_probe(struct vio_dev *vdev,
 	static int ds_version_printed;
 	struct ldc_channel_config ds_cfg = {
 		.event		= ds_event,
+		.serial_lock	= NULL,
 		.mtu		= 4096,
 		.mode		= LDC_MODE_STREAM,
 	};
diff --git a/arch/sparc64/kernel/ldc.c b/arch/sparc64/kernel/ldc.c
index d689823..b54372c 100644
--- a/arch/sparc64/kernel/ldc.c
+++ b/arch/sparc64/kernel/ldc.c
@@ -892,9 +892,13 @@ handshake_complete:
 	}
 
 out:
+	if (lp->cfg.serial_lock)
+		spin_lock_irqsave(lp->cfg.serial_lock, flags);
 	spin_unlock_irqrestore(&lp->lock, flags);
 
 	send_events(lp, event_mask);
+	if (lp->cfg.serial_lock)
+        	spin_unlock_irqrestore(lp->cfg.serial_lock, flags);
 
 	return IRQ_HANDLED;
 }
diff --git a/drivers/net/sunvnet.c b/drivers/net/sunvnet.c
index 6415ce1..46fa032 100644
--- a/drivers/net/sunvnet.c
+++ b/drivers/net/sunvnet.c
@@ -1117,9 +1117,11 @@ static struct vnet * __devinit vnet_find_parent(struct mdesc_handle *hp,
 
 	return vnet_find_or_create(local_mac);
 }
+static spinlock_t event_lock=__SPIN_LOCK_UNLOCKED("vnet_event");
 
 static struct ldc_channel_config vnet_ldc_cfg = {
 	.event		= vnet_event,
+	.serial_lock	= &event_lock,
 	.mtu		= 64,
 	.mode		= LDC_MODE_UNRELIABLE,
 };
-- 
1.6.3.3

