From a06d000c711863e771fc9cefcab353d87b033832 Mon Sep 17 00:00:00 2001
From: Tonyliu <Bo.Liu@windriver.com>
Date: Thu, 5 Nov 2009 17:53:30 +0800
Subject: [PATCH 8/9] PM: extra protect for MMC/SD

Check MMC/SD host controller busy state before suspending to avoid
inserted card from potential damage of unfinished operation. And add clock
disable/enable to improve power saving.

Signed-off-by: Tonyliu <Bo.Liu@windriver.com>
Signed-off-by: Stanley.Miao <stanley.miao@windriver.com>
---
 drivers/mmc/host/davinci_mmc.c |   29 ++++++++++++++++++++++++++++-
 1 files changed, 28 insertions(+), 1 deletions(-)

diff --git a/drivers/mmc/host/davinci_mmc.c b/drivers/mmc/host/davinci_mmc.c
index 6c76f64..0d4d7e1 100644
--- a/drivers/mmc/host/davinci_mmc.c
+++ b/drivers/mmc/host/davinci_mmc.c
@@ -1237,14 +1237,41 @@ static int __exit davinci_mmcsd_remove(struct platform_device *pdev)
 static int davinci_mmcsd_suspend(struct platform_device *pdev, pm_message_t msg)
 {
 	struct mmc_davinci_host *host = platform_get_drvdata(pdev);
+	unsigned long timeout = jiffies + msecs_to_jiffies(900);
+	u32 mmcst1 = 0;
+	int ret = 0;
+
+	/* Cant suspend while the card is busy,typically because of
+	 * some kind of write.Because the power for card will be
+	 * shutdown in the following mmc_suspend_host(), This can
+	 * prevent the card from potential damage of unfinished operation.
+	*/
+	while (time_before(jiffies, timeout)) {
+		mmcst1  = readl(host->base + DAVINCI_MMCST1);
+		if (!(mmcst1 & MMCST1_BUSY))
+			break;
+		cpu_relax();
+	}
+
+	if (mmcst1 & MMCST1_BUSY)
+		return -EBUSY;
+
+	/*No more active work on bus now, poweroff bus firstly*/
+	ret = mmc_suspend_host(host->mmc, msg);
+	if (ret)
+		return ret;
 
-	return mmc_suspend_host(host->mmc, msg);
+	clk_disable(host->clk);
+
+	return 0;
 }
 
 static int davinci_mmcsd_resume(struct platform_device *pdev)
 {
 	struct mmc_davinci_host *host = platform_get_drvdata(pdev);
 
+	clk_enable(host->clk);
+
 	return mmc_resume_host(host->mmc);
 }
 #else
-- 
1.6.5.2

