From 0ce2026e031cd1fe32d211674a3f0d2908cd96f0 Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Tue, 7 Dec 2010 23:46:17 -0500
Subject: [PATCH] powerpc/booke: disable debug interrupts if ICMP and IDM are enabled

Some applications, like 'usermode-agent', will enable Internal Debug Mode
(IDM) and Instruction Complete Debug Event(ICMP) bits on thread flags.
After On Chip Debugging (eg. MSR_DE bit on Machine State Register)
is enabled on BOOK-E platforms, debug interrupts would be enabled.
So this will cause kernel-mode exception while executing context switch.

This fix is don't write DBCR0_ICMP enable bit to SPRN_DBCR0 register
on BOOK-E platforms when CONFIG_WR_OCD_DEBUG is enabled.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 arch/powerpc/kernel/process.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/kernel/process.c b/arch/powerpc/kernel/process.c
index 041affb..278f101 100644
--- a/arch/powerpc/kernel/process.c
+++ b/arch/powerpc/kernel/process.c
@@ -359,7 +359,17 @@ void native_prime_debug_regs(struct thread_struct *thread)
 	mtspr(SPRN_DVC1, thread->dvc1);
 	mtspr(SPRN_DVC2, thread->dvc2);
 #endif
+#if defined (CONFIG_WR_OCD_DEBUG) && defined (CONFIG_BOOKE)
+	if (thread->dbcr0 & DBCR0_ICMP){
+		thread->dbcr0 &= ~DBCR0_ICMP;
+		mtspr(SPRN_DBCR0, thread->dbcr0);
+		thread->dbcr0 |= DBCR0_ICMP;
+	}
+	else
+		mtspr(SPRN_DBCR0, thread->dbcr0);
+#else
 	mtspr(SPRN_DBCR0, thread->dbcr0);
+#endif
 	mtspr(SPRN_DBCR1, thread->dbcr1);
 #ifdef CONFIG_BOOKE
 	mtspr(SPRN_DBCR2, thread->dbcr2);
-- 
1.6.5.2

