From 8c3f1b8ea24b068938f34fee58e7d2078948093f Mon Sep 17 00:00:00 2001
From: Liwei Song <liwei.song@windriver.com>
Date: Tue, 9 Jun 2015 15:01:57 +0800
Subject: [PATCH] fix kmemleak in function thermal_throttle_remove_dev

This commit will fix the following kmemleak:
unreferenced object 0xffff880857297230 (size 112):
  comm "swapper/0", pid 1, jiffies 4294684723 (age 125.564s)
  hex dump (first 32 bytes):
    01 00 00 00 00 00 00 00 70 70 29 57 08 88 ff ff  ........pp)W....
    86 2e c5 81 ff ff ff ff d9 71 29 57 08 88 ff ff  .........q)W....
  backtrace:
    [<ffffffff81946716>] kmemleak_alloc+0x26/0x50
    [<ffffffff81162c13>] kmem_cache_alloc+0x173/0x2e0
    [<ffffffff811e55e1>] sysfs_new_dirent+0x41/0x140
    [<ffffffff811e491a>] sysfs_add_file_mode+0x6a/0xe0
    [<ffffffff811e49a2>] sysfs_add_file+0x12/0x20
    [<ffffffff811e49eb>] sysfs_add_file_to_group+0x3b/0xb0
    [<ffffffff8194d8ac>] thermal_throttle_add_dev+0xba/0xc2
    [<ffffffff81f04c99>] thermal_throttle_init_device+0x51/0x9c
    [<ffffffff81000212>] do_one_initcall+0x42/0x170
    [<ffffffff81efa9c3>] kernel_init_freeable+0x18e/0x25f
    [<ffffffff819441fe>] kernel_init+0xe/0xf0
    [<ffffffff8195739c>] ret_from_fork+0x7c/0xb0
    [<ffffffffffffffff>] 0xffffffffffffffff

This happened when run cpu hotplug test, the sysfs file that
add in thermal_throttle_add_dev(), must be released in
thermal_throttle_remove_dev() when cpu hotplug happened, if not,
the cpu is removed, but the file in sysfs about this cpu was not
released, then there will be a memleak happen.

In upstream kernel did not meet the defect, and as the update of the sysfs,
when the kernfs was add in sysfs in upstream, just use sysfs_remove_group(),
it will release the files in group naturally. but in wr60, there is no kernfs,
we should release the files in group manually, this is  directly way to fix it.

Signed-off-by: Liwei Song <liwei.song@windriver.com>
---
 arch/x86/kernel/cpu/mcheck/therm_throt.c |   15 +++++++++++++++
 1 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/arch/x86/kernel/cpu/mcheck/therm_throt.c b/arch/x86/kernel/cpu/mcheck/therm_throt.c
index 47a1870..a04db41 100644
--- a/arch/x86/kernel/cpu/mcheck/therm_throt.c
+++ b/arch/x86/kernel/cpu/mcheck/therm_throt.c
@@ -250,6 +250,21 @@ static __cpuinit int thermal_throttle_add_dev(struct device *dev,
 
 static __cpuinit void thermal_throttle_remove_dev(struct device *dev)
 {
+	int cpu = raw_smp_processor_id();
+	struct cpuinfo_x86 *c = &cpu_data(cpu);
+
+	if(cpu_has(c, X86_FEATURE_PLN))
+		sysfs_remove_file_from_group(&dev->kobj,
+						&dev_attr_core_power_limit_count.attr,
+						thermal_attr_group.name);
+	if(cpu_has(c, X86_FEATURE_PTS))
+		sysfs_remove_file_from_group(&dev->kobj,
+						&dev_attr_package_throttle_count.attr,
+						thermal_attr_group.name);
+	if(cpu_has(c, X86_FEATURE_PLN))
+		sysfs_remove_file_from_group(&dev->kobj,
+						&dev_attr_package_power_limit_count.attr,
+						thermal_attr_group.name);
 	sysfs_remove_group(&dev->kobj, &thermal_attr_group);
 }
 
-- 
1.7.5.4

