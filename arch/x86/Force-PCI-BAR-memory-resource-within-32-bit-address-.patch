From 0e4fc3de748398302df03c9beb78088c2ae4ce4a Mon Sep 17 00:00:00 2001
From: Pengyu Ma <pengyu.ma@windriver.com>
Date: Wed, 24 Dec 2014 06:44:24 +0000
Subject: [PATCH] Force PCI BAR memory resource within 32-bit address on
 x86-32 arch

PCI 64-bit BAR memory resource that set by BIOS was set as default,
ioremap can not handle mmio range that is more than 44bits on 32bit PAE mode.
So IXGBE will not work as below:

[    6.610012] pci 0000:03:00.0: reg 0x10: [mem 0x383fffc00000-0x383fffdfffff 64bit pref]
[    6.622195] pci 0000:03:00.0: reg 0x20: [mem 0x383fffe04000-0x383fffe07fff 64bit pref]
[    6.656112] pci 0000:03:00.1: reg 0x10: [mem 0x383fffa00000-0x383fffbfffff 64bit pref]
[    6.668293] pci 0000:03:00.1: reg 0x20: [mem 0x383fffe00000-0x383fffe03fff 64bit pref]
...
[   12.374143] calling  ixgbe_init_module+0x0/0x51 @ 1
[   12.378130] ixgbe: Intel(R) 10 Gigabit PCI Express Network Driver - version 3.19.1-k
[   12.385318] ixgbe: Copyright (c) 1999-2014 Intel Corporation.
[   12.390578] ixgbe 0000:03:00.0: Adapter removed
[   12.394247] ixgbe: probe of 0000:03:00.0 failed with error -5
[   12.399369] ixgbe 0000:03:00.1: Adapter removed
[   12.403036] ixgbe: probe of 0000:03:00.1 failed with error -5
[   12.408017] initcall ixgbe_init_module+0x0/0x51 returned 0 after 29200 usecs

We are using pfn with unsigned long like pfn_pte(), so those 0x383fffc00000 will
overflow in pfn format with unsigned long (that is 32bits in 32bit x86 kernel,
and pfn only can support 44bits).

Make it fallback within 32-bit address is a safe way.

Thanks to Luming <luming.yu@intel.com> for helpful discussion.

Signed-off-by: Pengyu Ma <pengyu.ma@windriver.com>
---
 arch/x86/pci/acpi.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/arch/x86/pci/acpi.c b/arch/x86/pci/acpi.c
index 4f25ec0..51853fa 100644
--- a/arch/x86/pci/acpi.c
+++ b/arch/x86/pci/acpi.c
@@ -252,7 +252,9 @@ resource_to_addr(struct acpi_resource *resource,
 		return AE_OK;
 	case ACPI_RESOURCE_TYPE_ADDRESS16:
 	case ACPI_RESOURCE_TYPE_ADDRESS32:
+#if BITS_PER_LONG == 64
 	case ACPI_RESOURCE_TYPE_ADDRESS64:
+#endif
 		status = acpi_resource_to_address64(resource, addr);
 		if (ACPI_SUCCESS(status) &&
 		    (addr->resource_type == ACPI_MEMORY_RANGE ||
-- 
1.7.5.4

