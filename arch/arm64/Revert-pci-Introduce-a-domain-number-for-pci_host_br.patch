From 48b48158e3c32cec3503ee9ca35cd51f36ee2cc7 Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Thu, 9 Jul 2015 05:01:01 +0000
Subject: [PATCH 07/23] Revert "pci: Introduce a domain number for
 pci_host_bridge."

This reverts commit 7917c9437348b27d07a85790085f94a4a0509e60.

This patch picked from rric tree, dropped when upstream merging patch from
this tree.

Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/pci/probe.c |   41 ++++++++---------------------------------
 include/linux/pci.h |    4 ----
 2 files changed, 8 insertions(+), 37 deletions(-)

diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index 6784e42..8205607 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -1720,9 +1720,8 @@ void __weak pcibios_remove_bus(struct pci_bus *bus)
 {
 }
 
-struct pci_bus *pci_create_root_bus_in_domain(struct device *parent,
-		int domain, int bus, struct pci_ops *ops, void *sysdata,
-		struct list_head *resources)
+struct pci_bus *pci_create_root_bus(struct device *parent, int bus,
+		struct pci_ops *ops, void *sysdata, struct list_head *resources)
 {
 	int error;
 	struct pci_host_bridge *bridge;
@@ -1735,31 +1734,27 @@ struct pci_bus *pci_create_root_bus_in_domain(struct device *parent,
 
 	bridge = pci_alloc_host_bridge();
 	if (!bridge)
-		return ERR_PTR(-ENOMEM);
+		return NULL;
 
 	bridge->dev.parent = parent;
 	bridge->dev.release = pci_release_host_bridge_dev;
-	bridge->domain_nr = domain;
 
 	b = pci_alloc_bus();
-	if (!b) {
-		error = -ENOMEM;
+	if (!b)
 		goto err_out;
-	}
 
 	b->sysdata = sysdata;
 	b->ops = ops;
 	b->number = b->busn_res.start = bus;
-	b2 = pci_find_bus(bridge->domain_nr, bus);
+	b2 = pci_find_bus(pci_domain_nr(b), bus);
 	if (b2) {
 		/* If we already got to this bus through a different bridge, ignore it */
 		dev_dbg(&b2->dev, "bus already known\n");
-		error = -EEXIST;
 		goto err_bus_out;
 	}
 
 	bridge->bus = b;
-	dev_set_name(&bridge->dev, "pci%04x:%02x", bridge->domain_nr, bus);
+	dev_set_name(&bridge->dev, "pci%04x:%02x", pci_domain_nr(b), bus);
 	error = pcibios_root_bridge_prepare(bridge);
 	if (error)
 		goto err_out;
@@ -1778,7 +1773,7 @@ struct pci_bus *pci_create_root_bus_in_domain(struct device *parent,
 
 	b->dev.class = &pcibus_class;
 	b->dev.parent = b->bridge;
-	dev_set_name(&b->dev, "%04x:%02x", bridge->domain_nr, bus);
+	dev_set_name(&b->dev, "%04x:%02x", pci_domain_nr(b), bus);
 	error = device_register(&b->dev);
 	if (error)
 		goto class_dev_reg_err;
@@ -1828,27 +1823,7 @@ err_bus_out:
 	kfree(b);
 err_out:
 	kfree(bridge);
-	return ERR_PTR(error);
-}
-
-struct pci_bus *pci_create_root_bus(struct device *parent, int bus,
-		struct pci_ops *ops, void *sysdata, struct list_head *resources)
-{
-	int domain_nr;
-	struct pci_bus *b = pci_alloc_bus();
-	if (!b)
-		return NULL;
-
-	b->sysdata = sysdata;
-	domain_nr = pci_domain_nr(b);
-	kfree(b);
-
-	b = pci_create_root_bus_in_domain(parent, domain_nr, bus,
-				ops, sysdata, resources);
-	if (IS_ERR(b))
-		return NULL;
-
-	return b;
+	return NULL;
 }
 
 int pci_bus_insert_busn_res(struct pci_bus *b, int bus, int bus_max)
diff --git a/include/linux/pci.h b/include/linux/pci.h
index d5f5ee9..38cad60 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -402,7 +402,6 @@ struct pci_host_bridge_window {
 struct pci_host_bridge {
 	struct device dev;
 	struct pci_bus *bus;		/* root bus */
-	int domain_nr;
 	struct list_head windows;	/* pci_host_bridge_windows */
 	void (*release_fn)(struct pci_host_bridge *);
 	void *release_data;
@@ -759,9 +758,6 @@ struct pci_bus *pci_scan_bus(int bus, struct pci_ops *ops, void *sysdata);
 struct pci_bus *pci_create_root_bus(struct device *parent, int bus,
 				    struct pci_ops *ops, void *sysdata,
 				    struct list_head *resources);
-struct pci_bus *pci_create_root_bus_in_domain(struct device *parent,
-			int domain, int bus, struct pci_ops *ops,
-			void *sysdata, struct list_head *resources);
 int pci_bus_insert_busn_res(struct pci_bus *b, int bus, int busmax);
 int pci_bus_update_busn_res_end(struct pci_bus *b, int busmax);
 void pci_bus_release_busn_res(struct pci_bus *b);
-- 
1.7.5.4

