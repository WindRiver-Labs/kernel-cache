From ea119d9ef65840e56b1765fcdce91ea22427870a Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Mon, 10 Nov 2014 11:46:14 +0800
Subject: [PATCH] net: cavium: thunder: fix not proper codes type for
 interrupt handler

kmalloc is too much for interrupt handler, so we replace it with a temporary
variable since memory is not a problem any more. And it can mute a potential
sleeping in the interrupt context when rt kernel.

Deconfiguring network interfaces... BUG: sleeping function called from invalid context at mm/slab.c:2967
in_atomic(): 1, irqs_disabled(): 128, pid: 0, name: swapper/3
CPU: 3 PID: 0 Comm: swapper/3 Not tainted 3.14.22-rt9-WR7.0.0.0_preempt-rt #1
Call trace:
[<ffffffc0000876c8>] dump_backtrace+0x0/0x144
[<ffffffc000087828>] show_stack+0x1c/0x28
[<ffffffc000676b38>] dump_stack+0x80/0xac
[<ffffffc0000c4988>] __might_sleep+0xdc/0xfc
[<ffffffc00019c314>] kmem_cache_alloc_trace+0x104/0x220
[<ffffffc0004c1698>] nic_intr_handler+0xa0/0x3e8
[<ffffffc0000e4e74>] handle_irq_event_percpu+0x90/0x248
[<ffffffc0000e508c>] handle_irq_event+0x60/0x90
[<ffffffc0000e8740>] handle_fasteoi_irq+0x9c/0x158
[<ffffffc0000e43e0>] generic_handle_irq+0x38/0x54
[<ffffffc0000840ac>] handle_IRQ+0x50/0xd0
[<ffffffc000080bb0>] gic_handle_irq+0x80/0xec
Exception stack(0xffffffc07cd07e10 to 0xffffffc07cd07f30)
7e00:                                     7cd04000 ffffffc0 7cd04000 ffffffc0
7e20: 7cd07f60 ffffffc0 00084ab0 ffffffc0 60000145 00000000 00000002 00000000
7e40: 000e42f8 ffffffc0 00000000 00000000 7f348df4 ffffffc0 00000000 01000000
7e60: 00999008 ffffffc0 00000001 00000000 00a51000 ffffffc0 7cddc000 ffffffc0
7e80: 7cd01370 ffffffc0 7cd07d70 ffffffc0 00000400 00000000 00000400 00000000
7ea0: 340ac346 00000000 00000000 01400000 2e67cc17 00000000 64abe424 00000000
7ec0: 07121ac0 00000000 ec4731ca 00000000 8b345f4e 00000000 7cd04000 ffffffc0
7ee0: 7cd04000 ffffffc0 00994448 ffffffc0 0098d000 ffffffc0 00994c48 ffffffc0
7f00: 009bb990 ffffffc0 0067ed50 ffffffc0 0098c574 ffffffc0 007ec888 ffffffc0
7f20: 00000001 00000000 7cd07f60 ffffffc0
[<ffffffc0000834e0>] el1_irq+0x60/0xc0
[<ffffffc0000e42f4>] cpu_startup_entry+0x15c/0x1dc
[<ffffffc00008b728>] secondary_start_kernel+0x11c/0x12c

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/cavium/thunder/nic_main.c   |    5 ++---
 drivers/net/ethernet/cavium/thunder/nicvf_main.c |    5 ++---
 2 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/cavium/thunder/nic_main.c b/drivers/net/ethernet/cavium/thunder/nic_main.c
index 0f7098c..2d2d842 100644
--- a/drivers/net/ethernet/cavium/thunder/nic_main.c
+++ b/drivers/net/ethernet/cavium/thunder/nic_main.c
@@ -147,7 +147,7 @@ static void nic_mbx_send_nack(struct nicpf *nic, int vf)
 static void nic_handle_mbx_intr(struct nicpf *nic, int vf)
 {
 	int i, ret = 0;
-	struct nic_mbx *mbx;
+	struct nic_mbx mbx_tmp, *mbx;
 	uint64_t *mbx_data;
 	uint64_t reg_addr;
 	uint64_t mbx_addr;
@@ -155,7 +155,7 @@ static void nic_handle_mbx_intr(struct nicpf *nic, int vf)
 	mbx_addr = NIC_PF_VF_0_127_MAILBOX_0_7;
 	mbx_addr += (vf << NIC_VF_NUM_SHIFT);
 
-	mbx = kzalloc(sizeof(*mbx), GFP_KERNEL);
+	mbx = &mbx_tmp;
 	mbx_data = (uint64_t *)mbx;
 
 	for (i = 0; i < NIC_PF_VF_MAILBOX_SIZE; i++) {
@@ -210,7 +210,6 @@ static void nic_handle_mbx_intr(struct nicpf *nic, int vf)
 		nic_mbx_send_ack(nic, vf);
 	else if (mbx->msg != NIC_PF_VF_MSG_READY)
 		nic_mbx_send_nack(nic, vf);
-	kfree(mbx);
 }
 
 static int nic_update_hw_frs(struct nicpf *nic, int new_frs, int vf)
diff --git a/drivers/net/ethernet/cavium/thunder/nicvf_main.c b/drivers/net/ethernet/cavium/thunder/nicvf_main.c
index 9d82766..8333c94 100644
--- a/drivers/net/ethernet/cavium/thunder/nicvf_main.c
+++ b/drivers/net/ethernet/cavium/thunder/nicvf_main.c
@@ -211,13 +211,13 @@ static int nicvf_check_pf_ready(struct nicvf *nic)
 static void  nicvf_handle_mbx_intr(struct nicvf *nic)
 {
 	int i;
-	struct nic_mbx *mbx;
+	struct nic_mbx  mbx_tmp, *mbx;
 	uint64_t *mbx_data;
 	uint64_t mbx_addr;
 
 	mbx_addr = NIC_VF_PF_MAILBOX_0_7;
 
-	mbx = kzalloc(sizeof(*mbx), GFP_KERNEL);
+	mbx = &mbx_tmp;
 	mbx_data = (uint64_t *)mbx;
 
 	for (i = 0; i < NIC_PF_VF_MAILBOX_SIZE; i++) {
@@ -242,7 +242,6 @@ static void  nicvf_handle_mbx_intr(struct nicvf *nic)
 		break;
 	}
 	nicvf_clear_intr(nic, NICVF_INTR_MBOX, 0);
-	kfree(mbx);
 }
 
 static int nicvf_hw_set_mac_addr(struct nicvf *nic, struct net_device *netdev)
-- 
1.7.5.4

