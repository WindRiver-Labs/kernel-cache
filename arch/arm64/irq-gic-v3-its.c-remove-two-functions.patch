From e08329b7d7c81a1532c091c121db5acc1d1b6940 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Fri, 17 Jul 2015 14:01:05 +0800
Subject: [PATCH 019/132] irq-gic-v3-its.c: remove two functions

Nobody calls its_msi_teardown_irq() and its_msi_setup_irq(),
remove them.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/irqchip/irq-gic-v3-its.c |   70 --------------------------------------
 1 files changed, 0 insertions(+), 70 deletions(-)

diff --git a/drivers/irqchip/irq-gic-v3-its.c b/drivers/irqchip/irq-gic-v3-its.c
index 9449918..60979ee 100644
--- a/drivers/irqchip/irq-gic-v3-its.c
+++ b/drivers/irqchip/irq-gic-v3-its.c
@@ -1314,35 +1314,6 @@ static struct its_lpi_chunk *its_find_chunk(struct its_device *its_dev,
 	return NULL;
 }
 
-static void its_msi_teardown_irq(struct msi_chip *chip, unsigned int irq)
-{
-	struct irq_data *d = irq_get_irq_data(irq);
-	struct its_device *its_dev = irq_data_get_irq_handler_data(d);
-	struct its_lpi_chunk *chunk = its_find_chunk(its_dev, d);
-
-	BUG_ON(!chunk);		/* OMG! */
-
-	/* Stop the delivery of interrupts */
-	its_send_discard(its_dev, its_msi_get_entry_nr(d->msi_desc));
-
-	/* Mark interrupt index as unused, and clear the mapping */
-	clear_bit(d->hwirq - chunk->lpi_base, &chunk->lpi_map);
-	irq_dispose_mapping(irq);
-
-	/* If all interrupts have been freed, start mopping the floor */
-	if (bitmap_empty(&chunk->lpi_map, IRQS_PER_CHUNK)) {
-		list_del(&chunk->entry);
-		its_lpi_free(chunk);
-	}
-
-	if (list_empty(&its_dev->hwirq_list)) {
-		/* Unmap device/itt */
-		its_send_mapd(its_dev, 0);
-		list_del(&its_dev->entry);
-		its_free_device(its_dev);
-	}
-}
-
 /* FIXME: Use proper API once it is available in the kernel... */
 #define PCI_REQUESTER_ID(dev)	((pci_domain_nr(dev->bus) << 16) | ((dev)->bus->number << 8) | (dev)->devfn)
 
@@ -1358,47 +1329,6 @@ static int its_msi_get_vec_count(struct pci_dev *pdev, struct msi_desc *desc)
 #endif
 }
 
-static int its_msi_setup_irq(struct msi_chip *chip,
-			     struct pci_dev *pdev,
-			     struct msi_desc *desc)
-{
-	struct its_node *its = container_of(chip, struct its_node, msi_chip);
-	struct its_device *its_dev;
-	struct msi_msg msg;
-	unsigned int irq;
-	u64 addr;
-	int hwirq;
-	int err;
-	u32 dev_id = PCI_REQUESTER_ID(pdev);
-	u32 vec_nr;
-
-	its_dev = its_find_device(its, dev_id);
-	if (!its_dev) {
-		int nvec = its_msi_get_vec_count(pdev, desc);
-		if (WARN_ON(nvec <= 0))
-			return nvec;
-		its_dev = its_create_device(its, dev_id, nvec);
-	}
-	if (!its_dev)
-		return -ENOMEM;
-	vec_nr = its_msi_get_entry_nr(desc);
-	err = its_alloc_device_irq(its_dev, vec_nr, &hwirq, &irq);
-	if (err)
-		return err;
-
-	irq_set_msi_desc(irq, desc);
-	irq_set_handler_data(irq, its_dev);
-
-	addr = its->phys_base + GITS_TRANSLATER;
-
-	msg.address_lo		= addr & ((1UL << 32) - 1);
-	msg.address_hi		= addr >> 32;
-	msg.data		= vec_nr;
-
-	write_msi_msg(irq, &msg);
-	return 0;
-}
-
 static int its_probe(struct device_node *node, struct irq_domain *parent)
 {
 	struct resource res;
-- 
1.7.5.4

