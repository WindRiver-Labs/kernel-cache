From a25e138124d2872367df9ca6374183d472ba86b6 Mon Sep 17 00:00:00 2001
From: Junxiao Bi <junxiao.bi@windriver.com>
Date: Fri, 16 Sep 2011 13:58:05 +0800
Subject: [PATCH 4/4] ARM: futex: align the futex lock api with wrlinux

After backporting the upstream commit c1b0db56604b4ccc55a325104b14093aeedeb829
[ARM: 6889/1: futex: add SMP futex support when !CPU_USE_DOMAINS] in which
the futex lock api prototype is changed, we need to add a wrapper to align it
with wrlinux's.

Signed-off-by: Junxiao Bi <junxiao.bi@windriver.com>
---
 arch/arm/include/asm/futex.h |   14 ++++++++++++--
 1 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/arch/arm/include/asm/futex.h b/arch/arm/include/asm/futex.h
index 87dbb69..b7b25ed 100644
--- a/arch/arm/include/asm/futex.h
+++ b/arch/arm/include/asm/futex.h
@@ -40,7 +40,7 @@
 	: "cc", "memory")
 
 static inline int
-futex_atomic_cmpxchg_inatomic(u32 *uval, u32 __user *uaddr,
+_futex_atomic_cmpxchg_inatomic(u32 *uval, u32 __user *uaddr,
 			      u32 oldval, u32 newval)
 {
 	int ret;
@@ -85,7 +85,7 @@ futex_atomic_cmpxchg_inatomic(u32 *uval, u32 __user *uaddr,
 	: "cc", "memory")
 
 static inline int
-futex_atomic_cmpxchg_inatomic(u32 *uval, u32 __user *uaddr,
+_futex_atomic_cmpxchg_inatomic(u32 *uval, u32 __user *uaddr,
 			      u32 oldval, u32 newval)
 {
 	int ret = 0;
@@ -111,6 +111,16 @@ futex_atomic_cmpxchg_inatomic(u32 *uval, u32 __user *uaddr,
 #endif /* !SMP */
 
 static inline int
+futex_atomic_cmpxchg_inatomic(int __user *uaddr, int oldval, int newval)
+{
+	u32 uval;
+	int ret;
+
+	ret = _futex_atomic_cmpxchg_inatomic(&uval, uaddr, oldval, newval);
+	return (ret < 0) ? ret : (int)uval;
+}
+
+static inline int
 futex_atomic_op_inuser (int encoded_op, int __user *uaddr)
 {
 	int op = (encoded_op >> 28) & 7;
-- 
1.7.0.4

