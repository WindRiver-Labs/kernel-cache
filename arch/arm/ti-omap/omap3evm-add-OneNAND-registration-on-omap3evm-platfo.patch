From 43266de54e03622a1d6d27d0b3fd2a5ee4dd560d Mon Sep 17 00:00:00 2001
From: Wang Hui <Hui.Wang@windriver.com>
Date: Mon, 22 Mar 2010 14:36:32 +0800
Subject: [PATCH 002/108] omap3evm: add OneNAND registration on omap3evm platform

Add OneNAND registration on omap3evm platform.

[Original code taken from OMAP35x-PSP-SDK-setuplinux-02.01.03.11 BSP
package: http://software-dl.ti.com/dsps/dsps_public_sw/sdo_sb/ \
targetcontent/dvsdk/DVSDK_3_00/latest/index_FDS.html]

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 arch/arm/mach-omap2/board-omap3evm.c |   83 ++++++++++++++++++++++++++++++++++
 1 files changed, 83 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/board-omap3evm.c b/arch/arm/mach-omap2/board-omap3evm.c
index f5c815a..bcffa3a 100644
--- a/arch/arm/mach-omap2/board-omap3evm.c
+++ b/arch/arm/mach-omap2/board-omap3evm.c
@@ -42,6 +42,8 @@
 #include <plat/common.h>
 #include <plat/mcspi.h>
 #include <plat/display.h>
+#include <plat/onenand.h>
+#include <plat/gpmc.h>
 
 #include "mux.h"
 #include "sdram-micron-mt46h32m32lf-6.h"
@@ -148,6 +150,86 @@ static inline void __init omap3evm_init_smsc911x(void)
 static inline void __init omap3evm_init_smsc911x(void) { return; }
 #endif
 
+#if defined(CONFIG_MTD_ONENAND_OMAP2) || \
+	defined(CONFIG_MTD_ONENAND_OMAP2_MODULE)
+
+#define OMAP3530_EVM_ONENAND_MAP 0x20000000
+
+static struct mtd_partition onenand_partitions[] = {
+	{
+		.name           = "xloader-onenand",
+		.offset         = 0,
+		.size           = 0x80000,
+		.mask_flags     = MTD_WRITEABLE,
+	},
+	{
+		.name           = "uboot-onenand",
+		.offset         = MTDPART_OFS_APPEND,
+		.size           = 0x1E0000,
+		.mask_flags     = MTD_WRITEABLE,
+	},
+	{
+		.name           = "params-onenand",
+		.offset         = MTDPART_OFS_APPEND,
+		.size           = 0x20000,
+	},
+	{
+		.name           = "linux-onenand",
+		.offset         = MTDPART_OFS_APPEND,
+		.size           = 0x500000,
+	},
+	{
+		.name           = "jffs2-onenand",
+		.offset         = MTDPART_OFS_APPEND,
+		.size           = MTDPART_SIZ_FULL,
+	},
+};
+
+static struct omap_onenand_platform_data board_onenand_data = {
+	.dma_channel	= -1,
+	.parts		= onenand_partitions,
+	.nr_parts	= ARRAY_SIZE(onenand_partitions),
+};
+
+static void __init omap3_evm_onenand_init(void)
+{
+
+	u8 cs = 0;
+	u8 onenandcs = GPMC_CS_NUM + 1;
+
+	while (cs < GPMC_CS_NUM) {
+		u32 ret = 0;
+		ret = gpmc_cs_read_reg(cs, GPMC_CS_CONFIG7);
+
+		/*
+		* xloader/Uboot would have programmed the oneNAND
+		* base address for us This is a ugly hack. The proper
+		* way of doing this is to pass the setup of u-boot up
+		* to kernel using kernel params - something on the
+		* lines of machineID. Check if oneNAND is configured
+		*/
+		if ((ret & 0x3F) == (OMAP3530_EVM_ONENAND_MAP >> 24))
+			onenandcs = cs;
+		cs++;
+	}
+	if (onenandcs > GPMC_CS_NUM) {
+		printk(KERN_INFO "OneNAND: Unable to find configuration "
+				" in GPMC\n ");
+		return;
+	}
+
+	if (onenandcs < GPMC_CS_NUM) {
+		board_onenand_data.cs = onenandcs;
+		gpmc_onenand_init(&board_onenand_data);
+
+	}
+}
+#else
+
+static void __init omap3_evm_onenand_init(void) {}
+
+#endif
+
 /*
  * OMAP3EVM LCD Panel control signals
  */
@@ -710,6 +792,7 @@ static void __init omap3_evm_init(void)
 	ads7846_dev_init();
 	omap3evm_init_smsc911x();
 	omap3_evm_display_init();
+	omap3_evm_onenand_init();
 }
 
 static void __init omap3_evm_map_io(void)
-- 
1.7.0.4

