From 017ec1dfbb53b4aa8de6a06601566ecfe897b586 Mon Sep 17 00:00:00 2001
From: Vaibhav Hiremath <hvaibhav@ti.com>
Date: Mon, 1 Mar 2010 21:34:13 +0530
Subject: [PATCH 100/108] OMAP: DSS: Workaround for DSS out of sync when sleep_while_idle

commit c7693500ba03592980932eefc6ae6f93717b5544 from
the branch origin/OMAPPSP_03.00.01.06 of
git://arago-project.org/git/projects/linux-omap3.git

If DISPC.MIDLEMODE bit configured to "Smart Idle" state, DSS allows
Core pwdm to enter into off state which will inturn take
DSS to off state causing driver to go out-of-sync, since driver executes
save/restore on clock usage count.

The work around for this issue is to put DISPC.MIDLEMODE bit to "Force Idle"
state, which will make sure that the Core pwdm won't enter into off state if
DSS is active.

Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
Integrated-by: Stanley.Miao <stanley.miao@windriver.com>
---
 drivers/video/omap2/dss/dispc.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/drivers/video/omap2/dss/dispc.c b/drivers/video/omap2/dss/dispc.c
index e876f0f..3717598 100644
--- a/drivers/video/omap2/dss/dispc.c
+++ b/drivers/video/omap2/dss/dispc.c
@@ -3074,7 +3074,11 @@ static void _omap_dispc_initial_config(void)
 	u32 l;
 
 	l = dispc_read_reg(DISPC_SYSCONFIG);
-	l = FLD_MOD(l, 2, 13, 12);	/* MIDLEMODE: smart standby */
+	if (cpu_is_omap34xx() || cpu_is_omap3630())
+		l = FLD_MOD(l, 0, 13, 12);	/* MIDLEMODE: Force standby */
+	else
+		l = FLD_MOD(l, 2, 13, 12);	/* MIDLEMODE: smart standby */
+
 	l = FLD_MOD(l, 2, 4, 3);	/* SIDLEMODE: smart idle */
 	l = FLD_MOD(l, 1, 2, 2);	/* ENWAKEUP */
 	l = FLD_MOD(l, 1, 0, 0);	/* AUTOIDLE */
-- 
1.7.0.4

