From 15ae24c11019711e877f391a90830928683b3069 Mon Sep 17 00:00:00 2001
From: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date: Mon, 28 Oct 2013 11:47:26 +0200
Subject: [PATCH 0839/1115] PM/runtime: use pm_runtime_put_sync in
 __device_release_driver

Commit fa180eb448fa263cf18dd930143b515d27d70d7b (PM / Runtime: Idle
devices asynchronously after probe|release) changed
pm_runtime_put_sync() to pm_runtime_put() in __device_release_driver(),
aiming to improve parallelism.

However, as the driver is being detached from the device, the queued
runtime callback will never be called, leaving the device enabled.

This was observed when removing the omapdss module: only runtime_resume
callbacks were being called in the omapdss driver, not runtime_suspend.
The result was that all the DSS clocks were left enabled after module
removal.

Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
Cc: Tero Kristo <t-kristo@ti.com>
Cc: Nishanth Menon <nm@ti.com>
(cherry picked from commit 767c8934cdb3eb1445ee85a4cbc8356c8f615fa2)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/base/dd.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/base/dd.c b/drivers/base/dd.c
index 35fa368..0605176 100644
--- a/drivers/base/dd.c
+++ b/drivers/base/dd.c
@@ -499,7 +499,7 @@ static void __device_release_driver(struct device *dev)
 						     BUS_NOTIFY_UNBIND_DRIVER,
 						     dev);
 
-		pm_runtime_put(dev);
+		pm_runtime_put_sync(dev);
 
 		if (dev->bus && dev->bus->remove)
 			dev->bus->remove(dev);
-- 
1.7.5.4

