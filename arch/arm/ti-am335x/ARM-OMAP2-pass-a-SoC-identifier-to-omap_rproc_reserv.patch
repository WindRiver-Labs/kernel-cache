From 637870e6e92e8793ac839029cda2f87e7c91d5e2 Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Fri, 15 Feb 2013 17:38:02 -0600
Subject: [PATCH 0689/1115] ARM: OMAP2+: pass a SoC identifier to
 omap_rproc_reserve_cma

OMAP5 has to support a larger memory footprint compared to
OMAP4. Support has been added to be able to pick different
CMA addresses and sizes based on a SoC identifier for that
SoC. These SoC identifiers are required since the SoC/CPU
revision check api is not available until the machine
init_early, and the CMA pool reservation for the remoteproc
devices has to be performed earlier during the board memory
setup phase.

Signed-off-by: Suman Anna <s-anna@ti.com>
(cherry picked from commit 8e2c986e48af7723983ae761f6a09ca31bbe51e7)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/mach-omap2/common.c                  |    2 +-
 arch/arm/mach-omap2/remoteproc.c              |   15 ++++++++++++---
 include/linux/platform_data/remoteproc-omap.h |   10 ++++++++--
 3 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-omap2/common.c b/arch/arm/mach-omap2/common.c
index e1ae24b..58cf4bd 100644
--- a/arch/arm/mach-omap2/common.c
+++ b/arch/arm/mach-omap2/common.c
@@ -35,7 +35,7 @@ int __weak omap_secure_ram_reserve_memblock(void)
 
 void __init omap4_reserve(void)
 {
-	omap_rproc_reserve_cma();
+	omap_rproc_reserve_cma(RPROC_CMA_OMAP4);
 	omap_reserve();
 }
 
diff --git a/arch/arm/mach-omap2/remoteproc.c b/arch/arm/mach-omap2/remoteproc.c
index 24973a2..bc08eb3 100644
--- a/arch/arm/mach-omap2/remoteproc.c
+++ b/arch/arm/mach-omap2/remoteproc.c
@@ -373,6 +373,7 @@ static int omap_rproc_disable_timers(struct platform_device *pdev,
 
 /**
  * omap_rproc_reserve_cma - reserve CMA pools
+ * @platform_type: SoC identifier
  *
  * This function reserves the CMA pools for each of the remoteproc
  * devices at boot time. This function needs to be called from the
@@ -382,12 +383,20 @@ static int omap_rproc_disable_timers(struct platform_device *pdev,
  * The CMA pool information is gathered from the corresponding
  * omap_rproc_pdev_data definitions.
  */
-void __init omap_rproc_reserve_cma(void)
+void __init omap_rproc_reserve_cma(int platform_type)
 {
-	struct omap_rproc_pdev_data *rproc_pdev_data = omap4_rproc_pdev_data;
-	int rproc_size = ARRAY_SIZE(omap4_rproc_pdev_data);
+	struct omap_rproc_pdev_data *rproc_pdev_data = NULL;
+	int rproc_size = 0;
 	int i, ret;
 
+	if (platform_type == RPROC_CMA_OMAP4) {
+		rproc_pdev_data = omap4_rproc_pdev_data;
+		rproc_size = ARRAY_SIZE(omap4_rproc_pdev_data);
+	} else {
+		pr_err("incompatible machine");
+		return;
+	}
+
 	for (i = 0; i < rproc_size; i++) {
 		struct platform_device *pdev = rproc_pdev_data[i].pdev;
 
diff --git a/include/linux/platform_data/remoteproc-omap.h b/include/linux/platform_data/remoteproc-omap.h
index d518917..7855b5f 100644
--- a/include/linux/platform_data/remoteproc-omap.h
+++ b/include/linux/platform_data/remoteproc-omap.h
@@ -64,14 +64,20 @@ struct omap_rproc_pdata {
 
 #if defined(CONFIG_OMAP_REMOTEPROC) || defined(CONFIG_OMAP_REMOTEPROC_MODULE)
 
-void __init omap_rproc_reserve_cma(void);
+void __init omap_rproc_reserve_cma(int platform_type);
 
 #else
 
-static inline void __init omap_rproc_reserve_cma(void)
+static inline void __init omap_rproc_reserve_cma(int platform_type)
 {
 }
 
 #endif
 
+/*
+ * SoC/Platform identifier definitions, to be used for picking up
+ * the appropriate SoC-specific CMA memory size and locations.
+ */
+#define RPROC_CMA_OMAP4		1
+
 #endif /* _PLAT_REMOTEPROC_H */
-- 
1.7.5.4

