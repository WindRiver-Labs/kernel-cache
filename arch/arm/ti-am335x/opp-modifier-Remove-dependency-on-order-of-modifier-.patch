From d8b46d70185f927771f5863dc88e447d345f8a21 Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Fri, 6 Dec 2013 13:09:17 -0600
Subject: [PATCH 0790/1115] opp-modifier: Remove dependency on order of
 modifier entries

Depending on the order of the entries provided in the opp-modifier list
in the DT entry certain OPPs could be enabled and then improperly
disabled. By disabling all OPPs first and then only enabling those that
are appropriate the order in which they are parsed no longer matters.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
(cherry picked from commit 8a05f2956657f365ed86199fccd099d4478e1db6)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/power/opp/omap-opp-control.c |   24 +++++++++++++-----------
 1 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/drivers/power/opp/omap-opp-control.c b/drivers/power/opp/omap-opp-control.c
index 793a6fa..252e4a8 100644
--- a/drivers/power/opp/omap-opp-control.c
+++ b/drivers/power/opp/omap-opp-control.c
@@ -67,7 +67,7 @@ static int of_opp_check_availability(struct device *dev, struct device_node *np)
 	const struct property *prop;
 	const __be32 *val;
 	unsigned long efuse_val, freq, rev, offset, bit;
-	int nr;
+	int nr, idx;
 
 	if (!dev || !np)
 		return -EINVAL;
@@ -84,8 +84,19 @@ static int of_opp_check_availability(struct device *dev, struct device_node *np)
 		return -EINVAL;
 	}
 
+	/* Disable all OPPs */
 	val = prop->value;
-	while (nr) {
+	idx = nr / 4;
+	while (idx--) {
+		freq = be32_to_cpup(val) * 1000;
+		opp_disable(dev, freq);
+		val += 4;
+	}
+
+	/* Reiterate and enable appropriate OPPs */
+	val = prop->value;
+	idx = nr / 4;
+	while (idx--) {
 		freq = be32_to_cpup(val++) * 1000;
 		rev = be32_to_cpup(val++);
 		offset = be32_to_cpup(val++);
@@ -96,16 +107,7 @@ static int of_opp_check_availability(struct device *dev, struct device_node *np)
 		if (OPP_REV_CMP(rev, am33xx_devrev_to_opp_rev(rev_id))) {
 			if (((~efuse_val & bit) || !bit))
 				opp_enable(dev, freq);
-			else if (bit && !(~efuse_val & bit))
-				opp_disable(dev, freq);
-		} else if (!OPP_REV_CMP(rev,
-					am33xx_devrev_to_opp_rev(rev_id))) {
-			opp_disable(dev, freq);
-		} else {
-			opp_disable(dev, freq);
 		}
-
-		nr -= 4;
 	}
 
 	return 0;
-- 
1.7.5.4

