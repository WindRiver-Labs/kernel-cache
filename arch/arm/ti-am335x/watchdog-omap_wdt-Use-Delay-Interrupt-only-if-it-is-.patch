From 7bcec6671ad9490575ec506f456097805c0c900b Mon Sep 17 00:00:00 2001
From: Lokesh Vutla <lokeshvutla@ti.com>
Date: Fri, 15 Mar 2013 09:24:07 +0530
Subject: [PATCH 0351/1115] watchdog: omap_wdt: Use Delay Interrupt only if it
 is supported

Delay Interrupt is not supported in older Watchdog IP's(used in OMAP3
Soc's). It is supported in Watchdog IP's used in OMAp4+ Soc's.
So enable delay interrupt only for OMAP4+ Soc's.
If watchdog is loaded as module, enable delay interrupt only
if user is requesting for OMAP4+ Soc's.

Signed-off-by: Lokesh Vutla <lokeshvutla@ti.com>
(cherry picked from commit b20844ab25ebfb19be3c7b1806f4ede4781d6a08)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/mach-omap2/wd_timer.c              |    5 ++++
 drivers/watchdog/omap_wdt.c                 |   31 ++++++++++++++++++++------
 include/linux/platform_data/omap-wd-timer.h |    9 +++++++
 3 files changed, 38 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-omap2/wd_timer.c b/arch/arm/mach-omap2/wd_timer.c
index d15c7bb..140ccd8 100644
--- a/arch/arm/mach-omap2/wd_timer.c
+++ b/arch/arm/mach-omap2/wd_timer.c
@@ -123,6 +123,11 @@ static int __init omap_init_wdt(void)
 
 	pdata.read_reset_sources = prm_read_reset_sources;
 
+	if (cpu_is_omap44xx() || soc_is_omap54xx())
+		pdata.ip_rev = WDTIMER2_IP4;
+	else
+		pdata.ip_rev = WDTIMER2_IP3;
+
 	pdev = omap_device_build(dev_name, id, oh, &pdata,
 				 sizeof(struct omap_wd_timer_platform_data));
 	WARN(IS_ERR(pdev), "Can't build omap_device for %s:%s.\n",
diff --git a/drivers/watchdog/omap_wdt.c b/drivers/watchdog/omap_wdt.c
index c1d575b..1150ac6 100644
--- a/drivers/watchdog/omap_wdt.c
+++ b/drivers/watchdog/omap_wdt.c
@@ -43,6 +43,7 @@
 #include <linux/pm_runtime.h>
 #include <linux/interrupt.h>
 #include <linux/platform_data/omap-wd-timer.h>
+#include <linux/of.h>
 
 #include "omap_wdt.h"
 
@@ -207,6 +208,11 @@ static int omap_wdt_ping(struct watchdog_device *wdog)
 {
 	struct omap_wdt_dev *wdev = watchdog_get_drvdata(wdog);
 
+	if (kernelpet) {
+		pr_info("Hw ping is enabled,Skipping userspace ping\n");
+		return 0;
+	}
+
 	mutex_lock(&wdev->lock);
 	omap_wdt_reload(wdev);
 	mutex_unlock(&wdev->lock);
@@ -280,12 +286,22 @@ static int omap_wdt_probe(struct platform_device *pdev)
 	if (!wdev->base)
 		return -ENOMEM;
 
-	irq = platform_get_irq(pdev, 0);
-	ret = devm_request_irq(&pdev->dev, irq, omap_wdt_interrupt, 0,
-			       dev_name(&pdev->dev), omap_wdt);
-	if (ret < 0)
-		dev_err(&pdev->dev, "can't get irq %d, err %d\n",
-			irq, ret);
+	if (pdev->dev.of_node) {
+		if (of_device_is_compatible(pdev->dev.of_node, "ti,omap3-wdt"))
+			kernelpet = 0;
+	} else {
+		if (pdata->ip_rev == WDTIMER2_IP3)
+			kernelpet = 0;
+	}
+
+	if (kernelpet) {
+		irq = platform_get_irq(pdev, 0);
+		ret = devm_request_irq(&pdev->dev, irq, omap_wdt_interrupt, 0,
+				       dev_name(&pdev->dev), omap_wdt);
+		if (ret < 0)
+			dev_err(&pdev->dev, "can't get irq %d, err %d\n",
+				irq, ret);
+	}
 
 	omap_wdt->info	      = &omap_wdt_info;
 	omap_wdt->ops	      = &omap_wdt_ops;
@@ -412,7 +428,8 @@ static int omap_wdt_resume(struct platform_device *pdev)
 #endif
 
 static const struct of_device_id omap_wdt_of_match[] = {
-	{ .compatible = "ti,omap3-wdt", },
+	{ .compatible = "ti,omap3-wdt" },
+	{ .compatible = "ti,omap4-wdt" },
 	{},
 };
 MODULE_DEVICE_TABLE(of, omap_wdt_of_match);
diff --git a/include/linux/platform_data/omap-wd-timer.h b/include/linux/platform_data/omap-wd-timer.h
index d75f5f8..ae3ce59 100644
--- a/include/linux/platform_data/omap-wd-timer.h
+++ b/include/linux/platform_data/omap-wd-timer.h
@@ -16,6 +16,14 @@
 #include <linux/types.h>
 
 /*
+ * WATCHDOG IP Revisions
+ *	WDTIMER2_IP3 - Used in OMAP3
+ *	WDTIMER2_IP4 - Used in OMAP4+ Soc's
+ */
+#define WDTIMER2_IP3	1
+#define WDTIMER2_IP4	2
+
+/*
  * Standardized OMAP reset source bits
  *
  * This is a subset of the ones listed in arch/arm/mach-omap2/prm.h
@@ -33,6 +41,7 @@
  */
 struct omap_wd_timer_platform_data {
 	u32 (*read_reset_sources)(void);
+	u32 ip_rev;
 };
 
 #endif
-- 
1.7.5.4

