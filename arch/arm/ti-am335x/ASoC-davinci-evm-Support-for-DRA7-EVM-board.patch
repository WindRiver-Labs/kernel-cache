From da91a7818b1f649b978fd3e150e2ea66755f485e Mon Sep 17 00:00:00 2001
From: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date: Fri, 15 Nov 2013 14:08:01 +0200
Subject: [PATCH 1018/1115] ASoC: davinci-evm: Support for DRA7-EVM board

DRA7 uses sDMA compared to other platforms using the davinci-evm machine
driver.
sDMA (omap-pcm) platform driver is using dmaengine while eDMA still using
legacy DMA code.
Do not set .platform_of_node in case the .platform_name has been set in the
snd_soc_dai_link indicating that the machine is using omap-pcm for platform
driver.
On DRA7-EVM the audio clock is sourced from ATL2 clock and the board is
limited to 44.1KHz sampling rate.

Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
(cherry picked from commit 3b3abfef0538ab273dc95b5b9b310664bb58c4d3)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../bindings/sound/davinci-evm-audio.txt           |    1 +
 sound/soc/davinci/davinci-evm.c                    |   65 +++++++++++++++++++-
 2 files changed, 65 insertions(+), 1 deletions(-)

diff --git a/Documentation/devicetree/bindings/sound/davinci-evm-audio.txt b/Documentation/devicetree/bindings/sound/davinci-evm-audio.txt
index 0059b2c..bacce9e 100644
--- a/Documentation/devicetree/bindings/sound/davinci-evm-audio.txt
+++ b/Documentation/devicetree/bindings/sound/davinci-evm-audio.txt
@@ -3,6 +3,7 @@
 Required properties:
 - compatible : "ti,da830-evm-audio" : for DM365/DA8xx/OMAPL1x/AM33xx
                "ti,am33xx-beaglebone-black" : for Beaglebone-black HDMI audio
+	       "ti,dra7xx-evm-audio" : for DRA7-EVM
 - ti,model : The user-visible name of this sound complex.
 - ti,audio-codec : The phandle of the TLV320AIC3x audio codec
 - ti,mcasp-controller : The phandle of the McASP controller
diff --git a/sound/soc/davinci/davinci-evm.c b/sound/soc/davinci/davinci-evm.c
index b5d45c3..6cf9d38 100644
--- a/sound/soc/davinci/davinci-evm.c
+++ b/sound/soc/davinci/davinci-evm.c
@@ -63,6 +63,14 @@ static int evm_startup(struct snd_pcm_substream *substream)
 	return 0;
 }
 
+static int dra7xx_startup(struct snd_pcm_substream *substream)
+{
+	snd_pcm_hw_constraint_minmax(substream->runtime,
+				     SNDRV_PCM_HW_PARAM_RATE, 44100, 44100);
+
+	return evm_startup(substream);
+}
+
 static void evm_shutdown(struct snd_pcm_substream *substream)
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
@@ -151,6 +159,38 @@ static int evm_tda998x_hw_params(struct snd_pcm_substream *substream,
 	return ret;
 }
 
+static int evm_slave_codec_hw_params(struct snd_pcm_substream *substream,
+				     struct snd_pcm_hw_params *params)
+{
+	struct snd_soc_pcm_runtime *rtd = substream->private_data;
+	struct snd_soc_dai *codec_dai = rtd->codec_dai;
+	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
+	struct snd_soc_codec *codec = rtd->codec;
+	struct snd_soc_card *soc_card = codec->card;
+	unsigned int bclk_freq = evm_get_bclk(params);
+	int ret = 0;
+	unsigned sysclk = ((struct snd_soc_card_drvdata_davinci *)
+			   snd_soc_card_get_drvdata(soc_card))->sysclk;
+
+	ret = snd_soc_dai_set_clkdiv(cpu_dai, 1, sysclk / bclk_freq);
+	if (ret < 0) {
+		dev_err(soc_card->dev, "can't set CPU DAI clock divider %d\n",
+			ret);
+	}
+
+	/* Set MCLK as clock source for tlv320aic3106 */
+	ret = snd_soc_dai_set_sysclk(codec_dai, 0, sysclk, SND_SOC_CLOCK_IN);
+	if (ret < 0)
+		return ret;
+
+	/* Set McASP sysclk from AHCLKX sourced from ATL */
+	ret = snd_soc_dai_set_sysclk(cpu_dai, 0, sysclk, SND_SOC_CLOCK_IN);
+	if (ret < 0)
+		dev_err(soc_card->dev, "can't set CPU DAI sysclk %d\n", ret);
+
+	return ret;
+}
+
 static struct snd_soc_ops evm_ops = {
 	.startup = evm_startup,
 	.shutdown = evm_shutdown,
@@ -168,6 +208,12 @@ static struct snd_soc_ops evm_tda998x_ops = {
 	.hw_params = evm_tda998x_hw_params,
 };
 
+static struct snd_soc_ops dra7xx_ops = {
+	.startup = dra7xx_startup,
+	.shutdown = evm_shutdown,
+	.hw_params = evm_slave_codec_hw_params,
+};
+
 /* davinci-evm machine dapm widgets */
 static const struct snd_soc_dapm_widget aic3x_dapm_widgets[] = {
 	SND_SOC_DAPM_HP("Headphone Jack", NULL),
@@ -517,6 +563,17 @@ static struct snd_soc_dai_link evm_dai_tda998x_hdmi = {
 			   SND_SOC_DAIFMT_IB_NF),
 };
 
+static struct snd_soc_dai_link dra7xx_evm_link = {
+	.name		= "TLV320AIC3X",
+	.stream_name	= "AIC3X",
+	.codec_dai_name	= "tlv320aic3x-hifi",
+	.platform_name = "omap-pcm-audio",
+	.ops            = &dra7xx_ops,
+	.init           = evm_aic3x_init,
+	.dai_fmt = SND_SOC_DAIFMT_DSP_B | SND_SOC_DAIFMT_CBS_CFS |
+		   SND_SOC_DAIFMT_IB_NF,
+};
+
 static const struct of_device_id davinci_evm_dt_ids[] = {
 	{
 		.compatible = "ti,da830-evm-audio",
@@ -526,6 +583,10 @@ static const struct of_device_id davinci_evm_dt_ids[] = {
 		.compatible = "ti,am33xx-beaglebone-black",
 		.data = &evm_dai_tda998x_hdmi,
 	},
+	{
+		.compatible = "ti,dra7xx-evm-audio",
+		.data = (void *) &dra7xx_evm_link,
+	},
 	{ /* sentinel */ }
 };
 MODULE_DEVICE_TABLE(of, davinci_evm_dt_ids);
@@ -556,7 +617,9 @@ static int davinci_evm_probe(struct platform_device *pdev)
 	if (!dai->cpu_of_node)
 		return -EINVAL;
 
-	dai->platform_of_node = dai->cpu_of_node;
+	/* Only set the platform_of_node if the platform_name is not set */
+	if (!dai->platform_name)
+		dai->platform_of_node = dai->cpu_of_node;
 
 	evm_soc_card.dev = &pdev->dev;
 	ret = snd_soc_of_parse_card_name(&evm_soc_card, "ti,model");
-- 
1.7.5.4

