From f8f9dd555f19df9d839b937698d9bc81637fb263 Mon Sep 17 00:00:00 2001
From: Archit Taneja <archit@ti.com>
Date: Wed, 30 Oct 2013 18:02:12 +0530
Subject: [PATCH 0632/1115] clk: ti: dra7: enable deshdcp clock in
 dra7xx_clk_init

The DESHDCP clock is required only by the DES-HDCP block within HDMI in DSS.
However, if the clock isn't set before DSS clock domian is enabled, the clock
domain never comes out of idle state.

This is because the DSS IP is such that if DES-HDCP block can't transition
from idle state, the entire DSS also cannot transition from idle to enabled.
DES-HDCP block needs the DESHDCP clock enabled to transition from idle
successfully.

The DESHDCP clock is enabled/disabled at the DSS boundry by the bit
DSS_DESHDCP_CLKEN in CTRL_CORE_CONTROL_IO_2.

We enable the deshdcp clock in dra7xx_clk_init() which happens before omap
hwmods are setup. This clock is effectively a gate clock with the parent as
DSS_L3_GICLK. The parent is an automatically controlled clock by DSS clock
domain and hence doesn't have a clock node associated to it. Since
DSS_L3_GICLK is derived from the OCP clock, we set the dss_deshdcp_clk's
parent as l3_iclk_div.

Leaving this bit enabled doesn't prevent DSS or the system to suspend, and only
a very few flops get this clock all the time. So there is negligible impact.

Signed-off-by: Archit Taneja <archit@ti.com>
Acked-by: Tero Kristo <t-kristo@ti.com>
(cherry picked from commit e9307b9276f1ffac5472d0a8d0ca4295046d0a7d)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/clk/ti/clk-7xx.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/drivers/clk/ti/clk-7xx.c b/drivers/clk/ti/clk-7xx.c
index c2fbc47..e1263d8 100644
--- a/drivers/clk/ti/clk-7xx.c
+++ b/drivers/clk/ti/clk-7xx.c
@@ -179,6 +179,7 @@ static struct omap_dt_clk dra7xx_clks[] = {
 	DT_CLK(NULL, "dss_hdmi_clk", "dss_hdmi_clk"),
 	DT_CLK(NULL, "dss_video1_clk", "dss_video1_clk"),
 	DT_CLK(NULL, "dss_video2_clk", "dss_video2_clk"),
+	DT_CLK(NULL, "dss_deshdcp_clk", "dss_deshdcp_clk"),
 	DT_CLK(NULL, "gpio1_dbclk", "gpio1_dbclk"),
 	DT_CLK(NULL, "gpio2_dbclk", "gpio2_dbclk"),
 	DT_CLK(NULL, "gpio3_dbclk", "gpio3_dbclk"),
@@ -281,7 +282,7 @@ static struct omap_dt_clk dra7xx_clks[] = {
 int __init dra7xx_clk_init(void)
 {
 	int rc;
-	struct clk *abe_dpll_mux, *sys_clkin2, *dpll_ck;
+	struct clk *abe_dpll_mux, *sys_clkin2, *dpll_ck, *deshdcp_clk;
 
 	of_clk_init(NULL);
 
@@ -304,5 +305,10 @@ int __init dra7xx_clk_init(void)
 	if (rc)
 		pr_err("%s: failed to configure GMAC DPLL!\n", __func__);
 
+	deshdcp_clk = clk_get_sys(NULL, "dss_deshdcp_clk");
+	rc = clk_prepare_enable(deshdcp_clk);
+	if (rc)
+		pr_err("%s: failed to enable DESHDCP clock\n", __func__);
+
 	return rc;
 }
-- 
1.7.5.4

