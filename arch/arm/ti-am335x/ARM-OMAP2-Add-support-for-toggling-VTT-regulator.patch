From 237930bdc37f46094dd232b980f4cd21d6c4d056 Mon Sep 17 00:00:00 2001
From: "Hebbar, Gururaja" <gururaja.hebbar@ti.com>
Date: Fri, 22 Nov 2013 10:41:41 +0530
Subject: [PATCH 0677/1115] ARM: OMAP2+: Add support for toggling VTT
 regulator

Some boards (currently AM335x EVM-SK & AM437x GP EVM) provides s/w
control via GPIO to toggle VTT regulator to reduce power consumption in
low power state.

The VTT regulator should be disabled after enabling self-refresh on
suspend, and should be enabled before disabling self-refresh on resume.
This is to allow proper self-refresh entry/exit commands to be
transmitted to the memory.

Add support for toggling VTT regulator using DT properties.
Actual toggling happens in CM3 Firmware. The enable option & the GPIO
pin used is collected in A8 Core and then sent to CM3 using IPC
registers.

Note:
Here it is assumed that VTT Toggle will be done using a pin on GPIO-0
Instance. The reason is GPIO-0 is in wakeup domain.

While here, fix the VTT GPIO pin mask. VTT GPIO PIN parameter is 6 bits
and so the mask should be 0x3f & not 0x2f.

Signed-off-by: Hebbar, Gururaja <gururaja.hebbar@ti.com>
(cherry picked from commit 935888ba139799c26f0605403dfe4134b0545475)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../devicetree/bindings/arm/omap/amx3xx-pm.txt     |   24 ++++++++++++++++++++
 arch/arm/mach-omap2/pm33xx.c                       |   17 +++++++++++++-
 arch/arm/mach-omap2/pm33xx.h                       |    4 +-
 3 files changed, 42 insertions(+), 3 deletions(-)
 create mode 100644 Documentation/devicetree/bindings/arm/omap/amx3xx-pm.txt

diff --git a/Documentation/devicetree/bindings/arm/omap/amx3xx-pm.txt b/Documentation/devicetree/bindings/arm/omap/amx3xx-pm.txt
new file mode 100644
index 0000000..9b0e2a1
--- /dev/null
+++ b/Documentation/devicetree/bindings/arm/omap/amx3xx-pm.txt
@@ -0,0 +1,24 @@
+AM335x Power Management bindings
+
+Support for VTT Toggle
+
+In order to enable the support for VTT toggle during Suspend/Resume
+sequence needed by some boards (like AM335x EVM-SK & AM437x GP EVM),
+below DT properties needs to be added under the M3 Wakeup Node.
+
+Required properties:
+- ti,needs-vtt-toggle:	Indicates that the boards requires VTT toggling
+			during suspend/resume.
+- ti,vtt-gpio-pin:	Specifies the GPIO pin used for VTT toggle.
+
+Important Note:
+- Here it is assumed that VTT Toggle will be done using a pin on GPIO-0 Instance
+
+Example:
+	wkup_m3: wkup_m3@44d00000 {
+		compatible = "ti,am3353-wkup-m3";
+		...
+		...
+		ti,needs-vtt-toggle;
+		ti,vtt-gpio-pin = <7>;
+	};
diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index 66b2b72..164067a 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -315,6 +315,7 @@ int __init am33xx_pm_init(void)
 {
 	int ret;
 	u32 temp;
+	struct device_node *np;
 
 	if (!soc_is_am33xx())
 		return -ENODEV;
@@ -354,7 +355,21 @@ int __init am33xx_pm_init(void)
 	susp_params.emif_addr_virt = am33xx_emif_base;
 	susp_params.dram_sync = am33xx_dram_sync;
 	susp_params.mem_type = temp;
-	am33xx_pm->ipc.reg4 = temp;
+	am33xx_pm->ipc.reg4 = temp & MEM_TYPE_MASK;
+
+	np = of_find_compatible_node(NULL, NULL, "ti,am3353-wkup-m3");
+	if (np) {
+		if (of_find_property(np, "ti,needs-vtt-toggle", NULL) &&
+		    (!(of_property_read_u32(np, "ti,vtt-gpio-pin",
+							&temp)))) {
+			if (temp >= 0 && temp <= 31)
+				am33xx_pm->ipc.reg4 |=
+					((1 << VTT_STAT_SHIFT) |
+					(temp << VTT_GPIO_PIN_SHIFT));
+			else
+				pr_warn("PM: Invalid VTT GPIO(%d) pin\n", temp);
+		}
+	}
 
 	(void) clkdm_for_each(omap_pm_clkdms_setup, NULL);
 
diff --git a/arch/arm/mach-omap2/pm33xx.h b/arch/arm/mach-omap2/pm33xx.h
index dd8858e..ed8c781 100644
--- a/arch/arm/mach-omap2/pm33xx.h
+++ b/arch/arm/mach-omap2/pm33xx.h
@@ -65,13 +65,13 @@ struct am33xx_suspend_params {
 /*
  * 9-4 = VTT GPIO PIN (6 Bits)
  *   3 = VTT Status (1 Bit)
- * 2-0 = Memory Type (2 Bits)
+ * 2-0 = Memory Type (3 Bits)
 */
 #define MEM_TYPE_SHIFT		(0x0)
 #define MEM_TYPE_MASK		(0x7 << 0)
 #define VTT_STAT_SHIFT		(0x3)
 #define VTT_STAT_MASK		(0x1 << 3)
 #define VTT_GPIO_PIN_SHIFT	(0x4)
-#define VTT_GPIO_PIN_MASK	(0x2f << 4)
+#define VTT_GPIO_PIN_MASK	(0x3f << 4)
 
 #endif
-- 
1.7.5.4

