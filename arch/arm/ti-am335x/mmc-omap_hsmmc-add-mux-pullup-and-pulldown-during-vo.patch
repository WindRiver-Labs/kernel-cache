From 390fd2699326d22d64ef9ba6781a50ef4b6fce59 Mon Sep 17 00:00:00 2001
From: Balaji T K <balajitk@ti.com>
Date: Mon, 25 Nov 2013 23:00:49 +0530
Subject: [PATCH 1100/1115] mmc: omap_hsmmc: add mux pullup and pulldown
 during voltage switch

While switching from signal voltage 3V to 1.8V on i/o pad,
reduce the ramp delay by enabling pulldown and pullup i/o pad.

Signed-off-by: Balaji T K <balajitk@ti.com>
(cherry picked from commit b24dafb960f03ad04403b19560a4c661ee89a3e1)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/mmc/host/omap_hsmmc.c |   37 ++++++++++++++++++++++++++++++++-----
 1 files changed, 32 insertions(+), 5 deletions(-)

diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
index 637255a..35f6160 100644
--- a/drivers/mmc/host/omap_hsmmc.c
+++ b/drivers/mmc/host/omap_hsmmc.c
@@ -224,6 +224,8 @@ struct omap_hsmmc_host {
 	unsigned int		flags;
 	struct omap_hsmmc_next	next_data;
 	struct	omap_mmc_platform_data	*pdata;
+	struct pinctrl		*pinctrl;
+	struct pinctrl_state	*pinctrl_muxpu, *pinctrl_muxpd;
 	int needs_vmmc:1;
 	int needs_vmmc_aux:1;
 };
@@ -1822,6 +1824,14 @@ static int omap_start_signal_voltage_switch(struct mmc_host *mmc,
 		return 0;
 	}
 
+	if (host->pinctrl_muxpd) {
+		ret = pinctrl_select_state(host->pinctrl, host->pinctrl_muxpd);
+		if (ret < 0) {
+			dev_err(host->dev, "pinctrl pinctrl_muxpd select error\n");
+			goto voltage_switch_error;
+		}
+	}
+
 	if (ios->signal_voltage == MMC_SIGNAL_VOLTAGE_180) {
 		value = OMAP_HSMMC_READ(host->base, HCTL);
 		value &= ~SDVS_MASK;
@@ -1838,6 +1848,12 @@ static int omap_start_signal_voltage_switch(struct mmc_host *mmc,
 		}
 	}
 
+	if (host->pinctrl_muxpu) {
+		ret = pinctrl_select_state(host->pinctrl, host->pinctrl_muxpu);
+		if (ret < 0)
+			dev_err(host->dev, "pinctrl pinctrl_muxpu select error\n");
+	}
+
 voltage_switch_error:
 	return ret;
 }
@@ -2092,7 +2108,6 @@ static int omap_hsmmc_probe(struct platform_device *pdev)
 	const struct of_device_id *match;
 	dma_cap_mask_t mask;
 	unsigned tx_req, rx_req;
-	struct pinctrl *pinctrl;
 	u32 revision;
 
 	match = of_match_device(of_match_ptr(omap_mmc_of_match), &pdev->dev);
@@ -2317,10 +2332,22 @@ static int omap_hsmmc_probe(struct platform_device *pdev)
 
 	omap_hsmmc_disable_irq(host);
 
-	pinctrl = devm_pinctrl_get_select_default(&pdev->dev);
-	if (IS_ERR(pinctrl))
-		dev_warn(&pdev->dev,
-			"pins are not configured from the driver\n");
+	host->pinctrl = devm_pinctrl_get(host->dev);
+	if (IS_ERR(host->pinctrl)) {
+		dev_warn(host->dev,
+			 "pins are not configured from the driver\n");
+		host->pinctrl = NULL;
+	}
+	host->pinctrl_muxpu = pinctrl_lookup_state(host->pinctrl, "muxpu");
+	if (IS_ERR(host->pinctrl_muxpu)) {
+		dev_vdbg(host->dev, "optional: pinctrl_muxpu lookup error");
+		host->pinctrl_muxpu = NULL;
+	}
+	host->pinctrl_muxpd = pinctrl_lookup_state(host->pinctrl, "muxpd");
+	if (IS_ERR(host->pinctrl_muxpd)) {
+		dev_vdbg(host->dev, "optional: pinctrl_muxpd lookup error");
+		host->pinctrl_muxpd = NULL;
+	}
 
 	omap_hsmmc_protect_card(host);
 
-- 
1.7.5.4

