From a2f6e884e222e0afd6707b2e6da10ad5455d925a Mon Sep 17 00:00:00 2001
From: Darren Etheridge <detheridge@ti.com>
Date: Wed, 6 Nov 2013 15:53:12 -0600
Subject: [PATCH 0752/1115] OMAPFB: allow device to go into the suspend state

A call into pm_set_vt_switch() is added in this drivers probe() function
to workaround a problem where the device needs some VT interaction after
suspend is initiated for the device to continue all the way into the
suspend state.

Signed-off-by: Darren Etheridge <detheridge@ti.com>
(cherry picked from commit c24e91d1e1e59491053540c5a487c42ae1e351b4)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/video/omap2/omapfb/omapfb-main.c |    9 +++++++++
 1 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/drivers/video/omap2/omapfb/omapfb-main.c b/drivers/video/omap2/omapfb/omapfb-main.c
index 961c5c2..61e55e8 100644
--- a/drivers/video/omap2/omapfb/omapfb-main.c
+++ b/drivers/video/omap2/omapfb/omapfb-main.c
@@ -29,6 +29,7 @@
 #include <linux/device.h>
 #include <linux/platform_device.h>
 #include <linux/omapfb.h>
+#include <linux/suspend.h>
 
 #include <video/omapdss.h>
 #include <video/omapvrfb.h>
@@ -2590,6 +2591,14 @@ static int omapfb_probe(struct platform_device *pdev)
 		goto cleanup;
 	}
 
+	/*
+	 * disable creation of new console during suspend.
+	 * this works around a problem where a ctrl-c is needed
+	 * to be entered on the VT to actually get the device
+	 * to continue into the suspend state.
+	 */
+	pm_set_vt_switch(0);
+
 	return 0;
 
 cleanup:
-- 
1.7.5.4

