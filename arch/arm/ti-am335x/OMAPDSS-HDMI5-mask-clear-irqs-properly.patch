From 492c86d83414356dea44b222092479927eced1f4 Mon Sep 17 00:00:00 2001
From: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date: Mon, 28 Oct 2013 11:47:33 +0200
Subject: [PATCH 0741/1115] OMAPDSS: HDMI5: mask & clear irqs properly

The hdmi_core_mask_interrupts() function is supposed to mask all the
various interrupts from the HDMI core. This was not done correctly, and
if the CORE_IRQ was enabled, it would result in an interrupt flood.

Fix the function to first mask all the interrupts and then clear the
interrupt status bits.

Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
(cherry picked from commit 86702d0196686727474fc31173fdf01bc99c8de3)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/video/omap2/dss/hdmi5_core.c |   50 ++++++++++++++++++++++++---------
 1 files changed, 36 insertions(+), 14 deletions(-)

diff --git a/drivers/video/omap2/dss/hdmi5_core.c b/drivers/video/omap2/dss/hdmi5_core.c
index bbce5bd..0342bc1 100644
--- a/drivers/video/omap2/dss/hdmi5_core.c
+++ b/drivers/video/omap2/dss/hdmi5_core.c
@@ -437,21 +437,43 @@ static void hdmi_core_mask_interrupts(struct hdmi_core_data *core)
 {
 	void __iomem *base = core->base;
 
-	REG_FLD_MOD(base, HDMI_CORE_VP_MASK, 0x0, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_FC_MASK0, 0x0, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_FC_MASK1, 0x0, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_FC_MASK2, 0x0, 1, 0);
-	REG_FLD_MOD(base, HDMI_CORE_PHY_MASK0, 0x0, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_PHY_I2CM_INT_ADDR, 0x8, 3, 0);
-	REG_FLD_MOD(base, HDMI_CORE_PHY_I2CM_CTLINT_ADDR, 0x88, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_AUD_INT, 0xa3, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_AUD_CC08, 0x0, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_AUD_D010, 0x0, 7, 0);
+	/* Master IRQ mask */
+	REG_FLD_MOD(base, HDMI_CORE_IH_MUTE, 0x3, 1, 0);
+
+	/* Mask all the interrupts in HDMI core */
+
+	REG_FLD_MOD(base, HDMI_CORE_VP_MASK, 0xff, 7, 0);
+	REG_FLD_MOD(base, HDMI_CORE_FC_MASK0, 0xe7, 7, 0);
+	REG_FLD_MOD(base, HDMI_CORE_FC_MASK1, 0xfb, 7, 0);
+	REG_FLD_MOD(base, HDMI_CORE_FC_MASK2, 0x3, 1, 0);
+
+	REG_FLD_MOD(base, HDMI_CORE_AUD_INT, 0x3, 3, 2);
 	REG_FLD_MOD(base, HDMI_CORE_AUD_GP_MASK, 0x3, 1, 0);
-	REG_FLD_MOD(base, HDMI_CORE_HDCP_MASK, 0x0, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_CEC_MASK, 0xff, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_I2CM_INT, 0x1, 7, 0);
-	REG_FLD_MOD(base, HDMI_CORE_I2CM_CTLINT, 0xff, 7, 0);
+
+	REG_FLD_MOD(base, HDMI_CORE_CEC_MASK, 0x7f, 6, 0);
+
+	REG_FLD_MOD(base, HDMI_CORE_I2CM_CTLINT, 0x1, 6, 6);
+	REG_FLD_MOD(base, HDMI_CORE_I2CM_CTLINT, 0x1, 2, 2);
+	REG_FLD_MOD(base, HDMI_CORE_I2CM_INT, 0x1, 2, 2);
+
+	REG_FLD_MOD(base, HDMI_CORE_PHY_MASK0, 0xf3, 7, 0);
+
+	REG_FLD_MOD(base, HDMI_CORE_IH_PHY_STAT0, 0xff, 7, 0);
+
+	/* Clear all the current interrupt bits */
+
+	REG_FLD_MOD(base, HDMI_CORE_IH_VP_STAT0, 0xff, 7, 0);
+	REG_FLD_MOD(base, HDMI_CORE_IH_FC_STAT0, 0xe7, 7, 0);
+	REG_FLD_MOD(base, HDMI_CORE_IH_FC_STAT1, 0xfb, 7, 0);
+	REG_FLD_MOD(base, HDMI_CORE_IH_FC_STAT2, 0x3, 1, 0);
+
+	REG_FLD_MOD(base, HDMI_CORE_IH_AS_STAT0, 0x7, 2, 0);
+
+	REG_FLD_MOD(base, HDMI_CORE_IH_CEC_STAT0, 0x7f, 6, 0);
+
+	REG_FLD_MOD(base, HDMI_CORE_IH_I2CM_STAT0, 0x3, 1, 0);
+
+	REG_FLD_MOD(base, HDMI_CORE_IH_PHY_STAT0, 0xff, 7, 0);
 }
 
 static void hdmi_core_enable_interrupts(struct hdmi_core_data *core)
-- 
1.7.5.4

