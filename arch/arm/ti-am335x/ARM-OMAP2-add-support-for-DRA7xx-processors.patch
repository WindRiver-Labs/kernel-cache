From 9916b7e415f4df078ab99a34b09b9eff98170a76 Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Mon, 15 Jul 2013 20:10:22 -0500
Subject: [PATCH 0697/1115] ARM: OMAP2+: add support for DRA7xx processors

DRA7xx SoC has two IPU and two DSP processor subsystems for
offloading different computation algorithms. This patch adds
the initial support to enable booting all these 4 processor
subsystems - IPU1, IPU2, DSP1 & DSP2.

Separate menuconfig options have been added to enable/disable
the booting of these processors. Do note that new config options
are added for IPU1 and DSP2, while IPU2 and DSP1 reuse the ones
defined for OMAP4/OMAP5. Separate macros have also been defined
for the CMA addresses with some reuse of sizes for DRA7xx since
they may have different memory layout/footprints compared to
either of OMAP4/OMAP5.

Signed-off-by: Suman Anna <s-anna@ti.com>
(cherry picked from commit 8e268790ecd993d485b45134a794d17f8e52f374)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/mach-omap2/remoteproc.c |  109 ++++++++++++++++++++++++++++++++++++++
 drivers/remoteproc/Kconfig       |   33 ++++++++++-
 2 files changed, 139 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-omap2/remoteproc.c b/arch/arm/mach-omap2/remoteproc.c
index 15f4d4b..fb47bd3 100644
--- a/arch/arm/mach-omap2/remoteproc.c
+++ b/arch/arm/mach-omap2/remoteproc.c
@@ -49,6 +49,10 @@ struct omap_rproc_pdev_data {
 	struct platform_device *pdev;
 };
 
+/* forward declarations */
+static void dra7_ctrl_write_dsp1_boot_addr(u32 bootaddr);
+static void dra7_ctrl_write_dsp2_boot_addr(u32 bootaddr);
+
 /*
  * Temporarily define the CMA base address explicitly.
  *
@@ -61,6 +65,11 @@ struct omap_rproc_pdev_data {
  * XXX: Adjust these values depending on your firmware needs.
  * Placing these in Kconfig is not worth the complexity.
  */
+#define DRA7_RPROC_CMA_BASE_IPU2	(0x95800000)
+#define DRA7_RPROC_CMA_BASE_DSP1	(0x95000000)
+#define DRA7_RPROC_CMA_BASE_DSP2	(0x94800000)
+#define DRA7_RPROC_CMA_BASE_IPU1	(0x94000000)
+
 #define OMAP5_RPROC_CMA_BASE_IPU	(0x95800000)
 #define OMAP5_RPROC_CMA_BASE_DSP	(0x95000000)
 
@@ -71,6 +80,7 @@ struct omap_rproc_pdev_data {
 
 #define OMAP4_RPROC_CMA_SIZE_IPU	(0x7000000)
 #define OMAP5_RPROC_CMA_SIZE_IPU	(0xA400000)
+#define DRA7_RPROC_CMA_SIZE_IPU1	(0x800000)
 
 /*
  * These data structures define the desired timers that would
@@ -111,6 +121,35 @@ static struct omap_rproc_pdata omap4_rproc_data[] = {
 	},
 };
 
+static struct omap_rproc_pdata dra7_rproc_data[] = {
+	{
+		.name		= "dsp1",
+		.firmware	= "dra7-dsp1-fw.xe66",
+		.mbox_name	= "mbox-dsp1",
+		.oh_name	= "dsp1",
+		.set_bootaddr	= dra7_ctrl_write_dsp1_boot_addr,
+	},
+	{
+		.name		= "ipu2",
+		.firmware	= "dra7-ipu2-fw.xem4",
+		.mbox_name	= "mbox-ipu2",
+		.oh_name	= "ipu2",
+	},
+	{
+		.name		= "dsp2",
+		.firmware	= "dra7-dsp2-fw.xe66",
+		.mbox_name	= "mbox-dsp2",
+		.oh_name	= "dsp2",
+		.set_bootaddr	= dra7_ctrl_write_dsp2_boot_addr,
+	},
+	{
+		.name		= "ipu1",
+		.firmware	= "dra7-ipu1-fw.xem4",
+		.mbox_name	= "mbox-ipu1",
+		.oh_name	= "ipu1",
+	},
+};
+
 /*
  * These data structures define the necessary iommu binding information
  * for the respective processor. The listing order should match the
@@ -121,6 +160,13 @@ static struct omap_iommu_arch_data omap4_rproc_iommu[] = {
 	{ .name = "mmu_ipu" },
 };
 
+static struct omap_iommu_arch_data dra7_rproc_iommu[] = {
+	{ .name = "mmu0_dsp1" },
+	{ .name = "mmu_ipu2" },
+	{ .name = "mmu0_dsp2" },
+	{ .name = "mmu_ipu1" },
+};
+
 /*
  * Define the platform devices for the possible remote processors
  * statically. This is primarily needed for tying in the CMA pools
@@ -138,6 +184,16 @@ static struct platform_device omap4_ipu = {
 	.id	= 1,
 };
 
+static struct platform_device dra7_dsp2 = {
+	.name	= "omap-rproc",
+	.id	= 2,
+};
+
+static struct platform_device dra7_ipu1 = {
+	.name	= "omap-rproc",
+	.id	= 3,
+};
+
 /*
  * These data structures contain the necessary information for
  * dictating the creation of the remote processor platform devices
@@ -181,6 +237,51 @@ static struct omap_rproc_pdev_data omap5_rproc_pdev_data[] = {
 	},
 };
 
+static struct omap_rproc_pdev_data dra7_rproc_pdev_data[] = {
+	{
+#ifdef CONFIG_OMAP_REMOTEPROC_DSP
+		.enabled = 1,
+#endif
+		.pdev = &omap4_dsp,
+		.cma_addr = DRA7_RPROC_CMA_BASE_DSP1,
+		.cma_size = OMAP_RPROC_CMA_SIZE_DSP,
+	},
+	{
+#ifdef CONFIG_OMAP_REMOTEPROC_IPU
+		.enabled = 1,
+#endif
+		.pdev = &omap4_ipu,
+		.cma_addr = DRA7_RPROC_CMA_BASE_IPU2,
+		.cma_size = OMAP5_RPROC_CMA_SIZE_IPU,
+	},
+	{
+#ifdef CONFIG_OMAP_REMOTEPROC_DSP2
+		.enabled = 1,
+#endif
+		.pdev = &dra7_dsp2,
+		.cma_addr = DRA7_RPROC_CMA_BASE_DSP2,
+		.cma_size = OMAP_RPROC_CMA_SIZE_DSP,
+	},
+	{
+#ifdef CONFIG_OMAP_REMOTEPROC_IPU1
+		.enabled = 1,
+#endif
+		.pdev = &dra7_ipu1,
+		.cma_addr = DRA7_RPROC_CMA_BASE_IPU1,
+		.cma_size = DRA7_RPROC_CMA_SIZE_IPU1,
+	},
+};
+
+static void dra7_ctrl_write_dsp1_boot_addr(u32 bootaddr)
+{
+	dra7_ctrl_write_dsp_boot_addr(bootaddr, 0);
+}
+
+static void dra7_ctrl_write_dsp2_boot_addr(u32 bootaddr)
+{
+	dra7_ctrl_write_dsp_boot_addr(bootaddr, 1);
+}
+
 /**
  * omap_rproc_device_enable - enable the remoteproc device
  * @pdev: the rproc platform device
@@ -419,6 +520,9 @@ void __init omap_rproc_reserve_cma(int platform_type)
 	} else if (platform_type == RPROC_CMA_OMAP5) {
 		rproc_pdev_data = omap5_rproc_pdev_data;
 		rproc_size = ARRAY_SIZE(omap5_rproc_pdev_data);
+	} else if (platform_type == RPROC_CMA_DRA7) {
+		rproc_pdev_data = dra7_rproc_pdev_data;
+		rproc_size = ARRAY_SIZE(dra7_rproc_pdev_data);
 	} else {
 		pr_err("incompatible machine");
 		return;
@@ -472,6 +576,11 @@ static int __init omap_rproc_init(void)
 		rproc_size = ARRAY_SIZE(omap5_rproc_pdev_data);
 		rproc_data = omap4_rproc_data;
 		rproc_iommu = omap4_rproc_iommu;
+	} else if (soc_is_dra7xx()) {
+		rproc_pdev_data = dra7_rproc_pdev_data;
+		rproc_size = ARRAY_SIZE(dra7_rproc_pdev_data);
+		rproc_data = dra7_rproc_data;
+		rproc_iommu = dra7_rproc_iommu;
 	} else {
 		return 0;
 	}
diff --git a/drivers/remoteproc/Kconfig b/drivers/remoteproc/Kconfig
index 3421fbb..24b7aa4 100644
--- a/drivers/remoteproc/Kconfig
+++ b/drivers/remoteproc/Kconfig
@@ -13,7 +13,7 @@ config REMOTEPROC
 config OMAP_REMOTEPROC
 	tristate "OMAP remoteproc support"
 	depends on HAS_DMA
-	depends on ARCH_OMAP4 || SOC_OMAP5
+	depends on ARCH_OMAP4 || SOC_OMAP5 || SOC_DRA7XX
 	depends on OMAP_IOMMU
 	select REMOTEPROC
 	select MAILBOX
@@ -23,9 +23,9 @@ config OMAP_REMOTEPROC
 	  Support for OMAP's remote processors (dual Cortex-M3/M4
 	  and DSP) via the remote processor framework.
 
-	  Currently only supported on OMAP4.
+	  Currently supported on OMAP4, OMAP5 & DRA7XX SoCs.
 
-	  It gets selected by DSP or IPU OMAP_REMOTEPROC instances,
+	  It gets selected by DSP(2) or IPU(1) OMAP_REMOTEPROC instances,
 	  in order to enable multimedia use-cases to run on your platform
 	  (multimedia codecs are offloaded to remote DSP processors or
 	  remoteproc processors controlling other h/w accelerator devices
@@ -57,6 +57,33 @@ config OMAP_REMOTEPROC_DSP
 	  It's safe to say n here if you're not interested in offloading
 	  audio or any other algorithm (by DSP) or just want a bare minimum kernel.
 
+config OMAP_REMOTEPROC_IPU1
+	bool "OMAP remoteproc support for IPU1 (DRA7xx only)"
+	depends on OMAP_REMOTEPROC && SOC_DRA7XX
+	help
+	  Say Y here if you want to enable DRA7xx's IPU1 remote processor.
+
+	  This option controls only the first dual-M4 processor sub-system in
+	  DRA7xx. You would want to say y here usually, as this is the sub
+	  system where some real-time automative stack s/w is offloaded.
+
+	  It's safe to say n here if you're not interested in enabling IPU1
+	  or just want a bare minimum kernel.
+
+config OMAP_REMOTEPROC_DSP2
+	bool "OMAP remoteproc support for DSP2 (DRA7xx only)"
+	depends on OMAP_REMOTEPROC && SOC_DRA7XX
+	help
+	  Say Y here if you want to enable DRA7xx's DSP2 remote processor.
+
+	  This option controls only the DSP2 processor sub-system in DRA7xx.
+	  DSP would typically be used to offload audio codecs or other advanced
+	  processing algorithms.
+
+	  It's safe to say n here if you're not interested in offloading
+	  audio or any other algorithm (by DSP) or just want a bare minimum
+	  kernel.
+
 config STE_MODEM_RPROC
 	tristate "STE-Modem remoteproc support"
 	depends on HAS_DMA
-- 
1.7.5.4

