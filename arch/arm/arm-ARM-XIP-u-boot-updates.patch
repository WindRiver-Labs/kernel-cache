From 0d7411b12a742de8ec83025cfaea17e235f61908 Mon Sep 17 00:00:00 2001
From: Mark Asselstine <mark.asselstine@windriver.com>
Date: Tue, 15 Jul 2008 15:30:36 -0400
Subject: [PATCH 2/4] arm: ARM XIP u-boot updates

This makes the necessary changes to the ARM build process
to generate a XIP bootable image from a uboot image.

The minor modification for vmlinux.lds.S makes uxipImage to be
booted normally by inserting uboot header into Text segment of
Linux kernel, so the size of uboot header should be added
into TEXTADDR of vmlinux.lds.S.

Signed-off-by: <bruce.ashfield@windriver.com>
Signed-off-by: <zumeng.chen@windriver.com>
Integrated-by: Liming Wang <liming.wang@windriver.com>
---
 arch/arm/Kconfig              |   13 +++++++++++++
 arch/arm/Makefile             |    7 +++++++
 arch/arm/boot/Makefile        |   30 +++++++++++++++++++++++++++---
 arch/arm/kernel/vmlinux.lds.S |    4 ++++
 4 files changed, 51 insertions(+), 3 deletions(-)

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 410d3e3..2edf4e5 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -1444,6 +1444,19 @@ config XIP_PHYS_ADDR
 	  be linked for and stored to.  This address is dependent on your
 	  own flash usage.
 
+config XIP_UBOOT_HDR
+	bool "Add a u-boot header to XIP Kernel"
+	depends on XIP_KERNEL
+	default n
+	help
+	  This will add a u-boot header to you XIP kernel and offset the
+	  kernel execute address accordingly. Write the resulting uxipImage
+	  to the location you selected for "XIP Kernel Physical Location".
+
+	  This is u-boot specific. If you are using another boot loader,
+	  say No.
+
+
 config KEXEC
 	bool "Kexec system call (EXPERIMENTAL)"
 	depends on EXPERIMENTAL
diff --git a/arch/arm/Makefile b/arch/arm/Makefile
index 4e36a49..294a853 100644
--- a/arch/arm/Makefile
+++ b/arch/arm/Makefile
@@ -203,6 +203,13 @@ endif
 # The byte offset of the kernel image in RAM from the start of RAM.
 TEXT_OFFSET := $(textofs-y)
 
+ifeq ($(CONFIG_XIP_UBOOT_HDR),y)
+  # we're adding a u-boot header with mkimage so offset the address 0x40
+  CONFIG_XIP_PHYS_ADDR := $(shell echo $(CONFIG_XIP_PHYS_ADDR) 0x40 | \
+		awk --non-decimal-data '/[:xdigit:]/ \
+		 { printf("0x%x\n", $$1 + $$2) }' )
+endif
+
 # The first directory contains additional information for the boot setup code
 ifneq ($(machine-y),)
 MACHINE  := arch/arm/mach-$(word 1,$(machine-y))/
diff --git a/arch/arm/boot/Makefile b/arch/arm/boot/Makefile
index 4a590f4..f95f1d7 100644
--- a/arch/arm/boot/Makefile
+++ b/arch/arm/boot/Makefile
@@ -33,12 +33,17 @@ ifeq ($(CONFIG_XIP_KERNEL),y)
 
 $(obj)/xipImage: vmlinux FORCE
 	$(call if_changed,objcopy)
+ifeq ($(CONFIG_XIP_UBOOT_HDR),y)
+	$(call if_changed,uxipimage)
+	@rm $@
+	@echo '  Kernel: $(@D)/uxipImage is ready (physical address: $(CONFIG_XIP_PHYS_ADDR))'
+else
 	@echo '  Kernel: $@ is ready (physical address: $(CONFIG_XIP_PHYS_ADDR))'
-
+endif
 $(obj)/Image $(obj)/zImage: FORCE
 	@echo 'Kernel configured for XIP (CONFIG_XIP_KERNEL=y)'
-	@echo 'Only the xipImage target is available in this case'
-	@false
+	@echo 'Only the xipImage or uxipImage target is available in this case'
+	@true
 
 else
 
@@ -77,10 +82,29 @@ else
 $(obj)/uImage: STARTADDR=$(LOADADDR)
 endif
 
+CONFIG_UXIP_PHYS_ADDR := $(shell echo $(CONFIG_XIP_PHYS_ADDR) 0x40 | \
+		awk --non-decimal-data '/[:xdigit:]/ \
+		 { printf("0x%x\n", $$1 + $$2) }' )
+
+quiet_cmd_uxipimage = UXIPIMAGE  $(@D)/uxipImage
+      cmd_uxipimage = $(CONFIG_SHELL) $(MKIMAGE) -A arm -O linux -T kernel \
+		   -C none -a $(CONFIG_XIP_PHYS_ADDR) -e $(CONFIG_UXIP_PHYS_ADDR) \
+		   -n 'Linux-$(KERNELRELEASE)' -d $@  $(@D)/uxipImage
+
+ifeq ($(CONFIG_XIP_KERNEL),y)
+
+$(obj)/uImage: FORCE
+	@echo 'Kernel configured for XIP (CONFIG_XIP_KERNEL=y)'
+	@echo 'No uImage created in this case'
+	@true
+else
+
 $(obj)/uImage:	$(obj)/zImage FORCE
 	$(call if_changed,uimage)
 	@echo '  Image $@ is ready'
 
+endif
+
 $(obj)/bootp/bootp: $(obj)/zImage initrd FORCE
 	$(Q)$(MAKE) $(build)=$(obj)/bootp $@
 	@:
diff --git a/arch/arm/kernel/vmlinux.lds.S b/arch/arm/kernel/vmlinux.lds.S
index b16c079..faa4c67 100644
--- a/arch/arm/kernel/vmlinux.lds.S
+++ b/arch/arm/kernel/vmlinux.lds.S
@@ -20,7 +20,11 @@ jiffies = jiffies_64 + 4;
 SECTIONS
 {
 #ifdef CONFIG_XIP_KERNEL
+#ifdef CONFIG_XIP_UBOOT_HDR
+	. = XIP_VIRT_ADDR(CONFIG_XIP_PHYS_ADDR + 0x40); /* 0x40 is uboot header size */
+#else
 	. = XIP_VIRT_ADDR(CONFIG_XIP_PHYS_ADDR);
+#endif
 #else
 	. = PAGE_OFFSET + TEXT_OFFSET;
 #endif
-- 
1.6.5.2

