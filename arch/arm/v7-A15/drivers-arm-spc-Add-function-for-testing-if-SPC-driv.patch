From 83c8812b9c0a16504fc3070a703e1c114b854c65 Mon Sep 17 00:00:00 2001
From: Jon Medhurst <tixy@linaro.org>
Date: Wed, 25 Jul 2012 15:01:40 +0100
Subject: [PATCH 15/28] drivers: arm-spc: Add function for testing if SPC
 driver is loaded

Commit 611b31899b684281a7b2ac1bdf2a97e02c476dee from
git://git.linaro.org/kernel/linux-linaro-tracking.git

To enable drivers which use SPC functions to safely exist in kernels
which are run on hardware without SPC hardware, they need a method of
detecting its presence. The new function vexpress_spc_check_loaded()
provides this.

Signed-off-by: Jon Medhurst <tixy@linaro.org>
Signed-off-by: Guoqing Jiang <Guoqing.Jiang@windriver.com>
---
 drivers/misc/vexpress/arm-spc.c |    8 ++++++++
 include/linux/vexpress.h        |    5 +++++
 2 files changed, 13 insertions(+)

diff --git a/drivers/misc/vexpress/arm-spc.c b/drivers/misc/vexpress/arm-spc.c
index 23cee9d..6453d5b 100644
--- a/drivers/misc/vexpress/arm-spc.c
+++ b/drivers/misc/vexpress/arm-spc.c
@@ -281,6 +281,13 @@ int vexpress_spc_wfi_cpustat(int cluster)
 }
 EXPORT_SYMBOL_GPL(vexpress_spc_wfi_cpustat);
 
+static bool vexpress_spc_loaded;
+
+bool vexpress_spc_check_loaded(void)
+{
+	return vexpress_spc_loaded;
+}
+EXPORT_SYMBOL_GPL(vexpress_spc_check_loaded);
 
 static int __devinit vexpress_spc_driver_probe(struct platform_device *pdev)
 {
@@ -317,6 +324,7 @@ static int __devinit vexpress_spc_driver_probe(struct platform_device *pdev)
 	platform_set_drvdata(pdev, info);
 
 	pr_info("vexpress_spc loaded at %p\n", info->baseaddr);
+	vexpress_spc_loaded = true;
 	return ret;
 
 ioremap_err:
diff --git a/include/linux/vexpress.h b/include/linux/vexpress.h
index 3e5a446..7b05821 100644
--- a/include/linux/vexpress.h
+++ b/include/linux/vexpress.h
@@ -26,6 +26,7 @@ extern void vexpress_spc_adb400_pd_enable(int cluster, int enable);
 extern void vexpress_spc_wfi_cpureset(int cluster, int cpu, int enable);
 extern int vexpress_spc_wfi_cpustat(int cluster);
 extern void vexpress_spc_wfi_cluster_reset(int cluster, int enable);
+extern bool vexpress_spc_check_loaded(void);
 extern void vexpress_scc_ctl_snoops(int cluster, int enable);
 #else
 static inline int vexpress_spc_get_performance(int cluster, int *perf)
@@ -44,5 +45,9 @@ static inline void vexpress_spc_wfi_cpureset(int cluster, int cpu, int enable)
 { }
 static inline int vexpress_spc_wfi_cpustat(int cluster) { return 0; }
 static inline void vexpress_spc_wfi_cluster_reset(int cluster, int enable) { }
+static inline bool vexpress_spc_check_loaded(void)
+{
+	return false;
+}
 static inline void vexpress_scc_ctl_snoops(int cluster, int enable) { }
 #endif
-- 
1.7.9.7

