From 347abcca38523f167feacb4b41707fd185867181 Mon Sep 17 00:00:00 2001
From: Liming Wang <liming.wang@windriver.com>
Date: Tue, 22 May 2012 18:11:21 +0800
Subject: [PATCH 03/28] SPEAr: remove unused machine files in
 arch/arm/mach-spear13xx

There are some machines unsupported for spear13xx BSP, so remove
them.

Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 arch/arm/mach-spear13xx/Kconfig                 |   28 --
 arch/arm/mach-spear13xx/Makefile                |   17 -
 arch/arm/mach-spear13xx/clock.c                 |   16 +-
 arch/arm/mach-spear13xx/db9000_lcd.c            |    2 +-
 arch/arm/mach-spear13xx/spear1300.c             |   37 --
 arch/arm/mach-spear13xx/spear1300_evb.c         |  386 ------------------
 arch/arm/mach-spear13xx/spear1340_lcad.c        |  474 -----------------------
 arch/arm/mach-spear13xx/spear13xx.c             |   11 +-
 arch/arm/mach-spear13xx/spear900.c              |   37 --
 arch/arm/mach-spear13xx/spear900_evb.c          |  409 -------------------
 arch/arm/mach-spear13xx/spear_hurricane_board.c |  445 ---------------------
 arch/arm/plat-spear13xx/include/plat/hardware.h |   48 +--
 12 files changed, 9 insertions(+), 1901 deletions(-)
 delete mode 100644 arch/arm/mach-spear13xx/spear1300.c
 delete mode 100644 arch/arm/mach-spear13xx/spear1300_evb.c
 delete mode 100644 arch/arm/mach-spear13xx/spear1340_lcad.c
 delete mode 100644 arch/arm/mach-spear13xx/spear900.c
 delete mode 100644 arch/arm/mach-spear13xx/spear900_evb.c
 delete mode 100644 arch/arm/mach-spear13xx/spear_hurricane_board.c

diff --git a/arch/arm/mach-spear13xx/Kconfig b/arch/arm/mach-spear13xx/Kconfig
index 10b507f..5b1ea25 100644
--- a/arch/arm/mach-spear13xx/Kconfig
+++ b/arch/arm/mach-spear13xx/Kconfig
@@ -5,12 +5,6 @@
 if ARCH_SPEAR13XX
 
 menu "SPEAr13xx Implementations"
-config MACH_SPEAR1300_EVB
-	bool "SPEAr1300 Evaluation Board"
-	select CPU_SPEAR1300
-	help
-	  Supports ST SPEAr1300 Evaluation Board
-
 config MACH_SPEAR1310_REVA_EVB
 	bool "SPEAr1310 RevA Evaluation Board"
 	select CPU_SPEAR1310_REVA
@@ -36,18 +30,6 @@ config MACH_SPEAR1340_EVB
 	help
 	  Supports ST SPEAr1340 Evaluation Board
 
-config MACH_SPEAR_HURRICANE
-	bool "NComputing SPEAr Hurricane Board"
-	select CPU_SPEAR1340
-	help
-	  Supports NComputing SPEAr Hurricane Board
-
-config MACH_SPEAR1340_LCAD
-	bool "SPEAr1340 Low Cost Access Device (LCAD) Board"
-	select CPU_SPEAR1340
-	help
-	  Supports SPEAr1340 Low Cost Access Device (LCAD) Board
-
 config SPEAR1340_PLUG_BOARDS
 	bool "SPEAr1340 Plug Boards"
 	depends on MACH_SPEAR1340_EVB && SPEAR_PLUG_BOARDS
@@ -62,11 +44,6 @@ config MACH_SPEAR900_EVB
 
 endmenu
 
-config CPU_SPEAR1300
-	bool "SPEAr1300"
-	help
-	  Supports ST SPEAr1300 Machine
-
 config CPU_SPEAR1310_REVA
 	bool "SPEAr1310 RevA"
 	help
@@ -82,11 +59,6 @@ config CPU_SPEAR1340
 	help
 	  Supports ST SPEAr1340 Machine
 
-config CPU_SPEAR900
-	bool "SPEAr900"
-	help
-	  Supports ST SPEAr900 Machine
-
 config DW_PCIE
 	bool "Synopsys Designware PCIe Host Controller"
 	depends on PCIEPORTBUS
diff --git a/arch/arm/mach-spear13xx/Makefile b/arch/arm/mach-spear13xx/Makefile
index 80c815f..47f8918 100644
--- a/arch/arm/mach-spear13xx/Makefile
+++ b/arch/arm/mach-spear13xx/Makefile
@@ -13,12 +13,6 @@ obj-$(CONFIG_SPEAR_PCIE_REV370)		+= spear_pcie_rev_370.o
 obj-$(CONFIG_PM)			+= pm.o wakeup.o sleep_1340.o sleep_13xx.o
 obj-y					+= db9000_lcd.o
 
-# spear1300 specific files
-obj-$(CONFIG_CPU_SPEAR1300)		+= clock.o spear1300.o
-
-# spear1300 boards files
-obj-$(CONFIG_MACH_SPEAR1300_EVB)	+= spear1300_evb.o
-
 # spear1310_reva specific files
 obj-$(CONFIG_CPU_SPEAR1310_REVA)	+= clock.o spear1310_reva.o
 
@@ -38,14 +32,3 @@ obj-$(CONFIG_CPU_SPEAR1340)		+= spear1340_clock.o spear1340.o
 # spear1340 boards files
 obj-$(CONFIG_MACH_SPEAR1340_EVB)	+= spear1340_evb.o
 obj-$(CONFIG_SPEAR1340_PLUG_BOARDS)	+= spear1340_plug_boards.o
-
-# NComputing spear hurricane boards files
-obj-$(MACH_SPEAR_HURRICANE)		+= spear_hurricane_board.o
-
-# SPEAr1340 LCAD Board
-obj-$(CONFIG_MACH_SPEAR1340_LCAD)	+= spear1340_lcad.o
-
-# spear900 specific files
-obj-$(CONFIG_CPU_SPEAR900)		+= clock.o spear900.o
-# spear900 boards files
-obj-$(CONFIG_MACH_SPEAR900_EVB)	+= spear900_evb.o
diff --git a/arch/arm/mach-spear13xx/clock.c b/arch/arm/mach-spear13xx/clock.c
index b33ed69..4dd0f3e 100644
--- a/arch/arm/mach-spear13xx/clock.c
+++ b/arch/arm/mach-spear13xx/clock.c
@@ -1340,11 +1340,6 @@ static struct clk ras_tx50_clk = {
 	.rate = 50000000,
 };
 
-/* spear1300 machine specific clock structures */
-#ifdef CONFIG_CPU_SPEAR1300
-
-#endif
-
 /* spear1310_reva machine specific clock structures */
 #ifdef CONFIG_CPU_SPEAR1310_REVA
 /* can0 clock */
@@ -1648,12 +1643,6 @@ static struct clk_lookup spear_clk_lookups[] = {
 	{.dev_id = "spear_thermal",	.clk = &thermal_clk},
 };
 
-/* array of all spear 1300 clock lookups */
-static struct clk_lookup spear1300_clk_lookups[] = {
-#ifdef CONFIG_CPU_SPEAR1300
-#endif
-};
-
 /* array of all spear 1310 clock lookups */
 static struct clk_lookup spear1310_reva_clk_lookups[] = {
 #ifdef CONFIG_CPU_SPEAR1310_REVA
@@ -1689,10 +1678,7 @@ void __init spear13xx_clk_init(void)
 	int i, cnt;
 	struct clk_lookup *lookups;
 
-	if (cpu_is_spear1300()) {
-		cnt = ARRAY_SIZE(spear1300_clk_lookups);
-		lookups = spear1300_clk_lookups;
-	} else if (cpu_is_spear1310_reva()) {
+	if (cpu_is_spear1310_reva()) {
 		cnt = ARRAY_SIZE(spear1310_reva_clk_lookups);
 		lookups = spear1310_reva_clk_lookups;
 	} else {
diff --git a/arch/arm/mach-spear13xx/db9000_lcd.c b/arch/arm/mach-spear13xx/db9000_lcd.c
index 13295e1..70c4f02 100644
--- a/arch/arm/mach-spear13xx/db9000_lcd.c
+++ b/arch/arm/mach-spear13xx/db9000_lcd.c
@@ -159,7 +159,7 @@ void spear13xx_panel_init(struct platform_device *pdev)
 		pr_err("Invalid panel requested:\n");
 		return;
 	}
-	if (machine_is_spear1340_evb() || machine_is_spear900_evb())
+	if (machine_is_spear1340_evb())
 		mach_info->def_mode = "1024x768-32@60";
 	else
 		mach_info->def_mode = "480x272-32@0";
diff --git a/arch/arm/mach-spear13xx/spear1300.c b/arch/arm/mach-spear13xx/spear1300.c
deleted file mode 100644
index 77bc2ed..0000000
--- a/arch/arm/mach-spear13xx/spear1300.c
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * arch/arm/mach-spear13xx/spear1300.c
- *
- * SPEAr1300 machine source file
- *
- * Copyright (C) 2010 ST Microelectronics
- * Shiraz Hashim <shiraz.hashim@st.com>
- *
- * This file is licensed under the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
- */
-
-#include <mach/generic.h>
-
-/* pmx driver structure */
-static struct pmx_driver pmx_driver;
-
-/* Add spear1300 specific devices here */
-
-void __init spear1300_init(struct pmx_mode *pmx_mode, struct pmx_dev **pmx_devs,
-		u8 pmx_dev_count)
-{
-	int ret;
-
-	/* call spear13xx family common init function */
-	spear13xx_init();
-
-	/* pmx initialization */
-	pmx_driver.mode = pmx_mode;
-	pmx_driver.devs = pmx_devs;
-	pmx_driver.devs_count = pmx_dev_count;
-
-	ret = pmx_register(&pmx_driver);
-	if (ret)
-		pr_err("padmux: registeration failed. err no: %d\n", ret);
-}
diff --git a/arch/arm/mach-spear13xx/spear1300_evb.c b/arch/arm/mach-spear13xx/spear1300_evb.c
deleted file mode 100644
index 7f1aa91..0000000
--- a/arch/arm/mach-spear13xx/spear1300_evb.c
+++ /dev/null
@@ -1,386 +0,0 @@
-/*
- * arch/arm/mach-spear13xx/spear1300_evb.c
- *
- * SPEAr1300 evaluation board source file
- *
- * Copyright (C) 2010 ST Microelectronics
- * Shiraz Hashim <shiraz.hashim@st.com>
- *
- * This file is licensed under the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
- */
-
-#include <linux/types.h>
-#include <linux/gpio.h>
-#include <linux/irq.h>
-#include <linux/mfd/stmpe.h>
-#include <linux/mtd/fsmc.h>
-#include <linux/mtd/nand.h>
-#include <linux/mtd/physmap.h>
-#include <linux/mtd/spear_smi.h>
-#include <linux/pata_arasan_cf_data.h>
-#include <linux/phy.h>
-#include <linux/spi/flash.h>
-#include <linux/spi/spi.h>
-#include <linux/stmmac.h>
-#include <video/db9000fb.h>
-#include <asm/hardware/gic.h>
-#include <asm/mach-types.h>
-#include <plat/keyboard.h>
-#include <plat/spi.h>
-#include <mach/generic.h>
-#include <mach/hardware.h>
-#include <mach/spear_pcie.h>
-
-/* padmux devices to enable */
-static struct pmx_dev *pmx_devs[] = {
-	/* spear13xx specific devices */
-	&spear13xx_pmx_i2c,
-	&spear13xx_pmx_i2s1,
-	&spear13xx_pmx_i2s2,
-	&spear13xx_pmx_clcd,
-	&spear13xx_pmx_egpio_grp,
-	&spear13xx_pmx_gmii,
-	&spear13xx_pmx_keyboard_6x6,
-	&spear13xx_pmx_mcif,
-	&spear13xx_pmx_nand_8bit,
-	&spear13xx_pmx_smi_4_chips,
-	&spear13xx_pmx_ssp,
-	&spear13xx_pmx_uart0,
-	&spear13xx_pmx_sdhci,
-
-	/* spear1300 specific devices */
-};
-
-static struct amba_device *amba_devs[] __initdata = {
-	&spear13xx_gpio_device[0],
-	&spear13xx_gpio_device[1],
-	&spear13xx_ssp_device,
-	&spear13xx_uart_device,
-};
-
-static struct platform_device *plat_devs[] __initdata = {
-	/* spear13xx specific devices */
-	&spear13xx_adc_device,
-	&spear13xx_cpufreq_device,
-	&spear13xx_db9000_clcd_device,
-#if defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE)
-	&spear13xx_device_gpiokeys,
-#endif
-	&spear13xx_dmac_device[0],
-	&spear13xx_dmac_device[1],
-	&spear13xx_ehci0_device,
-	&spear13xx_ehci1_device,
-	&spear13xx_eth_device,
-	&spear13xx_i2c_device,
-	&spear13xx_i2s0_device,
-	&spear13xx_jpeg_device,
-	&spear13xx_kbd_device,
-	&spear13xx_nand_device,
-	&spear13xx_ohci0_device,
-	&spear13xx_ohci1_device,
-	&spear13xx_pcie_gadget0_device,
-	&spear13xx_pcie_host1_device,
-	&spear13xx_pcie_host2_device,
-	&spear13xx_pcm_device,
-	&spear13xx_rtc_device,
-	&spear13xx_sdhci_device,
-	&spear13xx_smi_device,
-	&spear13xx_thermal_device,
-	&spear13xx_udc_device,
-	&spear13xx_wdt_device,
-	/* spear1300 specific devices */
-
-};
-
-/* Ethernet PLatform data */
-/* MDIO Bus Data */
-static struct stmmac_mdio_bus_data mdio0_private_data = {
-	.bus_id = 0,
-	.phy_mask = 0,
-};
-
-static struct stmmac_dma_cfg dma0_private_data = {
-	.pbl = 8,
-	.fixed_burst = 1,
-	.burst_len = DMA_AXI_BLEN_ALL,
-};
-
-static struct plat_stmmacenet_data eth_data = {
-	.bus_id = 0,
-	.phy_addr = 5,
-	.interface = PHY_INTERFACE_MODE_GMII,
-	.has_gmac = 1,
-	.enh_desc = 1,
-	.tx_coe = 1,
-	.dma_cfg = &dma0_private_data,
-	.rx_coe = STMMAC_RX_COE_TYPE2,
-	.bugged_jumbo = 1,
-	.pmt = 1,
-	.mdio_bus_data = &mdio0_private_data,
-	.init = spear13xx_eth_phy_clk_cfg,
-	.clk_csr = STMMAC_CSR_150_250M,
-};
-
-static struct mtd_partition nand_partition_info[] __initdata = {
-	{
-		.name = "X-loader",
-		.offset = 0,
-		.size = 4 * 0x20000,
-	}, {
-		.name = "U-Boot",
-		.offset = 4 * 0x20000,
-		.size = 12 * 0x20000,
-	}, {
-		.name = "Kernel",
-		.offset = (4 + 12) * 0x20000,
-		.size = 48 * 0x20000,
-	}, {
-		.name = "Root File System",
-		.offset = (4 + 12 + 48) * 0x20000,
-		.size = MTDPART_SIZ_FULL,
-	}
-};
-
-/* fsmc platform data */
-static const struct fsmc_nand_platform_data nand_plat_data __initconst = {
-	.select_bank = nand_select_bank,
-	.partitions = nand_partition_info,
-	.nr_partitions = ARRAY_SIZE(nand_partition_info),
-	.options = NAND_SKIP_BBTSCAN,
-	.width = FSMC_NAND_BW8,
-	.ale_off = PLAT_NAND_ALE,
-	.cle_off = PLAT_NAND_CLE,
-	.mode = USE_DMA_ACCESS,
-	.read_dma_priv = &nand_read_dma_priv,
-	.write_dma_priv = &nand_write_dma_priv,
-	.max_banks = 1,
-};
-
-#if 0
-/* fsmc nor partition info */
-#define PARTITION(n, off, sz)	{.name = n, .offset = off, .size = sz}
-static struct mtd_partition partition_info[] = {
-	PARTITION("X-loader", 0, 1 * 0x20000),
-	PARTITION("U-Boot", 0x20000, 3 * 0x20000),
-	PARTITION("Kernel", 0x80000, 24 * 0x20000),
-	PARTITION("Root File System", 0x380000, 84 * 0x20000),
-};
-
-/* fsmc nor platform data */
-static const struct physmap_flash_data nor_plat_data __initconst = {
-	.parts = partition_info,
-	.nr_parts = ARRAY_SIZE(partition_info),
-	.width = FSMC_FLASH_WIDTH8,
-};
-#endif
-
-/* arasan compact flash controller's platform data */
-static struct arasan_cf_pdata cf_pdata = {
-	.cf_if_clk = CF_IF_CLK_166M,
-	.quirk = CF_BROKEN_UDMA,
-	.dma_priv = &cf_dma_priv,
-};
-
-/* keyboard specific platform data */
-static const __initconst DECLARE_9x9_KEYMAP(keymap);
-static const struct matrix_keymap_data keymap_data __initconst = {
-	.keymap = keymap,
-	.keymap_size = ARRAY_SIZE(keymap),
-};
-
-static const struct kbd_platform_data kbd_data __initconst = {
-	.keymap = &keymap_data,
-	.rep = 1,
-	.mode = KEYPAD_9x9,
-};
-
-/* Currently no gpios are free on eval board so it is kept commented */
-#if 0
-/* spi0 flash Chip Select Control function, controlled by gpio pin mentioned */
-DECLARE_SPI_CS_GPIO_CONTROL(0, flash, /* mention gpio number here */);
-/* spi0 flash Chip Info structure */
-DECLARE_SPI_CHIP_INFO(0, flash, spi0_flash_cs_gpio_control);
-
-/* spi0 spidev Chip Select Control function, controlled by gpio pin mentioned */
-DECLARE_SPI_CS_GPIO_CONTROL(0, dev, /* mention gpio number here */);
-/* spi0 spidev Chip Info structure */
-DECLARE_SPI_CHIP_INFO(0, dev, spi0_dev_cs_gpio_control);
-#endif
-
-/* spi0 touch screen Chip Select Control function, controlled by gpio pin */
-DECLARE_SPI_CS_GPIO_CONTROL(0, ts, GPIO1_7);
-/* spi0 touch screen Info structure */
-static struct pl022_config_chip spi0_ts_chip_info = {
-	.iface = SSP_INTERFACE_MOTOROLA_SPI,
-	.hierarchy = SSP_MASTER,
-	.slave_tx_disable = 0,
-	.com_mode = INTERRUPT_TRANSFER,
-	.rx_lev_trig = SSP_RX_1_OR_MORE_ELEM,
-	.tx_lev_trig = SSP_TX_1_OR_MORE_EMPTY_LOC,
-	.ctrl_len = SSP_BITS_8,
-	.wait_state = SSP_MWIRE_WAIT_ZERO,
-	.duplex = SSP_MICROWIRE_CHANNEL_FULL_DUPLEX,
-	.cs_control = spi0_ts_cs_gpio_control,
-};
-
-static struct stmpe_ts_platform_data stmpe610_ts_pdata = {
-	.sample_time = 4, /* 80 clocks */
-	.mod_12b = 1, /* 12 bit */
-	.ref_sel = 0, /* Internal */
-	.adc_freq = 1, /* 3.25 MHz */
-	.ave_ctrl = 1, /* 2 samples */
-	.touch_det_delay = 2, /* 100 us */
-	.settling = 2, /* 500 us */
-	.fraction_z = 7,
-	.i_drive = 1, /* 50 to 80 mA */
-};
-
-static struct stmpe_platform_data stmpe610_pdata = {
-	.id = 0,
-	.blocks = STMPE_BLOCK_TOUCHSCREEN,
-	.irq_base = SPEAR_STMPE610_INT_BASE,
-	.irq_trigger = IRQ_TYPE_EDGE_FALLING,
-	.irq_invert_polarity = false,
-	.autosleep = false,
-	.irq_over_gpio = true,
-	.irq_gpio = GPIO1_6,
-	.ts = &stmpe610_ts_pdata,
-};
-
-static struct spi_board_info __initdata spi_board_info[] = {
-	/* spi0 board info */
-	{
-		.modalias = "stmpe610",
-		.platform_data = &stmpe610_pdata,
-		.controller_data = &spi0_ts_chip_info,
-		.max_speed_hz = 1000000,
-		.bus_num = 0,
-		.chip_select = 0,
-		.mode = SPI_MODE_1,
-	},
-#if 0
-	/* spi0 board info */
-	{
-		.modalias = "spidev",
-		.controller_data = &spi0_dev_chip_info,
-		.max_speed_hz = 25000000,
-		.bus_num = 0,
-		.chip_select = 0,
-		.mode = SPI_MODE_1,
-	}, {
-		.modalias = "m25p80",
-		.controller_data = &spi0_flash_chip_info,
-		.max_speed_hz = 12000000,
-		.bus_num = 0,
-		.chip_select = 1,
-		.mode = SPI_MODE_3,
-	}
-#endif
-};
-
-#ifdef CONFIG_SPEAR_PCIE_REV341
-/* This function is needed for board specific PCIe initilization */
-static void __init spear1300_pcie_board_init(void)
-{
-	void *plat_data;
-
-	plat_data = dev_get_platdata(&spear13xx_pcie_host1_device.dev);
-	PCIE_PORT_INIT((struct pcie_port_info *)plat_data, SPEAR_PCIE_REV_3_41);
-
-	plat_data = dev_get_platdata(&spear13xx_pcie_host2_device.dev);
-	PCIE_PORT_INIT((struct pcie_port_info *)plat_data, SPEAR_PCIE_REV_3_41);
-}
-#endif
-
-static void
-spear1300_evb_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
-{
-#if defined(CONFIG_FB_DB9000) || defined(CONFIG_FB_DB9000_MODULE)
-	spear13xx_panel_fixup(mi);
-#endif
-}
-
-static void __init spear1300_evb_init(void)
-{
-	unsigned int i;
-
-	/* set compact flash plat data */
-	set_arasan_cf_pdata(&spear13xx_cf_device, &cf_pdata);
-
-#if defined(CONFIG_FB_DB9000) || defined(CONFIG_FB_DB9000_MODULE)
-	/* db9000_clcd plat data */
-	spear13xx_panel_init(&spear13xx_db9000_clcd_device);
-#endif
-
-	/* call spear1300 machine init function */
-	spear1300_init(NULL, pmx_devs, ARRAY_SIZE(pmx_devs));
-
-	/* Set stmmac plat data */
-	if (platform_device_add_data(&spear13xx_eth_device, &eth_data,
-			sizeof(eth_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_eth_device.name);
-
-
-	/* set nand device's plat data */
-	nand_mach_init(FSMC_NAND_BW8);
-	if (platform_device_add_data(&spear13xx_nand_device, &nand_plat_data,
-				sizeof(nand_plat_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_nand_device.name);
-
-	/*
-	 * FSMC cannot used as NOR and NAND at the same time For the moment,
-	 * disable NOR and use NAND only. If NOR is needed, enable the following
-	 * code and disable all code for NAND. Also enable nand in padmux
-	 * configuration to use it
-	 */
-#if 0
-	/* Initialize fsmc regiters */
-	fsmc_nor_init(&spear13xx_fsmc_nor_device, SPEAR13XX_FSMC_BASE, 0,
-			FSMC_FLASH_WIDTH8);
-	/* initialize fsmc related data in fsmc plat data */
-	if (platform_device_add_data(&spear13xx_fsmc_nor_device, &nor_plat_data,
-				sizeof(nor_plat_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_fsmc_nor_device.name);
-#endif
-
-	/* set keyboard plat data */
-	if (platform_device_add_data(&spear13xx_kbd_device, &kbd_data,
-				sizeof(kbd_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_kbd_device.name);
-
-#ifdef CONFIG_SPEAR_PCIE_REV341
-	spear1300_pcie_board_init();
-#endif
-
-	/* initialize serial nor related data in smi plat data */
-	smi_init_board_info(&spear13xx_smi_device);
-
-	/* Register slave devices on the I2C buses */
-	i2c_register_default_devices();
-
-	spi_register_board_info(spi_board_info, ARRAY_SIZE(spi_board_info));
-
-	/* Add Platform Devices */
-	platform_add_devices(plat_devs, ARRAY_SIZE(plat_devs));
-
-	/* Add Amba Devices */
-	for (i = 0; i < ARRAY_SIZE(amba_devs); i++)
-		amba_device_register(amba_devs[i], &iomem_resource);
-}
-
-MACHINE_START(SPEAR1300_EVB, "ST-SPEAR1300-EVB")
-	.atag_offset	=	0x100,
-	.fixup		=	spear1300_evb_fixup,
-	.map_io		=	spear13xx_map_io,
-	.init_irq	=	spear13xx_init_irq,
-	.handle_irq	=	gic_handle_irq,
-	.timer		=	&spear13xx_timer,
-	.init_machine	=	spear1300_evb_init,
-	.restart	=	spear_restart,
-MACHINE_END
diff --git a/arch/arm/mach-spear13xx/spear1340_lcad.c b/arch/arm/mach-spear13xx/spear1340_lcad.c
deleted file mode 100644
index 6e4079b..0000000
--- a/arch/arm/mach-spear13xx/spear1340_lcad.c
+++ /dev/null
@@ -1,474 +0,0 @@
-/*
- * arch/arm/mach-spear13xx/spear1340_lcad.c
- *
- * SPEAr1340 based Low Cost Access Device (LCAD) Board's source file
- *
- * Copyright (C) 2012 ST Microelectronics
- * Viresh Kumar <viresh.kumar@st.com>
- *
- * This file is licensed under the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
- */
-
-#include <linux/amba/pl061.h>
-#include <linux/clk.h>
-#include <linux/types.h>
-#include <linux/gpio.h>
-
-#if defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE)
-#include <linux/gpio_keys.h>
-#include <linux/input.h>
-#endif
-
-#include <linux/i2c.h>
-#include <linux/i2c/lsm303dlh.h>
-#include <linux/irq.h>
-#include <linux/mtd/fsmc.h>
-#include <linux/mtd/nand.h>
-#include <linux/spi/spi.h>
-#include <media/soc_camera.h>
-#include <video/db9000fb.h>
-#include <asm/hardware/gic.h>
-#include <plat/i2c.h>
-#include <plat/spi.h>
-#include <mach/generic.h>
-#include <mach/hardware.h>
-#include <mach/spear1340_misc_regs.h>
-
-/* camera sensor registeration */
-static struct i2c_board_info hi704_camera_sensor_info = {
-	I2C_BOARD_INFO("hi704", 0x30),
-};
-
-/* Camera power: default is ON */
-static int hi704_cam_power(struct device *dev, int val)
-{
-	int ret;
-	static bool hi704_powered;
-
-	if (!hi704_powered) {
-
-		/*
-		 * hi704 is chip enable pin is connected to 2 gpio's on board
-		 * Keep one gpio always in input to keep the board safe.
-		 * Similarly, 2 spear gpio's connect to vsync. So, keep 1 in
-		 * input mode.
-		 */
-		ret = gpio_request(PLGPIO_40, "hi704-ce");
-		ret |= gpio_request(PLGPIO_51, "hi704-ce-psuedo");
-		ret |= gpio_request(PLGPIO_32, "hi704-vsync-psuedo");
-
-		if (!ret) {
-			gpio_direction_input(PLGPIO_51);
-			gpio_direction_input(PLGPIO_32);
-			gpio_direction_output(PLGPIO_40, 1);
-		} else {
-			pr_err("gpio request failed\n");
-			return ret;
-		}
-		hi704_powered = true;
-	}
-
-	/* turn on/off the CE pin for camera sensor */
-	if (val)
-		gpio_set_value_cansleep(PLGPIO_40, 0);
-	else
-		gpio_set_value_cansleep(PLGPIO_40, 1);
-
-	return 0;
-}
-
-static struct soc_camera_link hi704_cam0_sensor_iclink = {
-	.bus_id = 0,	/* sensor is connected to camera device */
-	.i2c_adapter_id = 1, /* sensor is connected to i2c controller 0 */
-	.board_info = &hi704_camera_sensor_info,
-	.power = hi704_cam_power,
-	.module_name = "hi704",
-};
-
-static struct platform_device cam0_sensor_device = {
-	.name = "soc-camera-pdrv",
-	.id = -1,
-	.dev = {
-		.platform_data = &hi704_cam0_sensor_iclink,
-	},
-};
-
-/*
- * Pad multiplexing for making few pads as plgpio's.
- * Please retain original values and addresses, and update only mask as
- * required.
- * For example: if we need to enable plgpio's on pads: 15, 28, 45 & 102.
- * They corresponds to following bits in registers: 16, 29, 46 & 103
- * So following mask entries will solve this purpose:
- * Reg1: .mask = 0x20010000,
- * Reg2: .mask = 0x00004000,
- * Reg4: .mask = 0x00000080,
- *
- * Note: Counting of bits and pads start from 0.
- */
-static struct pmx_mux_reg pmx_plgpios_mux[] = {
-	{
-		.address = SPEAR1340_PAD_FUNCTION_EN_1,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_2,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_3,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_4,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_5,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_6,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_7,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_8,
-		.mask = 0x0,
-		.value = 0x0,
-	},
-};
-
-static struct pmx_dev_mode pmx_plgpios_modes[] = {
-	{
-		.mux_regs = pmx_plgpios_mux,
-		.mux_reg_cnt = ARRAY_SIZE(pmx_plgpios_mux),
-	},
-};
-
-static struct pmx_dev pmx_plgpios = {
-	.name = "plgpios",
-	.modes = pmx_plgpios_modes,
-	.mode_count = ARRAY_SIZE(pmx_plgpios_modes),
-};
-
-/* SPEAr GPIO Buttons Info */
-#if defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE)
-/* SPEAr GPIO Buttons definition */
-#define SPEAR_GPIO_BTN9	9
-
-static struct gpio_keys_button spear1340_lcad_gpio_keys_table[] = {
-	{
-		.code = BTN_0,
-		.gpio = SPEAR_GPIO_BTN9,
-		.active_low = 0,
-		.desc = "gpio-keys: BTN0",
-		.type = EV_KEY,
-		.wakeup = 1,
-		.debounce_interval = 20,
-	}, {
-		.code = KEY_BACK,
-		.gpio = PLGPIO_53,
-		.active_low = 1,
-		.desc = "gpio-keys: BTN1:BACK",
-		.type = EV_KEY,
-		.wakeup = 0,
-		.debounce_interval = 20,
-	}, {
-		.code = KEY_MENU,
-		.gpio = PLGPIO_52,
-		.active_low = 1,
-		.desc = "gpio-keys: BTN2:MENU",
-		.type = EV_KEY,
-		.wakeup = 0,
-		.debounce_interval = 20,
-	}, {
-		.code = KEY_HOME,
-		.gpio = PLGPIO_48,
-		.active_low = 1,
-		.desc = "gpio-keys: BTN3:HOME",
-		.type = EV_KEY,
-		.wakeup = 0,
-		.debounce_interval = 20,
-	}, {
-		.code = KEY_VOLUMEDOWN,
-		.gpio = PLGPIO_37,
-		.active_low = 1,
-		.desc = "gpio-keys: BTN4:VOLUMEDOWN",
-		.type = EV_KEY,
-		.wakeup = 0,
-		.debounce_interval = 20,
-	}, {
-		.code = KEY_VOLUMEUP,
-		.gpio = PLGPIO_42,
-		.active_low = 1,
-		.desc = "gpio-keys: BTN5:VOLUMEUP",
-		.type = EV_KEY,
-		.wakeup = 0,
-		.debounce_interval = 20,
-	},
-};
-
-static struct gpio_keys_platform_data spear1340_lcad_gpio_keys_data = {
-	.buttons = spear1340_lcad_gpio_keys_table,
-	.nbuttons = ARRAY_SIZE(spear1340_lcad_gpio_keys_table),
-};
-
-struct platform_device spear1340_lcad_gpiokeys_device = {
-	.name = "gpio-keys",
-	.dev = {
-		.platform_data = &spear1340_lcad_gpio_keys_data,
-	},
-};
-#endif
-
-/* Pad Multiplexing for LSM303DLH Accelerometer device */
-static struct pmx_mux_reg lsm303_plgpios_mux[] = {
-	{
-		.address = SPEAR1340_PAD_FUNCTION_EN_2,
-		.mask = 0x42100, /* PLGPIO: 39, 44, 49 */
-		.value = 0x0,
-	},
-};
-
-static struct pmx_dev_mode lsm303_plgpios_modes[] = {
-	{
-		.mux_regs = lsm303_plgpios_mux,
-		.mux_reg_cnt = ARRAY_SIZE(lsm303_plgpios_mux),
-	},
-};
-
-struct pmx_dev pmx_lsm303 = {
-	.name = "lsm303_acc_mag",
-	.modes = lsm303_plgpios_modes,
-	.mode_count = ARRAY_SIZE(lsm303_plgpios_modes),
-};
-
-/* padmux devices to enable */
-static struct pmx_dev *pmx_devs[] = {
-	/*
-	 * Keep pads_as_gpio as the first element in this array. Don't ever
-	 * remove it. It makes all pads as gpio's in starting, and then pads are
-	 * configured as peripherals wherever required.
-	 */
-	&spear1340_pmx_pads_as_gpio,
-	&spear1340_pmx_fsmc_8bit,
-	&spear1340_pmx_i2c1,
-	&spear1340_pmx_ssp0_cs1,
-	&spear1340_pmx_ssp0,
-	&spear1340_pmx_uart0,
-	&spear1340_pmx_i2s_in,
-	&spear1340_pmx_i2s_out,
-	&spear1340_pmx_i2c0,
-	&spear1340_pmx_mcif,
-	&spear1340_pmx_sdhci,
-	&spear1340_pmx_cam0,
-	&spear1340_pmx_clcd,
-	&spear1340_pmx_clcd_gpio_pd,
-	&spear1340_pmx_devs_grp,
-	&pmx_lsm303,
-
-	/* Keep this entry at the bottom of table to override earlier setting */
-	&pmx_plgpios,
-};
-
-static struct amba_device *amba_devs[] __initdata = {
-	/* spear13xx specific devices */
-	&spear13xx_gpio_device[0],
-	&spear13xx_gpio_device[1],
-	&spear13xx_ssp_device,
-	&spear13xx_uart_device,
-};
-
-static struct platform_device *plat_devs[] __initdata = {
-	/* spear13xx specific devices */
-	&spear13xx_adc_device,
-	&spear13xx_db9000_clcd_device,
-	&spear13xx_dmac_device[0],
-	&spear13xx_dmac_device[1],
-	&spear13xx_ehci0_device,
-	&spear13xx_ehci1_device,
-	&spear13xx_i2c_device,
-	&spear1340_nand_device,
-	&spear1340_i2s_play_device,
-	&spear1340_i2s_record_device,
-	&spear13xx_ohci0_device,
-	&spear13xx_ohci1_device,
-	&spear13xx_pcm_device,
-	&spear13xx_rtc_device,
-	&spear13xx_sdhci_device,
-	&spear13xx_wdt_device,
-
-	/* spear1340 specific devices */
-	&spear1340_camif0_device,
-	&cam0_sensor_device,
-	&spear1340_i2c1_device,
-	&spear1340_plgpio_device,
-	&spear1340_otg_device,
-	&spear1340_thermal_device,
-
-	/* spear1340 lcad specific devices */
-#if defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE)
-	&spear1340_lcad_gpiokeys_device,
-#endif
-
-};
-
-static struct mtd_partition nand_partition_info[] __initdata = {
-	{
-		.name = "X-loader",
-		.offset = 0,
-		.size = 4 * 0x80000,
-	}, {
-		.name = "U-Boot",
-		.offset = 4 * 0x80000,
-		.size = 6 * 0x80000,
-	}, {
-		.name = "Kernel",
-		.offset = (4 + 6) * 0x80000,
-		.size = 24 * 0x80000,
-	}, {
-		.name = "Root File System",
-		.offset = (4 + 12 + 24) * 0x80000,
-		.size = MTDPART_SIZ_FULL,
-	}
-};
-
-/* fsmc platform data */
-static const struct fsmc_nand_platform_data nand_plat_data __initconst = {
-	.select_bank = nand_select_bank,
-	.partitions = nand_partition_info,
-	.nr_partitions = ARRAY_SIZE(nand_partition_info),
-	.options = NAND_SKIP_BBTSCAN,
-	.width = FSMC_NAND_BW8,
-	.ale_off = PLAT_NAND_ALE,
-	.cle_off = PLAT_NAND_CLE,
-	.mode = USE_DMA_ACCESS,
-	.read_dma_priv = &nand_read_dma_priv,
-	.write_dma_priv = &nand_write_dma_priv,
-	.max_banks = 1,
-};
-
-/* I2S STA529 i2c board info */
-static struct i2c_board_info i2c_sta529 = {
-	.type = "sta529",
-	.addr = 0x1a,
-};
-
-static struct i2c_dev_info i2c_dev_sta529 = {
-	.board = &i2c_sta529,
-	.busnum = 0,
-};
-
-/* lsm303dlh accelerometer board info */
-static struct lsm303dlh_platform_data lsm303dlh_a_pdata = {
-	.axis_map_x = 0,
-	.axis_map_y = 1,
-	.axis_map_z = 2,
-	.name_a = "lsm303dlh_a",
-#ifdef CONFIG_INPUT_ST_LSM303DLH_INPUT_DEVICE
-	.irq_a1 = PLGPIO_49,
-	.irq_a2 = PLGPIO_44,
-#endif
-};
-
-static struct i2c_board_info i2c_lsm303dlh_acc = {
-	.type = "lsm303dlh_a",
-	.addr = 0x19,
-	.platform_data = &lsm303dlh_a_pdata,
-};
-
-static struct i2c_dev_info i2c_dev_lsm303dlh_acc = {
-	.board = &i2c_lsm303dlh_acc,
-	.busnum = 1,
-};
-
-/* lsm303dlh magnetometer board info */
-static struct lsm303dlh_platform_data lsm303dlh_m_pdata = {
-	.axis_map_x = 0,
-	.axis_map_y = 1,
-	.axis_map_z = 2,
-	.name_m = "lsm303dlh_m",
-#ifdef CONFIG_INPUT_ST_LSM303DLH_INPUT_DEVICE
-	.irq_m = PLGPIO_40,
-#endif
-};
-
-static struct i2c_board_info i2c_lsm303dlh_mag = {
-	.type = "lsm303dlh_m",
-	.addr = 0x1E,
-	.platform_data = &lsm303dlh_m_pdata,
-};
-
-static struct i2c_dev_info i2c_dev_lsm303dlh_mag = {
-	.board = &i2c_lsm303dlh_mag,
-	.busnum = 1,
-};
-
-static struct i2c_dev_info *i2c_devs[] __initdata = {
-	&i2c_dev_sta529,
-	&i2c_dev_lsm303dlh_acc,
-	&i2c_dev_lsm303dlh_mag,
-};
-
-static void
-lcad_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
-{
-#if defined(CONFIG_FB_DB9000) || defined(CONFIG_FB_DB9000_MODULE)
-	spear13xx_panel_fixup(mi);
-#endif
-}
-
-static void __init lcad_init(void)
-{
-	unsigned int i;
-	struct pl061_platform_data *gpio0_pdata;
-
-#if (defined(CONFIG_FB_DB9000) || defined(CONFIG_FB_DB9000_MODULE))
-	/* db9000_clcd plat data */
-	spear13xx_panel_init(&spear13xx_db9000_clcd_device);
-#endif
-
-	/* Set GPIO0_3 as 1 and others in input mode */
-	gpio0_pdata = dev_get_platdata(&spear13xx_gpio_device[0].dev);
-	gpio0_pdata->directions = 0x08;
-	gpio0_pdata->values = 0x08;
-
-	/* set nand device's plat data */
-	nand_mach_init(FSMC_NAND_BW8);
-	if (platform_device_add_data(&spear1340_nand_device, &nand_plat_data,
-				sizeof(nand_plat_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear1340_nand_device.name);
-
-	/* call spear1340 machine init function */
-	spear1340_init(NULL, pmx_devs, ARRAY_SIZE(pmx_devs));
-
-	/* Register spear1340 evb board specific i2c slave devices */
-	for (i = 0; i < ARRAY_SIZE(i2c_devs); i++)
-		i2c_register_board_info(i2c_devs[i]->busnum, i2c_devs[i]->board,
-				1);
-
-	/* Add Platform Devices */
-	platform_add_devices(plat_devs, ARRAY_SIZE(plat_devs));
-
-	/* Add Amba Devices */
-	for (i = 0; i < ARRAY_SIZE(amba_devs); i++)
-		amba_device_register(amba_devs[i], &iomem_resource);
-}
-
-MACHINE_START(SPEAR1340_LCAD, "SPEAR1340-LCAD")
-	.atag_offset	=	0x100,
-	.fixup		=	lcad_fixup,
-	.map_io		=	spear13xx_map_io,
-	.init_irq	=	spear13xx_init_irq,
-	.handle_irq	=	gic_handle_irq,
-	.timer		=	&spear13xx_timer,
-	.init_machine	=	lcad_init,
-	.restart	=	spear_restart,
-MACHINE_END
diff --git a/arch/arm/mach-spear13xx/spear13xx.c b/arch/arm/mach-spear13xx/spear13xx.c
index 17d330e..8df778c 100644
--- a/arch/arm/mach-spear13xx/spear13xx.c
+++ b/arch/arm/mach-spear13xx/spear13xx.c
@@ -1340,13 +1340,10 @@ static void i2s_clk_init(void)
 	struct clk *i2s_ref_pad_clk, *i2s_sclk_clk;
 	char *src_pclk_name, *ref_pclk_name;
 
-	if (machine_is_spear1340_lcad() || !cpu_is_spear1340()) {
-		if (machine_is_spear1340_lcad())
-			src_pclk_name = "pll2_clk";
-		else
-			src_pclk_name = "pll3_clk";
+	if (!cpu_is_spear1340()) {
+		src_pclk_name = "pll3_clk";
 
-		 ref_pclk_name = "i2s_prs1_clk";
+		ref_pclk_name = "i2s_prs1_clk";
 
 		/* set pll to 49.15 Mhz */
 		if (clk_set_rate_sys(NULL, src_pclk_name, 49152000)) {
@@ -1370,7 +1367,7 @@ static void i2s_clk_init(void)
 	}
 
 	/* program prescalar if required */
-	if (machine_is_spear1340_lcad() || !cpu_is_spear1340()) {
+	if (!cpu_is_spear1340()) {
 		/* set to 12.288 Mhz */
 		if (clk_set_rate_sys(NULL, ref_pclk_name, 12288000)) {
 			pr_err("%s:set_rate of %s fail\n", __func__,
diff --git a/arch/arm/mach-spear13xx/spear900.c b/arch/arm/mach-spear13xx/spear900.c
deleted file mode 100644
index db00618..0000000
--- a/arch/arm/mach-spear13xx/spear900.c
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * arch/arm/mach-spear13xx/spear900.c
- *
- * SPEAr900 machine source file
- *
- * Copyright (C) 2010 ST Microelectronics
- * Viresh Kumar <viresh.kumar@st.com>
- *
- * This file is licensed under the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
- */
-
-#include <mach/generic.h>
-
-/* pmx driver structure */
-static struct pmx_driver pmx_driver;
-
-/* Add spear900 specific devices here */
-
-void __init spear900_init(struct pmx_mode *pmx_mode, struct pmx_dev **pmx_devs,
-		u8 pmx_dev_count)
-{
-	int ret;
-
-	/* call spear13xx family common init function */
-	spear13xx_init();
-
-	/* pmx initialization */
-	pmx_driver.mode = pmx_mode;
-	pmx_driver.devs = pmx_devs;
-	pmx_driver.devs_count = pmx_dev_count;
-
-	ret = pmx_register(&pmx_driver);
-	if (ret)
-		pr_err("padmux: registeration failed. err no: %d\n", ret);
-}
diff --git a/arch/arm/mach-spear13xx/spear900_evb.c b/arch/arm/mach-spear13xx/spear900_evb.c
deleted file mode 100644
index 47bd82a..0000000
--- a/arch/arm/mach-spear13xx/spear900_evb.c
+++ /dev/null
@@ -1,409 +0,0 @@
-/*
- * arch/arm/mach-spear13xx/spear900_evb.c
- *
- * SPEAr900 evaluation board source file
- *
- * Copyright (C) 2010 ST Microelectronics
- * Viresh Kumar <viresh.kumar@st.com>
- *
- * This file is licensed under the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
- */
-
-#include <linux/irq.h>
-#include <linux/types.h>
-#include <linux/gpio.h>
-#include <linux/i2c.h>
-#include <linux/i2c/l3g4200d.h>
-#include <linux/mfd/stmpe.h>
-#include <linux/mtd/fsmc.h>
-#include <linux/mtd/nand.h>
-#include <linux/mtd/physmap.h>
-#include <linux/mtd/spear_smi.h>
-#include <linux/pata_arasan_cf_data.h>
-#include <linux/phy.h>
-#include <linux/spi/flash.h>
-#include <linux/spi/spi.h>
-#include <linux/stmmac.h>
-#include <video/db9000fb.h>
-#include <asm/hardware/gic.h>
-#include <asm/mach-types.h>
-#include <plat/keyboard.h>
-#include <plat/spi.h>
-#include <mach/generic.h>
-#include <mach/hardware.h>
-#include <mach/spear_pcie.h>
-
-/* padmux devices to enable */
-static struct pmx_dev *pmx_devs[] = {
-	/* spear13xx specific devices */
-	&spear13xx_pmx_i2c,
-	&spear13xx_pmx_i2s1,
-	&spear13xx_pmx_i2s2,
-	&spear13xx_pmx_clcd,
-	&spear13xx_pmx_egpio_grp,
-	&spear13xx_pmx_gmii,
-	&spear13xx_pmx_keyboard_6x6,
-	&spear13xx_pmx_mcif,
-	&spear13xx_pmx_nand_8bit,
-	&spear13xx_pmx_smi_4_chips,
-	&spear13xx_pmx_ssp,
-	&spear13xx_pmx_uart0,
-	&spear13xx_pmx_sdhci,
-
-	/* spear900 specific devices */
-};
-
-static struct amba_device *amba_devs[] __initdata = {
-	&spear13xx_gpio_device[0],
-	&spear13xx_gpio_device[1],
-	&spear13xx_ssp_device,
-	&spear13xx_uart_device,
-};
-
-static struct platform_device *plat_devs[] __initdata = {
-	/* spear13xx specific devices */
-	&spear13xx_adc_device,
-	&spear13xx_cpufreq_device,
-	&spear13xx_db9000_clcd_device,
-#if defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE)
-	&spear13xx_device_gpiokeys,
-#endif
-	&spear13xx_dmac_device[0],
-	&spear13xx_dmac_device[1],
-	&spear13xx_ehci0_device,
-	&spear13xx_ehci1_device,
-	&spear13xx_eth_device,
-	&spear13xx_i2c_device,
-	&spear13xx_i2s0_device,
-	&spear13xx_jpeg_device,
-	&spear13xx_kbd_device,
-	&spear13xx_nand_device,
-	&spear13xx_ohci0_device,
-	&spear13xx_ohci1_device,
-	&spear13xx_pcie_gadget0_device,
-	&spear13xx_pcie_host1_device,
-	&spear13xx_pcie_host2_device,
-	&spear13xx_pcm_device,
-	&spear13xx_rtc_device,
-	&spear13xx_sdhci_device,
-	&spear13xx_smi_device,
-	&spear13xx_thermal_device,
-	&spear13xx_udc_device,
-	&spear13xx_wdt_device,
-
-};
-
-/* Ethernet Platform Data */
-/* MDIO Bus Data */
-static struct stmmac_mdio_bus_data mdio0_private_data = {
-	.bus_id = 0,
-	.phy_mask = 0,
-};
-
-static struct stmmac_dma_cfg dma0_private_data = {
-	.pbl = 8,
-	.fixed_burst = 1,
-	.burst_len = DMA_AXI_BLEN_ALL,
-};
-
-static struct plat_stmmacenet_data eth_data = {
-	.bus_id = 0,
-	.phy_addr = 5,
-	.interface = PHY_INTERFACE_MODE_GMII,
-	.has_gmac = 1,
-	.enh_desc = 1,
-	.tx_coe = 1,
-	.dma_cfg = &dma0_private_data,
-	.rx_coe = STMMAC_RX_COE_TYPE2,
-	.bugged_jumbo = 1,
-	.pmt = 1,
-	.mdio_bus_data = &mdio0_private_data,
-	.init = spear13xx_eth_phy_clk_cfg,
-	.clk_csr = STMMAC_CSR_150_250M,
-};
-
-static struct mtd_partition nand_partition_info[] __initdata = {
-	{
-		.name = "X-loader",
-		.offset = 0,
-		.size = 4 * 0x20000,
-	}, {
-		.name = "U-Boot",
-		.offset = 4 * 0x20000,
-		.size = 12 * 0x20000,
-	}, {
-		.name = "Kernel",
-		.offset = (4 + 12) * 0x20000,
-		.size = 48 * 0x20000,
-	}, {
-		.name = "Root File System",
-		.offset = (4 + 12 + 48) * 0x20000,
-		.size = MTDPART_SIZ_FULL,
-	}
-};
-
-/* fsmc platform data */
-static const struct fsmc_nand_platform_data nand_plat_data __initconst = {
-	.select_bank = nand_select_bank,
-	.partitions = nand_partition_info,
-	.nr_partitions = ARRAY_SIZE(nand_partition_info),
-	.options = NAND_SKIP_BBTSCAN,
-	.width = FSMC_NAND_BW8,
-	.ale_off = PLAT_NAND_ALE,
-	.cle_off = PLAT_NAND_CLE,
-	.mode = USE_DMA_ACCESS,
-	.read_dma_priv = &nand_read_dma_priv,
-	.write_dma_priv = &nand_write_dma_priv,
-	.max_banks = 1,
-};
-
-#if 0
-/* fsmc nor partition info */
-#define PARTITION(n, off, sz)	{.name = n, .offset = off, .size = sz}
-static struct mtd_partition partition_info[] = {
-	PARTITION("X-loader", 0, 1 * 0x20000),
-	PARTITION("U-Boot", 0x20000, 3 * 0x20000),
-	PARTITION("Kernel", 0x80000, 24 * 0x20000),
-	PARTITION("Root File System", 0x380000, 84 * 0x20000),
-};
-
-/* fsmc nor platform data */
-static const struct physmap_flash_data nor_plat_data __initconst = {
-	.parts = partition_info,
-	.nr_parts = ARRAY_SIZE(partition_info),
-	.width = FSMC_FLASH_WIDTH8,
-};
-#endif
-
-/* arasan compact flash controller's platform data */
-static struct arasan_cf_pdata cf_pdata = {
-	.cf_if_clk = CF_IF_CLK_166M,
-	.quirk = CF_BROKEN_UDMA,
-	.dma_priv = &cf_dma_priv,
-};
-
-/* keyboard specific platform data */
-static const __initconst DECLARE_9x9_KEYMAP(keymap);
-static const struct matrix_keymap_data keymap_data __initconst = {
-	.keymap = keymap,
-	.keymap_size = ARRAY_SIZE(keymap),
-};
-
-static const struct kbd_platform_data kbd_data __initconst = {
-	.keymap = &keymap_data,
-	.rep = 1,
-	.mode = KEYPAD_9x9,
-};
-
-/* Initializing platform data for SPEAr900 specific Input devices on I2C Bus */
-/* Gyroscope platform data */
-static struct l3g4200d_gyr_platform_data l3g4200d_pdata = {
-	.poll_interval = 5,
-	.min_interval = 2,
-	.axis_map_x = 0,
-	.axis_map_y = 1,
-	.axis_map_z = 2,
-};
-
-static struct i2c_board_info __initdata i2c_board_info[] = {
-	/* gyroscope board info */
-	{
-		.type = "l3g4200d_gyr",
-		.addr = 0x68,
-		.platform_data = &l3g4200d_pdata,
-	},
-};
-
-/* Currently no gpios are free on eval board so it is kept commented */
-#if 0
-/* spi0 flash Chip Select Control function, controlled by gpio pin mentioned */
-DECLARE_SPI_CS_GPIO_CONTROL(0, flash, /* mention gpio number here */);
-/* spi0 flash Chip Info structure */
-DECLARE_SPI_CHIP_INFO(0, flash, spi0_flash_cs_gpio_control);
-
-/* spi0 spidev Chip Select Control function, controlled by gpio pin mentioned */
-DECLARE_SPI_CS_GPIO_CONTROL(0, dev, /* mention gpio number here */);
-/* spi0 spidev Chip Info structure */
-DECLARE_SPI_CHIP_INFO(0, dev, spi0_dev_cs_gpio_control);
-#endif
-
-/* spi0 touch screen Chip Select Control function, controlled by gpio pin */
-DECLARE_SPI_CS_GPIO_CONTROL(0, ts, GPIO1_7);
-/* spi0 touch screen Info structure */
-static struct pl022_config_chip spi0_ts_chip_info = {
-	.iface = SSP_INTERFACE_MOTOROLA_SPI,
-	.hierarchy = SSP_MASTER,
-	.slave_tx_disable = 0,
-	.com_mode = INTERRUPT_TRANSFER,
-	.rx_lev_trig = SSP_RX_1_OR_MORE_ELEM,
-	.tx_lev_trig = SSP_TX_1_OR_MORE_EMPTY_LOC,
-	.ctrl_len = SSP_BITS_8,
-	.wait_state = SSP_MWIRE_WAIT_ZERO,
-	.duplex = SSP_MICROWIRE_CHANNEL_FULL_DUPLEX,
-	.cs_control = spi0_ts_cs_gpio_control,
-};
-
-static struct stmpe_ts_platform_data stmpe610_ts_pdata = {
-	.sample_time = 4, /* 80 clocks */
-	.mod_12b = 1, /* 12 bit */
-	.ref_sel = 0, /* Internal */
-	.adc_freq = 1, /* 3.25 MHz */
-	.ave_ctrl = 1, /* 2 samples */
-	.touch_det_delay = 2, /* 100 us */
-	.settling = 2, /* 500 us */
-	.fraction_z = 7,
-	.i_drive = 1, /* 50 to 80 mA */
-};
-
-static struct stmpe_platform_data stmpe610_pdata = {
-	.id = 0,
-	.blocks = STMPE_BLOCK_TOUCHSCREEN,
-	.irq_base = SPEAR_STMPE610_INT_BASE,
-	.irq_trigger = IRQ_TYPE_EDGE_FALLING,
-	.irq_invert_polarity = false,
-	.autosleep = false,
-	.irq_over_gpio = true,
-	.irq_gpio = GPIO1_6,
-	.ts = &stmpe610_ts_pdata,
-};
-
-static struct spi_board_info __initdata spi_board_info[] = {
-	/* spi0 board info */
-	{
-		.modalias = "stmpe610",
-		.platform_data = &stmpe610_pdata,
-		.controller_data = &spi0_ts_chip_info,
-		.max_speed_hz = 1000000,
-		.bus_num = 0,
-		.chip_select = 0,
-		.mode = SPI_MODE_1,
-	},
-#if 0
-	/* spi0 board info */
-	{
-		.modalias = "spidev",
-		.controller_data = &spi0_dev_chip_info,
-		.max_speed_hz = 25000000,
-		.bus_num = 0,
-		.chip_select = 0,
-		.mode = SPI_MODE_1,
-	}, {
-		.modalias = "m25p80",
-		.controller_data = &spi0_flash_chip_info,
-		.max_speed_hz = 12000000,
-		.bus_num = 0,
-		.chip_select = 1,
-		.mode = SPI_MODE_3,
-	}
-#endif
-};
-
-#ifdef CONFIG_SPEAR_PCIE_REV341
-/* This function is needed for board specific PCIe initilization */
-static void __init spear900_pcie_board_init(void)
-{
-	void *plat_data;
-
-	plat_data = dev_get_platdata(&spear13xx_pcie_host1_device.dev);
-	PCIE_PORT_INIT((struct pcie_port_info *)plat_data, SPEAR_PCIE_REV_3_41);
-
-	plat_data = dev_get_platdata(&spear13xx_pcie_host2_device.dev);
-	PCIE_PORT_INIT((struct pcie_port_info *)plat_data, SPEAR_PCIE_REV_3_41);
-}
-#endif
-
-static void
-spear900_evb_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
-{
-#if defined(CONFIG_FB_DB9000) || defined(CONFIG_FB_DB9000_MODULE)
-	spear13xx_panel_fixup(mi);
-#endif
-}
-
-static void __init spear900_evb_init(void)
-{
-	unsigned int i;
-
-	/* set compact flash plat data */
-	set_arasan_cf_pdata(&spear13xx_cf_device, &cf_pdata);
-
-#if (defined(CONFIG_FB_DB9000) || defined(CONFIG_FB_DB9000_MODULE))
-	/* db9000_clcd plat data */
-	spear13xx_panel_init(&spear13xx_db9000_clcd_device);
-#endif
-
-	/* call spear900 machine init function */
-	spear900_init(NULL, pmx_devs, ARRAY_SIZE(pmx_devs));
-
-	/* Set stmmac plat data */
-	if (platform_device_add_data(&spear13xx_eth_device, &eth_data,
-			sizeof(eth_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_eth_device.name);
-
-	/* set nand device's plat data */
-	nand_mach_init(FSMC_NAND_BW8);
-	if (platform_device_add_data(&spear13xx_nand_device, &nand_plat_data,
-				sizeof(nand_plat_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_nand_device.name);
-
-	/*
-	 * FSMC cannot used as NOR and NAND at the same time For the moment,
-	 * disable NOR and use NAND only. If NOR is needed, enable the following
-	 * code and disable all code for NAND. Also enable nand in padmux
-	 * configuration to use it
-	 */
-#if 0
-	/* Initialize fsmc regiters */
-	fsmc_nor_init(&spear13xx_fsmc_nor_device, SPEAR13XX_FSMC_BASE, 0,
-			FSMC_FLASH_WIDTH8);
-	/* initialize fsmc related data in fsmc plat data */
-	if (platform_device_add_data(&spear13xx_fsmc_nor_device, &nor_plat_data,
-				sizeof(nor_plat_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_fsmc_nor_device.name);
-#endif
-
-	/* set keyboard plat data */
-	if (platform_device_add_data(&spear13xx_kbd_device, &kbd_data,
-				sizeof(kbd_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_kbd_device.name);
-
-#ifdef CONFIG_SPEAR_PCIE_REV341
-	spear900_pcie_board_init();
-#endif
-
-	/* initialize serial nor related data in smi plat data */
-	smi_init_board_info(&spear13xx_smi_device);
-
-	/* Register slave devices on the I2C buses */
-	i2c_register_default_devices();
-
-	/* Register EVB 900 specific i2c slave devices */
-	i2c_register_board_info(0, i2c_board_info,
-				ARRAY_SIZE(i2c_board_info));
-
-	spi_register_board_info(spi_board_info, ARRAY_SIZE(spi_board_info));
-
-	/* Add Platform Devices */
-	platform_add_devices(plat_devs, ARRAY_SIZE(plat_devs));
-
-	/* Add Amba Devices */
-	for (i = 0; i < ARRAY_SIZE(amba_devs); i++)
-		amba_device_register(amba_devs[i], &iomem_resource);
-}
-
-MACHINE_START(SPEAR900_EVB, "ST-SPEAR900-EVB")
-	.atag_offset	=	0x100,
-	.fixup		=	spear900_evb_fixup,
-	.map_io		=	spear13xx_map_io,
-	.init_irq	=	spear13xx_init_irq,
-	.handle_irq	=	gic_handle_irq,
-	.timer		=	&spear13xx_timer,
-	.init_machine	=	spear900_evb_init,
-	.restart	=	spear_restart,
-MACHINE_END
diff --git a/arch/arm/mach-spear13xx/spear_hurricane_board.c b/arch/arm/mach-spear13xx/spear_hurricane_board.c
deleted file mode 100644
index ad391b6..0000000
--- a/arch/arm/mach-spear13xx/spear_hurricane_board.c
+++ /dev/null
@@ -1,445 +0,0 @@
-/*
- * arch/arm/mach-spear13xx/spear_hurricane_board.c
- *
- * NComputing SPEAr Hurricane board source file
- *
- * Copyright (C) 2011 ST Microelectronics
- * Vincenzo Frascino <vincenzo.frascino@st.com>
- *
- * This file is licensed under the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
- */
-
-#include <linux/clk.h>
-#include <linux/types.h>
-#include <linux/gpio.h>
-#include <linux/i2c.h>
-#include <linux/i2c/l3g4200d.h>
-#include <linux/irq.h>
-#include <linux/mtd/fsmc.h>
-#include <linux/mtd/nand.h>
-#include <linux/netdevice.h>
-#include <linux/pata_arasan_cf_data.h>
-#include <linux/phy.h>
-#include <linux/spi/spi.h>
-#include <linux/stmmac.h>
-#include <video/db9000fb.h>
-#include <asm/hardware/gic.h>
-#include <plat/keyboard.h>
-#include <plat/spi.h>
-#include <mach/generic.h>
-#include <mach/hardware.h>
-#include <mach/plug_board.h>
-#include <mach/spear1340_misc_regs.h>
-#include <mach/spear_pcie.h>
-
-/*
- * Pad multiplexing for making few pads as plgpio's.
- * Please retain original values and addresses, and update only mask as
- * required.
- * For example: if we need to enable plgpio's on pads: 15, 28, 45 & 102.
- * They corresponds to following bits in registers: 16, 29, 46 & 103
- * So following mask entries will solve this purpose:
- * Reg1: .mask = 0x20010000,
- * Reg2: .mask = 0x00004000,
- * Reg4: .mask = 0x00000080,
- *
- * Note: Counting of bits and pads start from 0.
- */
-static struct pmx_mux_reg pmx_plgpios_mux[] = {
-	{
-		.address = SPEAR1340_PAD_FUNCTION_EN_1,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_2,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_3,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_4,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_5,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_6,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_7,
-		.mask = 0x0,
-		.value = 0x0,
-	}, {
-		.address = SPEAR1340_PAD_FUNCTION_EN_8,
-		.mask = 0x0,
-		.value = 0x0,
-	},
-};
-
-static struct pmx_dev_mode pmx_plgpios_modes[] = {
-	{
-		.mux_regs = pmx_plgpios_mux,
-		.mux_reg_cnt = ARRAY_SIZE(pmx_plgpios_mux),
-	},
-};
-
-static struct pmx_dev spear1340_pmx_plgpios = {
-	.name = "plgpios",
-	.modes = pmx_plgpios_modes,
-	.mode_count = ARRAY_SIZE(pmx_plgpios_modes),
-};
-
-/* padmux devices to enable */
-static struct pmx_dev *pmx_devs[] = {
-	/*
-	 * Keep pads_as_gpio as the first element in this array. Don't ever
-	 * remove it. It makes all pads as gpio's in starting, and then pads are
-	 * configured as peripherals wherever required.
-	 */
-	&spear1340_pmx_pads_as_gpio,
-	&spear1340_pmx_fsmc_8bit,
-	&spear1340_pmx_keyboard_row_col,
-#if !defined(CONFIG_PM)
-	&spear1340_pmx_keyboard_col5,
-#endif
-	&spear1340_pmx_uart0_enh,
-	&spear1340_pmx_i2c1,
-	&spear1340_pmx_spdif_in,
-	&spear1340_pmx_ssp0_cs1,
-#if !defined(CONFIG_PM)
-	&spear1340_pmx_pwm2,
-#endif
-	&spear1340_pmx_pwm3,
-	&spear1340_pmx_smi,
-	&spear1340_pmx_ssp0,
-	&spear1340_pmx_uart0,
-	&spear1340_pmx_i2s_in,
-	&spear1340_pmx_i2s_out,
-	&spear1340_pmx_gmac,
-	&spear1340_pmx_ssp0_cs3,
-	&spear1340_pmx_i2c0,
-	&spear1340_pmx_cec0,
-	&spear1340_pmx_cec1,
-	&spear1340_pmx_spdif_out,
-	&spear1340_pmx_mcif,
-	&spear1340_pmx_sdhci,
-	&spear1340_pmx_clcd,
-	&spear1340_pmx_clcd_gpio_pd,
-	&spear1340_pmx_devs_grp,
-	&spear1340_pmx_gmii,
-	&spear1340_pmx_pcie,
-
-	/* Keep this entry at the bottom of table to override earlier setting */
-	&spear1340_pmx_plgpios,
-};
-
-static struct amba_device *amba_devs[] __initdata = {
-	/* spear13xx specific devices */
-	&spear13xx_gpio_device[0],
-	&spear13xx_gpio_device[1],
-	&spear13xx_ssp_device,
-	&spear13xx_uart_device,
-
-	/* spear1340 specific devices */
-	&spear1340_uart1_device,
-};
-
-static struct platform_device *plat_devs[] __initdata = {
-	/* spear13xx specific devices */
-	&spear13xx_adc_device,
-	&spear13xx_db9000_clcd_device,
-	&spear13xx_dmac_device[0],
-	&spear13xx_dmac_device[1],
-	&spear13xx_ehci0_device,
-	&spear13xx_ehci1_device,
-	&spear13xx_eth_device,
-	&spear13xx_i2c_device,
-	&spear1340_nand_device,
-	&spear1340_i2s_play_device,
-	&spear1340_i2s_record_device,
-	&spear13xx_ohci0_device,
-	&spear13xx_ohci1_device,
-	&spear13xx_pcm_device,
-	&spear13xx_pcie_host0_device,
-	&spear13xx_rtc_device,
-	&spear13xx_sdhci_device,
-	&spear13xx_smi_device,
-	&spear1340_spdif_out_device,
-	&spear13xx_wdt_device,
-
-	/* spear1340 specific devices */
-	&spear1340_cec0_device,
-	&spear1340_cec1_device,
-	&spear1340_cpufreq_device,
-#if defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE)
-	&spear1340_gpiokeys_device,
-#endif
-	&spear1340_i2c1_device,
-	&spear1340_pwm_device,
-	&spear1340_phy0_device,
-	&spear1340_plgpio_device,
-	&spear1340_otg_device,
-	&spear1340_thermal_device,
-};
-
-/* MDIO Bus Data */
-static struct stmmac_mdio_bus_data mdio0_private_data = {
-	.bus_id = 0,
-	.phy_mask = 0,
-};
-
-static struct stmmac_dma_cfg dma0_private_data = {
-	.pbl = 16,
-	.fixed_burst = 1,
-	.burst_len = DMA_AXI_BLEN_ALL,
-};
-
-static struct plat_stmmacenet_data eth_data = {
-	.bus_id = 0,
-	.phy_addr = -1,
-	.interface = PHY_INTERFACE_MODE_GMII,
-	.has_gmac = 1,
-	.enh_desc = 1,
-	.tx_coe = 1,
-	.dma_cfg = &dma0_private_data,
-	.rx_coe = STMMAC_RX_COE_TYPE2,
-	.bugged_jumbo = 1,
-	.pmt = 1,
-	.mdio_bus_data = &mdio0_private_data,
-	.init = spear13xx_eth_phy_clk_cfg,
-	.clk_csr = STMMAC_CSR_150_250M,
-};
-
-static struct mtd_partition nand_partition_info[] __initdata = {
-	{
-		.name = "X-loader",
-		.offset = 0,
-		.size = 4 * 0x80000,
-	}, {
-		.name = "U-Boot",
-		.offset = 4 * 0x80000,
-		.size = 6 * 0x80000,
-	}, {
-		.name = "Kernel",
-		.offset = (4 + 6) * 0x80000,
-		.size = 24 * 0x80000,
-	}, {
-		.name = "Root File System",
-		.offset = (4 + 12 + 24) * 0x80000,
-		.size = MTDPART_SIZ_FULL,
-	}
-};
-
-/* Ethernet specific plat data */
-/* fsmc platform data */
-static const struct fsmc_nand_platform_data nand_plat_data __initconst = {
-	.select_bank = nand_select_bank,
-	.partitions = nand_partition_info,
-	.nr_partitions = ARRAY_SIZE(nand_partition_info),
-	.options = NAND_SKIP_BBTSCAN,
-	.width = FSMC_NAND_BW8,
-	.ale_off = PLAT_NAND_ALE,
-	.cle_off = PLAT_NAND_CLE,
-	.mode = USE_DMA_ACCESS,
-	.read_dma_priv = &nand_read_dma_priv,
-	.write_dma_priv = &nand_write_dma_priv,
-	.max_banks = 1,
-};
-
-static struct arasan_cf_pdata cf_pdata = {
-	.cf_if_clk = CF_IF_CLK_166M,
-	.quirk = CF_BROKEN_UDMA,
-	.dma_priv = &cf_dma_priv,
-};
-
-/* keyboard specific platform data */
-static const __initconst DECLARE_6x6_KEYMAP(keymap);
-static const struct matrix_keymap_data keymap_data __initconst = {
-	.keymap = keymap,
-	.keymap_size = ARRAY_SIZE(keymap),
-};
-
-static const struct kbd_platform_data kbd_data __initconst = {
-	.keymap = &keymap_data,
-	.rep = 1,
-	.mode = KEYPAD_2x2,
-};
-
-/* Initializing platform data for spear1340 evb specific I2C devices */
-/* Gyroscope platform data */
-static struct l3g4200d_gyr_platform_data l3g4200d_pdata = {
-	.poll_interval = 5,
-	.min_interval = 2,
-	.axis_map_x = 0,
-	.axis_map_y = 1,
-	.axis_map_z = 2,
-};
-
-struct i2c_board_info spear_hurricane_board_i2c_l3g4200d_gyr = {
-	/* gyroscope board info */
-	.type = "l3g4200d_gyr",
-	.addr = 0x69,
-	.platform_data = &l3g4200d_pdata,
-};
-
-struct i2c_board_info spear_hurricane_board_i2c_eeprom0 = {
-	.type = "eeprom",
-	.addr = 0x50,
-};
-
-struct i2c_board_info spear_hurricane_board_i2c_eeprom1 = {
-	.type = "eeprom",
-	.addr = 0x51,
-};
-
-struct i2c_board_info spear_hurricane_board_i2c_sta529 = {
-	.type = "sta529",
-	.addr = 0x1a,
-};
-
-static struct i2c_board_info *i2c_board[] __initdata = {
-	&spear_hurricane_board_i2c_l3g4200d_gyr,
-	&spear_hurricane_board_i2c_eeprom0,
-	&spear_hurricane_board_i2c_eeprom1,
-	&spear_hurricane_board_i2c_sta529,
-};
-
-/* Definitions for SPI Devices*/
-
-/* spi master's configuration routine */
-DECLARE_SPI_CS_CFG(0, VA_SPEAR1340_PERIP_CFG, SPEAR1340_SSP_CS_SEL_MASK,
-		SPEAR1340_SSP_CS_SEL_SHIFT, SPEAR1340_SSP_CS_CTL_MASK,
-		SPEAR1340_SSP_CS_CTL_SHIFT, SPEAR1340_SSP_CS_CTL_SW,
-		SPEAR1340_SSP_CS_VAL_MASK, SPEAR1340_SSP_CS_VAL_SHIFT);
-
-/* spi0 flash Chip Select Control function */
-DECLARE_SPI_CS_CONTROL(0, flash, SPEAR1340_SSP_CS_SEL_CS0);
-/* spi0 flash Chip Info structure */
-DECLARE_SPI_CHIP_INFO(0, flash, spi0_flash_cs_control);
-
-/* spi0 spidev Chip Select Control function */
-DECLARE_SPI_CS_CONTROL(0, dev, SPEAR1340_SSP_CS_SEL_CS2);
-/* spi0 spidev Chip Info structure */
-DECLARE_SPI_CHIP_INFO(0, dev, spi0_dev_cs_control);
-
-struct spi_board_info spear_hurricane_board_spi_m25p80 = {
-	.modalias = "m25p80",
-	.controller_data = &spi0_flash_chip_info,
-	.max_speed_hz = 12000000,
-	.bus_num = 0,
-	.chip_select = SPEAR1340_SSP_CS_SEL_CS0,
-	.mode = SPI_MODE_3,
-};
-struct spi_board_info spear_hurricane_board_spi_spidev = {
-	.modalias = "spidev",
-	.controller_data = &spi0_dev_chip_info,
-	.max_speed_hz = 25000000,
-	.bus_num = 0,
-	.chip_select = SPEAR1340_SSP_CS_SEL_CS2,
-	.mode = SPI_MODE_1,
-};
-
-static struct spi_board_info *spi_board[] __initdata = {
-	&spear_hurricane_board_spi_m25p80,
-	&spear_hurricane_board_spi_spidev,
-};
-
-#ifdef CONFIG_SPEAR_PCIE_REV370
-/* This function is needed for board specific PCIe initilization */
-static void __init spear_hurricane_pcie_board_init(void)
-{
-	void *plat_data;
-
-	plat_data = dev_get_platdata(&spear13xx_pcie_host0_device.dev);
-	PCIE_PORT_INIT((struct pcie_port_info *)plat_data, SPEAR_PCIE_REV_3_70);
-}
-#endif
-
-static void
-spear_hurricane_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
-{
-#if defined(CONFIG_FB_DB9000) || defined(CONFIG_FB_DB9000_MODULE)
-	spear13xx_panel_fixup(mi);
-#endif
-}
-
-static void __init spear_hurricane_init(void)
-{
-	unsigned int i;
-
-	/* set compact flash plat data */
-	set_arasan_cf_pdata(&spear13xx_cf_device, &cf_pdata);
-
-#if (defined(CONFIG_FB_DB9000) || defined(CONFIG_FB_DB9000_MODULE))
-	/* db9000_clcd plat data */
-	spear13xx_panel_init(&spear13xx_db9000_clcd_device);
-#endif
-
-	/* Set stmmac plat data */
-	if (platform_device_add_data(&spear13xx_eth_device, &eth_data,
-			sizeof(eth_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_eth_device.name);
-
-	/* initialize serial nor related data in smi plat data */
-	smi_init_board_info(&spear13xx_smi_device);
-
-	/* set keyboard plat data */
-	if (platform_device_add_data(&spear13xx_kbd_device, &kbd_data,
-				sizeof(kbd_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear13xx_kbd_device.name);
-
-	/*
-	 * SPEAr1340 FSMC cannot used as NOR and NAND at the same time
-	 * For the moment, disable NOR and use NAND only
-	 * If NOR is needed, enable NOR's code and disable all code for NOR.
-	 */
-	/* set nand device's plat data */
-	/* set nand device's plat data */
-	nand_mach_init(FSMC_NAND_BW8);
-	if (platform_device_add_data(&spear1340_nand_device, &nand_plat_data,
-				sizeof(nand_plat_data)))
-		printk(KERN_WARNING "%s: couldn't add plat_data",
-				spear1340_nand_device.name);
-
-#ifdef CONFIG_SPEAR_PCIE_REV370
-	spear_hurricane_pcie_board_init();
-#endif
-
-	/* call spear1340 machine init function */
-	spear1340_init(NULL, pmx_devs, ARRAY_SIZE(pmx_devs));
-
-	/* Register spear1340 evb board specific i2c slave devices */
-	for (i = 0; i < ARRAY_SIZE(i2c_board); i++)
-		i2c_register_board_info(0, i2c_board[i], 1);
-
-	/* Register SPI Board */
-	for (i = 0; i < ARRAY_SIZE(spi_board); i++)
-		spi_register_board_info(spi_board[i], 1);
-
-	/* Add Platform Devices */
-	platform_add_devices(plat_devs, ARRAY_SIZE(plat_devs));
-
-	/* Add Amba Devices */
-	for (i = 0; i < ARRAY_SIZE(amba_devs); i++)
-		amba_device_register(amba_devs[i], &iomem_resource);
-}
-
-MACHINE_START(SPEAR_HURRICANE, "NCOMPUTING-SPEAR-HURRICANE-BOARD")
-	.atag_offset	=	0x100,
-	.fixup		=	spear_hurricane_fixup,
-	.map_io		=	spear13xx_map_io,
-	.init_irq	=	spear13xx_init_irq,
-	.handle_irq	=	gic_handle_irq,
-	.timer		=	&spear13xx_timer,
-	.init_machine	=	spear_hurricane_init,
-	.restart	=	spear_restart,
-MACHINE_END
diff --git a/arch/arm/plat-spear13xx/include/plat/hardware.h b/arch/arm/plat-spear13xx/include/plat/hardware.h
index 615586d..90f6926 100644
--- a/arch/arm/plat-spear13xx/include/plat/hardware.h
+++ b/arch/arm/plat-spear13xx/include/plat/hardware.h
@@ -25,31 +25,6 @@
 
 #ifndef __ASSEMBLY__
 /* cpu related runtime routines */
-static inline bool cpu_is_spear300(void)
-{
-	return machine_is_spear300_evb();
-}
-
-static inline bool cpu_is_spear310(void)
-{
-	return machine_is_spear310_evb();
-}
-
-static inline bool cpu_is_spear320(void)
-{
-	return machine_is_spear320_evb() || machine_is_spear320_hmi();
-}
-
-static inline bool cpu_is_spear600(void)
-{
-	return machine_is_spear600_evb();
-}
-
-static inline bool cpu_is_spear1300(void)
-{
-	return machine_is_spear1300_evb();
-}
-
 static inline bool cpu_is_spear1310(void)
 {
 	return machine_is_spear1310_evb();
@@ -62,30 +37,13 @@ static inline bool cpu_is_spear1310_reva(void)
 
 static inline bool cpu_is_spear1340(void)
 {
-	return machine_is_spear1340_evb() || machine_is_spear_hurricane() ||
-		machine_is_spear1340_lcad();
-}
-
-static inline bool cpu_is_spear900(void)
-{
-	return machine_is_spear900_evb();
-}
-
-/* arch related runtime routines */
-static inline bool arch_is_spear3xx(void)
-{
-	return cpu_is_spear300() || cpu_is_spear310() || cpu_is_spear320();
-}
-
-static inline bool arch_is_spear6xx(void)
-{
-	return cpu_is_spear600();
+	return machine_is_spear1340_evb();
 }
 
 static inline bool arch_is_spear13xx(void)
 {
-	return cpu_is_spear1300() || cpu_is_spear1310_reva() ||
-		cpu_is_spear1310() || cpu_is_spear900() ||
+	return cpu_is_spear1310_reva() ||
+		cpu_is_spear1310() ||
 		cpu_is_spear1340();
 }
 #endif /* __ASSEMBLY__ */
-- 
1.7.9.7

