From 130595715fbaff24fde49c07ceab17f6404e7c7d Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 4 Jul 2012 12:11:30 +0800
Subject: [PATCH 1/2] LTTng: Omap3: enable EMU for trace_clock when LTT set

1. TRACE_CLOCK is currently necessary only for LTT.

2. 20d0a4f4 introduced reserve_pmu, but CPU_HAS_PMU depends on
   !ARCH_OMAP3, so we select conditionally OMAP3_EMU to enable
   CPU_HAS_PMU in arm/Kconfig, which makes trace_clock sense to
   OMAP3. And then the following message will be seen from
   console:

   "LTTng will clear ccnt top bit every 274 jiffies."

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/plat-omap/Kconfig                    |    5 +++--
 arch/arm/plat-omap/include/plat/trace-clock.h |    5 +++++
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/arch/arm/plat-omap/Kconfig b/arch/arm/plat-omap/Kconfig
index 4f80521..eefb311 100644
--- a/arch/arm/plat-omap/Kconfig
+++ b/arch/arm/plat-omap/Kconfig
@@ -28,8 +28,9 @@ config ARCH_OMAP2PLUS
 	select OMAP_DM_TIMER
 	select USE_OF
 	select PROC_DEVICETREE if PROC_FS
-	select HAVE_TRACE_CLOCK
-	select HAVE_TRACE_CLOCK_32_TO_64
+	select HAVE_TRACE_CLOCK if LTT
+	select HAVE_TRACE_CLOCK_32_TO_64 if LTT
+	select OMAP3_EMU if LTT
 	select OMAP_32K_TIMER
 	help
 	  "Systems based on OMAP2, OMAP3 or OMAP4"
diff --git a/arch/arm/plat-omap/include/plat/trace-clock.h b/arch/arm/plat-omap/include/plat/trace-clock.h
index decb170..89f53fa 100644
--- a/arch/arm/plat-omap/include/plat/trace-clock.h
+++ b/arch/arm/plat-omap/include/plat/trace-clock.h
@@ -156,6 +156,7 @@ static inline u32 trace_clock_freq_scale(void)
 	return 1;
 }
 
+#ifdef CONFIG_HAVE_TRACE_CLOCK
 extern int get_trace_clock(void);
 extern void put_trace_clock(void);
 extern void get_synthetic_tsc(void);
@@ -165,6 +166,10 @@ extern void resync_trace_clock(void);
 extern void save_sync_trace_clock(void);
 extern void start_trace_clock(void);
 extern void stop_trace_clock(void);
+#else
+static inline void save_sync_trace_clock(void) {}
+static inline void resync_trace_clock(void) {}
+#endif
 
 static inline void set_trace_clock_is_sync(int state)
 {
-- 
1.7.7

