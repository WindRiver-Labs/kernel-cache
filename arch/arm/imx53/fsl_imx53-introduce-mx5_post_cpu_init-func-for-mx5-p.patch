From 09af515d5f9bcf97d65f4d824cf91a4fa3962b24 Mon Sep 17 00:00:00 2001
From: Guoqing Jiang <Guoqing.Jiang@windriver.com>
Date: Tue, 15 Jan 2013 10:14:22 +0800
Subject: [PATCH 16/23] fsl_imx53: introduce mx5_post_cpu_init func for mx5
 platform

Refer to vendor-drop package, L2.6.35_11.09.01_ER_source.tar.gz

Introduce mx5_post_cpu_init func for mx5 platform.

Signed-off-by: Guoqing Jiang <Guoqing.Jiang@windriver.com>
---
 arch/arm/mach-imx/cpu-imx5.c |   91 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 91 insertions(+)

diff --git a/arch/arm/mach-imx/cpu-imx5.c b/arch/arm/mach-imx/cpu-imx5.c
index aa15c51..18e47a3 100644
--- a/arch/arm/mach-imx/cpu-imx5.c
+++ b/arch/arm/mach-imx/cpu-imx5.c
@@ -14,9 +14,25 @@
 #include <linux/types.h>
 #include <linux/kernel.h>
 #include <linux/init.h>
+#include <linux/iram_alloc.h>
 #include <linux/module.h>
 #include <mach/hardware.h>
 #include <linux/io.h>
+#include <linux/clk.h>
+
+#define CORTEXA8_PLAT_AMC       0x18
+#define SRPG_NEON_PUPSCR        0x284
+#define SRPG_NEON_PDNSCR        0x288
+#define SRPG_ARM_PUPSCR         0x2A4
+#define SRPG_ARM_PDNSCR         0x2A8
+#define SRPG_EMPGC0_PUPSCR      0x2E4
+#define SRPG_EMPGC0_PDNSCR      0x2E8
+#define SRPG_EMPGC1_PUPSCR      0x304
+#define SRPG_EMPGC1_PDNSCR      0x308
+
+void __iomem *arm_plat_base;
+void __iomem *gpc_base;
+void __iomem *ccm_base;
 
 static int mx5_cpu_rev = -1;
 
@@ -149,3 +165,78 @@ int mx50_revision(void)
 	return mx5_cpu_rev;
 }
 EXPORT_SYMBOL(mx50_revision);
+
+#define MX5_ARM_BASE_ADDR (cpu_is_mx51() ? MX51_ARM_BASE_ADDR : MX53_ARM_BASE_ADDR)
+#define MX5_IRAM_BASE_ADDR (cpu_is_mx51() ? MX51_IRAM_BASE_ADDR : MX53_IRAM_BASE_ADDR)
+#define MX5_GPC_BASE_ADDR (cpu_is_mx51() ? MX51_GPC_BASE_ADDR : MX53_GPC_BASE_ADDR)
+#define MX5_CCM_BASE_ADDR (cpu_is_mx51() ? MX51_CCM_BASE_ADDR : MX53_CCM_BASE_ADDR)
+#define MX5_AIPS1_BASE_ADDR (cpu_is_mx51() ? MX51_AIPS1_BASE_ADDR : MX53_AIPS1_BASE_ADDR)
+#define MX5_AIPS2_BASE_ADDR (cpu_is_mx51() ? MX51_AIPS2_BASE_ADDR : MX53_AIPS2_BASE_ADDR)
+#define MX5_M4IF_BASE_ADDR (cpu_is_mx51() ? MX51_M4IF_BASE_ADDR : MX53_M4IF_BASE_ADDR)
+
+static int __init mx5_post_cpu_init(void)
+{
+	void __iomem *base;
+	unsigned int reg;
+	struct clk *gpcclk = clk_get(NULL, "gpc_dvfs");
+	int iram_size = MX53_IRAM_SIZE;
+
+	iram_init(MX5_IRAM_BASE_ADDR, iram_size);
+
+	gpc_base = ioremap(MX5_GPC_BASE_ADDR, SZ_4K);
+	ccm_base = ioremap(MX5_CCM_BASE_ADDR, SZ_4K);
+
+	clk_enable(gpcclk);
+
+	/* Setup the number of clock cycles to wait for SRPG
+	 * power up and power down requests.
+	 */
+	__raw_writel(0x010F0201, gpc_base + SRPG_ARM_PUPSCR);
+	__raw_writel(0x010F0201, gpc_base + SRPG_NEON_PUPSCR);
+	__raw_writel(0x00000008, gpc_base + SRPG_EMPGC0_PUPSCR);
+	__raw_writel(0x00000008, gpc_base + SRPG_EMPGC1_PUPSCR);
+
+	__raw_writel(0x01010101, gpc_base + SRPG_ARM_PDNSCR);
+	__raw_writel(0x01010101, gpc_base + SRPG_NEON_PDNSCR);
+	__raw_writel(0x00000018, gpc_base + SRPG_EMPGC0_PDNSCR);
+	__raw_writel(0x00000018, gpc_base + SRPG_EMPGC1_PDNSCR);
+
+	clk_disable(gpcclk);
+	clk_put(gpcclk);
+
+	/* Set ALP bits to 000. Set ALP_EN bit in Arm Memory Controller reg. */
+	arm_plat_base = ioremap(MX5_ARM_BASE_ADDR, SZ_4K);
+	reg = 0x8;
+	__raw_writel(reg, arm_plat_base + CORTEXA8_PLAT_AMC);
+
+	base = ioremap(MX5_AIPS1_BASE_ADDR, SZ_4K);
+	__raw_writel(0x0, base + 0x40);
+	__raw_writel(0x0, base + 0x44);
+	__raw_writel(0x0, base + 0x48);
+	__raw_writel(0x0, base + 0x4C);
+	reg = __raw_readl(base + 0x50) & 0x00FFFFFF;
+	__raw_writel(reg, base + 0x50);
+	iounmap(base);
+
+	base = ioremap(MX5_AIPS2_BASE_ADDR, SZ_4K);
+	__raw_writel(0x0, base + 0x40);
+	__raw_writel(0x0, base + 0x44);
+	__raw_writel(0x0, base + 0x48);
+	__raw_writel(0x0, base + 0x4C);
+	reg = __raw_readl(base + 0x50) & 0x00FFFFFF;
+	__raw_writel(reg, base + 0x50);
+	iounmap(base);
+
+	/* Allow for automatic gating of the EMI internal clock.
+	 * If this is done, emi_intr CCGR bits should be set to 11.
+	 */
+	base = ioremap(MX5_M4IF_BASE_ADDR, SZ_4K);
+	reg = __raw_readl(base + 0x8c);
+	reg &= ~0x1;
+	__raw_writel(reg, base + 0x8c);
+	iounmap(base);
+
+	return 0;
+}
+
+postcore_initcall(mx5_post_cpu_init);
-- 
1.7.9.7

