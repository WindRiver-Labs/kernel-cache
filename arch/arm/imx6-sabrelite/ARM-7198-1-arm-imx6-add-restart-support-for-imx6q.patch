From 0460ac9b1a9647dc05fe6409875577840be2f296 Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Fri, 14 Sep 2012 17:02:06 +0800
Subject: [PATCH 29/62] ARM: 7198/1: arm/imx6: add restart support for imx6q

upstream: 0575fb754dbfc32a01f297e778533340a533ec68

The restart support was missed from the initial imx6q submission.
The mxc_restart() does not work for imx6q.  Instead, this patch adds
the restart for imx6q.

Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
---
 arch/arm/mach-mx6/mach-mx6q_sabrelite.c |   47 +++++++++++++++++++++++++++++++
 1 file changed, 47 insertions(+)

diff --git a/arch/arm/mach-mx6/mach-mx6q_sabrelite.c b/arch/arm/mach-mx6/mach-mx6q_sabrelite.c
index 845e263..12f909d 100644
--- a/arch/arm/mach-mx6/mach-mx6q_sabrelite.c
+++ b/arch/arm/mach-mx6/mach-mx6q_sabrelite.c
@@ -39,6 +39,8 @@
 #include <linux/phy.h>
 #include <linux/micrel_phy.h>
 #include <linux/memblock.h>
+
+#include <asm/system_misc.h>
 #include <asm/hardware/gic.h>
 #include <asm/irq.h>
 #include <asm/setup.h>
@@ -57,6 +59,7 @@
 #include "crm_regs.h"
 #include "cpu_op-mx6.h"
 #include "usb.h"
+#include "src-reg.h"
 
 #define MX6Q_SABRELITE_SD3_CD		IMX_GPIO_NR(7, 0)
 #define MX6Q_SABRELITE_SD3_WP		IMX_GPIO_NR(7, 1)
@@ -659,6 +662,49 @@ static void __init mx6q_sabrelite_reserve(void)
 {
 }
 
+void __iomem *src_base = IO_ADDRESS(SRC_BASE_ADDR);
+
+void imx_src_prepare_restart(void)
+{
+	u32 val;
+
+	/* clear enable bits of secondary cores */
+	val = __raw_readl(src_base + SRC_SCR_OFFSET);
+	val &= ~(0x7 << BP_SRC_SCR_CORE1_ENABLE);
+	__raw_writel(val, src_base + SRC_SCR_OFFSET);
+
+	/* clear persistent entry register of primary core */
+	__raw_writel(0, src_base + SRC_GPR1_OFFSET);
+}
+
+void imx6q_restart(char mode, const char *cmd)
+{
+	void __iomem *wdog_base;
+
+	wdog_base = IO_ADDRESS(MX6Q_WDOG1_BASE_ADDR);
+	if (!wdog_base)
+		goto soft;
+
+	imx_src_prepare_restart();
+
+	/* enable wdog */
+	__raw_writew(1 << 2, wdog_base);
+	/* write twice to ensure the request will not get ignored */
+	__raw_writew(1 << 2, wdog_base);
+
+	/* wait for reset to assert ... */
+	mdelay(500);
+
+	pr_err("Watchdog reset failed to assert reset\n");
+
+	/* delay to allow the serial port to show the message */
+	mdelay(50);
+
+soft:
+	/* we'll take a jump through zero as a poor second */
+	soft_restart(0);
+}
+
 /*
  * initialize __mach_desc_MX6Q_SABRELITE data structure.
  */
@@ -672,4 +718,5 @@ MACHINE_START(MX6Q_SABRELITE, "Freescale i.MX 6Quad Sabre-Lite Board")
 	.init_machine	= mx6_sabrelite_board_init,
 	.timer		= &mx6_sabrelite_timer,
 	.reserve	= mx6q_sabrelite_reserve,
+	.restart	= imx6q_restart,
 MACHINE_END
-- 
1.7.9.7

