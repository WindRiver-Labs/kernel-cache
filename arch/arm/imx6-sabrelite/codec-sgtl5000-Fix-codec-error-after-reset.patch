From de98aa2e6ca40617be390460749691a3d023c9ce Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Fri, 19 Oct 2012 10:45:11 +0800
Subject: [PATCH 52/62] codec/sgtl5000: Fix codec error after reset

error log:
sgtl5000 0-000a: Device with ID register ffff is not a sgtl5000
sgtl5000 0-000a: asoc: failed to probe CODEC sgtl5000.0-000a: -19

after board reset, this is caused by the register's value of the
sgtl5000_regs table do not proper for imx6 board. When codec init,
system will use the table value to set the sgtl5000's register.

So we have to fill the register cache by reading register out when
initialization instead of providing a default value array.

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 sound/soc/codecs/sgtl5000.c |   28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/sound/soc/codecs/sgtl5000.c b/sound/soc/codecs/sgtl5000.c
index 8e92fb8..9b751ee 100644
--- a/sound/soc/codecs/sgtl5000.c
+++ b/sound/soc/codecs/sgtl5000.c
@@ -1290,6 +1290,28 @@ err_regulator_free:
 
 }
 
+#if defined(CONFIG_ARCH_MX6)
+static int sgtl5000_fill_reg_cache(struct snd_soc_codec *codec)
+{
+	int reg;
+	int step = codec->driver->reg_cache_step;
+	u16 *cache = codec->reg_cache;
+
+	for (reg = SGTL5000_DAP_REG_OFFSET;
+		reg < SGTL5000_MAX_REG_OFFSET; reg += step)
+	{
+		cache[reg] = snd_soc_read(codec, reg);
+	}
+
+	for (reg = 0; reg <= SGTL5000_CHIP_SHORT_CTRL; reg += step)
+	{
+		cache[reg] = snd_soc_read(codec, reg);
+	}
+
+	return 0;
+}
+#endif
+
 static int sgtl5000_probe(struct snd_soc_codec *codec)
 {
 	int ret;
@@ -1302,6 +1324,12 @@ static int sgtl5000_probe(struct snd_soc_codec *codec)
 		return ret;
 	}
 
+#if defined(CONFIG_ARCH_MX6)
+	codec->cache_bypass = 1;
+	sgtl5000_fill_reg_cache(codec);
+	codec->cache_bypass = 0;
+#endif
+
 	ret = sgtl5000_enable_regulators(codec);
 	if (ret)
 		return ret;
-- 
1.7.9.7

