From 79f0836e260b09197402708834f219034de2260a Mon Sep 17 00:00:00 2001
From: Zhong Hongbo <hongbo.zhong@windriver.com>
Date: Thu, 15 Nov 2012 11:38:15 +0800
Subject: [PATCH 27/62] fsl_imx6: Add AHCI driver support

Source: Extract from vendor-drop package, L3.0.15_12.04.01_ER_source.tar.gz
(May,2012).

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-mx6/clock.c                     |   46 ++++++++++++++++++++++-
 arch/arm/mach-mx6/devices-imx6q.h             |    2 +
 arch/arm/mach-mx6/mach-mx6q_sabrelite.c       |    1 +
 arch/arm/plat-mxc/devices/Kconfig             |    2 +-
 arch/arm/plat-mxc/devices/platform-ahci-imx.c |   50 ++++++++++++++++++++++---
 arch/arm/plat-mxc/include/mach/mx6q.h         |    4 ++
 drivers/ata/ahci_platform.c                   |    4 ++
 7 files changed, 101 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-mx6/clock.c b/arch/arm/mach-mx6/clock.c
index aca252c..61f2c6b 100644
--- a/arch/arm/mach-mx6/clock.c
+++ b/arch/arm/mach-mx6/clock.c
@@ -4625,6 +4625,48 @@ static struct clk sata_clk[] = {
 	},
 };
 
+static int ahci_phy_clk_enable(struct clk *clk)
+{
+	unsigned int val;
+
+	/* Set PHY Paremeters, two steps to configure the GPR13,
+	 * one write for rest of parameters, mask of first write is 0x07FFFFFD,
+	 * and the other one write for setting the mpll_clk_off_b
+	 *.rx_eq_val_0(iomuxc_gpr13[26:24]),
+	 *.los_lvl(iomuxc_gpr13[23:19]),
+	 *.rx_dpll_mode_0(iomuxc_gpr13[18:16]),
+	 *.sata_speed(iomuxc_gpr13[15]),
+	 *.mpll_ss_en(iomuxc_gpr13[14]),
+	 *.tx_atten_0(iomuxc_gpr13[13:11]),
+	 *.tx_boost_0(iomuxc_gpr13[10:7]),
+	 *.tx_lvl(iomuxc_gpr13[6:2]),
+	 *.mpll_ck_off(iomuxc_gpr13[1]),
+	 *.tx_edgerate_0(iomuxc_gpr13[0]),
+	 */
+	val = readl(IOMUXC_GPR13);
+	writel(((val & ~0x07FFFFFD) | 0x0593A044), IOMUXC_GPR13);
+
+	/* enable SATA_PHY PLL */
+	val = readl(IOMUXC_GPR13);
+	writel(((val & ~0x2) | 0x2), IOMUXC_GPR13);
+
+	return 0;
+}
+
+static void ahci_phy_clk_disable(struct clk *clk)
+{
+       /* disable SATA_PHY PLL */
+       writel((readl(IOMUXC_GPR13) & ~0x2), IOMUXC_GPR13);
+}
+
+static struct clk ahci_phy_clk = {
+	.enable = ahci_phy_clk_enable,
+	.disable = ahci_phy_clk_disable,
+};
+
+static struct clk ahci_dma_clk = {
+	.parent = &ahb_clk,
+};
 static int _clk_pcie_enable(struct clk *clk)
 {
 	unsigned int reg;
@@ -5095,7 +5137,9 @@ static struct clk_lookup lookups[] = {
 	_REGISTER_CLOCK("mxc_pwm.3", NULL, pwm_clk[3]),
 	_REGISTER_CLOCK(NULL, "pcie_clk", pcie_clk[0]),
 	_REGISTER_CLOCK("imx6q-fec.0", NULL, enet_clk[0]),
-	_REGISTER_CLOCK(NULL, "imx_sata_clk", sata_clk[0]),
+	_REGISTER_CLOCK("imx6q-ahci.0", "ahci", sata_clk[0]),
+	_REGISTER_CLOCK("imx6q-ahci.0", "ahci_phy", ahci_phy_clk),
+	_REGISTER_CLOCK("imx6q-ahci.0", "ahci_dma", ahci_dma_clk),
 	_REGISTER_CLOCK(NULL, "usboh3_clk", usboh3_clk[0]),
 	_REGISTER_CLOCK(NULL, "usb_phy1_clk", usb_phy1_clk),
 	_REGISTER_CLOCK(NULL, "usb_phy3_clk", usb_phy3_clk),
diff --git a/arch/arm/mach-mx6/devices-imx6q.h b/arch/arm/mach-mx6/devices-imx6q.h
index 6f8e361..3b732f9 100644
--- a/arch/arm/mach-mx6/devices-imx6q.h
+++ b/arch/arm/mach-mx6/devices-imx6q.h
@@ -87,4 +87,6 @@ extern const struct imx_mxc_hdmi_core_data imx6q_mxc_hdmi_core_data __initconst;
 extern const struct imx_hdmi_soc_data imx6q_imx_hdmi_soc_dai_data __initconst;
 #define imx6q_add_hdmi_soc_dai() \
 	imx_add_hdmi_soc_dai(&imx6q_imx_hdmi_soc_dai_data)
+
+extern struct platform_device *__init imx6q_add_ahci_imx(void);
 #endif
diff --git a/arch/arm/mach-mx6/mach-mx6q_sabrelite.c b/arch/arm/mach-mx6/mach-mx6q_sabrelite.c
index 5a01d0b..93a88a5 100644
--- a/arch/arm/mach-mx6/mach-mx6q_sabrelite.c
+++ b/arch/arm/mach-mx6/mach-mx6q_sabrelite.c
@@ -625,6 +625,7 @@ static void __init mx6_sabrelite_board_init(void)
 	imx6q_add_sdhci_usdhc_imx(3, &mx6q_sabrelite_sd4_data);
 	imx6q_add_sdhci_usdhc_imx(2, &mx6q_sabrelite_sd3_data);
 	imx6q_sabrelite_init_usb();
+	imx6q_add_ahci_imx();
 
 	/* release USB Hub reset */
 	gpio_set_value(MX6Q_SABRELITE_USB_HUB_RESET, 1);
diff --git a/arch/arm/plat-mxc/devices/Kconfig b/arch/arm/plat-mxc/devices/Kconfig
index 05c8bb2..412cb3f 100644
--- a/arch/arm/plat-mxc/devices/Kconfig
+++ b/arch/arm/plat-mxc/devices/Kconfig
@@ -85,7 +85,7 @@ config IMX_HAVE_PLATFORM_IMX_IPUV3
 
 config IMX_HAVE_PLATFORM_AHCI
 	bool
-	default y if ARCH_MX53
+	default y if ARCH_MX53 || ARCH_MX6
 
 config IMX_HAVE_PLATFORM_MXC_HDMI
 	bool
diff --git a/arch/arm/plat-mxc/devices/platform-ahci-imx.c b/arch/arm/plat-mxc/devices/platform-ahci-imx.c
index ade4a1c..c6dd6ba 100644
--- a/arch/arm/plat-mxc/devices/platform-ahci-imx.c
+++ b/arch/arm/plat-mxc/devices/platform-ahci-imx.c
@@ -21,6 +21,7 @@
 #include <linux/io.h>
 #include <linux/clk.h>
 #include <linux/err.h>
+#include <linux/delay.h>
 #include <linux/device.h>
 #include <linux/dma-mapping.h>
 #include <asm/sizes.h>
@@ -39,11 +40,20 @@ const struct imx_ahci_imx_data imx53_ahci_imx_data __initconst =
 	imx_ahci_imx_data_entry_single(MX53, "imx53-ahci");
 #endif
 
+#ifdef CONFIG_SOC_IMX6Q
+const struct imx_ahci_imx_data imx6q_ahci_imx_data __initconst =
+	imx_ahci_imx_data_entry_single(MX6Q, "imx6q-ahci");
+#endif
+
 enum {
 	HOST_CAP = 0x00,
 	HOST_CAP_SSS = (1 << 27), /* Staggered Spin-up */
 	HOST_PORTS_IMPL	= 0x0c,
 	HOST_TIMER1MS = 0xe0, /* Timer 1-ms */
+
+	PORT_SATA_SR = 0x128, /*  Port0 PHY Control */
+	PORT_PHY_CTL = 0x178, /*  Port0 PHY Control */
+	PORT_PHY_CTL_PDDQ_LOC = 0x100000,
 };
 
 static struct clk *sata_clk, *sata_ref_clk;
@@ -52,7 +62,7 @@ static struct clk *sata_clk, *sata_ref_clk;
 static int imx_sata_init(struct device *dev, void __iomem *addr)
 {
 	u32 tmpdata;
-	int ret = 0;
+	int ret = 0, iterations = 200;
 	struct clk *clk;
 
 	sata_clk = clk_get(dev, "ahci");
@@ -101,6 +111,24 @@ static int imx_sata_init(struct device *dev, void __iomem *addr)
 		writel((readl(addr + HOST_PORTS_IMPL) | 0x1),
 			addr + HOST_PORTS_IMPL);
 
+	/* Release resources when there is no device on the port */
+	do {
+		if ((readl(addr + PORT_SATA_SR) & 0xF) == 0)
+			usleep_range(2000, 3000);
+		else
+			break;
+
+		if (iterations == 0) {
+			/*  Enter into PDDQ mode, save power */
+			pr_info("No sata disk, enter into PDDQ mode.\n");
+			tmpdata = readl(addr + PORT_PHY_CTL);
+			writel(tmpdata | PORT_PHY_CTL_PDDQ_LOC,
+					addr + PORT_PHY_CTL);
+			ret = -ENODEV;
+			goto release_sata_ref_clk;
+		}
+	} while (iterations-- > 0);
+
 	return 0;
 
 release_sata_ref_clk:
@@ -124,6 +152,12 @@ static void imx_sata_exit(struct device *dev)
 	clk_put(sata_clk);
 
 }
+
+struct ahci_platform_data imx_sata_pdata = {
+	.init = imx_sata_init,
+	.exit = imx_sata_exit,
+};
+
 struct platform_device *__init imx_add_ahci_imx(
 		const struct imx_ahci_imx_data *data,
 		const struct ahci_platform_data *pdata)
@@ -145,12 +179,16 @@ struct platform_device *__init imx_add_ahci_imx(
 			pdata, sizeof(*pdata),  DMA_BIT_MASK(32));
 }
 
+#ifdef CONFIG_SOC_IMX53
 struct platform_device *__init imx53_add_ahci_imx(void)
 {
-	struct ahci_platform_data pdata = {
-		.init = imx_sata_init,
-		.exit = imx_sata_exit,
-	};
+	return imx_add_ahci_imx(&imx53_ahci_imx_data, &imx_sata_pdata);
+}
+#endif
 
-	return imx_add_ahci_imx(&imx53_ahci_imx_data, &pdata);
+#ifdef CONFIG_SOC_IMX6Q
+struct platform_device *__init imx6q_add_ahci_imx(void)
+{
+	return imx_add_ahci_imx(&imx6q_ahci_imx_data, &imx_sata_pdata);
 }
+#endif
diff --git a/arch/arm/plat-mxc/include/mach/mx6q.h b/arch/arm/plat-mxc/include/mach/mx6q.h
index b286704..0c40a1e 100644
--- a/arch/arm/plat-mxc/include/mach/mx6q.h
+++ b/arch/arm/plat-mxc/include/mach/mx6q.h
@@ -518,4 +518,8 @@
 #define MX6Q_DMA_REQ_SSI3_TX0		46
 #define MX6Q_DMA_REQ_DTCP		47
 
+/*
+ * AHCI SATA
+ */
+#define MX6Q_SATA_BASE_ADDR            0x02200000
 #endif	/* __MACH_MX6Q_H__ */
diff --git a/drivers/ata/ahci_platform.c b/drivers/ata/ahci_platform.c
index d576f22..78dcfee 100644
--- a/drivers/ata/ahci_platform.c
+++ b/drivers/ata/ahci_platform.c
@@ -27,6 +27,7 @@
 enum ahci_type {
 	AHCI,		/* standard platform ahci */
 	IMX53_AHCI,	/* ahci on i.mx53 */
+	IMX6Q_AHCI,	/* ahci on i.mx6q */
 	STRICT_AHCI,	/* delayed DMA engine start */
 };
 
@@ -38,6 +39,9 @@ static struct platform_device_id ahci_devtype[] = {
 		.name = "imx53-ahci",
 		.driver_data = IMX53_AHCI,
 	}, {
+		.name = "imx6q-ahci",
+		.driver_data = IMX53_AHCI,
+	}, {
 		.name = "strict-ahci",
 		.driver_data = STRICT_AHCI,
 	}, {
-- 
1.7.9.7

