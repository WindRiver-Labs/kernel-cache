From b9d9106ff13c9e9e2c186c2c30a40f81364f7911 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Fri, 29 Apr 2011 10:15:15 +0800
Subject: [PATCH] fsl_p4080-mc/dpaa: use dpa_bus_to_virt to get correct virtual address

We should use the pre-defined dpa_bus_to_virt() to get the correct
virtual address translated from bus address according to the real
guest OS physical address offset shown as the follows:

Only for guest OS, #define dpa_bus_to_virt(addr)  \
       __va(addr - guest_dma_offset)

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/net/dpa/dpaa_eth.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/net/dpa/dpaa_eth.c b/drivers/net/dpa/dpaa_eth.c
index a2fb940..5f84dd6 100644
--- a/drivers/net/dpa/dpaa_eth.c
+++ b/drivers/net/dpa/dpaa_eth.c
@@ -179,7 +179,7 @@ static void bmb_free(struct dpa_bp *bp, struct bm_buffer *bmb)
 		if (!addr)
 			break;
 
-		skbh = (struct sk_buff **)bus_to_virt(addr);
+		skbh = (struct sk_buff **)dpa_bus_to_virt(addr);
 		skb = *skbh;
 
 		dma_unmap_single(bp->dev, addr, bp->size, DMA_FROM_DEVICE);
@@ -371,7 +371,7 @@ _dpa_bp_free(struct dpa_bp *dpa_bp)
 
 			for (i = 0; i < num; i++) {
 				dma_addr_t addr = bm_buf_addr(&bmb[i]);
-				struct sk_buff **skbh = bus_to_virt(addr);
+				struct sk_buff **skbh = dpa_bus_to_virt(addr);
 				struct sk_buff *skb = *skbh;
 
 				dma_unmap_single(dpa_bp->dev, addr,
@@ -549,7 +549,7 @@ dpa_fd_release(const struct net_device *net_dev, const struct qm_fd *fd)
 
 	_errno = 0;
 	if (fd->format == qm_fd_sg) {
-		sgt = (bus_to_virt(bm_buf_addr(&_bmb)) + dpa_fd_offset(fd));
+		sgt = (dpa_bus_to_virt(bm_buf_addr(&_bmb)) + dpa_fd_offset(fd));
 
 		i = 0;
 		do {
@@ -726,7 +726,7 @@ static void _dpa_tx_error(struct net_device		*net_dev,
 
 	percpu_priv->stats.tx_errors++;
 
-	skbh = (struct sk_buff **)bus_to_virt(addr);
+	skbh = (struct sk_buff **)dpa_bus_to_virt(addr);
 	skb = *skbh;
 
 	dma_unmap_single(bp->dev, addr, bp->size, DMA_TO_DEVICE);
@@ -746,7 +746,7 @@ static void __hot _dpa_rx(struct net_device *net_dev,
 	struct sk_buff **skbh;
 	dma_addr_t addr = qm_fd_addr(fd);
 
-	skbh = (struct sk_buff **)bus_to_virt(addr);
+	skbh = (struct sk_buff **)dpa_bus_to_virt(addr);
 	prefetch(skbh);
 
 	if (unlikely(fd->status & FM_FD_STAT_ERRORS) != 0) {
@@ -878,7 +878,7 @@ static void __hot _dpa_tx(struct net_device		*net_dev,
 		percpu_priv->stats.tx_errors++;
 	}
 
-	skbh = (struct sk_buff **)bus_to_virt(addr);
+	skbh = (struct sk_buff **)dpa_bus_to_virt(addr);
 	skb = *skbh;
 
 	dma_unmap_single(bp->dev, addr, bp->size, DMA_TO_DEVICE);
@@ -1415,7 +1415,7 @@ static void egress_ern(struct qman_portal	*portal,
 	bp = priv->dpa_bp;
 	percpu_priv = per_cpu_ptr(priv->percpu_priv, smp_processor_id());
 
-	skbh = (struct sk_buff **)bus_to_virt(addr);
+	skbh = (struct sk_buff **)dpa_bus_to_virt(addr);
 	skb = *skbh;
 
 	dma_unmap_single(bp->dev, addr, bp->size, DMA_TO_DEVICE);
-- 
1.7.0.4

