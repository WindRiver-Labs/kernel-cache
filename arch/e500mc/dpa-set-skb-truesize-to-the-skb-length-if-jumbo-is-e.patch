From 3cec9a8aa18a3d994c88ab5bb2da9c1772049f98 Mon Sep 17 00:00:00 2001
From: "yanjun.zhu" <yanjun.zhu@windriver.com>
Date: Tue, 14 Jul 2015 16:28:27 +0800
Subject: [PATCH] dpa: set skb truesize to the skb length if jumbo is enabled

This patch is from FSL SDK 1.6.

After the jubmo is set to 9600, the truesize of skb should be set
to the skb length before these skb packets are sent to netif_receive_skb.

Signed-off-by: yanjun.zhu <yanjun.zhu@windriver.com>
---
 drivers/net/dpa/dpaa_eth.c |    5 +++++
 include/linux/skbuff.h     |    4 ++++
 2 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/drivers/net/dpa/dpaa_eth.c b/drivers/net/dpa/dpaa_eth.c
index befce89..d475627 100644
--- a/drivers/net/dpa/dpaa_eth.c
+++ b/drivers/net/dpa/dpaa_eth.c
@@ -838,6 +838,8 @@ static void _dpa_tx_error(struct net_device		*net_dev,
 	dev_kfree_skb(skb);
 }
 
+#define JUMBO_LENGTH	9600
+
 static void __hot _dpa_rx(struct net_device *net_dev,
 		const struct dpa_priv_s *priv,
 		struct dpa_percpu_priv_s *percpu_priv,
@@ -904,6 +906,9 @@ static void __hot _dpa_rx(struct net_device *net_dev,
 	} else
 		skb->ip_summed = CHECKSUM_NONE;
 
+	if (JUMBO_LENGTH == FSL_FMAN_PHY_MAXFRM)
+		skb->truesize = SKB_TRUESIZE(dpa_fd_length(fd));
+
 	if (unlikely(netif_receive_skb(skb) == NET_RX_DROP))
 		percpu_priv->stats.rx_dropped++;
 	else {
diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 5dac1c9..a4cb8e1 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -45,6 +45,10 @@
 #define SKB_MAX_HEAD(X)		(SKB_MAX_ORDER((X), 0))
 #define SKB_MAX_ALLOC		(SKB_MAX_ORDER(0, 2))
 
+#define SKB_TRUESIZE(X) ((X) +                                          \
+			SKB_DATA_ALIGN(sizeof(struct sk_buff)) +       \
+			SKB_DATA_ALIGN(sizeof(struct skb_shared_info)))
+
 /* A. Checksumming of received packets by device.
  *
  *	NONE: device failed to checksum this packet.
-- 
1.7.5.4

