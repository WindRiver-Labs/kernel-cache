From c656b7d63b2250aa9d49da02a3c696ce66dfae6c Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Thu, 18 Aug 2011 15:21:00 +0800
Subject: [PATCH 1/2] ppc-mc/e500mc: provide specialty debug exception entry for e500mc guest OS

e500mc guest OS can access those necessary privileged registers and
also walk through NORMAL_EXCEPTION_PROLOG native Linux implemented.
This is different with e500 guest OS, so we should provide conveniently
its specialty debug exception entry to avoid touching something
dedicated to paravirtualized e500 guest OS since this may make
kernel panic.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/kernel/head_wrhv.h |   11 ++++++++++-
 1 files changed, 10 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/kernel/head_wrhv.h b/arch/powerpc/kernel/head_wrhv.h
index 2133805..daa1c0c 100644
--- a/arch/powerpc/kernel/head_wrhv.h
+++ b/arch/powerpc/kernel/head_wrhv.h
@@ -111,6 +111,7 @@
 	bl	set_exec_table
 
 #undef DEBUG_DEBUG_EXCEPTION
+#ifndef CONFIG_PPC85xx_VT_MODE
 #define DEBUG_DEBUG_EXCEPTION						      \
 	START_EXCEPTION(DebugDebug);						\
 	NORMAL_EXCEPTION_PROLOG;					\
@@ -121,7 +122,6 @@
 	/* EXC_XFER_STD(0x1000, DebugException)	*/		\
 	EXC_XFER_TEMPLATE(DebugException, 0x2008, (MSR_KERNEL & ~(MSR_ME|MSR_DE|MSR_CE)), NOCOPY, transfer_to_handler_full, ret_from_except_full)
 
-#ifndef CONFIG_PPC85xx_VT_MODE
 #undef INSTRUCTION_STORAGE_EXCEPTION
 #define INSTRUCTION_STORAGE_EXCEPTION					      \
 	START_EXCEPTION(InstructionStorage)				      \
@@ -150,6 +150,15 @@
 	stw	r5,_ESR(r11);						      \
 	addi	r3,r1,STACK_FRAME_OVERHEAD;				      \
 	EXC_XFER_STD(0x0700, program_check_exception)
+#else
+#define DEBUG_DEBUG_EXCEPTION						      \
+	START_EXCEPTION(DebugDebug);						\
+	NORMAL_EXCEPTION_PROLOG;					\
+	mfspr	r5,SPRN_ESR;					\
+	stw	r5,_ESR(r11);					\
+	addi    r3,r1,STACK_FRAME_OVERHEAD;				\
+	/* EXC_XFER_STD(0x1000, DebugException)	*/		\
+	EXC_XFER_TEMPLATE(DebugException, 0x2008, (MSR_KERNEL & ~(MSR_ME|MSR_DE|MSR_CE)), NOCOPY, transfer_to_handler_full, ret_from_except_full)
 #endif
 
 #undef DECREMENTER_EXCEPTION
-- 
1.7.0.2

