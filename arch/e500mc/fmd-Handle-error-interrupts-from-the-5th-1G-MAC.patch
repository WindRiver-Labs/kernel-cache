From fc72d4401056e9a24bd9c536d586e72d6218c1f9 Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Mon, 9 May 2011 12:05:34 +0300
Subject: [PATCH 105/233] fmd: Handle error interrupts from the 5th 1G MAC

vendor drop QorIQ-DPAA-SDK-V1-20110609-systembuilder.iso
0133-fmd-Handle-error-interrupts-from-the-5th-1G-MAC.patch

On P3/P5 platforms there are 5 1G ports. Current code only handles
error interrupts having as source the first 4 dTSECs. If an error
is reported on dTSEC5, it will generate an interrupt storm since
nobody clears it.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
---
 drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c      |    9 +++++++++
 .../dpa/NetCommSw/Peripherals/FM/inc/fm_common.h   |    1 +
 .../inc/integrations/P1023/dpaa_integration_ext.h  |    1 +
 3 files changed, 11 insertions(+), 0 deletions(-)

diff --git a/drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c b/drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c
index 64ea1d0..fb9d5ec 100644
--- a/drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c
+++ b/drivers/net/dpa/NetCommSw/Peripherals/FM/fm.c
@@ -3684,6 +3684,13 @@ void FM_ErrorIsr(t_Handle h_Fm)
         else
             p_Fm->intrMng[e_FM_EV_ERR_1G_MAC3].f_Isr(p_Fm->intrMng[e_FM_EV_ERR_1G_MAC3].h_SrcHandle);
     }
+    if(pending & ERR_INTR_EN_1G_MAC4)
+    {
+       if (p_Fm->guestId != p_Fm->intrMng[e_FM_EV_ERR_1G_MAC4].guestId)
+            SendIpcIsr(p_Fm, e_FM_EV_ERR_1G_MAC4, pending);
+       else
+            p_Fm->intrMng[e_FM_EV_ERR_1G_MAC4].f_Isr(p_Fm->intrMng[e_FM_EV_ERR_1G_MAC4].h_SrcHandle);
+    }
     if(pending & ERR_INTR_EN_10G_MAC0)
     {
        if (p_Fm->guestId != p_Fm->intrMng[e_FM_EV_ERR_10G_MAC0].guestId)
@@ -3708,6 +3715,8 @@ void FM_GuestErrorIsr(t_Handle h_Fm, uint32_t pending)
         p_Fm->intrMng[e_FM_EV_ERR_1G_MAC2].f_Isr(p_Fm->intrMng[e_FM_EV_ERR_1G_MAC2].h_SrcHandle);
     if(pending & ERR_INTR_EN_1G_MAC3)
         p_Fm->intrMng[e_FM_EV_ERR_1G_MAC3].f_Isr(p_Fm->intrMng[e_FM_EV_ERR_1G_MAC3].h_SrcHandle);
+    if(pending & ERR_INTR_EN_1G_MAC4)
+        p_Fm->intrMng[e_FM_EV_ERR_1G_MAC4].f_Isr(p_Fm->intrMng[e_FM_EV_ERR_1G_MAC4].h_SrcHandle);
     if(pending & ERR_INTR_EN_10G_MAC0)
         p_Fm->intrMng[e_FM_EV_ERR_10G_MAC0].f_Isr(p_Fm->intrMng[e_FM_EV_ERR_10G_MAC0].h_SrcHandle);
 }
diff --git a/drivers/net/dpa/NetCommSw/Peripherals/FM/inc/fm_common.h b/drivers/net/dpa/NetCommSw/Peripherals/FM/inc/fm_common.h
index 0f19681..71dc657 100644
--- a/drivers/net/dpa/NetCommSw/Peripherals/FM/inc/fm_common.h
+++ b/drivers/net/dpa/NetCommSw/Peripherals/FM/inc/fm_common.h
@@ -422,6 +422,7 @@ typedef uint32_t t_FmBlockErrIntrEnable;
 #define ERR_INTR_EN_1G_MAC1     0x00002000
 #define ERR_INTR_EN_1G_MAC2     0x00001000
 #define ERR_INTR_EN_1G_MAC3     0x00000800
+#define ERR_INTR_EN_1G_MAC4     0x00000400
 #define ERR_INTR_EN_MACSEC_MAC0 0x00000200
 
 
diff --git a/drivers/net/dpa/NetCommSw/inc/integrations/P1023/dpaa_integration_ext.h b/drivers/net/dpa/NetCommSw/inc/integrations/P1023/dpaa_integration_ext.h
index fa2910f..a0a1e6b 100644
--- a/drivers/net/dpa/NetCommSw/inc/integrations/P1023/dpaa_integration_ext.h
+++ b/drivers/net/dpa/NetCommSw/inc/integrations/P1023/dpaa_integration_ext.h
@@ -198,6 +198,7 @@ typedef enum e_FmInterModuleEvent {
     e_FM_EV_ERR_1G_MAC1,            /**< 1G MAC 1 error event */
     e_FM_EV_ERR_1G_MAC2,            /**< 1G MAC 2 error event */
     e_FM_EV_ERR_1G_MAC3,            /**< 1G MAC 3 error event */
+    e_FM_EV_ERR_1G_MAC4,            /**< 1G MAC 4 error event */
     e_FM_EV_ERR_MACSEC_MAC0,        /**< MACSEC MAC 0 error event */
     e_FM_EV_TMR,                    /**< Timer event */
     e_FM_EV_1G_MAC0_TMR,            /**< 1G MAC 0 Timer event */
-- 
1.7.0.4

