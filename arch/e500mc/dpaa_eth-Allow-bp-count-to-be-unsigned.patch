From 3ddbcd25d563e3df35318fdb7c82898c9e58a0ee Mon Sep 17 00:00:00 2001
From: Andy Fleming <afleming@freescale.com>
Date: Fri, 3 Jun 2011 17:49:32 -0500
Subject: [PATCH 136/233] dpaa_eth: Allow bp count to be unsigned

Extracted from vendor drop QorIQ-DPAA-SDK-V1-20110609-systembuilder.iso
0166-dpaa_eth-Allow-bp-count-to-be-unsigned.patch

The buffer pool count can go negative, briefly, if a core starts with
less than 64 buffers, and then handles 64 packets in one sitting. Allow
this to happen.  Also, instead of constantly adding 64 buffers to the
pool, add until we're back at 64.

In the process, I eliminated some tabs from the dpa_bp definition.

Signed-off-by: Andy Fleming <afleming@freescale.com>
---
 drivers/net/dpa/dpaa_eth.c |    9 ++++++---
 drivers/net/dpa/dpaa_eth.h |   16 ++++++++--------
 2 files changed, 14 insertions(+), 11 deletions(-)

diff --git a/drivers/net/dpa/dpaa_eth.c b/drivers/net/dpa/dpaa_eth.c
index 8be79bc..84079f9 100644
--- a/drivers/net/dpa/dpaa_eth.c
+++ b/drivers/net/dpa/dpaa_eth.c
@@ -211,7 +211,7 @@ static void dpa_bp_add_8(struct dpa_bp *dpa_bp)
 	int i;
 	struct sk_buff *skb;
 	int err;
-	unsigned int *count_ptr;
+	int *count_ptr;
 
 	count_ptr = per_cpu_ptr(dpa_bp->percpu_count, smp_processor_id());
 
@@ -934,13 +934,16 @@ static int dpaa_eth_poll(struct napi_struct *napi, int budget)
 {
 	struct dpa_percpu_priv_s *percpu_priv;
 	int cleaned = qman_poll_dqrr(budget);
+	int count;
 
 	percpu_priv = container_of(napi, struct dpa_percpu_priv_s, napi);
 
-	if (*percpu_priv->dpa_bp_count < DEFAULT_COUNT / 4) {
+	count = *percpu_priv->dpa_bp_count;
+
+	if (count < DEFAULT_COUNT / 4) {
 		int i;
 
-		for (i = 0; i < percpu_priv->dpa_bp->count; i += 8)
+		for (i = count; i < DEFAULT_COUNT; i += 8)
 			dpa_bp_add_8(percpu_priv->dpa_bp);
 	}
 
diff --git a/drivers/net/dpa/dpaa_eth.h b/drivers/net/dpa/dpaa_eth.h
index 8fc4bde..b4295e9 100644
--- a/drivers/net/dpa/dpaa_eth.h
+++ b/drivers/net/dpa/dpaa_eth.h
@@ -67,20 +67,20 @@ struct dpa_bp {
 	dma_addr_t			paddr;
 	void				*vaddr;
 	int kernel_pool;
-	unsigned int *percpu_count;
+	int *percpu_count;
 	int *needs_refill;
 	unsigned int skb_size;
 	atomic_t refs;
 };
 
 struct dpa_percpu_priv_s {
-	struct net_device	*net_dev;
-	unsigned int *dpa_bp_count;
-	u32			start_tx;
-	u32			in_interrupt;
-	u32			ingress_calls;
-	u32			tx_returned;
-	u32			tx_confirm;
+	struct net_device *net_dev;
+	int *dpa_bp_count;
+	u32 start_tx;
+	u32 in_interrupt;
+	u32 ingress_calls;
+	u32 tx_returned;
+	u32 tx_confirm;
 	struct dpa_bp *dpa_bp;
 	struct napi_struct napi;
 	struct net_device_stats	 stats;
-- 
1.7.0.4

