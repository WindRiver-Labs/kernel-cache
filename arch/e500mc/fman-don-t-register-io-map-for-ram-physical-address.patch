From 4bd9b0117c2c40893675eea33d764d3d1306d50e Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Thu, 21 Oct 2010 10:32:59 +0800
Subject: [PATCH 201/252] fman: don't register io map for ram physical address

The fman dirver maintain an io map list for converting virtual
address to physical address. And it makes an assumption that
the 0 ~ 512M physical address is used by ram, and register
a map for it. This is not correct when we run with lees than 512M
memory. And the XX_VirtToPhys will use the virt_to_phys if it
can't find the virtual address in the map list. This makes the
ram map in this list useless. So just don't register the ram
map by default.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../2.6/system/platform/P4080/platform_p4080_ds.c  |   18 ------------------
 1 files changed, 0 insertions(+), 18 deletions(-)

diff --git a/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/system/platform/P4080/platform_p4080_ds.c b/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/system/platform/P4080/platform_p4080_ds.c
index ddfcc1f..cf50478 100644
--- a/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/system/platform/P4080/platform_p4080_ds.c
+++ b/drivers/net/dpa/NetCommSw/user/env/linux/kernel/2.6/system/platform/P4080/platform_p4080_ds.c
@@ -71,13 +71,6 @@ typedef struct t_Platform
     uint32_t                localBusFreqHz;
 } t_Platform;
 
-
-uint32_t ram_virt_addr;
-uint32_t ram_phys_addr;
-uint32_t ram_size;
-
-
-
 /*---------------------------------------------------------------------------*/
 /*                       P4080-MDS Platform Init                             */
 /*---------------------------------------------------------------------------*/
@@ -96,15 +89,6 @@ t_Handle PLATFORM_Init(t_PlatformParam *p_PlatformParam)
     }
     memset(p_Platform, 0, sizeof(t_Platform));
 
-    ram_virt_addr = (uint32_t)phys_to_virt(0);
-    ram_phys_addr = 0x0;
-    ram_size      = 0x20000000;
-    if (SYS_RegisterIoMap((uint64_t)ram_virt_addr, (uint64_t)ram_phys_addr, ram_size) != E_OK)
-    {
-        REPORT_ERROR(MAJOR, E_INVALID_STATE, ("RAM memory map"));
-        return NULL;
-    }
-
     return p_Platform;
 }
 
@@ -116,8 +100,6 @@ t_Error PLATFORM_Free(t_Handle h_Platform)
     if (!p_Platform)
         RETURN_ERROR(MINOR, E_INVALID_HANDLE, NO_MSG);
 
-    SYS_UnregisterIoMap((uint64_t)ram_virt_addr);
-
     XX_Free(p_Platform);
 
     return E_OK;
-- 
1.6.5.2

