From 8b83018b0d454c4d649c56db887d8d4f6d5116f4 Mon Sep 17 00:00:00 2001
From: Li Yang <leoli@freescale.com>
Date: Wed, 4 Nov 2009 18:44:15 +0800
Subject: [PATCH 068/252] rionet: fix msg_rx_ring corruption issue

Adds lock to msg_rx_ring manipulating code to prevent corruption.
Also adds a debugging message useful to debug rx_ring problem.

Signed-off-by: Li Yang <leoli@freescale.com>
[Applied FSL SDK 2.0.3 patch
"kernel-2.6.30-rionet-fix-msg_rx_ring-corruption-issue.patch"]
Integrated-by: Yuri Nedel <Yuri.Nedel@windriver.com>
---
 drivers/net/rionet.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/drivers/net/rionet.c b/drivers/net/rionet.c
index b938bff..d3cd7f8 100644
--- a/drivers/net/rionet.c
+++ b/drivers/net/rionet.c
@@ -162,6 +162,7 @@ static int rionet_rx_clean(struct net_device *ndev)
 		if (!rnet->rx_skb[i])
 			continue;
 
+		pr_debug("RIONET: rionet_rx_clean slot %d\n", i);
 		if (!(data = rio_get_inb_message(rnet->mport, RIONET_MAILBOX)))
 			break;
 
@@ -568,6 +569,7 @@ static int rionet_open(struct net_device *ndev)
 	struct rionet_peer *peer, *tmp;
 	u32 pwdcsr;
 	struct rionet_private *rnet = netdev_priv(ndev);
+	unsigned long flags;
 
 	if (netif_msg_ifup(rnet))
 		printk(KERN_INFO "%s: open\n", DRV_NAME);
@@ -639,7 +641,9 @@ static int rionet_open(struct net_device *ndev)
 	for (i = 0; i < RIONET_RX_RING_SIZE; i++)
 		rnet->rx_skb[i] = NULL;
 	rnet->rx_slot = 0;
+	spin_lock_irqsave(&rnet->lock, flags);
 	rionet_rx_fill(ndev, 0);
+	spin_unlock_irqrestore(&rnet->lock, flags);
 
 	rnet->tx_slot = 0;
 	rnet->tx_cnt = 0;
-- 
1.6.5.2

