From fd79bee92814331d7df4d7fa8c11e1e2ec0c6c39 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Mon, 17 Oct 2011 13:23:09 +0800
Subject: [PATCH 5/6] BOOK3E/KDUMP: don't check Qman MR

We shouldn't check Qman MR in the kdump kernel to make sure DPAA
still work well.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index bec9358..18fa364 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -364,6 +364,7 @@ int qman_have_affine_portal(void)
 	return ret;
 }
 
+#ifndef CONFIG_CRASH_DUMP
 static int drain_mr_fqrni(struct qm_portal *p)
 {
 	struct qm_mr_entry *msg;
@@ -397,6 +398,7 @@ loop:
 	qm_mr_cci_consume(p, 1);
 	goto loop;
 }
+#endif
 
 /* this is called from qman_create_affine_portal() if not initialising in
  * recovery mode, otherwise from qman_recovery_exit_local() after recovery is
@@ -617,6 +619,7 @@ drain_loop:
 		goto fail_dqrr_mr_empty;
 	}
 #endif
+#ifndef CONFIG_CRASH_DUMP
 	if (qm_mr_current(__p) != NULL) {
 		/* special handling, drain just in case it's a few FQRNIs */
 		if (drain_mr_fqrni(__p)) {
@@ -624,6 +627,7 @@ drain_loop:
 			goto fail_dqrr_mr_empty;
 		}
 	}
+#endif
 	/* Success */
 	portal->config = config;
 	spin_lock(&affine_mask_lock);
@@ -633,7 +637,9 @@ drain_loop:
 	/* Write a sane SDQCR */
 	qm_dqrr_sdqcr_set(__p, recovery_mode ? 0 : portal->sdqcr);
 	return portal;
+#ifndef CONFIG_CRASH_DUMP
 fail_dqrr_mr_empty:
+#endif
 fail_eqcr_empty:
 #ifdef CONFIG_FSL_DPA_HAVE_IRQ
 fail_affinity:
-- 
1.7.0.4

