From 28a9b0850643d5275061851b3147ccc57b0b58db Mon Sep 17 00:00:00 2001
From: Liang Li <liang.li@windriver.com>
Date: Tue, 27 Jul 2010 12:56:46 +0800
Subject: [PATCH 232/252] wrhv/p4080: setup proper MSR value for AP

Implement board specific function to setup proper MSR value
for AP

Signed-off-by: Liang Li <liang.li@windriver.com>
---
 arch/powerpc/platforms/85xx/wrhv_p4080_ds.c |   16 ++++++++++++++++
 1 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/wrhv_p4080_ds.c b/arch/powerpc/platforms/85xx/wrhv_p4080_ds.c
index 401d001..02215cf 100644
--- a/arch/powerpc/platforms/85xx/wrhv_p4080_ds.c
+++ b/arch/powerpc/platforms/85xx/wrhv_p4080_ds.c
@@ -289,6 +289,22 @@ static __init void p4080_init_early(void)
 	}
 }
 
+void wrhv_setup_msr_for_ap(VBI_HREG_SET_CMPLX_QUALIFIED *regs)
+{
+	/*
+	 * The MSR value depends on hypervisor's preparetion for GOS.
+	 * Hypervisor has prepared 2 TLB entry for GOS, hence here we don't
+	 * have to set IS | DS. But e500mc will use kernel space 1, aka
+	 * MSR_IS | MSR_DS, the same as E500. Refer to head_wrhv_p4080.S to
+	 * see e500mc GOS run space 1. And thanks to e500mc's vt mode, we
+	 * don't need PR bit at the entry point of GOS and the interrupts
+	 * are masked as well. MSR_GS will good enough for e500mc. And
+	 * GOS will manage (MSR_CE | MSR_ME | MSR_EE) bits with MSR_KERNEL
+	 * without hypervisor's involvement.
+	 */
+	regs->vbiRegSet.hreg32.msr = MSR_GS;
+}
+
 define_machine(p4080_ds) {
 	.name			= "Wind River Hypervisor P4080 DS",
 	.probe			= wrhv_p4080_probe,
-- 
1.6.5.2

