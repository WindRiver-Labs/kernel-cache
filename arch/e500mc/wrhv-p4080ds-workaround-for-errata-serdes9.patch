From 18a5295405b1d944c828c4f2693e7cb60f091ec4 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Tue, 14 Dec 2010 10:10:00 +0800
Subject: [PATCH 191/233] wrhv/p4080ds: workaround for errata serdes9

Workaround for errata serdes9. This is based on the fix in FSL
p4080 SDK 2.2 u-boot.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/boot/dts/wrhv_p4080ds.dts      |    5 ++
 arch/powerpc/platforms/85xx/corenet_ds.h    |   63 +++++++++++++++++++++++++++
 arch/powerpc/platforms/85xx/wrhv_p4080_ds.c |   50 +++++++++++++++++++++
 3 files changed, 118 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/boot/dts/wrhv_p4080ds.dts b/arch/powerpc/boot/dts/wrhv_p4080ds.dts
index 4db54ee..574c4de 100644
--- a/arch/powerpc/boot/dts/wrhv_p4080ds.dts
+++ b/arch/powerpc/boot/dts/wrhv_p4080ds.dts
@@ -1002,6 +1002,11 @@
 			#sleep-cells = <1>;
 		};
 
+		serdes@ea800{
+			compatible = "fsl,p4080-serdes";
+			reg = <0xea000 0x1000>;
+		};
+
 		mpic: pic@40000 {
 			clock-frequency = <0>;
 			interrupt-controller;
diff --git a/arch/powerpc/platforms/85xx/corenet_ds.h b/arch/powerpc/platforms/85xx/corenet_ds.h
index 7f2e9b1..f77ae27 100644
--- a/arch/powerpc/platforms/85xx/corenet_ds.h
+++ b/arch/powerpc/platforms/85xx/corenet_ds.h
@@ -12,6 +12,69 @@
 #ifndef CORENET_DS_H
 #define CORENET_DS_H
 
+#define SRDS_RSTCTL_RST		0x80000000
+#define SRDS_RSTCTL_RSTDONE	0x40000000
+#define SRDS_RSTCTL_RSTERR	0x20000000
+#define SRDS_RSTCTL_SDPD	0x00000020
+
+#define SRDS_PLLCR0_RFCK_SEL_MASK	0x30000000
+#define SRDS_PLLCR0_RFCK_SEL_100	0x00000000
+#define SRDS_PLLCR0_RFCK_SEL_125	0x10000000
+#define SRDS_PLLCR0_RFCK_SEL_156_25	0x20000000
+#define SRDS_PLLCR0_FRATE_SEL_MASK	0x00030000
+#define SRDS_PLLCR0_FRATE_SEL_5		0x00000000
+#define SRDS_PLLCR0_FRATE_SEL_6_25	0x00010000
+
+#define SRDS_PLLCR1_PLL_BWSEL	0x08000000
+
+#define SRDS_PCCR2_RST_XGMII1		0x00800000
+#define SRDS_PCCR2_RST_XGMII2		0x00400000
+
+#define SRDS_GCR0_RRST			0x00400000
+#define SRDS_GCR0_1STLANE		0x00010000
+
+#define SRDS_GCR1_REIDL_CTL_MASK	0x001f0000
+#define SRDS_GCR1_REIDL_CTL_PCIE	0x00100000
+#define SRDS_GCR1_REIDL_CTL_SRIO	0x00000000
+#define SRDS_GCR1_REIDL_CTL_SGMII	0x00040000
+#define SRDS_GCR1_OPAD_CTL		0x04000000
+
+#define SRDS_TECR0_TEQ_TYPE_MASK	0x30000000
+#define SRDS_TECR0_TEQ_TYPE_2LVL	0x10000000
+
+#define SRDS_TTLCR0_FLT_SEL_MASK	0x3f000000
+#define SRDS_TTLCR0_PM_DIS		0x00004000
+
+struct corenet_serdes {
+	struct {
+		u32	rstctl;	/* Reset Control Register */
+		u32	pllcr0; /* PLL Control Register 0 */
+		u32	pllcr1; /* PLL Control Register 1 */
+		u32	res[5];
+	} bank[3];
+	u32	res1[12];
+	u32	srdstcalcr;	/* TX Calibration Control */
+	u32	res2[3];
+	u32	srdsrcalcr;	/* RX Calibration Control */
+	u32	res3[3];
+	u32	srdsgr0;	/* General Register 0 */
+	u32	res4[11];
+	u32	srdspccr0;	/* Protocol Converter Config 0 */
+	u32	srdspccr1;	/* Protocol Converter Config 1 */
+	u32	srdspccr2;	/* Protocol Converter Config 2 */
+	u32	res5[197];
+	struct {
+		u32	gcr0;	/* General Control Register 0 */
+		u32	gcr1;	/* General Control Register 1 */
+		u32	res1[4];
+		u32	tecr0;	/* TX Equalization Control Reg 0 */
+		u32	res3;
+		u32	ttlcr0;	/* Transition Tracking Loop Ctrl 0 */
+		u32	res4[7];
+	} lane[24];
+	u32 res6[384];
+};
+
 extern void __init corenet_ds_pic_init(void);
 extern void __init corenet_ds_setup_arch(void);
 extern int __init corenet_ds_publish_devices(void);
diff --git a/arch/powerpc/platforms/85xx/wrhv_p4080_ds.c b/arch/powerpc/platforms/85xx/wrhv_p4080_ds.c
index 9e93603..c8f4c56 100644
--- a/arch/powerpc/platforms/85xx/wrhv_p4080_ds.c
+++ b/arch/powerpc/platforms/85xx/wrhv_p4080_ds.c
@@ -32,6 +32,7 @@
 
 #include <asm/wrhv.h>
 #include <vbi/vbi.h>
+#include "corenet_ds.h"
 
 extern struct vb_config *wr_config;
 extern struct vb_status *wr_status;
@@ -105,6 +106,55 @@ static int __init p4080_errata_gen8(void)
 }
 machine_postcore_initcall(p4080_ds, p4080_errata_gen8);
 
+static int __init p4080_errata_serdes9(struct corenet_serdes *sd)
+{
+	int i;
+
+	/* Fix for XAUI on FMAN2. We only support serdes protocol 0x10 now. */
+	for (i = 16; i < 20; i++)
+		clrsetbits_be32(&sd->lane[i].ttlcr0, SRDS_TTLCR0_FLT_SEL_MASK,
+				0x03000000 | SRDS_TTLCR0_PM_DIS);
+
+
+	clrbits32(&sd->bank[2].pllcr1, SRDS_PLLCR1_PLL_BWSEL);
+
+	for (i = 16; i < 20; i++)
+		clrbits32(&sd->lane[i].gcr0, SRDS_GCR0_RRST);
+
+	mdelay(1);
+	for (i = 16; i < 20; i++)
+		setbits32(&sd->lane[i].gcr0, SRDS_GCR0_RRST);
+
+	pr_info("Workaround for Errata SERDES9 enabled\n");
+	return 0;
+}
+
+static int __init p4080_serdes_errata(void)
+{
+	struct device_node *np;
+	struct corenet_serdes *sd;
+
+	np = of_find_compatible_node(NULL, NULL, "fsl,p4080-serdes");
+	if (!np) {
+		pr_err("fsl,p4080-serdes device node not found\n");
+		return -1;
+	}
+
+	sd = of_iomap(np, 0);
+	if (!sd) {
+		pr_err("%s ioremap failed\n", np->full_name);
+		of_node_put(np);
+		return -1;
+	}
+
+	p4080_errata_serdes9(sd);
+
+	iounmap(sd);
+	of_node_put(np);
+	return 0;
+}
+machine_postcore_initcall(p4080_ds, p4080_serdes_errata);
+
 static void __init wrhv_mpc85xx_pic_init(void)
 {
 	wrhv_init_irq();
-- 
1.7.0.4

