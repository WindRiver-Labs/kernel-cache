From 3d65469e8dbd65b12c193588af34e19e74074422 Mon Sep 17 00:00:00 2001
From: Jeffrey Ladouceur <Jeffrey.Ladouceur@freescale.com>
Date: Mon, 14 Dec 2009 12:49:58 +0800
Subject: [PATCH 088/252] pme: fix, don't allocate in atomic context

Signed-off-by: Jeffrey Ladouceur <Jeffrey.Ladouceur@freescale.com>
[Kevin Hao applied FSL SDK 2.0.3 patch
"kernel-2.6.30-pme-fix-don-t-allocate-in-atomic-context.patch", which did
not have any commit header.]
Integrated-by: Yuri Nedel <Yuri.Nedel@windriver.com>
---
 drivers/match/pme2_high.c |   13 ++++++++-----
 1 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/match/pme2_high.c b/drivers/match/pme2_high.c
index 22cde58..f28c486 100644
--- a/drivers/match/pme2_high.c
+++ b/drivers/match/pme2_high.c
@@ -614,8 +614,12 @@ static inline int __update_flow(struct pme_ctx *ctx, u32 flags,
 {
 	struct qm_fd fd;
 	int ret;
+	int hw_res_used = 0;
+	struct pme_hw_residue *hw_res = pme_hw_residue_new();
 
 	BUG_ON(ctx->flags & PME_CTX_FLAG_DIRECT);
+	if (!hw_res)
+		return -ENOMEM;
 	token->base_token.cmd_type = pme_cmd_flow_write;
 
 	flags &= ~PME_CTX_OP_PRIVATE;
@@ -632,13 +636,12 @@ static inline int __update_flow(struct pme_ctx *ctx, u32 flags,
 	}
 	/* allocate residue memory if it is being added */
 	if ((flags & PME_CMD_FCW_RES) && params->ren && !ctx->hw_residue) {
-		ctx->hw_residue = pme_hw_residue_new();
-		if (!ctx->hw_residue) {
-			spin_unlock_irq(&ctx->lock);
-			return -ENOMEM;
-		}
+		ctx->hw_residue = hw_res;
+		hw_res_used = 1;
 	}
 	spin_unlock_irq(&ctx->lock);
+	if (!hw_res_used)
+		pme_hw_residue_free(hw_res);
 	/* enqueue the FCW command to PME */
 	memset(&fd, 0, sizeof(fd));
 	token->internal_flow_ptr = pme_hw_flow_new();
-- 
1.6.5.2

