From 73fce934a522bc373b839be1e005965125a39bff Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Fri, 5 Aug 2011 12:40:54 +0800
Subject: [PATCH 4/6] ppc-mc/e500mc: paravirtulize mfspr

Although e500mc guest OS with hypervisor can access many privileged
registers. But current hypervisor still can't some registers,
like SPRN_TLB1CFG current native Linux use this to implement hugtlb.
And guest OS doesn't support hugtlb as well, and paravirtulize mfspr
with dummy fixed value per datasheet when touch SPRN_TLB1CFG.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/include/asm/reg_wrhv.h |   57 +++++++++++++++++++-
 arch/powerpc/kernel/vbi/wrhv.c      |  100 +----------------------------------
 2 files changed, 57 insertions(+), 100 deletions(-)

diff --git a/arch/powerpc/include/asm/reg_wrhv.h b/arch/powerpc/include/asm/reg_wrhv.h
index 1c1f6d2..cf8a8e5 100644
--- a/arch/powerpc/include/asm/reg_wrhv.h
+++ b/arch/powerpc/include/asm/reg_wrhv.h
@@ -202,10 +202,63 @@
 	lwz	rd,wrhv_supervisor@l(rd)
 #endif
 #else	/* __ASSEMBLY__ */
-#ifndef CONFIG_PPC85xx_VT_MODE
+#define	__PPC_SPR(spr)	(((spr >> 5) & 0x1f) | ((spr & 0x1f) << 5))
+#ifdef CONFIG_PPC85xx_VT_MODE
+#define WRHV_MFSPR_NO_PERMISSION(rn)					\
+({									\
+	unsigned long code = 0x7c0002a6 |				\
+		(__PPC_SPR(rn) << 11) | __PPC_RS(4);  			\
+	unsigned long value;						\
+	asm volatile (							\
+		"mr 3, %1\n"						\
+		"mfspr 4," __stringify(rn) "\n"				\
+		"mr %0, 4\n"						\
+		:"=r" (value)						\
+		:"r" (code)						\
+		:"r3", "r4"						\
+	);								\
+	value;								\
+})
+
+#define WRHV_MFSPR(rn)					\
+({							\
+	unsigned long value;				\
+	asm volatile (					\
+		"mfspr %0," __stringify(rn)		\
+		:"=r" (value)				\
+	);						\
+	value;						\
+})
+
+#define wrhv_mfspr(rn)					\
+({							\
+	unsigned long value;				\
+	switch (rn) {					\
+	case SPRN_DBCR0:				\
+	case SPRN_DBSR:					\
+	case SPRN_IAC1:					\
+	case SPRN_IAC2:					\
+	case SPRN_DAC1:					\
+	case SPRN_DAC2:					\
+	case SPRN_DBCR1:				\
+	case SPRN_DBCR2:				\
+		value = WRHV_MFSPR_NO_PERMISSION(rn);	\
+		break;					\
+	case SPRN_TLB1CFG:				\
+		/* FIXME: dump this fixed value per datasheet since
+		 * currently the hypervisor doesn't emulate this register.
+		 */					\
+		value = 0x401bc040;			\
+		break;					\
+	default:					\
+		value = WRHV_MFSPR(rn);			\
+	}						\
+	value;						\
+})
+#else
 extern unsigned int wrhv_mfspr(unsigned int sprn);
-#define mfspr(rn)	wrhv_mfspr(rn)
 #endif
+#define mfspr(rn)	wrhv_mfspr(rn)
 #endif /* __ASSEMBLY__ */
 
 #endif /* __KERNEL__ */
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 48609a8..db09a93 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -1615,103 +1615,7 @@ void wrhv_prime_debug_regs(struct thread_struct *thread)
 #endif
 }
 
-#ifdef CONFIG_PPC85xx_VT_MODE
-unsigned int wrhv_mfspr(unsigned int sprn)
-{
-	unsigned int value = 0;
-	switch(sprn){
-		case SPRN_DBCR0:
-			__asm__ __volatile__(
-			"lis    3,%1@h\n"
-			"ori    3,3,%1@l\n"
-			"mfspr	4,0x134\n"
-			"mr	%0,4\n"
-			:"=r" (value)
-			:"i" (SPRN_DBCR0_R)
-			);
-			break;
-
-		case SPRN_DBSR:
-			__asm__ __volatile__(
-			"lis    3,%1@h\n"
-			"ori    3,3,%1@l\n"
-			"mfspr	4,0x130\n"
-			"mr	%0,4\n"
-			:"=r" (value)
-			:"i" (SPRN_DBSR_R)
-			);
-			break;
-
-		case SPRN_IAC1:
-			__asm__ __volatile__(
-			"lis    3,%1@h\n"
-			"ori    3,3,%1@l\n"
-			"mfspr	4,0x138\n"
-			"mr	%0,4\n"
-			:"=r" (value)
-			:"i" (SPRN_IAC1_R)
-			);
-			break;
-
-		case SPRN_IAC2:
-			__asm__ __volatile__(
-			"lis    3,%1@h\n"
-			"ori    3,3,%1@l\n"
-			"mfspr	4,0x139\n"
-			"mr	%0,4\n"
-			:"=r" (value)
-			:"i" (SPRN_IAC2_R)
-			);
-			break;
-
-		case SPRN_DAC1:
-			__asm__ __volatile__(
-			"lis    3,%1@h\n"
-			"ori    3,3,%1@l\n"
-			"mfspr	4,0x13C\n"
-			"mr	%0,4\n"
-			:"=r" (value)
-			:"i" (SPRN_DAC1_R)
-			);
-			break;
-
-		case SPRN_DAC2:
-			__asm__ __volatile__(
-			"lis    3,%1@h\n"
-			"ori    3,3,%1@l\n"
-			"mfspr	4,0x13D\n"
-			"mr	%0,4\n"
-			:"=r" (value)
-			:"i" (SPRN_DAC2_R)
-			);
-			break;
-
-		case SPRN_DBCR1:
-			__asm__ __volatile__(
-			"lis    3,%1@h\n"
-			"ori    3,3,%1@l\n"
-			"mfspr	4,0x135\n"
-			"mr	%0,4\n"
-			:"=r" (value)
-			:"i" (SPRN_DBCR1_R)
-			);
-			break;
-
-		case SPRN_DBCR2:
-			__asm__ __volatile__(
-			"lis    3,%1@h\n"
-			"ori    3,3,%1@l\n"
-			"mfspr	4,0x136\n"
-			"mr	%0,4\n"
-			:"=r" (value)
-			:"i" (SPRN_DBCR2_R)
-			);
-			break;
-	}
-
-	return value;
-}
-#else
+#ifndef CONFIG_PPC85xx_VT_MODE
 #define WRHV_READ_SPRN(sprn, value)		\
 do {						\
 	__asm__ __volatile__(			\
@@ -1758,8 +1662,8 @@ unsigned int wrhv_mfspr(unsigned int sprn)
 
 	return value;
 }
-#endif
 EXPORT_SYMBOL(wrhv_mfspr);
+#endif
 
 /* arch/powerpc/kernel/traps.c */
 void __kprobes wrhv_DebugException(struct pt_regs *regs, unsigned long debug_status)
-- 
1.7.0.4

