From 49f17791b25f2172791453f5745c33e492ecc2bd Mon Sep 17 00:00:00 2001
From: Andy Fleming <afleming@freescale.com>
Date: Mon, 24 Aug 2009 17:28:35 -0500
Subject: [PATCH 030/252] Minor style tweaks to make all for loops have outer braces

[Cleanly applied the FSL SDK 2.0.3 patch:
"0002-Minor-style-tweaks-to-make-all-for-loops-have-outer.patch"
no Signed-off-by present in original patch]
Integrated-by: Yuri Nedel <Yuri.Nedel@windriver.com>
---
 drivers/net/dpa/dpa.c |   11 +++++++----
 1 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/net/dpa/dpa.c b/drivers/net/dpa/dpa.c
index 0ea92e5..d6d1734 100644
--- a/drivers/net/dpa/dpa.c
+++ b/drivers/net/dpa/dpa.c
@@ -809,12 +809,13 @@ ingress_rx_default_dqrr(struct qman_portal		*portal,
 	struct dpa_fq			*dpa_fq;
 	uint32_t				fqid=0;
 
-	for(i=0; i<priv->num; i++)
+	for(i=0; i<priv->num; i++) {
 		if((dq->fqid >= priv->ranges[i].base) &&
 		   (dq->fqid < (priv->ranges[i].base+priv->ranges[i].count))) {
 			fqid = dq->fqid - priv->ranges[i].base;
 			break;
 		}
+	}
 
 	if (i == priv->num)
 		fqid = FMT_RX_DFLT_Q;
@@ -2032,12 +2033,13 @@ static int __devinit __cold __attribute__((nonnull)) dpa_probe(struct of_device
 			dpa_bp[i].size	= dpa_bp_size[i];
 		}
 	} else if (count == ARRAY_SIZE(dpa_bp_size)) {
-		for (i = 0, j = 0; i < count; i++)
+		for (i = 0, j = 0; i < count; i++) {
 			if (dpa_bp[i].count == 0 && dpa_bp[i].size == 0 && dpa_bp[i].paddr == 0) {
 				dpa_bp[i].count	= 128;
 				dpa_bp[i].size	= dpa_bp_size[i];
 				j++;
 			}
+		}
 		BUG_ON(j > 0 && j < count);
 	}
 
@@ -2134,7 +2136,7 @@ static int __devinit __cold __attribute__((nonnull)) dpa_probe(struct of_device
 
 		/* QM */
 
-		for (i = 0; i < ARRAY_SIZE(priv->dpa_fq_list); i++)	{
+		for (i = 0; i < ARRAY_SIZE(priv->dpa_fq_list); i++) {
 			uint32_prop = (typeof(uint32_prop))of_get_property(dpa_node,
 									   fsl_qman_frame_queues[i],
 									   &lenp);
@@ -2233,7 +2235,7 @@ static int __devinit __cold __attribute__((nonnull)) dpa_probe(struct of_device
 			goto _return_free_percpu;
 		}
 
-		for (i = 0; i < ARRAY_SIZE(ingress_fqs); i++)
+		for (i = 0; i < ARRAY_SIZE(ingress_fqs); i++) {
 			/* Error, default */
 			for (j = 0; j < ARRAY_SIZE(ingress_fqs[i]); j++, dpa_fq++) {
 				dpa_fq->fq_base	= ingress_fqs[i][j];
@@ -2251,6 +2253,7 @@ static int __devinit __cold __attribute__((nonnull)) dpa_probe(struct of_device
 				cpu_dev_dbg(dev, "%s:%s(): ingress_fqs[%s][%d] = %u\n",
 					    __file__, __func__, rtx[i], j, ingress_fqids[i][j]);
 			}
+		}
 
 		for (i = 0; i < ARRAY_SIZE(priv->egress_fqs); i++, dpa_fq++) {
 			dpa_fq->fq_base	= _egress_fqs;
-- 
1.6.5.2

