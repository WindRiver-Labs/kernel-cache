From 27619001bd216c173adf6581e3a872178c68b8d8 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Wed, 12 May 2010 16:39:48 +0800
Subject: [PATCH 217/252] WRHV/fsl_p4080: Restore exception macros

For E500mc restore native exceptions as the following:

1> NORMAL_EXCEPTION_PROLOG
2> INSTRUCTION_STORAGE_EXCEPTION
3> PROGRAM_EXCEPTION
And back to corresponding handler:
1> native_transfer_to_handler
2> native_ret_from_syscall
3> native_syscall_exit_work
4> native_restore
5> native_switch

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/kernel/Makefile    |    7 ++++++-
 arch/powerpc/kernel/entry_32.S  |    3 +--
 arch/powerpc/kernel/head_wrhv.h |    4 ++++
 3 files changed, 11 insertions(+), 3 deletions(-)

diff --git a/arch/powerpc/kernel/Makefile b/arch/powerpc/kernel/Makefile
index 8ecc75f..bd05f7e 100644
--- a/arch/powerpc/kernel/Makefile
+++ b/arch/powerpc/kernel/Makefile
@@ -63,8 +63,13 @@ obj64-$(CONFIG_HIBERNATION)	+= swsusp_asm64.o
 obj-$(CONFIG_MODULES)		+= module.o module_$(CONFIG_WORD_SIZE).o
 
 ifeq ($(CONFIG_WRHV),y)
-obj-$(CONFIG_WRHV)              += wrhv_entry_32.o wrhv_misc_32.o
+entry = wrhv_entry_32.o
 endif
+ifeq ($(CONFIG_PPC85xx_VT_MODE),y)
+entry = entry_32.o
+endif
+
+obj-$(CONFIG_WRHV)		+= $(entry) wrhv_misc_32.o
 
 ifeq ($(CONFIG_PARAVIRT),y)
 obj-$(CONFIG_PARAVIRT)          += paravirt_entry_32.o paravirt_misc_32.o
diff --git a/arch/powerpc/kernel/entry_32.S b/arch/powerpc/kernel/entry_32.S
index 59d75b3..6230352 100644
--- a/arch/powerpc/kernel/entry_32.S
+++ b/arch/powerpc/kernel/entry_32.S
@@ -907,8 +907,7 @@ restore:
 	b       paravirt_restore
 #endif
 
-.globl native_restore
-native_restore:
+_GLOBAL(native_restore)
 #ifdef CONFIG_44x
 	lis	r4,icache_44x_need_flush@ha
 	lwz	r5,icache_44x_need_flush@l(r4)
diff --git a/arch/powerpc/kernel/head_wrhv.h b/arch/powerpc/kernel/head_wrhv.h
index 0929a7e..dc71ee7 100644
--- a/arch/powerpc/kernel/head_wrhv.h
+++ b/arch/powerpc/kernel/head_wrhv.h
@@ -37,6 +37,7 @@
 	 * r10 is trashed and r11 pointer on interrupt frame. All other
 	 * registers contain their value before the system call was executed.
 	 */
+#ifndef	CONFIG_PPC85xx_VT_MODE
 #undef NORMAL_EXCEPTION_PROLOG
 #define NORMAL_EXCEPTION_PROLOG						     \
         mr      r4,r1;                                                       \
@@ -82,6 +83,7 @@
         lwz     r3,VB_STATUS_R3(r4);                                         \
         mr      r10,r4;                                                      \
         lwz     r4,VB_STATUS_R4(r4)
+#endif
 
 
 /*
@@ -125,6 +127,7 @@ label:
 	/* EXC_XFER_STD(0x1000, DebugException)	*/		\
 	EXC_XFER_TEMPLATE(DebugException, 0x2008, (MSR_KERNEL & ~(MSR_ME|MSR_DE|MSR_CE)), NOCOPY, transfer_to_handler_full, ret_from_except_full)
 
+#ifndef CONFIG_PPC85xx_VT_MODE
 #undef INSTRUCTION_STORAGE_EXCEPTION
 #define INSTRUCTION_STORAGE_EXCEPTION					      \
 	START_EXCEPTION(InstructionStorage)				      \
@@ -153,6 +156,7 @@ label:
 	stw	r5,_ESR(r11);						      \
 	addi	r3,r1,STACK_FRAME_OVERHEAD;				      \
 	EXC_XFER_STD(0x0700, program_check_exception)
+#endif
 
 #undef DECREMENTER_EXCEPTION
 #define DECREMENTER_EXCEPTION						      \
-- 
1.6.5.2

