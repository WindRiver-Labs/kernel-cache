From f52cf77b7f12001e45be36d00747c7208ab1150f Mon Sep 17 00:00:00 2001
From: Andy Fleming <afleming@freescale.com>
Date: Mon, 16 May 2011 18:56:56 -0500
Subject: [PATCH 128/233] dpaa_eth: Rearrange 1588 port initialization

Extracted from vendor drop QorIQ-DPAA-SDK-V1-20110609-systembuilder.iso
0158-dpaa_eth-Rearrange-1588-port-initialization.patch

The 1588 port initialization will only be done on Linux netdevices
with MACs.  The code stores the timer information in the netdev
priv structure, which only exists for Linux network interfaces.
However, the port initialization may be done for proxy interfaces
(ie, MACs which are initialized by the driver on behalf of another
partition), so we can't access "priv" in that code.  The fix is to
move the access up to where we know we have a net device and a MAC.

Signed-off-by: Andy Fleming <afleming@freescale.com>
---
 drivers/net/dpa/dpaa_eth.c |   26 +++++++++++---------------
 1 files changed, 11 insertions(+), 15 deletions(-)

diff --git a/drivers/net/dpa/dpaa_eth.c b/drivers/net/dpa/dpaa_eth.c
index 621b064..77140f5 100644
--- a/drivers/net/dpa/dpaa_eth.c
+++ b/drivers/net/dpa/dpaa_eth.c
@@ -1889,18 +1889,15 @@ dpa_mac_probe(struct of_device *_of_dev)
 
 #ifdef CONFIG_FSL_DPA_1588
 	phandle_prop = of_get_property(mac_node, "ptimer-handle", &lenp);
-	if (phandle_prop) {
-		if ((mac_dev->phy_if != PHY_INTERFACE_MODE_SGMII) ||
+	if (phandle_prop && ((mac_dev->phy_if != PHY_INTERFACE_MODE_SGMII) ||
 			((mac_dev->phy_if == PHY_INTERFACE_MODE_SGMII) &&
-			 (mac_dev->speed == SPEED_1000))) {
-			timer_node = of_find_node_by_phandle(*phandle_prop);
-			if (timer_node) {
-				net_dev = dev_get_drvdata(dpa_dev);
-				priv = netdev_priv(net_dev);
-				if (!dpa_ptp_init(priv))
-					dpaa_eth_info(dev, "%s: ptp-timer "
-					    "enabled\n", mac_node->full_name);
-			}
+			 (mac_dev->speed == SPEED_1000)))) {
+		timer_node = of_find_node_by_phandle(*phandle_prop);
+		if (timer_node && (net_dev = dev_get_drvdata(dpa_dev))) {
+			priv = netdev_priv(net_dev);
+			if (!dpa_ptp_init(priv))
+				dpaa_eth_info(dev, "%s: ptp-timer enabled\n",
+						mac_node->full_name);
 		}
 	}
 #endif
@@ -2485,6 +2482,7 @@ dpaa_eth_probe(struct of_device *_of_dev, const struct of_device_id *match)
 	struct dpa_fq *txfqs = NULL;
 	struct fm_port *rxport = NULL;
 	struct fm_port *txport = NULL;
+	bool has_timer = FALSE;
 	struct mac_device *mac_dev;
 	int proxy_enet;
 
@@ -2606,15 +2604,13 @@ dpaa_eth_probe(struct of_device *_of_dev, const struct of_device_id *match)
 				goto fq_alloc_failed;
 		}
 
+		if (priv->tsu && priv->tsu->valid)
+			has_timer = TRUE;
 	}
 
 	/* All real interfaces need their ports initialized */
 	if (mac_dev) {
 		struct fm_port_pcd_param rx_port_pcd_param;
-		bool has_timer = FALSE;
-
-		if (priv->tsu && priv->tsu->valid)
-			has_timer = TRUE;
 
 		dpaa_eth_init_rx_port(rxport, dpa_bp, count, rxerror,
 				rxdefault, has_timer);
-- 
1.7.0.4

