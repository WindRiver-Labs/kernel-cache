From 3d46cd67359ac861519c82d710c28ecff836d53e Mon Sep 17 00:00:00 2001
From: Benjamin Walsh <benjamin.walsh@windriver.com>
Date: Thu, 16 Sep 2010 13:24:13 -0700
Subject: [PATCH 147/252] kexec/p4080: Coming from a kexec boot, override QMan FQD BAR

We're coming from a kexec reboot, of course the register will have a
non-zero value in it, but we want to reallocate the memory from the
new kernel, not use the old memory, which might be used for something
else in the new kernel.

Signed-off-by: Benjamin Walsh <benjamin.walsh@windriver.com>
---
 drivers/hwqueue/qman_config.c |   19 ++++++++++++++++++-
 1 files changed, 18 insertions(+), 1 deletions(-)

diff --git a/drivers/hwqueue/qman_config.c b/drivers/hwqueue/qman_config.c
index 628252d..7db07f4 100644
--- a/drivers/hwqueue/qman_config.c
+++ b/drivers/hwqueue/qman_config.c
@@ -463,6 +463,23 @@ static __init int parse_mem_property(struct device_node *node, const char *name,
 	return 0;
 }
 
+#ifdef CONFIG_KEXEC_POWERPC_SMP_BOOTABLE
+/* we're coming from a kexec reboot, of course the register will have a
+ * non-zero value in it, but we want to reallocate the memory from the
+ * new kernel, not use the old memory, which might be used for something
+ * else in the new kernel. */
+static u32 qm_get_fqd_bar(void)
+{
+	return 0;
+}
+#else
+/* regular case */
+static u32 qm_get_fqd_bar(void)
+{
+	return __qm_in(qm, REG_FQD_BARE + REG_offset_BAR);
+}
+#endif
+
 /* TODO:
  * - there is obviously no handling of errors,
  * - the calls to qm_set_memory() pass no upper-bits, the physical addresses
@@ -496,7 +513,7 @@ static int __init fsl_qman_init(struct device_node *node)
 	/* We assume FQD BAR is already configured correctly
 	 * if that value is nonzero.
 	 */
-	if((__qm_in(qm, REG_FQD_BARE + REG_offset_BAR)) == 0) {
+	if(qm_get_fqd_bar() == 0) {
 		ret = parse_mem_property(node, "fsl,qman-fqd", &fqd_a, &fqd_sz, 1);
 		BUG_ON(ret);
 		ret = parse_mem_property(node, "fsl,qman-pfdr", &pfdr_a, &pfdr_sz, 0);
-- 
1.6.5.2

