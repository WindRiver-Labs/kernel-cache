From 1a7abeec689e49db3b34ef79f975d9aaa4b86203 Mon Sep 17 00:00:00 2001
From: Andy Fleming <afleming@freescale.com>
Date: Fri, 17 Dec 2010 17:45:04 -0600
Subject: [PATCH 118/233] net: Add support for handling queueing in hardware

Extracted from vendor drop QorIQ-DPAA-SDK-V1-20110609-systembuilder.iso
0148-net-Add-support-for-handling-queueing-in-hardware.patch

The QDisc code does a bunch of locking which is unnecessary if
you have hardware which handles all of the queueing.  Add
support for this, and skip over all of the queueing code if
the feature is enabled on a given device.

Signed-off-by: Andy Fleming <afleming@freescale.com>
---
 include/linux/netdevice.h |    1 +
 net/core/dev.c            |    5 +++++
 2 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index faab33e..f334334 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -765,6 +765,7 @@ struct net_device {
 #define NETIF_F_SCTP_CSUM	(1 << 25) /* SCTP checksum offload */
 #define NETIF_F_FCOE_MTU	(1 << 26) /* Supports max FCoE MTU, 2158 bytes*/
 #define NETIF_F_NTUPLE		(1 << 27) /* N-tuple filters supported */
+#define NETIF_F_HW_QDISC	(1 << 28) /* Supports hardware Qdisc */
 
 	/* Segmentation offload features */
 #define NETIF_F_GSO_SHIFT	16
diff --git a/net/core/dev.c b/net/core/dev.c
index 05e50d3..7a4e348 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -2119,6 +2119,11 @@ int dev_queue_xmit(struct sk_buff *skb)
 			goto out_kfree_skb;
 	}
 
+	if (dev->features & NETIF_F_HW_QDISC) {
+		txq = dev_pick_tx(dev, skb);
+		return dev_hard_start_xmit(skb, dev, txq);
+	}
+
 gso:
 	/* Disable soft irqs for various locks below. Also
 	 * stops preemption for RCU.
-- 
1.7.0.4

