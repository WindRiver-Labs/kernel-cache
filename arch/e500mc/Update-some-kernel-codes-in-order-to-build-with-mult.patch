From 747fddc22318e29c85c2c94e0202ae4b007aa234 Mon Sep 17 00:00:00 2001
From: Yue Tao <Yue.Tao@windriver.com>
Date: Sun, 22 Sep 2013 15:47:18 +0800
Subject: [PATCH] Update some kernel codes in order to build with multi-core

We updated some kernel features, for exapme perf, which causes multi-core
build error, because the related codes still call the old functions.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
Signed-off-by: Yue Tao <Yue.Tao@windriver.com>
---
 arch/mips/kernel/perf_event_mipsxx.c |    2 +-
 arch/powerpc/include/asm/hw_irq.h    |    5 +++++
 arch/powerpc/kernel/traps.c          |    1 +
 arch/powerpc/kernel/vbi/wrhv.c       |   25 +++++++++++--------------
 4 files changed, 18 insertions(+), 15 deletions(-)

diff --git a/arch/mips/kernel/perf_event_mipsxx.c b/arch/mips/kernel/perf_event_mipsxx.c
index 5c7c6fc..fa00edc 100644
--- a/arch/mips/kernel/perf_event_mipsxx.c
+++ b/arch/mips/kernel/perf_event_mipsxx.c
@@ -696,7 +696,7 @@ static int mipsxx_pmu_handle_shared_irq(void)
 	 * interrupt, not NMI.
 	 */
 	if (handled == IRQ_HANDLED)
-		perf_event_do_pending();
+		irq_work_run();
 
 #ifdef CONFIG_MIPS_MT_SMP
 	read_unlock(&pmuint_rwlock);
diff --git a/arch/powerpc/include/asm/hw_irq.h b/arch/powerpc/include/asm/hw_irq.h
index 6190af2..87b1555 100644
--- a/arch/powerpc/include/asm/hw_irq.h
+++ b/arch/powerpc/include/asm/hw_irq.h
@@ -207,6 +207,11 @@ static inline int native_irqs_disabled_flags(unsigned long flags)
 	return (flags & MSR_EE) == 0;
 }
 
+static inline bool arch_irq_disabled_regs(struct pt_regs *regs)
+{
+	return !(regs->msr & MSR_EE);
+}
+
 /* Hypervior specific implementation */
 #include <asm/pv_hw_irq.h>
 #endif /* CONFIG_PARAVIRT */
diff --git a/arch/powerpc/kernel/traps.c b/arch/powerpc/kernel/traps.c
index ba7b5f9..f833b42 100644
--- a/arch/powerpc/kernel/traps.c
+++ b/arch/powerpc/kernel/traps.c
@@ -58,6 +58,7 @@
 #endif
 #include <asm/kexec.h>
 #include <asm/ppc-opcode.h>
+#include <asm/hw_irq.h>
 #include <linux/rio.h>
 
 #if defined(CONFIG_DEBUGGER) || defined(CONFIG_KEXEC)
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 956fdf3..53429bf 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -106,7 +106,8 @@
 
 #include <asm/paravirt.h>
 
-#include <linux/perf_event.h>
+#include <linux/irq_work.h>
+#include <linux/cpu.h>
 #include <asm/trace.h>
 #include <trace/irq.h>
 #include <asm/ptrace.h>
@@ -990,17 +991,13 @@ static struct clock_event_device wrhv_clockevent = {
 	.rating		= 1,
 };
 
-/* Refer to arch/powerpc/kernel/time.c. */
-#undef	test_perf_event_pending
-#undef	clear_perf_event_pending
-
-#ifdef CONFIG_PERF_EVENTS
-extern DEFINE_PER_CPU(u8, perf_event_pending);
-#define test_perf_event_pending()	__get_cpu_var(perf_event_pending)
-#define clear_perf_event_pending()	__get_cpu_var(perf_event_pending) = 0
+#ifdef CONFIG_IRQ_WORK
+extern DEFINE_PER_CPU(u8, irq_work_pending);
+#define test_irq_work_pending()                __get_cpu_var(irq_work_pending)
+#define clear_irq_work_pending()       __get_cpu_var(irq_work_pending) = 0
 #else
-#define test_perf_event_pending()	0
-#define clear_perf_event_pending()
+#define test_irq_work_pending()         0
+#define clear_irq_work_pending()
 #endif
 
 void wrhv_hw_timer_interrupt(struct pt_regs * regs)
@@ -1021,9 +1018,9 @@ void wrhv_hw_timer_interrupt(struct pt_regs * regs)
 
 	calculate_steal_time();
 
-	if (test_perf_event_pending()) {
-		clear_perf_event_pending();
-		perf_event_do_pending();
+	if (test_irq_work_pending()) {
+		clear_irq_work_pending();
+		irq_work_run();
 	}
 
 	wrhv_timer_interrupt(0, NULL);
-- 
1.7.0

