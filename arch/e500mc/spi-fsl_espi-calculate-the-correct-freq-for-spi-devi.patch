From c47ce23ae4f719533a64971e6d289dc3725feee6 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 28 Jul 2010 15:40:10 +0800
Subject: [PATCH 135/252] spi/fsl_espi: calculate the correct freq for spi device

The hz is the max freq used by spi device. If the hz * 2 or hz * 32
can't divide the spi bus freq exactly, the freq value we get will be
greater than hz. Since we use a freq beyond the spi device max freq,
the spi device would work unstably.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/spi/fsl_espi.c |   10 +++++++---
 1 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/drivers/spi/fsl_espi.c b/drivers/spi/fsl_espi.c
index 782510d..ca15a60 100644
--- a/drivers/spi/fsl_espi.c
+++ b/drivers/spi/fsl_espi.c
@@ -141,7 +141,7 @@ int fsl_espi_setup_transfer(struct spi_device *spi, struct spi_transfer *t)
 	struct fsl_espi *fsl_espi;
 	unsigned long flags;
 	u32 regval;
-	u8 bits_per_word, pm, cs_sel = spi->chip_select;
+	u8 bits_per_word, pm, mod, cs_sel = spi->chip_select;
 	u32 hz;
 	struct fsl_espi_cs *cs = spi->controller_state;
 
@@ -185,15 +185,19 @@ int fsl_espi_setup_transfer(struct spi_device *spi, struct spi_transfer *t)
 	if ((fsl_espi->spibrg / hz) > 32) {
 		cs->hw_mode |= CSMODE_DIV16;
 		pm = fsl_espi->spibrg / (hz * 32);
+		mod = fsl_espi->spibrg % (hz * 32);
 		if (pm > 16) {
 			pm = 16;
 			dev_err(&spi->dev, "Requested speed is too "
 				"low: %d Hz. Will use %d Hz instead.\n",
 				hz, fsl_espi->spibrg / 32 * 16);
 		}
-	} else
+	} else {
 		pm = fsl_espi->spibrg / (hz * 2);
-	if (pm)
+		mod = fsl_espi->spibrg % (hz * 2);
+	}
+
+	if (pm && !mod)
 		pm--;
 	cs->hw_mode |= CSMODE_PM(pm);
 
-- 
1.6.5.2

