From 34682d791f99dcfae8d93a7362c8b5d011c2d461 Mon Sep 17 00:00:00 2001
From: Andrew Liu <shengping.liu@windriver.com>
Date: Thu, 9 Sep 2010 16:18:00 +0800
Subject: [PATCH 178/252] CAAM: register view changes for p4080-to2

Patch taken from FSL vendor SDK 2.1.

Added changes for p4080-to2 (some of which are late to-1 changes).

In the Performance Monitor:
- Removed obsolete secure-memory registers
- Added correct version/instantiation registers
- Included LIODN register format changes
- Added DECO available/reset registers
- Added secure-key nonce

DECO Register View:
- Added SEQ, non-SEQ, and trusted descriptor LIODN views
- Added internal scatter/gather tables

Also
- Added block guide register names for consistency
- Whitespace fixes
- Fixed an incorrect offset in RTIC register view
- Removed obsolete master access params struct (caam_mstraccess)
- Cross-checked with p3040 and p1010 block guides

Signed-off-by: Steve Cornelius <steve.cornelius@freescale.com>
Integrated-by: Andrew Liu <shengping.liu@windriver.com>
---
 drivers/crypto/caam/regs.h |  274 +++++++++++++++++++++++---------------------
 1 files changed, 145 insertions(+), 129 deletions(-)

diff --git a/drivers/crypto/caam/regs.h b/drivers/crypto/caam/regs.h
index 8adb16c..d535165 100644
--- a/drivers/crypto/caam/regs.h
+++ b/drivers/crypto/caam/regs.h
@@ -1,7 +1,7 @@
 /*
  * CAAM hardware register-level view
  *
- * Copyright (c) 2008, 2009, Freescale Semiconductor, Inc.
+ * Copyright (c) 2008-2010, Freescale Semiconductor, Inc.
  * All Rights Reserved
  *
  * Redistribution and use in source and binary forms, with or without
@@ -120,7 +120,6 @@ static inline __be64 rd_reg64(__be64 *reg)
 	/* TODO: define little-endian variant */
 #endif
 
-
 /*
  * jq_outentry
  * Represents each entry in a JobQ output ring
@@ -131,58 +130,52 @@ struct jq_outentry {
 };
 
 /*
- * caam_mstraccess - Arrayed Secure Memory Partition Access
- *
- * Used to control access to 1-16 SM partitions per Job Queue
- */
-struct caam_mstraccess {
-	__be32 rsvd1;
-	__be32 mstrperm;   /* Master Access Permissions/Partition  */
-	__be32 rsvd2;
-	__be32 mstrid;     /* Allowed Master ID/Partition          */
-};
-
-/*
  * caam_perfmon - Performance Monitor/Secure Memory Status/
  *                CAAM Global Status/Component Version IDs
  *
  * Spans f00-fff wherever instantiated
  */
 struct caam_perfmon {
-	/* Performance Monitor Registers                        f00-f38 */
-	__be64 req_dequeued;   /* Dequeued Requests         */
-	__be64 ob_enc_req;     /* Outbound Encrypt Requests */
-	__be64 ib_dec_req;     /* Inbound Decrypt Requests  */
-	__be64 ob_enc_bytes;   /* Outbound Bytes Encrypted  */
-	__be64 ob_prot_bytes;  /* Outbound Bytes Protected  */
-	__be64 ib_dec_bytes;   /* Inbound Bytes Decrypted   */
-	__be64 ib_valid_bytes; /* Inbound Bytes Validated   */
-	__be64 rsvd[15];
-
-	/* Secure Memory                                        fb0-fbf */
-	__be64 smstatus;     /* SMSTA - Secure Memory Status      */
-	__be64 smpartowner;  /* SMPO  - SM Partition Owner        */
-
-	/* CAAM Global Status                                   fc0-fd7 */
-	__be64 faultaddr;    /* CFAR  - CAAM Fault Address        */
-	__be32 rsvd1;
-	__be32 faultdetail;  /* CFADR - CAAM Fault Addr Detail    */
+	/* Performance Monitor Registers			f00-f9f */
+	__be64 req_dequeued;	/* PC_REQ_DEQ - Dequeued Requests	     */
+	__be64 ob_enc_req;	/* PC_OB_ENC_REQ - Outbound Encrypt Requests */
+	__be64 ib_dec_req;	/* PC_IB_DEC_REQ - Inbound Decrypt Requests  */
+	__be64 ob_enc_bytes;	/* PC_OB_ENCRYPT - Outbound Bytes Encrypted  */
+	__be64 ob_prot_bytes;	/* PC_OB_PROTECT - Outbound Bytes Protected  */
+	__be64 ib_dec_bytes;	/* PC_IB_DECRYPT - Inbound Bytes Decrypted   */
+	__be64 ib_valid_bytes;	/* PC_IB_VALIDATED Inbound Bytes Validated   */
+	__be64 rsvd[13];
+
+	/* CAAM Hardware Instantiation Parameters		fa0-fbf */
+	__be64 cha_rev;		/* CRNR - CHA Revision Number		*/
+	__be64 comp_parms;	/* CPNR - Compile Parameters Register	*/
+	__be64 rsvd1[2];
+
+	/* CAAM Global Status					fc0-fdf */
+	__be64 faultaddr;	/* FAR  - Fault Address		*/
+	__be32 faultliodn;	/* FALR - Fault Address LIODN 	*/
+	__be32 faultdetail;	/* FADR - Fault Addr Detail	*/
 	__be32 rsvd2;
-	__be32 status;       /* CSTA  - CAAM Status               */
-
-	/* Component ID Space                                   fd8-fff */
-	__be64 sm_id;        /* SMVID - Secure Memory Version ID  */
-	__be64 ccb_id;       /* CCBVID - CCB Version ID           */
-	__be64 cha_id;       /* CHAVID - CHA Version ID           */
-	__be64 rtic_id;      /* RVID - RTIC Version ID            */
-	__be64 caam_id;      /* CAAMVID - CAAM Version ID         */
+	__be32 status;		/* CSTA - CAAM Status */
+	__be64 rsvd3;
+
+	/* Component Instantiation Parameters			fe0-fff */
+	__be32 rtic_id;		/* RVID - RTIC Version ID	*/
+	__be32 ccb_id;		/* CCBVID - CCB Version ID	*/
+	__be64 cha_id;		/* CHAVID - CHA Version ID	*/
+	__be64 cha_num;		/* CHANUM - CHA Number		*/
+	__be64 caam_id;		/* CAAMVID - CAAM Version ID	*/
 };
 
+/* LIODN programming for DMA configuration */
+#define MSTRID_LOCK_LIODN	0x80000000
+#define MSTRID_LOCK_MAKETRUSTED	0x00010000	/* only for JQ masterid */
 
-/* Master ID for DMA configuration */
+#define MSTRID_LIODN_MASK	0x0fff
 struct masterid {
-	__be32 rsvd1;
-	__be32 midr;	/* master ID, JobQ or RTIC */
+	__be32 lock;		/* lock and make-trusted control bits */
+	__be16 liodn_ns;	/* LIODN for non-sequence access */
+	__be16 liodn_sq;	/* LIODN for sequence access */
 };
 
 /* Partition ID for DMA configuration */
@@ -194,7 +187,7 @@ struct partid {
 /* RNG test mode (replicated twice in some configurations) */
 /* Padded out to 0x100 */
 struct rngtst {
-	__be32 mode;		/* Test mode */
+	__be32 mode;		/* RTSTMODEx - Test mode */
 	__be32 rsvd1[3];
 	__be32 reset;		/* Test reset control */
 	__be32 rsvd2[3];
@@ -233,37 +226,49 @@ struct rngtst {
 #define TKEK_KEY_SIZE		8
 #define TDSK_KEY_SIZE		8
 
+#define DECO_RESET	1	/* Use with DECO reset/availability regs */
+#define DECO_RESET_0	(DECO_RESET << 0)
+#define DECO_RESET_1	(DECO_RESET << 1)
+#define DECO_RESET_2	(DECO_RESET << 2)
+#define DECO_RESET_3	(DECO_RESET << 3)
+#define DECO_RESET_4	(DECO_RESET << 4)
+
 struct caam_ctrl {
-	/* Basic Configuration Section                          000-02f */
-	/* Read/Writable                                                */
+	/* Basic Configuration Section				000-01f */
+	/* Read/Writable					        */
 	__be32 rsvd1;
 	__be32 mcr;		/* MCFG      Master Config Register  */
 	__be32 rsvd2[2];
 
-	/* Bus Access Configuration Section                     090-0c7 */
+	/* Bus Access Configuration Section			010-11f */
 	/* Read/Writable                                                */
-	struct masterid jq_mid[4];	/* JQ0MIDx - 1 per queue */
+	struct masterid jq_mid[4];	/* JQxLIODNR - JobQ LIODN setup */
 	__be32 rsvd3[12];
-	struct masterid rtic_mid[4];	/* RTICMID   RTIC Bus Master ID */
+	struct masterid rtic_mid[4];	/* RTICxLIODNR - RTIC LIODN setup */
 	__be32 rsvd4[7];
-	__be32 deco_rq;			/* DECORR    DECO Request */
-	struct partid deco_mid[5];	/* DECOMIDx - 1 per DECO */
-	__be32 rsvd5[206];
+	__be32 deco_rq;			/* DECORR - DECO Request */
+	struct partid deco_mid[5];	/* DECOxLIODNR - 1 per DECO */
+	__be32 rsvd5[22];
 
-	/* Key Encryption/Decryption Configuration              400-47f */
-	/* Read/Writable only while in Non-secure mode                  */
-	__be32 kek[KEK_KEY_SIZE];	/* KEK - Key Encryption Key */
-	__be32 tkek[TKEK_KEY_SIZE];	/* TKEK - Trusted Key Encryption Key */
-	__be32 tdsk[TDSK_KEY_SIZE];	/* TDSK - Trusted Desc Signing Key */
-	__be32 rsvd6[104];
+	/* DECO Availability/Reset Section			120-3ff */
+	__be32 deco_avail;		/* DAR - DECO availability */
+	__be32 deco_reset;		/* DRR - DECO reset */
+	__be32 rsvd6[182];
 
-	/* RNG Test/Verification/Debug Access                   600-6b7 */
+	/* Key Encryption/Decryption Configuration              400-5ff */
+	/* Read/Writable only while in Non-secure mode                  */
+	__be32 kek[KEK_KEY_SIZE];	/* JDKEKR - Key Encryption Key */
+	__be32 tkek[TKEK_KEY_SIZE];	/* TDKEKR - Trusted Desc KEK */
+	__be32 tdsk[TDSK_KEY_SIZE];	/* TDSKR - Trusted Desc Signing Key */
+	__be32 rsvd7[32];
+	__be64 sknonce;			/* SKNR - Secure Key Nonce */
+	__be32 rsvd8[70];
+
+	/* RNG Test/Verification/Debug Access                   600-7ff */
 	/* (Useful in Test/Debug modes only...)                         */
 	struct rngtst rtst[2];
 
-	/* LIODN Accessibility Mapping                          800-9ff */
-	__be16 pidmap[64];   /* CPIDMR - PID/LIODN Mapping        */
-	__be32 rsvd7[416];
+	__be32 rsvd9[448];
 
 	/* Performance Monitor                                  f00-fff */
 	struct caam_perfmon perfmon;
@@ -300,51 +305,45 @@ struct caam_ctrl {
  */
 struct caam_job_queue {
 	/* Input ring */
-	__be64 inpring_base;	/* Input desc ring baseaddr */
+	__be64 inpring_base;	/* IRBAx -  Input desc ring baseaddr */
 	__be32 rsvd1;
-	__be32 inpring_size;	/* Input ring size */
+	__be32 inpring_size;	/* IRSx - Input ring size */
 	__be32 rsvd2;
-	__be32 inpring_avail;	/* Input ring room remaining */
+	__be32 inpring_avail;	/* IRSAx - Input ring room remaining */
 	__be32 rsvd3;
-	__be32 inpring_jobadd;	/* Input ring jobs added */
+	__be32 inpring_jobadd;	/* IRJAx - Input ring jobs added */
 
 	/* Output Ring */
-	__be64 outring_base;	/* Output status ring base addr */
+	__be64 outring_base;	/* ORBAx - Output status ring base addr */
 	__be32 rsvd4;
-	__be32 outring_size;	/* Output ring size */
+	__be32 outring_size;	/* ORSx - Output ring size */
 	__be32 rsvd5;
-	__be32 outring_rmvd;	/* Output ring jobs removed */
+	__be32 outring_rmvd;	/* ORJRx - Output ring jobs removed */
 	__be32 rsvd6;
-	__be32 outring_used;	/* Output ring slots full */
+	__be32 outring_used;	/* ORSFx - Output ring slots full */
 
 	/* Status/Configuration */
 	__be32 rsvd7;
-	__be32 jqoutstatus;	/* JobQ output status */
+	__be32 jqoutstatus;	/* JQSTAx - JobQ output status */
 	__be32 rsvd8;
-	__be32 jqintstatus;	/* JobQ interrupt status */
-	__be32 qconfig_hi;	/* Queue configuration */
+	__be32 jqintstatus;	/* JQINTx - JobQ interrupt status */
+	__be32 qconfig_hi;	/* JQxCFG - Queue configuration */
 	__be32 qconfig_lo;
 
 	/* Indices. CAAM maintains as "heads" of each queue */
 	__be32 rsvd9;
-	__be32 inp_rdidx;	/* Input ring read index */
+	__be32 inp_rdidx;	/* IRRIx - Input ring read index */
 	__be32 rsvd10;
-	__be32 out_wtidx;	/* Output ring write index */
+	__be32 out_wtidx;	/* ORWIx - Output ring write index */
 
 	/* Command/control */
 	__be32 rsvd11;
-	__be32 jqcommand;	/* JobQ command */
+	__be32 jqcommand;	/* JQCRx - JobQ command */
 
-	__be32 rsvd12[128];
+	__be32 rsvd12[932];
 
-	/* Secure Memory Access Configuration */
-	__be32 rsvd13;
-	__be32 smemcmd;         /* Secure Memory Command */
-	__be32 rsvd14;
-	__be32 smemstatus;      /* Secure Memory Command Status */
-	struct caam_mstraccess access[16]; /* SM Partition Access Perms */
-
-	__be32 rsvd15[800];
+	/* Performance Monitor                                  f00-fff */
+	struct caam_perfmon perfmon;
 };
 
 #define JQ_RINGSIZE_MASK	0x03ff
@@ -485,23 +484,22 @@ struct rtic_memhash {
 struct caam_assurance {
     /* Status/Command/Watchdog */
 	__be32 rsvd1;
-	__be32 status;		/* RTIC Status                     */
+	__be32 status;		/* RSTA - Status */
 	__be32 rsvd2;
-	__be32 cmd;		/* RTIC Command                    */
+	__be32 cmd;		/* RCMD - Command */
 	__be32 rsvd3;
-	__be32 ctrl;		/* RTIC Control                    */
+	__be32 ctrl;		/* RCTL - Control */
 	__be32 rsvd4;
-	__be32 throttle;	/* RTIC Throttle                   */
-	__be32 rsvd5;
-	__be64 watchdog;	/* RTIC Watchdog Timer             */
+	__be32 throttle;	/* RTHR - Throttle */
+	__be32 rsvd5[2];
+	__be64 watchdog;	/* RWDOG - Watchdog Timer */
 	__be32 rsvd6;
-	__be32 rend;		/* Endian corrections */
+	__be32 rend;		/* REND - Endian corrections */
 	__be32 rsvd7[50];
 
 	/* Block access/configuration @ 100/110/120/130 */
-	struct rtic_block memblk[4];	/* RTIC Memory Blocks A-D */
+	struct rtic_block memblk[4];	/* Memory Blocks A-D */
 	__be32 rsvd8[32];
-
 	/* Block hashes @ 200/300/400/500 */
 	struct rtic_memhash hash[4];	/* Block hash values A-D */
 	__be32 rsvd_3[640];
@@ -558,6 +556,14 @@ struct caam_queue_if {
 #define QISTA_CFWRERR   0x20              /* Compound Frame Write Err  */
 #define QISTA_STOPD     0x80000000        /* QI Stopped (see QICTL)    */
 
+/* deco_sg_table - DECO view of scatter/gather table */
+ struct deco_sg_table {
+	__be64 addr;	/* Segment Address */
+	__be32 elen;	/* E, F bits + 30-bit length */
+	__be16 bpid;	/* Buffer Pool ID */
+	__be16 len;	/* 16-bit length */
+};
+
 /*
  * caam_deco - descriptor controller - CHA cluster block
  *
@@ -569,66 +575,76 @@ struct caam_queue_if {
  */
 struct caam_deco {
 	__be32 rsvd1;
-	__be32 cls1_mode;	/* Class 1 Mode */
+	__be32 cls1_mode;	/* CxC1MR -  Class 1 Mode */
 	__be32 rsvd2;
-	__be32 cls1_keysize;	/* Class 1 Key Size */
-	__be32 cls1_datasize_hi;	/* Class 1 Data Size */
+	__be32 cls1_keysize;	/* CxC1KSR - Class 1 Key Size */
+	__be32 cls1_datasize_hi;	/* CxC1DSR - Class 1 Data Size */
 	__be32 cls1_datasize_lo;
 	__be32 rsvd3;
-	__be32 cls1_icvsize;	/* Class 1 ICV size */
+	__be32 cls1_icvsize;	/* CxC1ICVSR - Class 1 ICV size */
 	__be32 rsvd4[5];
-	__be32 cha_ctrl;	/* CHA control */
+	__be32 cha_ctrl;	/* CCTLR - CHA control */
 	__be32 rsvd5;
-	__be32 irq_crtl;	/* CCB interrupt done/error/clear */
+	__be32 irq_crtl;	/* CxCIRQ - CCB interrupt done/error/clear */
 	__be32 rsvd6;
-	__be32 clr_written;	/* Clear-Written */
-	__be32 ccb_status_hi;	/* CCB Status */
+	__be32 clr_written;	/* CxCWR - Clear-Written */
+	__be32 ccb_status_hi;	/* CxCSTA - CCB Status/Error */
 	__be32 ccb_status_lo;
 	__be32 rsvd7[3];
-	__be32 aad_size;	/* Current AAD Size */
+	__be32 aad_size;	/* CxAADSZR - Current AAD Size */
 	__be32 rsvd8;
-	__be32 cls1_iv_size;	/* Current Class 1 IV Size */
+	__be32 cls1_iv_size;	/* CxC1IVSZR - Current Class 1 IV Size */
 	__be32 rsvd9[7];
-	__be32 pkha_a_size;	/* Size of PKHA A */
+	__be32 pkha_a_size;	/* PKASZRx - Size of PKHA A */
 	__be32 rsvd10;
-	__be32 pkha_b_size;	/* Size of PKHA B */
+	__be32 pkha_b_size;	/* PKBSZRx - Size of PKHA B */
 	__be32 rsvd11;
-	__be32 pkha_n_size;	/* Size of PKHA N */
+	__be32 pkha_n_size;	/* PKNSZRx - Size of PKHA N */
 	__be32 rsvd12;
-	__be32 pkha_e_size;	/* Size of PKHA E */
+	__be32 pkha_e_size;	/* PKESZRx - Size of PKHA E */
 	__be32 rsvd13[24];
-	__be32 cls1_ctx[16];	/* Class 1 Context @100 */
+	__be32 cls1_ctx[16];	/* CxC1CTXR - Class 1 Context @100 */
 	__be32 rsvd14[48];
-	__be32 cls1_key[8];	/* Class 1 Key @200 */
+	__be32 cls1_key[8];	/* CxC1KEYR - Class 1 Key @200 */
 	__be32 rsvd15[121];
-	__be32 cls2_mode;	/* Class 2 Mode */
+	__be32 cls2_mode;	/* CxC2MR - Class 2 Mode */
 	__be32 rsvd16;
-	__be32 cls2_keysize;	/* Class 2 Key Size */
-	__be32 cls2_datasize_hi;	/* Class 2 Data Size */
+	__be32 cls2_keysize;	/* CxX2KSR - Class 2 Key Size */
+	__be32 cls2_datasize_hi;	/* CxC2DSR - Class 2 Data Size */
 	__be32 cls2_datasize_lo;
 	__be32 rsvd17;
-	__be32 cls2_icvsize;	/* Class 2 ICV Size */
+	__be32 cls2_icvsize;	/* CxC2ICVSZR - Class 2 ICV Size */
 	__be32 rsvd18[56];
-	__be32 cls2_ctx[18];	/* Class 2 Context @500 */
+	__be32 cls2_ctx[18];	/* CxC2CTXR - Class 2 Context @500 */
 	__be32 rsvd19[46];
-	__be32 cls2_key[32];	/* Class2 Key @600 */
+	__be32 cls2_key[32];	/* CxC2KEYR - Class2 Key @600 */
 	__be32 rsvd20[84];
-	__be32 inp_infofifo;	/* Input Info FIFO @7d0 */
-	__be32 rsvd21[3];
-	__be32 inp_datafifo;	/* Input Data FIFO */
-	__be32 rsvd22[3];
-	__be64 out_datafifo;	/* Output Data FIFO */
+	__be32 inp_infofifo_hi;	/* CxIFIFO - Input Info FIFO @7d0 */
+	__be32 inp_infofifo_lo;
+	__be32 rsvd21[2];
+	__be64 inp_datafifo;	/* CxDFIFO - Input Data FIFO */
+	__be32 rsvd22[2];
+	__be64 out_datafifo;	/* CxOFIFO - Output Data FIFO */
 	__be32 rsvd23[2];
-	__be32 jq_ctl_hi;	/* JobQ Control Register      @800 */
+	__be32 jq_ctl_hi;	/* CxJQR - JobQ Control Register      @800 */
 	__be32 jq_ctl_lo;
-	__be64 jq_descaddr;	/* JobQ Descriptor Address */
-	__be32 op_status_hi;	/* DECO Operation Status */
+	__be64 jq_descaddr;	/* CxDADR - JobQ Descriptor Address */
+	__be32 op_status_hi;	/* DxOPSTA - DECO Operation Status */
 	__be32 op_status_lo;
-	__be32 rsvd24[10];
-	__be64 math[4];		/* Math register */
-	__be32 rsvd25[104];
-	__be32 descbuf[64];	/* Descriptor buffer */
-	__be32 rsvd26[320];
+	__be32 rsvd24[2];
+	__be16 ns_liodn;	/* DxLSR - DECO LIODN Status - non-seq */
+	__be16 sq_liodn;	/* DxLSR - DECO LIODN Status - seq */
+	__be16 rsvd25;
+	__be16 td_liodn;	/* DxLSR - DECO LIODN Status - trustdesc */
+	__be32 rsvd26[6];
+	__be64 math[4];		/* DxMTH - Math register */
+	__be32 rsvd27[8];
+	struct deco_sg_table gthr_tbl[4];	/* DxGTR - Gather Tables */
+	__be32 rsvd28[16];
+	struct deco_sg_table sctr_tbl[4];	/* DxSTR - Scatter Tables */
+	__be32 rsvd29[48];
+	__be32 descbuf[64];	/* DxDESB - Descriptor buffer */
+	__be32 rsvd30[320];
 };
 
 /*
-- 
1.6.5.2

