From e11f2d87927d85dc0a0f3f392b1f766e19fea0c8 Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Wed, 12 Aug 2009 13:48:33 -0500
Subject: [PATCH 027/252] P4080/DPA: Search for the buffer page only if the BP is partition private

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
[Cleanly applied the FSL SDK 2.0.3 patch:
"P4080-kernel-2.6.30-P4080-DPA-Search-for-the-buffer-page-o.patch"]
Integrated-by: Yuri Nedel <Yuri.Nedel@windriver.com>
---
 drivers/net/dpa/dpa.c |   21 +++++++++++----------
 1 files changed, 11 insertions(+), 10 deletions(-)

diff --git a/drivers/net/dpa/dpa.c b/drivers/net/dpa/dpa.c
index b3c3d10..0ea92e5 100644
--- a/drivers/net/dpa/dpa.c
+++ b/drivers/net/dpa/dpa.c
@@ -607,7 +607,7 @@ dpa_fd_release(const struct net_device *net_dev, const struct qm_fd *fd)
 #ifdef CONFIG_DPA_RX_0_COPY
 		struct page **pageptr;
 		struct page *page = NULL;
-		
+
 		if (_dpa_bp->kernel_pool) {
 			unsigned long flags;
 			spin_lock_irqsave(&_dpa_bp->lock, flags);
@@ -1321,19 +1321,20 @@ static void __hot dpa_rx(struct work_struct *fd_work)
 		BUG_ON(IS_ERR(dpa_bp));
 
 #ifdef CONFIG_DPA_RX_0_COPY
-		spin_lock_irqsave(&dpa_bp->lock, flags);
-		pageptr = dpa_find_rxpage(dpa_bp, bmb->lo);
+		if (dpa_bp->kernel_pool) {
+			spin_lock_irqsave(&dpa_bp->lock, flags);
+			pageptr = dpa_find_rxpage(dpa_bp, bmb->lo);
 
-		if (!pageptr)
-			cpu_pr_emerg("Aaaaaaah, no page for addr %x in pool %d!\n", bmb->lo, bmb->bpid);
+			if (!pageptr)
+				cpu_pr_emerg("Aaaaaaah, no page for addr %x in pool %d!\n",
+					     bmb->lo, bmb->bpid);
 
-		page = *pageptr;
-		*pageptr = NULL;
+			page = *pageptr;
+			*pageptr = NULL;
 
-		dpa_bp->bp_refill_pending++;
-		spin_unlock_irqrestore(&dpa_bp->lock, flags);
+			dpa_bp->bp_refill_pending++;
+			spin_unlock_irqrestore(&dpa_bp->lock, flags);
 
-		if (dpa_bp->kernel_pool) {
 			head = sizeof(*bmb) + NET_IP_ALIGN;
 			size = ETH_HLEN + NN_ALLOCATED_SPACE(net_dev) + TT_ALLOCATED_SPACE(net_dev);
 		} else
-- 
1.6.5.2

