From 67d8cd209476d95ebe44802bbcd3509e7a66a4bd Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 13 Sep 2011 17:59:15 +0800
Subject: [PATCH] PPC_BOOK3E/KGDB: support kgdb kernel space

For PPC_BOOK3E current debug exception can't support kgdb kernel
space since we can't quite save properly an interrupted kernel
state yet. So we have to initial specific dbg_kstack to avoid
overwriting other thing.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/include/asm/pgtable.h   |    6 ++++++
 arch/powerpc/kernel/exceptions-64e.S |    4 ++++
 arch/powerpc/kernel/head_64.S        |    7 +++++++
 arch/powerpc/kernel/paca.c           |    1 +
 4 files changed, 18 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/include/asm/pgtable.h b/arch/powerpc/include/asm/pgtable.h
index 17b13ef..efaef52 100644
--- a/arch/powerpc/include/asm/pgtable.h
+++ b/arch/powerpc/include/asm/pgtable.h
@@ -196,6 +196,12 @@ extern unsigned long empty_zero_page[];
 #define ZERO_PAGE(vaddr) (virt_to_page(empty_zero_page))
 
 extern pgd_t swapper_pg_dir[];
+#ifdef CONFIG_PPC_BOOK3E
+typedef struct {
+	unsigned long dgg;
+} dbg_t;
+extern dbg_t debug_kstack[];
+#endif
 
 extern void paging_init(void);
 
diff --git a/arch/powerpc/kernel/exceptions-64e.S b/arch/powerpc/kernel/exceptions-64e.S
index d19acde..5eaa795 100644
--- a/arch/powerpc/kernel/exceptions-64e.S
+++ b/arch/powerpc/kernel/exceptions-64e.S
@@ -490,11 +490,15 @@ kernel_dbg_exc:
 	rfdi
 
 	/* Normal debug exception */
+#ifndef CONFIG_PPC_BOOK3E
 	/* XXX We only handle coming from userspace for now since we can't
 	 *     quite save properly an interrupted kernel state yet
 	 */
 1:	andi.	r14,r11,MSR_PR;		/* check for userspace again */
 	beq	kernel_dbg_exc;		/* if from kernel mode */
+#else
+1:
+#endif
 
 	/* Now we mash up things to make it look like we are coming on a
 	 * normal exception
diff --git a/arch/powerpc/kernel/head_64.S b/arch/powerpc/kernel/head_64.S
index b5b9e9e..49aa8c5 100644
--- a/arch/powerpc/kernel/head_64.S
+++ b/arch/powerpc/kernel/head_64.S
@@ -784,3 +784,10 @@ empty_zero_page:
 	.globl	swapper_pg_dir
 swapper_pg_dir:
 	.space	PGD_TABLE_SIZE
+
+#ifdef CONFIG_PPC_BOOK3E
+	.align	PAGE_SHIFT
+	.globl	debug_kstack
+debug_kstack:
+	.space	INT_FRAME_SIZE
+#endif
diff --git a/arch/powerpc/kernel/paca.c b/arch/powerpc/kernel/paca.c
index 8f492ff..2877f56 100644
--- a/arch/powerpc/kernel/paca.c
+++ b/arch/powerpc/kernel/paca.c
@@ -91,6 +91,7 @@ void __init initialise_paca(struct paca_struct *new_paca, int cpu)
 	new_paca->lppaca_ptr = &lppaca[cpu];
 #else
 	new_paca->kernel_pgd = swapper_pg_dir;
+	new_paca->dbg_kstack = debug_kstack;
 #endif
 	new_paca->lock_token = 0x8000;
 	new_paca->paca_index = cpu;
-- 
1.7.0.2

