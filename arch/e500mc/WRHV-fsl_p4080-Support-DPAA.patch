From 610604d612e96aed6373ed5277f704675398ac64 Mon Sep 17 00:00:00 2001
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Wed, 29 Jun 2011 17:29:13 +0800
Subject: [PATCH 203/233] WRHV/fsl_p4080: Support DPAA

Add necessary firmware binary for WRHV since we cannot access that
from flash now, replace DMA map page as WRHV expect, and manually
set the properties in DTS which are set automatically by u-boot
in native linux.

Signe-off-by: Kexin Hao <kexin.hao@windriverr.com>
Signe-off-by: Tiejun Chen <tiejun.chen@windriver.com>
[rebase it onto QorIQ-DPAA-SDK-V1-20110609-systembuilder.iso]
Signed-off-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 arch/powerpc/boot/dts/wrhv_p4080ds.dts             |   14 ++++++--
 .../NetCommSw/src/wrappers/Peripherals/FM/Makefile |    2 +-
 .../src/wrappers/Peripherals/FM/firmware.S         |    4 ++
 .../Peripherals/FM/fsl_fman_ucode_p4080_91_1.bin   |  Bin 0 -> 6576 bytes
 .../src/wrappers/Peripherals/FM/lnxwrp_fm.c        |   20 ++++++++++++-
 drivers/net/dpa/dpaa_eth.c                         |   31 +++++++++++++++----
 6 files changed, 58 insertions(+), 13 deletions(-)
 create mode 100644 drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/firmware.S
 create mode 100644 drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/fsl_fman_ucode_p4080_91_1.bin

diff --git a/arch/powerpc/boot/dts/wrhv_p4080ds.dts b/arch/powerpc/boot/dts/wrhv_p4080ds.dts
index b106bf6..4e8c2b0 100644
--- a/arch/powerpc/boot/dts/wrhv_p4080ds.dts
+++ b/arch/powerpc/boot/dts/wrhv_p4080ds.dts
@@ -1146,7 +1146,7 @@
 			compatible = "fsl,p4080-fman", "fsl,fman", "simple-bus";
 			ranges = <0 0x400000 0x100000>;
 			reg = <0x400000 0x100000>;
-			clock-frequency = <0>;
+			clock-frequency = <0xee6a8be>;
 			interrupts = <96 2>;
 			interrupt-parent = <&mpic>;
 
@@ -1289,6 +1289,7 @@
 				compatible = "fsl,p4080-fman-1g-mac", "fsl,fman-1g-mac";
 				reg = <0xe0000 0x1000>;
 				fsl,port-handles = <&fman0_rx0 &fman0_tx0>;
+				local-mac-address = [ 00 01 02 03 04 05 ];
 				tbi-handle = <&tbi0>;
 				phy-handle = <&phy0>;
 				phy-connection-type = "sgmii";
@@ -1390,6 +1391,7 @@
 				compatible = "fsl,p4080-fman-1g-mac", "fsl,fman-1g-mac";
 				reg = <0xe2000 0x1000>;
 				fsl,port-handles = <&fman0_rx1 &fman0_tx1>;
+				local-mac-address = [ 00 01 02 03 04 06 ];
 				tbi-handle = <&tbi1>;
 				phy-handle = <&phy1>;
 				phy-connection-type = "sgmii";
@@ -1413,6 +1415,7 @@
 				compatible = "fsl,p4080-fman-1g-mac", "fsl,fman-1g-mac";
 				reg = <0xe4000 0x1000>;
 				fsl,port-handles = <&fman0_rx2 &fman0_tx2>;
+				local-mac-address = [ 00 01 02 03 04 07 ];
 				tbi-handle = <&tbi2>;
 				phy-handle = <&phy2>;
 				phy-connection-type = "sgmii";
@@ -1436,6 +1439,7 @@
 				compatible = "fsl,p4080-fman-1g-mac", "fsl,fman-1g-mac";
 				reg = <0xe6000 0x1000>;
 				fsl,port-handles = <&fman0_rx3 &fman0_tx3>;
+				local-mac-address = [ 00 01 02 03 04 08 ];
 				tbi-handle = <&tbi3>;
 				phy-handle = <&phy3>;
 				phy-connection-type = "sgmii";
@@ -1458,6 +1462,7 @@
 				compatible = "fsl,p4080-fman-10g-mac", "fsl,fman-10g-mac";
 				reg = <0xf0000 0x1000>;
 				fsl,port-handles = <&fman0_rx4 &fman0_tx4>;
+				local-mac-address = [ 00 01 02 03 04 09 ];
 				phy-handle = <&phy10>;
 				phy-connection-type = "xgmii";
 			};
@@ -1504,7 +1509,7 @@
 			compatible = "fsl,p4080-fman", "fsl,fman", "simple-bus";
 			ranges = <0 0x500000 0x100000>;
 			reg = <0x500000 0x100000>;
-			clock-frequency = <0>;
+			clock-frequency = <0xee6a8be>;
 			interrupts = <97 2>;
 			interrupt-parent = <&mpic>;
 
@@ -1647,9 +1652,10 @@
 				compatible = "fsl,p4080-fman-1g-mac", "fsl,fman-1g-mac";
 				reg = <0xe0000 0x1000>;
 				fsl,port-handles = <&fman1_rx0 &fman1_tx0>;
+				local-mac-address = [ 00 01 02 03 04 0a ];
 				tbi-handle = <&tbi5>;
-				phy-handle = <&phy5>;
-				phy-connection-type = "sgmii";
+				phy-handle = <&phyrgmii>;
+				phy-connection-type = "rgmii";
 			};
 			mdio@e1120 {
 				#address-cells = <1>;
diff --git a/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/Makefile b/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/Makefile
index 4cbf247..ef3d463 100644
--- a/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/Makefile
+++ b/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/Makefile
@@ -12,5 +12,5 @@ EXTRA_CFLAGS += -I$(NET_DPA)
 obj-y		+= fsl-ncsw-PFM.o
 obj-$(CONFIG_FSL_FMAN_TEST)	+= fman_test.o
 
-fsl-ncsw-PFM-objs	:=   lnxwrp_fm.o lnxwrp_fm_ioctls.o
+fsl-ncsw-PFM-objs	:=   lnxwrp_fm.o lnxwrp_fm_ioctls.o firmware.o
 obj-$(CONFIG_COMPAT)     +=   lnxwrp_fm_compat_ioctls.o
diff --git a/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/firmware.S b/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/firmware.S
new file mode 100644
index 0000000..d372e63
--- /dev/null
+++ b/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/firmware.S
@@ -0,0 +1,4 @@
+	.section .firmware,"a"
+	.globl p4080_fman_firmware
+p4080_fman_firmware:
+	.incbin "../linux/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/fsl_fman_ucode_p4080_91_1.bin"
diff --git a/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/fsl_fman_ucode_p4080_91_1.bin b/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/fsl_fman_ucode_p4080_91_1.bin
new file mode 100644
index 0000000000000000000000000000000000000000..b3cbcec31ce5ec50bf82c36c2442f3a534214532
GIT binary patch
literal 6576
zcmcIo4QyLi6+Z91o0n@ROP?J#b;ycenzT)SC@I?{S6zr5Ct2II*#;C!w`!q3qNswc
z7%8sQuxt|u#1NIXK~*+wXqzU1CJmMiBU*5N+Ld$&(~at7?;(<=>jdWK1w6@F)|u~K
z+o{*Ou!&*y_W7Of-gD3YISx_d^LO<0D!1R*9&R^#zx;)-m|y<Vp0D1s=bpX$=>30`
zMXvJxcNcg5k9Ypp`^=%z7JVJQW$#o9GX6YIb#x~wcsA$p!825RexmTyeq4Ae&lR3*
zKs*nrIXc9!bS#eL#j3@s!!oe^SOKgCtRU7$u&&4YXpRQ%%c)oz7Q@ni79w_ta?}>e
zQNr_%KS6VJobq`)l{zsqLbZP$X-~v=*U$iwvMxlb*po?-a_^L)tm`bi7x#T_W|W4+
z-gTjTPV8fp4(fq)yWWrv>x{S_B(leSCys|nfA}K#hJ&Q&EX7~Q=jZicijD`d$4DE)
zJ4l`PwbI&lQ_3WC7N3S-+E^RDOq&l(k<O=R+osdB?rvq5xU;ac@P854i}?1d@WoTa
zaDHpy{I;v{3&hwI^>s`BJy+uw%khq@@P_k(zh2~j)75y9|G4D;v8(YS{{p`JYFx^1
zY&|W{FRh5PDW#7|d~rpbPkFX-iC=dOytc@{suB+S*KU*d)1^wdw4aop-l~WT`^fw0
zZ<X-OI4yGTiUo75w|!G#-%M%We8UtKabAYo3-}V)mrtn$`_msv^iqt>FOmMC;{Ct9
z2F?ol)5&Y#yojHugu_0pXrC7=;gGNBKYFerzTiK4rXs%JKYIKcc+r3KXeGSNf8VWy
zm-+7-74ggd8?1y^@L#;NPuRbL{|;Qn5&sMMN&8Cl%l?yi$-ld<fm6{x+pommxGPWd
zf%9~F$N5rhZ7ttZz%P{J-B;rm%ki7b@!#!@jaaw6nv1`&Hb6XK&a(?QTbs@&UdYqx
z(>u1bUx|a>c7~rnyr3WUm&vxgoVVB`_zB)+d#*3vBl3gT6wjO?<FBoxq!T-|7xM2u
zA!@NaU%;!cz<*G}i}_Yv;wfY<(qtd7Hm9zr>+c?U_~N@i91gzw9X*&Pc3s+FN}9WO
z)swqTBfpZiSlxc+?yRAJn!fN<Ub)fjd(i8r^jWu0Blq?i0&R)Avz{C?7as1UDnWlL
zPk(o})e!olt}5xXc)uj*e!AD|9~z>}NIOlVR~@FDg1*%;o6@v+e+^~ENO5<9FV4Ds
z^@7i^UrWCxWK${q8mmnkznmhEyYs-2Op1Zueggm3{(=5B8Kp4%p+UCS{Gt8C>iU`P
z-Oq9Eb<iBpR7U;eMr?7$%8V-HEaS=NL)3u2cR}dwSFlG(*Q)A%nvHtu?2(~evm;(U
zIm#2j<hg9LMww7@k%QCM(e~9uQr@k?4)i%8GkWZLVSg38+^AO(JP+hA$-Uy<tfZwa
ze0Kyd*w|5<)6Vfu3W9d7NIM7GIncb%=ILX?_W{UQcGu0tyL{p<ciRC&=qL1s9L+*+
zv0vzpUVT#NpBW*t4)}Ax8?6a%67*k-J;JtvFH^_>wu7l0{>D3zkr^denV5<p=$HNE
znI5IvXCpOQCe?1*BgWu#ifXMWC1z4XB>cCw(~$i?Gon3Yry`f!sE^~h^sq8lWsmd^
zT3tL5-%~^7?*m_`p#+=9oH4Y^X{N;S&iq^Ucx3R+RQ?^|(<ky-Qmg1JVuLv?ZMox^
zf3iI-%#E!f3@m5;Rdi0(D9sd3_Q_=@tk@ml3HElxjoPF$gWOmRS^GRWdu;Ael^fg|
zU!Qc^wuF-*^0|>UN1V;ku(QQHwBXYfZDjTEoUR*`?XFSWSp8*xuK+*z3~_dyU!in%
zOIa-7oU^J6@)L5Fs{A2Ji@jD%#15sU9+0=7hbi<>-B^pz;hd@$<sV-*X!UN&O=xf9
z9-G|WCaHs}7~DQJ_o%h6F(>73jwB%eA~(`<#M#7i&gS5T3Cx5Cr>bbXZj#kaiEK<$
zgbqT6%NQ3qS(V+amC;PZY`#szk?^-0ZK@M~R__ne&;OLq%kzkLKi)+g{CbFZ<rs*(
zCk9lNy!MDW2)m|mj$2*9gz)c+_mRgjdAMXJ%%<c-jIa}<u#gk-sW?Lgdl_fdZ$M_q
z0Uy`GPF`n4V{$k|)q<xJX%AaCXQ#}?!sg<<6Kj|6@_VZi7V+Z8kP4iMyZqoM=3&WS
z@Km`4TOm$)hoAWC*)9z=DHw1g^@?ip*OQ&ZCNRIlHi}>6uZweqoM|DZnFealBBq#}
z)Zo)@tf_ypi=<4DPepEoky9%IWMY;Uc~*nG;)d$sM>D74bCo#LP(wD~ApM+q89BOd
zePSAzHNGM2#t;M1rpG?j3fpV^v0pt%ED++gYda${&s5Fe?&cQ5X>BaoQ}c)TQ9t8H
zpUo@vqHYxHvIZZ&Dt!EGKL2|`7xJ*Wv_W+5({5i)zpx=zhZWUwnUpr<M!v+!Odmr{
z_b^}j5%)IqguW(n??7$d*&^!9X<<+JYtdmsey937tZft?=+`LWo2TPG5_i5S>ytQB
zI$t>Z3vpI86DsokO_dV#Rzw{_oq9~l6VVI<atZpchR{>)Ku_qCHTIjL*MP5_y-GSr
zdHd@74{LK(Zp6dwF~|bjUm?p|LKewi$OBy#bnen}xJ#8XLO#?*E@A{ae$NP{j}09B
zHfo+Wgcve}UH*f<Ke>j!gJt^8egJ*96!kqQ_?E|zh#i#~Uc^AHv$x=X*hT)1gWQk!
zHGZ_r_b-X_@cnSf_oY~TWh63fk3=4y9P@?U$i^pUPNF}LYTr7n!<Jo*s5||rsYWus
zx1J8GIVCfO-aSUO_UK5*<Ty{VZ-!-lIxFUq$Y~w%c_i>am}bZ8wfOEP5g#5&Q`;py
zlTx+GaSF%#n-+e<#@|?_TtlC6Avg5tze1k}iuw!*ee6`UV`fatPj&}$qTfu8QO=ES
ze3CKFr9P>mJ|Z?w6=Ea4M?*h1j;hE_)HuVDy+_t=<d9kGSIk;Q#u0XZQNO}`;|bvX
zup;M{rQ$cXkbOmG{@8%R#oq<gz))D$u9EE$Ga7OobFukIKrtVoD)U(8ltOBap*p>*
z6HE&d>NKD5%%fM?<Q&+Y`00IAXGK>hvs;^#2`!g8II|RW{dRJ<Hc{pzYQz`O2TrX@
zHsGA!W2m^pYlO^W*;}vJA8S(lAw#u#f=NR)j|rLJqgtoUD`qwCE2kqrg7243j#3iw
z{jDqWC%#*gx}a!1O&UF;R`a87B-StL4eH`2Grz%*5Td6sI}pAr3qALiCShA|=9H*s
zjS2Luu(Q%5dS0Cq4JWh9>LbsGNXJYPInasOh(!oGtTq&SCfik`7%Dv@=PS@*(^k>{
zoalyJcIC#xxv}@0yWW6o_RHojC$=FedX7;IKDT^Ynb6-(S(|u5^udFF*)H!<TMaLC
zU*xoYK0J&*lD!rEUCj+0Jiiz==0XlG_z8Wp-Sz0-W=_19aCdXTCNdZAszDLss12k!
zrXlzR#tAy3pScl@J&|WZeukxEaV#(9<>g|&!gmkidS&sujybPM#4_j_=(-!l45p-w
znG}6yZ8OPwFZ+ce`<N0?P$A3yrc;myXBhq|#NBR<>u5sY!yE9_Ra4Y#wLvZPzw)!C
z`R_e<RdJRX^U-XNq1oqCkHg=GMBX1?PSMP$?;XqtwefxRG_boKl@s;8iyCK78fF0V
zBW6f~@2lM|o3blzsD{0(As3$+&AXUsl*w)*IXN0k21Ng>0)0H>3Rx$6O!V$2m*O`j
zS$mX(HQF3Lc=0CM-YVyobLhdsKOW$V2lg~kLdV=V>KnA8s}cdd%|QQUZdbkHEHjfY
z-j~l6<=FEf%P}nUpFJ6jNE_^_CsxgQQMN^x??U$78%{W}_2DyYj_g~SbC41Js5y}t
z_YtdVGwf5o6Vv0EoqL<Z@qH~MWnMX#LofU%(_r_KeZjlTzTcl6`@h=v>&Qz5_2HB7
z@rnf*;Nvp8^ABM6kAKK^|7_+I?B26FKYfa7#jJ!_s6+0--m5yCh?zWtJhpp$3HxQ^
zgcUWC+3pqtf4}Tts$p0$*m^f?ealA0Sw5G5t^b9PWbytRL@sthcNH<-f!I=^|MGJE
zWy~S=K7j5^K4jgO{J(S;^DOd&zob%VwyUW#Gpdq3W?T}nE&9HUKm0x$W>h6GK`+r}
zyM2r7(V@p-_Y`6zZ;uAwVLE4L(6bQxk=b4!Xab+3KmIA0oQ$>QWbTg{(pPipjb;G*
z(WepfbR^kID+Pb#&_klu#P=5ZowWZL8S-9{^Cx9Kg#)^2Aa|JCvj#qG#BYm*oWJcu
zw*SX7WBEK{?xD%<#^m(NkP$sy#-Ggh^@C1qRUzMdo0InGf_&MYH3noIWXv?Iu2qTn
z-ZkWIiYbLz3Gs(o8Q;CJWdDW_R5vwIPf<4+>SoL+)J?>wwU6){(MZa=xr`V3_gde`
FzX7Q^O)3BY

literal 0
HcmV?d00001

diff --git a/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/lnxwrp_fm.c b/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/lnxwrp_fm.c
index 2bd8738..13bd31b 100644
--- a/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/lnxwrp_fm.c
+++ b/drivers/net/dpa/NetCommSw/src/wrappers/Peripherals/FM/lnxwrp_fm.c
@@ -1309,11 +1309,15 @@ __setup("fman_ucode=", FmanUcodeAddrParam);
  * If we have an older U-Boot, then we assume that the firmware is located in
  * flash at physical address 'P4080_UCAddr'
  */
+#ifdef	CONFIG_PPC85xx_VT_MODE
+extern struct qe_firmware p4080_fman_firmware;
+#endif
 static const struct qe_firmware *FindFmanMicrocode(void)
 {
     static const struct qe_firmware *P4080_UCPatch;
     struct device_node *np;
-#ifdef FMAN_READ_MICROCODE_FROM_NOR_FLASH
+#if defined(FMAN_READ_MICROCODE_FROM_NOR_FLASH)\
+	|| defined(CONFIG_PPC85xx_VT_MODE)
     unsigned long P4080_UCSize;
     const struct qe_header *hdr;
 #endif
@@ -1331,6 +1335,19 @@ static const struct qe_firmware *FindFmanMicrocode(void)
 		    REPORT_ERROR(WARNING, E_NOT_FOUND, ("firmware node is incomplete"));
     }
 
+#ifdef CONFIG_PPC85xx_VT_MODE
+    P4080_UCPatch = &p4080_fman_firmware;
+    /* Make sure it really is a QE Firmware blob */
+    hdr = &P4080_UCPatch->header;
+    if (!hdr ||
+        (hdr->magic[0] != 'Q') || (hdr->magic[1] != 'E') ||
+        (hdr->magic[2] != 'F')) {
+        REPORT_ERROR(MAJOR, E_NOT_FOUND, ("data at %llx is not a Fman microcode", (u64) P4080_UCAddr));
+        return NULL;
+    }
+
+    P4080_UCSize = sizeof(u32) * P4080_UCPatch->microcode[0].count;
+#else
 #ifdef FMAN_READ_MICROCODE_FROM_NOR_FLASH
     /* If not, then we have a legacy U-Boot.  The firmware is in flash. */
     /* Only map enough to the get the core structure */
@@ -1363,6 +1380,7 @@ static const struct qe_firmware *FindFmanMicrocode(void)
     /* Returning NULL here forces the reuse of the IRAM content */
     P4080_UCPatch = NULL;
 #endif /* FMAN_READ_MICROCODE_FROM_NOR_FLASH */
+#endif /* CONFIG_PPC85xx_VT_MODE */
     return P4080_UCPatch;
 }
 
diff --git a/drivers/net/dpa/dpaa_eth.c b/drivers/net/dpa/dpaa_eth.c
index a3240d8..03ff091 100644
--- a/drivers/net/dpa/dpaa_eth.c
+++ b/drivers/net/dpa/dpaa_eth.c
@@ -61,6 +61,10 @@
 #include "dpaa_eth.h"
 #include "dpaa_1588.h"
 
+#ifdef CONFIG_PPC85xx_VT_MODE
+#include <vbi/vbi.h>
+#endif
+
 #define ARRAY2_SIZE(arr)	(ARRAY_SIZE(arr) * ARRAY_SIZE((arr)[0]))
 
 #define DPA_NETIF_FEATURES	(NETIF_F_HW_QDISC)
@@ -167,6 +171,16 @@ struct dpa_fq {
 	 FM_PORT_FRM_ERR_ILL_PLCR | FM_PORT_FRM_ERR_PRS_TIMEOUT	| \
 	 FM_PORT_FRM_ERR_PRS_ILL_INSTRUCT | FM_PORT_FRM_ERR_PRS_HDR_ERR)
 
+#ifdef	CONFIG_PPC85xx_VT_MODE
+static u64 guest_phy_offset;
+
+#define dpa_phys_to_virt(addr) 	\
+	__va(addr - guest_phy_offset)
+#else
+#define	dpa_phys_to_virt(addr)	\
+	phys_to_virt(addr)
+#endif
+
 static struct dpa_bp *dpa_bp_array[64];
 
 static struct dpa_bp *default_pool;
@@ -194,7 +208,7 @@ static void bmb_free(struct dpa_bp *bp, struct bm_buffer *bmb)
 		if (!addr)
 			break;
 
-		skbh = (struct sk_buff **)phys_to_virt(addr);
+		skbh = (struct sk_buff **)dpa_phys_to_virt(addr);
 		skb = *skbh;
 
 		dma_unmap_single(bp->dev, addr, bp->size, DMA_FROM_DEVICE);
@@ -395,7 +409,7 @@ _dpa_bp_free(struct dpa_bp *dpa_bp)
 
 			for (i = 0; i < num; i++) {
 				dma_addr_t addr = bm_buf_addr(&bmb[i]);
-				struct sk_buff **skbh = phys_to_virt(addr);
+				struct sk_buff **skbh = dpa_phys_to_virt(addr);
 				struct sk_buff *skb = *skbh;
 
 				dma_unmap_single(bp->dev, addr, bp->size,
@@ -565,7 +579,7 @@ dpa_fd_release(const struct net_device *net_dev, const struct qm_fd *fd)
 
 	_errno = 0;
 	if (fd->format == qm_fd_sg) {
-		sgt = (phys_to_virt(bm_buf_addr(&_bmb)) + dpa_fd_offset(fd));
+		sgt = (dpa_phys_to_virt(bm_buf_addr(&_bmb)) + dpa_fd_offset(fd));
 
 		i = 0;
 		do {
@@ -806,7 +820,7 @@ static void _dpa_tx_error(struct net_device		*net_dev,
 
 	percpu_priv->stats.tx_errors++;
 
-	skbh = (struct sk_buff **)phys_to_virt(addr);
+	skbh = (struct sk_buff **)dpa_phys_to_virt(addr);
 	skb = *skbh;
 
 	dma_unmap_single(bp->dev, addr, bp->size, DMA_TO_DEVICE);
@@ -825,7 +839,7 @@ static void __hot _dpa_rx(struct net_device *net_dev,
 	struct sk_buff **skbh;
 	dma_addr_t addr = qm_fd_addr(fd);
 
-	skbh = (struct sk_buff **)phys_to_virt(addr);
+	skbh = (struct sk_buff **)dpa_phys_to_virt(addr);
 
 	if (unlikely(fd->status & FM_FD_STAT_ERRORS) != 0) {
 		if (netif_msg_hw(priv) && net_ratelimit())
@@ -975,7 +989,7 @@ static void __hot _dpa_tx(struct net_device		*net_dev,
 		percpu_priv->stats.tx_errors++;
 	}
 
-	skbh = (struct sk_buff **)phys_to_virt(addr);
+	skbh = (struct sk_buff **)dpa_phys_to_virt(addr);
 	skb = *skbh;
 
 #ifdef CONFIG_FSL_DPA_1588
@@ -1550,7 +1564,7 @@ static void egress_ern(struct qman_portal	*portal,
 		(*percpu_priv->dpa_bp_count)--;
 	}
 
-	skbh = (struct sk_buff **)phys_to_virt(addr);
+	skbh = (struct sk_buff **)dpa_phys_to_virt(addr);
 	skb = *skbh;
 
 	dma_unmap_single(bp->dev, addr, bp->size, DMA_TO_DEVICE);
@@ -2766,6 +2780,9 @@ static int __init __cold dpa_load(void)
 	}
 #endif
 
+#ifdef	CONFIG_PPC85xx_VT_MODE
+	vbi_guest_phys_to_phys((void *)virt_to_phys((void *)PAGE_OFFSET), &guest_phy_offset);
+#endif
 	_errno = of_register_platform_driver(&dpa_driver);
 	if (unlikely(_errno < 0)) {
 		cpu_pr_err(KBUILD_MODNAME
-- 
1.7.0.4

