From c0a806b80a40b23efc88970b7e15a6be25145b46 Mon Sep 17 00:00:00 2001
From: Shan Hai <shan.hai@windriver.com>
Date: Wed, 21 Mar 2012 14:49:59 +0800
Subject: [PATCH] drivers/dpaa_eth: delete NETIF_F_HW_QDISC dependencies

Delete depencies on NETIF_F_HW_QDISC which is deleted by reversion of commit
ff64efec275e5f3e269904684a1ca775f737750e (net: Add support for handling
queueing in hardware).

Signed-off-by: Shan Hai <shan.hai@windriver.com>
---
 drivers/net/dpa/dpaa_eth.c |    4 ----
 include/linux/netdevice.h  |    1 -
 net/core/dev.c             |    5 -----
 3 files changed, 0 insertions(+), 10 deletions(-)

diff --git a/drivers/net/dpa/dpaa_eth.c b/drivers/net/dpa/dpaa_eth.c
index 3769ea3..a3da10c 100644
--- a/drivers/net/dpa/dpaa_eth.c
+++ b/drivers/net/dpa/dpaa_eth.c
@@ -67,7 +67,6 @@
 
 #define ARRAY2_SIZE(arr)	(ARRAY_SIZE(arr) * ARRAY_SIZE((arr)[0]))
 
-#define DPA_NETIF_FEATURES	(NETIF_F_HW_QDISC)
 #define DEFAULT_COUNT		64
 #define DEFAULT_BUF_SIZE DPA_BP_SIZE(FSL_FMAN_PHY_MAXFRM);
 #define DPA_MAX_TX_BACKLOG	512
@@ -2317,9 +2316,6 @@ static int dpa_netdev_init(struct device_node *dpa_node,
 	struct dpa_priv_s *priv = netdev_priv(net_dev);
 	struct device *dev = net_dev->dev.parent;
 
-	net_dev->features |= DPA_NETIF_FEATURES;
-	net_dev->vlan_features |= DPA_NETIF_FEATURES;
-
 	if (!priv->mac_dev) {
 		/* Get the MAC address */
 		mac_addr = of_get_mac_address(dpa_node);
diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index 1370dad..88cb591 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -765,7 +765,6 @@ struct net_device {
 #define NETIF_F_SCTP_CSUM	(1 << 25) /* SCTP checksum offload */
 #define NETIF_F_FCOE_MTU	(1 << 26) /* Supports max FCoE MTU, 2158 bytes*/
 #define NETIF_F_NTUPLE		(1 << 27) /* N-tuple filters supported */
-#define NETIF_F_HW_QDISC	(1 << 28) /* Supports hardware Qdisc */
 
 	/* Segmentation offload features */
 #define NETIF_F_GSO_SHIFT	16
diff --git a/net/core/dev.c b/net/core/dev.c
index 28b5559..1cb6004 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -2119,11 +2119,6 @@ int dev_queue_xmit(struct sk_buff *skb)
 			goto out_kfree_skb;
 	}
 
-	if (dev->features & NETIF_F_HW_QDISC) {
-		txq = dev_pick_tx(dev, skb);
-		return dev_hard_start_xmit(skb, dev, txq);
-	}
-
 gso:
 	/* Disable soft irqs for various locks below. Also
 	 * stops preemption for RCU.
-- 
1.7.0.4

