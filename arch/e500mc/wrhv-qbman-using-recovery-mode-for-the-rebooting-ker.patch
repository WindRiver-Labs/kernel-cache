From 69ee66b39f8799eaa5d6fc0b5d9cbc360f389ddc Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Thu, 22 Sep 2011 13:29:45 +0800
Subject: [PATCH] wrhv/qbman: using recovery mode for the rebooting kernel

For GOS when the system reboot there is no real hardware reset
for the devices such as QMAN/BMAN, and there may be some unprocessed
responses in DQRR and MR. So we always enter recovery mode to drain
the DQRR and MR in a rebooting kernel.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/dpa_sys.h     |   22 ++++++++++++++++++++++
 drivers/staging/fsl_qbman/qman_driver.c |    4 +---
 2 files changed, 23 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_qbman/dpa_sys.h b/drivers/staging/fsl_qbman/dpa_sys.h
index 9f8a0a5..6421324 100644
--- a/drivers/staging/fsl_qbman/dpa_sys.h
+++ b/drivers/staging/fsl_qbman/dpa_sys.h
@@ -56,6 +56,9 @@
 #include <sysdev/fsl_soc.h>
 #include <linux/fsl_hypervisor.h>
 #include <linux/vmalloc.h>
+#ifdef CONFIG_WRHV
+#include <vbi/vbi.h>
+#endif
 
 /* When copying aligned words or shorts, try to avoid memcpy() */
 #define CONFIG_TRY_BETTER_MEMCPY
@@ -110,8 +113,27 @@ int __init fsl_dpa_uio_portal(struct dpa_uio_class *uio_class,
  * that contain that support. */
 static inline int fsl_dpa_should_recover(void)
 {
+#ifdef CONFIG_WRHV
+	/* Using recovery mode when not the first boot */
+	return VBI_BOOT_COUNT_GET();
+#else
 	return 0;
+#endif
+}
+
+/*
+ * For native we only exit recovery mode when using private FQ allocation.
+ * But for GOS we always exit recovery mode automatically.
+ */
+static inline int fsl_dpa_should_recover_exit(int recovery_mode, int use_bpid0)
+{
+#ifdef CONFIG_WRHV
+	return recovery_mode;
+#else
+	return recovery_mode && !use_bpid0;
+#endif
 }
+
 static inline int pamu_enable_liodn(struct device_node *n, int i)
 {
 	return 0;
diff --git a/drivers/staging/fsl_qbman/qman_driver.c b/drivers/staging/fsl_qbman/qman_driver.c
index fbd1727..af14928 100644
--- a/drivers/staging/fsl_qbman/qman_driver.c
+++ b/drivers/staging/fsl_qbman/qman_driver.c
@@ -559,9 +559,7 @@ static __init int qman_init(void)
 		if (ret)
 			return ret;
 	}
-	/* If using private FQ allocation, exit recovery mode automatically (ie.
-	 * after automatic recovery) */
-	if (recovery_mode && !use_bpid0) {
+	if (fsl_dpa_should_recover_exit(recovery_mode, use_bpid0)) {
 		ret = qman_recovery_exit();
 		if (ret)
 			return ret;
-- 
1.7.0.4

