From be22ee70f9fef2b174e39e48277e0c6a3bf2352c Mon Sep 17 00:00:00 2001
From: Thomas Tai <thomas.tai@windriver.com>
Date: Tue, 21 Sep 2010 11:57:06 -0700
Subject: [PATCH 239/252] relocate define and paravirtualize prime_debug_regs

In order to access debug register, the mtspr and mfspr machine code
is needed to put into R3 before execute those instructions. Moved those
machine code define from a source file into a header file. Expand macro
to read/write IAC1, IAC2, DAC1, DAC2, DBCR1, DBCR2. Add macros to
encode difference register number into the machine code. The actual format
is documented in "Book E Arch Reference Manual".

paravirtualize prime_debug_regs instead of using mtspr macro in
regs.h so that p4080 can use mtspr to access other special purpose
registers.

Signed-off-by: Thomas Tai <thomas.tai@windriver.com>
---
 arch/powerpc/include/asm/reg.h |   31 +++++++-
 arch/powerpc/kernel/vbi/wrhv.c |  171 ++++++++++++++++++++++++++++++++++++----
 2 files changed, 185 insertions(+), 17 deletions(-)

diff --git a/arch/powerpc/include/asm/reg.h b/arch/powerpc/include/asm/reg.h
index 5fefbb9..db6a00e 100644
--- a/arch/powerpc/include/asm/reg.h
+++ b/arch/powerpc/include/asm/reg.h
@@ -877,6 +877,36 @@
 #define PV_BE		0x0070
 #define PV_PA6T		0x0090
 
+/* machine code for accessing SPRN_DBSR and SPRN_DBCR0 */
+#define SPRN_DBSR_W 0x7c904ba6  /* mtspr SPRN_DBSR,r4 */
+#define SPRN_DBSR_R 0x7c904aa6  /* mfspr r4,SPRN_DBSR */
+#define SPRN_DBCR0_W 0x7c944ba6 /* mtspr SPRN_DBCR0,r4 */
+#define SPRN_DBCR0_R 0x7c944aa6 /* mfspr r4,SPRN_DBCR0 */
+
+/* machine code for acessing IAC1, IAC2 */
+#define SPRN_IAC1_W 0x7c984ba6 /* mtspr SPRN_IAC1,r4 */
+#define SPRN_IAC1_R 0x7c984aa6 /* mfspr r4,SPRN_IAC1 */
+#define SPRN_IAC2_W 0x7c994ba6 /* mtspr SPRN_IAC2,r4 */
+#define SPRN_IAC2_R 0x7c994aa6 /* mfspr r4,SPRN_IAC2 */
+
+/* machine code for accessing DAC1, DAC2 */
+#define SPRN_DAC1_W 0x7c9c4ba6 /* mtspr SPRN_DAC1,r4 */
+#define SPRN_DAC1_R 0x7c9c4aa6 /* mfspr r4,SPRN_DAC1 */
+#define SPRN_DAC2_W 0x7c9d4ba6 /* mtspr SPRN_DAC2,r4 */
+#define SPRN_DAC2_R 0x7c9d4aa6 /* mfspr r4,SPRN_DAC2 */
+
+/* machine code for accessing DBCR1 and DBCR2 */
+#define SPRN_DBCR1_W 0x7c954ba6 /* mtspr SPRN_DBCR1,r4 */
+#define SPRN_DBCR1_R 0x7c954aa6 /* mfspr r4,SPRN_DBCR1 */
+#define SPRN_DBCR2_W 0x7c964ba6 /* mtspr SPRN_DBCR2,r4 */
+#define SPRN_DBCR2_R 0x7c964aa6 /* mfspr r4,SPRN_DBCR2 */
+
+/* macros to encode register number into the machine code */
+#define SPRN_DBSR_W_RN(rn) (SPRN_DBSR_W & ~(0x1F<<21) | (rn<<21))
+#define SPRN_DBSR_R_RN(rn) (SPRN_DBSR_R & ~(0x1F<<21) | (rn<<21))
+#define SPRN_DBCR0_W_RN(rn) (SPRN_DBCR0_W & ~(0x1F<<21) | (rn<<21))
+#define SPRN_DBCR0_R_RN(rn) (SPRN_DBCR0_R & ~(0x1F<<21) | (rn<<21))
+
 /* Macros for setting and retrieving special purpose registers */
 #ifndef __ASSEMBLY__
 #define mfmsr()		({unsigned long rval; \
@@ -896,7 +926,6 @@
 
 #define mtspr(rn, v)	asm volatile("mtspr " __stringify(rn) ",%0" : : "r" (v)\
 				     : "memory")
-
 #ifdef __powerpc64__
 #ifdef CONFIG_PPC_CELL
 #define mftb()		({unsigned long rval;				\
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 29c2ab8..3716590 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -1367,17 +1367,13 @@ static void wrhv_handle_debug(struct pt_regs *regs, unsigned long debug_status)
 		mtspr(SPRN_DBCR0, current->thread.dbcr0);
 }
 
-#define SPRN_DBSR_W 0x7c904ba6	/* mtspr SPRN_DBSR,r4 */
-#define SPRN_DBSR_R 0x7c904aa6  /* mfspr r4,SPRN_DBSR */
-#define SPRN_DBCR0_W 0x7c944ba6 /* mtspr SPRN_DBCR0,r4 */
-#define SPRN_DBCR0_R 0x7c944aa6 /* mfspr r4,SPRN_DBCR0 */
 /* arch/powerpc/include/asm/reg.h */
+#ifdef CONFIG_PPC85xx_VT_MODE
 void wrhv_mtspr(unsigned int sprn, unsigned int value)
 {
 
 	switch(sprn){
 		case SPRN_DBCR0:
-#ifdef CONFIG_PPC85xx_VT_MODE
 			__asm__ __volatile__(
 			"lis    3,%0@h\n"
 			"ori    3,3,%0@l\n"
@@ -1385,13 +1381,9 @@ void wrhv_mtspr(unsigned int sprn, unsigned int value)
 			"mtspr	0x134,4\n"
 			::"i" (SPRN_DBCR0_W), "r" (value)
 			);
-#else
-			wr_control->vb_control_regs.dbcr0 = value;
-#endif
 			break;
 
 		case SPRN_DBSR:
-#ifdef CONFIG_PPC85xx_VT_MODE
 			__asm__ __volatile__(
 			"lis    3,%0@h\n"
 			"ori    3,3,%0@l\n"
@@ -1399,12 +1391,83 @@ void wrhv_mtspr(unsigned int sprn, unsigned int value)
 			"mtspr	0x130,4\n"
 			::"i" (SPRN_DBSR_W), "r" (value)
 			);
+			break;
+
+		case SPRN_IAC1:
+			__asm__ __volatile__(
+			"lis    3,%0@h\n"
+			"ori    3,3,%0@l\n"
+			"mr	4,%1\n"
+			"mtspr	0x138,4\n"
+			::"i" (SPRN_IAC1_W), "r" (value)
+			);
+			break;
+
+		case SPRN_IAC2:
+			__asm__ __volatile__(
+			"lis    3,%0@h\n"
+			"ori    3,3,%0@l\n"
+			"mr	4,%1\n"
+			"mtspr	0x139,4\n"
+			::"i" (SPRN_IAC2_W), "r" (value)
+			);
+			break;
+
+		case SPRN_DAC1:
+			__asm__ __volatile__(
+			"lis    3,%0@h\n"
+			"ori    3,3,%0@l\n"
+			"mr	4,%1\n"
+			"mtspr	0x13C,4\n"
+			::"i" (SPRN_DAC1_W), "r" (value)
+			);
+			break;
+
+		case SPRN_DAC2:
+			__asm__ __volatile__(
+			"lis    3,%0@h\n"
+			"ori    3,3,%0@l\n"
+			"mr	4,%1\n"
+			"mtspr	0x13D,4\n"
+			::"i" (SPRN_DAC2_W), "r" (value)
+			);
+			break;
+
+		case SPRN_DBCR1:
+			__asm__ __volatile__(
+			"lis    3,%0@h\n"
+			"ori    3,3,%0@l\n"
+			"mr	4,%1\n"
+			"mtspr	0x135,4\n"
+			::"i" (SPRN_DBCR1_W), "r" (value)
+			);
+			break;
+
+		case SPRN_DBCR2:
+			__asm__ __volatile__(
+			"lis    3,%0@h\n"
+			"ori    3,3,%0@l\n"
+			"mr	4,%1\n"
+			"mtspr	0x136,4\n"
+			::"i" (SPRN_DBCR2_W), "r" (value)
+			);
+			break;
+	}
+}
 #else
+void wrhv_mtspr(unsigned int sprn, unsigned int value)
+{
+	switch(sprn){
+		case SPRN_DBCR0:
+			wr_control->vb_control_regs.dbcr0 = value;
+			break;
+
+		case SPRN_DBSR:
 			wr_control->vb_control_regs.dbsr = value;
-#endif
 			break;
 	}
 }
+#endif
 
 /* arch/powerpc/kernel/process.c */ 
 extern void wrhv_mtspr(unsigned int, unsigned int);
@@ -1429,12 +1492,12 @@ void wrhv_prime_debug_regs(struct thread_struct *thread)
 #endif
 }
 
+#ifdef CONFIG_PPC85xx_VT_MODE
 unsigned int wrhv_mfspr(unsigned int sprn)
 {
 	unsigned int value = 0;
 	switch(sprn){
 		case SPRN_DBCR0:
-#ifdef CONFIG_PPC85xx_VT_MODE
 			__asm__ __volatile__(
 			"lis    3,%1@h\n"
 			"ori    3,3,%1@l\n"
@@ -1443,13 +1506,9 @@ unsigned int wrhv_mfspr(unsigned int sprn)
 			:"=r" (value)
 			:"i" (SPRN_DBCR0_R)
 			);
-#else
-			value = wr_control->vb_control_regs.dbcr0;
-#endif
 			break;
 
 		case SPRN_DBSR:
-#ifdef CONFIG_PPC85xx_VT_MODE
 			__asm__ __volatile__(
 			"lis    3,%1@h\n"
 			"ori    3,3,%1@l\n"
@@ -1458,14 +1517,94 @@ unsigned int wrhv_mfspr(unsigned int sprn)
 			:"=r" (value)
 			:"i" (SPRN_DBSR_R)
 			);
+			break;
+
+		case SPRN_IAC1:
+			__asm__ __volatile__(
+			"lis    3,%1@h\n"
+			"ori    3,3,%1@l\n"
+			"mfspr	4,0x138\n"
+			"mr	%0,4\n"
+			:"=r" (value)
+			:"i" (SPRN_IAC1_R)
+			);
+			break;
+
+		case SPRN_IAC2:
+			__asm__ __volatile__(
+			"lis    3,%1@h\n"
+			"ori    3,3,%1@l\n"
+			"mfspr	4,0x139\n"
+			"mr	%0,4\n"
+			:"=r" (value)
+			:"i" (SPRN_IAC2_R)
+			);
+			break;
+
+		case SPRN_DAC1:
+			__asm__ __volatile__(
+			"lis    3,%1@h\n"
+			"ori    3,3,%1@l\n"
+			"mfspr	4,0x13C\n"
+			"mr	%0,4\n"
+			:"=r" (value)
+			:"i" (SPRN_DAC1_R)
+			);
+			break;
+
+		case SPRN_DAC2:
+			__asm__ __volatile__(
+			"lis    3,%1@h\n"
+			"ori    3,3,%1@l\n"
+			"mfspr	4,0x13D\n"
+			"mr	%0,4\n"
+			:"=r" (value)
+			:"i" (SPRN_DAC2_R)
+			);
+			break;
+
+		case SPRN_DBCR1:
+			__asm__ __volatile__(
+			"lis    3,%1@h\n"
+			"ori    3,3,%1@l\n"
+			"mfspr	4,0x135\n"
+			"mr	%0,4\n"
+			:"=r" (value)
+			:"i" (SPRN_DBCR1_R)
+			);
+			break;
+
+		case SPRN_DBCR2:
+			__asm__ __volatile__(
+			"lis    3,%1@h\n"
+			"ori    3,3,%1@l\n"
+			"mfspr	4,0x136\n"
+			"mr	%0,4\n"
+			:"=r" (value)
+			:"i" (SPRN_DBCR2_R)
+			);
+			break;
+	}
+
+	return value;
+}
 #else
+unsigned int wrhv_mfspr(unsigned int sprn)
+{
+	unsigned int value = 0;
+	switch(sprn){
+		case SPRN_DBCR0:
+			value = wr_control->vb_control_regs.dbcr0;
+			break;
+
+		case SPRN_DBSR:
 			value = wr_control->vb_control_regs.dbsr;
-#endif
 			break;
 	}
 
 	return value;
 }
+#endif
 
 /* arch/powerpc/kernel/traps.c */
 void __kprobes wrhv_DebugException(struct pt_regs *regs, unsigned long debug_status)
-- 
1.6.5.2

