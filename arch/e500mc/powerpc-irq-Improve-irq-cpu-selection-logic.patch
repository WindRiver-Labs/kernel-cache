From 3ad68b95a9c59581de87afed27a9f1bd1c9efec8 Mon Sep 17 00:00:00 2001
From: Kumar Gala <galak@kernel.crashing.org>
Date: Tue, 31 May 2011 14:04:32 -0500
Subject: [PATCH 062/233] powerpc/irq: Improve irq cpu selection logic

Extracted from vendor drop QorIQ-DPAA-SDK-V1-20110609-systembuilder.iso
0207-powerpc-irq-Improve-irq-cpu-selection-logic.patch

Utilize cpu_possible_mask in irq_choose_cpu() instead of cpu_all_mask.
This handles the case in which NR_CPUs is greater than the actual number
of possible cpus.  This is change works around one specific case but
will have issues overall, and thus needs a longer term fix.

Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
[context adjustment]
Integrated-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 arch/powerpc/sysdev/mpic.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/sysdev/mpic.c b/arch/powerpc/sysdev/mpic.c
index 63be662..49d324c 100644
--- a/arch/powerpc/sysdev/mpic.c
+++ b/arch/powerpc/sysdev/mpic.c
@@ -580,7 +580,7 @@ static int irq_choose_cpu(const cpumask_t *mask)
 {
 	int cpuid;
 
-	if (cpumask_equal(mask, cpu_all_mask)) {
+	if (cpumask_equal(mask, cpu_possible_mask)) {
 		static int irq_rover;
 		static DEFINE_RAW_SPINLOCK(irq_rover_lock);
 		unsigned long flags;
-- 
1.7.0.4

