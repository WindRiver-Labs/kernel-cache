From 726341cf7bf331f159392ada80272e5832774293 Mon Sep 17 00:00:00 2001
From: fli <fupan.li@windriver.com>
Date: Wed, 25 Dec 2013 10:26:17 +0800
Subject: [PATCH 3/3] fix the bug of using OS_ALLOC(kmalloc) to alloc more
 than 4M memory

The sizeof( struct reg_buffer_vlv_t ) is larger than 4M on
64bits system, and OS_ALLOC(kmalloc) cannot alloc more than 4M
continuous memory, so replace the OS_ALLOC with OS_ALLOC_LARGE(vmalloc).
The structure of reg_buffer_vlv_t is used for save the vlv gtt regs
status, so there is no performance affection when use vmalloc.

This commit fixes the following Call Trace on 64bit system:

WARNING: at linux/mm/page_alloc.c:2303 __alloc_pages_nodemask+0x2fb/0x890()
Hardware name: VALLEYVIEW B0 PLATFORM
Modules linked in: drm_kms_helper emgd(+) video
Pid: 97, comm: modprobe Not tainted 3.4.43-WR5.0.1.0_standard #27
Call Trace:
 [<ffffffff81035ae4>] warn_slowpath_common+0x84/0xc0
 [<ffffffff81035b3a>] warn_slowpath_null+0x1a/0x20
 [<ffffffff810eec2b>] __alloc_pages_nodemask+0x2fb/0x890
 [<ffffffff810eeac0>] ? __alloc_pages_nodemask+0x190/0x890
 [<ffffffff817c0496>] ? _raw_spin_unlock+0x16/0x40
 [<ffffffff8110954a>] ? __pte_alloc_kernel+0x5a/0xa0
 [<ffffffff8137b740>] ? pci_do_find_bus+0x60/0x60
 [<ffffffff810ef1d7>] __get_free_pages+0x17/0x50
 [<ffffffff8112392e>] kmalloc_order_trace+0x3e/0x110
 [<ffffffffa00a06e8>] reg_alloc_vlv+0x58/0x100 [emgd]
 [<ffffffffa009f499>] _reg_init+0xe9/0x120 [emgd]
 [<ffffffffa007b128>] igd_module_init+0x48/0xb0 [emgd]
 [<ffffffffa0019a5f>] emgd_startup_hal+0x1f/0x30 [emgd]
 [<ffffffffa001a648>] emgd_driver_load+0x2f8/0x950 [emgd]
 [<ffffffff8141a0ba>] drm_get_pci_dev+0x19a/0x2c0
 [<ffffffffa00188d0>] emgd_pci_probe+0x20/0x30 [emgd]
 [<ffffffff8137aa8f>] pci_device_probe+0x7f/0xb0
 [<ffffffff814324f3>] ? driver_sysfs_add+0x83/0xb0
 [<ffffffff814327db>] driver_probe_device+0x7b/0x230
 [<ffffffff81432a2c>] __driver_attach+0x9c/0xa0
 [<ffffffff81432990>] ? driver_probe_device+0x230/0x230
 [<ffffffff81430bfe>] bus_for_each_dev+0x5e/0x90
 [<ffffffff814322ee>] driver_attach+0x1e/0x20
 [<ffffffff81431ea0>] bus_add_driver+0x1a0/0x270
 [<ffffffff81432f78>] driver_register+0x78/0x140
 [<ffffffff8137b667>] __pci_register_driver+0x57/0xd0
 [<ffffffff817c452a>] ? notifier_call_chain+0x5a/0x80
 [<ffffffff8141a2f6>] drm_pci_init+0x116/0x130
 [<ffffffffa00d8000>] ? 0xffffffffa00d7fff
 [<ffffffffa00d8028>] emgd_init+0x28/0x2a [emgd]
 [<ffffffff810001d0>] do_one_initcall+0x40/0x170
 [<ffffffff8108a82c>] sys_init_module+0xb2c/0x1dc0
 [<ffffffff817c81d2>] system_call_fastpath+0x16/0x1b
---[ end trace 5d3090a8930f7bc6 ]---

Signed-off-by: fupan li <fupan.li@windriver.com>
---
 drivers/gpu/drm/emgd/src/state/reg/gn7/reg_vlv.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/emgd/src/state/reg/gn7/reg_vlv.c b/drivers/gpu/drm/emgd/src/state/reg/gn7/reg_vlv.c
index 94f2311..dad767c 100644
--- a/drivers/gpu/drm/emgd/src/state/reg/gn7/reg_vlv.c
+++ b/drivers/gpu/drm/emgd/src/state/reg/gn7/reg_vlv.c
@@ -757,7 +757,7 @@ static reg_buffer_t *reg_alloc_vlv(igd_context_t *context,
 		return NULL;
 	}
 
-	reg_args = (reg_buffer_vlv_t*)OS_ALLOC(sizeof(reg_buffer_vlv_t));
+	reg_args = (reg_buffer_vlv_t*)OS_ALLOC_LARGE(sizeof(reg_buffer_vlv_t));
 	if (reg_args == NULL) {
 		OS_FREE(reg_buffer);
 		return NULL;
@@ -773,7 +773,7 @@ static reg_buffer_t *reg_alloc_vlv(igd_context_t *context,
 	if (!reg_args->mmio_state) {
 		EMGD_DEBUG("Failed Allocating mmio memory");
 		OS_FREE(reg_buffer);
-		OS_FREE(reg_args);
+		OS_FREE_LARGE(reg_args);
 		return NULL;
 	}
 
@@ -816,7 +816,7 @@ static void reg_free_vlv(igd_context_t *context,
 			if (NULL != reg_args->rb_state) {
 				OS_FREE(reg_args->rb_state);
 			}
-			OS_FREE(reg_args);
+			OS_FREE_LARGE(reg_args);
 		}
 		OS_FREE(reg_buffer);
 	}
-- 
1.7.5.4

