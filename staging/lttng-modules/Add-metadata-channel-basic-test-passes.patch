From 12b446e98702ee203d5173e53ee321d7c1aa39de Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Sat, 14 May 2011 11:20:52 -0400
Subject: [PATCH 078/540] Add metadata channel, basic test passes

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 .../instrumentation/events/lttng-module/lttng.h    | 29 ++++++++++++++++++++++
 drivers/staging/lttng2/ltt-debugfs-abi.c           |  6 +++--
 drivers/staging/lttng2/ltt-events.c                |  2 +-
 drivers/staging/lttng2/ltt-events.h                |  2 ++
 .../lttng2/ltt-ring-buffer-metadata-client.h       | 10 +++-----
 drivers/staging/lttng2/probes/Makefile             |  2 ++
 drivers/staging/lttng2/probes/lttng-probe-lttng.c  | 22 ++++++++++++++++
 7 files changed, 63 insertions(+), 10 deletions(-)
 create mode 100644 drivers/staging/lttng2/instrumentation/events/lttng-module/lttng.h
 create mode 100644 drivers/staging/lttng2/probes/lttng-probe-lttng.c

diff --git a/drivers/staging/lttng2/instrumentation/events/lttng-module/lttng.h b/drivers/staging/lttng2/instrumentation/events/lttng-module/lttng.h
new file mode 100644
index 0000000..690b5df
--- /dev/null
+++ b/drivers/staging/lttng2/instrumentation/events/lttng-module/lttng.h
@@ -0,0 +1,29 @@
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM lttng
+
+#if !defined(_TRACE_LTTNG_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _TRACE_LTTNG_H
+
+#include <linux/tracepoint.h>
+
+TRACE_EVENT(lttng_metadata,
+
+	TP_PROTO(const char *str),
+
+	TP_ARGS(str),
+
+	TP_STRUCT__entry(
+		__string(	string,		str	)
+	),
+
+	TP_fast_assign(
+		tp_strcpy(string, str)
+	),
+
+	TP_printk("")
+)
+
+#endif /*  _TRACE_LTTNG_H */
+
+/* This part must be outside protection */
+#include "define_trace.h"
diff --git a/drivers/staging/lttng2/ltt-debugfs-abi.c b/drivers/staging/lttng2/ltt-debugfs-abi.c
index 0f649fc..7c9f88a 100644
--- a/drivers/staging/lttng2/ltt-debugfs-abi.c
+++ b/drivers/staging/lttng2/ltt-debugfs-abi.c
@@ -123,7 +123,7 @@ static
 void lttng_metadata_create_events(struct file *channel_file)
 {
 	struct ltt_channel *channel = channel_file->private_data;
-	char *event_name = "lttng-metadata";
+	char *event_name = "lttng_metadata";
 	const struct lttng_event_desc *event_desc;
 	struct ltt_event *event;
 	int ret;
@@ -210,8 +210,10 @@ int lttng_abi_create_channel(struct file *session_file,
 	chan->file = chan_file;
 	chan_file->private_data = chan;
 	fd_install(chan_fd, chan_file);
-	if (channel_type == METADATA_CHANNEL)
+	if (channel_type == METADATA_CHANNEL) {
 		lttng_metadata_create_events(chan_file);
+		session->metadata = chan;
+	}
 
 	/* The channel created holds a reference on the session */
 	atomic_long_inc(&session_file->f_count);
diff --git a/drivers/staging/lttng2/ltt-events.c b/drivers/staging/lttng2/ltt-events.c
index b019159..1d72921 100644
--- a/drivers/staging/lttng2/ltt-events.c
+++ b/drivers/staging/lttng2/ltt-events.c
@@ -515,7 +515,7 @@ int _ltt_session_metadata_statedump(struct ltt_session *session)
 	if (session->metadata_dumped)
 		goto skip_session;
 	if (!session->metadata) {
-		printk(KERN_WARNING "LTTng: tracing is starting, but metadata channel is not found\n");
+		printk(KERN_WARNING "LTTng: attempt to start tracing, but metadata channel is not found. Operation abort.\n");
 		return -EPERM;
 	}
 
diff --git a/drivers/staging/lttng2/ltt-events.h b/drivers/staging/lttng2/ltt-events.h
index cc8e809..3bacac7 100644
--- a/drivers/staging/lttng2/ltt-events.h
+++ b/drivers/staging/lttng2/ltt-events.h
@@ -217,5 +217,7 @@ int ltt_probe_register(struct lttng_probe_desc *desc);
 void ltt_probe_unregister(struct lttng_probe_desc *desc);
 const struct lttng_event_desc *ltt_event_get(const char *name);
 void ltt_event_put(const struct lttng_event_desc *desc);
+int ltt_probes_init(void);
+void ltt_probes_exit(void);
 
 #endif /* _LTT_EVENTS_H */
diff --git a/drivers/staging/lttng2/ltt-ring-buffer-metadata-client.h b/drivers/staging/lttng2/ltt-ring-buffer-metadata-client.h
index 68ce958..a0f6f9e 100644
--- a/drivers/staging/lttng2/ltt-ring-buffer-metadata-client.h
+++ b/drivers/staging/lttng2/ltt-ring-buffer-metadata-client.h
@@ -172,13 +172,10 @@ static
 struct lib_ring_buffer *ltt_buffer_read_open(struct channel *chan)
 {
 	struct lib_ring_buffer *buf;
-	int cpu;
 
-	for_each_channel_cpu(cpu, chan) {
-		buf = channel_get_ring_buffer(&client_config, chan, cpu);
-		if (!lib_ring_buffer_open_read(buf))
-			return buf;
-	}
+	buf = channel_get_ring_buffer(&client_config, chan, 0);
+	if (!lib_ring_buffer_open_read(buf))
+		return buf;
 	return NULL;
 }
 
@@ -186,7 +183,6 @@ static
 void ltt_buffer_read_close(struct lib_ring_buffer *buf)
 {
 	lib_ring_buffer_release_read(buf);
-	
 }
 
 static
diff --git a/drivers/staging/lttng2/probes/Makefile b/drivers/staging/lttng2/probes/Makefile
index 7bc3a51..add4e88 100644
--- a/drivers/staging/lttng2/probes/Makefile
+++ b/drivers/staging/lttng2/probes/Makefile
@@ -8,6 +8,8 @@ ifneq ($(CONFIG_TRACEPOINTS),)
 ccflags-y += -I$(PWD)/probes
 obj-m += lttng-types.o
 
+obj-m += lttng-probe-lttng.o
+
 obj-m += lttng-probe-sched.o
 obj-m += lttng-probe-kvm.o
 obj-m += lttng-probe-irq.o
diff --git a/drivers/staging/lttng2/probes/lttng-probe-lttng.c b/drivers/staging/lttng2/probes/lttng-probe-lttng.c
new file mode 100644
index 0000000..99a3dd9
--- /dev/null
+++ b/drivers/staging/lttng2/probes/lttng-probe-lttng.c
@@ -0,0 +1,22 @@
+/*
+ * probes/lttng-probe-core.c
+ *
+ * Copyright 2010 (c) - Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+ *
+ * LTTng core probes.
+ */
+
+#include <linux/module.h>
+
+/*
+ * Create LTTng tracepoint probes.
+ */
+#define LTTNG_PACKAGE_BUILD
+#define CREATE_TRACE_POINTS
+#define TRACE_INCLUDE_PATH ../instrumentation/events/lttng-module
+
+#include "../instrumentation/events/lttng-module/lttng.h"
+
+MODULE_LICENSE("GPL and additional rights");
+MODULE_AUTHOR("Mathieu Desnoyers <mathieu.desnoyers@efficios.com>");
+MODULE_DESCRIPTION("LTTng core probes");
-- 
1.8.4.93.g57e4c17

