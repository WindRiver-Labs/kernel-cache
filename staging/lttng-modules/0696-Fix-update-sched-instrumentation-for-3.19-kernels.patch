From cda6e9c10eb180cae91fcc168f653e3d74ff0f8c Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Sun, 28 Dec 2014 09:08:41 -0500
Subject: [PATCH 696/933] Fix: update sched instrumentation for 3.19+ kernels

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 .../instrumentation/events/lttng-module/sched.h    | 22 +++++++++++++++++++++-
 1 file changed, 21 insertions(+), 1 deletion(-)

diff --git a/drivers/staging/lttng/instrumentation/events/lttng-module/sched.h b/drivers/staging/lttng/instrumentation/events/lttng-module/sched.h
index 6b3b033..1bea326 100644
--- a/drivers/staging/lttng/instrumentation/events/lttng-module/sched.h
+++ b/drivers/staging/lttng/instrumentation/events/lttng-module/sched.h
@@ -15,7 +15,27 @@
 #ifndef _TRACE_SCHED_DEF_
 #define _TRACE_SCHED_DEF_
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,0))
+
+static inline long __trace_sched_switch_state(struct task_struct *p)
+{
+	long state = p->state;
+
+#ifdef CONFIG_PREEMPT
+#ifdef CONFIG_SCHED_DEBUG
+	BUG_ON(p != current);
+#endif /* CONFIG_SCHED_DEBUG */
+	/*
+	 * For all intents and purposes a preempted task is a running task.
+	 */
+	if (preempt_count() & PREEMPT_ACTIVE)
+		state = TASK_RUNNING | TASK_STATE_MAX;
+#endif	/* CONFIG_PREEMPT */
+
+	return state;
+}
+
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0))
 
 static inline long __trace_sched_switch_state(struct task_struct *p)
 {
-- 
2.0.2

