From 975365fe133c96273ff0c0f77a924a0236748a97 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Tue, 27 Sep 2011 20:55:24 -0400
Subject: [PATCH 320/933] Rename "comm" context to "procname"

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/Makefile                 |  2 +-
 drivers/staging/lttng/lttng-context-comm.c     | 72 --------------------------
 drivers/staging/lttng/lttng-context-procname.c | 72 ++++++++++++++++++++++++++
 3 files changed, 73 insertions(+), 73 deletions(-)
 delete mode 100644 drivers/staging/lttng/lttng-context-comm.c
 create mode 100644 drivers/staging/lttng/lttng-context-procname.c

diff --git a/drivers/staging/lttng/Makefile b/drivers/staging/lttng/Makefile
index d25c3be..c820bcb 100644
--- a/drivers/staging/lttng/Makefile
+++ b/drivers/staging/lttng/Makefile
@@ -15,7 +15,7 @@ obj-m += ltt-ring-buffer-metadata-mmap-client.o
 obj-m += ltt-relay.o
 ltt-relay-objs :=  ltt-events.o ltt-debugfs-abi.o \
 			ltt-probes.o ltt-context.o \
-			lttng-context-pid.o lttng-context-comm.o \
+			lttng-context-pid.o lttng-context-procname.o \
 			lttng-context-prio.o lttng-context-nice.o \
 			lttng-context-vpid.o lttng-context-tid.o \
 			lttng-context-vtid.o lttng-context-ppid.o \
diff --git a/drivers/staging/lttng/lttng-context-comm.c b/drivers/staging/lttng/lttng-context-comm.c
deleted file mode 100644
index beea83f..0000000
--- a/drivers/staging/lttng/lttng-context-comm.c
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * (C) Copyright	2009-2011 -
- * 		Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
- *
- * LTTng comm name context.
- *
- * Dual LGPL v2.1/GPL v2 license.
- */
-
-#include <linux/module.h>
-#include <linux/slab.h>
-#include <linux/sched.h>
-#include "ltt-events.h"
-#include "wrapper/ringbuffer/frontend_types.h"
-#include "wrapper/vmalloc.h"
-#include "ltt-tracer.h"
-
-static
-size_t comm_get_size(size_t offset)
-{
-	size_t size = 0;
-
-	size += sizeof(current->comm);
-	return size;
-}
-
-/*
- * Racy read of comm. We simply copy its whole array size.
- * Races with /proc/<task>/comm write only.
- * Otherwise having to take a mutex for each event is cumbersome and
- * could lead to crash in IRQ context and deadlock of the lockdep tracer.
- */
-static
-void comm_record(struct lttng_ctx_field *field,
-		 struct lib_ring_buffer_ctx *ctx,
-		 struct ltt_channel *chan)
-{
-	chan->ops->event_write(ctx, current->comm, sizeof(current->comm));
-}
-
-int lttng_add_comm_to_ctx(struct lttng_ctx **ctx)
-{
-	struct lttng_ctx_field *field;
-
-	field = lttng_append_context(ctx);
-	if (!field)
-		return -ENOMEM;
-	if (lttng_find_context(*ctx, "comm")) {
-		lttng_remove_context_field(ctx, field);
-		return -EEXIST;
-	}
-	field->event_field.name = "comm";
-	field->event_field.type.atype = atype_array;
-	field->event_field.type.u.array.elem_type.atype = atype_integer;
-	field->event_field.type.u.array.elem_type.u.basic.integer.size = sizeof(char) * CHAR_BIT;
-	field->event_field.type.u.array.elem_type.u.basic.integer.alignment = ltt_alignof(char) * CHAR_BIT;
-	field->event_field.type.u.array.elem_type.u.basic.integer.signedness = is_signed_type(char);
-	field->event_field.type.u.array.elem_type.u.basic.integer.reverse_byte_order = 0;
-	field->event_field.type.u.array.elem_type.u.basic.integer.base = 10;
-	field->event_field.type.u.array.elem_type.u.basic.integer.encoding = lttng_encode_UTF8;
-	field->event_field.type.u.array.length = sizeof(current->comm);
-
-	field->get_size = comm_get_size;
-	field->record = comm_record;
-	wrapper_vmalloc_sync_all();
-	return 0;
-}
-EXPORT_SYMBOL_GPL(lttng_add_comm_to_ctx);
-
-MODULE_LICENSE("GPL and additional rights");
-MODULE_AUTHOR("Mathieu Desnoyers");
-MODULE_DESCRIPTION("Linux Trace Toolkit Perf Support");
diff --git a/drivers/staging/lttng/lttng-context-procname.c b/drivers/staging/lttng/lttng-context-procname.c
new file mode 100644
index 0000000..c6bc646
--- /dev/null
+++ b/drivers/staging/lttng/lttng-context-procname.c
@@ -0,0 +1,72 @@
+/*
+ * (C) Copyright	2009-2011 -
+ * 		Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+ *
+ * LTTng procname context.
+ *
+ * Dual LGPL v2.1/GPL v2 license.
+ */
+
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/sched.h>
+#include "ltt-events.h"
+#include "wrapper/ringbuffer/frontend_types.h"
+#include "wrapper/vmalloc.h"
+#include "ltt-tracer.h"
+
+static
+size_t procname_get_size(size_t offset)
+{
+	size_t size = 0;
+
+	size += sizeof(current->comm);
+	return size;
+}
+
+/*
+ * Racy read of procname. We simply copy its whole array size.
+ * Races with /proc/<task>/procname write only.
+ * Otherwise having to take a mutex for each event is cumbersome and
+ * could lead to crash in IRQ context and deadlock of the lockdep tracer.
+ */
+static
+void procname_record(struct lttng_ctx_field *field,
+		 struct lib_ring_buffer_ctx *ctx,
+		 struct ltt_channel *chan)
+{
+	chan->ops->event_write(ctx, current->comm, sizeof(current->comm));
+}
+
+int lttng_add_procname_to_ctx(struct lttng_ctx **ctx)
+{
+	struct lttng_ctx_field *field;
+
+	field = lttng_append_context(ctx);
+	if (!field)
+		return -ENOMEM;
+	if (lttng_find_context(*ctx, "procname")) {
+		lttng_remove_context_field(ctx, field);
+		return -EEXIST;
+	}
+	field->event_field.name = "procname";
+	field->event_field.type.atype = atype_array;
+	field->event_field.type.u.array.elem_type.atype = atype_integer;
+	field->event_field.type.u.array.elem_type.u.basic.integer.size = sizeof(char) * CHAR_BIT;
+	field->event_field.type.u.array.elem_type.u.basic.integer.alignment = ltt_alignof(char) * CHAR_BIT;
+	field->event_field.type.u.array.elem_type.u.basic.integer.signedness = is_signed_type(char);
+	field->event_field.type.u.array.elem_type.u.basic.integer.reverse_byte_order = 0;
+	field->event_field.type.u.array.elem_type.u.basic.integer.base = 10;
+	field->event_field.type.u.array.elem_type.u.basic.integer.encoding = lttng_encode_UTF8;
+	field->event_field.type.u.array.length = sizeof(current->comm);
+
+	field->get_size = procname_get_size;
+	field->record = procname_record;
+	wrapper_vmalloc_sync_all();
+	return 0;
+}
+EXPORT_SYMBOL_GPL(lttng_add_procname_to_ctx);
+
+MODULE_LICENSE("GPL and additional rights");
+MODULE_AUTHOR("Mathieu Desnoyers");
+MODULE_DESCRIPTION("Linux Trace Toolkit Perf Support");
-- 
2.0.2

