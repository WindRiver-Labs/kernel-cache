From 5dfda1944e15adcf2a9d6290ea0ca5d8cb448e60 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 11 Jun 2015 17:39:16 +0200
Subject: [PATCH 777/933] Implement cpu_id context for filtering

cpu_id context can now be used for filtering, e.g.:

lttng enable-event -k sched_switch --filter '$ctx.cpu_id==1'

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/Makefile        | 3 ++-
 drivers/staging/lttng/lttng-abi.c     | 2 ++
 drivers/staging/lttng/lttng-abi.h     | 1 +
 drivers/staging/lttng/lttng-context.c | 4 ++++
 drivers/staging/lttng/lttng-events.h  | 1 +
 5 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/staging/lttng/Makefile b/drivers/staging/lttng/Makefile
index b1bc6b9..f233e66 100644
--- a/drivers/staging/lttng/Makefile
+++ b/drivers/staging/lttng/Makefile
@@ -37,7 +37,8 @@ lttng-tracer-objs :=  lttng-events.o lttng-abi.o \
 			lttng-context-prio.o lttng-context-nice.o \
 			lttng-context-vpid.o lttng-context-tid.o \
 			lttng-context-vtid.o lttng-context-ppid.o \
-			lttng-context-vppid.o lttng-calibrate.o \
+			lttng-context-vppid.o lttng-context-cpu-id.o \
+			lttng-calibrate.o \
 			lttng-context-hostname.o wrapper/random.o \
 			probes/lttng.o wrapper/trace-clock.o \
 			wrapper/page_alloc.o \
diff --git a/drivers/staging/lttng/lttng-abi.c b/drivers/staging/lttng/lttng-abi.c
index d4c5ea0..93cdce3 100644
--- a/drivers/staging/lttng/lttng-abi.c
+++ b/drivers/staging/lttng/lttng-abi.c
@@ -240,6 +240,8 @@ long lttng_abi_add_context(struct file *file,
 		return lttng_add_procname_to_ctx(ctx);
 	case LTTNG_KERNEL_CONTEXT_HOSTNAME:
 		return lttng_add_hostname_to_ctx(ctx);
+	case LTTNG_KERNEL_CONTEXT_CPU_ID:
+		return lttng_add_cpu_id_to_ctx(ctx);
 	default:
 		return -EINVAL;
 	}
diff --git a/drivers/staging/lttng/lttng-abi.h b/drivers/staging/lttng/lttng-abi.h
index 06eae78..ab54cf8 100644
--- a/drivers/staging/lttng/lttng-abi.h
+++ b/drivers/staging/lttng/lttng-abi.h
@@ -141,6 +141,7 @@ enum lttng_kernel_context_type {
 	LTTNG_KERNEL_CONTEXT_PPID		= 8,
 	LTTNG_KERNEL_CONTEXT_VPPID		= 9,
 	LTTNG_KERNEL_CONTEXT_HOSTNAME		= 10,
+	LTTNG_KERNEL_CONTEXT_CPU_ID		= 11,
 };
 
 struct lttng_kernel_perf_counter_ctx {
diff --git a/drivers/staging/lttng/lttng-context.c b/drivers/staging/lttng/lttng-context.c
index d8ce977..eca58ce 100644
--- a/drivers/staging/lttng/lttng-context.c
+++ b/drivers/staging/lttng/lttng-context.c
@@ -264,6 +264,10 @@ int lttng_context_init(void)
 	if (ret) {
 		printk(KERN_WARNING "Cannot add context lttng_add_vpid_to_ctx");
 	}
+	ret = lttng_add_cpu_id_to_ctx(&lttng_static_ctx);
+	if (ret) {
+		printk(KERN_WARNING "Cannot add context lttng_add_cpu_id_to_ctx");
+	}
 	/* TODO: perf counters for filtering */
 	return 0;
 }
diff --git a/drivers/staging/lttng/lttng-events.h b/drivers/staging/lttng/lttng-events.h
index 4d1b54f..4d9bdfd 100644
--- a/drivers/staging/lttng/lttng-events.h
+++ b/drivers/staging/lttng/lttng-events.h
@@ -605,6 +605,7 @@ void lttng_remove_context_field(struct lttng_ctx **ctx,
 				struct lttng_ctx_field *field);
 void lttng_destroy_context(struct lttng_ctx *ctx);
 int lttng_add_pid_to_ctx(struct lttng_ctx **ctx);
+int lttng_add_cpu_id_to_ctx(struct lttng_ctx **ctx);
 int lttng_add_procname_to_ctx(struct lttng_ctx **ctx);
 int lttng_add_prio_to_ctx(struct lttng_ctx **ctx);
 int lttng_add_nice_to_ctx(struct lttng_ctx **ctx);
-- 
2.0.2

