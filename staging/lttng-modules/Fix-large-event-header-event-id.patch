From ed8f964eb23ca9c2ca38437c35a0f3fc6cbb1320 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Fri, 3 Jun 2011 13:35:31 -0400
Subject: [PATCH 166/625] Fix large event header event id

Was incorrectly writing 32-bit when reserving only 16.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Signed-off-by: Jianchuan Wang <jianchuan.wang@windriver.com>
---
 drivers/staging/lttng2/ltt-ring-buffer-client.h | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/lttng2/ltt-ring-buffer-client.h b/drivers/staging/lttng2/ltt-ring-buffer-client.h
index c97b874..1c9308e 100644
--- a/drivers/staging/lttng2/ltt-ring-buffer-client.h
+++ b/drivers/staging/lttng2/ltt-ring-buffer-client.h
@@ -186,8 +186,9 @@ void ltt_write_event_header(const struct lib_ring_buffer_config *config,
 	case 2:	/* large */
 	{
 		uint32_t timestamp = (uint32_t) ctx->tsc;
+		uint16_t id = event_id;
 
-		lib_ring_buffer_write(config, ctx, &event_id, sizeof(event_id));
+		lib_ring_buffer_write(config, ctx, &id, sizeof(id));
 		lib_ring_buffer_align_ctx(ctx, ltt_alignof(uint32_t));
 		lib_ring_buffer_write(config, ctx, &timestamp, sizeof(timestamp));
 		break;
@@ -237,8 +238,9 @@ void ltt_write_event_header_slow(const struct lib_ring_buffer_config *config,
 	{
 		if (!(ctx->rflags & (RING_BUFFER_RFLAG_FULL_TSC | LTT_RFLAG_EXTENDED))) {
 			uint32_t timestamp = (uint32_t) ctx->tsc;
+			uint16_t id = event_id;
 
-			lib_ring_buffer_write(config, ctx, &event_id, sizeof(event_id));
+			lib_ring_buffer_write(config, ctx, &id, sizeof(id));
 			lib_ring_buffer_align_ctx(ctx, ltt_alignof(uint32_t));
 			lib_ring_buffer_write(config, ctx, &timestamp, sizeof(timestamp));
 		} else {
-- 
2.0.2

