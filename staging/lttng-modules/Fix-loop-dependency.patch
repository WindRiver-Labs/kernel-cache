From a86421c6582255ba0556fa8ac5e5ec56f89108e5 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Wed, 25 May 2011 19:09:35 -0400
Subject: [PATCH 146/540] Fix loop dependency

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng2/Makefile                   |  3 +-
 drivers/staging/lttng2/lttng-context-pid.c        | 65 +++++++++++++++++++++++
 drivers/staging/lttng2/probes/Makefile            |  2 -
 drivers/staging/lttng2/probes/lttng-context-pid.c | 65 -----------------------
 4 files changed, 67 insertions(+), 68 deletions(-)
 create mode 100644 drivers/staging/lttng2/lttng-context-pid.c
 delete mode 100644 drivers/staging/lttng2/probes/lttng-context-pid.c

diff --git a/drivers/staging/lttng2/Makefile b/drivers/staging/lttng2/Makefile
index 169b7cd..01b0e7e 100644
--- a/drivers/staging/lttng2/Makefile
+++ b/drivers/staging/lttng2/Makefile
@@ -11,7 +11,8 @@ obj-m += ltt-ring-buffer-metadata-client.o
 
 obj-m += ltt-relay.o
 ltt-relay-objs :=  ltt-events.o ltt-debugfs-abi.o \
-			ltt-probes.o ltt-core.o ltt-context.o
+			ltt-probes.o ltt-core.o ltt-context.o \
+			lttng-context-pid.o
 
 obj-m += probes/
 obj-m += lib/
diff --git a/drivers/staging/lttng2/lttng-context-pid.c b/drivers/staging/lttng2/lttng-context-pid.c
new file mode 100644
index 0000000..956920f
--- /dev/null
+++ b/drivers/staging/lttng2/lttng-context-pid.c
@@ -0,0 +1,65 @@
+/*
+ * (C) Copyright	2009-2011 -
+ * 		Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+ *
+ * LTTng PID context.
+ *
+ * Dual LGPL v2.1/GPL v2 license.
+ */
+
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/sched.h>
+#include "ltt-events.h"
+#include "wrapper/ringbuffer/frontend_types.h"
+#include "wrapper/vmalloc.h"
+#include "ltt-tracer.h"
+
+static
+size_t pid_get_size(size_t offset)
+{
+	size_t size = 0;
+
+	size += lib_ring_buffer_align(offset, ltt_alignof(pid_t));
+	size += sizeof(pid_t);
+	return size;
+}
+
+static
+void pid_record(struct lttng_ctx_field *field,
+		struct lib_ring_buffer_ctx *ctx,
+		struct ltt_channel *chan)
+{
+	pid_t pid;
+
+	pid = current->pid;
+	lib_ring_buffer_align_ctx(ctx, ltt_alignof(pid));
+	chan->ops->event_write(ctx, &pid, sizeof(pid));
+}
+
+int lttng_add_pid_to_ctx(struct lttng_ctx **ctx)
+{
+	struct lttng_ctx_field *field;
+	int ret;
+
+	field = lttng_append_context(ctx);
+	if (!field)
+		return ret;
+	field->event_field.name = "pid";
+	field->event_field.type.atype = atype_integer;
+	field->event_field.type.u.basic.integer.size = sizeof(pid_t) * CHAR_BIT;
+	field->event_field.type.u.basic.integer.alignment = ltt_alignof(pid_t) * CHAR_BIT;
+	field->event_field.type.u.basic.integer.signedness = is_signed_type(pid_t);
+	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
+	field->event_field.type.u.basic.integer.base = 10;
+	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
+	field->get_size = pid_get_size;
+	field->record = pid_record;
+	wrapper_vmalloc_sync_all();
+	return 0;
+}
+EXPORT_SYMBOL_GPL(lttng_add_pid_to_ctx);
+
+MODULE_LICENSE("GPL and additional rights");
+MODULE_AUTHOR("Mathieu Desnoyers");
+MODULE_DESCRIPTION("Linux Trace Toolkit Perf Support");
diff --git a/drivers/staging/lttng2/probes/Makefile b/drivers/staging/lttng2/probes/Makefile
index 78c0c69..554e6ff 100644
--- a/drivers/staging/lttng2/probes/Makefile
+++ b/drivers/staging/lttng2/probes/Makefile
@@ -28,8 +28,6 @@ ifneq ($(CONFIG_PERF_EVENTS),)
 obj-m += lttng-perf-counters.o
 endif
 
-obj-m += lttng-context-pid.o
-
 endif
 
 else
diff --git a/drivers/staging/lttng2/probes/lttng-context-pid.c b/drivers/staging/lttng2/probes/lttng-context-pid.c
deleted file mode 100644
index 81dbe4a..0000000
--- a/drivers/staging/lttng2/probes/lttng-context-pid.c
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * (C) Copyright	2009-2011 -
- * 		Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
- *
- * LTTng PID context.
- *
- * Dual LGPL v2.1/GPL v2 license.
- */
-
-#include <linux/module.h>
-#include <linux/slab.h>
-#include <linux/sched.h>
-#include "../ltt-events.h"
-#include "../wrapper/ringbuffer/frontend_types.h"
-#include "../wrapper/vmalloc.h"
-#include "../ltt-tracer.h"
-
-static
-size_t pid_get_size(size_t offset)
-{
-	size_t size = 0;
-
-	size += lib_ring_buffer_align(offset, ltt_alignof(pid_t));
-	size += sizeof(pid_t);
-	return size;
-}
-
-static
-void pid_record(struct lttng_ctx_field *field,
-		struct lib_ring_buffer_ctx *ctx,
-		struct ltt_channel *chan)
-{
-	pid_t pid;
-
-	pid = current->pid;
-	lib_ring_buffer_align_ctx(ctx, ltt_alignof(pid));
-	chan->ops->event_write(ctx, &pid, sizeof(pid));
-}
-
-int lttng_add_pid_to_ctx(struct lttng_ctx **ctx)
-{
-	struct lttng_ctx_field *field;
-	int ret;
-
-	field = lttng_append_context(ctx);
-	if (!field)
-		return ret;
-	field->event_field.name = "pid";
-	field->event_field.type.atype = atype_integer;
-	field->event_field.type.u.basic.integer.size = sizeof(pid_t) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.alignment = ltt_alignof(pid_t) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(pid_t);
-	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
-	field->event_field.type.u.basic.integer.base = 10;
-	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
-	field->get_size = pid_get_size;
-	field->record = pid_record;
-	wrapper_vmalloc_sync_all();
-	return 0;
-}
-EXPORT_SYMBOL_GPL(lttng_add_pid_to_ctx);
-
-MODULE_LICENSE("GPL and additional rights");
-MODULE_AUTHOR("Mathieu Desnoyers");
-MODULE_DESCRIPTION("Linux Trace Toolkit Perf Support");
-- 
1.8.4.93.g57e4c17

