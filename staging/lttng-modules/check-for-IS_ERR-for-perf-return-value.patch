From 8dbfd4851e373290a41e3d99400f15aff554c32c Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Fri, 24 Jun 2011 00:45:07 -0400
Subject: [PATCH 202/540] check for IS_ERR for perf return value

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng2/lttng-context-perf-counters.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/lttng2/lttng-context-perf-counters.c b/drivers/staging/lttng2/lttng-context-perf-counters.c
index c6f7303..5327e6e 100644
--- a/drivers/staging/lttng2/lttng-context-perf-counters.c
+++ b/drivers/staging/lttng2/lttng-context-perf-counters.c
@@ -36,7 +36,7 @@ void perf_counter_record(struct lttng_ctx_field *field,
 	uint64_t value;
 
 	event = field->u.perf_counter.e[ctx->cpu];
-	if (likely(event) && likely(event->pmu)) {
+	if (likely(event)) {
 		event->pmu->read(event);
 		value = local64_read(&event->count);
 	} else {
@@ -111,7 +111,7 @@ int __cpuinit lttng_perf_counter_cpu_hp_callback(struct notifier_block *nb,
 	case CPU_ONLINE_FROZEN:
 		pevent = perf_event_create_kernel_counter(attr,
 				cpu, NULL, overflow_callback);
-		if (!pevent)
+		if (!pevent || IS_ERR(pevent))
 			return NOTIFY_BAD;
 		barrier();	/* Create perf counter before setting event */
 		events[cpu] = pevent;
@@ -182,7 +182,7 @@ int lttng_add_perf_counter_to_ctx(uint32_t type,
 	for_each_online_cpu(cpu) {
 		events[cpu] = perf_event_create_kernel_counter(attr,
 					cpu, NULL, overflow_callback);
-		if (!events[cpu]) {
+		if (!events[cpu] || IS_ERR(events[cpu])) {
 			ret = -EINVAL;
 			goto counter_error;
 		}
@@ -210,7 +210,7 @@ int lttng_add_perf_counter_to_ctx(uint32_t type,
 
 counter_error:
 	for_each_online_cpu(cpu) {
-		if (events[cpu])
+		if (events[cpu] && !IS_ERR(events[cpu]))
 			perf_event_release_kernel(events[cpu]);
 	}
 	put_online_cpus();
-- 
1.8.4.93.g57e4c17

