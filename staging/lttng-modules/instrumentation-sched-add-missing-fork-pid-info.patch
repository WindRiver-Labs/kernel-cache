From 1da8653b6146ea2a63657d81d2179c1fc5890c67 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Fri, 22 Feb 2013 11:18:50 -0500
Subject: [PATCH 471/540] instrumentation sched: add missing fork pid info

Fixes #434

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 .../lttng2/instrumentation/events/lttng-module/sched.h        | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/staging/lttng2/instrumentation/events/lttng-module/sched.h b/drivers/staging/lttng2/instrumentation/events/lttng-module/sched.h
index 4d30fe3..e42acd2 100644
--- a/drivers/staging/lttng2/instrumentation/events/lttng-module/sched.h
+++ b/drivers/staging/lttng2/instrumentation/events/lttng-module/sched.h
@@ -327,7 +327,12 @@ TRACE_EVENT(sched_process_wait,
 )
 
 /*
- * Tracepoint for do_fork:
+ * Tracepoint for do_fork.
+ * Saving both TID and PID information, especially for the child, allows
+ * trace analyzers to distinguish between creation of a new process and
+ * creation of a new thread. Newly created processes will have child_tid
+ * == child_pid, while creation of a thread yields to child_tid !=
+ * child_pid.
  */
 TRACE_EVENT(sched_process_fork,
 
@@ -338,15 +343,19 @@ TRACE_EVENT(sched_process_fork,
 	TP_STRUCT__entry(
 		__array_text(	char,	parent_comm,	TASK_COMM_LEN	)
 		__field(	pid_t,	parent_tid			)
+		__field(	pid_t,	parent_pid			)
 		__array_text(	char,	child_comm,	TASK_COMM_LEN	)
 		__field(	pid_t,	child_tid			)
+		__field(	pid_t,	child_pid			)
 	),
 
 	TP_fast_assign(
 		tp_memcpy(parent_comm, parent->comm, TASK_COMM_LEN)
 		tp_assign(parent_tid, parent->pid)
+		tp_assign(parent_pid, parent->tgid)
 		tp_memcpy(child_comm, child->comm, TASK_COMM_LEN)
 		tp_assign(child_tid, child->pid)
+		tp_assign(child_pid, child->tgid)
 	),
 
 	TP_printk("comm=%s tid=%d child_comm=%s child_tid=%d",
-- 
1.8.4.93.g57e4c17

