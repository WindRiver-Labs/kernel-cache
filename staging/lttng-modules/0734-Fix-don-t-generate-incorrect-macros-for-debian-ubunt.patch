From 25cd2c59b31ee476457b065a787c97e88dbda568 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 14 May 2015 11:33:47 -0400
Subject: [PATCH 734/757] Fix: don't generate incorrect macros for
 debian/ubuntu version check

When the debian/ubuntu macros are unset, we end up generating macros
that have no right hand operand to "+", which seems to break compilation
on some compilers, even though it will always be optimized away.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/lttng-kernel-version.h | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/lttng/lttng-kernel-version.h b/drivers/staging/lttng/lttng-kernel-version.h
index 59e19df..46ee8ab 100644
--- a/drivers/staging/lttng/lttng-kernel-version.h
+++ b/drivers/staging/lttng/lttng-kernel-version.h
@@ -42,13 +42,16 @@
 #define LTTNG_UBUNTU_KERNEL_VERSION(a, b, c, d) \
 	(((a) << 24) + ((b) << 16) + (c << 8) + (d))
 
+#ifdef UTS_UBUNTU_RELEASE_ABI
 #define LTTNG_UBUNTU_VERSION_CODE \
 	((LINUX_VERSION_CODE << 8) + UTS_UBUNTU_RELEASE_ABI)
+#else
+#define LTTNG_UBUNTU_VERSION_CODE 	0
+#endif
 
 #define LTTNG_UBUNTU_KERNEL_RANGE(a_low, b_low, c_low, d_low, \
 		a_high, b_high, c_high, d_high) \
-	(defined(UTS_UBUNTU_RELEASE_ABI) && \
-		LTTNG_UBUNTU_VERSION_CODE >= \
+	(LTTNG_UBUNTU_VERSION_CODE >= \
 		LTTNG_UBUNTU_KERNEL_VERSION(a_low, b_low, c_low, d_low) && \
 		LTTNG_UBUNTU_VERSION_CODE < \
 		LTTNG_UBUNTU_KERNEL_VERSION(a_high, b_high, c_high, d_high))
@@ -56,13 +59,16 @@
 #define LTTNG_DEBIAN_KERNEL_VERSION(a, b, c, d, e, f) \
 	(((((a) << 16) + ((b) << 8) + (c)) * 1000000ULL) + ((d) * 10000) + ((e) * 100) + (f))
 
+#ifdef DEBIAN_API_VERSION
 #define LTTNG_DEBIAN_VERSION_CODE \
 	((LINUX_VERSION_CODE * 1000000ULL) + DEBIAN_API_VERSION)
+#else
+#define LTTNG_DEBIAN_VERSION_CODE	0
+#endif
 
 #define LTTNG_DEBIAN_KERNEL_RANGE(a_low, b_low, c_low, d_low, e_low, f_low, \
 		a_high, b_high, c_high, d_high, e_high, f_high) \
-	(defined(DEBIAN_API_VERSION) && \
-		LTTNG_DEBIAN_VERSION_CODE >= \
+	(LTTNG_DEBIAN_VERSION_CODE >= \
 		LTTNG_DEBIAN_KERNEL_VERSION(a_low, b_low, c_low, d_low, e_low, f_low) && \
 		LTTNG_DEBIAN_VERSION_CODE < \
 		LTTNG_DEBIAN_KERNEL_VERSION(a_high, b_high, c_high, d_high, e_high, f_high))
-- 
2.0.2

