From c38cf2e0d4502ea519ec0c55ba8479b27743b3c4 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Wed, 13 Mar 2013 13:49:13 -0400
Subject: [PATCH 473/933] Fix 3.8 kernel support: namespace
 lttng_is_signed_type()

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/lttng-context-hostname.c      | 2 +-
 drivers/staging/lttng/lttng-context-nice.c          | 2 +-
 drivers/staging/lttng/lttng-context-perf-counters.c | 2 +-
 drivers/staging/lttng/lttng-context-pid.c           | 2 +-
 drivers/staging/lttng/lttng-context-ppid.c          | 2 +-
 drivers/staging/lttng/lttng-context-prio.c          | 2 +-
 drivers/staging/lttng/lttng-context-procname.c      | 2 +-
 drivers/staging/lttng/lttng-context-tid.c           | 2 +-
 drivers/staging/lttng/lttng-context-vpid.c          | 2 +-
 drivers/staging/lttng/lttng-context-vppid.c         | 2 +-
 drivers/staging/lttng/lttng-context-vtid.c          | 2 +-
 drivers/staging/lttng/lttng-events.h                | 5 ++---
 drivers/staging/lttng/probes/lttng-ftrace.c         | 4 ++--
 drivers/staging/lttng/probes/lttng-kprobes.c        | 2 +-
 drivers/staging/lttng/probes/lttng-kretprobes.c     | 4 ++--
 15 files changed, 18 insertions(+), 19 deletions(-)

diff --git a/drivers/staging/lttng/lttng-context-hostname.c b/drivers/staging/lttng/lttng-context-hostname.c
index 6dc14f9..7cf7f7c 100644
--- a/drivers/staging/lttng/lttng-context-hostname.c
+++ b/drivers/staging/lttng/lttng-context-hostname.c
@@ -81,7 +81,7 @@ int lttng_add_hostname_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.u.array.elem_type.atype = atype_integer;
 	field->event_field.type.u.array.elem_type.u.basic.integer.size = sizeof(char) * CHAR_BIT;
 	field->event_field.type.u.array.elem_type.u.basic.integer.alignment = lttng_alignof(char) * CHAR_BIT;
-	field->event_field.type.u.array.elem_type.u.basic.integer.signedness = is_signed_type(char);
+	field->event_field.type.u.array.elem_type.u.basic.integer.signedness = lttng_is_signed_type(char);
 	field->event_field.type.u.array.elem_type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.array.elem_type.u.basic.integer.base = 10;
 	field->event_field.type.u.array.elem_type.u.basic.integer.encoding = lttng_encode_UTF8;
diff --git a/drivers/staging/lttng/lttng-context-nice.c b/drivers/staging/lttng/lttng-context-nice.c
index c447ce6..974910d 100644
--- a/drivers/staging/lttng/lttng-context-nice.c
+++ b/drivers/staging/lttng/lttng-context-nice.c
@@ -65,7 +65,7 @@ int lttng_add_nice_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.atype = atype_integer;
 	field->event_field.type.u.basic.integer.size = sizeof(int) * CHAR_BIT;
 	field->event_field.type.u.basic.integer.alignment = lttng_alignof(int) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(int);
+	field->event_field.type.u.basic.integer.signedness = lttng_is_signed_type(int);
 	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.basic.integer.base = 10;
 	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/lttng-context-perf-counters.c b/drivers/staging/lttng/lttng-context-perf-counters.c
index b97b40b..e0714eb 100644
--- a/drivers/staging/lttng/lttng-context-perf-counters.c
+++ b/drivers/staging/lttng/lttng-context-perf-counters.c
@@ -244,7 +244,7 @@ int lttng_add_perf_counter_to_ctx(uint32_t type,
 	field->event_field.type.atype = atype_integer;
 	field->event_field.type.u.basic.integer.size = sizeof(uint64_t) * CHAR_BIT;
 	field->event_field.type.u.basic.integer.alignment = lttng_alignof(uint64_t) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(uint64_t);
+	field->event_field.type.u.basic.integer.signedness = lttng_is_signed_type(uint64_t);
 	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.basic.integer.base = 10;
 	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/lttng-context-pid.c b/drivers/staging/lttng/lttng-context-pid.c
index 85427e6..cb64ff1 100644
--- a/drivers/staging/lttng/lttng-context-pid.c
+++ b/drivers/staging/lttng/lttng-context-pid.c
@@ -65,7 +65,7 @@ int lttng_add_pid_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.atype = atype_integer;
 	field->event_field.type.u.basic.integer.size = sizeof(pid_t) * CHAR_BIT;
 	field->event_field.type.u.basic.integer.alignment = lttng_alignof(pid_t) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(pid_t);
+	field->event_field.type.u.basic.integer.signedness = lttng_is_signed_type(pid_t);
 	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.basic.integer.base = 10;
 	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/lttng-context-ppid.c b/drivers/staging/lttng/lttng-context-ppid.c
index 58ff3fe..878c688 100644
--- a/drivers/staging/lttng/lttng-context-ppid.c
+++ b/drivers/staging/lttng/lttng-context-ppid.c
@@ -77,7 +77,7 @@ int lttng_add_ppid_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.atype = atype_integer;
 	field->event_field.type.u.basic.integer.size = sizeof(pid_t) * CHAR_BIT;
 	field->event_field.type.u.basic.integer.alignment = lttng_alignof(pid_t) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(pid_t);
+	field->event_field.type.u.basic.integer.signedness = lttng_is_signed_type(pid_t);
 	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.basic.integer.base = 10;
 	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/lttng-context-prio.c b/drivers/staging/lttng/lttng-context-prio.c
index e2f37d9..fa30ab5 100644
--- a/drivers/staging/lttng/lttng-context-prio.c
+++ b/drivers/staging/lttng/lttng-context-prio.c
@@ -86,7 +86,7 @@ int lttng_add_prio_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.atype = atype_integer;
 	field->event_field.type.u.basic.integer.size = sizeof(int) * CHAR_BIT;
 	field->event_field.type.u.basic.integer.alignment = lttng_alignof(int) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(int);
+	field->event_field.type.u.basic.integer.signedness = lttng_is_signed_type(int);
 	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.basic.integer.base = 10;
 	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/lttng-context-procname.c b/drivers/staging/lttng/lttng-context-procname.c
index 124eb5c..e9f33a1 100644
--- a/drivers/staging/lttng/lttng-context-procname.c
+++ b/drivers/staging/lttng/lttng-context-procname.c
@@ -67,7 +67,7 @@ int lttng_add_procname_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.u.array.elem_type.atype = atype_integer;
 	field->event_field.type.u.array.elem_type.u.basic.integer.size = sizeof(char) * CHAR_BIT;
 	field->event_field.type.u.array.elem_type.u.basic.integer.alignment = lttng_alignof(char) * CHAR_BIT;
-	field->event_field.type.u.array.elem_type.u.basic.integer.signedness = is_signed_type(char);
+	field->event_field.type.u.array.elem_type.u.basic.integer.signedness = lttng_is_signed_type(char);
 	field->event_field.type.u.array.elem_type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.array.elem_type.u.basic.integer.base = 10;
 	field->event_field.type.u.array.elem_type.u.basic.integer.encoding = lttng_encode_UTF8;
diff --git a/drivers/staging/lttng/lttng-context-tid.c b/drivers/staging/lttng/lttng-context-tid.c
index f6c8fd7..de745de 100644
--- a/drivers/staging/lttng/lttng-context-tid.c
+++ b/drivers/staging/lttng/lttng-context-tid.c
@@ -65,7 +65,7 @@ int lttng_add_tid_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.atype = atype_integer;
 	field->event_field.type.u.basic.integer.size = sizeof(pid_t) * CHAR_BIT;
 	field->event_field.type.u.basic.integer.alignment = lttng_alignof(pid_t) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(pid_t);
+	field->event_field.type.u.basic.integer.signedness = lttng_is_signed_type(pid_t);
 	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.basic.integer.base = 10;
 	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/lttng-context-vpid.c b/drivers/staging/lttng/lttng-context-vpid.c
index b4da467..14364b3 100644
--- a/drivers/staging/lttng/lttng-context-vpid.c
+++ b/drivers/staging/lttng/lttng-context-vpid.c
@@ -71,7 +71,7 @@ int lttng_add_vpid_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.atype = atype_integer;
 	field->event_field.type.u.basic.integer.size = sizeof(pid_t) * CHAR_BIT;
 	field->event_field.type.u.basic.integer.alignment = lttng_alignof(pid_t) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(pid_t);
+	field->event_field.type.u.basic.integer.signedness = lttng_is_signed_type(pid_t);
 	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.basic.integer.base = 10;
 	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/lttng-context-vppid.c b/drivers/staging/lttng/lttng-context-vppid.c
index 06377a3..e36b555 100644
--- a/drivers/staging/lttng/lttng-context-vppid.c
+++ b/drivers/staging/lttng/lttng-context-vppid.c
@@ -86,7 +86,7 @@ int lttng_add_vppid_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.atype = atype_integer;
 	field->event_field.type.u.basic.integer.size = sizeof(pid_t) * CHAR_BIT;
 	field->event_field.type.u.basic.integer.alignment = lttng_alignof(pid_t) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(pid_t);
+	field->event_field.type.u.basic.integer.signedness = lttng_is_signed_type(pid_t);
 	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.basic.integer.base = 10;
 	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/lttng-context-vtid.c b/drivers/staging/lttng/lttng-context-vtid.c
index 0ad21fa..c98bdf1 100644
--- a/drivers/staging/lttng/lttng-context-vtid.c
+++ b/drivers/staging/lttng/lttng-context-vtid.c
@@ -71,7 +71,7 @@ int lttng_add_vtid_to_ctx(struct lttng_ctx **ctx)
 	field->event_field.type.atype = atype_integer;
 	field->event_field.type.u.basic.integer.size = sizeof(pid_t) * CHAR_BIT;
 	field->event_field.type.u.basic.integer.alignment = lttng_alignof(pid_t) * CHAR_BIT;
-	field->event_field.type.u.basic.integer.signedness = is_signed_type(pid_t);
+	field->event_field.type.u.basic.integer.signedness = lttng_is_signed_type(pid_t);
 	field->event_field.type.u.basic.integer.reverse_byte_order = 0;
 	field->event_field.type.u.basic.integer.base = 10;
 	field->event_field.type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/lttng-events.h b/drivers/staging/lttng/lttng-events.h
index 09d5618..37a5db7 100644
--- a/drivers/staging/lttng/lttng-events.h
+++ b/drivers/staging/lttng/lttng-events.h
@@ -30,8 +30,7 @@
 #include "lttng-abi.h"
 #include "lttng-abi-old.h"
 
-#undef is_signed_type
-#define is_signed_type(type)		(((type)(-1)) < 0)
+#define lttng_is_signed_type(type)	(((type)(-1)) < 0)
 
 struct lttng_channel;
 struct lttng_session;
@@ -71,7 +70,7 @@ struct lttng_enum_entry {
 		{						\
 		  .size = sizeof(_type) * CHAR_BIT,		\
 		  .alignment = lttng_alignof(_type) * CHAR_BIT,	\
-		  .signedness = is_signed_type(_type),		\
+		  .signedness = lttng_is_signed_type(_type),	\
 		  .reverse_byte_order = _byte_order != __BYTE_ORDER,	\
 		  .base = _base,				\
 		  .encoding = lttng_encode_##_encoding,		\
diff --git a/drivers/staging/lttng/probes/lttng-ftrace.c b/drivers/staging/lttng/probes/lttng-ftrace.c
index 53ffc0f..bb70df6 100644
--- a/drivers/staging/lttng/probes/lttng-ftrace.c
+++ b/drivers/staging/lttng/probes/lttng-ftrace.c
@@ -100,7 +100,7 @@ int lttng_create_ftrace_event(const char *name, struct lttng_event *event)
 	fields[0].type.atype = atype_integer;
 	fields[0].type.u.basic.integer.size = sizeof(unsigned long) * CHAR_BIT;
 	fields[0].type.u.basic.integer.alignment = lttng_alignof(unsigned long) * CHAR_BIT;
-	fields[0].type.u.basic.integer.signedness = is_signed_type(unsigned long);
+	fields[0].type.u.basic.integer.signedness = lttng_is_signed_type(unsigned long);
 	fields[0].type.u.basic.integer.reverse_byte_order = 0;
 	fields[0].type.u.basic.integer.base = 16;
 	fields[0].type.u.basic.integer.encoding = lttng_encode_none;
@@ -109,7 +109,7 @@ int lttng_create_ftrace_event(const char *name, struct lttng_event *event)
 	fields[1].type.atype = atype_integer;
 	fields[1].type.u.basic.integer.size = sizeof(unsigned long) * CHAR_BIT;
 	fields[1].type.u.basic.integer.alignment = lttng_alignof(unsigned long) * CHAR_BIT;
-	fields[1].type.u.basic.integer.signedness = is_signed_type(unsigned long);
+	fields[1].type.u.basic.integer.signedness = lttng_is_signed_type(unsigned long);
 	fields[1].type.u.basic.integer.reverse_byte_order = 0;
 	fields[1].type.u.basic.integer.base = 16;
 	fields[1].type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/probes/lttng-kprobes.c b/drivers/staging/lttng/probes/lttng-kprobes.c
index 4398dc6..fbd24e1 100644
--- a/drivers/staging/lttng/probes/lttng-kprobes.c
+++ b/drivers/staging/lttng/probes/lttng-kprobes.c
@@ -85,7 +85,7 @@ int lttng_create_kprobe_event(const char *name, struct lttng_event *event)
 	field->type.atype = atype_integer;
 	field->type.u.basic.integer.size = sizeof(unsigned long) * CHAR_BIT;
 	field->type.u.basic.integer.alignment = lttng_alignof(unsigned long) * CHAR_BIT;
-	field->type.u.basic.integer.signedness = is_signed_type(unsigned long);
+	field->type.u.basic.integer.signedness = lttng_is_signed_type(unsigned long);
 	field->type.u.basic.integer.reverse_byte_order = 0;
 	field->type.u.basic.integer.base = 16;
 	field->type.u.basic.integer.encoding = lttng_encode_none;
diff --git a/drivers/staging/lttng/probes/lttng-kretprobes.c b/drivers/staging/lttng/probes/lttng-kretprobes.c
index 5b63c45..6b5e046 100644
--- a/drivers/staging/lttng/probes/lttng-kretprobes.c
+++ b/drivers/staging/lttng/probes/lttng-kretprobes.c
@@ -139,7 +139,7 @@ int lttng_create_kprobe_event(const char *name, struct lttng_event *event,
 	fields[0].type.atype = atype_integer;
 	fields[0].type.u.basic.integer.size = sizeof(unsigned long) * CHAR_BIT;
 	fields[0].type.u.basic.integer.alignment = lttng_alignof(unsigned long) * CHAR_BIT;
-	fields[0].type.u.basic.integer.signedness = is_signed_type(unsigned long);
+	fields[0].type.u.basic.integer.signedness = lttng_is_signed_type(unsigned long);
 	fields[0].type.u.basic.integer.reverse_byte_order = 0;
 	fields[0].type.u.basic.integer.base = 16;
 	fields[0].type.u.basic.integer.encoding = lttng_encode_none;
@@ -148,7 +148,7 @@ int lttng_create_kprobe_event(const char *name, struct lttng_event *event,
 	fields[1].type.atype = atype_integer;
 	fields[1].type.u.basic.integer.size = sizeof(unsigned long) * CHAR_BIT;
 	fields[1].type.u.basic.integer.alignment = lttng_alignof(unsigned long) * CHAR_BIT;
-	fields[1].type.u.basic.integer.signedness = is_signed_type(unsigned long);
+	fields[1].type.u.basic.integer.signedness = lttng_is_signed_type(unsigned long);
 	fields[1].type.u.basic.integer.reverse_byte_order = 0;
 	fields[1].type.u.basic.integer.base = 16;
 	fields[1].type.u.basic.integer.encoding = lttng_encode_none;
-- 
2.0.2

