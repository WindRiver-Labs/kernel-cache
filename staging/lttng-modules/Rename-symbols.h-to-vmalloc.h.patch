From c8b60de7566727643858f1014d149a6ac06cf43d Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Wed, 11 May 2011 09:29:39 -0400
Subject: [PATCH 065/625] Rename symbols.h to vmalloc.h

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Signed-off-by: Jianchuan Wang <jianchuan.wang@windriver.com>
---
 .../lttng2/lib/ringbuffer/ring_buffer_backend.c    |  2 +-
 drivers/staging/lttng2/ltt-debugfs-abi.c           |  2 +-
 drivers/staging/lttng2/ltt-events.c                |  2 +-
 drivers/staging/lttng2/ltt-ring-buffer-client.h    |  2 +-
 drivers/staging/lttng2/probes/lttng-events.h       |  2 +-
 drivers/staging/lttng2/probes/lttng-types.c        |  2 +-
 drivers/staging/lttng2/wrapper/symbols.h           | 43 -------------------
 drivers/staging/lttng2/wrapper/vmalloc.h           | 48 ++++++++++++++++++++++
 8 files changed, 54 insertions(+), 49 deletions(-)
 delete mode 100644 drivers/staging/lttng2/wrapper/symbols.h
 create mode 100644 drivers/staging/lttng2/wrapper/vmalloc.h

diff --git a/drivers/staging/lttng2/lib/ringbuffer/ring_buffer_backend.c b/drivers/staging/lttng2/lib/ringbuffer/ring_buffer_backend.c
index 2d272c7..2ddb9f9 100644
--- a/drivers/staging/lttng2/lib/ringbuffer/ring_buffer_backend.c
+++ b/drivers/staging/lttng2/lib/ringbuffer/ring_buffer_backend.c
@@ -16,7 +16,7 @@
 #include <linux/cpu.h>
 #include <linux/mm.h>
 
-#include "../../wrapper/symbols.h"	/* for wrapper_vmalloc_sync_all() */
+#include "../../wrapper/vmalloc.h"	/* for wrapper_vmalloc_sync_all() */
 #include "../../wrapper/ringbuffer/config.h"
 #include "../../wrapper/ringbuffer/backend.h"
 #include "../../wrapper/ringbuffer/frontend.h"
diff --git a/drivers/staging/lttng2/ltt-debugfs-abi.c b/drivers/staging/lttng2/ltt-debugfs-abi.c
index 4319ef3..afee47c 100644
--- a/drivers/staging/lttng2/ltt-debugfs-abi.c
+++ b/drivers/staging/lttng2/ltt-debugfs-abi.c
@@ -28,7 +28,7 @@
 #include <linux/file.h>
 #include <linux/uaccess.h>
 #include <linux/slab.h>
-#include "wrapper/symbols.h"	/* for wrapper_vmalloc_sync_all() */
+#include "wrapper/vmalloc.h"	/* for wrapper_vmalloc_sync_all() */
 #include "wrapper/ringbuffer/vfs.h"
 #include "ltt-debugfs-abi.h"
 #include "ltt-events.h"
diff --git a/drivers/staging/lttng2/ltt-events.c b/drivers/staging/lttng2/ltt-events.c
index 9eb2c2f2..512e7a2 100644
--- a/drivers/staging/lttng2/ltt-events.c
+++ b/drivers/staging/lttng2/ltt-events.c
@@ -11,7 +11,7 @@
 #include <linux/mutex.h>
 #include <linux/sched.h>
 #include <linux/slab.h>
-#include "wrapper/symbols.h"	/* for wrapper_vmalloc_sync_all() */
+#include "wrapper/vmalloc.h"	/* for wrapper_vmalloc_sync_all() */
 #include "ltt-events.h"
 
 static LIST_HEAD(sessions);
diff --git a/drivers/staging/lttng2/ltt-ring-buffer-client.h b/drivers/staging/lttng2/ltt-ring-buffer-client.h
index 00cac16..219f69b 100644
--- a/drivers/staging/lttng2/ltt-ring-buffer-client.h
+++ b/drivers/staging/lttng2/ltt-ring-buffer-client.h
@@ -10,7 +10,7 @@
 
 #include <linux/module.h>
 #include <linux/types.h>
-#include "wrapper/symbols.h"	/* for wrapper_vmalloc_sync_all() */
+#include "wrapper/vmalloc.h"	/* for wrapper_vmalloc_sync_all() */
 #include "wrapper/trace-clock.h"
 #include "ltt-events.h"
 #include "ltt-tracer.h"
diff --git a/drivers/staging/lttng2/probes/lttng-events.h b/drivers/staging/lttng2/probes/lttng-events.h
index f697ead..f031d45 100644
--- a/drivers/staging/lttng2/probes/lttng-events.h
+++ b/drivers/staging/lttng2/probes/lttng-events.h
@@ -1,7 +1,7 @@
 #include <lttng.h>
 #include <lttng-types.h>
 #include <linux/debugfs.h>
-#include "../wrapper/symbols.h"	/* for wrapper_vmalloc_sync_all() */
+#include "../wrapper/vmalloc.h"	/* for wrapper_vmalloc_sync_all() */
 #include "../wrapper/ringbuffer/frontend_types.h"
 #include "../ltt-events.h"
 #include "../ltt-tracer-core.h"
diff --git a/drivers/staging/lttng2/probes/lttng-types.c b/drivers/staging/lttng2/probes/lttng-types.c
index 7f9d20e..c447b7d 100644
--- a/drivers/staging/lttng2/probes/lttng-types.c
+++ b/drivers/staging/lttng2/probes/lttng-types.c
@@ -11,7 +11,7 @@
 #include <linux/seq_file.h>
 #include <linux/jbd.h>	/* tid_t */
 #include <linux/debugfs.h>
-#include "../wrapper/symbols.h"	/* for wrapper_vmalloc_sync_all() */
+#include "../wrapper/vmalloc.h"	/* for wrapper_vmalloc_sync_all() */
 #include "lttng-types.h"
 
 struct dentry *lttng_types_dentry;
diff --git a/drivers/staging/lttng2/wrapper/symbols.h b/drivers/staging/lttng2/wrapper/symbols.h
deleted file mode 100644
index 523f553..0000000
--- a/drivers/staging/lttng2/wrapper/symbols.h
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Copyright (C) 2011 Mathieu Desnoyers (mathieu.desnoyers@efficios.com)
- *
- * wrapper around vmalloc_sync_all. Using KALLSYMS to get its address when
- * available, else we need to have a kernel that exports this function to GPL
- * modules.
- *
- * Dual LGPL v2.1/GPL v2 license.
- */
-
-#ifdef CONFIG_KALLSYMS
-
-#include <linux/kallsyms.h>
-
-static inline
-void wrapper_vmalloc_sync_all(void)
-{
-	void (*vmalloc_sync_all_sym)(void);
-
-	vmalloc_sync_all_sym = (void *) kallsyms_lookup_name("vmalloc_sync_all");
-	if (vmalloc_sync_all_sym) {
-		vmalloc_sync_all_sym();
-	} else {
-#ifdef CONFIG_X86
-		/*
-		 * Only x86 needs vmalloc_sync_all to make sure LTTng does not
-		 * trigger recursive page faults.
-		 */
-		printk(KERN_WARNING "LTTng: vmalloc_sync_all symbol lookup failed.\n");
-		printk(KERN_WARNING "Page fault handler and NMI tracing might trigger faults.\n");
-#endif
-	}
-}
-#else
-
-#include <linux/vmalloc.h>
-
-static inline
-void wrapper_vmalloc_sync_all(void)
-{
-	return vmalloc_sync_all();
-}
-#endif
diff --git a/drivers/staging/lttng2/wrapper/vmalloc.h b/drivers/staging/lttng2/wrapper/vmalloc.h
new file mode 100644
index 0000000..7d87855
--- /dev/null
+++ b/drivers/staging/lttng2/wrapper/vmalloc.h
@@ -0,0 +1,48 @@
+#ifndef _LTT_WRAPPER_VMALLOC_H
+#define _LTT_WRAPPER_VMALLOC_H
+
+/*
+ * Copyright (C) 2011 Mathieu Desnoyers (mathieu.desnoyers@efficios.com)
+ *
+ * wrapper around vmalloc_sync_all. Using KALLSYMS to get its address when
+ * available, else we need to have a kernel that exports this function to GPL
+ * modules.
+ *
+ * Dual LGPL v2.1/GPL v2 license.
+ */
+
+#ifdef CONFIG_KALLSYMS
+
+#include <linux/kallsyms.h>
+
+static inline
+void wrapper_vmalloc_sync_all(void)
+{
+	void (*vmalloc_sync_all_sym)(void);
+
+	vmalloc_sync_all_sym = (void *) kallsyms_lookup_name("vmalloc_sync_all");
+	if (vmalloc_sync_all_sym) {
+		vmalloc_sync_all_sym();
+	} else {
+#ifdef CONFIG_X86
+		/*
+		 * Only x86 needs vmalloc_sync_all to make sure LTTng does not
+		 * trigger recursive page faults.
+		 */
+		printk(KERN_WARNING "LTTng: vmalloc_sync_all symbol lookup failed.\n");
+		printk(KERN_WARNING "Page fault handler and NMI tracing might trigger faults.\n");
+#endif
+	}
+}
+#else
+
+#include <linux/vmalloc.h>
+
+static inline
+void wrapper_vmalloc_sync_all(void)
+{
+	return vmalloc_sync_all();
+}
+#endif
+
+#endif /* _LTT_WRAPPER_VMALLOC_H */
-- 
2.0.2

