From 1e6cec5eb96241e1e9ba707ca29f43afd358c4bf Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Sat, 11 Jun 2011 13:48:40 -0400
Subject: [PATCH 182/757] Revert poll exclusive

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/Makefile                     |  3 +-
 drivers/staging/lttng/lib/Makefile                 |  1 -
 .../staging/lttng/lib/ringbuffer/ring_buffer_vfs.c |  2 +-
 drivers/staging/lttng/ltt-debugfs-abi.c            |  2 +-
 drivers/staging/lttng/wrapper/poll.c               | 61 ----------------------
 drivers/staging/lttng/wrapper/poll.h               | 10 ++--
 6 files changed, 6 insertions(+), 73 deletions(-)
 delete mode 100644 drivers/staging/lttng/wrapper/poll.c

diff --git a/drivers/staging/lttng/Makefile b/drivers/staging/lttng/Makefile
index d6f1a88..dc44fd4 100644
--- a/drivers/staging/lttng/Makefile
+++ b/drivers/staging/lttng/Makefile
@@ -13,8 +13,7 @@ obj-m += ltt-relay.o
 ltt-relay-objs :=  ltt-events.o ltt-debugfs-abi.o \
 			ltt-probes.o ltt-core.o ltt-context.o \
 			lttng-context-pid.o lttng-context-comm.o \
-			lttng-context-prio.o lttng-context-nice.o \
-			wrapper/poll.o
+			lttng-context-prio.o lttng-context-nice.o
 
 ifneq ($(CONFIG_PERF_EVENTS),)
 ltt-relay-objs += lttng-context-perf-counters.o
diff --git a/drivers/staging/lttng/lib/Makefile b/drivers/staging/lttng/lib/Makefile
index 3fc82ed..e5735ec 100644
--- a/drivers/staging/lttng/lib/Makefile
+++ b/drivers/staging/lttng/lib/Makefile
@@ -8,5 +8,4 @@ lib-ring-buffer-objs := \
 	ringbuffer/ring_buffer_splice.o \
 	ringbuffer/ring_buffer_mmap.o \
 	prio_heap/lttng_prio_heap.o \
-	../wrapper/poll.o \
 	../wrapper/splice.o
diff --git a/drivers/staging/lttng/lib/ringbuffer/ring_buffer_vfs.c b/drivers/staging/lttng/lib/ringbuffer/ring_buffer_vfs.c
index fecef21..9786d35 100644
--- a/drivers/staging/lttng/lib/ringbuffer/ring_buffer_vfs.c
+++ b/drivers/staging/lttng/lib/ringbuffer/ring_buffer_vfs.c
@@ -89,7 +89,7 @@ unsigned int lib_ring_buffer_poll(struct file *filp, poll_table *wait)
 	int finalized, disabled;
 
 	if (filp->f_mode & FMODE_READ) {
-		init_poll_funcptr(wait, wrapper_pollwait_exclusive);
+		poll_wait_set_exclusive(wait);
 		poll_wait(filp, &buf->read_wait, wait);
 
 		finalized = lib_ring_buffer_is_finalized(config, buf);
diff --git a/drivers/staging/lttng/ltt-debugfs-abi.c b/drivers/staging/lttng/ltt-debugfs-abi.c
index f8bee49..e3f5b55 100644
--- a/drivers/staging/lttng/ltt-debugfs-abi.c
+++ b/drivers/staging/lttng/ltt-debugfs-abi.c
@@ -564,7 +564,7 @@ unsigned int lttng_channel_poll(struct file *file, poll_table *wait)
 	unsigned int mask = 0;
 
 	if (file->f_mode & FMODE_READ) {
-		init_poll_funcptr(wait, wrapper_pollwait_exclusive);
+		poll_wait_set_exclusive(wait);
 		poll_wait(file, channel->ops->get_hp_wait_queue(channel->chan),
 			  wait);
 
diff --git a/drivers/staging/lttng/wrapper/poll.c b/drivers/staging/lttng/wrapper/poll.c
deleted file mode 100644
index f3f76fe..0000000
--- a/drivers/staging/lttng/wrapper/poll.c
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Copyright (C) 2011 Mathieu Desnoyers (mathieu.desnoyers@efficios.com)
- *
- * wrapper around poll __pollwait and poll_get_entry. Using KALLSYMS to get its
- * address when available, else we need to have a kernel that exports this
- * function to GPL modules.
- *
- * Dual LGPL v2.1/GPL v2 license.
- */
-
-#ifdef CONFIG_KALLSYMS
-
-#include <linux/kallsyms.h>
-#include <linux/poll.h>
-
-struct poll_table_entry;
-struct splice_pipe_desc;
-
-static
-void (*__pollwait_sym)(struct file *filp, wait_queue_head_t *wait_address,
-		poll_table *p);
-static
-struct poll_table_entry *(*poll_get_entry_sym)(struct poll_wqueues *p);
-
-void wrapper_pollwait_exclusive(struct file *filp,
-			 wait_queue_head_t *wait_address,
-			 poll_table *p)
-
-{
-	struct poll_wqueues *pwq = container_of(p, struct poll_wqueues, pt);
-	struct poll_table_entry *entry;
-
-	if (!poll_get_entry_sym)
-		poll_get_entry_sym = (void *) kallsyms_lookup_name("poll_get_entry");
-	if (!poll_get_entry_sym) {
-		printk(KERN_WARNING "LTTng: poll_get_entry_sym symbol lookup failed.\n");
-		return;
-	}
-	entry = poll_get_entry_sym(pwq);
-
-	if (!__pollwait_sym)
-		__pollwait_sym = (void *) kallsyms_lookup_name("__pollwait");
-	if (!__pollwait_sym) {
-		printk(KERN_WARNING "LTTng: __pollwait symbol lookup failed.\n");
-		return;
-	}
-	return __pollwait_sym(filp, wait_address, p);
-}
-
-#else
-
-#include <linux/poll.h>
-
-ssize_t wrapper_pollwait_exclusive(struct file *filp,
-			wait_queue_head_t *wait_address,
-			poll_table *p)
-{
-	return pollwait_exclusive(filp, wait_address, p);
-}
-
-#endif
diff --git a/drivers/staging/lttng/wrapper/poll.h b/drivers/staging/lttng/wrapper/poll.h
index ae52473..080717b 100644
--- a/drivers/staging/lttng/wrapper/poll.h
+++ b/drivers/staging/lttng/wrapper/poll.h
@@ -4,17 +4,13 @@
 /*
  * Copyright (C) 2011 Mathieu Desnoyers (mathieu.desnoyers@efficios.com)
  *
- * wrapper around poll __pollwait and poll_get_entry. Using KALLSYMS to get its
- * address when available, else we need to have a kernel that exports this
- * function to GPL modules.
- *
  * Dual LGPL v2.1/GPL v2 license.
  */
 
 #include <linux/poll.h>
 
-void wrapper_pollwait_exclusive(struct file *filp,
-			 wait_queue_head_t *wait_address,
-			 poll_table *p);
+#warning "poll_wait_set_exclusive() is defined as no-op. Thundering herd effect can be noticed with large number of consumer threads."
+
+#define poll_wait_set_exclusive(poll_table)
 
 #endif /* _LTTNG_WRAPPER_POLL_H */
-- 
2.0.2

