From 9fb0a8bc57cf972bb030b94b72a0553198bbdaba Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Tue, 26 Apr 2016 18:41:04 -0400
Subject: [PATCH 896/933] Fix: endianness of integers received by filter

We need to byteswap integers passed to the filter when they are tagged
as being in an endianness which differs from the architecture
endianness, so the integer comparisons make sense in terms of value
rather than raw bytes for those fields.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/probes/lttng-tracepoint-event-impl.h | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/staging/lttng/probes/lttng-tracepoint-event-impl.h b/drivers/staging/lttng/probes/lttng-tracepoint-event-impl.h
index a87d146..ba906ac 100644
--- a/drivers/staging/lttng/probes/lttng-tracepoint-event-impl.h
+++ b/drivers/staging/lttng/probes/lttng-tracepoint-event-impl.h
@@ -23,6 +23,7 @@
 #include <linux/debugfs.h>
 #include <linux/rculist.h>
 #include <asm/byteorder.h>
+#include <linux/swab.h>
 
 #include <probes/lttng.h>
 #include <probes/lttng-types.h>
@@ -457,18 +458,24 @@ static inline size_t __event_get_size__##_name(size_t *__dynamic_len,	      \
 		case 2:							       \
 		{							       \
 			union { _type t; int16_t v; } __tmp = { (_type) (_src) }; \
+			if (_byte_order != __BYTE_ORDER)		       \
+				__swab16s(&__tmp.v);			       \
 			__ctf_tmp_int64 = (int64_t) __tmp.v;		       \
 			break;						       \
 		}							       \
 		case 4:							       \
 		{							       \
 			union { _type t; int32_t v; } __tmp = { (_type) (_src) }; \
+			if (_byte_order != __BYTE_ORDER)		       \
+				__swab32s(&__tmp.v);			       \
 			__ctf_tmp_int64 = (int64_t) __tmp.v;		       \
 			break;						       \
 		}							       \
 		case 8:							       \
 		{							       \
 			union { _type t; int64_t v; } __tmp = { (_type) (_src) }; \
+			if (_byte_order != __BYTE_ORDER)		       \
+				__swab64s(&__tmp.v);			       \
 			__ctf_tmp_int64 = (int64_t) __tmp.v;		       \
 			break;						       \
 		}							       \
@@ -488,18 +495,24 @@ static inline size_t __event_get_size__##_name(size_t *__dynamic_len,	      \
 		case 2:							       \
 		{							       \
 			union { _type t; uint16_t v; } __tmp = { (_type) (_src) }; \
+			if (_byte_order != __BYTE_ORDER)		       \
+				__swab16s(&__tmp.v);			       \
 			__ctf_tmp_uint64 = (uint64_t) __tmp.v;		       \
 			break;						       \
 		}							       \
 		case 4:							       \
 		{							       \
 			union { _type t; uint32_t v; } __tmp = { (_type) (_src) }; \
+			if (_byte_order != __BYTE_ORDER)		       \
+				__swab32s(&__tmp.v);			       \
 			__ctf_tmp_uint64 = (uint64_t) __tmp.v;		       \
 			break;						       \
 		}							       \
 		case 8:							       \
 		{							       \
 			union { _type t; uint64_t v; } __tmp = { (_type) (_src) }; \
+			if (_byte_order != __BYTE_ORDER)		       \
+				__swab64s(&__tmp.v);			       \
 			__ctf_tmp_uint64 = (uint64_t) __tmp.v;		       \
 			break;						       \
 		}							       \
-- 
2.0.2

