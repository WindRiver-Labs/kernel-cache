From 16f81c53e1b6237bd59242cf20b246d403b9d3c7 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Tue, 8 Mar 2016 11:34:01 -0500
Subject: [PATCH 860/933] Fix: filter interpreter with userspace strings

The filter interpreter is populating the "str" register field, but the
string comparison functions expect to use the "user_str" register field
whenever it deals with a userspace string ("user" flag set to 1).

Since we are using __copy_from_user_inatomic(), this is typically
bailing out on anything that requires to read the string (except the '*'
wildcard).

Fixes #943

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/lttng-filter-interpreter.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/lttng/lttng-filter-interpreter.c b/drivers/staging/lttng/lttng-filter-interpreter.c
index c288cc0..713a9d7 100644
--- a/drivers/staging/lttng/lttng-filter-interpreter.c
+++ b/drivers/staging/lttng/lttng-filter-interpreter.c
@@ -818,7 +818,7 @@ uint64_t lttng_filter_interpret_bytecode(void *filter_data,
 			dbg_printk("load field ref offset %u type user string\n",
 				ref->offset);
 			estack_push(stack, top, ax, bx);
-			estack_ax(stack, top)->u.s.str =
+			estack_ax(stack, top)->u.s.user_str =
 				*(const char * const *) &filter_stack_data[ref->offset];
 			if (unlikely(!estack_ax(stack, top)->u.s.str)) {
 				dbg_printk("Filter warning: loading a NULL string.\n");
@@ -843,7 +843,7 @@ uint64_t lttng_filter_interpret_bytecode(void *filter_data,
 			estack_push(stack, top, ax, bx);
 			estack_ax(stack, top)->u.s.seq_len =
 				*(unsigned long *) &filter_stack_data[ref->offset];
-			estack_ax(stack, top)->u.s.str =
+			estack_ax(stack, top)->u.s.user_str =
 				*(const char **) (&filter_stack_data[ref->offset
 								+ sizeof(unsigned long)]);
 			if (unlikely(!estack_ax(stack, top)->u.s.str)) {
-- 
2.0.2

