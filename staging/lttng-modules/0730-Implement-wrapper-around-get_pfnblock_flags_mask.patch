From 5f91afdef6e4688cb10ff9ca5d01473f86eb17eb Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 16 Apr 2015 17:15:45 -0400
Subject: [PATCH 730/933] Implement wrapper around get_pfnblock_flags_mask

This is used by kmem instrumentation, and changed in 4.0.0. This change
has been backported to 3.19.2 stable kernel.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/Makefile                  |  1 +
 drivers/staging/lttng/lttng-events.c            | 10 +++-
 drivers/staging/lttng/probes/lttng-probe-kmem.c |  5 ++
 drivers/staging/lttng/wrapper/page_alloc.c      | 68 +++++++++++++++++++++++++
 drivers/staging/lttng/wrapper/page_alloc.h      | 54 ++++++++++++++++++++
 5 files changed, 137 insertions(+), 1 deletion(-)
 create mode 100644 drivers/staging/lttng/wrapper/page_alloc.c
 create mode 100644 drivers/staging/lttng/wrapper/page_alloc.h

diff --git a/drivers/staging/lttng/Makefile b/drivers/staging/lttng/Makefile
index 283cc46..bdbd5b3 100644
--- a/drivers/staging/lttng/Makefile
+++ b/drivers/staging/lttng/Makefile
@@ -36,6 +36,7 @@ lttng-tracer-objs :=  lttng-events.o lttng-abi.o \
 			lttng-context-vppid.o lttng-calibrate.o \
 			lttng-context-hostname.o wrapper/random.o \
 			probes/lttng.o wrapper/trace-clock.o \
+			wrapper/page_alloc.o \
 			lttng-tracker-pid.o \
 			lttng-filter.o lttng-filter-interpreter.o \
 			lttng-filter-specialize.o \
diff --git a/drivers/staging/lttng/lttng-events.c b/drivers/staging/lttng/lttng-events.c
index 65bd0bf..053f125 100644
--- a/drivers/staging/lttng/lttng-events.c
+++ b/drivers/staging/lttng/lttng-events.c
@@ -20,6 +20,12 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
+/*
+ * This page_alloc.h wrapper needs to be included before gfpflags.h because it
+ * overrides a function with a define.
+ */
+#include "wrapper/page_alloc.h"
+
 #include <linux/module.h>
 #include <linux/mutex.h>
 #include <linux/sched.h>
@@ -2115,7 +2121,9 @@ static int __init lttng_events_init(void)
 	ret = wrapper_lttng_fixup_sig(THIS_MODULE);
 	if (ret)
 		return ret;
-
+	ret = wrapper_get_pfnblock_flags_mask_init();
+	if (ret)
+		return ret;
 	ret = lttng_context_init();
 	if (ret)
 		return ret;
diff --git a/drivers/staging/lttng/probes/lttng-probe-kmem.c b/drivers/staging/lttng/probes/lttng-probe-kmem.c
index c8252ec..0120241 100644
--- a/drivers/staging/lttng/probes/lttng-probe-kmem.c
+++ b/drivers/staging/lttng/probes/lttng-probe-kmem.c
@@ -21,6 +21,11 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
+/*
+ * This page_alloc.h wrapper needs to be included before gfpflags.h because it
+ * overrides a function with a define.
+ */
+#include "../wrapper/page_alloc.h"
 #include <linux/module.h>
 #include "../lttng-tracer.h"
 
diff --git a/drivers/staging/lttng/wrapper/page_alloc.c b/drivers/staging/lttng/wrapper/page_alloc.c
new file mode 100644
index 0000000..184ec71
--- /dev/null
+++ b/drivers/staging/lttng/wrapper/page_alloc.c
@@ -0,0 +1,68 @@
+/*
+ * wrapper/page_alloc.c
+ *
+ * wrapper around get_pfnblock_flags_mask. Using KALLSYMS to get its address
+ * when available, else we need to have a kernel that exports this function to
+ * GPL modules.
+ *
+ * Copyright (C) 2015 Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; only
+ * version 2.1 of the License.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+#include "../lttng-kernel-version.h"
+
+#if defined(CONFIG_KALLSYMS) && (LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,2))
+
+#include <linux/kallsyms.h>
+#include <linux/mm_types.h>
+#include <linux/module.h>
+#include "kallsyms.h"
+#include "page_alloc.h"
+
+static
+unsigned long (*get_pfnblock_flags_mask_sym)(struct page *page,
+		unsigned long pfn,
+		unsigned long end_bitidx,
+		unsigned long mask);
+
+unsigned long wrapper_get_pfnblock_flags_mask(struct page *page,
+		unsigned long pfn,
+		unsigned long end_bitidx,
+		unsigned long mask)
+{
+	WARN_ON_ONCE(!get_pfnblock_flags_mask_sym);
+	if (get_pfnblock_flags_mask_sym) {
+		return get_pfnblock_flags_mask_sym(page, pfn, end_bitidx, mask);
+	} else {
+		return -ENOSYS;
+	}
+}
+EXPORT_SYMBOL_GPL(wrapper_get_pfnblock_flags_mask);
+
+int wrapper_get_pfnblock_flags_mask_init(void)
+{
+	get_pfnblock_flags_mask_sym =
+		(void *) kallsyms_lookup_funcptr("get_pfnblock_flags_mask");
+	if (!get_pfnblock_flags_mask_sym)
+		return -1;
+	return 0;
+}
+
+#else /* #if defined(CONFIG_KALLSYMS) && (LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,2)) */
+
+#include <linux/pageblock-flags.h>
+
+#endif /* #else #if defined(CONFIG_KALLSYMS) && (LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,2)) */
diff --git a/drivers/staging/lttng/wrapper/page_alloc.h b/drivers/staging/lttng/wrapper/page_alloc.h
new file mode 100644
index 0000000..06e2ddc
--- /dev/null
+++ b/drivers/staging/lttng/wrapper/page_alloc.h
@@ -0,0 +1,54 @@
+#ifndef _LTTNG_WRAPPER_PAGE_ALLOC_H
+#define _LTTNG_WRAPPER_PAGE_ALLOC_H
+
+/*
+ * wrapper/page_alloc.h
+ *
+ * wrapper around get_pfnblock_flags_mask. Using KALLSYMS to get its address
+ * when available, else we need to have a kernel that exports this function to
+ * GPL modules.
+ *
+ * Copyright (C) 2015 Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; only
+ * version 2.1 of the License.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+#include "../lttng-kernel-version.h"
+
+/*
+ * We need to redefine get_pfnblock_flags_mask to our wrapper, because
+ * the get_pageblock_migratetype() macro uses it.
+ */
+#if defined(CONFIG_KALLSYMS) && (LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,2))
+
+#define get_pfnblock_flags_mask		wrapper_get_pfnblock_flags_mask
+
+#include <linux/mm_types.h>
+
+int wrapper_get_pfnblock_flags_mask_init(void);
+
+#else /* #if defined(CONFIG_KALLSYMS) && (LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,2)) */
+
+#include <linux/mm_types.h>
+
+static inline
+int wrapper_get_pfnblock_flags_mask_init(void)
+{
+	return 0;
+}
+
+#endif /* else #if defined(CONFIG_KALLSYMS) && (LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,2)) */
+
+#endif /* _LTTNG_WRAPPER_PAGE_ALLOC_H */
-- 
2.0.2

