From c56cd8dda8ca5e65e904938e1bf840239568e06a Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Wed, 11 May 2011 11:25:40 -0400
Subject: [PATCH 070/933] Update nohz

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/lib/ringbuffer/ring_buffer_frontend.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/lttng/lib/ringbuffer/ring_buffer_frontend.c b/drivers/staging/lttng/lib/ringbuffer/ring_buffer_frontend.c
index 9ecabb0..d48d66b 100644
--- a/drivers/staging/lttng/lib/ringbuffer/ring_buffer_frontend.c
+++ b/drivers/staging/lttng/lib/ringbuffer/ring_buffer_frontend.c
@@ -437,7 +437,7 @@ int __cpuinit lib_ring_buffer_cpu_hp_callback(struct notifier_block *nb,
 }
 #endif
 
-#if defined(CONFIG_NO_HZ) && !defined(CONFIG_LIB_RING_BUFFER)
+#if defined(CONFIG_NO_HZ) && defined(CONFIG_LIB_RING_BUFFER)
 /*
  * For per-cpu buffers, call the reader wakeups before switching the buffer, so
  * that wake-up-tracing generated events are flushed before going idle (in
@@ -517,7 +517,7 @@ void notrace lib_ring_buffer_tick_nohz_restart(void)
 	atomic_notifier_call_chain(&tick_nohz_notifier, TICK_NOHZ_RESTART,
 				   NULL);
 }
-#endif /* defined(CONFIG_NO_HZ) && !defined(CONFIG_LIB_RING_BUFFER) */
+#endif /* defined(CONFIG_NO_HZ) && defined(CONFIG_LIB_RING_BUFFER) */
 
 /*
  * Holds CPU hotplug.
@@ -627,14 +627,14 @@ struct channel *channel_create(const struct lib_ring_buffer_config *config,
 	init_waitqueue_head(&chan->read_wait);
 
 	if (config->alloc == RING_BUFFER_ALLOC_PER_CPU) {
-#ifdef CONFIG_NO_HZ
+#if defined(CONFIG_NO_HZ) && defined(CONFIG_LIB_RING_BUFFER)
 		/* Only benefit from NO_HZ idle with per-cpu buffers for now. */
 		chan->tick_nohz_notifier.notifier_call =
 			ring_buffer_tick_nohz_callback;
 		chan->tick_nohz_notifier.priority = ~0U;
 		atomic_notifier_chain_register(&tick_nohz_notifier,
 				       &chan->tick_nohz_notifier);
-#endif /* CONFIG_NO_HZ */
+#endif /* defined(CONFIG_NO_HZ) && defined(CONFIG_LIB_RING_BUFFER) */
 
 		/*
 		 * In case of non-hotplug cpu, if the ring-buffer is allocated
-- 
2.0.2

