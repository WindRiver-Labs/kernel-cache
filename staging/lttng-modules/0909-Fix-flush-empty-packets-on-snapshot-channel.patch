From f4df58c8ca18962ccd2b0f3cdeed0cb62f9a4a92 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Tue, 17 May 2016 21:24:46 -0400
Subject: [PATCH 909/933] Fix: flush empty packets on snapshot channel

Snapshot operation on a non-stopped stream should use a "final" flush to
ensure empty packets are flushed, so we gather timestamps at the moment
where the snapshot is taken. This is important for streams that have a
low amount of activity.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 .../lttng/lib/ringbuffer/ring_buffer_frontend.c    | 24 ++++++++++++++++------
 1 file changed, 18 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/lttng/lib/ringbuffer/ring_buffer_frontend.c b/drivers/staging/lttng/lib/ringbuffer/ring_buffer_frontend.c
index 81c4fa4..3a0433b 100644
--- a/drivers/staging/lttng/lib/ringbuffer/ring_buffer_frontend.c
+++ b/drivers/staging/lttng/lib/ringbuffer/ring_buffer_frontend.c
@@ -904,6 +904,15 @@ int lib_ring_buffer_snapshot(struct lib_ring_buffer *buf,
 	unsigned long consumed_cur, write_offset;
 	int finalized;
 
+	/*
+	 * First, ensure we perform a "final" flush onto the stream.  This will
+	 * ensure we create a packet of padding if we encounter an empty
+	 * packet. This ensures the time-stamps right before the snapshot is
+	 * used as end of packet timestamp.
+	 */
+	if (!buf->quiescent)
+		_lib_ring_buffer_switch_remote(buf, SWITCH_FLUSH);
+
 retry:
 	finalized = ACCESS_ONCE(buf->finalized);
 	/*
@@ -1293,7 +1302,8 @@ void lib_ring_buffer_print_errors(struct channel *chan,
 /*
  * lib_ring_buffer_switch_old_start: Populate old subbuffer header.
  *
- * Only executed when the buffer is finalized, in SWITCH_FLUSH.
+ * Only executed by SWITCH_FLUSH, which can be issued while tracing is active
+ * or at buffer finalization (destroy).
  */
 static
 void lib_ring_buffer_switch_old_start(struct lib_ring_buffer *buf,
@@ -1484,12 +1494,14 @@ int lib_ring_buffer_try_switch_slow(enum switch_mode mode,
 		unsigned long sb_index, commit_count;
 
 		/*
-		 * We are performing a SWITCH_FLUSH. At this stage, there are no
-		 * concurrent writes into the buffer.
+		 * We are performing a SWITCH_FLUSH. There may be concurrent
+		 * writes into the buffer if e.g. invoked while performing a
+		 * snapshot on an active trace.
 		 *
-		 * The client does not save any header information.  Don't
-		 * switch empty subbuffer on finalize, because it is invalid to
-		 * deliver a completely empty subbuffer.
+		 * If the client does not save any header information (sub-buffer
+		 * header size == 0), don't switch empty subbuffer on finalize,
+		 * because it is invalid to deliver a completely empty
+		 * subbuffer.
 		 */
 		if (!config->cb.subbuffer_header_size())
 			return -1;
-- 
2.0.2

