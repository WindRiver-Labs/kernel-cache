From 9b5f32b2e41993d088549ac045d110f24a5b3dfd Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Fri, 23 Oct 2015 17:17:43 -0400
Subject: [PATCH 816/933] Fix: tracepoint listing misses last loaded probe

The seqfile iteration listing tracepoints operates on the probe list
directly, without going through the lttng_get_probe_list_head()
accessor which ensures that the lazy list of probes is moved to the
actual list of probes.

This causes an issue when loading a probe and then listing the
tracepoints when no tracing sessions are active: the last probe loaded
is missing from the listing.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/lttng-probes.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/lttng/lttng-probes.c b/drivers/staging/lttng/lttng-probes.c
index ee75e33..0385a79 100644
--- a/drivers/staging/lttng/lttng-probes.c
+++ b/drivers/staging/lttng/lttng-probes.c
@@ -251,10 +251,12 @@ static
 void *tp_list_start(struct seq_file *m, loff_t *pos)
 {
 	struct lttng_probe_desc *probe_desc;
+	struct list_head *probe_list;
 	int iter = 0, i;
 
 	lttng_lock_sessions();
-	list_for_each_entry(probe_desc, &_probe_list, head) {
+	probe_list = lttng_get_probe_list_head();
+	list_for_each_entry(probe_desc, probe_list, head) {
 		for (i = 0; i < probe_desc->nr_events; i++) {
 			if (iter++ >= *pos)
 				return (void *) probe_desc->event_desc[i];
@@ -268,10 +270,12 @@ static
 void *tp_list_next(struct seq_file *m, void *p, loff_t *ppos)
 {
 	struct lttng_probe_desc *probe_desc;
+	struct list_head *probe_list;
 	int iter = 0, i;
 
 	(*ppos)++;
-	list_for_each_entry(probe_desc, &_probe_list, head) {
+	probe_list = lttng_get_probe_list_head();
+	list_for_each_entry(probe_desc, probe_list, head) {
 		for (i = 0; i < probe_desc->nr_events; i++) {
 			if (iter++ >= *ppos)
 				return (void *) probe_desc->event_desc[i];
-- 
2.0.2

