From 77d440c63c1f83b58179ae26521d51e82b5d06fd Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Mon, 16 May 2016 16:45:24 -0400
Subject: [PATCH 906/933] Fix: ctf_string() should handle NULL pointers

The regmap instrumentation can send a NULL string (e.g. on ARM32).

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 .../staging/lttng/probes/lttng-tracepoint-event-impl.h    | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/lttng/probes/lttng-tracepoint-event-impl.h b/drivers/staging/lttng/probes/lttng-tracepoint-event-impl.h
index ba906ac..45c38ff 100644
--- a/drivers/staging/lttng/probes/lttng-tracepoint-event-impl.h
+++ b/drivers/staging/lttng/probes/lttng-tracepoint-event-impl.h
@@ -35,6 +35,8 @@
 #include <lttng-events.h>
 #include <lttng-tracer-core.h>
 
+#define __LTTNG_NULL_STRING	"(null)"
+
 /*
  * Macro declarations used for all stages.
  */
@@ -392,7 +394,7 @@ static void __event_probe__##_name(void *__data);
 			max_t(size_t, lttng_strlen_user_inatomic(_src), 1);    \
 	else								       \
 		__event_len += __dynamic_len[__dynamic_len_idx++] =	       \
-			strlen(_src) + 1;
+			strlen((_src) ? (_src) : __LTTNG_NULL_STRING) + 1;
 
 #undef TP_PROTO
 #define TP_PROTO(...)	__VA_ARGS__
@@ -581,7 +583,8 @@ static inline size_t __event_get_size__##_name(size_t *__dynamic_len,	      \
 #undef _ctf_string
 #define _ctf_string(_item, _src, _user, _nowrite)			       \
 	{								       \
-		const void *__ctf_tmp_ptr = (_src);			       \
+		const void *__ctf_tmp_ptr =				       \
+			((_src) ? (_src) : __LTTNG_NULL_STRING);	       \
 		memcpy(__stack_data, &__ctf_tmp_ptr, sizeof(void *));	       \
 		__stack_data += sizeof(void *);				       \
 	}
@@ -871,12 +874,16 @@ static inline size_t __event_get_align__##_name(void *__tp_locvar)	      \
 
 #undef _ctf_string
 #define _ctf_string(_item, _src, _user, _nowrite)		        \
-	lib_ring_buffer_align_ctx(&__ctx, lttng_alignof(*(_src)));	\
 	if (_user) {							\
+		lib_ring_buffer_align_ctx(&__ctx, lttng_alignof(*(_src))); \
 		__chan->ops->event_strcpy_from_user(&__ctx, _src,	\
 			__get_dynamic_len(dest));			\
 	} else {							\
-		__chan->ops->event_strcpy(&__ctx, _src,			\
+		const char *__ctf_tmp_string =				\
+			((_src) ? (_src) : __LTTNG_NULL_STRING);	\
+		lib_ring_buffer_align_ctx(&__ctx,			\
+			lttng_alignof(*__ctf_tmp_string));		\
+		__chan->ops->event_strcpy(&__ctx, __ctf_tmp_string,	\
 			__get_dynamic_len(dest));			\
 	}
 
-- 
2.0.2

