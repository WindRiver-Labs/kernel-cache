From 24ab9d37a69e223cccf53a5b468440123f426bba Mon Sep 17 00:00:00 2001
From: Jan Willeke <jan.willeke@harman.com>
Date: Wed, 3 Feb 2016 14:04:12 +0100
Subject: [PATCH 840/933] Add support for arm64 syscalls

[ Edit by Mathieu Desnoyers: rename "x86_64" strings to "arm64" in
  comments. ]

Signed-off-by: Jan Willeke <jan.willeke@harman.com>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 .../syscalls/4.4.0/arm-64-syscalls-4.4.0           |  256 +++
 .../headers/arm-64-syscalls-4.4.0_integers.h       | 1011 ++++++++++++
 .../arm-64-syscalls-4.4.0_integers_override.h      |    8 +
 .../headers/arm-64-syscalls-4.4.0_pointers.h       | 1664 ++++++++++++++++++++
 .../arm-64-syscalls-4.4.0_pointers_override.h      |    9 +
 .../syscalls/headers/syscalls_integers.h           |    4 +
 .../syscalls/headers/syscalls_pointers.h           |    4 +
 7 files changed, 2956 insertions(+)
 create mode 100644 drivers/staging/lttng/instrumentation/syscalls/4.4.0/arm-64-syscalls-4.4.0
 create mode 100644 drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_integers.h
 create mode 100644 drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_integers_override.h
 create mode 100644 drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_pointers.h
 create mode 100644 drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_pointers_override.h

diff --git a/drivers/staging/lttng/instrumentation/syscalls/4.4.0/arm-64-syscalls-4.4.0 b/drivers/staging/lttng/instrumentation/syscalls/4.4.0/arm-64-syscalls-4.4.0
new file mode 100644
index 0000000..99360ce
--- /dev/null
+++ b/drivers/staging/lttng/instrumentation/syscalls/4.4.0/arm-64-syscalls-4.4.0
@@ -0,0 +1,256 @@
+syscall sys_io_setup nr 0 nbargs 2 types: (unsigned, aio_context_t *) args: (nr_events, ctxp)
+syscall sys_io_destroy nr 1 nbargs 1 types: (aio_context_t) args: (ctx)
+syscall sys_io_submit nr 2 nbargs 3 types: (aio_context_t, long, struct iocb * *) args: (ctx_id, nr, iocbpp)
+syscall sys_io_cancel nr 3 nbargs 3 types: (aio_context_t, struct iocb *, struct io_event *) args: (ctx_id, iocb, result)
+syscall sys_io_getevents nr 4 nbargs 5 types: (aio_context_t, long, long, struct io_event *, struct timespec *) args: (ctx_id, min_nr, nr, events, timeout)
+syscall sys_setxattr nr 5 nbargs 5 types: (const char *, const char *, const void *, size_t, int) args: (pathname, name, value, size, flags)
+syscall sys_lsetxattr nr 6 nbargs 5 types: (const char *, const char *, const void *, size_t, int) args: (pathname, name, value, size, flags)
+syscall sys_fsetxattr nr 7 nbargs 5 types: (int, const char *, const void *, size_t, int) args: (fd, name, value, size, flags)
+syscall sys_getxattr nr 8 nbargs 4 types: (const char *, const char *, void *, size_t) args: (pathname, name, value, size)
+syscall sys_lgetxattr nr 9 nbargs 4 types: (const char *, const char *, void *, size_t) args: (pathname, name, value, size)
+syscall sys_fgetxattr nr 10 nbargs 4 types: (int, const char *, void *, size_t) args: (fd, name, value, size)
+syscall sys_listxattr nr 11 nbargs 3 types: (const char *, char *, size_t) args: (pathname, list, size)
+syscall sys_llistxattr nr 12 nbargs 3 types: (const char *, char *, size_t) args: (pathname, list, size)
+syscall sys_flistxattr nr 13 nbargs 3 types: (int, char *, size_t) args: (fd, list, size)
+syscall sys_removexattr nr 14 nbargs 2 types: (const char *, const char *) args: (pathname, name)
+syscall sys_lremovexattr nr 15 nbargs 2 types: (const char *, const char *) args: (pathname, name)
+syscall sys_fremovexattr nr 16 nbargs 2 types: (int, const char *) args: (fd, name)
+syscall sys_getcwd nr 17 nbargs 2 types: (char *, unsigned long) args: (buf, size)
+syscall sys_lookup_dcookie nr 18 nbargs 3 types: (u64, char *, size_t) args: (cookie64, buf, len)
+syscall sys_eventfd2 nr 19 nbargs 2 types: (unsigned int, int) args: (count, flags)
+syscall sys_epoll_create1 nr 20 nbargs 1 types: (int) args: (flags)
+syscall sys_epoll_ctl nr 21 nbargs 4 types: (int, int, int, struct epoll_event *) args: (epfd, op, fd, event)
+syscall sys_epoll_pwait nr 22 nbargs 6 types: (int, struct epoll_event *, int, int, const sigset_t *, size_t) args: (epfd, events, maxevents, timeout, sigmask, sigsetsize)
+syscall sys_dup nr 23 nbargs 1 types: (unsigned int) args: (fildes)
+syscall sys_dup3 nr 24 nbargs 3 types: (unsigned int, unsigned int, int) args: (oldfd, newfd, flags)
+syscall sys_fcntl nr 25 nbargs 3 types: (unsigned int, unsigned int, unsigned long) args: (fd, cmd, arg)
+syscall sys_inotify_init1 nr 26 nbargs 1 types: (int) args: (flags)
+syscall sys_inotify_add_watch nr 27 nbargs 3 types: (int, const char *, u32) args: (fd, pathname, mask)
+syscall sys_inotify_rm_watch nr 28 nbargs 2 types: (int, __s32) args: (fd, wd)
+syscall sys_ioctl nr 29 nbargs 3 types: (unsigned int, unsigned int, unsigned long) args: (fd, cmd, arg)
+syscall sys_ioprio_set nr 30 nbargs 3 types: (int, int, int) args: (which, who, ioprio)
+syscall sys_ioprio_get nr 31 nbargs 2 types: (int, int) args: (which, who)
+syscall sys_flock nr 32 nbargs 2 types: (unsigned int, unsigned int) args: (fd, cmd)
+syscall sys_mknodat nr 33 nbargs 4 types: (int, const char *, umode_t, unsigned) args: (dfd, filename, mode, dev)
+syscall sys_mkdirat nr 34 nbargs 3 types: (int, const char *, umode_t) args: (dfd, pathname, mode)
+syscall sys_unlinkat nr 35 nbargs 3 types: (int, const char *, int) args: (dfd, pathname, flag)
+syscall sys_symlinkat nr 36 nbargs 3 types: (const char *, int, const char *) args: (oldname, newdfd, newname)
+syscall sys_linkat nr 37 nbargs 5 types: (int, const char *, int, const char *, int) args: (olddfd, oldname, newdfd, newname, flags)
+syscall sys_renameat nr 38 nbargs 4 types: (int, const char *, int, const char *) args: (olddfd, oldname, newdfd, newname)
+syscall sys_umount nr 39 nbargs 2 types: (char *, int) args: (name, flags)
+syscall sys_mount nr 40 nbargs 5 types: (char *, char *, char *, unsigned long, void *) args: (dev_name, dir_name, type, flags, data)
+syscall sys_pivot_root nr 41 nbargs 2 types: (const char *, const char *) args: (new_root, put_old)
+syscall sys_statfs nr 43 nbargs 2 types: (const char *, struct statfs *) args: (pathname, buf)
+syscall sys_fstatfs nr 44 nbargs 2 types: (unsigned int, struct statfs *) args: (fd, buf)
+syscall sys_truncate nr 45 nbargs 2 types: (const char *, long) args: (path, length)
+syscall sys_ftruncate nr 46 nbargs 2 types: (unsigned int, unsigned long) args: (fd, length)
+syscall sys_fallocate nr 47 nbargs 4 types: (int, int, loff_t, loff_t) args: (fd, mode, offset, len)
+syscall sys_faccessat nr 48 nbargs 3 types: (int, const char *, int) args: (dfd, filename, mode)
+syscall sys_chdir nr 49 nbargs 1 types: (const char *) args: (filename)
+syscall sys_fchdir nr 50 nbargs 1 types: (unsigned int) args: (fd)
+syscall sys_chroot nr 51 nbargs 1 types: (const char *) args: (filename)
+syscall sys_fchmod nr 52 nbargs 2 types: (unsigned int, umode_t) args: (fd, mode)
+syscall sys_fchmodat nr 53 nbargs 3 types: (int, const char *, umode_t) args: (dfd, filename, mode)
+syscall sys_fchownat nr 54 nbargs 5 types: (int, const char *, uid_t, gid_t, int) args: (dfd, filename, user, group, flag)
+syscall sys_fchown nr 55 nbargs 3 types: (unsigned int, uid_t, gid_t) args: (fd, user, group)
+syscall sys_openat nr 56 nbargs 4 types: (int, const char *, int, umode_t) args: (dfd, filename, flags, mode)
+syscall sys_close nr 57 nbargs 1 types: (unsigned int) args: (fd)
+syscall sys_vhangup nr 58 nbargs 0 types: () args: ()
+syscall sys_pipe2 nr 59 nbargs 2 types: (int *, int) args: (fildes, flags)
+syscall sys_quotactl nr 60 nbargs 4 types: (unsigned int, const char *, qid_t, void *) args: (cmd, special, id, addr)
+syscall sys_getdents64 nr 61 nbargs 3 types: (unsigned int, struct linux_dirent64 *, unsigned int) args: (fd, dirent, count)
+syscall sys_lseek nr 62 nbargs 3 types: (unsigned int, off_t, unsigned int) args: (fd, offset, whence)
+syscall sys_read nr 63 nbargs 3 types: (unsigned int, char *, size_t) args: (fd, buf, count)
+syscall sys_write nr 64 nbargs 3 types: (unsigned int, const char *, size_t) args: (fd, buf, count)
+syscall sys_readv nr 65 nbargs 3 types: (unsigned long, const struct iovec *, unsigned long) args: (fd, vec, vlen)
+syscall sys_writev nr 66 nbargs 3 types: (unsigned long, const struct iovec *, unsigned long) args: (fd, vec, vlen)
+syscall sys_pread64 nr 67 nbargs 4 types: (unsigned int, char *, size_t, loff_t) args: (fd, buf, count, pos)
+syscall sys_pwrite64 nr 68 nbargs 4 types: (unsigned int, const char *, size_t, loff_t) args: (fd, buf, count, pos)
+syscall sys_preadv nr 69 nbargs 5 types: (unsigned long, const struct iovec *, unsigned long, unsigned long, unsigned long) args: (fd, vec, vlen, pos_l, pos_h)
+syscall sys_pwritev nr 70 nbargs 5 types: (unsigned long, const struct iovec *, unsigned long, unsigned long, unsigned long) args: (fd, vec, vlen, pos_l, pos_h)
+syscall sys_sendfile64 nr 71 nbargs 4 types: (int, int, loff_t *, size_t) args: (out_fd, in_fd, offset, count)
+syscall sys_pselect6 nr 72 nbargs 6 types: (int, fd_set *, fd_set *, fd_set *, struct timespec *, void *) args: (n, inp, outp, exp, tsp, sig)
+syscall sys_ppoll nr 73 nbargs 5 types: (struct pollfd *, unsigned int, struct timespec *, const sigset_t *, size_t) args: (ufds, nfds, tsp, sigmask, sigsetsize)
+syscall sys_signalfd4 nr 74 nbargs 4 types: (int, sigset_t *, size_t, int) args: (ufd, user_mask, sizemask, flags)
+syscall sys_vmsplice nr 75 nbargs 4 types: (int, const struct iovec *, unsigned long, unsigned int) args: (fd, iov, nr_segs, flags)
+syscall sys_splice nr 76 nbargs 6 types: (int, loff_t *, int, loff_t *, size_t, unsigned int) args: (fd_in, off_in, fd_out, off_out, len, flags)
+syscall sys_tee nr 77 nbargs 4 types: (int, int, size_t, unsigned int) args: (fdin, fdout, len, flags)
+syscall sys_readlinkat nr 78 nbargs 4 types: (int, const char *, char *, int) args: (dfd, pathname, buf, bufsiz)
+syscall sys_newfstatat nr 79 nbargs 4 types: (int, const char *, struct stat *, int) args: (dfd, filename, statbuf, flag)
+syscall sys_newfstat nr 80 nbargs 2 types: (unsigned int, struct stat *) args: (fd, statbuf)
+syscall sys_sync nr 81 nbargs 0 types: () args: ()
+syscall sys_fsync nr 82 nbargs 1 types: (unsigned int) args: (fd)
+syscall sys_fdatasync nr 83 nbargs 1 types: (unsigned int) args: (fd)
+syscall sys_sync_file_range nr 84 nbargs 4 types: (int, loff_t, loff_t, unsigned int) args: (fd, offset, nbytes, flags)
+syscall sys_timerfd_create nr 85 nbargs 2 types: (int, int) args: (clockid, flags)
+syscall sys_timerfd_settime nr 86 nbargs 4 types: (int, int, const struct itimerspec *, struct itimerspec *) args: (ufd, flags, utmr, otmr)
+syscall sys_timerfd_gettime nr 87 nbargs 2 types: (int, struct itimerspec *) args: (ufd, otmr)
+syscall sys_utimensat nr 88 nbargs 4 types: (int, const char *, struct timespec *, int) args: (dfd, filename, utimes, flags)
+syscall sys_acct nr 89 nbargs 1 types: (const char *) args: (name)
+syscall sys_capget nr 90 nbargs 2 types: (cap_user_header_t, cap_user_data_t) args: (header, dataptr)
+syscall sys_capset nr 91 nbargs 2 types: (cap_user_header_t, const cap_user_data_t) args: (header, data)
+syscall sys_personality nr 92 nbargs 1 types: (unsigned int) args: (personality)
+syscall sys_exit nr 93 nbargs 1 types: (int) args: (error_code)
+syscall sys_exit_group nr 94 nbargs 1 types: (int) args: (error_code)
+syscall sys_waitid nr 95 nbargs 5 types: (int, pid_t, struct siginfo *, int, struct rusage *) args: (which, upid, infop, options, ru)
+syscall sys_set_tid_address nr 96 nbargs 1 types: (int *) args: (tidptr)
+syscall sys_unshare nr 97 nbargs 1 types: (unsigned long) args: (unshare_flags)
+syscall sys_futex nr 98 nbargs 6 types: (u32 *, int, u32, struct timespec *, u32 *, u32) args: (uaddr, op, val, utime, uaddr2, val3)
+syscall sys_set_robust_list nr 99 nbargs 2 types: (struct robust_list_head *, size_t) args: (head, len)
+syscall sys_get_robust_list nr 100 nbargs 3 types: (int, struct robust_list_head * *, size_t *) args: (pid, head_ptr, len_ptr)
+syscall sys_nanosleep nr 101 nbargs 2 types: (struct timespec *, struct timespec *) args: (rqtp, rmtp)
+syscall sys_getitimer nr 102 nbargs 2 types: (int, struct itimerval *) args: (which, value)
+syscall sys_setitimer nr 103 nbargs 3 types: (int, struct itimerval *, struct itimerval *) args: (which, value, ovalue)
+syscall sys_init_module nr 105 nbargs 3 types: (void *, unsigned long, const char *) args: (umod, len, uargs)
+syscall sys_delete_module nr 106 nbargs 2 types: (const char *, unsigned int) args: (name_user, flags)
+syscall sys_timer_create nr 107 nbargs 3 types: (const clockid_t, struct sigevent *, timer_t *) args: (which_clock, timer_event_spec, created_timer_id)
+syscall sys_timer_gettime nr 108 nbargs 2 types: (timer_t, struct itimerspec *) args: (timer_id, setting)
+syscall sys_timer_getoverrun nr 109 nbargs 1 types: (timer_t) args: (timer_id)
+syscall sys_timer_settime nr 110 nbargs 4 types: (timer_t, int, const struct itimerspec *, struct itimerspec *) args: (timer_id, flags, new_setting, old_setting)
+syscall sys_timer_delete nr 111 nbargs 1 types: (timer_t) args: (timer_id)
+syscall sys_clock_settime nr 112 nbargs 2 types: (const clockid_t, const struct timespec *) args: (which_clock, tp)
+syscall sys_clock_gettime nr 113 nbargs 2 types: (const clockid_t, struct timespec *) args: (which_clock, tp)
+syscall sys_clock_getres nr 114 nbargs 2 types: (const clockid_t, struct timespec *) args: (which_clock, tp)
+syscall sys_clock_nanosleep nr 115 nbargs 4 types: (const clockid_t, int, const struct timespec *, struct timespec *) args: (which_clock, flags, rqtp, rmtp)
+syscall sys_syslog nr 116 nbargs 3 types: (int, char *, int) args: (type, buf, len)
+syscall sys_ptrace nr 117 nbargs 4 types: (long, long, unsigned long, unsigned long) args: (request, pid, addr, data)
+syscall sys_sched_setparam nr 118 nbargs 2 types: (pid_t, struct sched_param *) args: (pid, param)
+syscall sys_sched_setscheduler nr 119 nbargs 3 types: (pid_t, int, struct sched_param *) args: (pid, policy, param)
+syscall sys_sched_getscheduler nr 120 nbargs 1 types: (pid_t) args: (pid)
+syscall sys_sched_getparam nr 121 nbargs 2 types: (pid_t, struct sched_param *) args: (pid, param)
+syscall sys_sched_setaffinity nr 122 nbargs 3 types: (pid_t, unsigned int, unsigned long *) args: (pid, len, user_mask_ptr)
+syscall sys_sched_getaffinity nr 123 nbargs 3 types: (pid_t, unsigned int, unsigned long *) args: (pid, len, user_mask_ptr)
+syscall sys_sched_yield nr 124 nbargs 0 types: () args: ()
+syscall sys_sched_get_priority_max nr 125 nbargs 1 types: (int) args: (policy)
+syscall sys_sched_get_priority_min nr 126 nbargs 1 types: (int) args: (policy)
+syscall sys_sched_rr_get_interval nr 127 nbargs 2 types: (pid_t, struct timespec *) args: (pid, interval)
+syscall sys_restart_syscall nr 128 nbargs 0 types: () args: ()
+syscall sys_kill nr 129 nbargs 2 types: (pid_t, int) args: (pid, sig)
+syscall sys_tkill nr 130 nbargs 2 types: (pid_t, int) args: (pid, sig)
+syscall sys_tgkill nr 131 nbargs 3 types: (pid_t, pid_t, int) args: (tgid, pid, sig)
+syscall sys_sigaltstack nr 132 nbargs 2 types: (const stack_t *, stack_t *) args: (uss, uoss)
+syscall sys_rt_sigsuspend nr 133 nbargs 2 types: (sigset_t *, size_t) args: (unewset, sigsetsize)
+syscall sys_rt_sigaction nr 134 nbargs 4 types: (int, const struct sigaction *, struct sigaction *, size_t) args: (sig, act, oact, sigsetsize)
+syscall sys_rt_sigprocmask nr 135 nbargs 4 types: (int, sigset_t *, sigset_t *, size_t) args: (how, nset, oset, sigsetsize)
+syscall sys_rt_sigpending nr 136 nbargs 2 types: (sigset_t *, size_t) args: (uset, sigsetsize)
+syscall sys_rt_sigtimedwait nr 137 nbargs 4 types: (const sigset_t *, siginfo_t *, const struct timespec *, size_t) args: (uthese, uinfo, uts, sigsetsize)
+syscall sys_rt_sigqueueinfo nr 138 nbargs 3 types: (pid_t, int, siginfo_t *) args: (pid, sig, uinfo)
+syscall sys_setpriority nr 140 nbargs 3 types: (int, int, int) args: (which, who, niceval)
+syscall sys_getpriority nr 141 nbargs 2 types: (int, int) args: (which, who)
+syscall sys_reboot nr 142 nbargs 4 types: (int, int, unsigned int, void *) args: (magic1, magic2, cmd, arg)
+syscall sys_setregid nr 143 nbargs 2 types: (gid_t, gid_t) args: (rgid, egid)
+syscall sys_setgid nr 144 nbargs 1 types: (gid_t) args: (gid)
+syscall sys_setreuid nr 145 nbargs 2 types: (uid_t, uid_t) args: (ruid, euid)
+syscall sys_setuid nr 146 nbargs 1 types: (uid_t) args: (uid)
+syscall sys_setresuid nr 147 nbargs 3 types: (uid_t, uid_t, uid_t) args: (ruid, euid, suid)
+syscall sys_getresuid nr 148 nbargs 3 types: (uid_t *, uid_t *, uid_t *) args: (ruidp, euidp, suidp)
+syscall sys_setresgid nr 149 nbargs 3 types: (gid_t, gid_t, gid_t) args: (rgid, egid, sgid)
+syscall sys_getresgid nr 150 nbargs 3 types: (gid_t *, gid_t *, gid_t *) args: (rgidp, egidp, sgidp)
+syscall sys_setfsuid nr 151 nbargs 1 types: (uid_t) args: (uid)
+syscall sys_setfsgid nr 152 nbargs 1 types: (gid_t) args: (gid)
+syscall sys_times nr 153 nbargs 1 types: (struct tms *) args: (tbuf)
+syscall sys_setpgid nr 154 nbargs 2 types: (pid_t, pid_t) args: (pid, pgid)
+syscall sys_getpgid nr 155 nbargs 1 types: (pid_t) args: (pid)
+syscall sys_getsid nr 156 nbargs 1 types: (pid_t) args: (pid)
+syscall sys_setsid nr 157 nbargs 0 types: () args: ()
+syscall sys_getgroups nr 158 nbargs 2 types: (int, gid_t *) args: (gidsetsize, grouplist)
+syscall sys_setgroups nr 159 nbargs 2 types: (int, gid_t *) args: (gidsetsize, grouplist)
+syscall sys_newuname nr 160 nbargs 1 types: (struct new_utsname *) args: (name)
+syscall sys_sethostname nr 161 nbargs 2 types: (char *, int) args: (name, len)
+syscall sys_setdomainname nr 162 nbargs 2 types: (char *, int) args: (name, len)
+syscall sys_getrlimit nr 163 nbargs 2 types: (unsigned int, struct rlimit *) args: (resource, rlim)
+syscall sys_setrlimit nr 164 nbargs 2 types: (unsigned int, struct rlimit *) args: (resource, rlim)
+syscall sys_getrusage nr 165 nbargs 2 types: (int, struct rusage *) args: (who, ru)
+syscall sys_umask nr 166 nbargs 1 types: (int) args: (mask)
+syscall sys_prctl nr 167 nbargs 5 types: (int, unsigned long, unsigned long, unsigned long, unsigned long) args: (option, arg2, arg3, arg4, arg5)
+syscall sys_getcpu nr 168 nbargs 3 types: (unsigned *, unsigned *, struct getcpu_cache *) args: (cpup, nodep, unused)
+syscall sys_gettimeofday nr 169 nbargs 2 types: (struct timeval *, struct timezone *) args: (tv, tz)
+syscall sys_settimeofday nr 170 nbargs 2 types: (struct timeval *, struct timezone *) args: (tv, tz)
+syscall sys_adjtimex nr 171 nbargs 1 types: (struct timex *) args: (txc_p)
+syscall sys_getpid nr 172 nbargs 0 types: () args: ()
+syscall sys_getppid nr 173 nbargs 0 types: () args: ()
+syscall sys_getuid nr 174 nbargs 0 types: () args: ()
+syscall sys_geteuid nr 175 nbargs 0 types: () args: ()
+syscall sys_getgid nr 176 nbargs 0 types: () args: ()
+syscall sys_getegid nr 177 nbargs 0 types: () args: ()
+syscall sys_gettid nr 178 nbargs 0 types: () args: ()
+syscall sys_sysinfo nr 179 nbargs 1 types: (struct sysinfo *) args: (info)
+syscall sys_mq_open nr 180 nbargs 4 types: (const char *, int, umode_t, struct mq_attr *) args: (u_name, oflag, mode, u_attr)
+syscall sys_mq_unlink nr 181 nbargs 1 types: (const char *) args: (u_name)
+syscall sys_mq_timedsend nr 182 nbargs 5 types: (mqd_t, const char *, size_t, unsigned int, const struct timespec *) args: (mqdes, u_msg_ptr, msg_len, msg_prio, u_abs_timeout)
+syscall sys_mq_timedreceive nr 183 nbargs 5 types: (mqd_t, char *, size_t, unsigned int *, const struct timespec *) args: (mqdes, u_msg_ptr, msg_len, u_msg_prio, u_abs_timeout)
+syscall sys_mq_notify nr 184 nbargs 2 types: (mqd_t, const struct sigevent *) args: (mqdes, u_notification)
+syscall sys_mq_getsetattr nr 185 nbargs 3 types: (mqd_t, const struct mq_attr *, struct mq_attr *) args: (mqdes, u_mqstat, u_omqstat)
+syscall sys_msgget nr 186 nbargs 2 types: (key_t, int) args: (key, msgflg)
+syscall sys_msgctl nr 187 nbargs 3 types: (int, int, struct msqid_ds *) args: (msqid, cmd, buf)
+syscall sys_msgrcv nr 188 nbargs 5 types: (int, struct msgbuf *, size_t, long, int) args: (msqid, msgp, msgsz, msgtyp, msgflg)
+syscall sys_msgsnd nr 189 nbargs 4 types: (int, struct msgbuf *, size_t, int) args: (msqid, msgp, msgsz, msgflg)
+syscall sys_semget nr 190 nbargs 3 types: (key_t, int, int) args: (key, nsems, semflg)
+syscall sys_semctl nr 191 nbargs 4 types: (int, int, int, unsigned long) args: (semid, semnum, cmd, arg)
+syscall sys_semtimedop nr 192 nbargs 4 types: (int, struct sembuf *, unsigned, const struct timespec *) args: (semid, tsops, nsops, timeout)
+syscall sys_semop nr 193 nbargs 3 types: (int, struct sembuf *, unsigned) args: (semid, tsops, nsops)
+syscall sys_shmget nr 194 nbargs 3 types: (key_t, size_t, int) args: (key, size, shmflg)
+syscall sys_shmctl nr 195 nbargs 3 types: (int, int, struct shmid_ds *) args: (shmid, cmd, buf)
+syscall sys_shmat nr 196 nbargs 3 types: (int, char *, int) args: (shmid, shmaddr, shmflg)
+syscall sys_shmdt nr 197 nbargs 1 types: (char *) args: (shmaddr)
+syscall sys_socket nr 198 nbargs 3 types: (int, int, int) args: (family, type, protocol)
+syscall sys_socketpair nr 199 nbargs 4 types: (int, int, int, int *) args: (family, type, protocol, usockvec)
+syscall sys_bind nr 200 nbargs 3 types: (int, struct sockaddr *, int) args: (fd, umyaddr, addrlen)
+syscall sys_listen nr 201 nbargs 2 types: (int, int) args: (fd, backlog)
+syscall sys_accept nr 202 nbargs 3 types: (int, struct sockaddr *, int *) args: (fd, upeer_sockaddr, upeer_addrlen)
+syscall sys_connect nr 203 nbargs 3 types: (int, struct sockaddr *, int) args: (fd, uservaddr, addrlen)
+syscall sys_getsockname nr 204 nbargs 3 types: (int, struct sockaddr *, int *) args: (fd, usockaddr, usockaddr_len)
+syscall sys_getpeername nr 205 nbargs 3 types: (int, struct sockaddr *, int *) args: (fd, usockaddr, usockaddr_len)
+syscall sys_sendto nr 206 nbargs 6 types: (int, void *, size_t, unsigned int, struct sockaddr *, int) args: (fd, buff, len, flags, addr, addr_len)
+syscall sys_recvfrom nr 207 nbargs 6 types: (int, void *, size_t, unsigned int, struct sockaddr *, int *) args: (fd, ubuf, size, flags, addr, addr_len)
+syscall sys_setsockopt nr 208 nbargs 5 types: (int, int, int, char *, int) args: (fd, level, optname, optval, optlen)
+syscall sys_getsockopt nr 209 nbargs 5 types: (int, int, int, char *, int *) args: (fd, level, optname, optval, optlen)
+syscall sys_shutdown nr 210 nbargs 2 types: (int, int) args: (fd, how)
+syscall sys_sendmsg nr 211 nbargs 3 types: (int, struct user_msghdr *, unsigned int) args: (fd, msg, flags)
+syscall sys_recvmsg nr 212 nbargs 3 types: (int, struct user_msghdr *, unsigned int) args: (fd, msg, flags)
+syscall sys_readahead nr 213 nbargs 3 types: (int, loff_t, size_t) args: (fd, offset, count)
+syscall sys_brk nr 214 nbargs 1 types: (unsigned long) args: (brk)
+syscall sys_munmap nr 215 nbargs 2 types: (unsigned long, size_t) args: (addr, len)
+syscall sys_mremap nr 216 nbargs 5 types: (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) args: (addr, old_len, new_len, flags, new_addr)
+syscall sys_add_key nr 217 nbargs 5 types: (const char *, const char *, const void *, size_t, key_serial_t) args: (_type, _description, _payload, plen, ringid)
+syscall sys_request_key nr 218 nbargs 4 types: (const char *, const char *, const char *, key_serial_t) args: (_type, _description, _callout_info, destringid)
+syscall sys_keyctl nr 219 nbargs 5 types: (int, unsigned long, unsigned long, unsigned long, unsigned long) args: (option, arg2, arg3, arg4, arg5)
+syscall sys_execve nr 221 nbargs 3 types: (const char *, const char *const *, const char *const *) args: (filename, argv, envp)
+syscall sys_fadvise64_64 nr 223 nbargs 4 types: (int, loff_t, loff_t, int) args: (fd, offset, len, advice)
+syscall sys_swapon nr 224 nbargs 2 types: (const char *, int) args: (specialfile, swap_flags)
+syscall sys_swapoff nr 225 nbargs 1 types: (const char *) args: (specialfile)
+syscall sys_mprotect nr 226 nbargs 3 types: (unsigned long, size_t, unsigned long) args: (start, len, prot)
+syscall sys_msync nr 227 nbargs 3 types: (unsigned long, size_t, int) args: (start, len, flags)
+syscall sys_mlock nr 228 nbargs 2 types: (unsigned long, size_t) args: (start, len)
+syscall sys_munlock nr 229 nbargs 2 types: (unsigned long, size_t) args: (start, len)
+syscall sys_mlockall nr 230 nbargs 1 types: (int) args: (flags)
+syscall sys_munlockall nr 231 nbargs 0 types: () args: ()
+syscall sys_mincore nr 232 nbargs 3 types: (unsigned long, size_t, unsigned char *) args: (start, len, vec)
+syscall sys_madvise nr 233 nbargs 3 types: (unsigned long, size_t, int) args: (start, len_in, behavior)
+syscall sys_remap_file_pages nr 234 nbargs 5 types: (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) args: (start, size, prot, pgoff, flags)
+syscall sys_rt_tgsigqueueinfo nr 240 nbargs 4 types: (pid_t, pid_t, int, siginfo_t *) args: (tgid, pid, sig, uinfo)
+syscall sys_perf_event_open nr 241 nbargs 5 types: (struct perf_event_attr *, pid_t, int, int, unsigned long) args: (attr_uptr, pid, cpu, group_fd, flags)
+syscall sys_accept4 nr 242 nbargs 4 types: (int, struct sockaddr *, int *, int) args: (fd, upeer_sockaddr, upeer_addrlen, flags)
+syscall sys_recvmmsg nr 243 nbargs 5 types: (int, struct mmsghdr *, unsigned int, unsigned int, struct timespec *) args: (fd, mmsg, vlen, flags, timeout)
+syscall sys_wait4 nr 260 nbargs 4 types: (pid_t, int *, int, struct rusage *) args: (upid, stat_addr, options, ru)
+syscall sys_prlimit64 nr 261 nbargs 4 types: (pid_t, unsigned int, const struct rlimit64 *, struct rlimit64 *) args: (pid, resource, new_rlim, old_rlim)
+syscall sys_fanotify_init nr 262 nbargs 2 types: (unsigned int, unsigned int) args: (flags, event_f_flags)
+syscall sys_fanotify_mark nr 263 nbargs 5 types: (int, unsigned int, __u64, int, const char *) args: (fanotify_fd, flags, mask, dfd, pathname)
+syscall sys_name_to_handle_at nr 264 nbargs 5 types: (int, const char *, struct file_handle *, int *, int) args: (dfd, name, handle, mnt_id, flag)
+syscall sys_open_by_handle_at nr 265 nbargs 3 types: (int, struct file_handle *, int) args: (mountdirfd, handle, flags)
+syscall sys_clock_adjtime nr 266 nbargs 2 types: (const clockid_t, struct timex *) args: (which_clock, utx)
+syscall sys_syncfs nr 267 nbargs 1 types: (int) args: (fd)
+syscall sys_setns nr 268 nbargs 2 types: (int, int) args: (fd, nstype)
+syscall sys_sendmmsg nr 269 nbargs 4 types: (int, struct mmsghdr *, unsigned int, unsigned int) args: (fd, mmsg, vlen, flags)
+syscall sys_process_vm_readv nr 270 nbargs 6 types: (pid_t, const struct iovec *, unsigned long, const struct iovec *, unsigned long, unsigned long) args: (pid, lvec, liovcnt, rvec, riovcnt, flags)
+syscall sys_process_vm_writev nr 271 nbargs 6 types: (pid_t, const struct iovec *, unsigned long, const struct iovec *, unsigned long, unsigned long) args: (pid, lvec, liovcnt, rvec, riovcnt, flags)
+syscall sys_finit_module nr 273 nbargs 3 types: (int, const char *, int) args: (fd, uargs, flags)
+syscall sys_sched_setattr nr 274 nbargs 3 types: (pid_t, struct sched_attr *, unsigned int) args: (pid, uattr, flags)
+syscall sys_sched_getattr nr 275 nbargs 4 types: (pid_t, struct sched_attr *, unsigned int, unsigned int) args: (pid, uattr, size, flags)
+syscall sys_renameat2 nr 276 nbargs 5 types: (int, const char *, int, const char *, unsigned int) args: (olddfd, oldname, newdfd, newname, flags)
+syscall sys_seccomp nr 277 nbargs 3 types: (unsigned int, unsigned int, const char *) args: (op, flags, uargs)
+syscall sys_getrandom nr 278 nbargs 3 types: (char *, size_t, unsigned int) args: (buf, count, flags)
+syscall sys_memfd_create nr 279 nbargs 2 types: (const char *, unsigned int) args: (uname, flags)
+syscall sys_execveat nr 281 nbargs 5 types: (int, const char *, const char *const *, const char *const *, int) args: (fd, filename, argv, envp, flags)
+syscall sys_membarrier nr 283 nbargs 2 types: (int, int) args: (cmd, flags)
+syscall sys_mlock2 nr 284 nbargs 3 types: (unsigned long, size_t, int) args: (start, len, flags)
\ No newline at end of file
diff --git a/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_integers.h b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_integers.h
new file mode 100644
index 0000000..3fbc0a7
--- /dev/null
+++ b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_integers.h
@@ -0,0 +1,1011 @@
+/* THIS FILE IS AUTO-GENERATED. DO NOT EDIT */
+#ifndef CREATE_SYSCALL_TABLE
+
+#if !defined(_TRACE_SYSCALLS_INTEGERS_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _TRACE_SYSCALLS_INTEGERS_H
+
+#include "../../../probes/lttng-tracepoint-event.h"
+#include <linux/syscalls.h>
+#include "arm-64-syscalls-4.4.0_integers_override.h"
+#include "syscalls_integers_override.h"
+
+#ifdef SC_ENTER
+SC_LTTNG_TRACEPOINT_EVENT_CLASS_NOARGS(syscalls_noargs,
+	TP_FIELDS()
+)
+#ifndef OVERRIDE_64_vhangup
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, vhangup)
+#endif
+#ifndef OVERRIDE_64_sync
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, sync)
+#endif
+#ifndef OVERRIDE_64_sched_yield
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, sched_yield)
+#endif
+#ifndef OVERRIDE_64_restart_syscall
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, restart_syscall)
+#endif
+#ifndef OVERRIDE_64_setsid
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, setsid)
+#endif
+#ifndef OVERRIDE_64_getpid
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, getpid)
+#endif
+#ifndef OVERRIDE_64_getppid
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, getppid)
+#endif
+#ifndef OVERRIDE_64_getuid
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, getuid)
+#endif
+#ifndef OVERRIDE_64_geteuid
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, geteuid)
+#endif
+#ifndef OVERRIDE_64_getgid
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, getgid)
+#endif
+#ifndef OVERRIDE_64_getegid
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, getegid)
+#endif
+#ifndef OVERRIDE_64_gettid
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, gettid)
+#endif
+#ifndef OVERRIDE_64_munlockall
+SC_LTTNG_TRACEPOINT_EVENT_INSTANCE_NOARGS(syscalls_noargs, munlockall)
+#endif
+#else /* #ifdef SC_ENTER */
+#ifndef OVERRIDE_64_vhangup
+SC_LTTNG_TRACEPOINT_EVENT(vhangup,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_sync
+SC_LTTNG_TRACEPOINT_EVENT(sync,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_yield
+SC_LTTNG_TRACEPOINT_EVENT(sched_yield,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_restart_syscall
+SC_LTTNG_TRACEPOINT_EVENT(restart_syscall,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_setsid
+SC_LTTNG_TRACEPOINT_EVENT(setsid,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_getpid
+SC_LTTNG_TRACEPOINT_EVENT(getpid,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_getppid
+SC_LTTNG_TRACEPOINT_EVENT(getppid,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_getuid
+SC_LTTNG_TRACEPOINT_EVENT(getuid,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_geteuid
+SC_LTTNG_TRACEPOINT_EVENT(geteuid,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_getgid
+SC_LTTNG_TRACEPOINT_EVENT(getgid,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_getegid
+SC_LTTNG_TRACEPOINT_EVENT(getegid,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_gettid
+SC_LTTNG_TRACEPOINT_EVENT(gettid,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#ifndef OVERRIDE_64_munlockall
+SC_LTTNG_TRACEPOINT_EVENT(munlockall,
+	TP_PROTO(sc_exit(long ret)),
+	TP_ARGS(sc_exit(ret)),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)))
+)
+#endif
+#endif /* else #ifdef SC_ENTER */
+#ifndef OVERRIDE_64_io_destroy
+SC_LTTNG_TRACEPOINT_EVENT(io_destroy,
+	TP_PROTO(sc_exit(long ret,) aio_context_t ctx),
+	TP_ARGS(sc_exit(ret,) ctx),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(aio_context_t, ctx, ctx)))
+)
+#endif
+#ifndef OVERRIDE_64_epoll_create1
+SC_LTTNG_TRACEPOINT_EVENT(epoll_create1,
+	TP_PROTO(sc_exit(long ret,) int flags),
+	TP_ARGS(sc_exit(ret,) flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_dup
+SC_LTTNG_TRACEPOINT_EVENT(dup,
+	TP_PROTO(sc_exit(long ret,) unsigned int fildes),
+	TP_ARGS(sc_exit(ret,) fildes),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fildes, fildes)))
+)
+#endif
+#ifndef OVERRIDE_64_inotify_init1
+SC_LTTNG_TRACEPOINT_EVENT(inotify_init1,
+	TP_PROTO(sc_exit(long ret,) int flags),
+	TP_ARGS(sc_exit(ret,) flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_fchdir
+SC_LTTNG_TRACEPOINT_EVENT(fchdir,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd),
+	TP_ARGS(sc_exit(ret,) fd),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)))
+)
+#endif
+#ifndef OVERRIDE_64_close
+SC_LTTNG_TRACEPOINT_EVENT(close,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd),
+	TP_ARGS(sc_exit(ret,) fd),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)))
+)
+#endif
+#ifndef OVERRIDE_64_fsync
+SC_LTTNG_TRACEPOINT_EVENT(fsync,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd),
+	TP_ARGS(sc_exit(ret,) fd),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)))
+)
+#endif
+#ifndef OVERRIDE_64_fdatasync
+SC_LTTNG_TRACEPOINT_EVENT(fdatasync,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd),
+	TP_ARGS(sc_exit(ret,) fd),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)))
+)
+#endif
+#ifndef OVERRIDE_64_personality
+SC_LTTNG_TRACEPOINT_EVENT(personality,
+	TP_PROTO(sc_exit(long ret,) unsigned int personality),
+	TP_ARGS(sc_exit(ret,) personality),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, personality, personality)))
+)
+#endif
+#ifndef OVERRIDE_64_exit
+SC_LTTNG_TRACEPOINT_EVENT(exit,
+	TP_PROTO(sc_exit(long ret,) int error_code),
+	TP_ARGS(sc_exit(ret,) error_code),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, error_code, error_code)))
+)
+#endif
+#ifndef OVERRIDE_64_exit_group
+SC_LTTNG_TRACEPOINT_EVENT(exit_group,
+	TP_PROTO(sc_exit(long ret,) int error_code),
+	TP_ARGS(sc_exit(ret,) error_code),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, error_code, error_code)))
+)
+#endif
+#ifndef OVERRIDE_64_unshare
+SC_LTTNG_TRACEPOINT_EVENT(unshare,
+	TP_PROTO(sc_exit(long ret,) unsigned long unshare_flags),
+	TP_ARGS(sc_exit(ret,) unshare_flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, unshare_flags, unshare_flags)))
+)
+#endif
+#ifndef OVERRIDE_64_timer_getoverrun
+SC_LTTNG_TRACEPOINT_EVENT(timer_getoverrun,
+	TP_PROTO(sc_exit(long ret,) timer_t timer_id),
+	TP_ARGS(sc_exit(ret,) timer_id),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(timer_t, timer_id, timer_id)))
+)
+#endif
+#ifndef OVERRIDE_64_timer_delete
+SC_LTTNG_TRACEPOINT_EVENT(timer_delete,
+	TP_PROTO(sc_exit(long ret,) timer_t timer_id),
+	TP_ARGS(sc_exit(ret,) timer_id),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(timer_t, timer_id, timer_id)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_getscheduler
+SC_LTTNG_TRACEPOINT_EVENT(sched_getscheduler,
+	TP_PROTO(sc_exit(long ret,) pid_t pid),
+	TP_ARGS(sc_exit(ret,) pid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_get_priority_max
+SC_LTTNG_TRACEPOINT_EVENT(sched_get_priority_max,
+	TP_PROTO(sc_exit(long ret,) int policy),
+	TP_ARGS(sc_exit(ret,) policy),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, policy, policy)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_get_priority_min
+SC_LTTNG_TRACEPOINT_EVENT(sched_get_priority_min,
+	TP_PROTO(sc_exit(long ret,) int policy),
+	TP_ARGS(sc_exit(ret,) policy),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, policy, policy)))
+)
+#endif
+#ifndef OVERRIDE_64_setgid
+SC_LTTNG_TRACEPOINT_EVENT(setgid,
+	TP_PROTO(sc_exit(long ret,) gid_t gid),
+	TP_ARGS(sc_exit(ret,) gid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(gid_t, gid, gid)))
+)
+#endif
+#ifndef OVERRIDE_64_setuid
+SC_LTTNG_TRACEPOINT_EVENT(setuid,
+	TP_PROTO(sc_exit(long ret,) uid_t uid),
+	TP_ARGS(sc_exit(ret,) uid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(uid_t, uid, uid)))
+)
+#endif
+#ifndef OVERRIDE_64_setfsuid
+SC_LTTNG_TRACEPOINT_EVENT(setfsuid,
+	TP_PROTO(sc_exit(long ret,) uid_t uid),
+	TP_ARGS(sc_exit(ret,) uid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(uid_t, uid, uid)))
+)
+#endif
+#ifndef OVERRIDE_64_setfsgid
+SC_LTTNG_TRACEPOINT_EVENT(setfsgid,
+	TP_PROTO(sc_exit(long ret,) gid_t gid),
+	TP_ARGS(sc_exit(ret,) gid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(gid_t, gid, gid)))
+)
+#endif
+#ifndef OVERRIDE_64_getpgid
+SC_LTTNG_TRACEPOINT_EVENT(getpgid,
+	TP_PROTO(sc_exit(long ret,) pid_t pid),
+	TP_ARGS(sc_exit(ret,) pid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)))
+)
+#endif
+#ifndef OVERRIDE_64_getsid
+SC_LTTNG_TRACEPOINT_EVENT(getsid,
+	TP_PROTO(sc_exit(long ret,) pid_t pid),
+	TP_ARGS(sc_exit(ret,) pid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)))
+)
+#endif
+#ifndef OVERRIDE_64_umask
+SC_LTTNG_TRACEPOINT_EVENT(umask,
+	TP_PROTO(sc_exit(long ret,) int mask),
+	TP_ARGS(sc_exit(ret,) mask),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, mask, mask)))
+)
+#endif
+#ifndef OVERRIDE_64_brk
+SC_LTTNG_TRACEPOINT_EVENT(brk,
+	TP_PROTO(sc_exit(long ret,) unsigned long brk),
+	TP_ARGS(sc_exit(ret,) brk),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, brk, brk)))
+)
+#endif
+#ifndef OVERRIDE_64_mlockall
+SC_LTTNG_TRACEPOINT_EVENT(mlockall,
+	TP_PROTO(sc_exit(long ret,) int flags),
+	TP_ARGS(sc_exit(ret,) flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_syncfs
+SC_LTTNG_TRACEPOINT_EVENT(syncfs,
+	TP_PROTO(sc_exit(long ret,) int fd),
+	TP_ARGS(sc_exit(ret,) fd),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)))
+)
+#endif
+#ifndef OVERRIDE_64_eventfd2
+SC_LTTNG_TRACEPOINT_EVENT(eventfd2,
+	TP_PROTO(sc_exit(long ret,) unsigned int count, int flags),
+	TP_ARGS(sc_exit(ret,) count, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, count, count)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_inotify_rm_watch
+SC_LTTNG_TRACEPOINT_EVENT(inotify_rm_watch,
+	TP_PROTO(sc_exit(long ret,) int fd, __s32 wd),
+	TP_ARGS(sc_exit(ret,) fd, wd),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(__s32, wd, wd)))
+)
+#endif
+#ifndef OVERRIDE_64_ioprio_get
+SC_LTTNG_TRACEPOINT_EVENT(ioprio_get,
+	TP_PROTO(sc_exit(long ret,) int which, int who),
+	TP_ARGS(sc_exit(ret,) which, who),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, which, which)) sc_in(ctf_integer(int, who, who)))
+)
+#endif
+#ifndef OVERRIDE_64_flock
+SC_LTTNG_TRACEPOINT_EVENT(flock,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, unsigned int cmd),
+	TP_ARGS(sc_exit(ret,) fd, cmd),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(unsigned int, cmd, cmd)))
+)
+#endif
+#ifndef OVERRIDE_64_ftruncate
+SC_LTTNG_TRACEPOINT_EVENT(ftruncate,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, unsigned long length),
+	TP_ARGS(sc_exit(ret,) fd, length),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(unsigned long, length, length)))
+)
+#endif
+#ifndef OVERRIDE_64_fchmod
+SC_LTTNG_TRACEPOINT_EVENT(fchmod,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, umode_t mode),
+	TP_ARGS(sc_exit(ret,) fd, mode),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(umode_t, mode, mode)))
+)
+#endif
+#ifndef OVERRIDE_64_timerfd_create
+SC_LTTNG_TRACEPOINT_EVENT(timerfd_create,
+	TP_PROTO(sc_exit(long ret,) int clockid, int flags),
+	TP_ARGS(sc_exit(ret,) clockid, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, clockid, clockid)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_kill
+SC_LTTNG_TRACEPOINT_EVENT(kill,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, int sig),
+	TP_ARGS(sc_exit(ret,) pid, sig),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(int, sig, sig)))
+)
+#endif
+#ifndef OVERRIDE_64_tkill
+SC_LTTNG_TRACEPOINT_EVENT(tkill,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, int sig),
+	TP_ARGS(sc_exit(ret,) pid, sig),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(int, sig, sig)))
+)
+#endif
+#ifndef OVERRIDE_64_getpriority
+SC_LTTNG_TRACEPOINT_EVENT(getpriority,
+	TP_PROTO(sc_exit(long ret,) int which, int who),
+	TP_ARGS(sc_exit(ret,) which, who),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, which, which)) sc_in(ctf_integer(int, who, who)))
+)
+#endif
+#ifndef OVERRIDE_64_setregid
+SC_LTTNG_TRACEPOINT_EVENT(setregid,
+	TP_PROTO(sc_exit(long ret,) gid_t rgid, gid_t egid),
+	TP_ARGS(sc_exit(ret,) rgid, egid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(gid_t, rgid, rgid)) sc_in(ctf_integer(gid_t, egid, egid)))
+)
+#endif
+#ifndef OVERRIDE_64_setreuid
+SC_LTTNG_TRACEPOINT_EVENT(setreuid,
+	TP_PROTO(sc_exit(long ret,) uid_t ruid, uid_t euid),
+	TP_ARGS(sc_exit(ret,) ruid, euid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(uid_t, ruid, ruid)) sc_in(ctf_integer(uid_t, euid, euid)))
+)
+#endif
+#ifndef OVERRIDE_64_setpgid
+SC_LTTNG_TRACEPOINT_EVENT(setpgid,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, pid_t pgid),
+	TP_ARGS(sc_exit(ret,) pid, pgid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(pid_t, pgid, pgid)))
+)
+#endif
+#ifndef OVERRIDE_64_msgget
+SC_LTTNG_TRACEPOINT_EVENT(msgget,
+	TP_PROTO(sc_exit(long ret,) key_t key, int msgflg),
+	TP_ARGS(sc_exit(ret,) key, msgflg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(key_t, key, key)) sc_in(ctf_integer(int, msgflg, msgflg)))
+)
+#endif
+#ifndef OVERRIDE_64_listen
+SC_LTTNG_TRACEPOINT_EVENT(listen,
+	TP_PROTO(sc_exit(long ret,) int fd, int backlog),
+	TP_ARGS(sc_exit(ret,) fd, backlog),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(int, backlog, backlog)))
+)
+#endif
+#ifndef OVERRIDE_64_shutdown
+SC_LTTNG_TRACEPOINT_EVENT(shutdown,
+	TP_PROTO(sc_exit(long ret,) int fd, int how),
+	TP_ARGS(sc_exit(ret,) fd, how),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(int, how, how)))
+)
+#endif
+#ifndef OVERRIDE_64_munmap
+SC_LTTNG_TRACEPOINT_EVENT(munmap,
+	TP_PROTO(sc_exit(long ret,) unsigned long addr, size_t len),
+	TP_ARGS(sc_exit(ret,) addr, len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, addr, addr)) sc_in(ctf_integer(size_t, len, len)))
+)
+#endif
+#ifndef OVERRIDE_64_mlock
+SC_LTTNG_TRACEPOINT_EVENT(mlock,
+	TP_PROTO(sc_exit(long ret,) unsigned long start, size_t len),
+	TP_ARGS(sc_exit(ret,) start, len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, start, start)) sc_in(ctf_integer(size_t, len, len)))
+)
+#endif
+#ifndef OVERRIDE_64_munlock
+SC_LTTNG_TRACEPOINT_EVENT(munlock,
+	TP_PROTO(sc_exit(long ret,) unsigned long start, size_t len),
+	TP_ARGS(sc_exit(ret,) start, len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, start, start)) sc_in(ctf_integer(size_t, len, len)))
+)
+#endif
+#ifndef OVERRIDE_64_fanotify_init
+SC_LTTNG_TRACEPOINT_EVENT(fanotify_init,
+	TP_PROTO(sc_exit(long ret,) unsigned int flags, unsigned int event_f_flags),
+	TP_ARGS(sc_exit(ret,) flags, event_f_flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, flags, flags)) sc_in(ctf_integer(unsigned int, event_f_flags, event_f_flags)))
+)
+#endif
+#ifndef OVERRIDE_64_setns
+SC_LTTNG_TRACEPOINT_EVENT(setns,
+	TP_PROTO(sc_exit(long ret,) int fd, int nstype),
+	TP_ARGS(sc_exit(ret,) fd, nstype),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(int, nstype, nstype)))
+)
+#endif
+#ifndef OVERRIDE_64_membarrier
+SC_LTTNG_TRACEPOINT_EVENT(membarrier,
+	TP_PROTO(sc_exit(long ret,) int cmd, int flags),
+	TP_ARGS(sc_exit(ret,) cmd, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(int, cmd, cmd)) sc_inout(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_dup3
+SC_LTTNG_TRACEPOINT_EVENT(dup3,
+	TP_PROTO(sc_exit(long ret,) unsigned int oldfd, unsigned int newfd, int flags),
+	TP_ARGS(sc_exit(ret,) oldfd, newfd, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, oldfd, oldfd)) sc_in(ctf_integer(unsigned int, newfd, newfd)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_fcntl
+SC_LTTNG_TRACEPOINT_EVENT(fcntl,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, unsigned int cmd, unsigned long arg),
+	TP_ARGS(sc_exit(ret,) fd, cmd, arg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(unsigned int, cmd, cmd)) sc_inout(ctf_integer(unsigned long, arg, arg)))
+)
+#endif
+#ifndef OVERRIDE_64_ioctl
+SC_LTTNG_TRACEPOINT_EVENT(ioctl,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, unsigned int cmd, unsigned long arg),
+	TP_ARGS(sc_exit(ret,) fd, cmd, arg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(unsigned int, cmd, cmd)) sc_inout(ctf_integer(unsigned long, arg, arg)))
+)
+#endif
+#ifndef OVERRIDE_64_ioprio_set
+SC_LTTNG_TRACEPOINT_EVENT(ioprio_set,
+	TP_PROTO(sc_exit(long ret,) int which, int who, int ioprio),
+	TP_ARGS(sc_exit(ret,) which, who, ioprio),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, which, which)) sc_in(ctf_integer(int, who, who)) sc_in(ctf_integer(int, ioprio, ioprio)))
+)
+#endif
+#ifndef OVERRIDE_64_fchown
+SC_LTTNG_TRACEPOINT_EVENT(fchown,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, uid_t user, gid_t group),
+	TP_ARGS(sc_exit(ret,) fd, user, group),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(uid_t, user, user)) sc_in(ctf_integer(gid_t, group, group)))
+)
+#endif
+#ifndef OVERRIDE_64_lseek
+SC_LTTNG_TRACEPOINT_EVENT(lseek,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, off_t offset, unsigned int whence),
+	TP_ARGS(sc_exit(ret,) fd, offset, whence),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(off_t, offset, offset)) sc_in(ctf_integer(unsigned int, whence, whence)))
+)
+#endif
+#ifndef OVERRIDE_64_tgkill
+SC_LTTNG_TRACEPOINT_EVENT(tgkill,
+	TP_PROTO(sc_exit(long ret,) pid_t tgid, pid_t pid, int sig),
+	TP_ARGS(sc_exit(ret,) tgid, pid, sig),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, tgid, tgid)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(int, sig, sig)))
+)
+#endif
+#ifndef OVERRIDE_64_setpriority
+SC_LTTNG_TRACEPOINT_EVENT(setpriority,
+	TP_PROTO(sc_exit(long ret,) int which, int who, int niceval),
+	TP_ARGS(sc_exit(ret,) which, who, niceval),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, which, which)) sc_in(ctf_integer(int, who, who)) sc_in(ctf_integer(int, niceval, niceval)))
+)
+#endif
+#ifndef OVERRIDE_64_setresuid
+SC_LTTNG_TRACEPOINT_EVENT(setresuid,
+	TP_PROTO(sc_exit(long ret,) uid_t ruid, uid_t euid, uid_t suid),
+	TP_ARGS(sc_exit(ret,) ruid, euid, suid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(uid_t, ruid, ruid)) sc_in(ctf_integer(uid_t, euid, euid)) sc_in(ctf_integer(uid_t, suid, suid)))
+)
+#endif
+#ifndef OVERRIDE_64_setresgid
+SC_LTTNG_TRACEPOINT_EVENT(setresgid,
+	TP_PROTO(sc_exit(long ret,) gid_t rgid, gid_t egid, gid_t sgid),
+	TP_ARGS(sc_exit(ret,) rgid, egid, sgid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(gid_t, rgid, rgid)) sc_in(ctf_integer(gid_t, egid, egid)) sc_in(ctf_integer(gid_t, sgid, sgid)))
+)
+#endif
+#ifndef OVERRIDE_64_semget
+SC_LTTNG_TRACEPOINT_EVENT(semget,
+	TP_PROTO(sc_exit(long ret,) key_t key, int nsems, int semflg),
+	TP_ARGS(sc_exit(ret,) key, nsems, semflg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(key_t, key, key)) sc_in(ctf_integer(int, nsems, nsems)) sc_in(ctf_integer(int, semflg, semflg)))
+)
+#endif
+#ifndef OVERRIDE_64_shmget
+SC_LTTNG_TRACEPOINT_EVENT(shmget,
+	TP_PROTO(sc_exit(long ret,) key_t key, size_t size, int shmflg),
+	TP_ARGS(sc_exit(ret,) key, size, shmflg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(key_t, key, key)) sc_in(ctf_integer(size_t, size, size)) sc_in(ctf_integer(int, shmflg, shmflg)))
+)
+#endif
+#ifndef OVERRIDE_64_socket
+SC_LTTNG_TRACEPOINT_EVENT(socket,
+	TP_PROTO(sc_exit(long ret,) int family, int type, int protocol),
+	TP_ARGS(sc_exit(ret,) family, type, protocol),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, family, family)) sc_in(ctf_integer(int, type, type)) sc_in(ctf_integer(int, protocol, protocol)))
+)
+#endif
+#ifndef OVERRIDE_64_readahead
+SC_LTTNG_TRACEPOINT_EVENT(readahead,
+	TP_PROTO(sc_exit(long ret,) int fd, loff_t offset, size_t count),
+	TP_ARGS(sc_exit(ret,) fd, offset, count),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(loff_t, offset, offset)) sc_in(ctf_integer(size_t, count, count)))
+)
+#endif
+#ifndef OVERRIDE_64_mprotect
+SC_LTTNG_TRACEPOINT_EVENT(mprotect,
+	TP_PROTO(sc_exit(long ret,) unsigned long start, size_t len, unsigned long prot),
+	TP_ARGS(sc_exit(ret,) start, len, prot),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, start, start)) sc_in(ctf_integer(size_t, len, len)) sc_in(ctf_integer(unsigned long, prot, prot)))
+)
+#endif
+#ifndef OVERRIDE_64_msync
+SC_LTTNG_TRACEPOINT_EVENT(msync,
+	TP_PROTO(sc_exit(long ret,) unsigned long start, size_t len, int flags),
+	TP_ARGS(sc_exit(ret,) start, len, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, start, start)) sc_in(ctf_integer(size_t, len, len)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_madvise
+SC_LTTNG_TRACEPOINT_EVENT(madvise,
+	TP_PROTO(sc_exit(long ret,) unsigned long start, size_t len_in, int behavior),
+	TP_ARGS(sc_exit(ret,) start, len_in, behavior),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, start, start)) sc_in(ctf_integer(size_t, len_in, len_in)) sc_in(ctf_integer(int, behavior, behavior)))
+)
+#endif
+#ifndef OVERRIDE_64_mlock2
+SC_LTTNG_TRACEPOINT_EVENT(mlock2,
+	TP_PROTO(sc_exit(long ret,) unsigned long start, size_t len, int flags),
+	TP_ARGS(sc_exit(ret,) start, len, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(unsigned long, start, start)) sc_inout(ctf_integer(size_t, len, len)) sc_inout(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_fallocate
+SC_LTTNG_TRACEPOINT_EVENT(fallocate,
+	TP_PROTO(sc_exit(long ret,) int fd, int mode, loff_t offset, loff_t len),
+	TP_ARGS(sc_exit(ret,) fd, mode, offset, len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(int, mode, mode)) sc_in(ctf_integer(loff_t, offset, offset)) sc_in(ctf_integer(loff_t, len, len)))
+)
+#endif
+#ifndef OVERRIDE_64_tee
+SC_LTTNG_TRACEPOINT_EVENT(tee,
+	TP_PROTO(sc_exit(long ret,) int fdin, int fdout, size_t len, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) fdin, fdout, len, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fdin, fdin)) sc_in(ctf_integer(int, fdout, fdout)) sc_in(ctf_integer(size_t, len, len)) sc_in(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_sync_file_range
+SC_LTTNG_TRACEPOINT_EVENT(sync_file_range,
+	TP_PROTO(sc_exit(long ret,) int fd, loff_t offset, loff_t nbytes, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) fd, offset, nbytes, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(loff_t, offset, offset)) sc_in(ctf_integer(loff_t, nbytes, nbytes)) sc_in(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_ptrace
+SC_LTTNG_TRACEPOINT_EVENT(ptrace,
+	TP_PROTO(sc_exit(long ret,) long request, long pid, unsigned long addr, unsigned long data),
+	TP_ARGS(sc_exit(ret,) request, pid, addr, data),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(long, request, request)) sc_in(ctf_integer(long, pid, pid)) sc_inout(ctf_integer(unsigned long, addr, addr)) sc_inout(ctf_integer(unsigned long, data, data)))
+)
+#endif
+#ifndef OVERRIDE_64_semctl
+SC_LTTNG_TRACEPOINT_EVENT(semctl,
+	TP_PROTO(sc_exit(long ret,) int semid, int semnum, int cmd, unsigned long arg),
+	TP_ARGS(sc_exit(ret,) semid, semnum, cmd, arg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, semid, semid)) sc_in(ctf_integer(int, semnum, semnum)) sc_in(ctf_integer(int, cmd, cmd)) sc_inout(ctf_integer(unsigned long, arg, arg)))
+)
+#endif
+#ifndef OVERRIDE_64_fadvise64_64
+SC_LTTNG_TRACEPOINT_EVENT(fadvise64_64,
+	TP_PROTO(sc_exit(long ret,) int fd, loff_t offset, loff_t len, int advice),
+	TP_ARGS(sc_exit(ret,) fd, offset, len, advice),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(int, fd, fd)) sc_inout(ctf_integer(loff_t, offset, offset)) sc_inout(ctf_integer(loff_t, len, len)) sc_inout(ctf_integer(int, advice, advice)))
+)
+#endif
+#ifndef OVERRIDE_64_prctl
+SC_LTTNG_TRACEPOINT_EVENT(prctl,
+	TP_PROTO(sc_exit(long ret,) int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5),
+	TP_ARGS(sc_exit(ret,) option, arg2, arg3, arg4, arg5),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, option, option)) sc_inout(ctf_integer(unsigned long, arg2, arg2)) sc_in(ctf_integer(unsigned long, arg3, arg3)) sc_in(ctf_integer(unsigned long, arg4, arg4)) sc_in(ctf_integer(unsigned long, arg5, arg5)))
+)
+#endif
+#ifndef OVERRIDE_64_mremap
+SC_LTTNG_TRACEPOINT_EVENT(mremap,
+	TP_PROTO(sc_exit(long ret,) unsigned long addr, unsigned long old_len, unsigned long new_len, unsigned long flags, unsigned long new_addr),
+	TP_ARGS(sc_exit(ret,) addr, old_len, new_len, flags, new_addr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, addr, addr)) sc_in(ctf_integer(unsigned long, old_len, old_len)) sc_in(ctf_integer(unsigned long, new_len, new_len)) sc_in(ctf_integer(unsigned long, flags, flags)) sc_in(ctf_integer(unsigned long, new_addr, new_addr)))
+)
+#endif
+#ifndef OVERRIDE_64_keyctl
+SC_LTTNG_TRACEPOINT_EVENT(keyctl,
+	TP_PROTO(sc_exit(long ret,) int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5),
+	TP_ARGS(sc_exit(ret,) option, arg2, arg3, arg4, arg5),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, option, option)) sc_inout(ctf_integer(unsigned long, arg2, arg2)) sc_inout(ctf_integer(unsigned long, arg3, arg3)) sc_inout(ctf_integer(unsigned long, arg4, arg4)) sc_inout(ctf_integer(unsigned long, arg5, arg5)))
+)
+#endif
+#ifndef OVERRIDE_64_remap_file_pages
+SC_LTTNG_TRACEPOINT_EVENT(remap_file_pages,
+	TP_PROTO(sc_exit(long ret,) unsigned long start, unsigned long size, unsigned long prot, unsigned long pgoff, unsigned long flags),
+	TP_ARGS(sc_exit(ret,) start, size, prot, pgoff, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, start, start)) sc_in(ctf_integer(unsigned long, size, size)) sc_in(ctf_integer(unsigned long, prot, prot)) sc_in(ctf_integer(unsigned long, pgoff, pgoff)) sc_in(ctf_integer(unsigned long, flags, flags)))
+)
+#endif
+
+#endif /*  _TRACE_SYSCALLS_INTEGERS_H */
+
+/* This part must be outside protection */
+#include "../../../probes/define_trace.h"
+
+#else /* CREATE_SYSCALL_TABLE */
+
+#include "arm-64-syscalls-4.4.0_integers_override.h"
+#include "syscalls_integers_override.h"
+
+#ifdef SC_ENTER
+#ifndef OVERRIDE_TABLE_64_vhangup
+TRACE_SYSCALL_TABLE(syscalls_noargs, vhangup, 58, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_sync
+TRACE_SYSCALL_TABLE(syscalls_noargs, sync, 81, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_yield
+TRACE_SYSCALL_TABLE(syscalls_noargs, sched_yield, 124, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_restart_syscall
+TRACE_SYSCALL_TABLE(syscalls_noargs, restart_syscall, 128, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_setsid
+TRACE_SYSCALL_TABLE(syscalls_noargs, setsid, 157, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getpid
+TRACE_SYSCALL_TABLE(syscalls_noargs, getpid, 172, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getppid
+TRACE_SYSCALL_TABLE(syscalls_noargs, getppid, 173, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getuid
+TRACE_SYSCALL_TABLE(syscalls_noargs, getuid, 174, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_geteuid
+TRACE_SYSCALL_TABLE(syscalls_noargs, geteuid, 175, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getgid
+TRACE_SYSCALL_TABLE(syscalls_noargs, getgid, 176, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getegid
+TRACE_SYSCALL_TABLE(syscalls_noargs, getegid, 177, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_gettid
+TRACE_SYSCALL_TABLE(syscalls_noargs, gettid, 178, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_munlockall
+TRACE_SYSCALL_TABLE(syscalls_noargs, munlockall, 231, 0)
+#endif
+#else /* #ifdef SC_ENTER */
+#ifndef OVERRIDE_TABLE_64_vhangup
+TRACE_SYSCALL_TABLE(vhangup, vhangup, 58, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_sync
+TRACE_SYSCALL_TABLE(sync, sync, 81, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_yield
+TRACE_SYSCALL_TABLE(sched_yield, sched_yield, 124, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_restart_syscall
+TRACE_SYSCALL_TABLE(restart_syscall, restart_syscall, 128, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_setsid
+TRACE_SYSCALL_TABLE(setsid, setsid, 157, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getpid
+TRACE_SYSCALL_TABLE(getpid, getpid, 172, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getppid
+TRACE_SYSCALL_TABLE(getppid, getppid, 173, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getuid
+TRACE_SYSCALL_TABLE(getuid, getuid, 174, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_geteuid
+TRACE_SYSCALL_TABLE(geteuid, geteuid, 175, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getgid
+TRACE_SYSCALL_TABLE(getgid, getgid, 176, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_getegid
+TRACE_SYSCALL_TABLE(getegid, getegid, 177, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_gettid
+TRACE_SYSCALL_TABLE(gettid, gettid, 178, 0)
+#endif
+#ifndef OVERRIDE_TABLE_64_munlockall
+TRACE_SYSCALL_TABLE(munlockall, munlockall, 231, 0)
+#endif
+#endif /* else #ifdef SC_ENTER */
+#ifndef OVERRIDE_TABLE_64_io_destroy
+TRACE_SYSCALL_TABLE(io_destroy, io_destroy, 1, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_eventfd2
+TRACE_SYSCALL_TABLE(eventfd2, eventfd2, 19, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_epoll_create1
+TRACE_SYSCALL_TABLE(epoll_create1, epoll_create1, 20, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_dup
+TRACE_SYSCALL_TABLE(dup, dup, 23, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_dup3
+TRACE_SYSCALL_TABLE(dup3, dup3, 24, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_fcntl
+TRACE_SYSCALL_TABLE(fcntl, fcntl, 25, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_inotify_init1
+TRACE_SYSCALL_TABLE(inotify_init1, inotify_init1, 26, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_inotify_rm_watch
+TRACE_SYSCALL_TABLE(inotify_rm_watch, inotify_rm_watch, 28, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_ioctl
+TRACE_SYSCALL_TABLE(ioctl, ioctl, 29, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_ioprio_set
+TRACE_SYSCALL_TABLE(ioprio_set, ioprio_set, 30, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_ioprio_get
+TRACE_SYSCALL_TABLE(ioprio_get, ioprio_get, 31, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_flock
+TRACE_SYSCALL_TABLE(flock, flock, 32, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_ftruncate
+TRACE_SYSCALL_TABLE(ftruncate, ftruncate, 46, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_fallocate
+TRACE_SYSCALL_TABLE(fallocate, fallocate, 47, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_fchdir
+TRACE_SYSCALL_TABLE(fchdir, fchdir, 50, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_fchmod
+TRACE_SYSCALL_TABLE(fchmod, fchmod, 52, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_fchown
+TRACE_SYSCALL_TABLE(fchown, fchown, 55, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_close
+TRACE_SYSCALL_TABLE(close, close, 57, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_lseek
+TRACE_SYSCALL_TABLE(lseek, lseek, 62, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_tee
+TRACE_SYSCALL_TABLE(tee, tee, 77, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_fsync
+TRACE_SYSCALL_TABLE(fsync, fsync, 82, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_fdatasync
+TRACE_SYSCALL_TABLE(fdatasync, fdatasync, 83, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_sync_file_range
+TRACE_SYSCALL_TABLE(sync_file_range, sync_file_range, 84, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_timerfd_create
+TRACE_SYSCALL_TABLE(timerfd_create, timerfd_create, 85, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_personality
+TRACE_SYSCALL_TABLE(personality, personality, 92, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_exit
+TRACE_SYSCALL_TABLE(exit, exit, 93, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_exit_group
+TRACE_SYSCALL_TABLE(exit_group, exit_group, 94, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_unshare
+TRACE_SYSCALL_TABLE(unshare, unshare, 97, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_timer_getoverrun
+TRACE_SYSCALL_TABLE(timer_getoverrun, timer_getoverrun, 109, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_timer_delete
+TRACE_SYSCALL_TABLE(timer_delete, timer_delete, 111, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_ptrace
+TRACE_SYSCALL_TABLE(ptrace, ptrace, 117, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_getscheduler
+TRACE_SYSCALL_TABLE(sched_getscheduler, sched_getscheduler, 120, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_get_priority_max
+TRACE_SYSCALL_TABLE(sched_get_priority_max, sched_get_priority_max, 125, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_get_priority_min
+TRACE_SYSCALL_TABLE(sched_get_priority_min, sched_get_priority_min, 126, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_kill
+TRACE_SYSCALL_TABLE(kill, kill, 129, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_tkill
+TRACE_SYSCALL_TABLE(tkill, tkill, 130, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_tgkill
+TRACE_SYSCALL_TABLE(tgkill, tgkill, 131, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_setpriority
+TRACE_SYSCALL_TABLE(setpriority, setpriority, 140, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_getpriority
+TRACE_SYSCALL_TABLE(getpriority, getpriority, 141, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_setregid
+TRACE_SYSCALL_TABLE(setregid, setregid, 143, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_setgid
+TRACE_SYSCALL_TABLE(setgid, setgid, 144, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_setreuid
+TRACE_SYSCALL_TABLE(setreuid, setreuid, 145, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_setuid
+TRACE_SYSCALL_TABLE(setuid, setuid, 146, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_setresuid
+TRACE_SYSCALL_TABLE(setresuid, setresuid, 147, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_setresgid
+TRACE_SYSCALL_TABLE(setresgid, setresgid, 149, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_setfsuid
+TRACE_SYSCALL_TABLE(setfsuid, setfsuid, 151, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_setfsgid
+TRACE_SYSCALL_TABLE(setfsgid, setfsgid, 152, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_setpgid
+TRACE_SYSCALL_TABLE(setpgid, setpgid, 154, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_getpgid
+TRACE_SYSCALL_TABLE(getpgid, getpgid, 155, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_getsid
+TRACE_SYSCALL_TABLE(getsid, getsid, 156, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_umask
+TRACE_SYSCALL_TABLE(umask, umask, 166, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_prctl
+TRACE_SYSCALL_TABLE(prctl, prctl, 167, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_msgget
+TRACE_SYSCALL_TABLE(msgget, msgget, 186, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_semget
+TRACE_SYSCALL_TABLE(semget, semget, 190, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_semctl
+TRACE_SYSCALL_TABLE(semctl, semctl, 191, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_shmget
+TRACE_SYSCALL_TABLE(shmget, shmget, 194, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_socket
+TRACE_SYSCALL_TABLE(socket, socket, 198, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_listen
+TRACE_SYSCALL_TABLE(listen, listen, 201, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_shutdown
+TRACE_SYSCALL_TABLE(shutdown, shutdown, 210, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_readahead
+TRACE_SYSCALL_TABLE(readahead, readahead, 213, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_brk
+TRACE_SYSCALL_TABLE(brk, brk, 214, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_munmap
+TRACE_SYSCALL_TABLE(munmap, munmap, 215, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_mremap
+TRACE_SYSCALL_TABLE(mremap, mremap, 216, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_keyctl
+TRACE_SYSCALL_TABLE(keyctl, keyctl, 219, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_fadvise64_64
+TRACE_SYSCALL_TABLE(fadvise64_64, fadvise64_64, 223, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_mprotect
+TRACE_SYSCALL_TABLE(mprotect, mprotect, 226, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_msync
+TRACE_SYSCALL_TABLE(msync, msync, 227, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_mlock
+TRACE_SYSCALL_TABLE(mlock, mlock, 228, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_munlock
+TRACE_SYSCALL_TABLE(munlock, munlock, 229, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_mlockall
+TRACE_SYSCALL_TABLE(mlockall, mlockall, 230, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_madvise
+TRACE_SYSCALL_TABLE(madvise, madvise, 233, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_remap_file_pages
+TRACE_SYSCALL_TABLE(remap_file_pages, remap_file_pages, 234, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_fanotify_init
+TRACE_SYSCALL_TABLE(fanotify_init, fanotify_init, 262, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_syncfs
+TRACE_SYSCALL_TABLE(syncfs, syncfs, 267, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_setns
+TRACE_SYSCALL_TABLE(setns, setns, 268, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_membarrier
+TRACE_SYSCALL_TABLE(membarrier, membarrier, 283, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_mlock2
+TRACE_SYSCALL_TABLE(mlock2, mlock2, 284, 3)
+#endif
+
+#endif /* CREATE_SYSCALL_TABLE */
diff --git a/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_integers_override.h b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_integers_override.h
new file mode 100644
index 0000000..7a5ef79
--- /dev/null
+++ b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_integers_override.h
@@ -0,0 +1,8 @@
+/*
+ * this is a place-holder for arm64 integer syscall definition override.
+ */
+#ifndef CREATE_SYSCALL_TABLE
+#else	/* CREATE_SYSCALL_TABLE */
+#define OVERRIDE_TABLE_64_mmap
+TRACE_SYSCALL_TABLE(mmap, mmap, 222, 6)
+#endif /* CREATE_SYSCALL_TABLE */
diff --git a/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_pointers.h b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_pointers.h
new file mode 100644
index 0000000..de2833f
--- /dev/null
+++ b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_pointers.h
@@ -0,0 +1,1664 @@
+/* THIS FILE IS AUTO-GENERATED. DO NOT EDIT */
+#ifndef CREATE_SYSCALL_TABLE
+
+#if !defined(_TRACE_SYSCALLS_POINTERS_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _TRACE_SYSCALLS_POINTERS_H
+
+#include "../../../probes/lttng-tracepoint-event.h"
+#include <linux/syscalls.h>
+#include "arm-64-syscalls-4.4.0_pointers_override.h"
+#include "syscalls_pointers_override.h"
+
+#ifndef OVERRIDE_64_chdir
+SC_LTTNG_TRACEPOINT_EVENT(chdir,
+	TP_PROTO(sc_exit(long ret,) const char * filename),
+	TP_ARGS(sc_exit(ret,) filename),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(filename, filename)))
+)
+#endif
+#ifndef OVERRIDE_64_chroot
+SC_LTTNG_TRACEPOINT_EVENT(chroot,
+	TP_PROTO(sc_exit(long ret,) const char * filename),
+	TP_ARGS(sc_exit(ret,) filename),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(filename, filename)))
+)
+#endif
+#ifndef OVERRIDE_64_acct
+SC_LTTNG_TRACEPOINT_EVENT(acct,
+	TP_PROTO(sc_exit(long ret,) const char * name),
+	TP_ARGS(sc_exit(ret,) name),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(name, name)))
+)
+#endif
+#ifndef OVERRIDE_64_set_tid_address
+SC_LTTNG_TRACEPOINT_EVENT(set_tid_address,
+	TP_PROTO(sc_exit(long ret,) int * tidptr),
+	TP_ARGS(sc_exit(ret,) tidptr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int *, tidptr, tidptr)))
+)
+#endif
+#ifndef OVERRIDE_64_times
+SC_LTTNG_TRACEPOINT_EVENT(times,
+	TP_PROTO(sc_exit(long ret,) struct tms * tbuf),
+	TP_ARGS(sc_exit(ret,) tbuf),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(struct tms *, tbuf, tbuf)))
+)
+#endif
+#ifndef OVERRIDE_64_newuname
+SC_LTTNG_TRACEPOINT_EVENT(newuname,
+	TP_PROTO(sc_exit(long ret,) struct new_utsname * name),
+	TP_ARGS(sc_exit(ret,) name),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(struct new_utsname *, name, name)))
+)
+#endif
+#ifndef OVERRIDE_64_adjtimex
+SC_LTTNG_TRACEPOINT_EVENT(adjtimex,
+	TP_PROTO(sc_exit(long ret,) struct timex * txc_p),
+	TP_ARGS(sc_exit(ret,) txc_p),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(struct timex *, txc_p, txc_p)))
+)
+#endif
+#ifndef OVERRIDE_64_sysinfo
+SC_LTTNG_TRACEPOINT_EVENT(sysinfo,
+	TP_PROTO(sc_exit(long ret,) struct sysinfo * info),
+	TP_ARGS(sc_exit(ret,) info),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(struct sysinfo *, info, info)))
+)
+#endif
+#ifndef OVERRIDE_64_mq_unlink
+SC_LTTNG_TRACEPOINT_EVENT(mq_unlink,
+	TP_PROTO(sc_exit(long ret,) const char * u_name),
+	TP_ARGS(sc_exit(ret,) u_name),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(u_name, u_name)))
+)
+#endif
+#ifndef OVERRIDE_64_shmdt
+SC_LTTNG_TRACEPOINT_EVENT(shmdt,
+	TP_PROTO(sc_exit(long ret,) char * shmaddr),
+	TP_ARGS(sc_exit(ret,) shmaddr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(char *, shmaddr, shmaddr)))
+)
+#endif
+#ifndef OVERRIDE_64_swapoff
+SC_LTTNG_TRACEPOINT_EVENT(swapoff,
+	TP_PROTO(sc_exit(long ret,) const char * specialfile),
+	TP_ARGS(sc_exit(ret,) specialfile),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(specialfile, specialfile)))
+)
+#endif
+#ifndef OVERRIDE_64_io_setup
+SC_LTTNG_TRACEPOINT_EVENT(io_setup,
+	TP_PROTO(sc_exit(long ret,) unsigned nr_events, aio_context_t * ctxp),
+	TP_ARGS(sc_exit(ret,) nr_events, ctxp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned, nr_events, nr_events)) sc_in(ctf_integer(aio_context_t *, ctxp, ctxp)))
+)
+#endif
+#ifndef OVERRIDE_64_removexattr
+SC_LTTNG_TRACEPOINT_EVENT(removexattr,
+	TP_PROTO(sc_exit(long ret,) const char * pathname, const char * name),
+	TP_ARGS(sc_exit(ret,) pathname, name),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(pathname, pathname)) sc_in(ctf_user_string(name, name)))
+)
+#endif
+#ifndef OVERRIDE_64_lremovexattr
+SC_LTTNG_TRACEPOINT_EVENT(lremovexattr,
+	TP_PROTO(sc_exit(long ret,) const char * pathname, const char * name),
+	TP_ARGS(sc_exit(ret,) pathname, name),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(pathname, pathname)) sc_in(ctf_user_string(name, name)))
+)
+#endif
+#ifndef OVERRIDE_64_fremovexattr
+SC_LTTNG_TRACEPOINT_EVENT(fremovexattr,
+	TP_PROTO(sc_exit(long ret,) int fd, const char * name),
+	TP_ARGS(sc_exit(ret,) fd, name),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_user_string(name, name)))
+)
+#endif
+#ifndef OVERRIDE_64_getcwd
+SC_LTTNG_TRACEPOINT_EVENT(getcwd,
+	TP_PROTO(sc_exit(long ret,) char * buf, unsigned long size),
+	TP_ARGS(sc_exit(ret,) buf, size),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(char *, buf, buf)) sc_in(ctf_integer(unsigned long, size, size)))
+)
+#endif
+#ifndef OVERRIDE_64_umount
+SC_LTTNG_TRACEPOINT_EVENT(umount,
+	TP_PROTO(sc_exit(long ret,) char * name, int flags),
+	TP_ARGS(sc_exit(ret,) name, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(name, name)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_pivot_root
+SC_LTTNG_TRACEPOINT_EVENT(pivot_root,
+	TP_PROTO(sc_exit(long ret,) const char * new_root, const char * put_old),
+	TP_ARGS(sc_exit(ret,) new_root, put_old),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(new_root, new_root)) sc_in(ctf_user_string(put_old, put_old)))
+)
+#endif
+#ifndef OVERRIDE_64_statfs
+SC_LTTNG_TRACEPOINT_EVENT(statfs,
+	TP_PROTO(sc_exit(long ret,) const char * pathname, struct statfs * buf),
+	TP_ARGS(sc_exit(ret,) pathname, buf),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(pathname, pathname)) sc_out(ctf_integer(struct statfs *, buf, buf)))
+)
+#endif
+#ifndef OVERRIDE_64_fstatfs
+SC_LTTNG_TRACEPOINT_EVENT(fstatfs,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, struct statfs * buf),
+	TP_ARGS(sc_exit(ret,) fd, buf),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_out(ctf_integer(struct statfs *, buf, buf)))
+)
+#endif
+#ifndef OVERRIDE_64_truncate
+SC_LTTNG_TRACEPOINT_EVENT(truncate,
+	TP_PROTO(sc_exit(long ret,) const char * path, long length),
+	TP_ARGS(sc_exit(ret,) path, length),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(path, path)) sc_in(ctf_integer(long, length, length)))
+)
+#endif
+#ifndef OVERRIDE_64_pipe2
+SC_LTTNG_TRACEPOINT_EVENT(pipe2,
+	TP_PROTO(sc_exit(long ret,) int * fildes, int flags),
+	TP_ARGS(sc_exit(ret,) fildes, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(int *, fildes, fildes)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_newfstat
+SC_LTTNG_TRACEPOINT_EVENT(newfstat,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, struct stat * statbuf),
+	TP_ARGS(sc_exit(ret,) fd, statbuf),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_out(ctf_integer(struct stat *, statbuf, statbuf)))
+)
+#endif
+#ifndef OVERRIDE_64_timerfd_gettime
+SC_LTTNG_TRACEPOINT_EVENT(timerfd_gettime,
+	TP_PROTO(sc_exit(long ret,) int ufd, struct itimerspec * otmr),
+	TP_ARGS(sc_exit(ret,) ufd, otmr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, ufd, ufd)) sc_out(ctf_integer(struct itimerspec *, otmr, otmr)))
+)
+#endif
+#ifndef OVERRIDE_64_set_robust_list
+SC_LTTNG_TRACEPOINT_EVENT(set_robust_list,
+	TP_PROTO(sc_exit(long ret,) struct robust_list_head * head, size_t len),
+	TP_ARGS(sc_exit(ret,) head, len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(struct robust_list_head *, head, head)) sc_in(ctf_integer(size_t, len, len)))
+)
+#endif
+#ifndef OVERRIDE_64_nanosleep
+SC_LTTNG_TRACEPOINT_EVENT(nanosleep,
+	TP_PROTO(sc_exit(long ret,) struct timespec * rqtp, struct timespec * rmtp),
+	TP_ARGS(sc_exit(ret,) rqtp, rmtp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(struct timespec *, rqtp, rqtp)) sc_out(ctf_integer(struct timespec *, rmtp, rmtp)))
+)
+#endif
+#ifndef OVERRIDE_64_getitimer
+SC_LTTNG_TRACEPOINT_EVENT(getitimer,
+	TP_PROTO(sc_exit(long ret,) int which, struct itimerval * value),
+	TP_ARGS(sc_exit(ret,) which, value),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, which, which)) sc_out(ctf_integer(struct itimerval *, value, value)))
+)
+#endif
+#ifndef OVERRIDE_64_delete_module
+SC_LTTNG_TRACEPOINT_EVENT(delete_module,
+	TP_PROTO(sc_exit(long ret,) const char * name_user, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) name_user, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(name_user, name_user)) sc_in(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_timer_gettime
+SC_LTTNG_TRACEPOINT_EVENT(timer_gettime,
+	TP_PROTO(sc_exit(long ret,) timer_t timer_id, struct itimerspec * setting),
+	TP_ARGS(sc_exit(ret,) timer_id, setting),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(timer_t, timer_id, timer_id)) sc_out(ctf_integer(struct itimerspec *, setting, setting)))
+)
+#endif
+#ifndef OVERRIDE_64_clock_settime
+SC_LTTNG_TRACEPOINT_EVENT(clock_settime,
+	TP_PROTO(sc_exit(long ret,) const clockid_t which_clock, const struct timespec * tp),
+	TP_ARGS(sc_exit(ret,) which_clock, tp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(const clockid_t, which_clock, which_clock)) sc_in(ctf_integer(const struct timespec *, tp, tp)))
+)
+#endif
+#ifndef OVERRIDE_64_clock_gettime
+SC_LTTNG_TRACEPOINT_EVENT(clock_gettime,
+	TP_PROTO(sc_exit(long ret,) const clockid_t which_clock, struct timespec * tp),
+	TP_ARGS(sc_exit(ret,) which_clock, tp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(const clockid_t, which_clock, which_clock)) sc_out(ctf_integer(struct timespec *, tp, tp)))
+)
+#endif
+#ifndef OVERRIDE_64_clock_getres
+SC_LTTNG_TRACEPOINT_EVENT(clock_getres,
+	TP_PROTO(sc_exit(long ret,) const clockid_t which_clock, struct timespec * tp),
+	TP_ARGS(sc_exit(ret,) which_clock, tp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(const clockid_t, which_clock, which_clock)) sc_out(ctf_integer(struct timespec *, tp, tp)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_setparam
+SC_LTTNG_TRACEPOINT_EVENT(sched_setparam,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, struct sched_param * param),
+	TP_ARGS(sc_exit(ret,) pid, param),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(struct sched_param *, param, param)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_getparam
+SC_LTTNG_TRACEPOINT_EVENT(sched_getparam,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, struct sched_param * param),
+	TP_ARGS(sc_exit(ret,) pid, param),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_out(ctf_integer(struct sched_param *, param, param)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_rr_get_interval
+SC_LTTNG_TRACEPOINT_EVENT(sched_rr_get_interval,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, struct timespec * interval),
+	TP_ARGS(sc_exit(ret,) pid, interval),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_out(ctf_integer(struct timespec *, interval, interval)))
+)
+#endif
+#ifndef OVERRIDE_64_sigaltstack
+SC_LTTNG_TRACEPOINT_EVENT(sigaltstack,
+	TP_PROTO(sc_exit(long ret,) const stack_t * uss, stack_t * uoss),
+	TP_ARGS(sc_exit(ret,) uss, uoss),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(const stack_t *, uss, uss)) sc_inout(ctf_integer(stack_t *, uoss, uoss)))
+)
+#endif
+#ifndef OVERRIDE_64_rt_sigsuspend
+SC_LTTNG_TRACEPOINT_EVENT(rt_sigsuspend,
+	TP_PROTO(sc_exit(long ret,) sigset_t * unewset, size_t sigsetsize),
+	TP_ARGS(sc_exit(ret,) unewset, sigsetsize),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(sigset_t *, unewset, unewset)) sc_in(ctf_integer(size_t, sigsetsize, sigsetsize)))
+)
+#endif
+#ifndef OVERRIDE_64_rt_sigpending
+SC_LTTNG_TRACEPOINT_EVENT(rt_sigpending,
+	TP_PROTO(sc_exit(long ret,) sigset_t * uset, size_t sigsetsize),
+	TP_ARGS(sc_exit(ret,) uset, sigsetsize),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(sigset_t *, uset, uset)) sc_in(ctf_integer(size_t, sigsetsize, sigsetsize)))
+)
+#endif
+#ifndef OVERRIDE_64_getgroups
+SC_LTTNG_TRACEPOINT_EVENT(getgroups,
+	TP_PROTO(sc_exit(long ret,) int gidsetsize, gid_t * grouplist),
+	TP_ARGS(sc_exit(ret,) gidsetsize, grouplist),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, gidsetsize, gidsetsize)) sc_out(ctf_integer(gid_t *, grouplist, grouplist)))
+)
+#endif
+#ifndef OVERRIDE_64_setgroups
+SC_LTTNG_TRACEPOINT_EVENT(setgroups,
+	TP_PROTO(sc_exit(long ret,) int gidsetsize, gid_t * grouplist),
+	TP_ARGS(sc_exit(ret,) gidsetsize, grouplist),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, gidsetsize, gidsetsize)) sc_in(ctf_integer(gid_t *, grouplist, grouplist)))
+)
+#endif
+#ifndef OVERRIDE_64_sethostname
+SC_LTTNG_TRACEPOINT_EVENT(sethostname,
+	TP_PROTO(sc_exit(long ret,) char * name, int len),
+	TP_ARGS(sc_exit(ret,) name, len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(name, name)) sc_in(ctf_integer(int, len, len)))
+)
+#endif
+#ifndef OVERRIDE_64_setdomainname
+SC_LTTNG_TRACEPOINT_EVENT(setdomainname,
+	TP_PROTO(sc_exit(long ret,) char * name, int len),
+	TP_ARGS(sc_exit(ret,) name, len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(name, name)) sc_in(ctf_integer(int, len, len)))
+)
+#endif
+#ifndef OVERRIDE_64_getrlimit
+SC_LTTNG_TRACEPOINT_EVENT(getrlimit,
+	TP_PROTO(sc_exit(long ret,) unsigned int resource, struct rlimit * rlim),
+	TP_ARGS(sc_exit(ret,) resource, rlim),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, resource, resource)) sc_out(ctf_integer(struct rlimit *, rlim, rlim)))
+)
+#endif
+#ifndef OVERRIDE_64_setrlimit
+SC_LTTNG_TRACEPOINT_EVENT(setrlimit,
+	TP_PROTO(sc_exit(long ret,) unsigned int resource, struct rlimit * rlim),
+	TP_ARGS(sc_exit(ret,) resource, rlim),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, resource, resource)) sc_in(ctf_integer(struct rlimit *, rlim, rlim)))
+)
+#endif
+#ifndef OVERRIDE_64_getrusage
+SC_LTTNG_TRACEPOINT_EVENT(getrusage,
+	TP_PROTO(sc_exit(long ret,) int who, struct rusage * ru),
+	TP_ARGS(sc_exit(ret,) who, ru),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, who, who)) sc_out(ctf_integer(struct rusage *, ru, ru)))
+)
+#endif
+#ifndef OVERRIDE_64_gettimeofday
+SC_LTTNG_TRACEPOINT_EVENT(gettimeofday,
+	TP_PROTO(sc_exit(long ret,) struct timeval * tv, struct timezone * tz),
+	TP_ARGS(sc_exit(ret,) tv, tz),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(struct timeval *, tv, tv)) sc_out(ctf_integer(struct timezone *, tz, tz)))
+)
+#endif
+#ifndef OVERRIDE_64_settimeofday
+SC_LTTNG_TRACEPOINT_EVENT(settimeofday,
+	TP_PROTO(sc_exit(long ret,) struct timeval * tv, struct timezone * tz),
+	TP_ARGS(sc_exit(ret,) tv, tz),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(struct timeval *, tv, tv)) sc_in(ctf_integer(struct timezone *, tz, tz)))
+)
+#endif
+#ifndef OVERRIDE_64_mq_notify
+SC_LTTNG_TRACEPOINT_EVENT(mq_notify,
+	TP_PROTO(sc_exit(long ret,) mqd_t mqdes, const struct sigevent * u_notification),
+	TP_ARGS(sc_exit(ret,) mqdes, u_notification),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(mqd_t, mqdes, mqdes)) sc_in(ctf_integer(const struct sigevent *, u_notification, u_notification)))
+)
+#endif
+#ifndef OVERRIDE_64_swapon
+SC_LTTNG_TRACEPOINT_EVENT(swapon,
+	TP_PROTO(sc_exit(long ret,) const char * specialfile, int swap_flags),
+	TP_ARGS(sc_exit(ret,) specialfile, swap_flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(specialfile, specialfile)) sc_in(ctf_integer(int, swap_flags, swap_flags)))
+)
+#endif
+#ifndef OVERRIDE_64_clock_adjtime
+SC_LTTNG_TRACEPOINT_EVENT(clock_adjtime,
+	TP_PROTO(sc_exit(long ret,) const clockid_t which_clock, struct timex * utx),
+	TP_ARGS(sc_exit(ret,) which_clock, utx),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(const clockid_t, which_clock, which_clock)) sc_inout(ctf_integer(struct timex *, utx, utx)))
+)
+#endif
+#ifndef OVERRIDE_64_memfd_create
+SC_LTTNG_TRACEPOINT_EVENT(memfd_create,
+	TP_PROTO(sc_exit(long ret,) const char * uname, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) uname, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_user_string(uname, uname)) sc_inout(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_io_submit
+SC_LTTNG_TRACEPOINT_EVENT(io_submit,
+	TP_PROTO(sc_exit(long ret,) aio_context_t ctx_id, long nr, struct iocb * * iocbpp),
+	TP_ARGS(sc_exit(ret,) ctx_id, nr, iocbpp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(aio_context_t, ctx_id, ctx_id)) sc_in(ctf_integer(long, nr, nr)) sc_in(ctf_integer(struct iocb * *, iocbpp, iocbpp)))
+)
+#endif
+#ifndef OVERRIDE_64_io_cancel
+SC_LTTNG_TRACEPOINT_EVENT(io_cancel,
+	TP_PROTO(sc_exit(long ret,) aio_context_t ctx_id, struct iocb * iocb, struct io_event * result),
+	TP_ARGS(sc_exit(ret,) ctx_id, iocb, result),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(aio_context_t, ctx_id, ctx_id)) sc_in(ctf_integer(struct iocb *, iocb, iocb)) sc_out(ctf_integer(struct io_event *, result, result)))
+)
+#endif
+#ifndef OVERRIDE_64_listxattr
+SC_LTTNG_TRACEPOINT_EVENT(listxattr,
+	TP_PROTO(sc_exit(long ret,) const char * pathname, char * list, size_t size),
+	TP_ARGS(sc_exit(ret,) pathname, list, size),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(pathname, pathname)) sc_out(ctf_integer(char *, list, list)) sc_in(ctf_integer(size_t, size, size)))
+)
+#endif
+#ifndef OVERRIDE_64_llistxattr
+SC_LTTNG_TRACEPOINT_EVENT(llistxattr,
+	TP_PROTO(sc_exit(long ret,) const char * pathname, char * list, size_t size),
+	TP_ARGS(sc_exit(ret,) pathname, list, size),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(pathname, pathname)) sc_out(ctf_integer(char *, list, list)) sc_in(ctf_integer(size_t, size, size)))
+)
+#endif
+#ifndef OVERRIDE_64_flistxattr
+SC_LTTNG_TRACEPOINT_EVENT(flistxattr,
+	TP_PROTO(sc_exit(long ret,) int fd, char * list, size_t size),
+	TP_ARGS(sc_exit(ret,) fd, list, size),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_out(ctf_integer(char *, list, list)) sc_in(ctf_integer(size_t, size, size)))
+)
+#endif
+#ifndef OVERRIDE_64_lookup_dcookie
+SC_LTTNG_TRACEPOINT_EVENT(lookup_dcookie,
+	TP_PROTO(sc_exit(long ret,) u64 cookie64, char * buf, size_t len),
+	TP_ARGS(sc_exit(ret,) cookie64, buf, len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(u64, cookie64, cookie64)) sc_out(ctf_integer(char *, buf, buf)) sc_in(ctf_integer(size_t, len, len)))
+)
+#endif
+#ifndef OVERRIDE_64_inotify_add_watch
+SC_LTTNG_TRACEPOINT_EVENT(inotify_add_watch,
+	TP_PROTO(sc_exit(long ret,) int fd, const char * pathname, u32 mask),
+	TP_ARGS(sc_exit(ret,) fd, pathname, mask),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_user_string(pathname, pathname)) sc_in(ctf_integer(u32, mask, mask)))
+)
+#endif
+#ifndef OVERRIDE_64_mkdirat
+SC_LTTNG_TRACEPOINT_EVENT(mkdirat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * pathname, umode_t mode),
+	TP_ARGS(sc_exit(ret,) dfd, pathname, mode),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(pathname, pathname)) sc_in(ctf_integer(umode_t, mode, mode)))
+)
+#endif
+#ifndef OVERRIDE_64_unlinkat
+SC_LTTNG_TRACEPOINT_EVENT(unlinkat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * pathname, int flag),
+	TP_ARGS(sc_exit(ret,) dfd, pathname, flag),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(pathname, pathname)) sc_in(ctf_integer(int, flag, flag)))
+)
+#endif
+#ifndef OVERRIDE_64_symlinkat
+SC_LTTNG_TRACEPOINT_EVENT(symlinkat,
+	TP_PROTO(sc_exit(long ret,) const char * oldname, int newdfd, const char * newname),
+	TP_ARGS(sc_exit(ret,) oldname, newdfd, newname),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(oldname, oldname)) sc_in(ctf_integer(int, newdfd, newdfd)) sc_in(ctf_user_string(newname, newname)))
+)
+#endif
+#ifndef OVERRIDE_64_faccessat
+SC_LTTNG_TRACEPOINT_EVENT(faccessat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * filename, int mode),
+	TP_ARGS(sc_exit(ret,) dfd, filename, mode),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(filename, filename)) sc_in(ctf_integer(int, mode, mode)))
+)
+#endif
+#ifndef OVERRIDE_64_fchmodat
+SC_LTTNG_TRACEPOINT_EVENT(fchmodat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * filename, umode_t mode),
+	TP_ARGS(sc_exit(ret,) dfd, filename, mode),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(filename, filename)) sc_in(ctf_integer(umode_t, mode, mode)))
+)
+#endif
+#ifndef OVERRIDE_64_getdents64
+SC_LTTNG_TRACEPOINT_EVENT(getdents64,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, struct linux_dirent64 * dirent, unsigned int count),
+	TP_ARGS(sc_exit(ret,) fd, dirent, count),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_out(ctf_integer(struct linux_dirent64 *, dirent, dirent)) sc_in(ctf_integer(unsigned int, count, count)))
+)
+#endif
+#ifndef OVERRIDE_64_read
+SC_LTTNG_TRACEPOINT_EVENT(read,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, char * buf, size_t count),
+	TP_ARGS(sc_exit(ret,) fd, buf, count),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_out(ctf_integer(char *, buf, buf)) sc_in(ctf_integer(size_t, count, count)))
+)
+#endif
+#ifndef OVERRIDE_64_write
+SC_LTTNG_TRACEPOINT_EVENT(write,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, const char * buf, size_t count),
+	TP_ARGS(sc_exit(ret,) fd, buf, count),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(const char *, buf, buf)) sc_in(ctf_integer(size_t, count, count)))
+)
+#endif
+#ifndef OVERRIDE_64_readv
+SC_LTTNG_TRACEPOINT_EVENT(readv,
+	TP_PROTO(sc_exit(long ret,) unsigned long fd, const struct iovec * vec, unsigned long vlen),
+	TP_ARGS(sc_exit(ret,) fd, vec, vlen),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, fd, fd)) sc_inout(ctf_integer(const struct iovec *, vec, vec)) sc_in(ctf_integer(unsigned long, vlen, vlen)))
+)
+#endif
+#ifndef OVERRIDE_64_writev
+SC_LTTNG_TRACEPOINT_EVENT(writev,
+	TP_PROTO(sc_exit(long ret,) unsigned long fd, const struct iovec * vec, unsigned long vlen),
+	TP_ARGS(sc_exit(ret,) fd, vec, vlen),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, fd, fd)) sc_inout(ctf_integer(const struct iovec *, vec, vec)) sc_in(ctf_integer(unsigned long, vlen, vlen)))
+)
+#endif
+#ifndef OVERRIDE_64_get_robust_list
+SC_LTTNG_TRACEPOINT_EVENT(get_robust_list,
+	TP_PROTO(sc_exit(long ret,) int pid, struct robust_list_head * * head_ptr, size_t * len_ptr),
+	TP_ARGS(sc_exit(ret,) pid, head_ptr, len_ptr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, pid, pid)) sc_out(ctf_integer(struct robust_list_head * *, head_ptr, head_ptr)) sc_out(ctf_integer(size_t *, len_ptr, len_ptr)))
+)
+#endif
+#ifndef OVERRIDE_64_setitimer
+SC_LTTNG_TRACEPOINT_EVENT(setitimer,
+	TP_PROTO(sc_exit(long ret,) int which, struct itimerval * value, struct itimerval * ovalue),
+	TP_ARGS(sc_exit(ret,) which, value, ovalue),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, which, which)) sc_in(ctf_integer(struct itimerval *, value, value)) sc_out(ctf_integer(struct itimerval *, ovalue, ovalue)))
+)
+#endif
+#ifndef OVERRIDE_64_init_module
+SC_LTTNG_TRACEPOINT_EVENT(init_module,
+	TP_PROTO(sc_exit(long ret,) void * umod, unsigned long len, const char * uargs),
+	TP_ARGS(sc_exit(ret,) umod, len, uargs),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(void *, umod, umod)) sc_in(ctf_integer(unsigned long, len, len)) sc_in(ctf_integer(const char *, uargs, uargs)))
+)
+#endif
+#ifndef OVERRIDE_64_timer_create
+SC_LTTNG_TRACEPOINT_EVENT(timer_create,
+	TP_PROTO(sc_exit(long ret,) const clockid_t which_clock, struct sigevent * timer_event_spec, timer_t * created_timer_id),
+	TP_ARGS(sc_exit(ret,) which_clock, timer_event_spec, created_timer_id),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(const clockid_t, which_clock, which_clock)) sc_in(ctf_integer(struct sigevent *, timer_event_spec, timer_event_spec)) sc_out(ctf_integer(timer_t *, created_timer_id, created_timer_id)))
+)
+#endif
+#ifndef OVERRIDE_64_syslog
+SC_LTTNG_TRACEPOINT_EVENT(syslog,
+	TP_PROTO(sc_exit(long ret,) int type, char * buf, int len),
+	TP_ARGS(sc_exit(ret,) type, buf, len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, type, type)) sc_out(ctf_integer(char *, buf, buf)) sc_in(ctf_integer(int, len, len)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_setscheduler
+SC_LTTNG_TRACEPOINT_EVENT(sched_setscheduler,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, int policy, struct sched_param * param),
+	TP_ARGS(sc_exit(ret,) pid, policy, param),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(int, policy, policy)) sc_in(ctf_integer(struct sched_param *, param, param)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_setaffinity
+SC_LTTNG_TRACEPOINT_EVENT(sched_setaffinity,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, unsigned int len, unsigned long * user_mask_ptr),
+	TP_ARGS(sc_exit(ret,) pid, len, user_mask_ptr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(unsigned int, len, len)) sc_in(ctf_integer(unsigned long *, user_mask_ptr, user_mask_ptr)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_getaffinity
+SC_LTTNG_TRACEPOINT_EVENT(sched_getaffinity,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, unsigned int len, unsigned long * user_mask_ptr),
+	TP_ARGS(sc_exit(ret,) pid, len, user_mask_ptr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(unsigned int, len, len)) sc_out(ctf_integer(unsigned long *, user_mask_ptr, user_mask_ptr)))
+)
+#endif
+#ifndef OVERRIDE_64_rt_sigqueueinfo
+SC_LTTNG_TRACEPOINT_EVENT(rt_sigqueueinfo,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, int sig, siginfo_t * uinfo),
+	TP_ARGS(sc_exit(ret,) pid, sig, uinfo),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(int, sig, sig)) sc_in(ctf_integer(siginfo_t *, uinfo, uinfo)))
+)
+#endif
+#ifndef OVERRIDE_64_getresuid
+SC_LTTNG_TRACEPOINT_EVENT(getresuid,
+	TP_PROTO(sc_exit(long ret,) uid_t * ruidp, uid_t * euidp, uid_t * suidp),
+	TP_ARGS(sc_exit(ret,) ruidp, euidp, suidp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(uid_t *, ruidp, ruidp)) sc_out(ctf_integer(uid_t *, euidp, euidp)) sc_out(ctf_integer(uid_t *, suidp, suidp)))
+)
+#endif
+#ifndef OVERRIDE_64_getresgid
+SC_LTTNG_TRACEPOINT_EVENT(getresgid,
+	TP_PROTO(sc_exit(long ret,) gid_t * rgidp, gid_t * egidp, gid_t * sgidp),
+	TP_ARGS(sc_exit(ret,) rgidp, egidp, sgidp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(gid_t *, rgidp, rgidp)) sc_out(ctf_integer(gid_t *, egidp, egidp)) sc_out(ctf_integer(gid_t *, sgidp, sgidp)))
+)
+#endif
+#ifndef OVERRIDE_64_getcpu
+SC_LTTNG_TRACEPOINT_EVENT(getcpu,
+	TP_PROTO(sc_exit(long ret,) unsigned * cpup, unsigned * nodep, struct getcpu_cache * unused),
+	TP_ARGS(sc_exit(ret,) cpup, nodep, unused),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(unsigned *, cpup, cpup)) sc_out(ctf_integer(unsigned *, nodep, nodep)) sc_inout(ctf_integer(struct getcpu_cache *, unused, unused)))
+)
+#endif
+#ifndef OVERRIDE_64_mq_getsetattr
+SC_LTTNG_TRACEPOINT_EVENT(mq_getsetattr,
+	TP_PROTO(sc_exit(long ret,) mqd_t mqdes, const struct mq_attr * u_mqstat, struct mq_attr * u_omqstat),
+	TP_ARGS(sc_exit(ret,) mqdes, u_mqstat, u_omqstat),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(mqd_t, mqdes, mqdes)) sc_in(ctf_integer(const struct mq_attr *, u_mqstat, u_mqstat)) sc_out(ctf_integer(struct mq_attr *, u_omqstat, u_omqstat)))
+)
+#endif
+#ifndef OVERRIDE_64_msgctl
+SC_LTTNG_TRACEPOINT_EVENT(msgctl,
+	TP_PROTO(sc_exit(long ret,) int msqid, int cmd, struct msqid_ds * buf),
+	TP_ARGS(sc_exit(ret,) msqid, cmd, buf),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, msqid, msqid)) sc_in(ctf_integer(int, cmd, cmd)) sc_inout(ctf_integer(struct msqid_ds *, buf, buf)))
+)
+#endif
+#ifndef OVERRIDE_64_semop
+SC_LTTNG_TRACEPOINT_EVENT(semop,
+	TP_PROTO(sc_exit(long ret,) int semid, struct sembuf * tsops, unsigned nsops),
+	TP_ARGS(sc_exit(ret,) semid, tsops, nsops),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, semid, semid)) sc_in(ctf_integer(struct sembuf *, tsops, tsops)) sc_in(ctf_integer(unsigned, nsops, nsops)))
+)
+#endif
+#ifndef OVERRIDE_64_shmctl
+SC_LTTNG_TRACEPOINT_EVENT(shmctl,
+	TP_PROTO(sc_exit(long ret,) int shmid, int cmd, struct shmid_ds * buf),
+	TP_ARGS(sc_exit(ret,) shmid, cmd, buf),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, shmid, shmid)) sc_in(ctf_integer(int, cmd, cmd)) sc_inout(ctf_integer(struct shmid_ds *, buf, buf)))
+)
+#endif
+#ifndef OVERRIDE_64_shmat
+SC_LTTNG_TRACEPOINT_EVENT(shmat,
+	TP_PROTO(sc_exit(long ret,) int shmid, char * shmaddr, int shmflg),
+	TP_ARGS(sc_exit(ret,) shmid, shmaddr, shmflg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, shmid, shmid)) sc_in(ctf_integer(char *, shmaddr, shmaddr)) sc_in(ctf_integer(int, shmflg, shmflg)))
+)
+#endif
+#ifndef OVERRIDE_64_bind
+SC_LTTNG_TRACEPOINT_EVENT(bind,
+	TP_PROTO(sc_exit(long ret,) int fd, struct sockaddr * umyaddr, int addrlen),
+	TP_ARGS(sc_exit(ret,) fd, umyaddr, addrlen),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(struct sockaddr *, umyaddr, umyaddr)) sc_in(ctf_integer(int, addrlen, addrlen)))
+)
+#endif
+#ifndef OVERRIDE_64_accept
+SC_LTTNG_TRACEPOINT_EVENT(accept,
+	TP_PROTO(sc_exit(long ret,) int fd, struct sockaddr * upeer_sockaddr, int * upeer_addrlen),
+	TP_ARGS(sc_exit(ret,) fd, upeer_sockaddr, upeer_addrlen),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_out(ctf_integer(struct sockaddr *, upeer_sockaddr, upeer_sockaddr)) sc_inout(ctf_integer(int *, upeer_addrlen, upeer_addrlen)))
+)
+#endif
+#ifndef OVERRIDE_64_connect
+SC_LTTNG_TRACEPOINT_EVENT(connect,
+	TP_PROTO(sc_exit(long ret,) int fd, struct sockaddr * uservaddr, int addrlen),
+	TP_ARGS(sc_exit(ret,) fd, uservaddr, addrlen),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(struct sockaddr *, uservaddr, uservaddr)) sc_in(ctf_integer(int, addrlen, addrlen)))
+)
+#endif
+#ifndef OVERRIDE_64_getsockname
+SC_LTTNG_TRACEPOINT_EVENT(getsockname,
+	TP_PROTO(sc_exit(long ret,) int fd, struct sockaddr * usockaddr, int * usockaddr_len),
+	TP_ARGS(sc_exit(ret,) fd, usockaddr, usockaddr_len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_out(ctf_integer(struct sockaddr *, usockaddr, usockaddr)) sc_inout(ctf_integer(int *, usockaddr_len, usockaddr_len)))
+)
+#endif
+#ifndef OVERRIDE_64_getpeername
+SC_LTTNG_TRACEPOINT_EVENT(getpeername,
+	TP_PROTO(sc_exit(long ret,) int fd, struct sockaddr * usockaddr, int * usockaddr_len),
+	TP_ARGS(sc_exit(ret,) fd, usockaddr, usockaddr_len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_out(ctf_integer(struct sockaddr *, usockaddr, usockaddr)) sc_inout(ctf_integer(int *, usockaddr_len, usockaddr_len)))
+)
+#endif
+#ifndef OVERRIDE_64_sendmsg
+SC_LTTNG_TRACEPOINT_EVENT(sendmsg,
+	TP_PROTO(sc_exit(long ret,) int fd, struct user_msghdr * msg, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) fd, msg, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(struct user_msghdr *, msg, msg)) sc_in(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_recvmsg
+SC_LTTNG_TRACEPOINT_EVENT(recvmsg,
+	TP_PROTO(sc_exit(long ret,) int fd, struct user_msghdr * msg, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) fd, msg, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_inout(ctf_integer(struct user_msghdr *, msg, msg)) sc_in(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_execve
+SC_LTTNG_TRACEPOINT_EVENT(execve,
+	TP_PROTO(sc_exit(long ret,) const char * filename, const char *const * argv, const char *const * envp),
+	TP_ARGS(sc_exit(ret,) filename, argv, envp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_user_string(filename, filename)) sc_inout(ctf_integer(const char *const *, argv, argv)) sc_inout(ctf_integer(const char *const *, envp, envp)))
+)
+#endif
+#ifndef OVERRIDE_64_mincore
+SC_LTTNG_TRACEPOINT_EVENT(mincore,
+	TP_PROTO(sc_exit(long ret,) unsigned long start, size_t len, unsigned char * vec),
+	TP_ARGS(sc_exit(ret,) start, len, vec),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, start, start)) sc_in(ctf_integer(size_t, len, len)) sc_out(ctf_integer(unsigned char *, vec, vec)))
+)
+#endif
+#ifndef OVERRIDE_64_open_by_handle_at
+SC_LTTNG_TRACEPOINT_EVENT(open_by_handle_at,
+	TP_PROTO(sc_exit(long ret,) int mountdirfd, struct file_handle * handle, int flags),
+	TP_ARGS(sc_exit(ret,) mountdirfd, handle, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, mountdirfd, mountdirfd)) sc_in(ctf_integer(struct file_handle *, handle, handle)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_finit_module
+SC_LTTNG_TRACEPOINT_EVENT(finit_module,
+	TP_PROTO(sc_exit(long ret,) int fd, const char * uargs, int flags),
+	TP_ARGS(sc_exit(ret,) fd, uargs, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(const char *, uargs, uargs)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_setattr
+SC_LTTNG_TRACEPOINT_EVENT(sched_setattr,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, struct sched_attr * uattr, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) pid, uattr, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(pid_t, pid, pid)) sc_inout(ctf_integer(struct sched_attr *, uattr, uattr)) sc_inout(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_seccomp
+SC_LTTNG_TRACEPOINT_EVENT(seccomp,
+	TP_PROTO(sc_exit(long ret,) unsigned int op, unsigned int flags, const char * uargs),
+	TP_ARGS(sc_exit(ret,) op, flags, uargs),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(unsigned int, op, op)) sc_inout(ctf_integer(unsigned int, flags, flags)) sc_inout(ctf_integer(const char *, uargs, uargs)))
+)
+#endif
+#ifndef OVERRIDE_64_getrandom
+SC_LTTNG_TRACEPOINT_EVENT(getrandom,
+	TP_PROTO(sc_exit(long ret,) char * buf, size_t count, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) buf, count, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(char *, buf, buf)) sc_inout(ctf_integer(size_t, count, count)) sc_inout(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_getxattr
+SC_LTTNG_TRACEPOINT_EVENT(getxattr,
+	TP_PROTO(sc_exit(long ret,) const char * pathname, const char * name, void * value, size_t size),
+	TP_ARGS(sc_exit(ret,) pathname, name, value, size),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(pathname, pathname)) sc_in(ctf_user_string(name, name)) sc_out(ctf_integer(void *, value, value)) sc_in(ctf_integer(size_t, size, size)))
+)
+#endif
+#ifndef OVERRIDE_64_lgetxattr
+SC_LTTNG_TRACEPOINT_EVENT(lgetxattr,
+	TP_PROTO(sc_exit(long ret,) const char * pathname, const char * name, void * value, size_t size),
+	TP_ARGS(sc_exit(ret,) pathname, name, value, size),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(pathname, pathname)) sc_in(ctf_user_string(name, name)) sc_out(ctf_integer(void *, value, value)) sc_in(ctf_integer(size_t, size, size)))
+)
+#endif
+#ifndef OVERRIDE_64_fgetxattr
+SC_LTTNG_TRACEPOINT_EVENT(fgetxattr,
+	TP_PROTO(sc_exit(long ret,) int fd, const char * name, void * value, size_t size),
+	TP_ARGS(sc_exit(ret,) fd, name, value, size),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_user_string(name, name)) sc_out(ctf_integer(void *, value, value)) sc_in(ctf_integer(size_t, size, size)))
+)
+#endif
+#ifndef OVERRIDE_64_epoll_ctl
+SC_LTTNG_TRACEPOINT_EVENT(epoll_ctl,
+	TP_PROTO(sc_exit(long ret,) int epfd, int op, int fd, struct epoll_event * event),
+	TP_ARGS(sc_exit(ret,) epfd, op, fd, event),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, epfd, epfd)) sc_in(ctf_integer(int, op, op)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(struct epoll_event *, event, event)))
+)
+#endif
+#ifndef OVERRIDE_64_mknodat
+SC_LTTNG_TRACEPOINT_EVENT(mknodat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * filename, umode_t mode, unsigned dev),
+	TP_ARGS(sc_exit(ret,) dfd, filename, mode, dev),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(filename, filename)) sc_in(ctf_integer(umode_t, mode, mode)) sc_in(ctf_integer(unsigned, dev, dev)))
+)
+#endif
+#ifndef OVERRIDE_64_renameat
+SC_LTTNG_TRACEPOINT_EVENT(renameat,
+	TP_PROTO(sc_exit(long ret,) int olddfd, const char * oldname, int newdfd, const char * newname),
+	TP_ARGS(sc_exit(ret,) olddfd, oldname, newdfd, newname),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, olddfd, olddfd)) sc_in(ctf_user_string(oldname, oldname)) sc_in(ctf_integer(int, newdfd, newdfd)) sc_in(ctf_user_string(newname, newname)))
+)
+#endif
+#ifndef OVERRIDE_64_openat
+SC_LTTNG_TRACEPOINT_EVENT(openat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * filename, int flags, umode_t mode),
+	TP_ARGS(sc_exit(ret,) dfd, filename, flags, mode),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(filename, filename)) sc_in(ctf_integer(int, flags, flags)) sc_in(ctf_integer(umode_t, mode, mode)))
+)
+#endif
+#ifndef OVERRIDE_64_quotactl
+SC_LTTNG_TRACEPOINT_EVENT(quotactl,
+	TP_PROTO(sc_exit(long ret,) unsigned int cmd, const char * special, qid_t id, void * addr),
+	TP_ARGS(sc_exit(ret,) cmd, special, id, addr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, cmd, cmd)) sc_in(ctf_integer(const char *, special, special)) sc_in(ctf_integer(qid_t, id, id)) sc_inout(ctf_integer(void *, addr, addr)))
+)
+#endif
+#ifndef OVERRIDE_64_pread64
+SC_LTTNG_TRACEPOINT_EVENT(pread64,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, char * buf, size_t count, loff_t pos),
+	TP_ARGS(sc_exit(ret,) fd, buf, count, pos),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_out(ctf_integer(char *, buf, buf)) sc_in(ctf_integer(size_t, count, count)) sc_in(ctf_integer(loff_t, pos, pos)))
+)
+#endif
+#ifndef OVERRIDE_64_pwrite64
+SC_LTTNG_TRACEPOINT_EVENT(pwrite64,
+	TP_PROTO(sc_exit(long ret,) unsigned int fd, const char * buf, size_t count, loff_t pos),
+	TP_ARGS(sc_exit(ret,) fd, buf, count, pos),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(const char *, buf, buf)) sc_in(ctf_integer(size_t, count, count)) sc_in(ctf_integer(loff_t, pos, pos)))
+)
+#endif
+#ifndef OVERRIDE_64_sendfile64
+SC_LTTNG_TRACEPOINT_EVENT(sendfile64,
+	TP_PROTO(sc_exit(long ret,) int out_fd, int in_fd, loff_t * offset, size_t count),
+	TP_ARGS(sc_exit(ret,) out_fd, in_fd, offset, count),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, out_fd, out_fd)) sc_in(ctf_integer(int, in_fd, in_fd)) sc_inout(ctf_integer(loff_t *, offset, offset)) sc_in(ctf_integer(size_t, count, count)))
+)
+#endif
+#ifndef OVERRIDE_64_signalfd4
+SC_LTTNG_TRACEPOINT_EVENT(signalfd4,
+	TP_PROTO(sc_exit(long ret,) int ufd, sigset_t * user_mask, size_t sizemask, int flags),
+	TP_ARGS(sc_exit(ret,) ufd, user_mask, sizemask, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, ufd, ufd)) sc_in(ctf_integer(sigset_t *, user_mask, user_mask)) sc_in(ctf_integer(size_t, sizemask, sizemask)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_vmsplice
+SC_LTTNG_TRACEPOINT_EVENT(vmsplice,
+	TP_PROTO(sc_exit(long ret,) int fd, const struct iovec * iov, unsigned long nr_segs, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) fd, iov, nr_segs, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(const struct iovec *, iov, iov)) sc_in(ctf_integer(unsigned long, nr_segs, nr_segs)) sc_in(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_readlinkat
+SC_LTTNG_TRACEPOINT_EVENT(readlinkat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * pathname, char * buf, int bufsiz),
+	TP_ARGS(sc_exit(ret,) dfd, pathname, buf, bufsiz),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(pathname, pathname)) sc_out(ctf_integer(char *, buf, buf)) sc_in(ctf_integer(int, bufsiz, bufsiz)))
+)
+#endif
+#ifndef OVERRIDE_64_newfstatat
+SC_LTTNG_TRACEPOINT_EVENT(newfstatat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * filename, struct stat * statbuf, int flag),
+	TP_ARGS(sc_exit(ret,) dfd, filename, statbuf, flag),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(filename, filename)) sc_out(ctf_integer(struct stat *, statbuf, statbuf)) sc_in(ctf_integer(int, flag, flag)))
+)
+#endif
+#ifndef OVERRIDE_64_timerfd_settime
+SC_LTTNG_TRACEPOINT_EVENT(timerfd_settime,
+	TP_PROTO(sc_exit(long ret,) int ufd, int flags, const struct itimerspec * utmr, struct itimerspec * otmr),
+	TP_ARGS(sc_exit(ret,) ufd, flags, utmr, otmr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, ufd, ufd)) sc_in(ctf_integer(int, flags, flags)) sc_in(ctf_integer(const struct itimerspec *, utmr, utmr)) sc_out(ctf_integer(struct itimerspec *, otmr, otmr)))
+)
+#endif
+#ifndef OVERRIDE_64_utimensat
+SC_LTTNG_TRACEPOINT_EVENT(utimensat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * filename, struct timespec * utimes, int flags),
+	TP_ARGS(sc_exit(ret,) dfd, filename, utimes, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(filename, filename)) sc_in(ctf_integer(struct timespec *, utimes, utimes)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_timer_settime
+SC_LTTNG_TRACEPOINT_EVENT(timer_settime,
+	TP_PROTO(sc_exit(long ret,) timer_t timer_id, int flags, const struct itimerspec * new_setting, struct itimerspec * old_setting),
+	TP_ARGS(sc_exit(ret,) timer_id, flags, new_setting, old_setting),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(timer_t, timer_id, timer_id)) sc_in(ctf_integer(int, flags, flags)) sc_in(ctf_integer(const struct itimerspec *, new_setting, new_setting)) sc_out(ctf_integer(struct itimerspec *, old_setting, old_setting)))
+)
+#endif
+#ifndef OVERRIDE_64_clock_nanosleep
+SC_LTTNG_TRACEPOINT_EVENT(clock_nanosleep,
+	TP_PROTO(sc_exit(long ret,) const clockid_t which_clock, int flags, const struct timespec * rqtp, struct timespec * rmtp),
+	TP_ARGS(sc_exit(ret,) which_clock, flags, rqtp, rmtp),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(const clockid_t, which_clock, which_clock)) sc_in(ctf_integer(int, flags, flags)) sc_in(ctf_integer(const struct timespec *, rqtp, rqtp)) sc_out(ctf_integer(struct timespec *, rmtp, rmtp)))
+)
+#endif
+#ifndef OVERRIDE_64_rt_sigaction
+SC_LTTNG_TRACEPOINT_EVENT(rt_sigaction,
+	TP_PROTO(sc_exit(long ret,) int sig, const struct sigaction * act, struct sigaction * oact, size_t sigsetsize),
+	TP_ARGS(sc_exit(ret,) sig, act, oact, sigsetsize),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, sig, sig)) sc_in(ctf_integer(const struct sigaction *, act, act)) sc_out(ctf_integer(struct sigaction *, oact, oact)) sc_in(ctf_integer(size_t, sigsetsize, sigsetsize)))
+)
+#endif
+#ifndef OVERRIDE_64_rt_sigprocmask
+SC_LTTNG_TRACEPOINT_EVENT(rt_sigprocmask,
+	TP_PROTO(sc_exit(long ret,) int how, sigset_t * nset, sigset_t * oset, size_t sigsetsize),
+	TP_ARGS(sc_exit(ret,) how, nset, oset, sigsetsize),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, how, how)) sc_in(ctf_integer(sigset_t *, nset, nset)) sc_out(ctf_integer(sigset_t *, oset, oset)) sc_in(ctf_integer(size_t, sigsetsize, sigsetsize)))
+)
+#endif
+#ifndef OVERRIDE_64_rt_sigtimedwait
+SC_LTTNG_TRACEPOINT_EVENT(rt_sigtimedwait,
+	TP_PROTO(sc_exit(long ret,) const sigset_t * uthese, siginfo_t * uinfo, const struct timespec * uts, size_t sigsetsize),
+	TP_ARGS(sc_exit(ret,) uthese, uinfo, uts, sigsetsize),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_out(ctf_integer(const sigset_t *, uthese, uthese)) sc_out(ctf_integer(siginfo_t *, uinfo, uinfo)) sc_in(ctf_integer(const struct timespec *, uts, uts)) sc_in(ctf_integer(size_t, sigsetsize, sigsetsize)))
+)
+#endif
+#ifndef OVERRIDE_64_reboot
+SC_LTTNG_TRACEPOINT_EVENT(reboot,
+	TP_PROTO(sc_exit(long ret,) int magic1, int magic2, unsigned int cmd, void * arg),
+	TP_ARGS(sc_exit(ret,) magic1, magic2, cmd, arg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, magic1, magic1)) sc_in(ctf_integer(int, magic2, magic2)) sc_in(ctf_integer(unsigned int, cmd, cmd)) sc_in(ctf_integer(void *, arg, arg)))
+)
+#endif
+#ifndef OVERRIDE_64_mq_open
+SC_LTTNG_TRACEPOINT_EVENT(mq_open,
+	TP_PROTO(sc_exit(long ret,) const char * u_name, int oflag, umode_t mode, struct mq_attr * u_attr),
+	TP_ARGS(sc_exit(ret,) u_name, oflag, mode, u_attr),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(u_name, u_name)) sc_in(ctf_integer(int, oflag, oflag)) sc_in(ctf_integer(umode_t, mode, mode)) sc_in(ctf_integer(struct mq_attr *, u_attr, u_attr)))
+)
+#endif
+#ifndef OVERRIDE_64_msgsnd
+SC_LTTNG_TRACEPOINT_EVENT(msgsnd,
+	TP_PROTO(sc_exit(long ret,) int msqid, struct msgbuf * msgp, size_t msgsz, int msgflg),
+	TP_ARGS(sc_exit(ret,) msqid, msgp, msgsz, msgflg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, msqid, msqid)) sc_in(ctf_integer(struct msgbuf *, msgp, msgp)) sc_in(ctf_integer(size_t, msgsz, msgsz)) sc_in(ctf_integer(int, msgflg, msgflg)))
+)
+#endif
+#ifndef OVERRIDE_64_semtimedop
+SC_LTTNG_TRACEPOINT_EVENT(semtimedop,
+	TP_PROTO(sc_exit(long ret,) int semid, struct sembuf * tsops, unsigned nsops, const struct timespec * timeout),
+	TP_ARGS(sc_exit(ret,) semid, tsops, nsops, timeout),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, semid, semid)) sc_in(ctf_integer(struct sembuf *, tsops, tsops)) sc_in(ctf_integer(unsigned, nsops, nsops)) sc_inout(ctf_integer(const struct timespec *, timeout, timeout)))
+)
+#endif
+#ifndef OVERRIDE_64_socketpair
+SC_LTTNG_TRACEPOINT_EVENT(socketpair,
+	TP_PROTO(sc_exit(long ret,) int family, int type, int protocol, int * usockvec),
+	TP_ARGS(sc_exit(ret,) family, type, protocol, usockvec),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, family, family)) sc_in(ctf_integer(int, type, type)) sc_in(ctf_integer(int, protocol, protocol)) sc_out(ctf_integer(int *, usockvec, usockvec)))
+)
+#endif
+#ifndef OVERRIDE_64_request_key
+SC_LTTNG_TRACEPOINT_EVENT(request_key,
+	TP_PROTO(sc_exit(long ret,) const char * _type, const char * _description, const char * _callout_info, key_serial_t destringid),
+	TP_ARGS(sc_exit(ret,) _type, _description, _callout_info, destringid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(_type, _type)) sc_in(ctf_integer(const char *, _description, _description)) sc_in(ctf_integer(const char *, _callout_info, _callout_info)) sc_in(ctf_integer(key_serial_t, destringid, destringid)))
+)
+#endif
+#ifndef OVERRIDE_64_rt_tgsigqueueinfo
+SC_LTTNG_TRACEPOINT_EVENT(rt_tgsigqueueinfo,
+	TP_PROTO(sc_exit(long ret,) pid_t tgid, pid_t pid, int sig, siginfo_t * uinfo),
+	TP_ARGS(sc_exit(ret,) tgid, pid, sig, uinfo),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, tgid, tgid)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(int, sig, sig)) sc_in(ctf_integer(siginfo_t *, uinfo, uinfo)))
+)
+#endif
+#ifndef OVERRIDE_64_accept4
+SC_LTTNG_TRACEPOINT_EVENT(accept4,
+	TP_PROTO(sc_exit(long ret,) int fd, struct sockaddr * upeer_sockaddr, int * upeer_addrlen, int flags),
+	TP_ARGS(sc_exit(ret,) fd, upeer_sockaddr, upeer_addrlen, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_out(ctf_integer(struct sockaddr *, upeer_sockaddr, upeer_sockaddr)) sc_inout(ctf_integer(int *, upeer_addrlen, upeer_addrlen)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_wait4
+SC_LTTNG_TRACEPOINT_EVENT(wait4,
+	TP_PROTO(sc_exit(long ret,) pid_t upid, int * stat_addr, int options, struct rusage * ru),
+	TP_ARGS(sc_exit(ret,) upid, stat_addr, options, ru),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, upid, upid)) sc_out(ctf_integer(int *, stat_addr, stat_addr)) sc_in(ctf_integer(int, options, options)) sc_out(ctf_integer(struct rusage *, ru, ru)))
+)
+#endif
+#ifndef OVERRIDE_64_prlimit64
+SC_LTTNG_TRACEPOINT_EVENT(prlimit64,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, unsigned int resource, const struct rlimit64 * new_rlim, struct rlimit64 * old_rlim),
+	TP_ARGS(sc_exit(ret,) pid, resource, new_rlim, old_rlim),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(unsigned int, resource, resource)) sc_in(ctf_integer(const struct rlimit64 *, new_rlim, new_rlim)) sc_out(ctf_integer(struct rlimit64 *, old_rlim, old_rlim)))
+)
+#endif
+#ifndef OVERRIDE_64_sendmmsg
+SC_LTTNG_TRACEPOINT_EVENT(sendmmsg,
+	TP_PROTO(sc_exit(long ret,) int fd, struct mmsghdr * mmsg, unsigned int vlen, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) fd, mmsg, vlen, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(struct mmsghdr *, mmsg, mmsg)) sc_in(ctf_integer(unsigned int, vlen, vlen)) sc_in(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_sched_getattr
+SC_LTTNG_TRACEPOINT_EVENT(sched_getattr,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, struct sched_attr * uattr, unsigned int size, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) pid, uattr, size, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(pid_t, pid, pid)) sc_inout(ctf_integer(struct sched_attr *, uattr, uattr)) sc_inout(ctf_integer(unsigned int, size, size)) sc_inout(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_io_getevents
+SC_LTTNG_TRACEPOINT_EVENT(io_getevents,
+	TP_PROTO(sc_exit(long ret,) aio_context_t ctx_id, long min_nr, long nr, struct io_event * events, struct timespec * timeout),
+	TP_ARGS(sc_exit(ret,) ctx_id, min_nr, nr, events, timeout),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(aio_context_t, ctx_id, ctx_id)) sc_in(ctf_integer(long, min_nr, min_nr)) sc_in(ctf_integer(long, nr, nr)) sc_out(ctf_integer(struct io_event *, events, events)) sc_inout(ctf_integer(struct timespec *, timeout, timeout)))
+)
+#endif
+#ifndef OVERRIDE_64_setxattr
+SC_LTTNG_TRACEPOINT_EVENT(setxattr,
+	TP_PROTO(sc_exit(long ret,) const char * pathname, const char * name, const void * value, size_t size, int flags),
+	TP_ARGS(sc_exit(ret,) pathname, name, value, size, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(pathname, pathname)) sc_in(ctf_user_string(name, name)) sc_in(ctf_integer(const void *, value, value)) sc_in(ctf_integer(size_t, size, size)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_lsetxattr
+SC_LTTNG_TRACEPOINT_EVENT(lsetxattr,
+	TP_PROTO(sc_exit(long ret,) const char * pathname, const char * name, const void * value, size_t size, int flags),
+	TP_ARGS(sc_exit(ret,) pathname, name, value, size, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(pathname, pathname)) sc_in(ctf_user_string(name, name)) sc_in(ctf_integer(const void *, value, value)) sc_in(ctf_integer(size_t, size, size)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_fsetxattr
+SC_LTTNG_TRACEPOINT_EVENT(fsetxattr,
+	TP_PROTO(sc_exit(long ret,) int fd, const char * name, const void * value, size_t size, int flags),
+	TP_ARGS(sc_exit(ret,) fd, name, value, size, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_user_string(name, name)) sc_in(ctf_integer(const void *, value, value)) sc_in(ctf_integer(size_t, size, size)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_linkat
+SC_LTTNG_TRACEPOINT_EVENT(linkat,
+	TP_PROTO(sc_exit(long ret,) int olddfd, const char * oldname, int newdfd, const char * newname, int flags),
+	TP_ARGS(sc_exit(ret,) olddfd, oldname, newdfd, newname, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, olddfd, olddfd)) sc_in(ctf_user_string(oldname, oldname)) sc_in(ctf_integer(int, newdfd, newdfd)) sc_in(ctf_user_string(newname, newname)) sc_in(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_mount
+SC_LTTNG_TRACEPOINT_EVENT(mount,
+	TP_PROTO(sc_exit(long ret,) char * dev_name, char * dir_name, char * type, unsigned long flags, void * data),
+	TP_ARGS(sc_exit(ret,) dev_name, dir_name, type, flags, data),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(dev_name, dev_name)) sc_in(ctf_user_string(dir_name, dir_name)) sc_in(ctf_user_string(type, type)) sc_in(ctf_integer(unsigned long, flags, flags)) sc_in(ctf_integer(void *, data, data)))
+)
+#endif
+#ifndef OVERRIDE_64_fchownat
+SC_LTTNG_TRACEPOINT_EVENT(fchownat,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * filename, uid_t user, gid_t group, int flag),
+	TP_ARGS(sc_exit(ret,) dfd, filename, user, group, flag),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(filename, filename)) sc_in(ctf_integer(uid_t, user, user)) sc_in(ctf_integer(gid_t, group, group)) sc_in(ctf_integer(int, flag, flag)))
+)
+#endif
+#ifndef OVERRIDE_64_preadv
+SC_LTTNG_TRACEPOINT_EVENT(preadv,
+	TP_PROTO(sc_exit(long ret,) unsigned long fd, const struct iovec * vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h),
+	TP_ARGS(sc_exit(ret,) fd, vec, vlen, pos_l, pos_h),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, fd, fd)) sc_out(ctf_integer(const struct iovec *, vec, vec)) sc_in(ctf_integer(unsigned long, vlen, vlen)) sc_in(ctf_integer(unsigned long, pos_l, pos_l)) sc_in(ctf_integer(unsigned long, pos_h, pos_h)))
+)
+#endif
+#ifndef OVERRIDE_64_pwritev
+SC_LTTNG_TRACEPOINT_EVENT(pwritev,
+	TP_PROTO(sc_exit(long ret,) unsigned long fd, const struct iovec * vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h),
+	TP_ARGS(sc_exit(ret,) fd, vec, vlen, pos_l, pos_h),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned long, fd, fd)) sc_in(ctf_integer(const struct iovec *, vec, vec)) sc_in(ctf_integer(unsigned long, vlen, vlen)) sc_in(ctf_integer(unsigned long, pos_l, pos_l)) sc_in(ctf_integer(unsigned long, pos_h, pos_h)))
+)
+#endif
+#ifndef OVERRIDE_64_ppoll
+SC_LTTNG_TRACEPOINT_EVENT(ppoll,
+	TP_PROTO(sc_exit(long ret,) struct pollfd * ufds, unsigned int nfds, struct timespec * tsp, const sigset_t * sigmask, size_t sigsetsize),
+	TP_ARGS(sc_exit(ret,) ufds, nfds, tsp, sigmask, sigsetsize),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(struct pollfd *, ufds, ufds)) sc_in(ctf_integer(unsigned int, nfds, nfds)) sc_in(ctf_integer(struct timespec *, tsp, tsp)) sc_in(ctf_integer(const sigset_t *, sigmask, sigmask)) sc_in(ctf_integer(size_t, sigsetsize, sigsetsize)))
+)
+#endif
+#ifndef OVERRIDE_64_waitid
+SC_LTTNG_TRACEPOINT_EVENT(waitid,
+	TP_PROTO(sc_exit(long ret,) int which, pid_t upid, struct siginfo * infop, int options, struct rusage * ru),
+	TP_ARGS(sc_exit(ret,) which, upid, infop, options, ru),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, which, which)) sc_in(ctf_integer(pid_t, upid, upid)) sc_out(ctf_integer(struct siginfo *, infop, infop)) sc_in(ctf_integer(int, options, options)) sc_out(ctf_integer(struct rusage *, ru, ru)))
+)
+#endif
+#ifndef OVERRIDE_64_mq_timedsend
+SC_LTTNG_TRACEPOINT_EVENT(mq_timedsend,
+	TP_PROTO(sc_exit(long ret,) mqd_t mqdes, const char * u_msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec * u_abs_timeout),
+	TP_ARGS(sc_exit(ret,) mqdes, u_msg_ptr, msg_len, msg_prio, u_abs_timeout),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(mqd_t, mqdes, mqdes)) sc_in(ctf_integer(const char *, u_msg_ptr, u_msg_ptr)) sc_in(ctf_integer(size_t, msg_len, msg_len)) sc_in(ctf_integer(unsigned int, msg_prio, msg_prio)) sc_in(ctf_integer(const struct timespec *, u_abs_timeout, u_abs_timeout)))
+)
+#endif
+#ifndef OVERRIDE_64_mq_timedreceive
+SC_LTTNG_TRACEPOINT_EVENT(mq_timedreceive,
+	TP_PROTO(sc_exit(long ret,) mqd_t mqdes, char * u_msg_ptr, size_t msg_len, unsigned int * u_msg_prio, const struct timespec * u_abs_timeout),
+	TP_ARGS(sc_exit(ret,) mqdes, u_msg_ptr, msg_len, u_msg_prio, u_abs_timeout),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(mqd_t, mqdes, mqdes)) sc_out(ctf_integer(char *, u_msg_ptr, u_msg_ptr)) sc_in(ctf_integer(size_t, msg_len, msg_len)) sc_out(ctf_integer(unsigned int *, u_msg_prio, u_msg_prio)) sc_in(ctf_integer(const struct timespec *, u_abs_timeout, u_abs_timeout)))
+)
+#endif
+#ifndef OVERRIDE_64_msgrcv
+SC_LTTNG_TRACEPOINT_EVENT(msgrcv,
+	TP_PROTO(sc_exit(long ret,) int msqid, struct msgbuf * msgp, size_t msgsz, long msgtyp, int msgflg),
+	TP_ARGS(sc_exit(ret,) msqid, msgp, msgsz, msgtyp, msgflg),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, msqid, msqid)) sc_out(ctf_integer(struct msgbuf *, msgp, msgp)) sc_in(ctf_integer(size_t, msgsz, msgsz)) sc_in(ctf_integer(long, msgtyp, msgtyp)) sc_in(ctf_integer(int, msgflg, msgflg)))
+)
+#endif
+#ifndef OVERRIDE_64_setsockopt
+SC_LTTNG_TRACEPOINT_EVENT(setsockopt,
+	TP_PROTO(sc_exit(long ret,) int fd, int level, int optname, char * optval, int optlen),
+	TP_ARGS(sc_exit(ret,) fd, level, optname, optval, optlen),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(int, level, level)) sc_in(ctf_integer(int, optname, optname)) sc_in(ctf_integer(char *, optval, optval)) sc_in(ctf_integer(int, optlen, optlen)))
+)
+#endif
+#ifndef OVERRIDE_64_getsockopt
+SC_LTTNG_TRACEPOINT_EVENT(getsockopt,
+	TP_PROTO(sc_exit(long ret,) int fd, int level, int optname, char * optval, int * optlen),
+	TP_ARGS(sc_exit(ret,) fd, level, optname, optval, optlen),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(int, level, level)) sc_in(ctf_integer(int, optname, optname)) sc_out(ctf_integer(char *, optval, optval)) sc_inout(ctf_integer(int *, optlen, optlen)))
+)
+#endif
+#ifndef OVERRIDE_64_add_key
+SC_LTTNG_TRACEPOINT_EVENT(add_key,
+	TP_PROTO(sc_exit(long ret,) const char * _type, const char * _description, const void * _payload, size_t plen, key_serial_t ringid),
+	TP_ARGS(sc_exit(ret,) _type, _description, _payload, plen, ringid),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_user_string(_type, _type)) sc_in(ctf_integer(const char *, _description, _description)) sc_in(ctf_integer(const void *, _payload, _payload)) sc_in(ctf_integer(size_t, plen, plen)) sc_in(ctf_integer(key_serial_t, ringid, ringid)))
+)
+#endif
+#ifndef OVERRIDE_64_perf_event_open
+SC_LTTNG_TRACEPOINT_EVENT(perf_event_open,
+	TP_PROTO(sc_exit(long ret,) struct perf_event_attr * attr_uptr, pid_t pid, int cpu, int group_fd, unsigned long flags),
+	TP_ARGS(sc_exit(ret,) attr_uptr, pid, cpu, group_fd, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(struct perf_event_attr *, attr_uptr, attr_uptr)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(int, cpu, cpu)) sc_in(ctf_integer(int, group_fd, group_fd)) sc_in(ctf_integer(unsigned long, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_recvmmsg
+SC_LTTNG_TRACEPOINT_EVENT(recvmmsg,
+	TP_PROTO(sc_exit(long ret,) int fd, struct mmsghdr * mmsg, unsigned int vlen, unsigned int flags, struct timespec * timeout),
+	TP_ARGS(sc_exit(ret,) fd, mmsg, vlen, flags, timeout),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_out(ctf_integer(struct mmsghdr *, mmsg, mmsg)) sc_in(ctf_integer(unsigned int, vlen, vlen)) sc_in(ctf_integer(unsigned int, flags, flags)) sc_inout(ctf_integer(struct timespec *, timeout, timeout)))
+)
+#endif
+#ifndef OVERRIDE_64_fanotify_mark
+SC_LTTNG_TRACEPOINT_EVENT(fanotify_mark,
+	TP_PROTO(sc_exit(long ret,) int fanotify_fd, unsigned int flags, __u64 mask, int dfd, const char * pathname),
+	TP_ARGS(sc_exit(ret,) fanotify_fd, flags, mask, dfd, pathname),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fanotify_fd, fanotify_fd)) sc_in(ctf_integer(unsigned int, flags, flags)) sc_in(ctf_integer(__u64, mask, mask)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(pathname, pathname)))
+)
+#endif
+#ifndef OVERRIDE_64_name_to_handle_at
+SC_LTTNG_TRACEPOINT_EVENT(name_to_handle_at,
+	TP_PROTO(sc_exit(long ret,) int dfd, const char * name, struct file_handle * handle, int * mnt_id, int flag),
+	TP_ARGS(sc_exit(ret,) dfd, name, handle, mnt_id, flag),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, dfd, dfd)) sc_in(ctf_user_string(name, name)) sc_inout(ctf_integer(struct file_handle *, handle, handle)) sc_out(ctf_integer(int *, mnt_id, mnt_id)) sc_in(ctf_integer(int, flag, flag)))
+)
+#endif
+#ifndef OVERRIDE_64_renameat2
+SC_LTTNG_TRACEPOINT_EVENT(renameat2,
+	TP_PROTO(sc_exit(long ret,) int olddfd, const char * oldname, int newdfd, const char * newname, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) olddfd, oldname, newdfd, newname, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(int, olddfd, olddfd)) sc_inout(ctf_user_string(oldname, oldname)) sc_inout(ctf_integer(int, newdfd, newdfd)) sc_inout(ctf_user_string(newname, newname)) sc_inout(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_execveat
+SC_LTTNG_TRACEPOINT_EVENT(execveat,
+	TP_PROTO(sc_exit(long ret,) int fd, const char * filename, const char *const * argv, const char *const * envp, int flags),
+	TP_ARGS(sc_exit(ret,) fd, filename, argv, envp, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(int, fd, fd)) sc_inout(ctf_user_string(filename, filename)) sc_inout(ctf_integer(const char *const *, argv, argv)) sc_inout(ctf_integer(const char *const *, envp, envp)) sc_inout(ctf_integer(int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_epoll_pwait
+SC_LTTNG_TRACEPOINT_EVENT(epoll_pwait,
+	TP_PROTO(sc_exit(long ret,) int epfd, struct epoll_event * events, int maxevents, int timeout, const sigset_t * sigmask, size_t sigsetsize),
+	TP_ARGS(sc_exit(ret,) epfd, events, maxevents, timeout, sigmask, sigsetsize),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, epfd, epfd)) sc_out(ctf_integer(struct epoll_event *, events, events)) sc_in(ctf_integer(int, maxevents, maxevents)) sc_in(ctf_integer(int, timeout, timeout)) sc_in(ctf_integer(const sigset_t *, sigmask, sigmask)) sc_in(ctf_integer(size_t, sigsetsize, sigsetsize)))
+)
+#endif
+#ifndef OVERRIDE_64_pselect6
+SC_LTTNG_TRACEPOINT_EVENT(pselect6,
+	TP_PROTO(sc_exit(long ret,) int n, fd_set * inp, fd_set * outp, fd_set * exp, struct timespec * tsp, void * sig),
+	TP_ARGS(sc_exit(ret,) n, inp, outp, exp, tsp, sig),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, n, n)) sc_inout(ctf_integer(fd_set *, inp, inp)) sc_inout(ctf_integer(fd_set *, outp, outp)) sc_inout(ctf_integer(fd_set *, exp, exp)) sc_inout(ctf_integer(struct timespec *, tsp, tsp)) sc_in(ctf_integer(void *, sig, sig)))
+)
+#endif
+#ifndef OVERRIDE_64_splice
+SC_LTTNG_TRACEPOINT_EVENT(splice,
+	TP_PROTO(sc_exit(long ret,) int fd_in, loff_t * off_in, int fd_out, loff_t * off_out, size_t len, unsigned int flags),
+	TP_ARGS(sc_exit(ret,) fd_in, off_in, fd_out, off_out, len, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd_in, fd_in)) sc_in(ctf_integer(loff_t *, off_in, off_in)) sc_in(ctf_integer(int, fd_out, fd_out)) sc_in(ctf_integer(loff_t *, off_out, off_out)) sc_in(ctf_integer(size_t, len, len)) sc_in(ctf_integer(unsigned int, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_futex
+SC_LTTNG_TRACEPOINT_EVENT(futex,
+	TP_PROTO(sc_exit(long ret,) u32 * uaddr, int op, u32 val, struct timespec * utime, u32 * uaddr2, u32 val3),
+	TP_ARGS(sc_exit(ret,) uaddr, op, val, utime, uaddr2, val3),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_inout(ctf_integer(u32 *, uaddr, uaddr)) sc_in(ctf_integer(int, op, op)) sc_in(ctf_integer(u32, val, val)) sc_in(ctf_integer(struct timespec *, utime, utime)) sc_inout(ctf_integer(u32 *, uaddr2, uaddr2)) sc_in(ctf_integer(u32, val3, val3)))
+)
+#endif
+#ifndef OVERRIDE_64_sendto
+SC_LTTNG_TRACEPOINT_EVENT(sendto,
+	TP_PROTO(sc_exit(long ret,) int fd, void * buff, size_t len, unsigned int flags, struct sockaddr * addr, int addr_len),
+	TP_ARGS(sc_exit(ret,) fd, buff, len, flags, addr, addr_len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_in(ctf_integer(void *, buff, buff)) sc_in(ctf_integer(size_t, len, len)) sc_in(ctf_integer(unsigned int, flags, flags)) sc_in(ctf_integer(struct sockaddr *, addr, addr)) sc_in(ctf_integer(int, addr_len, addr_len)))
+)
+#endif
+#ifndef OVERRIDE_64_recvfrom
+SC_LTTNG_TRACEPOINT_EVENT(recvfrom,
+	TP_PROTO(sc_exit(long ret,) int fd, void * ubuf, size_t size, unsigned int flags, struct sockaddr * addr, int * addr_len),
+	TP_ARGS(sc_exit(ret,) fd, ubuf, size, flags, addr, addr_len),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(int, fd, fd)) sc_out(ctf_integer(void *, ubuf, ubuf)) sc_in(ctf_integer(size_t, size, size)) sc_in(ctf_integer(unsigned int, flags, flags)) sc_out(ctf_integer(struct sockaddr *, addr, addr)) sc_inout(ctf_integer(int *, addr_len, addr_len)))
+)
+#endif
+#ifndef OVERRIDE_64_process_vm_readv
+SC_LTTNG_TRACEPOINT_EVENT(process_vm_readv,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, const struct iovec * lvec, unsigned long liovcnt, const struct iovec * rvec, unsigned long riovcnt, unsigned long flags),
+	TP_ARGS(sc_exit(ret,) pid, lvec, liovcnt, rvec, riovcnt, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_out(ctf_integer(const struct iovec *, lvec, lvec)) sc_in(ctf_integer(unsigned long, liovcnt, liovcnt)) sc_in(ctf_integer(const struct iovec *, rvec, rvec)) sc_in(ctf_integer(unsigned long, riovcnt, riovcnt)) sc_in(ctf_integer(unsigned long, flags, flags)))
+)
+#endif
+#ifndef OVERRIDE_64_process_vm_writev
+SC_LTTNG_TRACEPOINT_EVENT(process_vm_writev,
+	TP_PROTO(sc_exit(long ret,) pid_t pid, const struct iovec * lvec, unsigned long liovcnt, const struct iovec * rvec, unsigned long riovcnt, unsigned long flags),
+	TP_ARGS(sc_exit(ret,) pid, lvec, liovcnt, rvec, riovcnt, flags),
+	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(pid_t, pid, pid)) sc_in(ctf_integer(const struct iovec *, lvec, lvec)) sc_in(ctf_integer(unsigned long, liovcnt, liovcnt)) sc_in(ctf_integer(const struct iovec *, rvec, rvec)) sc_in(ctf_integer(unsigned long, riovcnt, riovcnt)) sc_in(ctf_integer(unsigned long, flags, flags)))
+)
+#endif
+
+#endif /*  _TRACE_SYSCALLS_POINTERS_H */
+
+/* This part must be outside protection */
+#include "../../../probes/define_trace.h"
+
+#else /* CREATE_SYSCALL_TABLE */
+
+#include "arm-64-syscalls-4.4.0_pointers_override.h"
+#include "syscalls_pointers_override.h"
+
+#ifndef OVERRIDE_TABLE_64_io_setup
+TRACE_SYSCALL_TABLE(io_setup, io_setup, 0, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_io_submit
+TRACE_SYSCALL_TABLE(io_submit, io_submit, 2, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_io_cancel
+TRACE_SYSCALL_TABLE(io_cancel, io_cancel, 3, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_io_getevents
+TRACE_SYSCALL_TABLE(io_getevents, io_getevents, 4, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_setxattr
+TRACE_SYSCALL_TABLE(setxattr, setxattr, 5, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_lsetxattr
+TRACE_SYSCALL_TABLE(lsetxattr, lsetxattr, 6, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_fsetxattr
+TRACE_SYSCALL_TABLE(fsetxattr, fsetxattr, 7, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_getxattr
+TRACE_SYSCALL_TABLE(getxattr, getxattr, 8, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_lgetxattr
+TRACE_SYSCALL_TABLE(lgetxattr, lgetxattr, 9, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_fgetxattr
+TRACE_SYSCALL_TABLE(fgetxattr, fgetxattr, 10, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_listxattr
+TRACE_SYSCALL_TABLE(listxattr, listxattr, 11, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_llistxattr
+TRACE_SYSCALL_TABLE(llistxattr, llistxattr, 12, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_flistxattr
+TRACE_SYSCALL_TABLE(flistxattr, flistxattr, 13, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_removexattr
+TRACE_SYSCALL_TABLE(removexattr, removexattr, 14, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_lremovexattr
+TRACE_SYSCALL_TABLE(lremovexattr, lremovexattr, 15, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_fremovexattr
+TRACE_SYSCALL_TABLE(fremovexattr, fremovexattr, 16, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_getcwd
+TRACE_SYSCALL_TABLE(getcwd, getcwd, 17, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_lookup_dcookie
+TRACE_SYSCALL_TABLE(lookup_dcookie, lookup_dcookie, 18, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_epoll_ctl
+TRACE_SYSCALL_TABLE(epoll_ctl, epoll_ctl, 21, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_epoll_pwait
+TRACE_SYSCALL_TABLE(epoll_pwait, epoll_pwait, 22, 6)
+#endif
+#ifndef OVERRIDE_TABLE_64_inotify_add_watch
+TRACE_SYSCALL_TABLE(inotify_add_watch, inotify_add_watch, 27, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_mknodat
+TRACE_SYSCALL_TABLE(mknodat, mknodat, 33, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_mkdirat
+TRACE_SYSCALL_TABLE(mkdirat, mkdirat, 34, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_unlinkat
+TRACE_SYSCALL_TABLE(unlinkat, unlinkat, 35, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_symlinkat
+TRACE_SYSCALL_TABLE(symlinkat, symlinkat, 36, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_linkat
+TRACE_SYSCALL_TABLE(linkat, linkat, 37, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_renameat
+TRACE_SYSCALL_TABLE(renameat, renameat, 38, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_umount
+TRACE_SYSCALL_TABLE(umount, umount, 39, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_mount
+TRACE_SYSCALL_TABLE(mount, mount, 40, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_pivot_root
+TRACE_SYSCALL_TABLE(pivot_root, pivot_root, 41, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_statfs
+TRACE_SYSCALL_TABLE(statfs, statfs, 43, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_fstatfs
+TRACE_SYSCALL_TABLE(fstatfs, fstatfs, 44, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_truncate
+TRACE_SYSCALL_TABLE(truncate, truncate, 45, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_faccessat
+TRACE_SYSCALL_TABLE(faccessat, faccessat, 48, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_chdir
+TRACE_SYSCALL_TABLE(chdir, chdir, 49, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_chroot
+TRACE_SYSCALL_TABLE(chroot, chroot, 51, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_fchmodat
+TRACE_SYSCALL_TABLE(fchmodat, fchmodat, 53, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_fchownat
+TRACE_SYSCALL_TABLE(fchownat, fchownat, 54, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_openat
+TRACE_SYSCALL_TABLE(openat, openat, 56, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_pipe2
+TRACE_SYSCALL_TABLE(pipe2, pipe2, 59, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_quotactl
+TRACE_SYSCALL_TABLE(quotactl, quotactl, 60, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_getdents64
+TRACE_SYSCALL_TABLE(getdents64, getdents64, 61, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_read
+TRACE_SYSCALL_TABLE(read, read, 63, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_write
+TRACE_SYSCALL_TABLE(write, write, 64, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_readv
+TRACE_SYSCALL_TABLE(readv, readv, 65, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_writev
+TRACE_SYSCALL_TABLE(writev, writev, 66, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_pread64
+TRACE_SYSCALL_TABLE(pread64, pread64, 67, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_pwrite64
+TRACE_SYSCALL_TABLE(pwrite64, pwrite64, 68, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_preadv
+TRACE_SYSCALL_TABLE(preadv, preadv, 69, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_pwritev
+TRACE_SYSCALL_TABLE(pwritev, pwritev, 70, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_sendfile64
+TRACE_SYSCALL_TABLE(sendfile64, sendfile64, 71, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_pselect6
+TRACE_SYSCALL_TABLE(pselect6, pselect6, 72, 6)
+#endif
+#ifndef OVERRIDE_TABLE_64_ppoll
+TRACE_SYSCALL_TABLE(ppoll, ppoll, 73, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_signalfd4
+TRACE_SYSCALL_TABLE(signalfd4, signalfd4, 74, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_vmsplice
+TRACE_SYSCALL_TABLE(vmsplice, vmsplice, 75, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_splice
+TRACE_SYSCALL_TABLE(splice, splice, 76, 6)
+#endif
+#ifndef OVERRIDE_TABLE_64_readlinkat
+TRACE_SYSCALL_TABLE(readlinkat, readlinkat, 78, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_newfstatat
+TRACE_SYSCALL_TABLE(newfstatat, newfstatat, 79, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_newfstat
+TRACE_SYSCALL_TABLE(newfstat, newfstat, 80, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_timerfd_settime
+TRACE_SYSCALL_TABLE(timerfd_settime, timerfd_settime, 86, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_timerfd_gettime
+TRACE_SYSCALL_TABLE(timerfd_gettime, timerfd_gettime, 87, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_utimensat
+TRACE_SYSCALL_TABLE(utimensat, utimensat, 88, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_acct
+TRACE_SYSCALL_TABLE(acct, acct, 89, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_waitid
+TRACE_SYSCALL_TABLE(waitid, waitid, 95, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_set_tid_address
+TRACE_SYSCALL_TABLE(set_tid_address, set_tid_address, 96, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_futex
+TRACE_SYSCALL_TABLE(futex, futex, 98, 6)
+#endif
+#ifndef OVERRIDE_TABLE_64_set_robust_list
+TRACE_SYSCALL_TABLE(set_robust_list, set_robust_list, 99, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_get_robust_list
+TRACE_SYSCALL_TABLE(get_robust_list, get_robust_list, 100, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_nanosleep
+TRACE_SYSCALL_TABLE(nanosleep, nanosleep, 101, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_getitimer
+TRACE_SYSCALL_TABLE(getitimer, getitimer, 102, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_setitimer
+TRACE_SYSCALL_TABLE(setitimer, setitimer, 103, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_init_module
+TRACE_SYSCALL_TABLE(init_module, init_module, 105, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_delete_module
+TRACE_SYSCALL_TABLE(delete_module, delete_module, 106, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_timer_create
+TRACE_SYSCALL_TABLE(timer_create, timer_create, 107, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_timer_gettime
+TRACE_SYSCALL_TABLE(timer_gettime, timer_gettime, 108, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_timer_settime
+TRACE_SYSCALL_TABLE(timer_settime, timer_settime, 110, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_clock_settime
+TRACE_SYSCALL_TABLE(clock_settime, clock_settime, 112, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_clock_gettime
+TRACE_SYSCALL_TABLE(clock_gettime, clock_gettime, 113, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_clock_getres
+TRACE_SYSCALL_TABLE(clock_getres, clock_getres, 114, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_clock_nanosleep
+TRACE_SYSCALL_TABLE(clock_nanosleep, clock_nanosleep, 115, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_syslog
+TRACE_SYSCALL_TABLE(syslog, syslog, 116, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_setparam
+TRACE_SYSCALL_TABLE(sched_setparam, sched_setparam, 118, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_setscheduler
+TRACE_SYSCALL_TABLE(sched_setscheduler, sched_setscheduler, 119, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_getparam
+TRACE_SYSCALL_TABLE(sched_getparam, sched_getparam, 121, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_setaffinity
+TRACE_SYSCALL_TABLE(sched_setaffinity, sched_setaffinity, 122, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_getaffinity
+TRACE_SYSCALL_TABLE(sched_getaffinity, sched_getaffinity, 123, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_rr_get_interval
+TRACE_SYSCALL_TABLE(sched_rr_get_interval, sched_rr_get_interval, 127, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_sigaltstack
+TRACE_SYSCALL_TABLE(sigaltstack, sigaltstack, 132, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_rt_sigsuspend
+TRACE_SYSCALL_TABLE(rt_sigsuspend, rt_sigsuspend, 133, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_rt_sigaction
+TRACE_SYSCALL_TABLE(rt_sigaction, rt_sigaction, 134, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_rt_sigprocmask
+TRACE_SYSCALL_TABLE(rt_sigprocmask, rt_sigprocmask, 135, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_rt_sigpending
+TRACE_SYSCALL_TABLE(rt_sigpending, rt_sigpending, 136, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_rt_sigtimedwait
+TRACE_SYSCALL_TABLE(rt_sigtimedwait, rt_sigtimedwait, 137, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_rt_sigqueueinfo
+TRACE_SYSCALL_TABLE(rt_sigqueueinfo, rt_sigqueueinfo, 138, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_reboot
+TRACE_SYSCALL_TABLE(reboot, reboot, 142, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_getresuid
+TRACE_SYSCALL_TABLE(getresuid, getresuid, 148, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_getresgid
+TRACE_SYSCALL_TABLE(getresgid, getresgid, 150, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_times
+TRACE_SYSCALL_TABLE(times, times, 153, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_getgroups
+TRACE_SYSCALL_TABLE(getgroups, getgroups, 158, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_setgroups
+TRACE_SYSCALL_TABLE(setgroups, setgroups, 159, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_newuname
+TRACE_SYSCALL_TABLE(newuname, newuname, 160, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_sethostname
+TRACE_SYSCALL_TABLE(sethostname, sethostname, 161, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_setdomainname
+TRACE_SYSCALL_TABLE(setdomainname, setdomainname, 162, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_getrlimit
+TRACE_SYSCALL_TABLE(getrlimit, getrlimit, 163, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_setrlimit
+TRACE_SYSCALL_TABLE(setrlimit, setrlimit, 164, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_getrusage
+TRACE_SYSCALL_TABLE(getrusage, getrusage, 165, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_getcpu
+TRACE_SYSCALL_TABLE(getcpu, getcpu, 168, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_gettimeofday
+TRACE_SYSCALL_TABLE(gettimeofday, gettimeofday, 169, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_settimeofday
+TRACE_SYSCALL_TABLE(settimeofday, settimeofday, 170, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_adjtimex
+TRACE_SYSCALL_TABLE(adjtimex, adjtimex, 171, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_sysinfo
+TRACE_SYSCALL_TABLE(sysinfo, sysinfo, 179, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_mq_open
+TRACE_SYSCALL_TABLE(mq_open, mq_open, 180, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_mq_unlink
+TRACE_SYSCALL_TABLE(mq_unlink, mq_unlink, 181, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_mq_timedsend
+TRACE_SYSCALL_TABLE(mq_timedsend, mq_timedsend, 182, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_mq_timedreceive
+TRACE_SYSCALL_TABLE(mq_timedreceive, mq_timedreceive, 183, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_mq_notify
+TRACE_SYSCALL_TABLE(mq_notify, mq_notify, 184, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_mq_getsetattr
+TRACE_SYSCALL_TABLE(mq_getsetattr, mq_getsetattr, 185, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_msgctl
+TRACE_SYSCALL_TABLE(msgctl, msgctl, 187, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_msgrcv
+TRACE_SYSCALL_TABLE(msgrcv, msgrcv, 188, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_msgsnd
+TRACE_SYSCALL_TABLE(msgsnd, msgsnd, 189, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_semtimedop
+TRACE_SYSCALL_TABLE(semtimedop, semtimedop, 192, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_semop
+TRACE_SYSCALL_TABLE(semop, semop, 193, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_shmctl
+TRACE_SYSCALL_TABLE(shmctl, shmctl, 195, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_shmat
+TRACE_SYSCALL_TABLE(shmat, shmat, 196, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_shmdt
+TRACE_SYSCALL_TABLE(shmdt, shmdt, 197, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_socketpair
+TRACE_SYSCALL_TABLE(socketpair, socketpair, 199, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_bind
+TRACE_SYSCALL_TABLE(bind, bind, 200, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_accept
+TRACE_SYSCALL_TABLE(accept, accept, 202, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_connect
+TRACE_SYSCALL_TABLE(connect, connect, 203, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_getsockname
+TRACE_SYSCALL_TABLE(getsockname, getsockname, 204, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_getpeername
+TRACE_SYSCALL_TABLE(getpeername, getpeername, 205, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_sendto
+TRACE_SYSCALL_TABLE(sendto, sendto, 206, 6)
+#endif
+#ifndef OVERRIDE_TABLE_64_recvfrom
+TRACE_SYSCALL_TABLE(recvfrom, recvfrom, 207, 6)
+#endif
+#ifndef OVERRIDE_TABLE_64_setsockopt
+TRACE_SYSCALL_TABLE(setsockopt, setsockopt, 208, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_getsockopt
+TRACE_SYSCALL_TABLE(getsockopt, getsockopt, 209, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_sendmsg
+TRACE_SYSCALL_TABLE(sendmsg, sendmsg, 211, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_recvmsg
+TRACE_SYSCALL_TABLE(recvmsg, recvmsg, 212, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_add_key
+TRACE_SYSCALL_TABLE(add_key, add_key, 217, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_request_key
+TRACE_SYSCALL_TABLE(request_key, request_key, 218, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_execve
+TRACE_SYSCALL_TABLE(execve, execve, 221, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_swapon
+TRACE_SYSCALL_TABLE(swapon, swapon, 224, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_swapoff
+TRACE_SYSCALL_TABLE(swapoff, swapoff, 225, 1)
+#endif
+#ifndef OVERRIDE_TABLE_64_mincore
+TRACE_SYSCALL_TABLE(mincore, mincore, 232, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_rt_tgsigqueueinfo
+TRACE_SYSCALL_TABLE(rt_tgsigqueueinfo, rt_tgsigqueueinfo, 240, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_perf_event_open
+TRACE_SYSCALL_TABLE(perf_event_open, perf_event_open, 241, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_accept4
+TRACE_SYSCALL_TABLE(accept4, accept4, 242, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_recvmmsg
+TRACE_SYSCALL_TABLE(recvmmsg, recvmmsg, 243, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_wait4
+TRACE_SYSCALL_TABLE(wait4, wait4, 260, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_prlimit64
+TRACE_SYSCALL_TABLE(prlimit64, prlimit64, 261, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_fanotify_mark
+TRACE_SYSCALL_TABLE(fanotify_mark, fanotify_mark, 263, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_name_to_handle_at
+TRACE_SYSCALL_TABLE(name_to_handle_at, name_to_handle_at, 264, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_open_by_handle_at
+TRACE_SYSCALL_TABLE(open_by_handle_at, open_by_handle_at, 265, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_clock_adjtime
+TRACE_SYSCALL_TABLE(clock_adjtime, clock_adjtime, 266, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_sendmmsg
+TRACE_SYSCALL_TABLE(sendmmsg, sendmmsg, 269, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_process_vm_readv
+TRACE_SYSCALL_TABLE(process_vm_readv, process_vm_readv, 270, 6)
+#endif
+#ifndef OVERRIDE_TABLE_64_process_vm_writev
+TRACE_SYSCALL_TABLE(process_vm_writev, process_vm_writev, 271, 6)
+#endif
+#ifndef OVERRIDE_TABLE_64_finit_module
+TRACE_SYSCALL_TABLE(finit_module, finit_module, 273, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_setattr
+TRACE_SYSCALL_TABLE(sched_setattr, sched_setattr, 274, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_sched_getattr
+TRACE_SYSCALL_TABLE(sched_getattr, sched_getattr, 275, 4)
+#endif
+#ifndef OVERRIDE_TABLE_64_renameat2
+TRACE_SYSCALL_TABLE(renameat2, renameat2, 276, 5)
+#endif
+#ifndef OVERRIDE_TABLE_64_seccomp
+TRACE_SYSCALL_TABLE(seccomp, seccomp, 277, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_getrandom
+TRACE_SYSCALL_TABLE(getrandom, getrandom, 278, 3)
+#endif
+#ifndef OVERRIDE_TABLE_64_memfd_create
+TRACE_SYSCALL_TABLE(memfd_create, memfd_create, 279, 2)
+#endif
+#ifndef OVERRIDE_TABLE_64_execveat
+TRACE_SYSCALL_TABLE(execveat, execveat, 281, 5)
+#endif
+
+#endif /* CREATE_SYSCALL_TABLE */
diff --git a/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_pointers_override.h b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_pointers_override.h
new file mode 100644
index 0000000..0792972
--- /dev/null
+++ b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-64-syscalls-4.4.0_pointers_override.h
@@ -0,0 +1,9 @@
+/*
+ * this is a place-holder for arm64 integer syscall definition override.
+ */
+#ifndef CREATE_SYSCALL_TABLE
+
+#else
+#define OVERRIDE_TABLE_64_clone
+TRACE_SYSCALL_TABLE(clone, clone, 220, 5)
+#endif
diff --git a/drivers/staging/lttng/instrumentation/syscalls/headers/syscalls_integers.h b/drivers/staging/lttng/instrumentation/syscalls/headers/syscalls_integers.h
index 8cccccf..1d50c86 100644
--- a/drivers/staging/lttng/instrumentation/syscalls/headers/syscalls_integers.h
+++ b/drivers/staging/lttng/instrumentation/syscalls/headers/syscalls_integers.h
@@ -17,3 +17,7 @@
 #ifdef CONFIG_CPU_MIPS32
 #include "mips-32-syscalls-3.18.0_integers.h"
 #endif
+
+#ifdef CONFIG_ARM64
+#include "arm-64-syscalls-4.4.0_integers.h"
+#endif
diff --git a/drivers/staging/lttng/instrumentation/syscalls/headers/syscalls_pointers.h b/drivers/staging/lttng/instrumentation/syscalls/headers/syscalls_pointers.h
index ab95df8..d60d380 100644
--- a/drivers/staging/lttng/instrumentation/syscalls/headers/syscalls_pointers.h
+++ b/drivers/staging/lttng/instrumentation/syscalls/headers/syscalls_pointers.h
@@ -17,3 +17,7 @@
 #ifdef CONFIG_CPU_MIPS32
 #include "mips-32-syscalls-3.18.0_pointers.h"
 #endif
+
+#ifdef CONFIG_ARM64
+#include "arm-64-syscalls-4.4.0_pointers.h"
+#endif
-- 
2.0.2

