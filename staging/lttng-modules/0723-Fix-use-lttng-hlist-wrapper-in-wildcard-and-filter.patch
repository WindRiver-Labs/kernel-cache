From af7d8f98e7631b24a2b3e58bba3b3a51868e7941 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Fri, 10 Apr 2015 18:29:34 -0400
Subject: [PATCH 723/933] Fix: use lttng hlist wrapper in wildcard and filter

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/lttng-events.c           | 4 ++--
 drivers/staging/lttng/lttng-filter-validator.c | 8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/lttng/lttng-events.c b/drivers/staging/lttng/lttng-events.c
index cf2cae0..65bd0bf 100644
--- a/drivers/staging/lttng/lttng-events.c
+++ b/drivers/staging/lttng/lttng-events.c
@@ -492,7 +492,7 @@ struct lttng_event *_lttng_event_create(struct lttng_channel *chan,
 	name_len = strlen(event_name);
 	hash = jhash(event_name, name_len, 0);
 	head = &session->events_ht.table[hash & (LTTNG_EVENT_HT_SIZE - 1)];
-	hlist_for_each_entry(event, head, hlist) {
+	lttng_hlist_for_each_entry(event, head, hlist) {
 		WARN_ON_ONCE(!event->desc);
 		if (!strncmp(event->desc->name, event_name,
 					LTTNG_KERNEL_SYM_NAME_LEN - 1)
@@ -1131,7 +1131,7 @@ void lttng_create_tracepoint_if_missing(struct lttng_enabler *enabler)
 			 */
 			hash = jhash(event_name, name_len, 0);
 			head = &session->events_ht.table[hash & (LTTNG_EVENT_HT_SIZE - 1)];
-			hlist_for_each_entry(event, head, hlist) {
+			lttng_hlist_for_each_entry(event, head, hlist) {
 				if (event->desc == desc
 						&& event->chan == enabler->chan)
 					found = 1;
diff --git a/drivers/staging/lttng/lttng-filter-validator.c b/drivers/staging/lttng/lttng-filter-validator.c
index e785799..fb5d2d6 100644
--- a/drivers/staging/lttng/lttng-filter-validator.c
+++ b/drivers/staging/lttng/lttng-filter-validator.c
@@ -20,10 +20,10 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
-#include <linux/list.h>
 #include <linux/jhash.h>
 #include <linux/slab.h>
 
+#include "wrapper/list.h"
 #include "lttng-filter.h"
 
 #define MERGE_POINT_TABLE_BITS		7
@@ -87,7 +87,7 @@ int merge_point_add_check(struct mp_table *mp_table, unsigned long target_pc,
 	memcpy(&mp_node->stack, stack, sizeof(mp_node->stack));
 
 	head = &mp_table->mp_head[hash & (MERGE_POINT_TABLE_SIZE - 1)];
-	hlist_for_each_entry(lookup_node, head, node) {
+	lttng_hlist_for_each_entry(lookup_node, head, node) {
 		if (lttng_hash_match(lookup_node, target_pc)) {
 			found = 1;
 			break;
@@ -369,7 +369,7 @@ unsigned long delete_all_nodes(struct mp_table *mp_table)
 		struct hlist_head *head;
 
 		head = &mp_table->mp_head[i];
-		hlist_for_each_entry_safe(mp_node, tmp, head, node) {
+		lttng_hlist_for_each_entry_safe(mp_node, tmp, head, node) {
 			kfree(mp_node);
 			nr_nodes++;
 		}
@@ -739,7 +739,7 @@ int validate_instruction_all_contexts(struct bytecode_runtime *bytecode,
 	/* Validate merge points */
 	hash = jhash_1word(target_pc, 0);
 	head = &mp_table->mp_head[hash & (MERGE_POINT_TABLE_SIZE - 1)];
-	hlist_for_each_entry(mp_node, head, node) {
+	lttng_hlist_for_each_entry(mp_node, head, node) {
 		if (lttng_hash_match(mp_node, target_pc)) {
 			found = 1;
 			break;
-- 
2.0.2

