From 938c2dd5a1a01c1ac1a61384e342161584f1e21d Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 27 Sep 2012 20:25:11 -0400
Subject: [PATCH 438/540] Perform calculation on bit size in 64-bit

allow 32-bit architectures to have sub-buffers larger than 256MB.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng2/lttng-ring-buffer-client.h | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/lttng2/lttng-ring-buffer-client.h b/drivers/staging/lttng2/lttng-ring-buffer-client.h
index 47059b4..0b05561 100644
--- a/drivers/staging/lttng2/lttng-ring-buffer-client.h
+++ b/drivers/staging/lttng2/lttng-ring-buffer-client.h
@@ -370,8 +370,10 @@ static void client_buffer_end(struct lib_ring_buffer *buf, u64 tsc,
 	unsigned long records_lost = 0;
 
 	header->ctx.timestamp_end = tsc;
-	header->ctx.content_size = data_size * CHAR_BIT; 	/* in bits */
-	header->ctx.packet_size = PAGE_ALIGN(data_size) * CHAR_BIT; /* in bits */
+	header->ctx.content_size =
+		(uint64_t) data_size * CHAR_BIT;		/* in bits */
+	header->ctx.packet_size =
+		(uint64_t) PAGE_ALIGN(data_size) * CHAR_BIT;	/* in bits */
 	records_lost += lib_ring_buffer_get_records_lost_full(&client_config, buf);
 	records_lost += lib_ring_buffer_get_records_lost_wrap(&client_config, buf);
 	records_lost += lib_ring_buffer_get_records_lost_big(&client_config, buf);
-- 
1.8.4.93.g57e4c17

