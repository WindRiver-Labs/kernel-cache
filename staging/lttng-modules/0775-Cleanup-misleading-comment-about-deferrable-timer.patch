From a322c076448c79ecafc159410a8701095736803e Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 11 Jun 2015 10:09:49 +0200
Subject: [PATCH 775/933] Cleanup: misleading comment about deferrable timer

Timer in lttng-modules are not deferrable, because we cannot hook into
the Linux kernel CPU idle events, because no notifiers are exposed for
those.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 drivers/staging/lttng/lib/ringbuffer/config.h               | 2 +-
 drivers/staging/lttng/lib/ringbuffer/ring_buffer_iterator.c | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/lttng/lib/ringbuffer/config.h b/drivers/staging/lttng/lib/ringbuffer/config.h
index 67caba0..8fa2c55 100644
--- a/drivers/staging/lttng/lib/ringbuffer/config.h
+++ b/drivers/staging/lttng/lib/ringbuffer/config.h
@@ -106,7 +106,7 @@ struct lib_ring_buffer_client_cb {
  *
  * wakeup:
  *
- * RING_BUFFER_WAKEUP_BY_TIMER uses per-cpu deferrable timers to poll the
+ * RING_BUFFER_WAKEUP_BY_TIMER uses per-cpu timers to poll the
  * buffers and wake up readers if data is ready. Mainly useful for tracers which
  * don't want to call into the wakeup code on the tracing path. Use in
  * combination with "read_timer_interval" channel_create() argument.
diff --git a/drivers/staging/lttng/lib/ringbuffer/ring_buffer_iterator.c b/drivers/staging/lttng/lib/ringbuffer/ring_buffer_iterator.c
index 24e3dbb..c6e5225 100644
--- a/drivers/staging/lttng/lib/ringbuffer/ring_buffer_iterator.c
+++ b/drivers/staging/lttng/lib/ringbuffer/ring_buffer_iterator.c
@@ -71,7 +71,7 @@ restart:
 			 * Per-CPU buffers rather use a "push" scheme because
 			 * the IPI needed to flush all CPU's buffers is too
 			 * costly. In the "push" scheme, the reader waits for
-			 * the writer periodic deferrable timer to flush the
+			 * the writer periodic timer to flush the
 			 * buffers (keeping track of a quiescent state
 			 * timestamp). Therefore, the writer "pushes" data out
 			 * of the buffers rather than letting the reader "pull"
-- 
2.0.2

