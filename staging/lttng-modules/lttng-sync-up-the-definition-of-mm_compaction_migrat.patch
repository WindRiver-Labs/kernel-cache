From 5fcb26b0f72be457a0f6c5028efced3fddb25fdc Mon Sep 17 00:00:00 2001
From: Yue Tao <Yue.Tao@windriver.com>
Date: Thu, 12 Feb 2015 13:12:15 +0800
Subject: [PATCH] lttng: sync up the definition of mm_compaction_migratepages
 with v3.14.24

A upstream commit f8c9301fa is backported to the stable tree
linux-3.14.24 as 41c9323cf1, in which the definition of
mm_compaction_migratepages has been changed, which cause the lttng build
failed, so sync up the definition with v3.14.24. The build failure is

/../instrumentation/events/lttng-module/../../../probes/lttng-events.h:151:6:
error: conflicting types for 'trace_mm_compaction_migratepages'
...
...
...
include/linux/tracepoint.h:168:21:
note: previous definition of 'trace_mm_compaction_migratepages' was here

Signed-off-by: Yue Tao <Yue.Tao@windriver.com>
---
 .../events/lttng-module/compaction.h               |   26 ++++++++++++++++----
 .../instrumentation/events/mainline/compaction.h   |   24 +++++++++++++++---
 .../events/lttng-module/compaction.h               |    2 +-
 .../instrumentation/events/mainline/compaction.h   |   24 +++++++++++++++---
 4 files changed, 62 insertions(+), 14 deletions(-)

diff --git a/drivers/staging/lttng/instrumentation/events/lttng-module/compaction.h b/drivers/staging/lttng/instrumentation/events/lttng-module/compaction.h
index 1b237fa..f8c64f9 100644
--- a/drivers/staging/lttng/instrumentation/events/lttng-module/compaction.h
+++ b/drivers/staging/lttng/instrumentation/events/lttng-module/compaction.h
@@ -47,10 +47,11 @@ DEFINE_EVENT(mm_compaction_isolate_template, mm_compaction_isolate_freepages,
 
 TRACE_EVENT(mm_compaction_migratepages,
 
-	TP_PROTO(unsigned long nr_migrated,
-		unsigned long nr_failed),
+	TP_PROTO(unsigned long nr_all,
+		int migrate_rc,
+		struct list_head *migratepages),
 
-	TP_ARGS(nr_migrated, nr_failed),
+	TP_ARGS(nr_all, migrate_rc, migratepages),
 
 	TP_STRUCT__entry(
 		__field(unsigned long, nr_migrated)
@@ -58,8 +59,23 @@ TRACE_EVENT(mm_compaction_migratepages,
 	),
 
 	TP_fast_assign(
-		tp_assign(nr_migrated, nr_migrated)
-		tp_assign(nr_failed, nr_failed)
+		unsigned long nr_failed = 0;
+		struct list_head *page_lru;
+
+		/*
+		 * migrate_pages() returns either a non-negative number
+		 * with the number of pages that failed migration, or an
+		 * error code, in which case we need to count the remaining
+		 * pages manually
+		 */
+		if (migrate_rc >= 0)
+			nr_failed = migrate_rc;
+		else
+			list_for_each(page_lru, migratepages)
+				nr_failed++;
+
+		__entry->nr_migrated = nr_all - nr_failed;
+		__entry->nr_failed = nr_failed;
 	),
 
 	TP_printk("nr_migrated=%lu nr_failed=%lu",
diff --git a/drivers/staging/lttng/instrumentation/events/mainline/compaction.h b/drivers/staging/lttng/instrumentation/events/mainline/compaction.h
index fde1b3e..cc2b309 100644
--- a/drivers/staging/lttng/instrumentation/events/mainline/compaction.h
+++ b/drivers/staging/lttng/instrumentation/events/mainline/compaction.h
@@ -47,10 +47,11 @@ DEFINE_EVENT(mm_compaction_isolate_template, mm_compaction_isolate_freepages,
 
 TRACE_EVENT(mm_compaction_migratepages,
 
-	TP_PROTO(unsigned long nr_migrated,
-		unsigned long nr_failed),
+	TP_PROTO(unsigned long nr_all,
+		int migrate_rc,
+		struct list_head *migratepages),
 
-	TP_ARGS(nr_migrated, nr_failed),
+	TP_ARGS(nr_all, migrate_rc, migratepages),
 
 	TP_STRUCT__entry(
 		__field(unsigned long, nr_migrated)
@@ -58,7 +59,22 @@ TRACE_EVENT(mm_compaction_migratepages,
 	),
 
 	TP_fast_assign(
-		__entry->nr_migrated = nr_migrated;
+		unsigned long nr_failed = 0;
+		struct list_head *page_lru;
+
+		/*
+		 * migrate_pages() returns either a non-negative number
+		 * with the number of pages that failed migration, or an
+		 * error code, in which case we need to count the remaining
+		 * pages manually
+		 */
+		if (migrate_rc >= 0)
+			nr_failed = migrate_rc;
+		else
+			list_for_each(page_lru, migratepages)
+				nr_failed++;
+
+		__entry->nr_migrated = nr_all - nr_failed;
 		__entry->nr_failed = nr_failed;
 	),
 
diff --git a/drivers/staging/lttng2/instrumentation/events/lttng-module/compaction.h b/drivers/staging/lttng2/instrumentation/events/lttng-module/compaction.h
index 22024e9..a944fbe 100644
--- a/drivers/staging/lttng2/instrumentation/events/lttng-module/compaction.h
+++ b/drivers/staging/lttng2/instrumentation/events/lttng-module/compaction.h
@@ -46,7 +46,7 @@ DEFINE_EVENT(mm_compaction_isolate_template, mm_compaction_isolate_freepages,
 	TP_ARGS(nr_scanned, nr_taken)
 )
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,16,0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,14,24))
 TRACE_EVENT(mm_compaction_migratepages,
 
 	TP_PROTO(unsigned long nr_all,
diff --git a/drivers/staging/lttng2/instrumentation/events/mainline/compaction.h b/drivers/staging/lttng2/instrumentation/events/mainline/compaction.h
index fde1b3e..cc2b309 100644
--- a/drivers/staging/lttng2/instrumentation/events/mainline/compaction.h
+++ b/drivers/staging/lttng2/instrumentation/events/mainline/compaction.h
@@ -47,10 +47,11 @@ DEFINE_EVENT(mm_compaction_isolate_template, mm_compaction_isolate_freepages,
 
 TRACE_EVENT(mm_compaction_migratepages,
 
-	TP_PROTO(unsigned long nr_migrated,
-		unsigned long nr_failed),
+	TP_PROTO(unsigned long nr_all,
+		int migrate_rc,
+		struct list_head *migratepages),
 
-	TP_ARGS(nr_migrated, nr_failed),
+	TP_ARGS(nr_all, migrate_rc, migratepages),
 
 	TP_STRUCT__entry(
 		__field(unsigned long, nr_migrated)
@@ -58,7 +59,22 @@ TRACE_EVENT(mm_compaction_migratepages,
 	),
 
 	TP_fast_assign(
-		__entry->nr_migrated = nr_migrated;
+		unsigned long nr_failed = 0;
+		struct list_head *page_lru;
+
+		/*
+		 * migrate_pages() returns either a non-negative number
+		 * with the number of pages that failed migration, or an
+		 * error code, in which case we need to count the remaining
+		 * pages manually
+		 */
+		if (migrate_rc >= 0)
+			nr_failed = migrate_rc;
+		else
+			list_for_each(page_lru, migratepages)
+				nr_failed++;
+
+		__entry->nr_migrated = nr_all - nr_failed;
 		__entry->nr_failed = nr_failed;
 	),
 
-- 
1.7.5.4

