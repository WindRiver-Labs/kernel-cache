From dhobsong@igel.co.jp Wed Nov 21 23:30:31 2012
From: Damian Hobson-Garcia <dhobsong@igel.co.jp>
Date: Thu, 22 Nov 2012 16:28:24 +0900
Subject: [PATCH 1/7] shmobile: r8a7740: Add support for VCP-1 (VPU), VPC, VIO multimedia IP
To: gregkh@linuxfoundation.org
Cc: ltsi-dev@lists.linuxfoundation.org, Damian Hobson-Garcia <dhobsong@igel.co.jp>
Message-ID: <1353569310-16564-2-git-send-email-dhobsong@igel.co.jp>


Att the UIO device and clock settings for these multimedia IP cores

Signed-off-by: Damian Hobson-Garcia <dhobsong@igel.co.jp>
---
 arch/arm/mach-shmobile/board-armadillo800eva.c |    1 
 arch/arm/mach-shmobile/clock-r8a7740.c         |    9 ++
 arch/arm/mach-shmobile/include/mach/common.h   |    1 
 arch/arm/mach-shmobile/setup-r8a7740.c         |  100 +++++++++++++++++++++++++
 4 files changed, 110 insertions(+), 1 deletion(-)

--- a/arch/arm/mach-shmobile/board-armadillo800eva.c
+++ b/arch/arm/mach-shmobile/board-armadillo800eva.c
@@ -1212,6 +1212,7 @@ DT_MACHINE_START(ARMADILLO800EVA_DT, "ar
 	.init_early	= eva_add_early_devices,
 	.init_irq	= r8a7740_init_irq,
 	.handle_irq	= shmobile_handle_irq_intc,
+	.reserve	= r8a7740_reserve_memory,
 	.init_machine	= eva_init,
 	.init_late	= shmobile_init_late,
 	.timer		= &shmobile_timer,
--- a/arch/arm/mach-shmobile/clock-r8a7740.c
+++ b/arch/arm/mach-shmobile/clock-r8a7740.c
@@ -459,7 +459,7 @@ static struct clk div6_clks[DIV6_NR] = {
 
 enum {
 	MSTP128, MSTP127, MSTP125,
-	MSTP116, MSTP111, MSTP100, MSTP117,
+	MSTP116, MSTP111, MSTP100, MSTP117, MSTP101, MSTP107, MSTP103,
 
 	MSTP230,
 	MSTP222,
@@ -483,6 +483,9 @@ static struct clk mstp_clks[MSTP_NR] = {
 	[MSTP116] = SH_CLK_MSTP32(&div6_clks[DIV6_SUB],	SMSTPCR1, 16, 0), /* IIC0 */
 	[MSTP111] = SH_CLK_MSTP32(&div6_clks[DIV6_SUB],	SMSTPCR1, 11, 0), /* TMU1 */
 	[MSTP100] = SH_CLK_MSTP32(&div4_clks[DIV4_B],	SMSTPCR1,  0, 0), /* LCDC0 */
+	[MSTP101] = SH_CLK_MSTP32(&div4_clks[DIV4_B],	SMSTPCR1,  1, 0), /* VPU5HA2 */
+	[MSTP103] = SH_CLK_MSTP32(&div4_clks[DIV4_B],	SMSTPCR1,  3, 0), /* VIO6C */
+	[MSTP107] = SH_CLK_MSTP32(&div4_clks[DIV4_B],	SMSTPCR1,  7, 0), /* VPC */
 
 	[MSTP230] = SH_CLK_MSTP32(&div6_clks[DIV6_SUB],	SMSTPCR2, 30, 0), /* SCIFA6 */
 	[MSTP222] = SH_CLK_MSTP32(&div6_clks[DIV6_SUB],	SMSTPCR2, 22, 0), /* SCIFA7 */
@@ -554,6 +557,10 @@ static struct clk_lookup lookups[] = {
 
 	/* MSTP32 clocks */
 	CLKDEV_DEV_ID("sh_mobile_lcdc_fb.0",	&mstp_clks[MSTP100]),
+	CLKDEV_DEV_ID("uio_dmem_genirq.0",	&mstp_clks[MSTP101]),
+	CLKDEV_DEV_ID("uio_pdrv_genirq.1",	&mstp_clks[MSTP103]),
+	CLKDEV_DEV_ID("uio_pdrv_genirq.2",	&mstp_clks[MSTP107]),
+	CLKDEV_DEV_ID("sh_mobile_lcdc_fb.0",	&mstp_clks[MSTP100]),
 	CLKDEV_DEV_ID("sh_tmu.1",		&mstp_clks[MSTP111]),
 	CLKDEV_DEV_ID("i2c-sh_mobile.0",	&mstp_clks[MSTP116]),
 	CLKDEV_DEV_ID("sh_mobile_lcdc_fb.1",	&mstp_clks[MSTP117]),
--- a/arch/arm/mach-shmobile/include/mach/common.h
+++ b/arch/arm/mach-shmobile/include/mach/common.h
@@ -68,6 +68,7 @@ extern void r8a7740_map_io(void);
 extern void r8a7740_add_early_devices(void);
 extern void r8a7740_add_standard_devices(void);
 extern void r8a7740_clock_init(u8 md_ck);
+extern void r8a7740_reserve_memory(void);
 extern void r8a7740_pinmux_init(void);
 
 extern void r8a7779_init_irq(void);
--- a/arch/arm/mach-shmobile/setup-r8a7740.c
+++ b/arch/arm/mach-shmobile/setup-r8a7740.c
@@ -23,10 +23,13 @@
 #include <linux/init.h>
 #include <linux/io.h>
 #include <linux/platform_device.h>
+#include <linux/platform_data/uio_dmem_genirq.h>
 #include <linux/of_platform.h>
 #include <linux/serial_sci.h>
 #include <linux/sh_dma.h>
 #include <linux/sh_timer.h>
+#include <linux/uio_driver.h>
+#include <linux/dma-contiguous.h>
 #include <linux/dma-mapping.h>
 #include <mach/dma-register.h>
 #include <mach/r8a7740.h>
@@ -74,6 +77,94 @@ void __init r8a7740_map_io(void)
 	init_consistent_dma_size(12 << 20);
 }
 
+/* VPC */
+static struct uio_info vpc_platform_data = {
+	.name = "VPC",
+	.version = "0",
+	.irq = -1,
+};
+
+static struct resource vpc_resources[] = {
+	[0] = {
+		.name	= "VPC",
+		.start	= 0xfe9d0000,
+		.end	= 0xfe9d0020,
+		.flags	= IORESOURCE_MEM,
+	},
+};
+
+static struct platform_device vpc_device = {
+	.name		= "uio_pdrv_genirq",
+	.id		= 2,
+	.dev = {
+		.platform_data	= &vpc_platform_data,
+	},
+	.resource	= vpc_resources,
+	.num_resources	= ARRAY_SIZE(vpc_resources),
+};
+
+/* VCP1 */
+static unsigned int regions[] = {
+	(80 << 20),
+};
+
+static struct uio_dmem_genirq_pdata vpu_platform_data = {
+	.uioinfo = {
+		.name = "VPU5",
+		.version = "0",
+		.irq = intcs_evt2irq(0x880),
+	},
+	.dynamic_region_sizes	= regions,
+	.num_dynamic_regions	= ARRAY_SIZE(regions),
+};
+
+static struct resource vpu_resources[] = {
+	[0] = {
+		.name	= "VPU",
+		.start	= 0xfe900000,
+		.end	= 0xfe900157,
+		.flags	= IORESOURCE_MEM,
+	},
+};
+
+static struct platform_device vpu_device = {
+	.name		= "uio_dmem_genirq",
+	.id		= 0,
+	.dev = {
+		.platform_data	= &vpu_platform_data,
+		.coherent_dma_mask = ~0,
+	},
+	.resource	= vpu_resources,
+	.num_resources	= ARRAY_SIZE(vpu_resources),
+};
+
+/* VI00 */
+static struct uio_info vio_platform_data = {
+	.name = "VIO6C",
+	.version = "0",
+	.irq = intcs_evt2irq(0x4E0),
+};
+
+static struct resource vio_resources[] = {
+	[0] = {
+		.name	= "VIO6",
+		.start	= 0xfe920000,
+		.end	= 0xfe928000,
+		.flags	= IORESOURCE_MEM,
+	},
+};
+
+static struct platform_device vio_device = {
+	.name		= "uio_pdrv_genirq",
+	.id		= 1,
+	.dev = {
+		.platform_data	= &vio_platform_data,
+		.coherent_dma_mask = ~0,
+	},
+	.resource	= vio_resources,
+	.num_resources	= ARRAY_SIZE(vio_resources),
+};
+
 /* SCIFA0 */
 static struct plat_sci_port scif0_platform_data = {
 	.mapbase	= 0xe6c40000,
@@ -279,6 +370,10 @@ static struct platform_device *r8a7740_e
 	&scif7_device,
 	&scifb_device,
 	&cmt10_device,
+	&vpu_device,
+	&vpc_device,
+	&vio_device,
+
 };
 
 /* DMA */
@@ -718,6 +813,11 @@ void __init r8a7740_add_early_devices(vo
 	shmobile_timer.init = r8a7740_earlytimer_init;
 }
 
+void __init r8a7740_reserve_memory(void)
+{
+	dma_declare_contiguous(&vpu_device.dev, 80 << 20, 0, 0);
+}
+
 #ifdef CONFIG_USE_OF
 
 void __init r8a7740_add_early_devices_dt(void)
