From 815c18d931e79076ce64c0af0aa249ec993aa366 Mon Sep 17 00:00:00 2001
From: Wolfram Sang <w.sang@pengutronix.de>
Date: Thu, 19 May 2011 15:37:12 +0200
Subject: video: atmelfb: refactor isr
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Wolfram Sang <w.sang@pengutronix.de>
Signed-off-by: Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>
---
 drivers/video/atmel_lcdfb.c      | 18 ++++++++++++++++++
 drivers/video/atmel_lcdfb_core.c | 39 ++++++++++++---------------------------
 include/video/atmel_lcdc.h       |  2 ++
 3 files changed, 32 insertions(+), 27 deletions(-)

diff --git a/drivers/video/atmel_lcdfb.c b/drivers/video/atmel_lcdfb.c
index 422be1a..3653e2a 100644
--- a/drivers/video/atmel_lcdfb.c
+++ b/drivers/video/atmel_lcdfb.c
@@ -194,6 +194,23 @@ static int atmel_lcdfb_setup_core(struct fb_info *info)
 	return 0;
 }
 
+static irqreturn_t atmel_lcdfb_interrupt(int irq, void *dev_id)
+{
+	struct fb_info *info = dev_id;
+	struct atmel_lcdfb_info *sinfo = info->par;
+	u32 status;
+
+	status = lcdc_readl(sinfo, ATMEL_LCDC_ISR);
+	if (status & ATMEL_LCDC_UFLWI) {
+		dev_warn(info->device, "FIFO underflow %#x\n", status);
+		/* reset DMA and FIFO to avoid screen shifting */
+		schedule_work(&sinfo->task);
+	}
+	lcdc_writel(sinfo, ATMEL_LCDC_ICR, status);
+	return IRQ_HANDLED;
+}
+
+#ifdef CONFIG_PM
 
 static int atmel_lcdfb_suspend(struct platform_device *pdev, pm_message_t mesg)
 {
@@ -246,6 +263,7 @@ static struct atmel_lcdfb_devdata dev_data = {
 	.setup_core = atmel_lcdfb_setup_core,
 	.start = atmel_lcdfb_start,
 	.stop = atmel_lcdfb_stop,
+	.isr = atmel_lcdfb_interrupt,
 };
 
 static int __init atmel_lcdfb_probe(struct platform_device *pdev)
diff --git a/drivers/video/atmel_lcdfb_core.c b/drivers/video/atmel_lcdfb_core.c
index 8413b76..eab4d88 100644
--- a/drivers/video/atmel_lcdfb_core.c
+++ b/drivers/video/atmel_lcdfb_core.c
@@ -602,22 +602,6 @@ static struct fb_ops atmel_lcdfb_ops = {
 	.fb_imageblit	= cfb_imageblit,
 };
 
-static irqreturn_t atmel_lcdfb_interrupt(int irq, void *dev_id)
-{
-	struct fb_info *info = dev_id;
-	struct atmel_lcdfb_info *sinfo = info->par;
-	u32 status;
-
-	status = lcdc_readl(sinfo, ATMEL_LCDC_ISR);
-	if (status & ATMEL_LCDC_UFLWI) {
-		dev_warn(info->device, "FIFO underflow %#x\n", status);
-		/* reset DMA and FIFO to avoid screen shifting */
-		schedule_work(&sinfo->task);
-	}
-	lcdc_writel(sinfo, ATMEL_LCDC_ICR, status);
-	return IRQ_HANDLED;
-}
-
 /*
  * LCD controller task (to reset the LCD)
  */
@@ -750,12 +734,8 @@ int __atmel_lcdfb_probe(struct platform_device *pdev,
 		goto stop_clk;
 	}
 
+	/* No error checking, some devices can do without IRQ */
 	sinfo->irq_base = platform_get_irq(pdev, 0);
-	if (sinfo->irq_base < 0) {
-		dev_err(dev, "unable to get irq\n");
-		ret = sinfo->irq_base;
-		goto stop_clk;
-	}
 
 	/* Initialize video memory */
 	map = platform_get_resource(pdev, IORESOURCE_MEM, 1);
@@ -806,10 +786,13 @@ int __atmel_lcdfb_probe(struct platform_device *pdev,
 	init_contrast(sinfo);
 
 	/* interrupt */
-	ret = request_irq(sinfo->irq_base, atmel_lcdfb_interrupt, 0, pdev->name, info);
-	if (ret) {
-		dev_err(dev, "request_irq failed: %d\n", ret);
-		goto unmap_mmio;
+	if (sinfo->irq_base >= 0) {
+		ret = request_irq(sinfo->irq_base, sinfo->dev_data->isr,
+				IRQF_SHARED, pdev->name, info);
+		if (ret) {
+			dev_err(dev, "request_irq failed: %d\n", ret);
+			goto unmap_mmio;
+		}
 	}
 
 	/* Some operations on the LCDC might sleep and
@@ -864,7 +847,8 @@ free_cmap:
 	fb_dealloc_cmap(&info->cmap);
 unregister_irqs:
 	cancel_work_sync(&sinfo->task);
-	free_irq(sinfo->irq_base, info);
+	if (sinfo->irq_base >= 0)
+		free_irq(sinfo->irq_base, info);
 unmap_mmio:
 	exit_backlight(sinfo);
 	iounmap(sinfo->mmio);
@@ -913,7 +897,8 @@ int __atmel_lcdfb_remove(struct platform_device *pdev)
 	if (sinfo->bus_clk)
 		clk_put(sinfo->bus_clk);
 	fb_dealloc_cmap(&info->cmap);
-	free_irq(sinfo->irq_base, info);
+	if (sinfo->irq_base >= 0)
+		free_irq(sinfo->irq_base, info);
 	iounmap(sinfo->mmio);
  	release_mem_region(info->fix.mmio_start, info->fix.mmio_len);
 	if (platform_get_resource(pdev, IORESOURCE_MEM, 1)) {
diff --git a/include/video/atmel_lcdc.h b/include/video/atmel_lcdc.h
index ea7ce31..14b5664 100644
--- a/include/video/atmel_lcdc.h
+++ b/include/video/atmel_lcdc.h
@@ -23,6 +23,7 @@
 #define __ATMEL_LCDC_H__
 
 #include <linux/workqueue.h>
+#include <linux/interrupt.h>
 
 /* Way LCD wires are connected to the chip:
  * Some Atmel chips use BGR color mode (instead of standard RGB)
@@ -46,6 +47,7 @@ struct atmel_lcdfb_devdata {
 	int (*setup_core)(struct fb_info *info);
 	void (*start)(struct atmel_lcdfb_info *sinfo);
 	void (*stop)(struct atmel_lcdfb_info *sinfo, u32 flags);
+	irqreturn_t (*isr)(int irq, void *dev_id);
 };
 
  /* LCD Controller info data structure, stored in device platform_data */
-- 
1.8.0.197.g5a90748

