From ddf17dd12f2a3a717ad9b947682b5d7d3b350245 Mon Sep 17 00:00:00 2001
From: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com>
Date: Fri, 19 Oct 2012 14:11:05 +0800
Subject: video: atmel lcd only request the pinctrl once

Introduce simple bus to represent the LCDC itself so we can attached the
pinctrl to it

signed-off-by: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com>

Conflicts:
	arch/arm/boot/dts/at91sam9x5.dtsi
---
 arch/arm/boot/dts/at91sam9g35ek.dts | 17 ++++++++-----
 arch/arm/boot/dts/at91sam9x5.dtsi   | 42 +++++++++++++++++-------------
 drivers/video/atmel_lcdfb_core.c    | 51 +++++++++++++++++++++++++++++++------
 3 files changed, 78 insertions(+), 32 deletions(-)

diff --git a/arch/arm/boot/dts/at91sam9g35ek.dts b/arch/arm/boot/dts/at91sam9g35ek.dts
index 2781a30..9f91dbc 100644
--- a/arch/arm/boot/dts/at91sam9g35ek.dts
+++ b/arch/arm/boot/dts/at91sam9g35ek.dts
@@ -20,16 +20,19 @@
 				status = "okay";
 			};
 
-			lcd@f8038000 {
+			lcd_bus@f8038000 {
 				status = "okay";
-			};
+				lcd@f8038000 {
+					status = "okay";
+				};
 
-			lcdovl1@f8038100 {
-				status = "okay";
-			};
+				lcdovl1@f8038100 {
+					status = "okay";
+				};
 
-			lcdheo1@f8038280 {
-				status = "okay";
+				lcdheo1@f8038280 {
+					status = "okay";
+				};
 			};
 		};
 	};
diff --git a/arch/arm/boot/dts/at91sam9x5.dtsi b/arch/arm/boot/dts/at91sam9x5.dtsi
index c1b0334..1fcbbe8 100644
--- a/arch/arm/boot/dts/at91sam9x5.dtsi
+++ b/arch/arm/boot/dts/at91sam9x5.dtsi
@@ -489,28 +489,36 @@
 				status = "disabled";
 			};
 
-			lcd@f8038000 {
-				compatible = "atmel,at91sam9x5-lcd";
-				reg = <0xf8038000 0xff
-				       0xf8038400 0x3ff>;
-				interrupts = <25 4 3>;
+			lcd_bus@f8038000 {
+				#address-cells = <1>;
+				#size-cells = <1>;
+				compatible = "atmel,at91sam9x5-lcd-bus", "simple-bus";
+				ranges = <0xf8038000 0xf8038000 0x4000>;
 				pinctrl-names = "default";
 				pinctrl-0 = <&pinctrl_lcd>;
 				status = "disabled";
-			};
 
-			lcdovl1@f8038100 {
-				compatible = "atmel,at91sam9x5-lcd";
-				reg = <0xf8038100 0xff
-				       0xf8038800 0x3ff>;
-				status = "disabled";
-			};
+				lcd@f8038000 {
+					compatible = "atmel,at91sam9x5-lcd";
+					reg = <0xf8038000 0xff
+					       0xf8038400 0x3ff>;
+					interrupts = <25 4 3>;
+					status = "disabled";
+				};
 
-			lcdheo1@f8038280 {
-				compatible = "atmel,at91sam9x5-heo";
-				reg = <0xf8038280 0xbf>;
-				interrupts = <25 4 3>;
-				status = "disabled";
+				lcdovl1@f8038100 {
+					compatible = "atmel,at91sam9x5-lcd";
+					reg = <0xf8038100 0xff
+					       0xf8038800 0x3ff>;
+					status = "disabled";
+				};
+
+				lcdheo1@f8038280 {
+					compatible = "atmel,at91sam9x5-heo";
+					reg = <0xf8038280 0xbf>;
+					interrupts = <25 4 3>;
+					status = "disabled";
+				};
 			};
 		};
 
diff --git a/drivers/video/atmel_lcdfb_core.c b/drivers/video/atmel_lcdfb_core.c
index b71a80c..4d272ee 100644
--- a/drivers/video/atmel_lcdfb_core.c
+++ b/drivers/video/atmel_lcdfb_core.c
@@ -19,6 +19,8 @@
 #include <linux/init.h>
 #include <linux/delay.h>
 #include <linux/gfp.h>
+#include <linux/of.h>
+#include <linux/of_device.h>
 
 #include <mach/board.h>
 #include <mach/cpu.h>
@@ -557,7 +559,6 @@ int __atmel_lcdfb_probe(struct platform_device *pdev,
 	struct resource *regs = NULL, *clut = NULL;
 	struct resource *map = NULL;
 	int ret;
-	struct pinctrl *pinctrl;
 
 	dev_dbg(dev, "%s BEGIN\n", __func__);
 
@@ -637,13 +638,6 @@ int __atmel_lcdfb_probe(struct platform_device *pdev,
 		goto stop_clk;
 	}
 
-	pinctrl = devm_pinctrl_get_select_default(dev);
-	if (IS_ERR(pinctrl)) {
-		dev_err(dev, "Failed to request pinctrl\n");
-		ret = PTR_ERR(pinctrl);
-		goto stop_clk;
-	}
-
 	/* No error checking, some devices can do without IRQ */
 	sinfo->irq_base = platform_get_irq(pdev, 0);
 
@@ -840,3 +834,44 @@ int __atmel_lcdfb_remove(struct platform_device *pdev)
 	return 0;
 }
 EXPORT_SYMBOL_GPL(__atmel_lcdfb_remove);
+
+static const struct of_device_id atmel_lcdfb_bus_dt_ids[] = {
+	{ .compatible = "atmel,at91sam9x5-lcd-bus" },
+	{ /* sentinel */ }
+};
+
+static int atmel_lcdfb_bus_probe(struct platform_device *pdev)
+{
+	struct pinctrl *pinctrl;
+	struct device *dev = &pdev->dev;
+
+	pinctrl = devm_pinctrl_get_select_default(dev);
+	if (IS_ERR(pinctrl)) {
+		dev_err(dev, "Failed to request pinctrl\n");
+		return PTR_ERR(pinctrl);
+	}
+
+	return 0;
+}
+
+static struct platform_driver atmel_lcdfb_bus = {
+	.probe		= atmel_lcdfb_bus_probe,
+	.driver		= {
+		.name	= "atmel_lcdfb_bus",
+		.owner	= THIS_MODULE,
+		.of_match_table	= of_match_ptr(atmel_lcdfb_bus_dt_ids),
+	},
+};
+
+static int __init atmel_lcdfb_bus_init(void)
+{
+	return platform_driver_register(&atmel_lcdfb_bus);
+}
+
+static void __exit atmel_lcdfb_bus_exit(void)
+{
+	platform_driver_unregister(&atmel_lcdfb_bus);
+}
+
+module_init(atmel_lcdfb_bus_init);
+module_exit(atmel_lcdfb_bus_exit);
-- 
1.8.0.197.g5a90748

