From a025a84b58085328fc8a963088c70cb00ada2bae Mon Sep 17 00:00:00 2001
From: Nicolas Royer <nicolas@eukrea.com>
Date: Mon, 17 Sep 2012 18:26:18 +0200
Subject: crypto: Atmel Test; add SHA224, SHA384 and SHA512 support
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Nicolas Royer <nicolas@eukrea.com>
Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
Acked-by: Eric Bénard <eric@eukrea.com>
Tested-by: Eric Bénard <eric@eukrea.com>
---
 drivers/crypto/atmel-test.c | 25 +++++++++++++++++++------
 1 file changed, 19 insertions(+), 6 deletions(-)

diff --git a/drivers/crypto/atmel-test.c b/drivers/crypto/atmel-test.c
index 4a23db5..d9eb80d 100644
--- a/drivers/crypto/atmel-test.c
+++ b/drivers/crypto/atmel-test.c
@@ -41,7 +41,11 @@ static char *iv16 =
 
 #define SHA1_MSG_LEN	20
 #define SHA256_MSG_LEN	32
-static char sha_out_buf[SHA256_MSG_LEN];
+#define SHA224_MSG_LEN	28
+#define SHA384_MSG_LEN	48
+#define SHA512_MSG_LEN	64
+
+static char sha_out_buf[SHA512_MSG_LEN];
 
 #define TVMEMSIZE	4
 static char *tvmem[TVMEMSIZE];
@@ -331,7 +335,7 @@ static int dlen = 64;
 module_param_named(dlen, dlen, int,
 		   S_IRUGO | S_IWUSR | S_IWGRP);
 
-char *ahash_algs[] = {"sha1", "sha256"};
+char *ahash_algs[] = {"sha1", "sha256", "sha224", "sha384", "sha512"};
 
 char *acipher_algs[] = {
 	"ecb(des)", "cbc(des)", "cfb(des)", "cfb32(des)",
@@ -347,6 +351,7 @@ static int __init init_main(void)
 	char *buf_in;
 	char *buf_out;
 	char *buf_res;
+	size_t outlen;
 
 	if ((dlen <= 0) || (dlen > TVMEMSIZE*PAGE_SIZE)) {
 		printk(KERN_ERR " 0 < dlen <= %i\n",
@@ -382,15 +387,23 @@ static int __init init_main(void)
 				ARRAY_SIZE(ahash_algs));
 			goto exit;
 		}
+		switch (mode) {
+			case 0:outlen = SHA1_MSG_LEN; break;
+			case 1:outlen = SHA256_MSG_LEN; break;
+			case 2:outlen = SHA224_MSG_LEN; break;
+			case 3:outlen = SHA384_MSG_LEN; break;
+			case 4:outlen = SHA512_MSG_LEN; break;
+		}
+
 		printk(KERN_INFO "\n%s digest_req\n", ahash_algs[mode]);
 		hmac_sha_digest(ahash_algs[mode], buf_in, dlen, sha_out_buf,
-			mode ? SHA256_MSG_LEN : SHA1_MSG_LEN);
-		hexdump(sha_out_buf, mode ? SHA256_MSG_LEN : SHA1_MSG_LEN);
+			outlen);
+		hexdump(sha_out_buf, outlen);
 
 		printk(KERN_INFO "\n%s update_req\n", ahash_algs[mode]);
 		hmac_sha_update(ahash_algs[mode], buf_in, dlen, sha_out_buf,
-			mode ? SHA256_MSG_LEN : SHA1_MSG_LEN);
-		hexdump(sha_out_buf, mode ? SHA256_MSG_LEN : SHA1_MSG_LEN);
+			outlen);
+		hexdump(sha_out_buf, outlen);
 	} else {
 		mode -= 10;
 
-- 
1.8.0.197.g5a90748

