From 988eb407ae8b96b43a5204919588e4fff49cb021 Mon Sep 17 00:00:00 2001
From: Wang Hui <Hui.Wang@windriver.com>
Date: Thu, 4 Feb 2010 19:11:21 +0800
Subject: [PATCH] drivers/mxc/VPU: change clk operations for mx27 usage

The original VPU driver of imx27 enable/disable VPU clock in open
and release functions, while new version VPU driver add a new IOCTL
command for enable and disable VPU clock. For compatible with
the imx27 VPU test case, i modify this driver, the modified
driver can support both new version test case(imx51 test case) and
the imx27 VPU test case.

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 drivers/mxc/vpu/mxc_vpu.c |   11 +++++++++--
 1 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/mxc/vpu/mxc_vpu.c b/drivers/mxc/vpu/mxc_vpu.c
index a450003..9926ae5 100644
--- a/drivers/mxc/vpu/mxc_vpu.c
+++ b/drivers/mxc/vpu/mxc_vpu.c
@@ -200,7 +200,8 @@ static irqreturn_t vpu_irq_handler(int irq, void *dev_id)
 	 * Clock is gated on when dec/enc started, gate it off when
 	 * interrupt is received.
 	 */
-	clk_disable(vpu_clk);
+	if (!cpu_is_mx27())
+		clk_disable(vpu_clk);
 
 	codec_done = 1;
 	wake_up_interruptible(&vpu_queue);
@@ -216,8 +217,12 @@ static irqreturn_t vpu_irq_handler(int irq, void *dev_id)
 static int vpu_open(struct inode *inode, struct file *filp)
 {
 	spin_lock(&vpu_lock);
-	if ((open_count++ == 0) && cpu_is_mx32())
+	if ((open_count == 0) && cpu_is_mx32())
 		vl2cc_enable();
+
+	if ((open_count++ == 0) && cpu_is_mx27())
+		clk_enable(vpu_clk);
+
 	filp->private_data = (void *)(&vpu_data);
 	spin_unlock(&vpu_lock);
 	return 0;
@@ -458,6 +463,8 @@ static int vpu_release(struct inode *inode, struct file *filp)
 	if (open_count > 0 && !(--open_count)) {
 		vpu_free_buffers();
 
+		if (cpu_is_mx27())
+			clk_disable(vpu_clk);
 		if (cpu_is_mx32())
 			vl2cc_disable();
 
-- 
1.6.0.4

