From 31645195bbc891bb0446012c0d7ef52ee555f37c Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:28:11 -0400
Subject: [PATCH 330/391] markers-fix-marker-present-locking-reversed

markers fix marker present locking reversed

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 include/linux/marker.h  |    1 -
 kernel/marker.c         |   27 +++++----------------------
 ltt/ltt-trace-control.c |   29 +++++++++++------------------
 3 files changed, 16 insertions(+), 41 deletions(-)

diff --git a/include/linux/marker.h b/include/linux/marker.h
index ef2f15f..0a6d53f 100644
--- a/include/linux/marker.h
+++ b/include/linux/marker.h
@@ -262,7 +262,6 @@ extern int marker_get_iter_range(struct marker **marker, struct marker *begin,
 	struct marker *end);
 extern int _is_marker_enabled(const char *channel, const char *name);
 extern int is_marker_enabled(const char *channel, const char *name);
-extern int _is_marker_present(const char *channel, const char *name);
 extern int is_marker_present(const char *channel, const char *name);
 extern void marker_update_probes(void);
 
diff --git a/kernel/marker.c b/kernel/marker.c
index 688058f..b72d1e0 100644
--- a/kernel/marker.c
+++ b/kernel/marker.c
@@ -655,14 +655,16 @@ static void disable_marker(struct marker *elem)
 }
 
 /*
- * _is_marker_present - Check if a marker is present in kernel must be called
- *                      with markers_mutex held.
+ * is_marker_present - Check if a marker is present in kernel.
  * @channel: channel name
  * @name: marker name
  *
+ * We cannot take the marker lock around calls to this function because it needs
+ * to take the module mutex within the iterator. Marker mutex nests inside
+ * module mutex.
  * Returns 1 if the marker is present, 0 if not.
  */
-int _is_marker_present(const char *channel, const char *name)
+int is_marker_present(const char *channel, const char *name)
 {
 	int ret;
 	struct marker_iter iter;
@@ -682,25 +684,6 @@ end:
 	marker_iter_stop(&iter);
 	return ret;
 }
-EXPORT_SYMBOL_GPL(_is_marker_present);
-
-/*
- * is_marker_present - the wrapper of _is_marker_present
- * @channel: channel name
- * @name: marker name
- *
- * Returns 1 if the marker is present, 0 if not.
- */
-int is_marker_present(const char *channel, const char *name)
-{
-	int ret;
-
-	lock_markers();
-	ret = _is_marker_present(channel, name);
-	unlock_markers();
-
-	return ret;
-}
 EXPORT_SYMBOL_GPL(is_marker_present);
 
 /*
diff --git a/ltt/ltt-trace-control.c b/ltt/ltt-trace-control.c
index 7594a06..71f6460 100644
--- a/ltt/ltt-trace-control.c
+++ b/ltt/ltt-trace-control.c
@@ -842,12 +842,13 @@ ssize_t marker_enable_read(struct file *filp, char __user *ubuf,
 	len = 0;
 	buf = (char *)__get_free_page(GFP_KERNEL);
 
-	lock_markers();
-
-	enabled = _is_marker_enabled(channel, marker);
-	present = _is_marker_present(channel, marker);
-
-	unlock_markers();
+	/*
+	 * Note: we cannot take the marker lock to make these two checks
+	 * atomic, because the marker mutex nests inside the module mutex, taken
+	 * inside the marker present check.
+	 */
+	enabled = is_marker_enabled(channel, marker);
+	present = is_marker_present(channel, marker);
 
 	if (enabled && present)
 		len = snprintf(buf, PAGE_SIZE, "%d\n", 1);
@@ -935,16 +936,12 @@ ssize_t marker_info_read(struct file *filp, char __user *ubuf,
 	len = 0;
 	buf = (char *)__get_free_page(GFP_KERNEL);
 
-	lock_markers();
-
-	if (_is_marker_enabled(channel, marker) &&
-	    !_is_marker_present(channel, marker)) {
+	if (is_marker_enabled(channel, marker) &&
+	    !is_marker_present(channel, marker)) {
 		len += snprintf(buf + len, PAGE_SIZE - len,
 				"Marker Pre-enabled\n");
-		unlock_markers();
 		goto out;
 	}
-	unlock_markers();
 
 	marker_iter_reset(&iter);
 	marker_iter_start(&iter);
@@ -1057,12 +1054,8 @@ static int marker_rmdir(struct inode *dir, struct dentry *dentry)
 
 	name = marker_d->d_name.name;
 
-	lock_markers();
-
-	enabled = _is_marker_enabled(channel, name);
-	present = _is_marker_present(channel, name);
-
-	unlock_markers();
+	enabled = is_marker_enabled(channel, name);
+	present = is_marker_present(channel, name);
 
 	if (present || (!present && enabled)) {
 		ret = -EPERM;
-- 
1.6.5.2

