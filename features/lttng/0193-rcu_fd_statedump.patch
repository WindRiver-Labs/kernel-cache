From a4b0c4240e783f49a7fbb5adfea3fbb4c961cacb Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date: Thu, 30 Oct 2008 23:27:28 -0400
Subject: [PATCH] rcu_fd_statedump

RCU lock for file descriptors in state dump

Use RCU read lock to iterate over tasks, instead of a full spin lock.

From: Jean-Hugues Deschenes <jean-hugues.deschenes@polymtl.ca>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 ltt/ltt-statedump.c |   15 ++++++++-------
 1 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/ltt/ltt-statedump.c b/ltt/ltt-statedump.c
index 6bd001b..02f5b35 100644
--- a/ltt/ltt-statedump.c
+++ b/ltt/ltt-statedump.c
@@ -118,16 +118,18 @@ ltt_enumerate_task_fd(struct ltt_probe_private_data *call_data,
 {
 	struct fdtable *fdt;
 	struct file *filp;
+	struct files_struct *files;
 	unsigned int i;
 	const unsigned char *path;
 
-	if (!t->files)
+	files = get_files_struct(t);
+	if (!files)
 		return;
 
-	spin_lock(&t->files->file_lock);
-	fdt = files_fdtable(t->files);
+	rcu_read_lock();
+	fdt = files_fdtable(files);
 	for (i = 0; i < fdt->max_fds; i++) {
-		filp = fcheck_files(t->files, i);
+		filp = fcheck_files(files, i);
 		if (!filp)
 			continue;
 		path = d_path(&filp->f_path, tmp, PAGE_SIZE);
@@ -137,7 +139,8 @@ ltt_enumerate_task_fd(struct ltt_probe_private_data *call_data,
 			(IS_ERR(path))?(filp->f_dentry->d_name.name):(path),
 			t->pid, i);
 	}
-	spin_unlock(&t->files->file_lock);
+	rcu_read_unlock();
+	put_files_struct(files);
 }
 
 static inline int
@@ -154,9 +157,7 @@ ltt_enumerate_file_descriptors(struct ltt_probe_private_data *call_data)
 		t = next_task(t);
 		atomic_inc(&t->usage);
 		read_unlock(&tasklist_lock);
-		task_lock(t);
 		ltt_enumerate_task_fd(call_data, t, tmp);
-		task_unlock(t);
 	} while (t != &init_task);
 	free_page((unsigned long)tmp);
 	return 0;
-- 
1.5.5.1

