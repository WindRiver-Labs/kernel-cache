From 2d43748b088839e29cfdfb9d001187495cd9d798 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Wed, 18 May 2011 18:42:28 -0400
Subject: [PATCH 155/248] markers-fix-marker-present-locking-reversed

markers fix marker present locking reversed

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 include/linux/marker.h |    1 -
 kernel/marker.c        |   27 +++++----------------------
 2 files changed, 5 insertions(+), 23 deletions(-)

diff --git a/include/linux/marker.h b/include/linux/marker.h
index ef2f15f..0a6d53f 100644
--- a/include/linux/marker.h
+++ b/include/linux/marker.h
@@ -262,7 +262,6 @@ extern int marker_get_iter_range(struct marker **marker, struct marker *begin,
 	struct marker *end);
 extern int _is_marker_enabled(const char *channel, const char *name);
 extern int is_marker_enabled(const char *channel, const char *name);
-extern int _is_marker_present(const char *channel, const char *name);
 extern int is_marker_present(const char *channel, const char *name);
 extern void marker_update_probes(void);
 
diff --git a/kernel/marker.c b/kernel/marker.c
index b8affbf..a8d9ee7 100644
--- a/kernel/marker.c
+++ b/kernel/marker.c
@@ -655,14 +655,16 @@ static void disable_marker(struct marker *elem)
 }
 
 /*
- * _is_marker_present - Check if a marker is present in kernel must be called
- *                      with markers_mutex held.
+ * is_marker_present - Check if a marker is present in kernel.
  * @channel: channel name
  * @name: marker name
  *
+ * We cannot take the marker lock around calls to this function because it needs
+ * to take the module mutex within the iterator. Marker mutex nests inside
+ * module mutex.
  * Returns 1 if the marker is present, 0 if not.
  */
-int _is_marker_present(const char *channel, const char *name)
+int is_marker_present(const char *channel, const char *name)
 {
 	int ret;
 	struct marker_iter iter;
@@ -682,25 +684,6 @@ end:
 	marker_iter_stop(&iter);
 	return ret;
 }
-EXPORT_SYMBOL_GPL(_is_marker_present);
-
-/*
- * is_marker_present - the wrapper of _is_marker_present
- * @channel: channel name
- * @name: marker name
- *
- * Returns 1 if the marker is present, 0 if not.
- */
-int is_marker_present(const char *channel, const char *name)
-{
-	int ret;
-
-	lock_markers();
-	ret = _is_marker_present(channel, name);
-	unlock_markers();
-
-	return ret;
-}
 EXPORT_SYMBOL_GPL(is_marker_present);
 
 /*
-- 
1.7.0.4

