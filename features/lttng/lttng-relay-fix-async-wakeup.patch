From 799cb7917333e0fc62c093917964545eebdeb59e Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:28:07 -0400
Subject: [PATCH 321/391] lttng-relay-fix-async-wakeup

lttng relay fix async wakeup vs hotplug

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 ltt/ltt-relay-alloc.c    |    1 -
 ltt/ltt-relay-lockless.c |   13 ++++++++++++-
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/ltt/ltt-relay-alloc.c b/ltt/ltt-relay-alloc.c
index 5078a3c..b6377f2 100644
--- a/ltt/ltt-relay-alloc.c
+++ b/ltt/ltt-relay-alloc.c
@@ -153,7 +153,6 @@ int ltt_chanbuf_alloc_create(struct ltt_chanbuf_alloc *buf,
 		goto end;
 
 	buf->chan = chan;
-	buf->allocated = 1;
 	buf->cpu = cpu;
 end:
 	return ret;
diff --git a/ltt/ltt-relay-lockless.c b/ltt/ltt-relay-lockless.c
index a180ebc..d1ff928 100644
--- a/ltt/ltt-relay-lockless.c
+++ b/ltt/ltt-relay-lockless.c
@@ -196,6 +196,13 @@ int ltt_chanbuf_create(struct ltt_chanbuf *buf, struct ltt_chan_alloc *chana,
 	if (ret)
 		goto free_init;
 
+	/*
+	 * Ensure the buffer is ready before setting it to allocated.
+	 * Used for cpu hotplug vs async wakeup.
+	 */
+	smp_wmb();
+	buf->a.allocated = 1;
+
 	return 0;
 
 	/* Error handling */
@@ -747,7 +754,11 @@ static void ltt_relay_async_wakeup_chan(struct ltt_chan *chan)
 		buf = per_cpu_ptr(chan->a.buf, i);
 		if (!buf->a.allocated)
 			continue;
-
+		/*
+		 * Ensure the buffer has been allocated before reading its
+		 * content. Sync cpu hotplug vs async wakeup.
+		 */
+		smp_rmb();
 		if (ltt_poll_deliver(buf, chan))
 			wake_up_interruptible(&buf->read_wait);
 	}
-- 
1.6.5.2

