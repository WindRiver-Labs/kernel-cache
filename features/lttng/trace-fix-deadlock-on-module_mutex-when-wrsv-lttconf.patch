From 38e36cf05f34fceeed16d5f870479988f737e1ab Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Tue, 29 Mar 2011 14:37:51 +0800
Subject: [PATCH] trace: fix deadlock on module_mutex when wrsv-lttconfig

This is a kind self deadlock of module_mutex due to
twice calls of module_imv_update in the same series,
which is introduced by the following commit id:

  fc2d3df9312750a674a3c7239380e725c3b4dbdc.
  tracepoint: fix wrong usages of functions of immediate value

The following calltraces illustrates twice triggers to get
module_mutex:
Call Trace:
 [<c101b5b5>] ? arch_imv_update+0x45/0x260
 [<c153b688>] __mutex_lock_slowpath+0x98/0x170
 [<c153b55c>] mutex_lock+0xc/0x10
 [<c1061cbd>] module_imv_update+0xd/0x20
	      ^^^ try to get the locker again.
 [<c108d090>] tracepoint_update_probe_range+0xe0/0x110
 [<c1061dbf>] module_update_tracepoints+0x4f/0x70
 [<c108d107>] tracepoint_update_probes+0x17/0x30
 [<c108d191>] tracepoint_probe_update_all+0x71/0xd0
 [<c108b82c>] marker_update_probes+0x1c/0x30
	      ^^^ first get locker here.
 [<c108c3ba>] marker_probe_register+0x9aa/0xa00
 [<c128cebc>] ltt_marker_connect+0xac/0xe0
 [<c128fd00>] ? ltt_vtrace+0x0/0x800
 [<c129253c>] marker_enable_write+0xbc/0xf0
 [<c10def2a>] vfs_write+0x9a/0x160
 [<c1292480>] ? marker_enable_write+0x0/0xf0
 [<c10df136>] sys_write+0x46/0xd0
 [<c153cb01>] system_call_done+0x0/0x4

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 kernel/tracepoint.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/tracepoint.c b/kernel/tracepoint.c
index 1bfedb6..06683e1 100644
--- a/kernel/tracepoint.c
+++ b/kernel/tracepoint.c
@@ -257,7 +257,7 @@ static void set_tracepoint(struct tracepoint_entry **entry,
 	 * is used.
 	 */
 	rcu_assign_pointer(elem->funcs, (*entry)->funcs);
-	imv_set(elem->state, active);
+	elem->state__imv = active;
 }
 
 /*
@@ -271,7 +271,7 @@ static void disable_tracepoint(struct tracepoint *elem)
 	if (elem->unregfunc && _imv_read(elem->state))
 		elem->unregfunc();
 
-	imv_set(elem->state, 0);
+	elem->state__imv = 0;
 	rcu_assign_pointer(elem->funcs, NULL);
 }
 
-- 
1.6.5.2

