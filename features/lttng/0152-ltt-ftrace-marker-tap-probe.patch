From f9995a626c314dbe97bbfbdfb3d8830a9bd6afd0 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date: Tue, 12 Aug 2008 13:06:08 -0400
Subject: [PATCH] [PATCH] ltt-ftrace-marker-tap-probe

From 8b651a328ef53f41e915be9c5b8fb62435c696b5 Mon Sep 17 00:00:00 2001
Subject: [PATCH] ltt-ftrace-marker-tap-probe
---
 ltt/ltt-ftrace.c |   20 ++++++++++++++++++++
 1 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/ltt/ltt-ftrace.c b/ltt/ltt-ftrace.c
index 313ac63..5301066 100644
--- a/ltt/ltt-ftrace.c
+++ b/ltt/ltt-ftrace.c
@@ -38,6 +38,22 @@ ltt_tracer_call(unsigned long ip, unsigned long parent_ip)
 	trace_mark(ftrace_entry, "ip 0x%lX parent_ip 0x%lX", ip, parent_ip);
 }
 
+static notrace void ltt_tap_marker(void *probe_data, void *call_data,
+	const char *fmt, va_list *args)
+{
+	int cpu = raw_smp_processor_id();
+	if (likely(!per_cpu(tracing_cpu, cpu)
+			&& !atomic_read(&system_trace_refcount)))
+		return;
+	ltt_vtrace(probe_data, call_data, fmt, args);
+}
+
+struct ltt_available_probe ltt_tap_marker_probe = {
+	.name = "ltt_tap_marker",
+	.format = NULL,
+	.probe_func = ltt_tap_marker,
+};
+
 static struct ftrace_ops trace_ops __read_mostly =
 {
 	.func = ltt_tracer_call,
@@ -113,6 +129,8 @@ static int __init ltt_ftrace_init(void)
 	BUG_ON(ret);
 	ret = ltt_probe_register(&ftrace_system_stop_probe);
 	BUG_ON(ret);
+	ret = ltt_probe_register(&ltt_tap_marker_probe);
+	BUG_ON(ret);
 
 	/*
 	 * Keep a refcount on ourselves, because ftrace forbids freeing
@@ -132,6 +150,8 @@ static void __exit ltt_ftrace_exit(void)
 	int ret;
 
 	printk(KERN_INFO "LTT : ltt-ftrace exit\n");
+	ret = ltt_probe_unregister(&ltt_tap_marker_probe);
+	BUG_ON(ret);
 	ret = ltt_probe_unregister(&ftrace_system_stop_probe);
 	BUG_ON(ret);
 	ret = ltt_probe_unregister(&ftrace_system_start_probe);
-- 
1.5.5.1

