From 59bd3ebca1307e0f528237a51ab94126e0a6b7cf Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date: Wed, 8 Oct 2008 23:53:03 -0400
Subject: [PATCH] [PATCH] lockdep-check-spinlock-irq-state

From e815c2fedec52b6489ea0d9963989b6960b6c470 Mon Sep 17 00:00:00 2001
Subject: [PATCH] lockdep-check-spinlock-irq-state
---
 include/linux/lockdep.h |    1 +
 kernel/lockdep.c        |   28 ++++++++++++++++++++++++++++
 2 files changed, 29 insertions(+), 0 deletions(-)

diff --git a/include/linux/lockdep.h b/include/linux/lockdep.h
index 331e5f1..ab261c4 100644
--- a/include/linux/lockdep.h
+++ b/include/linux/lockdep.h
@@ -163,6 +163,7 @@ struct lockdep_map {
 	struct lock_class_key		*key;
 	struct lock_class		*class_cache;
 	const char			*name;
+	unsigned long			hardirqs_off_ip;
 #ifdef CONFIG_LOCK_STAT
 	int				cpu;
 #endif
diff --git a/kernel/lockdep.c b/kernel/lockdep.c
index 4f8093e..0d9c928 100644
--- a/kernel/lockdep.c
+++ b/kernel/lockdep.c
@@ -2516,6 +2516,7 @@ void lockdep_init_map(struct lockdep_map *lock, const char *name,
 #ifdef CONFIG_LOCK_STAT
 	lock->cpu = raw_smp_processor_id();
 #endif
+	lock->hardirqs_off_ip = 0;
 	if (subclass)
 		register_lock_class(lock, subclass, 1);
 }
@@ -2566,6 +2567,33 @@ static int __lock_acquire(struct lockdep_map *lock, unsigned int subclass,
 		if (!class)
 			return 0;
 	}
+
+	/*
+	 * Lock has been taken with interrupts enabled.
+	 * Make sure every other uses so far had interrupts enabled.
+	 * Only consider SMP uses, so don't care about init code.
+	 */
+	if (num_online_cpus() > 1) {
+		if (!hardirqs_off) {
+			if (lock->hardirqs_off_ip) {
+				debug_locks_off();
+				printk("BUG : lock taken with interrupts enabled at\n");
+				print_ip_sym(ip);
+				printk("Previously taken with interrupts disabled ");
+				printk("at\n");
+				print_ip_sym(lock->hardirqs_off_ip);
+				printk("acquire class [%p] %s",
+					class->key, class->name);
+				if (class->name_version > 1)
+					printk("#%d", class->name_version);
+				printk("\n");
+				dump_stack();
+				return 0;
+			}
+		} else
+			lock->hardirqs_off_ip = ip;
+	}
+
 	debug_atomic_inc((atomic_t *)&class->ops);
 	if (very_verbose(class)) {
 		printk("\nacquire class [%p] %s", class->key, class->name);
-- 
1.5.5.1

