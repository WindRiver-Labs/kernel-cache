From 80097454377fb977d2d8bd71bdf737ec822f51bf Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:27:54 -0400
Subject: [PATCH 295/390] lttng-instrumentation-net-trace-incoming-udp-traffic

LTTng instrumentation net: trace incoming UDP traffic

Add a tracepoint to determine if a received packet contains a UDP datagram.

Signed-off-by: Benjamin Poirier <benjamin.poirier@polymtl.ca>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 include/trace/net.h    |    3 +++
 ltt/probes/net-trace.c |   14 ++++++++++++++
 net/ipv4/udp.c         |    5 +++++
 3 files changed, 22 insertions(+), 0 deletions(-)

diff --git a/include/trace/net.h b/include/trace/net.h
index 43b5779..5e774eb 100644
--- a/include/trace/net.h
+++ b/include/trace/net.h
@@ -13,6 +13,9 @@ DECLARE_TRACE(net_dev_receive,
 DECLARE_TRACE(net_tcpv4_rcv,
 	TP_PROTO(struct sk_buff *skb),
 	TP_ARGS(skb));
+DECLARE_TRACE(net_udpv4_rcv,
+	TP_PROTO(struct sk_buff *skb),
+	TP_ARGS(skb));
 
 /*
  * Note these first 2 traces are actually in __napi_schedule and net_rx_action
diff --git a/ltt/probes/net-trace.c b/ltt/probes/net-trace.c
index e3368eb..e049f2b 100644
--- a/ltt/probes/net-trace.c
+++ b/ltt/probes/net-trace.c
@@ -261,6 +261,20 @@ notrace void probe_tcpv4_rcv(struct sk_buff *skb)
 		&skb, sizeof(skb), sizeof(skb));
 }
 
+void probe_udpv4_rcv(struct sk_buff *skb);
+
+DEFINE_MARKER_TP(net, udpv4_rcv, net_udpv4_rcv, probe_udpv4_rcv,
+	"skb %p");
+
+notrace void probe_udpv4_rcv(struct sk_buff *skb)
+{
+	struct marker *marker;
+
+	marker = &GET_MARKER(net, udpv4_rcv);
+	ltt_specialized_trace(marker, marker->single.probe_private,
+		&skb, sizeof(skb), sizeof(skb));
+}
+
 #ifdef CONFIG_NETPOLL
 void probe_net_napi_schedule(struct napi_struct *n);
 
diff --git a/net/ipv4/udp.c b/net/ipv4/udp.c
index c36522a..1a56fd1 100644
--- a/net/ipv4/udp.c
+++ b/net/ipv4/udp.c
@@ -105,6 +105,7 @@
 #include <net/route.h>
 #include <net/checksum.h>
 #include <net/xfrm.h>
+#include <trace/net.h>
 #include "udp_impl.h"
 
 struct udp_table udp_table __read_mostly;
@@ -125,6 +126,8 @@ EXPORT_SYMBOL(udp_memory_allocated);
 #define MAX_UDP_PORTS 65536
 #define PORTS_PER_CHAIN (MAX_UDP_PORTS / UDP_HTABLE_SIZE_MIN)
 
+DEFINE_TRACE(net_udpv4_rcv);
+
 static int udp_lib_lport_inuse(struct net *net, __u16 num,
 			       const struct udp_hslot *hslot,
 			       unsigned long *bitmap,
@@ -1543,6 +1546,8 @@ int __udp4_lib_rcv(struct sk_buff *skb, struct udp_table *udptable,
 	if (udp4_csum_init(skb, uh, proto))
 		goto csum_error;
 
+	trace_net_udpv4_rcv(skb);
+
 	if (rt->rt_flags & (RTCF_BROADCAST|RTCF_MULTICAST))
 		return __udp4_lib_mcast_deliver(net, skb, uh,
 				saddr, daddr, udptable);
-- 
1.6.5.2

