From ba8777ab0d88ddb134c6d2b0a5339fa7f43a42d6 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:28:31 -0400
Subject: [PATCH 365/391] ltt-relay-splice-add-llseek-fop

ltt relay splice add llseek fop

splice.c modifications between 2.6.32 and 2.6.33 :

commit cc56f7de7f00d188c7c4da1e9861581853b9e92f
Author: Changli Gao <xiaosuo@gmail.com>
Date:   Wed Nov 4 09:09:52 2009 +0100

    sendfile(): check f_op.splice_write() rather than f_op.sendpage()

    sendfile(2) was reworked with the splice infrastructure, but it still
    checks f_op.sendpage() instead of f_op.splice_write() wrongly.  Although
    if f_op.sendpage() exists, f_op.splice_write() always exists at the same
    time currently, the assumption will be broken in future silently.  This
    patch also brings a side effect: sendfile(2) can work with any output
    file.  Some security checks related to f_op are added too.


Broke LTTng splice() because it now checks for "NULL" llseek fops. We don't
need, nor provide, any: the offset is used in the splice_read fop directly. So
let's copy the no_llseek kernel function into the splice file (because splice
also checks for !no_llseek) to tell the kernel that we provide a llseek fop
(well, an empty one, but we don't tell that to the kernel !).

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 include/linux/ltt-relay.h |    1 +
 ltt/ltt-relay-splice.c    |    5 +++++
 ltt/ltt-relay-vfs.c       |    1 +
 3 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/include/linux/ltt-relay.h b/include/linux/ltt-relay.h
index cdef02b..82ac8a7 100644
--- a/include/linux/ltt-relay.h
+++ b/include/linux/ltt-relay.h
@@ -300,5 +300,6 @@ int update_read_sb_index(struct ltt_chanbuf_alloc *bufa,
 ssize_t ltt_relay_file_splice_read(struct file *in, loff_t *ppos,
 				   struct pipe_inode_info *pipe, size_t len,
 				   unsigned int flags);
+loff_t ltt_relay_no_llseek(struct file *file, loff_t offset, int origin);
 
 #endif /* _LINUX_LTT_RELAY_H */
diff --git a/ltt/ltt-relay-splice.c b/ltt/ltt-relay-splice.c
index 115da7e..aa72820 100644
--- a/ltt/ltt-relay-splice.c
+++ b/ltt/ltt-relay-splice.c
@@ -23,6 +23,11 @@
 
 #include "ltt-relay-select.h"
 
+loff_t ltt_relay_no_llseek(struct file *file, loff_t offset, int origin)
+{
+	return -ESPIPE;
+}
+
 static void ltt_relay_pipe_buf_release(struct pipe_inode_info *pipe,
 				       struct pipe_buffer *pbuf)
 {
diff --git a/ltt/ltt-relay-vfs.c b/ltt/ltt-relay-vfs.c
index 3036ae1..10ea078 100644
--- a/ltt/ltt-relay-vfs.c
+++ b/ltt/ltt-relay-vfs.c
@@ -194,6 +194,7 @@ static const struct file_operations ltt_file_operations = {
 	.poll = ltt_poll,
 	.splice_read = ltt_relay_file_splice_read,
 	.ioctl = ltt_ioctl,
+	.llseek = ltt_relay_no_llseek,
 #ifdef CONFIG_COMPAT
 	.compat_ioctl = ltt_compat_ioctl,
 #endif
-- 
1.6.5.2

