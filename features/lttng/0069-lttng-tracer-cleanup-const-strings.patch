From 844365be16552a8df98b404b35cabf37726814ac Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date: Thu, 30 Oct 2008 23:26:56 -0400
Subject: [PATCH] lttng-tracer-cleanup-const-strings

Because trace name and trace type should not be modified in function.

Signed-off-by: Zhao Lei <zhaolei@cn.fujitsu.com>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 include/linux/ltt-tracer.h |    6 +++---
 ltt/ltt-tracer.c           |   18 +++++++++---------
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/include/linux/ltt-tracer.h b/include/linux/ltt-tracer.h
index c086fa8..ac4e0cf 100644
--- a/include/linux/ltt-tracer.h
+++ b/include/linux/ltt-tracer.h
@@ -681,8 +681,8 @@ union ltt_control_args {
 	} new_trace;
 };
 
-extern int ltt_control(enum ltt_control_msg msg, char *trace_name,
-		char *trace_type, union ltt_control_args args);
+extern int ltt_control(enum ltt_control_msg msg, const char *trace_name,
+		const char *trace_type, union ltt_control_args args);
 
 enum ltt_filter_control_msg {
 	LTT_FILTER_DEFAULT_ACCEPT,
@@ -690,7 +690,7 @@ enum ltt_filter_control_msg {
 };
 
 extern int ltt_filter_control(enum ltt_filter_control_msg msg,
-		char *trace_name);
+		const char *trace_name);
 
 void ltt_write_trace_header(struct ltt_trace_struct *trace,
 		struct ltt_subbuffer_header *header);
diff --git a/ltt/ltt-tracer.c b/ltt/ltt-tracer.c
index 9a4f859..98d4db1 100644
--- a/ltt/ltt-tracer.c
+++ b/ltt/ltt-tracer.c
@@ -241,7 +241,7 @@ static void async_wakeup(unsigned long data)
  * find a trace by given name.
  *
  * Returns a pointer to the trace structure, NULL if not found. */
-static struct ltt_trace_struct *_ltt_trace_find(char *trace_name)
+static struct ltt_trace_struct *_ltt_trace_find(const char *trace_name)
 {
 	struct ltt_trace_struct *trace;
 
@@ -253,7 +253,7 @@ static struct ltt_trace_struct *_ltt_trace_find(char *trace_name)
 }
 
 /* This function must be called with traces semaphore held. */
-static int _ltt_trace_create(char *trace_name,	enum trace_mode mode,
+static int _ltt_trace_create(const char *trace_name, enum trace_mode mode,
 				struct ltt_trace_struct *new_trace)
 {
 	int err = EPERM;
@@ -317,7 +317,7 @@ static inline void prepare_chan_size_num(unsigned *subbuf_size,
 	WARN_ON(hweight32(*n_subbufs) != 1);
 }
 
-static int ltt_trace_create(char *trace_name, char *trace_type,
+static int ltt_trace_create(const char *trace_name, const char *trace_type,
 		enum trace_mode mode,
 		unsigned subbuf_size_low, unsigned n_subbufs_low,
 		unsigned subbuf_size_med, unsigned n_subbufs_med,
@@ -561,7 +561,7 @@ static void __ltt_trace_destroy(struct ltt_trace_struct	*trace)
 	kref_put(&trace->kref, ltt_release_trace);
 }
 
-static int ltt_trace_destroy(char *trace_name)
+static int ltt_trace_destroy(const char *trace_name)
 {
 	int err = 0;
 	struct ltt_trace_struct *trace;
@@ -609,7 +609,7 @@ traces_error:
 	return err;
 }
 
-static int ltt_trace_start(char *trace_name)
+static int ltt_trace_start(const char *trace_name)
 {
 	int err = 0;
 	struct ltt_trace_struct *trace;
@@ -676,7 +676,7 @@ traces_error:
 	return err;
 }
 
-static int ltt_trace_stop(char *trace_name)
+static int ltt_trace_stop(const char *trace_name)
 {
 	int err = 0;
 	struct ltt_trace_struct *trace;
@@ -695,8 +695,8 @@ static int ltt_trace_stop(char *trace_name)
  * @trace_type : Type of trace (normal, flight, hybrid)
  * @args : Arguments specific to the action
  */
-int ltt_control(enum ltt_control_msg msg, char *trace_name, char *trace_type,
-		union ltt_control_args args)
+int ltt_control(enum ltt_control_msg msg, const char *trace_name,
+		const char *trace_type, union ltt_control_args args)
 {
 	int err = EPERM;
 
@@ -735,7 +735,7 @@ EXPORT_SYMBOL_GPL(ltt_control);
  * @msg : Action to perform on the filter
  * @trace_name : Trace on which the action must be done
  */
-int ltt_filter_control(enum ltt_filter_control_msg msg, char *trace_name)
+int ltt_filter_control(enum ltt_filter_control_msg msg, const char *trace_name)
 {
 	int err;
 	struct ltt_trace_struct *trace;
-- 
1.5.5.1

