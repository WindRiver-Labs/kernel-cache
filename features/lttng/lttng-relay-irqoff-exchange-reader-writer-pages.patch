From d2a9021bf06546addc2722c097289211fbd7c709 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:27:45 -0400
Subject: [PATCH 275/390] lttng-relay-irqoff-exchange-reader-writer-pages

LTTng relay irqoff exchange reader writer pages

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 ltt/ltt-relay-irqoff.c |   18 +++++++++++-------
 1 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/ltt/ltt-relay-irqoff.c b/ltt/ltt-relay-irqoff.c
index fcd755d..e9d091e 100644
--- a/ltt/ltt-relay-irqoff.c
+++ b/ltt/ltt-relay-irqoff.c
@@ -232,6 +232,7 @@ static int get_subbuf(struct rchan_buf *buf, unsigned long *consumed)
 		(struct ltt_channel_struct *)buf->chan->private_data;
 	struct ltt_channel_buf_struct *ltt_buf = buf->chan_private;
 	long consumed_old, consumed_idx, commit_count, write_offset;
+	int ret;
 
 	consumed_old = atomic_long_read(&ltt_buf->consumed);
 	consumed_idx = SUBBUF_INDEX(consumed_old, buf->chan);
@@ -308,9 +309,9 @@ static int get_subbuf(struct rchan_buf *buf, unsigned long *consumed)
 		return -EAGAIN;
 	}
 
-	/* No page exchange, use the writer page directly */
-	buf->rchan_rsb.pages = buf->rchan_wsb[consumed_idx].pages;
-	RCHAN_SB_CLEAR_NOREF(buf->rchan_rsb.pages);
+	ret = update_read_sb_index(buf, consumed_idx);
+	if (ret)
+		return ret;
 
 	*consumed = consumed_old;
 	return 0;
@@ -325,17 +326,20 @@ static int put_subbuf(struct rchan_buf *buf, unsigned long consumed)
 
 	consumed_old = consumed;
 	consumed_new = SUBBUF_ALIGN(consumed_old, buf->chan);
+	WARN_ON_ONCE(RCHAN_SB_IS_NOREF(buf->rchan_rsb.pages));
 	RCHAN_SB_SET_NOREF(buf->rchan_rsb.pages);
 
 	spin_lock(&ltt_buf->full_lock);
 	if (atomic_long_cmpxchg(&ltt_buf->consumed, consumed_old,
 				consumed_new)
 	    != consumed_old) {
-		/* We have been pushed by the writer : the last
-		 * buffer read _is_ corrupted! It can also
-		 * happen if this is a buffer we never got. */
+		/* We have been pushed by the writer. */
 		spin_unlock(&ltt_buf->full_lock);
-		return -EIO;
+		/*
+		 * We exchanged the subbuffer pages. No corruption possible
+		 * even if the writer did push us. No more -EIO possible.
+		 */
+		return 0;
 	} else {
 		/* tell the client that buffer is now unfull */
 		int index;
-- 
1.6.5.2

