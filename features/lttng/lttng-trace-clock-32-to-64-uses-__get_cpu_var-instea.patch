From 6c0d4bc50344eb677cb96672c2d0008ea8f22fa5 Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Wed, 25 Aug 2010 07:27:20 -0700
Subject: [PATCH 2/2] lttng/trace-clock-32-to-64: uses __get_cpu_var() instead of per_cpu for current cpu

To get the percpu variable of the current cpu, we'd better use
__get_cpu_var() instead per_cpu() for the former can choose the right
type of smp_processor_id()(or the raw one) for us and also make the
source code looks better.

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 kernel/trace/trace-clock-32-to-64.c |    9 ++++-----
 1 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/kernel/trace/trace-clock-32-to-64.c b/kernel/trace/trace-clock-32-to-64.c
index 843749a..b1fa63a 100644
--- a/kernel/trace/trace-clock-32-to-64.c
+++ b/kernel/trace/trace-clock-32-to-64.c
@@ -65,7 +65,7 @@ static void update_synthetic_tsc(void)
 	struct synthetic_tsc_struct *cpu_synth;
 	u32 tsc;
 
-	cpu_synth = &per_cpu(synthetic_tsc, smp_processor_id());
+	cpu_synth = &__get_cpu_var(synthetic_tsc);
 	tsc = trace_clock_read32();		/* Hardware clocksource read */
 
 	if (tsc < HW_LS32(cpu_synth->tsc[cpu_synth->index].sel.ls32)) {
@@ -104,7 +104,7 @@ void _trace_clock_write_synthetic_tsc(u64 value)
 	struct synthetic_tsc_struct *cpu_synth;
 	unsigned int new_index;
 
-	cpu_synth = &per_cpu(synthetic_tsc, smp_processor_id());
+	cpu_synth = &__get_cpu_var(synthetic_tsc);
 	new_index = 1 - cpu_synth->index; /* 0 <-> 1 */
 	cpu_synth->tsc[new_index].val = value;
 	barrier();
@@ -120,7 +120,7 @@ u64 notrace trace_clock_read_synthetic_tsc(void)
 	u32 tsc;
 
 	preempt_disable_notrace();
-	cpu_synth = &per_cpu(synthetic_tsc, smp_processor_id());
+	cpu_synth = &__get_cpu_var(synthetic_tsc);
 	index = ACCESS_ONCE(cpu_synth->index);	/* atomic read */
 	tsc = trace_clock_read32();		/* Hardware clocksource read */
 
@@ -150,8 +150,7 @@ static void tsc_timer_fct(unsigned long data)
 {
 	update_synthetic_tsc();
 
-	mod_timer_pinned(&per_cpu(tsc_timer, smp_processor_id()),
-		  jiffies + precalc_expire);
+	mod_timer_pinned(&__get_cpu_var(tsc_timer), jiffies + precalc_expire);
 }
 
 /*
-- 
1.6.5.2

