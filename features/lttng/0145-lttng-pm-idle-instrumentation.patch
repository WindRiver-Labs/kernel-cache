From 28fb4e426dfecb735496827b513bb48881e10f20 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Thu, 10 May 2012 13:20:47 -0700
Subject: [PATCH 145/248] lttng-pm-idle-instrumentation

LTTng pm_idle instrumentation, arch-specific

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 arch/x86/kernel/process.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/arch/x86/kernel/process.c b/arch/x86/kernel/process.c
index e8e89c2..d7dafab 100644
--- a/arch/x86/kernel/process.c
+++ b/arch/x86/kernel/process.c
@@ -18,6 +18,7 @@
 #include <trace/events/power.h>
 #include <trace/sched.h>
 #include <linux/hw_breakpoint.h>
+#include <trace/pm.h>
 #include <asm/cpu.h>
 #include <asm/apic.h>
 #include <asm/syscalls.h>
@@ -28,6 +29,9 @@
 #include <asm/debugreg.h>
 #include <asm/nmi.h>
 
+DEFINE_TRACE(pm_idle_exit);
+DEFINE_TRACE(pm_idle_entry);
+
 #ifdef CONFIG_X86_64
 static DEFINE_PER_CPU(unsigned char, is_idle);
 static ATOMIC_NOTIFIER_HEAD(idle_notifier);
@@ -385,6 +389,11 @@ static inline void play_dead(void)
 void enter_idle(void)
 {
 	percpu_write(is_idle, 1);
+	/*
+	 * Trace last event before calling notifiers. Notifiers flush
+	 * data from buffers before going to idle.
+	 */
+	trace_pm_idle_entry();
 	atomic_notifier_call_chain(&idle_notifier, IDLE_START, NULL);
 }
 
@@ -393,6 +402,7 @@ static void __exit_idle(void)
 	if (x86_test_and_clear_bit_percpu(0, is_idle) == 0)
 		return;
 	atomic_notifier_call_chain(&idle_notifier, IDLE_END, NULL);
+	trace_pm_idle_exit();
 }
 
 /* Called from interrupts to signify idle end */
-- 
1.7.0.4

