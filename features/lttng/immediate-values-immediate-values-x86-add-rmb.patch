From 9686d57d0d5bc29ebd97d54cfe6573e6a1e06d31 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:25:49 -0400
Subject: [PATCH 071/390] immediate-values/immediate-values-x86-add-rmb

immediate values x86 add smp_rmb

Immediate values code should make other CPUs execute a smp_rmb() to match the
smp_wmb() used by the code modifier.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 arch/x86/kernel/immediate.c |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/arch/x86/kernel/immediate.c b/arch/x86/kernel/immediate.c
index c441075..6c86084 100644
--- a/arch/x86/kernel/immediate.c
+++ b/arch/x86/kernel/immediate.c
@@ -138,6 +138,7 @@ static inline void _imv_bypass(unsigned long *bypassaddr,
 
 static void imv_synchronize_core(void *info)
 {
+	smp_rmb();	/* read new instructions before continuing */
 	sync_core();	/* use cpuid to stop speculative execution */
 }
 
@@ -275,9 +276,9 @@ __kprobes int arch_imv_update(const struct __imv *imv, int early)
 		 * Make sure the breakpoint is set before we continue (visible
 		 * to other CPUs and interrupts).
 		 */
-		wmb();
+		smp_wmb();
 		/*
-		 * Execute serializing instruction on each CPU.
+		 * Execute smp_rmb() and serializing instruction on each CPU.
 		 */
 		ret = on_each_cpu(imv_synchronize_core, NULL, 1);
 		BUG_ON(ret != 0);
@@ -288,7 +289,12 @@ __kprobes int arch_imv_update(const struct __imv *imv, int early)
 		 * Make sure the value can be seen from other CPUs and
 		 * interrupts.
 		 */
-		wmb();
+		smp_wmb();
+		/*
+		 * Execute smp_rmb() on each CPU.
+		 */
+		ret = on_each_cpu(imv_synchronize_core, NULL, 1);
+		BUG_ON(ret != 0);
 		text_poke((void *)insn, (unsigned char *)bypass_eip, 1);
 		/*
 		 * Wait for all int3 handlers to end (interrupts are disabled in
-- 
1.6.5.2

