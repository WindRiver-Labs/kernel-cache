From c73cf1016d12cad0523ac7b67d560bf2367def5d Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Wed, 18 May 2011 18:42:46 -0400
Subject: [PATCH 202/248] arm-trace-clock-reserve-pmu

Be nice to perf by reserving the PMU before using the trace clock.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 arch/arm/mach-omap2/trace-clock.c |   20 +++++++++++++++++---
 1 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-omap2/trace-clock.c b/arch/arm/mach-omap2/trace-clock.c
index 4261c95..cd10065 100644
--- a/arch/arm/mach-omap2/trace-clock.c
+++ b/arch/arm/mach-omap2/trace-clock.c
@@ -40,6 +40,8 @@ static int trace_clock_refcount;
 
 static int print_info_done;
 
+static struct platform_device *reserved_pmu;
+
 static u32 get_mul_fact(u64 max_freq, u64 cur_freq)
 {
 	u64 rem;
@@ -536,13 +538,21 @@ static int __cpuinit hotcpu_callback(struct notifier_block *nb,
 
 int get_trace_clock(void)
 {
+	int ret = 0;
+
 	spin_lock(&trace_clock_lock);
-	if (trace_clock_refcount++)
+	if (trace_clock_refcount)
+		goto end;
+	reserved_pmu = reserve_pmu(ARM_PMU_DEVICE_CPU);
+	if (!reserved_pmu) {
+		ret = -EBUSY;
 		goto end;
+	}
+	trace_clock_refcount++;
 	_start_trace_clock();
 end:
 	spin_unlock(&trace_clock_lock);
-	return 0;
+	return ret;
 }
 EXPORT_SYMBOL_GPL(get_trace_clock);
 
@@ -553,6 +563,7 @@ void put_trace_clock(void)
 	if (trace_clock_refcount != 1)
 		goto end;
 	_stop_trace_clock();
+	release_pmu(reserved_pmu);
 end:
 	trace_clock_refcount--;
 	spin_unlock(&trace_clock_lock);
@@ -683,9 +694,12 @@ EXPORT_SYMBOL_GPL(trace_clock_debug);
 
 static __init int init_trace_clock(void)
 {
-	int cpu;
+	int cpu, ret;
 	u64 rem;
 
+	ret = init_pmu(ARM_PMU_DEVICE_CPU);
+	if (ret)
+		return ret;
 	clock = get_clocksource_32k();
 	/*
 	 * clear_ccnt_interval based on the cpu fastest frequency. Never
-- 
1.7.0.4

