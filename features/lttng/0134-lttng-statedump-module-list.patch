From 330a02753b77f1688277fb7236a01fa367986686 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date: Tue, 12 Aug 2008 10:33:03 -0400
Subject: [PATCH] lttng-statedump-module-list

LTTng instrumentation statedump module.c list

List modules for ltt-statedump

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 include/linux/module.h |    5 +++++
 kernel/module.c        |   21 +++++++++++++++++++++
 2 files changed, 26 insertions(+), 0 deletions(-)

diff --git a/include/linux/module.h b/include/linux/module.h
index c72952e..33bf89e 100644
--- a/include/linux/module.h
+++ b/include/linux/module.h
@@ -471,6 +471,7 @@ int register_module_notifier(struct notifier_block * nb);
 int unregister_module_notifier(struct notifier_block * nb);
 
 extern void print_modules(void);
+extern void list_modules(void *call_data);
 
 extern void module_update_markers(void);
 
@@ -577,6 +578,10 @@ static inline void print_modules(void)
 {
 }
 
+static inline void list_modules(void *call_data)
+{
+}
+
 static inline void module_update_markers(void)
 {
 }
diff --git a/kernel/module.c b/kernel/module.c
index ba05f9c..998d063 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -2698,6 +2698,27 @@ const struct seq_operations modules_op = {
 	.show	= m_show
 };
 
+void list_modules(void *call_data)
+{
+	/* Enumerate loaded modules */
+	struct list_head	*i;
+	struct module		*mod;
+	unsigned long refcount = 0;
+
+	mutex_lock(&module_mutex);
+	list_for_each(i, &modules) {
+		mod = list_entry(i, struct module, list);
+#ifdef CONFIG_MODULE_UNLOAD
+		refcount = local_read(&mod->ref[0].count);
+#endif
+		__trace_mark(0, list_module, call_data,
+				"name %s state %d refcount %lu",
+				mod->name, mod->state, refcount);
+	}
+	mutex_unlock(&module_mutex);
+}
+EXPORT_SYMBOL_GPL(list_modules);
+
 /* Given an address, look for it in the module exception tables. */
 const struct exception_table_entry *search_module_extables(unsigned long addr)
 {
-- 
1.5.5.1

