From b9c535bbd337bdd44463a5b9d6b1a3428ece6455 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date: Thu, 30 Oct 2008 23:26:53 -0400
Subject: [PATCH] markers-break-the-redundant-loop-in-marker-c

Ingo Molnar wrote:
> hm, could you describe the necessity of this patch some more? This has
> the change to change behavior, which might even be a bugfix: is there
> any chance that the closure-loop in the e->ptype != NULL branch does not
> exit? Before your patch we'd continue the iteration - which _probably_
> does not lead to any more matches (e->name is supposed to be unique).

Because e->name is unique in list, we don't need to continue the iteration
after matched.
This is a cleanup.

Signed-off-by: Zhao Lei <zhaolei@cn.fujitsu.com>
---
 kernel/marker.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/kernel/marker.c b/kernel/marker.c
index 6308557..60f52c8 100644
--- a/kernel/marker.c
+++ b/kernel/marker.c
@@ -831,8 +831,6 @@ void *marker_get_private_data(const char *name, marker_probe_func *probe,
 			if (!e->ptype) {
 				if (num == 0 && e->single.func == probe)
 					return e->single.probe_private;
-				else
-					break;
 			} else {
 				struct marker_probe_closure *closure;
 				int match = 0;
@@ -844,6 +842,7 @@ void *marker_get_private_data(const char *name, marker_probe_func *probe,
 						return closure[i].probe_private;
 				}
 			}
+			break;
 		}
 	}
 	return ERR_PTR(-ENOENT);
-- 
1.5.5.1

