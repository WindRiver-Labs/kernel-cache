From 968be0807a9a2764bf150262e5a3c54a573248cf Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:26:48 -0400
Subject: [PATCH 172/391] lttng-instrumentation-fix-tracepoints-for-network-socket

Hi,

Currently, the tracepoints for network socket could not trace all the
network activity due to its location, sock_{send/recv}msg, because there
is the path without through sock_{send/recv}msg (like below).

Kernel path for sendmsg:
   sys_write      sys_{send/sendto/sendmsg}
      |                     |
   sock_aio_write   sock_sendmsg
        \                  /
         \                /
           __sock_sendmsg

So I think __sock_{send/recv}msg is better tracepoints to track
network socket activity.

And I'd like to request to get the return value on those tracepoints
to track the real size of sending/recieving by user and the error status
of __sock_{send/recv}msg.

The below patch is for lttng tree to change those tracepoints.

Mathieu:
Removed the return value from those tracepoints. They can be recorded with the
syscall_exit event.

From: Atsushi Tsuji <a-tsuji@bk.jp.nec.com>
Signed-off-by: Atsushi Tsuji <a-tsuji@bk.jp.nec.com>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 net/socket.c |   11 +++++++----
 1 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/net/socket.c b/net/socket.c
index 741373d..92f77c5 100644
--- a/net/socket.c
+++ b/net/socket.c
@@ -567,7 +567,9 @@ static inline int __sock_sendmsg(struct kiocb *iocb, struct socket *sock,
 	if (err)
 		return err;
 
-	return sock->ops->sendmsg(iocb, sock, msg, size);
+	err = sock->ops->sendmsg(iocb, sock, msg, size);
+	trace_socket_sendmsg(sock, msg, size, err);
+	return err;
 }
 
 int sock_sendmsg(struct socket *sock, struct msghdr *msg, size_t size)
@@ -581,7 +583,6 @@ int sock_sendmsg(struct socket *sock, struct msghdr *msg, size_t size)
 	ret = __sock_sendmsg(&iocb, sock, msg, size);
 	if (-EIOCBQUEUED == ret)
 		ret = wait_on_sync_kiocb(&iocb);
-	trace_socket_sendmsg(sock, msg, size, ret);
 	return ret;
 }
 
@@ -685,6 +686,7 @@ static inline int __sock_recvmsg_nosec(struct kiocb *iocb, struct socket *sock,
 				       struct msghdr *msg, size_t size, int flags)
 {
 	struct sock_iocb *si = kiocb_to_siocb(iocb);
+	int err;
 
 	si->sock = sock;
 	si->scm = NULL;
@@ -692,7 +694,9 @@ static inline int __sock_recvmsg_nosec(struct kiocb *iocb, struct socket *sock,
 	si->size = size;
 	si->flags = flags;
 
-	return sock->ops->recvmsg(iocb, sock, msg, size, flags);
+	err = sock->ops->recvmsg(iocb, sock, msg, size, flags);
+	trace_socket_recvmsg(sock, msg, size, flags, err);
+	return err;
 }
 
 static inline int __sock_recvmsg(struct kiocb *iocb, struct socket *sock,
@@ -716,7 +720,6 @@ int sock_recvmsg(struct socket *sock, struct msghdr *msg,
 	ret = __sock_recvmsg(&iocb, sock, msg, size, flags);
 	if (-EIOCBQUEUED == ret)
 		ret = wait_on_sync_kiocb(&iocb);
-	trace_socket_recvmsg(sock, msg, size, flags, ret);
 	return ret;
 }
 
-- 
1.6.5.2

