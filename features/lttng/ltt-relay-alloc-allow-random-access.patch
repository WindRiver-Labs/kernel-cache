From 6f83b049d6770f1877c9c74e0610c35c01dbbc17 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:26:58 -0400
Subject: [PATCH 193/391] ltt-relay-alloc-allow-random-access

ltt relay alloc allow random access

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 include/linux/ltt-relay.h |    1 +
 ltt/ltt-relay-alloc.c     |    4 ++--
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/include/linux/ltt-relay.h b/include/linux/ltt-relay.h
index 4bea043..52e8968 100644
--- a/include/linux/ltt-relay.h
+++ b/include/linux/ltt-relay.h
@@ -53,6 +53,7 @@ struct rchan_buf {
 	struct buf_page *rpage;		/* current subbuf read page (cache) */
 	unsigned int page_count;	/* number of current buffer pages */
 	unsigned int cpu;		/* this buf's cpu */
+	unsigned int random_access;	/* buffer performs random page access */
 } ____cacheline_aligned;
 
 /*
diff --git a/ltt/ltt-relay-alloc.c b/ltt/ltt-relay-alloc.c
index d404ca4..f947e07 100644
--- a/ltt/ltt-relay-alloc.c
+++ b/ltt/ltt-relay-alloc.c
@@ -447,7 +447,7 @@ struct buf_page *ltt_relay_find_prev_page(struct rchan_buf *buf,
 		if (offset >= iter->offset
 			&& offset < iter->offset + PAGE_SIZE) {
 #ifdef CONFIG_LTT_RELAY_CHECK_RANDOM_ACCESS
-			if (i > 1) {
+			if (!buf->random_access && i > 1) {
 				printk(KERN_WARNING
 					"Backward random access detected in "
 					"ltt_relay. Iterations %u, "
@@ -487,7 +487,7 @@ struct buf_page *ltt_relay_find_next_page(struct rchan_buf *buf,
 		if (offset >= iter->offset
 			&& offset < iter->offset + PAGE_SIZE) {
 #ifdef CONFIG_LTT_RELAY_CHECK_RANDOM_ACCESS
-			if (i > 1) {
+			if (!buf->random_access && i > 1) {
 				printk(KERN_WARNING
 					"Forward random access detected in "
 					"ltt_relay. Iterations %u, "
-- 
1.6.5.2

