From 42482969da9603aed3edebfb5c62a40cba8a9dcf Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:27:00 -0400
Subject: [PATCH 195/391] ltt-per-cpu-switch-debugfs-control

---
 include/linux/ltt-tracer.h |    2 +
 ltt/ltt-trace-control.c    |   60 +++++++++++++++++++++++++++++++++++++++++++-
 ltt/ltt-tracer.c           |   30 ++++++++++++++++++++++
 3 files changed, 91 insertions(+), 1 deletions(-)

diff --git a/include/linux/ltt-tracer.h b/include/linux/ltt-tracer.h
index 7769cce..c1f0757 100644
--- a/include/linux/ltt-tracer.h
+++ b/include/linux/ltt-tracer.h
@@ -703,6 +703,8 @@ int ltt_trace_set_channel_subbufsize(const char *trace_name,
 		const char *channel_name, unsigned int size);
 int ltt_trace_set_channel_subbufcount(const char *trace_name,
 		const char *channel_name, unsigned int cnt);
+int ltt_trace_set_channel_switch_timer(const char *trace_name,
+		const char *channel_name, unsigned long interval);
 int ltt_trace_set_channel_enable(const char *trace_name,
 		const char *channel_name, unsigned int enable);
 int ltt_trace_set_channel_overwrite(const char *trace_name,
diff --git a/ltt/ltt-trace-control.c b/ltt/ltt-trace-control.c
index 6e0ae2d..f3249da 100644
--- a/ltt/ltt-trace-control.c
+++ b/ltt/ltt-trace-control.c
@@ -21,6 +21,7 @@
 #include <linux/debugfs.h>
 #include <linux/ltt-tracer.h>
 #include <linux/notifier.h>
+#include <linux/jiffies.h>
 
 #define LTT_CONTROL_DIR "control"
 #define MARKERS_CONTROL_DIR "markers"
@@ -304,6 +305,51 @@ static const struct file_operations ltt_channel_subbuf_size_operations = {
 	.write = channel_subbuf_size_write,
 };
 
+static ssize_t channel_switch_timer_write(struct file *file,
+	const char __user *user_buf, size_t count, loff_t *ppos)
+{
+	int err = 0;
+	char buf[NAME_MAX];
+	int buf_size;
+	unsigned long num;
+	const char *channel_name;
+	const char *trace_name;
+
+	buf_size = min(count, sizeof(buf) - 1);
+	err = copy_from_user(buf, user_buf, buf_size);
+	if (err)
+		goto err_copy_from_user;
+	buf[buf_size] = 0;
+
+	if (sscanf(buf, "%lu", &num) != 1) {
+		err = -EPERM;
+		goto err_get_number;
+	}
+
+	channel_name = file->f_dentry->d_parent->d_name.name;
+	trace_name = file->f_dentry->d_parent->d_parent->d_parent->d_name.name;
+
+	/* Convert from ms to jiffies */
+	num = msecs_to_jiffies(num);
+
+	err = ltt_trace_set_channel_switch_timer(trace_name, channel_name, num);
+	if (IS_ERR_VALUE(err)) {
+		printk(KERN_ERR "channel_switch_timer_write: "
+		"ltt_trace_set_channel_switch_timer failed: %d\n", err);
+		goto err_set_switch_timer;
+	}
+
+	return count;
+
+err_set_switch_timer:
+err_get_number:
+err_copy_from_user:
+	return err;
+}
+
+static struct file_operations ltt_channel_switch_timer_operations = {
+	.write = channel_switch_timer_write,
+};
 
 static ssize_t channel_overwrite_write(struct file *file,
 	const char __user *user_buf, size_t count, loff_t *ppos)
@@ -513,7 +559,8 @@ static int _create_trace_control_dir(const char *trace_name,
 	 *             |   |-- enable
 	 *             |   |-- overwrite
 	 *             |   |-- subbuf_num
-	 *             |   `-- subbuf_size
+	 *             |   |-- subbuf_size
+	 *             |   `-- switch_timer
 	 *             `-- ...
 	 */
 
@@ -573,6 +620,17 @@ static int _create_trace_control_dir(const char *trace_name,
 			err = -ENOMEM;
 			goto err_create_subdir;
 		}
+
+		tmp_den = debugfs_create_file("switch_timer", S_IWUSR,
+			channel_den, NULL,
+			&ltt_channel_switch_timer_operations);
+		if (IS_ERR(tmp_den) || !tmp_den) {
+			printk(KERN_ERR "_create_trace_control_dir: "
+				"create switch_timer in %s failed\n",
+				channel->channel_name);
+			err = -ENOMEM;
+			goto err_create_subdir;
+		}
 	}
 
 	return 0;
diff --git a/ltt/ltt-tracer.c b/ltt/ltt-tracer.c
index 5b260fc..4e36785 100644
--- a/ltt/ltt-tracer.c
+++ b/ltt/ltt-tracer.c
@@ -659,6 +659,36 @@ traces_error:
 }
 EXPORT_SYMBOL_GPL(ltt_trace_set_channel_subbufcount);
 
+int ltt_trace_set_channel_switch_timer(const char *trace_name,
+		const char *channel_name, unsigned long interval)
+{
+	int err = 0;
+	struct ltt_trace_struct *trace;
+	int index;
+
+	ltt_lock_traces();
+
+	trace = _ltt_trace_find_setup(trace_name);
+	if (!trace) {
+		printk(KERN_ERR "LTT : Trace not found %s\n", trace_name);
+		err = -ENOENT;
+		goto traces_error;
+	}
+
+	index = ltt_channels_get_index_from_name(channel_name);
+	if (index < 0) {
+		printk(KERN_ERR "LTT : Channel %s not found\n", channel_name);
+		err = -ENOENT;
+		goto traces_error;
+	}
+	ltt_channels_trace_set_timer(&trace->channels[index], interval);
+
+traces_error:
+	ltt_unlock_traces();
+	return err;
+}
+EXPORT_SYMBOL_GPL(ltt_trace_set_channel_switch_timer);
+
 int ltt_trace_set_channel_enable(const char *trace_name,
 		const char *channel_name, unsigned int enable)
 {
-- 
1.6.5.2

