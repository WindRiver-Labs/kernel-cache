From d897b415466ef0ec7729ff9a70e995f2f99922c3 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date: Thu, 2 Oct 2008 14:36:27 -0400
Subject: [PATCH] lttng-instrumentation-lockdep-probes

LTTng instrumentation lockdep probes

lockdep.c probes.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 ltt/probes/Makefile        |    2 +-
 ltt/probes/lockdep-trace.c |   57 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 58 insertions(+), 1 deletions(-)
 create mode 100644 ltt/probes/lockdep-trace.c

diff --git a/ltt/probes/Makefile b/ltt/probes/Makefile
index d34bb70..b721211 100644
--- a/ltt/probes/Makefile
+++ b/ltt/probes/Makefile
@@ -1,7 +1,7 @@
 # LTTng tracing probes
 
 obj-$(CONFIG_LTT_TRACEPROBES)	+= kernel-trace.o mm-trace.o fs-trace.o \
-				ipc-trace.o
+				ipc-trace.o lockdep-trace.o
 ifeq ($(CONFIG_NET),y)
 obj-$(CONFIG_TRACEPROBES)	+= net-trace.o
 endif
diff --git a/ltt/probes/lockdep-trace.c b/ltt/probes/lockdep-trace.c
new file mode 100644
index 0000000..76b9f93
--- /dev/null
+++ b/ltt/probes/lockdep-trace.c
@@ -0,0 +1,57 @@
+/*
+ * ltt/probes/lockdep-trace.c
+ *
+ * lockdep tracepoint probes.
+ */
+
+#include <linux/module.h>
+#include <linux/lockdep.h>
+#include <trace/lockdep.h>
+
+void probe_lockdep_hardirqs_on(unsigned long retaddr)
+{
+	trace_mark_tp(lockdep_hardirqs_on, lockdep_hardirqs_on,
+		probe_lockdep_hardirqs_on, "retaddr 0x%lX", retaddr);
+}
+
+void probe_lockdep_hardirqs_off(unsigned long retaddr)
+{
+	trace_mark_tp(lockdep_hardirqs_off, lockdep_hardirqs_off,
+		probe_lockdep_hardirqs_off, "retaddr 0x%lX", retaddr);
+}
+
+void probe_lockdep_softirqs_on(unsigned long retaddr)
+{
+	trace_mark_tp(lockdep_softirqs_on, lockdep_softirqs_on,
+		probe_lockdep_softirqs_on, "retaddr 0x%lX", retaddr);
+}
+
+void probe_lockdep_softirqs_off(unsigned long retaddr)
+{
+	trace_mark_tp(lockdep_softirqs_off, lockdep_softirqs_off,
+		probe_lockdep_softirqs_off, "retaddr 0x%lX", retaddr);
+}
+
+void probe_lockdep_lock_acquire(unsigned long retaddr,
+		unsigned int subclass, struct lockdep_map *lock, int trylock,
+		int read, int hardirqs_off)
+{
+	trace_mark_tp(lockdep_lock_acquire, lockdep_lock_acquire,
+		probe_lockdep_lock_acquire,
+		"retaddr 0x%lX subclass %u lock %p trylock %d read %d "
+		"hardirqs_off %d",
+		retaddr, subclass, lock, trylock, read, hardirqs_off);
+}
+
+void probe_lockdep_lock_release(unsigned long retaddr,
+		struct lockdep_map *lock, int nested)
+{
+	trace_mark_tp(lockdep_lock_release, lockdep_lock_release,
+		probe_lockdep_lock_release,
+		"retaddr 0x%lX lock %p nested %d",
+		retaddr, lock, nested);
+}
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Mathieu Desnoyers");
+MODULE_DESCRIPTION("lockdep Tracepoint Probes");
-- 
1.5.5.1

