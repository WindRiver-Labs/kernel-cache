From 7904623988df4383c11ee84d620e0b56ca0f67a3 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:28:22 -0400
Subject: [PATCH 348/391] omap-stop-ccnt-in-idle

omap stop ccnt in idle

Let's play safe: don't assume the ccnt register is stopped while we are in
idle/sleep modes. Stop it ourself.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 arch/arm/mach-omap2/trace-clock.c |   16 ++++++++++++++--
 1 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-omap2/trace-clock.c b/arch/arm/mach-omap2/trace-clock.c
index 4bdd46e..0c1c8e3 100644
--- a/arch/arm/mach-omap2/trace-clock.c
+++ b/arch/arm/mach-omap2/trace-clock.c
@@ -118,7 +118,14 @@ static void clear_ccnt_ms(unsigned long data)
 	unsigned long flags;
 	int cpu;
 
+	cpu = smp_processor_id();
+	pm_count = &per_cpu(pm_save_count, cpu);
+
 	local_irq_save(flags);
+
+	if (!pm_count->fast_clock_ready)
+		goto end;
+
 	isb();	/* clear the pipeline so we can execute ASAP */
 	write_ctens(read_ctens() & ~(1 << 31));	/* disable counter */
 	cycles = read_ccnt();
@@ -126,10 +133,9 @@ static void clear_ccnt_ms(unsigned long data)
 	isb();
 	write_ctens(read_ctens() |  (1 << 31));	/* enable counter */
 	isb();
+end:
 	local_irq_restore(flags);
 
-	cpu = smp_processor_id();
-	pm_count = &per_cpu(pm_save_count, cpu);
 	pm_count->clear_ccnt_ms_timer.expires = jiffies + clear_ccnt_interval;
 	add_timer_on(&pm_count->clear_ccnt_ms_timer, cpu);
 }
@@ -161,6 +167,12 @@ end:
 	 */
 	barrier();
 	pm_count->fast_clock_ready = 0;
+
+	/*
+	 * Disable counter to ensure there is no overflow while we are
+	 * keeping track of time with ext. clock.
+	 */
+	write_ctens(read_ctens() & ~(1 << 31));	/* disable counter */
 	local_irq_restore(flags);
 }
 
-- 
1.6.5.2

