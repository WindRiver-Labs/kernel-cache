From 783e35ec218b153d1547d75f39071754abd194ce Mon Sep 17 00:00:00 2001
From: auto commit <unknown@unknown>
Date: Tue, 15 Jul 2008 15:19:33 -0400
Subject: [PATCH] auto_msg: importing markers-userspace-x86_64.patch

This is an automatic import of patch markers-userspace-x86_64.patch, no headers were
detected and a default message was constructed
---
 arch/x86/Kconfig                 |    1 +
 arch/x86/ia32/ia32entry.S        |    2 ++
 arch/x86/kernel/signal_64.c      |   16 ++++++++++++++++
 include/asm-x86/thread_info_64.h |    5 ++++-
 include/asm-x86/unistd_64.h      |    5 ++++-
 5 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index c9c1c3b..400a837 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -15,6 +15,7 @@ config X86_32
 
 config X86_64
 	def_bool 64BIT
+	select HAVE_MARKERS_ABI
 
 ### Arch settings
 config X86
diff --git a/arch/x86/ia32/ia32entry.S b/arch/x86/ia32/ia32entry.S
index 451c732..fed6164 100644
--- a/arch/x86/ia32/ia32entry.S
+++ b/arch/x86/ia32/ia32entry.S
@@ -731,4 +731,6 @@ ia32_sys_call_table:
 	.quad sys32_fallocate
 	.quad compat_sys_timerfd_settime	/* 325 */
 	.quad compat_sys_timerfd_gettime
+	.quad sys_marker
+	.quad sys_trace
 ia32_syscall_end:
diff --git a/arch/x86/kernel/signal_64.c b/arch/x86/kernel/signal_64.c
index e53b267..21be718 100644
--- a/arch/x86/kernel/signal_64.c
+++ b/arch/x86/kernel/signal_64.c
@@ -19,6 +19,7 @@
 #include <linux/stddef.h>
 #include <linux/personality.h>
 #include <linux/compiler.h>
+#include <linux/marker.h>
 #include <asm/processor.h>
 #include <asm/ucontext.h>
 #include <asm/uaccess.h>
@@ -505,6 +506,21 @@ void do_notify_resume(struct pt_regs *regs, void *unused,
 
 	if (thread_info_flags & _TIF_HRTICK_RESCHED)
 		hrtick_resched();
+
+#ifdef CONFIG_MARKERS_USERSPACE
+	/* Pending marker update ? */
+	if (thread_info_flags & _TIF_MARKER_PENDING) {
+		/*
+		 * marker_update_process can sleep because it writes to
+		 * userspace and because it takes a mutex. While locking could
+		 * be changed to a non-blocking scheme, it is good do do not
+		 * fail on userspace page faults.
+		 */
+		local_irq_enable();
+		marker_update_process();
+		local_irq_disable();
+	}
+#endif
 }
 
 void signal_fault(struct pt_regs *regs, void __user *frame, char *where)
diff --git a/include/asm-x86/thread_info_64.h b/include/asm-x86/thread_info_64.h
index 1d45938..69119d8 100644
--- a/include/asm-x86/thread_info_64.h
+++ b/include/asm-x86/thread_info_64.h
@@ -112,6 +112,7 @@ static inline struct thread_info *stack_thread_info(void)
 #define TIF_SECCOMP		8	/* secure computing */
 #define TIF_MCE_NOTIFY		10	/* notify userspace of an MCE */
 #define TIF_HRTICK_RESCHED	11	/* reprogram hrtick timer */
+#define TIF_MARKER_PENDING	12	/* marker update pending */
 /* 16 free */
 #define TIF_IA32		17	/* 32bit process */
 #define TIF_FORK		18	/* ret_from_fork */
@@ -136,6 +137,7 @@ static inline struct thread_info *stack_thread_info(void)
 #define _TIF_SECCOMP		(1 << TIF_SECCOMP)
 #define _TIF_MCE_NOTIFY		(1 << TIF_MCE_NOTIFY)
 #define _TIF_HRTICK_RESCHED	(1 << TIF_HRTICK_RESCHED)
+#define _TIF_MARKER_PENDING	(1 << TIF_MARKER_PENDING)
 #define _TIF_IA32		(1 << TIF_IA32)
 #define _TIF_FORK		(1 << TIF_FORK)
 #define _TIF_ABI_PENDING	(1 << TIF_ABI_PENDING)
@@ -157,7 +159,8 @@ static inline struct thread_info *stack_thread_info(void)
 #define _TIF_ALLWORK_MASK (0x0000FFFF & ~_TIF_SECCOMP)
 
 #define _TIF_DO_NOTIFY_MASK						\
-	(_TIF_SIGPENDING|_TIF_SINGLESTEP|_TIF_MCE_NOTIFY|_TIF_HRTICK_RESCHED)
+	(_TIF_SIGPENDING|_TIF_SINGLESTEP|_TIF_MCE_NOTIFY|		\
+		_TIF_HRTICK_RESCHED|_TIF_MARKER_PENDING)
 
 /* flags to check in __switch_to() */
 #define _TIF_WORK_CTXSW							\
diff --git a/include/asm-x86/unistd_64.h b/include/asm-x86/unistd_64.h
index fe26e36..be05daa 100644
--- a/include/asm-x86/unistd_64.h
+++ b/include/asm-x86/unistd_64.h
@@ -639,7 +639,10 @@ __SYSCALL(__NR_fallocate, sys_fallocate)
 __SYSCALL(__NR_timerfd_settime, sys_timerfd_settime)
 #define __NR_timerfd_gettime			287
 __SYSCALL(__NR_timerfd_gettime, sys_timerfd_gettime)
-
+#define __NR_marker				288
+__SYSCALL(__NR_marker, sys_marker)
+#define __NR_trace				289
+__SYSCALL(__NR_trace, sys_trace)
 
 #ifndef __NO_STUBS
 #define __ARCH_WANT_OLD_READDIR
-- 
1.5.5.1

