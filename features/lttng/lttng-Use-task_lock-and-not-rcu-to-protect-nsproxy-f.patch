From 072c8e11b7b0d3cbd0d93366cf78f81e0d46e959 Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Fri, 29 Aug 2014 16:14:09 +0800
Subject: [PATCH] lttng: Use task_lock and not rcu to protect nsproxy for
 lttng

commit 728dba3a [namespaces: Use task_lock and not rcu to protect nsproxy]
removes the rcu lock from nsproxy.

This causes the following lttng build failure:

linux/drivers/staging/lttng2/lttng-statedump-impl.c:
In function 'lttng_statedump_process_ns':
linux/drivers/staging/lttng2/lttng-statedump-impl.c:288:2:
error: implicit declaration of function 'task_nsproxy' [-Werror=implicit-function-declaration]

So we convert lttng2 to the new locking scheme to fix the error.

Signed-off-by: Li Wang <li.wang@windriver.com>
---
 drivers/staging/lttng2/lttng-statedump-impl.c |    6 +++---
 fs/ecryptfs/messaging.c                       |    8 ++++----
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/staging/lttng2/lttng-statedump-impl.c b/drivers/staging/lttng2/lttng-statedump-impl.c
index be498ac..cde3eb2 100644
--- a/drivers/staging/lttng2/lttng-statedump-impl.c
+++ b/drivers/staging/lttng2/lttng-statedump-impl.c
@@ -284,8 +284,8 @@ void lttng_statedump_process_ns(struct lttng_session *session,
 	struct nsproxy *proxy;
 	struct pid_namespace *pid_ns;
 
-	rcu_read_lock();
-	proxy = task_nsproxy(p);
+	task_lock(p);
+	proxy = p->nsproxy;
 	if (proxy) {
 		pid_ns = proxy->pid_ns;
 		do {
@@ -297,7 +297,7 @@ void lttng_statedump_process_ns(struct lttng_session *session,
 		trace_lttng_statedump_process_state(session,
 			p, type, mode, submode, status, NULL);
 	}
-	rcu_read_unlock();
+	task_unlock(p);
 }
 
 static
diff --git a/fs/ecryptfs/messaging.c b/fs/ecryptfs/messaging.c
index ab22480..9768e7f 100644
--- a/fs/ecryptfs/messaging.c
+++ b/fs/ecryptfs/messaging.c
@@ -293,20 +293,20 @@ int ecryptfs_process_response(struct ecryptfs_message *msg, uid_t euid,
 	msg_ctx = &ecryptfs_msg_ctx_arr[msg->index];
 	mutex_lock(&msg_ctx->mux);
 	mutex_lock(&ecryptfs_daemon_hash_mux);
-	rcu_read_lock();
-	nsproxy = task_nsproxy(msg_ctx->task);
+	task_lock(msg_ctx->task);
+	nsproxy = msg_ctx->task->nsproxy;
 	if (nsproxy == NULL) {
 		rc = -EBADMSG;
 		printk(KERN_ERR "%s: Receiving process is a zombie. Dropping "
 		       "message.\n", __func__);
-		rcu_read_unlock();
+		task_unlock(msg_ctx->task);
 		mutex_unlock(&ecryptfs_daemon_hash_mux);
 		goto wake_up;
 	}
 	tsk_user_ns = __task_cred(msg_ctx->task)->user->user_ns;
 	ctx_euid = task_euid(msg_ctx->task);
 	rc = ecryptfs_find_daemon_by_euid(&daemon, ctx_euid, tsk_user_ns);
-	rcu_read_unlock();
+	task_unlock(msg_ctx->task);
 	mutex_unlock(&ecryptfs_daemon_hash_mux);
 	if (rc) {
 		rc = -EBADMSG;
-- 
1.7.5.4

