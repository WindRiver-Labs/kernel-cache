From 1b0154a4063934f0c6763dd9a79d28e243f55c5e Mon Sep 17 00:00:00 2001
From: Linhao Zhang <linhao.zhang@windriver.com>
Date: Thu, 22 May 2014 09:52:43 +0800
Subject: [PATCH 3/3] FIX: lttng build error if !CONFIG_UID16 on arm

when CONFIG_UID16 is not set, the old_uid_t is not defined.
If the macros such as OVERRIDE_32_sys_getuid16 is not defined,
the type old_uid_t will be used in lttng,
so define the macros to avoid that.

Signed-off-by: Linhao Zhang <linhao.zhang@windriver.com>
Signed-off-by: Jianchuan Wang <jianchuan.wang@windriver.com>
---
 .../arm-32-syscalls-3.4.25_integers_override.h     | 36 ++++++++++++++++++++++
 .../arm-32-syscalls-3.4.25_pointers_override.h     | 18 +++++++++++
 2 files changed, 54 insertions(+)

diff --git a/drivers/staging/lttng/instrumentation/syscalls/headers/arm-32-syscalls-3.4.25_integers_override.h b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-32-syscalls-3.4.25_integers_override.h
index d5af6d0..27b4661 100644
--- a/drivers/staging/lttng/instrumentation/syscalls/headers/arm-32-syscalls-3.4.25_integers_override.h
+++ b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-32-syscalls-3.4.25_integers_override.h
@@ -4,6 +4,24 @@
 #define OVERRIDE_TABLE_32_sync_file_range2
 
 #ifndef CREATE_SYSCALL_TABLE
+ 
+#ifndef CONFIG_UID16
+
+#define OVERRIDE_32_sys_getuid16
+#define OVERRIDE_32_sys_getgid16
+#define OVERRIDE_32_sys_geteuid16
+#define OVERRIDE_32_sys_getegid16
+#define OVERRIDE_32_sys_setuid16
+#define OVERRIDE_32_sys_setgid16
+#define OVERRIDE_32_sys_setfsuid16
+#define OVERRIDE_32_sys_setfsgid16
+#define OVERRIDE_32_sys_setreuid16
+#define OVERRIDE_32_sys_setregid16
+#define OVERRIDE_32_sys_fchown16
+#define OVERRIDE_32_sys_setresuid16
+#define OVERRIDE_32_sys_setresgid16
+
+#endif
 
 SC_LTTNG_TRACEPOINT_EVENT(arm_fadvise64_64,
 	TP_PROTO(int fd, int advice, loff_t offset, loff_t len),
@@ -39,6 +57,24 @@ SC_LTTNG_TRACEPOINT_EVENT(sync_file_range2,
 
 #else	/* CREATE_SYSCALL_TABLE */
 
+#ifndef  CONFIG_UID16 
+
+#define OVERRIDE_TABLE_32_sys_getuid16
+#define OVERRIDE_TABLE_32_sys_getgid16
+#define OVERRIDE_TABLE_32_sys_geteuid16
+#define OVERRIDE_TABLE_32_sys_getegid16
+#define OVERRIDE_TABLE_32_sys_setuid16
+#define OVERRIDE_TABLE_32_sys_setgid16
+#define OVERRIDE_TABLE_32_sys_setreuid16
+#define OVERRIDE_TABLE_32_sys_setregid16
+#define OVERRIDE_TABLE_32_sys_fchown16
+#define OVERRIDE_TABLE_32_sys_setfsuid16
+#define OVERRIDE_TABLE_32_sys_setfsgid16
+#define OVERRIDE_TABLE_32_sys_setresuid16
+#define OVERRIDE_TABLE_32_sys_setresgid16
+
+#endif
+
 #define OVERRIDE_TABLE_32_mmap
 TRACE_SYSCALL_TABLE(mmap, mmap, 90, 6)
 
diff --git a/drivers/staging/lttng/instrumentation/syscalls/headers/arm-32-syscalls-3.4.25_pointers_override.h b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-32-syscalls-3.4.25_pointers_override.h
index c01d355..c1cc8da 100644
--- a/drivers/staging/lttng/instrumentation/syscalls/headers/arm-32-syscalls-3.4.25_pointers_override.h
+++ b/drivers/staging/lttng/instrumentation/syscalls/headers/arm-32-syscalls-3.4.25_pointers_override.h
@@ -4,6 +4,15 @@
 
 #ifndef CREATE_SYSCALL_TABLE
 
+#ifndef CONFIG_UID16
+#define OVERRIDE_32_sys_getgroups16
+#define OVERRIDE_32_sys_setgroups16
+#define OVERRIDE_32_sys_lchown16
+#define OVERRIDE_32_sys_getresuid16
+#define OVERRIDE_32_sys_getresgid16
+#define OVERRIDE_32_sys_chown16
+#endif
+
 SC_LTTNG_TRACEPOINT_EVENT(mmap2,
 	TP_PROTO(void *addr, size_t len, int prot,
                  int flags, int fd, off_t pgoff),
@@ -27,6 +36,15 @@ SC_LTTNG_TRACEPOINT_EVENT(mmap2,
 
 #else	/* CREATE_SYSCALL_TABLE */
 
+#ifndef CONFIG_UID16
+#define OVERRIDE_TABLE_32_sys_getgroups16
+#define OVERRIDE_TABLE_32_sys_setgroups16
+#define OVERRIDE_TABLE_32_sys_lchown16
+#define OVERRIDE_TABLE_32_sys_getresuid16
+#define OVERRIDE_TABLE_32_sys_getresgid16
+#define OVERRIDE_TABLE_32_sys_chown16
+#endif
+
 #define OVERRIDE_TABLE_32_execve
 TRACE_SYSCALL_TABLE(execve, execve, 11, 3)
 #define OVERRIDE_TABLE_32_clone
-- 
2.0.2

