From f3a188c97741eb7f81558f0b071f444ca472ee27 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date: Thu, 30 Oct 2008 23:27:09 -0400
Subject: [PATCH] irq-handle-prepare-for-instrumentation

IRQ handle prepare for instrumentation

Rename handle_IRQ_event to _handle_IRQ_event and declare it static so it can be
embedded in its caller. Create a handle_IRQ_event wrapper (non-static) to still
show the symbol to arch-specific code still using it.

Actually improves tbench performance from 2020 to 2024 MB/s.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 kernel/irq/handle.c |   25 +++++++++++++++----------
 1 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/kernel/irq/handle.c b/kernel/irq/handle.c
index 5fa6198..92aafd4 100644
--- a/kernel/irq/handle.c
+++ b/kernel/irq/handle.c
@@ -119,14 +119,7 @@ irqreturn_t no_action(int cpl, void *dev_id)
 	return IRQ_NONE;
 }
 
-/**
- * handle_IRQ_event - irq action chain handler
- * @irq:	the interrupt number
- * @action:	the interrupt action chain for this irq
- *
- * Handles the action chain of an irq event
- */
-irqreturn_t handle_IRQ_event(unsigned int irq, struct irqaction *action)
+static irqreturn_t _handle_IRQ_event(unsigned int irq, struct irqaction *action)
 {
 	irqreturn_t ret, retval = IRQ_NONE;
 	unsigned int status = 0;
@@ -179,7 +172,7 @@ unsigned int __do_IRQ(unsigned int irq)
 		if (desc->chip->ack)
 			desc->chip->ack(irq);
 		if (likely(!(desc->status & IRQ_DISABLED))) {
-			action_ret = handle_IRQ_event(irq, desc->action);
+			action_ret = _handle_IRQ_event(irq, desc->action);
 			if (!noirqdebug)
 				note_interrupt(irq, desc, action_ret);
 		}
@@ -233,7 +226,7 @@ unsigned int __do_IRQ(unsigned int irq)
 
 		spin_unlock(&desc->lock);
 
-		action_ret = handle_IRQ_event(irq, action);
+		action_ret = _handle_IRQ_event(irq, action);
 		if (!noirqdebug)
 			note_interrupt(irq, desc, action_ret);
 
@@ -256,6 +249,18 @@ out:
 }
 #endif
 
+/**
+ * handle_IRQ_event - irq action chain handler
+ * @irq:	the interrupt number
+ * @action:	the interrupt action chain for this irq
+ *
+ * Handles the action chain of an irq event
+ */
+irqreturn_t handle_IRQ_event(unsigned int irq, struct irqaction *action)
+{
+	return _handle_IRQ_event(irq, action);
+}
+
 #ifdef CONFIG_TRACE_IRQFLAGS
 
 /*
-- 
1.5.5.1

