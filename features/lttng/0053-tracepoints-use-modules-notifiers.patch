From dd015346b3a71346c4aa95d26bc08b66ff279e7d Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date: Thu, 30 Oct 2008 23:26:52 -0400
Subject: [PATCH] tracepoints-use-modules-notifiers

Tracepoint use modules notifiers

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 include/linux/tracepoint.h |    2 ++
 kernel/module.c            |    4 ----
 kernel/tracepoint.c        |   29 +++++++++++++++++++++++++++++
 3 files changed, 31 insertions(+), 4 deletions(-)

diff --git a/include/linux/tracepoint.h b/include/linux/tracepoint.h
index 7e9b42a..946e8cd 100644
--- a/include/linux/tracepoint.h
+++ b/include/linux/tracepoint.h
@@ -32,6 +32,8 @@ struct tracepoint {
 
 #ifdef CONFIG_TRACEPOINTS
 
+#define TRACEPOINT_NOTIFY_PRIO	1
+
 /*
  * it_func[0] is never NULL because there is at least one element in the array
  * when the array itself is non NULL.
diff --git a/kernel/module.c b/kernel/module.c
index ac73e0e..93eab4b 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -2206,10 +2206,6 @@ static noinline struct module *load_module(void __user *umod,
 		marker_update_probe_range(mod->markers,
 			mod->markers + mod->num_markers);
 #endif
-#ifdef CONFIG_TRACEPOINTS
-		tracepoint_update_probe_range(mod->tracepoints,
-			mod->tracepoints + mod->num_tracepoints);
-#endif
 	}
 #ifdef CONFIG_DYNAMIC_PRINTK_DEBUG
 	for (value = (unsigned long)mod->start_verbose;
diff --git a/kernel/tracepoint.c b/kernel/tracepoint.c
index e96590f..02eace6 100644
--- a/kernel/tracepoint.c
+++ b/kernel/tracepoint.c
@@ -540,3 +540,32 @@ void tracepoint_iter_reset(struct tracepoint_iter *iter)
 	iter->tracepoint = NULL;
 }
 EXPORT_SYMBOL_GPL(tracepoint_iter_reset);
+
+int tracepoint_module_notify(struct notifier_block *self,
+			     unsigned long val, void *data)
+{
+	struct module *mod = data;
+
+	switch (val) {
+	case MODULE_STATE_COMING:
+		tracepoint_update_probe_range(mod->tracepoints,
+			mod->tracepoints + mod->num_tracepoints);
+		break;
+	case MODULE_STATE_GOING:
+		tracepoint_update_probe_range(mod->tracepoints,
+			mod->tracepoints + mod->num_tracepoints);
+		break;
+	}
+	return 0;
+}
+
+struct notifier_block tracepoint_module_nb = {
+	.notifier_call = tracepoint_module_notify,
+	.priority = TRACEPOINT_NOTIFY_PRIO,
+};
+
+static int init_tracepoints(void)
+{
+	return register_module_notifier(&tracepoint_module_nb);
+}
+__initcall(init_tracepoints);
-- 
1.5.5.1

