From 733441f4b9d5ff485038b401eb5c4a1a13bc4fdd Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:27:11 -0400
Subject: [PATCH 214/391] ltt-relay-lockless-false-sharing-fix

ltt relay lockless false sharing fix

After fixing false sharing problems found using oprofile (got burned by
kzalloc_node, thinking it was somehow cacheline aligned, but is not), updated
tbench performance results (this will be in lttng 0.108) :

Vanilla : 2070 MB/sec

1405 MB/sec   32 % slowdown

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 ltt/ltt-relay-lockless.c |    3 ++-
 ltt/ltt-relay-lockless.h |    3 ++-
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/ltt/ltt-relay-lockless.c b/ltt/ltt-relay-lockless.c
index 29b9624..24393c2 100644
--- a/ltt/ltt-relay-lockless.c
+++ b/ltt/ltt-relay-lockless.c
@@ -785,7 +785,8 @@ static int ltt_relay_create_buffer(struct ltt_trace_struct *trace,
 		return -ENOMEM;
 
 	ltt_buf->commit_count =
-		kzalloc_node(sizeof(ltt_buf->commit_count) * n_subbufs,
+		kzalloc_node(ALIGN(sizeof(ltt_buf->commit_count) * n_subbufs,
+				   1 << INTERNODE_CACHE_SHIFT),
 			GFP_KERNEL, cpu_to_node(cpu));
 	if (!ltt_buf->commit_count) {
 		kfree(ltt_buf);
diff --git a/ltt/ltt-relay-lockless.h b/ltt/ltt-relay-lockless.h
index 15875ac..9074b71 100644
--- a/ltt/ltt-relay-lockless.h
+++ b/ltt/ltt-relay-lockless.h
@@ -38,6 +38,7 @@
  * Dual LGPL v2.1/GPL v2 license.
  */
 
+#include <linux/cache.h>
 #include <linux/time.h>
 #include <linux/ltt-tracer.h>
 #include <linux/ltt-relay.h>
@@ -99,7 +100,7 @@ struct ltt_channel_buf_struct {
 	struct timer_list switch_timer;	/* timer for periodical switch */
 	unsigned long switch_timer_interval;	/* in jiffies. 0 unset */
 	struct rchan_buf *rbuf;		/* Pointer to rchan_buf */
-} ____cacheline_aligned;
+} ____cacheline_internodealigned_in_smp;
 
 /*
  * A switch is done during tracing or as a final flush after tracing (so it
-- 
1.6.5.2

