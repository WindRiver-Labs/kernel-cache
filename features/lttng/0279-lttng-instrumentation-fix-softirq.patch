From a9a5f33473f46df0880569396c5126c1cdc5c2f3 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:27:47 -0400
Subject: [PATCH 279/391] lttng-instrumentation-fix-softirq

LTTng instrumentation fix softirq

Fix softirq instrumentation mismatch, caused by changes in trace_event softirq
event name.

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 include/trace/irq.h       |   11 ++---------
 kernel/softirq.c          |    5 +++--
 ltt/probes/kernel-trace.c |   25 +++++++++++++------------
 3 files changed, 18 insertions(+), 23 deletions(-)

diff --git a/include/trace/irq.h b/include/trace/irq.h
index 1d89916..da53828 100644
--- a/include/trace/irq.h
+++ b/include/trace/irq.h
@@ -2,6 +2,7 @@
 #define _LTTNG_TRACE_IRQ_H
 
 #include <linux/kdebug.h>
+#include <linux/interrupt.h>
 
 /*
  * action can be NULL if not available.
@@ -27,15 +28,7 @@ DECLARE_TRACE(irq_tasklet_high_exit,
 	TP_PROTO(struct tasklet_struct *t),
 		TP_ARGS(t));
 
-#if 0
-DECLARE_TRACE(irq_softirq_entry,
-	TP_PROTO(struct softirq_action *h, struct softirq_action *softirq_vec),
-		TP_ARGS(h, softirq_vec));
-DECLARE_TRACE(irq_softirq_exit,
-	TP_PROTO(struct softirq_action *h, struct softirq_action *softirq_vec),
-		TP_ARGS(h, softirq_vec));
-#endif
-DECLARE_TRACE(irq_softirq_raise,
+DECLARE_TRACE(softirq_raise,
 	TP_PROTO(unsigned int nr),
 		TP_ARGS(nr));
 
diff --git a/kernel/softirq.c b/kernel/softirq.c
index 4d1099f..1020cf7 100644
--- a/kernel/softirq.c
+++ b/kernel/softirq.c
@@ -26,6 +26,7 @@
 #include <linux/marker.h>
 #include <linux/kallsyms.h>
 #include <linux/tick.h>
+#include <trace/irq.h>
 
 #define CREATE_TRACE_POINTS
 #include <trace/events/irq.h>
@@ -209,7 +209,7 @@ EXPORT_SYMBOL(local_bh_enable_ip);
  */
 #define MAX_SOFTIRQ_TIME  msecs_to_jiffies(2)
 
-DEFINE_TRACE(irq_softirq_raise);
+DEFINE_TRACE(softirq_raise);
 
 asmlinkage void __do_softirq(void)
 {
@@ -339,7 +340,7 @@ void irq_exit(void)
  */
 inline void raise_softirq_irqoff(unsigned int nr)
 {
-	trace_irq_softirq_raise(nr);
+	trace_softirq_raise(nr);
 	__raise_softirq_irqoff(nr);
 
 	/*
diff --git a/ltt/probes/kernel-trace.c b/ltt/probes/kernel-trace.c
index cb9a797..f6e6c98 100644
--- a/ltt/probes/kernel-trace.c
+++ b/ltt/probes/kernel-trace.c
@@ -17,6 +17,7 @@
 #include <trace/timer.h>
 #include <trace/kernel.h>
 #include <trace/fault.h>
+#include <trace/events/sched.h>
 
 /*
  * This should probably be added to s390.
@@ -109,13 +110,13 @@ notrace void probe_irq_exit(irqreturn_t retval)
 
 /* kernel_softirq_entry specialized tracepoint probe */
 
-void probe_irq_softirq_entry(struct softirq_action *h,
+void probe_softirq_entry(struct softirq_action *h,
 	struct softirq_action *softirq_vec);
 
-DEFINE_MARKER_TP(kernel, softirq_entry, irq_softirq_entry,
-	probe_irq_softirq_entry, "softirq_id #1u%lu");
+DEFINE_MARKER_TP(kernel, softirq_entry, softirq_entry,
+	probe_softirq_entry, "softirq_id #1u%lu");
 
-notrace void probe_irq_softirq_entry(struct softirq_action *h,
+notrace void probe_softirq_entry(struct softirq_action *h,
 	struct softirq_action *softirq_vec)
 {
 	struct marker *marker;
@@ -130,13 +131,13 @@ notrace void probe_irq_softirq_entry(struct softirq_action *h,
 
 /* kernel_softirq_exit specialized tracepoint probe */
 
-void probe_irq_softirq_exit(struct softirq_action *h,
+void probe_softirq_exit(struct softirq_action *h,
 	struct softirq_action *softirq_vec);
 
-DEFINE_MARKER_TP(kernel, softirq_exit, irq_softirq_exit,
-	probe_irq_softirq_exit, "softirq_id #1u%lu");
+DEFINE_MARKER_TP(kernel, softirq_exit, softirq_exit,
+	probe_softirq_exit, "softirq_id #1u%lu");
 
-notrace void probe_irq_softirq_exit(struct softirq_action *h,
+notrace void probe_softirq_exit(struct softirq_action *h,
 	struct softirq_action *softirq_vec)
 {
 	struct marker *marker;
@@ -151,12 +152,12 @@ notrace void probe_irq_softirq_exit(struct softirq_action *h,
 
 /* kernel_softirq_raise specialized tracepoint probe */
 
-void probe_irq_softirq_raise(unsigned int nr);
+void probe_softirq_raise(unsigned int nr);
 
-DEFINE_MARKER_TP(kernel, softirq_raise, irq_softirq_raise,
-	probe_irq_softirq_raise, "softirq_id #1u%u");
+DEFINE_MARKER_TP(kernel, softirq_raise, softirq_raise,
+	probe_softirq_raise, "softirq_id #1u%u");
 
-notrace void probe_irq_softirq_raise(unsigned int nr)
+notrace void probe_softirq_raise(unsigned int nr)
 {
 	struct marker *marker;
 	unsigned char data;
-- 
1.6.5.2

