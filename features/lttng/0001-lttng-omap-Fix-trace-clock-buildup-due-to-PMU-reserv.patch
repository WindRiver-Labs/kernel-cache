From 751914aede1e31a5c2482dc11cf1e9317dcde216 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Fri, 1 Jun 2012 15:59:13 -0700
Subject: [PATCH 1/3] lttng: omap: Fix trace clock buildup due to PMU reserve

Due to commit f12482c9393da2c1f5cb3217f29aa79c653dd980
[ARM: 6974/1: pmu: refactor reservation],
fix reserve_pmu/release_pmu argument and return value type.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/arm/mach-omap2/trace-clock.c |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-omap2/trace-clock.c b/arch/arm/mach-omap2/trace-clock.c
index c21bd47..6465b27 100644
--- a/arch/arm/mach-omap2/trace-clock.c
+++ b/arch/arm/mach-omap2/trace-clock.c
@@ -42,7 +42,7 @@ static int trace_clock_refcount;
 
 static int print_info_done;
 
-static struct platform_device *reserved_pmu;
+static int reserved_pmu;
 
 static u32 get_mul_fact(u64 max_freq, u64 cur_freq)
 {
@@ -546,7 +546,7 @@ int get_trace_clock(void)
 	if (trace_clock_refcount)
 		goto end;
 	reserved_pmu = reserve_pmu(ARM_PMU_DEVICE_CPU);
-	if (IS_ERR_OR_NULL(reserved_pmu) && PTR_ERR(reserved_pmu) != -ENODEV) {
+	if (reserved_pmu) {
 		ret = -EBUSY;
 		goto end;
 	}
@@ -565,8 +565,8 @@ void put_trace_clock(void)
 	if (trace_clock_refcount != 1)
 		goto end;
 	_stop_trace_clock();
-	if (!IS_ERR_OR_NULL(reserved_pmu))
-		release_pmu(reserved_pmu);
+	if (reserved_pmu)
+		release_pmu(ARM_PMU_DEVICE_CPU);
 end:
 	trace_clock_refcount--;
 	spin_unlock(&trace_clock_lock);
@@ -700,8 +700,8 @@ static __init int init_trace_clock(void)
 	int cpu, ret;
 	u64 rem;
 
-	ret = init_pmu(ARM_PMU_DEVICE_CPU);
-	if (ret && ret != -ENODEV)
+	ret = reserve_pmu(ARM_PMU_DEVICE_CPU);
+	if (ret)
 		return ret;
 	clock = get_clocksource_32k();
 	/*
-- 
1.7.9.7

