From 85be89c58a9c1e26ca00202ad4a4ab5fd11ae31d Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Wed, 18 May 2011 18:42:41 -0400
Subject: [PATCH 189/248] lttng-mips-use-64-bit-counter-for-trace-clock-on-octeon-cpus

Cavium Octeon CPUs have a 64-bit cycle counter that is synchronized
when the CPUs are brought on-line.  So for this case we don't need any
fancy stuff.

[Mathieu: move octeon code to its own header]

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
---
 arch/mips/Kconfig                          |    4 +-
 arch/mips/include/asm/octeon/trace-clock.h |   43 ++++++++++++++++++++++++++++
 arch/mips/include/asm/trace-clock.h        |    4 ++
 arch/mips/kernel/smp.c                     |    2 +
 4 files changed, 51 insertions(+), 2 deletions(-)
 create mode 100644 arch/mips/include/asm/octeon/trace-clock.h

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index f838ed5..6b73845 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -2071,8 +2071,8 @@ config HAVE_GET_CYCLES_32
 	def_bool y
 	depends on !CPU_R4400_WORKAROUNDS
 	select HAVE_TRACE_CLOCK
-	select HAVE_TRACE_CLOCK_32_TO_64
-	select HAVE_UNSYNCHRONIZED_TSC
+	select HAVE_TRACE_CLOCK_32_TO_64 if (!CPU_CAVIUM_OCTEON)
+	select HAVE_UNSYNCHRONIZED_TSC if (!CPU_CAVIUM_OCTEON)
 
 #
 # - Highmem only makes sense for the 32-bit kernel.
diff --git a/arch/mips/include/asm/octeon/trace-clock.h b/arch/mips/include/asm/octeon/trace-clock.h
new file mode 100644
index 0000000..e097c4c
--- /dev/null
+++ b/arch/mips/include/asm/octeon/trace-clock.h
@@ -0,0 +1,43 @@
+/*
+ * Copyright (C) 2005,2008 Mathieu Desnoyers
+ *
+ * Trace clock MIPS Octeon definitions.
+ */
+
+#ifndef _ASM_MIPS_OCTEON_TRACE_CLOCK_H
+#define _ASM_MIPS_OCTEON_TRACE_CLOCK_H
+
+#include <asm/octeon/octeon.h>
+
+#define TC_HW_BITS			64
+
+static inline u32 trace_clock_read32(void)
+{
+	return (u32)read_c0_cvmcount(); /* only need the 32 LSB */
+}
+
+static inline u64 trace_clock_read64(void)
+{
+	return read_c0_cvmcount();
+}
+
+static inline u64 trace_clock_frequency(void)
+{
+	return octeon_get_clock_rate();
+}
+
+static inline u32 trace_clock_freq_scale(void)
+{
+	return 1;
+}
+
+static inline void get_trace_clock(void)
+{
+	return;
+}
+
+static inline void put_trace_clock(void)
+{
+	return;
+}
+#endif /* _ASM_MIPS_OCTEON_TRACE_CLOCK_H */
diff --git a/arch/mips/include/asm/trace-clock.h b/arch/mips/include/asm/trace-clock.h
index 3d8cb0f..94a7db3 100644
--- a/arch/mips/include/asm/trace-clock.h
+++ b/arch/mips/include/asm/trace-clock.h
@@ -12,6 +12,9 @@
 
 #define TRACE_CLOCK_MIN_PROBE_DURATION 200
 
+#ifdef CONFIG_CPU_CAVIUM_OCTEON
+# include <asm/octeon/trace-clock.h>
+#else /* !CONFIG_CPU_CAVIUM_OCTEON */
 /*
  * Number of hardware clock bits. The higher order bits are expected to be 0.
  * If the hardware clock source has more than 32 bits, the bits higher than the
@@ -65,6 +68,7 @@ static inline void put_trace_clock(void)
 {
 	put_synthetic_tsc();
 }
+#endif /* CONFIG_CPU_CAVIUM_OCTEON */
 
 static inline void set_trace_clock_is_sync(int state)
 {
diff --git a/arch/mips/kernel/smp.c b/arch/mips/kernel/smp.c
index 3e63ec3..a1e0cbc 100644
--- a/arch/mips/kernel/smp.c
+++ b/arch/mips/kernel/smp.c
@@ -164,7 +164,9 @@ void __init smp_cpus_done(unsigned int max_cpus)
 {
 	mp_ops->cpus_done();
 	synchronise_count_master();
+#ifdef CONFIG_HAVE_UNSYNCHRONIZED_TSC
 	test_tsc_synchronization();
+#endif
 }
 
 /* called from main before smp_init() */
-- 
1.7.0.4

