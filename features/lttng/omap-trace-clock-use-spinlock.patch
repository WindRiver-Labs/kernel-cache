From 7ae3979a4c6cd4200f0c8d1d05a682d7730950e4 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 13 May 2010 19:27:30 -0400
Subject: [PATCH 250/391] omap-trace-clock-use-spinlock

OMAP trace clock use spinlock

useful for power management

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 arch/arm/mach-omap2/trace-clock.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-omap2/trace-clock.c b/arch/arm/mach-omap2/trace-clock.c
index b565503..5ce62a2 100644
--- a/arch/arm/mach-omap2/trace-clock.c
+++ b/arch/arm/mach-omap2/trace-clock.c
@@ -10,7 +10,7 @@
 #include <linux/module.h>
 #include <linux/clocksource.h>
 #include <linux/timer.h>
-#include <linux/mutex.h>
+#include <linux/spinlock.h>
 #include <mach/dmtimer.h>
 #include <mach/trace-clock.h>
 
@@ -34,7 +34,7 @@ static DEFINE_TIMER(clear_ccnt_ms_timer, clear_ccnt_ms, 0, 0);
  */
 #define CLEAR_CCNT_INTERVAL	(cpu_hz / 4)
 
-static DEFINE_MUTEX(trace_clock_lock);
+static DEFINE_SPINLOCK(trace_clock_lock);
 static int trace_clock_refcount;
 
 /*
@@ -181,32 +181,32 @@ void _stop_trace_clock(void)
 
 void start_trace_clock(void)
 {
-	mutex_lock(&trace_clock_lock);
+	spin_lock(&trace_clock_lock);
 	if (!trace_clock_refcount)
 		goto end;
 	_start_trace_clock();
 end:
-	mutex_unlock(&trace_clock_lock);
+	spin_unlock(&trace_clock_lock);
 }
 
 void stop_trace_clock(void)
 {
-	mutex_lock(&trace_clock_lock);
+	spin_lock(&trace_clock_lock);
 	if (!trace_clock_refcount)
 		goto end;
 	_stop_trace_clock();
 end:
-	mutex_unlock(&trace_clock_lock);
+	spin_unlock(&trace_clock_lock);
 }
 
 void get_trace_clock(void)
 {
-	mutex_lock(&trace_clock_lock);
+	spin_lock(&trace_clock_lock);
 	if (trace_clock_refcount++)
 		goto end;
 	_start_trace_clock();
 end:
-	mutex_unlock(&trace_clock_lock);
+	spin_unlock(&trace_clock_lock);
 }
 EXPORT_SYMBOL_GPL(get_trace_clock);
 
-- 
1.6.5.2

