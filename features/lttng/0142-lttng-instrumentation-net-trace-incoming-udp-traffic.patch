From 5c7bcd8b7b6431c1f08cb04a361e83ff9c5f31ec Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Thu, 10 May 2012 13:14:18 -0700
Subject: [PATCH 142/248] lttng-instrumentation-net-trace-incoming-udp-traffic

LTTng instrumentation net: trace incoming UDP traffic

Add a tracepoint to determine if a received packet contains a UDP datagram.

Signed-off-by: Benjamin Poirier <benjamin.poirier@polymtl.ca>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
---
 include/trace/net.h |    3 +++
 net/ipv4/udp.c      |    5 +++++
 2 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/include/trace/net.h b/include/trace/net.h
index 43b5779..5e774eb 100644
--- a/include/trace/net.h
+++ b/include/trace/net.h
@@ -13,6 +13,9 @@ DECLARE_TRACE(net_dev_receive,
 DECLARE_TRACE(net_tcpv4_rcv,
 	TP_PROTO(struct sk_buff *skb),
 	TP_ARGS(skb));
+DECLARE_TRACE(net_udpv4_rcv,
+	TP_PROTO(struct sk_buff *skb),
+	TP_ARGS(skb));
 
 /*
  * Note these first 2 traces are actually in __napi_schedule and net_rx_action
diff --git a/net/ipv4/udp.c b/net/ipv4/udp.c
index fe14105..c4d4eb6 100644
--- a/net/ipv4/udp.c
+++ b/net/ipv4/udp.c
@@ -107,6 +107,7 @@
 #include <net/checksum.h>
 #include <net/xfrm.h>
 #include <trace/events/udp.h>
+#include <trace/net.h>
 #include "udp_impl.h"
 
 struct udp_table udp_table __read_mostly;
@@ -127,6 +128,8 @@ EXPORT_SYMBOL(udp_memory_allocated);
 #define MAX_UDP_PORTS 65536
 #define PORTS_PER_CHAIN (MAX_UDP_PORTS / UDP_HTABLE_SIZE_MIN)
 
+DEFINE_TRACE(net_udpv4_rcv);
+
 static int udp_lib_lport_inuse(struct net *net, __u16 num,
 			       const struct udp_hslot *hslot,
 			       unsigned long *bitmap,
@@ -1650,6 +1653,8 @@ int __udp4_lib_rcv(struct sk_buff *skb, struct udp_table *udptable,
 	if (udp4_csum_init(skb, uh, proto))
 		goto csum_error;
 
+	trace_net_udpv4_rcv(skb);
+
 	if (rt->rt_flags & (RTCF_BROADCAST|RTCF_MULTICAST))
 		return __udp4_lib_mcast_deliver(net, skb, uh,
 				saddr, daddr, udptable);
-- 
1.7.0.4

