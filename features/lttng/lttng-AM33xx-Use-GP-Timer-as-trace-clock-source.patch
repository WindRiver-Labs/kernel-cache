From 4a865a9fc9748e88e0709a2b06455d213a5f3da2 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Wed, 9 Jan 2013 16:52:13 -0800
Subject: [PATCH] lttng: AM33xx: Use GP Timer as trace clock source

Since there is no 32K timer on AM33xx SoC, so use GP Timer as LTTng
trace clock source.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/arm/mach-omap2/timer.c             |    5 +++++
 arch/arm/mach-omap2/trace-clock.c       |    4 ++++
 arch/arm/plat-omap/include/plat/clock.h |    1 +
 3 files changed, 10 insertions(+)

diff --git a/arch/arm/mach-omap2/timer.c b/arch/arm/mach-omap2/timer.c
index c512bac..43aded2 100644
--- a/arch/arm/mach-omap2/timer.c
+++ b/arch/arm/mach-omap2/timer.c
@@ -267,6 +267,11 @@ static struct clocksource clocksource_gpt = {
 	.flags		= CLOCK_SOURCE_IS_CONTINUOUS,
 };
 
+struct clocksource * get_clocksource_gpt(void)
+{
+	return &clocksource_gpt;
+}
+
 static u32 notrace dmtimer_read_sched_clock(void)
 {
 	if (clksrc.reserved)
diff --git a/arch/arm/mach-omap2/trace-clock.c b/arch/arm/mach-omap2/trace-clock.c
index 95412f4..b356e75 100644
--- a/arch/arm/mach-omap2/trace-clock.c
+++ b/arch/arm/mach-omap2/trace-clock.c
@@ -691,7 +691,11 @@ static __init int init_trace_clock(void)
 	int cpu;
 	u64 rem;
 
+#ifdef CONFIG_SOC_AM33XX
+	clock = get_clocksource_gpt();
+#else
 	clock = get_clocksource_32k();
+#endif
 	/*
 	 * clear_ccnt_interval based on the cpu fastest frequency. Never
 	 * recomputed.
diff --git a/arch/arm/plat-omap/include/plat/clock.h b/arch/arm/plat-omap/include/plat/clock.h
index 4d4c362..b77d614 100644
--- a/arch/arm/plat-omap/include/plat/clock.h
+++ b/arch/arm/plat-omap/include/plat/clock.h
@@ -304,5 +304,6 @@ extern const struct clkops clkops_null;
 extern struct clk dummy_ck;
 
 struct clocksource *get_clocksource_32k(void);
+struct clocksource *get_clocksource_gpt(void);
 
 #endif
-- 
1.7.9.7

