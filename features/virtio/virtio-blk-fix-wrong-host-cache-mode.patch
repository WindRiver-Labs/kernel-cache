From 3a506b2f2541e06ec5e04f2b829db50772ab0d3c Mon Sep 17 00:00:00 2001
From: Nam Ninh <nam.ninh@windriver.com>
Date: Fri, 13 Jun 2014 14:11:58 -0400
Subject: [PATCH] virtio-blk: fix wrong host cache mode

We have seen a hang when we run a test that sets up a XFS filesystem via
virtio block device on KVM guest. The test folks a child process. Both
parent and child processes concurrently access the filesystem. When it
hangs, ps command shows both parent and child proccess are in "D" state
waiting to access the filesystem:

root@guest:~# ps aux | grep D
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root        22  0.0  0.0      0     0 ?        D    18:01   0:00 [kworker/0:1]
root       803  0.6  0.0   5084   460 ttyS0    D    18:02   0:00 vtest /mnt/xfs/foo
root       804  0.6  0.0   5084   312 ttyS0    D    18:02   0:00 vtest /mnt/xfs/foo
root       807  0.0  0.0   4392   388 ttyS0    S+   18:03   0:00 grep D

The problem is the mode of host cached used by the virtio block driver is
set to a wrong mode in the kernel and mismatched with what is shown in
userspace with this command:

$ cat /sys/devices/pci0000:00/0000:00:05.0/virtio1/block/vdb/cache_type

The host cache is either "write back" or "write through" mode. By default,
the driver configures the cache to be in "write back" mode which can be
checked with the above command. However, during initialization in
virtblk_probe, virtblk_update_cache_mode sets the mode to be "write though".
Debug information shows inside virtblk_update_cache_mode,
virtblk_get_cache_mode returns writeback to be 0, so it sets the mode to be
"write though" instead of "write back" with this call:
       blk_queue_flush(vblk->disk->queue, 0);

This problem was introduced by commit cd5d503862b0d0d927c56ef2e34d3ededac88039
("virtio-blk: allow toggling host cache between writeback and writethrough")
that changes the default cache mode.

Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/drivers/block/virtio_blk.c b/drivers/block/virtio_blk.c
index 0bdde8fba397..4d56f778e913 100644
--- a/drivers/block/virtio_blk.c
+++ b/drivers/block/virtio_blk.c
@@ -781,7 +781,8 @@ static int __devinit virtblk_probe(struct virtio_device *vdev)
 	vblk->index = index;
 
 	/* configure queue flush support */
-	virtblk_update_cache_mode(vdev);
+	if (virtio_has_feature(vdev, VIRTIO_BLK_F_WCE))
+		blk_queue_flush(q, REQ_FLUSH);
 
 	/* If disk is read-only in the host, the guest should obey */
 	if (virtio_has_feature(vdev, VIRTIO_BLK_F_RO))
-- 
1.9.3

