From dbbf09744de67101f8c9c6922bcbd144649b9ad9 Mon Sep 17 00:00:00 2001
From: Harry Ciao <qingtao.cao@windriver.com>
Date: Thu, 5 Feb 2009 18:33:17 +0800
Subject: [PATCH] EDAC: remove vMC_kick()

Remove vMC_kick(), destroy EDAC dependency on vMC, since
EDAC could register its sensors to vMC in delayed mode now.

Signed-off-by: Harry Ciao <qingtao.cao@windriver.com>
---
 drivers/char/ipmi/vmc_main.c |    7 -------
 drivers/edac/edac_module.c   |    7 -------
 include/linux/vmc.h          |    4 ----
 3 files changed, 0 insertions(+), 18 deletions(-)

diff --git a/drivers/char/ipmi/vmc_main.c b/drivers/char/ipmi/vmc_main.c
index b0bc561..ab8aaa3 100644
--- a/drivers/char/ipmi/vmc_main.c
+++ b/drivers/char/ipmi/vmc_main.c
@@ -189,13 +189,6 @@ static int q_cleanup(void)
 	return 0;
 }
 
-/* Provided as a quick fix to make the caller code dependent on the vmc.ko */
-int vMC_kick(void)
-{
-	return 0;
-}
-EXPORT_SYMBOL(vMC_kick);
-
 #ifdef CONFIG_PROC_FS
 struct vmc_device {
 	struct cdev cdev;	/* Char device structure */
diff --git a/drivers/edac/edac_module.c b/drivers/edac/edac_module.c
index 0022bd9..70802ce 100644
--- a/drivers/edac/edac_module.c
+++ b/drivers/edac/edac_module.c
@@ -13,7 +13,6 @@
 #include <linux/edac.h>
 
 #ifdef CONFIG_EDAC_VMC
-#include <linux/vmc.h>
 #include "edac_vmc.h"
 #endif
 
@@ -148,12 +147,6 @@ static int __init edac_init(void)
 
 	edac_printk(KERN_INFO, EDAC_MC, EDAC_VERSION "\n");
 
-#ifdef CONFIG_EDAC_VMC
-	/* Make sure vmc module is loaded or compiled in */
-	err = vMC_kick();
-	if (err < 0)
-		goto error;
-#endif
 	/*
 	 * Harvest and clear any boot/initialization PCI parity errors
 	 *
diff --git a/include/linux/vmc.h b/include/linux/vmc.h
index 2e434a7..8e34544 100644
--- a/include/linux/vmc.h
+++ b/include/linux/vmc.h
@@ -927,10 +927,6 @@ extern int (*vMC_sensor_set_event_support) (vMC_ipmi_sensor_ident_t *
 					    unsigned int
 					    deassertions_supported);
 
-/* vMC_kick
- *   Makes the caller code dependent on the vmc.ko */
-int vMC_kick(void);
-
 /*
  * vMC_register_containment_handler
  *    Registers containment handlers to be called when events are generated.
-- 
1.6.0.3

