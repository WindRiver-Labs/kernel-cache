From b996bfe0e3b53aa50a907e5052d76b6cb88ca5f4 Mon Sep 17 00:00:00 2001
From: Harry Ciao <qingtao.cao@windriver.com>
Date: Thu, 5 Feb 2009 18:33:15 +0800
Subject: [PATCH] EDAC: AMD8131 sensor delayed registration

Make AMD8131 EDAC driver register its vMC sensors in delayed mode,
by making use of ipmi_smi_watcher structure.

Signed-off-by: Harry Ciao <qingtao.cao@windriver.com>
---
 drivers/edac/amd8131_edac.c |   54 +++++++++++++++++++++++++++++++++++++++----
 1 files changed, 49 insertions(+), 5 deletions(-)

diff --git a/drivers/edac/amd8131_edac.c b/drivers/edac/amd8131_edac.c
index f9e22f6..772c8e9 100644
--- a/drivers/edac/amd8131_edac.c
+++ b/drivers/edac/amd8131_edac.c
@@ -376,6 +376,13 @@ static struct amd8131_info amd8131_chipset = {
 
 
 #ifdef CONFIG_EDAC_VMC
+/*
+ * Meaning of vmc_intf_num:
+ * -1, vMC has not been loaded yet;
+ * >=0, vMC's interface number.
+ */
+static int vmc_intf_num = -1;
+
 static int init_vmc_sensors(void)
 {
 	int rc;
@@ -433,6 +440,9 @@ static int init_vmc_sensors(void)
 
 static void uninit_vmc_sensors(void)
 {
+	if (vmc_intf_num == -1)
+		return;
+
 	vmc_sensor_uninit(VMC_NORTH_A_MEM_LIMIT_DPE, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_NORTH_A_MEM_LIMIT_RSE, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_NORTH_A_MEM_LIMIT_RMA, amd8131_vmc_lun);
@@ -475,6 +485,39 @@ static void uninit_vmc_sensors(void)
 
 	vmc_release_lun(amd8131_vmc_lun);
 }
+
+/* Add sensors to vMC */
+static void edac_new_smi(int intf_num, struct device *device)
+{
+	/* Bypass BMC interface */
+	if (strcmp(device->driver->name, VMC_DEVICE_NAME) == 0) {
+		vmc_intf_num = intf_num;
+		printk(KERN_INFO "EDAC: found vMC available at intf_num %d\n",
+			intf_num);
+		if (init_vmc_sensors())
+			printk(KERN_ERR "failed to initialize one or more "
+				"vMC sensors\n");
+	}
+}
+
+/*
+ * Note, vMC's SDR/SEL repositories would have been destroyed
+ * before this smi_gone() is called, so there is nothing left to do.
+ */
+static void edac_smi_gone(int intf_num)
+{
+	if (vmc_intf_num == intf_num)
+		vmc_intf_num = -1;
+
+	return;
+}
+
+static struct ipmi_smi_watcher vmc_watcher = {
+	.owner = THIS_MODULE,
+	.new_smi = edac_new_smi,
+	.smi_gone = edac_smi_gone
+};
+
 #endif /* CONFIG_EDAC_VMC */
 
 /*
@@ -608,10 +651,10 @@ static int __init amd8131_edac_init(void)
 	opstate_init();
 
 #ifdef CONFIG_EDAC_VMC
-        /* Initialize vMC sensors */
-	if (init_vmc_sensors())
-		printk(KERN_ERR "failed to initialize one or more "
-				"vMC sensors\n");
+	int ret = ipmi_smi_watcher_register(&vmc_watcher);
+	if (ret)
+		printk(KERN_ERR AMD8131_EDAC_MOD_STR "can't register vMC's "
+			"smi watcher!\n");
 #endif
 
 	return pci_register_driver(&amd8131_edac_driver);
@@ -620,7 +663,8 @@ static int __init amd8131_edac_init(void)
 static void __exit amd8131_edac_exit(void)
 {
 #ifdef CONFIG_EDAC_VMC
-	/* Uninitialize vMC sensors */
+	/* Unregister vMC's smi_watcher and cleanup vMC sensors */
+	ipmi_smi_watcher_unregister(&vmc_watcher);
 	uninit_vmc_sensors();
 #endif
 
-- 
1.6.0.3

