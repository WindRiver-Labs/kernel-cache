From 8a6181a5214faac3f331c4681c41a88b65f47d58 Mon Sep 17 00:00:00 2001
From: Yue Tao <Yue.Tao@windriver.com>
Date: Wed, 4 Mar 2015 11:24:44 +0800
Subject: [PATCH] evlog: fix build error when enabling CONFIG_EVLOG

The two commits 7db6f5fb and 99bcf217 in recent kernel covert
dev_<level> logging macros to functions, and netdev_<level>
logging macros to functions, which conflict with evlog feature,
so only adding a fix to convert the macros to functions when
CONFIG_EVLOG is disabled.

Signed-off-by: Yue Tao <Yue.Tao@windriver.com>
---
 drivers/base/core.c       |    2 +-
 include/linux/device.h    |    2 +-
 include/linux/netdevice.h |   22 ++++++++++++++++++++++
 net/core/dev.c            |    2 ++
 4 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/drivers/base/core.c b/drivers/base/core.c
index 5fe65c2..f8c5c77 100644
--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -1806,7 +1806,7 @@ void device_shutdown(void)
  * Device logging functions
  */
 
-#ifdef CONFIG_PRINTK
+#if defined(CONFIG_PRINTK) && !defined(CONFIG_EVLOG)
 
 static int __dev_printk(const char *level, const struct device *dev,
 			struct va_format *vaf)
diff --git a/include/linux/device.h b/include/linux/device.h
index e6f1255..c878d22 100644
--- a/include/linux/device.h
+++ b/include/linux/device.h
@@ -719,7 +719,6 @@ static inline int _dev_info(const struct device *dev, const char *fmt, ...)
 	{ return 0; }
 
 #endif
-#endif
 
 /*
  * Stupid hackaround for existing uses of non-printk uses dev_info
@@ -729,6 +728,7 @@ static inline int _dev_info(const struct device *dev, const char *fmt, ...)
  */
 
 #define dev_info(dev, fmt, arg...) _dev_info(dev, fmt, ##arg)
+#endif
 
 #if defined(DEBUG)
 #define dev_dbg(dev, format, arg...)		\
diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index 9a58c5f..4767afc 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2137,6 +2137,27 @@ static inline const char *netdev_name(const struct net_device *dev)
 	return dev->name;
 }
 
+#ifdef CONFIG_EVLOG
+#define netdev_printk(level, netdev, format, args...)		\
+	dev_printk(level, (netdev)->dev.parent,			\
+		   "%s: " format,				\
+		   netdev_name(netdev), ##args)
+
+#define netdev_emerg(dev, format, args...)			\
+	netdev_printk(KERN_EMERG, dev, format, ##args)
+#define netdev_alert(dev, format, args...)			\
+	netdev_printk(KERN_ALERT, dev, format, ##args)
+#define netdev_crit(dev, format, args...)			\
+	netdev_printk(KERN_CRIT, dev, format, ##args)
+#define netdev_err(dev, format, args...)			\
+	netdev_printk(KERN_ERR, dev, format, ##args)
+#define netdev_warn(dev, format, args...)			\
+	netdev_printk(KERN_WARNING, dev, format, ##args)
+#define netdev_notice(dev, format, args...)			\
+	netdev_printk(KERN_NOTICE, dev, format, ##args)
+#define netdev_info(dev, format, args...)			\
+	netdev_printk(KERN_INFO, dev, format, ##args)
+#else
 extern int netdev_printk(const char *level, const struct net_device *dev,
 			 const char *format, ...)
 	__attribute__ ((format (printf, 3, 4)));
@@ -2154,6 +2175,7 @@ extern int netdev_notice(const struct net_device *dev, const char *format, ...)
 	__attribute__ ((format (printf, 2, 3)));
 extern int netdev_info(const struct net_device *dev, const char *format, ...)
 	__attribute__ ((format (printf, 2, 3)));
+#endif
 
 #if defined(DEBUG)
 #define netdev_dbg(__dev, format, args...)			\
diff --git a/net/core/dev.c b/net/core/dev.c
index 39a3af4..950a1f0 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -5905,6 +5905,7 @@ char *netdev_drivername(const struct net_device *dev, char *buffer, int len)
 	return buffer;
 }
 
+#if !defined(CONFIG_EVLOG)
 static int __netdev_printk(const char *level, const struct net_device *dev,
 			   struct va_format *vaf)
 {
@@ -5966,6 +5967,7 @@ define_netdev_printk_level(netdev_err, KERN_ERR);
 define_netdev_printk_level(netdev_warn, KERN_WARNING);
 define_netdev_printk_level(netdev_notice, KERN_NOTICE);
 define_netdev_printk_level(netdev_info, KERN_INFO);
+#endif
 
 static void __net_exit netdev_exit(struct net *net)
 {
-- 
1.7.0

