From f165065b5310572b5964d930867b6c0e2e1f6afd Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Wed, 12 Mar 2014 07:38:53 -0700
Subject: [PATCH 1/2] wrnote: add hooks into binfmt_elf

Add the ability to add Wind River information to core
dumps

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 fs/binfmt_elf.c |  131 ++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 129 insertions(+), 2 deletions(-)

diff --git a/fs/binfmt_elf.c b/fs/binfmt_elf.c
index 1fd8b35..b3f05e9 100644
--- a/fs/binfmt_elf.c
+++ b/fs/binfmt_elf.c
@@ -35,6 +35,9 @@
 #include <linux/coredump.h>
 #include <linux/sched.h>
 #include <linux/xattr.h>
+#ifdef CONFIG_WRNOTE
+#include <linux/wrnote.h>
+#endif
 #include <asm/uaccess.h>
 #include <asm/param.h>
 #include <asm/page.h>
@@ -1952,6 +1955,9 @@ struct elf_thread_core_info {
 	struct elf_thread_core_info *next;
 	struct task_struct *task;
 	struct elf_prstatus prstatus;
+#ifdef CONFIG_WRNOTE
+	struct memelfnote wrnote;
+#endif
 	struct memelfnote notes[0];
 };
 
@@ -1959,6 +1965,9 @@ struct elf_note_info {
 	struct elf_thread_core_info *thread;
 	struct memelfnote psinfo;
 	struct memelfnote signote;
+#ifdef CONFIG_WRNOTE
+	struct memelfnote wr[3];
+#endif
 	struct memelfnote auxv;
 	struct memelfnote files;
 	user_siginfo_t csigdata;
@@ -1999,6 +2008,9 @@ static int fill_thread_core_info(struct elf_thread_core_info *t,
 				 long signr, size_t *total)
 {
 	unsigned int i;
+#ifdef CONFIG_WRNOTE
+	int ns = 0;		/* WR note size */
+#endif
 
 	/*
 	 * NT_PRSTATUS is the one special case, because the regset data
@@ -2037,6 +2049,9 @@ static int fill_thread_core_info(struct elf_thread_core_info *t,
 			if (unlikely(ret))
 				kfree(data);
 			else {
+#ifdef CONFIG_WRNOTE
+				ns = 1;
+#endif
 				if (regset->core_note_type != NT_PRFPREG)
 					fill_note(&t->notes[i], "LINUX",
 						  regset->core_note_type,
@@ -2050,6 +2065,15 @@ static int fill_thread_core_info(struct elf_thread_core_info *t,
 			}
 		}
 	}
+#ifdef CONFIG_WRNOTE
+	if (ns) {
+		/* also add WR note */
+		ns = get_wr_note_size(NT_WR_PRSTATUS, &t->prstatus);
+		fill_note(&t->wrnote, "CORE", NT_WR_PRSTATUS, ns,
+				   get_wr_note(NT_WR_PRSTATUS, &t->prstatus));
+		*total += notesize(&t->wrnote);
+	}
+#endif
 
 	return 1;
 }
@@ -2174,6 +2198,14 @@ static int write_note_info(struct elf_note_info *info,
 			return 0;
 		if (first && !writenote(&info->signote, file, foffset))
 			return 0;
+#ifdef CONFIG_WRNOTE
+		if (first && !writenote(&info->wr[0], file, foffset))
+			return 0;
+		if (first && !writenote(&info->wr[1], file, foffset))
+			return 0;
+		if (first && !writenote(&info->wr[2], file, foffset))
+			return 0;
+#endif
 		if (first && !writenote(&info->auxv, file, foffset))
 			return 0;
 		if (first && info->files.data &&
@@ -2185,6 +2217,12 @@ static int write_note_info(struct elf_note_info *info,
 			    !writenote(&t->notes[i], file, foffset))
 				return 0;
 
+#ifdef CONFIG_WRNOTE
+		if (t->wrnote.data &&
+			!writenote(&t->wrnote, file, foffset))
+			return 0;
+#endif
+
 		first = 0;
 		t = t->next;
 	} while (t);
@@ -2220,7 +2258,11 @@ struct elf_thread_status
 #ifdef ELF_CORE_COPY_XFPREGS
 	elf_fpxregset_t xfpu;		/* ELF_CORE_XFPREG_TYPE */
 #endif
+#ifdef CONFIG_WRNOTE
+	struct memelfnote notes[4];     /* allow for wrnotes */
+#else
 	struct memelfnote notes[3];
+#endif
 	int num_notes;
 };
 
@@ -2233,6 +2275,10 @@ static int elf_dump_thread_status(long signr, struct elf_thread_status *t)
 {
 	int sz = 0;
 	struct task_struct *p = t->thread;
+#ifdef CONFIG_WRNOTE
+	int ns = 0;		/* WR note size */
+	int num_note = 0;		/* note number in array */
+#endif
 	t->num_notes = 0;
 
 	fill_prstatus(&t->prstatus, p, signr);
@@ -2243,20 +2289,50 @@ static int elf_dump_thread_status(long signr, struct elf_thread_status *t)
 	t->num_notes++;
 	sz += notesize(&t->notes[0]);
 
+#ifdef CONFIG_WRNOTE
+	num_note++;
+
+	/* also add WR note */
+
+	ns = get_wr_note_size(NT_WR_PRSTATUS, &t->prstatus);
+
+	fill_note(&t->notes[num_note], "CORE", NT_WR_PRSTATUS, ns,
+		   get_wr_note(NT_WR_PRSTATUS, &t->prstatus));
+
+	t->num_notes++;
+	sz += notesize(&t->notes[num_note]);
+	num_note++;
+#endif
 	if ((t->prstatus.pr_fpvalid = elf_core_copy_task_fpregs(p, NULL,
 								&t->fpu))) {
+#ifdef CONFIG_WRNOTE
+		fill_note(&t->notes[num_note], "CORE", NT_PRFPREG,
+			  sizeof(t->fpu), &(t->fpu));
+#else
 		fill_note(&t->notes[1], "CORE", NT_PRFPREG, sizeof(t->fpu),
 			  &(t->fpu));
+#endif
 		t->num_notes++;
+#ifdef CONFIG_WRNOTE
+		sz += notesize(&t->notes[num_note]);
+		num_note++;
+#else
 		sz += notesize(&t->notes[1]);
+#endif
 	}
 
 #ifdef ELF_CORE_COPY_XFPREGS
 	if (elf_core_copy_task_xfpregs(p, &t->xfpu)) {
+#ifdef CONFIG_WRNOTE
+		fill_note(&t->notes[num_note], "LINUX", NT_PRXFPREG,
+			  sizeof(t->xfpu), &t->xfpu);
+		sz += notesize(&t->notes[num_note]);
+#else
 		fill_note(&t->notes[2], "LINUX", ELF_CORE_XFPREG_TYPE,
 			  sizeof(t->xfpu), &t->xfpu);
-		t->num_notes++;
 		sz += notesize(&t->notes[2]);
+#endif
+		t->num_notes++;
 	}
 #endif	
 	return sz;
@@ -2283,7 +2359,11 @@ static int elf_note_info_init(struct elf_note_info *info)
 	INIT_LIST_HEAD(&info->thread_list);
 
 	/* Allocate space for ELF notes */
+#ifdef CONFIG_WRNOTE
+	info->notes = kmalloc(12 * sizeof(struct memelfnote), GFP_KERNEL);
+#else
 	info->notes = kmalloc(8 * sizeof(struct memelfnote), GFP_KERNEL);
+#endif
 	if (!info->notes)
 		return 0;
 	info->psinfo = kmalloc(sizeof(*info->psinfo), GFP_KERNEL);
@@ -2308,6 +2388,9 @@ static int fill_note_info(struct elfhdr *elf, int phdrs,
 			  siginfo_t *siginfo, struct pt_regs *regs)
 {
 	struct list_head *t;
+#ifdef CONFIG_WRNOTE
+	int ns = 0;		/* WR note size */
+#endif
 
 	if (!elf_note_info_init(info))
 		return 0;
@@ -2354,6 +2437,24 @@ static int fill_note_info(struct elfhdr *elf, int phdrs,
 		  sizeof(*info->psinfo), info->psinfo);
 
 	fill_siginfo_note(info->notes + 2, &info->csigdata, siginfo);
+
+#ifdef CONFIG_WRNOTE
+	/* add Wind River notes : kernel info */
+	ns = get_wr_note_size(NT_WR_KERNEL_INFO, NULL);
+	fill_note(info->notes + info->numnote++, "CORE", NT_WR_KERNEL_INFO, ns,
+		   get_wr_note(NT_WR_KERNEL_INFO, NULL));
+
+	/* process info */
+	ns = get_wr_note_size(NT_WR_PRPSINFO, info->psinfo);
+	fill_note(info->notes + info->numnote++, "CORE", NT_WR_PRPSINFO, ns,
+		   get_wr_note(NT_WR_PRPSINFO, info->psinfo));
+
+	/* process status */
+	ns = get_wr_note_size(NT_WR_PRSTATUS, info->prstatus);
+	fill_note(info->notes + info->numnote++, "CORE", NT_WR_PRSTATUS, ns,
+		   get_wr_note(NT_WR_PRSTATUS, info->prstatus));
+#endif
+
 	fill_auxv_note(info->notes + 3, current->mm);
 	info->numnote = 4;
 
@@ -2512,6 +2613,9 @@ static int elf_core_dump(struct coredump_params *cprm)
 	struct elf_shdr *shdr4extnum = NULL;
 	Elf_Half e_phnum;
 	elf_addr_t e_shoff;
+#if defined(CONFIG_WRNOTE) && defined(CORE_DUMP_USE_REGSET)
+	int ns = 0;		/* WR note size */
+#endif
 
 	/*
 	 * We no longer stop all VM operations.
@@ -2554,7 +2658,25 @@ static int elf_core_dump(struct coredump_params *cprm)
 	 */
 	if (!fill_note_info(elf, e_phnum, &info, cprm->siginfo, cprm->regs))
 		goto cleanup;
-
+#if defined(CONFIG_WRNOTE) && defined(CORE_DUMP_USE_REGSET)
+	/* add Wind River notes : kernel info */
+	ns = get_wr_note_size(NT_WR_KERNEL_INFO, NULL);
+	fill_note(&info.wr[0], "CORE", NT_WR_KERNEL_INFO, ns,
+		   get_wr_note(NT_WR_KERNEL_INFO, NULL));
+	info.size += notesize(&info.wr[0]);
+
+	/* process info */
+	ns = get_wr_note_size(NT_WR_PRPSINFO, info.psinfo.data);
+	fill_note(&info.wr[1], "CORE", NT_WR_PRPSINFO, ns,
+		   get_wr_note(NT_WR_PRPSINFO, info.psinfo.data));
+	info.size += notesize(&info.wr[1]);
+
+	/* process status */
+	ns = get_wr_note_size(NT_WR_PRSTATUS, &info.thread->prstatus);
+	fill_note(&info.wr[2], "CORE", NT_WR_PRSTATUS, ns,
+		   get_wr_note(NT_WR_PRSTATUS, &info.thread->prstatus));
+	info.size += notesize(&info.wr[2]);
+#endif
 	has_dumped = 1;
 
 	fs = get_fs();
@@ -2691,6 +2813,11 @@ cleanup:
 	kfree(shdr4extnum);
 	kfree(phdr4note);
 	kfree(elf);
+#ifdef CONFIG_WRNOTE
+	/* free wr notes data */
+	free_wr_note_data();
+#endif
+
 out:
 	return has_dumped;
 }
-- 
1.7.9.5

