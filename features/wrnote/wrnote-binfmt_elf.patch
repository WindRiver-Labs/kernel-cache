wrnote: add hooks into binfmt_elf

Add the ability to add Wind River information to core
dumps

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>

---
 fs/binfmt_elf.c |   67 +++++++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 64 insertions(+), 3 deletions(-)

--- a/fs/binfmt_elf.c
+++ b/fs/binfmt_elf.c
@@ -22,6 +22,9 @@
 #include <linux/string.h>
 #include <linux/file.h>
 #include <linux/fcntl.h>
+#ifdef CONFIG_WRNOTE
+#include <linux/wrnote.h>
+#endif
 #include <linux/ptrace.h>
 #include <linux/slab.h>
 #include <linux/shm.h>
@@ -1928,7 +1931,7 @@ struct elf_thread_status
 #ifdef ELF_CORE_COPY_XFPREGS
 	elf_fpxregset_t xfpu;		/* ELF_CORE_XFPREG_TYPE */
 #endif
-	struct memelfnote notes[3];
+	struct memelfnote notes[4];     /* allow for wrnotes */
 	int num_notes;
 };
 
@@ -1941,6 +1944,10 @@ static int elf_dump_thread_status(long s
 {
 	int sz = 0;
 	struct task_struct *p = t->thread;
+#ifdef CONFIG_WRNOTE
+	int	ns		= 0;		/* WR note size */
+	int	num_note	= 0;		/* note number in array */
+#endif
 	t->num_notes = 0;
 
 	fill_prstatus(&t->prstatus, p, signr);
@@ -1951,20 +1958,50 @@ static int elf_dump_thread_status(long s
 	t->num_notes++;
 	sz += notesize(&t->notes[0]);
 
+#ifdef CONFIG_WRNOTE
+	num_note ++;
+
+	/* also add WR note */
+
+	ns	= get_wr_note_size (NT_WR_PRSTATUS, &t->prstatus);
+
+	fill_note (&t->notes [num_note], "CORE", NT_WR_PRSTATUS, ns,
+		   get_wr_note (NT_WR_PRSTATUS, &t->prstatus));
+
+	t->num_notes++;
+	sz += notesize (&t->notes[num_note]);
+	num_note ++;
+#endif
 	if ((t->prstatus.pr_fpvalid = elf_core_copy_task_fpregs(p, NULL,
 								&t->fpu))) {
+#ifdef CONFIG_WRNOTE
+		fill_note(&t->notes[num_note], "CORE", NT_PRFPREG,
+			  sizeof(t->fpu), &(t->fpu));
+#else
 		fill_note(&t->notes[1], "CORE", NT_PRFPREG, sizeof(t->fpu),
 			  &(t->fpu));
+#endif
 		t->num_notes++;
+#ifdef CONFIG_WRNOTE
+		sz += notesize(&t->notes[num_note]);
+		num_note ++;
+#else
 		sz += notesize(&t->notes[1]);
+#endif
 	}
 
 #ifdef ELF_CORE_COPY_XFPREGS
 	if (elf_core_copy_task_xfpregs(p, &t->xfpu)) {
+#ifdef CONFIG_WRNOTE
+		fill_note(&t->notes[num_note], "LINUX", NT_PRXFPREG,
+			  sizeof(t->xfpu), &t->xfpu);
+		sz += notesize(&t->notes[num_note]);
+#else
 		fill_note(&t->notes[2], "LINUX", ELF_CORE_XFPREG_TYPE,
 			  sizeof(t->xfpu), &t->xfpu);
-		t->num_notes++;
 		sz += notesize(&t->notes[2]);
+#endif
+      		t->num_notes++;
 	}
 #endif	
 	return sz;
@@ -1987,7 +2024,7 @@ static int fill_note_info(struct elfhdr 
 			  struct elf_note_info *info,
 			  long signr, struct pt_regs *regs)
 {
-#define	NUM_NOTES	6
+#define	NUM_NOTES	10
 	struct list_head *t;
 
 	info->notes = NULL;
@@ -2049,6 +2086,9 @@ static int fill_note_info(struct elfhdr 
 	/* Set up header */
 	fill_elf_header(elf, phdrs, ELF_ARCH, ELF_CORE_EFLAGS, ELF_OSABI);
 
+#ifdef CONFIG_WRNOTE
+	int	ns	= 0;		/* WR note size */
+#endif
 	/*
 	 * Set up the notes in similar form to SVR4 core dumps made
 	 * with info from their /proc.
@@ -2062,6 +2102,23 @@ static int fill_note_info(struct elfhdr 
 
 	info->numnote = 2;
 
+#ifdef CONFIG_WRNOTE
+	/* add Wind River notes : kernel info */
+	ns	= get_wr_note_size (NT_WR_KERNEL_INFO, NULL);
+	fill_note (notes + numnote++, "CORE", NT_WR_KERNEL_INFO, ns,
+		   get_wr_note (NT_WR_KERNEL_INFO, NULL));
+
+	/* process info */
+	ns	= get_wr_note_size (NT_WR_PRPSINFO, psinfo);
+	fill_note (notes + numnote++, "CORE", NT_WR_PRPSINFO, ns,
+		   get_wr_note (NT_WR_PRPSINFO, psinfo));
+
+	/* process status */
+	ns	= get_wr_note_size (NT_WR_PRSTATUS, prstatus);
+	fill_note (notes + numnote++, "CORE", NT_WR_PRSTATUS, ns,
+		   get_wr_note (NT_WR_PRSTATUS, prstatus));
+#endif
+
 	fill_auxv_note(&info->notes[info->numnote++], current->mm);
 
 	/* Try to dump the FPU. */
@@ -2269,6 +2326,10 @@ static int elf_core_dump(long signr, str
 
 		DUMP_WRITE(&phdr, sizeof(phdr));
 	}
+#ifdef CONFIG_WRNOTE
+	/* free wr notes data */
+	free_wr_note_data ();
+#endif
 
 #ifdef ELF_CORE_WRITE_EXTRA_PHDRS
 	ELF_CORE_WRITE_EXTRA_PHDRS;
