From bd6a1e6ecf71105f40e83d0173f5d5bf0c1f03db Mon Sep 17 00:00:00 2001
From: Xufeng Zhang <xufeng.zhang@windriver.com>
Date: Mon, 3 Dec 2012 12:14:38 +0800
Subject: [PATCH 2/5] ocf/talitos: Update driver code so as to keep consistent with kernel

Since commit 2dc11581 "of/device: Replace struct of_device with
struct platform_device" and commit 4018294b "of: Remove duplicate
fields from of_platform_driver", the latest kernel has replaced
struct of_device with struct platform_device and do some cleanups in
struct of_platform_driver, moreover, of_platform_driver is getting
removed, and a single platform_driver can now support both devicetree
and non-devicetree use cases. However, the ocf/talitos driver didn't
update to meet the latest kernel's needs and compiling errors happen
like below:
  linux/crypto/ocf/talitos/talitos.c:158:64: warning: 'struct of_device' declared \
  inside parameter list
  linux/crypto/ocf/talitos/talitos.c:158:64: warning: its scope is only this \
  definition or declaration, which is probably not what you want
  linux/crypto/ocf/talitos/talitos.c:158:12: note: previous declaration of \
  'talitos_probe' was here
  linux/crypto/ocf/talitos/talitos.c: In function 'talitos_probe':
  linux/crypto/ocf/talitos/talitos.c:1093:32: error: dereferencing pointer to \
  incomplete type
  linux/crypto/ocf/talitos/talitos.c:1269:12: error: conflicting types \
  for 'talitos_remove'
  linux/crypto/ocf/talitos/talitos.c:159:12: note: previous declaration \
  of 'talitos_remove' was here
  linux/crypto/ocf/talitos/talitos.c: In function 'talitos_remove':
  linux/crypto/ocf/talitos/talitos.c:1275:51: error: dereferencing pointer \
  to incomplete type
  linux/crypto/ocf/talitos/talitos.c:1314:2: error: unknown field 'name' \
  specified in initializer
  linux/crypto/ocf/talitos/talitos.c:1315:2: error: unknown field 'match_table' \
  specified in initializer
  linux/crypto/ocf/talitos/talitos.c:1322:2: error: implicit declaration of function \
  'of_register_platform_driver'
  linux/crypto/ocf/talitos/talitos.c: In function 'talitos_exit':
  linux/crypto/ocf/talitos/talitos.c:1327:2: error: implicit declaration of function \
  'of_unregister_platform_driver'

Update the ocf/talitos driver code to fix the compiling errors and also
update the of_match_table because the compatible name in dts is not generally
called 'talitos'.

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
 crypto/ocf/talitos/talitos.c |   35 +++++++++++++++++++----------------
 1 files changed, 19 insertions(+), 16 deletions(-)

diff --git a/crypto/ocf/talitos/talitos.c b/crypto/ocf/talitos/talitos.c
index 54cb8c0..4cd9eab 100644
--- a/crypto/ocf/talitos/talitos.c
+++ b/crypto/ocf/talitos/talitos.c
@@ -155,8 +155,9 @@ static void talitos_reset_device_master(struct talitos_softc *sc);
 static void talitos_reset_device(struct talitos_softc *sc);
 static void talitos_errorprocessing(struct talitos_softc *sc);
 #ifdef CONFIG_PPC
-static int talitos_probe(struct of_device *ofdev, const struct of_device_id *match);
-static int talitos_remove(struct of_device *ofdev);
+static int talitos_probe(struct platform_device *pdev,
+				const struct of_device_id *match);
+static int talitos_remove(struct platform_device *pdev);
 #else
 static int talitos_probe(struct platform_device *pdev);
 static int talitos_remove(struct platform_device *pdev);
@@ -1082,7 +1083,8 @@ talitos_reset_device(struct talitos_softc *sc)
 /* Set up the crypto device structure, private data,
  * and anything else we need before we start */
 #ifdef CONFIG_PPC
-static int talitos_probe(struct of_device *ofdev, const struct of_device_id *match)
+static int talitos_probe(struct platform_device *pdev,
+				const struct of_device_id *match)
 #else
 static int talitos_probe(struct platform_device *pdev)
 #endif
@@ -1090,8 +1092,8 @@ static int talitos_probe(struct platform_device *pdev)
 	struct talitos_softc *sc = NULL;
 	struct resource *r;
 #ifdef CONFIG_PPC
-	struct device *device = &ofdev->dev;
-	struct device_node *np = ofdev->node;
+	struct device *device = &pdev->dev;
+	struct device_node *np = pdev->dev.of_node;
 	const unsigned int *prop;
 	int err;
 	struct resource res;
@@ -1266,13 +1268,13 @@ out:
 }
 
 #ifdef CONFIG_PPC
-static int talitos_remove(struct of_device *ofdev)
+static int talitos_remove(struct platform_device *pdev)
 #else
 static int talitos_remove(struct platform_device *pdev)
 #endif
 {
 #ifdef CONFIG_PPC
-	struct talitos_softc *sc = dev_get_drvdata(&ofdev->dev);
+	struct talitos_softc *sc = dev_get_drvdata(&pdev->dev);
 #else
 	struct talitos_softc *sc = platform_get_drvdata(pdev);
 #endif
@@ -1301,30 +1303,31 @@ static int talitos_remove(struct platform_device *pdev)
 
 #ifdef CONFIG_PPC
 static struct of_device_id talitos_match[] = {
-	{
-		.type = "crypto",
-		.compatible = "talitos",
-	},
+	{ .compatible = "fsl,sec3.0", },
+	{ .compatible = "fsl,sec2.0", },
 	{},
 };
 
 MODULE_DEVICE_TABLE(of, talitos_match);
 
-static struct of_platform_driver talitos_driver = {
-	.name		= DRV_NAME,
-	.match_table	= talitos_match,
+static struct platform_driver talitos_driver = {
 	.probe		= talitos_probe,
 	.remove		= talitos_remove,
+	.driver		= {
+			.name = DRV_NAME,
+			.owner = THIS_MODULE,
+			.of_match_table = talitos_match,
+	},
 };
 
 static int __init talitos_init(void)
 {
-	return of_register_platform_driver(&talitos_driver);
+	return platform_driver_register(&talitos_driver);
 }
 
 static void __exit talitos_exit(void)
 {
-	of_unregister_platform_driver(&talitos_driver);
+	platform_driver_unregister(&talitos_driver);
 }
 #else
 /* Structure for a platform device driver */
-- 
1.7.0

