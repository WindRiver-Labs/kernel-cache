From 53f81f026469823e139a10b07b07c2bf16b893af Mon Sep 17 00:00:00 2001
From: "Ooi, Joyce" <joyce.ooi@intel.com>
Date: Tue, 25 Oct 2016 10:10:05 +0800
Subject: [PATCH 26/41] hid: intel-ish-hid: ipc: Fix driver reinit failure

commit 70b638c23b57a599bf244d4b513be13fb4cf4a5d from
git://git.yoctoproject.org/linux-yocto-4.1

When built as a module, modprobe followed by rmmod can fail because
DMA was still active. So to fix this, DMA needs to be disabled during
module exit.

This change disables DMA during modules exit and change the ISH PCI
device status to D3.

Signed-off-by: Even Xu <even.xu@intel.com>
Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Signed-off-by: Ooi, Joyce <joyce.ooi@intel.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/hid/intel-ish-hid/ipc/ipc.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/hid/intel-ish-hid/ipc/ipc.c b/drivers/hid/intel-ish-hid/ipc/ipc.c
index 8f933cbe1b6c..dff0ea0627c2 100644
--- a/drivers/hid/intel-ish-hid/ipc/ipc.c
+++ b/drivers/hid/intel-ish-hid/ipc/ipc.c
@@ -741,8 +741,22 @@ struct ishtp_device *ish_dev_init(struct pci_dev *pdev)
 	return dev;
 }
 
-void	ish_device_disable(struct ishtp_device *dev)
+void ish_device_disable(struct ishtp_device *dev)
 {
+	struct pci_dev *pdev = dev->pdev;
+
+	if (!pdev)
+		return;
+
+	/* Must disable dma before disable ish device */
+	if (ish_disable_dma(dev)) {
+		dev_err(&pdev->dev,
+			"Can't disable - stuck with DMA in-progress\n");
+		return;
+	}
+
+	pci_set_power_state(pdev, PCI_D3hot);
+
 	dev->dev_state = ISHTP_DEV_DISABLED;
 	ish_clr_host_rdy(dev);
 }
-- 
2.7.4

