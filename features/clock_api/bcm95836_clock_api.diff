Add clock API support for broadcom_bcm95836cpci.

wrs_severity: critical
wrs_scope: bsp

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 arch/mips/brcm/bcm947xx/time.c |   41 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 41 insertions(+)

--- a/arch/mips/brcm/bcm947xx/time.c
+++ b/arch/mips/brcm/bcm947xx/time.c
@@ -34,6 +34,36 @@
 #include <asm/brcm/sbmips.h>
 #include <asm/brcm/bcmtime.h>
 
+#ifdef CONFIG_HWTIMER_HOOKS
+#include <linux/hwtimer.h>
+
+static int bcm95836_timer_get_freq(void)
+{
+	return HZ;
+}
+
+static struct hwtimer_data bcm95836_timer_data = {
+	name: "BCM95836 CPCI timer",
+	desc: "BCM95836_CPCI Kernel jiffy timer",
+	def_freq: HZ,
+	min_freq: HZ,
+	max_freq: HZ
+};
+
+static DECLARE_HWTIMER_LOCK(bcm95836_timer_lock);
+
+static struct hwtimer bcm95836_timer = {
+	data: &bcm95836_timer_data,
+	set_freq: NULL,
+	get_freq: bcm95836_timer_get_freq,
+	start: NULL,
+	stop: NULL,
+	lock: &bcm95836_timer_lock,
+	hook: NULL,
+	hook_data: NULL
+};
+#endif	/* CONFIG_HWTIMER_HOOKS */
+
 /* Convenience */
 #define sbh bcm947xx_sbh
 #define sbh_lock bcm947xx_sbh_lock
@@ -93,6 +123,13 @@ static irqreturn_t
 /* bcm947xx_timer_interrupt(int irq, void *dev_id, struct pt_regs *regs) */
 bcm947xx_timer_interrupt(int irq, void *dev_id)
 {
+#ifdef CONFIG_HWTIMER_HOOKS
+	spin_lock(bcm95836_timer.lock);
+	if (bcm95836_timer.hook != NULL) {
+		(bcm95836_timer.hook) (bcm95836_timer.hook_data);
+	}
+	spin_unlock(bcm95836_timer.lock);
+#endif	/* CONFIG_HWTIMER_HOOKS */
 
 	/* Generic MIPS timer code */
 	/* timer_interrupt(irq, dev_id, regs); */
@@ -124,6 +161,10 @@ static struct irqaction bcm947xx_timer_i
 /* void __init bcm947xx_timer_setup(struct irqaction *irq) */
 void __init plat_timer_setup(struct irqaction *irq)
 {
+#ifdef CONFIG_HWTIMER_HOOKS
+	register_hwtimer(&bcm95836_timer);
+#endif /* CONFIG_HWTIMER_HOOKS */
+
 	/* Enable the timer interrupt */
 	setup_irq(7, &bcm947xx_timer_irqaction);
 }
