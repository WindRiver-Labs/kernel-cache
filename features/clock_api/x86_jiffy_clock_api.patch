From: Paul Gortmaker <paul.gortmaker@windriver.com>
Subject: [PATCH] import x86_jiffy_clock_api.patch

Use jiffy timer for clock API on RT kernels.

---
 arch/x86/kernel/time_32.c |   44 ++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 44 insertions(+), 0 deletions(-)

diff --git a/arch/x86/kernel/time_32.c b/arch/x86/kernel/time_32.c
index ffe3c66..48dcaa8 100644
--- a/arch/x86/kernel/time_32.c
+++ b/arch/x86/kernel/time_32.c
@@ -39,6 +39,42 @@
 
 #include "do_timer.h"
 
+#if defined(CONFIG_HWTIMER_HOOKS) && defined(CONFIG_PREEMPT_RT)
+#define HWTIMER_USE_JIFFY 1
+#endif
+
+#ifdef HWTIMER_USE_JIFFY
+
+#include <linux/hwtimer.h>
+
+static int x86_timer_get_freq(void)
+{
+	return HZ;
+}
+
+static struct hwtimer_data x86_timer_data = {
+	name: "x86 timer",
+	desc: "x86 kernel jiffy timer",
+	def_freq: HZ,
+	min_freq: HZ,
+	max_freq: HZ
+};
+
+static DECLARE_HWTIMER_LOCK(x86_timer_lock);
+
+static struct hwtimer x86_timer = {
+	data: &x86_timer_data,
+	set_freq: NULL,
+	get_freq: x86_timer_get_freq,
+	start: NULL,
+	stop: NULL,
+	lock: &x86_timer_lock,
+	hook: NULL,
+	hook_data: NULL
+};
+
+#endif 	/* USE JIFFY */
+
 int timer_ack;
 
 unsigned long profile_pc(struct pt_regs *regs)
@@ -94,6 +130,11 @@ irqreturn_t timer_interrupt(int irq, void *dev_id)
 
 	do_timer_interrupt_hook();
 
+#if defined(HWTIMER_USE_JIFFY)
+	if (x86_timer.hook != NULL)
+		(x86_timer.hook) (x86_timer.hook_data);
+#endif
+
 	if (MCA_bus) {
 		/* The PS/2 uses level-triggered interrupts.  You can't
 		turn them off, nor would you want to (any attempt to
@@ -132,4 +173,7 @@ void __init time_init(void)
 	pre_time_init_hook();
 	tsc_init();
 	late_time_init = choose_time_init();
+#if defined(HWTIMER_USE_JIFFY)
+	 register_hwtimer(&x86_timer);
+#endif
 }
-- 
1.5.5.1

