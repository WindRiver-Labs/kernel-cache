From 9571a5bb7c4be285e909cf38e8f1804dd4ee9412 Mon Sep 17 00:00:00 2001
From: Liu Ying <Ying.Liu@freescale.com>
Date: Thu, 26 Nov 2015 16:11:17 +0800
Subject: [PATCH 1109/1691] MLK-11911-3 mxc IPUv3: disp: Correct display ID
 check in ipu_uninit_sync_panel()

commit 9571a5bb7c4be285e909cf38e8f1804dd4ee9412 from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

This patch fixes the following issue reported by Coverity:
Constant expression result (CONSTANT_EXPRESSION_RESULT)
always_true_or: The "or" condition disp != 0 || disp != 1 will always be true
because disp cannot be equal to two different values at the same time, so it
must be not equal to at least one of them.
	if ((disp != 0) || (disp != 1))
		return;

Signed-off-by: Liu Ying <Ying.Liu@freescale.com>
---
 drivers/mxc/ipu3/ipu_disp.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/mxc/ipu3/ipu_disp.c b/drivers/mxc/ipu3/ipu_disp.c
index fa73bfa..f2ccb1e 100644
--- a/drivers/mxc/ipu3/ipu_disp.c
+++ b/drivers/mxc/ipu3/ipu_disp.c
@@ -1583,7 +1583,7 @@ void ipu_uninit_sync_panel(struct ipu_soc *ipu, int disp)
 	uint32_t reg;
 	uint32_t di_gen;
 
-	if ((disp != 0) || (disp != 1))
+	if (disp != 0 && disp != 1)
 		return;
 
 	mutex_lock(&ipu->mutex_lock);
-- 
1.9.1

