From f3953ebc40725d0f61f2fd72c022c310b15e602d Mon Sep 17 00:00:00 2001
From: wqyoung <quanyang.wang@windriver.com>
Date: Fri, 17 Feb 2017 15:35:29 +0800
Subject: [PATCH] mxc IPUv3: common: avoid misoperation on the global string
 array

According to the C reference manual, whether identical string literals are
distinct is implementation defined, and the behavior of a program that attempts
to alter a string literal is undefined. And it will result an unpredictable error.
So change the pointer of string array instead of alterring a string literal.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/mxc/ipu3/ipu_common.c | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/drivers/mxc/ipu3/ipu_common.c b/drivers/mxc/ipu3/ipu_common.c
index c38f882..3287828 100644
--- a/drivers/mxc/ipu3/ipu_common.c
+++ b/drivers/mxc/ipu3/ipu_common.c
@@ -147,11 +147,11 @@ static int ipu_clk_setup_enable(struct ipu_soc *ipu)
 	char pixel_clk_1_sel[] = "ipu1_pclk1_sel";
 	char pixel_clk_0_div[] = "ipu1_pclk0_div";
 	char pixel_clk_1_div[] = "ipu1_pclk1_div";
-	char *ipu_pixel_clk_sel[] = { "ipu1", "ipu1_di0", "ipu1_di1", };
+	char *ipu1_pixel_clk_sel[] = { "ipu1", "ipu1_di0", "ipu1_di1", };
+	char *ipu2_pixel_clk_sel[] = { "ipu2", "ipu2_di0", "ipu2_di1", };
+	char **ipu_pixel_clk_sel;
-	char *pclk_sel;
 	struct clk *clk;
 	int ret;
-	int i;
 
 	pixel_clk_0[3] += ipu->id;
 	pixel_clk_1[3] += ipu->id;
@@ -159,15 +159,17 @@ static int ipu_clk_setup_enable(struct ipu_soc *ipu)
 	pixel_clk_1_sel[3] += ipu->id;
 	pixel_clk_0_div[3] += ipu->id;
 	pixel_clk_1_div[3] += ipu->id;
-	for (i = 0; i < ARRAY_SIZE(ipu_pixel_clk_sel); i++) {
-		pclk_sel = ipu_pixel_clk_sel[i];
-		pclk_sel[3] += ipu->id;
-	}
+
+	if (ipu->id == 0)
+		ipu_pixel_clk_sel = ipu1_pixel_clk_sel;
+	else
+		ipu_pixel_clk_sel = ipu2_pixel_clk_sel;
+
 	dev_dbg(ipu->dev, "ipu_clk = %lu\n", clk_get_rate(ipu->ipu_clk));
 
 	clk = clk_register_mux_pix_clk(ipu->dev, pixel_clk_0_sel,
 			(const char **)ipu_pixel_clk_sel,
-			ARRAY_SIZE(ipu_pixel_clk_sel),
+			ARRAY_SIZE(ipu1_pixel_clk_sel),
 			0, ipu->id, 0, 0);
 	if (IS_ERR(clk)) {
 		dev_err(ipu->dev, "clk_register mux di0 failed");
@@ -176,7 +178,7 @@ static int ipu_clk_setup_enable(struct ipu_soc *ipu)
 	ipu->pixel_clk_sel[0] = clk;
 	clk = clk_register_mux_pix_clk(ipu->dev, pixel_clk_1_sel,
 			(const char **)ipu_pixel_clk_sel,
-			ARRAY_SIZE(ipu_pixel_clk_sel),
+			ARRAY_SIZE(ipu1_pixel_clk_sel),
 			0, ipu->id, 1, 0);
 	if (IS_ERR(clk)) {
 		dev_err(ipu->dev, "clk_register mux di1 failed");
-- 
1.9.1

