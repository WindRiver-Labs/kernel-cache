From 0f57b65dc33fbe7b4cbbd69c04bd63686617101a Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Fri, 6 Nov 2015 15:33:17 +0800
Subject: [PATCH 1063/1691] MLK-11831-2 usb: chipidea: imx: add
 request{release}_bus_freq

commit 0f57b65dc33fbe7b4cbbd69c04bd63686617101a from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

When the usb in idle, it calls release_bus_req.
When the usb is going to use, it calls request_bus_req.
This is a rework patch of ENGR00286459 and ENGR00286926.

Signed-off-by: Peter Chen <peter.chen@freescale.com>
Signed-off-by: Li Jun <jun.li@freescale.com>
---
 drivers/usb/chipidea/ci_hdrc_imx.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/chipidea/ci_hdrc_imx.c b/drivers/usb/chipidea/ci_hdrc_imx.c
index 14f8505..e32762d 100644
--- a/drivers/usb/chipidea/ci_hdrc_imx.c
+++ b/drivers/usb/chipidea/ci_hdrc_imx.c
@@ -23,6 +23,7 @@
 #include <linux/regmap.h>
 #include <linux/mfd/syscon.h>
 #include <linux/regulator/consumer.h>
+#include <linux/busfreq-imx.h>
 
 #include "ci.h"
 #include "ci_hdrc_imx.h"
@@ -493,9 +494,10 @@ static int ci_hdrc_imx_probe(struct platform_device *pdev)
 	if (ret)
 		return ret;
 
+	request_bus_freq(BUS_FREQ_HIGH);
 	ret = imx_prepare_enable_clks(&pdev->dev);
 	if (ret)
-		return ret;
+		goto err_bus_freq;
 
 	data->phy = devm_usb_get_phy_by_phandle(&pdev->dev, "fsl,usbphy", 0);
 	if (IS_ERR(data->phy)) {
@@ -618,6 +620,8 @@ disable_hsic_regulator:
 		ret = regulator_disable(data->hsic_pad_regulator);
 err_clk:
 	imx_disable_unprepare_clks(&pdev->dev);
+err_bus_freq:
+	release_bus_freq(BUS_FREQ_HIGH);
 	return ret;
 }
 
@@ -632,6 +636,7 @@ static int ci_hdrc_imx_remove(struct platform_device *pdev)
 	}
 	ci_hdrc_remove_device(data->ci_pdev);
 	imx_disable_unprepare_clks(&pdev->dev);
+	release_bus_freq(BUS_FREQ_HIGH);
 	if (data->hsic_pad_regulator)
 		regulator_disable(data->hsic_pad_regulator);
 
@@ -656,6 +661,7 @@ static int imx_controller_suspend(struct device *dev)
 	}
 
 	imx_disable_unprepare_clks(dev);
+	release_bus_freq(BUS_FREQ_HIGH);
 	data->in_lpm = true;
 
 	return 0;
@@ -673,6 +679,7 @@ static int imx_controller_resume(struct device *dev)
 		return 0;
 	}
 
+	request_bus_freq(BUS_FREQ_HIGH);
 	ret = imx_prepare_enable_clks(dev);
 	if (ret)
 		return ret;
-- 
1.9.1

