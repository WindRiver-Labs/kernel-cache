From a5fdab9f1d971908063f1d68f1385d239d97c679 Mon Sep 17 00:00:00 2001
From: Li Jun <jun.li@freescale.com>
Date: Thu, 2 Jul 2015 08:13:39 +0800
Subject: [PATCH 0271/1691] MLK-11183 usb: chipidea: otg: complete state
 machine before cancel hrtimer

commit a5fdab9f1d971908063f1d68f1385d239d97c679 from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

When do usb driver module load and unload loop test for A-device, the
hrtimer may be cancelled during otg state machine running, so after
the hrtimer is cancelled, the otg state machine may start it again by
adding a new timer, this will cause the hrtimer will be active after
its function memory is freed by module unload. This patch is to fix it
by trying to hold the fsm mutex lock before setting otg state to be
undefined, then otg hrtimer will be cancelled after current otg fsm
transition completes, and no new timer will be added.

Signed-off-by: Li Jun <jun.li@freescale.com>
(cherry picked from commit 8c3ab4f22bc34675aeb8f9c62e69b450a179be0f)
(cherry picked from commit 95c8590c5232eeb9d054ac7504455a90a133f05a)
---
 drivers/usb/chipidea/otg_fsm.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/chipidea/otg_fsm.c b/drivers/usb/chipidea/otg_fsm.c
index d0d9cda..1be81b4 100644
--- a/drivers/usb/chipidea/otg_fsm.c
+++ b/drivers/usb/chipidea/otg_fsm.c
@@ -954,6 +954,10 @@ void ci_hdrc_otg_fsm_remove(struct ci_hdrc *ci)
 {
 	enum otg_fsm_timer i;
 
+	mutex_lock(&ci->fsm.lock);
+	ci->fsm.otg->state = OTG_STATE_UNDEFINED;
+	mutex_unlock(&ci->fsm.lock);
+
 	for (i = 0; i < NUM_OTG_FSM_TIMERS; i++)
 		otg_del_timer(&ci->fsm, i);
 
@@ -965,7 +969,6 @@ void ci_hdrc_otg_fsm_remove(struct ci_hdrc *ci)
 
 	sysfs_remove_group(&ci->dev->kobj, &inputs_attr_group);
 	del_timer_sync(&ci->hnp_polling_timer);
-	ci->fsm.otg->state = OTG_STATE_UNDEFINED;
 }
 
 /* Restart OTG fsm if resume from power lost */
-- 
1.9.1

