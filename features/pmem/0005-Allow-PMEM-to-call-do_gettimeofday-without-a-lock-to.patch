From: WR Support<support@windriver.com>
Date: Wed, 15 Jul 2015 16:13:54 -0500
Subject: [PATCH 5/5] Allow PMEM to call do_gettimeofday without a lock to prevent
 dead lock

Bellow is a trace which shows printk() hanging due to PMEM dead
locking when trying to lookup the time to write a time stamp.

The time stamp is only needed for the human parsible logging
information.  Linear log order and lock free access to the time is
required for PMEM to not block, similar to a console write.

0 getnstimeofday (ts=0x8049db68)
    at kernel/time/timekeeping.c:253
1 0x80051218 in do_gettimeofday (tv=0x8049db88)
    at kernel/time/timekeeping.c:329
2 0x800b1e80 in pmem_write_log_desc (handle=<value optimized out>,
    at mm/pmem/io.c:427
3 pmem_write_data (handle=<value optimized out>,
    at mm/pmem/io.c:502
4 0x8002bd40 in _call_console_drivers (start=13163, end=13220,
    at kernel/printk.c:584
5 0x8002bf14 in call_console_drivers ()
    at kernel/printk.c:628
6 release_console_sem ()
    at kernel/printk.c:1247
7 0x8002c6b4 in vprintk (fmt=<value optimized out>, args=0x80471ff8)
    at kernel/printk.c:974
8 0x8037d450 in printk (fmt=<value optimized out>)
    at kernel/printk.c:776
9 0x80052df0 in second_overflow (secs=<value optimized out>)
    at kernel/time/ntp.c:214
10 0x800518dc in logarithmic_accumulation ()
    at kernel/time/timekeeping.c:817
11 update_wall_time ()
    at kernel/time/timekeeping.c:883
12 0x80038e84 in do_timer (ticks=<value optimized out>)
    at kernel/timer.c:1256
13 0x80056df0 in tick_do_update_jiffies64 (timer=0x80473d20)
    at kernel/time/tick-sched.c:78
14 tick_sched_timer (timer=0x80473d20)
    at kernel/time/tick-sched.c:695
15 0x8004a678 in __run_hrtimer (timer=0x80473d20, now=<value optimized out>)
    at kernel/hrtimer.c:1258
16 0x8004b508 in hrtimer_interrupt (dev=<value optimized out>)
    at kernel/hrtimer.c:1343
17 0x8000cabc in native_timer_interrupt (regs=0x8049dee0)
    at arch/powerpc/kernel/time.c:671
18 0x8000befc in timer_interrupt (regs=<value optimized out>)
    at arch/powerpc/kernel/time.c:620
19 0x80010960 in ret_from_except_full ()

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
---
 include/linux/time.h      |    3 +++
 kernel/time/timekeeping.c |   21 +++++++++++++++++++++
 mm/pmem/io.c              |    2 +-
 3 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/include/linux/time.h b/include/linux/time.h
index 4596f9c..dfb9554 100644
--- a/include/linux/time.h
+++ b/include/linux/time.h
@@ -157,6 +157,9 @@ extern u32 arch_gettimeoffset(void);
 static inline u32 arch_gettimeoffset(void) { return 0; }
 #endif
 
+#ifdef CONFIG_PMEM
+extern void do_pmem_gettimeofday(struct timeval *tv);
+#endif
 extern void do_gettimeofday(struct timeval *tv);
 extern int do_settimeofday(struct timespec *tv);
 extern int do_sys_settimeofday(struct timespec *tv, struct timezone *tz);
diff --git a/kernel/time/timekeeping.c b/kernel/time/timekeeping.c
index de1d576..57f9027 100644
--- a/kernel/time/timekeeping.c
+++ b/kernel/time/timekeeping.c
@@ -331,6 +331,27 @@ void do_gettimeofday(struct timeval *tv)
 	tv->tv_usec = now.tv_nsec/1000;
 }
 
+#ifdef CONFIG_PMEM
+/* Allow PMEM access to gettimeofday even with a lock held */
+void do_pmem_gettimeofday(struct timeval *tv)
+{
+	unsigned ret = ACCESS_ONCE(xtime_lock.sequence);
+	if (unlikely(ret & 1)) {
+		struct timespec now;
+		s64 nsecs;
+		now = xtime;
+		nsecs = timekeeping_get_ns();
+		nsecs += arch_gettimeoffset();
+		timespec_add_ns(&now, nsecs);
+		tv->tv_sec = now.tv_sec;
+		tv->tv_usec = now.tv_nsec/1000;
+	} else {
+		do_gettimeofday(tv);
+	}
+}
+EXPORT_SYMBOL(do_pmem_gettimeofday);
+#endif
+
 EXPORT_SYMBOL(do_gettimeofday);
 /**
  * do_settimeofday - Sets the time of day
diff --git a/mm/pmem/io.c b/mm/pmem/io.c
index bab1ba0..c15ed82 100644
--- a/mm/pmem/io.c
+++ b/mm/pmem/io.c
@@ -424,7 +424,7 @@ static int pmem_write_log_desc(struct region_handle *hdl, void *region_data,
 	spin_unlock_irqrestore(&hdl->elem->data_lock, flags);
 
 	/* Update the new descriptor */
-	do_gettimeofday(&tv);
+	do_pmem_gettimeofday(&tv);
 #ifdef	SUPPORT_HRTIME
 	log_desc->data.hrtime = gethrtime();
 #else
-- 
1.7.9.5

