From: Liming Wang <liming.wang@windriver.com>
Subject: [PATCH] ftrace: deal with endian for recordmcount.pl.

Because mips and arm has different endian, we must deal with
endian problem. We use objdump to detect object file's endian.

Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 scripts/recordmcount.pl |   37 +++++++++++++++++++++++++++++++++++++
 1 files changed, 37 insertions(+), 0 deletions(-)

diff --git a/scripts/recordmcount.pl b/scripts/recordmcount.pl
index 4eb0b2f..115a1e6 100755
--- a/scripts/recordmcount.pl
+++ b/scripts/recordmcount.pl
@@ -149,6 +149,23 @@ if ($arch eq "x86") {
     }
 }
 
+open(IN, "$objdump -p $inputfile|") || die "error running $objdump";
+
+my $endian = "";
+
+while (<IN>) {
+	next if /^(\s)*$/;
+	s/^.*file format //g;
+	if (/big/) {
+		$endian = "big";
+	} elsif (/little/) {
+		$endian = "little";
+	}
+	last;
+}
+close(IN);
+
+
 #
 # We base the defaults off of i386, the other archs may
 # feel free to change them in the below if statements.
@@ -201,9 +218,29 @@ if ($arch eq "x86_64") {
     $alignment = 2;
     $section_type = '%progbits';
 
+    # arm default is little endian
+    if ($endian eq "big") {
+            $ld .= " -m armelfb_linux_eabi";
+            $cc .= " -mbig-endian";
+    }
+
 } elsif ($arch eq "mips") {
     $mcount_regex = "^\\s*([0-9a-fA-F]+):.*\\s_mcount\$";
 
+    if ($bits == 64) {
+        $type = ".quad";
+        $alignment = 8;
+
+	# mips default is big endian
+        $ld .= " -m elf64btsmip";
+        $cc .= " -mabi=64";
+
+        if ($endian eq "little") {
+            $ld .= " -m elf64ltsmip";
+            $cc .= " -mabi=64 -mel";
+        }
+    }
+
 } else {
     die "Arch $arch is not supported with CONFIG_FTRACE_MCOUNT_RECORD";
 }
