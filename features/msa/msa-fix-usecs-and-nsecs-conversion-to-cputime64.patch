From 779049f4421a2f2ffc6cc90b7f3e05e19da576ae Mon Sep 17 00:00:00 2001
From: "Hong H. Pham" <hong.pham@windriver.com>
Date: Thu, 31 Jan 2013 08:45:26 -0500
Subject: [PATCH] msa: fix usecs and nsecs conversion to cputime64

Without MSA enabled, a cputime denotes a time unit that is equivalent
to one jiffy.  With MSA enabled, a cputime is one nanosecond.

Fix nsecs_to_cputime64() and usecs_to_cputime64() when MSA is enabled
to not use jiffies in the conversion, as a cputime is no longer a jiffy.
Using jiffies in the calculation causes the cputime to be scaled by
(CONFIG_HZ / 1000000000).

In tickless timer mode (CONFIG_NO_HZ), /proc/stat uses get_idle_time()
and get_iowait_time() to get the CPU idle and IO wait time.  These
functions use usecs_to_cputime64() so /proc/stat will report a CPU idle
and IO wait time that is scaled by USER_HZ / (CONFIG_HZ / 1000000000).
For systems that have not been up for a very long time, the CPU idle and
IO wait time will truncate to zero.  A side effect is that the system load
will show all CPUs as 100% loaded, since there is virtually no idle time.

Signed-off-by: Hong H. Pham <hong.pham@windriver.com>
---
 include/asm-generic/cputime_msa.h |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/include/asm-generic/cputime_msa.h b/include/asm-generic/cputime_msa.h
index b7492df..be7083b 100644
--- a/include/asm-generic/cputime_msa.h
+++ b/include/asm-generic/cputime_msa.h
@@ -35,10 +35,8 @@ typedef u64 cputime64_t;
 #define cputime64_to_jiffies64(__ct)	(__ct)
 #define jiffies64_to_cputime64(__jif)	(__jif)
 #define cputime_to_cputime64(__ct)	(__ct)
-#define nsecs_to_cputime64(__ct)	\
-	jiffies64_to_cputime64(nsecs_to_jiffies64(__ct))
-#define usecs_to_cputime64(__ct)	\
-	jiffies64_to_cputime64(nsecs_to_jiffies64((__ct)*1000))
+#define nsecs_to_cputime64(__nsecs)	((cputime64_t)(__nsecs))
+#define usecs_to_cputime64(__usecs)	((cputime64_t)(__usecs * NSEC_PER_USEC))
 
 /*
  * Convert cputime to microseconds
-- 
1.7.9.7

