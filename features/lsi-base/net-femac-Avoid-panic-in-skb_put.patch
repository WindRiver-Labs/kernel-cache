From 9f90492c19aa2f0e5cb5f9f27ca7a5cebe643e10 Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Tue, 25 Aug 2015 14:11:36 +0800
Subject: [PATCH 09/68] net: femac: Avoid panic in skb_put()

the patch comes from:
git://git.yoctoproject.org/linux-yocto-3.10
commit 4734c84cb052db46de37f8e0ceb351f4ea946f35 upstream

On very rare occations the femac_rx_packet() will overrun the sk_buff causuing
skb_put() to panic. To current date, we have only had one reported case which
makes it hard to diagnose. This patch is not a proper solution, it is a step on
the way to get some more information on the real issue. To avoid painc from
skb_put(), we make sure there is tailroom in the skb before adding more data to
it, and emit an error log if the buffer was full.

Signed-off-by: Anders Berg <anders.berg@avagotech.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
Signed-off-by: Li Wang <li.wang@windriver.com>
---
 drivers/net/ethernet/lsi/lsi_acp_net.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/lsi/lsi_acp_net.c b/drivers/net/ethernet/lsi/lsi_acp_net.c
index 74b7329..e858d5b 100644
--- a/drivers/net/ethernet/lsi/lsi_acp_net.c
+++ b/drivers/net/ethernet/lsi/lsi_acp_net.c
@@ -749,6 +749,7 @@ static void lsinet_rx_packet(struct net_device *dev)
 	while (0 < queue_initialized(queue, pdata->rx_tail_copy,
 				     pdata->rx_num_desc)) {
 
+		if (skb_tailroom(sk_buff) >= descriptor.pdu_length)
 		{
 			unsigned char *buffer;
 			buffer = skb_put(sk_buff, descriptor.pdu_length);
@@ -756,6 +757,12 @@ static void lsinet_rx_packet(struct net_device *dev)
 			       (void *)(descriptor.host_data_memory_pointer +
 				 pdata->dma_alloc_offset_rx),
 			       descriptor.pdu_length);
+		} else {
+			pr_err("%s: PDU overrun (len %u/%u, err %d)\n",
+			       LSI_DRV_NAME,
+			       descriptor.pdu_length,
+			       bytes_copied,
+			       descriptor.error);
 		}
 		bytes_copied += descriptor.pdu_length;
 		descriptor.data_transfer_length = pdata->rx_buf_per_desc;
-- 
1.7.5.4

