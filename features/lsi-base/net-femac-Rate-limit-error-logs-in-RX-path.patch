From 9d6fc544b8eb142ed8a2e9ebc16d617cb2e6f0ff Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Tue, 25 Aug 2015 15:03:51 +0800
Subject: [PATCH 24/68] net: femac: Rate limit error logs in RX path

the patch comes from:
git://git.yoctoproject.org/linux-yocto-3.10
commit e168c71cbe7b27c40a0076b75bd7eb2b45b7162c upstream

Change the log messages used in the RX path to be rate limited to avoid
excessive log outputs in overload situations.

Signed-off-by: Anders Berg <anders.berg@intel.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
Signed-off-by: Li Wang <li.wang@windriver.com>
---
 drivers/net/ethernet/lsi/lsi_acp_net.c |   18 +++++++++---------
 1 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/lsi/lsi_acp_net.c b/drivers/net/ethernet/lsi/lsi_acp_net.c
index 5c6d361..82be668 100644
--- a/drivers/net/ethernet/lsi/lsi_acp_net.c
+++ b/drivers/net/ethernet/lsi/lsi_acp_net.c
@@ -733,8 +733,9 @@ static void lsinet_rx_packet(struct net_device *dev)
 	sk_buff = dev_alloc_skb(LSINET_MAX_MTU);
 
 	if ((struct sk_buff *)0 == sk_buff) {
-		pr_err("%s: dev_alloc_skb() failed! Dropping packet.\n",
-		       LSI_DRV_NAME);
+		pr_info_ratelimited("%s: No buffer, packet dropped.\n",
+				    LSI_DRV_NAME);
+		pdata->stats.rx_dropped++;
 		return;
 	}
 
@@ -749,8 +750,7 @@ static void lsinet_rx_packet(struct net_device *dev)
 	while (0 < queue_initialized(queue, pdata->rx_tail_copy,
 				     pdata->rx_num_desc)) {
 
-		if (skb_tailroom(sk_buff) >= descriptor.pdu_length)
-		{
+		if (skb_tailroom(sk_buff) >= descriptor.pdu_length) {
 			unsigned char *buffer;
 			buffer = skb_put(sk_buff, descriptor.pdu_length);
 			memcpy((void *)buffer,
@@ -758,11 +758,11 @@ static void lsinet_rx_packet(struct net_device *dev)
 				 pdata->dma_alloc_offset_rx),
 			       descriptor.pdu_length);
 		} else {
-			pr_err("%s: PDU overrun (len %u/%u, err %d)\n",
-			       LSI_DRV_NAME,
-			       descriptor.pdu_length,
-			       bytes_copied,
-			       descriptor.error);
+			pr_err_ratelimited("%s: PDU overrun (%u/%u, %d)\n",
+					   LSI_DRV_NAME,
+					   descriptor.pdu_length,
+					   bytes_copied,
+					   descriptor.error);
 		}
 		bytes_copied += descriptor.pdu_length;
 		descriptor.data_transfer_length = pdata->rx_buf_per_desc;
-- 
1.7.5.4

