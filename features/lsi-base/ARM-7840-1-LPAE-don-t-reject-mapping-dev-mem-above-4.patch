From 7aa94223da150e9589f4a5dfa959f09a24672219 Mon Sep 17 00:00:00 2001
From: Jonas Svennebring <jonas.svennebring@lsi.com>
Date: Fri, 10 Jan 2014 15:23:40 +0100
Subject: [PATCH 42/71] ARM: 7840/1: LPAE: don't reject mapping /dev/mem above
 4GB

     commit 3159f372354e8e1f5dee714663d70 upstream

     With LPAE enabled, physical address space is larger than 4GB. Allow mapping any
     part of it via /dev/mem by using PHYS_MASK to determine valid range.

     PHYS_MASK covers 40 bits with LPAE enabled and 32 bits otherwise.

     Reported-by: Vassili Karpov <av1474@comtv.ru>
     Signed-off-by: Sergey Dyasly <dserrg@gmail.com>
     Acked-by: Catalin Marinas <catalin.marinas@arm.com>
     Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
     Signed-off-by: Jonas Svennebring <jonas.svennebring@lsi.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mm/mmap.c |    8 +++-----
 1 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mm/mmap.c b/arch/arm/mm/mmap.c
index f0ef2f7..c96c280 100644
--- a/arch/arm/mm/mmap.c
+++ b/arch/arm/mm/mmap.c
@@ -11,7 +11,7 @@
 #include <linux/random.h>
 #include <asm/cachetype.h>
 
-#define COLOUR_ALIGN(addr,pgoff)		\
+#define COLOUR_ALIGN(addr, pgoff)		\
 	((((addr)+SHMLBA-1)&~(SHMLBA-1)) +	\
 	 (((pgoff)<<PAGE_SHIFT) & (SHMLBA-1)))
 
@@ -204,13 +204,11 @@ int valid_phys_addr_range(phys_addr_t addr, size_t size)
 }
 
 /*
- * We don't use supersection mappings for mmap() on /dev/mem, which
- * means that we can't map the memory area above the 4G barrier into
- * userspace.
+ * Do not allow /dev/mem mappings beyond the supported physical range.
  */
 int valid_mmap_phys_addr_range(unsigned long pfn, size_t size)
 {
-	return !(pfn + (size >> PAGE_SHIFT) > 0x00100000);
+	return (pfn + (size >> PAGE_SHIFT)) <= (1 + (PHYS_MASK >> PAGE_SHIFT));
 }
 
 #ifdef CONFIG_STRICT_DEVMEM
-- 
1.7.5.4

