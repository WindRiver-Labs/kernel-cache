From cc505534a362d1b508b44f2499ddda42d7bfcd8b Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Tue, 25 Aug 2015 15:02:20 +0800
Subject: [PATCH 23/68] arch/arm/mach-axxia: pcie: Add doorbell suport to use
 IRQF_SHARED

the patch comes from:
git://git.yoctoproject.org/linux-yocto-3.10
commit 1bf20c18e7fc6a0fb409d5bb7b0d86655583b53a upstream

This support expects kernel module to handle the doorbell
interrupt.

Signed-off-by: SangeethaRao <sangeetha.rao@lsi.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
Signed-off-by: Li Wang <li.wang@windriver.com>
---
 arch/arm/mach-axxia/pci.c |   44 +++++++++++++++-----------------------------
 1 files changed, 15 insertions(+), 29 deletions(-)

diff --git a/arch/arm/mach-axxia/pci.c b/arch/arm/mach-axxia/pci.c
index aaa966b..f85b047 100644
--- a/arch/arm/mach-axxia/pci.c
+++ b/arch/arm/mach-axxia/pci.c
@@ -399,46 +399,31 @@ static struct pci_ops axxia_pciex_pci_ops = {
 	.write = arm_pciex_axxia_write_config,
 };
 
-/* RootComplex Doorbell Handler */
-void doorbell_rc_handler()
-{
-	pr_info("doorbell_rc_handler\n");
-}
-EXPORT_SYMBOL(doorbell_rc_handler);
-
-/* EndPoint Doorbell Handler */
-void doorbell_ep_handler()
-{
-	pr_info("doorbell_ep_handler\n");
-}
-EXPORT_SYMBOL(doorbell_ep_handler);
-
 /*
  * pcie_doorbell_isr
  *
  * This ISR is for doorbell interrupts for
  * Endpoint mode which has a dedicated IRQ line
+ * This support expects kernel module to handle the doorbell
+ * interrupt
  */
 static irqreturn_t
 pcie_doorbell_isr(int irq, void *arg)
 {
 	struct axxia_pciex_port *port  = arg;
 	void __iomem            *mbase = port->regs;
-	u32                      intr1_status;
-	irqreturn_t              retval = IRQ_HANDLED;
+	u32                     intr1_status;
 
-	/* read the PEI interrupt status register */
 	intr1_status = readl(mbase + PCIE_INT1_STATUS);
 
 	if (intr1_status & INT1_DOORBELL) {
-		pr_info("PCIE%d: Doorbell interrupt\n",
-			port->index);
-		doorbell_ep_handler();
-		/* clear the doorbell status */
-		writel(intr1_status, port->regs + PCIE_INT1_STATUS);
+		/* EP doorbell interrupt. This support expects kernel module
+		 * to handle this doorbell interrupt
+		 */
+		/* Clear it */
+		writel(INT1_DOORBELL, mbase + PCIE_INT1_STATUS);
 	}
-
-	return retval;
+	return IRQ_NONE;
 }
 
 
@@ -517,11 +502,12 @@ pcie_legacy_isr(int irq, void *arg)
 	}
 
 	if (intr1_status & INT1_DOORBELL) {
-		pr_info("PCIE%d: Doorbell interrupt\n",
-			port->index);
-		doorbell_rc_handler();
-		/* clear the doorbell status */
-		writel(intr1_status, port->regs + PCIE_INT1_STATUS);
+		/* RC doorbell interrupt. This support expects kernel module
+		 * to handle this doorbell interrupt
+		 */
+		/* Clear it */
+		writel(INT1_DOORBELL, mbase + PCIE_INT1_STATUS);
+		return IRQ_NONE;
 	}
 
 	/*
-- 
1.7.5.4

