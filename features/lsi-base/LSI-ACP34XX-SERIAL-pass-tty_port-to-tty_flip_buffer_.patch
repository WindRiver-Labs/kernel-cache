From 9485cf958b7e1ebb4746f20dcd8ec9522e7aeae1 Mon Sep 17 00:00:00 2001
From: David Mercado <david.mercado@windriver.com>
Date: Wed, 20 Nov 2013 15:24:52 -0500
Subject: [PATCH 143/159] LSI ACP34XX: SERIAL: pass tty_port to
 tty_flip_buffer_push

git.yoctoproject.org/git/linux-yocto-3.10
commit 9207c92a05f21e0a6222c9560390a81c38f14262 standard/axxia/base.

tty_flip_buffer_push must be passed a tty_port structure since
commit 2e124b4a3 "TTY: switch tty_flip_buffer_push".

Also, the "tty" variable is not used in acp_serial_rx_chars().  Remove
this variable to avoid a compiler warning.

Finally, replace printk with pr_xxx

Signed-off-by: Hong H. Pham <hong.pham@windriver.com>
---
 drivers/tty/serial/lsi_acp_serial.c |   27 ++++++++++++---------------
 1 files changed, 12 insertions(+), 15 deletions(-)

diff --git a/drivers/tty/serial/lsi_acp_serial.c b/drivers/tty/serial/lsi_acp_serial.c
index a41eab2..f9676ca 100644
--- a/drivers/tty/serial/lsi_acp_serial.c
+++ b/drivers/tty/serial/lsi_acp_serial.c
@@ -294,7 +294,6 @@ void acp_serial_enable_ms(struct uart_port *port)
 static void
 acp_serial_rx_chars(struct uart_acp_port *uap)
 {
-	struct tty_struct *tty = uap->port.state->port.tty;
 	unsigned int status, ch, flag, max_count = 256;
 
 	status = in_le32((u32 *)(uap->port.membase + UART01x_FR));
@@ -340,7 +339,7 @@ ignore_char:
 		status = in_le32((u32 *)(uap->port.membase + UART01x_FR));
 	}
 	spin_unlock(&uap->port.lock);
-	tty_flip_buffer_push(tty);
+	tty_flip_buffer_push(&uap->port.state->port);
 	spin_lock(&uap->port.lock);
 }
 
@@ -574,14 +573,14 @@ acp_serial_startup(struct uart_port *port)
 	uap->port.irq = irq_create_mapping(NULL, uap->hwirq);
 
 	if (NO_IRQ == uap->port.irq) {
-		printk(KERN_ERR "irq_create_mapping() failed!\n");
+		pr_err("irq_create_mapping() failed!\n");
 		goto clk_dis;
 	}
 
 	retval = irq_set_irq_type(uap->port.irq, IRQ_TYPE_LEVEL_HIGH);
 
 	if (0 != retval) {
-		printk(KERN_ERR "set_irq_type(%d, 0x%x) failed!\n",
+		pr_err("set_irq_type(%d, 0x%x) failed!\n",
 			uap->port.irq, IRQ_TYPE_LEVEL_HIGH);
 		goto clk_dis;
 	}
@@ -590,7 +589,7 @@ acp_serial_startup(struct uart_port *port)
 			     IRQF_DISABLED, "uart-pl011", uap);
 
 	if (retval) {
-		printk(KERN_ERR "request_irq(%d) failed!\n", uap->port.irq);
+		pr_err("request_irq(%d) failed!\n", uap->port.irq);
 		goto clk_dis;
 	}
 
@@ -1083,7 +1082,7 @@ acp_serial_add_ports(struct uart_driver *driver)
 			if (addr)
 				uap->timer_base = ioremap(addr, reg[1]);
 			else {
-				printk(KERN_ERR "timer io address not found\n");
+				pr_err("timer io address not found\n");
 				ret = -ENOMEM;
 			}
 		}
@@ -1101,7 +1100,7 @@ acp_serial_add_ports(struct uart_driver *driver)
 		if (addr)
 			uap->port.membase = ioremap(addr, reg[1]);
 		else {
-			printk(KERN_ERR "serial io address not found\n");
+			pr_err("serial io address not found\n");
 			ret = -ENOMEM;
 		}
 
@@ -1110,7 +1109,7 @@ acp_serial_add_ports(struct uart_driver *driver)
 		if (interrupts)
 			uap->hwirq = interrupts[0];
 		else {
-			printk(KERN_ERR "serial irq not found\n");
+			pr_err("serial irq not found\n");
 			uap->hwirq = 22;
 		}
 
@@ -1119,7 +1118,7 @@ acp_serial_add_ports(struct uart_driver *driver)
 		if (clk && *clk)
 			per_clock = *clk;
 		else {
-			printk(KERN_ERR "serial clock frequency not found\n");
+			pr_err("serial clock frequency not found\n");
 			per_clock = 200000000;
 		}
 
@@ -1128,7 +1127,7 @@ acp_serial_add_ports(struct uart_driver *driver)
 		if (speed && *speed)
 			baud_rate = *speed;
 		else {
-			printk(KERN_ERR "current speed not found\n");
+			pr_err("current speed not found\n");
 			baud_rate = 9600;
 		}
 	} else {
@@ -1194,7 +1193,7 @@ acp_serial_init(void)
 {
 	int ret;
 
-	printk(KERN_INFO "Serial: ACP Serial Driver\n");
+	pr_info("Serial: ACP Serial Driver\n");
 
 	/* Clear the ports array */
 	memset((void *) &acp_ports[0], 0,
@@ -1204,8 +1203,7 @@ acp_serial_init(void)
 	ret = uart_register_driver(&acp_serial_driver);
 
 	if (0 != ret) {
-		printk(KERN_ERR
-		       "uart_register_driver() failed with %d\n", ret);
+		pr_err("uart_register_driver() failed with %d\n", ret);
 		goto out;
 	}
 
@@ -1213,8 +1211,7 @@ acp_serial_init(void)
 	ret = acp_serial_add_ports(&acp_serial_driver);
 
 	if (0 != ret) {
-		printk(KERN_ERR
-			"acp_serial_add_ports() failed with %d\n", ret);
+		pr_err("acp_serial_add_ports() failed with %d\n", ret);
 		goto out;
 	}
 
-- 
1.7.5.4

