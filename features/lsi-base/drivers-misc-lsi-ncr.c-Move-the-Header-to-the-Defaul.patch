From 263a21091b4489497ebeb28a507bcdb5de25f4a7 Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Thu, 18 May 2017 10:57:16 +0800
Subject: [PATCH 5/6] drivers/misc/lsi-ncr.c: Move the Header to the Default
 Path

the patch comes from:
http://git.yoctoproject.org/cgit/cgit.cgi/linux-yocto-3.14/commit/?h=standard/axxia/base&id=476473a72ce1359db648d6a2ae1fc07d45d53935

Move lsi-ncr.h to include/linux as it is used in arch/arm/* and
arch/powerpc/* among other places. All source files including
lsi-ncr.h are updated as well.

Signed-off-by: John Jacques <john.jacques@intel.com>
Signed-off-by: Li Wang <li.wang@windriver.com>
---
 arch/powerpc/sysdev/lsi_msi.c          |    2 +-
 arch/powerpc/sysdev/lsi_pci.c          |   57 ++++++++++++--------------------
 drivers/edac/axxia_edac-l2_cpu.c       |    2 +-
 drivers/edac/axxia_edac-l3.c           |    4 +-
 drivers/edac/axxia_edac-mc.c           |    2 +-
 drivers/misc/lsi-ncr.c                 |    2 +-
 drivers/misc/lsi-ncr.h                 |   44 ------------------------
 drivers/net/ethernet/lsi/lsi_acp_net.c |   14 +++----
 include/linux/lsi-ncr.h                |   44 ++++++++++++++++++++++++
 9 files changed, 77 insertions(+), 94 deletions(-)
 delete mode 100644 drivers/misc/lsi-ncr.h
 create mode 100644 include/linux/lsi-ncr.h

diff --git a/arch/powerpc/sysdev/lsi_msi.c b/arch/powerpc/sysdev/lsi_msi.c
index 398561e..8d02e7a 100644
--- a/arch/powerpc/sysdev/lsi_msi.c
+++ b/arch/powerpc/sysdev/lsi_msi.c
@@ -21,7 +21,7 @@
 #include <asm/dcr-regs.h>
 #include <mm/mmu_decl.h>
 
-#include "../../drivers/misc/lsi-ncr.h"
+#include <linux/lsi-ncr.h>
 #include "lsi_msi.h"
 
 #include <linux/interrupt.h>
diff --git a/arch/powerpc/sysdev/lsi_pci.c b/arch/powerpc/sysdev/lsi_pci.c
index db02d19..474d045 100644
--- a/arch/powerpc/sysdev/lsi_pci.c
+++ b/arch/powerpc/sysdev/lsi_pci.c
@@ -11,8 +11,10 @@
 #include <linux/bootmem.h>
 #include <linux/delay.h>
 #include <linux/slab.h>
+#include <linux/interrupt.h>
 
 #include <linux/io.h>
+#include <linux/lsi-ncr.h>
 #include <asm/pci-bridge.h>
 #include <asm/machdep.h>
 #include <asm/dcr.h>
@@ -20,41 +22,12 @@
 #include <mm/mmu_decl.h>
 
 #include "ppc4xx_pci.h"
-#include "lsi_msi.h"
-#include "../../../drivers/misc/lsi-ncr.h"
-
-#include <linux/interrupt.h>
-#include <linux/irq.h>
-#include <linux/bitmap.h>
-#include <linux/msi.h>
-#include <linux/of_platform.h>
-#include <asm/prom.h>
-#include <asm/hw_irq.h>
-#include <asm/ppc-pci.h>
 
 static int acp_plx;
 
 #undef PRINT_CONFIG_ACCESSES
 /*#define PRINT_CONFIG_ACCESSES*/
 
-struct pciex_port {
-	struct pci_controller	*hose;
-	struct device_node	*node;
-	unsigned int		index;
-	int			endpoint;
-	int			link;
-	int			has_ibpre;
-	unsigned int		sdr_base;
-	dcr_host_t		dcrs;
-	struct resource		cfg_space;
-	struct resource		utl_regs;
-	void __iomem		*utl_base;
-	int	acpChipType;
-};
-
-static struct pciex_port *acp_pciex_ports;
-static unsigned int acp_pciex_port_count;
-
 static int dma_offset_set;
 static u32 last_mpage;
 static u32 last_port;
@@ -211,6 +184,24 @@ out:
 
 #define MAX_PCIE_BUS_MAPPED	0x40
 
+struct pciex_port {
+	struct pci_controller	*hose;
+	struct device_node	*node;
+	unsigned int		index;
+	int			endpoint;
+	int			link;
+	int			has_ibpre;
+	unsigned int		sdr_base;
+	dcr_host_t		dcrs;
+	struct resource		cfg_space;
+	struct resource		utl_regs;
+	void __iomem		*utl_base;
+	int	acpChipType;
+};
+
+static struct pciex_port *acp_pciex_ports;
+static unsigned int acp_pciex_port_count;
+
 struct pciex_hwops {
 	bool want_sdr;
 	int (*core_init)(struct device_node *np);
@@ -858,14 +849,8 @@ acp_pcie_isr(int irq, void *arg)
 
 	/* read the PEI interrupt status register */
 	intr_status = in_le32(mbase + 0x10c0);
+	in_le32(mbase + 0x10c4);
 
-	if (intr_status & 0x80000000) {
-		printk(KERN_INFO "Received MSI interrupt\n");
-		acp_pci_msi_irq_handle(hose->indirect_type);
-		/* Clear MSI interrupt */
-		out_le32(mbase + 0x10c0, 0x80000000);
-		return IRQ_HANDLED;
-	}
 	/* check if this is a PCIe message from an external device */
 	if (intr_status & 0x00000010) {
 		externalPciIntr = 1;
diff --git a/drivers/edac/axxia_edac-l2_cpu.c b/drivers/edac/axxia_edac-l2_cpu.c
index b1dd029..1373380 100644
--- a/drivers/edac/axxia_edac-l2_cpu.c
+++ b/drivers/edac/axxia_edac-l2_cpu.c
@@ -25,8 +25,8 @@
 #include <linux/init.h>
 #include <linux/slab.h>
 #include <linux/io.h>
+#include <linux/lsi-ncr.h>
 #include <linux/edac.h>
-#include <mach/ncr.h>
 #include <linux/of_platform.h>
 #include <linux/of.h>
 #include <linux/of_address.h>
diff --git a/drivers/edac/axxia_edac-l3.c b/drivers/edac/axxia_edac-l3.c
index af29418..59c4056 100644
--- a/drivers/edac/axxia_edac-l3.c
+++ b/drivers/edac/axxia_edac-l3.c
@@ -25,8 +25,8 @@
 #include <linux/init.h>
 #include <linux/slab.h>
 #include <linux/io.h>
+#include <linux/lsi-ncr.h>
 #include <linux/edac.h>
-#include <mach/ncr.h>
 #include <linux/of_platform.h>
 #include <linux/of.h>
 #include <linux/of_address.h>
@@ -57,7 +57,7 @@ struct lsi_edac_dev_info {
 /* Check for L3 Errors */
 static void lsi_l3_error_check(struct edac_device_ctl_info *edac_dev)
 {
-	unsigned long regVal1, regVal2, set_val;
+	unsigned long regVal1, regVal2;
 	unsigned count = 0;
 	int i, instance;
 	struct lsi_edac_dev_info *dev_info;
diff --git a/drivers/edac/axxia_edac-mc.c b/drivers/edac/axxia_edac-mc.c
index 643ed38..30c7843 100644
--- a/drivers/edac/axxia_edac-mc.c
+++ b/drivers/edac/axxia_edac-mc.c
@@ -25,8 +25,8 @@
 #include <linux/init.h>
 #include <linux/slab.h>
 #include <linux/io.h>
+#include <linux/lsi-ncr.h>
 #include <linux/edac.h>
-#include <mach/ncr.h>
 #include <linux/of_platform.h>
 #include <linux/of.h>
 #include <linux/of_address.h>
diff --git a/drivers/misc/lsi-ncr.c b/drivers/misc/lsi-ncr.c
index 0f3d48f..1558290 100644
--- a/drivers/misc/lsi-ncr.c
+++ b/drivers/misc/lsi-ncr.c
@@ -22,8 +22,8 @@
 
 #include <linux/module.h>
 #include <linux/io.h>
+#include <linux/lsi-ncr.h>
 #include <linux/of.h>
-#include "lsi-ncr.h"
 
 #ifdef CONFIG_ARCH_AXXIA
 #define NCA_PHYS_ADDRESS 0x002020100000ULL
diff --git a/drivers/misc/lsi-ncr.h b/drivers/misc/lsi-ncr.h
deleted file mode 100644
index 3c1e676..0000000
--- a/drivers/misc/lsi-ncr.h
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * drivers/lsi/common/version.h
- *
- * Copyright (C) 2010 LSI
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307	 USA
- */
-
-#ifndef __DRIVERS_LSI_ACP_NCR_H
-#define __DRIVERS_LSI_ACP_NCR_H
-
-#ifndef NCP_REGION_ID
-#define NCP_REGION_ID(node, target) \
-((unsigned long) ((((node) & 0xffff) << 16) | ((target) & 0xffff)))
-#endif
-
-#ifndef NCP_NODE_ID
-#define NCP_NODE_ID(region) (((region) >> 16) & 0xffff)
-#endif
-
-#ifndef NCP_TARGET_ID
-#define NCP_TARGET_ID(region) ((region) & 0xffff)
-#endif
-
-unsigned long ncr_register_read(unsigned *);
-void ncr_register_write(const unsigned, unsigned *);
-int ncr_read(unsigned long, unsigned long, int, void *);
-int ncr_write(unsigned long, unsigned long, int, void *);
-int ncr_read_nolock(unsigned long, unsigned long, int, void *);
-int ncr_write_nolock(unsigned long, unsigned long, int, void *);
-
-#endif /*  __DRIVERS_LSI_ACP_NCR_H */
diff --git a/drivers/net/ethernet/lsi/lsi_acp_net.c b/drivers/net/ethernet/lsi/lsi_acp_net.c
index 94dd18f..6227137 100644
--- a/drivers/net/ethernet/lsi/lsi_acp_net.c
+++ b/drivers/net/ethernet/lsi/lsi_acp_net.c
@@ -75,11 +75,10 @@
 #include <linux/dma-mapping.h>
 #include <linux/uaccess.h>
 #include <linux/io.h>
+#include <linux/lsi-ncr.h>
 
 #include <asm/dma.h>
 
-#include "../../../misc/lsi-ncr.h"
-
 #include "lsi_acp_net.h"
 
 #define LSI_DRV_NAME           "acp-femac"
@@ -314,8 +313,8 @@ err_out_1:
 }
 
 /* ======================================================================
- * NIC Interface
- * ======================================================================
+   NIC Interface
+   ======================================================================
 */
 
 #define DESCRIPTOR_GRANULARITY 64
@@ -639,8 +638,8 @@ static void disable_rx_tx(struct net_device *dev)
 
 
 /* ======================================================================
- *Linux Network Driver Interface
- * ======================================================================
+   Linux Network Driver Interface
+   ======================================================================
 */
 
 /* ----------------------------------------------------------------------
@@ -694,7 +693,7 @@ static void lsinet_rx_packet(struct net_device *dev)
 	} else {
 		/* Needs to be reviewed.  This fixed an aligment
 		 * exception when pinging to the target from a host.
-		*/
+		 */
 
 		/* Align IP on 16 byte boundaries */
 		skb_reserve(sk_buff, 2);
@@ -1133,7 +1132,6 @@ static int appnic_hard_start_xmit(struct sk_buff *skb,
 
 		write_mac(pdata->tx_head.raw, APPNIC_DMA_TX_HEAD_POINTER);
 		dev->trans_start = jiffies;
-
 	} else {
 		pdata->out_of_tx_descriptors++;
 		pr_err("%s: No transmit descriptors available!\n",
diff --git a/include/linux/lsi-ncr.h b/include/linux/lsi-ncr.h
new file mode 100644
index 0000000..db54f6b
--- /dev/null
+++ b/include/linux/lsi-ncr.h
@@ -0,0 +1,44 @@
+/*
+ * drivers/lsi/common/version.h
+ *
+ * Copyright (C) 2010 LSI
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307	 USA
+ */
+
+#ifndef __DRIVERS_LSI_ACP_NCR_H
+#define __DRIVERS_LSI_ACP_NCR_H
+
+#ifndef NCP_REGION_ID
+#define NCP_REGION_ID(node, target) \
+(unsigned long) ((((node) & 0xffff) << 16) | ((target) & 0xffff))
+#endif
+
+#ifndef NCP_NODE_ID
+#define NCP_NODE_ID(region) (((region) >> 16) & 0xffff)
+#endif
+
+#ifndef NCP_TARGET_ID
+#define NCP_TARGET_ID(region) ((region) & 0xffff)
+#endif
+
+unsigned long ncr_register_read(unsigned *);
+void ncr_register_write(const unsigned, unsigned *);
+int ncr_read(unsigned long, unsigned long, int, void *);
+int ncr_write(unsigned long, unsigned long, int, void *);
+int ncr_read_nolock(unsigned long, unsigned long, int, void *);
+int ncr_write_nolock(unsigned long, unsigned long, int, void *);
+
+#endif /*  __DRIVERS_LSI_ACP_NCR_H */
-- 
1.7.5.4

