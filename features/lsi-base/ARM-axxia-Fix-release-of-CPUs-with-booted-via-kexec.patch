From 68b2b04cff15e7a8883fe5c83904f5a06f185c64 Mon Sep 17 00:00:00 2001
From: Anders Berg <anders.berg@lsi.com>
Date: Mon, 31 Mar 2014 21:13:33 +0200
Subject: [PATCH 65/71] ARM: axxia: Fix release of CPUs with booted via kexec
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

git://git.yoctoproject.org/linux-yocto-3.10 standard/axxia/base
commit 7faaee30d5953250870a4caddb5966cd06d6f2ec

When booting a crash kernel via kexec, the memory specified by the
cpu-release-addr property is not valid physical memory (not part of
the crash kernel reserved memory area). In this case the memory needs an
ioremap to be written.

Signed-off-by: Anders Berg <anders.berg@lsi.com>
Signed-off-by: Fredrik Markstr√∂m <fredrik.markstrom@gmail.com>
Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
---
 arch/arm/mach-axxia/platsmp.c |   13 +++++++++----
 1 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/arch/arm/mach-axxia/platsmp.c b/arch/arm/mach-axxia/platsmp.c
index f6b41b6..d662b6a 100644
--- a/arch/arm/mach-axxia/platsmp.c
+++ b/arch/arm/mach-axxia/platsmp.c
@@ -205,8 +205,8 @@ static void __init axxia_smp_prepare_cpus(unsigned int max_cpus)
 		 * from reset in hyp mode.
 		 */
 		if (!is_hyp_mode_available()) {
-			u32 phys_cpu = cpu_logical_map(cpu);
-			if (phys_cpu != 0) {
+			if (cpu != 0) {
+				u32 phys_cpu = cpu_logical_map(cpu);
 				u32 tmp = readl(syscon + 0x1010);
 				writel(0xab, syscon + 0x1000);
 				tmp &= ~(1 << phys_cpu);
@@ -227,11 +227,16 @@ static void __init axxia_smp_prepare_cpus(unsigned int max_cpus)
 		 * "holding pen".
 		 */
 		if (release_phys != 0) {
-			release_virt = (u32 *)phys_to_virt(release_phys);
-			pr_info("cpu%d: Release addr phys %#x virt %p\n", cpu, release_phys, release_virt);
+			int is_kmapped = pfn_valid(__phys_to_pfn(release_phys));
+			if (is_kmapped)
+				release_virt = phys_to_virt(release_phys);
+			else
+				release_virt = ioremap(release_phys, PAGE_SIZE);
 			*release_virt = virt_to_phys(axxia_secondary_startup);
 			smp_wmb();
 			__cpuc_flush_dcache_area(release_virt, sizeof(u32));
+			if (!is_kmapped)
+				iounmap(release_virt);
 		}
 	}
 
-- 
1.7.5.4

