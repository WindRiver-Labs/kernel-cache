From 1346d36cb870ab01dfee59b261add2c2e8ae8fe6 Mon Sep 17 00:00:00 2001
From: David Mercado <david.mercado@windriver.com>
Date: Wed, 20 Nov 2013 16:45:16 -0500
Subject: [PATCH 148/175] LSI ACP34XX: mtd nand: specifiy NAND ECC strength

git.yoctoproject.org/git/linux-yocto-3.10
commit 09e457c3dc6557ca61172cf6cfe2107c112bb2ff standard/axxia/base.

Starting with Linux 3.5, the NAND ECC strength needs to be specified
when using hardware ECC.

The ECC strength is configured per the following comment in
lsi_acp_nand.c:

  For now, the EP501 version will use 1 bit ECC (only option), the
  EP501G1 version will use 4 bit (for compabitility with the EP501G3)
  and teh EP501G3 versions will use 4 bit (due to the amount of OOB
  required and for compatibility with the EP501G1).

Signed-off-by: Hong H. Pham <hong.pham@windriver.com>
---
 drivers/mtd/nand/lsi_acp_nand.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/drivers/mtd/nand/lsi_acp_nand.c b/drivers/mtd/nand/lsi_acp_nand.c
index 23b9bd1..ddc58e3 100644
--- a/drivers/mtd/nand/lsi_acp_nand.c
+++ b/drivers/mtd/nand/lsi_acp_nand.c
@@ -3159,6 +3159,7 @@ lsi_nand_set_config(struct mtd_info *mtd, struct nand_chip *chip)
 		chip->ecc.layout = &lsi_2k_1bit_ecclayout;
 		chip->ecc.size = mtd->writesize;
 		chip->ecc.bytes = chip->ecc.layout->eccbytes;
+		chip->ecc.strength = 1;
 	} else if (LSI_NAND_EP501G1 == lsi_nand_type) {
 		/* The EP501G1 only supports 512, 2k, and 4k page sizes, */
 		if (512 != mtd->writesize &&
@@ -3257,6 +3258,8 @@ lsi_nand_set_config(struct mtd_info *mtd, struct nand_chip *chip)
 		else
 			chip->ecc.bytes = chip->ecc.layout->eccbytes;
 
+		chip->ecc.strength = 4;
+
 	} else if (LSI_NAND_EP501G3 == lsi_nand_type) {
 		/* The EP501G3 only supports 2k, 4k, and 8k page sizes, */
 		if (2048 != mtd->writesize &&
@@ -3338,6 +3341,7 @@ lsi_nand_set_config(struct mtd_info *mtd, struct nand_chip *chip)
 		config |= (chip->ecc.layout->eccbytes / 4) << 16;
 		chip->ecc.size = mtd->writesize;
 		chip->ecc.bytes = chip->ecc.layout->eccbytes;
+		chip->ecc.strength = 4;
 	} else {
 		return -1;
 	}
-- 
1.7.1

