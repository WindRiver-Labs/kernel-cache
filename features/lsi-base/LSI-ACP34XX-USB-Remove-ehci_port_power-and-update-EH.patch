From 6411f416d3415b87e9fab75e9ec8de38b49d1aa9 Mon Sep 17 00:00:00 2001
From: David Mercado <david.mercado@windriver.com>
Date: Wed, 20 Nov 2013 16:54:09 -0500
Subject: [PATCH 150/159] LSI ACP34XX: USB: Remove ehci_port_power and update
 EHCI reg structure

git.yoctoproject.org/git/linux-yocto-3.10
commit 73a77e24f0dfbce3caaa9c0de8fe5b1f05b73da5 standard/axxia/base.

ehci_port_power() has been removed in Linux 3.8 by commit
c73cee717e7d5da0698acb720ad1219646fe4f46 "USB: EHCI:
remove ehci_port_power() routine".  It's no longer necessary
to call ehci_port_power() in the hardware specific ehci-hcd driver.

Also, include update for the EHCI register structure introduced by
commit a46af4ebf9ffec35eea0390e89935197b833dc61 "USB: EHCI: define
extension registers like normal ones".

Signed-off-by: Hong H. Pham <hong.pham@windriver.com>
---
 drivers/usb/host/ehci-ci13612.c |   21 ++++++++++-----------
 1 files changed, 10 insertions(+), 11 deletions(-)

diff --git a/drivers/usb/host/ehci-ci13612.c b/drivers/usb/host/ehci-ci13612.c
index 4c86e9b..ff77ee7 100644
--- a/drivers/usb/host/ehci-ci13612.c
+++ b/drivers/usb/host/ehci-ci13612.c
@@ -36,7 +36,7 @@
 static void ci13612_usb_setup(struct usb_hcd *hcd)
 {
 	int USB_TXFIFOTHRES, VUSB_HS_TX_BURST;
-	u32 deviceMode;
+	u32 device_mode;
 	struct ehci_hcd *ehci = hcd_to_ehci(hcd);
 	u32 txfulltuning = 0;
 
@@ -55,18 +55,17 @@ static void ci13612_usb_setup(struct usb_hcd *hcd)
 	 * Unspecified Length Bursts by setting SBUSCFG to 0x0, or use stream
 	 * disable mode by setting USBMODE.SDIS to 0x1.
 	 */
-	deviceMode = ehci_readl(ehci, hcd->regs + 0x1A8);
+	device_mode = ehci_readl(ehci, hcd->regs + 0x1A8);
 
-	if ((deviceMode & 0x3) == 0x2) {
+	if ((device_mode & 0x3) == 0x2) {
 		/* device mode */
 		writel(0x0, hcd->regs + 0x90);
-	} else if ((deviceMode & 0x3) == 0x3) {
+	} else if ((device_mode & 0x3) == 0x3) {
 		/* host mode */
 		writel(0x6, hcd->regs + 0x90);
 	}
 
-	printk(KERN_INFO
-	       "ehci-ci13612 (ci13612_usb_setup): VUSB_HS_TX_BURST = 0x%x,"
+	pr_info("ehci-ci13612 (ci13612_usb_setup): VUSB_HS_TX_BURST = 0x%x,"
 		"USB_TXFIFOTHRES = 0x%x\n", VUSB_HS_TX_BURST, USB_TXFIFOTHRES);
 	return;
 }
@@ -79,7 +78,6 @@ static int ehci_ci13612_reinit(struct ehci_hcd *ehci)
 #ifdef CONFIG_LSI_USB_SW_WORKAROUND
 	/* S/W workarounds are not needed in AXM55xx */
 	ci13612_usb_setup(ehci_to_hcd(ehci));
-	ehci_port_power(ehci, 0);
 #endif
 	return 0;
 }
@@ -166,12 +164,12 @@ ci13612_fixup_txpburst(struct ehci_hcd *ehci)
 {
 	unsigned burst_size;
 
-	burst_size = ehci_readl(ehci, &ehci->regs->reserved[1]);
+	burst_size = ehci_readl(ehci, &ehci->regs->reserved1[1]);
 	burst_size = (burst_size & 0xffff00ff) | 0x4000;	/* TXPBURST */
-	ehci_writel(ehci, burst_size, &ehci->regs->reserved[1]);
+	ehci_writel(ehci, burst_size, &ehci->regs->reserved1[1]);
 }
 #else
-#define ci13612_fixup_txpburst(ehci) do { (void)ehci; } while(0)
+#define ci13612_fixup_txpburst(ehci) do { (void)ehci; } while (0)
 #endif
 
 static int ci13612_ehci_run(struct usb_hcd *hcd)
@@ -260,7 +258,8 @@ static int ci13612_ehci_probe(struct platform_device *pdev)
 	pdev->dev.coherent_dma_mask = DMA_BIT_MASK(32);
 	pdev->dev.dma_mask = &pdev->dev.coherent_dma_mask;
 
-	hcd = usb_create_hcd(&ci13612_hc_driver, &pdev->dev, dev_name(&pdev->dev));
+	hcd = usb_create_hcd(&ci13612_hc_driver, &pdev->dev,
+			     dev_name(&pdev->dev));
 	if (!hcd) {
 		retval = -ENOMEM;
 		goto fail_create_hcd;
-- 
1.7.5.4

