From d8a631287a87d7e0e0d4c51325928f3a351b3d3e Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Thu, 18 May 2017 10:58:25 +0800
Subject: [PATCH 6/6] axxia: Remove References to AXXIA_NCR_RESET_CHECK

the patch comes from:
http://git.yoctoproject.org/cgit/cgit.cgi/linux-yocto-3.14/commit/?h=standard/axxia/base&id=6e41280fbeb60c0dd1791cb5eedc6e01bb24273f

This define is no longer used.

Signed-off-by: John Jacques <john.jacques@intel.com>
Signed-off-by: Li Wang <li.wang@windriver.com>
---
 drivers/misc/lsi-ncr.c  |   20 --------------------
 include/linux/lsi-ncr.h |    2 +-
 2 files changed, 1 insertions(+), 21 deletions(-)

diff --git a/drivers/misc/lsi-ncr.c b/drivers/misc/lsi-ncr.c
index 1558290..67cb236 100644
--- a/drivers/misc/lsi-ncr.c
+++ b/drivers/misc/lsi-ncr.c
@@ -72,24 +72,6 @@ EXPORT_SYMBOL(nca_access_lock);
 
 static unsigned long ncr_spin_flags;
 
-#ifdef AXXIA_NCR_RESET_CHECK
-/*
- * define behavior if NCA register read/write is called while
- * the axxia device is being reset. Any attempt to access NCA
- * AXI registers while the NCA is in reset will hang the system.
- *
- * Due to higher level locking (ncr_spin_lock) this should not
- * occur as part of normal config ring access (ncr_read/write),
- * so we handle this condition as a BUG(). If it turns out there
- * is some valid case where this may occur we can re-implement
- * this as a wait loop.
- */
-#define AXXIA_NCR_RESET_ACTIVE_CHECK()				\
-	do { if (ncr_reset_active) BUG(); } while (0)
-#else
-#define AXXIA_NCR_RESET_ACTIVE_CHECK()
-#endif
-
 #define LOCK_DOMAIN 0
 
 union command_data_register_0 {
@@ -151,7 +133,6 @@ ncr_register_read(unsigned *address)
 {
 	unsigned long value;
 
-	AXXIA_NCR_RESET_ACTIVE_CHECK();
 	value = __raw_readl(address);
 
 	return be32_to_cpu(value);
@@ -160,7 +141,6 @@ ncr_register_read(unsigned *address)
 void
 ncr_register_write(const unsigned value, unsigned *address)
 {
-	AXXIA_NCR_RESET_ACTIVE_CHECK();
 	__raw_writel(cpu_to_be32(value), address);
 }
 
diff --git a/include/linux/lsi-ncr.h b/include/linux/lsi-ncr.h
index db54f6b..3c1e676 100644
--- a/include/linux/lsi-ncr.h
+++ b/include/linux/lsi-ncr.h
@@ -23,7 +23,7 @@
 
 #ifndef NCP_REGION_ID
 #define NCP_REGION_ID(node, target) \
-(unsigned long) ((((node) & 0xffff) << 16) | ((target) & 0xffff))
+((unsigned long) ((((node) & 0xffff) << 16) | ((target) & 0xffff)))
 #endif
 
 #ifndef NCP_NODE_ID
-- 
1.7.5.4

