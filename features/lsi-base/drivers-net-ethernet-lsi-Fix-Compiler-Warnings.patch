From 9a9ec5117a8d3e92bf8f77514f2648d3babbc9ce Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Tue, 25 Aug 2015 14:28:08 +0800
Subject: [PATCH 15/68] drivers/net/ethernet/lsi: Fix Compiler Warnings

the patch comes from:
git://git.yoctoproject.org/linux-yocto-3.10
commit 49a1c5c18955fced6e7a62c80a6864971e637a45 upstream

Fixes compilation warnings introduced by:
- LSI FEMAC Ethernet Driver
  commit 3a99fb32b9aee41fc6d30c2ebf68c3cf73a443ce
  author: David Mercado
-  arm/include: A clean up of the femac code.
  commit 4ab937c6b46316531bdf9f099553393fa9406769
  author: John Jacques

See below the warning messages:

drivers/net/ethernet/lsi/lsi_acp_net.h: In function 'femac_uncache':
drivers/net/ethernet/lsi/lsi_acp_net.h:521:2: warning: passing argument
2 of '__raw_writel' makes pointer from integer without a cast [enabled
by default]
  writel(0x0, GPREG_HPROT_FEMAC);

drivers/net/ethernet/lsi/lsi_acp_net.c: In function
'appnic_handle_link_change':
drivers/net/ethernet/lsi/lsi_acp_net.c:190:3: warning: passing argument
1 of '__raw_readl' makes pointer from integer without a cast [enabled by
default]
   if (rx_configuration != read_mac(APPNIC_RX_CONF))

arch/arm/include/asm/io.h:88:20:
note: expected 'volatile void *' but argument is of type 'long unsigned
int'
 static inline void __raw_writel(u32 val, volatile void __iomem *addr)

include/uapi/linux/byteorder/little_endian.h:32:51: note: in definition
of macro '__cpu_to_le32'
 #define __cpu_to_le32(x) ((__force __le32)(__u32)(x))

Signed-off-by: John Jacques <john.jacques@lsi.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
Signed-off-by: Li Wang <li.wang@windriver.com>
---
 drivers/net/ethernet/lsi/lsi_acp_net.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/lsi/lsi_acp_net.c b/drivers/net/ethernet/lsi/lsi_acp_net.c
index e858d5b..5c6d361 100644
--- a/drivers/net/ethernet/lsi/lsi_acp_net.c
+++ b/drivers/net/ethernet/lsi/lsi_acp_net.c
@@ -1593,8 +1593,10 @@ int appnic_init(struct net_device *dev)
 	write_mac(0x40010000, APPNIC_DMA_PCI_CONTROL);
 	write_mac(0x30000, APPNIC_DMA_CONTROL);
 #ifdef CONFIG_ARM
-	writel(0x280044, (void __iomem *)((unsigned long)pdata->dma_base + 0x60));
-	writel(0xc0, (void __iomem *)((unsigned long)pdata->dma_base + 0x64));
+	writel(0x280044,
+	       (void __iomem *)((unsigned long)pdata->dma_base + 0x60));
+	writel(0xc0,
+	       (void __iomem *)((unsigned long)pdata->dma_base + 0x64));
 #else
 	out_le32((unsigned *)pdata->dma_base + 0x60, 0x280044);
 	out_le32((unsigned *)pdata->dma_base + 0x64, 0xc0);
-- 
1.7.5.4

