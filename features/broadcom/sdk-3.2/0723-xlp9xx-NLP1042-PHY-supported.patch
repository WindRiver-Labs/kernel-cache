From 984fd6a77124a48a0826b5a819053d5c4f7a4710 Mon Sep 17 00:00:00 2001
From: Vikas Gupta <vikas.gupta@broadcom.com>
Date: Tue, 11 Jun 2013 17:54:38 -0700
Subject: [PATCH 0723/1532] xlp9xx: NLP1042 PHY supported.

	1) changed the data structures to support nlp1042 PHY support in both XAUI and RXAUI mode.
	2) xlp9xx both RXAUI ports supported.
	3) claenup.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../netlib/external/NETSOC_NLP1042C2_RXAUI_Dune.h  | 675 +++++++++++++++++++++
 .../external/NETSOC_NLP1042C2_RXAUI_Marvell.h      | 670 ++++++++++++++++++++
 .../lib/netlib/external/NETSOC_NLP1042C2_XAUI.h    | 457 ++++++++++++++
 arch/mips/netlogic/lib/netlib/include/ext_phy.h    |  10 +
 .../netlogic/lib/netlib/include/netsoc_common.h    |  47 +-
 .../netlogic/lib/netlib/include/netsoc_haliface.h  |   3 +
 .../netlogic/lib/netlib/include/netsoc_libiface.h  |   7 +
 .../mips/netlogic/lib/netlib/include/nlm_hal_nae.h |   6 +-
 .../lib/netlib/include/nlm_hal_vsemi_data.h        |   3 +
 arch/mips/netlogic/lib/netlib/include/nlm_nae.h    |   3 +-
 arch/mips/netlogic/lib/netlib/src/netsoc_api.c     |   7 +
 arch/mips/netlogic/lib/netlib/src/netsoc_config.c  |   4 +-
 arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c     | 248 ++++----
 arch/mips/netlogic/lib/netlib/src/netsoc_nae.c     | 124 +++-
 arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c     |  40 +-
 arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c    |   6 +-
 .../netlogic/lib/netlib/src/nlm_hal_vsemi_config.c | 119 +++-
 17 files changed, 2244 insertions(+), 185 deletions(-)
 create mode 100644 arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_RXAUI_Dune.h
 create mode 100644 arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_RXAUI_Marvell.h
 create mode 100644 arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_XAUI.h

diff --git a/arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_RXAUI_Dune.h b/arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_RXAUI_Dune.h
new file mode 100644
index 0000000..39f05cd
--- /dev/null
+++ b/arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_RXAUI_Dune.h
@@ -0,0 +1,675 @@
+#include "netsoc_libiface.h"
+//
+// autogenerated by RegUtils.pm on 2011/12/22 12:13 format: mdioFullReg
+//
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca42, 0x0100); // 10:8 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca44, 0x81f8); // 15:12= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca44, 0x8218); //  9:5 = 0x10
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca46, 0x0100); //  8:8 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca46, 0x0900); // 11:9 = 0x4
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb0e, 0x1000); // 13:12= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca4c, 0x0002); //  5:0 = 0x2
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca12, 0x0100); // 10:8 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca14, 0x81f8); // 15:12= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca14, 0x8218); //  9:5 = 0x10
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca16, 0x0100); //  8:8 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca16, 0x0900); // 11:9 = 0x4
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb06, 0x1000); // 13:12= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca1c, 0x0002); //  5:0 = 0x2
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca42, 0x0900); // 13:11= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca43, 0x2492); // 14:12= 0x2
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc246, 0x0181); //  9:7 = 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc242, 0x8100); //  2:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc240, 0x1000); //  7:4 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc240, 0x3800); // 13:11= 0x7
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc242, 0x0100); // 15:13= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc246, 0x0180); //  0:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc246, 0x0182); //  1:1 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc243, 0x07e1); //  4:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc243, 0x07e1); // 10:5 = 0x3f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc243, 0x17e1); // 15:11= 0x2
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb0b, 0x0001); //  1:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb0b, 0x0011); //  5:4 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb0b, 0x0311); //  9:8 = 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb0b, 0x0f11); // 11:10= 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb0b, 0x3f11); // 13:12= 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb0b, 0xff11); // 15:14= 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc00, 0x00f6); //  7:0 = 0xf6
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc02, 0x0081); //  7:7 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc02, 0x0001); //  7:7 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc07, 0x0117); //  4:0 = 0x17
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc08, 0x07df); //  5:0 = 0x1f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc08, 0x07df); // 11:6 = 0x1f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc09, 0x07df); //  5:0 = 0x1f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc09, 0x07df); // 11:6 = 0x1f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc07, 0x0017); //  8:5 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc0e, 0x0001); //  0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc0e, 0x0003); //  1:1 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc0e, 0x0007); //  2:2 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc0e, 0x0006); //  0:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc0e, 0x0004); //  1:1 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc0e, 0x0000); //  2:2 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc02, 0x0021); //  5:5 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc04, 0x0001); //  0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc04, 0x00b5); //  8:1 = 0x5a
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc11, 0x4904); //  5:3 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc11, 0x4804); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc11, 0x4004); // 11:9 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc11, 0x0004); // 14:12= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc11, 0x0000); //  2:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb02, 0x00f0); //  7:4 = 0xf
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb02, 0x00ff); //  3:0 = 0xf
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb21, 0x1000); // 15:12= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca01, 0x0001); //  0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca01, 0x0011); //  7:1 = 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcb1b, 0x1000); // 15:12= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca51, 0x0001); //  0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca51, 0x0011); //  7:1 = 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2c3, 0x000f); //  3:0 = 0xf
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2ca, 0x43c0); // 15:11= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2d0, 0x43c0); // 15:11= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2d6, 0x43c0); // 15:11= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2dc, 0x43c0); // 15:11= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2f1, 0x5f15); //  5:1 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2f1, 0x5e15); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2f5, 0x5f15); //  5:1 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2f5, 0x5e15); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2f9, 0x5f15); //  5:1 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2f9, 0x5e15); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2fd, 0x5f15); //  5:1 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2fd, 0x5e15); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e8, 0x0100); //  8:0 = 0x100
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e9, 0x0100); //  8:0 = 0x100
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2ea, 0x0100); //  8:0 = 0x100
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2eb, 0x0100); //  8:0 = 0x100
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e6, 0x0800); // 11:11= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e6, 0x0000); // 11:11= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc017, 0xdf20); // 13:13= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc010, 0x4000); // 14:14= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcd40, 0x0001); //  3:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc010, 0x6000); // 13:13= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc05, 0x001f); //  2:0 = 0x7
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc03, 0x0020); //  9:0 = 0x20
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc019, 0x1531); // 10:10= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xff2a, 0x004a); // 
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd008, 0x0001); //  0:0 = 0x1
+
+//sleep 100000	   # us
+for(i=0;i<100000;i++); 
+//NLM_C45_PRINTF(".");
+// WARNING: mdtrace, reg  1.d000 write value (5200) doesn't match read back (5000)
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd000, 0x5200);   
+
+//sleep 100000	   # us
+for(i=0;i<100000;i++); 
+//NLM_C45_PRINTF(".");
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd800, 0x2fff);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd801, 0x300f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd802, 0x2ff4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd803, 0x3ef4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd804, 0x20ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd805, 0x301e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd806, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd807, 0x22c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd808, 0x3ef4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd809, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd80a, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd80b, 0x220e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd80c, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd80d, 0x2124);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd80e, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd80f, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd810, 0x23fe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd811, 0x3c1e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd812, 0x2214);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd813, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd814, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd815, 0x20a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd816, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd817, 0x2dfe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd818, 0x307e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd819, 0x6e24);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd81a, 0x6e24);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd81b, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd81c, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd81d, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd81e, 0x402e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd81f, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd820, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd821, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd822, 0x2014);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd823, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd824, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd825, 0x6e8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd826, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd827, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd828, 0x2044);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd829, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd82a, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd82b, 0x6e8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd82c, 0x201e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd82d, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd82e, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd82f, 0x20d4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd830, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd831, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd832, 0x6e8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd833, 0x21fe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd834, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd835, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd836, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd837, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd838, 0x404e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd839, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd83a, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd83b, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd83c, 0x21f5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd83d, 0x3005);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd83e, 0xb805);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd83f, 0x8556);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd840, 0x8557);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd841, 0x8558);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd842, 0x8559);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd843, 0x855a);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd844, 0x400d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd845, 0x6d8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd846, 0x2032);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd847, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd848, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd849, 0x2132);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd84a, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd84b, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd84c, 0x21c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd84d, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd84e, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd84f, 0x2302);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd850, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd851, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd852, 0x23a2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd853, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd854, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd855, 0x24c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd856, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd857, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd858, 0x2562);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd859, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd85a, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd85b, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd85c, 0x4004);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd85d, 0xb814);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd85e, 0x5e43);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd85f, 0x03d7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd860, 0x2032);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd861, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd862, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd863, 0x200e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd864, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd865, 0x0002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd866, 0xd01e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd867, 0x6e8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd868, 0x20fe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd869, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd86a, 0xb80e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd86b, 0xd01d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd86c, 0x5de3);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd86d, 0x249e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd86e, 0x301e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd86f, 0x135e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd870, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd871, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd872, 0x20d4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd873, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd874, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd875, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd876, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd877, 0x404e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd878, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd879, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd87a, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd87b, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd87c, 0x2044);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd87d, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd87e, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd87f, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd880, 0x2014);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd881, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd882, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd883, 0x200e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd884, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd885, 0x2124);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd886, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd887, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd888, 0x2504);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd889, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd88a, 0x4015);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd88b, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd88c, 0x2514);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd88d, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd88e, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd88f, 0xb145);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd890, 0xb115);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd891, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd892, 0x2bd2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd893, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd894, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd895, 0x678f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd896, 0x2514);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd897, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd898, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd899, 0xb145);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd89a, 0xb105);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd89b, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd89c, 0x2bd2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd89d, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd89e, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd89f, 0x6f78);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a0, 0xe78e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a1, 0x22c5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a2, 0x3ef5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a3, 0x6ec5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a4, 0x2084);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a5, 0x3034);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a6, 0x2005);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a7, 0x3d75);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a8, 0xc451);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8a9, 0x2f62);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8aa, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ab, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ac, 0x2444);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ad, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ae, 0x2ed2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8af, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b0, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b1, 0x2144);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b2, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b3, 0x2ed2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b4, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b5, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b6, 0x2f02);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b7, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b8, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8b9, 0x28c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ba, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8bb, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8bc, 0x0000);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8bd, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8be, 0x4007);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8bf, 0x2524);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c0, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c1, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c2, 0x2005);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c3, 0x9575);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c4, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c5, 0x678f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c6, 0x2dd2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c7, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c8, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8c9, 0x6f77);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ca, 0x2514);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8cb, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8cc, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8cd, 0xbd05);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ce, 0xbf45);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8cf, 0x2db2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d0, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d1, 0x5553);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d2, 0x1302);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d3, 0x2006);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d4, 0x3016);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d5, 0x5763);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d6, 0x13c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d7, 0xd017);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d8, 0x2bf2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8d9, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8da, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8db, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8dc, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8dd, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8de, 0x2514);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8df, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e0, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e1, 0x4026);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e2, 0x9655);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e3, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e4, 0x648f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e5, 0x401d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e6, 0x2f22);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e7, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e8, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8e9, 0x6f74);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ea, 0x2fd6);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8eb, 0x3ff6);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ec, 0x8655);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ed, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ee, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ef, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f0, 0x22cd);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f1, 0x301d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f2, 0x2108);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f3, 0x3808);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f4, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f5, 0x5dd3);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f6, 0x2012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f7, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f8, 0x1302);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8f9, 0x63a8);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8fa, 0x2b72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8fb, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8fc, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8fd, 0xdffd);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8fe, 0x2f52);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd8ff, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd900, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd901, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd902, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd903, 0x2214);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd904, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd905, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd906, 0x2ef4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd907, 0x3ff4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd908, 0x8e4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd909, 0x2214);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd90a, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd90b, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd90c, 0x2104);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd90d, 0x3004);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd90e, 0x9e4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd90f, 0x2214);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd910, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd911, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd912, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd913, 0x2294);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd914, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd915, 0x64db);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd916, 0x8bbc);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd917, 0xb84b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd918, 0x300c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd919, 0xdf0b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd91a, 0xdf0c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd91b, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd91c, 0xc5b5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd91d, 0xc6c6);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd91e, 0x855e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd91f, 0xb84e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd920, 0x866c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd921, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd922, 0xb60c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd923, 0x9cee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd924, 0x20a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd925, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd926, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd927, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd928, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd929, 0x202e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd92a, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd92b, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd92c, 0x200e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd92d, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd92e, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd92f, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd930, 0x22b4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd931, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd932, 0x64db);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd933, 0x8bbc);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd934, 0xb84b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd935, 0xb80c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd936, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd937, 0xdf0b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd938, 0xdf0c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd939, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd93a, 0xc7b7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd93b, 0xc8c8);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd93c, 0x877e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd93d, 0xb84e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd93e, 0x888c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd93f, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd940, 0xb60c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd941, 0x9cee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd942, 0x20b4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd943, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd944, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd945, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd946, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd947, 0x402e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd948, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd949, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd94a, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd94b, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd94c, 0x22a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd94d, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd94e, 0x64db);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd94f, 0x8bbc);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd950, 0xb84b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd951, 0xb80c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd952, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd953, 0xdf0b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd954, 0xdf0c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd955, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd956, 0xc9b9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd957, 0xcaca);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd958, 0x899e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd959, 0xb84e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd95a, 0x8aac);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd95b, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd95c, 0xb60c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd95d, 0x9cee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd95e, 0x20c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd95f, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd960, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd961, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd962, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd963, 0x402e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd964, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd965, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd966, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd967, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd968, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd969, 0x20a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd96a, 0x3004);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd96b, 0x64d9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd96c, 0x899e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd96d, 0xbf0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd96e, 0xbf4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd96f, 0x4012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd970, 0x2f0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd971, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd972, 0x2054);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd973, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd974, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd975, 0x2064);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd976, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd977, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd978, 0x8ee9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd979, 0xbe0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd97a, 0xbf4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd97b, 0x5e23);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd97c, 0x0382);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd97d, 0x0008);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd97e, 0x401e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd97f, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd980, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd981, 0x280e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd982, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd983, 0x63ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd984, 0x0008);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd985, 0x2fee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd986, 0x3ffe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd987, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd988, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd989, 0x280e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd98a, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd98b, 0x63ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd98c, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd98d, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd98e, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd98f, 0x20a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd990, 0x3004);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd991, 0x64d9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd992, 0x899e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd993, 0xbf0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd994, 0xbf4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd995, 0x4012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd996, 0x5e23);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd997, 0x03d2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd998, 0x001d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd999, 0x2f0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd99a, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd99b, 0x2054);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd99c, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd99d, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd99e, 0x2064);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd99f, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a0, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a1, 0x8ee9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a2, 0xbe0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a3, 0xbf4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a4, 0x5e23);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a5, 0x0382);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a6, 0x0009);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a7, 0x2fee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a8, 0x3ffe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9a9, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9aa, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ab, 0x280e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ac, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ad, 0x63ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ae, 0x0007);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9af, 0x401e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b0, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b1, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b2, 0x280e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b3, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b4, 0x63ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b5, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b6, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b7, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b8, 0x2844);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9b9, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ba, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9bb, 0x2d62);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9bc, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9bd, 0x1e52);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9be, 0x20c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9bf, 0x3c24);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c0, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c1, 0x2ff9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c2, 0x3fd9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c3, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c4, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c5, 0x26c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c6, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c7, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c8, 0x2ff9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9c9, 0x3fa9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ca, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9cb, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9cc, 0x2894);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9cd, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ce, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9cf, 0x2f79);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d0, 0x3ff9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d1, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d2, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d3, 0x2eb2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d4, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d5, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d6, 0x2894);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d7, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d8, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9d9, 0x2089);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9da, 0x3009);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9db, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9dc, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9dd, 0x26c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9de, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9df, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e0, 0x2009);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e1, 0x3059);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e2, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e3, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e4, 0x20c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e5, 0x3c24);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e6, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e7, 0x2009);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e8, 0x3029);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9e9, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ea, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9eb, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ec, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ed, 0x64d6);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ee, 0x21f7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ef, 0x3fc7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f0, 0x8676);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f1, 0xb505);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f2, 0x9566);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f3, 0x66c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f4, 0xb545);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f5, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f6, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f7, 0x6138);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f8, 0x5883);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9f9, 0x2062);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9fa, 0x3032);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9fb, 0x1302);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9fc, 0x2ff7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9fd, 0x3007);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9fe, 0x8786);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd9ff, 0xb887);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda00, 0x8785);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda01, 0xb8c5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda02, 0x5e63);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda03, 0x2f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda04, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda05, 0x13c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda06, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda07, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda08, 0x0c82);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda09, 0x0d87);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda0a, 0x0e8d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda0b, 0x1092);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda0c, 0x1198);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda0d, 0x129d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda0e, 0x14a3);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda0f, 0x16a8);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda10, 0x17ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda11, 0x18b4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda12, 0x0000);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xda13, 0x0000);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd080, 0x0100);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xd092, 0x0000);   
+
+//sleep 400000	   # us
+for(i=0;i<100000;i++); 
+//NLM_C45_PRINTF(".");
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc08, 0x07c6);  // 5:0 = 0x6
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc08, 0x08c6);  //11:6 = 0x23
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc09, 0x07e8);  // 5:0 = 0x28
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc09, 0x0b68);  //11:6 = 0x2d
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc0e, 0x0001);  // 0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xcc0e, 0x0000);  // 0:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e1, 0x000f);  // 3:0 = 0xf
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc088, 0x0004);  // 3:0 = 0x4
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc290, 0x0001);  // 0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca01, 0x0041);  // 7:1 = 0x20
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xca51, 0x0041);  // 7:1 = 0x20
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e8, 0x0000);  // 8:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e9, 0x0000);  // 8:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2ea, 0x0000);  // 8:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2eb, 0x0000);  // 8:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e6, 0x0800);  //11:11= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e6, 0x0000);  //11:11= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e0, 0x00e4);  // 7:0 = 0xe4
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e1, 0x000f);  //13:12= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc20d, 0x0000);  // 9:8 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc012, 0x000a);  // 3:0 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc012, 0x00aa);  // 7:4 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc0f0, 0x010a);  //  
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc0f1, 0x0056);  //  #  7:0 = 0x56
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc20d, 0x0002);  //  #  1:1 = 0x1
+//sleep 200000	   # us
+for(i=0;i<100000;i++); 
+//NLM_C45_PRINTF(".");
+
diff --git a/arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_RXAUI_Marvell.h b/arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_RXAUI_Marvell.h
new file mode 100644
index 0000000..31ccdbd
--- /dev/null
+++ b/arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_RXAUI_Marvell.h
@@ -0,0 +1,670 @@
+//
+// autogenerated by RegUtils.pm on 2011/12/22 12:13 format: mdioFullReg
+//
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca42, 0x0100); // 10:8 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca44, 0x81f8); // 15:12= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca44, 0x8218); //  9:5 = 0x10
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca46, 0x0100); //  8:8 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca46, 0x0900); // 11:9 = 0x4
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb0e, 0x1000); // 13:12= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca4c, 0x0002); //  5:0 = 0x2
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca12, 0x0100); // 10:8 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca14, 0x81f8); // 15:12= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca14, 0x8218); //  9:5 = 0x10
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca16, 0x0100); //  8:8 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca16, 0x0900); // 11:9 = 0x4
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb06, 0x1000); // 13:12= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca1c, 0x0002); //  5:0 = 0x2
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca42, 0x0900); // 13:11= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca43, 0x2492); // 14:12= 0x2
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc246, 0x0181); //  9:7 = 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc242, 0x8100); //  2:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc240, 0x1000); //  7:4 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc240, 0x3800); // 13:11= 0x7
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc242, 0x0100); // 15:13= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc246, 0x0180); //  0:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc246, 0x0182); //  1:1 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc243, 0x07e1); //  4:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc243, 0x07e1); // 10:5 = 0x3f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc243, 0x17e1); // 15:11= 0x2
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb0b, 0x0001); //  1:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb0b, 0x0011); //  5:4 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb0b, 0x0311); //  9:8 = 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb0b, 0x0f11); // 11:10= 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb0b, 0x3f11); // 13:12= 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb0b, 0xff11); // 15:14= 0x3
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc00, 0x00f6); //  7:0 = 0xf6
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc02, 0x0081); //  7:7 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc02, 0x0001); //  7:7 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc07, 0x0117); //  4:0 = 0x17
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc08, 0x07df); //  5:0 = 0x1f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc08, 0x07df); // 11:6 = 0x1f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc09, 0x07df); //  5:0 = 0x1f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc09, 0x07df); // 11:6 = 0x1f
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc07, 0x0017); //  8:5 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc0e, 0x0001); //  0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc0e, 0x0003); //  1:1 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc0e, 0x0007); //  2:2 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc0e, 0x0006); //  0:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc0e, 0x0004); //  1:1 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc0e, 0x0000); //  2:2 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc02, 0x0021); //  5:5 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc04, 0x0001); //  0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc04, 0x00b5); //  8:1 = 0x5a
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc11, 0x4904); //  5:3 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc11, 0x4804); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc11, 0x4004); // 11:9 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc11, 0x0004); // 14:12= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc11, 0x0000); //  2:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb02, 0x00f0); //  7:4 = 0xf
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb02, 0x00ff); //  3:0 = 0xf
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb21, 0x1000); // 15:12= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca01, 0x0001); //  0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca01, 0x0011); //  7:1 = 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcb1b, 0x1000); // 15:12= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca51, 0x0001); //  0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca51, 0x0011); //  7:1 = 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2c3, 0x000f); //  3:0 = 0xf
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2ca, 0x43c0); // 15:11= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2d0, 0x43c0); // 15:11= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2d6, 0x43c0); // 15:11= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2dc, 0x43c0); // 15:11= 0x8
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2f1, 0x5f15); //  5:1 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2f1, 0x5e15); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2f5, 0x5f15); //  5:1 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2f5, 0x5e15); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2f9, 0x5f15); //  5:1 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2f9, 0x5e15); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2fd, 0x5f15); //  5:1 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2fd, 0x5e15); //  8:6 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e8, 0x0100); //  8:0 = 0x100
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e9, 0x0100); //  8:0 = 0x100
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2ea, 0x0100); //  8:0 = 0x100
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2eb, 0x0100); //  8:0 = 0x100
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e6, 0x0800); // 11:11= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e6, 0x0000); // 11:11= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc017, 0xdf20); // 13:13= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc010, 0x4000); // 14:14= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcd40, 0x0001); //  3:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc010, 0x6000); // 13:13= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc05, 0x001f); //  2:0 = 0x7
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc03, 0x0020); //  9:0 = 0x20
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc019, 0x1531); // 10:10= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xff2a, 0x004a); // 
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd008, 0x0001); //  0:0 = 0x1
+
+//sleep 100000	   # us
+//for(i=0;i<100000;i++) NLM_C45_PRINTF(".");
+// WARNING: mdtrace, reg  1.d000 write value (5200) doesn't match read back (5000)
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd000, 0x5200);   
+
+//sleep 100000	   # us
+//for(i=0;i<100000;i++) NLM_C45_PRINTF(".");
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd800, 0x2fff);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd801, 0x300f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd802, 0x2ff4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd803, 0x3ef4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd804, 0x20ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd805, 0x301e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd806, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd807, 0x22c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd808, 0x3ef4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd809, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd80a, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd80b, 0x220e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd80c, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd80d, 0x2124);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd80e, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd80f, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd810, 0x23fe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd811, 0x3c1e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd812, 0x2214);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd813, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd814, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd815, 0x20a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd816, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd817, 0x2dfe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd818, 0x307e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd819, 0x6e24);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd81a, 0x6e24);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd81b, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd81c, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd81d, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd81e, 0x402e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd81f, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd820, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd821, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd822, 0x2014);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd823, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd824, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd825, 0x6e8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd826, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd827, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd828, 0x2044);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd829, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd82a, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd82b, 0x6e8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd82c, 0x201e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd82d, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd82e, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd82f, 0x20d4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd830, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd831, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd832, 0x6e8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd833, 0x21fe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd834, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd835, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd836, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd837, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd838, 0x404e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd839, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd83a, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd83b, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd83c, 0x21f5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd83d, 0x3005);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd83e, 0xb805);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd83f, 0x8556);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd840, 0x8557);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd841, 0x8558);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd842, 0x8559);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd843, 0x855a);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd844, 0x400d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd845, 0x6d8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd846, 0x2032);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd847, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd848, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd849, 0x2132);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd84a, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd84b, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd84c, 0x21c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd84d, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd84e, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd84f, 0x2302);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd850, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd851, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd852, 0x23a2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd853, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd854, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd855, 0x24c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd856, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd857, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd858, 0x2562);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd859, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd85a, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd85b, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd85c, 0x4004);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd85d, 0xb814);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd85e, 0x5e43);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd85f, 0x03d7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd860, 0x2032);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd861, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd862, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd863, 0x200e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd864, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd865, 0x0002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd866, 0xd01e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd867, 0x6e8f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd868, 0x20fe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd869, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd86a, 0xb80e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd86b, 0xd01d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd86c, 0x5de3);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd86d, 0x249e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd86e, 0x301e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd86f, 0x135e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd870, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd871, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd872, 0x20d4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd873, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd874, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd875, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd876, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd877, 0x404e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd878, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd879, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd87a, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd87b, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd87c, 0x2044);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd87d, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd87e, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd87f, 0x6f7e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd880, 0x2014);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd881, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd882, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd883, 0x200e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd884, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd885, 0x2124);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd886, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd887, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd888, 0x2504);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd889, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd88a, 0x4015);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd88b, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd88c, 0x2514);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd88d, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd88e, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd88f, 0xb145);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd890, 0xb115);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd891, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd892, 0x2bd2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd893, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd894, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd895, 0x678f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd896, 0x2514);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd897, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd898, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd899, 0xb145);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd89a, 0xb105);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd89b, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd89c, 0x2bd2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd89d, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd89e, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd89f, 0x6f78);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a0, 0xe78e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a1, 0x22c5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a2, 0x3ef5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a3, 0x6ec5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a4, 0x2084);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a5, 0x3034);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a6, 0x2005);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a7, 0x3d75);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a8, 0xc451);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8a9, 0x2f62);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8aa, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ab, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ac, 0x2444);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ad, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ae, 0x2ed2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8af, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b0, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b1, 0x2144);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b2, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b3, 0x2ed2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b4, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b5, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b6, 0x2f02);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b7, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b8, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8b9, 0x28c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ba, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8bb, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8bc, 0x0000);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8bd, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8be, 0x4007);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8bf, 0x2524);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c0, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c1, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c2, 0x2005);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c3, 0x9575);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c4, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c5, 0x678f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c6, 0x2dd2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c7, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c8, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8c9, 0x6f77);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ca, 0x2514);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8cb, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8cc, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8cd, 0xbd05);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ce, 0xbf45);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8cf, 0x2db2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d0, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d1, 0x5553);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d2, 0x1302);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d3, 0x2006);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d4, 0x3016);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d5, 0x5763);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d6, 0x13c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d7, 0xd017);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d8, 0x2bf2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8d9, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8da, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8db, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8dc, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8dd, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8de, 0x2514);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8df, 0x3cd4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e0, 0x64d5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e1, 0x4026);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e2, 0x9655);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e3, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e4, 0x648f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e5, 0x401d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e6, 0x2f22);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e7, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e8, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8e9, 0x6f74);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ea, 0x2fd6);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8eb, 0x3ff6);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ec, 0x8655);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ed, 0x65c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ee, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ef, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f0, 0x22cd);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f1, 0x301d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f2, 0x2108);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f3, 0x3808);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f4, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f5, 0x5dd3);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f6, 0x2012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f7, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f8, 0x1302);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8f9, 0x63a8);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8fa, 0x2b72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8fb, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8fc, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8fd, 0xdffd);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8fe, 0x2f52);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd8ff, 0x3012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd900, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd901, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd902, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd903, 0x2214);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd904, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd905, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd906, 0x2ef4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd907, 0x3ff4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd908, 0x8e4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd909, 0x2214);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd90a, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd90b, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd90c, 0x2104);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd90d, 0x3004);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd90e, 0x9e4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd90f, 0x2214);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd910, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd911, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd912, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd913, 0x2294);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd914, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd915, 0x64db);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd916, 0x8bbc);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd917, 0xb84b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd918, 0x300c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd919, 0xdf0b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd91a, 0xdf0c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd91b, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd91c, 0xc5b5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd91d, 0xc6c6);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd91e, 0x855e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd91f, 0xb84e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd920, 0x866c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd921, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd922, 0xb60c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd923, 0x9cee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd924, 0x20a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd925, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd926, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd927, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd928, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd929, 0x202e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd92a, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd92b, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd92c, 0x200e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd92d, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd92e, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd92f, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd930, 0x22b4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd931, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd932, 0x64db);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd933, 0x8bbc);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd934, 0xb84b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd935, 0xb80c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd936, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd937, 0xdf0b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd938, 0xdf0c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd939, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd93a, 0xc7b7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd93b, 0xc8c8);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd93c, 0x877e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd93d, 0xb84e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd93e, 0x888c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd93f, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd940, 0xb60c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd941, 0x9cee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd942, 0x20b4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd943, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd944, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd945, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd946, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd947, 0x402e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd948, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd949, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd94a, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd94b, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd94c, 0x22a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd94d, 0x3ca4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd94e, 0x64db);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd94f, 0x8bbc);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd950, 0xb84b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd951, 0xb80c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd952, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd953, 0xdf0b);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd954, 0xdf0c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd955, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd956, 0xc9b9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd957, 0xcaca);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd958, 0x899e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd959, 0xb84e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd95a, 0x8aac);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd95b, 0xb84c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd95c, 0xb60c);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd95d, 0x9cee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd95e, 0x20c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd95f, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd960, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd961, 0x20e4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd962, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd963, 0x402e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd964, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd965, 0x400e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd966, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd967, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd968, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd969, 0x20a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd96a, 0x3004);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd96b, 0x64d9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd96c, 0x899e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd96d, 0xbf0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd96e, 0xbf4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd96f, 0x4012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd970, 0x2f0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd971, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd972, 0x2054);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd973, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd974, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd975, 0x2064);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd976, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd977, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd978, 0x8ee9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd979, 0xbe0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd97a, 0xbf4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd97b, 0x5e23);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd97c, 0x0382);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd97d, 0x0008);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd97e, 0x401e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd97f, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd980, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd981, 0x280e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd982, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd983, 0x63ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd984, 0x0008);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd985, 0x2fee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd986, 0x3ffe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd987, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd988, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd989, 0x280e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd98a, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd98b, 0x63ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd98c, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd98d, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd98e, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd98f, 0x20a4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd990, 0x3004);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd991, 0x64d9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd992, 0x899e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd993, 0xbf0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd994, 0xbf4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd995, 0x4012);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd996, 0x5e23);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd997, 0x03d2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd998, 0x001d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd999, 0x2f0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd99a, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd99b, 0x2054);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd99c, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd99d, 0x6ec4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd99e, 0x2064);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd99f, 0x3cc4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a0, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a1, 0x8ee9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a2, 0xbe0e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a3, 0xbf4e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a4, 0x5e23);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a5, 0x0382);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a6, 0x0009);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a7, 0x2fee);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a8, 0x3ffe);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9a9, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9aa, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ab, 0x280e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ac, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ad, 0x63ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ae, 0x0007);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9af, 0x401e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b0, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b1, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b2, 0x280e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b3, 0x300e);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b4, 0x63ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b5, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b6, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b7, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b8, 0x2844);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9b9, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ba, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9bb, 0x2d62);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9bc, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9bd, 0x1e52);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9be, 0x20c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9bf, 0x3c24);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c0, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c1, 0x2ff9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c2, 0x3fd9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c3, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c4, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c5, 0x26c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c6, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c7, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c8, 0x2ff9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9c9, 0x3fa9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ca, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9cb, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9cc, 0x2894);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9cd, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ce, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9cf, 0x2f79);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d0, 0x3ff9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d1, 0x89e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d2, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d3, 0x2eb2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d4, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d5, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d6, 0x2894);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d7, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d8, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9d9, 0x2089);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9da, 0x3009);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9db, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9dc, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9dd, 0x26c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9de, 0x3c04);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9df, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e0, 0x2009);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e1, 0x3059);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e2, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e3, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e4, 0x20c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e5, 0x3c24);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e6, 0x64de);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e7, 0x2009);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e8, 0x3029);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9e9, 0x99e9);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ea, 0x69c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9eb, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ec, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ed, 0x64d6);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ee, 0x21f7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ef, 0x3fc7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f0, 0x8676);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f1, 0xb505);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f2, 0x9566);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f3, 0x66c4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f4, 0xb545);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f5, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f6, 0x628f);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f7, 0x6138);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f8, 0x5883);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9f9, 0x2062);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9fa, 0x3032);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9fb, 0x1302);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9fc, 0x2ff7);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9fd, 0x3007);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9fe, 0x8786);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd9ff, 0xb887);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda00, 0x8785);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda01, 0xb8c5);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda02, 0x5e63);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda03, 0x2f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda04, 0x3022);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda05, 0x13c2);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda06, 0x6f72);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda07, 0x1002);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda08, 0x0c82);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda09, 0x0d87);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda0a, 0x0e8d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda0b, 0x1092);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda0c, 0x1198);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda0d, 0x129d);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda0e, 0x14a3);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda0f, 0x16a8);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda10, 0x17ae);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda11, 0x18b4);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda12, 0x0000);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xda13, 0x0000);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd080, 0x0100);   
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xd092, 0x0000);   
+
+//sleep 400000	   # us
+//for(i=0;i<100000;i++) NLM_C45_PRINTF(".");
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc08, 0x07c6);  // 5:0 = 0x6
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc08, 0x08c6);  //11:6 = 0x23
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc09, 0x07e8);  // 5:0 = 0x28
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc09, 0x0b68);  //11:6 = 0x2d
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc0e, 0x0001);  // 0:0 = 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xcc0e, 0x0000);  // 0:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e1, 0x000f);  // 3:0 = 0xf
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc088, 0x0004);  // 3:0 = 0x4
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc290, 0x0000);  // 0:0 = 0x1   // Marvell mode
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca01, 0x0041);  // 7:1 = 0x20
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xca51, 0x0041);  // 7:1 = 0x20
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e8, 0x0000);  // 8:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e9, 0x0000);  // 8:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2ea, 0x0000);  // 8:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2eb, 0x0000);  // 8:0 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e6, 0x0800);  //11:11= 0x1
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e6, 0x0000);  //11:11= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e0, 0x00e4);  // 7:0 = 0xe4
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc2e1, 0x000f);  //13:12= 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc20d, 0x0000);  // 9:8 = 0x0
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc012, 0x000a);  // 3:0 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc012, 0x00aa);  // 7:4 = 0xa
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc0f0, 0x010a);  //  
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc0f1, 0x0056);  //  #  7:0 = 0x56
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr,0xc20d, 0x0002);  //  #  1:1 = 0x1
+//sleep 200000	   # us
+//for(i=0;i<100000;i++) NLM_C45_PRINTF(".");
+
diff --git a/arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_XAUI.h b/arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_XAUI.h
new file mode 100644
index 0000000..b5458c7
--- /dev/null
+++ b/arch/mips/netlogic/lib/netlib/external/NETSOC_NLP1042C2_XAUI.h
@@ -0,0 +1,457 @@
+//#NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xc2e1, data);
+
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0x0000, 0xA040);
+//s 200000);
+//sleep   300000;  # wait for uC to settle offset calibration
+//for(i=0;i<100000;i++){
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC019, 0x1531);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC010, 0x4000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC017, 0xDF20);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC010, 0x6000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCD40, 0x0001);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC019, 0x1531);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA42, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA44, 0x81F8);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA44, 0x8218);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA46, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA46, 0x0900);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB0E, 0x1000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA4C, 0x0002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA12, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA14, 0x81F8);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA14, 0x8218);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA16, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA16, 0x0900);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB06, 0x1000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA1C, 0x0002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA42, 0x0900);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA43, 0x2492);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC246, 0x0181);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC242, 0x8100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC240, 0x1000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC240, 0x3800);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC242, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC246, 0x0180);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC246, 0x0182);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC243, 0x07E1);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC243, 0x17E1);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB0B, 0x0001);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB0B, 0x0011);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB0B, 0x0311);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB0B, 0x0F11);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB0B, 0x3F11);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB0B, 0xFF11);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC00, 0x00F6);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC02, 0x0081);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC02, 0x0001);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC07, 0x0117);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC07, 0x0017);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC0E, 0x0001);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC0E, 0x0003);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC0E, 0x0007);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC0E, 0x0006);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC0E, 0x0004);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC0E, 0x0000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC02, 0x0021);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC04, 0x0001);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC04, 0x00B5);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC11, 0x4904);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC11, 0x4804);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC11, 0x4004);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC11, 0x0004);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC11, 0x0000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB02, 0x00F0);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB02, 0x00FF);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB21, 0x1000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA01, 0x0001);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA01, 0x0011);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCB1B, 0x1000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA51, 0x0001);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCA51, 0x0011);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2C3, 0x000F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2CA, 0x43C0);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2D0, 0x43C0);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2D6, 0x43C0);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2DC, 0x43C0);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2F1, 0x5F15);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2F1, 0x5E15);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2F5, 0x5F15);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2F5, 0x5E15);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2F9, 0x5F15);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2F9, 0x5E15);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2FD, 0x5F15);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2FD, 0x5E15);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2E8, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2E9, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2EA, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2EB, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2E6, 0x0800);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC2E6, 0x0000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC05, 0x001F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC03, 0x0020);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xFF2A, 0x004A);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCD40, 0x000F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCD4A, 0x0400);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCD40, 0x0001);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC0F0, 0x0102);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC0F1, 0x0056);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC20D, 0x0002);
+
+//s 200000);
+//s 100000);
+//sleep   300000;  # wait for uC to settle offset calibration
+//for(i=0;i<100000;i++){
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xC0F1, 0x0056);
+//s 200000);
+//sleep   300000;  # wait for uC to settle offset calibration
+//for(i=0;i<100000;i++){
+
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD008, 0x0001);
+//s 200000);
+//sleep   300000;  # wait for uC to settle offset calibration
+//for(i=0;i<100000;i++){
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD000, 0x5200);
+//s 200000);
+//sleep   300000;  # wait for uC to settle offset calibration
+//for(i=0;i<100000;i++){
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD800, 0x2FFF);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD801, 0x300F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD802, 0x220E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD803, 0x300E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD804, 0x2124);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD805, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD806, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD807, 0x23FE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD808, 0x3C1E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD809, 0x2214);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD80A, 0x3CA4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD80B, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD80C, 0x20A4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD80D, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD80E, 0x2DFE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD80F, 0x307E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD810, 0x6E24);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD811, 0x6E24);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD812, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD813, 0x20E4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD814, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD815, 0x402E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD816, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD817, 0x400E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD818, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD819, 0x2014);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD81A, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD81B, 0x64DE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD81C, 0x6E8F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD81D, 0x400E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD81E, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD81F, 0x2044);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD820, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD821, 0x64DE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD822, 0x6E8F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD823, 0x201E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD824, 0x300E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD825, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD826, 0x20D4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD827, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD828, 0x64DE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD829, 0x6E8F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD82A, 0x21FE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD82B, 0x300E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD82C, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD82D, 0x20E4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD82E, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD82F, 0x404E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD830, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD831, 0x400E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD832, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD833, 0x21F5);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD834, 0x3005);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD835, 0xB805);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD836, 0x8556);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD837, 0x8557);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD838, 0x8558);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD839, 0x8559);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD83A, 0x855A);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD83B, 0x400D);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD83C, 0x6D8F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD83D, 0x2DD2);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD83E, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD83F, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD840, 0x2ED2);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD841, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD842, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD843, 0x2F62);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD844, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD845, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD846, 0x20A2);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD847, 0x3022);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD848, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD849, 0x2142);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD84A, 0x3022);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD84B, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD84C, 0x2262);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD84D, 0x3022);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD84E, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD84F, 0x2302);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD850, 0x3022);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD851, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD852, 0x6F7E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD853, 0x4004);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD854, 0xB814);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD855, 0x5E43);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD856, 0x03D7);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD857, 0x2DD2);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD858, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD859, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD85A, 0x200E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD85B, 0x300E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD85C, 0x0002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD85D, 0xD01E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD85E, 0x6E8F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD85F, 0x20FE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD860, 0x300E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD861, 0xB80E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD862, 0xD01D);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD863, 0x5DE3);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD864, 0x240E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD865, 0x301E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD866, 0x135E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD867, 0x6F7E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD868, 0x6F7E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD869, 0x20D4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD86A, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD86B, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD86C, 0x20E4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD86D, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD86E, 0x404E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD86F, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD870, 0x400E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD871, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD872, 0x6F7E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD873, 0x2044);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD874, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD875, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD876, 0x6F7E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD877, 0x2014);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD878, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD879, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD87A, 0x200E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD87B, 0x300E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD87C, 0x2124);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD87D, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD87E, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD87F, 0x2504);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD880, 0x3CD4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD881, 0x4015);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD882, 0x65C4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD883, 0x2514);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD884, 0x3CD4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD885, 0x64D5);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD886, 0xB145);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD887, 0xB115);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD888, 0x65C4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD889, 0x29F2);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD88A, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD88B, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD88C, 0x678F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD88D, 0x2514);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD88E, 0x3CD4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD88F, 0x64D5);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD890, 0xB145);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD891, 0xB105);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD892, 0x65C4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD893, 0x29F2);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD894, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD895, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD896, 0x6F78);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD897, 0xE78E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD898, 0x2D02);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD899, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD89A, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD89B, 0x2832);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD89C, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD89D, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD89E, 0x0000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD89F, 0x628F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A0, 0x4007);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A1, 0x2524);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A2, 0x3CD4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A3, 0x64D5);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A4, 0x2005);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A5, 0x9575);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A6, 0x65C4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A7, 0x678F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A8, 0x2BF2);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8A9, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8AA, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8AB, 0x6F77);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8AC, 0x2514);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8AD, 0x3CD4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8AE, 0x64D5);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8AF, 0xBD05);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B0, 0xBF45);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B1, 0x2BD2);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B2, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B3, 0x5553);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B4, 0x1302);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B5, 0x2006);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B6, 0x3016);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B7, 0x5763);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B8, 0x13C2);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8B9, 0xD017);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8BA, 0x2A12);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8BB, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8BC, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8BD, 0x6F72);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8BE, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8BF, 0x628F);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C0, 0x2514);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C1, 0x3CD4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C2, 0x64D5);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C3, 0x4026);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C4, 0x9655);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C5, 0x65C4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C6, 0x401D);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C7, 0x2D22);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C8, 0x3012);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8C9, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8CA, 0x2FD6);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8CB, 0x3FF6);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8CC, 0x8655);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8CD, 0x65C4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8CE, 0x6F72);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8CF, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D0, 0x200D);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D1, 0x302D);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D2, 0x2408);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D3, 0x35D8);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D4, 0x5DD3);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D5, 0x0307);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D6, 0x8887);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D7, 0x63A7);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D8, 0x8887);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8D9, 0x63A7);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8DA, 0xDFFD);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8DB, 0x00F9);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8DC, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8DD, 0x2214);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8DE, 0x3CA4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8DF, 0x64DE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E0, 0x2EF4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E1, 0x3FF4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E2, 0x8E4E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E3, 0x2214);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E4, 0x3CA4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E5, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E6, 0x2104);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E7, 0x3004);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E8, 0x9E4E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8E9, 0x2214);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8EA, 0x3CA4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8EB, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8EC, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8ED, 0x2294);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8EE, 0x3CA4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8EF, 0x64DB);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F0, 0x8BBC);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F1, 0xB84B);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F2, 0x300C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F3, 0xDF0B);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F4, 0xDF0C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F5, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F6, 0xC5B5);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F7, 0xC6C6);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F8, 0x855E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8F9, 0xB84E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8FA, 0x866C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8FB, 0xB84C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8FC, 0xB60C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8FD, 0x9CEE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8FE, 0x20A4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD8FF, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD900, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD901, 0x20E4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD902, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD903, 0x202E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD904, 0x300E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD905, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD906, 0x200E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD907, 0x300E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD908, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD909, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD90A, 0x22B4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD90B, 0x3CA4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD90C, 0x64DB);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD90D, 0x8BBC);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD90E, 0xB84B);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD90F, 0xB80C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD910, 0xB84C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD911, 0xDF0B);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD912, 0xDF0C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD913, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD914, 0xC7B7);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD915, 0xC8C8);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD916, 0x877E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD917, 0xB84E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD918, 0x888C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD919, 0xB84C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD91A, 0xB60C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD91B, 0x9CEE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD91C, 0x20B4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD91D, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD91E, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD91F, 0x20E4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD920, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD921, 0x402E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD922, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD923, 0x400E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD924, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD925, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD926, 0x22A4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD927, 0x3CA4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD928, 0x64DB);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD929, 0x8BBC);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD92A, 0xB84B);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD92B, 0xB80C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD92C, 0xB84C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD92D, 0xDF0B);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD92E, 0xDF0C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD92F, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD930, 0xC9B9);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD931, 0xCACA);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD932, 0x899E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD933, 0xB84E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD934, 0x8AAC);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD935, 0xB84C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD936, 0xB60C);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD937, 0x9CEE);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD938, 0x20C4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD939, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD93A, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD93B, 0x20E4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD93C, 0x3CC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD93D, 0x402E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD93E, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD93F, 0x400E);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD940, 0x6EC4);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD941, 0x1002);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD942, 0x0000);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD080, 0x0100);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xD092, 0x0000);
+//s 300000);
+//sleep   300000;  # wait for uC to settle offset calibration
+//for(i=0;i<100000;i++){
+
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC08, 0x07C6);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC08, 0x08C6);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC09, 0x07E8);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC09, 0x0B68);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC0E, 0x0001);
+NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, 0xCC0E, 0x0000);
+//);
diff --git a/arch/mips/netlogic/lib/netlib/include/ext_phy.h b/arch/mips/netlogic/lib/netlib/include/ext_phy.h
index 59749c6..937165c 100644
--- a/arch/mips/netlogic/lib/netlib/include/ext_phy.h
+++ b/arch/mips/netlogic/lib/netlib/include/ext_phy.h
@@ -31,6 +31,8 @@
 #ifndef __EXT_PHY_H
 #define __EXT_PHY_H
 
+
+/*1G SGMII PHY*/
 typedef struct {
         char name[16];
         int phy_idfer;
@@ -39,5 +41,13 @@ typedef struct {
         void (*phy_init)(net_port_t *netport);
 }ext_phy_t;
 
+/*10G NLP1042 PHYS*/
+enum ext_phy_info{
+	NLP1042_PHY_10G_NONE = 0,  /*No support for NLP1042 PHY*/
+	NLP1042_PHY_10G_XAUI,
+	NLP1042_PHY_10G_RXAUI_MODE1, /*Parity on adjacent lanes*/
+	NLP1042_PHY_10G_RXAUI_MODE2, /*Parity on adjacent lanes*/
+};
+
 #endif
 
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
index 8a44eb2..bf421a6 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
@@ -66,7 +66,7 @@
 
 #define DEFAULT_SGMII_CAL_SLOTS         3
 //#define DEFAULT_XAUI_CAL_SLOTS          13
-#define DEFAULT_XAUI_CAL_SLOTS          5
+#define DEFAULT_XAUI_CAL_SLOTS          8
 #define DEFAULT_ILK_CAL_SLOTS           26
 #define DEFAULT_XFI_CAL_SLOTS          7
 #define DEFAULT_XLAUI_CAL_SLOTS                13
@@ -281,8 +281,11 @@ static inline uint32_t get_intf_fifo_size(uint32_t intf_type)
         case SGMII_IF:
                 return (current_netsoc->ingress.max_if_fifo / current_netsoc->max_ports);
         case XAUI_IF:
+                return (current_netsoc->ingress.max_if_fifo / current_netsoc->max_ports)*4;
         case RXAUI_IF:
-                return (current_netsoc->ingress.max_if_fifo / current_netsoc->max_ports) * 4;
+		if(is_nlm_xlp9xx())
+                	return (current_netsoc->ingress.max_if_fifo / current_netsoc->max_ports)*2;
+                return (current_netsoc->ingress.max_if_fifo / current_netsoc->max_ports)*4;
         case INTERLAKEN_IF:
                 return (current_netsoc->ingress.max_if_fifo / current_netsoc->max_ports) * 8;	//FIXME J
         default:
@@ -302,7 +305,10 @@ static inline uint32_t get_prsr_seq_fifo_size(uint32_t intf_type)
         case SGMII_IF:
                 return DEFAULT_SGMII_PARSERSEQFIFO_SZ;
         case XAUI_IF:
+                return DEFAULT_XAUI_PARSERSEQFIFO_SZ;
         case RXAUI_IF:
+		if(is_nlm_xlp9xx())
+                	return DEFAULT_XAUI_PARSERSEQFIFO_SZ/2;
                 return DEFAULT_XAUI_PARSERSEQFIFO_SZ;
         case INTERLAKEN_IF:
                 return DEFAULT_ILK_PARSERSEQFIFO_SZ;
@@ -317,7 +323,10 @@ static inline uint32_t get_rx_buf_size(uint32_t intf_type)
         case SGMII_IF:
                 return DEFAULT_SGMII_RXFIFO_SZ;
         case XAUI_IF:
+                return DEFAULT_XAUI_RXFIFO_SZ;
         case RXAUI_IF:
+		if(is_nlm_xlp9xx())
+                	return DEFAULT_XAUI_RXFIFO_SZ/2;
                 return DEFAULT_XAUI_RXFIFO_SZ;
         case INTERLAKEN_IF:
                 return DEFAULT_ILK_RXFIFO_SZ;
@@ -326,6 +335,23 @@ static inline uint32_t get_rx_buf_size(uint32_t intf_type)
         }
 }
 
+static inline uint32_t get_max_lanes(uint32_t intf_type)
+{
+	if(RXAUI_IF==intf_type){
+		if(is_nlm_xlp9xx()) 
+			return 2;
+		return 4;
+	}else if(XAUI_IF==intf_type){
+		return 4;
+	}
+	else if(INTERLAKEN_IF==intf_type){
+		return 8;	
+	}else if((SGMII_IF==intf_type) && (XFI_IF==intf_type)){
+		return 1;
+	}else
+		return 0;	
+}
+
 static inline uint32_t get_ucore_mask(uint32_t intf_type)
 {
 	return current_netsoc->ucore_mask;
@@ -353,7 +379,11 @@ static inline void update_default_config(int intf_type, uint32_t *config, uint32
                 for(iface = 0; iface < 4; iface++) {
                         *config++ = val;
                 }
-        }
+        }else if((intf_type == RXAUI_IF) && is_nlm_xlp9xx()){
+                for(iface = 0; iface < 2; iface++) {
+                        *config++ = val;
+                }
+	}
         else {
                 *config = val;
         }
@@ -372,10 +402,21 @@ static inline int get_num_ports(int block, int intf_type)
                return 4;
 	}else if (is_nlm_xlp9xx() && intf_type == XLAUI_IF) {
 		return 1;
+	}else if (is_nlm_xlp9xx() && intf_type == RXAUI_IF) {
+		return 2;
 	}
 	else
 		return 1;	
+}
 
+static inline int get_intf_hw_port_id(int block, int intf_type, int offset)
+{
+	int base_blk_id = block*MAX_PORTS_PERBLOCK;
+	if (is_nlm_xlp9xx() && intf_type == RXAUI_IF) {
+		return (base_blk_id + (offset*get_num_ports(block, intf_type)));
+	}
+	else
+		return (base_blk_id + offset);	
 }
 
 #endif
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
index 574a5a4..ed76e21 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
@@ -99,6 +99,9 @@ extern unsigned char vsemi_mem_sgmii [256];
 extern unsigned char vsemi_mem_xaui_4page [256];
 extern unsigned char vsemi_mem_xaui [256];
 
+extern unsigned char vsemi_mem_rxaui_4page [256];
+extern unsigned char vsemi_mem_rxaui [256];
+
 extern unsigned char vsemi_mem_12G_4page [256];
 extern unsigned char vsemi_mem_12G [256];
 
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
index b4c15fe..4903c00 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
@@ -266,6 +266,13 @@ static inline void netsoc_api_writel(uint64_t base, uint32_t index, uint32_t val
 #define netsoc_write_gmac_reg(port, reg) \
 	netsoc_write_mac_reg(netsoc_get_macreg_base_for_gmac(port->nae->mac_base, port->hw_port_id), reg, val)
 
+#define NETSOC_NLM_C45_WRITE(nae, bus, phyaddr, dev_addr, reg_addr, wdata)    \
+   __netsoc_c45_mdio_indirect_write_external(nae, bus, phyaddr, dev_addr, reg_addr, wdata) 
+
+#define NETSOC_NLM_C45_READ(nae, bus, phyaddr, dev_addr, reg_addr)    \
+   __netsoc_c45_mdio_indirect_read_external(nae, bus, phyaddr, dev_addr, reg_addr)
+
+
 
 extern int init_netsoc(void *fdt, uint32_t dom_id);
 extern void brcm_netsoc_lib_init(struct netsoc_lib_param *libparam);
diff --git a/arch/mips/netlogic/lib/netlib/include/nlm_hal_nae.h b/arch/mips/netlogic/lib/netlib/include/nlm_hal_nae.h
index c48549d..45f4fe9 100644
--- a/arch/mips/netlogic/lib/netlib/include/nlm_hal_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/nlm_hal_nae.h
@@ -134,8 +134,10 @@ struct nae_complex_config {
 	uint32_t lane_rate;
 	uint32_t higig_mode;
 	uint32_t xgmii_speed;
-	uint32_t vlan_pri_en;
-	uint32_t msec_port_enable;
+	uint32_t vlan_pri_en[MAX_PORTS_PERBLOCK];
+	uint32_t msec_port_enable[MAX_PORTS_PERBLOCK];
+	uint32_t rxaui_submode[MAX_PORTS_PERBLOCK];
+	uint32_t rxaui_scrambler[MAX_PORTS_PERBLOCK];
 };
 
 
diff --git a/arch/mips/netlogic/lib/netlib/include/nlm_hal_vsemi_data.h b/arch/mips/netlogic/lib/netlib/include/nlm_hal_vsemi_data.h
index 8eb6dcb..3ffa75a 100644
--- a/arch/mips/netlogic/lib/netlib/include/nlm_hal_vsemi_data.h
+++ b/arch/mips/netlogic/lib/netlib/include/nlm_hal_vsemi_data.h
@@ -10,6 +10,9 @@ extern void nlm_hal_config_vsemi_mem_12G(void);
 extern void nlm_hal_config_vsemi_mem_xaui(void);
 extern void nlm_hal_config_vsemi_mem_xaui_4page(void);
 
+extern void nlm_hal_config_vsemi_mem_rxaui(void);
+extern void nlm_hal_config_vsemi_mem_rxaui_4page(void);
+
 void nlm_hal_config_vsemi_mem_10G_lane(void);   
 void nlm_hal_config_vsemi_mem_10G_lane_4page(void);     
 void nlm_hal_config_vsemi_mem_sgmii_4page(void);
diff --git a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
index b4d572d..bab3c94 100644
--- a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
@@ -255,6 +255,7 @@ struct nlm_hal_nae_port {
         int  vlan_pri_en;
         int  iftype;
         int  num_channels;
+	int msec_enable;
         uint32_t context_base;
         uint32_t lport_id;
 	uint32_t  rx_buf_size;
@@ -270,7 +271,7 @@ struct nlm_hal_nae_port {
         int  ext_phy_bus;
 	void *phy_dev;
 	uint32_t  rxaui_scrambler; /* 0: disable scrambler ; 1: enable scrambler */
-	uint32_t  rxaui_mode;      /* 0: broadcom mode; 1: marvell */
+	uint32_t  rxaui_mode;      
         uint32_t  loopback;
 	uint32_t poe_queue_base;
 	nae_t *nae;
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
index 91124bb..a826c15 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
@@ -429,6 +429,13 @@ int netsoc_rx_control_perport(net_port_t *netport, uint32_t enable)
         return __netsoc_config_macen(netport, enable, INGRESS_PATH);
 }       
 
+
+int netsoc_get_port_stats(net_port_t *netport, uint32_t mac_stat)
+{
+        if (netport == NULL)
+                return -NAE_PORT_INSTANCE_INVALID;
+	//return 	__netsoc_read_mac_statistics(netport, mac_stat);
+}
 // UCORE 
 /**
 * @brief netsoc_restart_ucore function is used to load ucore code and restart ucore
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_config.c b/arch/mips/netlogic/lib/netlib/src/netsoc_config.c
index 287e09e..cd9ebd6 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_config.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_config.c
@@ -444,8 +444,8 @@ static int __netsoc_update_context_mapping(nae_t *nae, net_port_t **cntx)
                 }
                 else {
 #endif
-                        if(nae->ports[i].iftype == RXAUI_IF)
-                                nae->ports[i].iftype = XAUI_IF; /*initialization done for RXAUI. Now it`ll be considered as XAUI.*/
+                        //if(nae->ports[i].iftype == RXAUI_IF)
+                          //      nae->ports[i].iftype = XAUI_IF; /*initialization done for RXAUI. Now it`ll be considered as XAUI.*/
 
                         for(offset=0; offset < ctxsize; offset++) {
                                 nae->cntx2port[context + offset] = i; /* logical port */
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c b/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
index 7b5cd41..774cf58 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
@@ -133,15 +133,17 @@ static int fdt_get_interface_type(void *fdt, char *nae_port_str, int block, int
         int intf_type = DC_NOT_PRSNT, offset;
 	int node = nae_cfg->node;
         char port_type_str[MAX_PROP_LEN];
-	char xaui_chk_str[16];
+	//char xaui_chk_str[16];
 
 	netsoc_api_print(NETSOC_APIDBG_FDT,"get_interface_type node %d block %d port %d\n",node, block, port);
+#if 0
 	if(socnet_version_v0){
 		strcpy(xaui_chk_str, "xaui");
 	}else{
 		
 		strcpy(xaui_chk_str, "xgmac");
 	}
+#endif
 #ifndef XLP_SIM
         if (GET_PORT_STR_PROP("cpld", port_type_str, MAX_PROP_LEN) < 0) {
 		intf_type = DC_NOT_PRSNT;
@@ -171,7 +173,7 @@ static int fdt_get_interface_type(void *fdt, char *nae_port_str, int block, int
                 if (!strcmp(port_type_str, "sgmii")) {
                         intf_type = DC_SGMII;
                 }
-                else if (!strcmp(port_type_str, xaui_chk_str)) {
+                else if (!strcmp(port_type_str, "xaui")) {
                         intf_type = DC_XAUI;
                 }
                 else if (!strcmp(port_type_str, "xfi")) {
@@ -203,7 +205,7 @@ static int fdt_get_interface_type(void *fdt, char *nae_port_str, int block, int
         switch(intf_type) {
                 case DC_SGMII:
                         netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Complex %d in SGMII mode\n", block);
-                        for(offset = 0; offset < MAX_PORTS_PERBLOCK; offset++) {
+                        for(offset = 0; offset < get_num_ports(block, SGMII_IF); offset++) {
                                 nae_cfg->ports[port+offset].iftype = SGMII_IF;
                         }
                         break;
@@ -234,11 +236,13 @@ static int fdt_get_interface_type(void *fdt, char *nae_port_str, int block, int
                         break;
                 case DC_RXAUI:
                         netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Complex %d in rxaui mode\n", block);
-                        nae_cfg->ports[port].iftype = RXAUI_IF;
+                        for(offset = 0; offset < get_num_ports(block, RXAUI_IF); offset++) {
+                                nae_cfg->ports[port+offset].iftype = RXAUI_IF;
+                        }
                         break;
                 case DC_XFI:
                         netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Complex %d in XFI mode\n", block);
-                        for(offset = 0; offset < MAX_PORTS_PERBLOCK; offset++) {
+                        for(offset = 0; offset < get_num_ports(block, XFI_IF); offset++) {
                                 nae_cfg->ports[port+offset].iftype = XFI_IF;
                         }
                         break;
@@ -896,18 +900,40 @@ static void extract_complex_params(void *fdt, int intf_type, char *nae_port_str,
 	}
 
         if (GET_PORT_PROP("higig-mode",&cmplx->higig_mode, sizeof(cmplx->higig_mode)) < 0) {
-		cmplx->higig_mode = get_higig_mode(intf_type);
+			cmplx->higig_mode = get_higig_mode(intf_type);
 	} 
 
         if (GET_PORT_PROP("xgmii-speed",&cmplx->xgmii_speed, sizeof(cmplx->xgmii_speed)) < 0) {
-		cmplx->xgmii_speed = get_xgmii_speed(intf_type);
+			cmplx->xgmii_speed = get_xgmii_speed(intf_type);
 	}
 
         if (GET_PORT_PROP("msec-port-enable",&cmplx->msec_port_enable, sizeof(cmplx->msec_port_enable)) < 0) {
-		cmplx->msec_port_enable = get_msec_port_enable(intf_type);
+		for(i=0; i<sizeof(cmplx->msec_port_enable)/sizeof(uint32_t); i++)
+			cmplx->msec_port_enable[i] = get_msec_port_enable(intf_type);
 	}
 
-        if (intf_type == SGMII_IF) {
+        if (GET_PORT_PROP("submode",&cmplx->rxaui_submode, sizeof(cmplx->rxaui_submode)) < 0) {
+		for(i=0; i<sizeof(cmplx->rxaui_submode)/sizeof(uint32_t); i++)
+			cmplx->rxaui_submode[i] = NLP1042_PHY_10G_NONE;
+	}
+
+        if (GET_PORT_PROP("scrambler",&cmplx->rxaui_scrambler, sizeof(cmplx->rxaui_scrambler)) < 0) {
+		for(i=0; i<sizeof(cmplx->rxaui_scrambler)/sizeof(uint32_t); i++)
+			cmplx->rxaui_scrambler[i] = 0;
+	}
+        
+	if ((intf_type == RXAUI_IF) || (intf_type == XAUI_IF)) {
+        	if (GET_PORT_PROP("ext-phy-addr",&cmplx->ext_phy_addr, sizeof(cmplx->ext_phy_addr)) < 0) {
+			for(i=0; i<sizeof(cmplx->ext_phy_addr)/sizeof(uint32_t); i++)
+				cmplx->ext_phy_addr[i] = 0;
+		}
+        	if (GET_PORT_PROP("ext-phy-bus",&cmplx->ext_phy_bus, sizeof(cmplx->ext_phy_bus)) < 0) {
+			for(i=0; i<sizeof(cmplx->ext_phy_bus)/sizeof(uint32_t); i++)
+				cmplx->ext_phy_bus[i] = 0;
+		}
+	}
+        
+	if (intf_type == SGMII_IF) {
                 if (is_nlm_xlp3xx() || is_nlm_xlp2xx()) {
                      for (i = 0 ; i < 4; i++) {
                         if (cmplx->prsr_seq_fifo_size[i] > XLP3XX_SGMII_PARSERSEQ_FIFO_MAX)
@@ -937,7 +963,8 @@ static void extract_complex_params(void *fdt, int intf_type, char *nae_port_str,
 	}
 
         if (GET_PORT_PROP("vlan-pri-en", &cmplx->vlan_pri_en, sizeof(cmplx->vlan_pri_en)) < 0) {
-		cmplx->vlan_pri_en = 0;
+		for(i=0; i<sizeof(cmplx->vlan_pri_en)/sizeof(uint32_t); i++)
+			cmplx->vlan_pri_en[i] = 0;
 	}
 	netsoc_api_print(NETSOC_APIDBG_FDT,"Extracted complex configuration\n");
 }
@@ -951,8 +978,6 @@ static int fdt_parse_port_config(void *fdt, nae_t *nae_cfg)
         int offset, port, num_ports;
         struct nlm_hal_nae_port *nae_port;
         uint32_t txq, max_context = 0, tx_slots = 0, rx_slots = 0;
-        int submode = 0;
-        int rxaui_en = 0;
 	uint32_t node = nae_cfg->node;
 
 	if (is_nlm_xlp9xx()) {
@@ -971,117 +996,105 @@ static int fdt_parse_port_config(void *fdt, nae_t *nae_cfg)
         }
 	
 
-        for(block=0, port = 0; block < max_complex; block++) {
+	for(block=0, port = 0; block < max_complex; block++) {
 #ifndef XLP_SIM
-                if (is_nlm_xlp8xx_ax() && is_xlp_evp1() && (block % 2))
-                        continue;
+		if (is_nlm_xlp8xx_ax() && is_xlp_evp1() && (block % 2))
+			continue;
 #else
 #ifndef CONFIG_N511
-        if (is_nlm_xlp8xx()) {
-                if(block != 4) {
-                        netsoc_api_print(NETSOC_APIDBG_FDT,"Uboot Skip complex:%d\n", block);
-                        continue;
-                }
-        }
+		if (is_nlm_xlp8xx()) {
+			if(block != 4) {
+				netsoc_api_print(NETSOC_APIDBG_FDT,"Uboot Skip complex:%d\n", block);
+				continue;
+			}
+		}
 #endif
-        netsoc_api_print(NETSOC_APIDBG_FDT,"Config complex:%d\n", block);
+		netsoc_api_print(NETSOC_APIDBG_FDT,"Config complex:%d\n", block);
 #endif
-        if (socnet_version_v0) {
-               sprintf(nae_port_str, "/soc/nae@node-%d/complex@%d",node, block);
-        }
-        else{
-               sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d", node, nae_cfg->nae_id, block);
-        }
+		if (socnet_version_v0) {
+			sprintf(nae_port_str, "/soc/nae@node-%d/complex@%d",node, block);
+		}
+		else{
+			sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d", node, nae_cfg->nae_id, block);
+		}
 
-        fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
-        if (fdt_cmplx_offset < 0) {
-                //netsoc_api_print(NETSOC_APIDBG_FDT,"complex %d configuration is missing in FDT\n", block);
-                 continue;
-        }
+		fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
+		if (fdt_cmplx_offset < 0) {
+			//netsoc_api_print(NETSOC_APIDBG_FDT,"complex %d configuration is missing in FDT\n", block);
+			continue;
+		}
 
-        intf_type = fdt_get_interface_type(fdt, nae_port_str, block, port, nae_cfg);
-        netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d intf:%d\n", block, intf_type);
+		intf_type = fdt_get_interface_type(fdt, nae_port_str, block, port, nae_cfg);
+		netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d intf:%d\n", block, intf_type);
 #ifdef NLM_HAL_UBOOT
 
-                if (intf_type != SGMII_IF) {
-                        netsoc_api_print(NETSOC_APIDBG_FDT,"Uboot Skip Complex %d intf:%d\n", block, intf_type);
-                        continue;
-                }
+		if (intf_type != SGMII_IF) {
+			netsoc_api_print(NETSOC_APIDBG_FDT,"Uboot Skip Complex %d intf:%d\n", block, intf_type);
+			continue;
+		}
 #endif
-                if (intf_type == SGMII_IF) {
-                        if (socnet_version_v0) {
-                              sprintf(nae_port_str, "/soc/nae@node-%d/complex@%d/sgmii", node, block);
-                        }
-                        else {
-                              sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/sgmii", node, nae_cfg->nae_id, block);
-                        }
-                        
-                        fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
-                        if (fdt_cmplx_offset < 0) {
-                                netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d SGMII configuration missing in FDT \n", block);
-                                continue;
-                        }
-                        nae_cfg->sgmii_complex_map |= (1 << block);
+		if (intf_type == SGMII_IF) {
+			if (socnet_version_v0) {
+				sprintf(nae_port_str, "/soc/nae@node-%d/complex@%d/sgmii", node, block);
+			}
+			else {
+				sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/sgmii", node, nae_cfg->nae_id, block);
+			}
 
-                }
-                else if (intf_type == XAUI_IF) {
-                        if (socnet_version_v0) {
-                              sprintf(nae_port_str, "/soc/nae@node-%d/complex@%d/xaui", node, block);
-                        }
-                        else {
-                              sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/xgmac", node, nae_cfg->nae_id, block);
-                        }
+			fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
+			if (fdt_cmplx_offset < 0) {
+				netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d SGMII configuration missing in FDT \n", block);
+				continue;
+			}
+			nae_cfg->sgmii_complex_map |= (1 << block);
 
-                        fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
-                        if (fdt_cmplx_offset < 0) {
-                                netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d XAUI configuration missing in FDT \n", block);
-                                continue;
-                        }
-                        nae_cfg->xaui_complex_map |= (1 << block);
-			nae_cfg->ports[port].rxaui_mode = NLM_NAE_XAUI_MODE_XAUI;
-                }
-                else if (intf_type == XFI_IF) {
-                        if (!socnet_version_v0) {
-                              sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/xfi", node, nae_cfg->nae_id, block);
-                        }
+		}
+		else if (intf_type == XAUI_IF) {
+			if (socnet_version_v0) {
+				sprintf(nae_port_str, "/soc/nae@node-%d/complex@%d/xaui", node, block);
+			}
+			else {
+				sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/xgmac", node, nae_cfg->nae_id, block);
+			}
 
-                        fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
-                        if (fdt_cmplx_offset < 0) {
-                                netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d XFI configuration missing in FDT \n", block);
-                                continue;
-                        }
-                        nae_cfg->xfi_complex_map |= (1 << block);
-                }
-                else if (intf_type == RXAUI_IF) {
-                        if (socnet_version_v0) {
-                                sprintf(nae_port_str, "/soc/nae@node-%d/complex@%d/rxaui", node, block);
-                        }
-                        else {
-                                sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/xgmac", node, nae_cfg->nae_id, block);
-                        }
-                        
-                        fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
-                        if (fdt_cmplx_offset < 0) {
-                                netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d RXAUI configuration missing in FDT \n", block);
-                                continue;
-                        }
-                        GET_PORT_PROP("scrambler", &(nae_cfg->ports[port].rxaui_scrambler),
-                                sizeof(nae_cfg->ports[port].rxaui_scrambler));
-                        GET_PORT_PROP("submode", &submode, sizeof(submode));
-                        nae_cfg->ports[port].rxaui_mode = submode;
-
-                        rxaui_en = ((submode == NLM_NAE_RXAUI_MODE_MARVELL) ||
-                                    (submode == NLM_NAE_RXAUI_MODE_BROADCOM)) ? 1 : 0;
-                        if(rxaui_en)
-                                nae_cfg->rxaui_complex_map |= (1 << block);
-                        else
-                                nae_cfg->xaui_complex_map  |= (1 << block);
-
-                        netsoc_api_print(NETSOC_APIDBG_FDT,"Complex:%d: rmap:0x%X map:0x%X submode:%d scrambler:%d\n", block,
-                                nae_cfg->rxaui_complex_map,
-                                nae_cfg->xaui_complex_map,
-                                nae_cfg->ports[port].rxaui_mode,
-                                nae_cfg->ports[port].rxaui_scrambler);
+			fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
+			if (fdt_cmplx_offset < 0) {
+				netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d XAUI configuration missing in FDT \n", block);
+				continue;
+			}
+			nae_cfg->xaui_complex_map |= (1 << block);
+		}
+		else if (intf_type == XFI_IF) {
+			if (!socnet_version_v0) {
+				sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/xfi", node, nae_cfg->nae_id, block);
+			}
+
+			fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
+			if (fdt_cmplx_offset < 0) {
+				netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d XFI configuration missing in FDT \n", block);
+				continue;
+			}
+			nae_cfg->xfi_complex_map |= (1 << block);
+		}
+		else if (intf_type == RXAUI_IF) {
+			if (socnet_version_v0) {
+				sprintf(nae_port_str, "/soc/nae@node-%d/complex@%d/rxaui", node, block);
+			}
+			else {
+				sprintf(nae_port_str, "/soc/net@node-%d/nae-%d/complex@%d/xgmac", node, nae_cfg->nae_id, block);
+			}
+
+			fdt_cmplx_offset = fdt_path_offset(fdt, nae_port_str);
+			if (fdt_cmplx_offset < 0) {
+				netsoc_api_print(NETSOC_APIDBG_FDT,"Complex %d RXAUI configuration missing in FDT \n", block);
+				continue;
+			}
+			//GET_PORT_PROP("scrambler", &(nae_cfg->ports[port].rxaui_scrambler), sizeof(nae_cfg->ports[port].rxaui_scrambler));
+			//GET_PORT_PROP("submode", &submode, sizeof(submode));
+
+			nae_cfg->rxaui_complex_map |= (1 << block);
+
+                        netsoc_api_print(NETSOC_APIDBG_FDT,"Complex:%d: rmap:0x%X \n", block, nae_cfg->rxaui_complex_map);
                 }
                 else if (intf_type == INTERLAKEN_IF) {
                         if (socnet_version_v0) {
@@ -1107,13 +1120,13 @@ static int fdt_parse_port_config(void *fdt, nae_t *nae_cfg)
 
                 if(intf_type == XAUI_IF || intf_type == RXAUI_IF)
                 {
-                        if(cmplx_cfg.msec_port_enable)
-                                nae_cfg->msec_port_enable |=  0xf << (4 * block);
+ //                       if(cmplx_cfg.msec_port_enable)
+   //                             nae_cfg->msec_port_enable |=  0xf << (4 * block);
                         nae_cfg->higig_mode[block]=cmplx_cfg.higig_mode;
                         nae_cfg->xgmii_speed[block]=cmplx_cfg.xgmii_speed;
                 }
                 else{
-                        nae_cfg->msec_port_enable |= cmplx_cfg.msec_port_enable << (4 * block);
+    //                    nae_cfg->msec_port_enable |= cmplx_cfg.msec_port_enable << (4 * block);
                         nae_cfg->higig_mode[block]=0;
                         nae_cfg->xgmii_speed[block]=1; /*1G SGMII*/
                 }
@@ -1123,8 +1136,7 @@ static int fdt_parse_port_config(void *fdt, nae_t *nae_cfg)
 #endif
                 for(offset = 0; offset < num_ports; offset++, port++) {
                         nae_port = &nae_cfg->ports[port];
-                        nae_port->hw_port_id = (block * MAX_PORTS_PERBLOCK) + offset;
-                        netsoc_api_print(NETSOC_APIDBG_FDT," Printing off:%d hw_port:%d\n", offset, nae_port->hw_port_id);
+                        nae_port->hw_port_id = get_intf_hw_port_id(block, intf_type, offset);
                         nae_port->txq = txq;
                         nae_port->rxq = nae_cfg->frin_queue_base + nae_port->hw_port_id;
                         nae_port->num_free_desc = cmplx_cfg.num_free_desc[offset];
@@ -1134,11 +1146,13 @@ static int fdt_parse_port_config(void *fdt, nae_t *nae_cfg)
                         nae_port->num_channels = cmplx_cfg.num_channels[offset];
                         nae_port->rx_buf_size = cmplx_cfg.rx_buf_size[offset];  // RX buf size is per context. The value given in dts is for the interface. This should be divided by num_channels  
                         nae_port->ucore_mask = cmplx_cfg.ucore_mask[offset];
-                        nae_port->ext_phy_addr = cmplx_cfg.ext_phy_addr[offset];
+                        nae_port->ext_phy_addr = cmplx_cfg.ext_phy_addr[offset]; /*used for both 1G and 10G PHY*/
                         nae_port->ext_phy_bus = cmplx_cfg.ext_phy_bus[offset];
                         nae_port->loopback = cmplx_cfg.loopback[offset];
+                        nae_port->rxaui_mode = cmplx_cfg.rxaui_submode[offset];;
+                        nae_port->msec_enable = cmplx_cfg.msec_port_enable[offset];;
 
-                        if (is_nlm_xlp3xx() || is_nlm_xlp2xx()) {
+                        if (is_nlm_xlp9xx()|| is_nlm_xlp3xx() || is_nlm_xlp2xx()) {
                                 nae_port->ext_phy_bus = 0;
                         }
 			nae_port->ucore_mask &= current_netsoc->ucore_mask;
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index ce773df..acbae3a 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -1134,6 +1134,7 @@ void __netsoc_config_context_xoff_thr(nae_t *nae, int thgrp, int maxbuf)
 	int xon = xoff - 94 ;
 	int val = (xoff << 3) | (xon << 17) | thgrp;
 	static int done[NLM_MAX_NODES][XLP9XX_MAX_NAE_PERNODE][NLM_NAE_MAX_XONOFF_THR_GRPS];
+printk("__netsoc_config_context_xoff_thr  thgrp = 0x%x maxbuf=0x%x\n ", thgrp, maxbuf );
 	if(thgrp >= NLM_NAE_MAX_XONOFF_THR_GRPS)
 		return;
 	if(done[nae->node][nae->nae_id][thgrp])
@@ -1250,48 +1251,38 @@ void __netsoc_config_ingress_fifo(nae_t *nae)
 
 	max_ports = __netsoc_get_max_ports();
         netsoc_api_print(NETSOC_APIDBG_CONFIG, "Interface FIFO carving max_ports:%d \n", max_ports);
-        for (port = 0, hw_port = 0 ; hw_port < max_ports; ) { 
+        for (port = 0, hw_port = 0 ; hw_port <= max_ports; ) { 
 	    if (hw_port == nae->ports[port].hw_port_id) {
 
-
 		netsoc_api_print(NETSOC_APIDBG_CONFIG, "port:%d iftype:%d\n", port, nae->ports[port].iftype);
 		thrgrp = 0;
 		rx_buf_size = 0;
 		switch(nae->ports[port].iftype) {
 		   case RXAUI_IF:
 			fifo_xoff_thresh = 12;
-			max_lanes = 4;
-			offset = 4;
+			thrgrp = 2;
+			rx_buf_size = nae->ports[port].rx_buf_size;
 			break;
 		   case XAUI_IF:
 			fifo_xoff_thresh = 12;
-			max_lanes = 4;
-			offset = 4;
 			thrgrp = 1;
 			rx_buf_size = nae->ports[port].rx_buf_size;
 			break;
 		//TODO: Verify the values	
 		   case XFI_IF:
 			fifo_xoff_thresh = 6;
-			max_lanes = 1;
-			offset = 1;
 			break;
 		   case SGMII_IF:
 			fifo_xoff_thresh = 6;
-			max_lanes = 1;
-			offset = 1;
 			break;
 		   case INTERLAKEN_IF:
 			fifo_xoff_thresh = 12;
-			max_lanes = 8;
-			offset = 8;
  			break;
 		    default:
 			fifo_xoff_thresh = 0;
-                        max_lanes = 0;
-                        offset = 0;
 			break;
                 }
+		 offset = max_lanes = get_max_lanes(nae->ports[port].iftype);
 
 		netsoc_api_print(NETSOC_APIDBG_CONFIG, "cfg rxbuffer n:%d port:%d ctx_base:%d ch:%d rx_buf_base:%X buf_sz:%d\n",
 			nae->node, hw_port, context_base, nae->ports[port].num_channels,
@@ -1555,7 +1546,7 @@ static int __netsoc_xgmac_mdio_write(nae_t *nae, uint32_t bus,
 			| (EXT_XG_MDIO_CTRL_TA << EXT_XG_MDIO_CTRL_TA_POS)
 			| (MDIO_MIIM_CMD_10G_MMD << EXT_XG_MDIO_CTRL_MIIM_POS);
 
-	//netsoc_api_print(NETSOC_APIDBG_PORT, "xw: bus:%d phy:%d d:%d %x.%x=%x\n", bus, phyaddr, dev_addr, ctrl, regidx, val);
+	//netsoc_api_print(NETSOC_APIDBG_PORT, "nae mac bse = 0x%llx xw: bus:%d phy:%d d:%d %x.%x=%x\n", mac_base, bus, phyaddr, dev_addr, ctrl, regidx, val);
         netsoc_write_mac_reg(mac_base, EXT_XG0_MDIO_CTRL_DATA + (bus * 4), val);
 
         netsoc_write_mac_reg(mac_base, EXT_XG0_MDIO_CTRL+ bus * 4, ctrl);
@@ -1573,9 +1564,10 @@ static int __netsoc_xgmac_mdio_write(nae_t *nae, uint32_t bus,
 static int __netsoc_xgmac_mdio_read(nae_t *nae, uint32_t bus, uint32_t phyaddr, uint32_t dev_addr, uint32_t regidx)
 {
 	int rdval;
+	uint64_t mac_base = netsoc_get_macreg_base_for_mdio(nae->mac_base);
 	__netsoc_xgmac_mdio_write(nae, bus, phyaddr, dev_addr, MDIO_CTRL_OP_INDIRECT_ADDR, regidx);
 	__netsoc_xgmac_mdio_write(nae, bus, phyaddr, dev_addr, MDIO_CTRL_OP_READ_10G_MMD, regidx);
-        rdval =  netsoc_read_mac_reg(nae->mac_base, EXT_XG0_MDIO_RD_STAT + (bus * 4)) & 0xFFFF;
+        rdval =  netsoc_read_mac_reg(mac_base, EXT_XG0_MDIO_RD_STAT + (bus * 4)) & 0xFFFF;
         return rdval;
 }
 
@@ -1594,10 +1586,10 @@ int __netsoc_c45_mdio_indirect_read_external (nae_t *nae, int bus,
 {
 	int rdval = __netsoc_xgmac_mdio_read(nae, bus, phyaddr, dev_addr, reg_addr);
 	//netsoc_api_print(NETSOC_APIDBG_PORT, "C45 MDIO r phy:%d dev:%d reg[%04X]=[%04X]\n", phyaddr, dev_addr, reg_addr, rdval);
+	printk( "NAE is = %d C45 MDIO r phy:%d dev:%d reg[%04X]=[%04X]\n", nae->nae_id, phyaddr, dev_addr, reg_addr, rdval);
 	return rdval;
 }
 
-
 static int __netsoc_xgmac_imdio_addr(nae_t *nae, int phyaddr, int regidx)
 {
 	uint64_t mac_base = netsoc_get_macreg_base_for_mdio(nae->mac_base);
@@ -1800,6 +1792,7 @@ void __netsoc_mdio_init(nae_t *nae)
 	nlm_mdelay(3);
 }
 
+
 static void __netsoc_xfi_softreset(uint64_t mac_base,  uint32_t rst_val)
 {
 	uint32_t val;
@@ -1897,11 +1890,18 @@ static void __netsoc_config_sgmii(net_port_t *netport)
 static void __netsoc_config_xaui(net_port_t *netport)
 {
         uint32_t val = 0, higig_type;
-        int rxaui_en = ((netport->rxaui_mode == NLM_NAE_RXAUI_MODE_MARVELL) ||
-                        (netport->rxaui_mode == NLM_NAE_RXAUI_MODE_BROADCOM)) ? 1 : 0;
 	nae_t *nae = netport->nae;
+        int rxaui_en = ((netport->rxaui_mode == NLP1042_PHY_10G_RXAUI_MODE1) ||
+                        (netport->rxaui_mode == NLP1042_PHY_10G_RXAUI_MODE2)) ? 1 : 0;
+	
 	uint64_t mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
-
+	if(netport->iftype==RXAUI_IF){
+		if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
+			mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
+		}else{
+			printk("OOPPPS port   id= %d set to old mac_base \n", netport->hw_port_id);
+		}
+	}
 	higig_type = nae->higig_mode[netport->hw_port_id >> 2];
         if(higig_type){
                 /*enable higig */
@@ -1952,9 +1952,9 @@ static void __netsoc_config_xaui(net_port_t *netport)
 
         if (rxaui_en)
         {
-                if(netport->rxaui_mode == NLM_NAE_RXAUI_MODE_MARVELL)
+                if(netport->rxaui_mode == NLP1042_PHY_10G_RXAUI_MODE2)
                         val &= ~(1 << NETIOR_XGMAC_RXAUI_DC_POS);
-                else if(netport->rxaui_mode == NLM_NAE_RXAUI_MODE_BROADCOM)
+                else if(netport->rxaui_mode == NLP1042_PHY_10G_RXAUI_MODE1)
                         val |= 1 << NETIOR_XGMAC_RXAUI_DC_POS;
 
                 if(netport->rxaui_scrambler)
@@ -2387,12 +2387,18 @@ int __netsoc_config_port(net_port_t *netport)
 		case RXAUI_IF:
 			// block is a complex number
 			mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			if(netport->iftype==RXAUI_IF){
+				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
+					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
+				}
+			}
 
 			netwk_inf = netsoc_read_mac_reg(mac_base, NETIOR_XGMAC_CTRL1);
 			netwk_inf |= (1 << NETIOR_XGMAC_STATS_CLR_POS);
 			netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL1, netwk_inf);
 
-			ifmask = 0xf << netport->hw_port_id;
+			//ifmask = 0xf << netport->hw_port_id;
+			ifmask = 0x1 << netport->hw_port_id;
 			tx_ior_credit = netsoc_read_nae_reg(nae_base, TX_IORCRDT_INIT);
 			netsoc_write_nae_reg(nae_base, TX_IORCRDT_INIT, tx_ior_credit | ifmask);
 
@@ -2510,6 +2516,11 @@ void __netsoc_mac_disable(net_port_t *netport)
 		case XAUI_IF:
 		case RXAUI_IF:
 			mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			if(netport->iftype==RXAUI_IF){
+				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
+					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
+				}
+			}
 			xaui_cfg=netsoc_read_mac_reg(mac_base, XAUI_CONFIG_1);
 			netsoc_write_mac_reg(mac_base, XAUI_CONFIG_1, xaui_cfg &
                                                         (~(XAUI_CONFIG_TFEN | XAUI_CONFIG_RFEN)));
@@ -2554,10 +2565,17 @@ void __netsoc_mac_enable(net_port_t *netport)
                 case XAUI_IF:
                 case RXAUI_IF:
 			mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			if(netport->iftype==RXAUI_IF){
+				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
+					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
+				}
+			}
+			netsoc_api_print(NETSOC_APIDBG_PORT,"%s: XGMAC enabling.. XAUI_CONFIG_1 0x%x\n",__func__, xaui_cfg);
 			xaui_cfg=netsoc_read_mac_reg(mac_base, XAUI_CONFIG_1);
 	                netsoc_write_mac_reg(mac_base, XAUI_CONFIG_1, xaui_cfg |
 							XAUI_CONFIG_TFEN | XAUI_CONFIG_RFEN);                           
-			netsoc_api_print(NETSOC_APIDBG_PORT,"%s: XGMAC enable XAUI_CONFIG_1 0x%x\n",__func__, xaui_cfg);
+			xaui_cfg=netsoc_read_mac_reg(mac_base, XAUI_CONFIG_1);
+			netsoc_api_print(NETSOC_APIDBG_PORT,"%s: XGMAC enabled XAUI_CONFIG_1 0x%x\n",__func__, xaui_cfg);
 
                         break;
                 case INTERLAKEN_IF:
@@ -2607,6 +2625,11 @@ int __netsoc_config_frame_size(net_port_t *netport, uint32_t size)
 		case XAUI_IF:
                 case RXAUI_IF:
                         mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			if(netport->iftype==RXAUI_IF){
+				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
+					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
+				}
+			}
 			netsoc_write_mac_reg(mac_base, XAUI_MAX_FRAME_LEN , ((size/4) << 16) | size);
 			break;
 		default:
@@ -2648,6 +2671,11 @@ int __netsoc_config_flow_control(net_port_t *netport, uint32_t enable)
 		case XAUI_IF:
 		case RXAUI_IF:		
 			mac_base = netsoc_get_macreg_base_for_xgmac0(nae->mac_base, netport->hw_port_id);
+			if(netport->iftype==RXAUI_IF){
+				if((netport->hw_port_id%4)==2) {/*true if xlp9xx 2nd  port*/
+					mac_base = netsoc_get_macreg_base_for_xgmac2(nae->mac_base, netport->hw_port_id);
+				}
+			}
 		
 			if (enable) {
 				val = netsoc_read_mac_reg(mac_base, NETIOR_XGMAC_CTRL1);
@@ -3318,6 +3346,39 @@ int __netsoc_init_ucore(nae_t *nae)
 	return NETSOC_API_SUCCESS;
 }
 
+static void __netsoc_nlp1042c2_init(nae_t* nae)
+{
+	int data;
+	int bus = 0, port = 0;
+	int dev_addr = 1;
+	int  submode;
+	uint32_t cplx_mask_10g_phy = nae->xaui_complex_map | nae->rxaui_complex_map;
+	int phyaddr=0, phybus=0, i; /* use these variables carefully as they are used in headers included below*/
+	int max_ports= current_netsoc->max_ports;
+	
+	netsoc_api_print(NETSOC_APIDBG_CONFIG,"Initializing external NLP1042 PHY with cmplex mask = 0x%x\n", cplx_mask_10g_phy);
+
+	for(port=0; port<max_ports; port++){
+		if((nae->ports[port].iftype == RXAUI_IF) || (nae->ports[port].iftype == XAUI_IF)){
+			phyaddr = nae->ports[port].ext_phy_addr;  
+			phybus = nae->ports[port].ext_phy_bus;  
+			submode = nae->ports[port].rxaui_mode; 
+			netsoc_api_print(NETSOC_APIDBG_CONFIG, "Initializing external NLP1042 PHY phyaddr= 0x%x bus = 0x%x submode=0x%x\n",  phyaddr, phybus, submode);
+			if(submode == NLP1042_PHY_10G_NONE){
+				continue;	
+			}else if(submode== NLP1042_PHY_10G_XAUI){
+				data = NETSOC_NLM_C45_READ(nae, phybus, phyaddr, 1, 0xc205);
+				netsoc_api_print(NETSOC_APIDBG_CONFIG, "NLP1042C2 XAUI p:%d 0xc205:%x \n", port, data);
+				#include "NETSOC_NLP1042C2_XAUI.h"
+			}else{
+				data = NETSOC_NLM_C45_READ(nae, phybus, phyaddr, 1, 0xc205);
+				netsoc_api_print(NETSOC_APIDBG_CONFIG, "NLP1042C2 RXAUI p:%d 0xc205:%x \n", port, data);
+				#include "NETSOC_NLP1042C2_RXAUI_Dune.h"
+			}
+		}	
+	}
+}
+
 
 int __netsoc_pcs_init(nae_t *nae)
 {
@@ -3330,7 +3391,8 @@ int __netsoc_pcs_init(nae_t *nae)
 
         if (nae->xaui_complex_map) {
                 netsoc_api_print(NETSOC_APIDBG_GLOBAL, "node %d XAUI PCS init 0x%x \n", node, nae->xaui_complex_map);
-                __netsoc_xaui_pcs_init(nae, nae->xaui_complex_map, PHYMODE_XAUI );
+                __netsoc_xaui_pcs_init(nae, nae->xaui_complex_map, PHYMODE_XAUI);
+                __netsoc_nlp1042c2_init(nae);
         }
         
 	if (nae->xfi_complex_map) {
@@ -3341,12 +3403,12 @@ int __netsoc_pcs_init(nae_t *nae)
         if (nae->rxaui_complex_map) {
                 netsoc_api_print(NETSOC_APIDBG_GLOBAL, "node %d RXAUI PCS init 0x%x\n", node, nae->rxaui_complex_map);
                 __netsoc_xaui_pcs_init(nae, nae->rxaui_complex_map, PHYMODE_RXAUI);
-#ifdef NLP1042_INCL
-                for(port = 0; port < num_ports; port++) {
-                        if(nae->ports[port].rxaui_mode)
-                                nlm_hal_rxaui_nlp1042c2_init(port, nae->ports[port].rxaui_mode);
-                }
-#endif
+                __netsoc_nlp1042c2_init(nae);
+//#ifdef NLP1042_INCL
+                //for(port = 0; port < num_ports; port++) {
+                                //nlm_hal_rxaui_nlp1042c2_init(port, nae->ports[port].rxaui_mode);
+                //}
+//#endif
         }
 
         if (nae->ilk_complex_map) {
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
index 41e4d92..00d2c32 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
@@ -614,10 +614,11 @@ void xlp9xx_nae_write_pma2p0_mem(uint64_t mac_base, int block, int xgmii_speed,
                         if((xgmii_speed==12 ) && (lane_speed ==XAUI_TYPE_LANE)){
                                 vsemi_cmd |= vsemi_mem_12G_4page[reg_addr];
                         }
-                        if((xgmii_speed==10 ) && (lane_speed ==XAUI_TYPE_LANE)){
+                        if((xgmii_speed==10 ) && (lane_speed ==XAUI_TYPE_LANE) && (phy_mode == PHYMODE_RXAUI)){
+                                vsemi_cmd |= vsemi_mem_rxaui_4page[reg_addr];
+                        }else  if((xgmii_speed==10 ) && (lane_speed ==XAUI_TYPE_LANE)){
                                 vsemi_cmd |= vsemi_mem_xaui_4page[reg_addr];
-                                //nlm_print("vsemi cmd: xaui 4page: [%X]:%X\n", reg_addr, vsemi_cmd);
-                        }
+			}
                         if((xgmii_speed==10 ) && (lane_speed ==XFI_TYPE_LANE)){
 				 vsemi_cmd |= vsemi_mem_10G_lane_4page[reg_addr];	
 			}
@@ -638,9 +639,11 @@ void xlp9xx_nae_write_pma2p0_mem(uint64_t mac_base, int block, int xgmii_speed,
                 if((xgmii_speed==12 ) && (lane_speed ==XAUI_TYPE_LANE)){
                         vsemi_cmd |= vsemi_mem_12G[reg_addr];
                 }
-                if((xgmii_speed==10 ) && (lane_speed ==XAUI_TYPE_LANE)){
+		if((xgmii_speed==10 ) && (lane_speed ==XAUI_TYPE_LANE) && (phy_mode == PHYMODE_RXAUI)){
+                        //vsemi_cmd |= vsemi_mem_xaui[reg_addr];
+                        vsemi_cmd |= vsemi_mem_rxaui[reg_addr];
+		}else if((xgmii_speed==10 ) && (lane_speed ==XAUI_TYPE_LANE)){
                         vsemi_cmd |= vsemi_mem_xaui[reg_addr];
-                        //nlm_print("vsemi cmd: mem xaui [%X]:%X\n", reg_addr, vsemi_cmd);
                 }
                 if((xgmii_speed==10 ) && (lane_speed ==XFI_TYPE_LANE)){
 			vsemi_cmd |= vsemi_mem_10G_lane[reg_addr];	
@@ -989,6 +992,15 @@ static void config_lanes_for_xaui(nae_t *nae, uint32_t xaui_cplx_mask)
                 netsoc_write_mac_reg(mac_base, LANE_CFG_CPLX_2_3,   lane_enable);
                 netsoc_api_delay(1);
         }
+	lane_enable = netsoc_read_mac_reg(mac_base, LANE_CFG_CPLX_4); 
+	if(xaui_cplx_mask & 0x1){
+		lane_enable |= (1<< 16); 
+	}
+	if(xaui_cplx_mask & 0x2){
+		lane_enable |= (1<< 18); 
+	}
+	netsoc_write_mac_reg(mac_base, LANE_CFG_CPLX_4, lane_enable);
+
 }
 
 static void config_lanes_for_xfi(nae_t *nae, uint32_t xfi_cplx_mask)
@@ -1109,7 +1121,6 @@ static void xlp2xx_xaui_pcs_init(nae_t *nae, uint32_t xaui_cplx_mask, uint32_t p
 static void xlp9xx_xaui_pcs_init(nae_t *nae, uint32_t xaui_cplx_mask, uint32_t phymode)
 {
 	uint32_t block, lane_status, lane_ctrl, count, timeout = 10000;
-	static int vsemi_por=0;
 	uint64_t mac_base;
 	
 	config_lanes_for_xaui(nae, xaui_cplx_mask);
@@ -1132,8 +1143,15 @@ static void xlp9xx_xaui_pcs_init(nae_t *nae, uint32_t xaui_cplx_mask, uint32_t p
                         nlm_hal_config_vsemi_mem_12G_4page_125();
                         nlm_hal_config_vsemi_mem_12G_125();
                 }
+		else if(phymode==PHYMODE_RXAUI){
+                        netsoc_api_print(NETSOC_APIDBG_PORT,"VSEMI: config data for 10G RXAUI \n");
+                        //nlm_hal_config_vsemi_mem_xaui_4page();
+                        //nlm_hal_config_vsemi_mem_xaui();
+                        nlm_hal_config_vsemi_mem_rxaui_4page();
+                        nlm_hal_config_vsemi_mem_rxaui();
+		}
                 else {
-                        netsoc_api_print(NETSOC_APIDBG_PORT,"VSEMI: config data for 10G XAUI/RXAUI \n");
+                        netsoc_api_print(NETSOC_APIDBG_PORT,"VSEMI: config data for 10G XAUI \n");
                         nlm_hal_config_vsemi_mem_xaui_4page();
                         nlm_hal_config_vsemi_mem_xaui();
                 }
@@ -1144,8 +1162,8 @@ static void xlp9xx_xaui_pcs_init(nae_t *nae, uint32_t xaui_cplx_mask, uint32_t p
                 
                 for( lane_ctrl = PHY_LANE_0_CTRL; lane_ctrl <= PHY_LANE_3_CTRL; lane_ctrl++){
 			//TODO: XLP9XX all four lanes used for RXAUI
-			if(phymode == PHYMODE_RXAUI && (lane_ctrl%2))
-                                continue;
+			//if(phymode == PHYMODE_RXAUI && (lane_ctrl%2))
+                          //      continue;
 			xlp9xx_lane_reset(nae, block, lane_ctrl, phymode);
 		}
 	}
@@ -1163,8 +1181,8 @@ static void xlp9xx_xaui_pcs_init(nae_t *nae, uint32_t xaui_cplx_mask, uint32_t p
 
                 for( lane_status = PHY_LANE_0_STATUS; lane_status <= PHY_LANE_3_STATUS; lane_status++) {
 
-                        if(phymode == PHYMODE_RXAUI && (lane_status%2))
-                                continue;
+                        //if(phymode == PHYMODE_RXAUI && (lane_status%2))
+                         //       continue;
 
                         /* Wait for TX clock to be set */
                         netsoc_api_print(NETSOC_APIDBG_PORT,"Blk:%d lane%d wait TX clock stable\n", block, lane_status);
diff --git a/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c b/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c
index 192ff37..88c0367 100644
--- a/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c
@@ -3518,19 +3518,19 @@ static int parse_port_config(void *fdt, int node, nlm_nae_config_ptr nae_cfg)
 
 		if(intf_type == XAUI_IF || intf_type == RXAUI_IF)
 		{
-			if(cmplx_cfg.msec_port_enable)
+			if(cmplx_cfg.msec_port_enable[0])
 				nae_cfg->msec_port_enable |=  0xf << (4 * block);
 			nae_cfg->higig_mode[block]=cmplx_cfg.higig_mode;
 			nae_cfg->xgmii_speed[block]=cmplx_cfg.xgmii_speed;
 		}
 		else{
-			nae_cfg->msec_port_enable |= cmplx_cfg.msec_port_enable << (4 * block);
+			nae_cfg->msec_port_enable |= cmplx_cfg.msec_port_enable[0] << (4 * block);
 			nae_cfg->higig_mode[block]=0;
 			nae_cfg->xgmii_speed[block]=1; /*1G SGMII*/
 		}	
 #ifdef MACSEC_DEBUG
 		nlm_print(" nae_cfg->msec_port_enable = %x block = %d cmplx_cfg.msec_port_enable = %x\n", 
-		nae_cfg->msec_port_enable, block, cmplx_cfg.msec_port_enable);
+		nae_cfg->msec_port_enable, block, cmplx_cfg.msec_port_enable[0]);
 #endif
 		for(offset = 0; offset < num_ports; offset++, port++) {
 			nae_port = &nae_cfg->ports[port];
diff --git a/arch/mips/netlogic/lib/netlib/src/nlm_hal_vsemi_config.c b/arch/mips/netlogic/lib/netlib/src/nlm_hal_vsemi_config.c
index 6671745..da559af 100644
--- a/arch/mips/netlogic/lib/netlib/src/nlm_hal_vsemi_config.c
+++ b/arch/mips/netlogic/lib/netlib/src/nlm_hal_vsemi_config.c
@@ -35,6 +35,9 @@ unsigned char vsemi_mem_sgmii [256];
 unsigned char vsemi_mem_xaui_4page [256];
 unsigned char vsemi_mem_xaui [256];
 
+unsigned char vsemi_mem_rxaui_4page [256];
+unsigned char vsemi_mem_rxaui [256];
+
 unsigned char vsemi_mem_12G_4page [256];
 unsigned char vsemi_mem_12G [256];
 unsigned char vsemi_mem_16G_4page [256];
@@ -546,6 +549,90 @@ void nlm_hal_config_vsemi_mem_xaui_4page(void)
 	return;
 }
 
+void nlm_hal_config_vsemi_mem_rxaui_4page(void)
+{
+	vsemi_mem_rxaui_4page[101] = 0xBF;
+	vsemi_mem_rxaui_4page[102] = 0xBF;
+	vsemi_mem_rxaui_4page[103] = 0xA;
+	vsemi_mem_rxaui_4page[104] = 0xA;
+	vsemi_mem_rxaui_4page[105] = 0xE;
+	vsemi_mem_rxaui_4page[106] = 0xE;
+	vsemi_mem_rxaui_4page[107] = 0x1;
+	vsemi_mem_rxaui_4page[108] = 0x1;
+	vsemi_mem_rxaui_4page[109] = 0x22;
+	vsemi_mem_rxaui_4page[110] = 0x0;
+	return;
+}
+
+void nlm_hal_config_vsemi_mem_rxaui(void)
+{
+	vsemi_mem_rxaui[101] = 0xAA;
+	vsemi_mem_rxaui[102] = 0x0;
+	vsemi_mem_rxaui[103] = 0x6C;
+	vsemi_mem_rxaui[104] = 0xBF;
+	vsemi_mem_rxaui[105] = 0xBF;
+	vsemi_mem_rxaui[106] = 0xA;
+	vsemi_mem_rxaui[107] = 0xA;
+	vsemi_mem_rxaui[108] = 0xE;
+	vsemi_mem_rxaui[109] = 0xE;
+	vsemi_mem_rxaui[110] = 0x7;
+	vsemi_mem_rxaui[111] = 0xC;
+	vsemi_mem_rxaui[112] = 0x10;
+	vsemi_mem_rxaui[113] = 0x0;
+	vsemi_mem_rxaui[114] = 0x10;
+	vsemi_mem_rxaui[115] = 0x0;
+	vsemi_mem_rxaui[116] = 0xFF;
+	vsemi_mem_rxaui[117] = 0xB3;
+	vsemi_mem_rxaui[118] = 0xF6;
+	vsemi_mem_rxaui[119] = 0xD0;
+	vsemi_mem_rxaui[120] = 0xEF;
+	vsemi_mem_rxaui[121] = 0xFB;
+	vsemi_mem_rxaui[122] = 0xFF;
+	vsemi_mem_rxaui[123] = 0xFF;
+	vsemi_mem_rxaui[124] = 0xFF;
+	vsemi_mem_rxaui[125] = 0xFF;
+	vsemi_mem_rxaui[126] = 0xFF;
+	vsemi_mem_rxaui[127] = 0xD3;
+	vsemi_mem_rxaui[128] = 0xD3;
+	vsemi_mem_rxaui[129] = 0xE2;
+	vsemi_mem_rxaui[130] = 0xEF;
+	vsemi_mem_rxaui[131] = 0xFB;
+	vsemi_mem_rxaui[132] = 0xFB;
+	vsemi_mem_rxaui[133] = 0xFF;
+	vsemi_mem_rxaui[134] = 0xEF;
+	vsemi_mem_rxaui[135] = 0xFF;
+	vsemi_mem_rxaui[136] = 0xFF;
+	vsemi_mem_rxaui[137] = 0xD3;
+	vsemi_mem_rxaui[138] = 0xD3;
+	vsemi_mem_rxaui[139] = 0xE2;
+	vsemi_mem_rxaui[140] = 0xEF;
+	vsemi_mem_rxaui[141] = 0xFB;
+	vsemi_mem_rxaui[142] = 0xFB;
+	vsemi_mem_rxaui[143] = 0xFF;
+	vsemi_mem_rxaui[144] = 0xEF;
+	vsemi_mem_rxaui[145] = 0xFF;
+	vsemi_mem_rxaui[146] = 0xFF;
+	vsemi_mem_rxaui[147] = 0xFB;
+	vsemi_mem_rxaui[148] = 0xFF;
+	vsemi_mem_rxaui[149] = 0x3F;
+	vsemi_mem_rxaui[150] = 0x0;
+	vsemi_mem_rxaui[151] = 0x32;
+	vsemi_mem_rxaui[152] = 0x0;
+	vsemi_mem_rxaui[153] = 0x2;
+	vsemi_mem_rxaui[154] = 0x1;
+	vsemi_mem_rxaui[155] = 0x5;
+	vsemi_mem_rxaui[156] = 0x5;
+	vsemi_mem_rxaui[157] = 0x4;
+	vsemi_mem_rxaui[158] = 0x0;
+	vsemi_mem_rxaui[159] = 0x0;
+	vsemi_mem_rxaui[160] = 0x8;
+	vsemi_mem_rxaui[161] = 0x4;
+	vsemi_mem_rxaui[162] = 0x0;
+	vsemi_mem_rxaui[163] = 0x0;
+	vsemi_mem_rxaui[164] = 0x4;
+}
+
+
 void nlm_hal_config_vsemi_mem_xaui_4page_125(void)
 {
 	vsemi_mem_xaui_4page[101] = 0xBF;
@@ -558,26 +645,26 @@ void nlm_hal_config_vsemi_mem_xaui_4page_125(void)
 	vsemi_mem_xaui_4page[108] = 0x1;
 	vsemi_mem_xaui_4page[109] = 0x22;
 	vsemi_mem_xaui_4page[110] = 0xF;
-	
+
 	return;
 }
 
 void nlm_hal_config_vsemi_mem_sgmii(void)
 {
-    vsemi_mem_sgmii[101] = 0x99;
-    vsemi_mem_sgmii[102] = 0x0;
-    vsemi_mem_sgmii[103] = 0x6C;
-    vsemi_mem_sgmii[104] = 0xB7;
-    vsemi_mem_sgmii[105] = 0xB7;
-    vsemi_mem_sgmii[106] = 0xC;
-    vsemi_mem_sgmii[107] = 0xC;
-    vsemi_mem_sgmii[108] = 0x1A;
-    vsemi_mem_sgmii[109] = 0x1A;
-    vsemi_mem_sgmii[110] = 0x7;
-    vsemi_mem_sgmii[111] = 0xC;
-    vsemi_mem_sgmii[112] = 0x8;
-    vsemi_mem_sgmii[113] = 0x0;
-    vsemi_mem_sgmii[114] = 0x8;
+	vsemi_mem_sgmii[101] = 0x99;
+	vsemi_mem_sgmii[102] = 0x0;
+	vsemi_mem_sgmii[103] = 0x6C;
+	vsemi_mem_sgmii[104] = 0xB7;
+	vsemi_mem_sgmii[105] = 0xB7;
+	vsemi_mem_sgmii[106] = 0xC;
+	vsemi_mem_sgmii[107] = 0xC;
+	vsemi_mem_sgmii[108] = 0x1A;
+	vsemi_mem_sgmii[109] = 0x1A;
+	vsemi_mem_sgmii[110] = 0x7;
+	vsemi_mem_sgmii[111] = 0xC;
+	vsemi_mem_sgmii[112] = 0x8;
+	vsemi_mem_sgmii[113] = 0x0;
+	vsemi_mem_sgmii[114] = 0x8;
     vsemi_mem_sgmii[115] = 0x0;
     vsemi_mem_sgmii[116] = 0xFF;
     vsemi_mem_sgmii[117] = 0xB3;
@@ -834,6 +921,7 @@ EXPORT_SYMBOL(nlm_hal_config_vsemi_mem_sgmii_4page_125Mhz);
 EXPORT_SYMBOL(nlm_hal_config_vsemi_mem_10G_lane_4page);
 EXPORT_SYMBOL(nlm_hal_config_vsemi_mem_10G_lane);
 EXPORT_SYMBOL(vsemi_mem_xaui_4page);
+EXPORT_SYMBOL(vsemi_mem_rxaui_4page);
 EXPORT_SYMBOL(vsemi_mem_16G);
 EXPORT_SYMBOL(vsemi_mem_sgmii);
 EXPORT_SYMBOL(vsemi_mem_12G);
@@ -841,6 +929,7 @@ EXPORT_SYMBOL(vsemi_mem_12G_4page);
 EXPORT_SYMBOL(vsemi_mem_sgmii_4page);
 EXPORT_SYMBOL(vsemi_mem_16G_4page);
 EXPORT_SYMBOL(vsemi_mem_xaui);
+EXPORT_SYMBOL(vsemi_mem_rxaui);
 EXPORT_SYMBOL(vsemi_mem_10G_lane);
 EXPORT_SYMBOL(vsemi_mem_10G_lane_4page);
 #endif
-- 
1.9.1

