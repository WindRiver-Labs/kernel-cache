From 2177af024366f943db4988be5b535e978d2aecca Mon Sep 17 00:00:00 2001
From: Lakshman Garlapati <kumarga@broadcom.com>
Date: Tue, 8 Jul 2014 14:29:53 +0530
Subject: [PATCH 1231/1532] nlm_adma: align tx descriptors to cacheline

Fixed an issue in freeing the cache aligned memory
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/dtre/nlm_adma.c | 21 +++++++++++++--------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff --git a/drivers/misc/netlogic/dtre/nlm_adma.c b/drivers/misc/netlogic/dtre/nlm_adma.c
index d59e855..05bae25 100644
--- a/drivers/misc/netlogic/dtre/nlm_adma.c
+++ b/drivers/misc/netlogic/dtre/nlm_adma.c
@@ -66,17 +66,22 @@ struct page * nlm_dtre_null_page;
 
 static int dtre_init_only = 0;
 
-#define CACHELINE_ALIGNED_ADDR(addr) (((unsigned long)(addr)) & ~(SMP_CACHE_BYTES-1))
+#define CACHELINE_SIZE 64
+#define CACHELINE_ALIGNED_ADDR(addr) (((unsigned long)(addr)) & ~(CACHELINE_SIZE-1))
 
 static __inline__ void *cacheline_aligned_kzalloc(int size, int gfp_mask)
 {
-	void *buf = kzalloc(size + SMP_CACHE_BYTES, gfp_mask);
+	void *buf, **mem = NULL;
+
+	buf = kzalloc(size + CACHELINE_SIZE + sizeof (void *), gfp_mask);
 	if (buf)
-		buf =
-			(void
-			 *)(CACHELINE_ALIGNED_ADDR((unsigned long)buf +
-					 SMP_CACHE_BYTES));
-	return buf;
+	{
+		mem = (void **)(CACHELINE_ALIGNED_ADDR((unsigned long)buf +
+			  CACHELINE_SIZE + sizeof(void *)));
+		mem[-1] = buf;
+	}
+
+	return mem;
 }
 
 
@@ -1425,7 +1430,7 @@ static void free_initial_tx_desc_pool(struct nlm_adma_chan *nlm_chan)
 	desc = nlm_chan->desc_pool_head.next;
 	while(desc) {
 		next = desc->next;
-		kfree(desc);
+		kfree(((void **)desc)[-1]);
 		desc = next;
 	}
 	nlm_chan->desc_pool_head.next = NULL;
-- 
1.9.1

