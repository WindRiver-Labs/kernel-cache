From 17d019e75e5ffc980e9be5c1de7248a655016f1f Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Sat, 13 Dec 2014 18:24:57 +0530
Subject: [PATCH 1471/1532] nae: Added support for promiscuous mode.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/xlpge_nae.c | 97 ++++-----------------------
 1 file changed, 12 insertions(+), 85 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index 0078e1d..d72429b 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -1147,94 +1147,23 @@ static int  nlm_xlp_nae_stop (struct net_device *dev)
 	return 0;
 }
 
-/**********************************************************************
- * nlm_xlp_set_multicast_list
+/****************************************************************************
+ * nlm_xlp_change_rx_flags - called when promiscuous mode is enabled/disabled
  *
- **********************************************************************/
-#if 0
-static void  nlm_xlp_set_multicast_list (struct net_device *dev)
+ ****************************************************************************/
+static void  nlm_xlp_change_rx_flags (struct net_device *dev)
 {
 	struct dev_data *priv = netdev_priv(dev);
+        net_port_t* nae_port = priv->nae_port;
         int reg_val=0;
+        if ((dev->flags & IFF_PROMISC)){
+               netsoc_promisc_enable(nae_port);}
 
-	if ((dev->flags & IFF_PROMISC)) {
-		reg_val=nlm_hal_read_mac_reg(priv->node, priv->block, priv->index,
-						MAC_FILTER_CONFIG);
-		reg_val |= ((1 << MAC_FILTER_MCAST_EN_POS)|
-						(1 << MAC_FILTER_ALL_UCAST_EN));
-		nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-                	                        MAC_FILTER_CONFIG,reg_val);
-
-		reg_val=nlm_hal_read_mac_reg(priv->node, priv->block, priv->index,
-						NETIOR_VLANTYPE_FILTER);
-		reg_val &= ~(1<<VLAN_RxPAC);
-        	nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-						NETIOR_VLANTYPE_FILTER,reg_val);
-	}
-	else {
-		reg_val=nlm_hal_read_mac_reg(priv->node, priv->block, priv->index,
-                        		        MAC_FILTER_CONFIG);
-		if(dev->flags & IFF_ALLMULTI) {
-			reg_val |= (1<<MAC_FILTER_MCAST_EN_POS);
-			reg_val &= ~(1<<MAC_FILTER_ALL_UCAST_EN);
-			nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-                          			MAC_FILTER_CONFIG,reg_val);
-		}
-		else {
-			reg_val &= ~((1<<MAC_FILTER_MCAST_EN_POS)|(1 << MAC_FILTER_ALL_UCAST_EN));
-			nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-                                MAC_FILTER_CONFIG,reg_val);
-		}
-
-        	reg_val  = nlm_hal_read_mac_reg(priv->node, priv->block, priv->index,
-						NETIOR_VLANTYPE_FILTER);
-		reg_val |= (1<<VLAN_RxPAC);
-        	nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-						NETIOR_VLANTYPE_FILTER,reg_val);
-	}
-	return;
+        else{
+               netsoc_promisc_disable(nae_port);
+       	}
+        return;
 }
-#endif
-
-#if 0
-static void xlp_mac_setup_hwaddr(struct dev_data *priv)
-{
-        struct net_device *dev = priv->dev;
-	int reg_val=0;
-
-	nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-				MAC_ADDR0_LO,
-				(dev->dev_addr[5] << 24) |
-				(dev->dev_addr[4] << 16) |
-				(dev->dev_addr[3] << 8)  |
-				(dev->dev_addr[2]));
-
-	nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-				MAC_ADDR0_HI,
-				(dev->dev_addr[1] << 24) |
-				(dev->dev_addr[0] << 16));
-
-	nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-				MAC_ADDR0_MASK_LO,
-				0xFFFFFFFF);
-	nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-				MAC_ADDR0_MASK_HI,
-				0xFFFFFFFF);
-
-
-	nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-				MAC_FILTER_CONFIG,
-				(1 << MAC_FILTER_BCAST_EN_POS) |
-                                (1 << MAC_FILTER_ADDR0_VALID_POS));
-
-	reg_val=nlm_hal_read_mac_reg(priv->node, priv->block, priv->index,
-				NETIOR_VLANTYPE_FILTER);
-        reg_val |=(1<<VLAN_RxPAC);
-        nlm_hal_write_mac_reg(priv->node, priv->block, priv->index,
-				NETIOR_VLANTYPE_FILTER,reg_val);
-
-}
-#endif
 
 /**********************************************************************
  * nlm_xlp_nae_ioctl
@@ -1422,9 +1351,7 @@ static const struct net_device_ops nlm_xlp_nae_ops = {
 	.ndo_open			= nlm_xlp_nae_open,
 	.ndo_stop			= nlm_xlp_nae_stop,
 	.ndo_start_xmit			= nlm_xlp_nae_start_xmit,
-#ifdef NOTYET
-	.ndo_set_multicast_list		= nlm_xlp_set_multicast_list,
-#endif
+	.ndo_change_rx_flags		= nlm_xlp_change_rx_flags,
 	.ndo_do_ioctl			= nlm_xlp_nae_ioctl,
 	.ndo_tx_timeout 		= nlm_xlp_nae_tx_timeout,
 	.ndo_change_mtu			= nlm_xlp_nae_change_mtu,
-- 
1.9.1

