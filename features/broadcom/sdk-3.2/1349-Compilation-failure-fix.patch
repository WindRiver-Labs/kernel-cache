From 0095c162bd583a8b5f6f1f11befdf75c51b78806 Mon Sep 17 00:00:00 2001
From: Om Narasimhan <omn@broadcom.com>
Date: Wed, 29 Feb 2012 11:05:29 -0800
Subject: [PATCH 1349/1532] Compilation failure fix

After changing the APIs and some #defines in linux (commi id : 4ea9294757fc3d11b4aa427dbe9f077368d85d2a)
these changes were required to fix a compilation failure.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/init_nae.c | 3 ++-
 drivers/net/ethernet/broadcom/nae/xlp_nae.c  | 8 ++++----
 2 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/init_nae.c b/drivers/net/ethernet/broadcom/nae/init_nae.c
index f9560ac..8e41ca2 100644
--- a/drivers/net/ethernet/broadcom/nae/init_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/init_nae.c
@@ -9,6 +9,7 @@
 #include <asm/netlogic/hal/nlm_hal_fmn.h>
 #include <asm/netlogic/hal/nlm_hal_nae.h>
 #include <asm/netlogic/hal/nlm_hal_xlp_dev.h>
+#include <asm/netlogic/xlp_irq.h>
 #include <ops.h>
 
 #include "net_common.h"
@@ -26,7 +27,7 @@ static void config_fmn(void)
 	/* Configure FMN again but only cpu credits */
 	msgrng_access_enable(mflags);
 
-	nlm_xlp_msgring_int_handler(XLP_IRQ_MSGRING, NULL);
+	nlm_xlp_msgring_int_handler(XLP_IRQ_MSGRING_RVEC, NULL);
 
 	msgrng_access_disable(mflags);
 
diff --git a/drivers/net/ethernet/broadcom/nae/xlp_nae.c b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
index 017dce0..38280fa 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
@@ -58,7 +58,7 @@
 
 #include <asm/netlogic/hal/nlm_hal_fmn.h>
 #include <asm/netlogic/hal/nlm_hal_nae.h>
-#include <asm/netlogic/xlp_hal_pic.h>
+#include <asm/netlogic/xlp_irq.h>
 
 #include "net_common.h"
 #include "xlp_nae.h"
@@ -1750,13 +1750,13 @@ static void nlm_xlp_mac_timer(unsigned long data)
 
 		/* Send IRQ_MSGRING vector in an IPI to all cpus but the current one */
 		if (cpumask_lo)
-			nlm_hal_write_pic_reg(mmio, PIC_IPI_CTL, (XLP_IRQ_MSGRING << 20) | cpumask_lo );
+			nlm_hal_write_pic_reg(mmio, PIC_IPI_CTL, (XLP_IRQ_MSGRING_RVEC << 20) | cpumask_lo );
 
 		if (cpumask_hi)
-			nlm_hal_write_pic_reg(mmio, PIC_IPI_CTL, (XLP_IRQ_MSGRING << 20) | (1 << 16) | (cpumask_hi));
+			nlm_hal_write_pic_reg(mmio, PIC_IPI_CTL, (XLP_IRQ_MSGRING_RVEC << 20) | (1 << 16) | (cpumask_hi));
 
 		/* Run IPI handler on this cpu too */
-		nlm_xlp_msgring_int_handler(XLP_IRQ_MSGRING, NULL);
+		nlm_xlp_msgring_int_handler(XLP_IRQ_MSGRING_RVEC, NULL);
 	}
 #endif
         priv->link_timer.expires = jiffies + next_tick;
-- 
1.9.1

