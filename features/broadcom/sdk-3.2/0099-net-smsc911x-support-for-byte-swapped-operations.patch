From 92945356f882841d2df452a90a009c5479f2ca43 Mon Sep 17 00:00:00 2001
From: Kamlakant Patel <kamlakant.patel@broadcom.com>
Date: Tue, 11 Dec 2012 16:13:40 +0530
Subject: [PATCH 0099/1532] net/smsc911x: support for byte-swapped operations

Adding support for byte-swapped register read/write operations.
For more details please look at:
commit 769ce4c95e8f77c1d5df82194e54df49d28830c5
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/smsc/smsc911x.c | 112 ++++++++++++++++++++++++++++++++++-
 1 file changed, 111 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/smsc/smsc911x.c b/drivers/net/ethernet/smsc/smsc911x.c
index fa8db51..a3413a5 100644
--- a/drivers/net/ethernet/smsc/smsc911x.c
+++ b/drivers/net/ethernet/smsc/smsc911x.c
@@ -166,6 +166,19 @@ static inline u32 __smsc911x_reg_read(struct smsc911x_data *pdata, u32 reg)
 	return 0;
 }
 
+static inline u32 __smsc911x_reg_read_swab(struct smsc911x_data *pdata, u32 reg)
+{
+	if (pdata->config.flags & SMSC911X_USE_32BIT)
+		return swab32(readl(pdata->ioaddr + reg));
+
+	if (pdata->config.flags & SMSC911X_USE_16BIT)
+		return (swab16(readw(pdata->ioaddr + reg)) & 0xFFFF) |
+			((swab16(readw(pdata->ioaddr + reg + 2)) &
+			  0xFFFF) << 16);
+
+	BUG();
+	return 0;
+}
 static inline u32
 __smsc911x_reg_read_shift(struct smsc911x_data *pdata, u32 reg)
 {
@@ -211,6 +224,23 @@ static inline void __smsc911x_reg_write(struct smsc911x_data *pdata, u32 reg,
 	BUG();
 }
 
+static inline void __smsc911x_reg_write_swab(struct smsc911x_data *pdata,
+					     u32 reg, u32 val)
+{
+	if (pdata->config.flags & SMSC911X_USE_32BIT) {
+		writel(swab32(val), pdata->ioaddr + reg);
+		return;
+	}
+
+	if (pdata->config.flags & SMSC911X_USE_16BIT) {
+		writew(swab16(val) & 0xFFFF, pdata->ioaddr + reg);
+		writew((swab16(val) >> 16) & 0xFFFF, pdata->ioaddr + reg + 2);
+		return;
+	}
+
+	BUG();
+}
+
 static inline void
 __smsc911x_reg_write_shift(struct smsc911x_data *pdata, u32 reg, u32 val)
 {
@@ -272,6 +302,40 @@ out:
 	spin_unlock_irqrestore(&pdata->dev_lock, flags);
 }
 
+static inline void
+smsc911x_tx_writefifo_swab(struct smsc911x_data *pdata, unsigned int *buf,
+		      unsigned int wordcount)
+{
+	unsigned long flags;
+
+	spin_lock_irqsave(&pdata->dev_lock, flags);
+
+	if (pdata->config.flags & SMSC911X_SWAP_FIFO) {
+		while (wordcount--)
+			__smsc911x_reg_write(pdata, TX_DATA_FIFO,
+					     *buf++);
+		goto out;
+	}
+
+	if (pdata->config.flags & SMSC911X_USE_32BIT) {
+		while (wordcount--)
+			writel(swab32(*buf++), pdata->ioaddr + TX_DATA_FIFO);
+		goto out;
+	}
+
+	if (pdata->config.flags & SMSC911X_USE_16BIT) {
+		while (wordcount--)
+			__smsc911x_reg_write(pdata, TX_DATA_FIFO,
+						swab16(*buf++));
+		goto out;
+	}
+
+	BUG();
+out:
+	spin_unlock_irqrestore(&pdata->dev_lock, flags);
+}
+
+
 /* Writes a packet to the TX_DATA_FIFO - shifted version */
 static inline void
 smsc911x_tx_writefifo_shift(struct smsc911x_data *pdata, unsigned int *buf,
@@ -338,6 +402,39 @@ out:
 	spin_unlock_irqrestore(&pdata->dev_lock, flags);
 }
 
+static inline void
+smsc911x_rx_readfifo_swab(struct smsc911x_data *pdata, unsigned int *buf,
+		     unsigned int wordcount)
+{
+	unsigned long flags;
+
+	spin_lock_irqsave(&pdata->dev_lock, flags);
+
+	if (pdata->config.flags & SMSC911X_SWAP_FIFO) {
+		while (wordcount--)
+			*buf++ = __smsc911x_reg_read(pdata, RX_DATA_FIFO);
+		goto out;
+	}
+
+	if (pdata->config.flags & SMSC911X_USE_32BIT) {
+		while (wordcount--)
+			*buf++ = swab32(readl(pdata->ioaddr + RX_DATA_FIFO));
+		goto out;
+	}
+
+	if (pdata->config.flags & SMSC911X_USE_16BIT) {
+		while (wordcount--)
+			*buf++ = swab16(__smsc911x_reg_read(pdata,
+					RX_DATA_FIFO));
+		goto out;
+	}
+
+	BUG();
+out:
+	spin_unlock_irqrestore(&pdata->dev_lock, flags);
+}
+
+
 /* Reads a packet out of the RX_DATA_FIFO - shifted version */
 static inline void
 smsc911x_rx_readfifo_shift(struct smsc911x_data *pdata, unsigned int *buf,
@@ -2111,6 +2208,13 @@ static const struct net_device_ops smsc911x_netdev_ops = {
 #endif
 };
 
+static const struct smsc911x_ops swab_smsc911x_ops = {
+	.reg_read = __smsc911x_reg_read_swab,
+	.reg_write = __smsc911x_reg_write_swab,
+	.rx_readfifo = smsc911x_rx_readfifo_swab,
+	.tx_writefifo = smsc911x_tx_writefifo_swab,
+};
+
 /* copies the current mac address from hardware to dev->dev_addr */
 static void smsc911x_read_mac_address(struct net_device *dev)
 {
@@ -2162,7 +2266,8 @@ static int smsc911x_init(struct net_device *dev)
 	 * is ready)".
 	 */
 
-	mask = PMT_CTRL_READY_ | swahw32(PMT_CTRL_READY_);
+	mask = PMT_CTRL_READY_ | swahw32(PMT_CTRL_READY_) |
+		swab16(PMT_CTRL_READY_);
 	while (!(smsc911x_reg_read(pdata, PMT_CTRL) & mask) && --to)
 		udelay(1000);
 
@@ -2173,6 +2278,11 @@ static int smsc911x_init(struct net_device *dev)
 
 	/* Check byte ordering */
 	byte_test = smsc911x_reg_read(pdata, BYTE_TEST);
+
+	if (byte_test == 0x65872143)
+		pdata->ops = &swab_smsc911x_ops;
+
+	byte_test = smsc911x_reg_read(pdata, BYTE_TEST);
 	SMSC_TRACE(pdata, probe, "BYTE_TEST: 0x%08X", byte_test);
 	if (byte_test == 0x43218765) {
 		SMSC_TRACE(pdata, probe, "BYTE_TEST looks swapped, "
-- 
1.9.1

