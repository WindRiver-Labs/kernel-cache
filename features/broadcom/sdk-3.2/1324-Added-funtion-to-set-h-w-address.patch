From 84d20ef7d78b569daa3aca57308c4d1f991a6355 Mon Sep 17 00:00:00 2001
From: Jayanthi Annadurai <jayanthia@netlogicmicro.com>
Date: Sat, 26 Mar 2011 19:04:07 -0700
Subject: [PATCH 1324/1532] Added funtion to set h/w address

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/net_common.h |  2 +-
 drivers/net/ethernet/broadcom/nae/xlp_hw.c     |  2 +-
 drivers/net/ethernet/broadcom/nae/xlp_nae.c    | 30 +++++++++++++++++++++++++-
 3 files changed, 31 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/net_common.h b/drivers/net/ethernet/broadcom/nae/net_common.h
index 29b1639..2850556 100644
--- a/drivers/net/ethernet/broadcom/nae/net_common.h
+++ b/drivers/net/ethernet/broadcom/nae/net_common.h
@@ -11,7 +11,7 @@
 #define FAIL                    -1
 #define CPU0_VC                 0
 
-#define CPU_Q_ID(cpu, vid) ( ((cpu) << 2) | (vid) )
+#define CPU_Q_ID(cpu, vid) ((cpu & 0xfc) | (vid) )
 
 #define MAX_DEST_QID            50
 
diff --git a/drivers/net/ethernet/broadcom/nae/xlp_hw.c b/drivers/net/ethernet/broadcom/nae/xlp_hw.c
index 0577589c1..a93909f 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_hw.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_hw.c
@@ -480,7 +480,7 @@ int nlm_xlp_link_up(struct dev_data *priv, int phy)
         uint16_t extstatus;
 
 	if (priv->type != SGMII_IF)
-                return;
+                return -EIO;
         nlm_hal_mdio_write(NLM_HAL_EXT_MDIO, 0, BLOCK_7, LANE_CFG, priv->phy.addr, 22, 0);
         extstatus = nlm_hal_mdio_read(NLM_HAL_EXT_MDIO, 0, BLOCK_7, LANE_CFG, priv->phy.addr, 17);
         return ((extstatus & 0x0400) ? 1 : 0 );
diff --git a/drivers/net/ethernet/broadcom/nae/xlp_nae.c b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
index a95a785..0063e13 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
@@ -171,6 +171,7 @@ static void  nlm_xlp_set_multicast_list (struct net_device *dev);
 static int  nlm_xlp_nae_ioctl (struct net_device *dev, struct ifreq *rq, int cmd);
 static int  nlm_xlp_nae_change_mtu(struct net_device *dev, int new_mtu);
 static void  nlm_xlp_nae_tx_timeout (struct net_device *dev);
+static void xlp_mac_setup_hwaddr(struct dev_data *priv);
 
 #ifdef  ENABLE_NAE_PIC_INT
 static irqreturn_t nlm_xlp_nae_int_handler(int irq, void * dev_id);
@@ -474,6 +475,7 @@ static void nlm_xlp_nae_init(void)
 		register_netdev(dev);
 
 		dev_mac[i] = dev;
+		xlp_mac_setup_hwaddr(priv);
 
 		tasklet_init(&mac_refill_task[priv->port],
 			     (void (*)(long unsigned int))mac_refill_frin_desc,
@@ -666,6 +668,25 @@ static void  nlm_xlp_set_multicast_list (struct net_device *dev)
 	return;
 }
 
+static void xlp_mac_setup_hwaddr(struct dev_data *priv)
+{
+        struct net_device *dev = priv->dev;
+
+        nlm_hal_write_mac_reg(priv->block, priv->index, MAC_ADDR0_LO, (dev->dev_addr[5] << 24) |
+				(dev->dev_addr[4] << 16) | (dev->dev_addr[3] << 8) | (dev->dev_addr[2]));
+
+	nlm_hal_write_mac_reg(priv->block, priv->index, MAC_ADDR0_HI, (dev->dev_addr[1] << 24) | 
+				(dev->dev_addr[0] << 16));
+
+	nlm_hal_write_mac_reg(priv->block, priv->index, MAC_ADDR0_MASK_LO, 0xFFFFFFFF);
+	nlm_hal_write_mac_reg(priv->block, priv->index, MAC_ADDR0_MASK_HI, 0xFFFFFFFF);
+
+        nlm_hal_write_mac_reg(priv->block, priv->index, MAC_FILTER_CONFIG, (1 << MAC_FILTER_BCAST_EN_POS) |
+						 (1 << MAC_FILTER_MCAST_EN_POS) | (1 << MAC_FILTER_ADDR0_VALID_POS) );
+
+}
+
+
 /**********************************************************************
  * nlm_xlp_nae_ioctl
  *
@@ -826,7 +847,9 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 		/* context field is currently unused */
 		context = (msg0 >> 40) & 0x3fff;
 		port = cntx2port[context];
-
+#ifdef DEBUG_CONTEXT_PORT_MAPPING
+                if (port == 0) printk("FB context %d port %d \n",context, port);    
+#endif
 		skb = (struct sk_buff *)bus_to_virt(addr);
 		if(skb)
 		{
@@ -857,12 +880,14 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 		len	= (msg1 >> 40) & 0x3fff;
 		context = (msg1 >> 54) & 0x3ff;
 
+#ifdef DEBUG_RXPKT_ADDR_NULL
 		if (addr == 0) {
 			printk("Rcvd pkt address NULL !!!\n");
 			printk("[%s] src_id=%d vc = %d, size = %d, entry0=%llx entry1=%llx\n", __func__,
                        src_id, vc, size, msg0, msg1);
 			return;	
 		}
+#endif
 		if (err) bad_pkt = 1;
 
 		if (drop_uboot_pkt) {
@@ -874,6 +899,9 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 		}
 
 		port = cntx2port[context];
+#ifdef DEBUG_CONTEXT_PORT_MAPPING
+		if (port == 0) printk("Rx context %d port %d \n",context, port);    
+#endif
 		if(port >= MAX_GMAC_PORT)
 		{
 			printk("[%s]: bad port=%d, context=%d\n", __func__, port, context);
-- 
1.9.1

