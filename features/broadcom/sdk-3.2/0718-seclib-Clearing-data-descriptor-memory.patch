From 4f1d49d563cc390ee4cd07fd0aa4bb089fee1730 Mon Sep 17 00:00:00 2001
From: Hareesh R <hareeshr@broadcom.com>
Date: Tue, 25 Jun 2013 12:25:22 +0530
Subject: [PATCH 0718/1532] seclib:Clearing data descriptor memory

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/seclib/saesoc_lib.h | 30 ++++++++++++++++++++++++------
 1 file changed, 24 insertions(+), 6 deletions(-)

diff --git a/arch/mips/netlogic/lib/seclib/saesoc_lib.h b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
index 950857a..a66a12a 100644
--- a/arch/mips/netlogic/lib/seclib/saesoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
@@ -543,8 +543,10 @@ static inline int saesoc_new_session(
 				frag_idx += spriv->hash_iv_descs;
 			} else
 				 spriv->hash_iv_descs = 0;
-		} else
+		} else {
 			saesoc_gen2_set_hash_bypass(sd->descs[0]);
+			spriv->hash_iv_descs = 0;
+		}
 
 		if(initp->cipher.type != SAESOC_CIPHER_BYPASS) {
 			saesoc_gen2_set_cipher_type_mode_offset(sd->descs[1], 
@@ -578,8 +580,10 @@ static inline int saesoc_new_session(
 				frag_idx += spriv->cipher_iv_descs;
 			} else
 				spriv->cipher_iv_descs = 0;
-		} else
+		} else {
 			saesoc_gen2_set_cipher_bypass(sd->descs[1]);
+			spriv->cipher_iv_descs = 0;
+		}
 
 
 		saesoc_gen2_set_l3param(sd->descs[0],
@@ -623,7 +627,7 @@ static inline int saesoc_new_session(
 				((initp->hash.flags & SAESOC_HF_HASH_CLOBBER) == 0 ? 0:1));
 
 		saesoc_gen1_set_hmac_extkeypad( spriv->ddesc[3],
-				(initp->hash.flags & SAESOC_HF_HMAC_KEY_PAD_EN)==0?0:1);
+				(initp->hash.flags & SAESOC_HF_HMAC_KEY_PAD_EN)==0?1:0);
 
 		saesoc_gen1_set_cipher_offset_clobber( spriv->ddesc[2],
 				initp->payload_offset,initp->cipher.iv_offset);
@@ -881,13 +885,24 @@ static inline int saesoc_new_data_desc(
 	dpriv->max_descs = ndescs;
 	dpriv->ndesfb_descs = 0;
 	dpriv->aad_len = 0;
+
+#ifdef SAESOC_PTYPE_GEN2_SUPPORT
+	IF_SAESOC_PTYPE_IS_GEN2
+	{
+		dd->descs[0] = 0ULL;
+		dd->descs[1] = 0ULL;
+	}
+#endif
 #ifdef SAESOC_PTYPE_GEN1_SUPPORT
+	IF_SAESOC_PTYPE_IS_GEN1
+	{
 	dd->descs[0] = spriv->ddesc[0];
 	dd->descs[1] = spriv->ddesc[1];
 	dd->descs[2] = spriv->ddesc[2];
 	dd->descs[3] = spriv->ddesc[3];
 	dd->descs[4] = spriv->ddesc[4];
 	dd->descs[5] = spriv->ddesc[5];
+	}
 #endif
 
 	return CRYPTOSOC_OK;
@@ -1745,6 +1760,7 @@ static inline int saesoc_process_request(
 	IF_SAESOC_PTYPE_IS_GEN2
 	{
 		int nsdescs, ivdescs = 0;
+		gen_type2 = 1;
 
 		dpriv = (struct saesoc_ddesc_priv_data *)ddesc->lib_priv;
 		sdesc = (struct saesoc_session_desc    *)dpriv->sdesc;
@@ -1765,6 +1781,7 @@ static inline int saesoc_process_request(
 
 		fmnentry2 = mparam != NULL ? mparam->async_rsp_arg : 0ULL;
 		ddesc->descs[nddescs] = fmnentry2;
+		rsp_msg_ptr = &ddesc->descs[nddescs];
 		nddescs++;
 
 		fmnentry0 = saesoc_gen2_form_fmn_entry0(rsp_vc, dpriv->ndesfb_descs, 
@@ -1782,8 +1799,10 @@ static inline int saesoc_process_request(
 		if(dpriv->ldst_frag_idx)
 			saesoc_gen2_set_last_frag(ddesc->descs[dpriv->ldst_frag_idx]);
 
-		rsp_msg_ptr = &ddesc->descs[nddescs];
-		gen_type2 = 1;
+
+		//saesoc_dump_desc_info(sdesc, ddesc);
+		//saesoc_gen2_dump_fmnentry(fmnentry0, fmnentry1);
+		
 
 		goto send_req;
 	}
@@ -1831,7 +1850,6 @@ send_req:
 				fmnentry0, fmnentry1, fmnentry2, 
 				sync_res ? &sync_res->result : NULL,
 				rsp_msg_ptr);
-		saesoc_gen1_dump_fmnentry(fmnentry1,fmnentry2);
 	}
 }
 
-- 
1.9.1

