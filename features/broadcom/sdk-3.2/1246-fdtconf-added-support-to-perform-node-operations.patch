From 0df74f9dd93e51af567fbdaee6f862031b878183 Mon Sep 17 00:00:00 2001
From: Tanmay Jagdale <tanmayj@broadcom.com>
Date: Fri, 12 Sep 2014 15:56:25 +0530
Subject: [PATCH 1246/1532] fdtconf: added support to perform node operations

- Added support to add a new node to the device tree.
- Also added support for deleting nodes and properties.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/fdtconf/fdtconf.c | 63 +++++++++++++++++++++++++++------
 1 file changed, 52 insertions(+), 11 deletions(-)

diff --git a/drivers/misc/netlogic/fdtconf/fdtconf.c b/drivers/misc/netlogic/fdtconf/fdtconf.c
index c462c00..904a4f5 100644
--- a/drivers/misc/netlogic/fdtconf/fdtconf.c
+++ b/drivers/misc/netlogic/fdtconf/fdtconf.c
@@ -65,6 +65,7 @@ extern void *initial_boot_params;
 struct platform_device *fdtdev;
 struct bin_attribute binfdt_attr;
 struct bin_attribute bincontrol_attr;
+struct bin_attribute bindel_attr;
 extern unsigned long pktmem_start_address;
 extern unsigned long pktmem_size;
 extern unsigned long frin_fifo_address;
@@ -287,6 +288,7 @@ out:
 	return err;
 }
 
+
 /*
  * Parse the input string and write the passed value to the
  * device tree blob. Thus allowing dtbs to be modified on the board.
@@ -296,21 +298,40 @@ static ssize_t write_fdt(struct file *filep, struct kobject *kobj,
 			loff_t pos, size_t size)
 {
 	int		err, k = 0, node, ret = size;
-	char		*path, *prop, *val, *p, *q;
+	char		*path, *prop, *val, *p, *q, *path_value, *op;
 	uint32_t	value[16];
 
+
+	buf[size] = '\0';
+
 	/*
 	 * The syntax to set a property is as follows :
-	 * -------------------------
-	 * <path>/<property> <value>
-	 * -------------------------
-	 * Example : /frequency-config/nae 500
+	 * -------------------------------------
+	 * <operation> <path>/<property> <value>
+	 * -------------------------------------
+	 * Example : set /frequency-config/nae 500
 	 */
-	path = val = buf;
-	buf = strsep(&val, " \t");
+	op = path_value = buf;
+	buf = strsep(&path_value, " \t");
 	if (buf == NULL)
 		return -EFAULT;
 
+	op = strim(op);
+
+	if ((strcmp(op, "delete-node") == 0)) {
+		node = fdt_path_offset(fdt, path_value);
+		if (node < 0)
+			ret = -EFAULT;
+		else if (fdt_del_node(fdt, node))
+			ret = -EFAULT;
+		goto out;
+	}
+
+	path = val = path_value;
+	path_value = strsep(&val, " \t");
+	if (path_value == NULL)
+		return -EFAULT;
+
 	prop = strrchr(path, '/');
 	if (prop == NULL)
 		return -EFAULT;
@@ -318,13 +339,33 @@ static ssize_t write_fdt(struct file *filep, struct kobject *kobj,
 	*prop = '\0';
 	++prop;
 
-	val = strim(val);
+	if (*path == '\0')
+		path = "/";
+
 	node = fdt_path_offset(fdt, path);
 	if (node < 0) {
 		ret = -EFAULT;
 		goto out;
 	}
 
+	if (strcmp(op, "mknode") == 0) {
+		/*
+		 * Add a sub node.
+		 */
+		if (fdt_add_subnode(fdt, node, prop) < 0)
+			ret = -EFAULT;
+		goto out;
+	} else if (strcmp(op, "delete-property") == 0) {
+		/*
+		 * Delete the property.
+		 */
+		if (fdt_delprop(fdt, node, prop))
+			ret = -EFAULT;
+		goto out;
+	}
+
+	val = strim(val);
+
 	/*
 	 * Ucore code is passed in the following format :
 	 * ---------------------------------------------------
@@ -374,7 +415,7 @@ static ssize_t write_fdt(struct file *filep, struct kobject *kobj,
 					(k * sizeof(uint32_t)));
 		if (err)
 			ret = err;
-	} else if ((*p == '"') && (q = strrchr(val, '"'))) {
+	} else if ((*p == '"') && (q = strchr(&val[1], '"'))) {
 		/* Strip the quotes */
 		*q = '\0';
 		err = fdt_setprop_string(fdt, node, prop, (p + 1));
@@ -537,12 +578,12 @@ create_sys_files:
 	if (err) {
 		dev_err(&fdtdev->dev, "Couldn't create control file %d\n", err);
 		ret = err;
-		goto err_sysfs;
+		goto err_sysfs_app;
 	}
 
 	return 0;
 
-err_sysfs:
+err_sysfs_app:
 	sysfs_remove_bin_file(&fdtdev->dev.kobj, &binfdt_attr);
 err_free:
 	kfree(fdt);
-- 
1.9.1

