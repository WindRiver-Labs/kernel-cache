From b3a2fe9239358c1436b89f85b86bc88d90e546cf Mon Sep 17 00:00:00 2001
From: Ho-Cheng Tseng <htseng@netlogicmicro.com>
Date: Thu, 26 Jan 2012 17:28:19 -0800
Subject: [PATCH 0283/1532] KBP dataplane driver ready for initial release

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/boot/dts/multi-os.dts       | 418 +++++++++++++++++++---------------
 arch/mips/boot/dts/xlp8xx-helinux.dts |  50 +++-
 arch/mips/boot/dts/xlp8xx-netos.dts   |  40 ++++
 arch/mips/boot/dts/xlpev-helinux.dts  |  53 ++++-
 arch/mips/boot/dts/xlpev-netos.dts    |  42 +++-
 5 files changed, 405 insertions(+), 198 deletions(-)

diff --git a/arch/mips/boot/dts/multi-os.dts b/arch/mips/boot/dts/multi-os.dts
index 8e89e1a..8efd054 100644
--- a/arch/mips/boot/dts/multi-os.dts
+++ b/arch/mips/boot/dts/multi-os.dts
@@ -4,191 +4,237 @@
 
 /dts-v1/;
 / {
-	model = "MIPS,XLP8XX";
-	compatible = "NETL,XLP8XX_A0";
-
-	#address-cells = <1>;
-	#size-cells = <1>;
-
-	hypervisor {
-		hypervisor-name = "Xen";
-		alloc_dom0_memory = <0>;
-		bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0x0f -- ";
-		domain_heap = <0x30000000 0x20000000>; /* 0.75 GB -> 1.25 GB */
-	};
-	doms {
-		#address-cells = <1>;
-		#size-cells = <1>;
-		dom@0 {
-			device_type = "domain";
-			os = "linux";
-
-			#address-cells = <1>;
-			#size-cells = <1>;
-
-			cpu {
-				onlinemask = <0x0f>;
-                                nae-rx-vc = <0>;
-                                nae-fb-vc = <1>;
-				napi-vc-mask = <0x3>;
-			};
-			uart {
-				id = <0>;
-				owner = <1>;
-				sharedcfg = <0x1f000000>;
-			};
-			memory {
-				reg = <	0x01000000 0x0F000000	// 240M at 16M
-				       	0x20000000 0x10000000    // 256M at 512M
-				  	0x80000000 0x10000000>;  // 256M at 2G
-			};
-			pic {
-			};
-		};
-		dom@1 {
-			device_type = "domain";
-			os = "netos";
-
-			heap-size = <0x0 0x2000000>;                   // 32M
-			shared-mem = <0x0 0xe0000000 0x0 0x04000000>;  // 3584MB -> 3648 MB (64MB)
-
-			#address-cells = <1>;
-			#size-cells = <1>;
-
-			app-bootcmd = "ampload";
-			app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
-
-			kernel {
-				/* Kernel Memory allocated from xen domain-heap */
-				size = <0x02000000>;  // 32M
-
-				/* Location in Dom0 ramdisk */
-				location = "/tmp/xen/netos.elf";
-
-				/* Domain destroy currently doesn't work with hyperexec */
-				dom_destroy_hack = <0>;
-			};
-
-			cpu {
-				onlinemask = <0xf0>;
-                                nae-rx-vc = <0>;
-                                nae-fb-vc = <1>;
-			};
-			uart {
-				id = <0>;
-				sharedcfg = <0x1f000000>;
-			};
-			memory {
-				reg = <0x50000000 0x10000000>;  // 1280M -> 1536M (256M)
-			};
-			nae {
-				owner = <0>;
-			};
-		};
-		dom@2 {
-			device_type = "domain";
-			os = "netos";
-
-			heap-size = <0x0 0x2000000>;                   // 32M
-			shared-mem = <0x0 0xe4000000 0x0 0x04000000>;  // 3648MB -> 3712 (64MB)
-
-			#address-cells = <1>;
-			#size-cells = <1>;
-
-			app-bootcmd = "smpload";
-			app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
-
-			kernel {
-				/* Kernel Memory allocated from xen domain-heap */
-				size = <0x02000000>;  // 32M
-
-				/* Location in Dom0 ramdisk */
-				location = "/tmp/xen/netos.elf";
-
-				/* Domain destroy currently doesn't work with hyperexec */
-				dom_destroy_hack = <0>;
-			};
-
-			cpu {
-				onlinemask = <0x000fff00>;
-                                nae-rx-vc = <0>;
-                                nae-fb-vc = <1>;
-			};
-			uart {
-				id = <0>;
-				sharedcfg = <0x1f000000>;
-			};
-			memory {
-				reg = <0x60000000 0x20000000>;  // 1536M -> 2048M (512M)
-			};
-			nae {
-				owner = <0>;
-			};
-		};
-		dom@3 {
-			device_type = "domain";
-			os = "netos";
-
-			heap-size = <0x0 0x2000000>;                   // 32M
-			shared-mem = <0x0 0xe8000000 0x0 0x04000000>;  // 3712MB -> 3776 MB (64MB)
-
-			#address-cells = <1>;
-			#size-cells = <1>;
-
-			app-bootcmd = "ampload";
-			app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
-
-			kernel {
-				/* Kernel Memory allocated from xen domain-heap */
-				size = <0x02000000>;  // 32M
-
-				/* Location in Dom0 ramdisk */
-				location = "/tmp/xen/netos.elf";
-
-				/* Domain destroy currently doesn't work with hyperexec */
-				dom_destroy_hack = <0>;
-			};
-
-			cpu {
-				onlinemask = <0xfff00000>;
-                                nae-rx-vc = <0>;
-                                nae-fb-vc = <1>;
-			};
-			uart {
-				id = <0>;
-				sharedcfg = <0x1f000000>;
-			};
-			memory {
-				reg = <0x90000000 0x30000000>;  // 2304M -> 3072M (768MB)
-			};
-			nae {
-				owner = <0>;
-			};
-		};
-	};
-
-	chosen {
-		bootargs = " xlp_noi2c console=ttyS0,115200 ";
-	};
-
-	/* These binaries are downloaded at the resp physical memory locations
-	 * by their corresponding bootstrapping loaders. For example,
-	 * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
-	 * at 1M, hypervisor by u-boot hypervisor at 136M.
-	 * On simulator all these binaries are pre-loaded by using '-F' option
-	 * for convenience. On silicon, they will be loaded by their corresponding
-	 * temporary download locations the stage-1/stage-2 firmware
-	 */
-	firmware-download {
-		u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
-		sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
-		hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
-		dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
-		domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
-	};
-
-	soc {
-
-	};
+    model = "MIPS,XLP8XX";
+    compatible = "NETL,XLP8XX_A0";
+
+    #address-cells = <1>;
+    #size-cells = <1>;
+
+    hypervisor {
+        hypervisor-name = "Xen";
+        alloc_dom0_memory = <0>;
+        bootargs = "ncores=8 dom0_loadaddr=0x72000000 dom0_size=0x1c000000 dom0_cpumask=0xFFFFFFFF -- ";
+        domain_heap = <0x30000000 0x20000000>; /* 0.75 GB -> 1.25 GB */
+    };
+    doms {
+        #address-cells = <1>;
+        #size-cells = <1>;
+        dom@0 {
+            device_type = "domain";
+            os = "linux";
+
+            #address-cells = <1>;
+            #size-cells = <1>;
+
+            cpu {
+                onlinemask = <0xFFFF0000>;
+                nae-rx-vc = <0>;
+                nae-fb-vc = <1>;
+                napi-vc-mask = <0x3>;
+            };
+            uart {
+                id = <0>;
+                owner = <1>;
+                sharedcfg = <0x1f000000>;
+            };
+            memory {
+                reg = <    0x01000000 0x0F000000    // 240M at 16M
+                           0x20000000 0x10000000    // 256M at 512M
+                           0x80000000 0x10000000>;  // 256M at 2G
+            };
+            pic {
+            };
+            fmn {
+                node_0_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+                node_1_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+                node_2_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+                node_3_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+            };
+        };
+        dom@1 {
+            device_type = "domain";
+            os = "netos";
+
+            heap-size = <0x0 0x02000000>;                   // 32M
+            shared-mem = <0x0 0xe0000000 0x0 0x04000000>;  // 3584MB -> 3648 MB (64MB)
+
+            #address-cells = <1>;
+            #size-cells = <1>;
+
+            app-bootcmd = "smpload";
+            app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
+
+            kernel {
+                /* Kernel Memory allocated from xen domain-heap */
+                size = <0x02000000>;  // 32M
+
+                /* Location in Dom0 ramdisk */
+                location = "/tmp/xen/netos.elf";
+
+                /* Domain destroy currently doesn't work with hyperexec */
+                dom_destroy_hack = <0>;
+            };
+
+            cpu {
+                onlinemask = <0xFFFFFFFF>;
+                nae-rx-vc = <0>;
+                nae-fb-vc = <1>;
+            };
+            uart {
+                id = <0>;
+                sharedcfg = <0x1f000000>;
+            };
+            memory {
+                reg = <0x50000000 0x10000000>;  // 1280M -> 1536M (256M)
+            };
+            nae {
+                owner = <0>;
+            };
+            kbp {
+                /* distribute total of 4096 buffer id across cpus. required only for cpus sending requests.
+                 * note : KBP compare/search instructions must use even-numbered buffers. i.e. (buffer_id & 0x1 == 0) is True
+                 */
+                buffers-cpuid-offset-quantity = <  0    0   64
+                                                   1   64   64
+                                                   2  128   64
+                                                   3  192   64
+                                                   4  256   64
+                                                   5  320   64
+                                                   6  384   64
+                                                   7  448   64
+                                                   8  512   64
+                                                   9  576   64
+                                                  10  640   64
+                                                  11  704   64
+                                                  12  768   64
+                                                  13  832   64
+                                                  14  896   64
+                                                  15  960   64
+                                                  16 1024   64
+                                                  17 1088   64
+                                                  18 1152   64
+                                                  19 1216   64
+                                                  20 1280   64
+                                                  21 1344   64
+                                                  22 1408   64
+                                                  23 1472   64
+                                                  24 1536   64
+                                                  25 1600   64
+                                                  26 1664   64
+                                                  27 1728   64
+                                                  28 1792   64
+                                                  29 1856   64
+                                                  30 1920   64
+                                                  31 1984   64>;
+                /* starting address for KBP Driver Data. two 32-bit unsigned integers forms one 64-bit memory address.
+                 * kbp driver requires 2 MBytes of dedicated memory space to store data */
+                memory-offsethigh-offsetlow = <0x00000001 0x00000000>;
+            };
+        };
+        dom@2 {
+            device_type = "domain";
+            os = "netos";
+
+            heap-size = <0x0 0x2000000>;                   // 32M
+            shared-mem = <0x0 0xe4000000 0x0 0x04000000>;  // 3648MB -> 3712 (64MB)
+
+            #address-cells = <1>;
+            #size-cells = <1>;
+
+            app-bootcmd = "smpload";
+            app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
+
+            kernel {
+                /* Kernel Memory allocated from xen domain-heap */
+                size = <0x02000000>;  // 32M
+
+                /* Location in Dom0 ramdisk */
+                location = "/tmp/xen/netos.elf";
+
+                /* Domain destroy currently doesn't work with hyperexec */
+                dom_destroy_hack = <0>;
+            };
+
+            cpu {
+                onlinemask = <0x000fff00>;
+                nae-rx-vc = <0>;
+                nae-fb-vc = <1>;
+            };
+            uart {
+                id = <0>;
+                sharedcfg = <0x1f000000>;
+            };
+            memory {
+                reg = <0x60000000 0x20000000>;  // 1536M -> 2048M (512M)
+            };
+            nae {
+                owner = <0>;
+            };
+        };
+        dom@3 {
+            device_type = "domain";
+            os = "netos";
+
+            heap-size = <0x0 0x2000000>;                   // 32M
+            shared-mem = <0x0 0xe8000000 0x0 0x04000000>;  // 3712MB -> 3776 MB (64MB)
+
+            #address-cells = <1>;
+            #size-cells = <1>;
+
+            app-bootcmd = "ampload";
+            app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
+
+            kernel {
+                /* Kernel Memory allocated from xen domain-heap */
+                size = <0x02000000>;  // 32M
+
+                /* Location in Dom0 ramdisk */
+                location = "/tmp/xen/netos.elf";
+
+                /* Domain destroy currently doesn't work with hyperexec */
+                dom_destroy_hack = <0>;
+            };
+
+            cpu {
+                onlinemask = <0xfff00000>;
+                nae-rx-vc = <0>;
+                nae-fb-vc = <1>;
+            };
+            uart {
+                id = <0>;
+                sharedcfg = <0x1f000000>;
+            };
+            memory {
+                reg = <0x90000000 0x30000000>;  // 2304M -> 3072M (768MB)
+            };
+            nae {
+                owner = <0>;
+            };
+        };
+    };
+
+    chosen {
+        bootargs = " xlp_noi2c console=ttyS0,115200 ";
+    };
+
+    /* These binaries are downloaded at the resp physical memory locations
+     * by their corresponding bootstrapping loaders. For example,
+     * u-boot is loaded by x-load at 193M, sysconfig is loaded by u-boot
+     * at 1M, hypervisor by u-boot hypervisor at 136M.
+     * On simulator all these binaries are pre-loaded by using '-F' option
+     * for convenience. On silicon, they will be loaded by their corresponding
+     * temporary download locations the stage-1/stage-2 firmware
+     */
+    firmware-download {
+        u-boot        = <0x0c100000 0x3f00000>;  /* 63M @ 193M */
+        sysconfig     = <0x00100000 0x00100000>; /* 1M @ 1M */
+        hypervisor    = <0x08800000 0x00800000>; /* 8M @ 136M */
+        dom0          = <0x09000000 0x03000000>; /* 48M @ 144M */
+        domU-ramdisk  = <0x60000000 0x60800000>; /* 8M @ 1536M */
+    };
+
+    soc {
+
+    };
 };
 
diff --git a/arch/mips/boot/dts/xlp8xx-helinux.dts b/arch/mips/boot/dts/xlp8xx-helinux.dts
index e775a5e..76807a5 100644
--- a/arch/mips/boot/dts/xlp8xx-helinux.dts
+++ b/arch/mips/boot/dts/xlp8xx-helinux.dts
@@ -29,7 +29,7 @@
 			cpu {
 				onlinemask = <0xffffffff>;
                                 nae-rx-vc = <1>;
-                                nae-fb-vc = <2>;
+                                nae-fb-vc = <1>;
 				sae-rx-vc = <1>; /* sharing with nae */
 				sae-rx-sync-vc = <3>; /* should be exclusive */
                                 napi-vc-mask = <0x6>;
@@ -45,10 +45,10 @@
 					0xE0000000 0xC0000000>;  // 3GB @ 3.5GB
 			};
                         fmn {
-                                node_0_vc_mask = <0x66666666 0x66666666 0x66666666 0x66666666>;
-                                node_1_vc_mask = <0x66666666 0x66666666 0x66666666 0x66666666>;
-                                node_2_vc_mask = <0x66666666 0x66666666 0x66666666 0x66666666>;
-                                node_3_vc_mask = <0x66666666 0x66666666 0x66666666 0x66666666>;
+                                node_0_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+                                node_1_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+                                node_2_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+                                node_3_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
                         };
 			pic {
 			};
@@ -109,6 +109,46 @@
                                 node_2_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
                                 node_3_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
                         };
+            kbp {
+                /* distribute total of 4096 buffer id across cpus. required only for cpus sending requests.
+                 * note : KBP compare/search instructions must use even-numbered buffers. i.e. (buffer_id & 0x1 == 0) is True
+                 */
+                buffers-cpuid-offset-quantity = <  0    0   64
+                                                   1   64   64
+                                                   2  128   64
+                                                   3  192   64
+                                                   4  256   64
+                                                   5  320   64
+                                                   6  384   64
+                                                   7  448   64
+                                                   8  512   64
+                                                   9  576   64
+                                                  10  640   64
+                                                  11  704   64
+                                                  12  768   64
+                                                  13  832   64
+                                                  14  896   64
+                                                  15  960   64
+                                                  16 1024   64
+                                                  17 1088   64
+                                                  18 1152   64
+                                                  19 1216   64
+                                                  20 1280   64
+                                                  21 1344   64
+                                                  22 1408   64
+                                                  23 1472   64
+                                                  24 1536   64
+                                                  25 1600   64
+                                                  26 1664   64
+                                                  27 1728   64
+                                                  28 1792   64
+                                                  29 1856   64
+                                                  30 1920   64
+                                                  31 1984   64>;
+                /* starting address for KBP Driver Data. two 32-bit unsigned integers forms one 64-bit memory address.
+                 * kbp driver requires 2 MBytes of dedicated memory space to store data */
+                memory-offsethigh-offsetlow = <0x00000001 0x00000000>;
+            };
 		};
 
 		dom@2 {
diff --git a/arch/mips/boot/dts/xlp8xx-netos.dts b/arch/mips/boot/dts/xlp8xx-netos.dts
index 3f7a426..6aa1099 100644
--- a/arch/mips/boot/dts/xlp8xx-netos.dts
+++ b/arch/mips/boot/dts/xlp8xx-netos.dts
@@ -72,6 +72,46 @@
                                 node_2_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
                                 node_3_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
                         };
+            kbp {
+                /* distribute total of 4096 buffer id across cpus. required only for cpus sending requests.
+                 * note : KBP compare/search instructions must use even-numbered buffers. i.e. (buffer_id & 0x1 == 0) is True
+                 */
+                buffers-cpuid-offset-quantity = <  0    0   64
+                                                   1   64   64
+                                                   2  128   64
+                                                   3  192   64
+                                                   4  256   64
+                                                   5  320   64
+                                                   6  384   64
+                                                   7  448   64
+                                                   8  512   64
+                                                   9  576   64
+                                                  10  640   64
+                                                  11  704   64
+                                                  12  768   64
+                                                  13  832   64
+                                                  14  896   64
+                                                  15  960   64
+                                                  16 1024   64
+                                                  17 1088   64
+                                                  18 1152   64
+                                                  19 1216   64
+                                                  20 1280   64
+                                                  21 1344   64
+                                                  22 1408   64
+                                                  23 1472   64
+                                                  24 1536   64
+                                                  25 1600   64
+                                                  26 1664   64
+                                                  27 1728   64
+                                                  28 1792   64
+                                                  29 1856   64
+                                                  30 1920   64
+                                                  31 1984   64>;
+                /* starting address for KBP Driver Data. two 32-bit unsigned integers forms one 64-bit memory address.
+                 * kbp driver requires 2 MBytes of dedicated memory space to store data */
+                memory-offsethigh-offsetlow = <0x00000001 0x00000000>;
+            };
 		};
 	};
 
diff --git a/arch/mips/boot/dts/xlpev-helinux.dts b/arch/mips/boot/dts/xlpev-helinux.dts
index bd60825..dbcf648 100644
--- a/arch/mips/boot/dts/xlpev-helinux.dts
+++ b/arch/mips/boot/dts/xlpev-helinux.dts
@@ -29,10 +29,10 @@
 			cpu {
 				onlinemask = <0xffffffff>;
                                 nae-rx-vc = <1>;
-                                nae-fb-vc = <2>;
+                                nae-fb-vc = <1>;
 				sae-rx-vc = <1>; /* sharing with nae */
 				sae-rx-sync-vc = <3>; /* should be exclusive */
-                                napi-vc-mask = <0x6>;
+                                napi-vc-mask = <0x1>;
 
 			};
 			uart {
@@ -45,10 +45,10 @@
 					0xE0000000 0xC0000000>;  // 3GB @ 3.5GB
 			};
                         fmn {
-                                node_0_vc_mask = <0x66666666 0x66666666 0x66666666 0x66666666>;
-                                node_1_vc_mask = <0x66666666 0x66666666 0x66666666 0x66666666>;
-                                node_2_vc_mask = <0x66666666 0x66666666 0x66666666 0x66666666>;
-                                node_3_vc_mask = <0x66666666 0x66666666 0x66666666 0x66666666>;
+                                node_0_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+                                node_1_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+                                node_2_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
+                                node_3_vc_mask = <0x22222222 0x22222222 0x22222222 0x22222222>;
                         };
 			pic {
 			};
@@ -109,6 +109,47 @@
                                 node_2_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
                                 node_3_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
                         };
+            kbp {
+                /* distribute total of 4096 buffer id across cpus. required only for cpus sending requests.
+                 * note : KBP compare/search instructions must use even-numbered buffers. i.e. (buffer_id & 0x1 == 0) is True
+                 */
+                buffers-cpuid-offset-quantity = <  0    0   64
+                                                   1   64   64
+                                                   2  128   64
+                                                   3  192   64
+                                                   4  256   64
+                                                   5  320   64
+                                                   6  384   64
+                                                   7  448   64
+                                                   8  512   64
+                                                   9  576   64
+                                                  10  640   64
+                                                  11  704   64
+                                                  12  768   64
+                                                  13  832   64
+                                                  14  896   64
+                                                  15  960   64
+                                                  16 1024   64
+                                                  17 1088   64
+                                                  18 1152   64
+                                                  19 1216   64
+                                                  20 1280   64
+                                                  21 1344   64
+                                                  22 1408   64
+                                                  23 1472   64
+                                                  24 1536   64
+                                                  25 1600   64
+                                                  26 1664   64
+                                                  27 1728   64
+                                                  28 1792   64
+                                                  29 1856   64
+                                                  30 1920   64
+                                                  31 1984   64>;
+                /* starting address for KBP Driver Data. two 32-bit unsigned integers forms one 64-bit memory address.
+                 * kbp driver requires 2 MBytes of dedicated memory space to store data */
+                memory-offsethigh-offsetlow = <0x00000001 0xA0000000>;
+            };
+
 		};
 
 		dom@2 {
diff --git a/arch/mips/boot/dts/xlpev-netos.dts b/arch/mips/boot/dts/xlpev-netos.dts
index 3f7a426..1f0d8c6 100644
--- a/arch/mips/boot/dts/xlpev-netos.dts
+++ b/arch/mips/boot/dts/xlpev-netos.dts
@@ -1,4 +1,4 @@
-/* XLP8XX Device Tree Source 
+/* XLP8XX Device Tree Source
  *
  */
 
@@ -72,6 +72,46 @@
                                 node_2_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
                                 node_3_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
                         };
+            kbp {
+                /* distribute total of 4096 buffer id across cpus. required only for cpus sending requests.
+                 * note : KBP compare/search instructions must use even-numbered buffers. i.e. (buffer_id & 0x1 == 0) is True
+                 */
+                buffers-cpuid-offset-quantity = <  0    0   64
+                                                   1   64   64
+                                                   2  128   64
+                                                   3  192   64
+                                                   4  256   64
+                                                   5  320   64
+                                                   6  384   64
+                                                   7  448   64
+                                                   8  512   64
+                                                   9  576   64
+                                                  10  640   64
+                                                  11  704   64
+                                                  12  768   64
+                                                  13  832   64
+                                                  14  896   64
+                                                  15  960   64
+                                                  16 1024   64
+                                                  17 1088   64
+                                                  18 1152   64
+                                                  19 1216   64
+                                                  20 1280   64
+                                                  21 1344   64
+                                                  22 1408   64
+                                                  23 1472   64
+                                                  24 1536   64
+                                                  25 1600   64
+                                                  26 1664   64
+                                                  27 1728   64
+                                                  28 1792   64
+                                                  29 1856   64
+                                                  30 1920   64
+                                                  31 1984   64>;
+                /* starting address for KBP Driver Data. two 32-bit unsigned integers forms one 64-bit memory address.
+                 * kbp driver requires 2 MBytes of dedicated memory space to store data */
+                memory-offsethigh-offsetlow = <0x00000001 0x00000000>;
+            };
 		};
 	};
 
-- 
1.9.1

