From 2ec80b784f5d1845bd40fae59c75d0973937d5fc Mon Sep 17 00:00:00 2001
From: PUNYA BHEEMESH <bheemesh@broadcom.com>
Date: Thu, 4 Dec 2014 14:18:35 +0530
Subject: [PATCH 1044/1532] netlib: MAC filtering fix

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/netlib/include/export_sym.h |  1 -
 .../netlogic/lib/netlib/include/netsoc_haliface.h  |  1 -
 .../netlogic/lib/netlib/include/netsoc_libiface.h  |  7 -----
 arch/mips/netlogic/lib/netlib/include/netsoc_nae.h |  1 +
 arch/mips/netlogic/lib/netlib/src/netsoc_api.c     | 20 -------------
 arch/mips/netlogic/lib/netlib/src/netsoc_nae.c     | 35 +++++-----------------
 arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c    |  5 +++-
 7 files changed, 13 insertions(+), 57 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/include/export_sym.h b/arch/mips/netlogic/lib/netlib/include/export_sym.h
index 45c6326..da812b8 100644
--- a/arch/mips/netlogic/lib/netlib/include/export_sym.h
+++ b/arch/mips/netlogic/lib/netlib/include/export_sym.h
@@ -27,7 +27,6 @@ EXPORT_SYMBOL(netsoc_restart_ucore_using_fdt);
 EXPORT_SYMBOL(netsoc_modify_ucore_sram);
 EXPORT_SYMBOL(netsoc_read_ucore_sram);
 EXPORT_SYMBOL(netsoc_config_cpubypass);
-EXPORT_SYMBOL(netsoc_set_shcam_entry);
 EXPORT_SYMBOL(netsoc_write_ucore_shmem);
 EXPORT_SYMBOL(netsoc_prepad_enable);
 EXPORT_SYMBOL(netsoc_config_vfbid_table);
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
index 26f5f59..5501d1c 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
@@ -69,7 +69,6 @@ extern int __netsoc_restart_ucore_using_fdt(nae_t *nae, void *fdt);
 extern void __netsoc_modify_nae_ucore_sram_mem(nae_t *nae, unsigned int *data, uint32_t off, uint32_t words);
 extern void __netsoc_read_nae_ucore_sram_mem(nae_t *nae, unsigned int *data, uint32_t off, uint32_t words);
 extern int __netsoc_write_ucore_shared_mem(nae_t *nae, unsigned int *data, uint32_t words);
-extern int __netsoc_set_shcam_entry(nae_t *nae, uint32_t index, uint16_t *data);
 extern void __netsoc_init_ingress(nae_t *nae, uint32_t desc_size);
 extern int __netsoc_config_vfbid_table(nae_t *nae, uint32_t start, uint32_t num_entries, uint32_t *vfbid_tbl);
 extern int __netsoc_drain_frin_fifo_descs(nae_t *nae, uint32_t frin_q);
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
index a9e868a..0c56dcf 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
@@ -300,12 +300,6 @@ static inline void netsoc_api_writeq(uint64_t base, uint32_t index, uint64_t val
 #define netsoc_write_ucode(base, ucore, offset, val) \
   nlh_write_cfg_reg32((base + 0x10000 + (ucore * CODE_SIZE_PER_UCORE) + offset), (val))
 
-#define netsoc_write_shcam(base, offset, val) \
-  nlh_write_cfg_reg16((base + 0x18000 + offset), (val))
-
-#define netsoc_read_shcam(base, offset) \
-  nlh_read_cfg_reg16((base + 0x18000 + offset))
-
 #define netsoc_read_ucode(base, ucore, offset) \
   nlh_read_cfg_reg32((base + 0x10000 + (ucore * CODE_SIZE_PER_UCORE) + offset))
 
@@ -531,7 +525,6 @@ extern int netsoc_get_total_frinq(nae_t *nae);
 extern int netsoc_config_vfbid_table(nae_t *nae, uint32_t start, uint32_t num_entries, uint32_t *vdbid_table);
 extern int netsoc_init_ingress(nae_t *nae, uint32_t desc_size);
 extern int netsoc_prepad_enable(nae_t *nae, uint32_t size);
-extern int netsoc_set_shcam_entry(nae_t *nae, uint32_t index, uint16_t *data);
 extern int netsoc_write_ucore_shmem(nae_t *nae, uint32_t *data, uint32_t words);
 extern void netsoc_read_ucore_sram(nae_t *nae, uint32_t *data,uint32_t off, uint32_t words);
 extern void netsoc_modify_ucore_sram(nae_t *nae, uint32_t *data,uint32_t off, uint32_t words);
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
index 66369f6..b6b276e 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
@@ -44,6 +44,7 @@
 #define NAE_RX_CLASS_VALID		1
 #define MIN_VALID_CLASS_INDX		0
 #define MAX_VALID_CLASS_INDX		1
+//#define MAC_FILTERING
 
 extern struct netsoc_info *current_netsoc;
 
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
index dd547f8..3bfd666 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
@@ -621,26 +621,6 @@ void netsoc_config_cpubypass(nae_t *nae, uint32_t vfbid_base)
 }
 
 /**
-* @brief netsoc_set_shcam_entry function is used to update the UCORE CAM
-* 
-* @param [in] nae pointer to nae_t
-* @param [in] index into ucore
-* @param [in] data Pointer to 16 bit data  
-*
-* @return
-*       - NETSOC_API_SUCCESS on success
-*       - < 0 on error
-* 
-* @ingroup hal_nae
-*
-*/
-
-int netsoc_set_shcam_entry(nae_t *nae, uint32_t index, uint16_t *data)
-{
-        return __netsoc_set_shcam_entry(nae, index, data);
-}
-
-/**
 * @brief netsoc_write_ucore_shmem function is used to update the scratch pad
 * 
 * @param [in] nae pointer to nae_t
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index 45882f8..29e884e 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -43,7 +43,6 @@ module_param(cl45_div, int, 0);
 #endif
 
 
-
 static unsigned int ucore_shared_scratch[NLM_MAX_NODES][XLP9XX_MAX_NAE_PERNODE][256];
 static unsigned int ucore_shared_scratch_words[NLM_MAX_NODES][XLP9XX_MAX_NAE_PERNODE];
 extern net_port_t **cntx2netport[NLM_MAX_NODES][MAX_POE_BLOCKS];
@@ -473,29 +472,6 @@ int __netsoc_load_ucore(nae_t *nae, int ucore_mask, unsigned int *opcodes, int n
 	return NETSOC_API_SUCCESS;
 }
 
-int __netsoc_set_shcam_entry(nae_t *nae, uint32_t index, uint16_t *data)
-{
-	uint32_t entry_size = 2;
-	int i,j;
-
-	if(SHCAM_FOLD_CFG >= 384){
-		entry_size *= SHCAM_NUM_FOLDS;
-	} else if(SHCAM_FOLD_CFG == 256){
-		entry_size *= 6;
-	} else{
-		entry_size *= 8;
-	}
-	if(SHCAM_MAX_16_DATA_UNITS_PER_ENTRY != (entry_size/2))
-		return -1;
-
-	j=0;
-	for(i=SHCAM_MAX_16_DATA_UNITS_PER_ENTRY-1; i >= 0; i--){
-		netsoc_write_shcam(nae->mac_base, (((i * SHCAM_FOLD_CFG) + index)*2), data[j]);
-		j++;
-	}
-	return NETSOC_API_SUCCESS;
-}
-
 int __netsoc_write_ucore_shared_mem(nae_t *nae, unsigned int *data, uint32_t words)
 {
 	uint32_t i = 0, node, nae_id;
@@ -550,17 +526,18 @@ int __netsoc_reset_and_load_ucore(nae_t *nae, uint32_t ucore_mask, unsigned int
 		ucore_cfg &= (~VAL_UCORE_RESET(ucore_mask));
 		ucore_cfg |= (1<<7);
 
-#ifdef MAC_FILTERING	
+#ifdef MAC_FILTERING		
 		if(SHCAM_FOLD_CFG >= 384){
 			shift = (SHCAM_NUM_FOLDS)-1;
 		} else if(SHCAM_FOLD_CFG == 256){
-			shift = 4;;
+			shift = 4;
 		} else{
 			shift = 5;
 		}
 
 		ucore_cfg |= (1<<shift);
 #endif
+
 		if (!is_nlm_xlp8xx_ax())
 			ucore_cfg |= (1<<28);
 
@@ -570,10 +547,14 @@ int __netsoc_reset_and_load_ucore(nae_t *nae, uint32_t ucore_mask, unsigned int
 		else {
 			netsoc_write_nae_reg(nae->nae_base, RX_UCORE_CFG, ucore_cfg | (1 << 24));
 		}
-#ifdef MAC_FILTERING
+
+#ifdef MAC_FILTERING		
 		netsoc_write_nae_reg(nae->nae_base, RX_UCORE_CAM_MASK0_CFG, 0xffffffff);
 		netsoc_write_nae_reg(nae->nae_base, RX_UCORE_CAM_MASK1_CFG, 0xffffffff);
+		netsoc_write_nae_reg(nae->nae_base, RX_UCORE_CAM_MASK2_CFG, 0xffffffff);
+		netsoc_write_nae_reg(nae->nae_base, RX_UCORE_CAM_MASK3_CFG, 0xffffffff);
 #endif
+
 		netsoc_api_print(NETSOC_APIDBG_DEFAULT, "Ucore Reset Complete\n");
 	}
 	netsoc_api_print(NETSOC_APIDBG_DEFAULT, "Loading ucores (mask = 0x%04x)\n", mask);
diff --git a/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c b/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c
index 790f423..a46b607 100644
--- a/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c
@@ -1523,7 +1523,10 @@ static int local_load_ucore(int node, int ucore_mask, unsigned int *opcodes, int
 	ucore_cfg = ucore_cfg | (VAL_UCORE_RESET(ucore_mask));
         nlm_hal_write_nae_reg(node, RX_UCORE_CFG, ucore_cfg);
 
-	/* write zero to reset bits to pull them out of reset */
+	/* Enable CAM 384 * 64 entries */
+	nlm_hal_write_nae_reg(node, RX_UCORE_CFG, ucore_cfg);
+
+		/* write zero to reset bits to pull them out of reset */
 	ucore_cfg = ucore_cfg & (~VAL_UCORE_RESET(ucore_mask)) & ~(1 << 24);
         nlm_hal_write_nae_reg(node, RX_UCORE_CFG, ucore_cfg);
 
-- 
1.9.1

