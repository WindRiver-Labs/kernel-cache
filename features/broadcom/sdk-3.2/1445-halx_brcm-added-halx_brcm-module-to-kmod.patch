From 78efec7c90f45b1adcdb5743f573aeaf5de1141f Mon Sep 17 00:00:00 2001
From: Virendra Pathak <vpathak@broadcom.com>
Date: Sun, 25 May 2014 18:09:09 +0530
Subject: [PATCH 1445/1532] halx_brcm: added halx_brcm module to kmod

- Earlier halx_brcm module was part of halx repo itself
- moving here as per the standard convention
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/xlpge.h      | 10 +-----
 drivers/net/ethernet/broadcom/nae/xlpge_init.h | 50 ++++++++++++++++++++++++++
 drivers/net/ethernet/broadcom/nae/xlpge_nae.c  |  6 ++--
 3 files changed, 54 insertions(+), 12 deletions(-)
 create mode 100644 drivers/net/ethernet/broadcom/nae/xlpge_init.h

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge.h b/drivers/net/ethernet/broadcom/nae/xlpge.h
index e80e75c..b23d579 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge.h
+++ b/drivers/net/ethernet/broadcom/nae/xlpge.h
@@ -39,6 +39,7 @@
 #include "nlm_nae.h"
 #include "ext_phy.h"
 #include "nlm_msgring.h"
+#include "xlpge_init.h"
 
 #define	XLP_SOC_MAC_DRIVER		"mac-xlp"
 #define DRV_VERSION			"0.2"
@@ -71,7 +72,6 @@
 #define	RX_PPAD_SZ			3
 #endif
 
-extern int num_cpus_per_node;
 
 /* TODO XXX: default enable prepad */
 #ifdef CONFIG_NLM_ENABLE_LOAD_BALANCING
@@ -88,10 +88,6 @@ extern int num_cpus_per_node;
 #define MSG_DST_FC_FAIL			0x01
 #define	MSG_INFLIGHT_MSG_EX		0x02
 #define	MSG_TXQ_FULL			0x04
-#define	NLM_TCP_MODE			1
-#define	NLM_RT_MODE			2
-#define	NLM_TCP_LOAD_BALANCE_MODE	4
-#define NLM_PORT_FIFO_EN		8 // can co-exist with any of the above 3 modes 
 #define	TSO_ENABLED			1
 #define	R_TX_CONTROL			0x0a0
 #define	TX_PACKET_COUNTER		0x39
@@ -522,7 +518,6 @@ static inline int mac_refill_frin_one_buffer(struct net_device *dev, int cpu,
 
 void nlm_xlp_nae_init(void);
 void nlm_xlp_nae_remove(void);
-extern int xlpge_eeprom_init(void);
 void init_phy_state_timer(void *);
 inline void process_tx_complete(int , uint32_t , uint64_t);
 struct eeprom_data * get_nlm_eeprom(void);
@@ -539,12 +534,10 @@ cycle_t nlm_1588_read_clock0(const struct cyclecounter *);
 cycle_t nlm_1588_read_clock1(const struct cyclecounter *);
 cycle_t nlm_1588_read_clock2(const struct cyclecounter *);
 cycle_t nlm_1588_read_clock3(const struct cyclecounter *);
-void gen_mac_address(void);
 int xlp_mac_proc_read(char *, char **, off_t , int , int *, void *);
 int nae_proc_read(char *, char **, off_t , int , int *, void *);
 int nlm_xlp_disable_napi(void);
 void nlm_spawn_kthread(void);
-int nlm_xlp_enable_napi(void);
 //int mac_refill_frin_skb(nae_t* , int , uint64_t , uint32_t, int);
 //int mac_refill_frin_one_buffer(struct net_device *, int , uint32_t);
 void nlm_xlp_mac_set_enable(struct dev_data *priv, int flag);
@@ -575,7 +568,6 @@ extern uint32_t nae_rx_vc;
 extern uint32_t nae_fb_vc;
 extern int exclusive_vc;
 extern int enable_napi;
-extern int perf_mode;
 extern uint64_t nlm_mode[];
 extern int nlm_prepad_len;
 extern int load_balance_timer_run;
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_init.h b/drivers/net/ethernet/broadcom/nae/xlpge_init.h
new file mode 100644
index 0000000..29241d8
--- /dev/null
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_init.h
@@ -0,0 +1,50 @@
+/*-
+ * Copyright (c) 2003-2014 Broadcom Corporation
+ * All Rights Reserved
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY BROADCOM ``AS IS'' AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL BROADCOM OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+ * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+ * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * #BRCM_2# */
+
+#ifndef _XLPGE_INIT_H
+#define _XLPGE_INIT_H
+
+#define	NLM_TCP_MODE			1
+#define	NLM_RT_MODE			2
+#define	NLM_TCP_LOAD_BALANCE_MODE	4
+#define NLM_PORT_FIFO_EN		8 /*can co-exist with any of the above 3 modes */
+
+extern int perf_mode;
+extern int num_cpus_per_node;
+
+extern int get_num_cpus_per_node(void);
+extern int replenish_freein_fifos(void);
+extern int nlm_xlp_enable_napi(void);
+extern void gen_mac_address(void);
+extern int xlpge_eeprom_init(void);
+extern int nlm_per_port_nae_init(nae_t* nae_cfg, int port, int maxnae);
+extern int initialize_nae_per_node(nae_t * nae_cfg, uint32_t *phys_cpu_map,
+                                int mode, int *jumbo_enabled);
+
+#endif
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index 79e1205..8ae33a3 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -382,7 +382,7 @@ err_exit:
 	return err;
 }
 
-static int initialize_nae_per_node(nae_t * nae_cfg, uint32_t *phys_cpu_map, int mode,
+int initialize_nae_per_node(nae_t * nae_cfg, uint32_t *phys_cpu_map, int mode,
 				   int *jumbo_enabled)
 {
 	int i, len, rv = -1, node;
@@ -1408,7 +1408,7 @@ static const struct net_device_ops nlm_xlp_nae_ops = {
 	.ndo_select_queue		= nlm_select_queue,
 };
 
-static int nlm_per_port_nae_init(nae_t* nae_cfg, int port, int maxnae)
+int nlm_per_port_nae_init(nae_t* nae_cfg, int port, int maxnae)
 {
 	struct net_device *dev;
 	struct dev_data *priv;
@@ -1495,7 +1495,7 @@ static int nlm_per_port_nae_init(nae_t* nae_cfg, int port, int maxnae)
 	return 0;
 }
 
-static inline int get_num_cpus_per_node(void)
+int get_num_cpus_per_node(void)
 {
 
 	if (is_nlm_xlp9xx())
-- 
1.9.1

