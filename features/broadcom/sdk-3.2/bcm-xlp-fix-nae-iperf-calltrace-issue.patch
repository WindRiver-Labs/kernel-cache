From 41400d31821d42e2cee6df43c21ae98b399c117d Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Mon, 20 Apr 2015 22:58:08 +0800
Subject: [PATCH] bcm-xlp: fix nae iperf calltrace issue

The global variable p2p_desc_mem[cpu] are accessed by the functions
"alloc_p2p_desc_mem" and "free_p2p_desc_mem". When write to
p2p_desc_mem[cpu].mem, this should be atomic. So add a lock to prevent
it from race confition. Else we would get the below calltrace:

CPU 0 Unable to handle kernel paging request at virtual address 1fc5f207f639a0ce, epc == ffffffffc076e06c, ra == ffffffffc08fe1a4
Oops[#1]:
CPU: 0 PID: 3 Comm: ksoftirqd/0 Tainted: G W 3.10.62-ltsi-rt55-WR6.0.0.0_preempt-rt #1
task: c0000007e1721180 ti: c0000007e17b0000 task.ti: c0000007e17b0000
$ 0 : 0000000000000000 ffffffffc08fe1a4 ffffffffc0cb1d20 0000000000000000
$ 4 : ffffffffc0cb1d20 0000000000000020 0000000000000000 000000000000000f
$ 8 : c0000007f5ae5800 0000000000000004 c0000007f5ae58dc 00000017dfe5ac00
$12 : c0000007e17bf500 ffffffffc06876ac 0000000000000000 0000000000000000
$16 : c0000007f52c2fc0 0000000000000000 1fc5f207f639a0ce 0000000000000000
$20 : c0000007e51dc000 c0000007f5ae5ec0 c0000007e9dc0000 0000000000000000
$24 : 0000000000000000 ffffffffc09446e0
$28 : c0000007e17b0000 c0000007e17bf438 c0000007e17bf438 ffffffffc08fe1a4
Hi : 0000000000000000
Lo : 13d16ddbe1664800
epc : ffffffffc076e06c nlm_xlp_nae_start_xmit+0x3bc/0xfc0
    Tainted: G W
ra : ffffffffc08fe1a4 dev_hard_start_xmit+0x34c/0x6a0
Status: 5400f8e3 KX SX UX KERNEL EXL IE
Cause : 00800008
BadVA : 1fc5f207f639a0ce
PrId : 000c1501 (Broadcom XLPII)
Modules linked in:
Process ksoftirqd/0 (pid: 3, threadinfo=c0000007e17b0000, task=c0000007e1721180, tls=0000000000000000)
Stack : 0000000000000a3f ffffffffc02eee40 c0000007e17bf688 c0000007e17bf458
      0000000000000000 0000000000000001 d700722c26f93242 e00005a800000000
      0000000000000000 0000000000000000 0000000000000004 0000000000000000
      0000000000000000 ffffffffc0d3a558 0000000000211220 c000000043e01298
      0000000000000002 c0000007e9dc0000 0000000000000000 000000000000551a
      c0000007f52c2fc0 c0000007e53e0000 ffffffffc0ada3c8 c0000007ecf60860
      c0000007e17bf508 ffffffffc08fe1a4 c0000007e9dc0000 000000000000000e
      c0000007f52c2fc0 ffffffffc0f31d78 ffffffffc0d3a558 c0000007e9dc0000
      c0000007e53e0000 0000000000000000 fffffffffffffff0 c0000007ecf60860
      c0000007e17bf568 ffffffffc08fe8d8 c0000007f3012400 000000000000000e
      ...
Call Trace:
[<ffffffffc076e06c>] nlm_xlp_nae_start_xmit+0x3bc/0xfc0
[<ffffffffc08fe1a4>] dev_hard_start_xmit+0x34c/0x6a0
[<ffffffffc08fe8d8>] dev_queue_xmit+0x3e0/0x5e0
[<ffffffffc0942aec>] ip_finish_output+0x294/0x558
[<ffffffffc0944140>] ip_queue_xmit+0x160/0x3e0
[<ffffffffc095f87c>] tcp_transmit_skb+0x49c/0x8e0
[<ffffffffc095feb8>] tcp_write_xmit+0x1f8/0xba8
[<ffffffffc0960c28>] __tcp_push_pending_frames+0x48/0xc8
[<ffffffffc095c084>] tcp_rcv_established+0x51c/0x740
[<ffffffffc09662c8>] tcp_v4_do_rcv+0x1b8/0x458
[<ffffffffc096968c>] tcp_v4_rcv+0x8cc/0x8d8
[<ffffffffc093d15c>] ip_local_deliver_finish+0x13c/0x350
[<ffffffffc08face8>] __netif_receive_skb_core+0x2e8/0x898
[<ffffffffc08fb394>] netif_receive_skb+0x4c/0xf0
[<ffffffffc0769df8>] nlm_xlp_nae_msgring_handler+0x430/0x1150
[<ffffffffc070badc>] xlp_fmn_poll+0x26c/0x368
[<ffffffffc08fcc50>] net_rx_action+0x168/0x2d8
[<ffffffffc02bd87c>] do_current_softirqs+0x24c/0x408
[<ffffffffc02bde1c>] run_ksoftirqd+0x44/0x80
[<ffffffffc02eee40>] smpboot_thread_fn+0x280/0x320
[<ffffffffc02e352c>] kthread+0xbc/0xc8
[<ffffffffc028286c>] ret_from_kernel_thread+0x14/0x1c

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/xlpge.h     |    1 +
 drivers/net/ethernet/broadcom/nae/xlpge_nae.c |    1 +
 drivers/net/ethernet/broadcom/nae/xlpge_tso.h |   10 ++++++++--
 3 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge.h b/drivers/net/ethernet/broadcom/nae/xlpge.h
index a201d7d..f9cb95c 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge.h
+++ b/drivers/net/ethernet/broadcom/nae/xlpge.h
@@ -351,6 +351,7 @@ struct p2p_desc_mem {
 	void *mem;
 	uint64_t dsize;
 	uint64_t pad[6];
+	spinlock_t p2p_lock;
 };
 
 
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index d72429b..64e86bb 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -972,6 +972,7 @@ static int p2p_desc_mem_init(void)
 			return -ENOMEM;
 
 		p2p_desc_mem[cpu].mem = buf;
+		spin_lock_init(&p2p_desc_mem[cpu].p2p_lock);
 		for (cnt = 1; cnt < MAX_TSO_SKB_PEND_REQS; cnt++) {
 			*(ulong *)buf = (ulong)(buf + dsize);
 			buf += dsize;
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_tso.h b/drivers/net/ethernet/broadcom/nae/xlpge_tso.h
index 04c711f..473bf1d 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_tso.h
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_tso.h
@@ -93,11 +93,15 @@ static __inline__ uint64_t nae_tso_desc1(
 static inline void *alloc_p2p_desc_mem(int cpu)
 {
 	void *buf;
+	unsigned long flag;
 
+	spin_lock_irqsave(&p2p_desc_mem[cpu].p2p_lock, flag);
 	buf = p2p_desc_mem[cpu].mem;
-	if (buf)
+	if (buf) {
 		p2p_desc_mem[cpu].mem = (void *)*(ulong *)(buf);
-	else {
+		spin_unlock_irqrestore(&p2p_desc_mem[cpu].p2p_lock, flag);
+	} else {
+		spin_unlock_irqrestore(&p2p_desc_mem[cpu].p2p_lock, flag);
 		buf = cacheline_aligned_kmalloc(p2p_desc_mem[cpu].dsize,
 			GFP_ATOMIC);
 		p2p_dynamic_alloc_cnt[CPU_INDEX(cpu)]++;
@@ -124,8 +128,10 @@ static inline void free_p2p_desc_mem(int cpu, void *buf)
 	 */ 
 
 	if(hcpu == hard_smp_processor_id()) {
+		spin_lock(&p2p_desc_mem[cpu].p2p_lock);
 		*(ulong *)buf = (ulong)p2p_desc_mem[cpu].mem;
 		p2p_desc_mem[cpu].mem = buf;
+		spin_unlock(&p2p_desc_mem[cpu].p2p_lock);
 	} else {
 		node = nlm_cpuid_to_node(hcpu);
 		/* TBD: Change this 1024 to macro */
-- 
1.7.5.4

