From ebedb3a6e7cd4633dd669a235512a4a74ba481c7 Mon Sep 17 00:00:00 2001
From: henry shao <hshao@netlogicmicro.com>
Date: Tue, 17 Aug 2010 23:58:18 -0700
Subject: [PATCH 1282/1532] NAE: misc fixes to xlp_nae.c

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/xlp_nae.c | 13 ++++++-------
 1 file changed, 6 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/xlp_nae.c b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
index 8cf2d84..27c3bd9 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
@@ -65,6 +65,7 @@
 #define MAX_NUM_UARTS			2
 #define FREE_DEFAULT_SIZE		256
 #define NUM_FREE_DESC			18
+#define FREE_DESC_POOL_WIDTH		20
 #define NUM_FREEIN_QUEUE		18
 #define MIN_FRIN_DESC_THRESHD		10
 #define MAX_NET_INF             	18
@@ -209,9 +210,7 @@ static __inline__ void *cacheline_aligned_kmalloc(int size, int gfp_mask)
 {
         void *buf = kmalloc(size + CACHELINE_SIZE, gfp_mask);
         if (buf)
-                buf =
-                        (void
-                         *)(CACHELINE_ALIGNED_ADDR((unsigned long)buf +
+                buf =(void*)(CACHELINE_ALIGNED_ADDR((unsigned long)buf +
                                                    CACHELINE_SIZE));
         return buf;
 }
@@ -504,8 +503,8 @@ static void nlm_xlp_nae_init(void)
 		dev->dev_addr = eth_hw_addr[i];
 		tp->port	= i;
 		tp->inited	= 0;
-		tp->block 	=(i&0xff)>>2;
-		tp->index 	= i&0x3;
+		tp->block 	=(i & 0xff) >> 2;
+		tp->index 	= i & 0x3;
 		tp->nae_tx_qid 	= XLP_NET_TX_VC_BASE+i;
 		tp->nae_rx_qid 	= XLP_NET_RX_VC_BASE+i;
 		register_netdev(dev);
@@ -527,7 +526,7 @@ static void nlm_xlp_nae_init(void)
 	}
 	/*config free fifo context mapping*/
 	spin_lock_irq(&nlm_xlp_nae_lock);
-	for(i = 0; i < 20; i++)
+	for(i = 0; i < FREE_DESC_POOL_WIDTH; i++)
 	{
 		val = nlm_hal_read_nae_reg(FREE_IN_FIFO_CFG );
 
@@ -1160,7 +1159,7 @@ static void nlm_xlp_nae_msgring_handler(uint32_t vc, uint32_t src_id,
 		}
 		skb = mac_get_skb_back_ptr(vaddr);
 		if (skb) {
-#if 1
+#if 1  /* fix for ip header not alligned to 4 bytes boundry problem */
 			{
 			struct sk_buff *myskb = __dev_alloc_skb(NLM_RX_BUF_SIZE, GFP_KERNEL);
 			unsigned long offset;
-- 
1.9.1

