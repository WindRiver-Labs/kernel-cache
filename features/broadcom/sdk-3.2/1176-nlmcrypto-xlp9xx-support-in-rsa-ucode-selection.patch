From cb199636e758d09de81346cf84be79d213239611 Mon Sep 17 00:00:00 2001
From: Hareesh R <hareeshr@broadcom.com>
Date: Fri, 23 Aug 2013 01:18:27 -0700
Subject: [PATCH 1176/1532] nlmcrypto: xlp9xx support in rsa ucode selection

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/nlmcrypto/init.c | 26 ++++++++++++++++++++------
 1 file changed, 20 insertions(+), 6 deletions(-)

diff --git a/drivers/misc/netlogic/nlmcrypto/init.c b/drivers/misc/netlogic/nlmcrypto/init.c
index 635d91b..f7f0beb 100644
--- a/drivers/misc/netlogic/nlmcrypto/init.c
+++ b/drivers/misc/netlogic/nlmcrypto/init.c
@@ -35,7 +35,9 @@
 #define NR_VCS_PER_THREAD 4
 #endif
 
-
+/* applicable only for xlp9xx */
+int rsa_data_fmt_is_ssl = 1;
+module_param(rsa_data_fmt_is_ssl, int, 0);
 
 static volatile int resp = 0;
 extern int register_xlp_msgring_handler(int major,
@@ -85,7 +87,10 @@ int rsa_init(struct nlm_rsa_init_param *p)
 	int i;
 #endif
 
-	size = sizeof(rsasoc_gen1_ucode_data);
+	if(is_nlm_xlp9xx())
+		size = sizeof(rsasoc_gen2_ucode_data);
+	else
+		size = sizeof(rsasoc_gen1_ucode_data);
 	src_org = kmalloc(size + XLP_CACHELINE_SIZE, GFP_KERNEL);
 	if(!src_org) {
 		printk("Error, mem allocation failed\n");
@@ -106,10 +111,16 @@ int rsa_init(struct nlm_rsa_init_param *p)
 	
 #ifdef __MIPSEL__
 	for(i = 0; i < (size / sizeof(uint64_t)); i++) {
-		nlm_rsa_ucode_data[i] = ccpu_to_be64(nlm_rsa_ucode_data[i]);
+		if(is_nlm_xlp9xx())
+			rsasoc_gen2_ucode_data[i] = ccpu_to_be64(rsasoc_gen2_ucode_data[i]);
+		else
+			rsasoc_gen1_ucode_data[i] = ccpu_to_be64(rsasoc_gen1_ucode_data[i]);
 	}
 #endif
-	memcpy(src, (unsigned char*)rsasoc_gen1_ucode_data, size);
+	if(is_nlm_xlp9xx())
+		memcpy(src, (unsigned char*)rsasoc_gen2_ucode_data, size);
+	else
+		memcpy(src, (unsigned char*)rsasoc_gen1_ucode_data, size);
 	rx_vc = sae_rx_vc >= 0 ? sae_rx_vc : sae_rx_sync_vc;
 
 	printk("%s sae_rx_vc = %d sae_rx_sync_vc %d\n",__FUNCTION__, 
@@ -198,9 +209,12 @@ cont_recv:
 
 	printk("Downloading ucore data to rsa/ecc engine is done..\n");
 
-	/* configuring the internal scheduler by allocating all statations to all vcs */
+	/* configuring the internal scheduler by allocating all statations to all vcs 
+	*  TODO */
 	//nlm_hal_set_rsa_freq(p->node, p->freq);
-	nlm_hal_set_rsa_engine_sel(p->node);
+	//nlm_hal_set_rsa_engine_sel(p->node);
+	if ((is_nlm_xlp9xx()) && rsa_data_fmt_is_ssl)
+		nlm_hal_set_rsa_data_mode(p->node, 0);
 
 err_exit:
 	if(src_org)
-- 
1.9.1

