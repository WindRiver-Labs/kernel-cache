From 8ec7477af6622787bf281f7aa7a05a0f1b149a35 Mon Sep 17 00:00:00 2001
From: reshmic <reshmic@rmi11-india.(none)>
Date: Wed, 29 Jun 2011 14:54:29 +0530
Subject: [PATCH 0244/1532] libsrtp support

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/boot/dts/netos-srtp.dts |  80 ++++++++++++++++
 arch/mips/boot/dts/srtp-nae.dts   | 195 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 275 insertions(+)
 create mode 100644 arch/mips/boot/dts/netos-srtp.dts
 create mode 100644 arch/mips/boot/dts/srtp-nae.dts

diff --git a/arch/mips/boot/dts/netos-srtp.dts b/arch/mips/boot/dts/netos-srtp.dts
new file mode 100644
index 0000000..9f45794
--- /dev/null
+++ b/arch/mips/boot/dts/netos-srtp.dts
@@ -0,0 +1,80 @@
+/* XLP8XX Device Tree Source 
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "MIPS,XLP8XX";
+	compatible = "NETL,XLP8XX_A0";
+
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <1>;
+		bootargs = "dom0_loadaddr=0x72000000 dom0_cpumask=0x0f -- ";
+		domain_heap = <0x50000000 0x20000000>;
+	};
+
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "netos";
+
+			heap-size = <0x0 0x8000000>; // 128M for SRTP app
+			shared-mem = <0x0 0xe0000000 0x0 0x10000000>; // 128M @ 3.5GB
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			app-bootcmd = "smpload";
+			app-loadaddr = "0xf0000000"; // 3.75GB
+
+			kernel {
+				/* Kernel Memory allocated from xen domain-heap */
+				size = <0x02000000>;  // 32M
+
+				/* Location in Dom0 ramdisk */
+				location = "/tmp/xen/netos.elf";
+
+				/* Domain destroy currently doesn't work with hyperexec */
+				dom_destroy_hack = <0>;
+			};
+
+			cpu {
+				onlinemask = <0xffffffff>;
+                                nae-rx-vc = <0>;
+                                nae-fb-vc = <3>;
+
+                                /* Setting this to '1' makes NAE driver to skip buf alloction and initial
+                                   sending of packet buffers*/
+                                nae-buf-alloc-by-app = <1>; 
+			};
+			uart {
+				id = <0>;
+			};
+			memory {
+				reg = <0x20000000 0xa0000000>;  // 2560M @ 512M
+			};
+
+			/* In hyperexec-linux mode, vc_mask needs to be synchronized with linux fmn node! */
+                        fmn {
+                                node_0_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
+                                node_1_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
+                                node_2_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
+                                node_3_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
+                        };
+		};
+	};
+
+	chosen {
+		bootargs = " xlp_noi2c console=ttyS0,115200 rdinit=/sbin/init";
+	};
+
+	soc {
+
+	};
+};
diff --git a/arch/mips/boot/dts/srtp-nae.dts b/arch/mips/boot/dts/srtp-nae.dts
new file mode 100644
index 0000000..0257038
--- /dev/null
+++ b/arch/mips/boot/dts/srtp-nae.dts
@@ -0,0 +1,195 @@
+/* XLP8XX Device Tree Source 
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-map = <
+			0  1    1 5     2 9     3 13
+			4  17   5 21    6 25    7 29
+			8  33   9 37    10 41   11 45
+			12 49   13 53   14 57   15 61
+			16 65   17 69   18 73   19 77
+			20 81   21 85   22 89   23 93
+			24 97   25 101  26 105  27 109
+			28 113  29 117  30 121  31 125
+
+			// NAE -> NAE mapping
+			32 1000 33 1001 34 1002 35 1003
+			36 1004 37 1005 38 1006 39 1007
+			40 1008 41 1009 42 1010 43 1011
+			44 1012 45 1013 46 1014 47 1015
+			48 1016 49 1017 50 1018 51 1019
+
+			// NULL FBID Should map to cpu0 to detect NAE send message errors
+			127 0
+                >;
+
+        // FLOW Table Generation: CRC16 polynomial
+  	flow_crc_poly = <0xffff>;
+
+	ucore {
+		src@1 {
+			file = "srtp-ucore.c";
+			mask = <0xffff>;
+		};
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		// Supported modes are 'enque', 'serial', 'bypass'
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+		distribution_vectors {
+				     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+				     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+				     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+		};
+
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		loopback_mode = <0>;
+
+		// Max ingress fifo size 256 units (size of one unit is 64 byte)
+		iface_fifo_sizes = <55>;
+
+		// Max parser sequence fifo size 1024 packets 
+		// (if 1588 Timestamp is not required, then max size increases to 2048)
+		parser_sequence_fifo_sizes = <225>;
+
+		// Since rx_buffer is per context, we can have a few different ways
+		//  to populate the operand
+		num_channels = <1>;
+		rx_buffer_sizes = <944>;
+
+		// Max available descriptors are 1024  (across all complexes).
+		// Per port num_free_descriptors must be even number
+		num_free_descs = <150>;
+		free_desc_sizes = <2048>;
+		ucore_mask = <0xffff>;
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		loopback_mode = <0>;
+
+		// Max ingress fifo size 256 units (size of one unit is 64 byte)
+		iface_fifo_sizes = <55>;
+
+		// Max parser sequence fifo size 1024 packets 
+		// (if 1588 Timestamp is not required, then max size increases to 2048)
+		parser_sequence_fifo_sizes = <225>;
+
+		// Since rx_buffer is per context, we can have a few different ways
+		//  to populate the operand
+		num_channels = <1>;
+		rx_buffer_sizes = <944>;
+
+		// Max available descriptors are 1024  (across all complexes).
+		// Per port num_free_descriptors must be even number
+		num_free_descs = <150>;
+		free_desc_sizes = <2048>;
+		ucore_mask = <0xffff>;
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		loopback_mode = <0>;
+
+		// Max ingress fifo size 256 units (size of one unit is 64 byte)
+		iface_fifo_sizes = <55>;
+
+		// Max parser sequence fifo size 1024 packets 
+		// (if 1588 Timestamp is not required, then max size increases to 2048)
+		parser_sequence_fifo_sizes = <225>;
+
+		// Since rx_buffer is per context, we can have a few different ways
+		//  to populate the operand
+		num_channels = <1>;
+		rx_buffer_sizes = <944>;
+
+		// Max available descriptors are 1024  (across all complexes).
+		// Per port num_free_descriptors must be even number
+		num_free_descs = <150>;
+		free_desc_sizes = <2048>;
+		ucore_mask = <0xffff>;
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		loopback_mode = <0>;
+
+		// Max ingress fifo size 256 units (size of one unit is 64 byte)
+		iface_fifo_sizes = <55>;
+
+		// Max parser sequence fifo size 1024 packets 
+		// (if 1588 Timestamp is not required, then max size increases to 2048)
+		parser_sequence_fifo_sizes = <225>;
+
+		// Since rx_buffer is per context, we can have a few different ways
+		//  to populate the operand
+		num_channels = <1>;
+		rx_buffer_sizes = <944>;
+
+		// Max available descriptors are 1024  (across all complexes).
+		// Per port num_free_descriptors must be even number
+		num_free_descs = <150>;
+		free_desc_sizes = <2048>;
+		ucore_mask = <0xffff>;
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		loopback_mode = <0 0>;
+
+		// Max ingress fifo size 256 units (size of one unit is 64 byte)
+		iface_fifo_sizes = <13 13>;
+
+		// Max parser sequence fifo size 1024 packets 
+		// (if 1588 Timestamp is not required, then max size increases to 2048)
+		num_channels = <1 1>;
+		parser_sequence_fifo_sizes = <62 62>;
+
+		// Since rx_buffer is per context, we can have a few different ways
+		//  to populate the operand
+		rx_buffer_sizes = <128 128>;
+				   
+
+		// Max available descriptors are 1024 (across all complexes).
+		// Per port num_free_descriptors must be even number
+		num_free_descs = <52 52>;
+		free_desc_sizes = <2048 2048>;
+		ucore_mask = <0xffff 0xffff>;
+	};
+};
-- 
1.9.1

