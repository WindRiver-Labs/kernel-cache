From 07d1534b554e07b60b09f7d12610c879bad321d7 Mon Sep 17 00:00:00 2001
From: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Date: Wed, 20 Oct 2010 18:39:08 -0700
Subject: [PATCH 1313/1532] NAE: Drain all vcs of n0c0t0 cpu, use
 cpu_present_map for msgring int A0 workaround

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/init_nae.c   | 18 ++++++++++++------
 drivers/net/ethernet/broadcom/nae/net_common.h |  1 +
 drivers/net/ethernet/broadcom/nae/xlp_nae.c    |  7 +++----
 3 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/init_nae.c b/drivers/net/ethernet/broadcom/nae/init_nae.c
index 8084886..737be88 100644
--- a/drivers/net/ethernet/broadcom/nae/init_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/init_nae.c
@@ -4,6 +4,7 @@
 #include <linux/delay.h>
 
 #include <asm/netlogic/msgring.h>
+#include <asm/netlogic/cpumask.h>
 
 #include <asm/netlogic/hal/nlm_hal_fmn.h>
 #include <asm/netlogic/hal/nlm_hal_nae.h>
@@ -312,11 +313,22 @@ static void parse_fdt_nae_config(void)
 static void config_fmn(void)
 {
 	unsigned long mflags = 0;
+	struct cpumask cpumask;
+
+	/* bind cpu to n0c0t0 and drain all leftover firmware messages */
+	sched_bindto_save_affinity(0, &cpumask);
 
 	/* Configure FMN again but only cpu credits */
 	msgrng_access_enable(mflags);
+
+	nlm_xlp_msgring_int_handler(IRQ_MSGRING, NULL);
+
+	/* Configure credits to non-n0c0 cores */
 	nlm_hal_fmn_init(0x10000000, 0x02000000, 50);
+
 	msgrng_access_disable(mflags);
+
+	sched_bindto_restore_affinity(&cpumask);
 }
 
 static void drain_nae_frin_fifo_descs(void)
@@ -366,17 +378,11 @@ static void deflate_frin_fifo_carving(void)
 	int start = 0;
 	uint32_t value = 0;
 
-	printk("FRIN desc carving before resetting...\n");
-	print_frin_desc_carving();
-
 	for (intf = 0; intf < 20; intf++) {
 		start = minimum_size * intf;
 		value = (minimum_size << 20) | (start << 8) | (intf);
 		nlm_hal_write_nae_reg(FREE_IN_FIFO_CFG, value);
 	}
-
-	printk("FRIN desc carving after resetting...\n");
-	print_frin_desc_carving();
 }
 
 int initialize_nae(void)
diff --git a/drivers/net/ethernet/broadcom/nae/net_common.h b/drivers/net/ethernet/broadcom/nae/net_common.h
index d6e3c72..878f081 100644
--- a/drivers/net/ethernet/broadcom/nae/net_common.h
+++ b/drivers/net/ethernet/broadcom/nae/net_common.h
@@ -180,5 +180,6 @@ extern struct nae_config nae_cfg;
 extern int cntx2port[];
 
 extern int initialize_nae(void);
+extern void nlm_xlp_msgring_int_handler(unsigned int irq, struct pt_regs *regs);
 
 #endif
diff --git a/drivers/net/ethernet/broadcom/nae/xlp_nae.c b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
index 7ffcd2b..ac2958c 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
@@ -53,6 +53,7 @@
 #include <asm/system.h>
 #include <asm/uaccess.h>
 #include <asm/netlogic/msgring.h>
+#include <asm/netlogic/cpumask.h>
 
 #include <asm/netlogic/hal/nlm_hal_fmn.h>
 #include <asm/netlogic/hal/nlm_hal_nae.h>
@@ -977,8 +978,6 @@ static int xlp_mac_proc_read(char *page, char **start, off_t off,
 	return len;
 }
 
-extern void nlm_xlp_msgring_int_handler(unsigned int irq, struct pt_regs *regs);
-
 /**********************************************************************
  * nlm_xlp_mac_timer - interrupt handler routine
  * @data - parameter passed in when timer interrupt handler is called.
@@ -992,11 +991,11 @@ static void nlm_xlp_mac_timer(unsigned long data)
 
 	/* printk("[%s] A0 Workaround, forcing FMN int handling \n",__func__); */
 	{
-		uint32_t cpumask = 0xffffffff;
+		uint32_t cpumask = cpumask_to_uint32(&cpu_present_map); /* doesn't handle non-n0 nodes */
 		uint32_t cpumask_lo;
 		uint32_t cpumask_hi;
 
-		pic_reg_t *mmio = (pic_reg_t *) XLP_IO_PIC_OFFSET;
+		pic_reg_t *mmio = nlm_hal_pic_offset();
 		int cpu = hard_smp_processor_id();
 
 		cpumask = cpumask & ~(1 << cpu);
-- 
1.9.1

