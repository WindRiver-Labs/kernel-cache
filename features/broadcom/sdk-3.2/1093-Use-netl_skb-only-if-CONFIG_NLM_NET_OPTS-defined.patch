From f280fe3d49fecc13ba4b89606b2e0e9827d317bf Mon Sep 17 00:00:00 2001
From: Mehul <vmehul@netlogicmicro.com>
Date: Thu, 8 Dec 2011 16:25:57 +0530
Subject: [PATCH 1093/1532] Use netl_skb only if CONFIG_NLM_NET_OPTS defined.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/nae-perf/xlp_nae.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/misc/netlogic/nae-perf/xlp_nae.c b/drivers/misc/netlogic/nae-perf/xlp_nae.c
index 308660d..2187bf4 100755
--- a/drivers/misc/netlogic/nae-perf/xlp_nae.c
+++ b/drivers/misc/netlogic/nae-perf/xlp_nae.c
@@ -364,8 +364,9 @@ static __inline__ struct sk_buff *nlm_xlp_alloc_skb(void)
         offset = ((unsigned long)skb->data + CACHELINE_SIZE) &
                 ~(CACHELINE_SIZE - 1);
         skb_reserve(skb, (offset - (unsigned long)skb->data));
+#ifdef CONFIG_NLM_NET_OPTS
         skb->netl_skb = skb;
-
+#endif
         return skb;
 }
 
@@ -386,7 +387,9 @@ static __inline__ struct sk_buff *nlm_xlp_alloc_skb_atomic(void)
         offset = ((unsigned long)skb->data + CACHELINE_SIZE) &
                 ~(CACHELINE_SIZE - 1);
         skb_reserve(skb, (offset - (unsigned long)skb->data));
+#ifdef CONFIG_NLM_NET_OPTS
         skb->netl_skb = skb;
+#endif
         return skb;
 }
 
@@ -1766,7 +1769,12 @@ static int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 		return tso_xmit_skb(skb, dev);
 	}
 
-	if(skb->netl_skb && (last_rcvd_skb[LAST_RCVD_INDEX(cpu)] == skb->netl_skb) && !skb_shared(skb)) {
+#ifdef CONFIG_NLM_NET_OPTS
+	if(skb->netl_skb && (last_rcvd_skb[LAST_RCVD_INDEX(cpu)] == skb->netl_skb) && !skb_shared(skb)) 
+#else
+	if((last_rcvd_skb[LAST_RCVD_INDEX(cpu)] == skb) && !skb_shared(skb)) 
+#endif
+	{
 		last_rcvd_skb[LAST_RCVD_INDEX(cpu)] = NULL;
 		/* Do h/w replenishment */
 		msg0 = nae_tx_desc(P2D_NEOP, 0, (cpu/2) + 32,
-- 
1.9.1

