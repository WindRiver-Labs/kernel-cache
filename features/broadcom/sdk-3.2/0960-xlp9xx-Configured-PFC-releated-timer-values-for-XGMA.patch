From ea6aeca9176b2a3fec285c04acf71d56e7dcf875 Mon Sep 17 00:00:00 2001
From: Vikas Gupta <vikas.gupta@broadcom.com>
Date: Tue, 29 Apr 2014 03:56:10 -0700
Subject: [PATCH 0960/1532] xlp9xx: Configured PFC releated timer values for
 XGMAC.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/netlib/include/netsoc_dev.h | 3 +++
 arch/mips/netlogic/lib/netlib/src/netsoc_nae.c     | 9 +++++++--
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_dev.h b/arch/mips/netlogic/lib/netlib/include/netsoc_dev.h
index c4a4dd4..0860c17 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_dev.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_dev.h
@@ -206,6 +206,8 @@ enum netior_regs {
 	NETIOR_INT0_MASK = 0x34,
 	NETIOR_INT1 = 0x35,
 	NETIOR_INT1_MASK = 0x36,
+	GMAC_PFC_REPEAT = 0x37,
+	XGMAC_PFC_REPEAT = 0x38,
 	NETIOR_MISC_REG1_ADDR = 0x39,
 	NETIOR_MISC_REG2_ADDR = 0x3a,
 	NETIOR_MISC_REG3_ADDR = 0x3d,
@@ -942,6 +944,7 @@ enum {
 	#define NETIOR_GMAC_TX_PFC_EN_POS	13
 	#define NETIOR_GMAC_RX_PFC_EN_POS	12
 	#define NETIOR_GMAC_TX_PAUSE_POS	10
+#define NETIOR_GMAC_CTRL2		0x7E
 
 #define NETIOR_XGMAC_PAUSE_OPC		0x79
 	
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index ab20c18..c55633e 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -2246,7 +2246,7 @@ static void __netsoc_config_xaui(net_port_t *netport)
                 val |= (1 << NETIOR_XGMAC_TX_PAUSE_POS);
                 val &= ~(1 << NETIOR_XGMAC_VLAN_DC_POS);
         }
-        netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL1, val);
+        netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL1, val | (1<<13));
 
 	if (IS_NLM_XLP9XX_FAMILY) {
                 /*
@@ -3159,6 +3159,7 @@ int __netsoc_config_flow_control(net_port_t *netport, uint32_t enable)
 	unsigned int val, mask;
 	nae_t *nae = netport->nae;
 	uint64_t mac_base;
+	uint64_t nae_base = netsoc_get_iface_base(nae->nae_base, 0xf);
 
 	switch(netport->iftype) {
 		case SGMII_IF:
@@ -3173,12 +3174,14 @@ int __netsoc_config_flow_control(net_port_t *netport, uint32_t enable)
                                 else
                                         val |= (1 << NETIOR_GMAC_TX_PAUSE_POS);
                                 netsoc_write_mac_reg(mac_base, NETIOR_GMAC_CTRL1, val);
+                                netsoc_write_mac_reg(mac_base, NETIOR_GMAC_CTRL2,  0xF1230000);		
+        			netsoc_write_nae_iface_reg(nae_base, GMAC_PFC_REPEAT , (unsigned int)((0x40 << 22) | 0xff));
                         }
                         else {
                                 val = netsoc_read_mac_reg(mac_base, NETIOR_GMAC_CTRL1);
                                 mask = (1 << NETIOR_GMAC_TX_PFC_EN_POS) | (1<<NETIOR_GMAC_RX_PFC_EN_POS) | (1 << NETIOR_GMAC_TX_PAUSE_POS);
                                 val &= ~(mask);
-                                netsoc_write_mac_reg(mac_base, NETIOR_GMAC_CTRL1, val);		// FIXME J
+                                netsoc_write_mac_reg(mac_base, NETIOR_GMAC_CTRL1, val);
                         }
 
 			netsoc_api_print(NETSOC_APIDBG_PORT,"%s: GMAC enable %d NETIOR_GMAC_CTRL1 0x%x\n",__func__, enable, netsoc_read_mac_reg(mac_base, NETIOR_GMAC_CTRL1));
@@ -3212,6 +3215,8 @@ int __netsoc_config_flow_control(net_port_t *netport, uint32_t enable)
                         	        val |= (1 << NETIOR_XGMAC_TX_PAUSE_POS);
 					netsoc_write_mac_reg(mac_base, NETIOR_XGMAC_CTRL1, val);
 				}
+				if(is_nlm_xlp9xx())
+        				netsoc_write_nae_iface_reg(nae_base, XGMAC_PFC_REPEAT , (unsigned int)((0x3 << 22) | 0x8000));
                         }
                         else {
 			        if (netport->iftype != XFI_IF) {
-- 
1.9.1

