From 166c9fbf7007e0b90bd81f159c41630371a7345a Mon Sep 17 00:00:00 2001
From: Virendra Pathak <vpathak@broadcom.com>
Date: Thu, 9 May 2013 16:17:39 +0530
Subject: [PATCH 1141/1532] dtre: made the dtre driver as a module.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/dtre/nlm_adma.c | 53 ++++++++++++++++++-----------------
 1 file changed, 28 insertions(+), 25 deletions(-)

diff --git a/drivers/misc/netlogic/dtre/nlm_adma.c b/drivers/misc/netlogic/dtre/nlm_adma.c
index 174b2b7..81181a5 100644
--- a/drivers/misc/netlogic/dtre/nlm_adma.c
+++ b/drivers/misc/netlogic/dtre/nlm_adma.c
@@ -38,14 +38,14 @@
 #include <linux/dmaengine.h>
 #include <linux/timer.h>
 
-#include <asm/netlogic/mips-exts.h>
-#include <asm/netlogic/msgring.h>
+#include <asm/netlogic/mips-extns.h>
 
 #include "nlm_adma.h"
 
 #include <linux/types.h>
 #include <linux/kernel.h>
-#include <asm/netlogic/hal/nlm_hal_fmn.h>
+#include "nlm_hal_fmn.h"
+#include "nlm_hal_fmn_dp.h"
 
 uint64_t nlm_dtre_debug = 0;
 
@@ -54,6 +54,10 @@ uint64_t nlm_dtre_debug = 0;
 
 extern void *fdt;
 extern void nlm_hal_dtr_init(void *fdt);
+extern int register_xlp_msgring_handler(int major,
+				void (*action) (uint32_t, uint32_t, uint32_t, uint32_t,
+						uint64_t, uint64_t, uint64_t, uint64_t, void *),
+				void *dev_id);
 
 struct nlm_adma_device nlm_adma_raid_device;
 struct page * nlm_dtre_null_page;
@@ -355,7 +359,7 @@ static void dtre_send_message(int vc_id, int msgtype, uint64_t * msg)
 	uint32_t freeback_msg_dest_id, msgstatus1;
 	int rc, i;
 
-	freeback_msg_dest_id = (netlogic_cpu_id()*16)+(netlogic_thr_id()*4);
+	freeback_msg_dest_id = (nlm_core_id()*16)+(nlm_thread_id()*4);
 	rc = 0;
 	i = 0;
 
@@ -428,7 +432,7 @@ static dma_cookie_t nlm_tx_submit (struct dma_async_tx_descriptor *tx)
 	cookie = nlm_desc_assign_cookie(chan, nlm_tx);
 
 	optype = nlm_tx->optype;
-	freeback_msg_dest_id = (netlogic_cpu_id()*16)+(netlogic_thr_id()*4);
+	freeback_msg_dest_id = (nlm_core_id()*16)+(nlm_thread_id()*4);
 
 	if ((chan->tx_queue[chan->pending_idx]) != NULL)
 	{
@@ -1574,9 +1578,27 @@ static struct platform_driver nlm_adma_driver = {
 	},
 };
 
+static int __init nlm_add_dma_dev(void)
+{
+        struct platform_device *pd;
+        int ret;
+
+        pd = platform_device_alloc("NLM-ADMA", -1);
+        if (!pd)
+                return -ENOMEM;
+
+        ret = platform_device_add(pd);
+        if (ret)
+                platform_device_put(pd);
+
+        return ret;
+}
+
 static int __init nlm_adma_init (void)
 {
-	return platform_driver_register(&nlm_adma_driver);
+	platform_driver_register(&nlm_adma_driver);
+	nlm_add_dma_dev();
+	return;
 }
 
 static void __exit nlm_adma_exit (void)
@@ -1588,25 +1610,6 @@ static void __exit nlm_adma_exit (void)
 module_init(nlm_adma_init);
 module_exit(nlm_adma_exit);
 
-
-static __init int nlm_add_dma_dev(void)
-{
-	struct platform_device *pd;
-	int ret;
-
-	pd = platform_device_alloc("NLM-ADMA", -1);
-	if (!pd)
-		return -ENOMEM;
-
-	ret = platform_device_add(pd);
-	if (ret)
-		platform_device_put(pd);
-
-	return ret;
-}
-device_initcall(nlm_add_dma_dev);
-
-
 MODULE_AUTHOR("Netlogic");
 MODULE_DESCRIPTION("Netlogic ADMA Engine Driver");
 MODULE_LICENSE("GPL");
-- 
1.9.1

