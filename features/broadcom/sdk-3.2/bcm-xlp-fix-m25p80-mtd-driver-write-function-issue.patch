From 1081f8a433116a085b9dd8e36b85b8995a719b36 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Sat, 28 Mar 2015 10:22:48 +0800
Subject: [PATCH 07/14] bcm-xlp: fix m25p80 mtd driver write function issue

When write data to m25p80 mtd device, the spi nor flash n25p128a13
(which use driver m25p80.c) will enter a deadless loop and hang the
system.

It happened because when the function "m25p80_write_ext" call the
routine "m25p80_write", it passes the fourth argument "actual_len"
with the type "u32", but in the function "m25p80", the fourth
argument's type is size_t which is 8-byte size.So when m25p80 writes
a 8-byte data to "actual_len", the function "m25p80_write_ext" get
the corrupt value which is 4-byte.

When change the actual_len type is size_t which is same to the function
m25p80_write's argument type, it works OK.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/mtd/devices/m25p80.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/mtd/devices/m25p80.c b/drivers/mtd/devices/m25p80.c
index 703e614..1bb35c9 100644
--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -640,7 +640,7 @@ static int m25p80_write_ext(struct mtd_info *mtd, loff_t to, size_t len,
 	u32 addr = to;
 	u32 offset = to;
 	u32 write_len = 0;
-	u32 actual_len = 0;
+	size_t actual_len = 0;
 	u32 write_count = 0;
 	u32 rem_bank_len = 0;
 	u8 bank = 0;
-- 
1.7.5.4

