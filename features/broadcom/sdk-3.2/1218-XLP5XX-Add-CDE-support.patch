From 84403f9b2772241bf4f6b07b0e9cb3d6adf635c2 Mon Sep 17 00:00:00 2001
From: Anurag <anurag.gopinath@broadcom.com>
Date: Wed, 12 Feb 2014 11:36:09 +0530
Subject: [PATCH 1218/1532] XLP5XX : Add CDE support

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/nlm_cde/nlm_cde.c | 39 +++++++++++++++++++--------------
 drivers/misc/netlogic/nlm_cde/nlm_cde.h |  4 ++++
 2 files changed, 27 insertions(+), 16 deletions(-)

diff --git a/drivers/misc/netlogic/nlm_cde/nlm_cde.c b/drivers/misc/netlogic/nlm_cde/nlm_cde.c
index a7f294d..610778d 100644
--- a/drivers/misc/netlogic/nlm_cde/nlm_cde.c
+++ b/drivers/misc/netlogic/nlm_cde/nlm_cde.c
@@ -199,21 +199,21 @@ static int config_cmp(void)
 	for(i = 0; i < num_cde_engine; i++)
 	{
 		unsigned int val;
-		if(is_9xx)
+		if(is_nlm_xlp9xx() || is_nlm_xlp5xx())
 			val = nlm_hal_9xx_read_cde_reg(CMP_REG_CTRL_REG(i));
 		else
 			val = nlm_hal_read_cde_reg(CMP_REG_CTRL_REG(i));
 #ifdef CDE_DEBUG
 		printk("config_cmp i = %d cntrl_reg val = %x\n", i, val);
 #endif
-		if(is_9xx)
+		if(is_nlm_xlp9xx() || is_nlm_xlp5xx())
 			val = nlm_hal_9xx_read_cde_reg(CMP_REG_SCRATCH_PAGE(i));
 		else
 			val = nlm_hal_read_cde_reg(CMP_REG_SCRATCH_PAGE(i));
 #ifdef CDE_DEBUG
 		printk("config_cmp i = %d scratch_reg val = %x\n", i, val);
 #endif
-		if(is_9xx){
+		if(is_nlm_xlp9xx() || is_nlm_xlp5xx()){
 			nlm_hal_9xx_write_cde_reg(CMP_REG_CTRL_REG(i), ((0x0012 << 16) | FD_CMP_PAGE_SIZE)); //16'h{CMP_PAGE_SIZE}
 			nlm_hal_9xx_write_cde_reg(CMP_REG_SCRATCH_PAGE(i), ((SCRATCH_SIZE/64 << 17) | (16 << 9)));
 		}
@@ -282,6 +282,8 @@ static int send_free_desc(void)
 			status = send_message_1(MSGRNG_2XX_STNID_CMP1, &fd_msg);
 		else if(is_9xx)
 			status = send_message_1(MSGRNG_9XX_STNID_CMP1, &fd_msg);
+		else if(is_nlm_xlp5xx())
+			status = send_message_1(MSGRNG_5XX_STNID_CMP1, &fd_msg);
 		else
 			status = send_message_1(MSGRNG_STNID_CMP1, &fd_msg);
 
@@ -382,8 +384,8 @@ int create_inf_message(cmp_data_t *cmp_data, int type, int start_of_file, int en
 		}
 
 		//if (cpu_is_xlp9xx())
-		if (is_9xx)
-		{
+		if (is_nlm_xlp9xx() || is_nlm_xlp5xx())
+		{	
 			stid = nlm_hal_9xxcde_make_cmp_msg((uint64_t*)&cmp_msg[i].msg0, (uint64_t*)&cmp_msg[i].msg1, 0, cmp_data->op, rtn_bkt,
 					cur_desc, (uint64_t)virt_to_phys(cmp_data->src_desc + desc_idx));
 #ifdef CDE_DEBUG
@@ -500,7 +502,7 @@ int create_message(cmp_data_t *cmp_data, int type, int start_of_file, int end_of
 		}
 
 		//if (cpu_is_xlp9xx())
-		if (is_9xx)
+		if (is_nlm_xlp9xx() || is_nlm_xlp5xx())
 		{
 			stid = nlm_hal_9xxcde_make_cmp_msg((uint64_t*)&cmp_msg[i].msg0,(uint64_t*)&cmp_msg[i].msg1, 0, cmp_data->op, rtn_bkt,
 					cur_desc, (uint64_t)virt_to_phys(cmp_data->src_desc + desc_idx));
@@ -542,7 +544,7 @@ void return_free_descriptors(msg *msg_list, int msg_index)
 
 		memcpy ((void *) &return_msg, (void *)(msg_list+i), sizeof(msg));
 
-		if(is_9xx)
+		if(is_nlm_xlp9xx() || is_nlm_xlp5xx())
 		{
 			used_fd[used_fd_index++] = ((uint64_t) return_msg.msg0 & 0xffffffffffUll);
 			num_desc = (return_msg.msg0>>40 & 0xffff);
@@ -571,6 +573,8 @@ void return_free_descriptors(msg *msg_list, int msg_index)
 					status = send_message_1(MSGRNG_2XX_STNID_CMP1, &fd_msg);
 				else if(is_9xx)
 					status = send_message_1(MSGRNG_9XX_STNID_CMP1, &fd_msg);
+				else if(is_nlm_xlp5xx())
+					status = send_message_1(MSGRNG_5XX_STNID_CMP1, &fd_msg);
 				else
 					status = send_message_1(MSGRNG_STNID_CMP1, &fd_msg);
 				if (status != 0)
@@ -596,7 +600,7 @@ static int nlm_hal_cde_read_cmp_msg(char *buffer, uint64_t payload)
 		dest_addr = *desc & 0xffffffffffUll;
 		tmp_ptr = (char *) phys_to_virt(dest_addr & 0xffffffffffUll);
 
-#if CDE_DEBUG
+#ifdef CDE_DEBUG
 		printk(" desc addr = %llx\n",desc);
 		printk("\n num_bytes = %d\n",num_bytes);
 		printk("\n num_desc = %d\n",num_desc);
@@ -642,7 +646,7 @@ nlm_xlp_cde_msgring_handler(uint32_t vc, uint32_t src_id,
 #endif
 
 	offset = cmp_data->target_size;
-	if (cpu_is_xlp9xx())
+	if (cpu_is_xlp9xx() || is_nlm_xlp5xx())
 		cmp_data->target_size += nlm_hal_cde_read_cmp_msg((char *) cmp_data->target + offset, msg->msg0);
 	else
 		cmp_data->target_size += nlm_hal_cde_read_cmp_msg((char *) cmp_data->target + offset, msg->msg1);
@@ -945,6 +949,8 @@ unsigned int nlm_cde_send_request(cmp_data_t *cmp_data, unsigned int op,
 		else
 			if(is_9xx)
 				status =  send_message_2(MSGRNG_9XX_STNID_CMP0, (struct msgrng_msg *) (cmp_msg + i));
+			else if(is_nlm_xlp5xx())
+				status =  send_message_2(MSGRNG_5XX_STNID_CMP0, (struct msgrng_msg *) (cmp_msg + i));
 			else
 				status =  send_message_1(MSGRNG_STNID_CMP0, (struct msgrng_msg *) (cmp_msg + i));
 #ifdef CDE_DEBUG
@@ -1015,7 +1021,7 @@ static long xlp_cde_ioctl(struct file *filp,
 	printk("cde.compression_type = %d cde.sof = %d, cde.eof = %d\n",cde->compression_type, cde->sof, cde->eof);
 #endif
 	if(sanity_test)
-		cde = (struct nlmcde*)arg;
+		cde = (struct nlm_cde_op*)arg;
 
 	cmp_data->compression_type = cde->compression_type;
 	cmp_data->sof = cde->sof;
@@ -1091,23 +1097,22 @@ void xlp_cde_dev_initialize(void)
 	int i =0;
 	unsigned int ret;
 	int frequency = 0;
-	int node = 0;
 
 	for(i = 0; i < num_cde_engine; i++)
 	{
-		if(is_9xx)
+		if(is_nlm_xlp9xx() || is_nlm_xlp5xx())
 			ret = nlm_hal_9xx_read_cde_reg(CMP_REG_RESET_REG(i));
 		else
 			ret = nlm_hal_read_cde_reg(CMP_REG_RESET_REG(i));
 #ifdef CDE_DEBUG
 		printk("reset_reg = ret = %x\n", ret);
 #endif
-		if(is_9xx)
+		if(is_nlm_xlp9xx() || is_nlm_xlp5xx())
 			nlm_hal_9xx_write_cde_reg(CMP_REG_RESET_REG(i), 0x8);
 		else
 			nlm_hal_write_cde_reg(CMP_REG_RESET_REG(i), 0x8);
 		do {
-			if(is_9xx)
+			if(is_nlm_xlp9xx() || is_nlm_xlp5xx())
 				ret = nlm_hal_9xx_read_cde_reg(CMP_REG_RESET_REG(i));
 			else
 				ret = nlm_hal_read_cde_reg(CMP_REG_RESET_REG(i));
@@ -1123,7 +1128,7 @@ void xlp_cde_dev_initialize(void)
 		//printk("\n CDE Frequency = %d\n",frequency);
 		//nlm_hal_set_cde_freq(node, frequency);
 
-		if(is_9xx)
+		if(is_nlm_xlp9xx() || is_nlm_xlp5xx())
 		{
 			nlm_hal_9xx_write_cde_reg(CMP_REG_RESET_REG(i), 0x01);
 			nlm_hal_9xx_write_cde_reg(CMP_REG_RESET_REG(i), 0x00);
@@ -1166,7 +1171,9 @@ static int __init xlp_cde_init(void)
 	}else if (is_nlm_xlp9xx()) {
 		is_9xx = 1;
 		num_cde_engine = NUM_CDE_ENGINE_XLP9XX;
-	}else
+	else if (is_nlm_xlp5xx())
+		num_cde_engine = NUM_CDE_ENGINE_XLP5XX;
+	else
 		num_cde_engine = NUM_CDE_ENGINE;
 
 	xlp_cde_dev_initialize();
diff --git a/drivers/misc/netlogic/nlm_cde/nlm_cde.h b/drivers/misc/netlogic/nlm_cde/nlm_cde.h
index 3a4369f..0bab7e7 100644
--- a/drivers/misc/netlogic/nlm_cde/nlm_cde.h
+++ b/drivers/misc/netlogic/nlm_cde/nlm_cde.h
@@ -36,6 +36,7 @@
 #define NUM_CDE_ENGINE 4
 #define NUM_CDE_ENGINE_XLP2XX 	1
 #define NUM_CDE_ENGINE_XLP9XX 	3
+#define NUM_CDE_ENGINE_XLP5XX 	1
 
 #define CDE_INFLATE 			1
 #define CDE_DEFLATE 			2
@@ -55,6 +56,9 @@
 #define MSGRNG_9XX_STNID_CMP0 XLP_9XX_CMP_VC_BASE 
 #define MSGRNG_9XX_STNID_CMP1 (MSGRNG_9XX_STNID_CMP0 + 3)
 
+#define MSGRNG_5XX_STNID_CMP0 XLP_5XX_CMP_VC_BASE   // This needs to be verified
+#define MSGRNG_5XX_STNID_CMP1 (MSGRNG_5XX_STNID_CMP0 + 1)
+
 #define MSGRNG_2XX_STNID_CMP0 XLP_2XX_CDE_VC_BASE
 #define MSGRNG_2XX_STNID_CMP1 (XLP_2XX_CDE_VC_BASE + 1)
 
-- 
1.9.1

