From 4e55c0ff8abee150d5e6fa23e78124454db80851 Mon Sep 17 00:00:00 2001
From: Venu Vadapalli <vvadapalli@netlogicmicro.com>
Date: Fri, 8 Oct 2010 00:58:03 -0700
Subject: [PATCH 1311/1532] Use module param for rely_on_firmware_config, use
 tuple for regs instead of pairs

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/init_nae.c | 40 +++++++++++++++-------------
 drivers/net/ethernet/broadcom/nae/xlp_nae.c  |  4 +++
 2 files changed, 25 insertions(+), 19 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/init_nae.c b/drivers/net/ethernet/broadcom/nae/init_nae.c
index 4bd75e4a..17818d7 100644
--- a/drivers/net/ethernet/broadcom/nae/init_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/init_nae.c
@@ -12,7 +12,7 @@
 
 #include "net_common.h"
 
-#define RELY_ON_FIRMWARE_CONFIG
+extern int rely_on_firmware_config;
 
 #define VAL_UCORE_RESET(x)             ( ( (x) &0xffff) << 8)
 
@@ -124,7 +124,7 @@ static void parse_poe_config(void)
 
 	getprop(node, "num-regs", &num_regs, sizeof(uint32_t));
 
-	size = sizeof(uint32_t) * num_regs;
+	size = sizeof(uint32_t) * num_regs * 3;
 	poe_regs = kmalloc(size, GFP_KERNEL);
 	if (!poe_regs) {
 		printk("[%s] Unable to allocate temporary memory\n", __func__);
@@ -133,7 +133,7 @@ static void parse_poe_config(void)
 
 	getprop(node, "regs", poe_regs, size);
 
-	nlm_hal_init_poe_regs(PCIE_MEM_POE_REG, poe_regs, num_regs);
+	nlm_hal_init_poe_regs(poe_regs, num_regs);
 
 	kfree(poe_regs);
 }
@@ -208,9 +208,9 @@ static void parse_fdt_nae_config(void)
 	if (debug)
 		printk("num-nae-regs = %d, num-intf-regs = %d\n", num_nae_regs, num_intf_regs);
 
-#ifndef RELY_ON_FIRMWARE_CONFIG
-	nlm_hal_sgmii_pcs_init();
-#endif
+	if (!rely_on_firmware_config)
+		/* bitmask of complexes to initialize */
+		nlm_hal_sgmii_pcs_init(1<<4);
 
 	for(i = 0; i < num_ports; i++)
 	{
@@ -276,24 +276,26 @@ static void parse_fdt_nae_config(void)
 		}
 		getprop(subnode, "intf-regs", intf_regs, size);
 
-#ifndef RELY_ON_FIRMWARE_CONFIG
-		printk("Configuring per-port interface registers for port@%d\n", i);
-		/* Configure per port interface registers */
-		nlm_hal_init_if_regs(port_type, nae_cfg.ports[port].hw_port_id, intf_regs, num_intf_regs);
+		if (!rely_on_firmware_config) {
+			printk("Configuring per-port interface registers for port@%d\n", i);
+			/* Configure per port interface registers */
+			nlm_hal_init_if_regs(port_type, nae_cfg.ports[port].hw_port_id, intf_regs, num_intf_regs);
+
+			printk("Configuring per-port NAE registers for port@%d\n", i);
+			/* Configure per port NAE registers */
+			nlm_hal_init_nae_regs(port_type, nae_regs, num_nae_regs);
+		}
 
-		printk("Configuring per-port NAE registers for port@%d\n", i);
-		/* Configure per port NAE registers */
-		nlm_hal_init_nae_regs(port_type, nae_regs, num_nae_regs);
-#endif
 		kfree(nae_regs);
 		kfree(intf_regs);
 
-#ifndef RELY_ON_FIRMWARE_CONFIG
-		if (nlm_hal_open_if(port_type, nae_cfg.ports[port].hw_port_id) < 0) {
-			printk("[%s] Unable to open port %d\n", __func__, i);
-			continue;
+		if (!rely_on_firmware_config) {
+			if (nlm_hal_open_if(port_type, nae_cfg.ports[port].hw_port_id) < 0) {
+				printk("[%s] Unable to open port %d\n", __func__, i);
+				continue;
+			}
 		}
-#endif
+
 		printk("Initialized port@%d\n", i);
 	}
 }
diff --git a/drivers/net/ethernet/broadcom/nae/xlp_nae.c b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
index e1cde3e..2000793 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_nae.c
@@ -99,6 +99,9 @@ static unsigned long stats_uboot_pkts;
 extern int naecfg_hack;
 module_param(naecfg_hack, int, 0);
 
+int rely_on_firmware_config = 1;
+module_param(rely_on_firmware_config, int, 0);
+
 /***************************************************************
  *
  * Below parameters are set during FDT file parsing
@@ -390,6 +393,7 @@ static void nlm_xlp_nae_init(void)
 	printk("======= Module Parameters =========\n");
 	printk("debug = %d, frin_desc_thres=%d naecfg_hack=%d drop_uboot_pkt=%d\n",
 	       debug, frin_desc_thres, naecfg_hack, drop_uboot_pkt);
+	printk("rely_on_firmware_config = %d\n", rely_on_firmware_config);
 
 	if (initialize_nae()) return;
 
-- 
1.9.1

