From 1f4b671f3a4e1bf67a097e1498e70e6dff9718d0 Mon Sep 17 00:00:00 2001
From: "P. Sadik" <psadik@broadcom.com>
Date: Fri, 5 Jul 2013 11:06:00 +0530
Subject: [PATCH 0734/1532] remove unused variables from nlm_hal.c

Conflicts:

	syslib/src/nlm_hal.c
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/syslib/src/nlm_hal.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
index 6a66016..ff394c0 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
@@ -6,7 +6,7 @@
  * This software is available to you under a choice of one of two
  * licenses.  You may choose to be licensed under the terms of the GNU
  * General Public License (GPL) Version 2, available from the file
- * http://www.gnu.org/licenses/gpl-2.0.txt  
+ * http://www.gnu.org/licenses/gpl-2.0.txt
  * or the Broadcom license below:
 
  * Redistribution and use in source and binary forms, with or without
@@ -411,17 +411,17 @@ __inline__ void nlm_hal_init(void)
 
 			xlp_sae_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_SAE)) & 0x1fffffff; /*For now . Will be fixed soon.*/
 			xlp_rsa_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
-		} else 
+		} else
 		{
 			xlp_fmn_base[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(node, XLP_FMN)), PCI_MEM_BAR_0);
 
 			xlp_mac_base[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(node, XLP_NAE)), PCI_MEM_BAR_0); //0x18018000
 			xlp_nae_base[node] = xlp_mac_base[node] + 0xe000;
-			
+
 			xlp_poe_base_pcie[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_POE)) & 0x1fffffff; /* For now . Will be fixed soon.*/
-			
+
 			xlp_poe_base_pcim[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(node, XLP_POE)), PCI_MEM_BAR_0);	//0x18019000
-			
+
 			xlp_sys_base[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_SYS)) & 0x1fffffff; /*For now . Will be fixed soon.*/
 			xlp_sae_base[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_SAE)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 			xlp_rsa_base[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
@@ -870,8 +870,8 @@ void nlm_hal_set_dtre_freq(int node, int freq)
 		NLM_HAL_DO_DIV(set_freq, mhz);
 		nlm_print("DTRE Frequency set to %lluMHz\n", (unsigned long long)set_freq);
 
-/* This is only for experimetal reasons. 
- * It will cleaned very soon. 
+/* This is only for experimetal reasons.
+ * It will cleaned very soon.
  */
 #ifdef EXPERIMENTAL
 		/* TODO: xlp9xx
@@ -893,9 +893,9 @@ void nlm_hal_set_dtre_freq(int node, int freq)
    */
 static void nlm_hal_dtr_9xx_init(void *fdt)
 {
-	uint64_t base0 = nlm_hal_get_dev_base (XLP_DTR_NODE, 1, XLP_DTR_DEVICE, XLP_DTR_FUNC);
-	uint64_t base1 = nlm_hal_get_dev_base (XLP_DTR_NODE, 1, XLP_DTR_DEVICE, 6);
-	int frequency = 0, node = 0;
+
+	uint64_t base0 = nlm_hal_get_dev_base (XLP_DTR_NODE, XLP_DTR_BUS, XLP_DTR_DEVICE, XLP_DTR_FUNC);
+	uint64_t base1 = nlm_hal_get_dev_base (XLP_DTR_NODE, XLP_DTR_BUS, XLP_DTR_DEVICE, 6);
 
 	/* xlp9xx has two DTRE engines.  We need to initialize both */
 
@@ -1005,7 +1005,7 @@ int nlm_hal_get_sae_chip_feature(void )
 	if( is_nlm_xlp2xx())
 		chip_features = (INIT_DONE | ZUC | DES3_KEY_SWAP);
 	else
-		chip_features = INIT_DONE;	
+		chip_features = INIT_DONE;
 	return chip_features;
 }
 
-- 
1.9.1

