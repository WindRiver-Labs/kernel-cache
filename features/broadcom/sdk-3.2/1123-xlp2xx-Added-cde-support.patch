From 624973018a9240fa20397c76444a6c33a10d8a7d Mon Sep 17 00:00:00 2001
From: Alok Agrawat <alok@broadcom.com>
Date: Sat, 29 Sep 2012 03:12:10 -0700
Subject: [PATCH 1123/1532] xlp2xx: Added cde support

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/nlm_cde/nlm_cde.c | 26 +++++++++++++++++++++-----
 drivers/misc/netlogic/nlm_cde/nlm_cde.h |  4 ++++
 2 files changed, 25 insertions(+), 5 deletions(-)

diff --git a/drivers/misc/netlogic/nlm_cde/nlm_cde.c b/drivers/misc/netlogic/nlm_cde/nlm_cde.c
index 6add2b4..640e3d0 100644
--- a/drivers/misc/netlogic/nlm_cde/nlm_cde.c
+++ b/drivers/misc/netlogic/nlm_cde/nlm_cde.c
@@ -65,6 +65,8 @@ static unsigned char* cde_mem_start = NULL, *cde_mem_start_1, *cde_mem_start_2,
 static unsigned int cde_mem_size, cde_mem_size_1, cde_mem_size_2, cde_mem_size_3, cde_mem_size_4, cde_mem_size_5;
 //static void test(void);
 
+int num_cde_engine;
+
 struct nlm_cde_op
 {
   unsigned int compression_type;
@@ -166,7 +168,7 @@ static int config_cmp(void)
 #ifdef CDE_DEBUG
 	printk("config_cmp \n");
 #endif
-  for(i = 0; i < NUM_CDE_ENGINE; i++)
+  for(i = 0; i < num_cde_engine; i++)
   {
     unsigned int val = nlm_hal_read_cde_reg(CMP_REG_CTRL_REG(i));
 #ifdef CDE_DEBUG
@@ -215,7 +217,10 @@ static int send_free_desc(void)
     	printk("Free descriptor message [%0d] = 0x%016llx\n", i, fd_msg.msg0);
 #endif
 
-    status = send_message(MSGRNG_STNID_CMP1, &fd_msg);
+    if(is_nlm_xlp2xx())
+    	status = send_message(MSGRNG_2XX_STNID_CMP1, &fd_msg);
+    else
+      	status = send_message(MSGRNG_STNID_CMP1, &fd_msg);
 
     if (status != 0) {
       printk("[%s@%d]: Free descriptor (%d) didnt not reach cmpm status=%0d\n",
@@ -460,7 +465,10 @@ void return_free_descriptors(msg *msg_list, int msg_index)
     if (used_fd_index > FD_BURST_SIZE) {
       for (k = 0; k < used_fd_index; k++) {
 	fd_msg.msg0 = ((uint64_t) used_fd[k]);
-	status = send_message(MSGRNG_STNID_CMP1, &fd_msg);
+    	if(is_nlm_xlp2xx())
+    		status = send_message(MSGRNG_2XX_STNID_CMP1, &fd_msg);
+    	else
+		status = send_message(MSGRNG_STNID_CMP1, &fd_msg);
 	if (status != 0)
 	  printk("Return free descriptor didnt not reach cmp! status=%0d\n", status);
 	}
@@ -804,7 +812,11 @@ unsigned int nlm_cde_send_request(cmp_data_t *cmp_data, unsigned int op,
   // send message
   for (i = 0; i < num_messages; i++) {
 
-    int status = send_message(MSGRNG_STNID_CMP0, (struct msgrng_msg *) (cmp_msg + i));
+    int status;
+    if(is_nlm_xlp2xx())
+	status =  send_message(MSGRNG_2XX_STNID_CMP0, (struct msgrng_msg *) (cmp_msg + i));
+    else
+	status =  send_message(MSGRNG_STNID_CMP0, (struct msgrng_msg *) (cmp_msg + i));
 #ifdef CDE_DEBUG
     printk("write: status = %x\n", status);
 #endif
@@ -941,10 +953,14 @@ static int __init xlp_cde_init(void)
 	panic("can't register msgring handler for XLP_MSG_HANDLE_CMP");
     }
     printk("xlp_cde_init done\n\n");
+    if(is_nlm_xlp2xx())
+  	num_cde_engine = NUM_CDE_ENGINE_XLP2XX;
+    else
+  	num_cde_engine = NUM_CDE_ENGINE;
 {
   int i =0;
   unsigned int ret;
-  for(i = 0; i < NUM_CDE_ENGINE; i++)
+  for(i = 0; i < num_cde_engine; i++)
   {
     ret = nlm_hal_read_cde_reg(CMP_REG_RESET_REG(i));
 #ifdef CDE_DEBUG
diff --git a/drivers/misc/netlogic/nlm_cde/nlm_cde.h b/drivers/misc/netlogic/nlm_cde/nlm_cde.h
index 77922161..b9b4055 100644
--- a/drivers/misc/netlogic/nlm_cde/nlm_cde.h
+++ b/drivers/misc/netlogic/nlm_cde/nlm_cde.h
@@ -28,6 +28,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #define NUM_VC 8
 #define NLM_CDE_VC_BASE 297
 #define NUM_CDE_ENGINE 4
+#define NUM_CDE_ENGINE_XLP2XX 	1
 
 #define CDE_INFLATE 			1
 #define CDE_DEFLATE 			2
@@ -44,6 +45,9 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #define MSGRNG_STNID_CMP0 XLP_STNID_CMP
 #define MSGRNG_STNID_CMP1 (XLP_STNID_CMP + 4)
 
+#define MSGRNG_2XX_STNID_CMP0 XLP_2XX_CDE_VC_BASE
+#define MSGRNG_2XX_STNID_CMP1 (XLP_2XX_CDE_VC_BASE + 1)
+
 #define RTN_BKT 1
 #define FD_BURST_SIZE 1
 #define NUM_FREE_DESCRIPTORS 2048 //must be less or equal to MAX_NUM_PAGES
-- 
1.9.1

