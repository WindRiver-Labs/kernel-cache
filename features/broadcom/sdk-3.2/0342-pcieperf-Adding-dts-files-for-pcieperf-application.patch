From 41509634ef5f422aeafccdf4852af52bcc8cf431 Mon Sep 17 00:00:00 2001
From: Krishnamurthy D V <krishnad@broadcom.com>
Date: Wed, 5 Dec 2012 01:11:52 -0800
Subject: [PATCH 0342/1532] pcieperf: Adding dts files for pcieperf application

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/boot/dts/xlp8xx-pcieperf-netos.dts | 138 +++++++++++++++++++++++++++
 1 file changed, 138 insertions(+)
 create mode 100644 arch/mips/boot/dts/xlp8xx-pcieperf-netos.dts

diff --git a/arch/mips/boot/dts/xlp8xx-pcieperf-netos.dts b/arch/mips/boot/dts/xlp8xx-pcieperf-netos.dts
new file mode 100644
index 0000000..e0df427
--- /dev/null
+++ b/arch/mips/boot/dts/xlp8xx-pcieperf-netos.dts
@@ -0,0 +1,138 @@
+/* XLP8XX Device Tree Source 
+ *
+ */
+
+/dts-v1/;
+/ {
+	model = "MIPS,XLP8XX";
+	compatible = "NETL,XLP8XX_A0";
+
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	hypervisor {
+		hypervisor-name = "Xen";
+		alloc_dom0_memory = <1>;
+		bootargs = "dom0_loadaddr=0x72000000 dom0_cpumask=0x0f -- ";
+		domain_heap = <0x50000000 0x20000000>;
+	};
+
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		dom@0 {
+			device_type = "domain";
+			os = "netos";
+
+			heap-size = <0x0 0x2000000>; // 32M
+			shared-mem = <0x0 0x40000000 0x0 0x8000000>; // 128M @ 1GB
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			app-bootcmd = "smpload";
+			app-loadaddr = "0x48000000"; // 1GB+128MB
+
+			kernel {
+				/* Kernel Memory allocated from xen domain-heap */
+				size = <0x02000000>;  // 32M
+
+				/* Location in Dom0 ramdisk */
+				location = "/tmp/xen/netos.elf";
+
+				/* Domain destroy currently doesn't work with hyperexec */
+				dom_destroy_hack = <0>;
+			};
+
+			cpu {
+				onlinemask = <0xffffffff>;
+                                nae-rx-vc = <1>;
+                                nae-fb-vc = <3>;
+				sae-rx-vc = <0>; /* sharing with nae */
+				sae-rx-sync-vc = <2>; /* should be exclusive */
+
+                                /* Setting this to '1' makes NAE driver to skip buf alloction and initial
+                                   sending of packet buffers*/
+                                nae-buf-alloc-by-app = <1>; 
+			};
+			uart {
+				id = <0>;
+			};
+			memory {
+				reg = <0x20000000 0x20000000>;  // 512M @ 512M
+			};
+			app-param{
+                                onlinemask = <0xffffffff>;
+                        };
+
+			/* In hyperexec-linux mode, vc_mask needs to be synchronized with linux fmn node! */
+                        fmn {
+                                node_0_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
+                                node_1_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
+                                node_2_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
+                                node_3_vc_mask = <0x99999999 0x99999999 0x99999999 0x99999999>;
+                        };
+            kbp {
+                /* distribute total of 4096 buffer id across cpus. required only for cpus sending requests.
+                 * note : KBP compare/search instructions must use even-numbered buffers. i.e. (buffer_id & 0x1 == 0) is True
+                 */
+                buffers-cpuid-offset-quantity = <  0    0   64
+                                                   1   64   64
+                                                   2  128   64
+                                                   3  192   64
+                                                   4  256   64
+                                                   5  320   64
+                                                   6  384   64
+                                                   7  448   64
+                                                   8  512   64
+                                                   9  576   64
+                                                  10  640   64
+                                                  11  704   64
+                                                  12  768   64
+                                                  13  832   64
+                                                  14  896   64
+                                                  15  960   64
+                                                  16 1024   64
+                                                  17 1088   64
+                                                  18 1152   64
+                                                  19 1216   64
+                                                  20 1280   64
+                                                  21 1344   64
+                                                  22 1408   64
+                                                  23 1472   64
+                                                  24 1536   64
+                                                  25 1600   64
+                                                  26 1664   64
+                                                  27 1728   64
+                                                  28 1792   64
+                                                  29 1856   64
+                                                  30 1920   64
+                                                  31 1984   64>;
+                /* starting address for KBP Driver Data. two 32-bit unsigned integers forms one 64-bit memory address.
+                 * kbp driver requires 2 MBytes of dedicated memory space to store data */
+                memory-offsethigh-offsetlow = <0x00000001 0x00000000>;
+            };
+			owner-config {
+				nae = <0x0>;
+				sae = <0x0>;
+				rsa = <0x0>;
+				fmn = <0x1>;
+			};
+		};
+	};
+
+	chosen {
+		bootargs = " xlp_noi2c console=ttyS0,115200 ";
+	};
+
+	soc {
+
+	};
+	frequency-config {
+		nae = <500>;
+		sae = <500>;
+		rsa = <500>;
+		dtre = <250>;
+		cde = <250>;
+	};
+};
-- 
1.9.1

