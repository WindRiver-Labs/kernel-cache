From a41cb47951610e148658c86a51aec11b3490ddcd Mon Sep 17 00:00:00 2001
From: Tanmay Jagdale <tanmayj@broadcom.com>
Date: Wed, 8 Oct 2014 09:18:40 +0530
Subject: [PATCH 1248/1532] fdtconf: support for large dts values

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/fdtconf/fdtconf.c | 28 ++++++++++++++++++++++------
 1 file changed, 22 insertions(+), 6 deletions(-)

diff --git a/drivers/misc/netlogic/fdtconf/fdtconf.c b/drivers/misc/netlogic/fdtconf/fdtconf.c
index 904a4f5..83d838c 100644
--- a/drivers/misc/netlogic/fdtconf/fdtconf.c
+++ b/drivers/misc/netlogic/fdtconf/fdtconf.c
@@ -297,9 +297,9 @@ static ssize_t write_fdt(struct file *filep, struct kobject *kobj,
 			struct bin_attribute *bin_attr, char *buf,
 			loff_t pos, size_t size)
 {
-	int		err, k = 0, node, ret = size;
+	int		err, k = 0, node, ret = size, i = 0;
 	char		*path, *prop, *val, *p, *q, *path_value, *op;
-	uint32_t	value[16];
+	uint32_t	value[16], *ptr;
 
 
 	buf[size] = '\0';
@@ -406,15 +406,31 @@ static ssize_t write_fdt(struct file *filep, struct kobject *kobj,
 		 * Convert the string to integer at every delimiter.
 		 */
 		k = 0;
+		ptr = value;
 		while ((val = strsep(&p, " ")) != NULL) {
-			value[k] = simple_strtoul(&val[0], 0, 0);
+			ptr[0] = simple_strtoul(&val[0], 0, 0);
 			k++;
+			ptr++;
+			if (k == 16) {
+				ptr = kmalloc(4096, GFP_KERNEL);
+				if (ptr == NULL) {
+					ret = -ENOMEM;
+					goto out;
+				}
+				for (i = 0; i < 16; i++, ptr++)
+					ptr[0] = value[i];
+			}
 		}
-
-		err = fdt_setprop(fdt, node, prop, &value,
-					(k * sizeof(uint32_t)));
+		ptr -= k;
+		err = fdt_setprop(fdt, node, prop, ptr, (k * sizeof(uint32_t)));
 		if (err)
 			ret = err;
+
+		/*
+		 * Free the ptr if memory was allocated.
+		 */
+		if (ptr != value)
+			kfree(ptr);
 	} else if ((*p == '"') && (q = strchr(&val[1], '"'))) {
 		/* Strip the quotes */
 		*q = '\0';
-- 
1.9.1

