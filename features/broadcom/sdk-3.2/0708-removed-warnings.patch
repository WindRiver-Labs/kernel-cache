From bf1c34104d046e25a174865b7755a7da24b61517 Mon Sep 17 00:00:00 2001
From: Vikas Gupta <vikas.gupta@broadcom.com>
Date: Tue, 4 Jun 2013 09:54:02 -0700
Subject: [PATCH 0708/1532] removed warnings.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/syslib/include/nlm_hal.h | 26 +++++++++++++++----------
 1 file changed, 16 insertions(+), 10 deletions(-)

diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
index 0295f73..17cc7cc 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
@@ -223,12 +223,15 @@ inline static u32 xlp9xx_get_node_id(void)
 //node<0: use current cpu nodeid
 inline static volatile u32* xlp9xx_cpu_io_mmio(int node, u32 offset)
 {
-        if(node <0 ) node = xlp9xx_get_node_id();
+	volatile u32 * pcmu = NULL;
+	uint32_t busno;	
+        if(node <0 ) 
+		node = xlp9xx_get_node_id();
 
-        volatile u32 * pCmu = (volatile u32*)(DEFAULT_CPU_IO_BASE + ( (node&0x7) << 12) );
-        if( offset == BRIDGE ) return pCmu + 0x40;
+        pcmu = (volatile u32*)(DEFAULT_CPU_IO_BASE + ( (node&0x7) << 12) );
+        if( offset == BRIDGE ) return pcmu + 0x40;
 
-        u32 busno = (pCmu[6] >> 8 ) & 0xFF;  //get secondary bus number
+        busno = (pcmu[6] >> 8 ) & 0xFF;  //get secondary bus number
 
         return (volatile u32 *)(DEFAULT_CPU_IO_BASE + (busno<<20) + (offset) + HDR_OFFSET);
 }
@@ -236,12 +239,15 @@ inline static volatile u32* xlp9xx_cpu_io_mmio(int node, u32 offset)
 
 inline static volatile u32* xlp9xx_cpu_mem_base(u32 node, u32 offset)
 {
+	uint64_t phy;
 	volatile u32* mmio = xlp9xx_cpu_io_mmio(node, offset);
+	
 	mmio -= HDR_OFFSET/sizeof(u32);
-	u64 phy = mmio[4] ;
-	if( phy&1 ) phy &= ~((u64)3);	//io bar
-	else
-	{
+	phy = mmio[4] ;
+	
+	if( phy&1 ) 
+		phy &= ~((u64)3);	//io bar
+	else{
 		//64bits physical address
 		if( ((phy>>1) & 3) == 2 )  phy |= (u64)mmio[5] << 32;
 		phy &= ~((u64)0x7F);
@@ -256,9 +262,9 @@ static inline uint64_t __get_nae_soc_phys_base(int node, int nae_id)
 {
 	if(is_nlm_xlp9xx()){
 		if(nae_id==0)
-			return xlp9xx_cpu_mem_base(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_NAE0));
+			return (uint64_t)xlp9xx_cpu_mem_base(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_NAE0));
 		else
-			return xlp9xx_cpu_mem_base(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_NAE1));
+			return (uint64_t)xlp9xx_cpu_mem_base(node, XLP9XX_PCIE_DEV_BASE(XLP9XX_NAE1));
 	}else{
 		if(nae_id)
 			return 0;
-- 
1.9.1

