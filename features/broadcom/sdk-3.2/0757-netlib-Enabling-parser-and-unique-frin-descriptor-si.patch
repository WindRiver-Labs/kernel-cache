From 4baea2a38be0c239f676e0e90e4a81b033a8dae1 Mon Sep 17 00:00:00 2001
From: Jayanthi A <jayanthi.annadurai@broadcom.com>
Date: Thu, 25 Jul 2013 09:45:39 -0700
Subject: [PATCH 0757/1532] netlib: Enabling parser and unique frin descriptor
 size based on configuration given in dts file

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../netlogic/lib/netlib/include/netsoc_common.h    |  9 ++++
 .../netlogic/lib/netlib/include/netsoc_parser.h    | 12 ++++++
 arch/mips/netlogic/lib/netlib/include/nlm_nae.h    |  2 +
 arch/mips/netlogic/lib/netlib/src/netsoc_dbg.c     |  1 +
 arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c     | 49 ++++++++++++++++++++--
 arch/mips/netlogic/lib/netlib/src/netsoc_nae.c     | 21 ++++++++--
 arch/mips/netlogic/lib/syslib/include/xlp9xx_sys.h |  4 +-
 7 files changed, 90 insertions(+), 8 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
index b302c74..ad951b7 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
@@ -75,6 +75,9 @@
 #define DEFAULT_XLP9XX_XAUI_PARSERSEQFIFO_SZ	480
 #define DEFAULT_XLP9XX_XAUI_NUM_FREEDESC	300
 
+#define DEFAULT_XLP2XX_XAUI_IFACEFIFO_SZ        110
+#define DEFAULT_XLP2XX_XAUI_RXFIFO_SZ           1888
+#define DEFAULT_XLP2XX_XAUI_PARSERSEQFIFO_SZ    480
 
 
 typedef struct {
@@ -324,6 +327,9 @@ static inline uint32_t get_prsr_seq_fifo_size(uint32_t intf_type)
         case XLAUI_IF:
 		if (is_nlm_xlp9xx())
 			return DEFAULT_XLP9XX_XAUI_PARSERSEQFIFO_SZ;
+		if (is_nlm_xlp2xx())
+			return DEFAULT_XLP2XX_XAUI_PARSERSEQFIFO_SZ;
+
                 return DEFAULT_XAUI_PARSERSEQFIFO_SZ;
         case RXAUI_IF:
 		if(is_nlm_xlp9xx())
@@ -346,6 +352,9 @@ static inline uint32_t get_rx_buf_size(uint32_t intf_type)
         case XLAUI_IF:
  		if (is_nlm_xlp9xx())
  			return DEFAULT_XLP9XX_XAUI_RXFIFO_SZ;
+		if (is_nlm_xlp2xx())
+			return DEFAULT_XLP2XX_XAUI_RXFIFO_SZ;
+
                 return DEFAULT_XAUI_RXFIFO_SZ;
         case RXAUI_IF:
 		if(is_nlm_xlp9xx())
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_parser.h b/arch/mips/netlogic/lib/netlib/include/netsoc_parser.h
index 25d4961..fe27352 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_parser.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_parser.h
@@ -31,6 +31,18 @@
 #ifndef __BRCM_NETSOC_PARSER_H
 #define __BRCM_NETSOC_PARSER_H
 
+#define XLP_HWPAR_MAXKEY_LEN	40
+#define XLP_HWPAR_L2HDR_LEN	16  //L2 header extract length
+#define XLP_HWPAR_MAX_L2HDR	1   //number of areas of L2 header can be extracted
+
+#define XLP_HWPAR_L3HDR_LEN     16  //L3 header extract length
+#define XLP_HWPAR_MAX_L3HDR     3   //number of areas of L3 header can be extracted
+
+#define XLP_HWPAR_L4HDR_LEN     2   //L4 header extract length
+#define XLP_HWPAR_MAX_L4HDR     16   //number of areas of L4 header can be extracted 
+
+
+
 #define RX_PARSER_EN			12
 
 #define HWPAR_L2EXTLEN_MASK		0x3F
diff --git a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
index c0cd9d3..e0ec9bc 100644
--- a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
@@ -360,6 +360,8 @@ struct nlm_hal_nae_config {
 	uint32_t default_class;
         /* ALE */
         uint32_t ale_enable;
+	uint32_t parser_enable;
+	uint32_t freein_uniq_sz;
         /* POE */
 	poe_t *poe;
 };
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_dbg.c b/arch/mips/netlogic/lib/netlib/src/netsoc_dbg.c
index 8d9a0dd..bf7826e 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_dbg.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_dbg.c
@@ -101,6 +101,7 @@ int netsoc_print_nae_config(nae_t *nae)
 	netsoc_print_rxcal_config(nae);
 	netsoc_print_txcal_config(nae);
 	netsoc_print_freein_lifostatus(nae);
+	return 0;
 }
 
 
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c b/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
index e7a434c..409fd07 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
@@ -944,7 +944,7 @@ static void extract_complex_params(void *fdt, int intf_type, char *nae_port_str,
 	}
 
 	if (intf_type == SGMII_IF) {
-                if (is_nlm_xlp3xx() || is_nlm_xlp2xx()) {
+                if (is_nlm_xlp3xx()) {
                      for (i = 0 ; i < 4; i++) {
                         if (cmplx->prsr_seq_fifo_size[i] > XLP3XX_SGMII_PARSERSEQ_FIFO_MAX)
                                 cmplx->prsr_seq_fifo_size[i] = XLP3XX_SGMII_PARSERSEQ_FIFO_MAX;
@@ -1380,9 +1380,8 @@ int fdt_parse_netsoc_poe_config(void *fdt,poe_t *poe)
 
 int fdt_get_nae(void *fdt, nae_t *nae)
 {
-        int nodeoffset, plen;
+        int nodeoffset;
         char path_str[50];
-        uint32_t *pval;
 
 	sprintf(path_str, "/soc/net@node-%d/nae-%d", nae->node, nae->nae_id);
 
@@ -1432,6 +1431,47 @@ int fdt_get_nae_ale_config(void *fdt, nae_t *nae)
         return 0;
 }
 
+int fdt_get_nae_parser_config(void *fdt, nae_t *nae)
+{
+        int nodeoffset, plen;
+        char path_str[50];
+        uint32_t *pval;
+
+        sprintf(path_str, "/soc/net@node-%d/nae-%d", nae->node, nae->nae_id);
+        nodeoffset = fdt_path_offset(fdt, path_str);
+        if (nodeoffset >= 0) {
+              pval = (uint32_t *)fdt_getprop(fdt, nodeoffset, "parser-enable", &plen);
+              if (pval != NULL) {
+                      nae->parser_enable = fdt32_to_cpu(*(uint32_t *)(pval));
+              } 
+              else {  
+                      nae->parser_enable = 0;
+              }
+        }
+        return 0;
+}
+
+int fdt_get_nae_frindesc_mode(void *fdt, nae_t *nae)
+{
+        int nodeoffset, plen;
+        char path_str[50];
+        uint32_t *pval;
+
+        sprintf(path_str, "/soc/net@node-%d/nae-%d", nae->node, nae->nae_id);
+        nodeoffset = fdt_path_offset(fdt, path_str);
+        if (nodeoffset >= 0) {
+              pval = (uint32_t *)fdt_getprop(fdt, nodeoffset, "freein-unique-desc-size", &plen);
+              if (pval != NULL) {
+                      nae->freein_uniq_sz = fdt32_to_cpu(*(uint32_t *)(pval));
+              } 
+              else {  
+                      nae->freein_uniq_sz = 0;
+              }
+        }
+        return 0;
+}
+
+
 int fdt_parse_netsoc_nae_config(void *fdt, int dom_id, nae_t *nae)
 {
         if (is_nlm_xlp9xx()) {
@@ -1455,6 +1495,9 @@ int fdt_parse_netsoc_nae_config(void *fdt, int dom_id, nae_t *nae)
         if (current_netsoc->hw_features & NETSOC_ALE)
             fdt_get_nae_ale_config(fdt, nae);
 
+	fdt_get_nae_parser_config(fdt, nae);
+	fdt_get_nae_frindesc_mode(fdt, nae);
+
 	fdt_get_dom_nae_node_ownership(fdt, dom_id, nae);
 	fdt_extract_dom_nae_node_freein_fifo_info(fdt, dom_id, nae);
 
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index 3491efd..f31ba13 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -35,6 +35,7 @@
 #include "netsoc_haliface.h"
 #include "netsoc_libiface.h"
 #include "ext_phy.h"
+#include "xlp9xx_sys.h"
 
 static unsigned int ucore_shared_scratch[NLM_MAX_NODES][XLP9XX_MAX_NAE_PERNODE][128];
 static unsigned int ucore_shared_scratch_words[NLM_MAX_NODES][XLP9XX_MAX_NAE_PERNODE];
@@ -1411,7 +1412,11 @@ void __netsoc_set_frequency(nae_t *nae, uint32_t frequency)
 		NLM_HAL_DO_DIV(set_freq_d, mhz);
 		netsoc_api_print(NETSOC_APIDBG_DEFAULT, "NAE frequncy set to = %lluMhz", (unsigned long long)set_freq_d);
 		return;
-	}else{
+	}
+	else if (is_nlm_xlp9xx()) {
+		set_soc_frequency(nae->node, XLP9XX_CLKDEV_NET, (frequency * mhz));	
+	}
+	else{
         	/* Note that the DFS sets the NAE 2X frequency.
 	         * To set the NAE frequency, multiply by 2
         	 */
@@ -3863,7 +3868,7 @@ int __netsoc_init_nae(nae_t *nae)
 {
 	uint64_t bar0;
 	uint32_t tx_config, rx_config;
-        int retval = 0;
+        int retval = 0, frin_q;
 
 	if (nae->owned) {
 
@@ -3904,7 +3909,9 @@ int __netsoc_init_nae(nae_t *nae)
         	/* Disable RX enable bit in RX_CONFIG */
 	        rx_config = netsoc_read_nae_reg(nae->nae_base, RX_CONFIG);
         	rx_config &= 0xfffffffe;
-	        netsoc_write_nae_reg(nae->nae_base, RX_CONFIG, rx_config | (1<<31));
+		if (nae->freein_uniq_sz)
+			rx_config |= (1<<31);
+	        netsoc_write_nae_reg(nae->nae_base, RX_CONFIG, rx_config);
 
         	if (is_nlm_xlp8xx_ax() == 0) {
                 	tx_config = netsoc_read_nae_reg(nae->nae_base, TX_CONFIG);
@@ -3933,9 +3940,17 @@ int __netsoc_init_nae(nae_t *nae)
 
 		__netsoc_init_all_ports(nae);
 
+		if (nae->freein_uniq_sz) {
+		        for (frin_q = 0; frin_q < __netsoc_get_max_frinqs(); frin_q++) {
+                		__netsoc_write_fifo_size(nae, frin_q, nae->frin_desc_size[frin_q]);
+        		}
+		}
                 __netsoc_init_ingress(nae, 0);
                 __netsoc_init_egress(nae);
 
+		if (nae->parser_enable)
+			__netsoc_enable_nae_hwparser(nae);
+
                 if (nae->ale_enable)
                       __netsoc_config_ale_enable(nae);
                 else 
diff --git a/arch/mips/netlogic/lib/syslib/include/xlp9xx_sys.h b/arch/mips/netlogic/lib/syslib/include/xlp9xx_sys.h
index 37cc950..d1da0d2 100644
--- a/arch/mips/netlogic/lib/syslib/include/xlp9xx_sys.h
+++ b/arch/mips/netlogic/lib/syslib/include/xlp9xx_sys.h
@@ -192,7 +192,7 @@ static inline int set_nae_frequency(int node, uint64_t freq)
     uint32_t val, dev_id = XLP9XX_CLKDEV_NET;
     uint64_t sys_base = SYS_CLKDEV_BASE(node);
 
-    nlm_print("NAE frequency %d MHz\n",get_nae_frequency(node) / mhz);
+    nlm_print("NAE frequency %lld MHz\n",get_nae_frequency(node) / mhz);
 		
     if (freq == get_nae_frequency(node))
 	return 0;	
@@ -248,7 +248,7 @@ static inline int set_nae_frequency(int node, uint64_t freq)
       }
     }
 
-    nlm_print("NAE frequency %d MHz\n",get_nae_frequency(node) / mhz);
+    nlm_print("NAE frequency changed to %lld MHz\n",get_nae_frequency(node) / mhz);
     return 0;
 }
 
-- 
1.9.1

