From 0f070b58e80cd3481ebbf1d29a153dbd2143978f Mon Sep 17 00:00:00 2001
From: Hareesh Ramachandran <hareesh@lnx3-140.(none)>
Date: Thu, 28 Jul 2011 08:05:57 -0700
Subject: [PATCH 1523/1532] Crypto library and NLM RSA/ECC engine support in
 openssl

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/seclib/nlmcrypto_ifc.h | 74 +++++++++++++++++++++++++++
 1 file changed, 74 insertions(+)
 create mode 100644 arch/mips/netlogic/lib/seclib/nlmcrypto_ifc.h

diff --git a/arch/mips/netlogic/lib/seclib/nlmcrypto_ifc.h b/arch/mips/netlogic/lib/seclib/nlmcrypto_ifc.h
new file mode 100644
index 0000000..7621a47
--- /dev/null
+++ b/arch/mips/netlogic/lib/seclib/nlmcrypto_ifc.h
@@ -0,0 +1,74 @@
+/*********************************************************************
+
+  Copyright 2003-2010 Netlogic Microsystem, Inc. ("Netlogic"). All rights
+  reserved.
+
+  Redistribution and use in source and binary forms, with or without
+  modification, are permitted provided that the following conditions
+  are met:
+
+  1. Redistributions of source code must retain the above copyright
+  notice, this list of conditions and the following disclaimer.
+  2. Redistributions in binary form must reproduce the above copyright
+  notice, this list of conditions and the following disclaimer in
+  the documentation and/or other materials provided with the
+  distribution.
+
+  THIS SOFTWARE IS PROVIDED BY Netlogic Microsystems, Inc. ``AS IS'' AND
+  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RMI OR CONTRIBUTORS BE LIABLE
+  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+  THE POSSIBILITY OF SUCH DAMAGE.
+
+  *****************************#NLM_2#**********************************/
+#ifndef _NLM_CRYPTO_IFC_H
+#define _NLM_CRYPTO_IFC_H
+
+extern void *linuxu_shvaddr;
+extern unsigned long long linuxu_shoff;
+
+static inline unsigned long long crypto_virt_to_phys(void *vaddr)
+{
+	return (unsigned long long)((vaddr - linuxu_shvaddr) + linuxu_shoff);
+}
+
+static inline void *crypto_phys_to_virt(unsigned long long paddr)
+{
+	return (void *)((paddr - linuxu_shoff) + linuxu_shvaddr);
+}
+
+#ifdef CRYPTO_API_INCLUDE /* This is defined by cryptoapi */
+
+/* This portion is not exported to the appplication,
+ application should call nlm_crypto_malign and nlm_crypto_mfree */
+
+#include "contig_alloc.h"
+
+#define crypto_malign(align, size) contig_malign(align, size)
+#define crypto_mfree(p) contig_free(p)
+
+/* Application specific lib init function, should be provided by all */
+static inline int nlm_crypto_app_lib_init(int *sae_rx_vc, int *sae_rx_sync_vc, void **pcpu_sync_lock_ptr)
+{
+	extern int nlm_crypto_app_linuxu_init(int *sae_rx_vc, int *sae_rx_sync_vc, void **pcpu_sync_lock_ptr);
+#ifdef NLM_CRYPTO_HELINUX
+	extern void fdt_get_sae_vc_map(int *asyncvc, int *syncvc);
+	unsigned long long virtstart, physstart;
+	if (contig_pinfo(&virtstart, &physstart) < 0)
+		return -1;
+	linuxu_shvaddr = (void *)virtstart;
+	linuxu_shoff = physstart;
+	fdt_get_sae_vc_map(sae_rx_vc, sae_rx_sync_vc);
+#endif
+	return nlm_crypto_app_linuxu_init(sae_rx_vc, sae_rx_sync_vc, pcpu_sync_lock_ptr);
+}
+
+#endif /* CRYPTO_API_INCLUDE */
+
+#endif
-- 
1.9.1

