From 0a5c6848c34b3899451dde2c2e6c4fa7ffee8025 Mon Sep 17 00:00:00 2001
From: Alok Agrawat <alok@broadcom.com>
Date: Mon, 3 Jun 2013 17:55:01 -0700
Subject: [PATCH 0705/1532] xlp9xx: nlm_hal_init is modified for xlp9xx

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../netlogic/lib/netlib/include/netsoc_common.h    |   3 +-
 arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c     |   4 +-
 .../netlogic/lib/netlib/src/nlm_hal_vsemi_config.c | 126 ++++++++++-----------
 arch/mips/netlogic/lib/syslib/src/nlm_hal.c        |  86 +++++---------
 4 files changed, 93 insertions(+), 126 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
index 8a44eb2..b99e796 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
@@ -65,8 +65,7 @@
 
 
 #define DEFAULT_SGMII_CAL_SLOTS         3
-//#define DEFAULT_XAUI_CAL_SLOTS          13
-#define DEFAULT_XAUI_CAL_SLOTS          5
+#define DEFAULT_XAUI_CAL_SLOTS          13
 #define DEFAULT_ILK_CAL_SLOTS           26
 #define DEFAULT_XFI_CAL_SLOTS          7
 #define DEFAULT_XLAUI_CAL_SLOTS                13
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
index a95a985..6b23a11 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
@@ -611,13 +611,13 @@ void xlp9xx_nae_write_pma2p0_mem(uint64_t mac_base, int block, int xgmii_speed,
 				 vsemi_cmd |= vsemi_mem_10G_lane_4page[reg_addr];	
 			}
                         if(phy_mode==PHYMODE_SGMII){
-				printf("xlp9xx_nae_write_pma2p0_mem vsemi_mem_sgmii_4page[%d]= 0x%x\n", reg_addr ,vsemi_mem_sgmii_4page[reg_addr]);
+				//printf("xlp9xx_nae_write_pma2p0_mem vsemi_mem_sgmii_4page[%d]= 0x%x\n", reg_addr ,vsemi_mem_sgmii_4page[reg_addr]);
                                 vsemi_cmd |= vsemi_mem_sgmii_4page[reg_addr];
                         }
                         __netsoc_write_vsemi_reg(mac_base, lane_no, reg_addr, vsemi_cmd);
                 }
         }
-	printf("SGMII 4 page programming done\n");
+	//printf("SGMII 4 page programming done\n");
         /*configure only page 4*/
         for (reg_addr=101; reg_addr <165; reg_addr++){
                 vsemi_cmd=0;
diff --git a/arch/mips/netlogic/lib/netlib/src/nlm_hal_vsemi_config.c b/arch/mips/netlogic/lib/netlib/src/nlm_hal_vsemi_config.c
index e365c8d..6671745 100644
--- a/arch/mips/netlogic/lib/netlib/src/nlm_hal_vsemi_config.c
+++ b/arch/mips/netlogic/lib/netlib/src/nlm_hal_vsemi_config.c
@@ -393,69 +393,69 @@ void nlm_hal_config_vsemi_mem_12G_125(void)
 void nlm_hal_config_vsemi_mem_xaui(void)
 {
 	vsemi_mem_xaui[101] = 0xAA;
-    vsemi_mem_xaui[102] = 0x0;
-    vsemi_mem_xaui[103] = 0x6C;
-    vsemi_mem_xaui[104] = 0xBF;
-    vsemi_mem_xaui[105] = 0xBF;
-    vsemi_mem_xaui[106] = 0xA;
-    vsemi_mem_xaui[107] = 0xA;
-    vsemi_mem_xaui[108] = 0xE;
-    vsemi_mem_xaui[109] = 0xE;
-    vsemi_mem_xaui[110] = 0x7;
-    vsemi_mem_xaui[111] = 0xC;
-    vsemi_mem_xaui[112] = 0x10;
-    vsemi_mem_xaui[113] = 0x0;
-    vsemi_mem_xaui[114] = 0x10;
-    vsemi_mem_xaui[115] = 0x0;
-    vsemi_mem_xaui[116] = 0xFF;
-    vsemi_mem_xaui[117] = 0xB3;
-    vsemi_mem_xaui[118] = 0xF6;
-    vsemi_mem_xaui[119] = 0xD0;
-    vsemi_mem_xaui[120] = 0xEF;
-    vsemi_mem_xaui[121] = 0xFB;
-    vsemi_mem_xaui[122] = 0xFF;
-    vsemi_mem_xaui[123] = 0xFF;
-    vsemi_mem_xaui[124] = 0xFF;
-    vsemi_mem_xaui[125] = 0xFF;
-    vsemi_mem_xaui[126] = 0xFF;
-    vsemi_mem_xaui[127] = 0xD3;
-    vsemi_mem_xaui[128] = 0xD3;
-    vsemi_mem_xaui[129] = 0xE2;
-    vsemi_mem_xaui[130] = 0xEF;
-    vsemi_mem_xaui[131] = 0xFB;
-    vsemi_mem_xaui[132] = 0xFB;
-    vsemi_mem_xaui[133] = 0xFF;
-    vsemi_mem_xaui[134] = 0xEF;
-    vsemi_mem_xaui[135] = 0xFF;
-    vsemi_mem_xaui[136] = 0xFF;
-    vsemi_mem_xaui[137] = 0xD3;
-    vsemi_mem_xaui[138] = 0xD3;
-    vsemi_mem_xaui[139] = 0xE2;
-    vsemi_mem_xaui[140] = 0xEF;
-    vsemi_mem_xaui[141] = 0xFB;
-    vsemi_mem_xaui[142] = 0xFB;
-    vsemi_mem_xaui[143] = 0xFF;
-    vsemi_mem_xaui[144] = 0xEF;
-    vsemi_mem_xaui[145] = 0xFF;
-    vsemi_mem_xaui[146] = 0xFF;
-    vsemi_mem_xaui[147] = 0xFB;
-    vsemi_mem_xaui[148] = 0xFF;
-    vsemi_mem_xaui[149] = 0x3F;
-    vsemi_mem_xaui[150] = 0x0;
-    vsemi_mem_xaui[151] = 0x64;
-    vsemi_mem_xaui[152] = 0x0;
-    vsemi_mem_xaui[153] = 0x2;
-    vsemi_mem_xaui[154] = 0x1;
-    vsemi_mem_xaui[155] = 0x5;
-    vsemi_mem_xaui[156] = 0x5;
-    vsemi_mem_xaui[157] = 0x4;
-    vsemi_mem_xaui[158] = 0x0;
-    vsemi_mem_xaui[159] = 0x0;
-    vsemi_mem_xaui[160] = 0x8;
-    vsemi_mem_xaui[161] = 0x4;
-    vsemi_mem_xaui[162] = 0x0;
-    vsemi_mem_xaui[163] = 0x0;
-    vsemi_mem_xaui[164] = 0x4;
+	vsemi_mem_xaui[102] = 0x0;
+	vsemi_mem_xaui[103] = 0x6C;
+	vsemi_mem_xaui[104] = 0xBF;
+	vsemi_mem_xaui[105] = 0xBF;
+	vsemi_mem_xaui[106] = 0xA;
+	vsemi_mem_xaui[107] = 0xA;
+	vsemi_mem_xaui[108] = 0xE;
+	vsemi_mem_xaui[109] = 0xE;
+	vsemi_mem_xaui[110] = 0x7;
+	vsemi_mem_xaui[111] = 0xC;
+	vsemi_mem_xaui[112] = 0x10;
+	vsemi_mem_xaui[113] = 0x0;
+	vsemi_mem_xaui[114] = 0x10;
+	vsemi_mem_xaui[115] = 0x0;
+	vsemi_mem_xaui[116] = 0xFF;
+	vsemi_mem_xaui[117] = 0xB3;
+	vsemi_mem_xaui[118] = 0xF6;
+	vsemi_mem_xaui[119] = 0xD0;
+	vsemi_mem_xaui[120] = 0xEF;
+	vsemi_mem_xaui[121] = 0xFB;
+	vsemi_mem_xaui[122] = 0xFF;
+	vsemi_mem_xaui[123] = 0xFF;
+	vsemi_mem_xaui[124] = 0xFF;
+	vsemi_mem_xaui[125] = 0xFF;
+	vsemi_mem_xaui[126] = 0xFF;
+	vsemi_mem_xaui[127] = 0xD3;
+	vsemi_mem_xaui[128] = 0xD3;
+	vsemi_mem_xaui[129] = 0xE2;
+	vsemi_mem_xaui[130] = 0xEF;
+	vsemi_mem_xaui[131] = 0xFB;
+	vsemi_mem_xaui[132] = 0xFB;
+	vsemi_mem_xaui[133] = 0xFF;
+	vsemi_mem_xaui[134] = 0xEF;
+	vsemi_mem_xaui[135] = 0xFF;
+	vsemi_mem_xaui[136] = 0xFF;
+	vsemi_mem_xaui[137] = 0xD3;
+	vsemi_mem_xaui[138] = 0xD3;
+	vsemi_mem_xaui[139] = 0xE2;
+	vsemi_mem_xaui[140] = 0xEF;
+	vsemi_mem_xaui[141] = 0xFB;
+	vsemi_mem_xaui[142] = 0xFB;
+	vsemi_mem_xaui[143] = 0xFF;
+	vsemi_mem_xaui[144] = 0xEF;
+	vsemi_mem_xaui[145] = 0xFF;
+	vsemi_mem_xaui[146] = 0xFF;
+	vsemi_mem_xaui[147] = 0xFB;
+	vsemi_mem_xaui[148] = 0xFF;
+	vsemi_mem_xaui[149] = 0x3F;
+	vsemi_mem_xaui[150] = 0x0;
+	vsemi_mem_xaui[151] = 0x64;
+	vsemi_mem_xaui[152] = 0x0;
+	vsemi_mem_xaui[153] = 0x2;
+	vsemi_mem_xaui[154] = 0x1;
+	vsemi_mem_xaui[155] = 0x5;
+	vsemi_mem_xaui[156] = 0x5;
+	vsemi_mem_xaui[157] = 0x4;
+	vsemi_mem_xaui[158] = 0x0;
+	vsemi_mem_xaui[159] = 0x0;
+	vsemi_mem_xaui[160] = 0x8;
+	vsemi_mem_xaui[161] = 0x4;
+	vsemi_mem_xaui[162] = 0x0;
+	vsemi_mem_xaui[163] = 0x0;
+	vsemi_mem_xaui[164] = 0x4;
 
 	return;
 }
diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
index b7ec3fa..d2a35c7 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
@@ -88,7 +88,6 @@ static __inline__ unsigned int power_on_reset_cfg(void)
 	return nlh_read_cfg_reg32(0x18035104);
 }
 
-#define PCI_MEM_BAR_0 0x4
 #define PCIE_CONTROL_0 0x240
 
 /**
@@ -401,79 +400,48 @@ __inline__ void nlm_hal_init(void)
 
         	/* PCI enumeration of supported devices*/
 
-#if 0
-		/* FIXME: this is a workaround for simulator, once uboot is ready for simulator,
-		 * the below should be removed.
-		 */
 		if (is_nlm_xlp9xx()) {
-			uint32_t fmn_bar = 0xd0000000;
-
-			nlm_hal_write_32bit_reg((0x18000000 | (1 << 20) | XLP_CFG_BASE(0, XLP_FMN)), 0x4, fmn_bar);
-			nlm_hal_write_32bit_reg((0x18000000 | (1 << 20) | XLP_CFG_BASE(0, XLP_FMN)), 0x5, 0x0);
-			xlp_fmn_base[0] = 0x9000000000000000ULL | fmn_bar;
+			xlp_mac_base[node] = (uint64_t)xlp9xx_cpu_mem_base(-1, XLP9XX_PCIE_DEV_BASE(XLP_NAE));
+			xlp_fmn_base[node] = (uint64_t)xlp9xx_cpu_mem_base(-1, XLP9XX_PCIE_DEV_BASE(XLP_FMN));
+			xlp_nae_base[node] = xlp_mac_base[node] + 0xe000;
 
-			xlp_mac_base[0] = 0x0;
-			xlp_nae_base[0] = 0x0;
-			xlp_nae_base[0] = 0x0;
+			xlp_poe_base_pcim[node] = (uint64_t)xlp9xx_cpu_mem_base(-1, XLP9XX_PCIE_DEV_BASE(XLP_POE));
+			xlp_poe_base_pcie[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_POE)) & 0x1fffffff; /* For now . Will be fixed soon.*/
+			xlp_sys_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE( XLP_SYS)) & 0x1fffffff; /*For now . Will be fixed soon.*/
 		} else 
-#endif
 		{
-			//xlp_fmn_base[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_CFG_BASE(node, XLP_FMN)), PCI_MEM_BAR_0);
-
-			//xlp_mac_base[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_CFG_BASE(node, XLP_NAE)), PCI_MEM_BAR_0); //0x18018000
-		
-			xlp_nae_base[node] = xlp_mac_base[node] + 0xe000;
-
-			xlp_fmn_base[node] = (1<<20)+ 0x18000000 + (4<<15)  ;
-			xlp_mac_base[node] = (1<<20)+ 0x18000000 + (3<<15) ;
-			xlp_nae_base[node] = xlp_mac_base[node] + 0xe000;
-		printf("Node:%d NAE_fmn_Base:%lX\n", node, xlp_fmn_base[node]);
-		printf("Node:%d NAE_NAE_Base:%lX\n", node, xlp_nae_base[node]);
-		printf("Node:%d NAE_MAC_Base:%lX\n", node, xlp_mac_base[node]);
+			xlp_fmn_base[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(node, XLP_FMN)), PCI_MEM_BAR_0);
 
-			xlp_mac_base[node] = xlp9xx_cpu_mem_base(-1, XLP9XX_PCIE_DEV_BASE(XLP_NAE));
-			xlp_fmn_base[node] = xlp9xx_cpu_mem_base(-1, XLP9XX_PCIE_DEV_BASE(XLP_FMN));
+			xlp_mac_base[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(node, XLP_NAE)), PCI_MEM_BAR_0); //0x18018000
 			xlp_nae_base[node] = xlp_mac_base[node] + 0xe000;
-		printf("After Node:%d NAE_fmn_Base:%lX\n", node, xlp_fmn_base[node]);
-		printf("Node:%d NAE_NAE_Base:%lX\n", node, xlp_nae_base[node]);
-		printf("Node:%d NAE_MAC_Base:%lX\n", node, xlp_mac_base[node]);
 			
-
-
-			xlp_poe_base_pcim[node] = mask & nlm_hal_read_32bit_reg(( (1<<20) +0x18000000 + XLP9XX_PCIE_DEV_BASE( XLP_POE)), PCI_MEM_BAR_0);	//0x18019000
-			xlp_poe_base_pcim[node] = (1<<20)+ 0x18000000 + (3<<15) + (1<<12) +0;	//0x18019000
-			xlp_poe_base_pcim[node] = xlp9xx_cpu_mem_base(-1, XLP9XX_PCIE_DEV_BASE(XLP_POE));
+			xlp_poe_base_pcie[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_POE)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 			
-		printf("After modify xlp_xlp_poe_base_pcim is = 0x%llx\n", xlp_poe_base_pcim);
-		}
+			xlp_poe_base_pcim[node] = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(node, XLP_POE)), PCI_MEM_BAR_0);	//0x18019000
+			
+			xlp_sys_base[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_SYS)) & 0x1fffffff; /*For now . Will be fixed soon.*/
+			xlp_sae_base[node] = (xlp_io_base | XLP_PCIE_DEV_BASE(node, XLP_SAE)) & 0x1fffffff; /* For now . Will be fixed soon.*/
 
-		xlp_poe_base_pcie[node] = xlp_io_base | XLP9XX_PCIE_DEV_BASE(XLP_POE) & 0x1fffffff; /* For now . Will be fixed soon.*/
-		xlp_poe_base_pcie[node] = xlp_io_base + xlp_poe_base_pcim[node] & 0x1fffffff; 
-		printf("xlp_poe_base_pcie is = 0x%llx\n", xlp_poe_base_pcie);
+		}
 
-		xlp_sys_base[node] = (xlp_io_base | XLP9XX_PCIE_DEV_BASE( XLP_SYS)) & 0x1fffffff; /*For now . Will be fixed soon.*/
-		xlp_sys_base[node] = xlp_io_base | (unsigned long long)xlp9xx_cpu_mem_base(-1, XLP9XX_PCIE_DEV_BASE( XLP_SYS));
-		printf("xlp_sys_base[node] is = 0x%llx\n", xlp_sys_base);
-		
-		//xlp_sae_base[node] = (xlp_io_base | XLP_CFG_BASE(node, XLP_SAE)) & 0x1fffffff; /* For now . Will be fixed soon.*/
+	}
+	if(!is_nlm_xlp9xx()){
+		xlp_rsa_base = (xlp_io_base | XLP_PCIE_DEV_BASE(0, XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
+		if ( is_nlm_xlp3xx() || is_nlm_xlp2xx() ) {
+			xlp_regex_base_pcie = (xlp_io_base | (XLP_PCIE_DEV_BASE(0, XLP_3XX_REGEX))) & 0x1fffffff;
+			xlp_regex_base_pcim = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_PCIE_DEV_BASE(0, XLP_3XX_REGEX)), PCI_MEM_BAR_0);
+			nlm_print("xlp3xx/2xx Regex (netl7) vendor_device id:%#x\n"
+					"xlp_regex_base_pcim:%#lx\n"
+					"xlp_regex_base_pcie:%#lx\n",
+					nlm_hal_read_32bit_reg(xlp_regex_base_pcie, 0),
+					xlp_regex_base_pcim, xlp_regex_base_pcie);
+		}
 	}
 
-#if 0
-        xlp_rsa_base = (xlp_io_base | XLP_CFG_BASE(0, XLP_RSA)) & 0x1fffffff; /* For now . Will be fixed soon.*/
-	if ( is_nlm_xlp3xx() || is_nlm_xlp2xx() ) {
-		xlp_regex_base_pcie = (xlp_io_base | (XLP_CFG_BASE( XLP_3XX_REGEX))) & 0x1fffffff;
-	        xlp_regex_base_pcim = mask & nlm_hal_read_32bit_reg((0x18000000 + XLP_CFG_BASE(0, XLP_3XX_REGEX)), PCI_MEM_BAR_0);
-		nlm_print("xlp3xx/2xx Regex (netl7) vendor_device id:%#x\n"
-			"xlp_regex_base_pcim:%#lx\n"
-			"xlp_regex_base_pcie:%#lx\n",
-			nlm_hal_read_32bit_reg(xlp_regex_base_pcie, 0),
-			xlp_regex_base_pcim, xlp_regex_base_pcie);
-       	}
-#endif
 
 #if !defined(NLM_HAL_UBOOT)
 #ifndef CONFIG_N511
-        	nlm_hal_cpld_init(0);
+	nlm_hal_cpld_init(0);
 #endif
 #endif
 
-- 
1.9.1

