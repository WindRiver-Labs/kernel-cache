From 48fd277a855761016ab192de173474d47d6f9161 Mon Sep 17 00:00:00 2001
From: Shashank Shekhar <shekhars@broadcom.com>
Date: Wed, 30 Apr 2014 03:59:35 -0700
Subject: [PATCH 0962/1532] nae: updated Interlaken PLL reset function.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c | 37 +++++++-------------------
 1 file changed, 10 insertions(+), 27 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
index ae5e30f..b2bb31e 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
@@ -462,40 +462,23 @@ static void xlp2xx_lane_reset_txpll(nae_t *nae, int block, int lane_ctrl, int mo
 
 static void xlp8xxbx_ilkport_reset_txpll(nae_t *nae, uint32_t ilk_block_base, uint32_t max_block)
 {
-	uint32_t block, lane, val, rext_sel, i;
+	uint32_t block, lane;
 	uint64_t mac_base;
-
+        uint32_t F_div, N_div, M_div;
         for(block = ilk_block_base; block < max_block ; block++) {
 		mac_base = netsoc_get_macreg_base_for_phy(nae->mac_base, block);
         	for (lane = PHY_LANE_0_CTRL; lane <= PHY_LANE_3_CTRL; lane++) {
-               		if (lane != 4)
-                       		rext_sel = (1 << PHY_LANE_CTRL_REXSEL_POS);
-                        else
-                                rext_sel = 0;
-                        val = PHY_LANE_CTRL_RESET_PMA | (PHYMODE_IL << PHY_LANE_CTRL_PHYMODE_POS) |
-                                          PHY_LANE_CTRL_BPC_XAUI | PHY_LANE_CTRL_PWRDOWN | rext_sel;
-                        val &= ~(PHY_LANE_CTRL_RST);
-                        netsoc_write_mac_reg(mac_base, lane,val);
-                }
+                        xlp3xx_8xxb0_lane_reset_txpll(nae, block, lane, PHYMODE_IL);
 
-                for (i=0; i< 0x100000; ++i);
+                        /* For PCIe, XAUI, SGMII, ICI and Interlaken blocks, PLL logic uses three dividers
+                         * The values of these three dividers F_div,N_div,M_div are 0,19,0 respectively.
+                         * For Interlaken the value of N_div is 19.
+			 */
+                        F_div=0; N_div=19; M_div=0;
 
-                for (lane = PHY_LANE_0_CTRL; lane <= PHY_LANE_3_CTRL; lane++) {
- 	               __netsoc_set_PLL(nae, block, lane, 0, 19, 0);
+                        __netsoc_set_PLL(nae, block, lane, F_div, N_div, M_div);
                 }
-
-       		for (lane = PHY_LANE_0_CTRL; lane <= PHY_LANE_3_CTRL; lane++) {
-               		val = netsoc_read_mac_reg(mac_base, lane);
-                        val |= PHY_LANE_CTRL_RST; /* Bit30: epcs reset */
-                        netsoc_write_mac_reg(mac_base, lane,val);
-                        netsoc_api_print(NETSOC_APIDBG_PORT," After serdes  de-assertion PMA value=0x%x\n", val);
-                        /* Clear the Power Down bit */
-                        val = netsoc_read_mac_reg(mac_base, lane);
-                        val &= ~(PHY_LANE_CTRL_PWRDOWN  | (0x7ffff)) ;
-                        netsoc_write_mac_reg(mac_base, lane,  val);
-                        netsoc_api_print(NETSOC_APIDBG_PORT,"Reset PLL done \n");
-        	}
-	}
+	}     
 }
 
 static void xlp8xxax_ilkport_reset_txpll(nae_t *nae, uint32_t ilk_block_base, uint32_t max_block)
-- 
1.9.1

