From 31627b0c2a4aad6a44ecf4ca8eea010db5d7cb19 Mon Sep 17 00:00:00 2001
From: Tanmay Jagdale <tanmayj@broadcom.com>
Date: Tue, 24 Jun 2014 15:28:46 +0530
Subject: [PATCH 0550/1532] xlp-config: Created a xlp-config.dts file

Created a generic dts file that contains parameters needed to run most
of the modules and applications.
The following files are used to create the generic dts file :
 xlp-generic.dts, generic-fmn.dts, generic-nae.dts
This dts file does not contain the following sections :
   - hypervisor
   - uart (in dom section)
   - pic (in dom section)
   - kernel (in dom section)
   - memory (in dom section)
The following parameters are also removed since they are no longer used :
   - heap_size
   - domain_heap
   - app_load_addr
   - app_launch_mode
The 'memory' and 'pktmem' sections have also been removed since all the
memory required for the applications is allocated by the linux kernel.

Ucore code is generated and stored in a specific format so that it
can be loaded easily in the dtb at runtime.
No default ucore code is loaded in the xlp-generic.dtb at compile time.
*.hex files are not deleted.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/boot/dts/generic-fmn.dtsi |  53 ++
 arch/mips/boot/dts/generic-nae.dtsi | 990 ++++++++++++++++++++++++++++++++++++
 arch/mips/boot/dts/xlp-config.dts   | 217 ++++++++
 3 files changed, 1260 insertions(+)
 create mode 100644 arch/mips/boot/dts/generic-fmn.dtsi
 create mode 100644 arch/mips/boot/dts/generic-nae.dtsi
 create mode 100644 arch/mips/boot/dts/xlp-config.dts

diff --git a/arch/mips/boot/dts/generic-fmn.dtsi b/arch/mips/boot/dts/generic-fmn.dtsi
new file mode 100644
index 0000000..9af7f81
--- /dev/null
+++ b/arch/mips/boot/dts/generic-fmn.dtsi
@@ -0,0 +1,53 @@
+fmn@node-0 {
+	default-credits = <50>;
+	default-queue-size = <28672>;
+	fmn-spill-mem-base = <0x0 0x0>; /*0 - dynamic allocation, only for 64 bit linux */
+	fmn-spill-mem-size = <0x00000000 0x02000000>;
+
+	q-config {
+		/*
+		 * Credits from station
+		 * ------------------------------------------------------------------------------
+		 * CPU POPQ PCIE0 PCIE1 PCIE2 PCIE3 GDX GDX1 RSA CRYPTO CMP POE NAE REGX SRIO LZS
+		 * ------------------------------------------------------------------------------
+		 * The order and number of station should match with the list given above.
+		 * A zero value indicates DEFAULT credits.
+		 * Right now there is no way to configure credit of zero.
+		 */
+
+		cpu {
+			queue-size = <36864>; /* queue size for all the cpu vcs */
+			credits-from {
+				node-0 = <0 0 0 0 0 0 0 0 0 0 0 500 0 0 150 0>;
+			};
+		};
+
+		nae {
+			credits-from {
+				node-0 = <100 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+			};
+		};
+
+		srio {
+			credits-from {
+				node-0 = <150 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+			};
+		};
+	};
+};
+
+fmn@node-1 {
+	default-credits = <50>;
+	default-queue-size = <28672>;
+	fmn-spill-mem-base = <0x0 0x0>; /* 0 - dynamic allocation */
+	fmn-spill-mem-size = <0x00000000 0x02000000>;
+
+	q-config {
+	};
+};
+
+fmn@node-2 {
+};
+
+fmn@node-3 {
+};
diff --git a/arch/mips/boot/dts/generic-nae.dtsi b/arch/mips/boot/dts/generic-nae.dtsi
new file mode 100644
index 0000000..ad2cc8a
--- /dev/null
+++ b/arch/mips/boot/dts/generic-nae.dtsi
@@ -0,0 +1,990 @@
+nae@node-0 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	/*
+	 * Create a skeleton structure to load the ucore code at runtime.
+	 */
+	ucore {
+		src@1 {
+			opcodes = <0x0>;
+			mask = <0xffff>;	/* Default mask, can be changed at runtime */
+			num-opcodes = <0x0>;
+		};
+	};
+
+	freein-fifo-config {
+		/*
+		 * 1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+		 * 2. On chip desc size per queue will be configured from arry below
+		 * If spill descs per queue is specified,
+		 * 1. spill will be enabled for all the queues(except mgmt) using the spill memory specified
+		 *	in the OS config file.
+		 **/
+		freein-fifo-spill-mem-range = <0x0 0x0 0x0 0x00200000>; /* spill address is allocated dynamically */
+		freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>;
+		freein-fifo-spill-num-descs = <1200>;
+		/*
+		 * If port-fifo-en is not specified(0/1), it will be set to 1
+		 * while building the linux dtb file. For all the othercases it will be set to 0.
+		 * See build-dtb.sh. If required, user can explicitly set the value here.
+		 */
+		port-fifo-en = <1>;
+	};
+
+	/* VFBID MAP: Upto 127 entries
+	 * (each entry is a pair of (vfbid , dest-vc)
+	 * Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	 */
+	vfbid-config {
+	};
+
+	/* Packet Ordering Engine (POE) */
+	poe {
+
+		mode = "bypass";
+
+		distribution-enable = <1>;
+		/* 16 bit mask */
+		dist-drop-enable = <0>;
+		/* 8 bit mask */
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+		class-map-mode = <0>;	/* 0:All NAE, 1:Class 7-4 reserved for CPU, 2:Class 7-5 reserved for CPU,
+					 * 3:Class 7-6 reserved for CPU, 4:Class 7 reserved for CPU
+					 */
+
+		/*
+		poe-spill-address = <0xec00000>;
+		poe-spill-length = <0x10000>;
+		 */
+		/* Commenting the actual value to be given to
+		 * POE as POE is not getting called in the regular case
+		 */
+		poe-spill-address = <0x0>;
+		poe-spill-length = <0x0>;
+
+		/*
+		 * Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		 * Format : 512-bit-vector is specified as 16 32-bit words
+		 * Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		 * Each word has the MSB select higer vc number and LSB select lower vc num
+		 */
+		distribution_vectors {
+					dv0 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+					dv1 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv2 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv3 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv4 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv5 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv6 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv7 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv8 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv9 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+		};
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+
+			/* Max ingress fifo size 256 units (size of one unit is 64 byte) */
+			iface-fifo-size = <55>;
+			submode = <0>;
+			/* Max parser sequence fifo size 1024 packets */
+			/* (if 1588 Timestamp is not required, then max size increases to 2048) */
+			parser-sequence-fifo-size = <225>;
+
+			/* Since rx_buffer is per context, the buffer size given here will be divided by num-channels */
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <0>;
+			ext-phy-bus = <1>;
+
+			/* Max available descriptors are 1024 (across all complexes). */
+			/* Per port num_free_descriptors must be even number */
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			/* xlp3xx has 8 Ucores. So, ucore_mask for xlp3xx is (ucore-mask & 0xFF) */
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>;
+			/* To enable change it to <1> */
+			msec-port-enable = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+			/* 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell */
+			submode = <2>;
+			/* 0: disable ; 1: enable */
+			scrambler = <0>;
+
+			/* Max ingress fifo size 256 units (size of one unit is 64 byte) */
+			iface-fifo-size = <55>;
+
+			/* Max parser sequence fifo size 1024 packets */
+			/* (if 1588 Timestamp is not required, then max size increases to 2048) */
+			parser-sequence-fifo-size = <225>;
+
+			/* Since rx_buffer is per context, the buffer size given here will be divided by num-channels */
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <0>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+			/* To enable change it to <1> */
+			msec-port-enable = <0>;
+		};
+		sgmii {
+			loopback = <0 0 0 0>;
+			mgmt-port = <0 0 0 0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13 13 13>;
+
+			ext-phy-addr = <4 7 6 5>;
+			ext-phy-bus = <1 1 1 1>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1 1 1>;
+			parser-sequence-fifo-size = <62 62 62 62>;
+
+			rx-buffer-size = <128 128 128 128>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52 52 52>;
+			free-desc-size = <2048 2048 2048 2048>;
+			ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable = <0x0>;
+		};
+		interlaken {
+			//select daughter board : cortina or loopback
+			db = "cortina";
+
+			loopback = <0>;
+
+			// Maximum number of lanes per interface = 8 (from 2 complexes)
+			num-lanes = <4>;
+			// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+			lane-rate = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <110>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <4>;
+			rx-buffer-size = <1840>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <300>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+			submode = <0>;
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <4>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>;
+			/* To enable change it to <1> */
+			msec-port-enable = <0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+			// 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+			submode = <2>;
+			// 0: disable ; 1: enable
+			scrambler = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <4>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			/* To enable change it to <1> */
+			msec-port-enable = <0>;
+		};
+		sgmii {
+			loopback = <0 0 0 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13 13 13>;
+
+			ext-phy-addr = <8 11 10 9>;
+			ext-phy-bus = <1 1 1 1>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1 1 1>;
+			parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128 128 128>;
+
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52 52 52>;
+			free-desc-size = <2048 2048 2048 2048>;
+			ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+			/* To enable change it to <0xf> . 0xf = 1111, enable 4 ports in one complex*/
+			msec-port-enable = <0x0>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+						submode = <0>;
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+						ext-phy-addr = <8>;
+						ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+			// 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+			submode = <2>;
+			// 0: disable ; 1: enable
+			scrambler = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+						ext-phy-addr = <8>;
+			ext-phy-bus = <1>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+
+		interlaken {
+			//select daughter board : cortina or loopback
+			db = "cortina";
+
+			loopback = <0>;
+
+			// Maximum number of lanes per interface = 8 (from 2 complexes)
+			num-lanes = <4>;
+			// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+			lane-rate = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <110>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <4>;
+			rx-buffer-size = <1840>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <300>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+			loopback = <0 0 0 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13 13 13>;
+
+			ext-phy-addr = <0 3 2 1>;
+			ext-phy-bus = <1 1 1 1>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1 1 1>;
+			parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128 128 128>;
+
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52 52 52>;
+			free-desc-size = <2048 2048 2048 2048>;
+			ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+			submode = <0>;
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <12>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+			vlan-pri-en = <0x0>;
+		};
+		rxaui {
+			loopback = <0>;
+
+			// 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+			submode = <2>;
+			// 0: disable ; 1: enable
+			scrambler = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+			ext-phy-addr = <12>;
+			ext-phy-bus = <1>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+			loopback = <0 0 0 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13 13 13>;
+
+			ext-phy-addr = <12 15 14 13>;
+			ext-phy-bus = <1 1 1 1>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1 1 1>;
+			parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128 128 128>;
+
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52 52 52>;
+			free-desc-size = <2048 2048 2048 2048>;
+			ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+
+			mgmt-port = <1 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+
+			ext-phy-addr = <16 17>;
+			ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+nae@node-1 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
+
+	/*
+	 * Create a skeleton structure to load the ucore code at runtime.
+	 */
+	ucore {
+		src@1 {
+			opcodes = <0x0>;
+			mask = <0xffff>;	/* Default mask, can be changed at runtime */
+			num-opcodes = <0x0>;
+		};
+	};
+
+	freein-fifo-config {
+		/*
+		 * 1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+		 * 2. Onnchip desc size per queue will be configured from arry below
+		 * If spill descs per queue is specified,
+		 * 1. spill will be enabled for all the queues(except mgmt) using the spill memory specified
+		 * in the OS config file.
+		 */
+		freein-fifo-spill-mem-range = <0x0 0x0 0x0 0x00200000>; // Spill address will be allocated dynamically
+		freein-fifo-onchip-num-descs = <56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56>;
+		freein-fifo-spill-num-descs = <1200>;
+
+		/*
+		 * If port-fifo-en is not specified(0/1), it will be set to 1
+		 * while building the linux dtb file. For all the othercases it will be set to 0.
+		 * See build-dtb.sh. If required, user can explicitly set the value here.
+		 */
+		port-fifo-en = <>;
+	};
+
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+	};
+
+	// Packet Ordering Engine (POE)
+	poe {
+
+		mode = "bypass";
+
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+
+		distribution-enable = <1>;
+		// 16 bit mask
+		dist-drop-enable = <0>;
+		// 8 bit mask
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+		class-map-mode = <0>;	/* 0:All NAE, 1:Class 7-4 reserved for CPU, 2:Class 7-5 reserved for CPU,
+					 * 3:Class 7-6 reserved for CPU, 4:Class 7 reserved for CPU */
+
+		distribution_vectors {
+					dv0 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+					dv1 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv2 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv3 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv4 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv5 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv6 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv7 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv8 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv9 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+					dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+		};
+	};
+
+	complex@0 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+			// 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+			submode = <2>;
+			// 0: disable ; 1: enable
+			scrambler = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+			loopback = <0 0 0 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13 13 13>;
+
+			ext-phy-addr = <4 7 6 5>;
+			ext-phy-bus = <1 1 1 1>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1 1 1>;
+			parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128 128 128>;
+
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52 52 52>;
+			free-desc-size = <2048 2048 2048 2048>;
+			ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+		interlaken {
+			//select daughter board : cortina or loopback
+			db = "cortina";
+
+			loopback = <0>;
+
+			// Maximum number of lanes per interface = 8 (from 2 complexes)
+			num-lanes = <4>;
+			// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+			lane-rate = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <110>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <4>;
+			rx-buffer-size = <1840>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <300>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@1 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+			// 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+			submode = <2>;
+			// 0: disable ; 1: enable
+			scrambler = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+			loopback = <0 0 0 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13 13 13>;
+
+			ext-phy-addr = <8 11 10 9>;
+			ext-phy-bus = <1 1 1 1>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1 1 1>;
+			parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128 128 128>;
+
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52 52 52>;
+			free-desc-size = <2048 2048 2048 2048>;
+			ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
+	};
+	complex@2 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+			// 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+			submode = <2>;
+			// 0: disable ; 1: enable
+			scrambler = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+
+		interlaken {
+			//select daughter board : cortina or loopback
+			db = "cortina";
+
+			loopback = <0>;
+
+			// Maximum number of lanes per interface = 8 (from 2 complexes)
+			num-lanes = <4>;
+			// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+			lane-rate = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <110>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <4>;
+			rx-buffer-size = <1840>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <300>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+			loopback = <0 0 0 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13 13 13>;
+
+			ext-phy-addr = <0 3 2 1>;
+			ext-phy-bus = <1 1 1 1>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1 1 1>;
+			parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128 128 128>;
+
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52 52 52>;
+			free-desc-size = <2048 2048 2048 2048>;
+			ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+	};
+	complex@3 {
+		device_type = "nae-complex";
+		mode = "xaui";
+		cpld = "yes";
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			xgmii-speed = <10>;
+			ucore-mask = <0xffff>;
+		};
+		rxaui {
+			loopback = <0>;
+
+			// 0:xaui 1:rxaui.xaui 2:rxaui.broadcom 3:rxaui.marvell
+			submode = <2>;
+			// 0: disable ; 1: enable
+			scrambler = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			higig-mode = <0>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
+
+		sgmii {
+			loopback = <0 0>;
+			mgmt-port = <1 0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+
+			ext-phy-addr = <16 17>;
+			ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+nae@node-2 {
+
+};
+nae@node-3 {
+
+};
diff --git a/arch/mips/boot/dts/xlp-config.dts b/arch/mips/boot/dts/xlp-config.dts
new file mode 100644
index 0000000..4a6f7b3
--- /dev/null
+++ b/arch/mips/boot/dts/xlp-config.dts
@@ -0,0 +1,217 @@
+/*
+ * XLP Generic Device Tree Source
+ */
+
+/dts-v1/;
+/ {
+	model = "netlogic,XLP-EVP";
+	compatible = "netlogic,xlp";
+	#address-cells = <2>;
+	#size-cells = <2>;
+
+	doms {
+		#address-cells = <1>;
+		#size-cells = <1>;
+
+		dom@0 {
+			device_type = "domain";
+			os = "linux";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			cpu {
+				onlinemask = <0xffffffff>;
+				nae-rx-vc = <0>;
+				nae-fb-vc = <1>;
+				napi-vc-mask = <0xb>;
+				sae-rx-vc = <0>; /* sharing with nae */
+				sae-rx-sync-vc  = <3>; /* should be exclusive */
+				ipsec-async-vc  = <3>;
+				ipsec-sync-vc   = <2>;
+			};
+
+			nae {
+				freein-fifo-mask = <0x3ffff 0x0 0 0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <32 32 32 32>;
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <20 20 20 20>;
+			};
+
+			fmn {
+                                node_0_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_1_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_2_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+                                node_3_vc_mask = <0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb 0xbbbbbbbb>;
+			};
+
+			owner-config {
+				nae = <0x1>;
+				sae = <0x1>;
+				rsa = <0x1>;
+				fmn = <0x1>;
+			};
+		};
+
+		dom@1 {
+			device_type = "domain";
+			os = "uspace";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			cpu {
+				onlinemask = <0xffff>;
+				nae-rx-vc = <2>;
+				nae-fb-vc = <2>;
+				dtre-rx-vc = <3>;
+				sae-rx-sync-vc = <2>;  /* sharing with nae */
+				sae-rx-vc = <2>; /* sharing with nae */
+				/* helinux, as only 1 thread per cpu, it should poll for both nae and sae
+				   responses. Also there is no other vc as linux is using other 2 vcs */
+			};
+
+			app-param {
+				onlinemask = <0xffffffff>;
+				enable-nae-hw-parser = <0>;
+				enable-nae-jumbo = <0>;
+				enable-nae-p2p = <0>;
+				enable-poe = <0>;
+				enable-microstruct = <0>;
+				enable-popq-mode = <0>; /* If set to 1, popq mode is enabled else disabled */
+				launch-mode = "smp";	/* smp or amp */
+				timer-service-vc = <2>;
+			};
+
+			nae {
+				freein-fifo-mask = <0xffff 0 0 0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <0 0 0 0>;
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <20 20 20 20>;
+				/* replenish info syntax */
+				freein-fifo-replenish-by-owner = <1>;
+				/* < node paddr-H32bits paddr-L32bits size-H32bits size-L32bits */
+				freein-fifo-replenish-addr-info = <0x0 0x0 0x88000000 0x0 0x10000000>; /* 256M @ 2176M*/
+				/* < node fifomask descsize headroom ndescs > */
+				freein-fifo-replenish-desc-info = <0 0xffff 2048 0 64>;
+			};
+
+			owner-config {
+				nae = <0x0>;   /* currently for node */
+				sae = <0x1>;
+				rsa = <0x1>;
+				fmn = <0x1>;
+				dtr = <0x1>;
+			};
+
+			kbp {
+				/* Distribute total of 4096 buffer id across cpus.
+				 * Required only for cpus sending requests.
+				 * Note : KBP compare/search instructions must use even-numbered buffers.
+				 * i.e. (buffer_id & 0x1 == 0) is True
+				 */
+				buffers-cpuid-offset-quantity = <  0    0   64
+								   1   64   64
+								   2  128   64
+								   3  192   64
+								   4  256   64
+								   5  320   64
+								   6  384   64
+								   7  448   64
+								   8  512   64
+								   9  576   64
+								  10  640   64
+								  11  704   64
+								  12  768   64
+								  13  832   64
+								  14  896   64
+								  15  960   64
+								  16 1024   64
+								  17 1088   64
+								  18 1152   64
+								  19 1216   64
+								  20 1280   64
+								  21 1344   64
+								  22 1408   64
+								  23 1472   64
+								  24 1536   64
+								  25 1600   64
+								  26 1664   64
+								  27 1728   64
+								  28 1792   64
+								  29 1856   64
+								  30 1920   64
+								  31 1984   64>;
+				/* starting address for KBP Driver Data.
+				 * Two 32-bit unsigned integers forms one 64-bit memory address.
+				 * KBP driver requires 2 MBytes of dedicated memory space to store data.
+				 */
+				memory-offsethigh-offsetlow = <0x00000001 0x00000000>;
+			};
+		};
+
+		dom@2 {
+			device_type = "domain";
+			os = "uspace";
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			cpu {
+				onlinemask = <0xffff0000>;
+				nae-rx-vc = <0>;
+				nae-fb-vc = <1>;
+				/* Setting this to '1' makes NAE driver to skip buf alloction and initial
+				   sending of packet buffers*/
+				nae-buf-alloc-by-app = <1>;
+			};
+
+			app-param {
+				onlinemask = <0xffff0000>;
+			};
+
+			nae {
+				freein-fifo-mask = <0xffff 0 0 0>;
+				sh-domains = <0>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <0 0 0 0>;
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <20 20 20 20>;
+				/* replenish info syntax */
+				freein-fifo-replenish-by-owner = <1>;
+				/* < node paddr-H32bits paddr-L32bits size-H32bits size-L32bits */
+				freein-fifo-replenish-addr-info = <0x0 0x0 0x88000000 0x0 0x10000000>; /* 256M @ 2176M*/
+				/* < node fifomask descsize headroom ndescs > */
+				freein-fifo-replenish-desc-info = <1 0xffff 2048 0 64>;
+			};
+
+			owner-config {
+				nae = <0x0>;
+				sae = <0x0>;
+				rsa = <0x0>;
+			};
+		};
+	};
+
+	kernel-params {
+	};
+
+	soc {
+
+		/include/ "generic-fmn.dtsi"
+		/include/ "generic-nae.dtsi"
+	};
+
+	frequency-config {
+		nae = <500>;
+		sae = <500>;
+		rsa = <500>;
+		dtre = <500>;
+		cde = <250>;
+	};
+};
-- 
1.9.1

