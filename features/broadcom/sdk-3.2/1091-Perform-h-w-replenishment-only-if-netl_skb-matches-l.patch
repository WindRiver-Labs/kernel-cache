From a9ab2a9373f38bb54b6f0e490aa4dc5a873d28cc Mon Sep 17 00:00:00 2001
From: Mehul <vmehul@netlogicmicro.com>
Date: Fri, 2 Dec 2011 18:40:25 +0530
Subject: [PATCH 1091/1532] Perform h/w replenishment only if netl_skb matches
 last_rcvd_skb in ROUTE mode.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/nae-perf/xlp_nae.c | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/drivers/misc/netlogic/nae-perf/xlp_nae.c b/drivers/misc/netlogic/nae-perf/xlp_nae.c
index 973927b..308660d 100755
--- a/drivers/misc/netlogic/nae-perf/xlp_nae.c
+++ b/drivers/misc/netlogic/nae-perf/xlp_nae.c
@@ -364,6 +364,7 @@ static __inline__ struct sk_buff *nlm_xlp_alloc_skb(void)
         offset = ((unsigned long)skb->data + CACHELINE_SIZE) &
                 ~(CACHELINE_SIZE - 1);
         skb_reserve(skb, (offset - (unsigned long)skb->data));
+        skb->netl_skb = skb;
 
         return skb;
 }
@@ -385,7 +386,7 @@ static __inline__ struct sk_buff *nlm_xlp_alloc_skb_atomic(void)
         offset = ((unsigned long)skb->data + CACHELINE_SIZE) &
                 ~(CACHELINE_SIZE - 1);
         skb_reserve(skb, (offset - (unsigned long)skb->data));
-
+        skb->netl_skb = skb;
         return skb;
 }
 
@@ -1765,7 +1766,7 @@ static int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 		return tso_xmit_skb(skb, dev);
 	}
 
-	if((last_rcvd_skb[LAST_RCVD_INDEX(cpu)] == skb) && !skb_shared(skb)) {
+	if(skb->netl_skb && (last_rcvd_skb[LAST_RCVD_INDEX(cpu)] == skb->netl_skb) && !skb_shared(skb)) {
 		last_rcvd_skb[LAST_RCVD_INDEX(cpu)] = NULL;
 		/* Do h/w replenishment */
 		msg0 = nae_tx_desc(P2D_NEOP, 0, (cpu/2) + 32,
@@ -1778,11 +1779,8 @@ static int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 	else {
 		msg0 = nae_tx_desc(P2D_NEOP, 0, cpu, 0, virt_to_bus(skb));
 	}
-	msg1 = nae_tx_desc(P2D_EOP,
-			0,
-			NULL_VFBID,
-			skb->len,
-			virt_to_bus(skb->data));
+       msg1 = nae_tx_desc(P2D_EOP, 0, NULL_VFBID, skb->len, 
+		       virt_to_bus(skb->data));
 	if(hw_repl) {
 //      	uint64_t cycles = 0;
 
-- 
1.9.1

