From 1793ee383c994314c6eac0a88bd7d4ec1461fb35 Mon Sep 17 00:00:00 2001
From: Virendra Pathak <vpathak@broadcom.com>
Date: Thu, 4 Sep 2014 11:54:20 +0530
Subject: [PATCH 1020/1532] nae: added freein lifo to guest binding

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/netlib/include/export_sym.h |  1 +
 .../netlogic/lib/netlib/include/netsoc_haliface.h  |  1 +
 .../netlogic/lib/netlib/include/netsoc_libiface.h  |  1 +
 arch/mips/netlogic/lib/netlib/include/netsoc_nae.h |  2 ++
 arch/mips/netlogic/lib/netlib/include/nlm_nae.h    |  2 ++
 arch/mips/netlogic/lib/netlib/src/netsoc_api.c     | 19 ++++++++++
 arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c     | 17 ++++++---
 arch/mips/netlogic/lib/netlib/src/netsoc_nae.c     | 41 +++++++---------------
 8 files changed, 52 insertions(+), 32 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/include/export_sym.h b/arch/mips/netlogic/lib/netlib/include/export_sym.h
index a30fb34..42f23d5 100644
--- a/arch/mips/netlogic/lib/netlib/include/export_sym.h
+++ b/arch/mips/netlogic/lib/netlib/include/export_sym.h
@@ -36,6 +36,7 @@ EXPORT_SYMBOL(netsoc_get_frinq_base);
 EXPORT_SYMBOL(netsoc_get_txq_base);
 EXPORT_SYMBOL(netsoc_drain_frinq);
 EXPORT_SYMBOL(netsoc_get_frinq_desc_sz);
+EXPORT_SYMBOL(netsoc_get_frinq_gstid);
 EXPORT_SYMBOL(netsoc_drain_all_frinq);
 EXPORT_SYMBOL(netsoc_get_free_desc);
 EXPORT_SYMBOL(netsoc_set_config_free_desc);
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
index 9a1b584..ec98276 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
@@ -73,6 +73,7 @@ extern void __netsoc_init_ingress(nae_t *nae, uint32_t desc_size);
 extern int __netsoc_config_vfbid_table(nae_t *nae, uint32_t start, uint32_t num_entries, uint32_t *vfbid_tbl);
 extern int __netsoc_drain_frin_fifo_descs(nae_t *nae, uint32_t frin_q);
 extern int __netsoc_get_frinq_desc_sz(nae_t *nae, uint32_t frinq_num);
+extern int __netsoc_get_frinq_gstid(nae_t *nae, uint32_t frinq_num);
 extern int __netsoc_drain_allfrin_fifo_descs(nae_t *nae);
 
 extern int __netsoc_init_poe_ext_storage(poe_t *poe, uint64_t fbp_base_phys, uint64_t fbp_base_virt,uint64_t msg_base_phys,uint64_t msg_base_virt);
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
index 5ff3cd8..da1a30c 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
@@ -542,6 +542,7 @@ extern void netsoc_set_config_free_desc(nae_t *nae, uint32_t size, uint32_t star
 extern int netsoc_drain_all_frinq(nae_t *nae);
 extern int netsoc_drain_frinq(nae_t *nae, uint32_t frin_q);
 extern int netsoc_get_frinq_desc_sz(nae_t *nae, uint32_t frinq_num);
+extern int netsoc_get_frinq_gstid(nae_t *nae, uint32_t frinq_num);
 extern int netsoc_get_frinq_base(nae_t *nae);
 extern int netsoc_get_txq_base(nae_t *nae);
 extern int netsoc_get_total_frinq(nae_t *nae);
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
index 165d0ff..a5ba6d0 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
@@ -61,6 +61,8 @@ enum netv1_nae_reg{
 	STRING_DEST_OFF = 0x74,
 };
 
+#define FREEIN_GUESTID_MASK	0xff
+
 enum net_path{
 	EGRESS_PATH,
 	INGRESS_PATH,
diff --git a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
index d06b739..2cdaaa9 100644
--- a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
@@ -371,6 +371,8 @@ struct nlm_hal_nae_config {
 	/* onchip descs per queue: value is taken from array for all 
 	   queues upto 0-17 */
 	int freein_fifo_onchip_num_descs[MAX_NAE_FREEIN_DESCS_QUEUE];
+	/*lifo to guest id binding*/
+	int freein_lifo_guest_id[MAX_NAE_FREEIN_DESCS_QUEUE];
 	/* spill descs per queue, it will be added with the onchip size  */
 	int freein_fifo_spill_num_descs; 
 	uint64_t freein_spill_base;
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
index 4d2d0ba..e6230f10 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
@@ -962,6 +962,25 @@ int netsoc_get_frinq_desc_sz(nae_t *nae, uint32_t frinq_num)
 }
 
 /**
+* @brief netsoc_get_frinq_gstid function returns the guest id to which frinq lifo is binded
+*
+* @param [in] nae Pointer to nae_t
+* @param [in] frinq_num FRIN queue number
+*
+* @return
+*       - guestid on success
+*       - < 0 on error
+*
+* @ingroup hal_nae
+*
+*/
+
+int netsoc_get_frinq_gstid(nae_t *nae, uint32_t frinq_num)
+{
+	return __netsoc_get_frinq_gstid(nae, frinq_num);
+}
+
+/**
 * @brief netsoc_drain_all_frinq function is used to drain all
 * 
 * @param [in] nae Pointer to nae_t
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c b/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
index c525c90..ebc312a 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_fdt.c
@@ -247,12 +247,15 @@ void fdt_extract_dom_nae_node_freein_fifo_info(void *fdt, int dom_id, nae_t *nae
         int i;
         unsigned int freein_fifo_mask[NLM_MAX_NODES];
         unsigned int freein_fifo_onchip_num_descs[MAX_NAE_FREEIN_DESCS_QUEUE];
+	unsigned int freein_lifo_guest_id[MAX_NAE_FREEIN_DESCS_QUEUE];
         unsigned int freein_fifo_spill_num_descs = 0, node = nae_cfg->node;
         unsigned int data[4];
         int frin_total_queue = __netsoc_get_frin_total_queue(nae_cfg);
 
-        for (i=0; i<MAX_NAE_FREEIN_DESCS_QUEUE; i++)
-                freein_fifo_onchip_num_descs[i] = 0;
+	for (i = 0; i < MAX_NAE_FREEIN_DESCS_QUEUE; i++) {
+		freein_fifo_onchip_num_descs[i] = 0;
+		freein_lifo_guest_id[i] = 0;
+	}
 
         for(i = 0; i < NLM_MAX_NODES; i++)
                 freein_fifo_mask[i] = (1 << frin_total_queue) - 1;/* Ownes all fifos by default*/
@@ -269,6 +272,9 @@ void fdt_extract_dom_nae_node_freein_fifo_info(void *fdt, int dom_id, nae_t *nae
 
         copy_fdt_prop(fdt, dom_node_str, "freein-fifo-onchip-num-descs", PROP_CELL,
                         freein_fifo_onchip_num_descs, 4*MAX_NAE_FREEIN_DESCS_QUEUE);
+	copy_fdt_prop(fdt, dom_node_str, "freein-lifo-guest-id", PROP_CELL,
+			freein_lifo_guest_id,
+			(sizeof(uint32_t) * MAX_NAE_FREEIN_DESCS_QUEUE));
         copy_fdt_prop(fdt, dom_node_str, "freein-fifo-spill-num-descs", PROP_CELL,
                         &freein_fifo_spill_num_descs, 4);
         copy_fdt_prop(fdt, dom_node_str, "port-fifo-en", PROP_CELL,
@@ -277,8 +283,11 @@ void fdt_extract_dom_nae_node_freein_fifo_info(void *fdt, int dom_id, nae_t *nae
 
         nae_cfg->freein_fifo_spill_num_descs = freein_fifo_spill_num_descs;
 
-        for (i=0; i<MAX_NAE_FREEIN_DESCS_QUEUE; i++) {
-                nae_cfg->freein_fifo_onchip_num_descs[i] = freein_fifo_onchip_num_descs[i];
+	for (i = 0; i < MAX_NAE_FREEIN_DESCS_QUEUE; i++) {
+		nae_cfg->freein_fifo_onchip_num_descs[i] = freein_fifo_onchip_num_descs[i];
+		nae_cfg->freein_lifo_guest_id[i] = freein_lifo_guest_id[i];
+		netsoc_api_print(NETSOC_APIDBG_CONFIG, "lifo %d gst_id %d\n",
+					i, nae_cfg->freein_lifo_guest_id[i]);
         }
 
         get_dom_nae_property(fdt, dom_id, nae_cfg->nae_id, "freein-fifo-mask", freein_fifo_mask, sizeof(freein_fifo_mask));
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index 9b648e2..8c38564 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -43,7 +43,6 @@ module_param(cl45_div, int, 0);
 #endif
 
 
-/*#define KVM_GUEST_MODE_EN	1*/
 
 
 static unsigned int ucore_shared_scratch[NLM_MAX_NODES][XLP9XX_MAX_NAE_PERNODE][256];
@@ -1696,6 +1695,14 @@ int __netsoc_get_frinq_desc_sz(nae_t *nae, uint32_t frinq_num)
 	return desc_sz;
 }
 
+int __netsoc_get_frinq_gstid(nae_t *nae, uint32_t frinq_num)
+{
+	if ((!nae) || (frinq_num >= __netsoc_get_max_frinqs()))
+		return -NETSOC_API_PARAM_INVALID;
+
+	return nae->freein_lifo_guest_id[frinq_num];
+}
+
 #ifdef INCLUDE_NAE_DEBUG
 static int debug = 1;
 void __netsoc_print_frin_desc_carving(nae_t *nae)
@@ -4015,21 +4022,12 @@ int __netsoc_pcs_init(nae_t *nae)
 
 static int __netsoc_config_freein_fifo(nae_t *nae)
 {
-        uint32_t reg, size, spillsz;
+	uint32_t reg, size, spillsz, guest_id;
         int start = 0, i,  th_hi, th_lo, minsz;
         uint64_t spill_addr, spill_mem_addr, spill_mem_size;
         int freein_fifo_total_queues = nae->frin_total_queue;
         void *buf;
 
-	uint32_t mgmt_port_mask = 0, port;
-
-	/* Obtaining the mgmt port mask from nae */
-	for (port = 0 ; port < nae->num_ports; port++) {
-		if(nae->ports[port].mgmt) {
-			mgmt_port_mask |= (1 << nae->ports[port].hw_port_id);
-		}
-	}
-	netsoc_api_print(NETSOC_APIDBG_GLOBAL,"num_ports: %d mgmt port mask: 0x%x\n",nae->num_ports,mgmt_port_mask);
 
         /* Add the unused onchip rxfreein-fifo spaces to the used fifos
          if port fifo mode is selected */
@@ -4130,21 +4128,11 @@ static int __netsoc_config_freein_fifo(nae_t *nae)
                                         ((start & 0x1ff)  << 8) | /* fcStart */
                                         (i  & 0x1f);
 
-#ifdef KVM_GUEST_MODE_EN
-				{
-					uint32_t guest_id = 1;
-
-					if(mgmt_port_mask & (1 << i)){
-						guest_id = 0;
-						netsoc_api_print(NETSOC_APIDBG_CONFIG, "Skipping guest fifo cfg for mgmt port %d \n", i);
-					}
-					else
-					{
-						netsoc_api_print(NETSOC_APIDBG_CONFIG, "Freein fifo cfg %d, guestid: %d \n", 1, 1);
-					}
-					netsoc_write_nae_reg(nae->nae_base, 0x91, guest_id);
+				if (IS_NLM_XLP9XX_FAMILY) {
+					guest_id = (nae->freein_lifo_guest_id[i]) & FREEIN_GUESTID_MASK;
+					netsoc_write_nae_reg(nae->nae_base, FREE_IN_GST_MAP, guest_id);
+					netsoc_api_print(NETSOC_APIDBG_CONFIG, "lifo %d gst:%d\n", i, guest_id);
 				}
-#endif
 
                                 netsoc_write_nae_reg(nae->nae_base, FREE_IN_FIFO_CFG, reg);
                                 netsoc_api_print(NETSOC_APIDBG_CONFIG, "Freein fifo cfg %d fcstart %d size %d\n", i, start, size);
@@ -4153,9 +4141,6 @@ static int __netsoc_config_freein_fifo(nae_t *nae)
                 }
         }
 
-#ifdef KVM_GUEST_MODE_EN
-	netsoc_write_nae_reg(nae->nae_base, 0x90, 0);
-#endif
 
 	for(i=0; i < freein_fifo_total_queues; i++) {
 		if (i == 0)
-- 
1.9.1

