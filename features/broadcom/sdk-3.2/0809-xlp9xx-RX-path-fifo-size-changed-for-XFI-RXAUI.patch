From 70ce752ce044a896a78507e0c4713c27a51e6839 Mon Sep 17 00:00:00 2001
From: Vikas Gupta <vikas.gupta@broadcom.com>
Date: Tue, 8 Oct 2013 02:08:40 -0700
Subject: [PATCH 0809/1532] xlp9xx: RX path fifo size changed for XFI/RXAUI

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/netlib/include/netsoc_common.h | 12 +++++++++---
 arch/mips/netlogic/lib/netlib/src/netsoc_nae.c        | 11 ++++++-----
 2 files changed, 15 insertions(+), 8 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
index 4d798a1..7464f16 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_common.h
@@ -321,6 +321,9 @@ static inline uint32_t get_prsr_seq_fifo_size(uint32_t intf_type)
 {
         switch(intf_type) {
 	case XFI_IF:
+		if (is_nlm_xlp9xx())
+			return DEFAULT_XLP9XX_XAUI_PARSERSEQFIFO_SZ/4;
+                return DEFAULT_XAUI_PARSERSEQFIFO_SZ/4;
         case SGMII_IF:
                 return DEFAULT_SGMII_PARSERSEQFIFO_SZ;
         case XAUI_IF:
@@ -333,7 +336,7 @@ static inline uint32_t get_prsr_seq_fifo_size(uint32_t intf_type)
                 return DEFAULT_XAUI_PARSERSEQFIFO_SZ;
         case RXAUI_IF:
 		if(is_nlm_xlp9xx())
-                	return DEFAULT_XAUI_PARSERSEQFIFO_SZ/2;
+                	return DEFAULT_XLP9XX_XAUI_PARSERSEQFIFO_SZ/2;
                 return DEFAULT_XAUI_PARSERSEQFIFO_SZ;
         case INTERLAKEN_IF:
                 return DEFAULT_ILK_PARSERSEQFIFO_SZ;
@@ -359,6 +362,9 @@ static inline uint32_t get_rx_buf_size(uint32_t intf_type)
 {
         switch(intf_type) {
 	case XFI_IF:
+ 		if (is_nlm_xlp9xx())
+ 			return DEFAULT_XLP9XX_XAUI_RXFIFO_SZ/4;
+                return DEFAULT_XAUI_RXFIFO_SZ/4;
         case SGMII_IF:
                 return DEFAULT_SGMII_RXFIFO_SZ;
         case XAUI_IF:
@@ -371,7 +377,7 @@ static inline uint32_t get_rx_buf_size(uint32_t intf_type)
                 return DEFAULT_XAUI_RXFIFO_SZ;
         case RXAUI_IF:
 		if(is_nlm_xlp9xx())
-                	return DEFAULT_XAUI_RXFIFO_SZ/2;
+                	return DEFAULT_XLP9XX_XAUI_RXFIFO_SZ/2;
                 return DEFAULT_XAUI_RXFIFO_SZ;
         case INTERLAKEN_IF:
                 return DEFAULT_ILK_RXFIFO_SZ;
@@ -421,7 +427,7 @@ static inline void update_default_config(int intf_type, uint32_t *config, uint32
 {
         uint32_t iface;
 	
-        if (intf_type == SGMII_IF) {
+        if ((intf_type == SGMII_IF) || (intf_type == XFI_IF)) {
                 for(iface = 0; iface < 4; iface++) {
                         *config++ = val;
                 }
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index 0bab60f..0330e35 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -1368,12 +1368,12 @@ void __netsoc_config_ingress_fifo(nae_t *nae)
 			nae->node, hw_port, context_base, nae->ports[port].num_channels,
                                         rx_buf_base, nae->ports[port].rx_buf_size);
 
-		if( (rx_buf_size)  &&
-                                (thrgrp < NLM_NAE_MAX_XONOFF_THR_GRPS) &&
-                                (!(xonxoff_done[nae->node][nae->nae_id][thrgrp])) )
+		if( (rx_buf_size)  && (thrgrp < NLM_NAE_MAX_XONOFF_THR_GRPS))
                 {
-			xonxoff_done[nae->node][nae->nae_id][thrgrp] = 1;
-			__netsoc_config_context_xoff_thr(nae, &nae->ports[port], thrgrp,  (rx_buf_size << 2) / nae->ports[port].num_channels, NAE_MTU_LEN);
+  			if(!(xonxoff_done[nae->node][nae->nae_id][thrgrp])){
+				xonxoff_done[nae->node][nae->nae_id][thrgrp] = 1;
+				__netsoc_config_context_xoff_thr(nae, &nae->ports[port], thrgrp,  (rx_buf_size << 2) / nae->ports[port].num_channels, NAE_MTU_LEN);
+			}
 		}
 
 		__netsoc_config_rxbuffer(nae, context_base,nae->ports[port].num_channels,
@@ -1464,6 +1464,7 @@ void __netsoc_config_nae_global(nae_t *nae)
         netsoc_write_nae_reg(nae->nae_base, FLOW_CRC16_POLY_CFG, (0x28 << 16) | 0xFFFF);
 
 	__netsoc_config_ingress_fifo(nae);
+	
 	__netsoc_config_rx_calendar(nae);
 	if (!is_nlm_xlp8xx_ax())
 		__netsoc_config_tx_calendar(nae);
-- 
1.9.1

