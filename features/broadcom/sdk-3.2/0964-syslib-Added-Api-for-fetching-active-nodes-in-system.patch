From a8a5d727b9fa6c7f3317636d484fb182051781ce Mon Sep 17 00:00:00 2001
From: Debayan Ghosh <debayan.ghosh@broadcom.com>
Date: Thu, 24 Apr 2014 23:40:26 +0530
Subject: [PATCH 0964/1532] syslib: Added Api for fetching active nodes in
 system

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c | 11 +-----
 arch/mips/netlogic/lib/syslib/include/nlm_hal.h    |  2 +
 arch/mips/netlogic/lib/syslib/src/nlm_hal.c        | 45 ++++++++++++++++++++++
 3 files changed, 48 insertions(+), 10 deletions(-)

diff --git a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
index 58675cc..37190e0 100644
--- a/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
+++ b/arch/mips/netlogic/lib/fmnlib/nlm_hal_fmn_config.c
@@ -1624,20 +1624,11 @@ int parse_fdt_fmn_config(void *fdt)
 	uint32_t qsize, credits, src_node, s_stn, d_stn;
 	static int init_done = 0;
 
-
-	sprintf(fmn_cfg_str,"/soc/nodes");
-	nodeoffset = fdt_path_offset(fdt, fmn_cfg_str);
-        if(nodeoffset >= 0) {
-		pval = (uint32_t *)fdt_getprop(fdt, nodeoffset, "num-nodes", &plen);
-		if(pval != NULL) {
-			max_nodes = fdt32_to_cpu(*(unsigned int *)pval);
-		}
-	}
+	max_nodes = nlm_node_cfg.num_nodes;
 
 	if(init_done)
 		return max_nodes;
 
-	nlm_node_cfg.num_nodes = max_nodes;
 
 	for(node = 0; node < max_nodes; node++) {
 		nlm_node_cfg.fmn_cfg[node] = nlm_malloc(sizeof(struct fmn_cfg));
diff --git a/arch/mips/netlogic/lib/syslib/include/nlm_hal.h b/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
index 5dd2fca..d18c048 100644
--- a/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
+++ b/arch/mips/netlogic/lib/syslib/include/nlm_hal.h
@@ -213,6 +213,8 @@ extern int nlm_hal_is_ref_clk_133MHz(void);
 #define XLP_PIT_TICK_RATE      nlm_hal_get_ref_clk_freq()
 
 extern int nlm_hal_get_fdt_freq(void *fdt, int type);
+extern int nlm_hal_get_num_nodes(void);
+
 /*
 TODO :
   1. support Debug flags
diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
index 6348663..20e3304 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
@@ -100,6 +100,7 @@ unsigned long xlp5xx_sys_clk_base[NLM_MAX_NODES];
 
 struct nlm_node_config  nlm_node_cfg;
 
+extern int nlm_is_node_present(int node);
 
 static __inline__ unsigned int power_on_reset_cfg(void)
 {
@@ -148,6 +149,43 @@ __inline__ void nlm_hal_enumerate_pci(void)
 {
 }
 
+
+/* @brief nlm_hal_get_num_nodes : Fetch the number of active nodes on the system
+ * 
+ * @return number of active nodes
+ *
+ * @ingroup hal
+ */
+ int nlm_hal_get_num_nodes(void)
+{
+
+        int max_nodes = 0;
+        int node = 0;
+        uint32_t active_nodes=1;
+        int ret;
+        max_nodes = NLM_MAX_NODES;
+
+        xlp_io_base = KSEG1 + 0x18000000;
+
+        for(node = 1; node < max_nodes; node++)
+        {
+
+                if(is_nlm_xlp9xx()) {
+                        ret = (nlm_hal_read_32bit_reg(nlm_hal_get_dev_base(0, 0, 0, node), 0x6 ) >> 8 ) & 0xff;
+                        if(ret == 0)
+                                break;
+                } else {
+                        ret = nlm_hal_read_32bit_reg(nlm_hal_get_dev_base(node, 0, XLP_SYS_DEVICE, XLP_SYS_FUNC), 0x0);
+                        if(ret == 0xffffffff)
+                                break;
+                }
+                active_nodes++;
+        }
+
+        return active_nodes;
+
+}
+
 #ifndef NLM_HAL_XLOADER
 /* Basic Reg access
  */
@@ -597,10 +635,16 @@ __inline__ void nlm_hal_init(void)
 	nlm_node_cfg.valid = 1;
 	nlm_node_cfg.num_nodes = 1; 
 
+	nlm_node_cfg.num_nodes = nlm_hal_get_num_nodes();
+	nlm_print("Active Nodes: %d\n",nlm_node_cfg.num_nodes);
+
  	for(node = 0; node < NLM_MAX_NODES; node++)
 	{
 		nlm_node_cfg.nae_cfg[node] = NULL;
 		nlm_node_cfg.fmn_cfg[node] = NULL;
+		
+		if(node >= nlm_node_cfg.num_nodes)
+			continue;
 
 		xlp_io_base = KSEG1 + 0x18000000;
 
@@ -700,6 +744,7 @@ EXPORT_SYMBOL(xlp5xx_sys_clk_base);
 EXPORT_SYMBOL(nlm_hal_init);
 EXPORT_SYMBOL(nlm_hal_read_32bit_reg);
 EXPORT_SYMBOL(nlm_hal_write_32bit_reg);
+EXPORT_SYMBOL(nlm_hal_get_num_nodes);
 #else
 #include "nlm_hal_pic.h"
 /*
-- 
1.9.1

