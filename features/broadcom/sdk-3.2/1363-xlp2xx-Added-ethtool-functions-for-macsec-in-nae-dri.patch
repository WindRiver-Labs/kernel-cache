From dd86349a6ef467fe9c3c0431bd9ba1eade88f21f Mon Sep 17 00:00:00 2001
From: Alok Agrawat <alok@broadcom.com>
Date: Thu, 5 Jul 2012 16:34:02 +0530
Subject: [PATCH 1363/1532] xlp2xx: Added ethtool functions for macsec in nae
 driver

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/init_nae.c |  7 ++++
 drivers/net/ethernet/broadcom/nae/xlp_hw.c   | 53 ++++++++++++++++++++++++++++
 2 files changed, 60 insertions(+)

diff --git a/drivers/net/ethernet/broadcom/nae/init_nae.c b/drivers/net/ethernet/broadcom/nae/init_nae.c
index 658ea69..fcbfb23 100644
--- a/drivers/net/ethernet/broadcom/nae/init_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/init_nae.c
@@ -160,6 +160,7 @@ int initialize_nae(unsigned int *phys_cpu_map, int mode, int *jumbo_enabled)
 
 	nlm_hal_init_nae(fdt, dom_id);
 
+
 	for(node = 0; node < NLM_MAX_NODES; node++) {
 		nae_cfg = nlm_node_cfg.nae_cfg[node];
 		if (nae_cfg == NULL) 
@@ -252,6 +253,12 @@ int initialize_nae(unsigned int *phys_cpu_map, int mode, int *jumbo_enabled)
 
 		if(init_dummy_entries_for_port_fifos(node, nae_cfg, *jumbo_enabled) != 0)
 			goto err;
+		
+		if(is_nlm_xlp2xx())
+		{
+			nlm_hal_msec_tx_default_config(node,/* port_enable*/0xff, /*unsigned int preamble_len*/0x5555, /*packet_num*/ 0x0, /*pn_thrshld*/0x7fffffff);
+			nlm_hal_msec_rx_default_config(node, /*port_enable*/0xff, /*preamble_len*/0xaaaa, /*packet_num*/0x0, /*replay_win_size*/0x0);
+		}
 
 	}
 	rv = 0;
diff --git a/drivers/net/ethernet/broadcom/nae/xlp_hw.c b/drivers/net/ethernet/broadcom/nae/xlp_hw.c
index 09ac1b2..ed3d990 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_hw.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_hw.c
@@ -201,6 +201,55 @@ static int xlp_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
 	return ret;
 }
 
+static int xlp_config_msec_tx(struct net_device *dev, struct ethtool_cmd *cmd)
+{
+	int ret = 0;
+	if(is_nlm_xlp2xx())
+	{
+		struct dev_data *priv = netdev_priv(dev);
+		printk("%s node = %d port_enable = %x preamble_len = %x packet_num = %d pn_thrshld = %d\n", __FUNCTION__, cmd->node, cmd->port_enable, cmd->preamble_len, cmd->packet_num, cmd->win_size_thrshld);
+		nlm_hal_msec_tx_config(cmd->node, cmd->port_enable, cmd->preamble_len, cmd->packet_num, cmd->win_size_thrshld);
+	}
+	return ret;
+}
+
+static int xlp_config_msec_tx_mem(struct net_device *dev, struct ethtool_cmd *cmd)
+{
+	int ret = 0;
+	if(is_nlm_xlp2xx())
+	{
+		struct dev_data *priv = netdev_priv(dev);
+		printk("%s node = %d context = %x tci = %x sci = %llx key = %llx\n", __FUNCTION__, cmd->node, cmd->port, cmd->tci, cmd->sci, *(uint64_t*)cmd->key);
+		nlm_hal_msec_tx_mem_config(cmd->node, cmd->port/*context*/, cmd->tci, cmd->sci, cmd->key);
+	}
+	return ret;
+}
+
+static int xlp_config_msec_rx(struct net_device *dev, struct ethtool_cmd *cmd)
+{
+	int ret = 0;
+	if(is_nlm_xlp2xx())
+	{
+		struct dev_data *priv = netdev_priv(dev);
+		printk("%s node = %d port_enable = %x preamble_len = %x packet_num = %d pn_thrshld = %d\n", __FUNCTION__, cmd->node, cmd->port_enable, cmd->preamble_len, cmd->packet_num, cmd->win_size_thrshld);
+		nlm_hal_msec_rx_config(cmd->node, cmd->port_enable, cmd->preamble_len, cmd->packet_num, cmd->win_size_thrshld);
+	}
+	return ret;
+}
+
+static int xlp_config_msec_rx_mem(struct net_device *dev, struct ethtool_cmd *cmd)
+{
+	int ret = 0;
+	if(is_nlm_xlp2xx())
+	{
+		struct dev_data *priv = netdev_priv(dev);
+		printk("%s node = %d, port = %d, index = %d, sci = %llx,  sci_mask = %llx key = %llx\n",__FUNCTION__, cmd->node, cmd->port, cmd->index, cmd->sci, cmd->sci_mask, *(uint64_t*)cmd->key); 
+		nlm_hal_msec_rx_mem_config(cmd->node, cmd->port, cmd->index, cmd->sci, cmd->key, cmd->sci_mask);
+	}
+	return ret;
+}
+
+
 static void xlp_get_drvinfo(struct net_device *dev,
 				struct ethtool_drvinfo *info)
 {
@@ -512,6 +561,10 @@ static struct ethtool_ops xlp_ethtool_ops= {
 	.get_eeprom_len         = xlp_get_eeprom_len,
         .get_eeprom             = xlp_get_eeprom,
         .set_eeprom             = xlp_set_eeprom,
+	.msec_tx_config 	= xlp_config_msec_tx,
+	.msec_tx_mem_config 	= xlp_config_msec_tx_mem,
+	.msec_rx_config 	= xlp_config_msec_rx,
+	.msec_rx_mem_config 	= xlp_config_msec_rx_mem,
 
 };
 
-- 
1.9.1

