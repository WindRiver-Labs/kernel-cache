From 97b1676e0ee5c5369340bb3bd9d5612be31bb2ff Mon Sep 17 00:00:00 2001
From: Joa-Yu Wu <joayuwu@broadcom.com>
Date: Mon, 12 Aug 2013 19:56:19 -0700
Subject: [PATCH 0774/1532] ale: Added macros for ALE response descriptor.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/alelib/ale_api.c     | 30 +++++++++++++++--------------
 arch/mips/netlogic/lib/alelib/ale_api.h     |  8 ++++----
 arch/mips/netlogic/lib/alelib/ale_msg.h     |  3 +++
 arch/mips/netlogic/lib/alelib/ale_node_db.c | 11 +++++------
 arch/mips/netlogic/lib/alelib/ale_node_db.h |  6 +++---
 5 files changed, 31 insertions(+), 27 deletions(-)

diff --git a/arch/mips/netlogic/lib/alelib/ale_api.c b/arch/mips/netlogic/lib/alelib/ale_api.c
index a18d5d2..1b0e7e3 100644
--- a/arch/mips/netlogic/lib/alelib/ale_api.c
+++ b/arch/mips/netlogic/lib/alelib/ale_api.c
@@ -351,7 +351,7 @@ ale_download_node_bank(ale_t* ale,
  */
 int
 ale_create_db(ale_t *ale,
-              uint32_t fb_vc,
+              uint16_t fb_vc,
               ale_prefix_t *prefix_table,
               int prefix_num){
 
@@ -360,7 +360,7 @@ ale_create_db(ale_t *ale,
     if (ale)
         ale_db_hw = (!ale->active_db) ? ale->node_base_addr[1] : ale->node_base_addr[0];
 
-    ale_create_db_internal(fb_vc, prefix_table, prefix_num, ale_db_hw);
+    ale_create_db_internal(prefix_table, prefix_num, ale_db_hw);
 
    if (ale_db_hw) {
         ale_print(ALE_DBG_INFO, "%s: ALE node base addr=%llx\n",
@@ -375,7 +375,7 @@ ale_create_db(ale_t *ale,
  * @brief ale_insert_prefix Insert a single prefix into database
  *
  * @param [in] ale ale pointer
- * @param [in] vc VC ID
+ * @param [in] fb_vc VC ID
  * @param [in] prefix, 128 bit at most
  * @param [in] root node of database tree
  * @param [in] last_update if set, ALE will build and switch to a new database after this update
@@ -385,22 +385,22 @@ ale_create_db(ale_t *ale,
  *  - On failure, returns -1
  */
 int
-ale_insert_prefix(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update){
+ale_insert_prefix(ale_t* ale, uint16_t fb_vc, ale_prefix_t* prefix, int last_update){
    
     if(last_update){
         ale_db_entry_t* ale_db_hw;
 
-        ale_insert_prefix_internal(ale, vc, prefix, last_update);
+        ale_insert_prefix_internal(ale, prefix, last_update);
         if(ale){
           ale_db_hw = (!ale->active_db) ? ale->node_base_addr[1] : ale->node_base_addr[0]; 
           ale_print(ALE_DBG_INFO, "%s: ale_db_hw = %llx\n",
                     __func__, (long long unsigned int)ale_virt_to_phys(ale_db_hw));
-          ale_download_node_bank(ale, vc, 0x3f, ale_virt_to_phys(ale_db_hw), (uint64_t)NULL);
+          ale_download_node_bank(ale, fb_vc, 0x3f, ale_virt_to_phys(ale_db_hw), (uint64_t)NULL);
         }
         return 0;
     }
     else
-        return ale_insert_prefix_internal(ale, vc, prefix, last_update);
+        return ale_insert_prefix_internal(ale, prefix, last_update);
 }
 
 
@@ -408,7 +408,7 @@ ale_insert_prefix(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update
  * @brief ale_delete_prefix Delete a single prefix from database
  *
  * @param [in] ale ale pointer
- * @param [in] vc VC ID
+ * @param [in] fb_vc VC ID
  * @param [in] prefix 128 bit prefix at most
  * @param [in] root node of database tree
  * @param [in] last_update if set, ALE will build and switch to a new database after this update
@@ -418,9 +418,9 @@ ale_insert_prefix(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update
  *  - On failure, returns -1
  */
 int
-ale_delete_prefix(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update){
+ale_delete_prefix(ale_t* ale, uint16_t fb_vc, ale_prefix_t* prefix, int last_update){
 
-    return ale_delete_prefix_internal(ale, vc, prefix, last_update);
+    return ale_delete_prefix_internal(ale, prefix, last_update);
 }
 
 
@@ -430,9 +430,10 @@ ale_delete_prefix(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update
  * @param [in] desc ale descriptor
  *
  * @return
- *  - prefix index
+ *  - prefix index if match
+ *  - -1 if no match
  */
-uint32_t
+int
 ale_get_prefix_index_from_ale_desc(uint64_t desc){
 
     uint32_t   ale_index = desc & 0x7FFFFF;
@@ -447,9 +448,10 @@ ale_get_prefix_index_from_ale_desc(uint64_t desc){
  * @param [in] desc nae descriptor
  *
  * @return
- *  - prefix index
+ *  - prefix index if match
+ *  - -1 if no match
  */
-uint32_t
+int
 ale_get_prefix_index_from_nae_desc(uint64_t desc){
 
     uint32_t   ale_index = desc & 0x7FFFFF00000000;
diff --git a/arch/mips/netlogic/lib/alelib/ale_api.h b/arch/mips/netlogic/lib/alelib/ale_api.h
index a7f900f..8457326 100644
--- a/arch/mips/netlogic/lib/alelib/ale_api.h
+++ b/arch/mips/netlogic/lib/alelib/ale_api.h
@@ -468,13 +468,13 @@ static inline void ale_config_threshold(ale_t* ale,             //ale pointer
 
 extern int alelib_init(void *fdt, ale_lib_param_t *param);
 extern ale_t* ale_device_init(int node_id, int block_id);
-extern int ale_create_db(ale_t *ale, uint32_t fb_vc, ale_prefix_t *prefix_table, int prefix_num);
+extern int ale_create_db(ale_t *ale, uint16_t fb_vc, ale_prefix_t *prefix_table, int prefix_num);
 extern int fdt_parse_ale_config(void *fdt, ale_t *ale);
 extern void dump_ale_config(ale_t *ale);
 extern uint32_t ale_string_search(ale_prefix_t* prefix);
-extern uint32_t ale_get_prefix_index(uint32_t ale_index);
-extern uint32_t ale_get_prefix_index_from_ale_desc(uint64_t desc);
-extern uint32_t ale_get_prefix_index_from_nae_desc(uint64_t desc);
+extern int ale_get_prefix_index(uint32_t ale_index);
+extern int ale_get_prefix_index_from_ale_desc(uint64_t desc);
+extern int ale_get_prefix_index_from_nae_desc(uint64_t desc);
 extern int ale_insert_prefix(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update);
 extern int ale_delete_prefix(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update);
 
diff --git a/arch/mips/netlogic/lib/alelib/ale_msg.h b/arch/mips/netlogic/lib/alelib/ale_msg.h
index 236c6ff..6d261a3 100644
--- a/arch/mips/netlogic/lib/alelib/ale_msg.h
+++ b/arch/mips/netlogic/lib/alelib/ale_msg.h
@@ -75,6 +75,9 @@
 
 #define ALE_MEMORY_SEARCH_REQ_CNT_POS        40
 
+/* ALE memory search response message specific macros */
+#define ale_mem_rsp_get_desc_cnt(msg)        (((msg) >> ALE_MEMORY_SEARCH_DESC_CNT_POS) & ALE_MEMORY_SEARCH_DESC_CNT_MASK)
+#define ale_mem_rsp_get_rsp_ptr(msg)         ((msg) & ALE_MSG_RSP_PTR_MASK) 
 
 /*
  * ALE message builders
diff --git a/arch/mips/netlogic/lib/alelib/ale_node_db.c b/arch/mips/netlogic/lib/alelib/ale_node_db.c
index b8685e0..ffa33f0 100644
--- a/arch/mips/netlogic/lib/alelib/ale_node_db.c
+++ b/arch/mips/netlogic/lib/alelib/ale_node_db.c
@@ -494,8 +494,7 @@ ale_create_node_db(ale_db_entry_t* ale_db_hw,
 
 ale_db_entry_t* ale_db_hw_internal;
 int
-ale_create_db_internal(uint32_t fb_vc,
-                       ale_prefix_t *prefix_table,
+ale_create_db_internal(ale_prefix_t *prefix_table,
                        int prefix_num,
                        ale_db_entry_t* ale_db_hw){
 
@@ -644,7 +643,7 @@ void ale_update_db(ale_db_entry_t* ale_db_hw,
     db_idx = 0;
 }
 
-int ale_insert_prefix_internal(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update){
+int ale_insert_prefix_internal(ale_t* ale, ale_prefix_t* prefix, int last_update){
 
     int i, j;
     unsigned int current_node = 0; 
@@ -696,7 +695,7 @@ int ale_insert_prefix_internal(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, in
 }
 
 
-int ale_delete_prefix_internal(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update){
+int ale_delete_prefix_internal(ale_t* ale, ale_prefix_t* prefix, int last_update){
 
     int i, j, total_result = 0, delete_idx = 0;
    //int  db_found;
@@ -798,8 +797,8 @@ ale_string_search(ale_prefix_t* prefix){
     return(ale_string_search_internal(prefix, ale_db));
 }
 
-uint32_t
+int
 ale_get_prefix_index(uint32_t ale_index){
 
-    return(result_buf[ale_index]);
+    return(result_buf[ale_index] - 1);
 }
diff --git a/arch/mips/netlogic/lib/alelib/ale_node_db.h b/arch/mips/netlogic/lib/alelib/ale_node_db.h
index 1140cb1..6ff635d 100644
--- a/arch/mips/netlogic/lib/alelib/ale_node_db.h
+++ b/arch/mips/netlogic/lib/alelib/ale_node_db.h
@@ -129,10 +129,10 @@ static __inline__ void Enqueue(Queue *Q,unsigned int element)
     return;
 }
 
-extern int ale_create_db_internal(uint32_t fb_vc, ale_prefix_t *prefix_table, int prefix_num, ale_db_entry_t* ale_db_hw);
+extern int ale_create_db_internal(ale_prefix_t *prefix_table, int prefix_num, ale_db_entry_t* ale_db_hw);
 extern unsigned int ale_string_search_internal(ale_prefix_t* prefix, ale_node_t* ale_db);
-extern int ale_insert_prefix_internal(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update);
-extern int ale_delete_prefix_internal(ale_t* ale, uint16_t vc, ale_prefix_t* prefix, int last_update);
+extern int ale_insert_prefix_internal(ale_t* ale, ale_prefix_t* prefix, int last_update);
+extern int ale_delete_prefix_internal(ale_t* ale, ale_prefix_t* prefix, int last_update);
 
 #endif /* _ALE_NODE_DB_H_ */
 
-- 
1.9.1

