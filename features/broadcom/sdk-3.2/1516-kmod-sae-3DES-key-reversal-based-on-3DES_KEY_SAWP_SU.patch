From 6083861538a13a113d1b94e1605f4649f37beb31 Mon Sep 17 00:00:00 2001
From: Manoj Vellala <manojv@broadcom.com>
Date: Thu, 21 Nov 2013 20:51:00 -0800
Subject: [PATCH 1516/1532] kmod/sae: 3DES key reversal based on
 3DES_KEY_SAWP_SUPPORT feature

        New seclib requires application to do key
        reversal for 3DES in case of 3xx, 8xx, 4xx.
        In case of 9xx and 3xx no sawap is needed.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/crypto/sae/nlm_enc.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/drivers/crypto/sae/nlm_enc.c b/drivers/crypto/sae/nlm_enc.c
index 0afefb1..08b89f9 100755
--- a/drivers/crypto/sae/nlm_enc.c
+++ b/drivers/crypto/sae/nlm_enc.c
@@ -62,6 +62,8 @@ static int no_of_alg_registered = 0;
 
 extern struct nlm_crypto_stat crypto_stat[MAX_CPU];
 
+extern struct cryptosoc_lib_params lparam;
+
 static int enc_cra_init(struct crypto_tfm *tfm)
 { 
 	tfm->crt_ablkcipher.reqsize = PACKET_DESC_SIZE; //reqsize of 512 bytes for packet desc
@@ -80,6 +82,8 @@ xlp_setkey(struct crypto_ablkcipher *tfm, uint16_t stat)
 	struct nlm_enc_ctx *nlm_ctx = nlm_crypto_ablkcipher_ctx(tfm); 
 	int nsdescs = saesoc_calc_sdesc_cnt(&nlm_ctx->initp,NULL);
 	struct saesoc_session_desc *s_desc = &nlm_ctx->enc_s_desc;
+        struct saesoc_session_init_params *initp = &nlm_ctx->initp;
+
 	nlm_ctx->stat = stat;
 
 	if(saesoc_new_session(&nlm_ctx->initp,&s_desc,nsdescs, NULL) < 0)
@@ -88,6 +92,21 @@ xlp_setkey(struct crypto_ablkcipher *tfm, uint16_t stat)
 	nlm_ctx->initp.cipher.flags = 0;
 
 	s_desc = &nlm_ctx->dec_s_desc;
+	
+        if((nlm_ctx->initp.cipher.type == SAESOC_CIPHER_TYPE_TDES) &&
+                               (!(nlm_ctx->initp.cipher.flags & SAESOC_CF_ENCRYPT)) && 
+                               (!(lparam.saesoc_feature_set & SAESOC_FF_3DES_KEY_SWAP_SUPPORT))) {
+
+                 /* Software needs to swap the keys for 3DES
+                  * as hardware has no support for key swap
+                  */
+                 unsigned long long  * key = (unsigned long long  *)nlm_ctx->initp.cipher.key;
+                 unsigned long long decrypt_key[3];
+                 decrypt_key[0] = key[2];
+                 decrypt_key[1] = key[1];
+                 decrypt_key[2] = key[0];
+                 nlm_ctx->initp.cipher.key = (char *)decrypt_key;
+        }
 
 	if(saesoc_new_session(&nlm_ctx->initp,&s_desc,nsdescs, NULL) < 0)
 		 printk("%s,%d Error \n", __FUNCTION__, __LINE__); 
-- 
1.9.1

