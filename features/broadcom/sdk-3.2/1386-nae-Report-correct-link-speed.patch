From 6d8399e1e1906ad0658d7f8c22ab06f12e58bcde Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Mon, 10 Dec 2012 12:55:18 +0530
Subject: [PATCH 1386/1532] nae: Report correct link speed.

     Detect and report correct link speed when queried through ethtool.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c | 24 +++++++++++------------
 drivers/net/ethernet/broadcom/nae/xlpge_nae.c     | 22 ++++++---------------
 2 files changed, 18 insertions(+), 28 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
index 478def3..94bb680 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
@@ -40,6 +40,7 @@
 #include <asm/netlogic/hal/nlm_hal_nae.h>
 #include <asm/netlogic/hal/nlm_eeprom.h>
 #include "xlpge.h"
+static u32 xlp_get_link(struct net_device *dev);
 extern struct eeprom_data * get_nlm_eeprom(void);
 #define	NLM_STATS_KEY_LEN	\
 	(sizeof(struct net_device_stats) / sizeof(ulong))
@@ -75,8 +76,7 @@ static struct {
 static int xlp_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
 {
 	struct dev_data *priv = netdev_priv(dev);
-	int mii_status;
-
+	struct nlm_hal_mii_info mii_info;
 	if (priv->type != SGMII_IF) {
 		cmd->supported = SUPPORTED_FIBRE | SUPPORTED_10000baseT_Full;
 		cmd->advertising = SUPPORTED_FIBRE | SUPPORTED_10000baseT_Full;
@@ -102,18 +102,17 @@ static int xlp_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
 
 	cmd->advertising = priv->advertising;
 
-	mii_status = nlm_xlp_mac_mii_read(priv, MII_NCONFIG);
-	priv->speed = (mii_status >> 3) & 0x03;
-
+	nlm_hal_status_ext_phy( priv->node, priv->phy.addr, &mii_info);
+        priv->speed = mii_info.speed;
+        cmd->duplex = mii_info.duplex;
 	cmd->speed = (priv->speed == xlp_mac_speed_1000) ? SPEED_1000 :
 			(priv->speed == xlp_mac_speed_100) ?
 				SPEED_100 : SPEED_10;
 
-	cmd->duplex = (mii_status >> 5) & 0x1;
 	cmd->port = PORT_TP;
-	cmd->phy_address = priv->port;
+	cmd->phy_address = mii_info.phyaddr;
 	cmd->transceiver = XCVR_INTERNAL;
-	cmd->autoneg = (~(mii_status >> 14)) & 0x1;
+	cmd->autoneg  = 1; /*Autoneg is always enabled by default*/ 
 	cmd->maxtxpkt = 0;
 	cmd->maxrxpkt = 0;
 
@@ -256,18 +255,19 @@ static int xlp_nway_reset(struct net_device *dev)
 static u32 xlp_get_link(struct net_device *dev)
 {
 	struct dev_data *priv = netdev_priv(dev);
-	int mii_status;
+	struct nlm_hal_mii_info mii_info;
 	ulong flags;
 	if (priv->type != SGMII_IF)
 		return -EIO;
 
 	spin_lock_irqsave(&priv->lock, flags);
-	mii_status = nlm_xlp_mac_mii_read(priv, MII_BMSR);
+	nlm_hal_status_ext_phy( priv->node, priv->phy.addr, &mii_info);
 
 	spin_unlock_irqrestore(&priv->lock, flags);
 
-	if(mii_status & BMSR_LSTATUS)
-		return 1;
+	if(mii_info.link_stat==1)
+                return 1;
+
 	return 0;
 }
 
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index afdd801..da03f07 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -631,7 +631,7 @@ void nlm_xlp_mac_set_enable(struct dev_data *priv, int flag)
 	int inf;
 	uint32_t speed = 0, duplex = 0, ifmode = 0;
 	uint32_t netwk_inf = 0, mac_cfg2 = 0;
-
+	struct nlm_hal_mii_info mii_info;
 
 	if ((priv->type != SGMII_IF) && (priv->type != XAUI_IF))
 		return;
@@ -649,8 +649,11 @@ void nlm_xlp_mac_set_enable(struct dev_data *priv, int flag)
 
 	if (flag) {
 		if (priv->type == SGMII_IF) {
-			if (nlm_hal_get_phy_status(priv->node, inf,
-				&speed, &duplex)) {
+
+			if(nlm_hal_status_ext_phy(priv->node, inf, &mii_info))
+			{		
+				speed= mii_info.speed;
+                                duplex= mii_info.duplex;	
 				ifmode = ((speed == 2) ? 2: 1);
 				nlm_hal_mac_disable(priv->node, inf,
 					priv->type);
@@ -681,19 +684,6 @@ void nlm_xlp_mac_set_enable(struct dev_data *priv, int flag)
 		nlm_hal_mac_disable(priv->node, inf, priv->type);
 }
 
-int nlm_xlp_link_up(struct dev_data *priv, int phy)
-{
-        uint16_t extstatus;
-
-	if (priv->type != SGMII_IF)
-                return -EIO;
-        nlm_hal_mdio_write(priv->node, NLM_HAL_EXT_MDIO, 0, BLOCK_7, LANE_CFG,
-		priv->phy.addr, 22, 0);
-        extstatus = nlm_hal_mdio_read(priv->node, NLM_HAL_EXT_MDIO, 0, BLOCK_7,
-		LANE_CFG, priv->phy.addr, 17);
-        return ((extstatus & 0x0400) ? 1 : 0 );
-}
-
 static int p2p_desc_mem_init(void)
 {
 	int cpu, cnt;
-- 
1.9.1

