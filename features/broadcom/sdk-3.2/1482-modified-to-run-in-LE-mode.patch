From 2b92ce9e77761340e678d9ae25ed76848bafd970 Mon Sep 17 00:00:00 2001
From: Alok Agrawat <aagrawat@netlogicmicro.com>
Date: Wed, 5 Oct 2011 19:48:14 +0530
Subject: [PATCH 1482/1532] modified to run in LE mode

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/crypto/sae/nlm_crypto.c | 63 ++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 62 insertions(+), 1 deletion(-)

diff --git a/drivers/crypto/sae/nlm_crypto.c b/drivers/crypto/sae/nlm_crypto.c
index abdd988..fa7391f 100644
--- a/drivers/crypto/sae/nlm_crypto.c
+++ b/drivers/crypto/sae/nlm_crypto.c
@@ -68,7 +68,7 @@ THE POSSIBILITY OF SUCH DAMAGE.
 #endif				/* TRACING */
 
 //#define dbg printk(KERN_ERR "\n %s %d",__FUNCTION__, __LINE__)
-#define dbg 
+//#define SAE_DEBUG 
 
 static int xlp_sae_major;
 static int xlp_sae_open(struct inode *, struct file *);
@@ -132,6 +132,19 @@ struct crypto_hw_cntrs {
     uint64_t op_cntr_3[NUM_VC];
 };
 
+
+#ifdef SAE_DEBUG
+static void dump_buffer(unsigned char *buf, unsigned int len, unsigned char *msg)
+{
+    int k = 0;
+    unsigned char *temp_buf[len*2+1];
+    printk("\n %s", msg);
+    for(k = 0; k < len; k++)
+	printk("%.2x",buf[k]);
+
+}
+#endif
+
     static void
 nlm_crypto_print_hw_cntrs(struct crypto_hw_cntrs *hw_cnt)
 {
@@ -745,6 +758,30 @@ crypto_cleanup_session(struct crypto_session *session)
     return 0;
 }
 
+void nlm_sae_make_desc(void *cntrl_desc, void *pkt_desc, struct nlm_crypto_param *cprm)
+{
+        uint32_t i = 0, j = 0;
+        uint64_t *ptr = (uint64_t *) pkt_desc;
+	uint64_t *ptr_cntrl = (uint64_t *) cntrl_desc;
+
+	ptr_cntrl[0] = cpu_to_be64(ptr_cntrl[0]);
+
+        ptr[0] = cpu_to_be64(gen_pkt_desc_0(cprm));
+        ptr[1] = cpu_to_be64(gen_pkt_desc_1(cprm));
+        ptr[2] = cpu_to_be64(gen_pkt_desc_2(cprm));
+        ptr[3] = cpu_to_be64(gen_pkt_desc_3(cprm));
+
+        while (i < cprm->nr_frags) {
+                ptr[4 + 2 * i] = cpu_to_be64(gen_pkt_desc_4(cprm, i));
+                ptr[4 + 2 * i + 1] = cpu_to_be64(gen_pkt_desc_5(cprm, i));
+                i++;
+        }
+        i = 4 + cprm->nr_frags * 2;
+
+        while (j < cprm->designer_freeback_len)
+                ptr[i++] = cpu_to_be64(cprm->designer_fb[j]);
+
+}
 /******************** cipher auth api ****************************/
 /*
 // Only sessions are supported
@@ -847,6 +884,29 @@ crypto_cipher_auth_op(struct crypto_session *session, struct crypto_param *cop)
     cprm.designer_fb[2] = cop->designer_fb[2];
     cprm.designer_fb[3] = cop->designer_fb[3];
 
+#ifdef SAE_DEBUG
+    if(session->aip)
+    {
+	    printk("auth_alg = %d auth_mode = %d enc = %d, src_len = %d hash_bit_count = %d hash_source = %d auth_len = %d auth_offset = %d tag_len = %d auth_key_len = %d nr_frags = %d\n",
+    	session->aip->auth_alg, session->aip->auth_mode, cprm.enc, cprm.src_len, cprm.hash_bit_count, cprm.hash_source, cprm.auth_len, cprm.auth_offset, cprm.tag_len, cprm.auth_key_len, cprm.nr_frags); 
+	if(cprm.auth_key_len)
+		dump_buffer(session->aip->auth_key->buf, cprm.auth_key_len, "Auth_key:");
+    }
+
+    if(session->cip)
+    {
+    	printk("cipher_alg = %d cipher_mode = %d enc = %d, src_len = %d iv_len = %d iv_offset = %d cipher_len = %d cipher_offset = %d cipher_key_len = %d nr_frags = %d\n",
+    	session->cip->cipher_alg, session->cip->cipher_mode, cprm.enc, cprm.src_len, cprm.iv_len, cprm.iv_offset, cprm.cipher_len, cprm.cipher_offset, cprm.cipher_key_len, cprm.nr_frags); 
+	if(cprm.cipher_key_len)
+		dump_buffer(session->cip->cipher_key->buf, cprm.cipher_key_len, "Cipher_key:");
+    }
+    i = 0;
+    while (i < cop->nr_frags) {
+    	dump_buffer(cop->src[i].buf, cop->src[i].iov_len, "SRC:");
+    	i++;
+    }    
+#endif
+
     if(session->cip)
       update_cipher_stats(session->cip->cipher_alg, session->cip->cipher_mode, cop->cipher_len);
     if(session->aip)
@@ -855,6 +915,7 @@ crypto_cipher_auth_op(struct crypto_session *session, struct crypto_param *cop)
     nlm_tx_id = (uint64_t) cop;
 
     msg_hdl = 0;
+    nlm_sae_make_desc((void *) session->cntrl_desc, (void *) session->pkt_desc, &cprm);
     ret = nlm_hal_crypto_send_request(crypto_get_vc(), nlm_fb_vc,
 	    (void *) session->cntrl_desc,
 	    virt_to_phys(session->cntrl_desc),
-- 
1.9.1

