From cb1d1c16ed371665e7dbb134e2f3473fbcab38b9 Mon Sep 17 00:00:00 2001
From: Alok Agrawat <alok@broadcom.com>
Date: Fri, 14 Feb 2014 01:37:42 -0800
Subject: [PATCH 1221/1532] 5xx: CDE support added

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/nlm_cde/nlm_cde.c | 17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

diff --git a/drivers/misc/netlogic/nlm_cde/nlm_cde.c b/drivers/misc/netlogic/nlm_cde/nlm_cde.c
index 610778d..5e2541c 100644
--- a/drivers/misc/netlogic/nlm_cde/nlm_cde.c
+++ b/drivers/misc/netlogic/nlm_cde/nlm_cde.c
@@ -280,10 +280,10 @@ static int send_free_desc(void)
 
 		if(is_nlm_xlp2xx())
 			status = send_message_1(MSGRNG_2XX_STNID_CMP1, &fd_msg);
-		else if(is_9xx)
-			status = send_message_1(MSGRNG_9XX_STNID_CMP1, &fd_msg);
 		else if(is_nlm_xlp5xx())
 			status = send_message_1(MSGRNG_5XX_STNID_CMP1, &fd_msg);
+		else if(is_nlm_xlp9xx())	
+			status = send_message_1(MSGRNG_9XX_STNID_CMP1, &fd_msg);
 		else
 			status = send_message_1(MSGRNG_STNID_CMP1, &fd_msg);
 
@@ -555,7 +555,7 @@ void return_free_descriptors(msg *msg_list, int msg_index)
 			num_desc = (return_msg.msg1>>40 & 0xffff);
 		}
 
-		if(is_9xx)
+		if(is_nlm_xlp9xx() || is_nlm_xlp5xx())
 			temp_desc = (uint64_t *) phys_to_virt(return_msg.msg0 & 0xffffffffffUll);
 		else
 			temp_desc = (uint64_t *) phys_to_virt(return_msg.msg1 & 0xffffffffffUll);
@@ -571,10 +571,10 @@ void return_free_descriptors(msg *msg_list, int msg_index)
 				fd_msg.msg0 = ((uint64_t) used_fd[k]);
 				if(is_nlm_xlp2xx())
 					status = send_message_1(MSGRNG_2XX_STNID_CMP1, &fd_msg);
-				else if(is_9xx)
-					status = send_message_1(MSGRNG_9XX_STNID_CMP1, &fd_msg);
 				else if(is_nlm_xlp5xx())
 					status = send_message_1(MSGRNG_5XX_STNID_CMP1, &fd_msg);
+				else if(is_nlm_xlp9xx())
+					status = send_message_1(MSGRNG_9XX_STNID_CMP1, &fd_msg);
 				else
 					status = send_message_1(MSGRNG_STNID_CMP1, &fd_msg);
 				if (status != 0)
@@ -676,7 +676,6 @@ cmp_data_t* nlm_cde_init()
 	if (!cmp_data)
 		return NULL;
 	memset(cmp_data, 0, sizeof(cmp_data_t));
-
 	cmp_data->src = (unsigned char*)__get_free_pages(GFP_KERNEL, get_order(MAX_INPUT_BUFFER_SIZE));
 	if (! cmp_data->src)	{
 		printk("kmalloc returns Error : cmp_data->src\n");
@@ -717,7 +716,6 @@ cmp_data_t* nlm_cde_init()
 	cde_mem_size = cde_mem_size_5 + cde_mem_size_1 + cde_mem_size_2 + cde_mem_size_3 + cde_mem_size_4;
 
 	if(cde_mem_size_5 < PAGE_SIZE) cde_mem_size_5 = PAGE_SIZE;
-
 	cde_input_mem = cde_mem_start_1 = (unsigned char*)__get_free_pages(GFP_KERNEL, get_order(cde_mem_size_1));
 	if(cde_mem_start_1 == NULL)
 	{
@@ -947,7 +945,7 @@ unsigned int nlm_cde_send_request(cmp_data_t *cmp_data, unsigned int op,
 		if(is_nlm_xlp2xx())
 			status =  send_message_1(MSGRNG_2XX_STNID_CMP0, (struct msgrng_msg *) (cmp_msg + i));
 		else
-			if(is_9xx)
+			if(is_nlm_xlp9xx())
 				status =  send_message_2(MSGRNG_9XX_STNID_CMP0, (struct msgrng_msg *) (cmp_msg + i));
 			else if(is_nlm_xlp5xx())
 				status =  send_message_2(MSGRNG_5XX_STNID_CMP0, (struct msgrng_msg *) (cmp_msg + i));
@@ -1097,7 +1095,6 @@ void xlp_cde_dev_initialize(void)
 	int i =0;
 	unsigned int ret;
 	int frequency = 0;
-
 	for(i = 0; i < num_cde_engine; i++)
 	{
 		if(is_nlm_xlp9xx() || is_nlm_xlp5xx())
@@ -1173,6 +1170,8 @@ static int __init xlp_cde_init(void)
 		num_cde_engine = NUM_CDE_ENGINE_XLP9XX;
 	else if (is_nlm_xlp5xx())
 		num_cde_engine = NUM_CDE_ENGINE_XLP5XX;
+	else if (cpu_is_xlp9xx())
+		num_cde_engine = NUM_CDE_ENGINE_XLP9XX;
 	else
 		num_cde_engine = NUM_CDE_ENGINE;
 
-- 
1.9.1

