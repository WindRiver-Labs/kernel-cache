From 415b595b57c52b0d3f1927aa53caef806438f566 Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Tue, 19 Nov 2013 17:38:49 +0530
Subject: [PATCH 0855/1532] xlp2xx_xmc: Fix BRCM PHY detection.

Also, consolidate BRCM PHY functions.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../netlogic/lib/netlib/external/ext_phy_bcm.c     | 211 ++-------------------
 arch/mips/netlogic/lib/netlib/include/nlm_nae.h    |   1 +
 arch/mips/netlogic/lib/netlib/src/ext_phy.c        |   1 +
 arch/mips/netlogic/lib/netlib/src/netsoc_nae.c     |   2 +-
 4 files changed, 18 insertions(+), 197 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c b/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c
index 1d8b945..d3e057d 100644
--- a/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c
+++ b/arch/mips/netlogic/lib/netlib/external/ext_phy_bcm.c
@@ -37,10 +37,6 @@ static int  bcm_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *d
 static void bcm_start_an(net_port_t *netport);
 static void bcm_init_phy(net_port_t *netport);
 
-static int  xmc_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *duplex);
-static void xmc_start_an(net_port_t *netport);
-static void xmc_init_phy(net_port_t *netport);
-
 ext_phy_t bcm_ext_phy[] = {
 {
         .name = "bcm5461s",
@@ -52,9 +48,9 @@ ext_phy_t bcm_ext_phy[] = {
 {
         .name = "bcm5482",
         .phy_idfer = 0xbcb2,
-        .get_status = xmc_get_phy_status,
-        .start_an = xmc_start_an,
-        .phy_init = xmc_init_phy,
+        .get_status = bcm_get_phy_status,
+        .start_an = bcm_start_an,
+        .phy_init = bcm_init_phy,
 },
 {
 	.name = "bcm5416",
@@ -67,179 +63,7 @@ ext_phy_t bcm_ext_phy[] = {
 
 
 /**
-* @brief bcm_get_phy_status function returns the status of an interface from the external BROADCOM PHY.
-*
-* @param [in] phy nlm_hal_ext_phy struct pointing to the BROADCOM PHY
-* @param [out] speed Link speed
-* @param [out] duplex Link duplex status
-* @param [in] node Node number
-*
-* @return
-*       - 1 - Link up, 0 - Link Down
-*
-* @ingroup hal_nae
-*
-*/
-static int bcm_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *duplex)
-{
-        int aux_status=0;
-        int status=0;
-        int phyaddr = netport->ext_phy_addr;
-        int bus = netport->ext_phy_bus;
-	nae_t *nae = netport->nae;
-        //int int_inf = phy->inf;
-
-        bcm_start_an(netport);
-
-        /*switch to Copper registers mode*/
-        __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1C, 0x7c00);
-        status = __netsoc_mdio_rd(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1C);
-        __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1C, ((status | (1<<15)) & ~1) );
-        aux_status = __netsoc_mdio_rd(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x19);
-        switch ((aux_status>>8) & 0x7){
-                case 0x7:
-                        *speed = SPEED_1000M;
-                        *duplex = 1;
-                break;
-
-                case 0x6:
-                        *speed = SPEED_1000M;
-                        *duplex = 0;
-                break;
-
-                case 0x5:
-                        *speed = SPEED_100M;
-                        *duplex = 1;
-                break;
-
-                case 0x3:
-                        *speed = SPEED_100M;
-                        *duplex = 0;
-                break;
-
-                case 0x2:
-                        *speed = SPEED_10M;
-                        *duplex = 1;
-                break;
-
-                case 0x1:
-                        *speed = SPEED_10M;
-                        *duplex = 0;
-                break;
-
-                default:
-                        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Unknown operating speed\n");
-                break;
-        }
-
-//#ifdef PHY_DEBUG
-        if(*speed==SPEED_1000M)
-                netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Configured with Speed  1000M");
-        if(*speed==SPEED_100M)
-                netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Configured with Speed 100M");
-        if(*speed==SPEED_10M)
-                netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Configured with Speed 10M");
-
-        if (*duplex == 1) {
-		netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Full duplex\n");
-	}
-	else {
-		netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Half duplex\n");
-	}
-//#endif
-        status = __netsoc_mdio_rd(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1);
-        if(status & (1<<2)){
-                netsoc_api_print(NETSOC_APIDBG_DEFAULT,"bus:%d phy:%d Link is up : %x\n", bus, phyaddr, status);
-                return 1;
-        }else{  
-                netsoc_api_print(NETSOC_APIDBG_DEFAULT,"bus:%d phy:%d Link is down : %x\n", bus, phyaddr, status);
-                return 0;
-        }
-}
-
-
-/**
-* @brief bcm_start_an function enables auto-negotiation on an external BROADCOM PHY.
-*
-* @param [in] phy nlm_hal_ext_phy struct pointing to the BROADCOM PHY
-* @param [in] node Node number
-*
-* @return
-*       - none
-*
-* @ingroup hal_nae
-*
-*/
-static void bcm_start_an(net_port_t *netport)
-{
-        int status, count;
-        int int_inf = netport->hw_port_id;
-	nae_t *nae = netport->nae;
-
-        status = __netsoc_mdio_rd(nae, NLM_HAL_INT_MDIO, 0, int_inf,  0x0);
-        __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, status|(1<<9)); // Restart XLP AN
-        /*Wait for XLP<->SGMII-PHY AN to be OK*/
-        count=0;
-        do {
-                netsoc_api_delay(100);
-                count++;
-                status = __netsoc_mdio_rd(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x1);
-                if(status & (1<<5)){ /* check for autonegotiation to be completed */
-                      netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Autonegotiation is OK with PHY-SGMII =0x%x \n", int_inf);
-                        return;
-                }
-                status = __netsoc_mdio_rd(nae, NLM_HAL_INT_MDIO, 0, int_inf,  0x0);
-                __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, status|(1<<9)); // Restart XLP AN
-        }while(count<100);
-
-        //netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Autonegotiation is NOT OK for PHY-SGMII inf=0x%x int_inf =0x%x\n", phyaddr, int_inf);
-        return;
-}
-
-
-/**
-* @brief bcm_init_phy function initializes an external BROADCOM PHY.
-*
-* @param [in] phy nlm_hal_ext_phy struct pointing to the BROADCOM PHY
-* @param [in] node Node number
-*
-* @return
-*       - none
-*
-* @ingroup hal_nae
-*
-*/
-static void bcm_init_phy(net_port_t *netport)
-{
-        int bus = netport->ext_phy_bus;
-        int phyaddr = netport->ext_phy_addr;
-        int int_inf = netport->hw_port_id;
-        int status=0;
-	nae_t *nae = netport->nae;
-
-        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"BCM_INIT_PHY \n ");
-
-        __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x04, 0x01); // selector field
-        __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, 0); // disable XLP AN
-        __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, 0x8000); // soft reset
-
-        /*switch to 1000Base-X registers mode*/
-        /*refer mode control register in broadcom datasheet*/
-        __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x1c, 0x7c00);
-        status = __netsoc_mdio_rd(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1C);
-        __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x1c, (status | (1<<15)| (0x1)));
-        __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x0, 0x100 ); /*Disable AN*/
-
-        status = __netsoc_mdio_rd(nae, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x0);
-        __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x0, status | (1<<12) ); /*Enable AN on SGMMII side of PHY*/
-        status = __netsoc_mdio_rd(nae, NLM_HAL_INT_MDIO, 0, int_inf,  0x0);
-        __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, status|(1<<12)); // Enable XLP AN
-        return;
-}
-
-
-/**
-* @brief xmc_get_phy_status function returns the status of an interface from the XMC external BROADCOM PHY.
+* @brief bcm_get_phy_status function returns the status of an interface from the  external BROADCOM PHY.
 *
 * @param[in] phy                :nlm_hal_ext_phy struct pointing to the BROADCOM PHY
 * @param[out] speed             :Link speed
@@ -252,7 +76,7 @@ static void bcm_init_phy(net_port_t *netport)
 * @ingroup hal_nae
 *
 */
-static int xmc_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *duplex)
+static int bcm_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *duplex)
 {
         int aux_status=0;
         int status=0;
@@ -322,12 +146,10 @@ static int xmc_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *du
         status = __netsoc_mdio_rd(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1);
         if(status & (1<<2)){
                 netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Link is up : %x\n", status);
-                //xmc_phy_status(netport);
                 //netsoc_api_print(NETSOC_APIDBG_DEFAULT,"%s: exit\n", __func__);
                 return 1;
         }else{
                 netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Link is down : %x\n", status);
-                //xmc_phy_status(netport);
                 //netsoc_api_print(NETSOC_APIDBG_DEFAULT,"%s: exit\n", __func__);
                 return 0;
         }
@@ -335,7 +157,7 @@ static int xmc_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *du
 
 
 /**
-* @brief xmc_start_an function enables auto-negotiation on XMC board external BROADCOM PHY.
+* @brief bcm_start_an function enables auto-negotiation on a board external BROADCOM PHY.
 *
 * @param[in] phy        :nlm_hal_ext_phy struct pointing to the BROADCOM PHY
 * @param [in] node Node number
@@ -346,7 +168,7 @@ static int xmc_get_phy_status(net_port_t *netport, uint32_t *speed, uint32_t *du
 * @ingroup hal_nae
 *
 */
-static void xmc_start_an(net_port_t *netport)
+static void bcm_start_an(net_port_t *netport)
 {
         int status, count;
         int phyaddr = netport->ext_phy_addr;
@@ -366,7 +188,6 @@ static void xmc_start_an(net_port_t *netport)
                 status = __netsoc_mdio_rd(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x1);
                 if(status & (1<<5)){ /* check for autonegotiation to be completed */
                         netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Autonegotiation is OK with PHY-SGMII =0x%x \n", int_inf);
-                        //xmc_phy_status(netport);
                         //netsoc_api_print(NETSOC_APIDBG_DEFAULT,"%s: exit\n", __func__);
                         return;
                 }
@@ -375,13 +196,12 @@ static void xmc_start_an(net_port_t *netport)
         }while(count<100);
 
         netsoc_api_print(NETSOC_APIDBG_DEFAULT,"Autonegotiation is NOT OK for PHY-SGMII inf=0x%x int_inf =0x%x\n", phyaddr, int_inf);
-        //xmc_phy_status(netport);
         return;
 }
 
 
 /**
-* @brief xmc_init_phy function initializes an external BROADCOM 5482 PHY on the XMC board.
+* @brief bcm_init_phy function initializes an external BROADCOM PHY.
 *
 * @param[in] phy        :nlm_hal_ext_phy struct pointing to the BROADCOM PHY
 * @param [in] node Node number
@@ -392,7 +212,7 @@ static void xmc_start_an(net_port_t *netport)
 * @ingroup hal_nae
 *
 */
-static void xmc_init_phy(net_port_t *netport)
+static void bcm_init_phy(net_port_t *netport)
 {
         int i, aux_status;
         int bus = netport->ext_phy_bus;
@@ -401,21 +221,21 @@ static void xmc_init_phy(net_port_t *netport)
         int status=0;
 	nae_t *nae = netport->nae;
 
-        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"XMC_INIT_PHY \n ");
+        netsoc_api_print(NETSOC_APIDBG_DEFAULT,"BCM_INIT_PHY \n ");
 
         __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x04, 0x01); // selector field
         __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, 0); // disable XLP AN
         __netsoc_mdio_wr(nae, NLM_HAL_INT_MDIO, 0, int_inf, 0x00, 0x8000); // soft reset
 
-        /* XMC board has INTFSEL[1:0] = 01 which selects fiber and power down modes*/
 
         /* setup for SGMII-Copper mode */
         __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x1c, 0x7c00);
         status = __netsoc_mdio_rd(nae, NLM_HAL_EXT_MDIO, bus, phyaddr, 0x1C);
-        status = 0x7c00 | (2 << 1); // SGMII mode, copper registers
-        //netsoc_api_print(NETSOC_APIDBG_DEFAULT,"writing phyaddr %d reg 0x1c =0x%x \n", phyaddr, status);
-        __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x1c, (status | (1<<15)));
-
+	
+	if(netport->gig_phy_id==0x60c1){
+		status &= ~(0xff);
+		__netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x1c, (status | (1<<15)| (0x2<<1)));
+	}
         /* Turn off Signal Detect Enable on 1000BASE-X side */
         __netsoc_mdio_wr(nae, NLM_HAL_EXT_MDIO, bus, phyaddr,  0x1c, (0x5c00 | (1<<15)));
 
@@ -453,7 +273,6 @@ static void xmc_init_phy(net_port_t *netport)
 
                 i++;
         }while(i<50);
-        //xmc_phy_status(netport);
 #endif
 
         status = __netsoc_mdio_rd(nae, NLM_HAL_INT_MDIO, 0, int_inf,  0x0);
diff --git a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
index a0b9323..aa40503 100644
--- a/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/nlm_nae.h
@@ -304,6 +304,7 @@ struct nlm_hal_nae_port {
 	uint32_t param_index;
         int  ext_phy_addr;
         int  ext_phy_bus;
+        int  gig_phy_id;
 	void *phy_dev;
 	uint32_t  rxaui_scrambler; /* 0: disable scrambler ; 1: enable scrambler */
 	uint32_t  rxaui_mode;      
diff --git a/arch/mips/netlogic/lib/netlib/src/ext_phy.c b/arch/mips/netlogic/lib/netlib/src/ext_phy.c
index 2280a44..ed4eb02 100644
--- a/arch/mips/netlogic/lib/netlib/src/ext_phy.c
+++ b/arch/mips/netlogic/lib/netlib/src/ext_phy.c
@@ -76,6 +76,7 @@ void __netsoc_init_ext_phy(net_port_t *netport)
                 if (phyid == known_ext_phys[i].phy_idfer) {
                         phy_dev = &known_ext_phys[i];
 			netsoc_api_print(NETSOC_APIDBG_TRACE, "%s Phy detected on bus %d phyaddr 0x%x\n",phy_dev->name, netport->ext_phy_bus, netport->ext_phy_addr );
+			netport->gig_phy_id = phyid;
                         break;
                 }
                 i++;
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index 3c42ba7..524e476 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -344,7 +344,7 @@ static int __netsoc_gmac_mdio_read(nae_t *nae, uint32_t bus, uint32_t phyaddr, u
 			       | (0<<18) | nae_get_EXT_G_MDIO_DIV());
 
 	/* Read the data back */
-	return netsoc_read_mac_reg(mac_base, EXT_G0_MDIO_RD_STAT + bus * 4);
+	return (netsoc_read_mac_reg(mac_base, EXT_G0_MDIO_RD_STAT + bus * 4)& 0xffff);
 }
 
 static int __netsoc_gmac_mdio_write(nae_t *nae, uint32_t bus, uint32_t phyaddr, uint32_t regidx, uint16_t val)
-- 
1.9.1

