From f76107cd28d95bb4ade746abdbb1c777e8a4bbda Mon Sep 17 00:00:00 2001
From: kopal <kopal@broadcom.com>
Date: Wed, 17 Jul 2013 11:09:11 +0530
Subject: [PATCH 1418/1532] nae: ethtool support for flow control.

     flow control can be enabled and disabled using ethtool.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c | 37 +++++++++++++++++++++++
 drivers/net/ethernet/broadcom/nae/xlpge_nae.c     |  9 ++++--
 2 files changed, 44 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
index c996ad8..5124a03 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
@@ -202,6 +202,40 @@ static int xlp_set_eeprom(struct net_device *dev,
 	return 0;
 }
 
+static void xlp_get_pauseparam(struct net_device *dev,
+                                  struct ethtool_pauseparam *pause)
+{
+        struct dev_data *priv = netdev_priv(dev);
+	
+	pause->autoneg = 1;
+	if(priv->flow_ctrl==1)
+	{
+        	pause->rx_pause= 1;
+        	pause->tx_pause= 1;
+	}
+        else
+	{
+                pause->rx_pause=0;
+                pause->tx_pause=0;
+        }
+}
+static int xlp_set_pauseparam(struct net_device *dev,
+                                struct ethtool_pauseparam *pause)
+{
+        struct dev_data *priv = netdev_priv(dev);
+        net_port_t *netport=&priv->nae->ports[priv->port];
+        
+	if(pause->rx_pause && pause->tx_pause) {
+                netsoc_enable_flow_control(netport);
+                priv->flow_ctrl=1;
+        }
+        else {
+                netsoc_disable_flow_control(netport);
+                priv->flow_ctrl=0;
+        }       
+        return 0;
+}
+
 static void xlp_get_regs(struct net_device *dev,
 			 struct ethtool_regs *regs, void *p)
 {
@@ -456,6 +490,9 @@ static struct ethtool_ops xlp_ethtool_ops = {
 	.get_eeprom_len		= xlp_get_eeprom_len,
 	.get_eeprom		= xlp_get_eeprom,
 	.set_eeprom		= xlp_set_eeprom,
+	.get_pauseparam         = xlp_get_pauseparam,
+        .set_pauseparam         = xlp_set_pauseparam,
+
 #ifdef NOTYET
 	.msec_tx_config		= xlp_config_msec_tx,
 	.msec_tx_mem_config	= xlp_config_msec_tx_mem,
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index 077ab20..2c2eae4 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -1035,10 +1035,9 @@ int mac_refill_frin_one_buffer(struct net_device *dev, int cpu,
 static int  nlm_xlp_nae_open (struct net_device *dev)
 {
 	struct dev_data *priv = netdev_priv(dev);
-	int i;
+	int i, flow_ctrl;
 	int ret = 0;
 	nae_t* nae_cfg = priv->nae;
-	net_port_t* nae_port = priv->nae_port;
 	static int done = 0;
 	if (perf_mode == NLM_TCP_MODE) {
 #ifdef TSO_ENABLED
@@ -1090,6 +1089,12 @@ static int  nlm_xlp_nae_open (struct net_device *dev)
 
 	if(nae_cfg->owned)
 		netsoc_open_port(nae_cfg, priv->port);
+		/* flow control */
+		flow_ctrl= netsoc_flow_control_status(nae_cfg, priv->port);
+		if(flow_ctrl)
+			priv->flow_ctrl=1;
+		else 
+			priv->flow_ctrl=0;
 		//nlm_xlp_mac_set_enable(priv, 1);
 
 	return ret;
-- 
1.9.1

