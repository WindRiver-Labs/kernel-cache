From 7d914b11caf6056187416cddd7344f57157b724e Mon Sep 17 00:00:00 2001
From: reshmic <reshmic@broadcom.com>
Date: Wed, 2 May 2012 17:08:52 +0530
Subject: [PATCH 1495/1532] kmod/sae:Hang on encryption operation when packets
 are pumped at high rate.

Removed while loop on "send to security engine" and return -EAGAIN when send fails.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/crypto/sae/nlm_aead.c | 14 +++++---------
 drivers/crypto/sae/nlm_auth.c |  2 +-
 drivers/crypto/sae/nlm_enc.c  | 12 ++++++++++--
 3 files changed, 16 insertions(+), 12 deletions(-)

diff --git a/drivers/crypto/sae/nlm_aead.c b/drivers/crypto/sae/nlm_aead.c
index eb2c593..bd9153e 100755
--- a/drivers/crypto/sae/nlm_aead.c
+++ b/drivers/crypto/sae/nlm_aead.c
@@ -857,8 +857,7 @@ static int aead_crypt_gcm(struct aead_request *req, unsigned int op)
 	msgrng_access_disable(msgrng_flags);
 #endif
 	if(err){
-		printk("err\n");
-		return -EIO;
+		return -EAGAIN;
 	}
 
 
@@ -1075,8 +1074,7 @@ static int aead_crypt_ccm(struct aead_request *req, unsigned int op)
 	msgrng_access_disable(msgrng_flags);
 #endif
 	if(err){
-		printk("err\n");
-		return -EIO;
+		return -EAGAIN;
 	}
 
 
@@ -1204,7 +1202,7 @@ static int aead_crypt_ctr(struct aead_request *req, unsigned int op)
 	msgrng_access_disable(msgrng_flags);
 #endif
 	if(err){
-		return -EIO;
+		return -EAGAIN;
 	}
 
 	return -EINPROGRESS;
@@ -1313,8 +1311,7 @@ static int aead_crypt_3des(struct aead_request *req, unsigned int op)
 	msgrng_access_disable(msgrng_flags);
 #endif
 	if(err){
-		printk("err\n");
-		return -EIO;
+		return -EAGAIN;
 	}
 
 
@@ -1422,8 +1419,7 @@ static int aead_crypt(struct aead_request *req, unsigned int op)
 	msgrng_access_disable(msgrng_flags);
 #endif
 	if(err){
-		printk("err\n");
-		return -EIO;
+		return -EAGAIN;
 	}
 
 	return -EINPROGRESS;
diff --git a/drivers/crypto/sae/nlm_auth.c b/drivers/crypto/sae/nlm_auth.c
index 5aff0aa..442dcea 100644
--- a/drivers/crypto/sae/nlm_auth.c
+++ b/drivers/crypto/sae/nlm_auth.c
@@ -332,7 +332,7 @@ xlp_auth_final(struct shash_desc *desc, uint8_t *out)
 		if ( auth_pkt_desc->is_allocated )
 			kfree(auth_pkt_desc->pkt_param);
 		preempt_enable();
-		return -EIO;
+		return -EAGAIN;
 	}
 
 #ifdef NLM_CRYPTO_DEBUG
diff --git a/drivers/crypto/sae/nlm_enc.c b/drivers/crypto/sae/nlm_enc.c
index ac721cd..48aa677 100755
--- a/drivers/crypto/sae/nlm_enc.c
+++ b/drivers/crypto/sae/nlm_enc.c
@@ -259,6 +259,9 @@ xlp_crypt(struct ablkcipher_request *req, unsigned int enc, int iv_size, struct
 	unsigned int cipher_len = req->nbytes;
 	struct nlm_crypto_pkt_param * pkt_param = (struct nlm_crypto_pkt_param *) NLM_CRYPTO_PKT_PARAM_OFFSET(ablkcipher_request_ctx(req));
 	struct nlm_async_crypto * async =  (struct nlm_async_crypto *)NLM_ASYNC_PTR_PARAM_OFFSET(ablkcipher_request_ctx(req));;
+	int ret = -EINPROGRESS; 
+	int try = 0;
+
 	async->pkt_param = NULL;
 
 	nlm_crypto_fill_cipher_pkt_param(ctrl, pkt_param, enc,0,iv_size,iv_size ,req->nbytes); 
@@ -299,12 +302,17 @@ xlp_crypt(struct ablkcipher_request *req, unsigned int enc, int iv_size, struct
 	msgrng_access_enable(msgrng_flags);
 #endif
 	node_sae_base = (node << NODE_BASE_SHIFT_BIT) | crypto_vc_base;
-	while( nlm_hal_send_msg3(node_sae_base, 0 /*code */ , msg0, msg1, (unsigned long )async) != 0 );
+	while( nlm_hal_send_msg3(node_sae_base, 0 /*code */ , msg0, msg1, (unsigned long )async) != 0 ){
+		if ( try++ > 16) {
+			ret = -EAGAIN;
+			break;
+		}
+	}
 #ifdef CONFIG_32BIT
 	msgrng_access_disable(msgrng_flags);
 #endif
 	preempt_enable();
-	return -EINPROGRESS;
+	return ret;
 }
 
 static int
-- 
1.9.1

