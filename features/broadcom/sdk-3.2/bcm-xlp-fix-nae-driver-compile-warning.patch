From 05ad5bc5bd1d1c2deaafdb39df6f6d21fbd49558 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Wed, 29 Apr 2015 14:28:28 +0800
Subject: [PATCH 1/6] bcm-xlp: fix nae driver compile warning

Fix compile warning of bcm-xlp's nae driver.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../netlogic/lib/netlib/include/netsoc_libiface.h  |    8 ++++----
 arch/mips/netlogic/lib/netlib/src/netsoc_api.c     |    4 ++--
 drivers/net/ethernet/broadcom/nae/xlpge_board.c    |    1 -
 drivers/net/ethernet/broadcom/nae/xlpge_nae.c      |   12 ++++++------
 drivers/net/ethernet/broadcom/nae/xlpge_rx.c       |    5 +----
 drivers/net/ethernet/broadcom/nae/xlpge_tx.c       |    2 +-
 6 files changed, 14 insertions(+), 18 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
index 0d8071d..db67cd1 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_libiface.h
@@ -46,8 +46,8 @@ extern void (*netsoc_lib_writeq)(uint64_t base, uint32_t index, uint64_t val);
 
 extern void *(*netsoc_lib_contig_malloc)(uint32_t align, uint32_t size);
 extern void (*netsoc_lib_contig_free)(void *buf);
-extern uint64_t (*netsoc_lib_virttophys)(void *);
-extern void *(*netsoc_lib_phystovirt)(uint64_t);
+extern unsigned long (*netsoc_lib_virttophys)(volatile const void *);
+extern void *(*netsoc_lib_phystovirt)(unsigned long);
 
 enum netsoc_api_dbglevels{
 	NETSOC_APIDBG_DEFAULT = 0x1,
@@ -128,8 +128,8 @@ struct netsoc_lib_param {
 
         void *(*contig_alloc)(uint32_t align, uint32_t size);
         void (*contig_free)(void *buf);
-        uint64_t (*virt_to_phys)(void *);
-        void *(*phys_to_virt)(uint64_t);
+        unsigned long (*virt_to_phys)(volatile const void *);
+        void *(*phys_to_virt)(unsigned long);
 	/*library params */
 	int kr_en;
 	int netsoc_debug_level;
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
index c99e42d..7cd79cd 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
@@ -45,8 +45,8 @@ uint32_t (*netsoc_lib_readl)(uint64_t base, uint32_t index);
 void (*netsoc_lib_writel)(uint64_t base, uint32_t index, uint32_t val);
 void *(*netsoc_lib_contig_malloc)(uint32_t align, uint32_t size);
 void (*netsoc_lib_contig_free)(void *buf);
-uint64_t (*netsoc_lib_virttophys)(void *);
-void *(*netsoc_lib_phystovirt)(uint64_t);
+unsigned long (*netsoc_lib_virttophys)(volatile const void *);
+void *(*netsoc_lib_phystovirt)(unsigned long);
 unsigned int netsoc_api_dbglvl = NETSOC_APIDBG_DEFAULT;
 uint64_t (*netsoc_lib_readq)(uint64_t base, uint32_t index);
 void (*netsoc_lib_writeq)(uint64_t base, uint32_t index, uint64_t val);
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_board.c b/drivers/net/ethernet/broadcom/nae/xlpge_board.c
index 47278e6..95c817d 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_board.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_board.c
@@ -45,7 +45,6 @@ void get_mac_address(char * const mac_addr)
 	struct eeprom_data *nlm_eeprom=NULL;
         unsigned char temp,buf_write[2],buf0_read[2],buf1_read[2];
         int if_mac_set=0,mac0_set=0, mac1_set=0;
-        int i,j;
 
         buf_write[0]= MAC_MAGIC_BYTE0;
         buf_write[1]= MAC_MAGIC_BYTE1;
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index 64e86bb..dbf8bca 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -823,12 +823,12 @@ void nlm_xlp_nae_remove(void)
 
 static int nlm_xlp_port_poll(void *buff)
 {
-	uint32_t i,num_ports,maxnae,node,speed,duplex;
+	uint32_t i,maxnae,node,speed,duplex;
 	nae_t *nae_cfg;
 	static int arr[NLM_MAX_NODES][18];
 	maxnae = get_num_nae_pernode();
 	for (node = 0;node < NLM_MAX_NODES; node++) {
-		int num_nae, tmp, index=0;
+		int num_nae, index=0;
 		for(num_nae=0; num_nae<maxnae; num_nae++) {
 			nae_cfg = get_nae(node, num_nae);
 			if (nae_cfg == NULL)
@@ -985,12 +985,13 @@ static int p2p_desc_mem_init(void)
 
 static void nlm_enable_l3_l4_parser(nae_t *nae)
 {
-	nae_print(NAE_DBG_TRACE, "Enabling parser for nae node %d naeid %d\n",
-			nae->node, nae->nae_id);
 	l2_parser_config_t l2;
 	l3_parser_config_t l3;
 	l4_parser_config_t l4;
 
+	nae_print(NAE_DBG_TRACE, "Enabling parser for nae node %d naeid %d\n",
+			nae->node, nae->nae_id);
+
 	memset(&l2, 0, sizeof(l2));
 	memset(&l3, 0, sizeof(l3));
 	memset(&l4, 0, sizeof(l4));
@@ -1152,11 +1153,10 @@ static int  nlm_xlp_nae_stop (struct net_device *dev)
  * nlm_xlp_change_rx_flags - called when promiscuous mode is enabled/disabled
  *
  ****************************************************************************/
-static void  nlm_xlp_change_rx_flags (struct net_device *dev)
+static void  nlm_xlp_change_rx_flags (struct net_device *dev, int flags)
 {
 	struct dev_data *priv = netdev_priv(dev);
         net_port_t* nae_port = priv->nae_port;
-        int reg_val=0;
         if ((dev->flags & IFF_PROMISC)){
                netsoc_promisc_enable(nae_port);}
 
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
index b74309e..6071be2 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
@@ -72,8 +72,6 @@ void fill_alloc_failed(struct work_struct *work)
 	int cpu = smp_processor_id();
 	unsigned int frq_num, ret, abs_frq_num, buf_size;
 	struct sk_buff * skb;
-	int nodes = nlm_hal_get_num_nodes();
-	int nae_units = get_num_nae_pernode();
 	struct  dev_data *priv = container_of(work, struct dev_data, alloc_failed_work[cpu].work);
 	net_port_t *netport = priv->nae_port;	
 	nae_t* nae = netport->nae;
@@ -128,8 +126,8 @@ static inline int mac_refill_frin_one_buffer(struct net_device *dev, int cpu,
 	int nae_id = nae_cfg->nae_id;
 	int node = nae_cfg->node;
 	int hw_port_id = priv->hw_port_id; 
-	node_cpu = phys_cpu_to_log_map[node][nae_id][cpu];
 	int lcpu = smp_processor_id();
+	node_cpu = phys_cpu_to_log_map[node][nae_id][cpu];
 	
 	if (enable_jumbo)
 		if(truesize > NLM_RX_JUMBO_BUF_SIZE)
@@ -748,7 +746,6 @@ static inline void process_rx_packets(void *arg, int cpu, unsigned int src_id,
 	volatile u64 regval;
     struct skb_shared_hwtstamps *shhwtstamps;
 #endif
-	struct napi_struct *napi = (struct napi_struct *)arg;
 
 	if(nae_family_9xx){
 		msg1 = msg2;	
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
index 4cf413d..e58da4e 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
@@ -54,7 +54,7 @@ uint64_t err_replenish_count[NR_CPUS * 8] __cacheline_aligned;
  * @dev  -  this is per device based function
  * @skb  -  data buffer to send
  **********************************************************************/
-int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
+netdev_tx_t nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
 	struct dev_data *priv = netdev_priv(dev);
 	int cpu = hard_smp_processor_id(), ret = 0;
-- 
1.7.5.4

