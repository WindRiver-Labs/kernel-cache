From ae6ca4227f4df6e6569ffb733a9a3df288183a4b Mon Sep 17 00:00:00 2001
From: Vikas Gupta <vikas.gupta@broadcom.com>
Date: Tue, 14 Oct 2014 17:06:05 +0530
Subject: [PATCH 1026/1532] xlp9xx/5xx: Added support for Link status for
 XLAUI/XFI.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../netlogic/lib/netlib/include/netsoc_haliface.h  |  1 +
 arch/mips/netlogic/lib/netlib/include/netsoc_nae.h | 20 ++++++++++++
 .../mips/netlogic/lib/netlib/include/nlm_hal_nae.h | 16 +++++++---
 arch/mips/netlogic/lib/netlib/src/netsoc_api.c     |  2 +-
 arch/mips/netlogic/lib/netlib/src/netsoc_nae.c     |  2 +-
 arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c     | 36 ++++++++++++++++++++++
 arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c    |  2 +-
 7 files changed, 72 insertions(+), 7 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
index ec98276..80627d5 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_haliface.h
@@ -117,6 +117,7 @@ extern int __netsoc_alloc_poe_enq_storage(poe_t *poe);
 extern void __netsoc_enable_poe_stats(poe_t *poe);
 extern void __netsoc_print_poe_stats(poe_t *poe);
 extern void __netsoc_kr_init_an(nae_t *nae, int block);
+extern  __netsoc_port_link_status(net_port_t* netport);
 
 extern unsigned char pma2p0_mem_sgmii_4page [256];
 extern unsigned char pma2p0_mem_sgmii [256];
diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
index a5ba6d0..f500255 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
@@ -1524,4 +1524,24 @@ static inline int  __netsoc_validate_lib_param (struct netsoc_lib_param *param)
 	}
 }
 
+static inline int __netsoc_get_link_status(net_port_t *netport, uint32_t *speed, uint32_t *duplex)
+{
+	if (netport->iftype == SGMII_IF) {
+		return  __netsoc_get_phy_status(netport, speed, duplex);
+	}else{
+		if((netport->iftype == XFI_IF) || (netport->iftype == XAUI_IF) || (netport->iftype == RXAUI_IF)){
+			*speed = SPEED_10000M;
+			*duplex = 1;
+		}else if (netport->iftype == XLAUI_IF) {
+			*speed = SPEED_40000M;
+			*duplex = 1;
+		} else{ /*default*/
+			*speed = SPEED_10000M;
+			*duplex = 1;
+		}
+		return __netsoc_port_link_status(netport);
+	}
+}
+
+
 #endif
diff --git a/arch/mips/netlogic/lib/netlib/include/nlm_hal_nae.h b/arch/mips/netlogic/lib/netlib/include/nlm_hal_nae.h
index 457f47b..8b9cf7e 100644
--- a/arch/mips/netlogic/lib/netlib/include/nlm_hal_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/nlm_hal_nae.h
@@ -402,9 +402,11 @@ enum if_link {
 
 
 enum if_speed {
-        SPEED_10M = 0,
-        SPEED_100M,
-        SPEED_1000M
+        SPEED_10M = 10,
+        SPEED_100M  = 100,
+        SPEED_1000M  = 1000,	
+        SPEED_10000M  = 10000,  
+        SPEED_40000M   = 40000
 };
 
 
@@ -412,7 +414,13 @@ enum if_speed {
 #define SOFTRESET(x)                        ((x) << 11)
 #define STATS_EN(x)                         ((x) << 16)
 #define TX_EN(x)                            ((x) << 2)
-#define SPEED(x)                            ((x) & 0x3)
+
+static inline int get_sgmii_speed_config(unsigned int speed)
+{
+	if(speed==SPEED_10M) return 0;
+	if(speed==SPEED_100M) return 0x1;
+	if(speed==SPEED_1000M) return 0x2;
+}	
 
 /* MAC_CONF1 */
 #define INF_SOFTRESET(x)                    ((x) << 31)
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
index e6230f10..e825581 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_api.c
@@ -74,7 +74,7 @@ register_broadcom_phy,
 
 int netsoc_get_phy_status(net_port_t *port, uint32_t *duplex, uint32_t *speed)
 {
-	return __netsoc_get_phy_status(port, speed, duplex);
+	return __netsoc_get_link_status (port, duplex, speed);
 }
 
 
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index 307a7a0..10c3e59 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -2130,7 +2130,7 @@ void __netsoc_config_sgmii(net_port_t *netport)
         // Configure negotiated speed and mode
         netwk_inf  = netsoc_read_mac_reg(mac_base, NETWK_INF_CTRL_REG);
         netwk_inf &= (~(0x3));
-        netsoc_write_mac_reg(mac_base, NETWK_INF_CTRL_REG, netwk_inf | SPEED(speed));
+        netsoc_write_mac_reg(mac_base, NETWK_INF_CTRL_REG, netwk_inf | get_sgmii_speed_config(speed));
 
         mac_cfg2 = netsoc_read_mac_reg(mac_base, MAC_CONF2);
         mac_cfg2 &= (~(0x3 << 8));
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
index ac7426d..9875614 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_pcs.c
@@ -1626,6 +1626,42 @@ void __netsoc_check_for_remote_fault(nae_t *nae)
 	}
 }
 
+int __netsoc_port_link_status(net_port_t* netport)
+{
+	nae_t* nae = netport->nae;
+	int block =  netport->block_id;
+	uint64_t mac_base = netsoc_get_macreg_base_for_phy(nae->mac_base, block);
+	int lane_no;
+	if(netport->iftype == XFI_IF){
+		int lane_no = netport->hw_port_id%4;
+		if((netsoc_read_mac_reg(mac_base, PHY_LANE_0_STATUS+ lane_no) & (PHY_LANE_STAT_SPC)) == (PHY_LANE_STAT_SPC)) {
+			//nlm_print("XFI Link is UP port %d \n", lane_no);
+			netport->link_stat=1;
+			return 1;
+		}else{
+			//nlm_print("XFI Link is down for port %d\n", lane_no);
+			netport->link_stat=0;
+			return 0;
+		}
+
+	}else if(netport->iftype == XLAUI_IF){
+		for(lane_no = PHY_LANE_0_STATUS; lane_no <= PHY_LANE_3_STATUS; lane_no++) {
+			if((netsoc_read_mac_reg(mac_base,  PHY_LANE_0_STATUS+ lane_no) & (PHY_LANE_STAT_SPC)) != (PHY_LANE_STAT_SPC)) {
+				//nlm_print("XLAUI Link is down for port %d\n", netport->hw_port_id);
+				netport->link_stat=0;
+				return 0;
+			}
+		}
+		//nlm_print("XLAUI Link is UP for port %d\n", netport->hw_port_id);
+		netport->link_stat=1;
+		return 1;
+	}else{
+		netport->link_stat=1;
+		return 1; /*Links up for XAUI/RXAUI*/
+	}
+} 
+
+
 int __netsoc_wait_for_lanes_sync(nae_t *nae)
 {
 	uint32_t block, lane_status, lane_ctrl, count, timeout = 10000;
diff --git a/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c b/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c
index 427fe6f..d7d4163 100644
--- a/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/nlm_hal_nae.c
@@ -1340,7 +1340,7 @@ void nlm_hal_config_sgmii_if(int node, int inf)
 	// Configure negotiated speed and mode
         netwk_inf  = read_gmac_reg(node, inf, NETWK_INF_CTRL_REG);
         netwk_inf &= (~(0x3));
-	write_gmac_reg(node, inf , NETWK_INF_CTRL_REG, netwk_inf | SPEED(speed));
+	write_gmac_reg(node, inf , NETWK_INF_CTRL_REG, netwk_inf | get_sgmii_speed_config(speed));
 
         mac_cfg2 = read_gmac_reg(node, inf, MAC_CONF2);
         mac_cfg2 &= (~(0x3 << 8));
-- 
1.9.1

