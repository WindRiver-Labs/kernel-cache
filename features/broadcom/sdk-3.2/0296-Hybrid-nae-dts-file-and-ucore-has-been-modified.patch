From c388c4dc82ed8536a62e137864f13da07af7b57c Mon Sep 17 00:00:00 2001
From: Hareesh R <hareeshr@broadcom.com>
Date: Wed, 21 Mar 2012 19:08:08 +0530
Subject: [PATCH 0296/1532] Hybrid nae dts file and ucore has been modified

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/boot/dts/hybrid-nae.dts             | 854 ++++++++++++++++++--------
 arch/mips/boot/dts/xlp8xx-multi-os-hybrid.dts |  99 ++-
 2 files changed, 687 insertions(+), 266 deletions(-)

diff --git a/arch/mips/boot/dts/hybrid-nae.dts b/arch/mips/boot/dts/hybrid-nae.dts
index 832c7ca..c719930 100644
--- a/arch/mips/boot/dts/hybrid-nae.dts
+++ b/arch/mips/boot/dts/hybrid-nae.dts
@@ -1,340 +1,692 @@
-/* XLP8XX Device Tree Source
- *
- */
-
-/dts-v1/;
-/ {
+  nae@node-0 {
 	model = "MIPS,XLP8XX NAE CFG";
 	compatible = "NETL,XLP8XX_A0";
 	#address-cells = <1>;
 	#size-cells = <1>;
 	frequency = <500>;
 
+	/include/ "ucore.dts"
+
+        freein-fifo-config {
+                /* If shared is true,
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue, same value will be configured for all the queues.
+                   If shared is false,
+                        1. Onchip desc size per queue will be configured using num_free_desc specified at the port level.
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
+		freein-fifo-spill-mem-range = <0x00000000 0x0fe00000 0x00000000 0x00100000>; // 1MB @ 254MB
+                freein-fifo-shared = <1>;
+                freein-fifo-onchip-num-descs = <56>; 
+                freein-fifo-spill-num-descs = <1200>;
+        };
+
 	// VFBID MAP: Upto 127 entries
 	// (each entry is a pair of (vfbid , dest-vc)
 	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
-	vfbid-map = <
-			// NAE -> CPU mapping
-			// Each thread uses vc 1 as freeback VC.
-			// This is tied with fb-vc field.
-			0    1    1    5    2   9    3    13
-			4    17   5    21   6   25   7    29
-			8    33   9    37   10  41   11   45
-			12   49   13   53   14  57   15   61
-			16   65   17   69   18  73   19   77
-			20   81   21   85   22  89   23   93
-			24   97   25  101   26 105   27  109
-			28  113   29  117   30 121   31  125
-/*
-		     // NAE -> CPU mapping
-		     // Freeback VC = 0
-		      0   0  1   4  2   8  3  12
-		      4  16  5  20  6  24  7  28
-		      8  32  9  36 10  40 11  44
-		     12  48 13  52 14  56 15  60
-		     16  64 17  68 18  72 19  76
-		     20  80 21  84 22  88 23  92
-		     24  96 25 100 26 104 27 108
-		     28 112 29 116 30 120 31 124
-*/
-			// NAE -> NAE mapping
-			32 1000 33 1001 34 1002 35 1003
-			36 1004 37 1005 38 1006 39 1007
-			40 1008 41 1009 42 1010 43 1011
-			44 1012 45 1013 46 1014 47 1015
-			48 1016 49 1017 50 1018 51 1019
-
-			// NULL FBID Should map to cpu0 to detect NAE send message errors
-			127 0
-		>;
-
-	// FLOW Table Generation: CRC16 polynomial
-  	flow_crc_poly = <0xffff>;
-
-	ucore {
-		src@1 {
-			file = "default.c";
-			mask = <0xffff>;
-		};
+	vfbid-config {
+		shared = <1>;
+		vfbid-map = <
+		      // NULL FBID Should map to cpu0 to detect NAE send message errors
+		      127 0
+
+                >;
 	};
 
 	// Packet Ordering Engine (POE)
 	poe {	
 	
-		// Supported modes are 'enque', 'serial', 'bypass'
 		mode = "bypass";
 
+                distribution-enable = <1>;
+                // 16 bit mask
+                dist-drop-enable = <0>;
+                // 8 bit mask
+                class-drop-enable = <0>;
+                drop-timer = <0>;
+                dest-threshold = <0xa>;
+                dist-threshold = <0xa 0xa 0xa 0xa>;
+                statistics-enable = <0>;
+
 		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
 		// Format : 512-bit-vector is specified as 16 32-bit words
 		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
 		// Each word has the MSB select higer vc number and LSB select lower vc num
-		distribution_vectors {
-				     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
-				     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-				     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
-		};
-
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
 	};
 
 	complex@0 {
 		device_type = "nae-complex";
 		mode = "xaui";
-		loopback_mode = <0>;
-
-		// Max ingress fifo size 256 units (size of one unit is 64 byte)
-		iface_fifo_sizes = <55>;
-
-		// Max parser sequence fifo size 1024 packets
-		// (if 1588 Timestamp is not required, then max size increases to 2048)
-		parser_sequence_fifo_sizes = <225>;
-
-		// Since rx_buffer is per context, we can have a few different ways
-		//  to populate the operand
-//		num_channels = <4>;
-//		rx_buffer_sizes = <240 240 240 240>;
-		num_channels = <1>;
-		rx_buffer_sizes = <944>;
-
-		// Max available descriptors are 1024  (across all complexes).
-		// Per port num_free_descriptors must be even number
-		num_free_descs = <150>;
-		free_desc_sizes = <2048>;
-		ucore_mask = <0xffff>;
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels 
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			// In xlp3xx number of ucores available is 8. so, ucore_mask for xlp3xx is (ucore-mask & 0xFF)
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+			mgmt-port = <0 0 0 0>;
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
+
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+        	        rx-buffer-size = <128 128 128 128>;
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
 	};
 	complex@1 {
 		device_type = "nae-complex";
 		mode = "xaui";
-		loopback_mode = <0>;
-
-		// Max ingress fifo size 256 units (size of one unit is 64 byte)
-		iface_fifo_sizes = <55>;
-
-		// Max parser sequence fifo size 1024 packets
-		// (if 1588 Timestamp is not required, then max size increases to 2048)
-		parser_sequence_fifo_sizes = <225>;
-
-		// Since rx_buffer is per context, we can have a few different ways
-		//  to populate the operand
-//		num_channels = <4>;
-//		rx_buffer_sizes = <240 240 240 240>;
-		num_channels = <1>;
-		rx_buffer_sizes = <944>;
-
-		// Max available descriptors are 1024  (across all complexes).
-		// Per port num_free_descriptors must be even number
-		num_free_descs = <150>;
-		free_desc_sizes = <2048>;
-		ucore_mask = <0xffff>;
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
+
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
+
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
+
+
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+
 	};
 	complex@2 {
 		device_type = "nae-complex";
 		mode = "xaui";
-		loopback_mode = <0>;
-
-		// Max ingress fifo size 256 units (size of one unit is 64 byte)
-		iface_fifo_sizes = <55>;
-
-		// Max parser sequence fifo size 1024 packets
-		// (if 1588 Timestamp is not required, then max size increases to 2048)
-		parser_sequence_fifo_sizes = <225>;
-
-		// Since rx_buffer is per context, we can have a few different ways
-		//  to populate the operand
-//		num_channels = <4>;
-//		rx_buffer_sizes = <240 240 240 240>;
-		num_channels = <1>;
-		rx_buffer_sizes = <944>;
-
-		// Max available descriptors are 1024  (across all complexes).
-		// Per port num_free_descriptors must be even number
-		num_free_descs = <150>;
-		free_desc_sizes = <2048>;
-		ucore_mask = <0xffff>;
+
+                xaui {
+                        loopback = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
+
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
+
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+			
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
+
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
+
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
 	};
 	complex@3 {
 		device_type = "nae-complex";
 		mode = "xaui";
-		loopback_mode = <0>;
-
-		// Max ingress fifo size 256 units (size of one unit is 64 byte)
-		iface_fifo_sizes = <55>;
-
-		// Max parser sequence fifo size 1024 packets
-		// (if 1588 Timestamp is not required, then max size increases to 2048)
-		parser_sequence_fifo_sizes = <225>;
-
-		// Since rx_buffer is per context, we can have a few different ways
-		//  to populate the operand
-//		num_channels = <4>;
-//		rx_buffer_sizes = <240 240 240 240>;
-		num_channels = <1>;
-		rx_buffer_sizes = <944>;
-
-		// Max available descriptors are 1024  (across all complexes).
-		// Per port num_free_descriptors must be even number
-		num_free_descs = <150>;
-		free_desc_sizes = <2048>;
-		ucore_mask = <0xffff>;
+		xaui {
+			loopback = <0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+                sgmii {
+                        loopback = <0 0 0 0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <13 13 13 13>;
+
+                        ext-phy-addr = <12 15 14 13>;
+                        ext-phy-bus = <1 1 1 1>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        num-channels = <1 1 1 1>;
+                        parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        rx-buffer-size = <128 128 128 128>;
+
+
+                        // Max available descriptors are 1024 (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <52 52 52 52>;
+                        free-desc-size = <2048 2048 2048 2048>;
+                        ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+                };
 	};
 	complex@4 {
 		device_type = "nae-complex";
 		mode = "sgmii";
 
-		loopback_mode = <0 0>;
-
-		// Max ingress fifo size 256 units (size of one unit is 64 byte)
-		iface_fifo_sizes = <13 13>;
+		sgmii {
+			loopback = <0 0>;
+	
+			mgmt-port = <1 0>;
+
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+                
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
+	};
+};
+   nae@node-1 {
+	model = "MIPS,XLP8XX NAE CFG";
+	compatible = "NETL,XLP8XX_A0";
+	#address-cells = <1>;
+	#size-cells = <1>;
+	frequency = <500>;
 
-		ext_phy_addr = <17 16>;
-		ext_phy_bus = <0 0>;
+	/include/ "ucore.dts"
 
-		// Max parser sequence fifo size 1024 packets
-		// (if 1588 Timestamp is not required, then max size increases to 2048)
-		num_channels = <1 1>;
-		parser_sequence_fifo_sizes = <62 62>;
+        freein-fifo-config {
+                /* If shared is true,
+                        1. Ucore is going to use upto max queues(16 for XLP, 8 for storm) for buffer mgmt
+                        2. Onnchip desc size per queue, same value will be configured for all the queues.
+                   If shared is false,
+                        1. Onchip desc size per queue will be configured using num_free_desc specified at the port level.
+                   If spill descs per queue is specified,
+                        1. spill will be enabled for all the queues(except mgmt) using the spill memory specified in the OS config file.
+                */
 
-		// Since rx_buffer is per context, we can have a few different ways
-		//  to populate the operand
-		rx_buffer_sizes = <128 128>;
+                freein-fifo-shared = <0>;
+                freein-fifo-onchip-num-descs = <0>;
+                freein-fifo-spill-num-descs = <0>;
+        };
 
+	// VFBID MAP: Upto 127 entries
+	// (each entry is a pair of (vfbid , dest-vc)
+	// Legal range: (vfbid (0 - 126), dest-vc (0 - 4095))
+	vfbid-config {
+		shared = <1>;
+		vfbid-map = <
+		      // NULL FBID Should map to cpu0 to detect NAE send message errors
+		      127 0
 
-		// Max available descriptors are 1024 (across all complexes).
-		// Per port num_free_descriptors must be even number
-		num_free_descs = <52 52>;
-		free_desc_sizes = <2048 2048>;
-		ucore_mask = <0xffff 0xffff>;
+                >;
 	};
-};
 
+	// Packet Ordering Engine (POE)
+	poe {	
+	
+		mode = "bypass";
 
-/*
-	// XLP - SGMII Daughter card support
+		// Each vector is 512 bit with masb indicating vc 512 and lsb indicating vc 0
+		// Format : 512-bit-vector is specified as 16 32-bit words
+		// Left most word has the vc range 511-479 right most word has vc range 31 - 0
+		// Each word has the MSB select higer vc number and LSB select lower vc num
+		
+		distribution-enable = <1>;
+		// 16 bit mask
+		dist-drop-enable = <0>;	 
+		// 8 bit mask
+		class-drop-enable = <0>;
+		drop-timer = <0>;
+		dest-threshold = <0xa>;
+		dist-threshold = <0xa 0xa 0xa 0xa>;
+		statistics-enable = <0>;
+ 
+                distribution_vectors {
+                                     dv0  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0x1>;
+                                     dv1  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv2  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv3  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv4  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv5  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv6  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv7  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv8  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv9  = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv10 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv11 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv12 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv13 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv14 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                                     dv15 = <0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
+                };
+	};
 
 	complex@0 {
 		device_type = "nae-complex";
-		mode = "sgmii";
-
-		loopback_mode = <0 0 0 0>;
-
-		// Max ingress fifo size 256 units (size of one unit is 64 byte)
-		iface_fifo_sizes = <13 13 13 13>;
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <13 13 13 13>;
 
-		ext_phy_addr = <5 6 7 4>;
-		ext_phy_bus = <1 1 1 1>;
+	                ext-phy-addr = <4 7 6 5>;
+        	        ext-phy-bus = <1 1 1 1>;
 
-		// Max parser sequence fifo size 1024 packets
-		// (if 1588 Timestamp is not required, then max size increases to 2048)
-		num_channels = <1 1 1 1>;
-		parser_sequence_fifo_sizes = <62 62 62 62>;
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
 
-		// Since rx_buffer is per context, we can have a few different ways
-		//  to populate the operand
-		rx_buffer_sizes = <128 128 128 128>;
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
 
 
-		// Max available descriptors are 1024 (across all complexes).
-		// Per port num_free_descriptors must be even number
-		num_free_descs = <52 52 52 52>;
-		free_desc_sizes = <2048 2048 2048 2048>;
-		ucore_mask = <0xffff 0xffff 0xffff 0xffff>;
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
+                interlaken {
+                        //select daughter board : cortina or loopback
+                        db = "cortina";
+
+                        loopback = <0>;
+
+                        // Maximum number of lanes per interface = 8 (from 2 complexes)
+                        num-lanes = <4>;
+                        // lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+                        lane-rate = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <110>;
+
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
+
+                        // Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                        num-channels = <4>;
+                        rx-buffer-size = <1840>;
+
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <300>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
 	};
 	complex@1 {
 		device_type = "nae-complex";
-		mode = "sgmii";
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
+	
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+		sgmii {
+	                loopback = <0 0 0 0>;
 
-		loopback_mode = <0 0 0 0>;
+	                // Max ingress fifo size 256 units (size of one unit is 64 byte)
+        	        iface-fifo-size = <13 13 13 13>;
 
-		// Max ingress fifo size 256 units (size of one unit is 64 byte)
-		iface_fifo_sizes = <13 13 13 13>;
+                	ext-phy-addr = <8 11 10 9>;
+	                ext-phy-bus = <1 1 1 1>;
 
-		ext_phy_addr = <9 10 11 8>;
-		ext_phy_bus = <1 1 1 1>;
+        	        // Max parser sequence fifo size 1024 packets
+                	// (if 1588 Timestamp is not required, then max size increases to 2048)
+	                num-channels = <1 1 1 1>;
+        	        parser-sequence-fifo-size = <62 62 62 62>;
 
-		// Max parser sequence fifo size 1024 packets
-		// (if 1588 Timestamp is not required, then max size increases to 2048)
-		num_channels = <1 1 1 1>;
-		parser_sequence_fifo_sizes = <62 62 62 62>;
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+        	        rx-buffer-size = <128 128 128 128>;
 
-		// Since rx_buffer is per context, we can have a few different ways
-		//  to populate the operand
-		rx_buffer_sizes = <128 128 128 128>;
 
+                	// Max available descriptors are 1024 (across all complexes).
+	                // Per port num_free_descriptors must be even number
+        	        num-free-descs = <52 52 52 52>;
+                	free-desc-size = <2048 2048 2048 2048>;
+	                ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
 
-		// Max available descriptors are 1024 (across all complexes).
-		// Per port num_free_descriptors must be even number
-		num_free_descs = <52 52 52 52>;
-		free_desc_sizes = <2048 2048 2048 2048>;
-		ucore_mask = <0xffff 0xffff 0xffff 0xffff>;
 	};
 	complex@2 {
 		device_type = "nae-complex";
-		mode = "sgmii";
+		mode = "xaui";
+
+                xaui {
+                        loopback = <0>;
+
+                        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                        iface-fifo-size = <55>;
 
-		loopback_mode = <0 0 0 0>;
+                        // Max parser sequence fifo size 1024 packets
+                        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                        parser-sequence-fifo-size = <225>;
 
-		// Max ingress fifo size 256 units (size of one unit is 64 byte)
-		iface_fifo_sizes = <13 13 13 13>;
+                        num-channels = <1>;
+                        rx-buffer-size = <944>;
 
-		ext_phy_addr = <1 2 3 0>;
-		ext_phy_bus = <1 1 1 1>;
+                        // Max available descriptors are 1024  (across all complexes).
+                        // Per port num_free_descriptors must be even number
+                        num-free-descs = <150>;
+                        free-desc-size = <2048>;
+                        ucore-mask = <0xffff>;
+                };
 
-		// Max parser sequence fifo size 1024 packets
-		// (if 1588 Timestamp is not required, then max size increases to 2048)
-		num_channels = <1 1 1 1>;
-		parser_sequence_fifo_sizes = <62 62 62 62>;
+		interlaken {
+	                //select daughter board : cortina or loopback
+        	        db = "cortina";
 
-		// Since rx_buffer is per context, we can have a few different ways
-		//  to populate the operand
-		rx_buffer_sizes = <128 128 128 128>;
+                	loopback = <0>;
+
+	                // Maximum number of lanes per interface = 8 (from 2 complexes)
+        	        num-lanes = <4>;
+                	// lanerate 0 = 3.125Gbps , 1 = 6.25Gbps
+	                lane-rate = <0>;
+	
+        	        // Max ingress fifo size 256 units (size of one unit is 64 byte)
+                	iface-fifo-size = <110>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	parser-sequence-fifo-size = <225>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+                	num-channels = <4>;
+	                rx-buffer-size = <1840>;
+
+	                // Max available descriptors are 1024  (across all complexes).
+        	        // Per port num_free_descriptors must be even number
+                	num-free-descs = <300>;
+	                free-desc-size = <2048>;
+        	        ucore-mask = <0xffff>;
+		};
+		sgmii {
+        	        loopback = <0 0 0 0>;
 
+                	// Max ingress fifo size 256 units (size of one unit is 64 byte)
+	                iface-fifo-size = <13 13 13 13>;
 
-		// Max available descriptors are 1024 (across all complexes).
-		// Per port num_free_descriptors must be even number
-		num_free_descs = <52 52 52 52>;
-		free_desc_sizes = <2048 2048 2048 2048>;
-		ucore_mask = <0xffff 0xffff 0xffff 0xffff>;
+        	        ext-phy-addr = <0 3 2 1>;
+                	ext-phy-bus = <1 1 1 1>;
+
+	                // Max parser sequence fifo size 1024 packets
+        	        // (if 1588 Timestamp is not required, then max size increases to 2048)
+                	num-channels = <1 1 1 1>;
+	                parser-sequence-fifo-size = <62 62 62 62>;
+
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+	                rx-buffer-size = <128 128 128 128>;
+
+
+        	        // Max available descriptors are 1024 (across all complexes).
+                	// Per port num_free_descriptors must be even number
+	                num-free-descs = <52 52 52 52>;
+        	        free-desc-size = <2048 2048 2048 2048>;
+                	ucore-mask = <0xffff 0xffff 0xffff 0xffff>;
+		};
 	};
 	complex@3 {
 		device_type = "nae-complex";
-		mode = "sgmii";
-
-		loopback_mode = <0 0 0 0>;
-
-		// Max ingress fifo size 256 units (size of one unit is 64 byte)
-		iface_fifo_sizes = <13 13 13 13>;
+		mode = "xaui";
+		xaui {
+			loopback = <0>;
 
-		ext_phy_addr = <13 14 15 12>;
-		ext_phy_bus = <1 1 1 1>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <55>;
 
-		// Max parser sequence fifo size 1024 packets
-		// (if 1588 Timestamp is not required, then max size increases to 2048)
-		num_channels = <1 1 1 1>;
-		parser_sequence_fifo_sizes = <62 62 62 62>;
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			parser-sequence-fifo-size = <225>;
 
-		// Since rx_buffer is per context, we can have a few different ways
-		//  to populate the operand
-		rx_buffer_sizes = <128 128 128 128>;
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			num-channels = <1>;
+			rx-buffer-size = <944>;
 
+			// Max available descriptors are 1024  (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <150>;
+			free-desc-size = <2048>;
+			ucore-mask = <0xffff>;
+		};
+	};
+	complex@4 {
+		device_type = "nae-complex";
+		mode = "sgmii";
 
-		// Max available descriptors are 1024 (across all complexes).
-		// Per port num_free_descriptors must be even number
-		num_free_descs = <52 52 52 52>;
-		free_desc_sizes = <2048 2048 2048 2048>;
-		ucore_mask = <0xffff 0xffff 0xffff 0xffff>;
+		sgmii {
+			loopback = <0 0>;
+			mgmt-port = <1 0>;
+			// Max ingress fifo size 256 units (size of one unit is 64 byte)
+			iface-fifo-size = <13 13>;
+ 		               
+			ext-phy-addr = <16 17>;
+        	        ext-phy-bus = <0 0>;
+
+			// Max parser sequence fifo size 1024 packets 
+			// (if 1588 Timestamp is not required, then max size increases to 2048)
+			num-channels = <1 1>;
+			parser-sequence-fifo-size = <62 62>;
+	
+			// Since rx_buffer is per context, the buffer size given here will be divided by num-channels
+			rx-buffer-size = <128 128>;
+				   
+
+			// Max available descriptors are 1024 (across all complexes).
+			// Per port num_free_descriptors must be even number
+			num-free-descs = <52 52>;
+			free-desc-size = <2048 2048>;
+			ucore-mask = <0xffff 0xffff>;
+		};
 	};
+};
+nae@node-2 {
 
-*/
+};
+nae@node-3 {
 
+};
diff --git a/arch/mips/boot/dts/xlp8xx-multi-os-hybrid.dts b/arch/mips/boot/dts/xlp8xx-multi-os-hybrid.dts
index be7b37a..4dab0d5 100644
--- a/arch/mips/boot/dts/xlp8xx-multi-os-hybrid.dts
+++ b/arch/mips/boot/dts/xlp8xx-multi-os-hybrid.dts
@@ -27,7 +27,7 @@
 			#size-cells = <1>;
 
 			cpu {
-				onlinemask = <0x0f>;
+				onlinemask = <0xffffffff>;
 				nae-rx-vc = <0>;
 				nae-fb-vc = <1>;
 				napi-vc-mask = <0x3>;
@@ -38,12 +38,30 @@
 				sharedcfg = <0x1f000000>;
 			};
 			memory {
-				reg = <	0x04000000 0x08000000    // 128M at 64M
+				reg = <0x01000000 0x0B000000
 					0x20000000 0x20000000>;  // 512M at 512M
 
 			};
 			pic {
 			};
+			nae {
+				owner = <0 0 0 0>;
+				freein-fifo-mask = <0x3 0 0 0>;
+				sh-domains = <1>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <32 32 32 32>;
+				vfbtbl-hw-offset = <0 0 0 0>;
+				vfbtbl-hw-nentries = <0 0 0 0>;
+			};
+			fmn {
+				node_0_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+				node_1_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+				node_2_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+				node_3_vc_mask = <0x33333333 0x33333333 0x33333333 0x33333333>;
+			};
+
+
 		};
 		dom@1 {
 			device_type = "domain";
@@ -70,9 +88,9 @@
 			};
 
 			cpu {
-				onlinemask = <0xf0>;
-				nae-rx-vc = <0>;
-				nae-fb-vc = <1>;
+				onlinemask = <0x0f>;
+				nae-rx-vc = <2>;
+				nae-fb-vc = <3>;
 			};
 			uart {
 				id = <0>;
@@ -82,23 +100,74 @@
 				reg = <0x50000000 0x10000000>;  // 1280M -> 1536M (256M)
 			};
 			nae {
-				owner = <0>;
+				owner = <1 0 0 0>;
+				freein-fifo-mask = <0x1111 0 0 0>;
+				sh-domains = <2>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <0 0 0 0>;
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <20 20 20 20>;
 			};
+			app-param{
+				/* Only used in xen loading */
+				linux-mem = <	0x00000000 0x04000000	// START ADDR <MSB LSB> 64MB
+						0x00000000 0x3C000000>;	// SIZE <MSB LSB> 960 MB
+			};
+		};
+		dom@2 {
+			device_type = "domain";
+			os = "netos";
+
+			heap-size = <0x0 0x2000000>;		   // 32M
+			shared-mem = <0x0 0xe4000000 0x0 0x04000000>;  // 3584MB -> 3648 MB (64MB)
+
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			app-bootcmd = "smpload";
+			app-loadaddr = "0xf4000000"; // 3.75 GB + 64 MB
 
+			kernel {
+				/* Kernel Memory allocated from xen domain-heap */
+				size = <0x02000000>;  // 32M
+
+				/* Location in Dom0 ramdisk */
+				location = "/tmp/xen/netos.elf";
+
+				/* Domain destroy currently doesn't work with hyperexec */
+				dom_destroy_hack = <0>;
+			};
+
+			cpu {
+				onlinemask = <0xf0>;
+				nae-rx-vc = <2>;
+				nae-fb-vc = <3>;
+			};
+			uart {
+				id = <0>;
+				sharedcfg = <0x1f000000>;
+			};
+			memory {
+				reg = <0x50000000 0x10000000>;  // 1280M -> 1536M (256M)
+			};
+			nae {
+				owner = <0 0 0 0>;
+				freein-fifo-mask = <0x2222 0 0 0>;
+				sh-domains = <1>;
+				/* node offsets and size */
+				vfbtbl-sw-offset = <0 0 0 0>;
+				vfbtbl-sw-nentries = <0 0 0 0>;
+				vfbtbl-hw-offset = <32 32 32 32>;
+				vfbtbl-hw-nentries = <20 20 20 20>;
+			};
 			app-param{
+				/* Only used in xen loading */
 				linux-mem = <	0x00000000 0x04000000	// START ADDR <MSB LSB> 64MB
 						0x00000000 0x3C000000>;	// SIZE <MSB LSB> 960 MB
-				/* CP -> control plane
-				   FP - Fast path
-				*/
-				nae-rx-vc = <0>;//VC for FP and CP for nae rx
-				sae-rx-vc = <1>; //VC for FP and CP for sae rx
-				io-fb-vc = <2>;//IO freeeback VC for FP and CP
-				cp-fp-vc = <3>;//VC for receiving msgs from cp/fp
-				cp-to-fp-dst = <19>;//FP cpu 1 will process
-				fp-to-cp-dst = <3>;//CP cpu 0 will process
 			};
 		};
+
 	};
 
 	chosen {
-- 
1.9.1

