From fca8e8fa72db04e6afdf3cad705024383badc6fe Mon Sep 17 00:00:00 2001
From: Sreenidhi B R <sreenira@broadcom.com>
Date: Tue, 30 Jul 2013 14:29:57 +0530
Subject: [PATCH 0760/1532] dtre: fix frequency function

- use sub-multiple of 667, as divisor need not be changed in such a case.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/syslib/src/nlm_hal.c | 49 ++++++++++++++++-------------
 1 file changed, 28 insertions(+), 21 deletions(-)

diff --git a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
index eaae8bd..8355d62 100644
--- a/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
+++ b/arch/mips/netlogic/lib/syslib/src/nlm_hal.c
@@ -861,34 +861,38 @@ void nlm_hal_set_cde_freq(int node, int freq)
 void nlm_hal_set_dtre_freq(int node, int freq)
 {
 	const uint64_t mhz = 1000000;
-	nlm_print("-- DTRE Frequency set to %d\n", freq);
-	if(is_nlm_xlp2xx()) {
-		nlm_print("ERROR: DTRE block unavailable for xlp2xx\n");
+	uint64_t set_freq;
+
+	nlm_print("-- DTRE Frequency set to to %d\n", freq);
+
+	if (is_nlm_xlp2xx()) {
+		set_freq = nlm_hal_xlp2xx_set_clkdev_frq(node, XLP2XX_CLKDEVICE_GDX, freq*mhz);
 	}
 	else {
-		uint64_t set_freq = nlm_hal_set_soc_freq(node, DFS_DEVICE_DTRE, freq * mhz);
-		NLM_HAL_DO_DIV(set_freq, mhz);
-		nlm_print("DTRE Frequency set to %lluMHz\n", (unsigned long long)set_freq);
+		set_freq = nlm_hal_set_soc_freq(node, DFS_DEVICE_DTRE, freq * mhz);
+	}
 
-/* This is only for experimetal reasons.
- * It will cleaned very soon.
- */
+	NLM_HAL_DO_DIV(set_freq, mhz);
+	nlm_print("DTRE Frequency set to %lluMHz\n", (unsigned long long)set_freq);
+
+	/* This is only for experimetal reasons.
+	 * It will cleaned very soon.
+	 */
 #ifdef EXPERIMENTAL
-		/* TODO: xlp9xx
-		   check the device ID for DTRE1 - (DFS_DEVICE_DTRE1)
-		   */
-		/* for xlp9xx, set the frequency for the additional engine DTRE1 also */
-		if (is_nlm_xlp9xx()) {
-			uint64_t set_freq = nlm_hal_set_soc_freq(node, DFS_DEVICE_DTRE1, freq * mhz);
-			NLM_HAL_DO_DIV(set_freq, mhz);
-			nlm_print("DTRE Frequency set to %lluMHz\n", (unsigned long long)set_freq);
-		}
+	/* TODO: xlp9xx
+	   check the device ID for DTRE1 - (DFS_DEVICE_DTRE1)
+	 */
+	/* for xlp9xx, set the frequency for the additional engine DTRE1 also */
+	if (is_nlm_xlp9xx()) {
+		uint64_t set_freq = nlm_hal_set_soc_freq(node, DFS_DEVICE_DTRE1, freq * mhz);
+		NLM_HAL_DO_DIV(set_freq, mhz);
+		nlm_print("DTRE Frequency set to %lluMHz\n", (unsigned long long)set_freq);
+	}
 #endif
 
-	}
 }
 
-/* TODO: xlp9xx
+/* xlp9xx
     1. check B/D/F values for both engines
    */
 static void nlm_hal_dtr_9xx_init(void *fdt)
@@ -928,6 +932,7 @@ static void nlm_hal_dtr_9xx_init(void *fdt)
 	nlm_print ("Channel control0 0x%x\n", nlm_hal_read_32bit_reg (base1, XLP_DTR_CHANNEL_CONTROL_REG_0));
 	nlm_print ("Channel control1 0x%x\n", nlm_hal_read_32bit_reg (base1, XLP_DTR_CHANNEL_CONTROL_REG_1));
 #endif
+
 }
 
 /**
@@ -958,7 +963,9 @@ void nlm_hal_dtr_init(void *fdt)
     nlm_hal_write_32bit_reg (base, XLP_DTR_CHANNEL_CONTROL_REG_3, 0x3fe);
 
     frequency = nlm_hal_get_fdt_freq(fdt, NLM_DTRE);
-    nlm_hal_set_dtre_freq(node, frequency);
+    if (frequency) {
+	    nlm_hal_set_dtre_freq(node, frequency);
+    }
 
 #ifdef DEBUG
     nlm_print ("Base Register 0x%llx\n", (unsigned long long)base);
-- 
1.9.1

