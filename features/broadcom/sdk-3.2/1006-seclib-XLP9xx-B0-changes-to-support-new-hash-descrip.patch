From 25437e8c2e4373abb61879502f46372c9433f566 Mon Sep 17 00:00:00 2001
From: Pranav Bhalerao <pranavb@broadcom.com>
Date: Tue, 30 Sep 2014 18:12:31 +0530
Subject: [PATCH 1006/1532] seclib: XLP9xx B0 changes to support new hash
 descriptor format

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/seclib/cryptosoc_lib.c |  4 +--
 arch/mips/netlogic/lib/seclib/cryptosoc_lib.h |  1 +
 arch/mips/netlogic/lib/seclib/eccsoc_lib.h    |  4 +--
 arch/mips/netlogic/lib/seclib/rsasoc_lib.h    |  4 +--
 arch/mips/netlogic/lib/seclib/saesoc_lib.h    | 35 ++++++++++++++++++++++++---
 5 files changed, 38 insertions(+), 10 deletions(-)

diff --git a/arch/mips/netlogic/lib/seclib/cryptosoc_lib.c b/arch/mips/netlogic/lib/seclib/cryptosoc_lib.c
index 3ed55a7..3b41fa5 100644
--- a/arch/mips/netlogic/lib/seclib/cryptosoc_lib.c
+++ b/arch/mips/netlogic/lib/seclib/cryptosoc_lib.c
@@ -206,7 +206,7 @@ int cryptosoc_lib_init(struct cryptosoc_lib_params *params,
 	if(cryptosoc_lib_priv_init(params) < 0)
 		return  -CRYPTOSOC_EINVAL;
 
-	if(cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN2) {
+	if(cryptosoc_ptype_gen & CRYPTOSOC_PTYPE_IS_GEN2) {
 		/* for griffin and associated versions */
 		params->saesoc_feature_set |= SAESOC_FF_GEN2_PTYPE;
 		params->saesoc_per_pkt_update_set |= 0;
@@ -264,7 +264,7 @@ int cryptosoc_lib_init(struct cryptosoc_lib_params *params,
 	if(cryptosoc_lib_f.init && (cryptosoc_lib_f.init(params) < 0))
 		return  -CRYPTOSOC_EINVAL;
 
-	if(cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN2) {
+	if(cryptosoc_ptype_gen & CRYPTOSOC_PTYPE_IS_GEN2) {
 		/* for griffin and associated versions */
 		params->saesoc_feature_set |= SAESOC_FF_GEN2_PTYPE;
 		params->saesoc_per_pkt_update_set |= 0;
diff --git a/arch/mips/netlogic/lib/seclib/cryptosoc_lib.h b/arch/mips/netlogic/lib/seclib/cryptosoc_lib.h
index daea8cc..318b79a 100644
--- a/arch/mips/netlogic/lib/seclib/cryptosoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/cryptosoc_lib.h
@@ -116,6 +116,7 @@ typedef  unsigned long long   _uint64_t;
 
 #define CRYPTOSOC_PTYPE_IS_GEN1 0x1
 #define CRYPTOSOC_PTYPE_IS_GEN2 0x2
+#define CRYPTOSOC_PTYPE_IS_GEN2_BX 0x4
 
 /** 
  * enum cryptosoc_err - Possible error codes returned by the APIs
diff --git a/arch/mips/netlogic/lib/seclib/eccsoc_lib.h b/arch/mips/netlogic/lib/seclib/eccsoc_lib.h
index a636a1e..4a5fa93 100644
--- a/arch/mips/netlogic/lib/seclib/eccsoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/eccsoc_lib.h
@@ -61,8 +61,8 @@
 
 
 #ifdef ECCSOC_PTYPE_GEN_ALL_SUPPORT
-#define IF_ECCSOC_PTYPE_IS_GEN1 if(cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN1)
-#define IF_ECCSOC_PTYPE_IS_GEN2 if(cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN2)
+#define IF_ECCSOC_PTYPE_IS_GEN1 if(cryptosoc_ptype_gen & CRYPTOSOC_PTYPE_IS_GEN1)
+#define IF_ECCSOC_PTYPE_IS_GEN2 if(cryptosoc_ptype_gen & CRYPTOSOC_PTYPE_IS_GEN2)
 #else
 #define IF_ECCSOC_PTYPE_IS_GEN1
 #define IF_ECCSOC_PTYPE_IS_GEN2 
diff --git a/arch/mips/netlogic/lib/seclib/rsasoc_lib.h b/arch/mips/netlogic/lib/seclib/rsasoc_lib.h
index f6898d7..aedce15 100644
--- a/arch/mips/netlogic/lib/seclib/rsasoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/rsasoc_lib.h
@@ -61,8 +61,8 @@
 
 
 #ifdef RSASOC_PTYPE_GEN_ALL_SUPPORT
-#define IF_RSASOC_PTYPE_IS_GEN1 if(cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN1)
-#define IF_RSASOC_PTYPE_IS_GEN2 if(cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN2)
+#define IF_RSASOC_PTYPE_IS_GEN1 if(cryptosoc_ptype_gen & CRYPTOSOC_PTYPE_IS_GEN1)
+#define IF_RSASOC_PTYPE_IS_GEN2 if(cryptosoc_ptype_gen & CRYPTOSOC_PTYPE_IS_GEN2)
 #else
 #define IF_RSASOC_PTYPE_IS_GEN1
 #define IF_RSASOC_PTYPE_IS_GEN2 
diff --git a/arch/mips/netlogic/lib/seclib/saesoc_lib.h b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
index 14809e5..ef9a67b 100644
--- a/arch/mips/netlogic/lib/seclib/saesoc_lib.h
+++ b/arch/mips/netlogic/lib/seclib/saesoc_lib.h
@@ -60,11 +60,13 @@
 
 
 #ifdef SAESOC_PTYPE_GEN_ALL_SUPPORT
-#define IF_SAESOC_PTYPE_IS_GEN1 if(cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN1)
-#define IF_SAESOC_PTYPE_IS_GEN2 if(cryptosoc_ptype_gen == CRYPTOSOC_PTYPE_IS_GEN2)
+#define IF_SAESOC_PTYPE_IS_GEN1    if(cryptosoc_ptype_gen & CRYPTOSOC_PTYPE_IS_GEN1)
+#define IF_SAESOC_PTYPE_IS_GEN2    if(cryptosoc_ptype_gen & CRYPTOSOC_PTYPE_IS_GEN2)
+#define IF_SAESOC_PTYPE_IS_GEN2_BX if(cryptosoc_ptype_gen & CRYPTOSOC_PTYPE_IS_GEN2_BX)
 #else
 #define IF_SAESOC_PTYPE_IS_GEN1
-#define IF_SAESOC_PTYPE_IS_GEN2 
+#define IF_SAESOC_PTYPE_IS_GEN2
+#define IF_SAESOC_PTYPE_IS_GEN2_BX 
 #endif
 
 #include "nlm_hal_fmn.h"
@@ -1581,7 +1583,32 @@ static inline int saesoc_set_aad_len(
 	IF_SAESOC_PTYPE_IS_GEN2
 	{
 		saesoc_gen2_set_aadlen(ddesc->descs[0], aad_len);
-		return CRYPTOSOC_OK;
+                
+                /*  
+                 * For XLP9XX_BX payload offset of the payload  
+                 * start from the end of the AAD = AadOffset + AadLen.
+                 */
+                IF_SAESOC_PTYPE_IS_GEN2_BX
+                { 
+                    struct saesoc_ddesc_priv_data *dpriv;
+                    struct saesoc_session_desc    *sdesc;  
+                    int aad_offset = 0;
+                    int payload_offset = 0;
+                    
+                    dpriv = (struct saesoc_ddesc_priv_data *)ddesc->lib_priv;
+                    sdesc = (struct saesoc_session_desc    *)dpriv->sdesc;
+                    aad_offset = SAESOC_GEN2_GET_BITS(sdesc->descs[0],  
+                                    AAD_OFFSET);
+                    payload_offset = SAESOC_GEN2_GET_BITS(sdesc->descs[1],
+                                    PAYLOAD_OFFSET);
+                    if ((aad_offset + aad_len) <= payload_offset) {
+                            payload_offset -= (aad_offset + aad_len);
+                            saesoc_gen2_set_payload_offset(sdesc->descs[1],
+                                            payload_offset);
+                            return CRYPTOSOC_OK;
+                    }
+               }
+		return CRYPTOSOC_OK; 
 	}
 #endif
 #ifdef SAESOC_PTYPE_GEN1_SUPPORT
-- 
1.9.1

