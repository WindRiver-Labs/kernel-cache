From bc28643a3fefb37dc2cba9edd867acba440724d6 Mon Sep 17 00:00:00 2001
From: Tanmay Jagdale <tanmayj@broadcom.com>
Date: Tue, 14 Oct 2014 15:57:17 +0530
Subject: [PATCH 1249/1532] dtconf: command set compatible with uboot fdt tool

 - Changed the dtconf command set to match u-boot fdt command set.
 - Added 'list' command to dtconf.
 - Fixed the error message reporting.
 - Help message is updated.
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/misc/netlogic/fdtconf/fdtconf.c | 102 ++++++++++++++++----------------
 1 file changed, 50 insertions(+), 52 deletions(-)

diff --git a/drivers/misc/netlogic/fdtconf/fdtconf.c b/drivers/misc/netlogic/fdtconf/fdtconf.c
index 83d838c..b4ce006 100644
--- a/drivers/misc/netlogic/fdtconf/fdtconf.c
+++ b/drivers/misc/netlogic/fdtconf/fdtconf.c
@@ -83,16 +83,6 @@ static void parse_and_fill_kern_params(void)
 
 	node = fdt_path_offset(fdt, "/kernel-params");
 	if (node >= 0) {
-		err = fdt_setprop(fdt, node, "pktmem_start",
-			&pktmem_start_address, sizeof(pktmem_start_address));
-		if (err)
-			dev_err(&fdtdev->dev, "Couldn't set pktmem_start\n");
-
-		err = fdt_setprop(fdt, node, "pktmem_size", &pktmem_size,
-			sizeof(pktmem_size));
-		if (err)
-			dev_err(&fdtdev->dev, "Couldn't set pktmem_size\n");
-
 		/* Set the physical cpumask for userspace applications */
 		for_each_possible_cpu(i) {
 			pcpu = cpu_logical_map(i);
@@ -298,53 +288,64 @@ static ssize_t write_fdt(struct file *filep, struct kobject *kobj,
 			loff_t pos, size_t size)
 {
 	int		err, k = 0, node, ret = size, i = 0;
-	char		*path, *prop, *val, *p, *q, *path_value, *op;
+	char		*path, *prop, *val, *p, *q, *strptr, *op;
 	uint32_t	value[16], *ptr;
 
 
 	buf[size] = '\0';
-
+	val = prop = path = NULL;
 	/*
 	 * The syntax to set a property is as follows :
 	 * -------------------------------------
-	 * <operation> <path>/<property> <value>
+	 * <operation> <path> <property> <value>
 	 * -------------------------------------
-	 * Example : set /frequency-config/nae 500
+	 * Example : set /frequency-config nae 500
 	 */
-	op = path_value = buf;
-	buf = strsep(&path_value, " \t");
-	if (buf == NULL)
-		return -EFAULT;
-
-	op = strim(op);
 
-	if ((strcmp(op, "delete-node") == 0)) {
-		node = fdt_path_offset(fdt, path_value);
-		if (node < 0)
-			ret = -EFAULT;
-		else if (fdt_del_node(fdt, node))
-			ret = -EFAULT;
-		goto out;
-	}
+	strptr = buf;
+	while (isspace(*strptr)) strptr++;
+	op = strptr;
+	while (i < 3) {
+		if ((strsep(&strptr, " \t") == NULL) || (strptr == NULL))
+			break;
 
-	path = val = path_value;
-	path_value = strsep(&val, " \t");
-	if (path_value == NULL)
-		return -EFAULT;
+		while (isspace(*strptr)) strptr++;
 
-	prop = strrchr(path, '/');
-	if (prop == NULL)
-		return -EFAULT;
-
-	*prop = '\0';
-	++prop;
+		switch (i) {
+		case 0 : path = strptr; break;
+		case 1 : prop = strptr; break;
+		case 2 : val = strptr; break;
+		}
+		i++;
+	}
 
-	if (*path == '\0')
-		path = "/";
+	if (path == NULL) {
+		ret = -EINVAL;
+		goto out;
+	}
 
 	node = fdt_path_offset(fdt, path);
 	if (node < 0) {
-		ret = -EFAULT;
+		ret = -ENOENT;
+		goto out;
+	}
+
+	if (strcmp(op, "rm") == 0) {
+		if (prop == NULL) {
+			/*
+			 * Delete the node.
+			 */
+			err = fdt_del_node(fdt, node);
+			if (err)
+				ret = -EINVAL;
+		} else {
+			/*
+			 * Delete the property.
+			 */
+			err = fdt_delprop(fdt, node, prop);
+			if (err)
+				ret = -EINVAL;
+		}
 		goto out;
 	}
 
@@ -353,23 +354,20 @@ static ssize_t write_fdt(struct file *filep, struct kobject *kobj,
 		 * Add a sub node.
 		 */
 		if (fdt_add_subnode(fdt, node, prop) < 0)
-			ret = -EFAULT;
+			ret = -EINVAL;
 		goto out;
-	} else if (strcmp(op, "delete-property") == 0) {
-		/*
-		 * Delete the property.
-		 */
-		if (fdt_delprop(fdt, node, prop))
-			ret = -EFAULT;
+	}
+
+	if (val == NULL || prop == NULL || (strcmp(op, "set") != 0)) {
+		ret = -EINVAL;
 		goto out;
 	}
 
 	val = strim(val);
-
 	/*
 	 * Ucore code is passed in the following format :
 	 * ---------------------------------------------------
-	 * /soc/nae@node-0/ucore/src@1/opcodes linux-ucore.hex
+	 * /soc/nae@node-0/ucore/src@1 opcodes linux-ucore.hex
 	 * ---------------------------------------------------
 	 */
 	if (strcmp(prop, "opcodes") == 0) {
@@ -378,7 +376,7 @@ static ssize_t write_fdt(struct file *filep, struct kobject *kobj,
 			*q = '\0';
 			val++;
 		} else
-			return -EFAULT;
+			return -EINVAL;
 		err = handle_opcodes(node, val);
 		if (err)
 			ret = err;
@@ -438,7 +436,7 @@ static ssize_t write_fdt(struct file *filep, struct kobject *kobj,
 		if (err)
 			ret = err;
 	} else
-		ret = -EFAULT;
+		ret = -EINVAL;
 
 out:
 	return ret;
-- 
1.9.1

