From 63b720736c0f2f7210d00a8a3bf12938df2a7cef Mon Sep 17 00:00:00 2001
From: Subhendu Sekhar Behera <sbehera@broadcom.com>
Date: Thu, 1 Aug 2013 14:00:18 +0530
Subject: [PATCH 1419/1532] nae: remove compilation warnings.

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c |  5 ++---
 drivers/net/ethernet/broadcom/nae/xlpge_nae.c     | 11 +++++------
 drivers/net/ethernet/broadcom/nae/xlpge_rx.c      |  2 +-
 drivers/net/ethernet/broadcom/nae/xlpge_sgmii.c   |  2 ++
 drivers/net/ethernet/broadcom/nae/xlpge_tx.c      |  6 +++---
 5 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
index 5124a03..e089049 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_ethtool.c
@@ -77,7 +77,6 @@ static int xlp_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
 {
 	struct dev_data *priv = netdev_priv(dev);
 	net_port_t* nae_port = priv->nae_port;
-	struct nlm_hal_mii_info mii_info;
 	if (priv->type != SGMII_IF) {
 		cmd->supported = SUPPORTED_FIBRE | SUPPORTED_10000baseT_Full;
 		cmd->advertising = SUPPORTED_FIBRE | SUPPORTED_10000baseT_Full;
@@ -104,7 +103,7 @@ static int xlp_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
 	cmd->advertising = priv->advertising;
 
 	//nlm_hal_status_ext_phy( priv->node, priv->phy.addr, &mii_info);
-	netsoc_get_phy_status(nae_port, &cmd->duplex, &cmd->speed);
+	netsoc_get_phy_status(nae_port, (uint32_t *)&cmd->duplex, (uint32_t *)&cmd->speed);
         //priv->speed = mii_info.speed;
         //cmd->duplex = mii_info.duplex;
 	cmd->speed = (priv->speed == xlp_mac_speed_1000) ? SPEED_1000 :
@@ -242,7 +241,6 @@ static void xlp_get_regs(struct net_device *dev,
 	struct dev_data *priv = netdev_priv(dev);
 	ulong flags;
 	u32 *data = (u32 *)p;
-	int i;
 
 	memset((void *)data, 0, NLM_ETHTOOL_REG_LEN);
 
@@ -454,6 +452,7 @@ unsigned int nlm_xlp_mac_mii_read(struct dev_data *priv, int regidx)
 //TODO:
 	//return nlm_hal_mdio_read(priv->node, NLM_HAL_EXT_MDIO, 0,
 	//	BLOCK_7, LANE_CFG, priv->phy.addr, regidx);
+	return 0;
 }
 
 /**********************************************************************
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index 2c2eae4..c287dd5 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -357,11 +357,11 @@ err_exit:
 static int initialize_nae_per_node(nae_t * nae_cfg, uint32_t *phys_cpu_map, int mode,
 				   int *jumbo_enabled)
 {
-	int i, len, pos, bitoff, rv = -1;
+	int i, len, pos, bitoff, rv = -1, node;
 
 	if (nae_cfg == NULL)
 		goto err;
-	int node = nae_cfg->node;
+	node = nae_cfg->node;
 
 	for (i = 0; i <= NLM_NAE_MAX_SHARED_DOMS; i++) {
 		lnx_shinfo[i].valid = nae_cfg->shinfo[i].valid;
@@ -478,7 +478,7 @@ static int initialize_nae_per_node(nae_t * nae_cfg, uint32_t *phys_cpu_map, int
 
 	if (nae_cfg->poe->dist_en)
 	{
-		cpu_mask_t cpumap = {0};
+		cpu_mask_t cpumap = {{0}};
 
 		/* FIXME: for multi-node */
 		for (i = 0;i < NLM_MAX_NODES;i++)
@@ -528,7 +528,7 @@ int initialize_nae(uint32_t *phys_cpu_map, int mode, int *jumbo_enabled)
 {
 	ulong __attribute__ ((unused)) mflags;
 	int dom_id = 0;
-	int node, ret, max_nae_units, nodes, num_nae;
+	int node, ret, max_nae_units, num_nae;
 	nae_t* nae;
 	struct netsoc_lib_param mod_api;
 
@@ -630,7 +630,7 @@ static int nlm_replenish_per_cpu_buffer(nae_t* nae_cfg,
 
 int replenish_freein_fifos(void)
 {
-	int node, i, rv;
+	int node, i, rv = 0;
 	nae_t* nae_cfg;
 	int max_descs_pqueue, num_descs, max_nae_units;
 	unsigned int blk_cmplx_map, cmplx;
@@ -1418,7 +1418,6 @@ static int nlm_per_port_nae_init(nae_t* nae_cfg, int port, int maxnae)
 	struct dev_data *priv;
 	int cpu;
 	int node = nae_cfg->node;
-	net_port_t *net_port_cfg;
 
 	if (!nae_cfg->ports[port].valid)
 		return -1;
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
index dae1de8..4a899b8 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
@@ -620,7 +620,7 @@ static inline void process_rx_packets(int cpu, unsigned int src_id,
 
 
 	vaddr = (uint64_t)(unsigned long)bus_to_virt(addr);
-	nae_cfg = (uint64_t*)mac_get_nae_back_ptr(vaddr);
+	nae_cfg = (nae_t*)mac_get_nae_back_ptr(vaddr);
 	port = nae_cfg->cntx2port[context]; 
 	Message("%s in cpu %d src_id %d len %d context %d node %d err %d port=%d\n",
 		__func__, cpu, src_id, len, context, node, err, port);
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_sgmii.c b/drivers/net/ethernet/broadcom/nae/xlpge_sgmii.c
index d20e82d..86254e2 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_sgmii.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_sgmii.c
@@ -85,6 +85,7 @@ int xlp_enable_autoneg(struct net_device *dev, u32 adv)
 
 	return 0;
 #endif
+	return 0;
 }
 
 int xlp_set_link_speed(struct net_device *dev, int speed, int duplex)
@@ -120,4 +121,5 @@ int xlp_set_link_speed(struct net_device *dev, int speed, int duplex)
 	return ret;
 
 #endif
+	return 0;
 }
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
index e9168d1..b6786be 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_tx.c
@@ -64,7 +64,7 @@ int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 	volatile int hw_repl = 0;
 	int  offset, qid;
 	unsigned long __attribute__ ((unused)) mflags;
-	uint32_t msec_port, send_msec = 0, msec_bypass = 0;
+	uint32_t msec_port, send_msec = 0;
 	uint32_t pad_len = 0, icv_len = 0, param_index = 0 ;
 	unsigned char *buf, sec_tag_hdr[16], icv[16]; 
 
@@ -92,10 +92,10 @@ int nlm_xlp_nae_start_xmit(struct sk_buff *skb, struct net_device *dev)
 	 * else bypass MACSec
 	 */
 	if (nae_cfg->msec_port_enable & msec_port) {
-		short ether_type = *(short*)(((char*)skb->data) +
-					MAC_HEADER_LEN);
 
 #ifdef MACSEC_DEBUG
+	short ether_type = *(short*)(((char*)skb->data) +
+				MAC_HEADER_LEN);
 	printk("skb->len = %d ether_type = %x\n",
 			skb->len, ether_type);
 #endif
-- 
1.9.1

