From 5fbc27339aed25177b8188ec5c724702f5567893 Mon Sep 17 00:00:00 2001
From: Sayanti Biswas <sayanti.biswas@broadcom.com>
Date: Tue, 8 Jul 2014 17:31:13 +0530
Subject: [PATCH 1447/1532] nae : performance fix

Removed xlp9xx family check
[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/xlpge_nae.c | 4 ++++
 drivers/net/ethernet/broadcom/nae/xlpge_rx.c  | 8 ++++----
 drivers/net/ethernet/broadcom/nae/xlpge_tso.h | 4 +++-
 3 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
index af18a62..c303d29 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_nae.c
@@ -123,6 +123,8 @@ MODULE_PARM_DESC(nae_debug_level,
 	"Vaild debug levels 1-5 (default="
 		__MODULE_STRING(nae_debug_level)")");
 
+int nae_family_9xx = 0;
+
 static unsigned short nlm_select_queue(struct net_device *dev,
 				       struct sk_buff *skb)
 {
@@ -1617,5 +1619,7 @@ void nlm_xlp_nae_init(void)
 
 	if (enable_napi)
 		nlm_xlp_enable_napi();
+	if(IS_NLM_XLP9XX_FAMILY)
+		nae_family_9xx = 1;
 }
 
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
index 8a11dbe..d484e8b 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_rx.c
@@ -82,7 +82,7 @@ inline void process_tx_complete(int cpu, uint32_t src_id, uint64_t msg0)
         /* Process Transmit Complete, addr is the skb pointer */
         addr = msg0 & 0xffffffffffULL;
 
-	if((is_nlm_xlp3xx() || is_nlm_xlp2xx() ||IS_NLM_XLP9XX_FAMILY)){ 
+	if((is_nlm_xlp3xx() || is_nlm_xlp2xx() ||nae_family_9xx)){ 
         	context = (msg0 >> 40) & 0x3f;
 	}
 	else{
@@ -614,7 +614,7 @@ static int inline valid_buffer_lifo(int cpu, uint64_t msg1, uint32_t src_id)
 		int node = (src_id >> 10) & 0x3;
 		uint64_t addr = msg1 & 0xffffffffc0ULL;
 
-		if(IS_NLM_XLP9XX_FAMILY){
+		if(nae_family_9xx){
 				nae = get_nae(node, nae_id);
 				if(!(nae->freein_fifo_dom_mask & (1<<lifo))){
 						nae_print(NAE_DBG_ERROR, "Error Packet: Cpu %d, msg1 %#lx, lifo %d, Owner fifo mask %#lx\n", 
@@ -646,7 +646,7 @@ static inline void process_rx_packets(void *arg, int cpu, unsigned int src_id,
 	uint32_t msec_port;
 	struct napi_struct *napi = (struct napi_struct *)arg;
 
-	if(IS_NLM_XLP9XX_FAMILY){
+	if(nae_family_9xx){
 		msg1 = msg2;	
 	}
 	err = (msg1 >> 4) & 0x1;
@@ -658,7 +658,7 @@ static inline void process_rx_packets(void *arg, int cpu, unsigned int src_id,
 		return;
 
 	len	= (msg1 >> 40) & 0x3fff;
-	if((is_nlm_xlp3xx() || is_nlm_xlp2xx() ||IS_NLM_XLP9XX_FAMILY)){ 
+	if((is_nlm_xlp3xx() || is_nlm_xlp2xx() ||nae_family_9xx)){ 
 		context = (msg1 >> 54) & 0x3f;
 	}else{
 		context = (msg1 >> 54) & 0x3ff;
diff --git a/drivers/net/ethernet/broadcom/nae/xlpge_tso.h b/drivers/net/ethernet/broadcom/nae/xlpge_tso.h
index 0eb2c86..7c5e1f7 100644
--- a/drivers/net/ethernet/broadcom/nae/xlpge_tso.h
+++ b/drivers/net/ethernet/broadcom/nae/xlpge_tso.h
@@ -44,6 +44,8 @@
 //#define MACSEC_DEBUG	1
 extern struct p2p_desc_mem p2p_desc_mem[NR_CPUS];
 extern int force_tso;
+extern int nae_family_9xx;
+ 
 
 static __inline__ uint64_t nae_tso_desc0(
 		unsigned int type,
@@ -355,7 +357,7 @@ static int tso_enable(struct net_device *dev, u32 data)
 	dev->hw_features = NETIF_F_SG | NETIF_F_IP_CSUM | NETIF_F_TSO;
 	dev->features |= dev->hw_features;
 	dev->features |= NETIF_F_HIGHDMA;
-	if(!(is_nlm_xlp2xx_b0() || IS_NLM_XLP9XX_FAMILY)) {
+	if(!(is_nlm_xlp2xx_b0() || nae_family_9xx)) {
 		/* If force tso is not set, enable gso in that case */
 		if(!force_tso) {
 			nae_print(NAE_DBG_TRACE, "Disabling TSO & Enabling GSO \n");
-- 
1.9.1

