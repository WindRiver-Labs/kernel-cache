From 4024a9e9508c7403a83de7f35ba1c9a809a2638c Mon Sep 17 00:00:00 2001
From: Kevin Joseph James <kevinj@broadcom.com>
Date: Thu, 1 May 2014 22:08:30 -0700
Subject: [PATCH 0971/1532] nae: move bar0 restore to reset_nae

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/netlogic/lib/netlib/include/netsoc_nae.h | 29 +++++++++++++++++++++-
 arch/mips/netlogic/lib/netlib/src/netsoc_nae.c     | 28 ++-------------------
 2 files changed, 30 insertions(+), 27 deletions(-)

diff --git a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
index d56f1af..c94588d 100644
--- a/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
+++ b/arch/mips/netlogic/lib/netlib/include/netsoc_nae.h
@@ -242,12 +242,35 @@ static inline int valid_calendar_slot(uint32_t slot)
         return ((slot > MAX_CAL_SLOTS) ? 0 : 1);
 }
 
+#if defined(__MIPSEL__)
+static uint32_t membar_fixup(uint32_t l)
+{
+        unsigned char b;
+        uint32_t fixup;
+
+        if (!is_nlm_xlp8xx_ax())
+                return l;
+
+        b = (l >> 24) & 0xff;
+        fixup = ((b << 24) | (b << 16) | (b << 8) | (b));
+
+        return fixup;
+}
+#else
+#define membar_fixup(x) (x)
+#endif
 
 static inline void __netsoc_reset_nae(nae_t *nae)
 {
+        uint64_t bar0;
         int reset_bit = 9;
         /* Reset NAE */
-	
+
+        if(!IS_NLM_XLP9XX_FAMILY){
+                bar0 = netsoc_api_readl(nae->pcie_base, PCI_MEM_BAR_0);
+                bar0 = membar_fixup(bar0);
+        }
+
 	if (IS_NLM_XLP9XX_FAMILY) {
                 if (nae->nae_id == 0)
                     reset_bit = 21;
@@ -274,6 +297,10 @@ static inline void __netsoc_reset_nae(nae_t *nae)
         	nlm_hal_write_sys_reg(nae->node, SYS_RESET, (0 << reset_bit));
         	nlm_mdelay(1);
 	}
+
+        if(!IS_NLM_XLP9XX_FAMILY){
+                netsoc_api_writel(nae->pcie_base, 0x4, bar0);
+        }
 }
 
 
diff --git a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
index 44e7ca2..199308c 100644
--- a/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
+++ b/arch/mips/netlogic/lib/netlib/src/netsoc_nae.c
@@ -4288,39 +4288,18 @@ static int __netsoc_init_all_ports(nae_t *nae)
 	return NETSOC_API_SUCCESS;
 }
 
-#if defined(__MIPSEL__)
-static uint32_t membar_fixup(uint32_t l)
-{
-        unsigned char b;
-        uint32_t fixup;
-
-        if (!is_nlm_xlp8xx_ax())
-                return l;
-
-        b = (l >> 24) & 0xff;
-        fixup = ((b << 24) | (b << 16) | (b << 8) | (b));
-
-        return fixup;
-}
-#else
-#define membar_fixup(x) (x)
-#endif
 
 extern void __netsoc_perform_clause_173_base_page(nae_t *nae, uint32_t block, uint32_t lane_no);
 extern void __netsoc_bkpl_auneg_complete(nae_t *nae, uint32_t block, uint32_t lane_no);
 //extern void enable_autoneg(nae_t* nae);
 int __netsoc_init_nae(nae_t *nae)
 {
-	uint64_t bar0;
 	uint32_t tx_config, rx_config;
         int retval = 0, frin_q;
 
 	if (nae->owned) {
-		 if(!IS_NLM_XLP9XX_FAMILY){
-			bar0 = netsoc_api_readl(nae->pcie_base, PCI_MEM_BAR_0);
-			bar0 = membar_fixup(bar0);
-	   	}
-        	/* frin_fifo represents the 20 pools of free-in descriptor fifos */
+
+                /* frin_fifo represents the 20 pools of free-in descriptor fifos */
 	        __netsoc_drain_allfrin_fifo_descs(nae);
                 __netsoc_deflate_frin_fifo_carving(nae);
 
@@ -4331,9 +4310,6 @@ int __netsoc_init_nae(nae_t *nae)
                 nae->flags |= NAE_RESET_DONE;
                 __netsoc_reset_nae(nae);
 #endif
-		if(!IS_NLM_XLP9XX_FAMILY){
-                	nlm_hal_write_32bit_reg(nae->pcie_base, 0x4, bar0);
-		}
 		// Load ucore code
                 netsoc_api_print(NETSOC_APIDBG_GLOBAL, "Configuring ucore...\n");
                 __netsoc_init_ucore(nae);
-- 
1.9.1

