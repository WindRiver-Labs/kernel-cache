From e1fd8888b1b9cf09f1b4300f67474b6e25839f87 Mon Sep 17 00:00:00 2001
From: Jayanthi Annadurai <jayanthia@netlogicmicro.com>
Date: Tue, 22 Mar 2011 12:44:26 -0700
Subject: [PATCH 1322/1532] added xaui support in xlp_hw.c

[Based on SDK 3.2]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/broadcom/nae/xlp_hw.c | 41 ++++++++++++++++++++----------
 1 file changed, 28 insertions(+), 13 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/nae/xlp_hw.c b/drivers/net/ethernet/broadcom/nae/xlp_hw.c
index 729859b..0577589c1 100755
--- a/drivers/net/ethernet/broadcom/nae/xlp_hw.c
+++ b/drivers/net/ethernet/broadcom/nae/xlp_hw.c
@@ -440,22 +440,34 @@ void nlm_xlp_mac_set_enable(struct dev_data *priv, int flag)
 	uint32_t netwk_inf = 0, mac_cfg2 = 0;
 	
 
-	if (priv->type != SGMII_IF)
+	if ((priv->type != SGMII_IF) && (priv->type != XAUI_IF))
 		return;
-	inf = (priv->block * 4) + priv->index;
+	switch(priv->type) {
+		case SGMII_IF:
+			inf = (priv->block * 4) + priv->index;
+			break;
+		case XAUI_IF:
+		case INTERLAKEN_IF:
+			inf = priv->block;
+			break;
+		default:
+			return;
+	}
 
 	if (flag) {
-		if (nlm_hal_get_phy_status(inf, &speed, &duplex)) {
-			//nlm_print("mac set enable speed %d duplex %d\n",speed, duplex);
-			ifmode = ((speed == 2) ? 2: 1);
-			nlm_hal_mac_disable(inf, priv->type);
-		        netwk_inf  = read_gmac_reg(inf, NETWK_INF_CTRL_REG);
-	        	netwk_inf &= (~(0x3));
-	        	write_gmac_reg(inf , NETWK_INF_CTRL_REG, netwk_inf | speed);
-		        mac_cfg2 = read_gmac_reg(inf, MAC_CONF2);
-        		mac_cfg2 &= (~((0x3 << 8) | 1));
-	        	write_gmac_reg(inf , MAC_CONF2,
-                               mac_cfg2 | (ifmode << 8) | duplex);
+		if (priv->type == SGMII_IF) {
+			if (nlm_hal_get_phy_status(inf, &speed, &duplex)) {
+				//nlm_print("mac set enable speed %d duplex %d\n",speed, duplex);
+				ifmode = ((speed == 2) ? 2: 1);
+				nlm_hal_mac_disable(inf, priv->type);
+			        netwk_inf  = read_gmac_reg(inf, NETWK_INF_CTRL_REG);
+		        	netwk_inf &= (~(0x3));
+	        		write_gmac_reg(inf , NETWK_INF_CTRL_REG, netwk_inf | speed);
+		        	mac_cfg2 = read_gmac_reg(inf, MAC_CONF2);
+	        		mac_cfg2 &= (~((0x3 << 8) | 1));
+		        	write_gmac_reg(inf , MAC_CONF2,
+                			              mac_cfg2 | (ifmode << 8) | duplex);
+			}
 		}
 		nlm_hal_mac_enable(inf, priv->type);
 	} else {
@@ -466,6 +478,9 @@ void nlm_xlp_mac_set_enable(struct dev_data *priv, int flag)
 int nlm_xlp_link_up(struct dev_data *priv, int phy)
 {
         uint16_t extstatus;
+
+	if (priv->type != SGMII_IF)
+                return;
         nlm_hal_mdio_write(NLM_HAL_EXT_MDIO, 0, BLOCK_7, LANE_CFG, priv->phy.addr, 22, 0);
         extstatus = nlm_hal_mdio_read(NLM_HAL_EXT_MDIO, 0, BLOCK_7, LANE_CFG, priv->phy.addr, 17);
         return ((extstatus & 0x0400) ? 1 : 0 );
-- 
1.9.1

