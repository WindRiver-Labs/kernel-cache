From d2bebb4b7ba7c07036c3b043b7c8298eed8c0f12 Mon Sep 17 00:00:00 2001
From: fli <fupan.li@windriver.com>
Date: Tue, 12 Nov 2013 14:31:12 +0800
Subject: [PATCH 27/27] platform:byt fix the conflicts of the LPSS clk between
 pci and acpi enumeration mode

BayTrail LPSS's devices such as SPI, I2C, DMA can be enumerated by PCI mode and ACPI mode.
But those two modes need their corresponding clk registration. Deferring the PCI mode clk
registration after ACPI mode to make sure the needed mode is registered. In other words,
if the LPSS devices are enumerated by ACPI mode, then the ACPI mode clks are registered, and
it will skip the PCI mode registration, otherwise, the LPSS devices are enumerated by PCI mode,
then it will ignore the ACPI mode registration and register the PCI mode clks.

Signed-off-by: fli <fupan.li@windriver.com>
---
 arch/x86/platform/byt/byt-board.c |   29 ++++++++++++++++++++---------
 1 file changed, 20 insertions(+), 9 deletions(-)

diff --git a/arch/x86/platform/byt/byt-board.c b/arch/x86/platform/byt/byt-board.c
index b2f1caf..a89c9d6 100644
--- a/arch/x86/platform/byt/byt-board.c
+++ b/arch/x86/platform/byt/byt-board.c
@@ -44,19 +44,28 @@ static int byt_clk_setup()
 {
 	struct clk *clk;
 
-	/* Make clock tree required by the SPI driver */
-	clk = clk_register_fixed_rate(NULL, "lpss_clk", NULL, CLK_IS_ROOT,
-								100000000);
-	if (IS_ERR(clk))
-		return PTR_ERR(clk);
+	/* Make sure the root clk required by the LPSS driver is registered */
+	clk = clk_get(NULL, "lpss_clk");
+	if (IS_ERR(clk)) {
+		clk = clk_register_fixed_rate(NULL, "lpss_clk", NULL, CLK_IS_ROOT,
+							100000000);
+	}
 
-	clk = clk_register_fixed_rate(NULL, "spi_clk", "lpss_clk", 0, 50000000);
-	if (IS_ERR(clk))
+	/* 
+	 * to check has the spi_clk been registered by the ACPI mode,
+	 * if yes, skip it, otherwise, register those clks.
+	*/
+	clk = clk_get(NULL, "spi_clk");
+	if (IS_ERR(clk)) {
+		clk = clk_register_fixed_rate(NULL, "spi_clk", "lpss_clk", 0, 50000000);
+		if (IS_ERR(clk))
+			return PTR_ERR(clk);
+	} else
 		return PTR_ERR(clk);
 
 	clk_register_clkdev(clk, NULL, "0000:00:1e.5");
 
-	/*register the clock for DW DMA engines*/
+	/* register the clock for DW DMA engines */
 	clk_register_clkdev(clk, "hclk", "0000:00:18.0");
 	clk_register_clkdev(clk, "hclk", "0000:00:1e.0"); 
 
@@ -81,5 +90,7 @@ static int __init byt_board_init(void)
 exit:
 	return ret;
 }
-arch_initcall(byt_board_init);
+
+/* make sure the board init function was called after acpi init. */
+subsys_initcall_sync(byt_board_init);
 MODULE_LICENSE(GPL);
-- 
1.7.9.5

