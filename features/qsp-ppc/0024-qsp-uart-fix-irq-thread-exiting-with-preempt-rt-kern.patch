From 3b1665134fd4831cd3e8346a32cf6cd17cd7eee7 Mon Sep 17 00:00:00 2001
From: Ruan Zhengwang <zhengwang.ruan@windriver.com>
Date: Tue, 27 Aug 2013 15:42:48 +0800
Subject: [PATCH 24/24] qsp-uart: fix irq thread exiting with preempt-rt kernel

The interrupt handler acquires the spinlock of struct uart_port to
protect accessing the registers in following qsp_uart_rx_chars() and
qsp_uart_tx_chars() calls, but this lock will be finally acquired again
in serial core through tty_flip_buffer_push(). So release this lock
before enter into serial core.

Signed-off-by: Ruan Zhengwang <zhengwang.ruan@windriver.com>
---
 drivers/tty/serial/qsp_uart.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/drivers/tty/serial/qsp_uart.c b/drivers/tty/serial/qsp_uart.c
index bead678..b2865aa 100644
--- a/drivers/tty/serial/qsp_uart.c
+++ b/drivers/tty/serial/qsp_uart.c
@@ -166,7 +166,9 @@ static void qsp_uart_rx_chars(struct qsp_uart *pp)
 		uart_insert_char(port, 0, 0, ch, flag);
 	}
 
+	spin_unlock(&port->lock);
 	tty_flip_buffer_push(port->state->port.tty);
+	spin_lock(&port->lock);
 }
 
 static void qsp_uart_tx_chars(struct qsp_uart *pp)
-- 
1.7.1

