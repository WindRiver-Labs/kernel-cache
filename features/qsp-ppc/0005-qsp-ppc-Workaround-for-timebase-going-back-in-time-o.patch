From 31d3954c2c15da48c32b88f78d072f67f155a9fd Mon Sep 17 00:00:00 2001
From: Ivar Holmqvist <ivarholmqvist@gmail.com>
Date: Fri, 15 Jun 2012 10:50:14 +0200
Subject: [PATCH 05/22] qsp-ppc: Workaround for timebase going back in time on simcics sometimes.

[Original patch is from simics-pkg-12514-4.8.1-linux64.tar]

Signed-off-by: Ruan Zhengwang <zhengwang.ruan@windriver.com>
---
 arch/powerpc/kernel/time.c |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/kernel/time.c b/arch/powerpc/kernel/time.c
index 4f7b241..824eb9d 100644
--- a/arch/powerpc/kernel/time.c
+++ b/arch/powerpc/kernel/time.c
@@ -709,7 +709,21 @@ static cycle_t rtc_read(struct clocksource *cs)
 
 static cycle_t timebase_read(struct clocksource *cs)
 {
+#ifdef CONFIG_QSP
+	/* FIXME: This is strange, I would think that this was equivalent to
+	 * timebase_mode = fast-forward in simics.
+	 * However, this seems to work, fast-forward doesnt....
+	 *
+	 * FIXME: This is not wrap-around proof. 2^64 for the default timebase
+	 *	frequency (1Ghz/8) is 4679 years, however that might happen
+	 *	with hypersim and NO_HZ. However I intend to analyze this
+	 *	further and figure out why Simics itself can't provide this
+	 *	functionality...
+	 */
+	return max_t(cycle_t, cs->cycle_last, (cycle_t)get_tb());
+#else
 	return (cycle_t)get_tb();
+#endif
 }
 
 void update_vsyscall(struct timespec *wall_time, struct timespec *wtm,
-- 
1.7.1

