From ff697598a756f241dda05dece9722c37ac9e519e Mon Sep 17 00:00:00 2001
From: Phil Sutter <phil.sutter@viprinet.com>
Date: Thu, 4 Nov 2010 17:31:13 +0100
Subject: [PATCH 110/291] cryptodev: async_speed:

The number of outstanding jobs is limited by the cryptodev ring size,
which may raise to 64 entries at max.

Signed-off-by: Nikos Mavrogiannopoulos <nmav@gnutls.org>
---
 drivers/staging/crypto/cryptodev/examples/async_speed.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/examples/async_speed.c b/drivers/staging/crypto/cryptodev/examples/async_speed.c
index a28814460804..7d98baefddf5 100644
--- a/drivers/staging/crypto/cryptodev/examples/async_speed.c
+++ b/drivers/staging/crypto/cryptodev/examples/async_speed.c
@@ -72,7 +72,7 @@ static void value2human(double bytes, double time, double* data, double* speed,c
 int encrypt_data(struct session_op *sess, int fdc, int chunksize, int flags)
 {
 	struct crypt_op cop;
-	char *buffer[256], iv[32];
+	char *buffer[64], iv[32];
 	static int val = 23;
 	struct timeval start, end;
 	double total = 0;
@@ -85,7 +85,7 @@ int encrypt_data(struct session_op *sess, int fdc, int chunksize, int flags)
 	printf("\tEncrypting in chunks of %d bytes: ", chunksize);
 	fflush(stdout);
 
-	for (rc = 0; rc < 256; rc++) {
+	for (rc = 0; rc < 64; rc++) {
 		buffer[rc] = malloc(chunksize);
 		memset(buffer[rc], val++, chunksize);
 	}
@@ -113,7 +113,7 @@ int encrypt_data(struct session_op *sess, int fdc, int chunksize, int flags)
 			cop.op = COP_ENCRYPT;
 			cop.flags = flags;
 			cop.src = cop.dst = (unsigned char *)buffer[bufidx];
-			bufidx = (bufidx + 1) % 256;
+			bufidx = (bufidx + 1) % 64;
 
 			if (ioctl(fdc, CIOCASYNCCRYPT, &cop)) {
 				perror("ioctl(CIOCASYNCCRYPT)");
@@ -138,7 +138,7 @@ int encrypt_data(struct session_op *sess, int fdc, int chunksize, int flags)
 	printf ("done. %.2f %s in %.2f secs: ", ddata, metric, secs);
 	printf ("%.2f %s/sec\n", dspeed, metric);
 
-	for (rc = 0; rc < 256; rc++)
+	for (rc = 0; rc < 64; rc++)
 		free(buffer[rc]);
 	return 0;
 }
-- 
2.1.0

