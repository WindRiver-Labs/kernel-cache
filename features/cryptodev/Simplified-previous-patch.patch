From 3eec8bb97c09d813a151b42c11155936942497e1 Mon Sep 17 00:00:00 2001
From: Nikos Mavrogiannopoulos <nikos@esat.kuleuven.be>
Date: Tue, 15 Jan 2013 11:43:43 +0100
Subject: [PATCH 230/292] Simplified previous patch.

---
 .../crypto/cryptodev/extras/eng_cryptodev.c        | 43 +++++++++++++++++-----
 1 file changed, 33 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c b/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c
index b3faa07a4b56..718596afb814 100644
--- a/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c
+++ b/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c
@@ -714,10 +714,9 @@ static int cryptodev_digest_update(EVP_MD_CTX *ctx, const void *data,
 		return (1);
 	}
 
-        /* If an application wants to compute the hash in one big chunk (one-shot mode)
-         * then tack the data onto the end of the buffer (and grow as necessary).
-         */
-	if ( ctx->flags & EVP_MD_CTX_FLAG_ONESHOT ) {
+#ifndef COP_FLAG_UPDATE
+	if (!(ctx->flags & EVP_MD_CTX_FLAG_ONESHOT)) {
+		/* if application doesn't support one buffer */
 		state->mac_data = OPENSSL_realloc(state->mac_data, state->mac_len + count);
 
 		if (!state->mac_data) {
@@ -733,18 +732,23 @@ static int cryptodev_digest_update(EVP_MD_CTX *ctx, const void *data,
 
 	memset(&cryp, 0, sizeof(cryp));
 
-	cryp.ses = sess->ses;
-#ifdef COP_FLAG_UPDATE
-	cryp.flags = COP_FLAG_UPDATE;
+	cryp.flags = 0;
+#else
+	memset(&cryp, 0, sizeof(cryp));
+
+	cryp.flags = COP_FLAG_UPDATe;
 #endif
+	cryp.ses = sess->ses;
 	cryp.len = count;
 	cryp.src = (void*) data;
 	cryp.dst = NULL;
 	cryp.mac = (void*) state->digest_res;
+
 	if (ioctl(state->d_fd, CIOCCRYPT, &cryp) < 0) {
 		printf("cryptodev_digest_update: digest failed\n");
 		return (0);
 	}
+
 	return (1);
 }
 
@@ -760,11 +764,29 @@ static int cryptodev_digest_final(EVP_MD_CTX *ctx, unsigned char *md)
 		return(0);
 	}
 
+#ifndef COP_FLAG_UPDATE
+	if (! (ctx->flags & EVP_MD_CTX_FLAG_ONESHOT) ) {
+		/* if application doesn't support one buffer */
+		memset(&cryp, 0, sizeof(cryp));
+		cryp.ses = sess->ses;
+		cryp.flags = 0;
+		cryp.len = state->mac_len;
+		cryp.src = state->mac_data;
+		cryp.dst = NULL;
+		cryp.mac = (void*)md;
+		if (ioctl(state->d_fd, CIOCCRYPT, &cryp) < 0) {
+			printf("cryptodev_digest_final: digest failed\n");
+			return (0);
+		}
+
+		return 1;
+	}
+
+	memcpy(md, state->digest_res, ctx->digest->md_size);
+#else
 	memset(&cryp, 0, sizeof(cryp));
 	cryp.ses = sess->ses;
-#ifdef COP_FLAG_FINAL
 	cryp.flags = COP_FLAG_FINAL;
-#endif
 	cryp.len = state->mac_len;
 	cryp.src = state->mac_data;
 	cryp.dst = NULL;
@@ -772,7 +794,8 @@ static int cryptodev_digest_final(EVP_MD_CTX *ctx, unsigned char *md)
 	if (ioctl(state->d_fd, CIOCCRYPT, &cryp) < 0) {
 		printf("cryptodev_digest_final: digest failed\n");
 		return (0);
-	}
+ 	}
+#endif
 
 	return 1;
 }
-- 
1.8.1.2

