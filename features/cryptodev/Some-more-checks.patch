From 97d52aca0a4916347ec94ffd6d5e6aba569a365b Mon Sep 17 00:00:00 2001
From: Nikos Mavrogiannopoulos <nmav@gnutls.org>
Date: Tue, 6 Jul 2010 14:02:13 +0200
Subject: [PATCH 073/292] Some more checks.

---
 drivers/staging/crypto/cryptodev/cryptodev_main.c  | 18 +++++++++++-------
 drivers/staging/crypto/cryptodev/examples/cipher.c |  8 +++++++-
 2 files changed, 18 insertions(+), 8 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/cryptodev_main.c b/drivers/staging/crypto/cryptodev/cryptodev_main.c
index 6876aba5dff2..8e36f199bae7 100644
--- a/drivers/staging/crypto/cryptodev/cryptodev_main.c
+++ b/drivers/staging/crypto/cryptodev/cryptodev_main.c
@@ -191,13 +191,11 @@ crypto_create_session(struct fcrypt *fcr, struct session_op *sop)
 	}
 
 	/* Create a session and put it to the list. */
-	ses_new = kmalloc(sizeof(*ses_new), GFP_KERNEL);
+	ses_new = kzalloc(sizeof(*ses_new), GFP_KERNEL);
 	if(!ses_new) {
 		return -ENOMEM;
 	}
 
-	memset(ses_new, 0, sizeof(*ses_new));
-
 	/* Set-up crypto transform. */
 	if (alg_name) {
 		uint8_t keyp[CRYPTO_CIPHER_MAX_KEY_LEN];
@@ -541,6 +539,10 @@ static int get_userbuf(struct csession *ses,
 				sizeof(struct page *), GFP_KERNEL);
 		ses->sg = krealloc(ses->sg, ses->array_size *
 				sizeof(struct scatterlist), GFP_KERNEL);
+		
+		if (ses->sg == NULL || ses->pages == NULL) {
+			return -ENOMEM;
+		}
 	}
 
 	if (__get_userbuf(cop->src, cop->len,
@@ -634,8 +636,8 @@ static int crypto_run(struct fcrypt *fcr, struct crypt_op *cop)
 			uint8_t iv[EALG_MAX_BLOCK_LEN];
 			
 			ret = copy_from_user(iv, cop->iv, min( (int)sizeof(iv), (ses_ptr->cdata.ivsize)));
-			dprintk(1, KERN_ERR, "error copying IV\n");
 			if (unlikely(ret)) {
+				dprintk(1, KERN_ERR, "error copying IV (%d bytes)\n", min( (int)sizeof(iv), (ses_ptr->cdata.ivsize)));
 				goto out_unlock;
 			}
 
@@ -759,9 +761,11 @@ cryptodev_ioctl(struct inode *inode, struct file *filp,
 			return copy_to_user((void*)arg, &sop, sizeof(sop));
 
 		case CIOCFSESSION:
-			get_user(ses, (uint32_t*)arg);
-			ret = crypto_finish_session(fcr, ses);
-			return ret;
+			ret = get_user(ses, (uint32_t*)arg);
+			if (unlikely(ret))
+				return ret;
+
+			return crypto_finish_session(fcr, ses);
 
 		case CIOCCRYPT:
 			ret = copy_from_user(&cop, (void*)arg, sizeof(cop));
diff --git a/drivers/staging/crypto/cryptodev/examples/cipher.c b/drivers/staging/crypto/cryptodev/examples/cipher.c
index d7982ae580e8..b07b25254f1d 100644
--- a/drivers/staging/crypto/cryptodev/examples/cipher.c
+++ b/drivers/staging/crypto/cryptodev/examples/cipher.c
@@ -12,7 +12,7 @@
 #include <sys/ioctl.h>
 #include <crypto/cryptodev.h>
 
-#define	DATA_SIZE	4096
+#define	DATA_SIZE	8*1024
 #define	BLOCK_SIZE	16
 #define	KEY_SIZE	16
 
@@ -43,6 +43,7 @@ test_crypto(int cfd)
 		return 1;
 	}
 
+
 	/* Encrypt data.in to data.encrypted */
 	cryp.ses = sess.ses;
 	cryp.len = sizeof(plaintext);
@@ -55,6 +56,11 @@ test_crypto(int cfd)
 		return 1;
 	}
 
+	if (ioctl(cfd, CIOCFSESSION, &sess.ses)) {
+		perror("ioctl(CIOCFSESSION)");
+		return 1;
+	}
+
 	if (ioctl(cfd, CIOCGSESSION, &sess)) {
 		perror("ioctl(CIOCGSESSION)");
 		return 1;
-- 
1.8.1.2

