From 354964f1483b099d33cec30ffe07b5e5ec30bbbd Mon Sep 17 00:00:00 2001
From: Nikos Mavrogiannopoulos <nmav@gnutls.org>
Date: Mon, 14 Jan 2013 22:07:44 +0100
Subject: [PATCH 229/292] Use the COP_FLAG_UPDATE/FINAL flags. Patch by Glenn
 Schmottlach.

---
 .../crypto/cryptodev/extras/eng_cryptodev.c        | 39 +++++++++++-----------
 1 file changed, 19 insertions(+), 20 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c b/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c
index 1ac2aa96a46a..b3faa07a4b56 100644
--- a/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c
+++ b/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c
@@ -714,8 +714,10 @@ static int cryptodev_digest_update(EVP_MD_CTX *ctx, const void *data,
 		return (1);
 	}
 
-	if (!(ctx->flags & EVP_MD_CTX_FLAG_ONESHOT)) {
-		/* if application doesn't support one buffer */
+        /* If an application wants to compute the hash in one big chunk (one-shot mode)
+         * then tack the data onto the end of the buffer (and grow as necessary).
+         */
+	if ( ctx->flags & EVP_MD_CTX_FLAG_ONESHOT ) {
 		state->mac_data = OPENSSL_realloc(state->mac_data, state->mac_len + count);
 
 		if (!state->mac_data) {
@@ -732,7 +734,9 @@ static int cryptodev_digest_update(EVP_MD_CTX *ctx, const void *data,
 	memset(&cryp, 0, sizeof(cryp));
 
 	cryp.ses = sess->ses;
-	cryp.flags = 0;
+#ifdef COP_FLAG_UPDATE
+	cryp.flags = COP_FLAG_UPDATE;
+#endif
 	cryp.len = count;
 	cryp.src = (void*) data;
 	cryp.dst = NULL;
@@ -756,25 +760,20 @@ static int cryptodev_digest_final(EVP_MD_CTX *ctx, unsigned char *md)
 		return(0);
 	}
 
-	if (! (ctx->flags & EVP_MD_CTX_FLAG_ONESHOT) ) {
-		/* if application doesn't support one buffer */
-		memset(&cryp, 0, sizeof(cryp));
-		cryp.ses = sess->ses;
-		cryp.flags = 0;
-		cryp.len = state->mac_len;
-		cryp.src = state->mac_data;
-		cryp.dst = NULL;
-		cryp.mac = (void*)md;
-		if (ioctl(state->d_fd, CIOCCRYPT, &cryp) < 0) {
-			printf("cryptodev_digest_final: digest failed\n");
-			return (0);
-		}
-
-		return 1;
+	memset(&cryp, 0, sizeof(cryp));
+	cryp.ses = sess->ses;
+#ifdef COP_FLAG_FINAL
+	cryp.flags = COP_FLAG_FINAL;
+#endif
+	cryp.len = state->mac_len;
+	cryp.src = state->mac_data;
+	cryp.dst = NULL;
+	cryp.mac = (void*)md;
+	if (ioctl(state->d_fd, CIOCCRYPT, &cryp) < 0) {
+		printf("cryptodev_digest_final: digest failed\n");
+		return (0);
 	}
 
-	memcpy(md, state->digest_res, ctx->digest->md_size);
-
 	return 1;
 }
 
-- 
1.8.1.2

