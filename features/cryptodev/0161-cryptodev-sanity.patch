From 476e0b43dea8332e20a4652085ef5d3ec032ef0f Mon Sep 17 00:00:00 2001
From: Nikos Mavrogiannopoulos <nmav@gnutls.org>
Date: Sun, 4 Dec 2011 13:10:32 +0100
Subject: [PATCH 161/291] cryptodev: sanity

---
 drivers/staging/crypto/cryptodev/authenc.c | 36 +++++++++++++-----------------
 1 file changed, 16 insertions(+), 20 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/authenc.c b/drivers/staging/crypto/cryptodev/authenc.c
index b41c1f8f57eb..2ad0daad9963 100644
--- a/drivers/staging/crypto/cryptodev/authenc.c
+++ b/drivers/staging/crypto/cryptodev/authenc.c
@@ -509,11 +509,6 @@ srtp_auth_n_crypt(struct csession *ses_ptr, struct kernel_crypt_auth_op *kcaop,
 	 */
 	if (caop->op == COP_ENCRYPT) {
 		if (ses_ptr->cdata.init != 0) {
-			if (ses_ptr->cdata.stream == 0) {
-				dprintk(0, KERN_ERR, "Only stream modes are allowed in SRTP mode\n");
-				return -EINVAL;
-			}
-
 			ret = cryptodev_cipher_encrypt(&ses_ptr->cdata,
 							dst_sg, dst_sg, len);
 			if (unlikely(ret)) {
@@ -574,11 +569,6 @@ srtp_auth_n_crypt(struct csession *ses_ptr, struct kernel_crypt_auth_op *kcaop,
 		}
 
 		if (ses_ptr->cdata.init != 0) {
-			if (ses_ptr->cdata.stream == 0) {
-				dprintk(0, KERN_ERR, "Only stream modes are allowed in SRTP mode\n");
-				return -EINVAL;
-			}
-
 			ret = cryptodev_cipher_decrypt(&ses_ptr->cdata,
 							dst_sg, dst_sg, len);
 
@@ -606,15 +596,6 @@ auth_n_crypt(struct csession *ses_ptr, struct kernel_crypt_auth_op *kcaop,
 	struct crypt_auth_op *caop = &kcaop->caop;
 	int max_tag_len;
 
-
-	if (unlikely(ses_ptr->cdata.init == 0))
-		return -EINVAL;
-
-	if (unlikely(ses_ptr->cdata.stream == 0 || ses_ptr->cdata.aead == 0)) {
-		dprintk(0, KERN_ERR, "Only stream and AEAD ciphers are allowed for authenc\n");
-		return -EINVAL;
-	}
-
 	max_tag_len = cryptodev_cipher_get_tag_size(&ses_ptr->cdata);
 	if (unlikely(caop->tag_len > max_tag_len)) {
 		dprintk(0, KERN_ERR, "Illegal tag length: %d\n", caop->tag_len);
@@ -667,6 +648,13 @@ __crypto_auth_run_zc(struct csession *ses_ptr, struct kernel_crypt_auth_op *kcao
 	int ret = 0, pagecount = 0;
 
 	if (caop->flags & COP_FLAG_AEAD_SRTP_TYPE) {
+		if (unlikely(ses_ptr->cdata.init != 0 && 
+			(ses_ptr->cdata.stream == 0 || ses_ptr->cdata.aead != 0))) 
+		{
+			dprintk(0, KERN_ERR, "Only stream modes are allowed in SRTP mode (but not AEAD)\n");
+			return -EINVAL;
+		}
+
 		ret = get_userbuf_srtp(ses_ptr, kcaop, &auth_sg, &dst_sg, &pagecount);
 		if (unlikely(ret)) {
 			dprintk(1, KERN_ERR, "get_userbuf_srtp(): Error getting user pages.\n");
@@ -712,7 +700,15 @@ __crypto_auth_run_zc(struct csession *ses_ptr, struct kernel_crypt_auth_op *kcao
 				   dst_sg, caop->len);
 		} else {
 			int dst_len;
-			
+
+			if (unlikely(ses_ptr->cdata.init == 0 || 
+					ses_ptr->cdata.stream == 0 || 
+					ses_ptr->cdata.aead == 0)) 
+			{
+				dprintk(0, KERN_ERR, "Only stream and AEAD ciphers are allowed for authenc\n");
+				return -EINVAL;
+			}
+
 			if (caop->op == COP_ENCRYPT) dst_len = caop->len + cryptodev_cipher_get_tag_size(&ses_ptr->cdata);
 			else dst_len = caop->len - cryptodev_cipher_get_tag_size(&ses_ptr->cdata);
 			
-- 
2.1.0

