From e5fc5bc17e67d0acd3e7ec4660a36203480b467d Mon Sep 17 00:00:00 2001
From: Nikos Mavrogiannopoulos <nmav@gnutls.org>
Date: Sat, 2 Mar 2013 13:07:26 +0100
Subject: [PATCH 238/291] cryptodev: Revert

This reverts commit 9d1ef57a8c9206fcedf4f0def2260d10436d43a2.
---
 .../crypto/cryptodev/extras/eng_cryptodev.c        | 39 +++++++++++-----------
 1 file changed, 20 insertions(+), 19 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c b/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c
index c3b2c7000967..a3123161e8e5 100644
--- a/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c
+++ b/drivers/staging/crypto/cryptodev/extras/eng_cryptodev.c
@@ -714,10 +714,8 @@ static int cryptodev_digest_update(EVP_MD_CTX *ctx, const void *data,
 		return (1);
 	}
 
-        /* If an application wants to compute the hash in one big chunk (one-shot mode)
-         * then tack the data onto the end of the buffer (and grow as necessary).
-         */
-	if ( ctx->flags & EVP_MD_CTX_FLAG_ONESHOT ) {
+	if (!(ctx->flags & EVP_MD_CTX_FLAG_ONESHOT)) {
+		/* if application doesn't support one buffer */
 		state->mac_data = OPENSSL_realloc(state->mac_data, state->mac_len + count);
 
 		if (!state->mac_data) {
@@ -734,9 +732,7 @@ static int cryptodev_digest_update(EVP_MD_CTX *ctx, const void *data,
 	memset(&cryp, 0, sizeof(cryp));
 
 	cryp.ses = sess->ses;
-#ifdef COP_FLAG_UPDATE
-	cryp.flags = COP_FLAG_UPDATE;
-#endif
+	cryp.flags = 0;
 	cryp.len = count;
 	cryp.src = (void*) data;
 	cryp.dst = NULL;
@@ -760,20 +756,25 @@ static int cryptodev_digest_final(EVP_MD_CTX *ctx, unsigned char *md)
 		return(0);
 	}
 
-	memset(&cryp, 0, sizeof(cryp));
-	cryp.ses = sess->ses;
-#ifdef COP_FLAG_FINAL
-	cryp.flags = COP_FLAG_FINAL;
-#endif
-	cryp.len = state->mac_len;
-	cryp.src = state->mac_data;
-	cryp.dst = NULL;
-	cryp.mac = (void*)md;
-	if (ioctl(state->d_fd, CIOCCRYPT, &cryp) < 0) {
-		printf("cryptodev_digest_final: digest failed\n");
-		return (0);
+	if (! (ctx->flags & EVP_MD_CTX_FLAG_ONESHOT) ) {
+		/* if application doesn't support one buffer */
+		memset(&cryp, 0, sizeof(cryp));
+		cryp.ses = sess->ses;
+		cryp.flags = 0;
+		cryp.len = state->mac_len;
+		cryp.src = state->mac_data;
+		cryp.dst = NULL;
+		cryp.mac = (void*)md;
+		if (ioctl(state->d_fd, CIOCCRYPT, &cryp) < 0) {
+			printf("cryptodev_digest_final: digest failed\n");
+			return (0);
+		}
+
+		return 1;
 	}
 
+	memcpy(md, state->digest_res, ctx->digest->md_size);
+
 	return 1;
 }
 
-- 
2.1.0

