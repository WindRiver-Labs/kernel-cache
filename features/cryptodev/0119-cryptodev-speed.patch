From 7fb5851c2344dd43cbc9d3bc42a2c6d2962caf01 Mon Sep 17 00:00:00 2001
From: Phil Sutter <phil.sutter@viprinet.com>
Date: Fri, 17 Dec 2010 19:04:20 +0100
Subject: [PATCH 119/291] cryptodev: speed,

Since measurement is done in bytes, use a capital B as unit. Also,
stepping by 1024 from one magnitude to the next is more common. This is
indicated by the 'i' in between the magnitude and unit symbols.
---
 .../crypto/cryptodev/examples/async_speed.c        | 32 ++++++++--------------
 drivers/staging/crypto/cryptodev/examples/speed.c  | 32 ++++++++--------------
 2 files changed, 22 insertions(+), 42 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/examples/async_speed.c b/drivers/staging/crypto/cryptodev/examples/async_speed.c
index 679219ba8e4d..940d923f4f22 100644
--- a/drivers/staging/crypto/cryptodev/examples/async_speed.c
+++ b/drivers/staging/crypto/cryptodev/examples/async_speed.c
@@ -43,29 +43,19 @@ static void alarm_handler(int signo)
 	pfd.events = POLLIN;
 }
 
+static char *units[] = { "", "Ki", "Mi", "Gi", "Ti", 0};
+
 static void value2human(double bytes, double time, double* data, double* speed,char* metric)
 {
-        if (bytes > 1000 && bytes < 1000*1000) {
-                *data = ((double)bytes)/1000;
-                *speed = *data/time;
-                strcpy(metric, "Kb");
-                return;
-        } else if (bytes >= 1000*1000 && bytes < 1000*1000*1000) {
-                *data = ((double)bytes)/(1000*1000);
-                *speed = *data/time;
-                strcpy(metric, "Mb");
-                return;
-        } else if (bytes >= 1000*1000*1000) {
-                *data = ((double)bytes)/(1000*1000*1000);
-                *speed = *data/time;
-                strcpy(metric, "Gb");
-                return;
-        } else {
-                *data = (double)bytes;
-                *speed = *data/time;
-                strcpy(metric, "bytes");
-                return;
-        }
+	int unit = 0;
+
+	*data = bytes;
+	while (*data > 1024 && units[unit + 1]) {
+		*data /= 1024;
+		unit++;
+	}
+	*speed = *data / time;
+	sprintf(metric, "%sB", units[unit]);
 }
 
 
diff --git a/drivers/staging/crypto/cryptodev/examples/speed.c b/drivers/staging/crypto/cryptodev/examples/speed.c
index 998772dd7014..63218a91fe8d 100644
--- a/drivers/staging/crypto/cryptodev/examples/speed.c
+++ b/drivers/staging/crypto/cryptodev/examples/speed.c
@@ -39,29 +39,19 @@ static void alarm_handler(int signo)
         must_finish = 1;
 }
 
+static char *units[] = { "", "Ki", "Mi", "Gi", "Ti", 0};
+
 static void value2human(double bytes, double time, double* data, double* speed,char* metric)
 {
-        if (bytes > 1000 && bytes < 1000*1000) {
-                *data = ((double)bytes)/1000;
-                *speed = *data/time;
-                strcpy(metric, "Kb");
-                return;
-        } else if (bytes >= 1000*1000 && bytes < 1000*1000*1000) {
-                *data = ((double)bytes)/(1000*1000);
-                *speed = *data/time;
-                strcpy(metric, "Mb");
-                return;
-        } else if (bytes >= 1000*1000*1000) {
-                *data = ((double)bytes)/(1000*1000*1000);
-                *speed = *data/time;
-                strcpy(metric, "Gb");
-                return;
-        } else {
-                *data = (double)bytes;
-                *speed = *data/time;
-                strcpy(metric, "bytes");
-                return;
-        }
+	int unit = 0;
+
+	*data = bytes;
+	while (*data > 1024 && units[unit + 1]) {
+		*data /= 1024;
+		unit++;
+	}
+	*speed = *data / time;
+	sprintf(metric, "%sB", units[unit]);
 }
 
 
-- 
2.1.0

