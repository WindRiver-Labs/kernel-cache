From 01f44a023c1d0e74f22d9004b58c8e4151cf7da6 Mon Sep 17 00:00:00 2001
From: Phil Sutter <phil@nwl.cc>
Date: Wed, 29 Jan 2014 03:37:17 +0100
Subject: [PATCH 267/291] cryptodev: authenc

Signed-off-by: Phil Sutter <phil@nwl.cc>
---
 drivers/staging/crypto/cryptodev/authenc.c | 14 +++++++-------
 drivers/staging/crypto/cryptodev/zc.c      |  6 +++---
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/authenc.c b/drivers/staging/crypto/cryptodev/authenc.c
index ee31de88e1f4..2c51199856f4 100644
--- a/drivers/staging/crypto/cryptodev/authenc.c
+++ b/drivers/staging/crypto/cryptodev/authenc.c
@@ -283,7 +283,7 @@ static void copy_tls_hash(struct scatterlist *dst_sg, int len, void *hash, int h
 
 static void read_tls_hash(struct scatterlist *dst_sg, int len, void *hash, int hash_len)
 {
-	scatterwalk_map_and_copy(hash, dst_sg, len-hash_len, hash_len, 0);
+	scatterwalk_map_and_copy(hash, dst_sg, len - hash_len, hash_len, 0);
 }
 
 static int pad_record(struct scatterlist *dst_sg, int len, int block_size)
@@ -291,7 +291,7 @@ static int pad_record(struct scatterlist *dst_sg, int len, int block_size)
 	uint8_t pad[block_size];
 	int pad_size = block_size - (len % block_size);
 
-	memset(pad, pad_size-1, pad_size);
+	memset(pad, pad_size - 1, pad_size);
 
 	scatterwalk_map_and_copy(pad, dst_sg, len, pad_size, 1);
 
@@ -304,22 +304,22 @@ static int verify_tls_record_pad(struct scatterlist *dst_sg, int len, int block_
 	uint8_t pad_size;
 	int i;
 
-	scatterwalk_map_and_copy(&pad_size, dst_sg, len-1, 1, 0);
+	scatterwalk_map_and_copy(&pad_size, dst_sg, len - 1, 1, 0);
 
-	if (pad_size+1 > len) {
+	if (pad_size + 1 > len) {
 		dprintk(1, KERN_ERR, "Pad size: %d\n", pad_size);
 		return -EBADMSG;
 	}
 
-	scatterwalk_map_and_copy(pad, dst_sg, len-pad_size-1, pad_size+1, 0);
+	scatterwalk_map_and_copy(pad, dst_sg, len - pad_size - 1, pad_size + 1, 0);
 
-	for (i=0;i<pad_size;i++)
+	for (i = 0; i < pad_size; i++)
 		if (pad[i] != pad_size) {
 			dprintk(1, KERN_ERR, "Pad size: %d, pad: %d\n", pad_size, (int)pad[i]);
 			return -EBADMSG;
 		}
 
-	return pad_size+1;
+	return pad_size + 1;
 }
 
 /* Authenticate and encrypt the TLS way (also perform padding).
diff --git a/drivers/staging/crypto/cryptodev/zc.c b/drivers/staging/crypto/cryptodev/zc.c
index 774a0d8ce135..6ca27ecd88df 100644
--- a/drivers/staging/crypto/cryptodev/zc.c
+++ b/drivers/staging/crypto/cryptodev/zc.c
@@ -110,7 +110,7 @@ void release_user_pages(struct csession *ses)
 {
 	unsigned int i;
 
-	for (i=0;i<ses->used_pages;i++) {
+	for (i = 0; i < ses->used_pages; i++) {
 		if (!PageReserved(ses->pages[i]))
 			SetPageDirty(ses->pages[i]);
 
@@ -176,7 +176,7 @@ int get_userbuf(struct csession *ses,
 	*src_sg = NULL; // default to no input
 	*dst_sg = NULL; // default to ignore output
 
-	if(likely(src)) {
+	if (likely(src)) {
 		rc = __get_userbuf(src, src_len, 0, ses->readonly_pages,
 					   ses->pages, ses->sg, task, mm);
 		if (unlikely(rc)) {
@@ -187,7 +187,7 @@ int get_userbuf(struct csession *ses,
 		*src_sg = ses->sg;
 	}
 
-	if(likely(dst)) {
+	if (likely(dst)) {
 		const unsigned int writable_pages =
 			ses->used_pages - ses->readonly_pages;
 		struct page **dst_pages = ses->pages + ses->readonly_pages;
-- 
2.1.0

