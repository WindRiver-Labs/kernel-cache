From 638eca883b488836fb8be9b8ad09c6affde8e6e3 Mon Sep 17 00:00:00 2001
From: Nikos Mavrogiannopoulos <nmav@gnutls.org>
Date: Thu, 23 Feb 2012 19:02:09 +0100
Subject: [PATCH 183/291] cryptodev: artistic

---
 drivers/staging/crypto/cryptodev/authenc.c       | 22 ++++++++++++++++------
 drivers/staging/crypto/cryptodev/cryptodev_int.h |  3 ++-
 2 files changed, 18 insertions(+), 7 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/authenc.c b/drivers/staging/crypto/cryptodev/authenc.c
index 9b2ce0971dd4..80757035a8e3 100644
--- a/drivers/staging/crypto/cryptodev/authenc.c
+++ b/drivers/staging/crypto/cryptodev/authenc.c
@@ -324,10 +324,10 @@ static int verify_tls_record_pad( struct scatterlist *dst_sg, int len, int block
  */
 static int
 tls_auth_n_crypt(struct csession *ses_ptr, struct kernel_crypt_auth_op *kcaop,
-		struct scatterlist *auth_sg, uint32_t auth_len,
-		struct scatterlist *dst_sg, uint32_t len)
+		 struct scatterlist *auth_sg, uint32_t auth_len,
+		 struct scatterlist *dst_sg, uint32_t len)
 {
-	int ret, fail = 0;
+ 	int ret, fail = 0;
 	struct crypt_auth_op *caop = &kcaop->caop;
 	uint8_t vhash[AALG_MAX_RESULT_LEN];
 	uint8_t hash_output[AALG_MAX_RESULT_LEN];
@@ -619,15 +619,20 @@ __crypto_auth_run_zc(struct csession *ses_ptr, struct kernel_crypt_auth_op *kcao
 		unsigned char* auth_buf = NULL;
 		struct scatterlist tmp;
 
-		if (unlikely(caop->auth_len > PAGE_SIZE))
+		if (unlikely(caop->auth_len > PAGE_SIZE)) {
+			dprintk(1, KERN_ERR, "auth data len is excessive.\n");
 			return -EINVAL;
+		}
 
 		auth_buf = (char *)__get_free_page(GFP_KERNEL);
-		if (unlikely(!auth_buf))
+		if (unlikely(!auth_buf)) {
+			dprintk(1, KERN_ERR, "unable to get a free page.\n");
 			return -ENOMEM;
+		}
 
 		if (caop->auth_len > 0) {
 			if (unlikely(copy_from_user(auth_buf, caop->auth_src, caop->auth_len))) {
+				dprintk(1, KERN_ERR, "unable to copy auth data from userspace.\n");
 				ret = -EFAULT;
 				goto fail;
 			}
@@ -720,9 +725,14 @@ int crypto_auth_run(struct fcrypt *fcr, struct kernel_crypt_auth_op *kcaop)
 
 	if (likely(caop->len || caop->auth_len)) {
 		ret = __crypto_auth_run_zc(ses_ptr, kcaop);
-		if (unlikely(ret))
+		if (unlikely(ret)) {
+			dprintk(1, KERN_ERR,
+				"error in __crypto_auth_run_zc()\n");
 			goto out_unlock;
+		}
 	} else {
+		dprintk(1, KERN_ERR,
+			"Do not have auth data nor other data.\n");
 		ret = -EINVAL;
 		goto out_unlock;
 	}
diff --git a/drivers/staging/crypto/cryptodev/cryptodev_int.h b/drivers/staging/crypto/cryptodev/cryptodev_int.h
index 93c436946a21..e4a8974c59fe 100644
--- a/drivers/staging/crypto/cryptodev/cryptodev_int.h
+++ b/drivers/staging/crypto/cryptodev/cryptodev_int.h
@@ -18,8 +18,9 @@
 #define dprintk(level, severity, format, a...)			\
 	do {							\
 		if (level <= cryptodev_verbosity)		\
-			printk(severity PFX "%s[%u]: " format,	\
+			printk(severity PFX "%s[%u] (%s:%u): " format,	\
 			       current->comm, current->pid,	\
+			       __func__, __LINE__,		\
 			       ##a);				\
 	} while (0)
 
-- 
2.1.0

