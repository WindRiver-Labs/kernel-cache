From 664feb7b4de8c9a1ae96409387c5231f989557d1 Mon Sep 17 00:00:00 2001
From: Cristian Stoica <cristian.stoica@freescale.com>
Date: Tue, 22 Oct 2013 12:51:34 +0300
Subject: [PATCH 253/291] cryptodev: initialize

kmalloc + memset(0) can be replaced with a single call to kzalloc for
the same results

Signed-off-by: Cristian Stoica <cristian.stoica@freescale.com>
---
 drivers/staging/crypto/cryptodev/cryptlib.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/cryptlib.c b/drivers/staging/crypto/cryptodev/cryptlib.c
index 9e6510f86d31..44404b567f2e 100644
--- a/drivers/staging/crypto/cryptodev/cryptlib.c
+++ b/drivers/staging/crypto/cryptodev/cryptlib.c
@@ -112,13 +112,12 @@ int cryptodev_cipher_init(struct cipher_data *out, const char *alg_name,
 	out->stream = stream;
 	out->aead = aead;
 
-	out->async.result = kmalloc(sizeof(*out->async.result), GFP_KERNEL);
+	out->async.result = kzalloc(sizeof(*out->async.result), GFP_KERNEL);
 	if (unlikely(!out->async.result)) {
 		ret = -ENOMEM;
 		goto error;
 	}
 
-	memset(out->async.result, 0, sizeof(*out->async.result));
 	init_completion(&out->async.result->completion);
 
 	if (aead == 0) {
@@ -285,13 +284,12 @@ int cryptodev_hash_init(struct hash_data *hdata, const char *alg_name,
 	hdata->digestsize = crypto_ahash_digestsize(hdata->async.s);
 	hdata->alignmask = crypto_ahash_alignmask(hdata->async.s);
 
-	hdata->async.result = kmalloc(sizeof(*hdata->async.result), GFP_KERNEL);
+	hdata->async.result = kzalloc(sizeof(*hdata->async.result), GFP_KERNEL);
 	if (unlikely(!hdata->async.result)) {
 		ret = -ENOMEM;
 		goto error;
 	}
 
-	memset(hdata->async.result, 0, sizeof(*hdata->async.result));
 	init_completion(&hdata->async.result->completion);
 
 	hdata->async.request = ahash_request_alloc(hdata->async.s, GFP_KERNEL);
-- 
2.1.0

