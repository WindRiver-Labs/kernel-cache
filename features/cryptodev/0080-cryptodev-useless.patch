From 44ff62cb38c916b16eda76b8a294eb45c61366d5 Mon Sep 17 00:00:00 2001
From: Phil Sutter <phil@nwl.cc>
Date: Mon, 12 Jul 2010 00:56:28 +0200
Subject: [PATCH 080/291] cryptodev: useless

---
 drivers/staging/crypto/cryptodev/cryptodev_cipher.c | 2 +-
 drivers/staging/crypto/cryptodev/cryptodev_main.c   | 8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/cryptodev_cipher.c b/drivers/staging/crypto/cryptodev/cryptodev_cipher.c
index 5462f032a6eb..123baa1cf9ed 100644
--- a/drivers/staging/crypto/cryptodev/cryptodev_cipher.c
+++ b/drivers/staging/crypto/cryptodev/cryptodev_cipher.c
@@ -50,7 +50,7 @@ static void cryptodev_complete(struct crypto_async_request *req, int err)
 
 int cryptodev_cipher_init(struct cipher_data* out, const char* alg_name, uint8_t * keyp, size_t keylen)
 {
-	
+
 	struct ablkcipher_alg* alg;
 	int ret;
 
diff --git a/drivers/staging/crypto/cryptodev/cryptodev_main.c b/drivers/staging/crypto/cryptodev/cryptodev_main.c
index 4405c0b878e2..8b148a7c14ae 100644
--- a/drivers/staging/crypto/cryptodev/cryptodev_main.c
+++ b/drivers/staging/crypto/cryptodev/cryptodev_main.c
@@ -21,7 +21,7 @@
  */
 
 /*
- * Device /dev/crypto provides an interface for 
+ * Device /dev/crypto provides an interface for
  * accessing kernel CryptoAPI algorithms (ciphers,
  * hashes) from userspace programs.
  *
@@ -231,7 +231,7 @@ crypto_create_session(struct fcrypt *fcr, struct session_op *sop)
 			ret = -EINVAL;
 			goto error_hash;
 		}
-		
+
 		ret = copy_from_user(keyp, sop->mackey, sop->mackeylen);
 		if (unlikely(ret)) {
 			goto error_hash;
@@ -551,7 +551,7 @@ static int get_userbuf(struct csession *ses,
 				sizeof(struct page *), GFP_KERNEL);
 		ses->sg = krealloc(ses->sg, ses->array_size *
 				sizeof(struct scatterlist), GFP_KERNEL);
-		
+
 		if (ses->sg == NULL || ses->pages == NULL) {
 			return -ENOMEM;
 		}
@@ -638,7 +638,7 @@ static int crypto_run(struct fcrypt *fcr, struct crypt_op *cop)
 
 		if (cop->iv) {
 			uint8_t iv[EALG_MAX_BLOCK_LEN];
-			
+
 			ret = copy_from_user(iv, cop->iv, min( (int)sizeof(iv), (ses_ptr->cdata.ivsize)));
 			if (unlikely(ret)) {
 				dprintk(1, KERN_ERR, "error copying IV (%d bytes)\n", min( (int)sizeof(iv), (ses_ptr->cdata.ivsize)));
-- 
2.1.0

