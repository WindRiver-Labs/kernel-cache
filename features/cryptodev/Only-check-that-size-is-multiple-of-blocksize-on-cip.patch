From e4d3f9b116f41dce6bf0bf8413505e13a1113dab Mon Sep 17 00:00:00 2001
From: Nikos Mavrogiannopoulos <nmav@gnutls.org>
Date: Sun, 29 Nov 2009 01:04:10 +0200
Subject: [PATCH 005/292] Only check that size is multiple of blocksize on
 ciphers.

---
 drivers/staging/crypto/cryptodev/Makefile    | 2 +-
 drivers/staging/crypto/cryptodev/cryptodev.c | 2 +-
 drivers/staging/crypto/cryptodev/cryptodev.h | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/crypto/cryptodev/Makefile b/drivers/staging/crypto/cryptodev/Makefile
index 12bb5e24e595..7c4a33bb299f 100644
--- a/drivers/staging/crypto/cryptodev/Makefile
+++ b/drivers/staging/crypto/cryptodev/Makefile
@@ -8,7 +8,7 @@ build:
 install:
 	make -C $(KERNEL_DIR) SUBDIRS=`pwd` modules_install
 	@echo "Installing cryptodev.h in /usr/include/crypto ..."
-	@install -D cryptodev.h /usr/include/crypto
+	@install -D cryptodev.h /usr/include/crypto/cryptodev.h
 
 clean:
 	make -C $(KERNEL_DIR) SUBDIRS=`pwd` clean
diff --git a/drivers/staging/crypto/cryptodev/cryptodev.c b/drivers/staging/crypto/cryptodev/cryptodev.c
index 76581c46f79a..f09a38d5aadb 100644
--- a/drivers/staging/crypto/cryptodev/cryptodev.c
+++ b/drivers/staging/crypto/cryptodev/cryptodev.c
@@ -465,7 +465,7 @@ static int crypto_runv(struct fcrypt *fcr, struct crypt_opv *copv)
 	for (i=0;i<copv->iovec_cnt;i++) {
 		nbytes = copv->iovec[i].len;
 
-		if (unlikely(bdesc.tfm && (nbytes % blocksize))) {
+		if (unlikely(bdesc.tfm && (copv->iovec[i].op_flags & IOP_CIPHER) && (nbytes % blocksize))) {
 			dprintk(1, KERN_ERR,
 				"data size (%zu) isn't a multiple of block size (%u)\n",
 				nbytes, crypto_blkcipher_blocksize(ses_ptr->tfm));
diff --git a/drivers/staging/crypto/cryptodev/cryptodev.h b/drivers/staging/crypto/cryptodev/cryptodev.h
index 891ad2ac7dd2..55c3279143a7 100644
--- a/drivers/staging/crypto/cryptodev/cryptodev.h
+++ b/drivers/staging/crypto/cryptodev/cryptodev.h
@@ -49,7 +49,7 @@ enum {
 	CRYPTO_ALGORITHM_MAX
 };
 
-#define CRYPTO_CIPHER_MAX_KEY_LEN 512
+#define CRYPTO_CIPHER_MAX_KEY_LEN 64
 #define CRYPTO_HMAC_MAX_KEY_LEN 512
 
 #define	HASH_MAX_LEN		64
-- 
1.8.1.2

