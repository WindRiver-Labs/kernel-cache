From 764fc71892e61ed916466c2c8c26179744566908 Mon Sep 17 00:00:00 2001
From: Yongli He <yongli.he@windriver.com>
Date: Fri, 8 Aug 2008 11:46:13 +0800
Subject: [PATCH] memmon fix ppc64 tlb flush

bring back flush tlb pending only for memmon.

Signed-off-by: Yongli he   <yongli.he@windriver.com>
diff --git a/drivers/connector/cn_memmon.c b/drivers/connector/cn_memmon.c
index 4ffbb33..6f89bf5 100644
--- a/drivers/connector/cn_memmon.c
+++ b/drivers/connector/cn_memmon.c
@@ -93,7 +93,7 @@ void cn_memmon_callback(void *data)
 	if (args->start > args->end)
 		goto out;
 
-	p = find_task_by_pid(args->pid);
+	p = find_task_by_pid_ns(args->pid, &init_pid_ns);
 	if (!p) {
 		printk(KERN_ERR "memmon: invalid pid %d\n", args->pid);
 		goto out;
diff --git a/include/linux/connector.h b/include/linux/connector.h
index 8d9c122..44d4dc2 100644
--- a/include/linux/connector.h
+++ b/include/linux/connector.h
@@ -45,7 +45,7 @@
 /*
  * memmon connector unique ids -- used for message routing
  */
-#define CN_IDX_MEMMON                     0x1
+#define CN_IDX_MEMMON                     0x6
 #define CN_VAL_MEMMON                     0x1
 
 #define CN_NETLINK_USERS		6
diff --git a/mm/memmon.c b/mm/memmon.c
index 4084e7b..c944f1b 100644
--- a/mm/memmon.c
+++ b/mm/memmon.c
@@ -30,8 +30,21 @@
 #include <asm/timex.h>
 
 
-#ifdef __PPC64__
+#ifdef CONFIG_PPC64
 #define BATCH_FLUSH
+static inline void flush_tlb_pending()
+{
+	struct ppc64_tlb_batch *tlbbatch = &get_cpu_var(ppc64_tlb_batch);
+
+	/* If there's a TLB batch pending, then we must flush it because the
+	 * pages are going to be freed and we really don't want to have a CPU
+	 * access a freed page because it has a stale TLB
+	 */
+	if (tlbbatch->index)
+		__flush_tlb_pending(tlbbatch);
+
+        put_cpu_var(ppc64_tlb_batch);
+}
 #endif
 
 /* The memmon "sister" page flags works like this:
