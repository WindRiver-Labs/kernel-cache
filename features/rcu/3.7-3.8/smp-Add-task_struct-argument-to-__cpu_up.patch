From 1e235caf8f95da4994a5c09f8818dfa7eb03ae00 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Wed, 27 Feb 2013 11:15:31 -0800
Subject: [PATCH] smp: Add task_struct argument to __cpu_up()

Based on commit 8239c25f47d2b318156993b15f33900a86ea5e17 upstream

[Preparatory patch to make the idle thread allocation for secondary
 cpus generic.

 Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
 Cc: Peter Zijlstra <peterz@infradead.org>
 Cc: Rusty Russell <rusty@rustcorp.com.au>
 Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
 Cc: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
 Cc: Matt Turner <mattst88@gmail.com>
 Cc: Russell King <linux@arm.linux.org.uk>
 Cc: Mike Frysinger <vapier@gentoo.org>
 Cc: Jesper Nilsson <jesper.nilsson@axis.com>
 Cc: Richard Kuo <rkuo@codeaurora.org>
 Cc: Tony Luck <tony.luck@intel.com>
 Cc: Hirokazu Takata <takata@linux-m32r.org>
 Cc: Ralf Baechle <ralf@linux-mips.org>
 Cc: David Howells <dhowells@redhat.com>
 Cc: James E.J. Bottomley <jejb@parisc-linux.org>
 Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
 Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
 Cc: Paul Mundt <lethal@linux-sh.org>
 Cc: David S. Miller <davem@davemloft.net>
 Cc: Chris Metcalf <cmetcalf@tilera.com>
 Cc: Richard Weinberger <richard@nod.at>
 Cc: x86@kernel.org
 Link: http://lkml.kernel.org/r/20120420124556.964170564@linutronix.de
]
Signed-off-by: Yang Shi <yang.shi@windriver.com>

diff --git a/arch/x86/include/asm/smp.h b/arch/x86/include/asm/smp.h
index 0434c40..4eb3a74 100644
--- a/arch/x86/include/asm/smp.h
+++ b/arch/x86/include/asm/smp.h
@@ -62,6 +62,8 @@ DECLARE_EARLY_PER_CPU(int, x86_cpu_to_logical_apicid);
 /* Static state in head.S used to set up a CPU */
 extern unsigned long stack_start; /* Initial stack pointer address */
 
+struct task_struct;
+
 struct smp_ops {
 	void (*smp_prepare_boot_cpu)(void);
 	void (*smp_prepare_cpus)(unsigned max_cpus);
@@ -113,7 +115,7 @@ static inline void smp_cpus_done(unsigned int max_cpus)
 	smp_ops.smp_cpus_done(max_cpus);
 }
 
-static inline int __cpu_up(unsigned int cpu)
+static inline int __cpu_up(unsigned int cpu, struct task_struct *tidle)
 {
 	return smp_ops.cpu_up(cpu);
 }
diff --git a/include/linux/smp.h b/include/linux/smp.h
index 3001ba5..7bc4058 100644
--- a/include/linux/smp.h
+++ b/include/linux/smp.h
@@ -61,7 +61,7 @@ extern void smp_prepare_cpus(unsigned int max_cpus);
 /*
  * Bring a CPU up
  */
-extern int __cpu_up(unsigned int cpunum);
+extern int __cpu_up(unsigned int cpunum, struct task_struct *tidle);
 
 /*
  * Final polishing of CPUs
-- 
1.7.5.4

