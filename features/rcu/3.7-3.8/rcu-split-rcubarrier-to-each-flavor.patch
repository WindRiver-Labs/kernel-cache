From 2c9c1b68055913e68708494731d02113d683e8e8 Mon Sep 17 00:00:00 2001
From: Michael Wang <wangyun@linux.vnet.ibm.com>
Date: Mon, 8 Oct 2012 16:59:16 +0800
Subject: [PATCH] rcu: split 'rcubarrier' to each flavor

commit c25e557f5d49a7cb94fad473f5ced75b6c7ce094 upstream.

This patch add new 'rcubarrier' to each flavor's folder, now we could use:
	'cat /debugfs/rcu/rsp/rcubarrier'
to get the selected rsp info.

Signed-off-by: Michael Wang <wangyun@linux.vnet.ibm.com>
Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
Signed-off-by: Yang Shi <yang.shi@windriver.com>

diff --git a/kernel/rcutree_trace.c b/kernel/rcutree_trace.c
index 3312ed7..65b6265 100644
--- a/kernel/rcutree_trace.c
+++ b/kernel/rcutree_trace.c
@@ -103,6 +103,28 @@ static const struct file_operations rcubarrier_fops = {
 	.release = single_release,
 };
 
+static int new_show_rcubarrier(struct seq_file *m, void *v)
+{
+	struct rcu_state *rsp = (struct rcu_state *)m->private;
+	seq_printf(m, "bcc: %d nbd: %lu\n",
+		   atomic_read(&rsp->barrier_cpu_count),
+		   rsp->n_barrier_done);
+	return 0;
+}
+
+static int new_rcubarrier_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, new_show_rcubarrier, inode->i_private);
+}
+
+static const struct file_operations new_rcubarrier_fops = {
+	.owner = THIS_MODULE,
+	.open = new_rcubarrier_open,
+	.read = seq_read,
+	.llseek = no_llseek,
+	.release = seq_release,
+};
+
 #ifdef CONFIG_RCU_BOOST
 
 static char convert_kthread_status(unsigned int kthread_status)
@@ -432,6 +454,11 @@ static int __init rcutree_trace_init(void)
 					rspdir, rsp, &rcu_pending_fops);
 			if (!retval)
 				goto free_out;
+
+			retval = debugfs_create_file("rcubarrier", 0444,
+					rspdir, rsp, &new_rcubarrier_fops);
+			if (!retval)
+				goto free_out;
 	}
 
 	retval = debugfs_create_file("rcubarrier", 0444, rcudir,
-- 
1.7.5.4

