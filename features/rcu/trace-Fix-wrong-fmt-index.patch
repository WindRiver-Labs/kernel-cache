From 26295ff35c8b09a3a0d1058724dc5114595e31ca Mon Sep 17 00:00:00 2001
From: Nam Ninh <nam.ninh@windriver.com>
Date: Thu, 5 Jun 2014 15:53:53 -0400
Subject: [PATCH] trace: Fix wrong fmt index

When this command was run, we observed that the condition
(start_index == *pos) in find_next_mod_format is never true, so it never
populates and returns a fmt record (&p->fmt) from trace_bprintk_fmt_list.
The problem is wrong start index being passed into find_next_mod_format.

trace-cmd record -p function_graph -e irq_handler_entry -l do_IRQ sleep 10

We define 2 kernel core fmt sections __trace_printk_fmt and
__tracepoint_str; one after the other. Depending on the value of fmt pointer
"pos", find_next returns the address of the fmt record in either sections.
When "pos" is larger than (start_index + last_index), we need to call
find_next_mod_format to find the fmt in trace_bprintk_fmt_list. The picture
before calling find_next_mod_format in find_next is following:

      ---------------------- <--- 0
      |                    |
      | __trace_printk_fmt | last_index = size of __trace_printk_fmt
      |                    |
      ---------------------- <--- last_index
      |                    |
      | __tracepoint_str   | start_index = size of __tracepoint_str
      |                    |
      ---------------------- <--- (*pos) starts from here.

We pass "start_index" and "pos" into find_next_mod_format, but (*pos) is
already equal to or larger than (last_index + start_index), so the condition
(start_index == *pos) in find_next_mod_format is never true.

This problem was introduced by commit 102c9323c35a83789ad5ebd3c45fa8fb389add88.
("tracing: Add __tracepoint_string() to export string pointers")

Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/kernel/trace/trace_printk.c b/kernel/trace/trace_printk.c
index 9807ae889764..d44c3c63bbb8 100644
--- a/kernel/trace/trace_printk.c
+++ b/kernel/trace/trace_printk.c
@@ -273,7 +273,7 @@ static const char **find_next(void *v, loff_t *pos)
 		return __start___tracepoint_str + (*pos - last_index);
 
 	start_index += last_index;
-	return find_next_mod_format(start_index, v, fmt, pos);
+	return find_next_mod_format((last_index + start_index), v, fmt, pos);
 }
 
 static void *
-- 
2.1.4

