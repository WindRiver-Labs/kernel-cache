From e3c87f4c31585073aef981a59622f62f6bb9cbb0 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 25 Mar 2015 13:31:20 -0400
Subject: [PATCH] Revert "rcu: Make callers awaken grace-period kthread"

This reverts commit 35cbd149f07864e5d68c8368549a03609fddd1a3.

We are applying upstream rcu commits later on in this branch, and
having partial backports here from stable is problematic in
disrupting the commit order of the rcu content.

Revert it here so the actual mainline commit can be applied as-is
later on in the series of pending commits.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/kernel/rcu/tree.c b/kernel/rcu/tree.c
index e4ce6b778eb0..b3d116cd072d 100644
--- a/kernel/rcu/tree.c
+++ b/kernel/rcu/tree.c
@@ -1228,22 +1228,6 @@ static int rcu_future_gp_cleanup(struct rcu_state *rsp, struct rcu_node *rnp)
 }
 
 /*
- * Awaken the grace-period kthread for the specified flavor of RCU.
- * Don't do a self-awaken, and don't bother awakening when there is
- * nothing for the grace-period kthread to do (as in several CPUs
- * raced to awaken, and we lost), and finally don't try to awaken
- * a kthread that has not yet been created.
- */
-static void rcu_gp_kthread_wake(struct rcu_state *rsp)
-{
-	if (current == rsp->gp_kthread ||
-	    !ACCESS_ONCE(rsp->gp_flags) ||
-	    !rsp->gp_kthread)
-		return;
-	wake_up(&rsp->gp_wq);
-}
-
-/*
  * If there is room, assign a ->completed number to any callbacks on
  * this CPU that have not already been assigned.  Also accelerate any
  * callbacks that were previously assigned a ->completed number that has
@@ -1686,7 +1670,7 @@ static void rsp_wakeup(struct irq_work *work)
 	struct rcu_state *rsp = container_of(work, struct rcu_state, wakeup_work);
 
 	/* Wake up rcu_gp_kthread() to start the grace period. */
-	rcu_gp_kthread_wake(rsp);
+	wake_up(&rsp->gp_wq);
 }
 
 /*
-- 
2.3.4

