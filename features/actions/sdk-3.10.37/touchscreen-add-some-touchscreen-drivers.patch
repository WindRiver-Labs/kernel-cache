From b3ff085659e3fdcb95ebc8db9fd0e6999378d673 Mon Sep 17 00:00:00 2001
From: wurui <wurui@actions-semi.com>
Date: Mon, 7 Dec 2015 13:28:07 +0800
Subject: [PATCH 21/62] touchscreen: add some touchscreen drivers

commit e8f08eed47cdba1f38fd8502922fccbe7287a1fb from
https://github.com/xapp-le/kernel.git

Change-Id: Id2a8025f0cc04ba37d66829814595c86089ce9dc
---
 drivers/input/touchscreen/FT5406/Makefile         |   27 +
 drivers/input/touchscreen/FT5406/ft5x06.c         | 2207 +++++
 drivers/input/touchscreen/FT5406/ft5x06.h         |  136 +
 drivers/input/touchscreen/FT5406/ft5x06_reg.h     |  195 +
 drivers/input/touchscreen/GSL1680F/Makefile       |    7 +
 drivers/input/touchscreen/GSL1680F/gsl1680.c      | 1641 +++
 drivers/input/touchscreen/GSL1680F/gsl1680.h      | 5610 +++++++++++
 drivers/input/touchscreen/GSL2681_M2111/Makefile  |    6 +
 drivers/input/touchscreen/GSL2681_M2111/gslX680.c | 1641 +++
 drivers/input/touchscreen/GSL2681_M2111/gslX680.h | 5503 +++++++++++
 drivers/input/touchscreen/GSL3680/Makefile        |    7 +
 drivers/input/touchscreen/GSL3680/gsl3680.c       | 1641 +++
 drivers/input/touchscreen/GSL3680/gsl3680.h       |10992 +++++++++++++++++++++
 drivers/input/touchscreen/Kconfig                 |   60 +
 drivers/input/touchscreen/Makefile                |    5 +
 drivers/input/touchscreen/ctp_detect/Makefile     |    5 +
 drivers/input/touchscreen/ctp_detect/ctp_detect.c |  456 +
 drivers/input/touchscreen/ctp_detect/ctp_detect.h |  173 +
 18 files changed, 30312 insertions(+), 0 deletions(-)
 create mode 100755 drivers/input/touchscreen/FT5406/Makefile
 create mode 100755 drivers/input/touchscreen/FT5406/ft5x06.c
 create mode 100755 drivers/input/touchscreen/FT5406/ft5x06.h
 create mode 100755 drivers/input/touchscreen/FT5406/ft5x06_reg.h
 create mode 100755 drivers/input/touchscreen/GSL1680F/Makefile
 create mode 100755 drivers/input/touchscreen/GSL1680F/gsl1680.c
 create mode 100755 drivers/input/touchscreen/GSL1680F/gsl1680.h
 create mode 100755 drivers/input/touchscreen/GSL2681_M2111/Makefile
 create mode 100755 drivers/input/touchscreen/GSL2681_M2111/gslX680.c
 create mode 100755 drivers/input/touchscreen/GSL2681_M2111/gslX680.h
 create mode 100755 drivers/input/touchscreen/GSL3680/Makefile
 create mode 100755 drivers/input/touchscreen/GSL3680/gsl3680.c
 create mode 100755 drivers/input/touchscreen/GSL3680/gsl3680.h
 mode change 100644 => 100755 drivers/input/touchscreen/Kconfig
 mode change 100644 => 100755 drivers/input/touchscreen/Makefile
 create mode 100755 drivers/input/touchscreen/ctp_detect/Makefile
 create mode 100755 drivers/input/touchscreen/ctp_detect/ctp_detect.c
 create mode 100755 drivers/input/touchscreen/ctp_detect/ctp_detect.h

diff --git a/drivers/input/touchscreen/FT5406/Makefile b/drivers/input/touchscreen/FT5406/Makefile
new file mode 100755
index 0000000..08956ae
--- /dev/null
+++ b/drivers/input/touchscreen/FT5406/Makefile
@@ -0,0 +1,27 @@
+#
+# Makefile for the ft5406 tp driver
+#
+
+# tp
+R_TP_MAX_POINT=5
+R_TP_DOWNLOAD_FIRM=0
+R_TP_UPGRADE_ID2=0x3
+R_TP_I_FILE_NAME="NOVO7_FT5406_COF_20141029_app.i"
+
+ ifeq ($(R_TP_MAX_POINT),)
+ R_TP_MAX_POINT = 5
+ endif
+ ifeq ($(R_TP_DOWNLOAD_FIRM),)
+ R_TP_DOWNLOAD_FIRM = 0
+ endif
+ ifeq ($(R_TP_UPGRADE_ID2),)
+ R_TP_UPGRADE_ID2 = 0x6
+ endif
+ ifeq ($(R_TP_I_FILE_NAME),)
+ R_TP_I_FILE_NAME = "ft_app.i"
+ endif
+
+EXTRA_CFLAGS += -DFT5X06_MAX_POINT=${R_TP_MAX_POINT} -DFT5X0X_DOWNLOAD_FIRM=${R_TP_DOWNLOAD_FIRM} -DUPGRADE_ID2=${R_TP_UPGRADE_ID2} -DFIRM_I_FILE_NAME=${R_TP_I_FILE_NAME}
+
+obj-$(CONFIG_TOUCHSCREEN_FT5X06)		  += ctp_ft5x06.o
+ctp_ft5x06-objs := ft5x06.o
\ No newline at end of file
diff --git a/drivers/input/touchscreen/FT5406/ft5x06.c b/drivers/input/touchscreen/FT5406/ft5x06.c
new file mode 100755
index 0000000..16ffe05
--- /dev/null
+++ b/drivers/input/touchscreen/FT5406/ft5x06.c
@@ -0,0 +1,2207 @@
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/err.h>
+#include <linux/slab.h>
+#include <linux/types.h>
+#include <linux/delay.h>
+#include <linux/i2c.h>
+#include <linux/init.h>
+#include <linux/clk.h>
+#include <linux/gpio.h>
+#include <linux/earlysuspend.h>
+#include <linux/regulator/consumer.h>
+#include <linux/platform_device.h>
+#include <linux/mutex.h>
+#include <linux/time.h>
+#include <mach/gpio.h>
+#include <mach/irqs.h>
+#include <linux/interrupt.h>
+#include <asm/prom.h>
+#include <linux/input/mt.h>
+#include <linux/of_gpio.h>
+#include <linux/of_irq.h>
+#include "ft5x06_reg.h"
+#include "ft5x06.h"
+
+#define FT5X06_NAME             "ft5x06"
+#define VALUE_XY(h, l)          ( (h & 0x0f) << 8 | l)
+#define VALUE_ID(yh)            ( yh >> 4 )
+#define VALUE_TYPE(xh)          ( xh >> 6 )
+#define TOUCH_NUMBER(status)    ( status & 0xf )
+#define TIME_OF_DISCARD         ( msecs_to_jiffies(2000))  //jiffes
+#define PROTOCOL_B
+enum FT5X06_MODE {
+    INVALID_MODE ,
+    OPER_MODE ,
+    SYS_MODE ,
+    TEST_MODE ,
+};
+
+enum FT_EVENT_TYPE {
+    PRESS_EVENT ,
+    RELEASE_EVENT ,
+    CONTACT_EVENT ,
+    NONE_EVENT,
+};
+
+#define printlf() printk("%s   %d\n",__FUNCTION__,__LINE__)
+//#define printlf()
+
+//#if defined(LOCAL_GL5202_EVB)
+//#define HAS_VIRTUAL_KEY
+//#endif
+
+
+#ifdef HAS_VIRTUAL_KEY
+static enum KEY_ID {
+    KEY_ID_HOME,
+    KEY_ID_MENU,
+    KEY_ID_BACK,
+    KEY_ID_MAX,
+};
+
+struct ft5x06_keys {
+    unsigned int keymap;
+    unsigned int oldmap;
+};
+
+struct key_codes {
+    int id;
+    char name[10];
+    int key_code;
+};
+
+struct key_codes key_map[] = {
+    { KEY_ID_HOME, "Home", KEY_HOME},
+    { KEY_ID_MENU, "Menu", KEY_MENU},
+    { KEY_ID_BACK, "Back", KEY_BACK},
+};
+#endif
+
+struct ft5x06_point {
+    enum FT_EVENT_TYPE  type;
+    unsigned int weight;
+    unsigned int x;
+    unsigned int y;
+    unsigned int id;
+};
+
+struct ft5x06_data {
+    struct ft5x06_point points[FT5X06_MAX_POINT];
+    u8 rawData[POINT_DATA_LEN*FT5X06_MAX_POINT + 1];
+#ifdef HAS_VIRTUAL_KEY
+    struct ft5x06_keys   keys;
+	int validKeyCnt;
+	int lastValidKeyCnt;
+#endif    
+    int validPointCnt;
+	int lastValidCnt;
+};
+
+#if CFG_FT_USE_CONFIG
+struct ft5x06_cfg_dts {
+	unsigned int sirq;
+	unsigned int i2cNum;
+	unsigned int i2cAddr;
+	unsigned int xMax;
+	unsigned int yMax;
+	unsigned int rotate; 
+	unsigned int xRevert;
+	unsigned int yRevert;
+	unsigned int XYSwap;
+	char const *regulator;
+	unsigned int vol_max;
+	unsigned int vol_min;
+};
+
+static struct ft5x06_cfg_dts cfg_dts;
+#endif
+struct ft5x06_config {
+    enum FT5X06_MODE mode;
+    struct ft5x06_point max;
+    u16 vendor;
+    u16 version;
+    u16 product;
+};
+
+struct ft5x06_device {
+    struct input_dev *input_dev;
+#ifdef HAS_VIRTUAL_KEY
+    struct input_dev *key_input;
+#endif
+    struct i2c_client *client;
+    struct atc260x_dev *atc260x;
+    struct ft5x06_data *ftdata;
+    struct ft5x06_config *ftconfig;
+    struct work_struct work;
+    struct workqueue_struct *workqueue;
+	struct regulator *regulator;
+    struct mutex lock;
+#ifdef CONFIG_HAS_EARLYSUSPEND	
+	struct early_suspend es;
+#endif
+    int irq;
+    unsigned long time_discard;
+};
+
+int debug_switch = 0;
+static char ctp_power_name[] = FT5X06_POWER_ID;
+static struct regulator *tp_regulator = NULL;
+static int ft5x06_reset( struct ft5x06_device *);
+static inline void regulator_deinit(struct regulator *);
+static struct regulator *regulator_init(const char *, int, int);
+static inline void disable_power(struct regulator *);
+#ifndef PROTOCOL_B
+static int ft5x06_report_release(struct ft5x06_device *);
+static void ft5x06_release_post(struct ft5x06_device *);
+#endif
+//volatile int enirq = 1;
+volatile int current_val = 0;
+//struct regulator *gpower = NULL;
+//static struct i2c_client * pClient = NULL;
+
+static unsigned gpio_reset = FT5X06_RESET_PIN;
+
+/*
+  * I2C funcionts:
+  * @ ft5x06_get_regs/ft5x06_get_reg
+  * @ ft5x06_set_regs/ft5x06_set_reg
+  *
+  * Sucessed, 0 returned. Failed, 1 returnd
+  */
+static int ft5x06_get_regs(struct i2c_client *client, 
+    u8 addr, u8 *buff, int count)
+{
+    int err = 0;
+    struct i2c_msg msg[2];
+
+    msg[0].addr = client->addr;
+    msg[0].flags = 0;
+    msg[0].buf = &addr;
+    msg[0].len = 1;
+    
+    msg[1].addr = client->addr;
+    msg[1].flags = I2C_M_RD;
+    msg[1].buf = buff;
+    msg[1].len = count;
+    
+
+    err = i2c_transfer(client->adapter, msg, 2);
+
+    if ( 2 != err ) {
+        FT5X06_WARNNING("I2C read failed");
+        goto out;
+    }
+   
+out:
+    return (( 2 == err )?0:-EFAULT);
+}
+
+static int ft5x06_get_reg(struct i2c_client *client,
+    u8 addr, u8 *buff)
+{
+    return ft5x06_get_regs(client, addr, buff, 1);
+}
+
+static int ft5x06_set_reg(struct i2c_client *client, 
+    u8 addr, u8 *data)
+{
+    int err = 0;
+
+    struct i2c_msg msg[1];
+    char b[] = { addr, *data};
+
+    msg[0].addr = client->addr;
+    msg[0].flags = 0;
+    msg[0].buf = b;
+    msg[0].len = ARRAY_SIZE(b);
+
+    err = i2c_transfer(client->adapter, msg, 1);
+    if ( 1 != err ) {
+        FT5X06_WARNNING("I2C write failed");
+    }    
+
+    return ( (1 != err)?-EFAULT:0);
+}
+
+/*
+  * Using this function carefully. Regs address should the firest of data, 
+  * to avoid copy when writing datas.
+  */
+static int ft5x06_set_regs(struct i2c_client *client, u8 addr,
+    u8 *data, int len)
+{
+    struct i2c_msg msg[1];
+    int err = 0;
+
+    msg[0].addr = client->addr;
+    msg[0].flags = 0;
+    msg[0].buf = data;
+    msg[0].len = len;
+
+    err = i2c_transfer(client->adapter, msg, 1);
+    if ( 1 != err ) {
+        FT5X06_WARNNING("I2C write failed(multi)");
+    }
+
+    return ( ( 1 != err )?-EFAULT:0);
+}
+
+
+FTS_BOOL i2c_write_interface(struct i2c_client *client,FTS_BYTE bt_ctpm_addr, FTS_BYTE* pbt_buf, FTS_DWRD dw_lenth)
+{
+    int ret;
+    ret=i2c_master_send(client, pbt_buf, dw_lenth);
+    if(ret<=0)
+    {
+        printk("[FTS]i2c_write_interface error line = %d, ret = %d\n", __LINE__, ret);
+        return FTS_FALSE;
+    }
+
+    return FTS_TRUE;
+}
+
+FTS_BOOL i2c_read_interface(struct i2c_client *client,FTS_BYTE bt_ctpm_addr, FTS_BYTE* pbt_buf, FTS_DWRD dw_lenth)
+{
+    int ret;
+    
+    ret=i2c_master_recv(client, pbt_buf, dw_lenth);
+
+    if(ret<=0)
+    {
+        printk("[FTS]i2c_read_interface error\n");
+        return FTS_FALSE;
+    }
+  
+    return FTS_TRUE;
+}
+
+FTS_BOOL byte_write(struct i2c_client *client,FTS_BYTE* pbt_buf, FTS_DWRD dw_len)
+{
+    
+    return i2c_write_interface(client,I2C_CTPM_ADDRESS, pbt_buf, dw_len);
+}
+
+FTS_BOOL byte_read(struct i2c_client *client,FTS_BYTE* pbt_buf, FTS_BYTE bt_len)
+{
+    return i2c_read_interface(client,I2C_CTPM_ADDRESS, pbt_buf, bt_len);
+}
+
+FTS_BOOL cmd_write(struct i2c_client *client,FTS_BYTE btcmd,FTS_BYTE btPara1,FTS_BYTE btPara2,FTS_BYTE btPara3,FTS_BYTE num)
+{
+    FTS_BYTE write_cmd[4] = {0};
+
+    write_cmd[0] = btcmd;
+    write_cmd[1] = btPara1;
+    write_cmd[2] = btPara2;
+    write_cmd[3] = btPara3;
+    return i2c_write_interface(client,I2C_CTPM_ADDRESS, write_cmd, num);
+}
+
+#if FT5X0X_DOWNLOAD_FIRM
+/*down_load fw code add by tuhm*/
+#define	MACRO_STRING(MACRO) #MACRO
+#define FT_APP_I(INAME) MACRO_STRING(INAME) 
+static unsigned char CTPM_FW[]=
+{
+    #include FT_APP_I(FIRM_I_FILE_NAME)
+};
+
+static unsigned char ft5x0x_read_fw_ver(struct i2c_client *client)
+{
+	unsigned char ver;
+	ft5x06_get_reg(client, FT5X0X_REG_FIRMID, &ver);
+	return(ver);
+}
+
+unsigned char fts_ctpm_get_i_file_ver(void)
+{
+    unsigned int ui_sz;
+    ui_sz = sizeof(CTPM_FW);
+    if (ui_sz > 2)
+    {
+        return CTPM_FW[ui_sz - 2];
+    }
+    else
+    {
+        //TBD, error handling?
+        return 0xff; //default value
+    }
+}
+
+static int ft5x0x_write_reg(struct i2c_client *client,u8 addr, u8 para)
+{
+    u8 buf[3];
+    int ret = -1;
+
+    buf[0] = addr;
+    buf[1] = para;
+    ret = ft5x06_set_regs(client,0,buf, 2);
+    if (ret < 0) {
+        pr_err("write reg failed! %#x ret: %d", buf[0], ret);
+        return -1;
+    }
+    
+    return 0;
+}
+
+
+void delay_qt_ms(unsigned long  w_ms)
+{
+    unsigned long i;
+    unsigned long j;
+
+    for (i = 0; i < w_ms; i++)
+    {
+        for (j = 0; j < 1000; j++)
+        {
+            udelay(1);
+        }
+    }
+}
+
+int fts_ctpm_auto_clb(struct i2c_client *client)
+{
+    unsigned char uc_temp;
+    unsigned char i ;
+
+    printk("[FTS] start auto CLB.\n");
+    msleep(200);
+    ft5x0x_write_reg(client,0, 0x40);  
+    delay_qt_ms(100);   //make sure already enter factory mode
+    ft5x0x_write_reg(client,2, 0x4);  //write command to start calibration
+    delay_qt_ms(300);
+    for(i=0;i<100;i++)
+    {
+        ft5x06_get_reg(client,0,&uc_temp);
+        if ( ((uc_temp&0x70)>>4) == 0x0)  //return to normal mode, calibration finish
+        {
+            break;
+        }
+        delay_qt_ms(200);
+        printk("[FTS] waiting calibration %d\n",i);
+        
+    }
+    printk("[FTS] calibration OK.\n");
+    
+    msleep(300);
+    ft5x0x_write_reg(client,0, 0x40);  //goto factory mode
+    delay_qt_ms(100);   //make sure already enter factory mode
+    ft5x0x_write_reg(client,2, 0x5);  //store CLB result
+    delay_qt_ms(300);
+    ft5x0x_write_reg(client,0, 0x0); //return to normal mode 
+    msleep(300);
+    printk("[FTS] store CLB result OK.\n");
+    return 0;
+}
+
+#define    FTS_PACKET_LENGTH        64//128
+
+
+E_UPGRADE_ERR_TYPE  fts_ctpm_fw_upgrade(struct i2c_client *client,FTS_BYTE* pbt_buf, FTS_DWRD dw_lenth)
+{
+    FTS_BYTE reg_val[2] = {0};
+    FTS_DWRD i = 0;
+
+    FTS_DWRD  packet_number;
+    FTS_DWRD  j;
+    FTS_DWRD  temp;
+    FTS_DWRD  lenght;
+    FTS_BYTE  packet_buf[FTS_PACKET_LENGTH + 6];
+    FTS_BYTE  auc_i2c_write_buf[10];
+    FTS_BYTE bt_ecc;
+    int      i_ret;
+
+    /*********Step 1:Reset  CTPM *****/
+    /*write 0xaa to register 0xfc*/
+    ft5x0x_write_reg(client,0xfc,0xaa);
+    delay_qt_ms(50);
+     /*write 0x55 to register 0xfc*/
+    ft5x0x_write_reg(client,0xfc,0x55);
+    printk("[FTS] Step 1: Reset CTPM test\n");
+   
+    delay_qt_ms(30);   
+
+
+    /*********Step 2:Enter upgrade mode *****/
+    auc_i2c_write_buf[0] = 0x55;
+    auc_i2c_write_buf[1] = 0xaa;
+    do
+    {
+        i ++;
+        i_ret = ft5x06_set_regs(client,0,auc_i2c_write_buf, 2);
+        delay_qt_ms(5);
+    }while(i_ret <= 0 && i < 5 );
+
+    /*********Step 3:check READ-ID***********************/        
+    cmd_write(client,0x90,0x00,0x00,0x00,4);
+    byte_read(client,reg_val,2);
+    printk("config use upgrad id2=0x%x\n",UPGRADE_ID2);
+    if (reg_val[0] == 0x79 && reg_val[1] == UPGRADE_ID2)
+    {
+        printk("[FTS] Step 3: CTPM ID,ID1 = 0x%x,ID2 = 0x%x\n",reg_val[0],reg_val[1]);
+    }
+    else
+    {
+        printk("[FTS] Step 3: CTPM ID,ID1 = 0x%x,ID2 = 0x%x\n",reg_val[0],reg_val[1]);
+        printk("[FTS] ERR_READID");
+        
+        return ERR_READID;
+        //i_is_new_protocol = 1;
+    }
+
+    cmd_write(client,0xcd,0x0,0x00,0x00,1);
+    byte_read(client,reg_val,1);
+    printk("[FTS] bootloader version = 0x%x\n", reg_val[0]);
+
+     /*********Step 4:erase app and panel paramenter area ********************/
+    cmd_write(client,0x61,0x00,0x00,0x00,1);  //erase app area
+    delay_qt_ms(1500); 
+    cmd_write(client,0x63,0x00,0x00,0x00,1);  //erase panel parameter area
+    delay_qt_ms(100);
+    printk("[FTS] Step 4: erase. \n");
+
+    /*********Step 5:write firmware(FW) to ctpm flash*********/
+    bt_ecc = 0;
+    printk("[FTS] Step 5: start upgrade. \n");
+    dw_lenth = dw_lenth - 8;
+    packet_number = (dw_lenth) / FTS_PACKET_LENGTH;
+    packet_buf[0] = 0xbf;
+    packet_buf[1] = 0x00;
+    for (j=0;j<packet_number;j++)
+    {
+        temp = j * FTS_PACKET_LENGTH;
+        packet_buf[2] = (FTS_BYTE)(temp>>8);
+        packet_buf[3] = (FTS_BYTE)temp;
+        lenght = FTS_PACKET_LENGTH;
+        packet_buf[4] = (FTS_BYTE)(lenght>>8);
+        packet_buf[5] = (FTS_BYTE)lenght;
+
+        for (i=0;i<FTS_PACKET_LENGTH;i++)
+        {
+            packet_buf[6+i] = pbt_buf[j*FTS_PACKET_LENGTH + i]; 
+            bt_ecc ^= packet_buf[6+i];
+        }
+        
+        byte_write(client,&packet_buf[0],FTS_PACKET_LENGTH + 6);
+        delay_qt_ms(FTS_PACKET_LENGTH/6 + 1);
+        if ((j * FTS_PACKET_LENGTH % 1024) == 0)
+        {
+              printk("[FTS] upgrade the 0x%x th byte.\n", ((unsigned int)j) * FTS_PACKET_LENGTH);
+        }
+    }
+
+    if ((dw_lenth) % FTS_PACKET_LENGTH > 0)
+    {
+        temp = packet_number * FTS_PACKET_LENGTH;
+        packet_buf[2] = (FTS_BYTE)(temp>>8);
+        packet_buf[3] = (FTS_BYTE)temp;
+
+        temp = (dw_lenth) % FTS_PACKET_LENGTH;
+        packet_buf[4] = (FTS_BYTE)(temp>>8);
+        packet_buf[5] = (FTS_BYTE)temp;
+
+        for (i=0;i<temp;i++)
+        {
+            packet_buf[6+i] = pbt_buf[ packet_number*FTS_PACKET_LENGTH + i]; 
+            bt_ecc ^= packet_buf[6+i];
+        }
+
+        byte_write(client,&packet_buf[0],temp+6);    
+        delay_qt_ms(20);
+    }
+
+    //send the last six byte
+    for (i = 0; i<6; i++)
+    {
+        temp = 0x6ffa + i;
+        packet_buf[2] = (FTS_BYTE)(temp>>8);
+        packet_buf[3] = (FTS_BYTE)temp;
+        temp =1;
+        packet_buf[4] = (FTS_BYTE)(temp>>8);
+        packet_buf[5] = (FTS_BYTE)temp;
+        packet_buf[6] = pbt_buf[ dw_lenth + i]; 
+        bt_ecc ^= packet_buf[6];
+
+        byte_write(client,&packet_buf[0],7);  
+        delay_qt_ms(20);
+    }
+
+    /*********Step 6: read out checksum***********************/
+    /*send the opration head*/
+    cmd_write(client,0xcc,0x00,0x00,0x00,1);
+    byte_read(client,reg_val,1);
+    printk("[FTS] Step 6:  ecc read 0x%x, new firmware 0x%x. \n", reg_val[0], bt_ecc);
+    if(reg_val[0] != bt_ecc)
+    {
+        printk("[FTS] ERR_ECC");
+
+        return ERR_ECC;
+    }
+
+    /*********Step 7: reset the new FW***********************/
+    cmd_write(client,0x07,0x00,0x00,0x00,1);
+
+    msleep(300);  //make sure CTP startup normally
+        printk("[FTS] Step over");
+
+    return ERR_OK;
+}
+
+
+int fts_ctpm_fw_upgrade_with_i_file(struct i2c_client *client)
+{
+   FTS_BYTE*     pbt_buf = FTS_NULL;
+   int i_ret;
+    
+    //=========FW upgrade========================*/
+   pbt_buf = CTPM_FW;
+   /*call the upgrade function*/
+   i_ret =  fts_ctpm_fw_upgrade(client,pbt_buf,sizeof(CTPM_FW));
+   if (i_ret != 0)
+   {
+       printk("[FTS] upgrade failed i_ret = %d.\n", i_ret);
+       //error handling ...
+       //TBD
+   }
+   else
+   {
+       printk("[FTS] upgrade successfully.\n");
+       fts_ctpm_auto_clb(client);  //start auto CLB
+       fts_ctpm_auto_clb(client);  //start auto CLB
+   }
+
+   return i_ret;
+}
+
+
+
+int fts_ctpm_auto_upg(struct i2c_client *client)
+{
+    unsigned char uc_host_fm_ver;
+    unsigned char uc_tp_fm_ver;
+    int           i_ret;
+
+    uc_tp_fm_ver = ft5x0x_read_fw_ver(client);
+    //printk("***uc_tp_fm_ver=%x\n",uc_tp_fm_ver);
+    //uc_tp_fm_ver -=1;
+    
+    uc_host_fm_ver = fts_ctpm_get_i_file_ver();
+	
+    printk("[FTS]uc_tp_fm_ver=%x uc_host_fm_ver=%x\n",uc_tp_fm_ver,uc_host_fm_ver);
+
+    if ( uc_tp_fm_ver == 0xa6  ||   //the firmware in touch panel maybe corrupted
+         uc_tp_fm_ver < uc_host_fm_ver //the firmware in host flash is new, need upgrade
+        )
+
+    {
+        msleep(100);
+        printk("[FTS] uc_tp_fm_ver = 0x%x, uc_host_fm_ver = 0x%x\n",
+            uc_tp_fm_ver, uc_host_fm_ver);
+        i_ret = fts_ctpm_fw_upgrade_with_i_file(client);    
+        if (i_ret == 0)
+        {
+            msleep(300);
+            uc_host_fm_ver = fts_ctpm_get_i_file_ver();
+            printk("[FTS] upgrade to new version 0x%x\n", uc_host_fm_ver);
+        }
+        else
+        {
+            printk("[FTS] upgrade failed ret=%d.\n", i_ret);
+        }
+    }
+
+    return 0;
+}
+
+#endif
+
+
+
+/**/
+
+
+
+/*
+  *  device attributes. Commnication between kernel & user space
+  *  Informations exported:
+  *    1. work mode
+  *    2. ft5x06 device information
+  *    3. debug information switch
+  *    4. Scan rate.
+  */
+static ssize_t mode_show(struct device *dev, 
+        struct device_attribute *attr,char *buf)
+{
+    struct ft5x06_device *ftdevice = (struct ft5x06_device *)dev_get_drvdata(dev);
+    int ret = 0, count = 0;
+    u8 mode;
+
+    ret = ft5x06_get_reg(ftdevice->client, 0x0, &mode);
+
+    count = sprintf(buf, "Current mode is 0x%x\n", mode);
+    
+    count += sprintf(buf+count, "0: operation, 1: system, 4: test\n");
+    
+    return count;
+}
+
+static ssize_t mode_store(struct device *dev, 
+        struct device_attribute *attr, const char *buf, size_t count)
+{
+    int ret = 0;
+    int data = -1;
+    u8 mode, mode_t;
+    
+    struct ft5x06_device *ftdevice = (struct ft5x06_device *)dev_get_drvdata(dev);
+
+    ret = sscanf(buf, "%d", &data);
+    mode = data & 0xff;
+    switch( mode ) {
+        case 0:
+        case 1:
+        case 4:
+            mode_t = mode << 4;
+            ft5x06_set_reg(ftdevice->client, 0x0, &mode_t);
+            break;
+        default:
+            FT5X06_WARNNING("Invalid mode");
+            break;
+    }
+    return count;
+}
+
+static ssize_t debug_show(struct device *dev, 
+        struct device_attribute *attr,char *buf)
+{
+    int cnt;
+    
+    cnt = sprintf(buf, "%d\n(Note: 1: open, 0:close)\n", debug_switch);
+    return cnt;
+}
+
+static ssize_t debug_store(struct device *dev, 
+        struct device_attribute *attr, const char *buf, size_t count)
+{
+    int cnt, tmp;
+    cnt = sscanf(buf, "%d", &tmp);
+    switch(tmp) {
+        case 0:
+        case 1:
+            debug_switch = tmp;
+            break;
+        default:
+            printk("invalid input\n");
+            break;
+    }
+    return count;
+}   
+
+static ssize_t info_show(struct device *dev, 
+        struct device_attribute *attr,char *buf)
+{
+    struct ft5x06_device *ftdevice = (struct ft5x06_device *)dev_get_drvdata(dev);
+    u8 firm_version, vender_id;
+    int ret;
+
+    ret = ft5x06_get_reg(ftdevice->client, OP_IDG_FIRMID, &firm_version);
+    if ( ret ) {
+        FT5X06_WARNNING("Get firmware id failed");
+        goto err;
+    }
+
+    ret = ft5x06_get_reg(ftdevice->client, OP_IDG_FT5201ID, &vender_id);
+    if ( ret ) {
+        FT5X06_WARNNING("get ft5201 id failed");
+        goto err;
+    }
+
+    ret = sprintf(buf, "firm-id: %d\t5201id: %d\n", (int)firm_version, (int)vender_id);
+    return ret;
+
+err:    
+    return 0;    
+}
+
+static ssize_t info_store(struct device *dev, 
+        struct device_attribute *attr, const char *buf, size_t count)
+{
+    return count;
+}
+
+static ssize_t rate_show(struct device *dev, 
+        struct device_attribute *attr,char *buf)
+{
+    return 0;
+}
+
+static ssize_t rate_store(struct device *dev, 
+        struct device_attribute *attr, const char *buf, size_t count)
+{    
+    
+    return count;
+}
+
+static ssize_t reset_show(struct device *dev, 
+        struct device_attribute *attr,char *buf)
+{
+    return sprintf(buf, "1: reset\n");
+}
+
+static ssize_t reset_store(struct device *dev, 
+        struct device_attribute *attr, const char *buf, size_t count)
+{
+    int data;
+    struct ft5x06_device *ftdevice = (struct ft5x06_device *)dev_get_drvdata(dev);
+    
+    sscanf(buf, "%d", &data);
+    if ( data == 1 ) {
+        ft5x06_reset(ftdevice);
+    }
+    
+    return count;
+}
+
+static ssize_t str_show(struct device *dev, 
+        struct device_attribute *attr,char *buf)
+{
+    struct ft5x06_device *ftdevice = (struct ft5x06_device *)dev_get_drvdata(dev);
+    u8 power = FT5X06_HIBERNATE_MODE;
+    int ret;
+
+    ret = ft5x06_set_reg(ftdevice->client, OP_IDG_PMODE, &power);
+    if ( ret ) {
+        FT5X06_DEBUG("Set power mode failed");
+    }
+
+    return 0;
+}
+
+static ssize_t str_store(struct device *dev, 
+        struct device_attribute *attr, const char *buf, size_t count)
+{
+    struct ft5x06_device *ftdevice = (struct ft5x06_device *)dev_get_drvdata(dev);
+    u8 power = FT5X06_ACTIVE_MODE;
+    int ret;
+
+    ret = ft5x06_set_reg(ftdevice->client, OP_IDG_PMODE, &power);
+    if ( ret ) {
+        FT5X06_DEBUG("Set power mode failed");
+        ft5x06_reset(ftdevice);
+    }
+
+    return count;
+}
+
+static ssize_t reset_check_show(struct device *dev, 
+        struct device_attribute *attr,char *buf)
+{
+    return 0;
+}
+
+static ssize_t reset_check_store(struct device *dev, 
+        struct device_attribute *attr, const char *buf, size_t count)
+{
+    struct ft5x06_device *ftdevice = (struct ft5x06_device *)dev_get_drvdata(dev);
+    int ret;
+    u8 err_code = 0;
+
+    ret = ft5x06_get_reg(ftdevice->client, OP_IDG_PMODE, &err_code);
+    if ( ret || (err_code == 0x03 || err_code == 0x05 || err_code == 0x1a )) {
+        ft5x06_reset(ftdevice);
+    }
+
+    return count;
+}
+
+static ssize_t reset_nocheck_show(struct device *dev, 
+        struct device_attribute *attr, char *buf)
+{
+    return 0;
+}
+
+static ssize_t reset_nocheck_store(struct device *dev, 
+        struct device_attribute *attr, const char *buf, size_t count)
+{
+    struct ft5x06_device *ftdevice = (struct ft5x06_device *)dev_get_drvdata(dev);
+    ft5x06_reset(ftdevice);
+
+    return count;
+}
+
+static int reg2read = 0;
+static ssize_t set_reg_show(struct device *dev, struct device_attribute *attr,
+		char *buf)
+{
+    struct ft5x06_device *pdev = (struct ft5x06_device *)dev_get_drvdata(dev);
+    u8 data;
+    int err = 0, count = 0;
+
+    err = ft5x06_get_reg(pdev->client, reg2read & 0xff, &data);
+    if ( err ) {
+        count = sprintf(buf, "Dump regs failed\n");
+        goto out;
+    }
+
+    count = sprintf(buf, "reg-%d: 0x%x\n", reg2read, data);
+    
+out:    
+    return count;
+}
+
+static ssize_t set_reg_store(struct device *dev, struct device_attribute *attr,
+		 const char *buf, size_t count)
+{
+    int cnt;
+    int value;
+    u8 data;
+    struct ft5x06_device *pdev = (struct ft5x06_device *)dev_get_drvdata(dev);    
+
+    cnt = sscanf(buf, "%d:0x%x", &reg2read, &value);
+    if ( cnt <= 0 ) {
+        reg2read = 0x0;
+        goto out;
+    }
+
+    data = value & 0xff;
+    ft5x06_set_reg(pdev->client, reg2read & 0xff, &data);
+
+out:    
+    return count;
+}
+
+static int regs_addr = 0x0;
+static int reg_count = 10;
+static ssize_t dump_regs_show(struct device *dev, struct device_attribute *attr,
+		char *buf)
+{
+    struct ft5x06_device *pdev = (struct ft5x06_device *)dev_get_drvdata(dev);
+    u8 data[reg_count];
+    int err = 0, count = 0, i;
+
+    err = ft5x06_get_regs(pdev->client, regs_addr & 0xff, data, reg_count);
+    if ( err ) {
+        count = sprintf(buf, "Dump regs failed\n");
+        goto out;
+    }
+
+    for( i = 0; i < reg_count; i++) {
+        count += sprintf(buf + count, "reg-%d: 0x%x\n", regs_addr + i, data[i]);
+    }
+    
+out:    
+    return count;
+}
+
+static ssize_t dump_regs_store(struct device *dev, struct device_attribute *attr,
+		 const char *buf, size_t count)
+{
+    int cnt;
+
+    cnt = sscanf(buf, "%d:%d", &regs_addr, &reg_count);
+    if ( cnt <= 0 ) {
+        regs_addr = 0x0;
+        reg_count = 10;
+    }
+    
+    return count;
+}
+
+static struct device_attribute ft5x06_attr[] = {
+    __ATTR(mode, S_IRUSR | S_IWUSR, mode_show, mode_store),
+    __ATTR(debug, S_IRUSR | S_IWUSR, debug_show, debug_store),
+    __ATTR(information, S_IRUSR | S_IWUSR, info_show, info_store),
+    __ATTR(scan_rate, S_IRUSR | S_IWUSR, rate_show, rate_store),
+    __ATTR(reset, S_IRUSR | S_IWUSR, reset_show, reset_store),
+    __ATTR(STR, S_IRUSR | S_IWUSR, str_show, str_store),
+    __ATTR(rest_check, S_IRUSR | S_IWUSR, reset_check_show, reset_check_store),
+    __ATTR(rest_nocheck, S_IRUSR | S_IWUSR, reset_nocheck_show, reset_nocheck_store),
+    __ATTR( set_reg, S_IRUSR | S_IWUSR, set_reg_show, set_reg_store),
+    __ATTR( dump_regs,  S_IRUSR | S_IWUSR,  dump_regs_show, dump_regs_store),
+};
+
+static inline int ft5x06_valid_cnt(struct ft5x06_data *data)
+{
+    u8 count = 0;
+
+    if ( !data )
+        goto out;
+
+    count = data->rawData[0] & 0xf;
+out:
+    return (( count > 0 && count <= FT5X06_MAX_POINT )?count:0);
+}
+
+#ifdef HAS_VIRTUAL_KEY
+static inline int position2key(unsigned int x, 
+    unsigned int y)
+{
+    int key_id = -1;
+#if defined (LOCAL_GL5202_EVB)
+    if ( x > 800 ) {
+            if ( y==79 ) {
+                    key_id = KEY_ID_BACK;
+					FT5X06_DEBUG("KEY_ID_HOME");
+            } else if ( y==47 ) {
+                    key_id = KEY_ID_HOME;
+					FT5X06_DEBUG("KEY_ID_MENU");
+            } else if ( y==0 ) {
+                    key_id = KEY_ID_MENU; 
+					FT5X06_DEBUG("KEY_ID_BACK");
+            } 
+    }
+#else
+    if ( x > 1024 ) {
+            if ( y < 540 && y > 420 ) {
+                    key_id = KEY_ID_HOME;
+					FT5X06_DEBUG("KEY_ID_HOME");
+            } else if ( y < 360 && y > 240 ) {
+                    key_id = KEY_ID_MENU;
+					FT5X06_DEBUG("KEY_ID_MENU");
+            } else if ( y < 170 && y > 50 ) {
+                    key_id = KEY_ID_BACK; 
+					FT5X06_DEBUG("KEY_ID_BACK");
+            } 
+    }
+#endif
+    return key_id;
+}
+
+static inline int id2code(int id)
+{
+    int i;
+    for( i = 0; i < KEY_ID_MAX; i++) {
+        if ( key_map[i].id == id )
+            return key_map[i].key_code;
+    }
+
+    return -EEXIST;
+}
+
+static int report_keys_event( struct input_dev *input, unsigned long map, int type)
+{
+    int i, cnt = 0;
+
+    if ( map ) {
+        for ( i = 0; i < KEY_ID_MAX; i++ ) {
+            if ( (map >> i) & 0x1 ) {
+                FT5X06_DEBUG("Key: %d\n", id2code(i));
+                input_report_key(input, id2code(i), type);
+                cnt++;
+            }
+        }
+    }
+
+    return !cnt;
+}
+
+static void ft5x06_report_keys(struct ft5x06_device *ftdev)
+{
+    struct ft5x06_keys * keys = &(ftdev->ftdata->keys);
+    int ret;
+
+	FT5X06_DEBUG("report keys..");
+    ret = report_keys_event( ftdev->key_input, keys->keymap, 1);
+    ret = report_keys_event( ftdev->key_input, (keys->keymap^keys->oldmap) & (keys->oldmap), 0);
+    if ( !ret ) {
+        input_sync(ftdev->key_input);
+
+    }
+    keys->oldmap = keys->keymap;
+    keys->keymap = 0;
+}
+
+static void ft5x06_report_keys_release(struct ft5x06_device *ftdev)
+{
+    struct ft5x06_keys *keys = &(ftdev->ftdata->keys);
+    int ret = 0;
+
+    report_keys_event( ftdev->key_input, keys->oldmap, 0);
+    input_sync(ftdev->key_input);
+}
+#else
+static inline int id2code(int id)
+{
+    return -EEXIST;
+}
+
+#ifndef PROTOCOL_B
+static int report_keys_event( struct input_dev *input, unsigned long map, int type)
+{
+    return 0;
+}
+
+static void ft5x06_report_keys(struct ft5x06_device *ftdev)
+{
+}
+
+static void ft5x06_report_keys_release(struct ft5x06_device *ftdev)
+{
+}
+#endif
+
+static inline int position2key(unsigned int x, 
+    unsigned int y)
+{
+    return -1;
+}
+#endif
+
+
+static int ft5x06_reset( struct ft5x06_device *ftdev)
+{
+	int err = 0;
+
+	regulator_deinit(tp_regulator);
+	tp_regulator = regulator_init(FT5X06_POWER_ID, 
+		FT5X06_POWER_MIN_VOL, FT5X06_POWER_MAX_VOL);
+	if ( !tp_regulator ) {
+		FT5X06_WARNNING("Ft5x06 init power failed");
+		err = -EINVAL;
+		goto out;
+	}
+#if 0	
+    gpio_set_value_cansleep(gpio_reset, 0);
+	msleep(10);
+	gpio_set_value_cansleep(gpio_reset, 1);
+    msleep(30);
+#endif	
+out:
+	
+    return err;
+}
+
+static int ft5x06_hw_init(void)
+{
+	int err = 0;
+	printlf();
+#if 1	
+    err = gpio_request(gpio_reset, FT5X06_NAME);
+    if ( err ) {
+		err = -EINVAL;
+        goto out;
+	}
+
+    err = gpio_direction_output(gpio_reset, 1);
+    if ( err ) {
+		err = -EINVAL;
+        goto out;
+	}
+#endif 
+
+#ifdef GPIO_TO_IRQ
+    err = gpio_request(FT5X06_IRQ_GPIO, FT5x06_IRQ_NAME);
+    if ( err ) {
+		err = -EINVAL;
+        goto out;
+	}
+
+    err = gpio_direction_input(FT5X06_IRQ_GPIO);
+    if ( err ) {
+		err = -EINVAL;
+        goto out;
+	}
+#endif
+	tp_regulator = regulator_init(FT5X06_POWER_ID, 
+		FT5X06_POWER_MIN_VOL, FT5X06_POWER_MAX_VOL);
+	if ( !tp_regulator ) {
+		FT5X06_WARNNING("Ft5x06 init power failed");
+		err = -EINVAL;
+		goto out;
+	}
+#if 1	
+    gpio_set_value_cansleep(gpio_reset, 0);
+	msleep(10);
+	gpio_set_value_cansleep(gpio_reset, 1);
+    msleep(300);
+#endif 
+out: 
+ 
+    return err;
+}
+
+static void ft5x06_hw_deint(void)
+{
+   
+	if ( tp_regulator )
+		regulator_deinit(tp_regulator);
+#if 1
+	gpio_free(gpio_reset);
+#endif
+
+#ifdef GPIO_TO_IRQ
+	gpio_free(FT5X06_IRQ_GPIO);
+#endif
+}
+
+static int ft5x06_read_points( struct ft5x06_device *ftdev, 
+    struct ft5x06_data *data)
+{
+    int err = 0, i = 0, cnt = 0, number = 0, pcnt = 0;
+    unsigned int x, y;
+    enum FT_EVENT_TYPE type;
+    
+#ifdef HAS_VIRTUAL_KEY
+    int kcnt = 0
+#endif
+    
+    if ( !ftdev || !data )
+        return -EFAULT;
+
+    err = ft5x06_get_regs(ftdev->client, FIRST_READ_ADDR, data->rawData, 
+        FIRST_READ_LEN );
+    if ( err ) {
+        printk(KERN_ERR"Read points data failed");
+        goto out;
+    }
+
+	number = ft5x06_valid_cnt(data);
+    if ( number > 1 ) {
+        err = ft5x06_get_regs(ftdev->client, SECOND_READ_ADDR, 
+            (data->rawData + FIRST_READ_LEN), POINT_DATA_LEN *(number-1));
+        if ( err ) {
+            printk(KERN_ERR"Read the 2nd mass data failed");
+            goto out;
+        }
+    }
+    //printk(KERN_ERR"number:%d\n", number);
+    if ( number ) {
+        for ( i = 1, cnt = 0; cnt < number; i += POINT_DATA_LEN, cnt++ ) {
+#if 0
+#ifdef CONFIG_GL5201_AT716
+					int tmp;
+#endif
+#endif            
+            type = VALUE_TYPE(data->rawData[i]);
+            if ( NONE_EVENT == type )
+                continue;
+
+            x = VALUE_XY( data->rawData[i + FT5X06_X_OFFSET], 
+                                        data->rawData[i+ FT5X06_X_OFFSET + 1]);
+            y = VALUE_XY( data->rawData[i + FT5X06_Y_OFFSET], 
+                                        data->rawData[i + FT5X06_Y_OFFSET + 1]);
+#if 0
+#ifdef CONFIG_GL5201_AT716           
+								tmp = x;
+								x = y;
+								//y= 480 - tmp;
+								y = tmp;
+#endif
+#endif
+    //printk("raw:x:%d, y:%d\n", x, y);
+#if CFG_FT_USE_CONFIG
+            if ( x <= cfg_dts.xMax && y <= cfg_dts.yMax ) {
+                if (cfg_dts.XYSwap == 1)
+                {
+                    int tmp;
+                    tmp=x;
+                    x=y;
+                    y=tmp;
+                }
+                
+                if(cfg_dts.xRevert == 1)
+                {   
+                    x = cfg_dts.xMax - x;
+                }
+                
+                if(cfg_dts.yRevert == 1)
+                {
+                    y = cfg_dts.yMax - y;
+                }
+                
+                if(cfg_dts.rotate == 90){//anticlockwise 90 angle
+                    int tmp;
+                    tmp = x;
+                    x = y;
+                    y = cfg_dts.xMax - tmp;
+                }else if(cfg_dts.rotate == 180){//anticlockwise 180 angle
+        	        x = cfg_dts.xMax - x;
+		            y = cfg_dts.yMax - y;
+                }else if(cfg_dts.rotate == 270){//anticlockwise 270 angle
+        	        int tmp;
+		            tmp = x;
+		            x = cfg_dts.yMax-y;
+		            y = tmp;
+                } 
+
+            }
+#endif
+            //printk("end:x:%d, y:%d\n", x, y);
+
+            data->points[pcnt].x = x;
+            data->points[pcnt].y = y; 
+            data->points[pcnt].type = type;
+            data->points[pcnt].id = VALUE_ID( data->rawData[i + FT5X06_Y_OFFSET]);
+            data->points[pcnt].weight = data->rawData[i+FT5X06_WEIGHT_OFFSET];
+            pcnt++;
+            continue;
+
+
+#ifdef HAS_VIRTUAL_KEY
+#if CFG_FT_USE_CONFIG
+            if ( x >= cfg_dts.xMax ) {
+#else
+            //if ( x >= FT5X06_X_MAX ) {
+#endif
+                int id;
+                id = position2key(x,y);
+                if ( id >= 0) {
+                    kcnt++;
+                    set_bit(id, &data->keys.keymap);
+                }
+            }
+#endif            
+        }
+		data->lastValidCnt = data->validPointCnt ? data->validPointCnt : pcnt;
+        data->validPointCnt = pcnt;
+#ifdef HAS_VIRTUAL_KEY
+		data->lastValidKeyCnt = data->validKeyCnt ? data->validKeyCnt : kcnt;
+		data->validKeyCnt = kcnt;
+#endif        
+    } else {
+		data->validPointCnt = 0;
+#ifdef HAS_VIRTUAL_KEY
+		data->validKeyCnt = 0;
+#endif
+	}
+    
+out:
+
+    return err;
+}
+
+#ifndef PROTOCOL_B
+static int ft5x06_report_event(struct ft5x06_device *ftdev, struct ft5x06_point*pos)
+{
+    int err = 0;
+    struct input_dev *input = ftdev->input_dev;
+
+    if ( pos ) {
+        switch( pos->type ) {
+            case PRESS_EVENT:
+            case CONTACT_EVENT:
+                FT5X06_DEBUG("Press event:");
+                input_report_abs( input, ABS_MT_TOUCH_MAJOR, 100);
+                input_report_abs( input, ABS_MT_PRESSURE, 100);
+                break;
+            case RELEASE_EVENT:
+                FT5X06_DEBUG("Release event");
+                input_report_abs( input, ABS_MT_PRESSURE, 0);
+                input_report_abs( input, ABS_MT_TOUCH_MAJOR, 0);
+                input_report_abs( input, ABS_MT_WIDTH_MAJOR, 0);
+                break;
+            default:
+                FT5X06_DEBUG("Invalid event");
+                return 0;
+        }
+//        printk("(x,y):(%u, %u)\n", pos->x, pos->y);
+        input_report_abs( input, ABS_MT_POSITION_X, pos->x);
+        input_report_abs( input, ABS_MT_POSITION_Y, pos->y);
+        input_report_abs( input, ABS_MT_TRACKING_ID, pos->id);
+        input_mt_sync(input);
+    }
+
+    return err;
+}
+#endif
+
+#ifdef PROTOCOL_B
+static int ft5x06_report_b(struct ft5x06_device *ftdev)
+{
+    int i = 0;
+    int  ts_press = 0;
+	static int  ts_release = 0;
+    struct ft5x06_data *data = ftdev->ftdata;
+    struct input_dev *input = ftdev->input_dev;
+
+    if( !ftdev || !ftdev->ftdata )
+        return -EFAULT;
+ //   printk("b: validPointCnt is %d\n",data->validPointCnt);
+ //   if ( data->validPointCnt ){
+	    for ( i = 0; i < data->validPointCnt; i++ ) 
+		{
+		 // printk("!!!%d  x %d y %d--type %d\n",data->points[i].id,data->points[i].x,data->points[i].y,data->points[i].type);
+		  //if(data->points[i].type != RELEASE_EVENT){
+		  //  printk("id is  %d\n",data->points[i].id);
+		input_mt_slot(input, data->points[i].id);
+		input_mt_report_slot_state(input, MT_TOOL_FINGER, true);
+	
+		input_report_abs(input, ABS_MT_TOUCH_MAJOR, 1);
+		input_report_abs(input, ABS_MT_POSITION_X, data->points[i].x);
+		input_report_abs(input, ABS_MT_POSITION_Y, data->points[i].y);
+		input_report_abs(input, ABS_MT_PRESSURE,100);
+        //printk("x y %d--%d",current_events[index].x,current_events[index].y);
+        ts_press |= 0x01 << data->points[i].id;
+       // printk("ts_press is %d id is %d\n",ts_press,data->points[i].id );
+		//}
+//		else{
+//		// printk("!!!!!!!!!!!!release %d \n",data->points[i].id);
+//		input_mt_slot(input, data->points[i].id);
+//		input_mt_report_slot_state(input, MT_TOOL_FINGER, false);
+//		    }
+       
+		}
+        ts_release &= ts_release ^ ts_press;
+   // }else{
+   // printk("%x tp_release  %x\n",ts_press,ts_release);
+	for ( i = 0; i < FT5X06_MAX_POINT; i++ ) {
+		if ( ts_release & (0x01<<i) ) {	
+		 //   printk("release %d",i);	
+			input_mt_slot(input,i);
+			input_mt_report_slot_state(input, MT_TOOL_FINGER, false);			
+		    }
+	    }
+    //}
+	ts_release = ts_press;    
+	input_sync(ftdev->input_dev);		
+    return 0;
+}
+#else
+static int ft5x06_report(struct ft5x06_device *ftdev)
+{
+    int i = 0;
+    struct ft5x06_data *data = ftdev->ftdata;
+
+    if( !ftdev || !ftdev->ftdata )
+        return -EFAULT;
+
+#ifdef HAS_VIRTUAL_KEY
+	if ( !data->validPointCnt && !data->validKeyCnt )
+#else 
+    if ( !data->validPointCnt )
+#endif
+    {
+		ft5x06_report_release(ftdev);
+		ft5x06_report_keys_release(ftdev);
+		ft5x06_release_post(ftdev);
+	} else {
+	    for ( i = 0; i < data->validPointCnt; i++ ) {
+	        ft5x06_report_event(ftdev, &data->points[i]);
+	    }
+	    
+	    input_sync(ftdev->input_dev);
+#ifdef HAS_VIRTUAL_KEY
+		ft5x06_report_keys(ftdev);
+		input_sync(ftdev->key_input);
+#endif
+	}
+	
+    return 0;
+}
+#endif
+
+#ifndef PROTOCOL_B
+static void ft5x06_release_post(struct ft5x06_device *ftdev)
+{
+	ftdev->ftdata->lastValidCnt = ftdev->ftdata->validPointCnt = 0;
+#ifdef HAS_VIRTUAL_KEY
+	ftdev->ftdata->lastValidKeyCnt = ftdev->ftdata->validKeyCnt = 0;
+	ftdev->ftdata->keys.keymap = ftdev->ftdata->keys.oldmap = 0;
+#endif    
+}
+
+static int ft5x06_report_release(struct ft5x06_device *ftdev)
+{
+    int i = 0;
+    struct ft5x06_data *data = ftdev->ftdata;
+
+    if ( !ftdev || !ftdev->ftdata )
+        return -EFAULT;
+
+    for ( i = 0; i < data->lastValidCnt; i++ ) {        
+        input_report_key( ftdev->input_dev, BTN_TOUCH, 0);
+        input_report_abs( ftdev->input_dev, ABS_MT_TOUCH_MAJOR, 0);
+        input_report_abs( ftdev->input_dev, ABS_MT_WIDTH_MAJOR, 0);
+        input_report_abs( ftdev->input_dev, ABS_MT_PRESSURE, 0);
+        input_report_abs( ftdev->input_dev, ABS_MT_POSITION_X, data->points[i].x);
+        input_report_abs( ftdev->input_dev, ABS_MT_POSITION_Y, data->points[i].y);
+        input_report_abs( ftdev->input_dev, ABS_MT_TRACKING_ID, data->points[i].id);
+        input_mt_sync(ftdev->input_dev);
+    }
+    
+    input_sync(ftdev->input_dev);
+    return 0;
+}
+#endif
+
+static int ft5x06_init_config(struct i2c_client *client, struct ft5x06_config *ftconfig)
+{
+    int err = 0;
+    u8 buff[4] = {0};
+
+    if ( !client || !ftconfig )
+        return -EINVAL;
+
+    //config: max(x,y)
+    err = ft5x06_get_regs(client, OP_IDG_MAX_XH, buff, 4);
+    if ( err ) {
+        err = -EAGAIN;
+    } else {
+#if CFG_FT_USE_CONFIG
+        ftconfig->max.x = cfg_dts.xMax;
+        ftconfig->max.y = cfg_dts.yMax;
+#else        
+        ftconfig->max.x = FT5X06_X_MAX;
+        ftconfig->max.y = FT5X06_Y_MAX;
+#endif
+        ftconfig->max.weight = (ftconfig->max.x * ftconfig->max.y) >> 1;
+    }
+
+    //config: version & vendor
+    err = ft5x06_get_regs(client, OP_IDG_LIB_VER_H, buff, 3);
+    if ( err ) {
+        err = -EAGAIN;
+    } else {
+        ftconfig->version = (buff[0] << 8 | buff[1]);
+        ftconfig->vendor = buff[2];
+    }
+
+    //config: product
+    err = ft5x06_get_reg(client, OP_IDG_FIRMID, buff);
+    if ( err ) {
+        err = -EAGAIN;
+    } else {
+        ftconfig->product = buff[0];
+    }
+
+    buff[0] = 0x1;
+    err = ft5x06_set_reg(client, OP_IDG_MODE, &buff[0]);
+    if ( err ) {
+        err = -EAGAIN;
+    }
+
+    return err;
+}
+
+static void ft5x06_work(struct work_struct *work)
+{
+    struct ft5x06_device *ftdevice = container_of(work, struct ft5x06_device, work);
+    int ret;
+
+    ret = ft5x06_read_points(ftdevice, ftdevice->ftdata);
+    //enable_irq(ftdevice->irq);/* binzhang(2012/9/13):  */
+//    printk("ret is %d \n",ret);
+    #ifdef PROTOCOL_B
+         ft5x06_report_b(ftdevice);
+    #else
+ 	if ( !ret ){
+
+         ft5x06_report(ftdevice);
+
+    }
+    #endif
+	
+}
+
+static irqreturn_t ft5x06_interrupt( int irq, void *devid)
+{
+    struct ft5x06_device *ftdevice = (struct ft5x06_device *)devid;
+    unsigned long now = jiffies;
+
+    //Discard first interrupt for updating after recover from sleep
+    //printk(KERN_ERR"%s\n", __func__);
+    if ( time_after(now, ftdevice->time_discard) ) 
+        goto out;
+
+    disable_irq_nosync(irq);/* binzhang(2012/9/13):  */
+	if( !work_pending(&ftdevice->work) )
+		queue_work(ftdevice->workqueue, &ftdevice->work);
+	enable_irq(irq);
+out:
+    ftdevice->time_discard = jiffies + TIME_OF_DISCARD;
+    return IRQ_HANDLED;
+}
+
+static inline void disable_power(struct regulator *power)
+{
+        regulator_disable(power);
+}
+
+static inline void regulator_deinit(struct regulator *power)
+{
+    regulator_disable(power);
+    
+    regulator_put(power);
+}
+
+static struct regulator *regulator_init(const char *name, int minvol, int maxvol)
+{
+    struct regulator *power;
+    int ret;
+
+    power = regulator_get(NULL, name);
+    if (IS_ERR(power)) {
+        printlf();
+        return NULL;
+    }
+    //gpower = power;
+    
+    //printlf();
+    if (regulator_set_voltage(power, minvol, maxvol)) {
+        regulator_deinit(power);
+        printlf();
+        return NULL;
+    }
+    ret = regulator_enable(power);
+    return (power);
+}
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+/*
+ * In early suspend, it should set tp mode to idle. 
+ * Then in early resume, wakeup the panel. But here must reset it. But there is no reset-pin in AT711.
+ * So here just stop the work queue, and disable reponse of interrupting.
+ */
+static void ft5x06_early_suspend(struct early_suspend *handler)
+{
+	struct ft5x06_device *ftdev = container_of(handler, struct ft5x06_device, es);
+//    enirq = 0;//tell work,do not enable irq again
+    disable_irq(ftdev->irq);
+    flush_workqueue(ftdev->workqueue);
+	//cancel_work_sync(&ftdev->work);
+	//disable_irq(ftdev->irq);
+	//printlf();
+}
+
+static void ft5x06_early_resume(struct early_suspend *handler)
+{
+//    printlf();
+	struct ft5x06_device *ftdev = container_of(handler, struct ft5x06_device, es);
+    enable_irq(ftdev->irq);
+}
+#endif
+
+#if CFG_FT_USE_CONFIG
+static int tp_of_data_get(void)
+{
+    struct device_node *of_node;
+    enum of_gpio_flags flags;
+    unsigned int scope[2];
+    int ret = -1;
+
+    of_node = of_find_compatible_node(NULL, NULL, "ft5x06");
+    if (of_node==NULL){
+        printk(KERN_ERR"%s,%d,find the gsxX680 dts err!\n",__func__, __LINE__);
+        return -1;
+    }
+
+	/* load tp regulator */
+	if (of_find_property(of_node, "tp_vcc", NULL)) {
+		ret = of_property_read_string(of_node, "tp_vcc", &cfg_dts.regulator);
+		if (ret < 0) {
+			printk("can not read tp_vcc power source\n");
+			cfg_dts.regulator = ctp_power_name;
+		}
+
+		if (of_property_read_u32_array(of_node, "vol_range", scope, 2)) {
+			printk(" failed to get voltage range\n");
+			scope[0] = FT5X06_POWER_MIN_VOL;
+			scope[1] = FT5X06_POWER_MAX_VOL;
+		}
+		cfg_dts.vol_min=scope[0];
+		cfg_dts.vol_max=scope[1];
+	}
+
+	/* load irq number */
+    cfg_dts.sirq = irq_of_parse_and_map(of_node, 0);
+	if (cfg_dts.sirq < 0) {
+        printk("No IRQ resource for tp\n");
+		return -ENODEV;
+	}
+
+	/* load gpio info */
+	if (!of_find_property(of_node, "reset_gpios", NULL)) {
+		printk("<isp>err: no config gpios\n");
+		goto fail;
+	}
+	gpio_reset = of_get_named_gpio_flags(of_node, "reset_gpios", 0, &flags);
+
+	cfg_dts.i2cNum = FT5X06_I2C_ADAPTER;
+    
+	/* load tp i2c addr */
+	ret = of_property_read_u32(of_node, "reg", &cfg_dts.i2cAddr);
+	if (ret) {
+		printk(" failed to get i2c_addr\n");
+		goto fail;
+	}
+	
+	/* load other options */
+	ret = of_property_read_u32(of_node, "x_pixel", &cfg_dts.xMax);
+	if (ret) {
+		printk("failed to get xMax\r\n,set default:1280");
+		cfg_dts.xMax = FT5X06_X_MAX;
+	}
+
+	ret = of_property_read_u32(of_node, "y_pixel", &cfg_dts.yMax);
+	if (ret) {
+		printk("failed to get yMax\r\n,set default:800");
+		cfg_dts.yMax = FT5X06_Y_MAX;
+	}
+
+	ret = of_property_read_u32(of_node, "x_revert_en", &cfg_dts.xRevert);
+	if (ret) {
+		printk("failed to get xRevert\r\n,set default:1280");
+		cfg_dts.xRevert = 0;
+	}
+
+	ret = of_property_read_u32(of_node, "y_revert_en", &cfg_dts.yRevert);
+	if (ret) {
+		printk("failed to get yRevert\r\n,set default:800");
+		cfg_dts.yRevert = 0;
+	}
+
+	ret = of_property_read_u32(of_node, "xy_swap_en", &cfg_dts.XYSwap);
+	if (ret) {
+		printk("failed to get XYSwap, set default:0\r\n");
+		cfg_dts.XYSwap = 0;
+	}
+    
+	ret = of_property_read_u32(of_node, "rotate_degree", &cfg_dts.rotate);
+	if (ret) {
+		printk("failed to get rotate, set default:0\r\n");
+		cfg_dts.rotate = 0;
+	}
+
+	
+	printk("gpio num:%d, reset level:%d, i2c_addr:%02x, irq_number:%d,x_pixel:%d, y_pixel:%d, max_point:%d, rotate:%d, i2cNum:%d\n",
+		gpio_reset,
+		0,
+		cfg_dts.i2cAddr,
+		cfg_dts.sirq,
+		cfg_dts.xMax,
+		cfg_dts.yMax,
+		5,
+		cfg_dts.rotate,
+		cfg_dts.i2cNum);
+    
+        return 0;
+
+fail:
+	return -1;
+    
+}
+
+/********************TP DEBUG************************/
+
+/**************************************************************************/
+static ssize_t tp_rotate_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.rotate);
+}
+/**************************************************************************/
+static ssize_t tp_rotate_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.rotate=data;
+    return count;
+}
+/**************************************************************************/
+static ssize_t tp_xrevert_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.xRevert);
+}
+/**************************************************************************/
+static ssize_t tp_xrevert_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.xRevert=data;
+    return count;
+}
+
+/**************************************************************************/
+static ssize_t tp_yrevert_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.yRevert);
+}
+/**************************************************************************/
+static ssize_t tp_yrevert_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.yRevert=data;
+    return count;
+}
+
+/**************************************************************************/
+static ssize_t tp_xyswap_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.XYSwap);
+}
+/**************************************************************************/
+static ssize_t tp_xyswap_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.XYSwap=data;
+    return count;
+}
+
+static DEVICE_ATTR(tp_rotate, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_rotate_show, tp_rotate_store);
+static DEVICE_ATTR(tp_xrevert, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_xrevert_show, tp_xrevert_store);
+static DEVICE_ATTR(tp_yrevert, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_yrevert_show, tp_yrevert_store);
+static DEVICE_ATTR(tp_xyswap, 	S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_xyswap_show, tp_xyswap_store);
+
+static struct attribute *tp_attributes[] = { 
+    &dev_attr_tp_rotate.attr,
+	 &dev_attr_tp_xrevert.attr,
+	  &dev_attr_tp_yrevert.attr,
+	  &dev_attr_tp_xyswap.attr,
+    NULL
+};
+
+static const struct attribute_group tp_attr_group = {
+    .attrs  = tp_attributes,
+};
+#endif
+
+
+
+
+static int ft5x06_probe(struct i2c_client *client,
+    const struct i2c_device_id *id)
+{
+    struct ft5x06_device *ftdev = NULL;
+    struct input_dev *input = NULL;
+    struct ft5x06_data *ftdata = NULL;
+    struct ft5x06_config *ftconfig = NULL;
+    struct workqueue_struct *wq = NULL;
+    int err = 0;
+#ifdef HAS_VIRTUAL_KEY
+    struct input_dev *key_input = NULL;
+#endif
+
+    err = i2c_check_functionality(client->adapter, I2C_FUNC_SMBUS_BYTE_DATA);
+    if ( !err ) {
+        FT5X06_WARNNING("I2c bus dosen't support");
+        err = -EFAULT;
+        goto i2c_check_failed;
+    }
+
+    ftdev = (struct ft5x06_device *)kzalloc( \
+        sizeof(struct ft5x06_device), GFP_KERNEL);
+    if ( !ftdev ) {
+        FT5X06_WARNNING("Create ft5x06 device failed");
+        err = -ENOMEM;
+        goto create_ft5x06_failed;
+    }
+
+    ftdata = (struct ft5x06_data *)kzalloc( \
+        sizeof(struct ft5x06_data), GFP_KERNEL);
+    if ( !ftdata ) {
+        FT5X06_WARNNING("Create ft5x06 data failed");
+        err = -ENOMEM;
+        goto create_data_failed;
+    }
+
+    ftconfig = (struct ft5x06_config *)kzalloc( \
+        sizeof(struct ft5x06_config), GFP_KERNEL);
+    if ( !ftconfig ) {
+        FT5X06_WARNNING("Create ft5x06 config failed");
+        err = -ENOMEM;
+        goto create_config_failed;
+    }
+    
+    input = input_allocate_device();
+    if ( !input ) {
+        FT5X06_WARNNING("Create input device failed");
+        err = -ENOMEM;
+        goto create_input_failed;
+    }
+
+#ifdef HAS_VIRTUAL_KEY
+    key_input = input_allocate_device();
+    if ( !input ) {
+        FT5X06_WARNNING("Create key input device failed");
+        err = -ENOMEM;
+        goto create_key_input_failed;
+    }
+#endif	
+
+    wq = create_singlethread_workqueue("ft5x06_touch");
+    if ( !wq ) {
+        FT5X06_WARNNING("Create workqueue failed");
+        goto create_workqueue_failed;
+    }
+
+    ftdev->workqueue = wq;
+    ftdev->client = client;
+    ftdev->ftconfig = ftconfig;
+    ftdev->ftdata = ftdata;
+    ftdev->input_dev = input;    
+#ifdef HAS_VIRTUAL_KEY
+    ftdev->key_input = key_input;
+#endif
+
+#if CFG_FT_USE_CONFIG
+    ftdev->irq =cfg_dts.sirq;
+
+	#ifdef GPIO_TO_IRQ
+    ftdev->irq = gpio_to_irq(FT5X06_IRQ_GPIO);
+	#endif
+#else
+    ftdev->irq = FT5X06_IRQ;
+#endif
+    
+    ftdev->time_discard = 0;
+//binzhang :move earlysuspend  after ft5x06_init_config
+
+
+    i2c_set_clientdata(client, ftdev);
+
+    INIT_WORK(&ftdev->work, ft5x06_work);
+    mutex_init(&ftdev->lock);
+
+    err = ft5x06_init_config(ftdev->client, ftdev->ftconfig);
+    if ( err ) {
+        FT5X06_WARNNING("read config failed");
+        goto init_config_failed;
+    }
+#ifdef CONFIG_HAS_EARLYSUSPEND	
+	ftdev->es.level = 50;
+	ftdev->es.resume = ft5x06_early_resume;
+	ftdev->es.suspend = ft5x06_early_suspend;
+	register_early_suspend(&ftdev->es);	
+#endif	
+    input->name = FT5X06_NAME;
+    input->id.bustype = BUS_HOST;
+    input->id.version = ftdev->ftconfig->version;
+    input->id.vendor = ftdev->ftconfig->vendor;
+    input->id.product = ftdev->ftconfig->product;
+    ///////////////
+ 
+    __set_bit(INPUT_PROP_DIRECT,input->propbit);
+	input_mt_init_slots(input, FT5X06_MAX_POINT, 0);
+//	input_set_abs_params(input_dev,ABS_MT_POSITION_X,  0, SCREEN_MAX_X, 0, 0);
+//	input_set_abs_params(input_dev,ABS_MT_POSITION_Y,  0, SCREEN_MAX_Y, 0, 0);
+//	input_set_abs_params(input_dev,ABS_MT_TOUCH_MAJOR, 0, PRESS_MAX, 0, 0);
+//	input_set_abs_params(input_dev,ABS_MT_WIDTH_MAJOR, 0, 255, 0, 0);
+    ///////////////
+    set_bit(EV_ABS, input->evbit);
+//    set_bit(ABS_MT_POSITION_X, input->absbit);
+//    set_bit(ABS_MT_POSITION_Y, input->absbit);
+    set_bit(ABS_MT_WIDTH_MAJOR, input->absbit);
+    set_bit(ABS_MT_TRACKING_ID, input->absbit);
+
+    printk("ft5x06 probe v2.0 i file,FT5X0X_DOWNLOAD_FIRM=(%d)\n", FT5X0X_DOWNLOAD_FIRM);
+	#if (FT5X0X_DOWNLOAD_FIRM==1)
+printk("download !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n");
+	fts_ctpm_auto_upg(client);
+	#endif
+//    set_bit(BTN_TOUCH, input->keybit);
+///    input_set_abs_params(input, ABS_MT_POSITION_X, 0, ftdev->ftconfig->max.x, 0, 0);
+//    input_set_abs_params(input, ABS_MT_POSITION_Y, 0, ftdev->ftconfig->max.y, 0, 0);
+#if CFG_FT_USE_CONFIG
+    if(cfg_dts.rotate == 90 || cfg_dts.rotate == 270)
+    {
+        input_set_abs_params(input, ABS_MT_POSITION_Y, 0, ftdev->ftconfig->max.x, 0, 0);
+        input_set_abs_params(input, ABS_MT_POSITION_X, 0, ftdev->ftconfig->max.y, 0, 0);
+    }
+    else{
+        input_set_abs_params(input, ABS_MT_POSITION_Y, 0, ftdev->ftconfig->max.y, 0, 0);
+        input_set_abs_params(input, ABS_MT_POSITION_X, 0, ftdev->ftconfig->max.x, 0, 0);
+    }    
+#else
+
+    input_set_abs_params(input, ABS_MT_POSITION_Y, 0, ftdev->ftconfig->max.y, 0, 0);
+    input_set_abs_params(input, ABS_MT_POSITION_X, 0, ftdev->ftconfig->max.x, 0, 0);
+#endif
+//    input_set_abs_params(input, ABS_MT_PRESSURE, 0, ftdev->ftconfig->max.weight, 0, 0);
+    input_set_abs_params(input, ABS_MT_TRACKING_ID, 0, FT5X06_MAX_POINT, 0, 0);   
+    input_set_abs_params(input, ABS_MT_WIDTH_MAJOR, 0, 100, 0, 0);
+    input_set_abs_params(input, ABS_MT_TOUCH_MAJOR, 0, 100, 0, 0);
+	
+    err = input_register_device(ftdev->input_dev);
+    if ( err ) {
+        FT5X06_WARNNING("Register input failed");
+        goto input_register_failed;
+    }
+
+#ifdef HAS_VIRTUAL_KEY
+    key_input->name = "touch-key";
+    key_input->id.bustype = BUS_HOST;
+    key_input->id.version = ftdev->ftconfig->version;
+    key_input->id.vendor = ftdev->ftconfig->vendor;
+    key_input->id.product = ftdev->ftconfig->product;
+    key_input->keycode = key_map;
+    key_input->keycodesize = sizeof(key_map[0].key_code);
+    key_input->keycodemax = ARRAY_SIZE(key_map);
+    set_bit(EV_KEY, key_input->evbit);
+    for( i = 0; i < KEY_ID_MAX; i++) {
+        set_bit(key_map[i].key_code, key_input->keybit);
+    }
+
+    err = input_register_device(ftdev->key_input);
+    if ( err ) {
+        FT5X06_WARNNING("Register key input failed");
+        goto key_iput_register_failed;
+    }
+#endif
+
+    device_enable_async_suspend(&client->dev);
+    err = request_irq(ftdev->irq, ft5x06_interrupt, \
+        IRQF_DISABLED | IRQF_TRIGGER_FALLING, FT5X06_NAME, ftdev);
+    if ( err ) {
+        FT5X06_WARNNING("Irq request failed");
+        goto irq_request_failed;
+    }
+    
+#if CFG_FT_USE_CONFIG
+        if (sysfs_create_group(&ftdev->input_dev->dev.kobj, &tp_attr_group) < 0){
+            printk("create tp sysfs group error!");     
+        }
+#endif
+    
+    return 0;
+
+irq_request_failed:
+#ifdef HAS_VIRTUAL_KEY
+    input_unregister_device(key_input);
+key_iput_register_failed:    
+#endif
+
+    input_unregister_device(input);
+input_register_failed:
+init_config_failed:    
+    destroy_workqueue(wq);
+create_workqueue_failed:
+#ifdef HAS_VIRTUAL_KEY
+    input_free_device(key_input);
+create_key_input_failed:
+#endif    
+    input_free_device(input);
+create_input_failed:
+    kfree(ftconfig);
+create_config_failed:
+    kfree(ftdata);
+create_data_failed:
+    kfree(ftdev);
+create_ft5x06_failed:
+i2c_check_failed:
+    return err;
+}
+
+static int ft5x06_remove(struct i2c_client *client)
+{
+    struct ft5x06_device *ftdev = i2c_get_clientdata(client);
+    
+    if ( ftdev ) {
+        printk("%s,%d~~~~~~~~\n", __func__, __LINE__);
+#if CFG_FT_USE_CONFIG
+	    sysfs_remove_group(&ftdev->input_dev->dev.kobj, &tp_attr_group);
+#endif
+        free_irq(ftdev->irq, ftdev);
+        input_unregister_device(ftdev->input_dev);
+        destroy_workqueue(ftdev->workqueue);
+        input_free_device(ftdev->input_dev);
+#ifdef CONFIG_HAS_EARLYSUSPEND
+		unregister_early_suspend(&ftdev->es);
+#endif
+        kfree(ftdev->ftconfig);
+        kfree(ftdev->ftdata);
+        kfree(ftdev);
+    }
+
+    i2c_set_clientdata(client, NULL);
+    return 0;
+}
+
+static int ft5x06_suspend(struct i2c_client *client, 
+    pm_message_t mesg)
+{
+//    printlf();
+//#ifndef CONFIG_HAS_EARLYSUSPEND
+    struct ft5x06_device *ftdev = i2c_get_clientdata(client);
+//    enirq = 0;//tell work,do not enable irq again
+    disable_irq(ftdev->irq);
+    flush_workqueue(ftdev->workqueue);
+//    cancel_work_sync(&ftdev->work);
+//	disable_irq(ftdev->irq);
+//#endif
+    gpio_set_value_cansleep(gpio_reset, 0);
+    if ( tp_regulator )
+    {
+        current_val = regulator_get_voltage(tp_regulator);
+        printk("current_val is %d \n",current_val);    
+        //disable_power(tp_regulator);
+        regulator_deinit(tp_regulator);
+    }
+    return 0;
+}
+
+static int ft5x06_resume(struct i2c_client *client)
+{
+    struct ft5x06_device *ftdev = i2c_get_clientdata(client);
+    gpio_set_value_cansleep(gpio_reset, 0);
+	msleep(30);
+	tp_regulator = regulator_init(FT5X06_POWER_ID,current_val,current_val);
+	msleep(20);
+	gpio_set_value_cansleep(gpio_reset, 1);
+//	msleep(5);
+//	gpio_set_value_cansleep(gpio_reset, 0);
+//	msleep(10);
+//	gpio_set_value_cansleep(gpio_reset, 1);
+   	msleep(20);
+    enable_irq(ftdev->irq);
+    return 0;
+}
+/*
+static int ft5x06_detect(struct i2c_client *client, 
+    struct i2c_board_info *info)
+{
+    strcpy(info->type, FT5X06_NAME);
+
+    return 0;
+}
+*/
+
+//static unsigned short ft5x06_addresses[] = {
+//    FT5X06_I2C_ADDR,
+//    I2C_CLIENT_END,
+//};
+
+static struct i2c_device_id ft5x06_id[] = {
+    {FT5X06_NAME, 0},
+    {},
+};
+
+static struct of_device_id ft5x06_of_match[] = {
+       { .compatible = "ft5x06" },
+       { }
+};
+
+MODULE_DEVICE_TABLE(i2c, ft5x06_id);
+
+static struct i2c_driver ft5x06_driver = {
+    .driver = {
+        .owner = THIS_MODULE,
+        .name = FT5X06_NAME,
+        .of_match_table        = of_match_ptr(ft5x06_of_match),
+    },
+
+    .class = I2C_CLASS_HWMON,
+    .probe = ft5x06_probe,
+    .remove = ft5x06_remove,
+    .suspend = ft5x06_suspend,
+    .resume = ft5x06_resume,
+   // .detect = ft5x06_detect,
+   // .address_list = ft5x06_addresses,
+    .id_table = ft5x06_id,
+};
+static struct i2c_board_info tp_info = {
+    .type	= FT5X06_NAME,
+};
+
+#if CFG_FT_USE_CONFIG
+static int tp_config_init(void)
+{
+    cfg_dts.rotate=TP_ROTATE_DEFAULT;
+    cfg_dts.xMax=FT5X06_X_MAX;
+    cfg_dts.yMax=FT5X06_Y_MAX;
+    cfg_dts.xRevert=TP_XREVERT;
+    cfg_dts.yRevert=TP_YREVERT;
+    cfg_dts.XYSwap=TP_XYSWAP;
+    return 0;
+}
+#endif
+
+static int touch_ft5x06_init(void)
+{
+    int err = 0, i = 0;
+    struct i2c_client *client = NULL;
+
+    
+    tp_config_init();
+
+#if CFG_FT_USE_CONFIG
+    err = tp_of_data_get();
+    if (err<0)
+    {
+        printk("ft get config err!!!");
+        return err;
+    }
+    tp_info.addr = cfg_dts.i2cAddr;
+#else
+    
+    tp_info.addr	= FT5X06_I2C_ADDR;
+#endif
+    
+    ft5x06_hw_init();
+    
+#if 0
+#if CFG_FT_USE_CONFIG
+    struct i2c_adapter *adap = i2c_get_adapter(cfg_dts.i2cNum);
+#else    
+    struct i2c_adapter *adap = i2c_get_adapter(FT5X06_I2C_ADAPTER);
+#endif
+
+	
+    pClient = i2c_new_device(adap, &tp_info); 
+#endif  
+    err = i2c_add_driver(&ft5x06_driver);
+    
+    if ( err ) {
+            FT5X06_WARNNING("add i2c driver failed");
+            goto out;
+    }
+    
+    list_for_each_entry(client, &(ft5x06_driver.clients), detected ) {
+        for ( i = 0; i < ARRAY_SIZE(ft5x06_attr); i++ ) {
+            err = device_create_file(&client->dev, &ft5x06_attr[i]);
+            if ( err ) {
+                FT5X06_WARNNING("Add device file failed");
+                goto out;
+            }
+        }
+    }
+    
+out:
+    printlf(); 
+    return err;
+}
+
+static void touch_ft5x06_exit(void)
+{
+    int i = 0;
+    struct i2c_client *client = NULL;
+
+    list_for_each_entry(client, &(ft5x06_driver.clients), detected ){
+        for ( i = 0; i < ARRAY_SIZE(ft5x06_attr); i++ )
+            device_remove_file(&client->dev, &ft5x06_attr[i]);
+    }
+
+    i2c_del_driver(&ft5x06_driver);
+    //i2c_unregister_device(pClient);
+    ft5x06_hw_deint();
+}
+
+module_init(touch_ft5x06_init);
+module_exit(touch_ft5x06_exit);
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("lzhou/Actions Semi, Inc");
+MODULE_DESCRIPTION("driver for touch pannel of Focal Tech's FT5x06");
diff --git a/drivers/input/touchscreen/FT5406/ft5x06.h b/drivers/input/touchscreen/FT5406/ft5x06.h
new file mode 100755
index 0000000..e22292b
--- /dev/null
+++ b/drivers/input/touchscreen/FT5406/ft5x06.h
@@ -0,0 +1,136 @@
+#ifndef FT5X06_H
+#define FT5X06_H
+#include "ft5x06_reg.h"
+
+#define CFG_FT_USE_CONFIG  1
+
+#define FT5X06_X_MAX            ( 1280 )
+#define FT5X06_Y_MAX            ( 800 )
+
+#define TP_ROTATE_DEFAULT 90
+#define TP_XREVERT 0
+#define TP_YREVERT 0
+#define TP_XYSWAP 0
+
+//#define FT5X06_MAX_POINT  ( 5 )
+//#define FT5X0X_DOWNLOAD_FIRM  ( 1 )
+//#define UPGRADE_ID2   ( 0x3 )
+//#define FIRM_I_FILE_NAME  "NOVO7_VER0X0E_20130124_app.i"
+
+#if CFG_FT_USE_CONFIG
+#define FT5X06_IRQ              ( OWL_EXT_IRQ_SIRQ0 )
+#endif
+
+//#define FT5X06_RESET_PIN        OWL_GPIO_PORTB(3)
+#define FT5X06_I2C_ADAPTER      ( 1 )
+#define FT5X06_I2C_ADDR         ( 0x38 ) // Don't contained r/w bit
+
+//#define FT5X06_MAX_POINT        ( R_TP_MAX_POINT )
+#define FT5X06_POWER_ID			("ldo5")
+#define FT5X06_POWER_MIN_VOL	(3100000)
+#define FT5X06_POWER_MAX_VOL	(3110000)
+
+#define FT5X06_RESET_PIN        OWL_GPIO_PORTB(3)
+#define I2C_CTPM_ADDRESS 0x38
+//#define FT5X0X_DOWNLOAD_FIRM    (R_TP_DOWNLOAD_FIRM)
+//#define FIRM_I_FILE_NAME	(R_TP_I_FILE_NAME)
+
+enum ft5x0x_ts_regs {
+	FT5X0X_REG_THGROUP					= 0x80,     /* touch threshold, related to sensitivity */
+	FT5X0X_REG_THPEAK						= 0x81,
+	FT5X0X_REG_THCAL						= 0x82,
+	FT5X0X_REG_THWATER					= 0x83,
+	FT5X0X_REG_THTEMP					= 0x84,
+	FT5X0X_REG_THDIFF						= 0x85,				
+	FT5X0X_REG_CTRL						= 0x86,
+	FT5X0X_REG_TIMEENTERMONITOR			= 0x87,
+	FT5X0X_REG_PERIODACTIVE				= 0x88,      /* report rate */
+	FT5X0X_REG_PERIODMONITOR			= 0x89,
+	FT5X0X_REG_HEIGHT_B					= 0x8a,
+	FT5X0X_REG_MAX_FRAME					= 0x8b,
+	FT5X0X_REG_DIST_MOVE					= 0x8c,
+	FT5X0X_REG_DIST_POINT				= 0x8d,
+	FT5X0X_REG_FEG_FRAME					= 0x8e,
+	FT5X0X_REG_SINGLE_CLICK_OFFSET		= 0x8f,
+	FT5X0X_REG_DOUBLE_CLICK_TIME_MIN	= 0x90,
+	FT5X0X_REG_SINGLE_CLICK_TIME			= 0x91,
+	FT5X0X_REG_LEFT_RIGHT_OFFSET		= 0x92,
+	FT5X0X_REG_UP_DOWN_OFFSET			= 0x93,
+	FT5X0X_REG_DISTANCE_LEFT_RIGHT		= 0x94,
+	FT5X0X_REG_DISTANCE_UP_DOWN		= 0x95,
+	FT5X0X_REG_ZOOM_DIS_SQR				= 0x96,
+	FT5X0X_REG_RADIAN_VALUE				=0x97,
+	FT5X0X_REG_MAX_X_HIGH                       	= 0x98,
+	FT5X0X_REG_MAX_X_LOW             			= 0x99,
+	FT5X0X_REG_MAX_Y_HIGH            			= 0x9a,
+	FT5X0X_REG_MAX_Y_LOW             			= 0x9b,
+	FT5X0X_REG_K_X_HIGH            			= 0x9c,
+	FT5X0X_REG_K_X_LOW             			= 0x9d,
+	FT5X0X_REG_K_Y_HIGH            			= 0x9e,
+	FT5X0X_REG_K_Y_LOW             			= 0x9f,
+	FT5X0X_REG_AUTO_CLB_MODE			= 0xa0,
+	FT5X0X_REG_LIB_VERSION_H 				= 0xa1,
+	FT5X0X_REG_LIB_VERSION_L 				= 0xa2,		
+	FT5X0X_REG_CIPHER						= 0xa3,
+	FT5X0X_REG_MODE						= 0xa4,
+	FT5X0X_REG_PMODE						= 0xa5,	  /* Power Consume Mode		*/	
+	FT5X0X_REG_FIRMID						= 0xa6,   /* Firmware version */
+	FT5X0X_REG_STATE						= 0xa7,
+	FT5X0X_REG_FT5201ID					= 0xa8,
+	FT5X0X_REG_ERR						= 0xa9,
+	FT5X0X_REG_CLB						= 0xaa,
+};
+
+
+typedef enum
+{
+    ERR_OK,
+    ERR_MODE,
+    ERR_READID,
+    ERR_ERASE,
+    ERR_STATUS,
+    ERR_ECC,
+    ERR_DL_ERASE_FAIL,
+    ERR_DL_PROGRAM_FAIL,
+    ERR_DL_VERIFY_FAIL
+}E_UPGRADE_ERR_TYPE;
+
+
+typedef unsigned char         FTS_BYTE;     //8 bit
+typedef unsigned short        FTS_WORD;    //16 bit
+typedef unsigned int          FTS_DWRD;    //16 bit
+typedef unsigned char         FTS_BOOL;    //8 bit
+
+#define FTS_NULL                0x0
+#define FTS_TRUE                0x01
+#define FTS_FALSE              0x0
+
+//#define GPIO_TO_IRQ
+#ifdef GPIO_TO_IRQ
+#define FT5X06_IRQ_GPIO        OWL_GPIO_PORTA(24)
+#define FT5x06_IRQ_NAME        "ft5x06_irq"
+#endif
+
+#define ft5x06_debug
+#define ft5x06_warnning
+
+extern int debug_switch;
+
+#ifdef ft5x06_debug
+#define FT5X06_DEBUG(fmt, args...) \
+    if ( debug_switch)  \
+        printk("[FT5X06-INFO]"fmt"\n", ##args)
+#else
+#define FT5X06_DEBUG(fmt, args...) \
+    do {} while(0)
+#endif
+
+#ifdef  ft5x06_warnning
+#define FT5X06_WARNNING(fmt, args...) \
+    printk("[FT5X06-WARN]"fmt"\n", ##args)
+#else
+#define FT5X06_WARNNING(fmt, args...) \
+    do {} while(0)
+#endif
+
+#endif
diff --git a/drivers/input/touchscreen/FT5406/ft5x06_reg.h b/drivers/input/touchscreen/FT5406/ft5x06_reg.h
new file mode 100755
index 0000000..cea6a3c
--- /dev/null
+++ b/drivers/input/touchscreen/FT5406/ft5x06_reg.h
@@ -0,0 +1,195 @@
+#ifndef FT5X06_REG
+#define FT5X06_REG
+
+enum OPADDR {
+    OP_DEVICEMODE = 0x00,
+    OP_GESTID,
+    OP_TDSTATUS,
+    OP_TOUCH1XH,
+    OP_TOUCH1XL,
+    OP_TOUCH1YH,
+    OP_TOUCH1YL,
+    OP_TOUCH1WEIGHT,
+    OP_TOUCH1MISC,
+    OP_TOUCH2XH,
+    OP_TOUCH2XL,
+    OP_TOUCH2YH,
+    OP_TOUCH2YL,
+    OP_TOUCH2WEIGHT,
+    OP_TOUCH2MISC,
+    OP_TOUCH3XH,
+    OP_TOUCH3XL,
+    OP_TOUCH3YH,
+    OP_TOUCH3YL,
+    OP_TOUCH3WEIGHT,
+    OP_TOUCH3MISC,
+    OP_TOUCH4XH,
+    OP_TOUCH4XL,
+    OP_TOUCH4YH,
+    OP_TOUCH4YL,
+    OP_TOUCH4WEIGHT,
+    OP_TOUCH4MISC,
+    OP_TOUCH5XH,
+    OP_TOUCH5XL,
+    OP_TOUCH5YH,
+    OP_TOUCH5YL,
+    OP_TOUCH5WEIGHT,
+    OP_TOUCH5MISC,
+    OP_TOUCH6XH,
+    OP_TOUCH6XL,
+    OP_TOUCH6YH,
+    OP_TOUCH6YL,
+    OP_TOUCH6WEIGHT,
+    OP_TOUCH6MISC,
+    OP_TOUCH7XH,
+    OP_TOUCH7XL,
+    OP_TOUCH7YH,
+    OP_TOUCH7YL,
+    OP_TOUCH7WEIGHT,
+    OP_TOUCH7MISC,
+    OP_TOUCH8XH,
+    OP_TOUCH8XL,
+    OP_TOUCH8YH,
+    OP_TOUCH8YL,
+    OP_TOUCH8WEIGHT,
+    OP_TOUCH8MISC,
+    OP_TOUCH9XH,
+    OP_TOUCH9XL,
+    OP_TOUCH9YH,
+    OP_TOUCH9YL,
+    OP_TOUCH9WEIGHT,
+    OP_TOUCH9MISC,
+    OP_TOUCH10XH,
+    OP_TOUCH10XL,
+    OP_TOUCH10YH,
+    OP_TOUCH10YL,
+    OP_TOUCH10WEIGHT,
+    OP_TOUCH10MISC,
+    // reserved
+    OP_IDG_THGROUP = 0x80,
+    OP_IDG_THPEAK,
+    OP_IDG_THCAL,
+    OP_IDG_THWATER,
+    OP_IDG_THTEMP,
+    OP_IDG_THDIFF,
+    OP_IDG_CTRL,
+    OP_IDG_TIME_MONITOR,
+    OP_IDG_PACTIVE,
+    OP_IDG_MONPERIOD,
+    OP_IDG_HEIGHTB,
+    OP_IDG_MAXFRAME,
+    OP_IDG_DISTMOVE,
+    OP_IDG_DISTPOINT,
+    OP_IDG_FEGFRAME,
+    OP_IDG_SGLCLK_OFFSET,
+    OP_IDG_DBLCLK_MIN,
+    OP_IDG_SGLCLK_TIME,
+    OP_IDG_LR_OFFSET,
+    OP_IDG_UD_OFFSET,
+    OP_IDG_DIST_LR,
+    OP_IDG_DIST_UD,
+    OP_IDG_ZOOM_DIST,
+    OP_IDG_RADIAN_VALUE,
+    OP_IDG_MAX_XH,
+    OP_IDG_MAX_XL,
+    OP_IDG_MAX_YH,
+    OP_IDG_MAX_YL,
+    OP_IDG_K_XH,
+    OP_IDG_K_XL,
+    OP_IDG_K_YH,
+    OP_IDG_K_YL,
+    OP_IDG_AUTOCLB_MOD,
+    OP_IDG_LIB_VER_H,
+    OP_IDG_LIB_VER_L,
+    OP_IDG_CHIP,
+    OP_IDG_MODE,
+    OP_IDG_PMODE,
+    OP_IDG_FIRMID,
+    OP_IDG_STATE,
+    OP_IDG_FT5201ID,
+    OP_IDG_ERR,
+    OP_IDG_CLB,
+    OP_IDG_AUTO_REP_RATE,
+    OP_IDG_STATIC_TH,
+    OP_IDG_MID_SPEED_TH,
+    OP_IDG_HIGH_SPEED_TH,
+    OP_IDG_BAREA_TH,
+    //reserved
+    LOG_MSG_CNT = 0xfe,
+    LOG_CUR_CHA,
+};
+
+enum TEADDR {
+     TE_DEVICEMODE = 0x00,
+     TE_ROW_ADDR,
+     TE_START_SCAN,
+     TE_ROW_NUM,
+     TE_COL_NUM,
+     TE_DIVER_VOL,
+     TE_START_RX,
+     TE_GAIN,
+     TE_ORIGIN_XH,
+     TE_ORIGIN_XL,
+     TE_ORIGIN_YH,
+     TE_ORIGIN_YL,
+     TE_RES_WH,
+     TE_RES_WL,
+     TE_RES_HH,
+     TE_RES_HL,
+     TE_RAWDATA0_H,
+     TE_RAWDATA0_L,
+     TE_THPOINT_NUM = 0x4c,
+     TE_TX_ORDER0   = 0x50,
+};
+
+enum SYSADDR {
+    SYS_DEVICEMODE = 0x00,
+    SYS_BIST_COMM,
+    SYS_BIST_STAT,
+
+    SYS_UID_0 = 0x07,
+    SYS_UID_1,
+    SYS_UID_2,
+    SYS_UID_3,
+    SYS_UID_4,
+    SYS_UID_5,
+    SYS_UID_6,
+    SYS_UID_7,
+    SYS_BL_VERH,
+    SYS_BL_VERL,
+    SYS_FTS_IC_VERH,
+    SYS_FTS_IC_VERL,
+    SYS_APP_IDH,
+    SYS_APP_IDL,
+    SYS_APP_VERH,
+    SYS_APP_VERL,
+
+    SYS_CID_0 = 0x1b,
+    SYS_CID_1,
+    SYS_CID_2,
+    SYS_CID_3,
+    SYS_CID_4,
+
+    SYS_LOG_MSG_CNT = 0xfe,
+    SYS_LOG_CUR_CHA,
+};
+
+enum POWERMODE {
+    FT5X06_ACTIVE_MODE = 0,
+    FT5X06_MONITOR_MODE = 1,
+    FT5X06_HIBERNATE_MODE = 3,
+};
+
+#define POINT_DATA_LEN            ( OP_TOUCH1MISC - OP_TOUCH1XH + 1 )
+#define FIRST_READ_ADDR           ( OP_TDSTATUS )
+#define FIRST_READ_LEN            ( 1 + POINT_DATA_LEN )
+#define SECOND_READ_ADDR          ( OP_TOUCH2XH )
+
+#define FT5X06_MODE_ADDR          ( OP_DEVICEMODE )
+#define FT5X06_DATA_ADDR          ( OP_TOUCH1XH )
+#define FT5X06_X_OFFSET           ( 0 )
+#define FT5X06_Y_OFFSET           ( OP_TOUCH1YH - OP_TOUCH1XH )
+#define FT5X06_WEIGHT_OFFSET      ( OP_TOUCH1WEIGHT - OP_TOUCH1XH )
+#define FT5X06_MISC_OFFSET        ( OP_TOUCH1MISC - OP_TOUCH1XH )
+
+#endif
diff --git a/drivers/input/touchscreen/GSL1680F/Makefile b/drivers/input/touchscreen/GSL1680F/Makefile
new file mode 100755
index 0000000..f3ecbfd
--- /dev/null
+++ b/drivers/input/touchscreen/GSL1680F/Makefile
@@ -0,0 +1,7 @@
+#
+# Makefile for the gslX680 tp driver
+#
+
+obj-$(CONFIG_TOUCHSCREEN_GSL1680F)		  += ctp_gsl1680f.o
+ctp_gsl1680f-objs := gsl1680.o gsl_point_id.bin
+
diff --git a/drivers/input/touchscreen/GSL1680F/gsl1680.c b/drivers/input/touchscreen/GSL1680F/gsl1680.c
new file mode 100755
index 0000000..9f306d3
--- /dev/null
+++ b/drivers/input/touchscreen/GSL1680F/gsl1680.c
@@ -0,0 +1,1641 @@
+/*
+ * drivers/input/touchscreen/gslX680.c
+ *
+ * Copyright (c) 2012 Shanghai Basewin
+ *	Guan Yuwei<guanyuwei@basewin.com>
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License version 2 as
+ *  published by the Free Software Foundation.
+ */
+
+
+
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/input.h>
+#include <linux/interrupt.h>
+#include <linux/i2c.h>
+#include <linux/delay.h>
+//#include <mach/gpio.h>
+//#include <mach/gpio_data.h>
+#include <linux/jiffies.h>
+#include <linux/cdev.h>
+#include <asm/uaccess.h>
+#include <linux/pm_runtime.h>
+#include <linux/regulator/consumer.h>
+
+#if defined(CONFIG_HAS_EARLYSUSPEND)
+#include <linux/earlysuspend.h>
+#endif
+#include <linux/errno.h>
+#include <linux/kernel.h>
+
+#include <linux/platform_device.h>
+#include <linux/async.h>
+#include <linux/hrtimer.h>
+#include <linux/init.h>
+#include <linux/ioport.h>
+#include <asm/irq.h>
+#include <asm/io.h>
+#include <linux/gpio.h>
+#include <asm/prom.h>
+#include <mach/gpio.h>
+#include <linux/input/mt.h>
+#include <linux/of_gpio.h>
+#include <linux/of_irq.h>
+
+#include "gsl1680.h"
+
+//#include <mach/irqs.h>
+//#include <mach/system.h>
+//#include <mach/hardware.h>
+
+#define CFG_TP_USE_CONFIG 1
+
+//default value
+#define GSLX680_I2C_NAME 	"gslX680"
+#define GSLX680_I2C_ADDR 	0x40
+
+#define TP_RESET_PIN        OWL_GPIO_PORTB(3)
+#define TP_I2C_ADAPTER    (1)
+#define TP_I2C_ADDR         GSLX680_I2C_ADDR
+#define TP_NAME			    GSLX680_I2C_NAME
+
+#if CFG_TP_USE_CONFIG
+#define TP_IRQ_PORT	  		OWL_EXT_IRQ_SIRQ0
+#endif
+
+#define TP_MAX_X              SCREEN_MAX_X
+#define TP_MAX_Y              SCREEN_MAX_Y
+static unsigned gpio_reset = 0;
+
+//static struct i2c_client *gsl_ts_device;
+
+
+#if CFG_TP_USE_CONFIG
+struct tp_cfg_dts {
+	unsigned int sirq;
+	unsigned int i2cNum;
+	unsigned int i2cAddr;
+	unsigned int xMax;
+	unsigned int yMax;
+	unsigned int rotate; 
+	unsigned int xRevert;
+	unsigned int yRevert;
+	unsigned int XYSwap;
+	char const *regulator;
+	unsigned int vol_max;
+	unsigned int vol_min;
+};
+static struct tp_cfg_dts cfg_dts;
+#endif
+
+#define RESUME_INIT_CHIP_WORK
+//#define GSL_DEBUG
+
+#define REPORT_DATA_PROTOCOL_B
+
+//#define HAVE_TOUCH_KEY
+#define SLEEP_CLEAR_POINT
+#define FILTER_POINT	/*\B7\C0\B6\B6*/
+#define RECORD_POINT
+#ifdef FILTER_POINT
+#define FILTER_MAX	9	
+#endif
+
+
+#define GSL_DATA_REG		0x80
+#define GSL_STATUS_REG		0xe0
+#define GSL_PAGE_REG		0xf0
+
+#define PRESS_MAX    		255
+#define MAX_FINGERS 		10
+#define MAX_CONTACTS 		10	//\C8\E7\B9\FBֻ\BF\AA5\B8\F6\CA\D6ָ\A3\ACID\BA\C5Ҳ\BF\C9\C4ܴ\F3\D3\DA5
+#define DMA_TRANS_LEN		0x10	//һ\B4\CE\CF\C2\D4ض\E0\C9ټĴ\E6\C6\F7\A3\AC0x20\CA\C7һҳ32X4\D7ֽ\DA
+
+struct mutex mutex;
+
+static int power_is_on = 0;
+
+#define GSL_MONITOR
+#ifdef GSL_MONITOR
+static struct delayed_work gsl_monitor_work;
+static struct workqueue_struct *gsl_monitor_workqueue = NULL;
+static char int_1st[4] = {0};
+static char int_2nd[4] = {0};
+static char bc_counter = 0;
+static char b0_counter = 0;
+static char i2c_lock_flag = 0;
+#endif 
+static struct i2c_client *gsl_client = NULL;
+
+static struct gsl_ts *this_ts = NULL;
+
+#ifdef HAVE_TOUCH_KEY
+static u16 key = 0;
+
+static int key_state_flag = 0;
+struct key_data {
+	u16 key;
+	u16 x_min;
+	u16 x_max;
+	u16 y_min;
+	u16 y_max;
+};
+
+const u16 key_array[]={
+	KEY_BACK,
+	KEY_HOME,
+	KEY_MENU,
+	KEY_SEARCH,
+}; 
+#define MAX_KEY_NUM     (sizeof(key_array)/sizeof(key_array[0]))
+
+struct key_data gsl_key_data[MAX_KEY_NUM] = {
+	{KEY_BACK, 2048, 2048, 2048, 2048},
+	{KEY_HOME, 2048, 2048, 2048, 2048},	
+	{KEY_MENU, 2048, 2048, 2048, 2048},
+	{KEY_SEARCH, 2048, 2048, 2048, 2048},
+};
+#endif
+
+struct gsl_ts_data {
+	u8 x_index;
+	u8 y_index;
+	u8 z_index;
+	u8 id_index;
+	u8 touch_index;
+	u8 data_reg;
+	u8 status_reg;
+	u8 data_size;
+	u8 touch_bytes;
+	u8 update_data;
+	u8 touch_meta_data;
+	u8 finger_size;
+};
+
+static struct gsl_ts_data devices[] = {
+	{
+		.x_index = 6,
+		.y_index = 4,
+		.z_index = 5,
+		.id_index = 7,
+		.data_reg = GSL_DATA_REG,
+		.status_reg = GSL_STATUS_REG,
+		.update_data = 0x4,
+		.touch_bytes = 4,
+		.touch_meta_data = 4,
+		.finger_size = 70,
+	},
+};
+
+struct gsl_ts {
+	struct i2c_client *client;
+	struct input_dev *input;
+	struct work_struct work;
+	struct workqueue_struct *wq;
+#ifdef RESUME_INIT_CHIP_WORK
+	struct work_struct init_work;
+	struct workqueue_struct *init_wq;
+#endif
+//    struct work_struct gsl_init_work;
+//    struct workqueue_struct *gsl_init_workqueue;
+
+	struct gsl_ts_data *dd;
+	u8 *touch_data;
+	u8 device_id;
+	int irq;
+#if defined(CONFIG_HAS_EARLYSUSPEND)
+	struct early_suspend early_suspend;
+#endif
+};
+
+#ifdef GSL_DEBUG 
+#define print_info(fmt, args...)   \
+        do{                              \
+                printk(fmt, ##args);     \
+        }while(0)
+#else
+#define print_info(fmt, args...)
+#endif
+
+static u32 id_sign[MAX_CONTACTS+1] = {0};
+static u8 id_state_flag[MAX_CONTACTS+1] = {0};
+static u8 id_state_old_flag[MAX_CONTACTS+1] = {0};
+static u16 x_old[MAX_CONTACTS+1] = {0};
+static u16 y_old[MAX_CONTACTS+1] = {0};
+static u16 x_new = 0;
+static u16 y_new = 0;
+
+////POWER
+#define CTP_POWER_ID			("ldo5")
+#define CTP_POWER_MIN_VOL	(3100000)
+#define CTP_POWER_MAX_VOL	(3110000)
+static char ctp_power_name[] = CTP_POWER_ID;
+	
+volatile int current_val = 0;
+
+static struct regulator *tp_regulator = NULL;
+static inline void regulator_deinit(struct regulator *);
+static struct regulator *regulator_init(const char *, int, int);
+
+static struct regulator *regulator_init(const char *name, int minvol, int maxvol)
+{
+	struct regulator *power;
+	int ret;
+
+	power = regulator_get(NULL,name);
+    	if (IS_ERR(power)) {
+		printk("Nova err,regulator_get fail\n!!!");
+		return NULL;
+	}
+ 
+	if (regulator_set_voltage(power, minvol, maxvol)) {
+        	printk("Nova err,cannot set voltage\n!!!");
+        	regulator_put(power);
+        
+		return NULL;
+	}
+	ret = regulator_enable(power);
+	return (power);
+}
+
+static inline void regulator_deinit(struct regulator *power)
+{
+	regulator_disable(power);
+	regulator_put(power);
+}
+
+
+static int gslX680_init(void)
+{
+    gpio_direction_output(gpio_reset, 1);
+      	
+	return 0;
+}
+
+static int gslX680_shutdown_low(void)
+{
+	gpio_direction_output(gpio_reset, 0);
+	return 0;
+}
+
+static int gslX680_shutdown_high(void)
+{
+	gpio_direction_output(gpio_reset, 1);
+	return 0;
+}
+
+static inline u16 join_bytes(u8 a, u8 b)
+{
+	u16 ab = 0;
+	ab = ab | a;
+	ab = ab << 8 | b;
+	return ab;
+}
+/*
+static u32 gsl_read_interface(struct i2c_client *client, u8 reg, u8 *buf, u32 num)
+{
+	struct i2c_msg xfer_msg[2];
+
+	xfer_msg[0].addr = client->addr;
+	xfer_msg[0].len = 1;
+	xfer_msg[0].flags = 0x00;
+	xfer_msg[0].buf = &reg;
+
+	xfer_msg[1].addr = client->addr;
+	xfer_msg[1].len = num;
+	xfer_msg[1].flags |= I2C_M_RD;
+	xfer_msg[1].buf = buf;
+
+	if (reg < 0x80) {
+		i2c_transfer(client->adapter, xfer_msg, ARRAY_SIZE(xfer_msg));
+		msleep(5);
+	}
+
+	return i2c_transfer(client->adapter, xfer_msg, ARRAY_SIZE(xfer_msg)) == ARRAY_SIZE(xfer_msg) ? 0 : -EFAULT;
+}
+*/
+
+static u32 gsl_write_interface(struct i2c_client *client, const u8 reg, u8 *buf, u32 num)
+{
+	struct i2c_msg xfer_msg[1];
+
+	buf[0] = reg;
+
+	xfer_msg[0].addr = client->addr;
+	xfer_msg[0].len = num + 1;
+	xfer_msg[0].flags =0x00;
+	xfer_msg[0].buf = buf;
+
+	return i2c_transfer(client->adapter, xfer_msg, 1) == 1 ? 0 : -EFAULT;
+}
+
+static int gsl_ts_write(struct i2c_client *client, u8 addr, u8 *pdata, int datalen)
+{
+	int ret = 0;
+	u8 tmp_buf[128];
+	unsigned int bytelen = 0;
+	if (datalen > 125)
+	{
+		printk("%s too big datalen = %d!\n", __func__, datalen);
+		return -1;
+	}
+	
+	tmp_buf[0] = addr;
+	bytelen++;
+	
+	if (datalen != 0 && pdata != NULL)
+	{
+		memcpy(&tmp_buf[bytelen], pdata, datalen);
+		bytelen += datalen;
+	}
+	
+	ret = i2c_master_send(client, tmp_buf, bytelen);
+	return ret;
+}
+
+static int gsl_ts_read(struct i2c_client *client, u8 addr, u8 *pdata, unsigned int datalen)
+{
+	int ret = 0;
+
+	if (datalen > 126)
+	{
+		printk("%s too big datalen = %d!\n", __func__, datalen);
+		return -1;
+	}
+
+	ret = gsl_ts_write(client, addr, NULL, 0);
+	if (ret < 0)
+	{
+		printk("%s set data address fail!\n", __func__);
+		return ret;
+	}
+	
+	return i2c_master_recv(client, pdata, datalen);
+}
+
+static __inline__ void fw2buf(u8 *buf, const u32 *fw)
+{
+	u32 *u32_buf = (int *)buf;
+	*u32_buf = *fw;
+}
+
+static void gsl_load_fw(struct i2c_client *client)
+{
+	u8 buf[DMA_TRANS_LEN*4 + 1] = {0};
+	u8 send_flag = 1;
+	u8 *cur = buf + 1;
+	u32 source_line = 0;
+	u32 source_len;
+	struct fw_data *ptr_fw;
+	
+	printk("=============gsl_load_fw start==============\n");
+
+	ptr_fw = (struct fw_data *)GSLX680_FW;
+	source_len = ARRAY_SIZE(GSLX680_FW);
+
+	for (source_line = 0; source_line < source_len; source_line++) 
+	{
+		/* init page trans, set the page val */
+		if (GSL_PAGE_REG == ptr_fw[source_line].offset)
+		{
+			fw2buf(cur, &ptr_fw[source_line].val);
+			gsl_write_interface(client, GSL_PAGE_REG, buf, 4);
+			send_flag = 1;
+		}
+		else 
+		{
+			if (1 == send_flag % (DMA_TRANS_LEN < 0x20 ? DMA_TRANS_LEN : 0x20))
+	    			buf[0] = (u8)ptr_fw[source_line].offset;
+
+			fw2buf(cur, &ptr_fw[source_line].val);
+			cur += 4;
+
+			if (0 == send_flag % (DMA_TRANS_LEN < 0x20 ? DMA_TRANS_LEN : 0x20)) 
+			{
+	    			gsl_write_interface(client, buf[0], buf, cur - buf - 1);
+	    			cur = buf + 1;
+			}
+
+			send_flag++;
+		}
+	}
+
+	printk("=============gsl_load_fw end==============\n");
+
+}
+
+
+static int test_i2c(struct i2c_client *client)
+{
+	u8 read_buf = 0;
+	u8 write_buf = 0x12;
+	int ret, rc = 1;
+	
+	ret = gsl_ts_read( client, 0xf0, &read_buf, sizeof(read_buf) );
+	if  (ret  < 0)  
+    		rc --;
+	else
+		printk("I read reg 0xf0 is %x\n", read_buf);
+	
+	msleep(2);
+	ret = gsl_ts_write(client, 0xf0, &write_buf, sizeof(write_buf));
+	if(ret  >=  0 )
+		printk("I write reg 0xf0 0x12\n");
+	
+	msleep(2);
+	ret = gsl_ts_read( client, 0xf0, &read_buf, sizeof(read_buf) );
+	if(ret <  0 )
+		rc --;
+	else
+		printk("I read reg 0xf0 is 0x%x\n", read_buf);
+
+	return rc;
+}
+
+static void startup_chip(struct i2c_client *client)
+{
+	u8 tmp = 0x00;
+
+	gsl_ts_write(client, 0xe0, &tmp, 1);
+	msleep(10);	
+#ifdef GSL_NOID_VERSION
+	gsl_DataInit(gsl_config_data_id);
+#endif
+}
+
+static void reset_chip(struct i2c_client *client)
+{
+	u8 tmp = 0x88;
+	u8 buf[4] = {0x00};
+	
+	gsl_ts_write(client, 0xe0, &tmp, sizeof(tmp));
+	msleep(10);
+	tmp = 0x04;
+	gsl_ts_write(client, 0xe4, &tmp, sizeof(tmp));
+	msleep(5);
+	gsl_ts_write(client, 0xbc, buf, sizeof(buf));
+	msleep(2);
+}
+
+static void clr_reg(struct i2c_client *client)
+{
+	u8 write_buf[4]	= {0};
+
+	write_buf[0] = 0x88;
+	gsl_ts_write(client, 0xe0, &write_buf[0], 1); 	
+	msleep(10);
+	write_buf[0] = 0x03;
+	gsl_ts_write(client, 0x80, &write_buf[0], 1); 	
+	msleep(5);
+	write_buf[0] = 0x04;
+	gsl_ts_write(client, 0xe4, &write_buf[0], 1); 	
+	msleep(5);
+	write_buf[0] = 0x00;
+	gsl_ts_write(client, 0xe0, &write_buf[0], 1); 	
+	msleep(10);
+}
+
+static void init_chip(struct i2c_client *client)
+{
+	int rc;
+	
+	gslX680_shutdown_low();	
+	msleep(20); 	
+	gslX680_shutdown_high();	
+	msleep(20); 		
+	rc = test_i2c(client);
+	if(rc < 0)
+	{
+		printk("------gslX680 test_i2c error------\n");	
+		return;
+	}	
+	clr_reg(client);
+	reset_chip(client);
+	gsl_load_fw(client);			
+	startup_chip(client);	
+	reset_chip(client);	
+	startup_chip(client);	
+}
+
+static void check_mem_data(struct i2c_client *client)
+{
+	u8 read_buf[4]  = {0};
+	
+	msleep(30);
+	gsl_ts_read(client,0xb0, read_buf, sizeof(read_buf));
+	
+	if (read_buf[3] != 0x5a || read_buf[2] != 0x5a || read_buf[1] != 0x5a || read_buf[0] != 0x5a)
+	{
+		printk("#########check mem read 0xb0 = %x %x %x %x #########\n", read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		init_chip(client);
+	}
+}
+
+#ifdef FILTER_POINT
+static void filter_point(u16 x, u16 y , u8 id)
+{
+	u16 x_err =0;
+	u16 y_err =0;
+	u16 filter_step_x = 0, filter_step_y = 0;
+	
+	id_sign[id] = id_sign[id] + 1;
+	if(id_sign[id] == 1)
+	{
+		x_old[id] = x;
+		y_old[id] = y;
+	}
+	
+	x_err = x > x_old[id] ? (x -x_old[id]) : (x_old[id] - x);
+	y_err = y > y_old[id] ? (y -y_old[id]) : (y_old[id] - y);
+
+	if( (x_err > FILTER_MAX && y_err > FILTER_MAX/3) || (x_err > FILTER_MAX/3 && y_err > FILTER_MAX) )
+	{
+		filter_step_x = x_err;
+		filter_step_y = y_err;
+	}
+	else
+	{
+		if(x_err > FILTER_MAX)
+			filter_step_x = x_err; 
+		if(y_err> FILTER_MAX)
+			filter_step_y = y_err;
+	}
+
+	if(x_err <= 2*FILTER_MAX && y_err <= 2*FILTER_MAX)
+	{
+		filter_step_x >>= 2; 
+		filter_step_y >>= 2;
+	}
+	else if(x_err <= 3*FILTER_MAX && y_err <= 3*FILTER_MAX)
+	{
+		filter_step_x >>= 1; 
+		filter_step_y >>= 1;
+	}	
+	else if(x_err <= 4*FILTER_MAX && y_err <= 4*FILTER_MAX)
+	{
+		filter_step_x = filter_step_x*3/4; 
+		filter_step_y = filter_step_y*3/4;
+	}	
+	
+	x_new = x > x_old[id] ? (x_old[id] + filter_step_x) : (x_old[id] - filter_step_x);
+	y_new = y > y_old[id] ? (y_old[id] + filter_step_y) : (y_old[id] - filter_step_y);
+
+	x_old[id] = x_new;
+	y_old[id] = y_new;
+}
+#else
+static void record_point(u16 x, u16 y , u8 id)
+{
+	u16 x_err =0;
+	u16 y_err =0;
+
+	id_sign[id]=id_sign[id]+1;
+	
+	if(id_sign[id]==1){
+		x_old[id]=x;
+		y_old[id]=y;
+	}
+
+	x = (x_old[id] + x)/2;
+	y = (y_old[id] + y)/2;
+		
+	if(x>x_old[id]){
+		x_err=x -x_old[id];
+	}
+	else{
+		x_err=x_old[id]-x;
+	}
+
+	if(y>y_old[id]){
+		y_err=y -y_old[id];
+	}
+	else{
+		y_err=y_old[id]-y;
+	}
+
+	if( (x_err > 3 && y_err > 1) || (x_err > 1 && y_err > 3) ){
+		x_new = x;     x_old[id] = x;
+		y_new = y;     y_old[id] = y;
+	}
+	else{
+		if(x_err > 3){
+			x_new = x;     x_old[id] = x;
+		}
+		else
+			x_new = x_old[id];
+		if(y_err> 3){
+			y_new = y;     y_old[id] = y;
+		}
+		else
+			y_new = y_old[id];
+	}
+
+	if(id_sign[id]==1){
+		x_new= x_old[id];
+		y_new= y_old[id];
+	}
+	
+}
+#endif
+
+#ifdef HAVE_TOUCH_KEY
+static void report_key(struct gsl_ts *ts, u16 x, u16 y)
+{
+	u16 i = 0;
+
+	for(i = 0; i < MAX_KEY_NUM; i++) 
+	{
+		if((gsl_key_data[i].x_min < x) && (x < gsl_key_data[i].x_max)&&(gsl_key_data[i].y_min < y) && (y < gsl_key_data[i].y_max))
+		{
+			key = gsl_key_data[i].key;	
+			input_report_key(ts->input, key, 1);
+			input_sync(ts->input); 		
+			key_state_flag = 1;
+			break;
+		}
+	}
+}
+#endif
+
+#if CFG_TP_USE_CONFIG
+static int tp_of_data_get(void)
+{
+    struct device_node *of_node;
+    enum of_gpio_flags flags;
+    unsigned int scope[2];
+    int ret = -1;
+
+    of_node = of_find_compatible_node(NULL, NULL, "gslX680");
+    if (of_node==NULL){
+        printk(KERN_ERR"%s,%d,find the gsxX680 dts err!\n",__func__, __LINE__);
+        return -1;
+    }
+
+	/* load tp regulator */
+	if (of_find_property(of_node, "tp_vcc", NULL)) {
+		ret = of_property_read_string(of_node, "tp_vcc", &cfg_dts.regulator);
+		if (ret < 0) {
+			printk("can not read tp_vcc power source\n");
+			cfg_dts.regulator = ctp_power_name;
+		}
+
+		if (of_property_read_u32_array(of_node, "vol_range", scope, 2)) {
+			printk(" failed to get voltage range\n");
+			scope[0] = CTP_POWER_MIN_VOL;
+			scope[1] = CTP_POWER_MAX_VOL;
+		}
+		cfg_dts.vol_min=scope[0];
+		cfg_dts.vol_max=scope[1];
+	}
+	
+	/* load irq number */
+    cfg_dts.sirq = irq_of_parse_and_map(of_node,0);
+    if (cfg_dts.sirq < 0) {
+        printk("No IRQ resource for tp\n");
+		return -ENODEV;
+	}
+
+	/* load gpio info */
+	if (!of_find_property(of_node, "reset_gpios", NULL)) {
+		printk("<isp>err: no config gpios\n");
+		goto fail;
+	}
+	gpio_reset = of_get_named_gpio_flags(of_node, "reset_gpios", 0, &flags);
+
+	cfg_dts.i2cNum = TP_I2C_ADAPTER;
+    
+	/* load tp i2c addr */
+	ret = of_property_read_u32(of_node, "reg", &cfg_dts.i2cAddr);
+	if (ret) {
+		printk(" failed to get i2c_addr\n");
+		goto fail;
+	}
+	
+	/* load other options */
+	ret = of_property_read_u32(of_node, "x_pixel", &cfg_dts.xMax);
+	if (ret) {
+		printk("failed to get x_pixel\r\n,set default:1280");
+		cfg_dts.xMax = SCREEN_MAX_X;
+	}
+
+	ret = of_property_read_u32(of_node, "y_pixel", &cfg_dts.yMax);
+	if (ret) {
+		printk("failed to get y_pixel\r\n,set default:800");
+		cfg_dts.yMax = SCREEN_MAX_Y;
+	}
+
+	ret = of_property_read_u32(of_node, "x_revert_en", &cfg_dts.xRevert);
+	if (ret) {
+		printk("failed to get x_revert_en\r\n,set default:1280");
+		cfg_dts.xRevert = 0;
+	}
+
+	ret = of_property_read_u32(of_node, "y_revert_en", &cfg_dts.yRevert);
+	if (ret) {
+		printk("failed to get y_revert_en\r\n,set default:800");
+		cfg_dts.yRevert = 0;
+	}
+
+	ret = of_property_read_u32(of_node, "xy_swap_en", &cfg_dts.XYSwap);
+	if (ret) {
+		printk("failed to get xy_swap_en, set default:0\r\n");
+		cfg_dts.XYSwap = 0;
+	}
+    
+	ret = of_property_read_u32(of_node, "rotate_degree", &cfg_dts.rotate);
+	if (ret) {
+		printk("failed to get rotate, set default:0\r\n");
+		cfg_dts.rotate = 0;
+	}
+
+	
+	printk("gpio num:%d, reset level:%d, i2c_addr:%02x, irq_number:%d,x_pixel:%d, y_pixel:%d, max_point:%d, rotate:%d, i2cNum:%d\n",
+		gpio_reset,
+		0,
+		cfg_dts.i2cAddr,
+		cfg_dts.sirq,
+		cfg_dts.xMax,
+		cfg_dts.yMax,
+		5,
+		cfg_dts.rotate,
+		cfg_dts.i2cNum);
+    
+        return 0;
+
+fail:
+	return -1;
+    
+}
+
+#endif
+
+static void report_data(struct gsl_ts *ts, u16 x, u16 y, u8 pressure, u8 id)
+{
+#ifdef HAVE_TOUCH_KEY
+	if(x > cfg_dts.xMax || y > cfg_dts.yMax)
+	{
+		report_key(ts,x,y);
+		return;
+	}
+#endif
+
+#ifdef REPORT_DATA_PROTOCOL_B
+	input_mt_slot(ts->input, id);	
+	input_mt_report_slot_state(ts->input, MT_TOOL_FINGER, true);
+	input_report_abs(ts->input, ABS_MT_POSITION_X, x);
+	input_report_abs(ts->input, ABS_MT_POSITION_Y, y);
+	input_report_abs(ts->input, ABS_MT_TOUCH_MAJOR, pressure);
+	input_report_abs(ts->input, ABS_MT_WIDTH_MAJOR, 1);
+#endif
+/* A protocol*/
+}
+
+static void gslX680_ts_worker(struct work_struct *work)
+{
+	int rc, i;
+	u8 id, touches;
+	u16 x, y;
+	
+	struct gsl_ts *ts = container_of(work, struct gsl_ts,work);
+	
+#ifdef GSL_NOID_VERSION
+	u32 tmp1;
+	u8 buf[4] = {0};
+	//struct gsl_touch_info cinfo = {0};
+	struct gsl_touch_info cinfo;
+#endif
+
+#ifdef GSL_MONITOR
+	if(i2c_lock_flag != 0)
+		goto i2c_lock_schedule;
+	else
+		i2c_lock_flag = 1;
+#endif
+
+	mutex_lock(&mutex);
+
+	print_info("=====gslX680_ts_worker=====\n");
+
+	rc = gsl_ts_read(ts->client, 0x80, ts->touch_data, ts->dd->data_size);
+
+	if (rc < 0) 
+	{
+		dev_err(&ts->client->dev, "read failed.------func:%s,line:%d\n",__func__,__LINE__);
+		goto schedule;
+	}
+		
+	touches = ts->touch_data[ts->dd->touch_index];
+	print_info("-----touches: %d -----\n", touches);		
+#ifdef GSL_NOID_VERSION
+	cinfo.finger_num = touches;
+	print_info("tp-gsl  finger_num = %d\n",cinfo.finger_num);
+	for(i = 0; i < (touches < MAX_CONTACTS ? touches : MAX_CONTACTS); i ++)
+	{
+		cinfo.x[i] = join_bytes( ( ts->touch_data[ts->dd->x_index  + 4 * i + 1] & 0xf),
+				ts->touch_data[ts->dd->x_index + 4 * i]);
+		cinfo.y[i] = join_bytes(ts->touch_data[ts->dd->y_index + 4 * i + 1],
+				ts->touch_data[ts->dd->y_index + 4 * i ]);
+		print_info("tp-gsl  x = %d y = %d \n",cinfo.x[i],cinfo.y[i]);
+	}
+	cinfo.finger_num=(ts->touch_data[3]<<24)|(ts->touch_data[2]<<16)
+		|(ts->touch_data[1]<<8)|(ts->touch_data[0]);
+	gsl_alg_id_main(&cinfo);
+	tmp1=gsl_mask_tiaoping();
+	print_info("[tp-gsl] tmp1=%x\n",tmp1);
+	if(tmp1>0&&tmp1<0xffffffff)
+	{
+		buf[0]=0xa;buf[1]=0;buf[2]=0;buf[3]=0;
+		gsl_ts_write(ts->client,0xf0,buf,4);
+		buf[0]=(u8)(tmp1 & 0xff);
+		buf[1]=(u8)((tmp1>>8) & 0xff);
+		buf[2]=(u8)((tmp1>>16) & 0xff);
+		buf[3]=(u8)((tmp1>>24) & 0xff);
+		print_info("tmp1=%08x,buf[0]=%02x,buf[1]=%02x,buf[2]=%02x,buf[3]=%02x\n",
+			tmp1,buf[0],buf[1],buf[2],buf[3]);
+		gsl_ts_write(ts->client,0x8,buf,4);
+	}
+	touches = cinfo.finger_num;
+#endif
+	
+	//for(i = 1; i <= MAX_CONTACTS; i ++)
+	for(i = 0; i < MAX_CONTACTS; i ++)
+	{
+		if(touches == 0)
+			id_sign[i] = 0;	
+		id_state_flag[i] = 0;
+	}
+	for(i= 0;i < (touches > MAX_FINGERS ? MAX_FINGERS : touches);i ++)
+	{
+	#ifdef GSL_NOID_VERSION
+		id = cinfo.id[i]-1;//sunjl added,for slot id should be 0-9,not 1-10.
+		y =  cinfo.x[i];
+		x =  cinfo.y[i];
+	#else
+		y = join_bytes( ( ts->touch_data[ts->dd->x_index  + 4 * i + 1] & 0xf),
+				ts->touch_data[ts->dd->x_index + 4 * i]);
+		x = join_bytes(ts->touch_data[ts->dd->y_index + 4 * i + 1],
+				ts->touch_data[ts->dd->y_index + 4 * i ]);
+		id = ts->touch_data[ts->dd->id_index + 4 * i] >> 4;
+	#endif
+		x=x*cfg_dts.xMax/2048;
+		y=y*cfg_dts.yMax/2048;
+	//printk("raw(x,y):(%d,%d)\n",x,y);
+	#if CFG_TP_USE_CONFIG
+    if (cfg_dts.XYSwap == 1)
+    {
+        int tmp;
+        tmp=x;
+        x=y;
+        y=tmp;
+    }
+    
+    if(cfg_dts.xRevert == 1)
+    {   
+        x = cfg_dts.xMax - x;
+    }
+    
+    if(cfg_dts.yRevert == 1)
+    {
+        y = cfg_dts.yMax - y;
+    }
+    
+    
+    if(cfg_dts.rotate == 90) //anticlockwise 90 angle
+    {
+        int tmp;
+        tmp = x;
+        x = y;
+        y = cfg_dts.xMax-tmp;
+    }else if(cfg_dts.rotate == 180) //anticlockwise 180 angle
+    {
+        x = cfg_dts.xMax - x;
+        y = cfg_dts.yMax - y;
+    } else if(cfg_dts.rotate == 270) //anticlockwise 270 angle
+    {
+        int tmp;
+        tmp = x;
+        x = cfg_dts.yMax-y;
+        y = tmp;
+    }
+
+	#endif
+	//printk("new(x,y):(%d,%d)\n",x,y);
+
+		if(0 <=id && id < MAX_CONTACTS)
+		{
+		#ifdef FILTER_POINT
+			filter_point(x, y ,id);
+			report_data(ts, x_new, y_new, 10, id);		
+		#else 
+			#if defined(RECORD_POINT)
+				record_point(x, y , id);
+				report_data(ts, x_new, y_new, 10, id);		
+			#else
+				report_data(ts, x, y, 10, id);		
+			#endif
+		#endif
+			id_state_flag[id] = 1;
+		}
+	}
+	
+	for(i = 0; i < MAX_CONTACTS; i++)
+	{	
+		if( (0 == touches) || ((0 != id_state_old_flag[i]) && (0 == id_state_flag[i])) )
+		{
+		#ifdef REPORT_DATA_PROTOCOL_B
+			input_mt_slot(ts->input, i);
+			//input_report_abs(ts->input, ABS_MT_TRACKING_ID, -1);
+			input_mt_report_slot_state(ts->input, MT_TOOL_FINGER, false);
+		#endif
+			id_sign[i]=0;
+		}
+		id_state_old_flag[i] = id_state_flag[i];
+	}
+/* A protocol*/
+
+	input_sync(ts->input);
+
+schedule:
+	mutex_unlock(&mutex); 
+#ifdef GSL_MONITOR
+	i2c_lock_flag = 0;
+i2c_lock_schedule:
+#endif
+	//enable_irq(ts->irq);
+
+	print_info("=====gslX680_ts_worker end=====\n");
+	return;	
+}
+
+#ifdef GSL_MONITOR
+static void gsl_monitor_worker(struct work_struct *data)
+{
+	//char write_buf[4] = {0};
+	char read_buf[4]  = {0};
+	char download_flag = 0;
+	
+	print_info("----------------gsl_monitor_worker-----------------\n");	
+
+	if(i2c_lock_flag != 0)
+		goto queue_monitor_work;
+	else
+		i2c_lock_flag = 1;
+		mutex_lock(&mutex); 
+	gsl_ts_read(gsl_client, 0xb0, read_buf, 4);
+	if(read_buf[3] != 0x5a || read_buf[2] != 0x5a || read_buf[1] != 0x5a || read_buf[0] != 0x5a)
+		b0_counter ++;
+	else
+		b0_counter = 0;
+
+	if(b0_counter > 1)
+	{
+		printk("======read 0xb0: %x %x %x %x ======\n",read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		download_flag = 1;
+		b0_counter = 0;
+		goto DOWNLOAD_FW;
+	}
+	
+	gsl_ts_read(gsl_client, 0xb4, read_buf, 4);	
+	int_2nd[3] = int_1st[3];
+	int_2nd[2] = int_1st[2];
+	int_2nd[1] = int_1st[1];
+	int_2nd[0] = int_1st[0];
+	int_1st[3] = read_buf[3];
+	int_1st[2] = read_buf[2];
+	int_1st[1] = read_buf[1];
+	int_1st[0] = read_buf[0];
+
+	if(int_1st[3] == int_2nd[3] && int_1st[2] == int_2nd[2] &&int_1st[1] == int_2nd[1] && int_1st[0] == int_2nd[0]) 
+	{
+		printk("======int_1st: %x %x %x %x , int_2nd: %x %x %x %x ======\n",int_1st[3], int_1st[2], int_1st[1], int_1st[0], int_2nd[3], int_2nd[2],int_2nd[1],int_2nd[0]);
+		download_flag = 1;
+		goto DOWNLOAD_FW;
+	}
+
+	gsl_ts_read(gsl_client, 0xbc, read_buf, 4);
+	if(read_buf[3] != 0 || read_buf[2] != 0 || read_buf[1] != 0 || read_buf[0] != 0)
+		bc_counter ++;
+	else
+		bc_counter = 0;
+
+	if(bc_counter > 1) 
+	{
+		printk("======read 0xbc: %x %x %x %x ======\n",read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		download_flag = 1;
+		bc_counter = 0;
+	}
+DOWNLOAD_FW:
+	if(1 == download_flag)
+	{		
+		init_chip(gsl_client);
+	}
+	
+	i2c_lock_flag = 0;
+	
+	mutex_unlock(&mutex); 
+	
+queue_monitor_work:
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 200);
+}
+#endif
+
+#ifdef RESUME_INIT_CHIP_WORK
+static void gslX680_init_worker (struct work_struct *work)
+{
+	init_chip(this_ts->client);
+	check_mem_data(this_ts->client);
+}
+#endif
+
+static irqreturn_t gsl_ts_irq(int irq, void *dev_id)
+{	
+	struct gsl_ts *ts = dev_id;
+	print_info("========gslX680 Interrupt=========\n");				 
+
+	if (!work_pending(&ts->work)) {
+		queue_work(ts->wq, &ts->work);
+	}else{
+		//printk("[GSLX680] work is pending,lost the interrupt.\n");
+	}
+	return IRQ_HANDLED;
+}
+
+#if CFG_TP_USE_CONFIG
+
+/********************TP DEBUG************************/
+
+/**************************************************************************/
+static ssize_t tp_rotate_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.rotate);
+}
+/**************************************************************************/
+static ssize_t tp_rotate_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.rotate=data;
+    return count;
+}
+/**************************************************************************/
+static ssize_t tp_xrevert_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.xRevert);
+}
+/**************************************************************************/
+static ssize_t tp_xrevert_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.xRevert=data;
+    return count;
+}
+
+/**************************************************************************/
+static ssize_t tp_yrevert_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.yRevert);
+}
+/**************************************************************************/
+static ssize_t tp_yrevert_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.yRevert=data;
+    return count;
+}
+
+/**************************************************************************/
+static ssize_t tp_xyswap_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.XYSwap);
+}
+/**************************************************************************/
+static ssize_t tp_xyswap_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.XYSwap=data;
+    return count;
+}
+
+static DEVICE_ATTR(tp_rotate, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_rotate_show, tp_rotate_store);
+static DEVICE_ATTR(tp_xrevert, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_xrevert_show, tp_xrevert_store);
+static DEVICE_ATTR(tp_yrevert, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_yrevert_show, tp_yrevert_store);
+static DEVICE_ATTR(tp_xyswap, 	S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_xyswap_show, tp_xyswap_store);
+
+static struct attribute *tp_attributes[] = { 
+    &dev_attr_tp_rotate.attr,
+	 &dev_attr_tp_xrevert.attr,
+	  &dev_attr_tp_yrevert.attr,
+	  &dev_attr_tp_xyswap.attr,
+    NULL
+};
+
+static const struct attribute_group tp_attr_group = {
+    .attrs  = tp_attributes,
+};
+#endif
+
+static int gslX680_ts_init(struct i2c_client *client, struct gsl_ts *ts)
+{
+	struct input_dev *input_device;
+	int rc = 0;
+	
+	printk("[GSLX680] Enter %s\n", __func__);
+
+	ts->dd = &devices[ts->device_id];
+
+	if (ts->device_id == 0) {
+		ts->dd->data_size = MAX_FINGERS * ts->dd->touch_bytes + ts->dd->touch_meta_data;
+		ts->dd->touch_index = 0;
+	}
+
+	ts->touch_data = kzalloc(ts->dd->data_size, GFP_KERNEL);
+	if (!ts->touch_data) {
+		pr_err("%s: Unable to allocate memory\n", __func__);
+		return -ENOMEM;
+	}
+
+	input_device = input_allocate_device();
+	if (!input_device) {
+		rc = -ENOMEM;
+		goto error_alloc_dev;
+	}
+
+	ts->input = input_device;
+	input_device->name = TP_NAME;
+	input_device->id.bustype = BUS_I2C;
+	input_device->dev.parent = &client->dev;
+	input_set_drvdata(input_device, ts);
+
+	__set_bit(EV_ABS,input_device->evbit);
+	__set_bit(INPUT_PROP_DIRECT, input_device->propbit);
+	input_mt_init_slots(input_device, MAX_CONTACTS, 0);
+	input_set_abs_params(input_device, ABS_MT_TOUCH_MAJOR, 0, 255, 0, 0);
+	input_set_abs_params(input_device, ABS_MT_WIDTH_MAJOR, 0, 255, 0, 0);
+
+#if CFG_TP_USE_CONFIG
+	if(cfg_dts.rotate == 90 || cfg_dts.rotate == 270)
+	{
+		input_set_abs_params(input_device, ABS_MT_POSITION_Y, 0, cfg_dts.xMax, 0, 0);
+		input_set_abs_params(input_device, ABS_MT_POSITION_X, 0, cfg_dts.yMax, 0, 0);
+	}
+	else{
+		input_set_abs_params(input_device, ABS_MT_POSITION_X, 0, cfg_dts.xMax, 0, 0);
+		input_set_abs_params(input_device, ABS_MT_POSITION_Y, 0, cfg_dts.yMax, 0, 0);
+	}
+#else
+    input_set_abs_params(input_device, ABS_MT_POSITION_X, 0, TP_MAX_X, 0, 0);
+    input_set_abs_params(input_device, ABS_MT_POSITION_Y, 0, TP_MAX_Y, 0, 0);
+#endif
+
+#ifdef HAVE_TOUCH_KEY
+	set_bit(EV_KEY, input_device->evbit);
+	input_device->evbit[0] = BIT_MASK(EV_KEY);
+	for (i = 0; i < MAX_KEY_NUM; i++)
+		set_bit(key_array[i], input_device->keybit);
+#endif
+
+#if CFG_TP_USE_CONFIG
+	client->irq = cfg_dts.sirq;
+#else
+		client->irq = TP_IRQ_PORT;
+#endif
+	ts->irq = client->irq;
+
+	ts->wq = create_singlethread_workqueue("kworkqueue_ts");
+	if (!ts->wq) {
+		dev_err(&client->dev, "Could not create workqueue\n");
+		goto error_wq_create;
+	}
+	flush_workqueue(ts->wq);	
+
+	INIT_WORK(&ts->work, gslX680_ts_worker);
+	
+#ifdef RESUME_INIT_CHIP_WORK	
+	ts->init_wq = create_singlethread_workqueue("ts_init_wq");
+	if (!ts->init_wq) {
+		dev_err(&client->dev, "Could not create ts_init_wq workqueue\n");
+		goto error_wq_create;
+	}
+	flush_workqueue(ts->init_wq);	
+	INIT_WORK(&ts->init_work, gslX680_init_worker);
+#endif
+	rc = input_register_device(input_device);
+	if (rc)
+		goto error_unreg_device;
+	
+	this_ts = ts;
+
+#if CFG_TP_USE_CONFIG
+	if (sysfs_create_group(&input_device->dev.kobj, &tp_attr_group) < 0){
+	    printk("create tp sysfs group error!");		
+	}
+#endif
+	return 0;
+
+error_unreg_device:
+	destroy_workqueue(ts->wq);
+error_wq_create:
+	input_free_device(input_device);
+error_alloc_dev:
+	kfree(ts->touch_data);
+	return rc;
+}
+
+static int gsl_ts_suspend(struct device *dev)
+{
+	flush_workqueue(this_ts->init_wq);
+    flush_work(&this_ts->init_work);
+
+	printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	gslX680_shutdown_low();
+	if (tp_regulator){
+		 current_val = regulator_get_voltage(tp_regulator);
+		 regulator_disable(tp_regulator);
+		 printk("Nova disable regulator %d\n",current_val);
+         power_is_on = 0;
+	}
+	return 0;
+}
+
+static int gsl_ts_resume_early(struct device *dev)
+{
+    int ret;
+
+    //printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+    pr_info("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+    if(1 == power_is_on)
+    {
+        printk("impossible: power is turned on!\n");
+        return 0;
+    }
+
+	if (tp_regulator)
+	{
+	    regulator_set_voltage(tp_regulator, CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+	    ret = regulator_enable(tp_regulator);
+	}
+
+#ifdef RESUME_INIT_CHIP_WORK
+	queue_work(this_ts->init_wq, &this_ts->init_work);
+#endif
+
+    power_is_on = 1;
+    return 0;
+}
+
+static int gsl_ts_resume(struct device *dev)
+{
+	int ret;
+
+	//printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	pr_info("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+
+    if(1 == power_is_on)
+    {
+        printk(" power is turned on!\n");
+        return 0;
+    }
+        
+	if (tp_regulator)
+	{
+	    regulator_set_voltage(tp_regulator, CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+	    ret = regulator_enable(tp_regulator);
+	}
+
+	#ifdef RESUME_INIT_CHIP_WORK
+	queue_work(this_ts->init_wq, &this_ts->init_work);
+	#endif
+    power_is_on = 1;
+    return 0;
+}
+
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+static void gsl_ts_early_suspend(struct early_suspend *h)
+{
+	int i=0;
+
+	printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	
+	disable_irq(this_ts->irq);
+	flush_workqueue(this_ts->wq);
+    flush_work(&this_ts->work);
+    
+	#ifdef GSL_MONITOR
+	printk( "gsl_ts_suspend () : cancel gsl_monitor_work\n");
+	cancel_delayed_work_sync(&gsl_monitor_work);
+	#endif
+
+#ifdef SLEEP_CLEAR_POINT
+	#ifdef REPORT_DATA_PROTOCOL_B
+	for(i =1;i<=MAX_CONTACTS;i++)
+	{	
+		input_mt_slot(this_ts->input, i);
+		input_mt_report_slot_state(this_ts->input, MT_TOOL_FINGER, false);
+	}
+	#endif
+	input_sync(this_ts->input);	
+#endif
+}
+
+static void gsl_ts_late_resume(struct early_suspend *h)
+{
+	enable_irq(this_ts->irq);
+	
+	//printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	pr_info("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	#ifdef GSL_MONITOR
+	printk( "gsl_ts_resume () : queue gsl_monitor_work\n");
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 500);
+	#endif
+}
+#endif
+
+#if 0  // used
+static void gsl_init_work_func(struct work_struct *work)
+{
+	struct gsl_ts *ts = container_of(work, struct gsl_ts,gsl_init_work);
+
+	gslX680_init();
+	init_chip(ts->client);
+	check_mem_data(ts->client);
+}
+#endif
+
+static int gsl_ts_probe(struct i2c_client *client,
+			const struct i2c_device_id *id)
+{
+	struct gsl_ts *ts;
+	int rc;
+
+	printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {
+		dev_err(&client->dev, "I2C functionality not supported\n");
+		return -ENODEV;
+	}
+ 
+	ts = kzalloc(sizeof(*ts), GFP_KERNEL);
+	if (!ts){
+		printk("kzalloc failed.\n");
+		return -ENOMEM;
+	}
+	gsl_client = client;
+	ts->client = client;
+	i2c_set_clientdata(client, ts);
+	ts->device_id = id->driver_data;
+
+	rc = gslX680_ts_init(client, ts);
+	if (rc < 0) {
+		dev_err(&client->dev, "GSLX680 init failed\n");
+		goto error_mutex_destroy;
+	}	
+
+	gslX680_init();
+	init_chip(ts->client);
+	check_mem_data(ts->client);
+
+	mutex_init(&mutex); 
+	//INIT_WORK(&ts->gsl_init_work, gsl_init_work_func);
+	//ts->gsl_init_workqueue = create_singlethread_workqueue("gsl_init_workqueue");
+	//queue_work(ts->gsl_init_workqueue, &ts->gsl_init_work);
+
+	rc=  request_irq(client->irq, gsl_ts_irq, IRQF_TRIGGER_RISING | IRQF_DISABLED, client->name, ts);
+	if (rc < 0) {
+		printk( "gsl_probe: request irq failed\n");
+		goto error_req_irq_fail;
+	}
+	
+	/* create debug attribute */
+	//rc = device_create_file(&ts->input->dev, &dev_attr_debug_enable);
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	ts->early_suspend.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN + 1;
+	//ts->early_suspend.level = EARLY_SUSPEND_LEVEL_DISABLE_FB + 1;
+	ts->early_suspend.suspend = gsl_ts_early_suspend;
+	ts->early_suspend.resume = gsl_ts_late_resume;
+	register_early_suspend(&ts->early_suspend);
+#endif
+	#ifdef GSL_MONITOR
+	printk( "gsl_ts_probe () : queue gsl_monitor_workqueue\n");
+	INIT_DELAYED_WORK(&gsl_monitor_work, gsl_monitor_worker);
+	gsl_monitor_workqueue = create_singlethread_workqueue("gsl_monitor_workqueue");
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 500);
+	#endif
+	
+	printk("[GSLX680] End %s\n", __func__);
+
+	return 0;
+
+//exit_set_irq_mode:	
+error_req_irq_fail:
+	free_irq(ts->irq, ts);	
+
+error_mutex_destroy:
+	input_free_device(ts->input);
+	kfree(ts);
+	return rc;
+}
+
+static int gsl_ts_remove(struct i2c_client *client)
+{
+	struct gsl_ts *ts = i2c_get_clientdata(client);
+	printk("==gsl_ts_remove=\n");
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	unregister_early_suspend(&ts->early_suspend);
+#endif
+	//cancel_work_sync(&ts->gsl_init_work);
+	//destroy_workqueue(ts->gsl_init_workqueue);
+
+	device_init_wakeup(&client->dev, 0);
+	cancel_work_sync(&ts->work);
+	free_irq(ts->irq, ts);
+	destroy_workqueue(ts->wq);
+
+	#ifdef RESUME_INIT_CHIP_WORK
+	cancel_work_sync(&ts->init_work);
+	destroy_workqueue(ts->init_wq);
+	#endif
+
+#if CFG_TP_USE_CONFIG
+	sysfs_remove_group(&ts->input->dev.kobj, &tp_attr_group);
+#endif
+	input_unregister_device(ts->input);
+	//device_remove_file(&ts->input->dev, &dev_attr_debug_enable);
+	#ifdef GSL_MONITOR
+	cancel_delayed_work_sync(&gsl_monitor_work);
+	destroy_workqueue(gsl_monitor_workqueue);
+	#endif
+
+	kfree(ts->touch_data);
+	kfree(ts);
+
+	return 0;
+}
+
+static void gsl_ts_shutdown(struct i2c_client *client)
+{
+	printk("==gsl_ts_shutdown==\n");
+    gsl_ts_remove(client);
+	if ( tp_regulator ){
+		regulator_deinit(tp_regulator);
+		tp_regulator = NULL;
+	}
+}
+
+static const struct i2c_device_id gsl_ts_id[] = {
+	{GSLX680_I2C_NAME, 0},
+	{}
+};
+MODULE_DEVICE_TABLE(i2c, gsl_ts_id);
+static unsigned short gsl_addresses[] = {
+	GSLX680_I2C_ADDR,
+	I2C_CLIENT_END,
+};
+
+static struct dev_pm_ops tp_pm_ops = {
+    .resume_early = gsl_ts_resume_early,
+    .suspend       = gsl_ts_suspend,
+    .resume = gsl_ts_resume,
+};
+
+static struct of_device_id gsl_of_match[] = {
+	{ .compatible = "gslX680" },
+	{ }
+};
+
+static struct i2c_driver gsl_ts_driver = {
+	.driver = {
+		.name = GSLX680_I2C_NAME,
+		.owner = THIS_MODULE,
+		.pm = &tp_pm_ops,
+		.of_match_table	= of_match_ptr(gsl_of_match),
+	},
+	.probe		= gsl_ts_probe,
+	.remove		= gsl_ts_remove,
+	.shutdown	=	gsl_ts_shutdown,
+	.id_table	= gsl_ts_id,
+	.address_list	= gsl_addresses,
+};
+static struct i2c_board_info tp_info = {
+	.type	= GSLX680_I2C_NAME,
+};
+
+#if CFG_TP_USE_CONFIG
+static int tp_config_init(void)
+{
+    cfg_dts.rotate=TP_ROTATE_DEFAULT;
+    cfg_dts.xMax=TP_MAX_X;
+    cfg_dts.yMax=TP_MAX_Y;
+    cfg_dts.xRevert=TP_XREVERT;
+    cfg_dts.yRevert=TP_YREVERT;
+    cfg_dts.XYSwap=TP_XYSWAP;
+    return 0;
+}
+#endif
+
+static int __init gsl_ts_init(void)
+{
+	//struct i2c_adapter *adap = NULL;
+	int ret;
+	
+	printk("==gsl_ts_init==\n");
+	
+#if CFG_TP_USE_CONFIG
+	tp_config_init();
+
+	ret = tp_of_data_get();
+	if(ret<0) {
+		printk("Please complete the TP configuration item!!!\n\n");
+	}
+	tp_info.addr = cfg_dts.i2cAddr;
+
+	tp_regulator = regulator_init(cfg_dts.regulator, 
+   		cfg_dts.vol_min, cfg_dts.vol_max);
+#else
+	gpio_reset = TP_RESET_PIN;
+	tp_info.addr = TP_I2C_ADDR;
+
+	tp_regulator = regulator_init(CTP_POWER_ID, 
+   		CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+#endif
+
+	if ( !tp_regulator ) {
+	   printk("Nova tp init power failed");
+	   ret = -EINVAL;
+	   return ret;
+	}
+
+	gpio_request(gpio_reset, GSLX680_I2C_NAME);
+
+#if 0
+#if CFG_TP_USE_CONFIG
+	adap = i2c_get_adapter(cfg_dts.i2cNum);
+#else
+	adap = i2c_get_adapter(TP_I2C_ADAPTER);
+#endif
+	gsl_ts_device = i2c_new_device(adap, &tp_info); 
+#endif
+
+	ret = i2c_add_driver(&gsl_ts_driver);
+	printk("i2c_add_driver,ret=%d\n",ret);
+	return ret;
+}
+
+static void __exit gsl_ts_exit(void)
+{
+	printk("==gsl_ts_exit==\n");
+	
+	i2c_del_driver(&gsl_ts_driver);
+	if ( tp_regulator ){
+		regulator_deinit(tp_regulator);
+		tp_regulator = NULL;
+	}
+	gpio_free(gpio_reset);
+    #if 0
+	if(gsl_ts_device){
+		i2c_unregister_device(gsl_ts_device);
+		gsl_ts_device = NULL;
+	}
+    #endif
+	return;
+}
+
+module_init(gsl_ts_init);
+module_exit(gsl_ts_exit);
+
+MODULE_LICENSE("GPL");
+MODULE_DESCRIPTION("GSLX680 touchscreen controller driver");
+MODULE_AUTHOR("Guan Yuwei, guanyuwei@basewin.com");
+MODULE_ALIAS("platform:gsl_ts");
+
diff --git a/drivers/input/touchscreen/GSL1680F/gsl1680.h b/drivers/input/touchscreen/GSL1680F/gsl1680.h
new file mode 100755
index 0000000..e18facb
--- /dev/null
+++ b/drivers/input/touchscreen/GSL1680F/gsl1680.h
@@ -0,0 +1,5610 @@
+#ifndef _GSLX680_H_
+#define _GSLX680_H_
+
+
+#define SCREEN_MAX_X 		1024	
+#define SCREEN_MAX_Y 		600
+
+#define TP_ROTATE_DEFAULT 3
+#define TP_XREVERT 0
+#define TP_YREVERT 0
+#define TP_XYSWAP 0
+
+struct fw_data
+{
+    u32 offset : 8;
+    u32 : 0;
+    u32 val;
+};
+
+#define 	GSL_NOID_VERSION	/* \C8\E7\B9\FB\D3\C3\CE\DEID\CB㷨\B5\F7\B5Ĳ\CE\CA\FD\A3\ACҪ\B4\F2\BF\AA\D5\E2\B8\F6\BA꣬\B7\F1\D4\F2\B2\BB\C4ܴ򿪣\AC3670\B5Ĳ\CE\CA\FD\CA\C7\D3\C3\CE\DEID\CB㷨\B5\F7\B5\C4*/
+#ifdef	GSL_NOID_VERSION
+struct gsl_touch_info
+{
+	int x[10];
+	int y[10];
+	int id[10];
+	int finger_num;	
+};
+extern unsigned int gsl_mask_tiaoping(void);
+extern unsigned int gsl_version_id(void);
+extern void gsl_alg_id_main(struct gsl_touch_info *cinfo);
+extern void gsl_DataInit(int *ret);
+/*
+unsigned int gsl_config_versions[]=
+{
+	0xa55a0003,//\B0汾
+	0x168045,//оƬ\D0ͺ\C5
+	0,//\BF\D5
+	0,0,0,0,//\B7\BD\B0\B8\B9\AB˾0-3
+	0,0,0,0,//\CF\EEĿ\C3\FB\B3\C64-7
+	0,0,0,0,//ƽ̨8-11
+	0,0,0,0,//TP\B3\A712-15
+	0,//TP\B3ߴ\E716
+	
+	0,0,0,0,//\B0汾\A3\AC\D0\D5\C3\FB1\A3\AC\D0\D5\C3\FB2\A3\AC\C8\D5\C6\DA17-20
+	0,0,0,0,
+	0,0,0,0,
+	0,0,0,0,
+	0,0,0,0,
+
+	0,0,0,0,
+	0,0,0,0,
+	0,0,0,0,
+	0,0,0,0,
+	0,0,0,0,
+}
+*/
+
+unsigned int gsl_config_data_id[512] =
+{
+	0x7acaba,  
+	0x200,
+	0,0,
+	0,
+	0,0,0,
+	0,0,0,0,0,0,0,0xcf440ee,
+
+
+	0x40100100,0x5,0xa000f,0xa000f,0x8000800,0,0x5100,0x8e00,
+	0,0x320014,0,0,0,0,0,0,
+	0x8,0x4000,0x1000,0x10000000,0x10000000,0,0,0x5050505,
+	0x9249240,0x400,0xc00019,0xb30023,0xa6002d,0x9a0037,0xc00019,0xb30023,
+	0xa6002d,0x9a0037,0xc00014,0xb3001e,0xa60028,0x9a0032,0xc00014,0xb3001e,
+	0xa60028,0x9a0032,0x804000,0x90040,0x90001,0,0,0,
+	0,0,0,0x14012c,0xa003c,0xa0078,0x400,0x1081,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+	0,//key_map
+	0x3200384,0x64,0x503e8,//0
+	0,0,0,//1
+	0,0,0,//2
+	0,0,0,//3
+	0,0,0,//4
+	0,0,0,//5
+	0,0,0,//6
+	0,0,0,//7
+
+	0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+
+	0x220,
+	0,0,0,0,0,0,0,0,
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,
+
+
+	0x3,
+	0x101,0,0x100,0,
+	0x20,0x10,0x8,0x4,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,
+};
+#endif
+
+static const struct fw_data GSLX680_FW[] = {
+
+{0xf0,0x2},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x12378654},
+{0xf0,0x3},
+{0x00,0xadf64f6b},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00005100},
+{0x28,0x00008e00},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000100},
+{0x54,0x000000a0},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x1a0ac00a},
+{0x68,0x00000002},
+{0x6c,0x0000000f},
+{0x70,0x00000000},
+{0x74,0xffffffff},
+{0x78,0xffffffec},
+{0x7c,0x00000000},
+{0xf0,0x4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x000000c8},
+{0x0c,0x00000000},
+{0x10,0xfe0cff06},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00010000},
+{0x34,0x000a0fff},
+{0x38,0x0000000a},
+{0x3c,0x00000258},
+{0x40,0x00000000},
+{0x44,0x04020a00},
+{0x48,0x0014012c},
+{0x4c,0x9a050004},
+{0x50,0x00000000},
+{0x54,0x00010203},
+{0x58,0x04050607},
+{0x5c,0x08090a0b},
+{0x60,0x0c0d0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1c1d1e1f},
+{0x74,0x0014000a},
+{0x78,0x80808080},
+{0x7c,0xcba981f4},
+{0xf0,0x5},
+{0x00,0x00000000},
+{0x04,0x00000005},
+{0x08,0x000000b4},
+{0x0c,0x80802d26},
+{0x10,0x0000000a},
+{0x14,0x00000000},
+{0x18,0x00010fff},
+{0x1c,0x10000000},
+{0x20,0x10000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000400},
+{0x30,0x80808080},
+{0x34,0x80808080},
+{0x38,0x80808080},
+{0x3c,0x80808080},
+{0x40,0x80808080},
+{0x44,0x80808080},
+{0x48,0x80808080},
+{0x4c,0x80808000},
+{0x50,0xffffffff},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000220},
+{0x78,0x0000000f},
+{0x7c,0x0000000a},
+{0xf0,0x6},
+{0x00,0x0000000f},
+{0x04,0x00000000},
+{0x08,0x0000000a},
+{0x0c,0x04030402},
+{0x10,0x00000032},
+{0x14,0x1414140a},
+{0x18,0x00000000},
+{0x1c,0x00000001},
+{0x20,0x00002904},
+{0x24,0x00000800},
+{0x28,0x00000800},
+{0x2c,0xf801000c},
+{0x30,0xf801000c},
+{0x34,0x00000006},
+{0x38,0x00000003},
+{0x3c,0x00010fff},
+{0x40,0x80000000},
+{0x44,0x00140014},
+{0x48,0x00000fff},
+{0x4c,0x04040402},
+{0x50,0x00020001},
+{0x54,0x00000400},
+{0x58,0x00004000},
+{0x5c,0x09249240},
+{0x60,0x20100804},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x000000b4},
+{0x78,0x000a003c},
+{0x7c,0x00000000},
+{0xf0,0x7},
+{0x00,0x01040007},
+{0x04,0x03060209},
+{0x08,0x0508040a},
+{0x0c,0x07110610},
+{0x10,0x09130812},
+{0x14,0x00123456},
+{0x18,0x00000000},
+{0x1c,0x000a0078},
+{0x20,0x00001081},
+{0x24,0xff080010},
+{0x28,0xff080120},
+{0x2c,0xff080140},
+{0x30,0xff080160},
+{0x34,0x001700ff},
+{0x38,0x001200dd},
+{0x3c,0x001200bb},
+{0x40,0x00000000},
+{0x44,0x005000c8},
+{0x48,0x40100100},
+{0x4c,0x320f0f03},
+{0x50,0x00000000},
+{0x54,0x00000004},
+{0x58,0x00030000},
+{0x5c,0x00090004},
+{0x60,0x000d000a},
+{0x64,0x000e000e},
+{0x68,0x00030000},
+{0x6c,0x00050000},
+{0x70,0x00030000},
+{0x74,0x00000000},
+{0x78,0x00012345},
+{0x7c,0x006789ab},
+{0xf0,0x8},
+{0x00,0x026f028f},
+{0x04,0x02af02cf},
+{0x08,0x22ef230f},
+{0x0c,0x232f234f},
+{0x10,0x21f321f4},
+{0x14,0x41f541f6},
+{0x18,0x41f741f8},
+{0x1c,0x71f901fa},
+{0x20,0x01f401f5},
+{0x24,0x01f601f7},
+{0x28,0x01f801f9},
+{0x2c,0x01fa0000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x01030507},
+{0x44,0x09000000},
+{0x48,0x00000000},
+{0x4c,0x02040608},
+{0x50,0x0a000000},
+{0x54,0x00000000},
+{0x58,0x00070005},
+{0x5c,0x00000008},
+{0x60,0x0000012c},
+{0x64,0x04030201},
+{0x68,0x0a080804},
+{0x6c,0x00000100},
+{0x70,0x000000cd},
+{0x74,0x0000008c},
+{0x78,0x00000000},
+{0x7c,0x0000000a},
+{0xf0,0x9},
+{0x00,0xff080094},
+{0x04,0x00070011},
+{0x08,0xff080090},
+{0x0c,0x00040000},
+{0x10,0xff080068},
+{0x14,0x00030000},
+{0x18,0xff080064},
+{0x1c,0x01002582},
+{0x20,0xff080060},
+{0x24,0x00000000},
+{0x28,0xff08004c},
+{0x2c,0x00197fff},
+{0x30,0xfffffff0},
+{0x34,0x00000000},
+{0x38,0xfffffff0},
+{0x3c,0x00000000},
+{0x40,0xfffffff0},
+{0x44,0x00000000},
+{0x48,0xfffffff0},
+{0x4c,0x00000000},
+{0x50,0xfffffff0},
+{0x54,0x00000000},
+{0x58,0xfffffff0},
+{0x5c,0x00000000},
+{0x60,0xfffffff0},
+{0x64,0x00000000},
+{0x68,0xfffffff0},
+{0x6c,0x00000000},
+{0x70,0xfffffff0},
+{0x74,0x00000000},
+{0x78,0xfffffff0},
+{0x7c,0x00000000},
+/*
+{0xf0,0xe0},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x006401f4},
+{0x44,0x00640064},
+{0x48,0x01900064},
+{0x4c,0x00500190},
+{0x50,0x00500050},
+{0x54,0x012c0050},
+{0x58,0x012c012c},
+{0x5c,0x003c012c},
+{0x60,0x0064000f},
+{0x64,0x00640064},
+{0x68,0x00000032},
+{0x6c,0x00500000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe1},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000002},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe2},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe3},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe5},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe6},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+*/
+
+
+
+{0xf0,0x1e},
+{0x00,0x5a5a0f00},
+{0x04,0x00003080},
+{0x08,0x000030e8},
+{0x0c,0x00003160},
+{0x10,0x00003290},
+{0x14,0x0000337c},
+{0x18,0x00003550},
+{0x1c,0x000036ec},
+{0x20,0x00003860},
+{0x24,0x00003a28},
+{0x28,0x00003b90},
+{0x2c,0x00003e04},
+{0x30,0x00003f78},
+{0x34,0x00004080},
+{0x38,0x00004130},
+{0x3c,0x0000425c},
+{0x40,0x000045b0},
+{0x44,0x00004654},
+{0x48,0x00004758},
+{0x4c,0x0000493c},
+{0x50,0x00004a5c},
+{0x54,0x00004b18},
+{0x58,0x00004d10},
+{0x5c,0x00004ff4},
+{0x60,0x00005390},
+{0x64,0x00005474},
+{0x68,0x000054b4},
+{0x6c,0x000055d0},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x1f},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00002644},
+{0x50,0x000026f4},
+{0x54,0x00000000},
+{0x58,0x000027a4},
+{0x5c,0x00000000},
+{0x60,0x000028c0},
+{0x64,0x00002bdc},
+{0x68,0x00000000},
+{0x6c,0x00002ca0},
+{0x70,0x00002e18},
+{0x74,0x00002eb8},
+{0x78,0x0000565c},
+{0x7c,0x5a5a0ffc},
+{0xf0,0x0},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x233fc0c0},
+{0x10,0xa2146004},
+{0x14,0xa4102000},
+{0x18,0xe4244000},
+{0x1c,0x233fc0c0},
+{0x20,0xa2146010},
+{0x24,0x2500003f},
+{0x28,0xa414a3ff},
+{0x2c,0xe4244000},
+{0x30,0x01000000},
+{0x34,0x821020e0},
+{0x38,0x81880001},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0xa410200f},
+{0x48,0xe4a00040},
+{0x4c,0x01000000},
+{0x50,0xa0100000},
+{0x54,0xa2100000},
+{0x58,0xa4100000},
+{0x5c,0xa6100000},
+{0x60,0xa8100000},
+{0x64,0xaa100000},
+{0x68,0xac100000},
+{0x6c,0xae100000},
+{0x70,0x90100000},
+{0x74,0x92100000},
+{0x78,0x94100000},
+{0x7c,0x96100000},
+{0xf0,0x1},
+{0x00,0x98100000},
+{0x04,0x9a100000},
+{0x08,0x9c100000},
+{0x0c,0x9e100000},
+{0x10,0x84100000},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0x82100000},
+{0x20,0x81900001},
+{0x24,0x82100000},
+{0x28,0x81980001},
+{0x2c,0x81800000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0xbc102cf8},
+{0x40,0x9c102c78},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0x27001040},
+{0x50,0xa614e00f},
+{0x54,0xe6a00040},
+{0x58,0x01000000},
+{0x5c,0x40000309},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x10bfffff},
+{0x6c,0x01000000},
+{0x70,0x03169684},
+{0x74,0x82106050},
+{0x78,0x03296945},
+{0x7c,0x82106288},
+{0xf0,0x1a},
+{0x00,0x9de3bf98},
+{0x04,0x40000010},
+{0x08,0x01000000},
+{0x0c,0x40000007},
+{0x10,0x01000000},
+{0x14,0x400002ff},
+{0x18,0x01000000},
+{0x1c,0x40000015},
+{0x20,0x01000000},
+{0x24,0x30bffffe},
+{0x28,0x82102001},
+{0x2c,0x81904000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x03000008},
+{0x48,0x82106342},
+{0x4c,0xa3804000},
+{0x50,0x03000004},
+{0x54,0x82106000},
+{0x58,0x81984000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x81c3e008},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0xa7800000},
+{0xf0,0x1b},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x81c3e008},
+{0x10,0x01000000},
+{0x14,0x80a22000},
+{0x18,0x02800006},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x90823fff},
+{0x28,0x12bffffe},
+{0x2c,0x01000000},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x05001040},
+{0x40,0x8410a00f},
+{0x44,0xc4a00040},
+{0x48,0x01000000},
+{0x4c,0x81c3e008},
+{0x50,0x01000000},
+{0x54,0x9de3bf18},
+{0x58,0xb2067fff},
+{0x5c,0x96100018},
+{0x60,0xf227bf7c},
+{0x64,0xc027bf78},
+{0x68,0x98102000},
+{0x6c,0xb007bff8},
+{0x70,0xd4063f80},
+{0x74,0xda063f84},
+{0x78,0xb810000a},
+{0x7c,0x98033fff},
+{0xf0,0x1c},
+{0x00,0xb0063ff8},
+{0x04,0x80a2800d},
+{0x08,0x16800031},
+{0x0c,0xb610000d},
+{0x10,0xbb2aa002},
+{0x14,0x832b6002},
+{0x18,0xb207400b},
+{0x1c,0xb400400b},
+{0x20,0xde02c01d},
+{0x24,0x80a7001b},
+{0x28,0x1680001c},
+{0x2c,0x01000000},
+{0x30,0xc2068000},
+{0x34,0x80a0400f},
+{0x38,0x04800005},
+{0x3c,0x80a7001b},
+{0x40,0xb606ffff},
+{0x44,0x10bffff8},
+{0x48,0xb406bffc},
+{0x4c,0x16800013},
+{0x50,0x80a7001b},
+{0x54,0xc2068000},
+{0x58,0xc2264000},
+{0x5c,0xb8072001},
+{0x60,0x80a7001b},
+{0x64,0x1680000d},
+{0x68,0xb2066004},
+{0x6c,0xc2064000},
+{0x70,0x80a0400f},
+{0x74,0x26bffffb},
+{0x78,0xb8072001},
+{0x7c,0x80a7001b},
+{0xf0,0x1d},
+{0x00,0x16800006},
+{0x04,0x01000000},
+{0x08,0xc2268000},
+{0x0c,0xb606ffff},
+{0x10,0xb406bffc},
+{0x14,0x80a7001b},
+{0x18,0x12bfffe4},
+{0x1c,0x80a7001b},
+{0x20,0xb0062008},
+{0x24,0x82073fff},
+{0x28,0xc2263f84},
+{0x2c,0xd4263f80},
+{0x30,0x832f2002},
+{0x34,0xb0062008},
+{0x38,0xde22c001},
+{0x3c,0xba072001},
+{0x40,0xfa263f80},
+{0x44,0xda263f84},
+{0x48,0x98032002},
+{0x4c,0x80a33fff},
+{0x50,0x34bfffc9},
+{0x54,0xd4063f80},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x20},
+{0x00,0x83580000},
+{0x04,0x82086ff0},
+{0x08,0x83306004},
+{0x0c,0x80a06005},
+{0x10,0x02800024},
+{0x14,0x01000000},
+{0x18,0x80a06006},
+{0x1c,0x02800039},
+{0x20,0x01000000},
+{0x24,0x80a06015},
+{0x28,0x02800051},
+{0x2c,0x01000000},
+{0x30,0x80a0602a},
+{0x34,0x02800085},
+{0x38,0x01000000},
+{0x3c,0x073fc180},
+{0x40,0x8610e03c},
+{0x44,0x05169680},
+{0x48,0x84004002},
+{0x4c,0xc420c000},
+{0x50,0x073fc000},
+{0x54,0x8610e020},
+{0x58,0x84102001},
+{0x5c,0xc420c000},
+{0x60,0x0500000c},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x8480bfff},
+{0x70,0x12bffffe},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x073fc000},
+{0xf0,0x21},
+{0x00,0x8610e020},
+{0x04,0x84102000},
+{0x08,0xc420c000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x81c44000},
+{0x18,0x81cc8000},
+{0x1c,0x01000000},
+{0x20,0xa7500000},
+{0x24,0xa92ce002},
+{0x28,0xa734e001},
+{0x2c,0xa614c014},
+{0x30,0xa60ce007},
+{0x34,0x81900000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x81e00000},
+{0x44,0xe03ba000},
+{0x48,0xe43ba008},
+{0x4c,0xe83ba010},
+{0x50,0xec3ba018},
+{0x54,0xf03ba020},
+{0x58,0xf43ba028},
+{0x5c,0xf83ba030},
+{0x60,0xfc3ba038},
+{0x64,0x81e80000},
+{0x68,0x8194c000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x81c44000},
+{0x78,0x81cc8000},
+{0x7c,0x01000000},
+{0xf0,0x22},
+{0x00,0xa7500000},
+{0x04,0xa934e002},
+{0x08,0xa72ce001},
+{0x0c,0xa614c014},
+{0x10,0xa60ce007},
+{0x14,0x81900000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x81e80000},
+{0x24,0x81e80000},
+{0x28,0xe01ba000},
+{0x2c,0xe41ba008},
+{0x30,0xe81ba010},
+{0x34,0xec1ba018},
+{0x38,0xf01ba020},
+{0x3c,0xf41ba028},
+{0x40,0xf81ba030},
+{0x44,0xfc1ba038},
+{0x48,0x81e00000},
+{0x4c,0x81e00000},
+{0x50,0x8194c000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x81c44000},
+{0x60,0x81cc8000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x82102010},
+{0x70,0x273fc0c0},
+{0x74,0xa614e010},
+{0x78,0xc224c000},
+{0x7c,0x01000000},
+{0xf0,0x23},
+{0x00,0x033fc0c0},
+{0x04,0x82106004},
+{0x08,0xa6102000},
+{0x0c,0xe6204000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0xa6102020},
+{0x20,0x83480000},
+{0x24,0x82104013},
+{0x28,0x81884000},
+{0x2c,0x01000000},
+{0x30,0x400004ad},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0xa7500000},
+{0x44,0xa934e002},
+{0x48,0xa72ce001},
+{0x4c,0xa614c014},
+{0x50,0xa60ce007},
+{0x54,0x81900000},
+{0x58,0x01000000},
+{0x5c,0x81e80000},
+{0x60,0xe01ba000},
+{0x64,0xe41ba008},
+{0x68,0xe81ba010},
+{0x6c,0xec1ba018},
+{0x70,0xf01ba020},
+{0x74,0xf41ba028},
+{0x78,0xf81ba030},
+{0x7c,0xfc1ba038},
+{0xf0,0x24},
+{0x00,0x81e00000},
+{0x04,0x8194c000},
+{0x08,0x01000000},
+{0x0c,0xa6102020},
+{0x10,0x83480000},
+{0x14,0x82284013},
+{0x18,0x81884000},
+{0x1c,0x01000000},
+{0x20,0x033fc0c0},
+{0x24,0x82106004},
+{0x28,0xa6103fff},
+{0x2c,0xe6204000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c44000},
+{0x40,0x81cc8000},
+{0x44,0x01000000},
+{0x48,0x81c48000},
+{0x4c,0x81cca004},
+{0x50,0x01000000},
+{0x54,0x033fc140},
+{0x58,0x82106048},
+{0x5c,0xda004000},
+{0x60,0x03000040},
+{0x64,0x808b4001},
+{0x68,0x03000017},
+{0x6c,0x12800004},
+{0x70,0x90106380},
+{0x74,0x82006400},
+{0x78,0x901060c0},
+{0x7c,0x81c3e008},
+{0xf0,0x25},
+{0x00,0x01000000},
+{0x04,0x94102000},
+{0x08,0x96102000},
+{0x0c,0x832ae002},
+{0x10,0xd20063a4},
+{0x14,0x98102000},
+{0x18,0x832b2002},
+{0x1c,0x9b2aa002},
+{0x20,0xda02000d},
+{0x24,0x98032001},
+{0x28,0xda224001},
+{0x2c,0x80a32005},
+{0x30,0x04bffffa},
+{0x34,0x9402a001},
+{0x38,0x9602e001},
+{0x3c,0x80a2e003},
+{0x40,0x04bffff4},
+{0x44,0x832ae002},
+{0x48,0x81c3e008},
+{0x4c,0x01000000},
+{0x50,0x033fc200},
+{0x54,0x961060a0},
+{0x58,0x98102000},
+{0x5c,0x832b2002},
+{0x60,0x9a03000c},
+{0x64,0xda136400},
+{0x68,0x98032001},
+{0x6c,0x80a3200f},
+{0x70,0x04bffffb},
+{0x74,0xda20400b},
+{0x78,0x81c3e008},
+{0x7c,0x01000000},
+{0xf0,0x26},
+{0x00,0x82020008},
+{0x04,0x82004008},
+{0x08,0x9b326002},
+{0x0c,0x82004001},
+{0x10,0x8200400d},
+{0x14,0x83286002},
+{0x18,0x920a6003},
+{0x1c,0x932a6003},
+{0x20,0xd00065b0},
+{0x24,0x91320009},
+{0x28,0x81c3e008},
+{0x2c,0x900a20ff},
+{0x30,0x9a020008},
+{0x34,0x9a034008},
+{0x38,0x97326002},
+{0x3c,0x9a03400d},
+{0x40,0x9a03400b},
+{0x44,0x920a6003},
+{0x48,0x9b2b6002},
+{0x4c,0x932a6003},
+{0x50,0x821020ff},
+{0x54,0xd80365b0},
+{0x58,0x83284009},
+{0x5c,0x822b0001},
+{0x60,0x952a8009},
+{0x64,0x8210400a},
+{0x68,0xc22365b0},
+{0x6c,0x912a2002},
+{0x70,0xda0223a4},
+{0x74,0x972ae002},
+{0x78,0x81c3e008},
+{0x7c,0xc223400b},
+{0xf0,0x27},
+{0x00,0x82102005},
+{0x04,0x1b3fc200},
+{0x08,0x82204008},
+{0x0c,0x9a136008},
+{0x10,0x83286002},
+{0x14,0xd0034000},
+{0x18,0x91320001},
+{0x1c,0x81c3e008},
+{0x20,0x900a200f},
+{0x24,0x9de3bf58},
+{0x28,0xa12e2002},
+{0x2c,0xda1423da},
+{0x30,0xd61423d8},
+{0x34,0xc200247c},
+{0x38,0xb022c00d},
+{0x3c,0x825b4001},
+{0x40,0xb21e6001},
+{0x44,0x92862001},
+{0x48,0x0280000c},
+{0x4c,0x9a004019},
+{0x50,0xb0100009},
+{0x54,0x9807bfb8},
+{0x58,0x8203400d},
+{0x5c,0xc2168001},
+{0x60,0xc2230000},
+{0x64,0xc200247c},
+{0x68,0x9a034001},
+{0x6c,0xb0863fff},
+{0x70,0x12bffffa},
+{0x74,0x98032004},
+{0x78,0x7ffffe77},
+{0x7c,0x9007bfb8},
+{0xf0,0x28},
+{0x00,0xda1423ea},
+{0x04,0xd61423e8},
+{0x08,0x80a3400b},
+{0x0c,0x92102000},
+{0x10,0x1880000b},
+{0x14,0xb010000d},
+{0x18,0x832b6002},
+{0x1c,0x8200401e},
+{0x20,0x98007fb8},
+{0x24,0xc2030000},
+{0x28,0xb0062001},
+{0x2c,0x92024001},
+{0x30,0x80a6000b},
+{0x34,0x08bffffc},
+{0x38,0x98032004},
+{0x3c,0xb022c00d},
+{0x40,0xb0062001},
+{0x44,0x81800000},
+{0x48,0x01000000},
+{0x4c,0x01000000},
+{0x50,0x01000000},
+{0x54,0xb0724018},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x9de3bf98},
+{0x64,0xc200247c},
+{0x68,0x83306001},
+{0x6c,0x80a60001},
+{0x70,0x1a800006},
+{0x74,0x90100018},
+{0x78,0x7fffffc2},
+{0x7c,0x01000000},
+{0xf0,0x29},
+{0x00,0x10800006},
+{0x04,0xb0020008},
+{0x08,0x7fffffbe},
+{0x0c,0x90260001},
+{0x10,0x90020008},
+{0x14,0xb0022001},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0xa8102000},
+{0x28,0xc20023d4},
+{0x2c,0x80a50001},
+{0x30,0x1a800057},
+{0x34,0xe2002348},
+{0x38,0xa4102000},
+{0x3c,0xc200247c},
+{0x40,0x80a48001},
+{0x44,0x3a80004e},
+{0x48,0xa8052001},
+{0x4c,0x7fffffe5},
+{0x50,0x90100012},
+{0x54,0xaa100008},
+{0x58,0x90100014},
+{0x5c,0x7fffff89},
+{0x60,0x92100015},
+{0x64,0x80a62000},
+{0x68,0x12800004},
+{0x6c,0xa0100008},
+{0x70,0x10800016},
+{0x74,0xa0102000},
+{0x78,0x80a62009},
+{0x7c,0x18800011},
+{0xf0,0x2a},
+{0x00,0x80a62007},
+{0x04,0x7fffff54},
+{0x08,0x01000000},
+{0x0c,0x94100008},
+{0x10,0x90100014},
+{0x14,0x7fffffa4},
+{0x18,0x92100012},
+{0x1c,0x80a20011},
+{0x20,0x04800007},
+{0x24,0xa6100008},
+{0x28,0x9a102008},
+{0x2c,0x9a234018},
+{0x30,0x82102001},
+{0x34,0x8328400d},
+{0x38,0xa02c0001},
+{0x3c,0x80a62007},
+{0x40,0x18800008},
+{0x44,0x80a62008},
+{0x48,0x9a102007},
+{0x4c,0x9a234018},
+{0x50,0x82102001},
+{0x54,0x8328400d},
+{0x58,0x10800023},
+{0x5c,0xa0140001},
+{0x60,0x1280000a},
+{0x64,0x821e2009},
+{0x68,0x80a420fe},
+{0x6c,0x24800002},
+{0x70,0xa0042001},
+{0x74,0x03000019},
+{0x78,0x9b2ca002},
+{0x7c,0x82106080},
+{0xf0,0x2b},
+{0x00,0x10800019},
+{0x04,0xe6234001},
+{0x08,0x80a00001},
+{0x0c,0x9a603fff},
+{0x10,0x80a420fe},
+{0x14,0x04800003},
+{0x18,0x82102001},
+{0x1c,0x82102000},
+{0x20,0x808b4001},
+{0x24,0x02800011},
+{0x28,0x92100015},
+{0x2c,0x03000019},
+{0x30,0x9b2ca002},
+{0x34,0x82106080},
+{0x38,0xc2034001},
+{0x3c,0x80a04011},
+{0x40,0x18800003},
+{0x44,0x9a204011},
+{0x48,0x9a244001},
+{0x4c,0x80a4c011},
+{0x50,0x14800003},
+{0x54,0x8224c011},
+{0x58,0x82244013},
+{0x5c,0x80a34001},
+{0x60,0xa0642000},
+{0x64,0x92100015},
+{0x68,0x94100010},
+{0x6c,0x7fffff51},
+{0x70,0x90100014},
+{0x74,0x10bfffb2},
+{0x78,0xa404a001},
+{0x7c,0xc20023d4},
+{0xf0,0x2c},
+{0x00,0x80a50001},
+{0x04,0x0abfffae},
+{0x08,0xa4102000},
+{0x0c,0x81c7e008},
+{0x10,0x81e80000},
+{0x14,0x98102000},
+{0x18,0x9610201e},
+{0x1c,0x80a22000},
+{0x20,0x12800003},
+{0x24,0x8210000c},
+{0x28,0x8222c00c},
+{0x2c,0x83286002},
+{0x30,0xda006480},
+{0x34,0x80a37ff0},
+{0x38,0x02800006},
+{0x3c,0x98032002},
+{0x40,0xc2006484},
+{0x44,0x80a3201f},
+{0x48,0x04bffff5},
+{0x4c,0xc2234000},
+{0x50,0x81c3e008},
+{0x54,0x01000000},
+{0x58,0x9de3bf98},
+{0x5c,0xd8002660},
+{0x60,0xc200254c},
+{0x64,0x98130001},
+{0x68,0xda002508},
+{0x6c,0x033fc000},
+{0x70,0x9a0b4001},
+{0x74,0x153fc180},
+{0x78,0x03202020},
+{0x7c,0x82106080},
+{0xf0,0x2d},
+{0x00,0x9612a038},
+{0x04,0xc222c000},
+{0x08,0x03168000},
+{0x0c,0xd8202660},
+{0x10,0x80a34001},
+{0x14,0xc0228000},
+{0x18,0xa4102000},
+{0x1c,0x1280000b},
+{0x20,0xa8102000},
+{0x24,0x0300003f},
+{0x28,0xda002548},
+{0x2c,0x821063ff},
+{0x30,0x9a0b4001},
+{0x34,0xd8002508},
+{0x38,0x033fffc0},
+{0x3c,0x980b0001},
+{0x40,0x9a13400c},
+{0x44,0xda202548},
+{0x48,0x80a62000},
+{0x4c,0x16800027},
+{0x50,0x1b296956},
+{0x54,0x1b3fc040},
+{0x58,0xc2002548},
+{0x5c,0x8208400d},
+{0x60,0x1b168040},
+{0x64,0x80a0400d},
+{0x68,0x22800002},
+{0x6c,0xa4102001},
+{0x70,0xda002664},
+{0x74,0xc20021dc},
+{0x78,0x80a34001},
+{0x7c,0x1a80001b},
+{0xf0,0x2e},
+{0x00,0x1b296956},
+{0x04,0x031696a9},
+{0x08,0xda00250c},
+{0x0c,0x821061a5},
+{0x10,0x80a34001},
+{0x14,0x02800006},
+{0x18,0x03296956},
+{0x1c,0x8210625a},
+{0x20,0x80a34001},
+{0x24,0x12800011},
+{0x28,0x1b296956},
+{0x2c,0x11000018},
+{0x30,0x92122340},
+{0x34,0x40000179},
+{0x38,0x90122200},
+{0x3c,0x03000019},
+{0x40,0x96106240},
+{0x44,0xa8102001},
+{0x48,0x98102000},
+{0x4c,0x9b2b2002},
+{0x50,0x98032001},
+{0x54,0xc20365b0},
+{0x58,0x80a3201b},
+{0x5c,0x08bffffc},
+{0x60,0xc223400b},
+{0x64,0x1b296956},
+{0x68,0x80a00012},
+{0x6c,0x82380018},
+{0x70,0xa613625a},
+{0x74,0x90402000},
+{0x78,0x8330601f},
+{0x7c,0x1b1696a9},
+{0xf0,0x2f},
+{0x00,0xa21361a5},
+{0x04,0x9e104008},
+{0x08,0xd200254c},
+{0x0c,0xe0002548},
+{0x10,0x98102500},
+{0x14,0x80a32670},
+{0x18,0x0280001a},
+{0x1c,0x96033a50},
+{0x20,0xc200250c},
+{0x24,0x941b250c},
+{0x28,0x80a04013},
+{0x2c,0x02800007},
+{0x30,0x9a184011},
+{0x34,0x80a0000d},
+{0x38,0x82603fff},
+{0x3c,0x80904008},
+{0x40,0x0280000a},
+{0x44,0x80a3e000},
+{0x48,0x80a2e0f0},
+{0x4c,0x9a402000},
+{0x50,0x80a0000a},
+{0x54,0x82603fff},
+{0x58,0x80934001},
+{0x5c,0x3280000a},
+{0x60,0x98032004},
+{0x64,0x80a3e000},
+{0x68,0x02800005},
+{0x6c,0x82033960},
+{0x70,0x80a0603f},
+{0x74,0x28800004},
+{0x78,0x98032004},
+{0x7c,0xc0230000},
+{0xf0,0x30},
+{0x00,0x98032004},
+{0x04,0x80a32837},
+{0x08,0x08bfffe4},
+{0x0c,0x80a32670},
+{0x10,0x80a62000},
+{0x14,0x06800006},
+{0x18,0x0300003f},
+{0x1c,0x821063ff},
+{0x20,0x820a4001},
+{0x24,0x10800005},
+{0x28,0xc220254c},
+{0x2c,0xc21022d4},
+{0x30,0x83286010},
+{0x34,0xc22026a0},
+{0x38,0xc2002548},
+{0x3c,0xda0023c8},
+{0x40,0x90087dff},
+{0x44,0xd4002334},
+{0x48,0x9b336012},
+{0x4c,0x9402a001},
+{0x50,0xd800254c},
+{0x54,0x9a0b6200},
+{0x58,0x033fc200},
+{0x5c,0x9012000d},
+{0x60,0x92050014},
+{0x64,0x980b3ffd},
+{0x68,0x9732a001},
+{0x6c,0x82106030},
+{0x70,0xc2004000},
+{0x74,0x98130009},
+{0x78,0x9602800b},
+{0x7c,0x9b342018},
+{0xf0,0x31},
+{0x00,0xd820254c},
+{0x04,0xd620258c},
+{0x08,0xc220257c},
+{0x0c,0x80a3605a},
+{0x10,0xd4202554},
+{0x14,0xd4202588},
+{0x18,0x12800009},
+{0x1c,0xd0202548},
+{0x20,0x0300003f},
+{0x24,0x821063ff},
+{0x28,0x1b3fffc0},
+{0x2c,0x820a0001},
+{0x30,0x9a0c000d},
+{0x34,0x8210400d},
+{0x38,0xc2202548},
+{0x3c,0x80a4a001},
+{0x40,0x0280000c},
+{0x44,0x82102027},
+{0x48,0x03296956},
+{0x4c,0xda00250c},
+{0x50,0x8210625a},
+{0x54,0x80a34001},
+{0x58,0x1280000b},
+{0x5c,0x01000000},
+{0x60,0xc200254c},
+{0x64,0x80886002},
+{0x68,0x12800007},
+{0x6c,0x82102015},
+{0x70,0xc2202500},
+{0x74,0x7ffffe64},
+{0x78,0x901025b0},
+{0x7c,0x7ffffe75},
+{0xf0,0x32},
+{0x00,0x81e80000},
+{0x04,0x01000000},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x9de3bf98},
+{0x14,0x033fc0c0},
+{0x18,0xb6106004},
+{0x1c,0x35200040},
+{0x20,0x2f3fc200},
+{0x24,0x8216a101},
+{0x28,0xc225c000},
+{0x2c,0xc026c000},
+{0x30,0x400002b0},
+{0x34,0x90102000},
+{0x38,0x2b3fc140},
+{0x3c,0xda00247c},
+{0x40,0x98156040},
+{0x44,0xe8030000},
+{0x48,0xc20022f8},
+{0x4c,0x9b336001},
+{0x50,0x825b4001},
+{0x54,0xa80d3800},
+{0x58,0xa8150001},
+{0x5c,0xe8230000},
+{0x60,0x82156004},
+{0x64,0xe8004000},
+{0x68,0xa80d3fe0},
+{0x6c,0xa815000d},
+{0x70,0xe8204000},
+{0x74,0xa615e080},
+{0x78,0xe804c000},
+{0x7c,0xb815e054},
+{0xf0,0x33},
+{0x00,0xc2070000},
+{0x04,0xa80d3fe0},
+{0x08,0xa815000d},
+{0x0c,0xba0861ff},
+{0x10,0xec002344},
+{0x14,0xc2002298},
+{0x18,0x9a15e070},
+{0x1c,0xc2234000},
+{0x20,0x033fc000},
+{0x24,0xda002338},
+{0x28,0x82106030},
+{0x2c,0xda204000},
+{0x30,0xc2002330},
+{0x34,0x9015e074},
+{0x38,0xc2220000},
+{0x3c,0x0300003f},
+{0x40,0x17000017},
+{0x44,0x9e156058},
+{0x48,0x821063ff},
+{0x4c,0xc223c000},
+{0x50,0x9612e380},
+{0x54,0x19000018},
+{0x58,0x94156088},
+{0x5c,0xd6228000},
+{0x60,0x981320c0},
+{0x64,0x9215608c},
+{0x68,0xd8224000},
+{0x6c,0xe824c000},
+{0x70,0xa015605c},
+{0x74,0xc0240000},
+{0x78,0xa2156080},
+{0x7c,0xd6244000},
+{0xf0,0x34},
+{0x00,0xa4156084},
+{0x04,0xd8248000},
+{0x08,0xec202670},
+{0x0c,0x80a76114},
+{0x10,0x1280000c},
+{0x14,0xe6002374},
+{0x18,0x820da0ff},
+{0x1c,0x8258605a},
+{0x20,0x82006040},
+{0x24,0x83306007},
+{0x28,0x9b286010},
+{0x2c,0x9a034001},
+{0x30,0x825ce349},
+{0x34,0xfa270000},
+{0x38,0xda202670},
+{0x3c,0xa730600a},
+{0x40,0xda0023f8},
+{0x44,0x8215e008},
+{0x48,0xda204000},
+{0x4c,0x9815e00c},
+{0x50,0x7ffffe20},
+{0x54,0xda230000},
+{0x58,0x9a15e07c},
+{0x5c,0xe8034000},
+{0x60,0x033ff000},
+{0x64,0xa82d0001},
+{0x68,0xe8234000},
+{0x6c,0x033fc1c0},
+{0x70,0xda002340},
+{0x74,0x82106064},
+{0x78,0xda204000},
+{0x7c,0x0300007f},
+{0xf0,0x35},
+{0x00,0x96156010},
+{0x04,0x821063ff},
+{0x08,0x1907ffc0},
+{0x0c,0xc222c000},
+{0x10,0x92156030},
+{0x14,0x94156014},
+{0x18,0xd8224000},
+{0x1c,0x80a4e000},
+{0x20,0x0280000f},
+{0x24,0xd8228000},
+{0x28,0x932ce010},
+{0x2c,0x8204e001},
+{0x30,0x9b2ce004},
+{0x34,0x83286010},
+{0x38,0x9a02400d},
+{0x3c,0x9815e084},
+{0x40,0xda230000},
+{0x44,0x82004013},
+{0x48,0x9615e088},
+{0x4c,0x82006002},
+{0x50,0x9415e08c},
+{0x54,0xd222c000},
+{0x58,0xc2228000},
+{0x5c,0x8215e030},
+{0x60,0xda002670},
+{0x64,0xda204000},
+{0x68,0x7ffffedc},
+{0x6c,0x90103fff},
+{0x70,0x7ffffec9},
+{0x74,0x90102001},
+{0x78,0x82103fff},
+{0x7c,0xc226c000},
+{0xf0,0x36},
+{0x00,0xf425c000},
+{0x04,0x81c7e008},
+{0x08,0x81e80000},
+{0x0c,0x9de3bf98},
+{0x10,0xc2002508},
+{0x14,0x808860ff},
+{0x18,0x02800015},
+{0x1c,0x1b3fc180},
+{0x20,0x82102001},
+{0x24,0x9a13603c},
+{0x28,0xc2234000},
+{0x2c,0xc2002508},
+{0x30,0x820860ff},
+{0x34,0x80a04018},
+{0x38,0x1280000b},
+{0x3c,0x033fc180},
+{0x40,0x7ffffc9e},
+{0x44,0x01000000},
+{0x48,0xda002508},
+{0x4c,0x033fc040},
+{0x50,0x9a0b60ff},
+{0x54,0x8210600c},
+{0x58,0xc0204000},
+{0x5c,0x10bffff7},
+{0x60,0x80a34018},
+{0x64,0x8210603c},
+{0x68,0xc0204000},
+{0x6c,0x81c7e008},
+{0x70,0x81e80000},
+{0x74,0x9de3bf98},
+{0x78,0x9e100018},
+{0x7c,0x031fffdf},
+{0xf0,0x37},
+{0x00,0xb010001a},
+{0x04,0xb41063ff},
+{0x08,0x82102000},
+{0x0c,0xbb286002},
+{0x10,0x80a62009},
+{0x14,0xb6006001},
+{0x18,0x12800006},
+{0x1c,0xb810001d},
+{0x20,0xc206401d},
+{0x24,0x83306001},
+{0x28,0x8208401a},
+{0x2c,0xc226401d},
+{0x30,0x80a62008},
+{0x34,0x08800006},
+{0x38,0xc206401c},
+{0x3c,0xfa03c01c},
+{0x40,0xbb376001},
+{0x44,0x10800003},
+{0x48,0xba0f401a},
+{0x4c,0xfa03c01c},
+{0x50,0x8200401d},
+{0x54,0xc226401c},
+{0x58,0x80a6e04f},
+{0x5c,0x08bfffec},
+{0x60,0x8210001b},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x9a102000},
+{0x70,0x832b6002},
+{0x74,0x9a036001},
+{0x78,0x80a3604f},
+{0x7c,0x08bffffd},
+{0xf0,0x38},
+{0x00,0xc0220001},
+{0x04,0x81c3e008},
+{0x08,0x01000000},
+{0x0c,0xc20022f8},
+{0x10,0xda00247c},
+{0x14,0x8258400d},
+{0x18,0x83306001},
+{0x1c,0x96102000},
+{0x20,0x80a2c001},
+{0x24,0x1a80003b},
+{0x28,0x0300003f},
+{0x2c,0x941063ff},
+{0x30,0x98102000},
+{0x34,0x80a26001},
+{0x38,0x0280002e},
+{0x3c,0x80a26004},
+{0x40,0x12800008},
+{0x44,0x80a26008},
+{0x48,0xc2030008},
+{0x4c,0x9a08400a},
+{0x50,0x83306012},
+{0x54,0x83286010},
+{0x58,0x10800014},
+{0x5c,0x9b336002},
+{0x60,0x28800015},
+{0x64,0xda02000c},
+{0x68,0xda030008},
+{0x6c,0x83336010},
+{0x70,0x82004001},
+{0x74,0x9a0b400a},
+{0x78,0x81800000},
+{0x7c,0x01000000},
+{0xf0,0x39},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x82704009},
+{0x0c,0x9a03400d},
+{0x10,0x83286010},
+{0x14,0x81800000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x9a734009},
+{0x28,0x8200400d},
+{0x2c,0x10800011},
+{0x30,0xc2230008},
+{0x34,0x83336010},
+{0x38,0x81800000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x82704009},
+{0x4c,0x9a0b400a},
+{0x50,0x83286010},
+{0x54,0x81800000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x9a734009},
+{0x68,0x8200400d},
+{0x6c,0xc222000c},
+{0x70,0xc20022f8},
+{0x74,0xda00247c},
+{0x78,0x8258400d},
+{0x7c,0x9602e001},
+{0xf0,0x3a},
+{0x00,0x83306001},
+{0x04,0x80a2c001},
+{0x08,0x0abfffcb},
+{0x0c,0x98032004},
+{0x10,0x81c3e008},
+{0x14,0x01000000},
+{0x18,0x98102000},
+{0x1c,0x9b2b2002},
+{0x20,0x98032001},
+{0x24,0xc202000d},
+{0x28,0x80a3204f},
+{0x2c,0x04bffffc},
+{0x30,0xc222400d},
+{0x34,0x81c3e008},
+{0x38,0x01000000},
+{0x3c,0xd6020000},
+{0x40,0xd8024000},
+{0x44,0x9132e010},
+{0x48,0x95332010},
+{0x4c,0x900a2fff},
+{0x50,0x940aafff},
+{0x54,0x03000007},
+{0x58,0x9a22000a},
+{0x5c,0x821063ff},
+{0x60,0x940b0001},
+{0x64,0x900ac001},
+{0x68,0x9022000a},
+{0x6c,0x9a5b400d},
+{0x70,0x905a0008},
+{0x74,0x81c3e008},
+{0x78,0x90034008},
+{0x7c,0x9de3bf98},
+{0xf0,0x3b},
+{0x00,0x82064019},
+{0x04,0x82004019},
+{0x08,0x83286002},
+{0x0c,0x82004018},
+{0x10,0x3b000019},
+{0x14,0x83286002},
+{0x18,0xba176080},
+{0x1c,0x9a066001},
+{0x20,0xde00401d},
+{0x24,0xb2067fff},
+{0x28,0xc2002478},
+{0x2c,0x9823c001},
+{0x30,0x80a6400d},
+{0x34,0xb4062001},
+{0x38,0x1480002a},
+{0x3c,0x96102000},
+{0x40,0x82064019},
+{0x44,0x82004019},
+{0x48,0x9410001d},
+{0x4c,0xb9286002},
+{0x50,0xb006bffe},
+{0x54,0x833e601f},
+{0x58,0xba070018},
+{0x5c,0x82204019},
+{0x60,0xbb2f6002},
+{0x64,0xb730601f},
+{0x68,0xba07400a},
+{0x6c,0x80a62000},
+{0x70,0x24800015},
+{0x74,0xb0062001},
+{0x78,0xc2002308},
+{0x7c,0x80a04018},
+{0xf0,0x3c},
+{0x00,0x82603fff},
+{0x04,0x8088401b},
+{0x08,0x2280000f},
+{0x0c,0xb0062001},
+{0x10,0xc2002300},
+{0x14,0x80a64001},
+{0x18,0x3880000b},
+{0x1c,0xb0062001},
+{0x20,0xc2074000},
+{0x24,0x80a0400f},
+{0x28,0x04800004},
+{0x2c,0x80a0400c},
+{0x30,0x1080000d},
+{0x34,0xb0102000},
+{0x38,0x24800002},
+{0x3c,0x96102001},
+{0x40,0xb0062001},
+{0x44,0x80a6001a},
+{0x48,0x04bfffe9},
+{0x4c,0xba076004},
+{0x50,0xb2066001},
+{0x54,0x80a6400d},
+{0x58,0x04bfffde},
+{0x5c,0xb807200c},
+{0x60,0xb010000b},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0xc2002548},
+{0x70,0x82087fbf},
+{0x74,0xc2202548},
+{0x78,0xc0202540},
+{0x7c,0xc0202514},
+{0xf0,0x3d},
+{0x00,0x9a102000},
+{0x04,0x832b6002},
+{0x08,0x9a036001},
+{0x0c,0xc0206708},
+{0x10,0x80a36009},
+{0x14,0x04bffffc},
+{0x18,0xc02066e0},
+{0x1c,0x81c3e008},
+{0x20,0x01000000},
+{0x24,0x9de3bf88},
+{0x28,0x82063fff},
+{0x2c,0xb8067fff},
+{0x30,0x82160001},
+{0x34,0xba16401c},
+{0x38,0x80974001},
+{0x3c,0xa610001a},
+{0x40,0x0680006c},
+{0x44,0xa410001b},
+{0x48,0xc2002308},
+{0x4c,0x80a60001},
+{0x50,0x38800069},
+{0x54,0xb0102000},
+{0x58,0xc2002300},
+{0x5c,0x80a64001},
+{0x60,0x38800065},
+{0x64,0xb0102000},
+{0x68,0x94062001},
+{0x6c,0x96066001},
+{0x70,0xa207bff8},
+{0x74,0x8207bfe8},
+{0x78,0xb0102003},
+{0x7c,0xc0204000},
+{0xf0,0x3e},
+{0x00,0xb0863fff},
+{0x04,0x1cbffffe},
+{0x08,0x82006004},
+{0x0c,0x80a7000b},
+{0x10,0x14800031},
+{0x14,0xb210001c},
+{0x18,0x8207001c},
+{0x1c,0xba02c00b},
+{0x20,0x8200401c},
+{0x24,0xba07400b},
+{0x28,0xba20401d},
+{0x2c,0x39000019},
+{0x30,0xa0172080},
+{0x34,0x9827400a},
+{0x38,0x9b286002},
+{0x3c,0xb002bffe},
+{0x40,0x82034018},
+{0x44,0x83286002},
+{0x48,0xba06000c},
+{0x4c,0xb4004010},
+{0x50,0xb6076008},
+{0x54,0x90102001},
+{0x58,0x932a001b},
+{0x5c,0x9e102000},
+{0x60,0xb92be002},
+{0x64,0xfa072520},
+{0x68,0xba5f4012},
+{0x6c,0x833f601f},
+{0x70,0x83306018},
+{0x74,0xba074001},
+{0x78,0xc2068000},
+{0x7c,0x82204013},
+{0xf0,0x3f},
+{0x00,0xbb3f6008},
+{0x04,0x9e03e001},
+{0x08,0x80a0401d},
+{0x0c,0x04800005},
+{0x10,0xb8070011},
+{0x14,0xc2073ff0},
+{0x18,0x82104009},
+{0x1c,0xc2273ff0},
+{0x20,0x80a3e003},
+{0x24,0x08bffff0},
+{0x28,0xb92be002},
+{0x2c,0xb0062001},
+{0x30,0xb606e001},
+{0x34,0x80a6000a},
+{0x38,0x04bfffe8},
+{0x3c,0xb406a004},
+{0x40,0xb2066001},
+{0x44,0x9a03600c},
+{0x48,0x80a6400b},
+{0x4c,0x04bfffdc},
+{0x50,0x98032003},
+{0x54,0xc207bfe8},
+{0x58,0x80886010},
+{0x5c,0x0280000a},
+{0x60,0xfa07bfec},
+{0x64,0xc207bff4},
+{0x68,0x80886082},
+{0x6c,0x02800007},
+{0x70,0x808f6010},
+{0x74,0x80886028},
+{0x78,0x1280001f},
+{0x7c,0xb0102003},
+{0xf0,0x40},
+{0x00,0xfa07bfec},
+{0x04,0x808f6010},
+{0x08,0x02800012},
+{0x0c,0xc207bff0},
+{0x10,0x808f6082},
+{0x14,0x02800007},
+{0x18,0x808f6028},
+{0x1c,0xc207bff4},
+{0x20,0x80886028},
+{0x24,0x32800014},
+{0x28,0xb0102002},
+{0x2c,0x808f6028},
+{0x30,0x02800008},
+{0x34,0xc207bff0},
+{0x38,0xc207bff4},
+{0x3c,0x80886082},
+{0x40,0x02800004},
+{0x44,0xc207bff0},
+{0x48,0x1080000b},
+{0x4c,0xb0102002},
+{0x50,0x80886010},
+{0x54,0x02800008},
+{0x58,0xb0102000},
+{0x5c,0x80886082},
+{0x60,0x02800005},
+{0x64,0x80886028},
+{0x68,0x12800003},
+{0x6c,0xb0102001},
+{0x70,0xb0102000},
+{0x74,0x81c7e008},
+{0x78,0x81e80000},
+{0x7c,0x9de3bf98},
+{0xf0,0x41},
+{0x00,0xb12e2002},
+{0x04,0xf80626e0},
+{0x08,0x9e0f2fff},
+{0x0c,0xba03c00f},
+{0x10,0xba07400f},
+{0x14,0xb1372010},
+{0x18,0xb00e2fff},
+{0x1c,0xbb2f6002},
+{0x20,0xba074018},
+{0x24,0x03000019},
+{0x28,0x82106080},
+{0x2c,0xbb2f6002},
+{0x30,0xfa074001},
+{0x34,0xc20821e4},
+{0x38,0xba5f4001},
+{0x3c,0x833f601f},
+{0x40,0x83306019},
+{0x44,0xba074001},
+{0x48,0xbb3f6007},
+{0x4c,0xb937200c},
+{0x50,0xc20821e5},
+{0x54,0xa0100019},
+{0x58,0x9410001a},
+{0x5c,0xa8074001},
+{0x60,0x808f2001},
+{0x64,0xb006001a},
+{0x68,0x0280000c},
+{0x6c,0x9e03c019},
+{0x70,0xc20023c8},
+{0x74,0x80886200},
+{0x78,0x32800002},
+{0x7c,0xb006001a},
+{0xf0,0x42},
+{0x00,0xc200237c},
+{0x04,0x80a06000},
+{0x08,0x2280005e},
+{0x0c,0x9e03e001},
+{0x10,0x1080005c},
+{0x14,0xb0062001},
+{0x18,0xc20023c8},
+{0x1c,0x83306014},
+{0x20,0x82086001},
+{0x24,0x80a00001},
+{0x28,0xa2603fff},
+{0x2c,0x9e03c010},
+{0x30,0x8333e01f},
+{0x34,0x80944001},
+{0x38,0x12800052},
+{0x3c,0xb006000a},
+{0x40,0x80a62000},
+{0x44,0x06800050},
+{0x48,0x80a2a000},
+{0x4c,0xc2002300},
+{0x50,0x82006001},
+{0x54,0x80a3c001},
+{0x58,0x1880004b},
+{0x5c,0x80a2a000},
+{0x60,0xc2002308},
+{0x64,0x82006001},
+{0x68,0x80a60001},
+{0x6c,0x18800045},
+{0x70,0xa4102000},
+{0x74,0x27000019},
+{0x78,0x96103fff},
+{0x7c,0xaa14e080},
+{0xf0,0x43},
+{0x00,0x9214e080},
+{0x04,0x80a2a000},
+{0x08,0x9a03c00b},
+{0x0c,0x12800004},
+{0x10,0x98100018},
+{0x14,0x9806000b},
+{0x18,0x9a10000f},
+{0x1c,0xba234010},
+{0x20,0x8207401d},
+{0x24,0x8200401d},
+{0x28,0xba23000a},
+{0x2c,0x83286002},
+{0x30,0x8200401d},
+{0x34,0x83286002},
+{0x38,0xfa004009},
+{0x3c,0xc20821e6},
+{0x40,0xba5f4001},
+{0x44,0xb803400b},
+{0x48,0x833f601f},
+{0x4c,0x9003400d},
+{0x50,0xb202000d},
+{0x54,0x83306019},
+{0x58,0xb407001c},
+{0x5c,0xb72e6002},
+{0x60,0xba074001},
+{0x64,0xb406801c},
+{0x68,0xbb3f6007},
+{0x6c,0xb606c00c},
+{0x70,0xf80821e7},
+{0x74,0xb807401c},
+{0x78,0xb72ee002},
+{0x7c,0xfa06c009},
+{0xf0,0x44},
+{0x00,0xb32e6004},
+{0x04,0x8203000b},
+{0x08,0x83286002},
+{0x0c,0xb2064009},
+{0x10,0x80a7401c},
+{0x14,0xba064001},
+{0x18,0xb52ea004},
+{0x1c,0x14800019},
+{0x20,0x832b2002},
+{0x24,0x80a2a000},
+{0x28,0x22800005},
+{0x2c,0x8202000d},
+{0x30,0xb2068009},
+{0x34,0xba064001},
+{0x38,0x8202000d},
+{0x3c,0x83286002},
+{0x40,0x8200400c},
+{0x44,0xb3286002},
+{0x48,0xc2074000},
+{0x4c,0x80a0401c},
+{0x50,0x1480000c},
+{0x54,0x9602e001},
+{0x58,0xc2064015},
+{0x5c,0x80a04014},
+{0x60,0x36800002},
+{0x64,0xa4102001},
+{0x68,0x80a2e001},
+{0x6c,0x04bfffc6},
+{0x70,0x9214e080},
+{0x74,0x80a4a000},
+{0x78,0x32bfffae},
+{0x7c,0x9e03c010},
+{0xf0,0x45},
+{0x00,0x80a2a000},
+{0x04,0x12800003},
+{0x08,0xb026000a},
+{0x0c,0xb023c010},
+{0x10,0x81c7e008},
+{0x14,0x81e80000},
+{0x18,0x94102000},
+{0x1c,0xc2002514},
+{0x20,0x80a28001},
+{0x24,0x96102000},
+{0x28,0x1a80000e},
+{0x2c,0x9b2ae002},
+{0x30,0xc20366e0},
+{0x34,0x9602e001},
+{0x38,0x80a06000},
+{0x3c,0x02800006},
+{0x40,0x992aa002},
+{0x44,0xc22326e0},
+{0x48,0xc2036708},
+{0x4c,0x9402a001},
+{0x50,0xc2232708},
+{0x54,0xc2002514},
+{0x58,0x10bffff4},
+{0x5c,0x80a2c001},
+{0x60,0x81c3e008},
+{0x64,0xd4202514},
+{0x68,0xd4020000},
+{0x6c,0x03000018},
+{0x70,0x9802800a},
+{0x74,0x82106200},
+{0x78,0xda130001},
+{0x7c,0xc2002590},
+{0xf0,0x46},
+{0x00,0xc250400c},
+{0x04,0x96a0400d},
+{0x08,0x02800016},
+{0x0c,0x03000018},
+{0x10,0x80a2e000},
+{0x14,0x04800009},
+{0x18,0x82102001},
+{0x1c,0xda022004},
+{0x20,0x8328400d},
+{0x24,0x80a2c001},
+{0x28,0x3480000d},
+{0x2c,0x973ac00d},
+{0x30,0x1080000b},
+{0x34,0x96102001},
+{0x38,0x1680000a},
+{0x3c,0x03000018},
+{0x40,0xda022008},
+{0x44,0x82103fff},
+{0x48,0x8328400d},
+{0x4c,0x80a2c001},
+{0x50,0x36800003},
+{0x54,0x96103fff},
+{0x58,0x973ac00d},
+{0x5c,0x03000018},
+{0x60,0x92106200},
+{0x64,0x8202800a},
+{0x68,0xc2104009},
+{0x6c,0x9602c001},
+{0x70,0x808aa001},
+{0x74,0x0280000f},
+{0x78,0x9b3aa01f},
+{0x7c,0x9b33601f},
+{0xf0,0x47},
+{0x00,0x9a02800d},
+{0x04,0x9b3b6001},
+{0x08,0x9b2b6002},
+{0x0c,0xd8034009},
+{0x10,0x033fffc0},
+{0x14,0x980b0001},
+{0x18,0x0300003f},
+{0x1c,0x821063ff},
+{0x20,0x820ac001},
+{0x24,0x98030001},
+{0x28,0x1080000d},
+{0x2c,0xd8234009},
+{0x30,0x9b33601f},
+{0x34,0x9a02800d},
+{0x38,0x9b3b6001},
+{0x3c,0x9b2b6002},
+{0x40,0x0300003f},
+{0x44,0xd8034009},
+{0x48,0x821063ff},
+{0x4c,0x980b0001},
+{0x50,0x832ae010},
+{0x54,0x8200400c},
+{0x58,0xc2234009},
+{0x5c,0xc2020000},
+{0x60,0xda00247c},
+{0x64,0x8200400d},
+{0x68,0x81c3e008},
+{0x6c,0xc2220000},
+{0x70,0x9de3bf98},
+{0x74,0x833e201f},
+{0x78,0xd0002320},
+{0x7c,0x82204018},
+{0xf0,0x48},
+{0x00,0x80a22000},
+{0x04,0x02800016},
+{0x08,0x9b30601f},
+{0x0c,0x033fc000},
+{0x10,0xa0106020},
+{0x14,0xc200231c},
+{0x18,0x80a00001},
+{0x1c,0x82402000},
+{0x20,0x8088400d},
+{0x24,0xda002318},
+{0x28,0x821e000d},
+{0x2c,0x02800009},
+{0x30,0xb0086001},
+{0x34,0x80a0000d},
+{0x38,0x82603fff},
+{0x3c,0x7ffffa56},
+{0x40,0xc2240000},
+{0x44,0xc2002318},
+{0x48,0x10800005},
+{0x4c,0xc2240000},
+{0x50,0x033fc000},
+{0x54,0x82106020},
+{0x58,0xf0204000},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0x9de3bf98},
+{0x68,0x7ffffa54},
+{0x6c,0x01000000},
+{0x70,0x033fc040},
+{0x74,0xe0002500},
+{0x78,0x8210600c},
+{0x7c,0x80a42026},
+{0xf0,0x49},
+{0x00,0x0880001e},
+{0x04,0xc0204000},
+{0x08,0x19169683},
+{0x0c,0x9a132300},
+{0x10,0xc2002f00},
+{0x14,0x80a0400d},
+{0x18,0x3280005b},
+{0x1c,0xc2002500},
+{0x20,0x9a1323fc},
+{0x24,0xc2002ffc},
+{0x28,0x80a0400d},
+{0x2c,0x32800056},
+{0x30,0xc2002500},
+{0x34,0xc0202584},
+{0x38,0xa2102000},
+{0x3c,0x832c6002},
+{0x40,0xc2006f04},
+{0x44,0x80a06000},
+{0x48,0x0280004e},
+{0x4c,0xa2046001},
+{0x50,0x9fc04000},
+{0x54,0x01000000},
+{0x58,0xc2002584},
+{0x5c,0x80a06000},
+{0x60,0x12800048},
+{0x64,0x80a4603b},
+{0x68,0x24bffff6},
+{0x6c,0x832c6002},
+{0x70,0x10800045},
+{0x74,0xc2002500},
+{0x78,0x80a42000},
+{0x7c,0x1280000c},
+{0xf0,0x4a},
+{0x00,0x80a42014},
+{0x04,0x7ffffc55},
+{0x08,0x90102000},
+{0x0c,0x1b3fc200},
+{0x10,0xc2002330},
+{0x14,0x9a136074},
+{0x18,0xc2234000},
+{0x1c,0x7ffffc3e},
+{0x20,0x90102001},
+{0x24,0x10800035},
+{0x28,0xc2002fcc},
+{0x2c,0x1880000c},
+{0x30,0x80a42015},
+{0x34,0x808c2001},
+{0x38,0x32800033},
+{0x3c,0xc2002500},
+{0x40,0x90043ffe},
+{0x44,0x7ffffbd7},
+{0x48,0x91322001},
+{0x4c,0x7ffffb61},
+{0x50,0x01000000},
+{0x54,0x1080002c},
+{0x58,0xc2002500},
+{0x5c,0x18800013},
+{0x60,0x80a42016},
+{0x64,0x11000018},
+{0x68,0x7ffffda1},
+{0x6c,0x90122200},
+{0x70,0x033fc180},
+{0x74,0xda0025b0},
+{0x78,0x82106038},
+{0x7c,0xda204000},
+{0xf0,0x4b},
+{0x00,0x033fc200},
+{0x04,0x82106074},
+{0x08,0xda00232c},
+{0x0c,0xda204000},
+{0x10,0x7ffffc21},
+{0x14,0x90102000},
+{0x18,0xc200266c},
+{0x1c,0xc2202510},
+{0x20,0x10800016},
+{0x24,0xc2002fcc},
+{0x28,0x28800017},
+{0x2c,0xc2002500},
+{0x30,0x80a42026},
+{0x34,0x38800014},
+{0x38,0xc2002500},
+{0x3c,0x7ffffb26},
+{0x40,0x23000018},
+{0x44,0x92146200},
+{0x48,0x7ffffd6b},
+{0x4c,0x94043fea},
+{0x50,0x80a42026},
+{0x54,0x3280000c},
+{0x58,0xc2002500},
+{0x5c,0x90146200},
+{0x60,0x7ffffd8b},
+{0x64,0x92102008},
+{0x68,0xc2002fd8},
+{0x6c,0x80a06000},
+{0x70,0x22800005},
+{0x74,0xc2002500},
+{0x78,0x9fc04000},
+{0x7c,0x01000000},
+{0xf0,0x4c},
+{0x00,0xc2002500},
+{0x04,0x80a40001},
+{0x08,0x1280000b},
+{0x0c,0x031fffff},
+{0x10,0x821063f0},
+{0x14,0x80a40001},
+{0x18,0x38800003},
+{0x1c,0x21040000},
+{0x20,0xa0042001},
+{0x24,0x033fc180},
+{0x28,0x82106034},
+{0x2c,0xe0204000},
+{0x30,0xe0202500},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x03169696},
+{0x48,0xda002180},
+{0x4c,0x8210625a},
+{0x50,0x80a34001},
+{0x54,0x94102000},
+{0x58,0x12800006},
+{0x5c,0x96102000},
+{0x60,0x033fc180},
+{0x64,0x82106030},
+{0x68,0x10800020},
+{0x6c,0xda204000},
+{0x70,0xc202c000},
+{0x74,0x9602e004},
+{0x78,0x80a2e4ff},
+{0x7c,0x08bffffd},
+{0xf0,0x4d},
+{0x00,0x94028001},
+{0x04,0x96102d00},
+{0x08,0xd2002ff8},
+{0x0c,0x03000019},
+{0x10,0x80a2c009},
+{0x14,0x1a80000b},
+{0x18,0x901063ff},
+{0x1c,0xd802c000},
+{0x20,0x9602e004},
+{0x24,0x80a2c009},
+{0x28,0x9a402000},
+{0x2c,0x80a2000b},
+{0x30,0x82603fff},
+{0x34,0x808b4001},
+{0x38,0x12bffff9},
+{0x3c,0x9402800c},
+{0x40,0x03169696},
+{0x44,0x8210625a},
+{0x48,0x80a28001},
+{0x4c,0x033fc180},
+{0x50,0x82106030},
+{0x54,0x02800005},
+{0x58,0xd4204000},
+{0x5c,0x03000008},
+{0x60,0x81c063f0},
+{0x64,0x90102001},
+{0x68,0x01000000},
+{0x6c,0x81c3e008},
+{0x70,0x01000000},
+{0x74,0x9de3bf98},
+{0x78,0x9e100018},
+{0x7c,0x03000019},
+{0xf0,0x4e},
+{0x00,0xb0100019},
+{0x04,0xba106080},
+{0x08,0xb6102000},
+{0x0c,0x832ee002},
+{0x10,0xb606e001},
+{0x14,0x80a6e0d7},
+{0x18,0x08bffffd},
+{0x1c,0xc020401d},
+{0x20,0xb6102000},
+{0x24,0xc20022fc},
+{0x28,0x80a6c001},
+{0x2c,0x1a80001c},
+{0x30,0x03000019},
+{0x34,0xb21060b4},
+{0x38,0xb4102000},
+{0x3c,0xc20022f8},
+{0x40,0x80a68001},
+{0x44,0x1a800011},
+{0x48,0x832ee002},
+{0x4c,0xb8004019},
+{0x50,0xc200247c},
+{0x54,0xfa0ee380},
+{0x58,0x825e8001},
+{0x5c,0x8200401d},
+{0x60,0x82004001},
+{0x64,0xfa160001},
+{0x68,0xc213c001},
+{0x6c,0x8220401d},
+{0x70,0xc2270000},
+{0x74,0xb406a001},
+{0x78,0xc20022f8},
+{0x7c,0x80a68001},
+{0xf0,0x4f},
+{0x00,0x0abffff4},
+{0x04,0xb8072030},
+{0x08,0xb606e001},
+{0x0c,0xc20022fc},
+{0x10,0x80a6c001},
+{0x14,0x0abfffea},
+{0x18,0xb4102000},
+{0x1c,0x81c7e008},
+{0x20,0x81e80000},
+{0x24,0x9de3bf98},
+{0x28,0x21000018},
+{0x2c,0xc2002fe4},
+{0x30,0x9fc04000},
+{0x34,0x90142200},
+{0x38,0xc200254c},
+{0x3c,0xda00259c},
+{0x40,0x90142340},
+{0x44,0x98087ffd},
+{0x48,0x80886002},
+{0x4c,0x0280002c},
+{0x50,0xda202550},
+{0x54,0xc2002664},
+{0x58,0x9a004001},
+{0x5c,0x9a034001},
+{0x60,0xc200259c},
+{0x64,0xb2006140},
+{0x68,0x9a03400d},
+{0x6c,0x82102061},
+{0x70,0x8220400d},
+{0x74,0x9b2e6007},
+{0x78,0x973b601f},
+{0x7c,0x8182e000},
+{0xf0,0x50},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0xb27b4001},
+{0x10,0xd820254c},
+{0x14,0xc2002fe4},
+{0x18,0x9fc04000},
+{0x1c,0x01000000},
+{0x20,0x11000017},
+{0x24,0x90122240},
+{0x28,0xe000259c},
+{0x2c,0xc2002fe4},
+{0x30,0x9fc04000},
+{0x34,0x01000000},
+{0x38,0x80a64010},
+{0x3c,0x9a603fff},
+{0x40,0xc200259c},
+{0x44,0x80a64001},
+{0x48,0x11000019},
+{0x4c,0x82603fff},
+{0x50,0x80934001},
+{0x54,0x02800009},
+{0x58,0x90122240},
+{0x5c,0x7ffffa8a},
+{0x60,0x01000000},
+{0x64,0x7ffffa9b},
+{0x68,0x01000000},
+{0x6c,0x82102015},
+{0x70,0x10800011},
+{0x74,0xc2202500},
+{0x78,0xc020250c},
+{0x7c,0x31000018},
+{0xf0,0x51},
+{0x00,0x33000017},
+{0x04,0xc200250c},
+{0x08,0xb0162200},
+{0x0c,0x80a06000},
+{0x10,0x12800009},
+{0x14,0xb2166240},
+{0x18,0x031696a9},
+{0x1c,0x821061a5},
+{0x20,0xc220250c},
+{0x24,0xc0202668},
+{0x28,0xc0202664},
+{0x2c,0x7ffffd1b},
+{0x30,0x81e80000},
+{0x34,0x01000000},
+{0x38,0x81c7e008},
+{0x3c,0x81e80000},
+{0x40,0x9de3bf58},
+{0x44,0xda5021d0},
+{0x48,0x80a36000},
+{0x4c,0x02800023},
+{0x50,0x80a66002},
+{0x54,0x82064019},
+{0x58,0x82004019},
+{0x5c,0x83286002},
+{0x60,0x82004018},
+{0x64,0x97286002},
+{0x68,0x19000019},
+{0x6c,0x82132080},
+{0x70,0xc202c001},
+{0x74,0x83286007},
+{0x78,0x9338601f},
+{0x7c,0x81826000},
+{0xf0,0x52},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x9478400d},
+{0x10,0x80a66001},
+{0x14,0x32800009},
+{0x18,0xc2002300},
+{0x1c,0x832e2002},
+{0x20,0x9a132110},
+{0x24,0xc200400d},
+{0x28,0x80a28001},
+{0x2c,0x068000a9},
+{0x30,0x82102001},
+{0x34,0xc2002300},
+{0x38,0x80a64001},
+{0x3c,0x12800007},
+{0x40,0x80a66002},
+{0x44,0x82132020},
+{0x48,0xc202c001},
+{0x4c,0x80a28001},
+{0x50,0x0680009f},
+{0x54,0x80a66002},
+{0x58,0x04800045},
+{0x5c,0x9a063fff},
+{0x60,0xda1021d4},
+{0x64,0x82037ffc},
+{0x68,0x83286010},
+{0x6c,0x83306010},
+{0x70,0x80a0600b},
+{0x74,0x18800004},
+{0x78,0x92102003},
+{0x7c,0x832b6010},
+{0xf0,0x53},
+{0x00,0x93386010},
+{0x04,0x94102000},
+{0x08,0x80a28009},
+{0x0c,0x16800020},
+{0x10,0x03000019},
+{0x14,0xa4106050},
+{0x18,0xa007bff8},
+{0x1c,0xa2106080},
+{0x20,0x9806400a},
+{0x24,0x8203000c},
+{0x28,0x8200400c},
+{0x2c,0x83286002},
+{0x30,0xd6002300},
+{0x34,0x82004018},
+{0x38,0x9a22c00a},
+{0x3c,0x9f286002},
+{0x40,0x8203400d},
+{0x44,0x8200400d},
+{0x48,0x83286002},
+{0x4c,0x82004018},
+{0x50,0x98033fff},
+{0x54,0x91286002},
+{0x58,0x80a3000b},
+{0x5c,0x832aa002},
+{0x60,0x98004010},
+{0x64,0x08800005},
+{0x68,0x9602a001},
+{0x6c,0xc2020011},
+{0x70,0x10800004},
+{0x74,0xc2233fc0},
+{0x78,0xc203c012},
+{0x7c,0xc2233fc0},
+{0xf0,0x54},
+{0x00,0x80a2c009},
+{0x04,0x06bfffe7},
+{0x08,0x9410000b},
+{0x0c,0x7ffff8f2},
+{0x10,0x9007bfb8},
+{0x14,0xc207bfb8},
+{0x18,0x80a06000},
+{0x1c,0x26800002},
+{0x20,0xc027bfb8},
+{0x24,0x82064019},
+{0x28,0x82004019},
+{0x2c,0x83286002},
+{0x30,0x82004018},
+{0x34,0x1b000019},
+{0x38,0x83286002},
+{0x3c,0x9a136080},
+{0x40,0xd800400d},
+{0x44,0xc25021d2},
+{0x48,0xda07bfb8},
+{0x4c,0x9a5b4001},
+{0x50,0x992b2008},
+{0x54,0xc25021d6},
+{0x58,0x9823000d},
+{0x5c,0x8258401a},
+{0x60,0x80a30001},
+{0x64,0x0680005a},
+{0x68,0x9a063fff},
+{0x6c,0x03000010},
+{0x70,0x80a36001},
+{0x74,0x18800012},
+{0x78,0xc227bfc8},
+{0x7c,0x9a064019},
+{0xf0,0x55},
+{0x00,0x9a034019},
+{0x04,0x03000019},
+{0x08,0x9b2b6004},
+{0x0c,0x82106084},
+{0x10,0x9a034001},
+{0x14,0x9807bfb8},
+{0x18,0x94102003},
+{0x1c,0xc2034000},
+{0x20,0xc2230000},
+{0x24,0x9a036004},
+{0x28,0x9482bfff},
+{0x2c,0x1cbffffc},
+{0x30,0x98032004},
+{0x34,0x1080002c},
+{0x38,0x9007bfb8},
+{0x3c,0xc2002308},
+{0x40,0x80a60001},
+{0x44,0x02800005},
+{0x48,0x82007fff},
+{0x4c,0x80a60001},
+{0x50,0x12800015},
+{0x54,0x82064019},
+{0x58,0x82064019},
+{0x5c,0x82004019},
+{0x60,0x99286002},
+{0x64,0x03000019},
+{0x68,0x96106080},
+{0x6c,0x94102000},
+{0x70,0x9a07bfb8},
+{0x74,0xc2002308},
+{0x78,0x8220400a},
+{0x7c,0x82030001},
+{0xf0,0x56},
+{0x00,0x83286002},
+{0x04,0xc200400b},
+{0x08,0xc2234000},
+{0x0c,0x9402a001},
+{0x10,0x80a2a003},
+{0x14,0x04bffff8},
+{0x18,0x9a036004},
+{0x1c,0x10800012},
+{0x20,0x9007bfb8},
+{0x24,0x82004019},
+{0x28,0x83286002},
+{0x2c,0x82004018},
+{0x30,0x1b000019},
+{0x34,0x83286002},
+{0x38,0x9a136078},
+{0x3c,0x9a00400d},
+{0x40,0x9807bfb8},
+{0x44,0x94102004},
+{0x48,0xc2034000},
+{0x4c,0xc2230000},
+{0x50,0x9a036004},
+{0x54,0x9482bfff},
+{0x58,0x1cbffffc},
+{0x5c,0x98032004},
+{0x60,0x9007bfb8},
+{0x64,0x7ffff89c},
+{0x68,0x92102005},
+{0x6c,0xc207bfbc},
+{0x70,0x80a06000},
+{0x74,0x26800002},
+{0x78,0xc027bfbc},
+{0x7c,0x82064019},
+{0xf0,0x57},
+{0x00,0x82004019},
+{0x04,0x83286002},
+{0x08,0x82004018},
+{0x0c,0x1b000019},
+{0x10,0x83286002},
+{0x14,0x9a136080},
+{0x18,0xd800400d},
+{0x1c,0xc25021d2},
+{0x20,0xda07bfbc},
+{0x24,0x9a5b4001},
+{0x28,0x992b2008},
+{0x2c,0xc25021d6},
+{0x30,0x9823000d},
+{0x34,0x8258401a},
+{0x38,0x80a30001},
+{0x3c,0x06800005},
+{0x40,0x82102001},
+{0x44,0xc020259c},
+{0x48,0x30800003},
+{0x4c,0x82102001},
+{0x50,0xc220259c},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf58},
+{0x60,0x94100018},
+{0x64,0x9a102000},
+{0x68,0x96102000},
+{0x6c,0x98102000},
+{0x70,0x9e102000},
+{0x74,0x8203000f},
+{0x78,0xf6086441},
+{0x7c,0x80a6e000},
+{0xf0,0x58},
+{0x00,0x02800021},
+{0x04,0xf4086440},
+{0x08,0xf40ea37f},
+{0x0c,0xf60ee37f},
+{0x10,0xb2102000},
+{0x14,0xb007bff8},
+{0x18,0xc200247c},
+{0x1c,0x82584019},
+{0x20,0xba06c001},
+{0x24,0x82068001},
+{0x28,0x82004001},
+{0x2c,0xf8528001},
+{0x30,0xba07401d},
+{0x34,0xc252801d},
+{0x38,0xb8270001},
+{0x3c,0x80a66000},
+{0x40,0x02800007},
+{0x44,0xf8263fc0},
+{0x48,0xc2063fbc},
+{0x4c,0x82a70001},
+{0x50,0x2c800003},
+{0x54,0x9a234001},
+{0x58,0x9a034001},
+{0x5c,0xc2002300},
+{0x60,0xb2066001},
+{0x64,0x82007fff},
+{0x68,0x80a64001},
+{0x6c,0x08bfffeb},
+{0x70,0xb0062004},
+{0x74,0x9e03e001},
+{0x78,0x80a3e00a},
+{0x7c,0x04bfffdf},
+{0xf0,0x59},
+{0x00,0x8203000f},
+{0x04,0x9602e001},
+{0x08,0x80a2e001},
+{0x0c,0x04bfffd9},
+{0x10,0x9803200c},
+{0x14,0xda20259c},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0xc20021cc},
+{0x28,0x80a06000},
+{0x2c,0x22800025},
+{0x30,0xc2002568},
+{0x34,0x82064019},
+{0x38,0x82004019},
+{0x3c,0x83286002},
+{0x40,0x82004018},
+{0x44,0x9f286002},
+{0x48,0xb92e2010},
+{0x4c,0x3b003fc0},
+{0x50,0x03000019},
+{0x54,0x9a1760ff},
+{0x58,0xb8070019},
+{0x5c,0x98106080},
+{0x60,0xb4102007},
+{0x64,0xbb2ea002},
+{0x68,0xc20761b0},
+{0x6c,0x80a06000},
+{0x70,0x02800030},
+{0x74,0xb608400d},
+{0x78,0x80a6c01c},
+{0x7c,0x3280000e},
+{0xf0,0x5a},
+{0x00,0xb486bfff},
+{0x04,0xfa0f61b0},
+{0x08,0x80a76000},
+{0x0c,0x2280000d},
+{0x10,0xc2002568},
+{0x14,0xc203c00c},
+{0x18,0x8258401d},
+{0x1c,0xbb38601f},
+{0x20,0xbb376019},
+{0x24,0x8200401d},
+{0x28,0x83386007},
+{0x2c,0x10800004},
+{0x30,0xc223c00c},
+{0x34,0x1cbfffed},
+{0x38,0xbb2ea002},
+{0x3c,0xc2002568},
+{0x40,0x80a06000},
+{0x44,0x12800033},
+{0x48,0xb6064019},
+{0x4c,0x8206c019},
+{0x50,0x83286002},
+{0x54,0x82004018},
+{0x58,0x3b000019},
+{0x5c,0x83286002},
+{0x60,0xba176080},
+{0x64,0xf800401d},
+{0x68,0xc200251c},
+{0x6c,0x80a70001},
+{0x70,0x04800028},
+{0x74,0x01000000},
+{0x78,0xfa002540},
+{0x7c,0x80a76000},
+{0xf0,0x5b},
+{0x00,0x02800015},
+{0x04,0x832e2010},
+{0x08,0xc20023c8},
+{0x0c,0x80886100},
+{0x10,0x02800011},
+{0x14,0x832e2010},
+{0x18,0x80a7001d},
+{0x1c,0x0880001d},
+{0x20,0x82004019},
+{0x24,0x82207000},
+{0x28,0x10800012},
+{0x2c,0xc22026e0},
+{0x30,0x82064019},
+{0x34,0x82004019},
+{0x38,0x83286002},
+{0x3c,0x82004018},
+{0x40,0x3b000019},
+{0x44,0x83286002},
+{0x48,0xba176080},
+{0x4c,0x10bfffdc},
+{0x50,0xc020401d},
+{0x54,0xfa002514},
+{0x58,0x82004019},
+{0x5c,0xb92f6002},
+{0x60,0x82207000},
+{0x64,0xc22726e0},
+{0x68,0xba076001},
+{0x6c,0xfa202514},
+{0x70,0x8206c019},
+{0x74,0x83286002},
+{0x78,0x82004018},
+{0x7c,0x3b000019},
+{0xf0,0x5c},
+{0x00,0x83286002},
+{0x04,0xba176080},
+{0x08,0xc200401d},
+{0x0c,0xc2202540},
+{0x10,0x81c7e008},
+{0x14,0x81e80000},
+{0x18,0x9de3bf98},
+{0x1c,0xc2002304},
+{0x20,0x80a06000},
+{0x24,0x02800022},
+{0x28,0x01000000},
+{0x2c,0xf80021d8},
+{0x30,0x80a72000},
+{0x34,0x0280001e},
+{0x38,0x82064019},
+{0x3c,0x82004019},
+{0x40,0x83286002},
+{0x44,0x82004018},
+{0x48,0xb1286002},
+{0x4c,0x3b000019},
+{0x50,0xc2002300},
+{0x54,0xb61760dc},
+{0x58,0xb41760e0},
+{0x5c,0x9e1760e4},
+{0x60,0x80a64001},
+{0x64,0x12800012},
+{0x68,0x9a176080},
+{0x6c,0xc206001a},
+{0x70,0xfa06001b},
+{0x74,0xba074001},
+{0x78,0xc206000f},
+{0x7c,0xba074001},
+{0xf0,0x5d},
+{0x00,0xba5f401c},
+{0x04,0x833f601f},
+{0x08,0x83306019},
+{0x0c,0xba074001},
+{0x10,0xc206000d},
+{0x14,0xbb3f6007},
+{0x18,0x80a0401d},
+{0x1c,0x16800004},
+{0x20,0x82102001},
+{0x24,0xc220259c},
+{0x28,0x30800002},
+{0x2c,0xc020259c},
+{0x30,0x81c7e008},
+{0x34,0x81e80000},
+{0x38,0x9de3bf58},
+{0x3c,0xc208224d},
+{0x40,0x80a06000},
+{0x44,0x12800004},
+{0x48,0x90067ffe},
+{0x4c,0xc020259c},
+{0x50,0x3080006a},
+{0x54,0xac066002},
+{0x58,0x80a20016},
+{0x5c,0x14800044},
+{0x60,0x9e102000},
+{0x64,0x82020008},
+{0x68,0x82004008},
+{0x6c,0xa1286002},
+{0x70,0xa8062002},
+{0x74,0x92063ffe},
+{0x78,0x80a24014},
+{0x7c,0x14800038},
+{0xf0,0x5e},
+{0x00,0x82064019},
+{0x04,0x82204008},
+{0x08,0x98004001},
+{0x0c,0x98030001},
+{0x10,0x9b3a201f},
+{0x14,0x96040009},
+{0x18,0x952be002},
+{0x1c,0x03000019},
+{0x20,0x9a234008},
+{0x24,0xae106080},
+{0x28,0x972ae002},
+{0x2c,0x9402801e},
+{0x30,0xa72b2002},
+{0x34,0xab33601f},
+{0x38,0x9602c017},
+{0x3c,0x9402bfb8},
+{0x40,0xa4063fff},
+{0x44,0xa2062001},
+{0x48,0x98067fff},
+{0x4c,0x82060018},
+{0x50,0x82204009},
+{0x54,0x8204c001},
+{0x58,0x80a24012},
+{0x5c,0x0680000b},
+{0x60,0x9b286002},
+{0x64,0x80a24011},
+{0x68,0x14800009},
+{0x6c,0x80a26000},
+{0x70,0x80a2000c},
+{0x74,0x06800005},
+{0x78,0x82066001},
+{0x7c,0x80a20001},
+{0xf0,0x5f},
+{0x00,0x24800014},
+{0x04,0x92026001},
+{0x08,0x80a26000},
+{0x0c,0x2480000d},
+{0x10,0xc2034017},
+{0x14,0xc2002308},
+{0x18,0x80a04009},
+{0x1c,0x82603fff},
+{0x20,0x80884015},
+{0x24,0x22800007},
+{0x28,0xc2034017},
+{0x2c,0xc2002300},
+{0x30,0x80a20001},
+{0x34,0x38800003},
+{0x38,0xc2034017},
+{0x3c,0xc202c000},
+{0x40,0xc2228000},
+{0x44,0x9e03e001},
+{0x48,0x9402a004},
+{0x4c,0x92026001},
+{0x50,0x80a24014},
+{0x54,0x04bfffde},
+{0x58,0x9602e004},
+{0x5c,0x90022001},
+{0x60,0x80a20016},
+{0x64,0x04bfffc4},
+{0x68,0xa004200c},
+{0x6c,0x9007bfb8},
+{0x70,0x7ffff779},
+{0x74,0x92102010},
+{0x78,0xd608224f},
+{0x7c,0xb00ae0ff},
+{0xf0,0x60},
+{0x00,0xd808224d},
+{0x04,0x80a6000c},
+{0x08,0x1480000b},
+{0x0c,0x9e102000},
+{0x10,0x832e2002},
+{0x14,0x8200401e},
+{0x18,0x9a007fb8},
+{0x1c,0xc2034000},
+{0x20,0xb0062001},
+{0x24,0x9e03c001},
+{0x28,0x80a6000c},
+{0x2c,0x04bffffc},
+{0x30,0x9a036004},
+{0x34,0x820ae0ff},
+{0x38,0xda08224d},
+{0x3c,0x9a234001},
+{0x40,0xc208224c},
+{0x44,0x9a036001},
+{0x48,0x825bc001},
+{0x4c,0x9938601f},
+{0x50,0x81832000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x8278400d},
+{0x64,0x9b38601f},
+{0x68,0x9b336019},
+{0x6c,0x8200400d},
+{0x70,0x83386007},
+{0x74,0xc220259c},
+{0x78,0x81c7e008},
+{0x7c,0x81e80000},
+{0xf0,0x61},
+{0x00,0x9de3bf98},
+{0x04,0xc2002588},
+{0x08,0x80a06000},
+{0x0c,0x02800014},
+{0x10,0x11000018},
+{0x14,0xc2002594},
+{0x18,0x80a06000},
+{0x1c,0x12800004},
+{0x20,0x90122340},
+{0x24,0x7ffffad2},
+{0x28,0x01000000},
+{0x2c,0xc2002588},
+{0x30,0xda002594},
+{0x34,0x82007fff},
+{0x38,0x9a036001},
+{0x3c,0xc2202588},
+{0x40,0x7ffff865},
+{0x44,0xda202594},
+{0x48,0x33000018},
+{0x4c,0xb2166340},
+{0x50,0xf4002594},
+{0x54,0x7ffffaa8},
+{0x58,0x91e80008},
+{0x5c,0x01000000},
+{0x60,0x81c7e008},
+{0x64,0x81e80000},
+{0x68,0xc2002460},
+{0x6c,0x80a06000},
+{0x70,0x12800018},
+{0x74,0xda002298},
+{0x78,0xc2002588},
+{0x7c,0x80a06001},
+{0xf0,0x62},
+{0x00,0x12800015},
+{0x04,0x033fc200},
+{0x08,0xc2002208},
+{0x0c,0x80a06000},
+{0x10,0x22800007},
+{0x14,0xc2102548},
+{0x18,0xc2002558},
+{0x1c,0x80a06000},
+{0x20,0x22800007},
+{0x24,0xc0202598},
+{0x28,0xc2102548},
+{0x2c,0x80886001},
+{0x30,0x22800005},
+{0x34,0xc2002598},
+{0x38,0xc0202598},
+{0x3c,0x10800005},
+{0x40,0xda002234},
+{0x44,0x80a06000},
+{0x48,0x22800002},
+{0x4c,0xda00233c},
+{0x50,0x033fc200},
+{0x54,0x82106070},
+{0x58,0x81c3e008},
+{0x5c,0xda204000},
+{0x60,0x9de3bf98},
+{0x64,0xc2002588},
+{0x68,0x80a06000},
+{0x6c,0x0280000f},
+{0x70,0x11000018},
+{0x74,0xc2102548},
+{0x78,0x80886001},
+{0x7c,0x22800010},
+{0xf0,0x63},
+{0x00,0xc200258c},
+{0x04,0xc2002558},
+{0x08,0x80a06000},
+{0x0c,0x3280000c},
+{0x10,0xc200258c},
+{0x14,0xc2002594},
+{0x18,0x80a06001},
+{0x1c,0x32800008},
+{0x20,0xc200258c},
+{0x24,0x11000018},
+{0x28,0x90122340},
+{0x2c,0xd0202590},
+{0x30,0xc0202588},
+{0x34,0x10800014},
+{0x38,0xd2002594},
+{0x3c,0x80a06000},
+{0x40,0x1280000f},
+{0x44,0x82102001},
+{0x48,0xd2002598},
+{0x4c,0xc2002554},
+{0x50,0x80a24001},
+{0x54,0x1a800007},
+{0x58,0x11000017},
+{0x5c,0xc220258c},
+{0x60,0x82102001},
+{0x64,0xc2202584},
+{0x68,0x10800028},
+{0x6c,0xc0202598},
+{0x70,0x90122100},
+{0x74,0x10800004},
+{0x78,0xd0202590},
+{0x7c,0x10800023},
+{0xf0,0x64},
+{0x00,0xc2202584},
+{0x04,0x7ffffa82},
+{0x08,0x01000000},
+{0x0c,0x13000018},
+{0x10,0xc2002fd0},
+{0x14,0x92126200},
+{0x18,0x9fc04000},
+{0x1c,0xd0002590},
+{0x20,0xc20026a0},
+{0x24,0x82087dff},
+{0x28,0xda08254e},
+{0x2c,0x80a36000},
+{0x30,0x12800006},
+{0x34,0xc22026a0},
+{0x38,0xc200218c},
+{0x3c,0x80a06000},
+{0x40,0x32800004},
+{0x44,0xc220256c},
+{0x48,0x82102080},
+{0x4c,0xc220256c},
+{0x50,0x033fc200},
+{0x54,0x82106030},
+{0x58,0xda004000},
+{0x5c,0xc2002670},
+{0x60,0x80a34001},
+{0x64,0x32800007},
+{0x68,0xc2002548},
+{0x6c,0xc2002200},
+{0x70,0x80a06000},
+{0x74,0x02800005},
+{0x78,0x01000000},
+{0x7c,0xc2002548},
+{0xf0,0x65},
+{0x00,0x82106001},
+{0x04,0xc2202548},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x1500003f},
+{0x14,0xd8002508},
+{0x18,0x8212a300},
+{0x1c,0x9a0b0001},
+{0x20,0x808b3f00},
+{0x24,0x02800015},
+{0x28,0x901020a5},
+{0x2c,0xc200254c},
+{0x30,0x8210400d},
+{0x34,0xc220254c},
+{0x38,0x1b3fc000},
+{0x3c,0xc2002500},
+{0x40,0x960b000d},
+{0x44,0x80a06026},
+{0x48,0xc0202508},
+{0x4c,0x0880000b},
+{0x50,0x033fffc0},
+{0x54,0x9a0b0001},
+{0x58,0x03168000},
+{0x5c,0x80a2c001},
+{0x60,0x12800006},
+{0x64,0x9412a3ff},
+{0x68,0xc2002548},
+{0x6c,0x8208400a},
+{0x70,0x8210400d},
+{0x74,0xc2202548},
+{0x78,0x03000006},
+{0x7c,0x81c0630c},
+{0xf0,0x66},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0xda00247c},
+{0x0c,0xc20022f8},
+{0x10,0x8258400d},
+{0x14,0x83306001},
+{0x18,0x9a102000},
+{0x1c,0x80a34001},
+{0x20,0x1a800015},
+{0x24,0x031fffdf},
+{0x28,0x961063ff},
+{0x2c,0x98036001},
+{0x30,0x80a26008},
+{0x34,0x04800006},
+{0x38,0x9b2b6002},
+{0x3c,0xc202000d},
+{0x40,0x83306001},
+{0x44,0x10800003},
+{0x48,0x8208400b},
+{0x4c,0xc202000d},
+{0x50,0x82584009},
+{0x54,0xc222000d},
+{0x58,0xda00247c},
+{0x5c,0xc20022f8},
+{0x60,0x8258400d},
+{0x64,0x83306001},
+{0x68,0x80a30001},
+{0x6c,0x0abffff0},
+{0x70,0x9a10000c},
+{0x74,0x81c3e008},
+{0x78,0x01000000},
+{0x7c,0x9de3bf98},
+{0xf0,0x67},
+{0x00,0xe6002460},
+{0x04,0x80a4e000},
+{0x08,0x02800070},
+{0x0c,0x01000000},
+{0x10,0xc2002594},
+{0x14,0xee002588},
+{0x18,0x9805c001},
+{0x1c,0xc2002554},
+{0x20,0x80a30001},
+{0x24,0x12800069},
+{0x28,0x01000000},
+{0x2c,0xda002598},
+{0x30,0xc200258c},
+{0x34,0x8200400d},
+{0x38,0x80a0400c},
+{0x3c,0x02800004},
+{0x40,0x80a36000},
+{0x44,0x12800061},
+{0x48,0x01000000},
+{0x4c,0x96102001},
+{0x50,0xe20022fc},
+{0x54,0x80a2c011},
+{0x58,0x1880002d},
+{0x5c,0x9e102000},
+{0x60,0xe40022f8},
+{0x64,0x13000019},
+{0x68,0x94102001},
+{0x6c,0x80a28012},
+{0x70,0x18800020},
+{0x74,0xa0102000},
+{0x78,0x832ae002},
+{0x7c,0x98006030},
+{0xf0,0x68},
+{0x00,0xac126080},
+{0x04,0xaa126050},
+{0x08,0xa81260b0},
+{0x0c,0xd00022f8},
+{0x10,0xda030016},
+{0x14,0x80a34013},
+{0x18,0x26800013},
+{0x1c,0x9402a001},
+{0x20,0x80a2a001},
+{0x24,0x22800007},
+{0x28,0xc20022f8},
+{0x2c,0xc2030015},
+{0x30,0x80a34001},
+{0x34,0x2480000c},
+{0x38,0x9402a001},
+{0x3c,0xc20022f8},
+{0x40,0x80a28001},
+{0x44,0x22800007},
+{0x48,0xa0042001},
+{0x4c,0xc2030014},
+{0x50,0x80a34001},
+{0x54,0x26800004},
+{0x58,0x9402a001},
+{0x5c,0xa0042001},
+{0x60,0x9402a001},
+{0x64,0x80a28008},
+{0x68,0x08bfffea},
+{0x6c,0x98032030},
+{0x70,0x80a4000f},
+{0x74,0x34800002},
+{0x78,0x9e100010},
+{0x7c,0x9602e001},
+{0xf0,0x69},
+{0x00,0x80a2c011},
+{0x04,0x28bfffda},
+{0x08,0x94102001},
+{0x0c,0x96102000},
+{0x10,0xc20ae464},
+{0x14,0x80a06000},
+{0x18,0x22800006},
+{0x1c,0x9602e001},
+{0x20,0x80a3c001},
+{0x24,0x34800007},
+{0x28,0xc20ae278},
+{0x2c,0x9602e001},
+{0x30,0x80a2e003},
+{0x34,0x24bffff8},
+{0x38,0xc20ae464},
+{0x3c,0x30800023},
+{0x40,0xda00256c},
+{0x44,0x8258400d},
+{0x48,0x83306007},
+{0x4c,0xc220256c},
+{0x50,0xe00ae468},
+{0x54,0x80a42000},
+{0x58,0x0280001c},
+{0x5c,0x80a5e000},
+{0x60,0x32800007},
+{0x64,0xc200258c},
+{0x68,0x11000018},
+{0x6c,0x90122340},
+{0x70,0x7fffff86},
+{0x74,0xd2002594},
+{0x78,0xc200258c},
+{0x7c,0x80a06000},
+{0xf0,0x6a},
+{0x00,0x32800007},
+{0x04,0xc2002588},
+{0x08,0x11000017},
+{0x0c,0x90122100},
+{0x10,0x7fffff7e},
+{0x14,0xd2002598},
+{0x18,0xc2002588},
+{0x1c,0x82004010},
+{0x20,0xc2202588},
+{0x24,0xda00258c},
+{0x28,0xc2002554},
+{0x2c,0x80a34001},
+{0x30,0x18800005},
+{0x34,0x82102001},
+{0x38,0x82034010},
+{0x3c,0xc220258c},
+{0x40,0x82102001},
+{0x44,0xc2202584},
+{0x48,0x81c7e008},
+{0x4c,0x81e80000},
+{0x50,0x9de3bf98},
+{0x54,0xc20025a8},
+{0x58,0x82006001},
+{0x5c,0xda002310},
+{0x60,0x80a0400d},
+{0x64,0x0a800060},
+{0x68,0xc22025a8},
+{0x6c,0xd800227c},
+{0x70,0x80a32000},
+{0x74,0x02800038},
+{0x78,0xc02025a8},
+{0x7c,0x1b000007},
+{0xf0,0x6b},
+{0x00,0x9a1363ff},
+{0x04,0x8333200d},
+{0x08,0x9208400d},
+{0x0c,0xc200258c},
+{0x10,0x80a06000},
+{0x14,0x03000017},
+{0x18,0xa4106100},
+{0x1c,0x900b000d},
+{0x20,0xa2102000},
+{0x24,0x02800004},
+{0x28,0x94102000},
+{0x2c,0x82006400},
+{0x30,0xa4106340},
+{0x34,0xda0022f8},
+{0x38,0xc200247c},
+{0x3c,0x9a5b4001},
+{0x40,0xa0102000},
+{0x44,0x80a4000d},
+{0x48,0x1a800013},
+{0x4c,0x03000018},
+{0x50,0x9e106200},
+{0x54,0x9610000d},
+{0x58,0x9a040010},
+{0x5c,0xc214800d},
+{0x60,0x80a24001},
+{0x64,0xa2400011},
+{0x68,0xc213400f},
+{0x6c,0x80a04008},
+{0x70,0x0a800005},
+{0x74,0xa0042001},
+{0x78,0x80a04009},
+{0x7c,0x08800004},
+{0xf0,0x6c},
+{0x00,0x80a4000b},
+{0x04,0x9402a001},
+{0x08,0x80a4000b},
+{0x0c,0x0abffff4},
+{0x10,0x9a040010},
+{0x14,0xa133201a},
+{0x18,0x80a44010},
+{0x1c,0x14800003},
+{0x20,0x9a102001},
+{0x24,0x9a102000},
+{0x28,0x80a28010},
+{0x2c,0x14800003},
+{0x30,0x82102001},
+{0x34,0x82102000},
+{0x38,0x80934001},
+{0x3c,0x22800007},
+{0x40,0xc2002274},
+{0x44,0x033fc180},
+{0x48,0x1b008000},
+{0x4c,0x8210603c},
+{0x50,0xda204000},
+{0x54,0xc2002274},
+{0x58,0x80a06000},
+{0x5c,0x02800022},
+{0x60,0xa2102000},
+{0x64,0xc20023d4},
+{0x68,0x80a44001},
+{0x6c,0xa4102000},
+{0x70,0x1a800016},
+{0x74,0xa0102000},
+{0x78,0xc200247c},
+{0x7c,0x80a40001},
+{0xf0,0x6d},
+{0x00,0x3a80000f},
+{0x04,0xa404a001},
+{0x08,0x7ffff776},
+{0x0c,0x90100010},
+{0x10,0x92100008},
+{0x14,0x7ffff71b},
+{0x18,0x90100012},
+{0x1c,0x0300003f},
+{0x20,0xda002274},
+{0x24,0x821063ff},
+{0x28,0x9a0b4001},
+{0x2c,0x80a2000d},
+{0x30,0xa2400011},
+{0x34,0x10bffff1},
+{0x38,0xa0042001},
+{0x3c,0xc20023d4},
+{0x40,0x10bfffec},
+{0x44,0x80a48001},
+{0x48,0xc2102274},
+{0x4c,0x80a44001},
+{0x50,0x08800005},
+{0x54,0x033fc180},
+{0x58,0x1b004000},
+{0x5c,0x8210603c},
+{0x60,0xda204000},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x9de3bf98},
+{0x70,0xda002310},
+{0x74,0x80a36000},
+{0x78,0x02800058},
+{0x7c,0x01000000},
+{0xf0,0x6e},
+{0x00,0xc200254c},
+{0x04,0x80886100},
+{0x08,0x12800054},
+{0x0c,0x01000000},
+{0x10,0xc2002578},
+{0x14,0x82006001},
+{0x18,0x80a0400d},
+{0x1c,0x0a80004f},
+{0x20,0xc2202578},
+{0x24,0xa4102000},
+{0x28,0xc20023d4},
+{0x2c,0x80a48001},
+{0x30,0xc0202578},
+{0x34,0xa2102000},
+{0x38,0x1a80002c},
+{0x3c,0xa72c6002},
+{0x40,0xc204e364},
+{0x44,0x80a06000},
+{0x48,0x02800024},
+{0x4c,0xa0102000},
+{0x50,0xc20022fc},
+{0x54,0x80a40001},
+{0x58,0x1a800020},
+{0x5c,0x15000018},
+{0x60,0xc2002548},
+{0x64,0x80886020},
+{0x68,0x03000017},
+{0x6c,0x9a106100},
+{0x70,0xc20c2380},
+{0x74,0x90100011},
+{0x78,0x9412a200},
+{0x7c,0x02800009},
+{0xf0,0x6f},
+{0x00,0x920860ff},
+{0x04,0xc200258c},
+{0x08,0x80a06000},
+{0x0c,0x22800005},
+{0x10,0x9410000d},
+{0x14,0x03000018},
+{0x18,0x9a106340},
+{0x1c,0x9410000d},
+{0x20,0x7ffff701},
+{0x24,0xa0042001},
+{0x28,0xc204e364},
+{0x2c,0xda002348},
+{0x30,0x98020001},
+{0x34,0x82034001},
+{0x38,0x80a20001},
+{0x3c,0x38bfffe5},
+{0x40,0xa404a001},
+{0x44,0x80a3000d},
+{0x48,0x3abfffe3},
+{0x4c,0xc20022fc},
+{0x50,0x10bfffe0},
+{0x54,0xa404a001},
+{0x58,0xa2046001},
+{0x5c,0xc20023d4},
+{0x60,0x10bfffd6},
+{0x64,0x80a44001},
+{0x68,0xd8002574},
+{0x6c,0x80a0000c},
+{0x70,0x9a603fff},
+{0x74,0x80a00012},
+{0x78,0x82603fff},
+{0x7c,0x808b4001},
+{0xf0,0x70},
+{0x00,0x0280000a},
+{0x04,0x80a4a000},
+{0x08,0xda002548},
+{0x0c,0x83336005},
+{0x10,0x82086001},
+{0x14,0x82186001},
+{0x18,0x83286005},
+{0x1c,0x9a0b7fdf},
+{0x20,0x9a134001},
+{0x24,0xda202548},
+{0x28,0x12800004},
+{0x2c,0x82032001},
+{0x30,0x10800003},
+{0x34,0xc0202574},
+{0x38,0xc2202574},
+{0x3c,0xc2002574},
+{0x40,0x80a06002},
+{0x44,0x08800005},
+{0x48,0x1b000040},
+{0x4c,0xc200254c},
+{0x50,0x8210400d},
+{0x54,0xc220254c},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x9de3bf58},
+{0x64,0xc2002548},
+{0x68,0x80886001},
+{0x6c,0x1280006d},
+{0x70,0x01000000},
+{0x74,0xfa002500},
+{0x78,0xc20021f4},
+{0x7c,0x80a74001},
+{0xf0,0x71},
+{0x00,0x18800068},
+{0x04,0x01000000},
+{0x08,0xc200254c},
+{0x0c,0x8330600b},
+{0x10,0x82086001},
+{0x14,0x80a00001},
+{0x18,0x9a603fff},
+{0x1c,0x9403400d},
+{0x20,0xc252a210},
+{0x24,0x80a06000},
+{0x28,0x0280005e},
+{0x2c,0x8207bfb8},
+{0x30,0xb810200f},
+{0x34,0xc0204000},
+{0x38,0xb8873fff},
+{0x3c,0x1cbffffe},
+{0x40,0x82006004},
+{0x44,0xb0102001},
+{0x48,0xc2002300},
+{0x4c,0x80a60001},
+{0x50,0x1880003b},
+{0x54,0x03000019},
+{0x58,0x82106080},
+{0x5c,0x96006030},
+{0x60,0xb4102001},
+{0x64,0xc2002308},
+{0x68,0x80a68001},
+{0x6c,0x38800030},
+{0x70,0xb0062001},
+{0x74,0xb202e004},
+{0x78,0xfa52a210},
+{0x7c,0xc2064000},
+{0xf0,0x72},
+{0x00,0x80a0401d},
+{0x04,0x36800025},
+{0x08,0xb406a001},
+{0x0c,0x832ea018},
+{0x10,0xbb2e2010},
+{0x14,0x8200401d},
+{0x18,0x9e006001},
+{0x1c,0xb8102000},
+{0x20,0x98102001},
+{0x24,0xb607bfb8},
+{0x28,0xbb2f2002},
+{0x2c,0xc20f67f8},
+{0x30,0x80a68001},
+{0x34,0x1280000f},
+{0x38,0xb8072001},
+{0x3c,0xc20f67f9},
+{0x40,0x80a60001},
+{0x44,0x3280000c},
+{0x48,0xc21767f8},
+{0x4c,0xd826c000},
+{0x50,0xc21767fa},
+{0x54,0x80a061fe},
+{0x58,0x38800010},
+{0x5c,0xb406a001},
+{0x60,0xc20767f8},
+{0x64,0x82006001},
+{0x68,0x1080000b},
+{0x6c,0xc22767f8},
+{0x70,0xc21767f8},
+{0x74,0x80a06000},
+{0x78,0x12800005},
+{0x7c,0x80a7200f},
+{0xf0,0x73},
+{0x00,0xd826c000},
+{0x04,0x10800004},
+{0x08,0xde2767f8},
+{0x0c,0x08bfffe7},
+{0x10,0xb606e004},
+{0x14,0xb406a001},
+{0x18,0xc2002308},
+{0x1c,0x80a68001},
+{0x20,0x08bfffd6},
+{0x24,0xb2066004},
+{0x28,0xb0062001},
+{0x2c,0xc2002300},
+{0x30,0x80a60001},
+{0x34,0x08bfffcb},
+{0x38,0x9602e030},
+{0x3c,0xb4102000},
+{0x40,0xb8102000},
+{0x44,0xb607bff8},
+{0x48,0xbb2f2002},
+{0x4c,0x8207401b},
+{0x50,0xc2007fc0},
+{0x54,0x80a06000},
+{0x58,0x32800004},
+{0x5c,0xfa1767fa},
+{0x60,0x10800005},
+{0x64,0xc02767f8},
+{0x68,0xc20b63cc},
+{0x6c,0x80a74001},
+{0x70,0xb466bfff},
+{0x74,0xb8072001},
+{0x78,0x80a7200f},
+{0x7c,0x08bffff4},
+{0xf0,0x74},
+{0x00,0xbb2f2002},
+{0x04,0xc20b63ce},
+{0x08,0x80a68001},
+{0x0c,0x08800005},
+{0x10,0x3b000200},
+{0x14,0xc200254c},
+{0x18,0x8210401d},
+{0x1c,0xc220254c},
+{0x20,0x81c7e008},
+{0x24,0x81e80000},
+{0x28,0x9de3bf98},
+{0x2c,0xd8002200},
+{0x30,0x80a32000},
+{0x34,0x1280000a},
+{0x38,0x03000019},
+{0x3c,0xc2002548},
+{0x40,0x82087ffb},
+{0x44,0xc2202548},
+{0x48,0x033fc180},
+{0x4c,0x8210602c},
+{0x50,0xc0204000},
+{0x54,0x1080004d},
+{0x58,0xc020253c},
+{0x5c,0x82106080},
+{0x60,0xc0202504},
+{0x64,0x9e006030},
+{0x68,0xb0102001},
+{0x6c,0x10800016},
+{0x70,0xda102238},
+{0x74,0xf2002308},
+{0x78,0x80a6c019},
+{0x7c,0x38800011},
+{0xf0,0x75},
+{0x00,0xb0062001},
+{0x04,0xf410223a},
+{0x08,0xba03e004},
+{0x0c,0xc2074000},
+{0x10,0xb606e001},
+{0x14,0xba076004},
+{0x18,0x80a0401a},
+{0x1c,0x04800005},
+{0x20,0xb820401a},
+{0x24,0xc2002504},
+{0x28,0x8200401c},
+{0x2c,0xc2202504},
+{0x30,0x80a6c019},
+{0x34,0x28bffff7},
+{0x38,0xc2074000},
+{0x3c,0xb0062001},
+{0x40,0x9e03e030},
+{0x44,0x80a36000},
+{0x48,0x32800003},
+{0x4c,0x80a6000d},
+{0x50,0x80a6000c},
+{0x54,0x08bfffe8},
+{0x58,0xb6102001},
+{0x5c,0xfa10223e},
+{0x60,0xc2002504},
+{0x64,0x80a0401d},
+{0x68,0x3480000a},
+{0x6c,0xc2002548},
+{0x70,0xfa10223c},
+{0x74,0x80a76000},
+{0x78,0x2280000b},
+{0x7c,0xc2002548},
+{0xf0,0x76},
+{0x00,0xc2082517},
+{0x04,0x80a0401d},
+{0x08,0x0a800007},
+{0x0c,0xc2002548},
+{0x10,0x80886008},
+{0x14,0x22800008},
+{0x18,0xc200253c},
+{0x1c,0x10800008},
+{0x20,0xc020253c},
+{0x24,0x80886008},
+{0x28,0x22800005},
+{0x2c,0xc020253c},
+{0x30,0xc200253c},
+{0x34,0x82006001},
+{0x38,0xc220253c},
+{0x3c,0xfa00253c},
+{0x40,0xc2002290},
+{0x44,0x80a74001},
+{0x48,0x0880000b},
+{0x4c,0xfa002548},
+{0x50,0x83376003},
+{0x54,0x82086001},
+{0x58,0x82186001},
+{0x5c,0x83286002},
+{0x60,0xba0f7ffb},
+{0x64,0xba174001},
+{0x68,0xfa202548},
+{0x6c,0xc020253c},
+{0x70,0xfa002548},
+{0x74,0xbb376002},
+{0x78,0x033fc180},
+{0x7c,0xba0f6001},
+{0xf0,0x77},
+{0x00,0x8210602c},
+{0x04,0xfa204000},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x9de3bf70},
+{0x14,0xc2002548},
+{0x18,0x80886400},
+{0x1c,0x12800098},
+{0x20,0x1b00003f},
+{0x24,0xc2002350},
+{0x28,0x9a1363ff},
+{0x2c,0xba08400d},
+{0x30,0xa4102001},
+{0x34,0xda002300},
+{0x38,0x80a4800d},
+{0x3c,0x18800055},
+{0x40,0xa3306010},
+{0x44,0xae10200c},
+{0x48,0xac10200c},
+{0x4c,0xaa102000},
+{0x50,0xa8102000},
+{0x54,0xa6102000},
+{0x58,0x80a46000},
+{0x5c,0x0280002c},
+{0x60,0xa0102000},
+{0x64,0x03000019},
+{0x68,0x96106080},
+{0x6c,0x92102000},
+{0x70,0x9807bfd0},
+{0x74,0x8204c009},
+{0x78,0xda086440},
+{0x7c,0x8205800d},
+{0xf0,0x78},
+{0x00,0x80a36000},
+{0x04,0x02800008},
+{0x08,0x83286002},
+{0x0c,0xc200400b},
+{0x10,0xc2230000},
+{0x14,0x92026001},
+{0x18,0x80a2600b},
+{0x1c,0x04bffff6},
+{0x20,0x98032004},
+{0x24,0x7ffff46c},
+{0x28,0x9007bfd0},
+{0x2c,0x80a74011},
+{0x30,0x1480000b},
+{0x34,0x9210001d},
+{0x38,0x832f6002},
+{0x3c,0x8200401e},
+{0x40,0x9a007fd0},
+{0x44,0xc2034000},
+{0x48,0x92026001},
+{0x4c,0xa0040001},
+{0x50,0x80a24011},
+{0x54,0x04bffffc},
+{0x58,0x9a036004},
+{0x5c,0x8224401d},
+{0x60,0x82006001},
+{0x64,0x9b3c201f},
+{0x68,0x81836000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0xa07c0001},
+{0x7c,0xc25021ae},
+{0xf0,0x79},
+{0x00,0x80a40001},
+{0x04,0x26800002},
+{0x08,0xa0100001},
+{0x0c,0x92102000},
+{0x10,0x15000019},
+{0x14,0x82050009},
+{0x18,0xda086440},
+{0x1c,0x8205c00d},
+{0x20,0x92026001},
+{0x24,0x9612a080},
+{0x28,0x80a36000},
+{0x2c,0x0280000e},
+{0x30,0x99286002},
+{0x34,0xc20023c8},
+{0x38,0x83306011},
+{0x3c,0xda03000b},
+{0x40,0x80886001},
+{0x44,0x02800005},
+{0x48,0x9a234010},
+{0x4c,0xc20ca2af},
+{0x50,0x825b4001},
+{0x54,0x9b386007},
+{0x58,0x80a2600b},
+{0x5c,0x04bfffee},
+{0x60,0xda23000b},
+{0x64,0xaa056001},
+{0x68,0xa604e00c},
+{0x6c,0x80a56001},
+{0x70,0x04bfffba},
+{0x74,0xa805200c},
+{0x78,0xa404a001},
+{0x7c,0xc2002300},
+{0xf0,0x7a},
+{0x00,0x80a48001},
+{0x04,0xac05a00c},
+{0x08,0x08bfffb1},
+{0x0c,0xae05e00c},
+{0x10,0xc2082247},
+{0x14,0x80a06000},
+{0x18,0x02800039},
+{0x1c,0x01000000},
+{0x20,0xc20022f8},
+{0x24,0x80a48001},
+{0x28,0x18800035},
+{0x2c,0x82048012},
+{0x30,0x82004012},
+{0x34,0xa1286004},
+{0x38,0xa2100010},
+{0x3c,0x92102001},
+{0x40,0xc20022fc},
+{0x44,0x80a24001},
+{0x48,0x1880000e},
+{0x4c,0x03000019},
+{0x50,0x82106080},
+{0x54,0x82044001},
+{0x58,0x9a006004},
+{0x5c,0x9807bfd0},
+{0x60,0xc2034000},
+{0x64,0xc2230000},
+{0x68,0x92026001},
+{0x6c,0xc20022fc},
+{0x70,0x80a24001},
+{0x74,0x9a036004},
+{0x78,0x08bffffa},
+{0x7c,0x98032004},
+{0xf0,0x7b},
+{0x00,0x9007bfd0},
+{0x04,0x7ffff414},
+{0x08,0xd20022fc},
+{0x0c,0xc2082247},
+{0x10,0x83286002},
+{0x14,0x8200401e},
+{0x18,0xda007fd0},
+{0x1c,0x80a36000},
+{0x20,0x26800012},
+{0x24,0xa404a001},
+{0x28,0x92102001},
+{0x2c,0xc20022fc},
+{0x30,0x80a24001},
+{0x34,0x1880000c},
+{0x38,0x03000019},
+{0x3c,0x96106080},
+{0x40,0x98042004},
+{0x44,0xc203000b},
+{0x48,0x8220400d},
+{0x4c,0xc223000b},
+{0x50,0x92026001},
+{0x54,0xc20022fc},
+{0x58,0x80a24001},
+{0x5c,0x08bffffa},
+{0x60,0x98032004},
+{0x64,0xa404a001},
+{0x68,0xc20022f8},
+{0x6c,0x80a48001},
+{0x70,0xa2046030},
+{0x74,0x08bfffd2},
+{0x78,0xa0042030},
+{0x7c,0x81c7e008},
+{0xf0,0x7c},
+{0x00,0x81e80000},
+{0x04,0x9de3bf58},
+{0x08,0xe2502458},
+{0x0c,0x80a46000},
+{0x10,0x02800058},
+{0x14,0x01000000},
+{0x18,0xc20022f8},
+{0x1c,0x80a44001},
+{0x20,0x1a800054},
+{0x24,0xa0102001},
+{0x28,0xc20022fc},
+{0x2c,0x80a40001},
+{0x30,0x18800050},
+{0x34,0xe450245a},
+{0x38,0x96102001},
+{0x3c,0xc20022f8},
+{0x40,0x80a2c001},
+{0x44,0x1880000f},
+{0x48,0x03000019},
+{0x4c,0x9b2c2002},
+{0x50,0x82106080},
+{0x54,0x9a034001},
+{0x58,0x9a036030},
+{0x5c,0x9807bfb8},
+{0x60,0xc2034000},
+{0x64,0xc2230000},
+{0x68,0x9602e001},
+{0x6c,0xc20022f8},
+{0x70,0x80a2c001},
+{0x74,0x9a036030},
+{0x78,0x08bffffa},
+{0x7c,0x98032004},
+{0xf0,0x7d},
+{0x00,0x9007bfb8},
+{0x04,0x7ffff3d4},
+{0x08,0xd20022f8},
+{0x0c,0x96100012},
+{0x10,0x80a48011},
+{0x14,0x1480000b},
+{0x18,0x94102000},
+{0x1c,0x832ca002},
+{0x20,0x8200401e},
+{0x24,0x9a007fb8},
+{0x28,0xc2034000},
+{0x2c,0x9602e001},
+{0x30,0x94028001},
+{0x34,0x80a2c011},
+{0x38,0x04bffffc},
+{0x3c,0x9a036004},
+{0x40,0x82244012},
+{0x44,0x82006001},
+{0x48,0x9b3aa01f},
+{0x4c,0x81836000},
+{0x50,0x01000000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x947a8001},
+{0x60,0xc25021ac},
+{0x64,0x80a28001},
+{0x68,0x26800002},
+{0x6c,0x94100001},
+{0x70,0x96102001},
+{0x74,0xc20022f8},
+{0x78,0x80a2c001},
+{0x7c,0x18800018},
+{0xf0,0x7e},
+{0x00,0x9b2c2002},
+{0x04,0x03000019},
+{0x08,0x92106080},
+{0x0c,0x98036030},
+{0x10,0xc2030009},
+{0x14,0x9a20400a},
+{0x18,0xda230009},
+{0x1c,0xc20023c8},
+{0x20,0x83306012},
+{0x24,0x80886001},
+{0x28,0x02800009},
+{0x2c,0x9602e001},
+{0x30,0xc20c22af},
+{0x34,0x825b4001},
+{0x38,0x9b38601f},
+{0x3c,0x9b336019},
+{0x40,0x8200400d},
+{0x44,0x83386007},
+{0x48,0xc2230009},
+{0x4c,0xc20022f8},
+{0x50,0x80a2c001},
+{0x54,0x08bfffef},
+{0x58,0x98032030},
+{0x5c,0xa0042001},
+{0x60,0xc20022fc},
+{0x64,0x80a40001},
+{0x68,0x08bfffb5},
+{0x6c,0x96102001},
+{0x70,0x81c7e008},
+{0x74,0x81e80000},
+{0x78,0x9de3bf98},
+{0x7c,0xfa5023c6},
+{0xf0,0x7f},
+{0x00,0x80a76000},
+{0x04,0x0280003d},
+{0x08,0x9e102001},
+{0x0c,0xc20022fc},
+{0x10,0x80a3c001},
+{0x14,0x18800039},
+{0x18,0x17000019},
+{0x1c,0x8212e080},
+{0x20,0x9810001d},
+{0x24,0x9a006004},
+{0x28,0xb6102001},
+{0x2c,0xf20022f8},
+{0x30,0x80a6c019},
+{0x34,0xb4102000},
+{0x38,0x1880002b},
+{0x3c,0x82102000},
+{0x40,0xf05023c4},
+{0x44,0xba036030},
+{0x48,0xf8074000},
+{0x4c,0xb606e001},
+{0x50,0x80a70018},
+{0x54,0x06800004},
+{0x58,0xba076030},
+{0x5c,0xb406801c},
+{0x60,0x82006001},
+{0x64,0x80a6c019},
+{0x68,0x28bffff9},
+{0x6c,0xf8074000},
+{0x70,0x80a06000},
+{0x74,0x2280001d},
+{0x78,0x9e03e001},
+{0x7c,0x953ea01f},
+{0xf0,0x80},
+{0x00,0x8182a000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x01000000},
+{0x10,0x827e8001},
+{0x14,0x8258400c},
+{0x18,0xbb38601f},
+{0x1c,0xbb376016},
+{0x20,0x8200401d},
+{0x24,0xb6102001},
+{0x28,0xfa0022f8},
+{0x2c,0x80a6c01d},
+{0x30,0x1880000d},
+{0x34,0xb538600a},
+{0x38,0x832be002},
+{0x3c,0xba006030},
+{0x40,0xb812e080},
+{0x44,0xc207401c},
+{0x48,0x8220401a},
+{0x4c,0xc227401c},
+{0x50,0xb606e001},
+{0x54,0xc20022f8},
+{0x58,0x80a6c001},
+{0x5c,0x08bffffa},
+{0x60,0xba076030},
+{0x64,0x9e03e001},
+{0x68,0xc20022fc},
+{0x6c,0x80a3c001},
+{0x70,0x08bfffce},
+{0x74,0x9a036004},
+{0x78,0x81c7e008},
+{0x7c,0x81e80000},
+{0xf0,0x81},
+{0x00,0xc2082673},
+{0x04,0xda00256c},
+{0x08,0x82006001},
+{0x0c,0xd808257f},
+{0x10,0x9a5b4001},
+{0x14,0x98032001},
+{0x18,0x81800000},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x01000000},
+{0x28,0x9a73400c},
+{0x2c,0xda20256c},
+{0x30,0x96102000},
+{0x34,0x832ae002},
+{0x38,0xd800256c},
+{0x3c,0xda1063b6},
+{0x40,0x9a5b400c},
+{0x44,0x9b336007},
+{0x48,0x9602e001},
+{0x4c,0x80a2e003},
+{0x50,0x04bffff9},
+{0x54,0xda206520},
+{0x58,0xc20023c0},
+{0x5c,0x80a06000},
+{0x60,0x02800007},
+{0x64,0x82103001},
+{0x68,0xc2002200},
+{0x6c,0x80a06000},
+{0x70,0x22800005},
+{0x74,0xc2002540},
+{0x78,0x82103001},
+{0x7c,0xc220252c},
+{0xf0,0x82},
+{0x00,0xc2002540},
+{0x04,0x80a06000},
+{0x08,0x02800005},
+{0x0c,0xc2002288},
+{0x10,0x9b306001},
+{0x14,0x83306002},
+{0x18,0x8200400d},
+{0x1c,0xc220251c},
+{0x20,0x03000007},
+{0x24,0x81c0626c},
+{0x28,0x01000000},
+{0x2c,0x01000000},
+{0x30,0x9de3bf98},
+{0x34,0xc2002308},
+{0x38,0x82006001},
+{0x3c,0xe00022fc},
+{0x40,0x80a40001},
+{0x44,0x0a80001e},
+{0x48,0xa4102001},
+{0x4c,0xc20022f8},
+{0x50,0x80a48001},
+{0x54,0x38800017},
+{0x58,0xc2002308},
+{0x5c,0x832c2002},
+{0x60,0xa2006030},
+{0x64,0xc2002fec},
+{0x68,0x92100012},
+{0x6c,0x80a06000},
+{0x70,0xa404a001},
+{0x74,0x02800004},
+{0x78,0x90100010},
+{0x7c,0x9fc04000},
+{0xf0,0x83},
+{0x00,0x01000000},
+{0x04,0x03000019},
+{0x08,0x98106080},
+{0x0c,0xda04400c},
+{0x10,0x82106084},
+{0x14,0xda244001},
+{0x18,0xc024400c},
+{0x1c,0xc20022f8},
+{0x20,0x80a48001},
+{0x24,0x08bffff0},
+{0x28,0xa2046030},
+{0x2c,0xc2002308},
+{0x30,0xa0043fff},
+{0x34,0x10bfffe3},
+{0x38,0x82006001},
+{0x3c,0xc2002300},
+{0x40,0x82006001},
+{0x44,0xe40022f8},
+{0x48,0x80a48001},
+{0x4c,0x0a800022},
+{0x50,0x82048012},
+{0x54,0x82004012},
+{0x58,0xa7286002},
+{0x5c,0xa0102001},
+{0x60,0xc2002308},
+{0x64,0x80a40001},
+{0x68,0x18800015},
+{0x6c,0x832ce002},
+{0x70,0xa2006004},
+{0x74,0xc2002fec},
+{0x78,0x90100010},
+{0x7c,0x80a06000},
+{0xf0,0x84},
+{0x00,0xa0042001},
+{0x04,0x02800004},
+{0x08,0x92100012},
+{0x0c,0x9fc04000},
+{0x10,0x01000000},
+{0x14,0x03000019},
+{0x18,0x98106080},
+{0x1c,0xda04400c},
+{0x20,0x821060b0},
+{0x24,0xda244001},
+{0x28,0xc024400c},
+{0x2c,0xc2002308},
+{0x30,0x80a40001},
+{0x34,0x08bffff0},
+{0x38,0xa2046004},
+{0x3c,0xc2002300},
+{0x40,0xa404bfff},
+{0x44,0x82006001},
+{0x48,0x80a48001},
+{0x4c,0x1abfffe4},
+{0x50,0xa604fff4},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf98},
+{0x60,0xc2002548},
+{0x64,0x80886100},
+{0x68,0xac102000},
+{0x6c,0x128000cf},
+{0x70,0xa6102000},
+{0x74,0xc2002568},
+{0x78,0x80a06000},
+{0x7c,0x02800004},
+{0xf0,0x85},
+{0x00,0xa2102001},
+{0x04,0x82007fff},
+{0x08,0xc2202568},
+{0x0c,0xc2002300},
+{0x10,0x80a44001},
+{0x14,0x388000a9},
+{0x18,0xda002530},
+{0x1c,0xae10200c},
+{0x20,0xa4102001},
+{0x24,0xc2002308},
+{0x28,0x80a48001},
+{0x2c,0x18800092},
+{0x30,0x9b2de002},
+{0x34,0x03000050},
+{0x38,0xaa044001},
+{0x3c,0xa8036004},
+{0x40,0xc2002514},
+{0x44,0x80a06009},
+{0x48,0x1880009b},
+{0x4c,0x03000019},
+{0x50,0x82106080},
+{0x54,0xda050001},
+{0x58,0xc2002474},
+{0x5c,0x80a34001},
+{0x60,0x0680007f},
+{0x64,0x03000040},
+{0x68,0x90100012},
+{0x6c,0x7ffff6a4},
+{0x70,0x92100011},
+{0x74,0x80a22000},
+{0x78,0x02800079},
+{0x7c,0x03000040},
+{0xf0,0x86},
+{0x00,0xc2002ff0},
+{0x04,0x80a06000},
+{0x08,0x2280000a},
+{0x0c,0xc2002fe0},
+{0x10,0x90100012},
+{0x14,0x9fc04000},
+{0x18,0x92100011},
+{0x1c,0xc200259c},
+{0x20,0x80a06000},
+{0x24,0x1280006e},
+{0x28,0x03000040},
+{0x2c,0xc2002fe0},
+{0x30,0x80a06000},
+{0x34,0x2280000b},
+{0x38,0xc2002ff4},
+{0x3c,0x90100012},
+{0x40,0x92100011},
+{0x44,0x9fc04000},
+{0x48,0xd4002470},
+{0x4c,0xc200259c},
+{0x50,0x80a06000},
+{0x54,0x12800062},
+{0x58,0x03000040},
+{0x5c,0xc2002ff4},
+{0x60,0x80a06000},
+{0x64,0x02800006},
+{0x68,0xa0102000},
+{0x6c,0x90100012},
+{0x70,0x9fc04000},
+{0x74,0x92100011},
+{0x78,0xe000259c},
+{0x7c,0x90100012},
+{0xf0,0x87},
+{0x00,0x92100011},
+{0x04,0x94100010},
+{0x08,0x7ffff6c7},
+{0x0c,0xd6002470},
+{0x10,0x80a22000},
+{0x14,0x02800052},
+{0x18,0x03000040},
+{0x1c,0xc2002fe0},
+{0x20,0x80a06000},
+{0x24,0x02800007},
+{0x28,0x90100012},
+{0x2c,0x92100011},
+{0x30,0x9fc04000},
+{0x34,0x94102100},
+{0x38,0x10800004},
+{0x3c,0x94100010},
+{0x40,0xc020259c},
+{0x44,0x94100010},
+{0x48,0x90100012},
+{0x4c,0x92100011},
+{0x50,0x7ffff6b5},
+{0x54,0x96102100},
+{0x58,0x80a22000},
+{0x5c,0x22800011},
+{0x60,0xc2002514},
+{0x64,0xc200259c},
+{0x68,0x80a06000},
+{0x6c,0x3280000d},
+{0x70,0xc2002514},
+{0x74,0xc2002280},
+{0x78,0xd8002514},
+{0x7c,0xc2202568},
+{0xf0,0x88},
+{0x00,0x9b2ca010},
+{0x04,0x832b2002},
+{0x08,0x9a034011},
+{0x0c,0xda2066e0},
+{0x10,0x98032001},
+{0x14,0xd8202514},
+{0x18,0x10800006},
+{0x1c,0xac05a001},
+{0x20,0x9b286002},
+{0x24,0xea2366e0},
+{0x28,0x82006001},
+{0x2c,0xc2202514},
+{0x30,0xc2002514},
+{0x34,0x80a0600a},
+{0x38,0x12800029},
+{0x3c,0x03000040},
+{0x40,0x03000019},
+{0x44,0x9e106080},
+{0x48,0xe60026e0},
+{0x4c,0x90102001},
+{0x50,0x932a2002},
+{0x54,0xd40266e0},
+{0x58,0x980aafff},
+{0x5c,0x960cefff},
+{0x60,0x8203000c},
+{0x64,0x9a02c00b},
+{0x68,0x8200400c},
+{0x6c,0x9a03400b},
+{0x70,0x9932a010},
+{0x74,0x980b2fff},
+{0x78,0x9734e010},
+{0x7c,0x83286002},
+{0xf0,0x89},
+{0x00,0x8200400c},
+{0x04,0x960aefff},
+{0x08,0x9b2b6002},
+{0x0c,0x83286002},
+{0x10,0x9a03400b},
+{0x14,0xd800400f},
+{0x18,0x9b2b6002},
+{0x1c,0xc203400f},
+{0x20,0x80a30001},
+{0x24,0x36800004},
+{0x28,0xd42266dc},
+{0x2c,0xe62266dc},
+{0x30,0xa610000a},
+{0x34,0x90022001},
+{0x38,0xda002514},
+{0x3c,0x80a2000d},
+{0x40,0x2abfffe5},
+{0x44,0x932a2002},
+{0x48,0x832b6002},
+{0x4c,0xc02066e0},
+{0x50,0x82037fff},
+{0x54,0xc2202514},
+{0x58,0x03000040},
+{0x5c,0xaa054001},
+{0x60,0xa404a001},
+{0x64,0xc2002308},
+{0x68,0x80a48001},
+{0x6c,0x08bfff75},
+{0x70,0xa8052004},
+{0x74,0xa2046001},
+{0x78,0xc2002300},
+{0x7c,0x80a44001},
+{0xf0,0x8a},
+{0x00,0x08bfff68},
+{0x04,0xae05e00c},
+{0x08,0x80a4e000},
+{0x0c,0x2280000b},
+{0x10,0xda002530},
+{0x14,0xda002514},
+{0x18,0x80a36009},
+{0x1c,0x38800007},
+{0x20,0xda002530},
+{0x24,0x832b6002},
+{0x28,0xe62066e0},
+{0x2c,0x82036001},
+{0x30,0xc2202514},
+{0x34,0xda002530},
+{0x38,0x80a5800d},
+{0x3c,0x14800006},
+{0x40,0x82100016},
+{0x44,0xc2002514},
+{0x48,0x80a34001},
+{0x4c,0x28800002},
+{0x50,0x8210000d},
+{0x54,0x80a5a000},
+{0x58,0x02800004},
+{0x5c,0xc2202530},
+{0x60,0x1080000a},
+{0x64,0xc20021f8},
+{0x68,0x80a06000},
+{0x6c,0x22800009},
+{0x70,0xc2002530},
+{0x74,0xc20025ac},
+{0x78,0x80a06000},
+{0x7c,0x22800004},
+{0xf0,0x8b},
+{0x00,0xc0202530},
+{0x04,0x82006001},
+{0x08,0xc22025ac},
+{0x0c,0xc2002530},
+{0x10,0x80a06000},
+{0x14,0x02800005},
+{0x18,0x01000000},
+{0x1c,0xc2002548},
+{0x20,0x82106040},
+{0x24,0xc2202548},
+{0x28,0x81c7e008},
+{0x2c,0x81e80000},
+{0x30,0xd2002208},
+{0x34,0x80a26000},
+{0x38,0x0280001a},
+{0x3c,0x01000000},
+{0x40,0xc2102548},
+{0x44,0x80886001},
+{0x48,0x12800016},
+{0x4c,0x01000000},
+{0x50,0xc2002514},
+{0x54,0x80a06000},
+{0x58,0x12800007},
+{0x5c,0xc2002558},
+{0x60,0x80a06000},
+{0x64,0x0280000f},
+{0x68,0x9a007fff},
+{0x6c,0x1080000d},
+{0x70,0xda202558},
+{0x74,0x15200040},
+{0x78,0x1b3fc200},
+{0x7c,0x9812a001},
+{0xf0,0x8c},
+{0x00,0x80a06000},
+{0x04,0x12800006},
+{0x08,0x96136070},
+{0x0c,0xd8234000},
+{0x10,0xc2002298},
+{0x14,0xc222c000},
+{0x18,0xd4234000},
+{0x1c,0xd2202558},
+{0x20,0x81c3e008},
+{0x24,0x01000000},
+{0x28,0x82220009},
+{0x2c,0x9a58400a},
+{0x30,0x833b601f},
+{0x34,0x80a20009},
+{0x38,0x83306019},
+{0x3c,0x04800004},
+{0x40,0x90102000},
+{0x44,0x82034001},
+{0x48,0x91386007},
+{0x4c,0x81c3e008},
+{0x50,0x01000000},
+{0x54,0x9de3bf98},
+{0x58,0xc20022f8},
+{0x5c,0x80a07fff},
+{0x60,0x0280001d},
+{0x64,0xa8102001},
+{0x68,0xa6102003},
+{0x6c,0x23000019},
+{0x70,0xa12ce004},
+{0x74,0x82146088},
+{0x78,0xa4146084},
+{0x7c,0xd2040001},
+{0xf0,0x8d},
+{0x00,0xd408228c},
+{0x04,0x7fffffe9},
+{0x08,0xd0040012},
+{0x0c,0x9a146080},
+{0x10,0xd024000d},
+{0x14,0xc2002308},
+{0x18,0xa12ce002},
+{0x1c,0xa0040001},
+{0x20,0xa12c2002},
+{0x24,0xa214607c},
+{0x28,0xd004000d},
+{0x2c,0xd2040011},
+{0x30,0x7fffffde},
+{0x34,0xd408228d},
+{0x38,0xd0240012},
+{0x3c,0xc20022f8},
+{0x40,0xa8052001},
+{0x44,0x82006001},
+{0x48,0x80a50001},
+{0x4c,0x08bfffe8},
+{0x50,0xa604e003},
+{0x54,0xa6102001},
+{0x58,0xc2002308},
+{0x5c,0x80a4c001},
+{0x60,0x1880001c},
+{0x64,0x23000019},
+{0x68,0xa12ce002},
+{0x6c,0x821460e0},
+{0x70,0xa41460b0},
+{0x74,0xd2040001},
+{0x78,0xd408228e},
+{0x7c,0x7fffffcb},
+{0xf0,0x8e},
+{0x00,0xd0040012},
+{0x04,0x9a146080},
+{0x08,0xd024000d},
+{0x0c,0xc2002300},
+{0x10,0xa0004001},
+{0x14,0xa0040001},
+{0x18,0xa12c2002},
+{0x1c,0xa0040013},
+{0x20,0xa12c2002},
+{0x24,0xa2146050},
+{0x28,0xd004000d},
+{0x2c,0xd2040011},
+{0x30,0x7fffffbe},
+{0x34,0xd408228f},
+{0x38,0xd0240012},
+{0x3c,0xa604e001},
+{0x40,0xc2002308},
+{0x44,0x80a4c001},
+{0x48,0x08bfffe8},
+{0x4c,0x23000019},
+{0x50,0x81c7e008},
+{0x54,0x81e80000},
+{0x58,0x9de3bf88},
+{0x5c,0xc2002fe4},
+{0x60,0x9fc04000},
+{0x64,0xd0002590},
+{0x68,0xda002550},
+{0x6c,0x832b6004},
+{0x70,0x8220400d},
+{0x74,0xe000259c},
+{0x78,0x82040001},
+{0x7c,0x83306004},
+{0xf0,0x8f},
+{0x00,0xc2202550},
+{0x04,0x11000018},
+{0x08,0xc2002fe4},
+{0x0c,0x9fc04000},
+{0x10,0x90122200},
+{0x14,0xc2002308},
+{0x18,0xda002300},
+{0x1c,0x9a5b4001},
+{0x20,0xc200259c},
+{0x24,0x8200400d},
+{0x28,0xc220259c},
+{0x2c,0xda00259c},
+{0x30,0xc2002550},
+{0x34,0x80a34001},
+{0x38,0x28800011},
+{0x3c,0xc2002548},
+{0x40,0xc200259c},
+{0x44,0x80a04010},
+{0x48,0x0880000d},
+{0x4c,0xc2002548},
+{0x50,0x80a42000},
+{0x54,0x0280000a},
+{0x58,0x01000000},
+{0x5c,0x82087f7f},
+{0x60,0xc2202548},
+{0x64,0xc2002668},
+{0x68,0x80a06000},
+{0x6c,0x26800006},
+{0x70,0xc0202668},
+{0x74,0x10800005},
+{0x78,0xc208254e},
+{0x7c,0x82106080},
+{0xf0,0x90},
+{0x00,0xc2202548},
+{0x04,0xc208254e},
+{0x08,0x80a00001},
+{0x0c,0x82602000},
+{0x10,0xa0087ffe},
+{0x14,0xd8002548},
+{0x18,0x83332010},
+{0x1c,0x80886001},
+{0x20,0x02800004},
+{0x24,0xa0042003},
+{0x28,0x1080001d},
+{0x2c,0xa0102000},
+{0x30,0x808b2001},
+{0x34,0x1280003f},
+{0x38,0x03000007},
+{0x3c,0xda0026a0},
+{0x40,0x808b4001},
+{0x44,0x3280003c},
+{0x48,0xc0202538},
+{0x4c,0xda002664},
+{0x50,0xc20021dc},
+{0x54,0x80a34001},
+{0x58,0x2a800008},
+{0x5c,0xc2002514},
+{0x60,0xc200254c},
+{0x64,0x8330600e},
+{0x68,0x80886001},
+{0x6c,0x1280000a},
+{0x70,0x808b2040},
+{0x74,0xc2002514},
+{0x78,0x80a06000},
+{0x7c,0x22800009},
+{0xf0,0x91},
+{0x00,0xc20c2314},
+{0x04,0x808b2080},
+{0x08,0x22800006},
+{0x0c,0xc20c2314},
+{0x10,0x808b2040},
+{0x14,0x32800028},
+{0x18,0xc0202538},
+{0x1c,0xc20c2314},
+{0x20,0x80a06000},
+{0x24,0x22800024},
+{0x28,0xc0202538},
+{0x2c,0xc2002538},
+{0x30,0x82006001},
+{0x34,0xc2202538},
+{0x38,0xda0c2314},
+{0x3c,0x80a0400d},
+{0x40,0x0680001d},
+{0x44,0x01000000},
+{0x48,0xc0202538},
+{0x4c,0xc20c234c},
+{0x50,0xc227bfec},
+{0x54,0xc20c230c},
+{0x58,0xc227bff0},
+{0x5c,0xa0102000},
+{0x60,0xc2002308},
+{0x64,0x80a40001},
+{0x68,0x1a800013},
+{0x6c,0x01000000},
+{0x70,0xc20c2380},
+{0x74,0xc227bfe8},
+{0x78,0xa2102000},
+{0x7c,0xc2002300},
+{0xf0,0x92},
+{0x00,0x80a44001},
+{0x04,0x3a800006},
+{0x08,0xa0042001},
+{0x0c,0x7ffff677},
+{0x10,0x9007bfe8},
+{0x14,0x10bffffa},
+{0x18,0xa2046001},
+{0x1c,0xc2002308},
+{0x20,0x80a40001},
+{0x24,0x2abffff4},
+{0x28,0xc20c2380},
+{0x2c,0x30800002},
+{0x30,0xc0202538},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x9de3bf88},
+{0x40,0xd8082246},
+{0x44,0x80a32000},
+{0x48,0x22800043},
+{0x4c,0xc020255c},
+{0x50,0xda00254c},
+{0x54,0x83336018},
+{0x58,0x80886001},
+{0x5c,0x12800007},
+{0x60,0x03004000},
+{0x64,0xc2002568},
+{0x68,0x80a06000},
+{0x6c,0x22800008},
+{0x70,0xc2002540},
+{0x74,0x03004000},
+{0x78,0x822b4001},
+{0x7c,0xc220254c},
+{0xf0,0x93},
+{0x00,0xc027bfec},
+{0x04,0x1080000e},
+{0x08,0xc027bff0},
+{0x0c,0x80a06000},
+{0x10,0x32800031},
+{0x14,0xc020255c},
+{0x18,0xc200255c},
+{0x1c,0x82006001},
+{0x20,0x80a0400c},
+{0x24,0x0a80002c},
+{0x28,0xc220255c},
+{0x2c,0xc2082244},
+{0x30,0xc227bfec},
+{0x34,0xc2082245},
+{0x38,0xc227bff0},
+{0x3c,0xc2002308},
+{0x40,0xa0006001},
+{0x44,0xc20022fc},
+{0x48,0x80a40001},
+{0x4c,0x1880000c},
+{0x50,0xa2102001},
+{0x54,0xc20c237f},
+{0x58,0xc227bfe8},
+{0x5c,0xc20022f8},
+{0x60,0x80a44001},
+{0x64,0x38bffff8},
+{0x68,0xa0042001},
+{0x6c,0x7ffff63f},
+{0x70,0x9007bfe8},
+{0x74,0x10bffffa},
+{0x78,0xa2046001},
+{0x7c,0xa0102001},
+{0xf0,0x94},
+{0x00,0xc2002308},
+{0x04,0x80a40001},
+{0x08,0x38800013},
+{0x0c,0xc020255c},
+{0x10,0xd80c237f},
+{0x14,0xd827bfe8},
+{0x18,0xc200247c},
+{0x1c,0xda002300},
+{0x20,0x8258400d},
+{0x24,0x98030001},
+{0x28,0xd827bfe8},
+{0x2c,0xc2002300},
+{0x30,0xa2006001},
+{0x34,0xc20022f8},
+{0x38,0x80a44001},
+{0x3c,0x38bffff1},
+{0x40,0xa0042001},
+{0x44,0x7ffff629},
+{0x48,0x9007bfe8},
+{0x4c,0x10bffffa},
+{0x50,0xa2046001},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf80},
+{0x60,0x03003fc0},
+{0x64,0x82106001},
+{0x68,0xc227bff4},
+{0x6c,0xc227bff0},
+{0x70,0xa4102000},
+{0x74,0xc2002514},
+{0x78,0x80a48001},
+{0x7c,0x1a800025},
+{0xf0,0x95},
+{0x00,0xa2102000},
+{0x04,0x8207bff8},
+{0x08,0x9a044001},
+{0x0c,0xa12c6002},
+{0x10,0xa0040001},
+{0x14,0xd44b7ff9},
+{0x18,0x90100012},
+{0x1c,0x7ffff578},
+{0x20,0xd24b7ff8},
+{0x24,0xa2046001},
+{0x28,0x80a46003},
+{0x2c,0x04bffff6},
+{0x30,0xd0243fe8},
+{0x34,0xc2002fe8},
+{0x38,0x80a06000},
+{0x3c,0x02800005},
+{0x40,0xda07bfe4},
+{0x44,0x9fc04000},
+{0x48,0x9007bfe0},
+{0x4c,0xda07bfe4},
+{0x50,0xc207bfec},
+{0x54,0x83286010},
+{0x58,0x9b2b6018},
+{0x5c,0x9a034001},
+{0x60,0xc207bfe0},
+{0x64,0x83286008},
+{0x68,0x9a034001},
+{0x6c,0xc207bfe8},
+{0x70,0x9a034001},
+{0x74,0x832ca002},
+{0x78,0xda206708},
+{0x7c,0xa404a001},
+{0xf0,0x96},
+{0x00,0xc2002514},
+{0x04,0x80a48001},
+{0x08,0x0abfffdf},
+{0x0c,0xa2102000},
+{0x10,0x81c7e008},
+{0x14,0x81e80000},
+{0x18,0x9de3bf98},
+{0x1c,0x90102000},
+{0x20,0xc2002514},
+{0x24,0x80a20001},
+{0x28,0x1a800077},
+{0x2c,0x92102000},
+{0x30,0xb72a2002},
+{0x34,0xf20ee708},
+{0x38,0xc20ee709},
+{0x3c,0x80a64001},
+{0x40,0x9e102000},
+{0x44,0x9a102000},
+{0x48,0x14800024},
+{0x4c,0x98102000},
+{0x50,0x82064019},
+{0x54,0x82004019},
+{0x58,0x3b000019},
+{0x5c,0xa0176080},
+{0x60,0xb9286002},
+{0x64,0xc20ee70b},
+{0x68,0xf40ee70a},
+{0x6c,0x80a68001},
+{0x70,0x14800014},
+{0x74,0x8207001a},
+{0x78,0x83286002},
+{0x7c,0xb0004010},
+{0xf0,0x97},
+{0x00,0x94066001},
+{0x04,0xd60a670b},
+{0x08,0xf6060000},
+{0x0c,0x8206a001},
+{0x10,0xb4100001},
+{0x14,0xba5ec001},
+{0x18,0xb0062004},
+{0x1c,0x80a6e000},
+{0x20,0x04800005},
+{0x24,0x825ec00a},
+{0x28,0x9a034001},
+{0x2c,0x9803001d},
+{0x30,0x9e03c01b},
+{0x34,0x80a6800b},
+{0x38,0x24bffff5},
+{0x3c,0xf6060000},
+{0x40,0xb72a2002},
+{0x44,0xb2066001},
+{0x48,0xc20ee709},
+{0x4c,0x80a64001},
+{0x50,0x04bfffe5},
+{0x54,0xb807200c},
+{0x58,0x832b6006},
+{0x5c,0xb92b2006},
+{0x60,0x9b38601f},
+{0x64,0x81836000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0xb678400f},
+{0x78,0xfa0266e0},
+{0x7c,0x833f201f},
+{0xf0,0x98},
+{0x00,0x81806000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x01000000},
+{0x10,0xb87f000f},
+{0x14,0xbb37600c},
+{0x18,0x808f6001},
+{0x1c,0x9a06ffa0},
+{0x20,0x02800007},
+{0x24,0x98073fa0},
+{0x28,0xc200237c},
+{0x2c,0x80a06000},
+{0x30,0x22800003},
+{0x34,0x9a06ff60},
+{0x38,0x98073f60},
+{0x3c,0x80a36000},
+{0x40,0x24800002},
+{0x44,0x9a102001},
+{0x48,0x80a32000},
+{0x4c,0x24800002},
+{0x50,0x98102001},
+{0x54,0xfa0022f8},
+{0x58,0x832f6006},
+{0x5c,0x80a34001},
+{0x60,0x3a800002},
+{0x64,0x9a007fff},
+{0x68,0xc20022fc},
+{0x6c,0x83286006},
+{0x70,0x80a30001},
+{0x74,0x3a800002},
+{0x78,0x98007fff},
+{0x7c,0xc20021e0},
+{0xf0,0x99},
+{0x00,0x80a06000},
+{0x04,0x22800012},
+{0x08,0x9e102000},
+{0x0c,0x80a76040},
+{0x10,0x3880000f},
+{0x14,0x9e102000},
+{0x18,0x81800000},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x01000000},
+{0x28,0x9ef3c001},
+{0x2c,0x12800004},
+{0x30,0x80a3e00f},
+{0x34,0x10800006},
+{0x38,0x9e102001},
+{0x3c,0x34800004},
+{0x40,0x9e10200f},
+{0x44,0x10800003},
+{0x48,0x832b6010},
+{0x4c,0x832b6010},
+{0x50,0x8200400c},
+{0x54,0xbb2be01c},
+{0x58,0xba074001},
+{0x5c,0xf80266e0},
+{0x60,0x0300003c},
+{0x64,0xb80f0001},
+{0x68,0xba07401c},
+{0x6c,0xfa2266e0},
+{0x70,0x90022001},
+{0x74,0xc2002514},
+{0x78,0x80a20001},
+{0x7c,0x0abfff8d},
+{0xf0,0x9a},
+{0x00,0x92026004},
+{0x04,0x7ffff382},
+{0x08,0x91e8205a},
+{0x0c,0x01000000},
+{0x10,0x9de3bf98},
+{0x14,0xd8002548},
+{0x18,0x808b2001},
+{0x1c,0x12800081},
+{0x20,0x01000000},
+{0x24,0xc208254d},
+{0x28,0x80a06000},
+{0x2c,0x1280007d},
+{0x30,0x01000000},
+{0x34,0xc208254e},
+{0x38,0x80a06000},
+{0x3c,0x02800079},
+{0x40,0x01000000},
+{0x44,0xc2002554},
+{0x48,0x825860fa},
+{0x4c,0xda002500},
+{0x50,0x80a34001},
+{0x54,0x0a800073},
+{0x58,0x01000000},
+{0x5c,0xd6002668},
+{0x60,0x80a2e000},
+{0x64,0x1480001c},
+{0x68,0x8202ffff},
+{0x6c,0xc2002514},
+{0x70,0x80a06001},
+{0x74,0x3280006b},
+{0x78,0xc0202668},
+{0x7c,0xc20026e0},
+{0xf0,0x9b},
+{0x00,0x80a06000},
+{0x04,0x12800004},
+{0x08,0x808b2040},
+{0x0c,0x10800065},
+{0x10,0xc0202668},
+{0x14,0x32800006},
+{0x18,0xd800239c},
+{0x1c,0x80a2e000},
+{0x20,0x0680000d},
+{0x24,0x8202e001},
+{0x28,0xd800239c},
+{0x2c,0x0300003f},
+{0x30,0x9b332010},
+{0x34,0x821063ff},
+{0x38,0x980b0001},
+{0x3c,0x9a38000d},
+{0x40,0x9a23400c},
+{0x44,0x80a2c00d},
+{0x48,0x06800005},
+{0x4c,0x03296956},
+{0x50,0x8202ffff},
+{0x54,0x10800053},
+{0x58,0xc2202668},
+{0x5c,0x9a10625a},
+{0x60,0xc200250c},
+{0x64,0x80a0400d},
+{0x68,0x02800004},
+{0x6c,0xa0102000},
+{0x70,0xda20250c},
+{0x74,0xc0202664},
+{0x78,0x832c2002},
+{0x7c,0x92006620},
+{0xf0,0x9c},
+{0x00,0xc2006620},
+{0x04,0x901026e0},
+{0x08,0x80a06000},
+{0x0c,0x0280000d},
+{0x10,0xa0042001},
+{0x14,0x7ffff3ca},
+{0x18,0x01000000},
+{0x1c,0xc2002300},
+{0x20,0xda002308},
+{0x24,0x82584001},
+{0x28,0x9a5b400d},
+{0x2c,0x8200400d},
+{0x30,0x83286006},
+{0x34,0x80a20001},
+{0x38,0x0a80003a},
+{0x3c,0x01000000},
+{0x40,0x80a4200f},
+{0x44,0x08bfffee},
+{0x48,0x832c2002},
+{0x4c,0x030041eb},
+{0x50,0xc2202668},
+{0x54,0xa010200f},
+{0x58,0x9b2c2002},
+{0x5c,0xc203661c},
+{0x60,0xa0843fff},
+{0x64,0x12bffffd},
+{0x68,0xc2236620},
+{0x6c,0xda002664},
+{0x70,0xc20026e0},
+{0x74,0xc2202620},
+{0x78,0x80a3600f},
+{0x7c,0x14800003},
+{0xf0,0x9d},
+{0x00,0x9010200f},
+{0x04,0x9010000d},
+{0x08,0x03000017},
+{0x0c,0x9e106240},
+{0x10,0x82006400},
+{0x14,0xa2106200},
+{0x18,0x0300003f},
+{0x1c,0xa61063ff},
+{0x20,0x92022001},
+{0x24,0xa0102000},
+{0x28,0xa410000f},
+{0x2c,0x972c2002},
+{0x30,0x8203c00b},
+{0x34,0xda106002},
+{0x38,0x9804400b},
+{0x3c,0xd4132002},
+{0x40,0xc213c00b},
+{0x44,0xd814400b},
+{0x48,0x82584008},
+{0x4c,0x9a5b4008},
+{0x50,0x8200400c},
+{0x54,0x9a03400a},
+{0x58,0x81800000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x82704009},
+{0x6c,0x81800000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x9a734009},
+{0xf0,0x9e},
+{0x00,0x83286010},
+{0x04,0x9a0b4013},
+{0x08,0x8200400d},
+{0x0c,0xa0042001},
+{0x10,0x80a4204f},
+{0x14,0x08bfffe6},
+{0x18,0xc222c012},
+{0x1c,0xd2202664},
+{0x20,0x81c7e008},
+{0x24,0x81e80000},
+{0x28,0x9de3bf98},
+{0x2c,0xa2102000},
+{0x30,0xc2002514},
+{0x34,0x80a44001},
+{0x38,0xa0102000},
+{0x3c,0x1a800012},
+{0x40,0x832c2002},
+{0x44,0x920066e0},
+{0x48,0xc20066e0},
+{0x4c,0x80a06000},
+{0x50,0x02800009},
+{0x54,0x90100018},
+{0x58,0x7ffff379},
+{0x5c,0x01000000},
+{0x60,0x82102001},
+{0x64,0x80a20019},
+{0x68,0x1a800003},
+{0x6c,0x83284010},
+{0x70,0xa2144001},
+{0x74,0xa0042001},
+{0x78,0xc2002514},
+{0x7c,0x10bffff0},
+{0xf0,0x9f},
+{0x00,0x80a40001},
+{0x04,0x81c7e008},
+{0x08,0x91e80011},
+{0x0c,0x9de3bf90},
+{0x10,0x03003fc0},
+{0x14,0x82106001},
+{0x18,0xc227bff0},
+{0x1c,0xc027bff4},
+{0x20,0xa0102000},
+{0x24,0x8207bff8},
+{0x28,0x82040001},
+{0x2c,0xd2487ff9},
+{0x30,0xd0487ff8},
+{0x34,0x90060008},
+{0x38,0x92064009},
+{0x3c,0x94102000},
+{0x40,0x7ffff3b9},
+{0x44,0x9610001a},
+{0x48,0x80a22000},
+{0x4c,0x02800004},
+{0x50,0xa0042001},
+{0x54,0x10800006},
+{0x58,0xb0102001},
+{0x5c,0x80a42004},
+{0x60,0x04bffff2},
+{0x64,0x8207bff8},
+{0x68,0xb0102000},
+{0x6c,0x81c7e008},
+{0x70,0x81e80000},
+{0x74,0x9de3bf90},
+{0x78,0x03003fc0},
+{0x7c,0x82106001},
+{0xf0,0xa0},
+{0x00,0xc227bff0},
+{0x04,0xc027bff4},
+{0x08,0xda002500},
+{0x0c,0xc20022d0},
+{0x10,0x80a34001},
+{0x14,0xb8102000},
+{0x18,0xba102000},
+{0x1c,0x18800006},
+{0x20,0xae102000},
+{0x24,0xc2002548},
+{0x28,0x80886001},
+{0x2c,0x22800004},
+{0x30,0xc200254c},
+{0x34,0xba102001},
+{0x38,0xc200254c},
+{0x3c,0x80886200},
+{0x40,0x32800010},
+{0x44,0xc20026a0},
+{0x48,0x03296956},
+{0x4c,0xda00250c},
+{0x50,0x8210625a},
+{0x54,0x80a34001},
+{0x58,0x12800006},
+{0x5c,0xc20023c8},
+{0x60,0x80886800},
+{0x64,0x32800007},
+{0x68,0xc20026a0},
+{0x6c,0xc20023c8},
+{0x70,0x80886400},
+{0x74,0x22800014},
+{0x78,0xec0022ac},
+{0x7c,0xc20026a0},
+{0xf0,0xa1},
+{0x00,0x80886200},
+{0x04,0x1280000a},
+{0x08,0xb8102001},
+{0x0c,0x13000017},
+{0x10,0xc2002fd0},
+{0x14,0x92126240},
+{0x18,0x9fc04000},
+{0x1c,0xd0002590},
+{0x20,0xc20026a0},
+{0x24,0x82106200},
+{0x28,0xc22026a0},
+{0x2c,0x10800006},
+{0x30,0xec0023a0},
+{0x34,0x03000080},
+{0x38,0x82134001},
+{0x3c,0x1080007d},
+{0x40,0xc220254c},
+{0x44,0x7ffff292},
+{0x48,0x901020aa},
+{0x4c,0xaa102000},
+{0x50,0xa12d6003},
+{0x54,0xc2042730},
+{0x58,0x80a06000},
+{0x5c,0x22800072},
+{0x60,0xaa056001},
+{0x64,0x80a56000},
+{0x68,0x12800008},
+{0x6c,0x80a76000},
+{0x70,0xc2002540},
+{0x74,0x80a06000},
+{0x78,0x1280000c},
+{0x7c,0x29200000},
+{0xf0,0xa2},
+{0x00,0x1080000a},
+{0x04,0xa8102000},
+{0x08,0x02800005},
+{0x0c,0x90042730},
+{0x10,0xc0242734},
+{0x14,0x10800063},
+{0x18,0xc0242730},
+{0x1c,0x7fffff83},
+{0x20,0x92100016},
+{0x24,0xa8100008},
+{0x28,0x80a52000},
+{0x2c,0x1280000b},
+{0x30,0xae15c014},
+{0x34,0xc2142734},
+{0x38,0x80a06000},
+{0x3c,0x22800058},
+{0x40,0xc0242734},
+{0x44,0xc2042734},
+{0x48,0x1b3fffc0},
+{0x4c,0x8200400d},
+{0x50,0x10800054},
+{0x54,0xc2242734},
+{0x58,0xc2142736},
+{0x5c,0x80a06000},
+{0x60,0x0280000a},
+{0x64,0x80a56000},
+{0x68,0xc2042734},
+{0x6c,0x82007fff},
+{0x70,0xc2242734},
+{0x74,0xc2142736},
+{0x78,0x80a06000},
+{0x7c,0x3280004a},
+{0xf0,0xa3},
+{0x00,0xaa056001},
+{0x04,0x80a56000},
+{0x08,0x1280000c},
+{0x0c,0x1b004000},
+{0x10,0xc200254c},
+{0x14,0x8210400d},
+{0x18,0x10800042},
+{0x1c,0xc220254c},
+{0x20,0xc200254c},
+{0x24,0x1b000080},
+{0x28,0x8210400d},
+{0x2c,0xc220254c},
+{0x30,0x10800037},
+{0x34,0xc0202570},
+{0x38,0xda00254c},
+{0x3c,0x83336019},
+{0x40,0x80886001},
+{0x44,0x12bfffbc},
+{0x48,0x80a72000},
+{0x4c,0x02bfffba},
+{0x50,0xa2102000},
+{0x54,0xc2002514},
+{0x58,0x80a44001},
+{0x5c,0x1a80002c},
+{0x60,0x83350011},
+{0x64,0x80886001},
+{0x68,0x02800027},
+{0x6c,0x9b2c6002},
+{0x70,0xc20366e0},
+{0x74,0x9b306016},
+{0x78,0x82086fff},
+{0x7c,0x83386006},
+{0xf0,0xa4},
+{0x00,0x9a0b603f},
+{0x04,0xa4006001},
+{0x08,0xa6036001},
+{0x0c,0x92100013},
+{0x10,0xd410246e},
+{0x14,0x7fffff5e},
+{0x18,0x90100012},
+{0x1c,0x80a22000},
+{0x20,0x12800011},
+{0x24,0x82102001},
+{0x28,0xd410246c},
+{0x2c,0x80a2a000},
+{0x30,0x22800011},
+{0x34,0xc2002570},
+{0x38,0xc2002548},
+{0x3c,0x90100012},
+{0x40,0x80886080},
+{0x44,0x0280000b},
+{0x48,0x92100013},
+{0x4c,0x7fffff50},
+{0x50,0x01000000},
+{0x54,0x80a22000},
+{0x58,0x22800007},
+{0x5c,0xc2002570},
+{0x60,0x82102001},
+{0x64,0x83284011},
+{0x68,0x10800007},
+{0x6c,0xa82d0001},
+{0x70,0xc2002570},
+{0x74,0x82006001},
+{0x78,0x80a06004},
+{0x7c,0x18bfffc9},
+{0xf0,0xa5},
+{0x00,0xc2202570},
+{0x04,0x10bfffd4},
+{0x08,0xa2046001},
+{0x0c,0x80a52000},
+{0x10,0x32800005},
+{0x14,0xaa056001},
+{0x18,0xc0242734},
+{0x1c,0xc0242730},
+{0x20,0xaa056001},
+{0x24,0x80a56013},
+{0x28,0x04bfff8b},
+{0x2c,0xa12d6003},
+{0x30,0x80a5e000},
+{0x34,0x22800002},
+{0x38,0xc0202570},
+{0x3c,0xc2002540},
+{0x40,0x80a06000},
+{0x44,0x0280000a},
+{0x48,0x80a76000},
+{0x4c,0xc2002730},
+{0x50,0x80a06000},
+{0x54,0x12800006},
+{0x58,0x80a76000},
+{0x5c,0x03000004},
+{0x60,0xc2202730},
+{0x64,0xc2002248},
+{0x68,0xc2202734},
+{0x6c,0x12800027},
+{0x70,0xaa102000},
+{0x74,0xc2002514},
+{0x78,0x80a54001},
+{0x7c,0x1a800023},
+{0xf0,0xa6},
+{0x00,0x96102001},
+{0x04,0x992d6002},
+{0x08,0xc20326e0},
+{0x0c,0x8330600c},
+{0x10,0x80886001},
+{0x14,0x32800019},
+{0x18,0xaa056001},
+{0x1c,0x832ac015},
+{0x20,0x808dc001},
+{0x24,0x32800015},
+{0x28,0xaa056001},
+{0x2c,0xa2102001},
+{0x30,0x9b2c6003},
+{0x34,0xc2036730},
+{0x38,0x80a06000},
+{0x3c,0x1280000b},
+{0x40,0xa2046001},
+{0x44,0xc20326e0},
+{0x48,0x80a72000},
+{0x4c,0x02800004},
+{0x50,0xc2236730},
+{0x54,0x10800003},
+{0x58,0xc200239c},
+{0x5c,0xc2002378},
+{0x60,0x10800005},
+{0x64,0xc2236734},
+{0x68,0x80a46013},
+{0x6c,0x04bffff2},
+{0x70,0x9b2c6003},
+{0x74,0xaa056001},
+{0x78,0xc2002514},
+{0x7c,0x80a54001},
+{0xf0,0xa7},
+{0x00,0x0abfffe2},
+{0x04,0x992d6002},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x9de3bf98},
+{0x14,0xc2002510},
+{0x18,0x80a06000},
+{0x1c,0x2280000b},
+{0x20,0xc208254d},
+{0x24,0x82007fff},
+{0x28,0x80a06000},
+{0x2c,0x12800006},
+{0x30,0xc2202510},
+{0x34,0xc200254c},
+{0x38,0x1b002000},
+{0x3c,0x8210400d},
+{0x40,0xc220254c},
+{0x44,0xc208254d},
+{0x48,0x80a06000},
+{0x4c,0x1280000d},
+{0x50,0x033fc180},
+{0x54,0x033fc200},
+{0x58,0x82106030},
+{0x5c,0xda004000},
+{0x60,0xc200257c},
+{0x64,0x80a34001},
+{0x68,0x02800021},
+{0x6c,0x01000000},
+{0x70,0xc210223e},
+{0x74,0x80a06000},
+{0x78,0x0280001d},
+{0x7c,0x033fc180},
+{0xf0,0xa8},
+{0x00,0xc0204000},
+{0x04,0xa0102002},
+{0x08,0x11000099},
+{0x0c,0x7fffee62},
+{0x10,0x9012233c},
+{0x14,0x7ffff3f7},
+{0x18,0x90102002},
+{0x1c,0xa0843fff},
+{0x20,0x3cbffffb},
+{0x24,0x11000099},
+{0x28,0xda00254c},
+{0x2c,0x83336010},
+{0x30,0x80886001},
+{0x34,0x32800002},
+{0x38,0xc020250c},
+{0x3c,0x83336017},
+{0x40,0x80886001},
+{0x44,0x32800005},
+{0x48,0xc2002510},
+{0x4c,0xc2002188},
+{0x50,0xc2202510},
+{0x54,0xc2002510},
+{0x58,0xc220266c},
+{0x5c,0x7ffff07f},
+{0x60,0x90102015},
+{0x64,0x82102001},
+{0x68,0xc2202584},
+{0x6c,0x81c7e008},
+{0x70,0x81e80000},
+{0x74,0xc2002588},
+{0x78,0x80a06000},
+{0x7c,0x32800006},
+{0xf0,0xa9},
+{0x00,0xc200258c},
+{0x04,0xc2002554},
+{0x08,0xc2202588},
+{0x0c,0xc0202594},
+{0x10,0xc200258c},
+{0x14,0x80a06000},
+{0x18,0x12800005},
+{0x1c,0x01000000},
+{0x20,0xc2002554},
+{0x24,0xc220258c},
+{0x28,0xc0202598},
+{0x2c,0x81c3e008},
+{0x30,0x01000000},
+{0x34,0x98102000},
+{0x38,0xc2002514},
+{0x3c,0x80a30001},
+{0x40,0x1a80000b},
+{0x44,0x033fc180},
+{0x48,0x96106004},
+{0x4c,0x832b2002},
+{0x50,0xda0066e0},
+{0x54,0xda20400b},
+{0x58,0x98032001},
+{0x5c,0xc2002514},
+{0x60,0x80a30001},
+{0x64,0x0abffffb},
+{0x68,0x832b2002},
+{0x6c,0xda00254c},
+{0x70,0x808b6001},
+{0x74,0x32800008},
+{0x78,0xc208254e},
+{0x7c,0xc2002514},
+{0xf0,0xaa},
+{0x00,0x9a136001},
+{0x04,0x82106100},
+{0x08,0xda20254c},
+{0x0c,0xc2202514},
+{0x10,0xc208254e},
+{0x14,0x80a06000},
+{0x18,0x3280000b},
+{0x1c,0xc2082517},
+{0x20,0xc20023c8},
+{0x24,0x83306016},
+{0x28,0x80886001},
+{0x2c,0x22800006},
+{0x30,0xc2082517},
+{0x34,0xc2002514},
+{0x38,0x82106200},
+{0x3c,0xc2202514},
+{0x40,0xc2082517},
+{0x44,0x80a06000},
+{0x48,0x32800007},
+{0x4c,0xda002500},
+{0x50,0xc2002560},
+{0x54,0x80a06000},
+{0x58,0x22800008},
+{0x5c,0xc2082517},
+{0x60,0xda002500},
+{0x64,0xc2002514},
+{0x68,0x9b2b6010},
+{0x6c,0x8210400d},
+{0x70,0xc2202514},
+{0x74,0xc2082517},
+{0x78,0x80a06000},
+{0x7c,0x22800012},
+{0xf0,0xab},
+{0x00,0xda002514},
+{0x04,0xc2002548},
+{0x08,0x80886800},
+{0x0c,0x22800006},
+{0x10,0xc20023c8},
+{0x14,0xc2002514},
+{0x18,0x82106400},
+{0x1c,0xc2202514},
+{0x20,0xc20023c8},
+{0x24,0x80a06000},
+{0x28,0x36800007},
+{0x2c,0xda002514},
+{0x30,0xc2002514},
+{0x34,0x1b000004},
+{0x38,0x8210400d},
+{0x3c,0xc2202514},
+{0x40,0xda002514},
+{0x44,0x033fc180},
+{0x48,0x81c3e008},
+{0x4c,0xda204000},
+{0x50,0x9de3bf98},
+{0x54,0xc2102516},
+{0x58,0x80a06000},
+{0x5c,0x02800006},
+{0x60,0x90102001},
+{0x64,0xc2002548},
+{0x68,0x80886004},
+{0x6c,0x0280000a},
+{0x70,0x82102005},
+{0x74,0xc2002548},
+{0x78,0x9b306003},
+{0x7c,0x83306002},
+{0xf0,0xac},
+{0x00,0x82086001},
+{0x04,0x9a0b6001},
+{0x08,0x80a0400d},
+{0x0c,0x02800004},
+{0x10,0x82102005},
+{0x14,0x10800008},
+{0x18,0xc2202560},
+{0x1c,0xc2002560},
+{0x20,0x9a007fff},
+{0x24,0x80a06000},
+{0x28,0x02800005},
+{0x2c,0x90102002},
+{0x30,0xda202560},
+{0x34,0x7ffff36f},
+{0x38,0x01000000},
+{0x3c,0xc2002548},
+{0x40,0x9a004001},
+{0x44,0x9a0b6008},
+{0x48,0x82087ff7},
+{0x4c,0x8210400d},
+{0x50,0xc2202548},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xad},
+{0x00,0x00001688},
+{0x04,0xa5010500},
+{0x08,0xa5000000},
+{0x0c,0x00000000},
+{0x10,0x4c494348},
+{0x14,0x49444449},
+{0x18,0x88ecbdae},
+{0x1c,0x39cfb591},
+{0x20,0x8648a980},
+{0x24,0x80cdc96f},
+{0x28,0xbe719243},
+{0x2c,0xc641c654},
+{0x30,0xcc4d80cb},
+{0x34,0x80d1c471},
+{0x38,0xcce5a898},
+{0x3c,0xc9e5c400},
+{0x40,0xc643bd13},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x4a756e20},
+{0x6c,0x32362032},
+{0x70,0x30313400},
+{0x74,0x00000000},
+{0x78,0x31343a35},
+{0x7c,0x313a3337},
+
+};
+
+#endif
diff --git a/drivers/input/touchscreen/GSL2681_M2111/Makefile b/drivers/input/touchscreen/GSL2681_M2111/Makefile
new file mode 100755
index 0000000..7642f3d
--- /dev/null
+++ b/drivers/input/touchscreen/GSL2681_M2111/Makefile
@@ -0,0 +1,6 @@
+#
+# Makefile for the gslX680 tp driver
+#
+
+obj-$(CONFIG_TOUCHSCREEN_GSLX680)		  += ctp_gslX680.o
+ctp_gslX680-objs := gslX680.o
\ No newline at end of file
diff --git a/drivers/input/touchscreen/GSL2681_M2111/gslX680.c b/drivers/input/touchscreen/GSL2681_M2111/gslX680.c
new file mode 100755
index 0000000..9e717cb
--- /dev/null
+++ b/drivers/input/touchscreen/GSL2681_M2111/gslX680.c
@@ -0,0 +1,1641 @@
+/*
+ * drivers/input/touchscreen/gslX680.c
+ *
+ * Copyright (c) 2012 Shanghai Basewin
+ *	Guan Yuwei<guanyuwei@basewin.com>
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License version 2 as
+ *  published by the Free Software Foundation.
+ */
+
+
+
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/input.h>
+#include <linux/interrupt.h>
+#include <linux/i2c.h>
+#include <linux/delay.h>
+//#include <mach/gpio.h>
+//#include <mach/gpio_data.h>
+#include <linux/jiffies.h>
+#include <linux/cdev.h>
+#include <asm/uaccess.h>
+#include <linux/pm_runtime.h>
+#include <linux/regulator/consumer.h>
+
+#if defined(CONFIG_HAS_EARLYSUSPEND)
+#include <linux/earlysuspend.h>
+#endif
+#include <linux/errno.h>
+#include <linux/kernel.h>
+
+#include <linux/platform_device.h>
+#include <linux/async.h>
+#include <linux/hrtimer.h>
+#include <linux/init.h>
+#include <linux/ioport.h>
+#include <asm/irq.h>
+#include <asm/io.h>
+#include <linux/gpio.h>
+#include <asm/prom.h>
+#include <mach/gpio.h>
+#include <linux/input/mt.h>
+#include <linux/of_gpio.h>
+#include <linux/of_irq.h>
+
+#include "gslX680.h"
+
+//#include <mach/irqs.h>
+//#include <mach/system.h>
+//#include <mach/hardware.h>
+
+#define CFG_TP_USE_CONFIG 1
+
+//default value
+#define GSLX680_I2C_NAME 	"gslX680"
+#define GSLX680_I2C_ADDR 	0x40
+
+#define TP_RESET_PIN        OWL_GPIO_PORTB(3)
+#define TP_I2C_ADAPTER    (1)
+#define TP_I2C_ADDR         GSLX680_I2C_ADDR
+#define TP_NAME			    GSLX680_I2C_NAME
+
+#if CFG_TP_USE_CONFIG
+#define TP_IRQ_PORT	  		OWL_EXT_IRQ_SIRQ0
+#endif
+
+#define TP_MAX_X              SCREEN_MAX_X
+#define TP_MAX_Y              SCREEN_MAX_Y
+static unsigned gpio_reset = 0;
+
+//static struct i2c_client *gsl_ts_device;
+
+
+#if CFG_TP_USE_CONFIG
+struct tp_cfg_dts {
+	unsigned int sirq;
+	unsigned int i2cNum;
+	unsigned int i2cAddr;
+	unsigned int xMax;
+	unsigned int yMax;
+	unsigned int rotate; 
+	unsigned int xRevert;
+	unsigned int yRevert;
+	unsigned int XYSwap;
+	char const *regulator;
+	unsigned int vol_max;
+	unsigned int vol_min;
+};
+static struct tp_cfg_dts cfg_dts;
+#endif
+
+#define RESUME_INIT_CHIP_WORK
+//#define GSL_DEBUG
+
+#define REPORT_DATA_PROTOCOL_B
+
+//#define HAVE_TOUCH_KEY
+#define SLEEP_CLEAR_POINT
+#define FILTER_POINT	/*\B7\C0\B6\B6*/
+#define RECORD_POINT
+#ifdef FILTER_POINT
+#define FILTER_MAX	9	
+#endif
+
+
+#define GSL_DATA_REG		0x80
+#define GSL_STATUS_REG		0xe0
+#define GSL_PAGE_REG		0xf0
+
+#define PRESS_MAX    		255
+#define MAX_FINGERS 		10
+#define MAX_CONTACTS 		10	//\C8\E7\B9\FBֻ\BF\AA5\B8\F6\CA\D6ָ\A3\ACID\BA\C5Ҳ\BF\C9\C4ܴ\F3\D3\DA5
+#define DMA_TRANS_LEN		0x10	//һ\B4\CE\CF\C2\D4ض\E0\C9ټĴ\E6\C6\F7\A3\AC0x20\CA\C7һҳ32X4\D7ֽ\DA
+
+struct mutex mutex;
+
+static int power_is_on = 0;
+
+#define GSL_MONITOR
+#ifdef GSL_MONITOR
+static struct delayed_work gsl_monitor_work;
+static struct workqueue_struct *gsl_monitor_workqueue = NULL;
+static char int_1st[4] = {0};
+static char int_2nd[4] = {0};
+static char bc_counter = 0;
+static char b0_counter = 0;
+static char i2c_lock_flag = 0;
+#endif 
+static struct i2c_client *gsl_client = NULL;
+
+static struct gsl_ts *this_ts = NULL;
+
+#ifdef HAVE_TOUCH_KEY
+static u16 key = 0;
+
+static int key_state_flag = 0;
+struct key_data {
+	u16 key;
+	u16 x_min;
+	u16 x_max;
+	u16 y_min;
+	u16 y_max;
+};
+
+const u16 key_array[]={
+	KEY_BACK,
+	KEY_HOME,
+	KEY_MENU,
+	KEY_SEARCH,
+}; 
+#define MAX_KEY_NUM     (sizeof(key_array)/sizeof(key_array[0]))
+
+struct key_data gsl_key_data[MAX_KEY_NUM] = {
+	{KEY_BACK, 2048, 2048, 2048, 2048},
+	{KEY_HOME, 2048, 2048, 2048, 2048},	
+	{KEY_MENU, 2048, 2048, 2048, 2048},
+	{KEY_SEARCH, 2048, 2048, 2048, 2048},
+};
+#endif
+
+struct gsl_ts_data {
+	u8 x_index;
+	u8 y_index;
+	u8 z_index;
+	u8 id_index;
+	u8 touch_index;
+	u8 data_reg;
+	u8 status_reg;
+	u8 data_size;
+	u8 touch_bytes;
+	u8 update_data;
+	u8 touch_meta_data;
+	u8 finger_size;
+};
+
+static struct gsl_ts_data devices[] = {
+	{
+		.x_index = 6,
+		.y_index = 4,
+		.z_index = 5,
+		.id_index = 7,
+		.data_reg = GSL_DATA_REG,
+		.status_reg = GSL_STATUS_REG,
+		.update_data = 0x4,
+		.touch_bytes = 4,
+		.touch_meta_data = 4,
+		.finger_size = 70,
+	},
+};
+
+struct gsl_ts {
+	struct i2c_client *client;
+	struct input_dev *input;
+	struct work_struct work;
+	struct workqueue_struct *wq;
+#ifdef RESUME_INIT_CHIP_WORK
+	struct work_struct init_work;
+	struct workqueue_struct *init_wq;
+#endif
+//    struct work_struct gsl_init_work;
+//    struct workqueue_struct *gsl_init_workqueue;
+
+	struct gsl_ts_data *dd;
+	u8 *touch_data;
+	u8 device_id;
+	int irq;
+#if defined(CONFIG_HAS_EARLYSUSPEND)
+	struct early_suspend early_suspend;
+#endif
+};
+
+#ifdef GSL_DEBUG 
+#define print_info(fmt, args...)   \
+        do{                              \
+                printk(fmt, ##args);     \
+        }while(0)
+#else
+#define print_info(fmt, args...)
+#endif
+
+static u32 id_sign[MAX_CONTACTS+1] = {0};
+static u8 id_state_flag[MAX_CONTACTS+1] = {0};
+static u8 id_state_old_flag[MAX_CONTACTS+1] = {0};
+static u16 x_old[MAX_CONTACTS+1] = {0};
+static u16 y_old[MAX_CONTACTS+1] = {0};
+static u16 x_new = 0;
+static u16 y_new = 0;
+
+////POWER
+#define CTP_POWER_ID			("ldo5")
+#define CTP_POWER_MIN_VOL	(3100000)
+#define CTP_POWER_MAX_VOL	(3110000)
+static char ctp_power_name[] = CTP_POWER_ID;
+	
+volatile int current_val = 0;
+
+static struct regulator *tp_regulator = NULL;
+static inline void regulator_deinit(struct regulator *);
+static struct regulator *regulator_init(const char *, int, int);
+
+static struct regulator *regulator_init(const char *name, int minvol, int maxvol)
+{
+	struct regulator *power;
+	int ret;
+
+	power = regulator_get(NULL,name);
+    	if (IS_ERR(power)) {
+		printk("Nova err,regulator_get fail\n!!!");
+		return NULL;
+	}
+ 
+	if (regulator_set_voltage(power, minvol, maxvol)) {
+        	printk("Nova err,cannot set voltage\n!!!");
+        	regulator_put(power);
+        
+		return NULL;
+	}
+	ret = regulator_enable(power);
+	return (power);
+}
+
+static inline void regulator_deinit(struct regulator *power)
+{
+	regulator_disable(power);
+	regulator_put(power);
+}
+
+
+static int gslX680_init(void)
+{
+    gpio_direction_output(gpio_reset, 1);
+      	
+	return 0;
+}
+
+static int gslX680_shutdown_low(void)
+{
+	gpio_direction_output(gpio_reset, 0);
+	return 0;
+}
+
+static int gslX680_shutdown_high(void)
+{
+	gpio_direction_output(gpio_reset, 1);
+	return 0;
+}
+
+static inline u16 join_bytes(u8 a, u8 b)
+{
+	u16 ab = 0;
+	ab = ab | a;
+	ab = ab << 8 | b;
+	return ab;
+}
+/*
+static u32 gsl_read_interface(struct i2c_client *client, u8 reg, u8 *buf, u32 num)
+{
+	struct i2c_msg xfer_msg[2];
+
+	xfer_msg[0].addr = client->addr;
+	xfer_msg[0].len = 1;
+	xfer_msg[0].flags = 0x00;
+	xfer_msg[0].buf = &reg;
+
+	xfer_msg[1].addr = client->addr;
+	xfer_msg[1].len = num;
+	xfer_msg[1].flags |= I2C_M_RD;
+	xfer_msg[1].buf = buf;
+
+	if (reg < 0x80) {
+		i2c_transfer(client->adapter, xfer_msg, ARRAY_SIZE(xfer_msg));
+		msleep(5);
+	}
+
+	return i2c_transfer(client->adapter, xfer_msg, ARRAY_SIZE(xfer_msg)) == ARRAY_SIZE(xfer_msg) ? 0 : -EFAULT;
+}
+*/
+
+static u32 gsl_write_interface(struct i2c_client *client, const u8 reg, u8 *buf, u32 num)
+{
+	struct i2c_msg xfer_msg[1];
+
+	buf[0] = reg;
+
+	xfer_msg[0].addr = client->addr;
+	xfer_msg[0].len = num + 1;
+	xfer_msg[0].flags =0x00;
+	xfer_msg[0].buf = buf;
+
+	return i2c_transfer(client->adapter, xfer_msg, 1) == 1 ? 0 : -EFAULT;
+}
+
+static int gsl_ts_write(struct i2c_client *client, u8 addr, u8 *pdata, int datalen)
+{
+	int ret = 0;
+	u8 tmp_buf[128];
+	unsigned int bytelen = 0;
+	if (datalen > 125)
+	{
+		printk("%s too big datalen = %d!\n", __func__, datalen);
+		return -1;
+	}
+	
+	tmp_buf[0] = addr;
+	bytelen++;
+	
+	if (datalen != 0 && pdata != NULL)
+	{
+		memcpy(&tmp_buf[bytelen], pdata, datalen);
+		bytelen += datalen;
+	}
+	
+	ret = i2c_master_send(client, tmp_buf, bytelen);
+	return ret;
+}
+
+static int gsl_ts_read(struct i2c_client *client, u8 addr, u8 *pdata, unsigned int datalen)
+{
+	int ret = 0;
+
+	if (datalen > 126)
+	{
+		printk("%s too big datalen = %d!\n", __func__, datalen);
+		return -1;
+	}
+
+	ret = gsl_ts_write(client, addr, NULL, 0);
+	if (ret < 0)
+	{
+		printk("%s set data address fail!\n", __func__);
+		return ret;
+	}
+	
+	return i2c_master_recv(client, pdata, datalen);
+}
+
+static __inline__ void fw2buf(u8 *buf, const u32 *fw)
+{
+	u32 *u32_buf = (int *)buf;
+	*u32_buf = *fw;
+}
+
+static void gsl_load_fw(struct i2c_client *client)
+{
+	u8 buf[DMA_TRANS_LEN*4 + 1] = {0};
+	u8 send_flag = 1;
+	u8 *cur = buf + 1;
+	u32 source_line = 0;
+	u32 source_len;
+	struct fw_data *ptr_fw;
+	
+	printk("=============gsl_load_fw start==============\n");
+
+	ptr_fw = (struct fw_data *)GSLX680_FW;
+	source_len = ARRAY_SIZE(GSLX680_FW);
+
+	for (source_line = 0; source_line < source_len; source_line++) 
+	{
+		/* init page trans, set the page val */
+		if (GSL_PAGE_REG == ptr_fw[source_line].offset)
+		{
+			fw2buf(cur, &ptr_fw[source_line].val);
+			gsl_write_interface(client, GSL_PAGE_REG, buf, 4);
+			send_flag = 1;
+		}
+		else 
+		{
+			if (1 == send_flag % (DMA_TRANS_LEN < 0x20 ? DMA_TRANS_LEN : 0x20))
+	    			buf[0] = (u8)ptr_fw[source_line].offset;
+
+			fw2buf(cur, &ptr_fw[source_line].val);
+			cur += 4;
+
+			if (0 == send_flag % (DMA_TRANS_LEN < 0x20 ? DMA_TRANS_LEN : 0x20)) 
+			{
+	    			gsl_write_interface(client, buf[0], buf, cur - buf - 1);
+	    			cur = buf + 1;
+			}
+
+			send_flag++;
+		}
+	}
+
+	printk("=============gsl_load_fw end==============\n");
+
+}
+
+
+static int test_i2c(struct i2c_client *client)
+{
+	u8 read_buf = 0;
+	u8 write_buf = 0x12;
+	int ret, rc = 1;
+	
+	ret = gsl_ts_read( client, 0xf0, &read_buf, sizeof(read_buf) );
+	if  (ret  < 0)  
+    		rc --;
+	else
+		printk("I read reg 0xf0 is %x\n", read_buf);
+	
+	msleep(2);
+	ret = gsl_ts_write(client, 0xf0, &write_buf, sizeof(write_buf));
+	if(ret  >=  0 )
+		printk("I write reg 0xf0 0x12\n");
+	
+	msleep(2);
+	ret = gsl_ts_read( client, 0xf0, &read_buf, sizeof(read_buf) );
+	if(ret <  0 )
+		rc --;
+	else
+		printk("I read reg 0xf0 is 0x%x\n", read_buf);
+
+	return rc;
+}
+
+static void startup_chip(struct i2c_client *client)
+{
+	u8 tmp = 0x00;
+
+	gsl_ts_write(client, 0xe0, &tmp, 1);
+	msleep(10);	
+#ifdef GSL_NOID_VERSION
+	gsl_DataInit(gsl_config_data_id);
+#endif
+}
+
+static void reset_chip(struct i2c_client *client)
+{
+	u8 tmp = 0x88;
+	u8 buf[4] = {0x00};
+	
+	gsl_ts_write(client, 0xe0, &tmp, sizeof(tmp));
+	msleep(10);
+	tmp = 0x04;
+	gsl_ts_write(client, 0xe4, &tmp, sizeof(tmp));
+	msleep(5);
+	gsl_ts_write(client, 0xbc, buf, sizeof(buf));
+	msleep(2);
+}
+
+static void clr_reg(struct i2c_client *client)
+{
+	u8 write_buf[4]	= {0};
+
+	write_buf[0] = 0x88;
+	gsl_ts_write(client, 0xe0, &write_buf[0], 1); 	
+	msleep(10);
+	write_buf[0] = 0x03;
+	gsl_ts_write(client, 0x80, &write_buf[0], 1); 	
+	msleep(5);
+	write_buf[0] = 0x04;
+	gsl_ts_write(client, 0xe4, &write_buf[0], 1); 	
+	msleep(5);
+	write_buf[0] = 0x00;
+	gsl_ts_write(client, 0xe0, &write_buf[0], 1); 	
+	msleep(10);
+}
+
+static void init_chip(struct i2c_client *client)
+{
+	int rc;
+	
+	gslX680_shutdown_low();	
+	msleep(20); 	
+	gslX680_shutdown_high();	
+	msleep(20); 		
+	rc = test_i2c(client);
+	if(rc < 0)
+	{
+		printk("------gslX680 test_i2c error------\n");	
+		return;
+	}	
+	clr_reg(client);
+	reset_chip(client);
+	gsl_load_fw(client);			
+	startup_chip(client);	
+	reset_chip(client);	
+	startup_chip(client);	
+}
+
+static void check_mem_data(struct i2c_client *client)
+{
+	u8 read_buf[4]  = {0};
+	
+	msleep(30);
+	gsl_ts_read(client,0xb0, read_buf, sizeof(read_buf));
+	
+	if (read_buf[3] != 0x5a || read_buf[2] != 0x5a || read_buf[1] != 0x5a || read_buf[0] != 0x5a)
+	{
+		printk("#########check mem read 0xb0 = %x %x %x %x #########\n", read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		init_chip(client);
+	}
+}
+
+#ifdef FILTER_POINT
+static void filter_point(u16 x, u16 y , u8 id)
+{
+	u16 x_err =0;
+	u16 y_err =0;
+	u16 filter_step_x = 0, filter_step_y = 0;
+	
+	id_sign[id] = id_sign[id] + 1;
+	if(id_sign[id] == 1)
+	{
+		x_old[id] = x;
+		y_old[id] = y;
+	}
+	
+	x_err = x > x_old[id] ? (x -x_old[id]) : (x_old[id] - x);
+	y_err = y > y_old[id] ? (y -y_old[id]) : (y_old[id] - y);
+
+	if( (x_err > FILTER_MAX && y_err > FILTER_MAX/3) || (x_err > FILTER_MAX/3 && y_err > FILTER_MAX) )
+	{
+		filter_step_x = x_err;
+		filter_step_y = y_err;
+	}
+	else
+	{
+		if(x_err > FILTER_MAX)
+			filter_step_x = x_err; 
+		if(y_err> FILTER_MAX)
+			filter_step_y = y_err;
+	}
+
+	if(x_err <= 2*FILTER_MAX && y_err <= 2*FILTER_MAX)
+	{
+		filter_step_x >>= 2; 
+		filter_step_y >>= 2;
+	}
+	else if(x_err <= 3*FILTER_MAX && y_err <= 3*FILTER_MAX)
+	{
+		filter_step_x >>= 1; 
+		filter_step_y >>= 1;
+	}	
+	else if(x_err <= 4*FILTER_MAX && y_err <= 4*FILTER_MAX)
+	{
+		filter_step_x = filter_step_x*3/4; 
+		filter_step_y = filter_step_y*3/4;
+	}	
+	
+	x_new = x > x_old[id] ? (x_old[id] + filter_step_x) : (x_old[id] - filter_step_x);
+	y_new = y > y_old[id] ? (y_old[id] + filter_step_y) : (y_old[id] - filter_step_y);
+
+	x_old[id] = x_new;
+	y_old[id] = y_new;
+}
+#else
+static void record_point(u16 x, u16 y , u8 id)
+{
+	u16 x_err =0;
+	u16 y_err =0;
+
+	id_sign[id]=id_sign[id]+1;
+	
+	if(id_sign[id]==1){
+		x_old[id]=x;
+		y_old[id]=y;
+	}
+
+	x = (x_old[id] + x)/2;
+	y = (y_old[id] + y)/2;
+		
+	if(x>x_old[id]){
+		x_err=x -x_old[id];
+	}
+	else{
+		x_err=x_old[id]-x;
+	}
+
+	if(y>y_old[id]){
+		y_err=y -y_old[id];
+	}
+	else{
+		y_err=y_old[id]-y;
+	}
+
+	if( (x_err > 3 && y_err > 1) || (x_err > 1 && y_err > 3) ){
+		x_new = x;     x_old[id] = x;
+		y_new = y;     y_old[id] = y;
+	}
+	else{
+		if(x_err > 3){
+			x_new = x;     x_old[id] = x;
+		}
+		else
+			x_new = x_old[id];
+		if(y_err> 3){
+			y_new = y;     y_old[id] = y;
+		}
+		else
+			y_new = y_old[id];
+	}
+
+	if(id_sign[id]==1){
+		x_new= x_old[id];
+		y_new= y_old[id];
+	}
+	
+}
+#endif
+
+#ifdef HAVE_TOUCH_KEY
+static void report_key(struct gsl_ts *ts, u16 x, u16 y)
+{
+	u16 i = 0;
+
+	for(i = 0; i < MAX_KEY_NUM; i++) 
+	{
+		if((gsl_key_data[i].x_min < x) && (x < gsl_key_data[i].x_max)&&(gsl_key_data[i].y_min < y) && (y < gsl_key_data[i].y_max))
+		{
+			key = gsl_key_data[i].key;	
+			input_report_key(ts->input, key, 1);
+			input_sync(ts->input); 		
+			key_state_flag = 1;
+			break;
+		}
+	}
+}
+#endif
+
+#if CFG_TP_USE_CONFIG
+static int tp_of_data_get(void)
+{
+    struct device_node *of_node;
+    enum of_gpio_flags flags;
+    unsigned int scope[2];
+    int ret = -1;
+
+    of_node = of_find_compatible_node(NULL, NULL, "gslX680");
+    if (of_node==NULL){
+        printk(KERN_ERR"%s,%d,find the gsxX680 dts err!\n",__func__, __LINE__);
+        return -1;
+    }
+
+	/* load tp regulator */
+	if (of_find_property(of_node, "tp_vcc", NULL)) {
+		ret = of_property_read_string(of_node, "tp_vcc", &cfg_dts.regulator);
+		if (ret < 0) {
+			printk("can not read tp_vcc power source\n");
+			cfg_dts.regulator = ctp_power_name;
+		}
+
+		if (of_property_read_u32_array(of_node, "vol_range", scope, 2)) {
+			printk(" failed to get voltage range\n");
+			scope[0] = CTP_POWER_MIN_VOL;
+			scope[1] = CTP_POWER_MAX_VOL;
+		}
+		cfg_dts.vol_min=scope[0];
+		cfg_dts.vol_max=scope[1];
+	}
+	
+	/* load irq number */
+    cfg_dts.sirq = irq_of_parse_and_map(of_node,0);
+    if (cfg_dts.sirq < 0) {
+        printk("No IRQ resource for tp\n");
+		return -ENODEV;
+	}
+
+	/* load gpio info */
+	if (!of_find_property(of_node, "reset_gpios", NULL)) {
+		printk("<isp>err: no config gpios\n");
+		goto fail;
+	}
+	gpio_reset = of_get_named_gpio_flags(of_node, "reset_gpios", 0, &flags);
+
+	cfg_dts.i2cNum = TP_I2C_ADAPTER;
+    
+	/* load tp i2c addr */
+	ret = of_property_read_u32(of_node, "reg", &cfg_dts.i2cAddr);
+	if (ret) {
+		printk(" failed to get i2c_addr\n");
+		goto fail;
+	}
+	
+	/* load other options */
+	ret = of_property_read_u32(of_node, "x_pixel", &cfg_dts.xMax);
+	if (ret) {
+		printk("failed to get x_pixel\r\n,set default:1280");
+		cfg_dts.xMax = SCREEN_MAX_X;
+	}
+
+	ret = of_property_read_u32(of_node, "y_pixel", &cfg_dts.yMax);
+	if (ret) {
+		printk("failed to get y_pixel\r\n,set default:800");
+		cfg_dts.yMax = SCREEN_MAX_Y;
+	}
+
+	ret = of_property_read_u32(of_node, "x_revert_en", &cfg_dts.xRevert);
+	if (ret) {
+		printk("failed to get x_revert_en\r\n,set default:1280");
+		cfg_dts.xRevert = 0;
+	}
+
+	ret = of_property_read_u32(of_node, "y_revert_en", &cfg_dts.yRevert);
+	if (ret) {
+		printk("failed to get y_revert_en\r\n,set default:800");
+		cfg_dts.yRevert = 0;
+	}
+
+	ret = of_property_read_u32(of_node, "xy_swap_en", &cfg_dts.XYSwap);
+	if (ret) {
+		printk("failed to get xy_swap_en, set default:0\r\n");
+		cfg_dts.XYSwap = 0;
+	}
+    
+	ret = of_property_read_u32(of_node, "rotate_degree", &cfg_dts.rotate);
+	if (ret) {
+		printk("failed to get rotate, set default:0\r\n");
+		cfg_dts.rotate = 0;
+	}
+
+	
+	printk("gpio num:%d, reset level:%d, i2c_addr:%02x, irq_number:%d,x_pixel:%d, y_pixel:%d, max_point:%d, rotate:%d, i2cNum:%d\n",
+		gpio_reset,
+		0,
+		cfg_dts.i2cAddr,
+		cfg_dts.sirq,
+		cfg_dts.xMax,
+		cfg_dts.yMax,
+		5,
+		cfg_dts.rotate,
+		cfg_dts.i2cNum);
+    
+        return 0;
+
+fail:
+	return -1;
+    
+}
+
+#endif
+
+static void report_data(struct gsl_ts *ts, u16 x, u16 y, u8 pressure, u8 id)
+{
+#ifdef HAVE_TOUCH_KEY
+	if(x > cfg_dts.xMax || y > cfg_dts.yMax)
+	{
+		report_key(ts,x,y);
+		return;
+	}
+#endif
+
+#ifdef REPORT_DATA_PROTOCOL_B
+	input_mt_slot(ts->input, id);	
+	input_mt_report_slot_state(ts->input, MT_TOOL_FINGER, true);
+	input_report_abs(ts->input, ABS_MT_POSITION_X, x);
+	input_report_abs(ts->input, ABS_MT_POSITION_Y, y);
+	input_report_abs(ts->input, ABS_MT_TOUCH_MAJOR, pressure);
+	input_report_abs(ts->input, ABS_MT_WIDTH_MAJOR, 1);
+#endif
+/* A protocol*/
+}
+
+static void gslX680_ts_worker(struct work_struct *work)
+{
+	int rc, i;
+	u8 id, touches;
+	u16 x, y;
+	
+	struct gsl_ts *ts = container_of(work, struct gsl_ts,work);
+	
+#ifdef GSL_NOID_VERSION
+	u32 tmp1;
+	u8 buf[4] = {0};
+	//struct gsl_touch_info cinfo = {0};
+	struct gsl_touch_info cinfo;
+#endif
+
+#ifdef GSL_MONITOR
+	if(i2c_lock_flag != 0)
+		goto i2c_lock_schedule;
+	else
+		i2c_lock_flag = 1;
+#endif
+
+	mutex_lock(&mutex);
+
+	print_info("=====gslX680_ts_worker=====\n");
+
+	rc = gsl_ts_read(ts->client, 0x80, ts->touch_data, ts->dd->data_size);
+
+	if (rc < 0) 
+	{
+		dev_err(&ts->client->dev, "read failed.------func:%s,line:%d\n",__func__,__LINE__);
+		goto schedule;
+	}
+		
+	touches = ts->touch_data[ts->dd->touch_index];
+	print_info("-----touches: %d -----\n", touches);		
+#ifdef GSL_NOID_VERSION
+	cinfo.finger_num = touches;
+	print_info("tp-gsl  finger_num = %d\n",cinfo.finger_num);
+	for(i = 0; i < (touches < MAX_CONTACTS ? touches : MAX_CONTACTS); i ++)
+	{
+		cinfo.x[i] = join_bytes( ( ts->touch_data[ts->dd->x_index  + 4 * i + 1] & 0xf),
+				ts->touch_data[ts->dd->x_index + 4 * i]);
+		cinfo.y[i] = join_bytes(ts->touch_data[ts->dd->y_index + 4 * i + 1],
+				ts->touch_data[ts->dd->y_index + 4 * i ]);
+		print_info("tp-gsl  x = %d y = %d \n",cinfo.x[i],cinfo.y[i]);
+	}
+	cinfo.finger_num=(ts->touch_data[3]<<24)|(ts->touch_data[2]<<16)
+		|(ts->touch_data[1]<<8)|(ts->touch_data[0]);
+	gsl_alg_id_main(&cinfo);
+	tmp1=gsl_mask_tiaoping();
+	print_info("[tp-gsl] tmp1=%x\n",tmp1);
+	if(tmp1>0&&tmp1<0xffffffff)
+	{
+		buf[0]=0xa;buf[1]=0;buf[2]=0;buf[3]=0;
+		gsl_ts_write(ts->client,0xf0,buf,4);
+		buf[0]=(u8)(tmp1 & 0xff);
+		buf[1]=(u8)((tmp1>>8) & 0xff);
+		buf[2]=(u8)((tmp1>>16) & 0xff);
+		buf[3]=(u8)((tmp1>>24) & 0xff);
+		print_info("tmp1=%08x,buf[0]=%02x,buf[1]=%02x,buf[2]=%02x,buf[3]=%02x\n",
+			tmp1,buf[0],buf[1],buf[2],buf[3]);
+		gsl_ts_write(ts->client,0x8,buf,4);
+	}
+	touches = cinfo.finger_num;
+#endif
+	
+	//for(i = 1; i <= MAX_CONTACTS; i ++)
+	for(i = 0; i < MAX_CONTACTS; i ++)
+	{
+		if(touches == 0)
+			id_sign[i] = 0;	
+		id_state_flag[i] = 0;
+	}
+	for(i= 0;i < (touches > MAX_FINGERS ? MAX_FINGERS : touches);i ++)
+	{
+	#ifdef GSL_NOID_VERSION
+		id = cinfo.id[i]-1;//sunjl added,for slot id should be 0-9,not 1-10.
+		y =  cinfo.x[i];
+		x =  cinfo.y[i];
+	#else
+		y = join_bytes( ( ts->touch_data[ts->dd->x_index  + 4 * i + 1] & 0xf),
+				ts->touch_data[ts->dd->x_index + 4 * i]);
+		x = join_bytes(ts->touch_data[ts->dd->y_index + 4 * i + 1],
+				ts->touch_data[ts->dd->y_index + 4 * i ]);
+		id = ts->touch_data[ts->dd->id_index + 4 * i] >> 4;
+	#endif
+		x=x*cfg_dts.xMax/2048;
+		y=y*cfg_dts.yMax/2048;
+	//printk("raw(x,y):(%d,%d)\n",x,y);
+	#if CFG_TP_USE_CONFIG
+    if (cfg_dts.XYSwap == 1)
+    {
+        int tmp;
+        tmp=x;
+        x=y;
+        y=tmp;
+    }
+    
+    if(cfg_dts.xRevert == 1)
+    {   
+        x = cfg_dts.xMax - x;
+    }
+    
+    if(cfg_dts.yRevert == 1)
+    {
+        y = cfg_dts.yMax - y;
+    }
+    
+    
+    if(cfg_dts.rotate == 90) //anticlockwise 90 angle
+    {
+        int tmp;
+        tmp = x;
+        x = y;
+        y = cfg_dts.xMax-tmp;
+    }else if(cfg_dts.rotate == 180) //anticlockwise 180 angle
+    {
+        x = cfg_dts.xMax - x;
+        y = cfg_dts.yMax - y;
+    } else if(cfg_dts.rotate == 270) //anticlockwise 270 angle
+    {
+        int tmp;
+        tmp = x;
+        x = cfg_dts.yMax-y;
+        y = tmp;
+    }
+
+	#endif
+	//printk("new(x,y):(%d,%d)\n",x,y);
+
+		if(0 <=id && id < MAX_CONTACTS)
+		{
+		#ifdef FILTER_POINT
+			filter_point(x, y ,id);
+			report_data(ts, x_new, y_new, 10, id);		
+		#else 
+			#if defined(RECORD_POINT)
+				record_point(x, y , id);
+				report_data(ts, x_new, y_new, 10, id);		
+			#else
+				report_data(ts, x, y, 10, id);		
+			#endif
+		#endif
+			id_state_flag[id] = 1;
+		}
+	}
+	
+	for(i = 0; i < MAX_CONTACTS; i++)
+	{	
+		if( (0 == touches) || ((0 != id_state_old_flag[i]) && (0 == id_state_flag[i])) )
+		{
+		#ifdef REPORT_DATA_PROTOCOL_B
+			input_mt_slot(ts->input, i);
+			//input_report_abs(ts->input, ABS_MT_TRACKING_ID, -1);
+			input_mt_report_slot_state(ts->input, MT_TOOL_FINGER, false);
+		#endif
+			id_sign[i]=0;
+		}
+		id_state_old_flag[i] = id_state_flag[i];
+	}
+/* A protocol*/
+
+	input_sync(ts->input);
+
+schedule:
+	mutex_unlock(&mutex); 
+#ifdef GSL_MONITOR
+	i2c_lock_flag = 0;
+i2c_lock_schedule:
+#endif
+	//enable_irq(ts->irq);
+
+	print_info("=====gslX680_ts_worker end=====\n");
+	return;	
+}
+
+#ifdef GSL_MONITOR
+static void gsl_monitor_worker(struct work_struct *data)
+{
+	//char write_buf[4] = {0};
+	char read_buf[4]  = {0};
+	char download_flag = 0;
+	
+	print_info("----------------gsl_monitor_worker-----------------\n");	
+
+	if(i2c_lock_flag != 0)
+		goto queue_monitor_work;
+	else
+		i2c_lock_flag = 1;
+		mutex_lock(&mutex); 
+	gsl_ts_read(gsl_client, 0xb0, read_buf, 4);
+	if(read_buf[3] != 0x5a || read_buf[2] != 0x5a || read_buf[1] != 0x5a || read_buf[0] != 0x5a)
+		b0_counter ++;
+	else
+		b0_counter = 0;
+
+	if(b0_counter > 1)
+	{
+		printk("======read 0xb0: %x %x %x %x ======\n",read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		download_flag = 1;
+		b0_counter = 0;
+		goto DOWNLOAD_FW;
+	}
+	
+	gsl_ts_read(gsl_client, 0xb4, read_buf, 4);	
+	int_2nd[3] = int_1st[3];
+	int_2nd[2] = int_1st[2];
+	int_2nd[1] = int_1st[1];
+	int_2nd[0] = int_1st[0];
+	int_1st[3] = read_buf[3];
+	int_1st[2] = read_buf[2];
+	int_1st[1] = read_buf[1];
+	int_1st[0] = read_buf[0];
+
+	if(int_1st[3] == int_2nd[3] && int_1st[2] == int_2nd[2] &&int_1st[1] == int_2nd[1] && int_1st[0] == int_2nd[0]) 
+	{
+		printk("======int_1st: %x %x %x %x , int_2nd: %x %x %x %x ======\n",int_1st[3], int_1st[2], int_1st[1], int_1st[0], int_2nd[3], int_2nd[2],int_2nd[1],int_2nd[0]);
+		download_flag = 1;
+		goto DOWNLOAD_FW;
+	}
+
+	gsl_ts_read(gsl_client, 0xbc, read_buf, 4);
+	if(read_buf[3] != 0 || read_buf[2] != 0 || read_buf[1] != 0 || read_buf[0] != 0)
+		bc_counter ++;
+	else
+		bc_counter = 0;
+
+	if(bc_counter > 1) 
+	{
+		printk("======read 0xbc: %x %x %x %x ======\n",read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		download_flag = 1;
+		bc_counter = 0;
+	}
+DOWNLOAD_FW:
+	if(1 == download_flag)
+	{		
+		init_chip(gsl_client);
+	}
+	
+	i2c_lock_flag = 0;
+	
+	mutex_unlock(&mutex); 
+	
+queue_monitor_work:
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 200);
+}
+#endif
+
+#ifdef RESUME_INIT_CHIP_WORK
+static void gslX680_init_worker (struct work_struct *work)
+{
+	init_chip(this_ts->client);
+	check_mem_data(this_ts->client);
+}
+#endif
+
+static irqreturn_t gsl_ts_irq(int irq, void *dev_id)
+{	
+	struct gsl_ts *ts = dev_id;
+	print_info("========gslX680 Interrupt=========\n");				 
+
+	if (!work_pending(&ts->work)) {
+		queue_work(ts->wq, &ts->work);
+	}else{
+		//printk("[GSLX680] work is pending,lost the interrupt.\n");
+	}
+	return IRQ_HANDLED;
+}
+
+#if CFG_TP_USE_CONFIG
+
+/********************TP DEBUG************************/
+
+/**************************************************************************/
+static ssize_t tp_rotate_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.rotate);
+}
+/**************************************************************************/
+static ssize_t tp_rotate_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.rotate=data;
+    return count;
+}
+/**************************************************************************/
+static ssize_t tp_xrevert_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.xRevert);
+}
+/**************************************************************************/
+static ssize_t tp_xrevert_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.xRevert=data;
+    return count;
+}
+
+/**************************************************************************/
+static ssize_t tp_yrevert_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.yRevert);
+}
+/**************************************************************************/
+static ssize_t tp_yrevert_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.yRevert=data;
+    return count;
+}
+
+/**************************************************************************/
+static ssize_t tp_xyswap_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.XYSwap);
+}
+/**************************************************************************/
+static ssize_t tp_xyswap_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.XYSwap=data;
+    return count;
+}
+
+static DEVICE_ATTR(tp_rotate, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_rotate_show, tp_rotate_store);
+static DEVICE_ATTR(tp_xrevert, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_xrevert_show, tp_xrevert_store);
+static DEVICE_ATTR(tp_yrevert, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_yrevert_show, tp_yrevert_store);
+static DEVICE_ATTR(tp_xyswap, 	S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_xyswap_show, tp_xyswap_store);
+
+static struct attribute *tp_attributes[] = { 
+    &dev_attr_tp_rotate.attr,
+	 &dev_attr_tp_xrevert.attr,
+	  &dev_attr_tp_yrevert.attr,
+	  &dev_attr_tp_xyswap.attr,
+    NULL
+};
+
+static const struct attribute_group tp_attr_group = {
+    .attrs  = tp_attributes,
+};
+#endif
+
+static int gslX680_ts_init(struct i2c_client *client, struct gsl_ts *ts)
+{
+	struct input_dev *input_device;
+	int rc = 0;
+	
+	printk("[GSLX680] Enter %s\n", __func__);
+
+	ts->dd = &devices[ts->device_id];
+
+	if (ts->device_id == 0) {
+		ts->dd->data_size = MAX_FINGERS * ts->dd->touch_bytes + ts->dd->touch_meta_data;
+		ts->dd->touch_index = 0;
+	}
+
+	ts->touch_data = kzalloc(ts->dd->data_size, GFP_KERNEL);
+	if (!ts->touch_data) {
+		pr_err("%s: Unable to allocate memory\n", __func__);
+		return -ENOMEM;
+	}
+
+	input_device = input_allocate_device();
+	if (!input_device) {
+		rc = -ENOMEM;
+		goto error_alloc_dev;
+	}
+
+	ts->input = input_device;
+	input_device->name = TP_NAME;
+	input_device->id.bustype = BUS_I2C;
+	input_device->dev.parent = &client->dev;
+	input_set_drvdata(input_device, ts);
+
+	__set_bit(EV_ABS,input_device->evbit);
+	__set_bit(INPUT_PROP_DIRECT, input_device->propbit);
+	input_mt_init_slots(input_device, MAX_CONTACTS, 0);
+	input_set_abs_params(input_device, ABS_MT_TOUCH_MAJOR, 0, 255, 0, 0);
+	input_set_abs_params(input_device, ABS_MT_WIDTH_MAJOR, 0, 255, 0, 0);
+
+#if CFG_TP_USE_CONFIG
+	if(cfg_dts.rotate == 90 || cfg_dts.rotate == 270)
+	{
+		input_set_abs_params(input_device, ABS_MT_POSITION_Y, 0, cfg_dts.xMax, 0, 0);
+		input_set_abs_params(input_device, ABS_MT_POSITION_X, 0, cfg_dts.yMax, 0, 0);
+	}
+	else{
+		input_set_abs_params(input_device, ABS_MT_POSITION_X, 0, cfg_dts.xMax, 0, 0);
+		input_set_abs_params(input_device, ABS_MT_POSITION_Y, 0, cfg_dts.yMax, 0, 0);
+	}
+#else
+    input_set_abs_params(input_device, ABS_MT_POSITION_X, 0, TP_MAX_X, 0, 0);
+    input_set_abs_params(input_device, ABS_MT_POSITION_Y, 0, TP_MAX_Y, 0, 0);
+#endif
+
+#ifdef HAVE_TOUCH_KEY
+	set_bit(EV_KEY, input_device->evbit);
+	input_device->evbit[0] = BIT_MASK(EV_KEY);
+	for (i = 0; i < MAX_KEY_NUM; i++)
+		set_bit(key_array[i], input_device->keybit);
+#endif
+
+#if CFG_TP_USE_CONFIG
+	client->irq = cfg_dts.sirq;
+#else
+		client->irq = TP_IRQ_PORT;
+#endif
+	ts->irq = client->irq;
+
+	ts->wq = create_singlethread_workqueue("kworkqueue_ts");
+	if (!ts->wq) {
+		dev_err(&client->dev, "Could not create workqueue\n");
+		goto error_wq_create;
+	}
+	flush_workqueue(ts->wq);	
+
+	INIT_WORK(&ts->work, gslX680_ts_worker);
+	
+#ifdef RESUME_INIT_CHIP_WORK	
+	ts->init_wq = create_singlethread_workqueue("ts_init_wq");
+	if (!ts->init_wq) {
+		dev_err(&client->dev, "Could not create ts_init_wq workqueue\n");
+		goto error_wq_create;
+	}
+	flush_workqueue(ts->init_wq);	
+	INIT_WORK(&ts->init_work, gslX680_init_worker);
+#endif
+	rc = input_register_device(input_device);
+	if (rc)
+		goto error_unreg_device;
+	
+	this_ts = ts;
+
+#if CFG_TP_USE_CONFIG
+	if (sysfs_create_group(&input_device->dev.kobj, &tp_attr_group) < 0){
+	    printk("create tp sysfs group error!");		
+	}
+#endif
+	return 0;
+
+error_unreg_device:
+	destroy_workqueue(ts->wq);
+error_wq_create:
+	input_free_device(input_device);
+error_alloc_dev:
+	kfree(ts->touch_data);
+	return rc;
+}
+
+static int gsl_ts_suspend(struct device *dev)
+{
+	flush_workqueue(this_ts->init_wq);
+    flush_work(&this_ts->init_work);
+
+	printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	gslX680_shutdown_low();
+	if (tp_regulator){
+		 current_val = regulator_get_voltage(tp_regulator);
+		 regulator_disable(tp_regulator);
+		 printk("Nova disable regulator %d\n",current_val);
+         power_is_on = 0;
+	}
+	return 0;
+}
+
+static int gsl_ts_resume_early(struct device *dev)
+{
+    int ret;
+
+    //printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+    pr_info("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+    if(1 == power_is_on)
+    {
+        printk("impossible: power is turned on!\n");
+        return 0;
+    }
+
+	if (tp_regulator)
+	{
+	    regulator_set_voltage(tp_regulator, CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+	    ret = regulator_enable(tp_regulator);
+	}
+
+#ifdef RESUME_INIT_CHIP_WORK
+	queue_work(this_ts->init_wq, &this_ts->init_work);
+#endif
+
+    power_is_on = 1;
+    return 0;
+}
+
+static int gsl_ts_resume(struct device *dev)
+{
+	int ret;
+
+	//printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	pr_info("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+
+    if(1 == power_is_on)
+    {
+        printk(" power is turned on!\n");
+        return 0;
+    }
+        
+	if (tp_regulator)
+	{
+	    regulator_set_voltage(tp_regulator, CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+	    ret = regulator_enable(tp_regulator);
+	}
+
+	#ifdef RESUME_INIT_CHIP_WORK
+	queue_work(this_ts->init_wq, &this_ts->init_work);
+	#endif
+    power_is_on = 1;
+    return 0;
+}
+
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+static void gsl_ts_early_suspend(struct early_suspend *h)
+{
+	int i=0;
+
+	printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	
+	disable_irq(this_ts->irq);
+	flush_workqueue(this_ts->wq);
+    flush_work(&this_ts->work);
+    
+	#ifdef GSL_MONITOR
+	printk( "gsl_ts_suspend () : cancel gsl_monitor_work\n");
+	cancel_delayed_work_sync(&gsl_monitor_work);
+	#endif
+
+#ifdef SLEEP_CLEAR_POINT
+	#ifdef REPORT_DATA_PROTOCOL_B
+	for(i =1;i<=MAX_CONTACTS;i++)
+	{	
+		input_mt_slot(this_ts->input, i);
+		input_mt_report_slot_state(this_ts->input, MT_TOOL_FINGER, false);
+	}
+	#endif
+	input_sync(this_ts->input);	
+#endif
+}
+
+static void gsl_ts_late_resume(struct early_suspend *h)
+{
+	enable_irq(this_ts->irq);
+	
+	//printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	pr_info("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	#ifdef GSL_MONITOR
+	printk( "gsl_ts_resume () : queue gsl_monitor_work\n");
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 500);
+	#endif
+}
+#endif
+
+#if 0  // used
+static void gsl_init_work_func(struct work_struct *work)
+{
+	struct gsl_ts *ts = container_of(work, struct gsl_ts,gsl_init_work);
+
+	gslX680_init();
+	init_chip(ts->client);
+	check_mem_data(ts->client);
+}
+#endif
+
+static int gsl_ts_probe(struct i2c_client *client,
+			const struct i2c_device_id *id)
+{
+	struct gsl_ts *ts;
+	int rc;
+
+	printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {
+		dev_err(&client->dev, "I2C functionality not supported\n");
+		return -ENODEV;
+	}
+ 
+	ts = kzalloc(sizeof(*ts), GFP_KERNEL);
+	if (!ts){
+		printk("kzalloc failed.\n");
+		return -ENOMEM;
+	}
+	gsl_client = client;
+	ts->client = client;
+	i2c_set_clientdata(client, ts);
+	ts->device_id = id->driver_data;
+
+	rc = gslX680_ts_init(client, ts);
+	if (rc < 0) {
+		dev_err(&client->dev, "GSLX680 init failed\n");
+		goto error_mutex_destroy;
+	}	
+
+	gslX680_init();
+	init_chip(ts->client);
+	check_mem_data(ts->client);
+
+	mutex_init(&mutex); 
+	//INIT_WORK(&ts->gsl_init_work, gsl_init_work_func);
+	//ts->gsl_init_workqueue = create_singlethread_workqueue("gsl_init_workqueue");
+	//queue_work(ts->gsl_init_workqueue, &ts->gsl_init_work);
+
+	rc=  request_irq(client->irq, gsl_ts_irq, IRQF_TRIGGER_RISING | IRQF_DISABLED, client->name, ts);
+	if (rc < 0) {
+		printk( "gsl_probe: request irq failed\n");
+		goto error_req_irq_fail;
+	}
+	
+	/* create debug attribute */
+	//rc = device_create_file(&ts->input->dev, &dev_attr_debug_enable);
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	ts->early_suspend.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN + 1;
+	//ts->early_suspend.level = EARLY_SUSPEND_LEVEL_DISABLE_FB + 1;
+	ts->early_suspend.suspend = gsl_ts_early_suspend;
+	ts->early_suspend.resume = gsl_ts_late_resume;
+	register_early_suspend(&ts->early_suspend);
+#endif
+	#ifdef GSL_MONITOR
+	printk( "gsl_ts_probe () : queue gsl_monitor_workqueue\n");
+	INIT_DELAYED_WORK(&gsl_monitor_work, gsl_monitor_worker);
+	gsl_monitor_workqueue = create_singlethread_workqueue("gsl_monitor_workqueue");
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 500);
+	#endif
+	
+	printk("[GSLX680] End %s\n", __func__);
+
+	return 0;
+
+//exit_set_irq_mode:	
+error_req_irq_fail:
+	free_irq(ts->irq, ts);	
+
+error_mutex_destroy:
+	input_free_device(ts->input);
+	kfree(ts);
+	return rc;
+}
+
+static int gsl_ts_remove(struct i2c_client *client)
+{
+	struct gsl_ts *ts = i2c_get_clientdata(client);
+	printk("==gsl_ts_remove=\n");
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	unregister_early_suspend(&ts->early_suspend);
+#endif
+	//cancel_work_sync(&ts->gsl_init_work);
+	//destroy_workqueue(ts->gsl_init_workqueue);
+
+	device_init_wakeup(&client->dev, 0);
+	cancel_work_sync(&ts->work);
+	free_irq(ts->irq, ts);
+	destroy_workqueue(ts->wq);
+
+	#ifdef RESUME_INIT_CHIP_WORK
+	cancel_work_sync(&ts->init_work);
+	destroy_workqueue(ts->init_wq);
+	#endif
+
+#if CFG_TP_USE_CONFIG
+	sysfs_remove_group(&ts->input->dev.kobj, &tp_attr_group);
+#endif
+	input_unregister_device(ts->input);
+	//device_remove_file(&ts->input->dev, &dev_attr_debug_enable);
+	#ifdef GSL_MONITOR
+	cancel_delayed_work_sync(&gsl_monitor_work);
+	destroy_workqueue(gsl_monitor_workqueue);
+	#endif
+
+	kfree(ts->touch_data);
+	kfree(ts);
+
+	return 0;
+}
+
+static void gsl_ts_shutdown(struct i2c_client *client)
+{
+	printk("==gsl_ts_shutdown==\n");
+    gsl_ts_remove(client);
+	if ( tp_regulator ){
+		regulator_deinit(tp_regulator);
+		tp_regulator = NULL;
+	}
+}
+
+static const struct i2c_device_id gsl_ts_id[] = {
+	{GSLX680_I2C_NAME, 0},
+	{}
+};
+MODULE_DEVICE_TABLE(i2c, gsl_ts_id);
+static unsigned short gsl_addresses[] = {
+	GSLX680_I2C_ADDR,
+	I2C_CLIENT_END,
+};
+
+static struct dev_pm_ops tp_pm_ops = {
+    .resume_early = gsl_ts_resume_early,
+    .suspend       = gsl_ts_suspend,
+    .resume = gsl_ts_resume,
+};
+
+static struct of_device_id gsl_of_match[] = {
+	{ .compatible = "gslX680" },
+	{ }
+};
+
+static struct i2c_driver gsl_ts_driver = {
+	.driver = {
+		.name = GSLX680_I2C_NAME,
+		.owner = THIS_MODULE,
+		.pm = &tp_pm_ops,
+		.of_match_table	= of_match_ptr(gsl_of_match),
+	},
+	.probe		= gsl_ts_probe,
+	.remove		= gsl_ts_remove,
+	.shutdown	=	gsl_ts_shutdown,
+	.id_table	= gsl_ts_id,
+	.address_list	= gsl_addresses,
+};
+static struct i2c_board_info tp_info = {
+	.type	= GSLX680_I2C_NAME,
+};
+
+#if CFG_TP_USE_CONFIG
+static int tp_config_init(void)
+{
+    cfg_dts.rotate=TP_ROTATE_DEFAULT;
+    cfg_dts.xMax=TP_MAX_X;
+    cfg_dts.yMax=TP_MAX_Y;
+    cfg_dts.xRevert=TP_XREVERT;
+    cfg_dts.yRevert=TP_YREVERT;
+    cfg_dts.XYSwap=TP_XYSWAP;
+    return 0;
+}
+#endif
+
+static int __init gsl_ts_init(void)
+{
+	//struct i2c_adapter *adap = NULL;
+	int ret;
+	
+	printk("==gsl_ts_init==\n");
+	
+#if CFG_TP_USE_CONFIG
+	tp_config_init();
+
+	ret = tp_of_data_get();
+	if(ret<0) {
+		printk("Please complete the TP configuration item!!!\n\n");
+	}
+	tp_info.addr = cfg_dts.i2cAddr;
+
+	tp_regulator = regulator_init(cfg_dts.regulator, 
+   		cfg_dts.vol_min, cfg_dts.vol_max);
+#else
+	gpio_reset = TP_RESET_PIN;
+	tp_info.addr = TP_I2C_ADDR;
+
+	tp_regulator = regulator_init(CTP_POWER_ID, 
+   		CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+#endif
+
+	if ( !tp_regulator ) {
+	   printk("Nova tp init power failed");
+	   ret = -EINVAL;
+	   return ret;
+	}
+
+	gpio_request(gpio_reset, GSLX680_I2C_NAME);
+
+#if 0
+#if CFG_TP_USE_CONFIG
+	adap = i2c_get_adapter(cfg_dts.i2cNum);
+#else
+	adap = i2c_get_adapter(TP_I2C_ADAPTER);
+#endif
+	gsl_ts_device = i2c_new_device(adap, &tp_info); 
+#endif
+
+	ret = i2c_add_driver(&gsl_ts_driver);
+	printk("i2c_add_driver,ret=%d\n",ret);
+	return ret;
+}
+
+static void __exit gsl_ts_exit(void)
+{
+	printk("==gsl_ts_exit==\n");
+	
+	i2c_del_driver(&gsl_ts_driver);
+	if ( tp_regulator ){
+		regulator_deinit(tp_regulator);
+		tp_regulator = NULL;
+	}
+	gpio_free(gpio_reset);
+    #if 0
+	if(gsl_ts_device){
+		i2c_unregister_device(gsl_ts_device);
+		gsl_ts_device = NULL;
+	}
+    #endif
+	return;
+}
+
+module_init(gsl_ts_init);
+module_exit(gsl_ts_exit);
+
+MODULE_LICENSE("GPL");
+MODULE_DESCRIPTION("GSLX680 touchscreen controller driver");
+MODULE_AUTHOR("Guan Yuwei, guanyuwei@basewin.com");
+MODULE_ALIAS("platform:gsl_ts");
+
diff --git a/drivers/input/touchscreen/GSL2681_M2111/gslX680.h b/drivers/input/touchscreen/GSL2681_M2111/gslX680.h
new file mode 100755
index 0000000..715f552
--- /dev/null
+++ b/drivers/input/touchscreen/GSL2681_M2111/gslX680.h
@@ -0,0 +1,5503 @@
+#ifndef _GSLX680_H_
+#define _GSLX680_H_
+
+#define SCREEN_MAX_X 		1280
+#define SCREEN_MAX_Y 		800
+#define TP_ROTATE_DEFAULT 0
+#define TP_XREVERT 1
+#define TP_YREVERT 1
+#define TP_XYSWAP 1
+
+
+struct fw_data
+{
+    u32 offset : 8;
+    u32 : 0;
+    u32 val;
+};
+
+static const struct fw_data GSLX680_FW[] = {
+//GSL_2681B+2682B_V1.3.4.17_2013.02.28
+{0xf0,0x3},
+{0x00,0x199d0f04},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00005100},
+{0x28,0x00000000},
+{0x2c,0x0000012c},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000064},
+{0x54,0x00000003},
+{0x58,0xffffffb0},
+{0x5c,0x00000005},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000002},
+{0x6c,0x0000000f},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0xffffffec},
+{0x7c,0x00000000},
+{0xf0,0x4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000064},
+{0x0c,0x00000000},
+{0x10,0x0000fe70},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00001000},
+{0x34,0x000f0fff},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000001},
+{0x58,0x01020304},
+{0x5c,0x05060708},
+{0x60,0x0a0b0c0d},
+{0x64,0x0e0f1012},
+{0x68,0x13141516},
+{0x6c,0x1718191a},
+{0x70,0x1b1c1d1e},
+{0x74,0x00000000},
+{0x78,0x80808080},
+{0x7c,0x8c846000},
+{0xf0,0x5},
+{0x00,0x00000000},
+{0x04,0x00000005},
+{0x08,0x000000b4},
+{0x0c,0x80808080},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000fff},
+{0x1c,0x10000000},
+{0x20,0x10130000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000400},
+{0x30,0x00808080},
+{0x34,0x80808080},
+{0x38,0x80808080},
+{0x3c,0x80808080},
+{0x40,0x80808080},
+{0x44,0x80808080},
+{0x48,0x80808080},
+{0x4c,0x80808000},
+{0x50,0x00000000},
+{0x54,0x00000102},
+{0x58,0x03040506},
+{0x5c,0x0708090a},
+{0x60,0x0b0d0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1c1d1e1f},
+{0x74,0x00000001},
+{0x78,0x00000017},
+{0x7c,0x0000000c},
+{0xf0,0x6},
+{0x00,0x00000017},
+{0x04,0x00000000},
+{0x08,0x0000000c},
+{0x0c,0x04040404},
+{0x10,0x00000032},
+{0x14,0x14141414},
+{0x18,0x00000000},
+{0x1c,0x00000001},
+{0x20,0x00002904},	//\D6ж\CF
+{0x24,0x00000800},	//Y\B7ֱ\E6\C2\CA
+{0x28,0x00000800},	//X\B7ֱ\E6\C2\CA
+{0x2c,0xf8010017},
+{0x30,0xf8010017},
+{0x34,0x00000003},
+{0x38,0x00000003},
+{0x3c,0x00000fff},
+{0x40,0x80000000},
+{0x44,0x001c001c},
+{0x48,0x00000fff},
+{0x4c,0x04040404},
+{0x50,0x00010000},
+{0x54,0x00000000},
+{0x58,0x00004000},
+{0x5c,0x1b6da488},
+{0x60,0x40201008},
+{0x64,0x00000000},
+{0x68,0x000007d0},
+{0x6c,0x000007d0},
+{0x70,0x00000000},
+{0x74,0x00000096},
+{0x78,0x0000003c},
+{0x7c,0x00000000},
+{0xf0,0x7},
+{0x00,0x01070006},
+{0x04,0x03090208},
+{0x08,0x050b040a},
+{0x0c,0x07110610},
+{0x10,0x09130812},
+{0x14,0x00123456},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0xff080010},
+{0x28,0xff080120},
+{0x2c,0xff080140},
+{0x30,0xff080160},
+{0x34,0x001c00c8},
+{0x38,0x001700ad},
+{0x3c,0x00120092},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000104},	//ԭ\B5㷽\CF\F2\A3\ACX\B7\B4=4\A3\ACY\B7\B4=2\A3\ACXY\B7\B4=6,XY\BB\A5\BB\BB=8\A3\AC  ˫\D6ص\C4=\CA\FDֵ\B5\FE\BC\D3
+{0x4c,0x000f0001},
+{0x50,0x00000000},
+{0x54,0x00000004},
+{0x58,0x00000000},
+{0x5c,0x000a0001},
+{0x60,0x0015000b},
+{0x64,0x00160016},
+{0x68,0x00000000},
+{0x6c,0x00090000},
+{0x70,0x000a0000},
+{0x74,0x00000000},
+{0x78,0x00012345},
+{0x7c,0x006789ab},
+{0xf0,0x8},
+{0x00,0x01fa21f9},
+{0x04,0x21f821f7},
+{0x08,0x21f621f5},
+{0x0c,0x21f421f3},
+{0x10,0x21f221f1},
+{0x14,0x21f0420f},
+{0x18,0x422f424f},
+{0x1c,0x426f428f},
+{0x20,0x42af42cf},
+{0x24,0x42ef430f},
+{0x28,0x432f434f},
+{0x2c,0x736f0000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x01030507},
+{0x44,0x090b0000},
+{0x48,0x00000000},
+{0x4c,0x02040608},
+{0x50,0x0a0c0000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000004},
+{0x60,0x0000012c},
+{0x64,0x05040302},
+{0x68,0x0a080604},
+{0x6c,0xffffffff},
+{0x70,0x0000009a},
+{0x74,0x00000045},
+{0x78,0x00000000},
+{0x7c,0x0000000c},
+{0xf0,0x9},
+{0x00,0xff080094},
+{0x04,0x00070011},
+{0x08,0xff080090},
+{0x0c,0x00040000},
+{0x10,0xff080068},
+{0x14,0x00030000},
+{0x18,0xff080064},
+{0x1c,0x01002580},
+{0x20,0xff080060},
+{0x24,0x00000000},
+{0x28,0xff08004c},
+{0x2c,0x00197fff},
+{0x30,0xfffffff0},
+{0x34,0x00000000},
+{0x38,0xfffffff0},
+{0x3c,0x00000000},
+{0x40,0xfffffff0},
+{0x44,0x00000000},
+{0x48,0xfffffff0},
+{0x4c,0x00000000},
+{0x50,0xfffffff0},
+{0x54,0x00000000},
+{0x58,0xfffffff0},
+{0x5c,0x00000000},
+{0x60,0xfffffff0},
+{0x64,0x00000000},
+{0x68,0xfffffff0},
+{0x6c,0x00000000},
+{0x70,0xfffffff0},
+{0x74,0x00000000},
+{0x78,0xfffffff0},
+{0x7c,0x00000000},
+/*
+{0xf0,0xe0},
+{0x00,0x0048001e},
+{0x04,0x00a50092},
+{0x08,0x00cb00b5},
+{0x0c,0x00b600cc},
+{0x10,0x00b600be},
+{0x14,0x00c300b7},
+{0x18,0x00b500cf},
+{0x1c,0x00be00cf},
+{0x20,0x00b100b8},
+{0x24,0x00c700ba},
+{0x28,0x00a900c8},
+{0x2c,0x00bd00b7},
+{0x30,0x009c00a7},
+{0x34,0x009900a2},
+{0x38,0x00b800a5},
+{0x3c,0x00a400a0},
+{0x40,0x006401f4},
+{0x44,0x00640064},
+{0x48,0x01900064},
+{0x4c,0x00500190},
+{0x50,0x00500050},
+{0x54,0x012c0050},
+{0x58,0x012c012c},
+{0x5c,0x0032012c},
+{0x60,0x00640014},
+{0x64,0x00640064},
+{0x68,0x00000032},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe1},
+{0x00,0x000e000b},
+{0x04,0x0047003a},
+{0x08,0x008d008f},
+{0x0c,0x00a600a3},
+{0x10,0x00b100c1},
+{0x14,0x00c200b1},
+{0x18,0x00bf00cd},
+{0x1c,0x00b100bf},
+{0x20,0x00b700cf},
+{0x24,0x00c000c1},
+{0x28,0x00b500b5},
+{0x2c,0x00a300c7},
+{0x30,0x00bc00a6},
+{0x34,0x00ab009d},
+{0x38,0x00bf00b6},
+{0x3c,0x00b900ab},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe2},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+*/
+{0xf0,0x0},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x233fc0c0},
+{0x10,0xa2146004},
+{0x14,0xa4102000},
+{0x18,0xe4244000},
+{0x1c,0x233fc0c0},
+{0x20,0xa2146010},
+{0x24,0x2500003f},
+{0x28,0xa414a3ff},
+{0x2c,0xe4244000},
+{0x30,0x01000000},
+{0x34,0x821020e0},
+{0x38,0x81880001},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x270010c0},
+{0x4c,0xa614e00f},
+{0x50,0xe6a00040},
+{0x54,0x01000000},
+{0x58,0xc0a00040},
+{0x5c,0x01000000},
+{0x60,0xa0100000},
+{0x64,0xa2100000},
+{0x68,0xa4100000},
+{0x6c,0xa6100000},
+{0x70,0xa8100000},
+{0x74,0xaa100000},
+{0x78,0xac100000},
+{0x7c,0xae100000},
+{0xf0,0x1},
+{0x00,0x90100000},
+{0x04,0x92100000},
+{0x08,0x94100000},
+{0x0c,0x96100000},
+{0x10,0x98100000},
+{0x14,0x9a100000},
+{0x18,0x9c100000},
+{0x1c,0x9e100000},
+{0x20,0x84100000},
+{0x24,0x86100000},
+{0x28,0x88100000},
+{0x2c,0x8a100000},
+{0x30,0x8c100000},
+{0x34,0x8e100000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x82100000},
+{0x48,0x81900001},
+{0x4c,0x82100000},
+{0x50,0x81980001},
+{0x54,0x81800000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0xbc102cf8},
+{0x68,0x9c102c78},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x270010c0},
+{0xf0,0x2},
+{0x00,0xa614e00f},
+{0x04,0xe6a00040},
+{0x08,0x01000000},
+{0x0c,0x40000452},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x10bfffff},
+{0x1c,0x01000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x1a},
+{0x00,0x0000000e},
+{0x04,0xfffffe65},
+{0x08,0x000003fc},
+{0x0c,0x00000af6},
+{0x10,0x000003d4},
+{0x14,0xfffffe64},
+{0x18,0x00000008},
+{0x1c,0xfffffe66},
+{0x20,0x00000425},
+{0x24,0x00000af5},
+{0x28,0x000003ac},
+{0x2c,0xfffffe65},
+{0x30,0x00000003},
+{0x34,0xfffffe67},
+{0x38,0x0000044e},
+{0x3c,0x00000af3},
+{0x40,0x00000384},
+{0x44,0xfffffe65},
+{0x48,0xfffffffd},
+{0x4c,0xfffffe69},
+{0x50,0x00000476},
+{0x54,0x00000aef},
+{0x58,0x0000035c},
+{0x5c,0xfffffe67},
+{0x60,0xfffffff7},
+{0x64,0xfffffe6c},
+{0x68,0x0000049f},
+{0x6c,0x00000aea},
+{0x70,0x00000335},
+{0x74,0xfffffe68},
+{0x78,0xfffffff1},
+{0x7c,0xfffffe6f},
+{0xf0,0x1b},
+{0x00,0x000004c9},
+{0x04,0x00000ae5},
+{0x08,0x0000030e},
+{0x0c,0xfffffe6a},
+{0x10,0xffffffeb},
+{0x14,0xfffffe73},
+{0x18,0x000004f2},
+{0x1c,0x00000ade},
+{0x20,0x000002e7},
+{0x24,0xfffffe6d},
+{0x28,0xffffffe4},
+{0x2c,0xfffffe78},
+{0x30,0x0000051b},
+{0x34,0x00000ad5},
+{0x38,0x000002c1},
+{0x3c,0xfffffe70},
+{0x40,0xffffffde},
+{0x44,0xfffffe7d},
+{0x48,0x00000544},
+{0x4c,0x00000acc},
+{0x50,0x0000029c},
+{0x54,0xfffffe74},
+{0x58,0xffffffd7},
+{0x5c,0xfffffe83},
+{0x60,0x0000056d},
+{0x64,0x00000ac2},
+{0x68,0x00000276},
+{0x6c,0xfffffe78},
+{0x70,0xffffffd0},
+{0x74,0xfffffe89},
+{0x78,0x00000597},
+{0x7c,0x00000ab6},
+{0xf0,0x1c},
+{0x00,0x00000251},
+{0x04,0xfffffe7c},
+{0x08,0xffffffc8},
+{0x0c,0xfffffe91},
+{0x10,0x000005c0},
+{0x14,0x00000aa9},
+{0x18,0x0000022d},
+{0x1c,0xfffffe81},
+{0x20,0xffffffc1},
+{0x24,0xfffffe99},
+{0x28,0x000005e9},
+{0x2c,0x00000a9b},
+{0x30,0x00000209},
+{0x34,0xfffffe86},
+{0x38,0xffffffb9},
+{0x3c,0xfffffea1},
+{0x40,0x00000611},
+{0x44,0x00000a8d},
+{0x48,0x000001e5},
+{0x4c,0xfffffe8b},
+{0x50,0xffffffb2},
+{0x54,0xfffffeab},
+{0x58,0x0000063a},
+{0x5c,0x00000a7d},
+{0x60,0x000001c3},
+{0x64,0xfffffe91},
+{0x68,0xffffffaa},
+{0x6c,0xfffffeb5},
+{0x70,0x00000663},
+{0x74,0x00000a6b},
+{0x78,0x000001a0},
+{0x7c,0xfffffe97},
+{0xf0,0x1d},
+{0x00,0xffffffa2},
+{0x04,0xfffffebf},
+{0x08,0x0000068b},
+{0x0c,0x00000a59},
+{0x10,0x0000017e},
+{0x14,0xfffffe9d},
+{0x18,0xffffff9a},
+{0x1c,0xfffffecb},
+{0x20,0x000006b3},
+{0x24,0x00000a46},
+{0x28,0x0000015d},
+{0x2c,0xfffffea4},
+{0x30,0xffffff91},
+{0x34,0xfffffed7},
+{0x38,0x000006da},
+{0x3c,0x00000a32},
+{0x40,0x0000013d},
+{0x44,0xfffffeab},
+{0x48,0xffffff89},
+{0x4c,0xfffffee4},
+{0x50,0x00000702},
+{0x54,0x00000a1d},
+{0x58,0x0000011d},
+{0x5c,0xfffffeb2},
+{0x60,0xffffff80},
+{0x64,0xfffffef2},
+{0x68,0x00000729},
+{0x6c,0x00000a06},
+{0x70,0x000000fd},
+{0x74,0xfffffeba},
+{0x78,0xffffff78},
+{0x7c,0xffffff00},
+{0xf0,0x1e},
+{0x00,0x0000074f},
+{0x04,0x000009ef},
+{0x08,0x000000df},
+{0x0c,0xfffffec1},
+{0x10,0xffffff6f},
+{0x14,0xffffff10},
+{0x18,0x00000776},
+{0x1c,0x000009d7},
+{0x20,0x000000c1},
+{0x24,0xfffffec9},
+{0x28,0xffffff66},
+{0x2c,0xffffff20},
+{0x30,0x0000079b},
+{0x34,0x000009be},
+{0x38,0x000000a3},
+{0x3c,0xfffffed1},
+{0x40,0xffffff5e},
+{0x44,0xffffff30},
+{0x48,0x000007c1},
+{0x4c,0x000009a4},
+{0x50,0x00000087},
+{0x54,0xfffffed9},
+{0x58,0xffffff55},
+{0x5c,0xffffff42},
+{0x60,0x000007e5},
+{0x64,0x00000989},
+{0x68,0x0000006b},
+{0x6c,0xfffffee2},
+{0x70,0xffffff4c},
+{0x74,0xffffff54},
+{0x78,0x0000080a},
+{0x7c,0x0000096d},
+{0xf0,0x1f},
+{0x00,0x0000004f},
+{0x04,0xfffffeea},
+{0x08,0xffffff43},
+{0x0c,0xffffff67},
+{0x10,0x0000082d},
+{0x14,0x00000951},
+{0x18,0x00000035},
+{0x1c,0xfffffef3},
+{0x20,0xffffff3a},
+{0x24,0xffffff7b},
+{0x28,0x00000850},
+{0x2c,0x00000933},
+{0x30,0x0000001b},
+{0x34,0xfffffefb},
+{0x38,0xffffff31},
+{0x3c,0xffffff90},
+{0x40,0x00000873},
+{0x44,0x00000915},
+{0x48,0x00000002},
+{0x4c,0xffffff04},
+{0x50,0xffffff28},
+{0x54,0xffffffa5},
+{0x58,0x00000895},
+{0x5c,0x000008f6},
+{0x60,0xffffffea},
+{0x64,0xffffff0d},
+{0x68,0xffffff1f},
+{0x6c,0xffffffbb},
+{0x70,0x000008b6},
+{0x74,0x000008d6},
+{0x78,0xffffffd2},
+{0x7c,0xffffff16},
+{0xf0,0x20},
+{0x00,0x83580000},
+{0x04,0x82086ff0},
+{0x08,0x83306004},
+{0x0c,0x80a06005},
+{0x10,0x02800024},
+{0x14,0x01000000},
+{0x18,0x80a06006},
+{0x1c,0x02800039},
+{0x20,0x01000000},
+{0x24,0x80a06015},
+{0x28,0x02800051},
+{0x2c,0x01000000},
+{0x30,0x80a0602a},
+{0x34,0x02800085},
+{0x38,0x01000000},
+{0x3c,0x073fc180},
+{0x40,0x8610e03c},
+{0x44,0x05169680},
+{0x48,0x84004002},
+{0x4c,0xc420c000},
+{0x50,0x073fc000},
+{0x54,0x8610e020},
+{0x58,0x84102001},
+{0x5c,0xc420c000},
+{0x60,0x0500000c},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x8480bfff},
+{0x70,0x12bffffe},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x073fc000},
+{0xf0,0x21},
+{0x00,0x8610e020},
+{0x04,0x84102000},
+{0x08,0xc420c000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x81c44000},
+{0x18,0x81cc8000},
+{0x1c,0x01000000},
+{0x20,0xa7500000},
+{0x24,0xa92ce002},
+{0x28,0xa734e001},
+{0x2c,0xa614c014},
+{0x30,0xa60ce007},
+{0x34,0x81900000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x81e00000},
+{0x44,0xe03ba000},
+{0x48,0xe43ba008},
+{0x4c,0xe83ba010},
+{0x50,0xec3ba018},
+{0x54,0xf03ba020},
+{0x58,0xf43ba028},
+{0x5c,0xf83ba030},
+{0x60,0xfc3ba038},
+{0x64,0x81e80000},
+{0x68,0x8194c000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x81c44000},
+{0x78,0x81cc8000},
+{0x7c,0x01000000},
+{0xf0,0x22},
+{0x00,0xa7500000},
+{0x04,0xa934e002},
+{0x08,0xa72ce001},
+{0x0c,0xa614c014},
+{0x10,0xa60ce007},
+{0x14,0x81900000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x81e80000},
+{0x24,0x81e80000},
+{0x28,0xe01ba000},
+{0x2c,0xe41ba008},
+{0x30,0xe81ba010},
+{0x34,0xec1ba018},
+{0x38,0xf01ba020},
+{0x3c,0xf41ba028},
+{0x40,0xf81ba030},
+{0x44,0xfc1ba038},
+{0x48,0x81e00000},
+{0x4c,0x81e00000},
+{0x50,0x8194c000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x81c44000},
+{0x60,0x81cc8000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x82102010},
+{0x70,0x273fc0c0},
+{0x74,0xa614e010},
+{0x78,0xc224c000},
+{0x7c,0x01000000},
+{0xf0,0x23},
+{0x00,0x033fc0c0},
+{0x04,0x82106004},
+{0x08,0xa6102000},
+{0x0c,0xe6204000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0xa6102020},
+{0x20,0x83480000},
+{0x24,0x82104013},
+{0x28,0x81884000},
+{0x2c,0x01000000},
+{0x30,0x40001178},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0xa7500000},
+{0x44,0xa934e002},
+{0x48,0xa72ce001},
+{0x4c,0xa614c014},
+{0x50,0xa60ce007},
+{0x54,0x81900000},
+{0x58,0x01000000},
+{0x5c,0x81e80000},
+{0x60,0xe01ba000},
+{0x64,0xe41ba008},
+{0x68,0xe81ba010},
+{0x6c,0xec1ba018},
+{0x70,0xf01ba020},
+{0x74,0xf41ba028},
+{0x78,0xf81ba030},
+{0x7c,0xfc1ba038},
+{0xf0,0x24},
+{0x00,0x81e00000},
+{0x04,0x8194c000},
+{0x08,0x01000000},
+{0x0c,0xa6102020},
+{0x10,0x83480000},
+{0x14,0x82284013},
+{0x18,0x81884000},
+{0x1c,0x01000000},
+{0x20,0x033fc0c0},
+{0x24,0x82106004},
+{0x28,0xa6103fff},
+{0x2c,0xe6204000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c44000},
+{0x40,0x81cc8000},
+{0x44,0x01000000},
+{0x48,0x81c48000},
+{0x4c,0x81cca004},
+{0x50,0x01000000},
+{0x54,0x9de3bf98},
+{0x58,0x4000001b},
+{0x5c,0x01000000},
+{0x60,0x40000012},
+{0x64,0x01000000},
+{0x68,0x400000df},
+{0x6c,0x90102001},
+{0x70,0x40000045},
+{0x74,0x01000000},
+{0x78,0x400000aa},
+{0x7c,0x01000000},
+{0xf0,0x25},
+{0x00,0x30bffffe},
+{0x04,0x80a22000},
+{0x08,0x02800006},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x90823fff},
+{0x18,0x12bffffe},
+{0x1c,0x01000000},
+{0x20,0x81c3e008},
+{0x24,0x01000000},
+{0x28,0x82102001},
+{0x2c,0x81904000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x03000008},
+{0x48,0x82106342},
+{0x4c,0xa3804000},
+{0x50,0x03000004},
+{0x54,0x82106000},
+{0x58,0x81984000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x81c3e008},
+{0x6c,0x01000000},
+{0x70,0x98102000},
+{0x74,0x9610201e},
+{0x78,0x80a22000},
+{0x7c,0x12800003},
+{0xf0,0x26},
+{0x00,0x8210000c},
+{0x04,0x8222c00c},
+{0x08,0x83286002},
+{0x0c,0xda006480},
+{0x10,0x80a37ff0},
+{0x14,0x02800006},
+{0x18,0x98032002},
+{0x1c,0xc2006484},
+{0x20,0x80a3201f},
+{0x24,0x04bffff5},
+{0x28,0xc2234000},
+{0x2c,0x81c3e008},
+{0x30,0x01000000},
+{0x34,0x03004040},
+{0x38,0x94106101},
+{0x3c,0x98102000},
+{0x40,0x832b2002},
+{0x44,0xd60063a4},
+{0x48,0x9a102000},
+{0x4c,0x832b6002},
+{0x50,0x9a036001},
+{0x54,0x80a36004},
+{0x58,0x04bffffd},
+{0x5c,0xd422c001},
+{0x60,0x98032001},
+{0x64,0x80a32003},
+{0x68,0x04bffff7},
+{0x6c,0x832b2002},
+{0x70,0x033fc200},
+{0x74,0xda002330},
+{0x78,0x82106074},
+{0x7c,0x81c3e008},
+{0xf0,0x27},
+{0x00,0xda204000},
+{0x04,0x9de3bf98},
+{0x08,0x40000e85},
+{0x0c,0x90102000},
+{0x10,0x213fc140},
+{0x14,0xda00247c},
+{0x18,0x98142040},
+{0x1c,0xea030000},
+{0x20,0xc20022f8},
+{0x24,0x9b336001},
+{0x28,0x825b4001},
+{0x2c,0xaa0d7c00},
+{0x30,0xaa154001},
+{0x34,0xea230000},
+{0x38,0x82142004},
+{0x3c,0xea004000},
+{0x40,0xaa0d7ff0},
+{0x44,0xaa15400d},
+{0x48,0xea204000},
+{0x4c,0x2d3fc200},
+{0x50,0x8215a080},
+{0x54,0xea004000},
+{0x58,0xaa0d7ff0},
+{0x5c,0xaa15400d},
+{0x60,0xea204000},
+{0x64,0xc200233c},
+{0x68,0x9a15a070},
+{0x6c,0xc2234000},
+{0x70,0x033fc000},
+{0x74,0xda002338},
+{0x78,0x82106030},
+{0x7c,0xda204000},
+{0xf0,0x28},
+{0x00,0x19000016},
+{0x04,0x0300003f},
+{0x08,0x9e142058},
+{0x0c,0xa21323f8},
+{0x10,0x821063ff},
+{0x14,0xc223c000},
+{0x18,0x981321d0},
+{0x1c,0x96142088},
+{0x20,0xd822c000},
+{0x24,0x9414208c},
+{0x28,0xe2228000},
+{0x2c,0xc20023f8},
+{0x30,0x9215a00c},
+{0x34,0xc2224000},
+{0x38,0xc20023fc},
+{0x3c,0x9015a008},
+{0x40,0xc2220000},
+{0x44,0xa414205c},
+{0x48,0xc0248000},
+{0x4c,0xa6142080},
+{0x50,0xd824c000},
+{0x54,0xa8142084},
+{0x58,0x7fffffb7},
+{0x5c,0xe2250000},
+{0x60,0x4000020a},
+{0x64,0xa2142030},
+{0x68,0x9a15a07c},
+{0x6c,0xea034000},
+{0x70,0x033ff000},
+{0x74,0xd8002374},
+{0x78,0xaa2d4001},
+{0x7c,0xea234000},
+{0xf0,0x29},
+{0x00,0x033fc1c0},
+{0x04,0xda002340},
+{0x08,0x82106064},
+{0x0c,0xda204000},
+{0x10,0x0300007f},
+{0x14,0x92142010},
+{0x18,0x821063ff},
+{0x1c,0x1507ffc0},
+{0x20,0xc2224000},
+{0x24,0x96032001},
+{0x28,0xd4244000},
+{0x2c,0x972ae010},
+{0x30,0xa0142014},
+{0x34,0x9602c00c},
+{0x38,0xa52b2010},
+{0x3c,0x9f2b2004},
+{0x40,0xd4240000},
+{0x44,0x80a32000},
+{0x48,0xa615a030},
+{0x4c,0x90102001},
+{0x50,0x8204800f},
+{0x54,0x9602e002},
+{0x58,0x9a15a084},
+{0x5c,0x9815a088},
+{0x60,0x02800005},
+{0x64,0x9415a08c},
+{0x68,0xc2234000},
+{0x6c,0xe4230000},
+{0x70,0xd6228000},
+{0x74,0xc2002344},
+{0x78,0xc224c000},
+{0x7c,0x033fc0c0},
+{0xf0,0x2a},
+{0x00,0x82106004},
+{0x04,0x9a103fff},
+{0x08,0x7fffff7a},
+{0x0c,0xda204000},
+{0x10,0x03200040},
+{0x14,0xc2258000},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x01000000},
+{0x24,0x01000000},
+{0x28,0x01000000},
+{0x2c,0xa7800000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x03169696},
+{0x48,0xd8002180},
+{0x4c,0x8210625a},
+{0x50,0x80a30001},
+{0x54,0x96102000},
+{0x58,0x12800007},
+{0x5c,0x9a102000},
+{0x60,0x033fc180},
+{0x64,0x82106030},
+{0x68,0xd8204000},
+{0x6c,0x1080001c},
+{0x70,0x90102001},
+{0x74,0xc2034000},
+{0x78,0x9a036004},
+{0x7c,0x80a364ff},
+{0xf0,0x2b},
+{0x00,0x08bffffd},
+{0x04,0x9602c001},
+{0x08,0x03000016},
+{0x0c,0x82106138},
+{0x10,0x82087f80},
+{0x14,0x9a102d00},
+{0x18,0x80a34001},
+{0x1c,0x3a800009},
+{0x20,0x03169696},
+{0x24,0x98100001},
+{0x28,0xc2034000},
+{0x2c,0x9a036004},
+{0x30,0x80a3400c},
+{0x34,0x0abffffd},
+{0x38,0x9602c001},
+{0x3c,0x03169696},
+{0x40,0x8210625a},
+{0x44,0x821ac001},
+{0x48,0x80a00001},
+{0x4c,0x033fc180},
+{0x50,0x82106030},
+{0x54,0xd6204000},
+{0x58,0x90603fff},
+{0x5c,0x81c3e008},
+{0x60,0x01000000},
+{0x64,0x033fc180},
+{0x68,0xc0204000},
+{0x6c,0x82102500},
+{0x70,0xc0204000},
+{0x74,0x82006004},
+{0x78,0x80a06853},
+{0x7c,0x28bffffe},
+{0xf0,0x2c},
+{0x00,0xc0204000},
+{0x04,0x033fc200},
+{0x08,0x82106030},
+{0x0c,0xd8004000},
+{0x10,0x82102010},
+{0x14,0xda00254c},
+{0x18,0xc2202574},
+{0x1c,0x9a136020},
+{0x20,0x8210200f},
+{0x24,0xda20254c},
+{0x28,0xc2202548},
+{0x2c,0x81c3e008},
+{0x30,0xd820257c},
+{0x34,0x9de3bf98},
+{0x38,0x82102000},
+{0x3c,0x80a04019},
+{0x40,0x16800015},
+{0x44,0x9e100019},
+{0x48,0xb6006001},
+{0x4c,0x80a6c00f},
+{0x50,0x1680000f},
+{0x54,0xba10001b},
+{0x58,0xb3286002},
+{0x5c,0xb52f6002},
+{0x60,0xf8060019},
+{0x64,0xc206001a},
+{0x68,0x80a70001},
+{0x6c,0x04800004},
+{0x70,0xba076001},
+{0x74,0xc2260019},
+{0x78,0xf826001a},
+{0x7c,0x80a7400f},
+{0xf0,0x2d},
+{0x00,0x06bffff8},
+{0x04,0xb52f6002},
+{0x08,0x80a6c00f},
+{0x0c,0x06bfffef},
+{0x10,0x8210001b},
+{0x14,0x81c7e008},
+{0x18,0x81e80000},
+{0x1c,0x033fc140},
+{0x20,0x82106048},
+{0x24,0xda004000},
+{0x28,0x03000040},
+{0x2c,0x808b4001},
+{0x30,0x03000016},
+{0x34,0x12800003},
+{0x38,0x901061d0},
+{0x3c,0x901063f8},
+{0x40,0x81c3e008},
+{0x44,0x01000000},
+{0x48,0x9de3bf38},
+{0x4c,0xa12e2002},
+{0x50,0xda1423da},
+{0x54,0xd61423d8},
+{0x58,0xc200247c},
+{0x5c,0xb022c00d},
+{0x60,0x825b4001},
+{0x64,0x92862001},
+{0x68,0x0280000c},
+{0x6c,0x9a004019},
+{0x70,0xb0100009},
+{0x74,0x9807bf98},
+{0x78,0x8203400d},
+{0x7c,0xc2168001},
+{0xf0,0x2e},
+{0x00,0xc2230000},
+{0x04,0xc200247c},
+{0x08,0x9a034001},
+{0x0c,0xb0863fff},
+{0x10,0x12bffffa},
+{0x14,0x98032004},
+{0x18,0x7fffffc7},
+{0x1c,0x9007bf98},
+{0x20,0xda1423ea},
+{0x24,0xd61423e8},
+{0x28,0x80a3400b},
+{0x2c,0x92102000},
+{0x30,0x1880000b},
+{0x34,0xb010000d},
+{0x38,0x832b6002},
+{0x3c,0x8200401e},
+{0x40,0x98007f98},
+{0x44,0xc2030000},
+{0x48,0xb0062001},
+{0x4c,0x92024001},
+{0x50,0x80a6000b},
+{0x54,0x08bffffc},
+{0x58,0x98032004},
+{0x5c,0xb022c00d},
+{0x60,0xb0062001},
+{0x64,0x81800000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0xb0724018},
+{0x78,0x81c7e008},
+{0x7c,0x81e80000},
+{0xf0,0x2f},
+{0x00,0x832a2002},
+{0x04,0x82004008},
+{0x08,0x9b326002},
+{0x0c,0x8200400d},
+{0x10,0x83286002},
+{0x14,0x920a6003},
+{0x18,0x932a6003},
+{0x1c,0xd00065b0},
+{0x20,0x91320009},
+{0x24,0x81c3e008},
+{0x28,0x900a20ff},
+{0x2c,0x972a2002},
+{0x30,0x99326002},
+{0x34,0x9002c008},
+{0x38,0x9002000c},
+{0x3c,0x920a6003},
+{0x40,0x932a6003},
+{0x44,0x912a2002},
+{0x48,0x821020ff},
+{0x4c,0xda0225b0},
+{0x50,0x83284009},
+{0x54,0x822b4001},
+{0x58,0x952a8009},
+{0x5c,0x8210400a},
+{0x60,0xc22225b0},
+{0x64,0xda02e3a4},
+{0x68,0x992b2002},
+{0x6c,0x81c3e008},
+{0x70,0xc223400c},
+{0x74,0x9de3bf98},
+{0x78,0xda002310},
+{0x7c,0x80a36000},
+{0xf0,0x30},
+{0x00,0x02800056},
+{0x04,0xb0102000},
+{0x08,0xc200254c},
+{0x0c,0x80886100},
+{0x10,0x22800003},
+{0x14,0xc2002594},
+{0x18,0x30800050},
+{0x1c,0x82006001},
+{0x20,0x80a0400d},
+{0x24,0xc2202594},
+{0x28,0x0a80004c},
+{0x2c,0xb0102000},
+{0x30,0xa2102000},
+{0x34,0xc20023d4},
+{0x38,0x80a44001},
+{0x3c,0xc0202594},
+{0x40,0xa0102000},
+{0x44,0x1a800027},
+{0x48,0xa52c2002},
+{0x4c,0xc204a364},
+{0x50,0x80a06000},
+{0x54,0x0280001f},
+{0x58,0xb0102000},
+{0x5c,0xc20022fc},
+{0x60,0x80a60001},
+{0x64,0x1a80001b},
+{0x68,0x15000018},
+{0x6c,0xc200254c},
+{0x70,0x80886040},
+{0x74,0xc20e2380},
+{0x78,0x9412a048},
+{0x7c,0x90100010},
+{0xf0,0x31},
+{0x00,0x12800006},
+{0x04,0x920860ff},
+{0x08,0x15000017},
+{0x0c,0x920860ff},
+{0x10,0x9412a220},
+{0x14,0x90100010},
+{0x18,0x7fffff8c},
+{0x1c,0xb0062001},
+{0x20,0xc204a364},
+{0x24,0xda002348},
+{0x28,0x98020001},
+{0x2c,0x82034001},
+{0x30,0x80a20001},
+{0x34,0x38bfffea},
+{0x38,0xa2046001},
+{0x3c,0x80a3000d},
+{0x40,0x3abfffe8},
+{0x44,0xc20022fc},
+{0x48,0x10bfffe5},
+{0x4c,0xa2046001},
+{0x50,0xa0042001},
+{0x54,0xc20023d4},
+{0x58,0x10bfffdb},
+{0x5c,0x80a40001},
+{0x60,0xd800258c},
+{0x64,0x80a0000c},
+{0x68,0x9a603fff},
+{0x6c,0x80a00011},
+{0x70,0x82603fff},
+{0x74,0x808b4001},
+{0x78,0x0280000a},
+{0x7c,0x80a46000},
+{0xf0,0x32},
+{0x00,0xda00254c},
+{0x04,0x83336006},
+{0x08,0x82086001},
+{0x0c,0x82186001},
+{0x10,0x83286006},
+{0x14,0x9a0b7fbf},
+{0x18,0x9a134001},
+{0x1c,0xda20254c},
+{0x20,0x12800004},
+{0x24,0x82032001},
+{0x28,0x10800003},
+{0x2c,0xc020258c},
+{0x30,0xc220258c},
+{0x34,0xc200258c},
+{0x38,0x80a06002},
+{0x3c,0x08800007},
+{0x40,0xb0102000},
+{0x44,0xc200254c},
+{0x48,0x1b000040},
+{0x4c,0x8210400d},
+{0x50,0xc220254c},
+{0x54,0xb0102001},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x9de3bf98},
+{0x64,0xd400254c},
+{0x68,0x820aa820},
+{0x6c,0x80a06020},
+{0x70,0x12800044},
+{0x74,0xb0102000},
+{0x78,0xfa002500},
+{0x7c,0xc20021f4},
+{0xf0,0x33},
+{0x00,0x80a74001},
+{0x04,0x1880003f},
+{0x08,0x01000000},
+{0x0c,0xc2002200},
+{0x10,0x80a06000},
+{0x14,0x1280003b},
+{0x18,0xb6102000},
+{0x1c,0xb0102001},
+{0x20,0xd6002300},
+{0x24,0x80a6000b},
+{0x28,0x9a102000},
+{0x2c,0x1880001e},
+{0x30,0x98102000},
+{0x34,0x03000018},
+{0x38,0x92106270},
+{0x3c,0xde002308},
+{0x40,0xb4102007},
+{0x44,0xb8102001},
+{0x48,0x80a7000f},
+{0x4c,0x38800013},
+{0x50,0xb0062001},
+{0x54,0x832ea003},
+{0x58,0x82004009},
+{0x5c,0x82006004},
+{0x60,0xf2002210},
+{0x64,0xfa004000},
+{0x68,0x80a74019},
+{0x6c,0x24800002},
+{0x70,0xb606e001},
+{0x74,0x80a76000},
+{0x78,0x24800003},
+{0x7c,0x9823001d},
+{0xf0,0x34},
+{0x00,0x9a03401d},
+{0x04,0xb8072001},
+{0x08,0x80a7000f},
+{0x0c,0x08bffff6},
+{0x10,0x82006004},
+{0x14,0xb0062001},
+{0x18,0x80a6000b},
+{0x1c,0x08bfffea},
+{0x20,0xb406a007},
+{0x24,0xc21023ce},
+{0x28,0x80a6c001},
+{0x2c,0x24800011},
+{0x30,0xc2002598},
+{0x34,0xc20021ac},
+{0x38,0x82034001},
+{0x3c,0x80a30001},
+{0x40,0x0480000c},
+{0x44,0xc2002598},
+{0x48,0x82006001},
+{0x4c,0xf61023cc},
+{0x50,0x80a0401b},
+{0x54,0x0680000a},
+{0x58,0xc2202598},
+{0x5c,0x03000200},
+{0x60,0x82128001},
+{0x64,0xc220254c},
+{0x68,0x10800006},
+{0x6c,0xb0102001},
+{0x70,0x80a06000},
+{0x74,0x34800002},
+{0x78,0xc0202598},
+{0x7c,0xb0102000},
+{0xf0,0x35},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0x9a102005},
+{0x0c,0x8210200b},
+{0x10,0x9a234008},
+{0x14,0x82204008},
+{0x18,0x9b2b6002},
+{0x1c,0x80a22005},
+{0x20,0x14800007},
+{0x24,0x99286002},
+{0x28,0x033fc200},
+{0x2c,0x8210600c},
+{0x30,0xc2004000},
+{0x34,0x10800006},
+{0x38,0x8330400d},
+{0x3c,0x033fc200},
+{0x40,0x82106008},
+{0x44,0xc2004000},
+{0x48,0x8330400c},
+{0x4c,0x81c3e008},
+{0x50,0x9008600f},
+{0x54,0x9de3bf98},
+{0x58,0xc200247c},
+{0x5c,0x83306001},
+{0x60,0x80a60001},
+{0x64,0x1a800006},
+{0x68,0x90100018},
+{0x6c,0x7fffffe7},
+{0x70,0x01000000},
+{0x74,0x10800006},
+{0x78,0xb0020008},
+{0x7c,0x7fffffe3},
+{0xf0,0x36},
+{0x00,0x90260001},
+{0x04,0x90020008},
+{0x08,0xb0022001},
+{0x0c,0x81c7e008},
+{0x10,0x81e80000},
+{0x14,0x9de3bf98},
+{0x18,0xa8102000},
+{0x1c,0xc20023d4},
+{0x20,0x80a50001},
+{0x24,0x1a800057},
+{0x28,0xe2002348},
+{0x2c,0xa4102000},
+{0x30,0xc200247c},
+{0x34,0x80a48001},
+{0x38,0x3a80004e},
+{0x3c,0xa8052001},
+{0x40,0x7fffffe5},
+{0x44,0x90100012},
+{0x48,0x92100008},
+{0x4c,0x7fffff0d},
+{0x50,0x90100014},
+{0x54,0x80a62000},
+{0x58,0x12800004},
+{0x5c,0xa0100008},
+{0x60,0x10800016},
+{0x64,0xa0102000},
+{0x68,0x80a62008},
+{0x6c,0x18800011},
+{0x70,0x80a62007},
+{0x74,0x7ffffeca},
+{0x78,0x01000000},
+{0x7c,0x94100008},
+{0xf0,0x37},
+{0x00,0x90100014},
+{0x04,0x7ffffed1},
+{0x08,0x921ca001},
+{0x0c,0x80a20011},
+{0x10,0x04800007},
+{0x14,0xa6100008},
+{0x18,0x9a102008},
+{0x1c,0x9a234018},
+{0x20,0x82102001},
+{0x24,0x8328400d},
+{0x28,0xa02c0001},
+{0x2c,0x80a62007},
+{0x30,0x18800008},
+{0x34,0x80a62008},
+{0x38,0x9a102007},
+{0x3c,0x9a234018},
+{0x40,0x82102001},
+{0x44,0x8328400d},
+{0x48,0x10800022},
+{0x4c,0xa0140001},
+{0x50,0x1280000a},
+{0x54,0x821e2009},
+{0x58,0x80a420fe},
+{0x5c,0x24800002},
+{0x60,0xa0042001},
+{0x64,0x03000018},
+{0x68,0x9b2ca002},
+{0x6c,0x82106270},
+{0x70,0x10800018},
+{0x74,0xe6234001},
+{0x78,0x80a00001},
+{0x7c,0x9a603fff},
+{0xf0,0x38},
+{0x00,0x80a420fe},
+{0x04,0x04800003},
+{0x08,0x82102001},
+{0x0c,0x82102000},
+{0x10,0x808b4001},
+{0x14,0x0280000f},
+{0x18,0x03000018},
+{0x1c,0x9b2ca002},
+{0x20,0x82106270},
+{0x24,0xc2034001},
+{0x28,0x80a04011},
+{0x2c,0x18800003},
+{0x30,0x9a204011},
+{0x34,0x9a244001},
+{0x38,0x80a4c011},
+{0x3c,0x14800003},
+{0x40,0x8224c011},
+{0x44,0x82244013},
+{0x48,0x80a34001},
+{0x4c,0xa0642000},
+{0x50,0x7fffffa1},
+{0x54,0x90100012},
+{0x58,0x92100008},
+{0x5c,0x90100014},
+{0x60,0x7ffffed3},
+{0x64,0x94100010},
+{0x68,0x10bfffb2},
+{0x6c,0xa404a001},
+{0x70,0xc20023d4},
+{0x74,0x80a50001},
+{0x78,0x0abfffae},
+{0x7c,0xa4102000},
+{0xf0,0x39},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0x033fc200},
+{0x0c,0x961060a0},
+{0x10,0x98102000},
+{0x14,0x832b2002},
+{0x18,0x9a03000c},
+{0x1c,0xda136400},
+{0x20,0x98032001},
+{0x24,0x80a32016},
+{0x28,0x04bffffb},
+{0x2c,0xda20400b},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0x82102020},
+{0x3c,0x82204009},
+{0x40,0x80a06040},
+{0x44,0x04800003},
+{0x48,0x9a100008},
+{0x4c,0x90023fff},
+{0x50,0x80a06080},
+{0x54,0x34800002},
+{0x58,0x90037ffe},
+{0x5c,0x80a06000},
+{0x60,0x24800002},
+{0x64,0x90036001},
+{0x68,0x80a07fc0},
+{0x6c,0x24800002},
+{0x70,0x90036002},
+{0x74,0x81c3e008},
+{0x78,0x01000000},
+{0x7c,0x900221ff},
+{0xf0,0x3a},
+{0x00,0x833a201f},
+{0x04,0x8330601a},
+{0x08,0x82020001},
+{0x0c,0x82087fc0},
+{0x10,0x90220001},
+{0x14,0x81c3e008},
+{0x18,0x90022001},
+{0x1c,0x9de3bf80},
+{0x20,0x90102020},
+{0x24,0x7ffffff6},
+{0x28,0x90220018},
+{0x2c,0x82102041},
+{0x30,0x82204008},
+{0x34,0x9b2ea003},
+{0x38,0x98004001},
+{0x3c,0x9a23401a},
+{0x40,0x98030001},
+{0x44,0x9a03400d},
+{0x48,0x9a03401b},
+{0x4c,0x03000018},
+{0x50,0x82106270},
+{0x54,0x9b2b6002},
+{0x58,0x9a034001},
+{0x5c,0xc2002300},
+{0x60,0x96020008},
+{0x64,0x9602c008},
+{0x68,0xaa006001},
+{0x6c,0xc2002308},
+{0x70,0xa52ae003},
+{0x74,0xa8006001},
+{0x78,0xa72b2003},
+{0x7c,0x96037ff8},
+{0xf0,0x3b},
+{0x00,0xa0103ffe},
+{0x04,0xb0102000},
+{0x08,0x94103ffe},
+{0x0c,0xa206c010},
+{0x10,0x9804ecfc},
+{0x14,0x9e04ace8},
+{0x18,0x9202ff90},
+{0x1c,0x8206800a},
+{0x20,0x80a54001},
+{0x24,0x9a603fff},
+{0x28,0x80a50011},
+{0x2c,0x82603fff},
+{0x30,0x808b4001},
+{0x34,0x02800003},
+{0x38,0x9a102000},
+{0x3c,0xda024000},
+{0x40,0x80a22020},
+{0x44,0x34800003},
+{0x48,0xc2030000},
+{0x4c,0xc203c000},
+{0x50,0x825b4001},
+{0x54,0x9402a001},
+{0x58,0xb0060001},
+{0x5c,0x92026038},
+{0x60,0x9e03e004},
+{0x64,0x80a2a003},
+{0x68,0x04bfffed},
+{0x6c,0x98033ffc},
+{0x70,0x832c2002},
+{0x74,0x8200401e},
+{0x78,0xa0042001},
+{0x7c,0xf0207fe8},
+{0xf0,0x3c},
+{0x00,0x80a42003},
+{0x04,0x04bfffe0},
+{0x08,0x9602e004},
+{0x0c,0xd207bfe0},
+{0x10,0xd407bfe4},
+{0x14,0xd607bfe8},
+{0x18,0xd807bfec},
+{0x1c,0xda07bff0},
+{0x20,0xc207bff4},
+{0x24,0x933a6008},
+{0x28,0x953aa008},
+{0x2c,0x973ae008},
+{0x30,0x993b2008},
+{0x34,0x9b3b6008},
+{0x38,0x83386008},
+{0x3c,0x90102020},
+{0x40,0xd227bfe0},
+{0x44,0xd427bfe4},
+{0x48,0xd627bfe8},
+{0x4c,0xd827bfec},
+{0x50,0xda27bff0},
+{0x54,0xc227bff4},
+{0x58,0x7fffffa9},
+{0x5c,0x90220019},
+{0x60,0x80a22020},
+{0x64,0x14800011},
+{0x68,0xb0102000},
+{0x6c,0x82020008},
+{0x70,0x82004008},
+{0x74,0x83286003},
+{0x78,0x90006ce8},
+{0x7c,0x9807bfe0},
+{0xf0,0x3d},
+{0x00,0x94102005},
+{0x04,0xc2030000},
+{0x08,0xda020000},
+{0x0c,0x8258400d},
+{0x10,0xb0060001},
+{0x14,0x98032004},
+{0x18,0x9482bfff},
+{0x1c,0x1cbffffa},
+{0x20,0x90022004},
+{0x24,0x30800011},
+{0x28,0x82102041},
+{0x2c,0x90204008},
+{0x30,0x82020008},
+{0x34,0x82004008},
+{0x38,0x83286003},
+{0x3c,0x90006cfc},
+{0x40,0x9807bfe0},
+{0x44,0x94102005},
+{0x48,0xc2030000},
+{0x4c,0xda020000},
+{0x50,0x8258400d},
+{0x54,0xb0060001},
+{0x58,0x98032004},
+{0x5c,0x9482bfff},
+{0x60,0x1cbffffa},
+{0x64,0x90023ffc},
+{0x68,0x81c7e008},
+{0x6c,0x81e80000},
+{0x70,0x9de3bf98},
+{0x74,0x9010001a},
+{0x78,0x7fffff70},
+{0x7c,0x92100018},
+{0xf0,0x3e},
+{0x00,0xb4100008},
+{0x04,0x9010001b},
+{0x08,0x7fffff6c},
+{0x0c,0x92100019},
+{0x10,0x7fffff83},
+{0x14,0x97e80008},
+{0x18,0x01000000},
+{0x1c,0x9de3bf90},
+{0x20,0xa8102000},
+{0x24,0xf427a04c},
+{0x28,0xaa102000},
+{0x2c,0xac102000},
+{0x30,0xae102010},
+{0x34,0xe827bff4},
+{0x38,0xb4250017},
+{0x3c,0x9210001a},
+{0x40,0x94100018},
+{0x44,0x96100019},
+{0x48,0x7fffffea},
+{0x4c,0x90100015},
+{0x50,0xa6100008},
+{0x54,0xb6254017},
+{0x58,0x92100014},
+{0x5c,0x94100018},
+{0x60,0x96100019},
+{0x64,0x7fffffe3},
+{0x68,0x9010001b},
+{0x6c,0xa4100008},
+{0x70,0xb8050017},
+{0x74,0x9210001c},
+{0x78,0x94100018},
+{0x7c,0x96100019},
+{0xf0,0x3f},
+{0x00,0x7fffffdc},
+{0x04,0x90100015},
+{0x08,0xa2100008},
+{0x0c,0xba054017},
+{0x10,0x92100014},
+{0x14,0x94100018},
+{0x18,0x96100019},
+{0x1c,0x7fffffd5},
+{0x20,0x9010001d},
+{0x24,0xa0100008},
+{0x28,0x90100015},
+{0x2c,0x92100014},
+{0x30,0x94100018},
+{0x34,0x7fffffcf},
+{0x38,0x96100019},
+{0x3c,0xa624c008},
+{0x40,0xa0240008},
+{0x44,0xa4248008},
+{0x48,0xa2244008},
+{0x4c,0x80a4e000},
+{0x50,0x04800004},
+{0x54,0x82102000},
+{0x58,0x82100013},
+{0x5c,0xac102001},
+{0x60,0x80a48001},
+{0x64,0x04800005},
+{0x68,0x80a44001},
+{0x6c,0x82100012},
+{0x70,0xac102003},
+{0x74,0x80a44001},
+{0x78,0x04800005},
+{0x7c,0x80a40001},
+{0xf0,0x40},
+{0x00,0x82100011},
+{0x04,0xac102005},
+{0x08,0x80a40001},
+{0x0c,0x04800005},
+{0x10,0x80a06000},
+{0x14,0x82100010},
+{0x18,0xac102007},
+{0x1c,0x80a06000},
+{0x20,0x14800017},
+{0x24,0x80a5a001},
+{0x28,0x80a5e020},
+{0x2c,0x12800004},
+{0x30,0x80a5e010},
+{0x34,0x10800020},
+{0x38,0xae102010},
+{0x3c,0x12800004},
+{0x40,0x80a5e008},
+{0x44,0x1080001c},
+{0x48,0xae102008},
+{0x4c,0x12800004},
+{0x50,0x80a5e004},
+{0x54,0x10800018},
+{0x58,0xae102004},
+{0x5c,0x12800004},
+{0x60,0x80a5e002},
+{0x64,0x10800014},
+{0x68,0xae102002},
+{0x6c,0x12800018},
+{0x70,0x832e2006},
+{0x74,0x10800010},
+{0x78,0xae102001},
+{0x7c,0x12800004},
+{0xf0,0x41},
+{0x00,0x80a5a003},
+{0x04,0x1080000c},
+{0x08,0xa810001a},
+{0x0c,0x12800004},
+{0x10,0x80a5a005},
+{0x14,0x10800008},
+{0x18,0xaa10001b},
+{0x1c,0x12800004},
+{0x20,0x80a5a007},
+{0x24,0x10800004},
+{0x28,0xa810001c},
+{0x2c,0x22800002},
+{0x30,0xaa10001d},
+{0x34,0xc207bff4},
+{0x38,0x82006001},
+{0x3c,0x80a0607f},
+{0x40,0x04bfff9e},
+{0x44,0xc227bff4},
+{0x48,0x832e2006},
+{0x4c,0xaa054001},
+{0x50,0x82380015},
+{0x54,0x8338601f},
+{0x58,0xaa0d4001},
+{0x5c,0x9b2e6006},
+{0x60,0xc2002308},
+{0x64,0xa885000d},
+{0x68,0x1c800004},
+{0x6c,0x83286006},
+{0x70,0x10800005},
+{0x74,0xa8102000},
+{0x78,0x80a50001},
+{0x7c,0x38800002},
+{0xf0,0x42},
+{0x00,0xa8100001},
+{0x04,0x9a0d2fff},
+{0x08,0x832d6010},
+{0x0c,0x8210400d},
+{0x10,0xd807a04c},
+{0x14,0x9b2b2002},
+{0x18,0xc2236768},
+{0x1c,0x81c7e008},
+{0x20,0x81e80000},
+{0x24,0x9de3bf98},
+{0x28,0xf2002200},
+{0x2c,0x80a66000},
+{0x30,0x12800007},
+{0x34,0x9e102001},
+{0x38,0xc200254c},
+{0x3c,0x82087ff7},
+{0x40,0xc220254c},
+{0x44,0x10800044},
+{0x48,0xc0202588},
+{0x4c,0x80a3c019},
+{0x50,0x1880001d},
+{0x54,0xc0202504},
+{0x58,0x03000018},
+{0x5c,0x98106270},
+{0x60,0xda002308},
+{0x64,0xb0102007},
+{0x68,0xb6102001},
+{0x6c,0x80a6c00d},
+{0x70,0x18800011},
+{0x74,0x832e2003},
+{0x78,0x8200400c},
+{0x7c,0xba006004},
+{0xf0,0x43},
+{0x00,0xf4002238},
+{0x04,0xc2074000},
+{0x08,0xb606e001},
+{0x0c,0xba076004},
+{0x10,0x80a0401a},
+{0x14,0x04800005},
+{0x18,0xb820401a},
+{0x1c,0xc2002504},
+{0x20,0x8200401c},
+{0x24,0xc2202504},
+{0x28,0x80a6c00d},
+{0x2c,0x28bffff7},
+{0x30,0xc2074000},
+{0x34,0x9e03e001},
+{0x38,0x80a3c019},
+{0x3c,0x08bfffeb},
+{0x40,0xb0062007},
+{0x44,0xf800254c},
+{0x48,0x808f2010},
+{0x4c,0x12800008},
+{0x50,0xfa002504},
+{0x54,0xc200223c},
+{0x58,0x80a74001},
+{0x5c,0x34800009},
+{0x60,0xc2002588},
+{0x64,0x10800009},
+{0x68,0xc0202588},
+{0x6c,0xc200223c},
+{0x70,0x80a74001},
+{0x74,0x34800005},
+{0x78,0xc0202588},
+{0x7c,0xc2002588},
+{0xf0,0x44},
+{0x00,0x82006001},
+{0x04,0xc2202588},
+{0x08,0xfa002588},
+{0x0c,0xc2002290},
+{0x10,0x80a74001},
+{0x14,0x2880000b},
+{0x18,0xfa00254c},
+{0x1c,0x83372004},
+{0x20,0x82086001},
+{0x24,0x82186001},
+{0x28,0x83286003},
+{0x2c,0xba0f3ff7},
+{0x30,0xba174001},
+{0x34,0xfa20254c},
+{0x38,0xc0202588},
+{0x3c,0xfa00254c},
+{0x40,0xbb376003},
+{0x44,0x033fc180},
+{0x48,0xba0f6001},
+{0x4c,0x8210602c},
+{0x50,0xfa204000},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf98},
+{0x60,0xfa5023c6},
+{0x64,0x80a76000},
+{0x68,0x0280003d},
+{0x6c,0x9e102001},
+{0x70,0xc20022fc},
+{0x74,0x80a3c001},
+{0x78,0x18800039},
+{0x7c,0x17000018},
+{0xf0,0x45},
+{0x00,0x8212e270},
+{0x04,0x9810001d},
+{0x08,0x9a006004},
+{0x0c,0xb6102001},
+{0x10,0xf20022f8},
+{0x14,0x80a6c019},
+{0x18,0xb4102000},
+{0x1c,0x1880002b},
+{0x20,0x82102000},
+{0x24,0xf05023c4},
+{0x28,0xba036038},
+{0x2c,0xf8074000},
+{0x30,0xb606e001},
+{0x34,0x80a70018},
+{0x38,0x06800004},
+{0x3c,0xba076038},
+{0x40,0xb406801c},
+{0x44,0x82006001},
+{0x48,0x80a6c019},
+{0x4c,0x28bffff9},
+{0x50,0xf8074000},
+{0x54,0x80a06000},
+{0x58,0x2280001d},
+{0x5c,0x9e03e001},
+{0x60,0x953ea01f},
+{0x64,0x8182a000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x827e8001},
+{0x78,0x8258400c},
+{0x7c,0xbb38601f},
+{0xf0,0x46},
+{0x00,0xbb376016},
+{0x04,0x8200401d},
+{0x08,0xb6102001},
+{0x0c,0xfa0022f8},
+{0x10,0x80a6c01d},
+{0x14,0x1880000d},
+{0x18,0xb538600a},
+{0x1c,0x832be002},
+{0x20,0xba006038},
+{0x24,0xb812e270},
+{0x28,0xc207401c},
+{0x2c,0x8220401a},
+{0x30,0xc227401c},
+{0x34,0xb606e001},
+{0x38,0xc20022f8},
+{0x3c,0x80a6c001},
+{0x40,0x08bffffa},
+{0x44,0xba076038},
+{0x48,0x9e03e001},
+{0x4c,0xc20022fc},
+{0x50,0x80a3c001},
+{0x54,0x08bfffce},
+{0x58,0x9a036004},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0x9de3bf18},
+{0x68,0xe0502458},
+{0x6c,0x80a42000},
+{0x70,0x02800049},
+{0x74,0x01000000},
+{0x78,0xc20022f8},
+{0x7c,0x80a40001},
+{0xf0,0x47},
+{0x00,0x1a800045},
+{0x04,0xa2102001},
+{0x08,0xc20022fc},
+{0x0c,0x80a44001},
+{0x10,0x18800041},
+{0x14,0xe450245a},
+{0x18,0x98102001},
+{0x1c,0xc20022f8},
+{0x20,0x80a30001},
+{0x24,0x1880000f},
+{0x28,0x03000018},
+{0x2c,0x9b2c6002},
+{0x30,0x82106270},
+{0x34,0x9a034001},
+{0x38,0x9a036038},
+{0x3c,0x9607bf78},
+{0x40,0xc2034000},
+{0x44,0xc222c000},
+{0x48,0x98032001},
+{0x4c,0xc20022f8},
+{0x50,0x80a30001},
+{0x54,0x9a036038},
+{0x58,0x08bffffa},
+{0x5c,0x9602e004},
+{0x60,0x9007bf78},
+{0x64,0x7ffffc94},
+{0x68,0xd20022f8},
+{0x6c,0x98100012},
+{0x70,0x80a48010},
+{0x74,0x1480000b},
+{0x78,0x96102000},
+{0x7c,0x832ca002},
+{0xf0,0x48},
+{0x00,0x8200401e},
+{0x04,0x9a007f78},
+{0x08,0xc2034000},
+{0x0c,0x98032001},
+{0x10,0x9602c001},
+{0x14,0x80a30010},
+{0x18,0x04bffffc},
+{0x1c,0x9a036004},
+{0x20,0x82240012},
+{0x24,0x82006001},
+{0x28,0x9b3ae01f},
+{0x2c,0x81836000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x967ac001},
+{0x40,0x98102001},
+{0x44,0xc20022f8},
+{0x48,0x80a30001},
+{0x4c,0x1880000d},
+{0x50,0x03000018},
+{0x54,0x9b2c6002},
+{0x58,0x94106270},
+{0x5c,0x9a036038},
+{0x60,0xc203400a},
+{0x64,0x8220400b},
+{0x68,0xc223400a},
+{0x6c,0x98032001},
+{0x70,0xc20022f8},
+{0x74,0x80a30001},
+{0x78,0x08bffffa},
+{0x7c,0x9a036038},
+{0xf0,0x49},
+{0x00,0xa2046001},
+{0x04,0xc20022fc},
+{0x08,0x80a44001},
+{0x0c,0x08bfffc4},
+{0x10,0x98102001},
+{0x14,0x81c7e008},
+{0x18,0x81e80000},
+{0x1c,0x9de3bf48},
+{0x20,0x1b00003f},
+{0x24,0xc2002350},
+{0x28,0x9a1363ff},
+{0x2c,0xba08400d},
+{0x30,0xa4102001},
+{0x34,0xda0022f8},
+{0x38,0x80a4800d},
+{0x3c,0x1880005e},
+{0x40,0xa3306010},
+{0x44,0xae10200e},
+{0x48,0xac10200e},
+{0x4c,0xaa102000},
+{0x50,0xa8102000},
+{0x54,0xa6102000},
+{0x58,0x80a46000},
+{0x5c,0x0280002e},
+{0x60,0xa0102000},
+{0x64,0x03000018},
+{0x68,0x96106270},
+{0x6c,0x92102000},
+{0x70,0x9807bfa8},
+{0x74,0x8204c009},
+{0x78,0xda086440},
+{0x7c,0x8205800d},
+{0xf0,0x4a},
+{0x00,0x80a36000},
+{0x04,0x02800007},
+{0x08,0x83286002},
+{0x0c,0xc200400b},
+{0x10,0xc2230000},
+{0x14,0x92026001},
+{0x18,0x10bffff7},
+{0x1c,0x98032004},
+{0x20,0x7ffffc45},
+{0x24,0x9007bfa8},
+{0x28,0x80a74011},
+{0x2c,0x1480000b},
+{0x30,0x9210001d},
+{0x34,0x832f6002},
+{0x38,0x8200401e},
+{0x3c,0x9a007fa8},
+{0x40,0xc2034000},
+{0x44,0x92026001},
+{0x48,0xa0040001},
+{0x4c,0x80a24011},
+{0x50,0x04bffffc},
+{0x54,0x9a036004},
+{0x58,0x8224401d},
+{0x5c,0x82006001},
+{0x60,0x9b3c201f},
+{0x64,0x81836000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0xa0fc0001},
+{0x78,0x36800008},
+{0x7c,0x92102000},
+{0xf0,0x4b},
+{0x00,0xc20023c8},
+{0x04,0x83306005},
+{0x08,0x82086001},
+{0x0c,0x82200001},
+{0x10,0xa00c0001},
+{0x14,0x92102000},
+{0x18,0x11000018},
+{0x1c,0x82050009},
+{0x20,0xda086440},
+{0x24,0x8205c00d},
+{0x28,0x94122270},
+{0x2c,0x97286002},
+{0x30,0x80a36000},
+{0x34,0x02800015},
+{0x38,0x92026001},
+{0x3c,0xc202c00a},
+{0x40,0x98204010},
+{0x44,0xda0822b0},
+{0x48,0x833b201f},
+{0x4c,0x80a0000d},
+{0x50,0x8220400c},
+{0x54,0x9a402000},
+{0x58,0x8330601f},
+{0x5c,0x808b4001},
+{0x60,0x22bfffef},
+{0x64,0xd822c00a},
+{0x68,0xda0ca2b0},
+{0x6c,0x9a5b000d},
+{0x70,0x833b601f},
+{0x74,0x83306019},
+{0x78,0x9a034001},
+{0x7c,0x993b6007},
+{0xf0,0x4c},
+{0x00,0x10bfffe7},
+{0x04,0xd822c00a},
+{0x08,0xaa056001},
+{0x0c,0xa604e00c},
+{0x10,0x80a56001},
+{0x14,0x04bfffb1},
+{0x18,0xa805200c},
+{0x1c,0xa404a001},
+{0x20,0xc20022f8},
+{0x24,0x80a48001},
+{0x28,0xac05a00e},
+{0x2c,0x08bfffa8},
+{0x30,0xae05e00e},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x9de3bf98},
+{0x40,0xc20023d0},
+{0x44,0x80a06000},
+{0x48,0x02800052},
+{0x4c,0xb4102001},
+{0x50,0xc2002300},
+{0x54,0x80a68001},
+{0x58,0x18800025},
+{0x5c,0x03000018},
+{0x60,0x9a106270},
+{0x64,0xb0106278},
+{0x68,0x9e106274},
+{0x6c,0xb210626c},
+{0x70,0xb6102007},
+{0x74,0xb92ee003},
+{0x78,0xc24823d2},
+{0x7c,0xfa07000f},
+{0xf0,0x4d},
+{0x00,0xba5f4001},
+{0x04,0x833f601f},
+{0x08,0x83306019},
+{0x0c,0xba074001},
+{0x10,0xc2070018},
+{0x14,0xbb3f6007},
+{0x18,0x8220401d},
+{0x1c,0xc2270018},
+{0x20,0xc2002308},
+{0x24,0xb806c01b},
+{0x28,0xb8070001},
+{0x2c,0xb92f2002},
+{0x30,0xc24823d3},
+{0x34,0xfa07000d},
+{0x38,0xba5f4001},
+{0x3c,0x833f601f},
+{0x40,0x83306019},
+{0x44,0xba074001},
+{0x48,0xc2070019},
+{0x4c,0xbb3f6007},
+{0x50,0x8220401d},
+{0x54,0xc2270019},
+{0x58,0xb406a001},
+{0x5c,0xc2002300},
+{0x60,0x80a68001},
+{0x64,0x08bfffe4},
+{0x68,0xb606e007},
+{0x6c,0xb6102001},
+{0x70,0xc2002308},
+{0x74,0x80a6c001},
+{0x78,0x18800026},
+{0x7c,0x03000018},
+{0xf0,0x4e},
+{0x00,0x9e106270},
+{0x04,0xb21062e0},
+{0x08,0xb01062a8},
+{0x0c,0xb4106238},
+{0x10,0xb92ee002},
+{0x14,0xc24823d0},
+{0x18,0xfa070018},
+{0x1c,0xba5f4001},
+{0x20,0x833f601f},
+{0x24,0x83306019},
+{0x28,0xba074001},
+{0x2c,0xc2070019},
+{0x30,0xbb3f6007},
+{0x34,0x8220401d},
+{0x38,0xc2270019},
+{0x3c,0xc2002300},
+{0x40,0xb9286003},
+{0x44,0xb8270001},
+{0x48,0xb807001c},
+{0x4c,0xb807001b},
+{0x50,0xb92f2002},
+{0x54,0xc24823d1},
+{0x58,0xfa07000f},
+{0x5c,0xba5f4001},
+{0x60,0x833f601f},
+{0x64,0x83306019},
+{0x68,0xba074001},
+{0x6c,0xc207001a},
+{0x70,0xbb3f6007},
+{0x74,0x8220401d},
+{0x78,0xc227001a},
+{0x7c,0xb606e001},
+{0xf0,0x4f},
+{0x00,0xc2002308},
+{0x04,0x80a6c001},
+{0x08,0x08bfffe3},
+{0x0c,0xb92ee002},
+{0x10,0x81c7e008},
+{0x14,0x81e80000},
+{0x18,0x9de3bf70},
+{0x1c,0x92102001},
+{0x20,0xd0002300},
+{0x24,0x80a24008},
+{0x28,0x1880001c},
+{0x2c,0x9e102000},
+{0x30,0x03000018},
+{0x34,0xa2106270},
+{0x38,0xd4002308},
+{0x3c,0x98102007},
+{0x40,0x96102001},
+{0x44,0x80a2c00a},
+{0x48,0x38800011},
+{0x4c,0x92026001},
+{0x50,0x832b2003},
+{0x54,0x82004011},
+{0x58,0x82006004},
+{0x5c,0xda004000},
+{0x60,0x80a3400f},
+{0x64,0x04800005},
+{0x68,0x82006004},
+{0x6c,0x9e10000d},
+{0x70,0xa0100009},
+{0x74,0xa410000b},
+{0x78,0x9602e001},
+{0x7c,0x80a2c00a},
+{0xf0,0x50},
+{0x00,0x28bffff8},
+{0x04,0xda004000},
+{0x08,0x92026001},
+{0x0c,0x80a24008},
+{0x10,0x08bfffec},
+{0x14,0x98032007},
+{0x18,0xa2042001},
+{0x1c,0x92043fff},
+{0x20,0x80a24011},
+{0x24,0x1480002e},
+{0x28,0x9e102000},
+{0x2c,0x832a6003},
+{0x30,0x90204009},
+{0x34,0x03000018},
+{0x38,0xa6106270},
+{0x3c,0xa004a001},
+{0x40,0x9604bfff},
+{0x44,0x80a2c010},
+{0x48,0x14800021},
+{0x4c,0x82020008},
+{0x50,0x8200400b},
+{0x54,0x9b2be002},
+{0x58,0x83286002},
+{0x5c,0x9a03401e},
+{0x60,0x94004013},
+{0x64,0x9a037fd0},
+{0x68,0x833ae01f},
+{0x6c,0x8220400b},
+{0x70,0x80a26000},
+{0x74,0x0480000f},
+{0x78,0x9930601f},
+{0x7c,0xc2002300},
+{0xf0,0x51},
+{0x00,0x80a04009},
+{0x04,0x82603fff},
+{0x08,0x8088400c},
+{0x0c,0x2280000a},
+{0x10,0xc0234000},
+{0x14,0xc2002308},
+{0x18,0x80a2c001},
+{0x1c,0x38800006},
+{0x20,0xc0234000},
+{0x24,0xc2028000},
+{0x28,0x10800003},
+{0x2c,0xc2234000},
+{0x30,0xc0234000},
+{0x34,0x9602e001},
+{0x38,0x9e03e001},
+{0x3c,0x9a036004},
+{0x40,0x80a2c010},
+{0x44,0x04bfffe9},
+{0x48,0x9402a004},
+{0x4c,0x92026001},
+{0x50,0x80a24011},
+{0x54,0x04bfffdb},
+{0x58,0x90022007},
+{0x5c,0x9007bfd0},
+{0x60,0x7ffffb55},
+{0x64,0x92102009},
+{0x68,0xda07bfec},
+{0x6c,0xc207bfe8},
+{0x70,0x8200400d},
+{0x74,0xda07bff0},
+{0x78,0x8200400d},
+{0x7c,0x9b30601f},
+{0xf0,0x52},
+{0x00,0x8200400d},
+{0x04,0xd6082347},
+{0x08,0x9602e001},
+{0x0c,0xda00256c},
+{0x10,0xd808257f},
+{0x14,0x9a5b400b},
+{0x18,0x98032001},
+{0x1c,0x81800000},
+{0x20,0x01000000},
+{0x24,0x01000000},
+{0x28,0x01000000},
+{0x2c,0x9a73400c},
+{0x30,0x83386001},
+{0x34,0xc2202590},
+{0x38,0xda20256c},
+{0x3c,0x96102000},
+{0x40,0x94102c18},
+{0x44,0x992ae002},
+{0x48,0xda1323b4},
+{0x4c,0xc2002590},
+{0x50,0x8258400d},
+{0x54,0x9b38601f},
+{0x58,0x9b336018},
+{0x5c,0x8200400d},
+{0x60,0xda1323b6},
+{0x64,0x83386008},
+{0x68,0x8200400d},
+{0x6c,0xda00256c},
+{0x70,0x8258400d},
+{0x74,0x83306007},
+{0x78,0x9602e001},
+{0x7c,0x80a06c18},
+{0xf0,0x53},
+{0x00,0x04800003},
+{0x04,0xc2232520},
+{0x08,0xd4232520},
+{0x0c,0x80a2e003},
+{0x10,0x04bfffee},
+{0x14,0x992ae002},
+{0x18,0xc20023c0},
+{0x1c,0x80a06000},
+{0x20,0x22800007},
+{0x24,0xc2002520},
+{0x28,0xc2002200},
+{0x2c,0x80a06000},
+{0x30,0x22800006},
+{0x34,0xc200259c},
+{0x38,0xc2002520},
+{0x3c,0x82200001},
+{0x40,0xc220252c},
+{0x44,0xc200259c},
+{0x48,0x80a06000},
+{0x4c,0x02800005},
+{0x50,0xc2002288},
+{0x54,0x9b306001},
+{0x58,0x83306002},
+{0x5c,0x8200400d},
+{0x60,0xc220251c},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x9de3bf98},
+{0x70,0x832e6003},
+{0x74,0x82204019},
+{0x78,0x82004001},
+{0x7c,0x82004018},
+{0xf0,0x54},
+{0x00,0x3b000018},
+{0x04,0x83286002},
+{0x08,0xba176270},
+{0x0c,0x9a066001},
+{0x10,0xde00401d},
+{0x14,0xb2067fff},
+{0x18,0xc2002478},
+{0x1c,0x9823c001},
+{0x20,0x80a6400d},
+{0x24,0xb4062001},
+{0x28,0x1480002a},
+{0x2c,0x96102000},
+{0x30,0x832e6003},
+{0x34,0xb8204019},
+{0x38,0x9410001d},
+{0x3c,0xb006bffe},
+{0x40,0xba07001c},
+{0x44,0xba074018},
+{0x48,0x833e601f},
+{0x4c,0x82204019},
+{0x50,0xbb2f6002},
+{0x54,0xb730601f},
+{0x58,0xba07400a},
+{0x5c,0x80a62000},
+{0x60,0x24800015},
+{0x64,0xb0062001},
+{0x68,0xc2002308},
+{0x6c,0x80a04018},
+{0x70,0x82603fff},
+{0x74,0x8088401b},
+{0x78,0x2280000f},
+{0x7c,0xb0062001},
+{0xf0,0x55},
+{0x00,0xc2002300},
+{0x04,0x80a64001},
+{0x08,0x3880000b},
+{0x0c,0xb0062001},
+{0x10,0xc2074000},
+{0x14,0x80a0400f},
+{0x18,0x04800004},
+{0x1c,0x80a0400c},
+{0x20,0x1080000d},
+{0x24,0xb0102000},
+{0x28,0x24800002},
+{0x2c,0x96102001},
+{0x30,0xb0062001},
+{0x34,0x80a6001a},
+{0x38,0x04bfffe9},
+{0x3c,0xba076004},
+{0x40,0xb2066001},
+{0x44,0x80a6400d},
+{0x48,0x04bfffdd},
+{0x4c,0xb8072007},
+{0x50,0xb010000b},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf58},
+{0x60,0xc250224c},
+{0x64,0x80a06000},
+{0x68,0x02800067},
+{0x6c,0x94102000},
+{0x70,0x90067ffe},
+{0x74,0xac066002},
+{0x78,0x80a20016},
+{0x7c,0x14800044},
+{0xf0,0x56},
+{0x00,0x9e102000},
+{0x04,0x832a2003},
+{0x08,0xa0204008},
+{0x0c,0xa8062002},
+{0x10,0x92063ffe},
+{0x14,0x80a24014},
+{0x18,0x14800039},
+{0x1c,0x82064019},
+{0x20,0x82204008},
+{0x24,0x97286003},
+{0x28,0x9622c001},
+{0x2c,0x9a040010},
+{0x30,0x9a034009},
+{0x34,0x993a201f},
+{0x38,0x952be002},
+{0x3c,0x03000018},
+{0x40,0x98230008},
+{0x44,0xae106270},
+{0x48,0x9b2b6002},
+{0x4c,0x9402801e},
+{0x50,0xa602c00b},
+{0x54,0xab33201f},
+{0x58,0x9a034017},
+{0x5c,0x9402bfb8},
+{0x60,0xa4063fff},
+{0x64,0xa2062001},
+{0x68,0x96067fff},
+{0x6c,0x82060018},
+{0x70,0x82204009},
+{0x74,0x8204c001},
+{0x78,0x80a24012},
+{0x7c,0x0680000b},
+{0xf0,0x57},
+{0x00,0x99286002},
+{0x04,0x80a24011},
+{0x08,0x14800009},
+{0x0c,0x80a26000},
+{0x10,0x80a2000b},
+{0x14,0x06800005},
+{0x18,0x82066001},
+{0x1c,0x80a20001},
+{0x20,0x24800014},
+{0x24,0x92026001},
+{0x28,0x80a26000},
+{0x2c,0x2480000d},
+{0x30,0xc2030017},
+{0x34,0xc2002308},
+{0x38,0x80a04009},
+{0x3c,0x82603fff},
+{0x40,0x80884015},
+{0x44,0x22800007},
+{0x48,0xc2030017},
+{0x4c,0xc2002300},
+{0x50,0x80a20001},
+{0x54,0x38800003},
+{0x58,0xc2030017},
+{0x5c,0xc2034000},
+{0x60,0xc2228000},
+{0x64,0x9e03e001},
+{0x68,0x9402a004},
+{0x6c,0x92026001},
+{0x70,0x80a24014},
+{0x74,0x04bfffde},
+{0x78,0x9a036004},
+{0x7c,0x90022001},
+{0xf0,0x58},
+{0x00,0x80a20016},
+{0x04,0x04bfffc3},
+{0x08,0xa0042007},
+{0x0c,0x9007bfb8},
+{0x10,0x7ffffa89},
+{0x14,0x92102010},
+{0x18,0xf050224e},
+{0x1c,0xd850224c},
+{0x20,0x80a6000c},
+{0x24,0x9e102000},
+{0x28,0x1480000c},
+{0x2c,0xda10224e},
+{0x30,0x832e2002},
+{0x34,0x8200401e},
+{0x38,0x9610000c},
+{0x3c,0x98007fb8},
+{0x40,0xc2030000},
+{0x44,0xb0062001},
+{0x48,0x9e03c001},
+{0x4c,0x80a6000b},
+{0x50,0x04bffffc},
+{0x54,0x98032004},
+{0x58,0x9b2b6010},
+{0x5c,0x9b3b6010},
+{0x60,0xc250224c},
+{0x64,0x8220400d},
+{0x68,0x82006001},
+{0x6c,0x9b3be01f},
+{0x70,0x81836000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0x59},
+{0x00,0x947bc001},
+{0x04,0x81c7e008},
+{0x08,0x91e8000a},
+{0x0c,0x9de3bf88},
+{0x10,0xa410001a},
+{0x14,0xa810001b},
+{0x18,0x94062001},
+{0x1c,0x98066001},
+{0x20,0xa607bff8},
+{0x24,0x8207bfe8},
+{0x28,0xb4102003},
+{0x2c,0xc0204000},
+{0x30,0xb486bfff},
+{0x34,0x1cbffffe},
+{0x38,0x82006004},
+{0x3c,0xb2067fff},
+{0x40,0x80a6400c},
+{0x44,0x14800039},
+{0x48,0x82064019},
+{0x4c,0xba03000c},
+{0x50,0xba07400c},
+{0x54,0x82004019},
+{0x58,0x8220401d},
+{0x5c,0xbb2e6003},
+{0x60,0x9a274019},
+{0x64,0x9e20400a},
+{0x68,0xb402bffe},
+{0x6c,0x8203400d},
+{0x70,0x8200401a},
+{0x74,0xb806800f},
+{0x78,0x3b000018},
+{0x7c,0xa0176270},
+{0xf0,0x5a},
+{0x00,0xb7286002},
+{0x04,0xb0072008},
+{0x08,0xa2102001},
+{0x0c,0x912c4018},
+{0x10,0xba102000},
+{0x14,0x832f6002},
+{0x18,0x96004013},
+{0x1c,0x80a52000},
+{0x20,0xb8100001},
+{0x24,0x1280000c},
+{0x28,0x92076001},
+{0x2c,0xfa006520},
+{0x30,0xc2002470},
+{0x34,0xba5f4001},
+{0x38,0x833f601f},
+{0x3c,0x83306018},
+{0x40,0xba074001},
+{0x44,0xc206c010},
+{0x48,0x82204012},
+{0x4c,0x10800005},
+{0x50,0xbb3f6008},
+{0x54,0xc206c010},
+{0x58,0xfa072520},
+{0x5c,0x82204012},
+{0x60,0x80a0401d},
+{0x64,0x04800005},
+{0x68,0x80a26003},
+{0x6c,0xc202fff0},
+{0x70,0x82104008},
+{0x74,0xc222fff0},
+{0x78,0x08bfffe7},
+{0x7c,0xba100009},
+{0xf0,0x5b},
+{0x00,0xb406a001},
+{0x04,0xb0062001},
+{0x08,0x80a6800a},
+{0x0c,0x04bfffe0},
+{0x10,0xb606e004},
+{0x14,0xb2066001},
+{0x18,0x9e03e003},
+{0x1c,0x80a6400c},
+{0x20,0x04bfffd2},
+{0x24,0x9a036007},
+{0x28,0xc207bfe8},
+{0x2c,0x80886010},
+{0x30,0x2280000a},
+{0x34,0xfa07bfec},
+{0x38,0xc207bff4},
+{0x3c,0x80886082},
+{0x40,0x22800006},
+{0x44,0xfa07bfec},
+{0x48,0x80886028},
+{0x4c,0x1280004d},
+{0x50,0xb0102003},
+{0x54,0xfa07bfec},
+{0x58,0x808f6010},
+{0x5c,0x02800012},
+{0x60,0xf807bff0},
+{0x64,0x808f6082},
+{0x68,0x02800007},
+{0x6c,0x808f6028},
+{0x70,0xc207bff4},
+{0x74,0x80886028},
+{0x78,0x32800042},
+{0x7c,0xb0102002},
+{0xf0,0x5c},
+{0x00,0x808f6028},
+{0x04,0x02800008},
+{0x08,0xf807bff0},
+{0x0c,0xc207bff4},
+{0x10,0x80886082},
+{0x14,0x22800005},
+{0x18,0xb402bfff},
+{0x1c,0x10800039},
+{0x20,0xb0102002},
+{0x24,0xb402bfff},
+{0x28,0x808f2010},
+{0x2c,0x02800034},
+{0x30,0xb2033fff},
+{0x34,0x820f200a},
+{0x38,0x8218600a},
+{0x3c,0x80a00001},
+{0x40,0xba603fff},
+{0x44,0x821ea001},
+{0x48,0x80a00001},
+{0x4c,0xb6402000},
+{0x50,0x808f401b},
+{0x54,0x22800006},
+{0x58,0x820f2022},
+{0x5c,0x80a66001},
+{0x60,0x32800028},
+{0x64,0xb0102001},
+{0x68,0x820f2022},
+{0x6c,0x80a06022},
+{0x70,0x1280000d},
+{0x74,0x820f2088},
+{0x78,0xc2002308},
+{0x7c,0x821e8001},
+{0xf0,0x5d},
+{0x00,0x80a00001},
+{0x04,0xba402000},
+{0x08,0x821e6001},
+{0x0c,0x80a00001},
+{0x10,0x82402000},
+{0x14,0x808f4001},
+{0x18,0x3280001a},
+{0x1c,0xb0102001},
+{0x20,0x820f2088},
+{0x24,0x82186088},
+{0x28,0x80a00001},
+{0x2c,0x82603fff},
+{0x30,0x8088401b},
+{0x34,0x02800007},
+{0x38,0x820f20a0},
+{0x3c,0xc2002300},
+{0x40,0x80a64001},
+{0x44,0x3280000f},
+{0x48,0xb0102001},
+{0x4c,0x820f20a0},
+{0x50,0x80a060a0},
+{0x54,0x1280000b},
+{0x58,0xb0102000},
+{0x5c,0xc2002308},
+{0x60,0x80a68001},
+{0x64,0x02800007},
+{0x68,0x01000000},
+{0x6c,0xc2002300},
+{0x70,0x80a64001},
+{0x74,0x12800003},
+{0x78,0xb0102001},
+{0x7c,0xb0102000},
+{0xf0,0x5e},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0x9de3bf98},
+{0x0c,0xc020259c},
+{0x10,0xc0202514},
+{0x14,0xb6102000},
+{0x18,0xa2102000},
+{0x1c,0x832c6002},
+{0x20,0xa2046001},
+{0x24,0x80a46009},
+{0x28,0x04bffffd},
+{0x2c,0xc0206768},
+{0x30,0xc2002568},
+{0x34,0x80a06000},
+{0x38,0x02800004},
+{0x3c,0xa4102001},
+{0x40,0x82007fff},
+{0x44,0xc2202568},
+{0x48,0xc20022f8},
+{0x4c,0x80a48001},
+{0x50,0x188000b3},
+{0x54,0xb810201c},
+{0x58,0xba10200e},
+{0x5c,0xae10200e},
+{0x60,0xa2102001},
+{0x64,0xc20022fc},
+{0x68,0x80a44001},
+{0x6c,0x188000a5},
+{0x70,0x832f2002},
+{0x74,0x9b2f6002},
+{0x78,0x992de002},
+{0x7c,0xa8006004},
+{0xf0,0x5f},
+{0x00,0xa6036008},
+{0x04,0xaa032004},
+{0x08,0x2d000040},
+{0x0c,0xda002308},
+{0x10,0x80a4400d},
+{0x14,0x38800035},
+{0x18,0xc2002568},
+{0x1c,0xc2002300},
+{0x20,0x80a48001},
+{0x24,0x38800031},
+{0x28,0xc2002568},
+{0x2c,0x03000018},
+{0x30,0x82106270},
+{0x34,0xda054001},
+{0x38,0xc2002474},
+{0x3c,0x80a34001},
+{0x40,0x06800088},
+{0x44,0x03000040},
+{0x48,0x90100011},
+{0x4c,0x7ffffe88},
+{0x50,0x92100012},
+{0x54,0x80a22000},
+{0x58,0x02800082},
+{0x5c,0x03000040},
+{0x60,0x92100012},
+{0x64,0x7ffffebe},
+{0x68,0x90100011},
+{0x6c,0xa0100008},
+{0x70,0x90100011},
+{0x74,0x92100012},
+{0x78,0x94100010},
+{0x7c,0x7fffff24},
+{0xf0,0x60},
+{0x00,0x96102000},
+{0x04,0x80a22000},
+{0x08,0x02800076},
+{0x0c,0x03000040},
+{0x10,0x94100010},
+{0x14,0x90100011},
+{0x18,0x92100012},
+{0x1c,0x7fffff1c},
+{0x20,0x96102001},
+{0x24,0x80a22000},
+{0x28,0x02800006},
+{0x2c,0xd8002514},
+{0x30,0x832b2002},
+{0x34,0x9a058012},
+{0x38,0x10800007},
+{0x3c,0xda206768},
+{0x40,0x1b000010},
+{0x44,0x82058012},
+{0x48,0x8200400d},
+{0x4c,0x9b2b2002},
+{0x50,0xc2236768},
+{0x54,0x82032001},
+{0x58,0xc2202514},
+{0x5c,0xc2002280},
+{0x60,0x1080005c},
+{0x64,0xc2202568},
+{0x68,0x80a06000},
+{0x6c,0x1280005d},
+{0x70,0x03000040},
+{0x74,0x80a4400d},
+{0x78,0x2880001d},
+{0x7c,0xc200237c},
+{0xf0,0x61},
+{0x00,0xc2002304},
+{0x04,0x80a06000},
+{0x08,0x02800007},
+{0x0c,0x19000018},
+{0x10,0xc2002300},
+{0x14,0x80a48001},
+{0x18,0x08800052},
+{0x1c,0x03000040},
+{0x20,0x19000018},
+{0x24,0x82132270},
+{0x28,0xda04c001},
+{0x2c,0xc200251c},
+{0x30,0x80a34001},
+{0x34,0x0480004b},
+{0x38,0x03000040},
+{0x3c,0x82132238},
+{0x40,0xc204c001},
+{0x44,0x80a0400d},
+{0x48,0x16800046},
+{0x4c,0x03000040},
+{0x50,0x821322a8},
+{0x54,0xc204c001},
+{0x58,0x80a34001},
+{0x5c,0x16800025},
+{0x60,0x9610000d},
+{0x64,0x1080003f},
+{0x68,0x03000040},
+{0x6c,0x80a06000},
+{0x70,0x1280003c},
+{0x74,0x03000040},
+{0x78,0x19000018},
+{0x7c,0x82132270},
+{0xf0,0x62},
+{0x00,0xda050001},
+{0x04,0xc200251c},
+{0x08,0x80a34001},
+{0x0c,0x04800035},
+{0x10,0x03000040},
+{0x14,0x8213226c},
+{0x18,0xc2050001},
+{0x1c,0x80a0400d},
+{0x20,0x16800003},
+{0x24,0x96102001},
+{0x28,0x96102000},
+{0x2c,0x80a46001},
+{0x30,0x04800003},
+{0x34,0x82102001},
+{0x38,0x82102000},
+{0x3c,0x808ac001},
+{0x40,0x12800028},
+{0x44,0x03000040},
+{0x48,0x82132274},
+{0x4c,0xc2050001},
+{0x50,0x80a34001},
+{0x54,0x16800007},
+{0x58,0x9610000d},
+{0x5c,0xc20022fc},
+{0x60,0x80a44001},
+{0x64,0x1a80001f},
+{0x68,0x03000040},
+{0x6c,0x9610000d},
+{0x70,0xda00259c},
+{0x74,0x80a36000},
+{0x78,0x2280000e},
+{0x7c,0xc2002514},
+{0xf0,0x63},
+{0x00,0xc20023c8},
+{0x04,0x80886100},
+{0x08,0x2280000a},
+{0x0c,0xc2002514},
+{0x10,0x80a2c01b},
+{0x14,0x04800013},
+{0x18,0x03000040},
+{0x1c,0x82058012},
+{0x20,0x9b2b6002},
+{0x24,0x82207000},
+{0x28,0x10800009},
+{0x2c,0xc2236764},
+{0x30,0x9a058012},
+{0x34,0x99286002},
+{0x38,0x9a237000},
+{0x3c,0xda232768},
+{0x40,0x82006001},
+{0x44,0xc220259c},
+{0x48,0xc2202514},
+{0x4c,0xb610000b},
+{0x50,0xc2002514},
+{0x54,0x80a06009},
+{0x58,0x18800011},
+{0x5c,0x03000040},
+{0x60,0xac058001},
+{0x64,0xa2046001},
+{0x68,0xc20022fc},
+{0x6c,0x80a44001},
+{0x70,0xaa056004},
+{0x74,0xa604e004},
+{0x78,0x08bfff65},
+{0x7c,0xa8052004},
+{0xf0,0x64},
+{0x00,0xa404a001},
+{0x04,0xc20022f8},
+{0x08,0x80a48001},
+{0x0c,0xae05e00e},
+{0x10,0xba07600e},
+{0x14,0x08bfff53},
+{0x18,0xb807200e},
+{0x1c,0x81c7e008},
+{0x20,0x81e80000},
+{0x24,0x80a22000},
+{0x28,0x2280001d},
+{0x2c,0xc2002558},
+{0x30,0xd4002208},
+{0x34,0x80a2a000},
+{0x38,0x0280002f},
+{0x3c,0x01000000},
+{0x40,0xc2002514},
+{0x44,0x80a06000},
+{0x48,0x12800007},
+{0x4c,0xc2002558},
+{0x50,0x80a06000},
+{0x54,0x02800028},
+{0x58,0x82007fff},
+{0x5c,0x10800026},
+{0x60,0xc2202558},
+{0x64,0x80a06000},
+{0x68,0x32800023},
+{0x6c,0xd4202558},
+{0x70,0x17200040},
+{0x74,0x193fc200},
+{0x78,0x8212e001},
+{0x7c,0xc2230000},
+{0xf0,0x65},
+{0x00,0xc200233c},
+{0x04,0x83306002},
+{0x08,0x9a132070},
+{0x0c,0xc2234000},
+{0x10,0xd6230000},
+{0x14,0x10800018},
+{0x18,0xd4202558},
+{0x1c,0x80a06000},
+{0x20,0x32800007},
+{0x24,0xc2002514},
+{0x28,0xc2002208},
+{0x2c,0x80a06000},
+{0x30,0x1280000e},
+{0x34,0x033fc200},
+{0x38,0xc2002514},
+{0x3c,0x80a06001},
+{0x40,0x08800006},
+{0x44,0xd800233c},
+{0x48,0x82007fff},
+{0x4c,0xda002204},
+{0x50,0x8258400d},
+{0x54,0x98030001},
+{0x58,0x033fc200},
+{0x5c,0x82106070},
+{0x60,0x10800005},
+{0x64,0xd8204000},
+{0x68,0xda002234},
+{0x6c,0x82106070},
+{0x70,0xda204000},
+{0x74,0x81c3e008},
+{0x78,0x01000000},
+{0x7c,0x82220009},
+{0xf0,0x66},
+{0x00,0x9a58400a},
+{0x04,0x833b601f},
+{0x08,0x80a20009},
+{0x0c,0x83306019},
+{0x10,0x04800004},
+{0x14,0x90102000},
+{0x18,0x82034001},
+{0x1c,0x91386007},
+{0x20,0x81c3e008},
+{0x24,0x01000000},
+{0x28,0x9de3bf98},
+{0x2c,0xc2002308},
+{0x30,0x82006001},
+{0x34,0xe60022fc},
+{0x38,0x80a4c001},
+{0x3c,0x2a800019},
+{0x40,0xe80022f8},
+{0x44,0x15000018},
+{0x48,0xa8102001},
+{0x4c,0xc20022f8},
+{0x50,0x80a50001},
+{0x54,0x1880000c},
+{0x58,0x832ce002},
+{0x5c,0x9a006038},
+{0x60,0x9612a274},
+{0x64,0x9812a270},
+{0x68,0xc203400c},
+{0x6c,0xc223400b},
+{0x70,0xa8052001},
+{0x74,0xc20022f8},
+{0x78,0x80a50001},
+{0x7c,0x08bffffb},
+{0xf0,0x67},
+{0x00,0x9a036038},
+{0x04,0xc2002308},
+{0x08,0xa604ffff},
+{0x0c,0x82006001},
+{0x10,0x80a4c001},
+{0x14,0x1abfffee},
+{0x18,0xa8102001},
+{0x1c,0xe80022f8},
+{0x20,0x80a52000},
+{0x24,0x0280002a},
+{0x28,0x832d2003},
+{0x2c,0xaa204014},
+{0x30,0x27000018},
+{0x34,0xa52d6003},
+{0x38,0x8214e278},
+{0x3c,0xa214e274},
+{0x40,0xd2048001},
+{0x44,0xd408228c},
+{0x48,0x7fffffcd},
+{0x4c,0xd0048011},
+{0x50,0xac14e270},
+{0x54,0xd0248016},
+{0x58,0xc2002308},
+{0x5c,0xa0054015},
+{0x60,0xa0040001},
+{0x64,0xa12c2002},
+{0x68,0x8214e26c},
+{0x6c,0xd2040001},
+{0x70,0xd408228d},
+{0x74,0x7fffffc2},
+{0x78,0xd0040016},
+{0x7c,0xd0240011},
+{0xf0,0x68},
+{0x00,0xc2002300},
+{0x04,0x80a50001},
+{0x08,0x2880000f},
+{0x0c,0xa8853fff},
+{0x10,0xa214e2a8},
+{0x14,0x98100016},
+{0x18,0x9a100012},
+{0x1c,0xa6102000},
+{0x20,0xc203400c},
+{0x24,0xc2234011},
+{0x28,0xc2002308},
+{0x2c,0xa604e001},
+{0x30,0x82006001},
+{0x34,0x80a4c001},
+{0x38,0x08bffffa},
+{0x3c,0x9a036004},
+{0x40,0xa8853fff},
+{0x44,0x12bfffdb},
+{0x48,0xaa057ff9},
+{0x4c,0xa6102001},
+{0x50,0xc2002308},
+{0x54,0x80a4c001},
+{0x58,0x18800019},
+{0x5c,0x23000018},
+{0x60,0xa12ce002},
+{0x64,0x821462e0},
+{0x68,0xa41462a8},
+{0x6c,0xd2040001},
+{0x70,0xd408228e},
+{0x74,0x7fffffa2},
+{0x78,0xd0040012},
+{0x7c,0x9a146270},
+{0xf0,0x69},
+{0x00,0xd024000d},
+{0x04,0xc2002300},
+{0x08,0xa1286003},
+{0x0c,0xa0240001},
+{0x10,0xa0040010},
+{0x14,0xa0040013},
+{0x18,0xa12c2002},
+{0x1c,0xa2146238},
+{0x20,0xd004000d},
+{0x24,0xd2040011},
+{0x28,0x7fffff95},
+{0x2c,0xd408228f},
+{0x30,0xd0240012},
+{0x34,0x10bfffe7},
+{0x38,0xa604e001},
+{0x3c,0x17000018},
+{0x40,0x9012e274},
+{0x44,0x9212e2a8},
+{0x48,0xda024000},
+{0x4c,0xc2020000},
+{0x50,0x8200400d},
+{0x54,0x9412e270},
+{0x58,0x83386001},
+{0x5c,0xc2228000},
+{0x60,0xd8002308},
+{0x64,0x992b2002},
+{0x68,0x9612e2ac},
+{0x6c,0xda03000b},
+{0x70,0xc203000a},
+{0x74,0x8200400d},
+{0x78,0x83386001},
+{0x7c,0xc2230008},
+{0xf0,0x6a},
+{0x00,0xc2002300},
+{0x04,0x9b286003},
+{0x08,0x9a234001},
+{0x0c,0x9b2b6003},
+{0x10,0xd803400a},
+{0x14,0xc203400b},
+{0x18,0x8200400c},
+{0x1c,0x83386001},
+{0x20,0xc2234009},
+{0x24,0xda002300},
+{0x28,0x832b6003},
+{0x2c,0x8220400d},
+{0x30,0xda002308},
+{0x34,0x82004001},
+{0x38,0x8200400d},
+{0x3c,0x83286002},
+{0x40,0xda004009},
+{0x44,0xd8004008},
+{0x48,0x9a03400c},
+{0x4c,0x9b3b6001},
+{0x50,0xda20400b},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf98},
+{0x60,0xb6063fff},
+{0x64,0x98062001},
+{0x68,0x03000007},
+{0x6c,0xa0100019},
+{0x70,0xa410001a},
+{0x74,0x921063fe},
+{0x78,0x80a6c00c},
+{0x7c,0x90102000},
+{0xf0,0x6b},
+{0x00,0x9e102000},
+{0x04,0x9a102000},
+{0x08,0x1480001c},
+{0x0c,0x9610001b},
+{0x10,0x832ee003},
+{0x14,0xb420401b},
+{0x18,0x03000018},
+{0x1c,0x94106270},
+{0x20,0xb2066001},
+{0x24,0xb8043fff},
+{0x28,0x80a70019},
+{0x2c,0x34800010},
+{0x30,0xb606e001},
+{0x34,0x8206801a},
+{0x38,0x8200401c},
+{0x3c,0x83286002},
+{0x40,0x8200400a},
+{0x44,0xfa004000},
+{0x48,0xb8072001},
+{0x4c,0x80a74009},
+{0x50,0x16800003},
+{0x54,0x82006004},
+{0x58,0x9210001d},
+{0x5c,0x80a70019},
+{0x60,0x24bffffa},
+{0x64,0xfa004000},
+{0x68,0xb606e001},
+{0x6c,0x80a6c00c},
+{0x70,0x04bfffed},
+{0x74,0xb406a007},
+{0x78,0xc2002250},
+{0x7c,0x80a24001},
+{0xf0,0x6c},
+{0x00,0x26800002},
+{0x04,0x92100001},
+{0x08,0x94062001},
+{0x0c,0x80a2c00a},
+{0x10,0x14800025},
+{0x14,0xb610000b},
+{0x18,0x832ae003},
+{0x1c,0xb020400b},
+{0x20,0x03000018},
+{0x24,0xa2106270},
+{0x28,0x96042001},
+{0x2c,0xb8043fff},
+{0x30,0x80a7000b},
+{0x34,0x14800015},
+{0x38,0x82060018},
+{0x3c,0x8200401c},
+{0x40,0x83286002},
+{0x44,0xb4004011},
+{0x48,0x9806e001},
+{0x4c,0xc2068000},
+{0x50,0xba072001},
+{0x54,0x82204009},
+{0x58,0xb810001d},
+{0x5c,0xb258401d},
+{0x60,0xb406a004},
+{0x64,0x80a06000},
+{0x68,0x04800005},
+{0x6c,0xba58400c},
+{0x70,0x9e03c01d},
+{0x74,0x9a034019},
+{0x78,0x90020001},
+{0x7c,0x80a7000b},
+{0xf0,0x6d},
+{0x00,0x24bffff4},
+{0x04,0xc2068000},
+{0x08,0xb606e001},
+{0x0c,0x80a6c00a},
+{0x10,0x04bfffe7},
+{0x14,0xb0062007},
+{0x18,0x80a22000},
+{0x1c,0x14800005},
+{0x20,0xbb2be006},
+{0x24,0x832ca002},
+{0x28,0x1080001c},
+{0x2c,0xc0206768},
+{0x30,0x833f601f},
+{0x34,0x81806000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0xba7f4008},
+{0x48,0x832b6006},
+{0x4c,0x9b38601f},
+{0x50,0x81836000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x82784008},
+{0x64,0x9e077fa0},
+{0x68,0x80a3e000},
+{0x6c,0x14800003},
+{0x70,0x9a007fa0},
+{0x74,0x9e102001},
+{0x78,0x80a36000},
+{0x7c,0x24800002},
+{0xf0,0x6e},
+{0x00,0x9a102001},
+{0x04,0xba0b6fff},
+{0x08,0x832be010},
+{0x0c,0x8210401d},
+{0x10,0xbb2ca002},
+{0x14,0xc2276768},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0x03000018},
+{0x28,0xb61062a4},
+{0x2c,0xb81062ac},
+{0x30,0x961062a8},
+{0x34,0xc20023c8},
+{0x38,0x80886200},
+{0x3c,0x832e2003},
+{0x40,0x82204018},
+{0x44,0x82004001},
+{0x48,0x82004019},
+{0x4c,0xb12e2006},
+{0x50,0xbb2e6006},
+{0x54,0xb5286002},
+{0x58,0xb0063fe0},
+{0x5c,0x9a066001},
+{0x60,0x98066002},
+{0x64,0x9f2e2010},
+{0x68,0x02800020},
+{0x6c,0x82077fe0},
+{0x70,0xfa06801b},
+{0x74,0xf806801c},
+{0x78,0xf406800b},
+{0x7c,0x8207401a},
+{0xf0,0x6f},
+{0x00,0xb610001d},
+{0x04,0x80a7401c},
+{0x08,0x04800003},
+{0x0c,0xb000401c},
+{0x10,0xb610001c},
+{0x14,0x8227401b},
+{0x18,0xba26801b},
+{0x1c,0xba5f400d},
+{0x20,0x82584019},
+{0x24,0x8200401d},
+{0x28,0xb827001b},
+{0x2c,0xb85f000c},
+{0x30,0xba06c01b},
+{0x34,0x8200401c},
+{0x38,0xba07401b},
+{0x3c,0xba26001d},
+{0x40,0x83286006},
+{0x44,0x9b38601f},
+{0x48,0x81836000},
+{0x4c,0x01000000},
+{0x50,0x01000000},
+{0x54,0x01000000},
+{0x58,0x8278401d},
+{0x5c,0x82807fa0},
+{0x60,0x2c800002},
+{0x64,0x82102000},
+{0x68,0xb003c001},
+{0x6c,0xb0263000},
+{0x70,0x81c7e008},
+{0x74,0x81e80000},
+{0x78,0x9de3bf98},
+{0x7c,0xa4102000},
+{0xf0,0x70},
+{0x00,0xc2002514},
+{0x04,0x80a48001},
+{0x08,0x1a80002b},
+{0x0c,0xa32ca002},
+{0x10,0xda046768},
+{0x14,0x93336010},
+{0x18,0x8333600c},
+{0x1c,0x900b6fff},
+{0x20,0x80886001},
+{0x24,0x02800006},
+{0x28,0x920a6fff},
+{0x2c,0x7fffffbd},
+{0x30,0xa404a001},
+{0x34,0x1080001c},
+{0x38,0xd0246768},
+{0x3c,0xa133600e},
+{0x40,0x80a36000},
+{0x44,0x99336010},
+{0x48,0xa00c2001},
+{0x4c,0x02800015},
+{0x50,0x9a0b6fff},
+{0x54,0xc200246c},
+{0x58,0x9010000d},
+{0x5c,0x920b2fff},
+{0x60,0x80a06000},
+{0x64,0x02800006},
+{0x68,0x94100012},
+{0x6c,0x7fffff3c},
+{0x70,0x01000000},
+{0x74,0x10800005},
+{0x78,0x80a42000},
+{0x7c,0x7ffff9a8},
+{0xf0,0x71},
+{0x00,0x94100012},
+{0x04,0x80a42000},
+{0x08,0x22800007},
+{0x0c,0xa404a001},
+{0x10,0xc2046768},
+{0x14,0x1b000010},
+{0x18,0x8210400d},
+{0x1c,0xc2246768},
+{0x20,0xa404a001},
+{0x24,0xc2002514},
+{0x28,0x80a48001},
+{0x2c,0x0abfffd9},
+{0x30,0xa32ca002},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x9de3bf98},
+{0x40,0xc20023c8},
+{0x44,0x94100018},
+{0x48,0x80886800},
+{0x4c,0x02800026},
+{0x50,0xb0102000},
+{0x54,0x98102001},
+{0x58,0xd0002308},
+{0x5c,0x80a30008},
+{0x60,0x1a800020},
+{0x64,0x96102000},
+{0x68,0xda00247c},
+{0x6c,0xd2002300},
+{0x70,0xf20b237f},
+{0x74,0x80a26001},
+{0x78,0xde0b2380},
+{0x7c,0x08800015},
+{0xf0,0x72},
+{0x00,0xb006400d},
+{0x04,0xb4027fff},
+{0x08,0xba03c00f},
+{0x0c,0x82064019},
+{0x10,0xb8060018},
+{0x14,0xf612801d},
+{0x18,0xc2128001},
+{0x1c,0xfa12801c},
+{0x20,0xba20401d},
+{0x24,0x8220401b},
+{0x28,0x82584001},
+{0x2c,0xba5f401d},
+{0x30,0x8200401d},
+{0x34,0x83386008},
+{0x38,0x9602c001},
+{0x3c,0xb206400d},
+{0x40,0x9e03c00d},
+{0x44,0xb486bfff},
+{0x48,0x12bffff0},
+{0x4c,0xb006000d},
+{0x50,0x98032001},
+{0x54,0x80a30008},
+{0x58,0x2abfffe7},
+{0x5c,0xf20b237f},
+{0x60,0xb010000b},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x9de3bf98},
+{0x70,0xc2002514},
+{0x74,0x80a06000},
+{0x78,0x2280000c},
+{0x7c,0xc2002200},
+{0xf0,0x73},
+{0x00,0xc20023c8},
+{0x04,0x80886400},
+{0x08,0x22800078},
+{0x0c,0xc0202538},
+{0x10,0xc208254e},
+{0x14,0x80a06000},
+{0x18,0x22800004},
+{0x1c,0xc2002200},
+{0x20,0x10800072},
+{0x24,0xc0202538},
+{0x28,0x80a06000},
+{0x2c,0x1280006f},
+{0x30,0x01000000},
+{0x34,0xc208254e},
+{0x38,0x80a06000},
+{0x3c,0x12800003},
+{0x40,0xa0102000},
+{0x44,0xa0102002},
+{0x48,0x11000018},
+{0x4c,0x7fffffbc},
+{0x50,0x90122048},
+{0x54,0xd0202534},
+{0x58,0x11000017},
+{0x5c,0x7fffffb8},
+{0x60,0x90122220},
+{0x64,0xc2002534},
+{0x68,0x80a20001},
+{0x6c,0x36800002},
+{0x70,0xa0142001},
+{0x74,0xc2002564},
+{0x78,0x80a40001},
+{0x7c,0x32800007},
+{0xf0,0x74},
+{0x00,0xc20021f8},
+{0x04,0xc20c2314},
+{0x08,0x80a06000},
+{0x0c,0x32800006},
+{0x10,0xc2002538},
+{0x14,0xc20021f8},
+{0x18,0xc2202538},
+{0x1c,0x10800053},
+{0x20,0xe0202564},
+{0x24,0x82006001},
+{0x28,0xc2202538},
+{0x2c,0xda0c2314},
+{0x30,0x80a0400d},
+{0x34,0x0680004d},
+{0x38,0x01000000},
+{0x3c,0xc0202538},
+{0x40,0xe40c230c},
+{0x44,0xde0c234c},
+{0x48,0xa0102001},
+{0x4c,0xc20022fc},
+{0x50,0x80a40001},
+{0x54,0x18800045},
+{0x58,0xb8102001},
+{0x5c,0xa92c0012},
+{0x60,0x90102001},
+{0x64,0xc20022f8},
+{0x68,0x80a20001},
+{0x6c,0x1880003a},
+{0x70,0xd20c237f},
+{0x74,0x03000018},
+{0x78,0xba106048},
+{0x7c,0x2d000017},
+{0xf0,0x75},
+{0x00,0x0300003f},
+{0x04,0xaa1063ff},
+{0x08,0xae15a220},
+{0x0c,0xa72f000f},
+{0x10,0xa2200014},
+{0x14,0x98024009},
+{0x18,0xda13001d},
+{0x1c,0xc2130017},
+{0x20,0x96a34001},
+{0x24,0x22800026},
+{0x28,0xc200247c},
+{0x2c,0x80a2e000},
+{0x30,0x04800006},
+{0x34,0x80a2c013},
+{0x38,0x2480000c},
+{0x3c,0x96102001},
+{0x40,0x1080000a},
+{0x44,0x973ac00f},
+{0x48,0x80a2e000},
+{0x4c,0x16800008},
+{0x50,0x9415a220},
+{0x54,0x80a2c011},
+{0x58,0x36800005},
+{0x5c,0x96103fff},
+{0x60,0x10800003},
+{0x64,0x973ac012},
+{0x68,0x9415a220},
+{0x6c,0xc213000a},
+{0x70,0x9602c001},
+{0x74,0x808a6001},
+{0x78,0x0280000a},
+{0x7c,0x83326001},
+{0xf0,0x76},
+{0x00,0x99286002},
+{0x04,0xc203000a},
+{0x08,0x1b3fffc0},
+{0x0c,0x8208400d},
+{0x10,0x9a0ac015},
+{0x14,0x8200400d},
+{0x18,0x10800008},
+{0x1c,0xc223000a},
+{0x20,0x83286002},
+{0x24,0xda00400a},
+{0x28,0x992ae010},
+{0x2c,0x9a0b4015},
+{0x30,0x9803000d},
+{0x34,0xd820400a},
+{0x38,0xc200247c},
+{0x3c,0x92024001},
+{0x40,0x90022001},
+{0x44,0xc20022f8},
+{0x48,0x80a20001},
+{0x4c,0x08bfffd3},
+{0x50,0x98024009},
+{0x54,0xa0042001},
+{0x58,0xc20022fc},
+{0x5c,0x80a40001},
+{0x60,0x08bfffc1},
+{0x64,0x90102001},
+{0x68,0x81c7e008},
+{0x6c,0x81e80000},
+{0x70,0xd6020000},
+{0x74,0xd8024000},
+{0x78,0x9132e010},
+{0x7c,0x95332010},
+{0xf0,0x77},
+{0x00,0x900a2fff},
+{0x04,0x940aafff},
+{0x08,0x03000007},
+{0x0c,0x9a22000a},
+{0x10,0x821063ff},
+{0x14,0x940b0001},
+{0x18,0x900ac001},
+{0x1c,0x9022000a},
+{0x20,0x9a5b400d},
+{0x24,0x905a0008},
+{0x28,0x81c3e008},
+{0x2c,0x90034008},
+{0x30,0x9de3bf98},
+{0x34,0x9e102000},
+{0x38,0x832be002},
+{0x3c,0xfa006768},
+{0x40,0x80a76000},
+{0x44,0x2280002e},
+{0x48,0x9e03e001},
+{0x4c,0x83376010},
+{0x50,0xba0f6fff},
+{0x54,0x82086fff},
+{0x58,0xb403e001},
+{0x5c,0x98076020},
+{0x60,0x96006020},
+{0x64,0x80a6a009},
+{0x68,0x9a007fe0},
+{0x6c,0xba077fe0},
+{0x70,0x18800022},
+{0x74,0x832ea002},
+{0x78,0xf8006768},
+{0x7c,0x80a72000},
+{0xf0,0x78},
+{0x00,0x2280001c},
+{0x04,0xb406a001},
+{0x08,0xb7372010},
+{0x0c,0xb60eefff},
+{0x10,0xb20f2fff},
+{0x14,0x80a6c00d},
+{0x18,0x14800003},
+{0x1c,0xb0102001},
+{0x20,0xb0102000},
+{0x24,0x80a6c00b},
+{0x28,0x06800003},
+{0x2c,0xb8102001},
+{0x30,0xb8102000},
+{0x34,0x808e001c},
+{0x38,0x2280000e},
+{0x3c,0xb406a001},
+{0x40,0x80a6401d},
+{0x44,0x14800003},
+{0x48,0xb6102001},
+{0x4c,0xb6102000},
+{0x50,0x80a6400c},
+{0x54,0x06800003},
+{0x58,0xb8102001},
+{0x5c,0xb8102000},
+{0x60,0x808ec01c},
+{0x64,0x32800002},
+{0x68,0xc0206768},
+{0x6c,0xb406a001},
+{0x70,0x10bfffe0},
+{0x74,0x80a6a009},
+{0x78,0x9e03e001},
+{0x7c,0x80a3e009},
+{0xf0,0x79},
+{0x00,0x08bfffcf},
+{0x04,0x832be002},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0xc2002510},
+{0x14,0x82006001},
+{0x18,0x80a06008},
+{0x1c,0x08800003},
+{0x20,0xc2202510},
+{0x24,0xc0202510},
+{0x28,0xd8002510},
+{0x2c,0x96102000},
+{0x30,0x832b2002},
+{0x34,0x8200400c},
+{0x38,0x83286003},
+{0x3c,0x82006600},
+{0x40,0x9b2ae002},
+{0x44,0x80a32000},
+{0x48,0xc2236790},
+{0x4c,0x12800003},
+{0x50,0x98033fff},
+{0x54,0x98102008},
+{0x58,0x9602e001},
+{0x5c,0x80a2e008},
+{0x60,0x04bffff5},
+{0x64,0x832b2002},
+{0x68,0x0303ffd7},
+{0x6c,0x921063ff},
+{0x70,0x98102000},
+{0x74,0x96102000},
+{0x78,0x9b2ae002},
+{0x7c,0xc2036768},
+{0xf0,0x7a},
+{0x00,0x82084009},
+{0x04,0x9602e001},
+{0x08,0x952b2002},
+{0x0c,0x80a06000},
+{0x10,0x02800004},
+{0x14,0xc2236768},
+{0x18,0x98032001},
+{0x1c,0xc222a768},
+{0x20,0x80a2e009},
+{0x24,0x24bffff6},
+{0x28,0x9b2ae002},
+{0x2c,0x9610000c},
+{0x30,0x80a32009},
+{0x34,0x14800007},
+{0x38,0xd8202514},
+{0x3c,0x832ae002},
+{0x40,0x9602e001},
+{0x44,0x80a2e009},
+{0x48,0x04bffffd},
+{0x4c,0xc0206768},
+{0x50,0x81c3e008},
+{0x54,0x01000000},
+{0x58,0x9de3bf98},
+{0x5c,0xc20022f4},
+{0x60,0x8088600f},
+{0x64,0x02800049},
+{0x68,0xb0102000},
+{0x6c,0xc2002514},
+{0x70,0x80a60001},
+{0x74,0x1a800045},
+{0x78,0x033c003f},
+{0x7c,0x9e1063ff},
+{0xf0,0x7b},
+{0x00,0xb52e2002},
+{0x04,0xfa06a768},
+{0x08,0x8337600c},
+{0x0c,0x80886001},
+{0x10,0x3280003a},
+{0x14,0xb0062001},
+{0x18,0xb9376010},
+{0x1c,0xb80f2fff},
+{0x20,0x80a7201f},
+{0x24,0x2880001a},
+{0x28,0xfa06a768},
+{0x2c,0xc2002300},
+{0x30,0x83286006},
+{0x34,0x82007fe0},
+{0x38,0x80a70001},
+{0x3c,0x38800014},
+{0x40,0xfa06a768},
+{0x44,0x808f2020},
+{0x48,0x02800008},
+{0x4c,0xb60f3fe0},
+{0x50,0x8238001c},
+{0x54,0x8208601f},
+{0x58,0xc20862d4},
+{0x5c,0x8226c001},
+{0x60,0x10800005},
+{0x64,0x8200601f},
+{0x68,0x820f201f},
+{0x6c,0xc20862d4},
+{0x70,0x8206c001},
+{0x74,0x82086fff},
+{0x78,0x83286010},
+{0x7c,0xba0f400f},
+{0xf0,0x7c},
+{0x00,0xba174001},
+{0x04,0xfa26a768},
+{0x08,0xfa06a768},
+{0x0c,0xb80f6fff},
+{0x10,0x80a7201f},
+{0x14,0x28800019},
+{0x18,0xb0062001},
+{0x1c,0xc2002308},
+{0x20,0x83286006},
+{0x24,0x82007fe0},
+{0x28,0x80a70001},
+{0x2c,0x38800013},
+{0x30,0xb0062001},
+{0x34,0x808f6020},
+{0x38,0xb60f6fe0},
+{0x3c,0x02800008},
+{0x40,0xb20f7000},
+{0x44,0x8238001c},
+{0x48,0x8208601f},
+{0x4c,0xc2086254},
+{0x50,0x8226c001},
+{0x54,0x10800005},
+{0x58,0x8200601f},
+{0x5c,0x820f601f},
+{0x60,0xc2086254},
+{0x64,0x8206c001},
+{0x68,0x82086fff},
+{0x6c,0x82164001},
+{0x70,0xc226a768},
+{0x74,0xb0062001},
+{0x78,0xc2002514},
+{0x7c,0x80a60001},
+{0xf0,0x7d},
+{0x00,0x0abfffc1},
+{0x04,0xb52e2002},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x912a2002},
+{0x14,0xc2002794},
+{0x18,0xda004008},
+{0x1c,0x033c003c},
+{0x20,0x822b4001},
+{0x24,0x98102790},
+{0x28,0xda030000},
+{0x2c,0xc2234008},
+{0x30,0xd8030000},
+{0x34,0xda030008},
+{0x38,0x03000020},
+{0x3c,0x822b4001},
+{0x40,0x81c3e008},
+{0x44,0xc2230008},
+{0x48,0x912a2002},
+{0x4c,0xc2002790},
+{0x50,0xc0204008},
+{0x54,0xc2002794},
+{0x58,0xc2104008},
+{0x5c,0xda002798},
+{0x60,0xda134008},
+{0x64,0x82086fff},
+{0x68,0x94004001},
+{0x6c,0x9a0b6fff},
+{0x70,0x80a2800d},
+{0x74,0x18800003},
+{0x78,0x9422800d},
+{0x7c,0x94102000},
+{0xf0,0x7e},
+{0x00,0xd6002790},
+{0x04,0x9a0aafff},
+{0x08,0xd802c008},
+{0x0c,0x0303ffc0},
+{0x10,0x9b2b6010},
+{0x14,0x822b0001},
+{0x18,0x8210400d},
+{0x1c,0xc222c008},
+{0x20,0xc2002794},
+{0x24,0xc2004008},
+{0x28,0xda002798},
+{0x2c,0xda034008},
+{0x30,0x82086fff},
+{0x34,0x94004001},
+{0x38,0x9a0b6fff},
+{0x3c,0x80a2800d},
+{0x40,0x18800003},
+{0x44,0x9422800d},
+{0x48,0x94102000},
+{0x4c,0xd8002790},
+{0x50,0xc2030008},
+{0x54,0x9a0aafff},
+{0x58,0x82087000},
+{0x5c,0x8210400d},
+{0x60,0xc2230008},
+{0x64,0xd8002790},
+{0x68,0xc2030008},
+{0x6c,0x1b000020},
+{0x70,0x8210400d},
+{0x74,0x81c3e008},
+{0x78,0xc2230008},
+{0x7c,0x912a2002},
+{0xf0,0x7f},
+{0x00,0xc2002790},
+{0x04,0xc0204008},
+{0x08,0xc2002794},
+{0x0c,0xda104008},
+{0x10,0xc200279c},
+{0x14,0xd6104008},
+{0x18,0xc2002798},
+{0x1c,0x9a0b6fff},
+{0x20,0xd8104008},
+{0x24,0x832b6002},
+{0x28,0x8200400d},
+{0x2c,0x960aefff},
+{0x30,0x980b2fff},
+{0x34,0x8200400b},
+{0x38,0x992b2002},
+{0x3c,0x80a0400c},
+{0x40,0x18800003},
+{0x44,0x8220400c},
+{0x48,0x82102000},
+{0x4c,0xd6002790},
+{0x50,0x9b306001},
+{0x54,0xd802c008},
+{0x58,0x9a0b6fff},
+{0x5c,0x0303ffc0},
+{0x60,0x822b0001},
+{0x64,0x9b2b6010},
+{0x68,0x8210400d},
+{0x6c,0xc222c008},
+{0x70,0xc2002794},
+{0x74,0xda004008},
+{0x78,0xc200279c},
+{0x7c,0xd6004008},
+{0xf0,0x80},
+{0x00,0xc2002798},
+{0x04,0x9a0b6fff},
+{0x08,0xd8004008},
+{0x0c,0x832b6002},
+{0x10,0x8200400d},
+{0x14,0x960aefff},
+{0x18,0x980b2fff},
+{0x1c,0x8200400b},
+{0x20,0x992b2002},
+{0x24,0x80a0400c},
+{0x28,0x18800003},
+{0x2c,0x8220400c},
+{0x30,0x82102000},
+{0x34,0xd8002790},
+{0x38,0x9b306001},
+{0x3c,0xc2030008},
+{0x40,0x9a0b6fff},
+{0x44,0x82087000},
+{0x48,0x8210400d},
+{0x4c,0xc2230008},
+{0x50,0xd8002790},
+{0x54,0xc2030008},
+{0x58,0x1b000020},
+{0x5c,0x8210400d},
+{0x60,0x81c3e008},
+{0x64,0xc2230008},
+{0x68,0x9de3bf98},
+{0x6c,0xa2102000},
+{0x70,0xa12c6002},
+{0x74,0xc2002794},
+{0x78,0xc2004010},
+{0x7c,0x80a06000},
+{0xf0,0x81},
+{0x00,0x0280001f},
+{0x04,0x0303ffc3},
+{0x08,0xc2002798},
+{0x0c,0xc2004010},
+{0x10,0x80a06000},
+{0x14,0x0280000c},
+{0x18,0x01000000},
+{0x1c,0x8330600d},
+{0x20,0x80886001},
+{0x24,0x12800008},
+{0x28,0x01000000},
+{0x2c,0xc200279c},
+{0x30,0xda004010},
+{0x34,0x8333600d},
+{0x38,0x80886001},
+{0x3c,0x02800006},
+{0x40,0x80a36000},
+{0x44,0x7fffff73},
+{0x48,0x90100011},
+{0x4c,0x10800010},
+{0x50,0xc2002794},
+{0x54,0x02800006},
+{0x58,0x01000000},
+{0x5c,0x7fffffa8},
+{0x60,0x90100011},
+{0x64,0x1080000a},
+{0x68,0xc2002794},
+{0x6c,0x7fffff77},
+{0x70,0x90100011},
+{0x74,0x10800006},
+{0x78,0xc2002794},
+{0x7c,0x821063ff},
+{0xf0,0x82},
+{0x00,0xda002790},
+{0x04,0xc2234010},
+{0x08,0xc2002794},
+{0x0c,0xc2004010},
+{0x10,0x8330600c},
+{0x14,0x80886001},
+{0x18,0x02800007},
+{0x1c,0xa2046001},
+{0x20,0xc2002790},
+{0x24,0xda004010},
+{0x28,0x19000004},
+{0x2c,0x9a13400c},
+{0x30,0xda204010},
+{0x34,0x80a46009},
+{0x38,0x04bfffcf},
+{0x3c,0xa12c6002},
+{0x40,0x81c7e008},
+{0x44,0x81e80000},
+{0x48,0x031fffff},
+{0x4c,0x9002200c},
+{0x50,0x821063ff},
+{0x54,0x9a102063},
+{0x58,0xc2220000},
+{0x5c,0x9a837fff},
+{0x60,0x1cbffffe},
+{0x64,0x90022004},
+{0x68,0x81c3e008},
+{0x6c,0x01000000},
+{0x70,0x031fffff},
+{0x74,0x821063ff},
+{0x78,0xc2222008},
+{0x7c,0x92102000},
+{0xf0,0x83},
+{0x00,0x96100008},
+{0x04,0x94102000},
+{0x08,0x9a02e00c},
+{0x0c,0xd8034000},
+{0x10,0xc2022008},
+{0x14,0x80a30001},
+{0x18,0x16800005},
+{0x1c,0x9a036004},
+{0x20,0xd8222008},
+{0x24,0xd4220000},
+{0x28,0xd2222004},
+{0x2c,0x9402a001},
+{0x30,0x80a2a009},
+{0x34,0x24bffff7},
+{0x38,0xd8034000},
+{0x3c,0x92026001},
+{0x40,0x80a26009},
+{0x44,0x04bffff0},
+{0x48,0x9602e028},
+{0x4c,0xda022008},
+{0x50,0x03200000},
+{0x54,0x8238400d},
+{0x58,0x80a00001},
+{0x5c,0x81c3e008},
+{0x60,0x90402000},
+{0x64,0xc2022004},
+{0x68,0x9b286002},
+{0x6c,0x9a034001},
+{0x70,0x031fffff},
+{0x74,0x9b2b6003},
+{0x78,0x9a034008},
+{0x7c,0x981063ff},
+{0xf0,0x84},
+{0x00,0x9a03600c},
+{0x04,0x82102009},
+{0x08,0xd8234000},
+{0x0c,0x82807fff},
+{0x10,0x1cbffffe},
+{0x14,0x9a036004},
+{0x18,0xc2020000},
+{0x1c,0x83286002},
+{0x20,0x82004008},
+{0x24,0x8200600c},
+{0x28,0x9a102009},
+{0x2c,0xd8204000},
+{0x30,0x9a837fff},
+{0x34,0x1cbffffe},
+{0x38,0x82006028},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x98100008},
+{0x48,0x90102008},
+{0x4c,0x9a102100},
+{0x50,0x832b4008},
+{0x54,0x80a30001},
+{0x58,0x14800006},
+{0x5c,0x01000000},
+{0x60,0x90023fff},
+{0x64,0x80a22000},
+{0x68,0x14bffffb},
+{0x6c,0x832b4008},
+{0x70,0x81c3e008},
+{0x74,0x01000000},
+{0x78,0x9de3bdd0},
+{0x7c,0xae07be58},
+{0xf0,0x85},
+{0x00,0x7fffffb2},
+{0x04,0x90100017},
+{0x08,0xa6102000},
+{0x0c,0xa12ce002},
+{0x10,0xd2002790},
+{0x14,0xc2024010},
+{0x18,0x8330600f},
+{0x1c,0x80886001},
+{0x20,0x2280000f},
+{0x24,0xd000245c},
+{0x28,0xc2002794},
+{0x2c,0x90004010},
+{0x30,0xc2004010},
+{0x34,0x8330600d},
+{0x38,0x80886001},
+{0x3c,0x02800004},
+{0x40,0x92024010},
+{0x44,0x10800006},
+{0x48,0xd000245c},
+{0x4c,0x7ffffe29},
+{0x50,0x01000000},
+{0x54,0x7fffffdc},
+{0x58,0x01000000},
+{0x5c,0xc2002358},
+{0x60,0x9807bff8},
+{0x64,0x825a0001},
+{0x68,0x9a04000c},
+{0x6c,0xa604e001},
+{0x70,0x80a4e009},
+{0x74,0x08bfffe6},
+{0x78,0xc2237e38},
+{0x7c,0xac10000c},
+{0xf0,0x86},
+{0x00,0xa6102000},
+{0x04,0xa8102000},
+{0x08,0xea002790},
+{0x0c,0x0303ffc3},
+{0x10,0xda054014},
+{0x14,0x821063ff},
+{0x18,0x80a34001},
+{0x1c,0x22800014},
+{0x20,0xa604e001},
+{0x24,0xa2102000},
+{0x28,0xc2002514},
+{0x2c,0x80a44001},
+{0x30,0x3a80000f},
+{0x34,0xa604e001},
+{0x38,0xa005be6c},
+{0x3c,0xa4102768},
+{0x40,0x90100012},
+{0x44,0x7ffffe0b},
+{0x48,0x92054014},
+{0x4c,0xd0240000},
+{0x50,0xa2046001},
+{0x54,0xc2002514},
+{0x58,0x80a44001},
+{0x5c,0xa404a004},
+{0x60,0x0abffff8},
+{0x64,0xa0042028},
+{0x68,0xa604e001},
+{0x6c,0xa8052004},
+{0x70,0x80a4e009},
+{0x74,0x08bfffe5},
+{0x78,0xac05a004},
+{0x7c,0xa2102000},
+{0xf0,0x87},
+{0x00,0xc2002514},
+{0x04,0x80a44001},
+{0x08,0x1a80002d},
+{0x0c,0x01000000},
+{0x10,0x7fffff78},
+{0x14,0x90100017},
+{0x18,0x80a22000},
+{0x1c,0xa0046001},
+{0x20,0x02800027},
+{0x24,0x90100017},
+{0x28,0xd807be58},
+{0x2c,0x832b2002},
+{0x30,0x8200401e},
+{0x34,0xc2007e30},
+{0x38,0xda002230},
+{0x3c,0x9a034001},
+{0x40,0xc2002548},
+{0x44,0x9a5b4001},
+{0x48,0xc2002334},
+{0x4c,0x82006001},
+{0x50,0x81800000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x9a734001},
+{0x64,0xc207be60},
+{0x68,0x80a0400d},
+{0x6c,0x98032001},
+{0x70,0xc207be5c},
+{0x74,0x992b201c},
+{0x78,0x0a800007},
+{0x7c,0x95286002},
+{0xf0,0x88},
+{0x00,0xc202a768},
+{0x04,0x1b3c0000},
+{0x08,0x8210400d},
+{0x0c,0x10800008},
+{0x10,0xc222a768},
+{0x14,0xda02a768},
+{0x18,0x033c0000},
+{0x1c,0x822b4001},
+{0x20,0x8210400c},
+{0x24,0x7fffff70},
+{0x28,0xc222a768},
+{0x2c,0xc2002514},
+{0x30,0x80a40001},
+{0x34,0x0abfffd7},
+{0x38,0xa2100010},
+{0x3c,0x81c7e008},
+{0x40,0x81e80000},
+{0x44,0x92102000},
+{0x48,0xc2002514},
+{0x4c,0x80a24001},
+{0x50,0x1a80003a},
+{0x54,0x0303ffff},
+{0x58,0x901063ff},
+{0x5c,0x952a6002},
+{0x60,0xc202a768},
+{0x64,0x8330601c},
+{0x68,0x80a00001},
+{0x6c,0x9a603fff},
+{0x70,0x8218600f},
+{0x74,0x80a00001},
+{0x78,0x82603fff},
+{0x7c,0x80934001},
+{0xf0,0x89},
+{0x00,0x2280002a},
+{0x04,0x92026001},
+{0x08,0x9a102001},
+{0x0c,0x96102000},
+{0x10,0x992ae002},
+{0x14,0xc2032768},
+{0x18,0x8330601c},
+{0x1c,0x80a0400d},
+{0x20,0x02800013},
+{0x24,0x80a2e00a},
+{0x28,0xc2002794},
+{0x2c,0xc200400c},
+{0x30,0x8330601c},
+{0x34,0x80a0400d},
+{0x38,0x0280000d},
+{0x3c,0x80a2e00a},
+{0x40,0xc2002798},
+{0x44,0xc200400c},
+{0x48,0x8330601c},
+{0x4c,0x80a0400d},
+{0x50,0x02800007},
+{0x54,0x80a2e00a},
+{0x58,0x9602e001},
+{0x5c,0x80a2e009},
+{0x60,0x08bfffed},
+{0x64,0x992ae002},
+{0x68,0x80a2e00a},
+{0x6c,0x22800007},
+{0x70,0xd802a768},
+{0x74,0x9a036001},
+{0x78,0x80a3600a},
+{0x7c,0x08bfffe5},
+{0xf0,0x8a},
+{0x00,0x96102000},
+{0x04,0xd802a768},
+{0x08,0x8333200e},
+{0x0c,0x80886001},
+{0x10,0x12800006},
+{0x14,0x92026001},
+{0x18,0x9b2b601c},
+{0x1c,0x820b0008},
+{0x20,0x8210400d},
+{0x24,0xc222a768},
+{0x28,0xc2002514},
+{0x2c,0x80a24001},
+{0x30,0x0abfffcc},
+{0x34,0x952a6002},
+{0x38,0x81c3e008},
+{0x3c,0x01000000},
+{0x40,0x98102000},
+{0x44,0x9b2b2002},
+{0x48,0x98032001},
+{0x4c,0xc2002790},
+{0x50,0x80a32009},
+{0x54,0x08bffffc},
+{0x58,0xc020400d},
+{0x5c,0x98102000},
+{0x60,0xc2002514},
+{0x64,0x80a30001},
+{0x68,0x1a800012},
+{0x6c,0x033fffc7},
+{0x70,0x941063ff},
+{0x74,0x832b2002},
+{0x78,0xda006768},
+{0x7c,0x8333601c},
+{0xf0,0x8b},
+{0x00,0x82007fff},
+{0x04,0x98032001},
+{0x08,0x80a06009},
+{0x0c,0x97286002},
+{0x10,0x18800004},
+{0x14,0x9a0b400a},
+{0x18,0xc2002790},
+{0x1c,0xda20400b},
+{0x20,0xc2002514},
+{0x24,0x80a30001},
+{0x28,0x0abffff4},
+{0x2c,0x832b2002},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0x9de3bf98},
+{0x3c,0x92102000},
+{0x40,0x94026001},
+{0x44,0x80a2a009},
+{0x48,0x18800068},
+{0x4c,0x9610000a},
+{0x50,0x033c003f},
+{0x54,0x901063ff},
+{0x58,0xf6002790},
+{0x5c,0xb32ae002},
+{0x60,0xfa06c019},
+{0x64,0x80a76000},
+{0x68,0x2280005c},
+{0x6c,0x9602e001},
+{0x70,0xb52a6002},
+{0x74,0xc206c01a},
+{0x78,0x80a06000},
+{0x7c,0x22800057},
+{0xf0,0x8c},
+{0x00,0x9602e001},
+{0x04,0xda002794},
+{0x08,0xf0034019},
+{0x0c,0x80a62000},
+{0x10,0x22800052},
+{0x14,0x9602e001},
+{0x18,0xf803401a},
+{0x1c,0x80a72000},
+{0x20,0x2280004e},
+{0x24,0x9602e001},
+{0x28,0x83306010},
+{0x2c,0xbb376010},
+{0x30,0x98086fff},
+{0x34,0x9e0f6fff},
+{0x38,0x80a3000f},
+{0x3c,0x16800009},
+{0x40,0xbb372010},
+{0x44,0x83362010},
+{0x48,0xba0f6fff},
+{0x4c,0x82086fff},
+{0x50,0x80a74001},
+{0x54,0x3480000d},
+{0x58,0xc206c01a},
+{0x5c,0x80a3000f},
+{0x60,0x2480003e},
+{0x64,0x9602e001},
+{0x68,0xbb372010},
+{0x6c,0x83362010},
+{0x70,0xba0f6fff},
+{0x74,0x82086fff},
+{0x78,0x80a74001},
+{0x7c,0x36800037},
+{0xf0,0x8d},
+{0x00,0x9602e001},
+{0x04,0xc206c01a},
+{0x08,0xfa06c019},
+{0x0c,0xb0086fff},
+{0x10,0xb80f6fff},
+{0x14,0x80a6001c},
+{0x18,0x1680000a},
+{0x1c,0x01000000},
+{0x20,0xfa034019},
+{0x24,0xc203401a},
+{0x28,0x82086fff},
+{0x2c,0xba0f6fff},
+{0x30,0x80a0401d},
+{0x34,0x3480000e},
+{0x38,0xfa16c01a},
+{0x3c,0x80a6001c},
+{0x40,0x24800026},
+{0x44,0x9602e001},
+{0x48,0xc2002794},
+{0x4c,0xfa004019},
+{0x50,0xc200401a},
+{0x54,0x82086fff},
+{0x58,0xba0f6fff},
+{0x5c,0x80a0401d},
+{0x60,0x3680001e},
+{0x64,0x9602e001},
+{0x68,0xfa16c01a},
+{0x6c,0xf806c019},
+{0x70,0xba0f6fff},
+{0x74,0xbb2f6010},
+{0x78,0x820f0008},
+{0x7c,0x8210401d},
+{0xf0,0x8e},
+{0x00,0xc226c019},
+{0x04,0xf6002790},
+{0x08,0xc206c01a},
+{0x0c,0x3b03ffc0},
+{0x10,0xb80f001d},
+{0x14,0x82084008},
+{0x18,0x8210401c},
+{0x1c,0xc226c01a},
+{0x20,0xf8002790},
+{0x24,0xf6070019},
+{0x28,0xfa07001a},
+{0x2c,0xba0f6fff},
+{0x30,0x820ef000},
+{0x34,0x8210401d},
+{0x38,0xc2270019},
+{0x3c,0xfa002790},
+{0x40,0xc207401a},
+{0x44,0x82087000},
+{0x48,0xb60eefff},
+{0x4c,0x8210401b},
+{0x50,0xc227401a},
+{0x54,0x9602e001},
+{0x58,0x80a2e009},
+{0x5c,0x28bfffa0},
+{0x60,0xf6002790},
+{0x64,0x80a2a009},
+{0x68,0x08bfff96},
+{0x6c,0x9210000a},
+{0x70,0x81c7e008},
+{0x74,0x81e80000},
+{0x78,0x81c3e008},
+{0x7c,0x01000000},
+{0xf0,0x8f},
+{0x00,0xc0202514},
+{0x04,0x9a102000},
+{0x08,0x832b6002},
+{0x0c,0xc2020001},
+{0x10,0x80a06000},
+{0x14,0x02800005},
+{0x18,0x9a036001},
+{0x1c,0xc2002514},
+{0x20,0x82006001},
+{0x24,0xc2202514},
+{0x28,0x80a36009},
+{0x2c,0x04bffff8},
+{0x30,0x832b6002},
+{0x34,0x81c3e008},
+{0x38,0x01000000},
+{0x3c,0x9de3bf98},
+{0x40,0xa8102000},
+{0x44,0xa0102000},
+{0x48,0xc200235c},
+{0x4c,0x80a06000},
+{0x50,0x32800004},
+{0x54,0xc0242768},
+{0x58,0x1080005d},
+{0x5c,0xc2002790},
+{0x60,0xc2002790},
+{0x64,0xc2004010},
+{0x68,0x80a06000},
+{0x6c,0x02800019},
+{0x70,0xda04282c},
+{0x74,0x03300000},
+{0x78,0x808b4001},
+{0x7c,0x32800010},
+{0xf0,0x90},
+{0x00,0xc2002790},
+{0x04,0xda002514},
+{0x08,0x80a36000},
+{0x0c,0x22800053},
+{0x10,0xa8052001},
+{0x14,0x8203400d},
+{0x18,0x8200400d},
+{0x1c,0x82007ffd},
+{0x20,0xda00235c},
+{0x24,0x9b334001},
+{0x28,0x9a0b6007},
+{0x2c,0x03200000},
+{0x30,0x9a134001},
+{0x34,0xda24282c},
+{0x38,0xc2002790},
+{0x3c,0xc2004010},
+{0x40,0x80a06000},
+{0x44,0x32800007},
+{0x48,0xc204282c},
+{0x4c,0xda04282c},
+{0x50,0x03200000},
+{0x54,0x822b4001},
+{0x58,0xc224282c},
+{0x5c,0xc204282c},
+{0x60,0x1b300000},
+{0x64,0x9a08400d},
+{0x68,0x19200000},
+{0x6c,0x80a3400c},
+{0x70,0x12800019},
+{0x74,0xa40860ff},
+{0x78,0x9a102000},
+{0x7c,0x19000018},
+{0xf0,0x91},
+{0x00,0x832b6002},
+{0x04,0xc2006790},
+{0x08,0xc2004010},
+{0x0c,0x80a06000},
+{0x10,0x0280000a},
+{0x14,0x8088400c},
+{0x18,0x12800009},
+{0x1c,0x80a34012},
+{0x20,0x9a036001},
+{0x24,0x80a34012},
+{0x28,0x24bffff7},
+{0x2c,0x832b6002},
+{0x30,0x10800006},
+{0x34,0xc204282c},
+{0x38,0x80a34012},
+{0x3c,0x24800027},
+{0x40,0xa8052001},
+{0x44,0xc204282c},
+{0x48,0x1b100000},
+{0x4c,0x8210400d},
+{0x50,0xc224282c},
+{0x54,0xa32ca002},
+{0x58,0xd0046790},
+{0x5c,0xc2020010},
+{0x60,0x80a06000},
+{0x64,0x12800006},
+{0x68,0x03100000},
+{0x6c,0xda04282c},
+{0x70,0x822b4001},
+{0x74,0x10800018},
+{0x78,0xc224282c},
+{0x7c,0xe604282c},
+{0xf0,0x92},
+{0x00,0x8334e01e},
+{0x04,0x80886001},
+{0x08,0x22800014},
+{0x0c,0xa8052001},
+{0x10,0x80a4a000},
+{0x14,0x2280000e},
+{0x18,0xc2046790},
+{0x1c,0xd204678c},
+{0x20,0x90020010},
+{0x24,0x7ffffc93},
+{0x28,0x92024010},
+{0x2c,0x80a22008},
+{0x30,0x38800007},
+{0x34,0xc2046790},
+{0x38,0x820cfff0},
+{0x3c,0x9a04bfff},
+{0x40,0x8210400d},
+{0x44,0xc224282c},
+{0x48,0xc2046790},
+{0x4c,0xc2004010},
+{0x50,0xc2242768},
+{0x54,0xa8052001},
+{0x58,0x80a52009},
+{0x5c,0x04bfff9b},
+{0x60,0xa0042004},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x9de3bf98},
+{0x70,0xa6102000},
+{0x74,0xa12ce002},
+{0x78,0xda042768},
+{0x7c,0x80a36000},
+{0xf0,0x93},
+{0x00,0x12800008},
+{0x04,0x82102001},
+{0x08,0xc02427b4},
+{0x0c,0xda002550},
+{0x10,0x83284013},
+{0x14,0x822b4001},
+{0x18,0x1080001c},
+{0x1c,0xc2202550},
+{0x20,0xe80427b4},
+{0x24,0x80a52000},
+{0x28,0x12800004},
+{0x2c,0xa5284013},
+{0x30,0x10800016},
+{0x34,0xda2427b4},
+{0x38,0xe2002550},
+{0x3c,0x808c4012},
+{0x40,0x32800011},
+{0x44,0xc2042768},
+{0x48,0x8333600c},
+{0x4c,0x80886001},
+{0x50,0x3280000d},
+{0x54,0xc2042768},
+{0x58,0x90042768},
+{0x5c,0x7ffffc65},
+{0x60,0x920427b4},
+{0x64,0xc2002354},
+{0x68,0x80a20001},
+{0x6c,0x1a800004},
+{0x70,0x82144012},
+{0x74,0x10800005},
+{0x78,0xe8242768},
+{0x7c,0xc2202550},
+{0xf0,0x94},
+{0x00,0xc2042768},
+{0x04,0xc22427b4},
+{0x08,0xa604e001},
+{0x0c,0x80a4e009},
+{0x10,0x08bfffda},
+{0x14,0xa12ce002},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0xc2060000},
+{0x28,0xbb30600c},
+{0x2c,0xb9306010},
+{0x30,0xb80f2fff},
+{0x34,0xb08f6001},
+{0x38,0xb6086fff},
+{0x3c,0x12800014},
+{0x40,0x9f30601c},
+{0x44,0xc250229e},
+{0x48,0xfa5022a2},
+{0x4c,0x8226c001},
+{0x50,0xba27001d},
+{0x54,0xf850229c},
+{0x58,0xf65022a0},
+{0x5c,0x8258401c},
+{0x60,0xba5f401b},
+{0x64,0x82006800},
+{0x68,0xba076800},
+{0x6c,0xb938601f},
+{0x70,0xb73f601f},
+{0x74,0xb9372014},
+{0x78,0xb736e014},
+{0x7c,0x8200401c},
+{0xf0,0x95},
+{0x00,0xba07401b},
+{0x04,0xb738600c},
+{0x08,0xb93f600c},
+{0x0c,0xf4002324},
+{0x10,0xf2002328},
+{0x14,0xfa002308},
+{0x18,0xc2002300},
+{0x1c,0xb65ec01a},
+{0x20,0xbb2f6006},
+{0x24,0xb85f0019},
+{0x28,0x83286006},
+{0x2c,0x9b3ee01f},
+{0x30,0x81836000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0xb67ec01d},
+{0x44,0x9b3f201f},
+{0x48,0x81836000},
+{0x4c,0x01000000},
+{0x50,0x01000000},
+{0x54,0x01000000},
+{0x58,0xb87f0001},
+{0x5c,0x80a62000},
+{0x60,0x32800036},
+{0x64,0x3b03ffc0},
+{0x68,0xc20022a4},
+{0x6c,0x80a06000},
+{0x70,0x2280000b},
+{0x74,0xc20022a8},
+{0x78,0xc25022a6},
+{0x7c,0x80a6c001},
+{0xf0,0x96},
+{0x00,0x14800036},
+{0x04,0xb0102000},
+{0x08,0xc25022a4},
+{0x0c,0x80a6c001},
+{0x10,0x06800032},
+{0x14,0x01000000},
+{0x18,0xc20022a8},
+{0x1c,0x80a06000},
+{0x20,0x2280000b},
+{0x24,0xc2002294},
+{0x28,0xc25022aa},
+{0x2c,0x80a70001},
+{0x30,0x1480002a},
+{0x34,0xb0102000},
+{0x38,0xc25022a8},
+{0x3c,0x80a70001},
+{0x40,0x36800003},
+{0x44,0xc2002294},
+{0x48,0x30800024},
+{0x4c,0x80a6c001},
+{0x50,0x24800002},
+{0x54,0xb6006001},
+{0x58,0xba268001},
+{0x5c,0x80a6c01d},
+{0x60,0x3a800002},
+{0x64,0xb6077fff},
+{0x68,0x80a70001},
+{0x6c,0x24800002},
+{0x70,0xb8006001},
+{0x74,0x82264001},
+{0x78,0x80a70001},
+{0x7c,0x3a800002},
+{0xf0,0x97},
+{0x00,0xb8007fff},
+{0x04,0xc20023c8},
+{0x08,0x80886002},
+{0x0c,0x32800002},
+{0x10,0xb626801b},
+{0x14,0x80886004},
+{0x18,0x32800002},
+{0x1c,0xb826401c},
+{0x20,0x80886008},
+{0x24,0x02800005},
+{0x28,0x3b03ffc0},
+{0x2c,0xb61ec01c},
+{0x30,0xb81f001b},
+{0x34,0xb61ec01c},
+{0x38,0x832ee010},
+{0x3c,0x8208401d},
+{0x40,0xbb2be01c},
+{0x44,0xba074001},
+{0x48,0x0300003f},
+{0x4c,0x821063ff},
+{0x50,0x820f0001},
+{0x54,0xb0074001},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x9de3bf98},
+{0x64,0xda002514},
+{0x68,0xc2002284},
+{0x6c,0x80a34001},
+{0x70,0x0880000a},
+{0x74,0xa2102000},
+{0x78,0xc20023c8},
+{0x7c,0x80886001},
+{0xf0,0x98},
+{0x00,0x02800007},
+{0x04,0xa0102000},
+{0x08,0x033fc180},
+{0x0c,0xc0204000},
+{0x10,0x10800021},
+{0x14,0xc0202514},
+{0x18,0xa0102000},
+{0x1c,0x912c2002},
+{0x20,0xc2022768},
+{0x24,0x9b30601c},
+{0x28,0x80a36000},
+{0x2c,0x0280000f},
+{0x30,0xa0042001},
+{0x34,0xc2002284},
+{0x38,0x80a34001},
+{0x3c,0x1880000b},
+{0x40,0x90022768},
+{0x44,0x7fffff77},
+{0x48,0x01000000},
+{0x4c,0x80a22000},
+{0x50,0x02800007},
+{0x54,0x80a42009},
+{0x58,0xa2046001},
+{0x5c,0x9b2c6002},
+{0x60,0x033fc180},
+{0x64,0xd0234001},
+{0x68,0x80a42009},
+{0x6c,0x28bfffed},
+{0x70,0x912c2002},
+{0x74,0xc200254c},
+{0x78,0x80886001},
+{0x7c,0x22800003},
+{0xf0,0x99},
+{0x00,0xe2202514},
+{0x04,0xc0202514},
+{0x08,0xda002514},
+{0x0c,0x033fc180},
+{0x10,0xda204000},
+{0x14,0x81c7e008},
+{0x18,0x81e80000},
+{0x1c,0x9de3bf98},
+{0x20,0xe00021a4},
+{0x24,0x80a42000},
+{0x28,0x02800021},
+{0x2c,0x01000000},
+{0x30,0xe20021a8},
+{0x34,0x80a46000},
+{0x38,0x0280001d},
+{0x3c,0x01000000},
+{0x40,0xda002554},
+{0x44,0x80a37fff},
+{0x48,0x02800019},
+{0x4c,0x01000000},
+{0x50,0xc2002514},
+{0x54,0x80a06001},
+{0x58,0x38800015},
+{0x5c,0xc0202554},
+{0x60,0xd2002790},
+{0x64,0xc2024000},
+{0x68,0x80a06000},
+{0x6c,0x12800004},
+{0x70,0x80a36000},
+{0x74,0x1080000e},
+{0x78,0xc0202554},
+{0x7c,0x2280000c},
+{0xf0,0x9a},
+{0x00,0xc2202554},
+{0x04,0x7ffffb9b},
+{0x08,0x90102554},
+{0x0c,0x80a20010},
+{0x10,0x08800007},
+{0x14,0x01000000},
+{0x18,0xc200254c},
+{0x1c,0x82104011},
+{0x20,0xc220254c},
+{0x24,0x82103fff},
+{0x28,0xc2202554},
+{0x2c,0x81c7e008},
+{0x30,0x81e80000},
+{0x34,0xda002500},
+{0x38,0xc20021f0},
+{0x3c,0x80a34001},
+{0x40,0x18800015},
+{0x44,0x01000000},
+{0x48,0xd800254c},
+{0x4c,0x808b2400},
+{0x50,0x12800011},
+{0x54,0x01000000},
+{0x58,0xda002514},
+{0x5c,0xc20021e8},
+{0x60,0x80a34001},
+{0x64,0x2a80000c},
+{0x68,0xc02025a0},
+{0x6c,0x03000100},
+{0x70,0xda0025a0},
+{0x74,0x96130001},
+{0x78,0x9810000d},
+{0x7c,0x9a036001},
+{0xf0,0x9b},
+{0x00,0xc20021ec},
+{0x04,0x80a30001},
+{0x08,0x08800003},
+{0x0c,0xda2025a0},
+{0x10,0xd620254c},
+{0x14,0x81c3e008},
+{0x18,0x01000000},
+{0x1c,0x9de3bf98},
+{0x20,0xd0002320},
+{0x24,0x80a22000},
+{0x28,0x0280004b},
+{0x2c,0x01000000},
+{0x30,0xc200231c},
+{0x34,0x80a06000},
+{0x38,0x22800016},
+{0x3c,0xd800231c},
+{0x40,0x82063fff},
+{0x44,0x80a06001},
+{0x48,0x38800012},
+{0x4c,0xd800231c},
+{0x50,0xc2002318},
+{0x54,0x80a06000},
+{0x58,0x12800008},
+{0x5c,0x213fc000},
+{0x60,0xa0142020},
+{0x64,0x82102001},
+{0x68,0x7ffff127},
+{0x6c,0xc2240000},
+{0x70,0x10800007},
+{0x74,0xc0240000},
+{0x78,0xa0142020},
+{0x7c,0x7ffff122},
+{0xf0,0x9c},
+{0x00,0xc0240000},
+{0x04,0x82102001},
+{0x08,0xc2240000},
+{0x0c,0xd800231c},
+{0x10,0x80a0000c},
+{0x14,0x82603fff},
+{0x18,0x9a1e2001},
+{0x1c,0x80a0000d},
+{0x20,0x9a603fff},
+{0x24,0x8088400d},
+{0x28,0x0280000d},
+{0x2c,0x80a0000c},
+{0x30,0xc2002318},
+{0x34,0x80a06000},
+{0x38,0x12800006},
+{0x3c,0x033fc000},
+{0x40,0x9a102001},
+{0x44,0x82106020},
+{0x48,0x10800004},
+{0x4c,0xda204000},
+{0x50,0x82106020},
+{0x54,0xc0204000},
+{0x58,0x80a0000c},
+{0x5c,0x82603fff},
+{0x60,0x9a1e2002},
+{0x64,0x80a0000d},
+{0x68,0x9a603fff},
+{0x6c,0x8088400d},
+{0x70,0x0280000d},
+{0x74,0x80a62000},
+{0x78,0xc2002318},
+{0x7c,0x80a06000},
+{0xf0,0x9d},
+{0x00,0x12800005},
+{0x04,0x033fc000},
+{0x08,0x82106020},
+{0x0c,0x10800005},
+{0x10,0xc0204000},
+{0x14,0x9a102001},
+{0x18,0x82106020},
+{0x1c,0xda204000},
+{0x20,0x80a62000},
+{0x24,0x1280000c},
+{0x28,0x01000000},
+{0x2c,0xc2002318},
+{0x30,0x80a06000},
+{0x34,0x12800005},
+{0x38,0x033fc000},
+{0x3c,0x82106020},
+{0x40,0x10800005},
+{0x44,0xc0204000},
+{0x48,0x9a102001},
+{0x4c,0x82106020},
+{0x50,0xda204000},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf98},
+{0x60,0xc2002514},
+{0x64,0x80a06000},
+{0x68,0x1280000a},
+{0x6c,0x90102001},
+{0x70,0xc200254c},
+{0x74,0x9b306004},
+{0x78,0x83306003},
+{0x7c,0x82086001},
+{0xf0,0x9e},
+{0x00,0x9a0b6001},
+{0x04,0x80a0400d},
+{0x08,0x22800005},
+{0x0c,0xc200250c},
+{0x10,0x82102001},
+{0x14,0x10800009},
+{0x18,0xc220250c},
+{0x1c,0x80a06000},
+{0x20,0x02800008},
+{0x24,0x9a007fff},
+{0x28,0x80a36000},
+{0x2c,0xda20250c},
+{0x30,0x12800004},
+{0x34,0x90102002},
+{0x38,0x7fffff99},
+{0x3c,0x01000000},
+{0x40,0xc200254c},
+{0x44,0x9a004001},
+{0x48,0x9a0b6010},
+{0x4c,0x82087fef},
+{0x50,0x8210400d},
+{0x54,0xc220254c},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x9de3bf98},
+{0x64,0xda002500},
+{0x68,0xc20022d0},
+{0x6c,0x80a34001},
+{0x70,0x1880002f},
+{0x74,0x01000000},
+{0x78,0xc200254c},
+{0x7c,0x80886200},
+{0xf0,0x9f},
+{0x00,0x1280002b},
+{0x04,0x01000000},
+{0x08,0xc2002200},
+{0x0c,0x80a06000},
+{0x10,0x12800027},
+{0x14,0xa4102000},
+{0x18,0xd2002790},
+{0x1c,0x832ca002},
+{0x20,0xe2024001},
+{0x24,0x80a46000},
+{0x28,0x12800004},
+{0x2c,0xa12ca003},
+{0x30,0x1080001b},
+{0x34,0xc02427dc},
+{0x38,0x92024001},
+{0x3c,0xc20427dc},
+{0x40,0x80a06000},
+{0x44,0x02800008},
+{0x48,0x900427dc},
+{0x4c,0x7ffffae9},
+{0x50,0x01000000},
+{0x54,0xc20022ac},
+{0x58,0x80a20001},
+{0x5c,0x28800005},
+{0x60,0xc20427e0},
+{0x64,0xe22427dc},
+{0x68,0x1080000d},
+{0x6c,0xc02427e0},
+{0x70,0x82006001},
+{0x74,0xc22427e0},
+{0x78,0xda002378},
+{0x7c,0x80a0400d},
+{0xf0,0xa0},
+{0x00,0x28800008},
+{0x04,0xa404a001},
+{0x08,0x7ffff177},
+{0x0c,0x01000000},
+{0x10,0x7fffff63},
+{0x14,0x90102002},
+{0x18,0x30800005},
+{0x1c,0xa404a001},
+{0x20,0x80a4a009},
+{0x24,0x24bfffde},
+{0x28,0xd2002790},
+{0x2c,0x81c7e008},
+{0x30,0x81e80000},
+{0x34,0x01000000},
+{0x38,0x27001040},
+{0x3c,0xa614e00f},
+{0x40,0xe6a00040},
+{0x44,0x01000000},
+{0x48,0x81c3e008},
+{0x4c,0x01000000},
+{0x50,0x9de3bf98},
+{0x54,0xc2002508},
+{0x58,0x80a06000},
+{0x5c,0x0280000f},
+{0x60,0x1b3fc180},
+{0x64,0x82102001},
+{0x68,0x9a13603c},
+{0x6c,0xc2234000},
+{0x70,0xc2002508},
+{0x74,0x820860ff},
+{0x78,0x80a0605a},
+{0x7c,0x12800005},
+{0xf0,0xa1},
+{0x00,0x033fc180},
+{0x04,0x7fffffec},
+{0x08,0x01000000},
+{0x0c,0x30bffff9},
+{0x10,0x8210603c},
+{0x14,0xc0204000},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0x7ffff420},
+{0x28,0x01000000},
+{0x2c,0x7ffff4ae},
+{0x30,0x01000000},
+{0x34,0x7ffff4fa},
+{0x38,0x01000000},
+{0x3c,0x7ffff468},
+{0x40,0x01000000},
+{0x44,0x7ffff55e},
+{0x48,0x01000000},
+{0x4c,0x7ffff897},
+{0x50,0x01000000},
+{0x54,0x7ffff5b1},
+{0x58,0x01000000},
+{0x5c,0x7ffff78b},
+{0x60,0x01000000},
+{0x64,0x7ffff850},
+{0x68,0x90102001},
+{0x6c,0x7ffffa20},
+{0x70,0x01000000},
+{0x74,0x7ffff9c1},
+{0x78,0x01000000},
+{0x7c,0x7ffffb17},
+{0xf0,0xa2},
+{0x00,0x01000000},
+{0x04,0x7ffffaab},
+{0x08,0x01000000},
+{0x0c,0x7ffffd9d},
+{0x10,0x90102768},
+{0x14,0x7ffffadf},
+{0x18,0x01000000},
+{0x1c,0x7ffffbd3},
+{0x20,0x01000000},
+{0x24,0x7ffffc55},
+{0x28,0x01000000},
+{0x2c,0x7ffffcc6},
+{0x30,0x01000000},
+{0x34,0x7ffffd03},
+{0x38,0x01000000},
+{0x3c,0x7ffffd1f},
+{0x40,0x01000000},
+{0x44,0x7ffffd8f},
+{0x48,0xd0002790},
+{0x4c,0xc2002514},
+{0x50,0x7ffffd9b},
+{0x54,0xc2202518},
+{0x58,0x7ffffe05},
+{0x5c,0x01000000},
+{0x60,0x7ffffecf},
+{0x64,0x01000000},
+{0x68,0x7fffff7e},
+{0x6c,0x01000000},
+{0x70,0x7ffffef1},
+{0x74,0x01000000},
+{0x78,0x7ffffe9a},
+{0x7c,0x01000000},
+{0xf0,0xa3},
+{0x00,0x7fffff57},
+{0x04,0x01000000},
+{0x08,0x7fffffb2},
+{0x0c,0x81e80000},
+{0x10,0x01000000},
+{0x14,0x9de3bf98},
+{0x18,0xc2002544},
+{0x1c,0x82006001},
+{0x20,0xc2202544},
+{0x24,0x03000018},
+{0x28,0xb4106048},
+{0x2c,0x9e100018},
+{0x30,0x031fffdf},
+{0x34,0xb01063ff},
+{0x38,0xba102000},
+{0x3c,0xb72f6002},
+{0x40,0xc2002544},
+{0x44,0x80a06009},
+{0x48,0xb2076001},
+{0x4c,0x12800007},
+{0x50,0xb810001b},
+{0x54,0xc206c01a},
+{0x58,0x83306001},
+{0x5c,0x82084018},
+{0x60,0xc226c01a},
+{0x64,0xc2002544},
+{0x68,0x80a06008},
+{0x6c,0x08800006},
+{0x70,0xc207001a},
+{0x74,0xfa03c01c},
+{0x78,0xbb376001},
+{0x7c,0x10800003},
+{0xf0,0xa4},
+{0x00,0xba0f4018},
+{0x04,0xfa03c01c},
+{0x08,0x8200401d},
+{0x0c,0xc227001a},
+{0x10,0x80a66089},
+{0x14,0x08bfffea},
+{0x18,0xba100019},
+{0x1c,0x81c7e008},
+{0x20,0x81e80000},
+{0x24,0x9de3bf98},
+{0x28,0xc20022f8},
+{0x2c,0xfa00247c},
+{0x30,0x8258401d},
+{0x34,0x83306001},
+{0x38,0xb6102000},
+{0x3c,0x80a6c001},
+{0x40,0x1a80002d},
+{0x44,0x03000018},
+{0x48,0xb4106048},
+{0x4c,0x0300003f},
+{0x50,0xb01063ff},
+{0x54,0xc2002544},
+{0x58,0xb206e001},
+{0x5c,0x80a06008},
+{0x60,0xf8002548},
+{0x64,0x0880000d},
+{0x68,0xb72ee002},
+{0x6c,0xfa06c01a},
+{0x70,0x83376010},
+{0x74,0x82004001},
+{0x78,0xba0f4018},
+{0x7c,0x81800000},
+{0xf0,0xa5},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x8270401c},
+{0x10,0x1080000a},
+{0x14,0xba07401d},
+{0x18,0xfa06c01a},
+{0x1c,0x83376010},
+{0x20,0x81800000},
+{0x24,0x01000000},
+{0x28,0x01000000},
+{0x2c,0x01000000},
+{0x30,0x8270401c},
+{0x34,0xba0f4018},
+{0x38,0x81800000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0xba77401c},
+{0x4c,0x83286010},
+{0x50,0x8200401d},
+{0x54,0xc226c01a},
+{0x58,0xc20022f8},
+{0x5c,0xfa00247c},
+{0x60,0x8258401d},
+{0x64,0x83306001},
+{0x68,0x80a64001},
+{0x6c,0x0abfffda},
+{0x70,0xb6100019},
+{0x74,0xb6102001},
+{0x78,0xc20022fc},
+{0x7c,0x80a6c001},
+{0xf0,0xa6},
+{0x00,0x18800020},
+{0x04,0x19000018},
+{0x08,0x82132270},
+{0x0c,0x9a006004},
+{0x10,0xc20022f8},
+{0x14,0xb4102001},
+{0x18,0x80a68001},
+{0x1c,0x03000017},
+{0x20,0xb0106220},
+{0x24,0xb2132048},
+{0x28,0x18800011},
+{0x2c,0xc20ee37f},
+{0x30,0x9e004001},
+{0x34,0xb8036038},
+{0x38,0xfa16000f},
+{0x3c,0xc216400f},
+{0x40,0x8220401d},
+{0x44,0xc2270000},
+{0x48,0xfa00247c},
+{0x4c,0xba07401d},
+{0x50,0xb406a001},
+{0x54,0xc20022f8},
+{0x58,0xb006001d},
+{0x5c,0x80a68001},
+{0x60,0xb206401d},
+{0x64,0x08bffff5},
+{0x68,0xb8072038},
+{0x6c,0xb606e001},
+{0x70,0xc20022fc},
+{0x74,0x80a6c001},
+{0x78,0x08bfffe6},
+{0x7c,0x9a036004},
+{0xf0,0xa7},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0xd800254c},
+{0x0c,0x808b2020},
+{0x10,0x02800010},
+{0x14,0x033fc200},
+{0x18,0xda002298},
+{0x1c,0x82106070},
+{0x20,0xda204000},
+{0x24,0x980b3fdf},
+{0x28,0xd820254c},
+{0x2c,0x03000018},
+{0x30,0xc0202544},
+{0x34,0x98106048},
+{0x38,0x9a102000},
+{0x3c,0x832b6002},
+{0x40,0x9a036001},
+{0x44,0x80a36089},
+{0x48,0x08bffffd},
+{0x4c,0xc020400c},
+{0x50,0x81c3e008},
+{0x54,0x01000000},
+{0x58,0xc200247c},
+{0x5c,0xda0022f8},
+{0x60,0x8258400d},
+{0x64,0x97306001},
+{0x68,0x98102000},
+{0x6c,0x80a3000b},
+{0x70,0x1680000f},
+{0x74,0x03000017},
+{0x78,0x90106220},
+{0x7c,0x82006400},
+{0xf0,0xa8},
+{0x00,0x92106048},
+{0x04,0x0307ffc7},
+{0x08,0x941063ff},
+{0x0c,0x9b2b2002},
+{0x10,0xc2034009},
+{0x14,0x83306003},
+{0x18,0x8208400a},
+{0x1c,0x98032001},
+{0x20,0x80a3000b},
+{0x24,0x06bffffa},
+{0x28,0xc2234008},
+{0x2c,0x03000018},
+{0x30,0x9a106270},
+{0x34,0x98102000},
+{0x38,0x832b2002},
+{0x3c,0x98032001},
+{0x40,0x80a322d5},
+{0x44,0x04bffffd},
+{0x48,0xc020400d},
+{0x4c,0x81c3e008},
+{0x50,0x01000000},
+{0x54,0x9de3bf98},
+{0x58,0xc200253c},
+{0x5c,0x80a06000},
+{0x60,0x12800048},
+{0x64,0xb0102000},
+{0x68,0xd6002460},
+{0x6c,0x82102080},
+{0x70,0x80a2e000},
+{0x74,0x02800043},
+{0x78,0xc220256c},
+{0x7c,0x10800005},
+{0xf0,0xa9},
+{0x00,0xb0102001},
+{0x04,0xc220256c},
+{0x08,0x1080003e},
+{0x0c,0xf00e2468},
+{0x10,0xd80022fc},
+{0x14,0x80a6000c},
+{0x18,0x1880002d},
+{0x1c,0x9a102000},
+{0x20,0xd40022f8},
+{0x24,0x33000018},
+{0x28,0xb6102001},
+{0x2c,0x80a6c00a},
+{0x30,0x18800020},
+{0x34,0xb4102000},
+{0x38,0x832e2002},
+{0x3c,0xb8006038},
+{0x40,0xa0166270},
+{0x44,0x90166238},
+{0x48,0x921662a8},
+{0x4c,0xde0022f8},
+{0x50,0xfa070010},
+{0x54,0x80a7400b},
+{0x58,0x26800013},
+{0x5c,0xb606e001},
+{0x60,0x80a6e001},
+{0x64,0x22800007},
+{0x68,0xc20022f8},
+{0x6c,0xc2070008},
+{0x70,0x80a74001},
+{0x74,0x2480000c},
+{0x78,0xb606e001},
+{0x7c,0xc20022f8},
+{0xf0,0xaa},
+{0x00,0x80a6c001},
+{0x04,0x22800007},
+{0x08,0xb406a001},
+{0x0c,0xc2070009},
+{0x10,0x80a74001},
+{0x14,0x26800004},
+{0x18,0xb606e001},
+{0x1c,0xb406a001},
+{0x20,0xb606e001},
+{0x24,0x80a6c00f},
+{0x28,0x08bfffea},
+{0x2c,0xb8072038},
+{0x30,0x80a6800d},
+{0x34,0x34800002},
+{0x38,0x9a10001a},
+{0x3c,0xb0062001},
+{0x40,0x80a6000c},
+{0x44,0x28bfffda},
+{0x48,0xb6102001},
+{0x4c,0xb0102000},
+{0x50,0xc20e2464},
+{0x54,0x80a06000},
+{0x58,0x22800006},
+{0x5c,0xb0062001},
+{0x60,0x80a34001},
+{0x64,0x34bfffc8},
+{0x68,0xc20e2278},
+{0x6c,0xb0062001},
+{0x70,0x80a62003},
+{0x74,0x24bffff8},
+{0x78,0xc20e2464},
+{0x7c,0xb0102000},
+{0xf0,0xab},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0xda00247c},
+{0x0c,0xc20022f8},
+{0x10,0x8258400d},
+{0x14,0x83306001},
+{0x18,0x9a102000},
+{0x1c,0x80a34001},
+{0x20,0x1a800017},
+{0x24,0x03000018},
+{0x28,0x96106048},
+{0x2c,0xc2002544},
+{0x30,0x94036001},
+{0x34,0x80a06008},
+{0x38,0x9b2b6002},
+{0x3c,0x08800006},
+{0x40,0xd8002548},
+{0x44,0xc203400b},
+{0x48,0x8258400c},
+{0x4c,0x10800004},
+{0x50,0x83306001},
+{0x54,0xc203400b},
+{0x58,0x8258400c},
+{0x5c,0xc223400b},
+{0x60,0xda00247c},
+{0x64,0xc20022f8},
+{0x68,0x8258400d},
+{0x6c,0x83306001},
+{0x70,0x80a28001},
+{0x74,0x0abfffee},
+{0x78,0x9a10000a},
+{0x7c,0x81c3e008},
+{0xf0,0xac},
+{0x00,0x01000000},
+{0x04,0x9de3bf98},
+{0x08,0x7ffff025},
+{0x0c,0x01000000},
+{0x10,0xc2002574},
+{0x14,0x80a06000},
+{0x18,0x22800022},
+{0x1c,0xc2002578},
+{0x20,0x82007fff},
+{0x24,0x7ffffedc},
+{0x28,0xc2202574},
+{0x2c,0xc2002574},
+{0x30,0x80a06000},
+{0x34,0x3280001b},
+{0x38,0xc2002578},
+{0x3c,0xc200253c},
+{0x40,0xda002334},
+{0x44,0x8200400d},
+{0x48,0x82006001},
+{0x4c,0xc2202548},
+{0x50,0xc200254c},
+{0x54,0x80886002},
+{0x58,0x1280000f},
+{0x5c,0x01000000},
+{0x60,0x7fffff5e},
+{0x64,0x01000000},
+{0x68,0x033fc200},
+{0x6c,0xda00254c},
+{0x70,0xd8002334},
+{0x74,0xd600232c},
+{0x78,0x82106074},
+{0x7c,0xd6204000},
+{0xf0,0xad},
+{0x00,0x98032001},
+{0x04,0x9a136022},
+{0x08,0xd8202574},
+{0x0c,0x10800004},
+{0x10,0xda20254c},
+{0x14,0x7ffffee4},
+{0x18,0x01000000},
+{0x1c,0xc2002578},
+{0x20,0x80a06000},
+{0x24,0x12800019},
+{0x28,0x01000000},
+{0x2c,0xc2002574},
+{0x30,0x80a06000},
+{0x34,0x12800015},
+{0x38,0x01000000},
+{0x3c,0x7fffff66},
+{0x40,0x01000000},
+{0x44,0x80a22000},
+{0x48,0x1280000c},
+{0x4c,0xd020253c},
+{0x50,0xc2002334},
+{0x54,0x82006001},
+{0x58,0xda00254c},
+{0x5c,0xc2202574},
+{0x60,0x9a136020},
+{0x64,0x82102001},
+{0x68,0xda20254c},
+{0x6c,0xc2202578},
+{0x70,0x7ffff6cd},
+{0x74,0x91e82000},
+{0x78,0x7fffffa4},
+{0x7c,0x01000000},
+{0xf0,0xae},
+{0x00,0xc200253c},
+{0x04,0xc2202574},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x9de3bf98},
+{0x14,0xda00254c},
+{0x18,0x808b6020},
+{0x1c,0x0280001a},
+{0x20,0x033fc200},
+{0x24,0x82106030},
+{0x28,0xd8004000},
+{0x2c,0xc200257c},
+{0x30,0x80a30001},
+{0x34,0x03001000},
+{0x38,0xb0102002},
+{0x3c,0x02800003},
+{0x40,0x82134001},
+{0x44,0xc220254c},
+{0x48,0xc2002344},
+{0x4c,0x80a30001},
+{0x50,0x32800007},
+{0x54,0xc208254d},
+{0x58,0x7ffff027},
+{0x5c,0x01000000},
+{0x60,0x7ffff080},
+{0x64,0x01000000},
+{0x68,0xc208254d},
+{0x6c,0x80a06000},
+{0x70,0x02800005},
+{0x74,0x01000000},
+{0x78,0xc0202500},
+{0x7c,0x7ffffd88},
+{0xf0,0xaf},
+{0x00,0x81e80000},
+{0x04,0x01000000},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x9de3bf98},
+{0x14,0x7ffffe28},
+{0x18,0x01000000},
+{0x1c,0x033fc040},
+{0x20,0xe0002500},
+{0x24,0x8210600c},
+{0x28,0x80a42016},
+{0x2c,0x0880000a},
+{0x30,0xc0204000},
+{0x34,0x7ffffef5},
+{0x38,0x01000000},
+{0x3c,0x7fffff92},
+{0x40,0x01000000},
+{0x44,0x7fffffd3},
+{0x48,0x01000000},
+{0x4c,0x10800025},
+{0x50,0xc2002500},
+{0x54,0x80a42000},
+{0x58,0x12800011},
+{0x5c,0x80a42014},
+{0x60,0x7fffef81},
+{0x64,0x90102000},
+{0x68,0x7fffeed3},
+{0x6c,0x01000000},
+{0x70,0x7ffff126},
+{0x74,0x01000000},
+{0x78,0x7fffef53},
+{0x7c,0x01000000},
+{0xf0,0xb0},
+{0x00,0x80a22000},
+{0x04,0x32800017},
+{0x08,0xc2002500},
+{0x0c,0x7ffffd64},
+{0x10,0x90102001},
+{0x14,0x10800013},
+{0x18,0xc2002500},
+{0x1c,0x1880000c},
+{0x20,0x80a42015},
+{0x24,0x808c2001},
+{0x28,0x3280000e},
+{0x2c,0xc2002500},
+{0x30,0x90043ff8},
+{0x34,0x7ffff0b8},
+{0x38,0x91322001},
+{0x3c,0x7ffff113},
+{0x40,0x01000000},
+{0x44,0x10800007},
+{0x48,0xc2002500},
+{0x4c,0x32800005},
+{0x50,0xc2002500},
+{0x54,0x7fffeea7},
+{0x58,0x90102000},
+{0x5c,0xc2002500},
+{0x60,0x80a40001},
+{0x64,0x3280000c},
+{0x68,0xc0202578},
+{0x6c,0x031fffff},
+{0x70,0x821063f0},
+{0x74,0x80a40001},
+{0x78,0x38800003},
+{0x7c,0x21040000},
+{0xf0,0xb1},
+{0x00,0xa0042001},
+{0x04,0x033fc180},
+{0x08,0x82106034},
+{0x0c,0xe0204000},
+{0x10,0xe0202500},
+{0x14,0xc2002578},
+{0x18,0x80a06000},
+{0x1c,0x02800005},
+{0x20,0x01000000},
+{0x24,0x7ffffdff},
+{0x28,0x01000000},
+{0x2c,0xc0202578},
+{0x30,0x81c7e008},
+{0x34,0x81e80000},
+{0x38,0x81c3e008},
+{0x3c,0x01000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xb2},
+{0x00,0x00001682},
+{0x04,0x00000000},
+{0x08,0x49444142},
+{0x0c,0x43415345},
+{0x10,0x4b455953},
+{0x14,0x4e454152},
+{0x18,0x4156474e},
+{0x1c,0x47525752},
+{0x20,0x52534d41},
+{0x24,0x52534e55},
+{0x28,0x52465641},
+{0x2c,0x5244524f},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x41707220},
+{0x3c,0x32352032},
+{0x40,0x30313300},
+{0x44,0x00000000},
+{0x48,0x31353a33},
+{0x4c,0x373a3038},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+};
+
+#endif
diff --git a/drivers/input/touchscreen/GSL3680/Makefile b/drivers/input/touchscreen/GSL3680/Makefile
new file mode 100755
index 0000000..b4e2ec0
--- /dev/null
+++ b/drivers/input/touchscreen/GSL3680/Makefile
@@ -0,0 +1,7 @@
+#
+# Makefile for the gsl3680 tp driver
+#
+
+obj-$(CONFIG_TOUCHSCREEN_GSL3680)		  += ctp_gsl3680.o
+ctp_gsl3680-objs := gsl3680.o
+
diff --git a/drivers/input/touchscreen/GSL3680/gsl3680.c b/drivers/input/touchscreen/GSL3680/gsl3680.c
new file mode 100755
index 0000000..6336cbd
--- /dev/null
+++ b/drivers/input/touchscreen/GSL3680/gsl3680.c
@@ -0,0 +1,1641 @@
+/*
+ * drivers/input/touchscreen/gslX680.c
+ *
+ * Copyright (c) 2012 Shanghai Basewin
+ *	Guan Yuwei<guanyuwei@basewin.com>
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License version 2 as
+ *  published by the Free Software Foundation.
+ */
+
+
+
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/input.h>
+#include <linux/interrupt.h>
+#include <linux/i2c.h>
+#include <linux/delay.h>
+//#include <mach/gpio.h>
+//#include <mach/gpio_data.h>
+#include <linux/jiffies.h>
+#include <linux/cdev.h>
+#include <asm/uaccess.h>
+#include <linux/pm_runtime.h>
+#include <linux/regulator/consumer.h>
+
+#if defined(CONFIG_HAS_EARLYSUSPEND)
+#include <linux/earlysuspend.h>
+#endif
+#include <linux/errno.h>
+#include <linux/kernel.h>
+
+#include <linux/platform_device.h>
+#include <linux/async.h>
+#include <linux/hrtimer.h>
+#include <linux/init.h>
+#include <linux/ioport.h>
+#include <asm/irq.h>
+#include <asm/io.h>
+#include <linux/gpio.h>
+#include <asm/prom.h>
+#include <mach/gpio.h>
+#include <linux/input/mt.h>
+#include <linux/of_gpio.h>
+#include <linux/of_irq.h>
+
+#include "gsl3680.h"
+
+//#include <mach/irqs.h>
+//#include <mach/system.h>
+//#include <mach/hardware.h>
+
+#define CFG_TP_USE_CONFIG 1
+
+//default value
+#define GSLX680_I2C_NAME 	"gslX680"
+#define GSLX680_I2C_ADDR 	0x40
+
+#define TP_RESET_PIN        OWL_GPIO_PORTB(3)
+#define TP_I2C_ADAPTER    (1)
+#define TP_I2C_ADDR         GSLX680_I2C_ADDR
+#define TP_NAME			    GSLX680_I2C_NAME
+
+#if CFG_TP_USE_CONFIG
+#define TP_IRQ_PORT	  		OWL_EXT_IRQ_SIRQ0
+#endif
+
+#define TP_MAX_X              SCREEN_MAX_X
+#define TP_MAX_Y              SCREEN_MAX_Y
+static unsigned gpio_reset = 0;
+
+//static struct i2c_client *gsl_ts_device;
+
+
+#if CFG_TP_USE_CONFIG
+struct tp_cfg_dts {
+	unsigned int sirq;
+	unsigned int i2cNum;
+	unsigned int i2cAddr;
+	unsigned int xMax;
+	unsigned int yMax;
+	unsigned int rotate; 
+	unsigned int xRevert;
+	unsigned int yRevert;
+	unsigned int XYSwap;
+	char const *regulator;
+	unsigned int vol_max;
+	unsigned int vol_min;
+};
+static struct tp_cfg_dts cfg_dts;
+#endif
+
+#define RESUME_INIT_CHIP_WORK
+//#define GSL_DEBUG
+
+#define REPORT_DATA_PROTOCOL_B
+
+//#define HAVE_TOUCH_KEY
+#define SLEEP_CLEAR_POINT
+#define FILTER_POINT	/*\B7\C0\B6\B6*/
+#define RECORD_POINT
+#ifdef FILTER_POINT
+#define FILTER_MAX	9	
+#endif
+
+
+#define GSL_DATA_REG		0x80
+#define GSL_STATUS_REG		0xe0
+#define GSL_PAGE_REG		0xf0
+
+#define PRESS_MAX    		255
+#define MAX_FINGERS 		10
+#define MAX_CONTACTS 		10	//\C8\E7\B9\FBֻ\BF\AA5\B8\F6\CA\D6ָ\A3\ACID\BA\C5Ҳ\BF\C9\C4ܴ\F3\D3\DA5
+#define DMA_TRANS_LEN		0x10	//һ\B4\CE\CF\C2\D4ض\E0\C9ټĴ\E6\C6\F7\A3\AC0x20\CA\C7һҳ32X4\D7ֽ\DA
+
+struct mutex mutex;
+
+static int power_is_on = 0;
+
+#define GSL_MONITOR
+#ifdef GSL_MONITOR
+static struct delayed_work gsl_monitor_work;
+static struct workqueue_struct *gsl_monitor_workqueue = NULL;
+static char int_1st[4] = {0};
+static char int_2nd[4] = {0};
+static char bc_counter = 0;
+static char b0_counter = 0;
+static char i2c_lock_flag = 0;
+#endif 
+static struct i2c_client *gsl_client = NULL;
+
+static struct gsl_ts *this_ts = NULL;
+
+#ifdef HAVE_TOUCH_KEY
+static u16 key = 0;
+
+static int key_state_flag = 0;
+struct key_data {
+	u16 key;
+	u16 x_min;
+	u16 x_max;
+	u16 y_min;
+	u16 y_max;
+};
+
+const u16 key_array[]={
+	KEY_BACK,
+	KEY_HOME,
+	KEY_MENU,
+	KEY_SEARCH,
+}; 
+#define MAX_KEY_NUM     (sizeof(key_array)/sizeof(key_array[0]))
+
+struct key_data gsl_key_data[MAX_KEY_NUM] = {
+	{KEY_BACK, 2048, 2048, 2048, 2048},
+	{KEY_HOME, 2048, 2048, 2048, 2048},	
+	{KEY_MENU, 2048, 2048, 2048, 2048},
+	{KEY_SEARCH, 2048, 2048, 2048, 2048},
+};
+#endif
+
+struct gsl_ts_data {
+	u8 x_index;
+	u8 y_index;
+	u8 z_index;
+	u8 id_index;
+	u8 touch_index;
+	u8 data_reg;
+	u8 status_reg;
+	u8 data_size;
+	u8 touch_bytes;
+	u8 update_data;
+	u8 touch_meta_data;
+	u8 finger_size;
+};
+
+static struct gsl_ts_data devices[] = {
+	{
+		.x_index = 6,
+		.y_index = 4,
+		.z_index = 5,
+		.id_index = 7,
+		.data_reg = GSL_DATA_REG,
+		.status_reg = GSL_STATUS_REG,
+		.update_data = 0x4,
+		.touch_bytes = 4,
+		.touch_meta_data = 4,
+		.finger_size = 70,
+	},
+};
+
+struct gsl_ts {
+	struct i2c_client *client;
+	struct input_dev *input;
+	struct work_struct work;
+	struct workqueue_struct *wq;
+#ifdef RESUME_INIT_CHIP_WORK
+	struct work_struct init_work;
+	struct workqueue_struct *init_wq;
+#endif
+//    struct work_struct gsl_init_work;
+//    struct workqueue_struct *gsl_init_workqueue;
+
+	struct gsl_ts_data *dd;
+	u8 *touch_data;
+	u8 device_id;
+	int irq;
+#if defined(CONFIG_HAS_EARLYSUSPEND)
+	struct early_suspend early_suspend;
+#endif
+};
+
+#ifdef GSL_DEBUG 
+#define print_info(fmt, args...)   \
+        do{                              \
+                printk(fmt, ##args);     \
+        }while(0)
+#else
+#define print_info(fmt, args...)
+#endif
+
+static u32 id_sign[MAX_CONTACTS+1] = {0};
+static u8 id_state_flag[MAX_CONTACTS+1] = {0};
+static u8 id_state_old_flag[MAX_CONTACTS+1] = {0};
+static u16 x_old[MAX_CONTACTS+1] = {0};
+static u16 y_old[MAX_CONTACTS+1] = {0};
+static u16 x_new = 0;
+static u16 y_new = 0;
+
+////POWER
+#define CTP_POWER_ID			("ldo5")
+#define CTP_POWER_MIN_VOL	(3100000)
+#define CTP_POWER_MAX_VOL	(3110000)
+static char ctp_power_name[] = CTP_POWER_ID;
+	
+volatile int current_val = 0;
+
+static struct regulator *tp_regulator = NULL;
+static inline void regulator_deinit(struct regulator *);
+static struct regulator *regulator_init(const char *, int, int);
+
+static struct regulator *regulator_init(const char *name, int minvol, int maxvol)
+{
+	struct regulator *power;
+	int ret;
+
+	power = regulator_get(NULL,name);
+    	if (IS_ERR(power)) {
+		printk("Nova err,regulator_get fail\n!!!");
+		return NULL;
+	}
+ 
+	if (regulator_set_voltage(power, minvol, maxvol)) {
+        	printk("Nova err,cannot set voltage\n!!!");
+        	regulator_put(power);
+        
+		return NULL;
+	}
+	ret = regulator_enable(power);
+	return (power);
+}
+
+static inline void regulator_deinit(struct regulator *power)
+{
+	regulator_disable(power);
+	regulator_put(power);
+}
+
+
+static int gslX680_init(void)
+{
+    gpio_direction_output(gpio_reset, 1);
+      	
+	return 0;
+}
+
+static int gslX680_shutdown_low(void)
+{
+	gpio_direction_output(gpio_reset, 0);
+	return 0;
+}
+
+static int gslX680_shutdown_high(void)
+{
+	gpio_direction_output(gpio_reset, 1);
+	return 0;
+}
+
+static inline u16 join_bytes(u8 a, u8 b)
+{
+	u16 ab = 0;
+	ab = ab | a;
+	ab = ab << 8 | b;
+	return ab;
+}
+/*
+static u32 gsl_read_interface(struct i2c_client *client, u8 reg, u8 *buf, u32 num)
+{
+	struct i2c_msg xfer_msg[2];
+
+	xfer_msg[0].addr = client->addr;
+	xfer_msg[0].len = 1;
+	xfer_msg[0].flags = 0x00;
+	xfer_msg[0].buf = &reg;
+
+	xfer_msg[1].addr = client->addr;
+	xfer_msg[1].len = num;
+	xfer_msg[1].flags |= I2C_M_RD;
+	xfer_msg[1].buf = buf;
+
+	if (reg < 0x80) {
+		i2c_transfer(client->adapter, xfer_msg, ARRAY_SIZE(xfer_msg));
+		msleep(5);
+	}
+
+	return i2c_transfer(client->adapter, xfer_msg, ARRAY_SIZE(xfer_msg)) == ARRAY_SIZE(xfer_msg) ? 0 : -EFAULT;
+}
+*/
+
+static u32 gsl_write_interface(struct i2c_client *client, const u8 reg, u8 *buf, u32 num)
+{
+	struct i2c_msg xfer_msg[1];
+
+	buf[0] = reg;
+
+	xfer_msg[0].addr = client->addr;
+	xfer_msg[0].len = num + 1;
+	xfer_msg[0].flags =0x00;
+	xfer_msg[0].buf = buf;
+
+	return i2c_transfer(client->adapter, xfer_msg, 1) == 1 ? 0 : -EFAULT;
+}
+
+static int gsl_ts_write(struct i2c_client *client, u8 addr, u8 *pdata, int datalen)
+{
+	int ret = 0;
+	u8 tmp_buf[128];
+	unsigned int bytelen = 0;
+	if (datalen > 125)
+	{
+		printk("%s too big datalen = %d!\n", __func__, datalen);
+		return -1;
+	}
+	
+	tmp_buf[0] = addr;
+	bytelen++;
+	
+	if (datalen != 0 && pdata != NULL)
+	{
+		memcpy(&tmp_buf[bytelen], pdata, datalen);
+		bytelen += datalen;
+	}
+	
+	ret = i2c_master_send(client, tmp_buf, bytelen);
+	return ret;
+}
+
+static int gsl_ts_read(struct i2c_client *client, u8 addr, u8 *pdata, unsigned int datalen)
+{
+	int ret = 0;
+
+	if (datalen > 126)
+	{
+		printk("%s too big datalen = %d!\n", __func__, datalen);
+		return -1;
+	}
+
+	ret = gsl_ts_write(client, addr, NULL, 0);
+	if (ret < 0)
+	{
+		printk("%s set data address fail!\n", __func__);
+		return ret;
+	}
+	
+	return i2c_master_recv(client, pdata, datalen);
+}
+
+static __inline__ void fw2buf(u8 *buf, const u32 *fw)
+{
+	u32 *u32_buf = (int *)buf;
+	*u32_buf = *fw;
+}
+
+static void gsl_load_fw(struct i2c_client *client)
+{
+	u8 buf[DMA_TRANS_LEN*4 + 1] = {0};
+	u8 send_flag = 1;
+	u8 *cur = buf + 1;
+	u32 source_line = 0;
+	u32 source_len;
+	struct fw_data *ptr_fw;
+	
+	printk("=============gsl_load_fw start==============\n");
+
+	ptr_fw = (struct fw_data *)GSLX680_FW;
+	source_len = ARRAY_SIZE(GSLX680_FW);
+
+	for (source_line = 0; source_line < source_len; source_line++) 
+	{
+		/* init page trans, set the page val */
+		if (GSL_PAGE_REG == ptr_fw[source_line].offset)
+		{
+			fw2buf(cur, &ptr_fw[source_line].val);
+			gsl_write_interface(client, GSL_PAGE_REG, buf, 4);
+			send_flag = 1;
+		}
+		else 
+		{
+			if (1 == send_flag % (DMA_TRANS_LEN < 0x20 ? DMA_TRANS_LEN : 0x20))
+	    			buf[0] = (u8)ptr_fw[source_line].offset;
+
+			fw2buf(cur, &ptr_fw[source_line].val);
+			cur += 4;
+
+			if (0 == send_flag % (DMA_TRANS_LEN < 0x20 ? DMA_TRANS_LEN : 0x20)) 
+			{
+	    			gsl_write_interface(client, buf[0], buf, cur - buf - 1);
+	    			cur = buf + 1;
+			}
+
+			send_flag++;
+		}
+	}
+
+	printk("=============gsl_load_fw end==============\n");
+
+}
+
+
+static int test_i2c(struct i2c_client *client)
+{
+	u8 read_buf = 0;
+	u8 write_buf = 0x12;
+	int ret, rc = 1;
+	
+	ret = gsl_ts_read( client, 0xf0, &read_buf, sizeof(read_buf) );
+	if  (ret  < 0)  
+    		rc --;
+	else
+		printk("I read reg 0xf0 is %x\n", read_buf);
+	
+	msleep(2);
+	ret = gsl_ts_write(client, 0xf0, &write_buf, sizeof(write_buf));
+	if(ret  >=  0 )
+		printk("I write reg 0xf0 0x12\n");
+	
+	msleep(2);
+	ret = gsl_ts_read( client, 0xf0, &read_buf, sizeof(read_buf) );
+	if(ret <  0 )
+		rc --;
+	else
+		printk("I read reg 0xf0 is 0x%x\n", read_buf);
+
+	return rc;
+}
+
+static void startup_chip(struct i2c_client *client)
+{
+	u8 tmp = 0x00;
+
+	gsl_ts_write(client, 0xe0, &tmp, 1);
+	msleep(10);	
+#ifdef GSL_NOID_VERSION
+	gsl_DataInit(gsl_config_data_id);
+#endif
+}
+
+static void reset_chip(struct i2c_client *client)
+{
+	u8 tmp = 0x88;
+	u8 buf[4] = {0x00};
+	
+	gsl_ts_write(client, 0xe0, &tmp, sizeof(tmp));
+	msleep(10);
+	tmp = 0x04;
+	gsl_ts_write(client, 0xe4, &tmp, sizeof(tmp));
+	msleep(5);
+	gsl_ts_write(client, 0xbc, buf, sizeof(buf));
+	msleep(2);
+}
+
+static void clr_reg(struct i2c_client *client)
+{
+	u8 write_buf[4]	= {0};
+
+	write_buf[0] = 0x88;
+	gsl_ts_write(client, 0xe0, &write_buf[0], 1); 	
+	msleep(10);
+	write_buf[0] = 0x03;
+	gsl_ts_write(client, 0x80, &write_buf[0], 1); 	
+	msleep(5);
+	write_buf[0] = 0x04;
+	gsl_ts_write(client, 0xe4, &write_buf[0], 1); 	
+	msleep(5);
+	write_buf[0] = 0x00;
+	gsl_ts_write(client, 0xe0, &write_buf[0], 1); 	
+	msleep(10);
+}
+
+static void init_chip(struct i2c_client *client)
+{
+	int rc;
+	
+	gslX680_shutdown_low();	
+	msleep(20); 	
+	gslX680_shutdown_high();	
+	msleep(20); 		
+	rc = test_i2c(client);
+	if(rc < 0)
+	{
+		printk("------gslX680 test_i2c error------\n");	
+		return;
+	}	
+	clr_reg(client);
+	reset_chip(client);
+	gsl_load_fw(client);			
+	startup_chip(client);	
+	reset_chip(client);	
+	startup_chip(client);	
+}
+
+static void check_mem_data(struct i2c_client *client)
+{
+	u8 read_buf[4]  = {0};
+	
+	msleep(30);
+	gsl_ts_read(client,0xb0, read_buf, sizeof(read_buf));
+	
+	if (read_buf[3] != 0x5a || read_buf[2] != 0x5a || read_buf[1] != 0x5a || read_buf[0] != 0x5a)
+	{
+		printk("#########check mem read 0xb0 = %x %x %x %x #########\n", read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		init_chip(client);
+	}
+}
+
+#ifdef FILTER_POINT
+static void filter_point(u16 x, u16 y , u8 id)
+{
+	u16 x_err =0;
+	u16 y_err =0;
+	u16 filter_step_x = 0, filter_step_y = 0;
+	
+	id_sign[id] = id_sign[id] + 1;
+	if(id_sign[id] == 1)
+	{
+		x_old[id] = x;
+		y_old[id] = y;
+	}
+	
+	x_err = x > x_old[id] ? (x -x_old[id]) : (x_old[id] - x);
+	y_err = y > y_old[id] ? (y -y_old[id]) : (y_old[id] - y);
+
+	if( (x_err > FILTER_MAX && y_err > FILTER_MAX/3) || (x_err > FILTER_MAX/3 && y_err > FILTER_MAX) )
+	{
+		filter_step_x = x_err;
+		filter_step_y = y_err;
+	}
+	else
+	{
+		if(x_err > FILTER_MAX)
+			filter_step_x = x_err; 
+		if(y_err> FILTER_MAX)
+			filter_step_y = y_err;
+	}
+
+	if(x_err <= 2*FILTER_MAX && y_err <= 2*FILTER_MAX)
+	{
+		filter_step_x >>= 2; 
+		filter_step_y >>= 2;
+	}
+	else if(x_err <= 3*FILTER_MAX && y_err <= 3*FILTER_MAX)
+	{
+		filter_step_x >>= 1; 
+		filter_step_y >>= 1;
+	}	
+	else if(x_err <= 4*FILTER_MAX && y_err <= 4*FILTER_MAX)
+	{
+		filter_step_x = filter_step_x*3/4; 
+		filter_step_y = filter_step_y*3/4;
+	}	
+	
+	x_new = x > x_old[id] ? (x_old[id] + filter_step_x) : (x_old[id] - filter_step_x);
+	y_new = y > y_old[id] ? (y_old[id] + filter_step_y) : (y_old[id] - filter_step_y);
+
+	x_old[id] = x_new;
+	y_old[id] = y_new;
+}
+#else
+static void record_point(u16 x, u16 y , u8 id)
+{
+	u16 x_err =0;
+	u16 y_err =0;
+
+	id_sign[id]=id_sign[id]+1;
+	
+	if(id_sign[id]==1){
+		x_old[id]=x;
+		y_old[id]=y;
+	}
+
+	x = (x_old[id] + x)/2;
+	y = (y_old[id] + y)/2;
+		
+	if(x>x_old[id]){
+		x_err=x -x_old[id];
+	}
+	else{
+		x_err=x_old[id]-x;
+	}
+
+	if(y>y_old[id]){
+		y_err=y -y_old[id];
+	}
+	else{
+		y_err=y_old[id]-y;
+	}
+
+	if( (x_err > 3 && y_err > 1) || (x_err > 1 && y_err > 3) ){
+		x_new = x;     x_old[id] = x;
+		y_new = y;     y_old[id] = y;
+	}
+	else{
+		if(x_err > 3){
+			x_new = x;     x_old[id] = x;
+		}
+		else
+			x_new = x_old[id];
+		if(y_err> 3){
+			y_new = y;     y_old[id] = y;
+		}
+		else
+			y_new = y_old[id];
+	}
+
+	if(id_sign[id]==1){
+		x_new= x_old[id];
+		y_new= y_old[id];
+	}
+	
+}
+#endif
+
+#ifdef HAVE_TOUCH_KEY
+static void report_key(struct gsl_ts *ts, u16 x, u16 y)
+{
+	u16 i = 0;
+
+	for(i = 0; i < MAX_KEY_NUM; i++) 
+	{
+		if((gsl_key_data[i].x_min < x) && (x < gsl_key_data[i].x_max)&&(gsl_key_data[i].y_min < y) && (y < gsl_key_data[i].y_max))
+		{
+			key = gsl_key_data[i].key;	
+			input_report_key(ts->input, key, 1);
+			input_sync(ts->input); 		
+			key_state_flag = 1;
+			break;
+		}
+	}
+}
+#endif
+
+#if CFG_TP_USE_CONFIG
+static int tp_of_data_get(void)
+{
+    struct device_node *of_node;
+    enum of_gpio_flags flags;
+    unsigned int scope[2];
+    int ret = -1;
+
+    of_node = of_find_compatible_node(NULL, NULL, "gslX680");
+    if (of_node==NULL){
+        printk(KERN_ERR"%s,%d,find the gsxX680 dts err!\n",__func__, __LINE__);
+        return -1;
+    }
+
+	/* load tp regulator */
+	if (of_find_property(of_node, "tp_vcc", NULL)) {
+		ret = of_property_read_string(of_node, "tp_vcc", &cfg_dts.regulator);
+		if (ret < 0) {
+			printk("can not read tp_vcc power source\n");
+			cfg_dts.regulator = ctp_power_name;
+		}
+
+		if (of_property_read_u32_array(of_node, "vol_range", scope, 2)) {
+			printk(" failed to get voltage range\n");
+			scope[0] = CTP_POWER_MIN_VOL;
+			scope[1] = CTP_POWER_MAX_VOL;
+		}
+		cfg_dts.vol_min=scope[0];
+		cfg_dts.vol_max=scope[1];
+	}
+	
+	/* load irq number */
+    cfg_dts.sirq = irq_of_parse_and_map(of_node,0);
+    if (cfg_dts.sirq < 0) {
+        printk("No IRQ resource for tp\n");
+		return -ENODEV;
+	}
+
+	/* load gpio info */
+	if (!of_find_property(of_node, "reset_gpios", NULL)) {
+		printk("<isp>err: no config gpios\n");
+		goto fail;
+	}
+	gpio_reset = of_get_named_gpio_flags(of_node, "reset_gpios", 0, &flags);
+
+	cfg_dts.i2cNum = TP_I2C_ADAPTER;
+    
+	/* load tp i2c addr */
+	ret = of_property_read_u32(of_node, "reg", &cfg_dts.i2cAddr);
+	if (ret) {
+		printk(" failed to get i2c_addr\n");
+		goto fail;
+	}
+	
+	/* load other options */
+	ret = of_property_read_u32(of_node, "x_pixel", &cfg_dts.xMax);
+	if (ret) {
+		printk("failed to get x_pixel\r\n,set default:1280");
+		cfg_dts.xMax = SCREEN_MAX_X;
+	}
+
+	ret = of_property_read_u32(of_node, "y_pixel", &cfg_dts.yMax);
+	if (ret) {
+		printk("failed to get y_pixel\r\n,set default:800");
+		cfg_dts.yMax = SCREEN_MAX_Y;
+	}
+
+	ret = of_property_read_u32(of_node, "x_revert_en", &cfg_dts.xRevert);
+	if (ret) {
+		printk("failed to get x_revert_en\r\n,set default:1280");
+		cfg_dts.xRevert = 0;
+	}
+
+	ret = of_property_read_u32(of_node, "y_revert_en", &cfg_dts.yRevert);
+	if (ret) {
+		printk("failed to get y_revert_en\r\n,set default:800");
+		cfg_dts.yRevert = 0;
+	}
+
+	ret = of_property_read_u32(of_node, "xy_swap_en", &cfg_dts.XYSwap);
+	if (ret) {
+		printk("failed to get xy_swap_en, set default:0\r\n");
+		cfg_dts.XYSwap = 0;
+	}
+    
+	ret = of_property_read_u32(of_node, "rotate_degree", &cfg_dts.rotate);
+	if (ret) {
+		printk("failed to get rotate, set default:0\r\n");
+		cfg_dts.rotate = 0;
+	}
+
+	
+	printk("gpio num:%d, reset level:%d, i2c_addr:%02x, irq_number:%d,x_pixel:%d, y_pixel:%d, max_point:%d, rotate:%d, i2cNum:%d\n",
+		gpio_reset,
+		0,
+		cfg_dts.i2cAddr,
+		cfg_dts.sirq,
+		cfg_dts.xMax,
+		cfg_dts.yMax,
+		5,
+		cfg_dts.rotate,
+		cfg_dts.i2cNum);
+    
+        return 0;
+
+fail:
+	return -1;
+    
+}
+
+#endif
+
+static void report_data(struct gsl_ts *ts, u16 x, u16 y, u8 pressure, u8 id)
+{
+#ifdef HAVE_TOUCH_KEY
+	if(x > cfg_dts.xMax || y > cfg_dts.yMax)
+	{
+		report_key(ts,x,y);
+		return;
+	}
+#endif
+
+#ifdef REPORT_DATA_PROTOCOL_B
+	input_mt_slot(ts->input, id);	
+	input_mt_report_slot_state(ts->input, MT_TOOL_FINGER, true);
+	input_report_abs(ts->input, ABS_MT_POSITION_X, x);
+	input_report_abs(ts->input, ABS_MT_POSITION_Y, y);
+	input_report_abs(ts->input, ABS_MT_TOUCH_MAJOR, pressure);
+	input_report_abs(ts->input, ABS_MT_WIDTH_MAJOR, 1);
+#endif
+/* A protocol*/
+}
+
+static void gslX680_ts_worker(struct work_struct *work)
+{
+	int rc, i;
+	u8 id, touches;
+	u16 x, y;
+	
+	struct gsl_ts *ts = container_of(work, struct gsl_ts,work);
+	
+#ifdef GSL_NOID_VERSION
+	u32 tmp1;
+	u8 buf[4] = {0};
+	//struct gsl_touch_info cinfo = {0};
+	struct gsl_touch_info cinfo;
+#endif
+
+#ifdef GSL_MONITOR
+	if(i2c_lock_flag != 0)
+		goto i2c_lock_schedule;
+	else
+		i2c_lock_flag = 1;
+#endif
+
+	mutex_lock(&mutex);
+
+	print_info("=====gslX680_ts_worker=====\n");
+
+	rc = gsl_ts_read(ts->client, 0x80, ts->touch_data, ts->dd->data_size);
+
+	if (rc < 0) 
+	{
+		dev_err(&ts->client->dev, "read failed.------func:%s,line:%d\n",__func__,__LINE__);
+		goto schedule;
+	}
+		
+	touches = ts->touch_data[ts->dd->touch_index];
+	print_info("-----touches: %d -----\n", touches);		
+#ifdef GSL_NOID_VERSION
+	cinfo.finger_num = touches;
+	print_info("tp-gsl  finger_num = %d\n",cinfo.finger_num);
+	for(i = 0; i < (touches < MAX_CONTACTS ? touches : MAX_CONTACTS); i ++)
+	{
+		cinfo.x[i] = join_bytes( ( ts->touch_data[ts->dd->x_index  + 4 * i + 1] & 0xf),
+				ts->touch_data[ts->dd->x_index + 4 * i]);
+		cinfo.y[i] = join_bytes(ts->touch_data[ts->dd->y_index + 4 * i + 1],
+				ts->touch_data[ts->dd->y_index + 4 * i ]);
+		print_info("tp-gsl  x = %d y = %d \n",cinfo.x[i],cinfo.y[i]);
+	}
+	cinfo.finger_num=(ts->touch_data[3]<<24)|(ts->touch_data[2]<<16)
+		|(ts->touch_data[1]<<8)|(ts->touch_data[0]);
+	gsl_alg_id_main(&cinfo);
+	tmp1=gsl_mask_tiaoping();
+	print_info("[tp-gsl] tmp1=%x\n",tmp1);
+	if(tmp1>0&&tmp1<0xffffffff)
+	{
+		buf[0]=0xa;buf[1]=0;buf[2]=0;buf[3]=0;
+		gsl_ts_write(ts->client,0xf0,buf,4);
+		buf[0]=(u8)(tmp1 & 0xff);
+		buf[1]=(u8)((tmp1>>8) & 0xff);
+		buf[2]=(u8)((tmp1>>16) & 0xff);
+		buf[3]=(u8)((tmp1>>24) & 0xff);
+		print_info("tmp1=%08x,buf[0]=%02x,buf[1]=%02x,buf[2]=%02x,buf[3]=%02x\n",
+			tmp1,buf[0],buf[1],buf[2],buf[3]);
+		gsl_ts_write(ts->client,0x8,buf,4);
+	}
+	touches = cinfo.finger_num;
+#endif
+	
+	//for(i = 1; i <= MAX_CONTACTS; i ++)
+	for(i = 0; i < MAX_CONTACTS; i ++)
+	{
+		if(touches == 0)
+			id_sign[i] = 0;	
+		id_state_flag[i] = 0;
+	}
+	for(i= 0;i < (touches > MAX_FINGERS ? MAX_FINGERS : touches);i ++)
+	{
+	#ifdef GSL_NOID_VERSION
+		id = cinfo.id[i]-1;//sunjl added,for slot id should be 0-9,not 1-10.
+		y =  cinfo.x[i];
+		x =  cinfo.y[i];
+	#else
+		y = join_bytes( ( ts->touch_data[ts->dd->x_index  + 4 * i + 1] & 0xf),
+				ts->touch_data[ts->dd->x_index + 4 * i]);
+		x = join_bytes(ts->touch_data[ts->dd->y_index + 4 * i + 1],
+				ts->touch_data[ts->dd->y_index + 4 * i ]);
+		id = ts->touch_data[ts->dd->id_index + 4 * i] >> 4;
+	#endif
+		x=x*cfg_dts.xMax/2048;
+		y=y*cfg_dts.yMax/2048;
+	//printk("raw(x,y):(%d,%d)\n",x,y);
+	#if CFG_TP_USE_CONFIG
+    if (cfg_dts.XYSwap == 1)
+    {
+        int tmp;
+        tmp=x;
+        x=y;
+        y=tmp;
+    }
+    
+    if(cfg_dts.xRevert == 1)
+    {   
+        x = cfg_dts.xMax - x;
+    }
+    
+    if(cfg_dts.yRevert == 1)
+    {
+        y = cfg_dts.yMax - y;
+    }
+    
+    
+    if(cfg_dts.rotate == 90) //anticlockwise 90 angle
+    {
+        int tmp;
+        tmp = x;
+        x = y;
+        y = cfg_dts.xMax-tmp;
+    }else if(cfg_dts.rotate == 180) //anticlockwise 180 angle
+    {
+        x = cfg_dts.xMax - x;
+        y = cfg_dts.yMax - y;
+    } else if(cfg_dts.rotate == 270) //anticlockwise 270 angle
+    {
+        int tmp;
+        tmp = x;
+        x = cfg_dts.yMax-y;
+        y = tmp;
+    }
+
+	#endif
+	//printk("new(x,y):(%d,%d)\n",x,y);
+
+		if(0 <=id && id < MAX_CONTACTS)
+		{
+		#ifdef FILTER_POINT
+			filter_point(x, y ,id);
+			report_data(ts, x_new, y_new, 10, id);		
+		#else 
+			#if defined(RECORD_POINT)
+				record_point(x, y , id);
+				report_data(ts, x_new, y_new, 10, id);		
+			#else
+				report_data(ts, x, y, 10, id);		
+			#endif
+		#endif
+			id_state_flag[id] = 1;
+		}
+	}
+	
+	for(i = 0; i < MAX_CONTACTS; i++)
+	{	
+		if( (0 == touches) || ((0 != id_state_old_flag[i]) && (0 == id_state_flag[i])) )
+		{
+		#ifdef REPORT_DATA_PROTOCOL_B
+			input_mt_slot(ts->input, i);
+			//input_report_abs(ts->input, ABS_MT_TRACKING_ID, -1);
+			input_mt_report_slot_state(ts->input, MT_TOOL_FINGER, false);
+		#endif
+			id_sign[i]=0;
+		}
+		id_state_old_flag[i] = id_state_flag[i];
+	}
+/* A protocol*/
+
+	input_sync(ts->input);
+
+schedule:
+	mutex_unlock(&mutex); 
+#ifdef GSL_MONITOR
+	i2c_lock_flag = 0;
+i2c_lock_schedule:
+#endif
+	//enable_irq(ts->irq);
+
+	print_info("=====gslX680_ts_worker end=====\n");
+	return;	
+}
+
+#ifdef GSL_MONITOR
+static void gsl_monitor_worker(struct work_struct *data)
+{
+	//char write_buf[4] = {0};
+	char read_buf[4]  = {0};
+	char download_flag = 0;
+	
+	print_info("----------------gsl_monitor_worker-----------------\n");	
+
+	if(i2c_lock_flag != 0)
+		goto queue_monitor_work;
+	else
+		i2c_lock_flag = 1;
+		mutex_lock(&mutex); 
+	gsl_ts_read(gsl_client, 0xb0, read_buf, 4);
+	if(read_buf[3] != 0x5a || read_buf[2] != 0x5a || read_buf[1] != 0x5a || read_buf[0] != 0x5a)
+		b0_counter ++;
+	else
+		b0_counter = 0;
+
+	if(b0_counter > 1)
+	{
+		printk("======read 0xb0: %x %x %x %x ======\n",read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		download_flag = 1;
+		b0_counter = 0;
+		goto DOWNLOAD_FW;
+	}
+	
+	gsl_ts_read(gsl_client, 0xb4, read_buf, 4);	
+	int_2nd[3] = int_1st[3];
+	int_2nd[2] = int_1st[2];
+	int_2nd[1] = int_1st[1];
+	int_2nd[0] = int_1st[0];
+	int_1st[3] = read_buf[3];
+	int_1st[2] = read_buf[2];
+	int_1st[1] = read_buf[1];
+	int_1st[0] = read_buf[0];
+
+	if(int_1st[3] == int_2nd[3] && int_1st[2] == int_2nd[2] &&int_1st[1] == int_2nd[1] && int_1st[0] == int_2nd[0]) 
+	{
+		printk("======int_1st: %x %x %x %x , int_2nd: %x %x %x %x ======\n",int_1st[3], int_1st[2], int_1st[1], int_1st[0], int_2nd[3], int_2nd[2],int_2nd[1],int_2nd[0]);
+		download_flag = 1;
+		goto DOWNLOAD_FW;
+	}
+
+	gsl_ts_read(gsl_client, 0xbc, read_buf, 4);
+	if(read_buf[3] != 0 || read_buf[2] != 0 || read_buf[1] != 0 || read_buf[0] != 0)
+		bc_counter ++;
+	else
+		bc_counter = 0;
+
+	if(bc_counter > 1) 
+	{
+		printk("======read 0xbc: %x %x %x %x ======\n",read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		download_flag = 1;
+		bc_counter = 0;
+	}
+DOWNLOAD_FW:
+	if(1 == download_flag)
+	{		
+		init_chip(gsl_client);
+	}
+	
+	i2c_lock_flag = 0;
+	
+	mutex_unlock(&mutex); 
+	
+queue_monitor_work:
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 200);
+}
+#endif
+
+#ifdef RESUME_INIT_CHIP_WORK
+static void gslX680_init_worker (struct work_struct *work)
+{
+	init_chip(this_ts->client);
+	check_mem_data(this_ts->client);
+}
+#endif
+
+static irqreturn_t gsl_ts_irq(int irq, void *dev_id)
+{	
+	struct gsl_ts *ts = dev_id;
+	print_info("========gslX680 Interrupt=========\n");				 
+
+	if (!work_pending(&ts->work)) {
+		queue_work(ts->wq, &ts->work);
+	}else{
+		//printk("[GSLX680] work is pending,lost the interrupt.\n");
+	}
+	return IRQ_HANDLED;
+}
+
+#if CFG_TP_USE_CONFIG
+
+/********************TP DEBUG************************/
+
+/**************************************************************************/
+static ssize_t tp_rotate_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.rotate);
+}
+/**************************************************************************/
+static ssize_t tp_rotate_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.rotate=data;
+    return count;
+}
+/**************************************************************************/
+static ssize_t tp_xrevert_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.xRevert);
+}
+/**************************************************************************/
+static ssize_t tp_xrevert_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.xRevert=data;
+    return count;
+}
+
+/**************************************************************************/
+static ssize_t tp_yrevert_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.yRevert);
+}
+/**************************************************************************/
+static ssize_t tp_yrevert_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.yRevert=data;
+    return count;
+}
+
+/**************************************************************************/
+static ssize_t tp_xyswap_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n",cfg_dts.XYSwap);
+}
+/**************************************************************************/
+static ssize_t tp_xyswap_store(struct device *dev,
+        struct device_attribute *attr,
+        const char *buf, size_t count)
+{
+    unsigned long data=0;
+	int error;
+    error = strict_strtol(buf, 10, &data);
+    if (error)
+        return error;
+	cfg_dts.XYSwap=data;
+    return count;
+}
+
+static DEVICE_ATTR(tp_rotate, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_rotate_show, tp_rotate_store);
+static DEVICE_ATTR(tp_xrevert, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_xrevert_show, tp_xrevert_store);
+static DEVICE_ATTR(tp_yrevert, S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_yrevert_show, tp_yrevert_store);
+static DEVICE_ATTR(tp_xyswap, 	S_IWUSR|S_IWGRP|S_IRUSR|S_IRGRP,tp_xyswap_show, tp_xyswap_store);
+
+static struct attribute *tp_attributes[] = { 
+    &dev_attr_tp_rotate.attr,
+	 &dev_attr_tp_xrevert.attr,
+	  &dev_attr_tp_yrevert.attr,
+	  &dev_attr_tp_xyswap.attr,
+    NULL
+};
+
+static const struct attribute_group tp_attr_group = {
+    .attrs  = tp_attributes,
+};
+#endif
+
+static int gslX680_ts_init(struct i2c_client *client, struct gsl_ts *ts)
+{
+	struct input_dev *input_device;
+	int rc = 0;
+	
+	printk("[GSLX680] Enter %s\n", __func__);
+
+	ts->dd = &devices[ts->device_id];
+
+	if (ts->device_id == 0) {
+		ts->dd->data_size = MAX_FINGERS * ts->dd->touch_bytes + ts->dd->touch_meta_data;
+		ts->dd->touch_index = 0;
+	}
+
+	ts->touch_data = kzalloc(ts->dd->data_size, GFP_KERNEL);
+	if (!ts->touch_data) {
+		pr_err("%s: Unable to allocate memory\n", __func__);
+		return -ENOMEM;
+	}
+
+	input_device = input_allocate_device();
+	if (!input_device) {
+		rc = -ENOMEM;
+		goto error_alloc_dev;
+	}
+
+	ts->input = input_device;
+	input_device->name = TP_NAME;
+	input_device->id.bustype = BUS_I2C;
+	input_device->dev.parent = &client->dev;
+	input_set_drvdata(input_device, ts);
+
+	__set_bit(EV_ABS,input_device->evbit);
+	__set_bit(INPUT_PROP_DIRECT, input_device->propbit);
+	input_mt_init_slots(input_device, MAX_CONTACTS, 0);
+	input_set_abs_params(input_device, ABS_MT_TOUCH_MAJOR, 0, 255, 0, 0);
+	input_set_abs_params(input_device, ABS_MT_WIDTH_MAJOR, 0, 255, 0, 0);
+
+#if CFG_TP_USE_CONFIG
+	if(cfg_dts.rotate == 90 || cfg_dts.rotate == 270)
+	{
+		input_set_abs_params(input_device, ABS_MT_POSITION_Y, 0, cfg_dts.xMax, 0, 0);
+		input_set_abs_params(input_device, ABS_MT_POSITION_X, 0, cfg_dts.yMax, 0, 0);
+	}
+	else{
+		input_set_abs_params(input_device, ABS_MT_POSITION_X, 0, cfg_dts.xMax, 0, 0);
+		input_set_abs_params(input_device, ABS_MT_POSITION_Y, 0, cfg_dts.yMax, 0, 0);
+	}
+#else
+    input_set_abs_params(input_device, ABS_MT_POSITION_X, 0, TP_MAX_X, 0, 0);
+    input_set_abs_params(input_device, ABS_MT_POSITION_Y, 0, TP_MAX_Y, 0, 0);
+#endif
+
+#ifdef HAVE_TOUCH_KEY
+	set_bit(EV_KEY, input_device->evbit);
+	input_device->evbit[0] = BIT_MASK(EV_KEY);
+	for (i = 0; i < MAX_KEY_NUM; i++)
+		set_bit(key_array[i], input_device->keybit);
+#endif
+
+#if CFG_TP_USE_CONFIG
+	client->irq = cfg_dts.sirq;
+#else
+		client->irq = TP_IRQ_PORT;
+#endif
+	ts->irq = client->irq;
+
+	ts->wq = create_singlethread_workqueue("kworkqueue_ts");
+	if (!ts->wq) {
+		dev_err(&client->dev, "Could not create workqueue\n");
+		goto error_wq_create;
+	}
+	flush_workqueue(ts->wq);	
+
+	INIT_WORK(&ts->work, gslX680_ts_worker);
+	
+#ifdef RESUME_INIT_CHIP_WORK	
+	ts->init_wq = create_singlethread_workqueue("ts_init_wq");
+	if (!ts->init_wq) {
+		dev_err(&client->dev, "Could not create ts_init_wq workqueue\n");
+		goto error_wq_create;
+	}
+	flush_workqueue(ts->init_wq);	
+	INIT_WORK(&ts->init_work, gslX680_init_worker);
+#endif
+	rc = input_register_device(input_device);
+	if (rc)
+		goto error_unreg_device;
+	
+	this_ts = ts;
+
+#if CFG_TP_USE_CONFIG
+	if (sysfs_create_group(&input_device->dev.kobj, &tp_attr_group) < 0){
+	    printk("create tp sysfs group error!");		
+	}
+#endif
+	return 0;
+
+error_unreg_device:
+	destroy_workqueue(ts->wq);
+error_wq_create:
+	input_free_device(input_device);
+error_alloc_dev:
+	kfree(ts->touch_data);
+	return rc;
+}
+
+static int gsl_ts_suspend(struct device *dev)
+{
+	flush_workqueue(this_ts->init_wq);
+    flush_work(&this_ts->init_work);
+
+	printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	gslX680_shutdown_low();
+	if (tp_regulator){
+		 current_val = regulator_get_voltage(tp_regulator);
+		 regulator_disable(tp_regulator);
+		 printk("Nova disable regulator %d\n",current_val);
+         power_is_on = 0;
+	}
+	return 0;
+}
+
+static int gsl_ts_resume_early(struct device *dev)
+{
+    int ret;
+
+    //printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+    pr_info("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+    if(1 == power_is_on)
+    {
+        printk("impossible: power is turned on!\n");
+        return 0;
+    }
+
+	if (tp_regulator)
+	{
+	    regulator_set_voltage(tp_regulator, CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+	    ret = regulator_enable(tp_regulator);
+	}
+
+#ifdef RESUME_INIT_CHIP_WORK
+	queue_work(this_ts->init_wq, &this_ts->init_work);
+#endif
+
+    power_is_on = 1;
+    return 0;
+}
+
+static int gsl_ts_resume(struct device *dev)
+{
+	int ret;
+
+	//printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	pr_info("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+
+    if(1 == power_is_on)
+    {
+        printk(" power is turned on!\n");
+        return 0;
+    }
+        
+	if (tp_regulator)
+	{
+	    regulator_set_voltage(tp_regulator, CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+	    ret = regulator_enable(tp_regulator);
+	}
+
+	#ifdef RESUME_INIT_CHIP_WORK
+	queue_work(this_ts->init_wq, &this_ts->init_work);
+	#endif
+    power_is_on = 1;
+    return 0;
+}
+
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+static void gsl_ts_early_suspend(struct early_suspend *h)
+{
+	int i=0;
+
+	printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	
+	disable_irq(this_ts->irq);
+	flush_workqueue(this_ts->wq);
+    flush_work(&this_ts->work);
+    
+	#ifdef GSL_MONITOR
+	printk( "gsl_ts_suspend () : cancel gsl_monitor_work\n");
+	cancel_delayed_work_sync(&gsl_monitor_work);
+	#endif
+
+#ifdef SLEEP_CLEAR_POINT
+	#ifdef REPORT_DATA_PROTOCOL_B
+	for(i =1;i<=MAX_CONTACTS;i++)
+	{	
+		input_mt_slot(this_ts->input, i);
+		input_mt_report_slot_state(this_ts->input, MT_TOOL_FINGER, false);
+	}
+	#endif
+	input_sync(this_ts->input);	
+#endif
+}
+
+static void gsl_ts_late_resume(struct early_suspend *h)
+{
+	enable_irq(this_ts->irq);
+	
+	//printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	pr_info("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	#ifdef GSL_MONITOR
+	printk( "gsl_ts_resume () : queue gsl_monitor_work\n");
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 500);
+	#endif
+}
+#endif
+
+#if 0  // used
+static void gsl_init_work_func(struct work_struct *work)
+{
+	struct gsl_ts *ts = container_of(work, struct gsl_ts,gsl_init_work);
+
+	gslX680_init();
+	init_chip(ts->client);
+	check_mem_data(ts->client);
+}
+#endif
+
+static int gsl_ts_probe(struct i2c_client *client,
+			const struct i2c_device_id *id)
+{
+	struct gsl_ts *ts;
+	int rc;
+
+	printk("[GSLX680] Enter %s ########%d\n", __func__,__LINE__);
+	if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {
+		dev_err(&client->dev, "I2C functionality not supported\n");
+		return -ENODEV;
+	}
+ 
+	ts = kzalloc(sizeof(*ts), GFP_KERNEL);
+	if (!ts){
+		printk("kzalloc failed.\n");
+		return -ENOMEM;
+	}
+	gsl_client = client;
+	ts->client = client;
+	i2c_set_clientdata(client, ts);
+	ts->device_id = id->driver_data;
+
+	rc = gslX680_ts_init(client, ts);
+	if (rc < 0) {
+		dev_err(&client->dev, "GSLX680 init failed\n");
+		goto error_mutex_destroy;
+	}	
+
+	gslX680_init();
+	init_chip(ts->client);
+	check_mem_data(ts->client);
+
+	mutex_init(&mutex); 
+	//INIT_WORK(&ts->gsl_init_work, gsl_init_work_func);
+	//ts->gsl_init_workqueue = create_singlethread_workqueue("gsl_init_workqueue");
+	//queue_work(ts->gsl_init_workqueue, &ts->gsl_init_work);
+
+	rc=  request_irq(client->irq, gsl_ts_irq, IRQF_TRIGGER_RISING | IRQF_DISABLED, client->name, ts);
+	if (rc < 0) {
+		printk( "gsl_probe: request irq failed\n");
+		goto error_req_irq_fail;
+	}
+	
+	/* create debug attribute */
+	//rc = device_create_file(&ts->input->dev, &dev_attr_debug_enable);
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	ts->early_suspend.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN + 1;
+	//ts->early_suspend.level = EARLY_SUSPEND_LEVEL_DISABLE_FB + 1;
+	ts->early_suspend.suspend = gsl_ts_early_suspend;
+	ts->early_suspend.resume = gsl_ts_late_resume;
+	register_early_suspend(&ts->early_suspend);
+#endif
+	#ifdef GSL_MONITOR
+	printk( "gsl_ts_probe () : queue gsl_monitor_workqueue\n");
+	INIT_DELAYED_WORK(&gsl_monitor_work, gsl_monitor_worker);
+	gsl_monitor_workqueue = create_singlethread_workqueue("gsl_monitor_workqueue");
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 500);
+	#endif
+	
+	printk("[GSLX680] End %s\n", __func__);
+
+	return 0;
+
+//exit_set_irq_mode:	
+error_req_irq_fail:
+	free_irq(ts->irq, ts);	
+
+error_mutex_destroy:
+	input_free_device(ts->input);
+	kfree(ts);
+	return rc;
+}
+
+static int gsl_ts_remove(struct i2c_client *client)
+{
+	struct gsl_ts *ts = i2c_get_clientdata(client);
+	printk("==gsl_ts_remove=\n");
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	unregister_early_suspend(&ts->early_suspend);
+#endif
+	//cancel_work_sync(&ts->gsl_init_work);
+	//destroy_workqueue(ts->gsl_init_workqueue);
+
+	device_init_wakeup(&client->dev, 0);
+	cancel_work_sync(&ts->work);
+	free_irq(ts->irq, ts);
+	destroy_workqueue(ts->wq);
+
+	#ifdef RESUME_INIT_CHIP_WORK
+	cancel_work_sync(&ts->init_work);
+	destroy_workqueue(ts->init_wq);
+	#endif
+
+#if CFG_TP_USE_CONFIG
+	sysfs_remove_group(&ts->input->dev.kobj, &tp_attr_group);
+#endif
+	input_unregister_device(ts->input);
+	//device_remove_file(&ts->input->dev, &dev_attr_debug_enable);
+	#ifdef GSL_MONITOR
+	cancel_delayed_work_sync(&gsl_monitor_work);
+	destroy_workqueue(gsl_monitor_workqueue);
+	#endif
+
+	kfree(ts->touch_data);
+	kfree(ts);
+
+	return 0;
+}
+
+static void gsl_ts_shutdown(struct i2c_client *client)
+{
+	printk("==gsl_ts_shutdown==\n");
+    gsl_ts_remove(client);
+	if ( tp_regulator ){
+		regulator_deinit(tp_regulator);
+		tp_regulator = NULL;
+	}
+}
+
+static const struct i2c_device_id gsl_ts_id[] = {
+	{GSLX680_I2C_NAME, 0},
+	{}
+};
+MODULE_DEVICE_TABLE(i2c, gsl_ts_id);
+static unsigned short gsl_addresses[] = {
+	GSLX680_I2C_ADDR,
+	I2C_CLIENT_END,
+};
+
+static struct dev_pm_ops tp_pm_ops = {
+    .resume_early = gsl_ts_resume_early,
+    .suspend       = gsl_ts_suspend,
+    .resume = gsl_ts_resume,
+};
+
+static struct of_device_id gsl_of_match[] = {
+	{ .compatible = "gslX680" },
+	{ }
+};
+
+static struct i2c_driver gsl_ts_driver = {
+	.driver = {
+		.name = GSLX680_I2C_NAME,
+		.owner = THIS_MODULE,
+		.pm = &tp_pm_ops,
+		.of_match_table	= of_match_ptr(gsl_of_match),
+	},
+	.probe		= gsl_ts_probe,
+	.remove		= gsl_ts_remove,
+	.shutdown	=	gsl_ts_shutdown,
+	.id_table	= gsl_ts_id,
+	.address_list	= gsl_addresses,
+};
+static struct i2c_board_info tp_info = {
+	.type	= GSLX680_I2C_NAME,
+};
+
+#if CFG_TP_USE_CONFIG
+static int tp_config_init(void)
+{
+    cfg_dts.rotate=TP_ROTATE_DEFAULT;
+    cfg_dts.xMax=TP_MAX_X;
+    cfg_dts.yMax=TP_MAX_Y;
+    cfg_dts.xRevert=TP_XREVERT;
+    cfg_dts.yRevert=TP_YREVERT;
+    cfg_dts.XYSwap=TP_XYSWAP;
+    return 0;
+}
+#endif
+
+static int __init gsl_ts_init(void)
+{
+	//struct i2c_adapter *adap = NULL;
+	int ret;
+	
+	printk("==gsl_ts_init==\n");
+	
+#if CFG_TP_USE_CONFIG
+	tp_config_init();
+
+	ret = tp_of_data_get();
+	if(ret<0) {
+		printk("Please complete the TP configuration item!!!\n\n");
+	}
+	tp_info.addr = cfg_dts.i2cAddr;
+
+	tp_regulator = regulator_init(cfg_dts.regulator, 
+   		cfg_dts.vol_min, cfg_dts.vol_max);
+#else
+	gpio_reset = TP_RESET_PIN;
+	tp_info.addr = TP_I2C_ADDR;
+
+	tp_regulator = regulator_init(CTP_POWER_ID, 
+   		CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+#endif
+
+	if ( !tp_regulator ) {
+	   printk("Nova tp init power failed");
+	   ret = -EINVAL;
+	   return ret;
+	}
+
+	gpio_request(gpio_reset, GSLX680_I2C_NAME);
+
+#if 0
+#if CFG_TP_USE_CONFIG
+	adap = i2c_get_adapter(cfg_dts.i2cNum);
+#else
+	adap = i2c_get_adapter(TP_I2C_ADAPTER);
+#endif
+	gsl_ts_device = i2c_new_device(adap, &tp_info); 
+#endif
+
+	ret = i2c_add_driver(&gsl_ts_driver);
+	printk("i2c_add_driver,ret=%d\n",ret);
+	return ret;
+}
+
+static void __exit gsl_ts_exit(void)
+{
+	printk("==gsl_ts_exit==\n");
+	
+	i2c_del_driver(&gsl_ts_driver);
+	if ( tp_regulator ){
+		regulator_deinit(tp_regulator);
+		tp_regulator = NULL;
+	}
+	gpio_free(gpio_reset);
+    #if 0
+	if(gsl_ts_device){
+		i2c_unregister_device(gsl_ts_device);
+		gsl_ts_device = NULL;
+	}
+    #endif
+	return;
+}
+
+module_init(gsl_ts_init);
+module_exit(gsl_ts_exit);
+
+MODULE_LICENSE("GPL");
+MODULE_DESCRIPTION("GSLX680 touchscreen controller driver");
+MODULE_AUTHOR("Guan Yuwei, guanyuwei@basewin.com");
+MODULE_ALIAS("platform:gsl_ts");
+
diff --git a/drivers/input/touchscreen/GSL3680/gsl3680.h b/drivers/input/touchscreen/GSL3680/gsl3680.h
new file mode 100755
index 0000000..b500dce
--- /dev/null
+++ b/drivers/input/touchscreen/GSL3680/gsl3680.h
@@ -0,0 +1,10992 @@
+#ifndef _GSLX680_H_
+#define _GSLX680_H_
+
+#define SCREEN_MAX_X 		1280
+#define SCREEN_MAX_Y 		800
+#define TP_ROTATE_DEFAULT 0
+#define TP_XREVERT 1
+#define TP_YREVERT 1
+#define TP_XYSWAP 1
+
+
+struct fw_data
+{
+    u32 offset : 8;
+    u32 : 0;
+    u32 val;
+};
+
+static const struct fw_data GSLX680_FW[] = {
+//GSL_2681B+2682B_V1.3.4.17_2013.02.28
+{0xf0,0x3},
+{0x00,0xa5a5ffc0},
+{0x04,0x00000000},
+{0x08,0xef47cd74},
+{0x0c,0xc200a53b},
+{0x10,0xc64f9ee5},
+{0x14,0x0074b79b},
+{0x18,0x5fc64faf},
+{0x1c,0x56a7a368},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00001000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000001},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x01020304},
+{0x58,0x05060708},
+{0x5c,0x090a0b0c},
+{0x60,0x0d0e0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1b1c1e1f},
+{0x74,0x00000000},
+{0x78,0x00010000},
+{0x7c,0x8c846af3},
+{0xf0,0x4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0xfffffed4},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00002400},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000002},
+{0x48,0x00000001},
+{0x4c,0x00004000},
+{0x50,0x00000000},
+{0x54,0x00010203},
+{0x58,0x04050607},
+{0x5c,0x08090a0b},
+{0x60,0x0c0d0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1c1d1e1f},
+{0x74,0x00000000},
+{0x78,0x80808080},
+{0x7c,0x8c846af3},
+{0xf0,0x5},
+{0x00,0xf3b18989},
+{0x04,0x00000005},
+{0x08,0x0000012c},
+{0x0c,0x9a9a9a9a},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00010fff},
+{0x1c,0x10000000},
+{0x20,0x10000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000400},
+{0x30,0x00808080},
+{0x34,0x80808080},
+{0x38,0x80808080},
+{0x3c,0x80808080},
+{0x40,0x80808080},
+{0x44,0x80808080},
+{0x48,0x80808080},
+{0x4c,0x80808080},
+{0x50,0x00000320},
+{0x54,0x00010203},
+{0x58,0x04050607},
+{0x5c,0x08090a0b},
+{0x60,0x0c0d0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1c1d1e1f},
+{0x74,0x00000001},
+{0x78,0x0000001e},
+{0x7c,0x00000014},
+{0xf0,0x6},
+{0x00,0x0000001e},
+{0x04,0x00000000},
+{0x08,0x00000014},
+{0x0c,0x00000000},
+{0x10,0x00000032},
+{0x14,0x00000032},
+{0x18,0x00000000},
+{0x1c,0x00000001},
+{0x20,0x00002904},
+{0x24,0x00000800},
+{0x28,0x00000800},
+{0x2c,0xf801000b},
+{0x30,0xf801000b},
+{0x34,0x00000003},
+{0x38,0x00000003},
+{0x3c,0x00010fff},
+{0x40,0x80000000},
+{0x44,0x00180018},
+{0x48,0x00000fff},
+{0x4c,0x00000004},
+{0x50,0x00020001},
+{0x54,0x000001b9},
+{0x58,0x00001000},
+{0x5c,0x09249240},
+{0x60,0x20100804},
+{0x64,0x00000bb8},
+{0x68,0x00000bb8},
+{0x6c,0x00000bb8},
+{0x70,0x00000bb8},
+{0x74,0x000000c8},
+{0x78,0x00000032},
+{0x7c,0x00000000},
+{0xf0,0x7},
+{0x00,0x010b000a},
+{0x04,0x030d020c},
+{0x08,0x050f040e},
+{0x0c,0x07110610},
+{0x10,0x09130812},
+{0x14,0x00123456},
+{0x18,0x007890ab},
+{0x1c,0x00901234},
+{0x20,0x005678ab},
+{0x24,0xff080010},
+{0x28,0xff080120},
+{0x2c,0xff080140},
+{0x30,0xff080160},
+{0x34,0x001f00dc},
+{0x38,0x001a00be},
+{0x3c,0x001400a1},
+{0x40,0x00000011},
+{0x44,0x00000100},
+{0x48,0x00000006},
+{0x4c,0x001e0003},
+{0x50,0x00000000},
+{0x54,0x00000004},
+{0x58,0x00000000},
+{0x5c,0x000a0001},
+{0x60,0x001c000b},
+{0x64,0x001d001d},
+{0x68,0x00000000},
+{0x6c,0x00090000},
+{0x70,0x00110000},
+{0x74,0x00000000},
+{0x78,0x00012345},
+{0x7c,0x006789ab},
+{0xf0,0x8},
+{0x00,0x020f222f},
+{0x04,0x21f1224f},
+{0x08,0x21f2226f},
+{0x0c,0x21f3228f},
+{0x10,0x21f422af},
+{0x14,0x21f542cf},
+{0x18,0x41f642ef},
+{0x1c,0x41f7430f},
+{0x20,0x41f8432f},
+{0x24,0x41f9434f},
+{0x28,0x41fa436f},
+{0x2c,0x41fb438f},
+{0x30,0x41fc43af},
+{0x34,0x41fd43cf},
+{0x38,0x41fe73ef},
+{0x3c,0x01f043ef},
+{0x40,0x01030507},
+{0x44,0x090b0d0f},
+{0x48,0x11130000},
+{0x4c,0x02040608},
+{0x50,0x0a0c0e10},
+{0x54,0x12140000},
+{0x58,0x00500032},
+{0x5c,0x00000008},
+{0x60,0x0000015e},
+{0x64,0x00040302},
+{0x68,0x00040604},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000014},
+{0xf0,0x9},
+{0x00,0xff080094},
+{0x04,0x00070011},
+{0x08,0xff080090},
+{0x0c,0x00040000},
+{0x10,0xff08004c},
+{0x14,0x00197fff},
+{0x18,0xfffffff0},
+{0x1c,0x00000000},
+{0x20,0xfffffff0},
+{0x24,0x00000000},
+{0x28,0xfffffff0},
+{0x2c,0x00000000},
+{0x30,0xfffffff0},
+{0x34,0x00000000},
+{0x38,0xfffffff0},
+{0x3c,0x00000000},
+{0x40,0xfffffff0},
+{0x44,0x00000000},
+{0x48,0xfffffff0},
+{0x4c,0x00000000},
+{0x50,0xfffffff0},
+{0x54,0x00000000},
+{0x58,0xfffffff0},
+{0x5c,0x00000000},
+{0x60,0xfffffff0},
+{0x64,0x00000000},
+{0x68,0xfffffff0},
+{0x6c,0x00000000},
+{0x70,0xfffffff0},
+{0x74,0x00000000},
+{0x78,0xfffffff0},
+{0x7c,0x00000000},
+/*
+{0xf0,0xe0},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x006401f4},
+{0x44,0x00640064},
+{0x48,0x01900064},
+{0x4c,0x00500190},
+{0x50,0x00500050},
+{0x54,0x012c0050},
+{0x58,0x012c012c},
+{0x5c,0x0037012c},
+{0x60,0x00640014},
+{0x64,0x00640064},
+{0x68,0x00000032},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe1},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+*/
+{0xf0,0x0},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x233fc0c0},
+{0x10,0xa2146004},
+{0x14,0xa4102000},
+{0x18,0xe4244000},
+{0x1c,0x233fc0c0},
+{0x20,0xa2146010},
+{0x24,0x2500003f},
+{0x28,0xa414a3ff},
+{0x2c,0xe4244000},
+{0x30,0x01000000},
+{0x34,0x821020e0},
+{0x38,0x81880001},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x270010c0},
+{0x4c,0xa614e00f},
+{0x50,0xe6a00040},
+{0x54,0x01000000},
+{0x58,0xa410200f},
+{0x5c,0xe4a00040},
+{0x60,0x01000000},
+{0x64,0xa0100000},
+{0x68,0xa2100000},
+{0x6c,0xa4100000},
+{0x70,0xa6100000},
+{0x74,0xa8100000},
+{0x78,0xaa100000},
+{0x7c,0xac100000},
+{0xf0,0x1},
+{0x00,0xae100000},
+{0x04,0x90100000},
+{0x08,0x92100000},
+{0x0c,0x94100000},
+{0x10,0x96100000},
+{0x14,0x98100000},
+{0x18,0x9a100000},
+{0x1c,0x9c100000},
+{0x20,0x9e100000},
+{0x24,0x84100000},
+{0x28,0x86100000},
+{0x2c,0x88100000},
+{0x30,0x8a100000},
+{0x34,0x8c100000},
+{0x38,0x8e100000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x82100000},
+{0x4c,0x81900001},
+{0x50,0x82100000},
+{0x54,0x81980001},
+{0x58,0x81800000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0xbc102cf8},
+{0x6c,0x9c102c78},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0x2},
+{0x00,0x270010c0},
+{0x04,0xa614e00f},
+{0x08,0xe6a00040},
+{0x0c,0x01000000},
+{0x10,0x40000451},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0x10bfffff},
+{0x20,0x01000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x1a},
+{0x00,0x0000000e},
+{0x04,0xfffffe65},
+{0x08,0x000003fc},
+{0x0c,0x00000af6},
+{0x10,0x000003d4},
+{0x14,0xfffffe64},
+{0x18,0x00000008},
+{0x1c,0xfffffe66},
+{0x20,0x00000425},
+{0x24,0x00000af5},
+{0x28,0x000003ac},
+{0x2c,0xfffffe65},
+{0x30,0x00000003},
+{0x34,0xfffffe67},
+{0x38,0x0000044e},
+{0x3c,0x00000af3},
+{0x40,0x00000384},
+{0x44,0xfffffe65},
+{0x48,0xfffffffd},
+{0x4c,0xfffffe69},
+{0x50,0x00000476},
+{0x54,0x00000aef},
+{0x58,0x0000035c},
+{0x5c,0xfffffe67},
+{0x60,0xfffffff7},
+{0x64,0xfffffe6c},
+{0x68,0x0000049f},
+{0x6c,0x00000aea},
+{0x70,0x00000335},
+{0x74,0xfffffe68},
+{0x78,0xfffffff1},
+{0x7c,0xfffffe6f},
+{0xf0,0x1b},
+{0x00,0x000004c9},
+{0x04,0x00000ae5},
+{0x08,0x0000030e},
+{0x0c,0xfffffe6a},
+{0x10,0xffffffeb},
+{0x14,0xfffffe73},
+{0x18,0x000004f2},
+{0x1c,0x00000ade},
+{0x20,0x000002e7},
+{0x24,0xfffffe6d},
+{0x28,0xffffffe4},
+{0x2c,0xfffffe78},
+{0x30,0x0000051b},
+{0x34,0x00000ad5},
+{0x38,0x000002c1},
+{0x3c,0xfffffe70},
+{0x40,0xffffffde},
+{0x44,0xfffffe7d},
+{0x48,0x00000544},
+{0x4c,0x00000acc},
+{0x50,0x0000029c},
+{0x54,0xfffffe74},
+{0x58,0xffffffd7},
+{0x5c,0xfffffe83},
+{0x60,0x0000056d},
+{0x64,0x00000ac2},
+{0x68,0x00000276},
+{0x6c,0xfffffe78},
+{0x70,0xffffffd0},
+{0x74,0xfffffe89},
+{0x78,0x00000597},
+{0x7c,0x00000ab6},
+{0xf0,0x1c},
+{0x00,0x00000251},
+{0x04,0xfffffe7c},
+{0x08,0xffffffc8},
+{0x0c,0xfffffe91},
+{0x10,0x000005c0},
+{0x14,0x00000aa9},
+{0x18,0x0000022d},
+{0x1c,0xfffffe81},
+{0x20,0xffffffc1},
+{0x24,0xfffffe99},
+{0x28,0x000005e9},
+{0x2c,0x00000a9b},
+{0x30,0x00000209},
+{0x34,0xfffffe86},
+{0x38,0xffffffb9},
+{0x3c,0xfffffea1},
+{0x40,0x00000611},
+{0x44,0x00000a8d},
+{0x48,0x000001e5},
+{0x4c,0xfffffe8b},
+{0x50,0xffffffb2},
+{0x54,0xfffffeab},
+{0x58,0x0000063a},
+{0x5c,0x00000a7d},
+{0x60,0x000001c3},
+{0x64,0xfffffe91},
+{0x68,0xffffffaa},
+{0x6c,0xfffffeb5},
+{0x70,0x00000663},
+{0x74,0x00000a6b},
+{0x78,0x000001a0},
+{0x7c,0xfffffe97},
+{0xf0,0x1d},
+{0x00,0xffffffa2},
+{0x04,0xfffffebf},
+{0x08,0x0000068b},
+{0x0c,0x00000a59},
+{0x10,0x0000017e},
+{0x14,0xfffffe9d},
+{0x18,0xffffff9a},
+{0x1c,0xfffffecb},
+{0x20,0x000006b3},
+{0x24,0x00000a46},
+{0x28,0x0000015d},
+{0x2c,0xfffffea4},
+{0x30,0xffffff91},
+{0x34,0xfffffed7},
+{0x38,0x000006da},
+{0x3c,0x00000a32},
+{0x40,0x0000013d},
+{0x44,0xfffffeab},
+{0x48,0xffffff89},
+{0x4c,0xfffffee4},
+{0x50,0x00000702},
+{0x54,0x00000a1d},
+{0x58,0x0000011d},
+{0x5c,0xfffffeb2},
+{0x60,0xffffff80},
+{0x64,0xfffffef2},
+{0x68,0x00000729},
+{0x6c,0x00000a06},
+{0x70,0x000000fd},
+{0x74,0xfffffeba},
+{0x78,0xffffff78},
+{0x7c,0xffffff00},
+{0xf0,0x1e},
+{0x00,0x0000074f},
+{0x04,0x000009ef},
+{0x08,0x000000df},
+{0x0c,0xfffffec1},
+{0x10,0xffffff6f},
+{0x14,0xffffff10},
+{0x18,0x00000776},
+{0x1c,0x000009d7},
+{0x20,0x000000c1},
+{0x24,0xfffffec9},
+{0x28,0xffffff66},
+{0x2c,0xffffff20},
+{0x30,0x0000079b},
+{0x34,0x000009be},
+{0x38,0x000000a3},
+{0x3c,0xfffffed1},
+{0x40,0xffffff5e},
+{0x44,0xffffff30},
+{0x48,0x000007c1},
+{0x4c,0x000009a4},
+{0x50,0x00000087},
+{0x54,0xfffffed9},
+{0x58,0xffffff55},
+{0x5c,0xffffff42},
+{0x60,0x000007e5},
+{0x64,0x00000989},
+{0x68,0x0000006b},
+{0x6c,0xfffffee2},
+{0x70,0xffffff4c},
+{0x74,0xffffff54},
+{0x78,0x0000080a},
+{0x7c,0x0000096d},
+{0xf0,0x1f},
+{0x00,0x0000004f},
+{0x04,0xfffffeea},
+{0x08,0xffffff43},
+{0x0c,0xffffff67},
+{0x10,0x0000082d},
+{0x14,0x00000951},
+{0x18,0x00000035},
+{0x1c,0xfffffef3},
+{0x20,0xffffff3a},
+{0x24,0xffffff7b},
+{0x28,0x00000850},
+{0x2c,0x00000933},
+{0x30,0x0000001b},
+{0x34,0xfffffefb},
+{0x38,0xffffff31},
+{0x3c,0xffffff90},
+{0x40,0x00000873},
+{0x44,0x00000915},
+{0x48,0x00000002},
+{0x4c,0xffffff04},
+{0x50,0xffffff28},
+{0x54,0xffffffa5},
+{0x58,0x00000895},
+{0x5c,0x000008f6},
+{0x60,0xffffffea},
+{0x64,0xffffff0d},
+{0x68,0xffffff1f},
+{0x6c,0xffffffbb},
+{0x70,0x000008b6},
+{0x74,0x000008d6},
+{0x78,0xffffffd2},
+{0x7c,0xffffff16},
+{0xf0,0x20},
+{0x00,0x83580000},
+{0x04,0x82086ff0},
+{0x08,0x83306004},
+{0x0c,0x80a06005},
+{0x10,0x02800024},
+{0x14,0x01000000},
+{0x18,0x80a06006},
+{0x1c,0x02800039},
+{0x20,0x01000000},
+{0x24,0x80a06015},
+{0x28,0x02800051},
+{0x2c,0x01000000},
+{0x30,0x80a0602a},
+{0x34,0x02800085},
+{0x38,0x01000000},
+{0x3c,0x073fc180},
+{0x40,0x8610e03c},
+{0x44,0x05169680},
+{0x48,0x84004002},
+{0x4c,0xc420c000},
+{0x50,0x073fc000},
+{0x54,0x8610e020},
+{0x58,0x84102001},
+{0x5c,0xc420c000},
+{0x60,0x0500000c},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x8480bfff},
+{0x70,0x12bffffe},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x073fc000},
+{0xf0,0x21},
+{0x00,0x8610e020},
+{0x04,0x84102000},
+{0x08,0xc420c000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x81c44000},
+{0x18,0x81cc8000},
+{0x1c,0x01000000},
+{0x20,0xa7500000},
+{0x24,0xa92ce002},
+{0x28,0xa734e001},
+{0x2c,0xa614c014},
+{0x30,0xa60ce007},
+{0x34,0x81900000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x81e00000},
+{0x44,0xe03ba000},
+{0x48,0xe43ba008},
+{0x4c,0xe83ba010},
+{0x50,0xec3ba018},
+{0x54,0xf03ba020},
+{0x58,0xf43ba028},
+{0x5c,0xf83ba030},
+{0x60,0xfc3ba038},
+{0x64,0x81e80000},
+{0x68,0x8194c000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x81c44000},
+{0x78,0x81cc8000},
+{0x7c,0x01000000},
+{0xf0,0x22},
+{0x00,0xa7500000},
+{0x04,0xa934e002},
+{0x08,0xa72ce001},
+{0x0c,0xa614c014},
+{0x10,0xa60ce007},
+{0x14,0x81900000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x81e80000},
+{0x24,0x81e80000},
+{0x28,0xe01ba000},
+{0x2c,0xe41ba008},
+{0x30,0xe81ba010},
+{0x34,0xec1ba018},
+{0x38,0xf01ba020},
+{0x3c,0xf41ba028},
+{0x40,0xf81ba030},
+{0x44,0xfc1ba038},
+{0x48,0x81e00000},
+{0x4c,0x81e00000},
+{0x50,0x8194c000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x81c44000},
+{0x60,0x81cc8000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x82102010},
+{0x70,0x273fc0c0},
+{0x74,0xa614e010},
+{0x78,0xc224c000},
+{0x7c,0x01000000},
+{0xf0,0x23},
+{0x00,0x033fc0c0},
+{0x04,0x82106004},
+{0x08,0xa6102000},
+{0x0c,0xe6204000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0xa6102020},
+{0x20,0x83480000},
+{0x24,0x82104013},
+{0x28,0x81884000},
+{0x2c,0x01000000},
+{0x30,0x4000119c},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0xa7500000},
+{0x44,0xa934e002},
+{0x48,0xa72ce001},
+{0x4c,0xa614c014},
+{0x50,0xa60ce007},
+{0x54,0x81900000},
+{0x58,0x01000000},
+{0x5c,0x81e80000},
+{0x60,0xe01ba000},
+{0x64,0xe41ba008},
+{0x68,0xe81ba010},
+{0x6c,0xec1ba018},
+{0x70,0xf01ba020},
+{0x74,0xf41ba028},
+{0x78,0xf81ba030},
+{0x7c,0xfc1ba038},
+{0xf0,0x24},
+{0x00,0x81e00000},
+{0x04,0x8194c000},
+{0x08,0x01000000},
+{0x0c,0xa6102020},
+{0x10,0x83480000},
+{0x14,0x82284013},
+{0x18,0x81884000},
+{0x1c,0x01000000},
+{0x20,0x033fc0c0},
+{0x24,0x82106004},
+{0x28,0xa6103fff},
+{0x2c,0xe6204000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c44000},
+{0x40,0x81cc8000},
+{0x44,0x01000000},
+{0x48,0x81c48000},
+{0x4c,0x81cca004},
+{0x50,0x01000000},
+{0x54,0x9de3bf98},
+{0x58,0x4000001b},
+{0x5c,0x01000000},
+{0x60,0x40000012},
+{0x64,0x01000000},
+{0x68,0x400000ef},
+{0x6c,0x01000000},
+{0x70,0x40000040},
+{0x74,0x01000000},
+{0x78,0x400000a5},
+{0x7c,0x01000000},
+{0xf0,0x25},
+{0x00,0x30bffffe},
+{0x04,0x80a22000},
+{0x08,0x02800006},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x90823fff},
+{0x18,0x12bffffe},
+{0x1c,0x01000000},
+{0x20,0x81c3e008},
+{0x24,0x01000000},
+{0x28,0x82102001},
+{0x2c,0x81904000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x03000008},
+{0x48,0x82106342},
+{0x4c,0xa3804000},
+{0x50,0x03000004},
+{0x54,0x82106000},
+{0x58,0x81984000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x81c3e008},
+{0x6c,0x01000000},
+{0x70,0x98102000},
+{0x74,0x832b2002},
+{0x78,0xda006480},
+{0x7c,0x80a37ff0},
+{0xf0,0x26},
+{0x00,0x02800006},
+{0x04,0x98032002},
+{0x08,0xc2006484},
+{0x0c,0x80a3201f},
+{0x10,0x04bffff9},
+{0x14,0xc2234000},
+{0x18,0x81c3e008},
+{0x1c,0x01000000},
+{0x20,0x03004040},
+{0x24,0x94106101},
+{0x28,0x98102000},
+{0x2c,0x832b2002},
+{0x30,0xd60063a4},
+{0x34,0x9a102000},
+{0x38,0x832b6002},
+{0x3c,0x9a036001},
+{0x40,0x80a36004},
+{0x44,0x04bffffd},
+{0x48,0xd422c001},
+{0x4c,0x98032001},
+{0x50,0x80a32003},
+{0x54,0x04bffff7},
+{0x58,0x832b2002},
+{0x5c,0x033fc200},
+{0x60,0xda002330},
+{0x64,0x82106074},
+{0x68,0x81c3e008},
+{0x6c,0xda204000},
+{0x70,0x9de3bf98},
+{0x74,0x40000f93},
+{0x78,0x90102000},
+{0x7c,0x213fc140},
+{0xf0,0x27},
+{0x00,0xda00247c},
+{0x04,0x98142040},
+{0x08,0xea030000},
+{0x0c,0xc20022f8},
+{0x10,0x9b336001},
+{0x14,0x825b4001},
+{0x18,0xaa0d7c00},
+{0x1c,0xaa154001},
+{0x20,0xea230000},
+{0x24,0x82142004},
+{0x28,0xea004000},
+{0x2c,0xaa0d7ff0},
+{0x30,0xaa15400d},
+{0x34,0xea204000},
+{0x38,0x2d3fc200},
+{0x3c,0x8215a080},
+{0x40,0xea004000},
+{0x44,0xaa0d7ff0},
+{0x48,0xaa15400d},
+{0x4c,0xea204000},
+{0x50,0xc200233c},
+{0x54,0x9a15a070},
+{0x58,0xc2234000},
+{0x5c,0x033fc000},
+{0x60,0xda002338},
+{0x64,0x82106030},
+{0x68,0x17000018},
+{0x6c,0xda204000},
+{0x70,0x9612e100},
+{0x74,0x94142088},
+{0x78,0x19000019},
+{0x7c,0xd6228000},
+{0xf0,0x28},
+{0x00,0x981321d8},
+{0x04,0x9214208c},
+{0x08,0x0300003f},
+{0x0c,0xd8224000},
+{0x10,0x90142058},
+{0x14,0x821063ff},
+{0x18,0xc2220000},
+{0x1c,0xc20023f8},
+{0x20,0x9e15a00c},
+{0x24,0xc223c000},
+{0x28,0xc20023fc},
+{0x2c,0xa215a008},
+{0x30,0xc2244000},
+{0x34,0xa6142080},
+{0x38,0xd624c000},
+{0x3c,0xa8142084},
+{0x40,0xd8250000},
+{0x44,0xa414205c},
+{0x48,0x7fffffb6},
+{0x4c,0xc0248000},
+{0x50,0x400001fb},
+{0x54,0xa415a030},
+{0x58,0x9a15a07c},
+{0x5c,0xea034000},
+{0x60,0x033ff000},
+{0x64,0xd8002374},
+{0x68,0xaa2d4001},
+{0x6c,0xea234000},
+{0x70,0x033fc1c0},
+{0x74,0xda002340},
+{0x78,0x82106064},
+{0x7c,0xda204000},
+{0xf0,0x29},
+{0x00,0x0300007f},
+{0x04,0x92142010},
+{0x08,0x821063ff},
+{0x0c,0x1507ffc0},
+{0x10,0xc2224000},
+{0x14,0x9e142030},
+{0x18,0x96032001},
+{0x1c,0xd423c000},
+{0x20,0x972ae010},
+{0x24,0xa0142014},
+{0x28,0x9602c00c},
+{0x2c,0xa32b2010},
+{0x30,0x912b2004},
+{0x34,0xd4240000},
+{0x38,0x80a32000},
+{0x3c,0x82044008},
+{0x40,0x9602e002},
+{0x44,0x9a15a084},
+{0x48,0x9815a088},
+{0x4c,0x02800005},
+{0x50,0x9415a08c},
+{0x54,0xc2234000},
+{0x58,0xe2230000},
+{0x5c,0xd6228000},
+{0x60,0xc2002344},
+{0x64,0xc2248000},
+{0x68,0x033fc0c0},
+{0x6c,0x82106004},
+{0x70,0x9a103fff},
+{0x74,0x7fffff7f},
+{0x78,0xda204000},
+{0x7c,0x03200040},
+{0xf0,0x2a},
+{0x00,0xc2258000},
+{0x04,0x81c7e008},
+{0x08,0x81e80000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0xa7800000},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x01000000},
+{0x28,0x81c3e008},
+{0x2c,0x01000000},
+{0x30,0x9de3bf98},
+{0x34,0xb6102000},
+{0x38,0xb0102000},
+{0x3c,0xb8102000},
+{0x40,0xc2070000},
+{0x44,0xb8072004},
+{0x48,0x80a724ff},
+{0x4c,0x08bffffd},
+{0x50,0xb606c001},
+{0x54,0x03000016},
+{0x58,0x821061cc},
+{0x5c,0x82087f80},
+{0x60,0xb8102d00},
+{0x64,0x80a70001},
+{0x68,0x3a80001e},
+{0x6c,0xfa002180},
+{0x70,0xb4100001},
+{0x74,0x9a102001},
+{0x78,0x9e100001},
+{0x7c,0xc2070000},
+{0xf0,0x2b},
+{0x00,0xb8072004},
+{0x04,0xb21f001a},
+{0x08,0xbb37200c},
+{0x0c,0x808f2fff},
+{0x10,0x02800005},
+{0x14,0xb606c001},
+{0x18,0x80a7001a},
+{0x1c,0x1280000e},
+{0x20,0x80a7000f},
+{0x24,0x80a00019},
+{0x28,0xba677fff},
+{0x2c,0x832f6002},
+{0x30,0xc2006180},
+{0x34,0xb606c001},
+{0x38,0xba077fff},
+{0x3c,0x80a6e000},
+{0x40,0x832b401d},
+{0x44,0x12800003},
+{0x48,0xb6102000},
+{0x4c,0xb0160001},
+{0x50,0x80a7000f},
+{0x54,0x2abfffeb},
+{0x58,0xc2070000},
+{0x5c,0xfa002180},
+{0x60,0xb816001d},
+{0x64,0x821e001d},
+{0x68,0x80a70001},
+{0x6c,0x32800009},
+{0x70,0xba16001d},
+{0x74,0x0329697f},
+{0x78,0x821063ff},
+{0x7c,0x80a70001},
+{0xf0,0x2c},
+{0x00,0x32800004},
+{0x04,0xba16001d},
+{0x08,0x3b169696},
+{0x0c,0xba17625a},
+{0x10,0x033fc180},
+{0x14,0x82106030},
+{0x18,0xfa204000},
+{0x1c,0x81c7e008},
+{0x20,0x91e82001},
+{0x24,0x033fc180},
+{0x28,0xc0204000},
+{0x2c,0x82102500},
+{0x30,0xc0204000},
+{0x34,0x82006004},
+{0x38,0x80a0687c},
+{0x3c,0x28bffffe},
+{0x40,0xc0204000},
+{0x44,0x033fc200},
+{0x48,0x82106030},
+{0x4c,0xda004000},
+{0x50,0x82102010},
+{0x54,0xc2202574},
+{0x58,0x82102001},
+{0x5c,0xc2202540},
+{0x60,0x8210200f},
+{0x64,0xc2202548},
+{0x68,0x81c3e008},
+{0x6c,0xda20257c},
+{0x70,0x9de3bf98},
+{0x74,0x82102000},
+{0x78,0x80a04019},
+{0x7c,0x16800015},
+{0xf0,0x2d},
+{0x00,0x9e100019},
+{0x04,0xb6006001},
+{0x08,0x80a6c00f},
+{0x0c,0x1680000f},
+{0x10,0xba10001b},
+{0x14,0xb3286002},
+{0x18,0xb52f6002},
+{0x1c,0xf8060019},
+{0x20,0xc206001a},
+{0x24,0x80a70001},
+{0x28,0x04800004},
+{0x2c,0xba076001},
+{0x30,0xc2260019},
+{0x34,0xf826001a},
+{0x38,0x80a7400f},
+{0x3c,0x06bffff8},
+{0x40,0xb52f6002},
+{0x44,0x80a6c00f},
+{0x48,0x06bfffef},
+{0x4c,0x8210001b},
+{0x50,0x81c7e008},
+{0x54,0x81e80000},
+{0x58,0x033fc140},
+{0x5c,0x82106048},
+{0x60,0xda004000},
+{0x64,0x03000040},
+{0x68,0x808b4001},
+{0x6c,0x03000018},
+{0x70,0x12800004},
+{0x74,0x90106100},
+{0x78,0x82006400},
+{0x7c,0x901061d8},
+{0xf0,0x2e},
+{0x00,0x81c3e008},
+{0x04,0x01000000},
+{0x08,0x9de3bf18},
+{0x0c,0xa12e2002},
+{0x10,0x1b00003f},
+{0x14,0xc20423d8},
+{0x18,0x9a1363ff},
+{0x1c,0xb008400d},
+{0x20,0x97306010},
+{0x24,0xc200247c},
+{0x28,0x9a22c018},
+{0x2c,0x825e0001},
+{0x30,0x92836001},
+{0x34,0x0280000c},
+{0x38,0xb0004019},
+{0x3c,0x9a100009},
+{0x40,0x9807bf78},
+{0x44,0x82060018},
+{0x48,0xc2168001},
+{0x4c,0xc2230000},
+{0x50,0xc200247c},
+{0x54,0xb0060001},
+{0x58,0x9a837fff},
+{0x5c,0x12bffffa},
+{0x60,0x98032004},
+{0x64,0x7fffffc3},
+{0x68,0x9007bf78},
+{0x6c,0x0300003f},
+{0x70,0xda0423e8},
+{0x74,0x821063ff},
+{0x78,0xb00b4001},
+{0x7c,0x97336010},
+{0xf0,0x2f},
+{0x00,0x80a6000b},
+{0x04,0x92102000},
+{0x08,0x1880000b},
+{0x0c,0x9a100018},
+{0x10,0x832e2002},
+{0x14,0x8200401e},
+{0x18,0x98007f78},
+{0x1c,0xc2030000},
+{0x20,0x9a036001},
+{0x24,0x92024001},
+{0x28,0x80a3400b},
+{0x2c,0x08bffffc},
+{0x30,0x98032004},
+{0x34,0xb022c018},
+{0x38,0xb0062001},
+{0x3c,0x81800000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0xb0724018},
+{0x50,0x81c7e008},
+{0x54,0x81e80000},
+{0x58,0x832a2002},
+{0x5c,0x82004008},
+{0x60,0x9b326002},
+{0x64,0x8200400d},
+{0x68,0x83286002},
+{0x6c,0x920a6003},
+{0x70,0x932a6003},
+{0x74,0xd00065b0},
+{0x78,0x91320009},
+{0x7c,0x81c3e008},
+{0xf0,0x30},
+{0x00,0x900a20ff},
+{0x04,0x972a2002},
+{0x08,0x99326002},
+{0x0c,0x9002c008},
+{0x10,0x9002000c},
+{0x14,0x920a6003},
+{0x18,0x932a6003},
+{0x1c,0x912a2002},
+{0x20,0x821020ff},
+{0x24,0xda0225b0},
+{0x28,0x83284009},
+{0x2c,0x822b4001},
+{0x30,0x952a8009},
+{0x34,0x8210400a},
+{0x38,0xc22225b0},
+{0x3c,0xda02e3a4},
+{0x40,0x992b2002},
+{0x44,0x81c3e008},
+{0x48,0xc223400c},
+{0x4c,0x9de3bf98},
+{0x50,0xda002310},
+{0x54,0x80a36000},
+{0x58,0x02800049},
+{0x5c,0xb0102000},
+{0x60,0xc2002594},
+{0x64,0x82006001},
+{0x68,0x80a0400d},
+{0x6c,0x0a800044},
+{0x70,0xc2202594},
+{0x74,0xa4102000},
+{0x78,0xc20023d4},
+{0x7c,0x80a48001},
+{0xf0,0x31},
+{0x00,0xc0202594},
+{0x04,0xa2102000},
+{0x08,0x1a800028},
+{0x0c,0xa72c6002},
+{0x10,0xc204e364},
+{0x14,0x80a06000},
+{0x18,0x02800020},
+{0x1c,0xa0102000},
+{0x20,0xc20022fc},
+{0x24,0x80a40001},
+{0x28,0x1a80001c},
+{0x2c,0x1500001a},
+{0x30,0xc200255c},
+{0x34,0xf00c2380},
+{0x38,0x9412a2b0},
+{0x3c,0x90100011},
+{0x40,0x80a06000},
+{0x44,0x02800007},
+{0x48,0x920e20ff},
+{0x4c,0x7fffff83},
+{0x50,0x01000000},
+{0x54,0x94100008},
+{0x58,0x90100011},
+{0x5c,0x920e20ff},
+{0x60,0x7fffff8a},
+{0x64,0xa0042001},
+{0x68,0xc204e364},
+{0x6c,0xda002348},
+{0x70,0x98020001},
+{0x74,0x82034001},
+{0x78,0x80a20001},
+{0x7c,0x38bfffe9},
+{0xf0,0x32},
+{0x00,0xa404a001},
+{0x04,0x80a3000d},
+{0x08,0x3abfffe7},
+{0x0c,0xc20022fc},
+{0x10,0x10bfffe4},
+{0x14,0xa404a001},
+{0x18,0xa2046001},
+{0x1c,0xc20023d4},
+{0x20,0x10bfffda},
+{0x24,0x80a44001},
+{0x28,0xd800258c},
+{0x2c,0x80a0000c},
+{0x30,0x9a603fff},
+{0x34,0x80a00012},
+{0x38,0x82603fff},
+{0x3c,0x808b4001},
+{0x40,0x02800007},
+{0x44,0x80a4a000},
+{0x48,0xc200255c},
+{0x4c,0x80a00001},
+{0x50,0x82603fff},
+{0x54,0xc220255c},
+{0x58,0x80a4a000},
+{0x5c,0x12800004},
+{0x60,0x82032001},
+{0x64,0x10800003},
+{0x68,0xc020258c},
+{0x6c,0xc220258c},
+{0x70,0xc200258c},
+{0x74,0x80a06003},
+{0x78,0xb0603fff},
+{0x7c,0x81c7e008},
+{0xf0,0x33},
+{0x00,0x81e80000},
+{0x04,0x9de3bf98},
+{0x08,0xc2002540},
+{0x0c,0x80a06000},
+{0x10,0x02800029},
+{0x14,0xb0102000},
+{0x18,0xda002210},
+{0x1c,0x80a36000},
+{0x20,0x02800025},
+{0x24,0xb4102001},
+{0x28,0xde0022f8},
+{0x2c,0x80a6800f},
+{0x30,0x18800017},
+{0x34,0x0300001d},
+{0x38,0x82106060},
+{0x3c,0xb6006058},
+{0x40,0xf20022fc},
+{0x44,0xb8102001},
+{0x48,0x80a70019},
+{0x4c,0x3880000d},
+{0x50,0xb406a001},
+{0x54,0xba06e004},
+{0x58,0xc2074000},
+{0x5c,0xb8072001},
+{0x60,0x80a0400d},
+{0x64,0x14800003},
+{0x68,0xba076004},
+{0x6c,0xb0062001},
+{0x70,0x80a70019},
+{0x74,0x28bffffa},
+{0x78,0xc2074000},
+{0x7c,0xb406a001},
+{0xf0,0x34},
+{0x00,0x80a6800f},
+{0x04,0x08bffff0},
+{0x08,0xb606e058},
+{0x0c,0xc21023ce},
+{0x10,0x80a60001},
+{0x14,0x24800007},
+{0x18,0xc0202598},
+{0x1c,0xc2002598},
+{0x20,0x82006001},
+{0x24,0xc2202598},
+{0x28,0x10800003},
+{0x2c,0xb0102001},
+{0x30,0xb0102000},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x9a102005},
+{0x40,0x8210200b},
+{0x44,0x9a234008},
+{0x48,0x82204008},
+{0x4c,0x9b2b6002},
+{0x50,0x80a22005},
+{0x54,0x14800007},
+{0x58,0x99286002},
+{0x5c,0x033fc200},
+{0x60,0x8210600c},
+{0x64,0xc2004000},
+{0x68,0x10800006},
+{0x6c,0x8330400d},
+{0x70,0x033fc200},
+{0x74,0x82106008},
+{0x78,0xc2004000},
+{0x7c,0x8330400c},
+{0xf0,0x35},
+{0x00,0x81c3e008},
+{0x04,0x9008600f},
+{0x08,0x9de3bf98},
+{0x0c,0xc200247c},
+{0x10,0x83306001},
+{0x14,0x80a60001},
+{0x18,0x1a800006},
+{0x1c,0x90100018},
+{0x20,0x7fffffe7},
+{0x24,0x01000000},
+{0x28,0x10800006},
+{0x2c,0xb0020008},
+{0x30,0x7fffffe3},
+{0x34,0x90260001},
+{0x38,0x90020008},
+{0x3c,0xb0022001},
+{0x40,0x81c7e008},
+{0x44,0x81e80000},
+{0x48,0x9de3bf98},
+{0x4c,0xa8102000},
+{0x50,0xc20023d4},
+{0x54,0x80a50001},
+{0x58,0x1a800057},
+{0x5c,0xe2002348},
+{0x60,0xa4102000},
+{0x64,0xc200247c},
+{0x68,0x80a48001},
+{0x6c,0x3a80004e},
+{0x70,0xa8052001},
+{0x74,0x7fffffe5},
+{0x78,0x90100012},
+{0x7c,0x92100008},
+{0xf0,0x36},
+{0x00,0x7fffff36},
+{0x04,0x90100014},
+{0x08,0x80a62000},
+{0x0c,0x12800004},
+{0x10,0xa0100008},
+{0x14,0x10800016},
+{0x18,0xa0102000},
+{0x1c,0x80a62008},
+{0x20,0x18800011},
+{0x24,0x80a62007},
+{0x28,0x7ffffeec},
+{0x2c,0x01000000},
+{0x30,0x94100008},
+{0x34,0x90100014},
+{0x38,0x7ffffef4},
+{0x3c,0x921ca001},
+{0x40,0x80a20011},
+{0x44,0x04800007},
+{0x48,0xa6100008},
+{0x4c,0x9a102008},
+{0x50,0x9a234018},
+{0x54,0x82102001},
+{0x58,0x8328400d},
+{0x5c,0xa02c0001},
+{0x60,0x80a62007},
+{0x64,0x18800008},
+{0x68,0x80a62008},
+{0x6c,0x9a102007},
+{0x70,0x9a234018},
+{0x74,0x82102001},
+{0x78,0x8328400d},
+{0x7c,0x10800022},
+{0xf0,0x37},
+{0x00,0xa0140001},
+{0x04,0x1280000a},
+{0x08,0x821e2009},
+{0x0c,0x80a420fe},
+{0x10,0x24800002},
+{0x14,0xa0042001},
+{0x18,0x0300001d},
+{0x1c,0x9b2ca002},
+{0x20,0x82106060},
+{0x24,0x10800018},
+{0x28,0xe6234001},
+{0x2c,0x80a00001},
+{0x30,0x9a603fff},
+{0x34,0x80a420fe},
+{0x38,0x04800003},
+{0x3c,0x82102001},
+{0x40,0x82102000},
+{0x44,0x808b4001},
+{0x48,0x0280000f},
+{0x4c,0x0300001d},
+{0x50,0x9b2ca002},
+{0x54,0x82106060},
+{0x58,0xc2034001},
+{0x5c,0x80a04011},
+{0x60,0x18800003},
+{0x64,0x9a204011},
+{0x68,0x9a244001},
+{0x6c,0x80a4c011},
+{0x70,0x14800003},
+{0x74,0x8224c011},
+{0x78,0x82244013},
+{0x7c,0x80a34001},
+{0xf0,0x38},
+{0x00,0xa0642000},
+{0x04,0x7fffffa1},
+{0x08,0x90100012},
+{0x0c,0x92100008},
+{0x10,0x90100014},
+{0x14,0x7ffffefc},
+{0x18,0x94100010},
+{0x1c,0x10bfffb2},
+{0x20,0xa404a001},
+{0x24,0xc20023d4},
+{0x28,0x80a50001},
+{0x2c,0x0abfffae},
+{0x30,0xa4102000},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x033fc200},
+{0x40,0x961060a0},
+{0x44,0x98102000},
+{0x48,0x832b2002},
+{0x4c,0x9a03000c},
+{0x50,0xda136400},
+{0x54,0x98032001},
+{0x58,0x80a3201e},
+{0x5c,0x04bffffb},
+{0x60,0xda20400b},
+{0x64,0x81c3e008},
+{0x68,0x01000000},
+{0x6c,0x9de3bf98},
+{0x70,0xc2002544},
+{0x74,0x82006001},
+{0x78,0xc2202544},
+{0x7c,0x0300001b},
+{0xf0,0x39},
+{0x00,0xb4106388},
+{0x04,0x9e100018},
+{0x08,0x031fffdf},
+{0x0c,0xb01063ff},
+{0x10,0xba102000},
+{0x14,0xb72f6002},
+{0x18,0xc2002544},
+{0x1c,0x80a06009},
+{0x20,0xb2076001},
+{0x24,0x12800007},
+{0x28,0xb810001b},
+{0x2c,0xc206c01a},
+{0x30,0x83306001},
+{0x34,0x82084018},
+{0x38,0xc226c01a},
+{0x3c,0xc2002544},
+{0x40,0x80a06008},
+{0x44,0x08800006},
+{0x48,0xc207001a},
+{0x4c,0xfa03c01c},
+{0x50,0xbb376001},
+{0x54,0x10800003},
+{0x58,0xba0f4018},
+{0x5c,0xfa03c01c},
+{0x60,0x8200401d},
+{0x64,0xc227001a},
+{0x68,0x80a66135},
+{0x6c,0x08bfffea},
+{0x70,0xba100019},
+{0x74,0x81c7e008},
+{0x78,0x81e80000},
+{0x7c,0x9de3bf98},
+{0xf0,0x3a},
+{0x00,0x9e102001},
+{0x04,0xc20022fc},
+{0x08,0x80a3c001},
+{0x0c,0x1880002b},
+{0x10,0x0300001d},
+{0x14,0x82106060},
+{0x18,0x9a006004},
+{0x1c,0xc20022f8},
+{0x20,0xb6102001},
+{0x24,0x80a6c001},
+{0x28,0x0300001b},
+{0x2c,0xb2106388},
+{0x30,0x82007c00},
+{0x34,0xb41062b0},
+{0x38,0x1880001b},
+{0x3c,0xc20be37f},
+{0x40,0xb0004001},
+{0x44,0xb8036058},
+{0x48,0xc2002544},
+{0x4c,0xb606e001},
+{0x50,0x80a06008},
+{0x54,0x08800003},
+{0x58,0xfa164018},
+{0x5c,0xba07401d},
+{0x60,0x81800000},
+{0x64,0xc2002548},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x82774001},
+{0x74,0xba100001},
+{0x78,0xc2168018},
+{0x7c,0xba274001},
+{0xf0,0x3b},
+{0x00,0xfa270000},
+{0x04,0xc200247c},
+{0x08,0x82004001},
+{0x0c,0xfa0022f8},
+{0x10,0xb4068001},
+{0x14,0x80a6c01d},
+{0x18,0xb2064001},
+{0x1c,0x08bfffeb},
+{0x20,0xb8072058},
+{0x24,0x9e03e001},
+{0x28,0xc20022fc},
+{0x2c,0x80a3c001},
+{0x30,0x08bfffdb},
+{0x34,0x9a036004},
+{0x38,0x81c7e008},
+{0x3c,0x81e80000},
+{0x40,0xc2002540},
+{0x44,0x80a06000},
+{0x48,0x0280000f},
+{0x4c,0x1b3fc200},
+{0x50,0xc2002298},
+{0x54,0x9a136070},
+{0x58,0xc2234000},
+{0x5c,0x0300001b},
+{0x60,0xc0202540},
+{0x64,0xc0202544},
+{0x68,0x98106388},
+{0x6c,0x9a102000},
+{0x70,0x832b6002},
+{0x74,0x9a036001},
+{0x78,0x80a36135},
+{0x7c,0x08bffffd},
+{0xf0,0x3c},
+{0x00,0xc020400c},
+{0x04,0x81c3e008},
+{0x08,0x01000000},
+{0x0c,0xc200247c},
+{0x10,0xda0022f8},
+{0x14,0x8258400d},
+{0x18,0x97306001},
+{0x1c,0x98102000},
+{0x20,0x80a3000b},
+{0x24,0x1680000f},
+{0x28,0x0300001a},
+{0x2c,0x901062b0},
+{0x30,0x82006400},
+{0x34,0x92106388},
+{0x38,0x0307ffc7},
+{0x3c,0x941063ff},
+{0x40,0x9b2b2002},
+{0x44,0xc2034009},
+{0x48,0x83306003},
+{0x4c,0x8208400a},
+{0x50,0x98032001},
+{0x54,0x80a3000b},
+{0x58,0x06bffffa},
+{0x5c,0xc2234008},
+{0x60,0x0300001d},
+{0x64,0x9a106060},
+{0x68,0x98102000},
+{0x6c,0x832b2002},
+{0x70,0x98032001},
+{0x74,0x80a322d5},
+{0x78,0x04bffffd},
+{0x7c,0xc020400d},
+{0xf0,0x3d},
+{0x00,0x81c3e008},
+{0x04,0x01000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x3e},
+{0x00,0x82102020},
+{0x04,0x82204009},
+{0x08,0x80a06040},
+{0x0c,0x04800003},
+{0x10,0x9a100008},
+{0x14,0x90023fff},
+{0x18,0x80a06080},
+{0x1c,0x34800002},
+{0x20,0x90037ffe},
+{0x24,0x80a06000},
+{0x28,0x24800002},
+{0x2c,0x90036001},
+{0x30,0x80a07fc0},
+{0x34,0x24800002},
+{0x38,0x90036002},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x900221ff},
+{0x48,0x833a201f},
+{0x4c,0x8330601a},
+{0x50,0x82020001},
+{0x54,0x82087fc0},
+{0x58,0x90220001},
+{0x5c,0x81c3e008},
+{0x60,0x90022001},
+{0x64,0x9de3bf80},
+{0x68,0x90102020},
+{0x6c,0x7ffffff6},
+{0x70,0x90220018},
+{0x74,0x82102041},
+{0x78,0x82204008},
+{0x7c,0x98004001},
+{0xf0,0x3f},
+{0x00,0x98030001},
+{0x04,0x9a5ea016},
+{0x08,0x9a03401b},
+{0x0c,0x0300001d},
+{0x10,0x82106060},
+{0x14,0x9b2b6002},
+{0x18,0x9a034001},
+{0x1c,0xc2002300},
+{0x20,0x96020008},
+{0x24,0x9602c008},
+{0x28,0xaa006001},
+{0x2c,0xc2002308},
+{0x30,0xa52ae003},
+{0x34,0xa8006001},
+{0x38,0xa72b2003},
+{0x3c,0x96037ff8},
+{0x40,0xa0103ffe},
+{0x44,0xb0102000},
+{0x48,0x94103ffe},
+{0x4c,0xa206c010},
+{0x50,0x9804ecfc},
+{0x54,0x9e04ace8},
+{0x58,0x9202ff50},
+{0x5c,0x8206800a},
+{0x60,0x80a54001},
+{0x64,0x9a603fff},
+{0x68,0x80a50011},
+{0x6c,0x82603fff},
+{0x70,0x808b4001},
+{0x74,0x02800003},
+{0x78,0x9a102000},
+{0x7c,0xda024000},
+{0xf0,0x40},
+{0x00,0x80a22020},
+{0x04,0x34800003},
+{0x08,0xc2030000},
+{0x0c,0xc203c000},
+{0x10,0x825b4001},
+{0x14,0x9402a001},
+{0x18,0xb0060001},
+{0x1c,0x92026058},
+{0x20,0x9e03e004},
+{0x24,0x80a2a003},
+{0x28,0x04bfffed},
+{0x2c,0x98033ffc},
+{0x30,0x832c2002},
+{0x34,0x8200401e},
+{0x38,0xa0042001},
+{0x3c,0xf0207fe8},
+{0x40,0x80a42003},
+{0x44,0x04bfffe0},
+{0x48,0x9602e004},
+{0x4c,0xd207bfe0},
+{0x50,0xd407bfe4},
+{0x54,0xd607bfe8},
+{0x58,0xd807bfec},
+{0x5c,0xda07bff0},
+{0x60,0xc207bff4},
+{0x64,0x933a6008},
+{0x68,0x953aa008},
+{0x6c,0x973ae008},
+{0x70,0x993b2008},
+{0x74,0x9b3b6008},
+{0x78,0x83386008},
+{0x7c,0x90102020},
+{0xf0,0x41},
+{0x00,0xd227bfe0},
+{0x04,0xd427bfe4},
+{0x08,0xd627bfe8},
+{0x0c,0xd827bfec},
+{0x10,0xda27bff0},
+{0x14,0xc227bff4},
+{0x18,0x7fffffab},
+{0x1c,0x90220019},
+{0x20,0x80a22020},
+{0x24,0x14800011},
+{0x28,0xb0102000},
+{0x2c,0x82020008},
+{0x30,0x82004008},
+{0x34,0x83286003},
+{0x38,0x90006ce8},
+{0x3c,0x9807bfe0},
+{0x40,0x94102005},
+{0x44,0xc2030000},
+{0x48,0xda020000},
+{0x4c,0x8258400d},
+{0x50,0xb0060001},
+{0x54,0x98032004},
+{0x58,0x9482bfff},
+{0x5c,0x1cbffffa},
+{0x60,0x90022004},
+{0x64,0x30800011},
+{0x68,0x82102041},
+{0x6c,0x90204008},
+{0x70,0x82020008},
+{0x74,0x82004008},
+{0x78,0x83286003},
+{0x7c,0x90006cfc},
+{0xf0,0x42},
+{0x00,0x9807bfe0},
+{0x04,0x94102005},
+{0x08,0xc2030000},
+{0x0c,0xda020000},
+{0x10,0x8258400d},
+{0x14,0xb0060001},
+{0x18,0x98032004},
+{0x1c,0x9482bfff},
+{0x20,0x1cbffffa},
+{0x24,0x90023ffc},
+{0x28,0x81c7e008},
+{0x2c,0x81e80000},
+{0x30,0x9de3bf98},
+{0x34,0x9010001a},
+{0x38,0x7fffff72},
+{0x3c,0x92100018},
+{0x40,0xb4100008},
+{0x44,0x9010001b},
+{0x48,0x7fffff6e},
+{0x4c,0x92100019},
+{0x50,0x7fffff85},
+{0x54,0x97e80008},
+{0x58,0x01000000},
+{0x5c,0x9de3bf90},
+{0x60,0xa8102000},
+{0x64,0xf427a04c},
+{0x68,0xaa102000},
+{0x6c,0xac102000},
+{0x70,0xae102010},
+{0x74,0xe827bff4},
+{0x78,0xb4250017},
+{0x7c,0x9210001a},
+{0xf0,0x43},
+{0x00,0x94100018},
+{0x04,0x96100019},
+{0x08,0x7fffffea},
+{0x0c,0x90100015},
+{0x10,0xa6100008},
+{0x14,0xb6254017},
+{0x18,0x92100014},
+{0x1c,0x94100018},
+{0x20,0x96100019},
+{0x24,0x7fffffe3},
+{0x28,0x9010001b},
+{0x2c,0xa4100008},
+{0x30,0xb8050017},
+{0x34,0x9210001c},
+{0x38,0x94100018},
+{0x3c,0x96100019},
+{0x40,0x7fffffdc},
+{0x44,0x90100015},
+{0x48,0xa2100008},
+{0x4c,0xba054017},
+{0x50,0x92100014},
+{0x54,0x94100018},
+{0x58,0x96100019},
+{0x5c,0x7fffffd5},
+{0x60,0x9010001d},
+{0x64,0xa0100008},
+{0x68,0x90100015},
+{0x6c,0x92100014},
+{0x70,0x94100018},
+{0x74,0x7fffffcf},
+{0x78,0x96100019},
+{0x7c,0xa624c008},
+{0xf0,0x44},
+{0x00,0xa0240008},
+{0x04,0xa4248008},
+{0x08,0xa2244008},
+{0x0c,0x80a4e000},
+{0x10,0x04800004},
+{0x14,0x82102000},
+{0x18,0x82100013},
+{0x1c,0xac102001},
+{0x20,0x80a48001},
+{0x24,0x04800005},
+{0x28,0x80a44001},
+{0x2c,0x82100012},
+{0x30,0xac102003},
+{0x34,0x80a44001},
+{0x38,0x04800005},
+{0x3c,0x80a40001},
+{0x40,0x82100011},
+{0x44,0xac102005},
+{0x48,0x80a40001},
+{0x4c,0x04800005},
+{0x50,0x80a06000},
+{0x54,0x82100010},
+{0x58,0xac102007},
+{0x5c,0x80a06000},
+{0x60,0x14800017},
+{0x64,0x80a5a001},
+{0x68,0x80a5e020},
+{0x6c,0x12800004},
+{0x70,0x80a5e010},
+{0x74,0x10800020},
+{0x78,0xae102010},
+{0x7c,0x12800004},
+{0xf0,0x45},
+{0x00,0x80a5e008},
+{0x04,0x1080001c},
+{0x08,0xae102008},
+{0x0c,0x12800004},
+{0x10,0x80a5e004},
+{0x14,0x10800018},
+{0x18,0xae102004},
+{0x1c,0x12800004},
+{0x20,0x80a5e002},
+{0x24,0x10800014},
+{0x28,0xae102002},
+{0x2c,0x12800018},
+{0x30,0x832e2006},
+{0x34,0x10800010},
+{0x38,0xae102001},
+{0x3c,0x12800004},
+{0x40,0x80a5a003},
+{0x44,0x1080000c},
+{0x48,0xa810001a},
+{0x4c,0x12800004},
+{0x50,0x80a5a005},
+{0x54,0x10800008},
+{0x58,0xaa10001b},
+{0x5c,0x12800004},
+{0x60,0x80a5a007},
+{0x64,0x10800004},
+{0x68,0xa810001c},
+{0x6c,0x22800002},
+{0x70,0xaa10001d},
+{0x74,0xc207bff4},
+{0x78,0x82006001},
+{0x7c,0x80a0607f},
+{0xf0,0x46},
+{0x00,0x04bfff9e},
+{0x04,0xc227bff4},
+{0x08,0x832e2006},
+{0x0c,0xaa054001},
+{0x10,0x82380015},
+{0x14,0x8338601f},
+{0x18,0xaa0d4001},
+{0x1c,0x9b2e6006},
+{0x20,0xc2002308},
+{0x24,0xa885000d},
+{0x28,0x1c800004},
+{0x2c,0x83286006},
+{0x30,0x10800005},
+{0x34,0xa8102000},
+{0x38,0x80a50001},
+{0x3c,0x38800002},
+{0x40,0xa8100001},
+{0x44,0x9a0d2fff},
+{0x48,0x832d6010},
+{0x4c,0x8210400d},
+{0x50,0xd807a04c},
+{0x54,0x9b2b2002},
+{0x58,0xc2236768},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0x9de3bf98},
+{0x68,0xfa50245a},
+{0x6c,0x80a76000},
+{0x70,0x0280003d},
+{0x74,0x9e102001},
+{0x78,0xc20022fc},
+{0x7c,0x80a3c001},
+{0xf0,0x47},
+{0x00,0x18800039},
+{0x04,0x1700001d},
+{0x08,0x8212e060},
+{0x0c,0x9810001d},
+{0x10,0x9a006004},
+{0x14,0xb6102001},
+{0x18,0xf20022f8},
+{0x1c,0x80a6c019},
+{0x20,0xb4102000},
+{0x24,0x1880002b},
+{0x28,0x82102000},
+{0x2c,0xf0502458},
+{0x30,0xba036058},
+{0x34,0xf8074000},
+{0x38,0xb606e001},
+{0x3c,0x80a70018},
+{0x40,0x06800004},
+{0x44,0xba076058},
+{0x48,0xb406801c},
+{0x4c,0x82006001},
+{0x50,0x80a6c019},
+{0x54,0x28bffff9},
+{0x58,0xf8074000},
+{0x5c,0x80a06000},
+{0x60,0x2280001d},
+{0x64,0x9e03e001},
+{0x68,0x953ea01f},
+{0x6c,0x8182a000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x827e8001},
+{0xf0,0x48},
+{0x00,0x8258400c},
+{0x04,0xbb38601f},
+{0x08,0xbb376016},
+{0x0c,0x8200401d},
+{0x10,0xb6102001},
+{0x14,0xfa0022f8},
+{0x18,0x80a6c01d},
+{0x1c,0x1880000d},
+{0x20,0xb538600a},
+{0x24,0x832be002},
+{0x28,0xba006058},
+{0x2c,0xb812e060},
+{0x30,0xc207401c},
+{0x34,0x8220401a},
+{0x38,0xc227401c},
+{0x3c,0xb606e001},
+{0x40,0xc20022f8},
+{0x44,0x80a6c001},
+{0x48,0x08bffffa},
+{0x4c,0xba076058},
+{0x50,0x9e03e001},
+{0x54,0xc20022fc},
+{0x58,0x80a3c001},
+{0x5c,0x08bfffce},
+{0x60,0x9a036004},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x9de3bf48},
+{0x70,0x1b00003f},
+{0x74,0xc2002350},
+{0x78,0x9a1363ff},
+{0x7c,0xba08400d},
+{0xf0,0x49},
+{0x00,0xa4102001},
+{0x04,0xda0022f8},
+{0x08,0x80a4800d},
+{0x0c,0x18800063},
+{0x10,0xa3306010},
+{0x14,0xae102016},
+{0x18,0xac102016},
+{0x1c,0xaa102000},
+{0x20,0xa8102000},
+{0x24,0xa6102000},
+{0x28,0x80a46000},
+{0x2c,0x02800033},
+{0x30,0xa0102000},
+{0x34,0x0300001d},
+{0x38,0x96106060},
+{0x3c,0x92102000},
+{0x40,0x9807bfa8},
+{0x44,0x8204c009},
+{0x48,0xda086440},
+{0x4c,0x8205800d},
+{0x50,0x80a36000},
+{0x54,0x02800007},
+{0x58,0x83286002},
+{0x5c,0xc200400b},
+{0x60,0xc2230000},
+{0x64,0x92026001},
+{0x68,0x10bffff7},
+{0x6c,0x98032004},
+{0x70,0x7ffffc60},
+{0x74,0x9007bfa8},
+{0x78,0x80a74011},
+{0x7c,0x1480000b},
+{0xf0,0x4a},
+{0x00,0x9210001d},
+{0x04,0x832f6002},
+{0x08,0x8200401e},
+{0x0c,0x9a007fa8},
+{0x10,0xc2034000},
+{0x14,0x92026001},
+{0x18,0xa0040001},
+{0x1c,0x80a24011},
+{0x20,0x04bffffc},
+{0x24,0x9a036004},
+{0x28,0x8224401d},
+{0x2c,0x82006001},
+{0x30,0x9b3c201f},
+{0x34,0x81836000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0xa0fc0001},
+{0x48,0x36800007},
+{0x4c,0xda0023c4},
+{0x50,0xc20023c8},
+{0x54,0x80886020},
+{0x58,0x22800026},
+{0x5c,0xaa056001},
+{0x60,0xda0023c4},
+{0x64,0x9a5c000d},
+{0x68,0x833b601f},
+{0x6c,0x83306018},
+{0x70,0x9a034001},
+{0x74,0xa13b6008},
+{0x78,0x92102000},
+{0x7c,0x1100001d},
+{0xf0,0x4b},
+{0x00,0x82050009},
+{0x04,0xda086440},
+{0x08,0x8205c00d},
+{0x0c,0x94122060},
+{0x10,0x97286002},
+{0x14,0x80a36000},
+{0x18,0x02800015},
+{0x1c,0x92026001},
+{0x20,0xc202c00a},
+{0x24,0x98204010},
+{0x28,0xda0822b0},
+{0x2c,0x833b201f},
+{0x30,0x80a0000d},
+{0x34,0x8220400c},
+{0x38,0x9a402000},
+{0x3c,0x8330601f},
+{0x40,0x808b4001},
+{0x44,0x22bfffef},
+{0x48,0xd822c00a},
+{0x4c,0xda0ca2b0},
+{0x50,0x9a5b000d},
+{0x54,0x833b601f},
+{0x58,0x83306019},
+{0x5c,0x9a034001},
+{0x60,0x993b6007},
+{0x64,0x10bfffe7},
+{0x68,0xd822c00a},
+{0x6c,0xaa056001},
+{0x70,0xa604e00c},
+{0x74,0x80a56001},
+{0x78,0x04bfffac},
+{0x7c,0xa805200c},
+{0xf0,0x4c},
+{0x00,0xa404a001},
+{0x04,0xc20022f8},
+{0x08,0x80a48001},
+{0x0c,0xac05a016},
+{0x10,0x08bfffa3},
+{0x14,0xae05e016},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0xc21023b6},
+{0x28,0xf81023be},
+{0x2c,0x94102001},
+{0x30,0xfa0022f8},
+{0x34,0x80a2801d},
+{0x38,0xa6004001},
+{0x3c,0xa207001c},
+{0x40,0x18800085},
+{0x44,0xe4002214},
+{0x48,0x96102058},
+{0x4c,0x98102016},
+{0x50,0x1300001d},
+{0x54,0xb8102001},
+{0x58,0xc20022fc},
+{0x5c,0x80a70001},
+{0x60,0x38800078},
+{0x64,0x9402a001},
+{0x68,0x2d00001d},
+{0x6c,0xaa126060},
+{0x70,0xa8126064},
+{0x74,0x8203001c},
+{0x78,0xb7286002},
+{0x7c,0xfa06c015},
+{0xf0,0x4d},
+{0x00,0x80a74012},
+{0x04,0x2480006a},
+{0x08,0xb8072001},
+{0x0c,0x80a74013},
+{0x10,0x16800014},
+{0x14,0x83286002},
+{0x18,0x80a74011},
+{0x1c,0x06800007},
+{0x20,0x8215a05c},
+{0x24,0xc206c014},
+{0x28,0x80a04011},
+{0x2c,0x1680000c},
+{0x30,0x8203001c},
+{0x34,0x8215a05c},
+{0x38,0xc206c001},
+{0x3c,0x80a74001},
+{0x40,0x2680005b},
+{0x44,0xb8072001},
+{0x48,0xc206c014},
+{0x4c,0x80a74001},
+{0x50,0x24800057},
+{0x54,0xb8072001},
+{0x58,0x8203001c},
+{0x5c,0x83286002},
+{0x60,0xfa0023c8},
+{0x64,0x808f6040},
+{0x68,0xf0004015},
+{0x6c,0x0280000b},
+{0x70,0xa0072001},
+{0x74,0xfa0022fc},
+{0x78,0x83376001},
+{0x7c,0x80a70001},
+{0xf0,0x4e},
+{0x00,0x28800007},
+{0x04,0x9a102000},
+{0x08,0x8227401c},
+{0x0c,0xb8006001},
+{0x10,0x10800003},
+{0x14,0x9a102001},
+{0x18,0x9a102000},
+{0x1c,0xfa00221c},
+{0x20,0xc2002220},
+{0x24,0xba5f401c},
+{0x28,0xba074001},
+{0x2c,0xba5e001d},
+{0x30,0x833f601f},
+{0x34,0x83306016},
+{0x38,0xba074001},
+{0x3c,0xc2002224},
+{0x40,0x8258401c},
+{0x44,0xbb3f600a},
+{0x48,0xba074001},
+{0x4c,0xc2002240},
+{0x50,0xb0074001},
+{0x54,0xc2002218},
+{0x58,0xb6070001},
+{0x5c,0x90126060},
+{0x60,0xb202c008},
+{0x64,0xb92ee002},
+{0x68,0xc20023c8},
+{0x6c,0xb806401c},
+{0x70,0x9e100019},
+{0x74,0x80886040},
+{0x78,0x02800007},
+{0x7c,0xb410001c},
+{0xf0,0x4f},
+{0x00,0xc20022fc},
+{0x04,0x83306001},
+{0x08,0x80a6c001},
+{0x0c,0x38800027},
+{0x10,0xb8100010},
+{0x14,0xfa0022fc},
+{0x18,0x8227401b},
+{0x1c,0x83286002},
+{0x20,0x80a6c01d},
+{0x24,0x18800020},
+{0x28,0x82064001},
+{0x2c,0x80a36000},
+{0x30,0x32800002},
+{0x34,0xb8006004},
+{0x38,0xc2070000},
+{0x3c,0x82204018},
+{0x40,0xc2270000},
+{0x44,0xfa002228},
+{0x48,0x8226c01d},
+{0x4c,0x80a6c01d},
+{0x50,0x04800013},
+{0x54,0xb85e0001},
+{0x58,0x80a36000},
+{0x5c,0x22800008},
+{0x60,0xc200222c},
+{0x64,0xc20022fc},
+{0x68,0x8220401b},
+{0x6c,0x83286002},
+{0x70,0x8203c001},
+{0x74,0xb4006004},
+{0x78,0xc200222c},
+{0x7c,0x825f0001},
+{0xf0,0x50},
+{0x00,0xbb38601f},
+{0x04,0xbb376018},
+{0x08,0x8200401d},
+{0x0c,0xfa068000},
+{0x10,0x83386008},
+{0x14,0xba274001},
+{0x18,0xfa268000},
+{0x1c,0x10bfffd1},
+{0x20,0xb606e001},
+{0x24,0xb8100010},
+{0x28,0xb8072001},
+{0x2c,0xc20022fc},
+{0x30,0x80a70001},
+{0x34,0x08bfff91},
+{0x38,0x8203001c},
+{0x3c,0x9402a001},
+{0x40,0xc20022f8},
+{0x44,0x80a28001},
+{0x48,0x98032016},
+{0x4c,0x08bfff82},
+{0x50,0x9602e058},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf98},
+{0x60,0xc21023b6},
+{0x64,0xf81023be},
+{0x68,0x96102001},
+{0x6c,0xfa0022fc},
+{0x70,0x80a2c01d},
+{0x74,0xa0004001},
+{0x78,0x9207001c},
+{0x7c,0x1880005c},
+{0xf0,0x51},
+{0x00,0xd0002214},
+{0x04,0x1500001d},
+{0x08,0x9a102001},
+{0x0c,0xc20022f8},
+{0x10,0x80a34001},
+{0x14,0x18800051},
+{0x18,0x832ae002},
+{0x1c,0xb2006058},
+{0x20,0x2700001d},
+{0x24,0xa412a060},
+{0x28,0xa212a0b8},
+{0x2c,0xfa064012},
+{0x30,0x80a74008},
+{0x34,0x24800045},
+{0x38,0x9a036001},
+{0x3c,0x80a74010},
+{0x40,0x36800013},
+{0x44,0xfa00221c},
+{0x48,0x80a74009},
+{0x4c,0x06800007},
+{0x50,0x8214e008},
+{0x54,0xc2064011},
+{0x58,0x80a04009},
+{0x5c,0x3680000c},
+{0x60,0xfa00221c},
+{0x64,0x8214e008},
+{0x68,0xc2064001},
+{0x6c,0x80a74001},
+{0x70,0x26800036},
+{0x74,0x9a036001},
+{0x78,0xc2064011},
+{0x7c,0x80a74001},
+{0xf0,0x52},
+{0x00,0x24800032},
+{0x04,0x9a036001},
+{0x08,0xfa00221c},
+{0x0c,0xc2002220},
+{0x10,0xba5f400d},
+{0x14,0xba074001},
+{0x18,0xf0064012},
+{0x1c,0xba5e001d},
+{0x20,0x833f601f},
+{0x24,0x83306016},
+{0x28,0xba074001},
+{0x2c,0xc2002224},
+{0x30,0x8258400d},
+{0x34,0xbb3f600a},
+{0x38,0xba074001},
+{0x3c,0xc2002218},
+{0x40,0xb6034001},
+{0x44,0xc2002240},
+{0x48,0xb0074001},
+{0x4c,0xc20022f8},
+{0x50,0x80a6c001},
+{0x54,0x1880001a},
+{0x58,0x825ee016},
+{0x5c,0x8200400b},
+{0x60,0xb5286002},
+{0x64,0x9812a060},
+{0x68,0xc206800c},
+{0x6c,0x9e204018},
+{0x70,0xde26800c},
+{0x74,0xfa002228},
+{0x78,0x8226c01d},
+{0x7c,0x80a6c01d},
+{0xf0,0x53},
+{0x00,0xb85e0001},
+{0x04,0x0480000a},
+{0x08,0xb606e001},
+{0x0c,0xc200222c},
+{0x10,0x825f0001},
+{0x14,0xbb38601f},
+{0x18,0xbb376018},
+{0x1c,0x8200401d},
+{0x20,0x83386008},
+{0x24,0x8223c001},
+{0x28,0xc226800c},
+{0x2c,0xc20022f8},
+{0x30,0x80a6c001},
+{0x34,0x08bfffed},
+{0x38,0xb406a058},
+{0x3c,0x9a036001},
+{0x40,0xb2066058},
+{0x44,0x9a036001},
+{0x48,0xc20022f8},
+{0x4c,0x80a34001},
+{0x50,0x08bfffb7},
+{0x54,0xb2066058},
+{0x58,0x9602e001},
+{0x5c,0xc20022fc},
+{0x60,0x80a2c001},
+{0x64,0x08bfffaa},
+{0x68,0x9a102001},
+{0x6c,0x81c7e008},
+{0x70,0x81e80000},
+{0x74,0xc2002214},
+{0x78,0x80a06000},
+{0x7c,0x0280000c},
+{0xf0,0x54},
+{0x00,0x01000000},
+{0x04,0xc20023c8},
+{0x08,0x80886010},
+{0x0c,0x02800005},
+{0x10,0x01000000},
+{0x14,0x03000009},
+{0x18,0x81c06220},
+{0x1c,0x01000000},
+{0x20,0x0300000a},
+{0x24,0x81c0605c},
+{0x28,0x01000000},
+{0x2c,0x01000000},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0x9de3bf98},
+{0x3c,0xb0102001},
+{0x40,0xda002200},
+{0x44,0x80a6000d},
+{0x48,0x1880001c},
+{0x4c,0xc0202504},
+{0x50,0x0300001d},
+{0x54,0x82106060},
+{0x58,0xb2006058},
+{0x5c,0xde0022fc},
+{0x60,0xb6102001},
+{0x64,0x80a6c00f},
+{0x68,0x38800011},
+{0x6c,0xb0062001},
+{0x70,0xf4002238},
+{0x74,0xba066004},
+{0x78,0xc2074000},
+{0x7c,0xb606e001},
+{0xf0,0x55},
+{0x00,0xba076004},
+{0x04,0x80a0401a},
+{0x08,0x08800005},
+{0x0c,0xb820401a},
+{0x10,0xc2002504},
+{0x14,0x8200401c},
+{0x18,0xc2202504},
+{0x1c,0x80a6c00f},
+{0x20,0x28bffff7},
+{0x24,0xc2074000},
+{0x28,0xb0062001},
+{0x2c,0x80a6000d},
+{0x30,0x08bfffec},
+{0x34,0xb2066058},
+{0x38,0xfa002504},
+{0x3c,0xc200223c},
+{0x40,0x80a74001},
+{0x44,0x28800004},
+{0x48,0xc0202568},
+{0x4c,0x82102001},
+{0x50,0xc2202568},
+{0x54,0x033fc180},
+{0x58,0xfa002568},
+{0x5c,0x8210602c},
+{0x60,0xfa204000},
+{0x64,0xfa202570},
+{0x68,0x81c7e008},
+{0x6c,0x81e80000},
+{0x70,0x9de3bf70},
+{0x74,0x92102001},
+{0x78,0xd0002300},
+{0x7c,0x80a24008},
+{0xf0,0x56},
+{0x00,0x1880001a},
+{0x04,0x9e102000},
+{0x08,0x0300001d},
+{0x0c,0x82106060},
+{0x10,0x82006058},
+{0x14,0xd4002308},
+{0x18,0x96102001},
+{0x1c,0x80a2c00a},
+{0x20,0x3880000f},
+{0x24,0x92026001},
+{0x28,0x9a006004},
+{0x2c,0xd8034000},
+{0x30,0x80a3000f},
+{0x34,0x04800005},
+{0x38,0x9a036004},
+{0x3c,0x9e10000c},
+{0x40,0xa0100009},
+{0x44,0xa410000b},
+{0x48,0x9602e001},
+{0x4c,0x80a2c00a},
+{0x50,0x28bffff8},
+{0x54,0xd8034000},
+{0x58,0x92026001},
+{0x5c,0x80a24008},
+{0x60,0x08bfffee},
+{0x64,0x82006058},
+{0x68,0xa2042001},
+{0x6c,0x92043fff},
+{0x70,0x80a24011},
+{0x74,0x1480002c},
+{0x78,0x9e102000},
+{0x7c,0x0300001d},
+{0xf0,0x57},
+{0x00,0xa6106060},
+{0x04,0xa004a001},
+{0x08,0x905a6016},
+{0x0c,0x9604bfff},
+{0x10,0x80a2c010},
+{0x14,0x14800020},
+{0x18,0x8202000b},
+{0x1c,0x9b2be002},
+{0x20,0x83286002},
+{0x24,0x9a03401e},
+{0x28,0x94004013},
+{0x2c,0x9a037fd0},
+{0x30,0x833ae01f},
+{0x34,0x8220400b},
+{0x38,0x80a26000},
+{0x3c,0x0480000f},
+{0x40,0x9930601f},
+{0x44,0xc2002300},
+{0x48,0x80a04009},
+{0x4c,0x82603fff},
+{0x50,0x8088400c},
+{0x54,0x2280000a},
+{0x58,0xc0234000},
+{0x5c,0xc2002308},
+{0x60,0x80a2c001},
+{0x64,0x38800006},
+{0x68,0xc0234000},
+{0x6c,0xc2028000},
+{0x70,0x10800003},
+{0x74,0xc2234000},
+{0x78,0xc0234000},
+{0x7c,0x9602e001},
+{0xf0,0x58},
+{0x00,0x9e03e001},
+{0x04,0x9a036004},
+{0x08,0x80a2c010},
+{0x0c,0x04bfffe9},
+{0x10,0x9402a004},
+{0x14,0x92026001},
+{0x18,0x80a24011},
+{0x1c,0x04bfffdc},
+{0x20,0x90022016},
+{0x24,0x9007bfd0},
+{0x28,0x7ffffa92},
+{0x2c,0x92102009},
+{0x30,0xda07bfec},
+{0x34,0xc207bfe8},
+{0x38,0x8200400d},
+{0x3c,0xda07bff0},
+{0x40,0x8200400d},
+{0x44,0x9b30601f},
+{0x48,0x8200400d},
+{0x4c,0xd6082347},
+{0x50,0x9602e001},
+{0x54,0xda00256c},
+{0x58,0xd808257f},
+{0x5c,0x9a5b400b},
+{0x60,0x98032001},
+{0x64,0x81800000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x9a73400c},
+{0x78,0x83386001},
+{0x7c,0xc2202590},
+{0xf0,0x59},
+{0x00,0xda20256c},
+{0x04,0x96102000},
+{0x08,0x94102c18},
+{0x0c,0x992ae002},
+{0x10,0xc20323b4},
+{0x14,0x80a06000},
+{0x18,0x12800009},
+{0x1c,0x80a2e002},
+{0x20,0xc2002520},
+{0x24,0x14800004},
+{0x28,0x9a200001},
+{0x2c,0x10800014},
+{0x30,0xc2232520},
+{0x34,0x10800012},
+{0x38,0xda232520},
+{0x3c,0xda1323b4},
+{0x40,0xc2002590},
+{0x44,0x8258400d},
+{0x48,0x9b38601f},
+{0x4c,0x9b336018},
+{0x50,0x8200400d},
+{0x54,0xda1323b6},
+{0x58,0x83386008},
+{0x5c,0x8200400d},
+{0x60,0xda00256c},
+{0x64,0x8258400d},
+{0x68,0x83306007},
+{0x6c,0x80a06c18},
+{0x70,0x04800003},
+{0x74,0xc2232520},
+{0x78,0xd4232520},
+{0x7c,0x9602e001},
+{0xf0,0x5a},
+{0x00,0x80a2e003},
+{0x04,0x04bfffe3},
+{0x08,0x992ae002},
+{0x0c,0xda102472},
+{0x10,0xc2002288},
+{0x14,0x80a36000},
+{0x18,0x02800004},
+{0x1c,0xc220251c},
+{0x20,0x10800005},
+{0x24,0xda202530},
+{0x28,0x0300001f},
+{0x2c,0x821063ff},
+{0x30,0xc2202530},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x9de3bf80},
+{0x40,0x825e6016},
+{0x44,0x82004018},
+{0x48,0x3b00001d},
+{0x4c,0x83286002},
+{0x50,0xc020254c},
+{0x54,0xba176060},
+{0x58,0xe600401d},
+{0x5c,0xb6100018},
+{0x60,0xc2002528},
+{0x64,0x80a4c001},
+{0x68,0x9e10001a},
+{0x6c,0x068000c3},
+{0x70,0xb0102000},
+{0x74,0x9406c01a},
+{0x78,0x9006401a},
+{0x7c,0x8207bfe0},
+{0xf0,0x5b},
+{0x00,0xb6102004},
+{0x04,0xc0204000},
+{0x08,0xb686ffff},
+{0x0c,0x1cbffffe},
+{0x10,0x82006004},
+{0x14,0xb226400f},
+{0x18,0x80a64008},
+{0x1c,0x1480005b},
+{0x20,0x82020008},
+{0x24,0xba064019},
+{0x28,0xba074019},
+{0x2c,0x82004008},
+{0x30,0xba274001},
+{0x34,0x9627400a},
+{0x38,0x9a5e6016},
+{0x3c,0x2900001d},
+{0x40,0x8203c00f},
+{0x44,0xb6228001},
+{0x48,0x80a6c00a},
+{0x4c,0x1480004a},
+{0x50,0x833e601f},
+{0x54,0x82204019},
+{0x58,0xba06c00b},
+{0x5c,0xa530601f},
+{0x60,0x98076008},
+{0x64,0xaa152060},
+{0x68,0x80a3e001},
+{0x6c,0x0280000c},
+{0x70,0x80a6e016},
+{0x74,0x18800003},
+{0x78,0xba102001},
+{0x7c,0xba102000},
+{0xf0,0x5c},
+{0x00,0x80a66021},
+{0x04,0x18800003},
+{0x08,0x82102001},
+{0x0c,0x82102000},
+{0x10,0x80974001},
+{0x14,0x32800035},
+{0x18,0xb606e001},
+{0x1c,0x8203401b},
+{0x20,0x83286002},
+{0x24,0xc2004015},
+{0x28,0x80a04013},
+{0x2c,0x14800003},
+{0x30,0xba102001},
+{0x34,0xba102000},
+{0x38,0x833ee01f},
+{0x3c,0x8220401b},
+{0x40,0x8330601f},
+{0x44,0x808f4001},
+{0x48,0x0280000c},
+{0x4c,0x80a3e001},
+{0x50,0xc2002308},
+{0x54,0x80a0401b},
+{0x58,0x82603fff},
+{0x5c,0x80884012},
+{0x60,0x02800006},
+{0x64,0x80a3e001},
+{0x68,0xc2002300},
+{0x6c,0x80a64001},
+{0x70,0x08800081},
+{0x74,0x80a3e001},
+{0x78,0x3280001c},
+{0x7c,0xb606e001},
+{0xf0,0x5d},
+{0x00,0x8203401b},
+{0x04,0xa1286002},
+{0x08,0x932bc00c},
+{0x0c,0xb4102000},
+{0x10,0xa2152060},
+{0x14,0xb92ea002},
+{0x18,0xc2072520},
+{0x1c,0xfa040011},
+{0x20,0x80a74001},
+{0x24,0x0480000c},
+{0x28,0x8207bff8},
+{0x2c,0x80a6a003},
+{0x30,0x14800006},
+{0x34,0xb0070001},
+{0x38,0xc2063fe8},
+{0x3c,0x82104009},
+{0x40,0x10800005},
+{0x44,0xc2263fe8},
+{0x48,0xc2063fe8},
+{0x4c,0x82006001},
+{0x50,0xc2263fe8},
+{0x54,0xb406a001},
+{0x58,0x80a6a004},
+{0x5c,0x08bfffef},
+{0x60,0xb92ea002},
+{0x64,0xb606e001},
+{0x68,0x80a6c00a},
+{0x6c,0x04bfffbf},
+{0x70,0x98032001},
+{0x74,0xb2066001},
+{0x78,0x9602e003},
+{0x7c,0x80a64008},
+{0xf0,0x5e},
+{0x00,0x04bfffb0},
+{0x04,0x9a036016},
+{0x08,0xfa102470},
+{0x0c,0xc207bff0},
+{0x10,0x80a0401d},
+{0x14,0x14800003},
+{0x18,0xba102001},
+{0x1c,0xba102000},
+{0x20,0x821be002},
+{0x24,0x80a00001},
+{0x28,0x82603fff},
+{0x2c,0x80974001},
+{0x30,0x12800052},
+{0x34,0xb0103fff},
+{0x38,0xc207bfe0},
+{0x3c,0x80886010},
+{0x40,0x0280000a},
+{0x44,0xfa07bfe4},
+{0x48,0xc207bfec},
+{0x4c,0x80886082},
+{0x50,0x02800007},
+{0x54,0x808f6082},
+{0x58,0x80886028},
+{0x5c,0x12800047},
+{0x60,0xb0102003},
+{0x64,0xfa07bfe4},
+{0x68,0x808f6082},
+{0x6c,0x02800007},
+{0x70,0x808f6028},
+{0x74,0xc207bfec},
+{0x78,0x80886028},
+{0x7c,0x3280003f},
+{0xf0,0x5f},
+{0x00,0xb0102002},
+{0x04,0x808f6028},
+{0x08,0x02800008},
+{0x0c,0xf807bfe8},
+{0x10,0xc207bfec},
+{0x14,0x80886082},
+{0x18,0x02800005},
+{0x1c,0x820f200a},
+{0x20,0x10800036},
+{0x24,0xb0102002},
+{0x28,0x820f200a},
+{0x2c,0x8218600a},
+{0x30,0x80a00001},
+{0x34,0xb602bfff},
+{0x38,0xba603fff},
+{0x3c,0x821ee001},
+{0x40,0x80a00001},
+{0x44,0xb4402000},
+{0x48,0x808f401a},
+{0x4c,0x02800005},
+{0x50,0xb2023fff},
+{0x54,0x80a66001},
+{0x58,0x32800028},
+{0x5c,0xb0102001},
+{0x60,0x820f2022},
+{0x64,0x80a06022},
+{0x68,0x1280000d},
+{0x6c,0x820f2088},
+{0x70,0xc2002308},
+{0x74,0x821ec001},
+{0x78,0x80a00001},
+{0x7c,0xba402000},
+{0xf0,0x60},
+{0x00,0x821e6001},
+{0x04,0x80a00001},
+{0x08,0x82402000},
+{0x0c,0x808f4001},
+{0x10,0x3280001a},
+{0x14,0xb0102001},
+{0x18,0x820f2088},
+{0x1c,0x82186088},
+{0x20,0x80a00001},
+{0x24,0x82603fff},
+{0x28,0x8088401a},
+{0x2c,0x02800007},
+{0x30,0x820f20a0},
+{0x34,0xc2002300},
+{0x38,0x80a64001},
+{0x3c,0x3280000f},
+{0x40,0xb0102001},
+{0x44,0x820f20a0},
+{0x48,0x80a060a0},
+{0x4c,0x1280000b},
+{0x50,0xb0102000},
+{0x54,0xc2002308},
+{0x58,0x80a6c001},
+{0x5c,0x02800007},
+{0x60,0x01000000},
+{0x64,0xc2002300},
+{0x68,0x80a64001},
+{0x6c,0x12800003},
+{0x70,0xb0102001},
+{0x74,0xb0102000},
+{0x78,0x81c7e008},
+{0x7c,0x81e80000},
+{0xf0,0x61},
+{0x00,0x9de3bf98},
+{0x04,0x3300001d},
+{0x08,0xba5e2058},
+{0x0c,0x82166064},
+{0x10,0xb6102002},
+{0x14,0xf40022fc},
+{0x18,0x9a100018},
+{0x1c,0xf8074001},
+{0x20,0x80a6c01a},
+{0x24,0x1880000f},
+{0x28,0x9e102001},
+{0x2c,0x82166060},
+{0x30,0x82074001},
+{0x34,0x82006008},
+{0x38,0xfa004000},
+{0x3c,0x80a7401c},
+{0x40,0x16800004},
+{0x44,0x82006004},
+{0x48,0xb810001d},
+{0x4c,0x9e10001b},
+{0x50,0xb606e001},
+{0x54,0x80a6c01a},
+{0x58,0x28bffff9},
+{0x5c,0xfa004000},
+{0x60,0x80a72000},
+{0x64,0x16800015},
+{0x68,0xb0102000},
+{0x6c,0x825b6016},
+{0x70,0x3900001d},
+{0x74,0x8200400f},
+{0x78,0x83286002},
+{0x7c,0xba17205c},
+{0xf0,0x62},
+{0x00,0xb6172060},
+{0x04,0xfa00401d},
+{0x08,0xf600401b},
+{0x0c,0xb8172064},
+{0x10,0xc200401c},
+{0x14,0xba07401b},
+{0x18,0xba074001},
+{0x1c,0xc200220c},
+{0x20,0xba20001d},
+{0x24,0xba5f4001},
+{0x28,0x833f601f},
+{0x2c,0x83306018},
+{0x30,0xba074001},
+{0x34,0xb13f6008},
+{0x38,0x81c7e008},
+{0x3c,0x81e80000},
+{0x40,0x9de3bec8},
+{0x44,0xa0102000},
+{0x48,0xc20022f8},
+{0x4c,0x80a40001},
+{0x50,0x1a80000a},
+{0x54,0xa2042001},
+{0x58,0x8207bff8},
+{0x5c,0xa12c2002},
+{0x60,0xa0040001},
+{0x64,0x7fffffc7},
+{0x68,0x90100011},
+{0x6c,0xd0243f80},
+{0x70,0x10bffff6},
+{0x74,0xa0100011},
+{0x78,0xc0202514},
+{0x7c,0xb607bff8},
+{0xf0,0x63},
+{0x00,0x8207bf28},
+{0x04,0xa2102013},
+{0x08,0xc0204000},
+{0x0c,0xa2847fff},
+{0x10,0x1cbffffe},
+{0x14,0x82006004},
+{0x18,0xa2102000},
+{0x1c,0x832c6002},
+{0x20,0xa2046001},
+{0x24,0x80a46009},
+{0x28,0x04bffffd},
+{0x2c,0xc0206768},
+{0x30,0xa0102001},
+{0x34,0xc20022f8},
+{0x38,0x80a40001},
+{0x3c,0x18800086},
+{0x40,0xb810202c},
+{0x44,0xba102016},
+{0x48,0xae102016},
+{0x4c,0xa2102001},
+{0x50,0xc20022fc},
+{0x54,0x80a44001},
+{0x58,0x18800078},
+{0x5c,0x03000044},
+{0x60,0xac040001},
+{0x64,0x9b2f2002},
+{0x68,0x992f6002},
+{0x6c,0x972de002},
+{0x70,0x03000050},
+{0x74,0xaa040001},
+{0x78,0xa8036004},
+{0x7c,0xa6032008},
+{0xf0,0x64},
+{0x00,0xa402e004},
+{0x04,0xc2002308},
+{0x08,0x80a44001},
+{0x0c,0x3880002f},
+{0x10,0xc2002304},
+{0x14,0xc2002300},
+{0x18,0x80a40001},
+{0x1c,0x38800041},
+{0x20,0xc200237c},
+{0x24,0x90100011},
+{0x28,0x92100010},
+{0x2c,0x7ffffec4},
+{0x30,0x94102001},
+{0x34,0x80a22000},
+{0x38,0x02800057},
+{0x3c,0x1b000040},
+{0x40,0x1b00001d},
+{0x44,0x8213605c},
+{0x48,0x96136060},
+{0x4c,0xd8048001},
+{0x50,0xd604800b},
+{0x54,0x9a136064},
+{0x58,0x832c2002},
+{0x5c,0x9803000b},
+{0x60,0xda04800d},
+{0x64,0x8200401b},
+{0x68,0x9803000d},
+{0x6c,0xc2007f7c},
+{0x70,0x80a30001},
+{0x74,0x06800048},
+{0x78,0x1b000040},
+{0x7c,0x80a22000},
+{0xf0,0x65},
+{0x00,0x3680000d},
+{0x04,0xc2002514},
+{0x08,0x90100011},
+{0x0c,0x92100010},
+{0x10,0x7ffffeab},
+{0x14,0x94102002},
+{0x18,0x80a22000},
+{0x1c,0x0280003e},
+{0x20,0x1b000040},
+{0x24,0xc2002514},
+{0x28,0x9b286002},
+{0x2c,0x10800034},
+{0x30,0xea236768},
+{0x34,0x9b2c6010},
+{0x38,0x9a034010},
+{0x3c,0x99286002},
+{0x40,0x1080002f},
+{0x44,0xda232768},
+{0x48,0x80a06000},
+{0x4c,0x02800007},
+{0x50,0x1900001d},
+{0x54,0xc2002300},
+{0x58,0x80a40001},
+{0x5c,0x0880002e},
+{0x60,0x1b000040},
+{0x64,0x1900001d},
+{0x68,0x82132060},
+{0x6c,0xda04c001},
+{0x70,0xc200251c},
+{0x74,0x80a34001},
+{0x78,0x24800027},
+{0x7c,0x1b000040},
+{0xf0,0x66},
+{0x00,0x82132008},
+{0x04,0xc204c001},
+{0x08,0x80a0400d},
+{0x0c,0x36800022},
+{0x10,0x1b000040},
+{0x14,0x821320b8},
+{0x18,0x10800013},
+{0x1c,0xc204c001},
+{0x20,0x80a06000},
+{0x24,0x1280001c},
+{0x28,0x1b000040},
+{0x2c,0x1900001d},
+{0x30,0x82132060},
+{0x34,0xda050001},
+{0x38,0xc200251c},
+{0x3c,0x80a34001},
+{0x40,0x24800015},
+{0x44,0x1b000040},
+{0x48,0x8213205c},
+{0x4c,0xc2050001},
+{0x50,0x80a0400d},
+{0x54,0x36800010},
+{0x58,0x1b000040},
+{0x5c,0x82132064},
+{0x60,0xc2050001},
+{0x64,0x80a34001},
+{0x68,0x0680000b},
+{0x6c,0x1b000040},
+{0x70,0xc2002514},
+{0x74,0x9b286002},
+{0x78,0xec236768},
+{0x7c,0x82006001},
+{0xf0,0x67},
+{0x00,0xc2202514},
+{0x04,0xc2002514},
+{0x08,0x80a06009},
+{0x0c,0x18800012},
+{0x10,0x1b000040},
+{0x14,0xa2046001},
+{0x18,0xc20022fc},
+{0x1c,0xac05800d},
+{0x20,0x80a44001},
+{0x24,0xa404a004},
+{0x28,0xa604e004},
+{0x2c,0xa8052004},
+{0x30,0x08bfff95},
+{0x34,0xaa05400d},
+{0x38,0xa0042001},
+{0x3c,0xc20022f8},
+{0x40,0x80a40001},
+{0x44,0xae05e016},
+{0x48,0xba076016},
+{0x4c,0x08bfff80},
+{0x50,0xb8072016},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x80a22000},
+{0x60,0x2280001d},
+{0x64,0xc2002558},
+{0x68,0xd4002208},
+{0x6c,0x80a2a000},
+{0x70,0x0280002f},
+{0x74,0x01000000},
+{0x78,0xc2002514},
+{0x7c,0x80a06000},
+{0xf0,0x68},
+{0x00,0x12800007},
+{0x04,0xc2002558},
+{0x08,0x80a06000},
+{0x0c,0x02800028},
+{0x10,0x82007fff},
+{0x14,0x10800026},
+{0x18,0xc2202558},
+{0x1c,0x80a06000},
+{0x20,0x32800023},
+{0x24,0xd4202558},
+{0x28,0x17200040},
+{0x2c,0x193fc200},
+{0x30,0x8212e001},
+{0x34,0xc2230000},
+{0x38,0xc200233c},
+{0x3c,0x83306002},
+{0x40,0x9a132070},
+{0x44,0xc2234000},
+{0x48,0xd6230000},
+{0x4c,0x10800018},
+{0x50,0xd4202558},
+{0x54,0x80a06000},
+{0x58,0x32800007},
+{0x5c,0xc2002514},
+{0x60,0xc2002208},
+{0x64,0x80a06000},
+{0x68,0x1280000e},
+{0x6c,0x033fc200},
+{0x70,0xc2002514},
+{0x74,0x80a06001},
+{0x78,0x08800006},
+{0x7c,0xd800233c},
+{0xf0,0x69},
+{0x00,0x82007fff},
+{0x04,0xda002204},
+{0x08,0x8258400d},
+{0x0c,0x98030001},
+{0x10,0x033fc200},
+{0x14,0x82106070},
+{0x18,0x10800005},
+{0x1c,0xd8204000},
+{0x20,0xda002234},
+{0x24,0x82106070},
+{0x28,0xda204000},
+{0x2c,0x81c3e008},
+{0x30,0x01000000},
+{0x34,0x82220009},
+{0x38,0x9a58400a},
+{0x3c,0x833b601f},
+{0x40,0x80a20009},
+{0x44,0x83306019},
+{0x48,0x04800004},
+{0x4c,0x90102000},
+{0x50,0x82034001},
+{0x54,0x91386007},
+{0x58,0x81c3e008},
+{0x5c,0x01000000},
+{0x60,0x9de3bf98},
+{0x64,0xc2002308},
+{0x68,0x82006001},
+{0x6c,0xe60022fc},
+{0x70,0x80a4c001},
+{0x74,0x2a800019},
+{0x78,0xe40022f8},
+{0x7c,0x1500001d},
+{0xf0,0x6a},
+{0x00,0xa4102001},
+{0x04,0xc20022f8},
+{0x08,0x80a48001},
+{0x0c,0x1880000c},
+{0x10,0x832ce002},
+{0x14,0x9a006058},
+{0x18,0x9612a064},
+{0x1c,0x9812a060},
+{0x20,0xc203400c},
+{0x24,0xc223400b},
+{0x28,0xa404a001},
+{0x2c,0xc20022f8},
+{0x30,0x80a48001},
+{0x34,0x08bffffb},
+{0x38,0x9a036058},
+{0x3c,0xc2002308},
+{0x40,0xa604ffff},
+{0x44,0x82006001},
+{0x48,0x80a4c001},
+{0x4c,0x1abfffee},
+{0x50,0xa4102001},
+{0x54,0xe40022f8},
+{0x58,0x80a4a000},
+{0x5c,0x0280002b},
+{0x60,0xa6102001},
+{0x64,0xac5ca016},
+{0x68,0xa85ca058},
+{0x6c,0x2700001d},
+{0x70,0x8214e068},
+{0x74,0xa214e064},
+{0x78,0xd2050001},
+{0x7c,0xd408228c},
+{0xf0,0x6b},
+{0x00,0x7fffffcd},
+{0x04,0xd0050011},
+{0x08,0xaa14e060},
+{0x0c,0xd0250015},
+{0x10,0xe0002308},
+{0x14,0xa0058010},
+{0x18,0xa12c2002},
+{0x1c,0x8214e05c},
+{0x20,0xd2040001},
+{0x24,0xd408228d},
+{0x28,0x7fffffc3},
+{0x2c,0xd0040015},
+{0x30,0xd0240011},
+{0x34,0xc2002300},
+{0x38,0x80a48001},
+{0x3c,0x2880000f},
+{0x40,0xa8053fa8},
+{0x44,0xa214e0b8},
+{0x48,0x98100015},
+{0x4c,0xa6102000},
+{0x50,0x9b2da002},
+{0x54,0xc203400c},
+{0x58,0xc2234011},
+{0x5c,0xc2002308},
+{0x60,0xa604e001},
+{0x64,0x82006001},
+{0x68,0x80a4c001},
+{0x6c,0x08bffffa},
+{0x70,0x9a036004},
+{0x74,0xa8053fa8},
+{0x78,0xa484bfff},
+{0x7c,0x12bfffdc},
+{0xf0,0x6c},
+{0x00,0xac05bfea},
+{0x04,0xa6102001},
+{0x08,0xc2002308},
+{0x0c,0x80a4c001},
+{0x10,0x18800017},
+{0x14,0x2300001d},
+{0x18,0xa12ce002},
+{0x1c,0x82146110},
+{0x20,0xa41460b8},
+{0x24,0xd2040001},
+{0x28,0xd408228e},
+{0x2c,0x7fffffa2},
+{0x30,0xd0040012},
+{0x34,0x82146060},
+{0x38,0xd0240001},
+{0x3c,0xe0002300},
+{0x40,0xa05c2016},
+{0x44,0xa0040013},
+{0x48,0xa12c2002},
+{0x4c,0xa2146008},
+{0x50,0xd0040001},
+{0x54,0xd2040011},
+{0x58,0x7fffff97},
+{0x5c,0xd408228f},
+{0x60,0xd0240012},
+{0x64,0x10bfffe9},
+{0x68,0xa604e001},
+{0x6c,0x1700001d},
+{0x70,0x9012e064},
+{0x74,0x9212e0b8},
+{0x78,0xda024000},
+{0x7c,0xc2020000},
+{0xf0,0x6d},
+{0x00,0x8200400d},
+{0x04,0x9412e060},
+{0x08,0x83386001},
+{0x0c,0xc2228000},
+{0x10,0xd8002308},
+{0x14,0x992b2002},
+{0x18,0x9612e0bc},
+{0x1c,0xda03000b},
+{0x20,0xc203000a},
+{0x24,0x8200400d},
+{0x28,0x83386001},
+{0x2c,0xc2230008},
+{0x30,0xda002300},
+{0x34,0x9a5b6058},
+{0x38,0xd803400a},
+{0x3c,0xc203400b},
+{0x40,0x8200400c},
+{0x44,0x83386001},
+{0x48,0xc2234009},
+{0x4c,0xc2002300},
+{0x50,0xda002308},
+{0x54,0x82586016},
+{0x58,0x8200400d},
+{0x5c,0x83286002},
+{0x60,0xda004009},
+{0x64,0xd8004008},
+{0x68,0x9a03400c},
+{0x6c,0x9b3b6001},
+{0x70,0xda20400b},
+{0x74,0x81c7e008},
+{0x78,0x81e80000},
+{0x7c,0x80a22015},
+{0xf0,0x6e},
+{0x00,0x82402000},
+{0x04,0x80a26020},
+{0x08,0x90402000},
+{0x0c,0x81c3e008},
+{0x10,0x90084008},
+{0x14,0x9de3bf98},
+{0x18,0xa226001b},
+{0x1c,0xae06001b},
+{0x20,0xf427a04c},
+{0x24,0x03000007},
+{0x28,0xba1063fe},
+{0x2c,0x80a44017},
+{0x30,0xb8102000},
+{0x34,0xaa102000},
+{0x38,0xac102000},
+{0x3c,0x1480001d},
+{0x40,0xb4100011},
+{0x44,0xa65c6016},
+{0x48,0xa026401b},
+{0x4c,0xa806401b},
+{0x50,0x80a40014},
+{0x54,0x34800014},
+{0x58,0xa2046001},
+{0x5c,0x82040013},
+{0x60,0xa5286002},
+{0x64,0x90100010},
+{0x68,0x7fffffe5},
+{0x6c,0x92100011},
+{0x70,0x80a22000},
+{0x74,0x02800008},
+{0x78,0xa0042001},
+{0x7c,0x0300001d},
+{0xf0,0x6f},
+{0x00,0x82106060},
+{0x04,0xc2048001},
+{0x08,0x80a0401d},
+{0x0c,0x26800002},
+{0x10,0xba100001},
+{0x14,0x80a40014},
+{0x18,0x04bffff3},
+{0x1c,0xa404a004},
+{0x20,0xa2046001},
+{0x24,0x80a44017},
+{0x28,0x04bfffe8},
+{0x2c,0xa604e016},
+{0x30,0xc2002250},
+{0x34,0x80a74001},
+{0x38,0x26800002},
+{0x3c,0xba100001},
+{0x40,0xb006001b},
+{0x44,0x80a68018},
+{0x48,0x14800027},
+{0x4c,0xa210001a},
+{0x50,0xa65ea016},
+{0x54,0xa026401b},
+{0x58,0xa806401b},
+{0x5c,0x80a40014},
+{0x60,0x1480001a},
+{0x64,0x82040013},
+{0x68,0xa5286002},
+{0x6c,0x90100010},
+{0x70,0x7fffffc3},
+{0x74,0x92100011},
+{0x78,0x80a22000},
+{0x7c,0x22800010},
+{0xf0,0x70},
+{0x00,0xa0042001},
+{0x04,0x0300001d},
+{0x08,0x82106060},
+{0x0c,0xc2048001},
+{0x10,0x8220401d},
+{0x14,0x9a042001},
+{0x18,0x98046001},
+{0x1c,0x9658400d},
+{0x20,0x80a06000},
+{0x24,0x04800005},
+{0x28,0x9a58400c},
+{0x2c,0xaa05400d},
+{0x30,0xac05800b},
+{0x34,0xb8070001},
+{0x38,0xa0042001},
+{0x3c,0x80a40014},
+{0x40,0x04bfffeb},
+{0x44,0xa404a004},
+{0x48,0xa2046001},
+{0x4c,0x80a44018},
+{0x50,0x04bfffe1},
+{0x54,0xa604e016},
+{0x58,0x80a72000},
+{0x5c,0x14800006},
+{0x60,0x9b2d6006},
+{0x64,0xd807a04c},
+{0x68,0x832b2002},
+{0x6c,0x1080001d},
+{0x70,0xc0206768},
+{0x74,0x833b601f},
+{0x78,0x81806000},
+{0x7c,0x01000000},
+{0xf0,0x71},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x9a7b401c},
+{0x0c,0x832da006},
+{0x10,0x9938601f},
+{0x14,0x81832000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x8278401c},
+{0x28,0xaa037fa0},
+{0x2c,0x80a56000},
+{0x30,0x14800003},
+{0x34,0xac007fa0},
+{0x38,0xaa102001},
+{0x3c,0x80a5a000},
+{0x40,0x24800002},
+{0x44,0xac102001},
+{0x48,0x9a0dafff},
+{0x4c,0x832d6010},
+{0x50,0x8210400d},
+{0x54,0xd807a04c},
+{0x58,0x9b2b2002},
+{0x5c,0xc2236768},
+{0x60,0x81c7e008},
+{0x64,0x81e80000},
+{0x68,0x9de3bf98},
+{0x6c,0x0300001d},
+{0x70,0xb61060b4},
+{0x74,0xb81060bc},
+{0x78,0x981060b8},
+{0x7c,0xc2002274},
+{0xf0,0x72},
+{0x00,0x80a06000},
+{0x04,0x825e2016},
+{0x08,0x82004019},
+{0x0c,0xb12e2006},
+{0x10,0xbb2e6006},
+{0x14,0xb5286002},
+{0x18,0xb0063fe0},
+{0x1c,0x9e066001},
+{0x20,0x96066002},
+{0x24,0x9b2e2010},
+{0x28,0x02800020},
+{0x2c,0x82077fe0},
+{0x30,0xfa06801b},
+{0x34,0xf806801c},
+{0x38,0xf406800c},
+{0x3c,0x8207401a},
+{0x40,0xb610001d},
+{0x44,0x80a7401c},
+{0x48,0x04800003},
+{0x4c,0xb000401c},
+{0x50,0xb610001c},
+{0x54,0x8227401b},
+{0x58,0xba26801b},
+{0x5c,0xba5f400f},
+{0x60,0x82584019},
+{0x64,0x8200401d},
+{0x68,0xb827001b},
+{0x6c,0xb85f000b},
+{0x70,0xba06c01b},
+{0x74,0x8200401c},
+{0x78,0xba07401b},
+{0x7c,0xba26001d},
+{0xf0,0x73},
+{0x00,0x83286006},
+{0x04,0x9938601f},
+{0x08,0x81832000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x8278401d},
+{0x1c,0x82807fa0},
+{0x20,0x2c800002},
+{0x24,0x82102000},
+{0x28,0xb0034001},
+{0x2c,0xb0263000},
+{0x30,0x81c7e008},
+{0x34,0x81e80000},
+{0x38,0x9de3bf98},
+{0x3c,0xa2102000},
+{0x40,0xc2002514},
+{0x44,0x80a44001},
+{0x48,0x1a800029},
+{0x4c,0xa12c6002},
+{0x50,0xda042768},
+{0x54,0x93336010},
+{0x58,0x8333600c},
+{0x5c,0x900b6fff},
+{0x60,0x80886001},
+{0x64,0x02800006},
+{0x68,0x920a6fff},
+{0x6c,0x7fffffbf},
+{0x70,0xa2046001},
+{0x74,0x1080001a},
+{0x78,0xd0242768},
+{0x7c,0x80a36000},
+{0xf0,0x74},
+{0x00,0x22800017},
+{0x04,0xa2046001},
+{0x08,0x93336010},
+{0x0c,0xc200246c},
+{0x10,0x98100009},
+{0x14,0x9f33600e},
+{0x18,0x80a06000},
+{0x1c,0x900b6fff},
+{0x20,0x920a6fff},
+{0x24,0x0280000c},
+{0x28,0x94100011},
+{0x2c,0x808be001},
+{0x30,0x12800005},
+{0x34,0x96102002},
+{0x38,0x920b2fff},
+{0x3c,0x94100011},
+{0x40,0x96102001},
+{0x44,0x7fffff34},
+{0x48,0xa2046001},
+{0x4c,0x10800005},
+{0x50,0xc2002514},
+{0x54,0x7ffff9c2},
+{0x58,0xa2046001},
+{0x5c,0xc2002514},
+{0x60,0x80a44001},
+{0x64,0x0abfffdb},
+{0x68,0xa12c6002},
+{0x6c,0x81c7e008},
+{0x70,0x81e80000},
+{0x74,0x9de3bf98},
+{0x78,0x9e102000},
+{0x7c,0x832be002},
+{0xf0,0x75},
+{0x00,0xfa006768},
+{0x04,0x80a76000},
+{0x08,0x2280002e},
+{0x0c,0x9e03e001},
+{0x10,0x83376010},
+{0x14,0xba0f6fff},
+{0x18,0x82086fff},
+{0x1c,0xb403e001},
+{0x20,0x98076020},
+{0x24,0x96006020},
+{0x28,0x80a6a009},
+{0x2c,0x9a007fe0},
+{0x30,0xba077fe0},
+{0x34,0x18800022},
+{0x38,0x832ea002},
+{0x3c,0xf8006768},
+{0x40,0x80a72000},
+{0x44,0x2280001c},
+{0x48,0xb406a001},
+{0x4c,0xb7372010},
+{0x50,0xb60eefff},
+{0x54,0xb20f2fff},
+{0x58,0x80a6c00d},
+{0x5c,0x14800003},
+{0x60,0xb0102001},
+{0x64,0xb0102000},
+{0x68,0x80a6c00b},
+{0x6c,0x06800003},
+{0x70,0xb8102001},
+{0x74,0xb8102000},
+{0x78,0x808e001c},
+{0x7c,0x2280000e},
+{0xf0,0x76},
+{0x00,0xb406a001},
+{0x04,0x80a6401d},
+{0x08,0x14800003},
+{0x0c,0xb6102001},
+{0x10,0xb6102000},
+{0x14,0x80a6400c},
+{0x18,0x06800003},
+{0x1c,0xb8102001},
+{0x20,0xb8102000},
+{0x24,0x808ec01c},
+{0x28,0x32800002},
+{0x2c,0xc0206768},
+{0x30,0xb406a001},
+{0x34,0x10bfffe0},
+{0x38,0x80a6a009},
+{0x3c,0x9e03e001},
+{0x40,0x80a3e009},
+{0x44,0x08bfffcf},
+{0x48,0x832be002},
+{0x4c,0x81c7e008},
+{0x50,0x81e80000},
+{0x54,0xc2002510},
+{0x58,0x82006001},
+{0x5c,0x80a06008},
+{0x60,0x08800003},
+{0x64,0xc2202510},
+{0x68,0xc0202510},
+{0x6c,0xd8002510},
+{0x70,0x96102000},
+{0x74,0x832b2002},
+{0x78,0x8200400c},
+{0x7c,0x83286003},
+{0xf0,0x77},
+{0x00,0x82006600},
+{0x04,0x9b2ae002},
+{0x08,0x80a32000},
+{0x0c,0xc2236790},
+{0x10,0x12800003},
+{0x14,0x98033fff},
+{0x18,0x98102008},
+{0x1c,0x9602e001},
+{0x20,0x80a2e008},
+{0x24,0x04bffff5},
+{0x28,0x832b2002},
+{0x2c,0x0303ffc7},
+{0x30,0x921063ff},
+{0x34,0x98102000},
+{0x38,0x96102000},
+{0x3c,0x9b2ae002},
+{0x40,0xc2036768},
+{0x44,0x82084009},
+{0x48,0x9602e001},
+{0x4c,0x952b2002},
+{0x50,0x80a06000},
+{0x54,0x02800004},
+{0x58,0xc2236768},
+{0x5c,0x98032001},
+{0x60,0xc222a768},
+{0x64,0x80a2e009},
+{0x68,0x24bffff6},
+{0x6c,0x9b2ae002},
+{0x70,0x9610000c},
+{0x74,0x80a32009},
+{0x78,0x14800007},
+{0x7c,0xd8202514},
+{0xf0,0x78},
+{0x00,0x832ae002},
+{0x04,0x9602e001},
+{0x08,0x80a2e009},
+{0x0c,0x04bffffd},
+{0x10,0xc0206768},
+{0x14,0x81c3e008},
+{0x18,0x01000000},
+{0x1c,0x9de3bf98},
+{0x20,0xc20022f4},
+{0x24,0x80a06000},
+{0x28,0x02800049},
+{0x2c,0xb0102000},
+{0x30,0xc2002514},
+{0x34,0x80a60001},
+{0x38,0x1a800045},
+{0x3c,0x033c003f},
+{0x40,0x9e1063ff},
+{0x44,0xb52e2002},
+{0x48,0xfa06a768},
+{0x4c,0x8337600c},
+{0x50,0x80886001},
+{0x54,0x3280003a},
+{0x58,0xb0062001},
+{0x5c,0xb9376010},
+{0x60,0xb80f2fff},
+{0x64,0x80a7201f},
+{0x68,0x2880001a},
+{0x6c,0xfa06a768},
+{0x70,0xc2002300},
+{0x74,0x83286006},
+{0x78,0x82007fe0},
+{0x7c,0x80a70001},
+{0xf0,0x79},
+{0x00,0x38800014},
+{0x04,0xfa06a768},
+{0x08,0x808f2020},
+{0x0c,0x02800008},
+{0x10,0xb60f3fe0},
+{0x14,0x8238001c},
+{0x18,0x8208601f},
+{0x1c,0xc20862d4},
+{0x20,0x8226c001},
+{0x24,0x10800005},
+{0x28,0x8200601f},
+{0x2c,0x820f201f},
+{0x30,0xc20862d4},
+{0x34,0x8206c001},
+{0x38,0x82086fff},
+{0x3c,0x83286010},
+{0x40,0xba0f400f},
+{0x44,0xba174001},
+{0x48,0xfa26a768},
+{0x4c,0xfa06a768},
+{0x50,0xb80f6fff},
+{0x54,0x80a7201f},
+{0x58,0x28800019},
+{0x5c,0xb0062001},
+{0x60,0xc2002308},
+{0x64,0x83286006},
+{0x68,0x82007fe0},
+{0x6c,0x80a70001},
+{0x70,0x38800013},
+{0x74,0xb0062001},
+{0x78,0x808f6020},
+{0x7c,0xb60f6fe0},
+{0xf0,0x7a},
+{0x00,0x02800008},
+{0x04,0xb20f7000},
+{0x08,0x8238001c},
+{0x0c,0x8208601f},
+{0x10,0xc2086254},
+{0x14,0x8226c001},
+{0x18,0x10800005},
+{0x1c,0x8200601f},
+{0x20,0x820f601f},
+{0x24,0xc2086254},
+{0x28,0x8206c001},
+{0x2c,0x82086fff},
+{0x30,0x82164001},
+{0x34,0xc226a768},
+{0x38,0xb0062001},
+{0x3c,0xc2002514},
+{0x40,0x80a60001},
+{0x44,0x0abfffc1},
+{0x48,0xb52e2002},
+{0x4c,0x81c7e008},
+{0x50,0x81e80000},
+{0x54,0x912a2002},
+{0x58,0xc2002794},
+{0x5c,0xda004008},
+{0x60,0x033c003c},
+{0x64,0x822b4001},
+{0x68,0x98102790},
+{0x6c,0xda030000},
+{0x70,0xc2234008},
+{0x74,0xd8030000},
+{0x78,0xda030008},
+{0x7c,0x03000020},
+{0xf0,0x7b},
+{0x00,0x822b4001},
+{0x04,0x81c3e008},
+{0x08,0xc2230008},
+{0x0c,0x912a2002},
+{0x10,0xc2002790},
+{0x14,0xc0204008},
+{0x18,0xc2002794},
+{0x1c,0xc2104008},
+{0x20,0xda002798},
+{0x24,0xda134008},
+{0x28,0x82086fff},
+{0x2c,0x94004001},
+{0x30,0x9a0b6fff},
+{0x34,0x80a2800d},
+{0x38,0x18800003},
+{0x3c,0x9422800d},
+{0x40,0x94102000},
+{0x44,0xd6002790},
+{0x48,0x9a0aafff},
+{0x4c,0xd802c008},
+{0x50,0x0303ffc0},
+{0x54,0x9b2b6010},
+{0x58,0x822b0001},
+{0x5c,0x8210400d},
+{0x60,0xc222c008},
+{0x64,0xc2002794},
+{0x68,0xc2004008},
+{0x6c,0xda002798},
+{0x70,0xda034008},
+{0x74,0x82086fff},
+{0x78,0x94004001},
+{0x7c,0x9a0b6fff},
+{0xf0,0x7c},
+{0x00,0x80a2800d},
+{0x04,0x18800003},
+{0x08,0x9422800d},
+{0x0c,0x94102000},
+{0x10,0xd8002790},
+{0x14,0xc2030008},
+{0x18,0x9a0aafff},
+{0x1c,0x82087000},
+{0x20,0x8210400d},
+{0x24,0xc2230008},
+{0x28,0xd8002790},
+{0x2c,0xc2030008},
+{0x30,0x1b000020},
+{0x34,0x8210400d},
+{0x38,0x81c3e008},
+{0x3c,0xc2230008},
+{0x40,0x912a2002},
+{0x44,0xc2002790},
+{0x48,0xc0204008},
+{0x4c,0xc2002794},
+{0x50,0xda104008},
+{0x54,0xc200279c},
+{0x58,0xd6104008},
+{0x5c,0xc2002798},
+{0x60,0x9a0b6fff},
+{0x64,0xd8104008},
+{0x68,0x832b6002},
+{0x6c,0x8200400d},
+{0x70,0x960aefff},
+{0x74,0x980b2fff},
+{0x78,0x8200400b},
+{0x7c,0x992b2002},
+{0xf0,0x7d},
+{0x00,0x80a0400c},
+{0x04,0x18800003},
+{0x08,0x8220400c},
+{0x0c,0x82102000},
+{0x10,0xd6002790},
+{0x14,0x9b306001},
+{0x18,0xd802c008},
+{0x1c,0x9a0b6fff},
+{0x20,0x0303ffc0},
+{0x24,0x822b0001},
+{0x28,0x9b2b6010},
+{0x2c,0x8210400d},
+{0x30,0xc222c008},
+{0x34,0xc2002794},
+{0x38,0xda004008},
+{0x3c,0xc200279c},
+{0x40,0xd6004008},
+{0x44,0xc2002798},
+{0x48,0x9a0b6fff},
+{0x4c,0xd8004008},
+{0x50,0x832b6002},
+{0x54,0x8200400d},
+{0x58,0x960aefff},
+{0x5c,0x980b2fff},
+{0x60,0x8200400b},
+{0x64,0x992b2002},
+{0x68,0x80a0400c},
+{0x6c,0x18800003},
+{0x70,0x8220400c},
+{0x74,0x82102000},
+{0x78,0xd8002790},
+{0x7c,0x9b306001},
+{0xf0,0x7e},
+{0x00,0xc2030008},
+{0x04,0x9a0b6fff},
+{0x08,0x82087000},
+{0x0c,0x8210400d},
+{0x10,0xc2230008},
+{0x14,0xd8002790},
+{0x18,0xc2030008},
+{0x1c,0x1b000020},
+{0x20,0x8210400d},
+{0x24,0x81c3e008},
+{0x28,0xc2230008},
+{0x2c,0x9de3bf98},
+{0x30,0xa2102000},
+{0x34,0xa12c6002},
+{0x38,0xc2002794},
+{0x3c,0xc2004010},
+{0x40,0x80a06000},
+{0x44,0x0280001f},
+{0x48,0x0303ffc3},
+{0x4c,0xc2002798},
+{0x50,0xc2004010},
+{0x54,0x80a06000},
+{0x58,0x0280000c},
+{0x5c,0x01000000},
+{0x60,0x8330600d},
+{0x64,0x80886001},
+{0x68,0x12800008},
+{0x6c,0x01000000},
+{0x70,0xc200279c},
+{0x74,0xda004010},
+{0x78,0x8333600d},
+{0x7c,0x80886001},
+{0xf0,0x7f},
+{0x00,0x02800006},
+{0x04,0x80a36000},
+{0x08,0x7fffff73},
+{0x0c,0x90100011},
+{0x10,0x10800010},
+{0x14,0xc2002794},
+{0x18,0x02800006},
+{0x1c,0x01000000},
+{0x20,0x7fffffa8},
+{0x24,0x90100011},
+{0x28,0x1080000a},
+{0x2c,0xc2002794},
+{0x30,0x7fffff77},
+{0x34,0x90100011},
+{0x38,0x10800006},
+{0x3c,0xc2002794},
+{0x40,0x821063ff},
+{0x44,0xda002790},
+{0x48,0xc2234010},
+{0x4c,0xc2002794},
+{0x50,0xc2004010},
+{0x54,0x8330600c},
+{0x58,0x80886001},
+{0x5c,0x02800007},
+{0x60,0xa2046001},
+{0x64,0xc2002790},
+{0x68,0xda004010},
+{0x6c,0x19000004},
+{0x70,0x9a13400c},
+{0x74,0xda204010},
+{0x78,0x80a46009},
+{0x7c,0x04bfffcf},
+{0xf0,0x80},
+{0x00,0xa12c6002},
+{0x04,0x81c7e008},
+{0x08,0x81e80000},
+{0x0c,0xd6020000},
+{0x10,0xd8024000},
+{0x14,0x9132e010},
+{0x18,0x95332010},
+{0x1c,0x900a2fff},
+{0x20,0x940aafff},
+{0x24,0x03000007},
+{0x28,0x9a22000a},
+{0x2c,0x821063ff},
+{0x30,0x940b0001},
+{0x34,0x900ac001},
+{0x38,0x9022000a},
+{0x3c,0x9a5b400d},
+{0x40,0x905a0008},
+{0x44,0x81c3e008},
+{0x48,0x90034008},
+{0x4c,0x031fffff},
+{0x50,0x9002200c},
+{0x54,0x821063ff},
+{0x58,0x9a102063},
+{0x5c,0xc2220000},
+{0x60,0x9a837fff},
+{0x64,0x1cbffffe},
+{0x68,0x90022004},
+{0x6c,0x81c3e008},
+{0x70,0x01000000},
+{0x74,0x031fffff},
+{0x78,0x821063ff},
+{0x7c,0xc2222008},
+{0xf0,0x81},
+{0x00,0x92102000},
+{0x04,0x96100008},
+{0x08,0x94102000},
+{0x0c,0x9a02e00c},
+{0x10,0xd8034000},
+{0x14,0xc2022008},
+{0x18,0x80a30001},
+{0x1c,0x16800005},
+{0x20,0x9a036004},
+{0x24,0xd8222008},
+{0x28,0xd4220000},
+{0x2c,0xd2222004},
+{0x30,0x9402a001},
+{0x34,0x80a2a009},
+{0x38,0x24bffff7},
+{0x3c,0xd8034000},
+{0x40,0x92026001},
+{0x44,0x80a26009},
+{0x48,0x04bffff0},
+{0x4c,0x9602e028},
+{0x50,0xda022008},
+{0x54,0x03200000},
+{0x58,0x8238400d},
+{0x5c,0x80a00001},
+{0x60,0x81c3e008},
+{0x64,0x90402000},
+{0x68,0xc2022004},
+{0x6c,0x9b286002},
+{0x70,0x9a034001},
+{0x74,0x031fffff},
+{0x78,0x9b2b6003},
+{0x7c,0x9a034008},
+{0xf0,0x82},
+{0x00,0x981063ff},
+{0x04,0x9a03600c},
+{0x08,0x82102009},
+{0x0c,0xd8234000},
+{0x10,0x82807fff},
+{0x14,0x1cbffffe},
+{0x18,0x9a036004},
+{0x1c,0xc2020000},
+{0x20,0x83286002},
+{0x24,0x82004008},
+{0x28,0x8200600c},
+{0x2c,0x9a102009},
+{0x30,0xd8204000},
+{0x34,0x9a837fff},
+{0x38,0x1cbffffe},
+{0x3c,0x82006028},
+{0x40,0x81c3e008},
+{0x44,0x01000000},
+{0x48,0x98100008},
+{0x4c,0x90102008},
+{0x50,0x9a102100},
+{0x54,0x832b4008},
+{0x58,0x80a30001},
+{0x5c,0x14800006},
+{0x60,0x01000000},
+{0x64,0x90023fff},
+{0x68,0x80a22000},
+{0x6c,0x14bffffb},
+{0x70,0x832b4008},
+{0x74,0x81c3e008},
+{0x78,0x01000000},
+{0x7c,0x9de3bdd0},
+{0xf0,0x83},
+{0x00,0xae07be58},
+{0x04,0x7fffffb2},
+{0x08,0x90100017},
+{0x0c,0xa6102000},
+{0x10,0xa12ce002},
+{0x14,0xd2002790},
+{0x18,0xc2024010},
+{0x1c,0x8330600f},
+{0x20,0x80886001},
+{0x24,0x2280000f},
+{0x28,0xd000245c},
+{0x2c,0xc2002794},
+{0x30,0x90004010},
+{0x34,0xc2004010},
+{0x38,0x8330600d},
+{0x3c,0x80886001},
+{0x40,0x02800004},
+{0x44,0x92024010},
+{0x48,0x10800006},
+{0x4c,0xd000245c},
+{0x50,0x7fffff8f},
+{0x54,0x01000000},
+{0x58,0x7fffffdc},
+{0x5c,0x01000000},
+{0x60,0xc2002358},
+{0x64,0x9807bff8},
+{0x68,0x825a0001},
+{0x6c,0x9a04000c},
+{0x70,0xa604e001},
+{0x74,0x80a4e009},
+{0x78,0x04bfffe6},
+{0x7c,0xc2237e38},
+{0xf0,0x84},
+{0x00,0xac10000c},
+{0x04,0xa6102000},
+{0x08,0xa8102000},
+{0x0c,0xea002790},
+{0x10,0x0303ffc3},
+{0x14,0xda054014},
+{0x18,0x821063ff},
+{0x1c,0x80a34001},
+{0x20,0x22800014},
+{0x24,0xa604e001},
+{0x28,0xa2102000},
+{0x2c,0xc2002514},
+{0x30,0x80a44001},
+{0x34,0x3a80000f},
+{0x38,0xa604e001},
+{0x3c,0xa005be6c},
+{0x40,0xa4102768},
+{0x44,0x90100012},
+{0x48,0x7fffff71},
+{0x4c,0x92054014},
+{0x50,0xd0240000},
+{0x54,0xa2046001},
+{0x58,0xc2002514},
+{0x5c,0x80a44001},
+{0x60,0xa404a004},
+{0x64,0x0abffff8},
+{0x68,0xa0042028},
+{0x6c,0xa604e001},
+{0x70,0xa8052004},
+{0x74,0x80a4e009},
+{0x78,0x04bfffe5},
+{0x7c,0xac05a004},
+{0xf0,0x85},
+{0x00,0xa2102000},
+{0x04,0xc2002514},
+{0x08,0x80a44001},
+{0x0c,0x1a80002d},
+{0x10,0x01000000},
+{0x14,0x7fffff78},
+{0x18,0x90100017},
+{0x1c,0x80a22000},
+{0x20,0xa0046001},
+{0x24,0x02800027},
+{0x28,0x90100017},
+{0x2c,0xd807be58},
+{0x30,0x832b2002},
+{0x34,0x8200401e},
+{0x38,0xc2007e30},
+{0x3c,0xda002230},
+{0x40,0x9a034001},
+{0x44,0xc2002548},
+{0x48,0x9a5b4001},
+{0x4c,0xc2002334},
+{0x50,0x82006001},
+{0x54,0x81800000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x9a734001},
+{0x68,0xc207be60},
+{0x6c,0x80a0400d},
+{0x70,0x98032001},
+{0x74,0xc207be5c},
+{0x78,0x992b201c},
+{0x7c,0x0a800007},
+{0xf0,0x86},
+{0x00,0x95286002},
+{0x04,0xc202a768},
+{0x08,0x1b3c0000},
+{0x0c,0x8210400d},
+{0x10,0x10800008},
+{0x14,0xc222a768},
+{0x18,0xda02a768},
+{0x1c,0x033c0000},
+{0x20,0x822b4001},
+{0x24,0x8210400c},
+{0x28,0x7fffff70},
+{0x2c,0xc222a768},
+{0x30,0xc2002514},
+{0x34,0x80a40001},
+{0x38,0x0abfffd7},
+{0x3c,0xa2100010},
+{0x40,0x81c7e008},
+{0x44,0x81e80000},
+{0x48,0x92102000},
+{0x4c,0xc2002514},
+{0x50,0x80a24001},
+{0x54,0x1a800037},
+{0x58,0x0303ffff},
+{0x5c,0x901063ff},
+{0x60,0x952a6002},
+{0x64,0xc202a768},
+{0x68,0x8330601c},
+{0x6c,0x80a00001},
+{0x70,0x9a603fff},
+{0x74,0x8218600f},
+{0x78,0x80a00001},
+{0x7c,0x82603fff},
+{0xf0,0x87},
+{0x00,0x80934001},
+{0x04,0x22800027},
+{0x08,0x92026001},
+{0x0c,0x9a102001},
+{0x10,0x96102000},
+{0x14,0x992ae002},
+{0x18,0xc2032768},
+{0x1c,0x8330601c},
+{0x20,0x80a0400d},
+{0x24,0x02800013},
+{0x28,0x80a2e00a},
+{0x2c,0xc2002794},
+{0x30,0xc200400c},
+{0x34,0x8330601c},
+{0x38,0x80a0400d},
+{0x3c,0x0280000d},
+{0x40,0x80a2e00a},
+{0x44,0xc2002798},
+{0x48,0xc200400c},
+{0x4c,0x8330601c},
+{0x50,0x80a0400d},
+{0x54,0x02800007},
+{0x58,0x80a2e00a},
+{0x5c,0x9602e001},
+{0x60,0x80a2e009},
+{0x64,0x08bfffed},
+{0x68,0x992ae002},
+{0x6c,0x80a2e00a},
+{0x70,0x22800007},
+{0x74,0xc202a768},
+{0x78,0x9a036001},
+{0x7c,0x80a3600a},
+{0xf0,0x88},
+{0x00,0x08bfffe5},
+{0x04,0x96102000},
+{0x08,0xc202a768},
+{0x0c,0x9b2b601c},
+{0x10,0x82084008},
+{0x14,0x8210400d},
+{0x18,0xc222a768},
+{0x1c,0x92026001},
+{0x20,0xc2002514},
+{0x24,0x80a24001},
+{0x28,0x0abfffcf},
+{0x2c,0x952a6002},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0x98102000},
+{0x3c,0x9b2b2002},
+{0x40,0x98032001},
+{0x44,0xc2002790},
+{0x48,0x80a32009},
+{0x4c,0x08bffffc},
+{0x50,0xc020400d},
+{0x54,0x98102000},
+{0x58,0xc2002514},
+{0x5c,0x80a30001},
+{0x60,0x1a800012},
+{0x64,0x033fffc7},
+{0x68,0x941063ff},
+{0x6c,0x832b2002},
+{0x70,0xda006768},
+{0x74,0x8333601c},
+{0x78,0x82007fff},
+{0x7c,0x98032001},
+{0xf0,0x89},
+{0x00,0x80a06009},
+{0x04,0x97286002},
+{0x08,0x18800004},
+{0x0c,0x9a0b400a},
+{0x10,0xc2002790},
+{0x14,0xda20400b},
+{0x18,0xc2002514},
+{0x1c,0x80a30001},
+{0x20,0x0abffff4},
+{0x24,0x832b2002},
+{0x28,0x81c3e008},
+{0x2c,0x01000000},
+{0x30,0x9de3bf98},
+{0x34,0x92102000},
+{0x38,0x94026001},
+{0x3c,0x80a2a009},
+{0x40,0x18800068},
+{0x44,0x9610000a},
+{0x48,0x033c003f},
+{0x4c,0x901063ff},
+{0x50,0xf6002790},
+{0x54,0xb32ae002},
+{0x58,0xfa06c019},
+{0x5c,0x80a76000},
+{0x60,0x2280005c},
+{0x64,0x9602e001},
+{0x68,0xb52a6002},
+{0x6c,0xc206c01a},
+{0x70,0x80a06000},
+{0x74,0x22800057},
+{0x78,0x9602e001},
+{0x7c,0xda002794},
+{0xf0,0x8a},
+{0x00,0xf0034019},
+{0x04,0x80a62000},
+{0x08,0x22800052},
+{0x0c,0x9602e001},
+{0x10,0xf803401a},
+{0x14,0x80a72000},
+{0x18,0x2280004e},
+{0x1c,0x9602e001},
+{0x20,0x83306010},
+{0x24,0xbb376010},
+{0x28,0x98086fff},
+{0x2c,0x9e0f6fff},
+{0x30,0x80a3000f},
+{0x34,0x16800009},
+{0x38,0xbb372010},
+{0x3c,0x83362010},
+{0x40,0xba0f6fff},
+{0x44,0x82086fff},
+{0x48,0x80a74001},
+{0x4c,0x3480000d},
+{0x50,0xc206c01a},
+{0x54,0x80a3000f},
+{0x58,0x2480003e},
+{0x5c,0x9602e001},
+{0x60,0xbb372010},
+{0x64,0x83362010},
+{0x68,0xba0f6fff},
+{0x6c,0x82086fff},
+{0x70,0x80a74001},
+{0x74,0x36800037},
+{0x78,0x9602e001},
+{0x7c,0xc206c01a},
+{0xf0,0x8b},
+{0x00,0xfa06c019},
+{0x04,0xb0086fff},
+{0x08,0xb80f6fff},
+{0x0c,0x80a6001c},
+{0x10,0x1680000a},
+{0x14,0x01000000},
+{0x18,0xfa034019},
+{0x1c,0xc203401a},
+{0x20,0x82086fff},
+{0x24,0xba0f6fff},
+{0x28,0x80a0401d},
+{0x2c,0x3480000e},
+{0x30,0xfa16c01a},
+{0x34,0x80a6001c},
+{0x38,0x24800026},
+{0x3c,0x9602e001},
+{0x40,0xc2002794},
+{0x44,0xfa004019},
+{0x48,0xc200401a},
+{0x4c,0x82086fff},
+{0x50,0xba0f6fff},
+{0x54,0x80a0401d},
+{0x58,0x3680001e},
+{0x5c,0x9602e001},
+{0x60,0xfa16c01a},
+{0x64,0xf806c019},
+{0x68,0xba0f6fff},
+{0x6c,0xbb2f6010},
+{0x70,0x820f0008},
+{0x74,0x8210401d},
+{0x78,0xc226c019},
+{0x7c,0xf6002790},
+{0xf0,0x8c},
+{0x00,0xc206c01a},
+{0x04,0x3b03ffc0},
+{0x08,0xb80f001d},
+{0x0c,0x82084008},
+{0x10,0x8210401c},
+{0x14,0xc226c01a},
+{0x18,0xf8002790},
+{0x1c,0xf6070019},
+{0x20,0xfa07001a},
+{0x24,0xba0f6fff},
+{0x28,0x820ef000},
+{0x2c,0x8210401d},
+{0x30,0xc2270019},
+{0x34,0xfa002790},
+{0x38,0xc207401a},
+{0x3c,0x82087000},
+{0x40,0xb60eefff},
+{0x44,0x8210401b},
+{0x48,0xc227401a},
+{0x4c,0x9602e001},
+{0x50,0x80a2e009},
+{0x54,0x28bfffa0},
+{0x58,0xf6002790},
+{0x5c,0x80a2a009},
+{0x60,0x08bfff96},
+{0x64,0x9210000a},
+{0x68,0x81c7e008},
+{0x6c,0x81e80000},
+{0x70,0x9de3bf98},
+{0x74,0xa6102000},
+{0x78,0xda002244},
+{0x7c,0x80a36000},
+{0xf0,0x8d},
+{0x00,0x02800033},
+{0x04,0xa12ce002},
+{0x08,0xe4002790},
+{0x0c,0xc2048010},
+{0x10,0x80a06000},
+{0x14,0x22800004},
+{0x18,0xc204282c},
+{0x1c,0x1080002c},
+{0x20,0xc024282c},
+{0x24,0x80a06000},
+{0x28,0x2280000b},
+{0x2c,0xc2002518},
+{0x30,0xc2002794},
+{0x34,0xc2004010},
+{0x38,0x1b000008},
+{0x3c,0x8210400d},
+{0x40,0xc2248010},
+{0x44,0xc204282c},
+{0x48,0x82007fff},
+{0x4c,0x10800020},
+{0x50,0xc224282c},
+{0x54,0x80a0400d},
+{0x58,0x2a80001e},
+{0x5c,0xa604e001},
+{0x60,0xe2002794},
+{0x64,0xc2044010},
+{0x68,0x80a06000},
+{0x6c,0x22800019},
+{0x70,0xa604e001},
+{0x74,0x8330600d},
+{0x78,0x80886001},
+{0x7c,0x32800015},
+{0xf0,0x8e},
+{0x00,0xa604e001},
+{0x04,0xd2002798},
+{0x08,0xc2024010},
+{0x0c,0x80a06000},
+{0x10,0x22800010},
+{0x14,0xa604e001},
+{0x18,0x92024010},
+{0x1c,0x7ffffe3c},
+{0x20,0x90044010},
+{0x24,0xc200224c},
+{0x28,0x80a20001},
+{0x2c,0x38800009},
+{0x30,0xa604e001},
+{0x34,0xc2002248},
+{0x38,0xc224282c},
+{0x3c,0xc2044010},
+{0x40,0x1b000008},
+{0x44,0x8210400d},
+{0x48,0xc2248010},
+{0x4c,0xa604e001},
+{0x50,0x80a4e009},
+{0x54,0x24bfffca},
+{0x58,0xda002244},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0x9de3bf98},
+{0x68,0xc2002514},
+{0x6c,0x80a06000},
+{0x70,0x22800006},
+{0x74,0xc2002200},
+{0x78,0xc2002314},
+{0x7c,0x82200001},
+{0xf0,0x8f},
+{0x00,0x10800062},
+{0x04,0xc2202538},
+{0x08,0x80a06000},
+{0x0c,0x1280005f},
+{0x10,0x01000000},
+{0x14,0xfa002314},
+{0x18,0x80a76000},
+{0x1c,0x0280005b},
+{0x20,0x01000000},
+{0x24,0xc2002538},
+{0x28,0x82006001},
+{0x2c,0x80a0401d},
+{0x30,0x06800056},
+{0x34,0xc2202538},
+{0x38,0x9e102001},
+{0x3c,0xc20022fc},
+{0x40,0x80a3c001},
+{0x44,0x18800051},
+{0x48,0xc0202538},
+{0x4c,0x9a102001},
+{0x50,0xc20022f8},
+{0x54,0x80a34001},
+{0x58,0x18800047},
+{0x5c,0xf20be37f},
+{0x60,0x0300001b},
+{0x64,0x94106388},
+{0x68,0x1300001a},
+{0x6c,0x0300003f},
+{0x70,0x961063ff},
+{0x74,0x901262b0},
+{0x78,0x98102001},
+{0x7c,0xf8002548},
+{0xf0,0x90},
+{0x00,0x80a72008},
+{0x04,0xf400234c},
+{0x08,0x08800005},
+{0x0c,0x82064019},
+{0x10,0xc210400a},
+{0x14,0x10800003},
+{0x18,0xb6004001},
+{0x1c,0xf610400a},
+{0x20,0xb0064019},
+{0x24,0x81800000},
+{0x28,0x01000000},
+{0x2c,0x01000000},
+{0x30,0x01000000},
+{0x34,0xba76c01c},
+{0x38,0xc2160008},
+{0x3c,0xb6a74001},
+{0x40,0x22800027},
+{0x44,0xc200247c},
+{0x48,0x80a6e000},
+{0x4c,0x04800007},
+{0x50,0x832b001a},
+{0x54,0x80a6c001},
+{0x58,0x3480000c},
+{0x5c,0xb73ec01a},
+{0x60,0x1080000a},
+{0x64,0xb6102001},
+{0x68,0x36800009},
+{0x6c,0xb41262b0},
+{0x70,0x832b001a},
+{0x74,0x82200001},
+{0x78,0x80a6c001},
+{0x7c,0x36800003},
+{0xf0,0x91},
+{0x00,0xb6103fff},
+{0x04,0xb73ec01a},
+{0x08,0xb41262b0},
+{0x0c,0xc216001a},
+{0x10,0xb606c001},
+{0x14,0x808e6001},
+{0x18,0x0280000a},
+{0x1c,0x83366001},
+{0x20,0xb9286002},
+{0x24,0xc207001a},
+{0x28,0x3b3fffc0},
+{0x2c,0x8208401d},
+{0x30,0xba0ec00b},
+{0x34,0x8200401d},
+{0x38,0x10800008},
+{0x3c,0xc227001a},
+{0x40,0x83286002},
+{0x44,0xfa00401a},
+{0x48,0xb92ee010},
+{0x4c,0xba0f400b},
+{0x50,0xb807001d},
+{0x54,0xf820401a},
+{0x58,0xc200247c},
+{0x5c,0xb2064001},
+{0x60,0x9a036001},
+{0x64,0xc20022f8},
+{0x68,0x80a34001},
+{0x6c,0x28bfffc5},
+{0x70,0xf8002548},
+{0x74,0x9e03e001},
+{0x78,0xc20022fc},
+{0x7c,0x80a3c001},
+{0xf0,0x92},
+{0x00,0x08bfffb4},
+{0x04,0x9a102001},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0xc0202514},
+{0x14,0x9a102000},
+{0x18,0x832b6002},
+{0x1c,0xc2020001},
+{0x20,0x80a06000},
+{0x24,0x02800005},
+{0x28,0x9a036001},
+{0x2c,0xc2002514},
+{0x30,0x82006001},
+{0x34,0xc2202514},
+{0x38,0x80a36009},
+{0x3c,0x04bffff8},
+{0x40,0x832b6002},
+{0x44,0x81c3e008},
+{0x48,0x01000000},
+{0x4c,0x9de3bf98},
+{0x50,0xa8102000},
+{0x54,0xa0102000},
+{0x58,0xc200235c},
+{0x5c,0x80a06000},
+{0x60,0x32800004},
+{0x64,0xc0242768},
+{0x68,0x1080005d},
+{0x6c,0xc2002790},
+{0x70,0xc2002790},
+{0x74,0xc2004010},
+{0x78,0x80a06000},
+{0x7c,0x02800019},
+{0xf0,0x93},
+{0x00,0xda042854},
+{0x04,0x03300000},
+{0x08,0x808b4001},
+{0x0c,0x32800010},
+{0x10,0xc2002790},
+{0x14,0xda002514},
+{0x18,0x80a36000},
+{0x1c,0x22800053},
+{0x20,0xa8052001},
+{0x24,0x8203400d},
+{0x28,0x8200400d},
+{0x2c,0x82007ffd},
+{0x30,0xda00235c},
+{0x34,0x9b334001},
+{0x38,0x9a0b6007},
+{0x3c,0x03200000},
+{0x40,0x9a134001},
+{0x44,0xda242854},
+{0x48,0xc2002790},
+{0x4c,0xc2004010},
+{0x50,0x80a06000},
+{0x54,0x32800007},
+{0x58,0xc2042854},
+{0x5c,0xda042854},
+{0x60,0x03200000},
+{0x64,0x822b4001},
+{0x68,0xc2242854},
+{0x6c,0xc2042854},
+{0x70,0x1b300000},
+{0x74,0x9a08400d},
+{0x78,0x19200000},
+{0x7c,0x80a3400c},
+{0xf0,0x94},
+{0x00,0x12800019},
+{0x04,0xa40860ff},
+{0x08,0x98102000},
+{0x0c,0x832b2002},
+{0x10,0xc2006790},
+{0x14,0xc2004010},
+{0x18,0x80a06000},
+{0x1c,0x0280000b},
+{0x20,0x9b30600d},
+{0x24,0x808b6001},
+{0x28,0x12800009},
+{0x2c,0x80a30012},
+{0x30,0x98032001},
+{0x34,0x80a30012},
+{0x38,0x24bffff6},
+{0x3c,0x832b2002},
+{0x40,0x10800006},
+{0x44,0xc2042854},
+{0x48,0x80a30012},
+{0x4c,0x24800027},
+{0x50,0xa8052001},
+{0x54,0xc2042854},
+{0x58,0x1b100000},
+{0x5c,0x8210400d},
+{0x60,0xc2242854},
+{0x64,0xa32ca002},
+{0x68,0xd0046790},
+{0x6c,0xc2020010},
+{0x70,0x80a06000},
+{0x74,0x12800006},
+{0x78,0x03100000},
+{0x7c,0xda042854},
+{0xf0,0x95},
+{0x00,0x822b4001},
+{0x04,0x10800018},
+{0x08,0xc2242854},
+{0x0c,0xe6042854},
+{0x10,0x8334e01e},
+{0x14,0x80886001},
+{0x18,0x22800014},
+{0x1c,0xa8052001},
+{0x20,0x80a4a000},
+{0x24,0x2280000e},
+{0x28,0xc2046790},
+{0x2c,0xd204678c},
+{0x30,0x90020010},
+{0x34,0x7ffffd56},
+{0x38,0x92024010},
+{0x3c,0x80a22008},
+{0x40,0x34800007},
+{0x44,0xc2046790},
+{0x48,0x820cfff0},
+{0x4c,0x9a04bfff},
+{0x50,0x8210400d},
+{0x54,0xc2242854},
+{0x58,0xc2046790},
+{0x5c,0xc2004010},
+{0x60,0xc2242768},
+{0x64,0xa8052001},
+{0x68,0x80a52009},
+{0x6c,0x04bfff9b},
+{0x70,0xa0042004},
+{0x74,0x81c7e008},
+{0x78,0x81e80000},
+{0x7c,0x8332a01f},
+{0xf0,0x96},
+{0x00,0x8200400a},
+{0x04,0x83386001},
+{0x08,0x80a24001},
+{0x0c,0x26800015},
+{0x10,0x90102000},
+{0x14,0x9a024001},
+{0x18,0x80a36008},
+{0x1c,0x24800004},
+{0x20,0x92224001},
+{0x24,0x1080000f},
+{0x28,0x90102000},
+{0x2c,0x80a2400d},
+{0x30,0x1480000b},
+{0x34,0x912a2002},
+{0x38,0x832a6002},
+{0x3c,0xc2006790},
+{0x40,0xc2004008},
+{0x44,0x80a06000},
+{0x48,0x02bffff7},
+{0x4c,0x92026001},
+{0x50,0x80a2400d},
+{0x54,0x04bffffa},
+{0x58,0x832a6002},
+{0x5c,0x90102001},
+{0x60,0x81c3e008},
+{0x64,0x01000000},
+{0x68,0x9de3bf98},
+{0x6c,0x92100019},
+{0x70,0x90100018},
+{0x74,0x7fffffe2},
+{0x78,0x9410001a},
+{0x7c,0xa4100018},
+{0xf0,0x97},
+{0x00,0x80a22000},
+{0x04,0x12800028},
+{0x08,0x92100019},
+{0x0c,0xa33ea01f},
+{0x10,0x8334601f},
+{0x14,0x82068001},
+{0x18,0x83386001},
+{0x1c,0x80a64001},
+{0x20,0x2680000e},
+{0x24,0x8334601f},
+{0x28,0x82264001},
+{0x2c,0x83286002},
+{0x30,0xda006790},
+{0x34,0x832e2002},
+{0x38,0xc2034001},
+{0x3c,0x80a06000},
+{0x40,0x02800019},
+{0x44,0x92103fff},
+{0x48,0x10800004},
+{0x4c,0x8334601f},
+{0x50,0x10800015},
+{0x54,0x92100018},
+{0x58,0x82068001},
+{0x5c,0x83386001},
+{0x60,0xa0102001},
+{0x64,0x80a40001},
+{0x68,0x1480000e},
+{0x6c,0x90100012},
+{0x70,0xb0064010},
+{0x74,0x92100018},
+{0x78,0x7fffffc1},
+{0x7c,0x9410001a},
+{0xf0,0x98},
+{0x00,0x8334601f},
+{0x04,0x82068001},
+{0x08,0xa0042001},
+{0x0c,0x80a22000},
+{0x10,0x12bffff0},
+{0x14,0x83386001},
+{0x18,0x10bffff4},
+{0x1c,0x80a40001},
+{0x20,0x92103fff},
+{0x24,0x81c7e008},
+{0x28,0x91e80009},
+{0x2c,0x9de3bf98},
+{0x30,0xa32e2002},
+{0x34,0xc20467b4},
+{0x38,0x80a06000},
+{0x3c,0x0280001c},
+{0x40,0xb0102001},
+{0x44,0x8336a01f},
+{0x48,0x82068001},
+{0x4c,0xb5386001},
+{0x50,0xa026401a},
+{0x54,0xb2066001},
+{0x58,0xc20ea35f},
+{0x5c,0xb4584001},
+{0x60,0x80a40019},
+{0x64,0x14800011},
+{0x68,0xb0102000},
+{0x6c,0x832c2002},
+{0x70,0xd0006790},
+{0x74,0x90020011},
+{0x78,0x7ffffce5},
+{0x7c,0x920467b4},
+{0xf0,0x99},
+{0x00,0x80a2001a},
+{0x04,0x04800003},
+{0x08,0xa0042001},
+{0x0c,0xb0062001},
+{0x10,0x80a40019},
+{0x14,0x04bffff7},
+{0x18,0x832c2002},
+{0x1c,0x80a62001},
+{0x20,0x14800003},
+{0x24,0xb0102001},
+{0x28,0xb0102000},
+{0x2c,0x81c7e008},
+{0x30,0x81e80000},
+{0x34,0x9de3bf48},
+{0x38,0xc2082360},
+{0x3c,0x80a06000},
+{0x40,0x0280007c},
+{0x44,0xba102000},
+{0x48,0xa6102000},
+{0x4c,0xda04e854},
+{0x50,0x8333601e},
+{0x54,0x80886001},
+{0x58,0x22800073},
+{0x5c,0xba076001},
+{0x60,0x83336008},
+{0x64,0x820860ff},
+{0x68,0x80a06002},
+{0x6c,0x0480000c},
+{0x70,0xa4102003},
+{0x74,0x82006002},
+{0x78,0xa4106001},
+{0x7c,0x80a4a009},
+{0xf0,0x9a},
+{0x00,0x04800005},
+{0x04,0x80a4a002},
+{0x08,0x10800005},
+{0x0c,0xa4102009},
+{0x10,0x80a4a002},
+{0x14,0x0480005d},
+{0x18,0x1b3fffc0},
+{0x1c,0x94100012},
+{0x20,0xd20ce857},
+{0x24,0x7fffff91},
+{0x28,0x9010001d},
+{0x2c,0xa2100008},
+{0x30,0x94100012},
+{0x34,0x92946000},
+{0x38,0x04800051},
+{0x3c,0x9010001d},
+{0x40,0x7fffffbb},
+{0x44,0x01000000},
+{0x48,0x80a22000},
+{0x4c,0x32bffff1},
+{0x50,0xa404bffe},
+{0x54,0xad3ca01f},
+{0x58,0x8335a01f},
+{0x5c,0x82048001},
+{0x60,0x83386001},
+{0x64,0x9a044001},
+{0x68,0xa0244001},
+{0x6c,0x80a4000d},
+{0x70,0x1480000f},
+{0x74,0x9610000d},
+{0x78,0x9807bff8},
+{0x7c,0x832c2002},
+{0xf0,0x9b},
+{0x00,0xda006790},
+{0x04,0xc2134013},
+{0x08,0x82086fff},
+{0x0c,0xc2233fd8},
+{0x10,0xc2034013},
+{0x14,0x82086fff},
+{0x18,0xc2233fb0},
+{0x1c,0xa0042001},
+{0x20,0x80a4000b},
+{0x24,0x04bffff6},
+{0x28,0x98032004},
+{0x2c,0x92100012},
+{0x30,0x7ffff230},
+{0x34,0x9007bfd0},
+{0x38,0x9007bfa8},
+{0x3c,0x7ffff22d},
+{0x40,0x92100012},
+{0x44,0x9935a01f},
+{0x48,0x9804800c},
+{0x4c,0x993b2001},
+{0x50,0x8207bff8},
+{0x54,0x952b2002},
+{0x58,0x94028001},
+{0x5c,0xda02bfd8},
+{0x60,0xd604e768},
+{0x64,0x9a0b6fff},
+{0x68,0x0303ffc0},
+{0x6c,0x9b2b6010},
+{0x70,0x822ac001},
+{0x74,0x8210400d},
+{0x78,0xc224e768},
+{0x7c,0xda02bfb0},
+{0xf0,0x9c},
+{0x00,0x9a0b6fff},
+{0x04,0x82087000},
+{0x08,0x8210400d},
+{0x0c,0xc224e768},
+{0x10,0x832c6002},
+{0x14,0xda006790},
+{0x18,0x8204400c},
+{0x1c,0xa024400c},
+{0x20,0x80a40001},
+{0x24,0x031fffff},
+{0x28,0xea034013},
+{0x2c,0xae1063ff},
+{0x30,0x14800011},
+{0x34,0x832c2002},
+{0x38,0xe8006790},
+{0x3c,0x90050013},
+{0x40,0x7ffffc73},
+{0x44,0x9204e768},
+{0x48,0x8335a01f},
+{0x4c,0x82048001},
+{0x50,0x83386001},
+{0x54,0xa0042001},
+{0x58,0x80a20017},
+{0x5c,0x16800004},
+{0x60,0x82044001},
+{0x64,0xae100008},
+{0x68,0xea050013},
+{0x6c,0x10bffff1},
+{0x70,0x80a40001},
+{0x74,0x10800004},
+{0x78,0xea24e768},
+{0x7c,0x10bfffa5},
+{0xf0,0x9d},
+{0x00,0xa404bffe},
+{0x04,0x1b3fffc0},
+{0x08,0xc204e854},
+{0x0c,0x9a1360ff},
+{0x10,0x8208400d},
+{0x14,0x9b2ca008},
+{0x18,0x8210400d},
+{0x1c,0xc224e854},
+{0x20,0xba076001},
+{0x24,0x80a76009},
+{0x28,0x04bfff89},
+{0x2c,0xa604e004},
+{0x30,0x81c7e008},
+{0x34,0x81e80000},
+{0x38,0x9de3bf98},
+{0x3c,0xa6102000},
+{0x40,0xa12ce002},
+{0x44,0xda042768},
+{0x48,0x80a36000},
+{0x4c,0x12800008},
+{0x50,0x82102001},
+{0x54,0xc02427b4},
+{0x58,0xda002550},
+{0x5c,0x83284013},
+{0x60,0x822b4001},
+{0x64,0x1080001c},
+{0x68,0xc2202550},
+{0x6c,0xe80427b4},
+{0x70,0x80a52000},
+{0x74,0x12800004},
+{0x78,0xa5284013},
+{0x7c,0x10800016},
+{0xf0,0x9e},
+{0x00,0xda2427b4},
+{0x04,0xe2002550},
+{0x08,0x808c4012},
+{0x0c,0x32800011},
+{0x10,0xc2042768},
+{0x14,0x8333600c},
+{0x18,0x80886001},
+{0x1c,0x3280000d},
+{0x20,0xc2042768},
+{0x24,0x90042768},
+{0x28,0x7ffffc39},
+{0x2c,0x920427b4},
+{0x30,0xc2002354},
+{0x34,0x80a20001},
+{0x38,0x1a800004},
+{0x3c,0x82144012},
+{0x40,0x10800005},
+{0x44,0xe8242768},
+{0x48,0xc2202550},
+{0x4c,0xc2042768},
+{0x50,0xc22427b4},
+{0x54,0xa604e001},
+{0x58,0x80a4e009},
+{0x5c,0x08bfffda},
+{0x60,0xa12ce002},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x9de3bf98},
+{0x70,0xc2060000},
+{0x74,0xbb30600c},
+{0x78,0xb9306010},
+{0x7c,0xb80f2fff},
+{0xf0,0x9f},
+{0x00,0xb08f6001},
+{0x04,0xb6086fff},
+{0x08,0x12800014},
+{0x0c,0x9f30601c},
+{0x10,0xc250229e},
+{0x14,0xfa5022a2},
+{0x18,0x8226c001},
+{0x1c,0xba27001d},
+{0x20,0xf850229c},
+{0x24,0xf65022a0},
+{0x28,0x8258401c},
+{0x2c,0xba5f401b},
+{0x30,0x82006800},
+{0x34,0xba076800},
+{0x38,0xb938601f},
+{0x3c,0xb73f601f},
+{0x40,0xb9372014},
+{0x44,0xb736e014},
+{0x48,0x8200401c},
+{0x4c,0xba07401b},
+{0x50,0xb738600c},
+{0x54,0xb93f600c},
+{0x58,0xf4002324},
+{0x5c,0xf2002328},
+{0x60,0xfa002308},
+{0x64,0xc2002300},
+{0x68,0xb65ec01a},
+{0x6c,0xbb2f6006},
+{0x70,0xb85f0019},
+{0x74,0x83286006},
+{0x78,0x9b3ee01f},
+{0x7c,0x81836000},
+{0xf0,0xa0},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0xb67ec01d},
+{0x10,0x9b3f201f},
+{0x14,0x81836000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0xb87f0001},
+{0x28,0x80a62000},
+{0x2c,0x32800031},
+{0x30,0x3b03ffc0},
+{0x34,0xc20022a4},
+{0x38,0x80a06000},
+{0x3c,0x0280000a},
+{0x40,0x80a6e000},
+{0x44,0xc25022a6},
+{0x48,0x80a6c001},
+{0x4c,0x14800031},
+{0x50,0xb0102000},
+{0x54,0xc25022a4},
+{0x58,0x80a6c001},
+{0x5c,0x0680002d},
+{0x60,0x80a6e000},
+{0x64,0x24800002},
+{0x68,0xb6102001},
+{0x6c,0x80a6c01a},
+{0x70,0x3a800002},
+{0x74,0xb606bfff},
+{0x78,0xc20022a8},
+{0x7c,0x80a06000},
+{0xf0,0xa1},
+{0x00,0x0280000a},
+{0x04,0x80a72000},
+{0x08,0xc25022aa},
+{0x0c,0x80a70001},
+{0x10,0x14800020},
+{0x14,0xb0102000},
+{0x18,0xc25022a8},
+{0x1c,0x80a70001},
+{0x20,0x0680001c},
+{0x24,0x80a72000},
+{0x28,0x24800002},
+{0x2c,0xb8102001},
+{0x30,0x80a70019},
+{0x34,0x3a800002},
+{0x38,0xb8067fff},
+{0x3c,0xc20023c8},
+{0x40,0x80886002},
+{0x44,0x32800002},
+{0x48,0xb626801b},
+{0x4c,0x80886004},
+{0x50,0x32800002},
+{0x54,0xb826401c},
+{0x58,0x80886008},
+{0x5c,0x02800005},
+{0x60,0x3b03ffc0},
+{0x64,0xb61ec01c},
+{0x68,0xb81f001b},
+{0x6c,0xb61ec01c},
+{0x70,0x832ee010},
+{0x74,0x8208401d},
+{0x78,0xbb2be01c},
+{0x7c,0xba074001},
+{0xf0,0xa2},
+{0x00,0x0300003f},
+{0x04,0x821063ff},
+{0x08,0x820f0001},
+{0x0c,0xb0074001},
+{0x10,0x81c7e008},
+{0x14,0x81e80000},
+{0x18,0x9de3bf98},
+{0x1c,0xda002514},
+{0x20,0xc2002284},
+{0x24,0x80a34001},
+{0x28,0x0880000a},
+{0x2c,0xa0102000},
+{0x30,0xc20023c8},
+{0x34,0x80886001},
+{0x38,0x02800007},
+{0x3c,0xa2102000},
+{0x40,0x033fc180},
+{0x44,0xc0204000},
+{0x48,0x1080001c},
+{0x4c,0xc0202514},
+{0x50,0xa2102000},
+{0x54,0x912c6002},
+{0x58,0xc2022768},
+{0x5c,0x9b30601c},
+{0x60,0x80a36000},
+{0x64,0x0280000f},
+{0x68,0xa2046001},
+{0x6c,0xc2002284},
+{0x70,0x80a34001},
+{0x74,0x1880000b},
+{0x78,0x90022768},
+{0x7c,0x7fffff7c},
+{0xf0,0xa3},
+{0x00,0x01000000},
+{0x04,0x80a22000},
+{0x08,0x02800007},
+{0x0c,0x80a46009},
+{0x10,0xa0042001},
+{0x14,0x9b2c2002},
+{0x18,0x033fc180},
+{0x1c,0xd0234001},
+{0x20,0x80a46009},
+{0x24,0x28bfffed},
+{0x28,0x912c6002},
+{0x2c,0x033fc180},
+{0x30,0xe0204000},
+{0x34,0xe0202514},
+{0x38,0x81c7e008},
+{0x3c,0x81e80000},
+{0x40,0x9de3bf98},
+{0x44,0xd0002320},
+{0x48,0x80a22000},
+{0x4c,0x0280004b},
+{0x50,0x01000000},
+{0x54,0xc200231c},
+{0x58,0x80a06000},
+{0x5c,0x22800016},
+{0x60,0xd800231c},
+{0x64,0x82063fff},
+{0x68,0x80a06001},
+{0x6c,0x38800012},
+{0x70,0xd800231c},
+{0x74,0xc2002318},
+{0x78,0x80a06000},
+{0x7c,0x12800008},
+{0xf0,0xa4},
+{0x00,0x213fc000},
+{0x04,0xa0142020},
+{0x08,0x82102001},
+{0x0c,0x7ffff01e},
+{0x10,0xc2240000},
+{0x14,0x10800007},
+{0x18,0xc0240000},
+{0x1c,0xa0142020},
+{0x20,0x7ffff019},
+{0x24,0xc0240000},
+{0x28,0x82102001},
+{0x2c,0xc2240000},
+{0x30,0xd800231c},
+{0x34,0x80a0000c},
+{0x38,0x82603fff},
+{0x3c,0x9a1e2001},
+{0x40,0x80a0000d},
+{0x44,0x9a603fff},
+{0x48,0x8088400d},
+{0x4c,0x0280000d},
+{0x50,0x80a0000c},
+{0x54,0xc2002318},
+{0x58,0x80a06000},
+{0x5c,0x12800006},
+{0x60,0x033fc000},
+{0x64,0x9a102001},
+{0x68,0x82106020},
+{0x6c,0x10800004},
+{0x70,0xda204000},
+{0x74,0x82106020},
+{0x78,0xc0204000},
+{0x7c,0x80a0000c},
+{0xf0,0xa5},
+{0x00,0x82603fff},
+{0x04,0x9a1e2002},
+{0x08,0x80a0000d},
+{0x0c,0x9a603fff},
+{0x10,0x8088400d},
+{0x14,0x0280000d},
+{0x18,0x80a62000},
+{0x1c,0xc2002318},
+{0x20,0x80a06000},
+{0x24,0x12800005},
+{0x28,0x033fc000},
+{0x2c,0x82106020},
+{0x30,0x10800005},
+{0x34,0xc0204000},
+{0x38,0x9a102001},
+{0x3c,0x82106020},
+{0x40,0xda204000},
+{0x44,0x80a62000},
+{0x48,0x1280000c},
+{0x4c,0x01000000},
+{0x50,0xc2002318},
+{0x54,0x80a06000},
+{0x58,0x12800005},
+{0x5c,0x033fc000},
+{0x60,0x82106020},
+{0x64,0x10800005},
+{0x68,0xc0204000},
+{0x6c,0x9a102001},
+{0x70,0x82106020},
+{0x74,0xda204000},
+{0x78,0x81c7e008},
+{0x7c,0x81e80000},
+{0xf0,0xa6},
+{0x00,0x9de3bf98},
+{0x04,0xc2002514},
+{0x08,0x80a06000},
+{0x0c,0x12800007},
+{0x10,0x90102001},
+{0x14,0xda002568},
+{0x18,0xc2002570},
+{0x1c,0x80a34001},
+{0x20,0x22800006},
+{0x24,0xc2002514},
+{0x28,0x82102001},
+{0x2c,0x7fffffa5},
+{0x30,0xc220250c},
+{0x34,0xc2002514},
+{0x38,0x80a06000},
+{0x3c,0x1280000c},
+{0x40,0x01000000},
+{0x44,0xc200250c},
+{0x48,0x80a06000},
+{0x4c,0x02800008},
+{0x50,0x9a007fff},
+{0x54,0xb0102002},
+{0x58,0x80a36000},
+{0x5c,0x12800004},
+{0x60,0xda20250c},
+{0x64,0x7fffff97},
+{0x68,0x81e80000},
+{0x6c,0x01000000},
+{0x70,0x81c7e008},
+{0x74,0x81e80000},
+{0x78,0x01000000},
+{0x7c,0x27001040},
+{0xf0,0xa7},
+{0x00,0xa614e00f},
+{0x04,0xe6a00040},
+{0x08,0x01000000},
+{0x0c,0x81c3e008},
+{0x10,0x01000000},
+{0x14,0x9de3bf98},
+{0x18,0xc2002508},
+{0x1c,0x80a06000},
+{0x20,0x0280000e},
+{0x24,0x1b3fc180},
+{0x28,0x82102001},
+{0x2c,0x9a13603c},
+{0x30,0xc2234000},
+{0x34,0xc2002508},
+{0x38,0x80a06000},
+{0x3c,0x02800005},
+{0x40,0x033fc180},
+{0x44,0x7fffffed},
+{0x48,0x01000000},
+{0x4c,0x30bffffa},
+{0x50,0x8210603c},
+{0x54,0xc0204000},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x9de3bf98},
+{0x64,0xda002500},
+{0x68,0xc20022d0},
+{0x6c,0x80a34001},
+{0x70,0x18800025},
+{0x74,0xa4102000},
+{0x78,0xd2002790},
+{0x7c,0x832ca002},
+{0xf0,0xa8},
+{0x00,0xe2024001},
+{0x04,0x80a46000},
+{0x08,0x12800004},
+{0x0c,0xa12ca003},
+{0x10,0x10800019},
+{0x14,0xc02427dc},
+{0x18,0x92024001},
+{0x1c,0xc20427dc},
+{0x20,0x80a06000},
+{0x24,0x02800008},
+{0x28,0x900427dc},
+{0x2c,0x7ffffaf8},
+{0x30,0x01000000},
+{0x34,0xc20022ac},
+{0x38,0x80a20001},
+{0x3c,0x28800005},
+{0x40,0xc20427e0},
+{0x44,0xe22427dc},
+{0x48,0x1080000b},
+{0x4c,0xc02427e0},
+{0x50,0x82006001},
+{0x54,0xc22427e0},
+{0x58,0xda002378},
+{0x5c,0x80a0400d},
+{0x60,0x28800006},
+{0x64,0xa404a001},
+{0x68,0x7ffff06f},
+{0x6c,0x01000000},
+{0x70,0x30800005},
+{0x74,0xa404a001},
+{0x78,0x80a4a009},
+{0x7c,0x24bfffe0},
+{0xf0,0xa9},
+{0x00,0xd2002790},
+{0x04,0x81c7e008},
+{0x08,0x81e80000},
+{0x0c,0x9de3bf98},
+{0x10,0x7ffff56a},
+{0x14,0x01000000},
+{0x18,0x7ffff3b3},
+{0x1c,0x01000000},
+{0x20,0x7ffff3f3},
+{0x24,0x01000000},
+{0x28,0x7ffff553},
+{0x2c,0x01000000},
+{0x30,0x7ffff80c},
+{0x34,0x01000000},
+{0x38,0x7ffff58e},
+{0x3c,0x01000000},
+{0x40,0x7ffff720},
+{0x44,0x01000000},
+{0x48,0x7ffff7c5},
+{0x4c,0x90102001},
+{0x50,0x7ffff93a},
+{0x54,0x01000000},
+{0x58,0x7ffffca3},
+{0x5c,0x01000000},
+{0x60,0x7ffff9cf},
+{0x64,0x01000000},
+{0x68,0x7ffff963},
+{0x6c,0x01000000},
+{0x70,0x7ffffd08},
+{0x74,0x90102768},
+{0x78,0x7ffff997},
+{0x7c,0x01000000},
+{0xf0,0xaa},
+{0x00,0x7ffffa8b},
+{0x04,0x01000000},
+{0x08,0x7ffffb1d},
+{0x0c,0x01000000},
+{0x10,0x7ffffb8e},
+{0x14,0x01000000},
+{0x18,0x7ffffbc8},
+{0x1c,0x01000000},
+{0x20,0x7ffffbe4},
+{0x24,0x01000000},
+{0x28,0x7ffffc52},
+{0x2c,0x01000000},
+{0x30,0x7ffffcf8},
+{0x34,0xd0002790},
+{0x38,0xc2002514},
+{0x3c,0x7ffffd04},
+{0x40,0xc2202518},
+{0x44,0x7ffffddc},
+{0x48,0x01000000},
+{0x4c,0x7ffffe5b},
+{0x50,0x01000000},
+{0x54,0x7fffffa3},
+{0x58,0x01000000},
+{0x5c,0x7ffffeef},
+{0x60,0x01000000},
+{0x64,0x7fffff67},
+{0x68,0x01000000},
+{0x6c,0x7fffff8a},
+{0x70,0x81e80000},
+{0x74,0x01000000},
+{0x78,0x9de3bf98},
+{0x7c,0xc200253c},
+{0xf0,0xab},
+{0x00,0x80a06000},
+{0x04,0x12800048},
+{0x08,0xb0102000},
+{0x0c,0xd6002460},
+{0x10,0x82102080},
+{0x14,0x80a2e000},
+{0x18,0x02800043},
+{0x1c,0xc220256c},
+{0x20,0x10800005},
+{0x24,0xb0102001},
+{0x28,0xc220256c},
+{0x2c,0x1080003e},
+{0x30,0xf00e2468},
+{0x34,0xd80022fc},
+{0x38,0x80a6000c},
+{0x3c,0x1880002d},
+{0x40,0x9a102000},
+{0x44,0xd40022f8},
+{0x48,0x3300001d},
+{0x4c,0xb6102001},
+{0x50,0x80a6c00a},
+{0x54,0x18800020},
+{0x58,0xb4102000},
+{0x5c,0x832e2002},
+{0x60,0xb8006058},
+{0x64,0xa0166060},
+{0x68,0x90166008},
+{0x6c,0x921660b8},
+{0x70,0xde0022f8},
+{0x74,0xfa070010},
+{0x78,0x80a7400b},
+{0x7c,0x26800013},
+{0xf0,0xac},
+{0x00,0xb606e001},
+{0x04,0x80a6e001},
+{0x08,0x22800007},
+{0x0c,0xc20022f8},
+{0x10,0xc2070008},
+{0x14,0x80a74001},
+{0x18,0x2480000c},
+{0x1c,0xb606e001},
+{0x20,0xc20022f8},
+{0x24,0x80a6c001},
+{0x28,0x22800007},
+{0x2c,0xb406a001},
+{0x30,0xc2070009},
+{0x34,0x80a74001},
+{0x38,0x26800004},
+{0x3c,0xb606e001},
+{0x40,0xb406a001},
+{0x44,0xb606e001},
+{0x48,0x80a6c00f},
+{0x4c,0x08bfffea},
+{0x50,0xb8072058},
+{0x54,0x80a6800d},
+{0x58,0x34800002},
+{0x5c,0x9a10001a},
+{0x60,0xb0062001},
+{0x64,0x80a6000c},
+{0x68,0x28bfffda},
+{0x6c,0xb6102001},
+{0x70,0xb0102000},
+{0x74,0xc20e2464},
+{0x78,0x80a06000},
+{0x7c,0x22800006},
+{0xf0,0xad},
+{0x00,0xb0062001},
+{0x04,0x80a34001},
+{0x08,0x34bfffc8},
+{0x0c,0xc20e2278},
+{0x10,0xb0062001},
+{0x14,0x80a62003},
+{0x18,0x24bffff8},
+{0x1c,0xc20e2464},
+{0x20,0xb0102000},
+{0x24,0x81c7e008},
+{0x28,0x81e80000},
+{0x2c,0x9de3bf98},
+{0x30,0xc2002574},
+{0x34,0x80a06000},
+{0x38,0x02800021},
+{0x3c,0x90100018},
+{0x40,0x82007fff},
+{0x44,0x7ffff16a},
+{0x48,0xc2202574},
+{0x4c,0xc2002574},
+{0x50,0x80a06000},
+{0x54,0x3280001b},
+{0x58,0xc2002578},
+{0x5c,0xc200253c},
+{0x60,0xda002334},
+{0x64,0x8200400d},
+{0x68,0x82006001},
+{0x6c,0xc2202548},
+{0x70,0xc2002564},
+{0x74,0x80a06000},
+{0x78,0x1280000f},
+{0x7c,0x01000000},
+{0xf0,0xae},
+{0x00,0x7ffff1c3},
+{0x04,0x01000000},
+{0x08,0x033fc200},
+{0x0c,0xda002334},
+{0x10,0xd800232c},
+{0x14,0x82106074},
+{0x18,0xd8204000},
+{0x1c,0x96102001},
+{0x20,0x9a036001},
+{0x24,0xda202574},
+{0x28,0xd6202540},
+{0x2c,0x10800004},
+{0x30,0xd6202564},
+{0x34,0x7ffff172},
+{0x38,0x01000000},
+{0x3c,0xc2002578},
+{0x40,0x80a06000},
+{0x44,0x12800014},
+{0x48,0x01000000},
+{0x4c,0xc2002574},
+{0x50,0x80a06000},
+{0x54,0x12800010},
+{0x58,0x01000000},
+{0x5c,0x7fffff87},
+{0x60,0x01000000},
+{0x64,0x80a22000},
+{0x68,0x1280000a},
+{0x6c,0xd020253c},
+{0x70,0xc2002334},
+{0x74,0x9a102001},
+{0x78,0x82006001},
+{0x7c,0xc2202574},
+{0xf0,0xaf},
+{0x00,0xda202578},
+{0x04,0xda202540},
+{0x08,0x7ffff715},
+{0x0c,0x91e82000},
+{0x10,0xd0202574},
+{0x14,0x81c7e008},
+{0x18,0x81e80000},
+{0x1c,0x9de3bf98},
+{0x20,0x033fc200},
+{0x24,0x82106030},
+{0x28,0xda004000},
+{0x2c,0xc200257c},
+{0x30,0x80a34001},
+{0x34,0x12800017},
+{0x38,0x01000000},
+{0x3c,0x7ffff024},
+{0x40,0x01000000},
+{0x44,0x80a22000},
+{0x48,0x32800008},
+{0x4c,0xc2002514},
+{0x50,0x7ffff06d},
+{0x54,0xb0102000},
+{0x58,0x80a22000},
+{0x5c,0x0280000f},
+{0x60,0x01000000},
+{0x64,0xc2002514},
+{0x68,0x80a06000},
+{0x6c,0x12800006},
+{0x70,0x90102002},
+{0x74,0xc200250c},
+{0x78,0x80a06000},
+{0x7c,0x02800005},
+{0xf0,0xb0},
+{0x00,0x01000000},
+{0x04,0x033fc180},
+{0x08,0x7ffffe6e},
+{0x0c,0xc0204000},
+{0x10,0x7fffef85},
+{0x14,0xb0102001},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0x7ffffed5},
+{0x28,0x01000000},
+{0x2c,0xe0002500},
+{0x30,0x80a42015},
+{0x34,0x08800016},
+{0x38,0x80a42000},
+{0x3c,0x7ffff161},
+{0x40,0x01000000},
+{0x44,0x033fc140},
+{0x48,0x82106048},
+{0x4c,0xda004000},
+{0x50,0x03000040},
+{0x54,0x11000018},
+{0x58,0x808b4001},
+{0x5c,0x12800004},
+{0x60,0x90122100},
+{0x64,0x11000019},
+{0x68,0x901221d8},
+{0x6c,0x7fffff90},
+{0x70,0x01000000},
+{0x74,0x7fffffca},
+{0x78,0x01000000},
+{0x7c,0x80a22000},
+{0xf0,0xb1},
+{0x00,0x2280001d},
+{0x04,0xc2002500},
+{0x08,0x3080002f},
+{0x0c,0x1280000f},
+{0x10,0x80a42014},
+{0x14,0x7fffef27},
+{0x18,0x01000000},
+{0x1c,0x80a22000},
+{0x20,0x32800003},
+{0x24,0x90102002},
+{0x28,0x90102001},
+{0x2c,0x7ffffe45},
+{0x30,0x01000000},
+{0x34,0x7fffef5c},
+{0x38,0x01000000},
+{0x3c,0x7fffee99},
+{0x40,0x01000000},
+{0x44,0x30800009},
+{0x48,0x3880000b},
+{0x4c,0xc2002500},
+{0x50,0x808c2001},
+{0x54,0x32800008},
+{0x58,0xc2002500},
+{0x5c,0x90043ff8},
+{0x60,0x7ffff07a},
+{0x64,0x91322001},
+{0x68,0x7ffff0d5},
+{0x6c,0x01000000},
+{0x70,0xc2002500},
+{0x74,0x80a40001},
+{0x78,0x3280000d},
+{0x7c,0xc2002578},
+{0xf0,0xb2},
+{0x00,0x031fffff},
+{0x04,0x821063f0},
+{0x08,0x80a40001},
+{0x0c,0x38800003},
+{0x10,0x21040000},
+{0x14,0xa0042001},
+{0x18,0x033fc180},
+{0x1c,0x82106034},
+{0x20,0xe0204000},
+{0x24,0xe0202500},
+{0x28,0xc2002578},
+{0x2c,0x80a06000},
+{0x30,0x02800005},
+{0x34,0x01000000},
+{0x38,0x7ffffed5},
+{0x3c,0x01000000},
+{0x40,0xc0202578},
+{0x44,0x81c7e008},
+{0x48,0x81e80000},
+{0x4c,0x81c3e008},
+{0x50,0x01000000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0xb3},
+{0x00,0x00002680},
+{0x04,0x00000000},
+{0x08,0x46656220},
+{0x0c,0x20352032},
+{0x10,0x30313300},
+{0x14,0x00000000},
+{0x18,0x31353a34},
+{0x1c,0x393a3131},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+};
+
+static const struct fw_data GSL2681B_FW[] = {
+
+{0xf0,0x2},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x12378654},
+{0xf0,0x3},
+{0x00,0xfbf38614},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00005100},
+{0x28,0x00008e00},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x1a0ac00a},
+{0x68,0x00000002},
+{0x6c,0x0000000f},
+{0x70,0x00000000},
+{0x74,0xffffffff},
+{0x78,0xffffffec},
+{0x7c,0x00000000},
+{0xf0,0x4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0xfe0cff06},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00010000},
+{0x34,0x00000000},
+{0x38,0x0000000a},
+{0x3c,0x00000258},
+{0x40,0x00000000},
+{0x44,0x04020a00},
+{0x48,0x0014012c},
+{0x4c,0x9a030002},
+{0x50,0x00000000},
+{0x54,0x00010203},
+{0x58,0x04050607},
+{0x5c,0x08090a0b},
+{0x60,0x0c0d0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1c1d1e1f},
+{0x74,0x0014000a},
+{0x78,0x80808080},
+{0x7c,0xcba981f4},
+{0xf0,0x5},
+{0x00,0x00000000},
+{0x04,0x00000005},
+{0x08,0x000000b4},
+{0x0c,0x40404040},
+{0x10,0x0000000a},
+{0x14,0x00000000},
+{0x18,0x00000fff},
+{0x1c,0x10570008},
+{0x20,0x10330009},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x80808080},
+{0x34,0x80808080},
+{0x38,0x80808080},
+{0x3c,0x80808080},
+{0x40,0x80808080},
+{0x44,0x80808080},
+{0x48,0x80808080},
+{0x4c,0x80808000},
+{0x50,0xffffffff},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000220},
+{0x78,0x00000017},
+{0x7c,0x0000000c},
+{0xf0,0x6},
+{0x00,0x00000017},
+{0x04,0x00000000},
+{0x08,0x0000000c},
+{0x0c,0x04030402},
+{0x10,0x00000032},
+{0x14,0x1414140a},
+{0x18,0x00000000},
+{0x1c,0x00000001},
+{0x20,0x00002904},
+{0x24,0x00000320},
+{0x28,0x00000500},
+{0x2c,0xf801001b},
+{0x30,0xf801001b},
+{0x34,0x00000003},
+{0x38,0x00000001},
+{0x3c,0x00000fff},
+{0x40,0x80000000},
+{0x44,0x001a001a},
+{0x48,0x00000fff},
+{0x4c,0x04040402},
+{0x50,0x00020001},
+{0x54,0x00000190},
+{0x58,0x00004000},
+{0x5c,0x1b6db688},
+{0x60,0x20100804},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x000000aa},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x7},
+{0x00,0x01070006},
+{0x04,0x03090208},
+{0x08,0x050b040a},
+{0x0c,0x07110610},
+{0x10,0x09130812},
+{0x14,0x00123456},
+{0x18,0x00000000},
+{0x1c,0x000a0078},
+{0x20,0x00001081},
+{0x24,0xff080010},
+{0x28,0xff080120},
+{0x2c,0xff080140},
+{0x30,0xff080160},
+{0x34,0x001f00dc},
+{0x38,0x001a00be},
+{0x3c,0x001400a1},
+{0x40,0x00000000},
+{0x44,0x00500032},
+{0x48,0x00000100},
+{0x4c,0x320f0f03},
+{0x50,0x00000000},
+{0x54,0x00000002},
+{0x58,0x00000000},
+{0x5c,0x00160001},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x000f0002},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00012345},
+{0x7c,0x006789ab},
+{0xf0,0x8},
+{0x00,0x036f234f},
+{0x04,0x232f230f},
+{0x08,0x22ef22cf},
+{0x0c,0x22af228f},
+{0x10,0x226f224f},
+{0x14,0x222f220f},
+{0x18,0x21f021f1},
+{0x1c,0x21f221f3},
+{0x20,0x21f421f5},
+{0x24,0x21f621f7},
+{0x28,0x21f821f9},
+{0x2c,0x31fa0000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x01030507},
+{0x44,0x090b0000},
+{0x48,0x00000000},
+{0x4c,0x02040608},
+{0x50,0x0a0c0000},
+{0x54,0x00000000},
+{0x58,0x00070006},
+{0x5c,0x00000008},
+{0x60,0x0000015e},
+{0x64,0x00040302},
+{0x68,0x00040604},
+{0x6c,0x00000100},
+{0x70,0x000000cd},
+{0x74,0x00000080},
+{0x78,0x00000000},
+{0x7c,0x0000000c},
+{0xf0,0x9},
+{0x00,0xff080094},
+{0x04,0x00070011},
+{0x08,0xff080090},
+{0x0c,0x00040000},
+{0x10,0xff080068},
+{0x14,0x00030000},
+{0x18,0xff080064},
+{0x1c,0x01002582},
+{0x20,0xff080060},
+{0x24,0x00000000},
+{0x28,0xff08004c},
+{0x2c,0x00197fff},
+{0x30,0xfffffff0},
+{0x34,0x00000000},
+{0x38,0xfffffff0},
+{0x3c,0x00000000},
+{0x40,0xfffffff0},
+{0x44,0x00000000},
+{0x48,0xfffffff0},
+{0x4c,0x00000000},
+{0x50,0xfffffff0},
+{0x54,0x00000000},
+{0x58,0xfffffff0},
+{0x5c,0x00000000},
+{0x60,0xfffffff0},
+{0x64,0x00000000},
+{0x68,0xfffffff0},
+{0x6c,0x00000000},
+{0x70,0xfffffff0},
+{0x74,0x00000000},
+{0x78,0xfffffff0},
+{0x7c,0x00000000},
+/*
+{0xf0,0xe0},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x006401f4},
+{0x44,0x00640064},
+{0x48,0x01900064},
+{0x4c,0x00500190},
+{0x50,0x00500050},
+{0x54,0x012c0050},
+{0x58,0x012c012c},
+{0x5c,0x0037012c},
+{0x60,0x00640014},
+{0x64,0x00640064},
+{0x68,0x00000032},
+{0x6c,0x00500000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe1},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000002},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe2},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe3},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe5},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe6},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+*/
+
+
+
+{0xf0,0x1e},
+{0x00,0x5a5a0f00},
+{0x04,0x00002d6c},
+{0x08,0x00002dd4},
+{0x0c,0x00002e4c},
+{0x10,0x00002f7c},
+{0x14,0x00003068},
+{0x18,0x0000323c},
+{0x1c,0x000033d8},
+{0x20,0x0000354c},
+{0x24,0x00003718},
+{0x28,0x00003884},
+{0x2c,0x00003af4},
+{0x30,0x00003c68},
+{0x34,0x00003d70},
+{0x38,0x00003e20},
+{0x3c,0x00003f4c},
+{0x40,0x000042a0},
+{0x44,0x00004344},
+{0x48,0x00004448},
+{0x4c,0x0000462c},
+{0x50,0x0000474c},
+{0x54,0x00004808},
+{0x58,0x00004a00},
+{0x5c,0x00004ce4},
+{0x60,0x00005080},
+{0x64,0x00005164},
+{0x68,0x000051a4},
+{0x6c,0x00005404},
+{0x70,0x00005524},
+{0x74,0x00005610},
+{0x78,0x0000566c},
+{0x7c,0x00000000},
+{0xf0,0x1f},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00002648},
+{0x50,0x000026f8},
+{0x54,0x00000000},
+{0x58,0x000027a8},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x000028c8},
+{0x68,0x00000000},
+{0x6c,0x0000298c},
+{0x70,0x00002b04},
+{0x74,0x00002ba4},
+{0x78,0x000056f8},
+{0x7c,0x5a5a0ffc},
+{0xf0,0x0},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x233fc0c0},
+{0x10,0xa2146004},
+{0x14,0xa4102000},
+{0x18,0xe4244000},
+{0x1c,0x233fc0c0},
+{0x20,0xa2146010},
+{0x24,0x2500003f},
+{0x28,0xa414a3ff},
+{0x2c,0xe4244000},
+{0x30,0x01000000},
+{0x34,0x821020e0},
+{0x38,0x81880001},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0xa410200f},
+{0x48,0xe4a00040},
+{0x4c,0x01000000},
+{0x50,0xa0100000},
+{0x54,0xa2100000},
+{0x58,0xa4100000},
+{0x5c,0xa6100000},
+{0x60,0xa8100000},
+{0x64,0xaa100000},
+{0x68,0xac100000},
+{0x6c,0xae100000},
+{0x70,0x90100000},
+{0x74,0x92100000},
+{0x78,0x94100000},
+{0x7c,0x96100000},
+{0xf0,0x1},
+{0x00,0x98100000},
+{0x04,0x9a100000},
+{0x08,0x9c100000},
+{0x0c,0x9e100000},
+{0x10,0x84100000},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0x82100000},
+{0x20,0x81900001},
+{0x24,0x82100000},
+{0x28,0x81980001},
+{0x2c,0x81800000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0xbc102cf8},
+{0x40,0x9c102c78},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0x27001040},
+{0x50,0xa614e00f},
+{0x54,0xe6a00040},
+{0x58,0x01000000},
+{0x5c,0x40000309},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x10bfffff},
+{0x6c,0x01000000},
+{0x70,0x03169684},
+{0x74,0x82106050},
+{0x78,0x03296945},
+{0x7c,0x82106282},
+{0xf0,0x1a},
+{0x00,0x9de3bf98},
+{0x04,0x40000010},
+{0x08,0x01000000},
+{0x0c,0x40000007},
+{0x10,0x01000000},
+{0x14,0x400002ff},
+{0x18,0x01000000},
+{0x1c,0x40000015},
+{0x20,0x01000000},
+{0x24,0x30bffffe},
+{0x28,0x82102001},
+{0x2c,0x81904000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x03000008},
+{0x48,0x82106342},
+{0x4c,0xa3804000},
+{0x50,0x03000004},
+{0x54,0x82106000},
+{0x58,0x81984000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x81c3e008},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0xa7800000},
+{0xf0,0x1b},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x81c3e008},
+{0x10,0x01000000},
+{0x14,0x80a22000},
+{0x18,0x02800006},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x90823fff},
+{0x28,0x12bffffe},
+{0x2c,0x01000000},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x05001040},
+{0x40,0x8410a00f},
+{0x44,0xc4a00040},
+{0x48,0x01000000},
+{0x4c,0x81c3e008},
+{0x50,0x01000000},
+{0x54,0x9de3bee0},
+{0x58,0xb2067fff},
+{0x5c,0x96100018},
+{0x60,0xf227bf44},
+{0x64,0xc027bf40},
+{0x68,0x98102000},
+{0x6c,0xb007bff8},
+{0x70,0xd4063f48},
+{0x74,0xda063f4c},
+{0x78,0xb810000a},
+{0x7c,0x98033fff},
+{0xf0,0x1c},
+{0x00,0xb0063ff8},
+{0x04,0x80a2800d},
+{0x08,0x16800031},
+{0x0c,0xb610000d},
+{0x10,0xbb2aa002},
+{0x14,0x832b6002},
+{0x18,0xb207400b},
+{0x1c,0xb400400b},
+{0x20,0xde02c01d},
+{0x24,0x80a7001b},
+{0x28,0x1680001c},
+{0x2c,0x01000000},
+{0x30,0xc2068000},
+{0x34,0x80a0400f},
+{0x38,0x04800005},
+{0x3c,0x80a7001b},
+{0x40,0xb606ffff},
+{0x44,0x10bffff8},
+{0x48,0xb406bffc},
+{0x4c,0x16800013},
+{0x50,0x80a7001b},
+{0x54,0xc2068000},
+{0x58,0xc2264000},
+{0x5c,0xb8072001},
+{0x60,0x80a7001b},
+{0x64,0x1680000d},
+{0x68,0xb2066004},
+{0x6c,0xc2064000},
+{0x70,0x80a0400f},
+{0x74,0x26bffffb},
+{0x78,0xb8072001},
+{0x7c,0x80a7001b},
+{0xf0,0x1d},
+{0x00,0x16800006},
+{0x04,0x01000000},
+{0x08,0xc2268000},
+{0x0c,0xb606ffff},
+{0x10,0xb406bffc},
+{0x14,0x80a7001b},
+{0x18,0x12bfffe4},
+{0x1c,0x80a7001b},
+{0x20,0xb0062008},
+{0x24,0x82073fff},
+{0x28,0xc2263f4c},
+{0x2c,0xd4263f48},
+{0x30,0x832f2002},
+{0x34,0xb0062008},
+{0x38,0xde22c001},
+{0x3c,0xba072001},
+{0x40,0xfa263f48},
+{0x44,0xda263f4c},
+{0x48,0x98032002},
+{0x4c,0x80a33fff},
+{0x50,0x34bfffc9},
+{0x54,0xd4063f48},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x20},
+{0x00,0x83580000},
+{0x04,0x82086ff0},
+{0x08,0x83306004},
+{0x0c,0x80a06005},
+{0x10,0x02800024},
+{0x14,0x01000000},
+{0x18,0x80a06006},
+{0x1c,0x02800039},
+{0x20,0x01000000},
+{0x24,0x80a06015},
+{0x28,0x02800051},
+{0x2c,0x01000000},
+{0x30,0x80a0602a},
+{0x34,0x02800085},
+{0x38,0x01000000},
+{0x3c,0x073fc180},
+{0x40,0x8610e03c},
+{0x44,0x05169680},
+{0x48,0x84004002},
+{0x4c,0xc420c000},
+{0x50,0x073fc000},
+{0x54,0x8610e020},
+{0x58,0x84102001},
+{0x5c,0xc420c000},
+{0x60,0x0500000c},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x8480bfff},
+{0x70,0x12bffffe},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x073fc000},
+{0xf0,0x21},
+{0x00,0x8610e020},
+{0x04,0x84102000},
+{0x08,0xc420c000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x81c44000},
+{0x18,0x81cc8000},
+{0x1c,0x01000000},
+{0x20,0xa7500000},
+{0x24,0xa92ce002},
+{0x28,0xa734e001},
+{0x2c,0xa614c014},
+{0x30,0xa60ce007},
+{0x34,0x81900000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x81e00000},
+{0x44,0xe03ba000},
+{0x48,0xe43ba008},
+{0x4c,0xe83ba010},
+{0x50,0xec3ba018},
+{0x54,0xf03ba020},
+{0x58,0xf43ba028},
+{0x5c,0xf83ba030},
+{0x60,0xfc3ba038},
+{0x64,0x81e80000},
+{0x68,0x8194c000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x81c44000},
+{0x78,0x81cc8000},
+{0x7c,0x01000000},
+{0xf0,0x22},
+{0x00,0xa7500000},
+{0x04,0xa934e002},
+{0x08,0xa72ce001},
+{0x0c,0xa614c014},
+{0x10,0xa60ce007},
+{0x14,0x81900000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x81e80000},
+{0x24,0x81e80000},
+{0x28,0xe01ba000},
+{0x2c,0xe41ba008},
+{0x30,0xe81ba010},
+{0x34,0xec1ba018},
+{0x38,0xf01ba020},
+{0x3c,0xf41ba028},
+{0x40,0xf81ba030},
+{0x44,0xfc1ba038},
+{0x48,0x81e00000},
+{0x4c,0x81e00000},
+{0x50,0x8194c000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x81c44000},
+{0x60,0x81cc8000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x82102010},
+{0x70,0x273fc0c0},
+{0x74,0xa614e010},
+{0x78,0xc224c000},
+{0x7c,0x01000000},
+{0xf0,0x23},
+{0x00,0x033fc0c0},
+{0x04,0x82106004},
+{0x08,0xa6102000},
+{0x0c,0xe6204000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0xa6102020},
+{0x20,0x83480000},
+{0x24,0x82104013},
+{0x28,0x81884000},
+{0x2c,0x01000000},
+{0x30,0x400004ae},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0xa7500000},
+{0x44,0xa934e002},
+{0x48,0xa72ce001},
+{0x4c,0xa614c014},
+{0x50,0xa60ce007},
+{0x54,0x81900000},
+{0x58,0x01000000},
+{0x5c,0x81e80000},
+{0x60,0xe01ba000},
+{0x64,0xe41ba008},
+{0x68,0xe81ba010},
+{0x6c,0xec1ba018},
+{0x70,0xf01ba020},
+{0x74,0xf41ba028},
+{0x78,0xf81ba030},
+{0x7c,0xfc1ba038},
+{0xf0,0x24},
+{0x00,0x81e00000},
+{0x04,0x8194c000},
+{0x08,0x01000000},
+{0x0c,0xa6102020},
+{0x10,0x83480000},
+{0x14,0x82284013},
+{0x18,0x81884000},
+{0x1c,0x01000000},
+{0x20,0x033fc0c0},
+{0x24,0x82106004},
+{0x28,0xa6103fff},
+{0x2c,0xe6204000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c44000},
+{0x40,0x81cc8000},
+{0x44,0x01000000},
+{0x48,0x81c48000},
+{0x4c,0x81cca004},
+{0x50,0x01000000},
+{0x54,0x033fc140},
+{0x58,0x82106048},
+{0x5c,0xda004000},
+{0x60,0x03000040},
+{0x64,0x808b4001},
+{0x68,0x03000016},
+{0x6c,0x12800003},
+{0x70,0x901061d0},
+{0x74,0x901063f8},
+{0x78,0x81c3e008},
+{0x7c,0x01000000},
+{0xf0,0x25},
+{0x00,0x94102000},
+{0x04,0x96102000},
+{0x08,0x832ae002},
+{0x0c,0xd20063a4},
+{0x10,0x98102000},
+{0x14,0x832b2002},
+{0x18,0x9b2aa002},
+{0x1c,0xda02000d},
+{0x20,0x98032001},
+{0x24,0xda224001},
+{0x28,0x80a32005},
+{0x2c,0x04bffffa},
+{0x30,0x9402a001},
+{0x34,0x9602e001},
+{0x38,0x80a2e003},
+{0x3c,0x04bffff4},
+{0x40,0x832ae002},
+{0x44,0x81c3e008},
+{0x48,0x01000000},
+{0x4c,0x033fc200},
+{0x50,0x961060a0},
+{0x54,0x98102000},
+{0x58,0x832b2002},
+{0x5c,0x9a03000c},
+{0x60,0xda136400},
+{0x64,0x98032001},
+{0x68,0x80a32016},
+{0x6c,0x04bffffb},
+{0x70,0xda20400b},
+{0x74,0x81c3e008},
+{0x78,0x01000000},
+{0x7c,0x82020008},
+{0xf0,0x26},
+{0x00,0x82004008},
+{0x04,0x9b326002},
+{0x08,0x82004001},
+{0x0c,0x8200400d},
+{0x10,0x83286002},
+{0x14,0x920a6003},
+{0x18,0x932a6003},
+{0x1c,0xd00065b0},
+{0x20,0x91320009},
+{0x24,0x81c3e008},
+{0x28,0x900a20ff},
+{0x2c,0x9a020008},
+{0x30,0x9a034008},
+{0x34,0x97326002},
+{0x38,0x9a03400d},
+{0x3c,0x9a03400b},
+{0x40,0x920a6003},
+{0x44,0x9b2b6002},
+{0x48,0x932a6003},
+{0x4c,0x821020ff},
+{0x50,0xd80365b0},
+{0x54,0x83284009},
+{0x58,0x822b0001},
+{0x5c,0x952a8009},
+{0x60,0x8210400a},
+{0x64,0xc22365b0},
+{0x68,0x912a2002},
+{0x6c,0xda0223a4},
+{0x70,0x972ae002},
+{0x74,0x81c3e008},
+{0x78,0xc223400b},
+{0x7c,0x82102005},
+{0xf0,0x27},
+{0x00,0x1b3fc200},
+{0x04,0x82204008},
+{0x08,0x9a136008},
+{0x0c,0x83286002},
+{0x10,0xd0034000},
+{0x14,0x91320001},
+{0x18,0x81c3e008},
+{0x1c,0x900a200f},
+{0x20,0x9de3bf38},
+{0x24,0xa12e2002},
+{0x28,0xda1423da},
+{0x2c,0xd61423d8},
+{0x30,0xc200247c},
+{0x34,0xb022c00d},
+{0x38,0x825b4001},
+{0x3c,0xb21e6001},
+{0x40,0x92862001},
+{0x44,0x0280000c},
+{0x48,0x9a004019},
+{0x4c,0xb0100009},
+{0x50,0x9807bf98},
+{0x54,0x8203400d},
+{0x58,0xc2168001},
+{0x5c,0xc2230000},
+{0x60,0xc200247c},
+{0x64,0x9a034001},
+{0x68,0xb0863fff},
+{0x6c,0x12bffffa},
+{0x70,0x98032004},
+{0x74,0x7ffffe78},
+{0x78,0x9007bf98},
+{0x7c,0xda1423ea},
+{0xf0,0x28},
+{0x00,0xd61423e8},
+{0x04,0x80a3400b},
+{0x08,0x92102000},
+{0x0c,0x1880000b},
+{0x10,0xb010000d},
+{0x14,0x832b6002},
+{0x18,0x8200401e},
+{0x1c,0x98007f98},
+{0x20,0xc2030000},
+{0x24,0xb0062001},
+{0x28,0x92024001},
+{0x2c,0x80a6000b},
+{0x30,0x08bffffc},
+{0x34,0x98032004},
+{0x38,0xb022c00d},
+{0x3c,0xb0062001},
+{0x40,0x81800000},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0x01000000},
+{0x50,0xb0724018},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf98},
+{0x60,0xc200247c},
+{0x64,0x83306001},
+{0x68,0x80a60001},
+{0x6c,0x1a800006},
+{0x70,0x90100018},
+{0x74,0x7fffffc2},
+{0x78,0x01000000},
+{0x7c,0x10800006},
+{0xf0,0x29},
+{0x00,0xb0020008},
+{0x04,0x7fffffbe},
+{0x08,0x90260001},
+{0x0c,0x90020008},
+{0x10,0xb0022001},
+{0x14,0x81c7e008},
+{0x18,0x81e80000},
+{0x1c,0x9de3bf98},
+{0x20,0xa8102000},
+{0x24,0xc20023d4},
+{0x28,0x80a50001},
+{0x2c,0x1a800057},
+{0x30,0xe2002348},
+{0x34,0xa4102000},
+{0x38,0xc200247c},
+{0x3c,0x80a48001},
+{0x40,0x3a80004e},
+{0x44,0xa8052001},
+{0x48,0x7fffffe5},
+{0x4c,0x90100012},
+{0x50,0xaa100008},
+{0x54,0x90100014},
+{0x58,0x7fffff89},
+{0x5c,0x92100015},
+{0x60,0x80a62000},
+{0x64,0x12800004},
+{0x68,0xa0100008},
+{0x6c,0x10800016},
+{0x70,0xa0102000},
+{0x74,0x80a62009},
+{0x78,0x18800011},
+{0x7c,0x80a62007},
+{0xf0,0x2a},
+{0x00,0x7fffff55},
+{0x04,0x01000000},
+{0x08,0x94100008},
+{0x0c,0x90100014},
+{0x10,0x7fffffa4},
+{0x14,0x92100012},
+{0x18,0x80a20011},
+{0x1c,0x04800007},
+{0x20,0xa6100008},
+{0x24,0x9a102008},
+{0x28,0x9a234018},
+{0x2c,0x82102001},
+{0x30,0x8328400d},
+{0x34,0xa02c0001},
+{0x38,0x80a62007},
+{0x3c,0x18800008},
+{0x40,0x80a62008},
+{0x44,0x9a102007},
+{0x48,0x9a234018},
+{0x4c,0x82102001},
+{0x50,0x8328400d},
+{0x54,0x10800023},
+{0x58,0xa0140001},
+{0x5c,0x1280000a},
+{0x60,0x821e2009},
+{0x64,0x80a420fe},
+{0x68,0x24800002},
+{0x6c,0xa0042001},
+{0x70,0x03000018},
+{0x74,0x9b2ca002},
+{0x78,0x82106270},
+{0x7c,0x10800019},
+{0xf0,0x2b},
+{0x00,0xe6234001},
+{0x04,0x80a00001},
+{0x08,0x9a603fff},
+{0x0c,0x80a420fe},
+{0x10,0x04800003},
+{0x14,0x82102001},
+{0x18,0x82102000},
+{0x1c,0x808b4001},
+{0x20,0x02800011},
+{0x24,0x92100015},
+{0x28,0x03000018},
+{0x2c,0x9b2ca002},
+{0x30,0x82106270},
+{0x34,0xc2034001},
+{0x38,0x80a04011},
+{0x3c,0x18800003},
+{0x40,0x9a204011},
+{0x44,0x9a244001},
+{0x48,0x80a4c011},
+{0x4c,0x14800003},
+{0x50,0x8224c011},
+{0x54,0x82244013},
+{0x58,0x80a34001},
+{0x5c,0xa0642000},
+{0x60,0x92100015},
+{0x64,0x94100010},
+{0x68,0x7fffff51},
+{0x6c,0x90100014},
+{0x70,0x10bfffb2},
+{0x74,0xa404a001},
+{0x78,0xc20023d4},
+{0x7c,0x80a50001},
+{0xf0,0x2c},
+{0x00,0x0abfffae},
+{0x04,0xa4102000},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x98102000},
+{0x14,0x9610201e},
+{0x18,0x80a22000},
+{0x1c,0x12800003},
+{0x20,0x8210000c},
+{0x24,0x8222c00c},
+{0x28,0x83286002},
+{0x2c,0xda006480},
+{0x30,0x80a37ff0},
+{0x34,0x02800006},
+{0x38,0x98032002},
+{0x3c,0xc2006484},
+{0x40,0x80a3201f},
+{0x44,0x04bffff5},
+{0x48,0xc2234000},
+{0x4c,0x81c3e008},
+{0x50,0x01000000},
+{0x54,0x9de3bf98},
+{0x58,0xd8002660},
+{0x5c,0xc200254c},
+{0x60,0x98130001},
+{0x64,0xda002508},
+{0x68,0x033fc000},
+{0x6c,0x9a0b4001},
+{0x70,0x153fc180},
+{0x74,0x03202020},
+{0x78,0x82106080},
+{0x7c,0x9612a038},
+{0xf0,0x2d},
+{0x00,0xc222c000},
+{0x04,0x03168000},
+{0x08,0xd8202660},
+{0x0c,0x80a34001},
+{0x10,0xc0228000},
+{0x14,0xa4102000},
+{0x18,0x1280000b},
+{0x1c,0xa8102000},
+{0x20,0x0300003f},
+{0x24,0xda002548},
+{0x28,0x821063ff},
+{0x2c,0x9a0b4001},
+{0x30,0xd8002508},
+{0x34,0x033fffc0},
+{0x38,0x980b0001},
+{0x3c,0x9a13400c},
+{0x40,0xda202548},
+{0x44,0x80a62000},
+{0x48,0x16800028},
+{0x4c,0x1b296956},
+{0x50,0x1b3fc040},
+{0x54,0xc2002548},
+{0x58,0x8208400d},
+{0x5c,0x1b168040},
+{0x60,0x80a0400d},
+{0x64,0x22800002},
+{0x68,0xa4102001},
+{0x6c,0xda002664},
+{0x70,0xc20021dc},
+{0x74,0x80a34001},
+{0x78,0x1a80001c},
+{0x7c,0x1b296956},
+{0xf0,0x2e},
+{0x00,0x031696a9},
+{0x04,0xda00250c},
+{0x08,0x821061a5},
+{0x0c,0x80a34001},
+{0x10,0x02800006},
+{0x14,0x03296956},
+{0x18,0x8210625a},
+{0x1c,0x80a34001},
+{0x20,0x12800012},
+{0x24,0x1b296956},
+{0x28,0x11000017},
+{0x2c,0x13000018},
+{0x30,0x90122220},
+{0x34,0x40000178},
+{0x38,0x92126048},
+{0x3c,0x03000019},
+{0x40,0x96106030},
+{0x44,0xa8102001},
+{0x48,0x98102000},
+{0x4c,0x9b2b2002},
+{0x50,0x98032001},
+{0x54,0xc20365b0},
+{0x58,0x80a3201b},
+{0x5c,0x08bffffc},
+{0x60,0xc223400b},
+{0x64,0x1b296956},
+{0x68,0x80a00012},
+{0x6c,0x82380018},
+{0x70,0xa613625a},
+{0x74,0x90402000},
+{0x78,0x8330601f},
+{0x7c,0x1b1696a9},
+{0xf0,0x2f},
+{0x00,0xa21361a5},
+{0x04,0x9e104008},
+{0x08,0xd200254c},
+{0x0c,0xe0002548},
+{0x10,0x98102500},
+{0x14,0x80a32670},
+{0x18,0x0280001a},
+{0x1c,0x96033a50},
+{0x20,0xc200250c},
+{0x24,0x941b250c},
+{0x28,0x80a04013},
+{0x2c,0x02800007},
+{0x30,0x9a184011},
+{0x34,0x80a0000d},
+{0x38,0x82603fff},
+{0x3c,0x80904008},
+{0x40,0x0280000a},
+{0x44,0x80a3e000},
+{0x48,0x80a2e0f0},
+{0x4c,0x9a402000},
+{0x50,0x80a0000a},
+{0x54,0x82603fff},
+{0x58,0x80934001},
+{0x5c,0x3280000a},
+{0x60,0x98032004},
+{0x64,0x80a3e000},
+{0x68,0x02800005},
+{0x6c,0x82033960},
+{0x70,0x80a0603f},
+{0x74,0x28800004},
+{0x78,0x98032004},
+{0x7c,0xc0230000},
+{0xf0,0x30},
+{0x00,0x98032004},
+{0x04,0x80a32837},
+{0x08,0x08bfffe4},
+{0x0c,0x80a32670},
+{0x10,0x80a62000},
+{0x14,0x06800006},
+{0x18,0x0300003f},
+{0x1c,0x821063ff},
+{0x20,0x820a4001},
+{0x24,0x10800005},
+{0x28,0xc220254c},
+{0x2c,0xc21022d4},
+{0x30,0x83286010},
+{0x34,0xc22026a0},
+{0x38,0xc2002548},
+{0x3c,0xda0023c8},
+{0x40,0x90087dff},
+{0x44,0xd4002334},
+{0x48,0x9b336012},
+{0x4c,0x9402a001},
+{0x50,0xd800254c},
+{0x54,0x9a0b6200},
+{0x58,0x033fc200},
+{0x5c,0x9012000d},
+{0x60,0x92050014},
+{0x64,0x980b3ffd},
+{0x68,0x9732a001},
+{0x6c,0x82106030},
+{0x70,0xc2004000},
+{0x74,0x98130009},
+{0x78,0x9602800b},
+{0x7c,0x9b342018},
+{0xf0,0x31},
+{0x00,0xd820254c},
+{0x04,0xd620258c},
+{0x08,0xc220257c},
+{0x0c,0x80a3605a},
+{0x10,0xd4202554},
+{0x14,0xd4202588},
+{0x18,0x12800009},
+{0x1c,0xd0202548},
+{0x20,0x0300003f},
+{0x24,0x821063ff},
+{0x28,0x1b3fffc0},
+{0x2c,0x820a0001},
+{0x30,0x9a0c000d},
+{0x34,0x8210400d},
+{0x38,0xc2202548},
+{0x3c,0x80a4a001},
+{0x40,0x0280000c},
+{0x44,0x82102027},
+{0x48,0x03296956},
+{0x4c,0xda00250c},
+{0x50,0x8210625a},
+{0x54,0x80a34001},
+{0x58,0x1280000b},
+{0x5c,0x01000000},
+{0x60,0xc200254c},
+{0x64,0x80886002},
+{0x68,0x12800007},
+{0x6c,0x82102015},
+{0x70,0xc2202500},
+{0x74,0x7ffffe63},
+{0x78,0x901025b0},
+{0x7c,0x7ffffe74},
+{0xf0,0x32},
+{0x00,0x81e80000},
+{0x04,0x01000000},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x9de3bf98},
+{0x14,0x033fc0c0},
+{0x18,0xb6106004},
+{0x1c,0x35200040},
+{0x20,0x2f3fc200},
+{0x24,0x8216a101},
+{0x28,0xc225c000},
+{0x2c,0xc026c000},
+{0x30,0x400002b1},
+{0x34,0x90102000},
+{0x38,0x2b3fc140},
+{0x3c,0xda00247c},
+{0x40,0x98156040},
+{0x44,0xe8030000},
+{0x48,0xc20022f8},
+{0x4c,0x9b336001},
+{0x50,0x825b4001},
+{0x54,0xa80d3800},
+{0x58,0xa8150001},
+{0x5c,0xe8230000},
+{0x60,0x82156004},
+{0x64,0xe8004000},
+{0x68,0xa80d3fe0},
+{0x6c,0xa815000d},
+{0x70,0xe8204000},
+{0x74,0xa615e080},
+{0x78,0xe804c000},
+{0x7c,0xb815e054},
+{0xf0,0x33},
+{0x00,0xc2070000},
+{0x04,0xa80d3fe0},
+{0x08,0xa815000d},
+{0x0c,0xba0861ff},
+{0x10,0xec002344},
+{0x14,0xc2002298},
+{0x18,0x9a15e070},
+{0x1c,0xc2234000},
+{0x20,0x033fc000},
+{0x24,0xda002338},
+{0x28,0x82106030},
+{0x2c,0xda204000},
+{0x30,0xc2002330},
+{0x34,0x9215e074},
+{0x38,0xc2224000},
+{0x3c,0x19000016},
+{0x40,0x0300003f},
+{0x44,0x9e1323f8},
+{0x48,0x90156058},
+{0x4c,0x821063ff},
+{0x50,0xc2220000},
+{0x54,0x981321d0},
+{0x58,0x96156088},
+{0x5c,0xd822c000},
+{0x60,0x9415608c},
+{0x64,0xde228000},
+{0x68,0xe824c000},
+{0x6c,0xa015605c},
+{0x70,0xc0240000},
+{0x74,0xa2156080},
+{0x78,0xd8244000},
+{0x7c,0xa4156084},
+{0xf0,0x34},
+{0x00,0xde248000},
+{0x04,0xec202670},
+{0x08,0x80a76114},
+{0x0c,0x1280000c},
+{0x10,0xe6002374},
+{0x14,0x820da0ff},
+{0x18,0x8258605a},
+{0x1c,0x82006040},
+{0x20,0x83306007},
+{0x24,0x9b286010},
+{0x28,0x9a034001},
+{0x2c,0x825ce349},
+{0x30,0xfa270000},
+{0x34,0xda202670},
+{0x38,0xa730600a},
+{0x3c,0xda0023f8},
+{0x40,0x8215e008},
+{0x44,0xda204000},
+{0x48,0x9815e00c},
+{0x4c,0x7ffffe20},
+{0x50,0xda230000},
+{0x54,0x9a15e07c},
+{0x58,0xe8034000},
+{0x5c,0x033ff000},
+{0x60,0xa82d0001},
+{0x64,0xe8234000},
+{0x68,0x033fc1c0},
+{0x6c,0xda002340},
+{0x70,0x82106064},
+{0x74,0xda204000},
+{0x78,0x0300007f},
+{0x7c,0x96156010},
+{0xf0,0x35},
+{0x00,0x821063ff},
+{0x04,0x1907ffc0},
+{0x08,0xc222c000},
+{0x0c,0x92156030},
+{0x10,0x94156014},
+{0x14,0xd8224000},
+{0x18,0x80a4e000},
+{0x1c,0x0280000f},
+{0x20,0xd8228000},
+{0x24,0x932ce010},
+{0x28,0x8204e001},
+{0x2c,0x9b2ce004},
+{0x30,0x83286010},
+{0x34,0x9a02400d},
+{0x38,0x9815e084},
+{0x3c,0xda230000},
+{0x40,0x82004013},
+{0x44,0x9615e088},
+{0x48,0x82006002},
+{0x4c,0x9415e08c},
+{0x50,0xd222c000},
+{0x54,0xc2228000},
+{0x58,0x8215e030},
+{0x5c,0xda002670},
+{0x60,0xda204000},
+{0x64,0x7ffffedc},
+{0x68,0x90103fff},
+{0x6c,0x7ffffec9},
+{0x70,0x90102001},
+{0x74,0x82103fff},
+{0x78,0xc226c000},
+{0x7c,0xf425c000},
+{0xf0,0x36},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0x9de3bf98},
+{0x0c,0xc2002508},
+{0x10,0x808860ff},
+{0x14,0x02800015},
+{0x18,0x1b3fc180},
+{0x1c,0x82102001},
+{0x20,0x9a13603c},
+{0x24,0xc2234000},
+{0x28,0xc2002508},
+{0x2c,0x820860ff},
+{0x30,0x80a04018},
+{0x34,0x1280000b},
+{0x38,0x033fc180},
+{0x3c,0x7ffffc9f},
+{0x40,0x01000000},
+{0x44,0xda002508},
+{0x48,0x033fc040},
+{0x4c,0x9a0b60ff},
+{0x50,0x8210600c},
+{0x54,0xc0204000},
+{0x58,0x10bffff7},
+{0x5c,0x80a34018},
+{0x60,0x8210603c},
+{0x64,0xc0204000},
+{0x68,0x81c7e008},
+{0x6c,0x81e80000},
+{0x70,0x9de3bf98},
+{0x74,0x9e100018},
+{0x78,0x031fffdf},
+{0x7c,0xb010001a},
+{0xf0,0x37},
+{0x00,0xb41063ff},
+{0x04,0x82102000},
+{0x08,0xbb286002},
+{0x0c,0x80a62009},
+{0x10,0xb6006001},
+{0x14,0x12800006},
+{0x18,0xb810001d},
+{0x1c,0xc206401d},
+{0x20,0x83306001},
+{0x24,0x8208401a},
+{0x28,0xc226401d},
+{0x2c,0x80a62008},
+{0x30,0x08800006},
+{0x34,0xc206401c},
+{0x38,0xfa03c01c},
+{0x3c,0xbb376001},
+{0x40,0x10800003},
+{0x44,0xba0f401a},
+{0x48,0xfa03c01c},
+{0x4c,0x8200401d},
+{0x50,0xc226401c},
+{0x54,0x80a6e089},
+{0x58,0x08bfffec},
+{0x5c,0x8210001b},
+{0x60,0x81c7e008},
+{0x64,0x81e80000},
+{0x68,0x9a102000},
+{0x6c,0x832b6002},
+{0x70,0x9a036001},
+{0x74,0x80a36089},
+{0x78,0x08bffffd},
+{0x7c,0xc0220001},
+{0xf0,0x38},
+{0x00,0x81c3e008},
+{0x04,0x01000000},
+{0x08,0xc20022f8},
+{0x0c,0xda00247c},
+{0x10,0x8258400d},
+{0x14,0x83306001},
+{0x18,0x96102000},
+{0x1c,0x80a2c001},
+{0x20,0x1a80003b},
+{0x24,0x0300003f},
+{0x28,0x941063ff},
+{0x2c,0x98102000},
+{0x30,0x80a26001},
+{0x34,0x0280002e},
+{0x38,0x80a26004},
+{0x3c,0x12800008},
+{0x40,0x80a26008},
+{0x44,0xc2030008},
+{0x48,0x9a08400a},
+{0x4c,0x83306012},
+{0x50,0x83286010},
+{0x54,0x10800014},
+{0x58,0x9b336002},
+{0x5c,0x28800015},
+{0x60,0xda02000c},
+{0x64,0xda030008},
+{0x68,0x83336010},
+{0x6c,0x82004001},
+{0x70,0x9a0b400a},
+{0x74,0x81800000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0x39},
+{0x00,0x01000000},
+{0x04,0x82704009},
+{0x08,0x9a03400d},
+{0x0c,0x83286010},
+{0x10,0x81800000},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x9a734009},
+{0x24,0x8200400d},
+{0x28,0x10800011},
+{0x2c,0xc2230008},
+{0x30,0x83336010},
+{0x34,0x81800000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x82704009},
+{0x48,0x9a0b400a},
+{0x4c,0x83286010},
+{0x50,0x81800000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x9a734009},
+{0x64,0x8200400d},
+{0x68,0xc222000c},
+{0x6c,0xc20022f8},
+{0x70,0xda00247c},
+{0x74,0x8258400d},
+{0x78,0x9602e001},
+{0x7c,0x83306001},
+{0xf0,0x3a},
+{0x00,0x80a2c001},
+{0x04,0x0abfffcb},
+{0x08,0x98032004},
+{0x0c,0x81c3e008},
+{0x10,0x01000000},
+{0x14,0x98102000},
+{0x18,0x9b2b2002},
+{0x1c,0x98032001},
+{0x20,0xc202000d},
+{0x24,0x80a32089},
+{0x28,0x04bffffc},
+{0x2c,0xc222400d},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0xd6020000},
+{0x3c,0xd8024000},
+{0x40,0x9132e010},
+{0x44,0x95332010},
+{0x48,0x900a2fff},
+{0x4c,0x940aafff},
+{0x50,0x03000007},
+{0x54,0x9a22000a},
+{0x58,0x821063ff},
+{0x5c,0x940b0001},
+{0x60,0x900ac001},
+{0x64,0x9022000a},
+{0x68,0x9a5b400d},
+{0x6c,0x905a0008},
+{0x70,0x81c3e008},
+{0x74,0x90034008},
+{0x78,0x9de3bf98},
+{0x7c,0x832e6003},
+{0xf0,0x3b},
+{0x00,0x82204019},
+{0x04,0x82004001},
+{0x08,0x82004018},
+{0x0c,0x3b000018},
+{0x10,0x83286002},
+{0x14,0xba176270},
+{0x18,0x9a066001},
+{0x1c,0xde00401d},
+{0x20,0xb2067fff},
+{0x24,0xc2002478},
+{0x28,0x9823c001},
+{0x2c,0x80a6400d},
+{0x30,0xb4062001},
+{0x34,0x1480002a},
+{0x38,0x96102000},
+{0x3c,0x832e6003},
+{0x40,0xb8204019},
+{0x44,0x9410001d},
+{0x48,0xb006bffe},
+{0x4c,0xba07001c},
+{0x50,0xba074018},
+{0x54,0x833e601f},
+{0x58,0x82204019},
+{0x5c,0xbb2f6002},
+{0x60,0xb730601f},
+{0x64,0xba07400a},
+{0x68,0x80a62000},
+{0x6c,0x24800015},
+{0x70,0xb0062001},
+{0x74,0xc2002308},
+{0x78,0x80a04018},
+{0x7c,0x82603fff},
+{0xf0,0x3c},
+{0x00,0x8088401b},
+{0x04,0x2280000f},
+{0x08,0xb0062001},
+{0x0c,0xc2002300},
+{0x10,0x80a64001},
+{0x14,0x3880000b},
+{0x18,0xb0062001},
+{0x1c,0xc2074000},
+{0x20,0x80a0400f},
+{0x24,0x04800004},
+{0x28,0x80a0400c},
+{0x2c,0x1080000d},
+{0x30,0xb0102000},
+{0x34,0x24800002},
+{0x38,0x96102001},
+{0x3c,0xb0062001},
+{0x40,0x80a6001a},
+{0x44,0x04bfffe9},
+{0x48,0xba076004},
+{0x4c,0xb2066001},
+{0x50,0x80a6400d},
+{0x54,0x04bfffdd},
+{0x58,0xb8072007},
+{0x5c,0xb010000b},
+{0x60,0x81c7e008},
+{0x64,0x81e80000},
+{0x68,0xc2002548},
+{0x6c,0x82087fbf},
+{0x70,0xc2202548},
+{0x74,0xc0202540},
+{0x78,0xc0202514},
+{0x7c,0x9a102000},
+{0xf0,0x3d},
+{0x00,0x832b6002},
+{0x04,0x9a036001},
+{0x08,0xc0206708},
+{0x0c,0x80a36009},
+{0x10,0x04bffffc},
+{0x14,0xc02066e0},
+{0x18,0x81c3e008},
+{0x1c,0x01000000},
+{0x20,0x9de3bf88},
+{0x24,0x82063fff},
+{0x28,0xb8067fff},
+{0x2c,0x82160001},
+{0x30,0xba16401c},
+{0x34,0x80974001},
+{0x38,0xa610001a},
+{0x3c,0x0680006e},
+{0x40,0xa410001b},
+{0x44,0xc2002308},
+{0x48,0x80a60001},
+{0x4c,0x3880006b},
+{0x50,0xb0102000},
+{0x54,0xc2002300},
+{0x58,0x80a64001},
+{0x5c,0x38800067},
+{0x60,0xb0102000},
+{0x64,0x94062001},
+{0x68,0x96066001},
+{0x6c,0xa207bff8},
+{0x70,0x8207bfe8},
+{0x74,0xb0102003},
+{0x78,0xc0204000},
+{0x7c,0xb0863fff},
+{0xf0,0x3e},
+{0x00,0x1cbffffe},
+{0x04,0x82006004},
+{0x08,0x80a7000b},
+{0x0c,0x14800033},
+{0x10,0xb210001c},
+{0x14,0xba07001c},
+{0x18,0x8202c00b},
+{0x1c,0x8200400b},
+{0x20,0xba07401c},
+{0x24,0xba274001},
+{0x28,0x832f2003},
+{0x2c,0x9820401c},
+{0x30,0x03000018},
+{0x34,0xa0106270},
+{0x38,0x9a27400a},
+{0x3c,0xb002bffe},
+{0x40,0x8203000c},
+{0x44,0x82004018},
+{0x48,0x83286002},
+{0x4c,0xba06000d},
+{0x50,0xb4004010},
+{0x54,0xb6076008},
+{0x58,0x90102001},
+{0x5c,0x932a001b},
+{0x60,0x9e102000},
+{0x64,0xb92be002},
+{0x68,0xfa072520},
+{0x6c,0xba5f4012},
+{0x70,0x833f601f},
+{0x74,0x83306018},
+{0x78,0xba074001},
+{0x7c,0xc2068000},
+{0xf0,0x3f},
+{0x00,0x82204013},
+{0x04,0xbb3f6008},
+{0x08,0x9e03e001},
+{0x0c,0x80a0401d},
+{0x10,0x04800005},
+{0x14,0xb8070011},
+{0x18,0xc2073ff0},
+{0x1c,0x82104009},
+{0x20,0xc2273ff0},
+{0x24,0x80a3e003},
+{0x28,0x08bffff0},
+{0x2c,0xb92be002},
+{0x30,0xb0062001},
+{0x34,0xb606e001},
+{0x38,0x80a6000a},
+{0x3c,0x04bfffe8},
+{0x40,0xb406a004},
+{0x44,0xb2066001},
+{0x48,0x9a036003},
+{0x4c,0x80a6400b},
+{0x50,0x04bfffdb},
+{0x54,0x98032007},
+{0x58,0xc207bfe8},
+{0x5c,0x80886010},
+{0x60,0x0280000a},
+{0x64,0xfa07bfec},
+{0x68,0xc207bff4},
+{0x6c,0x80886082},
+{0x70,0x02800007},
+{0x74,0x808f6010},
+{0x78,0x80886028},
+{0x7c,0x1280001f},
+{0xf0,0x40},
+{0x00,0xb0102003},
+{0x04,0xfa07bfec},
+{0x08,0x808f6010},
+{0x0c,0x02800012},
+{0x10,0xc207bff0},
+{0x14,0x808f6082},
+{0x18,0x02800007},
+{0x1c,0x808f6028},
+{0x20,0xc207bff4},
+{0x24,0x80886028},
+{0x28,0x32800014},
+{0x2c,0xb0102002},
+{0x30,0x808f6028},
+{0x34,0x02800008},
+{0x38,0xc207bff0},
+{0x3c,0xc207bff4},
+{0x40,0x80886082},
+{0x44,0x02800004},
+{0x48,0xc207bff0},
+{0x4c,0x1080000b},
+{0x50,0xb0102002},
+{0x54,0x80886010},
+{0x58,0x02800008},
+{0x5c,0xb0102000},
+{0x60,0x80886082},
+{0x64,0x02800005},
+{0x68,0x80886028},
+{0x6c,0x12800003},
+{0x70,0xb0102001},
+{0x74,0xb0102000},
+{0x78,0x81c7e008},
+{0x7c,0x81e80000},
+{0xf0,0x41},
+{0x00,0x9de3bf98},
+{0x04,0xb12e2002},
+{0x08,0xf80626e0},
+{0x0c,0x9e0f2fff},
+{0x10,0xbb2be003},
+{0x14,0xba27400f},
+{0x18,0xb1372010},
+{0x1c,0xb00e2fff},
+{0x20,0xba07401d},
+{0x24,0xba074018},
+{0x28,0x03000018},
+{0x2c,0x82106270},
+{0x30,0xbb2f6002},
+{0x34,0xfa074001},
+{0x38,0xc20821e4},
+{0x3c,0xba5f4001},
+{0x40,0x833f601f},
+{0x44,0x83306019},
+{0x48,0xba074001},
+{0x4c,0xbb3f6007},
+{0x50,0xb937200c},
+{0x54,0xc20821e5},
+{0x58,0xa0100019},
+{0x5c,0x9410001a},
+{0x60,0xa8074001},
+{0x64,0x808f2001},
+{0x68,0xb006001a},
+{0x6c,0x0280000c},
+{0x70,0x9e03c019},
+{0x74,0xc20023c8},
+{0x78,0x80886200},
+{0x7c,0x32800002},
+{0xf0,0x42},
+{0x00,0xb006001a},
+{0x04,0xc200237c},
+{0x08,0x80a06000},
+{0x0c,0x2280005e},
+{0x10,0x9e03e001},
+{0x14,0x1080005c},
+{0x18,0xb0062001},
+{0x1c,0xc20023c8},
+{0x20,0x83306014},
+{0x24,0x82086001},
+{0x28,0x80a00001},
+{0x2c,0xa2603fff},
+{0x30,0x9e03c010},
+{0x34,0x8333e01f},
+{0x38,0x80944001},
+{0x3c,0x12800052},
+{0x40,0xb006000a},
+{0x44,0x80a62000},
+{0x48,0x06800050},
+{0x4c,0x80a2a000},
+{0x50,0xc2002300},
+{0x54,0x82006001},
+{0x58,0x80a3c001},
+{0x5c,0x1880004b},
+{0x60,0x80a2a000},
+{0x64,0xc2002308},
+{0x68,0x82006001},
+{0x6c,0x80a60001},
+{0x70,0x18800045},
+{0x74,0xa4102000},
+{0x78,0x27000018},
+{0x7c,0x96103fff},
+{0xf0,0x43},
+{0x00,0xaa14e270},
+{0x04,0x9214e270},
+{0x08,0x80a2a000},
+{0x0c,0x9a03c00b},
+{0x10,0x12800004},
+{0x14,0x98100018},
+{0x18,0x9806000b},
+{0x1c,0x9a10000f},
+{0x20,0xba234010},
+{0x24,0x832f6003},
+{0x28,0x8220401d},
+{0x2c,0xba23000a},
+{0x30,0x82004001},
+{0x34,0x8200401d},
+{0x38,0x83286002},
+{0x3c,0xfa004009},
+{0x40,0xc20821e6},
+{0x44,0xba5f4001},
+{0x48,0xb803400b},
+{0x4c,0x833f601f},
+{0x50,0x912b6003},
+{0x54,0xb222000d},
+{0x58,0x83306019},
+{0x5c,0xb52f2003},
+{0x60,0xb6064019},
+{0x64,0xba074001},
+{0x68,0xb426801c},
+{0x6c,0xbb3f6007},
+{0x70,0xb606c00c},
+{0x74,0xf80821e7},
+{0x78,0xb807401c},
+{0x7c,0xb72ee002},
+{0xf0,0x44},
+{0x00,0xfa06c009},
+{0x04,0xb32e6003},
+{0x08,0x8203000b},
+{0x0c,0x83286002},
+{0x10,0xb2064009},
+{0x14,0x80a7401c},
+{0x18,0xba064001},
+{0x1c,0xb52ea003},
+{0x20,0x14800019},
+{0x24,0x832b2002},
+{0x28,0x80a2a000},
+{0x2c,0x22800005},
+{0x30,0x8222000d},
+{0x34,0xb2068009},
+{0x38,0xba064001},
+{0x3c,0x8222000d},
+{0x40,0x82004001},
+{0x44,0x8200400c},
+{0x48,0xb3286002},
+{0x4c,0xc2074000},
+{0x50,0x80a0401c},
+{0x54,0x1480000c},
+{0x58,0x9602e001},
+{0x5c,0xc2064015},
+{0x60,0x80a04014},
+{0x64,0x36800002},
+{0x68,0xa4102001},
+{0x6c,0x80a2e001},
+{0x70,0x04bfffc6},
+{0x74,0x9214e270},
+{0x78,0x80a4a000},
+{0x7c,0x32bfffae},
+{0xf0,0x45},
+{0x00,0x9e03c010},
+{0x04,0x80a2a000},
+{0x08,0x12800003},
+{0x0c,0xb026000a},
+{0x10,0xb023c010},
+{0x14,0x81c7e008},
+{0x18,0x81e80000},
+{0x1c,0x94102000},
+{0x20,0xc2002514},
+{0x24,0x80a28001},
+{0x28,0x96102000},
+{0x2c,0x1a80000e},
+{0x30,0x9b2ae002},
+{0x34,0xc20366e0},
+{0x38,0x9602e001},
+{0x3c,0x80a06000},
+{0x40,0x02800006},
+{0x44,0x992aa002},
+{0x48,0xc22326e0},
+{0x4c,0xc2036708},
+{0x50,0x9402a001},
+{0x54,0xc2232708},
+{0x58,0xc2002514},
+{0x5c,0x10bffff4},
+{0x60,0x80a2c001},
+{0x64,0x81c3e008},
+{0x68,0xd4202514},
+{0x6c,0xd4020000},
+{0x70,0x03000017},
+{0x74,0x9802800a},
+{0x78,0x82106220},
+{0x7c,0xda130001},
+{0xf0,0x46},
+{0x00,0xc2002590},
+{0x04,0xc250400c},
+{0x08,0x96a0400d},
+{0x0c,0x02800016},
+{0x10,0x03000017},
+{0x14,0x80a2e000},
+{0x18,0x04800009},
+{0x1c,0x82102001},
+{0x20,0xda022004},
+{0x24,0x8328400d},
+{0x28,0x80a2c001},
+{0x2c,0x3480000d},
+{0x30,0x973ac00d},
+{0x34,0x1080000b},
+{0x38,0x96102001},
+{0x3c,0x1680000a},
+{0x40,0x03000017},
+{0x44,0xda022008},
+{0x48,0x82103fff},
+{0x4c,0x8328400d},
+{0x50,0x80a2c001},
+{0x54,0x36800003},
+{0x58,0x96103fff},
+{0x5c,0x973ac00d},
+{0x60,0x03000017},
+{0x64,0x92106220},
+{0x68,0x8202800a},
+{0x6c,0xc2104009},
+{0x70,0x9602c001},
+{0x74,0x808aa001},
+{0x78,0x0280000f},
+{0x7c,0x9b3aa01f},
+{0xf0,0x47},
+{0x00,0x9b33601f},
+{0x04,0x9a02800d},
+{0x08,0x9b3b6001},
+{0x0c,0x9b2b6002},
+{0x10,0xd8034009},
+{0x14,0x033fffc0},
+{0x18,0x980b0001},
+{0x1c,0x0300003f},
+{0x20,0x821063ff},
+{0x24,0x820ac001},
+{0x28,0x98030001},
+{0x2c,0x1080000d},
+{0x30,0xd8234009},
+{0x34,0x9b33601f},
+{0x38,0x9a02800d},
+{0x3c,0x9b3b6001},
+{0x40,0x9b2b6002},
+{0x44,0x0300003f},
+{0x48,0xd8034009},
+{0x4c,0x821063ff},
+{0x50,0x980b0001},
+{0x54,0x832ae010},
+{0x58,0x8200400c},
+{0x5c,0xc2234009},
+{0x60,0xc2020000},
+{0x64,0xda00247c},
+{0x68,0x8200400d},
+{0x6c,0x81c3e008},
+{0x70,0xc2220000},
+{0x74,0x9de3bf98},
+{0x78,0x833e201f},
+{0x7c,0xd0002320},
+{0xf0,0x48},
+{0x00,0x82204018},
+{0x04,0x80a22000},
+{0x08,0x02800016},
+{0x0c,0x9b30601f},
+{0x10,0x033fc000},
+{0x14,0xa0106020},
+{0x18,0xc200231c},
+{0x1c,0x80a00001},
+{0x20,0x82402000},
+{0x24,0x8088400d},
+{0x28,0xda002318},
+{0x2c,0x821e000d},
+{0x30,0x02800009},
+{0x34,0xb0086001},
+{0x38,0x80a0000d},
+{0x3c,0x82603fff},
+{0x40,0x7ffffa55},
+{0x44,0xc2240000},
+{0x48,0xc2002318},
+{0x4c,0x10800005},
+{0x50,0xc2240000},
+{0x54,0x033fc000},
+{0x58,0x82106020},
+{0x5c,0xf0204000},
+{0x60,0x81c7e008},
+{0x64,0x81e80000},
+{0x68,0x9de3bf98},
+{0x6c,0x7ffffa53},
+{0x70,0x01000000},
+{0x74,0x033fc040},
+{0x78,0xe0002500},
+{0x7c,0x8210600c},
+{0xf0,0x49},
+{0x00,0x80a42026},
+{0x04,0x0880001e},
+{0x08,0xc0204000},
+{0x0c,0x19169683},
+{0x10,0x9a132300},
+{0x14,0xc2002f00},
+{0x18,0x80a0400d},
+{0x1c,0x3280005b},
+{0x20,0xc2002500},
+{0x24,0x9a1323fc},
+{0x28,0xc2002ffc},
+{0x2c,0x80a0400d},
+{0x30,0x32800056},
+{0x34,0xc2002500},
+{0x38,0xc0202584},
+{0x3c,0xa2102000},
+{0x40,0x832c6002},
+{0x44,0xc2006f04},
+{0x48,0x80a06000},
+{0x4c,0x0280004e},
+{0x50,0xa2046001},
+{0x54,0x9fc04000},
+{0x58,0x01000000},
+{0x5c,0xc2002584},
+{0x60,0x80a06000},
+{0x64,0x12800048},
+{0x68,0x80a4603b},
+{0x6c,0x24bffff6},
+{0x70,0x832c6002},
+{0x74,0x10800045},
+{0x78,0xc2002500},
+{0x7c,0x80a42000},
+{0xf0,0x4a},
+{0x00,0x1280000c},
+{0x04,0x80a42014},
+{0x08,0x7ffffc53},
+{0x0c,0x90102000},
+{0x10,0x1b3fc200},
+{0x14,0xc2002330},
+{0x18,0x9a136074},
+{0x1c,0xc2234000},
+{0x20,0x7ffffc3c},
+{0x24,0x90102001},
+{0x28,0x10800035},
+{0x2c,0xc2002fcc},
+{0x30,0x1880000c},
+{0x34,0x80a42015},
+{0x38,0x808c2001},
+{0x3c,0x32800033},
+{0x40,0xc2002500},
+{0x44,0x90043ffe},
+{0x48,0x7ffffbd5},
+{0x4c,0x91322001},
+{0x50,0x7ffffb5f},
+{0x54,0x01000000},
+{0x58,0x1080002c},
+{0x5c,0xc2002500},
+{0x60,0x18800013},
+{0x64,0x80a42016},
+{0x68,0x11000017},
+{0x6c,0x7ffffd9f},
+{0x70,0x90122220},
+{0x74,0x033fc180},
+{0x78,0xda0025b0},
+{0x7c,0x82106038},
+{0xf0,0x4b},
+{0x00,0xda204000},
+{0x04,0x033fc200},
+{0x08,0x82106074},
+{0x0c,0xda00232c},
+{0x10,0xda204000},
+{0x14,0x7ffffc1f},
+{0x18,0x90102000},
+{0x1c,0xc200266c},
+{0x20,0xc2202510},
+{0x24,0x10800016},
+{0x28,0xc2002fcc},
+{0x2c,0x28800017},
+{0x30,0xc2002500},
+{0x34,0x80a42026},
+{0x38,0x38800014},
+{0x3c,0xc2002500},
+{0x40,0x7ffffb25},
+{0x44,0x23000017},
+{0x48,0x92146220},
+{0x4c,0x7ffffd69},
+{0x50,0x94043fea},
+{0x54,0x80a42026},
+{0x58,0x3280000c},
+{0x5c,0xc2002500},
+{0x60,0x90146220},
+{0x64,0x7ffffd89},
+{0x68,0x92102008},
+{0x6c,0xc2002fd8},
+{0x70,0x80a06000},
+{0x74,0x22800005},
+{0x78,0xc2002500},
+{0x7c,0x9fc04000},
+{0xf0,0x4c},
+{0x00,0x01000000},
+{0x04,0xc2002500},
+{0x08,0x80a40001},
+{0x0c,0x1280000b},
+{0x10,0x031fffff},
+{0x14,0x821063f0},
+{0x18,0x80a40001},
+{0x1c,0x38800003},
+{0x20,0x21040000},
+{0x24,0xa0042001},
+{0x28,0x033fc180},
+{0x2c,0x82106034},
+{0x30,0xe0204000},
+{0x34,0xe0202500},
+{0x38,0x81c7e008},
+{0x3c,0x81e80000},
+{0x40,0x81c3e008},
+{0x44,0x01000000},
+{0x48,0x03169696},
+{0x4c,0xda002180},
+{0x50,0x8210625a},
+{0x54,0x80a34001},
+{0x58,0x94102000},
+{0x5c,0x12800006},
+{0x60,0x96102000},
+{0x64,0x033fc180},
+{0x68,0x82106030},
+{0x6c,0x10800020},
+{0x70,0xda204000},
+{0x74,0xc202c000},
+{0x78,0x9602e004},
+{0x7c,0x80a2e4ff},
+{0xf0,0x4d},
+{0x00,0x08bffffd},
+{0x04,0x94028001},
+{0x08,0x96102d00},
+{0x0c,0xd2002ff8},
+{0x10,0x03000019},
+{0x14,0x80a2c009},
+{0x18,0x1a80000b},
+{0x1c,0x901063ff},
+{0x20,0xd802c000},
+{0x24,0x9602e004},
+{0x28,0x80a2c009},
+{0x2c,0x9a402000},
+{0x30,0x80a2000b},
+{0x34,0x82603fff},
+{0x38,0x808b4001},
+{0x3c,0x12bffff9},
+{0x40,0x9402800c},
+{0x44,0x03169696},
+{0x48,0x8210625a},
+{0x4c,0x80a28001},
+{0x50,0x033fc180},
+{0x54,0x82106030},
+{0x58,0x02800005},
+{0x5c,0xd4204000},
+{0x60,0x03000008},
+{0x64,0x81c063f4},
+{0x68,0x90102001},
+{0x6c,0x01000000},
+{0x70,0x81c3e008},
+{0x74,0x01000000},
+{0x78,0x9de3bf98},
+{0x7c,0x9e100018},
+{0xf0,0x4e},
+{0x00,0x03000018},
+{0x04,0xb0100019},
+{0x08,0xba106270},
+{0x0c,0xb6102000},
+{0x10,0x832ee002},
+{0x14,0xb606e001},
+{0x18,0x80a6e15d},
+{0x1c,0x08bffffd},
+{0x20,0xc020401d},
+{0x24,0xb6102000},
+{0x28,0xc20022fc},
+{0x2c,0x80a6c001},
+{0x30,0x1a80001c},
+{0x34,0x03000018},
+{0x38,0xb21062ac},
+{0x3c,0xb4102000},
+{0x40,0xc20022f8},
+{0x44,0x80a68001},
+{0x48,0x1a800011},
+{0x4c,0x832ee002},
+{0x50,0xb8004019},
+{0x54,0xc200247c},
+{0x58,0xfa0ee380},
+{0x5c,0x825e8001},
+{0x60,0x8200401d},
+{0x64,0x82004001},
+{0x68,0xfa160001},
+{0x6c,0xc213c001},
+{0x70,0x8220401d},
+{0x74,0xc2270000},
+{0x78,0xb406a001},
+{0x7c,0xc20022f8},
+{0xf0,0x4f},
+{0x00,0x80a68001},
+{0x04,0x0abffff4},
+{0x08,0xb8072038},
+{0x0c,0xb606e001},
+{0x10,0xc20022fc},
+{0x14,0x80a6c001},
+{0x18,0x0abfffea},
+{0x1c,0xb4102000},
+{0x20,0x81c7e008},
+{0x24,0x81e80000},
+{0x28,0x9de3bf98},
+{0x2c,0x11000017},
+{0x30,0xc2002fe4},
+{0x34,0x9fc04000},
+{0x38,0x90122220},
+{0x3c,0xc200254c},
+{0x40,0x11000018},
+{0x44,0xda00259c},
+{0x48,0x90122048},
+{0x4c,0x98087ffd},
+{0x50,0x80886002},
+{0x54,0x0280002c},
+{0x58,0xda202550},
+{0x5c,0xc2002664},
+{0x60,0x9a004001},
+{0x64,0x9a034001},
+{0x68,0xc200259c},
+{0x6c,0xb2006228},
+{0x70,0x9a03400d},
+{0x74,0x82102061},
+{0x78,0x8220400d},
+{0x7c,0x9b2e6007},
+{0xf0,0x50},
+{0x00,0x973b601f},
+{0x04,0x8182e000},
+{0x08,0x01000000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0xb27b4001},
+{0x18,0xd820254c},
+{0x1c,0xc2002fe4},
+{0x20,0x9fc04000},
+{0x24,0x01000000},
+{0x28,0x11000015},
+{0x2c,0x901223a8},
+{0x30,0xe000259c},
+{0x34,0xc2002fe4},
+{0x38,0x9fc04000},
+{0x3c,0x01000000},
+{0x40,0x80a64010},
+{0x44,0x9a603fff},
+{0x48,0xc200259c},
+{0x4c,0x80a64001},
+{0x50,0x11000019},
+{0x54,0x82603fff},
+{0x58,0x80934001},
+{0x5c,0x02800009},
+{0x60,0x90122030},
+{0x64,0x7ffffa87},
+{0x68,0x01000000},
+{0x6c,0x7ffffa98},
+{0x70,0x01000000},
+{0x74,0x82102015},
+{0x78,0x10800011},
+{0x7c,0xc2202500},
+{0xf0,0x51},
+{0x00,0xc020250c},
+{0x04,0x31000017},
+{0x08,0x33000015},
+{0x0c,0xc200250c},
+{0x10,0xb0162220},
+{0x14,0x80a06000},
+{0x18,0x12800009},
+{0x1c,0xb21663a8},
+{0x20,0x031696a9},
+{0x24,0x821061a5},
+{0x28,0xc220250c},
+{0x2c,0xc0202668},
+{0x30,0xc0202664},
+{0x34,0x7ffffd18},
+{0x38,0x81e80000},
+{0x3c,0x01000000},
+{0x40,0x81c7e008},
+{0x44,0x81e80000},
+{0x48,0x9de3bf38},
+{0x4c,0x94100018},
+{0x50,0x9a102000},
+{0x54,0x96102000},
+{0x58,0x98102000},
+{0x5c,0x9e102000},
+{0x60,0x8203000f},
+{0x64,0xf6086441},
+{0x68,0x80a6e000},
+{0x6c,0x02800021},
+{0x70,0xf4086440},
+{0x74,0xf40ea37f},
+{0x78,0xf60ee37f},
+{0x7c,0xb2102000},
+{0xf0,0x52},
+{0x00,0xb007bff8},
+{0x04,0xc200247c},
+{0x08,0x82584019},
+{0x0c,0xba06c001},
+{0x10,0x82068001},
+{0x14,0x82004001},
+{0x18,0xf8528001},
+{0x1c,0xba07401d},
+{0x20,0xc252801d},
+{0x24,0xb8270001},
+{0x28,0x80a66000},
+{0x2c,0x02800007},
+{0x30,0xf8263fa0},
+{0x34,0xc2063f9c},
+{0x38,0x82a70001},
+{0x3c,0x2c800003},
+{0x40,0x9a234001},
+{0x44,0x9a034001},
+{0x48,0xc2002300},
+{0x4c,0xb2066001},
+{0x50,0x82007fff},
+{0x54,0x80a64001},
+{0x58,0x08bfffeb},
+{0x5c,0xb0062004},
+{0x60,0x9e03e001},
+{0x64,0x80a3e00a},
+{0x68,0x04bfffdf},
+{0x6c,0x8203000f},
+{0x70,0x9602e001},
+{0x74,0x80a2e001},
+{0x78,0x04bfffd9},
+{0x7c,0x9803200c},
+{0xf0,0x53},
+{0x00,0xda20259c},
+{0x04,0x81c7e008},
+{0x08,0x81e80000},
+{0x0c,0x9de3bf98},
+{0x10,0xc20021cc},
+{0x14,0x80a06000},
+{0x18,0x22800025},
+{0x1c,0xc2002568},
+{0x20,0x832e6003},
+{0x24,0x82204019},
+{0x28,0x82004001},
+{0x2c,0x82004018},
+{0x30,0x9f286002},
+{0x34,0xb92e2010},
+{0x38,0x3b003fc0},
+{0x3c,0x03000018},
+{0x40,0x9a1760ff},
+{0x44,0xb8070019},
+{0x48,0x98106270},
+{0x4c,0xb4102007},
+{0x50,0xbb2ea002},
+{0x54,0xc20761b0},
+{0x58,0x80a06000},
+{0x5c,0x02800030},
+{0x60,0xb608400d},
+{0x64,0x80a6c01c},
+{0x68,0x3280000e},
+{0x6c,0xb486bfff},
+{0x70,0xfa0f61b0},
+{0x74,0x80a76000},
+{0x78,0x2280000d},
+{0x7c,0xc2002568},
+{0xf0,0x54},
+{0x00,0xc203c00c},
+{0x04,0x8258401d},
+{0x08,0xbb38601f},
+{0x0c,0xbb376019},
+{0x10,0x8200401d},
+{0x14,0x83386007},
+{0x18,0x10800004},
+{0x1c,0xc223c00c},
+{0x20,0x1cbfffed},
+{0x24,0xbb2ea002},
+{0x28,0xc2002568},
+{0x2c,0x80a06000},
+{0x30,0x12800033},
+{0x34,0xb72e6003},
+{0x38,0x8226c019},
+{0x3c,0x82004001},
+{0x40,0x82004018},
+{0x44,0x3b000018},
+{0x48,0x83286002},
+{0x4c,0xba176270},
+{0x50,0xf800401d},
+{0x54,0xc200251c},
+{0x58,0x80a70001},
+{0x5c,0x04800028},
+{0x60,0x01000000},
+{0x64,0xfa002540},
+{0x68,0x80a76000},
+{0x6c,0x02800015},
+{0x70,0x832e2010},
+{0x74,0xc20023c8},
+{0x78,0x80886100},
+{0x7c,0x02800011},
+{0xf0,0x55},
+{0x00,0x832e2010},
+{0x04,0x80a7001d},
+{0x08,0x0880001d},
+{0x0c,0x82004019},
+{0x10,0x82207000},
+{0x14,0x10800012},
+{0x18,0xc22026e0},
+{0x1c,0x832e6003},
+{0x20,0x82204019},
+{0x24,0x82004001},
+{0x28,0x82004018},
+{0x2c,0x3b000018},
+{0x30,0x83286002},
+{0x34,0xba176270},
+{0x38,0x10bfffdc},
+{0x3c,0xc020401d},
+{0x40,0xfa002514},
+{0x44,0x82004019},
+{0x48,0xb92f6002},
+{0x4c,0x82207000},
+{0x50,0xc22726e0},
+{0x54,0xba076001},
+{0x58,0xfa202514},
+{0x5c,0x8226c019},
+{0x60,0x82004001},
+{0x64,0x82004018},
+{0x68,0x3b000018},
+{0x6c,0x83286002},
+{0x70,0xba176270},
+{0x74,0xc200401d},
+{0x78,0xc2202540},
+{0x7c,0x81c7e008},
+{0xf0,0x56},
+{0x00,0x81e80000},
+{0x04,0x9de3bf98},
+{0x08,0xc2002304},
+{0x0c,0x80a06000},
+{0x10,0x02800022},
+{0x14,0x01000000},
+{0x18,0xf80021d8},
+{0x1c,0x80a72000},
+{0x20,0x0280001e},
+{0x24,0x832e6003},
+{0x28,0x82204019},
+{0x2c,0x82004001},
+{0x30,0x82004018},
+{0x34,0xb1286002},
+{0x38,0x3b000018},
+{0x3c,0xc2002300},
+{0x40,0xb61762dc},
+{0x44,0xb41762e0},
+{0x48,0x9e1762e4},
+{0x4c,0x80a64001},
+{0x50,0x12800012},
+{0x54,0x9a176270},
+{0x58,0xc206001a},
+{0x5c,0xfa06001b},
+{0x60,0xba074001},
+{0x64,0xc206000f},
+{0x68,0xba074001},
+{0x6c,0xba5f401c},
+{0x70,0x833f601f},
+{0x74,0x83306019},
+{0x78,0xba074001},
+{0x7c,0xc206000d},
+{0xf0,0x57},
+{0x00,0xbb3f6007},
+{0x04,0x80a0401d},
+{0x08,0x16800004},
+{0x0c,0x82102001},
+{0x10,0xc220259c},
+{0x14,0x30800002},
+{0x18,0xc020259c},
+{0x1c,0x81c7e008},
+{0x20,0x81e80000},
+{0x24,0x9de3bf58},
+{0x28,0xc208224d},
+{0x2c,0x80a06000},
+{0x30,0x12800004},
+{0x34,0x90067ffe},
+{0x38,0xc020259c},
+{0x3c,0x3080006a},
+{0x40,0xac066002},
+{0x44,0x80a20016},
+{0x48,0x14800044},
+{0x4c,0x9e102000},
+{0x50,0x832a2003},
+{0x54,0xa0204008},
+{0x58,0xa8062002},
+{0x5c,0x92063ffe},
+{0x60,0x80a24014},
+{0x64,0x14800039},
+{0x68,0x82064019},
+{0x6c,0x82204008},
+{0x70,0x97286003},
+{0x74,0x9622c001},
+{0x78,0x9a040010},
+{0x7c,0x9a034009},
+{0xf0,0x58},
+{0x00,0x993a201f},
+{0x04,0x952be002},
+{0x08,0x03000018},
+{0x0c,0x98230008},
+{0x10,0xae106270},
+{0x14,0x9b2b6002},
+{0x18,0x9402801e},
+{0x1c,0xa602c00b},
+{0x20,0xab33201f},
+{0x24,0x9a034017},
+{0x28,0x9402bfb8},
+{0x2c,0xa4063fff},
+{0x30,0xa2062001},
+{0x34,0x96067fff},
+{0x38,0x82060018},
+{0x3c,0x82204009},
+{0x40,0x8204c001},
+{0x44,0x80a24012},
+{0x48,0x0680000b},
+{0x4c,0x99286002},
+{0x50,0x80a24011},
+{0x54,0x14800009},
+{0x58,0x80a26000},
+{0x5c,0x80a2000b},
+{0x60,0x06800005},
+{0x64,0x82066001},
+{0x68,0x80a20001},
+{0x6c,0x24800014},
+{0x70,0x92026001},
+{0x74,0x80a26000},
+{0x78,0x2480000d},
+{0x7c,0xc2030017},
+{0xf0,0x59},
+{0x00,0xc2002308},
+{0x04,0x80a04009},
+{0x08,0x82603fff},
+{0x0c,0x80884015},
+{0x10,0x22800007},
+{0x14,0xc2030017},
+{0x18,0xc2002300},
+{0x1c,0x80a20001},
+{0x20,0x38800003},
+{0x24,0xc2030017},
+{0x28,0xc2034000},
+{0x2c,0xc2228000},
+{0x30,0x9e03e001},
+{0x34,0x9402a004},
+{0x38,0x92026001},
+{0x3c,0x80a24014},
+{0x40,0x04bfffde},
+{0x44,0x9a036004},
+{0x48,0x90022001},
+{0x4c,0x80a20016},
+{0x50,0x04bfffc3},
+{0x54,0xa0042007},
+{0x58,0x9007bfb8},
+{0x5c,0x7ffff83e},
+{0x60,0x92102010},
+{0x64,0xd608224f},
+{0x68,0xb00ae0ff},
+{0x6c,0xd808224d},
+{0x70,0x80a6000c},
+{0x74,0x1480000b},
+{0x78,0x9e102000},
+{0x7c,0x832e2002},
+{0xf0,0x5a},
+{0x00,0x8200401e},
+{0x04,0x9a007fb8},
+{0x08,0xc2034000},
+{0x0c,0xb0062001},
+{0x10,0x9e03c001},
+{0x14,0x80a6000c},
+{0x18,0x04bffffc},
+{0x1c,0x9a036004},
+{0x20,0x820ae0ff},
+{0x24,0xda08224d},
+{0x28,0x9a234001},
+{0x2c,0xc208224c},
+{0x30,0x9a036001},
+{0x34,0x825bc001},
+{0x38,0x9938601f},
+{0x3c,0x81832000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0x8278400d},
+{0x50,0x9b38601f},
+{0x54,0x9b336019},
+{0x58,0x8200400d},
+{0x5c,0x83386007},
+{0x60,0xc220259c},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x9de3bf98},
+{0x70,0xc2002588},
+{0x74,0x80a06000},
+{0x78,0x02800014},
+{0x7c,0x11000018},
+{0xf0,0x5b},
+{0x00,0xc2002594},
+{0x04,0x80a06000},
+{0x08,0x12800004},
+{0x0c,0x90122048},
+{0x10,0x7ffffb96},
+{0x14,0x01000000},
+{0x18,0xc2002588},
+{0x1c,0xda002594},
+{0x20,0x82007fff},
+{0x24,0x9a036001},
+{0x28,0xc2202588},
+{0x2c,0x7ffff92a},
+{0x30,0xda202594},
+{0x34,0x33000018},
+{0x38,0xb2166048},
+{0x3c,0xf4002594},
+{0x40,0x7ffffb6c},
+{0x44,0x91e80008},
+{0x48,0x01000000},
+{0x4c,0x81c7e008},
+{0x50,0x81e80000},
+{0x54,0xc2002460},
+{0x58,0x80a06000},
+{0x5c,0x12800018},
+{0x60,0xda002298},
+{0x64,0xc2002588},
+{0x68,0x80a06001},
+{0x6c,0x12800015},
+{0x70,0x033fc200},
+{0x74,0xc2002208},
+{0x78,0x80a06000},
+{0x7c,0x22800007},
+{0xf0,0x5c},
+{0x00,0xc2102548},
+{0x04,0xc2002558},
+{0x08,0x80a06000},
+{0x0c,0x22800007},
+{0x10,0xc0202598},
+{0x14,0xc2102548},
+{0x18,0x80886001},
+{0x1c,0x22800005},
+{0x20,0xc2002598},
+{0x24,0xc0202598},
+{0x28,0x10800005},
+{0x2c,0xda002234},
+{0x30,0x80a06000},
+{0x34,0x22800002},
+{0x38,0xda00233c},
+{0x3c,0x033fc200},
+{0x40,0x82106070},
+{0x44,0x81c3e008},
+{0x48,0xda204000},
+{0x4c,0x9de3bf98},
+{0x50,0xc2002588},
+{0x54,0x80a06000},
+{0x58,0x0280000f},
+{0x5c,0x11000018},
+{0x60,0xc2102548},
+{0x64,0x80886001},
+{0x68,0x22800010},
+{0x6c,0xc200258c},
+{0x70,0xc2002558},
+{0x74,0x80a06000},
+{0x78,0x3280000c},
+{0x7c,0xc200258c},
+{0xf0,0x5d},
+{0x00,0xc2002594},
+{0x04,0x80a06001},
+{0x08,0x32800008},
+{0x0c,0xc200258c},
+{0x10,0x11000018},
+{0x14,0x90122048},
+{0x18,0xd0202590},
+{0x1c,0xc0202588},
+{0x20,0x10800014},
+{0x24,0xd2002594},
+{0x28,0x80a06000},
+{0x2c,0x1280000f},
+{0x30,0x82102001},
+{0x34,0xd2002598},
+{0x38,0xc2002554},
+{0x3c,0x80a24001},
+{0x40,0x1a800007},
+{0x44,0x11000015},
+{0x48,0xc220258c},
+{0x4c,0x82102001},
+{0x50,0xc2202584},
+{0x54,0x10800028},
+{0x58,0xc0202598},
+{0x5c,0x90122180},
+{0x60,0x10800004},
+{0x64,0xd0202590},
+{0x68,0x10800023},
+{0x6c,0xc2202584},
+{0x70,0x7ffffb46},
+{0x74,0x01000000},
+{0x78,0x13000017},
+{0x7c,0xc2002fd0},
+{0xf0,0x5e},
+{0x00,0x92126220},
+{0x04,0x9fc04000},
+{0x08,0xd0002590},
+{0x0c,0xc20026a0},
+{0x10,0x82087dff},
+{0x14,0xda08254e},
+{0x18,0x80a36000},
+{0x1c,0x12800006},
+{0x20,0xc22026a0},
+{0x24,0xc200218c},
+{0x28,0x80a06000},
+{0x2c,0x32800004},
+{0x30,0xc220256c},
+{0x34,0x82102080},
+{0x38,0xc220256c},
+{0x3c,0x033fc200},
+{0x40,0x82106030},
+{0x44,0xda004000},
+{0x48,0xc2002670},
+{0x4c,0x80a34001},
+{0x50,0x32800007},
+{0x54,0xc2002548},
+{0x58,0xc2002200},
+{0x5c,0x80a06000},
+{0x60,0x02800005},
+{0x64,0x01000000},
+{0x68,0xc2002548},
+{0x6c,0x82106001},
+{0x70,0xc2202548},
+{0x74,0x81c7e008},
+{0x78,0x81e80000},
+{0x7c,0x1500003f},
+{0xf0,0x5f},
+{0x00,0xd8002508},
+{0x04,0x8212a300},
+{0x08,0x9a0b0001},
+{0x0c,0x808b3f00},
+{0x10,0x02800015},
+{0x14,0x901020a5},
+{0x18,0xc200254c},
+{0x1c,0x8210400d},
+{0x20,0xc220254c},
+{0x24,0x1b3fc000},
+{0x28,0xc2002500},
+{0x2c,0x960b000d},
+{0x30,0x80a06026},
+{0x34,0xc0202508},
+{0x38,0x0880000b},
+{0x3c,0x033fffc0},
+{0x40,0x9a0b0001},
+{0x44,0x03168000},
+{0x48,0x80a2c001},
+{0x4c,0x12800006},
+{0x50,0x9412a3ff},
+{0x54,0xc2002548},
+{0x58,0x8208400a},
+{0x5c,0x8210400d},
+{0x60,0xc2202548},
+{0x64,0x03000006},
+{0x68,0x81c06308},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0xda00247c},
+{0x78,0xc20022f8},
+{0x7c,0x8258400d},
+{0xf0,0x60},
+{0x00,0x83306001},
+{0x04,0x9a102000},
+{0x08,0x80a34001},
+{0x0c,0x1a800015},
+{0x10,0x031fffdf},
+{0x14,0x961063ff},
+{0x18,0x98036001},
+{0x1c,0x80a26008},
+{0x20,0x04800006},
+{0x24,0x9b2b6002},
+{0x28,0xc202000d},
+{0x2c,0x83306001},
+{0x30,0x10800003},
+{0x34,0x8208400b},
+{0x38,0xc202000d},
+{0x3c,0x82584009},
+{0x40,0xc222000d},
+{0x44,0xda00247c},
+{0x48,0xc20022f8},
+{0x4c,0x8258400d},
+{0x50,0x83306001},
+{0x54,0x80a30001},
+{0x58,0x0abffff0},
+{0x5c,0x9a10000c},
+{0x60,0x81c3e008},
+{0x64,0x01000000},
+{0x68,0x9de3bf98},
+{0x6c,0xe6002460},
+{0x70,0x80a4e000},
+{0x74,0x02800070},
+{0x78,0x01000000},
+{0x7c,0xc2002594},
+{0xf0,0x61},
+{0x00,0xee002588},
+{0x04,0x9805c001},
+{0x08,0xc2002554},
+{0x0c,0x80a30001},
+{0x10,0x12800069},
+{0x14,0x01000000},
+{0x18,0xda002598},
+{0x1c,0xc200258c},
+{0x20,0x8200400d},
+{0x24,0x80a0400c},
+{0x28,0x02800004},
+{0x2c,0x80a36000},
+{0x30,0x12800061},
+{0x34,0x01000000},
+{0x38,0x96102001},
+{0x3c,0xe20022fc},
+{0x40,0x80a2c011},
+{0x44,0x1880002d},
+{0x48,0x9e102000},
+{0x4c,0xe40022f8},
+{0x50,0x13000018},
+{0x54,0x94102001},
+{0x58,0x80a28012},
+{0x5c,0x18800020},
+{0x60,0xa0102000},
+{0x64,0x832ae002},
+{0x68,0x98006038},
+{0x6c,0xac126270},
+{0x70,0xaa126238},
+{0x74,0xa81262a8},
+{0x78,0xd00022f8},
+{0x7c,0xda030016},
+{0xf0,0x62},
+{0x00,0x80a34013},
+{0x04,0x26800013},
+{0x08,0x9402a001},
+{0x0c,0x80a2a001},
+{0x10,0x22800007},
+{0x14,0xc20022f8},
+{0x18,0xc2030015},
+{0x1c,0x80a34001},
+{0x20,0x2480000c},
+{0x24,0x9402a001},
+{0x28,0xc20022f8},
+{0x2c,0x80a28001},
+{0x30,0x22800007},
+{0x34,0xa0042001},
+{0x38,0xc2030014},
+{0x3c,0x80a34001},
+{0x40,0x26800004},
+{0x44,0x9402a001},
+{0x48,0xa0042001},
+{0x4c,0x9402a001},
+{0x50,0x80a28008},
+{0x54,0x08bfffea},
+{0x58,0x98032038},
+{0x5c,0x80a4000f},
+{0x60,0x34800002},
+{0x64,0x9e100010},
+{0x68,0x9602e001},
+{0x6c,0x80a2c011},
+{0x70,0x28bfffda},
+{0x74,0x94102001},
+{0x78,0x96102000},
+{0x7c,0xc20ae464},
+{0xf0,0x63},
+{0x00,0x80a06000},
+{0x04,0x22800006},
+{0x08,0x9602e001},
+{0x0c,0x80a3c001},
+{0x10,0x34800007},
+{0x14,0xc20ae278},
+{0x18,0x9602e001},
+{0x1c,0x80a2e003},
+{0x20,0x24bffff8},
+{0x24,0xc20ae464},
+{0x28,0x30800023},
+{0x2c,0xda00256c},
+{0x30,0x8258400d},
+{0x34,0x83306007},
+{0x38,0xc220256c},
+{0x3c,0xe00ae468},
+{0x40,0x80a42000},
+{0x44,0x0280001c},
+{0x48,0x80a5e000},
+{0x4c,0x32800007},
+{0x50,0xc200258c},
+{0x54,0x11000018},
+{0x58,0x90122048},
+{0x5c,0x7fffff86},
+{0x60,0xd2002594},
+{0x64,0xc200258c},
+{0x68,0x80a06000},
+{0x6c,0x32800007},
+{0x70,0xc2002588},
+{0x74,0x11000015},
+{0x78,0x90122180},
+{0x7c,0x7fffff7e},
+{0xf0,0x64},
+{0x00,0xd2002598},
+{0x04,0xc2002588},
+{0x08,0x82004010},
+{0x0c,0xc2202588},
+{0x10,0xda00258c},
+{0x14,0xc2002554},
+{0x18,0x80a34001},
+{0x1c,0x18800005},
+{0x20,0x82102001},
+{0x24,0x82034010},
+{0x28,0xc220258c},
+{0x2c,0x82102001},
+{0x30,0xc2202584},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x9de3bf98},
+{0x40,0xc20025a8},
+{0x44,0x82006001},
+{0x48,0xda002310},
+{0x4c,0x80a0400d},
+{0x50,0x0a800060},
+{0x54,0xc22025a8},
+{0x58,0xd800227c},
+{0x5c,0x80a32000},
+{0x60,0x02800038},
+{0x64,0xc02025a8},
+{0x68,0x1b000007},
+{0x6c,0x9a1363ff},
+{0x70,0x8333200d},
+{0x74,0x9208400d},
+{0x78,0xc200258c},
+{0x7c,0x80a06000},
+{0xf0,0x65},
+{0x00,0x03000015},
+{0x04,0xa4106180},
+{0x08,0x900b000d},
+{0x0c,0xa2102000},
+{0x10,0x02800004},
+{0x14,0x94102000},
+{0x18,0x82006c00},
+{0x1c,0xa4106048},
+{0x20,0xda0022f8},
+{0x24,0xc200247c},
+{0x28,0x9a5b4001},
+{0x2c,0xa0102000},
+{0x30,0x80a4000d},
+{0x34,0x1a800013},
+{0x38,0x03000017},
+{0x3c,0x9e106220},
+{0x40,0x9610000d},
+{0x44,0x9a040010},
+{0x48,0xc214800d},
+{0x4c,0x80a24001},
+{0x50,0xa2400011},
+{0x54,0xc213400f},
+{0x58,0x80a04008},
+{0x5c,0x0a800005},
+{0x60,0xa0042001},
+{0x64,0x80a04009},
+{0x68,0x08800004},
+{0x6c,0x80a4000b},
+{0x70,0x9402a001},
+{0x74,0x80a4000b},
+{0x78,0x0abffff4},
+{0x7c,0x9a040010},
+{0xf0,0x66},
+{0x00,0xa133201a},
+{0x04,0x80a44010},
+{0x08,0x14800003},
+{0x0c,0x9a102001},
+{0x10,0x9a102000},
+{0x14,0x80a28010},
+{0x18,0x14800003},
+{0x1c,0x82102001},
+{0x20,0x82102000},
+{0x24,0x80934001},
+{0x28,0x22800007},
+{0x2c,0xc2002274},
+{0x30,0x033fc180},
+{0x34,0x1b008000},
+{0x38,0x8210603c},
+{0x3c,0xda204000},
+{0x40,0xc2002274},
+{0x44,0x80a06000},
+{0x48,0x02800022},
+{0x4c,0xa2102000},
+{0x50,0xc20023d4},
+{0x54,0x80a44001},
+{0x58,0xa4102000},
+{0x5c,0x1a800016},
+{0x60,0xa0102000},
+{0x64,0xc200247c},
+{0x68,0x80a40001},
+{0x6c,0x3a80000f},
+{0x70,0xa404a001},
+{0x74,0x7ffff83a},
+{0x78,0x90100010},
+{0x7c,0x92100008},
+{0xf0,0x67},
+{0x00,0x7ffff7df},
+{0x04,0x90100012},
+{0x08,0x0300003f},
+{0x0c,0xda002274},
+{0x10,0x821063ff},
+{0x14,0x9a0b4001},
+{0x18,0x80a2000d},
+{0x1c,0xa2400011},
+{0x20,0x10bffff1},
+{0x24,0xa0042001},
+{0x28,0xc20023d4},
+{0x2c,0x10bfffec},
+{0x30,0x80a48001},
+{0x34,0xc2102274},
+{0x38,0x80a44001},
+{0x3c,0x08800005},
+{0x40,0x033fc180},
+{0x44,0x1b004000},
+{0x48,0x8210603c},
+{0x4c,0xda204000},
+{0x50,0x81c7e008},
+{0x54,0x81e80000},
+{0x58,0x9de3bf98},
+{0x5c,0xda002310},
+{0x60,0x80a36000},
+{0x64,0x02800058},
+{0x68,0x01000000},
+{0x6c,0xc200254c},
+{0x70,0x80886100},
+{0x74,0x12800054},
+{0x78,0x01000000},
+{0x7c,0xc2002578},
+{0xf0,0x68},
+{0x00,0x82006001},
+{0x04,0x80a0400d},
+{0x08,0x0a80004f},
+{0x0c,0xc2202578},
+{0x10,0xa4102000},
+{0x14,0xc20023d4},
+{0x18,0x80a48001},
+{0x1c,0xc0202578},
+{0x20,0xa2102000},
+{0x24,0x1a80002c},
+{0x28,0xa72c6002},
+{0x2c,0xc204e364},
+{0x30,0x80a06000},
+{0x34,0x02800024},
+{0x38,0xa0102000},
+{0x3c,0xc20022fc},
+{0x40,0x80a40001},
+{0x44,0x1a800020},
+{0x48,0x15000017},
+{0x4c,0xc2002548},
+{0x50,0x80886020},
+{0x54,0x03000015},
+{0x58,0x9a106180},
+{0x5c,0xc20c2380},
+{0x60,0x90100011},
+{0x64,0x9412a220},
+{0x68,0x02800009},
+{0x6c,0x920860ff},
+{0x70,0xc200258c},
+{0x74,0x80a06000},
+{0x78,0x22800005},
+{0x7c,0x9410000d},
+{0xf0,0x69},
+{0x00,0x03000018},
+{0x04,0x9a106048},
+{0x08,0x9410000d},
+{0x0c,0x7ffff7c5},
+{0x10,0xa0042001},
+{0x14,0xc204e364},
+{0x18,0xda002348},
+{0x1c,0x98020001},
+{0x20,0x82034001},
+{0x24,0x80a20001},
+{0x28,0x38bfffe5},
+{0x2c,0xa404a001},
+{0x30,0x80a3000d},
+{0x34,0x3abfffe3},
+{0x38,0xc20022fc},
+{0x3c,0x10bfffe0},
+{0x40,0xa404a001},
+{0x44,0xa2046001},
+{0x48,0xc20023d4},
+{0x4c,0x10bfffd6},
+{0x50,0x80a44001},
+{0x54,0xd8002574},
+{0x58,0x80a0000c},
+{0x5c,0x9a603fff},
+{0x60,0x80a00012},
+{0x64,0x82603fff},
+{0x68,0x808b4001},
+{0x6c,0x0280000a},
+{0x70,0x80a4a000},
+{0x74,0xda002548},
+{0x78,0x83336005},
+{0x7c,0x82086001},
+{0xf0,0x6a},
+{0x00,0x82186001},
+{0x04,0x83286005},
+{0x08,0x9a0b7fdf},
+{0x0c,0x9a134001},
+{0x10,0xda202548},
+{0x14,0x12800004},
+{0x18,0x82032001},
+{0x1c,0x10800003},
+{0x20,0xc0202574},
+{0x24,0xc2202574},
+{0x28,0xc2002574},
+{0x2c,0x80a06002},
+{0x30,0x08800005},
+{0x34,0x1b000040},
+{0x38,0xc200254c},
+{0x3c,0x8210400d},
+{0x40,0xc220254c},
+{0x44,0x81c7e008},
+{0x48,0x81e80000},
+{0x4c,0x9de3bf58},
+{0x50,0xc2002548},
+{0x54,0x80886001},
+{0x58,0x1280006e},
+{0x5c,0x01000000},
+{0x60,0xfa002500},
+{0x64,0xc20021f4},
+{0x68,0x80a74001},
+{0x6c,0x18800069},
+{0x70,0x01000000},
+{0x74,0xc200254c},
+{0x78,0x8330600b},
+{0x7c,0x82086001},
+{0xf0,0x6b},
+{0x00,0x80a00001},
+{0x04,0x9a603fff},
+{0x08,0x9403400d},
+{0x0c,0xc252a210},
+{0x10,0x80a06000},
+{0x14,0x0280005f},
+{0x18,0x8207bfb8},
+{0x1c,0xb810200f},
+{0x20,0xc0204000},
+{0x24,0xb8873fff},
+{0x28,0x1cbffffe},
+{0x2c,0x82006004},
+{0x30,0xb0102001},
+{0x34,0xc2002300},
+{0x38,0x80a60001},
+{0x3c,0x1880003c},
+{0x40,0x03000018},
+{0x44,0x92106270},
+{0x48,0x96102007},
+{0x4c,0xb4102001},
+{0x50,0xc2002308},
+{0x54,0x80a68001},
+{0x58,0x18800030},
+{0x5c,0x832ae003},
+{0x60,0x82004009},
+{0x64,0xb2006004},
+{0x68,0xfa52a210},
+{0x6c,0xc2064000},
+{0x70,0x80a0401d},
+{0x74,0x36800025},
+{0x78,0xb406a001},
+{0x7c,0x832ea018},
+{0xf0,0x6c},
+{0x00,0xbb2e2010},
+{0x04,0x8200401d},
+{0x08,0x9e006001},
+{0x0c,0xb8102000},
+{0x10,0x98102001},
+{0x14,0xb607bfb8},
+{0x18,0xbb2f2002},
+{0x1c,0xc20f67f8},
+{0x20,0x80a68001},
+{0x24,0x1280000f},
+{0x28,0xb8072001},
+{0x2c,0xc20f67f9},
+{0x30,0x80a60001},
+{0x34,0x3280000c},
+{0x38,0xc21767f8},
+{0x3c,0xd826c000},
+{0x40,0xc21767fa},
+{0x44,0x80a061fe},
+{0x48,0x38800010},
+{0x4c,0xb406a001},
+{0x50,0xc20767f8},
+{0x54,0x82006001},
+{0x58,0x1080000b},
+{0x5c,0xc22767f8},
+{0x60,0xc21767f8},
+{0x64,0x80a06000},
+{0x68,0x12800005},
+{0x6c,0x80a7200f},
+{0x70,0xd826c000},
+{0x74,0x10800004},
+{0x78,0xde2767f8},
+{0x7c,0x08bfffe7},
+{0xf0,0x6d},
+{0x00,0xb606e004},
+{0x04,0xb406a001},
+{0x08,0xc2002308},
+{0x0c,0x80a68001},
+{0x10,0x08bfffd6},
+{0x14,0xb2066004},
+{0x18,0xb0062001},
+{0x1c,0xc2002300},
+{0x20,0x80a60001},
+{0x24,0x08bfffca},
+{0x28,0x9602e007},
+{0x2c,0xb4102000},
+{0x30,0xb8102000},
+{0x34,0xb607bff8},
+{0x38,0xbb2f2002},
+{0x3c,0x8207401b},
+{0x40,0xc2007fc0},
+{0x44,0x80a06000},
+{0x48,0x32800004},
+{0x4c,0xfa1767fa},
+{0x50,0x10800005},
+{0x54,0xc02767f8},
+{0x58,0xc20b63cc},
+{0x5c,0x80a74001},
+{0x60,0xb466bfff},
+{0x64,0xb8072001},
+{0x68,0x80a7200f},
+{0x6c,0x08bffff4},
+{0x70,0xbb2f2002},
+{0x74,0xc20b63ce},
+{0x78,0x80a68001},
+{0x7c,0x08800005},
+{0xf0,0x6e},
+{0x00,0x3b000200},
+{0x04,0xc200254c},
+{0x08,0x8210401d},
+{0x0c,0xc220254c},
+{0x10,0x81c7e008},
+{0x14,0x81e80000},
+{0x18,0x9de3bf98},
+{0x1c,0xd8002200},
+{0x20,0x80a32000},
+{0x24,0x1280000a},
+{0x28,0x03000018},
+{0x2c,0xc2002548},
+{0x30,0x82087ffb},
+{0x34,0xc2202548},
+{0x38,0x033fc180},
+{0x3c,0x8210602c},
+{0x40,0xc0204000},
+{0x44,0x1080004e},
+{0x48,0xc020253c},
+{0x4c,0xc0202504},
+{0x50,0x96106270},
+{0x54,0xb0102001},
+{0x58,0xda102238},
+{0x5c,0x10800017},
+{0x60,0x9e102007},
+{0x64,0xf2002308},
+{0x68,0x80a6c019},
+{0x6c,0x18800011},
+{0x70,0x832be003},
+{0x74,0x8200400b},
+{0x78,0xba006004},
+{0x7c,0xf410223a},
+{0xf0,0x6f},
+{0x00,0xc2074000},
+{0x04,0xb606e001},
+{0x08,0xba076004},
+{0x0c,0x80a0401a},
+{0x10,0x04800005},
+{0x14,0xb820401a},
+{0x18,0xc2002504},
+{0x1c,0x8200401c},
+{0x20,0xc2202504},
+{0x24,0x80a6c019},
+{0x28,0x28bffff7},
+{0x2c,0xc2074000},
+{0x30,0xb0062001},
+{0x34,0x9e03e007},
+{0x38,0x80a36000},
+{0x3c,0x32800003},
+{0x40,0x80a6000d},
+{0x44,0x80a6000c},
+{0x48,0x08bfffe7},
+{0x4c,0xb6102001},
+{0x50,0xfa10223e},
+{0x54,0xc2002504},
+{0x58,0x80a0401d},
+{0x5c,0x3480000a},
+{0x60,0xc2002548},
+{0x64,0xfa10223c},
+{0x68,0x80a76000},
+{0x6c,0x2280000b},
+{0x70,0xc2002548},
+{0x74,0xc2082517},
+{0x78,0x80a0401d},
+{0x7c,0x0a800007},
+{0xf0,0x70},
+{0x00,0xc2002548},
+{0x04,0x80886008},
+{0x08,0x22800008},
+{0x0c,0xc200253c},
+{0x10,0x10800008},
+{0x14,0xc020253c},
+{0x18,0x80886008},
+{0x1c,0x22800005},
+{0x20,0xc020253c},
+{0x24,0xc200253c},
+{0x28,0x82006001},
+{0x2c,0xc220253c},
+{0x30,0xfa00253c},
+{0x34,0xc2002290},
+{0x38,0x80a74001},
+{0x3c,0x0880000b},
+{0x40,0xfa002548},
+{0x44,0x83376003},
+{0x48,0x82086001},
+{0x4c,0x82186001},
+{0x50,0x83286002},
+{0x54,0xba0f7ffb},
+{0x58,0xba174001},
+{0x5c,0xfa202548},
+{0x60,0xc020253c},
+{0x64,0xfa002548},
+{0x68,0xbb376002},
+{0x6c,0x033fc180},
+{0x70,0xba0f6001},
+{0x74,0x8210602c},
+{0x78,0xfa204000},
+{0x7c,0x81c7e008},
+{0xf0,0x71},
+{0x00,0x81e80000},
+{0x04,0x9de3bf68},
+{0x08,0xc2002548},
+{0x0c,0x80886400},
+{0x10,0x12800097},
+{0x14,0x1b00003f},
+{0x18,0xc2002350},
+{0x1c,0x9a1363ff},
+{0x20,0xba08400d},
+{0x24,0xa2102001},
+{0x28,0xda002300},
+{0x2c,0x80a4400d},
+{0x30,0x18800055},
+{0x34,0xa5306010},
+{0x38,0xae10200e},
+{0x3c,0xac10200e},
+{0x40,0xaa102000},
+{0x44,0xa8102000},
+{0x48,0xa6102000},
+{0x4c,0x80a4a000},
+{0x50,0x0280002c},
+{0x54,0xa0102000},
+{0x58,0x03000018},
+{0x5c,0x96106270},
+{0x60,0x92102000},
+{0x64,0x9807bfc8},
+{0x68,0x8204c009},
+{0x6c,0xda086440},
+{0x70,0x8205800d},
+{0x74,0x80a36000},
+{0x78,0x02800008},
+{0x7c,0x83286002},
+{0xf0,0x72},
+{0x00,0xc200400b},
+{0x04,0xc2230000},
+{0x08,0x92026001},
+{0x0c,0x80a2600b},
+{0x10,0x04bffff6},
+{0x14,0x98032004},
+{0x18,0x7ffff52f},
+{0x1c,0x9007bfc8},
+{0x20,0x80a74012},
+{0x24,0x1480000b},
+{0x28,0x9210001d},
+{0x2c,0x832f6002},
+{0x30,0x8200401e},
+{0x34,0x9a007fc8},
+{0x38,0xc2034000},
+{0x3c,0x92026001},
+{0x40,0xa0040001},
+{0x44,0x80a24012},
+{0x48,0x04bffffc},
+{0x4c,0x9a036004},
+{0x50,0x8224801d},
+{0x54,0x82006001},
+{0x58,0x9b3c201f},
+{0x5c,0x81836000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0xa07c0001},
+{0x70,0xc25021ae},
+{0x74,0x80a40001},
+{0x78,0x26800002},
+{0x7c,0xa0100001},
+{0xf0,0x73},
+{0x00,0x92102000},
+{0x04,0x11000018},
+{0x08,0x82050009},
+{0x0c,0xda086440},
+{0x10,0x8205c00d},
+{0x14,0x92026001},
+{0x18,0x94122270},
+{0x1c,0x80a36000},
+{0x20,0x0280000e},
+{0x24,0x97286002},
+{0x28,0xc20023c8},
+{0x2c,0x83306011},
+{0x30,0xda02c00a},
+{0x34,0x80886001},
+{0x38,0x02800005},
+{0x3c,0x98234010},
+{0x40,0xc20c62af},
+{0x44,0x825b0001},
+{0x48,0x99386007},
+{0x4c,0x80a2600b},
+{0x50,0x04bfffee},
+{0x54,0xd822c00a},
+{0x58,0xaa056001},
+{0x5c,0xa604e00c},
+{0x60,0x80a56001},
+{0x64,0x04bfffba},
+{0x68,0xa805200c},
+{0x6c,0xa2046001},
+{0x70,0xc2002300},
+{0x74,0x80a44001},
+{0x78,0xac05a00e},
+{0x7c,0x08bfffb1},
+{0xf0,0x74},
+{0x00,0xae05e00e},
+{0x04,0xc2082247},
+{0x08,0x80a06000},
+{0x0c,0x02800038},
+{0x10,0x01000000},
+{0x14,0xc20022f8},
+{0x18,0x80a44001},
+{0x1c,0x18800034},
+{0x20,0x832c6003},
+{0x24,0xa0204011},
+{0x28,0x92102001},
+{0x2c,0xc20022fc},
+{0x30,0x80a24001},
+{0x34,0x1880000f},
+{0x38,0x03000018},
+{0x3c,0x9b2c2003},
+{0x40,0x82106270},
+{0x44,0x9a034001},
+{0x48,0x9a036004},
+{0x4c,0x9807bfc8},
+{0x50,0xc2034000},
+{0x54,0xc2230000},
+{0x58,0x92026001},
+{0x5c,0xc20022fc},
+{0x60,0x80a24001},
+{0x64,0x9a036004},
+{0x68,0x08bffffa},
+{0x6c,0x98032004},
+{0x70,0x9007bfc8},
+{0x74,0x7ffff4d8},
+{0x78,0xd20022fc},
+{0x7c,0xc2082247},
+{0xf0,0x75},
+{0x00,0x83286002},
+{0x04,0x8200401e},
+{0x08,0xd8007fc8},
+{0x0c,0x80a32000},
+{0x10,0x26800013},
+{0x14,0xa2046001},
+{0x18,0x92102001},
+{0x1c,0xc20022fc},
+{0x20,0x80a24001},
+{0x24,0x1880000d},
+{0x28,0x03000018},
+{0x2c,0x9b2c2003},
+{0x30,0x96106270},
+{0x34,0x9a036004},
+{0x38,0xc203400b},
+{0x3c,0x8220400c},
+{0x40,0xc223400b},
+{0x44,0x92026001},
+{0x48,0xc20022fc},
+{0x4c,0x80a24001},
+{0x50,0x08bffffa},
+{0x54,0x9a036004},
+{0x58,0xa2046001},
+{0x5c,0xc20022f8},
+{0x60,0x80a44001},
+{0x64,0x08bfffd1},
+{0x68,0xa0042007},
+{0x6c,0x81c7e008},
+{0x70,0x81e80000},
+{0x74,0x9de3bf38},
+{0x78,0xe2502458},
+{0x7c,0x80a46000},
+{0xf0,0x76},
+{0x00,0x02800058},
+{0x04,0x01000000},
+{0x08,0xc20022f8},
+{0x0c,0x80a44001},
+{0x10,0x1a800054},
+{0x14,0xa0102001},
+{0x18,0xc20022fc},
+{0x1c,0x80a40001},
+{0x20,0x18800050},
+{0x24,0xe450245a},
+{0x28,0x96102001},
+{0x2c,0xc20022f8},
+{0x30,0x80a2c001},
+{0x34,0x1880000f},
+{0x38,0x03000018},
+{0x3c,0x9b2c2002},
+{0x40,0x82106270},
+{0x44,0x9a034001},
+{0x48,0x9a036038},
+{0x4c,0x9807bf98},
+{0x50,0xc2034000},
+{0x54,0xc2230000},
+{0x58,0x9602e001},
+{0x5c,0xc20022f8},
+{0x60,0x80a2c001},
+{0x64,0x9a036038},
+{0x68,0x08bffffa},
+{0x6c,0x98032004},
+{0x70,0x9007bf98},
+{0x74,0x7ffff498},
+{0x78,0xd20022f8},
+{0x7c,0x96100012},
+{0xf0,0x77},
+{0x00,0x80a48011},
+{0x04,0x1480000b},
+{0x08,0x94102000},
+{0x0c,0x832ca002},
+{0x10,0x8200401e},
+{0x14,0x9a007f98},
+{0x18,0xc2034000},
+{0x1c,0x9602e001},
+{0x20,0x94028001},
+{0x24,0x80a2c011},
+{0x28,0x04bffffc},
+{0x2c,0x9a036004},
+{0x30,0x82244012},
+{0x34,0x82006001},
+{0x38,0x9b3aa01f},
+{0x3c,0x81836000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0x947a8001},
+{0x50,0xc25021ac},
+{0x54,0x80a28001},
+{0x58,0x26800002},
+{0x5c,0x94100001},
+{0x60,0x96102001},
+{0x64,0xc20022f8},
+{0x68,0x80a2c001},
+{0x6c,0x18800018},
+{0x70,0x9b2c2002},
+{0x74,0x03000018},
+{0x78,0x92106270},
+{0x7c,0x98036038},
+{0xf0,0x78},
+{0x00,0xc2030009},
+{0x04,0x9a20400a},
+{0x08,0xda230009},
+{0x0c,0xc20023c8},
+{0x10,0x83306012},
+{0x14,0x80886001},
+{0x18,0x02800009},
+{0x1c,0x9602e001},
+{0x20,0xc20c22af},
+{0x24,0x825b4001},
+{0x28,0x9b38601f},
+{0x2c,0x9b336019},
+{0x30,0x8200400d},
+{0x34,0x83386007},
+{0x38,0xc2230009},
+{0x3c,0xc20022f8},
+{0x40,0x80a2c001},
+{0x44,0x08bfffef},
+{0x48,0x98032038},
+{0x4c,0xa0042001},
+{0x50,0xc20022fc},
+{0x54,0x80a40001},
+{0x58,0x08bfffb5},
+{0x5c,0x96102001},
+{0x60,0x81c7e008},
+{0x64,0x81e80000},
+{0x68,0x9de3bf98},
+{0x6c,0xfa5023c6},
+{0x70,0x80a76000},
+{0x74,0x0280003d},
+{0x78,0x9e102001},
+{0x7c,0xc20022fc},
+{0xf0,0x79},
+{0x00,0x80a3c001},
+{0x04,0x18800039},
+{0x08,0x17000018},
+{0x0c,0x8212e270},
+{0x10,0x9810001d},
+{0x14,0x9a006004},
+{0x18,0xb6102001},
+{0x1c,0xf20022f8},
+{0x20,0x80a6c019},
+{0x24,0xb4102000},
+{0x28,0x1880002b},
+{0x2c,0x82102000},
+{0x30,0xf05023c4},
+{0x34,0xba036038},
+{0x38,0xf8074000},
+{0x3c,0xb606e001},
+{0x40,0x80a70018},
+{0x44,0x06800004},
+{0x48,0xba076038},
+{0x4c,0xb406801c},
+{0x50,0x82006001},
+{0x54,0x80a6c019},
+{0x58,0x28bffff9},
+{0x5c,0xf8074000},
+{0x60,0x80a06000},
+{0x64,0x2280001d},
+{0x68,0x9e03e001},
+{0x6c,0x953ea01f},
+{0x70,0x8182a000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0x7a},
+{0x00,0x827e8001},
+{0x04,0x8258400c},
+{0x08,0xbb38601f},
+{0x0c,0xbb376016},
+{0x10,0x8200401d},
+{0x14,0xb6102001},
+{0x18,0xfa0022f8},
+{0x1c,0x80a6c01d},
+{0x20,0x1880000d},
+{0x24,0xb538600a},
+{0x28,0x832be002},
+{0x2c,0xba006038},
+{0x30,0xb812e270},
+{0x34,0xc207401c},
+{0x38,0x8220401a},
+{0x3c,0xc227401c},
+{0x40,0xb606e001},
+{0x44,0xc20022f8},
+{0x48,0x80a6c001},
+{0x4c,0x08bffffa},
+{0x50,0xba076038},
+{0x54,0x9e03e001},
+{0x58,0xc20022fc},
+{0x5c,0x80a3c001},
+{0x60,0x08bfffce},
+{0x64,0x9a036004},
+{0x68,0x81c7e008},
+{0x6c,0x81e80000},
+{0x70,0xc2082673},
+{0x74,0xda00256c},
+{0x78,0x82006001},
+{0x7c,0xd808257f},
+{0xf0,0x7b},
+{0x00,0x9a5b4001},
+{0x04,0x98032001},
+{0x08,0x81800000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x9a73400c},
+{0x1c,0xda20256c},
+{0x20,0x96102000},
+{0x24,0x832ae002},
+{0x28,0xd800256c},
+{0x2c,0xda1063b6},
+{0x30,0x9a5b400c},
+{0x34,0x9b336007},
+{0x38,0x9602e001},
+{0x3c,0x80a2e003},
+{0x40,0x04bffff9},
+{0x44,0xda206520},
+{0x48,0xc20023c0},
+{0x4c,0x80a06000},
+{0x50,0x02800007},
+{0x54,0x82103001},
+{0x58,0xc2002200},
+{0x5c,0x80a06000},
+{0x60,0x22800005},
+{0x64,0xc2002540},
+{0x68,0x82103001},
+{0x6c,0xc220252c},
+{0x70,0xc2002540},
+{0x74,0x80a06000},
+{0x78,0x02800005},
+{0x7c,0xc2002288},
+{0xf0,0x7c},
+{0x00,0x9b306001},
+{0x04,0x83306002},
+{0x08,0x8200400d},
+{0x0c,0xc220251c},
+{0x10,0x03000007},
+{0x14,0x81c06268},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x9de3bf98},
+{0x24,0xc2002308},
+{0x28,0x82006001},
+{0x2c,0xe00022fc},
+{0x30,0x80a40001},
+{0x34,0x0a80001e},
+{0x38,0xa4102001},
+{0x3c,0xc20022f8},
+{0x40,0x80a48001},
+{0x44,0x38800017},
+{0x48,0xc2002308},
+{0x4c,0x832c2002},
+{0x50,0xa2006038},
+{0x54,0xc2002fec},
+{0x58,0x92100012},
+{0x5c,0x80a06000},
+{0x60,0xa404a001},
+{0x64,0x02800004},
+{0x68,0x90100010},
+{0x6c,0x9fc04000},
+{0x70,0x01000000},
+{0x74,0x03000018},
+{0x78,0x98106270},
+{0x7c,0xda04400c},
+{0xf0,0x7d},
+{0x00,0x82106274},
+{0x04,0xda244001},
+{0x08,0xc024400c},
+{0x0c,0xc20022f8},
+{0x10,0x80a48001},
+{0x14,0x08bffff0},
+{0x18,0xa2046038},
+{0x1c,0xc2002308},
+{0x20,0xa0043fff},
+{0x24,0x10bfffe3},
+{0x28,0x82006001},
+{0x2c,0xc2002300},
+{0x30,0x82006001},
+{0x34,0xe40022f8},
+{0x38,0x80a48001},
+{0x3c,0x0a800022},
+{0x40,0x832ca003},
+{0x44,0x82204012},
+{0x48,0xa6004001},
+{0x4c,0xa0102001},
+{0x50,0xc2002308},
+{0x54,0x80a40001},
+{0x58,0x18800015},
+{0x5c,0x832ce002},
+{0x60,0xa2006004},
+{0x64,0xc2002fec},
+{0x68,0x90100010},
+{0x6c,0x80a06000},
+{0x70,0xa0042001},
+{0x74,0x02800004},
+{0x78,0x92100012},
+{0x7c,0x9fc04000},
+{0xf0,0x7e},
+{0x00,0x01000000},
+{0x04,0x03000018},
+{0x08,0x98106270},
+{0x0c,0xda04400c},
+{0x10,0x821062a8},
+{0x14,0xda244001},
+{0x18,0xc024400c},
+{0x1c,0xc2002308},
+{0x20,0x80a40001},
+{0x24,0x08bffff0},
+{0x28,0xa2046004},
+{0x2c,0xc2002300},
+{0x30,0xa404bfff},
+{0x34,0x82006001},
+{0x38,0x80a48001},
+{0x3c,0x1abfffe4},
+{0x40,0xa604fff2},
+{0x44,0x81c7e008},
+{0x48,0x81e80000},
+{0x4c,0x9de3bf98},
+{0x50,0xc2002548},
+{0x54,0x80886100},
+{0x58,0xac102000},
+{0x5c,0x128000cf},
+{0x60,0xa6102000},
+{0x64,0xc2002568},
+{0x68,0x80a06000},
+{0x6c,0x02800004},
+{0x70,0xa2102001},
+{0x74,0x82007fff},
+{0x78,0xc2202568},
+{0x7c,0xc2002300},
+{0xf0,0x7f},
+{0x00,0x80a44001},
+{0x04,0x388000a9},
+{0x08,0xda002530},
+{0x0c,0xae10200e},
+{0x10,0xa4102001},
+{0x14,0xc2002308},
+{0x18,0x80a48001},
+{0x1c,0x18800092},
+{0x20,0x9b2de002},
+{0x24,0x03000050},
+{0x28,0xaa044001},
+{0x2c,0xa8036004},
+{0x30,0xc2002514},
+{0x34,0x80a06009},
+{0x38,0x1880009b},
+{0x3c,0x03000018},
+{0x40,0x82106270},
+{0x44,0xda050001},
+{0x48,0xc2002474},
+{0x4c,0x80a34001},
+{0x50,0x0680007f},
+{0x54,0x03000040},
+{0x58,0x90100012},
+{0x5c,0x7ffff767},
+{0x60,0x92100011},
+{0x64,0x80a22000},
+{0x68,0x02800079},
+{0x6c,0x03000040},
+{0x70,0xc2002ff0},
+{0x74,0x80a06000},
+{0x78,0x2280000a},
+{0x7c,0xc2002fe0},
+{0xf0,0x80},
+{0x00,0x90100012},
+{0x04,0x9fc04000},
+{0x08,0x92100011},
+{0x0c,0xc200259c},
+{0x10,0x80a06000},
+{0x14,0x1280006e},
+{0x18,0x03000040},
+{0x1c,0xc2002fe0},
+{0x20,0x80a06000},
+{0x24,0x2280000b},
+{0x28,0xc2002ff4},
+{0x2c,0x90100012},
+{0x30,0x92100011},
+{0x34,0x9fc04000},
+{0x38,0xd4002470},
+{0x3c,0xc200259c},
+{0x40,0x80a06000},
+{0x44,0x12800062},
+{0x48,0x03000040},
+{0x4c,0xc2002ff4},
+{0x50,0x80a06000},
+{0x54,0x02800006},
+{0x58,0xa0102000},
+{0x5c,0x90100012},
+{0x60,0x9fc04000},
+{0x64,0x92100011},
+{0x68,0xe000259c},
+{0x6c,0x90100012},
+{0x70,0x92100011},
+{0x74,0x94100010},
+{0x78,0x7ffff78a},
+{0x7c,0xd6002470},
+{0xf0,0x81},
+{0x00,0x80a22000},
+{0x04,0x02800052},
+{0x08,0x03000040},
+{0x0c,0xc2002fe0},
+{0x10,0x80a06000},
+{0x14,0x02800007},
+{0x18,0x90100012},
+{0x1c,0x92100011},
+{0x20,0x9fc04000},
+{0x24,0x94102100},
+{0x28,0x10800004},
+{0x2c,0x94100010},
+{0x30,0xc020259c},
+{0x34,0x94100010},
+{0x38,0x90100012},
+{0x3c,0x92100011},
+{0x40,0x7ffff778},
+{0x44,0x96102100},
+{0x48,0x80a22000},
+{0x4c,0x22800011},
+{0x50,0xc2002514},
+{0x54,0xc200259c},
+{0x58,0x80a06000},
+{0x5c,0x3280000d},
+{0x60,0xc2002514},
+{0x64,0xc2002280},
+{0x68,0xd8002514},
+{0x6c,0xc2202568},
+{0x70,0x9b2ca010},
+{0x74,0x832b2002},
+{0x78,0x9a034011},
+{0x7c,0xda2066e0},
+{0xf0,0x82},
+{0x00,0x98032001},
+{0x04,0xd8202514},
+{0x08,0x10800006},
+{0x0c,0xac05a001},
+{0x10,0x9b286002},
+{0x14,0xea2366e0},
+{0x18,0x82006001},
+{0x1c,0xc2202514},
+{0x20,0xc2002514},
+{0x24,0x80a0600a},
+{0x28,0x12800029},
+{0x2c,0x03000040},
+{0x30,0x03000018},
+{0x34,0x9e106270},
+{0x38,0xe60026e0},
+{0x3c,0x90102001},
+{0x40,0x932a2002},
+{0x44,0xd40266e0},
+{0x48,0x980aafff},
+{0x4c,0x960cefff},
+{0x50,0x832b2003},
+{0x54,0x9b2ae003},
+{0x58,0x8220400c},
+{0x5c,0x9a23400b},
+{0x60,0x9932a010},
+{0x64,0x980b2fff},
+{0x68,0x9734e010},
+{0x6c,0x82004001},
+{0x70,0x8200400c},
+{0x74,0x960aefff},
+{0x78,0x9a03400d},
+{0x7c,0x83286002},
+{0xf0,0x83},
+{0x00,0x9a03400b},
+{0x04,0xd800400f},
+{0x08,0x9b2b6002},
+{0x0c,0xc203400f},
+{0x10,0x80a30001},
+{0x14,0x36800004},
+{0x18,0xd42266dc},
+{0x1c,0xe62266dc},
+{0x20,0xa610000a},
+{0x24,0x90022001},
+{0x28,0xda002514},
+{0x2c,0x80a2000d},
+{0x30,0x2abfffe5},
+{0x34,0x932a2002},
+{0x38,0x832b6002},
+{0x3c,0xc02066e0},
+{0x40,0x82037fff},
+{0x44,0xc2202514},
+{0x48,0x03000040},
+{0x4c,0xaa054001},
+{0x50,0xa404a001},
+{0x54,0xc2002308},
+{0x58,0x80a48001},
+{0x5c,0x08bfff75},
+{0x60,0xa8052004},
+{0x64,0xa2046001},
+{0x68,0xc2002300},
+{0x6c,0x80a44001},
+{0x70,0x08bfff68},
+{0x74,0xae05e00e},
+{0x78,0x80a4e000},
+{0x7c,0x2280000b},
+{0xf0,0x84},
+{0x00,0xda002530},
+{0x04,0xda002514},
+{0x08,0x80a36009},
+{0x0c,0x38800007},
+{0x10,0xda002530},
+{0x14,0x832b6002},
+{0x18,0xe62066e0},
+{0x1c,0x82036001},
+{0x20,0xc2202514},
+{0x24,0xda002530},
+{0x28,0x80a5800d},
+{0x2c,0x14800006},
+{0x30,0x82100016},
+{0x34,0xc2002514},
+{0x38,0x80a34001},
+{0x3c,0x28800002},
+{0x40,0x8210000d},
+{0x44,0x80a5a000},
+{0x48,0x02800004},
+{0x4c,0xc2202530},
+{0x50,0x1080000a},
+{0x54,0xc20021f8},
+{0x58,0x80a06000},
+{0x5c,0x22800009},
+{0x60,0xc2002530},
+{0x64,0xc20025ac},
+{0x68,0x80a06000},
+{0x6c,0x22800004},
+{0x70,0xc0202530},
+{0x74,0x82006001},
+{0x78,0xc22025ac},
+{0x7c,0xc2002530},
+{0xf0,0x85},
+{0x00,0x80a06000},
+{0x04,0x02800005},
+{0x08,0x01000000},
+{0x0c,0xc2002548},
+{0x10,0x82106040},
+{0x14,0xc2202548},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0xd2002208},
+{0x24,0x80a26000},
+{0x28,0x0280001a},
+{0x2c,0x01000000},
+{0x30,0xc2102548},
+{0x34,0x80886001},
+{0x38,0x12800016},
+{0x3c,0x01000000},
+{0x40,0xc2002514},
+{0x44,0x80a06000},
+{0x48,0x12800007},
+{0x4c,0xc2002558},
+{0x50,0x80a06000},
+{0x54,0x0280000f},
+{0x58,0x9a007fff},
+{0x5c,0x1080000d},
+{0x60,0xda202558},
+{0x64,0x15200040},
+{0x68,0x1b3fc200},
+{0x6c,0x9812a001},
+{0x70,0x80a06000},
+{0x74,0x12800006},
+{0x78,0x96136070},
+{0x7c,0xd8234000},
+{0xf0,0x86},
+{0x00,0xc2002298},
+{0x04,0xc222c000},
+{0x08,0xd4234000},
+{0x0c,0xd2202558},
+{0x10,0x81c3e008},
+{0x14,0x01000000},
+{0x18,0x82220009},
+{0x1c,0x9a58400a},
+{0x20,0x833b601f},
+{0x24,0x80a20009},
+{0x28,0x83306019},
+{0x2c,0x04800004},
+{0x30,0x90102000},
+{0x34,0x82034001},
+{0x38,0x91386007},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x9de3bf98},
+{0x48,0xc20022f8},
+{0x4c,0x80a07fff},
+{0x50,0x0280001d},
+{0x54,0xa8102001},
+{0x58,0xa6102007},
+{0x5c,0x23000018},
+{0x60,0xa12ce003},
+{0x64,0x82146278},
+{0x68,0xa4146274},
+{0x6c,0xd2040001},
+{0x70,0xd408228c},
+{0x74,0x7fffffe9},
+{0x78,0xd0040012},
+{0x7c,0x9a146270},
+{0xf0,0x87},
+{0x00,0xd024000d},
+{0x04,0xc2002308},
+{0x08,0xa004c013},
+{0x0c,0xa0040001},
+{0x10,0xa12c2002},
+{0x14,0xa214626c},
+{0x18,0xd004000d},
+{0x1c,0xd2040011},
+{0x20,0x7fffffde},
+{0x24,0xd408228d},
+{0x28,0xd0240012},
+{0x2c,0xc20022f8},
+{0x30,0xa8052001},
+{0x34,0x82006001},
+{0x38,0x80a50001},
+{0x3c,0x08bfffe8},
+{0x40,0xa604e007},
+{0x44,0xa6102001},
+{0x48,0xc2002308},
+{0x4c,0x80a4c001},
+{0x50,0x1880001c},
+{0x54,0x23000018},
+{0x58,0xa12ce002},
+{0x5c,0x821462e0},
+{0x60,0xa41462a8},
+{0x64,0xd2040001},
+{0x68,0xd408228e},
+{0x6c,0x7fffffcb},
+{0x70,0xd0040012},
+{0x74,0x9a146270},
+{0x78,0xd024000d},
+{0x7c,0xc2002300},
+{0xf0,0x88},
+{0x00,0xa1286003},
+{0x04,0xa0240001},
+{0x08,0xa0040010},
+{0x0c,0xa0040013},
+{0x10,0xa12c2002},
+{0x14,0xa2146238},
+{0x18,0xd004000d},
+{0x1c,0xd2040011},
+{0x20,0x7fffffbe},
+{0x24,0xd408228f},
+{0x28,0xd0240012},
+{0x2c,0xa604e001},
+{0x30,0xc2002308},
+{0x34,0x80a4c001},
+{0x38,0x08bfffe8},
+{0x3c,0x23000018},
+{0x40,0x81c7e008},
+{0x44,0x81e80000},
+{0x48,0x9de3bf88},
+{0x4c,0xc2002fe4},
+{0x50,0x9fc04000},
+{0x54,0xd0002590},
+{0x58,0xda002550},
+{0x5c,0x832b6004},
+{0x60,0x8220400d},
+{0x64,0xe000259c},
+{0x68,0x82040001},
+{0x6c,0x83306004},
+{0x70,0xc2202550},
+{0x74,0x11000017},
+{0x78,0xc2002fe4},
+{0x7c,0x9fc04000},
+{0xf0,0x89},
+{0x00,0x90122220},
+{0x04,0xc2002308},
+{0x08,0xda002300},
+{0x0c,0x9a5b4001},
+{0x10,0xc200259c},
+{0x14,0x8200400d},
+{0x18,0xc220259c},
+{0x1c,0xda00259c},
+{0x20,0xc2002550},
+{0x24,0x80a34001},
+{0x28,0x28800011},
+{0x2c,0xc2002548},
+{0x30,0xc200259c},
+{0x34,0x80a04010},
+{0x38,0x0880000d},
+{0x3c,0xc2002548},
+{0x40,0x80a42000},
+{0x44,0x0280000a},
+{0x48,0x01000000},
+{0x4c,0x82087f7f},
+{0x50,0xc2202548},
+{0x54,0xc2002668},
+{0x58,0x80a06000},
+{0x5c,0x26800006},
+{0x60,0xc0202668},
+{0x64,0x10800005},
+{0x68,0xc208254e},
+{0x6c,0x82106080},
+{0x70,0xc2202548},
+{0x74,0xc208254e},
+{0x78,0x80a00001},
+{0x7c,0x82602000},
+{0xf0,0x8a},
+{0x00,0xa0087ffe},
+{0x04,0xd8002548},
+{0x08,0x83332010},
+{0x0c,0x80886001},
+{0x10,0x02800004},
+{0x14,0xa0042003},
+{0x18,0x1080001d},
+{0x1c,0xa0102000},
+{0x20,0x808b2001},
+{0x24,0x1280003f},
+{0x28,0x03000007},
+{0x2c,0xda0026a0},
+{0x30,0x808b4001},
+{0x34,0x3280003c},
+{0x38,0xc0202538},
+{0x3c,0xda002664},
+{0x40,0xc20021dc},
+{0x44,0x80a34001},
+{0x48,0x2a800008},
+{0x4c,0xc2002514},
+{0x50,0xc200254c},
+{0x54,0x8330600e},
+{0x58,0x80886001},
+{0x5c,0x1280000a},
+{0x60,0x808b2040},
+{0x64,0xc2002514},
+{0x68,0x80a06000},
+{0x6c,0x22800009},
+{0x70,0xc20c2314},
+{0x74,0x808b2080},
+{0x78,0x22800006},
+{0x7c,0xc20c2314},
+{0xf0,0x8b},
+{0x00,0x808b2040},
+{0x04,0x32800028},
+{0x08,0xc0202538},
+{0x0c,0xc20c2314},
+{0x10,0x80a06000},
+{0x14,0x22800024},
+{0x18,0xc0202538},
+{0x1c,0xc2002538},
+{0x20,0x82006001},
+{0x24,0xc2202538},
+{0x28,0xda0c2314},
+{0x2c,0x80a0400d},
+{0x30,0x0680001d},
+{0x34,0x01000000},
+{0x38,0xc0202538},
+{0x3c,0xc20c234c},
+{0x40,0xc227bfec},
+{0x44,0xc20c230c},
+{0x48,0xc227bff0},
+{0x4c,0xa0102000},
+{0x50,0xc2002308},
+{0x54,0x80a40001},
+{0x58,0x1a800013},
+{0x5c,0x01000000},
+{0x60,0xc20c2380},
+{0x64,0xc227bfe8},
+{0x68,0xa2102000},
+{0x6c,0xc2002300},
+{0x70,0x80a44001},
+{0x74,0x3a800006},
+{0x78,0xa0042001},
+{0x7c,0x7ffff73c},
+{0xf0,0x8c},
+{0x00,0x9007bfe8},
+{0x04,0x10bffffa},
+{0x08,0xa2046001},
+{0x0c,0xc2002308},
+{0x10,0x80a40001},
+{0x14,0x2abffff4},
+{0x18,0xc20c2380},
+{0x1c,0x30800002},
+{0x20,0xc0202538},
+{0x24,0x81c7e008},
+{0x28,0x81e80000},
+{0x2c,0x9de3bf88},
+{0x30,0xd8082246},
+{0x34,0x80a32000},
+{0x38,0x22800043},
+{0x3c,0xc020255c},
+{0x40,0xda00254c},
+{0x44,0x83336018},
+{0x48,0x80886001},
+{0x4c,0x12800007},
+{0x50,0x03004000},
+{0x54,0xc2002568},
+{0x58,0x80a06000},
+{0x5c,0x22800008},
+{0x60,0xc2002540},
+{0x64,0x03004000},
+{0x68,0x822b4001},
+{0x6c,0xc220254c},
+{0x70,0xc027bfec},
+{0x74,0x1080000e},
+{0x78,0xc027bff0},
+{0x7c,0x80a06000},
+{0xf0,0x8d},
+{0x00,0x32800031},
+{0x04,0xc020255c},
+{0x08,0xc200255c},
+{0x0c,0x82006001},
+{0x10,0x80a0400c},
+{0x14,0x0a80002c},
+{0x18,0xc220255c},
+{0x1c,0xc2082244},
+{0x20,0xc227bfec},
+{0x24,0xc2082245},
+{0x28,0xc227bff0},
+{0x2c,0xc2002308},
+{0x30,0xa0006001},
+{0x34,0xc20022fc},
+{0x38,0x80a40001},
+{0x3c,0x1880000c},
+{0x40,0xa2102001},
+{0x44,0xc20c237f},
+{0x48,0xc227bfe8},
+{0x4c,0xc20022f8},
+{0x50,0x80a44001},
+{0x54,0x38bffff8},
+{0x58,0xa0042001},
+{0x5c,0x7ffff704},
+{0x60,0x9007bfe8},
+{0x64,0x10bffffa},
+{0x68,0xa2046001},
+{0x6c,0xa0102001},
+{0x70,0xc2002308},
+{0x74,0x80a40001},
+{0x78,0x38800013},
+{0x7c,0xc020255c},
+{0xf0,0x8e},
+{0x00,0xd80c237f},
+{0x04,0xd827bfe8},
+{0x08,0xc200247c},
+{0x0c,0xda002300},
+{0x10,0x8258400d},
+{0x14,0x98030001},
+{0x18,0xd827bfe8},
+{0x1c,0xc2002300},
+{0x20,0xa2006001},
+{0x24,0xc20022f8},
+{0x28,0x80a44001},
+{0x2c,0x38bffff1},
+{0x30,0xa0042001},
+{0x34,0x7ffff6ee},
+{0x38,0x9007bfe8},
+{0x3c,0x10bffffa},
+{0x40,0xa2046001},
+{0x44,0x81c7e008},
+{0x48,0x81e80000},
+{0x4c,0x9de3bf80},
+{0x50,0x03003fc0},
+{0x54,0x82106001},
+{0x58,0xc227bff4},
+{0x5c,0xc227bff0},
+{0x60,0xa4102000},
+{0x64,0xc2002514},
+{0x68,0x80a48001},
+{0x6c,0x1a800025},
+{0x70,0xa2102000},
+{0x74,0x8207bff8},
+{0x78,0x9a044001},
+{0x7c,0xa12c6002},
+{0xf0,0x8f},
+{0x00,0xa0040001},
+{0x04,0xd44b7ff9},
+{0x08,0x90100012},
+{0x0c,0x7ffff63d},
+{0x10,0xd24b7ff8},
+{0x14,0xa2046001},
+{0x18,0x80a46003},
+{0x1c,0x04bffff6},
+{0x20,0xd0243fe8},
+{0x24,0xc2002fe8},
+{0x28,0x80a06000},
+{0x2c,0x02800005},
+{0x30,0xda07bfe4},
+{0x34,0x9fc04000},
+{0x38,0x9007bfe0},
+{0x3c,0xda07bfe4},
+{0x40,0xc207bfec},
+{0x44,0x83286010},
+{0x48,0x9b2b6018},
+{0x4c,0x9a034001},
+{0x50,0xc207bfe0},
+{0x54,0x83286008},
+{0x58,0x9a034001},
+{0x5c,0xc207bfe8},
+{0x60,0x9a034001},
+{0x64,0x832ca002},
+{0x68,0xda206708},
+{0x6c,0xa404a001},
+{0x70,0xc2002514},
+{0x74,0x80a48001},
+{0x78,0x0abfffdf},
+{0x7c,0xa2102000},
+{0xf0,0x90},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0x9de3bf98},
+{0x0c,0x90102000},
+{0x10,0xc2002514},
+{0x14,0x80a20001},
+{0x18,0x1a800077},
+{0x1c,0x92102000},
+{0x20,0xbb2a2002},
+{0x24,0xf40f6708},
+{0x28,0xc20f6709},
+{0x2c,0x80a68001},
+{0x30,0x9e102000},
+{0x34,0x9a102000},
+{0x38,0x14800024},
+{0x3c,0x98102000},
+{0x40,0x832ea003},
+{0x44,0xb820401a},
+{0x48,0x03000018},
+{0x4c,0xa0106270},
+{0x50,0xc20f670b},
+{0x54,0xf60f670a},
+{0x58,0x80a6c001},
+{0x5c,0x14800015},
+{0x60,0x8207001c},
+{0x64,0x8200401b},
+{0x68,0x83286002},
+{0x6c,0xb2004010},
+{0x70,0x9406a001},
+{0x74,0xd60a670b},
+{0x78,0xfa064000},
+{0x7c,0x8206e001},
+{0xf0,0x91},
+{0x00,0xb6100001},
+{0x04,0xb05f4001},
+{0x08,0xb2066004},
+{0x0c,0x80a76000},
+{0x10,0x04800005},
+{0x14,0x825f400a},
+{0x18,0x9a034001},
+{0x1c,0x98030018},
+{0x20,0x9e03c01d},
+{0x24,0x80a6c00b},
+{0x28,0x24bffff5},
+{0x2c,0xfa064000},
+{0x30,0xbb2a2002},
+{0x34,0xb406a001},
+{0x38,0xc20f6709},
+{0x3c,0x80a68001},
+{0x40,0x04bfffe4},
+{0x44,0xb8072007},
+{0x48,0x832b6006},
+{0x4c,0xb92b2006},
+{0x50,0x9b38601f},
+{0x54,0x81836000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0xb678400f},
+{0x68,0xfa0266e0},
+{0x6c,0x833f201f},
+{0x70,0x81806000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0x92},
+{0x00,0xb87f000f},
+{0x04,0xbb37600c},
+{0x08,0x808f6001},
+{0x0c,0x9a06ffa0},
+{0x10,0x02800007},
+{0x14,0x98073fa0},
+{0x18,0xc200237c},
+{0x1c,0x80a06000},
+{0x20,0x22800003},
+{0x24,0x9a06ff60},
+{0x28,0x98073f60},
+{0x2c,0x80a36000},
+{0x30,0x24800002},
+{0x34,0x9a102001},
+{0x38,0x80a32000},
+{0x3c,0x24800002},
+{0x40,0x98102001},
+{0x44,0xfa0022f8},
+{0x48,0x832f6006},
+{0x4c,0x80a34001},
+{0x50,0x3a800002},
+{0x54,0x9a007fff},
+{0x58,0xc20022fc},
+{0x5c,0x83286006},
+{0x60,0x80a30001},
+{0x64,0x3a800002},
+{0x68,0x98007fff},
+{0x6c,0xc20021e0},
+{0x70,0x80a06000},
+{0x74,0x22800012},
+{0x78,0x9e102000},
+{0x7c,0x80a76040},
+{0xf0,0x93},
+{0x00,0x3880000f},
+{0x04,0x9e102000},
+{0x08,0x81800000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x9ef3c001},
+{0x1c,0x12800004},
+{0x20,0x80a3e00f},
+{0x24,0x10800006},
+{0x28,0x9e102001},
+{0x2c,0x34800004},
+{0x30,0x9e10200f},
+{0x34,0x10800003},
+{0x38,0x832b6010},
+{0x3c,0x832b6010},
+{0x40,0x8200400c},
+{0x44,0xbb2be01c},
+{0x48,0xba074001},
+{0x4c,0xf80266e0},
+{0x50,0x0300003c},
+{0x54,0xb80f0001},
+{0x58,0xba07401c},
+{0x5c,0xfa2266e0},
+{0x60,0x90022001},
+{0x64,0xc2002514},
+{0x68,0x80a20001},
+{0x6c,0x0abfff8d},
+{0x70,0x92026004},
+{0x74,0x7ffff445},
+{0x78,0x91e8205a},
+{0x7c,0x01000000},
+{0xf0,0x94},
+{0x00,0x9de3bf98},
+{0x04,0xd8002548},
+{0x08,0x808b2001},
+{0x0c,0x12800081},
+{0x10,0x01000000},
+{0x14,0xc208254d},
+{0x18,0x80a06000},
+{0x1c,0x1280007d},
+{0x20,0x01000000},
+{0x24,0xc208254e},
+{0x28,0x80a06000},
+{0x2c,0x02800079},
+{0x30,0x01000000},
+{0x34,0xc2002554},
+{0x38,0x825860fa},
+{0x3c,0xda002500},
+{0x40,0x80a34001},
+{0x44,0x0a800073},
+{0x48,0x01000000},
+{0x4c,0xd6002668},
+{0x50,0x80a2e000},
+{0x54,0x1480001c},
+{0x58,0x8202ffff},
+{0x5c,0xc2002514},
+{0x60,0x80a06001},
+{0x64,0x3280006b},
+{0x68,0xc0202668},
+{0x6c,0xc20026e0},
+{0x70,0x80a06000},
+{0x74,0x12800004},
+{0x78,0x808b2040},
+{0x7c,0x10800065},
+{0xf0,0x95},
+{0x00,0xc0202668},
+{0x04,0x32800006},
+{0x08,0xd800239c},
+{0x0c,0x80a2e000},
+{0x10,0x0680000d},
+{0x14,0x8202e001},
+{0x18,0xd800239c},
+{0x1c,0x0300003f},
+{0x20,0x9b332010},
+{0x24,0x821063ff},
+{0x28,0x980b0001},
+{0x2c,0x9a38000d},
+{0x30,0x9a23400c},
+{0x34,0x80a2c00d},
+{0x38,0x06800005},
+{0x3c,0x03296956},
+{0x40,0x8202ffff},
+{0x44,0x10800053},
+{0x48,0xc2202668},
+{0x4c,0x9a10625a},
+{0x50,0xc200250c},
+{0x54,0x80a0400d},
+{0x58,0x02800004},
+{0x5c,0xa0102000},
+{0x60,0xda20250c},
+{0x64,0xc0202664},
+{0x68,0x832c2002},
+{0x6c,0x92006620},
+{0x70,0xc2006620},
+{0x74,0x901026e0},
+{0x78,0x80a06000},
+{0x7c,0x0280000d},
+{0xf0,0x96},
+{0x00,0xa0042001},
+{0x04,0x7ffff48d},
+{0x08,0x01000000},
+{0x0c,0xc2002300},
+{0x10,0xda002308},
+{0x14,0x82584001},
+{0x18,0x9a5b400d},
+{0x1c,0x8200400d},
+{0x20,0x83286006},
+{0x24,0x80a20001},
+{0x28,0x0a80003a},
+{0x2c,0x01000000},
+{0x30,0x80a4200f},
+{0x34,0x08bfffee},
+{0x38,0x832c2002},
+{0x3c,0x030041eb},
+{0x40,0xc2202668},
+{0x44,0xa010200f},
+{0x48,0x9b2c2002},
+{0x4c,0xc203661c},
+{0x50,0xa0843fff},
+{0x54,0x12bffffd},
+{0x58,0xc2236620},
+{0x5c,0xda002664},
+{0x60,0xc20026e0},
+{0x64,0xc2202620},
+{0x68,0x80a3600f},
+{0x6c,0x14800003},
+{0x70,0x9010200f},
+{0x74,0x9010000d},
+{0x78,0x03000015},
+{0x7c,0x9e1063a8},
+{0xf0,0x97},
+{0x00,0x82006800},
+{0x04,0xa2106220},
+{0x08,0x0300003f},
+{0x0c,0xa61063ff},
+{0x10,0x92022001},
+{0x14,0xa0102000},
+{0x18,0xa410000f},
+{0x1c,0x972c2002},
+{0x20,0x8203c00b},
+{0x24,0xda106002},
+{0x28,0x9804400b},
+{0x2c,0xd4132002},
+{0x30,0xc213c00b},
+{0x34,0xd814400b},
+{0x38,0x82584008},
+{0x3c,0x9a5b4008},
+{0x40,0x8200400c},
+{0x44,0x9a03400a},
+{0x48,0x81800000},
+{0x4c,0x01000000},
+{0x50,0x01000000},
+{0x54,0x01000000},
+{0x58,0x82704009},
+{0x5c,0x81800000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x9a734009},
+{0x70,0x83286010},
+{0x74,0x9a0b4013},
+{0x78,0x8200400d},
+{0x7c,0xa0042001},
+{0xf0,0x98},
+{0x00,0x80a42089},
+{0x04,0x08bfffe6},
+{0x08,0xc222c012},
+{0x0c,0xd2202664},
+{0x10,0x81c7e008},
+{0x14,0x81e80000},
+{0x18,0x9de3bf98},
+{0x1c,0xa2102000},
+{0x20,0xc2002514},
+{0x24,0x80a44001},
+{0x28,0xa0102000},
+{0x2c,0x1a800012},
+{0x30,0x832c2002},
+{0x34,0x920066e0},
+{0x38,0xc20066e0},
+{0x3c,0x80a06000},
+{0x40,0x02800009},
+{0x44,0x90100018},
+{0x48,0x7ffff43c},
+{0x4c,0x01000000},
+{0x50,0x82102001},
+{0x54,0x80a20019},
+{0x58,0x1a800003},
+{0x5c,0x83284010},
+{0x60,0xa2144001},
+{0x64,0xa0042001},
+{0x68,0xc2002514},
+{0x6c,0x10bffff0},
+{0x70,0x80a40001},
+{0x74,0x81c7e008},
+{0x78,0x91e80011},
+{0x7c,0x9de3bf90},
+{0xf0,0x99},
+{0x00,0x03003fc0},
+{0x04,0x82106001},
+{0x08,0xc227bff0},
+{0x0c,0xc027bff4},
+{0x10,0xa0102000},
+{0x14,0x8207bff8},
+{0x18,0x82040001},
+{0x1c,0xd2487ff9},
+{0x20,0xd0487ff8},
+{0x24,0x90060008},
+{0x28,0x92064009},
+{0x2c,0x94102000},
+{0x30,0x7ffff47c},
+{0x34,0x9610001a},
+{0x38,0x80a22000},
+{0x3c,0x02800004},
+{0x40,0xa0042001},
+{0x44,0x10800006},
+{0x48,0xb0102001},
+{0x4c,0x80a42004},
+{0x50,0x04bffff2},
+{0x54,0x8207bff8},
+{0x58,0xb0102000},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0x9de3bf90},
+{0x68,0x03003fc0},
+{0x6c,0x82106001},
+{0x70,0xc227bff0},
+{0x74,0xc027bff4},
+{0x78,0xda002500},
+{0x7c,0xc20022d0},
+{0xf0,0x9a},
+{0x00,0x80a34001},
+{0x04,0xb8102000},
+{0x08,0xba102000},
+{0x0c,0x18800006},
+{0x10,0xae102000},
+{0x14,0xc2002548},
+{0x18,0x80886001},
+{0x1c,0x22800004},
+{0x20,0xc200254c},
+{0x24,0xba102001},
+{0x28,0xc200254c},
+{0x2c,0x80886200},
+{0x30,0x32800010},
+{0x34,0xc20026a0},
+{0x38,0x03296956},
+{0x3c,0xda00250c},
+{0x40,0x8210625a},
+{0x44,0x80a34001},
+{0x48,0x12800006},
+{0x4c,0xc20023c8},
+{0x50,0x80886800},
+{0x54,0x32800007},
+{0x58,0xc20026a0},
+{0x5c,0xc20023c8},
+{0x60,0x80886400},
+{0x64,0x22800014},
+{0x68,0xec0022ac},
+{0x6c,0xc20026a0},
+{0x70,0x80886200},
+{0x74,0x1280000a},
+{0x78,0xb8102001},
+{0x7c,0x13000015},
+{0xf0,0x9b},
+{0x00,0xc2002fd0},
+{0x04,0x921263a8},
+{0x08,0x9fc04000},
+{0x0c,0xd0002590},
+{0x10,0xc20026a0},
+{0x14,0x82106200},
+{0x18,0xc22026a0},
+{0x1c,0x10800006},
+{0x20,0xec0023a0},
+{0x24,0x03000080},
+{0x28,0x82134001},
+{0x2c,0x1080007d},
+{0x30,0xc220254c},
+{0x34,0x7ffff355},
+{0x38,0x901020aa},
+{0x3c,0xaa102000},
+{0x40,0xa12d6003},
+{0x44,0xc2042730},
+{0x48,0x80a06000},
+{0x4c,0x22800072},
+{0x50,0xaa056001},
+{0x54,0x80a56000},
+{0x58,0x12800008},
+{0x5c,0x80a76000},
+{0x60,0xc2002540},
+{0x64,0x80a06000},
+{0x68,0x1280000c},
+{0x6c,0x29200000},
+{0x70,0x1080000a},
+{0x74,0xa8102000},
+{0x78,0x02800005},
+{0x7c,0x90042730},
+{0xf0,0x9c},
+{0x00,0xc0242734},
+{0x04,0x10800063},
+{0x08,0xc0242730},
+{0x0c,0x7fffff83},
+{0x10,0x92100016},
+{0x14,0xa8100008},
+{0x18,0x80a52000},
+{0x1c,0x1280000b},
+{0x20,0xae15c014},
+{0x24,0xc2142734},
+{0x28,0x80a06000},
+{0x2c,0x22800058},
+{0x30,0xc0242734},
+{0x34,0xc2042734},
+{0x38,0x1b3fffc0},
+{0x3c,0x8200400d},
+{0x40,0x10800054},
+{0x44,0xc2242734},
+{0x48,0xc2142736},
+{0x4c,0x80a06000},
+{0x50,0x0280000a},
+{0x54,0x80a56000},
+{0x58,0xc2042734},
+{0x5c,0x82007fff},
+{0x60,0xc2242734},
+{0x64,0xc2142736},
+{0x68,0x80a06000},
+{0x6c,0x3280004a},
+{0x70,0xaa056001},
+{0x74,0x80a56000},
+{0x78,0x1280000c},
+{0x7c,0x1b004000},
+{0xf0,0x9d},
+{0x00,0xc200254c},
+{0x04,0x8210400d},
+{0x08,0x10800042},
+{0x0c,0xc220254c},
+{0x10,0xc200254c},
+{0x14,0x1b000080},
+{0x18,0x8210400d},
+{0x1c,0xc220254c},
+{0x20,0x10800037},
+{0x24,0xc0202570},
+{0x28,0xda00254c},
+{0x2c,0x83336019},
+{0x30,0x80886001},
+{0x34,0x12bfffbc},
+{0x38,0x80a72000},
+{0x3c,0x02bfffba},
+{0x40,0xa2102000},
+{0x44,0xc2002514},
+{0x48,0x80a44001},
+{0x4c,0x1a80002c},
+{0x50,0x83350011},
+{0x54,0x80886001},
+{0x58,0x02800027},
+{0x5c,0x9b2c6002},
+{0x60,0xc20366e0},
+{0x64,0x9b306016},
+{0x68,0x82086fff},
+{0x6c,0x83386006},
+{0x70,0x9a0b603f},
+{0x74,0xa4006001},
+{0x78,0xa6036001},
+{0x7c,0x92100013},
+{0xf0,0x9e},
+{0x00,0xd410246e},
+{0x04,0x7fffff5e},
+{0x08,0x90100012},
+{0x0c,0x80a22000},
+{0x10,0x12800011},
+{0x14,0x82102001},
+{0x18,0xd410246c},
+{0x1c,0x80a2a000},
+{0x20,0x22800011},
+{0x24,0xc2002570},
+{0x28,0xc2002548},
+{0x2c,0x90100012},
+{0x30,0x80886080},
+{0x34,0x0280000b},
+{0x38,0x92100013},
+{0x3c,0x7fffff50},
+{0x40,0x01000000},
+{0x44,0x80a22000},
+{0x48,0x22800007},
+{0x4c,0xc2002570},
+{0x50,0x82102001},
+{0x54,0x83284011},
+{0x58,0x10800007},
+{0x5c,0xa82d0001},
+{0x60,0xc2002570},
+{0x64,0x82006001},
+{0x68,0x80a06004},
+{0x6c,0x18bfffc9},
+{0x70,0xc2202570},
+{0x74,0x10bfffd4},
+{0x78,0xa2046001},
+{0x7c,0x80a52000},
+{0xf0,0x9f},
+{0x00,0x32800005},
+{0x04,0xaa056001},
+{0x08,0xc0242734},
+{0x0c,0xc0242730},
+{0x10,0xaa056001},
+{0x14,0x80a56013},
+{0x18,0x04bfff8b},
+{0x1c,0xa12d6003},
+{0x20,0x80a5e000},
+{0x24,0x22800002},
+{0x28,0xc0202570},
+{0x2c,0xc2002540},
+{0x30,0x80a06000},
+{0x34,0x0280000a},
+{0x38,0x80a76000},
+{0x3c,0xc2002730},
+{0x40,0x80a06000},
+{0x44,0x12800006},
+{0x48,0x80a76000},
+{0x4c,0x03000004},
+{0x50,0xc2202730},
+{0x54,0xc2002248},
+{0x58,0xc2202734},
+{0x5c,0x12800027},
+{0x60,0xaa102000},
+{0x64,0xc2002514},
+{0x68,0x80a54001},
+{0x6c,0x1a800023},
+{0x70,0x96102001},
+{0x74,0x992d6002},
+{0x78,0xc20326e0},
+{0x7c,0x8330600c},
+{0xf0,0xa0},
+{0x00,0x80886001},
+{0x04,0x32800019},
+{0x08,0xaa056001},
+{0x0c,0x832ac015},
+{0x10,0x808dc001},
+{0x14,0x32800015},
+{0x18,0xaa056001},
+{0x1c,0xa2102001},
+{0x20,0x9b2c6003},
+{0x24,0xc2036730},
+{0x28,0x80a06000},
+{0x2c,0x1280000b},
+{0x30,0xa2046001},
+{0x34,0xc20326e0},
+{0x38,0x80a72000},
+{0x3c,0x02800004},
+{0x40,0xc2236730},
+{0x44,0x10800003},
+{0x48,0xc200239c},
+{0x4c,0xc2002378},
+{0x50,0x10800005},
+{0x54,0xc2236734},
+{0x58,0x80a46013},
+{0x5c,0x04bffff2},
+{0x60,0x9b2c6003},
+{0x64,0xaa056001},
+{0x68,0xc2002514},
+{0x6c,0x80a54001},
+{0x70,0x0abfffe2},
+{0x74,0x992d6002},
+{0x78,0x81c7e008},
+{0x7c,0x81e80000},
+{0xf0,0xa1},
+{0x00,0x9de3bf98},
+{0x04,0xc2002510},
+{0x08,0x80a06000},
+{0x0c,0x2280000b},
+{0x10,0xc208254d},
+{0x14,0x82007fff},
+{0x18,0x80a06000},
+{0x1c,0x12800006},
+{0x20,0xc2202510},
+{0x24,0xc200254c},
+{0x28,0x1b002000},
+{0x2c,0x8210400d},
+{0x30,0xc220254c},
+{0x34,0xc208254d},
+{0x38,0x80a06000},
+{0x3c,0x1280000d},
+{0x40,0x033fc180},
+{0x44,0x033fc200},
+{0x48,0x82106030},
+{0x4c,0xda004000},
+{0x50,0xc200257c},
+{0x54,0x80a34001},
+{0x58,0x02800021},
+{0x5c,0x01000000},
+{0x60,0xc210223e},
+{0x64,0x80a06000},
+{0x68,0x0280001d},
+{0x6c,0x033fc180},
+{0x70,0xc0204000},
+{0x74,0xa0102002},
+{0x78,0x11000099},
+{0x7c,0x7fffef26},
+{0xf0,0xa2},
+{0x00,0x9012233c},
+{0x04,0x7ffff4bc},
+{0x08,0x90102002},
+{0x0c,0xa0843fff},
+{0x10,0x3cbffffb},
+{0x14,0x11000099},
+{0x18,0xda00254c},
+{0x1c,0x83336010},
+{0x20,0x80886001},
+{0x24,0x32800002},
+{0x28,0xc020250c},
+{0x2c,0x83336017},
+{0x30,0x80886001},
+{0x34,0x32800005},
+{0x38,0xc2002510},
+{0x3c,0xc2002188},
+{0x40,0xc2202510},
+{0x44,0xc2002510},
+{0x48,0xc220266c},
+{0x4c,0x7ffff142},
+{0x50,0x90102015},
+{0x54,0x82102001},
+{0x58,0xc2202584},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0xc2002588},
+{0x68,0x80a06000},
+{0x6c,0x32800006},
+{0x70,0xc200258c},
+{0x74,0xc2002554},
+{0x78,0xc2202588},
+{0x7c,0xc0202594},
+{0xf0,0xa3},
+{0x00,0xc200258c},
+{0x04,0x80a06000},
+{0x08,0x12800005},
+{0x0c,0x01000000},
+{0x10,0xc2002554},
+{0x14,0xc220258c},
+{0x18,0xc0202598},
+{0x1c,0x81c3e008},
+{0x20,0x01000000},
+{0x24,0x9de3bf98},
+{0x28,0xb0102000},
+{0x2c,0xc2002514},
+{0x30,0x80a60001},
+{0x34,0x1a800053},
+{0x38,0x9b2e2002},
+{0x3c,0xc20366e0},
+{0x40,0xbb30600c},
+{0x44,0xb9306010},
+{0x48,0xb80f2fff},
+{0x4c,0x9e8f6001},
+{0x50,0x12800014},
+{0x54,0xb6086fff},
+{0x58,0xc250229e},
+{0x5c,0xfa5022a2},
+{0x60,0x8226c001},
+{0x64,0xba27001d},
+{0x68,0xf850229c},
+{0x6c,0xf65022a0},
+{0x70,0x8258401c},
+{0x74,0xba5f401b},
+{0x78,0x82006800},
+{0x7c,0xba076800},
+{0xf0,0xa4},
+{0x00,0xb938601f},
+{0x04,0xb73f601f},
+{0x08,0xb9372014},
+{0x0c,0xb736e014},
+{0x10,0x8200401c},
+{0x14,0xba07401b},
+{0x18,0xb738600c},
+{0x1c,0xb93f600c},
+{0x20,0xf4002324},
+{0x24,0xf2002328},
+{0x28,0xfa002308},
+{0x2c,0xc2002300},
+{0x30,0xb65ec01a},
+{0x34,0xbb2f6006},
+{0x38,0xb85f0019},
+{0x3c,0x83286006},
+{0x40,0x993ee01f},
+{0x44,0x81832000},
+{0x48,0x01000000},
+{0x4c,0x01000000},
+{0x50,0x01000000},
+{0x54,0xb67ec01d},
+{0x58,0x993f201f},
+{0x5c,0x81832000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0xb87f0001},
+{0x70,0x80a3e000},
+{0x74,0x3280001c},
+{0x78,0x832ee010},
+{0x7c,0x80a6e000},
+{0xf0,0xa5},
+{0x00,0x24800002},
+{0x04,0xb6102001},
+{0x08,0x80a6c01a},
+{0x0c,0x3a800002},
+{0x10,0xb606bfff},
+{0x14,0x80a72000},
+{0x18,0x24800002},
+{0x1c,0xb8102001},
+{0x20,0x80a70019},
+{0x24,0x3a800002},
+{0x28,0xb8067fff},
+{0x2c,0xc20023c8},
+{0x30,0x80886002},
+{0x34,0x32800002},
+{0x38,0xb626801b},
+{0x3c,0x80886004},
+{0x40,0x32800002},
+{0x44,0xb826401c},
+{0x48,0x80886008},
+{0x4c,0x02800006},
+{0x50,0x832ee010},
+{0x54,0xb61ec01c},
+{0x58,0xb81f001b},
+{0x5c,0xb61ec01c},
+{0x60,0x832ee010},
+{0x64,0x8200401c},
+{0x68,0xc22366e0},
+{0x6c,0xb0062001},
+{0x70,0xc2002514},
+{0x74,0x80a60001},
+{0x78,0x0abfffb1},
+{0x7c,0x9b2e2002},
+{0xf0,0xa6},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0x031fffff},
+{0x0c,0x9002200c},
+{0x10,0x821063ff},
+{0x14,0x9a102063},
+{0x18,0xc2220000},
+{0x1c,0x9a837fff},
+{0x20,0x1cbffffe},
+{0x24,0x90022004},
+{0x28,0x81c3e008},
+{0x2c,0x01000000},
+{0x30,0x031fffff},
+{0x34,0x821063ff},
+{0x38,0xc2222008},
+{0x3c,0x92102000},
+{0x40,0x96100008},
+{0x44,0x94102000},
+{0x48,0x9a02e00c},
+{0x4c,0xd8034000},
+{0x50,0xc2022008},
+{0x54,0x80a30001},
+{0x58,0x16800005},
+{0x5c,0x9a036004},
+{0x60,0xd8222008},
+{0x64,0xd4220000},
+{0x68,0xd2222004},
+{0x6c,0x9402a001},
+{0x70,0x80a2a009},
+{0x74,0x24bffff7},
+{0x78,0xd8034000},
+{0x7c,0x92026001},
+{0xf0,0xa7},
+{0x00,0x80a26009},
+{0x04,0x04bffff0},
+{0x08,0x9602e028},
+{0x0c,0xda022008},
+{0x10,0x03200000},
+{0x14,0x8238400d},
+{0x18,0x80a00001},
+{0x1c,0x81c3e008},
+{0x20,0x90402000},
+{0x24,0xc2022004},
+{0x28,0x9b286002},
+{0x2c,0x9a034001},
+{0x30,0x031fffff},
+{0x34,0x9b2b6003},
+{0x38,0x9a034008},
+{0x3c,0x981063ff},
+{0x40,0x9a03600c},
+{0x44,0x82102009},
+{0x48,0xd8234000},
+{0x4c,0x82807fff},
+{0x50,0x1cbffffe},
+{0x54,0x9a036004},
+{0x58,0xc2020000},
+{0x5c,0x83286002},
+{0x60,0x82004008},
+{0x64,0x8200600c},
+{0x68,0x9a102009},
+{0x6c,0xd8204000},
+{0x70,0x9a837fff},
+{0x74,0x1cbffffe},
+{0x78,0x82006028},
+{0x7c,0x81c3e008},
+{0xf0,0xa8},
+{0x00,0x01000000},
+{0x04,0x9de3bdf8},
+{0x08,0xac07be58},
+{0x0c,0x7fffffbf},
+{0x10,0x90100016},
+{0x14,0xaa102000},
+{0x18,0xa8102000},
+{0x1c,0xc20527d0},
+{0x20,0x80a06000},
+{0x24,0x22800016},
+{0x28,0xaa056001},
+{0x2c,0xa4102000},
+{0x30,0xc2002514},
+{0x34,0x80a48001},
+{0x38,0x3a800011},
+{0x3c,0xaa056001},
+{0x40,0xa2100014},
+{0x44,0xa61026e0},
+{0x48,0x90100013},
+{0x4c,0xa007bff8},
+{0x50,0x7ffff23a},
+{0x54,0x920527d0},
+{0x58,0xa0044010},
+{0x5c,0xd0243e6c},
+{0x60,0xa404a001},
+{0x64,0xc2002514},
+{0x68,0x80a48001},
+{0x6c,0xa604e004},
+{0x70,0x0abffff6},
+{0x74,0xa2046028},
+{0x78,0xaa056001},
+{0x7c,0x80a56009},
+{0xf0,0xa9},
+{0x00,0x04bfffe7},
+{0x04,0xa8052004},
+{0x08,0xa4102000},
+{0x0c,0xc2002514},
+{0x10,0x80a48001},
+{0x14,0x1a800022},
+{0x18,0x01000000},
+{0x1c,0x7fffffa5},
+{0x20,0x90100016},
+{0x24,0x80a22000},
+{0x28,0xa004a001},
+{0x2c,0x0280001c},
+{0x30,0x90100016},
+{0x34,0xc207be60},
+{0x38,0xda002230},
+{0x3c,0x80a0400d},
+{0x40,0xc207be5c},
+{0x44,0x0a800007},
+{0x48,0x97286002},
+{0x4c,0xda02e6e0},
+{0x50,0x033c0000},
+{0x54,0x822b4001},
+{0x58,0x1080000d},
+{0x5c,0xc222e6e0},
+{0x60,0xc207be58},
+{0x64,0x83286002},
+{0x68,0xda0067d0},
+{0x6c,0xd802e6e0},
+{0x70,0x9b33601c},
+{0x74,0x033c0000},
+{0x78,0x822b0001},
+{0x7c,0x9b2b601c},
+{0xf0,0xaa},
+{0x00,0x8210400d},
+{0x04,0x7fffffa8},
+{0x08,0xc222e6e0},
+{0x0c,0xc2002514},
+{0x10,0x80a40001},
+{0x14,0x0abfffe2},
+{0x18,0xa4100010},
+{0x1c,0x81c7e008},
+{0x20,0x81e80000},
+{0x24,0x9de3bf98},
+{0x28,0xb2102000},
+{0x2c,0xc2002514},
+{0x30,0x80a64001},
+{0x34,0x1a800034},
+{0x38,0xb0102000},
+{0x3c,0x0303ffff},
+{0x40,0x9e1063ff},
+{0x44,0xb4102000},
+{0x48,0xc206a6e0},
+{0x4c,0x8330601c},
+{0x50,0x80a06000},
+{0x54,0x12800024},
+{0x58,0xbb2e6002},
+{0x5c,0xba102001},
+{0x60,0xb6102000},
+{0x64,0xb92ee002},
+{0x68,0xc20726e0},
+{0x6c,0x8330601c},
+{0x70,0x80a0401d},
+{0x74,0x0280000c},
+{0x78,0x80a6e00a},
+{0x7c,0xc20727d0},
+{0xf0,0xab},
+{0x00,0x8330601c},
+{0x04,0x80a0401d},
+{0x08,0x02800007},
+{0x0c,0x80a6e00a},
+{0x10,0xb606e001},
+{0x14,0x80a6e009},
+{0x18,0x08bffff4},
+{0x1c,0xb92ee002},
+{0x20,0x80a6e00a},
+{0x24,0x22800007},
+{0x28,0xf806a6e0},
+{0x2c,0xba076001},
+{0x30,0x80a7600a},
+{0x34,0x08bfffec},
+{0x38,0xb6102000},
+{0x3c,0xf806a6e0},
+{0x40,0x8337200e},
+{0x44,0x80886001},
+{0x48,0x3280000b},
+{0x4c,0xb0062001},
+{0x50,0xbb2f601c},
+{0x54,0x820f000f},
+{0x58,0x8210401d},
+{0x5c,0xc226a6e0},
+{0x60,0xbb2e6002},
+{0x64,0xc206a6e0},
+{0x68,0xc22766e0},
+{0x6c,0xb2066001},
+{0x70,0xb0062001},
+{0x74,0xc2002514},
+{0x78,0x80a60001},
+{0x7c,0x0abfffd3},
+{0xf0,0xac},
+{0x00,0xb406a004},
+{0x04,0xf2202514},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0xc2002548},
+{0x14,0x1b000004},
+{0x18,0x8210400d},
+{0x1c,0xc2202548},
+{0x20,0x033fc180},
+{0x24,0x96106004},
+{0x28,0x98102000},
+{0x2c,0x9b2b2002},
+{0x30,0xc02367d0},
+{0x34,0xc2002514},
+{0x38,0x80a30001},
+{0x3c,0x1a800005},
+{0x40,0x98032001},
+{0x44,0xc20366e0},
+{0x48,0xc22367d0},
+{0x4c,0xc223400b},
+{0x50,0x80a32009},
+{0x54,0x08bffff7},
+{0x58,0x9b2b2002},
+{0x5c,0xda002514},
+{0x60,0x033fc180},
+{0x64,0x81c3e008},
+{0x68,0xda204000},
+{0x6c,0x9de3bf98},
+{0x70,0xc2102516},
+{0x74,0x80a06000},
+{0x78,0x02800006},
+{0x7c,0x90102001},
+{0xf0,0xad},
+{0x00,0xc2002548},
+{0x04,0x80886004},
+{0x08,0x0280000a},
+{0x0c,0x82102005},
+{0x10,0xc2002548},
+{0x14,0x9b306003},
+{0x18,0x83306002},
+{0x1c,0x82086001},
+{0x20,0x9a0b6001},
+{0x24,0x80a0400d},
+{0x28,0x02800004},
+{0x2c,0x82102005},
+{0x30,0x10800008},
+{0x34,0xc2202560},
+{0x38,0xc2002560},
+{0x3c,0x9a007fff},
+{0x40,0x80a06000},
+{0x44,0x02800005},
+{0x48,0x90102002},
+{0x4c,0xda202560},
+{0x50,0x7ffff349},
+{0x54,0x01000000},
+{0x58,0xc2002548},
+{0x5c,0x9a004001},
+{0x60,0x9a0b6008},
+{0x64,0x82087ff7},
+{0x68,0x8210400d},
+{0x6c,0xc2202548},
+{0x70,0x81c7e008},
+{0x74,0x81e80000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xae},
+{0x00,0x00001682},
+{0x04,0xa5010500},
+{0x08,0xa5000000},
+{0x0c,0x00000000},
+{0x10,0x4c494348},
+{0x14,0x49444449},
+{0x18,0x88ecbdae},
+{0x1c,0x39cf8648},
+{0x20,0xa98080cd},
+{0x24,0xc96fbe71},
+{0x28,0x9243c641},
+{0x2c,0xc654cc4d},
+{0x30,0x80cb80d1},
+{0x34,0xc471cce5},
+{0x38,0xa898c9e5},
+{0x3c,0xc400c643},
+{0x40,0xa060bd13},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x4a756e20},
+{0x6c,0x32362032},
+{0x70,0x30313400},
+{0x74,0x00000000},
+{0x78,0x31343a35},
+{0x7c,0x313a3237},
+
+
+};
+
+#endif
diff --git a/drivers/input/touchscreen/Kconfig b/drivers/input/touchscreen/Kconfig
old mode 100644
new mode 100755
index 80f6386..d7804f6
--- a/drivers/input/touchscreen/Kconfig
+++ b/drivers/input/touchscreen/Kconfig
@@ -1026,5 +1026,65 @@ config TOUCHSCREEN_ZFORCE
 
 	  To compile this driver as a module, choose M here: the
 	  module will be called zforce_ts.
+	  
+config TOUCHSCREEN_GSLX680
+	tristate "GSL_X680 I2C Touchscreen"
+	depends on I2C
+	help
+	  Say Y here if you have GSL_X680 series I2C touchscreen
+	  connected to your system.
+
+	  If unsure, say N.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called gslX680.
+	  
+config TOUCHSCREEN_GSL1680F
+	tristate "GSL_1680F I2C Touchscreen"
+	depends on I2C
+	help
+	  Say Y here if you have GSL_1680F series I2C touchscreen
+	  connected to your system.
+
+	  If unsure, say N.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called gsl1680f.
+
+config TOUCHSCREEN_GSL3680
+	tristate "GSL3680 I2C Touchscreen"
+       depends on I2C
+       help
+         Say Y here if you have GSL3680 series I2C touchscreen
+         connected to your system.
+
+         If unsure, say N.
+
+         To compile this driver as a module, choose M here: the
+         module will be called gsl3680.
+	  
+config TOUCHSCREEN_FT5X06
+	tristate "ft5x06 I2C Touchscreen"
+	depends on I2C
+	help
+	  Say Y here if you have ft5x06 series I2C touchscreen
+	  connected to your system.
+
+	  If unsure, say N.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called ft5x06.
+	  
+config TOUCHSCREEN_DETECT
+	tristate "CTP_DETECT I2C Touchscreen"
+	depends on I2C
+	help
+	  Say Y here if you have CTP_DETECT series I2C touchscreen
+	  connected to your system.
+
+	  If unsure, say N.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called ctp_detect.
 
 endif
diff --git a/drivers/input/touchscreen/Makefile b/drivers/input/touchscreen/Makefile
old mode 100644
new mode 100755
index 44deea7..b4c77b6
--- a/drivers/input/touchscreen/Makefile
+++ b/drivers/input/touchscreen/Makefile
@@ -84,3 +84,8 @@ obj-$(CONFIG_TOUCHSCREEN_W90X900)	+= w90p910_ts.o
 obj-$(CONFIG_TOUCHSCREEN_SX8654)	+= sx8654.o
 obj-$(CONFIG_TOUCHSCREEN_TPS6507X)	+= tps6507x-ts.o
 obj-$(CONFIG_TOUCHSCREEN_ZFORCE)	+= zforce_ts.o
+obj-$(CONFIG_TOUCHSCREEN_GSLX680)		  += GSL2681_M2111/
+obj-$(CONFIG_TOUCHSCREEN_GSL1680F)		+= GSL1680F/
+obj-$(CONFIG_TOUCHSCREEN_GSL3680)     += GSL3680/
+obj-$(CONFIG_TOUCHSCREEN_FT5X06)		  += FT5406/
+obj-$(CONFIG_TOUCHSCREEN_DETECT)		  += ctp_detect/
\ No newline at end of file
diff --git a/drivers/input/touchscreen/ctp_detect/Makefile b/drivers/input/touchscreen/ctp_detect/Makefile
new file mode 100755
index 0000000..f9d9c09
--- /dev/null
+++ b/drivers/input/touchscreen/ctp_detect/Makefile
@@ -0,0 +1,5 @@
+#
+# Makefile for the ctp_detect tp driver
+#
+
+obj-m += ctp_detect.o
diff --git a/drivers/input/touchscreen/ctp_detect/ctp_detect.c b/drivers/input/touchscreen/ctp_detect/ctp_detect.c
new file mode 100755
index 0000000..4ca885a
--- /dev/null
+++ b/drivers/input/touchscreen/ctp_detect/ctp_detect.c
@@ -0,0 +1,456 @@
+/*
+ * ctp_detect.c  --  auto detect ctp device
+ *
+ * Copyright 2012 Actions Semi Inc.
+ * Author: Actions Semi, Inc.
+ *
+ *  This program is free software; you can redistribute  it and/or modify it
+ *  under  the terms of  the GNU General  Public License as published by the
+ *  Free Software Foundation;  either version 2 of the  License, or (at your
+ *  option) any later version.
+ *
+ */
+
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/input.h>
+#include <linux/interrupt.h>
+#include <linux/i2c.h>
+#include <linux/delay.h>
+#include <linux/jiffies.h>
+#include <linux/cdev.h>
+#include <asm/uaccess.h>
+#include <linux/pm_runtime.h>
+#include <linux/regulator/consumer.h>
+#include <linux/errno.h>
+#include <linux/kernel.h>
+#include <linux/platform_device.h>
+#include <linux/async.h>
+#include <linux/hrtimer.h>
+#include <linux/init.h>
+#include <linux/ioport.h>
+#include <asm/irq.h>
+#include <asm/io.h>
+#include <linux/gpio.h>
+#include <asm/prom.h>
+#include <mach/gpio.h>
+#include <linux/of.h>
+#include <linux/of_i2c.h>
+#include <linux/of_gpio.h>
+
+#include "ctp_detect.h"
+
+#define CFG_TP_USE_CONFIG 1
+//default value
+#define CTP_RESET_PIN       OWL_GPIO_PORTB(3)
+#define CTP_I2C_ADAPTER     (1)
+#define CTP_DETECT_NAME		"ctp_detect"
+#define CFG_CTP_DETECT_LIST "ctp_detect_list"
+static int scan_start = 0;
+
+struct ctp_cfg {
+	unsigned int sirq;
+	unsigned int gpio_reset;
+	unsigned int i2cAddr;
+	char const* regulator; 
+	unsigned int vol_max;
+	unsigned int vol_min;
+}; 
+static struct ctp_cfg ctp_cfg;
+static unsigned ctp_adapter = CTP_I2C_ADAPTER;
+
+struct i2c_client	*client;
+struct i2c_adapter *adap;
+struct delayed_work *ctp_detect_work;
+
+static char export_ko_name[50];
+
+static struct kobject *kobj; 
+
+static int export_ko_offset = 0;
+//CTP POWER
+static struct regulator *tp_regulator = NULL;
+#define CTP_POWER_ID		("ldo5")
+#define CTP_POWER_MIN_VOL	(3300000)
+#define CTP_POWER_MAX_VOL	(3300000)   
+
+static struct regulator *regulator_init(const char *name, int minvol, int maxvol)
+{
+	struct regulator *power;
+	int ret;
+
+	power = regulator_get(NULL,name);
+    	if (IS_ERR(power)) {
+		printk("err,regulator_get fail\n!!!");
+		return NULL;
+	}
+ 
+	if (regulator_set_voltage(power, minvol, maxvol)) {
+        	printk("err,cannot set voltage\n!!!");
+        	regulator_put(power);
+		return NULL;
+	}
+	ret = regulator_enable(power);
+	return (power);
+}
+
+static inline void regulator_deinit(struct regulator *power)
+{
+	regulator_disable(power);
+	regulator_put(power);
+}
+
+#if CFG_TP_USE_CONFIG
+static int ctp_of_data_get(struct platform_device *pdev)
+{
+    int ret = -1;
+    int idx = 0;
+    struct ctp_device *dev = NULL;
+    char cfg_name[32];
+    u32 cfg_detect = 0;
+    enum of_gpio_flags flags;
+    unsigned int scope[2];
+
+    struct device_node *of_node;
+    struct device_node *list_node;
+    
+    of_node = pdev->dev.of_node;
+
+    /* load gpio info */
+    if (!of_find_property(of_node, "rst_gpios", NULL)) {
+        printk(KERN_ERR"<isp>err: no config gpios\n");
+	ctp_cfg.gpio_reset = CTP_RESET_PIN;
+    }else{
+        ctp_cfg.gpio_reset = of_get_named_gpio_flags(of_node, "rst_gpios", 0, &flags);
+    }
+
+    /* load tp regulator */
+    if (of_find_property(of_node, "tp_vcc", NULL)) {
+        ret = of_property_read_string(of_node, "tp_vcc", &ctp_cfg.regulator);
+        if (ret < 0) {
+            printk(KERN_ERR"can not read tp_vcc power source\n");
+        }
+
+        if (of_property_read_u32_array(of_node, "vol_range", scope, 2)) {
+            printk(KERN_ERR" failed to get voltage range\n");
+        }
+        ctp_cfg.vol_min=scope[0];
+        ctp_cfg.vol_max=scope[1];
+    }
+
+    
+    ret = of_property_read_u32(of_node, "adapter_id", &ctp_adapter);
+    if (ret == 0) {
+        ctp_adapter = CTP_I2C_ADAPTER;
+    }
+    
+    list_node = of_find_compatible_node(NULL, NULL, "ctp_detect_list");
+    
+    /* get detect list config */
+    for (idx=0; idx < ARRAY_SIZE(ctp_device_list); idx++) {
+        dev = &ctp_device_list[idx];        
+
+        sprintf(cfg_name, "%s",  dev->name);
+        ret = of_property_read_u32(list_node, dev->name, &cfg_detect);
+        if (ret == 0) {
+            dev->need_detect = (bool)cfg_detect;
+        }
+        printk(KERN_ERR" ctp detect list: %s=%d, cfg_detect = %d\n", dev->name, dev->need_detect, cfg_detect);
+    }
+
+    return ret;
+}
+#endif
+
+
+int ctp_init(void)
+{
+	int ret=0;
+	printk("in %s.\n",__FUNCTION__);
+	tp_regulator = regulator_init(CTP_POWER_ID, CTP_POWER_MIN_VOL, CTP_POWER_MAX_VOL);
+	if ( !tp_regulator ) {
+		printk("ctp init power failed");
+		ret = -EINVAL;
+		return ret;
+	}
+
+	ret=gpio_request(ctp_cfg.gpio_reset, CTP_DETECT_NAME);
+	if(ret) return ret;
+	
+	gpio_direction_output(ctp_cfg.gpio_reset, 1);
+	msleep(20); 
+	gpio_direction_output(ctp_cfg.gpio_reset, 0);
+	msleep(50); 
+	gpio_direction_output(ctp_cfg.gpio_reset, 1);
+	msleep(50); 
+
+	return ret;
+}
+
+int ctp_deinit(void)
+{
+	int ret=0;
+	printk("in %s.\n",__FUNCTION__);
+	if ( tp_regulator )
+		regulator_deinit(tp_regulator);
+
+	gpio_free(ctp_cfg.gpio_reset);
+	return ret;
+}
+
+bool test_i2c(struct ctp_device *dev)
+{
+	int ret=-1, retry=0;
+	uint8_t test_data[1] = { 0 };
+	
+	if(dev->need_detect==false){
+		printk("Skip the ctp:%s,no need detect.\n",dev->name);
+		return false;
+	}
+//need_detect==true
+	client->addr=dev->i2c_addr;
+	if(dev->has_chipid==false){
+		for(retry=0;retry<3;retry++){
+			ret = i2c_master_send(client, test_data, 1);
+			if(ret==1)
+				break;
+			msleep(5);
+		}
+		if(ret==1){
+			printk("Find u,u are:%s\n",dev->name);
+			return true;
+		}
+		else{
+			printk("Is not the ctp:%s,skip it.\n",dev->name);
+			return false;
+		}
+	}
+	else if(dev->has_chipid==true){
+		for(retry=0;retry<3;retry++){
+			ret = i2c_smbus_read_byte_data(client,dev->chipid_req);
+			if (ret >= 0)
+				break;
+			msleep(5);
+		}
+		printk("read the chipid is:0x%x\n",ret);
+		if(ret==dev->chipid){
+			printk("Find u,u are:%s\n",dev->name);
+			return true;
+		}
+		else{
+			printk("Is not the ctp:%s,skip it.\n",dev->name);
+			return false;
+		}
+	}
+
+	return false;
+}
+
+int ctp_detect(void)
+{
+	int idx=0;
+	printk("%s,line:%d.\n",__func__,__LINE__);
+	client = kzalloc(sizeof *client, GFP_KERNEL);
+	if (!client)
+		return -ENOMEM;
+	
+	adap = i2c_get_adapter(ctp_adapter);
+	client->adapter = adap;
+	
+	if ( scan_start > 0 && scan_start < ARRAY_SIZE(ctp_device_list) ) {
+        if (true == test_i2c(&ctp_device_list[scan_start])) {
+            return scan_start;
+        }
+    }
+
+	for(idx=0;idx<sizeof(ctp_device_list)/sizeof(struct ctp_device);idx++){
+		if(true==test_i2c(&ctp_device_list[idx]))
+			return idx;
+	}
+
+	return -1;
+}
+
+static ssize_t name_show(struct device *dev,  struct device_attribute *attr,  
+		char *buf)  
+{  
+    return strlcpy(buf, export_ko_name,sizeof(export_ko_name)); 
+}  
+static ssize_t offset_show(struct device *dev,  struct device_attribute *attr,  
+        char *buf)  
+{  
+    return sprintf(buf, "%d", export_ko_offset); 
+}  
+
+static DEVICE_ATTR(name,0400,name_show,NULL); 
+static DEVICE_ATTR(offset, 0400, offset_show, NULL); 
+
+static void ctp_monitor(struct work_struct *work)
+{
+	int ret=-1;
+	ret=ctp_init();
+	if(ret){
+		printk("ctp init failed.\n");
+		goto loop;
+	}
+
+	ret=ctp_detect();
+	if(ret<0){
+		printk("Sorry,no one suit!!!\n");
+		goto deinit;
+	}
+	else{
+		ctp_deinit();
+		strlcpy(export_ko_name,ctp_device_list[ret].ko_name,strlen(ctp_device_list[ret].ko_name)+1);
+		if (ctp_device_list[ret].has_chipid == true) {
+			export_ko_offset = ret;
+		} else {
+			export_ko_offset = 0;
+		}
+		cancel_delayed_work_sync(ctp_detect_work);
+		return;
+	}
+	
+deinit:
+	ctp_deinit();
+loop:	
+	/* reschedule for the next time */
+    schedule_delayed_work(ctp_detect_work, 300);
+}
+
+static int ctp_detect_probe(struct platform_device *pdev)
+{
+	int ret = 0;
+	printk("in %s.\n",__FUNCTION__);
+
+#if CFG_TP_USE_CONFIG
+    ctp_of_data_get(pdev);
+#else
+	ctp_cfg.gpio_reset = CTP_RESET_PIN;
+	ctp_adapter = CTP_I2C_ADAPTER;
+#endif
+
+	kobj = kobject_create_and_add("ctp_detect", NULL);  
+	if (kobj == NULL) {  
+		printk("kobject_create_and_add failed.\n"); 
+		ret = -ENOMEM;  
+		goto err_kobject_create;
+	} 
+	
+	ret = sysfs_create_file(kobj,&dev_attr_name.attr);  
+	if (ret < 0){
+		printk("sysfs_create_file name failed.\n");
+		goto err_sysfs_create;
+	}
+		
+	ret = sysfs_create_file(kobj,&dev_attr_offset.attr);  
+	if (ret < 0){
+		printk("sysfs_create_file offset failed.\n");
+		goto err_sysfs_create;
+	}
+	ctp_detect_work = kzalloc(sizeof(struct delayed_work), GFP_KERNEL);
+    if (ctp_detect_work == NULL)
+        goto err_sysfs_create;
+	INIT_DELAYED_WORK(ctp_detect_work, ctp_monitor);
+    schedule_delayed_work(ctp_detect_work, 100);
+
+	return 0;
+	
+err_sysfs_create:	
+	kobject_del(kobj);
+err_kobject_create:
+	return ret;
+}
+static int ctp_detect_remove(struct platform_device *pdev)
+{
+	printk("in %s.\n",__FUNCTION__);
+
+	sysfs_remove_file(kobj,&dev_attr_name.attr);
+	kobject_del(kobj);
+	kfree(client);
+	kfree(ctp_detect_work);
+	return 0;
+}
+
+static struct of_device_id ctp_detect_of_match[] = {
+	{ .compatible = "owl-ctp-detect" },
+	{ }
+};
+
+static struct platform_driver detect_driver = {
+    .driver = {
+        .name = CTP_DETECT_NAME,
+        .owner = THIS_MODULE,
+        .of_match_table	= of_match_ptr(ctp_detect_of_match),
+    },
+    .probe = ctp_detect_probe,
+    .remove = ctp_detect_remove,
+};
+
+#if 0
+static int ctp_detect_suspend(struct platform_device *pdev, pm_message_t m)
+{
+	printk("in %s.\n",__FUNCTION__);
+	if(delayed_work_pending(ctp_detect_work)){
+		cancel_delayed_work_sync(ctp_detect_work);
+	}
+	return 0;
+}
+static int ctp_detect_resume(struct platform_device *pdev)
+{
+	printk("in %s.\n",__FUNCTION__);
+	schedule_delayed_work(ctp_detect_work, 100);
+	return 0;
+}
+static struct platform_driver detect_driver = {
+	.driver = {
+		.name = CTP_DETECT_NAME,
+		.owner = THIS_MODULE,
+	},
+	.probe = ctp_detect_probe,
+	.remove = ctp_detect_remove,
+	.suspend = ctp_detect_suspend,
+	.resume = ctp_detect_resume,
+};
+
+static void detect_device_release(struct device * dev)
+{
+    return;
+}
+static struct platform_device detect_device = {
+    .name = CTP_DETECT_NAME,
+	.dev = {
+        .release = detect_device_release,
+    }
+};
+#endif
+static int __init ctp_detect_init(void)
+{
+	int ret;
+	printk("==ctp_detect_init==\n");
+
+	//ret=platform_device_register(&detect_device);
+	//if(ret) return ret;
+	ret=platform_driver_register(&detect_driver);
+	return ret;
+}
+
+static void __exit ctp_detect_exit(void)
+{
+	printk("==ctp_detect_exit==\n");
+	
+	platform_driver_unregister(&detect_driver);
+	//platform_device_unregister(&detect_device);
+
+	return;
+}
+
+module_init(ctp_detect_init);
+module_exit(ctp_detect_exit);
+
+module_param(scan_start, int, S_IRUSR);
+MODULE_LICENSE("GPL");
+MODULE_DESCRIPTION("CTP auto detect driver");
+MODULE_AUTHOR("Actions Semi, Inc");
+MODULE_ALIAS("platform:ctp_detect");
+
diff --git a/drivers/input/touchscreen/ctp_detect/ctp_detect.h b/drivers/input/touchscreen/ctp_detect/ctp_detect.h
new file mode 100755
index 0000000..d720163
--- /dev/null
+++ b/drivers/input/touchscreen/ctp_detect/ctp_detect.h
@@ -0,0 +1,173 @@
+#ifndef _CTP_DETECT_H_
+#define _CTP_DETECT_H_
+
+struct ctp_device
+{
+	char * name;			//0.IC\C3\FB\B3\C6
+	char * ko_name; 		//1.ko\C3\FB\B3\C6
+	bool need_detect;		//2.\CAǷ\F1ɨ\C3\E8
+	unsigned int i2c_addr;	//3.i2c\B5\D8ַ
+	bool has_chipid;		//4.\D3\D0chipid
+	unsigned int chipid_req;//5.chipid\BCĴ\E6\C6\F7
+	unsigned int chipid;	//6.chipid
+};
+
+//ÿ\D4\F6\BC\D3һ\BF\EEIC\A3\AC\CD\F9\D5\E2\B8\F6\C1б\ED\C0\EF\CC\ED\BC\D3
+struct ctp_device ctp_device_list[]=
+{
+//ע\D2\E2\C8\E7\B9\FB\C1\BD\B8\F6ic\B5\C4i2c\B5\D8ַ\CF\E0ͬ\A3\AC\B0\D1\D3\D0chipid\B5ķ\C5\D4\DAǰ\C3档
+	//ICN83XX
+	{
+		"ICN83XX",			//0.IC\C3\FB\B3\C6
+		"ctp_icn83xx.ko", //"ctp_icn838x_ts_iic.ko"	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x40,				//3.i2c\B5\D8ַ
+		true,				//4.\D3\D0chipid
+		0x0a,				//5.chipid\BCĴ\E6\C6\F7
+		0x83,				//6.chipid
+	},
+	//GSL1680,GSL3670,GSL3680,\D2\F2\D5\E2\C8\FD\BF\EEͨ\B5\C0\CA\FD\B2\BBͬ\A3\ACһ\B0㲻\BB\E1\BB\EC\D3ã\AC
+	//\C7\D21680\D3\D0D\B0\E6E\B0棬3680\D3\D0A\B0\E6B\B0棬chipid\BE\F9\B2\BBͬ\A3\ACȫ\B2\BFɨ\C3\E8̫\C2鷳\A3\AC\D5\E2\C0ﲻ\D4\D9\C7\F8\B7֡\A3
+	{
+		"GSLX6X0",			//0.IC\C3\FB\B3\C6
+		"ctp_gslX680.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x40,				//3.i2c\B5\D8ַ
+		false,				//4.\D3\D0chipid
+		0xfc,					//5.chipid\BCĴ\E6\C6\F7
+		0x0,//1680:0x0			//6.chipid
+	},
+	//FT5206,FT5406
+	{
+		"FT52-406",			//0.IC\C3\FB\B3\C6
+		"ctp_ft5X06.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x38,				//3.i2c\B5\D8ַ
+		true,				//4.\D3\D0chipid
+		0xA3,				//5.chipid\BCĴ\E6\C6\F7
+		0x55,				//6.chipid
+	},
+	//FT5606
+	{
+		"FT5606",			//0.IC\C3\FB\B3\C6
+		"ctp_ft5X06.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x38,				//3.i2c\B5\D8ַ
+		true,				//4.\D3\D0chipid
+		0xA3,				//5.chipid\BCĴ\E6\C6\F7
+		0x08,				//6.chipid
+	},
+	//GT813
+	{
+		"GT813",			//0.IC\C3\FB\B3\C6
+		"ctp_goodix_touch.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x5d,				//3.i2c\B5\D8ַ
+		true,				//4.\D3\D0chipid
+		0xf7d,				//5.chipid\BCĴ\E6\C6\F7
+		0x13,				//6.chipid
+	},
+	//AW5206
+	{
+		"AW5206",			//0.IC\C3\FB\B3\C6
+		"ctp_aw5306.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x38,				//3.i2c\B5\D8ַ
+		true,				//4.\D3\D0chipid
+		0x01,				//5.chipid\BCĴ\E6\C6\F7
+		0xA8,				//6.chipid
+	},
+	//AW5209
+	{
+		"AW5209",			//0.IC\C3\FB\B3\C6
+		"ctp_aw5209.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x38,				//3.i2c\B5\D8ַ
+		true,				//4.\D3\D0chipid
+		0x01,				//5.chipid\BCĴ\E6\C6\F7
+		0xB8,				//6.chipid
+	},
+	//CT36X
+	{
+		"CT36X",			//0.IC\C3\FB\B3\C6
+		"ctp_ct36x_i2c_ts.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x01,				//3.i2c\B5\D8ַ
+		true,				//4.\D3\D0chipid
+		0x00,//???				//5.chipid\BCĴ\E6\C6\F7
+		0x00,//0x02:CT360,0x01:CT363,CT365	//6.chipid
+	},
+	//HL3X06
+	{
+		"HL3X06",			//0.IC\C3\FB\B3\C6
+		"ctp_hl3x06.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x3B,				//3.i2c\B5\D8ַ
+		false,				//4.\D3\D0chipid
+		0x00,				//5.chipid\BCĴ\E6\C6\F7
+		0x30,				//6.chipid
+	},
+	//ILITEK
+	{
+		"ILITEK",			//0.IC\C3\FB\B3\C6
+		"ctp_ilitek_aimvF.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x41,				//3.i2c\B5\D8ַ
+		false,	//ȷʵ\CE\DE			//4.\D3\D0chipid
+		0,				//5.chipid\BCĴ\E6\C6\F7
+		0,				//6.chipid
+	},
+	//ili2672
+	{
+		"ili2672",			//0.IC\C3\FB\B3\C6
+		"ctp_ili2672.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x41,				//3.i2c\B5\D8ַ
+		false,	//ȷʵ\CE\DE			//4.\D3\D0chipid
+		0,				//5.chipid\BCĴ\E6\C6\F7
+		0,				//6.chipid
+	},
+	//ft5x06
+	{
+		"ft5x06",			//0.IC\C3\FB\B3\C6
+		"ctp_ft5x06.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x38,				//3.i2c\B5\D8ַ
+		false,	//ȷʵ\CE\DE			//4.\D3\D0chipid
+		0,				//5.chipid\BCĴ\E6\C6\F7
+		0,				//6.chipid
+	},	
+	//MT395
+	{
+		"MT395",			//0.IC\C3\FB\B3\C6
+		"ctp_mt395.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x67,				//3.i2c\B5\D8ַ
+		false,				//4.\D3\D0chipid
+		0,				//5.chipid\BCĴ\E6\C6\F7
+		0,				//6.chipid
+	},	
+	//NOVATEK
+	{
+		"NT1100X",			//0.IC\C3\FB\B3\C6
+		"ctp_Novatek_TouchDriver.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x01,				//3.i2c\B5\D8ַ
+		false,				//4.\D3\D0chipid
+		0x00,	//???		//5.chipid\BCĴ\E6\C6\F7
+		0,	//???			//6.chipid
+	},	
+	//SSD254X
+	{
+		"SSD254X",			//0.IC\C3\FB\B3\C6
+		"ctp_ssd254x.ko",	//1.ko\C3\FB\B3\C6
+		true,				//2.\CAǷ\F1ɨ\C3\E8
+		0x48,				//3.i2c\B5\D8ַ
+		true,				//4.\D3\D0chipid
+		0x02,					//5.chipid\BCĴ\E6\C6\F7
+		0x25,	//0x2541,0x2543			//6.chipid
+	},		
+};
+
+
+#endif
-- 
1.7.5.4

