From 063aab1daef080f36e04a2c8b2850db8eeae484c Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Mon, 21 Nov 2016 10:26:18 +0800
Subject: [PATCH 2/3] drivers: mmc: implement mmc faeature

on customer's demo board, there is a emmc IC(EMMC08G-M325-A53)
connected with SD2 interface, do below modification to support the
emmc IC.
1. Enable emmc node in dts file.
2. Add code to support R1 response without checking CRC.
3. There is a level shift IC between SoC and emmc IC to convert 3.3v
   into 1.8v, so, delete capability MMC_CAP_1_8V_DDR. Because
   MMC_CAP_UHS_DDR50 capability is only available when set
   MMC_CAP_1_8V_DDR, so also delete MMC_CAP_UHS_DDR50.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../boot/dts/actduino_bubble_gum_sdboot_linux.dts  |    2 +-
 drivers/mmc/host/gl520x_mmc.c                      |   15 ++++++++++++++-
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/arch/arm/boot/dts/actduino_bubble_gum_sdboot_linux.dts b/arch/arm/boot/dts/actduino_bubble_gum_sdboot_linux.dts
index 36c4ac3..1757d79 100755
--- a/arch/arm/boot/dts/actduino_bubble_gum_sdboot_linux.dts
+++ b/arch/arm/boot/dts/actduino_bubble_gum_sdboot_linux.dts
@@ -1001,7 +1001,7 @@
 		pinctrl-names = "default";
 		pinctrl-0 = <&mmc2_state_default>;
 		card_type = "emmc";  /* only: "memory", "wifi", or "emmc" */
-		status = "disable";
+		status = "okay";
 	};
 	
 	usb@b02b8000 {
diff --git a/drivers/mmc/host/gl520x_mmc.c b/drivers/mmc/host/gl520x_mmc.c
index ca66a1f..ceb8597 100755
--- a/drivers/mmc/host/gl520x_mmc.c
+++ b/drivers/mmc/host/gl520x_mmc.c
@@ -769,6 +769,19 @@ static int acts_mmc_send_command(struct gl520xmmc_host *host,
 		
 		break;
 
+	case MMC_RSP_R1 & ~MMC_RSP_CRC:
+		if (data) {
+			if (data->flags & MMC_DATA_READ)
+				mode = SD_CTL_TM(4);
+			else
+				mode = SD_CTL_TM(5);
+		} else {
+			mode = SD_CTL_TM(1);
+		}
+		cmd_rsp_mask = 	SD_STATE_CLNR;
+
+		break;
+
 	case MMC_RSP_R1B:
 		mode = SD_CTL_TM(3);
 		cmd_rsp_mask =   SD_STATE_CLNR 
@@ -1734,7 +1747,7 @@ static int __init acts_mmc_probe(struct platform_device *pdev)
 		mmc->caps &= ~MMC_CAP_4_BIT_DATA;
 
 	if (mmc_card_expected_emmc(host->type_expected))
-		mmc->caps |= MMC_CAP_1_8V_DDR | MMC_CAP_UHS_DDR50|MMC_CAP_8_BIT_DATA;
+		mmc->caps |= MMC_CAP_1_8V_DDR;
 	//emmc and sd card support earse (discard,trim,sediscard)
 	if(mmc_card_expected_emmc(host->type_expected)||\
 		mmc_card_expected_mem(host->type_expected)){
-- 
1.7.5.4

