From e2fcd75f6e867e81252bef33d898ab4d0caafb7f Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Thu, 3 Nov 2016 11:22:35 +0800
Subject: [PATCH 1/2] arm: mach: fix kernel crash when running kdump

when running kdump, kernel occur crash, core trace as below:

Unable to handle kernel paging request at virtual address b8000800
pgd = c0004000
[b8000800] *pgd=00000000
Internal error: Oops: 5 [#1] PREEMPT SMP ARM
Modules linked in:
CPU: 0 PID: 0 Comm: swapper Not tainted 4.1.21-WR8.0.0.0_standard #135
Hardware name: gs705a
task: c0c78530 ti: c0c66000 task.ti: c0c66000
PC is at owl_check_revision+0x50/0xac
LR is at owl_check_revision+0x2c/0xac
pc : [<c0bd884c>]    lr : [<c0bd8828>]    psr: 800001d3
sp : c0c67f28  ip : c0058338  fp : c0c67f44
r10: 00000003  r9 : c0c74660  r8 : c0c78240
r7 : c0d1ea40  r6 : c0da5f7c  r5 : c0c78244  r4 : fffb8000
r3 : b8000000  r2 : c0d1ea54  r1 : 00000000  r0 : 00000001
Flags: Nzcv  IRQs off  FIQs off  Mode SVC_32  ISA ARM  Segment kernel
Control: 10c5387d  Table: 0800404a  DAC: 00000015
Process swapper (pid: 0, stack limit = 0xc0c66210)
Stack: (0xc0c67f28 to 0xc0c68000)
7f20:                   0fe00000 c0c25448 c0d1eb80 c0d1ea40 c0c67f54 c0c67f48
7f40: c0bd88b8 c0bd8808 c0c67fb4 c0c67f58 c0bd2dd4 c0bd88b4 c0c67f68 c0c67f78
7f60: c0c67f84 c0c73d98 00000000 00000000 00000000 c0c67fac 00000000 00000000
7f80: 00000000 c0076ae8 00000001 00000000 00000000 ffffffff c0c73d00 0800406a
7fa0: 414fc091 00000000 c0c67ff4 c0c67fb8 c0bce9d0 c0bd24f8 00000000 00000000
7fc0: 00000000 00000000 00000000 c0c30448 c0d1eb94 c0c73d80 c0c30444 c0c79850
7fe0: 0800406a 414fc091 00000000 c0c67ff8 0800807c c0bce95c 00000000 00000000
[<c0bd884c>] (owl_check_revision) from [<c0bd88b8>] (owl_init_early+0x10/0x18)
[<c0bd88b8>] (owl_init_early) from [<c0bd2dd4>] (setup_arch+0x8e8/0x9bc)
[<c0bd2dd4>] (setup_arch) from [<c0bce9d0>] (start_kernel+0x80/0x3e8)
[<c0bce9d0>] (start_kernel) from [<0800807c>] (0x800807c)
Code: e0233492 e59f2058 e1a03603 e2433448 (e5930800)
---[ end trace cb88537fdc8fa200 ]---
Kernel panic - not syncing: Attempted to kill the idle task!
---[ end Kernel panic - not syncing: Attempted to kill the idle task!

In function owl_check_revision(), getting version info from constant
address 0, but the second kernel run from address offset 128MB, so
kernel crashes.
To fix this issue, add code to get the offset of current kernel, and
then get version info with offset.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/mach-owl/board-owl.c |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-owl/board-owl.c b/arch/arm/mach-owl/board-owl.c
index 83eb23f..7a2dfe4 100755
--- a/arch/arm/mach-owl/board-owl.c
+++ b/arch/arm/mach-owl/board-owl.c
@@ -143,7 +143,9 @@ extern void owl_powergate_earlyinit(void);
 
 void __init owl_check_revision(void)
 {
-	char *vddr = kmap_atomic(pfn_to_page(PFN_DOWN(0)));
+	const u64 phys_offset = __pa(PAGE_OFFSET);
+
+	char *vddr = kmap_atomic(pfn_to_page(PFN_DOWN(0+phys_offset)));
 	memcpy(&system_serial_low, vddr+0x800, sizeof(system_serial_low));
 	memcpy(&system_serial_high, vddr+0x804, sizeof(system_serial_high));
 	kunmap_atomic(vddr);
-- 
1.7.5.4

