From 5cd900643a165d9bcf5c57e5e4164ec85a327afb Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Mon, 16 Jan 2017 14:23:21 +0800
Subject: [PATCH 1/2] driver: video: move ISR registration out of spinlock
 critical region
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

In de_irq_init() function, ISR registration code is in the spinlock
critical region. If you enable lock debugging kernel configure as below:
CONFIG_DEBUG_SPINLOCK=y
CONFIG_DEBUG_MUTEXES=y
CONFIG_DEBUG_LOCK_ALLOC=y
CONFIG_PROVE_LOCKING=y
CONFIG_LOCKDEP=y
CONFIG_DEBUG_LOCKDEP=y
CONFIG_DEBUG_ATOMIC_SLEEP=y
CONFIG_DEBUG_LOCKING_API_SELFTESTS=y
CONFIG_LOCK_TORTURE_TEST=m
CONFIG_TRACE_IRQFLAGS=y
CONFIG_STACKTRACE=y

there will be warning trace occurring as below:
WARNING: CPU: 2 PID: 1 at kernel-source/kernel/locking/lockdep.c:2755 lockdep_trace_al)
DEBUG_LOCKS_WARN_ON(irqs_disabled_flags(flags))
Modules linked in:
CPU: 2 PID: 1 Comm: swapper/0 Not tainted 4.1.21-WR8.0.0.0_standard #8
Hardware name: gs705a
[<c00191a8>] (unwind_backtrace) from [<c0013d28>] (show_stack+0x20/0x24)
[<c0013d28>] (show_stack) from [<c098fef0>] (dump_stack+0xa0/0xd8)
[<c098fef0>] (dump_stack) from [<c0037e1c>] (warn_slowpath_common+0x98/0xc4)
[<c0037e1c>] (warn_slowpath_common) from [<c0037e88>] (warn_slowpath_fmt+0x40/0x48)
[<c0037e88>] (warn_slowpath_fmt) from [<c0088694>] (lockdep_trace_alloc+0xd4/0x118)
[<c0088694>] (lockdep_trace_alloc) from [<c0191ef8>] (kmem_cache_alloc_trace+0x3c/0x52c)
[<c0191ef8>] (kmem_cache_alloc_trace) from [<c009b0fc>] (request_threaded_irq+0xb0/0x148)
[<c009b0fc>] (request_threaded_irq) from [<c0d50434>] (owl_de_probe+0x31c/0x3e8)
[<c0d50434>] (owl_de_probe) from [<c04e4da4>] (platform_drv_probe+0x58/0xa8)
[<c04e4da4>] (platform_drv_probe) from [<c04e28c0>] (driver_probe_device+0x104/0x26c)
[<c04e28c0>] (driver_probe_device) from [<c04e2afc>] (__driver_attach+0x80/0xa4)
[<c04e2afc>] (__driver_attach) from [<c04e0e58>] (bus_for_each_dev+0x7c/0xa0)
[<c04e0e58>] (bus_for_each_dev) from [<c04e235c>] (driver_attach+0x28/0x30)
[<c04e235c>] (driver_attach) from [<c04e1fa8>] (bus_add_driver+0xf4/0x1dc)
[<c04e1fa8>] (bus_add_driver) from [<c04e3c98>] (driver_register+0xac/0xf0)
[<c04e3c98>] (driver_register) from [<c04e4cc0>] (__platform_driver_register+0x58/0x6c)
[<c04e4cc0>] (__platform_driver_register) from [<c0d50020>] (owl_de_init+0x18/0x70)
[<c0d50020>] (owl_de_init) from [<c00097e4>] (do_one_initcall+0x124/0x1e0)
[<c00097e4>] (do_one_initcall) from [<c0d20f40>] (kernel_init_freeable+0x200/0x2fc)
[<c0d20f40>] (kernel_init_freeable) from [<c098af30>] (kernel_init+0x1c/0xf4)
[<c098af30>] (kernel_init) from [<c000f4a8>] (ret_from_fork+0x14/0x2c)

This issue is introduced by commit 91ad4ed00ed4
(“video: add owl video drivers”) when merge SDK patch related with
video driver.
The reason is that we should not disable interrupt when do ISR
registration. So, move ISR registration out of spinlock critical
region to fix this issue.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/owl/dss/de.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/video/fbdev/owl/dss/de.c b/drivers/video/fbdev/owl/dss/de.c
index d2e3ed6..4302900 100755
--- a/drivers/video/fbdev/owl/dss/de.c
+++ b/drivers/video/fbdev/owl/dss/de.c
@@ -263,12 +263,6 @@ static int de_irq_init(void)
 {
 	unsigned long flags;
 
-	spin_lock_irqsave(&de_pdata->irq_lock, flags);
-
-	memset(de_pdata->registered_isr, 0, sizeof(de_pdata->registered_isr));
-	
-	de_set_irqs();
-	
 	/* TODO */
 	de_pdata->irq = platform_get_irq(de_pdata->pdev, 0);
 	if (de_pdata->irq <= 0) {
@@ -280,6 +274,12 @@ static int de_irq_init(void)
 		return -EBUSY;
 	}
 
+	spin_lock_irqsave(&de_pdata->irq_lock, flags);
+
+	memset(de_pdata->registered_isr, 0, sizeof(de_pdata->registered_isr));
+
+	de_set_irqs();
+
 	DSSINFO("de irq init ok\n");
 	spin_unlock_irqrestore(&de_pdata->irq_lock, flags);
 
-- 
1.7.5.4

