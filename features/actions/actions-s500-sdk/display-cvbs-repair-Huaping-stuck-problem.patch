From 73965338bcda0b0337db59df98b1d5c734804bff Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E8=B0=A2=E5=8F=8C=E5=8F=8C?= <xieshsh@srv-pad-compile2.actions.com.cn>
Date: Mon, 11 Jan 2016 14:03:57 +0800
Subject: [PATCH 59/62] display: cvbs: repair Huaping stuck problem

commit bd592f466a6474691784fc8c87618fcff2126d62 from
https://github.com/xapp-le/kernel.git

Change-Id: Ib7ba7d52b1b8cfa15e3d3daa20cfdbd9a58b9fee
---
 drivers/video/fbdev/owl/displays/cvbs/cvbs.c |   57 ++++++++++++++++----------
 drivers/video/fbdev/owl/fb/owlfb-dc.c        |   12 +++--
 drivers/video/fbdev/owl/fb/owlfb-ioctl.c     |    7 +--
 3 files changed, 44 insertions(+), 32 deletions(-)

diff --git a/drivers/video/fbdev/owl/displays/cvbs/cvbs.c b/drivers/video/fbdev/owl/displays/cvbs/cvbs.c
index 4e2880e..1304078 100755
--- a/drivers/video/fbdev/owl/displays/cvbs/cvbs.c
+++ b/drivers/video/fbdev/owl/displays/cvbs/cvbs.c
@@ -2,7 +2,7 @@
  * linux/drivers/video/fbdev/owl/dss/lcdc.c
  *
  * Copyright (C) 2009 Actions Corporation
- * Author: Xieshsh <wanghui@actions-semi.com>
+ * Author: Xieshsh <xieshsh@artekmicro.com>
  *
  * Some code and ideas taken from drivers/video/fbdev/owl/ driver
  * by leopard.
@@ -251,8 +251,7 @@ void enable_cvbs_output(void)
 	cvbs_write_reg(TVOUT_EN,cvbs_read_reg(TVOUT_EN) | TVOUT_EN_CVBS_EN);
 	cvbs_write_reg(TVOUT_OCR,(cvbs_read_reg(TVOUT_OCR) | TVOUT_OCR_DAC3 | TVOUT_OCR_INREN) &
 		~TVOUT_OCR_DACOUT);
-	auto_detect_bit(CVBS_IN);
-	cvbs_irq_enable(CVBS_IN,true);
+
 }
 
 void disable_cvbs_output(void)
@@ -260,8 +259,7 @@ void disable_cvbs_output(void)
 	cvbs_write_reg(TVOUT_OCR,cvbs_read_reg(TVOUT_OCR) & ~(TVOUT_OCR_DAC3 | TVOUT_OCR_INREN));
 	cvbs_write_reg(TVOUT_EN,cvbs_read_reg(TVOUT_EN) &  ~TVOUT_EN_CVBS_EN);
 	
-	auto_detect_bit(CVBS_OUT);
-	cvbs_irq_enable(CVBS_OUT,true);
+
 }
 
 
@@ -341,7 +339,7 @@ static void do_cvbs_out(struct work_struct *work)
 		{
 			set_cvbs_status(&cdev, 0);	
 		}
-
+		disable_cvbs_output();
 }
 
 static void cvbs_check_status (struct work_struct *work) 
@@ -418,7 +416,7 @@ void configure_ntsc(void)//ntsc(480i),pll1:432M,pll0:594/1.001
 			   CVBS_AL_SEPO_ALSP(0x15));	
 
 	cvbs_write_reg(CVBS_AL_SEPE,(cvbs_read_reg(CVBS_AL_SEPE) & (~CVBS_AL_SEPE_ALEPEF_MASK)) |
-			   CVBS_AL_SEPE_ALEPEF(0x20b)); //0x20b 0x20d
+			   CVBS_AL_SEPE_ALEPEF(0x205)); //0x20b 0x20d 208
 	cvbs_write_reg(CVBS_AL_SEPE,(cvbs_read_reg(CVBS_AL_SEPE) & (~CVBS_AL_SEPE_ALSPEF_MASK)) |
 			   CVBS_AL_SEPE_ALSPEF(0x11c));
 
@@ -564,16 +562,31 @@ static void cvbs_boot_inited(void)
 
 void owldss_cvbs_display_enable_hpd(struct owl_dss_device *dssdev, bool enable)
 {
+	int val;
+	mutex_lock(&cvbs.lock);
 	if (enable)
-	{
-		if (atomic_read(&cvbs_connected_state) == 1)
-		{
-		   switch_set_state(&cdev, 1);
-		}
+	{	 
+
+			val = cvbs_read_reg(TVOUT_OCR);	
+			
+			cvbs_write_reg( TVOUT_OCR,0x0);
+			 
+			cvbs_write_reg(TVOUT_OCR , TVOUT_OCR_PI_ADEN | TVOUT_OCR_PO_ADEN);
+		
+			mdelay(600);
+			if ((atomic_read(&cvbs_connected_state) == 1) && (cvbs_read_reg(TVOUT_STA) & TVOUT_STA_DAC3ILS))
+			{
+		   set_cvbs_status(&cdev, 1);		
+			}
+			cvbs_write_reg(TVOUT_OCR,val);
+			cvbs_irq_enable(CVBS_IN,true);	
 	}else
-	{	
-		switch_set_state(&cdev, 0);		
-	}
+		{	
+			set_cvbs_status(&cdev, 0);
+			cvbs_irq_enable(CVBS_IN,false);	
+			cvbs_irq_enable(CVBS_OUT,false);			
+		}
+	mutex_unlock(&cvbs.lock);
 }
 
 
@@ -784,6 +797,9 @@ static int owl_cvbs_probe(struct platform_device *pdev)
 		DEBUG_CVBS("get_cvbs_data error\n");
 		return -1;
 	}
+	r = switch_dev_register(&cdev);
+	if (r)
+		goto err1;
 	
 	cvbs_boot_inited();
 	
@@ -796,9 +812,12 @@ static int owl_cvbs_probe(struct platform_device *pdev)
 		first_status = true;
 		atomic_set(&cvbs_connected_state,0);
 		cvbs_uevent_state=0;
+		switch_set_state(&cdev, 0);
 	}else{
 		atomic_set(&cvbs_connected_state,1);
 		cvbs_uevent_state=1;
+		switch_set_state(&cdev, 1);
+		
 	}
 	cvbs.wq = create_workqueue("atm705a-cvbs");
 	
@@ -809,13 +828,7 @@ static int owl_cvbs_probe(struct platform_device *pdev)
 	INIT_DELAYED_WORK(&cvbs_check_work, cvbs_check_status);
 	
 	queue_delayed_work(cvbs.wq, &cvbs_check_work,
-				msecs_to_jiffies(3000));
-	
-
-	
-	r = switch_dev_register(&cdev);
-	if (r)
-		goto err1;
+				msecs_to_jiffies(2000));
 	
 	DEBUG_CVBS(" owl_cvbs_probe is OK!\n");
 	cvbs.is_init = true;
diff --git a/drivers/video/fbdev/owl/fb/owlfb-dc.c b/drivers/video/fbdev/owl/fb/owlfb-dc.c
index b04c99b..62f06bd 100755
--- a/drivers/video/fbdev/owl/fb/owlfb-dc.c
+++ b/drivers/video/fbdev/owl/fb/owlfb-dc.c
@@ -221,7 +221,10 @@ static int owlfb_dc_arrange_overlay(setup_dispc_data_t *psDispcData,
 			if(external_manager_is_enable && atomic_read(&want_close_external_devices)){	
 				owl_dc.external_manager->apply(owl_dc.external_manager);
 				owl_dc.external_manager->wait_for_go(owl_dc.external_manager);	
-				owl_dc.external_manager->device->driver->disable(owl_dc.external_manager->device);
+				if (atomic_read(&want_close_external_devices))
+				{
+					owl_dc.external_manager->device->driver->disable(owl_dc.external_manager->device);
+				}	
 				external_manager_is_enable = false;
 				atomic_set(&want_close_external_devices,false);
 			}
@@ -364,9 +367,8 @@ static int owlfb_dc_update_overlay(struct owl_disp_info * disp_info)
 			info.width =  layer->src_win.width;
 			info.height =  layer->src_win.height;
 				
-			info.pos_x = layer->scn_win.x;
-			info.pos_y = layer->scn_win.y;
-			
+			info.pos_x = 0;
+			info.pos_y = 0;
 			ovl->manager->device->driver->get_resolution(
 			 ovl->manager->device, 
 			 &info.out_width, 
@@ -392,7 +394,7 @@ static int owlfb_dc_update_overlay(struct owl_disp_info * disp_info)
 			  
 			ovl->set_overlay_info(ovl,&info);
 			
-			if(hdmi_discard_frame < 2){
+			if(hdmi_discard_frame < 10){
 				ovl->disable(ovl);
 				ovl->manager->apply(ovl->manager);
 				ovl->manager->wait_for_go(ovl->manager);
diff --git a/drivers/video/fbdev/owl/fb/owlfb-ioctl.c b/drivers/video/fbdev/owl/fb/owlfb-ioctl.c
index 600e974..88fa7e7 100755
--- a/drivers/video/fbdev/owl/fb/owlfb-ioctl.c
+++ b/drivers/video/fbdev/owl/fb/owlfb-ioctl.c
@@ -717,7 +717,7 @@ int owlfb_ioctl(struct fb_info *fbi, unsigned int cmd, unsigned long arg)
 	}
 	case OWLFB_CVBS_ON:{
 		struct owl_dss_device * device = owl_dss_find_device_by_type(OWL_DISPLAY_TYPE_CVBS);
-		
+		atomic_set(&want_close_external_devices,false);
 		if(!device || !device->driver){
 			dev_err(fbdev->dev, "device is NULL or no driver device %p \n",device);
 			r = -EFAULT;
@@ -727,7 +727,7 @@ int owlfb_ioctl(struct fb_info *fbi, unsigned int cmd, unsigned long arg)
 		if(device->driver->enable){
 			device->driver->enable(device);
 		}
-		atomic_set(&want_close_external_devices,false);
+		
 		unlock_fb_info(fbi);
 		msleep(500);
 		lock_fb_info(fbi);
@@ -736,9 +736,6 @@ int owlfb_ioctl(struct fb_info *fbi, unsigned int cmd, unsigned long arg)
 	case OWLFB_CVBS_OFF:{
 		printk("ioctl OWLFB_CVBS_OFF\n");
 		atomic_set(&want_close_external_devices,true);
-		unlock_fb_info(fbi);
-		msleep(500);   
-		lock_fb_info(fbi);
 		break;
 	}
 	
-- 
1.7.5.4

