From caf11063b4bc730e3e54e1ebf088616b8b2c23ba Mon Sep 17 00:00:00 2001
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Mon, 5 Jul 2010 11:03:50 +0800
Subject: [PATCH] x86: fix wrhv guest pv_init_ops.patch

In x86 guest linux, only read_cr3 and write_cr3 are
paravirtualized, so for others, runtime instruction
patching is still needed. Take save_fl for examples,
if we don't do runtime instruction patching, below
recursion will happen when ftrace is enabled:
ftrace_call -> function_trace_call -> native_save_fl
     ^                                      |
     |                                      |
      --------------------------------------

Signed-off-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 arch/x86/kernel/vbi/wrhv.c |   11 +++++++++--
 1 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kernel/vbi/wrhv.c b/arch/x86/kernel/vbi/wrhv.c
index 2317035..0e0bffe 100644
--- a/arch/x86/kernel/vbi/wrhv.c
+++ b/arch/x86/kernel/vbi/wrhv.c
@@ -891,10 +891,17 @@ static void wrhv_set_pte_at(struct mm_struct *mm, unsigned long addr, pte_t *pte
 		*ptep = pte;
 }
 
-static unsigned wrhv_patch(u8 type, u16 clobber, void *ibuf,
+static unsigned wrhv_patch(u8 type, u16 clobbers, void *ibuf,
 				unsigned long addr, unsigned len)
 {
-	return paravirt_patch_default(type, clobber, ibuf, addr, len);
+	switch (type) {
+	case PARAVIRT_PATCH(pv_mmu_ops.read_cr3):
+	case PARAVIRT_PATCH(pv_mmu_ops.write_cr3):
+		return paravirt_patch_default(type, clobbers, ibuf, addr, len);
+	default:
+		return native_patch(type, clobbers, ibuf, addr, len);
+	}
+
 }
 
 static void wrhv_pgd_free(struct mm_struct *mm, pgd_t *pgd)
-- 
1.6.5.2

