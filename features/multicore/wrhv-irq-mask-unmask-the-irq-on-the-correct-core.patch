From 209091bf6df099b988a81f36c16b4e5b9d6eee02 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 11 Aug 2010 16:15:51 +0800
Subject: [PATCH 3/3] wrhv/irq: mask/unmask the irq on the correct core

After adding set affinity support, the irq maybe be bonded
to other core instead of core 0. So we should get the core
from irq affinity set.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 kernel/vbi/wrhv.c |   26 ++++++++++++++++++++++----
 1 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/kernel/vbi/wrhv.c b/kernel/vbi/wrhv.c
index bad7ed6..75c7d15 100644
--- a/kernel/vbi/wrhv.c
+++ b/kernel/vbi/wrhv.c
@@ -135,12 +135,21 @@ static void wrhv_irq_task(unsigned long arg)
 			break;
 		}
 		case WRHV_IRQ_SHUTDOWN:
-			smp_call_function_single(0, wrhv_mask_irq_ipi, &irq, 1);
+		{
+			int ocpu = cur->ocpu;
+
+			smp_call_function_single(ocpu, wrhv_mask_irq_ipi,
+						&irq, 1);
 			break;
+		}
 		case WRHV_IRQ_STARTUP:
-			smp_call_function_single(0, wrhv_unmask_irq_ipi,
+		{
+			int ocpu = cur->ocpu;
+
+			smp_call_function_single(ocpu, wrhv_unmask_irq_ipi,
 						&irq, 1);
 			break;
+		}
 		default:
 			printk(KERN_ERR "Unknown action for irq task\n");
 		}
@@ -156,7 +165,10 @@ static void wrhv_irq_task(unsigned long arg)
  */
 static void smp_wrhv_shutdown_irq(unsigned int irq)
 {
-	if (smp_processor_id() == 0)
+	struct irq_desc *desc = irq_to_desc(irq);
+	int cpu = cpumask_first(desc->affinity);
+
+	if (cpu == smp_processor_id())
 		wrhv_mask_irq(irq);
 	else {
 		struct wrhv_irq_struct *data;
@@ -167,6 +179,7 @@ static void smp_wrhv_shutdown_irq(unsigned int irq)
 			return;
 
 		data->irq = irq;
+		data->ocpu = cpu;
 		data->next = NULL;
 		data->action = WRHV_IRQ_SHUTDOWN;
 
@@ -181,7 +194,10 @@ static void smp_wrhv_shutdown_irq(unsigned int irq)
 
 static unsigned int smp_wrhv_startup_irq(unsigned int irq)
 {
-	if (smp_processor_id() == 0)
+	struct irq_desc *desc = irq_to_desc(irq);
+	int cpu = cpumask_first(desc->affinity);
+
+	if (cpu == smp_processor_id())
 		wrhv_unmask_irq(irq);
 	else {
 		struct wrhv_irq_struct *data;
@@ -192,6 +208,7 @@ static unsigned int smp_wrhv_startup_irq(unsigned int irq)
 			return -ENOMEM;
 
 		data->irq = irq;
+		data->ocpu = cpu;
 		data->next = NULL;
 		data->action = WRHV_IRQ_STARTUP;
 
@@ -202,6 +219,7 @@ static unsigned int smp_wrhv_startup_irq(unsigned int irq)
 
 		tasklet_schedule(&wrhv_irq_tasklet);
 	}
+
 	return 0;
 }
 
-- 
1.6.5.2

