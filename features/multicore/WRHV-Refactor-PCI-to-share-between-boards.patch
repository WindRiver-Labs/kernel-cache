From 29d5a9745155b72814b72fa158be850be38c854e Mon Sep 17 00:00:00 2001
From: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
Date: Mon, 24 May 2010 16:55:28 -0400
Subject: [PATCH 04/11] WRHV: Refactor PCI to share between boards

Given that there are now more then one board  which
has usable PCI, simply refactor the code so that it
is sharable between all PPC boards.

There is no need for each board to have its own copy of
the same code.

Each board that wishes to utilize this code will need to
add 2 or 3 new entries in their DTS file,  which defines
the associated board specific offset.  This new entry
in the DTS file is part of corenet entry.  As well it is
expected that each board will add 3 new machine specific
entries: set_law_base, set_law_attr and get_law_attr. These
3 new methods/funcations are responsible for setting up the PCI
LAW's for the board.

Signed-off-by: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
---
 arch/powerpc/kernel/vbi/wrhv.c |   56 ++++++++++++++++++++++++++++++++++++++++
 1 files changed, 56 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 0aa7d71..2c88961 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -360,6 +360,9 @@ void __init wrhv_time_init(void)
 
 #define LAW_TARGET_ID (0xff << 20)
 #define LAW_EN (0x1 << 31)
+unsigned int high_base = -1;
+unsigned int low_base = -1;
+unsigned int law_attrib = -1;
 unsigned char *law_base;
 int ppc_search_free_law(int target_id)
 {
@@ -387,6 +390,27 @@ int ppc_search_free_law(int target_id)
 	else
 		return -1;
 
+	/* Get the high base offset for setting law address */
+	prop = of_get_property(dev, "high-base", NULL);
+	if (prop)
+		high_base = *prop;
+	else
+		return -1;
+
+	/* Get the low base offset for setting the law address 
+	no need to bail if this property is missing since the
+	8572 does not have this property */
+	prop = of_get_property(dev, "low-base", NULL);
+	if (prop)
+		low_base = *prop;
+
+	/* Get the law attribute used for setting law attributes */
+	prop = of_get_property(dev, "law-attrib", NULL);
+	if (prop)
+		law_attrib = *prop;
+	else
+		return -1;
+
 	if ((!ppc_md.set_law_attr) || (!ppc_md.set_law_base) || (!ppc_md.get_law_attr))
 		return -1;
 
@@ -478,6 +502,38 @@ int ppc_setup_pci_law( struct device_node *dev)
 	return 0;
 }
 
+int wrhv_set_law_base(int index, unsigned long long addr)
+{
+	/* Set High base address */
+	/* The secret here is that the P4080 has both a high-base and low-base
+	   where as the 8572 only has a high-base attribute */
+	if (low_base == -1)
+		out_be32((unsigned int *)(law_base + high_base + index * 0x10), (unsigned int)(addr >> 8));
+	else
+	{
+		out_be32((unsigned int *)(law_base + high_base + index * 0x10), (addr >> 32) & 0xf);
+		/* Set Low base address */
+		out_be32((unsigned int *)(law_base + low_base + index * 0x10), (unsigned int)addr);
+	}
+	return 0;
+}
+ 
+int wrhv_set_law_attr(int index, unsigned int attr)
+{
+	/* Set Attributes */
+	out_be32((unsigned int *)(law_base + law_attrib + index * 0x10), attr);
+	return 0;
+}
+ 
+int wrhv_get_law_attr(int index)
+{
+	unsigned int attr = -1;
+
+	/* Get Attributes */
+	attr = in_be32((unsigned int *)(law_base + law_attrib + index * 0x10));
+	return attr;
+}
+
 #ifdef CONFIG_SPARSE_IRQ
 #define WRHV_NR_IRQS	NR_IRQS_LEGACY
 #else
-- 
1.6.5.2

