From c92527195cf22dc4c7c7464ca5cfc909e012a8f2 Mon Sep 17 00:00:00 2001
From: WRS Support <support@windriver.com>
Date: Fri, 2 Oct 2009 16:23:11 -0400
Subject: [PATCH] drivers: changes to various drivers for hypervisor/guest

There are a couple specific drivers that unfortunately require
code changes to their specific support in order to be used
in a guest mode.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 arch/powerpc/kernel/legacy_serial.c |    7 +++++++
 drivers/net/gianfar.c               |   22 ++++++++++++++++++++++
 drivers/serial/8250.c               |    7 +++++++

diff --git a/arch/powerpc/kernel/legacy_serial.c b/arch/powerpc/kernel/legacy_serial.c
index 9ddfaef..946a6e7 100644
--- a/arch/powerpc/kernel/legacy_serial.c
+++ b/arch/powerpc/kernel/legacy_serial.c
@@ -23,6 +23,9 @@
 
 #define MAX_LEGACY_SERIAL_PORTS	8
 
+#ifdef CONFIG_WRHV
+extern int wrhv_earlycon;
+#endif
 static struct plat_serial8250_port
 legacy_serial_ports[MAX_LEGACY_SERIAL_PORTS+1];
 static struct legacy_serial_info {
@@ -379,6 +382,10 @@ void __init find_legacy_serial_ports(void)
 	}
 #endif
 
+#ifdef CONFIG_WRHV
+	if(wrhv_earlycon != -1 && wrhv_earlycon < MAX_LEGACY_SERIAL_PORTS)
+		legacy_serial_console = wrhv_earlycon;
+#endif
 	DBG("legacy_serial_console = %d\n", legacy_serial_console);
 	if (legacy_serial_console >= 0)
 		setup_legacy_serial_console(legacy_serial_console);
diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index c9e6a5d..d7419e9 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -142,6 +142,11 @@ static void gfar_set_mac_for_addr(struct net_device *dev, int num, u8 *addr);
 
 extern const struct ethtool_ops gfar_ethtool_ops;
 
+#ifdef CONFIG_WRHV
+extern int wrhv_pci_devfn;
+extern char wrhv_macaddr[MAC_ADDR_LEN];
+#endif
+
 MODULE_AUTHOR("Freescale Semiconductor, Inc");
 MODULE_DESCRIPTION("Gianfar Ethernet Driver");
 MODULE_LICENSE("GPL");
@@ -173,6 +178,18 @@ static int gfar_probe(struct platform_device *pdev)
 		return -ENODEV;
 	}
 
+#ifdef CONFIG_WRHV
+	/* Get phy ID from commandline wrhv_pci_devfn.
+	 * wrhv_pci_devfn can be set to the following number:
+	 * 0 - Ethernet 0
+	 * 1 - Ethernet 1
+	 * 2 - Ethernet 2
+	 * 3 - Ethernet 3
+	 */
+	if (einfo->phy_id != wrhv_pci_devfn)
+		return -ENODEV;
+#endif
+
 	/* Create an ethernet device instance */
 	dev = alloc_etherdev(sizeof (*priv));
 
@@ -243,7 +260,12 @@ static int gfar_probe(struct platform_device *pdev)
 	gfar_write(&priv->regs->ecntrl, ECNTRL_INIT_SETTINGS);
 
 	/* Copy the station address into the dev structure, */
+#ifndef CONFIG_WRHV
 	memcpy(dev->dev_addr, einfo->mac_addr, MAC_ADDR_LEN);
+#else
+	/* Get MAC address from commandline wrhv_macaddr */
+	memcpy(dev->dev_addr, wrhv_macaddr, MAC_ADDR_LEN);
+#endif
 
 	/* Set the dev->base_addr to the gfar reg region */
 	dev->base_addr = (unsigned long) (priv->regs);
diff --git a/drivers/serial/8250.c b/drivers/serial/8250.c
index 537a245..92025bb 100644
--- a/drivers/serial/8250.c
+++ b/drivers/serial/8250.c
@@ -91,6 +91,9 @@ static unsigned int nr_uarts = CONFIG_SERIAL_8250_RUNTIME_UARTS;
 #define CONFIG_HUB6 1
 
 #include <asm/serial.h>
+#if defined(CONFIG_WRHV) && defined(CONFIG_X86)
+#include <asm/wrhv_serial.h>
+#endif
 /*
  * SERIAL_PORT_DFNS tells us about built-in ports that have no
  * standard enumeration mechanism.   Platforms that can find all
@@ -2255,7 +2258,11 @@ serial8250_set_termios(struct uart_port *port, struct ktermios *termios,
 		/* Switch to bank 2 not bank 1, to avoid resetting EXCR2 */
 		serial_outp(up, UART_LCR, 0xe0);
 	} else {
+#if defined(CONFIG_WRHV) && defined(CONFIG_PPC)
+		/* skip DLAB on WRHV + PPC */
+#else
 		serial_outp(up, UART_LCR, cval | UART_LCR_DLAB);/* set DLAB */
+#endif
 	}
 
 	serial_dl_write(up, quot);

