From 0c98361441ae0ffabd70baa6c51c3c8e8aed62b6 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Tue, 19 Jul 2011 20:15:01 +0800
Subject: [PATCH 2/4] wrhv/vbi: make vbi_vb_read_reg/vbi_vb_write_reg as core vbi in SMP mode

Although vbi_vb_read_reg/vbi_vb_write_reg is listed as optional VBI
at the moment. But we need these VBI to kick the AP in SMP mode on
powerpc architecture. So make them as core vbi if SMP is enabled.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 include/vbi/syscall.h |   42 ++++++++++++++++++++++++------------------
 1 files changed, 24 insertions(+), 18 deletions(-)

diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 0dee6a3..491205c 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -272,6 +272,30 @@ static inline int32_t vbi_vb_resume(uint32_t id, int32_t core)
 
 #endif
 
+/*
+ * These two VBI should only be used in core + SMP mode.
+ */
+#if !defined(CONFIG_SMP) && defined(CONFIG_WRHV_COREVBI_ONLY)
+static inline int32_t vbi_vb_read_reg(VBI_HREG_SET_CMPLX_QUALIFIED *regSet,
+				       uint32_t targetBoard, int32_t core)
+{
+	VBISTAT_VERBOSE(vbi_vb_read_reg);
+	return -1;
+}
+static inline int32_t vbi_vb_write_reg(VBI_HREG_SET_CMPLX_QUALIFIED *regSet,
+					uint32_t targetBoard, int32_t core)
+{
+	VBISTAT_VERBOSE(vbi_vb_write_reg);
+	return -1;
+}
+#else
+/* read/write remote vb's registers */
+extern asmlinkage int32_t vbi_vb_read_reg(VBI_HREG_SET_CMPLX_QUALIFIED *regSet,
+				       uint32_t targetBoard, int32_t core);
+extern asmlinkage int32_t vbi_vb_write_reg(VBI_HREG_SET_CMPLX_QUALIFIED *regSet,
+					uint32_t targetBoard, int32_t core);
+#endif
+
 /* Optional VBI */
 #if defined(CONFIG_WRHV_COREVBI_ONLY)
 /* Message send */
@@ -294,29 +318,11 @@ static inline int32_t vbi_vb_write_mem(struct vbi_mem_ctl *memCtl,
 	VBISTAT_VERBOSE(vbi_vb_write_mem);
 	return -1;
 }
-/* read/write remote vb's registers */
-static inline int32_t vbi_vb_read_reg(VBI_HREG_SET_CMPLX_QUALIFIED *regSet,
-		uint32_t targetBoard, int32_t core)
-{
-	VBISTAT_VERBOSE(vbi_vb_read_reg);
-	return -1;
-}
-static inline int32_t vbi_vb_write_reg(VBI_HREG_SET_CMPLX_QUALIFIED *regSet,
-		uint32_t targetBoard, int32_t core)
-{
-	VBISTAT_VERBOSE(vbi_vb_write_reg);
-	return -1;
-}
 #else
 /* Message send */
 extern asmlinkage int32_t vbi_send(int32_t id, void *smsg, size_t slen,
 			    void *rmsg, size_t rlen, struct vbi_msg_info *info,
 			    struct vbi_msg_ctl *ctl);
-/* read/write remote vb's registers */
-extern asmlinkage int32_t vbi_vb_read_reg(VBI_HREG_SET_CMPLX_QUALIFIED *regSet,
-				       uint32_t targetBoard, int32_t core);
-extern asmlinkage int32_t vbi_vb_write_reg(VBI_HREG_SET_CMPLX_QUALIFIED *regSet,
-					uint32_t targetBoard, int32_t core);
 /* read remote vb's memory */
 extern asmlinkage int32_t vbi_vb_read_mem(struct vbi_mem_ctl *memCtl, uint32_t targetBoard);
 extern asmlinkage int32_t vbi_vb_write_mem(struct vbi_mem_ctl *memCtl, uint32_t targetBoard);
-- 
1.7.0.4

