From 8475723a82a125fe15d604d376efdd21776de868 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Mon, 19 Apr 2010 12:30:24 -0400
Subject: [PATCH] vbi: add debug dumps for PPC604 registers.

There are some currently unused debug functions in show.c
that allow register dumps for debugging purposes.  For
completeness, add PPC604 variants of the same type/form.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/vbi/show.c |   30 ++++++++++++++++++++++++++++--
 1 files changed, 28 insertions(+), 2 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/show.c b/arch/powerpc/kernel/vbi/show.c
index 8d48d57..5827256 100644
--- a/arch/powerpc/kernel/vbi/show.c
+++ b/arch/powerpc/kernel/vbi/show.c
@@ -32,7 +32,7 @@ void vbi_disp_status_regs(void)
 #error CPU is undefined, needs to be PPC85XX or similar.
 #endif
 
-#if CPU == PPC85XX /* don't know how to handle cpu variant */
+#if CPU == PPC85XX
     printk("  srr0/srr1:          0x%08x 0x%08x\n",
 		VB_STATUS_REGS_ACCESS (p, srr0) ,
 		VB_STATUS_REGS_ACCESS (p, srr1));
@@ -64,6 +64,32 @@ void vbi_disp_status_regs(void)
     printk("  bucsr:              0x%08x\n",
 		VB_STATUS_REGS_ACCESS (p, bucsr));
 #endif
+
+#if CPU == PPC604
+    printk("  dar/dsisr:      0x%08x 0x%08x\n",
+		VB_STATUS_REGS_ACCESS (p, dar) ,
+		VB_STATUS_REGS_ACCESS (p, dsisr));
+
+    printk("  emsr:              0x%08x\n",
+		VB_STATUS_REGS_ACCESS (p, emsr));
+
+    printk("  esrr0/esrr1:          0x%08x 0x%08x\n",
+		VB_STATUS_REGS_ACCESS (p, esrr0) ,
+		VB_STATUS_REGS_ACCESS (p, esrr1));
+
+    printk("  pir/pvr:            0x%08x 0x%08x\n",
+		VB_STATUS_REGS_ACCESS (p, pir) ,
+		VB_STATUS_REGS_ACCESS (p, pvr));
+
+    printk("  hid0/hid1:          0x%08x 0x%08x\n",
+		VB_STATUS_REGS_ACCESS (p, hid0) ,
+		VB_STATUS_REGS_ACCESS (p, hid1));
+
+    printk("  hid2/l2cr:          0x%08x 0x%08x\n",
+		VB_STATUS_REGS_ACCESS (p, hid2) ,
+		VB_STATUS_REGS_ACCESS (p, l2cr));
+#endif	/* 604 */
+
 }
 
 /*
@@ -78,7 +104,7 @@ void vbi_disp_ctrl_regs(void)
 {
     struct vb_control *p = VBI_CNTRL_ADDR_GET();
 
-#if CPU == PPC85XX /* don't know how to handle cpu variant */
+#if CPU == PPC85XX || CPU == PPC604
     printk("  srr0/srr1:           0x%08x 0x%08x\n",
 		VB_CONTROL_REGS_ACCESS (p, srr0),
 		VB_CONTROL_REGS_ACCESS (p, srr1));
-- 
1.6.5.2

