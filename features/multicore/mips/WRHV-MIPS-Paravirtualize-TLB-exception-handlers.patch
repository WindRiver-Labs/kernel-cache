From 481cd0b084675a0075319219bfb927df2dba6330 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Tue, 1 Mar 2011 09:43:57 +0800
Subject: [PATCH 25/38] WRHV: MIPS: Paravirtualize TLB exception handlers

Since Hypervisor never pass TLB refill exception to GOS, so don't
need setup TLB refill handlers for GOS.

And, paravirtualize TLBL/TLBS/TLBM exception handlers which are
delivered from Hypervisor.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/mm/tlbex-fault.S |   19 +++++++++++++++++++
 arch/mips/mm/tlbex.c       |    6 ++++++
 2 files changed, 25 insertions(+), 0 deletions(-)

diff --git a/arch/mips/mm/tlbex-fault.S b/arch/mips/mm/tlbex-fault.S
index e99eaa1..d34cea8 100644
--- a/arch/mips/mm/tlbex-fault.S
+++ b/arch/mips/mm/tlbex-fault.S
@@ -11,10 +11,29 @@
 #include <asm/regdef.h>
 #include <asm/stackframe.h>
 
+#ifdef CONFIG_WRHV
+	NESTED(handle_tlbl, PT_SIZE, sp)
+	j	tlb_do_page_fault_0
+	END(handle_tlbl)
+
+	NESTED(handle_tlbs, PT_SIZE, sp)
+	j	tlb_do_page_fault_1
+	END(handle_tlbs)
+
+	NESTED(handle_tlbm, PT_SIZE, sp)
+	j	tlb_do_page_fault_1
+	END(handle_tlbm)
+#endif
+
 	.macro tlb_do_page_fault, write
 	NESTED(tlb_do_page_fault_\write, PT_SIZE, sp)
 	SAVE_ALL
+#ifdef CONFIG_WRHV
+	PTR_L	a2, wr_vb_status
+	LONG_L	a2, VB_STATUS_BADVA(a2)
+#else
 	MFC0	a2, CP0_BADVADDR
+#endif
 	KMODE
 	move	a0, sp
 	REG_S	a2, PT_BVADDR(sp)
diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c
index 9d83eff..93355b3 100644
--- a/arch/mips/mm/tlbex.c
+++ b/arch/mips/mm/tlbex.c
@@ -1015,9 +1015,15 @@ static void __cpuinit build_r4000_tlb_refill_handler(void)
  */
 #define FASTPATH_SIZE 128
 
+#ifdef CONFIG_WRHV
+u32 extern handle_tlbl[FASTPATH_SIZE] __cacheline_aligned;
+u32 extern handle_tlbs[FASTPATH_SIZE] __cacheline_aligned;
+u32 extern handle_tlbm[FASTPATH_SIZE] __cacheline_aligned;
+#else
 u32 handle_tlbl[FASTPATH_SIZE] __cacheline_aligned;
 u32 handle_tlbs[FASTPATH_SIZE] __cacheline_aligned;
 u32 handle_tlbm[FASTPATH_SIZE] __cacheline_aligned;
+#endif
 
 static void __cpuinit
 iPTE_LW(u32 **p, unsigned int pte, unsigned int ptr)
-- 
1.6.5.2

