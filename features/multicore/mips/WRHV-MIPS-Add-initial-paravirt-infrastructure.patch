From 458cba6238ec1308112b50cac4ae4e8e04722999 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Thu, 25 Nov 2010 14:50:06 +0800
Subject: [PATCH 05/38] WRHV: MIPS: Add initial paravirt infrastructure

Added MIPS specific initial paravirt Kconfig, header file and C source file.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/Kconfig                |    2 +
 arch/mips/Kconfig.wrhv           |    8 +++++
 arch/mips/include/asm/paravirt.h |   20 ++++++++++++
 arch/mips/include/asm/wrhv.h     |   64 ++++++++++++++++++++++++++++++++++++++
 arch/mips/kernel/Makefile        |    1 +
 arch/mips/kernel/paravirt.c      |   40 +++++++++++++++++++++++
 6 files changed, 135 insertions(+), 0 deletions(-)
 create mode 100644 arch/mips/Kconfig.wrhv
 create mode 100644 arch/mips/include/asm/paravirt.h
 create mode 100644 arch/mips/include/asm/wrhv.h
 create mode 100644 arch/mips/kernel/paravirt.c

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index 46435e6..168b319 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -2282,6 +2282,8 @@ endmenu
 
 source "arch/mips/kernel/cpufreq/Kconfig"
 
+source "arch/mips/Kconfig.wrhv"
+
 source "net/Kconfig"
 
 source "drivers/Kconfig"
diff --git a/arch/mips/Kconfig.wrhv b/arch/mips/Kconfig.wrhv
new file mode 100644
index 0000000..98c6e50
--- /dev/null
+++ b/arch/mips/Kconfig.wrhv
@@ -0,0 +1,8 @@
+config PARAVIRT
+	bool "Enable paravirtualization code"
+	default n 
+	help
+	  This changes the kernel so it can modify itself when it is run
+	  under a hypervisor, potentially improving performance significantly
+	  over full virtualization.  However, when run without a hypervisor
+	  the kernel is theoretically slower and slightly larger.
diff --git a/arch/mips/include/asm/paravirt.h b/arch/mips/include/asm/paravirt.h
new file mode 100644
index 0000000..29f401a
--- /dev/null
+++ b/arch/mips/include/asm/paravirt.h
@@ -0,0 +1,20 @@
+#ifndef __ASM_PARAVIRT_H
+#define __ASM_PARAVIRT_H
+
+#ifdef CONFIG_PARAVIRT
+/* general info */
+struct pv_info {
+	const char *name;
+	int paravirt_enabled;
+};
+
+/*
+ * native functions
+ */
+
+/*
+ * paravirtual operations structure
+ */
+
+#endif /* CONFIG_PARAVIRT */
+#endif	/* __ASM_PARAVIRT_H */
diff --git a/arch/mips/include/asm/wrhv.h b/arch/mips/include/asm/wrhv.h
new file mode 100644
index 0000000..8208029
--- /dev/null
+++ b/arch/mips/include/asm/wrhv.h
@@ -0,0 +1,64 @@
+/*
+ *  This program is free software; you can redistribute it and/or modify it
+ *  under the terms of the GNU General Public License as published by the
+ *  Free Software Foundation; either version 2, or (at your option) any
+ *  later version.
+ *
+ *  This program is distributed in the hope that it will be useful, but
+ *  WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  General Public License for more details.
+ *
+ *  Copyright (C) 2008 Wind River Systems, Inc.
+ */
+
+#ifndef __ASM_WRHV_H
+#define __ASM_WRHV_H
+
+#ifdef CONFIG_WRHV
+
+/*
+ * This macro will tend to clean_dcache_range function, but
+ * we do not need to do that, so delete below macro to try
+ * native clean_dcache_range
+ */
+#define CONFIG_PARAVIRT_DCACHE_CLEAN
+
+#ifndef __ASSEMBLY__
+
+extern unsigned char *law_base;
+
+extern void wrhv_mapping(void);
+extern void wrhv_restart(char *cmd);
+extern unsigned long __init wrhv_find_end_of_memory(void);
+extern void wrhv_power_save(void);
+extern unsigned int wrhv_vioapic_get_irq(void);
+extern void wrhv_init_irq(void);
+extern void __init wrhv_calibrate_decr(void);
+extern void __init wrhv_time_init(void);
+extern int __init wrhv_earlycon_setup(void);
+extern void wrhv_setup_msr_for_ap(VBI_HREG_SET_CMPLX_QUALIFIED *);
+
+extern int __init smp_wrhv_probe(void);
+extern void smp_wrhv_message_pass(int target, int msg);
+extern void __init smp_wrhv_setup_cpu(int cpu_nr);
+extern void wrhv_umask_IPIs_for_vcore(void);
+extern void wrhv_request_ipis(void);
+extern unsigned long wrhv_cpu_freq;
+
+extern uint32_t service_handle;
+extern void get_hv_bsp_server_handle(void);
+extern int get_bsp_clock_freq(void);
+
+extern void ppc_setup_law(unsigned int target_id, unsigned long long addr, unsigned int attr);
+extern int ppc_search_free_law(int target_id);
+extern int ppc_setup_pci_law(struct device_node *dev);
+
+#ifdef CONFIG_PCI
+extern int ppc_get_pci_intr_wrhv(struct pci_dev *dev);
+extern int wrhv_enable_pci_law(void);
+#endif
+
+#endif /* __ASSEMBLY__ */
+#endif /* CONFIG_WRHV */
+#endif /* __ASM_WRHV_H */
diff --git a/arch/mips/kernel/Makefile b/arch/mips/kernel/Makefile
index e1dd163..1e581d2 100644
--- a/arch/mips/kernel/Makefile
+++ b/arch/mips/kernel/Makefile
@@ -103,6 +103,7 @@ obj-$(CONFIG_HAVE_STD_PC_SERIAL_PORT)	+= 8250-platform.o
 obj-$(CONFIG_MIPS_CPUFREQ)	+= cpufreq/
 
 obj-$(CONFIG_WRHV)		+= vbi/
+obj-$(CONFIG_PARAVIRT)		+= paravirt.o
 
 EXTRA_CFLAGS += -Werror
 
diff --git a/arch/mips/kernel/paravirt.c b/arch/mips/kernel/paravirt.c
new file mode 100644
index 0000000..b8fedc1
--- /dev/null
+++ b/arch/mips/kernel/paravirt.c
@@ -0,0 +1,40 @@
+/*  Paravirtualization interfaces
+ *
+ *   This program is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU General Public License as published by
+ *   the Free Software Foundation; either version 2 of the License, or
+ *   (at your option) any later version.
+ *
+ *   This program is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *   GNU General Public License for more details.
+ *
+ *   You should have received a copy of the GNU General Public License
+ *   along with this program; if not, write to the Free Software
+ *   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ *
+ *   Adaptation for powerpc based on x86 version, Copyright (C) 2009
+ *   Wind River Systems, Inc.
+ *
+ */
+
+#include <linux/init.h>
+#include <asm/paravirt.h>
+
+#ifdef CONFIG_WRHV
+extern void wrhv_init(void);
+#endif
+
+/* paravirt init */
+void __init paravirt_init(void)
+{
+#ifdef CONFIG_WRHV
+	wrhv_init();
+#endif
+}
+
+struct pv_info pv_info = {
+	.name = "bare hardware",
+	.paravirt_enabled = 0,
+};
-- 
1.6.5.2

