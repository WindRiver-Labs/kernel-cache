From 0bb70dab2b3548445380b6026a56ec81d7dbf582 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Thu, 9 Dec 2010 14:08:48 +0800
Subject: [PATCH 12/38] WRHV: MIPS: Define WRHV version local_irq_enable/disable in asmmacro.h

asmmacro.h also defines local_irq_enable/disable for assemble code,
so wrhv_asmmacro.h is introduced to define WRHV version.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/include/asm/asmmacro.h      |    4 +
 arch/mips/include/asm/wrhv_asmmacro.h |  117 +++++++++++++++++++++++++++++++++
 2 files changed, 121 insertions(+), 0 deletions(-)
 create mode 100644 arch/mips/include/asm/wrhv_asmmacro.h

diff --git a/arch/mips/include/asm/asmmacro.h b/arch/mips/include/asm/asmmacro.h
index 6c8342a..a8434c2 100644
--- a/arch/mips/include/asm/asmmacro.h
+++ b/arch/mips/include/asm/asmmacro.h
@@ -8,6 +8,9 @@
 #ifndef _ASM_ASMMACRO_H
 #define _ASM_ASMMACRO_H
 
+#ifdef CONFIG_WRHV
+#include <asm/wrhv_asmmacro.h>
+#else
 #include <asm/hazards.h>
 
 #ifdef CONFIG_32BIT
@@ -89,4 +92,5 @@
 	 .word	0x41800000 | (\rt << 16) | (\rd << 11) | (\u << 5) | (\sel)
 	.endm
 
+#endif /* CONFIG_WRHV */
 #endif /* _ASM_ASMMACRO_H */
diff --git a/arch/mips/include/asm/wrhv_asmmacro.h b/arch/mips/include/asm/wrhv_asmmacro.h
new file mode 100644
index 0000000..42f4cc6
--- /dev/null
+++ b/arch/mips/include/asm/wrhv_asmmacro.h
@@ -0,0 +1,117 @@
+/*
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ * Based on asmmacro.h 
+ */
+#ifndef _ASM_WRHV_ASMMACRO_H
+#define _ASM_WRHV_ASMMACRO_H
+
+#include <asm/hazards.h>
+#include <vbi/vbi.h>
+
+#ifdef CONFIG_32BIT
+#include <asm/asmmacro-32.h>
+#endif
+#ifdef CONFIG_64BIT
+#include <asm/asmmacro-64.h>
+#endif
+#ifdef CONFIG_MIPS_MT_SMTC
+#include <asm/mipsmtregs.h>
+#endif
+
+#ifdef CONFIG_MIPS_MT_SMTC
+	.macro	local_irq_enable reg=t0
+	mfc0	\reg, CP0_TCSTATUS
+	ori	\reg, \reg, TCSTATUS_IXMT
+	xori	\reg, \reg, TCSTATUS_IXMT
+	mtc0	\reg, CP0_TCSTATUS
+	_ehb
+	.endm
+
+	.macro	local_irq_disable reg=t0
+	mfc0	\reg, CP0_TCSTATUS
+	ori	\reg, \reg, TCSTATUS_IXMT
+	mtc0	\reg, CP0_TCSTATUS
+	_ehb
+	.endm
+#elif defined(CONFIG_CPU_MIPSR2) && !defined(CONFIG_WRHV)
+	.macro	local_irq_enable reg=t0
+	ei
+	irq_enable_hazard
+	.endm
+
+	.macro	local_irq_disable reg=t0
+	di
+	irq_disable_hazard
+	.endm
+#elif defined(CONFIG_WRHV)
+	.macro local_irq_enable
+	PTR_L	t0, wr_vb_control
+	li	t1, 0
+	sw	t1, VB_CONTROL_INT_DISABLE(t0)
+	3:
+	PTR_L	t0, wr_vb_status
+	lw	t1, VB_STATUS_INT_PENDING(t0)
+	andi	t1, 0
+	beqz	t1, 0f
+	nop
+	li	v0, VBI_SYS_int_enable
+	syscall
+	nop
+	b	3b
+	nop
+	0:
+	.endm
+
+	.macro local_irq_disable
+	li	t1, -1
+	PTR_L	t2, wr_vb_control
+	sw	t1, VB_CONTROL_INT_DISABLE(t2)
+	.endm		
+#else
+	.macro	local_irq_enable reg=t0
+	mfc0	\reg, CP0_STATUS
+	ori	\reg, \reg, 1
+	mtc0	\reg, CP0_STATUS
+	irq_enable_hazard
+	.endm
+
+	.macro	local_irq_disable reg=t0
+	mfc0	\reg, CP0_STATUS
+	ori	\reg, \reg, 1
+	xori	\reg, \reg, 1
+	mtc0	\reg, CP0_STATUS
+	irq_disable_hazard
+	.endm
+#endif /* CONFIG_MIPS_MT_SMTC */
+
+/*
+ * Temporary until all gas have MT ASE support
+ */
+	.macro	DMT	reg=0
+	.word	0x41600bc1 | (\reg << 16)
+	.endm
+
+	.macro	EMT	reg=0
+	.word	0x41600be1 | (\reg << 16)
+	.endm
+
+	.macro	DVPE	reg=0
+	.word	0x41600001 | (\reg << 16)
+	.endm
+
+	.macro	EVPE	reg=0
+	.word	0x41600021 | (\reg << 16)
+	.endm
+
+	.macro	MFTR	rt=0, rd=0, u=0, sel=0
+	 .word	0x41000000 | (\rt << 16) | (\rd << 11) | (\u << 5) | (\sel)
+	.endm
+
+	.macro	MTTR	rt=0, rd=0, u=0, sel=0
+	 .word	0x41800000 | (\rt << 16) | (\rd << 11) | (\u << 5) | (\sel)
+	.endm
+
+#endif /* _ASM_WRHV_ASMMACRO_H */
-- 
1.6.5.2

