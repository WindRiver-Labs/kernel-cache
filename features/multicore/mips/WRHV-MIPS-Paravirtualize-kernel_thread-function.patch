From 789f381592bedb76bf98316929e17bab0613a6e8 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Fri, 25 Feb 2011 11:53:26 +0800
Subject: [PATCH 37/38] WRHV: MIPS: Paravirtualize kernel_thread function

Get CP0 status value from VB_STATUS instead of physical reg.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/include/asm/paravirt.h |    6 ++++++
 arch/mips/kernel/paravirt.c      |   10 ++++++++++
 arch/mips/kernel/process.c       |   10 +++++++++-
 arch/mips/kernel/vbi/wrhv.c      |   33 +++++++++++++++++++++++++++++++++
 4 files changed, 58 insertions(+), 1 deletions(-)

diff --git a/arch/mips/include/asm/paravirt.h b/arch/mips/include/asm/paravirt.h
index 4065705..d8f14af 100644
--- a/arch/mips/include/asm/paravirt.h
+++ b/arch/mips/include/asm/paravirt.h
@@ -16,6 +16,7 @@ extern void __init native_tlb_init(void);
 extern void __init native_arch_init_irq(void);
 extern void __init native_plat_time_init(void);
 extern void __init native_mem_init(void);
+extern long native_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags);
 
 /*
  * paravirtual operations structure
@@ -37,10 +38,15 @@ struct pv_time_ops {
  	void (*plat_time_init)(void);
 };
  
+struct pv_misc_ops {
+ 	long (*kernel_thread)(int (*fn)(void *), void *arg, unsigned long flags);
+};
+ 
 extern struct pv_cpu_ops pv_cpu_ops;
 extern struct pv_mem_ops pv_mem_ops;
 extern struct pv_irq_ops pv_irq_ops;
 extern struct pv_time_ops pv_time_ops;
+extern struct pv_misc_ops pv_misc_ops;
 
 #endif /* CONFIG_PARAVIRT */
 #endif	/* __ASM_PARAVIRT_H */
diff --git a/arch/mips/kernel/paravirt.c b/arch/mips/kernel/paravirt.c
index 106a907..e4643c7 100644
--- a/arch/mips/kernel/paravirt.c
+++ b/arch/mips/kernel/paravirt.c
@@ -56,6 +56,10 @@ struct pv_time_ops pv_time_ops = {
  	.plat_time_init = native_plat_time_init,
 };
  
+struct pv_misc_ops pv_misc_ops = {
+ 	.kernel_thread = native_kernel_thread,
+};
+ 
 void __init paravirt_per_cpu_trap_init(void)
 {
 	pv_cpu_ops.per_cpu_trap_init();
@@ -81,7 +85,13 @@ void __init paravirt_mem_init(void)
  	pv_mem_ops.mem_init();
 }
  
+long paravirt_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)
+{
+ 	return pv_misc_ops.kernel_thread(fn, arg, flags);
+}
+ 
 EXPORT_SYMBOL(pv_cpu_ops);
 EXPORT_SYMBOL(pv_mem_ops);
 EXPORT_SYMBOL(pv_irq_ops);
 EXPORT_SYMBOL(pv_time_ops);
+EXPORT_SYMBOL(pv_misc_ops);
diff --git a/arch/mips/kernel/process.c b/arch/mips/kernel/process.c
index fc39d83..b3f1d7c 100644
--- a/arch/mips/kernel/process.c
+++ b/arch/mips/kernel/process.c
@@ -248,7 +248,10 @@ static void __noreturn kernel_thread_helper(void *arg, int (*fn)(void *))
 	do_exit(fn(arg));
 }
 
-long kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)
+long paravirt_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)
+	__attribute__ ((weak, alias("native_kernel_thread")));
+
+long native_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)
 {
 	struct pt_regs regs;
 	long pid;
@@ -273,6 +276,11 @@ long kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)
 	return pid;
 }
 
+long kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)
+{
+	return paravirt_kernel_thread(fn, arg, flags);
+}
+
 /*
  *
  */
diff --git a/arch/mips/kernel/vbi/wrhv.c b/arch/mips/kernel/vbi/wrhv.c
index b0aadcf..98e00e6 100644
--- a/arch/mips/kernel/vbi/wrhv.c
+++ b/arch/mips/kernel/vbi/wrhv.c
@@ -23,6 +23,7 @@
 #include <linux/proc_fs.h>
 #include <linux/swap.h>
 #include <linux/highmem.h>
+#include <trace/sched.h>
 
 #include <asm/mipsmtregs.h>
 #include <asm/mmu_context.h>
@@ -244,6 +245,36 @@ void __init wrhv_mem_init(void)
 	       totalhigh_pages << (PAGE_SHIFT-10));
 }
 
+static void __noreturn kernel_thread_helper(void *arg, int (*fn)(void *))
+{
+	do_exit(fn(arg));
+}
+
+long wrhv_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)
+{
+	struct pt_regs regs;
+	long pid;
+
+	memset(&regs, 0, sizeof(regs));
+
+	regs.regs[4] = (unsigned long) arg;
+	regs.regs[5] = (unsigned long) fn;
+	regs.cp0_epc = (unsigned long) kernel_thread_helper;
+	regs.cp0_status = wr_vb_status->vb_status_regs.sr;
+#if defined(CONFIG_CPU_R3000) || defined(CONFIG_CPU_TX39XX)
+	regs.cp0_status = (regs.cp0_status & ~(ST0_KUP | ST0_IEP | ST0_IEC)) |
+			  ((regs.cp0_status & (ST0_KUC | ST0_IEC)) << 2);
+#else
+	regs.cp0_status |= ST0_EXL; /* Not sure if need set EXL on GOS */
+#endif
+
+	/* Ok, create the new process.. */
+	pid = do_fork(flags | CLONE_VM | CLONE_UNTRACED,
+			0, &regs, 0, NULL, NULL);
+	trace_sched_kthread_create(fn, pid);
+	return pid;
+}
+	
 void __init wrhv_init(void)
 {
 	/* initialize wr_config so that we can access
@@ -262,6 +293,8 @@ void __init wrhv_init(void)
 	pv_irq_ops.arch_init_irq = wrhv_arch_init_irq;
 
 	pv_time_ops.plat_time_init = wrhv_plat_time_init;
+
+	pv_misc_ops.kernel_thread = wrhv_kernel_thread;
 }
 
 #ifdef CONFIG_PARAVIRT
-- 
1.6.5.2

