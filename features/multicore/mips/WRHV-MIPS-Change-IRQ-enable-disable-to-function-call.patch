From c43455a1b1325df992bcc1a84a0841a0279f0080 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Tue, 21 Dec 2010 17:11:02 +0800
Subject: [PATCH 22/38] WRHV: MIPS: Change IRQ enable/disable to function call

Change IRQ enable/disable to function call instead of macro in
order to reduce kernel image size.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/include/asm/wrhv_irqflags.h |   54 ++++++++++++--------------------
 1 files changed, 20 insertions(+), 34 deletions(-)

diff --git a/arch/mips/include/asm/wrhv_irqflags.h b/arch/mips/include/asm/wrhv_irqflags.h
index fe050a2..35fb984 100644
--- a/arch/mips/include/asm/wrhv_irqflags.h
+++ b/arch/mips/include/asm/wrhv_irqflags.h
@@ -25,6 +25,10 @@
 #define IRQS_ENABLED		0
 #define IRQS_DISABLED		-1
 
+extern void vbi_vcore_irq_unlock(void);
+extern int vbi_vcore_irq_lock(void);
+extern int vbi_vcore_irq_state(void);
+
 /* 
  * VB_CONTROL_INT_DISABLE offset is 0x78
  * VB_STATUS_INT_PENDING offset is 0x58
@@ -75,11 +79,7 @@ __asm__(
 	"	.endm							\n");
 
 static inline void raw_local_irq_enable(void) {
-	__asm__ __volatile__(
-		"raw_local_irq_enable"
-		: /* no outputs */
-		: /* no inputs */
-		: "memory");
+	vbi_vcore_irq_unlock();
 }
 
 __asm__(
@@ -92,11 +92,7 @@ __asm__(
 
 static inline void raw_local_irq_disable(void)
 {
-	__asm__ __volatile__(
-		"raw_local_irq_disable"
-		: /* no outputs */
-		: /* no inputs */
-		: "memory");
+	vbi_vcore_irq_lock();
 }
 
 __asm__(
@@ -109,9 +105,7 @@ __asm__(
 	"	.endm							\n");
 
 #define raw_local_save_flags(x)						\
-__asm__ __volatile__(							\
-	"raw_local_save_flags %0"					\
-	: "=r" (x))
+	((x) = vbi_vcore_irq_state())
 
 __asm__(
 	"	.macro	raw_local_irq_save result			\n"
@@ -123,12 +117,10 @@ __asm__(
 	"	.set	pop						\n"
 	"	.endm							\n");
 
-#define raw_local_irq_save(x)						\
-__asm__ __volatile__(							\
-	"raw_local_irq_save\t%0"					\
-	: "=r" (x)							\
-	: /* no inputs */						\
-	: "memory")
+#define raw_local_irq_save(x) do {					\
+	x = vbi_vcore_irq_state();					\
+	vbi_vcore_irq_lock();						\
+	} while(0)
 
 __asm__(
 	"	.macro	raw_local_irq_restore flags			\n"
@@ -147,24 +139,18 @@ __asm__(
 
 static inline void raw_local_irq_restore(unsigned long flags)
 {
-	unsigned long __tmp1;
-
-	__asm__ __volatile__(
-		"raw_local_irq_restore\t%0"
-		: "=r" (__tmp1)
-		: "0" (flags)
-		: "memory");
+	if (flags == IRQS_ENABLED)
+		vbi_vcore_irq_unlock();
+	else
+		vbi_vcore_irq_lock();
 }
 
 static inline void __raw_local_irq_restore(unsigned long flags)
 {
-	unsigned long __tmp1;
-
-	__asm__ __volatile__(
-		"raw_local_irq_restore\t%0"
-		: "=r" (__tmp1)
-		: "0" (flags)
-		: "memory");
+	if (flags == IRQS_ENABLED)
+		vbi_vcore_irq_unlock();
+	else
+		vbi_vcore_irq_lock();
 }
 
 static inline int raw_irqs_disabled_flags(unsigned long flags)
@@ -172,7 +158,7 @@ static inline int raw_irqs_disabled_flags(unsigned long flags)
 	return (flags == IRQS_DISABLED);
 }
 
-#define raw_irqs_disabled	(vbi_vcore_irq_state() == IRQS_DISABLED)
+#define raw_irqs_disabled	(VBI_INT_STATE_GET())
 
 #endif
 
-- 
1.6.5.2

