From d5d1579c6c0d3f5d3685607e2adcc03d97e7d1ef Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Wed, 23 Mar 2011 13:05:14 +0800
Subject: [PATCH 2/7] WRHV: MIPS: Make get/set_saved_sp SMP safe

On SMP, each core's kernel sp pointer is saved in kernelsp[coreid]
array which is indexed by core id. So, for SMP GOS, extract the
current core id and the corresponding offset in kernelsp from
VB_CONFIG->coreId.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/mips/include/asm/wrhv_stackframe.h |   14 ++++++++++----
 1 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/arch/mips/include/asm/wrhv_stackframe.h b/arch/mips/include/asm/wrhv_stackframe.h
index 7295256..c6fc22c 100644
--- a/arch/mips/include/asm/wrhv_stackframe.h
+++ b/arch/mips/include/asm/wrhv_stackframe.h
@@ -101,8 +101,13 @@
 #define CPU_ID_REG CP0_CONTEXT
 #define CPU_ID_MFC0 MFC0
 #endif
+
+#define WRHV_COREID_OFFSET	0x98
+#define VB_CONFIG_ADDR		0xFFFFFFFFD0000000
+
 		.macro	get_saved_sp	/* SMP variation */
-		CPU_ID_MFC0	k0, CPU_ID_REG
+		PTR_L	k0, wr_vb_config
+		lw	k0, WRHV_COREID_OFFSET(k0) /* Get current core ID */
 #if defined(CONFIG_32BIT) || defined(KBUILD_64BIT_SYM32)
 		lui	k1, %hi(kernelsp)
 #else
@@ -112,14 +117,15 @@
 		daddiu	k1, %hi(kernelsp)
 		dsll	k1, 16
 #endif
-		LONG_SRL	k0, PTEBASE_SHIFT
+		sll	k0, 3	/* Extract the offset from core ID */
 		LONG_ADDU	k1, k0
 		LONG_L	k1, %lo(kernelsp)(k1)
 		.endm
 
 		.macro	set_saved_sp stackp temp temp2
-		CPU_ID_MFC0	\temp, CPU_ID_REG
-		LONG_SRL	\temp, PTEBASE_SHIFT
+		li	\temp, VB_CONFIG_ADDR 
+		lw	\temp, WRHV_COREID_OFFSET(\temp)
+		sll	\temp, 3
 		LONG_S	\stackp, kernelsp(\temp)
 		.endm
 #else
-- 
1.7.0.4

