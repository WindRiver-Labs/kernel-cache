From c01089e0b85ac391a069dcf691e11429f2d22d47 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Mon, 19 Apr 2010 12:32:29 -0400
Subject: [PATCH] MILS: Distinguish the PPC604 register set from E500.

The MILS HV has the arch specific registers still embedded directly
in the vb_status struct.  The current version only lists the
registers as per what you'd find in an E500 CPU.

These registers aren't used directly by linux, (except for a couple
of optional debug statements), and they are listed at the end of
the vb_status struct, (meaning no offset shift to other important
struct entries), so the impact here to linux is none.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/vbi/vdk_interface.h |   49 +++++++++++++++++++++++++++++++++++++-----
 1 files changed, 43 insertions(+), 6 deletions(-)

diff --git a/include/vbi/vdk_interface.h b/include/vbi/vdk_interface.h
index b9206da..aa8740a 100644
--- a/include/vbi/vdk_interface.h
+++ b/include/vbi/vdk_interface.h
@@ -129,13 +129,32 @@
 #define VB_STATUS_R4                    4*31
 
 #if defined(CONFIG_E500)
+#define VB_STATUS_MCSRR0                4*32
+#define VB_STATUS_MCSRR1                4*33
 #define VB_STATUS_ESR                   4*34
+#define VB_STATUS_MCSR                  4*35
+#define VB_STATUS_MCAR                  4*36
 #define VB_STATUS_DEAR                  4*37
+#define VB_STATUS_EMSR                  4*38
+#define VB_STATUS_ESRR0                 4*39
+#define VB_STATUS_ESRR1                 4*40
+
 #elif defined(CONFIG_6xx)
-#define VB_STATUS_DAR                   4*32
-#define VB_STATUS_DSISR                 4*33
-#define VB_STATUS_ESR                   VB_STATUS_DSISR
-#else
+#define VB_STATUS_DAR			4*32
+#define VB_STATUS_DSISR			4*33
+#define VB_STATUS_EMSR			4*34
+#define VB_STATUS_ESRR0			4*35
+#define VB_STATUS_ESRR1			4*36
+/*
+ * ESR <--> DSISR aren't a one to one mapping, but in the use cases for
+ * 6xx, it is always "lwz r5,VB_STATUS_ESR(r10); stw r5,_ESR(r11);"
+ * and for 6xx we have _ESR defined in powerpc/kernel/asm-offsets.c as
+ * "DEFINE(_ESR, STACK_FRAME_OVERHEAD+offsetof(struct pt_regs, dsisr));"
+ */
+#define VB_STATUS_ESR			VB_STATUS_DSISR
+
+#else	/* !E500 and !6xx */
+
 #error unsupported CPU family
 #endif
 
@@ -318,8 +337,8 @@ struct vb_status
     uint32_t r3;   /* 30: R3 at time of the interrupt */
     uint32_t r4;   /* 31: R4 at time of the interrupt */
 
+#if defined(CONFIG_E500)
     /* Registers saved by hypervisor during exception processing only */
-
     uint32_t mcsrr0; /* 32: */
     uint32_t mcsrr1; /* 33: */
     uint32_t esr;    /* 34: */
@@ -330,7 +349,7 @@ struct vb_status
     uint32_t esrr0;  /* 39: */
     uint32_t esrr1;  /* 40: */
 
-    /* Configuration registers (only updated upon board creation */
+    /* Configuration registers (only updated upon board creation) */
     uint32_t svr;    /* 41: */
     uint32_t pir;    /* 42: */
     uint32_t pvr;    /* 43: */
@@ -339,6 +358,24 @@ struct vb_status
     uint32_t bucsr;  /* 46: */
     uint32_t l1csr0; /* 47: */
     uint32_t l1csr1; /* 48: */
+
+#elif defined(CONFIG_6xx)
+    uint32_t dar;    /* 32: */
+    uint32_t dsisr;  /* 33: */
+    uint32_t emsr;   /* 34: */
+    uint32_t esrr0;  /* 35: */
+    uint32_t esrr1;  /* 36: */
+
+    /* Configuration registers (only updated upon board creation) not all used*/
+    uint32_t pir;    /* 37: */
+    uint32_t pvr;    /* 38: */
+    uint32_t hid0;   /* 39: */
+    uint32_t hid1;   /* 40: */
+    uint32_t hid2;   /* 41: */
+    uint32_t l2cr;   /* 42: */
+#else
+#error unsupported CPU family
+#endif
 #endif
     uint32_t tick_count;    /* how many ticks VB should have received */
 };
-- 
1.6.5.2

