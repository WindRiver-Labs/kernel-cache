From 96d4fc3b7e16d3a66acd8f9a63bc2bc7c83c7e10 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Tue, 10 May 2011 14:44:23 +0800
Subject: [PATCH] wrhv/ppc: introduce memmap kernel parameter

On PPC GOS some memories are assigned to some devices for private use
by bootloader, such as the memory exclusively used by QMAN and BMAN
on p4080 board. So we need a method to reserve these memories.
We can't do this in the corresponding drivers because it is too
late for this purpose. The kernel parameter "memmap=nn[KMG]$ss[KMG"
is already used by x86 architecture for this function. So reuse it
on PPC.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/kernel/vbi/wrhv.c |   30 ++++++++++++++++++++++++++++++
 1 files changed, 30 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index fcc7dd3..09fb0f4 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -2602,3 +2602,33 @@ void pci_msi_disable(struct pci_dev *dev)
 }
 DECLARE_PCI_FIXUP_FINAL(PCI_ANY_ID, PCI_ANY_ID, pci_msi_disable);
 #endif
+
+static int __init parse_memmap_opt(char *p)
+{
+	char *oldp;
+	u64 start, size, offset;
+
+	if (!p)
+		return -EINVAL;
+
+	oldp = p;
+	size = memparse(p, &p);
+	if (p == oldp)
+		return -EINVAL;
+
+	if (*p == '$')
+		start = memparse(p + 1, &p);
+	else
+		return -EINVAL;
+
+	/*
+	 * The guest physical address of a VB is start from 0. So we can get
+	 * the real RAM offset of a VB by using following method.
+	 */
+	vbi_guest_phys_to_phys(0, &offset);
+
+	start = start - offset;	/* Convert to guest physical address */
+	lmb_reserve(start, size);
+	return 0;
+}
+early_param("memmap", parse_memmap_opt);
-- 
1.7.0.4

