From 1317974878cd2d668ed5ef790ed71442b22fbced Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce.ashfield@windriver.com>
Date: Sun, 11 Jul 2010 11:18:01 -0400
Subject: [PATCH] wrhv/e500: tlb_cam fixes for paravirtualized kernels

The following commit in 2.6.34.1 adjusts the tlb cam code
for e500 based boards.

commit b8504b8d34bf036b952c3f3b0f5cd5864d5f42e5
Author: Kumar Gala <galak@kernel.crashing.org>
Date:   Thu May 13 14:38:21 2010 -0500

    powerpc/fsl-booke: Move loadcam_entry back to asm code to fix SMP ftrace

    commit 78f622377f7d31d988db350a43c5689dd5f31876 upstream.

    When we build with ftrace enabled its possible that loadcam_entry would
    have used the stack pointer (even though the code doesn't need it).  We
    call loadcam_entry in __secondary_start before the stack is setup.  To
    ensure that loadcam_entry doesn't use the stack pointer the easiest
    solution is to just have it in asm code.

    Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

We need to modify the paravirtualized code to declare and define
the functions that have been relocated.

Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 arch/powerpc/mm/mmu_decl.h            |   22 ++++++++++++++--------
 arch/powerpc/mm/wrhv_tlb_nohash_low.S |   28 ++++++++++++++++++++++++++++
 2 files changed, 42 insertions(+), 8 deletions(-)

diff --git a/arch/powerpc/mm/mmu_decl.h b/arch/powerpc/mm/mmu_decl.h
index 7870aba..7877b32 100644
--- a/arch/powerpc/mm/mmu_decl.h
+++ b/arch/powerpc/mm/mmu_decl.h
@@ -134,6 +134,19 @@ extern unsigned long wii_mmu_mapin_mem2(unsigned long top);
 extern void wii_memory_fixups(void);
 #endif
 
+#if defined(CONFIG_FSL_BOOKE)
+
+struct tlbcam {
+	u32	MAS0;
+	u32	MAS1;
+	unsigned long	MAS2;
+	u32	MAS3;
+	u32	MAS7;
+};
+extern void loadcam_entry(unsigned int index);
+
+#endif
+
 /* ...and now those things that may be slightly different between processor
  * architectures.  -- Dan
  */
@@ -154,15 +167,8 @@ extern unsigned long mmu_mapin_ram(unsigned long top);
 extern void MMU_init_hw(void);
 extern unsigned long mmu_mapin_ram(unsigned long top);
 extern void adjust_total_lowmem(void);
-extern void loadcam_entry(unsigned int index);
 
-struct tlbcam {
-	u32	MAS0;
-	u32	MAS1;
-	unsigned long	MAS2;
-	u32	MAS3;
-	u32	MAS7;
-};
+
 #elif defined(CONFIG_PPC32)
 /* anything 32-bit except 4xx or 8xx */
 extern void MMU_init_hw(void);
diff --git a/arch/powerpc/mm/wrhv_tlb_nohash_low.S b/arch/powerpc/mm/wrhv_tlb_nohash_low.S
index 5ecc370..9f53b72 100644
--- a/arch/powerpc/mm/wrhv_tlb_nohash_low.S
+++ b/arch/powerpc/mm/wrhv_tlb_nohash_low.S
@@ -193,3 +193,31 @@ ALT_MMU_FTR_SECTION_END_IFCLR(MMU_FTR_USE_TLBILX)
 #else
 #error Unsupported processor type !
 #endif
+
+#if defined(CONFIG_FSL_BOOKE)
+/*
+ * extern void loadcam_entry(unsigned int index)
+ *
+ * Load TLBCAM[index] entry in to the L2 CAM MMU
+ */
+_GLOBAL(loadcam_entry)
+	LOAD_REG_ADDR(r4, TLBCAM)
+	mulli	r5,r3,TLBCAM_SIZE
+	add	r3,r5,r4
+	lwz	r4,TLBCAM_MAS0(r3)
+	mtspr	SPRN_MAS0,r4
+	lwz	r4,TLBCAM_MAS1(r3)
+	mtspr	SPRN_MAS1,r4
+	PPC_LL	r4,TLBCAM_MAS2(r3)
+	mtspr	SPRN_MAS2,r4
+	lwz	r4,TLBCAM_MAS3(r3)
+	mtspr	SPRN_MAS3,r4
+BEGIN_MMU_FTR_SECTION
+	lwz	r4,TLBCAM_MAS7(r3)
+	mtspr	SPRN_MAS7,r4
+END_MMU_FTR_SECTION_IFSET(MMU_FTR_BIG_PHYS)
+	isync
+	tlbwe
+	isync
+	blr
+#endif
-- 
1.6.5.2

