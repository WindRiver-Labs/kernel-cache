From fe86563efd9500d373844afeb675845149390f9a Mon Sep 17 00:00:00 2001
From: Thomas Tai <thomas.tai@windriver.com>
Date: Thu, 21 Oct 2010 07:53:01 -0700
Subject: [PATCH 2/3] early debug console using wrhv duart

linux use early debug console to output startup message,
this debug console is only intended to be use during
debug. When using hypervisor's actual device driver, it
becomes useful to see early bootup message. Most of the
functions will call wrhv_duart related functions implemented
in wrhv.c

This feature is enable/disable via kernel options.

Signed-off-by: Thomas Tai <thomas.tai@windriver.com>
---
 arch/powerpc/Kconfig.debug       |    7 ++++
 arch/powerpc/include/asm/udbg.h  |    1 +
 arch/powerpc/kernel/udbg.c       |    2 +
 arch/powerpc/kernel/udbg_16550.c |   60 ++++++++++++++++++++++++++++++++++++-
 4 files changed, 68 insertions(+), 2 deletions(-)

diff --git a/arch/powerpc/Kconfig.debug b/arch/powerpc/Kconfig.debug
index 508eaad..48ba82c 100644
--- a/arch/powerpc/Kconfig.debug
+++ b/arch/powerpc/Kconfig.debug
@@ -245,6 +245,13 @@ config PPC_EARLY_DEBUG_40x
 	  inbuilt serial port. This works on chips with a 16550 compatible
 	  UART. Xilinx chips with uartlite cannot use this option.
 
+config PPC_EARLY_DEBUG_WRHV_DUART
+	bool "Early serial debugging using wrhv duart"
+	depends on WRHV
+	help
+	  Select this to enable early debugging via the wrhv duart
+	  device driver.
+
 config PPC_EARLY_DEBUG_CPM
 	bool "Early serial debugging for Freescale CPM-based serial ports"
 	depends on SERIAL_CPM
diff --git a/arch/powerpc/include/asm/udbg.h b/arch/powerpc/include/asm/udbg.h
index 11ae699..42d8a14 100644
--- a/arch/powerpc/include/asm/udbg.h
+++ b/arch/powerpc/include/asm/udbg.h
@@ -52,6 +52,7 @@ extern void __init udbg_init_44x_as1(void);
 extern void __init udbg_init_40x_realmode(void);
 extern void __init udbg_init_cpm(void);
 extern void __init udbg_init_usbgecko(void);
+extern void __init udbg_init_wrhv_duart(void);
 
 #endif /* __KERNEL__ */
 #endif /* _ASM_POWERPC_UDBG_H */
diff --git a/arch/powerpc/kernel/udbg.c b/arch/powerpc/kernel/udbg.c
index e39cad8..32934c0 100644
--- a/arch/powerpc/kernel/udbg.c
+++ b/arch/powerpc/kernel/udbg.c
@@ -62,6 +62,8 @@ void __init udbg_early_init(void)
 	udbg_init_cpm();
 #elif defined(CONFIG_PPC_EARLY_DEBUG_USBGECKO)
 	udbg_init_usbgecko();
+#elif defined(CONFIG_PPC_EARLY_DEBUG_WRHV_DUART)
+	udbg_init_wrhv_duart();
 #endif
 
 #ifdef CONFIG_PPC_EARLY_DEBUG
diff --git a/arch/powerpc/kernel/udbg_16550.c b/arch/powerpc/kernel/udbg_16550.c
index b4b167b..8dd6e57 100644
--- a/arch/powerpc/kernel/udbg_16550.c
+++ b/arch/powerpc/kernel/udbg_16550.c
@@ -12,6 +12,10 @@
 #include <asm/udbg.h>
 #include <asm/io.h>
 
+#include <asm/wrhv.h>
+#include <vbi/vbi.h>
+#include <vbi/pdc.h>
+
 extern u8 real_readb(volatile u8 __iomem  *addr);
 extern void real_writeb(u8 data, volatile u8 __iomem *addr);
 extern u8 real_205_readb(volatile u8 __iomem  *addr);
@@ -87,8 +91,12 @@ static int udbg_550_getc(void)
 	return -1;
 }
 
-void udbg_init_uart(void __iomem *comport, unsigned int speed,
-		    unsigned int clock)
+void paravirt_udbg_init_uart(void __iomem *comport, unsigned int speed,
+		unsigned int clock)
+		__attribute__((weak, alias("native_udbg_init_uart")));
+
+void native_udbg_init_uart(void __iomem *comport, unsigned int speed,
+		unsigned int clock)
 {
 	unsigned int dll, base_bauds;
 
@@ -119,6 +127,13 @@ void udbg_init_uart(void __iomem *comport, unsigned int speed,
 		udbg_getc = udbg_550_getc;
 		udbg_getc_poll = udbg_550_getc_poll;
 	}
+
+}
+
+void udbg_init_uart(void __iomem *comport, unsigned int speed,
+		unsigned int clock)
+{
+	paravirt_udbg_init_uart(comport, speed, clock);
 }
 
 unsigned int udbg_probe_uart_speed(void __iomem *comport, unsigned int clock)
@@ -298,3 +313,44 @@ void __init udbg_init_40x_realmode(void)
 	udbg_getc_poll = NULL;
 }
 #endif /* CONFIG_PPC_EARLY_DEBUG_40x */
+
+#ifdef CONFIG_PPC_EARLY_DEBUG_WRHV_DUART
+/* following extern functions is implemented in wrhv.c
+ * to access hypervisor serial driver
+ */
+extern void wrhv_duart_putc(char c);
+extern vbi_pdc_handle duart_pdc;
+extern int wrhv_duart_tstc(void);
+extern int wrhv_duart_getc(void);
+extern int wrhv_duart_init(void);
+
+static void udbg_wrhv_duart_flush(void)
+{
+}
+
+void udbg_wrhv_duart_putc(char c)
+{
+	wrhv_duart_putc(c);
+}
+
+int udbg_wrhv_duart_getc(void)
+{
+	if (!wrhv_duart_tstc()) {
+		return -1;
+	}
+	return wrhv_duart_getc();
+}
+
+void __init udbg_init_wrhv_duart(void)
+{
+	wrhv_duart_init();
+
+	/* setup function pointer for early
+	 * console output and set no input polling.
+	 */
+	udbg_putc = udbg_wrhv_duart_putc;
+	udbg_flush = udbg_wrhv_duart_flush;
+	udbg_getc = udbg_wrhv_duart_getc;
+	udbg_getc_poll = NULL;
+}
+#endif /* CONFIG_PPC_EARLY_WRHV_DUART */
-- 
1.6.5.2

