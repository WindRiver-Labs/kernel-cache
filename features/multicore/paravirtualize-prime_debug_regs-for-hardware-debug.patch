From e387d73aabf7ae3e4232089d4b35d9a756c10cd3 Mon Sep 17 00:00:00 2001
From: Thomas Tai <thomas.tai@windriver.com>
Date: Mon, 20 Sep 2010 07:22:01 -0700
Subject: [PATCH] paravirtualize prime_debug_regs for hardware debug

Carry over from p4080 paravirtualize prime_debug_regs for using
hardware debug register.

Signed-off-by: Thomas Tai <thomas.tai@windriver.com>
---
 arch/powerpc/include/asm/paravirt.h |    2 ++
 arch/powerpc/include/asm/ptrace.h   |    9 ---------
 arch/powerpc/include/asm/reg.h      |    5 -----
 arch/powerpc/kernel/paravirt.c      |    7 +++++++
 arch/powerpc/kernel/process.c       |    9 ++++++++-
 arch/powerpc/kernel/vbi/wrhv.c      |   23 +++++++++++++++++++++++
 6 files changed, 40 insertions(+), 15 deletions(-)

diff --git a/arch/powerpc/include/asm/paravirt.h b/arch/powerpc/include/asm/paravirt.h
index 046db30..d0f2af3 100644
--- a/arch/powerpc/include/asm/paravirt.h
+++ b/arch/powerpc/include/asm/paravirt.h
@@ -27,6 +27,7 @@ extern int native_kgdb_arch_handle_exception(int vector, int signo,
 				struct pt_regs *linux_regs);
 extern void __kprobes native_DebugException(struct pt_regs *regs,
 				unsigned long debug_status);
+extern void native_prime_debug_regs(struct thread_struct *thread);
 extern int __init native_early_init_dt_scan_memory_ppc(unsigned long node, 
 			const char *uname, int depth, void *data);
 extern void __init native_time_init_cont(void);
@@ -51,6 +52,7 @@ struct pv_cpu_ops {
 	unsigned int (*get_pvr)(void);
 	unsigned int (*get_svr)(void);
 	void (*DebugException)(struct pt_regs *regs, unsigned long debug_status);
+	void (*prime_debug_regs)(struct thread_struct *thread);
 	int (*kgdb_arch_handle_exception)(int vector, int signo, int err_code,
                                char *remcom_in_buffer, char *remcom_out_buffer,
                                struct pt_regs *linux_regs);
diff --git a/arch/powerpc/include/asm/ptrace.h b/arch/powerpc/include/asm/ptrace.h
index c248b23..77bbc68 100644
--- a/arch/powerpc/include/asm/ptrace.h
+++ b/arch/powerpc/include/asm/ptrace.h
@@ -133,16 +133,7 @@ do {									      \
 } while (0)
 #endif /* __powerpc64__ */
 
-#ifndef CONFIG_PARAVIRT
 #define arch_has_single_step()	(1)
-#else
-#ifdef CONFIG_PPC_E500MC
-#define arch_has_single_step()	(0)
-#else
-/* E500 hypervisor has hardware debug register for GuestOS */
-#define arch_has_single_step()	(1)
-#endif
-#endif
 #define arch_has_block_step()	(!cpu_has_feature(CPU_FTR_601))
 #define ARCH_HAS_USER_SINGLE_STEP_INFO
 
diff --git a/arch/powerpc/include/asm/reg.h b/arch/powerpc/include/asm/reg.h
index 3ef54b0..5fefbb9 100644
--- a/arch/powerpc/include/asm/reg.h
+++ b/arch/powerpc/include/asm/reg.h
@@ -894,13 +894,8 @@
 			asm volatile("mfspr %0," __stringify(rn) \
 				: "=r" (rval)); rval;})
 
-#ifdef CONFIG_WRHV
-extern void wrhv_mtspr(unsigned int, unsigned int);
-#define mtspr(rn, v)	wrhv_mtspr(rn, v)
-#else
 #define mtspr(rn, v)	asm volatile("mtspr " __stringify(rn) ",%0" : : "r" (v)\
 				     : "memory")
-#endif
 
 #ifdef __powerpc64__
 #ifdef CONFIG_PPC_CELL
diff --git a/arch/powerpc/kernel/paravirt.c b/arch/powerpc/kernel/paravirt.c
index 862c6be..b3e3755 100644
--- a/arch/powerpc/kernel/paravirt.c
+++ b/arch/powerpc/kernel/paravirt.c
@@ -125,6 +125,7 @@ struct pv_cpu_ops pv_cpu_ops = {
 	.get_pvr = native_get_pvr,
 	.get_svr = native_get_svr,
 	.DebugException = native_DebugException,
+	.prime_debug_regs = native_prime_debug_regs,
 #ifdef CONFIG_KGDB
 	.kgdb_arch_handle_exception = native_kgdb_arch_handle_exception,
 #endif
@@ -216,6 +217,12 @@ void __kprobes paravirt_DebugException(struct pt_regs *regs, unsigned long debug
 	pv_cpu_ops.DebugException(regs, debug_status);
 
 }
+
+void  paravirt_prime_debug_regs(struct thread_struct *thread)
+{
+	pv_cpu_ops.prime_debug_regs(thread);
+}
+
 int paravirt_kgdb_arch_handle_exception(int vector, int signo, int err_code,
 			char *remcom_in_buffer, char *remcom_out_buffer,
 			struct pt_regs *linux_regs)
diff --git a/arch/powerpc/kernel/process.c b/arch/powerpc/kernel/process.c
index 7944551..041affb 100644
--- a/arch/powerpc/kernel/process.c
+++ b/arch/powerpc/kernel/process.c
@@ -342,8 +342,10 @@ static void set_debug_reg_defaults(struct thread_struct *thread)
 	thread->dbcr1 = 0;
 #endif
 }
+void paravirt_prime_debug_regs(struct thread_struct *thread)
+	__attribute__((weak, alias("native_prime_debug_regs")));
 
-static void prime_debug_regs(struct thread_struct *thread)
+void native_prime_debug_regs(struct thread_struct *thread)
 {
 	mtspr(SPRN_IAC1, thread->iac1);
 	mtspr(SPRN_IAC2, thread->iac2);
@@ -363,6 +365,11 @@ static void prime_debug_regs(struct thread_struct *thread)
 	mtspr(SPRN_DBCR2, thread->dbcr2);
 #endif
 }
+
+static void prime_debug_regs(struct thread_struct *thread)
+{
+	paravirt_prime_debug_regs(thread);
+}
 /*
  * Unless neither the old or new thread are making use of the
  * debug registers, set the debug registers from the values
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 3061628..3fc724b 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -1292,6 +1292,28 @@ void wrhv_mtspr(unsigned int sprn, unsigned int value)
 	}
 }
 
+/* arch/powerpc/kernel/process.c */ 
+extern void wrhv_mtspr(unsigned int, unsigned int);
+void wrhv_prime_debug_regs(struct thread_struct *thread)
+{
+	wrhv_mtspr(SPRN_IAC1, thread->iac1);
+	wrhv_mtspr(SPRN_IAC2, thread->iac2);
+#if CONFIG_PPC_ADV_DEBUG_IACS > 2
+	wrhv_mtspr(SPRN_IAC3, thread->iac3);
+	wrhv_mtspr(SPRN_IAC4, thread->iac4);
+#endif
+	wrhv_mtspr(SPRN_DAC1, thread->dac1);
+	wrhv_mtspr(SPRN_DAC2, thread->dac2);
+#if CONFIG_PPC_ADV_DEBUG_DVCS > 0
+	wrhv_mtspr(SPRN_DVC1, thread->dvc1);
+	wrhv_mtspr(SPRN_DVC2, thread->dvc2);
+#endif
+	wrhv_mtspr(SPRN_DBCR0, thread->dbcr0);
+	wrhv_mtspr(SPRN_DBCR1, thread->dbcr1);
+#ifdef CONFIG_BOOKE
+	wrhv_mtspr(SPRN_DBCR2, thread->dbcr2);
+#endif
+}
 
 /* arch/powerpc/kernel/traps.c */
 void __kprobes wrhv_DebugException(struct pt_regs *regs, unsigned long debug_status)
@@ -1477,6 +1499,7 @@ void wrhv_init(void)
 	pv_cpu_ops.get_pvr = wrhv_get_pvr;
 	pv_cpu_ops.get_svr = wrhv_get_svr;
 	pv_cpu_ops.DebugException = wrhv_DebugException;
+	pv_cpu_ops.prime_debug_regs = wrhv_prime_debug_regs;
 	pv_cpu_ops.kgdb_arch_handle_exception =
 		wrhv_kgdb_arch_handle_exception;
 	pv_cpu_ops.ppc_proc_freq =
-- 
1.6.5.2

