From 56dccf892932390dab1a08620f7c5bdb7993fb38 Mon Sep 17 00:00:00 2001
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Thu, 1 Jul 2010 10:27:53 +0800
Subject: [PATCH 2/4] x86-64: vbi updates

a. define vbi 64-bit support marco LP64
b. fix vbi compile error when building x86-64 kernel

Signed-off-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 arch/x86/include/asm/reg_vbi.h |    6 ++++++
 arch/x86/include/asm/vbi.h     |    6 ++++++
 arch/x86/kernel/vbi/syscalls.S |    8 +++++---
 include/vbi/vbi.h              |    6 ++++++
 4 files changed, 23 insertions(+), 3 deletions(-)

diff --git a/arch/x86/include/asm/reg_vbi.h b/arch/x86/include/asm/reg_vbi.h
index 6f0a455..676638a 100644
--- a/arch/x86/include/asm/reg_vbi.h
+++ b/arch/x86/include/asm/reg_vbi.h
@@ -17,6 +17,12 @@
 #ifndef __ASM_REG_VBI_H
 #define __ASM_REG_VBI_H
 
+#ifdef CONFIG_64BIT
+#ifndef LP64
+#define LP64
+#endif
+#endif
+
 #define IO_BMAP_SIZE	32	/* IO bitmap for port 0x000 - 0x3ff */
 
 #ifndef _ASMLANGUAGE
diff --git a/arch/x86/include/asm/vbi.h b/arch/x86/include/asm/vbi.h
index ee5908b..ae7b51a 100644
--- a/arch/x86/include/asm/vbi.h
+++ b/arch/x86/include/asm/vbi.h
@@ -17,6 +17,12 @@
 #ifndef __ASM_VBI_H
 #define __ASM_VBI_H
 
+#ifdef CONFIG_64BIT
+#ifndef LP64
+#define LP64
+#endif
+#endif
+
 /*
  * The following definitions are used for symbol name compatibility.
  *
diff --git a/arch/x86/kernel/vbi/syscalls.S b/arch/x86/kernel/vbi/syscalls.S
index 4cf386e..4e6f7ad 100644
--- a/arch/x86/kernel/vbi/syscalls.S
+++ b/arch/x86/kernel/vbi/syscalls.S
@@ -70,13 +70,14 @@ name:						\
  *
  */
 #ifdef LP64
+.globl vbi_send;
 vbi_send:
 	mov     %rax,ARG7(VBI_STACK_FRAME_SIZE) /* ctl */
 	push    %r10            /* save the value of r10 */
 	mov     %rax,%r10       /* load r10 with the values of "ctl" */
 	push    $7              /* number of arguments */
 
-	mov     $VBI_SYS_send+$HY_SIZE_OVERRIDE,%rax /* system call number */
+	mov     $(VBI_SYS_send + HY_SIZE_OVERRIDE),%rax /* system call number */
 	vmcall
 
 	pop     %r10            /* pop the number of arguments */
@@ -183,11 +184,12 @@ vbi_vcore_irq_unlock:
 vbi_vcore_irq_lock:
     pushf				/* push EFLAGS on stack */
 #ifdef LP64
-    pop		eax			/* get EFLAGS in EAX */
+    pop		%rax			/* get EFLAGS in EAX */
+    andq	$EFLAGS_IF,%rax
 #else
     pop		%eax			/* get EFLAGS in EAX */
-#endif
     and		$EFLAGS_IF,%eax		/* mask it with IF bit */
+#endif
     cli					/* lock interrupts */
     ret
 
diff --git a/include/vbi/vbi.h b/include/vbi/vbi.h
index 560f638..53566a9 100644
--- a/include/vbi/vbi.h
+++ b/include/vbi/vbi.h
@@ -17,6 +17,12 @@
 #ifndef _VBI_VBI_H
 #define _VBI_VBI_H
 
+#ifdef CONFIG_64BIT
+#ifndef LP64
+#define LP64
+#endif
+#endif
+
 #include <vbi/errors.h>
 #include <vbi/types.h>
 #include <vbi/version.h>
-- 
1.6.5.2

