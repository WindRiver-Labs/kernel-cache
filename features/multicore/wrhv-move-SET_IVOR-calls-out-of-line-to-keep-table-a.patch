From 90d4297191fa2c0e59f2c79199794c32977f4ec0 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Fri, 10 Jun 2011 14:06:42 -0400
Subject: [PATCH] wrhv: move SET_IVOR calls out of line to keep table at 0x100

The list of calls to SET_IVOR mean the code between _start
and the 1st vector is > 0x100, and so CriticalInput will
align to the next interval at 0x200, which breaks booting
on the MILS hypervisor. We can move these out of line, and
then things will collapse down to have CriticalInput be
at 0x100 again.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 arch/powerpc/kernel/head_wrhv.S |   63 ++++++++++++++++++++++++---------------
 1 files changed, 39 insertions(+), 24 deletions(-)

diff --git a/arch/powerpc/kernel/head_wrhv.S b/arch/powerpc/kernel/head_wrhv.S
index 27c3ef3..2992a79 100644
--- a/arch/powerpc/kernel/head_wrhv.S
+++ b/arch/powerpc/kernel/head_wrhv.S
@@ -138,30 +138,14 @@ _ENTRY(__early_start)
 	li	r0,0
 	stwu	r0,THREAD_SIZE-STACK_FRAME_OVERHEAD(r1)
 
-	/* Establish the interrupt vector offsets */
-	SET_IVOR(0,  CriticalInput);
-	SET_IVOR(1,  MachineCheck);
-	SET_IVOR(2,  DataStorage);
-	SET_IVOR(3,  InstructionStorage);
-	SET_IVOR(4,  ExternalInput);
-	SET_IVOR(5,  Alignment);
-	SET_IVOR(6,  Program);
-	SET_IVOR(7,  FloatingPointUnavailable);
-	SET_IVOR(8,  SystemCall);
-	SET_IVOR(9,  AuxillaryProcessorUnavailable);
-	SET_IVOR(10, Decrementer);
-	SET_IVOR(11, FixedIntervalTimer);
-	SET_IVOR(12, WatchdogTimer);
-	SET_IVOR(13, DataTLBError);
-	SET_IVOR(14, InstructionTLBError);
-	SET_IVOR(15, DebugDebug);
-	SET_IVOR(32, SPEUnavailable);
-	SET_IVOR(33, SPEFloatingPointData);
-	SET_IVOR(34, SPEFloatingPointRound);
-	SET_IVOR(35, PerformanceMonitor);
-	SET_IVOR(36, doorbell_exception);
-	SET_IVOR(37, CriticalDoorbell);
-
+	/*
+	 * Move the calls to SET_IVOR(...) out of line, since they will
+	 * push us past 0x100 and hence CriticalInput will align up at
+	 * 0x200 instead, which breaks MILS.  Also, since SET_IVOR uses
+	 * blr itself, we use two b, instead of a bl + blr combo.
+	 */
+	b	set_ivors
+done_ivors:
 	bl	early_init
 
 #ifdef CONFIG_RELOCATABLE
@@ -714,6 +698,37 @@ set_exec_table:
 	blr
 
 /*
+ * Establish the interrupt vector offsets.  Since SET_IVOR
+ * is itself using bl+blr into set_exec_table above, we just
+ * use absolute branches to labels to get here and back.  It
+ * is kept out-of-line so that CriticalInput can be at 0x100.
+ */
+set_ivors:
+	SET_IVOR(0,  CriticalInput);
+	SET_IVOR(1,  MachineCheck);
+	SET_IVOR(2,  DataStorage);
+	SET_IVOR(3,  InstructionStorage);
+	SET_IVOR(4,  ExternalInput);
+	SET_IVOR(5,  Alignment);
+	SET_IVOR(6,  Program);
+	SET_IVOR(7,  FloatingPointUnavailable);
+	SET_IVOR(8,  SystemCall);
+	SET_IVOR(9,  AuxillaryProcessorUnavailable);
+	SET_IVOR(10, Decrementer);
+	SET_IVOR(11, FixedIntervalTimer);
+	SET_IVOR(12, WatchdogTimer);
+	SET_IVOR(13, DataTLBError);
+	SET_IVOR(14, InstructionTLBError);
+	SET_IVOR(15, DebugDebug);
+	SET_IVOR(32, SPEUnavailable);
+	SET_IVOR(33, SPEFloatingPointData);
+	SET_IVOR(34, SPEFloatingPointRound);
+	SET_IVOR(35, PerformanceMonitor);
+	SET_IVOR(36, doorbell_exception);
+	SET_IVOR(37, CriticalDoorbell);
+	b done_ivors
+
+/*
  * Global functions
  */
 
-- 
1.7.0.4

