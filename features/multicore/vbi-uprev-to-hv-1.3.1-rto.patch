From c76e70173a9a32fa95a579a7708b51d64d167c4e Mon Sep 17 00:00:00 2001
Message-Id: <c76e70173a9a32fa95a579a7708b51d64d167c4e.1310065281.git.Jim.Somerville@windriver.com>
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Thu, 7 Jul 2011 15:00:50 -0400
Subject: [PATCH 1/1] vbi uprev to hv 1.3.1 rto

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 arch/arm/kernel/vbi/syscalls.S  |    2 ++
 arch/mips/kernel/vbi/syscalls.S |    5 +++--
 arch/x86/include/asm/arch_vbi.h |   12 ++++++------
 arch/x86/kernel/vbi/syscalls.S  |    2 +-
 include/vbi/compat.h            |    5 ++++-
 include/vbi/interface.h         |    2 +-
 include/vbi/syscall.h           |   20 ++++++--------------
 include/vbi/version.h           |    2 +-
 8 files changed, 24 insertions(+), 26 deletions(-)

diff --git a/arch/arm/kernel/vbi/syscalls.S b/arch/arm/kernel/vbi/syscalls.S
index b2c042a..dcfb0d7 100644
--- a/arch/arm/kernel/vbi/syscalls.S
+++ b/arch/arm/kernel/vbi/syscalls.S
@@ -75,6 +75,7 @@ For this reason and others, THIS CODE WILL PROBABLY NOT WORK IN THUMB MODE.
         FUNC_EXPORT(vbi_set_mem_attr)
         FUNC_EXPORT(vbi_get_mem_attr)
         FUNC_EXPORT(vbi_vb_remote)
+        FUNC_EXPORT(vbi_vb_mgmt)
 
 	/* Dynamic VB API */
 	FUNC_EXPORT(vbi_vb_create)
@@ -110,6 +111,7 @@ For this reason and others, THIS CODE WILL PROBABLY NOT WORK IN THUMB MODE.
         FUNC_EXPORT(vbi_disable_vmmu)
         FUNC_EXPORT(vbi_create_vmmu)
         FUNC_EXPORT(vbi_delete_vmmu)
+        FUNC_EXPORT(vbi_tlb_load_vmmu)
         FUNC_EXPORT(vbi_flush_tlb)
 
         /* ARM */
diff --git a/arch/mips/kernel/vbi/syscalls.S b/arch/mips/kernel/vbi/syscalls.S
index 31f4cf7..462cdeb 100644
--- a/arch/mips/kernel/vbi/syscalls.S
+++ b/arch/mips/kernel/vbi/syscalls.S
@@ -940,13 +940,14 @@ tryAgain:
 	
 	/* Perform System Call to re-enable ints if ints pending */
 	andi    t1, 0
-	beqz    t1, 0f
+	beqz    t1, unlock_done
 
 	li	v0, VBI_SYS_int_enable
 	syscall
+
 	nop
 	b	tryAgain
-0:
+unlock_done:
 	j ra
 	nop
 FUNC_END(vbi_vcore_irq_unlock)
diff --git a/arch/x86/include/asm/arch_vbi.h b/arch/x86/include/asm/arch_vbi.h
index 8f480c7..63dd5a3 100644
--- a/arch/x86/include/asm/arch_vbi.h
+++ b/arch/x86/include/asm/arch_vbi.h
@@ -24,11 +24,11 @@
 #pragma pack(push,1)
 #endif
 
-struct VBI_XDTR
+struct VBI_XDTR64
 {
 	uint16_t limit;		/* maximum size of the DT */
-	size_t base;		/* address of DT */
-	uint16_t pad;
+	uint64_t base;		/* address of DT */
+	uint16_t pad[3];
 }
 #ifndef _MSC_TOOL
 __attribute__((packed));
@@ -49,9 +49,9 @@ __attribute__((packed));
 #pragma pack(pop)
 #endif
 
-typedef struct VBI_XDTR vbi_gdtr;
-typedef struct VBI_XDTR vbi_idtr;
-typedef struct VBI_XDTR vbi_ldtr;
+typedef struct VBI_XDTR64 vbi_gdtr;
+typedef struct VBI_XDTR64 vbi_idtr;
+typedef struct VBI_XDTR64 vbi_ldtr;
 
 typedef struct VBI_XDTR32 vbi_gdtr32;
 typedef struct VBI_XDTR32 vbi_idtr32;
diff --git a/arch/x86/kernel/vbi/syscalls.S b/arch/x86/kernel/vbi/syscalls.S
index 53ff445..96e1e4e 100644
--- a/arch/x86/kernel/vbi/syscalls.S
+++ b/arch/x86/kernel/vbi/syscalls.S
@@ -72,7 +72,7 @@ name:						\
 #ifdef LP64
 .globl vbi_send;
 vbi_send:
-	mov     %rax,ARG7(VBI_STACK_FRAME_SIZE) /* ctl */
+	mov     ARG7(VBI_STACK_FRAME_SIZE),%rax /* ctl */
 	push    %r10            /* save the value of r10 */
 	mov     %rax,%r10       /* load r10 with the values of "ctl" */
 	push    $7              /* number of arguments */
diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index b8cb320..ac69bb0 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -253,6 +253,9 @@
 #define vbiBoardSimpleConfigGet	vbi_board_simple_config_get
 #define vbiBoardConfigGet	vbi_board_config_get
 #define vbiVbMove		vbi_vb_move
-#define	vbiVbPrioritySet	vbi_vb_priority_set
+#define vbiVbPrioritySet	vbi_vb_priority_set
+
+#define intrDeviceChannelBuffer	intr_device_channel_buffer
+#define vbiPdcInit		vbi_pdc_init               
 
 #endif  /* _VBI_COMPAT_H */
diff --git a/include/vbi/interface.h b/include/vbi/interface.h
index 595ef04..623990c 100644
--- a/include/vbi/interface.h
+++ b/include/vbi/interface.h
@@ -89,7 +89,7 @@ identity mapped.
 /* VB versioning information */
 #define	VBI_VERSION_MAJOR	2	/* major version */
 #define	VBI_VERSION_MINOR	2	/* minor version */
-#define	VBI_VERSION_MAINT	0	/* maintenance version */
+#define	VBI_VERSION_MAINT	1	/* maintenance version */
 
 
 #ifndef _MSC_TOOL
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 6b36100..e53e08e 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -36,17 +36,13 @@ struct vbi_msg_info
 {
 	int32_t  id;		/* context id of sender */
 	uint32_t type;		/* message type (msg/event) */
-	VB_ALIGN_FIELD_64(size_t slen, pad1);	/* length of sent buffer */
-	VB_ALIGN_FIELD_64(size_t rlen, pad2);	/* length of received buffer */
+	uint64_t slen;		/* length of sent buffer */
+	uint64_t rlen;		/* length of received buffer */
 	uint16_t status;	/* message status information */
 	uint16_t error;		/* extended error status */
-#ifndef _MSC_TOOL
-	time_t timestamp;	/* time message was sent */
-#else
-	hv_time_t timestamp;	/* time message was sent */
-#endif
+	uint64_t timestamp;	/* time message was sent */
 	uint32_t nmsg;		/* number of queued messages remaining */
-};
+}  __attribute__((packed));
 
 /* message status bits as reported in the "status" field */
 
@@ -75,12 +71,8 @@ struct vbi_msg_ctl
 {
 	uint32_t flags;		/* operation flags */
 	uint32_t ordering;	/* order to receive messages */
-#ifndef _MSC_TOOL
-	time_t timeout;		/* receive timeout */
-#else
-	hv_time_t timeout;	/* receive timeout */
-#endif
-};
+	uint64_t timeout;	/* receive timeout */
+} __attribute__((packed));
 
 /* message control flags */
 
diff --git a/include/vbi/version.h b/include/vbi/version.h
index a39ac3b..68889d2 100644
--- a/include/vbi/version.h
+++ b/include/vbi/version.h
@@ -24,7 +24,7 @@
  */
 
 #define VBI_RUNTIME_NAME     "Wind River Hypervisor Virtual board interface"
-#define VBI_RUNTIME_VERSION  "2.2.0"
+#define VBI_RUNTIME_VERSION  "2.2.1"
 
 /* textual description of this product version */
 
-- 
1.6.4.4

