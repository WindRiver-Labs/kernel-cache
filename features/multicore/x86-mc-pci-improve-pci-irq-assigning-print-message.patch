From 3f22bb3cfb8445991bfda4c05cb58bf3144313c8 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Mon, 10 Jan 2011 16:01:48 +0800
Subject: [PATCH] x86-mc/pci: improve pci irq assigning print message

We really don't want to assign irq for any bridge itself now so here skip
printing that associated irq message to avoid making us confused for this.

Additionally use PCI macros kernel already provided to list each given
PCI device information as the kernel often expect. This will be more
readable than the original.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/x86/kernel/vbi/wrhv.c |   22 ++++++++++++++++------
 1 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/arch/x86/kernel/vbi/wrhv.c b/arch/x86/kernel/vbi/wrhv.c
index d8bb339..c4ee6e7 100644
--- a/arch/x86/kernel/vbi/wrhv.c
+++ b/arch/x86/kernel/vbi/wrhv.c
@@ -470,7 +470,7 @@ int find_shared_interrupt(char *devfn)
 
 static void __devinit pci_fixup_wrhv(struct pci_dev *dev)
 {
-	int irq;
+	int irq = -1;
 	char *devclass, devname[32] = { "Unknown" };
 	int skip_assign_irq = 0;
 
@@ -514,6 +514,13 @@ static void __devinit pci_fixup_wrhv(struct pci_dev *dev)
 			break;
 		}
 
+	case PCI_BASE_CLASS_BRIDGE:
+		/* Currently its unnecessary to assign irq for
+		 * any bridge itself. Maybe we need that in the future :)
+		 */
+		skip_assign_irq = 1;
+		break;
+
 	default:
 		skip_assign_irq = 1;
 		irq = dev->irq;
@@ -539,13 +546,16 @@ static void __devinit pci_fixup_wrhv(struct pci_dev *dev)
 		if (irq == VBI_INVALID_IRQ)
 			irq = WRHV_POLL_IRQ;
 		else
-			printk(KERN_INFO "WRHV-PCI: [%#x:%#x.%#x] shared irq [%d]\n",
-					dev->bus->number, dev->devfn >> 3, dev->devfn & 0x07, irq);
+			printk(KERN_INFO "WRHV-PCI: %04x:%02x:%02x.%d shared irq [%d]", pci_domain_nr(dev->bus),
+				dev->bus->number, PCI_SLOT(dev->devfn), PCI_FUNC(dev->devfn), irq);
+
 	}
 
-	dev->irq = irq;
-	printk(KERN_INFO "WRHV-PCI: %s CLASS:%x IRQ%d\n",
-		devname, dev->class, dev->irq);
+	if (irq != -1) {
+		dev->irq = irq;
+		printk(KERN_INFO "WRHV-PCI: %s CLASS:%x IRQ%d\n",
+			devname, dev->class, dev->irq);
+	}
 }
 
 DECLARE_PCI_FIXUP_FINAL(PCI_ANY_ID, PCI_ANY_ID, pci_fixup_wrhv);
-- 
1.6.5.2

