From 44ec84e8b81549b16658a1ce29dac6a14797b5d3 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Fri, 21 Oct 2011 11:04:27 +0800
Subject: [PATCH] ppc-mc: using the paravirtualized get_tb() to get proper tb for VDSO

We should use our paravirtualized get_tb() to get proper tb, but
its difficult to call C program in this pure assemble codes section,
so we substract tb orig stamp directly within update_gtod() to make
vdso easy for guest OS.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/kernel/time.c                |    7 +++++++
 arch/powerpc/kernel/vdso32/gettimeofday.S |   21 +++++++++++++++++++++
 2 files changed, 28 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/kernel/time.c b/arch/powerpc/kernel/time.c
index 4800525..4c266fc 100644
--- a/arch/powerpc/kernel/time.c
+++ b/arch/powerpc/kernel/time.c
@@ -438,7 +438,14 @@ static inline void update_gtod(u64 new_tb_stamp, u64 new_stamp_xsec,
 	 * We expect the caller to have done the first increment of
 	 * vdso_data->tb_update_count already.
 	 */
+#ifndef CONFIG_WRHV
 	vdso_data->tb_orig_stamp = new_tb_stamp;
+#else
+	/* We substract tb orig stamp with our paravirtualized get_tb() in
+	 * advance to make vdso easy for guest OS.
+	 */
+	vdso_data->tb_orig_stamp = get_tb() - new_tb_stamp;
+#endif
 	vdso_data->stamp_xsec = new_stamp_xsec;
 	vdso_data->tb_to_xs = new_tb_to_xs;
 	vdso_data->wtom_clock_sec = wall_to_monotonic.tv_sec;
diff --git a/arch/powerpc/kernel/vdso32/gettimeofday.S b/arch/powerpc/kernel/vdso32/gettimeofday.S
index ee038d4..b6d65c0 100644
--- a/arch/powerpc/kernel/vdso32/gettimeofday.S
+++ b/arch/powerpc/kernel/vdso32/gettimeofday.S
@@ -219,6 +219,7 @@ __do_get_xsec:
 	lwz	r5,CFG_TB_ORIG_STAMP(r9)
 	lwz	r6,(CFG_TB_ORIG_STAMP+4)(r9)
 
+#ifndef CONFIG_WRHV
 	/* Get a stable TB value */
 2:	mftbu	r3
 	mftbl	r4
@@ -232,6 +233,16 @@ __do_get_xsec:
 	 */
 	subfc	r7,r6,r4
 	subfe.	r0,r5,r3
+#else
+	/* Here we should use our paravirtualized get_tb() to get
+	 * proper tb, but its difficult to call C program in this
+	 * pure assemble codes section, so we substract tb orig stamp
+	 * in update_gtod() directly.
+	 */
+	mr	r7,r6
+	mr	r0,r5
+	cmpwi	0,r0,0
+#endif
 	bne-	3f
 
 	/* Load scale factor & do multiplication */
@@ -293,6 +304,7 @@ __do_get_tspec:
 	lwz	r5,CFG_TB_ORIG_STAMP(r9)
 	lwz	r6,(CFG_TB_ORIG_STAMP+4)(r9)
 
+#ifndef CONFIG_WRHV
 	/* Get a stable TB value */
 2:	mftbu	r3
 	mftbl	r4
@@ -304,6 +316,15 @@ __do_get_tspec:
 	 */
 	subfc	r7,r6,r4
 	subfe	r0,r5,r3
+#else
+	/* Here we should use our paravirtualized get_tb() to get
+	 * proper tb, but its difficult to call C program in this
+	 * pure assemble codes section, so we substract tb orig stamp
+	 * in update_gtod() directly.
+	 */
+	mr	r7,r6
+	mr	r0,r5
+#endif
 	slwi	r0,r0,12
 	rlwimi.	r0,r7,12,20,31
 	slwi	r7,r7,12
-- 
1.7.0.4

