From b6b7f58638b33a0d2b80a85da54d12248db68b15 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Wed, 12 May 2010 16:39:51 +0800
Subject: [PATCH 05/14] WRHV/PPC: Implement one PCIE argument

Pass the cmd line to check if we should configure LAW for PCIE, by
one argument, wrhv_pci_law.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/include/asm/machdep.h |    1 +
 arch/powerpc/include/asm/wrhv.h    |    1 +
 arch/powerpc/kernel/setup_32.c     |    5 +++++
 arch/powerpc/kernel/vbi/wrhv.c     |   18 ++++++++++++++++++
 4 files changed, 25 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/include/asm/machdep.h b/arch/powerpc/include/asm/machdep.h
index 71065aa..eeb1558 100644
--- a/arch/powerpc/include/asm/machdep.h
+++ b/arch/powerpc/include/asm/machdep.h
@@ -274,6 +274,7 @@ struct machdep_calls {
 
 #ifdef CONFIG_VIRTUALIZATION
 	int (*earlycon_setup)(void);
+	int (*enable_pci_law)(void);
 #endif
 };
 
diff --git a/arch/powerpc/include/asm/wrhv.h b/arch/powerpc/include/asm/wrhv.h
index 98b3536..df36456 100644
--- a/arch/powerpc/include/asm/wrhv.h
+++ b/arch/powerpc/include/asm/wrhv.h
@@ -34,6 +34,7 @@ extern int get_bsp_clock_freq(void);
 
 #ifdef CONFIG_PCI
 extern int ppc_get_pci_intr_wrhv(struct pci_dev *dev);
+extern int wrhv_enable_pci_law(void);
 #endif
 
 #endif /* CONFIG_WRHV */
diff --git a/arch/powerpc/kernel/setup_32.c b/arch/powerpc/kernel/setup_32.c
index 17100e0..94f60bf 100644
--- a/arch/powerpc/kernel/setup_32.c
+++ b/arch/powerpc/kernel/setup_32.c
@@ -313,6 +313,11 @@ void __init setup_arch(char **cmdline_p)
 		ppc_md.earlycon_setup();
 #endif
 
+#if defined(CONFIG_PCI) && defined(CONFIG_WRHV)
+	if (ppc_md.enable_pci_law)
+		ppc_md.enable_pci_law();
+#endif
+
 	find_legacy_serial_ports();
 
 	smp_setup_cpu_maps();
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 3cede35..6419168 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -238,6 +238,24 @@ uint32_t get_bsp_clock_freq(void)
 	return (clk_reply.dataVal);
 }
 
+int wrhv_pci_law = 0;
+int __init wrhv_enable_pci_law(void)
+{
+	const char *opt;
+	opt = strstr(cmd_line, "wrhv_pci_law=");
+	if (opt) {
+		opt += 13;
+		while (*opt && *opt == ' ')
+			opt++;
+		if (!strncmp(opt, "on", 2))
+			wrhv_pci_law = 1;
+		else
+			wrhv_pci_law = 0;
+	}
+	
+	return 0;
+}
+
 void wrhv_mapping(void)
 {
 	/* map in vbConfig address */
-- 
1.6.5.2

