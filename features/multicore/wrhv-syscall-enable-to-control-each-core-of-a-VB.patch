From deca91112e5aa77bcb90d391098e301c98297279 Mon Sep 17 00:00:00 2001
From: Liang Li <liang.li@windriver.com>
Date: Thu, 1 Jul 2010 19:58:52 +0800
Subject: [PATCH 2/7] wrhv/syscall: enable to control each core of a VB

Instead of original VB level suspend/resume/restart control, we
should enable finer control to VB. Hence this commit will enable
suspend/resume/restart each cores of a VB.

Signed-off-by: Liang Li <liang.li@windriver.com>
---
 kernel/vbi/syscall_vbi.c |   20 +++++++++++++-------
 1 files changed, 13 insertions(+), 7 deletions(-)

diff --git a/kernel/vbi/syscall_vbi.c b/kernel/vbi/syscall_vbi.c
index d5a599c..9e4db70 100644
--- a/kernel/vbi/syscall_vbi.c
+++ b/kernel/vbi/syscall_vbi.c
@@ -142,18 +142,28 @@ out:
 asmlinkage long sys_vbi_control(uint32_t vb, uint32_t command, uint32_t flags)
 {
 	long ret = 0;
+	int  cores;
+	uint32_t reset_opts;
 
 	if (!capable(CAP_SYS_ADMIN))
 		return -EPERM;
 
+	reset_opts = VBI_VBMGMT_RESET_DOWNLOAD;
+
+	cores = flags & 0xff;
+	if (cores == 0xff) {
+		cores = VBI_VB_CORES_ALL;
+		reset_opts |= VBI_VBMGMT_RESET_AND_START_CORE0;
+	}
+
 	switch(command) {
 	case SYS_VBI_VB_SUSPEND:
-		ret = vbi_vb_suspend(vb, VBI_VB_CORES_ALL);
+		ret = vbi_vb_suspend(vb, cores);
 		if (ret)
 			printk(KERN_ERR "%s: vb_suspend VB%d failed.\n", __func__, vb);
 		break;
 	case SYS_VBI_VB_RESUME:
-		ret = vbi_vb_resume(vb, VBI_VB_CORES_ALL);
+		ret = vbi_vb_resume(vb, cores);
 		if (ret)
 			printk(KERN_ERR "%s: vb_resume VB%d failed.\n", __func__, vb);
 		break;
@@ -166,11 +176,7 @@ asmlinkage long sys_vbi_control(uint32_t vb, uint32_t command, uint32_t flags)
 			printk(KERN_ERR "%s: can not reset self.\n", __func__);
 			ret = -EPERM;
 		} else {
-			ret = vbi_vb_reset(vb, VBI_VB_CORES_ALL,
-				VBI_VBMGMT_RESET_AND_START_CORE0 |
-				VBI_VBMGMT_RESET_DOWNLOAD |
-				VBI_VBMGMT_RESET_CLEAR
-				);
+			ret = vbi_vb_reset(vb, cores, reset_opts);
 			if (ret)
 				printk(KERN_ERR "%s: vb_reset VB%d failed.\n", __func__, vb);
 		}
-- 
1.6.5.2

