From 2f763cffa61b41a5f0e26e47f2e0b36ddf6e05c5 Mon Sep 17 00:00:00 2001
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Fri, 11 Jan 2013 12:17:21 -0500
Subject: [PATCH 1/3] wrhv: arm: create separate invalid handler for fiq

This facilitates debugging issues with bad modes when
receiving fiq interrupts.

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 arch/arm/kernel/entry-armv.S   |   35 +++++++++++++++++++++--------------
 arch/arm/kernel/entry-header.S |    3 +++
 arch/arm/kernel/traps.c        |    8 +++++++-
 3 files changed, 31 insertions(+), 15 deletions(-)

diff --git a/arch/arm/kernel/entry-armv.S b/arch/arm/kernel/entry-armv.S
index a288111..72ce65f 100644
--- a/arch/arm/kernel/entry-armv.S
+++ b/arch/arm/kernel/entry-armv.S
@@ -97,6 +97,13 @@ __irq_invalid:
 	b	common_invalid
 ENDPROC(__irq_invalid)
 
+#ifdef CONFIG_WRHV
+__fiq_invalid:
+	inv_entry BAD_FIQ
+	b	common_invalid
+ENDPROC(__fiq_invalid)
+#endif
+
 __und_invalid:
 	inv_entry BAD_UNDEFINSTR
 
@@ -1275,21 +1282,21 @@ __stubs_start:
 	vector_stub	fiq, FIQ_MODE, 4
 
 	.long	__fiq_usr			@  0  (USR_26 / USR_32)
-	.long	__irq_invalid			@  1  (FIQ_26 / FIQ_32)
-	.long	__irq_invalid			@  1  (IRQ_26 / IRQ_32)
+	.long	__fiq_invalid			@  1  (FIQ_26 / FIQ_32)
+	.long	__fiq_invalid			@  2  (IRQ_26 / IRQ_32)
 	.long	__fiq_svc			@  3  (SVC_26 / SVC_32)
-	.long	__irq_invalid			@  4
-	.long	__irq_invalid			@  5
-	.long	__irq_invalid			@  6
-	.long	__irq_invalid			@  7
-	.long	__irq_invalid			@  8
-	.long	__irq_invalid			@  9
-	.long	__irq_invalid			@  a
-	.long	__irq_invalid			@  b
-	.long	__irq_invalid			@  c
-	.long	__irq_invalid			@  d
-	.long	__irq_invalid			@  e
-	.long	__irq_invalid			@  f
+	.long	__fiq_invalid			@  4
+	.long	__fiq_invalid			@  5
+	.long	__fiq_invalid			@  6
+	.long	__fiq_invalid			@  7
+	.long	__fiq_invalid			@  8
+	.long	__fiq_invalid			@  9
+	.long	__fiq_invalid			@  a
+	.long	__fiq_invalid			@  b
+	.long	__fiq_invalid			@  c
+	.long	__fiq_invalid			@  d
+	.long	__fiq_invalid			@  e
+	.long	__fiq_invalid			@  f
 #endif
 
 /*
diff --git a/arch/arm/kernel/entry-header.S b/arch/arm/kernel/entry-header.S
index d93f976..725da4b 100644
--- a/arch/arm/kernel/entry-header.S
+++ b/arch/arm/kernel/entry-header.S
@@ -14,6 +14,9 @@
 #define BAD_ADDREXCPTN	2
 #define BAD_IRQ		3
 #define BAD_UNDEFINSTR	4
+#ifdef CONFIG_WRHV
+#define BAD_FIQ		5
+#endif
 
 @
 @ Most of the stack format comes from struct pt_regs, but with
diff --git a/arch/arm/kernel/traps.c b/arch/arm/kernel/traps.c
index ee7d248..f018c7b 100644
--- a/arch/arm/kernel/traps.c
+++ b/arch/arm/kernel/traps.c
@@ -42,7 +42,13 @@
 DEFINE_TRACE(trap_entry);
 DEFINE_TRACE(trap_exit);
 
-static const char *handler[]= { "prefetch abort", "data abort", "address exception", "interrupt" };
+#ifdef CONFIG_WRHV
+static const char *handler[] = { "prefetch abort", "data abort",
+			"address exception", "interrupt", "undefined", "fiq" };
+#else
+static const char *handler[] = { "prefetch abort", "data abort",
+			"address exception", "interrupt", "undefined" };
+#endif
 
 void *vectors_page;
 
-- 
1.7.0

