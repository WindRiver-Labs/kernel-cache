From 6f01cf862c6a5d9edbaa31ca59a23ec2b584c71c Mon Sep 17 00:00:00 2001
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Wed, 3 Aug 2011 13:14:21 -0400
Subject: [PATCH 02/10] wrhv: arm: VBI changes to support proper vmmu flushing

This also includes minor mods for context loading such as
making vbi calls extern.
Also sets some #define constants.

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 arch/arm/include/asm/arch_vbi.h |   10 ++++++++++
 arch/arm/kernel/vbi/syscalls.S  |   10 ++++++++--
 include/vbi/syscall.h           |    3 ++-
 3 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/arch/arm/include/asm/arch_vbi.h b/arch/arm/include/asm/arch_vbi.h
index d018362..f769130 100644
--- a/arch/arm/include/asm/arch_vbi.h
+++ b/arch/arm/include/asm/arch_vbi.h
@@ -25,6 +25,14 @@
 
 #define __VBI_BYTE_ORDER __VBI_LITTLE_ENDIAN
 
+#define	VBI_MAX_CORES			    8
+
+/* exception defines */
+
+#define ARCH_MAX_INTERRUPT		    32
+#define VBI_ARCH_EXC_TABLE_SIZE		    32
+#define VBI_ARCH_IRQ_TABLE_SIZE		    256
+
 /* VIOAPIC number of entries */
 
 #define VB_VIOAPIC_ENTRIES_SIZE		    64 
@@ -296,6 +304,8 @@ typedef struct
 	uint32_t   dataVal;
 } VBI_BSP_MSG_REPLY;
 
+extern int32_t vbi_load_ctx(void);
+
 #else /*_ASMLANGUAGE */
 
 /*
diff --git a/arch/arm/kernel/vbi/syscalls.S b/arch/arm/kernel/vbi/syscalls.S
index dcfb0d7..95d2fab 100644
--- a/arch/arm/kernel/vbi/syscalls.S
+++ b/arch/arm/kernel/vbi/syscalls.S
@@ -996,7 +996,7 @@ FUNC_LABEL(vbi_flush_tlb)
         SAVEREGS
         ldr     r8, =VBI_SYS_tlb_flush
         HCALL
-	INVALIDATE_CURR_ASID(r8)
+        TLBIALL(r0)
         RESTOREREGS
         mov     pc, lr
 FUNC_END(vbi_flush_tlb)
@@ -1280,7 +1280,7 @@ FUNC_END(vbi_create_vmmu)
 *
 * vbi_delete_vmmu - delete the virtual MMU handle
 *
-* This system call enables a context's virtual MMU.
+* This system call deletes a context's virtual MMU.
 *
 */
 
@@ -1313,6 +1313,9 @@ FUNC_LABEL(vbi_tlb_load_vmmu)
         SAVEREGS
         ldr     r8, =VBI_SYS_vmmu_tlbload
         HCALL
+
+        INVALIDATE_CURR_ASID(r8)
+
         RESTOREREGS
         mov     pc, lr
 FUNC_END(vbi_tlb_load_vmmu)
@@ -1335,6 +1338,9 @@ FUNC_LABEL(vbi_tlb_flush_vmmu)
         SAVEREGS
         ldr     r8, =VBI_SYS_vmmu_tlbflush
         HCALL
+
+        INVALIDATE_CURR_ASID(r8)
+
         RESTOREREGS
         mov     pc, lr
 FUNC_END(vbi_tlb_flush_vmmu)
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index 63edf9e..7e176f4 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -145,6 +145,7 @@ extern asmlinkage int32_t vbi_vb_reset(uint32_t id, int32_t core, uint32_t optio
 
 /* commerical hypervisor and certifiable hypervisor stub functions */
 #if !defined(CONFIG_WRHV_CERT)
+extern int32_t vbi_flush_tlb(uint32_t asid, void *addr, size_t len);
 extern asmlinkage int vbi_ctx_ctl(unsigned operation, unsigned arg1,
 				unsigned arg2);
 extern asmlinkage int32_t vbi_kputs(const char *s);
@@ -156,7 +157,7 @@ extern asmlinkage int32_t vbi_vb_suspend(uint32_t id, int32_t core);
 extern asmlinkage int32_t vbi_vb_restart(uint32_t id, int32_t core);
 extern asmlinkage int32_t vbi_vb_resume(uint32_t id, int32_t core);
 #else
-/* following functions avaiable to debug version of certifiable hypervisor */
+/* following functions available to debug version of certifiable hypervisor */
 extern asmlinkage int32_t cert_debug_vbi_kputs(const char *s);
 extern asmlinkage int32_t cert_debug_vbi_kputc(int c);
 extern asmlinkage void cert_debug_vbi_shell_start_debug(uint32_t  flags);
-- 
1.7.0.4

