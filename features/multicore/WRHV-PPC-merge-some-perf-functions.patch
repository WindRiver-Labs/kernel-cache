From b8fcedd1194c8b9958fecf3cdaf57e3c004748f9 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Mon, 24 May 2010 20:19:08 +0800
Subject: [PATCH 02/14] WRHV/PPC: merge some perf functions

Merge some perf functions to support wrhv timer interrupt implementation.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/kernel/vbi/wrhv.c |   56 +++++++++++++++++++++++++++++++++++++---
 1 files changed, 52 insertions(+), 4 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 73248f6..f631091 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -473,6 +473,53 @@ static struct clock_event_device wrhv_clockevent = {
        .features       = CLOCK_EVT_FEAT_ONESHOT,
 };
 
+#ifdef CONFIG_PERF_EVENTS
+
+/*
+ * 64-bit uses a byte in the PACA, 32-bit uses a per-cpu variable...
+ */
+#ifdef CONFIG_PPC64
+static inline unsigned long test_perf_event_pending(void)
+{
+	unsigned long x;
+
+	asm volatile("lbz %0,%1(13)"
+		: "=r" (x)
+		: "i" (offsetof(struct paca_struct, perf_event_pending)));
+	return x;
+}
+
+static inline void set_perf_event_pending_flag(void)
+{
+	asm volatile("stb %0,%1(13)" : :
+		"r" (1),
+		"i" (offsetof(struct paca_struct, perf_event_pending)));
+}
+
+static inline void clear_perf_event_pending(void)
+{
+	asm volatile("stb %0,%1(13)" : :
+		"r" (0),
+		"i" (offsetof(struct paca_struct, perf_event_pending)));
+}
+
+#else /* 32-bit */
+
+DEFINE_PER_CPU(u8, perf_event_pending);
+
+#define set_perf_event_pending_flag()	__get_cpu_var(perf_event_pending) = 1
+#define test_perf_event_pending()	__get_cpu_var(perf_event_pending)
+#define clear_perf_event_pending()	__get_cpu_var(perf_event_pending) = 0
+
+#endif /* 32 vs 64 bit */
+
+#else  /* CONFIG_PERF_EVENTS */
+
+#define test_perf_event_pending()	0
+#define clear_perf_event_pending()
+
+#endif /* CONFIG_PERF_EVENTS */
+
 void wrhv_hw_timer_interrupt(struct pt_regs * regs)
 {
 	struct pt_regs *old_regs;
@@ -482,10 +529,6 @@ void wrhv_hw_timer_interrupt(struct pt_regs * regs)
 	__get_cpu_var(irq_stat).timer_irqs++;
 
 #ifdef CONFIG_PPC32
-	if (test_perf_event_pending()) {
-		clear_perf_event_pending();
-		perf_event_do_pending();
-	}
 	if (atomic_read(&ppc_n_lost_interrupts) != 0)
 		do_IRQ(regs);
 #endif
@@ -495,6 +538,11 @@ void wrhv_hw_timer_interrupt(struct pt_regs * regs)
 
 	calculate_steal_time();
 
+	if (test_perf_event_pending()) {
+		clear_perf_event_pending();
+		perf_event_do_pending();
+	}
+
 	wrhv_timer_interrupt(0, NULL);
 
 	irq_exit();
-- 
1.6.5.2

