From c0adb40a788c95baf56eb86a438a7217fa02f10e Mon Sep 17 00:00:00 2001
From: Liang Li <liang.li@windriver.com>
Date: Tue, 20 Jul 2010 12:34:38 +0800
Subject: [PATCH 6/7] wrhv/syscall: switch from vmalloc to static buffer

This work around wrhv's restriction that only kernel data section
buffer canbe parsed correctly on powerpc. Previous vmalloc'd
buffer can't be parsed by wrhv correctly.

Signed-off-by: Liang Li <liang.li@windriver.com>
---
 kernel/vbi/syscall_vbi.c |   28 +++++++++++++---------------
 1 files changed, 13 insertions(+), 15 deletions(-)

diff --git a/kernel/vbi/syscall_vbi.c b/kernel/vbi/syscall_vbi.c
index 9e4db70..86dbb69 100644
--- a/kernel/vbi/syscall_vbi.c
+++ b/kernel/vbi/syscall_vbi.c
@@ -90,52 +90,50 @@ asmlinkage long sys_vbi_activate_vb(uint32_t vb, uint32_t addr)
 	return retval;
 }
 
-asmlinkage long sys_vbi_mem(uint32_t cpu, void *dest, void *src,
+#define VBI_MEM_BUF_LEN  4096
+asmlinkage long sys_vbi_mem(uint32_t vb, void *dest, void *src,
 				  uint32_t size, uint32_t flags)
 {
 	struct vbi_mem_ctl memCtl;
-	char *buf = NULL;
 	uint32_t len;
 	long rv = OK;
 
+	static char vbi_mem_buf[VBI_MEM_BUF_LEN] = {};
+
 	if (!capable(CAP_SYS_ADMIN))
 		return -EPERM;
 
-	if ((buf = vmalloc(size)) == NULL) {
-		rv = -ENOMEM;
-		goto out;
-	}
+	if (size > VBI_MEM_BUF_LEN)
+		return -ENOMEM;
 
 	if (flags & VBI_MEM_WRITE) {
-		if ((copy_from_user(buf, src, size) > 0))
+		if ((copy_from_user(vbi_mem_buf, src, size) > 0))
 			rv = -EACCES;
 		else {
 			memCtl.pBuffer = dest;
-			memCtl.pAddress = buf;
+			memCtl.pAddress = vbi_mem_buf;
 			memCtl.size_in = size;
 			memCtl.size_out = 0;
 			memCtl.flags = VBI_ICACHE_INV | VBI_DCACHE_FLUSH;
-			if ((vbi_vb_write_mem(&memCtl, cpu) != OK))
+			if ((vbi_vb_write_mem(&memCtl, vb) != OK))
 				rv = -EACCES;
 		}
 	} else if (flags & VBI_MEM_READ) {
 		memCtl.pBuffer = src;
-		memCtl.pAddress = buf;
+		memCtl.pAddress = vbi_mem_buf;
 		memCtl.size_in = size;
 		memCtl.size_out = 0;
 		memCtl.flags = flags;
-		if ((vbi_vb_read_mem(&memCtl, cpu) != OK))
+		if ((vbi_vb_read_mem(&memCtl, vb) != OK))
 			rv = -EACCES;
 		else {
-			if ((len = copy_to_user(buf, dest, size)) > 0)
+			if ((len = copy_to_user(vbi_mem_buf, dest, size)) > 0)
 				rv = -EACCES;
 		}
 	} else {
 		rv = -EINVAL;
 	}
 
-	vfree(buf);
-out:
 	return rv;
 }
 
@@ -196,7 +194,7 @@ asmlinkage long sys_vbi_activate_vb(uint32_t vb, uint32_t addr)
 	return -ENOSYS;
 }
 
-asmlinkage long sys_vbi_mem(uint32_t cpu, void *dest, void *src,
+asmlinkage long sys_vbi_mem(uint32_t vb, void *dest, void *src,
 				  uint32_t size, uint32_t flags)
 {
 	return -ENOSYS;
-- 
1.6.5.2

