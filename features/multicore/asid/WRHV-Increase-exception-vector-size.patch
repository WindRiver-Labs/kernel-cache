From 35118e707c55ee772b5cc4cede39026e61f84f71 Mon Sep 17 00:00:00 2001
From: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
Date: Mon, 14 Feb 2011 15:10:41 -0500
Subject: [PATCH 02/10] WRHV: Increase exception vector size

When SMP is enabled on an E500 target the exception
vector was not large enough.   Increase the size so
that when extra instructions are added the whole
intended exception is present as intended.

[Context mods to deal with direct IRQ]
Signed-off-by: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
---
 arch/powerpc/kernel/head_wrhv.h |    6 ----
 arch/powerpc/kernel/vbi/wrhv.c  |   55 +++++++++++++++++---------------------
 2 files changed, 25 insertions(+), 36 deletions(-)

diff --git a/arch/powerpc/kernel/head_wrhv.h b/arch/powerpc/kernel/head_wrhv.h
index dc71ee7..96b42e6 100644
--- a/arch/powerpc/kernel/head_wrhv.h
+++ b/arch/powerpc/kernel/head_wrhv.h
@@ -100,17 +100,11 @@ label:									     \
 #else
 #ifdef CONFIG_WRHV
 #undef START_EXCEPTION
-#ifdef CONFIG_SMP 	
 #define        START_EXCEPTION(label)				\
        .align 9;						\
 label:
 #else
 #define        START_EXCEPTION(label)                                  \
-       .align 8;                                               \
-label:
-#endif
-#else
-#define        START_EXCEPTION(label)                                  \
        .align 5;                                               \
 label:
 #endif /* CONFIG_WRHV */
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 6ed87a0..a59af1f 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -1011,6 +1011,8 @@ void wrhv_MMU_setup(void)
 
 void __init wrhv_MMU_init(void)
 {
+	int i;
+
 	if (ppc_md.progress)
 		ppc_md.progress("MMU:enter", 0x111);
 
@@ -1069,47 +1071,40 @@ void __init wrhv_MMU_init(void)
 	vb_context_mmu_on(0, swapper_pg_dir, PAGE_SIZE, 0);
 #endif
 
-	{
-#ifdef CONFIG_SMP
-		int i;
-#endif
-		vbi_get_exc_offset(&exec_table);
+	vbi_get_exc_offset(&exec_table);
 #ifdef DEBUG
-		printk("****DUMP EXEC OFFSET***\n");
-		for(i=0;i<VBI_ARCH_MAX_EXC_OFFSETS;i++)
-			printk("execoffset:%d	----	0x%08x\n",i,exec_table.excOffset[i]);
+	printk("****DUMP EXEC OFFSET***\n");
+	for(i=0;i<VBI_ARCH_MAX_EXC_OFFSETS;i++)
+		printk("execoffset:%d	----	0x%08x\n",i,exec_table.excOffset[i]);
 #endif 
 
-#ifdef CONFIG_SMP
-		for(i=0;i<VBI_ARCH_MAX_EXC_OFFSETS;i++)
-			if(exec_table.excOffset[i])
-				/*extend to 0x200, 9bits space*/
-				exec_table.excOffset[i] = exec_table.excOffset[i] << 1;
-#endif
-		/* Check if enable direct interrupt mode. */
-		wrhv_enable_dir_irq();
+	for(i=0;i<VBI_ARCH_MAX_EXC_OFFSETS;i++)
+		if(exec_table.excOffset[i])
+			/*extend to 0x200, 9bits space*/
+			exec_table.excOffset[i] = exec_table.excOffset[i] << 1;
+	/* Check if enable direct interrupt mode. */
+	wrhv_enable_dir_irq();
 	
-		/* IVOR20 is dedicated to for direct interrupt offset
-		 * Here get 0x1600/0x2c00 from head_wrhv.s.
-		 */
-		if (wrhv_dir_irq) {
-			printk ("WRHV: guest OS is under Direct Interrupt mode.\n");
+	/* IVOR20 is dedicated to for direct interrupt offset
+	 * Here get 0x1600/0x2c00 from head_wrhv.s.
+	 */
+	if (wrhv_dir_irq) {
+		printk ("WRHV: guest OS is under Direct Interrupt mode.\n");
 #ifdef CONFIG_SMP
-			exec_table.excOffset[E500MC_DIR_EXC_INDEX] = E500MC_DIR_EXC_OFFSET << 1 ;
+		exec_table.excOffset[E500MC_DIR_EXC_INDEX] = E500MC_DIR_EXC_OFFSET << 1 ;
 #else
-			exec_table.excOffset[E500MC_DIR_EXC_INDEX] = E500MC_DIR_EXC_OFFSET;
+		exec_table.excOffset[E500MC_DIR_EXC_INDEX] = E500MC_DIR_EXC_OFFSET;
 #endif
-		}
+	}
 
-		vbi_set_exc_offset(&exec_table);
+	vbi_set_exc_offset(&exec_table);
 
 #ifdef DEBUG
-		printk("****DUMP EXEC OFFSET AFTER SET***\n");
-		vbi_get_exc_offset(&exec_table);
-		for(i=0;i<VBI_ARCH_MAX_EXC_OFFSETS;i++)
-			printk("execoffset:%d	----	0x%08x\n",i,exec_table.excOffset[i]);
+	printk("****DUMP EXEC OFFSET AFTER SET***\n");
+	vbi_get_exc_offset(&exec_table);
+	for(i=0;i<VBI_ARCH_MAX_EXC_OFFSETS;i++)
+		printk("execoffset:%d	----	0x%08x\n",i,exec_table.excOffset[i]);
 #endif
-	}
 }
 
 /* arch/powerpc/mm/mem.c */
-- 
1.6.5.2

