From ce3d745d365e4e709cb24091856287a5d2b7a5c8 Mon Sep 17 00:00:00 2001
From: Liang Li <liang.li@windriver.com>
Date: Wed, 5 Jan 2011 16:50:30 +0800
Subject: [PATCH] wrhv/syscall: disable INTs prior to resume dest VB

Before actually resume the dest VB, we need to make sure
new loaded image will gain the control other than let old
image have chance to 'trigger exception by discover these
trash memory'. By disable interrupts for dest VB before
resume it, we can make sure interrupts won't be handled by
old image then newly loaded image won't be 'preempted'.

Signed-off-by: Liang Li <liang.li@windriver.com>
---
 kernel/vbi/syscall_vbi.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/kernel/vbi/syscall_vbi.c b/kernel/vbi/syscall_vbi.c
index d2132c0..4813690 100644
--- a/kernel/vbi/syscall_vbi.c
+++ b/kernel/vbi/syscall_vbi.c
@@ -75,6 +75,13 @@ asmlinkage long sys_vbi_activate_vb(uint32_t vb, uint32_t addr)
 	}
 
 #ifdef CONFIG_X86
+	/*
+	 * Since the memory of the target vb has been changed(writen
+	 * alternative image). Disable interrupts could make sure
+	 * old image won't get chance to run before loaded image
+	 * gain control
+	 */
+	rctl.vbiRegSet.hreg32.eflags &= ~X86_EFLAGS_IF;
 	rctl.vbiRegSet.hreg32.eip = addr;
 	rctl.vbiRegSet.hreg32.eax = vb_cfg;
 #endif
-- 
1.7.0.4

