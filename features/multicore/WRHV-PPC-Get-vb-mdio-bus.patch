From 25b3ca9fae8ad827eabbf3cf4fa943f6a8c11f77 Mon Sep 17 00:00:00 2001
From: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
Date: Wed, 9 Jun 2010 11:44:47 -0400
Subject: [PATCH 3/6] WRHV/PPC: Get vb mdio bus

The p4080 piece that was part of the original patch,
has been dropped since it is not common to all boards.

The hypervisor needs to know which dTSEC you are trying to
access via the MDIO.  This information should be encoded in
the "bus" element of the MDIO_MSG structure.

Signed-off-by: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
---
 arch/powerpc/include/asm/machdep.h |    2 ++
 arch/powerpc/kernel/vbi/wrhv.c     |   12 ++++++++++--
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/arch/powerpc/include/asm/machdep.h b/arch/powerpc/include/asm/machdep.h
index 3bd4547..d94b097 100644
--- a/arch/powerpc/include/asm/machdep.h
+++ b/arch/powerpc/include/asm/machdep.h
@@ -12,6 +12,7 @@
 #include <linux/seq_file.h>
 #include <linux/init.h>
 #include <linux/dma-mapping.h>
+#include <linux/phy.h>
 
 #include <asm/setup.h>
 
@@ -282,6 +283,7 @@ struct machdep_calls {
 	int (*set_law_base)(int index, unsigned long long addr);
 	int (*set_law_attr)(int index, unsigned int attr);
 	int (*get_law_attr)(int index);
+	uint32_t (*get_mdio_bus)(struct mii_bus *bus, int mii_id);
 #endif
 };
 
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 9d1eed6..8ed5221 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -1355,9 +1355,13 @@ int wrhv_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
 	VBI_BSP_MSG		mdio_msg;
 	VBI_BSP_MSG_REPLY	mdio_reply;
 	int			rc = -1;
+	u32			bid = 0;
+
+	if (ppc_md.get_mdio_bus)
+		bid = ppc_md.get_mdio_bus(bus, mii_id);
 
 	mdio_msg.request = VBI_MDIO_WRITE;
-	mdio_msg.arg.mdioWrite.bus = wrhv_mdio_bus;
+	mdio_msg.arg.mdioWrite.bus = bid;
 	mdio_msg.arg.mdioWrite.phyAddr = (uint32_t) mii_id;
 	mdio_msg.arg.mdioWrite.regNum = (uint32_t) regnum;
 	mdio_msg.arg.mdioWrite.page = 0;
@@ -1377,9 +1381,13 @@ int wrhv_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
 	VBI_BSP_MSG		mdio_msg;
 	VBI_BSP_MSG_REPLY	mdio_reply;
 	int			rc = -1;
+	u32			bid = 0;
+
+	if (ppc_md.get_mdio_bus)
+		bid = ppc_md.get_mdio_bus(bus, mii_id);
 
 	mdio_msg.request = VBI_MDIO_READ;
-	mdio_msg.arg.mdioRead.bus = wrhv_mdio_bus;
+	mdio_msg.arg.mdioRead.bus = bid;
 	mdio_msg.arg.mdioRead.phyAddr = (uint32_t) mii_id;
 	mdio_msg.arg.mdioRead.regNum = (uint32_t) regnum;
 	mdio_msg.arg.mdioRead.page = 0;
-- 
1.6.5.2

