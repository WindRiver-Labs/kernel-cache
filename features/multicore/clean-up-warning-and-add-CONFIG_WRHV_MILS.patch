From 49312c74a10048f237ead9f65a6bb78b01488819 Mon Sep 17 00:00:00 2001
From: Thomas Tai <thomas.tai@windriver.com>
Date: Thu, 15 Apr 2010 11:36:26 -0400
Subject: [PATCH 9/9] clean up warning and add CONFIG_WRHV_MILS

clean up warning by type cast function argument, also changed
wrhv_restart function argument to match header file.

wrhv_DebugException contains E500 specific register bit field
which are not avaiable for 60x. Follows native trap.c to
add #ifdef from compiling the body for 60x cpu.

Signed-off-by: Thomas Tai <thomas.tai@windriver.com>
---
 arch/powerpc/include/asm/pgtable-ppc32.h |    3 ++-
 arch/powerpc/include/asm/ppc_asm.h       |    2 +-
 arch/powerpc/include/asm/wrhv.h          |    2 +-
 arch/powerpc/kernel/vbi/wrhv.c           |   10 +++++++---
 4 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/arch/powerpc/include/asm/pgtable-ppc32.h b/arch/powerpc/include/asm/pgtable-ppc32.h
index ddf2aa9..604e436 100644
--- a/arch/powerpc/include/asm/pgtable-ppc32.h
+++ b/arch/powerpc/include/asm/pgtable-ppc32.h
@@ -729,7 +729,8 @@ static inline int __ptep_test_and_clear_young(mm_context_t * ctx,
 }
 
 #define ptep_test_and_clear_young(__vma, __addr, __ptep) \
-	__ptep_test_and_clear_young(&(__vma)->vm_mm->context.id, __addr, __ptep)
+	__ptep_test_and_clear_young(\
+		(mm_context_t *)&(__vma)->vm_mm->context.id, __addr, __ptep)
 #endif   /* CONFIG_WRHV */
 
 #define __HAVE_ARCH_PTEP_GET_AND_CLEAR
diff --git a/arch/powerpc/include/asm/ppc_asm.h b/arch/powerpc/include/asm/ppc_asm.h
index 844c322..16a0323 100644
--- a/arch/powerpc/include/asm/ppc_asm.h
+++ b/arch/powerpc/include/asm/ppc_asm.h
@@ -389,7 +389,7 @@ END_FTR_SECTION_IFCLR(CPU_FTR_601)
 #endif
 
 
-#if defined(CONFIG_BOOKE) || defined (CONFIG_WRHV)
+#if defined(CONFIG_BOOKE) || defined(CONFIG_WRHV_MILS)
 #define toreal(rd)
 #define fromreal(rd)
 
diff --git a/arch/powerpc/include/asm/wrhv.h b/arch/powerpc/include/asm/wrhv.h
index 996d85b..4190c53 100644
--- a/arch/powerpc/include/asm/wrhv.h
+++ b/arch/powerpc/include/asm/wrhv.h
@@ -17,7 +17,7 @@
 
 #ifdef CONFIG_WRHV
 extern void wrhv_mapping(void);
-extern void wrhv_restart(void);
+extern void wrhv_restart(char *);
 extern unsigned long __init wrhv_find_end_of_memory(void);
 extern void wrhv_power_save(void);
 extern unsigned int wrhv_vioapic_get_irq(void);
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index ba1c6cf..cdb9669 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -386,7 +386,7 @@ void wrhv_power_save(void)
 	vbi_idle(1);
 }
 
-void wrhv_restart(void)
+void wrhv_restart(char *cmd)
 {
 	int ret;
 	printk(KERN_INFO "WRHV: rebooting \n");
@@ -1147,9 +1147,9 @@ out:
 }
 
 /* arch/powerpc/kernel/traps.c */
+#if defined(CONFIG_40x) || defined(CONFIG_BOOKE)
 void __kprobes wrhv_DebugException(struct pt_regs *regs, unsigned long debug_status)
 {
-#ifdef CONFIG_E500
 	uint32_t emsr;
 
 	debug_status = get_dbsr();
@@ -1191,8 +1191,8 @@ void __kprobes wrhv_DebugException(struct pt_regs *regs, unsigned long debug_sta
 		/* Setup and send the trap to the handler */
 		do_dabr(regs, mfspr(SPRN_DAC1), debug_status);
 	}
-#endif
 }
+#endif
 
 /* arch/powerpc/kernel/kgdb.c */
 int wrhv_kgdb_arch_handle_exception(int vector, int signo, int err_code,
@@ -1203,8 +1203,10 @@ int wrhv_kgdb_arch_handle_exception(int vector, int signo, int err_code,
 	unsigned long addr;
 
 	switch (remcom_in_buffer[0]) {
+#if defined(CONFIG_40x) || defined(CONFIG_BOOKE)
 		uint32_t dbcr;
 		uint32_t emsr;
+#endif
 		/*
 		 * sAA..AA   Step one instruction from AA..AA
 		 * This will return an error to gdb ..
@@ -1278,7 +1280,9 @@ void wrhv_init(void)
 
 	pv_cpu_ops.get_pvr = wrhv_get_pvr;
 	pv_cpu_ops.gfar_of_init =  wrhv_gfar_of_init;
+#if defined(CONFIG_40x) || defined(CONFIG_BOOKE)
 	pv_cpu_ops.DebugException = wrhv_DebugException;
+#endif
 	pv_cpu_ops.kgdb_arch_handle_exception =
 		wrhv_kgdb_arch_handle_exception;
 	pv_cpu_ops.ppc_proc_freq =
-- 
1.6.5.2

