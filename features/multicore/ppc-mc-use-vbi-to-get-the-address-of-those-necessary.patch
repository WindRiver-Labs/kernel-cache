From 336592d9544e5c1ab85c2cb1783d79cd3663eb03 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Sun, 29 Aug 2010 21:33:38 -0700
Subject: [PATCH] ppc-mc: use vbi to get the address of those necessary configure page

Wwe should get the address of these config/control pages by the vbi
then map them on guest OS.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/kernel/vbi/wrhv.c |   42 ++++++++++++++++-----------------------
 1 files changed, 17 insertions(+), 25 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 13e6ca0..4d4b1c7 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -128,7 +128,6 @@
 #include <vbi/interface.h>
 
 VBI_EXC_OFFSETS_TABLE  exec_table;
-static struct vb_config __wr_config;
 struct vb_config *wr_config;		/* TODO kernel relocation friendly ? */
 struct vb_control *wr_control;
 struct vb_status *wr_status;
@@ -262,8 +261,6 @@ int __init wrhv_enable_pci_law(void)
 
 void wrhv_mapping(void)
 {
-	/* map in vbConfig address */
-
 	/*
 	 * WRHV vb_config should really add a length field for each
 	 * of the objected we mapped.  As the sizes are WRHV
@@ -272,28 +269,23 @@ void wrhv_mapping(void)
 	 * For now, we just use 1 page which is fine for the time being.
 	 */
 
-	map_page((unsigned long)wr_config, (unsigned long)wr_config,
-		 PAGE_KERNEL_X);
-
-	map_page((unsigned long)wr_config->vb_status,
-		 (unsigned long)wr_config->vb_status, PAGE_KERNEL_X);
-	map_page((unsigned long)wr_config->vb_control,
-		 (unsigned long)wr_config->vb_control, PAGE_KERNEL_X);
-	map_page((unsigned long)wr_config->interruptConfiguration,
-		 (unsigned long)wr_config->interruptConfiguration, PAGE_KERNEL_X);
-	map_page((unsigned long)wr_config->vb_control->vIoapic,
-		 (unsigned long)wr_config->vb_control->vIoapic, PAGE_KERNEL_X);
-
-	memcpy(&__wr_config, wr_config, sizeof(__wr_config));
-	/* map any shared memory region info */
-
-	if (wr_config->sharedMemoryRegionsConfigAddress != 0)
-		map_page((unsigned long)wr_config->
-			 sharedMemoryRegionsConfigAddress,
-			 (unsigned long)wr_config->
-			 sharedMemoryRegionsConfigAddress, PAGE_KERNEL_X);
-
-	/* devices mapped by the hypervisor xml coqnfiguration */
+	struct config_page_map *pConfigPageMap = &wr_config->configPageMap[0];
+	uint32_t index = wr_config->configPageNum, i = 0;
+	for (i = 0;i < index;i++) {
+#ifdef WRHV_CONFIG_DEBUG
+		printk("Region No.: %d Address 0x%p Access Privilege 0x%x"
+			" Mapping Size 0x%x\n",i,
+			pConfigPageMap[i].address,
+			pConfigPageMap[i].accessPriv,
+			pConfigPageMap[i].size);
+#endif
+		map_page((unsigned long)pConfigPageMap[i].address, (unsigned long)pConfigPageMap[i].address, 
+#ifdef CONFIG_PPC85xx_VT_MODE
+			pConfigPageMap[i].accessPriv ? PAGE_KERNEL : PAGE_KERNEL_RO);
+#else
+			pConfigPageMap[i].accessPriv ? PAGE_KERNEL_X : PAGE_KERNEL_ROX);
+#endif
+	}
 
 	return;
 }
-- 
1.6.5.2

