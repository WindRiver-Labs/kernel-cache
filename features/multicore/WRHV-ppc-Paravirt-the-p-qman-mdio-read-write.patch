From f9b28cece4ed3969215bae13862e01322bdceabc Mon Sep 17 00:00:00 2001
From: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
Date: Wed, 9 Jun 2010 11:27:59 -0400
Subject: [PATCH] WRHV/ppc: Paravirt the p/qman mdio read/write

On the guest OS we replace the original mdio read/write way after
we get the proper mii bus.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
[Context mods, when merging]
Integrated-by: Jeremy McNicoll <jeremy.mcnicoll@windriver.com>
---
 arch/powerpc/include/asm/paravirt.h |    8 ++++++++
 arch/powerpc/kernel/paravirt.c      |   17 +++++++++++++++++
 arch/powerpc/kernel/vbi/wrhv.c      |   25 ++++++++-----------------
 drivers/net/fsl_pq_mdio.c           |   16 ++++++++++++----
 drivers/net/fsl_pq_mdio.h           |    6 ++++++
 5 files changed, 51 insertions(+), 21 deletions(-)

diff --git a/arch/powerpc/include/asm/paravirt.h b/arch/powerpc/include/asm/paravirt.h
index c2f4688..94a809d 100644
--- a/arch/powerpc/include/asm/paravirt.h
+++ b/arch/powerpc/include/asm/paravirt.h
@@ -30,6 +30,8 @@ extern int __init native_early_init_dt_scan_memory_ppc(unsigned long node,
 			const char *uname, int depth, void *data);
 extern void __init native_time_init_cont(void);
 extern void __iomem* native___ioremap(phys_addr_t addr, unsigned long size, unsigned long flags);
+extern int native_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+extern int native_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
 
 /*
  * paravirtual operations structure
@@ -86,11 +88,17 @@ struct pv_mmu_ops {
 		pte_t *ptep, pte_t pte, int percpu);
 };
 
+struct pv_mdio_ops {
+	int (*fsl_pq_mdio_write)(struct mii_bus *bus, int mii_id, int regnum, u16 value);
+	int (*fsl_pq_mdio_read)(struct mii_bus *bus, int mii_id, int regnum);
+};
+
 extern struct pv_info pv_info;
 extern struct pv_time_ops pv_time_ops;
 extern struct pv_cpu_ops pv_cpu_ops;
 extern struct pv_irq_ops pv_irq_ops;
 extern struct pv_mmu_ops pv_mmu_ops;
+extern struct pv_mdio_ops pv_mdio_ops;
 
 #endif /* CONFIG_PARAVIRT */
 #endif	/* __ASM_PARAVIRT_H */
diff --git a/arch/powerpc/kernel/paravirt.c b/arch/powerpc/kernel/paravirt.c
index 091919f..d677060 100644
--- a/arch/powerpc/kernel/paravirt.c
+++ b/arch/powerpc/kernel/paravirt.c
@@ -144,6 +144,10 @@ struct pv_mmu_ops pv_mmu_ops = {
 	.__set_pte_at = native__set_pte_at,
 };
 
+struct pv_mdio_ops pv_mdio_ops = {
+	.fsl_pq_mdio_write	= native_fsl_pq_mdio_write,
+	.fsl_pq_mdio_read	= native_fsl_pq_mdio_read,
+};
 
 /* pv_time_ops */
 void __init paravirt_time_init_cont(void)
@@ -180,6 +184,17 @@ unsigned int paravirt_get_pvr(void)
 	return pv_cpu_ops.get_pvr();
 }
 
+int paravirt_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum,
+				u16 value)
+{
+	return pv_mdio_ops.fsl_pq_mdio_write(bus, mii_id, regnum, value);
+}
+
+int paravirt_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
+{
+	return pv_mdio_ops.fsl_pq_mdio_read(bus, mii_id, regnum);
+}
+
 void __kprobes paravirt_DebugException(struct pt_regs *regs, unsigned long debug_status)
 {
 	pv_cpu_ops.DebugException(regs, debug_status);
@@ -273,9 +288,11 @@ extern struct pv_time_ops pv_time_ops;
 extern struct pv_cpu_ops pv_cpu_ops;
 extern struct pv_irq_ops pv_irq_ops;
 extern struct pv_mmu_ops pv_mmu_ops; 
+extern struct pv_mdio_ops pv_mdio_ops;
 
 EXPORT_SYMBOL_GPL(pv_info);
 EXPORT_SYMBOL_GPL(pv_time_ops);
 EXPORT_SYMBOL    (pv_cpu_ops);
 EXPORT_SYMBOL    (pv_mmu_ops);
 EXPORT_SYMBOL    (pv_irq_ops);
+EXPORT_SYMBOL    (pv_mdio_ops);
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 6e7a8b4..7b09bd0 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -690,8 +690,13 @@ unsigned int wrhv_get_pvr(void)
        return 0x80200000;
 }
 
+int native_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id,
+				int regnum, u16 value)
+	__attribute__((weak, alias("wrhv_mdio_write")));
 
-
+int native_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id,
+				int regnum)
+	__attribute__((weak, alias("wrhv_mdio_read")));
 
 static void wrhv_set_mode(enum clock_event_mode mode,
 				 struct clock_event_device *dev)
@@ -1328,21 +1333,6 @@ int wrhv_ppc_cpu_freq(void)
 	return wrhv_cpu_freq;
 }
 
-/* We need dummy mdio read/write function since each native mdio
- * handler is not enabled with different platforms.
- */
-int dummy_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
-{
-	printk(KERN_ERR "Error: please check your mdio configuretion.!\n");
-	return	0;
-}
-
-int dummy_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
-{
-	printk(KERN_ERR "Error: please check your mdio configuretion.!\n");
-	return	0;
-}
-
 /* Use bus 0 by default. On p4080 bus is encoded as famn0:dtsec0. */
 uint32_t wrhv_mdio_bus = 0;
 int wrhv_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
@@ -1428,7 +1418,8 @@ void wrhv_init(void)
 		wrhv_early_init_dt_scan_memory_ppc;
 	pv_mmu_ops.__ioremap = wrhv___ioremap;
 	pv_mmu_ops.__set_pte_at = wrhv__set_pte_at;
-
+	pv_mdio_ops.fsl_pq_mdio_write = wrhv_mdio_write;
+	pv_mdio_ops.fsl_pq_mdio_read = wrhv_mdio_read;
 }
 
 #ifdef CONFIG_SMP
diff --git a/drivers/net/fsl_pq_mdio.c b/drivers/net/fsl_pq_mdio.c
index 3acac5f..476cc01 100644
--- a/drivers/net/fsl_pq_mdio.c
+++ b/drivers/net/fsl_pq_mdio.c
@@ -119,7 +119,8 @@ static struct fsl_pq_mdio __iomem *fsl_pq_mdio_get_regs(struct mii_bus *bus)
  * Write value to the PHY at mii_id at register regnum,
  * on the bus, waiting until the write is done before returning.
  */
-int fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
+int native_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum,
+				u16 value)
 {
 	struct fsl_pq_mdio __iomem *regs = fsl_pq_mdio_get_regs(bus);
 
@@ -131,7 +132,7 @@ int fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
  * Read the bus for PHY at addr mii_id, register regnum, and
  * return the value.  Clears miimcom first.
  */
-int fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
+int native_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
 {
 	struct fsl_pq_mdio __iomem *regs = fsl_pq_mdio_get_regs(bus);
 
@@ -264,6 +265,13 @@ static int get_ucc_id_for_range(u64 start, u64 end, u32 *ucc_id)
 #endif
 
 
+int paravirt_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
+		__attribute__((weak, alias("native_fsl_pq_mdio_read")));
+
+int paravirt_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum,
+			u16 value)
+		__attribute__((weak, alias("native_fsl_pq_mdio_write")));
+
 static int fsl_pq_mdio_probe(struct of_device *ofdev,
 		const struct of_device_id *match)
 {
@@ -288,8 +296,8 @@ static int fsl_pq_mdio_probe(struct of_device *ofdev,
 		goto err_free_priv;
 
 	new_bus->name = "Freescale PowerQUICC MII Bus",
-	new_bus->read = &fsl_pq_mdio_read,
-	new_bus->write = &fsl_pq_mdio_write,
+	new_bus->read = &paravirt_fsl_pq_mdio_read,
+	new_bus->write = &paravirt_fsl_pq_mdio_write,
 	new_bus->reset = &fsl_pq_mdio_reset,
 	new_bus->priv = priv;
 	fsl_pq_mdio_bus_name(new_bus->id, np);
diff --git a/drivers/net/fsl_pq_mdio.h b/drivers/net/fsl_pq_mdio.h
index 1f7d865..6aa3126 100644
--- a/drivers/net/fsl_pq_mdio.h
+++ b/drivers/net/fsl_pq_mdio.h
@@ -41,6 +41,12 @@ struct fsl_pq_mdio {
 	u8 res4[2728];
 } __attribute__ ((packed));
 
+int native_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
+int native_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum,
+				u16 value);
+int paravirt_fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
+int paravirt_fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum,
+				u16 value);
 int fsl_pq_mdio_read(struct mii_bus *bus, int mii_id, int regnum);
 int fsl_pq_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value);
 int fsl_pq_local_mdio_write(struct fsl_pq_mdio __iomem *regs, int mii_id,
-- 
1.6.5.2

