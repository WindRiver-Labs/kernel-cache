From db293f8ac531e7dede7a4ab3fc703fb12fbe98a2 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Mon, 12 Jul 2010 04:18:43 -0700
Subject: [PATCH] ppc-mc: Fix one compile error when CONFIG_PERF_EVENTS is enabled

The file wrhv.c introduced one perf_event_pending error as the following:
------
arch/powerpc/kernel/vbi/built-in.o:(.data.percpu+0x8): multiple definition of `perf_event_pending'
arch/powerpc/kernel/time.o:(.data.percpu+0x68): first defined here
remake[8]: * [arch/powerpc/kernel/built-in.o] Error 1

Here #undef/extern that firstly then implement that again after refer to the original.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/kernel/vbi/wrhv.c |   48 +++++----------------------------------
 1 files changed, 7 insertions(+), 41 deletions(-)

diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index 2b3b0fe..98394d5 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -719,52 +719,18 @@ static struct clock_event_device wrhv_clockevent = {
        .features       = CLOCK_EVT_FEAT_ONESHOT,
 };
 
-#ifdef CONFIG_PERF_EVENTS
-
-/*
- * 64-bit uses a byte in the PACA, 32-bit uses a per-cpu variable...
- */
-#ifdef CONFIG_PPC64
-static inline unsigned long test_perf_event_pending(void)
-{
-	unsigned long x;
-
-	asm volatile("lbz %0,%1(13)"
-		: "=r" (x)
-		: "i" (offsetof(struct paca_struct, perf_event_pending)));
-	return x;
-}
-
-static inline void set_perf_event_pending_flag(void)
-{
-	asm volatile("stb %0,%1(13)" : :
-		"r" (1),
-		"i" (offsetof(struct paca_struct, perf_event_pending)));
-}
-
-static inline void clear_perf_event_pending(void)
-{
-	asm volatile("stb %0,%1(13)" : :
-		"r" (0),
-		"i" (offsetof(struct paca_struct, perf_event_pending)));
-}
-
-#else /* 32-bit */
+/* Refer to arch/powerpc/kernel/time.c. */
+#undef	test_perf_event_pending
+#undef	clear_perf_event_pending
 
-DEFINE_PER_CPU(u8, perf_event_pending);
-
-#define set_perf_event_pending_flag()	__get_cpu_var(perf_event_pending) = 1
+#ifdef CONFIG_PERF_EVENTS
+extern DEFINE_PER_CPU(u8, perf_event_pending);
 #define test_perf_event_pending()	__get_cpu_var(perf_event_pending)
 #define clear_perf_event_pending()	__get_cpu_var(perf_event_pending) = 0
-
-#endif /* 32 vs 64 bit */
-
-#else  /* CONFIG_PERF_EVENTS */
-
+#else
 #define test_perf_event_pending()	0
 #define clear_perf_event_pending()
-
-#endif /* CONFIG_PERF_EVENTS */
+#endif
 
 void wrhv_hw_timer_interrupt(struct pt_regs * regs)
 {
-- 
1.6.5.2

