From c3aef26fb03773f801cac4fb12cbb7a5ad8b4f2c Mon Sep 17 00:00:00 2001
From: Liang Li <liang.li@windriver.com>
Date: Thu, 1 Jul 2010 19:58:51 +0800
Subject: [PATCH 1/7] wrhv/syscall: restrict vbi syscalls to 'root' only

It's reasonable to grant system administrator ability only to
control other VBs.

Signed-off-by: Liang Li <liang.li@windriver.com>
---
 kernel/vbi/syscall_vbi.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/kernel/vbi/syscall_vbi.c b/kernel/vbi/syscall_vbi.c
index 89a7f88..d5a599c 100644
--- a/kernel/vbi/syscall_vbi.c
+++ b/kernel/vbi/syscall_vbi.c
@@ -26,6 +26,8 @@
 #include <linux/vmalloc.h>
 #include <asm/unistd.h>
 
+#include <linux/capability.h>
+
 #define OK              0
 #define ERROR           -1
 
@@ -37,6 +39,8 @@ asmlinkage long sys_vbi_activate_vb(uint32_t vb, uint32_t addr)
 	u32 vb_cfg;
 	VBI_HREG_SET_CMPLX_QUALIFIED rctl;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
 	/*
 	 * Note, here suspend all cores means if dest VB is configured
 	 * as multi CPUs VB, all vcpus of this VB will be suspended.
@@ -94,6 +98,9 @@ asmlinkage long sys_vbi_mem(uint32_t cpu, void *dest, void *src,
 	uint32_t len;
 	long rv = OK;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	if ((buf = vmalloc(size)) == NULL) {
 		rv = -ENOMEM;
 		goto out;
@@ -136,6 +143,9 @@ asmlinkage long sys_vbi_control(uint32_t vb, uint32_t command, uint32_t flags)
 {
 	long ret = 0;
 
+	if (!capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	switch(command) {
 	case SYS_VBI_VB_SUSPEND:
 		ret = vbi_vb_suspend(vb, VBI_VB_CORES_ALL);
-- 
1.6.5.2

