From bbb3a93666a09e1a6496e3540a57d6664a59dfb9 Mon Sep 17 00:00:00 2001
From: Liang Li <liang.li@windriver.com>
Date: Mon, 26 Apr 2010 12:39:43 +0800
Subject: [PATCH 10/18] x86: Add support for PCI shared interrupts and USB.

Since we drive the USB hardware directly from Linux,
we need any quirks to be applied before the driver
initializes.

Also, USB hardware shares interrupts.  Support is
added via a new bootarg, namely "shared_interrupts" which
allows more than one PCI device to use an irq.

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
Signed-off-by: Liang Li<liang.li@windriver.com>
---
 arch/x86/kernel/vbi/wrhv.c    |   80 +++++++++++++++++++++++++++++++++++++++-
 drivers/usb/host/pci-quirks.c |    1 +
 include/linux/wrhv.h          |    3 +-
 3 files changed, 80 insertions(+), 4 deletions(-)

diff --git a/arch/x86/kernel/vbi/wrhv.c b/arch/x86/kernel/vbi/wrhv.c
index 772c1a8..0b78ac4 100644
--- a/arch/x86/kernel/vbi/wrhv.c
+++ b/arch/x86/kernel/vbi/wrhv.c
@@ -38,6 +38,8 @@
 #define WRHV_RESERVED_PAGES	16
 #define WRHV_RESERVED_TOP	(WRHV_RESERVED_PAGES * PAGE_SIZE)
 
+#define WRHV_BOOTARG_BUF_SIZE	256
+
 /* Copied over during early bootstrap */
 struct vb_config __wr_config = { .pid = -1 };
 struct vb_config *_wr_config; /* Pointer passed from hypervisor */
@@ -309,6 +311,48 @@ static int __init wrhv_check_kgdboe(char *str)
 }
 early_param("kgdboe", wrhv_check_kgdboe);
 
+static char *shared_interrupts_list;
+static int __init wrhv_check_shared_interrupts(char *str)
+{
+	shared_interrupts_list = str;
+	return 0;
+}
+early_param("shared_interrupts", wrhv_check_shared_interrupts);
+
+int find_shared_interrupt(char *devfn)
+{
+	char	shared_interrupts[WRHV_BOOTARG_BUF_SIZE];
+	char	devfn_list[WRHV_BOOTARG_BUF_SIZE];
+	char	*current_tok, *devfn_tok;
+	char	*position, *devfn_pos;
+	int	intr_num;
+
+	if (shared_interrupts_list == NULL)
+		return -1;
+
+	strncpy(shared_interrupts, shared_interrupts_list,
+		WRHV_BOOTARG_BUF_SIZE-1);
+	shared_interrupts[WRHV_BOOTARG_BUF_SIZE-1] = '\0'; /* be safe */
+	position = shared_interrupts;
+	/* crack by ':' first */
+	while ((current_tok = strsep(&position, ":"))) {
+		/* crack by '@' second */
+		if (sscanf(current_tok, "%x@%s", &intr_num, devfn_list) != 2)
+			return -1; /* broken list */
+
+		/* crack by ',' third */
+		devfn_pos = devfn_list;
+		while ((devfn_tok = strsep(&devfn_pos, ","))) {
+			if (strcmp(devfn_tok, devfn) == 0) {
+				/* We have a match! */
+				return intr_num;
+			}
+		}
+	}
+	/* Didn't find it */
+	return -1;
+}
+
 static void __devinit pci_fixup_wrhv(struct pci_dev *dev)
 {
 	int irq;
@@ -331,6 +375,26 @@ static void __devinit pci_fixup_wrhv(struct pci_dev *dev)
 	case PCI_BASE_CLASS_DISPLAY:
 		devclass = "VGA";
 		break;
+
+	case PCI_BASE_CLASS_SERIAL:
+		/* Look at the upper byte of the class to see if the
+		   device is usb.
+		*/
+		if ((dev->class >> 8) == PCI_CLASS_SERIAL_USB) {
+			devclass = "USB";
+			break;
+		}
+
+	case PCI_BASE_CLASS_SYSTEM:
+		/* Examine more bits of the class to see if the
+		   device is "other".  This covers Intel's I/O acceleration
+		   technology aka ioatdma.
+		*/
+		if ((dev->class >> 8) == PCI_CLASS_SYSTEM_OTHER) {
+			devclass = "System";
+			break;
+		}
+
 	default:
 		skip_assign_irq = 1;
 		irq = dev->irq;
@@ -338,8 +402,20 @@ static void __devinit pci_fixup_wrhv(struct pci_dev *dev)
 	}
 
 	if (!skip_assign_irq) {
-		snprintf(devname, sizeof devname, "pci%s_%x:%x",
-			devclass, dev->bus->number, dev->devfn);
+		int sharedint;
+
+		/* See if a shared interrupt first */
+		snprintf(devname, sizeof devname, "%x-%x",
+			dev->bus->number, dev->devfn);
+		sharedint = find_shared_interrupt(devname);
+		if (sharedint < 0) {
+			/* Not found as a shared int, look it up directly */
+			snprintf(devname, sizeof devname, "pci%s_%x:%x",
+				devclass, dev->bus->number, dev->devfn);
+		} else {
+			snprintf(devname, sizeof devname, "pciSharedInt_%x",
+				sharedint);
+		}
 		irq = vbi_find_irq(devname, 1);
 		if (irq == VBI_INVALID_IRQ)
 			irq = WRHV_POLL_IRQ;
diff --git a/drivers/usb/host/pci-quirks.c b/drivers/usb/host/pci-quirks.c
index e906252..f0ddc15 100644
--- a/drivers/usb/host/pci-quirks.c
+++ b/drivers/usb/host/pci-quirks.c
@@ -14,6 +14,7 @@
 #include <linux/init.h>
 #include <linux/delay.h>
 #include <linux/acpi.h>
+#include <linux/wrhv.h>
 #include "pci-quirks.h"
 #include "xhci-ext-caps.h"
 
diff --git a/include/linux/wrhv.h b/include/linux/wrhv.h
index 885269d..4795364 100644
--- a/include/linux/wrhv.h
+++ b/include/linux/wrhv.h
@@ -86,7 +86,6 @@ typedef union {
 	uint32_t value;
 } VIOAPIC_REDIR_LOW;
 
-#else
-#endif
+#endif /* CONFIG_WRHV */
 
 #endif	/* __LINUX_WRHV_H */
-- 
1.6.5.2

