From 26a1c82342c4308f8bc1ede95f20bdad7e56a094 Mon Sep 17 00:00:00 2001
From: Thomas Tai <thomas.tai@windriver.com>
Date: Wed, 2 Mar 2011 10:26:06 -0500
Subject: [PATCH 4/4] vbi: build infrastructure changes for schedule change vbi

add new schedule change vbi to source file and add a new
system call to support this new vbi.

Signed-off-by: Thomas Tai <thomas.tai@windriver.com>
---
 arch/x86/kernel/vbi/syscalls.S |   15 ++++++++++
 kernel/vbi/Makefile            |    2 +-
 kernel/vbi/sched.c             |   56 ++++++++++++++++++++++++++++++++++++++++
 3 files changed, 72 insertions(+), 1 deletions(-)
 create mode 100644 kernel/vbi/sched.c

diff --git a/arch/x86/kernel/vbi/syscalls.S b/arch/x86/kernel/vbi/syscalls.S
index f03a35b..9bce959 100644
--- a/arch/x86/kernel/vbi/syscalls.S
+++ b/arch/x86/kernel/vbi/syscalls.S
@@ -581,3 +581,18 @@ vbi_hcall(vbi_vtlb_op, vtlb_op, 4)
  *
  */
 vbi_hcall(vbi_vb_remote, vbRemote, 4)
+
+/*
+ * vbiSchedTransitionOp - transition the  frame scheduler
+ *
+ * This system call executes a frame scheduler transition.   Possible scheduler
+ * transitions are:
+ *
+ * SCHEDULER_TRANSITON_MAJOR
+ * SCHEDULER_TRANSITION_MINOR
+ * SCHEDULER_TRANSITION_TICK
+ *
+ */
+#ifdef CONFIG_WRHV_CERT
+vbi_hcall(vbi_sched_transition_op, schedTransition, 1)
+#endif
diff --git a/kernel/vbi/Makefile b/kernel/vbi/Makefile
index 14124fb..36f0e53 100644
--- a/kernel/vbi/Makefile
+++ b/kernel/vbi/Makefile
@@ -7,5 +7,5 @@
 # Except the user ABI, which is always present, and defined in syscall_vbi
 
 obj-$(CONFIG_WRHV) += shmem.o wrhv.o interrupt.o paddr.o idle.o io_apic.o lib.o \
-                      version.o msg.o ns.o show.o pdc.o device.o procfs.o
+                      version.o msg.o ns.o show.o pdc.o device.o procfs.o sched.o
 obj-y += syscall_vbi.o
diff --git a/kernel/vbi/sched.c b/kernel/vbi/sched.c
new file mode 100644
index 0000000..a7a5c22
--- /dev/null
+++ b/kernel/vbi/sched.c
@@ -0,0 +1,56 @@
+/*
+ * sched.c - hypervisor scheduled transition service
+ *
+ * Copyright (c) 2011 Wind River Systems, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+ * See the GNU General Public License for more details.
+ *
+ */
+
+#include <linux/string.h>
+#include <vbi/vbi.h>
+#include <vbi/private.h>
+
+#ifdef DEBUG
+#define DEBUGM(fmt, args...)    printk(fmt, ##args)
+#else
+#define DEBUGM(fmt, args...)
+#endif
+
+#ifdef CONFIG_WRHV_CERT
+/*
+ * vbi_sched_transition - transition to a new schedule
+ *
+ * This routine makes a hypercall to  transition to a new schedule <name>.
+ *
+ * Possible scheduler transitions are:
+ *
+ * SCHEDULER_TRANSITON_MAJOR
+ * SCHEDULER_TRANSITION_MINOR
+ * SCHEDULER_TRANSITION_TICK
+ *
+ */
+int32_t vbi_sched_transition(char * name, uint32_t transition_type)
+{
+	int32_t status;
+	struct vb_control *p = VBI_CNTRL_ADDR_GET();
+	
+	/* only certifiable hypervisor's control structure has the name field */
+	if ((name == NULL) || (p == NULL))
+		return -1;
+
+	/* copy the name to vb_control's name field */
+	vbi_vcore_irq_lock();
+	memcpy(p->name, name, VB_NAMELEN);
+	status = vbi_sched_transition_op(transition_type);
+	vbi_vcore_irq_unlock();
+	return status;
+}
+#endif
-- 
1.6.5.2

