From e4a875438fadb60e8cef0a0805399519b2e2b8b0 Mon Sep 17 00:00:00 2001
From: Thomas Tai <thomas.tai@windriver.com>
Date: Wed, 2 Mar 2011 10:10:09 -0500
Subject: [PATCH] vbi/cert: add function prototype for schedule transition vbi

The certifiable hypervisor adds a new vbi to change vb
scheduler. This new vbi is ported from vbiSchedTransition.c
The new vbi make use of an newly added field in vb_control.

Signed-off-by: Thomas Tai <thomas.tai@windriver.com>
---
 include/vbi/compat.h    |    5 +++++
 include/vbi/interface.h |   11 +++++++++++
 include/vbi/private.h   |    5 +++++
 include/vbi/syscall.h   |    4 +++-
 include/vbi/syscalls.h  |    4 +++-
 5 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/include/vbi/compat.h b/include/vbi/compat.h
index 873183a..83f958c 100644
--- a/include/vbi/compat.h
+++ b/include/vbi/compat.h
@@ -136,6 +136,11 @@
 #define vbiVbReset		vbi_vb_reset
 #define vbiVbRemote		vbi_vb_remote
 
+#ifdef CONFIG_WRHV_CERT
+#define vbiSchedTransition	vbi_sched_transition
+#define vbiSchedTransitionOp	vbi_sched_transition_op
+#endif
+
 #define vbiVbRegisterRead	vbi_vb_read_reg
 #define vbiVbRegisterWrite	vbi_vb_write_reg
 #define vbiVbMemoryRead		vbi_vb_read_mem
diff --git a/include/vbi/interface.h b/include/vbi/interface.h
index 671116f..c982377 100644
--- a/include/vbi/interface.h
+++ b/include/vbi/interface.h
@@ -230,6 +230,13 @@ identity mapped.
 #define VBI_REG_SET_32BIT	0
 #define VBI_REG_SET_64BIT	1
 
+#ifdef CONFIG_WRHV_CERT
+/* define frame scheduler transition definitions */
+#define SCHEDULER_TRANSITION_MAJOR 1
+#define SCHEDULER_TRANSITION_MINOR 2
+#define SCHEDULER_TRANSITION_TICK  3
+#endif
+
 #ifndef	_ASMLANGUAGE
 
 /*
@@ -326,6 +333,10 @@ struct vb_control
 
 	uint32_t irq_pend;		/* actual virtual interrupt pending */
 
+#ifdef CONFIG_WRHV_CERT
+	char name[VB_NAMELEN];  /* used for sched transition */
+#endif
+
 };
 
 
diff --git a/include/vbi/private.h b/include/vbi/private.h
index 84fabfc..80e5860 100644
--- a/include/vbi/private.h
+++ b/include/vbi/private.h
@@ -36,6 +36,11 @@ extern asmlinkage int32_t vbi_ns_op(uint32_t op, char* name, uint32_t rev,
 			VBI_NS_HANDLE *handle, uint32_t timeout,
 			uint32_t options);
 
+#ifdef CONFIG_WRHV_CERT
+/* Transition to a new schedule */
+extern asmlinkage int32_t vbi_sched_transition_op(uint32_t transition_type);
+#endif
+
 /* Message receive private operator */
 extern asmlinkage int32_t vbi_rx_op(void *rmsg, uint32_t rlen,
 			struct vbi_msg_info *info, struct vbi_msg_ctl *ctl);
diff --git a/include/vbi/syscall.h b/include/vbi/syscall.h
index f4e451c..799941e 100644
--- a/include/vbi/syscall.h
+++ b/include/vbi/syscall.h
@@ -131,7 +131,6 @@ extern int32_t vbi_ns_lookup(char *name, uint32_t  rev, VBI_NS_HANDLE *pHandle,
 				uint32_t timeout, uint32_t options);
 extern int32_t vbi_tlb_flush_vmmu(struct vmmuConfig * config, void *addr, size_t len);
 
-
 /* Prior to vbi 2.0 these api were vbi_set_mmu_attr/Get */
 
 
@@ -193,6 +192,9 @@ extern asmlinkage int32_t cert_debug_vbi_kputs(const char *s);
 extern asmlinkage int32_t cert_debug_vbi_kputc(int c);
 extern asmlinkage void cert_debug_vbi_shell_start_debug(uint32_t  flags);
 
+/* schedule transition api */
+extern int32_t vbi_sched_transition(char *name, uint32_t transition_type);
+
 /* system call prototypes for use within a context */
 static inline int vbi_ctx_ctl(unsigned operation, unsigned arg1,
 				unsigned arg2)
diff --git a/include/vbi/syscalls.h b/include/vbi/syscalls.h
index 7845091..a6d63d3 100644
--- a/include/vbi/syscalls.h
+++ b/include/vbi/syscalls.h
@@ -111,7 +111,9 @@
 #define VBI_SYS_vbSuspend       HY_SYSCALL(24)	/* suspend vcores	*/
 #define VBI_SYS_vbResume        HY_SYSCALL(25)	/* Resume vcores	*/
 #define VBI_SYS_vbRemote        HY_SYSCALL(26)	/* Get info of board	*/
-
+#ifdef CONFIG_WRHV_CERT
+#define VBI_SYS_schedTransition HY_SYSCALL(27)  /* transition frame scheduler */
+#endif
 /* Additional VMMU calls */
 #define VBI_SYS_vmmu_create	HY_SYSCALL(30)
 #define VBI_SYS_vmmu_delete	HY_SYSCALL(31)
-- 
1.6.5.2

