From 510352b5ef3a0ebc9a69671d78a54f0de224f596 Mon Sep 17 00:00:00 2001
From: Thomas Tai <thomas.tai@windriver.com>
Date: Fri, 18 Feb 2011 15:37:34 -0500
Subject: [PATCH 3/7] cert-hyp: add statistic counts for unsupported api call

Certifiable hypevisor have unsupported VBI functions,
whenever these api are called, a statistic counter is
updated. User can use /proc/vibstat to display or reset
the counter value.

Unsupported VBI functions is listed in Certifiable Hypervisor HLD.

Signed-off-by: Thomas Tai <thomas.tai@windriver.com>
---
 include/vbi/stats.h |   68 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 68 insertions(+), 0 deletions(-)
 create mode 100644 include/vbi/stats.h

diff --git a/include/vbi/stats.h b/include/vbi/stats.h
new file mode 100644
index 0000000..c5c0f74
--- /dev/null
+++ b/include/vbi/stats.h
@@ -0,0 +1,68 @@
+#ifndef STATS_H
+#define STATS_H
+
+#ifndef _ASMLANGUAGE
+
+#include <linux/kernel.h>
+/* api statistic structure */
+struct vbi_api_stats{
+	/* functions implemented in vbi.h */
+	uint32_t vbi_vb_find_board_config;
+	uint32_t vbi_send_vcore_vioapic_irq;
+	uint32_t vbi_redir_vioapic_irq;
+	uint32_t vbi_disp_vioapic;
+	uint32_t vbi_show_shmem;
+	uint32_t vbi_show_stat;
+	uint32_t vbi_show_ctrl;
+	uint32_t vbi_show_cfg;
+	uint32_t vbi_show_mem;
+	uint32_t vbi_disp_status_regs;
+	uint32_t vbi_disp_ctrl_regs;
+	uint32_t vbi_show_config_page_map;
+	/* functions implementted in syscall.h */
+	uint32_t vbi_set_mem_attr;
+	uint32_t vbi_get_mem_attr;
+	uint32_t vbi_kputs;
+	uint32_t vbi_kputc;
+	uint32_t vbi_send;
+	uint32_t vbi_receive;
+	uint32_t vbi_reply;
+	uint32_t vbi_vb_restart;
+	uint32_t vbi_vb_resume;
+	uint32_t vbi_vb_read_mem;
+	uint32_t vbi_vb_write_mem;
+	uint32_t vbi_shell_start_debug;
+	uint32_t vbi_vb_read_reg;
+	uint32_t vbi_vb_write_reg;
+	uint32_t vbi_ns_register;
+	uint32_t vbi_ns_unregister;
+	uint32_t vbi_ns_lookup;
+	uint32_t vbi_vb_suspend;
+	uint32_t vbi_ctx_ctl;
+	uint32_t vbi_vb_mgmt;
+};
+
+/* declared in linux/kernel/vbi/wrhv.c */
+extern int vbistat_verbose;
+extern struct vbi_api_stats vbistat_count;
+extern int cert_hyp_version;
+
+#define CERT_HYP_VER_NONE	(0)
+#define CERT_HYP_VER_STD	(1)
+#define CERT_HYP_VER_DEBUG	(2)
+
+#define VBISTAT_VERBOSE(ctr, msg) \
+do {\
+/* limit output to maximum of 100 times */\
+if ((vbistat_verbose) && ((ctr) < 100))\
+printk(KERN_INFO "unsupported vbi call %s\n", msg);\
+ctr++;\
+} while (0)
+
+static inline int is_cert_hyp(void){
+	return cert_hyp_version != CERT_HYP_VER_NONE;
+}
+
+#endif
+
+#endif
-- 
1.6.5.2

