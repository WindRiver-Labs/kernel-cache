From 461b1ca4daaee7f8cc870e05f5e12158b47a8a5b Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Wed, 12 May 2010 16:39:50 +0800
Subject: [PATCH 03/14] WRHV/PPC: Get PCI irq

Implement an universal way to get irq on the PPC.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/include/asm/wrhv.h  |    5 +++++
 arch/powerpc/kernel/paravirt.c   |   10 ++++++++++
 arch/powerpc/kernel/pci-common.c |    9 ++++++++-
 arch/powerpc/kernel/vbi/wrhv.c   |   27 +++++++++++++++++++++++++++
 4 files changed, 50 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/include/asm/wrhv.h b/arch/powerpc/include/asm/wrhv.h
index fa3b4f0..98b3536 100644
--- a/arch/powerpc/include/asm/wrhv.h
+++ b/arch/powerpc/include/asm/wrhv.h
@@ -31,5 +31,10 @@ extern unsigned long wrhv_cpu_freq;
 extern uint32_t service_handle;
 extern void get_hv_bsp_server_handle(void);
 extern int get_bsp_clock_freq(void);
+
+#ifdef CONFIG_PCI
+extern int ppc_get_pci_intr_wrhv(struct pci_dev *dev);
+#endif
+
 #endif /* CONFIG_WRHV */
 #endif /* __ASM_WRHV_H */
diff --git a/arch/powerpc/kernel/paravirt.c b/arch/powerpc/kernel/paravirt.c
index ae9e98c..b98eb0b 100644
--- a/arch/powerpc/kernel/paravirt.c
+++ b/arch/powerpc/kernel/paravirt.c
@@ -257,6 +257,16 @@ inline int paravirt_enabled(void)
         return pv_info.paravirt_enabled;
 }
 
+#ifdef CONFIG_PCI
+int paravirt_pci_read_irq_line(struct pci_dev *dev)
+{
+#if defined(CONFIG_WRHV)
+	return ppc_get_pci_intr_wrhv(dev);
+#endif /* CONFIG_WRHV */ 
+	return -1;
+}
+#endif
+
 extern struct pv_time_ops pv_time_ops;
 extern struct pv_cpu_ops pv_cpu_ops;
 extern struct pv_irq_ops pv_irq_ops;
diff --git a/arch/powerpc/kernel/pci-common.c b/arch/powerpc/kernel/pci-common.c
index 0c0567e..d4b8d86 100644
--- a/arch/powerpc/kernel/pci-common.c
+++ b/arch/powerpc/kernel/pci-common.c
@@ -206,12 +206,14 @@ char __devinit *pcibios_setup(char *str)
 	return str;
 }
 
+int paravirt_pci_read_irq_line(struct pci_dev *pci_dev) 
+	__attribute__((weak, alias("native_pci_read_irq_line")));
 /*
  * Reads the interrupt pin to determine if interrupt is use by card.
  * If the interrupt is used, then gets the interrupt line from the
  * openfirmware and sets it in the pci_dev and pci_config line.
  */
-int pci_read_irq_line(struct pci_dev *pci_dev)
+int native_pci_read_irq_line(struct pci_dev *pci_dev)
 {
 	struct of_irq oirq;
 	unsigned int virq;
@@ -280,6 +282,11 @@ int pci_read_irq_line(struct pci_dev *pci_dev)
 
 	return 0;
 }
+
+int pci_read_irq_line(struct pci_dev *pci_dev)
+{
+	return paravirt_pci_read_irq_line(pci_dev);
+}
 EXPORT_SYMBOL(pci_read_irq_line);
 
 /*
diff --git a/arch/powerpc/kernel/vbi/wrhv.c b/arch/powerpc/kernel/vbi/wrhv.c
index f631091..6683ffb 100644
--- a/arch/powerpc/kernel/vbi/wrhv.c
+++ b/arch/powerpc/kernel/vbi/wrhv.c
@@ -1112,3 +1112,30 @@ void wrhv_init(void)
 	pv_mmu_ops.__set_pte_at = wrhv__set_pte_at;
 
 }
+
+#ifdef CONFIG_PCI
+#define VECTOR_NAME_SIZE	8
+int ppc_get_pci_intr_wrhv(struct pci_dev *dev)
+{
+	int irq = -1;
+	u8  pin = 0;
+	char vector_name[VECTOR_NAME_SIZE];
+	static char line[4] = {'A', 'B', 'C', 'D'};
+
+	pci_read_config_byte(dev, PCI_INTERRUPT_PIN, &pin);
+
+	if (pin) {
+		snprintf(vector_name, VECTOR_NAME_SIZE, "PCIe%d_%c", 
+			(dev->bus->number+1), line[pin-1]);
+		irq = vbi_find_irq(vector_name, 1);
+		if (irq >= 0) {
+			dev->irq = irq;
+			printk("WRHV-PCI: BUS NO:%x CLASS:%x IRQ%d for %s\n", 
+				dev->bus->number, dev->class, dev->irq, vector_name);
+			return 0;
+		}
+	}
+
+	return -1;
+}
+#endif
-- 
1.6.5.2

