From d5e5bd103e27037456698e2c4e311e9567d6a783 Mon Sep 17 00:00:00 2001
From: Thomas Tai <thomas.tai@windriver.com>
Date: Wed, 15 Jun 2011 13:56:42 -0400
Subject: [PATCH 1/3] update certified hypervisor 2.0 VBI

certified hypervisor 2.0 VBI is difference from the previous
version. Update VBI status and configuration structure to match
certified hypervisor. Added port status and configuration for
a new VBI port system call.

Signed-off-by: Thomas Tai <thomas.tai@windriver.com>
---
 include/vbi/interface.h |   86 ++++++++++++++++++++++++++++++++--------------
 1 files changed, 60 insertions(+), 26 deletions(-)

diff --git a/include/vbi/interface.h b/include/vbi/interface.h
index ce18ef9..595ef04 100644
--- a/include/vbi/interface.h
+++ b/include/vbi/interface.h
@@ -256,14 +256,43 @@ identity mapped.
 #define VBI_REG_SET_64BIT	1
 
 #ifdef CONFIG_WRHV_CERT
+/*
+ * define schedule control commands that is the
+ * first parameter in syscall vbiSchedControlOp() which
+ * decides the action of control.
+ */
+
+/* do frame scdeduler frame transition */
+#define SCHED_CONTROL_TRANSITION	1
+
 /* define frame scheduler transition definitions */
 #define SCHEDULER_TRANSITION_MAJOR 1
 #define SCHEDULER_TRANSITION_MINOR 2
 #define SCHEDULER_TRANSITION_TICK  3
+
+/* define port operation definitions */
+#define PORT_SEND 1
+#define PORT_BUF_RELEASE 2
+
 #endif
 
 #ifndef	_ASMLANGUAGE
 
+#ifdef CONFIG_WRHV_CERT
+/* port direction type */
+enum PORT_DIRECTION {
+	SOURCE = 0,
+	DESTINATION
+};
+
+/* queuing port protocol */
+enum PORT_PROTOCOL_MODE {
+	SENDER_BLOCK = 0,
+	RECEIVER_DISCARD,
+	NOT_APPLICABLE
+};
+#endif
+
 /*
  * vb_control - Virtual board cores control structure
  *
@@ -358,10 +387,6 @@ struct vb_control
 
 	uint32_t irq_pend;		/* actual virtual interrupt pending */
 
-#ifdef CONFIG_WRHV_CERT
-	char name[VB_NAMELEN];		/* used for sched transition */
-#endif
-
 };
 
 
@@ -430,6 +455,17 @@ struct vb_control
  *
  */
 
+#ifdef CONFIG_WRHV_CERT
+struct vb_port_status{
+	VB_ALIGN_FIELD_64(uint8_t *s_buf, pad1);         /* SIPC buffer */
+	VB_ALIGN_FIELD_64(uint32_t *msg_len_array, pad2); /* message length */
+	uint32_t    write_index;             	/* write buffer index */
+	uint32_t    read_index;              	/* index of buffer to read */
+	uint32_t    num_msg;                 	/* number of messages */
+	uint32_t    mem_align_msg_size; 	/* max msg size aligned */
+};
+#endif
+
 struct vb_status {
 
 #ifdef _WRHV_ARCH_HAS_STATUS_REGS
@@ -476,6 +512,11 @@ struct vb_status {
 	/* The simulatror flag  */
 	uint32_t sim;
 
+#ifdef CONFIG_WRHV_CERT
+	/* port staus information */
+	VB_ALIGN_FIELD_64(struct vb_port_status *port_status, pad3);
+#endif
+
 };
 
 #define ALIGN_DEV_INFO_SIZE	8	/* vb_dev_info, vb_dev_int_info,
@@ -579,16 +620,18 @@ struct config_page_map
 };
 
 #if defined(CONFIG_WRHV_CERT)
-/* order in this structure must match the ones in board_q_port_t */
-struct vbPortConfig {
-	uint32_t vbPortId;	/* unique Id starting at 0 */
+/* Information for the port configuration */
+
+/* Field order in this structure must match the ones in board_q_port_t */
+struct vb_port_config {
+	uint32_t vb_port_id;	/* unique Id starting at 0 */
 	char name[VB_NAMELEN];	/* port name */
-	uint32_t vbId;		/* vb Id where port reside */
-	uint32_t channelId;	/* channel id to which the port is connected */
+	uint32_t vb_id;		/* vb Id where port reside */
+	uint32_t channel_id;	/* channel id to which the port is connected */
 	uint32_t direction;	/* SOURCE or DESTINATION */
 	uint32_t protocol;	/* SENDER_BLOCK or RECEIVER_DISCARD */
-	uint32_t maxMsgSize;	/* max messages size in bytes */
-	uint32_t maxNumMsgs;	/* queue length */
+	uint32_t max_msg_size;	/* max messages size in bytes */
+	uint32_t max_num_msgs;	/* queue length */
 };
 #endif
 
@@ -681,16 +724,6 @@ struct vb_config
 	/* number of interrupts connected to this board */
 	uint32_t num_ints;
 
-#if defined(CONFIG_WRHV_CERT)
-	/*
-	 * ports configuration
-	 *--------------------
-	 */
-
-	/* number of ports configured on this board */
-	uint32_t numPorts;
-#endif
-
 	/*
 	 *  misc settings
 	 */
@@ -719,14 +752,15 @@ struct vb_config
 
 	uint32_t numDevices;
 
-#if defined(CONFIG_WRHV_CERT)
-	/* ports configuration information */
-	VB_ALIGN_FIELD_64(struct vbPortConfig *portConfig, pad12);
-#else
-
 	/* provide mappings for all configuration pages */
 	struct config_page_map configPageMap[MAX_VB_CONFIG_REGIONS];
 	uint32_t configPageNum;
+
+#if defined(CONFIG_WRHV_CERT)
+	uint32_t num_ports;
+
+	/* ports configuration information */
+	VB_ALIGN_FIELD_64(struct vb_port_config *port_config, pad12);
 #endif
 
 	/* guest type */
-- 
1.7.0.4

