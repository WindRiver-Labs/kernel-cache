From 4b141365b800e48bdc69970131d13725c8e8ae29 Mon Sep 17 00:00:00 2001
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Wed, 3 Aug 2011 13:22:20 -0400
Subject: [PATCH 03/10] wrhv: arm:  Header file modifications

Notable changes:
Paravirt declarations in cpu-single.h and proc-fns.h
Field vmmu handle added to the mm context type.
FIQ and IRQ interrupts are masked/unmasked together.

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 arch/arm/include/asm/assembler.h  |   13 +++++++++
 arch/arm/include/asm/cpu-single.h |   53 ++++++++++++++++++++++++++++++-------
 arch/arm/include/asm/irqflags.h   |   17 ++++++++++++
 arch/arm/include/asm/mmu.h        |    3 ++
 arch/arm/include/asm/proc-fns.h   |   13 ++++++++-
 arch/arm/include/asm/unistd.h     |    6 ++++
 6 files changed, 94 insertions(+), 11 deletions(-)

diff --git a/arch/arm/include/asm/assembler.h b/arch/arm/include/asm/assembler.h
index d757555..bc35b64 100644
--- a/arch/arm/include/asm/assembler.h
+++ b/arch/arm/include/asm/assembler.h
@@ -75,15 +75,28 @@
  */
 #if __LINUX_ARM_ARCH__ >= 6
 	.macro	disable_irq_notrace
+#ifndef CONFIG_WRHV
 	cpsid	i
+#else
+	cpsid	if
+#endif
 	.endm
 
 	.macro	enable_irq_notrace
+#ifndef CONFIG_WRHV
 	cpsie	i
+#else
+	cpsie	if
+#endif
 	.endm
 #else
 	.macro	disable_irq_notrace
+#ifndef CONFIG_WRHV
 	msr	cpsr_c, #PSR_I_BIT | SVC_MODE
+#else
+	msr	cpsr_c, #PSR_I_BIT | PSR_F_BIT | SVC_MODE
+#endif
+
 	.endm
 
 	.macro	enable_irq_notrace
diff --git a/arch/arm/include/asm/cpu-single.h b/arch/arm/include/asm/cpu-single.h
index f073a6d..a60e551 100644
--- a/arch/arm/include/asm/cpu-single.h
+++ b/arch/arm/include/asm/cpu-single.h
@@ -22,13 +22,49 @@
  * function pointers for this lot.  Otherwise, we can optimise the
  * table away.
  */
-#define cpu_proc_init			__cpu_fn(CPU_NAME,_proc_init)
-#define cpu_proc_fin			__cpu_fn(CPU_NAME,_proc_fin)
-#define cpu_reset			__cpu_fn(CPU_NAME,_reset)
-#define cpu_do_idle			__cpu_fn(CPU_NAME,_do_idle)
-#define cpu_dcache_clean_area		__cpu_fn(CPU_NAME,_dcache_clean_area)
-#define cpu_do_switch_mm		__cpu_fn(CPU_NAME,_switch_mm)
-#define cpu_set_pte_ext			__cpu_fn(CPU_NAME,_set_pte_ext)
+#define cpu_proc_init			__cpu_fn(CPU_NAME, _proc_init)
+#define cpu_proc_fin			__cpu_fn(CPU_NAME, _proc_fin)
+#define cpu_reset			__cpu_fn(CPU_NAME, _reset)
+#define native_cpu_do_idle		__cpu_fn(CPU_NAME, _do_idle)
+#define cpu_dcache_clean_area		__cpu_fn(CPU_NAME, _dcache_clean_area)
+#define native_cpu_do_switch_mm		__cpu_fn(CPU_NAME, _switch_mm)
+#define native_cpu_set_pte_ext		__cpu_fn(CPU_NAME, _set_pte_ext)
+
+extern void native_cpu_do_idle(void);
+extern void native_cpu_do_switch_mm(unsigned long pgd_phys,
+				struct mm_struct *mm);
+extern void native_cpu_set_pte_ext(pte_t *ptep, pte_t pte, unsigned int ext);
+extern void paravirt_do_idle(void);
+extern void paravirt_do_switch_mm(unsigned long pgd_phys, struct mm_struct *mm);
+extern void paravirt_set_pte_ext(pte_t *ptep, pte_t pte, unsigned int ext);
+
+static inline void cpu_do_idle(void)
+{
+#ifdef CONFIG_PARAVIRT
+	paravirt_do_idle();
+#else
+	native_cpu_do_idle();
+#endif
+}
+
+static inline void cpu_do_switch_mm(unsigned long pgd_phys,
+				struct mm_struct *mm)
+{
+#ifdef CONFIG_PARAVIRT
+	paravirt_do_switch_mm(pgd_phys, mm);
+#else
+	native_cpu_do_switch_mm(pgd_phys, mm);
+#endif
+}
+
+static inline void cpu_set_pte_ext(pte_t *ptep, pte_t pte, unsigned int ext)
+{
+#ifdef CONFIG_PARAVIRT
+	paravirt_set_pte_ext(ptep, pte, ext);
+#else
+	native_cpu_set_pte_ext(ptep, pte, ext);
+#endif
+}
 
 #include <asm/page.h>
 
@@ -37,8 +73,5 @@ struct mm_struct;
 /* declare all the functions as extern */
 extern void cpu_proc_init(void);
 extern void cpu_proc_fin(void);
-extern int cpu_do_idle(void);
 extern void cpu_dcache_clean_area(void *, int);
-extern void cpu_do_switch_mm(unsigned long pgd_phys, struct mm_struct *mm);
-extern void cpu_set_pte_ext(pte_t *ptep, pte_t pte, unsigned int ext);
 extern void cpu_reset(unsigned long addr) __attribute__((noreturn));
diff --git a/arch/arm/include/asm/irqflags.h b/arch/arm/include/asm/irqflags.h
index 6d09974..852d828 100644
--- a/arch/arm/include/asm/irqflags.h
+++ b/arch/arm/include/asm/irqflags.h
@@ -10,6 +10,22 @@
  */
 #if __LINUX_ARM_ARCH__ >= 6
 
+#ifdef CONFIG_WRHV
+/* Fiq interrupts are used in wrhv for indirect interrupt delivery.
+ * Treat fiqs the same as regular direct interrupts with respect to
+ * enable/disable.
+ */
+#define raw_local_irq_save(x)					\
+	({							\
+	__asm__ __volatile__(					\
+	"mrs	%0, cpsr		@ local_irq_save\n"	\
+	"cpsid	if"						\
+	: "=r" (x) : : "memory", "cc");				\
+	})
+
+#define raw_local_irq_enable()  __asm__("cpsie if @ __sti" : : : "memory", "cc")
+#define raw_local_irq_disable() __asm__("cpsid if @ __cli" : : : "memory", "cc")
+#else
 #define raw_local_irq_save(x)					\
 	({							\
 	__asm__ __volatile__(					\
@@ -20,6 +36,7 @@
 
 #define raw_local_irq_enable()  __asm__("cpsie i	@ __sti" : : : "memory", "cc")
 #define raw_local_irq_disable() __asm__("cpsid i	@ __cli" : : : "memory", "cc")
+#endif /* WRHV */
 #define local_fiq_enable()  __asm__("cpsie f	@ __stf" : : : "memory", "cc")
 #define local_fiq_disable() __asm__("cpsid f	@ __clf" : : : "memory", "cc")
 
diff --git a/arch/arm/include/asm/mmu.h b/arch/arm/include/asm/mmu.h
index 68870c7..02d305d 100644
--- a/arch/arm/include/asm/mmu.h
+++ b/arch/arm/include/asm/mmu.h
@@ -9,6 +9,9 @@ typedef struct {
 	spinlock_t id_lock;
 #endif
 	unsigned int kvm_seq;
+#ifdef CONFIG_WRHV
+	unsigned long vmmu_handle;
+#endif
 } mm_context_t;
 
 #ifdef CONFIG_CPU_HAS_ASID
diff --git a/arch/arm/include/asm/proc-fns.h b/arch/arm/include/asm/proc-fns.h
index 8fdae9b..15ea310 100644
--- a/arch/arm/include/asm/proc-fns.h
+++ b/arch/arm/include/asm/proc-fns.h
@@ -259,11 +259,13 @@
 
 #include <asm/memory.h>
 
+extern pgd_t *paravirt_cpu_get_pgd(void);
+
 #ifdef CONFIG_MMU
 
 #define cpu_switch_mm(pgd,mm) cpu_do_switch_mm(virt_to_phys(pgd),mm)
 
-#define cpu_get_pgd()	\
+#define native_cpu_get_pgd()	\
 	({						\
 		unsigned long pg;			\
 		__asm__("mrc	p15, 0, %0, c2, c0, 0"	\
@@ -272,6 +274,15 @@
 		(pgd_t *)phys_to_virt(pg);		\
 	})
 
+static inline pgd_t *cpu_get_pgd(void)
+{
+#ifdef CONFIG_PARAVIRT
+	return paravirt_cpu_get_pgd();
+#else
+	return native_cpu_get_pgd();
+#endif
+}
+
 #endif
 
 #endif /* __ASSEMBLY__ */
diff --git a/arch/arm/include/asm/unistd.h b/arch/arm/include/asm/unistd.h
index cba7c03..f2c2e29 100644
--- a/arch/arm/include/asm/unistd.h
+++ b/arch/arm/include/asm/unistd.h
@@ -400,6 +400,12 @@
 
 #define __NR_syscall_max 371
 
+#define VBI_MEM_READ			0x0010
+#define VBI_MEM_WRITE			0x0100
+#define SYS_VBI_VB_SUSPEND		0x10001
+#define SYS_VBI_VB_RESUME		0x20002
+#define SYS_VBI_VB_RESTART		0x40004
+
 /*
  * The following SWIs are ARM private.
  */
-- 
1.7.0.4

