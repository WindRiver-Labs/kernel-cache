From b6a8da88138a44163271756998bc4bfa40d68da9 Mon Sep 17 00:00:00 2001
From: Catalin Marinas <catalin.marinas@arm.com>
Date: Mon, 15 Mar 2010 10:12:04 +0800
Subject: [PATCH 11/22] kmemleak: Add kmemleak_alloc callback from alloc_large_system_hash

combin following commits.

commit 264ef8a904943ed7d0b04fa958894d7a5c2b2c61
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Tue Jul 7 10:33:01 2009 +0100

    kmemleak: Remove alloc_bootmem annotations introduced in the past

    kmemleak_alloc() calls were added in some places where alloc_bootmem was
    called. Since now kmemleak tracks bootmem allocations, these explicit
    calls should be run.

    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Acked-by: Pekka Enberg <penberg@cs.helsinki.fi>

commit 12de38b186c2af97bf0b4a1f907f766df46b1def
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Mon Jun 29 17:13:55 2009 +0100

    kmemleak: Inform kmemleak about pid_hash

    Kmemleak does not track alloc_bootmem calls but the pid_hash allocated
    in pidhash_init() would need to be scanned as it contains pointers to
    struct pid objects.

    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

commit dbb1f81ca67a56c6cfce4c94d07c76378fd4af9e
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Thu Jun 11 13:23:19 2009 +0100

    kmemleak: Add kmemleak_alloc callback from alloc_large_system_hash

    The alloc_large_system_hash function is called from various places in
    the kernel and it contains pointers to other allocated structures. It
    therefore needs to be traced by kmemleak.

    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

Integrated-by: Liming Wang <liming.wang@windriver.com>
---
 mm/page_alloc.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 83f11c5..12fdae0 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -47,6 +47,7 @@
 #include <linux/page-isolation.h>
 #include <linux/memcontrol.h>
 #include <linux/debugobjects.h>
+#include <linux/kmemleak.h>
 #include <trace/page_alloc.h>
 
 #include <asm/tlbflush.h>
@@ -4537,6 +4538,7 @@ void *__init alloc_large_system_hash(const char *tablename,
 					used += PAGE_SIZE;
 				}
 			}
+			kmemleak_alloc(table, size, 1, GFP_ATOMIC);
 		}
 	} while (!table && size > PAGE_SIZE && --log2qty);
 
-- 
1.7.0

