From d06fdf792f1c6a767a58e00f09e683fa450e78ca Mon Sep 17 00:00:00 2001
From: Catalin Marinas <catalin.marinas@arm.com>
Date: Mon, 15 Mar 2010 10:12:02 +0800
Subject: [PATCH 09/22] kmemleak: Add the slob memory allocation/freeing hooks

commit 4374e616d28e65265a5b433ceece275449f3d2e3 upstream
with a little modification

This patch adds the callbacks to kmemleak_(alloc|free) functions from the
slob allocator.

Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
Acked-by: Matt Mackall <mpm@selenic.com>
Acked-by: Pekka Enberg <penberg@cs.helsinki.fi>
---
 mm/slob.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/mm/slob.c b/mm/slob.c
index ed04252..a7deeba 100644
--- a/mm/slob.c
+++ b/mm/slob.c
@@ -472,6 +472,7 @@ void *__kmalloc_node(size_t size, gfp_t gfp, int node)
 		if (!m)
 			return NULL;
 		*m = size;
+		kmemleak_alloc(ret, size, 1, gfp);
 		return (void *)m + align;
 	} else {
 		void *ret;
@@ -482,6 +483,7 @@ void *__kmalloc_node(size_t size, gfp_t gfp, int node)
 			page = virt_to_page(ret);
 			page->private = size;
 		}
+		kmemleak_alloc(ret, size, 1, gfp);
 		return ret;
 	}
 }
@@ -493,6 +495,7 @@ void kfree(const void *block)
 
 	if (unlikely(ZERO_OR_NULL_PTR(block)))
 		return;
+	kmemleak_free(block);
 
 	sp = (struct slob_page *)virt_to_page(block);
 	if (slob_page(sp)) {
@@ -563,6 +566,7 @@ void kmem_cache_destroy(struct kmem_cache *c)
 {
 	if (c->flags & SLAB_DESTROY_BY_RCU)
 		rcu_barrier();
+	kmemleak_free(c);
 	slob_free(c, sizeof(struct kmem_cache));
 }
 EXPORT_SYMBOL(kmem_cache_destroy);
@@ -579,6 +583,7 @@ void *kmem_cache_alloc_node(struct kmem_cache *c, gfp_t flags, int node)
 	if (c->ctor)
 		c->ctor(b);
 
+	kmemleak_alloc_recursive(b, c->size, 1, c->flags, flags);
 	return b;
 }
 EXPORT_SYMBOL(kmem_cache_alloc_node);
@@ -601,6 +606,7 @@ static void kmem_rcu_free(struct rcu_head *head)
 
 void kmem_cache_free(struct kmem_cache *c, void *b)
 {
+	kmemleak_free_recursive(b, c->flags);
 	if (unlikely(c->flags & SLAB_DESTROY_BY_RCU)) {
 		struct slob_rcu *slob_rcu;
 		slob_rcu = b + (c->size - sizeof(struct slob_rcu));
-- 
1.7.0

