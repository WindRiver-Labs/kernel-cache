From cadf4d5a26dc0470dd3c3cbea83574a4bf48e86a Mon Sep 17 00:00:00 2001
From: Yongli He <yongli.he@windriver.com>
Date: Wed, 23 Jul 2008 15:53:17 +0800
Subject: [PATCH] Modify scheduling policy for a recently OOM killed thread

Changes the scheduling policy for a recently OOM killed thread so it
will be scheduled next and thus its resources will be freed as soon
as possible.

Signed-off-by: Liming Wang <liming.wang@windriver.com>
Integrated-by: yongli.he <yongli.he@windriver.com>

---
 init/Kconfig  |   10 ++++++++++
 mm/oom_kill.c |    8 ++++++++
 2 files changed, 18 insertions(+), 0 deletions(-)

diff --git a/init/Kconfig b/init/Kconfig
index a7bfde4..81b7cc2 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -534,6 +534,16 @@ config HWTIMER_TEST
 	  and test any of the underlying timers that may be registered
 	  with it.
 
+config HIGH_PRIO_OOMKILL
+	bool "Modify scheduling policy for a recently OOM killed thread"
+	default n
+	help
+	  If you say Y here, the scheduling policy for a recently OOM killed
+	  thread will be changed so it will be scheduled next and thus its
+	  resources will be freed as soon as possible.
+
+	  If unsure, say n.
+
 config CC_OPTIMIZE_FOR_SIZE
 	bool "Optimize for size"
 	default y
diff --git a/mm/oom_kill.c b/mm/oom_kill.c
index 8a5467e..3755c07 100644
--- a/mm/oom_kill.c
+++ b/mm/oom_kill.c
@@ -310,6 +310,9 @@ static void dump_tasks(const struct mem_cgroup *mem)
  */
 static void __oom_kill_task(struct task_struct *p, int verbose)
 {
+#ifdef CONFIG_HIGH_PRIO_OOMKILL
+	struct sched_param param;
+#endif
 	if (is_global_init(p)) {
 		WARN_ON(1);
 		printk(KERN_WARNING "tried to kill init!\n");
@@ -331,7 +334,12 @@ static void __oom_kill_task(struct task_struct *p, int verbose)
 	 * all the memory it needs. That way it should be able to
 	 * exit() and clear out its resources quickly...
 	 */
+#ifdef CONFIG_HIGH_PRIO_OOMKILL
+	param.sched_priority = MAX_RT_PRIO -1;
+	sched_setscheduler(p, SCHED_FIFO, &param);
+#else
 	p->rt.time_slice = HZ;
+#endif
 	set_tsk_thread_flag(p, TIF_MEMDIE);
 
 	force_sig(SIGKILL, p);
-- 
1.5.5.1

