From 7dd45d306f8bd6e1af3d2884ad61a43265a84435 Mon Sep 17 00:00:00 2001
From: Ming Liu <ming.liu@windriver.com>
Date: Thu, 8 Nov 2012 16:56:30 +0800
Subject: [PATCH 5/5] ns proc: check for valid nsproxy in pidns_get

A NULL pointer deference can occur in pidns_get after a task becomes a
zombie and exit_task_namespaces is called, as nsproxy becomes NULL.

Fix it by checking nsproxy is non-zero before accessing.

Taken from part of:
http://lxc.sourceforge.net/patches/linux/3.0.0/3.0.0-lxc1/patches/0008-ns-proc-Add-support-for-the-pid-namespace.patch

Signed-off-by Ming Liu <ming.liu@windriver.com>
---
 kernel/pid_namespace.c |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

diff --git a/kernel/pid_namespace.c b/kernel/pid_namespace.c
index 5def81f..e3647f5 100644
--- a/kernel/pid_namespace.c
+++ b/kernel/pid_namespace.c
@@ -194,9 +194,11 @@ void zap_pid_ns_processes(struct pid_namespace *pid_ns)
 static void *pidns_get(struct task_struct *task)
 {
 	struct pid_namespace *ns;
+
 	rcu_read_lock();
-	ns = get_pid_ns(task->nsproxy->pid_ns);
+	ns = get_pid_ns(task_active_pid_ns(task));
 	rcu_read_unlock();
+
 	return ns;
 }
 
-- 
1.7.0

