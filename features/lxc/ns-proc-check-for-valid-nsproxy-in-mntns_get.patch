From f69a4c92670363ad1387be6c1df0bcae72b67c9d Mon Sep 17 00:00:00 2001
From: Ming Liu <ming.liu@windriver.com>
Date: Thu, 8 Nov 2012 16:23:16 +0800
Subject: [PATCH 4/5] ns proc: check for valid nsproxy in mntns_get

A NULL pointer deference can occur in mntns_get after a task becomes a
zombie and exit_task_namespaces is called, as nsproxy becomes NULL.

Fix it by checking nsproxy is non-zero before accessing.

Taken from part of:
http://lxc.sourceforge.net/patches/linux/3.0.0/3.0.0-lxc1/patches/0006-ns-proc-Add-support-for-the-mount-namespace.patch

Signed-off-by Ming Liu <ming.liu@windriver.com>
---
 fs/namespace.c |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/fs/namespace.c b/fs/namespace.c
index 7de9733..4ba81a1 100644
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -2369,11 +2369,17 @@ EXPORT_SYMBOL(put_mnt_ns);
 
 static void *mntns_get(struct task_struct *task)
 {
-	struct mnt_namespace *ns;
+	struct mnt_namespace *ns = NULL;
+	struct nsproxy *nsproxy;
+
 	rcu_read_lock();
-	ns = task->nsproxy->mnt_ns;
-	get_mnt_ns(ns);
+	nsproxy = task_nsproxy(task);
+	if (nsproxy) {
+		ns = nsproxy->mnt_ns;
+		get_mnt_ns(ns);
+	}
 	rcu_read_unlock();
+
 	return ns;
 }
 
-- 
1.7.0

