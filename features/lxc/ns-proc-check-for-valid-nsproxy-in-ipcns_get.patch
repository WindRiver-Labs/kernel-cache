From 6888f9efa435619ee192a3d746fb06f28222f757 Mon Sep 17 00:00:00 2001
From: Ming Liu <ming.liu@windriver.com>
Date: Thu, 8 Nov 2012 16:04:30 +0800
Subject: [PATCH 1/5] ns proc: check for valid nsproxy in ipcns_get

A NULL pointer deference can occur in ipcns_get after a task becomes a
zombie and exit_task_namespaces is called, as nsproxy becomes NULL.

Fix it by checking nsproxy is non-zero before accessing.

Taken from part of commit a00eaf11a223c63fbb212369d6db69ce4c55a2d1 upstream.

Signed-off-by Ming Liu <ming.liu@windriver.com>
---
 ipc/namespace.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/ipc/namespace.c b/ipc/namespace.c
index 2c5947f..d28292e 100644
--- a/ipc/namespace.c
+++ b/ipc/namespace.c
@@ -136,10 +136,15 @@ void put_ipc_ns(struct ipc_namespace *ns)
 
 static void *ipcns_get(struct task_struct *task)
 {
-	struct ipc_namespace *ns;
+	struct ipc_namespace *ns = NULL;
+	struct nsproxy *nsproxy;
+
 	rcu_read_lock();
-	ns = get_ipc_ns(task->nsproxy->ipc_ns);
+	nsproxy = task_nsproxy(task);
+	if (nsproxy)
+		ns = get_ipc_ns(nsproxy->ipc_ns);
 	rcu_read_unlock();
+
 	return ns;
 }
 
-- 
1.7.0

