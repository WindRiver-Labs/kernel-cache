From 4fd7591a7a42b5d6d5a1ff06dcac5566dc6ce4a0 Mon Sep 17 00:00:00 2001
From: Ming Liu <ming.liu@windriver.com>
Date: Thu, 8 Nov 2012 16:10:02 +0800
Subject: [PATCH 2/5] ns proc: check for valid nsproxy in utsns_get

A NULL pointer deference can occur in utsns_get after a task becomes a
zombie and exit_task_namespaces is called, as nsproxy becomes NULL.

Fix it by checking nsproxy is non-zero before accessing.

Taken from part of commit 34482e89a5218f0f9317abf1cfba3bb38b5c29dd upstream.

Signed-off-by Ming Liu <ming.liu@windriver.com>
---
 kernel/utsname.c |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/kernel/utsname.c b/kernel/utsname.c
index ff06086..ef402fc 100644
--- a/kernel/utsname.c
+++ b/kernel/utsname.c
@@ -77,11 +77,17 @@ void free_uts_ns(struct kref *kref)
 
 static void *utsns_get(struct task_struct *task)
 {
-	struct uts_namespace *ns;
+	struct uts_namespace *ns = NULL;
+	struct nsproxy *nsproxy;
+
 	rcu_read_lock();
-	ns = task->nsproxy->uts_ns;
-	get_uts_ns(ns);
+	nsproxy = task_nsproxy(task);
+	if (nsproxy) {
+		ns = nsproxy->uts_ns;
+		get_uts_ns(ns);
+	}
 	rcu_read_unlock();
+
 	return ns;
 }
 
-- 
1.7.0

