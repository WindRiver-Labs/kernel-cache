From fc5e3f31f41706603c1ff3c30c6a968d8aab9f00 Mon Sep 17 00:00:00 2001
From: Ming Liu <ming.liu@windriver.com>
Date: Thu, 8 Nov 2012 16:14:22 +0800
Subject: [PATCH 3/5] ns proc: check for valid nsproxy in netns_get

A NULL pointer deference can occur in netns_get after a task becomes a
zombie and exit_task_namespaces is called, as nsproxy becomes NULL.

Fix it by checking nsproxy is non-zero before accessing.

Taken from part of commit f063052947f770845a6252f7fa24f6f624592a24 upstream.

Signed-off-by Ming Liu <ming.liu@windriver.com>
---
 net/core/net_namespace.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/net/core/net_namespace.c b/net/core/net_namespace.c
index ee8141d..21c006e 100644
--- a/net/core/net_namespace.c
+++ b/net/core/net_namespace.c
@@ -577,10 +577,15 @@ EXPORT_SYMBOL_GPL(net_assign_generic);
 #ifdef CONFIG_NET_NS
 static void *netns_get(struct task_struct *task)
 {
-	struct net *net;
+	struct net *net = NULL;
+	struct nsproxy *nsproxy;
+
 	rcu_read_lock();
-	net = get_net(task->nsproxy->net_ns);
+	nsproxy = task_nsproxy(task);
+	if (nsproxy)
+		net = get_net(nsproxy->net_ns);
 	rcu_read_unlock();
+
 	return net;
 }
 
-- 
1.7.0

