From e9bee53e1036663d628c5cfa00c396741f364d0c Mon Sep 17 00:00:00 2001
From: Amy Fong <amy.fong@windriver.com>
Date: Thu, 28 Jul 2011 15:07:53 -0400
Subject: [PATCH] lxc: syscall wireup for arm and mips

Signed-off-by: Amy Fong <amy.fong@windriver.com>
---
 arch/arm/include/asm/unistd.h  |    3 ++-
 arch/mips/include/asm/unistd.h |   15 +++++++++------
 2 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/arch/arm/include/asm/unistd.h b/arch/arm/include/asm/unistd.h
index cba7c03..25b9140 100644
--- a/arch/arm/include/asm/unistd.h
+++ b/arch/arm/include/asm/unistd.h
@@ -397,8 +397,9 @@
 #define __NR_sched_setparam_ex		(__NR_SYSCALL_BASE+368)
 #define __NR_sched_getparam_ex		(__NR_SYSCALL_BASE+369)
 #define __NR_sched_wait_interval	(__NR_SYSCALL_BASE+370)
+#define __NR_setns			(__NR_SYSCALL_BASE+371)
 
-#define __NR_syscall_max 371
+#define __NR_syscall_max 372
 
 /*
  * The following SWIs are ARM private.
diff --git a/arch/mips/include/asm/unistd.h b/arch/mips/include/asm/unistd.h
index e98b834..9568fd5 100644
--- a/arch/mips/include/asm/unistd.h
+++ b/arch/mips/include/asm/unistd.h
@@ -363,6 +363,7 @@
 #define __NR_sched_setparam_ex		(__NR_Linux + 340)
 #define __NR_sched_getparam_ex		(__NR_Linux + 341)
 #define __NR_sched_wait_interval	(__NR_Linux + 342)
+#define __NR_setns                      (__NR_Linux + 343)
 
 #define VBI_MEM_READ			0x0010
 #define VBI_MEM_WRITE			0x0100
@@ -373,12 +374,12 @@
 /*
  * Offset of the last Linux o32 flavoured syscall
  */
-#define __NR_Linux_syscalls		342
+#define __NR_Linux_syscalls		343
 
 #endif /* _MIPS_SIM == _MIPS_SIM_ABI32 */
 
 #define __NR_O32_Linux			4000
-#define __NR_O32_Linux_syscalls		342
+#define __NR_O32_Linux_syscalls		343
 
 #if _MIPS_SIM == _MIPS_SIM_ABI64
 
@@ -688,6 +689,7 @@
 #define __NR_sched_setparam_ex		(__NR_Linux + 299)
 #define __NR_sched_getparam_ex		(__NR_Linux + 300)
 #define __NR_sched_wait_interval	(__NR_Linux + 301)
+#define __NR_setns                      (__NR_Linux + 302)
 
 #define VBI_MEM_READ			0x0010
 #define VBI_MEM_WRITE			0x0100
@@ -698,12 +700,12 @@
 /*
  * Offset of the last Linux 64-bit flavoured syscall
  */
-#define __NR_Linux_syscalls		301
+#define __NR_Linux_syscalls		302
 
 #endif /* _MIPS_SIM == _MIPS_SIM_ABI64 */
 
 #define __NR_64_Linux			5000
-#define __NR_64_Linux_syscalls		301
+#define __NR_64_Linux_syscalls		302
 
 #if _MIPS_SIM == _MIPS_SIM_NABI32
 
@@ -1018,6 +1020,7 @@
 #define __NR_sched_setparam_ex		(__NR_Linux + 304)
 #define __NR_sched_getparam_ex		(__NR_Linux + 305)
 #define __NR_sched_wait_interval	(__NR_Linux + 306)
+#define __NR_setns                      (__NR_Linux + 307)
 
 #define VBI_MEM_READ			0x0010
 #define VBI_MEM_WRITE			0x0100
@@ -1028,12 +1031,12 @@
 /*
  * Offset of the last N32 flavoured syscall
  */
-#define __NR_Linux_syscalls		306
+#define __NR_Linux_syscalls		307
 
 #endif /* _MIPS_SIM == _MIPS_SIM_NABI32 */
 
 #define __NR_N32_Linux			6000
-#define __NR_N32_Linux_syscalls		306
+#define __NR_N32_Linux_syscalls		307
 
 #ifdef __KERNEL__
 
-- 
1.7.0.4

