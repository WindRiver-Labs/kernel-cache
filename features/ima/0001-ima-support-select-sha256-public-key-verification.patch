From baeeaa0f88f4a7d3c5752e7b317d7f20c2f660c8 Mon Sep 17 00:00:00 2001
From: De Huo <De.Huo@windriver.com>
Date: Tue, 22 Mar 2016 17:57:42 +0800
Subject: [PATCH] ima support select sha256 verification in keyring.

Select sha256 verify the ima signature in xattr.

Signed-off-by: De, Huo <de.huo@windriver.com>
---
 lib/digsig.c                   |   12 ++++++++++--
 security/integrity/integrity.h |    8 +++++++-
 security/keys/Kconfig          |   16 ++++++++++++++++
 3 files changed, 33 insertions(+), 3 deletions(-)

diff --git a/lib/digsig.c b/lib/digsig.c
index ae05ea39..60d8e70 100644
--- a/lib/digsig.c
+++ b/lib/digsig.c
@@ -28,6 +28,14 @@
 #include <linux/mpi.h>
 #include <linux/digsig.h>

+#ifdef CONFIG_DIGEST_HASH_SHA256
+#define HASH_DIGEST_SIZE  SHA256_DIGEST_SIZE
+#define HASH_DIGEST_NAME  "sha256"
+#else
+#define HASH_DIGEST_SIZE  SHA1_DIGEST_SIZE
+#define HASH_DIGEST_NAME  "sha1"
+#endif
+
 static struct crypto_shash *shash;

 static const char *pkcs_1_v1_5_decode_emsa(const unsigned char *msg,
@@ -192,7 +200,7 @@ int digsig_verify(struct key *keyring, const char *sig, int siglen,
 	int err = -ENOMEM;
 	struct signature_hdr *sh = (struct signature_hdr *)sig;
 	struct shash_desc *desc = NULL;
-	unsigned char hash[SHA1_DIGEST_SIZE];
+	unsigned char hash[HASH_DIGEST_SIZE];
 	struct key *key;
 	char name[20];

@@ -249,7 +257,7 @@ EXPORT_SYMBOL_GPL(digsig_verify);

 static int __init digsig_init(void)
 {
-	shash = crypto_alloc_shash("sha1", 0, 0);
+	shash = crypto_alloc_shash(HASH_DIGEST_NAME, 0, 0);
 	if (IS_ERR(shash)) {
 		pr_err("shash allocation failed\n");
 		return  PTR_ERR(shash);
diff --git a/security/integrity/integrity.h b/security/integrity/integrity.h
index 0fc9519..73d7cd7 100644
--- a/security/integrity/integrity.h
+++ b/security/integrity/integrity.h
@@ -16,6 +16,12 @@
 #include <crypto/sha.h>
 #include <linux/key.h>

+#ifdef CONFIG_DIGEST_HASH_SHA256
+#define IMA_HASH_DIGEST_SIZE  SHA256_DIGEST_SIZE
+#else
+#define IMA_HASH_DIGEST_SIZE  SHA1_DIGEST_SIZE
+#endif
+
 /* iint action cache flags */
 #define IMA_MEASURE		0x00000001
 #define IMA_MEASURED		0x00000002
@@ -66,7 +72,7 @@ enum evm_ima_xattr_type {

 struct evm_ima_xattr_data {
 	u8 type;
-	u8 digest[SHA1_DIGEST_SIZE];
+	u8 digest[IMA_HASH_DIGEST_SIZE];
 } __packed;

 #define IMA_MAX_DIGEST_SIZE	64
diff --git a/security/keys/Kconfig b/security/keys/Kconfig
index 72483b8..a66c3ba 100644
--- a/security/keys/Kconfig
+++ b/security/keys/Kconfig
@@ -80,3 +80,19 @@ config ENCRYPTED_KEYS
 	  Userspace only ever sees/stores encrypted blobs.
 
 	  If you are unsure as to whether this is required, answer N.
+
+choice
+        prompt "Digest hash algorithm"
+        default DIGEST_HASH_SHA1
+        help
+           Select the digest hash algorithm used for verifying the digest
+           signature in xtattr.
+
+        config DIGEST_HASH_SHA1
+                bool "SHA1 (default)"
+                depends on CRYPTO_SHA1
+
+        config DIGEST_HASH_SHA256
+                bool "SHA256"
+                depends on CRYPTO_SHA256
+endchoice
--
1.7.9.5

