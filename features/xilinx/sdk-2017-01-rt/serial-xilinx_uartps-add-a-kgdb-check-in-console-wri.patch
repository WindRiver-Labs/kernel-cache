From 1bcb5fdb331fe3ff8b5049c5ef9a15613b2069d9 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Tue, 5 Dec 2017 13:33:51 +0800
Subject: [PATCH] serial: xilinx_uartps: add a kgdb check in console write

To avoid below call trace, add a kgdb check in cdns_uart_console_write function:

BUG: sleeping function called from invalid context at kernel/locking/rtmutex.c:995
in_atomic(): 1, irqs_disabled(): 128, pid: 556, name: sh
Preemption disabled at:[<ffffff800813d9bc>] kgdb_cpu_enter+0x15c/0x680

CPU: 1 PID: 556 Comm: sh Not tainted 4.8.26-rt10-WR9.0.0.13_preempt-rt #9
Hardware name: ZynqMP ZCU102 RevA (DT)
Call trace:
[<ffffff8008089608>] dump_backtrace+0x0/0x1d0
[<ffffff80080897fc>] show_stack+0x24/0x30
[<ffffff80084c048c>] dump_stack+0x90/0xb4
[<ffffff80080c975c>] ___might_sleep+0x15c/0x170
[<ffffff800890e2a4>] rt_spin_lock+0x2c/0x88
[<ffffff8008598038>] cdns_uart_console_write+0x128/0x130
[<ffffff8008140200>] vkdb_printf+0x1b8/0x8e0
[<ffffff800814099c>] kdb_printf+0x74/0x90
[<ffffff8008144c6c>] kdb_main_loop+0x10c/0x7f8
[<ffffff80081480d8>] kdb_stub+0x290/0x4e0
[<ffffff800813dbd8>] kgdb_cpu_enter+0x378/0x680
[<ffffff800813e188>] kgdb_handle_exception+0x110/0x220
[<ffffff8008095240>] kgdb_compiled_brk_fn+0x38/0x48
[<ffffff8008084210>] brk_handler+0x80/0xd8

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/tty/serial/xilinx_uartps.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/drivers/tty/serial/xilinx_uartps.c b/drivers/tty/serial/xilinx_uartps.c
index b2cb93b..ed4146a 100644
--- a/drivers/tty/serial/xilinx_uartps.c
+++ b/drivers/tty/serial/xilinx_uartps.c
@@ -31,6 +31,7 @@
 #include <linux/of.h>
 #include <linux/module.h>
 #include <linux/pm_runtime.h>
+#include <linux/kdb.h>
 
 #define CDNS_UART_TTY_NAME	"ttyPS"
 #define CDNS_UART_NAME		"xuartps"
@@ -1205,7 +1206,7 @@ static void cdns_uart_console_write(struct console *co, const char *s,
 
 	if (port->sysrq)
 		locked = 0;
-	else if (oops_in_progress)
+	else if (oops_in_progress || in_kdb_printk())
 		locked = spin_trylock_irqsave(&port->lock, flags);
 	else
 		spin_lock_irqsave(&port->lock, flags);
-- 
1.7.5.4

