From a9e3b9b7fe715079dd7951c22c9fda4a8ba6b1d4 Mon Sep 17 00:00:00 2001
From: Ravi Shankar Jonnalagadda <venkata.ravi.jonnalagadda@xilinx.com>
Date: Tue, 8 Aug 2017 15:28:03 +0530
Subject: [PATCH 312/532] PCI: ZYNQMP EP driver: Minor code improvements

commit 9ff333defb9754daad6095ac27b04d2c32037e44 from
https://github.com/Xilinx/linux-xlnx.git

Completed bytes and result variables can be declared only once
as the values are assigned and cannot contain old values

Signed-off-by: Ravi Shankar Jonnalagadda <vjonnal@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/dma/xilinx/xilinx_ps_pcie_platform.c | 12 ++++--------
 1 file changed, 4 insertions(+), 8 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_ps_pcie_platform.c b/drivers/dma/xilinx/xilinx_ps_pcie_platform.c
index b86d626..c857102 100644
--- a/drivers/dma/xilinx/xilinx_ps_pcie_platform.c
+++ b/drivers/dma/xilinx/xilinx_ps_pcie_platform.c
@@ -1166,13 +1166,13 @@ static void dst_cleanup_work(struct work_struct *work)
 	struct STATUS_DMA_DESCRIPTOR *psta_bd;
 	struct DEST_DMA_DESCRIPTOR *pdst_bd;
 	struct PACKET_TRANSFER_PARAMS *ppkt_ctx;
+	struct dmaengine_result rslt;
+	u32 completed_bytes;
 	u32 dstq_desc_idx;
 
 	psta_bd = chan->pdst_sta_bd + chan->dst_staprobe_idx;
 
 	while (psta_bd->status_flag_byte_count & STA_BD_COMPLETED_BIT) {
-		u32 completed_bytes = 0;
-
 		if (psta_bd->status_flag_byte_count &
 				STA_BD_DESTINATION_ERROR_BIT) {
 			dev_err(chan->dev,
@@ -1255,8 +1255,6 @@ static void dst_cleanup_work(struct work_struct *work)
 
 		/* Invoking callback */
 		if (ppkt_ctx->seg) {
-			struct dmaengine_result rslt;
-
 			spin_lock(&chan->cookie_lock);
 			dma_cookie_complete(&ppkt_ctx->seg->async_tx);
 			spin_unlock(&chan->cookie_lock);
@@ -1290,13 +1288,13 @@ static void src_cleanup_work(struct work_struct *work)
 	struct STATUS_DMA_DESCRIPTOR *psta_bd;
 	struct SOURCE_DMA_DESCRIPTOR *psrc_bd;
 	struct PACKET_TRANSFER_PARAMS *ppkt_ctx;
+	struct dmaengine_result rslt;
+	u32 completed_bytes;
 	u32 srcq_desc_idx;
 
 	psta_bd = chan->psrc_sta_bd + chan->src_staprobe_idx;
 
 	while (psta_bd->status_flag_byte_count & STA_BD_COMPLETED_BIT) {
-		u32 completed_bytes = 0;
-
 		if (psta_bd->status_flag_byte_count &
 				STA_BD_DESTINATION_ERROR_BIT) {
 			dev_err(chan->dev,
@@ -1376,8 +1374,6 @@ static void src_cleanup_work(struct work_struct *work)
 
 		/* Invoking callback */
 		if (ppkt_ctx->seg) {
-			struct dmaengine_result rslt;
-
 			spin_lock(&chan->cookie_lock);
 			dma_cookie_complete(&ppkt_ctx->seg->async_tx);
 			spin_unlock(&chan->cookie_lock);
-- 
2.7.4

