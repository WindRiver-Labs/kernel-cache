From 3b01f6c3c2b39e49aa68c9be2ebf1f3849b79bb2 Mon Sep 17 00:00:00 2001
From: Rohit Athavale <rathaval@xilinx.com>
Date: Fri, 28 Jul 2017 13:50:23 -0700
Subject: [PATCH 399/532] misc: xilinx-sdfec: make irq support an optional DT
 parameter

commit f193a3703129104ad37f1efcb65b3a590b928a94 from
https://github.com/Xilinx/linux-xlnx.git

This commit adds support to make Interrupt line information
an optional parameter to support designs that do not use interrupts.

Signed-off-by: Rohit Athavale <rathaval@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/misc/xilinx_sdfec.c | 27 +++++++++++++++------------
 1 file changed, 15 insertions(+), 12 deletions(-)

diff --git a/drivers/misc/xilinx_sdfec.c b/drivers/misc/xilinx_sdfec.c
index 726554f..92438e7 100644
--- a/drivers/misc/xilinx_sdfec.c
+++ b/drivers/misc/xilinx_sdfec.c
@@ -1014,6 +1014,7 @@ xsdfec_probe(struct platform_device *pdev)
 	struct device *dev_create;
 	struct resource *res;
 	int err;
+	bool irq_enabled = true;
 
 	xsdfec = devm_kzalloc(&pdev->dev, sizeof(*xsdfec), GFP_KERNEL);
 	if (!xsdfec)
@@ -1040,9 +1041,8 @@ xsdfec_probe(struct platform_device *pdev)
 
 	xsdfec->irq = platform_get_irq(pdev, 0);
 	if (xsdfec->irq < 0) {
-		dev_err(dev, "platform_get_irq failed");
-		err = xsdfec->irq;
-		goto err_xsdfec_dev;
+		dev_dbg(dev, "platform_get_irq failed");
+		irq_enabled = false;
 	}
 
 	err = xsdfec_parse_of(xsdfec);
@@ -1052,15 +1052,18 @@ xsdfec_probe(struct platform_device *pdev)
 	/* Save driver private data */
 	platform_set_drvdata(pdev, xsdfec);
 
-	init_waitqueue_head(&xsdfec->waitq);
-
-	/* Register IRQ thread */
-	err = devm_request_threaded_irq(dev, xsdfec->irq, NULL,
-					xsdfec_irq_thread, IRQF_ONESHOT,
-					"xilinx-sdfec16", xsdfec);
-	if (err < 0) {
-		dev_err(dev, "unable to request IRQ%d", xsdfec->irq);
-		goto err_xsdfec_dev;
+	if (irq_enabled) {
+		init_waitqueue_head(&xsdfec->waitq);
+		/* Register IRQ thread */
+		err = devm_request_threaded_irq(dev, xsdfec->irq, NULL,
+						xsdfec_irq_thread,
+						IRQF_ONESHOT,
+						"xilinx-sdfec16",
+						xsdfec);
+		if (err < 0) {
+			dev_err(dev, "unable to request IRQ%d", xsdfec->irq);
+			goto err_xsdfec_dev;
+		}
 	}
 
 	cdev_init(&xsdfec->xsdfec_cdev, &xsdfec_fops);
-- 
2.7.4

