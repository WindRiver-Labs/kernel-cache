From 38ad5087d4a72d3a8c07869eee624260a70e755a Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Thu, 1 Jun 2017 16:42:25 -0700
Subject: [PATCH 134/532] drm: xilinx: plane: Always initiate the DMA on
 DPMS_ON

commit 68fd425f74b2578e4dbe74d235279661600cb43d from
https://github.com/Xilinx/linux-xlnx.git

This patch will always create a DMA descriptor based on
last configuration, and initiate the DMA engine for DPMS_ON.
When the framebuffer is not changed, the core simply turns
on the pipeline without any mode change operation, and the driver
will pick up and restore the previous framebuffer with this change.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_plane.c | 86 +++++++++++--------------------
 1 file changed, 31 insertions(+), 55 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_plane.c b/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
index 5b76867..8338cfe 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
@@ -39,6 +39,35 @@
 #include "xilinx_osd.h"
 #include "xilinx_rgb2yuv.h"
 
+void xilinx_drm_plane_commit(struct drm_plane *base_plane)
+{
+	struct xilinx_drm_plane *plane = to_xilinx_plane(base_plane);
+	struct dma_async_tx_descriptor *desc;
+	enum dma_ctrl_flags flags;
+	unsigned int i;
+
+	DRM_DEBUG_KMS("plane->id: %d\n", plane->id);
+
+	for (i = 0; i < MAX_NUM_SUB_PLANES; i++) {
+		struct xilinx_drm_plane_dma *dma = &plane->dma[i];
+
+		if (dma->chan && dma->is_active) {
+			flags = DMA_CTRL_ACK | DMA_PREP_INTERRUPT;
+			desc = dmaengine_prep_interleaved_dma(dma->chan,
+							      &dma->xt,
+							      flags);
+			if (!desc) {
+				DRM_ERROR("failed to prepare DMA descriptor\n");
+				return;
+			}
+
+			dmaengine_submit(desc);
+
+			dma_async_issue_pending(dma->chan);
+		}
+	}
+}
+
 /* set plane dpms */
 void xilinx_drm_plane_dpms(struct drm_plane *base_plane, int dpms)
 {
@@ -66,11 +95,6 @@ void xilinx_drm_plane_dpms(struct drm_plane *base_plane, int dpms)
 						       plane->dp_layer);
 		}
 
-		/* start dma engine */
-		for (i = 0; i < MAX_NUM_SUB_PLANES; i++)
-			if (plane->dma[i].chan && plane->dma[i].is_active)
-				dma_async_issue_pending(plane->dma[i].chan);
-
 		if (plane->rgb2yuv)
 			xilinx_rgb2yuv_enable(plane->rgb2yuv);
 
@@ -91,9 +115,8 @@ void xilinx_drm_plane_dpms(struct drm_plane *base_plane, int dpms)
 
 			xilinx_osd_enable_rue(manager->osd);
 		}
-		if (manager->mixer)
-			xilinx_drm_mixer_plane_dpms(plane, dpms);
 
+		xilinx_drm_plane_commit(base_plane);
 		break;
 	default:
 		/* disable/reset osd */
@@ -121,10 +144,8 @@ void xilinx_drm_plane_dpms(struct drm_plane *base_plane, int dpms)
 
 		/* stop dma engine and release descriptors */
 		for (i = 0; i < MAX_NUM_SUB_PLANES; i++) {
-			if (plane->dma[i].chan && plane->dma[i].is_active) {
+			if (plane->dma[i].chan && plane->dma[i].is_active)
 				dmaengine_terminate_all(plane->dma[i].chan);
-				plane->dma[i].is_active = false;
-			}
 		}
 
 		if (manager->dp_sub)
@@ -135,48 +156,6 @@ void xilinx_drm_plane_dpms(struct drm_plane *base_plane, int dpms)
 	}
 }
 
-/* apply mode to plane pipe */
-void xilinx_drm_plane_commit(struct drm_plane *base_plane)
-{
-	struct xilinx_drm_plane *plane = to_xilinx_plane(base_plane);
-	struct dma_async_tx_descriptor *desc;
-	enum dma_ctrl_flags flags;
-	unsigned int i;
-
-#ifdef CONFIG_XILINX_FRMBUF
-	/* for xilinx video framebuffer dma, if used */
-	struct xilinx_xdma_config dma_config;
-
-	dma_config.fourcc = plane->format;
-	dma_config.type = XDMA_DRM;
-#endif
-
-	DRM_DEBUG_KMS("plane->id: %d\n", plane->id);
-
-	for (i = 0; i < MAX_NUM_SUB_PLANES; i++) {
-		struct xilinx_drm_plane_dma *dma = &plane->dma[i];
-
-		if (dma->chan && dma->is_active) {
-#ifdef CONFIG_XILINX_FRMBUF
-			/* set first channel private data */
-			dma->chan->private = &dma_config;
-#endif
-			flags = DMA_CTRL_ACK | DMA_PREP_INTERRUPT;
-			desc = dmaengine_prep_interleaved_dma(dma->chan,
-							      &dma->xt,
-							      flags);
-			if (!desc) {
-				DRM_ERROR("failed to prepare DMA descriptor\n");
-				return;
-			}
-
-			dmaengine_submit(desc);
-
-			dma_async_issue_pending(dma->chan);
-		}
-	}
-}
-
 /* mode set a plane */
 int xilinx_drm_plane_mode_set(struct drm_plane *base_plane,
 			      struct drm_framebuffer *fb,
@@ -295,9 +274,6 @@ static int xilinx_drm_plane_update(struct drm_plane *base_plane,
 		return ret;
 	}
 
-	/* apply the new fb addr */
-	xilinx_drm_plane_commit(base_plane);
-
 	/* make sure a plane is on */
 	xilinx_drm_plane_dpms(base_plane, DRM_MODE_DPMS_ON);
 
-- 
2.7.4

