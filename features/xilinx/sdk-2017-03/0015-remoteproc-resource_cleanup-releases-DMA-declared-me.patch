From 9c6cee126968129af221e8fcc821186485a43aeb Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Fri, 7 Apr 2017 14:58:36 -0700
Subject: [PATCH 015/532] remoteproc: resource_cleanup releases DMA declared
 mem

commit cbcd842816154b66adf853e5aead68c5e23267f2 from
https://github.com/Xilinx/linux-xlnx.git

Release DMA declared memory in rproc_resource_cleanup().
rproc_resource_cleanup() is used to cleanup allocated rproc
resource. It will be called in firmware booting error
handling. Moving release DMA declared memory there is to
make sure the DMA declared memory will be released when
it fails to boot the remote.

Signed-off-by: Wendy Liang <jliang@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/remoteproc/remoteproc_core.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/drivers/remoteproc/remoteproc_core.c b/drivers/remoteproc/remoteproc_core.c
index 1b0bf28..12e2795 100644
--- a/drivers/remoteproc/remoteproc_core.c
+++ b/drivers/remoteproc/remoteproc_core.c
@@ -869,6 +869,9 @@ static void rproc_resource_cleanup(struct rproc *rproc)
 	/* clean up remote vdev entries */
 	list_for_each_entry_safe(rvdev, rvtmp, &rproc->rvdevs, node)
 		rproc_remove_virtio_dev(rvdev);
+
+	/* Release DMA declared memory */
+	dma_release_declared_memory(dev->parent);
 }
 
 /*
@@ -1039,14 +1042,14 @@ static int rproc_fw_boot(struct rproc *rproc, const struct firmware *fw)
 	if (ret) {
 		dev_err(dev, "Failed to declare rproc memory resource: %d\n",
 			ret);
-		goto clean_up;
+		goto clean_up_resources;
 	}
 
 	/* look for virtio devices and register them */
 	ret = rproc_handle_resources(rproc, tablesz, rproc_vdev_handler);
 	if (ret) {
 		dev_err(dev, "Failed to handle vdev resources: %d\n", ret);
-		goto clean_up;
+		goto clean_up_resources;
 	}
 
 	/* handle fw resources which are required to boot rproc */
@@ -1372,8 +1375,6 @@ void rproc_shutdown(struct rproc *rproc)
 
 	dev_info(dev, "stopped remote processor %s\n", rproc->name);
 
-	dma_release_declared_memory(dev->parent);
-
 out:
 	mutex_unlock(&rproc->lock);
 }
-- 
2.7.4

