From 22606053ab169a7c9d6308d433084592e39407ba Mon Sep 17 00:00:00 2001
From: Kedareswara rao Appana <appana.durga.rao@xilinx.com>
Date: Thu, 23 Mar 2017 19:44:19 +0530
Subject: [PATCH 044/532] net: axienet: Fix coding style violations

commit 639cb1ddd636853c8ce850b08237f58e7be4d7f9 from
https://github.com/Xilinx/linux-xlnx.git

This patch fixes the checpatch pl warnings in the
driver.

Signed-off-by: Kedareswara rao Appana <appanad@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_axienet_main.c | 17 ++++++++++-------
 drivers/net/ethernet/xilinx/xilinx_axienet_mdio.c |  4 ++--
 2 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
index e9dcc99..65cf9c0 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
@@ -735,8 +735,8 @@ static void axienet_adjust_link(struct net_device *ndev)
 				emmc_reg |= XAE_EMMC_LINKSPD_10;
 				break;
 			default:
-				dev_err(&ndev->dev, "Speed other than 10, 100 "
-					"or 1Gbps is not supported\n");
+				dev_err(&ndev->dev, "Speed other than 10, 100 ");
+				dev_err(&ndev->dev, "or 1Gbps is not supported\n");
 				break;
 			}
 
@@ -1123,10 +1123,12 @@ static int axienet_start_xmit(struct sk_buff *skb, struct net_device *ndev)
 				if (lp->tstamp_config.tx_type ==
 					HWTSTAMP_TX_ONESTEP_SYNC) {
 					axienet_create_tsheader(tmp,
-								TX_TS_OP_ONESTEP, q);
+								TX_TS_OP_ONESTEP
+								, q);
 				} else {
 					axienet_create_tsheader(tmp,
-								TX_TS_OP_TWOSTEP, q);
+								TX_TS_OP_TWOSTEP
+								, q);
 					skb_shinfo(skb)->tx_flags
 							|= SKBTX_IN_PROGRESS;
 					cur_p->ptp_tx_skb =
@@ -1344,7 +1346,7 @@ static int axienet_recv(struct net_device *ndev, int budget,
 					     DMA_FROM_DEVICE);
 		cur_p->cntrl = lp->max_frm_size;
 		cur_p->status = 0;
-		cur_p->sw_id_offset = (phys_addr_t) new_skb;
+		cur_p->sw_id_offset = (phys_addr_t)new_skb;
 
 		++q->rx_bd_ci;
 		q->rx_bd_ci %= RX_BD_NUM;
@@ -1638,7 +1640,8 @@ static int axienet_open(struct net_device *ndev)
 	if (lp->phy_node && ((lp->axienet_config->mactype == XAXIENET_1G) ||
 			     (lp->axienet_config->mactype == XAXIENET_2_5G))) {
 		lp->phy_dev = of_phy_connect(lp->ndev, lp->phy_node,
-					     axienet_adjust_link, lp->phy_flags,
+					     axienet_adjust_link,
+					     lp->phy_flags,
 					     lp->phy_interface);
 
 		if (!lp->phy_dev)
@@ -2330,7 +2333,7 @@ static void axienet_dma_err_handler(unsigned long data)
 					  XAXIDMA_BD_CTRL_LENGTH_MASK),
 					 DMA_TO_DEVICE);
 		if (cur_p->tx_skb)
-			dev_kfree_skb_irq((struct sk_buff *) cur_p->tx_skb);
+			dev_kfree_skb_irq((struct sk_buff *)cur_p->tx_skb);
 		cur_p->phys = 0;
 		cur_p->cntrl = 0;
 		cur_p->status = 0;
diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_mdio.c b/drivers/net/ethernet/xilinx/xilinx_axienet_mdio.c
index 63307ea..28abddd 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_mdio.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_mdio.c
@@ -99,7 +99,7 @@ static int axienet_mdio_write(struct mii_bus *bus, int phy_id, int reg,
 	if (ret < 0)
 		return ret;
 
-	axienet_iow(lp, XAE_MDIO_MWD_OFFSET, (u32) val);
+	axienet_iow(lp, XAE_MDIO_MWD_OFFSET, (u32)val);
 	axienet_iow(lp, XAE_MDIO_MCR_OFFSET,
 		    (((phy_id << XAE_MDIO_MCR_PHYAD_SHIFT) &
 		      XAE_MDIO_MCR_PHYAD_MASK) |
@@ -205,7 +205,7 @@ issue:
 	np1 = of_get_parent(lp->phy_node);
 	of_address_to_resource(np1, 0, &res);
 	snprintf(bus->id, MII_BUS_ID_SIZE, "%.8llx",
-		 (unsigned long long) res.start);
+		 (unsigned long long)res.start);
 
 	bus->priv = lp;
 	bus->name = "Xilinx Axi Ethernet MDIO";
-- 
2.7.4

