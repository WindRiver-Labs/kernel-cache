From 3e77d131fc57b18fc08231f55e5c1b7418d83427 Mon Sep 17 00:00:00 2001
From: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Date: Sat, 25 Mar 2017 11:51:01 +0530
Subject: [PATCH 048/532] misc: jesd: Fix jesd driver warnings

commit fcb4ca3cb22d3a7a2586cc21a433751a85e8b6e9 from
https://github.com/Xilinx/linux-xlnx.git

This patch fixes below warnings
WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
WARNING: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.txt
Moves to octal permissions.

Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/misc/jesd204b/xilinx_jesd204b.c | 31 ++++++++++++++-----------------
 1 file changed, 14 insertions(+), 17 deletions(-)

diff --git a/drivers/misc/jesd204b/xilinx_jesd204b.c b/drivers/misc/jesd204b/xilinx_jesd204b.c
index 1d5fde8..304557c 100644
--- a/drivers/misc/jesd204b/xilinx_jesd204b.c
+++ b/drivers/misc/jesd204b/xilinx_jesd204b.c
@@ -24,7 +24,6 @@
 
 #include "xilinx_jesd204b.h"
 
-
 struct child_clk {
 	struct clk_hw		hw;
 	struct jesd204b_state	*st;
@@ -35,24 +34,24 @@ struct child_clk {
 #define to_clk_priv(_hw) container_of(_hw, struct child_clk, hw)
 
 static inline void jesd204b_write(struct jesd204b_state *st,
-				  unsigned reg, unsigned val)
+				  unsigned int reg, unsigned int val)
 {
 	iowrite32(val, st->regs + reg);
 }
 
 static inline unsigned int jesd204b_read(struct jesd204b_state *st,
-					 unsigned reg)
+					 unsigned int reg)
 {
 	return ioread32(st->regs + reg);
 }
 
 static ssize_t jesd204b_laneinfo_read(struct device *dev,
 				      struct device_attribute *attr,
-				      char *buf, unsigned lane)
+				      char *buf, unsigned int lane)
 {
 	struct jesd204b_state *st = dev_get_drvdata(dev);
 	int ret;
-	unsigned val1, val2, val3;
+	unsigned int val1, val2, val3;
 
 	val1 = jesd204b_read(st, XLNX_JESD204_REG_ID_L(lane));
 	val2 = jesd204b_read(st, XLNX_JESD204_REG_LANE_F(lane));
@@ -118,7 +117,7 @@ static ssize_t jesd204b_lane##_x##_info_read(struct device *dev,	    \
 {									    \
 	return jesd204b_laneinfo_read(dev, attr, buf, _x);		    \
 }									    \
-static DEVICE_ATTR(lane##_x##_info, S_IRUSR, jesd204b_lane##_x##_info_read, \
+static DEVICE_ATTR(lane##_x##_info, 0400, jesd204b_lane##_x##_info_read, \
 		   NULL)
 
 JESD_LANE(0);
@@ -132,10 +131,10 @@ JESD_LANE(7);
 
 static ssize_t jesd204b_lane_syscstat_read(struct device *dev,
 			struct device_attribute *attr,
-			char *buf, unsigned lane)
+			char *buf, unsigned int lane)
 {
+	unsigned int stat;
 	struct jesd204b_state *st = dev_get_drvdata(dev);
-	unsigned stat;
 
 	stat = jesd204b_read(st, XLNX_JESD204_REG_SYNC_ERR_STAT);
 
@@ -153,7 +152,7 @@ static ssize_t jesd204b_lane##_x##_syncstat_read(struct device *dev,	       \
 {									       \
 	return jesd204b_lane_syscstat_read(dev, attr, buf, _x);		       \
 }									       \
-static DEVICE_ATTR(lane##_x##_syncstat, S_IRUSR,			       \
+static DEVICE_ATTR(lane##_x##_syncstat, 0400,			       \
 		   jesd204b_lane##_x##_syncstat_read, NULL)
 
 JESD_SYNCSTAT_LANE(0);
@@ -170,7 +169,7 @@ static ssize_t jesd204b_reg_write(struct device *dev,
 				  const char *buf, size_t count)
 {
 	struct jesd204b_state *st = dev_get_drvdata(dev);
-	unsigned val;
+	unsigned int val;
 	int ret;
 
 	ret = sscanf(buf, "%i %i", &st->addr, &val);
@@ -189,7 +188,7 @@ static ssize_t jesd204b_reg_read(struct device *dev,
 	return sprintf(buf, "0x%X\n", jesd204b_read(st, st->addr));
 }
 
-static DEVICE_ATTR(reg_access, S_IWUSR | S_IRUSR, jesd204b_reg_read,
+static DEVICE_ATTR(reg_access, 0600, jesd204b_reg_read,
 		   jesd204b_reg_write);
 
 static ssize_t jesd204b_syncreg_read(struct device *dev,
@@ -202,9 +201,9 @@ static ssize_t jesd204b_syncreg_read(struct device *dev,
 					XLNX_JESD204_REG_SYNC_STATUS));
 }
 
-static DEVICE_ATTR(sync_status, S_IRUSR, jesd204b_syncreg_read, NULL);
+static DEVICE_ATTR(sync_status, 0400, jesd204b_syncreg_read, NULL);
 
-static unsigned long jesd204b_clk_recalc_rate(struct clk_hw *hw,
+static unsigned int long jesd204b_clk_recalc_rate(struct clk_hw *hw,
 					      unsigned long parent_rate)
 {
 	return parent_rate;
@@ -250,7 +249,7 @@ static int jesd204b_probe(struct platform_device *pdev)
 	struct clk *clk;
 	struct child_clk *clk_priv;
 	struct clk_init_data init;
-	unsigned val;
+	unsigned int val;
 	int ret;
 
 	clk = devm_clk_get(&pdev->dev, NULL);
@@ -276,7 +275,6 @@ static int jesd204b_probe(struct platform_device *pdev)
 	clk_set_rate(st->clk, 156250000);
 	st->rate = clk_get_rate(clk);
 
-
 	of_property_read_u32(pdev->dev.of_node, "xlnx,node-is-transmit",
 			     &st->transmit);
 
@@ -287,7 +285,7 @@ static int jesd204b_probe(struct platform_device *pdev)
 
 	jesd204b_write(st, XLNX_JESD204_REG_RESET, XLNX_JESD204_RESET);
 	while (!jesd204b_read(st, XLNX_JESD204_REG_RESET))
-		msleep(1);
+		msleep(20);
 
 	jesd204b_write(st, XLNX_JESD204_REG_ILA_CTRL,
 		       (of_property_read_bool(pdev->dev.of_node,
@@ -302,7 +300,6 @@ static int jesd204b_probe(struct platform_device *pdev)
 			"xlnx,sysref-always-enable") ?
 			XLNX_JESD204_ALWAYS_SYSREF_EN : 0));
 
-
 	device_create_file(&pdev->dev, &dev_attr_reg_access);
 
 	device_create_file(&pdev->dev, &dev_attr_sync_status);
-- 
2.7.4

