From b40c61c637875602e036dfa8be1dcd41fa85c469 Mon Sep 17 00:00:00 2001
From: Tejas Upadhyay <tejas.upadhyay@xilinx.com>
Date: Thu, 27 Jul 2017 00:29:55 -0700
Subject: [PATCH 231/532] gpu: xilinx: dpdma: dpsub removed warning

commit 647348619d212ee3574b903d96a9b4ffe773aa5d from
https://github.com/Xilinx/linux-xlnx.git

min() function requires same type of variables in argument,
due to different type of argument on different architecure
(32bit/64bit), warning was thrown. Addressed warning by this
patch.

Signed-off-by: Tejas Upadhyay <tejasu@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/dma/xilinx/xilinx_dpdma.c          |  9 +++++----
 drivers/gpu/drm/xilinx/xilinx_drm_dp.c     | 14 +++++++++-----
 drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c | 12 +++++++-----
 3 files changed, 21 insertions(+), 14 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_dpdma.c b/drivers/dma/xilinx/xilinx_dpdma.c
index 7ee8c69..8c28e51 100644
--- a/drivers/dma/xilinx/xilinx_dpdma.c
+++ b/drivers/dma/xilinx/xilinx_dpdma.c
@@ -338,7 +338,7 @@ struct xilinx_dpdma_device {
 };
 
 #ifdef CONFIG_XILINX_DPDMA_DEBUG_FS
-#define XILINX_DPDMA_DEBUGFS_READ_MAX_SIZE	32UL
+#define XILINX_DPDMA_DEBUGFS_READ_MAX_SIZE	32
 #define XILINX_DPDMA_DEBUGFS_UINT16_MAX_STR	"65535"
 #define IN_RANGE(x, min, max) ((x) >= (min) && (x) <= (max))
 
@@ -412,7 +412,8 @@ static ssize_t xilinx_dpdma_debugfs_desc_done_intr_read(char **kern_buff)
 	dpdma_debugfs.testcase = DPDMA_TC_NONE;
 
 	out_str_len = strlen(XILINX_DPDMA_DEBUGFS_UINT16_MAX_STR);
-	out_str_len = min(XILINX_DPDMA_DEBUGFS_READ_MAX_SIZE, out_str_len);
+	out_str_len = min_t(size_t, XILINX_DPDMA_DEBUGFS_READ_MAX_SIZE,
+			    out_str_len);
 	snprintf(*kern_buff, out_str_len, "%d",
 		 dpdma_debugfs.xilinx_dpdma_intr_done_count);
 
@@ -488,8 +489,8 @@ static ssize_t xilinx_dpdma_debugfs_read(struct file *f, char __user *buf,
 
 	if (dpdma_debugfs.testcase == DPDMA_TC_NONE) {
 		out_str_len = strlen("No testcase executed");
-		out_str_len = min(XILINX_DPDMA_DEBUGFS_READ_MAX_SIZE,
-				  out_str_len);
+		out_str_len = min_t(size_t, XILINX_DPDMA_DEBUGFS_READ_MAX_SIZE,
+				    out_str_len);
 		snprintf(kern_buff, out_str_len, "%s", "No testcase executed");
 	} else {
 		ret = dpdma_debugfs_reqs[dpdma_debugfs.testcase].read_handler(
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_dp.c b/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
index 299c4a4..d2e4a90 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
@@ -344,7 +344,7 @@ static inline struct xilinx_drm_dp *to_dp(struct drm_encoder *encoder)
 #define AUX_READ_BIT	0x1
 
 #ifdef CONFIG_DRM_XILINX_DP_DEBUG_FS
-#define XILINX_DP_DEBUGFS_READ_MAX_SIZE	32UL
+#define XILINX_DP_DEBUGFS_READ_MAX_SIZE	32
 #define XILINX_DP_DEBUGFS_UINT8_MAX_STR	"255"
 #define IN_RANGE(x, min, max) ((x) >= (min) && (x) <= (max))
 
@@ -526,7 +526,8 @@ static ssize_t xilinx_dp_debugfs_max_linkrate_read(char **kern_buff)
 	}
 
 	output_str_len = strlen(XILINX_DP_DEBUGFS_UINT8_MAX_STR);
-	output_str_len = min(XILINX_DP_DEBUGFS_READ_MAX_SIZE, output_str_len);
+	output_str_len = min_t(size_t, XILINX_DP_DEBUGFS_READ_MAX_SIZE,
+			       output_str_len);
 	snprintf(*kern_buff, output_str_len, "%u", dpcd_link_bw);
 
 	return 0;
@@ -552,7 +553,8 @@ static ssize_t xilinx_dp_debugfs_max_lanecnt_read(char **kern_buff)
 
 	dpcd_lane_cnt &= DP_LANE_COUNT_MASK;
 	output_str_len = strlen(XILINX_DP_DEBUGFS_UINT8_MAX_STR);
-	output_str_len = min(XILINX_DP_DEBUGFS_READ_MAX_SIZE, output_str_len);
+	output_str_len = min_t(size_t, XILINX_DP_DEBUGFS_READ_MAX_SIZE,
+			       output_str_len);
 	snprintf(*kern_buff, output_str_len, "%u", dpcd_lane_cnt);
 
 	return 0;
@@ -587,7 +589,8 @@ xilinx_dp_debugfs_output_display_format_read(char **kern_buff)
 		return ret;
 
 	output_str_len = strlen("Success");
-	output_str_len = min(XILINX_DP_DEBUGFS_READ_MAX_SIZE, output_str_len);
+	output_str_len = min_t(size_t, XILINX_DP_DEBUGFS_READ_MAX_SIZE,
+			       output_str_len);
 	snprintf(*kern_buff, output_str_len, "%s", "Success");
 
 	return 0;
@@ -627,7 +630,8 @@ static ssize_t xilinx_dp_debugfs_read(struct file *f, char __user *buf,
 
 	if (dp_debugfs.testcase == DP_TC_NONE) {
 		out_str_len = strlen("No testcase executed");
-		out_str_len = min(XILINX_DP_DEBUGFS_READ_MAX_SIZE, out_str_len);
+		out_str_len = min_t(size_t, XILINX_DP_DEBUGFS_READ_MAX_SIZE,
+				    out_str_len);
 		snprintf(kern_buff, out_str_len, "%s", "No testcase executed");
 	} else {
 		ret = dp_debugfs_reqs[dp_debugfs.testcase].read_handler(
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c b/drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c
index ac2a363..3af561e 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c
@@ -356,7 +356,7 @@ static LIST_HEAD(xilinx_drm_dp_sub_list);
 static DEFINE_MUTEX(xilinx_drm_dp_sub_lock);
 
 #ifdef CONFIG_DRM_XILINX_DP_SUB_DEBUG_FS
-#define XILINX_DP_SUB_DEBUGFS_READ_MAX_SIZE	32UL
+#define XILINX_DP_SUB_DEBUGFS_READ_MAX_SIZE	32
 #define XILINX_DP_SUB_DEBUGFS_MAX_BG_COLOR_VAL	0xFFF
 #define IN_RANGE(x, min, max) ((x) >= (min) && (x) <= (max))
 
@@ -513,7 +513,8 @@ xilinx_dp_sub_debugfs_output_display_format_read(char **kern_buff)
 	xilinx_dp_sub_debugfs_output_format(dp_sub_debugfs.output_fmt);
 
 	out_str_len = strlen("Success");
-	out_str_len = min(XILINX_DP_SUB_DEBUGFS_READ_MAX_SIZE, out_str_len);
+	out_str_len = min_t(size_t, XILINX_DP_SUB_DEBUGFS_READ_MAX_SIZE,
+			    out_str_len);
 	snprintf(*kern_buff, out_str_len, "%s", "Success");
 
 	return 0;
@@ -530,7 +531,8 @@ xilinx_dp_sub_debugfs_background_color_read(char **kern_buff)
 	dp_sub_debugfs.b_value = 0;
 
 	out_str_len = strlen("Success");
-	out_str_len = min(XILINX_DP_SUB_DEBUGFS_READ_MAX_SIZE, out_str_len);
+	out_str_len = min_t(size_t, XILINX_DP_SUB_DEBUGFS_READ_MAX_SIZE,
+			    out_str_len);
 	snprintf(*kern_buff, out_str_len, "%s", "Success");
 
 	return 0;
@@ -605,8 +607,8 @@ static ssize_t xilinx_dp_sub_debugfs_read(struct file *f, char __user *buf,
 
 	if (dp_sub_debugfs.testcase == DP_SUB_TC_NONE) {
 		out_str_len = strlen("No testcase executed");
-		out_str_len = min(XILINX_DP_SUB_DEBUGFS_READ_MAX_SIZE,
-				  out_str_len);
+		out_str_len = min_t(size_t, XILINX_DP_SUB_DEBUGFS_READ_MAX_SIZE,
+				    out_str_len);
 		snprintf(kern_buff, out_str_len, "%s", "No testcase executed");
 	} else {
 		ret = dp_sub_debugfs_reqs[dp_sub_debugfs.testcase].read_handler(
-- 
2.7.4

