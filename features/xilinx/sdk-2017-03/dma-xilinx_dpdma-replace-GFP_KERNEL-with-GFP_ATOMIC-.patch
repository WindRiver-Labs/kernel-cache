From 0a2a9486c0787cbd1aa35a45ee328196f70d5dda Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Fri, 19 Jan 2018 15:18:56 +0800
Subject: [PATCH] dma: xilinx_dpdma: replace GFP_KERNEL with GFP_ATOMIC and
 use simple wait queues

To avoid below call trace:

BUG: sleeping function called from invalid context at mm/slab.h:393
in_atomic(): 1, irqs_disabled(): 128, pid: 608, name: alsa-sink-(null
INFO: lockdep is turned off.
irq event stamp: 48
hardirqs last  enabled at (47): [<ffffff8008873190>] snd_pcm_stream_unlock_irq+0x30/0x40
hardirqs last disabled at (48): [<ffffff800887308c>] snd_pcm_stream_lock_irq+0x2c/0x40
softirqs last  enabled at (0): [<ffffff800809cbc4>] copy_process.isra.8.part.9+0x2dc/0x16c0
softirqs last disabled at (0): [<          (null)>]           (null)
Preemption disabled at:[<ffffff800887301c>] snd_pcm_stream_lock+0x34/0x78

CPU: 3 PID: 608 Comm: alsa-sink-(null Tainted: G        W       4.8.26-WR9.0.0.14_standard #1
Hardware name: ZynqMP ZCU102 Rev1.0 (DT)
Call trace:
[<ffffff800808a358>] dump_backtrace+0x0/0x1d0
[<ffffff800808a54c>] show_stack+0x24/0x30
[<ffffff800851bbd0>] dump_stack+0xb0/0xe8
[<ffffff80080cf8c0>] ___might_sleep+0x220/0x238
[<ffffff80080cf934>] __might_sleep+0x5c/0x98
[<ffffff8008233d80>] kmem_cache_alloc_trace+0x2c8/0x3d8
[<ffffff80085a2b10>] xilinx_dpdma_chan_alloc_tx_desc.isra.3+0x28/0x48
[<ffffff80085a2dcc>] xilinx_dpdma_prep_dma_cyclic+0xcc/0x210
[<ffffff800887e724>] snd_dmaengine_pcm_trigger+0x11c/0x1c0
[<ffffff800888ee7c>] soc_pcm_trigger+0x9c/0x110
[<ffffff8008875144>] snd_pcm_do_start+0x4c/0x58
[<ffffff80088729d4>] snd_pcm_action_single+0x4c/0xa8
[<ffffff8008872b50>] snd_pcm_action+0x120/0x128
[<ffffff8008875a08>] snd_pcm_common_ioctl1+0x278/0xcc8
[<ffffff800887667c>] snd_pcm_playback_ioctl1+0x224/0x3a0
[<ffffff8008876840>] snd_pcm_playback_ioctl+0x48/0x78
[<ffffff8008264fb8>] do_vfs_ioctl+0xb0/0x7c8
[<ffffff8008265764>] SyS_ioctl+0x94/0xa8
[<ffffff8008083730>] el0_svc_naked+0x24/0x28

And:

BUG: sleeping function called from invalid context at drivers/dma/xilinx/xilinx_dpdma.c:1492
in_atomic(): 1, irqs_disabled(): 128, pid: 617, name: alsa-sink-(null
2 locks held by alsa-sink-(null/617:
 #0:  (snd_pcm_link_rwlock){......}, at: [<ffffff800888239c>] snd_pcm_stream_lock+0x34/0x78
 #1:  (&(&substream->self_group.lock)->rlock){......}, at: [<ffffff80088823a4>] snd_pcm_stream_lock+0x3c/0x78
irq event stamp: 1142
hardirqs last  enabled at (1141): [<ffffff8008882510>] snd_pcm_stream_unlock_irq+0x30/0x40
hardirqs last disabled at (1142): [<ffffff800888240c>] snd_pcm_stream_lock_irq+0x2c/0x40
softirqs last  enabled at (1022): [<ffffff8008081d08>] __do_softirq+0x530/0x5fc
softirqs last disabled at (963): [<ffffff80080a6c80>] irq_exit+0xc8/0xf8
Preemption disabled at:[<ffffff800888239c>] snd_pcm_stream_lock+0x34/0x78

CPU: 1 PID: 617 Comm: alsa-sink-(null Not tainted 4.8.26-WR9.0.0.14_standard #5
Hardware name: ZynqMP ZCU102 Rev1.0 (DT)
Call trace:
[<ffffff800808a358>] dump_backtrace+0x0/0x1d0
[<ffffff800808a54c>] show_stack+0x24/0x30
[<ffffff800852af50>] dump_stack+0xb0/0xe8
[<ffffff80080cf8c0>] ___might_sleep+0x220/0x238
[<ffffff80080cf934>] __might_sleep+0x5c/0x98
[<ffffff80085b1090>] xilinx_dpdma_terminate_all+0x80/0x178
[<ffffff800888da14>] snd_dmaengine_pcm_trigger+0x8c/0x1c0
[<ffffff800889e1fc>] soc_pcm_trigger+0x9c/0x110
[<ffffff800888202c>] snd_pcm_do_stop+0x6c/0x70
[<ffffff8008881d54>] snd_pcm_action_single+0x4c/0xa8
[<ffffff8008881ed0>] snd_pcm_action+0x120/0x128
[<ffffff8008882c24>] snd_pcm_drop+0x6c/0xc0
[<ffffff80088854b0>] snd_pcm_common_ioctl1+0x9a0/0xcc8
[<ffffff80088859fc>] snd_pcm_playback_ioctl1+0x224/0x3a0
[<ffffff8008885bc0>] snd_pcm_playback_ioctl+0x48/0x78
[<ffffff8008264fb8>] do_vfs_ioctl+0xb0/0x7c8
[<ffffff8008265764>] SyS_ioctl+0x94/0xa8
[<ffffff8008083730>] el0_svc_naked+0x24/0x28

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/dma/xilinx/xilinx_dpdma.c |   11 ++++++-----
 1 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_dpdma.c b/drivers/dma/xilinx/xilinx_dpdma.c
index 74c705f..73cf0e91 100644
--- a/drivers/dma/xilinx/xilinx_dpdma.c
+++ b/drivers/dma/xilinx/xilinx_dpdma.c
@@ -35,6 +35,7 @@
 #include <linux/types.h>
 #include <linux/uaccess.h>
 #include <linux/wait.h>
+#include <linux/swait.h>
 
 #include "../dmaengine.h"
 
@@ -294,7 +295,7 @@ struct xilinx_dpdma_chan {
 	void __iomem *reg;
 	enum xilinx_dpdma_chan_id id;
 
-	wait_queue_head_t wait_to_stop;
+	struct swait_queue_head wait_to_stop;
 	enum xilinx_dpdma_chan_status status;
 	bool first_frame;
 	bool video_group;
@@ -789,7 +790,7 @@ xilinx_dpdma_chan_alloc_tx_desc(struct xilinx_dpdma_chan *chan)
 {
 	struct xilinx_dpdma_tx_desc *tx_desc;
 
-	tx_desc = kzalloc(sizeof(*tx_desc), GFP_KERNEL);
+	tx_desc = kzalloc(sizeof(*tx_desc), GFP_ATOMIC);
 	if (!tx_desc)
 		return NULL;
 
@@ -1467,7 +1468,7 @@ static int xilinx_dpdma_chan_notify_no_ostand(struct xilinx_dpdma_chan *chan)
 	/* Disable 'no oustanding' interrupt */
 	dpdma_write(chan->xdev->reg, XILINX_DPDMA_IDS,
 		    1 << (XILINX_DPDMA_INTR_NO_OSTAND_SHIFT + chan->id));
-	wake_up(&chan->wait_to_stop);
+	swake_up(&chan->wait_to_stop);
 
 	return 0;
 }
@@ -1487,7 +1488,7 @@ static int xilinx_dpdma_chan_wait_no_ostand(struct xilinx_dpdma_chan *chan)
 	int ret;
 
 	/* Wait for a no outstanding transaction interrupt upto 50msec */
-	ret = wait_event_interruptible_timeout(chan->wait_to_stop,
+	ret = swait_event_interruptible_timeout(chan->wait_to_stop,
 					       !xilinx_dpdma_chan_ostand(chan),
 					       msecs_to_jiffies(50));
 	if (ret > 0) {
@@ -2070,7 +2071,7 @@ xilinx_dpdma_chan_probe(struct device_node *node,
 
 	spin_lock_init(&chan->lock);
 	INIT_LIST_HEAD(&chan->done_list);
-	init_waitqueue_head(&chan->wait_to_stop);
+	init_swait_queue_head(&chan->wait_to_stop);
 
 	tasklet_init(&chan->done_task, xilinx_dpdma_chan_done_task,
 		     (unsigned long)chan);
-- 
1.7.5.4

