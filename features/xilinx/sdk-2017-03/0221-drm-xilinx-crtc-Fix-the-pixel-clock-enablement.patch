From 2f4e5cb31524240d03d2b0f99cad6f42f704372b Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Sun, 23 Jul 2017 20:52:18 -0700
Subject: [PATCH 221/532] drm: xilinx: crtc: Fix the pixel clock enablement

commit 955a80b3e5b2a30e42524b4cd9d2d37014be3830 from
https://github.com/Xilinx/linux-xlnx.git

The pixel clock doesn't have to be enabled in probe. Enable
the clock upon DPMS on request. The clock needs to be enabled
first to make sure that CCF disables the clock as CCF skips
the disable request for already disabled clock.
And the clock enable flag was always set to true upon DPMA on.
Fix it to be set to false when the clk_prepare_enable() fails.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_crtc.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
index bd9fb5d..2dbff87 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
@@ -76,12 +76,11 @@ static void xilinx_drm_crtc_dpms(struct drm_crtc *base_crtc, int dpms)
 	case DRM_MODE_DPMS_ON:
 		if (!crtc->pixel_clock_enabled) {
 			ret = clk_prepare_enable(crtc->pixel_clock);
-			if (ret) {
+			if (ret)
 				DRM_ERROR("failed to enable a pixel clock\n");
-				crtc->pixel_clock_enabled = false;
-			}
+			else
+				crtc->pixel_clock_enabled = true;
 		}
-		crtc->pixel_clock_enabled = true;
 
 		xilinx_drm_plane_manager_dpms(crtc->plane_manager, dpms);
 		xilinx_drm_plane_dpms(base_crtc->primary, dpms);
@@ -582,7 +581,7 @@ struct drm_crtc *xilinx_drm_crtc_create(struct drm_device *drm)
 		crtc->pixel_clock_enabled = false;
 		goto err_plane;
 	}
-	crtc->pixel_clock_enabled = true;
+	clk_disable_unprepare(crtc->pixel_clock);
 
 	sub_node = of_parse_phandle(drm->dev->of_node, "xlnx,vtc", 0);
 	if (sub_node) {
-- 
2.7.4

