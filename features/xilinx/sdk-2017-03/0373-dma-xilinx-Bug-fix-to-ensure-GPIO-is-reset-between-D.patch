From 70d24074f2012b09dc074be898a0c60275e9d387 Mon Sep 17 00:00:00 2001
From: Jeffrey Mouroux <jeff.mouroux@xilinx.com>
Date: Mon, 28 Aug 2017 18:12:45 -0700
Subject: [PATCH 373/532] dma: xilinx: Bug fix to ensure GPIO is reset between
 DMA operations

commit 7858ca56b121174915728a675320ac507782b2e3 from
https://github.com/Xilinx/linux-xlnx.git

Some registers within the Video Framebuffer driver, such as the
video format register, require a reset of the IP before they can
be altered.  Because there is no software accessible reset register,
an external GPIO is used.  This patch fixes a runtime issue wherein
clients wish to reprogram the IP for a new memory between DMA operations.
Without this fix, the Video Framebuffer Write IP may halt when a client
requests a new DMA operation using a different memory format for
writes to host memory.  In some cases, Framebuffer Read operations
will need to be reset when the downstream video pipeline is being
reset.

Signed-off-by: Jeffrey Mouroux <jmouroux@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/dma/xilinx/xilinx_frmbuf.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_frmbuf.c b/drivers/dma/xilinx/xilinx_frmbuf.c
index 83ffd3a..d3219c2 100644
--- a/drivers/dma/xilinx/xilinx_frmbuf.c
+++ b/drivers/dma/xilinx/xilinx_frmbuf.c
@@ -633,7 +633,10 @@ static void xilinx_frmbuf_issue_pending(struct dma_chan *dchan)
  */
 static void xilinx_frmbuf_reset(struct xilinx_frmbuf_chan *chan)
 {
-	frmbuf_clr(chan, XILINX_FRMBUF_CTRL_OFFSET, ~0x0);
+	/* reset ip */
+	gpiod_set_value(chan->xdev->rst_gpio, 1);
+	udelay(1);
+	gpiod_set_value(chan->xdev->rst_gpio, 0);
 }
 
 /**
@@ -643,9 +646,8 @@ static void xilinx_frmbuf_reset(struct xilinx_frmbuf_chan *chan)
 static void xilinx_frmbuf_chan_reset(struct xilinx_frmbuf_chan *chan)
 {
 	xilinx_frmbuf_reset(chan);
-
-	frmbuf_set(chan, XILINX_FRMBUF_IE_OFFSET,
-		   XILINX_FRMBUF_ISR_ALL_IRQ_MASK);
+	frmbuf_write(chan, XILINX_FRMBUF_IE_OFFSET, XILINX_FRMBUF_IE_AP_READY);
+	frmbuf_write(chan, XILINX_FRMBUF_GIE_OFFSET, XILINX_FRMBUF_GIE_EN);
 }
 
 /**
@@ -798,6 +800,9 @@ static int xilinx_frmbuf_terminate_all(struct dma_chan *dchan)
 	xilinx_frmbuf_halt(chan);
 
 	xilinx_frmbuf_free_descriptors(chan);
+	/* worst case frame-to-frame boundary; ensure frame output complete */
+	msleep(50);
+	xilinx_frmbuf_chan_reset(chan);
 
 	return 0;
 }
-- 
2.7.4

