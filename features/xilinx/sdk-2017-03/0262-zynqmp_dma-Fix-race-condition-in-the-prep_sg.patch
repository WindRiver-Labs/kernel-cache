From 723ee0d1ddc229b57e43d75c1d2f326ac859bc44 Mon Sep 17 00:00:00 2001
From: Kedareswara rao Appana <appana.durga.rao@xilinx.com>
Date: Wed, 2 Aug 2017 14:37:07 +0530
Subject: [PATCH 262/532] zynqmp_dma: Fix race condition in the prep_sg

commit bbd4291ae5ecfbad699c2595f6db71d89536ab23 from
https://github.com/Xilinx/linux-xlnx.git

Currently driver is allocating a descriptor at the
beginning of the prep_sg(), after that checking for length
of the descriptor it may set to NULL.

In this case we should either free the allocated descriptor
or allocate descriptor after checking for the size of the
descriptor, instead of allocating the descriptor at the
beginning of the prep_sg().

This patch fixes this issue.

Signed-off-by: Kedareswara rao Appana <appanad@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/dma/xilinx/zynqmp_dma.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/dma/xilinx/zynqmp_dma.c b/drivers/dma/xilinx/zynqmp_dma.c
index 3e0f07e..f21e4ba 100644
--- a/drivers/dma/xilinx/zynqmp_dma.c
+++ b/drivers/dma/xilinx/zynqmp_dma.c
@@ -887,13 +887,13 @@ static struct dma_async_tx_descriptor *zynqmp_dma_prep_sg(
 
 	/* Run until we are out of scatterlist entries */
 	while (true) {
-		/* Allocate and populate the descriptor */
-		new = zynqmp_dma_get_descriptor(chan);
-		desc = (struct zynqmp_dma_desc_ll *)new->src_v;
 		len = min_t(size_t, src_avail, dst_avail);
 		len = min_t(size_t, len, ZYNQMP_DMA_MAX_TRANS_LEN);
 		if (len == 0)
 			goto fetch;
+		/* Allocate and populate the descriptor */
+		new = zynqmp_dma_get_descriptor(chan);
+		desc = (struct zynqmp_dma_desc_ll *)new->src_v;
 		dma_dst = sg_dma_address(dst_sg) + sg_dma_len(dst_sg) -
 			dst_avail;
 		dma_src = sg_dma_address(src_sg) + sg_dma_len(src_sg) -
-- 
2.7.4

