From 2ce1ae67d9525fc334db3ffba12c7c7353f5615c Mon Sep 17 00:00:00 2001
From: Saurabh Sengar <saurabh.singh@xilinx.com>
Date: Mon, 21 Aug 2017 14:15:35 +0530
Subject: [PATCH 338/532] drm: xilinx: sdi: Adding 2048 support in st352
 payload calculation

commit ae8498d89d7fbcbe18bb2df95e0c97647e13a236 from
https://github.com/Xilinx/linux-xlnx.git

Setting 6th bit of third byte if horizontal display is 2048.
This is as per st352 spec for 2048 horizontal display.

Signed-off-by: Saurabh Sengar <saurabhs@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_sdi.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_sdi.c b/drivers/gpu/drm/xilinx/xilinx_drm_sdi.c
index 3f22706..04e380d 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_sdi.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_sdi.c
@@ -106,6 +106,7 @@
 #define PIXELS_PER_CLK				2
 #define XSDI_CH_SHIFT				29
 #define XST352_PROG_SHIFT			6
+#define XST352_2048_SHIFT			BIT(6)
 #define ST352_BYTE3				0x00
 #define ST352_BYTE4				0x01
 #define INVALID_VALUE				-1
@@ -915,9 +916,12 @@ static u32 xilinx_sdi_calc_st352_payld(struct xilinx_sdi *sdi,
 	u16 is_p, smpl_r;
 	u32 id, sdi_mode = sdi->sdi_mod_prop_val;
 	bool is_frac = sdi->is_frac_prop_val;
+	u32 byt3 = ST352_BYTE3;
 
 	id = xilinx_sdi_get_mode_id(mode);
 	dev_dbg(sdi->dev, "mode id: %d\n", id);
+	if (mode->hdisplay == 2048)
+		byt3 |= XST352_2048_SHIFT;
 	/* byte 2 calculation */
 	is_p = !(mode->flags & DRM_MODE_FLAG_INTERLACE);
 	smpl_r = xlnx_sdi_modes[id].st352_byt2[is_frac];
@@ -925,7 +929,7 @@ static u32 xilinx_sdi_calc_st352_payld(struct xilinx_sdi *sdi,
 	/* byte 1 calculation */
 	byt1 = xlnx_sdi_modes[id].st352_byt1[sdi_mode];
 
-	return (ST352_BYTE4 << 24 | ST352_BYTE3 << 16 | byt2 << 8 | byt1);
+	return (ST352_BYTE4 << 24 | byt3 << 16 | byt2 << 8 | byt1);
 }
 
 /**
-- 
2.7.4

