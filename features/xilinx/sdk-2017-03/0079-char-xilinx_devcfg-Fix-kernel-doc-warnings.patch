From 9760b9df3dfe51cd1fca9750cd05a1b79df812bc Mon Sep 17 00:00:00 2001
From: Nava kishore Manne <nava.manne@xilinx.com>
Date: Mon, 1 May 2017 14:12:24 +0530
Subject: [PATCH 079/532] char: xilinx_devcfg: Fix kernel doc warnings

commit e43ad173c1a7bec9f4dff97e370fad6c74a532fb from
https://github.com/Xilinx/linux-xlnx.git

This patch fixes the kernel doc warnings in the driver.

Signed-off-by: Nava kishore Manne <navam@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/char/xilinx_devcfg.c | 70 ++++++++++++++++++++++++--------------------
 1 file changed, 38 insertions(+), 32 deletions(-)

diff --git a/drivers/char/xilinx_devcfg.c b/drivers/char/xilinx_devcfg.c
index c712c54..512a880 100644
--- a/drivers/char/xilinx_devcfg.c
+++ b/drivers/char/xilinx_devcfg.c
@@ -119,6 +119,10 @@ static const char * const fclk_name[] = {
  * @sem: Instance for the mutex
  * @lock: Instance of spinlock
  * @base_address: The virtual device base address of the device registers
+ * @ep107: Flags is used to identify the platform
+ * @endian_swap: Flags is used to identify the endianness format
+ * @residue_buf: Array holding stragglers from last time (0 to 3 bytes)
+ * @residue_len: stragglers length in bytes
  * @is_partial_bitstream: Status bit to indicate partial/full bitstream
  */
 struct xdevcfg_drvdata {
@@ -147,7 +151,7 @@ struct xdevcfg_drvdata {
 /**
  * struct fclk_data - FPGA clock data
  * @clk: Pointer to clock
- * @enable: Flag indicating enable status of the clock
+ * @enabled: Flag indicating enable status of the clock
  * @rate_rnd: Rate to be rounded for round rate operation
  */
 struct fclk_data {
@@ -161,7 +165,7 @@ struct fclk_data {
 #define xdevcfg_readreg(offset)		__raw_readl(offset)
 
 /**
- * xdevcfg_reset_pl() - Reset the programmable logic.
+ * xdevcfg_reset_pl - Reset the programmable logic.
  * @base_address:	The base address of the device.
  *
  * Must be called with PCAP clock enabled
@@ -197,7 +201,7 @@ static void xdevcfg_reset_pl(void __iomem *base_address)
 }
 
 /**
- * xdevcfg_irq() - The main interrupt handler.
+ * xdevcfg_irq - The main interrupt handler.
  * @irq:	The interrupt number.
  * @data:	Pointer to the driver data structure.
  * returns: IRQ_HANDLED after the interrupt is handled.
@@ -230,7 +234,7 @@ static irqreturn_t xdevcfg_irq(int irq, void *data)
 }
 
 /**
- * xdevcfg_write() - The is the driver write function.
+ * xdevcfg_write - The is the driver write function.
  *
  * @file:	Pointer to the file structure.
  * @buf:	Pointer to the bitstream location.
@@ -385,7 +389,7 @@ err_clk:
 
 
 /**
- * xdevcfg_read() - The is the driver read function.
+ * xdevcfg_read - The is the driver read function.
  * @file:	Pointer to the file structure.
  * @buf:	Pointer to the bitstream location.
  * @count:	The number of bytes read.
@@ -496,7 +500,7 @@ static void xdevcfg_disable_partial(struct xdevcfg_drvdata *drvdata)
 }
 
 /**
- * xdevcfg_open() - The is the driver open function.
+ * xdevcfg_open - The is the driver open function.
  * @inode:	Pointer to the inode structure of this device.
  * @file:	Pointer to the file structure.
  * returns:	Success or error status.
@@ -557,7 +561,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_release() - The is the driver release function.
+ * xdevcfg_release - The is the driver release function.
  * @inode:	Pointer to the inode structure of this device.
  * @file:	Pointer to the file structure.
  * returns:	Success.
@@ -594,7 +598,7 @@ static const struct file_operations xdevcfg_fops = {
  */
 
 /**
- * xdevcfg_set_dap_en() - This function sets the DAP bits in the
+ * xdevcfg_set_dap_en - This function sets the DAP bits in the
  * control register with the given value.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -649,7 +653,7 @@ err_unlock:
 }
 
 /**
- * xdevcfg_show_dap_en_status() - The function returns the DAP_EN bits status in
+ * xdevcfg_show_dap_en_status - The function returns the DAP_EN bits status in
  * the control register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -682,7 +686,7 @@ static DEVICE_ATTR(enable_dap, 0644, xdevcfg_show_dap_en_status,
 				xdevcfg_set_dap_en);
 
 /**
- * xdevcfg_set_dbgen() - This function sets the DBGEN bit in the
+ * xdevcfg_set_dbgen - This function sets the DBGEN bit in the
  * control register with the given value.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -739,7 +743,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_show_dbgen_status() - The function returns the DBGEN bit status in
+ * xdevcfg_show_dbgen_status - The function returns the DBGEN bit status in
  * the control register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -772,7 +776,7 @@ static DEVICE_ATTR(enable_dbg_in, 0644, xdevcfg_show_dbgen_status,
 				xdevcfg_set_dbgen);
 
 /**
- * xdevcfg_set_niden() - This function sets the NIDEN bit in the
+ * xdevcfg_set_niden - This function sets the NIDEN bit in the
  * control register with the given value.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -829,7 +833,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_show_niden_status() - The function returns the NIDEN bit status in
+ * xdevcfg_show_niden_status - The function returns the NIDEN bit status in
  * the control register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -862,7 +866,7 @@ static DEVICE_ATTR(enable_dbg_nonin, 0644, xdevcfg_show_niden_status,
 			xdevcfg_set_niden);
 
 /**
- * xdevcfg_set_spiden() - This function sets the SPIDEN bit in the
+ * xdevcfg_set_spiden - This function sets the SPIDEN bit in the
  * control register with the given value.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -920,7 +924,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_show_spiden_status() - The function returns the SPIDEN bit status in
+ * xdevcfg_show_spiden_status - The function returns the SPIDEN bit status in
  * the control register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -953,7 +957,7 @@ static DEVICE_ATTR(enable_sec_dbg_in, 0644, xdevcfg_show_spiden_status,
 				xdevcfg_set_spiden);
 
 /**
- * xdevcfg_set_spniden() - This function sets the SPNIDEN bit in the
+ * xdevcfg_set_spniden - This function sets the SPNIDEN bit in the
  * control register with the given value.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1009,7 +1013,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_show_spniden_status() - The function returns the SPNIDEN bit status
+ * xdevcfg_show_spniden_status - The function returns the SPNIDEN bit status
  * in the control register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1042,7 +1046,7 @@ static DEVICE_ATTR(enable_sec_dbg_nonin, 0644, xdevcfg_show_spniden_status,
 					xdevcfg_set_spniden);
 
 /**
- * xdevcfg_set_seu() - This function sets the SEU_EN bit in the
+ * xdevcfg_set_seu - This function sets the SEU_EN bit in the
  * control register with the given value
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1099,7 +1103,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_show_seu_status() - The function returns the SEU_EN bit status
+ * xdevcfg_show_seu_status - The function returns the SEU_EN bit status
  * in the control register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1131,7 +1135,7 @@ static ssize_t xdevcfg_show_seu_status(struct device *dev,
 static DEVICE_ATTR(enable_seu, 0644, xdevcfg_show_seu_status, xdevcfg_set_seu);
 
 /**
- * xdevcfg_set_aes() - This function sets the AES_EN bits in the
+ * xdevcfg_set_aes - This function sets the AES_EN bits in the
  * control register with either all 1s or all 0s.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1196,7 +1200,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_show_aes_status() - The function returns the AES_EN bit status
+ * xdevcfg_show_aes_status - The function returns the AES_EN bit status
  * in the control register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1228,7 +1232,7 @@ static ssize_t xdevcfg_show_aes_status(struct device *dev,
 static DEVICE_ATTR(enable_aes, 0644, xdevcfg_show_aes_status, xdevcfg_set_aes);
 
 /**
- * xdevcfg_set_aes_en_lock() - This function sets the LOCK_AES_EN bit in the
+ * xdevcfg_set_aes_en_lock - This function sets the LOCK_AES_EN bit in the
  * lock register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1286,7 +1290,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_show_aes_en_lock_status() - The function returns the LOCK_AES_EN bit
+ * xdevcfg_show_aes_en_lock_status - The function returns the LOCK_AES_EN bit
  * status in the lock register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1319,7 +1323,7 @@ static DEVICE_ATTR(aes_en_lock, 0644, xdevcfg_show_aes_en_lock_status,
 				xdevcfg_set_aes_en_lock);
 
 /**
- * xdevcfg_set_seu_lock() - This function sets the LOCK_SEU bit in the
+ * xdevcfg_set_seu_lock - This function sets the LOCK_SEU bit in the
  * lock register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1376,7 +1380,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_show_seu_lock_status() - The function returns the LOCK_SEU bit
+ * xdevcfg_show_seu_lock_status - The function returns the LOCK_SEU bit
  * status in the lock register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1409,7 +1413,7 @@ static DEVICE_ATTR(seu_lock, 0644, xdevcfg_show_seu_lock_status,
 					xdevcfg_set_seu_lock);
 
 /**
- * xdevcfg_set_dbg_lock() - This function sets the LOCK_DBG bit in the
+ * xdevcfg_set_dbg_lock - This function sets the LOCK_DBG bit in the
  * lock register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1465,7 +1469,7 @@ err_clk:
 }
 
 /**
- * xdevcfg_show_dbg_lock_status() - The function returns the LOCK_DBG bit
+ * xdevcfg_show_dbg_lock_status - The function returns the LOCK_DBG bit
  * status in the lock register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1498,7 +1502,7 @@ static DEVICE_ATTR(dbg_lock, 0644, xdevcfg_show_dbg_lock_status,
 				xdevcfg_set_dbg_lock);
 
 /**
- * xdevcfg_show_prog_done_status() - The function returns the PROG_DONE bit
+ * xdevcfg_show_prog_done_status - The function returns the PROG_DONE bit
  * status in the interrupt status register.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1531,7 +1535,7 @@ static DEVICE_ATTR(prog_done, 0644, xdevcfg_show_prog_done_status,
 				NULL);
 
 /**
- * xdevcfg_set_is_partial_bitstream() - This function sets the
+ * xdevcfg_set_is_partial_bitstream - This function sets the
  * is_partial_bitstream variable. If is_partial_bitstream is set,
  * then PROG_B is not asserted (xdevcfg_reset_pl) and also
  * xslcr_init_preload_fpga and xslcr_init_postload_fpga functions
@@ -1567,7 +1571,7 @@ static ssize_t xdevcfg_set_is_partial_bitstream(struct device *dev,
 }
 
 /**
- * xdevcfg_show_is_partial_bitstream_status() - The function returns the
+ * xdevcfg_show_is_partial_bitstream_status - The function returns the
  * value of is_partial_bitstream variable.
  * @dev:	Pointer to the device structure.
  * @attr:	Pointer to the device attribute structure.
@@ -1902,7 +1906,8 @@ static void xdevcfg_fclk_remove(struct device *dev)
  * xdevcfg_drv_probe -  Probe call for the device.
  *
  * @pdev:	handle to the platform device structure.
- * Returns 0 on success, negative error otherwise.
+ *
+ * Returns: 0 on success, negative error otherwise.
  *
  * It does all the memory allocation and registration for the device.
  */
@@ -2053,7 +2058,8 @@ failed5:
  * xdevcfg_drv_remove -  Remove call for the device.
  *
  * @pdev:	handle to the platform device structure.
- * Returns 0 or error status.
+ *
+ * Returns: 0 or error status.
  *
  * Unregister the device after releasing the resources.
  */
-- 
2.7.4

