From 84f80ab6440c915bb2f35fe89f4a1a11bbb2c02d Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Tue, 4 Mar 2014 11:55:40 -0800
Subject: [PATCH 0251/1566] drm: xilinx: rgb2yuv: Use of_match_node()

Check the given node if it matches the compatible string.

Signed-off-by: Hyun Kwon <hyunk@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/gpu/drm/xilinx/xilinx_rgb2yuv.c |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_rgb2yuv.c b/drivers/gpu/drm/xilinx/xilinx_rgb2yuv.c
index d389872..2d34004 100644
--- a/drivers/gpu/drm/xilinx/xilinx_rgb2yuv.c
+++ b/drivers/gpu/drm/xilinx/xilinx_rgb2yuv.c
@@ -79,14 +79,26 @@ void xilinx_rgb2yuv_reset(struct xilinx_rgb2yuv *rgb2yuv)
 	xilinx_drm_writel(rgb2yuv->base, RGB_CONTROL, reg | RGB_CTL_RUE);
 }
 
+static const struct of_device_id xilinx_rgb2yuv_of_match[] = {
+	{ .compatible = "xlnx,v-rgb2ycrcb-6.01.a" },
+	{ /* end of table */ },
+};
+
 /* probe rgb2yuv */
 struct xilinx_rgb2yuv *xilinx_rgb2yuv_probe(struct device *dev,
 					    struct device_node *node)
 {
 	struct xilinx_rgb2yuv *rgb2yuv;
+	const struct of_device_id *match;
 	struct resource res;
 	int ret;
 
+	match = of_match_node(xilinx_rgb2yuv_of_match, node);
+	if (!match) {
+		dev_err(dev, "failed to match the device node\n");
+		return ERR_PTR(-ENODEV);
+	}
+
 	rgb2yuv = devm_kzalloc(dev, sizeof(*rgb2yuv), GFP_KERNEL);
 	if (!rgb2yuv)
 		return ERR_PTR(-ENOMEM);
-- 
1.7.5.4

