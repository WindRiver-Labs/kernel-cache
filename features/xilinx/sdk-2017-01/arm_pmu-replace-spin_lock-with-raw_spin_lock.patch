From c8cfca6993c6778510d40ff153840d47f697e833 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Sun, 3 Dec 2017 12:29:49 +0800
Subject: [PATCH 3/3] arm_pmu: replace spin_lock with raw_spin_lock

To avoid below call trace for RT, replace spin_lock with raw_spin_lock:

[  554.870147] BUG: sleeping function called from invalid context at kernel-source/kernel/locking/rtmutex.c:995
[  554.870150] in_atomic(): 1, irqs_disabled(): 128, pid: 0, name: swapper/1
[  554.870164] Preemption disabled at:[<ffffff800808f5c4>] secondary_start_kernel+0xec/0x1c8

[  554.870170] CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.8.26-rt10-WR9.0.0.13_preempt-rt #1
[  554.870171] Hardware name: ZynqMP ZCU102 RevA (DT)
[  554.870173] Call trace:
[  554.870178] [<ffffff8008089608>] dump_backtrace+0x0/0x1d0
[  554.870182] [<ffffff80080897fc>] show_stack+0x24/0x30
[  554.870187] [<ffffff80084e250c>] dump_stack+0x90/0xb4
[  554.870192] [<ffffff80080c964c>] ___might_sleep+0x15c/0x170
[  554.870197] [<ffffff800893018c>] rt_spin_lock+0x2c/0x88
[  554.870202] [<ffffff80087c39f0>] arm_perf_starting_cpu+0x30/0xb0
[  554.870207] [<ffffff800809ea64>] cpuhp_invoke_callback+0x6c/0x200
[  554.870211] [<ffffff80080a0d04>] notify_cpu_starting+0x74/0x90
[  554.870214] [<ffffff800808f5ec>] secondary_start_kernel+0x114/0x1c8
[  554.870217] [<0000000000083158>] 0x83158
[  554.870240] CPU1: Booted secondary processor [410fd034]
[  554.996914] Detected VIPT I-cache on CPU2
[  554.996954] CPU2: Booted secondary processor [410fd034]
[  555.045390] Detected VIPT I-cache on CPU3
[  555.045429] CPU3: Booted secondary processor [410fd034]

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/perf/arm_pmu.c |   18 +++++++++---------
 1 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/perf/arm_pmu.c b/drivers/perf/arm_pmu.c
index f5e1008..12d9bbf 100644
--- a/drivers/perf/arm_pmu.c
+++ b/drivers/perf/arm_pmu.c
@@ -688,7 +688,7 @@ static int cpu_pmu_request_irq(struct arm_pmu *cpu_pmu, irq_handler_t handler)
 	return 0;
 }
 
-static DEFINE_SPINLOCK(arm_pmu_lock);
+static DEFINE_RAW_SPINLOCK(arm_pmu_lock);
 static LIST_HEAD(arm_pmu_list);
 
 /*
@@ -701,7 +701,7 @@ static int arm_perf_starting_cpu(unsigned int cpu)
 {
 	struct arm_pmu *pmu;
 
-	spin_lock(&arm_pmu_lock);
+	raw_spin_lock(&arm_pmu_lock);
 	list_for_each_entry(pmu, &arm_pmu_list, entry) {
 
 		if (!cpumask_test_cpu(cpu, &pmu->supported_cpus))
@@ -709,7 +709,7 @@ static int arm_perf_starting_cpu(unsigned int cpu)
 		if (pmu->reset)
 			pmu->reset(pmu);
 	}
-	spin_unlock(&arm_pmu_lock);
+	raw_spin_unlock(&arm_pmu_lock);
 	return 0;
 }
 
@@ -821,9 +821,9 @@ static int cpu_pmu_init(struct arm_pmu *cpu_pmu)
 	if (!cpu_hw_events)
 		return -ENOMEM;
 
-	spin_lock(&arm_pmu_lock);
+	raw_spin_lock(&arm_pmu_lock);
 	list_add_tail(&cpu_pmu->entry, &arm_pmu_list);
-	spin_unlock(&arm_pmu_lock);
+	raw_spin_unlock(&arm_pmu_lock);
 
 	err = cpu_pm_pmu_register(cpu_pmu);
 	if (err)
@@ -859,9 +859,9 @@ static int cpu_pmu_init(struct arm_pmu *cpu_pmu)
 	return 0;
 
 out_unregister:
-	spin_lock(&arm_pmu_lock);
+	raw_spin_lock(&arm_pmu_lock);
 	list_del(&cpu_pmu->entry);
-	spin_unlock(&arm_pmu_lock);
+	raw_spin_unlock(&arm_pmu_lock);
 	free_percpu(cpu_hw_events);
 	return err;
 }
@@ -869,9 +869,9 @@ out_unregister:
 static void cpu_pmu_destroy(struct arm_pmu *cpu_pmu)
 {
 	cpu_pm_pmu_unregister(cpu_pmu);
-	spin_lock(&arm_pmu_lock);
+	raw_spin_lock(&arm_pmu_lock);
 	list_del(&cpu_pmu->entry);
-	spin_unlock(&arm_pmu_lock);
+	raw_spin_unlock(&arm_pmu_lock);
 	free_percpu(cpu_pmu->hw_events);
 }
 
-- 
1.7.5.4

