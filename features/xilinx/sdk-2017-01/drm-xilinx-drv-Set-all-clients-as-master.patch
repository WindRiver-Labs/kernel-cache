From 1e1a38b5f958a4b46173cb846f29c462394fc94b Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Fri, 14 Oct 2016 17:53:16 -0700
Subject: [PATCH 1044/1566] drm: xilinx: drv: Set all clients as master

commit  b0e1a5fd84d0f16dea15229c5827142825b3b986 from
https://github.com/Xilinx/linux-xlnx.git

With this change, any client with root privilege will be master.
This means that all applications that run on the Xilinx DRM driver
as root get full control of the driver. It is hacky, but easy way
to enable multiple clients, for example including X11 and
other KMS applications to control of the pipeline.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_drv.c |   21 +++++++++++++++++++--
 1 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_drv.c b/drivers/gpu/drm/xilinx/xilinx_drm_drv.c
index c94ac6c..24b79c3 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_drv.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_drv.c
@@ -53,6 +53,7 @@ struct xilinx_drm_private {
 	struct drm_crtc *crtc;
 	struct drm_fb_helper *fb;
 	struct platform_device *pdev;
+	bool is_master;
 };
 
 /**
@@ -377,8 +378,13 @@ static int xilinx_drm_unload(struct drm_device *drm)
 
 int xilinx_drm_open(struct drm_device *dev, struct drm_file *file)
 {
-	if (drm_is_control_client(file))
-		file->universal_planes = 1;
+	struct xilinx_drm_private *private = dev->dev_private;
+
+	if (!(drm_is_primary_client(file) && !dev->master) &&
+			capable(CAP_SYS_ADMIN)) {
+		file->is_master = 1;
+		private->is_master = true;
+	}
 
 	return 0;
 }
@@ -390,6 +396,11 @@ static void xilinx_drm_preclose(struct drm_device *drm, struct drm_file *file)
 
 	/* cancel pending page flip request */
 	xilinx_drm_crtc_cancel_page_flip(private->crtc, file);
+
+	if (private->is_master) {
+		private->is_master = false;
+		file->is_master = 0;
+	}
 }
 
 /* restore the default mode when xilinx drm is released */
@@ -402,6 +413,11 @@ static void xilinx_drm_lastclose(struct drm_device *drm)
 	xilinx_drm_fb_restore_mode(private->fb);
 }
 
+static int xilinx_drm_set_busid(struct drm_device *dev, struct drm_master *master)
+{
+	return 0;
+}
+
 static const struct file_operations xilinx_drm_fops = {
 	.owner		= THIS_MODULE,
 	.open		= drm_open,
@@ -424,6 +440,7 @@ static struct drm_driver xilinx_drm_driver = {
 	.open				= xilinx_drm_open,
 	.preclose			= xilinx_drm_preclose,
 	.lastclose			= xilinx_drm_lastclose,
+	.set_busid			= xilinx_drm_set_busid,
 
 	.get_vblank_counter		= drm_vblank_no_hw_counter,
 	.enable_vblank			= xilinx_drm_enable_vblank,
-- 
1.7.5.4

