From 2a4759038759e82539697842e745cc8ec18b759e Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Thu, 14 Jul 2016 17:42:39 -0700
Subject: [PATCH 0724/1566] dma: xilinx: dpdma: Support multi-channel
 operations

In case of mult-planar formats, multiple video channels should
be operated in sync. For this, introduce the video group, which
guarantees all relevant channels are triggered / pasued at
the same time.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/dma/xilinx/xilinx_dpdma.c |   59 ++++++++++++++++++++++++++++++++++--
 1 files changed, 55 insertions(+), 4 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_dpdma.c b/drivers/dma/xilinx/xilinx_dpdma.c
index 52241a5..d7e8bc9 100644
--- a/drivers/dma/xilinx/xilinx_dpdma.c
+++ b/drivers/dma/xilinx/xilinx_dpdma.c
@@ -274,6 +274,7 @@ enum xilinx_dpdma_chan_status {
  * @wait_to_stop: queue to wait for outstanding transacitons before stopping
  * @status: channel status
  * @first_frame: flag for the first frame of stream
+ * @video_group: flag if multi-channel operation is needed for video channels
  * @lock: lock to access struct xilinx_dpdma_chan
  * @desc_pool: descriptor allocation pool
  * @done_task: done IRQ bottom half handler
@@ -292,6 +293,7 @@ struct xilinx_dpdma_chan {
 	wait_queue_head_t wait_to_stop;
 	enum xilinx_dpdma_chan_status status;
 	bool first_frame;
+	bool video_group;
 
 	spinlock_t lock;
 	struct dma_pool *desc_pool;
@@ -618,6 +620,10 @@ xilinx_dpdma_chan_submit_tx_desc(struct xilinx_dpdma_chan *chan,
 		sw_desc->hw.desc_id = cookie;
 
 	list_add_tail(&tx_desc->node, &chan->pending_list);
+	if (chan->id == VIDEO1 || chan->id == VIDEO2) {
+		chan->video_group = true;
+		chan->xdev->chan[VIDEO0]->video_group = true;
+	}
 	spin_unlock_irqrestore(&chan->lock, flags);
 
 	return cookie;
@@ -1056,6 +1062,24 @@ static inline void xilinx_dpdma_chan_unpause(struct xilinx_dpdma_chan *chan)
 	dpdma_clr(chan->reg, XILINX_DPDMA_CH_CNTL, XILINX_DPDMA_CH_CNTL_PAUSE);
 }
 
+static u32
+xilinx_dpdma_chan_video_group_ready(struct xilinx_dpdma_chan *chan)
+{
+	struct xilinx_dpdma_device *xdev = chan->xdev;
+	u32 i = 0, ret = 0;
+
+	for (i = VIDEO0; i < GRAPHICS; i++) {
+		if (xdev->chan[i]->video_group &&
+		    xdev->chan[i]->status != STREAMING)
+			return 0;
+
+		if (xdev->chan[i]->video_group)
+			ret |= BIT(i);
+	}
+
+	return ret;
+}
+
 /**
  * xilinx_dpdma_chan_issue_pending - Issue the pending descriptor
  * @chan: DPDMA channel
@@ -1070,6 +1094,7 @@ static void xilinx_dpdma_chan_issue_pending(struct xilinx_dpdma_chan *chan)
 	struct xilinx_dpdma_tx_desc *tx_desc;
 	struct xilinx_dpdma_sw_desc *sw_desc;
 	unsigned long flags;
+	u32 reg, channels;
 
 	spin_lock_irqsave(&chan->lock, flags);
 
@@ -1092,13 +1117,27 @@ static void xilinx_dpdma_chan_issue_pending(struct xilinx_dpdma_chan *chan)
 
 	if (chan->first_frame) {
 		chan->first_frame = false;
-		dpdma_write(xdev->reg, XILINX_DPDMA_GBL,
-			    1 << (XILINX_DPDMA_GBL_TRIG_SHIFT + chan->id));
+		if (chan->video_group) {
+			channels = xilinx_dpdma_chan_video_group_ready(chan);
+			if (!channels)
+				goto out_unlock;
+			reg = channels << XILINX_DPDMA_GBL_TRIG_SHIFT;
+		} else {
+			reg = 1 << (XILINX_DPDMA_GBL_TRIG_SHIFT + chan->id);
+		}
 	} else {
-		dpdma_write(xdev->reg, XILINX_DPDMA_GBL,
-			    1 << (XILINX_DPDMA_GBL_RETRIG_SHIFT + chan->id));
+		if (chan->video_group) {
+			channels = xilinx_dpdma_chan_video_group_ready(chan);
+			if (!channels)
+				goto out_unlock;
+			reg = channels << XILINX_DPDMA_GBL_RETRIG_SHIFT;
+		} else {
+			reg = 1 << (XILINX_DPDMA_GBL_RETRIG_SHIFT + chan->id);
+		}
 	}
 
+	dpdma_write(xdev->reg, XILINX_DPDMA_GBL, reg);
+
 out_unlock:
 	spin_unlock_irqrestore(&chan->lock, flags);
 }
@@ -1315,7 +1354,19 @@ static void xilinx_dpdma_chan_free_resources(struct xilinx_dpdma_chan *chan)
  */
 static int xilinx_dpdma_chan_terminate_all(struct xilinx_dpdma_chan *chan)
 {
+	struct xilinx_dpdma_device *xdev = chan->xdev;
 	int ret;
+	unsigned int i;
+
+	if (chan->video_group) {
+		for (i = VIDEO0; i < GRAPHICS; i++) {
+			if (xdev->chan[i]->video_group &&
+			    xdev->chan[i]->status == STREAMING) {
+				xilinx_dpdma_chan_pause(xdev->chan[i]);
+				xdev->chan[i]->video_group = false;
+			}
+		}
+	}
 
 	ret = xilinx_dpdma_chan_stop(chan);
 	if (ret)
-- 
1.7.5.4

