From 429ed6f8f5d0f0c19cc1f8966198a24dc3b4ff55 Mon Sep 17 00:00:00 2001
From: Filip Drazic <filip.drazic@aggios.com>
Date: Tue, 7 Feb 2017 12:03:04 +0100
Subject: [PATCH 1348/1566] ARM64: zynqmp: Convert values from debugfs to
 64-bit unsigned integers

commit  3049e544e3eaba9274a3d67d657c10cecd7a7966 from
https://github.com/Xilinx/linux-xlnx.git

Some PM APIs accept 64-bit arguments (e.g. zynqmp_pm_request_wakeup).
Covert all arguments from debugfs to 64-bit values to allow testing
those PM APIs. Added buffer to store return values of PM API calls.

Signed-off-by: Filip Drazic <filip.drazic@aggios.com>
Acked-by: Will Wong <willw@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/soc/xilinx/zynqmp/pm.c |   40 +++++++++++++++++++++-------------------
 1 files changed, 21 insertions(+), 19 deletions(-)

diff --git a/drivers/soc/xilinx/zynqmp/pm.c b/drivers/soc/xilinx/zynqmp/pm.c
index 12f6593..de48730 100644
--- a/drivers/soc/xilinx/zynqmp/pm.c
+++ b/drivers/soc/xilinx/zynqmp/pm.c
@@ -767,14 +767,14 @@ done:
  * Return:	Argument value in unsigned integer format on success
  *		0 otherwise
  */
-static u32 zynqmp_pm_argument_value(char *arg)
+static u64 zynqmp_pm_argument_value(char *arg)
 {
-	u32 value;
+	u64 value;
 
 	if (!arg)
 		return 0;
 
-	if (!kstrtouint(arg, 0, &value))
+	if (!kstrtou64(arg, 0, &value))
 		return value;
 
 	return 0;
@@ -804,7 +804,9 @@ static ssize_t zynqmp_pm_debugfs_api_write(struct file *file,
 	char *kern_buff;
 	char *pm_api_req;
 	u32 pm_id = 0;
-	u32 pm_api_arg[4];
+	u64 pm_api_arg[4];
+	/* Return values from PM APIs calls */
+	u32 pm_api_ret[3] = {0, 0, 0};
 	int ret;
 	int i = 0;
 
@@ -951,22 +953,22 @@ static ssize_t zynqmp_pm_debugfs_api_write(struct file *file,
 		break;
 	case GET_NODE_STATUS:
 		ret = zynqmp_pm_get_node_status(pm_api_arg[0],
-						&pm_api_arg[1],
-						&pm_api_arg[2],
-						&pm_api_arg[3]);
+						&pm_api_ret[0],
+						&pm_api_ret[1],
+						&pm_api_ret[2]);
 		if (!ret)
-			pr_info("GET_NODE_STATUS:\n\tNodeId: %u\n\tStatus: %u\n\tRequirements: %u\n\tUsage: %u\n",
-				pm_api_arg[0], pm_api_arg[1],
-				pm_api_arg[2], pm_api_arg[3]);
+			pr_info("GET_NODE_STATUS:\n\tNodeId: %llu\n\tStatus: %u\n\tRequirements: %u\n\tUsage: %u\n",
+				pm_api_arg[0], pm_api_ret[0],
+				pm_api_ret[1], pm_api_ret[2]);
 		break;
 	case GET_OPERATING_CHARACTERISTIC:
 		ret = zynqmp_pm_get_operating_characteristic(pm_api_arg[0],
 				pm_api_arg[1] ? pm_api_arg[1] :
 				ZYNQMP_PM_OPERATING_CHARACTERISTIC_POWER,
-				&pm_api_arg[2]);
+				&pm_api_ret[0]);
 		if (!ret)
-			pr_info("GET_OPERATING_CHARACTERISTIC:\n\tNodeId: %u\n\tType: %u\n\tResult: %u\n",
-				pm_api_arg[0], pm_api_arg[1], pm_api_arg[2]);
+			pr_info("GET_OPERATING_CHARACTERISTIC:\n\tNodeId: %llu\n\tType: %llu\n\tResult: %u\n",
+				pm_api_arg[0], pm_api_arg[1], pm_api_ret[0]);
 		break;
 	case REGISTER_NOTIFIER:
 		ret = zynqmp_pm_register_notifier(pm_api_arg[0],
@@ -978,21 +980,21 @@ static ssize_t zynqmp_pm_debugfs_api_write(struct file *file,
 		ret = zynqmp_pm_reset_assert(pm_api_arg[0], pm_api_arg[1]);
 		break;
 	case RESET_GET_STATUS:
-		ret = zynqmp_pm_reset_get_status(pm_api_arg[0], &pm_api_arg[1]);
-		pr_info("%s Reset status: %u\n", __func__, pm_api_arg[1]);
+		ret = zynqmp_pm_reset_get_status(pm_api_arg[0], &pm_api_ret[0]);
+		pr_info("%s Reset status: %u\n", __func__, pm_api_ret[0]);
 		break;
 	case MMIO_READ:
-		ret = zynqmp_pm_mmio_read(pm_api_arg[0], &pm_api_arg[1]);
-		pr_info("%s MMIO value: %#x\n", __func__, pm_api_arg[1]);
+		ret = zynqmp_pm_mmio_read(pm_api_arg[0], &pm_api_ret[0]);
+		pr_info("%s MMIO value: %#x\n", __func__, pm_api_ret[0]);
 		break;
 	case MMIO_WRITE:
 		ret = zynqmp_pm_mmio_write(pm_api_arg[0],
 				     pm_api_arg[1], pm_api_arg[2]);
 		break;
 	case GET_CHIPID:
-		ret = zynqmp_pm_get_chipid(&pm_api_arg[0], &pm_api_arg[1]);
+		ret = zynqmp_pm_get_chipid(&pm_api_ret[0], &pm_api_ret[1]);
 		pr_info("%s idcode: %#x, version:%#x\n",
-			__func__, pm_api_arg[0], pm_api_arg[1]);
+			__func__, pm_api_ret[0], pm_api_ret[1]);
 		break;
 	default:
 		pr_err("%s Unsupported PM-API request\n", __func__);
-- 
1.7.5.4

