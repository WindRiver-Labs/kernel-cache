From e3f413ede5870f7ff6787c740cb93928d7f67c91 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Wed, 29 Mar 2017 13:32:18 -0700
Subject: [PATCH 1489/1566] drm: xilinx: dp: Add a module param for aux
 timeout

commit  de743f565e82ffea81c5989e2178643ad0418557 from
https://github.com/Xilinx/linux-xlnx.git

From testing with multiple monitors, the timeout value varies.
The spec describes the 25 msec, but some monitor requires a few
seconds wait time. So, the default timeout is set to 50 msec,
but make it configurable so that the value can be tuned.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_dp.c |   17 ++++++++++++++---
 1 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_dp.c b/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
index 952d8cd..0fe26dc 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_dp.c
@@ -34,6 +34,11 @@
 #include "xilinx_drm_dp_sub.h"
 #include "xilinx_drm_drv.h"
 
+static uint xilinx_drm_dp_aux_timeout_ms = 50;
+module_param_named(aux_timeout_ms, xilinx_drm_dp_aux_timeout_ms, uint, 0444);
+MODULE_PARM_DESC(aux_timeout_ms,
+		 "DP aux timeout value in msec (default: 50)");
+
 /* Link configuration registers */
 #define XILINX_DP_TX_LINK_BW_SET			0x0
 #define XILINX_DP_TX_LANE_CNT_SET			0x4
@@ -1229,14 +1234,20 @@ xilinx_drm_dp_aux_transfer(struct drm_dp_aux *aux, struct drm_dp_aux_msg *msg)
 {
 	struct xilinx_drm_dp *dp = container_of(aux, struct xilinx_drm_dp, aux);
 	int ret;
-	unsigned int i;
+	unsigned int i, iter;
+
+	/* Number of loops = timeout in msec / aux delay (400 usec) */
+	iter = xilinx_drm_dp_aux_timeout_ms * 1000 / 400;
+	iter = iter ? iter : 1;
 
-	for (i = 0; i < 128; i++) {
+	for (i = 0; i < iter; i++) {
 		ret = xilinx_drm_dp_aux_cmd_submit(dp, msg->request,
 						   msg->address, msg->buffer,
 						   msg->size, &msg->reply);
-		if (!ret)
+		if (!ret) {
+			dev_dbg(dp->dev, "aux %d retries\n", i);
 			return msg->size;
+		}
 
 		usleep_range(400, 500);
 	}
-- 
1.7.5.4

