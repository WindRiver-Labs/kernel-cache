From ac7ebc8e324c59b1d50e024dd87b4175d7472b08 Mon Sep 17 00:00:00 2001
From: Kian Karas <kian.karas@cobham.com>
Date: Mon, 11 Aug 2014 10:01:18 +0200
Subject: [PATCH 1025/1566] remoteproc: zynq: added missing DMA error handling

commit  6bff0cdac04f7051375c51aa732dee4064dfb290 from
https://github.com/Xilinx/linux-xlnx.git

Two seperate issues is fixed in the driver's probe function with this
patch:
a) If dma_declare_coherent_memory() fails, an error value is returned
   instead of 0 (success).
b) In case of an error, the declared DMA coherent memory is released
   again.

Signed-off-by: Kian Karas <kian.karas@cobham.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/remoteproc/zynq_remoteproc.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/drivers/remoteproc/zynq_remoteproc.c b/drivers/remoteproc/zynq_remoteproc.c
index c84abb4..399f729 100644
--- a/drivers/remoteproc/zynq_remoteproc.c
+++ b/drivers/remoteproc/zynq_remoteproc.c
@@ -207,13 +207,14 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 		DMA_MEMORY_IO);
 	if (!ret) {
 		dev_err(&pdev->dev, "dma_declare_coherent_memory failed\n");
+		ret = -ENOMEM;
 		goto dma_fault;
 	}
 
 	ret = dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 	if (ret) {
 		dev_err(&pdev->dev, "dma_set_coherent_mask: %d\n", ret);
-		goto dma_fault;
+		goto dma_mask_fault;
 	}
 
 	/* Init list for IRQs - it can be long list */
@@ -318,6 +319,9 @@ ipi_fault:
 irq_fault:
 	clear_irq(pdev);
 
+dma_mask_fault:
+	dma_release_declared_memory(&pdev->dev);
+
 dma_fault:
 	/* Cpu can't be power on - for example in nosmp mode */
 	ret |= cpu_up(1);
-- 
1.7.5.4

