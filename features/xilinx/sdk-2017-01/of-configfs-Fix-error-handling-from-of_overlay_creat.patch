From aa2195edc3a51ccdab265997305d9bd395335f91 Mon Sep 17 00:00:00 2001
From: Michal Simek <monstr@monstr.eu>
Date: Thu, 23 Jun 2016 13:42:03 +0200
Subject: [PATCH 1311/1566] of: configfs: Fix error handling from
 of_overlay_create()

commit  21a57227f71521a9590427c17ecd42f8f2ba532b from
https://github.com/Xilinx/linux-xlnx.git

of_overlay_create() is returning the id or the created overlay,
or a negative error number.
It means when the first overlay is applied, id 0 is returned.
When the second overlay is applied, id 1 is returned which
is not captured by error condition in create_overlay() because it is
valid return value but function itself was returning this directly
back to cfs_overlay_item_path_store() where
if (err != 0) condition traps it and return to out_err label
and return id value as number of chars which was handled by interface.

This patch is fixing error value handling in create_overlay() to return
error value directly when error is handled and also return 0 instead of
overlay id.

The second change is in error path cfs_overlay_item_path_store()
where number of written bytes is return not to call write
again.

For example behaviour with Busybox echo:
write(1, "jdtmp3.dtbo", 11)             = 1
write(1, "dtmp3.dtbo", 10)              = -1 ENOENT (No such
file or directory)
write(2, "echo: write error: No such file "..., 45echo: write
error: No such file or directory) = 45

Signed-off-by: Michal Simek <monstr@monstr.eu>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/of/configfs.c |   13 ++++++-------
 1 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/drivers/of/configfs.c b/drivers/of/configfs.c
index c7e999c..5a693a6 100644
--- a/drivers/of/configfs.c
+++ b/drivers/of/configfs.c
@@ -48,8 +48,7 @@ static int create_overlay(struct cfs_overlay_item *overlay, void *blob)
 	of_fdt_unflatten_tree(blob, NULL, &overlay->overlay);
 	if (overlay->overlay == NULL) {
 		pr_err("%s: failed to unflatten tree\n", __func__);
-		err = -EINVAL;
-		goto out_err;
+		return -EINVAL;
 	}
 	pr_debug("%s: unflattened OK\n", __func__);
 
@@ -60,7 +59,7 @@ static int create_overlay(struct cfs_overlay_item *overlay, void *blob)
 	err = of_resolve_phandles(overlay->overlay);
 	if (err != 0) {
 		pr_err("%s: Failed to resolve tree\n", __func__);
-		goto out_err;
+		return err;
 	}
 	pr_debug("%s: resolved OK\n", __func__);
 
@@ -68,12 +67,11 @@ static int create_overlay(struct cfs_overlay_item *overlay, void *blob)
 	if (err < 0) {
 		pr_err("%s: Failed to create overlay (err=%d)\n",
 				__func__, err);
-		goto out_err;
+		return err;
 	}
 	overlay->ov_id = err;
 
-out_err:
-	return err;
+	return 0;
 }
 
 static inline struct cfs_overlay_item *to_cfs_overlay_item(
@@ -126,7 +124,8 @@ out_err:
 	overlay->fw = NULL;
 
 	overlay->path[0] = '\0';
-	return err;
+
+	return count;
 }
 
 static ssize_t cfs_overlay_item_status_show(struct config_item *item,
-- 
1.7.5.4

