From 475e525fd78c9ef8147b678a0be8509084bc934a Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Mon, 13 Oct 2014 18:59:21 -0700
Subject: [PATCH 0441/1566] drm: xilinx: crtc/plane: Attach properties to all
 planes

This patch attaches the properties to all planes. With the universal
plane, all planes can be exposed to user level, so there's no need
to attach properties to CRTC for private planes. Thus the property
related functions are removed from CRTC, and the properties are
attached to all planes equally.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_crtc.c  |   76 -----------------------------
 drivers/gpu/drm/xilinx/xilinx_drm_plane.c |   31 +++---------
 drivers/gpu/drm/xilinx/xilinx_drm_plane.h |    5 --
 3 files changed, 8 insertions(+), 104 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
index 79e0d38..a68c3b7 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
@@ -45,11 +45,7 @@ struct xilinx_drm_crtc {
 	struct xilinx_vtc *vtc;
 	struct xilinx_drm_plane_manager *plane_manager;
 	int dpms;
-	unsigned int default_zpos;
-	unsigned int default_alpha;
 	unsigned int alpha;
-	struct drm_property *zpos_prop;
-	struct drm_property *alpha_prop;
 	struct drm_pending_vblank_event *event;
 };
 
@@ -321,25 +317,6 @@ static int xilinx_drm_crtc_page_flip(struct drm_crtc *base_crtc,
 	return 0;
 }
 
-/* set property of a plane */
-static int xilinx_drm_crtc_set_property(struct drm_crtc *base_crtc,
-					struct drm_property *property,
-					uint64_t val)
-{
-	struct xilinx_drm_crtc *crtc = to_xilinx_crtc(base_crtc);
-
-	if (property == crtc->zpos_prop)
-		xilinx_drm_plane_set_zpos(crtc->priv_plane, val);
-	else if (property == crtc->alpha_prop)
-		xilinx_drm_plane_set_alpha(crtc->priv_plane, val);
-	else
-		return -EINVAL;
-
-	drm_object_property_set_value(&base_crtc->base, property, val);
-
-	return 0;
-}
-
 /* vblank interrupt handler */
 static void xilinx_drm_crtc_vblank_handler(void *data)
 {
@@ -383,24 +360,6 @@ void xilinx_drm_crtc_restore(struct drm_crtc *base_crtc)
 {
 	struct xilinx_drm_crtc *crtc = to_xilinx_crtc(base_crtc);
 
-	/*
-	 * Reinitialize the property values, so correct values are read
-	 * for these properties.
-	 */
-	if (crtc->zpos_prop) {
-		xilinx_drm_plane_set_zpos(crtc->priv_plane, crtc->default_zpos);
-		drm_object_property_set_value(&base_crtc->base, crtc->zpos_prop,
-					      crtc->default_zpos);
-	}
-
-	if (crtc->alpha_prop) {
-		xilinx_drm_plane_set_alpha(crtc->priv_plane,
-					   crtc->default_alpha);
-		drm_object_property_set_value(&base_crtc->base,
-					      crtc->alpha_prop,
-					      crtc->default_alpha);
-	}
-
 	xilinx_drm_plane_restore(crtc->plane_manager);
 }
 
@@ -432,41 +391,8 @@ static struct drm_crtc_funcs xilinx_drm_crtc_funcs = {
 	.destroy	= xilinx_drm_crtc_destroy,
 	.set_config	= drm_crtc_helper_set_config,
 	.page_flip	= xilinx_drm_crtc_page_flip,
-	.set_property	= xilinx_drm_crtc_set_property,
 };
 
-/* attach crtc properties */
-static void xilinx_drm_crtc_attach_property(struct drm_crtc *base_crtc)
-{
-	struct xilinx_drm_crtc *crtc = to_xilinx_crtc(base_crtc);
-	int num_planes;
-
-	num_planes = xilinx_drm_plane_get_num_planes(crtc->plane_manager);
-	if (num_planes <= 1)
-		return;
-
-	crtc->zpos_prop = drm_property_create_range(base_crtc->dev, 0, "zpos",
-						    0, num_planes - 1);
-	if (crtc->zpos_prop) {
-		crtc->default_zpos =
-			xilinx_drm_plane_get_default_zpos(crtc->priv_plane);
-		drm_object_attach_property(&base_crtc->base, crtc->zpos_prop,
-					   crtc->default_zpos);
-		xilinx_drm_plane_set_zpos(crtc->priv_plane, crtc->default_zpos);
-	}
-
-	crtc->default_alpha = xilinx_drm_plane_get_max_alpha(crtc->priv_plane);
-	crtc->alpha_prop = drm_property_create_range(base_crtc->dev, 0,
-						      "alpha", 0,
-						      crtc->default_alpha);
-	if (crtc->alpha_prop) {
-		drm_object_attach_property(&base_crtc->base, crtc->alpha_prop,
-					   crtc->default_alpha);
-		xilinx_drm_plane_set_alpha(crtc->priv_plane,
-					   crtc->default_alpha);
-	}
-}
-
 /* create crtc */
 struct drm_crtc *xilinx_drm_crtc_create(struct drm_device *drm)
 {
@@ -559,8 +485,6 @@ struct drm_crtc *xilinx_drm_crtc_create(struct drm_device *drm)
 	}
 	drm_crtc_helper_add(&crtc->base, &xilinx_drm_crtc_helper_funcs);
 
-	xilinx_drm_crtc_attach_property(&crtc->base);
-
 	return &crtc->base;
 
 err_plane:
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_plane.c b/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
index 1544c75..37124ea 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_plane.c
@@ -371,7 +371,8 @@ xilinx_drm_plane_update_prio(struct xilinx_drm_plane_manager *manager)
 	xilinx_osd_enable_rue(manager->osd);
 }
 
-void xilinx_drm_plane_set_zpos(struct drm_plane *base_plane, unsigned int zpos)
+static void xilinx_drm_plane_set_zpos(struct drm_plane *base_plane,
+				      unsigned int zpos)
 {
 	struct xilinx_drm_plane *plane = to_xilinx_plane(base_plane);
 	struct xilinx_drm_plane_manager *manager = plane->manager;
@@ -399,8 +400,8 @@ void xilinx_drm_plane_set_zpos(struct drm_plane *base_plane, unsigned int zpos)
 	}
 }
 
-void xilinx_drm_plane_set_alpha(struct drm_plane *base_plane,
-				unsigned int alpha)
+static void xilinx_drm_plane_set_alpha(struct drm_plane *base_plane,
+				       unsigned int alpha)
 {
 	struct xilinx_drm_plane *plane = to_xilinx_plane(base_plane);
 
@@ -448,22 +449,6 @@ int xilinx_drm_plane_get_max_width(struct drm_plane *base_plane)
 	return plane->manager->max_width;
 }
 
-/* get the max alpha value */
-unsigned int xilinx_drm_plane_get_max_alpha(struct drm_plane *base_plane)
-{
-	struct xilinx_drm_plane *plane = to_xilinx_plane(base_plane);
-
-	return plane->manager->default_alpha;
-}
-
-/* get the default z-position value which is the plane id */
-unsigned int xilinx_drm_plane_get_default_zpos(struct drm_plane *base_plane)
-{
-	struct xilinx_drm_plane *plane = to_xilinx_plane(base_plane);
-
-	return plane->id;
-}
-
 /* check if format is supported */
 bool xilinx_drm_plane_check_format(struct xilinx_drm_plane_manager *manager,
 				   uint32_t format)
@@ -705,6 +690,8 @@ xilinx_drm_plane_create(struct xilinx_drm_plane_manager *manager,
 	plane->manager = manager;
 	manager->planes[i] = plane;
 
+	xilinx_drm_plane_attach_property(&plane->base);
+
 	of_node_put(plane_node);
 
 	return plane;
@@ -744,8 +731,6 @@ int xilinx_drm_plane_create_planes(struct xilinx_drm_plane_manager *manager,
 	struct xilinx_drm_plane *plane;
 	int i;
 
-	xilinx_drm_plane_create_property(manager);
-
 	/* find if there any available plane, and create if available */
 	for (i = 0; i < manager->num_planes; i++) {
 		if (manager->planes[i])
@@ -757,8 +742,6 @@ int xilinx_drm_plane_create_planes(struct xilinx_drm_plane_manager *manager,
 			return PTR_ERR(plane);
 		}
 
-		xilinx_drm_plane_attach_property(&plane->base);
-
 		manager->planes[i] = plane;
 	}
 
@@ -846,6 +829,8 @@ xilinx_drm_plane_probe_manager(struct drm_device *drm)
 
 	manager->default_alpha = OSD_MAX_ALPHA;
 
+	xilinx_drm_plane_create_property(manager);
+
 	return manager;
 }
 
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_plane.h b/drivers/gpu/drm/xilinx/xilinx_drm_plane.h
index d3fa691..0b8dc8c 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_plane.h
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_plane.h
@@ -32,11 +32,6 @@ int xilinx_drm_plane_mode_set(struct drm_plane *base_plane,
 			      uint32_t src_w, uint32_t src_h);
 int xilinx_drm_plane_get_max_width(struct drm_plane *base_plane);
 uint32_t xilinx_drm_plane_get_format(struct drm_plane *base_plane);
-unsigned int xilinx_drm_plane_get_default_zpos(struct drm_plane *base_plane);
-unsigned int xilinx_drm_plane_get_max_alpha(struct drm_plane *base_plane);
-void xilinx_drm_plane_set_zpos(struct drm_plane *base_plane, unsigned int zpos);
-void xilinx_drm_plane_set_alpha(struct drm_plane *base_plane,
-				unsigned int alpha);
 
 /* plane manager operations */
 struct xilinx_drm_plane_manager;
-- 
1.7.5.4

