From bcddd0dbe4a85fbae8abc155c552e6ae3448ee4b Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Thu, 13 Aug 2015 07:23:02 -0700
Subject: [PATCH 0828/1566] remoteproc: zynqmp_r5_remoteproc: remove firmware
 DTS property

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Remove firmware property from DTS.
Use module parameters instead.
firmware  - for RPU0
firmware1 - for RPU1

Passing firmware name via DTS was NACK in mainline that's why this is
the solution which should be acceptable.

Signed-off-by: Wendy Liang <jliang@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit da82242a0b46d7a996b6730ab6618f5301773ed4)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../bindings/remoteproc/r5_remoteproc.txt          |    4 --
 drivers/remoteproc/zynqmp_r5_remoteproc.c          |   46 +++++++++----------
 2 files changed, 22 insertions(+), 28 deletions(-)

diff --git a/Documentation/devicetree/bindings/remoteproc/r5_remoteproc.txt b/Documentation/devicetree/bindings/remoteproc/r5_remoteproc.txt
index ec87f4c..83117e2 100644
--- a/Documentation/devicetree/bindings/remoteproc/r5_remoteproc.txt
+++ b/Documentation/devicetree/bindings/remoteproc/r5_remoteproc.txt
@@ -23,9 +23,6 @@ Required properties:
 
 Optional properties:
 --------------------
- - firmware : Default firmware image name "rproc-rpu-fw" which can be
-              loaded by remoteproc framework. This value can be override
-              by "firmware" module parameter.
  - bootmem : R5 boot device (valid string, ocm or tcm), default is ocm.
  - core_conf : R5 core configuration (valid string - split0 or split1 or
                lock-step), default is lock-step.
@@ -43,7 +40,6 @@ Example:
 		core_conf = "split0";
 		method = "direct";
 		bootmem = "ocm";
-		firmware = "r5_image";
 		interrupt-parent = <&gic>;
 		interrupts = <0 49 4>;
 	} ;
diff --git a/drivers/remoteproc/zynqmp_r5_remoteproc.c b/drivers/remoteproc/zynqmp_r5_remoteproc.c
index 855cabf..e41a369 100644
--- a/drivers/remoteproc/zynqmp_r5_remoteproc.c
+++ b/drivers/remoteproc/zynqmp_r5_remoteproc.c
@@ -80,7 +80,8 @@ static struct platform_device *remoteprocdev[MAX_INSTANCES];
 #define DEFAULT_FIRMWARE_NAME	"rproc-rpu-fw"
 
 /* Module parameter */
-static char *firmware;
+static char *firmware = "r5_0_firmware";
+static char *firmware1 = "r5_1_firmware";
 
 struct zynqmp_r5_rproc_pdata;
 
@@ -525,6 +526,7 @@ static int zynqmp_r5_remoteproc_probe(struct platform_device *pdev)
 	struct resource *res;
 	int ret = 0;
 	int method = 0;
+	char *rproc_firmware = 0;
 	struct zynqmp_r5_rproc_pdata *local;
 
 	local = devm_kzalloc(&pdev->dev, sizeof(struct zynqmp_r5_rproc_pdata),
@@ -677,29 +679,23 @@ static int zynqmp_r5_remoteproc_probe(struct platform_device *pdev)
 	}
 	dev_info(&pdev->dev, "ipi_dest_mask: 0x%x\n", local->ipi_dest_mask);
 
-	/* Module param firmware first */
-	prop = of_get_property(pdev->dev.of_node, "firmware", NULL);
-	if (firmware)
-		prop = firmware;
-	else if (!prop)
-		prop = DEFAULT_FIRMWARE_NAME;
-
-	if (prop) {
-		dev_dbg(&pdev->dev, "Using firmware: %s\n", prop);
-		local->rproc = rproc_alloc(&pdev->dev, dev_name(&pdev->dev),
-			&zynqmp_r5_rproc_ops, prop, sizeof(struct rproc));
-		if (!local->rproc) {
-			dev_err(&pdev->dev, "rproc allocation failed\n");
-			goto rproc_fault;
-		}
+	if (local->rpu_id == 0)
+		rproc_firmware = firmware;
+	else
+		rproc_firmware = firmware1;
+
+	dev_dbg(&pdev->dev, "Using firmware: %s\n", rproc_firmware);
+	local->rproc = rproc_alloc(&pdev->dev, dev_name(&pdev->dev),
+		&zynqmp_r5_rproc_ops, rproc_firmware, sizeof(struct rproc));
+	if (!local->rproc) {
+		dev_err(&pdev->dev, "rproc allocation failed\n");
+		goto rproc_fault;
+	}
 
-		ret = rproc_add(local->rproc);
-		if (ret) {
-			dev_err(&pdev->dev, "rproc registration failed\n");
-			goto rproc_fault;
-		}
-	} else {
-		ret = -ENODEV;
+	ret = rproc_add(local->rproc);
+	if (ret) {
+		dev_err(&pdev->dev, "rproc registration failed\n");
+		goto rproc_fault;
 	}
 
 	return ret;
@@ -746,7 +742,9 @@ static struct platform_driver zynqmp_r5_remoteproc_driver = {
 module_platform_driver(zynqmp_r5_remoteproc_driver);
 
 module_param(firmware, charp, 0);
-MODULE_PARM_DESC(firmware, "Override the firmware image name.");
+module_param(firmware1, charp, 0);
+MODULE_PARM_DESC(firmware, "Override the RPU-0 firmware image name.");
+MODULE_PARM_DESC(firmware1, "Override the RPU-1 firmware image name.");
 
 MODULE_AUTHOR("Jason Wu <j.wu@xilinx.com>");
 MODULE_LICENSE("GPL v2");
-- 
1.7.5.4

