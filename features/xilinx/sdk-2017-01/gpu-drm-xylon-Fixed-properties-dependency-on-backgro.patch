From 5688d46433aada6a998525e2096886054ead7714 Mon Sep 17 00:00:00 2001
From: Davor Joja <davorjoja@logicbricks.com>
Date: Tue, 19 May 2015 17:15:44 +0530
Subject: [PATCH 0525/1566] gpu: drm: xylon: Fixed properties dependency on
 background layer

Fixed properties creation and usage depending on logiCVC IP background layer.
If background layer is present, and plane is last, properties will not be
created. If background layer is not present, driver will crash due to NULL
pointer access on "color_transparency" property.

Signed-off-by: Davor Joja <davorjoja@logicbricks.com>
Signed-off-by: Radhey Shyam Pandey <radheys@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Tested-by: Christian Kohn <christian.kohn@xilinx.com>
---
 drivers/gpu/drm/xylon/xylon_plane.c |   64 ++++++++++++++++++++---------------
 1 files changed, 37 insertions(+), 27 deletions(-)

diff --git a/drivers/gpu/drm/xylon/xylon_plane.c b/drivers/gpu/drm/xylon/xylon_plane.c
index c5aff1f..7c7248d 100644
--- a/drivers/gpu/drm/xylon/xylon_plane.c
+++ b/drivers/gpu/drm/xylon/xylon_plane.c
@@ -198,7 +198,7 @@ static int xylon_drm_plane_set_property(struct drm_plane *base_plane,
 	unsigned int val = (unsigned int)value;
 
 	if (property == props->color_transparency) {
-		op.id = XYLON_DRM_PLANE_OP_ID_COLOR_TRANSPARENCY,
+		op.id = XYLON_DRM_PLANE_OP_ID_COLOR_TRANSPARENCY;
 		op.param = (bool)val;
 	} else if (property == props->interlace) {
 		op.id = XYLON_DRM_PLANE_OP_ID_INTERLACE;
@@ -232,39 +232,46 @@ static int xylon_drm_plane_create_properties(struct drm_plane *base_plane)
 	struct xylon_drm_plane *plane = to_xylon_plane(base_plane);
 	struct xylon_drm_plane_properties *props = &plane->properties;
 	int size;
+	bool bg_layer = xylon_cvc_get_info(plane->manager->cvc,
+					   LOGICVC_INFO_BACKGROUND_LAYER,
+					   0);
 	bool last_plane = xylon_cvc_get_info(plane->manager->cvc,
 					     LOGICVC_INFO_LAST_LAYER,
 					     plane->id);
 
-	size = xylon_drm_property_size(property_color_transparency);
-	if (xylon_drm_property_create_list(dev, obj,
-					   &props->color_transparency,
-					   property_color_transparency,
-					   "color_transparency",
-					   size))
-		return -EINVAL;
-	size = xylon_drm_property_size(property_interlace);
-	if (xylon_drm_property_create_list(dev, obj,
-					   &props->interlace,
-					   property_interlace,
-					   "interlace",
-					   size))
-		return -EINVAL;
-	if (!last_plane &&
-	    xylon_drm_property_create_range(dev, obj,
+	if (bg_layer || !last_plane) {
+		size = xylon_drm_property_size(property_color_transparency);
+		if (xylon_drm_property_create_list(dev, obj,
+						   &props->color_transparency,
+						   property_color_transparency,
+						   "color_transparency",
+						   size))
+			return -EINVAL;
+	}
+	if (bg_layer || !last_plane) {
+		if (xylon_drm_property_create_range(dev, obj,
 					    &props->transparency,
 					    "transparency",
 					    XYLON_DRM_PROPERTY_ALPHA_MIN,
 					    XYLON_DRM_PROPERTY_ALPHA_MAX,
 					    XYLON_DRM_PROPERTY_ALPHA_MAX))
-		return -EINVAL;
-	if (!last_plane &&
-	    xylon_drm_property_create_range(dev, obj,
+			return -EINVAL;
+	}
+	if (bg_layer || !last_plane) {
+		if (xylon_drm_property_create_range(dev, obj,
 					    &props->transparent_color,
 					    "transparent_color",
 					    XYLON_DRM_PROPERTY_COLOR_MIN,
 					    XYLON_DRM_PROPERTY_COLOR_MAX,
 					    XYLON_DRM_PROPERTY_COLOR_MIN))
+			return -EINVAL;
+	}
+	size = xylon_drm_property_size(property_interlace);
+	if (xylon_drm_property_create_list(dev, obj,
+					   &props->interlace,
+					   property_interlace,
+					   "interlace",
+					   size))
 		return -EINVAL;
 
 	return 0;
@@ -279,14 +286,17 @@ xylon_drm_plane_properties_initial_value(struct drm_plane *base_plane)
 	struct xylon_drm_plane_op op;
 	bool val;
 
-	op.id = XYLON_DRM_PLANE_OP_ID_COLOR_TRANSPARENCY;
-	op.param = false;
-	xylon_drm_plane_op(base_plane, &op);
+	if (props->color_transparency) {
+		op.id = XYLON_DRM_PLANE_OP_ID_COLOR_TRANSPARENCY;
+		op.param = false;
+		xylon_drm_plane_op(base_plane, &op);
 
-	val = xylon_cvc_get_info(plane->manager->cvc,
-				 LOGICVC_INFO_LAYER_COLOR_TRANSPARENCY,
-				 plane->id);
-	drm_object_property_set_value(obj, props->color_transparency, val);
+		val = xylon_cvc_get_info(plane->manager->cvc,
+					 LOGICVC_INFO_LAYER_COLOR_TRANSPARENCY,
+					 plane->id);
+		drm_object_property_set_value(obj, props->color_transparency,
+					      val);
+	}
 }
 
 static struct drm_plane *
-- 
1.7.5.4

