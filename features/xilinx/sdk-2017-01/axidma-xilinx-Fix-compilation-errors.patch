From 522b087ce1bb19e610e48ab824e6455faf6e6ac3 Mon Sep 17 00:00:00 2001
From: Kedareswara rao Appana <appana.durga.rao@xilinx.com>
Date: Thu, 9 Oct 2014 17:04:18 +0530
Subject: [PATCH 0180/1566] axidma: xilinx: Fix compilation errors

This patch fixes the compilation errors in the axidma test
client driver.

Signed-off-by: Kedareswara rao Appana <appanad@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/dma/xilinx/axidmatest.c |   33 ++++++++++++++++++++++++++-------
 1 files changed, 26 insertions(+), 7 deletions(-)

diff --git a/drivers/dma/xilinx/axidmatest.c b/drivers/dma/xilinx/axidmatest.c
index 8ed6ca7..29a3038 100644
--- a/drivers/dma/xilinx/axidmatest.c
+++ b/drivers/dma/xilinx/axidmatest.c
@@ -23,7 +23,7 @@ static unsigned int test_buf_size = 64;
 module_param(test_buf_size, uint, S_IRUGO);
 MODULE_PARM_DESC(test_buf_size, "Size of the memcpy test buffer");
 
-static unsigned int iterations;
+static unsigned int iterations = 5;
 module_param(iterations, uint, S_IRUGO);
 MODULE_PARM_DESC(iterations,
 		"Iterations before stopping test (default: infinite)");
@@ -53,6 +53,7 @@ struct dmatest_slave_thread {
 	u8 **srcs;
 	u8 **dsts;
 	enum dma_transaction_type type;
+	bool done;
 };
 
 struct dmatest_chan {
@@ -65,9 +66,28 @@ struct dmatest_chan {
  * These are protected by dma_list_mutex since they're only used by
  * the DMA filter function callback
  */
+static DECLARE_WAIT_QUEUE_HEAD(thread_wait);
 static LIST_HEAD(dmatest_channels);
 static unsigned int nr_channels;
 
+static bool is_threaded_test_run(struct dmatest_chan *tx_dtc,
+					struct dmatest_chan *rx_dtc)
+{
+	struct dmatest_slave_thread *thread;
+	int ret = false;
+
+	list_for_each_entry(thread, &tx_dtc->threads, node) {
+		if (!thread->done)
+			ret = true;
+	}
+
+	list_for_each_entry(thread, &rx_dtc->threads, node) {
+		if (!thread->done)
+			ret = true;
+	}
+	return ret;
+}
+
 static unsigned long dmatest_random(void)
 {
 	unsigned long buf;
@@ -206,7 +226,6 @@ static int dmatest_slave_func(void *data)
 	ret = -ENOMEM;
 
 	/* JZ: limit testing scope here */
-	iterations = 5;
 	test_buf_size = 700;
 
 	smp_rmb();
@@ -473,11 +492,8 @@ err_srcs:
 	pr_notice("%s: terminating after %u tests, %u failures (status %d)\n",
 			thread_name, total_tests, failed_tests, ret);
 
-	if (iterations > 0)
-		while (!kthread_should_stop()) {
-			DECLARE_WAIT_QUEUE_HEAD_ONSTACK(wait_dmatest_exit);
-			interruptible_sleep_on(&wait_dmatest_exit);
-		}
+	thread->done = true;
+	wake_up(&thread_wait);
 
 	return ret;
 }
@@ -568,6 +584,9 @@ static int dmatest_add_slave_channels(struct dma_chan *tx_chan,
 	list_add_tail(&rx_dtc->node, &dmatest_channels);
 	nr_channels += 2;
 
+	if (iterations)
+		wait_event(thread_wait, !is_threaded_test_run(tx_dtc, rx_dtc));
+
 	return 0;
 }
 
-- 
1.7.5.4

