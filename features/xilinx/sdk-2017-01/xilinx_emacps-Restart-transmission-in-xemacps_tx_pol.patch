From a0182be39ba1a6de02a0d6465d32c32d13d961c4 Mon Sep 17 00:00:00 2001
From: Thomas Betker <thomas.betker@rohde-schwarz.com>
Date: Sat, 11 May 2013 11:10:44 +0200
Subject: [PATCH 0113/1566] xilinx_emacps: Restart transmission in
 xemacps_tx_poll().

In xemacps_tx_poll(), restart transmission if there are still buffers
in the BD list [and at least one packet was transmitted]. It is
possible that transmission has stopped due to an error, and we don't
want to wait for the next xemacps_start_xmit().

Also, use netif_wake_queue() instead of netif_start_queue() so that
__netif_schedule() is invoked.

Signed-off-by: Thomas Betker <thomas.betker@rohde-schwarz.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |   13 +++++++++++--
 1 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index 0295db0..fa9b2a3 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -1253,6 +1253,7 @@ static void xemacps_tx_poll(unsigned long data)
 	u32 numbdsinhw;
 	struct ring_info *rp;
 	struct sk_buff *skb;
+	unsigned long flags;
 
 	spin_lock(&lp->tx_lock);
 	regval = xemacps_read(lp->baseaddr, XEMACPS_TXSR_OFFSET);
@@ -1290,6 +1291,7 @@ static void xemacps_tx_poll(unsigned long data)
 	}
 	numbdstofree = bdcount - bdpartialcount;
 	lp->tx_bd_freecnt += numbdstofree;
+	numbdsinhw -= numbdstofree;
 	if (!numbdstofree)
 		goto tx_poll_out;
 
@@ -1344,8 +1346,15 @@ static void xemacps_tx_poll(unsigned long data)
 	}
 	wmb();
 
-	if (netif_queue_stopped(ndev))
-		netif_start_queue(ndev);
+	if (numbdsinhw) {
+		spin_lock_irqsave(&lp->nwctrlreg_lock, flags);
+		regval = xemacps_read(lp->baseaddr, XEMACPS_NWCTRL_OFFSET);
+		regval |= XEMACPS_NWCTRL_STARTTX_MASK;
+		xemacps_write(lp->baseaddr, XEMACPS_NWCTRL_OFFSET, regval);
+		spin_unlock_irqrestore(&lp->nwctrlreg_lock, flags);
+	}
+
+	netif_wake_queue(ndev);
 
 tx_poll_out:
 	spin_unlock(&lp->tx_lock);
-- 
1.7.5.4

