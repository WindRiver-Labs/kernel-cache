From b5d43c9f0c282f8a686f632ee669c71943434f14 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Tue, 4 Apr 2017 15:12:38 -0700
Subject: [PATCH 1496/1566] drm: xilinx: crtc: Enable / disable the clock in
 DPMS callback

commit  6b6f654674b3064b2ae7994c2e83bef4ac81a539 from
https://github.com/Xilinx/linux-xlnx.git

There's no reason to enable clock before the DPMS gets on.
Thus instead of enabling the clock in mode_set, enable it
in the DPMS callback.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_crtc.c |   24 ++++++++++++++----------
 1 files changed, 14 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
index 0e60193..df9ce4d 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
@@ -57,6 +57,7 @@ struct xilinx_drm_crtc {
 static void xilinx_drm_crtc_dpms(struct drm_crtc *base_crtc, int dpms)
 {
 	struct xilinx_drm_crtc *crtc = to_xilinx_crtc(base_crtc);
+	int ret;
 
 	DRM_DEBUG_KMS("dpms: %d -> %d\n", crtc->dpms, dpms);
 
@@ -67,6 +68,15 @@ static void xilinx_drm_crtc_dpms(struct drm_crtc *base_crtc, int dpms)
 
 	switch (dpms) {
 	case DRM_MODE_DPMS_ON:
+		if (!crtc->pixel_clock_enabled) {
+			ret = clk_prepare_enable(crtc->pixel_clock);
+			if (ret) {
+				DRM_ERROR("failed to enable a pixel clock\n");
+				crtc->pixel_clock_enabled = false;
+			}
+		}
+		crtc->pixel_clock_enabled = true;
+
 		xilinx_drm_plane_manager_dpms(crtc->plane_manager, dpms);
 		xilinx_drm_plane_dpms(base_crtc->primary, dpms);
 		if (crtc->rgb2yuv)
@@ -91,6 +101,10 @@ static void xilinx_drm_crtc_dpms(struct drm_crtc *base_crtc, int dpms)
 		}
 		xilinx_drm_plane_dpms(base_crtc->primary, dpms);
 		xilinx_drm_plane_manager_dpms(crtc->plane_manager, dpms);
+		if (crtc->pixel_clock_enabled) {
+			clk_disable_unprepare(crtc->pixel_clock);
+			crtc->pixel_clock_enabled = false;
+		}
 		break;
 	}
 }
@@ -146,16 +160,6 @@ static int xilinx_drm_crtc_mode_set(struct drm_crtc *base_crtc,
 		DRM_DEBUG_KMS("actual pixel clock rate(%d) is off by %ld\n",
 				adjusted_mode->clock, diff);
 
-	if (!crtc->pixel_clock_enabled) {
-		ret = clk_prepare_enable(crtc->pixel_clock);
-		if (ret) {
-			DRM_ERROR("failed to enable a pixel clock\n");
-			crtc->pixel_clock_enabled = false;
-			return ret;
-		}
-	}
-	crtc->pixel_clock_enabled = true;
-
 	if (crtc->vtc) {
 		/* set video timing */
 		vm.hactive = adjusted_mode->hdisplay;
-- 
1.7.5.4

