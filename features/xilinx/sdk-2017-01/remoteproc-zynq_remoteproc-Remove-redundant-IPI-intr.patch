From fb2aa0702f47b94a4c383d381f22ba536dd2cc3f Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Wed, 3 Jun 2015 00:10:47 -0700
Subject: [PATCH 1028/1566] remoteproc: zynq_remoteproc: Remove redundant IPI
 intr

commit  c89009f4ecbe413116f432c3b488c20ffd03224c from
https://github.com/Xilinx/linux-xlnx.git

There are 3 IPI intrs required by zynq_remoteproc:

ipino
vring0
vring1

However, it actually just uses 2 which are:
vring0: remote sent message to master
vring1: master used to notify remote

This patch removes ipino but uses vring0 and vring1 for IPI on Zynq platform.

Signed-off-by: Wendy Liang <jliang@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/remoteproc/zynq_remoteproc.c |   19 ++++++-------------
 1 files changed, 6 insertions(+), 13 deletions(-)

diff --git a/drivers/remoteproc/zynq_remoteproc.c b/drivers/remoteproc/zynq_remoteproc.c
index ae24da2..aaf9f5fd 100644
--- a/drivers/remoteproc/zynq_remoteproc.c
+++ b/drivers/remoteproc/zynq_remoteproc.c
@@ -50,7 +50,6 @@ struct irq_list {
 struct zynq_rproc_pdata {
 	struct irq_list mylist;
 	struct rproc *rproc;
-	u32 ipino;
 	u32 vring0;
 	u32 vring1;
 	u32 mem_start;
@@ -260,25 +259,19 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 	}
 
 	/* Allocate free IPI number */
-	ret = of_property_read_u32(pdev->dev.of_node, "ipino", &local->ipino);
+	/* Read vring0 ipi number */
+	ret = of_property_read_u32(pdev->dev.of_node, "vring0", &local->vring0);
 	if (ret < 0) {
 		dev_err(&pdev->dev, "unable to read property");
-		goto irq_fault;
+		goto ipi_fault;
 	}
 
-	ret = set_ipi_handler(local->ipino, ipi_kick, "Firmware kick");
+	ret = set_ipi_handler(local->vring0, ipi_kick, "Firmware kick");
 	if (ret) {
 		dev_err(&pdev->dev, "IPI handler already registered\n");
 		goto irq_fault;
 	}
 
-	/* Read vring0 ipi number */
-	ret = of_property_read_u32(pdev->dev.of_node, "vring0", &local->vring0);
-	if (ret < 0) {
-		dev_err(&pdev->dev, "unable to read property");
-		goto ipi_fault;
-	}
-
 	/* Read vring1 ipi number */
 	ret = of_property_read_u32(pdev->dev.of_node, "vring1", &local->vring1);
 	if (ret < 0) {
@@ -314,7 +307,7 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 rproc_fault:
 	rproc_put(local->rproc);
 ipi_fault:
-	clear_ipi_handler(local->ipino);
+	clear_ipi_handler(local->vring0);
 
 irq_fault:
 	clear_irq(pdev);
@@ -340,7 +333,7 @@ static int __devexit zynq_remoteproc_remove(struct platform_device *pdev)
 
 	dma_release_declared_memory(&pdev->dev);
 
-	clear_ipi_handler(local->ipino);
+	clear_ipi_handler(local->vring0);
 	clear_irq(pdev);
 
 	rproc_del(local->rproc);
-- 
1.7.5.4

