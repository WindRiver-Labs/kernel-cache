From 3875a7623e46e314c9c5116c45ea202af6fd773a Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Wed, 15 Feb 2017 13:46:33 +0100
Subject: [PATCH 1305/1566] Revert "Revert "Revert "pll: zynqmp: Remove the
 disable for pll"""
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

commit  8001b6dae26619e7f558880a7b05caa68a90d2e2 from
https://github.com/Xilinx/linux-xlnx.git

This reverts commit da070999e27b636332c2030ea668574d9085a536.

As the part of changing frequency for DP through VPLL reset is the part
of programming sequence as to do a reset.

This is the sequence from TRM describing APLL:
APLL Clock Generation Sequence: Integer Multipliers and Dividers
This example assumes the input PS_REF_CLK frequency is 50 MHz, the FBDIV
value is 40, and
the output divider is turned on. The output clock is calculated to be
50 MHz x 40/2 = 1000 MHz. For a new frequency of 1600 MHz, the FBDIV
value is switched
to 32 and the output divider is turned off. This example uses the APLL.
Note: Before redoing the PLL clock output frequency, check that the
downstream clocks are in a safe
zone before releasing. For instance, if the APU DIVISOR is set to 2.
1. Set the new FBDIV, CLKOUT value (do not modify other values in the
APLL_CTRL
register).
APLL_CTRL[DIV2] = 0, APLL_CTRL[FBDIV] = 0x20 (APL_CTRL ≤ 0x0000_2000)
2. Set the helper data for APLL_CFG using the helper data in Table 37-5.
3. Set the bypass.
APLL_CTRL[BYPASS] = 1’b1 (APL_CTRL ≤ 0x0000_2008)
4. Assert reset. This is when the new data is actually captured into the
PLL.
APLL_CTRL[RESET] = 1’b1 (APL_CTRL ≤ 0x0000_2009)
5. Deassert reset.
APLL_CTRL[RESET] = 1’b0 (APL_CTRL ≤ 0x0000_2008)
6. Check for LOCK. Wait until: PLL_STATUS [APLL_LOCK] = 1’b1
7. Deassert bypass.
APLL_CTRL[BYPASS] = 1’b0 (APL_CTRL ≤ 0x0000_2000)
The PLL usable clock is set to 1600 MHz.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/zynqmp/pll.c |   20 ++++++++++++++++++++
 1 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/drivers/clk/zynqmp/pll.c b/drivers/clk/zynqmp/pll.c
index b718ae2..ec02903 100644
--- a/drivers/clk/zynqmp/pll.c
+++ b/drivers/clk/zynqmp/pll.c
@@ -233,8 +233,28 @@ static int zynqmp_pll_enable(struct clk_hw *hw)
 	return 0;
 }
 
+/**
+ * zynqmp_pll_disable - Disable clock
+ * @hw:		Handle between common and hardware-specific interfaces
+ *
+ */
+static void zynqmp_pll_disable(struct clk_hw *hw)
+{
+	struct zynqmp_pll *clk = to_zynqmp_pll(hw);
+
+	if (!zynqmp_pll_is_enabled(hw))
+		return;
+
+	pr_info("PLL: shutdown\n");
+
+	/* shut down PLL */
+	zynqmp_pm_mmio_write((u32)(ulong)clk->pll_ctrl, PLLCTRL_RESET_MASK,
+				PLLCTRL_RESET_VAL);
+}
+
 static const struct clk_ops zynqmp_pll_ops = {
 	.enable = zynqmp_pll_enable,
+	.disable = zynqmp_pll_disable,
 	.is_enabled = zynqmp_pll_is_enabled,
 	.round_rate = zynqmp_pll_round_rate,
 	.recalc_rate = zynqmp_pll_recalc_rate,
-- 
1.7.5.4

