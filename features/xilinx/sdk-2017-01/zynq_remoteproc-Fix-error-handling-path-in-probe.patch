From d73b8fe9d12b1a426c6bf40469b2767d23dd4e66 Mon Sep 17 00:00:00 2001
From: Mike Looijmans <mike.looijmans@topic.nl>
Date: Fri, 19 Aug 2016 12:40:33 +0200
Subject: [PATCH 1031/1566] zynq_remoteproc: Fix error handling path in probe

commit  e457b7a391d4b98e020a4b21103ce7ffabe5e480 from
https://github.com/Xilinx/linux-xlnx.git

Mixed used of bracket nesting and goto, use the same pattern everywhere.

Probe returned strage codes on failures when CPI1 did not start. Do not
logical "or" the result of the "cpu_up" call with other errors.

Returned 0 if rproc_alloc() failed. Fix by returning -ENOMEM in that case.

Signed-off-by: Mike Looijmans <mike.looijmans@topic.nl>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/remoteproc/zynq_remoteproc.c |   42 +++++++++++++++++----------------
 1 files changed, 22 insertions(+), 20 deletions(-)

diff --git a/drivers/remoteproc/zynq_remoteproc.c b/drivers/remoteproc/zynq_remoteproc.c
index 155604c..7c064a3 100644
--- a/drivers/remoteproc/zynq_remoteproc.c
+++ b/drivers/remoteproc/zynq_remoteproc.c
@@ -279,24 +279,28 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 	else
 		prop = of_get_property(pdev->dev.of_node, "firmware", NULL);
 
-	if (prop) {
-		dev_dbg(&pdev->dev, "Using firmware: %s\n", prop);
-		local->rproc = rproc_alloc(&pdev->dev, dev_name(&pdev->dev),
-				&zynq_rproc_ops, prop, sizeof(struct rproc));
-		if (!local->rproc) {
-			dev_err(&pdev->dev, "rproc allocation failed\n");
-			goto ipi_fault;
-		}
+	if (!prop) {
+		ret = -ENODEV;
+		dev_err(&pdev->dev, "No firmware\n");
+		goto ipi_fault;
+	}
 
-		ret = rproc_add(local->rproc);
-		if (ret) {
-			dev_err(&pdev->dev, "rproc registration failed\n");
-			goto rproc_fault;
-		}
+	dev_dbg(&pdev->dev, "Using firmware: %s\n", prop);
+	local->rproc = rproc_alloc(&pdev->dev, dev_name(&pdev->dev),
+			&zynq_rproc_ops, prop, sizeof(struct rproc));
+	if (!local->rproc) {
+		ret = -ENOMEM;
+		dev_err(&pdev->dev, "rproc allocation failed\n");
+		goto ipi_fault;
+	}
 
-		return ret;
-	} else
-		ret = -ENODEV;
+	ret = rproc_add(local->rproc);
+	if (ret) {
+		dev_err(&pdev->dev, "rproc registration failed\n");
+		goto rproc_fault;
+	}
+
+	return 0;
 
 rproc_fault:
 	rproc_put(local->rproc);
@@ -310,10 +314,8 @@ dma_mask_fault:
 	dma_release_declared_memory(&pdev->dev);
 
 dma_fault:
-	/* Cpu can't be power on - for example in nosmp mode */
-	ret |= cpu_up(1);
-	if (ret)
-		dev_err(&pdev->dev, "Can't power on cpu1 %d\n", ret);
+	if (cpu_up(1)) /* Cpu can't power on for example in nosmp mode */
+		dev_err(&pdev->dev, "Can't power on cpu1\n");
 
 	return ret;
 }
-- 
1.7.5.4

