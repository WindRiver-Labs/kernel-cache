From 9e8620cbcb5c06957c76a3bf6b66bdf7bc80c074 Mon Sep 17 00:00:00 2001
From: Michal Simek <monstr@monstr.eu>
Date: Mon, 25 Jun 2012 11:10:55 +0200
Subject: [PATCH 1006/1566] remoteproc: zynq: Clean coding style

commit  2f9c22105574c5abcaff310594e3d3328b612151 from
https://github.com/Xilinx/linux-xlnx.git

Remove trailing white spaces.

Signed-off-by: Michal Simek <monstr@monstr.eu>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/remoteproc/zynq_remoteproc.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/remoteproc/zynq_remoteproc.c b/drivers/remoteproc/zynq_remoteproc.c
index 92dd654..65f0113 100644
--- a/drivers/remoteproc/zynq_remoteproc.c
+++ b/drivers/remoteproc/zynq_remoteproc.c
@@ -136,18 +136,18 @@ static irqreturn_t zynq_remoteproc_interrupt(int irq, void *dev_id)
 	dev_err(dev, "GIC IRQ %d is not forwarded correctly\n", irq);
 
 	/*
-	 *  MS: Calling this function doesn't need to be BUG 
+	 *  MS: Calling this function doesn't need to be BUG
 	 * especially for cases where firmware doesn't disable
 	 * interrupts. In next probing can be som interrupts pending.
 	 * The next scenario is for cases when you want to monitor
 	 * non frequent interrupt through Linux kernel. Interrupt happen
-	 * and it is forwarded to Linux which update own statistic 
+	 * and it is forwarded to Linux which update own statistic
 	 * in (/proc/interrupt) and forward it to firmware.
-	 * 
+	 *
 	 * gic_set_cpu(1, irq);	- setup cpu1 as destination cpu
 	 * gic_raise_softirq(cpumask_of(1), irq); - forward irq to firmware
 	 */
-	
+
 	gic_set_cpu(1, irq);
 	return IRQ_HANDLED;
 }
@@ -236,12 +236,12 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 								tmp->irq);
 			goto irq_fault;
 		}
-		
-		/* 
+
+		/*
 		 * MS: Here is place for detecting problem with firmware
 		 * which doesn't work correctly with interrupts
-		 * 
-		 * MS: Comment if you want to count IRQs on Linux 
+		 *
+		 * MS: Comment if you want to count IRQs on Linux
 		 */
 		gic_set_cpu(1, tmp->irq);
 		list_add(&(tmp->list), &(local->mylist.list));
-- 
1.7.5.4

