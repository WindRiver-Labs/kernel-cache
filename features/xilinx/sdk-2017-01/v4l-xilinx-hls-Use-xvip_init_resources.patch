From c2b301c723867bc97b1e555b4bf688add6db5436 Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Thu, 27 Nov 2014 04:03:15 +0200
Subject: [PATCH 0458/1566] v4l: xilinx: hls: Use xvip_init_resources()

Replace the manual ioremap by a call to xvip_init_resources(), which
also handles the functional clock.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
---
 .../bindings/media/xilinx/xlnx,axi-hls.txt         |    3 +++
 drivers/media/platform/xilinx/xilinx-hls.c         |   12 +++++++-----
 2 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/Documentation/devicetree/bindings/media/xilinx/xlnx,axi-hls.txt b/Documentation/devicetree/bindings/media/xilinx/xlnx,axi-hls.txt
index 59d2992..79fa6f5 100644
--- a/Documentation/devicetree/bindings/media/xilinx/xlnx,axi-hls.txt
+++ b/Documentation/devicetree/bindings/media/xilinx/xlnx,axi-hls.txt
@@ -19,6 +19,8 @@ Required properties:
   The HLS core has two registers sets, the first one contains the core
   standard registers and the second one contains the custom user registers.
 
+- clocks: Reference to the video core clock.
+
 - ports: Video ports, using the DT bindings defined in ../video-interfaces.txt.
   The HLS core has one input port (0) and one output port (1).
 
@@ -32,6 +34,7 @@ Example:
 	axi_hls_0: axi_hls@43c00000 {
 		compatible = "xlnx,axi-hls-sobel", "xlnx,axi-hls";
 		reg = <0x43c00000 0x24>, <0x43c00024 0xa0>;
+		clocks = <&clkc 15>;
 
 		ports {
 			#address-cells = <1>;
diff --git a/drivers/media/platform/xilinx/xilinx-hls.c b/drivers/media/platform/xilinx/xilinx-hls.c
index b93e09c..efc1240 100644
--- a/drivers/media/platform/xilinx/xilinx-hls.c
+++ b/drivers/media/platform/xilinx/xilinx-hls.c
@@ -403,10 +403,9 @@ static int xhls_probe(struct platform_device *pdev)
 	if (ret < 0)
 		return ret;
 
-	mem = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-	xhls->xvip.iomem = devm_ioremap_resource(&pdev->dev, mem);
-	if (IS_ERR(xhls->xvip.iomem))
-		return PTR_ERR(xhls->xvip.iomem);
+	ret = xvip_init_resources(&xhls->xvip);
+	if (ret < 0)
+		return ret;
 
 	mem = platform_get_resource(pdev, IORESOURCE_MEM, 1);
 	xhls->user_mem = devm_ioremap_resource(&pdev->dev, mem);
@@ -433,7 +432,7 @@ static int xhls_probe(struct platform_device *pdev)
 	subdev->entity.ops = &xhls_media_ops;
 	ret = media_entity_init(&subdev->entity, 2, xhls->pads, 0);
 	if (ret < 0)
-		return ret;
+		goto error;
 
 	ret = xhls_create_controls(xhls);
 	if (ret < 0)
@@ -454,6 +453,7 @@ static int xhls_probe(struct platform_device *pdev)
 error:
 	v4l2_ctrl_handler_free(&xhls->ctrl_handler);
 	media_entity_cleanup(&subdev->entity);
+	xvip_cleanup_resources(&xhls->xvip);
 	return ret;
 }
 
@@ -466,6 +466,8 @@ static int xhls_remove(struct platform_device *pdev)
 	v4l2_ctrl_handler_free(&xhls->ctrl_handler);
 	media_entity_cleanup(&subdev->entity);
 
+	xvip_cleanup_resources(&xhls->xvip);
+
 	return 0;
 }
 
-- 
1.7.5.4

