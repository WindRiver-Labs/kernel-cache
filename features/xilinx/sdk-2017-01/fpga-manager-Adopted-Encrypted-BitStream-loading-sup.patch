From 875e2f31d201abd54a255e6a627cdda1df92cdec Mon Sep 17 00:00:00 2001
From: Nava kishore Manne <nava.manne@xilinx.com>
Date: Thu, 5 Jan 2017 15:11:12 +0530
Subject: [PATCH 1076/1566] fpga manager: Adopted Encrypted BitStream loading
 support for Xilinx zynqmp.

commit  a17a6e1676d11d8edce795432a00e93aa000d1d0 from
https://github.com/Xilinx/linux-xlnx.git

This commit adds Encrypted BitStream Loading support for the Xilinx
ZynqMp chip.

Signed-off-by: Nava kishore Manne <navam@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/fpga/fpga-mgr.c       |   67 +++++++++++++++++++++++++++++++++++++++++
 drivers/fpga/zynqmp-fpga.c    |   24 +++++++++++---
 include/linux/fpga/fpga-mgr.h |    6 ++++
 3 files changed, 92 insertions(+), 5 deletions(-)

diff --git a/drivers/fpga/fpga-mgr.c b/drivers/fpga/fpga-mgr.c
index 2d57b76..d8473ef 100644
--- a/drivers/fpga/fpga-mgr.c
+++ b/drivers/fpga/fpga-mgr.c
@@ -18,6 +18,7 @@
  * You should have received a copy of the GNU General Public License along with
  * this program.  If not, see <http://www.gnu.org/licenses/>.
  */
+#include <linux/kernel.h>
 #include <linux/firmware.h>
 #include <linux/fpga/fpga-mgr.h>
 #include <linux/idr.h>
@@ -193,14 +194,80 @@ static ssize_t firmware_store(struct device *dev,
 	return count;
 }
 
+static ssize_t key_show(struct device *dev,
+			struct device_attribute *attr, char *buf)
+{
+	struct fpga_manager *mgr = to_fpga_manager(dev);
+
+	return snprintf(buf, ENCRYPTED_KEY_LEN + 1, "%s\n", mgr->key);
+}
+
+static ssize_t key_store(struct device *dev,
+			struct device_attribute *attr,
+			const char *buf, size_t count)
+{
+	struct fpga_manager *mgr = to_fpga_manager(dev);
+
+	memcpy(mgr->key, buf, count);
+
+	return count;
+}
+
+static ssize_t iv_show(struct device *dev,
+			struct device_attribute *attr, char *buf)
+{
+	struct fpga_manager *mgr = to_fpga_manager(dev);
+
+	return snprintf(buf, ENCRYPTED_IV_LEN + 1, "%s\r\n", mgr->iv);
+}
+
+static ssize_t iv_store(struct device *dev,
+			struct device_attribute *attr,
+			const char *buf, size_t count)
+{
+	struct fpga_manager *mgr = to_fpga_manager(dev);
+
+	memcpy(mgr->iv, buf, count);
+
+	return count;
+}
+
+static ssize_t flags_show(struct device *dev,
+			struct device_attribute *attr, char *buf)
+{
+	struct fpga_manager *mgr = to_fpga_manager(dev);
+
+	return sprintf(buf, "%lx\n", mgr->flags);
+}
+
+static ssize_t flags_store(struct device *dev,
+			struct device_attribute *attr,
+			const char *buf, size_t count)
+{
+	struct fpga_manager *mgr = to_fpga_manager(dev);
+	int ret;
+
+	ret = kstrtol(buf, 16, &mgr->flags);
+	if (ret)
+		return ret;
+
+	return count;
+}
+
 static DEVICE_ATTR_RO(name);
 static DEVICE_ATTR_RO(state);
 static DEVICE_ATTR_WO(firmware);
+static DEVICE_ATTR_RW(flags);
+static DEVICE_ATTR_RW(key);
+static DEVICE_ATTR_RW(iv);
 
 static struct attribute *fpga_mgr_attrs[] = {
 	&dev_attr_name.attr,
 	&dev_attr_state.attr,
 	&dev_attr_firmware.attr,
+	&dev_attr_flags.attr,
+	&dev_attr_key.attr,
+	&dev_attr_iv.attr,
 	NULL,
 };
 ATTRIBUTE_GROUPS(fpga_mgr);
diff --git a/drivers/fpga/zynqmp-fpga.c b/drivers/fpga/zynqmp-fpga.c
index be5f564..bcd943a 100644
--- a/drivers/fpga/zynqmp-fpga.c
+++ b/drivers/fpga/zynqmp-fpga.c
@@ -23,7 +23,8 @@
 #include <linux/soc/xilinx/zynqmp/pm.h>
 
 /* Constant Definitions */
-#define IXR_FPGA_DONE_MASK 0X00000008U
+#define IXR_FPGA_DONE_MASK	0X00000008U
+#define IXR_FPGA_ENCRYPTION_EN	0x00000008U
 
 struct zynqmp_fpga_priv {
 	struct device *dev;
@@ -46,19 +47,32 @@ static int zynqmp_fpga_ops_write(struct fpga_manager *mgr,
 {
 	struct zynqmp_fpga_priv *priv;
 	char *kbuf;
+	size_t dma_size;
 	dma_addr_t dma_addr;
 	u32 transfer_length;
 	int ret;
 
 	priv = mgr->priv;
 
-	kbuf = dma_alloc_coherent(priv->dev, size, &dma_addr, GFP_KERNEL);
+	if (mgr->flags & IXR_FPGA_ENCRYPTION_EN)
+		dma_size = size + ENCRYPTED_KEY_LEN + ENCRYPTED_IV_LEN;
+	else
+		dma_size = size;
+
+	kbuf = dma_alloc_coherent(priv->dev, dma_size, &dma_addr, GFP_KERNEL);
 	if (!kbuf)
 		return -ENOMEM;
 
 	memcpy(kbuf, buf, size);
+
+	if (mgr->flags & IXR_FPGA_ENCRYPTION_EN) {
+		memcpy(kbuf + size, mgr->key, ENCRYPTED_KEY_LEN);
+		memcpy(kbuf + size + ENCRYPTED_KEY_LEN, mgr->iv,
+						ENCRYPTED_IV_LEN);
+	}
+
 	__flush_cache_user_range((unsigned long)kbuf,
-				(unsigned long)kbuf + size);
+				 (unsigned long)kbuf + dma_size);
 
 	/**
 	 * Translate size from bytes to number of 32bit words that
@@ -69,9 +83,9 @@ static int zynqmp_fpga_ops_write(struct fpga_manager *mgr,
 	else
 		transfer_length = size >> 2;
 
-	ret = zynqmp_pm_fpga_load(dma_addr, transfer_length, priv->flags);
+	ret = zynqmp_pm_fpga_load(dma_addr, transfer_length, mgr->flags);
 
-	dma_free_coherent(priv->dev, size, kbuf, dma_addr);
+	dma_free_coherent(priv->dev, dma_size, kbuf, dma_addr);
 
 	return ret;
 }
diff --git a/include/linux/fpga/fpga-mgr.h b/include/linux/fpga/fpga-mgr.h
index 0940bf4..6ed3d6c 100644
--- a/include/linux/fpga/fpga-mgr.h
+++ b/include/linux/fpga/fpga-mgr.h
@@ -21,6 +21,9 @@
 #ifndef _LINUX_FPGA_MGR_H
 #define _LINUX_FPGA_MGR_H
 
+#define ENCRYPTED_KEY_LEN	64 /* Bytes */
+#define ENCRYPTED_IV_LEN	24 /* Bytes */
+
 struct fpga_manager;
 
 /**
@@ -100,6 +103,9 @@ struct fpga_manager_ops {
  */
 struct fpga_manager {
 	const char *name;
+	long int flags;
+	char key[ENCRYPTED_KEY_LEN];
+	char iv[ENCRYPTED_IV_LEN];
 	struct device dev;
 	struct mutex ref_mutex;
 	enum fpga_mgr_states state;
-- 
1.7.5.4

