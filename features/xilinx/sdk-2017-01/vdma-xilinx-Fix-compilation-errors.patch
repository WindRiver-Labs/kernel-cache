From 618ba3af5c138167ef7dd074f8ceef8c84e38b8f Mon Sep 17 00:00:00 2001
From: Kedareswara rao Appana <appana.durga.rao@xilinx.com>
Date: Thu, 9 Oct 2014 17:04:16 +0530
Subject: [PATCH 0193/1566] vdma: xilinx: Fix compilation errors

This patch fixes the compilation errors in the vdma test
client driver.

Signed-off-by: Kedareswara rao Appana <appanad@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/dma/xilinx/vdmatest.c |   33 ++++++++++++++++++++++++++-------
 1 files changed, 26 insertions(+), 7 deletions(-)

diff --git a/drivers/dma/xilinx/vdmatest.c b/drivers/dma/xilinx/vdmatest.c
index 627169d..0925e1b 100644
--- a/drivers/dma/xilinx/vdmatest.c
+++ b/drivers/dma/xilinx/vdmatest.c
@@ -32,7 +32,7 @@ static unsigned int test_buf_size = 64;
 module_param(test_buf_size, uint, S_IRUGO);
 MODULE_PARM_DESC(test_buf_size, "Size of the memcpy test buffer");
 
-static unsigned int iterations;
+static unsigned int iterations = 1;
 module_param(iterations, uint, S_IRUGO);
 MODULE_PARM_DESC(iterations,
 		"Iterations before stopping test (default: infinite)");
@@ -75,6 +75,7 @@ struct xilinx_vdmatest_slave_thread {
 	u8 **srcs;
 	u8 **dsts;
 	enum dma_transaction_type type;
+	bool done;
 };
 
 /**
@@ -90,6 +91,7 @@ struct xilinx_vdmatest_chan {
 };
 
 /* Global variables */
+static DECLARE_WAIT_QUEUE_HEAD(thread_wait);
 static LIST_HEAD(xilinx_vdmatest_channels);
 static unsigned int nr_channels;
 static unsigned int frm_cnt;
@@ -97,6 +99,24 @@ static dma_addr_t dma_srcs[MAX_NUM_FRAMES];
 static dma_addr_t dma_dsts[MAX_NUM_FRAMES];
 static struct dma_interleaved_template xt;
 
+static bool is_threaded_test_run(struct xilinx_vdmatest_chan *tx_dtc,
+					struct xilinx_vdmatest_chan *rx_dtc)
+{
+	struct xilinx_vdmatest_slave_thread *thread;
+	int ret = false;
+
+	list_for_each_entry(thread, &tx_dtc->threads, node) {
+		if (!thread->done)
+			ret = true;
+	}
+
+	list_for_each_entry(thread, &rx_dtc->threads, node) {
+		if (!thread->done)
+			ret = true;
+	}
+	return ret;
+}
+
 static void xilinx_vdmatest_init_srcs(u8 **bufs, unsigned int start,
 					unsigned int len)
 {
@@ -222,7 +242,6 @@ static int xilinx_vdmatest_slave_func(void *data)
 	thread_name = current->comm;
 
 	/* Limit testing scope here */
-	iterations = 1;
 	test_buf_size = hsize * vsize;
 
 	/* This barrier ensures 'thread' is initialized and
@@ -461,11 +480,8 @@ err_srcs:
 	pr_notice("%s: terminating after %u tests, %u failures (status %d)\n",
 			thread_name, total_tests, failed_tests, ret);
 
-	if (iterations > 0)
-		while (!kthread_should_stop()) {
-			DECLARE_WAIT_QUEUE_HEAD_ONSTACK(wait_vdmatest_exit);
-			interruptible_sleep_on(&wait_vdmatest_exit);
-		}
+	thread->done = true;
+	wake_up(&thread_wait);
 
 	return ret;
 }
@@ -552,6 +568,9 @@ static int xilinx_vdmatest_add_slave_channels(struct dma_chan *tx_chan,
 	list_add_tail(&rx_dtc->node, &xilinx_vdmatest_channels);
 	nr_channels += 2;
 
+	if (iterations)
+		wait_event(thread_wait, !is_threaded_test_run(tx_dtc, rx_dtc));
+
 	return 0;
 }
 
-- 
1.7.5.4

