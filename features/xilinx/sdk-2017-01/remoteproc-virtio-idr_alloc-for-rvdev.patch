From 9957150e6f33853a31a7d4f38682e9cf9427b4ad Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Tue, 31 Jan 2017 23:49:10 -0800
Subject: [PATCH 1215/1566] remoteproc: virtio: idr_alloc for rvdev

commit  9957880dcb1bf485b0f5f7301ff95a61564809ef from
https://github.com/Xilinx/linux-xlnx.git

use idr_alloc to allocate notifyid for rvdev and set it
to the resource table.

Signed-off-by: Wendy Liang <jliang@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/remoteproc/remoteproc_core.c   |    4 +---
 drivers/remoteproc/remoteproc_virtio.c |   27 +++++++++++++++++++++++++++
 2 files changed, 28 insertions(+), 3 deletions(-)

diff --git a/drivers/remoteproc/remoteproc_core.c b/drivers/remoteproc/remoteproc_core.c
index bd580e8b..bd8af28 100644
--- a/drivers/remoteproc/remoteproc_core.c
+++ b/drivers/remoteproc/remoteproc_core.c
@@ -272,12 +272,10 @@ int rproc_alloc_vring(struct rproc_vdev *rvdev, int i)
 
 	/*
 	 * Assign an rproc-wide unique index for this vring
-	 * TODO: assign a notifyid for rvdev updates as well
-	 * TODO: support predefined notifyids (via resource table)
 	 */
 	ret = rproc_idr_alloc(rproc, rvring, RPROC_IDR_VRING, 0, 0);
 	if (ret < 0) {
-		dev_err(dev, "idr_alloc failed: %d\n", ret);
+		dev_err(dev, "rvfing idr_alloc failed: %d\n", ret);
 		dma_free_coherent(dev->parent, size, va, dma);
 		return ret;
 	}
diff --git a/drivers/remoteproc/remoteproc_virtio.c b/drivers/remoteproc/remoteproc_virtio.c
index dc458b3..6f877c2 100644
--- a/drivers/remoteproc/remoteproc_virtio.c
+++ b/drivers/remoteproc/remoteproc_virtio.c
@@ -366,6 +366,8 @@ int rproc_add_virtio_dev(struct rproc_vdev *rvdev, int id)
 	struct device *dev = &rproc->dev;
 	struct virtio_device *vdev = &rvdev->vdev;
 	int ret;
+	int idr_start, idr_end;
+	struct fw_rsc_vdev *rsc;
 
 	vdev->id.device	= id,
 	vdev->config = &rproc_virtio_config_ops,
@@ -383,6 +385,25 @@ int rproc_add_virtio_dev(struct rproc_vdev *rvdev, int id)
 	 */
 	get_device(&rproc->dev);
 
+	/*
+	 * Assign an rproc-wide unique index for this rvdev
+	 */
+	rsc = (void *)rproc->table_ptr + rvdev->rsc_offset;
+	if (rsc->notifyid == FW_RSC_ADDR_ANY) {
+		idr_start = 0;
+		idr_end = 0;
+	} else {
+		idr_start = rsc->notifyid;
+		idr_end = idr_start + 1;
+	}
+	ret = rproc_idr_alloc(rproc, rvdev, RPROC_IDR_VDEV,
+			idr_start, idr_end);
+	if (ret < 0) {
+		dev_err(dev, "rvdev idr_alloc failed: %d\n", ret);
+		return ret;
+	}
+	rsc->notifyid = ret;
+
 	ret = register_virtio_device(vdev);
 	if (ret) {
 		put_device(&rproc->dev);
@@ -404,5 +425,11 @@ out:
  */
 void rproc_remove_virtio_dev(struct rproc_vdev *rvdev)
 {
+	struct rproc *rproc = rvdev->rproc;
+	struct fw_rsc_vdev *rsc;
+
+	rsc = (void *)rproc->table_ptr + rvdev->rsc_offset;
+	rproc_idr_remove(rproc, rsc->notifyid);
+
 	unregister_virtio_device(&rvdev->vdev);
 }
-- 
1.7.5.4

