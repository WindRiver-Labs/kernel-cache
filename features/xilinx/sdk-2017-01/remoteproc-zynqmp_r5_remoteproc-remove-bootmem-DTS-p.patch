From 7279718d35d6fd9db24263f9854eeecb5d9ff75e Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Thu, 13 Aug 2015 07:23:06 -0700
Subject: [PATCH 0832/1566] remoteproc: zynqmp_r5_remoteproc: remove bootmem
 DTS property

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Remove unnecessary bootmem property, tell whether boot from
TCM or OCM by getting the entry from firmware ELF.

Signed-off-by: Wendy Liang <jliang@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit b32a12bcd2798148689229926d0f6c7768b702a9)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../bindings/remoteproc/r5_remoteproc.txt          |    2 -
 drivers/remoteproc/zynqmp_r5_remoteproc.c          |   52 +++++++++++++------
 2 files changed, 35 insertions(+), 19 deletions(-)

diff --git a/Documentation/devicetree/bindings/remoteproc/r5_remoteproc.txt b/Documentation/devicetree/bindings/remoteproc/r5_remoteproc.txt
index 3f0f584..2b9cc16 100644
--- a/Documentation/devicetree/bindings/remoteproc/r5_remoteproc.txt
+++ b/Documentation/devicetree/bindings/remoteproc/r5_remoteproc.txt
@@ -23,7 +23,6 @@ Required properties:
 
 Optional properties:
 --------------------
- - bootmem : R5 boot device (valid string, ocm or tcm), default is ocm.
  - core_conf : R5 core configuration (valid string - split0 or split1 or
                lock-step), default is lock-step.
  - method : RPU and IPI control method - direct, smc, hvc, default is smc.
@@ -36,7 +35,6 @@ Example:
 		reg-names = "vring0", "ipi", "rpu_base", "apb_base";
 		core_conf = "split0";
 		method = "direct";
-		bootmem = "ocm";
 		interrupt-parent = <&gic>;
 		interrupts = <0 49 4>;
 	} ;
diff --git a/drivers/remoteproc/zynqmp_r5_remoteproc.c b/drivers/remoteproc/zynqmp_r5_remoteproc.c
index f84edca..5295fca 100644
--- a/drivers/remoteproc/zynqmp_r5_remoteproc.c
+++ b/drivers/remoteproc/zynqmp_r5_remoteproc.c
@@ -167,6 +167,27 @@ struct zynqmp_r5_rproc_pdata {
 	u32 vring0;
 };
 
+/* Get firmware ELF file entry address */
+static int get_firmware_entry_addr(struct zynqmp_r5_rproc_pdata *pdata,
+			u32 *elf_entry_p)
+{
+	struct elf32_hdr *ehdr = 0;
+	const struct firmware *firmware_p;
+	struct rproc *rproc = pdata->rproc;
+	int ret;
+
+	ret = request_firmware(&firmware_p, rproc->firmware, &rproc->dev);
+	if (ret < 0) {
+		dev_err(&rproc->dev, "%s: request_firmware failed: %d\n",
+			__func__, ret);
+		return ret;
+	}
+	ehdr = (struct elf32_hdr *)firmware_p->data;
+	*elf_entry_p = (unsigned int)ehdr->e_entry;
+	release_firmware(firmware_p);
+	return 0;
+}
+
 /*
  * TODO: Update HW RPU operation when the driver is ready
  */
@@ -437,6 +458,8 @@ static int zynqmp_r5_rproc_start(struct rproc *rproc)
 	struct device *dev = rproc->dev.parent;
 	struct platform_device *pdev = to_platform_device(dev);
 	struct zynqmp_r5_rproc_pdata *local = platform_get_drvdata(pdev);
+	u32 bootaddr = 0;
+	int ret;
 
 	dev_dbg(dev, "%s\n", __func__);
 	/* limit to two RPU support */
@@ -453,6 +476,18 @@ static int zynqmp_r5_rproc_start(struct rproc *rproc)
 	 */
 	wmb();
 	/* Set up R5 */
+	ret = get_firmware_entry_addr(local, &bootaddr);
+	if (ret < 0) {
+		dev_err(dev, "%s: failed to get RPU boot addr.\n", __func__);
+		return ret;
+	}
+	if (!bootaddr)
+		local->bootmem = TCM;
+	else
+		local->bootmem = OCM;
+	dev_info(dev, "RPU boot from %s.",
+		local->bootmem == OCM ? "OCM" : "TCM");
+
 	local->rpu_ops->core_conf(local);
 	local->rpu_ops->en_reset(local, true);
 	local->rpu_ops->halt(local, true);
@@ -661,23 +696,6 @@ static int zynqmp_r5_remoteproc_probe(struct platform_device *pdev)
 		}
 	}
 
-	prop = of_get_property(pdev->dev.of_node, "bootmem", NULL);
-	if (!prop) {
-		dev_warn(&pdev->dev, "default bootmem property used: tcm\n");
-		prop = "tcm";
-	}
-
-	dev_info(&pdev->dev, "RPU bootmem: %s\n", prop);
-	if (!strcmp(prop, "tcm")) {
-		local->bootmem = TCM;
-	} else if (!strcmp(prop, "ocm")) {
-		local->bootmem = OCM;
-	} else {
-		dev_err(&pdev->dev, "Invalid R5 bootmem property - %s\n",
-			prop);
-		goto dma_mask_fault;
-	}
-
 	/* IPI IRQ */
 	local->vring0 = platform_get_irq(pdev, 0);
 	if (local->vring0 < 0) {
-- 
1.7.5.4

