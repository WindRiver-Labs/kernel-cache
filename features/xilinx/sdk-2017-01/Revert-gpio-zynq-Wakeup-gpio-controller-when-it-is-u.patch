From 5583b556f26f0595c835f26c52f298ad8ff28207 Mon Sep 17 00:00:00 2001
From: Catalin Enache <catalin.enache@windriver.com>
Date: Fri, 2 Mar 2018 17:19:42 +0200
Subject: [PATCH] Revert "gpio: zynq: Wakeup gpio controller when it is used
 as IRQ controller"

commit 348162be53596ab789ee55345e871bf022d6a86b from
    https://github.com/Xilinx/linux-xlnx.git

This reverts commit 6a8c7961d7749f2a6d56943c5224432627b87fdf.

I am not able to replicate this issue.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Catalin Enache <catalin.enache@windriver.com>
---
 drivers/gpio/gpio-zynq.c |   39 ---------------------------------------
 1 files changed, 0 insertions(+), 39 deletions(-)

diff --git a/drivers/gpio/gpio-zynq.c b/drivers/gpio/gpio-zynq.c
index f29b994..747adf6 100644
--- a/drivers/gpio/gpio-zynq.c
+++ b/drivers/gpio/gpio-zynq.c
@@ -11,7 +11,6 @@
 
 #include <linux/bitops.h>
 #include <linux/clk.h>
-#include <linux/gpio.h>
 #include <linux/gpio/driver.h>
 #include <linux/init.h>
 #include <linux/interrupt.h>
@@ -21,8 +20,6 @@
 #include <linux/pm_runtime.h>
 #include <linux/of.h>
 
-#include "gpiolib.h"
-
 #define DRIVER_NAME "zynq-gpio"
 
 /* Maximum banks */
@@ -493,38 +490,6 @@ static int zynq_gpio_set_wake(struct irq_data *data, unsigned int on)
 	return 0;
 }
 
-static int zynq_gpio_irq_request_resources(struct irq_data *d)
-{
-	struct gpio_chip *chip = irq_data_get_irq_chip_data(d);
-	int ret;
-
-	if (!try_module_get(chip->gpiodev->owner))
-		return -ENODEV;
-
-	ret = pm_runtime_get_sync(chip->parent);
-	if (ret < 0) {
-		module_put(chip->gpiodev->owner);
-		return ret;
-	}
-
-	if (gpiochip_lock_as_irq(chip, d->hwirq)) {
-		chip_err(chip, "unable to lock HW IRQ %lu for IRQ\n", d->hwirq);
-		pm_runtime_put(chip->parent);
-		module_put(chip->gpiodev->owner);
-		return -EINVAL;
-	}
-	return 0;
-}
-
-static void zynq_gpio_irq_release_resources(struct irq_data *d)
-{
-	struct gpio_chip *chip = irq_data_get_irq_chip_data(d);
-
-	gpiochip_unlock_as_irq(chip, d->hwirq);
-	pm_runtime_put(chip->parent);
-	module_put(chip->gpiodev->owner);
-}
-
 /* irq chip descriptor */
 static struct irq_chip zynq_gpio_level_irqchip = {
 	.name		= DRIVER_NAME,
@@ -534,8 +499,6 @@ static struct irq_chip zynq_gpio_level_irqchip = {
 	.irq_unmask	= zynq_gpio_irq_unmask,
 	.irq_set_type	= zynq_gpio_set_irq_type,
 	.irq_set_wake	= zynq_gpio_set_wake,
-	.irq_request_resources = zynq_gpio_irq_request_resources,
-	.irq_release_resources = zynq_gpio_irq_release_resources,
 	.flags		= IRQCHIP_EOI_THREADED | IRQCHIP_EOI_IF_HANDLED |
 			  IRQCHIP_MASK_ON_SUSPEND,
 };
@@ -548,8 +511,6 @@ static struct irq_chip zynq_gpio_edge_irqchip = {
 	.irq_unmask	= zynq_gpio_irq_unmask,
 	.irq_set_type	= zynq_gpio_set_irq_type,
 	.irq_set_wake	= zynq_gpio_set_wake,
-	.irq_request_resources = zynq_gpio_irq_request_resources,
-	.irq_release_resources = zynq_gpio_irq_release_resources,
 	.flags		= IRQCHIP_MASK_ON_SUSPEND,
 };
 
-- 
1.7.5.4

