From ad92958272babf317a1cdd82e8164aeb852e2caa Mon Sep 17 00:00:00 2001
From: Jeffrey Mouroux <jmouroux@xilinx.com>
Date: Mon, 10 Apr 2017 16:22:26 -0700
Subject: [PATCH 1559/1566] Documentation: devicetree: bindings: dma: xilinx:
 Video Framebuffer IP

commit  b77e307b228632f389c4f1b49119354772d63067 from
https://github.com/Xilinx/linux-xlnx.git

Signed-off-by: Radhey Pandey <radheys@xilinx.com>
Signed-off-by: John Nichols <jnichol@xilinx.com>
Signed-off-by: Jeffrey Mouroux <jmouroux@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../bindings/dma/xilinx/xilinx_frmbuf.txt          |   45 ++++++++++++++++++++
 1 files changed, 45 insertions(+), 0 deletions(-)
 create mode 100644 Documentation/devicetree/bindings/dma/xilinx/xilinx_frmbuf.txt

diff --git a/Documentation/devicetree/bindings/dma/xilinx/xilinx_frmbuf.txt b/Documentation/devicetree/bindings/dma/xilinx/xilinx_frmbuf.txt
new file mode 100644
index 0000000..8517ba0
--- /dev/null
+++ b/Documentation/devicetree/bindings/dma/xilinx/xilinx_frmbuf.txt
@@ -0,0 +1,45 @@
+The Xilinx framebuffer DMA engine supports two soft IP blocks: one IP
+block is used for reading video frame data from memory (FB Read) to the device
+and the other IP block is used for writing video frame data from the device
+to memory (FB Write).  Both the FB Read/Write IP blocks are aware of the
+format of the data being written to or read from memory including RGB and
+YUV in packed, planar, and semi-planar formats.  Because the FB Read/Write
+is format aware, only one buffer pointer is needed by the IP blocks even
+when planar or semi-planar format are used.
+
+FB Read Required propertie(s):
+- compatible		: Should be "xlnx,axi-frmbuf-rd-1.00.a"
+
+FB Write Required propertie(s):
+- compatible		: Should be "xlnx,axi-frmbuf-wr-1.00.a"
+
+Required Properties Common to both FB Read and FB Write:
+- #dma-cells		: should be 1
+- interrupt-parent	: Interrupt controller the interrupt is routed through
+- interrupts		: Should contain DMA channel interrupt
+- reset-gpios		: Should contain GPIO reset phandle
+- reg			: Memory map for module access
+
+Examples
+
+FB Read Example:
+++++++++
+v_frmbuf_rd_0: v_frmbuf_rd@80000000 {
+        #dma-cells = <1>;
+        compatible = "xlnx,axi-frmbuf-rd-1.00.a";
+        interrupt-parent = <&gic>;
+        interrupts = <0 92 4>;
+        reset-gpios = <&gpio 80 1>;
+        reg = <0x0 0x80000000 0x0 0x10000>;
+};
+
+FB Write Example:
+++++++++
+v_frmbuf_wr_0: v_frmbuf_wr@80000000 {
+        #dma-cells = <1>;
+        compatible = "xlnx,axi-frmbuf-wr-1.00.a";
+        interrupt-parent = <&gic>;
+        interrupts = <0 92 4>;
+        reset-gpios = <&gpio 80 1>;
+        reg = <0x0 0x80000000 0x0 0x10000>;
+};
-- 
1.7.5.4

