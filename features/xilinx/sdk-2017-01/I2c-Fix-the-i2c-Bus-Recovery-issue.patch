From a55d377f21a0a378548bcce3d8f927ff6ba8ec8e Mon Sep 17 00:00:00 2001
From: Nava kishore Manne <nava.manne@xilinx.com>
Date: Fri, 24 Feb 2017 15:04:30 +0530
Subject: [PATCH 1364/1566] I2c: Fix the i2c Bus Recovery issue.

commit  5639be4513e6d3baf7524052e1abd2a53d04f81b from
https://github.com/Xilinx/linux-xlnx.git

Once i2c bus SCL/SDA are stuck low during the transfer,
Then only we need to call the i2c_recover_bus()
instead of calling for all error cases.

This patch fix this issue

Signed-off-by: Nava kishore Manne <navam@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/i2c/busses/i2c-cadence.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/drivers/i2c/busses/i2c-cadence.c b/drivers/i2c/busses/i2c-cadence.c
index 2143bfd..7b8bad5 100644
--- a/drivers/i2c/busses/i2c-cadence.c
+++ b/drivers/i2c/busses/i2c-cadence.c
@@ -571,8 +571,6 @@ static void cdns_i2c_master_reset(struct i2c_adapter *adap)
 	/* Clear the status register */
 	regval = cdns_i2c_readreg(CDNS_I2C_SR_OFFSET);
 	cdns_i2c_writereg(regval, CDNS_I2C_SR_OFFSET);
-
-	i2c_recover_bus(adap);
 }
 
 static int cdns_i2c_process_msg(struct cdns_i2c *id, struct i2c_msg *msg,
@@ -608,6 +606,7 @@ static int cdns_i2c_process_msg(struct cdns_i2c *id, struct i2c_msg *msg,
 	/* Wait for the signal of completion */
 	time_left = wait_for_completion_timeout(&id->xfer_done, adap->timeout);
 	if (time_left == 0) {
+		i2c_recover_bus(adap);
 		cdns_i2c_master_reset(adap);
 		dev_err(id->adap.dev.parent,
 				"timeout waiting on completion\n");
-- 
1.7.5.4

