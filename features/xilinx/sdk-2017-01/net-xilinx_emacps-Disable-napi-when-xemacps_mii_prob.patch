From 39743ba6091acdf70b739fc159a6daab3bb5ac91 Mon Sep 17 00:00:00 2001
From: Punnaiah Choudary Kalluri <punnaiah.choudary.kalluri@xilinx.com>
Date: Tue, 10 Dec 2013 11:02:40 +0530
Subject: [PATCH 0210/1566] net: xilinx_emacps: Disable napi when
 xemacps_mii_probe fails

In xemacps_open(), call napi_disable() when the xemacps_mii_probe() fails.
This change is needed to undo the napi_enable() which called before the
xemacps_mii_probe().

This fix is needed because of below commit
"net: xilinx_emacps: Fix race condition occurs during link up/down"
(sha1: 49028589bcd9c7d2657b3b6fec82d216a9c9f5c6)

Reported-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index b56b6ae..17350d9 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -1946,6 +1946,7 @@ static int xemacps_open(struct net_device *ndev)
 	return 0;
 
 err_pm_put:
+	napi_disable(&lp->napi);
 	xemacps_reset_hw(lp);
 	pm_runtime_put(&lp->pdev->dev);
 err_free_rings:
-- 
1.7.5.4

