From 9144c0d79ce3754cf206a2ce5f7beba081d81172 Mon Sep 17 00:00:00 2001
From: Kedareswara rao Appana <appanad@xilinx.com>
Date: Fri, 2 Dec 2016 11:41:54 +0530
Subject: [PATCH 1068/1566] net: ethernet: xilinx: Add support for 2.5G MAC

commit  5e8a3563420238aad936e628bb8431e7f486d636 from
https://github.com/Xilinx/linux-xlnx.git

This patch adds support for 2.5G MAC in the driver.

Signed-off-by: Kedareswara rao Appana <appanad@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_axienet.h      |    3 ++
 drivers/net/ethernet/xilinx/xilinx_axienet_main.c |   22 +++++++++++++++++---
 2 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet.h b/drivers/net/ethernet/xilinx/xilinx_axienet.h
index 1f22df4..616f185 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet.h
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet.h
@@ -290,6 +290,7 @@
 #define XAE_EMMC_LINKSPD_10	0x00000000 /* Link Speed mask for 10 Mbit */
 #define XAE_EMMC_LINKSPD_100	0x40000000 /* Link Speed mask for 100 Mbit */
 #define XAE_EMMC_LINKSPD_1000	0x80000000 /* Link Speed mask for 1000 Mbit */
+#define XAE_EMMC_LINKSPD_2500	0x80000000 /* Link Speed mask for 2500 Mbit */
 
 /* Bit masks for Axi Ethernet PHYC register */
 #define XAE_PHYC_SGMIILINKSPEED_MASK	0xC0000000 /* SGMII link speed mask*/
@@ -547,12 +548,14 @@ struct axienet_local {
  * enum axienet_ip_type - AXIENET IP/MAC type.
  *
  * @XAXIENET_1G:	 IP is 1G MAC
+ * @XAXIENET_2_5G:	 IP type is 2.5G MAC.
  * @XAXIENET_LEGACY_10G: IP type is legacy 10G MAC.
  * @XAXIENET_10G_25G:	 IP type is 10G/25G MAC(XXV MAC).
  *
  */
 enum axienet_ip_type {
 	XAXIENET_1G = 0,
+	XAXIENET_2_5G,
 	XAXIENET_LEGACY_10G,
 	XAXIENET_10G_25G,
 };
diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
index e42ba0c..da89541 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
@@ -347,7 +347,8 @@ static void axienet_set_mac_address(struct net_device *ndev, void *address)
 	if (!is_valid_ether_addr(ndev->dev_addr))
 		eth_random_addr(ndev->dev_addr);
 
-	if (lp->axienet_config->mactype != XAXIENET_1G)
+	if (lp->axienet_config->mactype != XAXIENET_1G &&
+	    lp->axienet_config->mactype != XAXIENET_2_5G)
 		return;
 
 	/* Set up unicast MAC address filter set its mac address */
@@ -646,6 +647,8 @@ static void axienet_adjust_link(struct net_device *ndev)
 			emmc_reg &= ~XAE_EMMC_LINKSPEED_MASK;
 
 			switch (phy->speed) {
+			case SPEED_2500:
+				emmc_reg |= XAE_EMMC_LINKSPD_2500;
 			case SPEED_1000:
 				emmc_reg |= XAE_EMMC_LINKSPD_1000;
 				break;
@@ -903,7 +906,8 @@ static void axienet_create_tsheader(struct axienet_local *lp, u8 *buf,
 		buf[3] = (cur_p->ptp_tx_ts_tag >> 8) & 0xFF;
 	}
 
-	if (lp->axienet_config->mactype == XAXIENET_1G) {
+	if (lp->axienet_config->mactype == XAXIENET_1G ||
+	    lp->axienet_config->mactype == XAXIENET_2_5G) {
 		memcpy(&val, buf, AXIENET_TS_HEADER_LEN);
 		swab64s(&val);
 		memcpy(buf, &val, AXIENET_TS_HEADER_LEN);
@@ -1117,7 +1121,8 @@ static int axienet_recv(struct net_device *ndev, int budget)
 			u64 time64;
 			struct skb_shared_hwtstamps *shhwtstamps;
 
-			if (lp->axienet_config->mactype == XAXIENET_1G) {
+			if (lp->axienet_config->mactype == XAXIENET_1G ||
+			    lp->axienet_config->mactype == XAXIENET_2_5G) {
 				/* The first 8 bytes will be the timestamp */
 				memcpy(&sec, &skb->data[0], 4);
 				memcpy(&nsec, &skb->data[4], 4);
@@ -1428,7 +1433,8 @@ static int axienet_open(struct net_device *ndev)
 	if (ret < 0)
 		return ret;
 
-	if (lp->phy_node && (lp->axienet_config->mactype == XAXIENET_1G)) {
+	if (lp->phy_node && ((lp->axienet_config->mactype == XAXIENET_1G) ||
+			     (lp->axienet_config->mactype == XAXIENET_2_5G))) {
 		lp->phy_dev = of_phy_connect(lp->ndev, lp->phy_node,
 					     axienet_adjust_link, lp->phy_flags,
 					     lp->phy_interface);
@@ -2124,6 +2130,12 @@ static const struct axienet_config axienet_1g_config = {
 	.tx_ptplen = XAE_TX_PTP_LEN,
 };
 
+static const struct axienet_config axienet_2_5g_config = {
+	.mactype = XAXIENET_2_5G,
+	.setoptions = axienet_setoptions,
+	.tx_ptplen = XAE_TX_PTP_LEN,
+};
+
 static const struct axienet_config axienet_10g_config = {
 	.mactype = XAXIENET_LEGACY_10G,
 	.setoptions = axienet_setoptions,
@@ -2141,6 +2153,8 @@ static const struct of_device_id axienet_of_match[] = {
 	{ .compatible = "xlnx,axi-ethernet-1.00.a", .data = &axienet_1g_config},
 	{ .compatible = "xlnx,axi-ethernet-1.01.a", .data = &axienet_1g_config},
 	{ .compatible = "xlnx,axi-ethernet-2.01.a", .data = &axienet_1g_config},
+	{ .compatible = "xlnx,axi-2_5-gig-ethernet-1.0",
+						.data = &axienet_2_5g_config},
 	{ .compatible = "xlnx,ten-gig-eth-mac", .data = &axienet_10g_config},
 	{ .compatible = "xlnx,xxv-ethernet-1.0",
 						.data = &axienet_10g25g_config},
-- 
1.7.5.4

