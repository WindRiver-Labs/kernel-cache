From be513bbfa6379121b6612b4b41db61629dba59aa Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Wed, 9 Nov 2016 10:37:07 -0800
Subject: [PATCH 1050/1566] drm: xilinx: dp_sub: Store drm formats

commit  8e0dd86c0a715c52d094efcd9deb5921f429e301 from
https://github.com/Xilinx/linux-xlnx.git

Store all supported formats for each layer. Stored formats are returned
to support dynamic format switching. With this, it's not required to
specify the layer format in DT. Thus, the layer pixel format is optional,
and it falls back to the format format. Still user can specify the layer
to be specific format, for example for fbdev emulation.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c |   73 +++++++++++++++++----------
 1 files changed, 46 insertions(+), 27 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c b/drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c
index f45b679..15f0da4 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_dp_sub.c
@@ -256,6 +256,8 @@ enum xilinx_drm_dp_sub_layer_type {
  * @primary: flag for primary plane
  * @enabled: flag if the layer is enabled
  * @fmt: format descriptor
+ * @drm_fmts: array of supported DRM formats
+ * @num_fmts: number of supported DRM formats
  * @w: width
  * @h: height
  * @other: other layer
@@ -267,6 +269,8 @@ struct xilinx_drm_dp_sub_layer {
 	bool primary;
 	bool enabled;
 	const struct xilinx_drm_dp_sub_fmt *fmt;
+	uint32_t *drm_fmts;
+	unsigned int num_fmts;
 	uint32_t w;
 	uint32_t h;
 	struct xilinx_drm_dp_sub_layer *other;
@@ -1580,8 +1584,9 @@ xilinx_drm_dp_sub_unregister_device(struct xilinx_drm_dp_sub *dp_sub)
 static int xilinx_drm_dp_sub_parse_of(struct xilinx_drm_dp_sub *dp_sub)
 {
 	struct device_node *node = dp_sub->dev->of_node;
+	struct xilinx_drm_dp_sub_layer *layer;
 	const char *string;
-	u32 fmt, i;
+	u32 fmt, i, size;
 	int ret;
 
 	ret = of_property_read_string(node, "xlnx,output-fmt", &string);
@@ -1633,43 +1638,57 @@ static int xilinx_drm_dp_sub_parse_of(struct xilinx_drm_dp_sub *dp_sub)
 		dp_sub->layers[XILINX_DRM_DP_SUB_LAYER_GFX].primary = true;
 
 	ret = of_property_read_string(node, "xlnx,vid-fmt", &string);
-	if (ret < 0) {
-		dev_err(dp_sub->dev, "No video format in DT\n");
-		return ret;
-	}
+	if (!ret) {
+		layer = &dp_sub->layers[XILINX_DRM_DP_SUB_LAYER_VID];
+		size = ARRAY_SIZE(av_buf_vid_fmts);
+		layer->num_fmts = size;
+		layer->drm_fmts = devm_kzalloc(dp_sub->dev,
+					       sizeof(*layer->drm_fmts) * size,
+					       GFP_KERNEL);
+		if (!layer->drm_fmts)
+			return -ENOMEM;
 
-	for (i = 0; i < ARRAY_SIZE(av_buf_vid_fmts); i++) {
-		const struct xilinx_drm_dp_sub_fmt *fmt = &av_buf_vid_fmts[i];
+		for (i = 0; i < layer->num_fmts; i++) {
+			const struct xilinx_drm_dp_sub_fmt *fmt =
+				&av_buf_vid_fmts[i];
 
-		if (strcmp(string, fmt->name) == 0) {
-			dp_sub->layers[XILINX_DRM_DP_SUB_LAYER_VID].fmt = fmt;
-			break;
+			if (strcmp(string, fmt->name) == 0)
+				layer->fmt = fmt;
+
+			layer->drm_fmts[i] = fmt->drm_fmt;
 		}
-	}
 
-	if (!dp_sub->layers[XILINX_DRM_DP_SUB_LAYER_VID].fmt) {
-		dev_err(dp_sub->dev, "Invalid vid-fmt in DT\n");
-		return -EINVAL;
+		if (!layer->fmt) {
+			dev_info(dp_sub->dev, "Invalid vid-fmt in DT\n");
+			layer->fmt = &av_buf_vid_fmts[0];
+		}
 	}
 
 	ret = of_property_read_string(node, "xlnx,gfx-fmt", &string);
-	if (ret < 0) {
-		dev_err(dp_sub->dev, "No gfx format in DT\n");
-		return ret;
-	}
+	if (!ret) {
+		layer = &dp_sub->layers[XILINX_DRM_DP_SUB_LAYER_GFX];
+		size = ARRAY_SIZE(av_buf_gfx_fmts);
+		layer->num_fmts = size;
+		layer->drm_fmts = devm_kzalloc(dp_sub->dev,
+					       sizeof(*layer->drm_fmts) * size,
+					       GFP_KERNEL);
+		if (!layer->drm_fmts)
+			return -ENOMEM;
 
-	for (i = 0; i < ARRAY_SIZE(av_buf_gfx_fmts); i++) {
-		const struct xilinx_drm_dp_sub_fmt *fmt = &av_buf_gfx_fmts[i];
+		for (i = 0; i < layer->num_fmts; i++) {
+			const struct xilinx_drm_dp_sub_fmt *fmt =
+				&av_buf_gfx_fmts[i];
 
-		if (strcmp(string, fmt->name) == 0) {
-			dp_sub->layers[XILINX_DRM_DP_SUB_LAYER_GFX].fmt = fmt;
-			break;
+			if (strcmp(string, fmt->name) == 0)
+				layer->fmt = fmt;
+
+			layer->drm_fmts[i] = fmt->drm_fmt;
 		}
-	}
 
-	if (!dp_sub->layers[XILINX_DRM_DP_SUB_LAYER_GFX].fmt) {
-		dev_err(dp_sub->dev, "Invalid gfx-fmt in DT\n");
-		return -EINVAL;
+		if (!layer->fmt) {
+			dev_info(dp_sub->dev, "Invalid vid-fmt in DT\n");
+			layer->fmt = &av_buf_gfx_fmts[0];
+		}
 	}
 
 	dp_sub->vid_clk_pl = of_property_read_bool(node, "xlnx,vid-clk-pl");
-- 
1.7.5.4

