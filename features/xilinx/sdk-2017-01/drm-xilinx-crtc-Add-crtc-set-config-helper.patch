From 389d2b51bb395f7e1bf7be236a304c46b65f1776 Mon Sep 17 00:00:00 2001
From: Preetesh Parekh <preetesh.parekh@xilinx.com>
Date: Thu, 2 Jun 2016 19:21:46 -0700
Subject: [PATCH 0719/1566] drm: xilinx: crtc: Add crtc set config helper
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The goal is to be able to synchronize resolution changes between the
drm device and emulated fbdev device if both devices are used by an
application e.g. in Qt we use both graphics and video layer whereas
the former is controlled by fbdev and the latter by drm. This patch
propagates resolution changes from the drm device to fbdev. Before
setting the new mode, a copy of the old mode is saved locally and
restored upon last close.

work in progres:
If hot-plug events happen while the application is running, the mode
pre-application start will be restored instead of the mode set by the
last hot-plug event. For example if we switch monitors from 1080p to
4k while the application is running, last close will restore the
fbconsole to 1080p on the 4k monitor.  The framebuffer for the fbdev
emulation is allocated when the driver is initialized, thus hotplug
between monitors with different resolutions
(ex, 2560x1440->1920x1080) wouldnâ€™t work correctly as of now.

Signed-off-by: Preetesh Parekh <preetesh.parekh@xilinx.com>
Tested-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_crtc.c |   12 +++++++-
 drivers/gpu/drm/xilinx/xilinx_drm_drv.c  |    8 +++++
 drivers/gpu/drm/xilinx/xilinx_drm_drv.h  |    2 +
 drivers/gpu/drm/xilinx/xilinx_drm_fb.c   |   44 ++++++++++++++++++++++++++++++
 drivers/gpu/drm/xilinx/xilinx_drm_fb.h   |    2 +
 5 files changed, 67 insertions(+), 1 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
index 7a3c3c9..103e33a 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
@@ -262,6 +262,16 @@ void xilinx_drm_crtc_destroy(struct drm_crtc *base_crtc)
 	xilinx_drm_plane_remove_manager(crtc->plane_manager);
 }
 
+/* crtc set config helper */
+int xilinx_drm_crtc_helper_set_config(struct drm_mode_set *set)
+{
+	struct drm_device *drm = set->crtc->dev;
+
+	xilinx_drm_set_config(drm, set);
+
+	return drm_crtc_helper_set_config(set);
+}
+
 /* cancel page flip functions */
 void xilinx_drm_crtc_cancel_page_flip(struct drm_crtc *base_crtc,
 				      struct drm_file *file)
@@ -428,7 +438,7 @@ unsigned int xilinx_drm_crtc_get_align(struct drm_crtc *base_crtc)
 
 static struct drm_crtc_funcs xilinx_drm_crtc_funcs = {
 	.destroy	= xilinx_drm_crtc_destroy,
-	.set_config	= drm_crtc_helper_set_config,
+	.set_config	= xilinx_drm_crtc_helper_set_config,
 	.page_flip	= xilinx_drm_crtc_page_flip,
 };
 
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_drv.c b/drivers/gpu/drm/xilinx/xilinx_drm_drv.c
index 7b41337..20e3089 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_drv.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_drv.c
@@ -129,6 +129,14 @@ unsigned int xilinx_drm_get_align(struct drm_device *drm)
 	return xilinx_drm_crtc_get_align(private->crtc);
 }
 
+void xilinx_drm_set_config(struct drm_device *drm, struct drm_mode_set *set)
+{
+	struct xilinx_drm_private *private = drm->dev_private;
+
+	if (private && private->fb)
+		xilinx_drm_fb_set_config(private->fb, set);
+}
+
 /* poll changed handler */
 static void xilinx_drm_output_poll_changed(struct drm_device *drm)
 {
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_drv.h b/drivers/gpu/drm/xilinx/xilinx_drm_drv.h
index b8c42d0..223fc80 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_drv.h
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_drv.h
@@ -57,9 +57,11 @@ static inline void xilinx_drm_set(void __iomem *base, int offset, u32 set)
 }
 
 struct drm_device;
+struct drm_mode_set;
 
 bool xilinx_drm_check_format(struct drm_device *drm, uint32_t fourcc);
 uint32_t xilinx_drm_get_format(struct drm_device *drm);
 unsigned int xilinx_drm_get_align(struct drm_device *drm);
+void xilinx_drm_set_config(struct drm_device *drm, struct drm_mode_set *set);
 
 #endif /* _XILINX_DRM_H_ */
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_fb.c b/drivers/gpu/drm/xilinx/xilinx_drm_fb.c
index 1d5c54a..269de67 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_fb.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_fb.c
@@ -38,6 +38,8 @@ struct xilinx_drm_fbdev {
 	struct xilinx_drm_fb	*fb;
 	unsigned int align;
 	unsigned int vres_mult;
+	struct drm_display_mode old_mode;
+	bool mode_backup;
 };
 
 static inline struct xilinx_drm_fbdev *to_fbdev(struct drm_fb_helper *fb_helper)
@@ -165,6 +167,30 @@ int xilinx_drm_fb_helper_pan_display(struct fb_var_screeninfo *var,
 	return ret;
 }
 
+/**
+ * xilinx_drm_fb_set_config - synchronize resolution changes with fbdev
+ * @fb_helper: fb helper structure
+ * @set: mode set configuration
+ */
+void xilinx_drm_fb_set_config(struct drm_fb_helper *fb_helper,
+				struct drm_mode_set *set)
+{
+	if (fb_helper && set) {
+		struct xilinx_drm_fbdev *fbdev = to_fbdev(fb_helper);
+
+		if (fbdev && fb_helper->crtc_info &&
+		    fb_helper->crtc_info[0].mode_set.mode && set->mode) {
+			if (!fbdev->mode_backup) {
+				fbdev->old_mode =
+					*fb_helper->crtc_info[0].mode_set.mode;
+				fbdev->mode_backup = true;
+			}
+			drm_mode_copy(fb_helper->crtc_info[0].mode_set.mode,
+					set->mode);
+	       }
+	}
+}
+
 int
 xilinx_drm_fb_ioctl(struct fb_info *info, unsigned int cmd, unsigned long arg)
 {
@@ -413,6 +439,17 @@ void xilinx_drm_fb_fini(struct drm_fb_helper *fb_helper)
  */
 void xilinx_drm_fb_restore_mode(struct drm_fb_helper *fb_helper)
 {
+	struct xilinx_drm_fbdev *fbdev = to_fbdev(fb_helper);
+
+	/* restore old display mode */
+	if (fb_helper && fbdev && fbdev->mode_backup &&
+	    fb_helper->crtc_info &&
+	    fb_helper->crtc_info[0].mode_set.mode) {
+		drm_mode_copy(fb_helper->crtc_info[0].mode_set.mode,
+				&(fbdev->old_mode));
+		fbdev->mode_backup = false;
+	}
+
 	if (fb_helper)
 		drm_fb_helper_restore_fbdev_mode_unlocked(fb_helper);
 }
@@ -505,6 +542,13 @@ err_gem_object_unreference:
  */
 void xilinx_drm_fb_hotplug_event(struct drm_fb_helper *fb_helper)
 {
+	if (fb_helper) {
+		struct xilinx_drm_fbdev *fbdev = to_fbdev(fb_helper);
+
+		if (fbdev)
+			fbdev->mode_backup = false;
+	}
+
 	if (fb_helper)
 		drm_fb_helper_hotplug_event(fb_helper);
 }
diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_fb.h b/drivers/gpu/drm/xilinx/xilinx_drm_fb.h
index ae91ace..74b628c 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_fb.h
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_fb.h
@@ -34,5 +34,7 @@ struct drm_framebuffer *xilinx_drm_fb_create(struct drm_device *drm,
 					     struct drm_file *file_priv,
 					     struct drm_mode_fb_cmd2 *mode_cmd);
 void xilinx_drm_fb_hotplug_event(struct drm_fb_helper *fb_helper);
+void xilinx_drm_fb_set_config(struct drm_fb_helper *fb_helper,
+				struct drm_mode_set *set);
 
 #endif /* _XILINX_DRM_FB_H_ */
-- 
1.7.5.4

