From 51c75bfaef2a17ba8d5c35b502f9b9f44bad0e2f Mon Sep 17 00:00:00 2001
From: Filip Drazic <filip.drazic@aggios.com>
Date: Tue, 7 Feb 2017 12:03:03 +0100
Subject: [PATCH 1347/1566] ARM64: zynqmp: Add address arguments for
 zynqmp_pm_request_wakeup PM API

commit  9c404761e74afe9941cb03eb5546be73313e340d from
https://github.com/Xilinx/linux-xlnx.git

Update zynqmp_pm_request_wakeup function according to EEMI API Reference
Guide (UG1200 v1.0).

Signed-off-by: Filip Drazic <filip.drazic@aggios.com>
Acked-by: Will Wong <willw@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/soc/xilinx/zynqmp/pm.c       |   11 +++++++++--
 include/linux/soc/xilinx/zynqmp/pm.h |    2 ++
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/soc/xilinx/zynqmp/pm.c b/drivers/soc/xilinx/zynqmp/pm.c
index df56141..12f6593 100644
--- a/drivers/soc/xilinx/zynqmp/pm.c
+++ b/drivers/soc/xilinx/zynqmp/pm.c
@@ -353,14 +353,20 @@ EXPORT_SYMBOL_GPL(zynqmp_pm_force_powerdown);
 /**
  * zynqmp_pm_request_wakeup - PM call for to wake up selected master or subsystem
  * @node:	Node ID of the master or subsystem
+ * @set_addr:	Specifies whether the address argument is relevant
+ * @address:	Address from which to resume when woken up
  * @ack:	Flag to specify whether acknowledge requested
  *
  * Return:	Returns status, either success or error+reason
  */
 int zynqmp_pm_request_wakeup(const u32 node,
+				     const bool set_addr,
+				     const u64 address,
 				     const enum zynqmp_pm_request_ack ack)
 {
-	return invoke_pm_fn(REQUEST_WAKEUP, node, ack, 0, 0, NULL);
+	/* set_addr flag is encoded into 1st bit of address */
+	return invoke_pm_fn(REQUEST_WAKEUP, node, address | set_addr,
+				address >> 32, ack, NULL);
 }
 EXPORT_SYMBOL_GPL(zynqmp_pm_request_wakeup);
 
@@ -905,7 +911,8 @@ static ssize_t zynqmp_pm_debugfs_api_write(struct file *file,
 		break;
 	case REQUEST_WAKEUP:
 		ret = zynqmp_pm_request_wakeup(pm_api_arg[0],
-				pm_api_arg[1] ? pm_api_arg[1] :
+				pm_api_arg[1], pm_api_arg[2],
+				pm_api_arg[3] ? pm_api_arg[3] :
 						ZYNQMP_PM_REQUEST_ACK_NO);
 		break;
 	case SET_WAKEUP_SOURCE:
diff --git a/include/linux/soc/xilinx/zynqmp/pm.h b/include/linux/soc/xilinx/zynqmp/pm.h
index 36308c5..92508a9 100644
--- a/include/linux/soc/xilinx/zynqmp/pm.h
+++ b/include/linux/soc/xilinx/zynqmp/pm.h
@@ -205,6 +205,8 @@ int zynqmp_pm_request_suspend(const u32 node,
 				      const u32 latency,
 				      const u32 state);
 int zynqmp_pm_request_wakeup(const u32 node,
+				     const bool set_addr,
+				     const u64 address,
 				     const enum zynqmp_pm_request_ack ack);
 int zynqmp_pm_set_wakeup_source(const u32 target,
 					const u32 wakeup_node,
-- 
1.7.5.4

