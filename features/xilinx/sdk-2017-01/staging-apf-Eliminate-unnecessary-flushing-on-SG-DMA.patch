From ecc67c8e4d601dd5eed32a8dfea37e8bfb51a1be Mon Sep 17 00:00:00 2001
From: Michael Gill <michael.gill@xilinx.com>
Date: Wed, 28 Sep 2016 16:53:46 -0700
Subject: [PATCH 0937/1566] staging: apf: Eliminate unnecessary flushing on
 SG-DMA transfers

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

There was a bug introduced when introducing threading that may
cause transfers that do not require cache flushing to trigger
flushing unnecessarily.  This does not impact correctness,
but will improve performance.

Signed-off-by: Michael Gill <gill@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit a7bae7f922fd52e8cb0e117b961fa5ce2e5dde3e)
---
 drivers/staging/apf/xilinx-dma-apf.c |   25 ++++++++++---------------
 1 files changed, 10 insertions(+), 15 deletions(-)

diff --git a/drivers/staging/apf/xilinx-dma-apf.c b/drivers/staging/apf/xilinx-dma-apf.c
index 0a7729c..25c77aa 100644
--- a/drivers/staging/apf/xilinx-dma-apf.c
+++ b/drivers/staging/apf/xilinx-dma-apf.c
@@ -818,6 +818,10 @@ int xdma_submit(struct xdma_chan *chan,
 	dmahead->dmadir = chan->direction;
 	dmahead->userflag = user_flags;
 	dmadir = chan->direction;
+
+	if (!(user_flags & CF_FLAG_CACHE_FLUSH_INVALIDATE))
+		dma_set_attr(DMA_ATTR_SKIP_CPU_SYNC, &attrs);
+
 	if (dp) {
 		if (!dp->is_mapped) {
 			struct scatterlist *sg;
@@ -891,8 +895,6 @@ int xdma_submit(struct xdma_chan *chan,
 			pr_err("pin_user_pages failed\n");
 			return status;
 		}
-		if (!(user_flags & CF_FLAG_CACHE_FLUSH_INVALIDATE))
-			dma_set_attr(DMA_ATTR_SKIP_CPU_SYNC, &attrs);
 
 		status = get_dma_ops(chan->dev)->map_sg(chan->dev, sglist,
 							sgcnt, dmadir, &attrs);
@@ -963,26 +965,19 @@ int xdma_wait(struct xdma_head *dmahead,
 		}
 	}
 
+	if (!(user_flags & CF_FLAG_CACHE_FLUSH_INVALIDATE))
+		dma_set_attr(DMA_ATTR_SKIP_CPU_SYNC, &attrs);
+
 	if (dmahead->is_dmabuf) {
 		dmahead->is_dmabuf = 0;
-	} else if (user_flags & CF_FLAG_PHYSICALLY_CONTIGUOUS) {
-		if (user_flags & CF_FLAG_CACHE_FLUSH_INVALIDATE)
-			get_dma_ops(chan->dev)->unmap_sg(chan->dev,
-							 dmahead->sglist,
-							 dmahead->sgcnt,
-							 dmahead->dmadir,
-							 &attrs);
-	} else  {
-		if (!(user_flags & CF_FLAG_CACHE_FLUSH_INVALIDATE))
-			dma_set_attr(DMA_ATTR_SKIP_CPU_SYNC, &attrs);
-
+	} else {
 		get_dma_ops(chan->dev)->unmap_sg(chan->dev,
 						 dmahead->sglist,
 						 dmahead->sgcnt,
 						 dmahead->dmadir,
 						 &attrs);
-
-		unpin_user_pages(dmahead->sglist, dmahead->sgcnt);
+		if (!(user_flags & CF_FLAG_PHYSICALLY_CONTIGUOUS))
+			unpin_user_pages(dmahead->sglist, dmahead->sgcnt);
 	}
 	return 0;
 }
-- 
1.7.5.4

