From 7a9db1528fb57453753e25dcd86d596f554db10f Mon Sep 17 00:00:00 2001
From: Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
Date: Tue, 18 Apr 2017 21:21:15 +0530
Subject: [PATCH 1519/1566] dwc3: Add support for setting USB control
 registers as phy platform data

commit  68e6869cfb8154b80ee9ffafd64932971e9d1d07 from
https://github.com/Xilinx/linux-xlnx.git

This patch adds support for setting USB vendor specific control registers
as phy platform data. These registers are used by the phy to configure USB
PIPE signals.

Note:
This patch is a temporary workaround which is done to set pipe signals
without effecting usb cci and this will be redesigned. this change will
get it into v2017.1 and expected to change once the proper solution is
available.

Signed-off-by: Anurag Kumar Vulisha <anuragku@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/dwc3/core.c           |    4 ++++
 drivers/usb/dwc3/core.h           |    3 +++
 drivers/usb/dwc3/dwc3-of-simple.c |   23 +++++++++++++++++++++++
 3 files changed, 30 insertions(+), 0 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index 0f4de21..63c7bcf 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -880,6 +880,8 @@ static int dwc3_core_get_phy(struct dwc3 *dwc)
 			dev_err(dev, "no usb2 phy configured\n");
 			return ret;
 		}
+	} else {
+		dwc3_set_phydata(dev, dwc->usb2_generic_phy);
 	}
 
 	dwc->usb3_generic_phy = devm_phy_get(dev, "usb3-phy");
@@ -893,6 +895,8 @@ static int dwc3_core_get_phy(struct dwc3 *dwc)
 			dev_err(dev, "no usb3 phy configured\n");
 			return ret;
 		}
+	} else {
+		dwc3_set_phydata(dev, dwc->usb3_generic_phy);
 	}
 
 	return 0;
diff --git a/drivers/usb/dwc3/core.h b/drivers/usb/dwc3/core.h
index 756546d..6e2c1ac 100644
--- a/drivers/usb/dwc3/core.h
+++ b/drivers/usb/dwc3/core.h
@@ -1147,9 +1147,12 @@ static inline bool dwc3_is_usb31(struct dwc3 *dwc)
 
 #if IS_ENABLED(CONFIG_USB_DWC3_OF_SIMPLE)
 int dwc3_enable_hw_coherency(struct device *dev);
+void dwc3_set_phydata(struct device *dev, struct phy *phy);
 #else
 static inline int dwc3_enable_hw_coherency(struct device *dev)
 { return 1; }
+static inline void dwc3_set_phydata(struct device *dev, struct phy *phy)
+{ ; }
 #endif
 
 #if IS_ENABLED(CONFIG_USB_DWC3_HOST) || IS_ENABLED(CONFIG_USB_DWC3_DUAL_ROLE)\
diff --git a/drivers/usb/dwc3/dwc3-of-simple.c b/drivers/usb/dwc3/dwc3-of-simple.c
index 996ab7e..7f3f9ad 100644
--- a/drivers/usb/dwc3/dwc3-of-simple.c
+++ b/drivers/usb/dwc3/dwc3-of-simple.c
@@ -32,6 +32,7 @@
 #include <linux/soc/xilinx/zynqmp/fw.h>
 #include <linux/slab.h>
 
+#include <linux/phy/phy-zynqmp.h>
 #include <linux/of_address.h>
 
 #include "core.h"
@@ -47,6 +48,28 @@ struct dwc3_of_simple {
 	void __iomem		*regs;
 };
 
+void dwc3_set_phydata(struct device *dev, struct phy *phy)
+{
+	struct device_node *node = of_get_parent(dev->of_node);
+	int ret;
+
+	if ((node != NULL) &&
+		of_device_is_compatible(node, "xlnx,zynqmp-dwc3")) {
+		struct platform_device *pdev_parent;
+		struct dwc3_of_simple   *simple;
+
+		pdev_parent = of_find_device_by_node(node);
+		simple = platform_get_drvdata(pdev_parent);
+
+		/* assign USB vendor regs to phy lane */
+		ret = xpsgtr_set_protregs(phy, simple->regs);
+		if (ret) {
+			dev_err(&pdev_parent->dev,
+				"Not able to set PHY data\n");
+		}
+	}
+}
+
 int dwc3_enable_hw_coherency(struct device *dev)
 {
 	struct device_node *node = of_get_parent(dev->of_node);
-- 
1.7.5.4

