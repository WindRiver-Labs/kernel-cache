From 53fa0488cdd0850f7ba1e085c4bc9b886df99a9d Mon Sep 17 00:00:00 2001
From: Michael Gill <michael.gill@xilinx.com>
Date: Fri, 31 Mar 2017 11:53:36 -0700
Subject: [PATCH 1500/1566] staging: apf: Fix buffer ID overflow

commit  f954dbf3ccf28a92b9c6698f7a9cc7016b943b12 from
https://github.com/Xilinx/linux-xlnx.git

This moves the hard upper bound on buffers in the apf driver
from 256 to 64K

Signed-off-by: Michael Gill <gill@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/staging/apf/xlnk.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/apf/xlnk.c b/drivers/staging/apf/xlnk.c
index 4654265..e89c7bd 100644
--- a/drivers/staging/apf/xlnk.c
+++ b/drivers/staging/apf/xlnk.c
@@ -423,7 +423,6 @@ static int xlnk_allocbuf(unsigned int len, unsigned int cacheable)
 	spin_unlock(&xlnk_buf_lock);
 
 	if (id <= 0 || id >= XLNK_BUF_POOL_SIZE) {
-		pr_err("No id could be found in range\n");
 		return -ENOMEM;
 	}
 
@@ -1729,7 +1728,7 @@ static int xlnk_mmap(struct file *filp, struct vm_area_struct *vma)
 	int bufid;
 	int status;
 
-	bufid = vma->vm_pgoff >> (24 - PAGE_SHIFT);
+	bufid = vma->vm_pgoff >> (16 - PAGE_SHIFT);
 
 	if (bufid == 0)
 		status = remap_pfn_range(vma, vma->vm_start,
-- 
1.7.5.4

