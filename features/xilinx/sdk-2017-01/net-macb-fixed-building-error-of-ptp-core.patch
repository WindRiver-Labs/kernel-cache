From f01a25bf6174898506fdab25640f97b9f1e600de Mon Sep 17 00:00:00 2001
From: zou cao <cao.zou@windriver.com>
Date: Fri, 20 Jan 2017 19:22:07 +0800
Subject: [PATCH 0789/1566] net: macb: fixed building error of ptp core

Now the get/settime has been updated to get/settime64, here fixed
the build error.

Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/net/ethernet/cadence/macb.c |   18 +++++++++---------
 1 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/cadence/macb.c b/drivers/net/ethernet/cadence/macb.c
index 0089cb0..e5d84a1 100644
--- a/drivers/net/ethernet/cadence/macb.c
+++ b/drivers/net/ethernet/cadence/macb.c
@@ -1863,7 +1863,7 @@ static u32 macb_dbw(struct macb *bp)
 	}
 }
 
-static inline void macb_ptp_read(struct macb *bp, struct timespec *ts)
+static inline void macb_ptp_read(struct macb *bp, struct timespec64 *ts)
 {
 	ts->tv_sec = gem_readl(bp, 1588S);
 	ts->tv_nsec = gem_readl(bp, 1588NS);
@@ -1872,7 +1872,7 @@ static inline void macb_ptp_read(struct macb *bp, struct timespec *ts)
 		ts->tv_nsec = gem_readl(bp, 1588NS);
 }
 
-static inline void macb_ptp_write(struct macb *bp, const struct timespec *ts)
+static inline void macb_ptp_write(struct macb *bp, const struct timespec64 *ts)
 {
 	gem_writel(bp, 1588S, ts->tv_sec);
 	gem_writel(bp, 1588NS, ts->tv_nsec);
@@ -1895,7 +1895,7 @@ static void macb_ptp_close(struct macb *bp)
 	ptp_clock_unregister(bp->ptp_clock);
 }
 
-static int macb_ptp_gettime(struct ptp_clock_info *ptp, struct timespec *ts)
+static int macb_ptp_gettime(struct ptp_clock_info *ptp, struct timespec64 *ts)
 {
 	struct macb *bp = container_of(ptp, struct macb, ptp_caps);
 
@@ -1905,7 +1905,7 @@ static int macb_ptp_gettime(struct ptp_clock_info *ptp, struct timespec *ts)
 }
 
 static int macb_ptp_settime(struct ptp_clock_info *ptp,
-			    const struct timespec *ts)
+			    const struct timespec64 *ts)
 {
 	struct macb *bp = container_of(ptp, struct macb, ptp_caps);
 
@@ -1926,14 +1926,14 @@ static int macb_ptp_adjtime(struct ptp_clock_info *ptp, s64 delta)
 	}
 
 	if (delta > 0x3FFFFFFF) {
-		macb_ptp_read(bp, &now);
+		macb_ptp_read(bp, (struct timespec64 *)&now);
 
 		if (sign)
 			now = timespec_sub(now, then);
 		else
 			now = timespec_add(now, then);
 
-		macb_ptp_write(bp, (const struct timespec *)&now);
+		macb_ptp_write(bp, (const struct timespec64 *)&now);
 	} else {
 		adj = delta;
 		if (sign)
@@ -2011,8 +2011,8 @@ static void macb_ptp_init(struct macb *bp)
 	bp->ptp_caps.n_per_out = 0;
 	bp->ptp_caps.pps = 0;
 	bp->ptp_caps.adjtime = macb_ptp_adjtime;
-	bp->ptp_caps.gettime = macb_ptp_gettime;
-	bp->ptp_caps.settime = macb_ptp_settime;
+	bp->ptp_caps.gettime64 = macb_ptp_gettime;
+	bp->ptp_caps.settime64 = macb_ptp_settime;
 	bp->ptp_caps.enable = macb_ptp_enable;
 	bp->ptp_caps.adjfreq = macb_ptp_adjfreq;
 
@@ -2020,7 +2020,7 @@ static void macb_ptp_init(struct macb *bp)
 
 	getnstimeofday(&now);
 	gem_writel(bp, 1588SMSB, 0);
-	macb_ptp_write(bp, (const struct timespec *)&now);
+	macb_ptp_write(bp, (const struct timespec64 *)&now);
 
 	bp->ns_incr = div_u64_rem(NS_PER_SEC, rate, &rem);
 	if (rem) {
-- 
1.7.5.4

