From 219e4cee2bb77ce5bef27d3ec57a938f12701d5a Mon Sep 17 00:00:00 2001
From: Filip Drazic <filip.drazic@aggios.com>
Date: Fri, 17 Feb 2017 19:38:22 +0100
Subject: [PATCH 1350/1566] ARM64: zynqmp: Add support for setting suspend to
 RAM mode

commit  020563c4279c4b1a3276ffe9c49b7f4d18215e80 from
https://github.com/Xilinx/linux-xlnx.git

Beside standard suspend to RAM, Zynq MPSoC can enter deeper
suspend to RAM state (suspend to RAM with chip powered off).
This patch allows selecting desired suspend mode from user space
(sysfs). Sysfs file "suspend_mode" is added to PM firmware directory. Reading
from this file returns supported suspend modes, while writing to this file sets
the suspend mode. Valid arguments are "power-off" and "standard".
Default mode is "standard".

The selected mode is passed to the lower ELs.

Signed-off-by: Filip Drazic <filip.drazic@aggios.com>
Acked-by: Will Wong <willw@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/soc/xilinx/zynqmp/pm.c |   76 ++++++++++++++++++++++++++++++++++++++++
 1 files changed, 76 insertions(+), 0 deletions(-)

diff --git a/drivers/soc/xilinx/zynqmp/pm.c b/drivers/soc/xilinx/zynqmp/pm.c
index f7112bb..91d8d4f 100644
--- a/drivers/soc/xilinx/zynqmp/pm.c
+++ b/drivers/soc/xilinx/zynqmp/pm.c
@@ -34,6 +34,7 @@
 /* SMC SIP service Call Function Identifier Prefix */
 #define PM_SIP_SVC	0xC2000000
 #define GET_CALLBACK_DATA 0xa01
+#define SET_SUSPEND_MODE  0xa02
 
 /* Number of 32bits values in payload */
 #define PAYLOAD_ARG_CNT	5U
@@ -60,6 +61,20 @@ static struct zynqmp_pm_work_struct *zynqmp_pm_init_suspend_work;
 
 static u32 pm_api_version;
 
+enum pm_suspend_mode {
+	PM_SUSPEND_MODE_STD,
+	PM_SUSPEND_MODE_POWER_OFF,
+};
+
+#define PM_SUSPEND_MODE_FIRST	PM_SUSPEND_MODE_STD
+
+static const char *const suspend_modes[] = {
+	[PM_SUSPEND_MODE_STD] = "standard",
+	[PM_SUSPEND_MODE_POWER_OFF] = "power-off",
+};
+
+static enum pm_suspend_mode suspend_mode = PM_SUSPEND_MODE_STD;
+
 enum pm_api_id {
 	/* Miscellaneous API functions: */
 	GET_API_VERSION = 1,
@@ -1165,6 +1180,61 @@ static void zynqmp_pm_init_suspend_work_fn(struct work_struct *work)
 	pm_suspend(PM_SUSPEND_MEM);
 }
 
+static ssize_t suspend_mode_show(struct device *dev,
+				struct device_attribute *attr, char *buf)
+{
+	char *s = buf;
+	int md;
+
+	for (md = PM_SUSPEND_MODE_FIRST; md < ARRAY_SIZE(suspend_modes); md++)
+		if (suspend_modes[md]) {
+			if (md == suspend_mode)
+				s += sprintf(s, "[%s] ", suspend_modes[md]);
+			else
+				s += sprintf(s, "%s ", suspend_modes[md]);
+		}
+
+	/* Convert last space to newline */
+	if (s != buf)
+		*(s - 1) = '\n';
+	return (s - buf);
+}
+
+static ssize_t suspend_mode_store(struct device *dev,
+			struct device_attribute *attr,
+			const char *buf, size_t count)
+{
+	int md, ret = -EINVAL;
+
+	for (md = PM_SUSPEND_MODE_FIRST; md < ARRAY_SIZE(suspend_modes); md++)
+		if (suspend_modes[md] &&
+		    sysfs_streq(suspend_modes[md], buf)) {
+			ret = 0;
+			break;
+		}
+
+	if (!ret && (md != suspend_mode)) {
+		ret = invoke_pm_fn(SET_SUSPEND_MODE, md, 0, 0, 0, NULL);
+		if (likely(!ret))
+			suspend_mode = md;
+	}
+
+	return ret ? ret : count;
+}
+
+static DEVICE_ATTR_RW(suspend_mode);
+
+/**
+ * zynqmp_pm_sysfs_init - Initialize PM driver sysfs interface
+ * @dev:	Pointer to device structure
+ *
+ * Return:	0 on success, negative error code otherwise
+ */
+static int zynqmp_pm_sysfs_init(struct device *dev)
+{
+	return sysfs_create_file(&dev->kobj, &dev_attr_suspend_mode.attr);
+}
+
 /**
  * zynqmp_pm_probe - Probe existence of the PMU Firmware
  *			and initialize debugfs interface
@@ -1204,6 +1274,12 @@ static int zynqmp_pm_probe(struct platform_device *pdev)
 	INIT_WORK(&zynqmp_pm_init_suspend_work->callback_work,
 		zynqmp_pm_init_suspend_work_fn);
 
+	ret = zynqmp_pm_sysfs_init(&pdev->dev);
+	if (ret) {
+		dev_err(&pdev->dev, "unable to initialize sysfs interface\n");
+		goto error;
+	}
+
 	dev_info(&pdev->dev, "Power management API v%d.%d\n",
 		ZYNQMP_PM_VERSION_MAJOR, ZYNQMP_PM_VERSION_MINOR);
 
-- 
1.7.5.4

