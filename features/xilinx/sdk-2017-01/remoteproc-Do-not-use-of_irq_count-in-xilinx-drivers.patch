From 0ba69a47fd577729cb7cb57100f9e38ee0b9bc74 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Fri, 31 May 2013 16:05:38 +0200
Subject: [PATCH 1016/1566] remoteproc: Do not use of_irq_count in xilinx
 drivers

commit  5d212abb06923d1ac0e33ae1c90f34d9b49f818d from
https://github.com/Xilinx/linux-xlnx.git

Driver resources are already filled and driver can use them.
The reason is that of_irq_count() is not exported
for modules in the mainline.
The next patch which revert this patch which we have in our tree.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/remoteproc/zynq_remoteproc.c |   13 ++++++++-----
 1 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/remoteproc/zynq_remoteproc.c b/drivers/remoteproc/zynq_remoteproc.c
index b5c50e5..9e6a6dd 100644
--- a/drivers/remoteproc/zynq_remoteproc.c
+++ b/drivers/remoteproc/zynq_remoteproc.c
@@ -175,7 +175,7 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 	struct resource *res; /* IO mem resources */
 	int ret = 0;
 	struct irq_list *tmp;
-	int count;
+	int count = 0;
 	struct zynq_rproc_pdata *local;
 
 	ret = cpu_down(1);
@@ -221,9 +221,12 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 	/* Init list for IRQs - it can be long list */
 	INIT_LIST_HEAD(&local->mylist.list);
 
-	count = of_irq_count(pdev->dev.of_node);
 	/* Alloc IRQ based on DTS to be sure that no other driver will use it */
-	while (count--) {
+	do {
+		res = platform_get_resource(pdev, IORESOURCE_IRQ, count++);
+		if (!res)
+			break;
+
 		tmp = kzalloc(sizeof(struct irq_list), GFP_KERNEL);
 		if (!tmp) {
 			dev_err(&pdev->dev, "Unable to alloc irq list\n");
@@ -231,7 +234,7 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 			goto irq_fault;
 		}
 
-		tmp->irq = irq_of_parse_and_map(pdev->dev.of_node, count);
+		tmp->irq = res->start;
 
 		dev_dbg(&pdev->dev, "%d: Alloc irq: %d\n", count, tmp->irq);
 
@@ -253,7 +256,7 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 		 */
 		gic_set_cpu(1, tmp->irq);
 		list_add(&(tmp->list), &(local->mylist.list));
-	}
+	} while (res);
 
 	/* Allocate free IPI number */
 	of_prop = of_get_property(pdev->dev.of_node, "ipino", NULL);
-- 
1.7.5.4

