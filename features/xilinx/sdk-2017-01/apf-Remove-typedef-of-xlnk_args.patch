From 5b669e25c9a1efc0ae0eddcc3edca3ec0a21c07f Mon Sep 17 00:00:00 2001
From: S Mohan <s.mohan@xilinx.com>
Date: Fri, 6 Sep 2013 10:31:46 +0200
Subject: [PATCH 0868/1566] apf: Remove typedef of xlnk_args

This patch comes from:
  https://github.com/Xilinx/linux-xlnx.git

Remove typedef union {..} xlnk_args and
replace with named union called xlnk_args,
and fix sparse warnings related to these changes

Signed-off-by: S Mohan <s.mohan@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
(cherry picked from commit 618ef1cbdf20efd4bad7e734068721b6d9303ec0)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/staging/apf/xlnk.c |   73 +++++++++++++++++++++----------------------
 drivers/staging/apf/xlnk.h |    4 +-
 2 files changed, 38 insertions(+), 39 deletions(-)

diff --git a/drivers/staging/apf/xlnk.c b/drivers/staging/apf/xlnk.c
index 5a1e0cf..694068c 100644
--- a/drivers/staging/apf/xlnk.c
+++ b/drivers/staging/apf/xlnk.c
@@ -687,12 +687,12 @@ static int xlnk_allocbuf_ioctl(struct file *filp, unsigned int code,
 			unsigned long args)
 {
 
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	int status;
 	int id;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -740,12 +740,12 @@ static int xlnk_freebuf_ioctl(struct file *filp, unsigned int code,
 			unsigned long args)
 {
 
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	int status;
 	int id;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -760,12 +760,12 @@ static int xlnk_dmarequest_ioctl(struct file *filp, unsigned int code,
 
 #ifdef CONFIG_XILINX_DMA_APF
 
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	int status;
 	struct xdma_chan *chan;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -783,7 +783,7 @@ static int xlnk_dmarequest_ioctl(struct file *filp, unsigned int code,
 	temp_args.dmarequest.bd_space_phys_addr = chan->bd_phys_addr;
 	temp_args.dmarequest.bd_space_size = chan->bd_chain_size;
 
-	copy_to_user((void *)args, &temp_args, sizeof(xlnk_args));
+	copy_to_user((void *)args, &temp_args, sizeof(union xlnk_args));
 
 	return 0;
 
@@ -800,12 +800,12 @@ static int xlnk_dmasubmit_ioctl(struct file *filp, unsigned int code,
 {
 
 #ifdef CONFIG_XILINX_DMA_APF
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	struct xdma_head *dmahead;
 	int status = -1;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -826,8 +826,7 @@ static int xlnk_dmasubmit_ioctl(struct file *filp, unsigned int code,
 		temp_args.dmasubmit.dmahandle = (u32)dmahead;
 		temp_args.dmasubmit.last_bd_index =
 					(u32)dmahead->last_bd_index;
-		copy_to_user((void *)args, &temp_args, sizeof(xlnk_args));
-
+		copy_to_user((void *)args, &temp_args, sizeof(union xlnk_args));
 		return 0;
 	}
 #endif
@@ -841,11 +840,11 @@ static int xlnk_dmawait_ioctl(struct file *filp, unsigned int code,
 	int status = -1;
 
 #ifdef CONFIG_XILINX_DMA_APF
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	struct xdma_head *dmahead;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -857,7 +856,7 @@ static int xlnk_dmawait_ioctl(struct file *filp, unsigned int code,
 		memcpy(temp_args.dmawait.appwords, dmahead->appwords_o,
 			   dmahead->nappwords_o * sizeof(u32));
 
-		copy_to_user((void *)args, &temp_args, sizeof(xlnk_args));
+		copy_to_user((void *)args, &temp_args, sizeof(union xlnk_args));
 	}
 	kfree(dmahead);
 
@@ -873,9 +872,9 @@ static int xlnk_dmarelease_ioctl(struct file *filp, unsigned int code,
 
 #ifdef CONFIG_XILINX_DMA_APF
 
-	xlnk_args temp_args;
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	union xlnk_args temp_args;
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -890,12 +889,12 @@ static int xlnk_dmarelease_ioctl(struct file *filp, unsigned int code,
 static int xlnk_devregister_ioctl(struct file *filp, unsigned int code,
 				  unsigned long args)
 {
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	int status;
 	u32 handle;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -913,12 +912,12 @@ static int xlnk_devregister_ioctl(struct file *filp, unsigned int code,
 static int xlnk_dmaregister_ioctl(struct file *filp, unsigned int code,
 				  unsigned long args)
 {
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	int status;
 	u32 handle;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -946,12 +945,12 @@ static int xlnk_dmaregister_ioctl(struct file *filp, unsigned int code,
 static int xlnk_mcdmaregister_ioctl(struct file *filp, unsigned int code,
 				  unsigned long args)
 {
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	int status;
 	u32 handle;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -972,11 +971,11 @@ static int xlnk_mcdmaregister_ioctl(struct file *filp, unsigned int code,
 static int xlnk_devunregister_ioctl(struct file *filp, unsigned int code,
 					unsigned long args)
 {
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	int status;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-				sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+				sizeof(union xlnk_args));
 
 	if (status)
 		return -ENOMEM;
@@ -989,12 +988,12 @@ static int xlnk_devunregister_ioctl(struct file *filp, unsigned int code,
 static int xlnk_cachecontrol_ioctl(struct file *filp, unsigned int code,
 				   unsigned long args)
 {
-	xlnk_args temp_args;
+	union xlnk_args temp_args;
 	int status, size;
 	void *paddr, *kaddr;
 
-	status = copy_from_user(&temp_args, (xlnk_args *)args,
-							sizeof(xlnk_args));
+	status = copy_from_user(&temp_args, (void __user *)args,
+						sizeof(union xlnk_args));
 
 	if (status) {
 		pr_err("Error in copy_from_user. status = %d\n", status);
diff --git a/drivers/staging/apf/xlnk.h b/drivers/staging/apf/xlnk.h
index fd40bba..a6adcc7 100644
--- a/drivers/staging/apf/xlnk.h
+++ b/drivers/staging/apf/xlnk.h
@@ -23,7 +23,7 @@ enum xlnk_dma_direction {
 	XLNK_DMA_NONE = 3,
 };
 
-typedef union {
+union xlnk_args {
 	struct {
 		unsigned int len;
 		unsigned int *idptr;
@@ -110,7 +110,7 @@ typedef union {
 		int size;
 		int action;
 	} cachecontrol;
-} xlnk_args;
+};
 
 
 #endif
-- 
1.7.5.4

