From 28f105dbce9ef770ef2501ceef7bceeda2f1acdf Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Fri, 3 Feb 2017 00:30:57 +0530
Subject: [PATCH 1228/1566] drm: xilinx: crtc: pixel clock is optional

commit  2f092f96db5c42ac7b1e2ea50af05eeca40da3ad from
https://github.com/Xilinx/linux-xlnx.git

The clock handling should reflect how clock is physically connected,
and should be implemented in each hardware driver based on that.
This patch makes the pixel clock optional for Xilinx DRM driver layer,
so the clock handling can be implemented correctly by individual drivers.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Reviewed-by: Hyun Kwon <hyunk@xilinx.com
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/xilinx/xilinx_drm_crtc.c |   12 ++++++++----
 1 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
index bae2a0f..94ddf87 100644
--- a/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
+++ b/drivers/gpu/drm/xilinx/xilinx_drm_crtc.c
@@ -137,7 +137,7 @@ static int xilinx_drm_crtc_mode_set(struct drm_crtc *base_crtc,
 
 	diff = clk_get_rate(crtc->pixel_clock) - adjusted_mode->clock * 1000;
 	if (abs(diff) > (adjusted_mode->clock * 1000) / 20)
-		DRM_INFO("actual pixel clock rate(%d) is off by %ld\n",
+		DRM_DEBUG_KMS("actual pixel clock rate(%d) is off by %ld\n",
 				adjusted_mode->clock, diff);
 
 	if (crtc->vtc) {
@@ -500,9 +500,13 @@ struct drm_crtc *xilinx_drm_crtc_create(struct drm_device *drm)
 
 	crtc->pixel_clock = devm_clk_get(drm->dev, NULL);
 	if (IS_ERR(crtc->pixel_clock)) {
-		DRM_DEBUG_KMS("failed to get pixel clock\n");
-		ret = -EPROBE_DEFER;
-		goto err_plane;
+		if (IS_ERR(crtc->pixel_clock) == -EPROBE_DEFER) {
+			goto err_plane;
+		} else {
+			DRM_DEBUG_KMS("failed to get pixel clock\n");
+			crtc->pixel_clock = NULL;
+		}
+
 	}
 
 	ret = clk_prepare_enable(crtc->pixel_clock);
-- 
1.7.5.4

