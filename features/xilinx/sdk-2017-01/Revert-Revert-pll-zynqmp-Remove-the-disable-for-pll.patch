From 93c53f1c0cfbebb680e64aebbe3ccf3dd94a4e93 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Wed, 8 Feb 2017 10:46:37 +0100
Subject: [PATCH 1269/1566] Revert "Revert "pll: zynqmp: Remove the disable
 for pll""

commit  da070999e27b636332c2030ea668574d9085a536 from
https://github.com/Xilinx/linux-xlnx.git

This reverts commit 242d025c94b9fc8f5ad5adb44de832e75332d19d.

Disabling VPLL is shutding down the whole system that's why
I am reverting previous revert which means picking up origin
patch not to disable VPLL. There is probably any child which
is connected to VPLL which is not registered properly that's why system
has no visibility and disable it.
Then there is probably access to some regs which has no clock that's why
system hangs.
From system perspective. Linux has no view if PLLs are used by different
cpus that's why not disabling PLLs is good thing.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/zynqmp/pll.c |   20 --------------------
 1 files changed, 0 insertions(+), 20 deletions(-)

diff --git a/drivers/clk/zynqmp/pll.c b/drivers/clk/zynqmp/pll.c
index ec02903..b718ae2 100644
--- a/drivers/clk/zynqmp/pll.c
+++ b/drivers/clk/zynqmp/pll.c
@@ -233,28 +233,8 @@ static int zynqmp_pll_enable(struct clk_hw *hw)
 	return 0;
 }
 
-/**
- * zynqmp_pll_disable - Disable clock
- * @hw:		Handle between common and hardware-specific interfaces
- *
- */
-static void zynqmp_pll_disable(struct clk_hw *hw)
-{
-	struct zynqmp_pll *clk = to_zynqmp_pll(hw);
-
-	if (!zynqmp_pll_is_enabled(hw))
-		return;
-
-	pr_info("PLL: shutdown\n");
-
-	/* shut down PLL */
-	zynqmp_pm_mmio_write((u32)(ulong)clk->pll_ctrl, PLLCTRL_RESET_MASK,
-				PLLCTRL_RESET_VAL);
-}
-
 static const struct clk_ops zynqmp_pll_ops = {
 	.enable = zynqmp_pll_enable,
-	.disable = zynqmp_pll_disable,
 	.is_enabled = zynqmp_pll_is_enabled,
 	.round_rate = zynqmp_pll_round_rate,
 	.recalc_rate = zynqmp_pll_recalc_rate,
-- 
1.7.5.4

