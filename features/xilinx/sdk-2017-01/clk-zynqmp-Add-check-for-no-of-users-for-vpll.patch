From 194c87ec71e74c04de7d68ec4d50e3abf8e9fd63 Mon Sep 17 00:00:00 2001
From: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Date: Fri, 17 Feb 2017 22:53:53 +0530
Subject: [PATCH 1334/1566] clk: zynqmp: Add check for no of users for vpll

commit  75b49bd76a45208749235a7ba35dba96e3e706f0 from
https://github.com/Xilinx/linux-xlnx.git

We assume that vpll will be used only by dp_video_ref.
Add a check for the same.

Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/clk.c            |   30 ++++++++++++++++++++++++++++++
 drivers/clk/zynqmp/clkc.c    |   17 +++++++++++++++++
 include/linux/clk-provider.h |    1 +
 3 files changed, 48 insertions(+), 0 deletions(-)

diff --git a/drivers/clk/clk.c b/drivers/clk/clk.c
index 2877a4d..2095dbc 100644
--- a/drivers/clk/clk.c
+++ b/drivers/clk/clk.c
@@ -204,6 +204,36 @@ struct clk_hw *clk_hw_get_parent(const struct clk_hw *hw)
 }
 EXPORT_SYMBOL_GPL(clk_hw_get_parent);
 
+static unsigned int sibling;
+
+static void clk_show_subtree(struct clk_core *c,
+				     int level)
+{
+	struct clk_core *child;
+
+	if (!c)
+		return;
+
+	if (level == 1)
+		sibling++;
+
+	hlist_for_each_entry(child, &c->children, child_node) {
+		if (!child)
+			return;
+		clk_show_subtree(child, level + 1);
+	}
+}
+
+unsigned int clk_get_children(char *name)
+{
+	struct clk_core *core;
+	struct clk *pclk = __clk_lookup(name);
+
+	core = pclk->core;
+	clk_show_subtree(core, 0);
+	return sibling;
+}
+
 static struct clk_core *__clk_lookup_subtree(const char *name,
 					     struct clk_core *core)
 {
diff --git a/drivers/clk/zynqmp/clkc.c b/drivers/clk/zynqmp/clkc.c
index 9dd00f4..9055e99 100644
--- a/drivers/clk/zynqmp/clkc.c
+++ b/drivers/clk/zynqmp/clkc.c
@@ -1126,3 +1126,20 @@ static int __init zynqmp_clock_init(void)
 	return 0;
 }
 arch_initcall(zynqmp_clock_init);
+
+static int __init warn_vpll_multiuser(void)
+{
+	unsigned int children;
+
+	children = clk_get_children("vpll");
+/*
+ * Account for vpll_to_lpd and dp_video_ref
+ *
+ */
+	if (children > 2) {
+		pr_err("Two devices are using vpll which is forbidden\n");
+		BUG();
+	}
+	return 0;
+}
+late_initcall_sync(warn_vpll_multiuser);
diff --git a/include/linux/clk-provider.h b/include/linux/clk-provider.h
index a39c0c5..dd37a1f 100644
--- a/include/linux/clk-provider.h
+++ b/include/linux/clk-provider.h
@@ -738,6 +738,7 @@ unsigned int __clk_get_enable_count(struct clk *clk);
 unsigned long clk_hw_get_rate(const struct clk_hw *hw);
 unsigned long __clk_get_flags(struct clk *clk);
 unsigned long clk_hw_get_flags(const struct clk_hw *hw);
+unsigned int clk_get_children(char *name);
 bool clk_hw_is_prepared(const struct clk_hw *hw);
 bool clk_hw_is_enabled(const struct clk_hw *hw);
 bool __clk_is_enabled(struct clk *clk);
-- 
1.7.5.4

