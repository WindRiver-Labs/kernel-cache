From 9da9054871ea1ae05a8b94133b07f00acb888265 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Thu, 23 Feb 2017 18:14:35 -0800
Subject: [PATCH 1362/1566] sound: soc: xilinx: Call set_rate()

commit  f3da7f16a0b24e2262ea144ee4b7c3a4d7aea2a4 from
https://github.com/Xilinx/linux-xlnx.git

Instead of using the given clock rate, this patch is trying to set
the clock rate to specific audio frequency. With this patch,
the clock frequency doesn't have to be preconfigured to specific
frequency.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/xilinx/xilinx-dp-codec.c |   45 ++++++++++++++++++++++++++++-------
 1 files changed, 36 insertions(+), 9 deletions(-)

diff --git a/sound/soc/xilinx/xilinx-dp-codec.c b/sound/soc/xilinx/xilinx-dp-codec.c
index e9eb7ad..b610887 100644
--- a/sound/soc/xilinx/xilinx-dp-codec.c
+++ b/sound/soc/xilinx/xilinx-dp-codec.c
@@ -30,6 +30,11 @@ struct xilinx_dp_codec {
 	struct clk *aud_clk;
 };
 
+struct xilinx_dp_codec_fmt {
+	unsigned long rate;
+	unsigned int snd_rate;
+};
+
 static struct snd_soc_dai_driver xilinx_dp_codec_dai = {
 	.name		= "xilinx-dp-snd-codec-dai",
 	.playback	= {
@@ -40,13 +45,26 @@ static struct snd_soc_dai_driver xilinx_dp_codec_dai = {
 	},
 };
 
+static const struct xilinx_dp_codec_fmt rates[] = {
+	{
+		.rate	= 48000 * 512,
+		.snd_rate = SNDRV_PCM_RATE_48000
+	},
+	{
+		.rate	= 44100 * 512,
+		.snd_rate = SNDRV_PCM_RATE_44100
+	}
+};
+
 static const struct snd_soc_codec_driver xilinx_dp_codec_codec_driver = {
 };
 
 static int xilinx_dp_codec_probe(struct platform_device *pdev)
 {
 	struct xilinx_dp_codec *codec;
-	int rate, ret;
+	unsigned int i;
+	unsigned long rate;
+	int ret;
 
 	codec = devm_kzalloc(&pdev->dev, sizeof(*codec), GFP_KERNEL);
 	if (!codec)
@@ -62,15 +80,24 @@ static int xilinx_dp_codec_probe(struct platform_device *pdev)
 		return ret;
 	}
 
-	rate = clk_get_rate(codec->aud_clk) / 512;
-	/* Ignore some offset */
-	rate = ALIGN(rate, 100);
-	if (rate == 44100) {
-		xilinx_dp_codec_dai.playback.rates = SNDRV_PCM_RATE_44100;
-	} else if (rate == 48000) {
-		xilinx_dp_codec_dai.playback.rates = SNDRV_PCM_RATE_48000;
-	} else {
+	for (i = 0; i < ARRAY_SIZE(rates); i++) {
+		clk_disable_unprepare(codec->aud_clk);
+		ret = clk_set_rate(codec->aud_clk, rates[i].rate);
+		clk_prepare_enable(codec->aud_clk);
+		if (ret)
+			continue;
+
+		rate = clk_get_rate(codec->aud_clk);
+		/* Ignore some offset +- 10 */
+		if (abs(rates[i].rate - rate) < 10) {
+			xilinx_dp_codec_dai.playback.rates = rates[i].snd_rate;
+			break;
+		}
 		ret = -EINVAL;
+	}
+
+	if (ret) {
+		dev_err(&pdev->dev, "Failed to get required clock freq\n");
 		goto error_clk;
 	}
 
-- 
1.7.5.4

