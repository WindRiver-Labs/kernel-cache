From 5cbc1d5ce4472773ad2479266465ccc31fedc5b9 Mon Sep 17 00:00:00 2001
From: Punnaiah Choudary Kalluri <punnaiah.choudary.kalluri@xilinx.com>
Date: Wed, 11 May 2016 00:16:19 +0530
Subject: [PATCH 0711/1566] net: macb: Fix kernel crash when MACB_EXT_BD is
 enabled

When MACB_EXT_BD config option is enabled, while sending TCP data, observing
Kernel crash due to NULL pointer dereference.

Added fix to ensure skb is a valid pointer before dereferencing it for
checking the time stamp option.

Signed-off-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
Acked-by: Harini Katakam <harinik@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 drivers/net/ethernet/cadence/macb.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/cadence/macb.c b/drivers/net/ethernet/cadence/macb.c
index 73d7b81..77efdeb 100644
--- a/drivers/net/ethernet/cadence/macb.c
+++ b/drivers/net/ethernet/cadence/macb.c
@@ -736,12 +736,12 @@ static void macb_tx_interrupt(struct macb_queue *queue)
 					    macb_tx_ring_wrap(tail), skb->data);
 				bp->stats.tx_packets++;
 				bp->stats.tx_bytes += skb->len;
-			}
-
 #ifdef CONFIG_MACB_EXT_BD
-			if (skb_shinfo(skb)->tx_flags & SKBTX_HW_TSTAMP)
-				macb_handle_txtstamp(bp, skb, desc);
+				if (skb_shinfo(skb)->tx_flags & SKBTX_HW_TSTAMP)
+					macb_handle_txtstamp(bp, skb, desc);
 #endif
+			}
+
 			/* Now we can safely release resources */
 			macb_tx_unmap(bp, tx_skb);
 
-- 
1.7.5.4

