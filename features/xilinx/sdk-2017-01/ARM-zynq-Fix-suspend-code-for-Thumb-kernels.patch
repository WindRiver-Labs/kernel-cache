From 99edcd02a0368d9e6a0908d84cb1279bb35272b3 Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Wed, 21 Sep 2016 07:00:31 -0700
Subject: [PATCH 1034/1566] ARM: zynq: Fix suspend code for Thumb kernels

commit  ffc9e7f5b5040ba625d965330ffbb01b0ffd332b from
https://github.com/Xilinx/linux-xlnx.git

When the kernel is compiled in Thumb mode (CONFIG_THUMB2_KERNEL)
copying and jumping/returning to/from the suspend code in OCM failed due
to misinterpreting or ignoring bit 0 of function addresses - which
indicates the execution state at the jump destination - , resulting
with the kernel crashing on an undefined instruction.

In detail, the suspend code was copied with an erroneous, additional
offset of 1 due to the LSB in the address of zynq_sys_suspend being set.
And jumping to the code failed as
 1. the additional offset wasn't taken into account when jumping
 2. the jump switched to ARM state even though the destination contains
    Thumb code

Fixed by using the 'fncpy' macro to do the copying and obtaining the
function pointer to call.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/mach-zynq/pm.c      |   17 ++++++++---------
 arch/arm/mach-zynq/suspend.S |    1 +
 2 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/arch/arm/mach-zynq/pm.c b/arch/arm/mach-zynq/pm.c
index 4ece87b..6296e75 100644
--- a/arch/arm/mach-zynq/pm.c
+++ b/arch/arm/mach-zynq/pm.c
@@ -23,6 +23,7 @@
 #include <linux/genalloc.h>
 #include <linux/suspend.h>
 #include <asm/cacheflush.h>
+#include <asm/fncpy.h>
 #include <asm/hardware/cache-l2x0.h>
 #include <asm/mach/map.h>
 #include <asm/suspend.h>
@@ -42,7 +43,7 @@
 static void __iomem *ddrc_base;
 
 #ifdef CONFIG_SUSPEND
-static void __iomem *ocm_base;
+static int (*zynq_suspend_ptr)(void __iomem *, void __iomem *);
 
 static int zynq_pm_prepare_late(void)
 {
@@ -57,14 +58,12 @@ static void zynq_pm_wake(void)
 static int zynq_pm_suspend(unsigned long arg)
 {
 	u32 reg;
-	int (*zynq_suspend_ptr)(void __iomem *, void __iomem *) =
-		(__force void *)ocm_base;
 	int do_ddrpll_bypass = 1;
 
 	/* Topswitch clock stop disable */
 	zynq_clk_topswitch_disable();
 
-	if (!ocm_base || !ddrc_base) {
+	if (!zynq_suspend_ptr || !ddrc_base) {
 		do_ddrpll_bypass = 0;
 	} else {
 		/* enable DDRC self-refresh mode */
@@ -181,7 +180,8 @@ static void __iomem *zynq_pm_remap_ocm(void)
 
 static void zynq_pm_suspend_init(void)
 {
-	ocm_base = zynq_pm_remap_ocm();
+	void __iomem *ocm_base = zynq_pm_remap_ocm();
+
 	if (!ocm_base) {
 		pr_warn("%s: Unable to map OCM.\n", __func__);
 	} else {
@@ -190,10 +190,9 @@ static void zynq_pm_suspend_init(void)
 		 * needs to run from OCM as DRAM may no longer be available
 		 * when the PLL is stopped.
 		 */
-		memcpy((__force void *)ocm_base, &zynq_sys_suspend,
-			zynq_sys_suspend_sz);
-		flush_icache_range((unsigned long)ocm_base,
-			(unsigned long)(ocm_base) + zynq_sys_suspend_sz);
+		zynq_suspend_ptr = fncpy((__force void *)ocm_base,
+					 (__force void *)&zynq_sys_suspend,
+					 zynq_sys_suspend_sz);
 	}
 
 	suspend_set_ops(&zynq_pm_ops);
diff --git a/arch/arm/mach-zynq/suspend.S b/arch/arm/mach-zynq/suspend.S
index 30705c7..f3f8440 100644
--- a/arch/arm/mach-zynq/suspend.S
+++ b/arch/arm/mach-zynq/suspend.S
@@ -37,6 +37,7 @@
 #define MAXTRIES		100
 
 	.text
+	.align 3
 
 /**
  * zynq_sys_suspend - Enter suspend
-- 
1.7.5.4

