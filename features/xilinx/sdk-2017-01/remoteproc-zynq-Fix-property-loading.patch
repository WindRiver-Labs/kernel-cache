From dd01b80ec062683f70a405144437ffe3ad0c47d4 Mon Sep 17 00:00:00 2001
From: Michal Simek <monstr@monstr.eu>
Date: Mon, 25 Jun 2012 09:59:31 +0200
Subject: [PATCH 1007/1566] remoteproc: zynq: Fix property loading

commit  f0b3b01f977144361f9558b758cfd988374ab8cc from
https://github.com/Xilinx/linux-xlnx.git

Always check that required properties exist.
Value 0 is also valid.

Signed-off-by: Michal Simek <monstr@monstr.eu>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/remoteproc/zynq_remoteproc.c |   39 ++++++++++++++++++++-------------
 1 files changed, 24 insertions(+), 15 deletions(-)

diff --git a/drivers/remoteproc/zynq_remoteproc.c b/drivers/remoteproc/zynq_remoteproc.c
index 65f0113..d0d70b9 100644
--- a/drivers/remoteproc/zynq_remoteproc.c
+++ b/drivers/remoteproc/zynq_remoteproc.c
@@ -171,6 +171,7 @@ static void clear_irq(struct platform_device *pdev)
 static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 {
 	const unsigned char *prop;
+	const void *of_prop;
 	struct resource *res; /* IO mem resources */
 	int ret = 0;
 	struct irq_list *tmp;
@@ -248,26 +249,34 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 	}
 
 	/* Allocate free IPI number */
-	local->ipino = be32_to_cpup(of_get_property(pdev->dev.of_node,
-								"ipino", NULL));
-	if (local->ipino) {
-		ret = set_ipi_handler(local->ipino, ipi_kick, "Firmware kick");
-		if (ret) {
-			dev_err(&pdev->dev, "IPI handler already registered\n");
-			goto ipi_fault;
-		}
-	} else
+	of_prop = of_get_property(pdev->dev.of_node, "ipino", NULL);
+	if (!of_prop) {
+		dev_err(&pdev->dev, "Please specify ipino node property\n");
+		goto ipi_fault;
+	}
+
+	local->ipino = be32_to_cpup(of_prop);
+	ret = set_ipi_handler(local->ipino, ipi_kick, "Firmware kick");
+	if (ret) {
+		dev_err(&pdev->dev, "IPI handler already registered\n");
 		goto ipi_fault;
+	}
 
+	/* Read vring0 ipi number */
+	of_prop = of_get_property(pdev->dev.of_node, "vring0", NULL);
+	if (!of_prop) {
+		dev_err(&pdev->dev, "Please specify vring0 node property\n");
+		goto ipi_fault;
+	}
+	local->vring0 = be32_to_cpup(of_prop);
 
-	local->vring0 = be32_to_cpup(of_get_property(pdev->dev.of_node,
-							"vring0", NULL));
-	local->vring1 = be32_to_cpup(of_get_property(pdev->dev.of_node,
-							"vring1", NULL));
-	if (!local->vring0 || !local->vring1) {
-		dev_err(&pdev->dev, "Please setup RX/TX swirq to firmware\n");
+	/* Read vring1 ipi number */
+	of_prop = of_get_property(pdev->dev.of_node, "vring1", NULL);
+	if (!of_prop) {
+		dev_err(&pdev->dev, "Please specify vring1 node property\n");
 		goto ipi_fault;
 	}
+	local->vring1 = be32_to_cpup(of_prop);
 
 	/* Module param firmware first */
 	if (firmware)
-- 
1.7.5.4

