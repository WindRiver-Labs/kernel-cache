From 8e38fa84e2fc4c468193278b6aeb74c42261c623 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Tue, 13 Nov 2012 14:14:44 +0100
Subject: [PATCH 0059/1566] net: xilinx_emacps: Fix MII initialization

MII probing should be done in open function.

The problem was that phydev was connected in the xemacps_probe
function and disconnected in the xemacps_close function.

It means that if device is closed and open again phydev
is not connected because phydev connection is not setup.
It ends with NULL pointer exception because
phydev->attached_dev(in phy_detach()) is NULL.

The bug was introduced by this commit:
"net: xilinx_emacps: Synchronization with PetaLinux tree"
(sha1: 8222a810a56b10b67be3d75fe3ac25150e19c8c2)

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Tested-by: John Linn <john.linn@xilinx.com>
Tested-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
---
 drivers/net/ethernet/xilinx/xilinx_emacps.c |   17 ++---------------
 1 files changed, 2 insertions(+), 15 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emacps.c b/drivers/net/ethernet/xilinx/xilinx_emacps.c
index caf1002..5f288c0 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emacps.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emacps.c
@@ -923,15 +923,8 @@ static int xemacps_mii_init(struct net_local *lp)
 	if (of_mdiobus_register(lp->mii_bus, np))
 		goto err_out_free_mdio_irq;
 
-	if (xemacps_mii_probe(lp->ndev) != 0) {
-		printk(KERN_ERR "%s mii_probe fail.\n", lp->mii_bus->name);
-		goto err_out_unregister_bus;
-	}
-
 	return 0;
 
-err_out_unregister_bus:
-	mdiobus_unregister(lp->mii_bus);
 err_out_free_mdio_irq:
 	kfree(lp->mii_bus->irq);
 err_out_free_mdiobus:
@@ -2145,7 +2138,7 @@ static int xemacps_open(struct net_device *ndev)
 
 	xemacps_init_hw(lp);
 	napi_enable(&lp->napi);
-/*	rc = xemacps_mii_probe(ndev);
+	rc = xemacps_mii_probe(ndev);
 	if (rc != 0) {
 		printk(KERN_ERR "%s mii_probe fail.\n", lp->mii_bus->name);
 		if (rc == (-2)) {
@@ -2155,7 +2148,7 @@ static int xemacps_open(struct net_device *ndev)
 		}
 		rc = -ENXIO;
 		goto err_pm_put;
-	} */
+	}
 
 	netif_carrier_on(ndev);
 
@@ -3095,12 +3088,6 @@ static int __init xemacps_probe(struct platform_device *pdev)
 	printk(KERN_INFO "%s, pdev->id %d, baseaddr 0x%08lx, irq %d\n",
 		ndev->name, pdev->id, ndev->base_addr, ndev->irq);
 
-	printk(KERN_INFO "%s, phy_addr 0x%x, phy_id 0x%08x\n",
-		ndev->name, lp->phy_dev->addr, lp->phy_dev->phy_id);
-
-	printk(KERN_INFO "%s, attach [%s] phy driver\n", ndev->name,
-		lp->phy_dev->drv->name);
-
 	return 0;
 
 err_out_unregister_clk_notifier:
-- 
1.7.5.4

