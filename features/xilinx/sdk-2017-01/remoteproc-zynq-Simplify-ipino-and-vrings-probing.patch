From 7867ec181e192d629206a3b907931d41a6cdb9f0 Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Wed, 10 Jul 2013 10:51:13 +0200
Subject: [PATCH 1020/1566] remoteproc: zynq: Simplify ipino and vrings
 probing

commit  8997f1268f85d8a2e4f15e652cc1f25098f1ecd2 from
https://github.com/Xilinx/linux-xlnx.git

Use of_property_read_u32 which simplify binding.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/remoteproc/zynq_remoteproc.c |   22 +++++++++-------------
 1 files changed, 9 insertions(+), 13 deletions(-)

diff --git a/drivers/remoteproc/zynq_remoteproc.c b/drivers/remoteproc/zynq_remoteproc.c
index 1d179be..ede3a7d 100644
--- a/drivers/remoteproc/zynq_remoteproc.c
+++ b/drivers/remoteproc/zynq_remoteproc.c
@@ -171,7 +171,6 @@ static void clear_irq(struct platform_device *pdev)
 static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 {
 	const unsigned char *prop;
-	const void *of_prop;
 	struct resource *res; /* IO mem resources */
 	int ret = 0;
 	struct irq_list *tmp;
@@ -262,13 +261,12 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 	}
 
 	/* Allocate free IPI number */
-	of_prop = of_get_property(pdev->dev.of_node, "ipino", NULL);
-	if (!of_prop) {
-		dev_err(&pdev->dev, "Please specify ipino node property\n");
+	ret = of_property_read_u32(pdev->dev.of_node, "ipino", &local->ipino);
+	if (ret < 0) {
+		dev_err(&pdev->dev, "unable to read property");
 		goto irq_fault;
 	}
 
-	local->ipino = be32_to_cpup(of_prop);
 	ret = set_ipi_handler(local->ipino, ipi_kick, "Firmware kick");
 	if (ret) {
 		dev_err(&pdev->dev, "IPI handler already registered\n");
@@ -276,20 +274,18 @@ static int __devinit zynq_remoteproc_probe(struct platform_device *pdev)
 	}
 
 	/* Read vring0 ipi number */
-	of_prop = of_get_property(pdev->dev.of_node, "vring0", NULL);
-	if (!of_prop) {
-		dev_err(&pdev->dev, "Please specify vring0 node property\n");
+	ret = of_property_read_u32(pdev->dev.of_node, "vring0", &local->vring0);
+	if (ret < 0) {
+		dev_err(&pdev->dev, "unable to read property");
 		goto ipi_fault;
 	}
-	local->vring0 = be32_to_cpup(of_prop);
 
 	/* Read vring1 ipi number */
-	of_prop = of_get_property(pdev->dev.of_node, "vring1", NULL);
-	if (!of_prop) {
-		dev_err(&pdev->dev, "Please specify vring1 node property\n");
+	ret = of_property_read_u32(pdev->dev.of_node, "vring1", &local->vring1);
+	if (ret < 0) {
+		dev_err(&pdev->dev, "unable to read property");
 		goto ipi_fault;
 	}
-	local->vring1 = be32_to_cpup(of_prop);
 
 	/* Module param firmware first */
 	if (firmware)
-- 
1.7.5.4

