From d4ba1f4a0b6d74f96755009b69c3def137376265 Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Fri, 27 Jan 2017 15:06:55 -0800
Subject: [PATCH 1185/1566] remoteproc: zynqmp_r5: init workqueue
 unconditionally

commit  6eca06abe1d41ef7316836b0a493225114627e8c from
https://github.com/Xilinx/linux-xlnx.git

In RPU start(), previously, it only init workqueue if RPU is
0. It will not init workqueu if it is RPU_1.
We should init workqueu unconditionally.

Signed-off-by: Wendy Liang <jliang@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/remoteproc/zynqmp_r5_remoteproc.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/drivers/remoteproc/zynqmp_r5_remoteproc.c b/drivers/remoteproc/zynqmp_r5_remoteproc.c
index a89d0a3..007d035 100644
--- a/drivers/remoteproc/zynqmp_r5_remoteproc.c
+++ b/drivers/remoteproc/zynqmp_r5_remoteproc.c
@@ -345,8 +345,7 @@ static int zynqmp_r5_rproc_start(struct rproc *rproc)
 	struct zynqmp_r5_rproc_pdata *local = rproc->priv;
 
 	dev_dbg(dev, "%s\n", __func__);
-	if (local->rpu_id == 0)
-		INIT_WORK(&local->workqueue, handle_event_notified);
+	INIT_WORK(&local->workqueue, handle_event_notified);
 
 	/*
 	 * Use memory barrier to make sure all write memory operations
-- 
1.7.5.4

