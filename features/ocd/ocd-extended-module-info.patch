From dc9f5979756a32291e9350136f6c192f83b861e5 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Wed, 12 Mar 2014 07:16:02 -0700
Subject: [PATCH 3/4] ocd: extended module info

Keep extended module info around for OCD use, just like KGDB does

Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
[Fix context conflict on top of grsec patches]
Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 include/linux/module.h |    8 +++++---
 kernel/module.c        |   16 ++++++++++++++--
 2 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/include/linux/module.h b/include/linux/module.h
index fa1af5d..0278538 100644
--- a/include/linux/module.h
+++ b/include/linux/module.h
@@ -318,13 +318,15 @@ struct module
 	unsigned int num_symtab, core_num_syms;
 	char *strtab, *core_strtab;
 
-	/* Section attributes */
-	struct module_sect_attrs *sect_attrs;
-
 	/* Notes attributes */
 	struct module_notes_attrs *notes_attrs;
 #endif
 
+#if defined(CONFIG_KALLSYMS) || defined (CONFIG_WR_OCD_DEBUG)
+	/* Section attributes */
+	struct module_sect_attrs *sect_attrs;
+#endif
+
 	/* The command line arguments (may be mangled).  People like
 	   keeping pointers to this stuff */
 	char *args;
diff --git a/kernel/module.c b/kernel/module.c
index c6b24ef..f51ceff 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -1320,7 +1320,8 @@ resolve_symbol_wait(struct module *mod,
  */
 #ifdef CONFIG_SYSFS
 
-#if defined(CONFIG_KALLSYMS) && !defined(CONFIG_GRKERNSEC_HIDESYM)
+#if (defined(CONFIG_KALLSYMS) || defined(CONFIG_WR_OCD_DEBUG)) && !defined(CONFIG_GRKERNSEC_HIDESYM)
+#ifdef CONFIG_KALLSYMS
 static inline bool sect_empty(const Elf_Shdr *sect)
 {
 	return !(sect->sh_flags & SHF_ALLOC) || sect->sh_size == 0;
@@ -1347,6 +1348,7 @@ static ssize_t module_sect_show(struct module_attribute *mattr,
 		container_of(mattr, struct module_sect_attr, mattr);
 	return sprintf(buf, "0x%pK\n", (void *)sattr->address);
 }
+#endif /* CONFIG_KALLSYMS */
 
 static void free_sect_attrs(struct module_sect_attrs *sect_attrs)
 {
@@ -1394,7 +1396,9 @@ static void add_sect_attrs(struct module *mod, const struct load_info *info)
 			goto out;
 		sect_attrs->nsections++;
 		sysfs_attr_init(&sattr->mattr.attr);
+#ifdef CONFIG_KALLSYMS
 		sattr->mattr.show = module_sect_show;
+#endif
 		sattr->mattr.store = NULL;
 		sattr->mattr.attr.name = sattr->name;
 		sattr->mattr.attr.mode = S_IRUGO;
@@ -1423,6 +1427,7 @@ static void remove_sect_attrs(struct module *mod)
 	}
 }
 
+#ifdef CONFIG_KALLSYMS
 /*
  * /sys/module/foo/notes/.section.name gives contents of SHT_NOTE sections.
  */
@@ -1520,8 +1525,9 @@ static void remove_notes_attrs(struct module *mod)
 	if (mod->notes_attrs)
 		free_notes_attrs(mod->notes_attrs, mod->notes_attrs->notes);
 }
+#endif /* CONFIG_KALLSYMS */
 
-#else
+#else /* ! (CONFIG_KALLSYMS || CONFIG_WR_OCD_DEBUG && !CONFIG_GRKERNSEC_HIDESYM) */
 
 static inline void add_sect_attrs(struct module *mod,
 				  const struct load_info *info)
@@ -1532,6 +1538,7 @@ static inline void remove_sect_attrs(struct module *mod)
 {
 }
 
+#ifdef CONFIG_KALLSYMS
 static inline void add_notes_attrs(struct module *mod,
 				   const struct load_info *info)
 {
@@ -1541,6 +1548,7 @@ static inline void remove_notes_attrs(struct module *mod)
 {
 }
 #endif /* CONFIG_KALLSYMS */
+#endif /* CONFIG_KALLSYMS || CONFIG_WR_OCD_DEBUG && !CONFIG_GRKERNSEC_HIDESYM */
 
 static void add_usage_links(struct module *mod)
 {
@@ -2237,6 +2245,7 @@ static void free_modinfo(struct module *mod)
 	}
 }
 
+#if (defined(CONFIG_KALLSYMS) || defined (CONFIG_WR_OCD_DEBUG))
 #ifdef CONFIG_KALLSYMS
 
 /* lookup symbol in given range of kernel_symbols */
@@ -2258,6 +2267,7 @@ static int is_exported(const char *name, unsigned long value,
 		ks = lookup_symbol(name, mod->syms, mod->syms + mod->num_syms);
 	return ks != NULL && ks->value == value;
 }
+#endif /* CONFIG_KALLSYMS */
 
 /* As per nm */
 static char elf_type(const Elf_Sym *sym, const struct load_info *info)
@@ -2321,6 +2331,7 @@ static bool is_core_symbol(const Elf_Sym *src, const Elf_Shdr *sechdrs,
 	return true;
 }
 
+#ifdef CONFIG_KALLSYMS
 /*
  * We only allocate and copy the strings needed by the parts of symtab
  * we keep.  This is simple, but has the effect of making multiple
@@ -2409,6 +2420,7 @@ static void add_kallsyms(struct module *mod, const struct load_info *info)
 {
 }
 #endif /* CONFIG_KALLSYMS */
+#endif /* CONFIG_KALLSYMS || CONFIG_WR_OCD_DEBUG */
 
 static void dynamic_debug_setup(struct _ddebug *debug, unsigned int num)
 {
-- 
1.7.9.5

