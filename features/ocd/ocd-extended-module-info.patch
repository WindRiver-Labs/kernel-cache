From 1b4b730f3b41cd48378480fc6e9e719463ee9687 Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce.ashfield@windriver.com>
Date: Mon, 2 Feb 2009 13:53:59 -0500
Subject: [PATCH 3/3] ocd: extended module info

Keep extended module info around for OCD use, just like KGDB does

Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 include/linux/module.h |    8 +++++---
 kernel/module.c        |   10 +++++++++-
 2 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/include/linux/module.h b/include/linux/module.h
index fbcafe2..606e6f1 100644
--- a/include/linux/module.h
+++ b/include/linux/module.h
@@ -309,13 +309,15 @@ struct module
 	unsigned int num_symtab, core_num_syms;
 	char *strtab, *core_strtab;
 
-	/* Section attributes */
-	struct module_sect_attrs *sect_attrs;
-
 	/* Notes attributes */
 	struct module_notes_attrs *notes_attrs;
 #endif
 
+#if defined(CONFIG_KALLSYMS) || defined (CONFIG_WR_OCD_DEBUG)
+	/* Section attributes */
+	struct module_sect_attrs *sect_attrs;
+#endif
+
 	/* The command line arguments (may be mangled).  People like
 	   keeping pointers to this stuff */
 	char *args;
diff --git a/kernel/module.c b/kernel/module.c
index 78ac6ec..2adee82 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -1255,6 +1255,7 @@ resolve_symbol_wait(struct module *mod,
  */
 #ifdef CONFIG_SYSFS
 
+#if (defined(CONFIG_KALLSYMS) || defined (CONFIG_WR_OCD_DEBUG))
 #ifdef CONFIG_KALLSYMS
 static inline bool sect_empty(const Elf_Shdr *sect)
 {
@@ -1282,6 +1283,7 @@ static ssize_t module_sect_show(struct module_attribute *mattr,
 		container_of(mattr, struct module_sect_attr, mattr);
 	return sprintf(buf, "0x%pK\n", (void *)sattr->address);
 }
+#endif /* CONFIG_KALLSYMS */
 
 static void free_sect_attrs(struct module_sect_attrs *sect_attrs)
 {
@@ -1329,7 +1331,9 @@ static void add_sect_attrs(struct module *mod, const struct load_info *info)
 			goto out;
 		sect_attrs->nsections++;
 		sysfs_attr_init(&sattr->mattr.attr);
+#ifdef CONFIG_KALLSYMS
 		sattr->mattr.show = module_sect_show;
+#endif
 		sattr->mattr.store = NULL;
 		sattr->mattr.attr.name = sattr->name;
 		sattr->mattr.attr.mode = S_IRUGO;
@@ -1358,6 +1362,7 @@ static void remove_sect_attrs(struct module *mod)
 	}
 }
 
+#ifdef CONFIG_KALLSYMS
 /*
  * /sys/module/foo/notes/.section.name gives contents of SHT_NOTE sections.
  */
@@ -1455,8 +1460,9 @@ static void remove_notes_attrs(struct module *mod)
 	if (mod->notes_attrs)
 		free_notes_attrs(mod->notes_attrs, mod->notes_attrs->notes);
 }
+#endif /* CONFIG_KALLSYMS */
 
-#else
+#else /* ! (CONFIG_KALLSYMS || CONFIG_WR_OCD_DEBUG) */
 
 static inline void add_sect_attrs(struct module *mod,
 				  const struct load_info *info)
@@ -1467,6 +1473,7 @@ static inline void remove_sect_attrs(struct module *mod)
 {
 }
 
+#ifdef CONFIG_KALLSYMS
 static inline void add_notes_attrs(struct module *mod,
 				   const struct load_info *info)
 {
@@ -1476,6 +1483,7 @@ static inline void remove_notes_attrs(struct module *mod)
 {
 }
 #endif /* CONFIG_KALLSYMS */
+#endif /* CONFIG_KALLSYMS || CONFIG_WR_OCD_DEBUG */
 
 static void add_usage_links(struct module *mod)
 {
-- 
1.7.0.4

