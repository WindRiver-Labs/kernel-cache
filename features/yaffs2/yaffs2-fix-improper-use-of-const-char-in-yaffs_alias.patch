From 0a9afb264b7f50ca6b2271336836d8906fc3927f Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 21 Jul 2010 07:15:28 +0800
Subject: [PATCH] yaffs2: fix improper use of const char in yaffs_alias

because vfs_follow_link(struct nameidata *nd, const char *link)
and vfs_readlink(struct dentry *dentry, ...,  const char *link)
need a const char * to pass the link. So it should not be kmalloced
and kfree-ed dynamically.

This will incur to the following results:
	yaffs_follow_link()
	vfs_follow_link()
	link_path_walk()
		|
842             `-> this.name = name;
And this assignment and the related d_inode will be not available
after kfree(alias). so this will trigger no link existence at the
do_last:
1649         if (!(open_flag & O_CREAT)) {
1650                 error = do_lookup(nd, &nd->last, path);
1651                 if (error)
1652                         goto exit;
1653                 error = -ENOENT;
1654                 if (!path->dentry->d_inode)
1655                         goto exit_dput;
			^^^
And so the kernel boot will be failure due to null init.

In yaffs, yaffs_CloneString is actually kmallocing into the local variable
'alias'. So to remove yaffs_CloneString in yaffs_GetSymlinkAlias and the
related kfree meets this fix.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 fs/yaffs2/yaffs_fs.c   |    2 --
 fs/yaffs2/yaffs_guts.c |    2 +-
 2 files changed, 1 insertions(+), 3 deletions(-)

diff --git a/fs/yaffs2/yaffs_fs.c b/fs/yaffs2/yaffs_fs.c
index 69b739b..921929d 100644
--- a/fs/yaffs2/yaffs_fs.c
+++ b/fs/yaffs2/yaffs_fs.c
@@ -548,7 +548,6 @@ static int yaffs_readlink(struct dentry *dentry, char __user *buffer,
 		return -ENOMEM;
 
 	ret = vfs_readlink(dentry, buffer, buflen, alias);
-	kfree(alias);
 	return ret;
 }
 
@@ -574,7 +573,6 @@ static int yaffs_follow_link(struct dentry *dentry, struct nameidata *nd)
 	}
 
 	ret = vfs_follow_link(nd, alias);
-	kfree(alias);
 out:
 #if (LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13))
 	return ERR_PTR(ret);
diff --git a/fs/yaffs2/yaffs_guts.c b/fs/yaffs2/yaffs_guts.c
index 523bfb7..cf4c5a6 100644
--- a/fs/yaffs2/yaffs_guts.c
+++ b/fs/yaffs2/yaffs_guts.c
@@ -7520,7 +7520,7 @@ YCHAR *yaffs_GetSymlinkAlias(yaffs_Object *obj)
 {
 	obj = yaffs_GetEquivalentObject(obj);
 	if (obj->variantType == YAFFS_OBJECT_TYPE_SYMLINK)
-		return yaffs_CloneString(obj->variant.symLinkVariant.alias);
+		return (obj->variant.symLinkVariant.alias);
 	else
 		return yaffs_CloneString(_Y(""));
 }
-- 
1.6.5.2

