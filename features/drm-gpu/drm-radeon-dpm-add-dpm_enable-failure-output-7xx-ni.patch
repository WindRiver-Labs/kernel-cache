From 31c1a7d6c33a74062a8e5dc0d7b05ed84f823ca6 Mon Sep 17 00:00:00 2001
From: Alex Deucher <alexander.deucher@amd.com>
Date: Thu, 28 Mar 2013 10:44:28 -0400
Subject: [PATCH 547/886] drm/radeon/dpm: add dpm_enable failure output
 (7xx-ni)

commit fa4b5471bd6231d293a2de9ad016e39eb2c9c70e upstream

Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
---
 drivers/gpu/drm/radeon/btc_dpm.c     |   25 +++++++++++++-----
 drivers/gpu/drm/radeon/cypress_dpm.c |   31 +++++++++++++++-------
 drivers/gpu/drm/radeon/ni_dpm.c      |   48 +++++++++++++++++++++++++---------
 drivers/gpu/drm/radeon/rv770_dpm.c   |   17 ++++++++----
 4 files changed, 87 insertions(+), 34 deletions(-)

diff --git a/drivers/gpu/drm/radeon/btc_dpm.c b/drivers/gpu/drm/radeon/btc_dpm.c
index 52fd2c8..4a50b50 100644
--- a/drivers/gpu/drm/radeon/btc_dpm.c
+++ b/drivers/gpu/drm/radeon/btc_dpm.c
@@ -2353,14 +2353,18 @@ int btc_dpm_enable(struct radeon_device *rdev)
 	if (pi->voltage_control) {
 		rv770_enable_voltage_control(rdev, true);
 		ret = cypress_construct_voltage_tables(rdev);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("cypress_construct_voltage_tables failed\n");
 			return ret;
+		}
 	}
 
 	if (pi->mvdd_control) {
 		ret = cypress_get_mvdd_configuration(rdev);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("cypress_get_mvdd_configuration failed\n");
 			return ret;
+		}
 	}
 
 	if (eg_pi->dynamic_ac_timing) {
@@ -2391,27 +2395,34 @@ int btc_dpm_enable(struct radeon_device *rdev)
 		btc_enable_dynamic_pcie_gen2(rdev, true);
 
 	ret = rv770_upload_firmware(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("rv770_upload_firmware failed\n");
 		return ret;
-
+	}
 	ret = cypress_get_table_locations(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("cypress_get_table_locations failed\n");
 		return ret;
+	}
 	ret = btc_init_smc_table(rdev, boot_ps);
 	if (ret)
 		return ret;
 
 	if (eg_pi->dynamic_ac_timing) {
 		ret = cypress_populate_mc_reg_table(rdev, boot_ps);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("cypress_populate_mc_reg_table failed\n");
 			return ret;
+		}
 	}
 
 	cypress_program_response_times(rdev);
 	r7xx_start_smc(rdev);
 	ret = cypress_notify_smc_display_change(rdev, false);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("cypress_notify_smc_display_change failed\n");
 		return ret;
+	}
 	cypress_enable_sclk_control(rdev, true);
 
 	if (eg_pi->memory_transition)
diff --git a/drivers/gpu/drm/radeon/cypress_dpm.c b/drivers/gpu/drm/radeon/cypress_dpm.c
index 9bf7ff7..f90e549 100644
--- a/drivers/gpu/drm/radeon/cypress_dpm.c
+++ b/drivers/gpu/drm/radeon/cypress_dpm.c
@@ -1813,14 +1813,18 @@ int cypress_dpm_enable(struct radeon_device *rdev)
 	if (pi->voltage_control) {
 		rv770_enable_voltage_control(rdev, true);
 		ret = cypress_construct_voltage_tables(rdev);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("cypress_construct_voltage_tables failed\n");
 			return ret;
+		}
 	}
 
 	if (pi->mvdd_control) {
 		ret = cypress_get_mvdd_configuration(rdev);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("cypress_get_mvdd_configuration failed\n");
 			return ret;
+		}
 	}
 
 	if (eg_pi->dynamic_ac_timing) {
@@ -1854,21 +1858,27 @@ int cypress_dpm_enable(struct radeon_device *rdev)
 		cypress_enable_dynamic_pcie_gen2(rdev, true);
 
 	ret = rv770_upload_firmware(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("rv770_upload_firmware failed\n");
 		return ret;
+	}
 
 	ret = cypress_get_table_locations(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("cypress_get_table_locations failed\n");
 		return ret;
-
+	}
 	ret = cypress_init_smc_table(rdev, boot_ps);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("cypress_init_smc_table failed\n");
 		return ret;
-
+	}
 	if (eg_pi->dynamic_ac_timing) {
 		ret = cypress_populate_mc_reg_table(rdev, boot_ps);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("cypress_populate_mc_reg_table failed\n");
 			return ret;
+		}
 	}
 
 	cypress_program_response_times(rdev);
@@ -1876,9 +1886,10 @@ int cypress_dpm_enable(struct radeon_device *rdev)
 	r7xx_start_smc(rdev);
 
 	ret = cypress_notify_smc_display_change(rdev, false);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("cypress_notify_smc_display_change failed\n");
 		return ret;
-
+	}
 	cypress_enable_sclk_control(rdev, true);
 
 	if (eg_pi->memory_transition)
diff --git a/drivers/gpu/drm/radeon/ni_dpm.c b/drivers/gpu/drm/radeon/ni_dpm.c
index 649d949..94007e4 100644
--- a/drivers/gpu/drm/radeon/ni_dpm.c
+++ b/drivers/gpu/drm/radeon/ni_dpm.c
@@ -3530,8 +3530,10 @@ int ni_dpm_enable(struct radeon_device *rdev)
 	if (pi->voltage_control) {
 		rv770_enable_voltage_control(rdev, true);
 		ret = cypress_construct_voltage_tables(rdev);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("cypress_construct_voltage_tables failed\n");
 			return ret;
+		}
 	}
 	if (eg_pi->dynamic_ac_timing) {
 		ret = ni_initialize_mc_reg_table(rdev);
@@ -3552,42 +3554,64 @@ int ni_dpm_enable(struct radeon_device *rdev)
 	if (pi->dynamic_pcie_gen2)
 		ni_enable_dynamic_pcie_gen2(rdev, true);
 	ret = rv770_upload_firmware(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("rv770_upload_firmware failed\n");
 		return ret;
+	}
 	ret = ni_process_firmware_header(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("ni_process_firmware_header failed\n");
 		return ret;
+	}
 	ret = ni_initial_switch_from_arb_f0_to_f1(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("ni_initial_switch_from_arb_f0_to_f1 failed\n");
 		return ret;
+	}
 	ret = ni_init_smc_table(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("ni_init_smc_table failed\n");
 		return ret;
+	}
 	ret = ni_init_smc_spll_table(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("ni_init_smc_spll_table failed\n");
 		return ret;
+	}
 	ret = ni_init_arb_table_index(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("ni_init_arb_table_index failed\n");
 		return ret;
+	}
 	if (eg_pi->dynamic_ac_timing) {
 		ret = ni_populate_mc_reg_table(rdev, boot_ps);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("ni_populate_mc_reg_table failed\n");
 			return ret;
+		}
 	}
 	ret = ni_initialize_smc_cac_tables(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("ni_initialize_smc_cac_tables failed\n");
 		return ret;
+	}
 	ret = ni_initialize_hardware_cac_manager(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("ni_initialize_hardware_cac_manager failed\n");
 		return ret;
+	}
 	ret = ni_populate_smc_tdp_limits(rdev, boot_ps);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("ni_populate_smc_tdp_limits failed\n");
 		return ret;
+	}
 	ni_program_response_times(rdev);
 	r7xx_start_smc(rdev);
 	ret = cypress_notify_smc_display_change(rdev, false);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("cypress_notify_smc_display_change failed\n");
 		return ret;
+	}
 	cypress_enable_sclk_control(rdev, true);
 	if (eg_pi->memory_transition)
 		cypress_enable_mclk_control(rdev, true);
diff --git a/drivers/gpu/drm/radeon/rv770_dpm.c b/drivers/gpu/drm/radeon/rv770_dpm.c
index 0c9a495..cdf823d 100644
--- a/drivers/gpu/drm/radeon/rv770_dpm.c
+++ b/drivers/gpu/drm/radeon/rv770_dpm.c
@@ -1886,8 +1886,10 @@ int rv770_dpm_enable(struct radeon_device *rdev)
 	if (pi->voltage_control) {
 		rv770_enable_voltage_control(rdev, true);
 		ret = rv770_construct_vddc_table(rdev);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("rv770_construct_vddc_table failed\n");
 			return ret;
+		}
 	}
 
 	if (pi->dcodt)
@@ -1895,8 +1897,10 @@ int rv770_dpm_enable(struct radeon_device *rdev)
 
 	if (pi->mvdd_control) {
 		ret = rv770_get_mvdd_configuration(rdev);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("rv770_get_mvdd_configuration failed\n");
 			return ret;
+		}
 	}
 
 	if (rdev->pm.dpm.platform_caps & ATOM_PP_PLATFORM_CAP_BACKBIAS)
@@ -1921,12 +1925,15 @@ int rv770_dpm_enable(struct radeon_device *rdev)
 		rv770_enable_dynamic_pcie_gen2(rdev, true);
 
 	ret = rv770_upload_firmware(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("rv770_upload_firmware failed\n");
 		return ret;
-
+	}
 	ret = rv770_init_smc_table(rdev, boot_ps);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("rv770_init_smc_table failed\n");
 		return ret;
+	}
 
 	rv770_program_response_times(rdev);
 	r7xx_start_smc(rdev);
-- 
1.7.9.5

