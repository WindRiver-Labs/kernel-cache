From 2eb383b321304053566dced710566e960b357ea7 Mon Sep 17 00:00:00 2001
From: Alex Deucher <alexander.deucher@amd.com>
Date: Thu, 28 Mar 2013 10:45:50 -0400
Subject: [PATCH 548/904] drm/radeon/dpm: add dpm_enable failure output (si)

commit 2c48febb47c60df91775366eb8c65556a1cdb3c8 upstream

Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
---
 drivers/gpu/drm/radeon/si_dpm.c | 56 ++++++++++++++++++++++++++++++-----------
 1 file changed, 42 insertions(+), 14 deletions(-)

diff --git a/drivers/gpu/drm/radeon/si_dpm.c b/drivers/gpu/drm/radeon/si_dpm.c
index 32d03f1..dbc18ec 100644
--- a/drivers/gpu/drm/radeon/si_dpm.c
+++ b/drivers/gpu/drm/radeon/si_dpm.c
@@ -5712,8 +5712,10 @@ int si_dpm_enable(struct radeon_device *rdev)
 		si_get_mvdd_configuration(rdev);
 	if (pi->voltage_control) {
 		ret = si_construct_voltage_tables(rdev);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("si_construct_voltage_tables failed\n");
 			return ret;
+		}
 	}
 	if (eg_pi->dynamic_ac_timing) {
 		ret = si_initialize_mc_reg_table(rdev);
@@ -5732,49 +5734,75 @@ int si_dpm_enable(struct radeon_device *rdev)
 	si_enable_display_gap(rdev);
 	si_program_vc(rdev);
 	ret = si_upload_firmware(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_upload_firmware failed\n");
 		return ret;
+	}
 	ret = si_process_firmware_header(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_process_firmware_header failed\n");
 		return ret;
+	}
 	ret = si_initial_switch_from_arb_f0_to_f1(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_initial_switch_from_arb_f0_to_f1 failed\n");
 		return ret;
+	}
 	ret = si_init_smc_table(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_init_smc_table failed\n");
 		return ret;
+	}
 	ret = si_init_smc_spll_table(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_init_smc_spll_table failed\n");
 		return ret;
+	}
 	ret = si_init_arb_table_index(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_init_arb_table_index failed\n");
 		return ret;
+	}
 	if (eg_pi->dynamic_ac_timing) {
 		ret = si_populate_mc_reg_table(rdev, boot_ps);
-		if (ret)
+		if (ret) {
+			DRM_ERROR("si_populate_mc_reg_table failed\n");
 			return ret;
+		}
 	}
 	ret = si_initialize_smc_cac_tables(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_initialize_smc_cac_tables failed\n");
 		return ret;
+	}
 	ret = si_initialize_hardware_cac_manager(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_initialize_hardware_cac_manager failed\n");
 		return ret;
+	}
 	ret = si_initialize_smc_dte_tables(rdev);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_initialize_smc_dte_tables failed\n");
 		return ret;
+	}
 	ret = si_populate_smc_tdp_limits(rdev, boot_ps);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_populate_smc_tdp_limits failed\n");
 		return ret;
+	}
 	ret = si_populate_smc_tdp_limits_2(rdev, boot_ps);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_populate_smc_tdp_limits_2 failed\n");
 		return ret;
+	}
 	si_program_response_times(rdev);
 	si_program_ds_registers(rdev);
 	si_dpm_start_smc(rdev);
 	ret = si_notify_smc_display_change(rdev, false);
-	if (ret)
+	if (ret) {
+		DRM_ERROR("si_notify_smc_display_change failed\n");
 		return ret;
+	}
 	si_enable_sclk_control(rdev, true);
 	si_start_dpm(rdev);
 
-- 
1.8.4.93.g57e4c17

