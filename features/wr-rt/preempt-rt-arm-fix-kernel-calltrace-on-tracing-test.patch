From c178a9546cf03164876533b204278a0970e8254d Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Fri, 8 Mar 2013 16:06:44 +0800
Subject: [PATCH] preempt-rt: arm: fix kernel calltrace on tracing test.

Obviously, spin_lock should never be embedded in raw_spin_lock,
otherwise everything maybe happen, like sleeping function will
be called raw_spin_lock context:

BUG: sleeping function called from invalid context at /buildarea3/fast_build/BUILD/WRLinuxPenguin_5.0.1-WIND00386015-fsl-imx6/14406/bitbake_b    uil8
in_atomic(): 1, irqs_disabled(): 128, pid: 1944, name: jbd2/loop0-8
[<80017f18>] (unwind_backtrace+0x0/0x104) from [<806aff68>] (dump_stack+0x20/0x24)
[<806aff68>] (dump_stack+0x20/0x24) from [<80069404>] (__might_sleep+0x11c/0x120)
[<80069404>] (__might_sleep+0x11c/0x120) from [<806ba494>] (rt_spin_lock+0x2c/0x38)
[<806ba494>] (rt_spin_lock+0x2c/0x38) from [<80017d54>] (unwind_frame+0x350/0x514)
[<80017d54>] (unwind_frame+0x350/0x514) from [<80012c9c>] (walk_stackframe+0x34/0x40)
[<80012c9c>] (walk_stackframe+0x34/0x40) from [<80012d44>] (save_stack_trace_tsk+0x9c/0xa0)
[<80012d44>] (save_stack_trace_tsk+0x9c/0xa0) from [<80012d74>] (save_stack_trace+0x2c/0x30)
[<80012d74>] (save_stack_trace+0x2c/0x30) from [<800cf8f8>] (__ftrace_trace_stack+0x1f8/0x228)
[<800cf8f8>] (__ftrace_trace_stack+0x1f8/0x228) from [<800cfd5c>] (__trace_stack+0x20/0x28)
[<800cfd5c>] (__trace_stack+0x20/0x28) from [<806b1e8c>] (check_critical_timing+0x1e4/0x200)
[<806b1e8c>] (check_critical_timing+0x1e4/0x200) from [<800d720c>] (trace_preempt_on+0x118/0x134)
[<800d720c>] (trace_preempt_on+0x118/0x134) from [<806bd148>] (sub_preempt_count+0xbc/0xf4)
[<806bd148>] (sub_preempt_count+0xbc/0xf4) from [<8006ba34>] (migrate_disable+0x68/0xcc)
[<8006ba34>] (migrate_disable+0x68/0xcc) from [<80130dc4>] (kmem_cache_free+0x24/0x18c)
[<80130dc4>] (kmem_cache_free+0x24/0x18c) from [<7f00b1d4>] (jbd2_journal_put_journal_head+0xf4/0x170 [jbd2])
[<7f00b1d4>] (jbd2_journal_put_journal_head+0xf4/0x170 [jbd2]) from [<8000e938>] (return_to_handler+0x0/0x18)

Here max_trace_lock is raw_spin_lock, kernel/trace/trace_irqsoff.c:336

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/arm/kernel/unwind.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/arch/arm/kernel/unwind.c b/arch/arm/kernel/unwind.c
index 00df012..bbafc67 100644
--- a/arch/arm/kernel/unwind.c
+++ b/arch/arm/kernel/unwind.c
@@ -87,7 +87,7 @@ extern const struct unwind_idx __start_unwind_idx[];
 static const struct unwind_idx *__origin_unwind_idx;
 extern const struct unwind_idx __stop_unwind_idx[];
 
-static DEFINE_SPINLOCK(unwind_lock);
+static DEFINE_RAW_SPINLOCK(unwind_lock);
 static LIST_HEAD(unwind_tables);
 
 /* Convert a prel31 symbol to an absolute address */
@@ -195,7 +195,7 @@ static const struct unwind_idx *unwind_find_idx(unsigned long addr)
 		/* module unwind tables */
 		struct unwind_table *table;
 
-		spin_lock_irqsave(&unwind_lock, flags);
+		raw_spin_lock_irqsave(&unwind_lock, flags);
 		list_for_each_entry(table, &unwind_tables, list) {
 			if (addr >= table->begin_addr &&
 			    addr < table->end_addr) {
@@ -207,7 +207,7 @@ static const struct unwind_idx *unwind_find_idx(unsigned long addr)
 				break;
 			}
 		}
-		spin_unlock_irqrestore(&unwind_lock, flags);
+		raw_spin_unlock_irqrestore(&unwind_lock, flags);
 	}
 
 	pr_debug("%s: idx = %p\n", __func__, idx);
@@ -469,9 +469,9 @@ struct unwind_table *unwind_table_add(unsigned long start, unsigned long size,
 	tab->begin_addr = text_addr;
 	tab->end_addr = text_addr + text_size;
 
-	spin_lock_irqsave(&unwind_lock, flags);
+	raw_spin_lock_irqsave(&unwind_lock, flags);
 	list_add_tail(&tab->list, &unwind_tables);
-	spin_unlock_irqrestore(&unwind_lock, flags);
+	raw_spin_unlock_irqrestore(&unwind_lock, flags);
 
 	return tab;
 }
@@ -483,9 +483,9 @@ void unwind_table_del(struct unwind_table *tab)
 	if (!tab)
 		return;
 
-	spin_lock_irqsave(&unwind_lock, flags);
+	raw_spin_lock_irqsave(&unwind_lock, flags);
 	list_del(&tab->list);
-	spin_unlock_irqrestore(&unwind_lock, flags);
+	raw_spin_unlock_irqrestore(&unwind_lock, flags);
 
 	kfree(tab);
 }
-- 
1.7.0

