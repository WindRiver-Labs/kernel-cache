From e2538ef31e91408ec5aecbd653ba788e9582ae79 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 28 May 2014 15:07:17 -0400
Subject: [PATCH] uio: re-export uio_event_notify removed by swait patch

as it is used by drivers/net/ethernet/broadcom/cnic.c

The commit "uio: Use simple wait queue for read" internalized
it as a static and changed the type, which breaks the above.

Mark the internal one with a double underscore and re-export
the function by wrapping the internal one and making it type
compatible with the old API of the one removed.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/uio/uio.c b/drivers/uio/uio.c
index 761e4b2f728b..051ba02b771d 100644
--- a/drivers/uio/uio.c
+++ b/drivers/uio/uio.c
@@ -409,10 +409,10 @@ static void uio_event_notify_async(struct uio_device *idev)
 }
 
 /**
- * uio_event_notify - trigger an interrupt event
+ * __uio_event_notify - trigger an interrupt event
  * @info: UIO device capabilities
  */
-static irqreturn_t uio_event_notify(struct uio_device *idev)
+static irqreturn_t __uio_event_notify(struct uio_device *idev)
 {
 	atomic_inc(&idev->event);
 	swait_wake_interruptible(&idev->wait);
@@ -428,6 +428,14 @@ static irqreturn_t uio_event_notify(struct uio_device *idev)
 	return IRQ_HANDLED;
 }
 
+void uio_event_notify(struct uio_info *info)
+{
+	struct uio_device *idev = info->uio_dev;
+
+	__uio_event_notify(idev);
+}
+EXPORT_SYMBOL_GPL(uio_event_notify);
+
 /**
  * uio_interrupt - hardware interrupt handler
  * @irq: IRQ number, can be UIO_IRQ_CYCLIC for cyclic timer
@@ -439,7 +447,7 @@ static irqreturn_t uio_interrupt(int irq, void *dev_id)
 	irqreturn_t ret = idev->info->handler(irq, idev->info);
 
 	if (ret == IRQ_HANDLED)
-		ret = uio_event_notify(idev);
+		ret = __uio_event_notify(idev);
 
 	return ret;
 }
diff --git a/include/linux/uio_driver.h b/include/linux/uio_driver.h
index 1bd5fa2c9636..ccb0648eb5b5 100644
--- a/include/linux/uio_driver.h
+++ b/include/linux/uio_driver.h
@@ -107,6 +107,8 @@ extern int __must_check
 	__uio_register_device(THIS_MODULE, parent, info)
 
 extern void uio_unregister_device(struct uio_info *info);
+extern void uio_event_notify(struct uio_info *info);
+
 
 /* defines for uio_info->irq */
 #define UIO_IRQ_CUSTOM	-1
-- 
1.9.3

