From 45827c80a3dd368569b3e7778415bf98a46a076a Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Tue, 18 Nov 2014 12:45:14 -0800
Subject: [PATCH] rt: cpufreq: check whether cpufreq_rwsem is locked before
 trying to acquire it

According to Steve R's commit ("rwsem-rt: Do not allow readers to nest"),
rwsem nest is forbidden on rt kernel in order to align with mainline kernel.
However, rwsem could nest on mainline kernel.

When we set scaling_governor for cpufreq, the below call chain may happen:

store
  -> down_read_trylock(&cpufreq_rwsem)
  ...
  -> store_scaling_governor
     -> cpufreq_get_policy
        -> cpufreq_cpu_get
           -> down_read_trylock(&cpufreq_rwsem)

In this such case, rwsem is nested.

So, adding locked check before acquiring it in cpufreq driver to workaround
this issue instead of taking risk to change rwsem semantic on either mainline
or rt kernel.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 drivers/cpufreq/cpufreq.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index 4159236..a2bd23e 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -198,8 +198,11 @@ struct cpufreq_policy *cpufreq_cpu_get(unsigned int cpu)
 	if (cpufreq_disabled() || (cpu >= nr_cpu_ids))
 		return NULL;
 
-	if (!down_read_trylock(&cpufreq_rwsem))
-		return NULL;
+	/* rwse is disallowed nest on -rt kernel */
+	if (!rwsem_is_locked(&cpufreq_rwsem)) {
+		if (!down_read_trylock(&cpufreq_rwsem))
+			return NULL;
+	}
 
 	/* get the cpufreq driver */
 	read_lock_irqsave(&cpufreq_driver_lock, flags);
-- 
2.0.2

