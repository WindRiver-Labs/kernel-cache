From c1fbfb07be1f197a56253059f096f70ce8a69747 Mon Sep 17 00:00:00 2001
From: Qi Hou <qi.hou@windriver.com>
Date: Tue, 8 Mar 2016 09:29:17 +0800
Subject: [PATCH] fix failure to build the preempt_rt kernel of axxiaarm with
 DEBUG_LOCKING_API_SELFTESTS enabled.

Failed to compile the preempt_rt kernel after manually switching the preemption
model of kernel features from FULL to BASIC and enabling DEBUG_LOCKING_API_SELFTESTS.

The output like this:

| axxiaarm/kernel-source/lib/locking-selftest.c: In function 'dotest':
| axxiaarm/kernel-source/lib/locking-selftest.c:1008:25: error: 'struct task_struct'
has no member named 'migrate_disable_atomic'
| save_migrate_atomic = p->migrate_disable_atomic;
| ^
| axxiaarm/kernel-source/lib/locking-selftest.c:1014:3: error: 'struct task_struct'
has no member named 'migrate_disable_atomic'
| p->migrate_disable_atomic = save_migrate_atomic;
| ^
| axxiaarm/kernel-source/scripts/Makefile.build:258: recipe for target 'lib/locking-
selftest.o' failed
| make[3]: *** [lib/locking-selftest.o] Error 1
| work-shared/axxiaarm/kernel-source/Makefile:937: recipe for target 'lib' failed
| make[2]: *** [lib] Error 2
| Makefile:146: recipe for target 'sub-make' failed
| make[1]: *** [sub-make] Error 2
| Makefile:24: recipe for target '__sub-make' failed
| make: *** [__sub-make] Error 2
| ERROR: oe_runmake failed

The case of this compiling failure is that the member named 'migrate_disable_atomic'
of struct task_struct is not only wrapped by CONFIG_SCHED_DEBUG,but also wrapped by
CONFIG_PREEMPT_RT_FULL.

To fix this bug, the use of this member should be wrapped by CONFIG_PREEMPT_RT_FULL,
beyond CONFIG_SCHED_DEBUG.

Signed-off-by: Qi Hou <qi.hou@windriver.com>
---
 lib/locking-selftest.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/lib/locking-selftest.c b/lib/locking-selftest.c
index 61798da..7fb623d 100644
--- a/lib/locking-selftest.c
+++ b/lib/locking-selftest.c
@@ -1004,15 +1004,19 @@ static void dotest(void (*testcase_fn)(void), int expected, int lockclass_mask)
 
 	WARN_ON(irqs_disabled());
 
+#ifdef CONFIG_PREEMPT_RT_FULL
 #ifdef CONFIG_SCHED_DEBUG
 	save_migrate_atomic = p->migrate_disable_atomic;
 #endif
+#endif
 
 	testcase_fn();
 
+#ifdef CONFIG_PREEMPT_RT_FULL
 #ifdef CONFIG_SCHED_DEBUG
 	p->migrate_disable_atomic = save_migrate_atomic;
 #endif
+#endif
 
 	/*
 	 * Filter out expected failures:
-- 
1.7.5.4

