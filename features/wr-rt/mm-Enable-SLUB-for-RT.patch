From 38d057cd884e68caf09de29dca2f2e4f6963049e Mon Sep 17 00:00:00 2001
From: Thomas Gleixner <tglx@linutronix.de>
Date: Thu, 25 Oct 2012 10:32:35 +0100
Subject: [PATCH] mm: Enable SLUB for RT

Make SLUB RT aware by converting locks to raw and using free lists to
move the freeing out of the lock held region.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 mm/slub.c |   15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/mm/slub.c b/mm/slub.c
index 5e5b701..af47eb4 100644
--- a/mm/slub.c
+++ b/mm/slub.c
@@ -1537,17 +1537,14 @@ static struct page *allocate_slab(struct kmem_cache *s, gfp_t flags, int node)
 	void *start, *p;
 	int idx, order;
 	bool shuffle;
-	bool enableirqs = false;
 
 	flags &= gfp_allowed_mask;
 
-	if (gfpflags_allow_blocking(flags))
-		enableirqs = true;
 #ifdef CONFIG_PREEMPT_RT_FULL
-	if (system_state == SYSTEM_RUNNING)
-		enableirqs = true;
+	if (system_state > SYSTEM_BOOTING)
+#else
+	if (gfpflags_allow_blocking(flags))
 #endif
-	if (enableirqs)
 		local_irq_enable();
 
 	flags |= s->allocflags;
@@ -1622,7 +1619,11 @@ static struct page *allocate_slab(struct kmem_cache *s, gfp_t flags, int node)
 	page->frozen = 1;
 
 out:
-	if (enableirqs)
+#ifdef CONFIG_PREEMPT_RT_FULL
+	if (system_state > SYSTEM_BOOTING)
+#else
+	if (gfpflags_allow_blocking(flags))
+#endif
 		local_irq_disable();
 	if (!page)
 		return NULL;
-- 
1.7.9.5

