From e6bf41efa2dae0bab6e276c86cb1f53a89612041 Mon Sep 17 00:00:00 2001
From: He Zhe <zhe.he@windriver.com>
Date: Wed, 16 Sep 2015 22:44:30 -0400
Subject: [PATCH 7/7] kdb: disable kdb_summary command in preempt context

kdb_summary in preempt context will cause calltrace like below.
so just disable it. the command offers some system info and
not affects any functionality of kdb.

Call Trace:
 <#DB> [<ffffffff81a85b67>] dump_stack+0x4e/0x7a
 [<ffffffff81080613>] __might_sleep+0xe3/0x160
 [<ffffffff81a8cb60>] rt_spin_lock+0x20/0x50
 [<ffffffff811c964d>] nr_blockdev_pages+0x1d/0x80
 [<ffffffff8112660c>] si_meminfo+0x3c/0x60
 [<ffffffff810e4f41>] kdb_summary+0x241/0x3d0
 [<ffffffff810e6aff>] kdb_parse+0x35f/0x6a0
 [<ffffffff810e7634>] kdb_main_loop+0x584/0x7c0
 [<ffffffff810ea30e>] kdb_stub+0x1de/0x450
 [<ffffffff810e028c>] kgdb_cpu_enter+0x30c/0x5b0
 [<ffffffff810e07b0>] kgdb_handle_exception+0x160/0x1d0
 [<ffffffff8103d18c>] __kgdb_notify+0x3c/0xd0
 [<ffffffff8103d235>] kgdb_notify+0x15/0x20
 [<ffffffff81078f1d>] notifier_call_chain+0x4d/0x70
 [<ffffffff810791c3>] atomic_notifier_call_chain+0x33/0x50
 [<ffffffff8107974e>] notify_die+0x2e/0x30
 [<ffffffff81003dcb>] do_int3+0x5b/0x100
 [<ffffffff81a8d505>] int3+0x25/0x40
 [<ffffffff810df9f4>] ? kgdb_breakpoint+0x14/0x20

Signed-off-by: chunguang yang <chunguang.yang@windriver.com>

Adjust kdb_inittab chunk as code has changed.

Signed-off-by: He Zhe <zhe.he@windriver.com>
---
 kernel/debug/kdb/kdb_main.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/kernel/debug/kdb/kdb_main.c b/kernel/debug/kdb/kdb_main.c
index 4121345..51db716 100644
--- a/kernel/debug/kdb/kdb_main.c
+++ b/kernel/debug/kdb/kdb_main.c
@@ -2477,6 +2477,7 @@ static int kdb_kill(int argc, const char **argv)
 	return 0;
 }
 
+#ifndef CONFIG_PREEMPT_RT_FULL
 struct kdb_tm {
 	int tm_sec;	/* seconds */
 	int tm_min;	/* minutes */
@@ -2586,6 +2587,7 @@ static int kdb_summary(int argc, const char **argv)
 		   K(val.totalram), K(val.freeram), K(val.bufferram));
 	return 0;
 }
+#endif
 
 /*
  * kdb_per_cpu - This function implements the 'per_cpu' command.
@@ -2904,9 +2906,11 @@ static void __init kdb_inittab(void)
 	kdb_register_flags("kill", kdb_kill, "<-signal> <pid>",
 	  "Send a signal to a process", 0,
 	  KDB_ENABLE_SIGNAL);
+#ifndef CONFIG_PREEMPT_RT_FULL
 	kdb_register_flags("summary", kdb_summary, "",
 	  "Summarize the system", 4,
 	  KDB_ENABLE_ALWAYS_SAFE);
+#endif
 	kdb_register_flags("per_cpu", kdb_per_cpu, "<sym> [<bytes>] [<cpu>]",
 	  "Display per_cpu variables", 3,
 	  KDB_ENABLE_MEM_READ);
-- 
2.0.2

