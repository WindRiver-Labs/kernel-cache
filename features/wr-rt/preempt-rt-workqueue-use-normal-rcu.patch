From 3e6bd71b1d4c68fb569b13ecdd7851b4f2fd1ed1 Mon Sep 17 00:00:00 2001
From: Zhang Xiao <xiao.zhang@windriver.com>
Date: Sun, 12 Jun 2016 17:42:08 +0800
Subject: [PATCH 14/15] preempt-rt: workqueue use normal rcu

[ 0.892402] kernel/workqueue.c:610 sched RCU, wq->mutex or wq_pool_mutex should be held!
[ 0.892414]
[ 0.892414] other info that might help us debug this:
[ 0.892414]
[ 0.892432]
[ 0.892432] rcu_scheduler_active = 1, debug_locks = 1
[ 0.892448] 2 locks held by swapper/0/1:
[ 0.892459] #0: ((pendingb_lock).lock){+.+...}, at: [<c0452ae8>] queue_work_on+0x74/0x1ac
[ 0.892514] #1: (rcu_read_lock){......}, at: [<c045204c>] __queue_work+0x44/0xa6c
[ 0.892564]
[ 0.892564] stack backtrace:
[ 0.892582] CPU: 0 PID: 1 Comm: swapper/0 Tainted: G W 4.1.21-rt13-WR8.0.0.0_preempt-rt #1
[ 0.892587] Hardware name: LSI Axxia
[ 0.892606] [<c041c034>] (unwind_backtrace) from [<c0415c38>] (show_stack+0x20/0x24)
[ 0.892621] [<c0415c38>] (show_stack) from [<c0e524c4>] (dump_stack+0xb8/0xe8)
[ 0.892632] [<c0e524c4>] (dump_stack) from [<c048c0c8>] (lockdep_rcu_suspicious+0xdc/0x110)
[ 0.892643] [<c048c0c8>] (lockdep_rcu_suspicious) from [<c0451c34>] (unbound_pwq_by_node+0xb0/0x120)
[ 0.892653] [<c0451c34>] (unbound_pwq_by_node) from [<c0452548>] (__queue_work+0x540/0xa6c)
[ 0.892663] [<c0452548>] (__queue_work) from [<c0452bcc>] (queue_work_on+0x158/0x1ac)
[ 0.892673] [<c0452bcc>] (queue_work_on) from [<c0450714>] (call_usermodehelper_exec+0x1bc/0x1e8)
[ 0.892685] [<c0450714>] (call_usermodehelper_exec) from [<c08b351c>] (kobject_uevent_env+0x5f4/0x658)
[ 0.892693] [<c08b351c>] (kobject_uevent_env) from [<c08b3594>] (kobject_uevent+0x14/0x18)
[ 0.892701] [<c08b3594>] (kobject_uevent) from [<c08b2a08>] (kset_register+0x40/0x50)
[ 0.892715] [<c08b2a08>] (kset_register) from [<c096c090>] (bus_register+0xec/0x29c)
[ 0.892725] [<c096c090>] (bus_register) from [<c096c6fc>] (subsys_virtual_register+0x34/0x58)
[ 0.892735] [<c096c6fc>] (subsys_virtual_register) from [<c1240c54>] (wq_sysfs_init+0x20/0x38)
[ 0.892746] [<c1240c54>] (wq_sysfs_init) from [<c0409b98>] (do_one_initcall+0xd4/0x22c)
[ 0.892755] [<c0409b98>] (do_one_initcall) from [<c12350a4>] (kernel_init_freeable+0x2a0/0x374)
[ 0.892765] [<c12350a4>] (kernel_init_freeable) from [<c0e4d77c>] (kernel_init+0x1c/0xf8)
[ 0.892776] [<c0e4d77c>] (kernel_init) from [<c0410c58>] (ret_from_fork+0x14/0x3c)

Upstrean commit 5b95e1af8d17d use rcu_read_lock_sched
but that is not fit for preempt-rt. Replace it with
rcu_read_lock_held to fix it.

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
[ Adjust context ]
Signed-off-by: He Zhe <zhe.he@windriver.com>
---
 kernel/workqueue.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/workqueue.c b/kernel/workqueue.c
index 479775f..2aa2ec8 100644
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -374,7 +374,7 @@ static void workqueue_sysfs_unregister(struct workqueue_struct *wq);
 			 "RCU or wq->mutex should be held")
 
 #define assert_rcu_or_wq_mutex_or_pool_mutex(wq)			\
-	RCU_LOCKDEP_WARN(!rcu_read_lock_held() &&			\
+	RCU_LOCKDEP_WARN(!rcu_read_lock_sched_held() &&			\
 			 !lockdep_is_held(&wq->mutex) &&		\
 			 !lockdep_is_held(&wq_pool_mutex),		\
 			 "RCU, wq->mutex or wq_pool_mutex should be held")
-- 
2.0.2

