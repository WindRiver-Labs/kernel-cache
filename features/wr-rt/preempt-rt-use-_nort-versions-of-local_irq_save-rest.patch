From e97bdbbbc2f790528d69f622fd5058e2a0f13d3d Mon Sep 17 00:00:00 2001
From: Michel Thebeau <michel.thebeau@windriver.com>
Date: Wed, 5 Sep 2012 13:48:22 -0400
Subject: [PATCH] preempt-rt: use _nort versions of local_irq_save/restore in
 res_counter_charge_nofail

This was noticed as a result of interesting git fuzz when applying
preempt-rt 3.4.9-rt17.

The following commit replaced res_counter_charge() for
memcg_memory_allocated_add() in sock.h with a similar version:

commit 0e90b31f4ba77027a7c21cbfc66404df0851ca21
    net: introduce res_counter_charge_nofail() for socket allocations

We should carry the refactor of local_irq_save and local_irq_restore
here as well.

Signed-off-by: Michel Thebeau <michel.thebeau@windriver.com>
---
 kernel/res_counter.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/res_counter.c b/kernel/res_counter.c
index a2da86f..a0ad921 100644
--- a/kernel/res_counter.c
+++ b/kernel/res_counter.c
@@ -78,7 +78,7 @@ int res_counter_charge_nofail(struct res_counter *counter, unsigned long val,
 
 	r = ret = 0;
 	*limit_fail_at = NULL;
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 	for (c = counter; c != NULL; c = c->parent) {
 		spin_lock(&c->lock);
 		r = res_counter_charge_locked(c, val);
@@ -90,7 +90,7 @@ int res_counter_charge_nofail(struct res_counter *counter, unsigned long val,
 			ret = r;
 		}
 	}
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 
 	return ret;
 }
-- 
1.7.9.7

