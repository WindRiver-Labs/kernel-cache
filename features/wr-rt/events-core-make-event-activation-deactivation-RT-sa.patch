From dd48f688cf0eeb7f33e35e01ed9a2fc1e1bb256e Mon Sep 17 00:00:00 2001
From: Liwei Song <liwei.song@windriver.com>
Date: Thu, 5 Nov 2015 16:52:52 +0800
Subject: [PATCH] events/core: make event activation/deactivation RT safe

Fix the following calltrace:

Call Trace:
 [<ffffffff81ad5497>] dump_stack+0x4a/0x61
 [<ffffffff810542da>] warn_slowpath_common+0x8a/0xe0
ycles            [<ffffffff810543ea>] warn_slowpath_null+0x1a/0x20
 [<ffffffff811216c9>] event_sched_in.isra.58+0x239/0x240
 [<ffffffff81121736>] group_sched_in+0x66/0x1e0
 [<ffffffff81121989>] ctx_sched_in.isra.59+0xd9/0x1e0
 [<ffffffff81121d80>] ? perf_event_context_sched_in.isra.63+0xa0/0xa0
 [<ffffffff81121af8>] perf_event_sched_in.isra.62+0x68/0x70
 [<ffffffff81121e5f>] perf_cpu_hrtimer_handler+0xdf/0x190
 [<ffffffff810bee65>] run_hrtimer_softirq+0xb5/0x1f0
 [<ffffffff81058a0a>] do_current_softirqs+0x1aa/0x360
 [<ffffffff81058f44>] run_ksoftirqd+0x24/0x40
 [<ffffffff81077997>] smpboot_thread_fn+0x207/0x340
 [<ffffffff81077790>] ? sort_range+0x30/0x30
 [<ffffffff81074536>] kthread+0xc6/0xe0
 [<ffffffff81074470>] ? kthread_worker_fn+0x1d0/0x1d0
 [<ffffffff81adda62>] ret_from_fork+0x42/0x70
 [<ffffffff81074470>] ? kthread_worker_fn+0x1d0/0x1d0

The perf_cpu_hrtimer_handler need run with irq disabled, in NON-RT kernel irq was
disabled before use it, but in RT kernel it was used with irq enable introduced by
patch: "hrtimer: fixup hrtimer callback changes for preempt-rt".
Since these event routines are always called to activate/deactivate events, we can
fix the trace for all callpaths by fixing these functions.

Signed-off-by: Liwei Song <liwei.song@windriver.com>
---
 kernel/events/core.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/events/core.c b/kernel/events/core.c
index 473154c..50dde83 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -865,7 +865,7 @@ static void perf_event_ctx_activate(struct perf_event_context *ctx)
 {
 	struct list_head *head = this_cpu_ptr(&active_ctx_list);
 
-	WARN_ON(!irqs_disabled());
+	WARN_ON_NONRT(!irqs_disabled());
 
 	WARN_ON(!list_empty(&ctx->active_ctx_list));
 
@@ -874,7 +874,7 @@ static void perf_event_ctx_activate(struct perf_event_context *ctx)
 
 static void perf_event_ctx_deactivate(struct perf_event_context *ctx)
 {
-	WARN_ON(!irqs_disabled());
+	WARN_ON_NONRT(!irqs_disabled());
 
 	WARN_ON(list_empty(&ctx->active_ctx_list));
 
-- 
2.0.2

