From 785e3911271efa1603836fa68b3130df9d767c48 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Thu, 8 Oct 2015 17:53:58 -0400
Subject: [PATCH 1/2] pcie/aer: don't hold the spinlock around printk in
 aer_inject.c

If we are already in unwind mode and essentially about to return, there
is no need to be holding the spinlock while we run the printk telling
folks about some invalid inputs.  Move the unlock to be ahead of the
printk.

In -rt we'll have to turn this into a raw lock since it is called
from atomic context, so reducing the lock scope is even more of a
win for those folks running -rt (although you shouldn't be doing
error injection experiments on a latency sensitive -rt system
anyway...)

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 drivers/pci/pcie/aer/aer_inject.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/pci/pcie/aer/aer_inject.c b/drivers/pci/pcie/aer/aer_inject.c
index 587e7e853107..67cb91aad95b 100644
--- a/drivers/pci/pcie/aer/aer_inject.c
+++ b/drivers/pci/pcie/aer/aer_inject.c
@@ -397,17 +397,17 @@ static int aer_inject(struct aer_error_inj *einj)
 	if (!aer_mask_override && einj->cor_status &&
 	    !(einj->cor_status & ~cor_mask)) {
 		ret = -EINVAL;
+		spin_unlock_irqrestore(&inject_lock, flags);
 		printk(KERN_WARNING "The correctable error(s) is masked "
 				"by device\n");
-		spin_unlock_irqrestore(&inject_lock, flags);
 		goto out_put;
 	}
 	if (!aer_mask_override && einj->uncor_status &&
 	    !(einj->uncor_status & ~uncor_mask)) {
 		ret = -EINVAL;
+		spin_unlock_irqrestore(&inject_lock, flags);
 		printk(KERN_WARNING "The uncorrectable error(s) is masked "
 				"by device\n");
-		spin_unlock_irqrestore(&inject_lock, flags);
 		goto out_put;
 	}
 
-- 
2.4.3

