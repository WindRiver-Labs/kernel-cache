From 641f0c3501e0e64c29df9966003c02f664d39898 Mon Sep 17 00:00:00 2001
From: Bin Jiang <bin.jiang@windriver.com>
Date: Wed, 9 Jan 2013 16:10:18 +0800
Subject: [PATCH] preempt-rt: cpu hotplug: Unplug CPU for tasks when it fails
 to go down

When take down a cpu, following steps may run:
1. Fork workqueue_trust thread.
2. Pin the cpu.
3. Shut down the cpu.
4. Fail to shut down the cpu, and then wait for workqueue_trust thread.
workqueue_trust thread can't run since the cpu has been pinned. So
system is deadlocked.

In reboot procedure, first_cpu is considered as boot cpu which can't be
taken down.
Generally first_cpu is the boot cpu. But in kdump, capture kernel may
boot from non-first_cpu, so the first_cpu is not boot cpu. If run reboot
procedure, boot cpu will fail to be taken down, and then run into deadlock.

When fail to take down a cpu, unplug the cpu to allow tasks to pin it.

Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 kernel/cpu.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/kernel/cpu.c b/kernel/cpu.c
index 3e722c0..8502cf6 100644
--- a/kernel/cpu.c
+++ b/kernel/cpu.c
@@ -528,10 +528,12 @@ static int __ref _cpu_down(unsigned int cpu, int tasks_frozen)
 
 	err = __stop_machine(take_cpu_down, &tcd_param, cpumask_of(cpu));
 	if (err) {
+		/* CPU failed to go down, so allow tasks to pin this CPU. */
+		cpu_unplug_done(cpu);
 		/* CPU didn't die: tell everyone.  Can't complain. */
 		cpu_notify_nofail(CPU_DOWN_FAILED | mod, hcpu);
 
-		goto out_release;
+		goto out_cancel;
 	}
 	BUG_ON(cpu_online(cpu));
 
-- 
1.7.9.7

