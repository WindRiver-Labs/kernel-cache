From 02fddffba36fea23b7ab85eaf82123d3af02e046 Mon Sep 17 00:00:00 2001
From: yzhu1 <yzhu1@windriver.com>
Date: Wed, 18 Nov 2015 12:36:44 +0800
Subject: [PATCH] Revert "Fix regression caused by upstream commit 91fcb532e"

This commit "Fix regression caused by upstream commit 91fcb532e"
tried to solve the problem that the commit 91fcb53 "random: always
update the entropy pool under the spinlock" introduces.

The commit db54f99 "random: Make it work on rt" on
Linux 3.18.24-rt22 introduces a better solution to this problem.

Signed-off-by: yzhu1 <yzhu1@windriver.com>
---
 drivers/char/random.c |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/char/random.c b/drivers/char/random.c
index 866d4d2..dbd0623 100644
--- a/drivers/char/random.c
+++ b/drivers/char/random.c
@@ -829,13 +829,17 @@ void add_interrupt_randomness(int irq, int irq_flags, __u64 ip)
 		return;
 
 	r = nonblocking_pool.initialized ? &input_pool : &nonblocking_pool;
-#ifndef CONFIG_PREEMPT_RT_FULL
 	if (!spin_trylock(&r->lock)) {
 		fast_pool->count--;
 		return;
 	}
 	fast_pool->last = now;
+#ifndef CONFIG_PREEMPT_RT_FULL
 	__mix_pool_bytes(r, &fast_pool->pool, sizeof(fast_pool->pool), NULL);
+#else
+	mix_pool_bytes(r, &fast_pool->pool, sizeof(fast_pool->pool), NULL);
+#endif
+
 	/*
 	 * If we have architectural seed generator, produce a seed and
 	 * add it to the pool.  For the sake of paranoia count it as
@@ -846,10 +850,6 @@ void add_interrupt_randomness(int irq, int irq_flags, __u64 ip)
 		credit += sizeof(seed) * 4;
 	}
 	spin_unlock(&r->lock);
-#else
-	mix_pool_bytes(r, &fast_pool->pool, sizeof(fast_pool->pool), NULL);
-#endif
-
 
 	/*
 	 * If we don't have a valid cycle counter, and we see
-- 
1.7.5.4

