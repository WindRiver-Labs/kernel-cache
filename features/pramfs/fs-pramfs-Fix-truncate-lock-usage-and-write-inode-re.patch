From ffb32df85d86dee652ce369e48252e8013c717c9 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 16 Nov 2011 14:06:48 +0800
Subject: [PATCH 11/18] fs: pramfs: Fix truncate lock usage and write inode return value

Upstream ID 51406c32c0c8fc3550c5f760e490e0234fb6f53d
  git://pramfs.git.sourceforge.net/gitroot/pramfs/pramfs
  From: Marco <marco@ncc-1701-f.site>

Integrated-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 fs/pramfs/inode.c |    9 ++++++---
 1 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/fs/pramfs/inode.c b/fs/pramfs/inode.c
index 33d33c3..e8ed15a 100644
--- a/fs/pramfs/inode.c
+++ b/fs/pramfs/inode.c
@@ -16,7 +16,6 @@
 #include <linux/smp_lock.h>
 #include <linux/sched.h>
 #include <linux/highuid.h>
-#include <linux/quotaops.h>
 #include <linux/module.h>
 #include <linux/mpage.h>
 #include <linux/backing-dev.h>
@@ -98,8 +97,10 @@ static void __pram_truncate_blocks(struct inode *inode, loff_t start,
 	u64 *row; /* ptr to row block */
 	u64 *col; /* ptr to column blocks */
 
-	if (start > end || !inode->i_blocks || !pi->i_type.reg.row_block)
+	if (start > end || !inode->i_blocks || !pi->i_type.reg.row_block) {
+		mutex_unlock(&PRAM_I(inode)->truncate_mutex);
 		return;
+	}
 
 	mutex_lock(&PRAM_I(inode)->truncate_mutex);
 
@@ -540,7 +541,9 @@ struct inode *pram_new_inode(struct inode *dir, int mode)
 		errval = -EINVAL;
 		goto fail2;
 	}
-	pram_write_inode(inode, 0);
+	errval = pram_write_inode(inode, 0);
+	if (errval)
+		goto fail2;
 
 	errval = pram_init_acl(inode, dir);
 	if (errval)
-- 
1.7.0.4

