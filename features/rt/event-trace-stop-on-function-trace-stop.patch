From: Steven Rostedt <srostedt@redhat.com>
Subject: event_trace: stop on function_trace_stop

Signed-off-by: Steven Rostedt <srostedt@redhat.com>
---
 kernel/trace/trace_events.c |   26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

Index: linux-2.6.26.6-rt10/kernel/trace/trace_events.c
===================================================================
--- linux-2.6.26.6-rt10.orig/kernel/trace/trace_events.c	2008-10-12 00:12:40.000000000 -0400
+++ linux-2.6.26.6-rt10/kernel/trace/trace_events.c	2008-10-12 00:14:19.000000000 -0400
@@ -46,7 +46,7 @@ sys_call(unsigned long nr, unsigned long
 	unsigned long ip;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	tr = events_trace;
@@ -78,7 +78,7 @@ sys_ia32_call(unsigned long nr, unsigned
 	unsigned long ip;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	tr = events_trace;
@@ -108,7 +108,7 @@ sys_ret(unsigned long ret)
 	unsigned long ip;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	tr = events_trace;
@@ -137,7 +137,7 @@ event_irq_callback(int irq, int user, un
 	int cpu;
 	long disable;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	/* interrupts should be off, we are in an interrupt */
@@ -164,7 +164,7 @@ event_fault_callback(unsigned long ip, u
 	long disable;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	preempt_disable_notrace();
@@ -192,7 +192,7 @@ event_timer_set_callback(ktime_t *expire
 	long disable;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	/* interrupts should be off, we are in an interrupt */
@@ -219,7 +219,7 @@ event_timer_triggered_callback(ktime_t *
 	long disable;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	/* interrupts should be off, we are in an interrupt */
@@ -246,7 +246,7 @@ event_hrtimer_callback(ktime_t *time)
 	long disable;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	/* interrupts should be off, we are in an interrupt */
@@ -273,7 +273,7 @@ event_program_event_callback(ktime_t *ex
 	long disable;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	/* interrupts should be off, we are in an interrupt */
@@ -301,7 +301,7 @@ event_task_activate_callback(struct task
 	long disable;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	/* interrupts should be off, we are in an interrupt */
@@ -328,7 +328,7 @@ event_task_deactivate_callback(struct ta
 	long disable;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	/* interrupts should be off, we are in an interrupt */
@@ -355,7 +355,7 @@ event_wakeup_callback(struct rq *rq, str
 	long disable;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	/* interrupts should be disabled */
@@ -387,7 +387,7 @@ event_ctx_callback(struct rq *rq, struct
 	long disable;
 	int cpu;
 
-	if (!tracer_enabled)
+	if (!tracer_enabled || function_trace_stop)
 		return;
 
 	tracing_record_cmdline(prev);
