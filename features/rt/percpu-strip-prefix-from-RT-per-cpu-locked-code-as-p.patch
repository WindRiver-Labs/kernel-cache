From ad4674173cfd92377acb50cd1e58e7a973394af6 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Sun, 6 Feb 2011 18:48:32 -0500
Subject: [PATCH] percpu: strip prefix from RT per cpu locked code as per mainline

Upstream dd17c8f72993f9461e9c19250 means that percpu stuff
doesn't have the per_cpu_ prefix anymore.  Align the RT
additions to be similar.  This can be squished back into the
RT patch "percpu: add percpu locked infrastructure" at some
point; it is only separate at the moment for easy review.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 include/asm-generic/percpu.h |   14 +++++---------
 include/linux/percpu-defs.h  |    6 +++---
 2 files changed, 8 insertions(+), 12 deletions(-)

diff --git a/include/asm-generic/percpu.h b/include/asm-generic/percpu.h
index d1d3488..114f1e7 100644
--- a/include/asm-generic/percpu.h
+++ b/include/asm-generic/percpu.h
@@ -5,9 +5,6 @@
 #include <linux/threads.h>
 #include <linux/percpu-defs.h>
 
-#define __per_cpu_var_lock(var)	per_cpu__lock_##var##_locked
-#define __per_cpu_var_lock_var(var) per_cpu__##var##_locked
-
 #ifdef CONFIG_SMP
 
 /*
@@ -64,9 +61,9 @@ extern unsigned long __per_cpu_offset[NR_CPUS];
 	(*SHIFT_PERCPU_PTR(&(var), __my_cpu_offset))
 
 #define per_cpu_lock(var, cpu) \
-	(*SHIFT_PERCPU_PTR(&__per_cpu_var_lock(var), per_cpu_offset(cpu)))
+	(*SHIFT_PERCPU_PTR(&(lock_##var##_locked), per_cpu_offset(cpu)))
 #define per_cpu_var_locked(var, cpu) \
-	(*SHIFT_PERCPU_PTR(&__per_cpu_var_lock_var(var), per_cpu_offset(cpu)))
+	(*SHIFT_PERCPU_PTR(&(var##_locked), per_cpu_offset(cpu)))
 #define __get_cpu_lock(var, cpu) \
 		per_cpu_lock(var, cpu)
 #define __get_cpu_var_locked(var, cpu) \
@@ -82,10 +79,9 @@ extern void setup_per_cpu_areas(void);
 #else /* ! SMP */
 
 #define per_cpu(var, cpu)			(*((void)(cpu), &(var)))
-#define per_cpu_var_locked(var, cpu) \
-	(*((void)(cpu), &__per_cpu_var_lock_var(var)))
-#define __get_cpu_lock(var, cpu)		__per_cpu_var_lock(var)
-#define __get_cpu_var_locked(var, cpu)		__per_cpu_var_lock_var(var)
+#define per_cpu_var_locked(var, cpu)	(*((void)(cpu), &(var##_locked)))
+#define __get_cpu_lock(var, cpu)		(lock_##var##_locked)
+#define __get_cpu_var_locked(var, cpu)		(var##_locked)
 #define __get_cpu_var(var)			(var)
 #define __raw_get_cpu_var(var)			(var)
 #define this_cpu_ptr(ptr) per_cpu_ptr(ptr, 0)
diff --git a/include/linux/percpu-defs.h b/include/linux/percpu-defs.h
index 0b95d09..3511936 100644
--- a/include/linux/percpu-defs.h
+++ b/include/linux/percpu-defs.h
@@ -96,11 +96,11 @@
  */
 #define DEFINE_PER_CPU_SPINLOCK(name, sec)				\
 	__PCPU_ATTRS(sec) PER_CPU_DEF_ATTRIBUTES			\
-	__DEFINE_SPINLOCK(per_cpu__lock_##name##_locked)
+	__DEFINE_SPINLOCK(lock_##name##_locked)
 
 #define DECLARE_PER_CPU_LOCKED(type, name)				\
-	extern PER_CPU_ATTRIBUTES spinlock_t __per_cpu_var_lock(name);	\
-	extern PER_CPU_ATTRIBUTES __typeof__(type) __per_cpu_var_lock_var(name)
+	extern PER_CPU_ATTRIBUTES spinlock_t lock_##name##_locked;	\
+	extern PER_CPU_ATTRIBUTES __typeof__(type) name##_locked
 
 #define DEFINE_PER_CPU_LOCKED(type, name)				\
 	DEFINE_PER_CPU_SPINLOCK(name, "");				\
-- 
1.7.0.4

