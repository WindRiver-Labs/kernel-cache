From 8f92b45bcffc224598a1ed7adbf75fa825945335 Mon Sep 17 00:00:00 2001
From: Thomas Gleixner <tglx@linutronix.de>
Date: Thu, 4 Oct 2012 15:33:53 +0100
Subject: [PATCH] softirq: Split handling function

Split out the inner handling function, so RT can reuse it.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/kernel/softirq.c b/kernel/softirq.c
index b6fb34b3c4da..32c3f2b97fa7 100644
--- a/kernel/softirq.c
+++ b/kernel/softirq.c
@@ -141,10 +141,29 @@ static void wakeup_softirqd(void)
 		wake_up_process(tsk);
 }
 
+static void handle_softirq(unsigned int vec_nr, int cpu, int need_rcu_bh_qs)
+{
+	struct softirq_action *h = softirq_vec + vec_nr;
+	unsigned int prev_count = preempt_count();
+
+	kstat_incr_softirqs_this_cpu(vec_nr);
+
+	trace_softirq_entry(vec_nr);
+	h->action(h);
+	trace_softirq_exit(vec_nr);
+	if (unlikely(prev_count != preempt_count())) {
+		pr_err("huh, entered softirq %u %s %p with preempt_count %08x, exited with %08x?\n",
+				vec_nr, softirq_to_name[vec_nr], h->action,
+				prev_count, preempt_count());
+		preempt_count_set(prev_count);
+	}
+	if (need_rcu_bh_qs)
+		rcu_bh_qs(cpu);
+}
+
 static void handle_pending_softirqs(u32 pending, int cpu, int need_rcu_bh_qs)
 {
 	struct softirq_action *h = softirq_vec;
-	unsigned int prev_count = preempt_count();
 	int softirq_bit;
 
 	local_irq_enable();
@@ -156,19 +175,8 @@ static void handle_pending_softirqs(u32 pending, int cpu, int need_rcu_bh_qs)
 		h += softirq_bit - 1;
 		vec_nr = h - softirq_vec;
 
-		kstat_incr_softirqs_this_cpu(vec_nr);
+		handle_softirq(vec_nr, cpu, need_rcu_bh_qs);
 
-		trace_softirq_entry(vec_nr);
-		h->action(h);
-		trace_softirq_exit(vec_nr);
-		if (unlikely(prev_count != preempt_count())) {
-			pr_err("huh, entered softirq %u %s %p with preempt_count %08x, exited with %08x?\n",
-			       vec_nr, softirq_to_name[vec_nr], h->action,
-			       prev_count, preempt_count());
-			preempt_count_set(prev_count);
-		}
-		if (need_rcu_bh_qs)
-			rcu_bh_qs(cpu);
 		h++;
 		pending >>= softirq_bit;
 	}
-- 
2.1.2

