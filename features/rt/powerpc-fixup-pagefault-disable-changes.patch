Subject: Re: PREEMPT_RT + HIGHMEM = segfaults during boot on ppc32
From: Thomas Gleixner <tglx@linutronix.de>
Date: 2009-07-06 15:43:25
Origin: http://marc.info/?l=linux-rt-users&m=124689520812015&w=2

Steve,

On Thu, 2 Jul 2009, Steve Rottinger wrote:
> I'm using 2.6.29.5-rt22 on a custom ppc32 (8641D) board.  About half the
> time, the board will boot up correctly. The other half of the time, I'll
> get segfaults in various parts of the init process.  I've also noticed
> that if I remove CONFIG_HIGHMEM from my configuration, I am able to boot
> consistently without running into this problem.  Is there anyone else
> experiencing this, or does anyone have any suggestions?

does the patch below help ?

Thanks,

	tglx

 Subject: powerpc-fixup-pagefault-disable-changes.patch
 From: Thomas Gleixner <tglx@linutronix.de>
 Date: Mon, 06 Jul 2009 17:36:01 +0200

 Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
diff --git a/arch/powerpc/include/asm/highmem.h b/arch/powerpc/include/asm/highmem.h
index 5d99b64..f12d6f0 100644
--- a/arch/powerpc/include/asm/highmem.h
+++ b/arch/powerpc/include/asm/highmem.h
@@ -75,6 +75,7 @@ static inline void *kmap_atomic_prot(struct page *page, enum km_type type, pgpro
 	unsigned long vaddr;
 
 	/* even !CONFIG_PREEMPT needs this, for in_atomic in do_page_fault */
+	preempt_disable();
 	pagefault_disable();
 	if (!PageHighMem(page))
 		return page_address(page);
@@ -103,6 +104,7 @@ static inline void kunmap_atomic(void *kvaddr, enum km_type type)
 
 	if (vaddr < __fix_to_virt(FIX_KMAP_END)) {
 		pagefault_enable();
+		preempt_enable();
 		return;
 	}
 
@@ -116,6 +118,7 @@ static inline void kunmap_atomic(void *kvaddr, enum km_type type)
 	flush_tlb_page(NULL, vaddr);
 #endif
 	pagefault_enable();
+	preempt_enable();
 }
 
 static inline struct page *kmap_atomic_to_page(void *ptr)
