Subject: rtmutex: fix rwlock boosting
From: Thomas Gleixner <tglx@linutronix.de>
Date: Sat, 06 Dec 2008 17:11:51 +0100

The rwlock boosting code path does not boost the first task in the
chain, which is defeating the whole purpose of PI.

I have no idea why this basic functionality was never
checked. rtmutex-tester is exactly for this kind of static testing and
should be extended with proper rwlock tests ASAP.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 kernel/rtmutex.c |   16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

Index: linux-2.6.26.8-rt12/kernel/rtmutex.c
===================================================================
--- linux-2.6.26.8-rt12.orig/kernel/rtmutex.c	2008-12-19 23:31:07.000000000 -0500
+++ linux-2.6.26.8-rt12/kernel/rtmutex.c	2008-12-19 23:31:08.000000000 -0500
@@ -2265,15 +2265,25 @@ static int rt_mutex_adjust_readers(struc
 	}
 
 	list_for_each_entry(rls, &rwm->readers, list) {
+		int chain_walk = 0;
+
 		task = rls->task;
 		get_task_struct(task);
+
+		spin_lock(&task->pi_lock);
+		__rt_mutex_adjust_prio(task);
+		if (task->pi_blocked_on)
+			chain_walk = 1;
+		spin_unlock(&task->pi_lock);
+
 		/*
 		 * rt_mutex_adjust_prio_chain will do
 		 * the put_task_struct
 		 */
-		rt_mutex_adjust_prio_chain(task, 0, orig_lock,
-					   orig_waiter, top_task,
-					   recursion_depth+1);
+		if (chain_walk)
+			rt_mutex_adjust_prio_chain(task, 0, orig_lock,
+						   orig_waiter, top_task,
+						   recursion_depth + 1);
 	}
 
 	return 0;
