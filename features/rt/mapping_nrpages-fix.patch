Subject: mapping_nrpages-fix.patch
From: Thomas Gleixner <tglx@linutronix.de>
Date: Tue, 29 Jul 2008 09:24:13 +0200

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 fs/fs-writeback.c              |    2 +-
 fs/xfs/linux-2.6/xfs_fs_subr.c |    4 ++--
 fs/xfs/linux-2.6/xfs_lrw.c     |    7 ++++---
 3 files changed, 7 insertions(+), 6 deletions(-)

diff --git a/fs/fs-writeback.c b/fs/fs-writeback.c
index c8616a0..5c045d0 100644
--- a/fs/fs-writeback.c
+++ b/fs/fs-writeback.c
@@ -534,7 +534,7 @@ void generic_sync_sb_inodes(struct super_block *sb,
 			if (inode->i_state & (I_FREEING|I_WILL_FREE))
 				continue;
 			mapping = inode->i_mapping;
-			if (mapping->nrpages == 0)
+			if (mapping_nrpages(mapping) == 0)
 				continue;
 			__iget(inode);
 			spin_unlock(&inode_lock);
diff --git a/fs/xfs/linux-2.6/xfs_fs_subr.c b/fs/xfs/linux-2.6/xfs_fs_subr.c
index 36caa6d..082ed19 100644
--- a/fs/xfs/linux-2.6/xfs_fs_subr.c
+++ b/fs/xfs/linux-2.6/xfs_fs_subr.c
@@ -33,7 +33,7 @@ xfs_tosspages(
 {
 	struct address_space *mapping = VFS_I(ip)->i_mapping;
 
-	if (mapping->nrpages)
+	if (mapping_nrpages(mapping))
 		truncate_inode_pages(mapping, first);
 }
 
@@ -47,7 +47,7 @@ xfs_flushinval_pages(
 	struct address_space *mapping = VFS_I(ip)->i_mapping;
 	int		ret = 0;
 
-	if (mapping->nrpages) {
+	if (mapping_nrpages(mapping)) {
 		xfs_iflags_clear(ip, XFS_ITRUNCATED);
 		ret = filemap_write_and_wait(mapping);
 		if (!ret)
diff --git a/fs/xfs/linux-2.6/xfs_lrw.c b/fs/xfs/linux-2.6/xfs_lrw.c
index 1957e53..941dd7a 100644
--- a/fs/xfs/linux-2.6/xfs_lrw.c
+++ b/fs/xfs/linux-2.6/xfs_lrw.c
@@ -242,7 +242,7 @@ xfs_read(
 	}
 
 	if (unlikely(ioflags & IO_ISDIRECT)) {
-		if (inode->i_mapping->nrpages)
+		if (mapping_nrpages(inode->i_mapping))
 			ret = xfs_flushinval_pages(ip, (*offset & PAGE_CACHE_MASK),
 						    -1, FI_REMAPF_LOCKED);
 		mutex_unlock(&inode->i_mutex);
@@ -654,7 +654,8 @@ start:
 			return XFS_ERROR(-EINVAL);
 		}
 
-		if (!need_i_mutex && (mapping->nrpages || pos > xip->i_size)) {
+		if (!need_i_mutex &&
+		    (mapping_nrpages(mapping) || pos > xip->i_size)) {
 			xfs_iunlock(xip, XFS_ILOCK_EXCL|iolock);
 			iolock = XFS_IOLOCK_EXCL;
 			need_i_mutex = 1;
@@ -720,7 +721,7 @@ retry:
 	current->backing_dev_info = mapping->backing_dev_info;
 
 	if ((ioflags & IO_ISDIRECT)) {
-		if (mapping->nrpages) {
+		if (mapping_nrpages(mapping)) {
 			WARN_ON(need_i_mutex == 0);
 			xfs_inval_cached_trace(xip, pos, -1,
 					(pos & PAGE_CACHE_MASK), -1);
