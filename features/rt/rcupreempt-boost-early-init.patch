---
 include/linux/rcuclassic.h |    1 +
 include/linux/rcupreempt.h |    8 +++++++-
 kernel/rcupreempt-boost.c  |   16 +++++++++++-----
 kernel/rcupreempt.c        |    2 ++
 4 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/include/linux/rcuclassic.h b/include/linux/rcuclassic.h
index 07d03d7..fd9497d 100644
--- a/include/linux/rcuclassic.h
+++ b/include/linux/rcuclassic.h
@@ -163,6 +163,7 @@ extern long rcu_batches_completed_bh(void);
 
 #define rcu_enter_nohz()	do { } while (0)
 #define rcu_exit_nohz()		do { } while (0)
+#define rcu_preempt_boost_init() do { } while (0)
 
 struct softirq_action;
 extern void rcu_process_callbacks(struct softirq_action *unused);
diff --git a/include/linux/rcupreempt.h b/include/linux/rcupreempt.h
index 02bc3bc..7b46d86 100644
--- a/include/linux/rcupreempt.h
+++ b/include/linux/rcupreempt.h
@@ -91,7 +91,13 @@ enum rcu_boost_state {
 
 #define N_RCU_BOOST_STATE (RCU_BOOST_INVALID + 1)
 
-#endif /* #ifdef CONFIG_PREEMPT_RCU_BOOST */
+int __init rcu_preempt_boost_init(void);
+
+#else /* CONFIG_PREEPMT_RCU_BOOST */
+
+#define rcu_preempt_boost_init() do { } while (0)
+
+#endif /* CONFIG_PREEMPT_RCU_BOOST */
 
 extern void __rcu_read_lock(void)	__acquires(RCU);
 extern void __rcu_read_unlock(void)	__releases(RCU);
diff --git a/kernel/rcupreempt-boost.c b/kernel/rcupreempt-boost.c
index 61cf2a5..1a3b976 100644
--- a/kernel/rcupreempt-boost.c
+++ b/kernel/rcupreempt-boost.c
@@ -174,9 +174,9 @@ int rcu_trace_boost_create(struct dentry *rcudir)
 	rcuboostdir = debugfs_create_file("rcuboost", 0444, rcudir,
 					  NULL, &rcuboost_fops);
 	if (!rcuboostdir)
-		return 1;
+		return 0;
 
-	return 0;
+	return 1;
 }
 EXPORT_SYMBOL_GPL(rcu_trace_boost_create);
 
@@ -552,10 +552,9 @@ static int krcupreemptd(void *data)
 	return 0;
 }
 
-static int __init rcu_preempt_boost_init(void)
+int __init rcu_preempt_boost_init(void)
 {
 	struct rcu_boost_dat *rbd;
-	struct task_struct *p;
 	int cpu;
 
 	for_each_possible_cpu(cpu) {
@@ -567,6 +566,13 @@ static int __init rcu_preempt_boost_init(void)
 		INIT_LIST_HEAD(&rbd->rbs_boosted);
 	}
 
+	return 0;
+}
+
+static int __init rcu_preempt_start_krcupreemptd(void)
+{
+	struct task_struct *p;
+
 	p = kthread_create(krcupreemptd, NULL,
 			   "krcupreemptd");
 
@@ -579,4 +585,4 @@ static int __init rcu_preempt_boost_init(void)
 	return 0;
 }
 
-core_initcall(rcu_preempt_boost_init);
+__initcall(rcu_preempt_start_krcupreemptd);
diff --git a/kernel/rcupreempt.c b/kernel/rcupreempt.c
index f96bffb..3794a1f 100644
--- a/kernel/rcupreempt.c
+++ b/kernel/rcupreempt.c
@@ -1442,6 +1442,8 @@ void __init __rcu_init(void)
 		rcu_cpu_notify(&rcu_nb, CPU_UP_PREPARE,	(void *)(long) cpu);
 
 	open_softirq(RCU_SOFTIRQ, rcu_process_callbacks);
+
+	rcu_preempt_boost_init();
 }
 
 /*
