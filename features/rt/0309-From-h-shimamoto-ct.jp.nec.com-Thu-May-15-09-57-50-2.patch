From eb235b312bfb7c1a70208054f58b14957d2a0fd9 Mon Sep 17 00:00:00 2001
From: Hiroshi Shimamoto <h-shimamoto@ct.jp.nec.com>
Date: Tue, 30 Sep 2008 17:01:35 -0400
Subject: [PATCH] From h-shimamoto@ct.jp.nec.com Thu May 15 09:57:50 2008
 Date: Thu, 17 Apr 2008 16:57:20 +0200
 To: Peter Zijlstra <peterz@infradead.org>
 Cc: Steven Rostedt <rostedt@goodmis.org>,
      linux-rt-users <linux-rt-users@vger.kernel.org>,
      Ingo Molnar <mingo@elte.hu>, Thomas Gleixner <tglx@linutronix.de>,
      LKML <linux-kernel@vger.kernel.org>
 Subject: [PATCH -rt] avoid deadlock related with PG_nonewrefs and swap_lock
 Resent-Date: Thu, 17 Apr 2008 14:57:28 +0000 (UTC)
 Resent-From: Peter Zijlstra <peterz@infradead.org>
 Resent-To: Steven Rostedt <rostedt@goodmis.org>
 Hi Peter,

I've updated the patch. Could you please review it?

I'm also thinking that it can be in the mainline because it makes
the lock period shorter, correct?
---
 mm/swapfile.c |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/mm/swapfile.c b/mm/swapfile.c
index fc3dedd..b98ff0c 100644
--- a/mm/swapfile.c
+++ b/mm/swapfile.c
@@ -368,6 +368,7 @@ int remove_exclusive_swap_page(struct page *page)
 	/* Is the only swap cache user the cache itself? */
 	retval = 0;
 	if (p->swap_map[swp_offset(entry)] == 1) {
+		spin_unlock(&swap_lock);
 		/* Recheck the page count with the swapcache lock held.. */
 		lock_page_ref_irq(page);
 		if ((page_count(page) == 2) && !PageWriteback(page)) {
@@ -376,8 +377,8 @@ int remove_exclusive_swap_page(struct page *page)
 			retval = 1;
 		}
 		unlock_page_ref_irq(page);
-	}
-	spin_unlock(&swap_lock);
+	} else
+		spin_unlock(&swap_lock);
 
 	if (retval) {
 		swap_free(entry);
-- 
1.6.0.90.g436ed

