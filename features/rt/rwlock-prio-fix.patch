From: Steven Rostedt <srostedt@redhat.com>
Subject: rwlock: reset prio on unlocks and wakeups

The unlocking of an rwlock that woke up processes did not update
the rwm prio.

Signed-off-by: Steven Rostedt <srostedt@redhat.com>
---
 kernel/rtmutex.c |   12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

Index: linux-2.6.26.3-rt6/kernel/rtmutex.c
===================================================================
--- linux-2.6.26.3-rt6.orig/kernel/rtmutex.c	2008-09-05 00:23:55.000000000 -0400
+++ linux-2.6.26.3-rt6/kernel/rtmutex.c	2008-09-05 00:23:56.000000000 -0400
@@ -1790,6 +1790,12 @@ rt_read_slowunlock(struct rw_mutex *rwm,
 
 	wakeup_next_waiter(mutex, savestate);
 
+	if (rt_mutex_has_waiters(mutex)) {
+		waiter = rt_mutex_top_waiter(mutex);
+		rwm->prio = waiter->task->prio;
+	} else
+		rwm->prio = MAX_PRIO;
+
  out:
 	spin_unlock_irqrestore(&mutex->wait_lock, flags);
 
@@ -1930,7 +1936,11 @@ rt_write_slowunlock(struct rw_mutex *rwm
 		plist_del(&next->pi_list_entry, &pendowner->pi_waiters);
 		/* add back in as top waiter */
 		plist_add(&next->pi_list_entry, &pendowner->pi_waiters);
-	}
+
+		rwm->prio = next->task->prio;
+	} else
+		rwm->prio = MAX_PRIO;
+
 	spin_unlock(&pendowner->pi_lock);
 
  out:
