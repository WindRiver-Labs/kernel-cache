From ba75e7e05861a45417e3454e36da8ca7ec2d7d89 Mon Sep 17 00:00:00 2001
From: Thomas Gleixner <tglx@linutronix.de>
Date: Fri, 3 Jul 2009 08:44:52 -0500
Subject: [PATCH] x86: PAE preempt-rt fix

commit dabac300b124a630d2521f3cbf510b194f1aaba8 in tip.

[PG: this bumps into the 34-longterm cherry-pick of the commit
 4981d01eada5354d81c8929d5b2836829ba3df7b upstream]

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/arch/x86/include/asm/pgtable-3level.h b/arch/x86/include/asm/pgtable-3level.h
index 33927d2..5a2235a 100644
--- a/arch/x86/include/asm/pgtable-3level.h
+++ b/arch/x86/include/asm/pgtable-3level.h
@@ -69,6 +69,7 @@ static inline void native_pmd_clear(pmd_t *pmd)
 
 static inline void pud_clear(pud_t *pudp)
 {
+	preempt_disable();
 	set_pud(pudp, __pud(0));
 
 	/*
@@ -81,6 +82,7 @@ static inline void pud_clear(pud_t *pudp)
 	 * flush_tlb_mm() followed or don't need TLB flush (x86_64 code or
 	 * pud_clear_bad()), so we don't need TLB flush here.
 	 */
+	preempt_enable();
 }
 
 #ifdef CONFIG_SMP
diff --git a/arch/x86/mm/pgtable.c b/arch/x86/mm/pgtable.c
index 2a72049..80c333a 100644
--- a/arch/x86/mm/pgtable.c
+++ b/arch/x86/mm/pgtable.c
@@ -154,6 +154,7 @@ void pud_populate(struct mm_struct *mm, pud_t *pudp, pmd_t *pmd)
 	   reserved at the pmd (PDPT) level. */
 	set_pud(pudp, __pud(__pa(pmd) | _PAGE_PRESENT));
 
+	preempt_disable();
 	/*
 	 * According to Intel App note "TLBs, Paging-Structure Caches,
 	 * and Their Invalidation", April 2007, document 317080-001,
@@ -161,6 +162,7 @@ void pud_populate(struct mm_struct *mm, pud_t *pudp, pmd_t *pmd)
 	 * TLB via cr3 if the top-level pgd is changed...
 	 */
 	flush_tlb_mm(mm);
+	preempt_enable();
 }
 #else  /* !CONFIG_X86_PAE */
 
-- 
1.7.0

