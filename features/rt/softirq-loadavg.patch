softirq loadavg: one less active task in PREEMPT_SOFTIRQ loadavg calc

Building with a typical RT .config, but with just PREEMPT_RT disabled,
one gets a kernel that constantly shows a loadavg of one.

When RT is enabled, we subtract one from the nr_active since there is
a loadavg thread which calls calc_load().  But in the PREEMPT_SOFTIRQ
case, we should also subtract one, since we are still calling it from
a thread, as it is called as follows:

init_timers()
	\_ open_softirq(..., run_timer_softirq, ...)

run_timer_softirq()
	\_ update_times()
		\_ ifndef PREEMPT_RT calc_load()
			\_ count_active_tasks()
				\_ nr_active(), or nr_active()-1 for RT.

For reference, the original RT patch that introduces the -1 is
preempt-realtime-timer.patch, then bz235099-idle-load-fix.patch
updates it to add/mention the threaded calculation for RT.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

---
 kernel/timer.c |    7 +++++--
 1 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/kernel/timer.c b/kernel/timer.c
index cccef47..d7f943b 100644
--- a/kernel/timer.c
+++ b/kernel/timer.c
@@ -1057,9 +1057,12 @@ static unsigned long count_active_tasks(void)
 {
 	/*
 	 * On PREEMPT_RT, we are running in the loadavg thread,
-	 * so consider 1 less running tasks:
+	 * and similarly if we are only running PREEMPT_SOFTIRQS we
+	 * are running in the run_timer_softirq thread, so consider
+	 * one less running task in these two cases. (PREEMPT_RT
+	 * selects PREEMPT_SOFTIRQ, so we get both via the latter)
 	 */
-#ifdef CONFIG_PREEMPT_RT
+#ifdef CONFIG_PREEMPT_SOFTIRQS
 	return (nr_active() - 1) * FIXED_1;
 #else
 	return nr_active() * FIXED_1;
