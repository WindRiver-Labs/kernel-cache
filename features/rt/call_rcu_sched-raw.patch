From: Paul Gortmaker <paul.gortmaker@windriver.com>

rcupreempt: use raw lock for schedlock

The original RT patch in 26 named call_rcu_sched.patch is
upstream in 27-rc1 as commit 4446a36, but since it is the
basic (i.e. non-RT aware version) the locks it messes with
are not raw.  This adds back in the delta between the RT
version of the patch and the upstream commit.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---

diff --git a/kernel/rcupreempt.c b/kernel/rcupreempt.c
index 13948ae..18f0c39 100644
--- a/kernel/rcupreempt.c
+++ b/kernel/rcupreempt.c
@@ -150,7 +150,7 @@ struct rcu_ctrlblk {
 	long		completed;	/* Number of last completed batch. */
 	enum rcu_try_flip_states rcu_try_flip_state; /* The current state of
 							the rcu state machine */
-	spinlock_t	schedlock;	/* Protect rcu_sched sleep state. */
+	raw_spinlock_t	schedlock;	/* Protect rcu_sched sleep state. */
 	enum rcu_sched_sleep_states sched_sleep; /* rcu_sched state. */
 	wait_queue_head_t sched_wq;	/* Place for rcu_sched to sleep. */
 };
@@ -160,7 +160,7 @@ static struct rcu_ctrlblk rcu_ctrlblk = {
 	.fliplock = RAW_SPIN_LOCK_UNLOCKED(rcu_ctrlblk.fliplock),
 	.completed = 0,
 	.rcu_try_flip_state = rcu_try_flip_idle_state,
-	.schedlock = __SPIN_LOCK_UNLOCKED(rcu_ctrlblk.schedlock),
+	.schedlock = RAW_SPIN_LOCK_UNLOCKED(rcu_ctrlblk.schedlock),
 	.sched_sleep = rcu_sched_not_sleeping,
 	.sched_wq = __WAIT_QUEUE_HEAD_INITIALIZER(rcu_ctrlblk.sched_wq),
 };
