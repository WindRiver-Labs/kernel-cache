From fe80754d6966ebd461180bad7c15b6cee42574a6 Mon Sep 17 00:00:00 2001
From: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>
Date: Fri, 5 Sep 2008 00:23:36 -0400
Subject: [PATCH] From acme@ghostprotocols.net Tue Oct 23 16:01:53 2007
 Date: Mon, 22 Oct 2007 14:43:02 -0200
 To: Steven Rostedt <rostedt@goodmis.org>
 Cc: linux-rt-users@vger.kernel.org
 Subject: [PATCH][DEBUG_PI_LIST]: Set plist.lock to NULL on PREEMPT_RT
 On RT struct plist_head->lock is a raw_spinlock_t, but struct futex_hash_bucket->lock,
 that is set to plist_head->lock is a spinlock, which becomes a mutex on RT.
 Later in plist_check_head spin_is_locked can't figure out what is the right type,
 triggering a WARN_ON_SMP. As we were already special casing PREEMPT_RT on
 plist_check_head..

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 kernel/futex.c |   12 ++++++++++--
 1 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/kernel/futex.c b/kernel/futex.c
index d6e8e55..7a88994 100644
--- a/kernel/futex.c
+++ b/kernel/futex.c
@@ -951,9 +951,13 @@ static int futex_requeue(u32 __user *uaddr1, struct rw_semaphore *fshared,
 				plist_del(&this->list, &hb1->chain);
 				plist_add(&this->list, &hb2->chain);
 				this->lock_ptr = &hb2->lock;
-#if defined(CONFIG_DEBUG_PI_LIST) && !defined(CONFIG_PREEMPT_RT)
+#ifdef CONFIG_DEBUG_PI_LIST
+#ifdef CONFIG_PREEMPT_RT
+				this->list.plist.lock = NULL;
+#else
 				this->list.plist.lock = &hb2->lock;
 #endif
+#endif
 			}
 			this->key = key2;
 			get_futex_key_refs(&key2);
@@ -1008,9 +1012,13 @@ static inline void queue_me(struct futex_q *q, struct futex_hash_bucket *hb)
 	prio = min(current->normal_prio, MAX_RT_PRIO);
 
 	plist_node_init(&q->list, prio);
-#if defined(CONFIG_DEBUG_PI_LIST) && !defined(CONFIG_PREEMPT_RT)
+#ifdef CONFIG_DEBUG_PI_LIST
+#ifdef CONFIG_PREEMPT_RT
+	q->list.plist.lock = NULL;
+#else
 	q->list.plist.lock = &hb->lock;
 #endif
+#endif
 	plist_add(&q->list, &hb->chain);
 	q->task = current;
 	spin_unlock(&hb->lock);
-- 
1.6.0.90.g436ed

