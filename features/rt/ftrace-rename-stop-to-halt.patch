From: Steven Rostedt <srostedt@redhat.com>
Subject: ftrace: rename ftrace_stop to ftrace_halt (not in mainline yet)

Signed-off-by: Steven Rostedt <srostedt@redhat.com>
diff --git a/arch/powerpc/kernel/traps.c b/arch/powerpc/kernel/traps.c
index 38d1775..1d9f5fc 100644
--- a/arch/powerpc/kernel/traps.c
+++ b/arch/powerpc/kernel/traps.c
@@ -112,7 +112,7 @@ int die(const char *str, struct pt_regs *regs, long err)
 	if (debugger(regs))
 		return 1;
 
-	ftrace_stop();
+	ftrace_halt();
 
 	oops_enter();
 
diff --git a/arch/x86/kernel/traps_32.c b/arch/x86/kernel/traps_32.c
index 2ef2318..cfd6eb6 100644
--- a/arch/x86/kernel/traps_32.c
+++ b/arch/x86/kernel/traps_32.c
@@ -432,7 +432,7 @@ int __kprobes __die(const char *str, struct pt_regs *regs, long err)
 	unsigned short ss;
 	unsigned long sp;
 
-	ftrace_stop();
+	ftrace_halt();
 
 	printk(KERN_EMERG "%s: %04lx [#%d] ", str, err & 0xffff, ++die_counter);
 #ifdef CONFIG_PREEMPT
diff --git a/arch/x86/kernel/traps_64.c b/arch/x86/kernel/traps_64.c
index 6aabf0e..7bfb5a8 100644
--- a/arch/x86/kernel/traps_64.c
+++ b/arch/x86/kernel/traps_64.c
@@ -537,7 +537,7 @@ void __kprobes oops_end(unsigned long flags, struct pt_regs *regs, int signr)
 int __kprobes __die(const char *str, struct pt_regs *regs, long err)
 {
 
-	ftrace_stop();
+	ftrace_halt();
 
 	printk(KERN_EMERG "%s: %04lx [%u] ", str, err & 0xffff, ++die_counter);
 #ifdef CONFIG_PREEMPT
diff --git a/include/linux/ftrace.h b/include/linux/ftrace.h
index 702cf7b..8ac6a95 100644
--- a/include/linux/ftrace.h
+++ b/include/linux/ftrace.h
@@ -168,11 +168,11 @@ static inline void __ftrace_enabled_restore(int enabled)
 #ifdef CONFIG_TRACING
 extern void
 ftrace_special(unsigned long arg1, unsigned long arg2, unsigned long arg3);
-void ftrace_stop(void);
+void ftrace_halt(void);
 #else
 static inline void
 ftrace_special(unsigned long arg1, unsigned long arg2, unsigned long arg3) { }
-static inline void ftrace_stop(void) { }
+static inline void ftrace_halt(void) { }
 #endif
 
 struct hrtimer;
diff --git a/kernel/trace/trace.c b/kernel/trace/trace.c
index 70bc941..2033201 100644
--- a/kernel/trace/trace.c
+++ b/kernel/trace/trace.c
@@ -3316,9 +3316,9 @@ static __init void tracer_init_debugfs(void)
 }
 
 /**
- * ftrace_stop - called when we need to drastically disable the tracer.
+ * ftrace_halt - called when we need to drastically disable the tracer.
  */
-void ftrace_stop(void)
+void ftrace_halt(void)
 {
 	struct tracer *saved_tracer = current_trace;
 	struct trace_array *tr = &global_trace;
