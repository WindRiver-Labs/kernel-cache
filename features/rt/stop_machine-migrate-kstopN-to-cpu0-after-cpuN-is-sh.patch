From 568d5da67607def07b85f322e5a7ffbdd46b35a2 Mon Sep 17 00:00:00 2001
From: Wang Hui <Hui.Wang@windriver.com>
Date: Wed, 24 Feb 2010 18:31:57 +0800
Subject: [PATCH] stop_machine: migrate kstopN to cpu0 after cpuN is shutdown

The kthread kstopN are bound to correspondent cpuN and will shutdown
cpuN in stop_cpu function. After shutdown cpuN, the remaining release
kthread resouce process may be blocked by blocking lock. But if moving
the kstopN into a workqueue, the remaing release resource process will
be migrated to cpu0 by workqueue daemon thread. So borrowing this
thoughts, we migrate kstopN to cpu0 after the cpuN is shutdown to
prevent deadlock on preempt_rt kernel.

The modification is referred to the commit c9583e5 from
git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git

Signed-off-by: Wang Hui <Hui.Wang@windriver.com>
---
 kernel/stop_machine.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/kernel/stop_machine.c b/kernel/stop_machine.c
index 2d53cc4..f2734e8 100644
--- a/kernel/stop_machine.c
+++ b/kernel/stop_machine.c
@@ -99,6 +99,13 @@ static int stop_cpu(struct stop_machine_data *smdata)
 	} while (curstate != STOPMACHINE_EXIT);
 
 	local_irq_enable();
+
+	if (!cpu_online(smp_processor_id())) {
+		cpumask_t tmp;
+		cpu_set(first_cpu(cpu_online_map), tmp);
+		set_cpus_allowed_ptr(current, &tmp);
+	}
+
 	do_exit(0);
 }
 
-- 
1.6.5.2

