From tsutomu.owa@toshiba.co.jp Tue May 22 13:47:39 2007
Return-Path: <tsutomu.owa@toshiba.co.jp>
X-Spam-Checker-Version: SpamAssassin 3.1.7-deb (2006-10-05) on debian
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=UNPARSEABLE_RELAY 
	autolearn=unavailable version=3.1.7-deb
Received: from inet-tsb5.toshiba.co.jp (inet-tsb5.toshiba.co.jp
	[202.33.96.24]) by mail.tglx.de (Postfix) with ESMTP id 57F7E65C065 for
	<tglx@linutronix.de>; Tue, 22 May 2007 13:47:39 +0200 (CEST)
Received: from tsb-wall.toshiba.co.jp ([133.199.160.134]) by
	inet-tsb5.toshiba.co.jp  with ESMTP id l4MBlERT003242; Tue, 22 May 2007
	20:47:14 +0900 (JST)
Received: (from root@localhost) by tsb-wall.toshiba.co.jp  id
	l4MBlEQK014361; Tue, 22 May 2007 20:47:14 +0900 (JST)
Received: from ovp1.toshiba.co.jp [133.199.192.124]  by
	tsb-wall.toshiba.co.jp with ESMTP id WAA14360; Tue, 22 May 2007 20:47:14
	+0900
Received: from mx2.toshiba.co.jp (localhost [127.0.0.1]) by
	ovp1.toshiba.co.jp  with ESMTP id l4MBlEDs007674; Tue, 22 May 2007 20:47:14
	+0900 (JST)
Received: from rdcgw.rdc.toshiba.co.jp by toshiba.co.jp id l4MBlDm9015993;
	Tue, 22 May 2007 20:47:13 +0900 (JST)
Received: from island.swc.toshiba.co.jp by rdcgw.rdc.toshiba.co.jp
	(8.8.8p2+Sun/3.7W) with ESMTP id UAA17003; Tue, 22 May 2007 20:47:13 +0900
	(JST)
Received: from forest.toshiba.co.jp (forest [133.196.122.2]) by
	island.swc.toshiba.co.jp (Postfix) with ESMTP id 6A26B40002; Tue, 22 May
	2007 20:47:13 +0900 (JST)
Date: Tue, 22 May 2007 20:47:13 +0900
Message-ID: <yyi7ir16pxa.wl@toshiba.co.jp>
From: Tsutomu OWA <tsutomu.owa@toshiba.co.jp>
To: linuxppc-dev@ozlabs.org, linux-kernel@vger.kernel.org
Cc: mingo@elte.hu, tglx@linutronix.de
Subject: [PATCH] powerpc 2.6.21-rt6: replace preempt_schedule w/
	preempt_schedule_irq
User-Agent: Wanderlust/2.8.1 (Something) Emacs/20.7 Mule/4.0 (HANANOEN)
Organization: Software Engineering Center, TOSHIBA.
MIME-Version: 1.0 (generated by SEMI 1.14.4 - "Hosorogi")
Content-Type: text/plain; charset=US-ASCII
X-Evolution-Source: imap://tglx%40linutronix.de@localhost:8993/
Content-Transfer-Encoding: 8bit


Hi Ingo and Thomas,

Please apply.

Replace preempt_schedule() w/ preempt_schedule_irq() in irq return path,
to avoid irq-entry recursion and stack overflow problems for powerpc64.
It hits when doing netperf from another machine to the machine running rt kernel.

This patch applies on top of linux-2.6.21 + patch-2.6.21-rt6.

Compile, boot and netperf tested on celleb.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
~ $ uname -a
Linux Linux 2.6.21-rt6 #1 SMP PREEMPT RT Tue May 22 19:18:00 JST 2007 ppc64 unkn
own
~ $ Unable to handle kernel paging request for data at address 0xc0000180004cd9b
0
Faulting instruction address: 0xc00000000003da48
cpu 0x0: Vector: 300 (Data Access) at [c00000000fffba00]
    pc: c00000000003da48: .resched_task+0x34/0xc4
    lr: c0000000000410b4: .try_to_wake_up+0x4cc/0x5a8
    sp: c00000000fffbc80
   msr: 9000000000001032
   dar: c0000180004cd9b0
 dsisr: 40000000
  current = 0xc00000000244ed20
  paca    = 0xc0000000004cd980
    pid   = 425, comm = netserver
enter ? for help
[c00000000fffbd00] c0000000000410b4 .try_to_wake_up+0x4cc/0x5a8
[c00000000fffbde0] c0000000000880c8 .redirect_hardirq+0x68/0x88
[c00000000fffbe60] c00000000008aec8 .handle_level_irq+0x13c/0x220
[c00000000fffbf00] c000000000032538 .spider_irq_cascade+0x98/0xec
[c00000000fffbf90] c000000000022280 .call_handle_irq+0x1c/0x2c
[c0000000025abea0] c00000000000c33c .do_IRQ+0xc8/0x17c
[c0000000025abf30] c00000000000444c hardware_interrupt_entry+0x18/0x4c
---
 arch/powerpc/kernel/entry_64.S |   16 +++++++++-------
 1 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/arch/powerpc/kernel/entry_64.S b/arch/powerpc/kernel/entry_64.S
index 62d675f..a7dc245 100644
--- a/arch/powerpc/kernel/entry_64.S
+++ b/arch/powerpc/kernel/entry_64.S
@@ -633,8 +633,15 @@ do_work:
 
 user_work:
 #endif
+	andi.	r0,r4,_TIF_NEED_RESCHED
+	beq	1f
+
+	/* preempt_schedule_irq() expects interrupts disabled. */
+	bl	.preempt_schedule_irq
+	b	.ret_from_except_lite
+
 	/* here we are preempting the current task */
-	li	r0,1
+1:	li	r0,1
 	stb	r0,PACASOFTIRQEN(r13)
 	stb	r0,PACAHARDIRQEN(r13)
 
@@ -642,12 +649,7 @@ user_work:
 	ori	r10,r10,MSR_EE
 	mtmsrd	r10,1
 
-	andi.	r0,r4,_TIF_NEED_RESCHED
-	beq	1f
-	bl	.schedule
-	b	.ret_from_except_lite
-
-1:	bl	.save_nvgprs
+	bl	.save_nvgprs
 	addi	r3,r1,STACK_FRAME_OVERHEAD
 	bl	.do_signal
 	b	.ret_from_except
