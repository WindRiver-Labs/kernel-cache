From paulmck@linux.vnet.ibm.com Fri Aug  1 17:39:44 2008
Date: Fri, 1 Aug 2008 14:11:46 -0700
From: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
To: linux-rt-users@vger.kernel.org
Cc: rostedt@goodmis.org, tglx@linutronix.de, linux-kernel@vger.kernel.org, mingo@elte.hu
Subject: [PATCH -rt] apply rcu_process_callbacks() changes from mainline

On its way to mainline, rcu_process_callbacks() became a static
function and the unused function rcu_advance_callbacks() was
removed.  The attached patch adjusts -rt to better match mainline.

Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
---
 include/linux/rcuclassic.h |    3 ---
 include/linux/rcupreempt.h |    2 --
 kernel/rcuclassic.c        |   13 +------------
 kernel/rcupreempt.c        |    2 +-
 4 files changed, 2 insertions(+), 18 deletions(-)

diff --git a/include/linux/rcuclassic.h b/include/linux/rcuclassic.h
index dc891de..208b1e6 100644
--- a/include/linux/rcuclassic.h
+++ b/include/linux/rcuclassic.h
@@ -165,7 +165,4 @@ extern long rcu_batches_completed_bh(void);
 #define rcu_exit_nohz()		do { } while (0)
 #define rcu_preempt_boost_init() do { } while (0)
 
-struct softirq_action;
-extern void rcu_process_callbacks(struct softirq_action *unused);
-
 #endif /* __LINUX_RCUCLASSIC_H */
diff --git a/include/linux/rcupreempt.h b/include/linux/rcupreempt.h
index 5ea1a22..36ced35 100644
--- a/include/linux/rcupreempt.h
+++ b/include/linux/rcupreempt.h
@@ -180,6 +180,4 @@ static inline void rcu_exit_nohz(void)
 #define rcu_exit_nohz()		do { } while (0)
 #endif /* CONFIG_NO_HZ */
 
-extern void rcu_process_callbacks(struct softirq_action *unused);
-
 #endif /* __LINUX_RCUPREEMPT_H */
diff --git a/kernel/rcuclassic.c b/kernel/rcuclassic.c
index 7ce4601..1b88c59 100644
--- a/kernel/rcuclassic.c
+++ b/kernel/rcuclassic.c
@@ -462,7 +462,7 @@ static void __rcu_process_callbacks(struct rcu_ctrlblk *rcp,
 		rcu_do_batch(rdp);
 }
 
-void rcu_process_callbacks(struct softirq_action *unused)
+static void rcu_process_callbacks(struct softirq_action *unused)
 {
 	__rcu_process_callbacks(&rcu_ctrlblk, &__get_cpu_var(rcu_data));
 	__rcu_process_callbacks(&rcu_bh_ctrlblk, &__get_cpu_var(rcu_bh_data));
@@ -517,17 +517,6 @@ int rcu_needs_cpu(int cpu)
 	return (!!rdp->curlist || !!rdp_bh->curlist || rcu_pending(cpu));
 }
 
-void rcu_advance_callbacks(int cpu, int user)
-{
-	if (user ||
-	    (idle_cpu(cpu) && !in_softirq() &&
-				hardirq_count() <= (1 << HARDIRQ_SHIFT))) {
-		rcu_qsctr_inc(cpu);
-		rcu_bh_qsctr_inc(cpu);
-	} else if (!in_softirq())
-		rcu_bh_qsctr_inc(cpu);
-}
-
 void rcu_check_callbacks(int cpu, int user)
 {
 	if (user ||
diff --git a/kernel/rcupreempt.c b/kernel/rcupreempt.c
index 9b0da60..13948ae 100644
--- a/kernel/rcupreempt.c
+++ b/kernel/rcupreempt.c
@@ -1090,7 +1090,7 @@ void __cpuinit rcu_online_cpu(int cpu)
 	spin_unlock_irqrestore(&rdp->lock, flags);
 }
 
-void rcu_process_callbacks(struct softirq_action *unused)
+static void rcu_process_callbacks(struct softirq_action *unused)
 {
 	unsigned long flags;
 	struct rcu_head *next, *list;
