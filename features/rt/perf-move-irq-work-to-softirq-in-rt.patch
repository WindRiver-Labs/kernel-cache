Subject: x86-no-perf-irq-work-rt.patch
From: Thomas Gleixner <tglx@linutronix.de>
Date: Wed, 13 Jul 2011 14:05:05 +0200

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 arch/x86/kernel/irq_work.c |    2 ++
 kernel/events/core.c       |    8 +++++++-
 kernel/irq_work.c          |    2 ++
 kernel/timer.c             |    6 +++++-
 4 files changed, 16 insertions(+), 2 deletions(-)

Index: linux-2.6/arch/x86/kernel/irq_work.c
===================================================================
--- linux-2.6.orig/arch/x86/kernel/irq_work.c
+++ linux-2.6/arch/x86/kernel/irq_work.c
@@ -18,6 +18,7 @@ void smp_irq_work_interrupt(struct pt_re
 	irq_exit();
 }
 
+#ifndef CONFIG_PREEMPT_RT_FULL
 void arch_irq_work_raise(void)
 {
 #ifdef CONFIG_X86_LOCAL_APIC
@@ -28,3 +29,4 @@ void arch_irq_work_raise(void)
 	apic_wait_icr_idle();
 #endif
 }
+#endif
Index: linux-2.6/kernel/events/core.c
===================================================================
--- linux-2.6.orig/kernel/events/core.c
+++ linux-2.6/kernel/events/core.c
@@ -3916,9 +3916,15 @@ static bool perf_output_space(struct per
 
 static void perf_output_wakeup(struct perf_output_handle *handle)
 {
+	int queue = handle->nmi;
+
+#ifdef CONFIG_PREEMPT_RT_FULL
+	queue |= irqs_disabled() || preempt_count();
+#endif
+
 	atomic_set(&handle->buffer->poll, POLL_IN);
 
-	if (handle->nmi) {
+	if (queue) {
 		handle->event->pending_wakeup = 1;
 		irq_work_queue(&handle->event->pending);
 	} else
Index: linux-2.6/kernel/irq_work.c
===================================================================
--- linux-2.6.orig/kernel/irq_work.c
+++ linux-2.6/kernel/irq_work.c
@@ -125,8 +125,10 @@ void irq_work_run(void)
 	if (this_cpu_read(irq_work_list) == NULL)
 		return;
 
+#ifndef CONFIG_PREEMPT_RT_FULL
 	BUG_ON(!in_irq());
 	BUG_ON(!irqs_disabled());
+#endif
 
 	list = this_cpu_xchg(irq_work_list, NULL);
 
Index: linux-2.6/kernel/timer.c
===================================================================
--- linux-2.6.orig/kernel/timer.c
+++ linux-2.6/kernel/timer.c
@@ -1339,7 +1339,7 @@ void update_process_times(int user_tick)
 	scheduler_tick();
 	run_local_timers();
 	rcu_check_callbacks(cpu, user_tick);
-#ifdef CONFIG_IRQ_WORK
+#if defined(CONFIG_IRQ_WORK) && !defined(CONFIG_PREEMPT_RT_FULL)
 	if (in_irq())
 		irq_work_run();
 #endif
@@ -1353,6 +1353,10 @@ static void run_timer_softirq(struct sof
 {
 	struct tvec_base *base = __this_cpu_read(tvec_bases);
 
+#if defined(CONFIG_IRQ_WORK)
+	irq_work_run();
+#endif
+
 	printk_tick();
 	hrtimer_run_pending();
 
