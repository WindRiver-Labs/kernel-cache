From 7174ab496383a6857642ec987a8ee04fe2c59b3a Mon Sep 17 00:00:00 2001
From: Steven Rostedt <srostedt@redhat.com>
Date: Fri, 5 Sep 2008 00:23:56 -0400
Subject: [PATCH] Subject: rwlock: reset prio on unlocks and wakeups
 The unlocking of an rwlock that woke up processes did not update
 the rwm prio.

Signed-off-by: Steven Rostedt <srostedt@redhat.com>
---
 kernel/rtmutex.c |   12 +++++++++++-
 1 files changed, 11 insertions(+), 1 deletions(-)

diff --git a/kernel/rtmutex.c b/kernel/rtmutex.c
index d2f99cb..da5de47 100644
--- a/kernel/rtmutex.c
+++ b/kernel/rtmutex.c
@@ -1790,6 +1790,12 @@ rt_read_slowunlock(struct rw_mutex *rwm, int mtx)
 
 	wakeup_next_waiter(mutex, savestate);
 
+	if (rt_mutex_has_waiters(mutex)) {
+		waiter = rt_mutex_top_waiter(mutex);
+		rwm->prio = waiter->task->prio;
+	} else
+		rwm->prio = MAX_PRIO;
+
  out:
 	spin_unlock_irqrestore(&mutex->wait_lock, flags);
 
@@ -1930,7 +1936,11 @@ rt_write_slowunlock(struct rw_mutex *rwm, int mtx)
 		plist_del(&next->pi_list_entry, &pendowner->pi_waiters);
 		/* add back in as top waiter */
 		plist_add(&next->pi_list_entry, &pendowner->pi_waiters);
-	}
+
+		rwm->prio = next->task->prio;
+	} else
+		rwm->prio = MAX_PRIO;
+
 	spin_unlock(&pendowner->pi_lock);
 
  out:
-- 
1.6.0.90.g436ed

