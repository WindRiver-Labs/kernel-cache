From 451c66130de68261d2b7ae8cd2da5180e7b6db19 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Fri, 5 Sep 2008 00:23:29 -0400
Subject: [PATCH] This was found around the 2.6.10 timeframe when testing with the -rt patch
 and I believe is still is an issue. irttp_dup() does a memcpy() of the tsap_cb
 structure causing the spinlock protecting various fields in the structure to be
 duped.  This works OK in the non-RT case but in the RT case we end up with two
 mutexes pointing to the same wait_list and leading to an OOPS. Fix is to simply
 initialize the spinlock after the memcpy().

Signed-off-by: Deepak Saxena <dsaxena@mvista.com>
---
 net/irda/irttp.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/net/irda/irttp.c b/net/irda/irttp.c
index 74e439e..abfe441 100644
--- a/net/irda/irttp.c
+++ b/net/irda/irttp.c
@@ -1453,6 +1453,7 @@ struct tsap_cb *irttp_dup(struct tsap_cb *orig, void *instance)
 	}
 	/* Dup */
 	memcpy(new, orig, sizeof(struct tsap_cb));
+	spin_lock_init(&new->lock);
 
 	/* We don't need the old instance any more */
 	spin_unlock_irqrestore(&irttp->tsaps->hb_spinlock, flags);
-- 
1.6.0.90.g436ed

