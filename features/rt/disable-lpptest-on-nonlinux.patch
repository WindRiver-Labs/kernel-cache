
Sadly people keep wanting to build kernels on non-Linux hosts
(cygwin & solaris) and testlpp really doesn't like to build on 
those. I have a separate patch to testlpp.c that fixes this, 
but it really makes no sense to build the tool to run on your 
cygwin host as it's meant to be run on Linux with the testlpp
module loaded.

Even this patch isn't really the right solution b/c you really want 
to cross-build the may be cross-building for another architecture from 
Linux you want cross-compile, not host compile but there's no really easy
way to cross-compile a userland binary from the kernel build w/o some 
makefile uglyiness AFAICT.

Is there some sort of -rt userland package this could move to instead 
of being in the kernel itself...?

Signed-off-by: Deepak Saxena <dsaxena@mvista.com>

---
 scripts/Makefile |    3 +++
 1 file changed, 3 insertions(+)

Index: linux-2.6.26.3-rt6/scripts/Makefile
===================================================================
--- linux-2.6.26.3-rt6.orig/scripts/Makefile	2008-09-05 00:22:37.000000000 -0400
+++ linux-2.6.26.3-rt6/scripts/Makefile	2008-09-05 00:23:32.000000000 -0400
@@ -12,9 +12,12 @@ hostprogs-$(CONFIG_LOGO)         += pnmt
 hostprogs-$(CONFIG_VT)           += conmakehash
 hostprogs-$(CONFIG_PROM_CONSOLE) += conmakehash
 hostprogs-$(CONFIG_IKCONFIG)     += bin2c
+HOST_OS := $(shell uname)
+ifeq ($(HOST_OS),Linux)
 ifdef CONFIG_LPPTEST
 hostprogs-y      += testlpp
 endif
+endif
 
 always		:= $(hostprogs-y) $(hostprogs-m)
 
