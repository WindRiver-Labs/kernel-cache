From tglx@linutronix.de Fri Dec 19 16:40:02 2008
Date: Fri, 19 Dec 2008 21:23:06 -0000
From: Thomas Gleixner <tglx@linutronix.de>
To: LKML <linux-kernel@vger.kernel.org>
Cc: Ingo Molnar <mingo@elte.hu>, Steven Rostedt <rostedt@goodmis.org>, Peter Zijlstra <peterz@infradead.org>, Clark Williams <clark.williams@gmail.com>, Gregory Haskins <ghaskins@novell.com>, Linux-rt <linux-rt-users@vger.kernel.org>
Subject: [patch 6/7] rtmutex: remove useless schedule enforcement

For !mtx the call to schedule() is forced even if the waiter is
already woken (waiter.task == NULL).

This makes no sense at all and is just waste.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 kernel/rtmutex.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

Index: linux-2.6.26.8-rt12/kernel/rtmutex.c
===================================================================
--- linux-2.6.26.8-rt12.orig/kernel/rtmutex.c	2008-12-19 23:31:10.000000000 -0500
+++ linux-2.6.26.8-rt12/kernel/rtmutex.c	2008-12-19 23:31:10.000000000 -0500
@@ -1403,7 +1403,7 @@ rt_read_slowlock(struct rw_mutex *rwm, i
 
 		debug_rt_mutex_print_deadlock(&waiter);
 
-		if (!mtx || waiter.task)
+		if (waiter.task)
 			schedule_rt_mutex(mutex);
 
 		spin_lock_irqsave(&mutex->wait_lock, flags);
@@ -1549,7 +1549,7 @@ rt_write_slowlock(struct rw_mutex *rwm, 
 
 		debug_rt_mutex_print_deadlock(&waiter);
 
-		if (!mtx || waiter.task)
+		if (waiter.task)
 			schedule_rt_mutex(mutex);
 
 		spin_lock_irqsave(&mutex->wait_lock, flags);
