From: rt-users <linux-rt-users@vger.kernel.org>  
Subject: fix-bad-dyntick-accounting

Import of rcu-preempt-fix-bad-dyntick-accounting.patch
from the RT patch series.
---
 include/linux/rcupreempt.h |   17 ++++++++++++++---
 1 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/include/linux/rcupreempt.h b/include/linux/rcupreempt.h
index 0967f03..d7e2665 100644
--- a/include/linux/rcupreempt.h
+++ b/include/linux/rcupreempt.h
@@ -119,7 +119,13 @@ static inline void rcu_enter_nohz(void)
 
 	smp_mb(); /* CPUs seeing ++ must see prior RCU read-side crit sects */
 	__get_cpu_var(rcu_dyntick_sched).dynticks++;
-	WARN_ON_RATELIMIT(__get_cpu_var(rcu_dyntick_sched).dynticks & 0x1, &rs);
+	if (unlikely(__get_cpu_var(rcu_dyntick_sched).dynticks & 0x1)) {
+		printk("BUG: bad accounting of dynamic ticks\n");
+		printk("   will try to fix, but it is best to reboot\n");
+		WARN_ON_RATELIMIT(1, &rs);
+		/* try to fix it */
+		__get_cpu_var(rcu_dyntick_sched).dynticks++;
+	}
 }
 
 static inline void rcu_exit_nohz(void)
@@ -128,8 +134,13 @@ static inline void rcu_exit_nohz(void)
 
 	smp_mb(); /* CPUs seeing ++ must see later RCU read-side crit sects */
 	__get_cpu_var(rcu_dyntick_sched).dynticks++;
-	WARN_ON_RATELIMIT(!(__get_cpu_var(rcu_dyntick_sched).dynticks & 0x1),
-				&rs);
+	if (unlikely(!(__get_cpu_var(rcu_dyntick_sched).dynticks & 0x1))) {
+		printk("BUG: bad accounting of dynamic ticks\n");
+		printk("   will try to fix, but it is best to reboot\n");
+		WARN_ON_RATELIMIT(1, &rs);
+		/* try to fix it */
+		__get_cpu_var(rcu_dyntick_sched).dynticks++;
+	}
 }
 
 #else /* CONFIG_NO_HZ */
