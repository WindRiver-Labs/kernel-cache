From b9253a527d8f7773be79267fa47dc8ff701b6115 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Tue, 30 Sep 2008 16:55:25 -0400
Subject: [PATCH] don't trace early init functions for ppc32
 By: Luotao Fu <l.fu@pengutronix.de>
   If the latency tracer is turned on in the kernel config, _mcount calls are
   added automatically to every function call during compiling since -pg
   compiling flag is set. _mcount() checks first the variable mcount_enabled.
   (see implementation of _mcount() in arch/powerpc/kernel/entry_32.S) This will
   stuck forever if _mcount is called before mcount_enabled is initialized. Hence
   we mark some init functions as notrace, so that _mcount calls are not added to
   these functions.

Signed-off-by: Luotao Fu <l.fu@pengutronix.de>
---
 arch/powerpc/kernel/cputable.c    |    2 +-
 arch/powerpc/lib/feature-fixups.c |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/powerpc/kernel/cputable.c b/arch/powerpc/kernel/cputable.c
index 25c273c..bd6aad4 100644
--- a/arch/powerpc/kernel/cputable.c
+++ b/arch/powerpc/kernel/cputable.c
@@ -1609,7 +1609,7 @@ static struct cpu_spec __initdata cpu_specs[] = {
 
 static struct cpu_spec the_cpu_spec;
 
-struct cpu_spec * __init identify_cpu(unsigned long offset, unsigned int pvr)
+notrace struct cpu_spec * __init identify_cpu(unsigned long offset, unsigned int pvr)
 {
 	struct cpu_spec *s = cpu_specs;
 	struct cpu_spec *t = &the_cpu_spec;
diff --git a/arch/powerpc/lib/feature-fixups.c b/arch/powerpc/lib/feature-fixups.c
index 8c5a03b..1fd3736 100644
--- a/arch/powerpc/lib/feature-fixups.c
+++ b/arch/powerpc/lib/feature-fixups.c
@@ -90,7 +90,7 @@ static int patch_feature_section(unsigned long value, struct fixup_entry *fcur)
 	return 0;
 }
 
-void do_feature_fixups(unsigned long value, void *fixup_start, void *fixup_end)
+notrace void do_feature_fixups(unsigned long value, void *fixup_start, void *fixup_end)
 {
 	struct fixup_entry *fcur, *fend;
 
-- 
1.6.0.90.g436ed

