From abc6c523ba4d73c4827695a82662032f673aa918 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Wed, 2 Mar 2011 13:59:57 -0500
Subject: [PATCH] softirqd: warn if we wake it on an offline CPU

The commit:

	"preempt-irq: prevent softirq thread from dropping its binding"

introduced code that silently returns if an attempt to wake a
thread on a CPU that isn't online yet takes place.  While similar
issues were observed on 32 core MIPS for 2.6.27, it isn't clear if
this is still really needed here.  Change it to a WARN_ON so we
can know if this is really a required protection, or if we can be
confident in dropping this commit.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 kernel/softirq.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/kernel/softirq.c b/kernel/softirq.c
index e91b86d..6b28c70 100644
--- a/kernel/softirq.c
+++ b/kernel/softirq.c
@@ -182,8 +182,12 @@ static void wakeup_softirqd(int softirq)
 	 * otherwise it will be bound to CPU0 and the mismatch
 	 * will cause many issues at boot.
 	 */
-	if (cpu_is_offline(__get_cpu_var(ksoftirqd)[softirq].cpu))
+	int cpu = __get_cpu_var(ksoftirqd)[softirq].cpu;
+	if (unlikely(cpu_is_offline(cpu))) {
+		printk(KERN_ERR "sirqd: wake event on offline cpu %d\n", cpu);
+		WARN_ON(1);
 		return;
+	}
 #endif
 	if (tsk && tsk->state != TASK_RUNNING)
 		wake_up_process(tsk);
-- 
1.7.4

