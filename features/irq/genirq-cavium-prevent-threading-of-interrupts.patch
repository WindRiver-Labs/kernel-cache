From b98439790d587462fb7270fbd949a43d1fa08780 Mon Sep 17 00:00:00 2001
From: Mark Asselstine <mark.asselstine@windriver.com>
Date: Tue, 6 Jul 2010 13:13:07 -0700
Subject: [PATCH 3/4] genirq: cavium: prevent threading of interrupts

Various irq handlers have been shown to not function correctly when
handled in threads. Add IRQF_NODELAY to prevent threading.

Signed-off-by: Mark Asselstine <mark.asselstine@windriver.com>
---
 arch/mips/cavium-octeon/smp.c        |    4 ++--
 drivers/serial/8250.c                |    3 +++
 drivers/staging/octeon/ethernet-rx.c |    2 +-
 3 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/arch/mips/cavium-octeon/smp.c b/arch/mips/cavium-octeon/smp.c
index 6d99b9d..d203af9 100644
--- a/arch/mips/cavium-octeon/smp.c
+++ b/arch/mips/cavium-octeon/smp.c
@@ -195,11 +195,11 @@ static void octeon_init_secondary(void)
 void octeon_prepare_cpus(unsigned int max_cpus)
 {
 	cvmx_write_csr(CVMX_CIU_MBOX_CLRX(cvmx_get_core_num()), 0xffffffff);
-	if (request_irq(OCTEON_IRQ_MBOX0, mailbox_interrupt, IRQF_DISABLED,
+	if (request_irq(OCTEON_IRQ_MBOX0, mailbox_interrupt, IRQF_DISABLED|IRQF_NODELAY,
 			"mailbox0", mailbox_interrupt)) {
 		panic("Cannot request_irq(OCTEON_IRQ_MBOX0)\n");
 	}
-	if (request_irq(OCTEON_IRQ_MBOX1, mailbox_interrupt, IRQF_DISABLED,
+	if (request_irq(OCTEON_IRQ_MBOX1, mailbox_interrupt, IRQF_DISABLED|IRQF_NODELAY,
 			"mailbox1", mailbox_interrupt)) {
 		panic("Cannot request_irq(OCTEON_IRQ_MBOX1)\n");
 	}
diff --git a/drivers/serial/8250.c b/drivers/serial/8250.c
index 7c21aad..0df2031 100644
--- a/drivers/serial/8250.c
+++ b/drivers/serial/8250.c
@@ -1657,6 +1657,9 @@ static int serial_link_irq_chain(struct uart_8250_port *up)
 	struct irq_info *i;
 	int ret, irq_flags = up->port.flags & UPF_SHARE_IRQ ? IRQF_SHARED : 0;
 
+	if (irq_flags & IRQF_SHARED)
+		irq_flags |= IRQF_NODELAY;
+
 	mutex_lock(&hash_mutex);
 
 	h = &irq_lists[up->port.irq % NR_IRQ_HASH];
diff --git a/drivers/staging/octeon/ethernet-rx.c b/drivers/staging/octeon/ethernet-rx.c
index cb38f9e..bf771b6 100644
--- a/drivers/staging/octeon/ethernet-rx.c
+++ b/drivers/staging/octeon/ethernet-rx.c
@@ -527,7 +527,7 @@ void cvm_oct_rx_initialize(void)
 	}
 	/* Register an IRQ hander for to receive POW interrupts */
 	i = request_irq(OCTEON_IRQ_WORKQ0 + pow_receive_group,
-			cvm_oct_do_interrupt, 0, "Ethernet", cvm_oct_device);
+			cvm_oct_do_interrupt, IRQF_NODELAY, "Ethernet", cvm_oct_device);
 
 	if (i)
 		panic("Could not acquire Ethernet IRQ %d\n",
-- 
1.6.5.2

