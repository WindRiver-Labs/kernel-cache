From 935dc2f98c3ce999f29904daa6ae1bfb2982ab64 Mon Sep 17 00:00:00 2001
From: Mark Asselstine <mark.asselstine@windriver.com>
Date: Fri, 7 May 2010 13:02:53 -0400
Subject: [PATCH 13/22] Fix build issues for 2.6.34

The force softirq to use threaded interrupt patch requires a
few changes to allow things to build and run in 2.6.34

Many of these are inspired by changes made in a merge commit
5f854cfc024622e4aae14d7cf422f6ff86278688 from linux-2.6-tip
[
commit 5f854cfc024622e4aae14d7cf422f6ff86278688
Merge: cc24da0... 4ec62b2...
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Feb 21 20:17:22 2010 +0100

    Forward to 2.6.33-rc8

    Merge branch 'linus' into rt/head with a pile of conflicts.

    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
]

Signed-off-by: Mark Asselstine <mark.asselstine@windriver.com>
---
 include/linux/interrupt.h |    2 +-
 kernel/softirq.c          |    8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/include/linux/interrupt.h b/include/linux/interrupt.h
index 0078671..5aade65 100644
--- a/include/linux/interrupt.h
+++ b/include/linux/interrupt.h
@@ -390,7 +390,7 @@ extern void open_softirq(int nr, void (*action)(struct softirq_action *));
 extern void softirq_init(void);
 extern void raise_softirq_irqoff(unsigned int nr);
 extern void raise_softirq(unsigned int nr);
-extern void wakeup_softirqd(void);
+extern void wakeup_softirqd(int softirq);
 
 /* This is the worklist that queues up per-cpu softirq work.
  *
diff --git a/kernel/softirq.c b/kernel/softirq.c
index 9e684b5..95516ec 100644
--- a/kernel/softirq.c
+++ b/kernel/softirq.c
@@ -772,7 +772,7 @@ static int run_ksoftirqd(void * __data)
 			h = &softirq_vec[data->nr];
 			if (h)
 				h->action(h);
-			rcu_bh_qsctr_inc(data->cpu);
+			rcu_bh_qs(data->cpu);
 
 			local_irq_disable();
 			_local_bh_enable();
@@ -780,7 +780,6 @@ static int run_ksoftirqd(void * __data)
 
 			cond_resched();
 			preempt_disable();
-			rcu_sched_qs(data->cpu);
 		}
 		preempt_enable();
 		set_current_state(TASK_INTERRUPTIBLE);
@@ -868,6 +867,7 @@ static const char *softirq_names [] =
   [NET_TX_SOFTIRQ]	= "net-tx",
   [NET_RX_SOFTIRQ]	= "net-rx",
   [BLOCK_SOFTIRQ]	= "block",
+  [BLOCK_IOPOLL_SOFTIRQ]= "block-iopoll",
   [TASKLET_SOFTIRQ]	= "tasklet",
 #ifdef CONFIG_HIGH_RES_TIMERS
   [HRTIMER_SOFTIRQ]	= "hrtimer",
@@ -891,8 +891,8 @@ static int __cpuinit cpu_callback(struct notifier_block *nfb,
 			per_cpu(ksoftirqd, hotcpu)[i].tsk = NULL;
 		}
 		for (i = 0; i < NR_SOFTIRQS; i++) {
-			p = kthread_create(ksoftirqd,
-					   &per_cpu(run_ksoftirqd, hotcpu)[i],
+			p = kthread_create(run_ksoftirqd,
+					   &per_cpu(ksoftirqd, hotcpu)[i],
 					   "softirq-%s/%d", softirq_names[i],
 					   hotcpu);
 			if (IS_ERR(p)) {
-- 
1.7.0

