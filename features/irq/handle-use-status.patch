From 49e9978bbadb1480ead64fdbc0f721d454a53455 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Tue, 27 Jan 2009 11:07:55 -0500
Subject: [PATCH] irq handle: use cached status instead of dereference NULL action

Patch "irq-tracer-fix.patch" from the additions at rt13 of the
26 preempt_rt patch set introduced a test on action->flags, but it
comes at the end of a loop where we will have run all the
chained handlers until action==NULL.  Since we have stored the
action->flags (or'd) in status while walking the action chain,
use status in the check instead.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
---
 kernel/irq/handle.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/kernel/irq/handle.c b/kernel/irq/handle.c
index ed6deaa..314c9d7 100644
--- a/kernel/irq/handle.c
+++ b/kernel/irq/handle.c
@@ -164,7 +164,7 @@ irqreturn_t handle_IRQ_event(unsigned int irq, struct irqaction *action)
 	} while (action);
 
 	if (status & IRQF_SAMPLE_RANDOM) {
-		if (hardirq_count() && (action->flags & IRQF_DISABLED))
+		if (hardirq_count() && (status & IRQF_DISABLED))
 			local_irq_enable();
 		add_interrupt_randomness(irq);
 	}
-- 
1.6.0.4

