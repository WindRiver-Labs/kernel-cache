# Note -- this is the patches as per what you'd apply against a
# stock 2.6.27 kernel; some context mods need to be made in order
# to run this against the WR default kernel types.

kconf non-hardware irq.cfg

# PG: This is the preempt-rt series, but with patches that aren't relevant to
# supporting just preemptible IRQ commented out. (tagged with not-irq.)
# By replacing "s/^# not-irq: //" -- you should get the preempt_rt series.
#
# base tree: was 2.6.26.6, modified to be: 2.6.27 final.
#
# PG: Note: I've not listed each patch change where it was just "re-path"d
# PG: for the include shuffle of rc2, since that was a basic sed op
# PG: on the original patch -- i.e. I just fed them through:
# PG: sed 's=\(.*\)/include.*asm-\(.*\)/\(.*\)=\1/arch/\2/include/asm/\3='
# PG: A few ARM patches needed manual intervention, with "mach-" in path etc.
# PG: I've also tagged comments with (rc2), (rc3)... as the new
# PG: conflicts arose.  Original rc1 conflict comments are untagged.
#
# PG: rt6 was carried across rc1-->rc6. Now rt7,rt8... will be added.
# PG: things popping up for those will be tagged (rt7), (rt8) and so on.
#
# PG: A change audit of patches carried forward from rt7 to rt8 shows
# PG: the following changes took place within those existing patches:
# PG:	- ftrace-upstream.patch
# PG:		-incorporates what was ftrace-fix-ifdefs.patch
# PG:		-incorporates what was ftrace-ppc-dynamic-fix.patch
# PG:	- preempt-realtime-ftrace.patch
# PG:		-change raw -> __raw [trace_sched_wakeup, trace_stack]
#
# PG: A change audit of patches carried forward from rt8 to rt9 shows
# PG: the following changes took place within those existing patches:
# PG:	- preempt-realtime-core.patch
# 		-remove redundant zap_rt_locks
#
# PG: A change audit of patches carried forward from rt9 to rt10 shows
# PG: the following changes took place within those existing patches:
# PG:   - ftrace-upstream.patch
#               -delete spin_lock --> mutex_lock conversion of smp_alt
#
# PG: Issues that showed up during the compile of rc6-rt9 are marked
# PG: with a (c)

#
# Mainline fixes
#

# PG: in 27rc1; commit b8f8c3c
# idle-fix.patch
# PG: in 27rc1; commit e338125
# idle2-fix.patch

# .27 backports
# PG: drop; is commit 2b9a698
# m68knommu_fixes_ontop_of_v2.6.26.patch
# PG: drop; is commit 6b148507
# pmtmr-override.patch

# not-irq: revert-preempt-bkl-revert.patch

# RCU
# not-irq: rcu-trace-fix-free.patch
# PG: get_cpu(rcu_dyntick_sched) is now get_cpu(rcu_dyntick_sched).dynticks
# not-irq: rcu-preempt-fix-bad-dyntick-accounting.patch
# PG: 1) context mod to sched.h, 2) synchronize_rcu --> synchronize_rcu_xxx
# PG: and it is now living in include/linux/rcupdate.h as a #define.
# not-irq: rcu-preempt-boost-sdr.patch
# not-irq: rcu-preempt-boost-default.patch
# not-irq: rcu-preempt-boost-fix.patch

# not-irq: rcu-hrt-fixups.patch

# PG: basic context mods to ./kernel/rcutorture.c; note xtime issue in comment
# not-irq: rcu-new-7.patch
# PG: basic context mods
# not-irq: rcu-torture-preempt-update.patch
# PG: basic context mods to kernel/rcupreempt.c
# not-irq: rcupreempt-boost-early-init.patch

# not-irq: rt_mutex_setprio.patch

# not-irq: qrcu.patch

# not-irq: rcu-preempt-hotplug-hackaround.patch
# not-irq: call_rcu_bh-rename-of-call_rcu.patch

# the rcu trace markers need to be updated to the new markers.
#rcu-preempt-trace-markers-1.patch
#rcu-preempt-trace-markers-2.patch

#
# RT Balancing code
#
# Taken from sched-devel.git
#


# Last patch of the RT balancing code (not yet in sched-devel)
# PG: already in 2.6.27-rc1 ; commit 6e0534f2
# sched-use-a-2d-bitmap-search-prio-cpu.patch

# FTRACE tracing
# PG: basic context mods.
# not-irq: tracepoint-backport.patch
# PG: (rt8) combination of upstream 01f4b8b8 and a5a242dc
# stacktrace-upstream.patch
# PG: assume upstream @26 is now present in 27-rcX until proven otherwise,
# and then come back and layer on the remaining bits.
# ftrace-upstream.patch
# PG: also goes with upstream, presumably.
# ftrace-fix-upstream.patch
# not-irq: ftrace-report-failure.patch
# PG: (rt8) this is a part of the updated ftrace-upstream.patch
#ftrace-fix-ifdefs.patch
# not-irq: frace-use-tsc.patch
# PG (rt7) see rc1 comment on ftrace_hash_lock in preempt-realtime-ftrace.patch
# PG (rt7) - FIX come back - check/add this when ftrace-upstream is refreshed
# PG: (rt8) this is also a part of the updated ftrace-upstream.patch
# ftrace-ppc-dynamic-fix.patch

# not-irq: ftrace-use-preempt-disable-not-irq-disable.patch
# ftrace-handle-time-outside-of-lockdep.patch
#cycles-to-ns-trace-fix.patch

# ftrace RT extensions
# PG: basic context mods
# not-irq: tracer-add-event-markers.patch
# folded
# trace-eip2ip.patch

#tracer-use-sched-clock.patch
# not-irq: tracer-event-trace.patch

# not-irq: trace-histograms.patch
# folded trace_hist-latediv.patch
# folded trace_hist-divzero.patch

# not-irq: event-tracer-syscall-x86_64.patch
# not-irq: event-tracer-syscall-i386.patch
# not-irq: trace-events-handle-syscalls.patch
# not-irq: event-trace-hrtimer-trace.patch
# not-irq: trace-ktime-scalar.patch

# PG: (c) change tsk --> task to match upstream
# not-irq: preempt-trace.patch

# PG: basic context mods, may be caused by earlier drop of ftrace-backport
# not-irq: ftrace-hotplug-fix.patch
# PG: basic context mods, may be caused by earlier drop of ftrace-backport
# not-irq: ftrace-stop-trace-on-crash.patch
# not-irq: ftrace-document-event-tracer.patch
#ftrace-preempt-trace-check.patch
# not-irq: trace-do-not-wakeup-when-irqs-disabled.patch

# some ftrace fix ups
# PG: drop, in 27rc1 as 1e16c0a0
# ftrace-trace-sched.patch
# PG: drop, in 27rc1 as d12c1a37
# lockdep-avoid-fork-waring.patch
# not-irq: ftrace-dont-trace-markers.patch
# not-irq: ftrace-record-comm-on-ctrl.patch
# not-irq: ftrace-print-missing-cmdline.patch
# not-irq: ftrace-fix-header.patch
# PG: drop; in 27rc1 as 785656a41f
# ftrace-fix-get-kprobe-wreckage.patch


# ARM trace hook
# not-irq: trace-add-event-markers-arm.patch

# Powerpc ftrace 
# not-irq: powerpc-ftrace-stop-on-oops.patch
# not-irq: ppc-gtod-notrace-fix.patch

# PG: do_feature_fixups (for notrace) moved: arch/powerpc/lib/feature-fixups.c
# not-irq: ppc32_notrace_init_functions.patch

# m68knommu ftrace
# not-irq: ftrace-m68knommu-add-FTRACE-support.patch
# not-irq: ftrace-m68knommu-generic-stacktrace-function.patch

# KVM - RT fixes
patch sched-enable-irqs-in-preempt-in-notifier-call.patch

#
# Check what's in mainline / mm or might be
# upstream material.
#
patch spinlock-trylock-cleanup-sungem.patch
patch x86_64-tsc-sync-irqflags-fix.patch
# not-irq: neptune-no-at-keyboard.patch
# not-irq: rtmutex-debug.h-cleanup.patch
patch netpoll-8139too-fix.patch
# not-irq: kprobes-preempt-fix.patch
# not-irq: replace-bugon-by-warn-on.patch

# Suspend / resume fixups
# not-irq: i386-mark-atomic-irq-ops-raw.patch
# not-irq: msi-suspend-resume-workaround.patch
# not-irq: floppy-resume-fix.patch

#
# assorted fixlets from -mm:
#
# Check if they are really in -mm or should be submitted
#
# not-irq: hrtimers-overrun-api.patch
# PG: (c) commit 42b7772 removed tlb double indirection; do same to the patch.
# not-irq: mm-fix-latency.patch

# not-irq: ioapic-fix-too-fast-clocks.patch
# PG: no longer needed, see commit 2510495e
# fix-acpi-build-weirdness.patch

patch move-native-irq.patch
patch dont-unmask-io_apic.patch

#
# misc build beautification patches:
#
# not-irq: gcc-warnings-shut-up.patch

#
# Various fixlets
#

# PG: minor ctxt - savaged by upstream whitespace shuffling.
# not-irq: nfs-stats-miss-preemption.patch
# not-irq: random-driver-latency-fix.patch

#
# Debugging patches
#
# not-irq: apic-dumpstack.patch

#
# Latency tracer 
#
# PG: busted by nmi_32/nmi_64 merge; 32 used to avoid die_nmi(); this doesn't
# not-irq: nmi-profiling-base.patch

# PG: drop.  PPC is dead, dead, *dead*.
# latency-tracing-ppc.patch
# not-irq: latency-tracing-arm.patch
# not-irq: arm-latency-tracer-support.patch

# Needs to be rewritten to trigger on the procfs variable !
# x reset-latency-histogram.patch

# PG: basic Makefile context mod
# not-irq: latency-measurement-drivers.patch

#
# lockdep queue:
#
# PG: (c) change tsk --> task to match upstream
# not-irq: lockdep-show-held-locks.patch
# PG: (rc3) merged in as commit 64aa348e
# lockdep-lock_set_subclass.patch
# not-irq: lockdep-prettify.patch
# PG: (rc3) basic ctxt mod
# not-irq: lockdep-more-entries.patch

#
# Revert loopback bh assumption patch
#
# PG: basic context mod
patch loopback-revert.patch

#
# PPC gtod and highres support

#
# -rt queue:
#
#inet_hash_bits.patch
#inet-hash-bits-ipv6-fix.patch

#
# ARM preperatory patches
#
# CHECKME: Talk to rmk !
# arm-cmpxchg-support-armv6.patch
# not-irq: arm-futex-atomic-cmpxchg.patch
# not-irq: arm-preempt-config.patch

#
# m68knommu
#
# not-irq: m68knommu-make-cmpxchg-RT-safe.patch

#
# generic cmpxchg
#

#
# IRQ threading
#
patch generic-cmpxchg-use-raw-local-irq-variant.patch
# PG: PF_THREAD_BOUND uses 0x04000000, so move PF_SOFTIRQ to vacant 0x80
patch preempt-softirqs-core.patch
# PG: basic ctx changes. (sched.h and proc.c only)
patch preempt-irqs-core.patch
#preempt-irqs-softirq-in-hardirq.patch
patch preempt-irqs-direct-debug-keyboard.patch
patch preempt-irqs-timer.patch
patch preempt-irqs-hrtimer.patch

# PG: 32/64 merge on i8259; EOI to slave already added, outb_p?, math
# PG: IRQF_NODELAY moved to irqinit_32.c, mach-visws is gone.
patch preempt-irqs-i386.patch
# PG: basic ctx.
# PG: (c) additonal caller exists in 27, needs the quirk arg as well.
patch preempt-irqs-i386-ioapic-mask-quirk.patch

patch preempt-irqs-mips.patch

# PG: i8259 32/64 merge, cascade irqaction now in irqinit_64.c
patch preempt-irqs-x86-64.patch
patch preempt-irqs-x86-64-ioapic-mask-quirk.patch

patch preempt-irqs-arm.patch
patch preempt-irqs-arm-fix-oprofile.patch

patch preempt-irqs-ppc.patch
patch preempt-irqs-ppc-ack-irq-fixups.patch
patch preempt-irqs-ppc-fix-b5.patch
patch preempt-irqs-ppc-fix-b6.patch

# file not found
#preempt-irqs-ppc-celleb-beatic-eoi.patch

patch preempt-irqs-ppc-fix-more-fasteoi.patch
# PG: ctxt mods.
patch preempt-irqs-ppc-preempt-schedule-irq-entry-fix.patch

# not-irq: preempt-irqs-m68knommu-make-timer-interrupt-non-threaded.patch

patch preempt-irqs-Kconfig.patch

#
# Real real time stuff :)
#
patch rt-apis.patch

# PG: ctxt --> on_each_cpu() has extra arg now.
# PG: (c) missed removal of the extra arg from one of the above instances.
# not-irq: rt-slab-new.patch
# not-irq: rt-page_alloc.patch

#
# rt-mutexes
#
# PG: restart_machine() is gone; if preempt_enable_no_resched() is still
# req'd then logical place appears to be above do_exit() in stop_cpu().
# not-irq: rt-mutex-preempt-debugging.patch
# PG: in 27-rc1; commit 3f307891
# rt-mutex-irq-flags-checking.patch
# not-irq: rt-mutex-trivial-tcp-preempt-fix.patch
# not-irq: rt-mutex-trivial-route-cast-fix.patch

# PG: __raw_spin_foo() --> __ticket_spin_foo() in asm-x86/spinlock.h
# PG: (rc4) basic ctx mod.
# not-irq: rt-mutex-i386.patch
# PG: 3 hunks (entry_64.S) were adding brackets around TIF_NEED_RESCHED,
# PG: but they are now TIF_WORK_MASK; so dropped those
# not-irq: rt-mutex-x86-64.patch

# PG: Use typecheck() in 27rc1. vs. BUILD_CHECK_IRQ_FLAGS() [spinlock.h]
# PG: DECLARE_SEMAPHORE_GENERIC is dead (b5520689) [semaphore.h]
# PG: (rc3) commit b7d39aff broke the giant spinlock.h patch.
# PG: (rc4) ctxt mods [c72f4573]; completion_done is exported [by be4de35]
# PG: (rc5) simple ctxt mod.
# not-irq: rt-mutex-core.patch

# not-irq: rt-mutex-mips.patch

# PG: flush arch/ppc content; account for inline shuffle of 89b5810f
# not-irq: rt-mutex-ppc.patch
# PG: also needed refresh due to __inline__ --> inline of 89b5810f
# not-irq: rt-mutex-ppc-fix-a5.patch

# not-irq: rt-mutex-arm.patch

# PG: usb.h compat sem is now a completion due to 7119e3c3
# PG: (rc4) xfs: sema.h gone [ab4a9b04]; b_iodonesema a completion [b4dd330b9]
# not-irq: rt-mutex-compat-semaphores.patch

#
# Per-CPU locking assumption cleanups:
#
# PG: flush arch/ppc; minor context change in swap.c from f84f9504
# not-irq: percpu-locked-mm.patch

# not-irq: percpu-locked-netfilter.patch
# not-irq: percpu-locked-netfilter2.patch

# PG: minor context mod.
# not-irq: percpu-locked-powerpc-fixups.patch
#percpu-locked-powerpc-fixups-a6.patch

#
# Various preempt fixups
#
patch net-core-preempt-fix.patch

patch bh-uptodate-lock.patch
patch bh-state-lock.patch

patch jbd_assertions_smp_only.patch

#
# Tasklet redesign
#
# not-irq: tasklet-redesign.patch
# not-irq: tasklet-busy-loop-hack.patch

#
# Diable irq poll on -rt
#
# not-irq: disable-irqpoll.patch

#
# Inaccurate -rt stats (should be replaced by CFS)
#
# not-irq: kstat-add-rt-stats.patch

# Misc
# not-irq: preempt-realtime-warn-and-bug-on.patch

#
# Posix-cpu-timers in a thread
#
# PG: move posix_cpu_thread_init() to early_initcall [because of 7babe8db9]
# not-irq: cputimer-thread-rt_A0.patch
# not-irq: cputimer-thread-rt-fix.patch
# not-irq: posix-cpu-timers-fix.patch

#
# Various broken drivers
#
# not-irq: vortex-fix.patch
patch serial-locking-rt-cleanup.patch
# PG: net/ibm_emac/* was for ppc only; the new net/ibm_newemac/* driver
# PG: has a lock in dev->priv, so hopefully it has sane locking already.
#fix-emac-locking-2.6.16.patch

#
# Serial optimizing
#
# not-irq: serial-slow-machines.patch

#
# Realtime patches
#

# PG: FIX Note: ftrace doesn't yet have ftrace_hash_lock; revisit this and
# PG: upgrade to DEFINE_RAW_SPINLOCK on it after updating ftrace.c
# PG: Same for ftrace_printk (trace_buf_lock) and ftrace_dump_lock in trace.c
# PG: (rt8) updates from 7->8 for raw->__raw in trace_stack.c but
# PG: (rt8) that file isn't here w/o ftrace-upstream.patch  FIX: add back in.
# not-irq: preempt-realtime-ftrace.patch
# not-irq: preempt-realtime-ftrace-disable-ftraced.patch

# ARM:
# not-irq: preempt-realtime-arm.patch
# not-irq: preempt-realtime-arm-rawlock-in-mmu_context-h.patch
# not-irq: arm-trace-preempt-idle.patch
# not-irq: preempt-realtime-arm-bagde4.patch
# not-irq: preempt-realtime-arm-footbridge.patch
# not-irq: preempt-realtime-arm-integrator.patch
# not-irq: preempt-realtime-arm-ixp4xx.patch
# not-irq: preempt-realtime-arm-pxa.patch
# not-irq: preempt-realtime-arm-shark.patch
# not-irq: arm-fix-compile-error-trace-exit-idle.patch

# MIPS: needs splitting
# PG: make smp_send_reschedule_allbutself() use mp_ops [because of 2f304c0a]
# PG: (rc2) basic ctxt mod [due to 8d60a903]
# not-irq: preempt-realtime-mips.patch
#mips-gtod_clocksource.patch

# X86_64: needs splitting
# PG: drop i8259_64.c, io_apic_64.c, nmi_64.c due to 64/32 merge, pick
# PG: up changes in i386 patch below.  Patch also messed up by 46b3b4ef
# PG: and 3b16cf8 (SMP's per arch call_lock is gone).
# PG: FIX - checkme: this patch seems to orphan io_apic_sync().
# PG: (rc3) basic ctxt mod
# not-irq: preempt-realtime-x86_64.patch

# IA64: needs splitting
# not-irq: preempt-realtime-ia64.patch

# PPC: needs cleanup
# PG: remove arch/ppc content; smp no longer has call_lock [b7d7a2404],
# PG: ctxt mod to hw_irq.h [due to e0eca07b]
# not-irq: preempt-realtime-powerpc.patch
# not-irq: preempt-realtime-powerpc-update.patch
# not-irq: preempt-realtime-powerpc-b2.patch
# not-irq: preempt-realtime-powerpc-b3.patch
patch preempt-realtime-powerpc-b4.patch
# not-irq: preempt-realtime-powerpc-add-raw-relax-macros.patch
# not-irq: preempt-realtime-powerpc-tlb-batching.patch
# not-irq: preempt-realtime-powerpc-celleb-raw-spinlocks.patch
# not-irq: preempt-realtime-powerpc-missing-raw-spinlocks.patch

# SuperH: needs splitting
#   Also needs to be ported again!
# preempt-realtime-sh.patch

# i386
# PG: irq_vectors moved [9b7dc567], plus FIRST_SYSTEM_VECTOR is now a var
# PG: with "rewind" capability [305b92a2] so drop the 0xef -> 0xee change;
# PG: i8259_32 and nmi_32 gone via 64/32 merge; stack check now its own fcn.
# PG: (rc3) basic ctxt mod
# not-irq: preempt-realtime-i386.patch
# not-irq: remove-check-pgt-cache-calls.patch
patch preempt-irqs-i386-idle-poll-loop-fix.patch

#
# Core patch
#
# Note this is a convenience split up it is not supposed to compile
# step by step. Needs some care, but it is way easier to handle than
# the previous touch all in one patch
#
# PG: context mods in both sched.c and sched_rt.c
# PG: (rc3) basic ctxt mod
# not-irq: preempt-realtime-sched.patch
# PG: trivial context mod
# not-irq: preempt-realtime-mmdrop-delayed.patch
# not-irq: preempt-realtime-sched-i386.patch
# not-irq: preempt-realtime-prevent-idle-boosting.patch
# preempt-realtime-cfs-accounting-fix.patch
# BVA: dropped patch schedule-tail-balance-disable-irqs.patch
# not-irq: preempt-realtime-sched-cpupri.patch
# PG: relocate BUG_ON() in exit.c [due to 98abed02], workqueue.c patch
# PG: fails [due to ef1ca236], sched.c time_sync_lock gone [by 76a2a6ee]
# PG: yield() -> __yield() in stop_machine.c gone [due to ffdb5976]
# PG: FIX: zap_rt_locks is patched in 2x in the original.
# PG: (rc3) basic ctxt mod
# PG: (rc4) completion_done already exported [by be4de35]
# not-irq: preempt-realtime-core.patch

# PG: trivial context mod
# not-irq: preempt-realtime-fs-block.patch
# not-irq: preempt-realtime-acpi.patch
# PG: IN_WAKEUP moved [by a1193f8e]
# not-irq: preempt-realtime-ipc.patch
# not-irq: preempt-realtime-sound.patch
# ftrace-compile-fixes.patch
# PG: (c) context fix due to 42b7772/mm-fix-latency.patch
# not-irq: preempt-realtime-mm.patch
# PG: move spawn_desched_task() to fork.c early_initcall [due to 7babe8db9]
# PG: could relocate initcall change to preempt-realtime-mmdrop-delayed.patch
# not-irq: preempt-realtime-init-show-enabled-debugs.patch
# not-irq: preempt-realtime-compile-fixes.patch
# not-irq: preempt-realtime-console.patch
# not-irq: preempt-realtime-debug-sysctl.patch
# PG: basic context mod
# not-irq: preempt-realtime-ide.patch
# not-irq: preempt-realtime-input.patch
# not-irq: preempt-realtime-irqs.patch
# not-irq: preempt-realtime-net-drivers.patch
#preempt-realtime-netconsole.patch
# PG: addition of stop/start_critical_timings() breaks original patch.
# not-irq: preempt-realtime-printk.patch
# not-irq: preempt-realtime-profiling.patch
# PG: kretprobe_lock is now kretprobe_table_locks [by ef53d9c5e]
# not-irq: preempt-realtime-rawlocks.patch
# not-irq: preempt-realtime-rcu.patch
# PG: basic context mod
# not-irq: preempt-realtime-timer.patch
# not-irq: kstat-fix-spurious-system-load-spikes-in-proc-loadavgrt.patch
# not-irq: preempt-realtime-usb.patch
# not-irq: preempt-realtime-warn-and-bug-on-fix.patch

#
# Various -rt fixups
#

#preempt-realtime-supress-cpulock-warning.patch
# not-irq: preempt-realtime-supress-nohz-softirq-warning.patch

# PG: netif_*lock* shuffled [by e8a0464]; txq->lock is root_lock [37437bb2]
# PG: (rc2) more lock shuffling [by c3f26a2]
# PG: (rc4) ctxt mod, sch_generic.c and yield changed up [by 4335cd2]
patch preempt-realtime-net.patch
patch preempt-realtime-net-softirq-fixups.patch

patch preempt-realtime-loopback.patch

#preempt-realtime-8139too-rt-irq-flags-fix.patch
# PG: basic context mod
# not-irq: preempt-realtime-mellanox-driver-fix.patch

#
# Utility patches (not for upstream inclusion):
#
# not-irq: preempt-realtime-supress-rtc-printk.patch
# not-irq: hrtimer-no-printk.patch
# PG: coalesce nmi_32.c and nmi_64.c --> nmi.c
# not-irq: nmi-profiling.patch
# not-irq: panic-dont-stop-box.patch
# PG: nmi_watchdog_default removal happened already [part of c376d454]
# nmi-watchdog-disable.patch

#
# soft watchdog queue:
#
#softlockup-fix.patch
# not-irq: softlockup-add-irq-regs-h.patch
#softlockup-better-printout.patch
#softlockup-cleanups.patch
#softlockup-use-cpu-clock.patch

#
# Not yet reviewed
#
# not-irq: gtod-optimize.patch

#
# Pete's file locking scalability changes:
#
# PG: (rc3) basic ctxt mod
# not-irq: s_files-schedule_on_each_cpu_wq.patch
## Missing patch -- SDR
##  See http://programming.kicks-ass.net/kernel-patches/schedule_on_cpu.patch
# schedule_on_cpu.patch
# not-irq: s_files-pipe-fix.patch

#
# Pete's file locking scalability changes:
#
# not-irq: lockdep_lock_set_subclass_fix.patch
# not-irq: lock_list.patch
# not-irq: percpu_list.patch
# PG: basic context mods.
# not-irq: s_files.patch
# not-irq: fix-circular-locking-deadlock.patch

#
# START of Pete's ccur-pagecache queue
#

#
# lockless pagecache
#
#2.6.21-rc6-lockless1-prep-find_lock_page.patch
#2.6.21-rc6-lockless2-radix-tree-use-indirect-bit.patch
# PG: present in 27rc1 as 47feff2c
# 2.6.21-rc6-lockless3-radix-tree-gang-slot-lookups.patch
#2.6.21-rc6-lockless4-__add_to_swap_cache-stuff.patch
# PG: present in 27rc1 as 30002ed2
# 2.6.21-rc6-lockless5-lockless-probe.patch
# PG: present in 27rc1 as e286781d
# 2.6.21-rc6-lockless6-speculative-get-page.patch
# PG: present in 27rc1 as a60637c8
# 2.6.21-rc6-lockless7-lockless-pagecache-lookups.patch
# PG: present in 27rc1 as 19fd6231
# 2.6.21-rc6-lockless8-spinlock-tree_lock.patch
#
# concurrent (write side) page cache
#
# not-irq: radix-tree-concurrent.patch
# PG: glock.c - not using mapping->nrpages anymore [6802e34]; context
# PG: changes in shm.c and swap_state.c; filemap.c shuffled [a969e90]
# PG: (rc4) fs/xfs/linux-2.6/xfs_vnode.h simple change to VN_CACHED().
# not-irq: mapping_nrpages.patch
# not-irq: mapping_nrpages-fix.patch
# PG: lockless6 vs e286781d differ (i.e. no cpu_relax in pagemap.h); similar
# PG: for swap_state.c, filemap.c, migrate.c, vmscan.c
# PG: (rc2) simple ctxt mod.
# PG: (c) - add PG_nonewrefs, since not a part of lockless6/e286781d
# not-irq: lock_page_ref.patch
# PG: same as above; need to account for diff between lockless6 and e2867.
# PG: (rc2) simple ctxt mod.
# not-irq: mm-concurrent-pagecache.patch
# not-irq: radix-tree-optimistic.patch
# not-irq: radix-tree-optimistic-hist.patch
# not-irq: radix-concurrent-lockdep.patch
#radix-tree-path-compression.patch
#
# -rt bits
#
# PG:  minor context mods.
# not-irq: mm-concurrent-pagecache-rt.patch

#
# END of Pete's ccur-pagecache queue
#

#
# kmap atomix fixes
#
# PG: flush asm-ppc chunks.
# not-irq: kmap-atomic-prepare.patch
# not-irq: pagefault-disable-cleanup.patch
# not-irq: kmap-atomic-i386-fix.patch

#
# Not yet reviewed 
#
# not-irq: select-error-leak-fix.patch
# not-irq: fix-emergency-reboot.patch
# not-irq: timer-freq-tweaks.patch

#
# Highmem modifications
#
# not-irq: highmem-revert-mainline.patch
# not-irq: highmem_rewrite.patch
# not-irq: highmem-redo-mainline.patch
# not-irq: rt-kmap-scale-fix.patch

#
# Debug patches:
#
# PG: minor ctxt mod, and again for tsk --> task change.
# not-irq: pause-on-oops-head-tail.patch
# PG: nmi_32.c --> nmi.c
# not-irq: i386-nmi-watchdog-show-regs.patch

#
# x86-64 vsyscall modifications
#
# not-irq: x86-64-tscless-vgettimeofday.patch
#vsyscall-fixadder-pa.patch

#
# Timekeeping fixups
#
# x rt-time-starvation-fix.patch
# x rt-time-starvation-fix-update.patch

#
# RT-Java testing stuff
#
# PG: (c) this old example rmem driver is busted by commit 0d71d10a
# Add-dev-rmem-device-driver-for-real-time-JVM-testing.patch
# PG: (c) ...and since this following one relies on the same /dev/rmem...
# Allocate-RTSJ-memory-for-TCK-conformance-test.patch

#
# Softirq modifications
#
patch new-softirq-code.patch
patch softirq-per-cpu-assumptions-fixes.patch
patch fix-migrating-softirq.patch
patch only-run-softirqs-from-irq-thread-when-irq-affinity-is-set.patch
patch fix-softirq-checks-for-non-rt-preempt-hardirq.patch

patch smp-processor-id-fixups.patch

#
# Weird crap unearthed by -rt which needs to be investigated
#
# not-irq: irda-fix.patch
# not-irq: nf_conntrack-weird-crash-fix.patch
# not-irq: nf_conntrack-fix-smp-processor-id.patch

#
# Needs proper fix
#
# not-irq: print-might-sleep-hack.patch

# not-irq: lockdep-rt-mutex.patch
# not-irq: lockstat-rt-hooks.patch
# not-irq: lockstat_bounce_rt.patch

#
# KVM:
#
#kvm-rt.patch

#
# Add RT to uname and apply the version
#
# not-irq: RT_utsname.patch

#
# not yet backmerged tail patches:
#
# not-irq: preempt-rt-no-slub.patch
# not-irq: paravirt-function-pointer-fix.patch
# not-irq: quicklist-release-before-free-page.patch
# not-irq: quicklist-release-before-free-page-fix.patch
# not-irq: disable-lpptest-on-nonlinux.patch
# not-irq: sched-rt-stats.patch
# PG: minor ctxt mods.
# not-irq: mitigate-resched-flood.patch
patch genirq-soft-resend.patch
# PG: minor ctxt mods.
# not-irq: relay-fix.patch
# PG: FIX - checkme, merging this patch essentially reverts 8de6d30
# PG: where they replace set_bit+queue_work with schedule_work_on().
# not-irq: schedule_on_each_cpu-enhance.patch
#schedule_on_each_cpu-enhance-rt.patch
# PG: (rc3) basic ctxt mod
# not-irq: lockdep-rt-recursion-limit-fix.patch
patch cond_resched_softirq-WARN-fix.patch
patch irq-mask-fix.patch

# stuff Ingo put into version.patch
# not-irq: export-schedule-on-each-cpu.patch

# Tony Breeds POWERPC patches
# not-irq: powerpc-count_active_rt_tasks-is-undefined-for-non-preempt-rt.patch
# not-irq: powerpc-match-__rw_yield-function-declaration-to-prototype.patch
#powerpc-flags-as-passed-to-spin-x-irqsave-should-be-unsigned-long.patch
# not-irq: powerpc-flush_tlb_pending-is-no-more.patch

# fix-alternate_node_alloc.patch
# not-irq: fix-compilation-for-non-RT-in-timer.patch

# not-irq: hack-convert-i_alloc_sem-for-direct_io-craziness.patch
# not-irq: dont-let-rt-rw_semaphores-do-non_owner-locks.patch
# not-irq: rt-s_files-kill-a-union.patch

# not-irq: loadavg_fixes_weird_loads.patch

# HPET patches
# PG: nmi32/64 merge; nmi.c is already doing this in get_timer_irqs().
# watchdog_use_timer_and_hpet_on_x86_64.patch



# x stop-critical-timing-in-idle.patch

# rt-wakeup-fix.patch
# PG: arch/x86/kernel/setup64.c --> kernel/cpu/common_64.c (for DEBUG_STACK)
# PG: (rc6) minor context change around DEBUG_STACK
# not-irq: disable-ist-x86_64.patch


# not-irq: plist-debug.patch
# not-irq: seq-irqsave.patch
# not-irq: numa-slab-freeing.patch

# Peter's patches
#
# workqueue PI
#
# PG: (rc3) merged upstream via commit 7d283aee
# PG: (c) well, partly merged...  Retain the one-line lib/lock_list.c change,
# PG: (c) and the splice2 operations.
# not-irq: rt-list-mods.patch
# not-irq: rt-plist-mods.patch
# PG: basic context mods.
# not-irq: rt-workqeue-prio.patch
# PG: patch gets hosed by tail --> list_head swap [by 1a4d9b0a]
# not-irq: rt-workqueue-barrier.patch
# PG: refresh of above cascades into a refresh of this one...
# not-irq: rt-wq-barrier-fix.patch
# not-irq: rt-delayed-prio.patch

# not-irq: sched_prio.patch
# x critical-timing-kconfig.patch

# not-irq: lock-init-plist-fix.patch
# not-irq: ntfs-local-irq-save-nort.patch
# PG: basic context mods
# not-irq: dont-disable-preemption-without-IST.patch
#rt-powerpc-workarounds.patch

# not-irq: filemap-dont-bug-non-atomic.patch
# not-irq: fix-bug-on-in-filemap.patch
# not-irq: rt-sched-groups.patch
# PG: nmi32/64 merge; only one file to patch now.
# not-irq: send-nmi-all-preempt-disable.patch
# not-irq: printk-dont-bug-on-sched.patch
patch user-no-irq-disable.patch
# PG: basic context mod.
# not-irq: drain-all-local-pages-via-sched.patch
# not-irq: local_irq_save_nort-in-swap.patch
# x latency-tracer-arch-low-address.patch
# not-irq: proportions-raw-locks.patch

# not-irq: arm-compile-fix.patch
# PG: commit 0f476b6d breaks this patch, plus the comments in that commit
# PG: indicate this can't happen.  FIX - verify comments are valid for RT.
#no-warning-for-irqs-disabled-in-local-bh-enable.patch
#page-alloc-use-real-time-pcp-locking-for-page-draining.patch
#power-fixes-for-kernbench.patch

patch handle-pending-in-simple-irq.patch

# AT91 patches
patch use-edge-triggered-irq-handler-instead-of-simple-irq.patch

# x latency-tracer-dont-panic-on-failed-bootmem-alloc.patch
# PG: Ouch. dev->xmit_lock now in netdev_queue [by c773e84] so most of the
# PG: patch didn't apply as is.
# PG: (rc2) same lock shuffling from above gets us again [by c3f26a2]
# PG: (c) bnx2.c, niu.c and netpoll.c need __netif_tx_lock() args updated.
# not-irq: dev-queue-xmit-preempt-fix.patch
# not-irq: ppc-hacks-to-allow-rt-to-run-kernbench.patch
# x time-accumulate-offset-fix.patch
# not-irq: ppc-make-tlb-batch-64-only.patch
# not-irq: ppc-chpr-set-rtc-lock.patch

patch disable-run-softirq-from-hardirq-completely.patch

patch hack-fix-rt-migration.patch
# not-irq: mips-remove-conlicting-rtc-lock-declaration.patch
# not-irq: mips-remove-finish-arch-switch.patch
# PG: (rc2) gdb-stub is now gone [by 8d60a903]
# mips-change-raw-spinlock-type.patch
# not-irq: ppc32-latency-compile-hack-fixes.patch
# not-irq: mips-remove-duplicate-kconfig.patch
# not-irq: apic-level-smp-affinity.patch
# not-irq: timer-warning-fix.patch
# not-irq: printk-in-atomic.patch

# not-irq: root-domain-kfree-in-atomic.patch
# not-irq: printk-in-atomic-hack-fix.patch
# not-irq: slab-irq-nopreempt-fix.patch
# not-irq: ppc-tlbflush-preempt.patch
# PG: (rc2) basic ctxt mod.
# not-irq: swap-spinlock-fix.patch
# not-irq: aacraid-compat-sem.patch

# percpu fixes to handle debug_smp_processor_id errors.
# not-irq: radix-percpu-hack-fix.patch
# not-irq: genhd-protect-percpu-var.patch

# not-irq: sched-clock-nmi.patch

# See who complains
#sched_rt-fixup.patch

# Temp patch to disable RT sched groups
#disable-sched-rt-groups.patch

# PG: cached capability was added just for msi.c but msi is fixed [by 5ca5c02]
# cache_pci_find_capability.patch
# PG: for nmi_64, but merged nmi64/32 already does the set before send.
# nmi-watchdog-fix-1.patch
# PG: was 64 and 32 for nmi; applied to the now merged version of nmi.c
# not-irq: nmi-watchdog-fix-2.patch
# PG: was 64 and 32 for nmi; applied to the now merged version of nmi.c
# not-irq: nmi-watchdog-fix-3.patch
# PG: was 64 and 32 for nmi; applied to the now merged version of nmi.c
# not-irq: nmi-watchdog-fix-4.patch
# not-irq: rt-avoid-deadlock-in-swap.patch
# not-irq: rt-move-update-wall-time-back-to-do-timer.patch
patch rt-shorten-softirq-thread-names.patch

# This patch breaks rt-migrate-test
#sched-rt-push-only-new.patch

#time-gcc-linker-error.patch

# not-irq: rtmutex-lateral-steal.patch
# not-irq: rtmutex-rearrange.patch
# not-irq: rtmutex-remove-xchg.patch
# not-irq: adaptive-spinlock-lite-v2.patch

# RW locks with multiple readers
# not-irq: rwsems-multiple-readers.patch
# Folded into rwsems-multiple-readers.patch
#rwlocks-lateral-steal.patch
# not-irq: rwlocks-multiple-readers.patch
# not-irq: multi-reader-account.patch
# not-irq: multi-reader-limit.patch
# not-irq: multi-reader-lock-account.patch
# not-irq: multi-reader-pi.patch
# not-irq: rwlocks-default-nr-readers-nr-cpus.patch
# not-irq: rtmutex-rwlock-cmpxchg-typecast.patch
# not-irq: rwlock-implement-downgrade-write.patch

# not-irq: sched-nr-migrate-lower-default-preempt-rt.patch

# Peter's fair load_balance break out patches
# not-irq: sched-wake_up_idle_cpu-rt.patch
# Needs some work still
# sched_load_balance_flags.patch
# sched_load_balance_lockbreak.patch
# sched-load_balance-iterator.patch
# sched-load_balance-stop.patch
# sched-load_balance-is_runnable.patch

# Peter's lockstat updates
# PG: (rc5) present upstream as 04148b73b
# lockstat-fix-contention-points.patch
# not-irq: lockstat-output.patch

# Luis's gtod updates
# not-irq: fix_vdso_gtod_vsyscall64_2.patch

# not-irq: rwlocks-fix-no-preempt-rt.patch
# not-irq: git-ignore-script-lpp.patch

# Adaptive Locks
# not-irq: adaptive-optimize-rt-lock-wakeup.patch
# not-irq: adaptive-task-oncpu.patch
# not-irq: adaptive-adjust-pi-wakeup.patch
# not-irq: adapt-remove-extra-try-to-lock.patch
# not-irq: adaptive-earlybreak-on-steal.patch

# not-irq: realtime-preempt-warn-about-tracing.patch
# PG: was 64 and 32 for nmi; applied to the now merged version of nmi.c
# PG: (c) use read_pda() for X86_64, as per original nmi_64 patch did.
# not-irq: nmi-show-regs-fix.patch

# Gregory's Sched updates
# PG: upstream in 27-rc1 as commit 45c01e8
# sched-prioritize-non-migrating-rt-tasks.patch

# PG: see above rt-mutex-core.patch and non-use of BUILD_CHECK_IRQ_FLAGS
# arm-omap-02.patch
# not-irq: arm-omap-05.patch

# not-irq: rwlock-prio-fix.patch
# not-irq: rwlock-fixes.patch

# not-irq: rwlock-torture.patch
# not-irq: radix-tree-lockdep-plus1.patch

# PG: is upstream in 27-rc1 as commit 1f11eb6
# sched-cpupri-hotplug-support.patch
# PG: is upstream in 27-rc1 as commit 709d4b0
# sched-cpupri-priocount.patch

# still needs Signed-off-by:
#sched-global-rt-runtime.patch

# not-irq: rwlock-pi-lock-reader.patch

# not-irq: fix-adaptive-hack.patch

# not-irq: rwlock-slowunlock-mutex-fix.patch
# not-irq: rwlock-slowunlock-mutex-fix2.patch
# not-irq: rt-mutex-use-inline.patch
# not-irq: rt-mutex-namespace.patch
# not-irq: rtmutex-debug-fix.patch
# not-irq: fix-config-debug-rt-mutex-lock-underflow-warnings.patch

# not-irq: rwlock-protect-reader_lock_count.patch
# not-irq: rt-rwlock-conservative-locking.patch

# not-irq: rwlock-torture-no-rt.patch

# PG: Commit 137d3ed rewrote underlying code base, but sg_copy_buffer
# PG: calls sg_miter_stop which *may* do a WARN_ON(!irqs_disabled())
# PG: if SG_MITER_ATOMIC is set. 
# warn-on-rt-scatterlist.patch
patch sub-dont-disable-irqs.patch

# CHECKME
#cpu-hotplug-vs-slab.patch
#cpu-hotplug-vs-page-alloc.patch
#cpu-hotplug-cpu-up-vs-preempt-rt.patch
#rcu-backport-rcu-cpu-hotplug-support.patch
#cpu-hotplug-cpu-down-vs-preempt-rt.patch
#re-cpu-hotplug-cpu-down-vs-preempt-rt.patch
#hotplug-smp-boot-fix.patch
#cpu-hotplug-fix-fix-fix.patch


# CHECKME
#fix_SCHED_FIFO_spec_violation.patch

# PG: one of the (duplicated) defn's in tlb_64, went away [by c884116]
# not-irq: ppc64-fix-preempt-unsafe-paths-accessing-per_cpu-variables.patch
patch fix-a-previously-reverted-fix.patch

#CHECKME powerpc-xics-move-the-call-to-irq-radix-revmap-from-xics-startup-to-xics-host-map.patch
#CHECKME powerpc-make-the-irq-reverse-mapping-radix-tree-lockless.patch

# not-irq: bz235099-idle-load-fix.patch
# PG: collapse into one file, due to usual nmi_64+nmi_32 merge into nmi.c
# not-irq: raw-spinlocks-for-nmi-print.patch

# not-irq: sched-fix-dequeued-race.patch


# 2.6.26-rt2
# not-irq: lockdep-atomic-fixup.patch
# PG: (rc3) upstream as commit 52fd8ca6
# infiniband-flags-fix.patch
# PG: upstream in 27-rc1 as d249afd
# usb-isp1760-irq-flags-fix.patch
# not-irq: sched-rt-runtime-lock-raw.patch
# not-irq: powerpc-01-separate-the-irq-radix-tree-insertion.patch
# not-irq: powerpc-02-make-the-irq-reverse-mapping-radix-tree-lockless.patch
# PG: upstream in 27-rc1 as 4446a36
# call_rcu_sched.patch
# not-irq: rcu-preempt-tracing-preempt-disable-fix.patch
# not-irq: rcu-apply-rcu_process_callbacks-from-mainline.patch
# PG: upstream in 27-rc1 as ae66be9
# rcu-fix-to-include.patch
# not-irq: shorten-posix-cpu-timers-name.patch
# PG: basic context mods
# not-irq: sched-properly-account-irq-and-rt-load.patch
# not-irq: seqlock-01-make-sure-that-raw_seqlock-retries.patch
# not-irq: seqlock-02-fix-elevated-preempt-count.patch

# 2.6.26-rt3

## This cpu hotplug stuff still has issues
# cpu-hotplug-vs-slab.patch
# cpu-hotplug-vs-page-alloc.patch
# cpu-hotplug-page-alloc-hack-fix.patch
# cpu-hotplug-cpu-up-vs-preempt-rt.patch
# cpu-hotplug-cpu-down-vs-preempt-rt.patch

# not-irq: fix-net-bug-fixes.patch
# not-irq: namespace-lock-fixes.patch

patch hrtimers-stuck-in-waitqueue.patch

# 2.6.26-rt4
# PG: basic context mods
# not-irq: sched-generic-hide-smp-warning.patch
# PG: already upstream for 27 based on comments in patch header itself.
# x86-crashkernel-reservation-before-bootmem.patch

# 2.6.26-rt5
# not-irq: seqlock-serialize-against-writers.patch

# 2.6.26-rt6
# PG: (rc6) now upstream as 9d359357
# pm_qos_requirement-might-sleep.patch
# not-irq: sched-only-push-if-pushable.patch
# PG: adapted commit in 27-rc1 appears to be c4acb2c0
# sched-pull-one-task-during-newidle.patch
# x sched-make-double-lock-balance-fair.patch
# x  sched-add-needs_post_schedule.patch
# not-irq: plist-fix-static-node-init.patch
# PG: basic context mods
# not-irq: sched-only-push-once-per-queue.patch
# PG: basic context mods
# PG: (rc6) again basic context mods
# not-irq: ftrace-ppc-define-mcount.patch

# 2.6.26-rt7
patch ppc-fix-prev-revert-fix-again.patch

# 2.6.26-rt8
# not-irq: x86-tlbstate-lock-raw.patch
# not-irq: seqlocks-handle-rwlock-and-spin.patch
# not-irq: futex-fifo-warn-sysctl.patch

# 2.6.26-rt9
# not-irq: futex-trivial-fix.patch
# not-irq: rtmutex-debug-magic.patch

# 2.6.26-rt10
# not-irq: rwlock-handle-bad-locking-practices.patch
# not-irq: rwlock-update-torture-test.patch
# not-irq: remove-rt-push-comment.patch
# not-irq: rt-sched-fix-push-to-handle-dequeue.patch
# not-irq: ppc-remove-duplicate-save-stack-trace.patch
# not-irq: arm_ftrace_event_irq.patch

# not-irq: sched-fair-scheduler-and-rt-tasks.patch
# not-irq: ftrace-rename-stop-to-halt.patch
# not-irq: ftrace-stop.patch
# not-irq: event-trace-stop-on-function-trace-stop.patch
# not-irq: ftrace-preempt-disable.patch
# not-irq: sched-trace-resched-task.patch
# not-irq: event-record-resched.patch

# 2.6.26-rt11
# not-irq: ftrace-compile-fix.patch

# PG: -- end of upstream patches (excl. version patch) --
#
# PG: (c) 2.6.27-rc6 - all things added out of necessity to adopt upstream
# PG: select header bits from ftrace-upstream; delete after merging
# not-irq: ftrace-upstream-temp.patch
# PG: ftrace-upstream was also bringing trace/sched.h in from LTT.
# not-irq: ftrace-upstream-tracepoints.patch
# PG: commit db70089 adds flush_work() which knows nothing about PI
# PG: workqueues. Merge into rt-workqeue-prio.patch after review.
# not-irq: rt-wq-flush_work.patch
# PG: preempt-realtime-debug-sysctl.patch breaks compile if !CONFIG_PROFILE
# not-irq: prof-sysctl-compile.patch
# PG: __mutex_init() is not what drivers/base/class.c thinks it is.
# not-irq: drivers_base_mutex.patch
# PG: (c) compile failure shows up when !PREEMPT_RT
# not-irq: compat_rwsem-fix-compile.patch
# PG: (c) compile failure shows up when !PREEMPT_RT
# not-irq: bit-spinlocks-fix-compile.patch
# not-irq: nmi-prof-compile.patch

# PG: fix intermittent boot problem w/ timer IRQ being incorrectly threaded
patch start_irq_thread.patch
# PG: update HRTIMER safe classification to account for ccc7dad
patch hrtimers-irqsafe.patch
# PG: from preempt-realtime-core.patch but clearly needed for preempt_irq
patch in_irq-flags.patch
# PG: chunks that are not RT specific but are in preempt-realtime-sched.patch
patch preempt-irq-sched.patch
# PG: extraversion, append -26irq11 since that was the baseline.
# patch version.patch
