From 3a7a3303fdbf359d58a9073632efeead58aec681 Mon Sep 17 00:00:00 2001
From: Wu Zhangjin <zhangjin.wu@windriver.com>
Date: Thu, 30 Sep 2010 03:26:16 -0700
Subject: [PATCH 1/4] tracing/trace-clock: don't re-schedule in trace_clock_read64_ns()

To avoid the hang when using trace_clock_read64_ns() with function_graph
tracer, preempt_enable() must be converted to its no resched variant for
preempt_enable() may call preempt_schedule(), but preempt_schedule() is
not a notrace function, which may call trace_clock_read64_ns() again and
then deadlock.

Signed-off-by: Wu Zhangjin <zhangjin.wu@windriver.com>
---
 kernel/trace/trace-clock-32-to-64.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/kernel/trace/trace-clock-32-to-64.c b/kernel/trace/trace-clock-32-to-64.c
index b1fa63a..846fba3 100644
--- a/kernel/trace/trace-clock-32-to-64.c
+++ b/kernel/trace/trace-clock-32-to-64.c
@@ -130,7 +130,7 @@ u64 notrace trace_clock_read_synthetic_tsc(void)
 			+ (1ULL << TC_HW_BITS);
 	else
 		ret = SW_MS32(cpu_synth->tsc[index].val) | (u64)tsc;
-	preempt_enable_notrace();
+	preempt_enable_no_resched_notrace();
 	return ret;
 }
 EXPORT_SYMBOL_GPL(trace_clock_read_synthetic_tsc);
-- 
1.6.5.2

