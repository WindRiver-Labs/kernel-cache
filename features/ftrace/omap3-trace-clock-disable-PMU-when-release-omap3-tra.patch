From adef5b3d6743e4571c08151af5a36100e8178d5c Mon Sep 17 00:00:00 2001
From: Hui Wang <Hui.Wang@windriver.com>
Date: Wed, 5 Jan 2011 17:42:25 +0800
Subject: [PATCH 1/2] omap3/trace-clock: disable PMU when release omap3 trace-clock

When we startup oprofile, we will get the following error:
"oprofile: CPU0 PMNC still enabled when setup new event counter."
"failed to open the /dev/oprofile/buffer driver: Device or resource"
"busy"

This is because both oprofile and tracer clock will use PMU, and
unfortunately tracer clock occupied the PMU before the oprofile. The
original design is when call get_trace_clock(), it will enable PMU,
but when call put_trace_clock(), it will leave the PMU enabled. So the
oprofile will have no chance to hold the PMU and to startup
successfully.

To handle this problem, we need to disable PMU when we don't need
trace clock anymore.

Signed-off-by: Hui Wang <Hui.Wang@windriver.com>
---
 arch/arm/mach-omap2/trace-clock.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/trace-clock.c b/arch/arm/mach-omap2/trace-clock.c
index bf50dcc..26c0590 100644
--- a/arch/arm/mach-omap2/trace-clock.c
+++ b/arch/arm/mach-omap2/trace-clock.c
@@ -149,6 +149,7 @@ void save_sync_trace_clock(void)
 	struct pm_save_count *pm_count;
 	unsigned long flags;
 	int cpu;
+	u32 regval;
 
 	raw_local_irq_save(flags);
 	cpu = smp_processor_id();
@@ -174,6 +175,11 @@ end:
 	 * keeping track of time with ext. clock.
 	 */
 	write_ctens(read_ctens() & ~(1 << 31));	/* disable counter */
+
+	regval = read_pmnc();
+	regval &=  ~(1 << 0);	/* Disable all counters */
+	write_pmnc(regval);
+
 	raw_local_irq_restore(flags);
 }
 
-- 
1.6.5.2

