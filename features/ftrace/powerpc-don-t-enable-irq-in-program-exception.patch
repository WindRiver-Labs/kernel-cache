From 0322b625002283988f25a894ab04e7c0349f3fd3 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 9 Nov 2011 22:32:50 +0800
Subject: [PATCH 2/2] powerpc: don't enable irq in program exception

The commit cd8a5673 (powerpc: Fix might-sleep warning in program
check exception handler) caused a subtle regression in the irq in
program exception handler in the kprobe return from interrupt in that
it enables interrupts when they should not have.  There is a dedicated
stack for program exception when kprobes is enabled, and this requires
that the program exception handler must be nonpreemptive.
The instruction that is being read was actually the faulting
instruction so there should not be any further data faults.
In this case we can replace get_user() with probe_kernel_read()
and keep the IRQs disabled.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Reviewed-by: Jason Wessel <jason.wessel@windriver.com>
---
 arch/powerpc/kernel/traps.c  |    6 +++---
 arch/powerpc/math-emu/math.c |    2 +-
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/powerpc/kernel/traps.c b/arch/powerpc/kernel/traps.c
index ef5f201..2840675 100644
--- a/arch/powerpc/kernel/traps.c
+++ b/arch/powerpc/kernel/traps.c
@@ -36,6 +36,7 @@
 #include <linux/ltt-core.h>
 #include <trace/trap.h>
 #include <linux/kallsyms.h>
+#include <linux/uaccess.h>
 
 #include <asm/emulated_ops.h>
 #include <asm/pgtable.h>
@@ -763,7 +764,8 @@ static int emulate_instruction(struct pt_regs *regs)
 		return -EINVAL;
 	CHECK_FULL_REGS(regs);
 
-	if (get_user(instword, (u32 __user *)(regs->nip)))
+	if (probe_kernel_read((void *)&instword, (void *)(regs->nip),
+				sizeof(u32)))
 		return -EFAULT;
 
 	/* Emulate the mfspr rD, PVR. */
@@ -850,8 +852,6 @@ void __kprobes program_check_exception(struct pt_regs *regs)
 		return;
 	}
 
-	local_irq_enable();
-
 #ifdef CONFIG_MATH_EMULATION
 	/* (reason & REASON_ILLEGAL) would be the obvious thing here,
 	 * but there seems to be a hardware bug on the 405GP (RevD)
diff --git a/arch/powerpc/math-emu/math.c b/arch/powerpc/math-emu/math.c
index 164d559..9c3e0b5 100644
--- a/arch/powerpc/math-emu/math.c
+++ b/arch/powerpc/math-emu/math.c
@@ -224,7 +224,7 @@ do_mathemu(struct pt_regs *regs)
 	int eflag, trap;
 #endif
 
-	if (get_user(insn, (u32 *)pc))
+	if (probe_kernel_read((void *)&insn, (void *)pc, sizeof(u32)))
 		return -EFAULT;
 
 #ifndef CONFIG_MATH_EMULATION
-- 
1.7.0

