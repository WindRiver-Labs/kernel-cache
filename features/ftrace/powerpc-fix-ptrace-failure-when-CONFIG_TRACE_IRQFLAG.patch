From e8d0a8a9dddfd48954c1edc96ce92bffdc154a16 Mon Sep 17 00:00:00 2001
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Wed, 16 Nov 2011 11:17:53 +0800
Subject: [PATCH 2/2] powerpc: fix ptrace failure when CONFIG_TRACE_IRQFLAGS enabled

In ppc ptrace scenario, register r4 is set by following code:
2:      mfspr   r4,SPRN_DBSR
        addi    r3,r1,STACK_FRAME_OVERHEAD
        EXC_XFER_TEMPLATE(DebugException, 0x2002, \
                (MSR_KERNEL & ~(MSR_ME|MSR_DE|MSR_CE)), \
                NOCOPY, crit_transfer_to_handler, ret_from_crit_exc)

And r4 represents the second parameter debug_status of DebugException.
However when CONFIG_TRACE_IRQFLAGS is enabled, following code is
executed between r4 is set and DebugException is called:
arch/powerpc/kernel/entry_32.S:
transfer_to_handler_cont:
[snip]
[snip]
        bl      trace_hardirqs_off
        lwz     r0,GPR0(r1)
        lwz     r3,ORIG_GPR3(r1)
        lwz     r4,GPR4(r1)  ---> here r4 is clobbered
        lwz     r5,GPR5(r1)
[snip]

register r4 is re-set as value r4 in pt_regs, but not SPRN_DBSR. And
it finally cause ptrace failure. To fix it, use SPRN_SPRG2 to save
r4.

Signed-off-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 arch/powerpc/kernel/entry_32.S |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/kernel/entry_32.S b/arch/powerpc/kernel/entry_32.S
index 2e65a75..4dfc8ab 100644
--- a/arch/powerpc/kernel/entry_32.S
+++ b/arch/powerpc/kernel/entry_32.S
@@ -214,6 +214,7 @@ reenable_mmu:				/* re-enable mmu so we can */
 	stw	r9,8(r1)
 	stw	r11,12(r1)
 	stw	r3,ORIG_GPR3(r1)
+	mtspr	SPRN_SPRG2,r4
 	/*
 	 * The trace_hardirqs_off will use CALLER_ADDR0 and CALLER_ADDR1.
 	 * If from user mode there is only one stack frame on the stack, and
@@ -232,7 +233,7 @@ reenable_mmu:				/* re-enable mmu so we can */
 12:
 	lwz	r0,GPR0(r1)
 	lwz	r3,ORIG_GPR3(r1)
-	lwz	r4,GPR4(r1)
+	mfspr	r4,SPRN_SPRG2
 	lwz	r5,GPR5(r1)
 	lwz	r6,GPR6(r1)
 	lwz	r7,GPR7(r1)
-- 
1.7.0.4

