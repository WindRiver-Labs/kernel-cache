From 25ad971e84230cf34fba7aa5d692a9d2bd520a81 Mon Sep 17 00:00:00 2001
From: Weiwei Wang <weiwei.wang@windriver.com>
Date: Tue, 8 Nov 2011 17:03:48 +0800
Subject: [PATCH] powerpc: fix ptrace failure when CONFIG_TRACE_IRQFLAGS enabled

In ppc ptrace scenario, register r4 is set by following code:
2:      mfspr   r4,SPRN_DBSR
        addi    r3,r1,STACK_FRAME_OVERHEAD
        EXC_XFER_TEMPLATE(DebugException, 0x2002, \
                (MSR_KERNEL & ~(MSR_ME|MSR_DE|MSR_CE)), \
                NOCOPY, crit_transfer_to_handler, ret_from_crit_exc)

And r4 represents the second parameter debug_status of DebugException.
However when CONFIG_TRACE_IRQFLAGS is enabled, following code is
executed between r4 is set and DebugException is called:
arch/powerpc/kernel/entry_32.S:
transfer_to_handler_cont:
[snip]
[snip]
        bl      trace_hardirqs_off
        lwz     r0,GPR0(r1)
        lwz     r3,ORIG_GPR3(r1)
        lwz     r4,GPR4(r1)  ---> here r4 is clobbered
        lwz     r5,GPR5(r1)
[snip]

register r4 is re-set as its backuped value in pt_regs, but not
SPRN_DBSR. And it finally causes ptrace failure. To fix it, create
a new element orig_gpr4 in pt_regs where r4 is saved and restored.

Signed-off-by: Weiwei Wang <weiwei.wang@windriver.com>
---
 arch/powerpc/include/asm/ptrace.h |    2 ++
 arch/powerpc/kernel/asm-offsets.c |    1 +
 arch/powerpc/kernel/entry_32.S    |    3 ++-
 3 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/include/asm/ptrace.h b/arch/powerpc/include/asm/ptrace.h
index 77bbc68..c59131f 100644
--- a/arch/powerpc/include/asm/ptrace.h
+++ b/arch/powerpc/include/asm/ptrace.h
@@ -33,6 +33,8 @@ struct pt_regs {
 	unsigned long nip;
 	unsigned long msr;
 	unsigned long orig_gpr3;	/* Used for restarting system calls */
+	unsigned long orig_gpr4;	/* Used for saving debug_status
+					   in DebugException */
 	unsigned long ctr;
 	unsigned long link;
 	unsigned long xer;
diff --git a/arch/powerpc/kernel/asm-offsets.c b/arch/powerpc/kernel/asm-offsets.c
index 28a686f..985127d 100644
--- a/arch/powerpc/kernel/asm-offsets.c
+++ b/arch/powerpc/kernel/asm-offsets.c
@@ -287,6 +287,7 @@ int main(void)
 	DEFINE(_DAR, STACK_FRAME_OVERHEAD+offsetof(struct pt_regs, dar));
 	DEFINE(_DSISR, STACK_FRAME_OVERHEAD+offsetof(struct pt_regs, dsisr));
 	DEFINE(ORIG_GPR3, STACK_FRAME_OVERHEAD+offsetof(struct pt_regs, orig_gpr3));
+	DEFINE(ORIG_GPR4, STACK_FRAME_OVERHEAD+offsetof(struct pt_regs, orig_gpr4));
 	DEFINE(RESULT, STACK_FRAME_OVERHEAD+offsetof(struct pt_regs, result));
 	DEFINE(_TRAP, STACK_FRAME_OVERHEAD+offsetof(struct pt_regs, trap));
 #ifndef CONFIG_PPC64
diff --git a/arch/powerpc/kernel/entry_32.S b/arch/powerpc/kernel/entry_32.S
index 12fde08..2f2145a 100644
--- a/arch/powerpc/kernel/entry_32.S
+++ b/arch/powerpc/kernel/entry_32.S
@@ -214,10 +214,11 @@ reenable_mmu:				/* re-enable mmu so we can */
 	stw	r9,8(r1)
 	stw	r11,12(r1)
 	stw	r3,ORIG_GPR3(r1)
+	stw	r4,ORIG_GPR4(r1)
 	bl	trace_hardirqs_off
 	lwz	r0,GPR0(r1)
 	lwz	r3,ORIG_GPR3(r1)
-	lwz	r4,GPR4(r1)
+	lwz	r4,ORIG_GPR4(r1)
 	lwz	r5,GPR5(r1)
 	lwz	r6,GPR6(r1)
 	lwz	r7,GPR7(r1)
-- 
1.7.0.4

