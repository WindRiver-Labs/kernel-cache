From 96fff3eabdf3bef839e2402a70c015cd3a2d00c2 Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Mon, 13 Oct 2014 10:03:02 -0700
Subject: [PATCH 1/2] lttng: fix lttng_enumerate_process_states potential
 deadlock

The call path:
lttng_enumerate_process_states:
        task_lock(p)
        lttng_statedump_process_ns()----> task_lock(p)
        task_unlock(p)

The calltrace as the following:
=============================================
[ INFO: possible recursive locking detected ]
3.10.38-ltsi-WR6.0.0.0_standard #1 Tainted: G         C
---------------------------------------------
lttng-sessiond/926 is trying to acquire lock:
 (&(&p->alloc_lock)->rlock){+.+...}, at: [<7f01d560>] lttng_statedump_start+0x1f8/0x10e8 [lttng_statedump]

but task is already holding lock:
 (&(&p->alloc_lock)->rlock){+.+...}, at: [<7f01d4fc>] lttng_statedump_start+0x194/0x10e8 [lttng_statedump]

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&(&p->alloc_lock)->rlock);
  lock(&(&p->alloc_lock)->rlock);

 *** DEADLOCK ***

 May be due to missing lock nesting notation

3 locks held by lttng-sessiond/926:
 #0:  (sessions_mutex){+.+.+.}, at: [<7f0253e4>] lttng_session_enable+0x28/0x540 [lttng_tracer]
 #1:  (rcu_read_lock){.+.+..}, at: [<7f01d414>] lttng_statedump_start+0xac/0x10e8 [lttng_statedump]
 #2:  (&(&p->alloc_lock)->rlock){+.+...}, at: [<7f01d4fc>] lttng_statedump_start+0x194/0x10e8 [lttng_statedump]

stack backtrace:
CPU: 1 PID: 926 Comm: lttng-sessiond Tainted: G         C 3.10.38-ltsi-WR6.0.0.0_standard #1
[<800170e0>] (unwind_backtrace+0x0/0xec) from [<800125ec>] (show_stack+0x20/0x24)
[<800125ec>] (show_stack+0x20/0x24) from [<806a698c>] (dump_stack+0x20/0x28)
[<806a698c>] (dump_stack+0x20/0x28) from [<8008771c>] (__lock_acquire+0x2ec/0x1b0c)
[<8008771c>] (__lock_acquire+0x2ec/0x1b0c) from [<80089620>] (lock_acquire+0x10c/0x214)
[<80089620>] (lock_acquire+0x10c/0x214) from [<806abfe8>] (_raw_spin_lock+0x48/0x58)
[<806abfe8>] (_raw_spin_lock+0x48/0x58) from [<7f01d560>] (lttng_statedump_start+0x1f8/0x10e8 [lttng_statedump])
[<7f01d560>] (lttng_statedump_start+0x1f8/0x10e8 [lttng_statedump]) from [<7f02587c>] (lttng_session_enable+0x4c0/0x540 [lttng_tracer])
[<7f02587c>] (lttng_session_enable+0x4c0/0x540 [lttng_tracer]) from [<7f02614c>] (lttng_session_ioctl+0x220/0x2b4 [lttng_tracer])
[<7f02614c>] (lttng_session_ioctl+0x220/0x2b4 [lttng_tracer]) from [<80151b70>] (vfs_ioctl+0x38/0x4c)
[<80151b70>] (vfs_ioctl+0x38/0x4c) from [<801526bc>] (do_vfs_ioctl+0x4f8/0x5a4)
[<801526bc>] (do_vfs_ioctl+0x4f8/0x5a4) from [<801527c8>] (SyS_ioctl+0x60/0x8c)
[<801527c8>] (SyS_ioctl+0x60/0x8c) from [<8000dde0>] (ret_fast_syscall+0x0/0x48)

Signed-off-by: Zhong Hongbo <hongbo.zhong@windriver.com>
Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 drivers/staging/lttng2/lttng-statedump-impl.c | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/drivers/staging/lttng2/lttng-statedump-impl.c b/drivers/staging/lttng2/lttng-statedump-impl.c
index 6d841c3..1880603 100644
--- a/drivers/staging/lttng2/lttng-statedump-impl.c
+++ b/drivers/staging/lttng2/lttng-statedump-impl.c
@@ -398,7 +398,6 @@ void lttng_statedump_process_ns(struct lttng_session *session,
 	 * "namespaces: Use task_lock and not rcu to protect nsproxy"
 	 * for details.
 	 */
-	task_lock(p);
 	proxy = p->nsproxy;
 	if (proxy) {
 		pid_ns = lttng_get_proxy_pid_ns(proxy);
@@ -411,8 +410,6 @@ void lttng_statedump_process_ns(struct lttng_session *session,
 		trace_lttng_statedump_process_state(session,
 			p, type, mode, submode, status, NULL);
 	}
-	task_unlock(p);
-
 }
 
 static
-- 
2.0.2

