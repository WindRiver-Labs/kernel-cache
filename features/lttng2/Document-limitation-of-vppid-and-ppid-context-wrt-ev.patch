From 279a2f41a4582b355d5ee6d839bab4746b401c48 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Mon, 27 Aug 2012 09:57:09 -0400
Subject: [PATCH 22/55] Document limitation of vppid and ppid context wrt
 eventual RCU instrumentation

commit 1638c9b4fa42c188ffa962552146537f8fb3d26e lttng.org/lttng-modules.git

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Signed-off-by: Paul Barrette <paul.barrette@windriver.com>
---
 drivers/staging/lttng/lttng-context-ppid.c  |    9 +++++++++
 drivers/staging/lttng/lttng-context-vppid.c |    9 +++++++++
 2 files changed, 18 insertions(+)

diff --git a/drivers/staging/lttng/lttng-context-ppid.c b/drivers/staging/lttng/lttng-context-ppid.c
index 0581904..58ff3fe 100644
--- a/drivers/staging/lttng/lttng-context-ppid.c
+++ b/drivers/staging/lttng/lttng-context-ppid.c
@@ -46,6 +46,15 @@ void ppid_record(struct lttng_ctx_field *field,
 {
 	pid_t ppid;
 
+
+	/*
+	 * TODO: when we eventually add RCU subsystem instrumentation,
+	 * taking the rcu read lock here will trigger RCU tracing
+	 * recursively. We should modify the kernel synchronization so
+	 * it synchronizes both for RCU and RCU sched, and rely on
+	 * rcu_read_lock_sched_notrace.
+	 */
+
 	rcu_read_lock();
 	ppid = task_tgid_nr(current->real_parent);
 	rcu_read_unlock();
diff --git a/drivers/staging/lttng/lttng-context-vppid.c b/drivers/staging/lttng/lttng-context-vppid.c
index 365d973..06377a3 100644
--- a/drivers/staging/lttng/lttng-context-vppid.c
+++ b/drivers/staging/lttng/lttng-context-vppid.c
@@ -51,6 +51,15 @@ void vppid_record(struct lttng_ctx_field *field,
 	 * current nsproxy can be NULL when scheduled out of exit. pid_vnr uses
 	 * the current thread nsproxy to perform the lookup.
 	 */
+
+	/*
+	 * TODO: when we eventually add RCU subsystem instrumentation,
+	 * taking the rcu read lock here will trigger RCU tracing
+	 * recursively. We should modify the kernel synchronization so
+	 * it synchronizes both for RCU and RCU sched, and rely on
+	 * rcu_read_lock_sched_notrace.
+	 */
+
 	rcu_read_lock();
 	parent = rcu_dereference(current->real_parent);
 	if (!current->nsproxy)
-- 
1.7.9.7

