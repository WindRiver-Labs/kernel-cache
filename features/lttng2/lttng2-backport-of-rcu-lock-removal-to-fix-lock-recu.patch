From 5187ea79fe90ab3539539c023fc976a294d7a749 Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Mon, 17 Nov 2014 00:07:40 -0500
Subject: [PATCH] lttng2: backport of rcu lock removal to fix lock recursion

This lttng commit in git://git.lttng.org/lttng-modules.git

 ----------
 commit 4ba1f53c5aebb4433fedc25d65af010274985043
 Author: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
 Date:   Thu Aug 21 10:53:12 2014 -0400

    Update statedump to 3.17 nsproxy locking

    This Linux upstream commit introduces locking strategy back and forth:

    commit 728dba3a39c66b3d8ac889ddbe38b5b1c264aec3
    Author: Eric W. Biederman <ebiederm@xmission.com>
    Date:   Mon Feb 3 19:13:49 2014 -0800

        namespaces: Use task_lock and not rcu to protect nsproxy

    Use the task lock starting from kernel 3.17 rather than RCU to access
    the task nsproxy.

    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
 ----------

relies on 728dba (added into 3.17).  However, since that same commit
has been backported to this 3.10 release for performance reasons, we
need it also here.

This represents the same 4ba1f commit content, but just without the
version specific #ifdef stuff.

Without it we will get lockdep complaining, or the runtime check of
line 876:
	BUG_ON(rt_mutex_owner(lock) == self);
triggering as per what is seen below.

kernel BUG at kernel/rtmutex.c:876!
invalid opcode: 0000 [#1] PREEMPT SMP
Modules linked in: lttng_ring_buffer_metadata_mmap_client(C) lttng_probe_statedump(C) lttng_probe_skb(C) lttng_probe_irq(C) lttng_types(C) lttng_probe_sock(C) lttng_probe_timer(C) lttng_probe_block(C) lttng_prob
e_ext3(C) lttng_probe_udp(C) lttng_probe_sunrpc(C) lttng_probe_ext4(C) lttng_probe_scsi(C) lttng_probe_signal(C) lttng_probe_module(C) lttng_probe_random(C) lttng_probe_jbd2(C) lttng_probe_writeback(C) lttng_pro
be_vmscan(C) lttng_probe_printk(C) lttng_probe_rcu(C) lttng_probe_btrfs(C) lttng_probe_kmem(C) lttng_probe_napi(C) lttng_probe_sched(C) lttng_probe_compaction(C) lttng_probe_power(C) lttng_probe_jbd(C) lttng_pro
be_workqueue(C) lttng_probe_net(C) lttng_ring_buffer_client_mmap_discard(C) lttng_ring_buffer_client_overwrite(C) lttng_ring_buffer_client_discard(C) lttng_ring_buffer_metadata_client(C) lttng_ring_buffer_client
_mmap_overwrite(C) lttng_tracer(C) lttng_statedump(C) lttng_ftrace(C) lttng_lib_ring_buffer(C) iptable_filter ip_tables x_tables nfsd floppy parport_pc parport igb_uio(O) uio
CPU: 3 PID: 1486 Comm: lttng-sessiond Tainted: G         C O 3.10.58-ovp-rt58-WR6.0.0.13_preempt-rt #1
Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011
task: ffff8800770146e0 ti: ffff8800787d2000 task.ti: ffff8800787d2000
RIP: 0010:[<ffffffff81705411>]  [<ffffffff81705411>] rt_spin_lock_slowlock+0x7c/0x27b
RSP: 0018:ffff8800787d39a8  EFLAGS: 00010246
RAX: ffff8800770146e0 RBX: ffff88007d0706a0 RCX: 0000000000000001
RDX: 0000000000000000 RSI: ffff8800770146e0 RDI: ffff88007d0706a0
RBP: ffff8800787d3a50 R08: ffff8800770146e0 R09: ffff88007d0706b8
R10: ffff8800770146e1 R11: 0000000000000000 R12: 0000000000000005
R13: ffff88007a27c720 R14: 0000002aee4b8100 R15: ffff88007d070000
FS:  00007f04ca5d8700(0000) GS:ffff88007fcc0000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
CR2: 000000000066b968 CR3: 00000000794f6000 CR4: 00000000000006e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
Stack:
 ffff8800787d39d0 ffffffff8107571c ffff8800770146e0 ffff880079212e98
 0000000000000000 ffff8800787d39f8 ffffffff811832ed 0000000000000000
 ffff8800787d3a00 ffffffff81073a5d 000000000000d100 0000000000000000
Call Trace:
 [<ffffffff8107571c>] ? migrate_enable+0x7c/0x200
 [<ffffffff811832ed>] ? ep_poll_callback+0x11d/0x180
 [<ffffffff81073a5d>] ? get_parent_ip+0xd/0x50
 [<ffffffff81705e61>] rt_spin_lock+0x41/0x50
 [<ffffffffa00b62f1>] lttng_statedump_start+0x101/0x8e0 [lttng_statedump]
 [<ffffffffa00bdb65>] ? lttng_metadata_printf+0x125/0x190 [lttng_tracer]
 [<ffffffffa00be50c>] lttng_session_enable+0x24c/0x560 [lttng_tracer]
 [<ffffffffa00bf40f>] lttng_session_ioctl+0x9f/0x2e0 [lttng_tracer]
 [<ffffffff815bf02e>] ? sock_recvmsg+0x7e/0xa0
 [<ffffffff81073a5d>] ? get_parent_ip+0xd/0x50
 [<ffffffff81043f16>] ? unpin_current_cpu+0x16/0x70
 [<ffffffff81075774>] ? migrate_enable+0xd4/0x200
 [<ffffffff81111954>] ? do_wp_page+0x314/0x840
 [<ffffffff811127e4>] ? handle_pte_fault+0x294/0x8f0
 [<ffffffff8109f8e9>] ? rt_up_read+0x19/0x20
 [<ffffffff810348ec>] ? __do_page_fault+0x20c/0x4d0
 [<ffffffff8106e799>] ? lg_local_unlock+0x29/0x30
 [<ffffffff8115d57e>] ? mntput_no_expire+0x3e/0x150
 [<ffffffff8115d6b6>] ? mntput+0x26/0x40
 [<ffffffff8113fff4>] ? __fput+0x144/0x250
 [<ffffffff811507d5>] do_vfs_ioctl+0x325/0x5b0
 [<ffffffff81150ae1>] SyS_ioctl+0x81/0xa0
 [<ffffffff81707299>] system_call_fastpath+0x16/0x1b

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/staging/lttng2/lttng-statedump-impl.c b/drivers/staging/lttng2/lttng-statedump-impl.c
index aecf5212054d..0d11412766cf 100644
--- a/drivers/staging/lttng2/lttng-statedump-impl.c
+++ b/drivers/staging/lttng2/lttng-statedump-impl.c
@@ -282,6 +282,9 @@ void list_interrupts(struct lttng_session *session)
 }
 #endif
 
+/*
+ * Called with task lock held.
+ */
 static
 void lttng_statedump_process_ns(struct lttng_session *session,
 		struct task_struct *p,
@@ -293,8 +296,7 @@ void lttng_statedump_process_ns(struct lttng_session *session,
 	struct nsproxy *proxy;
 	struct pid_namespace *pid_ns;
 
-	rcu_read_lock();
-	proxy = task_nsproxy(p);
+	proxy = p->nsproxy;
 	if (proxy) {
 		pid_ns = lttng_get_proxy_pid_ns(proxy);
 		do {
@@ -306,7 +308,6 @@ void lttng_statedump_process_ns(struct lttng_session *session,
 		trace_lttng_statedump_process_state(session,
 			p, type, mode, submode, status, NULL);
 	}
-	rcu_read_unlock();
 }
 
 static
-- 
2.0.1

