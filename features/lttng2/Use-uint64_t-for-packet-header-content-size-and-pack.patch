From 88e1f25de1ad2c2d3a44aaddc1fa0cbd1ad79a79 Mon Sep 17 00:00:00 2001
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date: Thu, 27 Sep 2012 20:04:02 -0400
Subject: [PATCH 31/55] Use uint64_t for packet header content size and packet
 size

commit 576ca06ac9368bd0901c6ff9cb1aad0cb36306cc lttng.org/lttng-modules.git

Allow packets larger than 256MB (4GB / 8 bits per byte).

Fixes #354

Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Signed-off-by: Paul Barrette <paul.barrette@windriver.com>
---
 drivers/staging/lttng/lttng-events.c             |    4 ++--
 drivers/staging/lttng/lttng-ring-buffer-client.h |    8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/lttng/lttng-events.c b/drivers/staging/lttng/lttng-events.c
index 168c3b2..97efe42 100644
--- a/drivers/staging/lttng/lttng-events.c
+++ b/drivers/staging/lttng/lttng-events.c
@@ -816,9 +816,9 @@ int _lttng_stream_packet_context_declare(struct lttng_session *session)
 		"struct packet_context {\n"
 		"	uint64_clock_monotonic_t timestamp_begin;\n"
 		"	uint64_clock_monotonic_t timestamp_end;\n"
+		"	uint64_t content_size;\n"
+		"	uint64_t packet_size;\n"
 		"	unsigned long events_discarded;\n"
-		"	uint32_t content_size;\n"
-		"	uint32_t packet_size;\n"
 		"	uint32_t cpu_id;\n"
 		"};\n\n"
 		);
diff --git a/drivers/staging/lttng/lttng-ring-buffer-client.h b/drivers/staging/lttng/lttng-ring-buffer-client.h
index cf2645a..47059b4 100644
--- a/drivers/staging/lttng/lttng-ring-buffer-client.h
+++ b/drivers/staging/lttng/lttng-ring-buffer-client.h
@@ -60,13 +60,13 @@ struct packet_header {
 		/* Stream packet context */
 		uint64_t timestamp_begin;	/* Cycle count at subbuffer start */
 		uint64_t timestamp_end;		/* Cycle count at subbuffer end */
+		uint64_t content_size;		/* Size of data in subbuffer */
+		uint64_t packet_size;		/* Subbuffer size (include padding) */
 		unsigned long events_discarded;	/*
 						 * Events lost in this subbuffer since
 						 * the beginning of the trace.
 						 * (may overflow)
 						 */
-		uint32_t content_size;		/* Size of data in subbuffer */
-		uint32_t packet_size;		/* Subbuffer size (include padding) */
 		uint32_t cpu_id;		/* CPU id associated with stream */
 		uint8_t header_end;		/* End of header */
 	} ctx;
@@ -349,9 +349,9 @@ static void client_buffer_begin(struct lib_ring_buffer *buf, u64 tsc,
 	header->stream_id = lttng_chan->id;
 	header->ctx.timestamp_begin = tsc;
 	header->ctx.timestamp_end = 0;
+	header->ctx.content_size = ~0ULL; /* for debugging */
+	header->ctx.packet_size = ~0ULL;
 	header->ctx.events_discarded = 0;
-	header->ctx.content_size = 0xFFFFFFFF; /* for debugging */
-	header->ctx.packet_size = 0xFFFFFFFF;
 	header->ctx.cpu_id = buf->backend.cpu;
 }
 
-- 
1.7.9.7

