From dc188230b2149c0a9fad3a880bde257d80c82604 Mon Sep 17 00:00:00 2001
From: Dave Lerner <Dave.Lerner@windriver.com>
Date: Thu, 22 Jan 2009 15:55:35 -0600
Subject: [PATCH 18/21] oprofile: Enable backtrace for non-integrated MIPS boards

Enable the mips oprofile backtrace callback and only the
backtrace callback even if the mips processor variant does not have a
oprofile performance register implementation.  In this case,
oprofile_arch_init() still returns ENODEV and the caller still
defaults to timer mode. But since the callback is enabled,
oprofile will invoke the backtrace function on every oprofile sample.

Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
---
 arch/mips/oprofile/common.c |   21 ++++++++++++++-------
 1 files changed, 14 insertions(+), 7 deletions(-)

diff --git a/arch/mips/oprofile/common.c b/arch/mips/oprofile/common.c
index 5046c81..beaad35 100644
--- a/arch/mips/oprofile/common.c
+++ b/arch/mips/oprofile/common.c
@@ -101,22 +101,29 @@ int __init oprofile_arch_init(struct oprofile_operations *ops)
 		break;
 	};
 
-	if (!lmodel)
-		return -ENODEV;
 
 	model = lmodel;
 
-	ops->create_files	= op_mips_create_files;
-	ops->setup		= op_mips_setup;
-	//ops->shutdown         = op_mips_shutdown;
-	ops->start		= op_mips_start;
-	ops->stop		= op_mips_stop;
+	/* Enable backtrace even if defaulting to timer mode */
 	ops->backtrace		= mips_backtrace;
+
 #if defined(CONFIG_64BIT)
 	/* set do_page_fault and do_ade handler callback */
 	is_oprofile_fault	= op_page_fault_filter;
 #endif
 
+	if (!lmodel) {
+		printk(KERN_WARNING
+			"oprofile: limited support for cpu type %d\n",
+			current_cpu_type());
+		return -ENODEV;
+	}
+
+	ops->create_files	= op_mips_create_files;
+	ops->setup		= op_mips_setup;
+	/* ops->shutdown         = op_mips_shutdown; */
+	ops->start		= op_mips_start;
+	ops->stop		= op_mips_stop;
 	res = lmodel->init();
 	if (res) {
 		printk(KERN_INFO "oprofile: cpu model init failed.\n");
-- 
1.6.5.2

