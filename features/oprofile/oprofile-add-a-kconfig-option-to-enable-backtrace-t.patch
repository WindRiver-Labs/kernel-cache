From 554f6902195aac448eaf5978308df22aedcfeaff Mon Sep 17 00:00:00 2001
From: Dave Lerner <Dave.Lerner@windriver.com>
Date: Mon, 1 Jun 2009 14:16:47 -0700
Subject: [PATCH] oprofile: add a kconfig option to enable backtrace through syscall

The oprofile backtrace through a system call requires additional frame
information stored on a system call stack. This patch provides users
the option of avoiding the extra instructions during the system call
and extra stack space conusmed, by providing a new config param,
CONFIG_OPROFILE_SYSCALL_TRAVERSE, that has a default value of n.

Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
---
 arch/Kconfig               |    8 ++++++++
 arch/x86/ia32/ia32entry.S  |    8 ++++----
 arch/x86/kernel/entry_64.S |    2 +-
 3 files changed, 13 insertions(+), 5 deletions(-)

diff --git a/arch/Kconfig b/arch/Kconfig
index 1d07625..9cc9150 100644
--- a/arch/Kconfig
+++ b/arch/Kconfig
@@ -16,6 +16,14 @@ config OPROFILE
 config HAVE_OPROFILE
 	def_bool n
 
+config OPROFILE_SYSCALL_TRAVERSE
+	bool "Enable OProfile unwind from kernel through syscall"
+	depends on OPROFILE
+	default n
+	help
+	  Enable OProfile unwind from kernel through syscall to user
+	  space.
+
 config KPROBES
 	bool "Kprobes"
 	depends on KALLSYMS && MODULES
diff --git a/arch/x86/ia32/ia32entry.S b/arch/x86/ia32/ia32entry.S
index 1caab64..a8405fa 100644
--- a/arch/x86/ia32/ia32entry.S
+++ b/arch/x86/ia32/ia32entry.S
@@ -25,14 +25,14 @@
 #define sysretl_audit int_ret_from_sys_call
 #endif
 
-#ifdef CONFIG_OPROFILE
+#ifdef CONFIG_OPROFILE_SYSCALL_TRAVERSE
 #define OPROF_ARGOFFSET	0
 #else
 #define OPROF_ARGOFFSET ARGOFFSET
 #endif
 
 	.macro OPROF_SAVE_REST reg, tmp, savereg=1
-#ifdef CONFIG_OPROFILE
+#ifdef CONFIG_OPROFILE_SYSCALL_TRAVERSE
 	SAVE_REST
 	movq	RBP(%rsp), \tmp
 	.if \savereg
@@ -42,7 +42,7 @@
 	.endm
 
 	.macro OPROF_RESTORE_REST tmp, restorereg=1
-#ifdef CONFIG_OPROFILE
+#ifdef CONFIG_OPROFILE_SYSCALL_TRAVERSE
 	.if \restorereg
 	movq	\tmp, RBP(%rsp)
 	.endif
@@ -528,7 +528,7 @@ ENTRY(ia32_ptregs_common)
 /*	CFI_REL_OFFSET	rflags,EFLAGS-OPROF_ARGOFFSET*/
 	CFI_REL_OFFSET	rsp,RSP-OPROF_ARGOFFSET
 /*	CFI_REL_OFFSET	ss,SS-OPROF_ARGOFFSET*/
-#ifdef CONFIG_OPROFILE
+#ifdef CONFIG_OPROFILE_SYSCALL_TRAVERSE
 	movq	%r15, RBP(%rsp)	/* SAVE_REST at syscall */
 #else
 	SAVE_REST
diff --git a/arch/x86/kernel/entry_64.S b/arch/x86/kernel/entry_64.S
index 3b7e50b..459be20 100644
--- a/arch/x86/kernel/entry_64.S
+++ b/arch/x86/kernel/entry_64.S
@@ -157,7 +157,7 @@ ENTRY(native_usergs_sysret64)
 	sysretq
 #endif /* CONFIG_PARAVIRT */
 
-#ifdef CONFIG_OPROFILE
+#ifdef CONFIG_OPROFILE_SYSCALL_TRAVERSE
 #define OPROF_ARGOFFSET		0
 #define OPROF_SAVE_REST		SAVE_REST
 #define OPROF_RESTORE_REST	RESTORE_REST
-- 
1.6.0.4

