From 0edb12a7b984f8362678e79dcc2d92696a98862d Mon Sep 17 00:00:00 2001
From: Hui Wang <Hui.Wang@windriver.com>
Date: Thu, 29 Sep 2011 17:25:48 +0800
Subject: [PATCH] ARM: oprofile: add backtrace ops for timer mode

If ARM cpu has PMU and select HW_PERF_EVENTS, the init function will
set ->backtrace pointer, otherwise it will leave it empty. That is to
say, if Oprofile is running in timer mode, it won't have backtrace
function.

In fact, backtrace function doesn't depend on PMU or HW_PERF_EVENTS,
so set ->backtrace at the beginning of init function. This will give
timer mode oprifle backtrace capability.

based on upstream commits: 58850e21 and d14dd7e2

Signed-off-by: Hui Wang <Hui.Wang@windriver.com>
---
 arch/arm/oprofile/common.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/arch/arm/oprofile/common.c b/arch/arm/oprofile/common.c
index 4f67cfa..9d5c236 100644
--- a/arch/arm/oprofile/common.c
+++ b/arch/arm/oprofile/common.c
@@ -353,6 +353,9 @@ int __init oprofile_arch_init(struct oprofile_operations *ops)
 {
 	int cpu, ret = 0;
 
+	/* provide backtrace support also in timer mode: */
+	ops->backtrace		= arm_backtrace;
+
 	memset(&perf_events, 0, sizeof(perf_events));
 
 	num_counters = perf_num_counters();
@@ -387,7 +390,6 @@ int __init oprofile_arch_init(struct oprofile_operations *ops)
 		}
 	}
 
-	ops->backtrace		= arm_backtrace;
 	ops->create_files	= op_arm_create_files;
 	ops->setup		= op_arm_setup;
 	ops->start		= op_arm_start;
@@ -431,6 +433,8 @@ void __exit oprofile_arch_exit(void)
 #else
 int __init oprofile_arch_init(struct oprofile_operations *ops)
 {
+	/* provide backtrace support also in timer mode: */
+	ops->backtrace		= arm_backtrace;
 	pr_info("oprofile: hardware counters not available\n");
 	return -ENODEV;
 }
-- 
1.7.0.4

