From 2d0bb157c5acc25557bbbc53ada9b2d533f946df Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce.ashfield@windriver.com>
Date: Mon, 2 Apr 2012 11:36:07 -0400
Subject: [PATCH] unionfs: v3.4 build fixups

Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 fs/unionfs/union.h |   27 ++++++++++++++++++++-------
 1 file changed, 20 insertions(+), 7 deletions(-)

diff --git a/fs/unionfs/union.h b/fs/unionfs/union.h
index 376ec5e..dfb7bb9 100644
--- a/fs/unionfs/union.h
+++ b/fs/unionfs/union.h
@@ -48,8 +48,6 @@
 #include <linux/splice.h>
 #include <linux/sched.h>
 
-#include <asm/system.h>
-
 #include <linux/union_fs.h>
 
 /* the file system name */
@@ -81,12 +79,7 @@ extern struct vm_operations_struct unionfs_vm_ops;
 /* How long should an entry be allowed to persist */
 #define RDCACHE_JIFFIES	(5*HZ)
 
-/* compatibility with Real-Time patches */
-#ifdef CONFIG_PREEMPT_RT_FULL
-# define unionfs_rw_semaphore	compat_rw_semaphore
-#else /* not CONFIG_PREEMPT_RT_FULL */
 # define unionfs_rw_semaphore	rw_semaphore
-#endif /* not CONFIG_PREEMPT_RT_FULL */
 
 /* file private data. */
 struct unionfs_file_info {
@@ -678,4 +671,24 @@ extern void __show_inode_counts(const struct inode *inode,
 
 #endif /* not CONFIG_UNION_FS_DEBUG */
 
+static inline void __FD_SET(unsigned long __fd, __kernel_fd_set *__fdsetp)
+{
+       __set_bit(__fd, __fdsetp->fds_bits);
+}
+
+static inline void __FD_CLR(unsigned long __fd, __kernel_fd_set *__fdsetp)
+{
+       __clear_bit(__fd, __fdsetp->fds_bits);
+}
+
+static inline int __FD_ISSET(unsigned long __fd, const __kernel_fd_set *__fdsetp)
+{
+       return test_bit(__fd, __fdsetp->fds_bits);
+}
+
+static inline void __FD_ZERO(__kernel_fd_set *__fdsetp)
+{
+       memset(__fdsetp->fds_bits, 0, sizeof __fdsetp->fds_bits);
+}
+
 #endif	/* not _UNION_H_ */
-- 
1.7.10.4

