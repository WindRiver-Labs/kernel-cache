From cc43aa8773f9298f1df5d29e129c6f41eae54878 Mon Sep 17 00:00:00 2001
From: weixing shi <Weixing.Shi@windriver.com>
Date: Wed, 14 Sep 2011 11:18:01 +0800
Subject: [PATCH] Unionfs: handle an open-unlink-ftruncate sequence

If someone calls open(), then unlink(), then ftruncate() on a file (rare,
but possible), then it's possible for unionfs to get an unlinked inode which
doesn't have an inode->i_sb and its inode->i_ino is zero.  Don't oops in
that case.

Signed-off-by: Erez Zadok <ezk@cs.sunysb.edu>
Signed-off-by: weixing shi <Weixing.Shi@windriver.com>
---
 fs/unionfs/inode.c |   13 ++++++++++++-
 1 files changed, 12 insertions(+), 1 deletions(-)

diff --git a/fs/unionfs/inode.c b/fs/unionfs/inode.c
index 062163a..f1e940d 100644
--- a/fs/unionfs/inode.c
+++ b/fs/unionfs/inode.c
@@ -895,6 +895,10 @@ static int unionfs_setattr(struct dentry *dentry, struct iattr *ia)
 	struct inode *lower_inode;
 	int bstart, bend, bindex;
 	loff_t size;
+	/* check if user has permission to change inode */
+	err = inode_change_ok(dentry->d_inode, ia);
+	if (err)
+		goto out_err;
 
 	unionfs_read_lock(dentry->d_sb, UNIONFS_SMUTEX_CHILD);
 	parent = unionfs_lock_parent(dentry, UNIONFS_DMUTEX_PARENT);
@@ -921,7 +925,13 @@ static int unionfs_setattr(struct dentry *dentry, struct iattr *ia)
 		err = -EINVAL;
 		goto out;
 	}
-	lower_inode = unionfs_lower_inode(inode);
+
+	/*
+	 * Get the lower inode directly from lower dentry, in case ibstart
+	 * is -1 (which happens when the file is open but unlinked.
+	 */
+	lower_inode = lower_dentry->d_inode;
+
 
 	/* check if user has permission to change lower inode */
 	err = inode_change_ok(lower_inode, ia);
@@ -1012,6 +1022,7 @@ out:
 	unionfs_unlock_parent(dentry, parent);
 	unionfs_read_unlock(dentry->d_sb);
 
+out_err:
 	return err;
 }
 
-- 
1.7.0.4

