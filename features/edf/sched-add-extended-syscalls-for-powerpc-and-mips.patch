From bac4c7b7339f68c756305b6c578d03d2b68a5bb4 Mon Sep 17 00:00:00 2001
From: Liming Wang <liming.wang@windriver.com>
Date: Thu, 27 May 2010 19:22:24 -0700
Subject: [PATCH 15/15] sched: add extended syscalls for powerpc and mips

add four syscalls interface for powerpc and mips
  - sys_sched_setscheduler_ex
  - sys_sched_setparam_ex
  - sys_sched_getparam_ex
  - sys_sched_wait_interval

Signed-off-by:: Liming Wang <liming.wang@windriver>
---
 arch/mips/include/asm/unistd.h    |   24 ++++++++++++++++++------
 arch/mips/kernel/scall32-o32.S    |    4 ++++
 arch/mips/kernel/scall64-64.S     |    4 ++++
 arch/mips/kernel/scall64-n32.S    |    4 ++++
 arch/mips/kernel/scall64-o32.S    |    4 ++++
 arch/powerpc/include/asm/systbl.h |    4 ++++
 arch/powerpc/include/asm/unistd.h |    6 +++++-
 7 files changed, 43 insertions(+), 7 deletions(-)

diff --git a/arch/mips/include/asm/unistd.h b/arch/mips/include/asm/unistd.h
index 1b5a664..a6725ea 100644
--- a/arch/mips/include/asm/unistd.h
+++ b/arch/mips/include/asm/unistd.h
@@ -356,16 +356,20 @@
 #define __NR_perf_event_open		(__NR_Linux + 333)
 #define __NR_accept4			(__NR_Linux + 334)
 #define __NR_recvmmsg			(__NR_Linux + 335)
+#define __NR_sched_setscheduler_ex	(__NR_Linux + 336)
+#define __NR_sched_setparam_ex		(__NR_Linux + 337)
+#define __NR_sched_getparam_ex		(__NR_Linux + 338)
+#define __NR_sched_wait_interval	(__NR_Linux + 339)
 
 /*
  * Offset of the last Linux o32 flavoured syscall
  */
-#define __NR_Linux_syscalls		335
+#define __NR_Linux_syscalls		339
 
 #endif /* _MIPS_SIM == _MIPS_SIM_ABI32 */
 
 #define __NR_O32_Linux			4000
-#define __NR_O32_Linux_syscalls		335
+#define __NR_O32_Linux_syscalls		339
 
 #if _MIPS_SIM == _MIPS_SIM_ABI64
 
@@ -668,16 +672,20 @@
 #define __NR_perf_event_open		(__NR_Linux + 292)
 #define __NR_accept4			(__NR_Linux + 293)
 #define __NR_recvmmsg			(__NR_Linux + 294)
+#define __NR_sched_setscheduler_ex	(__NR_Linux + 295)
+#define __NR_sched_setparam_ex		(__NR_Linux + 296)
+#define __NR_sched_getparam_ex		(__NR_Linux + 297)
+#define __NR_sched_wait_interval	(__NR_Linux + 298)
 
 /*
  * Offset of the last Linux 64-bit flavoured syscall
  */
-#define __NR_Linux_syscalls		294
+#define __NR_Linux_syscalls		298
 
 #endif /* _MIPS_SIM == _MIPS_SIM_ABI64 */
 
 #define __NR_64_Linux			5000
-#define __NR_64_Linux_syscalls		294
+#define __NR_64_Linux_syscalls		298
 
 #if _MIPS_SIM == _MIPS_SIM_NABI32
 
@@ -984,16 +992,20 @@
 #define __NR_perf_event_open		(__NR_Linux + 296)
 #define __NR_accept4			(__NR_Linux + 297)
 #define __NR_recvmmsg			(__NR_Linux + 298)
+#define __NR_sched_setscheduler_ex	(__NR_Linux + 299)
+#define __NR_sched_setparam_ex		(__NR_Linux + 300)
+#define __NR_sched_getparam_ex		(__NR_Linux + 301)
+#define __NR_sched_wait_interval	(__NR_Linux + 302)
 
 /*
  * Offset of the last N32 flavoured syscall
  */
-#define __NR_Linux_syscalls		298
+#define __NR_Linux_syscalls		302
 
 #endif /* _MIPS_SIM == _MIPS_SIM_NABI32 */
 
 #define __NR_N32_Linux			6000
-#define __NR_N32_Linux_syscalls		298
+#define __NR_N32_Linux_syscalls		302
 
 #ifdef __KERNEL__
 
diff --git a/arch/mips/kernel/scall32-o32.S b/arch/mips/kernel/scall32-o32.S
index 79639f8..08798b2 100644
--- a/arch/mips/kernel/scall32-o32.S
+++ b/arch/mips/kernel/scall32-o32.S
@@ -585,6 +585,10 @@ einval:	li	v0, -ENOSYS
 	sys	sys_perf_event_open	5
 	sys	sys_accept4		4
 	sys     sys_recvmmsg            5
+	sys     sys_sched_setscheduler_ex 4
+	sys     sys_sched_setparam_ex 3
+	sys     sys_sched_getparam_ex 3
+	sys     sys_sched_wait_interval 2
 	.endm
 
 	/* We pre-compute the number of _instruction_ bytes needed to
diff --git a/arch/mips/kernel/scall64-64.S b/arch/mips/kernel/scall64-64.S
index cf9582b..63c53fb 100644
--- a/arch/mips/kernel/scall64-64.S
+++ b/arch/mips/kernel/scall64-64.S
@@ -424,4 +424,8 @@ EXPORT(sys_call_table)
 	PTR	sys_perf_event_open
 	PTR	sys_accept4
 	PTR     sys_recvmmsg
+	PTR     sys_sched_setscheduler_ex
+	PTR     sys_sched_setparam_ex
+	PTR     sys_sched_getparam_ex
+	PTR     sys_sched_wait_interval
 	.size	sys_call_table,.-sys_call_table
diff --git a/arch/mips/kernel/scall64-n32.S b/arch/mips/kernel/scall64-n32.S
index 746a322..5a54bf2 100644
--- a/arch/mips/kernel/scall64-n32.S
+++ b/arch/mips/kernel/scall64-n32.S
@@ -423,4 +423,8 @@ EXPORT(sysn32_call_table)
 	PTR	sys_perf_event_open
 	PTR	sys_accept4
 	PTR     compat_sys_recvmmsg
+	PTR     sys_sched_setscheduler_ex
+	PTR     sys_sched_setparam_ex
+	PTR     sys_sched_getparam_ex
+	PTR     sys_sched_wait_interval
 	.size	sysn32_call_table,.-sysn32_call_table
diff --git a/arch/mips/kernel/scall64-o32.S b/arch/mips/kernel/scall64-o32.S
index 1201738..fa9421f 100644
--- a/arch/mips/kernel/scall64-o32.S
+++ b/arch/mips/kernel/scall64-o32.S
@@ -540,4 +540,8 @@ EXPORT(syso32_call_table)
 	PTR	sys_perf_event_open
 	PTR	sys_accept4
 	PTR     compat_sys_recvmmsg
+	PTR     sys_sched_setscheduler_ex
+	PTR     sys_sched_setparam_ex
+	PTR     sys_sched_getparam_ex
+	PTR     sys_sched_wait_interval
 	.size	sys_call_table,.-sys_call_table
diff --git a/arch/powerpc/include/asm/systbl.h b/arch/powerpc/include/asm/systbl.h
index a5ee345..958b1c6 100644
--- a/arch/powerpc/include/asm/systbl.h
+++ b/arch/powerpc/include/asm/systbl.h
@@ -326,3 +326,7 @@ SYSCALL_SPU(perf_event_open)
 COMPAT_SYS_SPU(preadv)
 COMPAT_SYS_SPU(pwritev)
 COMPAT_SYS(rt_tgsigqueueinfo)
+COMPAT_SYS_SPU(sched_setscheduler_ex)
+COMPAT_SYS_SPU(sched_setparam_ex)
+COMPAT_SYS_SPU(sched_getparam_ex)
+COMPAT_SYS_SPU(sched_wait_interval)
diff --git a/arch/powerpc/include/asm/unistd.h b/arch/powerpc/include/asm/unistd.h
index f0a1026..2d7bfd1 100644
--- a/arch/powerpc/include/asm/unistd.h
+++ b/arch/powerpc/include/asm/unistd.h
@@ -345,10 +345,14 @@
 #define __NR_preadv		320
 #define __NR_pwritev		321
 #define __NR_rt_tgsigqueueinfo	322
+#define __NR_sched_setscheduler_ex	323
+#define __NR_sched_setparam_ex		324
+#define __NR_sched_getparam_ex		325
+#define __NR_sched_wait_interval	326
 
 #ifdef __KERNEL__
 
-#define __NR_syscalls		323
+#define __NR_syscalls		327
 
 #define __NR__exit __NR_exit
 #define NR_syscalls	__NR_syscalls
-- 
1.6.5.2

