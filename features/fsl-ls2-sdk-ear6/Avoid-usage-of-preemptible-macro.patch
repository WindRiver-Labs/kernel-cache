From 54b8d12b163cf32e37991a76eb69a06ec22ca55b Mon Sep 17 00:00:00 2001
From: Itai Katz <itai.katz@freescale.com>
Date: Thu, 23 Jul 2015 11:18:44 +0300
Subject: [PATCH 098/452] Avoid usage of preemptible() macro

The macro preemptible() was used in mc-sys.c to decide if
mc_send_command may sleep while waiting for MC command to complete.
Usage of this macro is not safe and thus another approach is taken.
Following the change, the decision to sleep or not is based on
the value of atomic flag in mc_io so it is caller's responssibility
to use the right portal.

Signed-off-by: Itai Katz <itai.katz@freescale.com>
[Xulin: Original patch taken from FSL LS2085 SDK EAR6.0,
LS2085A-SDK-SOURCE-20160304-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl-mc/bus/mc-sys.c |    5 +----
 1 files changed, 1 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/mc-sys.c b/drivers/staging/fsl-mc/bus/mc-sys.c
index df40b55..640b3f6 100644
--- a/drivers/staging/fsl-mc/bus/mc-sys.c
+++ b/drivers/staging/fsl-mc/bus/mc-sys.c
@@ -648,9 +648,6 @@ static int mc_completion_wait(struct fsl_mc_io *mc_io, struct mc_command *cmd,
 	if (WARN_ON(mc_io->flags & FSL_MC_IO_ATOMIC_CONTEXT_PORTAL))
 		return -EINVAL;
 
-	if (WARN_ON(!preemptible()))
-		return -EINVAL;
-
 	for (;;) {
 		status = mc_read_response(mc_io->portal_virt_addr, cmd);
 		if (status != MC_CMD_STATUS_READY)
@@ -768,7 +765,7 @@ int mc_send_command(struct fsl_mc_io *mc_io, struct mc_command *cmd)
 	 */
 	if (mc_io->mc_command_done_irq_armed && !dpmcp_completion_intr_disabled)
 		error = mc_completion_wait(mc_io, cmd, &status);
-	else if (preemptible())
+	else if (!(mc_io->flags & FSL_MC_IO_ATOMIC_CONTEXT_PORTAL))
 		error = mc_polling_wait_preemptible(mc_io, cmd, &status);
 	else
 		error = mc_polling_wait_atomic(mc_io, cmd, &status);
-- 
1.7.5.4

