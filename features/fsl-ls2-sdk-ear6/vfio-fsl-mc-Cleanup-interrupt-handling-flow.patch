From bb14c50630d73d70b4594552ee0c4b26eaeb71e4 Mon Sep 17 00:00:00 2001
From: Bharat Bhushan <Bharat.Bhushan@freescale.com>
Date: Thu, 26 Nov 2015 21:04:27 +0530
Subject: [PATCH 345/452] vfio fsl-mc: Cleanup interrupt handling flow

This will make the interrupt delivery flow faster.

Signed-off-by: Bharat Bhushan <Bharat.Bhushan@freescale.com>
[Xulin: Original patch taken from FSL LS2085 SDK EAR6.0,
LS2085A-SDK-SOURCE-20160304-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/vfio/fsl-mc/vfio_fsl_mc_intr.c    |   27 ++++++---------------------
 drivers/vfio/fsl-mc/vfio_fsl_mc_private.h |    1 -
 2 files changed, 6 insertions(+), 22 deletions(-)

diff --git a/drivers/vfio/fsl-mc/vfio_fsl_mc_intr.c b/drivers/vfio/fsl-mc/vfio_fsl_mc_intr.c
index d430cd7..c802d29 100644
--- a/drivers/vfio/fsl-mc/vfio_fsl_mc_intr.c
+++ b/drivers/vfio/fsl-mc/vfio_fsl_mc_intr.c
@@ -297,23 +297,9 @@ static int vfio_fsl_mc_disable_irq(struct fsl_mc_device *mc_dev, int irq_num)
 
 static irqreturn_t vfio_fsl_mc_irq_handler(int irq_num, void *arg)
 {
-	struct vfio_fsl_mc_device *vdev;
-	int i;
-	int hw_irq_num;
-	struct eventfd_ctx *trigger;
-
-	vdev = (struct vfio_fsl_mc_device *)arg;
-	for (i = 0; i < vdev->mc_dev->obj_desc.irq_count; i++) {
-		hw_irq_num = vdev->mc_irqs[i].hw_irq_num;
-		if (irq_num == hw_irq_num) {
-			trigger = vdev->mc_irqs[i].trigger;
-			if (trigger) {
-				eventfd_signal(trigger, 1);
-				break;
-			}
-		}
-	}
+	struct vfio_fsl_mc_irq *mc_irq = (struct vfio_fsl_mc_irq *)arg;
 
+	eventfd_signal(mc_irq->trigger, 1);
 	return IRQ_HANDLED;
 }
 
@@ -336,7 +322,7 @@ int vfio_fsl_mc_configure_irq(struct vfio_fsl_mc_device *vdev,
 				 dev_name(dev), irq->irq_number);
 
 	error = request_irq(irq->irq_number, vfio_fsl_mc_irq_handler,
-			    0, mc_irq->name, vdev);
+			    0, mc_irq->name, mc_irq);
 	if (error < 0) {
 		dev_err(&mc_dev->dev,
 			"IRQ registration fails with error: %d\n", error);
@@ -344,7 +330,6 @@ int vfio_fsl_mc_configure_irq(struct vfio_fsl_mc_device *vdev,
 		return error;
 	}
 
-	mc_irq->hw_irq_num = mc_dev->irqs[irq_index]->irq_number;
 	mc_irq->irq_configured = true;
 	return 0;
 }
@@ -352,14 +337,14 @@ int vfio_fsl_mc_configure_irq(struct vfio_fsl_mc_device *vdev,
 static void vfio_fsl_mc_unconfigure_irq(struct vfio_fsl_mc_device *vdev,
 				       int irq_index)
 {
-	struct fsl_mc_device *mc_dev = vdev->mc_dev;
-	struct fsl_mc_device_irq *irq = mc_dev->irqs[irq_index];
+	struct fsl_mc_device_irq *irq = vdev->mc_dev->irqs[irq_index];
+	struct vfio_fsl_mc_irq *mc_irq = &vdev->mc_irqs[irq_index];
 
 	if (!vdev->mc_irqs[irq_index].irq_configured)
 		return;
 
+	free_irq(irq->irq_number, mc_irq);
 	kfree(vdev->mc_irqs[irq_index].name);
-	free_irq(irq->irq_number, vdev);
 	vdev->mc_irqs[irq_index].irq_configured = false;
 }
 
diff --git a/drivers/vfio/fsl-mc/vfio_fsl_mc_private.h b/drivers/vfio/fsl-mc/vfio_fsl_mc_private.h
index 001467f..8980536 100644
--- a/drivers/vfio/fsl-mc/vfio_fsl_mc_private.h
+++ b/drivers/vfio/fsl-mc/vfio_fsl_mc_private.h
@@ -16,7 +16,6 @@
 
 struct vfio_fsl_mc_irq {
 	struct eventfd_ctx	*trigger;
-	unsigned int		hw_irq_num;
 	u32			flags;
 	u32			count;
 	char			*name;
-- 
1.7.5.4

