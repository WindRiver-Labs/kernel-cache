From dc80fc5f1d8c6c4c5527f299e6c9c58c7e0ff3e5 Mon Sep 17 00:00:00 2001
From: Roy Pledge <Roy.Pledge@freescale.com>
Date: Fri, 24 Jul 2015 16:12:27 -0400
Subject: [PATCH 135/452] fsl_dpio: Fix DPIO polling thread logic

Fix the logic for the DPIO polling logic and ensure the thread
is not parked

Signed-off-by: Roy Pledge <Roy.Pledge@freescale.com>
[Stuart: fixed typo in comment]
Signed-off-by: Stuart Yoder <stuart.yoder@freescale.com>
[Xulin: Original patch taken from FSL LS2085 SDK EAR6.0,
LS2085A-SDK-SOURCE-20160304-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl-mc/bus/dpio/dpio-drv.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c b/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
index 1b9e181..dbf1a45 100644
--- a/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
+++ b/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
@@ -208,7 +208,9 @@ ldpaa_dpio_probe(struct fsl_mc_device *ls_dev)
 	desc.will_poll = 1;
 	desc.has_8prio = dpio_attrs.num_priorities == 8 ? 1 : 0;
 	desc.cpu = next_cpu;
-	desc.stash_affinity = next_cpu;
+	desc.stash_affinity = 1; /* TODO: Figure out how to determine
+				    this setting - will we ever have non-affine
+				    portals where we stash to a platform cache? */
 	next_cpu = (next_cpu + 1) % num_active_cpus();
 	desc.dpio_id = ls_dev->obj_desc.id;
 	desc.regs_cena = ioremap_cache_ns(ls_dev->regions[0].start,
@@ -264,6 +266,7 @@ ldpaa_dpio_probe(struct fsl_mc_device *ls_dev)
 			err = PTR_ERR(priv->thread);
 			goto err_dpaa_thread;
 		}
+		kthread_unpark(priv->thread);
 		wake_up_process(priv->thread);
 	}
 
-- 
1.7.5.4

