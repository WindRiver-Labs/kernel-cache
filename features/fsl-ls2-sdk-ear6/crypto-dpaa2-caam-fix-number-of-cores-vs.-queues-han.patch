From 3245572891ca9896e213250692d1beca92c6d461 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@freescale.com>
Date: Tue, 24 Nov 2015 16:43:43 +0200
Subject: [PATCH 341/452] crypto: dpaa2-caam - fix number of cores vs. queues
 handling
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Part of the initialization is checking only number of available cores,
incorrectly disregarding the number of DPSECI queues.

Note: current patch does not address the following assumption
num_rx_queues = num_tx_queues
For now, this is safe since it's the only configuration
allowed by MC fw.

Signed-off-by: Horia GeantÄƒ <horia.geanta@freescale.com>
[Xulin: Original patch taken from FSL LS2085 SDK EAR6.0,
LS2085A-SDK-SOURCE-20160304-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/crypto/dpaa2-caam/dpaa2-caam.c |   13 +++++++++++--
 1 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/crypto/dpaa2-caam/dpaa2-caam.c b/drivers/crypto/dpaa2-caam/dpaa2-caam.c
index 3a24677..cdbbef6 100644
--- a/drivers/crypto/dpaa2-caam/dpaa2-caam.c
+++ b/drivers/crypto/dpaa2-caam/dpaa2-caam.c
@@ -4759,7 +4759,7 @@ static int __cold dpaa2_dpseci_dpio_setup(struct dpaa2_caam_priv *priv)
 	struct device *dev = priv->dev;
 	struct dpaa2_io_notification_ctx *nctx;
 	struct dpaa2_caam_priv_per_cpu *ppriv;
-	int err, i;
+	int err, i, j = 0;
 
 	for_each_online_cpu(i) {
 		ppriv = per_cpu_ptr(priv->ppriv, i);
@@ -4784,6 +4784,10 @@ static int __cold dpaa2_dpseci_dpio_setup(struct dpaa2_caam_priv *priv)
 			dev_err(dev, "dpaa2_io_store_create() failed\n");
 			goto err;
 		}
+
+		j++;
+		if (j == priv->dpseci_attr.num_rx_queues)
+			break;
 	}
 
 	return 0;
@@ -4809,12 +4813,16 @@ err:
 static void __cold dpaa2_dpseci_dpio_free(struct dpaa2_caam_priv *priv)
 {
 	struct dpaa2_caam_priv_per_cpu *ppriv;
-	int i;
+	int i, j = 0;
 
 	for_each_online_cpu(i) {
 		ppriv = per_cpu_ptr(priv->ppriv, i);
 		dpaa2_io_service_deregister(NULL, &ppriv->nctx);
 		dpaa2_io_store_destroy(ppriv->store);
+
+		j++;
+		if (j == priv->dpseci_attr.num_rx_queues)
+			return;
 	}
 }
 
@@ -4886,6 +4894,7 @@ static void dpaa2_caam_process_fd(struct dpaa2_caam_priv *priv,
 	if (err) {
 		dev_err(priv->dev, "FD[FRC] err = %x\n", err);
 		caam_jr_strstatus(priv->dev, err);
+		return;
 	}
 
 	req = phys_to_virt(dma_to_phys(priv->dev, dpaa2_fd_get_addr(fd)));
-- 
1.7.5.4

