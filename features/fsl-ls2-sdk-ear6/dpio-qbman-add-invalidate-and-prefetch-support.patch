From afad7cf89529ab110b5d3a26a9d196912c1b97e1 Mon Sep 17 00:00:00 2001
From: Haiying Wang <Haiying.Wang@freescale.com>
Date: Fri, 1 May 2015 13:42:06 -0400
Subject: [PATCH 120/452] dpio/qbman: add invalidate and prefetch support

for cachable memory access.
Also remove the redundant memory barriers.

Signed-off-by: Haiying Wang <Haiying.Wang@freescale.com>
Change-Id: I452a768278d1c5ef37e5741e9b011d725cb57b30
Reviewed-on: http://git.am.freescale.net:8181/35873
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Roy Pledge <roy.pledge@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
[Xulin: Original patch taken from FSL LS2085 SDK EAR6.0,
LS2085A-SDK-SOURCE-20160304-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl-mc/bus/dpio/qbman_portal.c   |    7 ++-----
 drivers/staging/fsl-mc/bus/dpio/qbman_sys.h      |    2 ++
 drivers/staging/fsl-mc/bus/dpio/qbman_sys_decl.h |    9 +++++++++
 3 files changed, 13 insertions(+), 5 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/dpio/qbman_portal.c b/drivers/staging/fsl-mc/bus/dpio/qbman_portal.c
index e8de627..227a485 100644
--- a/drivers/staging/fsl-mc/bus/dpio/qbman_portal.c
+++ b/drivers/staging/fsl-mc/bus/dpio/qbman_portal.c
@@ -232,7 +232,6 @@ void qbman_swp_mc_submit(struct qbman_swp *p, void *cmd, uint32_t cmd_verb)
 #ifdef QBMAN_CHECKING
 	BUG_ON(!p->mc.check != swp_mc_can_submit);
 #endif
-	lwsync();
 	/* TBD: "|=" is going to hurt performance. Need to move as many fields
 	 * out of word zero, and for those that remain, the "OR" needs to occur
 	 * at the caller side. This debug check helps to catch cases where the
@@ -240,7 +239,6 @@ void qbman_swp_mc_submit(struct qbman_swp *p, void *cmd, uint32_t cmd_verb)
 	BUG_ON((*v & cmd_verb) != *v);
 	*v = cmd_verb | p->mc.valid_bit;
 	qbman_cena_write_complete(&p->sys, QBMAN_CENA_SWP_CR, cmd);
-	/* TODO: add prefetch support for GPP */
 #ifdef QBMAN_CHECKING
 	p->mc.check = swp_mc_can_poll;
 #endif
@@ -252,6 +250,8 @@ void *qbman_swp_mc_result(struct qbman_swp *p)
 #ifdef QBMAN_CHECKING
 	BUG_ON(p->mc.check != swp_mc_can_poll);
 #endif
+	qbman_cena_invalidate_prefetch(&p->sys,
+				 QBMAN_CENA_SWP_RR(p->mc.valid_bit));
 	ret = qbman_cena_read(&p->sys, QBMAN_CENA_SWP_RR(p->mc.valid_bit));
 	/* Remove the valid-bit - command completed iff the rest is non-zero */
 	verb = ret[0] & ~QB_VALID_BIT;
@@ -425,7 +425,6 @@ int qbman_swp_enqueue(struct qbman_swp *s, const struct qbman_eq_desc *d,
 				   QBMAN_CENA_SWP_EQCR(EQAR_IDX(eqar)));
 	word_copy(&p[1], &cl[1], 7);
 	word_copy(&p[8], fd, sizeof(*fd) >> 2);
-	lwsync();
 	/* Set the verb byte, have to substitute in the valid-bit */
 	p[0] = cl[0] | EQAR_VB(eqar);
 	qbman_cena_write_complete(&s->sys,
@@ -557,7 +556,6 @@ int qbman_swp_pull(struct qbman_swp *s, struct qbman_pull_desc *d)
 	qb_attr_code_encode(&code_pull_token, cl, 1);
 	p = qbman_cena_write_start(&s->sys, QBMAN_CENA_SWP_VDQCR);
 	word_copy(&p[1], &cl[1], 3);
-	lwsync();
 	/* Set the verb byte, have to substitute in the valid-bit */
 	p[0] = cl[0] | s->vdq.valid_bit;
 	s->vdq.valid_bit ^= QB_VALID_BIT;
@@ -1019,7 +1017,6 @@ int qbman_swp_release(struct qbman_swp *s, const struct qbman_release_desc *d,
 				   QBMAN_CENA_SWP_RCR(RAR_IDX(rar)));
 	/* Copy the caller's buffer pointers to the command */
 	u64_to_le32_copy(&p[2], buffers, num_buffers);
-	lwsync();
 	/* Set the verb byte, have to substitute in the valid-bit and the number
 	 * of buffers. */
 	p[0] = cl[0] | RAR_VB(rar) | num_buffers;
diff --git a/drivers/staging/fsl-mc/bus/dpio/qbman_sys.h b/drivers/staging/fsl-mc/bus/dpio/qbman_sys.h
index f634f80..48ecdd2 100644
--- a/drivers/staging/fsl-mc/bus/dpio/qbman_sys.h
+++ b/drivers/staging/fsl-mc/bus/dpio/qbman_sys.h
@@ -226,6 +226,8 @@ static inline void *qbman_cena_read(struct qbman_swp_sys *s, uint32_t offset)
 static inline void qbman_cena_invalidate_prefetch(struct qbman_swp_sys *s,
 						  uint32_t offset)
 {
+	dcivac(s->addr_cena + offset);
+	prefetch_for_load(s->addr_cena + offset);
 }
 
 	/******************/
diff --git a/drivers/staging/fsl-mc/bus/dpio/qbman_sys_decl.h b/drivers/staging/fsl-mc/bus/dpio/qbman_sys_decl.h
index de1f0c4..5b3a224 100644
--- a/drivers/staging/fsl-mc/bus/dpio/qbman_sys_decl.h
+++ b/drivers/staging/fsl-mc/bus/dpio/qbman_sys_decl.h
@@ -75,3 +75,12 @@
 #define dcbz(p) { asm volatile("dc zva, %0" : : "r" (p) : "memory"); }
 #define lwsync() { asm volatile("dmb st" : : : "memory"); }
 #define dcbf(p) { asm volatile("dc cvac, %0;" : : "r" (p) : "memory"); }
+#define dcivac(p) { asm volatile("dc ivac, %0" : : "r"(p) : "memory"); }
+static inline void prefetch_for_load(void *p)
+{
+	asm volatile("prfm pldl1keep, [%0, #64]" : : "r" (p));
+}
+static inline void prefetch_for_store(void *p)
+{
+	asm volatile("prfm pstl1keep, [%0, #64]" : : "r" (p));
+}
-- 
1.7.5.4

