From a3926136e3680c10cb0dba191d248329d4713d8e Mon Sep 17 00:00:00 2001
From: Gregory Haskins <ghaskins@novell.com>
Date: Fri, 2 Oct 2009 17:01:09 -0400
Subject: [PATCH 115/119] KVM: synchronize xinterface with version submitted to upstream

Signed-off-by: Gregory Haskins <ghaskins@novell.com>
---
 virt/kvm/xinterface.c |   19 ++++++++++---------
 1 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/virt/kvm/xinterface.c b/virt/kvm/xinterface.c
index 6312d01..16729f6 100644
--- a/virt/kvm/xinterface.c
+++ b/virt/kvm/xinterface.c
@@ -1,11 +1,6 @@
 /*
  * KVM module interface - Allows external modules to interface with a guest
  *
- * This code is designed to be statically linked to the kernel, regardless
- * of the configuration of kvm.ko.  This allows the kvm_xinterface_find
- * routine to be stably exported without dependencies on, or race conditions
- * against acquiring the kvm.ko module itself.
- *
  * Copyright 2009 Novell.  All Rights Reserved.
  *
  * Author:
@@ -66,7 +61,16 @@ to_intf(struct kvm_xinterface *intf)
 #define _gfn_to_hva(gfn, memslot) \
 	(memslot->userspace_addr + (gfn - memslot->base_gfn) * PAGE_SIZE)
 
-/* assumes slots_lock held for read */
+/*
+ * gpa_to_hva() - translate a guest-physical to host-virtual using
+ * a per-cpu cache of the memslot.
+ *
+ * The gfn_to_memslot() call is relatively expensive, and the gpa access
+ * patterns exhibit a high degree of locality.  Therefore, lets cache
+ * the last slot used on a per-cpu basis to optimize the lookup
+ *
+ * assumes slots_lock held for read
+ */
 static unsigned long
 gpa_to_hva(struct _xinterface *_intf, unsigned long gpa)
 {
@@ -79,9 +83,6 @@ gpa_to_hva(struct _xinterface *_intf, unsigned long gpa)
 	    || gfn < memslot->base_gfn
 	    || gfn >= memslot->base_gfn + memslot->npages) {
 
-		if (memslot)
-			_intf->slotcache[cpu] = NULL;
-
 		memslot = gfn_to_memslot(_intf->kvm, gfn);
 		if (!memslot)
 			goto out;
-- 
1.6.5.2

