From d6ccd53ff6ae897918769b7a2202cb08185071fa Mon Sep 17 00:00:00 2001
From: Ira W. Snyder <iws@ovro.caltech.edu>
Date: Mon, 7 Dec 2009 23:20:38 -0500
Subject: [PATCH 103/119] vbus: macvlan: fix sparse warnings

Most of the warnings fixed are missing static declarations, but one of them
is a lock imbalance. I fixed it in the most naive way possible, but it
looks correct.

Signed-off-by: Ira W. Snyder <iws@ovro.caltech.edu>
Signed-off-by: Gregory Haskins <ghaskins@novell.com>
---
 kernel/vbus/devices/venet/macvlan.c |   17 ++++++++++-------
 1 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/kernel/vbus/devices/venet/macvlan.c b/kernel/vbus/devices/venet/macvlan.c
index 60479a6..8d5800a 100644
--- a/kernel/vbus/devices/venet/macvlan.c
+++ b/kernel/vbus/devices/venet/macvlan.c
@@ -90,7 +90,7 @@ struct venetmacv *vbusdev_to_macv(struct vbus_device *vdev)
 	return container_of(vdev, struct venetmacv, dev.vbus.dev);
 }
 
-int
+static int
 venetmacv_tx(struct sk_buff *skb, struct net_device *dev)
 {
 	struct venetmacv *priv = netdev_priv(dev);
@@ -156,7 +156,7 @@ venetmacv_vlink_down(struct venetdev *vdev)
 	}
 }
 
-int
+static int
 venetmacv_vlink_call(struct vbus_connection *conn,
 					 unsigned long func,
 					 void *data,
@@ -227,12 +227,15 @@ venetmacv_intf_connect(struct vbus_device_interface *intf,
 
 	vbus_memctx_get(ctx);
 
-	if (!macv->mdev.lowerdev)
+	if (!macv->mdev.lowerdev) {
+		spin_unlock_irqrestore(&macv->dev.lock, flags);
 		return -ENXIO;
+	}
 
 	ret = macvlan_link_lowerdev(macv->mdev.dev, macv->mdev.lowerdev);
 
 	if (ret) {
+		spin_unlock_irqrestore(&macv->dev.lock, flags);
 		printk(KERN_ERR "macvlan_link_lowerdev: failed\n");
 		return -ENXIO;
 	}
@@ -384,7 +387,7 @@ ll_ifname_show(struct vbus_device *dev, struct vbus_device_attribute *attr,
 static struct vbus_device_attribute attr_ll_ifname =
 __ATTR(ll_ifname, S_IRUGO | S_IWUSR, ll_ifname_show, ll_ifname_store);
 
-ssize_t
+static ssize_t
 clientmac_store(struct vbus_device *dev, struct vbus_device_attribute *attr,
 		const char *buf, size_t count)
 {
@@ -524,21 +527,21 @@ static int venetmacv_set_mac_address(struct net_device *dev, void *p)
 	return ret;
 }
 
-int venetmacv_change_mtu(struct net_device *dev, int new_mtu)
+static int venetmacv_change_mtu(struct net_device *dev, int new_mtu)
 {
 	struct venetmacv *priv = netdev_priv(dev);
 
 	return priv->macvlan_netdev_ops->ndo_change_mtu(dev, new_mtu);
 }
 
-void venetmacv_change_rx_flags(struct net_device *dev, int change)
+static void venetmacv_change_rx_flags(struct net_device *dev, int change)
 {
 	struct venetmacv *priv = netdev_priv(dev);
 
 	priv->macvlan_netdev_ops->ndo_change_rx_flags(dev, change);
 }
 
-void venetmacv_set_multicast_list(struct net_device *dev)
+static void venetmacv_set_multicast_list(struct net_device *dev)
 {
 	struct venetmacv *priv = netdev_priv(dev);
 
-- 
1.6.5.2

