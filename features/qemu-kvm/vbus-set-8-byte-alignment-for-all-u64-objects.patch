From a34bd869044769a2a09098078f7ac522dde08f4b Mon Sep 17 00:00:00 2001
From: Gregory Haskins <ghaskins@novell.com>
Date: Wed, 3 Feb 2010 09:30:48 -0500
Subject: [PATCH 109/119] vbus: set 8-byte alignment for all u64 objects

Signed-off-by: Gregory Haskins <ghaskins@novell.com>
---
 include/linux/ioq.h      |    6 +++---
 include/linux/vbus_pci.h |   24 ++++++++++++------------
 include/linux/venet.h    |    8 ++++----
 3 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/include/linux/ioq.h b/include/linux/ioq.h
index 5bc277e..b66d7fe 100644
--- a/include/linux/ioq.h
+++ b/include/linux/ioq.h
@@ -51,9 +51,9 @@
  *-----------
  */
 struct ioq_ring_desc {
-	__u64                 cookie; /* for arbitrary use by north-side */
-	__le64                ptr;
-	__le64                len;
+	aligned_u64           cookie; /* for arbitrary use by north-side */
+	aligned_le64          ptr;
+	aligned_le64          len;
 	__u8                  valid;
 	__u8                  sown; /* South owned = 1, North owned = 0 */
 };
diff --git a/include/linux/vbus_pci.h b/include/linux/vbus_pci.h
index fe33759..fa160a6 100644
--- a/include/linux/vbus_pci.h
+++ b/include/linux/vbus_pci.h
@@ -52,40 +52,40 @@ enum {
 struct vbus_pci_bridge_negotiate {
 	__u32 magic;
 	__u32 version;
-	__u64 capabilities;
+	aligned_u64 capabilities;
 };
 
 struct vbus_pci_deviceopen {
 	__u32 devid;
 	__u32 version; /* device ABI version */
-	__u64 handle; /* return value for devh */
+	aligned_u64 handle; /* return value for devh */
 };
 
 struct vbus_pci_devicecall {
-	__u64 devh;   /* device-handle (returned from DEVICEOPEN */
+	aligned_u64 devh;   /* device-handle (returned from DEVICEOPEN */
 	__u32 func;
 	__u32 len;
 	__u32 flags;
-	__u64 datap;
+	aligned_u64 datap;
 };
 
 struct vbus_pci_deviceshm {
-	__u64 devh;   /* device-handle (returned from DEVICEOPEN */
+	aligned_u64 devh;   /* device-handle (returned from DEVICEOPEN */
 	__u32 id;
 	__u32 len;
 	__u32 flags;
 	struct {
 		__u32 offset;
 		__u32 prio;
-		__u64 cookie; /* token to pass back when signaling client */
+		aligned_u64 cookie; /* token to pass back when signaling client */
 	} signal;
-	__u64 datap;
+	aligned_u64 datap;
 };
 
 struct vbus_pci_call_desc {
 	__u32 vector;
 	__u32 len;
-	__u64 datap;
+	aligned_u64 datap;
 };
 
 struct vbus_pci_fastcall_desc {
@@ -107,8 +107,8 @@ struct vbus_pci_signals {
 
 struct vbus_pci_eventqreg {
 	__u32 count;
-	__u64 ring;
-	__u64 data;
+	aligned_u64 ring;
+	aligned_u64 data;
 };
 
 struct vbus_pci_busreg {
@@ -126,12 +126,12 @@ enum vbus_pci_eventid {
 #define VBUS_MAX_DEVTYPE_LEN 128
 
 struct vbus_pci_add_event {
-	__u64 id;
+	aligned_u64 id;
 	char  type[VBUS_MAX_DEVTYPE_LEN];
 };
 
 struct vbus_pci_handle_event {
-	__u64 handle;
+	aligned_u64 handle;
 };
 
 struct vbus_pci_event {
diff --git a/include/linux/venet.h b/include/linux/venet.h
index b571280..9a90fe7 100644
--- a/include/linux/venet.h
+++ b/include/linux/venet.h
@@ -55,8 +55,8 @@ struct venet_capabilities {
 #define VENET_CAP_EVQ_TXC        (1 << 1) /* tx-complete */
 
 struct venet_iov {
-	__u32 len;
-	__u64 ptr;
+	__u32       len;
+	aligned_u64 ptr;
 };
 
 #define VENET_SG_FLAG_NEEDS_CSUM (1 << 0)
@@ -64,7 +64,7 @@ struct venet_iov {
 #define VENET_SG_FLAG_ECN        (1 << 2)
 
 struct venet_sg {
-	__u64            cookie;
+	aligned_u64      cookie;
 	__u32            flags;
 	__u32            len;     /* total length of all iovs */
 	struct {
@@ -114,7 +114,7 @@ struct venet_event_linkstate {
 struct venet_event_txc {
 	struct venet_event_header header;
 	__u32                     txqid;
-	__u64                     cookie;
+	aligned_u64               cookie;
 };
 
 struct venet_l4ro_query {
-- 
1.6.5.2

