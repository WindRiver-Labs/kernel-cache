From 8a0404d686fde8398f373804b4564eee7957f29c Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Thu, 27 May 2010 14:31:34 +0800
Subject: [PATCH 119/119] bracket vbus codes with CONFIG_VBUS

Bracket vbus codes with CONFIG_VBUS for compiling issues,
or explicit coding style.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 arch/x86/kvm/Makefile    |    3 ++-
 fs/eventfd.c             |    2 ++
 include/linux/kvm_host.h |    2 ++
 include/linux/skbuff.h   |    2 ++
 kernel/fork.c            |    2 ++
 net/core/skbuff.c        |    8 ++++++++
 virt/kvm/kvm_main.c      |    4 ++++
 7 files changed, 22 insertions(+), 1 deletions(-)

diff --git a/arch/x86/kvm/Makefile b/arch/x86/kvm/Makefile
index 0449d6e..3df4d6f 100644
--- a/arch/x86/kvm/Makefile
+++ b/arch/x86/kvm/Makefile
@@ -7,7 +7,8 @@ CFLAGS_vmx.o := -I.
 
 kvm-y			+= $(addprefix ../../../virt/kvm/, kvm_main.o ioapic.o \
 				coalesced_mmio.o irq_comm.o eventfd.o \
-				assigned-dev.o xinterface.o)
+				assigned-dev.o)
+kvm-$(CONFIG_VBUS)	+= $(addprefix ../../../virt/kvm/, xinterface.o)
 kvm-$(CONFIG_IOMMU_API)	+= $(addprefix ../../../virt/kvm/, iommu.o)
 
 kvm-y			+= x86.o mmu.o emulate.o i8259.o irq.o lapic.o \
diff --git a/fs/eventfd.c b/fs/eventfd.c
index 1f517e2..56a30df 100644
--- a/fs/eventfd.c
+++ b/fs/eventfd.c
@@ -405,7 +405,9 @@ struct file *eventfd_file_create(unsigned int count, int flags)
 
 	return file;
 }
+#ifdef CONFIG_VBUS
 EXPORT_SYMBOL_GPL(eventfd_file_create);
+#endif
 
 SYSCALL_DEFINE2(eventfd2, unsigned int, count, int, flags)
 {
diff --git a/include/linux/kvm_host.h b/include/linux/kvm_host.h
index 3183e6d..78aba75 100644
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@ -387,8 +387,10 @@ void kvm_arch_sync_events(struct kvm *kvm);
 int kvm_cpu_has_pending_timer(struct kvm_vcpu *vcpu);
 void kvm_vcpu_kick(struct kvm_vcpu *vcpu);
 
+#ifdef CONFIG_VBUS
 struct kvm_xinterface *
 kvm_xinterface_alloc(struct kvm *kvm, struct module *owner);
+#endif
 
 int kvm_is_mmio_pfn(pfn_t pfn);
 
diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 518d46d..b09b2b9 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -201,8 +201,10 @@ struct skb_shared_info {
 	/* Intermediate layers must ensure that destructor_arg
 	 * remains valid until skb destructor */
 	void *		destructor_arg;
+#ifdef CONFIG_VBUS
 	void *          priv;
 	void           (*release)(struct sk_buff *skb);
+#endif
 };
 
 /* We divide dataref into two halves.  The higher 16 bits hold references
diff --git a/kernel/fork.c b/kernel/fork.c
index 15e81ed..d816595 100644
--- a/kernel/fork.c
+++ b/kernel/fork.c
@@ -179,7 +179,9 @@ void __put_task_struct(struct task_struct *tsk)
 	if (!profile_handoff_task(tsk))
 		free_task(tsk);
 }
+#ifdef CONFIG_VBUS
 EXPORT_SYMBOL_GPL(__put_task_struct);
+#endif
 
 /*
  * macro override instead of weak attribute alias, to workaround
diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 01cf26a..5c73c0c 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -219,7 +219,9 @@ struct sk_buff *__alloc_skb(unsigned int size, gfp_t gfp_mask,
 	shinfo->tx_flags.flags = 0;
 	skb_frag_list_init(skb);
 	memset(&shinfo->hwtstamps, 0, sizeof(shinfo->hwtstamps));
+#ifdef CONFIG_VBUS
 	shinfo->release = NULL;
+#endif
 
 	if (fclone) {
 		struct sk_buff *child = skb + 1;
@@ -351,12 +353,14 @@ static void skb_release_data(struct sk_buff *skb)
 		if (skb_has_frags(skb))
 			skb_drop_fraglist(skb);
 
+#ifdef CONFIG_VBUS
 		if (skb_shinfo(skb)->release) {
 			skb_shinfo(skb)->release(skb);
 
 			skb_shinfo(skb)->release = NULL;
 			skb_shinfo(skb)->priv = NULL;
 		}
+#endif
 
 		kfree(skb->head);
 	}
@@ -525,8 +529,10 @@ int skb_recycle_check(struct sk_buff *skb, int skb_size)
 	shinfo->tx_flags.flags = 0;
 	skb_frag_list_init(skb);
 	memset(&shinfo->hwtstamps, 0, sizeof(shinfo->hwtstamps));
+#ifdef CONFIG_VBUS
 	shinfo->release = NULL;
 	shinfo->priv = NULL;
+#endif
 
 	memset(skb, 0, offsetof(struct sk_buff, tail));
 	skb->data = skb->head + NET_SKB_PAD;
@@ -869,7 +875,9 @@ int pskb_expand_head(struct sk_buff *skb, int nhead, int ntail,
 	skb->hdr_len  = 0;
 	skb->nohdr    = 0;
 	atomic_set(&skb_shinfo(skb)->dataref, 1);
+#ifdef CONFIG_VBUS
 	skb_shinfo(skb)->release = NULL;
+#endif
 	return 0;
 
 nodata:
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index 5fab4c6..05bc0ee 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -46,7 +46,9 @@
 #include <linux/srcu.h>
 #include <linux/hugetlb.h>
 #include <linux/slab.h>
+#ifdef CONFIG_VBUS
 #include <linux/kvm_xinterface.h>
+#endif
 
 #include <asm/processor.h>
 #include <asm/io.h>
@@ -2296,6 +2298,7 @@ void kvm_exit(void)
 }
 EXPORT_SYMBOL_GPL(kvm_exit);
 
+#ifdef CONFIG_VBUS
 struct kvm_xinterface *
 kvm_xinterface_bind(int fd)
 {
@@ -2318,3 +2321,4 @@ kvm_xinterface_bind(int fd)
 	return intf;
 }
 EXPORT_SYMBOL_GPL(kvm_xinterface_bind);
+#endif
-- 
1.6.5.2

