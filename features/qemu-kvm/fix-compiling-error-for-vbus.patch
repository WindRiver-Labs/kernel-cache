From 8e4926b3764205513600a982159e176ae6a314cb Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Wed, 12 May 2010 18:16:42 +0800
Subject: [PATCH] fix compiling error for vbus

The compiling errors come from missing the related head file;
and not very well done on dependent relatonship.

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/vbus/Kconfig          |    1 +
 drivers/vbus/bus-proxy.c      |    1 +
 drivers/vbus/ioq-test.c       |    1 +
 kernel/vbus/client.c          |    1 +
 kernel/vbus/config-ioctl.c    |    1 +
 kernel/vbus/connectors/kvm.c  |    1 +
 kernel/vbus/connectors/null.c |    1 +
 kernel/vbus/shm-ioq.c         |    1 +
 lib/shm_signal_eventfd.c      |    1 +
 virt/kvm/xinterface.c         |   10 +++++++---
 10 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/vbus/Kconfig b/drivers/vbus/Kconfig
index c02c4ce..1421707 100644
--- a/drivers/vbus/Kconfig
+++ b/drivers/vbus/Kconfig
@@ -16,6 +16,7 @@ config VBUS_PROXY
 config VBUS_PCIBRIDGE
        bool "PCI to Virtual-Bus bridge"
        depends on PCI
+       depends on X86_IO_APIC 
        depends on VBUS_PROXY
        select IOQ
        default n
diff --git a/drivers/vbus/bus-proxy.c b/drivers/vbus/bus-proxy.c
index 4792842..b61c20b 100644
--- a/drivers/vbus/bus-proxy.c
+++ b/drivers/vbus/bus-proxy.c
@@ -20,6 +20,7 @@
 
 #include <linux/module.h>
 #include <linux/vbus_driver.h>
+#include <linux/slab.h>
 
 MODULE_AUTHOR("Gregory Haskins");
 MODULE_LICENSE("GPL");
diff --git a/drivers/vbus/ioq-test.c b/drivers/vbus/ioq-test.c
index 6a5db72..464f5ff 100644
--- a/drivers/vbus/ioq-test.c
+++ b/drivers/vbus/ioq-test.c
@@ -18,6 +18,7 @@
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/init.h>
+#include <linux/slab.h>
 
 #include <linux/vbus.h>
 #include <linux/vbus_client.h>
diff --git a/kernel/vbus/client.c b/kernel/vbus/client.c
index f0413bb..8f25c94 100644
--- a/kernel/vbus/client.c
+++ b/kernel/vbus/client.c
@@ -1,6 +1,7 @@
 #include <linux/module.h>
 #include <linux/sched.h>
 #include <linux/mm.h>
+#include <linux/slab.h>
 #include <linux/highmem.h>
 #include <linux/uaccess.h>
 #include <linux/vbus.h>
diff --git a/kernel/vbus/config-ioctl.c b/kernel/vbus/config-ioctl.c
index 44e823b..303c9f5 100644
--- a/kernel/vbus/config-ioctl.c
+++ b/kernel/vbus/config-ioctl.c
@@ -2,6 +2,7 @@
 #include <linux/fs.h>
 #include <linux/file.h>
 #include <linux/poll.h>
+#include <linux/slab.h>
 #include <linux/miscdevice.h>
 #include <linux/random.h>
 #include <linux/vbus.h>
diff --git a/kernel/vbus/connectors/kvm.c b/kernel/vbus/connectors/kvm.c
index b3de3ef..c8eef2a 100644
--- a/kernel/vbus/connectors/kvm.c
+++ b/kernel/vbus/connectors/kvm.c
@@ -5,6 +5,7 @@
 #include <linux/miscdevice.h>
 #include <linux/mm.h>
 #include <linux/vmalloc.h>
+#include <linux/slab.h>
 #include <linux/uaccess.h>
 #include <linux/spinlock.h>
 #include <linux/module.h>
diff --git a/kernel/vbus/connectors/null.c b/kernel/vbus/connectors/null.c
index b6d16cb..98e49e5 100644
--- a/kernel/vbus/connectors/null.c
+++ b/kernel/vbus/connectors/null.c
@@ -3,6 +3,7 @@
  * be implemented for a basic connector
  */
 
+#include <linux/slab.h>
 #include <linux/vbus.h>
 #include <linux/vbus_client.h>
 #include <linux/vbus_driver.h>
diff --git a/kernel/vbus/shm-ioq.c b/kernel/vbus/shm-ioq.c
index cc86d91..919ccad 100644
--- a/kernel/vbus/shm-ioq.c
+++ b/kernel/vbus/shm-ioq.c
@@ -22,6 +22,7 @@
  */
 
 #include <linux/ioq.h>
+#include <linux/slab.h>
 #include <linux/vbus_device.h>
 
 struct _ioq {
diff --git a/lib/shm_signal_eventfd.c b/lib/shm_signal_eventfd.c
index acfba46..060f161 100644
--- a/lib/shm_signal_eventfd.c
+++ b/lib/shm_signal_eventfd.c
@@ -22,6 +22,7 @@
 
 #include <linux/module.h>
 #include <linux/interrupt.h>
+#include <linux/slab.h>
 #include <linux/shm_signal.h>
 #include <linux/workqueue.h>
 #include <linux/eventfd.h>
diff --git a/virt/kvm/xinterface.c b/virt/kvm/xinterface.c
index 3376ac1..18a17a5 100644
--- a/virt/kvm/xinterface.c
+++ b/virt/kvm/xinterface.c
@@ -22,6 +22,7 @@
 
 #include <linux/mm.h>
 #include <linux/vmalloc.h>
+#include <linux/slab.h>
 #include <linux/highmem.h>
 #include <linux/module.h>
 #include <linux/mmu_context.h>
@@ -399,8 +400,10 @@ ioevent_deassign(struct kvm_xioevent *ioevent)
 	struct _ioevent    *p = container_of(ioevent, struct _ioevent, ioevent);
 	struct _xinterface *_intf = to_intf(ioevent->intf);
 	struct kvm         *kvm = _intf->kvm;
+	int bus_idx = (kvm->buses[KVM_PIO_BUS] == p->bus) ? \
+			KVM_PIO_BUS : KVM_MMIO_BUS;
 
-	kvm_io_bus_unregister_dev(kvm, p->bus, &p->dev);
+	kvm_io_bus_unregister_dev(kvm, bus_idx, &p->dev);
 	kfree(p);
 }
 
@@ -417,7 +420,8 @@ xinterface_ioevent(struct kvm_xinterface *intf,
 	struct _xinterface         *_intf = to_intf(intf);
 	struct kvm                 *kvm = _intf->kvm;
 	int                         pio = flags & KVM_XIOEVENT_FLAG_PIO;
-	struct kvm_io_bus          *bus = pio ? &kvm->pio_bus : &kvm->mmio_bus;
+	int bus_idx = pio ? KVM_PIO_BUS : KVM_MMIO_BUS;
+	struct kvm_io_bus          *bus = kvm->buses[bus_idx];
 	struct _ioevent            *p;
 	int                         ret;
 
@@ -452,7 +456,7 @@ xinterface_ioevent(struct kvm_xinterface *intf,
 
 	kvm_iodevice_init(&p->dev, &ioevent_device_ops);
 
-	ret = kvm_io_bus_register_dev(kvm, bus, &p->dev);
+	ret = kvm_io_bus_register_dev(kvm, bus_idx, &p->dev);
 	if (ret < 0)
 		goto fail;
 
-- 
1.7.4.1

