From ea24ff3c1fcc82a36084c090559e0d69230a3d45 Mon Sep 17 00:00:00 2001
From: Gregory Haskins <ghaskins@novell.com>
Date: Fri, 28 Aug 2009 12:17:19 -0400
Subject: [PATCH 037/119] venettap: acquire and switch to mm context within kthreads

Signed-off-by: Gregory Haskins <ghaskins@novell.com>
---
 kernel/vbus/devices/venet-tap.c |   29 +++++++++++++++++++++++++++++
 1 files changed, 29 insertions(+), 0 deletions(-)

diff --git a/kernel/vbus/devices/venet-tap.c b/kernel/vbus/devices/venet-tap.c
index f19ab40..c6a5ac3 100644
--- a/kernel/vbus/devices/venet-tap.c
+++ b/kernel/vbus/devices/venet-tap.c
@@ -43,6 +43,7 @@
 #include <linux/vbus.h>
 #include <linux/freezer.h>
 #include <linux/kthread.h>
+#include <linux/mmu_context.h>
 #include <linux/ktime.h>
 
 #include <linux/venet.h>
@@ -676,6 +677,15 @@ next:
 static int venettap_rx_thread(void *__priv)
 {
 	struct venettap *priv = __priv;
+	struct vbus_memctx *ctx = priv->vbus.ctx;
+	struct mm_struct *mm = NULL;
+
+	if (ctx->ops->mm_get) {
+		mm = ctx->ops->mm_get(ctx);
+		BUG_ON(!mm);
+
+		use_mm(mm);
+	}
 
 	for (;;) {
 		set_current_state(TASK_INTERRUPTIBLE);
@@ -693,6 +703,11 @@ static int venettap_rx_thread(void *__priv)
 		venettap_rx(priv);
 	}
 
+	if (mm) {
+		unuse_mm(mm);
+		mmput(mm);
+	}
+
 	return 0;
 }
 
@@ -816,6 +831,15 @@ venettap_tx(struct venettap *priv)
 static int venettap_tx_thread(void *__priv)
 {
 	struct venettap *priv = __priv;
+	struct vbus_memctx *ctx = priv->vbus.ctx;
+	struct mm_struct *mm = NULL;
+
+	if (ctx->ops->mm_get) {
+		mm = ctx->ops->mm_get(ctx);
+		BUG_ON(!mm);
+
+		use_mm(mm);
+	}
 
 	for (;;) {
 		set_current_state(TASK_INTERRUPTIBLE);
@@ -840,6 +864,11 @@ static int venettap_tx_thread(void *__priv)
 		venettap_tx(priv);
 	}
 
+	if (mm) {
+		unuse_mm(mm);
+		mmput(mm);
+	}
+
 	return 0;
 }
 
-- 
1.6.5.2

