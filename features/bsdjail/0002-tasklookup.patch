From 07fbe441677d40a0d77d74e356f44ac3461073cc Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce@windriver.com>
Date: Mon, 24 Mar 2008 11:17:59 -0400
Subject: [PATCH] bsdjail tasklookup

Add the ability to lookup a task from bsdjail

Signed-off-by: Bruce Ashfield  <bruce.ashfield@windriver.com>
---
 fs/proc/base.c           |    2 ++
 include/linux/security.h |   16 ++++++++++++++++
 2 files changed, 18 insertions(+), 0 deletions(-)

diff --git a/fs/proc/base.c b/fs/proc/base.c
index a28840b..beb44d0 100644
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -1987,6 +1987,8 @@ static struct dentry *proc_pident_lookup(struct inode *dir,
 	for (p = ents; p <= last; p++) {
 		if (p->len != dentry->d_name.len)
 			continue;
+		if (security_task_lookup(task))
+			continue;
 		if (!memcmp(dentry->d_name.name, p->name, p->len))
 			break;
 	}
diff --git a/include/linux/security.h b/include/linux/security.h
index fd96e7f..ddea425 100644
--- a/include/linux/security.h
+++ b/include/linux/security.h
@@ -724,6 +724,11 @@ static inline void security_free_mnt_opts(struct security_mnt_opts *opts)
  *	Set the security attributes in @p->security for a kernel thread that
  *	is being reparented to the init task.
  *	@p contains the task_struct for the kernel thread.
+ * @task_lookup:
+ *	Check permission to see the /proc/<pid> entry for process @p.
+ *	@p contains the task_struct for task <pid> which is being looked
+ *	up under /proc
+ *	return 0 if permission is granted.
  * @task_to_inode:
  *	Set the security attributes for an inode based on an associated task's
  *	security attributes, e.g. for /proc/pid inodes.
@@ -1428,6 +1433,7 @@ struct security_operations {
 			   unsigned long arg3, unsigned long arg4,
 			   unsigned long arg5, long *rc_p);
 	void (*task_reparent_to_init) (struct task_struct *p);
+	int (*task_lookup)(struct task_struct *p);
 	void (*task_to_inode) (struct task_struct *p, struct inode *inode);
 
 	int (*ipc_permission) (struct kern_ipc_perm *ipcp, short flag);
@@ -2285,6 +2291,16 @@ static inline void security_task_reparent_to_init(struct task_struct *p)
 	cap_task_reparent_to_init(p);
 }
 
+static inline int security_task_lookup(struct task_struct *p)
+{
+	return security_ops->task_lookup(p);
+}
+
+static inline int security_task_lookup(struct task_struct *p)
+{
+	return 0;
+}
+
 static inline void security_task_to_inode(struct task_struct *p, struct inode *inode)
 { }
 
-- 
1.5.5.1

