From 8ee6defa7551a550f83911fe8eb696ae2d3a82b7 Mon Sep 17 00:00:00 2001
From: Liming Wang <liming.wang@windriver.com>
Date: Tue, 29 Jun 2010 23:14:10 -0700
Subject: [PATCH] bsdjail: add sk_alloc_security field to avoid panic

Add sk_alloc_security to call kref_get, to avoid
dereference failure when free_sock_security calls kref_put.

Signed-off-by: Liming Wang <liming.wang@windriver.com>
---
 security/bsdjail.c |   13 +++++++++++++
 1 files changed, 13 insertions(+), 0 deletions(-)

diff --git a/security/bsdjail.c b/security/bsdjail.c
index 9b42855..1a66305 100644
--- a/security/bsdjail.c
+++ b/security/bsdjail.c
@@ -743,6 +743,18 @@ static void free_sock_security(struct sock *sk)
 	set_sock_security(sk, NULL);
 }
 
+static int alloc_sock_security(struct sock *sk, int family, gfp_t gfp_flags)
+{
+	struct jail_struct *tsec;
+
+	tsec = jail_of(current);
+	set_sock_security(sk, tsec);
+	if (tsec)
+		kref_get(&tsec->kref);
+
+	return 0;
+}
+
 /*
  * The next three (socket) hooks prevent a process in a jail from sending
  * data to a abstract unix domain socket which was bound outside the jail.
@@ -1333,6 +1345,7 @@ static struct security_operations bsdjail_security_ops = {
 	.unix_stream_connect =		jail_socket_unix_stream_connect,
 	.unix_may_send =		jail_socket_unix_may_send,
 	.sk_free_security =		free_sock_security,
+	.sk_alloc_security =		alloc_sock_security,
 
 	.inode_mknod =			jail_inode_mknod,
 	.inode_permission =		jail_inode_permission,
-- 
1.6.5.2

