From 2d43aa23cee651be73bd010a8ecfb70b32fa5cbb Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Mon, 11 Jun 2012 14:37:08 -0700
Subject: [PATCH 6/6] Security: Restore security_commit_creds for BSD Jail

commit 0968d0060a3c885e53d453380266c7792a55d302
[security: remove dead hook cred_commit] removed security_commit_creds
call in commit_creds, but BSD Jail need it to install a new set of
credentials and security module.

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 include/linux/security.h |   11 +++++++++++
 kernel/cred.c            |    2 ++
 security/capability.c    |    5 +++++
 security/security.c      |    5 +++++
 4 files changed, 23 insertions(+)

diff --git a/include/linux/security.h b/include/linux/security.h
index 2f3cd18..7efffc1 100644
--- a/include/linux/security.h
+++ b/include/linux/security.h
@@ -671,6 +671,10 @@ static inline void security_free_mnt_opts(struct security_mnt_opts *opts)
  *	@old points to the original credentials.
  *	@gfp indicates the atomicity of any memory allocations.
  *	Prepare a new set of credentials by copying the data from the old set.
+ * @cred_commit:
+ *	@new points to the new credentials.
+ *	@old points to the original credentials.
+ *	Install a new set of credentials.
  * @cred_transfer:
  *	@new points to the new credentials.
  *	@old points to the original credentials.
@@ -1510,6 +1514,7 @@ struct security_operations {
 	void (*cred_free) (struct cred *cred);
 	int (*cred_prepare)(struct cred *new, const struct cred *old,
 			    gfp_t gfp);
+	void (*cred_commit)(struct cred *new, const struct cred *old);
 	void (*cred_transfer)(struct cred *new, const struct cred *old);
 	int (*kernel_act_as)(struct cred *new, u32 secid);
 	int (*kernel_create_files_as)(struct cred *new, struct inode *inode);
@@ -1768,6 +1773,7 @@ void security_task_free(struct task_struct *task);
 int security_cred_alloc_blank(struct cred *cred, gfp_t gfp);
 void security_cred_free(struct cred *cred);
 int security_prepare_creds(struct cred *new, const struct cred *old, gfp_t gfp);
+void security_commit_creds(struct cred *new, const struct cred *old);
 void security_transfer_creds(struct cred *new, const struct cred *old);
 int security_kernel_act_as(struct cred *new, u32 secid);
 int security_kernel_create_files_as(struct cred *new, struct inode *inode);
@@ -2263,6 +2269,11 @@ static inline int security_prepare_creds(struct cred *new,
 	return 0;
 }
 
+static inline void security_commit_creds(struct cred *new,
+					  const struct cred *old)
+{
+}
+
 static inline void security_transfer_creds(struct cred *new,
 					   const struct cred *old)
 {
diff --git a/kernel/cred.c b/kernel/cred.c
index e70683d..0b8cc7b 100644
--- a/kernel/cred.c
+++ b/kernel/cred.c
@@ -490,6 +490,8 @@ int commit_creds(struct cred *new)
 #endif
 	BUG_ON(atomic_read(&new->usage) < 1);
 
+	security_commit_creds(new, old);
+
 	get_cred(new); /* we will require a ref for the subj creds too */
 
 	/* dumpability changes */
diff --git a/security/capability.c b/security/capability.c
index 5bb21b1..4381468 100644
--- a/security/capability.c
+++ b/security/capability.c
@@ -376,6 +376,10 @@ static int cap_cred_prepare(struct cred *new, const struct cred *old, gfp_t gfp)
 	return 0;
 }
 
+static void cap_cred_commit(struct cred *new, const struct cred *old)
+{
+}
+
 static void cap_cred_transfer(struct cred *new, const struct cred *old)
 {
 }
@@ -962,6 +966,7 @@ void __init security_fixup_ops(struct security_operations *ops)
 	set_to_cap_if_null(ops, cred_alloc_blank);
 	set_to_cap_if_null(ops, cred_free);
 	set_to_cap_if_null(ops, cred_prepare);
+	set_to_cap_if_null(ops, cred_commit);
 	set_to_cap_if_null(ops, cred_transfer);
 	set_to_cap_if_null(ops, kernel_act_as);
 	set_to_cap_if_null(ops, kernel_create_files_as);
diff --git a/security/security.c b/security/security.c
index 1d671b6..6dcc79a 100644
--- a/security/security.c
+++ b/security/security.c
@@ -739,6 +739,11 @@ int security_prepare_creds(struct cred *new, const struct cred *old, gfp_t gfp)
 	return security_ops->cred_prepare(new, old, gfp);
 }
 
+void security_commit_creds(struct cred *new, const struct cred *old)
+{
+	security_ops->cred_commit(new, old);
+}
+
 void security_transfer_creds(struct cred *new, const struct cred *old)
 {
 	security_ops->cred_transfer(new, old);
-- 
1.7.9.7

