From 5b044390e3fdd9b3846328dbca9c15d10d665ea9 Mon Sep 17 00:00:00 2001
From: Leonid Rosenboim <lrosenboim@caviumnetworks.com>
Date: Fri, 25 Jul 2014 10:24:50 -0700
Subject: [PATCH 115/202] MIPS: Octeon: Get first 256MB from 32-bit address

This amount should satisfy the needs of SWIOTLB and drivers that require
32-bit DMA buffers. The need to explicitly specify the address range
becomes obvious when the cvmx_bootmem allocation policy is changed to "last
fit", preferring high memory to conserve low memory for clients that really
need it, and specify their address range explicitly.

Signed-off-by: Leonid Rosenboim <lrosenboim@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.1-544]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/mips/cavium-octeon/setup.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index 54c5f1f..7485786 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -1011,8 +1011,15 @@ void __init plat_mem_setup(void)
 	while ((boot_mem_map.nr_map < BOOT_MEM_MAP_MAX)
 		&& (total < MAX_MEMORY)) {
 #if defined(CONFIG_64BIT) || defined(CONFIG_64BIT_PHYS_ADDR)
+		const uint64_t min_low_ram = 256 << 20; /* 256 MBytes */
+		uint64_t limit;
+		if (total < min_low_ram)
+			limit = (1ull << 32)-1;
+		else
+			limit = ~0ull;
+
 		memory = cvmx_bootmem_phy_alloc(mem_alloc_size,
-						__pa_symbol(&__init_end), -1,
+						__pa_symbol(&__init_end), limit,
 						0x100000,
 						CVMX_BOOTMEM_FLAG_NO_LOCKING);
 #elif defined(CONFIG_HIGHMEM)
-- 
1.8.2.1

