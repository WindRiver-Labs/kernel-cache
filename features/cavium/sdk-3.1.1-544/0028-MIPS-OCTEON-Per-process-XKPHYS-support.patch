From 9a5b26f06c990cf67cc975c72b2abe80d14394b6 Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Tue, 4 Mar 2014 10:01:22 -0800
Subject: [PATCH 028/202] MIPS: OCTEON: Per process XKPHYS support

Define prepare_arch_switch() to OCTEON Specific switch function when
per process XKPHYS support is configured.

Bug #9193

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.1-544]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/mips/include/asm/processor.h |  5 +++++
 arch/mips/kernel/octeon-cpu.c     | 11 ++++++++---
 2 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/arch/mips/include/asm/processor.h b/arch/mips/include/asm/processor.h
index 160bb2a..f2d23ec 100644
--- a/arch/mips/include/asm/processor.h
+++ b/arch/mips/include/asm/processor.h
@@ -368,6 +368,11 @@ unsigned long get_wchan(struct task_struct *p);
 #define ARCH_HAS_PREFETCHW
 #define prefetchw(x) __builtin_prefetch((x), 1, 1)
 
+#if defined(CONFIG_CAVIUM_OCTEON_USER_MEM_PER_PROCESS) || defined(CONFIG_CAVIUM_OCTEON_USER_IO_PER_PROCESS)
+#define prepare_arch_switch(next)  octeon_prepare_arch_switch(next)
+extern void octeon_prepare_arch_switch(struct task_struct *next);
+#endif
+
 /*
  * See Documentation/scheduler/sched-arch.txt; prevents deadlock on SMP
  * systems.
diff --git a/arch/mips/kernel/octeon-cpu.c b/arch/mips/kernel/octeon-cpu.c
index 2c185f7..37bddd0 100644
--- a/arch/mips/kernel/octeon-cpu.c
+++ b/arch/mips/kernel/octeon-cpu.c
@@ -12,6 +12,7 @@
 #include <linux/prefetch.h>
 #include <linux/sched.h>
 
+#include <asm/processor.h>
 #include <asm/cop2.h>
 #include <asm/current.h>
 #include <asm/mipsregs.h>
@@ -33,10 +34,10 @@ static int is_task_and_current_same(struct task_struct *t)
 	return 1;
 }
 
-static void octeon_prepare_arch_switch(struct task_struct *next)
-{
 #if defined(CONFIG_CAVIUM_OCTEON_USER_MEM_PER_PROCESS) || \
 	defined(CONFIG_CAVIUM_OCTEON_USER_IO_PER_PROCESS)
+void octeon_prepare_arch_switch(struct task_struct *next)
+{
 	struct task_struct *group_leader = next->group_leader;
 	union octeon_cvmemctl cvmmemctl;
 	cvmmemctl.u64 = read_c0_cvmmemctl();
@@ -49,8 +50,12 @@ static void octeon_prepare_arch_switch(struct task_struct *next)
 	cvmmemctl.s.xkioenau = test_tsk_thread_flag(group_leader, TIF_XKPHYS_IO_EN) ? 1 : 0;
 #endif
 	write_c0_cvmmemctl(cvmmemctl.u64);
-#endif
 }
+#else
+static void octeon_prepare_arch_switch(struct task_struct *next)
+{
+}
+#endif
 
 static struct task_struct *xkphys_get_task(pid_t pid)
 {
-- 
1.8.2.1

