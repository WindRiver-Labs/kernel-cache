From d9fd4eb21c1ba5ded12f98f88938894e2c5c6a29 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 13 Feb 2015 14:28:01 +0530
Subject: [PATCH 058/132] MIPS: OCTEON: Print address of passed device tree.

Commit bc336512658205471b6bf352d53d631f27c9dc5e from
git://git.yoctoproject.org/linux-yocto-3.14

This allows us to verify the bootloader is doing what we ask.

MIPS: OCTEON: Change load address to waste less memory.

"Modern" octeon bootloaders allow us to load the image at 0x100000.
Moving there from 0x1100000 makes 16MB more memory usable.

MIPS: OCTEON Handle bootloader structures in little-endian mode.

Compensate for the differences in the layout of in-memory bootloader
information as seen from little-endian mode.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Abhishek Paliwal <abhishek.paliwal@aricent.com>
[Original patch taken from OCTEON-SDK 3.1.1-544.]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/cavium-octeon/Platform | 6 +++---
 arch/mips/cavium-octeon/setup.c  | 3 +--
 2 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/arch/mips/cavium-octeon/Platform b/arch/mips/cavium-octeon/Platform
index 8a301cb..748371f 100644
--- a/arch/mips/cavium-octeon/Platform
+++ b/arch/mips/cavium-octeon/Platform
@@ -4,8 +4,8 @@
 platform-$(CONFIG_CAVIUM_OCTEON_SOC)	+= cavium-octeon/
 cflags-$(CONFIG_CAVIUM_OCTEON_SOC)	+=				\
 		-I$(srctree)/arch/mips/include/asm/mach-cavium-octeon
-ifdef CONFIG_CAVIUM_OCTEON_2ND_KERNEL
-load-$(CONFIG_CAVIUM_OCTEON_SOC)	+= 0xffffffff84100000
+ifdef CONFIG_MAPPED_KERNEL
+  load-$(CONFIG_CAVIUM_OCTEON_SOC)	= 0xffffffffc0000000
 else
-load-$(CONFIG_CAVIUM_OCTEON_SOC)	+= 0xffffffff81100000
+  load-$(CONFIG_CAVIUM_OCTEON_SOC)	= 0xffffffff80100000
 endif
diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index 1b0ee0f..87439be 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -1370,6 +1370,7 @@ void __init device_tree_init(void)
 
 	if (octeon_bootinfo->minor_version >= 3 && octeon_bootinfo->fdt_addr) {
 		fdt = phys_to_virt(octeon_bootinfo->fdt_addr);
+		pr_info("Using passed Device Tree <%p>.\n", fdt);
 		if (fdt_check_header(fdt))
 			panic("Corrupt Device Tree passed to kernel.");
 		do_prune = false;
@@ -1386,8 +1387,6 @@ void __init device_tree_init(void)
 	if (do_prune) {
 		octeon_prune_device_tree();
 		pr_info("Using internal Device Tree.\n");
-	} else {
-		pr_info("Using passed Device Tree.\n");
 	}
 	unflatten_and_copy_device_tree();
 }
-- 
1.9.1

