From 0aabcc06fa7699622f4f9faf13f77661f69aab42 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Mon, 13 Oct 2014 17:02:29 -0700
Subject: [PATCH 185/202] MIPS: Sort and merge /proc/iomem RAM regions.

Sorting makes things easier to understand, and easier to merge.
Merging makes kexec work better.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.1-544]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/mips/kernel/setup.c | 35 +++++++++++++++++++++++++++++++++++
 1 file changed, 35 insertions(+)

diff --git a/arch/mips/kernel/setup.c b/arch/mips/kernel/setup.c
index 319a5dc..84aaf05 100644
--- a/arch/mips/kernel/setup.c
+++ b/arch/mips/kernel/setup.c
@@ -24,6 +24,7 @@
 #include <linux/debugfs.h>
 #include <linux/kexec.h>
 #include <linux/sizes.h>
+#include <linux/sort.h>
 
 #include <asm/addrspace.h>
 #include <asm/bootinfo.h>
@@ -616,6 +617,19 @@ static void __init request_crashkernel(struct resource *res)
 }
 #endif /* !defined(CONFIG_KEXEC)  */
 
+static int __init mem_map_entry_cmp(const void *a, const void *b)
+{
+	const struct boot_mem_map_entry *ea = a;
+	const struct boot_mem_map_entry *eb = b;
+
+	if (ea->addr < eb->addr)
+		return -1;
+	else if (ea->addr > eb->addr)
+		return 1;
+	else
+		return 0;
+}
+
 static void __init arch_mem_init(char **cmdline_p)
 {
 	extern void plat_mem_setup(void);
@@ -638,6 +652,9 @@ static void __init arch_mem_init(char **cmdline_p)
 	arch_mem_addpart(init_end, kernel_end, BOOT_MEM_KERNEL);
 	arch_mem_addpart(init_begin, init_end, BOOT_MEM_INIT_RAM);
 
+	sort(boot_mem_map.map, boot_mem_map.nr_map,
+	     sizeof(struct boot_mem_map_entry), mem_map_entry_cmp, NULL);
+
 	pr_info("Determined physical RAM map:\n");
 	print_memory_map();
 
@@ -717,6 +734,24 @@ static void __init resource_init(void)
 		case BOOT_MEM_INIT_RAM:
 		case BOOT_MEM_ROM_DATA:
 		case BOOT_MEM_KERNEL:
+			/* Try to merge on next piece, they are sorted. */
+			while (i + 1 < boot_mem_map.nr_map &&
+			    boot_mem_map.map[i + 1].addr == end + 1) {
+				switch (boot_mem_map.map[i + 1].type) {
+				case BOOT_MEM_RAM:
+				case BOOT_MEM_INIT_RAM:
+				case BOOT_MEM_ROM_DATA:
+				case BOOT_MEM_KERNEL:
+					i++;
+					end = boot_mem_map.map[i].addr + boot_mem_map.map[i].size - 1;
+					if (end >= HIGHMEM_START)
+						end = HIGHMEM_START - 1;
+					break;
+				default:
+					goto no_merge;
+				}
+			}
+no_merge:
 			res->name = "System RAM";
 			break;
 		case BOOT_MEM_RESERVED:
-- 
1.8.2.1

