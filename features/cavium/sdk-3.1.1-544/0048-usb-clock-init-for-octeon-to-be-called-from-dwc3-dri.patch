From 3f712869d712de7478e31545e079b0268e51f5b1 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 13 Feb 2015 13:57:51 +0530
Subject: [PATCH 048/148] usb clock init for octeon to be called from dwc3
 driver.

Commit 59c282e24da655ac9449d6944f6d561eb680fdf4 from
git://git.yoctoproject.org/linux-yocto-3.14

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Vinita Gupta <vgupta@caviumnetworks.com>
Signed-off-by: Abhishek Paliwal <abhishek.paliwal@aricent.com>
---
 drivers/usb/dwc3/core.c  | 43 +++++++++++++++++++++++++++++++++++++++----
 drivers/usb/host/Kconfig |  5 +++++
 2 files changed, 44 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index e1afd55..3de92f6 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -45,6 +45,12 @@
 
 #include "debug.h"
 
+extern void octeon3_usb_phy_reset(int index);
+extern int xhci_octeon_start(struct platform_device *pdev);
+extern int xhci_octeon_stop(struct platform_device *pdev);
+static u64 xhci_octeon_dma_mask = DMA_BIT_MASK(64);
+
+
 /* -------------------------------------------------------------------------- */
 
 void dwc3_set_mode(struct dwc3 *dwc, u32 mode)
@@ -64,6 +70,7 @@ void dwc3_set_mode(struct dwc3 *dwc, u32 mode)
 static void dwc3_core_soft_reset(struct dwc3 *dwc)
 {
 	u32		reg;
+	int		index;
 
 	/* Before Resetting PHY, put Core in Reset */
 	reg = dwc3_readl(dwc->regs, DWC3_GCTL);
@@ -80,8 +87,13 @@ static void dwc3_core_soft_reset(struct dwc3 *dwc)
 	reg |= DWC3_GUSB2PHYCFG_PHYSOFTRST;
 	dwc3_writel(dwc->regs, DWC3_GUSB2PHYCFG(0), reg);
 
+	index = (((uint64_t)(dwc->regs) & 0x10000000000ull) ? 1:0);
+#ifdef CONFIG_USB_XHCI_HCD_OCTEON
+	octeon3_usb_phy_reset(index);
+#else
 	usb_phy_init(dwc->usb2_phy);
 	usb_phy_init(dwc->usb3_phy);
+#endif
 	mdelay(100);
 
 	/* Clear USB3 PHY reset */
@@ -341,8 +353,10 @@ err0:
 
 static void dwc3_core_exit(struct dwc3 *dwc)
 {
+#ifndef CONFIG_USB_XHCI_HCD_OCTEON
 	usb_phy_shutdown(dwc->usb2_phy);
 	usb_phy_shutdown(dwc->usb3_phy);
+#endif
 }
 
 #define DWC3_ALIGN_MASK		(16 - 1)
@@ -360,6 +374,12 @@ static int dwc3_probe(struct platform_device *pdev)
 	void __iomem		*regs;
 	void			*mem;
 
+#ifdef CONFIG_USB_XHCI_HCD_OCTEON
+	ret = xhci_octeon_start(pdev);
+	if (ret)
+		return ret;
+#endif
+
 	mem = devm_kzalloc(dev, sizeof(*dwc) + DWC3_ALIGN_MASK, GFP_KERNEL);
 	if (!mem) {
 		dev_err(dev, "not enough memory\n");
@@ -464,8 +484,11 @@ static int dwc3_probe(struct platform_device *pdev)
 	dwc->regs	= regs;
 	dwc->regs_size	= resource_size(res);
 	dwc->dev	= dev;
-
-	dev->dma_mask	= dev->parent->dma_mask;
+#ifdef CONFIG_USB_XHCI_HCD_OCTEON
+	dev->dma_mask   = &xhci_octeon_dma_mask;
+#else
+	dev->dma_mask   = dev->parent->dma_mask;
+#endif
 	dev->dma_parms	= dev->parent->dma_parms;
 	dma_set_coherent_mask(dev, dev->parent->coherent_dma_mask);
 
@@ -488,8 +511,10 @@ static int dwc3_probe(struct platform_device *pdev)
 		goto err0;
 	}
 
+#ifndef CONFIG_USB_XHCI_HCD_OCTEON
 	usb_phy_set_suspend(dwc->usb2_phy, 0);
 	usb_phy_set_suspend(dwc->usb3_phy, 0);
+#endif
 
 	ret = dwc3_event_buffers_setup(dwc);
 	if (ret) {
@@ -572,8 +597,11 @@ err2:
 	dwc3_event_buffers_cleanup(dwc);
 
 err1:
+
+#ifndef CONFIG_USB_XHCI_HCD_OCTEON
 	usb_phy_set_suspend(dwc->usb2_phy, 1);
 	usb_phy_set_suspend(dwc->usb3_phy, 1);
+#endif
 	dwc3_core_exit(dwc);
 
 err0:
@@ -607,14 +635,18 @@ static int dwc3_remove(struct platform_device *pdev)
 	dwc3_event_buffers_cleanup(dwc);
 	dwc3_free_event_buffers(dwc);
 
+#ifndef CONFIG_USB_XHCI_HCD_OCTEON
 	usb_phy_set_suspend(dwc->usb2_phy, 1);
 	usb_phy_set_suspend(dwc->usb3_phy, 1);
-
+#endif
 	dwc3_core_exit(dwc);
 
 	pm_runtime_put_sync(&pdev->dev);
 	pm_runtime_disable(&pdev->dev);
 
+#ifdef CONFIG_USB_XHCI_HCD_OCTEON
+	xhci_octeon_stop(pdev);
+#endif
 	return 0;
 }
 
@@ -684,8 +716,10 @@ static int dwc3_suspend(struct device *dev)
 	dwc->gctl = dwc3_readl(dwc->regs, DWC3_GCTL);
 	spin_unlock_irqrestore(&dwc->lock, flags);
 
+#ifndef CONFIG_USB_XHCI_HCD_OCTEON
 	usb_phy_shutdown(dwc->usb3_phy);
 	usb_phy_shutdown(dwc->usb2_phy);
+#endif
 
 	return 0;
 }
@@ -695,9 +729,10 @@ static int dwc3_resume(struct device *dev)
 	struct dwc3	*dwc = dev_get_drvdata(dev);
 	unsigned long	flags;
 
+#ifndef CONFIG_USB_XHCI_HCD_OCTEON
 	usb_phy_init(dwc->usb3_phy);
 	usb_phy_init(dwc->usb2_phy);
-
+#endif
 	spin_lock_irqsave(&dwc->lock, flags);
 
 	dwc3_writel(dwc->regs, DWC3_GCTL, dwc->gctl);
diff --git a/drivers/usb/host/Kconfig b/drivers/usb/host/Kconfig
index 51e8c02..a6ed85b 100644
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@ -30,6 +30,11 @@ config USB_XHCI_HCD_OCTEON
 	depends on USB_XHCI_HCD && CAVIUM_OCTEON_SOC
 	default y
 
+config USB_XHCI_HCD_OCTEON
+	tristate
+	depends on USB_XHCI_HCD && CAVIUM_OCTEON_SOC
+	default y
+
 if USB_XHCI_HCD
 
 config USB_XHCI_PLATFORM
-- 
1.8.2.1

