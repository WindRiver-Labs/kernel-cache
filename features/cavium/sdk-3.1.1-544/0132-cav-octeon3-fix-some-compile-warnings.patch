From 09837e79307eb56e7ffe64d6ec22d68ad42a28b0 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Tue, 15 Sep 2015 11:08:45 +0800
Subject: [PATCH 132/132] cav-octeon3: fix some compile warnings

Fix the below warnings:

arch/mips/pci/pcie-octeon.c:480:2: warning:
initialization from incompatible pointer type
arch/mips/pci/pcie-octeon.c:480:2: warning:
(near initialization for 'octeon_pcie_ops.map_bus')
arch/mips/pci/pcie-octeon.c:481:2: warning:
initialization from incompatible pointer type
arch/mips/pci/pcie-octeon.c:481:2: warning:
(near initialization for 'octeon_pcie_ops.read')

drivers/edac/octeon_edac-lmc.c:88:24: warning:
'((long unsigned int*)&int_reg)[0]'
may be used uninitialized in this function [-Wmaybe-uninitialized]

drivers/usb/host/xhci-pci.c:175:13: warning:
'xhci_pme_quirk' defined but not used [-Wunused-function]

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/pci/pcie-octeon.c    | 4 ++--
 drivers/edac/octeon_edac-lmc.c | 7 +++++--
 drivers/usb/host/xhci-pci.c    | 2 ++
 3 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/arch/mips/pci/pcie-octeon.c b/arch/mips/pci/pcie-octeon.c
index e89fd8a..9eb687f 100644
--- a/arch/mips/pci/pcie-octeon.c
+++ b/arch/mips/pci/pcie-octeon.c
@@ -477,8 +477,8 @@ static int octeon_dummy_write_config(struct pci_bus *bus, unsigned int devfn,
 }
 
 static struct pci_ops octeon_pcie_ops = {
-	octeon_pcie_read_config,
-	octeon_pcie_write_config,
+	.read =		octeon_pcie_read_config,
+	.write =	octeon_pcie_write_config,
 };
 
 static struct octeon_pcie_interface octeon_pcie[4];
diff --git a/drivers/edac/octeon_edac-lmc.c b/drivers/edac/octeon_edac-lmc.c
index 106e2c3..0dd966d 100644
--- a/drivers/edac/octeon_edac-lmc.c
+++ b/drivers/edac/octeon_edac-lmc.c
@@ -79,10 +79,13 @@ static void octeon_lmc_edac_poll_o2(struct mem_ctl_info *mci)
 	if (!pvt->inject)
 		int_reg.u64 = cvmx_read_csr(CVMX_LMCX_INT(mci->mc_idx));
 	else {
-		if (pvt->error_type == 1)
+		if (pvt->error_type == 1) {
 			int_reg.s.sec_err = 1;
-		if (pvt->error_type == 2)
+			int_reg.s.ded_err = 0;
+		} else if (pvt->error_type == 2) {
 			int_reg.s.ded_err = 1;
+			int_reg.s.sec_err = 0;
+		}
 	}
 
 	if (int_reg.s.sec_err || int_reg.s.ded_err) {
diff --git a/drivers/usb/host/xhci-pci.c b/drivers/usb/host/xhci-pci.c
index 2af32e2..9f48c57 100644
--- a/drivers/usb/host/xhci-pci.c
+++ b/drivers/usb/host/xhci-pci.c
@@ -168,6 +168,7 @@ static void xhci_pci_quirks(struct device *dev, struct xhci_hcd *xhci)
 				"QUIRK: Resetting on resume");
 }
 
+#ifdef CONFIG_PM
 /*
  * Make sure PME works on some Intel xHCI controllers by writing 1 to clear
  * the Internal PME flag bit in vendor specific PMCTRL register at offset 0x80a4
@@ -182,6 +183,7 @@ static void xhci_pme_quirk(struct xhci_hcd *xhci)
 	writel(val | BIT(28), reg);
 	readl(reg);
 }
+#endif /* CONFIG_PM */
 
 /* called during probe() after chip reset completes */
 static int xhci_pci_setup(struct usb_hcd *hcd)
-- 
1.9.1

