From 6d8fe14d580ef4b9a3837219097a825015ef4bff Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Fri, 13 Feb 2015 11:48:02 +0530
Subject: [PATCH 007/148] MIPS/EDAC: Cavium: Fix compilation errors.

Commit ec00c1bd3a68ab7e289e23a075abf2dea7918106 from
git://git.yoctoproject.org/linux-yocto-3.14

FAM_* macros are replaced with OCTEON_IS_OCTEON* macros.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
Signed-off-by: Abhishek Paliwal <abhishek.paliwal@aricent.com>
---
 drivers/edac/octeon_edac-l2c.c | 2 +-
 drivers/edac/octeon_edac-lmc.c | 2 +-
 drivers/edac/octeon_edac-pc.c  | 8 +++++++-
 3 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/drivers/edac/octeon_edac-l2c.c b/drivers/edac/octeon_edac-l2c.c
index 757e051..64f1f85 100644
--- a/drivers/edac/octeon_edac-l2c.c
+++ b/drivers/edac/octeon_edac-l2c.c
@@ -242,7 +242,7 @@ static int octeon_l2c_probe(struct platform_device *pdev)
 	l2c->ctl_name = "octeon_l2c_err";
 
 
-	if (OCTEON_IS_MODEL(OCTEON_FAM_1_PLUS)) {
+	if (OCTEON_IS_OCTEON1PLUS()) {
 		union cvmx_l2t_err l2t_err;
 		union cvmx_l2d_err l2d_err;
 
diff --git a/drivers/edac/octeon_edac-lmc.c b/drivers/edac/octeon_edac-lmc.c
index 0c9b497..6543d3f 100644
--- a/drivers/edac/octeon_edac-lmc.c
+++ b/drivers/edac/octeon_edac-lmc.c
@@ -96,7 +96,7 @@ static int octeon_lmc_edac_probe(struct platform_device *pdev)
 	layers[0].size = 1;
 	layers[0].is_virt_csrow = false;
 
-	if (OCTEON_IS_MODEL(OCTEON_FAM_1_PLUS)) {
+	if (OCTEON_IS_OCTEON1PLUS()) {
 		union cvmx_lmcx_mem_cfg0 cfg0;
 
 		cfg0.u64 = cvmx_read_csr(CVMX_LMCX_MEM_CFG0(0));
diff --git a/drivers/edac/octeon_edac-pc.c b/drivers/edac/octeon_edac-pc.c
index 5f41e2f..5e88867 100644
--- a/drivers/edac/octeon_edac-pc.c
+++ b/drivers/edac/octeon_edac-pc.c
@@ -60,6 +60,12 @@ static int  co_cache_error_event(struct notifier_block *this,
 					core, cpu);
 		edac_device_handle_ue(p->ed, cpu, 2, "write-buffer");
 		return NOTIFY_STOP;
+	case CO_CACHE_ERROR_TLB_PARITY:
+		edac_device_printk(p->ed, KERN_ERR,
+					"TLB parity error: core %d/cpu %d\n",
+					core, cpu);
+		edac_device_handle_ue(p->ed, cpu, 3, "TLB-parity");
+		return NOTIFY_STOP;
 	default:
 		WARN(1, "Unknown event: %lu\n", event);
 		return NOTIFY_BAD;
@@ -105,7 +111,7 @@ static int co_cache_error_probe(struct platform_device *pdev)
 	platform_set_drvdata(pdev, p);
 
 	p->ed = edac_device_alloc_ctl_info(0, "cpu", num_possible_cpus(),
-					   "cache", 3, 0, NULL, 0,
+					   "cache", 4, 0, NULL, 0,
 					   edac_device_alloc_index());
 	if (!p->ed)
 		goto err;
-- 
1.8.2.1

