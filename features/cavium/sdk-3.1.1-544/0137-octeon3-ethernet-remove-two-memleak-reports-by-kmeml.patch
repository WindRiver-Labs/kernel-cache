From 85a704d6f86e85b3ab41a0c8f8204fc75491873a Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Wed, 11 Nov 2015 14:03:09 +0800
Subject: [PATCH] octeon3-ethernet: remove two memleak reports by
 kmemleak_not_leak

The allocated memory is send to cvmx_fpa3_free(), this function is to
free a pointer back to the pool, it will call cvmx_write_io() to write
this val to a IO address finally. So these shouldn't be kmem leak.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/octeon/octeon3-ethernet.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/net/ethernet/octeon/octeon3-ethernet.c b/drivers/net/ethernet/octeon/octeon3-ethernet.c
index bde3006..844df48 100644
--- a/drivers/net/ethernet/octeon/octeon3-ethernet.c
+++ b/drivers/net/ethernet/octeon/octeon3-ethernet.c
@@ -559,6 +559,7 @@ static void octeon3_eth_replenish_rx(struct octeon3_ethernet *priv, int count)
 			pr_err("WARNING: octeon3_eth_replenish_rx out of memory\n");
 			break;
 		}
+		kmemleak_not_leak(skb);
 		buf = (void **)PTR_ALIGN(skb->head, 128);
 		buf[SKB_PTR_OFFSET] = skb;
 		cvmx_fpa3_free(buf,
@@ -741,12 +742,14 @@ static int octeon3_eth_global_init(unsigned int node)
 			rv = -ENOMEM;
 			goto done;
 		}
+		kmemleak_not_leak(mem);
 		cvmx_fpa3_free(mem, oen->sso_aura, 0);
 		mem = kmem_cache_alloc_node(octeon3_eth_sso_pko_cache, GFP_KERNEL, node);
 		if (!mem) {
 			rv = -ENOMEM;
 			goto done;
 		}
+		kmemleak_not_leak(mem);
 		cvmx_fpa3_free(mem, oen->pko_aura, 0);
 	}
 
-- 
2.0.2

