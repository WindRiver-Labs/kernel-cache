From e867aec96124d3866e880a32944f399a7a61eaf2 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 13 Feb 2015 15:24:19 +0530
Subject: [PATCH 092/132] MIPS: OCTEON: Add support for CONFIG_CAVIUM_GDB

Commit a95477b1d5837711512855b801d43309644c5788 from
git://git.yoctoproject.org/linux-yocto-3.14

The Cavium, Inc. Simple Executive debugger.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Leonid Rosenboim <lrosenboim@caviumnetworks.com>
Signed-off-by: Abhishek Paliwal <abhishek.paliwal@aricent.com>
[Original patch taken from OCTEON-SDK 3.1.1-544.]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/Kconfig.debug          |  9 +++++
 arch/mips/cavium-octeon/serial.c | 75 ++++++++++++++++++++++++++++++++++++++++
 arch/mips/cavium-octeon/setup.c  |  1 +
 3 files changed, 85 insertions(+)
 create mode 100644 arch/mips/cavium-octeon/serial.c

diff --git a/arch/mips/Kconfig.debug b/arch/mips/Kconfig.debug
index 3a2b775..027dfe6 100644
--- a/arch/mips/Kconfig.debug
+++ b/arch/mips/Kconfig.debug
@@ -87,6 +87,15 @@ config SB1XXX_CORELIS
 	  Select compile flags that produce code that can be processed by the
 	  Corelis mksym utility and UDB Emulator.
 
+config CAVIUM_GDB
+	bool "Remote GDB debugging using the Cavium Inc. Multicore GDB"
+	depends on DEBUG_KERNEL && CPU_CAVIUM_OCTEON && !KGDB
+	select DEBUG_INFO
+	help
+	  If you say Y here, it will be possible to remotely debug the MIPS
+	  kernel using the Cavium Inc. GDB with extended SMP support.
+	  This is only useful for kernel hackers. If unsure, say N.
+
 config RUNTIME_DEBUG
 	bool "Enable run-time debugging"
 	depends on DEBUG_KERNEL
diff --git a/arch/mips/cavium-octeon/serial.c b/arch/mips/cavium-octeon/serial.c
new file mode 100644
index 0000000..a931d06
--- /dev/null
+++ b/arch/mips/cavium-octeon/serial.c
@@ -0,0 +1,75 @@
+/*
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ * Copyright (C) 2004-2007 Cavium Networks
+ */
+#include <linux/module.h>
+#include <linux/init.h>
+#include <linux/interrupt.h>
+
+#include <asm/octeon/octeon.h>
+
+
+#ifdef CONFIG_CAVIUM_GDB
+
+static irqreturn_t interrupt_debug_char(int cpl, void *dev_id)
+{
+	unsigned long lsrval;
+	unsigned long tmp;
+
+	lsrval = cvmx_read_csr(CVMX_MIO_UARTX_LSR(OCTEON_DEBUG_UART));
+	if (lsrval & 1) {
+#ifdef CONFIG_KGDB
+		/*
+		 * The Cavium EJTAG bootmonitor stub is not compatible
+		 * with KGDB.  We should never get here.
+		 */
+#error Illegal to use both CONFIG_KGDB and CONFIG_CAVIUM_GDB
+#endif
+		/*
+		 * Pulse MCD0 signal on Ctrl-C to stop all the
+		 * cores. Also set the MCD0 to be not masked by this
+		 * core so we know the signal is received by
+		 * someone.
+		 */
+		octeon_write_lcd("brk");
+		asm volatile ("dmfc0 %0, $22\n\t"
+			      "ori   %0, %0, 0x10\n\t"
+			      "dmtc0 %0, $22" : "=r" (tmp));
+		octeon_write_lcd("");
+		return IRQ_HANDLED;
+	}
+	return IRQ_NONE;
+}
+
+/* Enable uart1 interrupts for debugger Control-C processing */
+
+static int octeon_setup_debug_uart(void)
+{
+	unsigned int hwirq;
+	int irq;
+
+	if (OCTEON_IS_MODEL(OCTEON_CN68XX))
+		hwirq = (3 << 6) + 36 + OCTEON_DEBUG_UART;
+	else
+		hwirq = 34 + OCTEON_DEBUG_UART;
+
+	irq = irq_create_mapping(NULL, hwirq);
+	if (!irq)
+		return -EINVAL;
+
+
+	if (request_irq(irq, interrupt_debug_char,
+			0, "cvmx-debug", interrupt_debug_char)) {
+		panic("request_irq(%d) failed.", irq);
+	}
+	cvmx_write_csr(CVMX_MIO_UARTX_IER(OCTEON_DEBUG_UART),
+		       cvmx_read_csr(CVMX_MIO_UARTX_IER(OCTEON_DEBUG_UART)) | 1);
+	return 0;
+}
+/* Install this as early as possible to be able to debug the boot
+   sequence.  */
+core_initcall(octeon_setup_debug_uart);
+#endif	/* CONFIG_CAVIUM_GDB */
diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index ac15642..ba4057d 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -49,6 +49,7 @@
 #include <asm/octeon/cvmx-mio-defs.h>
 #include <asm/octeon/cvmx-rst-defs.h>
 #include <asm/octeon/cvmx-sso-defs.h>
+#include <asm/octeon/cvmx-debug.h>
 
 #define SDK_VERSION "3.1.1"
 
-- 
1.9.1

