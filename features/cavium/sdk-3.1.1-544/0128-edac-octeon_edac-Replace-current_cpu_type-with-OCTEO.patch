From 457d32c840e909535739e18d81de7c491f7e23ac Mon Sep 17 00:00:00 2001
From: Bin Jiang <bin.jiang@windriver.com>
Date: Mon, 23 Mar 2015 10:31:36 +0000
Subject: [PATCH 128/132] edac/octeon_edac: Replace current_cpu_type() with
 OCTEON_IS_OCTEON2/OCTEON_IS_OCTEON3()

After insert octeon edac module, there is following calltrace:

BUG: using smp_processor_id() in preemptible [00000000] code: modprobe/1876
caller is $LVL117+0x0/0x18 [octeon_edac_l2c]
CPU: 35 PID: 1876 Comm: modprobe Not tainted 3.14.29ltsi-WR7.0.0.0_cgl #1
Stack : 0000000000000640 ffffffff80a30680 0000000040808000 ffffffff801ec060
0000000000000000 0000000000000000 0000000000000000 0000000000000000
0000000000000000 0000000000000000 0000000000000000 0000000000000000
0000000000000000 0000000000000000 0000000000000000 0000000000000000
0000000000000000 0000000000000000 0000000000000000 ffffffff80f50000
ffffffff80f50000 ffffffff80f4d108 8000000404eb20b8 ffffffff80ca7bf7
ffffffff80b9cab0 ffffffff80f4d108 0000000000000754 0000000000000023
ffffffffc01b15f0 80000003f65638f0 80000003f65639f0 ffffffff80a2a438
80000003f6563a18 ffffffff8018ea50 80000003f6563a50 ffffffff801edc38
8000000404eb1c00 ffffffff8015e9c0 0000000000000023 0000000000000754
...
Call Trace:
[<ffffffff8015e9c0>] show_stack+0xd8/0xf8
[<ffffffff80a2a438>] dump_stack+0x90/0xf8
[<ffffffff806ac3c4>] debug_smp_processor_id+0x104/0x110
[<ffffffffc01b0f58>] $LVL117+0x0/0x18 [octeon_edac_l2c]

The current_cpu_type() function calls smp_processor_id in preemptible and
causes above calltrace.
Replace current_cpu_type() with OCTEON_IS_OCTEON2/OCTEON_IS_OCTEON3().

Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/edac/octeon_edac-l2c.c | 2 +-
 drivers/edac/octeon_edac-pc.c  | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/edac/octeon_edac-l2c.c b/drivers/edac/octeon_edac-l2c.c
index f0e2b61..a017bb6 100644
--- a/drivers/edac/octeon_edac-l2c.c
+++ b/drivers/edac/octeon_edac-l2c.c
@@ -306,7 +306,7 @@ static int octeon_l2c_probe(struct platform_device *pdev)
 		cvmx_write_csr(CVMX_L2T_ERR, l2d_err.u64);
 
 		l2c->edac_check = octeon_l2c_poll_oct1;
-	} else if (current_cpu_type() == CPU_CAVIUM_OCTEON2) {
+	} else if (OCTEON_IS_OCTEON2()) {
 		/* OCTEON II */
 		l2c->edac_check = octeon_l2c_poll_oct2;
 	} else {
diff --git a/drivers/edac/octeon_edac-pc.c b/drivers/edac/octeon_edac-pc.c
index 24cd81c..66a1eaa 100644
--- a/drivers/edac/octeon_edac-pc.c
+++ b/drivers/edac/octeon_edac-pc.c
@@ -49,7 +49,7 @@ static int  co_cache_error_event(struct notifier_block *this,
 		cache_err_dcache[core] = 0;
 		break;
 	case CO_CACHE_ERROR_RECOVERABLE:
-		if (current_cpu_type() == CPU_CAVIUM_OCTEON3)
+		if (OCTEON_IS_OCTEON3())
 			dcache_err = read_octeon_c0_errctl();
 		else
 			dcache_err = read_octeon_c0_dcacheerr();
-- 
1.9.1

