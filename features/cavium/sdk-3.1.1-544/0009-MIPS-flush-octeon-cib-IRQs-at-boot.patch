From 42f7f04c72b893914d0aa288d28041fef34b79c9 Mon Sep 17 00:00:00 2001
From: Peter Swain <peter.swain@cavium.com>
Date: Tue, 31 Dec 2013 17:55:49 -0800
Subject: [PATCH 009/202] MIPS: flush octeon-cib IRQs at boot

OcteonIII's CIB controllers were reporting IRQs left enabled by u-boot,
but with no Linux-assigned handler.
Disable all CIB IRQs & discard pending events during irq-controller
setup, so we never see stale or unhandled events.

Signed-off-by: Peter Swain <peter.swain@cavium.com>
[Original patch taken from Cavium SDK 3.1.1-544]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index b056806..10ed05c 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -2699,7 +2699,10 @@ static irqreturn_t octeon_irq_cib_handler(int my_irq, void *data)
 			continue;
 		irq = irq_find_mapping(cib_domain, i);
 		if (!irq) {
-			pr_err("ERROR: No mapping for cib %d\n", i);
+			pr_err("ERROR: CIB bit %d@%llx IRQ unhandled, disabling\n", i, host_data->raw_reg);
+			en &= ~(1ull << i);
+			cvmx_write_csr(host_data->en_reg, en);
+			cvmx_write_csr(host_data->raw_reg, 1ull << i);
 		} else {
 			struct irq_desc *desc = irq_to_desc(irq);
 			struct irq_data *irq_data = irq_desc_get_irq_data(desc);
@@ -2753,6 +2756,9 @@ static int __init octeon_irq_init_cib(struct device_node *ciu_node,
 	}
 	host_data->max_bits = val;
 
+	cvmx_write_csr(host_data->en_reg, 0); /* disable all IRQs */
+	cvmx_write_csr(host_data->raw_reg, ~0); /* ack any outstanding */
+
 	cib_domain = irq_domain_add_linear(ciu_node, host_data->max_bits,
 					   &octeon_irq_domain_cib_ops,
 					   host_data);
-- 
1.8.2.1

