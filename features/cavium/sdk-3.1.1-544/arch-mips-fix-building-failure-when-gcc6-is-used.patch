From 09d8a267bbf42b34ca7848a3acdd6cb8259bf1a6 Mon Sep 17 00:00:00 2001
From: Roy Li <rongqing.li@windriver.com>
Date: Wed, 29 Jun 2016 13:10:11 +0800
Subject: [PATCH] arch/mips: fix building failure when gcc6 is used

1. fix indentation to kill the warning of misleading-indentation
in setup.c and cvmx-help-pki.c

arch/mips/cavium-octeon/setup.c:1048:3: error: this 'if' clause does not guard... [-Werror=misleading-indentation]
   if (size)

arch/mips/cavium-octeon/executive/cvmx-helper-pki.c: In function 'cvmx_helper_pki_init_port':
arch/mips/cavium-octeon/executive/cvmx-helper-pki.c:1058:4: error: this 'else' clause does not guard... [-Werror=misleading-indentation]
  } else
    ^~~~
2. remove the static variable to kill the warning as error of
unused-const-variable

mips/cavium-octeon/executive/cvmx-helper.c:369:31: error: 'iface_ops_srio' defined but not used [-Werror=unused-const-variable=]
 static const struct iface_ops iface_ops_srio = {

Signed-off-by: Roy Li <rongqing.li@windriver.com>
---
 .../mips/cavium-octeon/executive/cvmx-helper-pki.c |   62 ++++++++++----------
 arch/mips/cavium-octeon/executive/cvmx-helper.c    |   14 -----
 arch/mips/cavium-octeon/setup.c                    |    4 +-
 3 files changed, 33 insertions(+), 47 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-pki.c b/arch/mips/cavium-octeon/executive/cvmx-helper-pki.c
index ebdca57..df30cc0 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-pki.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-pki.c
@@ -1057,37 +1057,37 @@ int cvmx_helper_pki_init_port(int ipd_port, struct cvmx_pki_prt_schd *prtsch)
 		}
 	} else
 		qpg_cfg.port_add = 0;
-		qpg_cfg.aura_num = prtsch->aura_num;
-		qpg_cfg.grp_ok = prtsch->sso_grp;
-		qpg_cfg.grp_bad = prtsch->sso_grp;
-		cvmx_pki_write_qpg_entry(xp.node, prtsch->qpg_base, &qpg_cfg);
-		/* Allocate style here and map it to the port */
-		rs = cvmx_pki_style_alloc(xp.node, prtsch->style);
-		if (rs == CVMX_RESOURCE_ALREADY_RESERVED) {
-			cvmx_dprintf("pki-helper: INFO: style will be shared\n");
-		} else if (rs == CVMX_RESOURCE_ALLOC_FAILED) {
-			cvmx_dprintf("pki-helper: ERROR: style not available\n");
-			return CVMX_RESOURCE_ALLOC_FAILED;
-		} else {
-			prtsch->style = rs;
-			if (pki_helper_debug)
-				cvmx_dprintf("pki-helper:port-init: port %d has style %d\n",
-					ipd_port, prtsch->style);
-			style_cfg = pki_dflt_style[xp.node];
-			style_cfg.parm_cfg.qpg_qos = prtsch->qpg_qos;
-			style_cfg.parm_cfg.qpg_base = prtsch->qpg_base;
-			style_cfg.parm_cfg.qpg_port_msb = 0;
-			style_cfg.parm_cfg.qpg_port_sh = 0;
-			style_cfg.parm_cfg.mbuff_size = mbuff_size;
-			cvmx_pki_write_style_config(xp.node, prtsch->style,
-				CVMX_PKI_CLUSTER_ALL, &style_cfg);
-		}
-		pknd = cvmx_helper_get_pknd(xiface, cvmx_helper_get_interface_index_num(ipd_port));
-		cvmx_pki_read_pkind_config(xp.node, pknd, &pknd_cfg);
-		pknd_cfg.initial_style = prtsch->style;
-		pknd_cfg.fcs_pres = __cvmx_helper_get_has_fcs(xiface);
-		cvmx_pki_write_pkind_config(xp.node, pknd, &pknd_cfg);
-		return 0;
+	qpg_cfg.aura_num = prtsch->aura_num;
+	qpg_cfg.grp_ok = prtsch->sso_grp;
+	qpg_cfg.grp_bad = prtsch->sso_grp;
+	cvmx_pki_write_qpg_entry(xp.node, prtsch->qpg_base, &qpg_cfg);
+	/* Allocate style here and map it to the port */
+	rs = cvmx_pki_style_alloc(xp.node, prtsch->style);
+	if (rs == CVMX_RESOURCE_ALREADY_RESERVED) {
+		cvmx_dprintf("pki-helper: INFO: style will be shared\n");
+	} else if (rs == CVMX_RESOURCE_ALLOC_FAILED) {
+		cvmx_dprintf("pki-helper: ERROR: style not available\n");
+		return CVMX_RESOURCE_ALLOC_FAILED;
+	} else {
+		prtsch->style = rs;
+		if (pki_helper_debug)
+			cvmx_dprintf("pki-helper:port-init: port %d has style %d\n",
+				ipd_port, prtsch->style);
+		style_cfg = pki_dflt_style[xp.node];
+		style_cfg.parm_cfg.qpg_qos = prtsch->qpg_qos;
+		style_cfg.parm_cfg.qpg_base = prtsch->qpg_base;
+		style_cfg.parm_cfg.qpg_port_msb = 0;
+		style_cfg.parm_cfg.qpg_port_sh = 0;
+		style_cfg.parm_cfg.mbuff_size = mbuff_size;
+		cvmx_pki_write_style_config(xp.node, prtsch->style,
+			CVMX_PKI_CLUSTER_ALL, &style_cfg);
+	}
+	pknd = cvmx_helper_get_pknd(xiface, cvmx_helper_get_interface_index_num(ipd_port));
+	cvmx_pki_read_pkind_config(xp.node, pknd, &pknd_cfg);
+	pknd_cfg.initial_style = prtsch->style;
+	pknd_cfg.fcs_pres = __cvmx_helper_get_has_fcs(xiface);
+	cvmx_pki_write_pkind_config(xp.node, pknd, &pknd_cfg);
+	return 0;
 }
 EXPORT_SYMBOL(cvmx_helper_pki_init_port);
 
diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper.c b/arch/mips/cavium-octeon/executive/cvmx-helper.c
index f58d06d..49de255 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper.c
@@ -364,20 +364,6 @@ static const struct iface_ops iface_ops_npi = {
 /**
  * @INTERNAL
  * This structure specifies the interface methods used by interfaces
- * configured as srio.
- */
-static const struct iface_ops iface_ops_srio = {
-	.mode		= CVMX_HELPER_INTERFACE_MODE_SRIO,
-	.enumerate	= __cvmx_helper_srio_probe,
-	.probe		= __cvmx_helper_srio_probe,
-	.enable		= __cvmx_helper_srio_enable,
-	.link_get	= __cvmx_helper_srio_link_get,
-	.link_set	= __cvmx_helper_srio_link_set,
-};
-
-/**
- * @INTERNAL
- * This structure specifies the interface methods used by interfaces
  * configured as agl.
  */
 static const struct iface_ops iface_ops_agl = {
diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index d5c8ad4..bc00d39 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -1045,8 +1045,8 @@ void __init plat_mem_setup(void)
 			 * next to each other if they are received in
 			 * incrementing order
 			 */
-		if (size)
-			add_memory_region(memory, size, BOOT_MEM_RAM);
+			if (size)
+				add_memory_region(memory, size, BOOT_MEM_RAM);
 			total += mem_alloc_size;
 		} else {
 			if (limit_max < ~0ull)
-- 
1.7.5.4

