From 59695065fde1b28ef071c06ae8c933d5bb95aa2f Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 13 Feb 2015 14:09:54 +0530
Subject: [PATCH 058/148] MIPS: OCTEON: Seperate SoC and CPU related config
 items

Commit 86627625fc5bec56177d02d772493190b56c109c from
git://git.yoctoproject.org/linux-yocto-3.14

Segregate SOC and CPU related config items so that if we select
CPU_CAVIUM_OCTEON, we don't get to select SoC support unrelated to the
CPU, those are enabled by CAVIUM_OCTEON_SOC.

It is advantageous to use CONFIG_CAVIUM_OCTEON2 with OCTEON III CPU
cores as they have the same instruction set.  However, OCTEON III
doesn't require the CN63XXP1 workaround, so make it optional.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Abhishek Paliwal <abhishek.paliwal@aricent.com>
---
 arch/mips/cavium-octeon/Kconfig | 25 ++++++++++++-------------
 arch/mips/cavium-octeon/setup.c |  2 +-
 2 files changed, 13 insertions(+), 14 deletions(-)

diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig
index 4c4359b..9efc955 100644
--- a/arch/mips/cavium-octeon/Kconfig
+++ b/arch/mips/cavium-octeon/Kconfig
@@ -1,14 +1,22 @@
 if CPU_CAVIUM_OCTEON
 
+config CAVIUM_OCTEON2
+	bool "Build the kernel to be used only on OCTEON II or OCTEON III processor cores"
+	default "n"
+	help
+	  This option enables the generation of Octeon2 specific
+	  instructions by the compiler, resulting in a kernel that is
+	  more efficient, but that will not run on Octeon and
+	  OcteonPlus processor cores.
+
 config CAVIUM_CN63XXP1
-	bool "Enable CN63XXP1 errata worarounds"
+	bool "Enable CN6XXX DCache prefetch errata workaround"
 	default "n"
 	help
-	  The CN63XXP1 chip requires build time workarounds to
+	  The CN63XXP1 chip require build time workarounds to
 	  function reliably, select this option to enable them.  These
 	  workarounds will cause a slight decrease in performance on
-	  non-CN63XXP1 hardware, so it is recommended to select "n"
-	  unless it is known the workarounds are needed.
+	  non-CN6XXX hardware.
 
 config CAVIUM_OCTEON_EXTRA_CVMSEG
 	int "Number of extra L1 cache lines reserved for CVMSEG memory"
@@ -30,15 +38,6 @@ endif # CPU_CAVIUM_OCTEON
 
 if CAVIUM_OCTEON_SOC
 
-config CAVIUM_OCTEON_2ND_KERNEL
-	bool "Build the kernel to be used as a 2nd kernel on the same chip"
-	default "n"
-	help
-	  This option configures this kernel to be linked at a different
-	  address and use the 2nd uart for output. This allows a kernel built
-	  with this option to be run at the same time as one built without this
-	  option.
-
 config CAVIUM_OCTEON_CVMSEG_SIZE
 	int "Number of L1 cache lines reserved for CVMSEG memory"
 	range 0 54
diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index a23188a..2c20be5 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -611,7 +611,7 @@ void octeon_user_io_init(void)
 
 	/* Setup of CVMSEG is done in kernel-entry-init.h */
 	if (smp_processor_id() == 0)
-		pr_notice("CVMSEG size: %d cache lines (%d bytes)\n",
+		pr_notice("CVMSEG size: %u cache lines (%u bytes)\n",
 			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE,
 			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128);
 
-- 
1.8.2.1

