From 76bc693770782b67d4e0f17c0f5f95180a86d229 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Mon, 2 Jun 2014 15:55:51 -0700
Subject: [PATCH 102/202] netdev: octeon3-ethernet: Use separate PKO pools for
 SSO and PKO.

This is required by PKO-21152.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.1-544]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/net/ethernet/octeon/octeon3-ethernet.c | 23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/octeon/octeon3-ethernet.c b/drivers/net/ethernet/octeon/octeon3-ethernet.c
index ed865d6..b4a0a2e 100644
--- a/drivers/net/ethernet/octeon/octeon3-ethernet.c
+++ b/drivers/net/ethernet/octeon/octeon3-ethernet.c
@@ -89,7 +89,8 @@ struct octeon3_ethernet_node {
 	int next_cpu_irq_affinity;
 	int numa_node;
 	int pki_packet_pool;
-	int sso_pko_pool;
+	int sso_pool;
+	int pko_pool;
 	int sso_aura;
 	int pko_aura;
 	int tx_complete_grp;
@@ -315,8 +316,13 @@ static int octeon3_eth_global_init(unsigned int node)
 		cvmx_write_csr_node(node, CVMX_FPA_AURAX_CNT_LIMIT(i), 0xfffffffffull);
 		cvmx_write_csr_node(node, CVMX_FPA_AURAX_CNT_THRESHOLD(i), 0xffffffffeull);
 	}
-	nd->sso_pko_pool = cvmx_fpa_alloc_pool(-1);
-	if (nd->sso_pko_pool < 0) {
+	nd->sso_pool = cvmx_fpa_alloc_pool(-1);
+	if (nd->sso_pool < 0) {
+		rv = -ENODEV;
+		goto done;
+	}
+	nd->pko_pool = cvmx_fpa_alloc_pool(-1);
+	if (nd->pko_pool < 0) {
 		rv = -ENODEV;
 		goto done;
 	}
@@ -328,13 +334,14 @@ static int octeon3_eth_global_init(unsigned int node)
 	nd->sso_aura = cvmx_fpa3_allocate_aura(node);
 	nd->pko_aura = cvmx_fpa3_allocate_aura(node);
 
-	pr_err("octeon3_eth_global_init  Pool:%d, SSO:%d, PKO:%d\n",
-	       nd->sso_pko_pool, nd->sso_aura, nd->pko_aura);
+	pr_err("octeon3_eth_global_init  SSO:%d:%d, PKO:%d:%d\n",
+	       nd->sso_pool, nd->sso_aura,  nd->pko_pool, nd->pko_aura);
 
-	octeon3_eth_fpa_pool_init(node, nd->sso_pko_pool, 40960);
+	octeon3_eth_fpa_pool_init(node, nd->sso_pool, 40960);
+	octeon3_eth_fpa_pool_init(node, nd->pko_pool, 40960);
 	octeon3_eth_fpa_pool_init(node, nd->pki_packet_pool, 64 * num_packet_buffers);
-	octeon3_eth_fpa_aura_init(node, nd->sso_pko_pool, nd->sso_aura, 20480);
-	octeon3_eth_fpa_aura_init(node, nd->sso_pko_pool, nd->pko_aura, 20480);
+	octeon3_eth_fpa_aura_init(node, nd->sso_pool, nd->sso_aura, 20480);
+	octeon3_eth_fpa_aura_init(node, nd->pko_pool, nd->pko_aura, 20480);
 
 	if (!octeon3_eth_sso_pko_cache) {
 		octeon3_eth_sso_pko_cache = kmem_cache_create("sso_pko", 4096, 128, 0, NULL);
-- 
1.8.2.1

