From 1fc0f58c677e9eb6ef709778413c16e534eddb57 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Mon, 27 Oct 2014 10:52:02 -0700
Subject: [PATCH 195/202] netdev: octeon3-ethernet: Don't set
 PKO_SEND_HDR_S[N2] to 1 in Pass-1 chips

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.1-544]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/net/ethernet/octeon/octeon3-ethernet.c | 12 +++---------
 1 file changed, 3 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/octeon/octeon3-ethernet.c b/drivers/net/ethernet/octeon/octeon3-ethernet.c
index e5c28e1..f8d9796 100644
--- a/drivers/net/ethernet/octeon/octeon3-ethernet.c
+++ b/drivers/net/ethernet/octeon/octeon3-ethernet.c
@@ -273,7 +273,6 @@ static int rx_contexts = 1;
 module_param(rx_contexts, int, S_IRUGO);
 MODULE_PARM_DESC(rx_contexts, "Number of RX threads per port.");
 
-
 static struct octeon3_ethernet_node octeon3_eth_node[OCTEON3_ETH_MAX_NUMA_NODES];
 static struct kmem_cache *octeon3_eth_sso_pko_cache;
 
@@ -641,10 +640,8 @@ static int octeon3_eth_tx_complete_worker(void *data)
 				tx_netdev = work[0];
 				tx_priv = netdev_priv(tx_netdev);
 				if (unlikely(netif_queue_stopped(tx_netdev)) &&
-				    atomic64_read(&tx_priv->tx_backlog) < MAX_TX_QUEUE_DEPTH) {
+				    atomic64_read(&tx_priv->tx_backlog) < MAX_TX_QUEUE_DEPTH)
 					netif_wake_queue(tx_netdev);
-					trace_printk("netif_wake_queue: %s\n", tx_netdev->name);
-				}
 				skb = container_of((void *)work, struct sk_buff, cb);
 				dev_kfree_skb(skb);
 			}
@@ -1276,10 +1273,8 @@ static int octeon3_eth_ndo_init(struct net_device *netdev)
 	netif_carrier_off(netdev);
 
 	netdev->features |=
-#if 0 /* Memory corruption if these are enabled. */
 		NETIF_F_SG |
 		NETIF_F_FRAGLIST |
-#endif
 		NETIF_F_RXCSUM |
 		NETIF_F_LLTX
 #ifndef BROKEN_SIMULATOR_CSUM
@@ -1709,10 +1704,8 @@ static int octeon3_eth_ndo_start_xmit(struct sk_buff *skb, struct net_device *ne
 	if (unlikely(backlog > MAX_TX_QUEUE_DEPTH)) {
 		if (use_tx_queues) {
 			netif_stop_queue(netdev);
-			trace_printk("netif_stop_queue: %s\n", netdev->name);
 		} else {
 			atomic64_dec(&priv->tx_backlog);
-			trace_printk("pko backlog full: %s\n", netdev->name);
 			goto skip_xmit;
 		}
 	}
@@ -1729,7 +1722,8 @@ static int octeon3_eth_ndo_start_xmit(struct sk_buff *skb, struct net_device *ne
 #ifdef __LITTLE_ENDIAN
 	send_hdr.s.le = 1;
 #endif
-/* broken in sim */	send_hdr.s.n2 = 1; /* Don't allocate to L2 */
+	if (!OCTEON_IS_MODEL(OCTEON_CN78XX_PASS1_X))
+		send_hdr.s.n2 = 1; /* Don't allocate to L2 */
 	send_hdr.s.df = 1; /* Don't automatically free to FPA */
 	send_hdr.s.total = skb->len;
 	send_hdr.s.aura = aura;
-- 
1.8.2.1

