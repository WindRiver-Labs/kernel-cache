From f021fde942ac2275ab7d9d7e48e5584ae173017c Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Wed, 26 Sep 2012 16:03:45 +0800
Subject: [PATCH 133/148] MIPS: Octeon: add 8M 32M 128M 512M huge page size
 support

We need the 8M, 32M, 128M, 512M huge page size support
when page size is 4KB

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/Kconfig                | 27 +++++++++++++++++++++++++++
 arch/mips/include/asm/mipsregs.h | 10 +++++-----
 arch/mips/include/asm/page.h     | 14 +++++++++++++-
 3 files changed, 45 insertions(+), 6 deletions(-)

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index 4d4a8a7..40363f9 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -1819,6 +1819,33 @@ config PHYS_LOAD_ADDRESS
 	  The physical load address reflected as the program header
 	  physical address in the kernel ELF image.
 
+choice
+	prompt "Hugetlb Page Size (EXPERIMENTAL)"
+	depends on HUGETLB_PAGE
+	default HUGETLB_PAGE_SIZE_2MB
+
+config HUGETLB_PAGE_SIZE_2MB
+	bool "2MB"
+	depends on !PAGE_SIZE_16KB || !PAGE_SIZE_64KB
+
+config HUGETLB_PAGE_SIZE_8MB
+	bool "8MB"
+	depends on (!PAGE_SIZE_16KB || !PAGE_SIZE_64KB) && EXPERIMENTAL
+
+config HUGETLB_PAGE_SIZE_32MB
+	bool "32MB"
+	depends on !PAGE_SIZE_64KB && EXPERIMENTAL
+
+config HUGETLB_PAGE_SIZE_128MB
+	bool "128MB"
+	depends on !PAGE_SIZE_64KB && EXPERIMENTAL
+
+config HUGETLB_PAGE_SIZE_512MB
+	bool "512MB"
+	depends on EXPERIMENTAL
+
+endchoice
+
 config BOARD_SCACHE
 	bool
 
diff --git a/arch/mips/include/asm/mipsregs.h b/arch/mips/include/asm/mipsregs.h
index 9605d5e..0dc6aae 100644
--- a/arch/mips/include/asm/mipsregs.h
+++ b/arch/mips/include/asm/mipsregs.h
@@ -232,15 +232,15 @@
 /*
  * Default huge tlb size for a given kernel configuration
  */
-#ifdef CONFIG_PAGE_SIZE_4KB
+#if defined(CONFIG_HUGETLB_PAGE_SIZE_2MB)
 #define PM_HUGE_MASK	PM_1M
-#elif defined(CONFIG_PAGE_SIZE_8KB)
+#elif defined(CONFIG_HUGETLB_PAGE_SIZE_8MB)
 #define PM_HUGE_MASK	PM_4M
-#elif defined(CONFIG_PAGE_SIZE_16KB)
+#elif defined(CONFIG_HUGETLB_PAGE_SIZE_32MB)
 #define PM_HUGE_MASK	PM_16M
-#elif defined(CONFIG_PAGE_SIZE_32KB)
+#elif defined(CONFIG_HUGETLB_PAGE_SIZE_128MB)
 #define PM_HUGE_MASK	PM_64M
-#elif defined(CONFIG_PAGE_SIZE_64KB)
+#elif defined(CONFIG_HUGETLB_PAGE_SIZE_512MB)
 #define PM_HUGE_MASK	PM_256M
 #elif defined(CONFIG_MIPS_HUGE_TLB_SUPPORT)
 #error Bad page size configuration for hugetlbfs!
diff --git a/arch/mips/include/asm/page.h b/arch/mips/include/asm/page.h
index 8470cf8..2be264e 100644
--- a/arch/mips/include/asm/page.h
+++ b/arch/mips/include/asm/page.h
@@ -59,7 +59,19 @@ static inline unsigned int page_size_ftlb(unsigned int mmuextdef)
 }
 
 #ifdef CONFIG_MIPS_HUGE_TLB_SUPPORT
-#define HPAGE_SHIFT	(PAGE_SHIFT + PAGE_SHIFT - 3)
+
+#if defined(CONFIG_HUGETLB_PAGE_SIZE_2MB)
+#define HPAGE_SHIFT     21
+#elif defined(CONFIG_HUGETLB_PAGE_SIZE_8MB)
+#define HPAGE_SHIFT     23
+#elif defined(CONFIG_HUGETLB_PAGE_SIZE_32MB)
+#define HPAGE_SHIFT     25
+#elif defined(CONFIG_HUGETLB_PAGE_SIZE_128MB)
+#define HPAGE_SHIFT     27
+#elif defined(CONFIG_HUGETLB_PAGE_SIZE_512MB)
+#define HPAGE_SHIFT     29
+#endif
+
 #define HPAGE_SIZE	(_AC(1,UL) << HPAGE_SHIFT)
 #define HPAGE_MASK	(~(HPAGE_SIZE - 1))
 #define HUGETLB_PAGE_ORDER	(HPAGE_SHIFT - PAGE_SHIFT)
-- 
1.8.2.1

