From 9a0f333ee94c7dc973ee27266384aa0c8b296224 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Wed, 19 Nov 2014 17:46:58 +0800
Subject: [PATCH 2/2] MIPS: trace: Fix trace_hardirqs_on runs in a irq
 disabled context

The commit "MIPS: octeon CONFIG_TRACE_IRQFLAGS balancing" introduces
the following problem:
WARNING: CPU: 33 PID: 1019 at kernel/locking/lockdep.c:2582 syscall_exit_work+0x30/0x44()
DEBUG_LOCKS_WARN_ON(!irqs_disabled())
Modules linked in:
CPU: 33 PID: 1019 Comm: trace-cmd Not tainted 3.14.23-rt9-WR7.0.0.0_preempt-rt #5
Stack : 0000000000000004 0000000000000006 0000000000000000 ffffffff80bc6430
          ffffffff80bc0000 ffffffff801e3a88 ffffffff80bc0000 0000000000000000
          0000000000000000 ffffffff80bc0000 80000003da3dbc50 ffffffff801d57f0
          0000000000000001 ffffffff80bc0000 80000003da3dbc70 ffffffff801e3a88
          0000000000000000 0000000000000001 0000000000000000 0000000000000000
          ffffffff81590000 ffffffff80d79f08 80000000eb9b4838 ffffffff80b4ec77
          ffffffff80a6fe88 ffffffff80d79f08 00000000000003fb 0000000000000021
          000000007f999dff 80000003da3dbbf0 80000003da3dbcf0 ffffffff808a2290
          80000003da3dbd18 ffffffff8016ebac 80000003da3dbd50 ffffffff801e56f8
          80000000eb9b4380 ffffffff8013f908 0000000000000021 00000000000003fb
          ...
Call Trace:
[<ffffffff8013f908>] show_stack+0xd8/0xf8
[<ffffffff808a2290>] dump_stack+0x94/0xf8
[<ffffffff8016e7c4>] warn_slowpath_common+0x9c/0xe8
[<ffffffff8016e85c>] warn_slowpath_fmt+0x4c/0x60
[<ffffffff8013929c>] syscall_exit_work+0x30/0x44

The function trace_hardirqs_on runs in a irq disabled context.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/kernel/entry.S |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/arch/mips/kernel/entry.S b/arch/mips/kernel/entry.S
index 1b6ee6e..a3f8bed 100644
--- a/arch/mips/kernel/entry.S
+++ b/arch/mips/kernel/entry.S
@@ -208,11 +208,12 @@ syscall_exit_work:
 	li	t0, _TIF_WORK_SYSCALL_EXIT
 	and	t0, a2			# a2 is preloaded with TI_FLAGS
 	beqz	t0, work_pending	# trace bit set?
-	local_irq_enable		# could let syscall_trace_leave()
-					# call schedule() instead
+
 #ifdef CONFIG_TRACE_IRQFLAGS
 	jal	trace_hardirqs_on
 #endif
+	local_irq_enable		# could let syscall_trace_leave()
+					# call schedule() instead
 	move	a0, sp
 	jal	syscall_trace_leave
 	b	resume_userspace
-- 
1.7.5.4

