From ded2516f45eeeb9c8ed9894f3f7ce24676584180 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Tue, 29 Apr 2014 15:27:57 -0400
Subject: [PATCH 120/122] watchdog: octeon-wdt: Fix count rate for cn78XX SoC.

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 4d11f03019182d0eedbbb9b4d5fa5f3e4d15f713
Description:

It uses a divisor of 1024.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/watchdog/octeon-wdt-main.c | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/drivers/watchdog/octeon-wdt-main.c b/drivers/watchdog/octeon-wdt-main.c
index 5308a0d..f26c376 100644
--- a/drivers/watchdog/octeon-wdt-main.c
+++ b/drivers/watchdog/octeon-wdt-main.c
@@ -77,6 +77,8 @@
 /* Watchdog interrupt major block number (8 MSBs of intsn) */
 #define WD_BLOCK_NUMBER		0x01
 
+static int counter_shift;
+
 /* The count needed to achieve timeout_sec. */
 static unsigned int timeout_cnt;
 
@@ -548,10 +550,7 @@ static void octeon_wdt_calc_parameters(int t)
 
 	countdown_reset = periods > 2 ? periods - 2 : 0;
 	heartbeat = t;
-	timeout_cnt = ((octeon_get_io_clock_rate() >> 8) * timeout_sec) >> 8;
-	/* cn68XX runs at half that rate.  */
-	if (OCTEON_IS_MODEL(OCTEON_CN68XX))
-		timeout_cnt >>= 1;
+	timeout_cnt = ((octeon_get_io_clock_rate() >> counter_shift) * timeout_sec) >> 8;
 }
 
 static int octeon_wdt_set_heartbeat(int t)
@@ -744,10 +743,17 @@ static int __init octeon_wdt_init(void)
 	int cpu;
 	u64 *ptr;
 
+	if (OCTEON_IS_MODEL(OCTEON_CN68XX))
+		counter_shift = 9;
+	else if (OCTEON_IS_MODEL(OCTEON_CN78XX))
+		counter_shift = 10;
+	else
+		counter_shift = 8;
+
 	/*
 	 * Watchdog time expiration length = The 16 bits of LEN
 	 * represent the most significant bits of a 24 bit decrementer
-	 * that decrements every 256 cycles.
+	 * that decrements every 2^counter_shift cycles.
 	 *
 	 * Try for a timeout of 5 sec, if that fails a smaller number
 	 * of even seconds,
@@ -755,7 +761,7 @@ static int __init octeon_wdt_init(void)
 	max_timeout_sec = 6;
 	do {
 		max_timeout_sec--;
-		timeout_cnt = ((octeon_get_io_clock_rate() >> 8) * max_timeout_sec) >> 8;
+		timeout_cnt = ((octeon_get_io_clock_rate() >> counter_shift) * max_timeout_sec) >> 8;
 	} while (timeout_cnt > 65535);
 
 	BUG_ON(timeout_cnt == 0);
-- 
1.8.2.1

