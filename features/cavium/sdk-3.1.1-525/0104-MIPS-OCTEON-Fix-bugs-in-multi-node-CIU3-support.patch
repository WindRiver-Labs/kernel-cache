From 157df60110ab62dab357b80d7fef8464b59ec151 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Tue, 4 Mar 2014 09:58:44 -0800
Subject: [PATCH 104/122] MIPS/OCTEON: Fix bugs in multi-node CIU3 support.

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 9fc2719dc5b9b6ce5f927905200ec203bbd02fd4
Description:

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c | 23 ++++++++++++++---------
 1 file changed, 14 insertions(+), 9 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index 344993f..868767f 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -2325,7 +2325,8 @@ static unsigned int octeon_irq_ciu3_mbox_intsn_for_core(int core, unsigned int m
 
 static unsigned int octeon_irq_ciu3_mbox_intsn_for_cpu(int cpu, unsigned int mbox)
 {
-	return octeon_irq_ciu3_mbox_intsn_for_core(octeon_coreid_for_cpu(cpu), mbox);
+	int local_core = octeon_coreid_for_cpu(cpu) & 0x3f;
+	return octeon_irq_ciu3_mbox_intsn_for_core(local_core, mbox);
 }
 
 static void octeon_irq_ciu3_mbox(void)
@@ -2482,12 +2483,12 @@ static int octeon_irq_ciu3_alloc_resources(struct octeon_ciu3_info *ciu3_info)
 
 	/* ip2 interrupts for this CPU */
 	cvmx_write_csr(b + CIU3_IDT_CTL(idt_ip2), 0);
-	cvmx_write_csr(b + CIU3_IDT_PP(idt_ip2, 0), 1ull << cvmx_get_core_num());
+	cvmx_write_csr(b + CIU3_IDT_PP(idt_ip2, 0), 1ull << core);
 	cvmx_write_csr(b + CIU3_IDT_IO(idt_ip2), 0);
 
 	/* ip3 interrupts for this CPU */
 	cvmx_write_csr(b + CIU3_IDT_CTL(idt_ip3), 1);
-	cvmx_write_csr(b + CIU3_IDT_PP(idt_ip3, 0), 1ull << cvmx_get_core_num());
+	cvmx_write_csr(b + CIU3_IDT_PP(idt_ip3, 0), 1ull << core);
 	cvmx_write_csr(b + CIU3_IDT_IO(idt_ip3), 0);
 
 	cvmx_write_csr(b + CIU3_IDT_CTL(unused_idt1), 0);
@@ -2584,13 +2585,17 @@ static int __init octeon_irq_init_ciu3(struct device_node *ciu_node,
 		ciu3_info->domain[i] = domain;
 
 	octeon_ciu3_info_per_node[node] = ciu3_info;
-	octeon_irq_ciu3_alloc_resources(ciu3_info);
-	if (node == 0)
-		irq_set_default_host(domain);
 
-	/* Enable the CIU lines */
-	set_c0_status(STATUSF_IP2 | STATUSF_IP3);
-	clear_c0_status(STATUSF_IP4);
+	if (node == cvmx_get_node_num()) {
+		/* Only do per CPU things if it is the CIU of the boot node. */
+		octeon_irq_ciu3_alloc_resources(ciu3_info);
+		if (node == 0)
+			irq_set_default_host(domain);
+
+		/* Enable the CIU lines */
+		set_c0_status(STATUSF_IP2 | STATUSF_IP3);
+		clear_c0_status(STATUSF_IP4);
+	}
 
 	return 0;
 }
-- 
1.8.2.1

