From 5cc958cda0d90694c54043069805bd8a3758ef19 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Mon, 17 Jun 2013 11:35:08 -0700
Subject: [PATCH 047/122] MIPS: OCTEON: Fix local_flush_icache_range

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: e4a08102e4456fbc611274bc754fcf91ba3b992b
Description:

We need a full memory barrier (SYNC) before the iCache invalidation to
ensure that any changes pending in write buffers are flushed before
the iCache has a chance to be reloaded.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/mips/mm/c-octeon.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/mips/mm/c-octeon.c b/arch/mips/mm/c-octeon.c
index f41a5c5..cf207b0 100644
--- a/arch/mips/mm/c-octeon.c
+++ b/arch/mips/mm/c-octeon.c
@@ -42,7 +42,7 @@ static void octeon_flush_data_cache_page(unsigned long addr)
     /* Nothing to do */
 }
 
-static inline void octeon_local_flush_icache(void)
+static void octeon_local_flush_icache(void)
 {
 	asm volatile ("synci 0($0)");
 }
@@ -53,6 +53,7 @@ static inline void octeon_local_flush_icache(void)
 static void local_octeon_flush_icache_range(unsigned long start,
 					    unsigned long end)
 {
+	mb();
 	octeon_local_flush_icache();
 }
 
@@ -64,8 +65,8 @@ static void local_octeon_flush_icache_range(unsigned long start,
  */
 static void octeon_flush_icache_all_cores(struct vm_area_struct *vma)
 {
-	extern void octeon_send_ipi_single(int cpu, unsigned int action);
 #ifdef CONFIG_SMP
+	extern struct plat_smp_ops *mp_ops;	/* private */
 	int cpu;
 	cpumask_t mask;
 #endif
@@ -85,8 +86,7 @@ static void octeon_flush_icache_all_cores(struct vm_area_struct *vma)
 	else
 		mask = *cpu_online_mask;
 	cpumask_clear_cpu(cpu, &mask);
-	for_each_cpu(cpu, &mask)
-		octeon_send_ipi_single(cpu, SMP_ICACHE_FLUSH);
+	mp_ops->send_ipi_mask(&mask, SMP_ICACHE_FLUSH);
 
 	preempt_enable();
 #endif
-- 
1.8.2.1

