From c61b670bbfe3e075a6a3ac7cf18c2c3a98ea0e31 Mon Sep 17 00:00:00 2001
From: Leonid Rosenboim <lrosenboim@caviumnetworks.com>
Date: Thu, 10 Oct 2013 18:21:07 -0700
Subject: [PATCH 078/122] MIPS: Octeon: Hotplug_cpu: Fix available coremask
 printout

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 5a2877b71f8e66c6e0f5497fc94acdc42158e662
Description:

Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Leonid Rosenboim <lrosenboim@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/mips/cavium-octeon/smp.c | 28 ++++++++++++++++++++++------
 1 file changed, 22 insertions(+), 6 deletions(-)

diff --git a/arch/mips/cavium-octeon/smp.c b/arch/mips/cavium-octeon/smp.c
index df5dfbd..bbd499e 100644
--- a/arch/mips/cavium-octeon/smp.c
+++ b/arch/mips/cavium-octeon/smp.c
@@ -171,6 +171,8 @@ static void octeon_hotplug_global_init(void *arg)
 
 	hgp->version = CVMX_HOTPLUG_MAGIC_VERSION;
 
+	cvmx_spinlock_init(&hgp->hotplug_global_lock);
+
 	/* Get legacy LABI data structure for initial parameters */
 	labi = phys_to_virt(LABI_ADDR_IN_BOOTLOADER);
 
@@ -405,29 +407,43 @@ int cvmx_coremask_bmp2str(const cvmx_coremask_t *pcm, char *hexstr)
 {
 	int core;
 	char *p;
-	unsigned int i, n;
+	unsigned int i;
+	unsigned int nibbles;
 	unsigned int num_cores = cvmx_octeon_num_cores();
 	static const char hextab[16] = {
 		'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
 		'a', 'b', 'c', 'd', 'e', 'f'};
 
+	if (num_cores >= CVMX_MIPS_MAX_CORES)
+		return -1;
+
 	p = hexstr;
-	n = 1 + (num_cores >> 2);
 
-	for (i = 0; i <= n; i++)
+	/* round-up num_cores to modulus 4 */
+	num_cores += 3;
+	num_cores &= ~3;
+
+	/* Calculate nibble count */
+	nibbles = num_cores >> 2;
+
+	/* Clear the buffer */
+	for (i = 0; i <= nibbles; i++)
 		p[i] = '\0';
 
+	/* Place core bits into nibbles, 4 bits per nibble */
 	for (core = num_cores - 1; core >= 0; core--) {
 		if (cvmx_coremask_is_core_set(pcm, core))
-			p[n - (core>>2)] |= 1 << (core & 3);
+			p[nibbles - (core>>2) - 1] |= 1 << (core & 3);
 	}
 
-	for (i = 0; i <= n; i++)
+	/* Convert each nibble into a hex char */
+	for (i = 0; i < nibbles; i++)
 		p[i] = hextab[p[i] & 0xf];
 
 	p[i] = '\0';
 
-	return n+1;
+	/* return the number if buffer bytes touched */
+	return nibbles+1;
 }
 
 static int octeon_cpu_disable(void)
-- 
1.8.2.1

