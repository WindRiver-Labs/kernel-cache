From 03e0e32f67e3697952dd700147b92bd69a48e379 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Tue, 30 Jul 2013 15:00:08 -0700
Subject: [PATCH 183/518] MIPS: OCTEON: Update S.E. to r86552

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 46ac7c60812c262e4f05ebd1b5566640c013d819
Description:

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/cavium-octeon/executive/cvmx-clock.c     | 22 +++++++++++++++++++---
 .../cavium-octeon/executive/cvmx-helper-board.c    |  1 +
 .../mips/cavium-octeon/executive/cvmx-helper-ilk.c |  4 ----
 3 files changed, 20 insertions(+), 7 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/cvmx-clock.c b/arch/mips/cavium-octeon/executive/cvmx-clock.c
index aebb4a5..a5d484c 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-clock.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-clock.c
@@ -1,5 +1,5 @@
 /***********************license start***************
- * Copyright (c) 2003-2010  Cavium Inc. (support@cavium.com). All rights
+ * Copyright (c) 2003-2013  Cavium Inc. (support@cavium.com). All rights
  * reserved.
  *
  *
@@ -53,8 +53,12 @@
 #include <asm/octeon/cvmx-pexp-defs.h>
 #include <asm/octeon/cvmx-dbg-defs.h>
 #include <asm/octeon/cvmx-rst-defs.h>
+#elif defined(CVMX_BUILD_FOR_UBOOT)
+#include <asm/arch/cvmx.h>
+#include <asm/arch/cvmx-access.h>
 #else
 #include "cvmx.h"
+#include "cvmx-access.h"
 #endif
 
 #ifndef CVMX_BUILD_FOR_UBOOT
@@ -66,10 +70,11 @@ static uint64_t rate_dclk = 0;
 /**
  * Get clock rate based on the clock type.
  *
+ * @param node  - CPU node number
  * @param clock - Enumeration of the clock type.
  * @return      - return the clock rate.
  */
-uint64_t cvmx_clock_get_rate(cvmx_clock_t clock)
+uint64_t cvmx_clock_get_rate_node(int node, cvmx_clock_t clock)
 {
 	const uint64_t REF_CLOCK = 50000000;
 
@@ -90,7 +95,7 @@ uint64_t cvmx_clock_get_rate(cvmx_clock_t clock)
 			rate_sclk = rate_eclk;
 		} else if (OCTEON_IS_OCTEON3()) {
 			cvmx_rst_boot_t rst_boot;
-			rst_boot.u64 = cvmx_read_csr(CVMX_RST_BOOT);
+			rst_boot.u64 = cvmx_read_csr_node(node, CVMX_RST_BOOT);
 			rate_eclk = REF_CLOCK * rst_boot.s.c_mul;
 			rate_sclk = REF_CLOCK * rst_boot.s.pnr_mul;
 		} else if (octeon_has_feature(OCTEON_FEATURE_PCIE)) {
@@ -128,4 +133,15 @@ uint64_t cvmx_clock_get_rate(cvmx_clock_t clock)
 	return 0;
 }
 
+EXPORT_SYMBOL(cvmx_clock_get_rate_node);
+
+uint64_t cvmx_clock_get_rate(cvmx_clock_t clock)
+{
+#if !defined(CVMX_BUILD_FOR_LINUX_HOST)
+	return cvmx_clock_get_rate_node(cvmx_get_node_num(), clock);
+#else
+	return cvmx_clock_get_rate_node(0, clock);
+#endif
+}
+
 EXPORT_SYMBOL(cvmx_clock_get_rate);
diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-board.c b/arch/mips/cavium-octeon/executive/cvmx-helper-board.c
index 6db7d39..9c73d02 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-board.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-board.c
@@ -1880,6 +1880,7 @@ cvmx_helper_board_usb_clock_types_t __cvmx_helper_board_usb_get_clock_type(void)
 	case CVMX_BOARD_TYPE_LANAI2_U:
 	case CVMX_BOARD_TYPE_LANAI2_G:
 	case CVMX_BOARD_TYPE_NIC10E_66:
+	case CVMX_BOARD_TYPE_UBNT_E100:
 		return USB_CLOCK_TYPE_CRYSTAL_12;
 	case CVMX_BOARD_TYPE_NIC10E:
 		return USB_CLOCK_TYPE_REF_12;
diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-ilk.c b/arch/mips/cavium-octeon/executive/cvmx-helper-ilk.c
index eff5c58..dbb6cf9 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-ilk.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-ilk.c
@@ -166,7 +166,6 @@ void __cvmx_ilk_write_tx_cal_entry(int			interface,
 	int			entry;
 	int			window;
 	int			window_entry;
-#if 1
 
 	/*
 	 * The calendar has 288 entries. Each calendar entry represents a
@@ -241,7 +240,6 @@ void __cvmx_ilk_write_tx_cal_entry(int			interface,
 	/* Write the window new value */
 	cvmx_write_csr(CVMX_ILK_TXX_MEM_CAL0(interface), tx_cal0.u64);
 	cvmx_write_csr(CVMX_ILK_TXX_MEM_CAL1(interface), tx_cal1.u64);
-#endif
 }
 
 /**
@@ -256,7 +254,6 @@ void __cvmx_ilk_write_rx_cal_entry(int			interface,
 				   int			channel,
 				   unsigned char	pipe)
 {
-#if 1
 	cvmx_ilk_rxx_idx_cal_t	rx_idx;
 	cvmx_ilk_rxx_mem_cal0_t	rx_cal0;
 	cvmx_ilk_rxx_mem_cal1_t	rx_cal1;
@@ -337,7 +334,6 @@ void __cvmx_ilk_write_rx_cal_entry(int			interface,
 	/* Write the window new value */
 	cvmx_write_csr(CVMX_ILK_RXX_MEM_CAL0(interface), rx_cal0.u64);
 	cvmx_write_csr(CVMX_ILK_RXX_MEM_CAL1(interface), rx_cal1.u64);
-#endif
 }
 
 /**
-- 
1.9.1

