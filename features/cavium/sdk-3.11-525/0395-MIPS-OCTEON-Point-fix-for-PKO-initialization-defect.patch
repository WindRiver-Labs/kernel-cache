From c482b825b310ba30e7017b2fb2a88b7ed87465cf Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 28 Feb 2014 14:52:36 -0800
Subject: [PATCH 395/518] MIPS/OCTEON: Point fix for PKO initialization defect.

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 3f2ec0457f7057311f257989e37ec2640367ea68
Description:

Set PKO_REG_QUEUE_MODE to proper value.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../mips/cavium-octeon/executive/cvmx-helper-cfg.c | 22 +++++++---------------
 arch/mips/cavium-octeon/executive/cvmx-pko.c       | 12 +-----------
 2 files changed, 8 insertions(+), 26 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-cfg.c b/arch/mips/cavium-octeon/executive/cvmx-helper-cfg.c
index ca9dbeb..ff60dde1 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-cfg.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-cfg.c
@@ -89,6 +89,7 @@ CVMX_SHARED struct cvmx_cfg_port_param cvmx_cfg_port[CVMX_HELPER_MAX_IFACE][CVMX
 /*
  * Indexed by the pko_port number
  */
+static CVMX_SHARED int __cvmx_cfg_pko_highest_queue;
 CVMX_SHARED struct cvmx_cfg_pko_port_param cvmx_pko_queue_table [CVMX_HELPER_CFG_MAX_PKO_PORT] =
 {[0 ... CVMX_HELPER_CFG_MAX_PKO_PORT - 1] = {CVMX_HELPER_CFG_INVALID_VALUE,CVMX_HELPER_CFG_INVALID_VALUE}};
 
@@ -166,21 +167,7 @@ int __cvmx_helper_cfg_pko_queue_base(int pko_port)
 
 int __cvmx_helper_cfg_pko_max_queue(void)
 {
-	int i;
-
-	i = CVMX_HELPER_CFG_MAX_PKO_PORT - 1;
-
-	while (i >= 0) {
-		if (cvmx_pko_queue_table[i].ccppp_queue_base != CVMX_HELPER_CFG_INVALID_VALUE) {
-			cvmx_helper_cfg_assert(cvmx_pko_queue_table[i].ccppp_num_queues > 0);
-			return (cvmx_pko_queue_table[i].ccppp_queue_base + cvmx_pko_queue_table[i].ccppp_num_queues);
-		}
-		i--;
-	}
-	cvmx_pko_queue_show();
-	cvmx_helper_cfg_assert(0);	/* shouldn't get here */
-
-	return 0;
+	return __cvmx_cfg_pko_highest_queue;
 }
 
 int __cvmx_helper_cfg_pko_max_engine(void)
@@ -308,6 +295,7 @@ int init_cvmx_pko_que_range(void)
 int cvmx_pko_queue_alloc(uint64_t port, uint64_t count)
 {
     int ret_val = -1;
+    int highest_queue;
 
     init_cvmx_pko_que_range();
     if (port >= CVMX_HELPER_CFG_MAX_PKO_QUEUES) {
@@ -320,6 +308,10 @@ int cvmx_pko_queue_alloc(uint64_t port, uint64_t count)
         return ret_val;
     cvmx_pko_queue_table[port].ccppp_queue_base = ret_val;
     cvmx_pko_queue_table[port].ccppp_num_queues = count;
+
+    highest_queue = ret_val + count - 1;
+    if (highest_queue > __cvmx_cfg_pko_highest_queue)
+	    __cvmx_cfg_pko_highest_queue = highest_queue;
     return 0;
 }
 
diff --git a/arch/mips/cavium-octeon/executive/cvmx-pko.c b/arch/mips/cavium-octeon/executive/cvmx-pko.c
index 253a97e..ef78318 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-pko.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-pko.c
@@ -555,17 +555,7 @@ void cvmx_pko_initialize_global(void)
 	if (OCTEON_IS_MODEL(OCTEON_CN38XX) || OCTEON_IS_MODEL(OCTEON_CN58XX) ||
 	    OCTEON_IS_MODEL(OCTEON_CN56XX) || OCTEON_IS_MODEL(OCTEON_CN52XX) ||
 	    OCTEON_IS_OCTEON2() || OCTEON_IS_MODEL(OCTEON_CN70XX)) {
-		int num_interfaces;
-		int last_port;
-		int max_queues;
-
-		if (octeon_has_feature(OCTEON_FEATURE_PKND)) {
-			max_queues = __cvmx_helper_cfg_pko_max_queue();
-		} else {
-			num_interfaces = cvmx_helper_get_number_of_interfaces();
-			last_port = cvmx_helper_get_last_ipd_port(num_interfaces - 1);
-			max_queues = cvmx_pko_get_base_queue(last_port) + cvmx_pko_get_num_queues(last_port);
-		}
+		int max_queues = __cvmx_helper_cfg_pko_max_queue();
 
 		if (OCTEON_IS_MODEL(OCTEON_CN38XX)) {
 			if (max_queues <= 32)
-- 
1.9.1

