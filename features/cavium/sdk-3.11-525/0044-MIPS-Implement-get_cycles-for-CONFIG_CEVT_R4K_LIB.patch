From d18a7ecc6e8caab3f513edbab529484c01591e26 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Thu, 16 Aug 2012 17:50:47 -0700
Subject: [PATCH 044/518] MIPS: Implement get_cycles() for CONFIG_CEVT_R4K_LIB

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 37ecc17d2b31b8ab84387a572b5f47a75a5baae2
Description:

Any kernel configured with CEVT_R4K_LIB will have a working
read_c0_count(), so we use it to implement get_cycles().

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/timex.h | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/arch/mips/include/asm/timex.h b/arch/mips/include/asm/timex.h
index 6529704..83f5504 100644
--- a/arch/mips/include/asm/timex.h
+++ b/arch/mips/include/asm/timex.h
@@ -28,14 +28,18 @@
  * But this only means we'll force a reschedule every 8 seconds or so,
  * which isn't an evil thing.
  *
- * We know that all SMP capable CPUs have cycle counters.
+ * We know that all CONFIG_CEVT_R4K_LIB kernels support cycle counters.
  */
 
 typedef unsigned int cycles_t;
 
 static inline cycles_t get_cycles(void)
 {
+#ifdef CONFIG_CEVT_R4K_LIB
+	return read_c0_count();
+#else
 	return 0;
+#endif
 }
 
 #endif /* __KERNEL__ */
-- 
1.9.1

