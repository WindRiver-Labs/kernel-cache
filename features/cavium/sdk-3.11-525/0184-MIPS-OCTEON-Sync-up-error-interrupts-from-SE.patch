From f52ac6af0842e2ed9fc347454ebbd720b907dd68 Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Wed, 31 Jul 2013 14:18:50 -0700
Subject: [PATCH 184/518] MIPS:OCTEON: Sync up error interrupts from SE.

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: e80a73d1143361da471863b7cf4087c59fd49a87
Description:

Update to work on cn70xx.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../cavium-octeon/executive/cvmx-error-trees.c     | 895 +++++++++++++++++++--
 arch/mips/cavium-octeon/octeon-error-tree.c        |   1 +
 2 files changed, 835 insertions(+), 61 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/cvmx-error-trees.c b/arch/mips/cavium-octeon/executive/cvmx-error-trees.c
index 074cec2..e5ea2cf 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-error-trees.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-error-trees.c
@@ -1985,14 +1985,6 @@ static struct cvmx_error_muxchild error_tree_cn63xxp1 =
 							{0}},
 						NULL /*cvmx_error_childbit*/
 					},
-					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
-							{0}},
-						NULL /*cvmx_error_childbit*/
-					},
 					{0}}},
 				{1, 19 /* nand */, (struct cvmx_error_muxchild[]){
 					{CVMX_ADD_IO_SEG(0x0001070001000020ull) /* CVMX_NDF_INT */, CVMX_ADD_IO_SEG(0x0001070001000028ull) /* CVMX_NDF_INT_EN */, (struct cvmx_error_regbit[]){
@@ -2039,6 +2031,16 @@ static struct cvmx_error_muxchild error_tree_cn63xxp1 =
 						NULL /*cvmx_error_childbit*/
 					},
 					{0}}},
+				{1, 63 /* rst */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
 				{1, 21 /* iob */, (struct cvmx_error_muxchild[]){
 					{CVMX_ADD_IO_SEG(0x00011800F0000058ull) /* CVMX_IOB_INT_SUM */, CVMX_ADD_IO_SEG(0x00011800F0000060ull) /* CVMX_IOB_INT_ENB */, (struct cvmx_error_regbit[]){
 							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "IOB_INT_SUM[NP_SOP]"},
@@ -3682,6 +3684,768 @@ static struct cvmx_error_muxchild error_tree_cn56xx =
 			{0}}},
 		{0}}
 	};
+static struct cvmx_error_muxchild error_tree_cn70xx =
+	{0x0000000000000000ull /* CVMX_ROOT */, 0, NULL /* cvmx_error_regbit */, (struct cvmx_error_childbit[]){
+		{1, 0 /* root */, (struct cvmx_error_muxchild[]){
+			{CVMX_ADD_IO_SEG(0x0001070000000000ull) + ((0) & 63) * 8 /* CVMX_CIU_INTX_SUM0(0) */, 0, (struct cvmx_error_regbit[]){
+					{1, 1, CVMX_ERROR_GROUP_INTERNAL, 16, 0, "CIU_INTX_SUM0(0)[GPIO]"},
+					{0}},
+				(struct cvmx_error_childbit[]){
+				{1, 60 /* powiq */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001670000000238ull) /* CVMX_POW_IQ_INT */, CVMX_ADD_IO_SEG(0x0001670000000240ull) /* CVMX_POW_IQ_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "POW_IQ_INT[IQ_INT]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 51 /* sum2 */, (struct cvmx_error_muxchild[]){
+					{0}}},
+				{1, 57 /* pcm */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001070000010028ull) + ((0) & 3) * 16384 /* CVMX_PCMX_INT_SUM(0) */, CVMX_ADD_IO_SEG(0x0001070000010020ull) + ((0) & 3) * 16384 /* CVMX_PCMX_INT_ENA(0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "PCMX_INT_SUM(0)[FSYNCMISSED]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "PCMX_INT_SUM(0)[FSYNCEXTRA]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "PCMX_INT_SUM(0)[TXEMPTY]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "PCMX_INT_SUM(0)[RXOVF]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001070000010028ull) + ((1) & 3) * 16384 /* CVMX_PCMX_INT_SUM(1) */, CVMX_ADD_IO_SEG(0x0001070000010020ull) + ((1) & 3) * 16384 /* CVMX_PCMX_INT_ENA(1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "PCMX_INT_SUM(1)[FSYNCMISSED]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "PCMX_INT_SUM(1)[FSYNCEXTRA]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "PCMX_INT_SUM(1)[TXEMPTY]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "PCMX_INT_SUM(1)[RXOVF]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001070000010028ull) + ((2) & 3) * 16384 /* CVMX_PCMX_INT_SUM(2) */, CVMX_ADD_IO_SEG(0x0001070000010020ull) + ((2) & 3) * 16384 /* CVMX_PCMX_INT_ENA(2) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "PCMX_INT_SUM(2)[FSYNCMISSED]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "PCMX_INT_SUM(2)[FSYNCEXTRA]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "PCMX_INT_SUM(2)[TXEMPTY]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "PCMX_INT_SUM(2)[RXOVF]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001070000010028ull) + ((3) & 3) * 16384 /* CVMX_PCMX_INT_SUM(3) */, CVMX_ADD_IO_SEG(0x0001070000010020ull) + ((3) & 3) * 16384 /* CVMX_PCMX_INT_ENA(3) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "PCMX_INT_SUM(3)[FSYNCMISSED]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "PCMX_INT_SUM(3)[FSYNCEXTRA]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "PCMX_INT_SUM(3)[TXEMPTY]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "PCMX_INT_SUM(3)[RXOVF]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{0}}
+			},
+			{CVMX_ADD_IO_SEG(0x0001070000008000ull) + ((0) & 3) * 8 /* CVMX_CIU_SUM1_PPX_IP2(0) */, 0, NULL /* cvmx_error_regbit */, (struct cvmx_error_childbit[]){
+				{1, 48 /* pem0 */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011800C0000428ull) + ((0) & 3) * 0x1000000ull /* CVMX_PEMX_INT_SUM(0) */, CVMX_ADD_IO_SEG(0x00011800C0000430ull) + ((0) & 3) * 0x1000000ull /* CVMX_PEMX_INT_ENB(0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_PCI, 1, 0, "PEMX_INT_SUM(0)[SE]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 4, 0, "PEMX_INT_SUM(0)[UP_B1]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 5, 0, "PEMX_INT_SUM(0)[UP_B2]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 6, 0, "PEMX_INT_SUM(0)[UP_BX]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 7, 0, "PEMX_INT_SUM(0)[UN_B1]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 8, 0, "PEMX_INT_SUM(0)[UN_B2]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 9, 0, "PEMX_INT_SUM(0)[UN_BX]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 11, 0, "PEMX_INT_SUM(0)[RDLK]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 12, 0, "PEMX_INT_SUM(0)[CRS_ER]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 13, 0, "PEMX_INT_SUM(0)[CRS_DR]"},
+							{0}},
+						(struct cvmx_error_childbit[]){
+						{1, 10 /* exc */, (struct cvmx_error_muxchild[]){
+							{CVMX_ADD_IO_SEG(0x00011800C00000D0ull) + ((0) & 3) * 0x1000000ull /* CVMX_PEMX_DBG_INFO(0) */, CVMX_ADD_IO_SEG(0x00011800C00000A0ull) + ((0) & 3) * 0x1000000ull /* CVMX_PEMX_DBG_INFO_EN(0) */, (struct cvmx_error_regbit[]){
+									{1, 1, CVMX_ERROR_GROUP_PCI, 0, 0, "PEMX_DBG_INFO(0)[SPOISON]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 2, 0, "PEMX_DBG_INFO(0)[RTLPLLE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 3, 0, "PEMX_DBG_INFO(0)[RECRCE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 4, 0, "PEMX_DBG_INFO(0)[RPOISON]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 5, 0, "PEMX_DBG_INFO(0)[RCEMRC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 6, 0, "PEMX_DBG_INFO(0)[RNFEMRC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 7, 0, "PEMX_DBG_INFO(0)[RFEMRC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 8, 0, "PEMX_DBG_INFO(0)[RPMERC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 9, 0, "PEMX_DBG_INFO(0)[RPTAMRC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 10, 0, "PEMX_DBG_INFO(0)[RUMEP]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 11, 0, "PEMX_DBG_INFO(0)[RVDM]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 12, 0, "PEMX_DBG_INFO(0)[ACTO]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 13, 0, "PEMX_DBG_INFO(0)[RTE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 14, 0, "PEMX_DBG_INFO(0)[MRE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 15, 0, "PEMX_DBG_INFO(0)[RDWDLE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 16, 0, "PEMX_DBG_INFO(0)[RTWDLE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 17, 0, "PEMX_DBG_INFO(0)[DPEOOSD]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 18, 0, "PEMX_DBG_INFO(0)[FCPVWT]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 19, 0, "PEMX_DBG_INFO(0)[RPE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 20, 0, "PEMX_DBG_INFO(0)[FCUV]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 21, 0, "PEMX_DBG_INFO(0)[RQO]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 22, 0, "PEMX_DBG_INFO(0)[RAUC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 23, 0, "PEMX_DBG_INFO(0)[RACUR]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 24, 0, "PEMX_DBG_INFO(0)[RACCA]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 25, 0, "PEMX_DBG_INFO(0)[CAAR]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 26, 0, "PEMX_DBG_INFO(0)[RARWDNS]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 27, 0, "PEMX_DBG_INFO(0)[RAMTLP]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 28, 0, "PEMX_DBG_INFO(0)[RACPP]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 29, 0, "PEMX_DBG_INFO(0)[RAWWPP]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 30, 0, "PEMX_DBG_INFO(0)[ECRC_E]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 31, 0, "PEMX_DBG_INFO(0)[RTRY_PE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 32, 0, "PEMX_DBG_INFO(0)[HDRQ_PE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 33, 0, "PEMX_DBG_INFO(0)[DATQ_PE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 34, 0, "PEMX_DBG_INFO(0)[P_D_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 35, 0, "PEMX_DBG_INFO(0)[P_D_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 36, 0, "PEMX_DBG_INFO(0)[P_C_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 37, 0, "PEMX_DBG_INFO(0)[P_C_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 38, 0, "PEMX_DBG_INFO(0)[N_D_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 39, 0, "PEMX_DBG_INFO(0)[N_D_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 40, 0, "PEMX_DBG_INFO(0)[N_C_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 41, 0, "PEMX_DBG_INFO(0)[N_C_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 42, 0, "PEMX_DBG_INFO(0)[C_D_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 43, 0, "PEMX_DBG_INFO(0)[C_D_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 44, 0, "PEMX_DBG_INFO(0)[C_C_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 45, 0, "PEMX_DBG_INFO(0)[C_C_DBE]"},
+									{0}},
+								NULL /*cvmx_error_childbit*/
+							},
+							{0}}},
+						{0}}
+					},
+					{0}}},
+				{1, 46 /* agl */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011800E0000518ull) /* CVMX_AGL_GMX_BAD_REG */, 0, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_MGMT_PORT, 32, 0, "AGL_GMX_BAD_REG[OVRFLW]"},
+							{1, 1, CVMX_ERROR_GROUP_MGMT_PORT, 33, 0, "AGL_GMX_BAD_REG[TXPOP]"},
+							{1, 1, CVMX_ERROR_GROUP_MGMT_PORT, 34, 0, "AGL_GMX_BAD_REG[TXPSH]"},
+							{1, 1, CVMX_ERROR_GROUP_MGMT_PORT, 2, 0, "AGL_GMX_BAD_REG[OUT_OVR]"},
+							{1, 1, CVMX_ERROR_GROUP_MGMT_PORT, 22, 0, "AGL_GMX_BAD_REG[LOSTSTAT]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800E0000000ull) + ((0) & 0) * 2048 /* CVMX_AGL_GMX_RXX_INT_REG(0) */, CVMX_ADD_IO_SEG(0x00011800E0000008ull) + ((0) & 0) * 2048 /* CVMX_AGL_GMX_RXX_INT_EN(0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_MGMT_PORT, 8, 0, "AGL_GMX_RXX_INT_REG(0)[SKPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_MGMT_PORT, 10, 0, "AGL_GMX_RXX_INT_REG(0)[OVRERR]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800E0000500ull) /* CVMX_AGL_GMX_TX_INT_REG */, CVMX_ADD_IO_SEG(0x00011800E0000508ull) /* CVMX_AGL_GMX_TX_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_MGMT_PORT, 0, 0, "AGL_GMX_TX_INT_REG[PKO_NXA]"},
+							{1, 1, CVMX_ERROR_GROUP_MGMT_PORT, 2, 0, "AGL_GMX_TX_INT_REG[UNDFLW]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 22 /* fpa */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180028000040ull) /* CVMX_FPA_INT_SUM */, CVMX_ADD_IO_SEG(0x0001180028000048ull) /* CVMX_FPA_INT_ENB */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "FPA_INT_SUM[FED0_SBE]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "FPA_INT_SUM[FED0_DBE]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 2, 0, "FPA_INT_SUM[FED1_SBE]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "FPA_INT_SUM[FED1_DBE]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 4, 0, "FPA_INT_SUM[Q0_UND]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 5, 0, "FPA_INT_SUM[Q0_COFF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "FPA_INT_SUM[Q0_PERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "FPA_INT_SUM[Q1_UND]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "FPA_INT_SUM[Q1_COFF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "FPA_INT_SUM[Q1_PERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 10, 0, "FPA_INT_SUM[Q2_UND]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 11, 0, "FPA_INT_SUM[Q2_COFF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 12, 0, "FPA_INT_SUM[Q2_PERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 13, 0, "FPA_INT_SUM[Q3_UND]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 14, 0, "FPA_INT_SUM[Q3_COFF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 15, 0, "FPA_INT_SUM[Q3_PERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 16, 0, "FPA_INT_SUM[Q4_UND]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 17, 0, "FPA_INT_SUM[Q4_COFF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 18, 0, "FPA_INT_SUM[Q4_PERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 19, 0, "FPA_INT_SUM[Q5_UND]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 20, 0, "FPA_INT_SUM[Q5_COFF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 21, 0, "FPA_INT_SUM[Q5_PERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 22, 0, "FPA_INT_SUM[Q6_UND]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 23, 0, "FPA_INT_SUM[Q6_COFF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 24, 0, "FPA_INT_SUM[Q6_PERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 25, 0, "FPA_INT_SUM[Q7_UND]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 26, 0, "FPA_INT_SUM[Q7_COFF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 27, 0, "FPA_INT_SUM[Q7_PERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 28, 0, "FPA_INT_SUM[POOL0TH]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 29, 0, "FPA_INT_SUM[POOL1TH]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 30, 0, "FPA_INT_SUM[POOL2TH]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 31, 0, "FPA_INT_SUM[POOL3TH]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 32, 0, "FPA_INT_SUM[POOL4TH]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 33, 0, "FPA_INT_SUM[POOL5TH]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 34, 0, "FPA_INT_SUM[POOL6TH]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 35, 0, "FPA_INT_SUM[POOL7TH]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 36, 0, "FPA_INT_SUM[FREE0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 37, 0, "FPA_INT_SUM[FREE1]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 38, 0, "FPA_INT_SUM[FREE2]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 39, 0, "FPA_INT_SUM[FREE3]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 40, 0, "FPA_INT_SUM[FREE4]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 41, 0, "FPA_INT_SUM[FREE5]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 42, 0, "FPA_INT_SUM[FREE6]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 43, 0, "FPA_INT_SUM[FREE7]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 49, 0, "FPA_INT_SUM[PADDR_E]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 20 /* mio */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011800000000A0ull) /* CVMX_MIO_BOOT_ERR */, CVMX_ADD_IO_SEG(0x00011800000000A8ull) /* CVMX_MIO_BOOT_INT */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_BOOT_ERR[ADR_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_BOOT_ERR[WAIT_ERR]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 25 /* ipd */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00014F0000000168ull) /* CVMX_IPD_INT_SUM */, CVMX_ADD_IO_SEG(0x00014F0000000160ull) /* CVMX_IPD_INT_ENB */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "IPD_INT_SUM[PRC_PAR0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "IPD_INT_SUM[PRC_PAR1]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 2, 0, "IPD_INT_SUM[PRC_PAR2]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "IPD_INT_SUM[PRC_PAR3]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 4, 0, "IPD_INT_SUM[BP_SUB]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 5, 0, "IPD_INT_SUM[DC_OVR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "IPD_INT_SUM[CC_OVR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "IPD_INT_SUM[C_COLL]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "IPD_INT_SUM[D_COLL]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "IPD_INT_SUM[BC_OVR]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 52 /* lmc0 */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011800880001F0ull) + ((0) & 0) * 0x1000000ull /* CVMX_LMCX_INT(0) */, CVMX_ADD_IO_SEG(0x00011800880001E8ull) + ((0) & 0) * 0x1000000ull /* CVMX_LMCX_INT_EN(0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_LMC, 1, 0, "LMCX_INT(0)[SEC_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_LMC, 0, 0, "LMCX_INT(0)[NXM_WR_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_LMC, 5, 0, "LMCX_INT(0)[DED_ERR]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 36 /* agx0 */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180008000518ull) + ((0) & 1) * 0x8000000ull /* CVMX_GMXX_BAD_REG(0) */, 0, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 0, "GMXX_BAD_REG(0)[OUT_OVR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 0, "GMXX_BAD_REG(0)[LOSTSTAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 0, "GMXX_BAD_REG(0)[STATOVR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 0, "GMXX_BAD_REG(0)[INB_NXA]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000000ull) + (((0) & 3) + ((0) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_REG(0,0) */, CVMX_ADD_IO_SEG(0x0001180008000008ull) + (((0) & 3) + ((0) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_EN(0,0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 0, "GMXX_RXX_INT_REG(0,0)[CAREXT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 0, "GMXX_RXX_INT_REG(0,0)[SKPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 0, "GMXX_RXX_INT_REG(0,0)[OVRERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 0, "GMXX_RXX_INT_REG(0,0)[LOC_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 21, 0, "GMXX_RXX_INT_REG(0,0)[REM_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 0, "GMXX_RXX_INT_REG(0,0)[BAD_SEQ]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 23, 0, "GMXX_RXX_INT_REG(0,0)[BAD_TERM]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 24, 0, "GMXX_RXX_INT_REG(0,0)[UNSOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 25, 0, "GMXX_RXX_INT_REG(0,0)[UNEOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 0, "GMXX_RXX_INT_REG(0,0)[UNDAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 0, "GMXX_RXX_INT_REG(0,0)[HG2FLD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 28, 0, "GMXX_RXX_INT_REG(0,0)[HG2CC]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 29, 0, "GMXX_RXX_INT_REG(0,0)[WOL]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000000ull) + (((1) & 3) + ((0) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_REG(1,0) */, CVMX_ADD_IO_SEG(0x0001180008000008ull) + (((1) & 3) + ((0) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_EN(1,0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 1, "GMXX_RXX_INT_REG(1,0)[CAREXT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 1, "GMXX_RXX_INT_REG(1,0)[SKPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 1, "GMXX_RXX_INT_REG(1,0)[OVRERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 1, "GMXX_RXX_INT_REG(1,0)[LOC_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 21, 1, "GMXX_RXX_INT_REG(1,0)[REM_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 1, "GMXX_RXX_INT_REG(1,0)[BAD_SEQ]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 23, 1, "GMXX_RXX_INT_REG(1,0)[BAD_TERM]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 24, 1, "GMXX_RXX_INT_REG(1,0)[UNSOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 25, 1, "GMXX_RXX_INT_REG(1,0)[UNEOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 1, "GMXX_RXX_INT_REG(1,0)[UNDAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 1, "GMXX_RXX_INT_REG(1,0)[HG2FLD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 28, 1, "GMXX_RXX_INT_REG(1,0)[HG2CC]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 29, 1, "GMXX_RXX_INT_REG(1,0)[WOL]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000000ull) + (((2) & 3) + ((0) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_REG(2,0) */, CVMX_ADD_IO_SEG(0x0001180008000008ull) + (((2) & 3) + ((0) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_EN(2,0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 2, "GMXX_RXX_INT_REG(2,0)[CAREXT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 2, "GMXX_RXX_INT_REG(2,0)[SKPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 2, "GMXX_RXX_INT_REG(2,0)[OVRERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 2, "GMXX_RXX_INT_REG(2,0)[LOC_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 21, 2, "GMXX_RXX_INT_REG(2,0)[REM_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 2, "GMXX_RXX_INT_REG(2,0)[BAD_SEQ]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 23, 2, "GMXX_RXX_INT_REG(2,0)[BAD_TERM]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 24, 2, "GMXX_RXX_INT_REG(2,0)[UNSOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 25, 2, "GMXX_RXX_INT_REG(2,0)[UNEOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 2, "GMXX_RXX_INT_REG(2,0)[UNDAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 2, "GMXX_RXX_INT_REG(2,0)[HG2FLD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 28, 2, "GMXX_RXX_INT_REG(2,0)[HG2CC]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 29, 2, "GMXX_RXX_INT_REG(2,0)[WOL]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000000ull) + (((3) & 3) + ((0) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_REG(3,0) */, CVMX_ADD_IO_SEG(0x0001180008000008ull) + (((3) & 3) + ((0) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_EN(3,0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 3, "GMXX_RXX_INT_REG(3,0)[CAREXT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 3, "GMXX_RXX_INT_REG(3,0)[SKPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 3, "GMXX_RXX_INT_REG(3,0)[OVRERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 3, "GMXX_RXX_INT_REG(3,0)[LOC_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 21, 3, "GMXX_RXX_INT_REG(3,0)[REM_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 3, "GMXX_RXX_INT_REG(3,0)[BAD_SEQ]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 23, 3, "GMXX_RXX_INT_REG(3,0)[BAD_TERM]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 24, 3, "GMXX_RXX_INT_REG(3,0)[UNSOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 25, 3, "GMXX_RXX_INT_REG(3,0)[UNEOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 3, "GMXX_RXX_INT_REG(3,0)[UNDAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 3, "GMXX_RXX_INT_REG(3,0)[HG2FLD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 28, 3, "GMXX_RXX_INT_REG(3,0)[HG2CC]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 29, 3, "GMXX_RXX_INT_REG(3,0)[WOL]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000500ull) + ((0) & 1) * 0x8000000ull /* CVMX_GMXX_TX_INT_REG(0) */, CVMX_ADD_IO_SEG(0x0001180008000508ull) + ((0) & 1) * 0x8000000ull /* CVMX_GMXX_TX_INT_EN(0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 0, 0, "GMXX_TX_INT_REG(0)[PKO_NXA]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 0, "GMXX_TX_INT_REG(0)[UNDFLW]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 0, "GMXX_TX_INT_REG(0)[PTP_LOST]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0001080ull) + (((0) & 3) + ((0) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_REG(0,0) */, CVMX_ADD_IO_SEG(0x00011800B0001088ull) + (((0) & 3) + ((0) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_EN_REG(0,0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 0, "PCSX_INTX_REG(0,0)[AN_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 0, "PCSX_INTX_REG(0,0)[TXFIFU]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 0, "PCSX_INTX_REG(0,0)[TXFIFO]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 0, "PCSX_INTX_REG(0,0)[TXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 7, 0, "PCSX_INTX_REG(0,0)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 0, "PCSX_INTX_REG(0,0)[RXLOCK]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 9, 0, "PCSX_INTX_REG(0,0)[AN_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 0, "PCSX_INTX_REG(0,0)[SYNC_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 12, 0, "PCSX_INTX_REG(0,0)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0001080ull) + (((1) & 3) + ((0) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_REG(1,0) */, CVMX_ADD_IO_SEG(0x00011800B0001088ull) + (((1) & 3) + ((0) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_EN_REG(1,0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 1, "PCSX_INTX_REG(1,0)[AN_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 1, "PCSX_INTX_REG(1,0)[TXFIFU]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 1, "PCSX_INTX_REG(1,0)[TXFIFO]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 1, "PCSX_INTX_REG(1,0)[TXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 7, 1, "PCSX_INTX_REG(1,0)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 1, "PCSX_INTX_REG(1,0)[RXLOCK]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 9, 1, "PCSX_INTX_REG(1,0)[AN_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 1, "PCSX_INTX_REG(1,0)[SYNC_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 12, 1, "PCSX_INTX_REG(1,0)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0001080ull) + (((2) & 3) + ((0) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_REG(2,0) */, CVMX_ADD_IO_SEG(0x00011800B0001088ull) + (((2) & 3) + ((0) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_EN_REG(2,0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 2, "PCSX_INTX_REG(2,0)[AN_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 2, "PCSX_INTX_REG(2,0)[TXFIFU]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 2, "PCSX_INTX_REG(2,0)[TXFIFO]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 2, "PCSX_INTX_REG(2,0)[TXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 7, 2, "PCSX_INTX_REG(2,0)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 2, "PCSX_INTX_REG(2,0)[RXLOCK]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 9, 2, "PCSX_INTX_REG(2,0)[AN_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 2, "PCSX_INTX_REG(2,0)[SYNC_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 12, 2, "PCSX_INTX_REG(2,0)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0001080ull) + (((3) & 3) + ((0) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_REG(3,0) */, CVMX_ADD_IO_SEG(0x00011800B0001088ull) + (((3) & 3) + ((0) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_EN_REG(3,0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 3, "PCSX_INTX_REG(3,0)[AN_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 3, "PCSX_INTX_REG(3,0)[TXFIFU]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 3, "PCSX_INTX_REG(3,0)[TXFIFO]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 3, "PCSX_INTX_REG(3,0)[TXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 7, 3, "PCSX_INTX_REG(3,0)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 3, "PCSX_INTX_REG(3,0)[RXLOCK]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 9, 3, "PCSX_INTX_REG(3,0)[AN_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 3, "PCSX_INTX_REG(3,0)[SYNC_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 12, 3, "PCSX_INTX_REG(3,0)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0000858ull) + ((0) & 1) * 0x8000000ull /* CVMX_PCSXX_INT_REG(0) */, CVMX_ADD_IO_SEG(0x00011800B0000860ull) + ((0) & 1) * 0x8000000ull /* CVMX_PCSXX_INT_EN_REG(0) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 0, 0, "PCSXX_INT_REG(0)[TXFLT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 0, "PCSXX_INT_REG(0)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 0, "PCSXX_INT_REG(0)[RXSYNBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 0, "PCSXX_INT_REG(0)[BITLCKLS]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 0, "PCSXX_INT_REG(0)[SYNLOS]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 0, "PCSXX_INT_REG(0)[ALGNLOS]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 6, 0, "PCSXX_INT_REG(0)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 37 /* agx1 */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180008000518ull) + ((1) & 1) * 0x8000000ull /* CVMX_GMXX_BAD_REG(1) */, 0, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 16, "GMXX_BAD_REG(1)[OUT_OVR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 16, "GMXX_BAD_REG(1)[LOSTSTAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 16, "GMXX_BAD_REG(1)[STATOVR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 16, "GMXX_BAD_REG(1)[INB_NXA]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000000ull) + (((0) & 3) + ((1) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_REG(0,1) */, CVMX_ADD_IO_SEG(0x0001180008000008ull) + (((0) & 3) + ((1) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_EN(0,1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 16, "GMXX_RXX_INT_REG(0,1)[CAREXT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 16, "GMXX_RXX_INT_REG(0,1)[SKPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 16, "GMXX_RXX_INT_REG(0,1)[OVRERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 16, "GMXX_RXX_INT_REG(0,1)[LOC_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 21, 16, "GMXX_RXX_INT_REG(0,1)[REM_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 16, "GMXX_RXX_INT_REG(0,1)[BAD_SEQ]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 23, 16, "GMXX_RXX_INT_REG(0,1)[BAD_TERM]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 24, 16, "GMXX_RXX_INT_REG(0,1)[UNSOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 25, 16, "GMXX_RXX_INT_REG(0,1)[UNEOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 16, "GMXX_RXX_INT_REG(0,1)[UNDAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 16, "GMXX_RXX_INT_REG(0,1)[HG2FLD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 28, 16, "GMXX_RXX_INT_REG(0,1)[HG2CC]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 29, 16, "GMXX_RXX_INT_REG(0,1)[WOL]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000000ull) + (((1) & 3) + ((1) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_REG(1,1) */, CVMX_ADD_IO_SEG(0x0001180008000008ull) + (((1) & 3) + ((1) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_EN(1,1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 17, "GMXX_RXX_INT_REG(1,1)[CAREXT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 17, "GMXX_RXX_INT_REG(1,1)[SKPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 17, "GMXX_RXX_INT_REG(1,1)[OVRERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 17, "GMXX_RXX_INT_REG(1,1)[LOC_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 21, 17, "GMXX_RXX_INT_REG(1,1)[REM_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 17, "GMXX_RXX_INT_REG(1,1)[BAD_SEQ]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 23, 17, "GMXX_RXX_INT_REG(1,1)[BAD_TERM]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 24, 17, "GMXX_RXX_INT_REG(1,1)[UNSOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 25, 17, "GMXX_RXX_INT_REG(1,1)[UNEOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 17, "GMXX_RXX_INT_REG(1,1)[UNDAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 17, "GMXX_RXX_INT_REG(1,1)[HG2FLD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 28, 17, "GMXX_RXX_INT_REG(1,1)[HG2CC]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 29, 17, "GMXX_RXX_INT_REG(1,1)[WOL]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000000ull) + (((2) & 3) + ((1) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_REG(2,1) */, CVMX_ADD_IO_SEG(0x0001180008000008ull) + (((2) & 3) + ((1) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_EN(2,1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 18, "GMXX_RXX_INT_REG(2,1)[CAREXT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 18, "GMXX_RXX_INT_REG(2,1)[SKPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 18, "GMXX_RXX_INT_REG(2,1)[OVRERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 18, "GMXX_RXX_INT_REG(2,1)[LOC_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 21, 18, "GMXX_RXX_INT_REG(2,1)[REM_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 18, "GMXX_RXX_INT_REG(2,1)[BAD_SEQ]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 23, 18, "GMXX_RXX_INT_REG(2,1)[BAD_TERM]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 24, 18, "GMXX_RXX_INT_REG(2,1)[UNSOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 25, 18, "GMXX_RXX_INT_REG(2,1)[UNEOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 18, "GMXX_RXX_INT_REG(2,1)[UNDAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 18, "GMXX_RXX_INT_REG(2,1)[HG2FLD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 28, 18, "GMXX_RXX_INT_REG(2,1)[HG2CC]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 29, 18, "GMXX_RXX_INT_REG(2,1)[WOL]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000000ull) + (((3) & 3) + ((1) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_REG(3,1) */, CVMX_ADD_IO_SEG(0x0001180008000008ull) + (((3) & 3) + ((1) & 1) * 0x10000ull) * 2048 /* CVMX_GMXX_RXX_INT_EN(3,1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 19, "GMXX_RXX_INT_REG(3,1)[CAREXT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 19, "GMXX_RXX_INT_REG(3,1)[SKPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 19, "GMXX_RXX_INT_REG(3,1)[OVRERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 19, "GMXX_RXX_INT_REG(3,1)[LOC_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 21, 19, "GMXX_RXX_INT_REG(3,1)[REM_FAULT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 22, 19, "GMXX_RXX_INT_REG(3,1)[BAD_SEQ]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 23, 19, "GMXX_RXX_INT_REG(3,1)[BAD_TERM]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 24, 19, "GMXX_RXX_INT_REG(3,1)[UNSOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 25, 19, "GMXX_RXX_INT_REG(3,1)[UNEOP]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 26, 19, "GMXX_RXX_INT_REG(3,1)[UNDAT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 27, 19, "GMXX_RXX_INT_REG(3,1)[HG2FLD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 28, 19, "GMXX_RXX_INT_REG(3,1)[HG2CC]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 29, 19, "GMXX_RXX_INT_REG(3,1)[WOL]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001180008000500ull) + ((1) & 1) * 0x8000000ull /* CVMX_GMXX_TX_INT_REG(1) */, CVMX_ADD_IO_SEG(0x0001180008000508ull) + ((1) & 1) * 0x8000000ull /* CVMX_GMXX_TX_INT_EN(1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 0, 16, "GMXX_TX_INT_REG(1)[PKO_NXA]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 16, "GMXX_TX_INT_REG(1)[UNDFLW]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 20, 16, "GMXX_TX_INT_REG(1)[PTP_LOST]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0001080ull) + (((0) & 3) + ((1) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_REG(0,1) */, CVMX_ADD_IO_SEG(0x00011800B0001088ull) + (((0) & 3) + ((1) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_EN_REG(0,1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 16, "PCSX_INTX_REG(0,1)[AN_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 16, "PCSX_INTX_REG(0,1)[TXFIFU]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 16, "PCSX_INTX_REG(0,1)[TXFIFO]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 16, "PCSX_INTX_REG(0,1)[TXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 7, 16, "PCSX_INTX_REG(0,1)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 16, "PCSX_INTX_REG(0,1)[RXLOCK]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 9, 16, "PCSX_INTX_REG(0,1)[AN_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 16, "PCSX_INTX_REG(0,1)[SYNC_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 12, 16, "PCSX_INTX_REG(0,1)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0001080ull) + (((1) & 3) + ((1) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_REG(1,1) */, CVMX_ADD_IO_SEG(0x00011800B0001088ull) + (((1) & 3) + ((1) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_EN_REG(1,1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 17, "PCSX_INTX_REG(1,1)[AN_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 17, "PCSX_INTX_REG(1,1)[TXFIFU]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 17, "PCSX_INTX_REG(1,1)[TXFIFO]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 17, "PCSX_INTX_REG(1,1)[TXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 7, 17, "PCSX_INTX_REG(1,1)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 17, "PCSX_INTX_REG(1,1)[RXLOCK]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 9, 17, "PCSX_INTX_REG(1,1)[AN_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 17, "PCSX_INTX_REG(1,1)[SYNC_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 12, 17, "PCSX_INTX_REG(1,1)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0001080ull) + (((2) & 3) + ((1) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_REG(2,1) */, CVMX_ADD_IO_SEG(0x00011800B0001088ull) + (((2) & 3) + ((1) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_EN_REG(2,1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 18, "PCSX_INTX_REG(2,1)[AN_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 18, "PCSX_INTX_REG(2,1)[TXFIFU]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 18, "PCSX_INTX_REG(2,1)[TXFIFO]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 18, "PCSX_INTX_REG(2,1)[TXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 7, 18, "PCSX_INTX_REG(2,1)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 18, "PCSX_INTX_REG(2,1)[RXLOCK]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 9, 18, "PCSX_INTX_REG(2,1)[AN_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 18, "PCSX_INTX_REG(2,1)[SYNC_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 12, 18, "PCSX_INTX_REG(2,1)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0001080ull) + (((3) & 3) + ((1) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_REG(3,1) */, CVMX_ADD_IO_SEG(0x00011800B0001088ull) + (((3) & 3) + ((1) & 1) * 0x20000ull) * 1024 /* CVMX_PCSX_INTX_EN_REG(3,1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 19, "PCSX_INTX_REG(3,1)[AN_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 19, "PCSX_INTX_REG(3,1)[TXFIFU]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 19, "PCSX_INTX_REG(3,1)[TXFIFO]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 19, "PCSX_INTX_REG(3,1)[TXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 7, 19, "PCSX_INTX_REG(3,1)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 8, 19, "PCSX_INTX_REG(3,1)[RXLOCK]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 9, 19, "PCSX_INTX_REG(3,1)[AN_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 10, 19, "PCSX_INTX_REG(3,1)[SYNC_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 12, 19, "PCSX_INTX_REG(3,1)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x00011800B0000858ull) + ((1) & 1) * 0x8000000ull /* CVMX_PCSXX_INT_REG(1) */, CVMX_ADD_IO_SEG(0x00011800B0000860ull) + ((1) & 1) * 0x8000000ull /* CVMX_PCSXX_INT_EN_REG(1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 0, 16, "PCSXX_INT_REG(1)[TXFLT]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 1, 16, "PCSXX_INT_REG(1)[RXBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 16, "PCSXX_INT_REG(1)[RXSYNBAD]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 3, 16, "PCSXX_INT_REG(1)[BITLCKLS]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 4, 16, "PCSXX_INT_REG(1)[SYNLOS]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 5, 16, "PCSXX_INT_REG(1)[ALGNLOS]"},
+							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 6, 16, "PCSXX_INT_REG(1)[DBG_SYNC]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 19 /* nand */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001070001000020ull) /* CVMX_NDF_INT */, CVMX_ADD_IO_SEG(0x0001070001000028ull) /* CVMX_NDF_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 2, 0, "NDF_INT[WDOG]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "NDF_INT[SM_BAD]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 4, 0, "NDF_INT[ECC_1BIT]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 5, 0, "NDF_INT[ECC_MULT]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "NDF_INT[OVRF]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 27 /* pko */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180050000088ull) /* CVMX_PKO_REG_ERROR */, CVMX_ADD_IO_SEG(0x0001180050000090ull) /* CVMX_PKO_REG_INT_MASK */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "PKO_REG_ERROR[PARITY]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "PKO_REG_ERROR[DOORBELL]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 2, 0, "PKO_REG_ERROR[CURRZERO]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 29 /* tim */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180058000088ull) /* CVMX_TIM_REG_ERROR */, CVMX_ADD_IO_SEG(0x0001180058000090ull) /* CVMX_TIM_REG_INT_MASK */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "TIM_REG_ERROR[MASK]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 49 /* pem1 */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011800C0000428ull) + ((1) & 3) * 0x1000000ull /* CVMX_PEMX_INT_SUM(1) */, CVMX_ADD_IO_SEG(0x00011800C0000430ull) + ((1) & 3) * 0x1000000ull /* CVMX_PEMX_INT_ENB(1) */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_PCI, 1, 1, "PEMX_INT_SUM(1)[SE]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 4, 1, "PEMX_INT_SUM(1)[UP_B1]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 5, 1, "PEMX_INT_SUM(1)[UP_B2]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 6, 1, "PEMX_INT_SUM(1)[UP_BX]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 7, 1, "PEMX_INT_SUM(1)[UN_B1]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 8, 1, "PEMX_INT_SUM(1)[UN_B2]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 9, 1, "PEMX_INT_SUM(1)[UN_BX]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 11, 1, "PEMX_INT_SUM(1)[RDLK]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 12, 1, "PEMX_INT_SUM(1)[CRS_ER]"},
+							{1, 1, CVMX_ERROR_GROUP_PCI, 13, 1, "PEMX_INT_SUM(1)[CRS_DR]"},
+							{0}},
+						(struct cvmx_error_childbit[]){
+						{1, 10 /* exc */, (struct cvmx_error_muxchild[]){
+							{CVMX_ADD_IO_SEG(0x00011800C00000D0ull) + ((1) & 3) * 0x1000000ull /* CVMX_PEMX_DBG_INFO(1) */, CVMX_ADD_IO_SEG(0x00011800C00000A0ull) + ((1) & 3) * 0x1000000ull /* CVMX_PEMX_DBG_INFO_EN(1) */, (struct cvmx_error_regbit[]){
+									{1, 1, CVMX_ERROR_GROUP_PCI, 0, 1, "PEMX_DBG_INFO(1)[SPOISON]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 2, 1, "PEMX_DBG_INFO(1)[RTLPLLE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 3, 1, "PEMX_DBG_INFO(1)[RECRCE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 4, 1, "PEMX_DBG_INFO(1)[RPOISON]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 5, 1, "PEMX_DBG_INFO(1)[RCEMRC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 6, 1, "PEMX_DBG_INFO(1)[RNFEMRC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 7, 1, "PEMX_DBG_INFO(1)[RFEMRC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 8, 1, "PEMX_DBG_INFO(1)[RPMERC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 9, 1, "PEMX_DBG_INFO(1)[RPTAMRC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 10, 1, "PEMX_DBG_INFO(1)[RUMEP]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 11, 1, "PEMX_DBG_INFO(1)[RVDM]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 12, 1, "PEMX_DBG_INFO(1)[ACTO]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 13, 1, "PEMX_DBG_INFO(1)[RTE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 14, 1, "PEMX_DBG_INFO(1)[MRE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 15, 1, "PEMX_DBG_INFO(1)[RDWDLE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 16, 1, "PEMX_DBG_INFO(1)[RTWDLE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 17, 1, "PEMX_DBG_INFO(1)[DPEOOSD]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 18, 1, "PEMX_DBG_INFO(1)[FCPVWT]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 19, 1, "PEMX_DBG_INFO(1)[RPE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 20, 1, "PEMX_DBG_INFO(1)[FCUV]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 21, 1, "PEMX_DBG_INFO(1)[RQO]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 22, 1, "PEMX_DBG_INFO(1)[RAUC]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 23, 1, "PEMX_DBG_INFO(1)[RACUR]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 24, 1, "PEMX_DBG_INFO(1)[RACCA]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 25, 1, "PEMX_DBG_INFO(1)[CAAR]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 26, 1, "PEMX_DBG_INFO(1)[RARWDNS]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 27, 1, "PEMX_DBG_INFO(1)[RAMTLP]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 28, 1, "PEMX_DBG_INFO(1)[RACPP]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 29, 1, "PEMX_DBG_INFO(1)[RAWWPP]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 30, 1, "PEMX_DBG_INFO(1)[ECRC_E]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 31, 1, "PEMX_DBG_INFO(1)[RTRY_PE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 32, 1, "PEMX_DBG_INFO(1)[HDRQ_PE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 33, 1, "PEMX_DBG_INFO(1)[DATQ_PE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 34, 1, "PEMX_DBG_INFO(1)[P_D_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 35, 1, "PEMX_DBG_INFO(1)[P_D_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 36, 1, "PEMX_DBG_INFO(1)[P_C_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 37, 1, "PEMX_DBG_INFO(1)[P_C_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 38, 1, "PEMX_DBG_INFO(1)[N_D_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 39, 1, "PEMX_DBG_INFO(1)[N_D_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 40, 1, "PEMX_DBG_INFO(1)[N_C_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 41, 1, "PEMX_DBG_INFO(1)[N_C_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 42, 1, "PEMX_DBG_INFO(1)[C_D_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 43, 1, "PEMX_DBG_INFO(1)[C_D_DBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 44, 1, "PEMX_DBG_INFO(1)[C_C_SBE]"},
+									{1, 1, CVMX_ERROR_GROUP_PCI, 45, 1, "PEMX_DBG_INFO(1)[C_C_DBE]"},
+									{0}},
+								NULL /*cvmx_error_childbit*/
+							},
+							{0}}},
+						{0}}
+					},
+					{0}}},
+				{1, 34 /* sli */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011F0000010330ull) /* CVMX_PEXP_SLI_INT_SUM */, CVMX_ADD_IO_SEG(0x00011F0000013CD0ull) /* CVMX_PEXP_SLI_INT_ENB_CIU */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "PEXP_SLI_INT_SUM[RML_TO]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, NULL},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 2, 0, "PEXP_SLI_INT_SUM[BAR0_TO]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "PEXP_SLI_INT_SUM[IOB2BIG]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, NULL},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "PEXP_SLI_INT_SUM[M0_UP_B0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "PEXP_SLI_INT_SUM[M0_UP_WI]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 10, 0, "PEXP_SLI_INT_SUM[M0_UN_B0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 11, 0, "PEXP_SLI_INT_SUM[M0_UN_WI]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 12, 0, "PEXP_SLI_INT_SUM[M1_UP_B0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 13, 0, "PEXP_SLI_INT_SUM[M1_UP_WI]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 14, 0, "PEXP_SLI_INT_SUM[M1_UN_B0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 15, 0, "PEXP_SLI_INT_SUM[M1_UN_WI]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 20, 0, "PEXP_SLI_INT_SUM[M2_UP_B0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 21, 0, "PEXP_SLI_INT_SUM[M2_UP_WI]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 22, 0, "PEXP_SLI_INT_SUM[M2_UN_B0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 23, 0, "PEXP_SLI_INT_SUM[M2_UN_WI]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 24, 0, "PEXP_SLI_INT_SUM[M3_UP_B0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 25, 0, "PEXP_SLI_INT_SUM[M3_UP_WI]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 26, 0, "PEXP_SLI_INT_SUM[M3_UN_B0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 27, 0, "PEXP_SLI_INT_SUM[M3_UN_WI]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 48, 0, "PEXP_SLI_INT_SUM[PIDBOF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 49, 0, "PEXP_SLI_INT_SUM[PSLDBOF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 50, 0, "PEXP_SLI_INT_SUM[POUT_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 51, 0, "PEXP_SLI_INT_SUM[PIN_BP]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 52, 0, "PEXP_SLI_INT_SUM[PGL_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 53, 0, "PEXP_SLI_INT_SUM[PDI_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 54, 0, "PEXP_SLI_INT_SUM[POP_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 55, 0, "PEXP_SLI_INT_SUM[PINS_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 56, 0, "PEXP_SLI_INT_SUM[SPRT0_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 57, 0, "PEXP_SLI_INT_SUM[SPRT1_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 58, 0, "PEXP_SLI_INT_SUM[SPRT2_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 59, 0, "PEXP_SLI_INT_SUM[SPRT3_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 60, 0, "PEXP_SLI_INT_SUM[ILL_PAD]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 31 /* key */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180020000000ull) /* CVMX_KEY_INT_SUM */, CVMX_ADD_IO_SEG(0x0001180020000008ull) /* CVMX_KEY_INT_ENB */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "KEY_INT_SUM[KEY_SBE]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "KEY_INT_SUM[KEY_DBE]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 23 /* pow */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001670000000218ull) /* CVMX_POW_ECC_ERR */, CVMX_ADD_IO_SEG(0x0001670000000218ull) /* CVMX_POW_ECC_ERR */, (struct cvmx_error_regbit[]){
+							{1, 0, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "POW_ECC_ERR[SBE]"},
+							{1, 0, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "POW_ECC_ERR[DBE]"},
+							{1, 0, CVMX_ERROR_GROUP_INTERNAL, 12, 0, "POW_ECC_ERR[RPE]"},
+							{1, 0, CVMX_ERROR_GROUP_INTERNAL, 16, 0, "POW_ECC_ERR[IOP]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 26 /* pip */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011800A0000008ull) /* CVMX_PIP_INT_REG */, CVMX_ADD_IO_SEG(0x00011800A0000010ull) /* CVMX_PIP_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "PIP_INT_REG[PRTNXA]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 4, 0, "PIP_INT_REG[BADTAG]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 5, 0, "PIP_INT_REG[SKPRUNT]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "PIP_INT_REG[TODOOVR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "PIP_INT_REG[FEPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "PIP_INT_REG[BEPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 12, 0, "PIP_INT_REG[PUNYERR]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 32 /* dfa */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180037000028ull) /* CVMX_DFA_ERROR */, CVMX_ADD_IO_SEG(0x0001180037000030ull) /* CVMX_DFA_INTMSK */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "DFA_ERROR[DBLOVF]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "DFA_ERROR[DC0PERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 13, 0, "DFA_ERROR[DLC0_OVFERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 17, 0, "DFA_ERROR[DFANXM]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 18, 0, "DFA_ERROR[REPLERR]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 21 /* iob */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011800F0000058ull) /* CVMX_IOB_INT_SUM */, CVMX_ADD_IO_SEG(0x00011800F0000060ull) /* CVMX_IOB_INT_ENB */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "IOB_INT_SUM[NP_SOP]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "IOB_INT_SUM[NP_EOP]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 2, 0, "IOB_INT_SUM[P_SOP]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "IOB_INT_SUM[P_EOP]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 4, 0, "IOB_INT_SUM[NP_DAT]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 5, 0, "IOB_INT_SUM[P_DAT]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "IOB_INT_SUM[INB_MAT]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "IOB_INT_SUM[OUTB_MAT]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 35 /* dpi */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001DF0000000008ull) /* CVMX_DPI_INT_REG */, CVMX_ADD_IO_SEG(0x0001DF0000000010ull) /* CVMX_DPI_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "DPI_INT_REG[NDERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "DPI_INT_REG[NFOVR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "DPI_INT_REG[DMADBO]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 16, 0, "DPI_INT_REG[REQ_BADADR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 17, 0, "DPI_INT_REG[REQ_BADLEN]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 18, 0, "DPI_INT_REG[REQ_OVRFLW]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 19, 0, "DPI_INT_REG[REQ_UNDFLW]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 20, 0, "DPI_INT_REG[REQ_ANULL]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 21, 0, "DPI_INT_REG[REQ_INULL]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 22, 0, "DPI_INT_REG[REQ_BADFIL]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 24, 0, "DPI_INT_REG[SPRT0_RST]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 25, 0, "DPI_INT_REG[SPRT1_RST]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 26, 0, "DPI_INT_REG[SPRT2_RST]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 27, 0, "DPI_INT_REG[SPRT3_RST]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001DF0000000078ull) /* CVMX_DPI_PKT_ERR_RSP */, 0, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "DPI_PKT_ERR_RSP[PKTERR]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001DF0000000058ull) /* CVMX_DPI_REQ_ERR_RSP */, 0, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "DPI_REQ_ERR_RSP[QERR]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{CVMX_ADD_IO_SEG(0x0001DF0000000060ull) /* CVMX_DPI_REQ_ERR_RST */, 0, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "DPI_REQ_ERR_RST[QERR]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{1, 30 /* rad */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180070000088ull) /* CVMX_RAD_REG_ERROR */, CVMX_ADD_IO_SEG(0x0001180070000090ull) /* CVMX_RAD_REG_INT_MASK */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "RAD_REG_ERROR[DOORBELL]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
+				{0}}
+			},
+			{0}}},
+		{0}}
+	};
 static struct cvmx_error_muxchild error_tree_cn52xxp1 =
 	{0x0000000000000000ull /* CVMX_ROOT */, 0, NULL /* cvmx_error_regbit */, (struct cvmx_error_childbit[]){
 		{1, 0 /* root */, (struct cvmx_error_muxchild[]){
@@ -6886,16 +7650,6 @@ static struct cvmx_error_muxchild error_tree_cn66xx =
 							{0}},
 						NULL /*cvmx_error_childbit*/
 					},
-					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 2, 0, "MIO_RST_INT[RST_LINK2]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "MIO_RST_INT[RST_LINK3]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
-							{0}},
-						NULL /*cvmx_error_childbit*/
-					},
 					{0}}},
 				{1, 32 /* dfa */, (struct cvmx_error_muxchild[]){
 					{CVMX_ADD_IO_SEG(0x0001180037000028ull) /* CVMX_DFA_ERROR */, CVMX_ADD_IO_SEG(0x0001180037000030ull) /* CVMX_DFA_INTMSK */, (struct cvmx_error_regbit[]){
@@ -6950,6 +7704,18 @@ static struct cvmx_error_muxchild error_tree_cn66xx =
 						NULL /*cvmx_error_childbit*/
 					},
 					{0}}},
+				{1, 63 /* rst */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 2, 0, "MIO_RST_INT[RST_LINK2]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "MIO_RST_INT[RST_LINK3]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
 				{1, 21 /* iob */, (struct cvmx_error_muxchild[]){
 					{CVMX_ADD_IO_SEG(0x00011800F0000058ull) /* CVMX_IOB_INT_SUM */, CVMX_ADD_IO_SEG(0x00011800F0000060ull) /* CVMX_IOB_INT_ENB */, (struct cvmx_error_regbit[]){
 							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "IOB_INT_SUM[NP_SOP]"},
@@ -8261,9 +9027,10 @@ static struct cvmx_error_muxchild error_tree_cn61xx =
 						NULL /*cvmx_error_childbit*/
 					},
 					{0}}},
-				{1, 28 /* zip */, (struct cvmx_error_muxchild[]){
-					{CVMX_ADD_IO_SEG(0x0001180038000088ull) /* CVMX_ZIP_ERROR */, CVMX_ADD_IO_SEG(0x0001180038000090ull) /* CVMX_ZIP_INT_MASK */, (struct cvmx_error_regbit[]){
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "ZIP_ERROR[DOORBELL]"},
+				{1, 20 /* mio */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011800000000A0ull) /* CVMX_MIO_BOOT_ERR */, CVMX_ADD_IO_SEG(0x00011800000000A8ull) /* CVMX_MIO_BOOT_INT */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_BOOT_ERR[ADR_ERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_BOOT_ERR[WAIT_ERR]"},
 							{0}},
 						NULL /*cvmx_error_childbit*/
 					},
@@ -8305,6 +9072,16 @@ static struct cvmx_error_muxchild error_tree_cn61xx =
 						NULL /*cvmx_error_childbit*/
 					},
 					{0}}},
+				{1, 63 /* rst */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
 				{1, 21 /* iob */, (struct cvmx_error_muxchild[]){
 					{CVMX_ADD_IO_SEG(0x00011800F0000058ull) /* CVMX_IOB_INT_SUM */, CVMX_ADD_IO_SEG(0x00011800F0000060ull) /* CVMX_IOB_INT_ENB */, (struct cvmx_error_regbit[]){
 							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "IOB_INT_SUM[NP_SOP]"},
@@ -8349,18 +9126,9 @@ static struct cvmx_error_muxchild error_tree_cn61xx =
 						NULL /*cvmx_error_childbit*/
 					},
 					{0}}},
-				{1, 20 /* mio */, (struct cvmx_error_muxchild[]){
-					{CVMX_ADD_IO_SEG(0x00011800000000A0ull) /* CVMX_MIO_BOOT_ERR */, CVMX_ADD_IO_SEG(0x00011800000000A8ull) /* CVMX_MIO_BOOT_INT */, (struct cvmx_error_regbit[]){
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_BOOT_ERR[ADR_ERR]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_BOOT_ERR[WAIT_ERR]"},
-							{0}},
-						NULL /*cvmx_error_childbit*/
-					},
-					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
+				{1, 28 /* zip */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180038000088ull) /* CVMX_ZIP_ERROR */, CVMX_ADD_IO_SEG(0x0001180038000090ull) /* CVMX_ZIP_INT_MASK */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "ZIP_ERROR[DOORBELL]"},
 							{0}},
 						NULL /*cvmx_error_childbit*/
 					},
@@ -8940,14 +9708,6 @@ static struct cvmx_error_muxchild error_tree_cnf71xx =
 							{0}},
 						NULL /*cvmx_error_childbit*/
 					},
-					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
-							{0}},
-						NULL /*cvmx_error_childbit*/
-					},
 					{0}}},
 				{1, 25 /* ipd */, (struct cvmx_error_muxchild[]){
 					{CVMX_ADD_IO_SEG(0x00014F0000000168ull) /* CVMX_IPD_INT_SUM */, CVMX_ADD_IO_SEG(0x00014F0000000160ull) /* CVMX_IPD_INT_ENB */, (struct cvmx_error_regbit[]){
@@ -8965,6 +9725,13 @@ static struct cvmx_error_muxchild error_tree_cnf71xx =
 						NULL /*cvmx_error_childbit*/
 					},
 					{0}}},
+				{1, 29 /* tim */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180058000088ull) /* CVMX_TIM_REG_ERROR */, CVMX_ADD_IO_SEG(0x0001180058000090ull) /* CVMX_TIM_REG_INT_MASK */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "TIM_REG_ERROR[MASK]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
 				{1, 36 /* agx0 */, (struct cvmx_error_muxchild[]){
 					{CVMX_ADD_IO_SEG(0x0001180008000518ull) + ((0) & 0) * 0x8000000ull /* CVMX_GMXX_BAD_REG(0) */, 0, (struct cvmx_error_regbit[]){
 							{1, 1, CVMX_ERROR_GROUP_ETHERNET, 2, 0, "GMXX_BAD_REG(0)[OUT_OVR]"},
@@ -9112,9 +9879,15 @@ static struct cvmx_error_muxchild error_tree_cnf71xx =
 						NULL /*cvmx_error_childbit*/
 					},
 					{0}}},
-				{1, 29 /* tim */, (struct cvmx_error_muxchild[]){
-					{CVMX_ADD_IO_SEG(0x0001180058000088ull) /* CVMX_TIM_REG_ERROR */, CVMX_ADD_IO_SEG(0x0001180058000090ull) /* CVMX_TIM_REG_INT_MASK */, (struct cvmx_error_regbit[]){
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "TIM_REG_ERROR[MASK]"},
+				{1, 26 /* pip */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x00011800A0000008ull) /* CVMX_PIP_INT_REG */, CVMX_ADD_IO_SEG(0x00011800A0000010ull) /* CVMX_PIP_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "PIP_INT_REG[PRTNXA]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 4, 0, "PIP_INT_REG[BADTAG]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 5, 0, "PIP_INT_REG[SKPRUNT]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "PIP_INT_REG[TODOOVR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "PIP_INT_REG[FEPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "PIP_INT_REG[BEPERR]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 12, 0, "PIP_INT_REG[PUNYERR]"},
 							{0}},
 						NULL /*cvmx_error_childbit*/
 					},
@@ -9183,15 +9956,12 @@ static struct cvmx_error_muxchild error_tree_cnf71xx =
 						NULL /*cvmx_error_childbit*/
 					},
 					{0}}},
-				{1, 26 /* pip */, (struct cvmx_error_muxchild[]){
-					{CVMX_ADD_IO_SEG(0x00011800A0000008ull) /* CVMX_PIP_INT_REG */, CVMX_ADD_IO_SEG(0x00011800A0000010ull) /* CVMX_PIP_INT_EN */, (struct cvmx_error_regbit[]){
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 3, 0, "PIP_INT_REG[PRTNXA]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 4, 0, "PIP_INT_REG[BADTAG]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 5, 0, "PIP_INT_REG[SKPRUNT]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 6, 0, "PIP_INT_REG[TODOOVR]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 7, 0, "PIP_INT_REG[FEPERR]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "PIP_INT_REG[BEPERR]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 12, 0, "PIP_INT_REG[PUNYERR]"},
+				{1, 63 /* rst */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
 							{0}},
 						NULL /*cvmx_error_childbit*/
 					},
@@ -9540,14 +10310,6 @@ static struct cvmx_error_muxchild error_tree_cn63xx =
 							{0}},
 						NULL /*cvmx_error_childbit*/
 					},
-					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
-							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
-							{0}},
-						NULL /*cvmx_error_childbit*/
-					},
 					{0}}},
 				{1, 19 /* nand */, (struct cvmx_error_muxchild[]){
 					{CVMX_ADD_IO_SEG(0x0001070001000020ull) /* CVMX_NDF_INT */, CVMX_ADD_IO_SEG(0x0001070001000028ull) /* CVMX_NDF_INT_EN */, (struct cvmx_error_regbit[]){
@@ -9594,6 +10356,16 @@ static struct cvmx_error_muxchild error_tree_cn63xx =
 						NULL /*cvmx_error_childbit*/
 					},
 					{0}}},
+				{1, 63 /* rst */, (struct cvmx_error_muxchild[]){
+					{CVMX_ADD_IO_SEG(0x0001180000001628ull) /* CVMX_MIO_RST_INT */, CVMX_ADD_IO_SEG(0x0001180000001630ull) /* CVMX_MIO_RST_INT_EN */, (struct cvmx_error_regbit[]){
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "MIO_RST_INT[RST_LINK0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 1, 0, "MIO_RST_INT[RST_LINK1]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 8, 0, "MIO_RST_INT[PERST0]"},
+							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 9, 0, "MIO_RST_INT[PERST1]"},
+							{0}},
+						NULL /*cvmx_error_childbit*/
+					},
+					{0}}},
 				{1, 21 /* iob */, (struct cvmx_error_muxchild[]){
 					{CVMX_ADD_IO_SEG(0x00011800F0000058ull) /* CVMX_IOB_INT_SUM */, CVMX_ADD_IO_SEG(0x00011800F0000060ull) /* CVMX_IOB_INT_ENB */, (struct cvmx_error_regbit[]){
 							{1, 1, CVMX_ERROR_GROUP_INTERNAL, 0, 0, "IOB_INT_SUM[NP_SOP]"},
@@ -11173,6 +11945,7 @@ struct cvmx_error_tree octeon_error_trees[] = {
    {&error_tree_cn56xxp1, 0xfff8, 0x0400},
    {&error_tree_cn52xxp1, 0xfff8, 0x0700},
    {&error_tree_cnf71xx, 0xff00, 0x9400},
+   {&error_tree_cn70xx, 0xff00, 0x9600},
    {&error_tree_cn68xx, 0xff00, 0x9100},
    {&error_tree_cn66xx, 0xff00, 0x9200},
    {&error_tree_cn63xx, 0xff00, 0x9000},
diff --git a/arch/mips/cavium-octeon/octeon-error-tree.c b/arch/mips/cavium-octeon/octeon-error-tree.c
index 80234d0..d1f6ce3 100644
--- a/arch/mips/cavium-octeon/octeon-error-tree.c
+++ b/arch/mips/cavium-octeon/octeon-error-tree.c
@@ -111,6 +111,7 @@ static int octeon_error_tree_map_irq_reg(u64 r)
 		case 0:
 			return 0;
 		case 0x108:
+		case 0x8000:
 			return 1;
 		default:
 			break;
-- 
1.9.1

