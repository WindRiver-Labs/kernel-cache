From 449a53e6bb683393cacdfbaa59d22e80540ebfdf Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Fri, 6 Jun 2014 23:46:20 -0700
Subject: [PATCH 510/518] MIPS:OCTEON: Sync up SE files

Synced up octeon-model.c files to print correct octeon model information
for all OCTEONIII models.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/cavium-octeon/executive/octeon-model.c | 47 ++++++++++++++++--------
 1 file changed, 31 insertions(+), 16 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/octeon-model.c b/arch/mips/cavium-octeon/executive/octeon-model.c
index 3d9a6cb..53f6cde 100644
--- a/arch/mips/cavium-octeon/executive/octeon-model.c
+++ b/arch/mips/cavium-octeon/executive/octeon-model.c
@@ -43,7 +43,7 @@
  * File defining functions for working with different Octeon
  * models.
  *
- * <hr>$Revision: 97490 $<hr>
+ * <hr>$Revision: 99496 $<hr>
  */
 #ifdef CVMX_BUILD_FOR_LINUX_KERNEL
 #include <asm/octeon/octeon.h>
@@ -247,6 +247,10 @@ const char *octeon_model_get_string_buffer(uint32_t chip_id, char *buffer)
 		break;
 	}
 
+#ifndef CVMX_BUILD_FOR_UBOOT
+	clock_mhz = cvmx_clock_get_rate(CVMX_CLOCK_RCLK) / 1000000;
+#endif
+
 	/* Now figure out the family, the first two digits */
 	switch ((chip_id >> 8) & 0xff) {
 	case 0:		/* CN38XX, CN37XX or CN36XX */
@@ -435,22 +439,37 @@ const char *octeon_model_get_string_buffer(uint32_t chip_id, char *buffer)
 		break;
 	case 0x95:		/* CN78XX */
 		family = "78";
-		if (fus_dat3.cn70xx.nozip)
+		if (fus_dat3.cn78xx.l2c_crip == 2)
+			family = "77";
+		if (fus_dat3.cn78xx.nozip
+		    && fus_dat3.cn78xx.nodfa_dte
+		    && fus_dat3.cn78xx.nohna_dte)
 			suffix = "SCP";
 		else
 			suffix = "AAP";
 		break;
 	case 0x96:		/* CN70XX */
-		family = "70";
-		if (cvmx_read_csr(CVMX_MIO_FUS_PDF) & (0x1ULL << 32))
-			family = "71";
-		if (fus_dat2.cn70xx.nocrypto)
-			suffix = "CP";
-		else if (fus_dat2.cn70xx.nodfa_cp2)
-			suffix = "SCP";
-		else
-			suffix = "AAP";
-		break;
+		switch(num_cores) {
+		case 1:
+			family = "CN7010";
+			break;
+		case 2:
+			family = "CN7020/CN7120";
+			break;
+		case 3:
+			family = "CN7125";
+			break;
+		case 4:
+		default:
+			family = "CN7130";
+			break;
+		}
+#ifdef CVMX_BUILD_FOR_UBOOT
+		sprintf(buffer, "%s pass %s", family, pass);
+#else
+		sprintf(buffer, "%sp%s%d", family, pass, clock_mhz);
+#endif
+		return buffer;
 	default:
 		family = "XX";
 		core_model = "XX";
@@ -459,10 +478,6 @@ const char *octeon_model_get_string_buffer(uint32_t chip_id, char *buffer)
 		break;
 	}
 
-#ifndef CVMX_BUILD_FOR_UBOOT
-	clock_mhz = cvmx_clock_get_rate(CVMX_CLOCK_RCLK) / 1000000;
-#endif
-
 	if (family[0] != '3') {
 		if (OCTEON_IS_OCTEON1PLUS() || OCTEON_IS_OCTEON2()) {
 			int fuse_base = 384 / 8;
-- 
1.9.1

