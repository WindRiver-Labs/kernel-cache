From 6a06f5434aface0fe980894e5e5e83a6576103d7 Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Mon, 29 Jul 2013 15:10:05 -0700
Subject: [PATCH 179/518] netdev:octeon-ethernet: Set MAC/PHY mode and
 1000x/SGMII mode.

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: f5ac9e91d6f0582f765bb67e60b4834e2090e171
Description:

Parse device tree for MAC/PHY mode and set the appropriate flag. Similarly
for 1000Base-X mode and SGMII mode. These flags are used while initializing
SGMII interface.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/octeon/ethernet.c | 46 ++++++++++++++++++++++++++++------
 1 file changed, 39 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/octeon/ethernet.c b/drivers/net/ethernet/octeon/ethernet.c
index bf560c9..eebe6e5 100644
--- a/drivers/net/ethernet/octeon/ethernet.c
+++ b/drivers/net/ethernet/octeon/ethernet.c
@@ -48,6 +48,7 @@
 #include <asm/octeon/cvmx-ipd.h>
 #include <asm/octeon/cvmx-srio.h>
 #include <asm/octeon/cvmx-helper.h>
+#include <asm/octeon/cvmx-helper-cfg.h>
 #include <asm/octeon/cvmx-helper-util.h>
 #include <asm/octeon/cvmx-pko-internal-ports-range.h>
 #include <asm/octeon/cvmx-app-config.h>
@@ -871,18 +872,49 @@ static int cvm_oct_get_port_status(struct device_node *pip)
 		int mode = cvmx_helper_interface_get_mode(i);
 
 		for (j = 0; j < num_ports; j++) {
-			if (mode == CVMX_HELPER_INTERFACE_MODE_RGMII
-			    || mode == CVMX_HELPER_INTERFACE_MODE_GMII
-			    || mode == CVMX_HELPER_INTERFACE_MODE_XAUI
-			    || mode == CVMX_HELPER_INTERFACE_MODE_RXAUI
-			    || mode == CVMX_HELPER_INTERFACE_MODE_SGMII
-			    || mode == CVMX_HELPER_INTERFACE_MODE_SPI) {
+			switch (mode) {
+			case CVMX_HELPER_INTERFACE_MODE_RGMII:
+			case CVMX_HELPER_INTERFACE_MODE_GMII:
+			case CVMX_HELPER_INTERFACE_MODE_XAUI:
+			case CVMX_HELPER_INTERFACE_MODE_RXAUI:
+			case CVMX_HELPER_INTERFACE_MODE_SPI:
 				if (cvm_oct_node_for_port(pip, i, j) != NULL)
 					cvmx_helper_set_port_valid(i, j, true);
 				else
 					cvmx_helper_set_port_valid(i, j, false);
-			} else
+				cvmx_helper_set_mac_phy_mode(i, j, false);
+				cvmx_helper_set_1000x_mode(i, j, false);
+				break;
+			case CVMX_HELPER_INTERFACE_MODE_SGMII:
+			{
+				struct device_node *n;
+				if (cvm_oct_node_for_port(pip, i, j) != NULL)
+					cvmx_helper_set_port_valid(i, j, true);
+				else
+					cvmx_helper_set_port_valid(i, j, false);
+
+				n = of_find_compatible_node(NULL, NULL,
+						"cavium,octeon-3860-pip-port");
+				if (n != NULL && of_get_property(n, 
+					"cavium,sgmii-mac-phy-mode", NULL) != NULL)
+					cvmx_helper_set_mac_phy_mode(i, j, true);
+				else
+					cvmx_helper_set_mac_phy_mode(i, j, false);
+	
+				if (n != NULL && of_get_property(n, 
+					"cavium,sgmii-mac-1000x-mode", NULL) 
+					!= NULL)
+					cvmx_helper_set_1000x_mode(i, j, true);
+				else
+					cvmx_helper_set_1000x_mode(i, j, false);
+				break;
+			}
+			default:
 				cvmx_helper_set_port_valid(i, j, true);
+				cvmx_helper_set_mac_phy_mode(i, j, false);
+				cvmx_helper_set_1000x_mode(i, j, false);
+				break;
+			}
 		}
 	}
 	return 0;
-- 
1.9.1

