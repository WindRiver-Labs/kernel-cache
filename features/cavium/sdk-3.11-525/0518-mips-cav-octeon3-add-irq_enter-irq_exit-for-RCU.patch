From 8bbb337c85484dfae901c87e142338a7ce560323 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Fri, 12 Sep 2014 10:29:48 +0800
Subject: [PATCH 518/518] mips/cav-octeon3: add irq_enter()/irq_exit() for RCU

We could see following suspicious RCU usage reported:

===============================
[ INFO: suspicious RCU usage. ]
3.10.38-ltsi-WR6.0.0.0_standard #15 Not tainted
-------------------------------
include/linux/rcupdate.h:780 rcu_read_lock() used illegally while idle!

other info that might help us debug this:

RCU used illegally from idle CPU!
rcu_scheduler_active = 1, debug_locks = 1
RCU used illegally from extended quiescent state!
1 lock held by swapper/0/0:
 #0:  (rcu_read_lock){.+.+..}, at: [<ffffffff801e9fa0>] irq_find_mapping+0xb8/0x210

stack backtrace:
CPU: 0 PID: 0 Comm: swapper/0 Not tainted 3.10.38-ltsi-WR6.0.0.0_standard #15
Stack : 0000000000000001 ffffffff8017a31c 0000000000000e7e ffffffff80960000
	  ffffffff80960000 0000ffffffffffff 0000000000000004 ffffffff80960000
	  0000000000000000 0000000000000000 0000000000000000 ffffffff801798fc
	  ffffffff80960000 ffffffff8017a29c 0000000000000000 0000000000000000
	  ffffffff80bf0000 ffffffff80bf0000 ffffffff80810140 ffffffff808f2177
	  ffffffff80bec7b0 ffffffff808f2688 0000000000000000 0000000000000000
	  ffffffff809b0000 ffffffff8069f950 0000000020000078 ffffffff806a2f58
	  ffffffff808afaf8 ffffffff808af9f0 ffffffff809b0000 ffffffff801ea018
	  ffffffff808f2270 ffffffff80810140 0000000000000000 0000000000000000
	  0000000000000000 ffffffff80155fc8 0000000000000000 0000000000000000
	  ...
Call Trace:
[<ffffffff80155fc8>] show_stack+0x50/0x80
[<ffffffff801ea018>] irq_find_mapping+0x130/0x210
[<ffffffff80105c5c>] octeon_irq_ciu3_ip2+0x74/0xe0
[<ffffffff801068c0>] plat_irq_dispatch+0x48/0xc8
[<ffffffff80150fa0>] ret_from_irq+0x0/0x4
[<ffffffff80151320>] __r4k_wait+0x20/0x40
[<ffffffff801beb44>] cpu_startup_entry+0x11c/0x188
[<ffffffff809b2a0c>] start_kernel+0x4b8/0x4dc

This is because irq_find_mapping() calls rcu_read_lock()/rcu_read_unlock(),
and the RCU usage in interrupt context should be used in
area marked by rcu_irq_enter()/rcu_irq_exit(), called in
irq_enter()/irq_exit() respectively.

Add irq_enter()/irq_exit() to avoid the warning.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index 769692e..544fdb3 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -2269,8 +2269,11 @@ static void octeon_irq_ciu3_ip2(void)
 	if (likely(dest_pp_int.s.intr)) {
 		irq_hw_number_t intsn = dest_pp_int.s.intsn;
 		/* Get the domain to use from the major block */
+		int irq;
 		int block = intsn >> 12;
-		int irq = irq_find_mapping(ciu3_info->domain[block], intsn);
+		irq_enter();
+		irq = irq_find_mapping(ciu3_info->domain[block], intsn);
+		irq_exit();
 
 		if (likely(irq)) {
 			do_IRQ(irq);
-- 
1.9.1

