From 1f0abc0cd22bba38dcac1dbe695e86a2d0ff65ed Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Mon, 21 Apr 2014 13:39:22 -0700
Subject: [PATCH 428/518] MIPS: OCTEON: Update S.E to r96842.

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 440662e019a3d28d8590ec24b68fcd07bb6df898
Description:

This lets us build octeon3-ethernet as a module.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/cavium-octeon/executive/cvmx-helper-cfg.c  | 1 +
 arch/mips/cavium-octeon/executive/cvmx-helper-pki.c  | 2 ++
 arch/mips/cavium-octeon/executive/cvmx-helper-pko3.c | 5 ++++-
 arch/mips/cavium-octeon/executive/cvmx-helper.c      | 5 ++++-
 arch/mips/cavium-octeon/executive/cvmx-pki.c         | 3 +++
 arch/mips/cavium-octeon/executive/cvmx-pko3-queue.c  | 1 +
 arch/mips/cavium-octeon/executive/cvmx-pko3.c        | 1 +
 7 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-cfg.c b/arch/mips/cavium-octeon/executive/cvmx-helper-cfg.c
index 6fbf467..381da61 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-cfg.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-cfg.c
@@ -987,3 +987,4 @@ int __cvmx_helper_init_port_config_data(void)
 	}
 	return rv;
 }
+EXPORT_SYMBOL(__cvmx_helper_init_port_config_data);
diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-pki.c b/arch/mips/cavium-octeon/executive/cvmx-helper-pki.c
index 03680f9..0952e09 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-pki.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-pki.c
@@ -337,6 +337,7 @@ int __cvmx_helper_pki_install_default_vlan(int node)
 	}
 	return 0;
 }
+EXPORT_SYMBOL(__cvmx_helper_pki_install_default_vlan);
 
 void cvmx_helper_pki_enable(int node)
 {
@@ -667,6 +668,7 @@ int cvmx_helper_pki_init_port(int ipd_port, struct cvmx_pki_prt_schd *prtsch)
 
 	return 0;
 }
+EXPORT_SYMBOL(cvmx_helper_pki_init_port);
 
 #if 0
 
diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-pko3.c b/arch/mips/cavium-octeon/executive/cvmx-helper-pko3.c
index 064c475..7d3495a 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-pko3.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-pko3.c
@@ -540,6 +540,7 @@ int __cvmx_pko3_config_gen_interface(int xiface, uint8_t subif,
 				dq, dq+num_queues-1);
 	return 0;
 }
+EXPORT_SYMBOL(__cvmx_pko3_config_gen_interface);
 
 /** Initialize the NULL interface
  *
@@ -667,6 +668,7 @@ int __cvmx_pko3_helper_dqs_activate(int xiface, int index)
 
 	return i;
 }
+EXPORT_SYMBOL(__cvmx_pko3_helper_dqs_activate);
 
 /** Configure and initialize PKO3 for an interface
  *
@@ -775,7 +777,7 @@ int cvmx_helper_pko3_init_interface(int xiface)
 		}
 	}
 
-	/* All other interfaces floolow static configuration */
+	/* All other interfaces follow static configuration */
 	else {
 
 		for (subif = 0; subif < num_ports; subif++) {
@@ -859,6 +861,7 @@ int __cvmx_helper_pko3_init_global(unsigned int node, uint16_t gaura)
 
 	return res;
 }
+EXPORT_SYMBOL(__cvmx_helper_pko3_init_global);
 
 /**
  * Global initialization for PKO3
diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper.c b/arch/mips/cavium-octeon/executive/cvmx-helper.c
index 7a4576a..2f973b9 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper.c
@@ -448,6 +448,7 @@ enum cvmx_pko_padding __cvmx_helper_get_pko_padding(int xiface)
 	piface = &cvmx_interfaces[xi.node][xi.interface];
 	return piface->cvif_padding;
 }
+EXPORT_SYMBOL(__cvmx_helper_get_pko_padding);
 
 int __cvmx_helper_init_interface(int xiface, int num_ipd_ports,
 				 int has_fcs, enum cvmx_pko_padding pad)
@@ -591,7 +592,7 @@ int __cvmx_helper_get_has_fcs(int xiface)
 	struct cvmx_xiface xi = cvmx_helper_xiface_to_node_interface(xiface);
 	return cvmx_interfaces[xi.node][xi.interface].cvif_has_fcs;
 }
-
+EXPORT_SYMBOL(__cvmx_helper_get_has_fcs);
 
 CVMX_SHARED uint64_t  cvmx_rgmii_backpressure_dis = 1;
 
@@ -1247,6 +1248,7 @@ int cvmx_helper_interface_probe(int xiface)
 
 	return 0;
 }
+EXPORT_SYMBOL(cvmx_helper_interface_probe);
 
 /**
  * @INTERNAL
@@ -1438,6 +1440,7 @@ int __cvmx_helper_packet_hardware_enable(int xiface)
 	result |= __cvmx_helper_board_hardware_enable(xiface);
 	return result;
 }
+EXPORT_SYMBOL(__cvmx_helper_packet_hardware_enable);
 
 int cvmx_helper_ipd_and_packet_input_enable(void)
 {
diff --git a/arch/mips/cavium-octeon/executive/cvmx-pki.c b/arch/mips/cavium-octeon/executive/cvmx-pki.c
index 4f94297..c77e3d3 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-pki.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-pki.c
@@ -133,6 +133,7 @@ int cvmx_pki_setup_clusters(int node)
 
 	return 0;
 }
+EXPORT_SYMBOL(cvmx_pki_setup_clusters);
 
 /**
  * @INTERNAL
@@ -512,6 +513,7 @@ void cvmx_pki_config_port(int ipd_port, struct cvmx_pki_port_config *port_cfg)
 	cl_mask = pki_cl_msk.s.clusters;
 	cvmx_pki_set_style_config(xp.node, style, cl_mask, &port_cfg->style_cfg);
 }
+EXPORT_SYMBOL(cvmx_pki_config_port);
 
 void cvmx_pki_get_port_config(int ipd_port, struct cvmx_pki_port_config *port_cfg)
 {
@@ -531,6 +533,7 @@ void cvmx_pki_get_port_config(int ipd_port, struct cvmx_pki_port_config *port_cf
 	cl_mask = pki_cl_msk.s.clusters;
 	cvmx_pki_get_style_config(xp.node, style, cl_mask, &port_cfg->style_cfg);
 }
+EXPORT_SYMBOL(cvmx_pki_get_port_config);
 
 /**
  * This function sets the wqe buffer mode. First packet data buffer can reside
diff --git a/arch/mips/cavium-octeon/executive/cvmx-pko3-queue.c b/arch/mips/cavium-octeon/executive/cvmx-pko3-queue.c
index 6037fca8..5861daf 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-pko3-queue.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-pko3-queue.c
@@ -110,6 +110,7 @@ int cvmx_pko3_get_queue_base(int ipd_port)
 
 	return ret;
 }
+EXPORT_SYMBOL(cvmx_pko3_get_queue_base);
 
 int cvmx_pko3_get_queue_num(int ipd_port)
 {
diff --git a/arch/mips/cavium-octeon/executive/cvmx-pko3.c b/arch/mips/cavium-octeon/executive/cvmx-pko3.c
index 6dcb1d5..a10b863 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-pko3.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-pko3.c
@@ -781,6 +781,7 @@ int cvmx_pko3_interface_options(int xiface, int index,
 
 	return 0;
 }
+EXPORT_SYMBOL(cvmx_pko3_interface_options);
 
 /** Set Descriptor Queue options
  *
-- 
1.9.1

