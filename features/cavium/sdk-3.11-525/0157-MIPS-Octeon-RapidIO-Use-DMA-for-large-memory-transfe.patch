From 087e2fa1fbf039b9119e4d9a50eeffe7253504fc Mon Sep 17 00:00:00 2001
From: Chad Reese <kreese@caviumnetworks.com>
Date: Mon, 22 Oct 2012 10:03:54 -0700
Subject: [PATCH 157/518] MIPS: Octeon: RapidIO: Use DMA for large memory
 transfers.

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: b2b04e97185cd21afe1ca8c374d781014d60d3c1
Description:

Signed-off-by: Chad Reese <kreese@caviumnetworks.com>
Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Leonid Rosenboim <lrosenboim@caviumnetworks.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from Cavium SDK 3.1.1 525]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/rapidio/rio-sysfs.c | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/drivers/rapidio/rio-sysfs.c b/drivers/rapidio/rio-sysfs.c
index a3d068a..5a35a85 100644
--- a/drivers/rapidio/rio-sysfs.c
+++ b/drivers/rapidio/rio-sysfs.c
@@ -18,6 +18,12 @@
 
 #include "rio.h"
 
+#ifdef CONFIG_CAVIUM_OCTEON_RAPIDIO
+#include <asm/io.h>
+int octeon_rio_dma_mem(struct rio_dev *rdev, uint64_t local_addr,
+		       uint64_t remote_addr, int size, int is_outbound);
+#endif
+
 /* Sysfs support */
 #define rio_config_attr(field, format_string)					\
 static ssize_t								\
@@ -255,6 +261,14 @@ rio_read_memory(struct file *_, struct kobject *kobj,
 	if (off + count > bin_attr->size)
 		count = bin_attr->size - off;
 
+#ifdef CONFIG_CAVIUM_OCTEON_RAPIDIO
+	if (count > 8) {
+		if (octeon_rio_dma_mem(dev, virt_to_phys(buf), off, count, 0))
+			return 0;
+		else
+			return count;
+	}
+#endif
 	map = rio_map_memory(dev, off, count);
 	if (!map) {
 		dev_err(&dev->dev, "Unable to map RapidIO device resource\n");
@@ -279,6 +293,14 @@ rio_write_memory(struct file *_, struct kobject *kobj,
 	if (off + count > bin_attr->size)
 		count = bin_attr->size - off;
 
+#ifdef CONFIG_CAVIUM_OCTEON_RAPIDIO
+	if (count > 8) {
+		if (octeon_rio_dma_mem(dev, virt_to_phys(buf), off, count, 1))
+			return 0;
+		else
+			return count;
+	}
+#endif
 	map = rio_map_memory(dev, off, count);
 	if (!map) {
 		dev_err(&dev->dev, "Unable to map RapidIO device resource\n");
-- 
1.9.1

