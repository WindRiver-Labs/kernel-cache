From 97c19487ee6588e58be2043223061fc4b7e47ecc Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Mon, 12 Aug 2013 17:27:47 -0700
Subject: [PATCH 210/518] MIPS: add get_new_asid()

For virtually tagged ICache, on ASID rollover, only the local ICache
needs to be invalidated.
Flushing across all CPUs is unnecessary.
It wasn't properly updating the asid_cache, so repeated ASIDs were
produced.

Based on Cavium SDK 3.1.1 525.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/include/asm/mmu_context.h | 17 ++++++++++++-----
 1 file changed, 12 insertions(+), 5 deletions(-)

diff --git a/arch/mips/include/asm/mmu_context.h b/arch/mips/include/asm/mmu_context.h
index 516e6e9..0ebe616 100644
--- a/arch/mips/include/asm/mmu_context.h
+++ b/arch/mips/include/asm/mmu_context.h
@@ -108,16 +108,16 @@ static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
 
 #ifndef CONFIG_MIPS_MT_SMTC
 /* Normal, classic MIPS get_new_mmu_context */
-static inline void
-get_new_mmu_context(struct mm_struct *mm, unsigned long cpu)
+static inline unsigned long
+get_new_asid(unsigned long cpu)
 {
 	extern void kvm_local_flush_tlb_all(void);
 	unsigned long asid = asid_cache(cpu);
 
 	if (! ((asid += ASID_INC) & ASID_MASK) ) {
 		if (cpu_has_vtag_icache)
-			flush_icache_all();
-#ifdef CONFIG_KVM
+			local_flush_icache_all();
+#if IS_ENABLED(CONFIG_KVM_MIPS_TE)
 		kvm_local_flush_tlb_all();      /* start new asid cycle */
 #else
 		local_flush_tlb_all();	/* start new asid cycle */
@@ -125,8 +125,15 @@ get_new_mmu_context(struct mm_struct *mm, unsigned long cpu)
 		if (!asid)		/* fix version if needed */
 			asid = ASID_FIRST_VERSION;
 	}
+	asid_cache(cpu) = asid;
+	return asid;
+}
 
-	cpu_context(cpu, mm) = asid_cache(cpu) = asid;
+static inline void
+get_new_mmu_context(struct mm_struct *mm, unsigned long cpu)
+{
+	unsigned long asid = get_new_asid(cpu);
+	cpu_context(cpu, mm) = asid;
 }
 
 #else /* CONFIG_MIPS_MT_SMTC */
-- 
1.9.1

