From cf6c3384d65496d151aaec32de9595e00154b176 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Tue, 1 Jul 2014 18:05:50 -0700
Subject: [PATCH 701/974] MIPS: OCTEON: Don't add kernel image when adding
 memory from named blocks.

... otherwise the kernel image is clobbered.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/setup.c | 29 ++++++++++++++++++++++++++---
 1 file changed, 26 insertions(+), 3 deletions(-)

diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index d246a75..8960461 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -972,9 +972,14 @@ void __init plat_mem_setup(void)
 #endif
 
 	if (named_memory_blocks[0][0]) {
+		phys_t kernel_begin, kernel_end;
+		phys_t block_begin, block_size;
 		/* Memory from named blocks only */
 		int i;
 
+		kernel_begin = PFN_DOWN(__pa_symbol(&_text)) << PAGE_SHIFT;
+		kernel_end = PFN_UP(__pa_symbol(&_end)) << PAGE_SHIFT;
+
 		for (i = 0;
 		     named_memory_blocks[i][0] && i < ARRAY_SIZE(named_memory_blocks);
 		     i++) {
@@ -988,9 +993,27 @@ void __init plat_mem_setup(void)
 				named_memory_blocks[i],
 				(unsigned long)named_block->size,
 				(unsigned long)named_block->base_addr);
-			add_memory_region(named_block->base_addr, named_block->size,
-					  BOOT_MEM_RAM);
-			total += named_block->size;
+
+			block_begin = named_block->base_addr;
+			block_size = named_block->size;
+			if (kernel_begin <= block_begin && kernel_end >= block_begin + block_size)
+				continue;
+
+			if (kernel_begin > block_begin && kernel_begin < block_begin + block_size) {
+				u64 sz = kernel_begin - named_block->base_addr;
+				add_memory_region(named_block->base_addr, sz, BOOT_MEM_RAM);
+				total += sz;
+				if (block_begin + block_size <= kernel_end)
+					continue;
+				block_size = block_begin + block_size - kernel_end;
+				block_begin = kernel_end;
+			}
+			if (kernel_end > block_begin && kernel_end < block_begin + block_size) {
+				block_size = block_begin + block_size - kernel_end;
+				block_begin = kernel_end;
+			}
+			add_memory_region(block_begin, block_size, BOOT_MEM_RAM);
+			total += block_size;
 		}
 		goto mem_alloc_done;
 	}
-- 
2.6.2

