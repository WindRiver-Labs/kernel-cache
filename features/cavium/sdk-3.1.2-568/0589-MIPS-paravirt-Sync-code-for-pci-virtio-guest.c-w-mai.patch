From 3715cc39d21cdbdb21ab0b9db0e83368ca30c7e6 Mon Sep 17 00:00:00 2001
From: Andreas Herrmann <andreas.herrmann@caviumnetworks.com>
Date: Thu, 13 Feb 2014 13:46:59 -0800
Subject: [PATCH 589/974] MIPS: paravirt: Sync code for pci-virtio-guest.c /w
 mainline

 - formatting changes
 - adapt code for io config access routines

Signed-off-by: Andreas Herrmann <andreas.herrmann@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/pci/pci-virtio-guest.c | 47 +++++++++++++++++++---------------------
 1 file changed, 22 insertions(+), 25 deletions(-)

diff --git a/arch/mips/pci/pci-virtio-guest.c b/arch/mips/pci/pci-virtio-guest.c
index 59f57d8..eedc5c2 100644
--- a/arch/mips/pci/pci-virtio-guest.c
+++ b/arch/mips/pci/pci-virtio-guest.c
@@ -52,59 +52,56 @@ int pcibios_map_irq(const struct pci_dev *dev, u8 slot, u8 pin)
 	return ((pin + slot) % 4) + MIPS_IRQ_PCIA;
 }
 
-static unsigned long pci_virtio_guest_write_config_addr(struct pci_bus *bus, unsigned int devfn, int reg)
+static void pci_virtio_guest_write_config_addr(struct pci_bus *bus,
+					unsigned int devfn, int reg)
 {
-	union pci_config_address pca;
+	union pci_config_address pca = { .w = 0 };
 
-	pca.w = 0;
 	pca.register_number = reg;
 	pca.devfn_number = devfn;
 	pca.bus_number = bus->number;
 	pca.enable_bit = 1;
 
 	outl(pca.w, PCI_CONFIG_ADDRESS);
-
-	return PCI_CONFIG_DATA + (reg & 3);
 }
 
-static int pci_virtio_guest_write_config(struct pci_bus *bus, unsigned int devfn,
-					 int reg, int size, u32 val)
+static int pci_virtio_guest_write_config(struct pci_bus *bus,
+		unsigned int devfn, int reg, int size, u32 val)
 {
-	unsigned long port = pci_virtio_guest_write_config_addr(bus, devfn, reg);
+	pci_virtio_guest_write_config_addr(bus, devfn, reg);
 
 	switch (size) {
 	case 1:
-		outb(val, port);
-		return PCIBIOS_SUCCESSFUL;
+		outb(val, PCI_CONFIG_DATA + (reg & 3));
+		break;
 	case 2:
-		outw(val, port);
-		return PCIBIOS_SUCCESSFUL;
+		outw(val, PCI_CONFIG_DATA + (reg & 2));
+		break;
 	case 4:
-		outl(val, port);
-		return PCIBIOS_SUCCESSFUL;
-	default:
-		return PCIBIOS_FUNC_NOT_SUPPORTED;
+		outl(val, PCI_CONFIG_DATA);
+		break;
 	}
+
+	return PCIBIOS_SUCCESSFUL;
 }
 
 static int pci_virtio_guest_read_config(struct pci_bus *bus, unsigned int devfn,
 					int reg, int size, u32 *val)
 {
-	unsigned long port = pci_virtio_guest_write_config_addr(bus, devfn, reg);
+	pci_virtio_guest_write_config_addr(bus, devfn, reg);
 
 	switch (size) {
 	case 1:
-		*val = inb(port);
-		return PCIBIOS_SUCCESSFUL;
+		*val = inb(PCI_CONFIG_DATA + (reg & 3));
+		break;
 	case 2:
-		*val = inw(port);
-		return PCIBIOS_SUCCESSFUL;
+		*val = inw(PCI_CONFIG_DATA + (reg & 2));
+		break;
 	case 4:
-		*val = inl(port);
-		return PCIBIOS_SUCCESSFUL;
-	default:
-		return PCIBIOS_FUNC_NOT_SUPPORTED;
+		*val = inl(PCI_CONFIG_DATA);
+		break;
 	}
+	return PCIBIOS_SUCCESSFUL;
 }
 
 static struct pci_ops pci_virtio_guest_ops = {
-- 
2.6.2

