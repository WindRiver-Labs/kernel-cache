From dd090f33f8bf3e0b50bc879bd68df1237477b031 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Thu, 13 Feb 2014 13:46:59 -0800
Subject: [PATCH 452/974] MIPS OCTEON: Fix OOPs in pci console.

We were getting:

BUG: sleeping function called from invalid context at kernel/mutex.c:95
in_atomic(): 0, irqs_disabled(): 1, pid: 1007, name: modprobe
CPU: 3 PID: 1007 Comm: modprobe Not tainted 3.10.14-KVM1+ #579
Stack : 0000000000000004 ffffffff8065fcd4 00000000000003e0 ffffffff8065fa68
          ffffffff80890000 ffffffff80196938 0000000000000004 0000000000000000
          ffffffff80890000 ffffffff80167818 0000000000000000 ffffffff8065fa1c
          ffffffff80890000 ffffffff8016915c 0000000000000000 0000000000000000
          ffffffff818b0000 ffffffff818a0000 ffffffff807ae808 ffffffff80880677
          ffffffff818a5c10 800000000f81e458 00000000000003ef 0000000000000003
          ffffffff818b6588 0000000000000006 ffffffff818b0000 ffffffff80658fa8
          800000000162f9a8 800000000162f8a0 0000000000000023 ffffffff8065d974
          800000000f81e128 ffffffff807ae808 0000000000000003 00000000000003ef
          0000000000000000 ffffffff80145298 0000000000000000 0000000000000000
          ...
Call Trace:
[<ffffffff80145298>] show_stack+0x68/0x80
[<ffffffff8065d974>] mutex_lock+0x24/0x60
[<ffffffff80107e68>] octeon_pci_console_lowlevel_write+0x48/0x128
[<ffffffff80167c88>] call_console_drivers.constprop.16+0x110/0x1b8
[<ffffffff80168ca0>] console_unlock+0x3e0/0x408
[<ffffffff80169110>] vprintk_emit+0x1a8/0x4b0
[<ffffffff80658fa8>] printk+0x4c/0x58
[<ffffffff80571ff8>] sock_register+0x68/0xc8
[<ffffffffc01302b8>] inet6_init+0xe8/0x4cc [ipv6]
[<ffffffff801004f8>] do_one_initcall+0xe0/0x138
[<ffffffff801bbed4>] load_module+0x1854/0x2048
[<ffffffff801bc7d8>] SyS_init_module+0x110/0x148
[<ffffffff8014a4c4>] handle_sys64+0x44/0x68

Switch to spinlock to fix it.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-pci-console.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-pci-console.c b/arch/mips/cavium-octeon/octeon-pci-console.c
index 89afa4f..8cd2ee9 100644
--- a/arch/mips/cavium-octeon/octeon-pci-console.c
+++ b/arch/mips/cavium-octeon/octeon-pci-console.c
@@ -16,7 +16,6 @@
 #define pr_fmt(fmt) KBUILD_MODNAME ": " fmt
 
 #include <linux/console.h>
-#include <linux/mutex.h>
 #include <linux/tty.h>
 #include <linux/tty_driver.h>
 #include <linux/tty_flip.h>
@@ -83,7 +82,7 @@ struct octeon_pci_console_desc {
 struct octeon_pci_console {
 	struct console con;
 	struct tty_driver *ttydrv;
-	struct mutex lock;
+	spinlock_t lock;
 	struct octeon_pci_console_rings *rings;
 	/* Pointers to the ring memory refered to in rings. */
 	u8 *input_ring;
@@ -120,7 +119,7 @@ static void octeon_pci_console_lowlevel_write(struct octeon_pci_console *opc,
 					      const char *str, unsigned int len)
 {
 	u32 s = opc->rings->buf_size;
-	mutex_lock(&opc->lock);
+	spin_lock(&opc->lock);
 	while (len > 0) {
 		u32 r =  opc->rings->output_read_index;
 		u32 w =  opc->rings->output_write_index;
@@ -142,7 +141,7 @@ static void octeon_pci_console_lowlevel_write(struct octeon_pci_console *opc,
 		opc->rings->output_write_index = w;
 		wmb();
 	}
-	mutex_unlock(&opc->lock);
+	spin_unlock(&opc->lock);
 }
 
 static void octeon_pci_console_write(struct console *con, const char *str,
@@ -181,7 +180,7 @@ static int octeon_pci_console_setup0(struct octeon_pci_console *opc)
 			opc->rings = phys_to_virt(opcd->console_addr_array[opc->index]);
 		else
 			goto fail;
-		mutex_init(&octeon_pci_console.lock);
+		spin_lock_init(&octeon_pci_console.lock);
 		opc->input_ring = phys_to_virt(opc->rings->input_base_addr);
 		opc->output_ring = phys_to_virt(opc->rings->output_base_addr);
 	}
-- 
2.6.2

