From b48226113800a4b9a66376b5de86ff77245957b0 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Fri, 29 Jan 2016 15:39:30 +0800
Subject: [PATCH 2/2] octeon-ethernet: remove memleak reports by
 kmemleak_not_leak

The allocated memory will be used by cvmx_fpa1_free(), this function is
to free a pointer back to the pool, it will call cvmx_write_io() to
write this val to a IO address finally. So these shouldn't be kmem leak.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/octeon/ethernet-mem.c |    2 ++
 drivers/net/ethernet/octeon/ethernet-rx.c  |    1 +
 2 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/octeon/ethernet-mem.c b/drivers/net/ethernet/octeon/ethernet-mem.c
index d069167..c0506de 100644
--- a/drivers/net/ethernet/octeon/ethernet-mem.c
+++ b/drivers/net/ethernet/octeon/ethernet-mem.c
@@ -77,6 +77,7 @@ static int cvm_oct_fill_hw_skbuff(struct fpa_pool *pool, int elements)
 		extra_reserve = desired_data - skb->data;
 		skb_reserve(skb, extra_reserve);
 		*(struct sk_buff **)(skb->data - sizeof(void *)) = skb;
+		kmemleak_not_leak(skb);
 		cvmx_fpa1_free(skb->data, pool_num, DONT_WRITEBACK(size / 128));
 		freed--;
 	}
@@ -131,6 +132,7 @@ static int cvm_oct_fill_hw_kmem(struct fpa_pool *pool, int elements)
 			       elements * pool->size, pool->pool);
 			break;
 		}
+		kmemleak_not_leak(memory);
 		cvmx_fpa1_free(memory, pool->pool, 0);
 		freed--;
 	}
diff --git a/drivers/net/ethernet/octeon/ethernet-rx.c b/drivers/net/ethernet/octeon/ethernet-rx.c
index 45eeab0..1e5bbf5 100644
--- a/drivers/net/ethernet/octeon/ethernet-rx.c
+++ b/drivers/net/ethernet/octeon/ethernet-rx.c
@@ -389,6 +389,7 @@ static int cvm_oct_sso_initialize(int num_wqe)
 			pr_err("cannot allocate memory from octeon_ethernet_sso\n");
 			return -ENOMEM;
 		}
+		kmemleak_not_leak(mem);
 		for (;;) {
 			fptr.u64 = cvmx_read_csr(CVMX_SSO_RWQ_PSH_FPTR);
 			if (!fptr.s.full)
-- 
1.7.5.4

