From e96a74ec7eefbd7628c9f48bb9433133e7b88b9c Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Thu, 3 Jul 2014 18:05:50 -0700
Subject: [PATCH 735/974] gpio: gpio-octeon: Add support for multiple GPIO
 controllers.

In a NUMA configuration, each node will have a GPIO controller.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/gpio/gpio-octeon.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/gpio/gpio-octeon.c b/drivers/gpio/gpio-octeon.c
index 420b370..d1bf2cb 100644
--- a/drivers/gpio/gpio-octeon.c
+++ b/drivers/gpio/gpio-octeon.c
@@ -7,9 +7,8 @@
  */
 
 #include <linux/of_device.h>
-#include <linux/kernel.h>
 #include <linux/module.h>
-#include <linux/gpio.h>
+#include <linux/of_gpio.h>
 #include <linux/io.h>
 
 #include <asm/octeon/octeon.h>
@@ -131,19 +130,26 @@ static int octeon_gpio_probe(struct platform_device *pdev)
 	pdev->dev.platform_data = chip;
 	chip->label = "octeon-gpio";
 	chip->dev = &pdev->dev;
+	chip->of_node = pdev->dev.of_node;
 	chip->owner = THIS_MODULE;
-	chip->base = 0;
+	/*
+	 * Node zero is at base of 0, other nodes are automatically
+	 * allocated.
+	 */
+	chip->base = of_node_to_nid(chip->of_node) ? -1 : 0;
 	chip->can_sleep = 0;
 	chip->ngpio = 20;
 	chip->direction_input = octeon_gpio_dir_in;
 	chip->get = octeon_gpio_get;
 	chip->direction_output = octeon_gpio_dir_out;
 	chip->set = octeon_gpio_set;
+	chip->of_gpio_n_cells = 2;
+	chip->of_xlate = of_gpio_simple_xlate;
 	err = gpiochip_add(chip);
 	if (err)
 		goto out;
 
-	dev_info(&pdev->dev, "OCTEON GPIO\n");
+	dev_info(&pdev->dev, "OCTEON GPIO: base = %d\n", chip->base);
 out:
 	return err;
 }
-- 
2.6.2

