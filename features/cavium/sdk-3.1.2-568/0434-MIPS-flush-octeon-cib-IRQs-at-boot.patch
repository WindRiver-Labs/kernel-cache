From c4f02c2ed3c3a451d54a11734be37934781f7c4c Mon Sep 17 00:00:00 2001
From: Peter Swain <peter.swain@cavium.com>
Date: Tue, 31 Dec 2013 17:55:49 -0800
Subject: [PATCH 434/974] MIPS: flush octeon-cib IRQs at boot

OcteonIII's CIB controllers were reporting IRQs left enabled by u-boot,
but with no Linux-assigned handler.
Disable all CIB IRQs & discard pending events during irq-controller
setup, so we never see stale or unhandled events.

bug#8908
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index e04ee48..d3cb4fa 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -2694,7 +2694,10 @@ static irqreturn_t octeon_irq_cib_handler(int my_irq, void *data)
 			continue;
 		irq = irq_find_mapping(cib_domain, i);
 		if (!irq) {
-			pr_err("ERROR: No mapping for cib %d\n", i);
+			pr_err("ERROR: CIB bit %d@%llx IRQ unhandled, disabling\n", i, host_data->raw_reg);
+			en &= ~(1ull << i);
+			cvmx_write_csr(host_data->en_reg, en);
+			cvmx_write_csr(host_data->raw_reg, 1ull << i);
 		} else {
 			struct irq_desc *desc = irq_to_desc(irq);
 			struct irq_data *irq_data = irq_desc_get_irq_data(desc);
@@ -2756,6 +2759,9 @@ static int __init octeon_irq_init_cib(struct device_node *ciu_node,
 		return -ENOMEM;
 	}
 
+	cvmx_write_csr(host_data->en_reg, 0); /* disable all IRQs */
+	cvmx_write_csr(host_data->raw_reg, ~0); /* ack any outstanding */
+
 	r = request_irq(parent_irq, octeon_irq_cib_handler, 0,
 			"cib", cib_domain);
 	if (r) {
-- 
2.6.2

