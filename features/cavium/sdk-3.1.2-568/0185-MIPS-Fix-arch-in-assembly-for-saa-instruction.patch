From 10996d106eef79ce58ede59d251cba488850cfe9 Mon Sep 17 00:00:00 2001
From: Andrew Pinski <apinski@cavium.com>
Date: Thu, 27 Jun 2013 13:38:37 -0700
Subject: [PATCH 185/974] MIPS: Fix arch in assembly for saa instruction.

This patch fixes the ".set arch" for the saa instruction so that it works with the upstream binutils.

Signed-off-by: Andrew Pinski <apinski@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/include/asm/atomic.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/mips/include/asm/atomic.h b/arch/mips/include/asm/atomic.h
index e3266ce..4bbcf2d 100644
--- a/arch/mips/include/asm/atomic.h
+++ b/arch/mips/include/asm/atomic.h
@@ -52,7 +52,7 @@ static __inline__ void atomic_add(int i, atomic_t * v)
 	if (cpu_has_saa) {
 		__asm__ __volatile__(
 		".set	push\n\t"
-		".set	arch=octeon\n\t"
+		".set	arch=octeon+\n\t"
 		"saa    %1, (%2)\t# atomic_add (%0)\n\t"
 		".set	pop"
 		: "+m" (v->counter)
@@ -103,7 +103,7 @@ static __inline__ void atomic_sub(int i, atomic_t * v)
 	if (cpu_has_saa) {
 		__asm__ __volatile__(
 		".set	push\n\t"
-		".set	arch=octeon\n\t"
+		".set	arch=octeon+\n\t"
 		"saa    %1, (%2)\t# atomic_sub(%0)\n\t"
 		".set	pop"
 		: "+m" (v->counter)
@@ -471,7 +471,7 @@ static __inline__ void atomic64_add(long i, atomic64_t * v)
 	if (cpu_has_saa) {
 		__asm__ __volatile__(
 		".set	push\n\t"
-		".set	arch=octeon\n\t"
+		".set	arch=octeon+\n\t"
 		"saad   %1, (%2)\t# atomic64_add (%0)\n\t"
 		".set	pop"
 		: "+m" (v->counter)
@@ -522,7 +522,7 @@ static __inline__ void atomic64_sub(long i, atomic64_t * v)
 	if (cpu_has_saa) {
 		__asm__ __volatile__(
 		".set	push\n\t"
-		".set	arch=octeon\n\t"
+		".set	arch=octeon+\n\t"
 		"saad    %1, (%2)\t# atomic64_sub (%0)\n\t"
 		".set	pop"
 		: "+m" (v->counter)
-- 
2.6.2

