From 99b45e52a32b4b0639455429feb8237a886b0997 Mon Sep 17 00:00:00 2001
From: Carlos Munoz <cmunoz@caviumnetworks.com>
Date: Thu, 8 Oct 2015 11:12:31 -0700
Subject: [PATCH 151/184] netdev: octeon-pow: Minor cleanups.

Signed-off-by: Carlos Munoz <cmunoz@caviumnetworks.com>
[Original patch taken from octeon-linux-kernel-patches-SDK-3.1.2-release]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/octeon/octeon-pow-ethernet.c | 46 +++++++++++++----------
 1 file changed, 26 insertions(+), 20 deletions(-)

diff --git a/drivers/net/ethernet/octeon/octeon-pow-ethernet.c b/drivers/net/ethernet/octeon/octeon-pow-ethernet.c
index 99de7c4..1b4a715 100644
--- a/drivers/net/ethernet/octeon/octeon-pow-ethernet.c
+++ b/drivers/net/ethernet/octeon/octeon-pow-ethernet.c
@@ -568,6 +568,16 @@ static irqreturn_t octeon_pow_interrupt(int cpl, void *dev_id)
 		old_group_mask = cvmx_read_csr(CVMX_POW_PP_GRP_MSKX(coreid));
 		cvmx_write_csr(CVMX_POW_PP_GRP_MSKX(coreid), 1 << priv->rx_group);
 	}
+
+	/* Clear the interrupt */
+	if (octeon_has_feature(OCTEON_FEATURE_PKI)) {
+		cvmx_write_csr_node(priv->numa_node,
+				    CVMX_SSO_GRPX_INT(priv->rx_group), 2);
+	} else if (OCTEON_IS_MODEL(OCTEON_CN68XX))
+		cvmx_write_csr(CVMX_SSO_WQ_INT, 1ull << priv->rx_group);
+	else
+		cvmx_write_csr(CVMX_POW_WQ_INT, 1ull << priv->rx_group);
+
 	while (1) {
 		if (octeon_has_feature(OCTEON_FEATURE_PKI))
 			work = cvmx_sso_work_request_grp_sync_nocheck(priv->rx_group,
@@ -633,24 +643,16 @@ static irqreturn_t octeon_pow_interrupt(int cpl, void *dev_id)
 		netif_rx(skb);
 	}
 
-	if (octeon_has_feature(OCTEON_FEATURE_PKI)) {
-		/* Clear interrupt */
-		cvmx_write_csr_node(priv->numa_node, CVMX_SSO_GRPX_INT(priv->rx_group), 2);
-	} else if (OCTEON_IS_MODEL(OCTEON_CN68XX)) {
-		/* Restore the original POW group mask */
+	/* Restore the original POW group mask */
+	if (OCTEON_IS_MODEL(OCTEON_CN68XX)) {
 		cvmx_write_csr(CVMX_SSO_PPX_GRP_MSK(coreid), old_group_mask);
-		/* Read it back so it takes effect before ?? */
+		/* Must read the original pow group mask back so it takes
+		 * effect before ??
+		 */
 		cvmx_read_csr(CVMX_SSO_PPX_GRP_MSK(coreid));
-
-		/* Acknowledge the interrupt */
-		cvmx_write_csr(CVMX_SSO_WQ_INT, 1ull << priv->rx_group);
-	} else {
-		/* Restore the original POW group mask */
+	} else if (!octeon_has_feature(OCTEON_FEATURE_PKI))
 		cvmx_write_csr(CVMX_POW_PP_GRP_MSKX(coreid), old_group_mask);
 
-		/* Acknowledge the interrupt */
-		cvmx_write_csr(CVMX_POW_WQ_INT, 1ull << priv->rx_group);
-	}
 	return IRQ_HANDLED;
 }
 
@@ -876,7 +878,7 @@ static int __init octeon_pow_mod_init(void)
 
 		if (fpa_packet_pool < 0) {
 			netdev_err(octeon_pow_oct_dev, "ERROR: Failed to initialize fpa pool\n");
-			return -1;
+			goto err1;
 		}
 	} else {
 		/* Spin waiting for another core to setup all the hardware */
@@ -898,8 +900,7 @@ static int __init octeon_pow_mod_init(void)
 
 	if (register_netdev(octeon_pow_oct_dev) < 0) {
 		netdev_err(octeon_pow_oct_dev, "ERROR: Failed to register ethernet device\n");
-		free_netdev(octeon_pow_oct_dev);
-		return -1;
+		goto err1;
 	}
 
 	if (ptp_rx_group < 0)
@@ -909,7 +910,7 @@ static int __init octeon_pow_mod_init(void)
 	octeon_pow_ptp_dev = alloc_etherdev(sizeof(struct octeon_pow));
 	if (octeon_pow_ptp_dev == NULL) {
 		pr_err(DEV_NAME " ERROR: Failed to allocate ethernet device\n");
-		return -1;
+		goto err1;
 	}
 
 	octeon_pow_ptp_dev->netdev_ops = &octeon_pow_netdev_ops;
@@ -923,11 +924,16 @@ static int __init octeon_pow_mod_init(void)
 
 	if (register_netdev(octeon_pow_ptp_dev) < 0) {
 		netdev_err(octeon_pow_ptp_dev, "ERROR: Failed to register ethernet device\n");
-		free_netdev(octeon_pow_ptp_dev);
-		return -1;
+		goto err;
 	}
 
 	return 0;
+
+ err:
+	free_netdev(octeon_pow_ptp_dev);
+ err1:
+	free_netdev(octeon_pow_oct_dev);
+	return -1;
 }
 
 /**
-- 
1.9.1

