From 58d205346960840a53fa781d4edc9570ae89ec23 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 14 Feb 2014 13:46:59 -0800
Subject: [PATCH 454/974] MIPS/OCTEON: Use non-threaded irqs for CIB chaining.

Also take lock around CIB bit manipulations.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index d3cb4fa..238a44d 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -2694,10 +2694,14 @@ static irqreturn_t octeon_irq_cib_handler(int my_irq, void *data)
 			continue;
 		irq = irq_find_mapping(cib_domain, i);
 		if (!irq) {
+			unsigned long flags;
 			pr_err("ERROR: CIB bit %d@%llx IRQ unhandled, disabling\n", i, host_data->raw_reg);
+			raw_spin_lock_irqsave(&host_data->lock, flags);
+			en = cvmx_read_csr(host_data->en_reg);
 			en &= ~(1ull << i);
 			cvmx_write_csr(host_data->en_reg, en);
 			cvmx_write_csr(host_data->raw_reg, 1ull << i);
+			raw_spin_unlock_irqrestore(&host_data->lock, flags);
 		} else {
 			struct irq_desc *desc = irq_to_desc(irq);
 			struct irq_data *irq_data = irq_desc_get_irq_data(desc);
@@ -2762,8 +2766,8 @@ static int __init octeon_irq_init_cib(struct device_node *ciu_node,
 	cvmx_write_csr(host_data->en_reg, 0); /* disable all IRQs */
 	cvmx_write_csr(host_data->raw_reg, ~0); /* ack any outstanding */
 
-	r = request_irq(parent_irq, octeon_irq_cib_handler, 0,
-			"cib", cib_domain);
+	r = request_irq(parent_irq, octeon_irq_cib_handler,
+			IRQF_NO_THREAD, "cib", cib_domain);
 	if (r) {
 		pr_err("request_irq cib failed %d\n", r);
 		return r;
-- 
2.6.2

