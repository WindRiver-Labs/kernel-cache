From 41a27a9c2690a6278aa1575fa74bd223cb5c5277 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Sat, 19 Jul 2014 18:05:50 -0700
Subject: [PATCH 771/974] MIPS: OCTEON: Update cvmx-pcie.c from S.E.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/executive/cvmx-pcie.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/cvmx-pcie.c b/arch/mips/cavium-octeon/executive/cvmx-pcie.c
index bfe0b3b..46d404c 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-pcie.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-pcie.c
@@ -42,7 +42,7 @@
  *
  * Interface to PCIe as a host(RC) or target(EP)
  *
- * <hr>$Revision: 107037 $<hr>
+ * <hr>$Revision: 108132 $<hr>
  */
 #ifdef CVMX_BUILD_FOR_LINUX_KERNEL
 #include <asm/octeon/cvmx.h>
@@ -599,7 +599,7 @@ static int __cvmx_pcie_rc_initialize_link_gen1(int pcie_port)
 	return 0;
 }
 
-static inline void __cvmx_increment_ba(cvmx_sli_mem_access_subidx_t * pmas)
+static void __cvmx_increment_ba(cvmx_sli_mem_access_subidx_t * pmas)
 {
 	if (OCTEON_IS_MODEL(OCTEON_CN68XX))
 		pmas->cn68xx.ba++;
@@ -1742,7 +1742,7 @@ int cvmx_pcie_rc_shutdown(int pcie_port)
  * Build a PCIe config space request address for a device
  *
  * @param node	    node
- * @param pcie_port PCIe port to access
+ * @param port	    PCIe port (relative to the node) to access
  * @param bus       Sub bus
  * @param dev       Device ID
  * @param fn        Device sub function
@@ -1750,14 +1750,14 @@ int cvmx_pcie_rc_shutdown(int pcie_port)
  *
  * @return 64bit Octeon IO address
  */
-static inline uint64_t __cvmx_pcie_build_config_addr(int node, int pcie_port, int bus,
-						     int dev, int fn, int reg)
+static uint64_t __cvmx_pcie_build_config_addr(int node, int port, int bus,
+					      int dev, int fn, int reg)
 {
 	cvmx_pcie_address_t pcie_addr;
 	cvmx_pciercx_cfg006_t pciercx_cfg006;
 
-	pciercx_cfg006.u32 = cvmx_pcie_cfgx_read(pcie_port,
-						 CVMX_PCIERCX_CFG006(pcie_port));
+	pciercx_cfg006.u32 = cvmx_pcie_cfgx_read_node(node, port,
+						      CVMX_PCIERCX_CFG006(port));
 	if ((bus <= pciercx_cfg006.s.pbnum) && (dev != 0))
 		return 0;
 
@@ -1768,7 +1768,7 @@ static inline uint64_t __cvmx_pcie_build_config_addr(int node, int pcie_port, in
 	pcie_addr.config.subdid = 1;
 	pcie_addr.config.node = node;
 	pcie_addr.config.es = _CVMX_PCIE_ES;
-	pcie_addr.config.port = pcie_port;
+	pcie_addr.config.port = port;
 	pcie_addr.config.ty = (bus > pciercx_cfg006.s.pbnum);
 	pcie_addr.config.bus = bus;
 	pcie_addr.config.dev = dev;
-- 
2.6.2

