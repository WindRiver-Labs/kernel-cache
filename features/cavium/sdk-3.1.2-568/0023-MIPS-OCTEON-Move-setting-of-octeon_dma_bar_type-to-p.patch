From d4e0516998aa61b685e2331515c55ab50544e406 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Wed, 19 Nov 2014 09:11:18 -0800
Subject: [PATCH 023/184] MIPS: OCTEON: Move setting of octeon_dma_bar_type to
 prom_init().

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 49cda12909d166d389f508047581cb093edb508a
Description:

Follow-on patches require octeon_dma_bar_type to be set much earlier,
so move it to prom_init().

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from octeon-linux-kernel-patches-SDK-3.1.2-release]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/cavium-octeon/setup.c | 16 ++++++++++++++++
 arch/mips/pci/pci-octeon.c      |  7 -------
 arch/mips/pci/pcie-octeon.c     |  3 ---
 3 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index fb9b741..f4d9cfc 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -831,6 +831,22 @@ append_arg:
 #ifdef CONFIG_CAVIUM_GDB
 	cvmx_debug_init();
 #endif
+
+#ifdef CONFIG_PCI
+	if (octeon_has_feature(OCTEON_FEATURE_PCIE)) {
+		if (octeon_has_feature(OCTEON_FEATURE_NPEI))
+			octeon_dma_bar_type = OCTEON_DMA_BAR_TYPE_PCIE;
+		else
+			octeon_dma_bar_type = OCTEON_DMA_BAR_TYPE_PCIE2;
+	} else {
+		if (OCTEON_IS_MODEL(OCTEON_CN31XX) ||
+		    OCTEON_IS_MODEL(OCTEON_CN38XX_PASS2))
+			octeon_dma_bar_type = OCTEON_DMA_BAR_TYPE_SMALL;
+		else
+			octeon_dma_bar_type = OCTEON_DMA_BAR_TYPE_BIG;
+	}
+#endif
+
 	pr_info("Cavium Inc. SDK-" SDK_VERSION "\n");
 }
 
diff --git a/arch/mips/pci/pci-octeon.c b/arch/mips/pci/pci-octeon.c
index 3897fe8..5913adb 100644
--- a/arch/mips/pci/pci-octeon.c
+++ b/arch/mips/pci/pci-octeon.c
@@ -581,13 +581,6 @@ static int __init octeon_pci_setup(void)
 	/* Point pcibios_map_irq() to the PCI version of it */
 	octeon_pcibios_map_irq = octeon_pci_pcibios_map_irq;
 
-	/* Only use the big bars on chips that support it */
-	if (OCTEON_IS_MODEL(OCTEON_CN31XX) ||
-	    OCTEON_IS_MODEL(OCTEON_CN38XX_PASS2))
-		octeon_dma_bar_type = OCTEON_DMA_BAR_TYPE_SMALL;
-	else
-		octeon_dma_bar_type = OCTEON_DMA_BAR_TYPE_BIG;
-
 	if (!octeon_is_pci_host()) {
 		pr_notice("Not in host mode, PCI Controller not initialized\n");
 		return 0;
diff --git a/arch/mips/pci/pcie-octeon.c b/arch/mips/pci/pcie-octeon.c
index 9eb687f..be31236 100644
--- a/arch/mips/pci/pcie-octeon.c
+++ b/arch/mips/pci/pcie-octeon.c
@@ -602,7 +602,6 @@ static int __init octeon_pcie_setup(void)
 				npei_ctl_status.u64 =
 					cvmx_read_csr(CVMX_PEXP_NPEI_CTL_STATUS);
 				host_mode = npei_ctl_status.s.host_mode;
-				octeon_dma_bar_type = OCTEON_DMA_BAR_TYPE_PCIE;
 			}
 		} else {
 			union cvmx_mio_rst_ctlx mio_rst_ctl;
@@ -611,8 +610,6 @@ static int __init octeon_pcie_setup(void)
 			else
 				mio_rst_ctl.u64 = cvmx_read_csr(CVMX_MIO_RST_CTLX(port));
 			host_mode = mio_rst_ctl.s.host_mode;
-			if (port == 0)
-				octeon_dma_bar_type = OCTEON_DMA_BAR_TYPE_PCIE2;
 		}
 		if (host_mode) {
 			uint32_t device;
-- 
1.9.1

