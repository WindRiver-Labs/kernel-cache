From 5859303aa051205893b920c66ce2cc55b1f05ec7 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 27 Feb 2015 17:08:04 -0800
Subject: [PATCH 087/184] MIPS: OCTEON: Fix GPIO interrupt code for CIU3.

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: e2d252f5687d774a889fbab4c646faf45e98b604
Description:

Several "typos" kept the code from working, fix those.  Add a mapping
function to convert from INTSN to the irqdomain hwirq.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from octeon-linux-kernel-patches-SDK-3.1.2-release]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c  | 35 +++++++++++++++++++++++++++++++++--
 arch/mips/include/asm/octeon/octeon.h |  2 +-
 2 files changed, 34 insertions(+), 3 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index e17dd0a..f0d57d7 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -38,11 +38,14 @@ static DEFINE_PER_CPU(struct octeon_ciu3_info *, octeon_ciu3_info);
  */
 #define MAX_CIU3_DOMAINS		256
 
+typedef irq_hw_number_t (*octeon_ciu3_intsn2hw_t)(struct irq_domain *, unsigned int);
+
 /* Information for each ciu3 in the system */
 struct octeon_ciu3_info {
 	u64			ciu3_addr;
 	int			node;
 	struct irq_domain	*domain[MAX_CIU3_DOMAINS];
+	octeon_ciu3_intsn2hw_t	intsn2hw[MAX_CIU3_DOMAINS];
 };
 
 /* Each ciu3 in the system uses its own data (one ciu3 per node) */
@@ -2389,11 +2392,19 @@ static void octeon_irq_ciu3_ip2(void)
 
 	if (likely(dest_pp_int.s.intr)) {
 		irq_hw_number_t intsn = dest_pp_int.s.intsn;
+		irq_hw_number_t hw;
+		struct irq_domain *domain;
 		/* Get the domain to use from the major block */
 		int block = intsn >> 12;
 		int ret;
 
-		ret = handle_domain_irq(ciu3_info->domain[block], intsn, NULL);
+		domain = ciu3_info->domain[block];
+		if (ciu3_info->intsn2hw[block])
+			hw = ciu3_info->intsn2hw[block](domain, intsn);
+		else
+			hw = intsn;
+
+		ret = handle_domain_irq(domain, hw, NULL);
 		if (ret < 0) {
 			union cvmx_ciu3_iscx_w1c isc_w1c;
 			u64 isc_w1c_addr = ciu3_addr + CIU3_ISC_W1C(intsn);
@@ -3179,6 +3190,7 @@ static int octeon_irq_gpio78_map(struct irq_domain *d,
 		return -ENOMEM;
 
 	cd->intsn = gpiod->base_hwirq + hw;
+	cd->gpio_line = hw;
 	cd->current_cpu = -1;
 	cd->ciu3_addr = ciu3_info->ciu3_addr;
 	cd->ciu_node = ciu3_info->node;
@@ -3195,6 +3207,14 @@ static struct irq_domain_ops octeon_irq_domain_gpio78_ops = {
 	.xlate = octeon_irq_gpio_xlat,
 };
 
+static irq_hw_number_t octeon_irq_ciu3_intsn2hw(struct irq_domain *d,
+						unsigned int intsn)
+{
+	struct octeon_irq_gpio_domain_data *gpiod = d->host_data;
+
+	return intsn - gpiod->base_hwirq;
+}
+
 static int __init octeon_irq_init_gpio78(struct device_node *gpio_node,
 					 struct device_node *parent)
 {
@@ -3212,9 +3232,20 @@ static int __init octeon_irq_init_gpio78(struct device_node *gpio_node,
 
 	gpiod = kzalloc(sizeof(*gpiod), GFP_KERNEL);
 	if (gpiod) {
+		struct octeon_ciu3_info *ciu3_info;
+		struct irq_domain *domain;
+		int block = (base_hwirq >> 12) & 0xff;
+		int node = of_node_to_nid(gpio_node);
+
 		/* gpio domain host_data is the base hwirq number. */
 		gpiod->base_hwirq = base_hwirq;
-		irq_domain_add_tree(gpio_node, &octeon_irq_domain_gpio78_ops, gpiod);
+		domain = irq_domain_add_tree(gpio_node, &octeon_irq_domain_gpio78_ops, gpiod);
+		if (node < 0)
+			node = 0;
+		ciu3_info = octeon_ciu3_info_per_node[node];
+		ciu3_info->domain[block] = domain;
+		ciu3_info->intsn2hw[block] = octeon_irq_ciu3_intsn2hw;
+
 	} else {
 		pr_warn("Cannot allocate memory for GPIO irq_domain.\n");
 		return -ENOMEM;
diff --git a/arch/mips/include/asm/octeon/octeon.h b/arch/mips/include/asm/octeon/octeon.h
index 66fce55..70bd051 100644
--- a/arch/mips/include/asm/octeon/octeon.h
+++ b/arch/mips/include/asm/octeon/octeon.h
@@ -323,9 +323,9 @@ struct octeon_ciu_chip_data {
 		struct {		/* only used for ciu/ciu2 */
 			u8 line;
 			u8 bit;
-			u8 gpio_line;
 		};
 	};
+	int gpio_line;
 	int current_cpu;	/* Next CPU expected to take this irq */
 	int ciu_node; /* NUMA node number of the CIU */
 };
-- 
1.9.1

