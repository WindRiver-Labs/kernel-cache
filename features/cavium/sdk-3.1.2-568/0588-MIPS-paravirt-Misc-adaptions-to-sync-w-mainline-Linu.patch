From f7805d0007aa22d63b6810fc8bb452570649b264 Mon Sep 17 00:00:00 2001
From: Andreas Herrmann <andreas.herrmann@caviumnetworks.com>
Date: Thu, 13 Feb 2014 13:46:59 -0800
Subject: [PATCH 588/974] MIPS: paravirt: Misc adaptions to sync /w mainline
 Linux

 - renaming of mips_cpunum to get_ebase_cpunum
 - fix barriers when booting secondary CPUs
 - remove unimplemented ops from irq_chip_pci
 - remove dead code
 - fix typo and one formatting change

Signed-off-by: Andreas Herrmann <andreas.herrmann@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../include/asm/mach-paravirt/kernel-entry-init.h  |  1 +
 arch/mips/include/asm/mipsregs.h                   |  2 +-
 arch/mips/paravirt/paravirt-irq.c                  | 25 +++++++---------------
 arch/mips/paravirt/paravirt-smp.c                  |  7 +++---
 arch/mips/paravirt/serial.c                        | 12 -----------
 arch/mips/paravirt/setup.c                         |  2 +-
 6 files changed, 14 insertions(+), 35 deletions(-)

diff --git a/arch/mips/include/asm/mach-paravirt/kernel-entry-init.h b/arch/mips/include/asm/mach-paravirt/kernel-entry-init.h
index c812efa..2f82bfa 100644
--- a/arch/mips/include/asm/mach-paravirt/kernel-entry-init.h
+++ b/arch/mips/include/asm/mach-paravirt/kernel-entry-init.h
@@ -43,6 +43,7 @@
 
 	PTR_LA	t1, paravirt_smp_gp
 	PTR_ADDU t1, t1, t0
+	sync
 	PTR_L	gp, 0(t1)
 	.endm
 
diff --git a/arch/mips/include/asm/mipsregs.h b/arch/mips/include/asm/mipsregs.h
index f487f93..91b0025 100644
--- a/arch/mips/include/asm/mipsregs.h
+++ b/arch/mips/include/asm/mipsregs.h
@@ -2167,7 +2167,7 @@ static inline unsigned long hypcall3(unsigned long num, unsigned long arg0,
 	return r;
 }
 
-static inline unsigned int mips_cpunum(void)
+static inline unsigned int get_ebase_cpunum(void)
 {
 	return read_c0_ebase() & 0x3ff; /* Low 10 bits of ebase. */
 }
diff --git a/arch/mips/paravirt/paravirt-irq.c b/arch/mips/paravirt/paravirt-irq.c
index 3d0e521..d7ee27e 100644
--- a/arch/mips/paravirt/paravirt-irq.c
+++ b/arch/mips/paravirt/paravirt-irq.c
@@ -15,12 +15,12 @@
 
 #define MBOX_BITS_PER_CPU 3
 
-int cpunum_for_cpu(int cpu)
+static int cpunum_for_cpu(int cpu)
 {
 #ifdef CONFIG_SMP
 	return cpu_logical_map(cpu);
 #else
-	return mips_cpunum();
+	return get_ebase_cpunum();
 #endif
 }
 
@@ -212,15 +212,6 @@ static void irq_pci_unmask(struct irq_data *data)
 	__raw_writel(mask, mips_irq_chip + mips_irq_chip_reg_en_w1s);
 }
 
-static int irq_pci_set_affinity(struct irq_data *data, const struct cpumask *dest, bool force)
-{
-	return 0;
-}
-
-static void irq_pci_cpu_offline(struct irq_data *data)
-{
-}
-
 static struct irq_chip irq_chip_pci = {
 	.name = "PCI",
 	.irq_enable = irq_pci_enable,
@@ -228,8 +219,6 @@ static struct irq_chip irq_chip_pci = {
 	.irq_ack = irq_pci_ack,
 	.irq_mask = irq_pci_mask,
 	.irq_unmask = irq_pci_unmask,
-	.irq_set_affinity = irq_pci_set_affinity,
-	.irq_cpu_offline = irq_pci_cpu_offline,
 };
 
 static void irq_mbox_all(struct irq_data *data,  void __iomem *base)
@@ -264,7 +253,7 @@ static void irq_mbox_ack(struct irq_data *data)
 
 	WARN_ON(mbox >= MBOX_BITS_PER_CPU);
 
-	mask = 1 << (mips_cpunum() * MBOX_BITS_PER_CPU + mbox);
+	mask = 1 << (get_ebase_cpunum() * MBOX_BITS_PER_CPU + mbox);
 	__raw_writel(mask, mips_irq_chip + mips_irq_chip_reg_raw_w1c + sizeof(u32));
 }
 
@@ -282,7 +271,7 @@ void irq_mbox_ipi(int cpu, unsigned int actions)
 static void irq_mbox_cpu_onoffline(struct irq_data *data,  void __iomem *base)
 {
 	unsigned int mbox = data->irq - MIPS_IRQ_MBOX0;
-	unsigned int cpuid = mips_cpunum();
+	unsigned int cpuid = get_ebase_cpunum();
 	u32 mask;
 
 	WARN_ON(mbox >= MBOX_BITS_PER_CPU);
@@ -345,9 +334,11 @@ static void __init irq_pci_init(void)
 
 static void irq_pci_dispatch(void)
 {
-	unsigned int cpuid = mips_cpunum();
+	unsigned int cpuid = get_ebase_cpunum();
+	u32 en;
 
-	u32 en = __raw_readl(mips_irq_chip + mips_irq_chip_reg_src + (cpuid * mips_irq_cpu_stride));
+	en = __raw_readl(mips_irq_chip + mips_irq_chip_reg_src +
+			(cpuid * mips_irq_cpu_stride));
 
 	if (!en) {
 		en = __raw_readl(mips_irq_chip + mips_irq_chip_reg_src + (cpuid * mips_irq_cpu_stride) + sizeof(u32));
diff --git a/arch/mips/paravirt/paravirt-smp.c b/arch/mips/paravirt/paravirt-smp.c
index b0ee1ab..41d393c 100644
--- a/arch/mips/paravirt/paravirt-smp.c
+++ b/arch/mips/paravirt/paravirt-smp.c
@@ -44,7 +44,7 @@ early_param("numcpus", set_numcpus);
 static void paravirt_smp_setup(void)
 {
 	int id;
-	unsigned int cpunum = mips_cpunum();
+	unsigned int cpunum = get_ebase_cpunum();
 
 	if (WARN_ON(cpunum >= NR_CPUS))
 		return;
@@ -105,10 +105,9 @@ static void paravirt_cpus_done(void)
 
 static void paravirt_boot_secondary(int cpu, struct task_struct *idle)
 {
-	paravirt_smp_gp[cpu] = (unsigned long)(task_thread_info(idle));
-	wmb();
+	paravirt_smp_gp[cpu] = (unsigned long)task_thread_info(idle);
+	smp_wmb();
 	paravirt_smp_sp[cpu] = __KSTK_TOS(idle);
-	mb();
 }
 
 static irqreturn_t paravirt_reched_interrupt(int irq, void *dev_id)
diff --git a/arch/mips/paravirt/serial.c b/arch/mips/paravirt/serial.c
index 83145de..e3f98b2 100644
--- a/arch/mips/paravirt/serial.c
+++ b/arch/mips/paravirt/serial.c
@@ -16,18 +16,6 @@
  */
 int prom_putchar(char c)
 {
-#if 0
-	register char *pc asm("a1");
-
-	pc = &c;
-	asm volatile(
-		"li	$v0, 0\n\t"	/* console output*/
-		"li	$a0, 0\n\t"	/* console port 0*/
-		"li	$a2, 1\n\t"	/* one char only */
-		".word 0x42000028"	/* HYPCALL */
-		: : "r" (pc), "m" (*pc) : "v0", "a0", "a2"
-		);
-#endif
 	hypcall3(0 /* Console output */, 0 /*  port 0 */, (unsigned long)&c, 1 /* len == 1 */);
 
 	return 1;
diff --git a/arch/mips/paravirt/setup.c b/arch/mips/paravirt/setup.c
index 80c325e..b3d976e 100644
--- a/arch/mips/paravirt/setup.c
+++ b/arch/mips/paravirt/setup.c
@@ -18,7 +18,7 @@ extern struct plat_smp_ops paravirt_smp_ops;
 
 const char *get_system_type(void)
 {
-	return "MIPS Para-Virtulized Guest";
+	return "MIPS Para-Virtualized Guest";
 }
 
 void __init plat_time_init(void)
-- 
2.6.2

