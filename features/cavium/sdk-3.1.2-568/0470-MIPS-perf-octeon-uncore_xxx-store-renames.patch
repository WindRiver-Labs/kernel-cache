From 4b6a11632f565992a9407b0d03016985075f0554 Mon Sep 17 00:00:00 2001
From: Peter Swain <peter.swain@cavium.com>
Date: Tue, 4 Feb 2014 13:46:59 -0800
Subject: [PATCH 470/974] MIPS: perf: octeon uncore_xxx/store/ renames

Requires commit 13e623c100
  perf: context-sensitive keywords: for uncore_foo/miss/

restore the obvious spelling to uncore_xxx/cycles,ops,miss,store/
now that the perf lexer has been bent to allow these inbuilt event
names to be re-used in uncore_xxx/event/ context
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/perf_uncore_events.h | 20 +++++---------------
 1 file changed, 5 insertions(+), 15 deletions(-)

diff --git a/arch/mips/cavium-octeon/perf_uncore_events.h b/arch/mips/cavium-octeon/perf_uncore_events.h
index 33709cb..77eff43 100644
--- a/arch/mips/cavium-octeon/perf_uncore_events.h
+++ b/arch/mips/cavium-octeon/perf_uncore_events.h
@@ -22,16 +22,6 @@
 # define EVID(_family, _name) UNC_##_family##_##_name
 #endif
 
-/*
- * Event-naming issues...
- * "cycles", "store", "miss" and "ops" are reserved words to perf,
- * they are arch-independent event names with fixed bindings,
- * so not re-usable in (eg) uncore_xxx/cycles/ context.
- * Until this is fixed in tools/perf/util/parse-events.l grammar,
- * pointely mis-spell cycles as cyc, store as stor, ops as op, miss as mis.
- * [all instances marked RENAME:xxx below]
- */
-
 /* (re)undef to allow re-include, with varying EV() definitions */
 #undef OCT_EVENTS
 #undef LMC_EVENTS
@@ -56,7 +46,7 @@
 	/* _lim */ lim_cvmx_lmcx)
 #define LMC_EVENTS \
 	LMC_EV(dclk, CVMX_LMCX_DCLK) \
-	LMC_EV(op, CVMX_LMCX_OPS) /*RENAME:op*/ \
+	LMC_EV(ops, CVMX_LMCX_OPS) \
 	LMC_EV(ifb, CVMX_LMCX_IFB) \
 	/*end*/
 
@@ -65,12 +55,12 @@
 #define O1P_EV(_name, _cvmx) EV(o1p, _name, _cvmx, \
 	UNC_MAPPED|UNC_O1P, 0, 0, 0, NULL)
 #define O1P_EVENTS \
-	O1P_EV(cyc, CVMX_L2C_EVENT_CYCLES) /*RENAME:cycles*/ \
+	O1P_EV(cycles, CVMX_L2C_EVENT_CYCLES) \
 	O1P_EV(imiss, CVMX_L2C_EVENT_INSTRUCTION_MISS) \
 	O1P_EV(ihit, CVMX_L2C_EVENT_INSTRUCTION_HIT) \
 	O1P_EV(dmiss, CVMX_L2C_EVENT_DATA_MISS)\
 	O1P_EV(dhit, CVMX_L2C_EVENT_DATA_HIT) \
-	O1P_EV(mis, CVMX_L2C_EVENT_MISS) /*RENAME:miss*/ \
+	O1P_EV(miss, CVMX_L2C_EVENT_MISS) \
 	O1P_EV(hit, CVMX_L2C_EVENT_HIT) \
 	O1P_EV(victim_buffer_hit, CVMX_L2C_EVENT_VICTIM_HIT) \
 	O1P_EV(lfb_nq_index_conflict, CVMX_L2C_EVENT_INDEX_CONFLICT) \
@@ -135,7 +125,7 @@
 	_lim)
 #define O23_EVENTS \
 	O23_EV(add, CVMX_L2C_XMC, UNC_O23, lim_o23_xmcd_rsdc) \
-	O23_EV(stor, CVMX_L2C_XMD, UNC_O23, lim_o23_xmcd_rsdc) /*RENAME:store*/\
+	O23_EV(store, CVMX_L2C_XMD, UNC_O23, lim_o23_xmcd_rsdc) \
 	O23_EV(commit, CVMX_L2C_RSC, UNC_O23, lim_o23_xmcd_rsdc) \
 	O23_EV(fill, CVMX_L2C_RSD, UNC_O23, lim_o23_xmcd_rsdc) \
 	O23_EV(inval, CVMX_L2C_INV, UNC_O3, lim_o3_l2c_inv) \
@@ -157,7 +147,7 @@
 #define TAD_EVENTS \
 	/* omitted: TAD_EV(none, UNC_O23, CVMX_L2C_TAD_EVENT_NONE)*/ \
 	TAD_EV(hit, UNC_O23, CVMX_L2C_TAD_EVENT_TAG_HIT) \
-	TAD_EV(mis, UNC_O23, CVMX_L2C_TAD_EVENT_TAG_MISS) /*RENAME:miss*/ \
+	TAD_EV(miss, UNC_O23, CVMX_L2C_TAD_EVENT_TAG_MISS) \
 	TAD_EV(no_alloc, UNC_O23, CVMX_L2C_TAD_EVENT_TAG_NOALLOC) \
 	TAD_EV(victim, UNC_O23, CVMX_L2C_TAD_EVENT_TAG_VICTIM) \
 	TAD_EV(sc_fail, UNC_O23, CVMX_L2C_TAD_EVENT_SC_FAIL) \
-- 
2.6.2

