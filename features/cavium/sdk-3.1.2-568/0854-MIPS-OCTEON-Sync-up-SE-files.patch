From 90f5fbd54e8768d2c77ebdb99db8511f9ff36c19 Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Sat, 26 Jul 2014 18:05:50 -0700
Subject: [PATCH 854/974] MIPS:OCTEON: Sync-up SE files

Define bgx_common_init() (which initializes lmac_type) by default.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/executive/cvmx-helper-bgx.c | 10 ++++------
 arch/mips/include/asm/octeon/cvmx-helper-bgx.h      |  2 +-
 drivers/net/ethernet/octeon/octeon-bgx-port.c       |  5 ++---
 3 files changed, 7 insertions(+), 10 deletions(-)

diff --git a/arch/mips/cavium-octeon/executive/cvmx-helper-bgx.c b/arch/mips/cavium-octeon/executive/cvmx-helper-bgx.c
index 9ceb187..1217af9 100644
--- a/arch/mips/cavium-octeon/executive/cvmx-helper-bgx.c
+++ b/arch/mips/cavium-octeon/executive/cvmx-helper-bgx.c
@@ -474,7 +474,7 @@ static int __cvmx_helper_bgx_sgmii_hardware_init(int xiface, int num_ports)
 		if (!cvmx_helper_is_port_valid(xiface, index))
 			continue;
 
-		__cvmx_helper_bgx_port_init(xipd_port, 0, 0);
+		__cvmx_helper_bgx_port_init(xipd_port, 0);
 
 #ifdef CVMX_BUILD_FOR_LINUX_KERNEL
 		/*
@@ -1183,11 +1183,10 @@ static void __cvmx_bgx_restart_training(int node, int unit, int lmac)
  *
  * @param xipd_port IPD/PKO port to configure.
  * @param phy_pres  If set, enable disparity, only applies to RXAUI interface
- * @param is_mix    Configure lmac for MIX interface
  *
  * @return Zero on success, negative on failure.
  */ 
-int __cvmx_helper_bgx_port_init(int xipd_port, int phy_pres, int is_mix)
+int __cvmx_helper_bgx_port_init(int xipd_port, int phy_pres)
 {
 	int xiface = cvmx_helper_get_interface_num(xipd_port);
 	struct cvmx_xiface xi = cvmx_helper_xiface_to_node_interface(xiface);
@@ -1207,8 +1206,7 @@ int __cvmx_helper_bgx_port_init(int xipd_port, int phy_pres, int is_mix)
 
 	mode = cvmx_helper_interface_get_mode(xiface);
 
-	if (is_mix)
-		__cvmx_bgx_common_init(xiface, index);
+	__cvmx_bgx_common_init(xiface, index);
 
 	__cvmx_bgx_common_init_pknd(xiface, index);
 
@@ -1508,7 +1506,7 @@ int __cvmx_helper_bgx_xaui_enable(int xiface)
 			phy_pres = 1;
 		else
 			phy_pres = 0;
-		if (__cvmx_helper_bgx_port_init(xipd_port, phy_pres, 0))
+		if (__cvmx_helper_bgx_port_init(xipd_port, phy_pres))
 			return -1;
 
 		res = __cvmx_helper_bgx_xaui_link_init(index, xiface);
diff --git a/arch/mips/include/asm/octeon/cvmx-helper-bgx.h b/arch/mips/include/asm/octeon/cvmx-helper-bgx.h
index c11391d..8e635fd 100644
--- a/arch/mips/include/asm/octeon/cvmx-helper-bgx.h
+++ b/arch/mips/include/asm/octeon/cvmx-helper-bgx.h
@@ -258,7 +258,7 @@ extern void cvmx_helper_bgx_tx_options(unsigned node,
 extern void cvmx_helper_bgx_set_mac(int xipd_port, int bcst, int mcst, uint64_t mac);
 
 
-extern int __cvmx_helper_bgx_port_init(int xipd_port, int phy_pres, int is_mix);
+extern int __cvmx_helper_bgx_port_init(int xipd_port, int phy_pres);
 extern void cvmx_helper_bgx_set_jabber(int xiface, unsigned index, unsigned size);
 extern int cvmx_helper_bgx_shutdown_port(int xiface, int index);
 extern int cvmx_bgx_set_backpressure_override(int xiface, unsigned port_mask);
diff --git a/drivers/net/ethernet/octeon/octeon-bgx-port.c b/drivers/net/ethernet/octeon/octeon-bgx-port.c
index bc677d9..78a82d6 100644
--- a/drivers/net/ethernet/octeon/octeon-bgx-port.c
+++ b/drivers/net/ethernet/octeon/octeon-bgx-port.c
@@ -500,11 +500,10 @@ static int bgx_port_probe(struct platform_device *pdev)
 
 	r = dev_set_drvdata(&pdev->dev, priv);
 
-printk("cmrx_config = 0x%lx\n", cvmx_read_csr(CVMX_BGXX_CMRX_CONFIG(priv->index, priv->bgx_interface)));
 	if (priv->phy_np)
-		__cvmx_helper_bgx_port_init(priv->ipd_port, 1, 0);
+		__cvmx_helper_bgx_port_init(priv->ipd_port, 1);
 	else
-		__cvmx_helper_bgx_port_init(priv->ipd_port, 0, 0);
+		__cvmx_helper_bgx_port_init(priv->ipd_port, 0);
 
 	if (r)
 		goto err;
-- 
2.6.2

