From ebfcda858ebd93dd98b4041f3bdbac0441b97112 Mon Sep 17 00:00:00 2001
From: Carlos Munoz <cmunoz@caviumnetworks.com>
Date: Thu, 31 Jul 2014 18:05:50 -0700
Subject: [PATCH 627/974] netdev: octeon3-ethernet: Add ethtool support.

Signed-off-by: Carlos Munoz <cmunoz@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/octeon/octeon-bgx-port.c  | 46 ++++++++++++++++++++++++++
 drivers/net/ethernet/octeon/octeon-bgx.h       |  7 ++++
 drivers/net/ethernet/octeon/octeon3-ethernet.c | 19 +++++++++++
 3 files changed, 72 insertions(+)

diff --git a/drivers/net/ethernet/octeon/octeon-bgx-port.c b/drivers/net/ethernet/octeon/octeon-bgx-port.c
index 3273f69..e9afb3a 100644
--- a/drivers/net/ethernet/octeon/octeon-bgx-port.c
+++ b/drivers/net/ethernet/octeon/octeon-bgx-port.c
@@ -73,6 +73,52 @@ void bgx_port_set_netdev(struct device *dev, struct net_device *netdev)
 }
 EXPORT_SYMBOL(bgx_port_set_netdev);
 
+int bgx_port_ethtool_get_settings(struct net_device	*netdev,
+				  struct ethtool_cmd	*cmd)
+{
+	cvmx_helper_link_info_t link_info;
+	struct bgx_port_priv *p = bgx_port_netdev2priv(netdev);
+
+	if (p->phydev)
+		return phy_ethtool_gset(p->phydev, cmd);
+
+	link_info = cvmx_helper_link_get(p->ipd_port);
+	cmd->speed = link_info.s.link_up ? link_info.s.speed : 0;
+	cmd->duplex = link_info.s.full_duplex ? DUPLEX_FULL : DUPLEX_HALF;
+
+	return 0;
+}
+EXPORT_SYMBOL(bgx_port_ethtool_get_settings);
+
+int bgx_port_ethtool_set_settings(struct net_device	*netdev,
+				  struct ethtool_cmd	*cmd)
+{
+	struct bgx_port_priv *p = bgx_port_netdev2priv(netdev);
+
+	if (!capable(CAP_NET_ADMIN))
+		return -EPERM;
+
+	if (p->phydev)
+		return phy_ethtool_sset(p->phydev, cmd);
+
+	return -EOPNOTSUPP;
+}
+EXPORT_SYMBOL(bgx_port_ethtool_set_settings);
+
+int bgx_port_ethtool_nway_reset(struct net_device *netdev)
+{
+	struct bgx_port_priv *p = bgx_port_netdev2priv(netdev);
+
+	if (!capable(CAP_NET_ADMIN))
+		return -EPERM;
+
+	if (p->phydev)
+		return phy_start_aneg(p->phydev);
+
+	return -EOPNOTSUPP;
+}
+EXPORT_SYMBOL(bgx_port_ethtool_nway_reset);
+
 const u8 *bgx_port_get_mac(struct net_device *netdev)
 {
 	struct bgx_port_priv *priv = bgx_port_netdev2priv(netdev);
diff --git a/drivers/net/ethernet/octeon/octeon-bgx.h b/drivers/net/ethernet/octeon/octeon-bgx.h
index 7fa10b2..a54ed9b 100644
--- a/drivers/net/ethernet/octeon/octeon-bgx.h
+++ b/drivers/net/ethernet/octeon/octeon-bgx.h
@@ -27,6 +27,8 @@
 #ifndef _OCTEON_BGX_H_
 #define _OCTEON_BGX_H_
 
+#include <linux/ethtool.h>
+
 struct device;
 struct net_device;
 struct bgx_port_priv;
@@ -43,6 +45,11 @@ int bgx_port_disable(struct net_device *netdev);
 const u8 *bgx_port_get_mac(struct net_device *netdev);
 void bgx_port_set_rx_filtering(struct net_device *netdev);
 int bgx_port_change_mtu(struct net_device *netdev, int new_mtu);
+int bgx_port_ethtool_get_settings(struct net_device *netdev,
+				  struct ethtool_cmd *cmd);
+int bgx_port_ethtool_set_settings(struct net_device *netdev,
+				  struct ethtool_cmd *cmd);
+int bgx_port_ethtool_nway_reset(struct net_device *netdev);
 
 struct bgx_platform_data {
 	int numa_node;
diff --git a/drivers/net/ethernet/octeon/octeon3-ethernet.c b/drivers/net/ethernet/octeon/octeon3-ethernet.c
index 10386f3..cf25e00 100644
--- a/drivers/net/ethernet/octeon/octeon3-ethernet.c
+++ b/drivers/net/ethernet/octeon/octeon3-ethernet.c
@@ -727,6 +727,22 @@ static int octeon3_eth_napi(struct napi_struct *napi, int budget)
 
 //#define BROKEN_SIMULATOR_CSUM 1
 
+static void ethtool_get_drvinfo(struct net_device *netdev,
+				struct ethtool_drvinfo *info)
+{
+	strcpy(info->driver, "octeon3-ethernet");
+	strcpy(info->version, "1.0");
+	strcpy(info->bus_info, "Builtin");
+}
+
+static const struct ethtool_ops octeon3_ethtool_ops = {
+	.get_drvinfo = ethtool_get_drvinfo,
+	.get_settings = bgx_port_ethtool_get_settings,
+	.set_settings = bgx_port_ethtool_set_settings,
+	.nway_reset = bgx_port_ethtool_nway_reset,
+	.get_link = ethtool_op_get_link,
+};
+
 static int octeon3_eth_ndo_init(struct net_device *netdev)
 {
 	struct octeon3_ethernet *priv = netdev_priv(netdev);
@@ -914,6 +930,9 @@ static int octeon3_eth_ndo_init(struct net_device *netdev)
 		napi_enable(&priv->rx_cxt[i].napi);
 	}
 
+	/* Register ethtool methods */
+	SET_ETHTOOL_OPS(netdev, &octeon3_ethtool_ops);
+
 	netdev_info(netdev, "octeon3_eth_ndo_init\n");
 	return 0;
 err:
-- 
2.6.2

