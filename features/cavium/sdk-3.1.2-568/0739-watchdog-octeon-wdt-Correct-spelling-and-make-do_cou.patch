From 219b371d1ecdd352f85fe0dd3f2bfe6116ffb894 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 4 Jul 2014 18:05:50 -0700
Subject: [PATCH 739/974] watchdog: octeon-wdt: Correct spelling and make
 do_countdown boolean.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/watchdog/octeon-wdt-main.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/watchdog/octeon-wdt-main.c b/drivers/watchdog/octeon-wdt-main.c
index 2c5dbad..6fac160 100644
--- a/drivers/watchdog/octeon-wdt-main.c
+++ b/drivers/watchdog/octeon-wdt-main.c
@@ -90,7 +90,7 @@ static unsigned int max_timeout_sec;
 static unsigned int timeout_sec;
 
 /* Set to non-zero when userspace countdown mode active */
-static int do_coundown;
+static bool do_countdown;
 static unsigned int countdown_reset;
 static unsigned int per_cpu_countdown[NR_CPUS];
 
@@ -153,7 +153,7 @@ static irqreturn_t octeon_wdt_poke_irq(int cpl, void *dev_id)
 	int cpu = core2cpu(core);
 	int node = cvmx_get_node_num();
 
-	if (do_coundown) {
+	if (do_countdown) {
 		if (per_cpu_countdown[cpu] > 0) {
 			/* We're alive, poke the watchdog */
 			cvmx_write_csr_node(node, CVMX_CIU_PP_POKEX(core), 1);
@@ -422,7 +422,7 @@ static void octeon_wdt_ping(void)
 		node = cpu_to_node(cpu);
 		cvmx_write_csr_node(node, CVMX_CIU_PP_POKEX(coreid), 1);
 		per_cpu_countdown[cpu] = countdown_reset;
-		if ((countdown_reset || !do_coundown) &&
+		if ((countdown_reset || !do_countdown) &&
 		    !cpumask_test_cpu(cpu, &irq_enabled_cpus)) {
 			/* We have to enable the irq */
 			enable_irq(octeon_wdt_cpu_to_irq(cpu));
@@ -586,7 +586,7 @@ static int octeon_wdt_open(struct inode *inode, struct file *file)
 	 *	Activate
 	 */
 	octeon_wdt_ping();
-	do_coundown = 1;
+	do_countdown = true;
 	return nonseekable_open(inode, file);
 }
 
@@ -605,7 +605,7 @@ static int octeon_wdt_open(struct inode *inode, struct file *file)
 static int octeon_wdt_release(struct inode *inode, struct file *file)
 {
 	if (expect_close) {
-		do_coundown = 0;
+		do_countdown = false;
 		octeon_wdt_ping();
 	} else {
 		pr_crit("WDT device closed unexpectedly.  WDT will not stop!\n");
-- 
2.6.2

