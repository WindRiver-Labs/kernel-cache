From 225a6b1db0c1416b1da00ac9d50f6bc86cb3dd20 Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Fri, 31 Jul 2015 17:07:22 -0700
Subject: [PATCH 132/184] netdev:octeon-ethernet: Set bypass mode for RGMII
 interface

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 5b2e5591692c79339e407979b8abd4b95f6df1ee
Description:

Parse the device tree for rx-clk-delay-bypass and set bypass mode.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from octeon-linux-kernel-patches-SDK-3.1.2-release]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/octeon/ethernet.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/octeon/ethernet.c b/drivers/net/ethernet/octeon/ethernet.c
index e49ac43..e093ac1 100644
--- a/drivers/net/ethernet/octeon/ethernet.c
+++ b/drivers/net/ethernet/octeon/ethernet.c
@@ -767,16 +767,24 @@ static int cvm_oct_get_port_status(struct device_node *pip)
 	for (i = 0; i < num_interfaces; i++) {
 		int num_ports = cvmx_helper_interface_enumerate(i);
 		int mode = cvmx_helper_interface_get_mode(i);
+		struct device_node *port_node;
 
 		for (j = 0; j < num_ports; j++) {
+			port_node = cvm_oct_node_for_port(pip, i, j);
 			switch (mode) {
+			case CVMX_HELPER_INTERFACE_MODE_AGL:
+				if (port_node &&
+				    of_get_property(port_node,
+						    "cavium,rx-clk-delay-bypass",
+						    NULL))
+					cvmx_helper_set_agl_rx_clock_delay_bypass(i, j, true);
+					/* Continue on */
 			case CVMX_HELPER_INTERFACE_MODE_RGMII:
 			case CVMX_HELPER_INTERFACE_MODE_GMII:
 			case CVMX_HELPER_INTERFACE_MODE_XAUI:
 			case CVMX_HELPER_INTERFACE_MODE_RXAUI:
 			case CVMX_HELPER_INTERFACE_MODE_SPI:
-			case CVMX_HELPER_INTERFACE_MODE_AGL:
-				if (cvm_oct_node_for_port(pip, i, j) != NULL)
+				if (port_node)
 					cvmx_helper_set_port_valid(i, j, true);
 				else
 					cvmx_helper_set_port_valid(i, j, false);
@@ -786,8 +794,6 @@ static int cvm_oct_get_port_status(struct device_node *pip)
 			case CVMX_HELPER_INTERFACE_MODE_SGMII:
 			case CVMX_HELPER_INTERFACE_MODE_QSGMII:
 			{
-				struct device_node *port_node;
-				port_node = cvm_oct_node_for_port(pip, i, j);
 				if (port_node != NULL)
 					cvmx_helper_set_port_valid(i, j, true);
 				else
-- 
1.9.1

