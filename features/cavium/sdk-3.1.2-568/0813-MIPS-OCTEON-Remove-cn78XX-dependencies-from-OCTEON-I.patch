From a4bf8b9ba5e20ebdbf8e7f6fcb3dff4f7ca5a4cb Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Sun, 6 Jul 2014 18:05:50 -0700
Subject: [PATCH 813/974] MIPS: OCTEON: Remove cn78XX dependencies from OCTEON
 III specific code.

Needed for CN73XX and CN75XX support.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c | 24 +++++++++++++++++-------
 arch/mips/cavium-octeon/setup.c      |  8 ++++----
 arch/mips/cavium-octeon/smp.c        |  2 +-
 3 files changed, 22 insertions(+), 12 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index 2cdedc0..fa7331e 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -1422,6 +1422,15 @@ static int __init octeon_irq_init_ciu(struct device_node *ciu_node, struct devic
 	if (!dd)
 		return -ENOMEM;
 
+#ifdef CONFIG_SMP
+	/*
+	 * Set the default affinity to the boot cpu.  Currently
+	 * required by Ethernet Driver.
+	 */
+	cpumask_clear(irq_default_affinity);
+	cpumask_set_cpu(smp_processor_id(), irq_default_affinity);
+#endif
+
 	octeon_irq_init_ciu_percpu();
 	octeon_irq_setup_secondary = octeon_irq_setup_secondary_ciu;
 
@@ -1983,6 +1992,14 @@ static int __init octeon_irq_init_ciu2(struct device_node *ciu_node, struct devi
 	unsigned int i, r;
 	struct irq_domain *ciu_domain = NULL;
 
+#ifdef CONFIG_SMP
+	/*
+	 * Set the default affinity to the boot cpu.  Currently
+	 * required by Ethernet Driver.
+	 */
+	cpumask_clear(irq_default_affinity);
+	cpumask_set_cpu(smp_processor_id(), irq_default_affinity);
+#endif
 	octeon_irq_init_ciu2_percpu();
 	octeon_irq_setup_secondary = octeon_irq_setup_secondary_ciu2;
 
@@ -3141,13 +3158,6 @@ int octeon_msi_initialize(void);
 
 void __init arch_init_irq(void)
 {
-#ifdef CONFIG_SMP
-	if (!OCTEON_IS_MODEL(OCTEON_CN78XX)) {
-		/* Set the default affinity to the boot cpu. */
-		cpumask_clear(irq_default_affinity);
-		cpumask_set_cpu(smp_processor_id(), irq_default_affinity);
-	}
-#endif
 	of_irq_init(ciu_types);
 #ifdef CONFIG_PCI_MSI
 	octeon_msi_initialize();
diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index 71384b6..b8590fb 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -492,7 +492,7 @@ void octeon_user_io_init(void)
 	/* R/W If set, CVMSEG is available for loads/stores in
 	 * kernel/debug mode. */
 	cvmmemctl.s.cvmsegenak = 1;
-	if (OCTEON_IS_MODEL(OCTEON_CN78XX)) {
+	if (octeon_has_feature(OCTEON_FEATURE_PKO3)) {
 		/* Enable LMTDMA */
 		cvmmemctl.s.lmtena = 1;
 		/* Scratch line to use for LMT operation */
@@ -530,13 +530,13 @@ void octeon_user_io_init(void)
 		cvmx_write_csr(CVMX_IOB_FAU_TIMEOUT, fau_timeout.u64);
 	}
 
-	if (OCTEON_IS_MODEL(OCTEON_CN68XX)) {
+	if (OCTEON_IS_MODEL(OCTEON_CN68XX) || octeon_has_feature(OCTEON_FEATURE_CIU3)) {
 		union cvmx_sso_nw_tim nm_tim;
 		nm_tim.u64 = 0;
 		/* 4096 cycles */
 		nm_tim.s.nw_tim = 3;
 		cvmx_write_csr(CVMX_SSO_NW_TIM, nm_tim.u64);
-	} else if (!OCTEON_IS_MODEL(OCTEON_CN78XX)) {
+	} else {
 		union cvmx_pow_nw_tim nm_tim;
 		nm_tim.u64 = 0;
 		/* 4096 cycles */
@@ -740,7 +740,7 @@ void __init prom_init(void)
 	if (OCTEON_IS_MODEL(OCTEON_CN38XX_PASS2) ||
 	    OCTEON_IS_MODEL(OCTEON_CN31XX))
 		cvmx_write_csr(CVMX_CIU_SOFT_BIST, 0);
-	else if (!OCTEON_IS_MODEL(OCTEON_CN78XX))
+	else if (!octeon_has_feature(OCTEON_FEATURE_CIU3))
 		cvmx_write_csr(CVMX_CIU_SOFT_BIST, 1);
 
 	/* Default to 64MB in the simulator to speed things up */
diff --git a/arch/mips/cavium-octeon/smp.c b/arch/mips/cavium-octeon/smp.c
index 17b5610..f3c05ef 100644
--- a/arch/mips/cavium-octeon/smp.c
+++ b/arch/mips/cavium-octeon/smp.c
@@ -527,7 +527,7 @@ void __init octeon_setup_smp(void)
 {
 	struct plat_smp_ops *ops;
 
-	if (OCTEON_IS_MODEL(OCTEON_CN78XX))
+	if (octeon_has_feature(OCTEON_FEATURE_CIU3))
 		ops = &octeon_78xx_smp_ops;
 	else
 		ops = &octeon_smp_ops;
-- 
2.6.2

