From a870af3a8a2bf8c7ff1066c132375c266b2ab05c Mon Sep 17 00:00:00 2001
From: Peter Swain <pswain@cavium.com>
Date: Thu, 4 Dec 2014 12:37:35 -0800
Subject: [PATCH 033/184] MIPS: octeon: sigbus handling in user-io broke
 context tracking

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from Octeon Tree
ChangeID: 6c518325d4a15657282058518af842d214d0cfcb
Description:

I accidentally built with both CONFIG_CONTEXT_TRACKING=y and
CONFIG_CAVIUM_OCTEON_USER_IO_PER_PROCESS=y, and gcc pointed out a
use-before-set case.
This resolves that issue, but this code could do with a cleanup
looks like perf counters are not being inc'd in the USER_IO_PER_PROCESS
exception case

Signed-off-by: Peter Swain <pswain@caviumnetworks.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from octeon-linux-kernel-patches-SDK-3.1.2-release]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/kernel/unaligned.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/arch/mips/kernel/unaligned.c b/arch/mips/kernel/unaligned.c
index 3f7e645..ec2af0b 100644
--- a/arch/mips/kernel/unaligned.c
+++ b/arch/mips/kernel/unaligned.c
@@ -2236,6 +2236,13 @@ asmlinkage void do_ade(struct pt_regs *regs)
 	unsigned long cvmseg_size       = octeon_cvmseg_lines * 128;
 	if ((regs->cp0_badvaddr >= CVMSEG_IO && regs->cp0_badvaddr < CVMSEG_IO_END) ||
 		(regs->cp0_badvaddr >= CVMSEG_BASE && regs->cp0_badvaddr < CVMSEG_BASE + cvmseg_size)) {
+#if defined(CONFIG_CAVIUM_OCTEON_USER_IO_PER_PROCESS)
+		struct task_struct *group_leader = current->group_leader;
+		if (!test_tsk_thread_flag(group_leader, TIF_XKPHYS_IO_EN)) {
+			prev_state = exception_enter();
+			goto sigbus;
+		}
+#endif
 
 		preempt_disable();
 		cvmmemctl = __read_64bit_c0_register($11, 7);
-- 
1.9.1

