From ba9bbaf94d7f44fae72d4844fccb5c742477e77f Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Tue, 1 Jul 2014 18:05:50 -0700
Subject: [PATCH 703/974] MIPS: OCTEON: Use IRQF_NO_THREAD when chaining MSIs

Otherwise with RT scheduling we get things like this:

WARNING: at kernel/irq/handle.c:148 handle_irq_event_percpu+0x1f0/0x200()
irq 27 handler irq_default_primary_handler+0x0/0x8 enabled interrupts
Modules linked in: ipv6 at24 at25
CPU: 0 PID: 244 Comm: irq/115-MSI[127 Not tainted 3.10.51-rt50-Cavium-Octeon+ #2
Stack : 0000000000000051 ffffffff808e0000 ffffffff83720000 ffffffff808e0000
          0000000000000001 ffffffff801a9468 ffffffff83720000 ffffffff80179d68
          0000000000000006 ffffffff83720000 ffffffff808e0000 ffffffff8017a6e8
          0000000000000000 0000000000000000 0000000000000000 ffffffff83730000
          ffffffff8371c468 ffffffff83720000 ffffffff807ab6b8 ffffffff8087a3f7
          ffffffff8371c468 800000008c5e2f88 00000000000000f4 0000000000000000
          0000000000000000 ffffffff807b2700 ffffffff807b26e8 ffffffff8064f43c
          800000008c573b98 800000008c573a90 ffffffff807b26e8 ffffffff80177f50
          800000008c5e2c40 ffffffff807ab6b8 0000000000000000 00000000000000f4
          0000000000000000 ffffffff80157358 0000000000000000 0000000000000000
          ...
Call Trace:
[<ffffffff80157358>] show_stack+0x68/0x80
[<ffffffff80177f50>] warn_slowpath_common+0x78/0xa8
[<ffffffff80178020>] warn_slowpath_fmt+0x38/0x48
[<ffffffff801cf340>] handle_irq_event_percpu+0x1f0/0x200
[<ffffffff801cf3bc>] handle_irq_event+0x6c/0xb0
[<ffffffff801d2574>] handle_simple_irq+0xa4/0x110
[<ffffffff801ce7e4>] generic_handle_irq+0x44/0x58
[<ffffffff80563aa8>] __octeon_msi_do_interrupt+0x80/0xe8
[<ffffffff801d0524>] irq_forced_thread_fn+0x2c/0x88
[<ffffffff801d0238>] irq_thread+0x130/0x188
[<ffffffff8019d6e0>] kthread+0xa8/0xb0
[<ffffffff80152444>] ret_from_kernel_thread+0x14/0x1c

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/pci/msi-octeon.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/mips/pci/msi-octeon.c b/arch/mips/pci/msi-octeon.c
index 09e163c..2eb46bd 100644
--- a/arch/mips/pci/msi-octeon.c
+++ b/arch/mips/pci/msi-octeon.c
@@ -747,35 +747,35 @@ int __init octeon_msi_initialize(void)
 
 	if (octeon_has_feature(OCTEON_FEATURE_PCIE)) {
 		if (request_irq(OCTEON_IRQ_PCI_MSI0, octeon_msi_interrupt0,
-				0, "MSI[0:63]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[0:63]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI0) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI1, octeon_msi_interrupt1,
-				0, "MSI[64:127]", octeon_msi_interrupt1))
+				IRQF_NO_THREAD, "MSI[64:127]", octeon_msi_interrupt1))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI1) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI2, octeon_msi_interrupt2,
-				0, "MSI[127:191]", octeon_msi_interrupt2))
+				IRQF_NO_THREAD, "MSI[127:191]", octeon_msi_interrupt2))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI2) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI3, octeon_msi_interrupt3,
-				0, "MSI[192:255]", octeon_msi_interrupt3))
+				IRQF_NO_THREAD, "MSI[192:255]", octeon_msi_interrupt3))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI3) failed");
 	} else if (octeon_is_pci_host()) {
 		if (request_irq(OCTEON_IRQ_PCI_MSI0, octeon_msi_interrupt0,
-				0, "MSI[0:15]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[0:15]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI0) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI1, octeon_msi_interrupt0,
-				0, "MSI[16:31]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[16:31]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI1) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI2, octeon_msi_interrupt0,
-				0, "MSI[32:47]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[32:47]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI2) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI3, octeon_msi_interrupt0,
-				0, "MSI[48:63]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[48:63]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI3) failed");
 	}
 	return 0;
-- 
2.6.2

