From 26fc8bd0a0cbd5906c7ab9d99398eaa807d3f49b Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Sat, 19 Jul 2014 18:05:50 -0700
Subject: [PATCH 776/974] MIPS: OCTEON: Implement pcibus_to_node().

Move definition to pcie-octeon.c, and make it actually return the
node.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../mips/include/asm/mach-cavium-octeon/topology.h | 11 ++++-----
 arch/mips/pci/pcie-octeon.c                        | 28 ++++++++++++++++++++++
 2 files changed, 32 insertions(+), 7 deletions(-)

diff --git a/arch/mips/include/asm/mach-cavium-octeon/topology.h b/arch/mips/include/asm/mach-cavium-octeon/topology.h
index 2e6a1b5..aabd875 100644
--- a/arch/mips/include/asm/mach-cavium-octeon/topology.h
+++ b/arch/mips/include/asm/mach-cavium-octeon/topology.h
@@ -1,6 +1,10 @@
 #ifndef _ASM_MACH_CAVIUM_OCTEON_TOPOLOGY_H
 #define _ASM_MACH_CAVIUM_OCTEON_TOPOLOGY_H
 
+struct pci_bus;
+int pcibus_to_node(struct pci_bus *bus);
+#define pcibus_to_node pcibus_to_node
+
 #ifdef CONFIG_NUMA
 
 static inline int cpu_to_node(int cpu)
@@ -23,13 +27,6 @@ static inline int parent_node(int node)
 }
 #define parent_node parent_node
 
-struct pci_bus;
-static inline int pcibus_to_node(struct pci_bus *bus)
-{
-	return 0;
-}
-#define pcibus_to_node pcibus_to_node
-
 static inline struct cpumask *cpumask_of_pcibus(struct pci_bus *bus)
 {
 	return cpumask_of_node(pcibus_to_node(bus));
diff --git a/arch/mips/pci/pcie-octeon.c b/arch/mips/pci/pcie-octeon.c
index cf483c3..6fc6cab 100644
--- a/arch/mips/pci/pcie-octeon.c
+++ b/arch/mips/pci/pcie-octeon.c
@@ -52,6 +52,13 @@ struct pcie_17400_chip_data {
 	unsigned int intsn;
 };
 
+static struct octeon_pcie_interface *octeon_pcie_bus2interface(struct pci_bus *bus)
+{
+	struct octeon_pcie_interface *r;
+
+	r = container_of(bus->sysdata, struct octeon_pcie_interface, controller);
+	return r;
+}
 
 static void pcie_17400_enable(struct irq_data *data)
 {
@@ -169,6 +176,27 @@ err:
 	return rv;
 }
 
+int pcibus_to_node(struct pci_bus *bus)
+{
+#ifdef CONFIG_NUMA
+	struct octeon_pcie_interface *pi;
+
+	/* Only chips with PCIE have a possibility of nodes other than 0. */
+	if (!octeon_has_feature(OCTEON_FEATURE_PCIE))
+		return 0;
+
+	while (bus->parent) {
+		struct pci_dev *dev = to_pci_dev(bus->bridge);
+		bus = dev->bus;
+	}
+	pi = octeon_pcie_bus2interface(bus);
+	return pi->node;
+#else
+	return 0;
+#endif
+}
+EXPORT_SYMBOL(pcibus_to_node);
+
 /**
  * Map a PCI device to the appropriate interrupt line
  *
-- 
2.6.2

