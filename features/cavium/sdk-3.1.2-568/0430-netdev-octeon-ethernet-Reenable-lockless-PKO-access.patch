From 544b9e9dbbf0a441d5d93b09ce6dfc5c3e4c0a07 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Wed, 11 Dec 2013 17:09:54 -0800
Subject: [PATCH 430/974] netdev: octeon-ethernet: Reenable lockless PKO
 access.

Also rationalize the counting of NAPI work.

Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/octeon/ethernet-napi.c | 3 +--
 drivers/net/ethernet/octeon/ethernet.c      | 6 +-----
 2 files changed, 2 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/octeon/ethernet-napi.c b/drivers/net/ethernet/octeon/ethernet-napi.c
index b44929b..01aa2cf 100644
--- a/drivers/net/ethernet/octeon/ethernet-napi.c
+++ b/drivers/net/ethernet/octeon/ethernet-napi.c
@@ -148,6 +148,7 @@ static int CVM_OCT_NAPI_POLL(struct napi_struct *napi, int budget)
 			    cores_in_use < core_state.baseline_cores)
 				cvm_oct_enable_one_cpu();
 		}
+		rx_count++;
 
 		/* If WORD2[SOFTWARE] then this WQE is a complete for
 		 * a TX packet.
@@ -383,7 +384,6 @@ static int CVM_OCT_NAPI_POLL(struct napi_struct *napi, int budget)
 					switch (callback_result) {
 					case CVM_OCT_PASS:
 						netif_receive_skb(skb);
-						rx_count++;
 						break;
 					case CVM_OCT_DROP:
 						dev_kfree_skb_any(skb);
@@ -413,7 +413,6 @@ static int CVM_OCT_NAPI_POLL(struct napi_struct *napi, int budget)
 				} else {
 					netif_receive_skb(skb);
 					callback_result = CVM_OCT_PASS;
-					rx_count++;
 				}
 			} else {
 				/* Drop any packet received for a device that isn't up */
diff --git a/drivers/net/ethernet/octeon/ethernet.c b/drivers/net/ethernet/octeon/ethernet.c
index 745e3cd..d849420 100644
--- a/drivers/net/ethernet/octeon/ethernet.c
+++ b/drivers/net/ethernet/octeon/ethernet.c
@@ -98,10 +98,6 @@ static int disable_lockless_pko;
 module_param(disable_lockless_pko, int, S_IRUGO);
 MODULE_PARM_DESC(disable_lockless_pko, "Disable lockless PKO access (use locking for queues instead).");
 
-/* internal ports count for each port in a interface */
-int iport_count = 1;
-/* pko queue count for each port in a interface */
-int queues_count = 1;
 /* packet pool */
 int packet_pool = 0;
 /* wqe pool */
@@ -962,7 +958,7 @@ static int cvm_oct_probe(struct platform_device *pdev)
 			}
 
 			/* Cache the fact that there may be multiple queues */
-			priv->tx_multiple_queues = (queues_count > 1);
+			priv->tx_multiple_queues = (priv->num_tx_queues > 1);
 
 			switch (priv->imode) {
 			/* These types don't support ports to IPD/PKO */
-- 
2.6.2

