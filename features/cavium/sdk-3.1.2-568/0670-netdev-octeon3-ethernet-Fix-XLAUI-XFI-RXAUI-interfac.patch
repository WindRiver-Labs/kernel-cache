From 40a7d50b9d669af426baac9789dc5e1efe38498f Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Thu, 17 Jul 2014 18:05:50 -0700
Subject: [PATCH 670/974] netdev: octeon3-ethernet: Fix XLAUI/XFI & RXAUI
 interfacees.

Ignore the PHY for XLAUI/XFI interfaces as it is programmed in
the module, nothing to do.

Collect the status if PHY is connected for RXAUI interface, used for
setting the disparity bit, required by Marvel PHY.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/octeon/octeon-bgx-port.c | 36 +++++++++++++++++++++------
 1 file changed, 28 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/octeon/octeon-bgx-port.c b/drivers/net/ethernet/octeon/octeon-bgx-port.c
index 2db13b61..d3d8e39 100644
--- a/drivers/net/ethernet/octeon/octeon-bgx-port.c
+++ b/drivers/net/ethernet/octeon/octeon-bgx-port.c
@@ -280,6 +280,7 @@ static void bgx_port_check_state(struct work_struct *work)
 
 int bgx_port_enable(struct net_device *netdev)
 {
+	bool dont_use_phy;
 	union cvmx_bgxx_cmrx_config cfg;
 	struct bgx_port_priv *priv = bgx_port_netdev2priv(netdev);
 
@@ -330,7 +331,19 @@ int bgx_port_enable(struct net_device *netdev)
 
 	}
 
-	if (priv->phy_np == NULL) {
+	switch (cvmx_helper_interface_get_mode(priv->xiface)) {
+	case CVMX_HELPER_INTERFACE_MODE_XLAUI:
+	case CVMX_HELPER_INTERFACE_MODE_XFI:
+	case CVMX_HELPER_INTERFACE_MODE_10G_KR:
+	case CVMX_HELPER_INTERFACE_MODE_40G_KR4:
+		dont_use_phy = true;
+		break;
+	default:
+		dont_use_phy = false;
+		break;
+	}
+
+	if (priv->phy_np == NULL || dont_use_phy) {
 		cvmx_helper_link_autoconf(priv->ipd_port);
 		netif_carrier_on(netdev);
 
@@ -349,16 +362,18 @@ int bgx_port_enable(struct net_device *netdev)
 		pr_info("%s: Link is not ready\n", netdev->name);
 
 		return 0;
+	} else {
+		priv->phydev = of_phy_connect(netdev, priv->phy_np,
+					      bgx_port_adjust_link, 0,
+					      PHY_INTERFACE_MODE_SGMII);
+		if (!priv->phydev)
+			return -ENODEV;
 	}
 
-	priv->phydev = of_phy_connect(netdev, priv->phy_np,
-				      bgx_port_adjust_link, 0,
-				      PHY_INTERFACE_MODE_SGMII);
-	if (!priv->phydev)
-		return -ENODEV;
-
 	netif_carrier_off(netdev);
-	phy_start_aneg(priv->phydev);
+
+	if (priv->phydev)
+		phy_start_aneg(priv->phydev);
 
 	return 0;
 }
@@ -498,6 +513,11 @@ static int bgx_port_probe(struct platform_device *pdev)
 
 	priv->phy_np = of_parse_phandle(pdev->dev.of_node, "phy-handle", 0);
 
+	if (priv->phy_np == NULL)
+		cvmx_helper_set_port_phy_present(priv->xiface, priv->index, false);
+	else
+		cvmx_helper_set_port_phy_present(priv->xiface, priv->index, true);
+
 	r = dev_set_drvdata(&pdev->dev, priv);
 	if (r)
 		goto err;
-- 
2.6.2

