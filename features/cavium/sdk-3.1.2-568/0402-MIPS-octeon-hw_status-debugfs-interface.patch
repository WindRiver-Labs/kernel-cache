From 830c8464bb0575bd5c717ef50957bbc7b0f3ab03 Mon Sep 17 00:00:00 2001
From: Peter Swain <peter.swain@cavium.com>
Date: Mon, 11 Nov 2013 16:55:14 -0800
Subject: [PATCH 402/974] MIPS: octeon hw_status debugfs interface

/sys/kernel/debug/hwstat shows state of hw-status tree.

post-boot examination of tree allows diagnosing problems,
this can be expanded as extra functionality like error-injection is added.
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-hw-status.c | 68 ++++++++++++++++++++++++++++++
 1 file changed, 68 insertions(+)

diff --git a/arch/mips/cavium-octeon/octeon-hw-status.c b/arch/mips/cavium-octeon/octeon-hw-status.c
index 1b9e5dc..b4aa280 100644
--- a/arch/mips/cavium-octeon/octeon-hw-status.c
+++ b/arch/mips/cavium-octeon/octeon-hw-status.c
@@ -424,3 +424,71 @@ int octeon_hw_status_disable(u64 reg, u64 bit_mask)
 	return 0;
 }
 EXPORT_SYMBOL(octeon_hw_status_disable);
+
+#ifdef CONFIG_DEBUG_FS
+
+#include <linux/module.h>
+#include <linux/fs.h>
+#include <linux/mount.h>
+#include <linux/init.h>
+#include <linux/namei.h>
+#include <linux/debugfs.h>
+#include <linux/semaphore.h>
+
+static DEFINE_SEMAPHORE(hwstat_sem); /* single open */
+
+static int hwstat_show_node(struct octeon_hw_status_node *n, void *data)
+{
+	struct seq_file *s = (struct seq_file *)data;
+
+	seq_printf(s, "%p@%p: u%d ",
+		n, n->parent, n->users);
+	if (n->is_hwint)
+		seq_printf(s, "i%d %d/%d\n",
+			n->is_hwint, (int)n->hwint, n->irq);
+	else
+		seq_printf(s, "i%d %llx/%llx:%d a%d\n",
+			n->is_hwint,
+			n->reg, n->mask_reg, n->bit,
+			n->ack_w1c);
+	return 0;
+}
+
+static int hwstat_show(struct seq_file *s, void *data)
+{
+	/* print heading */
+	read_lock(&octeon_hw_status_lock);
+	visit_leaves(octeon_hw_status_roots, true, hwstat_show_node, s);
+	read_unlock(&octeon_hw_status_lock);
+
+	return 0;
+}
+
+static int hwstat_open(struct inode *inode, struct file *file)
+{
+	down(&hwstat_sem);
+	return single_open(file, hwstat_show, NULL);
+}
+
+static int hwstat_release(struct inode *inode, struct file *file)
+{
+	up(&hwstat_sem);
+	return single_release(inode, file);
+}
+
+static const struct file_operations hwstat_operations = {
+	.open		= hwstat_open,
+	.read		= seq_read,
+	.llseek		= seq_lseek,
+	.release	= hwstat_release,
+};
+
+static int __init hwstat_debugfs_init(void)
+{
+	/* /sys/kernel/debug/hwstat */
+	(void) debugfs_create_file("hwstat", S_IFREG | S_IRUGO, NULL, NULL, &hwstat_operations);
+	return 0;
+}
+postcore_initcall(hwstat_debugfs_init);
+
+#endif /* CONFIG_DEBUG_FS */
-- 
2.6.2

