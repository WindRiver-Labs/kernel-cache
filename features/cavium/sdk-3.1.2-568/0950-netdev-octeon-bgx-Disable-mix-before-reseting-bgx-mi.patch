From 6502fb68717706c4b30d73d10e8301d619e18813 Mon Sep 17 00:00:00 2001
From: Carlos Munoz <cmunoz@caviumnetworks.com>
Date: Sat, 19 Jul 2014 18:05:50 -0700
Subject: [PATCH 950/974] netdev: octeon-bgx: Disable mix before reseting
 bgx-mix interface.

Signed-off-by: Carlos Munoz <cmunoz@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/octeon/octeon-bgx-port.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/drivers/net/ethernet/octeon/octeon-bgx-port.c b/drivers/net/ethernet/octeon/octeon-bgx-port.c
index c83f303..1b51d26 100644
--- a/drivers/net/ethernet/octeon/octeon-bgx-port.c
+++ b/drivers/net/ethernet/octeon/octeon-bgx-port.c
@@ -460,6 +460,22 @@ void bgx_port_mix_assert_reset(struct net_device *netdev, int mix, bool v)
 	u64 global_config;
 	struct bgx_port_priv *priv = bgx_port_netdev2priv(netdev);
 	u64 mask = 1ull << (3 + (mix & 1));
+	union cvmx_bgxx_cmrx_config cfg;
+
+	if (OCTEON_IS_MODEL(OCTEON_CN78XX_PASS1_X) && v == true) {
+		/* Need to disable the mix before resetting the bgx-mix
+		 * interface as not doing so confuses the other already up
+		 * lmacs.
+		 */
+		cfg.u64 = cvmx_read_csr_node(priv->numa_node,
+					     CVMX_BGXX_CMRX_CONFIG(priv->index,
+						   priv->bgx_interface));
+		cfg.s.mix_en = 0;
+		cvmx_write_csr_node(priv->numa_node,
+				    CVMX_BGXX_CMRX_CONFIG(priv->index,
+							  priv->bgx_interface),
+				    cfg.u64);
+	}
 
 	global_config = cvmx_read_csr_node(priv->numa_node,
 					   CVMX_BGXX_CMR_GLOBAL_CONFIG(priv->bgx_interface));
@@ -470,6 +486,17 @@ void bgx_port_mix_assert_reset(struct net_device *netdev, int mix, bool v)
 		global_config &= ~mask;
 
 	cvmx_write_csr_node(priv->numa_node, CVMX_BGXX_CMR_GLOBAL_CONFIG(priv->bgx_interface), global_config);
+
+	if (OCTEON_IS_MODEL(OCTEON_CN78XX_PASS1_X) && v == false) {
+		cfg.u64 = cvmx_read_csr_node(priv->numa_node,
+					     CVMX_BGXX_CMRX_CONFIG(priv->index,
+						   priv->bgx_interface));
+		cfg.s.mix_en = 1;
+		cvmx_write_csr_node(priv->numa_node,
+				    CVMX_BGXX_CMRX_CONFIG(priv->index,
+							  priv->bgx_interface),
+				    cfg.u64);
+	}
 }
 EXPORT_SYMBOL(bgx_port_mix_assert_reset);
 
-- 
2.6.2

