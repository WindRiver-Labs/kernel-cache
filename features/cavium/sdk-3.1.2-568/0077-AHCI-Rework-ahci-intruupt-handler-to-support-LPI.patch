From 4e8f5b7bf777812236da88cea2c7b30c78334f8a Mon Sep 17 00:00:00 2001
From: Tirumalesh Chalamarla <tchalamarla@cavium.com>
Date: Tue, 9 Dec 2014 16:28:19 -0800
Subject: [PATCH 077/184] AHCI: Rework ahci intruupt handler to support LPI

Source: Cavium Networks, Inc.
MR: 13384
Type: Integration
Disposition: Merged from THUNDERX Tree
ChangeID: 373b103044414aaac63e3023b37ca0f39ccfcd17
Description:

Support for LPIs in AHCI,

LPI are edge triggered interrupts, so GIC don't rais irq again un less there is a write to SETLPI or ITS_TRANSLATOR.
but if device assumes level sensitive this can cause interrupts to miss.

staying in irq handler untill every thing is cleaned gives best chance of supporting LPIs with level sensitive hardware.

Signed-off-by: Tirumalesh Chalamarla <tchalamarla@cavium.com>
Signed-off-by: Robert Richter <rrichter@cavium.com>
Signed-off-by: Kamil Rytarowski <kamil@semihalf.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from octeon-linux-kernel-patches-SDK-3.1.2-release]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/ata/libahci.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/drivers/ata/libahci.c b/drivers/ata/libahci.c
index 78ffa57..9ca07c3 100644
--- a/drivers/ata/libahci.c
+++ b/drivers/ata/libahci.c
@@ -1867,6 +1867,9 @@ static irqreturn_t ahci_single_irq_intr(int irq, void *dev_instance)
 
 	/* sigh.  0xffffffff is a valid return from h/w */
 	irq_stat = readl(mmio + HOST_IRQ_STAT);
+
+	do {
+
 	if (!irq_stat)
 		return IRQ_NONE;
 
@@ -1904,9 +1907,12 @@ static irqreturn_t ahci_single_irq_intr(int irq, void *dev_instance)
 	 * pending event on a dummy port might cause screaming IRQ.
 	 */
 	writel(irq_stat, mmio + HOST_IRQ_STAT);
+	irq_stat = readl(mmio + HOST_IRQ_STAT);
 
 	spin_unlock(&host->lock);
 
+	} while(irq_stat);
+
 	VPRINTK("EXIT\n");
 
 	return IRQ_RETVAL(handled);
-- 
1.9.1

