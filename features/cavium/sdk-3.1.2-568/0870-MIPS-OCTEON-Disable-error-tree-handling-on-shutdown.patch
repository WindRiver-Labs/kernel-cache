From 5c4106d816c13cfe7b5fa78190ae8b344489bb3c Mon Sep 17 00:00:00 2001
From: Corey Minyard <cminyard@mvista.com>
Date: Sun, 6 Jul 2014 18:05:50 -0700
Subject: [PATCH 870/974] MIPS:OCTEON: Disable error tree handling on shutdown

This keeps things clean when doing kexec, error handling is turned
off when the new kernel boots.

Signed-off-by: Corey Minyard <cminyard@mvista.com>
Cc: Arun Chandran <achandran@mvista.com>
Signed-off-by: David Daney <david.daney@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-error-tree.c | 18 ++++++++++++++++++
 arch/mips/cavium-octeon/setup.c             |  2 ++
 arch/mips/include/asm/octeon/octeon.h       |  5 +++++
 3 files changed, 25 insertions(+)

diff --git a/arch/mips/cavium-octeon/octeon-error-tree.c b/arch/mips/cavium-octeon/octeon-error-tree.c
index fe30fce..0f0d9ce 100644
--- a/arch/mips/cavium-octeon/octeon-error-tree.c
+++ b/arch/mips/cavium-octeon/octeon-error-tree.c
@@ -315,6 +315,24 @@ static void octeon_error_tree_handler78(int node, int intsn)
 	}
 }
 
+int octeon_error_tree_shutdown(void)
+{
+	int i, node;
+
+	if (disable || !octeon_has_feature(OCTEON_FEATURE_CIU3))
+		return 0;
+
+	for_each_online_node(node) {
+		for (i = 0; error_array_cn78xxp1[i].intsn < 0xfffff; i++) {
+			if (error_array_cn78xxp1[i].error_group != CVMX_ERROR_GROUP_ETHERNET)
+				octeon_ciu3_errbits_disable_intsn(node, error_array_cn78xxp1[i].intsn);
+		}
+	}
+
+       return 0;
+}
+EXPORT_SYMBOL(octeon_error_tree_shutdown);
+
 static int __init octeon_error_tree_init78(void)
 {
 	int i, node;
diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index b8590fb..0c81371 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -145,6 +145,7 @@ static void octeon_generic_shutdown(void)
 static void octeon_shutdown(void)
 {
 	octeon_generic_shutdown();
+	octeon_error_tree_shutdown();
 #ifdef CONFIG_SMP
 	smp_call_function(octeon_kexec_smp_down, NULL, 0);
 	smp_wmb();
@@ -158,6 +159,7 @@ static void octeon_shutdown(void)
 static void octeon_crash_shutdown(struct pt_regs *regs)
 {
 	octeon_generic_shutdown();
+	octeon_error_tree_shutdown();
 	default_machine_crash_shutdown(regs);
 }
 
diff --git a/arch/mips/include/asm/octeon/octeon.h b/arch/mips/include/asm/octeon/octeon.h
index 5599549..0a2665a 100644
--- a/arch/mips/include/asm/octeon/octeon.h
+++ b/arch/mips/include/asm/octeon/octeon.h
@@ -421,6 +421,7 @@ struct irq_domain *octeon_irq_get_block_domain(int node, uint8_t block);
 #if IS_ENABLED(CONFIG_CAVIUM_OCTEON_ERROR_TREE)
 int octeon_error_tree_enable(enum cvmx_error_groups group, int unit);
 int octeon_error_tree_disable(enum cvmx_error_groups group, int unit);
+int octeon_error_tree_shutdown(void);
 #else
 static inline int octeon_error_tree_enable(enum cvmx_error_groups group, int unit)
 {
@@ -430,6 +431,10 @@ static inline int octeon_error_tree_disable(enum cvmx_error_groups group, int un
 {
 	return 0;
 }
+static inline int octeon_error_tree_shutdown(void)
+{
+	return 0;
+}
 #endif
 
 int octeon_ciu3_errbits_set_handler(void (* handler)(int node, int intsn));
-- 
2.6.2

