From a06df5fd8ea23946846ecf5105535afade97f55f Mon Sep 17 00:00:00 2001
From: Peter Swain <pswain@cavium.com>
Date: Tue, 29 Jul 2014 18:05:50 -0700
Subject: [PATCH 935/974] mips: octeon: mark as LEVEL_HIGH some IRQs not
 covered by devtree

Most Octeon IRQs are either specified in device tree,
or covered by the EDGE_RISING default.
Two genuine level-triggered signals need protection from the
upcoming clarification of edge/level handling in octeon-irq.c:
- internal rapidio signals for srio-ethernet
- early uart1 setup for gdb, which happens before device-tree parse

Signed-off-by: Peter Swain <pswain@cavium.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-rapidio.c | 1 +
 arch/mips/cavium-octeon/serial.c         | 2 ++
 2 files changed, 3 insertions(+)

diff --git a/arch/mips/cavium-octeon/octeon-rapidio.c b/arch/mips/cavium-octeon/octeon-rapidio.c
index d6b31a8..43a5276 100644
--- a/arch/mips/cavium-octeon/octeon-rapidio.c
+++ b/arch/mips/cavium-octeon/octeon-rapidio.c
@@ -1018,6 +1018,7 @@ static void octeon_srio_interrupt_75xx_cfg(int srio_port)
 		ints[i].mport_id = srio_port;
 		domain = octeon_irq_get_block_domain(0, SRIO_INTSN_E);
 		ints[i].irq = irq_create_mapping(domain, ints[i].intsn);
+		irq_set_irq_type(ints[i].irq, IRQ_TYPE_LEVEL_HIGH);
 	}
 }
 
diff --git a/arch/mips/cavium-octeon/serial.c b/arch/mips/cavium-octeon/serial.c
index f338c7d..a384361 100644
--- a/arch/mips/cavium-octeon/serial.c
+++ b/arch/mips/cavium-octeon/serial.c
@@ -58,10 +58,12 @@ static int octeon_setup_debug_uart(void)
 	else
 		hwirq = 34 + OCTEON_DEBUG_UART;
 
+	/* explicit irq, don't rely on device-tree */
 	irq = irq_create_mapping(NULL, hwirq);
 	if (!irq)
 		return -EINVAL;
 
+	irq_set_irq_type(irq, IRQ_TYPE_LEVEL_HIGH);
 
 	if (request_irq(irq, interrupt_debug_char,
 			0, "cvmx-debug", interrupt_debug_char)) {
-- 
2.6.2

