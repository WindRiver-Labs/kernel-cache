From 7df15d379adfe8ba450ce8a2b4875e817c9de267 Mon Sep 17 00:00:00 2001
From: Fred Martin <fmartin@caviumnetworks.com>
Date: Thu, 26 Feb 2015 16:51:06 -0800
Subject: [PATCH 107/184] thunder i2c clean up

Source: Cavium Networks, Inc.
MR: 00000
Type: Integration
Disposition: Merged from THUNDERX Tree
ChangeID: 56d572bad062e0ca408c1f1df744d60867562c96
Description:

Signed-off-by: Fred Martin <fmartin@caviumnetworks.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
[Original patch taken from octeon-linux-kernel-patches-SDK-3.1.2-release]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/i2c/busses/i2c-thunderx.c | 36 +++++-------------------------------
 1 file changed, 5 insertions(+), 31 deletions(-)

diff --git a/drivers/i2c/busses/i2c-thunderx.c b/drivers/i2c/busses/i2c-thunderx.c
index 358c511..93eab4e 100644
--- a/drivers/i2c/busses/i2c-thunderx.c
+++ b/drivers/i2c/busses/i2c-thunderx.c
@@ -7,23 +7,17 @@
  *
  * Portions Copyright (C) 2010, 2011 Cavium Networks, Inc.
  *
- * This is a driver for the i2c adapter in Cavium Networks' OCTEON processors.
- *
  * This file is licensed under the terms of the GNU General Public
  * License version 2. This program is licensed "as is" without any
  * warranty of any kind, whether express or implied.
  */
 
-#include <linux/platform_device.h>
+#include <linux/module.h>
 #include <linux/interrupt.h>
 #include <linux/kernel.h>
-#include <linux/module.h>
 #include <linux/pci.h>
-#include <linux/delay.h>
-#include <linux/sched.h>
-#include <linux/slab.h>
 #include <linux/i2c.h>
-#include <linux/io.h>
+#include <linux/delay.h>
 #include <linux/of.h>
 
 #define DRV_NAME "i2c-thunderx"
@@ -101,7 +95,7 @@ static const struct pci_device_id thunderx_i2c_id_table[] = {
 };
 
 MODULE_AUTHOR("Cavium Inc");
-MODULE_DESCRIPTION("Cavium Thunder I2C Driver");
+MODULE_DESCRIPTION("Cavium ThunderX I2C Driver");
 MODULE_LICENSE("GPL v2");
 MODULE_VERSION(DRV_VERSION);
 MODULE_DEVICE_TABLE(pci, thunderx_i2c_id_table);
@@ -473,7 +467,7 @@ static const struct i2c_algorithm thunderx_i2c_algo = {
 
 static struct i2c_adapter thunderx_i2c_ops = {
 	.owner = THIS_MODULE,
-	.name = "OCTEON adapter",
+	.name = "ThunderX adapter",
 	.algo = &thunderx_i2c_algo,
 	.timeout = HZ / 50,
 };
@@ -569,13 +563,6 @@ static int thunderx_i2c_probe(struct pci_dev *pdev, const struct pci_device_id *
 	struct device *dev = &pdev->dev;
 	struct thunderx_i2c *i2c;
 
-#if 0
-	/* All adaptors have an irq.  */
-	irq = platform_get_irq(pdev, 0);
-	if (irq < 0)
-		return irq;
-#endif
-
 	i2c = devm_kzalloc(&pdev->dev, sizeof(*i2c), GFP_KERNEL);
 	if (!i2c) {
 		dev_err(&pdev->dev, "kzalloc failed\n");
@@ -691,18 +678,5 @@ static struct pci_driver thunderx_i2c_driver = {
 	.remove		= thunderx_i2c_remove,
 };
 
-static int __init thunderx_i2c_init_module(void)
-{
-	pr_info("%s, ver %s\n", DRV_NAME, DRV_VERSION);
-
-	return pci_register_driver(&thunderx_i2c_driver);
-}
-
-static void __exit thunderx_i2c_cleanup_module(void)
-{
-	pci_unregister_driver(&thunderx_i2c_driver);
-}
-
-module_init(thunderx_i2c_init_module);
-module_exit(thunderx_i2c_cleanup_module);
+module_pci_driver(thunderx_i2c_driver)
 
-- 
1.9.1

