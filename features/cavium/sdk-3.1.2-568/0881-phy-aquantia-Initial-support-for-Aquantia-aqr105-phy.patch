From 4d52253770f3f641f7091bda3a058bf3ea158174 Mon Sep 17 00:00:00 2001
From: Carlos Munoz <cmunoz@caviumnetworks.com>
Date: Thu, 17 Jul 2014 18:05:50 -0700
Subject: [PATCH 881/974] phy/aquantia: Initial support for Aquantia aqr105
 phy.

Signed-off-by: Carlos Munoz <cmunoz@caviumnetworks.com>
[Original patch taken from Cavium SDK 3.1.2-568]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/phy/Kconfig    |   5 +++
 drivers/net/phy/Makefile   |   1 +
 drivers/net/phy/aquantia.c | 101 +++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 107 insertions(+)
 create mode 100644 drivers/net/phy/aquantia.c

diff --git a/drivers/net/phy/Kconfig b/drivers/net/phy/Kconfig
index c4ae626..2747db8 100644
--- a/drivers/net/phy/Kconfig
+++ b/drivers/net/phy/Kconfig
@@ -24,6 +24,11 @@ config AMD_PHY
 	---help---
 	  Currently supports the am79c874
 
+config AQUANTIA_PHY
+	tristate "Driver for Aquantia PHYs"
+	help
+	  Currently supports the aqr105 PHY.
+
 config MARVELL_PHY
 	tristate "Drivers for Marvell PHYs"
 	---help---
diff --git a/drivers/net/phy/Makefile b/drivers/net/phy/Makefile
index 6ed0034..d6f7c15 100644
--- a/drivers/net/phy/Makefile
+++ b/drivers/net/phy/Makefile
@@ -35,3 +35,4 @@ obj-$(CONFIG_MDIO_BUS_MUX_GPIO)	+= mdio-mux-gpio.o
 obj-$(CONFIG_MDIO_BUS_MUX_MMIOREG) += mdio-mux-mmioreg.o
 obj-$(CONFIG_QCA833X_PHY)	+= qca833x.o
 obj-$(CONFIG_MARVELL_88X3120_PHY) += marvell-88x3120.o
+obj-$(CONFIG_AQUANTIA_PHY)	+= aquantia.o
diff --git a/drivers/net/phy/aquantia.c b/drivers/net/phy/aquantia.c
new file mode 100644
index 0000000..93db565
--- /dev/null
+++ b/drivers/net/phy/aquantia.c
@@ -0,0 +1,101 @@
+/*
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ * Copyright (C) 2015 Cavium, Inc.
+ */
+
+#include <linux/module.h>
+#include <linux/phy.h>
+
+#define PHY_ID_AQR105			0x03a1b4a0
+
+#define PMA_RECEIVE_VENDOR_STATE_1	(MII_ADDR_C45 | 1 << 16 | 0xe800)
+#define AN_VENDOR_STATUS_1		(MII_ADDR_C45 | 7 << 16 | 0xc800)
+
+static int aqr105_config_aneg(struct phy_device *phydev)
+{
+	return 0;
+}
+
+static int aqr105_read_status(struct phy_device *phydev)
+{
+	int	reg;
+
+	reg = phy_read(phydev, PMA_RECEIVE_VENDOR_STATE_1);
+	/* Set the link state */
+	if ((reg & 1) == 0)
+		phydev->link = 0;
+	else {
+		phydev->link = 1;
+
+		reg = phy_read(phydev, AN_VENDOR_STATUS_1);
+		/* Set the duplex mode */
+		if ((reg & 1) == 0)
+			phydev->duplex = 0;
+		else
+			phydev->duplex = 1;
+
+		/* Set the speed */
+		reg = (reg >> 1) & 7;
+		switch (reg) {
+		case 0:
+			phydev->speed = 10;
+			break;
+		case 1:
+			phydev->speed = 100;
+			break;
+		case 2:
+			phydev->speed = 1000;
+			break;
+		case 3:
+			phydev->speed = 10000;
+			break;
+		case 4:
+			phydev->speed = 2500;
+			break;
+		case 5:
+			phydev->speed = 5000;
+			break;
+		default:
+			phydev->speed = -1;
+			break;
+		}
+	}
+
+	return 0;
+}
+
+static int aqr105_match_phy_device(struct phy_device *phydev)
+{
+	return (phydev->c45_ids.device_ids[1] & 0xfffffff0) == PHY_ID_AQR105;
+}
+
+static struct phy_driver aqr105_driver[] = {
+{
+	.phy_id			= 0,
+	.phy_id_mask		= 0,
+	.name			= "Aquantia aqr105",
+	.config_aneg		= aqr105_config_aneg,
+	.read_status		= aqr105_read_status,
+	.match_phy_device 	= aqr105_match_phy_device,
+	.driver			= {
+		.owner = THIS_MODULE,
+	},
+} };
+
+static int __init aquantia_init(void)
+{
+	return phy_drivers_register(aqr105_driver, ARRAY_SIZE(aqr105_driver));
+}
+module_init(aquantia_init);
+
+static void __exit aquantia_exit(void)
+{
+	phy_drivers_unregister(aqr105_driver, ARRAY_SIZE(aqr105_driver));
+}
+module_exit(aquantia_exit);
+
+MODULE_AUTHOR("Carlos Munoz <cmunoz@caviumnetworks.com>");
+MODULE_LICENSE("GPL");
-- 
2.6.2

