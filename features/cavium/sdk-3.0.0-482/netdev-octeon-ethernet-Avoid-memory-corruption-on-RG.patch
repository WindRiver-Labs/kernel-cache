From 57c0bffd12c4df82515719b9cb0d497a027fec44 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Wed, 12 Dec 2012 10:14:47 -0800
Subject: [PATCH 267/337] netdev/octeon-ethernet: Avoid memory corruption on
 RGMII ports

Based On SDK 3.0.0-482

We need to disable FCS stripping in hardware for RGMII ports due to
PKI-602.  Do the stripping in software instead.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 drivers/net/ethernet/octeon/ethernet-napi.c   |    5 ++++-
 drivers/net/ethernet/octeon/ethernet-rgmii.c  |   15 +++++++++++++++
 drivers/net/ethernet/octeon/octeon-ethernet.h |    1 +
 3 files changed, 20 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/octeon/ethernet-napi.c b/drivers/net/ethernet/octeon/ethernet-napi.c
index a5ba19e..a94a114 100644
--- a/drivers/net/ethernet/octeon/ethernet-napi.c
+++ b/drivers/net/ethernet/octeon/ethernet-napi.c
@@ -212,7 +212,10 @@ static int CVM_OCT_NAPI_POLL(struct napi_struct *napi, int budget)
 				priv = cvm_oct_by_pkind[port];
 		}
 
-		packet_len = work->word1.len;
+		if (likely(priv) && priv->rx_strip_fcs)
+			packet_len = work->word1.len - 4;
+		else
+			packet_len = work->word1.len;
 		/* We can only use the zero copy path if skbuffs are
 		 * in the FPA pool and the packet fits in a single
 		 * buffer.
diff --git a/drivers/net/ethernet/octeon/ethernet-rgmii.c b/drivers/net/ethernet/octeon/ethernet-rgmii.c
index ccce09b..41d8ebe 100644
--- a/drivers/net/ethernet/octeon/ethernet-rgmii.c
+++ b/drivers/net/ethernet/octeon/ethernet-rgmii.c
@@ -236,6 +236,7 @@ static void cvm_oct_rgmii_immediate_poll(struct work_struct *work)
 
 int cvm_oct_rgmii_open(struct net_device *dev)
 {
+	union cvmx_ipd_sub_port_fcs ipd_sub_port_fcs;
 	union cvmx_gmxx_prtx_cfg gmx_cfg;
 	struct octeon_ethernet *priv = netdev_priv(dev);
 	cvmx_helper_link_info_t link_info;
@@ -303,11 +304,19 @@ int cvm_oct_rgmii_open(struct net_device *dev)
 		}
 	}
 
+
+	/* Disable FCS stripping for PKI-602*/
+	ipd_sub_port_fcs.u64 = cvmx_read_csr(CVMX_IPD_SUB_PORT_FCS);
+	ipd_sub_port_fcs.s.port_bit &= 0xffffffffull ^ (1ull << priv->ipd_port);
+	cvmx_write_csr(CVMX_IPD_SUB_PORT_FCS, ipd_sub_port_fcs.u64);
+	priv->rx_strip_fcs = 1;
+
 	return 0;
 }
 
 int cvm_oct_rgmii_stop(struct net_device *dev)
 {
+	union cvmx_ipd_sub_port_fcs ipd_sub_port_fcs;
 	union cvmx_gmxx_prtx_cfg gmx_cfg;
 	struct octeon_ethernet *priv = netdev_priv(dev);
 
@@ -342,6 +351,12 @@ int cvm_oct_rgmii_stop(struct net_device *dev)
 		free_irq(OCTEON_IRQ_RML, &number_rgmii_ports);
 	cancel_work_sync(&priv->port_work);
 
+	/* re-Enable FCS stripping */
+	ipd_sub_port_fcs.u64 = cvmx_read_csr(CVMX_IPD_SUB_PORT_FCS);
+	ipd_sub_port_fcs.s.port_bit |= 1ull << priv->ipd_port;
+	cvmx_write_csr(CVMX_IPD_SUB_PORT_FCS, ipd_sub_port_fcs.u64);
+	priv->rx_strip_fcs = 0;
+
 	return 0;
 }
 
diff --git a/drivers/net/ethernet/octeon/octeon-ethernet.h b/drivers/net/ethernet/octeon/octeon-ethernet.h
index b6bbab9..4eb5c27 100644
--- a/drivers/net/ethernet/octeon/octeon-ethernet.h
+++ b/drivers/net/ethernet/octeon/octeon-ethernet.h
@@ -60,6 +60,7 @@ struct octeon_ethernet {
 	 */
 	int imode;
 
+	unsigned int rx_strip_fcs:1;
 	unsigned int has_gmx_regs:1;
 	unsigned int tx_timestamp_hw:1;
 	unsigned int rx_timestamp_hw:1;
-- 
1.7.5.4

