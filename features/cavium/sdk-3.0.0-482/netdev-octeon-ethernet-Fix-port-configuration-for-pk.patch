From cdf37ca6f6978c5d1d925f04fd82c41ed832f1c8 Mon Sep 17 00:00:00 2001
From: Rajeev Surampally <rsurampally@cavium.com>
Date: Tue, 15 Jan 2013 14:56:56 -0800
Subject: [PATCH 318/337] netdev/octeon-ethernet: Fix port configuration for
 pknds.

Based On SDK 3.0.0-482

If octeon supports pknd feature, then use pknds for
port configuration.

Signed-off-by: Rajeev Surampally <rsurampally@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 drivers/net/ethernet/octeon/ethernet-mdio.c |    8 ++++----
 drivers/net/ethernet/octeon/ethernet.c      |    5 ++---
 2 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/octeon/ethernet-mdio.c b/drivers/net/ethernet/octeon/ethernet-mdio.c
index 5c8e22c..670ad26 100644
--- a/drivers/net/ethernet/octeon/ethernet-mdio.c
+++ b/drivers/net/ethernet/octeon/ethernet-mdio.c
@@ -173,9 +173,9 @@ static int cvm_oct_ioctl_hwtstamp(struct net_device *dev,
 		frm_ctl.s.ptp_mode = 0;
 		cvmx_write_csr(CVMX_GMXX_RXX_FRM_CTL(priv->interface_port, priv->interface), frm_ctl.u64);
 
-		prt_cfg.u64 = cvmx_read_csr(CVMX_PIP_PRT_CFGX(priv->ipd_port));
+		prt_cfg.u64 = cvmx_read_csr(CVMX_PIP_PRT_CFGX(priv->ipd_pkind));
 		prt_cfg.s.skip = 0;
-		cvmx_write_csr(CVMX_PIP_PRT_CFGX(priv->ipd_port), prt_cfg.u64);
+		cvmx_write_csr(CVMX_PIP_PRT_CFGX(priv->ipd_pkind), prt_cfg.u64);
 		break;
 	case HWTSTAMP_FILTER_ALL:
 	case HWTSTAMP_FILTER_SOME:
@@ -197,9 +197,9 @@ static int cvm_oct_ioctl_hwtstamp(struct net_device *dev,
 		frm_ctl.s.ptp_mode = 1;
 		cvmx_write_csr(CVMX_GMXX_RXX_FRM_CTL(priv->interface_port, priv->interface), frm_ctl.u64);
 
-		prt_cfg.u64 = cvmx_read_csr(CVMX_PIP_PRT_CFGX(priv->ipd_port));
+		prt_cfg.u64 = cvmx_read_csr(CVMX_PIP_PRT_CFGX(priv->ipd_pkind));
 		prt_cfg.s.skip = 8;
-		cvmx_write_csr(CVMX_PIP_PRT_CFGX(priv->ipd_port), prt_cfg.u64);
+		cvmx_write_csr(CVMX_PIP_PRT_CFGX(priv->ipd_pkind), prt_cfg.u64);
 		break;
 	default:
 		return -ERANGE;
diff --git a/drivers/net/ethernet/octeon/ethernet.c b/drivers/net/ethernet/octeon/ethernet.c
index 0b3747f..e180458 100644
--- a/drivers/net/ethernet/octeon/ethernet.c
+++ b/drivers/net/ethernet/octeon/ethernet.c
@@ -494,9 +494,8 @@ static int cvm_oct_common_change_mtu(struct net_device *dev, int new_mtu)
 				       max_packet);
 		} else {
 			union cvmx_pip_prt_cfgx port_cfg;
-			int offset = cvmx_helper_get_ipd_port(priv->interface, priv->interface_port);
 
-			port_cfg.u64 = cvmx_read_csr(CVMX_PIP_PRT_CFGX(offset));
+			port_cfg.u64 = cvmx_read_csr(CVMX_PIP_PRT_CFGX(priv->ipd_pkind));
 			if (port_cfg.s.maxerr_en) {
 				/* Disable the PIP check as it can
 				 * only be controlled over a group of
@@ -504,7 +503,7 @@ static int cvm_oct_common_change_mtu(struct net_device *dev, int new_mtu)
 				 * GMX instead.
 				 */
 				port_cfg.s.maxerr_en = 0;
-				cvmx_write_csr(CVMX_PIP_PRT_CFGX(offset), port_cfg.u64);
+				cvmx_write_csr(CVMX_PIP_PRT_CFGX(priv->ipd_pkind), port_cfg.u64);
 			}
 		}
 		/* Set the hardware to truncate packets larger than
-- 
1.7.5.4

