From dd4afdb1e1b10a79c9251e7b0a0c7094c79f0a8e Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Thu, 16 Aug 2012 16:30:25 -0700
Subject: [PATCH 141/337] MIPS: If huge pages are enabled, align STACK_TOP to
 a huge page boundry.

Based On SDK 3.0.0-482

This allows us to remap the stack onto huge pages without clobbering
either the VDSO nor memory past the TASK_SIZE limit.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/include/asm/processor.h |   18 +++++++++++++++++-
 arch/mips/kernel/vdso.c           |    2 +-
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/arch/mips/include/asm/processor.h b/arch/mips/include/asm/processor.h
index 95294fc..73afbad 100644
--- a/arch/mips/include/asm/processor.h
+++ b/arch/mips/include/asm/processor.h
@@ -73,9 +73,25 @@ extern unsigned int vced_count, vcei_count;
 
 #define TASK_IS_32BIT_ADDR test_thread_flag(TIF_32BIT_ADDR)
 
+# ifdef CONFIG_HUGETLB_PAGE
+/*
+ * Align the STACK_TOP on a HPAGE_SIZE boundry so the stack may be
+ * remapped to a huge page.
+ */
+# define SPECIAL_PAGES_BASE ((TASK_SIZE & PAGE_MASK) - SPECIAL_PAGES_SIZE)
+# define STACK_TOP (SPECIAL_PAGES_BASE & HPAGE_MASK)
+
+# endif /* CONFIG_HUGETLB_PAGE */
+#endif /* CONFIG_64BIT */
+
+#ifndef STACK_TOP
+# define STACK_TOP	((TASK_SIZE & PAGE_MASK) - SPECIAL_PAGES_SIZE)
+#endif
+
+#ifndef SPECIAL_PAGES_BASE
+# define SPECIAL_PAGES_BASE STACK_TOP
 #endif
 
-#define STACK_TOP	((TASK_SIZE & PAGE_MASK) - SPECIAL_PAGES_SIZE)
 
 /*
  * This decides where the kernel will search for a free chunk of vm
diff --git a/arch/mips/kernel/vdso.c b/arch/mips/kernel/vdso.c
index 0f1af58..088acee 100644
--- a/arch/mips/kernel/vdso.c
+++ b/arch/mips/kernel/vdso.c
@@ -67,7 +67,7 @@ subsys_initcall(init_vdso);
 
 static unsigned long vdso_addr(unsigned long start)
 {
-	return STACK_TOP;
+	return SPECIAL_PAGES_BASE;
 }
 
 int arch_setup_additional_pages(struct linux_binprm *bprm, int uses_interp)
-- 
1.7.5.4

