From 2d211ad09ace14697c7b88195bb9bf5177c93159 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 26 Jul 2013 11:50:47 -0700
Subject: [PATCH 09/20] mmc: octeon_mmc: Use octeon_bootbus_sem.

Source: Cavium SDK 3.1.0-515

Use the global bootbus semaphore to prevent bus errors in drivers that
share the bootbus.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/mmc/host/octeon_mmc.c |   19 ++++++++-----------
 1 files changed, 8 insertions(+), 11 deletions(-)

diff --git a/drivers/mmc/host/octeon_mmc.c b/drivers/mmc/host/octeon_mmc.c
index 52d2af5..4a2e5a0 100644
--- a/drivers/mmc/host/octeon_mmc.c
+++ b/drivers/mmc/host/octeon_mmc.c
@@ -67,8 +67,6 @@ struct octeon_mmc_host {
 	int sg_idx;
 	bool dma_active;
 
-	struct semaphore mmc_serializer;
-
 	struct platform_device	*pdev;
 
 	struct octeon_mmc_slot	*slot[OCTEON_MAX_MMC];
@@ -407,7 +405,7 @@ static irqreturn_t octeon_mmc_interrupt(int irq, void *dev_id)
 	}
 	spin_unlock_irqrestore(&host->lock, flags);
 	if (host_done)
-		up(&host->mmc_serializer);
+		up(&octeon_bootbus_sem);
 out:
 	return IRQ_RETVAL(emm_int.u64 != 0);
 }
@@ -437,8 +435,8 @@ static void octeon_mmc_dma_request(struct mmc_host *mmc,
 	slot = mmc_priv(mmc);
 	host = slot->host;
 
-	/* Only a single user of the host block at a time. */
-	down(&host->mmc_serializer);
+	/* Only a single user of the bootbus at a time. */
+	down(&octeon_bootbus_sem);
 
 	data = mrq->data;
 
@@ -510,8 +508,8 @@ static void octeon_mmc_request(struct mmc_host *mmc, struct mmc_request *mrq)
 	slot = mmc_priv(mmc);
 	host = slot->host;
 
-	/* Only a single user of the host block at a time. */
-	down(&host->mmc_serializer);
+	/* Only a single user of the bootbus at a time. */
+	down(&octeon_bootbus_sem);
 
 	spin_lock_irqsave(&host->lock, flags);
 	WARN_ON(host->current_req);
@@ -648,8 +646,8 @@ static void octeon_mmc_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)
 	slot = mmc_priv(mmc);
 	host = slot->host;
 
-	/* Only a single user of the host block at a time. */
-	down(&host->mmc_serializer);
+	/* Only a single user of the bootbus at a time. */
+	down(&octeon_bootbus_sem);
 
 	pr_debug("Calling set_ios: slot: clk = 0x%x, bus_width = %d\n",
 		 slot->clock, slot->bus_width);
@@ -736,7 +734,7 @@ static void octeon_mmc_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)
 		}
 	}
 out:
-	up(&host->mmc_serializer);
+	up(&octeon_bootbus_sem);
 }
 
 static int octeon_mmc_get_ro(struct mmc_host *mmc)
@@ -996,7 +994,6 @@ static int __devinit octeon_mmc_probe(struct platform_device *pdev)
 
 
 	spin_lock_init(&host->lock);
-	sema_init(&host->mmc_serializer, 1);
 
 	platform_set_drvdata(pdev, host);
 
-- 
1.7.5.4

