From 6133305ac8ecb4fb0b79c28c85d1f1da521b5de5 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Tue, 11 Dec 2012 16:27:50 -0800
Subject: [PATCH 266/337] netdev/octeon_ethernet: Don't do GMX operations on
 non-GMX ports.

Based On SDK 3.0.0-482

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 drivers/net/ethernet/octeon/ethernet.c        |   15 ++++++---------
 drivers/net/ethernet/octeon/octeon-ethernet.h |    1 +
 2 files changed, 7 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/octeon/ethernet.c b/drivers/net/ethernet/octeon/ethernet.c
index 6163b66..5c15eb2 100644
--- a/drivers/net/ethernet/octeon/ethernet.c
+++ b/drivers/net/ethernet/octeon/ethernet.c
@@ -474,9 +474,7 @@ static int cvm_oct_common_change_mtu(struct net_device *dev, int new_mtu)
 	}
 	dev->mtu = new_mtu;
 
-	if ((priv->interface < 2)
-	    && (cvmx_helper_interface_get_mode(priv->interface) !=
-		CVMX_HELPER_INTERFACE_MODE_SPI)) {
+	if (priv->has_gmx_regs) {
 		/* Add ethernet header and FCS, and VLAN if configured. */
 		int max_packet = new_mtu + 14 + 4 + vlan_bytes;
 
@@ -519,9 +517,7 @@ static void cvm_oct_common_set_multicast_list(struct net_device *dev)
 	union cvmx_gmxx_prtx_cfg gmx_cfg;
 	struct octeon_ethernet *priv = netdev_priv(dev);
 
-	if ((priv->interface < 2)
-	    && (cvmx_helper_interface_get_mode(priv->interface) !=
-		CVMX_HELPER_INTERFACE_MODE_SPI)) {
+	if (priv->has_gmx_regs) {
 		union cvmx_gmxx_rxx_adr_ctl control;
 		control.u64 = 0;
 		control.s.bcst = 1;	/* Allow broadcast MAC addresses */
@@ -572,9 +568,7 @@ static int cvm_oct_set_mac_filter(struct net_device *dev)
 	struct octeon_ethernet *priv = netdev_priv(dev);
 	union cvmx_gmxx_prtx_cfg gmx_cfg;
 
-	if ((priv->interface < 2)
-	    && (cvmx_helper_interface_get_mode(priv->interface) !=
-		CVMX_HELPER_INTERFACE_MODE_SPI)) {
+	if (priv->has_gmx_regs) {
 		int i;
 		u8 *ptr = dev->dev_addr;
 		u64 mac = 0;
@@ -1001,6 +995,7 @@ static int __devinit cvm_oct_probe(struct platform_device *pdev)
 				priv->tx_lockless = priv->tx_multiple_queues && !disable_lockless_pko;
 				dev->netdev_ops = priv->tx_lockless ?
 					&cvm_oct_sgmii_lockless_netdev_ops : &cvm_oct_sgmii_netdev_ops;
+				priv->has_gmx_regs = 1;
 				strcpy(dev->name, "xaui%d");
 				break;
 
@@ -1013,6 +1008,7 @@ static int __devinit cvm_oct_probe(struct platform_device *pdev)
 				priv->tx_lockless = priv->tx_multiple_queues && !disable_lockless_pko;
 				dev->netdev_ops = priv->tx_lockless ?
 					&cvm_oct_sgmii_lockless_netdev_ops : &cvm_oct_sgmii_netdev_ops;
+				priv->has_gmx_regs = 1;
 				strcpy(dev->name, "eth%d");
 				break;
 
@@ -1028,6 +1024,7 @@ static int __devinit cvm_oct_probe(struct platform_device *pdev)
 				priv->tx_lockless = priv->tx_multiple_queues && !disable_lockless_pko;
 				dev->netdev_ops = priv->tx_lockless ?
 					&cvm_oct_rgmii_lockless_netdev_ops : &cvm_oct_rgmii_netdev_ops;
+				priv->has_gmx_regs = 1;
 				strcpy(dev->name, "eth%d");
 				break;
 #ifdef CONFIG_RAPIDIO
diff --git a/drivers/net/ethernet/octeon/octeon-ethernet.h b/drivers/net/ethernet/octeon/octeon-ethernet.h
index b5f8c9e..b6bbab9 100644
--- a/drivers/net/ethernet/octeon/octeon-ethernet.h
+++ b/drivers/net/ethernet/octeon/octeon-ethernet.h
@@ -60,6 +60,7 @@ struct octeon_ethernet {
 	 */
 	int imode;
 
+	unsigned int has_gmx_regs:1;
 	unsigned int tx_timestamp_hw:1;
 	unsigned int rx_timestamp_hw:1;
 	unsigned int tx_multiple_queues:1;
-- 
1.7.5.4

