From 34e0eba7859022b06ad066b797f067a71baa0161 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Tue, 3 Jul 2012 13:41:04 -0700
Subject: [PATCH 109/337] netdev/staging: octeon-ethernet: Allow jumbo frames
 on OCTEON II chips.

Based On SDK 3.0.0-482

On OCTEON II, PIP_PRT_CFGX[maxerr_en] operates across multiple ports,
so it cannot be used to control ingress of jumbo frames on a single
port.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 drivers/staging/octeon/ethernet.c |   24 ++++++++++++++----------
 1 files changed, 14 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/octeon/ethernet.c b/drivers/staging/octeon/ethernet.c
index a955533..c6dbda3 100644
--- a/drivers/staging/octeon/ethernet.c
+++ b/drivers/staging/octeon/ethernet.c
@@ -294,16 +294,20 @@ static int cvm_oct_common_change_mtu(struct net_device *dev, int new_mtu)
 			cvmx_write_csr(CVMX_GMXX_RXX_FRM_MAX(priv->interface_port, priv->interface),
 				       max_packet);
 		} else {
-			/*
-			 * Set the hardware to truncate packets larger
-			 * than the MTU and smaller the 64 bytes.
-			 */
-			union cvmx_pip_frm_len_chkx frm_len_chk;
-			frm_len_chk.u64 = 0;
-			frm_len_chk.s.minlen = 64;
-			frm_len_chk.s.maxlen = max_packet;
-			cvmx_write_csr(CVMX_PIP_FRM_LEN_CHKX(priv->interface),
-				       frm_len_chk.u64);
+			union cvmx_pip_prt_cfgx port_cfg;
+			int offset = cvmx_helper_get_ipd_port(priv->interface, priv->interface_port);
+
+			port_cfg.u64 = cvmx_read_csr(CVMX_PIP_PRT_CFGX(offset));
+			if (port_cfg.s.maxerr_en) {
+				/*
+				 * Disable the PIP check as it can
+				 * only be controlled over a group of
+				 * ports, let the check be done in the
+				 * GMX instead.
+				 */
+				port_cfg.s.maxerr_en = 0;
+				cvmx_write_csr(CVMX_PIP_PRT_CFGX(offset), port_cfg.u64);
+			}
 		}
 		/*
 		 * Set the hardware to truncate packets larger than
-- 
1.7.5.4

