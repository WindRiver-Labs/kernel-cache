From cba9c710197118add7b47c70ce8b04df9bdf2319 Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Wed, 6 Aug 2014 16:06:29 +0800
Subject: [PATCH] mips: cavium: use GFP_ATOMIC instead of GFP_KERNEL

Under the protection of rwlock to allocate memory via kzalloc,
since the preemption would be disabled, so we should use GFP_ATOMIC
flag instead of GFP_KERNEL.

BUG: sleeping function called from invalid context at linux/mm/slub.c:943
in_atomic(): 1, irqs_disabled(): 0, pid: 939, name: ifconfig
2 locks held by ifconfig/939:
 #0: (rtnl_mutex){......}, at: [<ffffffff80751144>] rtnl_lock+0x2c/0x40
 #1: (octeon_hw_status_lock){......}, at: [<ffffffff801085ec>] octeon_hw_status_add_source+0x5c/0x380
Call Trace:
[<ffffffff80884830>] dump_stack+0x1c/0x50
[<ffffffff801a5f58>] __might_sleep+0x110/0x150
[<ffffffff80297558>] kmem_cache_alloc_trace+0x168/0x278
[<ffffffff80108640>] octeon_hw_status_add_source+0xb0/0x380
[<ffffffff8066332c>] cvm_oct_sgmii_open+0x4ec/0x708
[<ffffffff8074160c>] __dev_open+0x114/0x190
[<ffffffff80741958>] __dev_change_flags+0xb0/0x190
[<ffffffff80741b20>] dev_change_flags+0x30/0x90
[<ffffffff807b9a04>] devinet_ioctl+0x77c/0x838
[<ffffffff807bad08>] inet_ioctl+0xe8/0x120
[<ffffffff8071daac>] sock_do_ioctl+0x4c/0xa8
[<ffffffff8071e4cc>] compat_sock_ioctl+0x32c/0x1370
[<ffffffff80308150>] compat_sys_ioctl+0x120/0x1b50
[<ffffffff8014b464>] handle_sysn32+0x44/0x88

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 arch/mips/cavium-octeon/octeon-hw-status.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-hw-status.c b/arch/mips/cavium-octeon/octeon-hw-status.c
index 706e503..79f8c95 100644
--- a/arch/mips/cavium-octeon/octeon-hw-status.c
+++ b/arch/mips/cavium-octeon/octeon-hw-status.c
@@ -222,7 +222,7 @@ int octeon_hw_status_add_source(struct octeon_hw_status_reg *chain)
 
 	if (!root) {
 		root = kzalloc(sizeof(struct octeon_hw_status_node),
-			       GFP_KERNEL);
+			       GFP_ATOMIC);
 		if (!root) {
 			rv = -ENOMEM;
 			goto out;
@@ -240,7 +240,7 @@ int octeon_hw_status_add_source(struct octeon_hw_status_reg *chain)
 		n = find_child(w, chain);
 		if (!n) {
 			n = kzalloc(sizeof(struct octeon_hw_status_node),
-				    GFP_KERNEL);
+				    GFP_ATOMIC);
 			if (!n) {
 				rv = -ENOMEM;
 				goto out;
-- 
1.7.5.4

