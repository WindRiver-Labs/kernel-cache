From 6c91bc948df72723634f3f87f6cf5c85ae39d72a Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Wed, 30 Jul 2014 13:40:35 +0800
Subject: [PATCH] mips/kexec:Fix a call trace when loading crash kernel

When loading crash kernel, the system runs into the following
call trace. The current call graph likes this:

arch_mem_init
         |
         |->reserve_bootmem(crashk_res.start,crashk_res.end...)
resource_init
         |
         |->mips_parse_crashkernel()

Obviously, the call graph is wrong, we should call
mips_parse_crashkernel() before invoking reserve_bootmem.

Unhandled kernel unaligned access[#1]:
Cpu 0
$ 0   : 0000000000000000 ffffffff81897138 67bd00b000000198 ffffffff81ba0000
$ 4   : 0000000000000000 8000000085f3e738 0000000000000000 0000000000000000
$ 8   : 67bd00b000000000 0000000000000000 ffffffff81895e40 0000000000000000
$12   : 8000000085f43888 0000000000000001 8000000076226988 0000000000000001
$16   : 0000000000000000 8000000004183d08 0000000000000000 ffffffff81895e40
$20   : 0000000000000000 0000000000000000 ffffffff81d10000 0000000000000001
$24   : 00000000100184a0 000000002cbf7ef0
$28   : 8000000085f40000 8000000085f43780 8000000085f43780 ffffffff811cfb5c
Hi    : 0000000000000284
Lo    : 0000000028f5c4c3
epc   : ffffffff811ce7ec __lock_acquire.isra.22+0x18c/0xe00
    Not tainted
ra    : ffffffff811cfb5c lock_acquire+0xac/0x190
Status: 10008ce2    KX SX UX KERNEL EXL
Cause : 00800010
BadVA : 67bd00b000000198
PrId  : 000d9300 (Cavium Octeon II)
Modules linked in:
Process syslogd (pid: 672, threadinfo=8000000085f40000, task=8000000085f3e738, tls=0000000077cd84a0)
Stack : 8000000085f43790 8000000085f3e738 0000000000000000 0000000000000000
        0000000000000000 8000000004200298 8000000085f437c0 ffffffff811cf88c
        0000000000000001 8000000004200280 8000000004183cf0 0000000000000000
        0000000000000000 0000000000000000 8000000004183d08 0000000000000000
        ffffffff81895e40 0000000000000001 8000000085f43820 ffffffff811cfb5c
        8000000085f43830 ffffffff811ae34c 0000000000000001 ffffffff81897138
        8000000004183cf0 8000000085cac310 000000000000005f 8000000085f3e738
        ffffffff818bc958 0000000000000929 0000000000000000 8000000084decb00
        8000000085f43890 ffffffff81897158 ffffffff81895e40 8000000085f3e738
        0000000000000000 8000000004183cf0 8000000085f438c0 ffffffff81895e40
        ...
Call Trace:
[<ffffffff811ce7ec>] __lock_acquire.isra.22+0x18c/0xe00
[<ffffffff811cfb5c>] lock_acquire+0xac/0x190
[<ffffffff81897158>] _raw_spin_lock+0x50/0x70
[<ffffffff81895e40>] rt_spin_lock_slowlock+0x54/0x294
[<ffffffff8189663c>] rt_spin_lock+0xa4/0xb0
[<ffffffff811ae97c>] __wake_up+0x3c/0x80
[<ffffffff81199cb0>] __wake_up_bit+0x40/0x58
[<ffffffff8124ed48>] unlock_page+0x58/0x70
[<ffffffff81269da4>] shmem_write_end+0x54/0x80
[<ffffffff8124f610>] generic_file_buffered_write+0xf0/0x2a0
[<ffffffff81250b28>] __generic_file_aio_write+0x240/0x400
[<ffffffff81250d64>] generic_file_aio_write+0x7c/0x148
[<ffffffff812ac9b4>] do_sync_readv_writev+0xb4/0x130
[<ffffffff8130ca78>] compat_do_readv_writev+0xd8/0x200
[<ffffffff8130cc04>] compat_writev+0x64/0x90
[<ffffffff8130d498>] compat_sys_writev+0x60/0xa0
[<ffffffff8114c004>] handle_sysn32+0x44/0x88

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 arch/mips/kernel/setup.c |   96 +++++++++++++++++++++++----------------------
 1 files changed, 49 insertions(+), 47 deletions(-)

diff --git a/arch/mips/kernel/setup.c b/arch/mips/kernel/setup.c
index a2b5dbc..b310d0f 100644
--- a/arch/mips/kernel/setup.c
+++ b/arch/mips/kernel/setup.c
@@ -478,6 +478,54 @@ static int __init early_parse_mem(char *p)
 }
 early_param("mem", early_parse_mem);
 
+#ifdef CONFIG_KEXEC
+static inline unsigned long long get_total_mem(void)
+{
+	unsigned long long total;
+
+	total = max_pfn - min_low_pfn;
+	return total << PAGE_SHIFT;
+}
+
+static void __init mips_parse_crashkernel(void)
+{
+	unsigned long long total_mem;
+	unsigned long long crash_size, crash_base;
+	int ret;
+
+	total_mem = get_total_mem();
+	printk(KERN_INFO "total_mem is %llx\n", total_mem);
+	ret = parse_crashkernel(boot_command_line, total_mem,
+				&crash_size, &crash_base);
+	if (ret != 0 || crash_size <= 0)
+		return;
+
+	crashk_res.start = crash_base;
+	crashk_res.end   = crash_base + crash_size - 1;
+}
+
+static void __init request_crashkernel(struct resource *res)
+{
+	int ret;
+
+	ret = request_resource(res, &crashk_res);
+	if (!ret)
+		pr_info("Reserving %ldMB of memory at %ldMB for crashkernel\n",
+			(unsigned long)((crashk_res.end -
+				crashk_res.start + 1) >> 20),
+			(unsigned long)(crashk_res.start  >> 20));
+}
+#else /* !defined(CONFIG_KEXEC)  */
+static void __init mips_parse_crashkernel(void)
+{
+}
+
+static void __init request_crashkernel(struct resource *res)
+{
+}
+#endif /* !defined(CONFIG_KEXEC)  */
+
+
 static void __init arch_mem_init(char **cmdline_p)
 {
 	phys_t init_mem, init_end, init_size;
@@ -535,6 +583,7 @@ static void __init arch_mem_init(char **cmdline_p)
 	}
 
 	bootmem_init();
+	mips_parse_crashkernel();
 #ifdef CONFIG_KEXEC
 	if (crashk_res.start != crashk_res.end)
 		reserve_bootmem(crashk_res.start,
@@ -547,52 +596,6 @@ static void __init arch_mem_init(char **cmdline_p)
 	paging_init();
 }
 
-#ifdef CONFIG_KEXEC
-static inline unsigned long long get_total_mem(void)
-{
-	unsigned long long total;
-
-	total = max_pfn - min_low_pfn;
-	return total << PAGE_SHIFT;
-}
-
-static void __init mips_parse_crashkernel(void)
-{
-	unsigned long long total_mem;
-	unsigned long long crash_size, crash_base;
-	int ret;
-
-	total_mem = get_total_mem();
-	ret = parse_crashkernel(boot_command_line, total_mem,
-				&crash_size, &crash_base);
-	if (ret != 0 || crash_size <= 0)
-		return;
-
-	crashk_res.start = crash_base;
-	crashk_res.end   = crash_base + crash_size - 1;
-}
-
-static void __init request_crashkernel(struct resource *res)
-{
-	int ret;
-
-	ret = request_resource(res, &crashk_res);
-	if (!ret)
-		pr_info("Reserving %ldMB of memory at %ldMB for crashkernel\n",
-			(unsigned long)((crashk_res.end -
-				crashk_res.start + 1) >> 20),
-			(unsigned long)(crashk_res.start  >> 20));
-}
-#else /* !defined(CONFIG_KEXEC)  */
-static void __init mips_parse_crashkernel(void)
-{
-}
-
-static void __init request_crashkernel(struct resource *res)
-{
-}
-#endif /* !defined(CONFIG_KEXEC)  */
-
 static void __init resource_init(void)
 {
 	int i;
@@ -608,7 +611,6 @@ static void __init resource_init(void)
 	/*
 	 * Request address space for all standard RAM.
 	 */
-	mips_parse_crashkernel();
 
 	for (i = 0; i < boot_mem_map.nr_map; i++) {
 		struct resource *res;
-- 
1.7.5.4

