From d598cccb197044721e27b0a9b565f25eb12953f9 Mon Sep 17 00:00:00 2001
From: Ralf Baechle <ralf@linux-mips.org>
Date: Mon, 15 Oct 2012 01:29:51 +0200
Subject: [PATCH 198/337] MIPS: Quick debug helper to dump page table for an
 addres to the console.

Based On SDK 3.0.0-482

Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/include/asm/tlbdebug.h |    1 +
 arch/mips/lib/dump_tlb.c         |   45 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 46 insertions(+), 0 deletions(-)

diff --git a/arch/mips/include/asm/tlbdebug.h b/arch/mips/include/asm/tlbdebug.h
index bb8f5c2..8957146 100644
--- a/arch/mips/include/asm/tlbdebug.h
+++ b/arch/mips/include/asm/tlbdebug.h
@@ -12,5 +12,6 @@
  * TLB debugging functions:
  */
 extern void dump_tlb_all(void);
+extern void dump_current_addr(unsigned long addr);
 
 #endif /* __ASM_TLBDEBUG_H */
diff --git a/arch/mips/lib/dump_tlb.c b/arch/mips/lib/dump_tlb.c
index 3f69725..50f6c32 100644
--- a/arch/mips/lib/dump_tlb.c
+++ b/arch/mips/lib/dump_tlb.c
@@ -5,11 +5,14 @@
  * Copyright (C) 1999 by Silicon Graphics, Inc.
  */
 #include <linux/kernel.h>
+#include <linux/hugetlb.h>
 #include <linux/mm.h>
+#include <linux/sched.h>
 
 #include <asm/mipsregs.h>
 #include <asm/page.h>
 #include <asm/pgtable.h>
+#include <asm/current.h>
 #include <asm/tlbdebug.h>
 
 static inline const char *msk2str(unsigned int mask)
@@ -109,3 +112,45 @@ void dump_tlb_all(void)
 {
 	dump_tlb(0, current_cpu_data.tlbsize - 1);
 }
+
+void dump_current_addr(unsigned long addr)
+{
+	pgd_t *pgdp;
+	pud_t *pudp;
+	pmd_t *pmdp;
+	pte_t *ptep;
+	pte_t pte;
+
+	printk("Dumping for address %lx\n", addr);
+	pgdp = pgd_offset(current->mm, addr);
+	printk("pgd %lx\n", pgd_val(*pgdp));
+
+	pudp = pud_offset(pgdp, addr);
+	printk("pud %lx", pud_val(*pudp));
+	if (pud_val(*pudp) == (unsigned long) invalid_pmd_table) {
+		printk("  (invalid_pmd_table)\n");
+
+		return;
+	}
+	printk("\n");
+
+	pmdp = pmd_offset(pudp, addr);
+	printk("pmd  %lx", pmd_val(*pmdp));
+	if (pmd_huge(*pmdp)) {
+		printk("  pmd is huge\n");
+
+		return;
+	}
+	if (pmd_val(*pmdp) == (unsigned long) invalid_pte_table) {
+		printk("  (invalid_pte_table)\n");
+
+		return;
+	}
+	printk("\n");
+
+	ptep = pte_offset_map(pmdp, addr);
+	pte = *ptep;
+	printk("pte %lx\n", pte_val(pte));
+	if (pte_huge(pte))
+		printk("  pte is huge\n");
+}
-- 
1.7.5.4

