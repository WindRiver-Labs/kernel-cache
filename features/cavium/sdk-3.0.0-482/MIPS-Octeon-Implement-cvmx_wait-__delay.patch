From f8fdaf7a3c5beb0ee926abb4dd89907621dd32d6 Mon Sep 17 00:00:00 2001
From: David Daney <ddaney@caviumnetworks.com>
Date: Fri, 14 May 2010 14:23:05 -0700
Subject: [PATCH 060/337] MIPS: Octeon: Implement cvmx_wait __delay

Based On SDK 3.0.0-482

Change argument types of __?delay() to match prototypes.

Signed-off-by: David Daney <ddaney@caviumnetworks.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/cavium-octeon/csrc-octeon.c |    6 +++---
 arch/mips/include/asm/octeon/cvmx.h   |    9 ++-------
 2 files changed, 5 insertions(+), 10 deletions(-)

diff --git a/arch/mips/cavium-octeon/csrc-octeon.c b/arch/mips/cavium-octeon/csrc-octeon.c
index 0219395..beecbee 100644
--- a/arch/mips/cavium-octeon/csrc-octeon.c
+++ b/arch/mips/cavium-octeon/csrc-octeon.c
@@ -125,7 +125,7 @@ void __init plat_time_init(void)
 	clocksource_register_hz(&clocksource_mips, octeon_get_clock_rate());
 }
 
-void __udelay(unsigned long us)
+void __udelay(unsigned int us)
 {
 	u64 cur, end, inc;
 
@@ -139,7 +139,7 @@ void __udelay(unsigned long us)
 }
 EXPORT_SYMBOL(__udelay);
 
-void __ndelay(unsigned long ns)
+void __ndelay(unsigned int ns)
 {
 	u64 cur, end, inc;
 
@@ -153,7 +153,7 @@ void __ndelay(unsigned long ns)
 }
 EXPORT_SYMBOL(__ndelay);
 
-void __delay(unsigned long loops)
+void __delay(unsigned int loops)
 {
 	u64 cur, end;
 
diff --git a/arch/mips/include/asm/octeon/cvmx.h b/arch/mips/include/asm/octeon/cvmx.h
index 740be97..38aae87 100644
--- a/arch/mips/include/asm/octeon/cvmx.h
+++ b/arch/mips/include/asm/octeon/cvmx.h
@@ -30,6 +30,7 @@
 
 #include <linux/kernel.h>
 #include <linux/string.h>
+#include <linux/delay.h>
 
 enum cvmx_mips_space {
 	CVMX_MIPS_SPACE_XKSEG = 3LL,
@@ -379,13 +380,7 @@ static inline uint64_t cvmx_get_cycle(void)
  * Wait for the specified number of cycle
  *
  */
-static inline void cvmx_wait(uint64_t cycles)
-{
-	uint64_t done = cvmx_get_cycle() + cycles;
-
-	while (cvmx_get_cycle() < done)
-		; /* Spin */
-}
+#define cvmx_wait(c) __delay(c)
 
 /**
  * Reads a chip global cycle counter.  This counts CPU cycles since
-- 
1.7.5.4

