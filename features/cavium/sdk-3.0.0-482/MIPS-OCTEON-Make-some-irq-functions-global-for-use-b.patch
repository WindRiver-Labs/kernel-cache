From 5c82355fcb666386e188847be57ba842e706bfcc Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Thu, 5 Apr 2012 16:57:23 -0700
Subject: [PATCH 032/337] MIPS: OCTEON: Make some irq functions global for use
 by MSI.

Based On SDK 3.0.0-482

The MSI code needs access to octeon_coreid_for_cpu(),
cteon_cpu_for_coreid() and octeon_irq_cpu_offline_ciu().  Make them
global.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/cavium-octeon/octeon-irq.c  |    6 +++---
 arch/mips/include/asm/octeon/octeon.h |    6 ++++++
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-irq.c b/arch/mips/cavium-octeon/octeon-irq.c
index 1eb4461..eb3ec5e 100644
--- a/arch/mips/cavium-octeon/octeon-irq.c
+++ b/arch/mips/cavium-octeon/octeon-irq.c
@@ -62,7 +62,7 @@ static void octeon_irq_set_ciu_mapping(int irq, int line, int bit, int gpio_line
 	octeon_irq_ciu_to_irq[line][bit] = irq;
 }
 
-static int octeon_coreid_for_cpu(int cpu)
+int octeon_coreid_for_cpu(int cpu)
 {
 #ifdef CONFIG_SMP
 	return cpu_logical_map(cpu);
@@ -71,7 +71,7 @@ static int octeon_coreid_for_cpu(int cpu)
 #endif
 }
 
-static int octeon_cpu_for_coreid(int coreid)
+int octeon_cpu_for_coreid(int coreid)
 {
 #ifdef CONFIG_SMP
 	return cpu_number_map(coreid);
@@ -619,7 +619,7 @@ static void octeon_irq_handle_gpio(unsigned int irq, struct irq_desc *desc)
 
 #ifdef CONFIG_SMP
 
-static void octeon_irq_cpu_offline_ciu(struct irq_data *data)
+void octeon_irq_cpu_offline_ciu(struct irq_data *data)
 {
 	int cpu = smp_processor_id();
 	cpumask_t new_affinity;
diff --git a/arch/mips/include/asm/octeon/octeon.h b/arch/mips/include/asm/octeon/octeon.h
index e937e86..942e6fa 100644
--- a/arch/mips/include/asm/octeon/octeon.h
+++ b/arch/mips/include/asm/octeon/octeon.h
@@ -257,4 +257,10 @@ extern void (*octeon_irq_setup_secondary)(void);
 typedef void (*octeon_irq_ip4_handler_t)(void);
 void octeon_irq_set_ip4_handler(octeon_irq_ip4_handler_t);
 
+int octeon_coreid_for_cpu(int cpu);
+int octeon_cpu_for_coreid(int coreid);
+
+struct irq_data;
+void octeon_irq_cpu_offline_ciu(struct irq_data *data);
+
 #endif /* __ASM_OCTEON_OCTEON_H */
-- 
1.7.5.4

