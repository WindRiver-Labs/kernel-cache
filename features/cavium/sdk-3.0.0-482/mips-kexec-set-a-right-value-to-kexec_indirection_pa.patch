From ff6fed113da3dbad73586b81eaf31f7bed5af613 Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Thu, 31 Jul 2014 18:14:41 +0800
Subject: [PATCH] mips/kexec: set a right value to kexec_indirection_page
 variable

When executing "echo c >/proc/sysrq-trigger", we run into the following
call trace.

Unhandled kernel unaligned access[#2]:
Cpu 0
$ 0   : 0000000000000000 ffffffff81142da4 0000000000000000 0000000000000000
$ 4   : 800000008752b550 aabbcc01c0134c90 80000000053bc094 aabbcc01c0134c90
$ 8   : ffffffff81d17c60 00000000000043aa ffffffff8116b52c 0000000000000007
$12   : 800000008752b398 000000001000001e 800000008a250000 0000000000000000
$16   : 800000008752b550 aabbcc01c0134c90 ffffffffde550000 0000000000000008
$20   : 0000000000000029 ffffffff81ba0000 0000000000000200 0000000000000000
$24   : ffffffffffffff4b 0000000003bf0000
$28   : 8000000087528000 800000008752b210 800000008752b210 ffffffff81142da4
Hi    : 00000000001b7637
Lo    : 02602c9083e10b11
epc   : ffffffff81142b28 emulate_load_store_insn+0x348/0x460
    Tainted: G      D
ra    : ffffffff81142da4 do_ade+0x164/0x370
Status: 10008ce2    KX SX UX KERNEL EXL
Cause : 00800010
BadVA : aabbcc01c0134c90
PrId  : 000d9300 (Cavium Octeon II)
Modules linked in:
Process sh (pid: 809, threadinfo=8000000087528000, task=8000000086554138, tls=000000007720a4a0)
Stack : 800000008752b220 ffffffff81893db0 8000000003e80280 800000008a24e138
        0000000000000000 8000000003e80280 800000008a24e208 0000000000000000
        0000000000000000 800000008a24e138 800000008752b270 ffffffff811ab304
        8000000086554138 0000000000000002 0000000000000003 8000000003e80280
        800000008752b2a0 ffffffff811abbf0 ffffffff81b38008 800000008a24e138
        0000000000000000 800000008a24eae0 0000000000000000 0000000000000000
        800000008a24eae0 0000000000000000 0000000000000000 800000008752b2f0
        8000000003e7ca20 8000000003e7ca20 0000000000000000 0000000000000000
        800000008752b320 ffffffff811b6cfc 0000000000000000 0000000000000000
        0000000000000000 0000000000000000 0000000000000001 0000000000000001
        ...
Call Trace:
[<ffffffff81142b28>] emulate_load_store_insn+0x348/0x460
[<ffffffff81142da4>] do_ade+0x164/0x370
[<ffffffff8113b0e4>] ret_from_exception+0x0/0x10

The root cause is that since there is not indirection page in crash type,
so the vaule of the head field of kimage structure is not equal to the
address of indirection page but IND_DONE. so we have to set kexec_indirection_page
variable to the address of the head field of image structure.

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 arch/mips/kernel/machine_kexec.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/arch/mips/kernel/machine_kexec.c b/arch/mips/kernel/machine_kexec.c
index 992e184..531b70d 100644
--- a/arch/mips/kernel/machine_kexec.c
+++ b/arch/mips/kernel/machine_kexec.c
@@ -71,8 +71,13 @@ machine_kexec(struct kimage *image)
 	kexec_start_address =
 		(unsigned long) phys_to_virt(image->start);
 
-	kexec_indirection_page =
-		(unsigned long) phys_to_virt(image->head & PAGE_MASK);
+	if (image->type == KEXEC_TYPE_DEFAULT) {
+		kexec_indirection_page =
+			(unsigned long) phys_to_virt(image->head & PAGE_MASK);
+	} else {
+		kexec_indirection_page = (unsigned long)&image->head;
+	}
+	
 
 	memcpy((void*)reboot_code_buffer, relocate_new_kernel,
 	       relocate_new_kernel_size);
-- 
1.7.5.4

