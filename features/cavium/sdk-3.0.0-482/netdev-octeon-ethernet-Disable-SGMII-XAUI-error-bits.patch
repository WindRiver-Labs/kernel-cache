From 9b3ce7f35aea141d7204f9f547e2af46c9cb25ac Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 18 Jan 2013 14:37:09 -0800
Subject: [PATCH 331/337] netdev/octeon-ethernet: Disable SGMII/XAUI error
 bits on ifdown.

Based On SDK 3.0.0-482

When the interface is closed, turn off the error tree bits, and
indicate that the carrier is off.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Corey Minyard <cminyard@mvista.com>
Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 drivers/net/ethernet/octeon/ethernet-mdio.c   |   19 +++++++++++++++++++
 drivers/net/ethernet/octeon/ethernet-sgmii.c  |    2 +-
 drivers/net/ethernet/octeon/octeon-ethernet.h |    3 ++-
 3 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/octeon/ethernet-mdio.c b/drivers/net/ethernet/octeon/ethernet-mdio.c
index c96fb18..bbb6452 100644
--- a/drivers/net/ethernet/octeon/ethernet-mdio.c
+++ b/drivers/net/ethernet/octeon/ethernet-mdio.c
@@ -357,6 +357,25 @@ void cvm_oct_adjust_link(struct net_device *dev)
 	}
 }
 
+int cvm_oct_common_stop(struct net_device *dev)
+{
+	struct octeon_ethernet *priv = netdev_priv(dev);
+	cvmx_helper_link_info_t link_info;
+
+	if (priv->last_link) {
+		link_info.u64 = 0;
+		priv->last_link = 0;
+
+		cvmx_helper_link_set(priv->ipd_port, link_info);
+
+		if (priv->link_change)
+			priv->link_change(priv, link_info);
+
+		cvm_oct_note_carrier(priv, link_info);
+	}
+	return 0;
+}
+
 /**
  * cvm_oct_phy_setup_device - setup the PHY
  *
diff --git a/drivers/net/ethernet/octeon/ethernet-sgmii.c b/drivers/net/ethernet/octeon/ethernet-sgmii.c
index 7d25ad9..957ad9b 100644
--- a/drivers/net/ethernet/octeon/ethernet-sgmii.c
+++ b/drivers/net/ethernet/octeon/ethernet-sgmii.c
@@ -110,7 +110,7 @@ int cvm_oct_sgmii_stop(struct net_device *dev)
 		phy_disconnect(priv->phydev);
 	priv->phydev = NULL;
 
-	return 0;
+	return cvm_oct_common_stop(dev);
 }
 
 static void cvm_oct_sgmii_link_change(struct octeon_ethernet *priv,
diff --git a/drivers/net/ethernet/octeon/octeon-ethernet.h b/drivers/net/ethernet/octeon/octeon-ethernet.h
index abc39b6..98dcd16 100644
--- a/drivers/net/ethernet/octeon/octeon-ethernet.h
+++ b/drivers/net/ethernet/octeon/octeon-ethernet.h
@@ -84,7 +84,7 @@ struct octeon_ethernet {
 	} tx_queue[32];
 
 	struct phy_device *phydev;
-	unsigned int last_link;
+	int last_link;
 	/* Last negotiated link state */
 	u64 link_info;
 	/* Called periodically to check link status */
@@ -133,6 +133,7 @@ int cvm_oct_srio_change_mtu(struct net_device *dev, int new_mtu);
 struct net_device_stats *cvm_oct_srio_get_stats(struct net_device *dev);
 
 int cvm_oct_common_init(struct net_device *dev);
+int cvm_oct_common_stop(struct net_device *dev);
 
 void cvm_oct_set_carrier(struct octeon_ethernet *priv,
 				cvmx_helper_link_info_t link_info);
-- 
1.7.5.4

