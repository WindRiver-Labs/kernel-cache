From 0bce54e42acb0942f0a6320f1f3d0c14ead4c120 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Wed, 21 Aug 2013 16:27:55 -0700
Subject: [PATCH 245/382] MIPS: OCTEON: Fix crash on use of octeon-pci-console.

Based on SDK octeon3_3.10.

We were getting:

WARNING: at drivers/tty/tty_io.c:1476 tty_init_dev+0x1c0/0x1e0()
tty_init_dev: ttyPCI driver does not set tty->port. This will crash the kernel later. Fix the driver!
Modules linked in: at24
CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.10.8-rt3-Cavium-Octeon+ #1
Stack : 0000000040808400 ffffffff80162bb8 0000000000000000 0000000000000000
	  0000000000000000 ffffffff83210000 ffffffff80830000 0000000000000001
	  0000000000000000 0000000000000000 0000000000000000 0000000000000046
	  0000000000000000 ffffffff80162c44 0000000000000000 0000000000000000
	  ffffffff83220000 ffffffff83210000 ffffffff80748700 ffffffff807fa377
	  ffffffff83211500 800000003006b638 0000000000000001 0000000000000000
	  fffbffff00000000 0000000000000000 800000002cd39280 ffffffff806084a8
	  800000003006f928 800000003006f820 800000002cd39280 ffffffff801604c8
	  800000003006b320 ffffffff80748700 0000000000000000 0000000000000001
	  0000000000000000 ffffffff80140518 0000000000000000 0000000000000000
	  ...
Call Trace:
[<ffffffff80140518>] show_stack+0x68/0x80
[<ffffffff801604c8>] warn_slowpath_common+0x78/0xa8
[<ffffffff80160598>] warn_slowpath_fmt+0x38/0x48
[<ffffffff803c6bf8>] tty_init_dev+0x1c0/0x1e0
[<ffffffff803c7738>] tty_open+0x538/0x610
[<ffffffff8021f4f0>] chrdev_open+0xc0/0x1b0
[<ffffffff80217ed8>] do_dentry_open+0x238/0x2d8
[<ffffffff80217fa8>] finish_open+0x30/0x58
[<ffffffff80229a34>] do_last.isra.30+0x4b4/0xc38
[<ffffffff8022a264>] path_openat+0xac/0x4c0
[<ffffffff8022aa10>] do_filp_open+0x38/0xa8
[<ffffffff8021945c>] do_sys_open+0xfc/0x1f0
[<ffffffff80868b44>] kernel_init_freeable+0x17c/0x208
[<ffffffff805f93dc>] kernel_init+0x14/0x100
[<ffffffff8013ba30>] ret_from_kernel_thread+0x14/0x1c

Update the driver to create and initialize a struct tty_port as is now
required by the tty infrastructure.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/cavium-octeon/octeon-pci-console.c |   70 ++++++++++++++++----------
 1 files changed, 43 insertions(+), 27 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-pci-console.c b/arch/mips/cavium-octeon/octeon-pci-console.c
index 1d4edc3..89afa4f 100644
--- a/arch/mips/cavium-octeon/octeon-pci-console.c
+++ b/arch/mips/cavium-octeon/octeon-pci-console.c
@@ -91,6 +91,7 @@ struct octeon_pci_console {
 	struct timer_list poll_timer;
 	int open_count;
 	int index;
+	struct tty_port tty_port;
 };
 
 static struct octeon_pci_console octeon_pci_console;
@@ -202,17 +203,19 @@ static int octeon_pci_console_setup(struct console *con, char *arg)
 
 void octeon_pci_console_init(const char *arg)
 {
-	memset(&octeon_pci_console, 0, sizeof(octeon_pci_console));
-	strcpy(octeon_pci_console.con.name, "pci");
-	octeon_pci_console.con.write = octeon_pci_console_write;
-	octeon_pci_console.con.device = octeon_pci_console_device;
-	octeon_pci_console.con.setup = octeon_pci_console_setup;
-	octeon_pci_console.con.data = &octeon_pci_console;
+	struct octeon_pci_console *c = &octeon_pci_console;
+
+	memset(c, 0, sizeof(*c));
+	strcpy(c->con.name, "pci");
+	c->con.write = octeon_pci_console_write;
+	c->con.device = octeon_pci_console_device;
+	c->con.setup = octeon_pci_console_setup;
+	c->con.data = &octeon_pci_console;
 	if (arg && (arg[3] >= '0') && (arg[3] <= '9'))
-		sscanf(arg + 3, "%d", &octeon_pci_console.index);
+		sscanf(arg + 3, "%d", &c->index);
 	else
-		octeon_pci_console.index = 0;
-	register_console(&octeon_pci_console.con);
+		c->index = 0;
+	register_console(&c->con);
 }
 
 /*
@@ -325,30 +328,43 @@ static const struct tty_operations octeon_pci_tty_ops = {
 
 static __init int octeon_pci_console_module_init(void)
 {
-	octeon_pci_console.ttydrv = alloc_tty_driver(1);
-	if (!octeon_pci_console.ttydrv)
-		return 0;
+	int r;
+	struct tty_driver *d = tty_alloc_driver(1, 0);
+
+	if (IS_ERR(d))
+		return PTR_ERR(d);
+
+	octeon_pci_console.ttydrv = d;
+
 	if (octeon_pci_console_setup0(&octeon_pci_console)) {
 		pr_notice("Console not created.\n");
-		return -ENODEV;
+		r = -ENODEV;
+		goto err;
 	} else {
 		pr_info("Initialized.\n");
 	}
 
-	octeon_pci_console.ttydrv->owner = THIS_MODULE;
-	octeon_pci_console.ttydrv->driver_name = "octeon_pci_console";
-	octeon_pci_console.ttydrv->name = "ttyPCI";
-	octeon_pci_console.ttydrv->type = TTY_DRIVER_TYPE_SERIAL;
-	octeon_pci_console.ttydrv->subtype = SERIAL_TYPE_NORMAL;
-	octeon_pci_console.ttydrv->flags = TTY_DRIVER_REAL_RAW;
-	octeon_pci_console.ttydrv->major = 4;
-	octeon_pci_console.ttydrv->minor_start = 96;
-	octeon_pci_console.ttydrv->init_termios = tty_std_termios;
-	octeon_pci_console.ttydrv->init_termios.c_cflag =
-		B9600 | CS8 | CREAD | HUPCL | CLOCAL;
-	octeon_pci_console.ttydrv->driver_state = &octeon_pci_console;
-	tty_set_operations(octeon_pci_console.ttydrv, &octeon_pci_tty_ops);
-	tty_register_driver(octeon_pci_console.ttydrv);
+	d->owner = THIS_MODULE;
+	d->driver_name = "octeon_pci_console";
+	d->name = "ttyPCI";
+	d->type = TTY_DRIVER_TYPE_SERIAL;
+	d->subtype = SERIAL_TYPE_NORMAL;
+	d->flags = TTY_DRIVER_REAL_RAW;
+	d->major = 4;
+	d->minor_start = 96;
+	d->init_termios = tty_std_termios;
+	d->init_termios.c_cflag = B9600 | CS8 | CREAD | HUPCL | CLOCAL;
+	d->driver_state = &octeon_pci_console;
+	tty_set_operations(d, &octeon_pci_tty_ops);
+	tty_port_init(&octeon_pci_console.tty_port);
+	tty_port_link_device(&octeon_pci_console.tty_port, d, 0);
+	r = tty_register_driver(d);
+	if (r)
+		goto err;
+
 	return 0;
+err:
+	put_tty_driver(d);
+	return r;
 }
 module_init(octeon_pci_console_module_init);
-- 
1.7.0.4

