From 030cb13c51ca0b026023af29b4f2c4f3d7ac7cf7 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 15 Nov 2013 16:04:47 -0800
Subject: [PATCH 367/382] netdev: octeon-ethernet: Get rid of bogus locking.

Based on SDK octeon3_3.10.

... use ACCESS_ONCE() instead.

Was causing:

=========================================================
[ INFO: possible irq lock inversion dependency detected ]
3.10.14-Cavium-Octeon+ #416 Not tainted
---------------------------------------------------------
swapper/1/0 just changed the state of lock:
 (&(&mc->mca_lock)->rlock){+.-...}, at: [<ffffffffc0032bfc>] mld_ifc_timer_expire+0x1bc/0x350 [ipv6]
but this lock took another, SOFTIRQ-unsafe lock in the past:
 (&(&priv->poll_lock)->rlock){+.+...}

and interrupts could create inverse lock ordering between them.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/octeon/ethernet-rgmii.c |    2 --
 drivers/net/ethernet/octeon/ethernet-sgmii.c |    4 ----
 drivers/net/ethernet/octeon/ethernet.c       |    4 +---
 3 files changed, 1 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/octeon/ethernet-rgmii.c b/drivers/net/ethernet/octeon/ethernet-rgmii.c
index 92a7407..ffd0e71 100644
--- a/drivers/net/ethernet/octeon/ethernet-rgmii.c
+++ b/drivers/net/ethernet/octeon/ethernet-rgmii.c
@@ -183,9 +183,7 @@ int cvm_oct_rgmii_open(struct net_device *dev)
 			link_info = cvmx_helper_link_get(priv->ipd_port);
 			if (!link_info.s.link_up)
 				netif_carrier_off(dev);
-			spin_lock(&priv->poll_lock);
 			priv->poll = cvm_oct_rgmii_poll;
-			spin_unlock(&priv->poll_lock);
 		}
 	}
 
diff --git a/drivers/net/ethernet/octeon/ethernet-sgmii.c b/drivers/net/ethernet/octeon/ethernet-sgmii.c
index 29730f4..199613a 100644
--- a/drivers/net/ethernet/octeon/ethernet-sgmii.c
+++ b/drivers/net/ethernet/octeon/ethernet-sgmii.c
@@ -112,9 +112,7 @@ int cvm_oct_sgmii_open(struct net_device *dev)
 		link_info = cvmx_helper_link_get(priv->ipd_port);
 		if (!link_info.s.link_up)
 			netif_carrier_off(dev);
-		spin_lock(&priv->poll_lock);
 		priv->poll = cvm_oct_sgmii_poll;
-		spin_unlock(&priv->poll_lock);
 		cvm_oct_sgmii_poll(dev);
 	}
 	imode = cvmx_helper_interface_get_mode(priv->interface);
@@ -199,9 +197,7 @@ int cvm_oct_sgmii_stop(struct net_device *dev)
 		priv->hw_status_notifier.notifier_call = NULL;
 	}
 
-	spin_lock(&priv->poll_lock);
 	priv->poll = NULL;
-	spin_unlock(&priv->poll_lock);
 
 	if (priv->phydev)
 		phy_disconnect(priv->phydev);
diff --git a/drivers/net/ethernet/octeon/ethernet.c b/drivers/net/ethernet/octeon/ethernet.c
index ab0e5f0..bb3296d 100644
--- a/drivers/net/ethernet/octeon/ethernet.c
+++ b/drivers/net/ethernet/octeon/ethernet.c
@@ -162,9 +162,7 @@ static void cvm_oct_periodic_worker(struct work_struct *work)
 						    port_periodic_work.work);
 	void (*poll_fn) (struct net_device *);
 
-	spin_lock(&priv->poll_lock);
-	poll_fn = priv->poll;
-	spin_unlock(&priv->poll_lock);
+	poll_fn = ACCESS_ONCE(priv->poll);
 
 	if (poll_fn)
 		poll_fn(priv->netdev);
-- 
1.7.0.4

