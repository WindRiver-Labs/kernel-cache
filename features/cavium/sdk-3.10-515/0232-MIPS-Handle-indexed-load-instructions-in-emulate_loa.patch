From b4906e99a76c784206357124ac64cbdb4ff4d0b6 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Fri, 9 Aug 2013 14:16:14 -0700
Subject: [PATCH 232/382] MIPS: Handle indexed load instructions in emulate_load_store_insn().

Based on SDK octeon3_3.10.

Doing this produces the proper signals to userspace when things go
wrong.  We will get SIGBUS instead if SIGILL for the indexed load
operations.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/kernel/unaligned.c |   68 ++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 68 insertions(+), 0 deletions(-)

diff --git a/arch/mips/kernel/unaligned.c b/arch/mips/kernel/unaligned.c
index 9b7a901..235cdf3 100644
--- a/arch/mips/kernel/unaligned.c
+++ b/arch/mips/kernel/unaligned.c
@@ -471,6 +471,74 @@ static void emulate_load_store_insn(struct pt_regs *regs,
 	case sb_op:
 		goto sigbus;
 
+	case spec3_op:
+		if (insn.r_format.func != lx_op)
+			goto sigill;
+		switch (insn.r_format.re) {
+		case lwx_op:
+			if (!access_ok(VERIFY_READ, addr, 4))
+				goto sigbus;
+
+			LoadW(addr, value, res);
+			if (res)
+				goto fault;
+			compute_return_epc(regs);
+			regs->regs[insn.r_format.rd] = value;
+			break;
+
+		case lhx_op:
+			if (!access_ok(VERIFY_READ, addr, 2))
+				goto sigbus;
+
+			LoadHW(addr, value, res);
+			if (res)
+				goto fault;
+			compute_return_epc(regs);
+			regs->regs[insn.r_format.rd] = value;
+			break;
+
+#ifdef CONFIG_64BIT
+		case ldx_op:
+			if (!access_ok(VERIFY_READ, addr, 8))
+				goto sigbus;
+
+			LoadDW(addr, value, res);
+			if (res)
+				goto fault;
+			compute_return_epc(regs);
+			regs->regs[insn.r_format.rd] = value;
+			break;
+
+		case lwux_op:
+			if (!access_ok(VERIFY_READ, addr, 4))
+				goto sigbus;
+
+			LoadWU(addr, value, res);
+			if (res)
+				goto fault;
+			compute_return_epc(regs);
+			regs->regs[insn.r_format.rd] = value;
+			break;
+#endif /* CONFIG_64BIT */
+
+		case lhux_op:
+			if (!access_ok(VERIFY_READ, addr, 2))
+				goto sigbus;
+
+			LoadHWU(addr, value, res);
+			if (res)
+				goto fault;
+			compute_return_epc(regs);
+			regs->regs[insn.r_format.rd] = value;
+			break;
+
+		case lbux_op:
+		case lbx_op:
+			goto sigbus;
+		default:
+			goto sigill;
+		}
+		break;
 		/*
 		 * The remaining opcodes are the ones that are really of
 		 * interest.
-- 
1.7.0.4

