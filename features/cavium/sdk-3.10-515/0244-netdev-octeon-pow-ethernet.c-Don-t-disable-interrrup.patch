From ee5b49e44424982905067743b8d56a3b94668ab7 Mon Sep 17 00:00:00 2001
From: Carlos Munoz <carlos.munoz@caviumnetworks.com>
Date: Wed, 21 Aug 2013 10:08:09 -0700
Subject: [PATCH 244/382] netdev: octeon-pow-ethernet.c: Don't disable interrrupt in interrupt handler.

Based on SDK octeon3_3.10.

Signed-off-by: Carlos Munoz <carlos.munoz@caviumnetworks.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/octeon/octeon-pow-ethernet.c |   16 +++++++++-------
 1 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/octeon/octeon-pow-ethernet.c b/drivers/net/ethernet/octeon/octeon-pow-ethernet.c
index a80a7c9..4aec9d0 100644
--- a/drivers/net/ethernet/octeon/octeon-pow-ethernet.c
+++ b/drivers/net/ethernet/octeon/octeon-pow-ethernet.c
@@ -319,18 +319,13 @@ static irqreturn_t octeon_pow_interrupt(int cpl, void *dev_id)
 	asm volatile ("synciobdma" : : : "memory");
 
 	if (OCTEON_IS_MODEL(OCTEON_CN68XX)) {
-		cvmx_write_csr(CVMX_SSO_WQ_INT, 1ull << priv->rx_group);
-		cvmx_write_csr(CVMX_SSO_WQ_IQ_DIS, 1ull << priv->rx_group);
-
+		/* Only allow work for our group */
 		old_group_mask = cvmx_read_csr(CVMX_SSO_PPX_GRP_MSK(coreid));
 		cvmx_write_csr(CVMX_SSO_PPX_GRP_MSK(coreid),
 			       1ull << priv->rx_group);
 		/* Read it back so it takes effect before we request work */
 		cvmx_read_csr(CVMX_SSO_PPX_GRP_MSK(coreid));
 	} else {
-		/* Acknowledge the interrupt */
-		cvmx_write_csr(CVMX_POW_WQ_INT, 0x10001 << priv->rx_group);
-
 		/* Only allow work for our group */
 		old_group_mask = cvmx_read_csr(CVMX_POW_PP_GRP_MSKX(coreid));
 		cvmx_write_csr(CVMX_POW_PP_GRP_MSKX(coreid), 1 << priv->rx_group);
@@ -413,13 +408,20 @@ static irqreturn_t octeon_pow_interrupt(int cpl, void *dev_id)
 		netif_rx(skb);
 	}
 
-	/* Restore the original POW group mask */
 	if (OCTEON_IS_MODEL(OCTEON_CN68XX)) {
+		/* Restore the original POW group mask */
 		cvmx_write_csr(CVMX_SSO_PPX_GRP_MSK(coreid), old_group_mask);
 		/* Read it back so it takes effect before ?? */
 		cvmx_read_csr(CVMX_SSO_PPX_GRP_MSK(coreid));
+
+		/* Acknowledge the interrupt */
+		cvmx_write_csr(CVMX_SSO_WQ_INT, 1ull << priv->rx_group);
 	} else {
+		/* Restore the original POW group mask */
 		cvmx_write_csr(CVMX_POW_PP_GRP_MSKX(coreid), old_group_mask);
+
+		/* Acknowledge the interrupt */
+		cvmx_write_csr(CVMX_POW_WQ_INT, 1ull << priv->rx_group);
 	}
 	return IRQ_HANDLED;
 }
-- 
1.7.0.4

