From bff765ef25a5f4036061cddf7fb7afe88a2c7b48 Mon Sep 17 00:00:00 2001
From: Peter Swain <peter.swain@cavium.com>
Date: Thu, 14 Nov 2013 18:00:07 -0800
Subject: [PATCH 364/382] MIPS: octeon-hw-status only free IRQs we own!

Based on SDK octeon3_3.10.

Because the labelling of error-tree on cn7xxx is still broken,
hw-status can try to take interrupts already owned by CIB.
In that case, we must not free_irq anything we did not set up.

Add an own_irq property to hw-status nodes.

Tested by:
  modprobe octeon-ethernet && udhcpc eth0 && rmmod octeon-ethernet
which no longer crashes freeing someone else's irq.

Signed-off-by: Peter Swain <peter.swain@cavium.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/mips/cavium-octeon/octeon-hw-status.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-hw-status.c b/arch/mips/cavium-octeon/octeon-hw-status.c
index de06f09..330c7e2 100644
--- a/arch/mips/cavium-octeon/octeon-hw-status.c
+++ b/arch/mips/cavium-octeon/octeon-hw-status.c
@@ -55,6 +55,7 @@ struct octeon_hw_status_node {
 	u8 users;  /* Reference count. */
 	u8 is_hwint:1;
 	u8 ack_w1c:1;
+	u8 own_irq:1;
 };
 
 /* Protects octeon_hw_status_roots & their trees */
@@ -447,6 +448,8 @@ int octeon_hw_status_add_source(struct octeon_hw_status_reg *chain0)
 			WARN(rv, pr_fmt("request_threaded_irq failed:"
 				" irq %d, err %d\n"),
 				root->irq, rv);
+			if (!rv)
+				root->own_irq = 1;
 		}
 
 		if (count_debug)
@@ -520,7 +523,7 @@ static bool dispose_of_node(struct octeon_hw_status_node *n)
 				}
 
 				*pw = n->next;
-				if (n->is_hwint) {
+				if (n->is_hwint && n->own_irq) {
 					rv = true;
 					write_unlock(&octeon_hw_status_lock);
 					free_irq(n->irq, n);
-- 
1.7.0.4

