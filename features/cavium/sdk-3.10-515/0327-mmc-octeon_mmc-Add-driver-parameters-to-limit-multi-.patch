From 05470a604686b27d4000f62be3bc5a360a176d0d Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Thu, 31 Oct 2013 14:26:38 -0700
Subject: [PATCH 327/382] mmc: octeon_mmc: Add driver parameters to limit multi-block transfers.

Based on SDK octeon3_3.10.

These are to aid is reducing bus contention issues.

Signed-off-by: David Daney <david.daney@cavium.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/mmc/host/octeon_mmc.c |   18 +++++++++++++++---
 1 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/mmc/host/octeon_mmc.c b/drivers/mmc/host/octeon_mmc.c
index 1ed27ca..ad603a2 100644
--- a/drivers/mmc/host/octeon_mmc.c
+++ b/drivers/mmc/host/octeon_mmc.c
@@ -95,6 +95,16 @@ struct octeon_mmc_slot {
 	bool			pwr_gpio_low;
 };
 
+static int limit_max_blk = -1;
+module_param(limit_max_blk, int, S_IRUGO);
+MODULE_PARM_DESC(limit_max_blk,
+		 "Set an upper limit on the number of blocks in a single transfer.");
+
+static int force_no_multi;
+module_param(force_no_multi, int, S_IRUGO);
+MODULE_PARM_DESC(force_no_multi,
+		 "Force the interface to emulate multi-block transfers as a series of single block transfres.");
+
 struct octeon_mmc_cr_type {
 	u8 ctype;
 	u8 rtype;
@@ -495,9 +505,9 @@ static void octeon_mmc_dma_request(struct mmc_host *mmc,
 	emm_dma.s.dma_val = 1;
 	emm_dma.s.sector = mmc_card_blockaddr(mmc->card) ? 1 : 0;
 	emm_dma.s.rw = (data->flags & MMC_DATA_WRITE) ? 1 : 0;
-	if (mmc_card_mmc(mmc->card) ||
-	    (mmc_card_sd(mmc->card) &&
-	     (mmc->card->scr.cmds & SD_SCR_CMD23_SUPPORT)))
+	if (!force_no_multi &&
+	    (mmc_card_mmc(mmc->card) ||	(mmc_card_sd(mmc->card) &&
+					 (mmc->card->scr.cmds & SD_SCR_CMD23_SUPPORT))))
 		emm_dma.s.multi = 1;
 	emm_dma.s.block_cnt = data->blocks;
 	emm_dma.s.card_addr = cmd->arg;
@@ -940,6 +950,8 @@ static int __init octeon_init_slot(struct octeon_mmc_host *host, int id,
 	mmc->max_req_size = mmc->max_seg_size;
 	mmc->max_blk_size = 512;
 	mmc->max_blk_count = mmc->max_req_size / 512;
+	if (limit_max_blk >= 1)
+		mmc->max_blk_count = min(limit_max_blk, mmc->max_blk_count);
 
 
 	slot->clock = mmc->f_min;
-- 
1.7.0.4

