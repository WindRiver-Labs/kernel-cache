From e947392574cee439ba383166b6db73b5dbf941de Mon Sep 17 00:00:00 2001
From: Bin Jiang <bin.jiang@windriver.com>
Date: Fri, 3 May 2013 19:04:31 +0800
Subject: [PATCH 6/7] MIPS: OCTEON: Disable THREAD IRQ of MSI

Cascade MSI can't support THREAD IRQ and have following call trace:
WARNING: at kernel/irq/handle.c:152 handle_irq_event_percpu+0x210/0x458()
irq 256 handler irq_default_primary_handler+0x0/0x30 enabled interrupts
Modules linked in:
Call Trace:
[<ffffffff818adf6c>] dump_stack+0x1c/0x50
[<ffffffff81172a64>] warn_slowpath_common+0x8c/0xc0
[<ffffffff81172b84>] warn_slowpath_fmt+0x4c/0x60
[<ffffffff812012c8>] handle_irq_event_percpu+0x210/0x458
[<ffffffff81201578>] handle_irq_event+0x68/0xb0
[<ffffffff812047e4>] handle_simple_irq+0xbc/0xf8
[<ffffffff81200644>] generic_handle_irq+0x4c/0x68
[<ffffffff818c1b2c>] do_IRQ+0x2c/0x48
[<ffffffff81750280>] __octeon_msi_do_interrupt+0x80/0xb0
[<ffffffff817503d4>] octeon_msi_interrupt0+0x34/0x50
[<ffffffff81202610>] irq_forced_thread_fn+0x40/0x88
[<ffffffff812022e8>] irq_thread+0x1e0/0x220
[<ffffffff8119d7fc>] kthread+0xa4/0xb0
[<ffffffff811489ec>] kernel_thread_helper+0x24/0x30

Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/mips/pci/msi-octeon.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/mips/pci/msi-octeon.c b/arch/mips/pci/msi-octeon.c
index 6a28433..4ed97cb 100644
--- a/arch/mips/pci/msi-octeon.c
+++ b/arch/mips/pci/msi-octeon.c
@@ -690,37 +690,37 @@ int __init octeon_msi_initialize(void)
 
 	if (octeon_has_feature(OCTEON_FEATURE_PCIE)) {
 		if (request_irq(OCTEON_IRQ_PCI_MSI0, octeon_msi_interrupt0,
-				0, "MSI[0:63]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[0:63]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI0) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI1, octeon_msi_interrupt1,
-				0, "MSI[64:127]", octeon_msi_interrupt1))
+				IRQF_NO_THREAD, "MSI[64:127]", octeon_msi_interrupt1))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI1) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI2, octeon_msi_interrupt2,
-				0, "MSI[127:191]", octeon_msi_interrupt2))
+				IRQF_NO_THREAD, "MSI[127:191]", octeon_msi_interrupt2))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI2) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI3, octeon_msi_interrupt3,
-				0, "MSI[192:255]", octeon_msi_interrupt3))
+				IRQF_NO_THREAD, "MSI[192:255]", octeon_msi_interrupt3))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI3) failed");
 
 		msi_irq_size = 256;
 	} else if (octeon_is_pci_host()) {
 		if (request_irq(OCTEON_IRQ_PCI_MSI0, octeon_msi_interrupt0,
-				0, "MSI[0:15]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[0:15]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI0) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI1, octeon_msi_interrupt0,
-				0, "MSI[16:31]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[16:31]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI1) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI2, octeon_msi_interrupt0,
-				0, "MSI[32:47]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[32:47]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI2) failed");
 
 		if (request_irq(OCTEON_IRQ_PCI_MSI3, octeon_msi_interrupt0,
-				0, "MSI[48:63]", octeon_msi_interrupt0))
+				IRQF_NO_THREAD, "MSI[48:63]", octeon_msi_interrupt0))
 			panic("request_irq(OCTEON_IRQ_PCI_MSI3) failed");
 		msi_irq_size = 64;
 	}
-- 
1.7.0.4

