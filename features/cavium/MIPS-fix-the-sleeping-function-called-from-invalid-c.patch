From ad0300c8923ca973abb7dda3e8ea4e536fdf2a69 Mon Sep 17 00:00:00 2001
From: Zhixiong Chi <zhixiong.chi@windriver.com>
Date: Wed, 8 May 2019 13:21:53 +0800
Subject: [PATCH] MIPS: fix the sleeping function called from invalid context

Use raw_spin_lock replace spin_lock for rt-kernel to avoid the BUG
"the sleeping function called from invalid context" while we insmod
the modules to trigger the search of data exception table.
The BUG output as follows:
>BUG: sleeping function called from invalid context at ...
>in_atomic(): 0, irqs_disabled(): 1, pid: 587, name: insmod
>[  129.386882] CPU: 13 PID: 587 Comm: insmod Tainted: G         C      4.1.21-rt13
>[  129.386941] Stack : 0000000000000006 0000000000000000 ffffffff814e5ba0 80000000eff07948
>               	  ffffffff81500000 0000000000000004 ffffffff812c0000 0000000000000000
>               	  0000000000000000 ffffffff814fec00 000000000000000d 0000000000000004
>               	  ffffffff812c0000 ffffffff808eaba8 0000000000000000 ffffffff814e0000
>               	  0000000000000000 0000000900000000 ffffffff812c0000 ffffffff8115cd30
>               	  ffffffff808eaff8 ffffffff813f58e8 ffffffff81163338 000000000000000d
>              		  000000000000024b ffffffff814d9c68 80000003faf8fba0 ffffffff8091b7a0
>               	  0000000000000124 80000000eff077e0 80000000eff07908 ffffffff81018068
>               	  ffffffff8124a607 ffffffff8115a1b0 80000003f912ad00 ffffffff808ebcf4
>               	  1e200f08d2c1ff28 ffffffff80872868 000000000000000d 000000000000024b
>               	  ...
>[  129.386942] Call Trace:
>[  129.386952] [<ffffffff80872868>] show_stack+0xe8/0x108
>[  129.386959] [<ffffffff81018068>] dump_stack+0xa8/0xe8
>[  129.386965] [<ffffffff8101d9b8>] rt_spin_lock+0x30/0x80
>[  129.386970] [<ffffffff80876cd4>] search_module_dbetables+0x3c/0xe0
>[  129.386974] [<ffffffff80872c50>] do_be+0x160/0x1e0
>[  129.386979] [<ffffffff8086bd84>] resume_userspace_check+0x0/0x10
>[  129.386986] [<ffffffffc0008724>] octeon_error_injector_init+0x724/0x858 [octeon_error_injector]
>[  129.386992] [<ffffffff80800550>] do_one_initcall+0xa0/0x1c0
>[  129.386997] [<ffffffff81016284>] do_init_module+0x80/0x1d8
>[  129.387003] [<ffffffff8091ef14>] load_module+0x1b1c/0x2268
>[  129.387008] [<ffffffff8091f964>] SyS_finit_module+0xcc/0xf0
>[  129.387012] [<ffffffff80879c44>] handle_sys64+0x44/0x68

The module octeon_error_injector is from Cavium Oecton III SDK package.

Signed-off-by: Zhixiong Chi <zhixiong.chi@windriver.com>
---
 arch/mips/kernel/module.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/arch/mips/kernel/module.c b/arch/mips/kernel/module.c
index 1833f5171ccd..1b325344c6a6 100644
--- a/arch/mips/kernel/module.c
+++ b/arch/mips/kernel/module.c
@@ -41,7 +41,7 @@ struct mips_hi16 {
 };
 
 static LIST_HEAD(dbe_list);
-static DEFINE_SPINLOCK(dbe_lock);
+static DEFINE_RAW_SPINLOCK(dbe_lock);
 
 #ifdef MODULE_START
 void *module_alloc(unsigned long size)
@@ -253,13 +253,13 @@ const struct exception_table_entry *search_module_dbetables(unsigned long addr)
 	const struct exception_table_entry *e = NULL;
 	struct mod_arch_specific *dbe;
 
-	spin_lock_irqsave(&dbe_lock, flags);
+	raw_spin_lock_irqsave(&dbe_lock, flags);
 	list_for_each_entry(dbe, &dbe_list, dbe_list) {
 		e = search_extable(dbe->dbe_start, dbe->dbe_end - 1, addr);
 		if (e)
 			break;
 	}
-	spin_unlock_irqrestore(&dbe_lock, flags);
+	raw_spin_unlock_irqrestore(&dbe_lock, flags);
 
 	/* Now, if we found one, we are running inside it now, hence
 	   we cannot unload the module, hence no refcnt needed. */
@@ -283,16 +283,16 @@ int module_finalize(const Elf_Ehdr *hdr,
 			continue;
 		me->arch.dbe_start = (void *)s->sh_addr;
 		me->arch.dbe_end = (void *)s->sh_addr + s->sh_size;
-		spin_lock_irq(&dbe_lock);
+		raw_spin_lock_irq(&dbe_lock);
 		list_add(&me->arch.dbe_list, &dbe_list);
-		spin_unlock_irq(&dbe_lock);
+		raw_spin_unlock_irq(&dbe_lock);
 	}
 	return 0;
 }
 
 void module_arch_cleanup(struct module *mod)
 {
-	spin_lock_irq(&dbe_lock);
+	raw_spin_lock_irq(&dbe_lock);
 	list_del(&mod->arch.dbe_list);
-	spin_unlock_irq(&dbe_lock);
+	raw_spin_unlock_irq(&dbe_lock);
 }
-- 
2.17.1

