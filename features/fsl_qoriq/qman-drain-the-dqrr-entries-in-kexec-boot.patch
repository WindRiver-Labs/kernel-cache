From 85a3b31993cfcff703bef122f8a48339a9add990 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 6 Mar 2013 13:25:00 +0800
Subject: [PATCH 06/12] qman: drain the dqrr entries in kexec boot

There may be some unprocessed dqrr entries in the qman portal when
kexec boot. So just drain them before continuing.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c |   28 ++++++++++++++++++++++++----
 1 files changed, 24 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 862bbf4..419042d 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -342,6 +342,26 @@ loop:
 	goto loop;
 }
 
+#if defined(CONFIG_KEXEC) || defined(CONFIG_CRASH_DUMP)
+static int qm_drain_dqrr(struct qm_portal *p)
+{
+	const struct qm_dqrr_entry *dq;
+
+	while (1) {
+		qm_dqrr_pvb_update(p);
+		dq = qm_dqrr_current(p);
+		if (!dq)
+			break;
+		qm_dqrr_cdc_consume_1ptr(p, dq, 0);
+		qm_dqrr_next(p);
+	}
+	qm_isr_status_clear(p, 0xffffffff);
+	return 0;
+}
+#else
+static inline int qm_drain_dqrr(struct qm_portal *p) { return 1; }
+#endif
+
 struct qman_portal *qman_create_affine_portal(
 			const struct qm_portal_config *config,
 			const struct qman_cgrs *cgrs)
@@ -453,12 +473,12 @@ struct qman_portal *qman_create_affine_portal(
 	}
 	isdr ^= (QM_PIRQ_DQRI | QM_PIRQ_MRI);
 	qm_isr_disable_write(__p, isdr);
-#ifndef CONFIG_CRASH_DUMP
 	if (qm_dqrr_current(__p) != NULL) {
-		pr_err("Qman DQRR unclean\n");
-		goto fail_dqrr_mr_empty;
+		if (qm_drain_dqrr(__p)) {
+			pr_err("Qman DQRR unclean\n");
+			goto fail_dqrr_mr_empty;
+		}
 	}
-#endif
 	if (qm_mr_current(__p) != NULL) {
 		/* special handling, drain just in case it's a few FQRNIs */
 		if (drain_mr_fqrni(__p)) {
-- 
1.7.0

