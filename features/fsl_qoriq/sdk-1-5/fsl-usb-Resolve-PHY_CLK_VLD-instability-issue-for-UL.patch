From 9669d46b95d708c1de4e3e88151ca5ee466f91df Mon Sep 17 00:00:00 2001
From: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Date: Mon, 16 Sep 2013 15:11:33 +0530
Subject: [PATCH 382/429] fsl/usb: Resolve PHY_CLK_VLD instability issue for
 ULPI phy

commit ad1260e9fbf768d6bed227d9604ebee76a84aae3 upstream

For controller versions greater than 1.6, setting ULPI_PHY_CLK_SEL
bit when USB_EN bit is already set causes instability issues with
PHY_CLK_VLD bit. So USB_EN is set only for IP controller version
below 1.6 before setting ULPI_PHY_CLK_SEL bit

Signed-off-by: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Cc: stable <stable@vger.kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
[
Tiejun once added a fix(a02fa942781) to fix a USB issue.
USB/EHCI: work for different PHY_CLK_VALID detecting order

but now this upstream patch also fix this issue, so we backport
the upstream patch. and remove the previous fix.
]

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/usb/host/ehci-fsl.c |   21 +++------------------
 1 files changed, 3 insertions(+), 18 deletions(-)

diff --git a/drivers/usb/host/ehci-fsl.c b/drivers/usb/host/ehci-fsl.c
index 3af1a45..384c6e7 100644
--- a/drivers/usb/host/ehci-fsl.c
+++ b/drivers/usb/host/ehci-fsl.c
@@ -177,7 +177,7 @@ static int usb_hcd_fsl_probe(const struct hc_driver *driver,
 	}
 
 	/* Enable USB controller, 83xx or 8536 */
-	if (pdata->have_sysif_regs)
+	if (pdata->have_sysif_regs && pdata->controller_ver < FSL_USB_VER_1_6)
 		setbits32(hcd->regs + FSL_SOC_USB_CTRL, 0x4);
 
 	/* Don't need to set host mode here. It will be done by tdi_reset() */
@@ -289,24 +289,9 @@ static int ehci_fsl_setup_phy(struct usb_hcd *hcd,
 	case FSL_USB2_PHY_ULPI:
 		if (pdata->have_sysif_regs && pdata->controller_ver) {
 			/* controller version 1.6 or above */
+			clrbits32(non_ehci + FSL_SOC_USB_CTRL, UTMI_PHY_EN);
 			setbits32(non_ehci + FSL_SOC_USB_CTRL,
-					ULPI_PHY_CLK_SEL);
-
-			/*
-			 * Due to different controller issue of PHY_CLK_VALID
-			 * in ULPI mode, in some cases we should set
-			 * USB_CTRL_USB_EN before checking PHY_CLK_VALID,
-			 * otherwise PHY_CLK_VALID doesn't work.
-			 *
-			 * But in other cases USB_CTRL_USB_EN is already set
-			 * and PHY_CLK_VALID is not valid once USB_CTRL_USB_EN
-			 * is set. But since PHY_CLK_VALID is w1c, we can force
-			 * clear USB_CTRL_USB_EN firstly then PHY_CLK_VALID
-			 * status can be kept even we re-set USB_CTRL_USB_EN.
-			 */
-			clrbits32(non_ehci + FSL_SOC_USB_CTRL, USB_CTRL_USB_EN);
-			clrsetbits_be32(non_ehci + FSL_SOC_USB_CTRL,
-					UTMI_PHY_EN, USB_CTRL_USB_EN);
+					ULPI_PHY_CLK_SEL | USB_CTRL_USB_EN);
 		}
 		portsc |= PORT_PTS_ULPI;
 		break;
-- 
1.7.5.4

