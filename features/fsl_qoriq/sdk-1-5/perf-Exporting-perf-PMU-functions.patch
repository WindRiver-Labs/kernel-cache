From 22c2c4f18162ab42c0f6933b10e0d5bd22b1b8c0 Mon Sep 17 00:00:00 2001
From: Stephen George <stephen.george@freescale.com>
Date: Thu, 1 Sep 2011 12:12:30 -0500
Subject: [PATCH 142/383] perf: Exporting perf PMU functions

These exports allow a perf PMU to be implemented as a module
instead of being restricted to being a built-in.

Signed-off-by: Stephen George <stephen.george@freescale.com>
[Original patch taken from QorIQ-SDK-V1.5-SOURCE-20131219-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 kernel/events/core.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/kernel/events/core.c b/kernel/events/core.c
index e76e495..87361d8 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -661,6 +661,7 @@ void perf_pmu_disable(struct pmu *pmu)
 	if (!(*count)++)
 		pmu->pmu_disable(pmu);
 }
+EXPORT_SYMBOL_GPL(perf_pmu_disable);
 
 void perf_pmu_enable(struct pmu *pmu)
 {
@@ -668,6 +669,7 @@ void perf_pmu_enable(struct pmu *pmu)
 	if (!--(*count))
 		pmu->pmu_enable(pmu);
 }
+EXPORT_SYMBOL_GPL(perf_pmu_enable);
 
 static DEFINE_PER_CPU(struct list_head, rotation_list);
 
@@ -6148,6 +6150,7 @@ free_pdc:
 	free_percpu(pmu->pmu_disable_count);
 	goto unlock;
 }
+EXPORT_SYMBOL_GPL(perf_pmu_register);
 
 void perf_pmu_unregister(struct pmu *pmu)
 {
@@ -6169,6 +6172,7 @@ void perf_pmu_unregister(struct pmu *pmu)
 	put_device(pmu->dev);
 	free_pmu_context(pmu);
 }
+EXPORT_SYMBOL_GPL(perf_pmu_unregister);
 
 struct pmu *perf_init_event(struct perf_event *event)
 {
-- 
1.7.5.4

