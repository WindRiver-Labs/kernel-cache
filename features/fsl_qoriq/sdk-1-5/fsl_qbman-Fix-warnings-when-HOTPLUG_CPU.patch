From e15478eae328f63d0484322851492419ed9f23df Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Fri, 18 Oct 2013 16:11:19 -0500
Subject: [PATCH 249/383] fsl_qbman: Fix warnings when !HOTPLUG_CPU
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

drivers/staging/fsl_qbman/bman_driver.c:304:13: warning: ‘bman_online_cpu’ defined but not used [-Wunused-function]
 static void bman_online_cpu(unsigned int cpu)
             ^
drivers/staging/fsl_qbman/qman_driver.c:645:13: warning: ‘qman_online_cpu’ defined but not used [-Wunused-function]
 static void qman_online_cpu(unsigned int cpu)
             ^

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: I8b9bb2cc21d46b38d605470e091ddf55ca86c534
Reviewed-on: http://git.am.freescale.net:8181/5908
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Rivera Jose-B46482 <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.5-SOURCE-20131219-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_qbman/bman_driver.c  |    2 +-
 drivers/staging/fsl_qbman/bman_high.c    |    2 ++
 drivers/staging/fsl_qbman/bman_private.h |    2 ++
 drivers/staging/fsl_qbman/qman_driver.c  |    2 +-
 drivers/staging/fsl_qbman/qman_high.c    |    2 ++
 drivers/staging/fsl_qbman/qman_private.h |    2 ++
 6 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_driver.c b/drivers/staging/fsl_qbman/bman_driver.c
index 3bd5160..513c7f1 100644
--- a/drivers/staging/fsl_qbman/bman_driver.c
+++ b/drivers/staging/fsl_qbman/bman_driver.c
@@ -301,6 +301,7 @@ static void bman_offline_cpu(unsigned int cpu)
 		bman_migrate_portal(p);
 }
 
+#ifdef CONFIG_HOTPLUG_CPU
 static void bman_online_cpu(unsigned int cpu)
 {
 	struct bman_portal *p;
@@ -309,7 +310,6 @@ static void bman_online_cpu(unsigned int cpu)
 		bman_migrate_portal_back(p, cpu);
 }
 
-#ifdef CONFIG_HOTPLUG_CPU
 static int __cpuinit bman_hotplug_cpu_callback(struct notifier_block *nfb,
 					unsigned long action, void *hcpu)
 {
diff --git a/drivers/staging/fsl_qbman/bman_high.c b/drivers/staging/fsl_qbman/bman_high.c
index 7e6597f..2f818f0 100644
--- a/drivers/staging/fsl_qbman/bman_high.c
+++ b/drivers/staging/fsl_qbman/bman_high.c
@@ -1062,6 +1062,7 @@ void bman_migrate_portal(struct bman_portal *portal)
 	PORTAL_IRQ_UNLOCK(portal, irqflags);
 }
 
+#ifdef CONFIG_HOTPLUG_CPU
 /* Migrate the portal back to the affined cpu once that cpu reappears.*/
 void bman_migrate_portal_back(struct bman_portal *portal, unsigned int cpu)
 {
@@ -1070,3 +1071,4 @@ void bman_migrate_portal_back(struct bman_portal *portal, unsigned int cpu)
 	irq_set_affinity(portal->config->public_cfg.irq, cpumask_of(cpu));
 	PORTAL_IRQ_UNLOCK(portal, irqflags);
 }
+#endif /* CONFIG_HOTPLUG_CPU */
diff --git a/drivers/staging/fsl_qbman/bman_private.h b/drivers/staging/fsl_qbman/bman_private.h
index cdd8c00..22e4a8c 100644
--- a/drivers/staging/fsl_qbman/bman_private.h
+++ b/drivers/staging/fsl_qbman/bman_private.h
@@ -159,5 +159,7 @@ __init int bman_resource_init(void);
 /* Portal migration */
 int bman_portal_is_sharing_redirect(struct bman_portal *portal);
 void bman_migrate_portal(struct bman_portal *portal);
+#ifdef CONFIG_HOTPLUG_CPU
 void bman_migrate_portal_back(struct bman_portal *portal, unsigned int cpu);
+#endif /* CONFIG_HOTPLUG_CPU */
 #endif /* CONFIG_FSL_BMAN_CONFIG */
diff --git a/drivers/staging/fsl_qbman/qman_driver.c b/drivers/staging/fsl_qbman/qman_driver.c
index 1276904..e59518d 100644
--- a/drivers/staging/fsl_qbman/qman_driver.c
+++ b/drivers/staging/fsl_qbman/qman_driver.c
@@ -649,6 +649,7 @@ static void qman_offline_cpu(unsigned int cpu)
 		qman_migrate_portal(p);
 }
 
+#ifdef CONFIG_HOTPLUG_CPU
 static void qman_online_cpu(unsigned int cpu)
 {
 	struct qman_portal *p;
@@ -657,7 +658,6 @@ static void qman_online_cpu(unsigned int cpu)
 		qman_migrate_portal_back(p, cpu);
 }
 
-#ifdef CONFIG_HOTPLUG_CPU
 static int __cpuinit qman_hotplug_cpu_callback(struct notifier_block *nfb,
 				unsigned long action, void *hcpu)
 {
diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index ca9fc3d..6fc35ae 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -4975,6 +4975,7 @@ void qman_migrate_portal(struct qman_portal *portal)
 	PORTAL_IRQ_UNLOCK(portal, irqflags);
 }
 
+#ifdef CONFIG_HOTPLUG_CPU
 /* Migrate the portal back to the affined cpu once that cpu appears.*/
 void qman_migrate_portal_back(struct qman_portal *portal, unsigned int cpu)
 {
@@ -4984,3 +4985,4 @@ void qman_migrate_portal_back(struct qman_portal *portal, unsigned int cpu)
 	irq_set_affinity(portal->config->public_cfg.irq, cpumask_of(cpu));
 	PORTAL_IRQ_UNLOCK(portal, irqflags);
 }
+#endif /* CONFIG_HOTPLUG_CPU */
diff --git a/drivers/staging/fsl_qbman/qman_private.h b/drivers/staging/fsl_qbman/qman_private.h
index a2229d5..e7c77b6 100644
--- a/drivers/staging/fsl_qbman/qman_private.h
+++ b/drivers/staging/fsl_qbman/qman_private.h
@@ -394,4 +394,6 @@ int qman_ceetm_get_xsfdr(enum qm_dc_portal portal, unsigned int *num);
 extern void *affine_portals[NR_CPUS];
 int qman_portal_is_sharing_redirect(struct qman_portal *portal);
 void qman_migrate_portal(struct qman_portal *portal);
+#ifdef CONFIG_HOTPLUG_CPU
 void qman_migrate_portal_back(struct qman_portal *portal, unsigned int cpu);
+#endif /* CONFIG_HOTPLUG_CPU */
-- 
1.7.5.4

