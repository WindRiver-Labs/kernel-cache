From 437f2e488ad8d775aba03bc5d376f1f0f6d7291a Mon Sep 17 00:00:00 2001
From: Andrei Varvara <andrei.varvara@freescale.com>
Date: Thu, 3 Oct 2013 17:10:14 +0300
Subject: [PATCH 260/383] dpa_offload: Bug fix - inbound rekeying fails in
 case of manual old SA removing

The old inbound SA failed to be removed by dpa_ipsec_remove_sa in case
of rekeying with dpa_ipsec_sa_rekeying when the user selected manual SA remove
("auto_rmv_old_sa = FALSE" ).

Signed-off-by: Andrei Varvara <andrei.varvara@freescale.com>
Change-Id: Ic669de7b6f35fd67fdab089e3e36ebb911d31366
Reviewed-on: http://git.am.freescale.net:8181/6035
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Marian-Cornel Chereji <marian.chereji@freescale.com>
Reviewed-by: Thomas Trefny <Tom.Trefny@freescale.com>
[Original patch taken from QorIQ-SDK-V1.5-SOURCE-20131219-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c |   23 +++++++++--------------
 1 files changed, 9 insertions(+), 14 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 1198904..3927e59 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -3580,7 +3580,9 @@ static int remove_inbound_sa(struct dpa_ipsec_sa *sa)
 		sa->child_sa = NULL;
 
 		/* Remove the child SA from rekeying list */
-		list_del(&child_sa->sa_rekeying_node);
+		if (child_sa->sa_rekeying_node.next != LIST_POISON1 &&
+		    child_sa->sa_rekeying_node.prev != LIST_POISON2)
+			list_del(&child_sa->sa_rekeying_node);
 
 		/* Invalidate the FROM SEC FQ of parent SA */
 		memset(sa->from_sec_fq, 0, sizeof(struct qman_fq));
@@ -4101,19 +4103,12 @@ int dpa_ipsec_sa_rekeying(int sa_id,
 	new_sa->ipsec_hmd = old_sa->ipsec_hmd;
 	new_sa->valid_flowid_entry = false;
 	new_sa->rekey_event_cb = rekey_event_cb;
-	if (auto_rmv_old_sa) {
-		new_sa->parent_sa = old_sa;
-		new_sa->child_sa  = NULL;
-			new_sa->sa_rekeying_node.next = LIST_POISON1;
-			new_sa->sa_rekeying_node.prev = LIST_POISON2;
-		old_sa->child_sa = new_sa;
-			old_sa->parent_sa = NULL;
-	} else {
-		new_sa->parent_sa = NULL;
-		new_sa->child_sa  = NULL;
-		old_sa->child_sa  = NULL;
-		old_sa->parent_sa = NULL;
-	}
+	new_sa->parent_sa = old_sa;
+	new_sa->child_sa  = NULL;
+	new_sa->sa_rekeying_node.next = LIST_POISON1;
+	new_sa->sa_rekeying_node.prev = LIST_POISON2;
+	old_sa->child_sa = new_sa;
+	old_sa->parent_sa = NULL;
 
 	/* Copy SA params into the internal SA structure */
 	if (sa_is_outbound(old_sa))
-- 
1.7.5.4

