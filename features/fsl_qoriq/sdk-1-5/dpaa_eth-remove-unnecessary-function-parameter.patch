From 98f3c568e18570c70609a2bab0a3ea938d8503de Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Mon, 17 Jun 2013 15:21:34 +0300
Subject: [PATCH 053/429] dpaa_eth: remove unnecessary function parameter

Remove unnecessary parameter dpa_bp to dpa_release_sgt().

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: Icc489e62d294588b22b381e6f76d17307843b5a6
Reviewed-on: http://git.am.freescale.net:8181/3089
Reviewed-by: Sovaiala Cristian-Constantin-B39531 <Cristian.Sovaiala@freescale.com>
Reviewed-by: Radulescu Ruxandra Ioana-B05472 <ruxandra.radulescu@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[origin patch is from QorIQ-SDK-V1.5-20131219-yocto]
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c      |    8 ++++----
 .../net/ethernet/freescale/dpa/dpaa_eth_shared.c   |    8 ++++----
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index bac5fd1..3c9135a 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -711,9 +711,9 @@ dpa_fq_free(struct device *dev, struct list_head *list)
 	return _errno;
 }
 
-void dpa_release_sgt(struct qm_sg_entry *sgt, struct dpa_bp *dpa_bp,
-		struct bm_buffer *bmb)
+void dpa_release_sgt(struct qm_sg_entry *sgt, struct bm_buffer *bmb)
 {
+	struct dpa_bp *dpa_bp;
 	int i = 0, j;
 
 	do {
@@ -741,7 +741,7 @@ void __attribute__((nonnull))
 dpa_fd_release(const struct net_device *net_dev, const struct qm_fd *fd)
 {
 	struct qm_sg_entry		*sgt;
-	struct dpa_bp			*_dpa_bp, *dpa_bp;
+	struct dpa_bp			*_dpa_bp;
 	struct bm_buffer		 _bmb, bmb[8];
 
 	_bmb.hi	= fd->addr_hi;
@@ -752,7 +752,7 @@ dpa_fd_release(const struct net_device *net_dev, const struct qm_fd *fd)
 
 	if (fd->format == qm_fd_sg) {
 		sgt = (phys_to_virt(bm_buf_addr(&_bmb)) + dpa_fd_offset(fd));
-		dpa_release_sgt(sgt, dpa_bp, bmb);
+		dpa_release_sgt(sgt, bmb);
 	}
 
 	while (bman_release(_dpa_bp->pool, &_bmb, 1, 0))
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
index c05730e..fc57225 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
@@ -99,7 +99,7 @@ dpa_fq_free(struct device *dev, struct list_head *list);
 void __cold __attribute__((nonnull))
 dpa_bp_free(struct dpa_priv_s *priv, struct dpa_bp *dpa_bp);
 struct dpa_bp *dpa_bpid2pool(int bpid);
-void dpa_release_sgt(struct qm_sg_entry *sgt, struct dpa_bp *dpa_bp,
+void dpa_release_sgt(struct qm_sg_entry *sgt,
 		struct bm_buffer *bmb);
 void __attribute__((nonnull))
 dpa_fd_release(const struct net_device *net_dev, const struct qm_fd *fd);
@@ -235,7 +235,7 @@ dpa_fd_release_sg(const struct net_device *net_dev,
 {
 	const struct dpa_priv_s		*priv;
 	struct qm_sg_entry		*sgt;
-	struct dpa_bp			*_dpa_bp, *dpa_bp;
+	struct dpa_bp			*_dpa_bp;
 	struct bm_buffer		 _bmb, bmb[8];
 
 	priv = netdev_priv(net_dev);
@@ -248,7 +248,7 @@ dpa_fd_release_sg(const struct net_device *net_dev,
 	if (_dpa_bp->vaddr) {
 		sgt = dpa_phys2virt(_dpa_bp, bm_buf_addr(&_bmb)) +
 					dpa_fd_offset(fd);
-		dpa_release_sgt(sgt, dpa_bp, bmb);
+		dpa_release_sgt(sgt, bmb);
 	} else {
 		sgt = kmalloc(DPA_SGT_MAX_ENTRIES * sizeof(*sgt), GFP_ATOMIC);
 		if (sgt == NULL) {
@@ -262,7 +262,7 @@ dpa_fd_release_sg(const struct net_device *net_dev,
 						dpa_fd_offset(fd),
 					min(DPA_SGT_MAX_ENTRIES * sizeof(*sgt),
 						_dpa_bp->size));
-		dpa_release_sgt(sgt, dpa_bp, bmb);
+		dpa_release_sgt(sgt, bmb);
 		kfree(sgt);
 	}
 
-- 
1.7.5.4

