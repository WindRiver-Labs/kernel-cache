From 2277d4029c1661a8d6c03f23cbfc16b410e1821b Mon Sep 17 00:00:00 2001
From: Cristian Bercaru <cristian.bercaru@freescale.com>
Date: Wed, 14 Aug 2013 16:34:56 +0300
Subject: [PATCH 182/429] dpaa_eth: fix coccinelle code analysis issues

Assign boolean constants to boolean variables instead of integer
constants.

Signed-off-by: Cristian Bercaru <cristian.bercaru@freescale.com>
Change-Id: Ib7ecb86273355d0dd6c4f06fe410d572e613c570
Reviewed-on: http://git.am.freescale.net:8181/4021
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Bucur Madalin-Cristian-B32716 <madalin.bucur@freescale.com>
Reviewed-by: Radulescu Ruxandra Ioana-B05472 <ruxandra.radulescu@freescale.com>
Reviewed-by: Rivera Jose-B46482 <Jose.G.Rivera@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/4459
Reviewed-by: Rivera Jose-B46482 <German.Rivera@freescale.com>
[origin patch is from QorIQ-SDK-V1.5-20131219-yocto]
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 .../net/ethernet/freescale/dpa/dpaa_eth_common.c   |    8 ++++----
 .../ethernet/freescale/dpa/dpaa_eth_unit_test.c    |    2 +-
 drivers/net/ethernet/freescale/dpa/offline_port.c  |    4 ++--
 3 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index 1e6569d..da198fc 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -331,7 +331,7 @@ static void dpa_ts_tx_enable(struct net_device *dev)
 	if (mac_dev->ptp_enable)
 		mac_dev->ptp_enable(mac_dev->get_mac_handle(mac_dev));
 
-	priv->ts_tx_en = TRUE;
+	priv->ts_tx_en = true;
 }
 
 static void dpa_ts_tx_disable(struct net_device *dev)
@@ -351,7 +351,7 @@ static void dpa_ts_tx_disable(struct net_device *dev)
 		mac_dev->ptp_disable(mac_dev->get_mac_handle(mac_dev));
 #endif
 
-	priv->ts_tx_en = FALSE;
+	priv->ts_tx_en = false;
 }
 
 static void dpa_ts_rx_enable(struct net_device *dev)
@@ -364,7 +364,7 @@ static void dpa_ts_rx_enable(struct net_device *dev)
 	if (mac_dev->ptp_enable)
 		mac_dev->ptp_enable(mac_dev->get_mac_handle(mac_dev));
 
-	priv->ts_rx_en = TRUE;
+	priv->ts_rx_en = true;
 }
 
 static void dpa_ts_rx_disable(struct net_device *dev)
@@ -384,7 +384,7 @@ static void dpa_ts_rx_disable(struct net_device *dev)
 		mac_dev->ptp_disable(mac_dev->get_mac_handle(mac_dev));
 #endif
 
-	priv->ts_rx_en = FALSE;
+	priv->ts_rx_en = false;
 }
 
 static int dpa_ts_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_unit_test.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_unit_test.c
index 73fbd34..c831ee1 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_unit_test.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_unit_test.c
@@ -283,7 +283,7 @@ static int __devinit dpa_tx_unit_test(struct net_device *net_dev)
 			}
 
 			/* Was it good? */
-			if (tx_unit_test_passed == false) {
+			if (!tx_unit_test_passed) {
 				pr_err("Test failed:\n");
 				pr_err("size: %d pad: %d head: %p end: %p\n",
 					size, headroom, tx_unit_skb_head,
diff --git a/drivers/net/ethernet/freescale/dpa/offline_port.c b/drivers/net/ethernet/freescale/dpa/offline_port.c
index 8ae19de..b2c6d21 100644
--- a/drivers/net/ethernet/freescale/dpa/offline_port.c
+++ b/drivers/net/ethernet/freescale/dpa/offline_port.c
@@ -134,7 +134,7 @@ oh_port_probe(struct platform_device *_of_dev)
 	uint32_t		 queues_count;
 	uint32_t		 crt_fqid_base;
 	uint32_t		 crt_fq_count;
-	bool			frag_enabled = FALSE;
+	bool			frag_enabled = false;
 	struct fm_port_params	oh_port_tx_params;
 	struct fm_port_pcd_param	oh_port_pcd_params;
 	struct dpa_buffer_layout_s buf_layout;
@@ -369,7 +369,7 @@ oh_port_probe(struct platform_device *_of_dev)
 	    buf_layout.manip_extra_space != FRAG_MANIP_SPACE)
 		goto init_port;
 
-	frag_enabled = TRUE;
+	frag_enabled = true;
 	dev_info(dpa_oh_dev, "IP Fragmentation enabled for OH port %d",
 		     *port_id);
 
-- 
1.7.5.4

