From be2e6cbc564ef9e8ad3c25ba5c8bb8da7d5cfef5 Mon Sep 17 00:00:00 2001
From: Haiying Wang <Haiying.Wang@freescale.com>
Date: Wed, 4 Sep 2013 10:45:25 -0400
Subject: [PATCH 185/383] fsl_qbman: check portal availablility before
 querying the fq

In some case like KVM guest or upstream dts without dpa module, the portal is
not available, thus the kernel crashes at qbman_init because we query fq np
field without checking portal availability. This patch fixes this issue.

Signed-off-by: Haiying Wang <Haiying.Wang@freescale.com>
Change-Id: I4c792cf4413049de174f6f5a71d4194fbfbacc48
Reviewed-on: http://git.am.freescale.net:8181/4421
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Pledge Roy-R01356 <roy.pledge@freescale.com>
Reviewed-by: Thorpe Geoff-R01361 <Geoff.Thorpe@freescale.com>
Reviewed-by: Rivera Jose-B46482 <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.5-SOURCE-20131219-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_qbman/qbman_driver.c |   13 ++++++++++++-
 1 files changed, 12 insertions(+), 1 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qbman_driver.c b/drivers/staging/fsl_qbman/qbman_driver.c
index 814db34..9150be7 100644
--- a/drivers/staging/fsl_qbman/qbman_driver.c
+++ b/drivers/staging/fsl_qbman/qbman_driver.c
@@ -35,10 +35,21 @@
 
 static __init int qbman_init(void)
 {
+	struct device_node *dn;
+	u32 is_portal_available;
 
 	bman_init();
 	qman_init();
-	if (!qman_have_ccsr()) {
+
+	is_portal_available = 0;
+	for_each_compatible_node(dn, NULL, "fsl,qman-portal") {
+		if (!of_device_is_available(dn))
+			continue;
+		else
+			is_portal_available = 1;
+	}
+
+	if (!qman_have_ccsr() && is_portal_available ) {
 		struct qman_fq fq = {
 				.fqid = 1
 		};
-- 
1.7.5.4

