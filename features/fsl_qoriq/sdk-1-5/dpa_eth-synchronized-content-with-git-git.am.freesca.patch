From b146739888a26daef2340c72550d49c65baa0b77 Mon Sep 17 00:00:00 2001
From: "J. German Rivera" <Jose.G.Rivera@freescale.com>
Date: Thu, 12 Sep 2013 19:26:33 -0500
Subject: [PATCH 205/429] dpa_eth: synchronized content with
 git://git.am.freescale.net/gitolite/users/b32716/dpaa-eth.git

[origin patch is from QorIQ-SDK-V1.5-20131219-yocto]
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c   |   11 +++++------
 .../net/ethernet/freescale/dpa/dpaa_eth_shared.c   |    2 +-
 .../dts/b4420qds-usdpaa-shared-interfaces.dts      |    2 +-
 drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c    |   13 +++++--------
 4 files changed, 12 insertions(+), 16 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index d4f2337..816f971 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -582,14 +582,13 @@ void __hot _dpa_rx(struct net_device *net_dev,
 		gro_result_t gro_result;
 
 		gro_result = napi_gro_receive(&percpu_priv->napi, skb);
-		if (unlikely(gro_result == GRO_DROP)) {
-			percpu_stats->rx_dropped++;
+		/* If frame is dropped by the stack, rx_dropped counter is
+		 * incremented automatically, so no need for us to update it
+		 */
+		if (unlikely(gro_result == GRO_DROP))
 			goto packet_dropped;
-		}
-	} else if (unlikely(netif_receive_skb(skb) == NET_RX_DROP)) {
-		percpu_stats->rx_dropped++;
+	} else if (unlikely(netif_receive_skb(skb) == NET_RX_DROP))
 		goto packet_dropped;
-	}
 
 	percpu_stats->rx_packets++;
 	percpu_stats->rx_bytes += skb_len;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
index 3513222..9d2b9d1 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
@@ -339,7 +339,7 @@ skb_copied:
 	}
 
 	if (unlikely(netif_rx(skb) != NET_RX_SUCCESS))
-		percpu_priv->stats.rx_dropped++;
+		goto out;
 	else {
 		percpu_priv->stats.rx_packets++;
 		percpu_priv->stats.rx_bytes += dpa_fd_length(fd);
diff --git a/drivers/staging/fsl_dpa_offload/dts/b4420qds-usdpaa-shared-interfaces.dts b/drivers/staging/fsl_dpa_offload/dts/b4420qds-usdpaa-shared-interfaces.dts
index 1361777..f141931 100644
--- a/drivers/staging/fsl_dpa_offload/dts/b4420qds-usdpaa-shared-interfaces.dts
+++ b/drivers/staging/fsl_dpa_offload/dts/b4420qds-usdpaa-shared-interfaces.dts
@@ -137,7 +137,7 @@
 			/* Define frame queues for the OH port*/
 			/* <OH Rx error, OH Rx default> */
 			fsl,qman-frame-queues-oh = <0x6e 1 0x6f 1>;
-			fsl,bman-buffer-pools = <&bp16>;
+			fsl,bman-buffer-pools = <&bp9>;
 			fsl,fman-oh-port = <&fman0_oh2>;
 		};
                 dpa_fman0_oh3: dpa-fman0-oh@3 {
diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
index 6784cf5..b7fdf18 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
@@ -305,7 +305,6 @@ ssize_t wrp_dpa_stats_read(struct file *file,
 			return -EFAULT;
 		}
 
-		kfree(event->ks_cnt_ids);
 		kfree(event);
 
 		count   -= sizeof(struct compat_dpa_stats_event_params);
@@ -357,7 +356,6 @@ ssize_t wrp_dpa_stats_read(struct file *file,
 			return -EFAULT;
 		}
 
-		kfree(event->ks_cnt_ids);
 		kfree(event);
 
 		count   -= sizeof(struct dpa_stats_event_params);
@@ -1485,11 +1483,11 @@ static int do_ioctl_stats_get_counters(void *args)
 			log_err("Cannot copy to user the counter parameters\n");
 			ret = -EINVAL;
 		}
-
-		/* Request was sent, release the array of counter ids */
-		kfree(prm.req_params.cnts_ids);
 	}
 
+	/* Request was sent, release the array of counter ids */
+	kfree(prm.req_params.cnts_ids);
+
 	return ret;
 }
 
@@ -1581,10 +1579,9 @@ static int do_ioctl_stats_compat_get_counters(void *args)
 			log_err("Cannot copy to user the counter parameters\n");
 			ret = -EINVAL;
 		}
-
-		/* Request was sent, release the array of counter ids */
-		kfree(kprm.req_params.cnts_ids);
 	}
+	/* Request was sent, release the array of counter ids */
+	kfree(kprm.req_params.cnts_ids);
 
 	return ret;
 }
-- 
1.7.5.4

