From 0fe444a568c964df9e38b6a12b69d42961948cd8 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Fri, 29 Nov 2013 15:05:52 +0200
Subject: [PATCH 345/383] dpaa_eth: Fix DMA unmapping of buffers on Rx

On the Rx path, we only DMA unmap the data buffer once we are
certain that we can allocate an associated skb. Otherwise we need
to keep the original mapping and release the buffer back into the
bpool.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Change-Id: I2fc5389727e94655113b52f31cad4b893b6a93f0
Reviewed-on: http://git.am.freescale.net:8181/6974
Reviewed-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Reviewed-by: Cristian-Constantin Sovaiala <Cristian.Sovaiala@freescale.com>
Reviewed-by: Thomas Trefny <Tom.Trefny@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
[Original patch taken from QorIQ-SDK-V1.5-SOURCE-20131219-yocto.iso
 Remove ASF codes]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c |    8 ++++++--
 1 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index c6fefe4..648ee7c 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -552,15 +552,18 @@ void __hot _dpa_rx(struct net_device *net_dev,
 	/* The only FD types that we may receive are contig and S/G */
 	DPA_BUG_ON((fd->format != qm_fd_contig) && (fd->format != qm_fd_sg));
 
-	dma_unmap_single(dpa_bp->dev, addr, dpa_bp->size, DMA_BIDIRECTIONAL);
 	if (likely(fd->format == qm_fd_contig)) {
 #if defined(CONFIG_FSL_FMAN_TEST)
 		/* Execute the Rx processing hook, if it exists. */
 		if (dpaa_eth_hooks.rx_default &&
 			dpaa_eth_hooks.rx_default((void *)fd, net_dev, fqid)
-						== DPAA_ETH_STOLEN)
+						== DPAA_ETH_STOLEN) {
+			/* It's safe to unmap the buffer now */
+			dma_unmap_single(dpa_bp->dev, addr, dpa_bp->size,
+					 DMA_BIDIRECTIONAL);
 			/* won't count the rx bytes in */
 			return;
+		}
 #endif
 		skb = contig_fd_to_skb(priv, fd, &use_gro);
 	} else
@@ -576,6 +579,7 @@ void __hot _dpa_rx(struct net_device *net_dev,
 	 * Also, permanently unmap the buffer.
 	 */
 	(*count_ptr)--;
+	dma_unmap_single(dpa_bp->dev, addr, dpa_bp->size, DMA_BIDIRECTIONAL);
 
 	skb->protocol = eth_type_trans(skb, net_dev);
 
-- 
1.7.5.4

