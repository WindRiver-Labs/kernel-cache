From 422bd342be6bb8cbdd33b598d7337acf5dbb9bf1 Mon Sep 17 00:00:00 2001
From: Roy Pledge <Roy.Pledge@freescale.com>
Date: Tue, 1 Oct 2013 11:06:01 -0400
Subject: [PATCH 248/429] Fix 2 errors in USDPAA cleanup processing

The USPDAA cleanup processing wasn't properly merging DMA memory fragments.
Also if a new portal needed to be allocated for Frame Queue cleanup it
wasn't properly assigned to the array of cleanup portals

Signed-off-by: Roy Pledge <Roy.Pledge@freescale.com>
Change-Id: I616d4bdbf1dd356267231e6b642cce112487ed1b
Reviewed-on: http://git.am.freescale.net:8181/5140
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Vakul Garg <vakul@freescale.com>
Reviewed-by: Wang Haiying-R54964 <Haiying.Wang@freescale.com>
Reviewed-by: Rivera Jose-B46482 <German.Rivera@freescale.com>
[origin patch is from QorIQ-SDK-V1.5-20131219-yocto]
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/staging/fsl_qbman/fsl_usdpaa.c |   31 ++++++++++++++++++-------------
 1 files changed, 18 insertions(+), 13 deletions(-)

diff --git a/drivers/staging/fsl_qbman/fsl_usdpaa.c b/drivers/staging/fsl_qbman/fsl_usdpaa.c
index 7fa8c7b..fdc83df 100644
--- a/drivers/staging/fsl_qbman/fsl_usdpaa.c
+++ b/drivers/staging/fsl_qbman/fsl_usdpaa.c
@@ -222,6 +222,19 @@ static struct mem_fragment *split_frag(struct mem_fragment *frag)
 	return x[2];
 }
 
+__maybe_unused static void dump_frags(void)
+{
+	struct mem_fragment *frag;
+	int i = 0;
+	list_for_each_entry(frag, &mem_list, list) {
+		pr_info("FRAG %d: base 0x%llx pfn_base 0x%llx len 0x%llx "
+			"root_len 0x%llx refs %d\n",
+			i, frag->base, frag->pfn_base,
+			frag->len, frag->root_len, frag->refs);
+		++i;
+	}
+}
+
 /* Walk the list of fragments and adjoin neighbouring segments if possible */
 static void compress_frags(void)
 {
@@ -235,7 +248,10 @@ static void compress_frags(void)
 		    &next_frag->list != &mem_list) {
 			if (next_frag->refs == 0) {
 				/* Merge with next */
+				next_frag->base = frag->base;
+				next_frag->pfn_base = frag->pfn_base;
 				next_frag->len += frag->len;
+				next_frag->pfn_len += frag->pfn_len;
 				list_del(&frag->list);
 			}
 		}
@@ -440,18 +456,6 @@ static bool check_portal_channel(void *ctx, u32 channel)
 	return false;
 }
 
-__maybe_unused static void dump_frags(void)
-{
-	struct mem_fragment *frag;
-	int i = 0;
-	list_for_each_entry(frag, &mem_list, list) {
-		pr_info("FRAG %d: base 0x%llx len 0x%llx root_len 0x%llx refs %d\n",
-			i, frag->base, frag->len, frag->root_len, frag->refs);
-		++i;
-	}
-}
-
-
 static int usdpaa_release(struct inode *inode, struct file *filp)
 {
 	struct ctx *ctx = filp->private_data;
@@ -509,7 +513,8 @@ static int usdpaa_release(struct inode *inode, struct file *filp)
 		if (!qm_cleanup_portal)
 			return -ENOMEM;
 		init_qm_portal(qm_alloced_portal, qm_cleanup_portal);
-
+		portal_array[portal_count] = qm_cleanup_portal;
+		++portal_count;
 	}
 	if (!bm_cleanup_portal) {
 		bm_alloced_portal = bm_get_unused_portal();
-- 
1.7.5.4

