From 4b8a58c904cce09cf50a1e87bf51f969700b5501 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Mon, 25 Nov 2013 19:28:28 +0200
Subject: [PATCH 331/383] dpaa_eth: Conditionally-compile BUG_ONs

We have our own debugging flag - using for some BUG_ONs accidentally
left behind in the hotpath.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Change-Id: I34d3ae7dab7341d55f093ee84c8d48d52e120567
Reviewed-on: http://git.am.freescale.net:8181/6858
Reviewed-by: Cristian-Constantin Sovaiala <Cristian.Sovaiala@freescale.com>
Reviewed-by: Ruxandra Ioana Radulescu <ruxandra.radulescu@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Thomas Trefny <Tom.Trefny@freescale.com>
[Original patch taken from QorIQ-SDK-V1.5-SOURCE-20131219-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c      |    2 +-
 .../net/ethernet/freescale/dpa/dpaa_eth_common.c   |   10 +++++-----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index 4923b67..b030837 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -271,7 +271,7 @@ static int dpaa_eth_poll(struct napi_struct *napi, int budget)
 		int tmp;
 		napi_complete(napi);
 		tmp = qman_p_irqsource_add(np->p, QM_PIRQ_DQRI);
-		BUG_ON(tmp);
+		DPA_BUG_ON(tmp);
 	}
 
 	return cleaned;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index dbd84b4..e428c34 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -1456,11 +1456,11 @@ void dpa_release_sgt(struct qm_sg_entry *sgt, struct bm_buffer *bmb)
 
 	do {
 		dpa_bp = dpa_bpid2pool(sgt[i].bpid);
-		BUG_ON(!dpa_bp);
+		DPA_BUG_ON(!dpa_bp);
 
 		j = 0;
 		do {
-			BUG_ON(sgt[i].extension);
+			DPA_BUG_ON(sgt[i].extension);
 
 			bmb[j].hi       = sgt[i].addr_hi;
 			bmb[j].lo       = sgt[i].addr_lo;
@@ -1486,7 +1486,7 @@ dpa_fd_release(const struct net_device *net_dev, const struct qm_fd *fd)
 	_bmb.lo	= fd->addr_lo;
 
 	_dpa_bp = dpa_bpid2pool(fd->bpid);
-	BUG_ON(!_dpa_bp);
+	DPA_BUG_ON(!_dpa_bp);
 
 	if (fd->format == qm_fd_sg) {
 		sgt = (phys_to_virt(bm_buf_addr(&_bmb)) + dpa_fd_offset(fd));
@@ -1579,13 +1579,13 @@ int dpa_enable_tx_csum(struct dpa_priv_s *priv,
 	case ETH_P_IP:
 		parse_result->l3r = FM_L3_PARSE_RESULT_IPV4;
 		iph = ip_hdr(skb);
-		BUG_ON(iph == NULL);
+		DPA_BUG_ON(iph == NULL);
 		l4_proto = ntohs(iph->protocol);
 		break;
 	case ETH_P_IPV6:
 		parse_result->l3r = FM_L3_PARSE_RESULT_IPV6;
 		ipv6h = ipv6_hdr(skb);
-		BUG_ON(ipv6h == NULL);
+		DPA_BUG_ON(ipv6h == NULL);
 		l4_proto = ntohs(ipv6h->nexthdr);
 		break;
 	default:
-- 
1.7.5.4

