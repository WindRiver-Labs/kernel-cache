From 88fe304031303ec9293dbf04ea405f63f79d07b5 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Mon, 8 Jul 2013 19:52:09 +0300
Subject: [PATCH 095/429] fmd: Update range for FSL_FM_RX_EXTRA_HEADROOM

We need to reserve some space in the Rx skb buffer for NET_IP_ALIGN,
otherwise on forwarding the stack may reallocate the skb header.
The most easily available place to do this is the Rx extra headroom,
so enforce the minimum non-zero possible value as lower end of the
configuration range.

While here, enforce (and comment on) the restriction to only set values
which are a multiple of 16 bytes, which was missed in the previous
version of the help text.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Change-Id: I9403a36f11cc1c7b9460126fb5ab97237f9bd105
Reviewed-on: http://git.am.freescale.net:8181/3482
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Hamciuc Bogdan-BHAMCIU1 <bogdan.hamciuc@freescale.com>
Reviewed-by: Bucur Madalin-Cristian-B32716 <madalin.bucur@freescale.com>
Reviewed-by: Sovaiala Cristian-Constantin-B39531 <Cristian.Sovaiala@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[origin patch is from QorIQ-SDK-V1.5-20131219-yocto]
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 drivers/net/ethernet/freescale/fman/Kconfig        |    6 ++++--
 .../freescale/fman/src/wrapper/lnxwrp_fm.c         |    2 +-
 .../freescale/fman/src/wrapper/lnxwrp_fm.h         |    2 +-
 3 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fman/Kconfig b/drivers/net/ethernet/freescale/fman/Kconfig
index 124710c..f6eae39 100644
--- a/drivers/net/ethernet/freescale/fman/Kconfig
+++ b/drivers/net/ethernet/freescale/fman/Kconfig
@@ -86,14 +86,16 @@ config FSL_FM_MAX_FRAME_SIZE
 config FSL_FM_RX_EXTRA_HEADROOM
 	int "Add extra headroom at beginning of data buffers"
 	depends on FSL_FMAN
-	range 0 384
+	range 16 384
 	default "64"
 	help
 		Configure this to tell the Frame Manager to reserve some extra
 		space at the beginning of a data buffer on the receive path,
 		before Internal Context fields are copied. This is in addition
 		to the private data area already reserved for driver internal
-		use. The option does not affect in any way the layout of
+		use. The provided value must be a multiple of 16.
+
+		This option does not affect in any way the layout of
 		transmitted buffers. You may be required to enable the config
 		option FMAN_RESOURCE_ALLOCATION_ALGORITHM and also
 		FMAN_DISABLE_OH_TO_REUSE_RESOURCES to have enough resources
diff --git a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
index 31de448..d994da3 100644
--- a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
+++ b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
@@ -149,7 +149,7 @@ int fm_get_max_frm()
 
 int fm_get_rx_extra_headroom()
 {
-	return fsl_fm_rx_extra_headroom;
+	return ALIGN(fsl_fm_rx_extra_headroom, 16);
 }
 
 static int __init fm_set_max_frm(char *str)
diff --git a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.h b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.h
index 7cfe3e6..feab96f 100644
--- a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.h
+++ b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.h
@@ -74,7 +74,7 @@
 #endif
 
 #ifndef CONFIG_FSL_FM_RX_EXTRA_HEADROOM
-#define CONFIG_FSL_FM_RX_EXTRA_HEADROOM       0
+#define CONFIG_FSL_FM_RX_EXTRA_HEADROOM       16
 #endif
 
 typedef enum {
-- 
1.7.5.4

