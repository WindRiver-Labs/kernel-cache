From 4381e41b84b96eaa5c17f3e48135c7da9cfe3ed0 Mon Sep 17 00:00:00 2001
From: Varun Sethi <Varun.Sethi@freescale.com>
Date: Wed, 27 Nov 2013 23:24:07 +0530
Subject: [PATCH 336/383] PAMU errata work around for A-005982.

The errata states that PAACT and SPAACT caches won't get invalidated, after
writing to respective base registers, if the OMT cache is disabled.
As a work around, we enable the OMT cache (without enabling PAMU)
before setting the PAACT and SPAACT base registers.

Signed-off-by: Varun Sethi <Varun.Sethi@freescale.com>
Change-Id: I1f31f47fd7032723f33221585b2782c9f7c9d0d2
Reviewed-on: http://git.am.freescale.net:8181/6888
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Thomas Trefny <Tom.Trefny@freescale.com>
[Original patch taken from QorIQ-SDK-V1.5-SOURCE-20131219-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/iommu/fsl_pamu.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/drivers/iommu/fsl_pamu.c b/drivers/iommu/fsl_pamu.c
index daadc48..19c2d90 100644
--- a/drivers/iommu/fsl_pamu.c
+++ b/drivers/iommu/fsl_pamu.c
@@ -845,6 +845,16 @@ int setup_one_pamu(unsigned long pamu_reg_base, unsigned long pamu_reg_size,
 	pamu_regs = (struct pamu_mmap_regs *)
 		(pamu_reg_base + PAMU_MMAP_REGS_BASE);
 
+	/*
+	 * As per PAMU errata A-005982, writing the PAACT and SPAACT
+	 * base address registers wouldn't invalidate the corresponding
+	 * caches if the OMT cache is disabled. The workaround is to
+	 * enable the OMT cache before setting the base registers.
+	 * This can be done without actually enabling PAMU.
+	 */
+
+	out_be32(pc, PAMU_PC_OCE);
+
 	/* set up pointers to corenet control blocks */
 
 	out_be32(&pamu_regs->ppbah, upper_32_bits(ppaact_phys));
-- 
1.7.5.4

