From 325e53830365515b9e92fdd8f315167e19b84220 Mon Sep 17 00:00:00 2001
From: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
Date: Wed, 9 Oct 2013 18:11:47 +0300
Subject: [PATCH 217/383] dpa_offload: Remove unnecessary allocation of memory

Functions responsible of copying Table and CCNode counter
parameters were unnecessary allocating memory.

Signed-off-by: Anca Jeanina FLOAREA <anca.floarea@freescale.com>
Change-Id: I422b5976bdbec9eb51817e73b94877e1a7980cdd
Reviewed-on: http://git.am.freescale.net:8181/5446
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Aurelian Zanoschi <Aurelian.Zanoschi@freescale.com>
Reviewed-by: Marian-Cornel Chereji <marian.chereji@freescale.com>
Reviewed-by: Rivera Jose-B46482 <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.5-SOURCE-20131219-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c |   34 +++++++----------------
 1 files changed, 10 insertions(+), 24 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
index 1aede24..4a65b0e 100755
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
@@ -759,14 +759,14 @@ static int do_ioctl_stats_compat_create_counter(void *args)
 					&kprm.cnt_params.classif_tbl_params,
 					&uprm.cnt_params.classif_tbl_params);
 		if (ret < 0)
-			goto compat_create_counter_cleanup;
+			return ret;
 		break;
 	case DPA_STATS_CNT_CLASSIF_NODE:
 		ret = dpa_stats_ccnode_cnt_compatcpy(
 					&kprm.cnt_params.classif_node_params,
 					&uprm.cnt_params.classif_node_params);
 		if (ret < 0)
-			goto compat_create_counter_cleanup;
+			return ret;
 		break;
 	case DPA_STATS_CNT_IPSEC:
 		memcpy(&kprm.cnt_params.ipsec_params,
@@ -2175,18 +2175,11 @@ static long dpa_stats_tbl_cnt_compatcpy(struct dpa_stats_cnt_classif_tbl *kprm,
 {
 	kprm->td = uprm->td;
 	kprm->cnt_sel = uprm->cnt_sel;
-	/* If different than NULL, it will be overwritten */
-	kprm->key = compat_ptr(uprm->key);
-
-	if (compat_ptr(uprm->key)) {
-		/* Allocate memory for kernel-space key descriptor */
-		kprm->key = kmalloc(sizeof(*kprm->key), GFP_KERNEL);
-		if (!kprm->key) {
-			log_err("Cannot allocate memory for key descriptor\n");
-			return -ENOMEM;
-		}
+	kprm->key = NULL;
+
+	if (compat_ptr(uprm->key))
 		return copy_key_descriptor_compatcpy(&kprm->key, uprm->key);
-	}
+
 	return 0;
 }
 
@@ -2197,18 +2190,11 @@ static long dpa_stats_ccnode_cnt_compatcpy(
 	kprm->cnt_sel = uprm->cnt_sel;
 	kprm->ccnode_type = uprm->ccnode_type;
 	kprm->cc_node = compat_get_id2ptr(uprm->cc_node, FM_MAP_TYPE_PCD_NODE);
-	/* If different than NULL, it will be overwritten */
-	kprm->key = compat_ptr(uprm->key);
-
-	if (compat_ptr(uprm->key)) {
-		/* Allocate memory for kernel-space key descriptor */
-		kprm->key = kmalloc(sizeof(*kprm->key), GFP_KERNEL);
-		if (!kprm->key) {
-			log_err("Cannot allocate memory for key descriptor\n");
-			return -ENOMEM;
-		}
+	kprm->key = NULL;
+
+	if (compat_ptr(uprm->key))
 		return copy_key_descriptor_compatcpy(&kprm->key, uprm->key);
-	}
+
 	return 0;
 }
 
-- 
1.7.5.4

