From bd0caa4a11bb927b155bfcc5f2e88f48a618d966 Mon Sep 17 00:00:00 2001
From: Wang Dongsheng <dongsheng.wang@freescale.com>
Date: Mon, 2 Dec 2013 16:32:37 +0800
Subject: [PATCH 353/383] powerpc/mpc85xx: add two functions to get suspend
 state

Add set_pm_suspend_state & pm_suspend_state functions to get suspend state.
When system going to sleep, devices can get the system suspend state
through pm_suspend_state function.

Signed-off-by: Wang Dongsheng <dongsheng.wang@freescale.com>
Change-Id: I75662fb697fe48e6986555dbd0a3aec696798067
Reviewed-on: http://git.am.freescale.net:8181/6991
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Tiefei Zang <roy.zang@freescale.com>
Reviewed-by: Thomas Trefny <Tom.Trefny@freescale.com>
[Original patch taken from QorIQ-SDK-V1.5-SOURCE-20131219-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/powerpc/include/asm/mpc85xx.h   |    7 +++++++
 arch/powerpc/platforms/85xx/common.c |   14 ++++++++++++++
 arch/powerpc/sysdev/fsl_pmc.c        |   18 +++++++++++++++---
 arch/powerpc/sysdev/fsl_rcpm.c       |   12 +++++++++++-
 4 files changed, 47 insertions(+), 4 deletions(-)

diff --git a/arch/powerpc/include/asm/mpc85xx.h b/arch/powerpc/include/asm/mpc85xx.h
index 736d4ac..43dd184 100644
--- a/arch/powerpc/include/asm/mpc85xx.h
+++ b/arch/powerpc/include/asm/mpc85xx.h
@@ -9,6 +9,8 @@
  * (at your option) any later version.
  */
 
+#include <linux/suspend.h>
+
 #ifndef __ASM_PPC_MPC85XX_H
 #define __ASM_PPC_MPC85XX_H
 
@@ -89,4 +91,9 @@
 
 #define SVR_Unknown	0xFFFFFF
 
+#ifndef __ASSEMBLY__
+extern void set_pm_suspend_state(suspend_state_t state);
+extern suspend_state_t pm_suspend_state(void);
+#endif
+
 #endif
diff --git a/arch/powerpc/platforms/85xx/common.c b/arch/powerpc/platforms/85xx/common.c
index f63c10d..e5afa36 100644
--- a/arch/powerpc/platforms/85xx/common.c
+++ b/arch/powerpc/platforms/85xx/common.c
@@ -6,6 +6,7 @@
  * published by the Free Software Foundation.
  */
 #include <linux/of_platform.h>
+#include <linux/suspend.h>
 
 #include <sysdev/cpm2_pic.h>
 
@@ -46,6 +47,19 @@ int __init mpc85xx_common_publish_devices(void)
 {
 	return of_platform_bus_probe(NULL, mpc85xx_common_ids, NULL);
 }
+
+static suspend_state_t pm_state;
+
+void set_pm_suspend_state(suspend_state_t state)
+{
+	pm_state = state;
+}
+
+suspend_state_t pm_suspend_state(void)
+{
+	return pm_state;
+}
+
 #ifdef CONFIG_CPM2
 static void cpm2_cascade(unsigned int irq, struct irq_desc *desc)
 {
diff --git a/arch/powerpc/sysdev/fsl_pmc.c b/arch/powerpc/sysdev/fsl_pmc.c
index 61dba33..e8bc4db 100644
--- a/arch/powerpc/sysdev/fsl_pmc.c
+++ b/arch/powerpc/sysdev/fsl_pmc.c
@@ -21,8 +21,10 @@
 #include <linux/device.h>
 #include <linux/of_platform.h>
 #include <linux/pm.h>
+
 #include <asm/switch_to.h>
 #include <asm/cacheflush.h>
+#include <asm/mpc85xx.h>
 
 #include <sysdev/fsl_soc.h>
 
@@ -164,15 +166,24 @@ static int pmc_suspend_enter(suspend_state_t state)
 static int pmc_suspend_valid(suspend_state_t state)
 {
 	if (((pmc_flag & PMC_SLEEP) && (state == PM_SUSPEND_STANDBY)) ||
-	    ((pmc_flag & PMC_DEEP_SLEEP) && (state == PM_SUSPEND_MEM)))
+	    ((pmc_flag & PMC_DEEP_SLEEP) && (state == PM_SUSPEND_MEM))) {
+		set_pm_suspend_state(state);
+
 		return 1;
+	}
 	else
 		return 0;
 }
 
+static void pmc_suspend_end(void)
+{
+	set_pm_suspend_state(PM_SUSPEND_ON);
+}
+
 static const struct platform_suspend_ops pmc_suspend_ops = {
-	.valid = pmc_suspend_valid,
-	.enter = pmc_suspend_enter,
+	.valid	= pmc_suspend_valid,
+	.enter	= pmc_suspend_enter,
+	.end	= pmc_suspend_end,
 };
 
 static int pmc_probe(struct platform_device *pdev)
@@ -191,6 +202,7 @@ static int pmc_probe(struct platform_device *pdev)
 		pmc_flag |= PMC_DEEP_SLEEP | PMC_LOSSLESS;
 
 	suspend_set_ops(&pmc_suspend_ops);
+	set_pm_suspend_state(PM_SUSPEND_ON);
 
 	pr_info("Freescale PMC driver\n");
 	return 0;
diff --git a/arch/powerpc/sysdev/fsl_rcpm.c b/arch/powerpc/sysdev/fsl_rcpm.c
index 33c9b4c..9382923 100644
--- a/arch/powerpc/sysdev/fsl_rcpm.c
+++ b/arch/powerpc/sysdev/fsl_rcpm.c
@@ -19,6 +19,7 @@
 #include <asm/io.h>
 #include <asm/cacheflush.h>
 #include <asm/fsl_guts.h>
+#include <asm/mpc85xx.h>
 
 struct ccsr_rcpm __iomem *rcpm1_regs;
 struct ccsr_rcpm_v2 __iomem *rcpm2_regs;
@@ -93,14 +94,22 @@ static int rcpm_v2_suspend_enter(suspend_state_t state)
 
 static int rcpm_suspend_valid(suspend_state_t state)
 {
-	if (state == PM_SUSPEND_STANDBY)
+	if (state == PM_SUSPEND_STANDBY) {
+		set_pm_suspend_state(state);
 		return 1;
+	}
 	else
 		return 0;
 }
 
+static void rcpm_suspend_end(void)
+{
+	set_pm_suspend_state(PM_SUSPEND_ON);
+}
+
 static struct platform_suspend_ops rcpm_suspend_ops = {
 	.valid = rcpm_suspend_valid,
+	.end = rcpm_suspend_end,
 };
 
 static int rcpm_probe(struct platform_device *pdev)
@@ -122,6 +131,7 @@ static int rcpm_probe(struct platform_device *pdev)
 	}
 
 	suspend_set_ops(&rcpm_suspend_ops);
+	set_pm_suspend_state(PM_SUSPEND_ON);
 
 	dev_info(&pdev->dev, "Freescale RCPM driver\n");
 	return 0;
-- 
1.7.5.4

