From 19eb19d8c1afe79acb0aee8c39aeb05d166a41d6 Mon Sep 17 00:00:00 2001
From: Bogdan Purcareata <bogdan.purcareata@nxp.com>
Date: Wed, 14 Dec 2016 11:53:21 +0000
Subject: [PATCH 336/388] staging: fsl-dpaa2: Implement ndo_select_queue

Normally skb_record_rx_queue would be enough to guarantee flow affinity
through the networking stack on forwarding scenarios. However, for the
termination scenarios, on the sender side, the initial flow affinity is
determined based on the skb_hash, which is expected to hit only a few
Tx queues when there is a small number of flows.

For this final scenario, send the frame on the Tx queue associated with
the CPU that does the kernel space processing of the Tx frame. This
ensures that the confirmation frame is processed on the same CPU that
did the enqueue in the first place, since there's a 1:1 mapping between
Tx and Tx conf queues, and the Tx conf queues are CPU affine.

Signed-off-by: Bogdan Purcareata <bogdan.purcareata@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 4d4704f..76ef215 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -809,6 +809,19 @@ static void dpaa2_eth_tx_conf(struct dpaa2_eth_priv *priv,
 			status & DPAA2_FAS_TX_ERR_MASK);
 }
 
+static u16 dpaa2_eth_select_queue(struct net_device *net_dev,
+		struct sk_buff *skb, void *accel_priv,
+		select_queue_fallback_t fallback)
+{
+	struct dpaa2_eth_priv *priv = netdev_priv(net_dev);
+
+	if (skb_rx_queue_recorded(skb))
+		return skb_get_rx_queue(skb);
+
+	/* to be revisited when this is called from preemptible cotext */
+	return smp_processor_id() % dpaa2_eth_queue_count(priv);
+}
+
 static int set_rx_csum(struct dpaa2_eth_priv *priv, bool enable)
 {
 	int err;
@@ -1562,6 +1575,7 @@ static int dpaa2_eth_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 static const struct net_device_ops dpaa2_eth_ops = {
 	.ndo_open = dpaa2_eth_open,
 	.ndo_start_xmit = dpaa2_eth_tx,
+	.ndo_select_queue = dpaa2_eth_select_queue,
 	.ndo_stop = dpaa2_eth_stop,
 	.ndo_init = dpaa2_eth_init,
 	.ndo_set_mac_address = dpaa2_eth_set_addr,
-- 
2.9.3

