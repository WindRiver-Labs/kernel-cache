From d68dc57b25917ee3901ee6ee6c0314c171b56c23 Mon Sep 17 00:00:00 2001
From: Bogdan Purcareata <bogdan.purcareata@nxp.com>
Date: Thu, 13 Oct 2016 09:21:14 +0000
Subject: [PATCH 289/388] staging: fsl-mc: Add function to set obj_id to
 destroy

The patch fixes an error reproducible when setting the object id to
destroy. This affects restool scenarios where objects are detroyed.

Add a single function in the MC command header to set the object id in a
destroy command. Rename the object offset and size macros, since the
values ar applicable for destroy as well.

Signed-off-by: Bogdan Purcareata <bogdan.purcareata@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpni.c |  2 +-
 drivers/staging/fsl-dpaa2/mac/dpmac.c     |  2 +-
 drivers/staging/fsl-mc/bus/dpbp.c         |  2 +-
 drivers/staging/fsl-mc/bus/dpcon.c        |  2 +-
 drivers/staging/fsl-mc/bus/dpio/dpio.c    |  2 +-
 drivers/staging/fsl-mc/bus/dpmcp.c        |  2 +-
 drivers/staging/fsl-mc/include/mc-cmd.h   | 14 ++++++++++----
 7 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpni.c b/drivers/staging/fsl-dpaa2/ethernet/dpni.c
index 849480f..f5cccb0 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpni.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpni.c
@@ -193,7 +193,7 @@ int dpni_destroy(struct fsl_mc_io	*mc_io,
 					  cmd_flags,
 					  dprc_token);
 	/* set object id to destroy */
-	cmd.params[0] = mc_enc(0, sizeof(object_id), object_id);
+	set_mc_cmd_destroy_object_id(&cmd, object_id);
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
diff --git a/drivers/staging/fsl-dpaa2/mac/dpmac.c b/drivers/staging/fsl-dpaa2/mac/dpmac.c
index 8270c7a..2c26c82 100644
--- a/drivers/staging/fsl-dpaa2/mac/dpmac.c
+++ b/drivers/staging/fsl-dpaa2/mac/dpmac.c
@@ -111,7 +111,7 @@ int dpmac_destroy(struct fsl_mc_io *mc_io,
 					  cmd_flags,
 					  dprc_token);
 	/* set object id to destroy */
-	cmd.params[0] = mc_enc(0, sizeof(object_id), object_id);
+	set_mc_cmd_destroy_object_id(&cmd, object_id);
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
diff --git a/drivers/staging/fsl-mc/bus/dpbp.c b/drivers/staging/fsl-mc/bus/dpbp.c
index 555f380..66095ae 100644
--- a/drivers/staging/fsl-mc/bus/dpbp.c
+++ b/drivers/staging/fsl-mc/bus/dpbp.c
@@ -113,7 +113,7 @@ int dpbp_destroy(struct fsl_mc_io *mc_io,
 					  cmd_flags,
 					  dprc_token);
 	/* set object id to destroy */
-	cmd.params[0] = mc_enc(0, sizeof(object_id), object_id);
+	set_mc_cmd_destroy_object_id(&cmd, object_id);
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
diff --git a/drivers/staging/fsl-mc/bus/dpcon.c b/drivers/staging/fsl-mc/bus/dpcon.c
index fb98593..5fec51b 100644
--- a/drivers/staging/fsl-mc/bus/dpcon.c
+++ b/drivers/staging/fsl-mc/bus/dpcon.c
@@ -112,7 +112,7 @@ int dpcon_destroy(struct fsl_mc_io *mc_io,
 					  cmd_flags,
 					  dprc_token);
 	/* set object id to destroy */
-	cmd.params[0] = mc_enc(0, sizeof(object_id), object_id);
+	set_mc_cmd_destroy_object_id(&cmd, object_id);
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
diff --git a/drivers/staging/fsl-mc/bus/dpio/dpio.c b/drivers/staging/fsl-mc/bus/dpio/dpio.c
index a38f71a..61f4574 100644
--- a/drivers/staging/fsl-mc/bus/dpio/dpio.c
+++ b/drivers/staging/fsl-mc/bus/dpio/dpio.c
@@ -112,7 +112,7 @@ int dpio_destroy(struct fsl_mc_io	*mc_io,
 			cmd_flags,
 			dprc_token);
 	/* set object id to destroy */
-	cmd.params[0] = mc_enc(0, sizeof(object_id), object_id);
+	set_mc_cmd_destroy_object_id(&cmd, object_id);
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
diff --git a/drivers/staging/fsl-mc/bus/dpmcp.c b/drivers/staging/fsl-mc/bus/dpmcp.c
index 9126ae5..28beb29 100644
--- a/drivers/staging/fsl-mc/bus/dpmcp.c
+++ b/drivers/staging/fsl-mc/bus/dpmcp.c
@@ -111,7 +111,7 @@ int dpmcp_destroy(struct fsl_mc_io *mc_io,
 					cmd_flags,
 					dprc_token);
 	/* set object id to destroy */
-	cmd.params[0] = mc_enc(0, sizeof object_id, object_id);
+	set_mc_cmd_destroy_object_id(&cmd, object_id);
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
diff --git a/drivers/staging/fsl-mc/include/mc-cmd.h b/drivers/staging/fsl-mc/include/mc-cmd.h
index 752c560..c372776 100644
--- a/drivers/staging/fsl-mc/include/mc-cmd.h
+++ b/drivers/staging/fsl-mc/include/mc-cmd.h
@@ -92,8 +92,8 @@ integration */
 #define MC_CMD_HDR_FLAGS_S	32	/* Flags field size*/
 #define MC_CMD_HDR_FLAGS_MASK	0xFF00FF00 /* Command flags mask */
 
-#define MC_CMD_CREATE_OBJ_ID_O	0 	/* Object id field offset */
-#define MC_CMD_CREATE_OBJ_ID_S	32 	/* Object id field size */
+#define MC_CMD_OBJ_ID_O		0	/* Object id field offset */
+#define MC_CMD_OBJ_ID_S		32	/* Object id field size */
 
 #define MC_CMD_OBJ_VERSION_MAJ_O	0 	/* Object major version offset */
 #define MC_CMD_OBJ_VERSION_MIN_O	16 	/* Object minor version offset */
@@ -135,8 +135,14 @@ static inline void get_mc_cmd_object_api_ver(struct mc_command *mc_cmd,
 static inline uint32_t get_mc_cmd_create_object_id(struct mc_command *cmd)
 {
 	return (uint32_t) mc_dec(cmd->params[0],
-			MC_CMD_CREATE_OBJ_ID_O,
-			MC_CMD_CREATE_OBJ_ID_S);
+			MC_CMD_OBJ_ID_O, MC_CMD_OBJ_ID_S);
+}
+
+
+static inline void set_mc_cmd_destroy_object_id(struct mc_command *cmd,
+		uint32_t object_id)
+{
+	cmd->params[0] = mc_enc(MC_CMD_OBJ_ID_O, MC_CMD_OBJ_ID_S, object_id);
 }
 
 static inline uint16_t get_mc_cmd_hdr_token(uint64_t mcp_header)
-- 
2.9.3

