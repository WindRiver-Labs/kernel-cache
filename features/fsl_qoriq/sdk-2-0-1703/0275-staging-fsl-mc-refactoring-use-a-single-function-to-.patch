From bc86430ee96bd2cfc86e2221f7ec1db448214082 Mon Sep 17 00:00:00 2001
From: Catalin Horghidan <catalin.horghidan@nxp.com>
Date: Tue, 20 Sep 2016 13:53:07 +0300
Subject: [PATCH 275/388] staging: fsl-mc: refactoring: use a single function
 to retrieve the command id and object token

Signed-off-by: Catalin Horghidan <catalin.horghidan@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-mc/bus/dpmcp.c      |  2 +-
 drivers/staging/fsl-mc/bus/dprc.c       |  2 +-
 drivers/staging/fsl-mc/bus/mc-sys.c     | 12 ++++--------
 drivers/staging/fsl-mc/include/mc-cmd.h | 14 ++++++++++++++
 4 files changed, 20 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/dpmcp.c b/drivers/staging/fsl-mc/bus/dpmcp.c
index ecbb108..82b89c1 100644
--- a/drivers/staging/fsl-mc/bus/dpmcp.c
+++ b/drivers/staging/fsl-mc/bus/dpmcp.c
@@ -54,7 +54,7 @@ int dpmcp_open(struct fsl_mc_io *mc_io,
 		return err;
 
 	/* retrieve response parameters */
-	*token = MC_CMD_HDR_READ_TOKEN(cmd.header);
+	*token = get_mc_cmd_hdr_token(cmd.header);
 
 	return err;
 }
diff --git a/drivers/staging/fsl-mc/bus/dprc.c b/drivers/staging/fsl-mc/bus/dprc.c
index c659193..431be53 100644
--- a/drivers/staging/fsl-mc/bus/dprc.c
+++ b/drivers/staging/fsl-mc/bus/dprc.c
@@ -76,7 +76,7 @@ int dprc_open(struct fsl_mc_io *mc_io,
 		return err;
 
 	/* retrieve response parameters */
-	*token = MC_CMD_HDR_READ_TOKEN(cmd.header);
+	*token = get_mc_cmd_hdr_token(cmd.header);
 
 	return 0;
 }
diff --git a/drivers/staging/fsl-mc/bus/mc-sys.c b/drivers/staging/fsl-mc/bus/mc-sys.c
index d3b6940..571eaae 100644
--- a/drivers/staging/fsl-mc/bus/mc-sys.c
+++ b/drivers/staging/fsl-mc/bus/mc-sys.c
@@ -56,8 +56,6 @@
 #define MC_CMD_COMPLETION_POLLING_MIN_SLEEP_USECS    10
 #define MC_CMD_COMPLETION_POLLING_MAX_SLEEP_USECS    500
 
-#define MC_CMD_HDR_READ_CMDID(_hdr) \
-	((uint16_t)mc_dec((_hdr), MC_CMD_HDR_CMDID_O, MC_CMD_HDR_CMDID_S))
 
 /**
  * dpmcp_irq0_handler - Regular ISR for DPMCP interrupt 0
@@ -643,10 +641,8 @@ int mc_send_command(struct fsl_mc_io *mc_io, struct mc_command *cmd)
 		if (error == -ETIMEDOUT) {
 			pr_debug("MC command timed out (portal: %#llx, obj handle: %#x, command: %#x)\n",
 				 mc_io->portal_phys_addr,
-				 (unsigned int)
-					MC_CMD_HDR_READ_TOKEN(cmd->header),
-				 (unsigned int)
-					MC_CMD_HDR_READ_CMDID(cmd->header));
+				 (unsigned int) get_mc_cmd_hdr_token(cmd->header),
+				 (unsigned int) get_mc_cmd_hdr_cmdid(cmd->header));
 		}
 		goto common_exit;
 
@@ -655,8 +651,8 @@ int mc_send_command(struct fsl_mc_io *mc_io, struct mc_command *cmd)
 	if (status != MC_CMD_STATUS_OK) {
 		pr_debug("MC command failed: portal: %#llx, obj handle: %#x, command: %#x, status: %s (%#x)\n",
 			 mc_io->portal_phys_addr,
-			 (unsigned int)MC_CMD_HDR_READ_TOKEN(cmd->header),
-			 (unsigned int)MC_CMD_HDR_READ_CMDID(cmd->header),
+			 (unsigned int)get_mc_cmd_hdr_token(cmd->header),
+			 (unsigned int)get_mc_cmd_hdr_cmdid(cmd->header),
 			 mc_status_to_string(status),
 			 (unsigned int)status);
 
diff --git a/drivers/staging/fsl-mc/include/mc-cmd.h b/drivers/staging/fsl-mc/include/mc-cmd.h
index 0592b1f..95325f5 100644
--- a/drivers/staging/fsl-mc/include/mc-cmd.h
+++ b/drivers/staging/fsl-mc/include/mc-cmd.h
@@ -139,6 +139,20 @@ static inline uint32_t get_mc_cmd_create_object_id(struct mc_command *cmd)
 			MC_CMD_CREATE_OBJ_ID_S);
 }
 
+static inline uint16_t get_mc_cmd_hdr_token(uint64_t mcp_header)
+{
+	return ((uint16_t)mc_dec((mcp_header),
+			MC_CMD_HDR_TOKEN_O,
+			MC_CMD_HDR_TOKEN_S));
+}
+
+static inline uint16_t get_mc_cmd_hdr_cmdid(uint64_t mcp_header)
+{
+	return ((uint16_t)mc_dec((mcp_header),
+			MC_CMD_HDR_CMDID_O,
+			MC_CMD_HDR_CMDID_S));
+}
+
 static inline uint64_t mc_encode_cmd_header(uint16_t cmd_id,
 					    uint32_t cmd_flags,
 					    uint16_t token)
-- 
2.9.3

