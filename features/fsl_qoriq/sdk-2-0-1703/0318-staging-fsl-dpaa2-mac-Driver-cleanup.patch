From 7d417fa512e51f1f3c40d2a7a89f5421d45a0484 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Tue, 18 Oct 2016 16:48:47 +0300
Subject: [PATCH 318/388] staging: fsl-dpaa2/mac: Driver cleanup

Cleanup based on work for upstreaming the driver,
including feedback received in the process.

* one function rename
* IRQ routine cleanup
* remove unused define
* comment cosmetics

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/mac/mac.c | 43 +++++++++++--------------------------
 1 file changed, 12 insertions(+), 31 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/mac/mac.c b/drivers/staging/fsl-dpaa2/mac/mac.c
index 1ec895b..8820692 100644
--- a/drivers/staging/fsl-dpaa2/mac/mac.c
+++ b/drivers/staging/fsl-dpaa2/mac/mac.c
@@ -51,8 +51,6 @@
 #include "dpmac.h"
 #include "dpmac-cmd.h"
 
-#define DPAA2_SUPPORTED_DPMAC_VERSION	3
-
 struct dpaa2_mac_priv {
 	struct net_device		*netdev;
 	struct fsl_mc_device		*mc_dev;
@@ -69,24 +67,15 @@ struct dpaa2_mac_priv {
  * This must be kept in sync with enum dpmac_eth_if.
  */
 static phy_interface_t dpaa2_mac_iface_mode[] =  {
-	/* DPMAC_ETH_IF_MII */
-	PHY_INTERFACE_MODE_MII,
-	/* DPMAC_ETH_IF_RMII */
-	PHY_INTERFACE_MODE_RMII,
-	/* DPMAC_ETH_IF_SMII */
-	PHY_INTERFACE_MODE_SMII,
-	/* DPMAC_ETH_IF_GMII */
-	PHY_INTERFACE_MODE_GMII,
-	/* DPMAC_ETH_IF_RGMII */
-	PHY_INTERFACE_MODE_RGMII,
-	/* DPMAC_ETH_IF_SGMII */
-	PHY_INTERFACE_MODE_SGMII,
-	/* DPMAC_ETH_IF_QSGMII */
-	PHY_INTERFACE_MODE_QSGMII,
-	/* DPMAC_ETH_IF_XAUI */
-	PHY_INTERFACE_MODE_XGMII,
-	/* DPMAC_ETH_IF_XFI */
-	PHY_INTERFACE_MODE_XGMII,
+	PHY_INTERFACE_MODE_MII,		/* DPMAC_ETH_IF_MII */
+	PHY_INTERFACE_MODE_RMII,	/* DPMAC_ETH_IF_RMII */
+	PHY_INTERFACE_MODE_SMII,	/* DPMAC_ETH_IF_SMII */
+	PHY_INTERFACE_MODE_GMII,	/* DPMAC_ETH_IF_GMII */
+	PHY_INTERFACE_MODE_RGMII,	/* DPMAC_ETH_IF_RGMII */
+	PHY_INTERFACE_MODE_SGMII,	/* DPMAC_ETH_IF_SGMII */
+	PHY_INTERFACE_MODE_QSGMII,	/* DPMAC_ETH_IF_QSGMII */
+	PHY_INTERFACE_MODE_XGMII,	/* DPMAC_ETH_IF_XAUI */
+	PHY_INTERFACE_MODE_XGMII,	/* DPMAC_ETH_IF_XFI */
 };
 
 static void dpaa2_mac_link_changed(struct net_device *netdev)
@@ -129,9 +118,6 @@ static void dpaa2_mac_link_changed(struct net_device *netdev)
 		dev_err(&priv->mc_dev->dev, "dpmac_set_link_state: %d\n", err);
 }
 
-/* IRQ bits that we handle */
-static const u32 dpmac_irq_mask = DPMAC_IRQ_EVENT_LINK_CFG_REQ;
-
 #ifdef CONFIG_FSL_DPAA2_MAC_NETDEVS
 static netdev_tx_t dpaa2_mac_drop_frame(struct sk_buff *skb,
 					struct net_device *dev)
@@ -418,7 +404,7 @@ static int setup_irqs(struct fsl_mc_device *mc_dev)
 	}
 
 	err = dpmac_set_irq_mask(mc_dev->mc_io, 0, mc_dev->mc_handle,
-				 DPMAC_IRQ_INDEX, dpmac_irq_mask);
+				 DPMAC_IRQ_INDEX, DPMAC_IRQ_EVENT_LINK_CFG_REQ);
 	if (err) {
 		dev_err(&mc_dev->dev, "dpmac_set_irq_mask err %d\n", err);
 		goto free_irq;
@@ -442,11 +428,6 @@ static void teardown_irqs(struct fsl_mc_device *mc_dev)
 {
 	int err;
 
-	err = dpmac_set_irq_mask(mc_dev->mc_io, 0, mc_dev->mc_handle,
-				 DPMAC_IRQ_INDEX, dpmac_irq_mask);
-	if (err)
-		dev_err(&mc_dev->dev, "dpmac_set_irq_mask err %d\n", err);
-
 	err = dpmac_set_irq_enable(mc_dev->mc_io, 0, mc_dev->mc_handle,
 				   DPMAC_IRQ_INDEX, 0);
 	if (err)
@@ -455,7 +436,7 @@ static void teardown_irqs(struct fsl_mc_device *mc_dev)
 	fsl_mc_free_irqs(mc_dev);
 }
 
-static struct device_node *lookup_node(struct device *dev, u16 dpmac_id)
+static struct device_node *find_dpmac_node(struct device *dev, u16 dpmac_id)
 {
 	struct device_node *dpmacs, *dpmac = NULL;
 	struct device_node *mc_node = dev->of_node;
@@ -533,7 +514,7 @@ static int dpaa2_mac_probe(struct fsl_mc_device *mc_dev)
 	}
 
 	/* Look up the DPMAC node in the device-tree. */
-	dpmac_node = lookup_node(dev, priv->attr.id);
+	dpmac_node = find_dpmac_node(dev, priv->attr.id);
 	if (!dpmac_node) {
 		dev_err(dev, "No dpmac@%d subnode found.\n", priv->attr.id);
 		err = -ENODEV;
-- 
2.9.3

