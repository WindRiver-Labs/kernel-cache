From 8693c61d12a952ae875d4ac209dbc13aa6e6e21f Mon Sep 17 00:00:00 2001
From: Roy Pledge <roy.pledge@nxp.com>
Date: Tue, 29 Nov 2016 17:22:38 -0500
Subject: [PATCH 187/388] Revert "fsl_qbman: Use cache inhibited portals on
 LS1046"

This reverts commit 98feb2305e4b39c459e30dbe8867e3fcccf1f6c1.
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/bman_driver.c  | 35 ++++----------------------------
 drivers/staging/fsl_qbman/qman_driver.c  | 34 +++++--------------------------
 drivers/staging/fsl_qbman/qman_high.c    |  2 +-
 drivers/staging/fsl_qbman/qman_private.h |  2 --
 4 files changed, 10 insertions(+), 63 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_driver.c b/drivers/staging/fsl_qbman/bman_driver.c
index c466876..0e65fb6 100644
--- a/drivers/staging/fsl_qbman/bman_driver.c
+++ b/drivers/staging/fsl_qbman/bman_driver.c
@@ -32,8 +32,6 @@
 #ifdef CONFIG_HOTPLUG_CPU
 #include <linux/cpu.h>
 #endif
-#include <linux/sys_soc.h>
-
 /*
  * Global variables of the max portal/pool number this bman version supported
  */
@@ -105,25 +103,13 @@ static int __init fsl_bpid_range_init(struct device_node *node)
 	return 0;
 }
 
-#if defined(CONFIG_ARM) || defined(CONFIG_ARM64)
-static struct soc_device_attribute soc_msi_matches[] = {
-	{
-		.family = "QorIQ LS1046A",
-		.data = NULL
-	},
-	{},
-};
-#endif
-
 static struct bm_portal_config * __init parse_pcfg(struct device_node *node)
 {
 	struct bm_portal_config *pcfg;
 	const u32 *index;
 	int irq, ret;
 	resource_size_t len;
-#if defined(CONFIG_ARM) || defined(CONFIG_ARM64)
-	const struct soc_device_attribute *match;
-#endif
+
 	pcfg = kmalloc(sizeof(*pcfg), GFP_KERNEL);
 	if (!pcfg) {
 		pr_err("can't allocate portal config");
@@ -205,22 +191,9 @@ static struct bm_portal_config * __init parse_pcfg(struct device_node *node)
 		goto err;
 
 #if defined(CONFIG_ARM) || defined(CONFIG_ARM64)
-
-	/* Check for LS1046A device as we need to use a
-	   cache-inhibited write combine mapping for that part */
-	match = soc_device_match(soc_msi_matches);
-	if (match)
-		pcfg->addr_virt[DPA_PORTAL_CE] =
-			ioremap_wc(pcfg->addr_phys[DPA_PORTAL_CE].start,
-				   resource_size(&pcfg->
-						 addr_phys[DPA_PORTAL_CE]));
-	else
-		pcfg->addr_virt[DPA_PORTAL_CE] =
-			ioremap_cache_ns(
-					 pcfg->addr_phys[DPA_PORTAL_CE].start,
-					 resource_size(&pcfg->addr_phys
-						       [DPA_PORTAL_CE]));
-
+	pcfg->addr_virt[DPA_PORTAL_CE] = ioremap_cache_ns(
+                                pcfg->addr_phys[DPA_PORTAL_CE].start,
+                                resource_size(&pcfg->addr_phys[DPA_PORTAL_CE]));
         pcfg->addr_virt[DPA_PORTAL_CI] = ioremap(
                                 pcfg->addr_phys[DPA_PORTAL_CI].start,
                                 resource_size(&pcfg->addr_phys[DPA_PORTAL_CI]));
diff --git a/drivers/staging/fsl_qbman/qman_driver.c b/drivers/staging/fsl_qbman/qman_driver.c
index d827f79..7f90ddf 100644
--- a/drivers/staging/fsl_qbman/qman_driver.c
+++ b/drivers/staging/fsl_qbman/qman_driver.c
@@ -30,7 +30,6 @@
  */
 
 #include "qman_private.h"
-#include <linux/sys_soc.h>
 
 #include <asm/smp.h>	/* hard_smp_processor_id() if !CONFIG_SMP */
 #ifdef CONFIG_HOTPLUG_CPU
@@ -373,16 +372,6 @@ static void qman_get_ip_revision(struct device_node *dn)
 	}
 }
 
-#if defined(CONFIG_ARM) || defined(CONFIG_ARM64)
-static struct soc_device_attribute soc_msi_matches[] = {
-	{
-		.family = "QorIQ LS1046A",
-		.data = NULL
-	},
-	{},
-};
-#endif
-
 /* Parse a portal node, perform generic mapping duties and return the config. It
  * is not known at this stage for what purpose (or even if) the portal will be
  * used. */
@@ -393,11 +382,8 @@ static struct qm_portal_config * __init parse_pcfg(struct device_node *node)
 	u32 index, channel;
 	int irq, ret;
 	resource_size_t len;
-#if defined(CONFIG_ARM) || defined(CONFIG_ARM64)
-	const struct soc_device_attribute *match;
-#endif
 
-	pcfg = kzalloc(sizeof(*pcfg), GFP_KERNEL);
+	pcfg = kmalloc(sizeof(*pcfg), GFP_KERNEL);
 	if (!pcfg) {
 		pr_err("can't allocate portal config");
 		return NULL;
@@ -474,20 +460,10 @@ static struct qm_portal_config * __init parse_pcfg(struct device_node *node)
 		goto err;
 
 #if defined(CONFIG_ARM) || defined(CONFIG_ARM64)
-	/* Check for LS1046A device as we need to use a
-	   cache-inhibited write combine mapping for that part */
-	match = soc_device_match(soc_msi_matches);
-	if (match) {
-		pcfg->addr_virt[DPA_PORTAL_CE] =
-			ioremap_wc(pcfg->addr_phys[DPA_PORTAL_CE].start,
-				   resource_size(&pcfg->
-						 addr_phys[DPA_PORTAL_CE]));
-		pcfg->cache_inhibited = 1;
-	} else
-		pcfg->addr_virt[DPA_PORTAL_CE] =
-			ioremap_cache_ns(pcfg->addr_phys[DPA_PORTAL_CE].start,
-					 resource_size(&pcfg->addr_phys
-						       [DPA_PORTAL_CE]));
+	pcfg->addr_virt[DPA_PORTAL_CE] = ioremap_cache_ns(
+                                pcfg->addr_phys[DPA_PORTAL_CE].start,
+                                resource_size(&pcfg->addr_phys[DPA_PORTAL_CE]));
+
         pcfg->addr_virt[DPA_PORTAL_CI] = ioremap(
                                 pcfg->addr_phys[DPA_PORTAL_CI].start,
                                 resource_size(&pcfg->addr_phys[DPA_PORTAL_CI]));
diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 551be73..130da79 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -606,7 +606,7 @@ struct qman_portal *qman_create_portal(
         portal->use_eqcr_ci_stashing = ((qman_ip_rev >= QMAN_REV30) ?
 					1 : 0);
 #elif defined(CONFIG_ARM) || defined(CONFIG_ARM64)
-	portal->use_eqcr_ci_stashing = !config->cache_inhibited;
+	portal->use_eqcr_ci_stashing = 1;
 #else
         portal->use_eqcr_ci_stashing = 0;
 #endif
diff --git a/drivers/staging/fsl_qbman/qman_private.h b/drivers/staging/fsl_qbman/qman_private.h
index b6493e5..ee025cf 100644
--- a/drivers/staging/fsl_qbman/qman_private.h
+++ b/drivers/staging/fsl_qbman/qman_private.h
@@ -189,8 +189,6 @@ struct qm_portal_config {
 	struct qman_portal_config public_cfg;
 	/* power management saved data */
 	u32 saved_isdr;
-	/* Set to non zero if portal is cache_inhibited mode */
-	int cache_inhibited;
 };
 
 /* Revision info (for errata and feature handling) */
-- 
2.9.3

