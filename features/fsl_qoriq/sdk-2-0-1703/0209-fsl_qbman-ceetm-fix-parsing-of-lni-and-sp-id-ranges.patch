From bc2674d4e5097da7a9e0c962a1b0046b827d7196 Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Tue, 13 Dec 2016 09:50:35 +0200
Subject: [PATCH 209/388] fsl_qbman: ceetm: fix parsing of lni and sp id ranges

In the device tree, the lni and sp ids are defined by a (start, count) pair.
Valid ids range from start to start + count - 1.

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index deef1a8..df30be9 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -3766,7 +3766,7 @@ int qman_ceetm_sp_claim(struct qm_ceetm_sp **sp, enum qm_dc_portal dcp_idx,
 			(dcp_idx == qm_dc_portal_fman1));
 
 	if ((sp_idx < qman_ceetms[dcp_idx].sp_range[0]) ||
-		(sp_idx > (qman_ceetms[dcp_idx].sp_range[0] +
+		(sp_idx >= (qman_ceetms[dcp_idx].sp_range[0] +
 		qman_ceetms[dcp_idx].sp_range[1]))) {
 		pr_err("Sub-portal index doesn't exist\n");
 		return -EINVAL;
@@ -3812,7 +3812,7 @@ int qman_ceetm_lni_claim(struct qm_ceetm_lni **lni, enum qm_dc_portal dcp_idx,
 	struct qm_ceetm_lni *p;
 
 	if ((lni_idx < qman_ceetms[dcp_idx].lni_range[0]) ||
-		(lni_idx > (qman_ceetms[dcp_idx].lni_range[0] +
+		(lni_idx >= (qman_ceetms[dcp_idx].lni_range[0] +
 		qman_ceetms[dcp_idx].lni_range[1]))) {
 		pr_err("The lni index is out of range\n");
 		return -EINVAL;
-- 
2.9.3

