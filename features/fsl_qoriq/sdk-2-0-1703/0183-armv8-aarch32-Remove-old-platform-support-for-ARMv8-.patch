From 07a2d4b452ad11363ccfe6ccf02fdc399c0d0a9f Mon Sep 17 00:00:00 2001
From: Alison Wang <b18965@freescale.com>
Date: Wed, 30 Nov 2016 16:14:52 +0800
Subject: [PATCH 183/388] armv8: aarch32: Remove old platform support for ARMv8
 AArch32

As generic DT based system is used for ARMv8 AArch32 support, the old
codes are removed.

Signed-off-by: Alison Wang <alison.wang@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/arm/Kconfig                    |  9 ---------
 arch/arm/mach-imx/Kconfig           | 14 --------------
 arch/arm/mach-imx/Makefile          |  4 +---
 arch/arm/mach-imx/mach-layerscape.c | 24 ------------------------
 arch/arm/mm/ioremap.c               |  2 --
 drivers/irqchip/Kconfig             |  2 +-
 drivers/memory/Kconfig              |  2 +-
 drivers/mtd/nand/Kconfig            |  2 +-
 drivers/mtd/spi-nor/Kconfig         |  2 +-
 drivers/soc/fsl/Kconfig.arm         |  2 +-
 drivers/spi/Kconfig                 |  2 +-
 11 files changed, 7 insertions(+), 58 deletions(-)
 delete mode 100644 arch/arm/mach-imx/mach-layerscape.c

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 17cb70d..fdc1283 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -292,15 +292,6 @@ config PGTABLE_LEVELS
 	default 3 if ARM_LPAE
 	default 2
 
-config ARCH_AARCH32_ES_SUPPORT
-	def_bool n
-	help
-	 The ARMv8 architecture supports 64-bit execution state, AArch64
-	 and 32-bit execution state, AArch32, that is compatible with
-	 previous versions of the ARM architecture.
-
-	 Enable AArch32 execution state support for ARMv8 architecture.
-
 source "init/Kconfig"
 
 source "kernel/Kconfig.freezer"
diff --git a/arch/arm/mach-imx/Kconfig b/arch/arm/mach-imx/Kconfig
index 028d71f..5a2b206 100644
--- a/arch/arm/mach-imx/Kconfig
+++ b/arch/arm/mach-imx/Kconfig
@@ -627,20 +627,6 @@ config SOC_LS1021A
 
 endif
 
-config ARCH_LAYERSCAPE_AARCH32
-	bool "Freescale Layerscape SoC AArch32 ES support"
-	select ARCH_AARCH32_ES_SUPPORT
-	select ARM_GIC
-	select ARM_ARCH_TIMER
-	select ARCH_DMA_ADDR_T_64BIT if ARM_LPAE
-	select PCI_LAYERSCAPE if PCI
-	select PCI_DOMAINS if PCI
-	select LS1_MSI if PCI_MSI
-
-	help
-	  This enables support for Freescale Layerscape SoC family in
-	  in AArch32 execution state.
-
 source "arch/arm/mach-imx/devices/Kconfig"
 
 endif
diff --git a/arch/arm/mach-imx/Makefile b/arch/arm/mach-imx/Makefile
index 3e93b76..62612d4 100644
--- a/arch/arm/mach-imx/Makefile
+++ b/arch/arm/mach-imx/Makefile
@@ -82,7 +82,7 @@ obj-$(CONFIG_HAVE_IMX_ANATOP) += anatop.o
 obj-$(CONFIG_HAVE_IMX_GPC) += gpc.o
 obj-$(CONFIG_HAVE_IMX_MMDC) += mmdc.o
 obj-$(CONFIG_HAVE_IMX_SRC) += src.o
-ifneq ($(CONFIG_SOC_IMX6)$(CONFIG_SOC_LS1021A)$(CONFIG_ARCH_LAYERSCAPE_AARCH32),)
+ifneq ($(CONFIG_SOC_IMX6)$(CONFIG_SOC_LS1021A),)
 AFLAGS_headsmp.o :=-Wa,-march=armv7-a
 obj-$(CONFIG_SMP) += headsmp.o platsmp.o
 obj-$(CONFIG_HOTPLUG_CPU) += hotplug.o
@@ -109,6 +109,4 @@ obj-$(CONFIG_SOC_VF610) += clk-vf610.o mach-vf610.o
 
 obj-$(CONFIG_SOC_LS1021A) += mach-ls1021a.o
 
-obj-$(CONFIG_ARCH_LAYERSCAPE_AARCH32) += mach-layerscape.o
-
 obj-y += devices/
diff --git a/arch/arm/mach-imx/mach-layerscape.c b/arch/arm/mach-imx/mach-layerscape.c
deleted file mode 100644
index 109d488..0000000
--- a/arch/arm/mach-imx/mach-layerscape.c
+++ /dev/null
@@ -1,24 +0,0 @@
-/*
- * Copyright 2015-2016 Freescale Semiconductor, Inc.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- */
-
-#include <asm/mach/arch.h>
-
-#include "common.h"
-
-static const char * const layerscape_dt_compat[] __initconst = {
-	"fsl,ls1012a",
-	"fsl,ls1043a",
-	"fsl,ls1046a",
-	NULL,
-};
-
-DT_MACHINE_START(LAYERSCAPE_AARCH32, "Freescale LAYERSCAPE")
-	.smp		= smp_ops(layerscape_smp_ops),
-	.dt_compat	= layerscape_dt_compat,
-MACHINE_END
diff --git a/arch/arm/mm/ioremap.c b/arch/arm/mm/ioremap.c
index 7d4abb6..d1e5ad7 100644
--- a/arch/arm/mm/ioremap.c
+++ b/arch/arm/mm/ioremap.c
@@ -298,10 +298,8 @@ void __iomem * __arm_ioremap_pfn_caller(unsigned long pfn,
 	/*
 	 * Don't allow RAM to be mapped - this causes problems with ARMv6+
 	 */
-#ifndef CONFIG_ARCH_LAYERSCAPE_AARCH32
 	if (WARN_ON(pfn_valid(pfn)))
 		return NULL;
-#endif
 
 	area = get_vm_area_caller(size, VM_IOREMAP, caller);
  	if (!area)
diff --git a/drivers/irqchip/Kconfig b/drivers/irqchip/Kconfig
index d315a3b..81bf49e 100644
--- a/drivers/irqchip/Kconfig
+++ b/drivers/irqchip/Kconfig
@@ -160,6 +160,6 @@ config MIPS_GIC
 	select MIPS_CM
 
 config LS_SCFG_MSI
-	def_bool y if SOC_LS1021A || ARCH_LAYERSCAPE || ARCH_LAYERSCAPE_AARCH32
+	def_bool y if SOC_LS1021A || ARCH_LAYERSCAPE
 	depends on PCI && PCI_MSI
 	select PCI_MSI_IRQ_DOMAIN
diff --git a/drivers/memory/Kconfig b/drivers/memory/Kconfig
index 0cb8665..3ec473a 100644
--- a/drivers/memory/Kconfig
+++ b/drivers/memory/Kconfig
@@ -81,7 +81,7 @@ config FSL_CORENET_CF
 
 config FSL_IFC
 	bool
-	depends on FSL_SOC || ARCH_LAYERSCAPE || ARCH_LAYERSCAPE_AARCH32
+	depends on FSL_SOC || ARCH_LAYERSCAPE
 
 config JZ4780_NEMC
 	bool "Ingenic JZ4780 SoC NEMC driver"
diff --git a/drivers/mtd/nand/Kconfig b/drivers/mtd/nand/Kconfig
index 0294565..0d6509b 100644
--- a/drivers/mtd/nand/Kconfig
+++ b/drivers/mtd/nand/Kconfig
@@ -431,7 +431,7 @@ config MTD_NAND_FSL_ELBC
 
 config MTD_NAND_FSL_IFC
 	tristate "NAND support for Freescale IFC controller"
-	depends on MTD_NAND && (FSL_SOC || ARCH_LAYERSCAPE || ARCH_LAYERSCAPE_AARCH32)
+	depends on MTD_NAND && (FSL_SOC || ARCH_LAYERSCAPE)
 	select FSL_IFC
 	select MEMORY
 	help
diff --git a/drivers/mtd/spi-nor/Kconfig b/drivers/mtd/spi-nor/Kconfig
index 93214ba..8fd6045 100644
--- a/drivers/mtd/spi-nor/Kconfig
+++ b/drivers/mtd/spi-nor/Kconfig
@@ -23,7 +23,7 @@ config MTD_SPI_NOR_USE_4K_SECTORS
 
 config SPI_FSL_QUADSPI
 	tristate "Freescale Quad SPI controller"
-	depends on ARCH_MXC || SOC_LS1021A || ARCH_LAYERSCAPE || ARCH_LAYERSCAPE_AARCH32 || COMPILE_TEST
+	depends on ARCH_MXC || SOC_LS1021A || ARCH_LAYERSCAPE || COMPILE_TEST
 	help
 	  This enables support for the Quad SPI controller in master mode.
 	  We only connect the NOR to this controller now.
diff --git a/drivers/soc/fsl/Kconfig.arm b/drivers/soc/fsl/Kconfig.arm
index d154fde..c22fb74 100644
--- a/drivers/soc/fsl/Kconfig.arm
+++ b/drivers/soc/fsl/Kconfig.arm
@@ -4,7 +4,7 @@
 
 config LS_SOC_DRIVERS
 	bool "Layerscape Soc Drivers"
-	depends on ARCH_LAYERSCAPE || SOC_LS1021A || ARCH_LAYERSCAPE_AARCH32
+	depends on ARCH_LAYERSCAPE || SOC_LS1021A
 	default n
 	help
 	Say y here to enable Freescale Layerscape Soc Device Drivers support.
diff --git a/drivers/spi/Kconfig b/drivers/spi/Kconfig
index 615db2f..edb0ef0 100644
--- a/drivers/spi/Kconfig
+++ b/drivers/spi/Kconfig
@@ -303,7 +303,7 @@ config SPI_FSL_SPI
 config SPI_FSL_DSPI
 	tristate "Freescale DSPI controller"
 	select REGMAP_MMIO
-	depends on SOC_VF610 || SOC_LS1021A || ARCH_LAYERSCAPE || ARCH_LAYERSCAPE_AARCH32 || COMPILE_TEST
+	depends on SOC_VF610 || SOC_LS1021A || ARCH_LAYERSCAPE || COMPILE_TEST
 	help
 	  This enables support for the Freescale DSPI controller in master
 	  mode. VF610 platform uses the controller.
-- 
2.9.3

