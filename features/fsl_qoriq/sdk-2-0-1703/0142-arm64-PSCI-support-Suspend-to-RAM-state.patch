From 0d5c79cb4bd7f9507784066f91f6ac916de94e07 Mon Sep 17 00:00:00 2001
From: Chenhui Zhao <chenhui.zhao@nxp.com>
Date: Wed, 18 May 2016 15:28:22 +0800
Subject: [PATCH 142/388] arm64: PSCI: support Suspend-to-RAM state

This patch is derived from
commit faf7ec4a92c0 ("drivers: firmware: psci: add system suspend support")
which is in Linux 4.3. So far, PPA supports PSCI v0.2, so we use the
CPU_SUSPEND interface to implement the feature instead of SYSTEM_SUSPEND.

To test the feature, enter the command:
echo mem > /sys/power/state

Signed-off-by: Chenhui Zhao <chenhui.zhao@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/arm64/kernel/psci.c | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/arch/arm64/kernel/psci.c b/arch/arm64/kernel/psci.c
index 24d4733..ad00dbf 100644
--- a/arch/arm64/kernel/psci.c
+++ b/arch/arm64/kernel/psci.c
@@ -23,6 +23,7 @@
 #include <linux/pm.h>
 #include <linux/delay.h>
 #include <linux/slab.h>
+#include <linux/suspend.h>
 #include <uapi/linux/psci.h>
 
 #include <asm/acpi.h>
@@ -275,6 +276,35 @@ static void psci_sys_poweroff(void)
 	invoke_psci_fn(PSCI_0_2_FN_SYSTEM_OFF, 0, 0, 0);
 }
 
+static int psci_system_suspend(unsigned long unused)
+{
+	struct psci_power_state state = {
+		.id = 0,
+		.type = PSCI_POWER_STATE_TYPE_POWER_DOWN,
+		.affinity_level = 2, /* system level */
+	};
+
+	return psci_cpu_suspend(state, virt_to_phys(cpu_resume));
+}
+
+static int psci_system_suspend_enter(suspend_state_t state)
+{
+	return cpu_suspend(0, psci_system_suspend);
+}
+
+static const struct platform_suspend_ops psci_suspend_ops = {
+	.valid          = suspend_valid_only_mem,
+	.enter          = psci_system_suspend_enter,
+};
+
+static void __init psci_init_system_suspend(void)
+{
+	if (!IS_ENABLED(CONFIG_SUSPEND))
+		return;
+
+	suspend_set_ops(&psci_suspend_ops);
+}
+
 static void __init psci_0_2_set_functions(void)
 {
 	pr_info("Using standard PSCI v0.2 function IDs\n");
@@ -330,6 +360,8 @@ static int __init psci_probe(void)
 
 	psci_0_2_set_functions();
 
+	psci_init_system_suspend();
+
 	return 0;
 }
 
-- 
2.9.3

