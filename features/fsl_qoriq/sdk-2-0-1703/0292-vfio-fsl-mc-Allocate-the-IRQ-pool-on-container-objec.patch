From e7b90b6252a68803e5776229789ca9857982ac5c Mon Sep 17 00:00:00 2001
From: Catalin Horghidan <catalin.horghidan@nxp.com>
Date: Fri, 28 Oct 2016 18:46:38 +0300
Subject: [PATCH 292/388] vfio fsl-mc: Allocate the IRQ pool on container
 object scan

Don't preallocate the IRQ pool before scanning for objects
to default size FSL_MC_IRQ_POOL_MAX_EXTRA_IRQS (64) since
the container may have more objects than expected max value.

Signed-off-by: Catalin Horghidan <catalin.horghidan@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/vfio/fsl-mc/vfio_fsl_mc.c | 24 ++++++------------------
 1 file changed, 6 insertions(+), 18 deletions(-)

diff --git a/drivers/vfio/fsl-mc/vfio_fsl_mc.c b/drivers/vfio/fsl-mc/vfio_fsl_mc.c
index ffbe845..1c6281d 100644
--- a/drivers/vfio/fsl-mc/vfio_fsl_mc.c
+++ b/drivers/vfio/fsl-mc/vfio_fsl_mc.c
@@ -403,23 +403,17 @@ static int vfio_fsl_mc_probe(struct fsl_mc_device *mc_dev)
 			goto clean_resource_pool;
 		}
 
-		if (fsl_mc_interrupts_supported() && !mc_bus->irq_resources) {
-			irq_count = FSL_MC_IRQ_POOL_MAX_EXTRA_IRQS;
-			ret = fsl_mc_populate_irq_pool(mc_bus, irq_count);
-			if (ret < 0) {
-				dev_err(dev, "%s: Failed to init irq-pool\n",
-				__func__);
-				goto free_open_dprc;
-			}
-		}
-
 		mutex_lock(&mc_bus->scan_mutex);
+		/* scan container and initialize IRQ pool
+		 * before adding devices */
 		ret = dprc_scan_objects(mc_dev, mc_dev->driver_override,
-					&irq_count);
+					&irq_count,
+					FSL_MC_SCAN_DPRC_POPULATE_IRQ_POOL);
 		mutex_unlock(&mc_bus->scan_mutex);
+
 		if (ret) {
 			dev_err(dev, "dprc_scan_objects() fails (%d)\n", ret);
-			goto clean_irq_pool;
+			goto dprc_clean_scan_objects;
 		}
 
 		ret = vfio_add_group_dev(dev, &vfio_fsl_mc_ops, vdev);
@@ -466,12 +460,6 @@ dprc_clean_scan_objects:
 	fsl_mc_cleanup_irq_pool(mc_bus);
 	device_for_each_child(&mc_dev->dev, NULL, vfio_fsl_mc_device_remove);
 
-clean_irq_pool:
-	fsl_mc_cleanup_irq_pool(mc_bus);
-
-free_open_dprc:
-	dprc_close(vfio_atomic_mc_io, 0, mc_dev->mc_handle);
-
 clean_resource_pool:
 	dprc_cleanup_all_resource_pools(mc_dev);
 	dprc_close(mc_dev->mc_io, 0, mc_dev->mc_handle);
-- 
2.9.3

