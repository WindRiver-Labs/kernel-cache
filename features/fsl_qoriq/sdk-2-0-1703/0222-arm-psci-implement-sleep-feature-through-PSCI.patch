From a0ecc0d92891d5e14987b2c55c1dbc9d1b5f4c75 Mon Sep 17 00:00:00 2001
From: Chenhui Zhao <chenhui.zhao@nxp.com>
Date: Fri, 16 Dec 2016 17:34:35 +0800
Subject: [PATCH 222/388] arm: psci: implement sleep feature through PSCI

Support sleep feature through PSCI. This is applicable to
LS1012, LS1043, LS1046 and so on, running a 32-bit kernel.

The command to enter sleep:
echo mem > /sys/power/state

Note that this has no effect on the sleep feature of LS1021A.

Signed-off-by: Chenhui Zhao <chenhui.zhao@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/arm/kernel/psci.c     | 33 +++++++++++++++++++++++++++++++++
 arch/arm/mach-imx/pm-ls1.c |  6 ++----
 2 files changed, 35 insertions(+), 4 deletions(-)

diff --git a/arch/arm/kernel/psci.c b/arch/arm/kernel/psci.c
index f90fdf4..ed45013 100644
--- a/arch/arm/kernel/psci.c
+++ b/arch/arm/kernel/psci.c
@@ -24,6 +24,8 @@
 #include <asm/compiler.h>
 #include <asm/errno.h>
 #include <asm/psci.h>
+#include <linux/suspend.h>
+#include <asm/suspend.h>
 #include <asm/system_misc.h>
 
 struct psci_operations psci_ops;
@@ -176,6 +178,35 @@ static void psci_sys_poweroff(void)
 	invoke_psci_fn(PSCI_0_2_FN_SYSTEM_OFF, 0, 0, 0);
 }
 
+static int psci_system_suspend(unsigned long unused)
+{
+	struct psci_power_state state = {
+		.id = 0,
+		.type = PSCI_POWER_STATE_TYPE_POWER_DOWN,
+		.affinity_level = 2, /* system level */
+	};
+
+	return psci_cpu_suspend(state, virt_to_phys(cpu_resume));
+}
+
+static int psci_system_suspend_enter(suspend_state_t state)
+{
+	return cpu_suspend(0, psci_system_suspend);
+}
+
+static const struct platform_suspend_ops psci_suspend_ops = {
+	.valid          = suspend_valid_only_mem,
+	.enter          = psci_system_suspend_enter,
+};
+
+static void __init psci_init_system_suspend(void)
+{
+	if (!IS_ENABLED(CONFIG_SUSPEND))
+		return;
+
+	suspend_set_ops(&psci_suspend_ops);
+}
+
 /*
  * PSCI Function IDs for v0.2+ are well defined so use
  * standard values.
@@ -233,6 +264,8 @@ static int psci_0_2_init(struct device_node *np)
 
 	pm_power_off = psci_sys_poweroff;
 
+	psci_init_system_suspend();
+
 out_put_node:
 	of_node_put(np);
 	return err;
diff --git a/arch/arm/mach-imx/pm-ls1.c b/arch/arm/mach-imx/pm-ls1.c
index 38b4aec..486f21b 100644
--- a/arch/arm/mach-imx/pm-ls1.c
+++ b/arch/arm/mach-imx/pm-ls1.c
@@ -541,10 +541,8 @@ static int __init ls1_pm_init(void)
 	int ret = 0;
 
 	np = of_find_matching_node_and_match(NULL, rcpm_matches, &match);
-	if (!np) {
-		pr_err("%s: can't find the rcpm node.\n", __func__);
-		return -EINVAL;
-	}
+	if (!np)
+		return 0;
 
 	base = of_iomap(np, 0);
 	of_node_put(np);
-- 
2.9.3

