From 43246513ce52a94e14d6e8d72e46e4a40862b6e0 Mon Sep 17 00:00:00 2001
From: Iordache Florinel-R70177 <florinel.iordache@nxp.com>
Date: Mon, 10 Oct 2016 10:53:53 +0300
Subject: [PATCH 058/388] QLINUX-5975: LS1046A DPAA Fman driver integration

[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_fman/Kconfig    |  4 +--
 .../freescale/sdk_fman/Peripherals/FM/fm.c         |  2 +-
 .../freescale/sdk_fman/inc/Peripherals/dpaa_ext.h  | 27 +++++++++--------
 .../sdk_fman/src/wrapper/lnxwrp_fm_port.c          | 35 +++++++---------------
 .../sdk_fman/src/wrapper/lnxwrp_ioctls_fm.c        |  2 +-
 5 files changed, 29 insertions(+), 41 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_fman/Kconfig b/drivers/net/ethernet/freescale/sdk_fman/Kconfig
index 0b3e581..de5e22a 100644
--- a/drivers/net/ethernet/freescale/sdk_fman/Kconfig
+++ b/drivers/net/ethernet/freescale/sdk_fman/Kconfig
@@ -2,7 +2,7 @@ menu "Frame Manager support"
 
 menuconfig FSL_SDK_FMAN
 	bool "Freescale Frame Manager (datapath) support - SDK driver"
-	depends on (FSL_SOC || ARM64) && FSL_BMAN && FSL_QMAN
+	depends on (FSL_SOC || ARM64 || ARM) && FSL_BMAN && FSL_QMAN
 	default y
 	---help---
 		If unsure, say Y.
@@ -23,7 +23,7 @@ choice
 
 config FMAN_ARM
 	bool "LS1043"
-	depends on ARM64
+	depends on ARM64 || ARM
 	---help---
 	  Choose "LS1043" for the ARM platforms:
 	  LS1043
diff --git a/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/fm.c b/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/fm.c
index 9a9fd93..5cd04f7 100644
--- a/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/fm.c
+++ b/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/fm.c
@@ -50,7 +50,7 @@
 #include "fm_common.h"
 #include "fm_ipc.h"
 #include "fm.h"
-#ifndef CONFIG_ARM64
+#ifndef CONFIG_FMAN_ARM
 #include <linux/fsl/svr.h>
 #endif
 #include <linux/fsl/guts.h>
diff --git a/drivers/net/ethernet/freescale/sdk_fman/inc/Peripherals/dpaa_ext.h b/drivers/net/ethernet/freescale/sdk_fman/inc/Peripherals/dpaa_ext.h
index 66fa760..e6d9e93 100644
--- a/drivers/net/ethernet/freescale/sdk_fman/inc/Peripherals/dpaa_ext.h
+++ b/drivers/net/ethernet/freescale/sdk_fman/inc/Peripherals/dpaa_ext.h
@@ -59,8 +59,19 @@
  @Description   Frame descriptor
 *//***************************************************************************/
 typedef _Packed struct t_DpaaFD {
-    volatile uint32_t    id;                /**< FD id */
-    volatile uint32_t    addrl;             /**< Data Address */
+#if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
+    volatile uint8_t liodn;
+    volatile uint8_t bpid;
+    volatile uint8_t elion;
+    volatile uint8_t addrh;
+    volatile uint32_t addrl;
+#else
+    volatile uint32_t addrl;
+    volatile uint8_t addrh;
+    volatile uint8_t elion;
+    volatile uint8_t bpid;
+    volatile uint8_t liodn;
+ #endif
     volatile uint32_t    length;            /**< Frame length */
     volatile uint32_t    status;            /**< FD status */
 } _PackedType t_DpaaFD;
@@ -95,11 +106,7 @@ typedef enum e_DpaaFDFormatType {
 #define DPAA_FD_OFFSET_MASK   0x1ff00000           /**< FD OFFSET field mask */
 #define DPAA_FD_LENGTH_MASK   0x000fffff           /**< FD LENGTH field mask */
 
-#define DPAA_FD_GET_DD(fd)            ((((t_DpaaFD *)fd)->id & DPAA_FD_DD_MASK) >> (31-1))              /**< Macro to get FD DD field */
-#define DPAA_FD_GET_PID(fd)           (((((t_DpaaFD *)fd)->id & DPAA_FD_PID_MASK) >> (31-7)) | \
-                                        ((((t_DpaaFD *)fd)->id & DPAA_FD_ELIODN_MASK) >> (31-19-6)))    /**< Macro to get FD PID field */
-#define DPAA_FD_GET_BPID(fd)          ((((t_DpaaFD *)fd)->id & DPAA_FD_BPID_MASK) >> (31-15))           /**< Macro to get FD BPID field */
-#define DPAA_FD_GET_ADDRH(fd)         (((t_DpaaFD *)fd)->id & DPAA_FD_ADDRH_MASK)                       /**< Macro to get FD ADDRH field */
+#define DPAA_FD_GET_ADDRH(fd)         ((t_DpaaFD *)fd)->addrh                       /**< Macro to get FD ADDRH field */
 #define DPAA_FD_GET_ADDRL(fd)         ((t_DpaaFD *)fd)->addrl                                           /**< Macro to get FD ADDRL field */
 #define DPAA_FD_GET_PHYS_ADDR(fd)     ((physAddress_t)(((uint64_t)DPAA_FD_GET_ADDRH(fd) << 32) | (uint64_t)DPAA_FD_GET_ADDRL(fd))) /**< Macro to get FD ADDR field */
 #define DPAA_FD_GET_FORMAT(fd)        ((((t_DpaaFD *)fd)->length & DPAA_FD_FORMAT_MASK) >> (31-2))      /**< Macro to get FD FORMAT field */
@@ -108,11 +115,7 @@ typedef enum e_DpaaFDFormatType {
 #define DPAA_FD_GET_STATUS(fd)        ((t_DpaaFD *)fd)->status                                          /**< Macro to get FD STATUS field */
 #define DPAA_FD_GET_ADDR(fd)          XX_PhysToVirt(DPAA_FD_GET_PHYS_ADDR(fd))                          /**< Macro to get FD ADDR (virtual) */
 
-#define DPAA_FD_SET_DD(fd,val)        (((t_DpaaFD *)fd)->id = ((((t_DpaaFD *)fd)->id & ~DPAA_FD_DD_MASK) | (((val) << (31-1)) & DPAA_FD_DD_MASK )))      /**< Macro to set FD DD field */
-                                                                                                        /**< Macro to set FD PID field or LIODN offset*/
-#define DPAA_FD_SET_PID(fd,val)       (((t_DpaaFD *)fd)->id = ((((t_DpaaFD *)fd)->id & ~(DPAA_FD_PID_MASK|DPAA_FD_ELIODN_MASK)) | ((((val) << (31-7)) & DPAA_FD_PID_MASK) | ((((val)>>6) << (31-19)) & DPAA_FD_ELIODN_MASK))))
-#define DPAA_FD_SET_BPID(fd,val)      (((t_DpaaFD *)fd)->id = ((((t_DpaaFD *)fd)->id & ~DPAA_FD_BPID_MASK) | (((val)  << (31-15)) & DPAA_FD_BPID_MASK))) /**< Macro to set FD BPID field */
-#define DPAA_FD_SET_ADDRH(fd,val)     (((t_DpaaFD *)fd)->id = ((((t_DpaaFD *)fd)->id & ~DPAA_FD_ADDRH_MASK) | ((val) & DPAA_FD_ADDRH_MASK)))            /**< Macro to set FD ADDRH field */
+#define DPAA_FD_SET_ADDRH(fd,val)     ((t_DpaaFD *)fd)->addrh = (val)            /**< Macro to set FD ADDRH field */
 #define DPAA_FD_SET_ADDRL(fd,val)     ((t_DpaaFD *)fd)->addrl = (val)                                   /**< Macro to set FD ADDRL field */
 #define DPAA_FD_SET_ADDR(fd,val)                            \
 do {                                                        \
diff --git a/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm_port.c b/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm_port.c
index 92cd92d..b1c90d9 100644
--- a/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm_port.c
+++ b/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm_port.c
@@ -104,7 +104,11 @@ static enum qman_cb_dqrr_result qm_tx_conf_dqrr_cb(struct qman_portal *portal,
 #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__
 {
 	/* extract the HC frame address */
-	uint64_t hcf_va = (uint64_t)XX_PhysToVirt(((struct qm_fd *)&dq->fd)->addr);
+#ifdef CONFIG_ARM
+	uint32_t *hcf_va = XX_PhysToVirt(((struct qm_fd *)&dq->fd)->addr);
+#else
+	uint64_t hcf_va = (uint64_t)XX_PhysToVirt(qm_fd_addr((struct qm_fd *)&dq->fd));
+#endif
 	int hcf_l = ((struct qm_fd *)&dq->fd)->length20;
 	int i;
 
@@ -113,18 +117,6 @@ static enum qman_cb_dqrr_result qm_tx_conf_dqrr_cb(struct qman_portal *portal,
 		((uint32_t *)(hcf_va))[i] =
 			___constant_swab32(((uint32_t *)(hcf_va))[i]);
 }
-{
-	/* byteswap FD's 40bit address field LE to BE*/
-	uint8_t t;
-
-	t = ((uint8_t*)&dq->fd)[6];
-	((uint8_t*)&dq->fd)[6] = ((uint8_t*)&dq->fd)[5];
-	((uint8_t*)&dq->fd)[5] = ((uint8_t*)&dq->fd)[4];
-	((uint8_t*)&dq->fd)[4] = ((uint8_t*)&dq->fd)[3];
-	((uint8_t*)&dq->fd)[3] = ((uint8_t*)&dq->fd)[7];
-	((uint8_t*)&dq->fd)[7] = t;
-}
-
 #endif
 	FM_PCD_HcTxConf(p_LnxWrpFmDev->h_PcdDev, (t_DpaaFD *)&dq->fd);
 	spin_lock_irqsave(&lock, flags);
@@ -241,19 +233,12 @@ static t_Error QmEnqueueCB(t_Handle h_Arg, void *p_Fd)
 
 #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__
 {
-	/* byteswap FD's 40bit address field */
-	uint8_t t;
-
-	t = ((uint8_t*)p_Fd)[7];
-	((uint8_t*)p_Fd)[7] = ((uint8_t*)p_Fd)[3];
-	((uint8_t*)p_Fd)[3] = ((uint8_t*)p_Fd)[4];
-	((uint8_t*)p_Fd)[4] = ((uint8_t*)p_Fd)[5];
-	((uint8_t*)p_Fd)[5] = ((uint8_t*)p_Fd)[6];
-	((uint8_t*)p_Fd)[6] = t;
-}
-{
 	/* extract the HC frame address */
-	uint64_t hcf_va = (uint64_t)XX_PhysToVirt(((struct qm_fd *) p_Fd)->addr);
+#ifdef CONFIG_ARM
+	uint32_t *hcf_va = XX_PhysToVirt(((struct qm_fd *) p_Fd)->addr);
+#else
+	uint64_t hcf_va = (uint64_t)XX_PhysToVirt(qm_fd_addr((struct qm_fd *) p_Fd));
+#endif
 	int hcf_l = ((struct qm_fd *)p_Fd)->length20;
 	int i;
 
diff --git a/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_ioctls_fm.c b/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_ioctls_fm.c
index f75c286..8f6223b 100644
--- a/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_ioctls_fm.c
+++ b/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_ioctls_fm.c
@@ -350,7 +350,7 @@ void LnxWrpPCDIOCTLTypeChecking(void)
     ASSERT_COND(sizeof(ioc_fm_pcd_from_field_t) == sizeof(t_FmPcdFromField));
     ASSERT_COND(sizeof(ioc_fm_pcd_distinction_unit_t) == sizeof(t_FmPcdDistinctionUnit));
 
-#if defined(CONFIG_FMAN_ARM)
+#if defined(CONFIG_ARM64)
     /* different alignment */
     ASSERT_COND(sizeof(ioc_fm_pcd_net_env_params_t) == sizeof(t_FmPcdNetEnvParams) + sizeof(void *) + 4);
 #else
-- 
2.9.3

