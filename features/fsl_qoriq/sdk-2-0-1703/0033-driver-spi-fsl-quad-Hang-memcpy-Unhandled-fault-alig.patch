From 708306dfa3605cbd9e77d9b3730ec5232dfcf213 Mon Sep 17 00:00:00 2001
From: Yunhui Cui <yunhui.cui@nxp.com>
Date: Mon, 15 Aug 2016 17:07:55 +0800
Subject: [PATCH 033/388] driver: spi: fsl-quad: Hang memcpy: Unhandled fault:
 alignment fault

vmap/iomap based on whether the buffer is in memory region or reserved region.
However, both map it as non-cacheable memory.
For armv8 specifically, non-cacheable mapping requests use a memory type
that has to be accessed aligned to the request size. memcpy() doesn't guarantee
that. memcpy_toio() can guarantee 4-bytes alignment.

Signed-off-by: Yunhui Cui <yunhui.cui@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/mtd/spi-nor/fsl-quadspi.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/mtd/spi-nor/fsl-quadspi.c b/drivers/mtd/spi-nor/fsl-quadspi.c
index 6b80172..9d29efa 100644
--- a/drivers/mtd/spi-nor/fsl-quadspi.c
+++ b/drivers/mtd/spi-nor/fsl-quadspi.c
@@ -1072,7 +1072,7 @@ static ssize_t fsl_qspi_read(struct spi_nor *nor, loff_t from,
 		len);
 
 	/* Read out the data directly from the AHB buffer.*/
-	memcpy(buf, q->ahb_addr + q->chip_base_addr + from - q->memmap_offs,
+	memcpy_toio(buf, q->ahb_addr + q->chip_base_addr + from - q->memmap_offs,
 		len);
 
 	return len;
-- 
2.9.3

