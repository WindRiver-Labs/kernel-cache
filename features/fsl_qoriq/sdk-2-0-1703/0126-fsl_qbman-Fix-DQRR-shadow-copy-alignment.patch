From eedeb108bf8c37f5fb362c0b554f9dc3894239c5 Mon Sep 17 00:00:00 2001
From: Roy Pledge <roy.pledge@nxp.com>
Date: Sun, 25 Sep 2016 10:26:35 -0400
Subject: [PATCH 126/388] fsl_qbman: Fix DQRR shadow copy alignment

The DQRR shadow copy used on little endian systems must
have the same alignment as the actual DQRR to ensure
index calculation derived from addresses is correct.

Signed-off-by: Roy Pledge <roy.pledge@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c | 13 ++++++-------
 1 file changed, 6 insertions(+), 7 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 06b8e35..28225ff 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -126,13 +126,12 @@ struct qman_portal {
 	/* power management data */
 	u32 save_isdr;
 #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__
-	/* Keep a shadow copy of the DQRR on LE systems
-	   as the SW needs to do byteswaps of read only
-	   memory.  Must be aligned to the size of the
-	   ring to ensure easy index calcualtions based
-	   on address */
-	struct qm_dqrr_entry shadow_dqrr[QM_DQRR_SIZE]
-	            __attribute__((aligned(512)));
+	/* Keep a shadow copy of the DQRR on LE systems as the SW needs to
+	 * do byte swaps of DQRR read only memory.  First entry must be aligned
+	 * to 2 ** 10 to ensure DQRR index calculations based shadow copy
+	 * address (6 bits for address shift + 4 bits for the DQRR size).
+	 */
+	struct qm_dqrr_entry shadow_dqrr[QM_DQRR_SIZE] __aligned(1024);
 #endif
 };
 
-- 
2.9.3

