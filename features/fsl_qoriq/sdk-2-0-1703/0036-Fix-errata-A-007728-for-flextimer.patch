From 23f4ae1772c48b5dd3f90492b248532b79918c06 Mon Sep 17 00:00:00 2001
From: Meng Yi <meng.yi@nxp.com>
Date: Fri, 2 Sep 2016 12:08:27 +0800
Subject: [PATCH 036/388] Fix errata A-007728 for flextimer

If the FTM counter reaches the FTM_MOD value between the reading of the
TOF bit and the writing of 0 to the TOF bit, the process of clearing the
TOF bit does not work as expected when FTMx_CONF[NUMTOF] != 0 and the
current TOF count is less than FTMx_CONF[NUMTOF]. If the above condition
is met, the TOF bit remains set. If the TOF interrupt is enabled
(FTMx_SC[TOIE] = 1), the TOF interrupt also remains asserted.

Above is the errata discription

In one word: software clearing TOF bit not works when FTMx_CONF[NUMTOF]
was seted as nonzero and FTM counter reaches the FTM_MOD value.

The workaround is clearing TOF bit until it works(FTM counter doesn't
always reache the FTM_MOD anyway),which may cost some cycles.

Signed-off-by: Meng Yi <meng.yi@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/clocksource/fsl_ftm_timer.c    | 7 ++-----
 drivers/soc/fsl/layerscape/ftm_alarm.c | 7 ++-----
 2 files changed, 4 insertions(+), 10 deletions(-)

diff --git a/drivers/clocksource/fsl_ftm_timer.c b/drivers/clocksource/fsl_ftm_timer.c
index 454227d..9b0cbbf 100644
--- a/drivers/clocksource/fsl_ftm_timer.c
+++ b/drivers/clocksource/fsl_ftm_timer.c
@@ -83,11 +83,8 @@ static inline void ftm_counter_disable(void __iomem *base)
 
 static inline void ftm_irq_acknowledge(void __iomem *base)
 {
-	u32 val;
-
-	val = ftm_readl(base + FTM_SC);
-	val &= ~FTM_SC_TOF;
-	ftm_writel(val, base + FTM_SC);
+	while (FTM_SC_TOF & ftm_readl(base + FTM_SC))
+		ftm_writel(ftm_readl(base + FTM_SC) & (~FTM_SC_TOF), base + FTM_SC);
 }
 
 static inline void ftm_irq_enable(void __iomem *base)
diff --git a/drivers/soc/fsl/layerscape/ftm_alarm.c b/drivers/soc/fsl/layerscape/ftm_alarm.c
index c42b26b..1cc5891 100644
--- a/drivers/soc/fsl/layerscape/ftm_alarm.c
+++ b/drivers/soc/fsl/layerscape/ftm_alarm.c
@@ -78,11 +78,8 @@ static inline void ftm_counter_disable(void __iomem *base)
 
 static inline void ftm_irq_acknowledge(void __iomem *base)
 {
-	u32 val;
-
-	val = ftm_readl(base + FTM_SC);
-	val &= ~FTM_SC_TOF;
-	ftm_writel(val, base + FTM_SC);
+	while (FTM_SC_TOF & ftm_readl(base + FTM_SC))
+		ftm_writel(ftm_readl(base + FTM_SC) & (~FTM_SC_TOF), base + FTM_SC);
 }
 
 static inline void ftm_irq_enable(void __iomem *base)
-- 
2.9.3

