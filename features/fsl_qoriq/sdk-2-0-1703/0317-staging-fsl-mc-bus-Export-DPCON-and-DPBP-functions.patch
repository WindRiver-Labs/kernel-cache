From 92dccd66fdf3d855e8cc9e6272d58b5d19427020 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Tue, 6 Dec 2016 18:51:53 +0200
Subject: [PATCH 317/388] staging: fsl-mc/bus: Export DPCON and DPBP functions

Export symbols used by the Ethernet driver, in order to
allow it to be built as a module. These exports were
accidentally deleted when upgrading to MC10 flibs.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-mc/bus/dpbp.c  | 6 ++++++
 drivers/staging/fsl-mc/bus/dpcon.c | 7 +++++++
 2 files changed, 13 insertions(+)

diff --git a/drivers/staging/fsl-mc/bus/dpbp.c b/drivers/staging/fsl-mc/bus/dpbp.c
index 66095ae..481fd9b 100644
--- a/drivers/staging/fsl-mc/bus/dpbp.c
+++ b/drivers/staging/fsl-mc/bus/dpbp.c
@@ -59,6 +59,7 @@ int dpbp_open(struct fsl_mc_io *mc_io,
 
 	return err;
 }
+EXPORT_SYMBOL(dpbp_open);
 
 int dpbp_close(struct fsl_mc_io *mc_io,
 	       uint32_t cmd_flags,
@@ -73,6 +74,7 @@ int dpbp_close(struct fsl_mc_io *mc_io,
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
+EXPORT_SYMBOL(dpbp_close);
 
 int dpbp_create(struct fsl_mc_io *mc_io,
 		uint16_t dprc_token,
@@ -131,6 +133,7 @@ int dpbp_enable(struct fsl_mc_io *mc_io,
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
+EXPORT_SYMBOL(dpbp_enable);
 
 int dpbp_disable(struct fsl_mc_io *mc_io,
 		 uint32_t cmd_flags,
@@ -146,6 +149,7 @@ int dpbp_disable(struct fsl_mc_io *mc_io,
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
+EXPORT_SYMBOL(dpbp_disable);
 
 int dpbp_is_enabled(struct fsl_mc_io *mc_io,
 		    uint32_t cmd_flags,
@@ -183,6 +187,7 @@ int dpbp_reset(struct fsl_mc_io *mc_io,
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
+EXPORT_SYMBOL(dpbp_reset);
 
 int dpbp_set_irq(struct fsl_mc_io	*mc_io,
 		 uint32_t		cmd_flags,
@@ -400,6 +405,7 @@ int dpbp_get_attributes(struct fsl_mc_io *mc_io,
 
 	return 0;
 }
+EXPORT_SYMBOL(dpbp_get_attributes);
 
 int dpbp_set_notifications(struct fsl_mc_io	*mc_io,
 			   uint32_t		cmd_flags,
diff --git a/drivers/staging/fsl-mc/bus/dpcon.c b/drivers/staging/fsl-mc/bus/dpcon.c
index 5fec51b..f205caa 100644
--- a/drivers/staging/fsl-mc/bus/dpcon.c
+++ b/drivers/staging/fsl-mc/bus/dpcon.c
@@ -58,6 +58,7 @@ int dpcon_open(struct fsl_mc_io *mc_io,
 
 	return 0;
 }
+EXPORT_SYMBOL(dpcon_open);
 
 int dpcon_close(struct fsl_mc_io *mc_io,
 		uint32_t cmd_flags,
@@ -73,6 +74,7 @@ int dpcon_close(struct fsl_mc_io *mc_io,
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
+EXPORT_SYMBOL(dpcon_close);
 
 int dpcon_create(struct fsl_mc_io *mc_io,
 		 uint16_t dprc_token,
@@ -131,6 +133,7 @@ int dpcon_enable(struct fsl_mc_io *mc_io,
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
+EXPORT_SYMBOL(dpcon_enable);
 
 int dpcon_disable(struct fsl_mc_io *mc_io,
 		  uint32_t cmd_flags,
@@ -146,6 +149,7 @@ int dpcon_disable(struct fsl_mc_io *mc_io,
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
+EXPORT_SYMBOL(dpcon_disable);
 
 int dpcon_is_enabled(struct fsl_mc_io *mc_io,
 		     uint32_t cmd_flags,
@@ -183,6 +187,7 @@ int dpcon_reset(struct fsl_mc_io *mc_io,
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
+EXPORT_SYMBOL(dpcon_reset);
 
 int dpcon_set_irq(struct fsl_mc_io	*mc_io,
 		  uint32_t		cmd_flags,
@@ -384,6 +389,7 @@ int dpcon_get_attributes(struct fsl_mc_io *mc_io,
 
 	return 0;
 }
+EXPORT_SYMBOL(dpcon_get_attributes);
 
 int dpcon_set_notification(struct fsl_mc_io *mc_io,
 			   uint32_t cmd_flags,
@@ -401,6 +407,7 @@ int dpcon_set_notification(struct fsl_mc_io *mc_io,
 	/* send command to mc*/
 	return mc_send_command(mc_io, &cmd);
 }
+EXPORT_SYMBOL(dpcon_set_notification);
 
 int dpcon_get_api_version(struct fsl_mc_io *mc_io,
 			  uint32_t cmd_flags,
-- 
2.9.3

