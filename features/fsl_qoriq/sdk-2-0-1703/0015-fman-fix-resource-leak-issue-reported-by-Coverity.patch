From 3fbc6897c668728d0be20743dbdb720234f1ece8 Mon Sep 17 00:00:00 2001
From: Ioana Ciornei <ioana.ciornei@nxp.com>
Date: Thu, 19 May 2016 18:30:09 +0300
Subject: [PATCH 015/388] fman: fix resource leak issue reported by Coverity

Fix resource leak issue occuring on an error path

Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm.c    | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm.c b/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm.c
index 9abd345..904bd88 100644
--- a/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm.c
+++ b/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm.c
@@ -565,6 +565,7 @@ static t_LnxWrpFmDev * ReadFmDevTreeNode (struct platform_device *of_dev)
     p_LnxWrpFmDev->irq = of_irq_to_resource(fm_node, 0, NULL);
     if (unlikely(p_LnxWrpFmDev->irq == /*NO_IRQ*/0)) {
         REPORT_ERROR(MAJOR, E_INVALID_VALUE, ("of_irq_to_resource() = %d", NO_IRQ));
+        DestroyFmDev(p_LnxWrpFmDev);
         return NULL;
     }
 
@@ -573,6 +574,7 @@ static t_LnxWrpFmDev * ReadFmDevTreeNode (struct platform_device *of_dev)
 
     if (unlikely(p_LnxWrpFmDev->err_irq == /*NO_IRQ*/0)) {
         REPORT_ERROR(MAJOR, E_INVALID_VALUE, ("of_irq_to_resource() = %d", NO_IRQ));
+        DestroyFmDev(p_LnxWrpFmDev);
         return NULL;
     }
 
@@ -580,6 +582,7 @@ static t_LnxWrpFmDev * ReadFmDevTreeNode (struct platform_device *of_dev)
     _errno = of_address_to_resource(fm_node, 0, &res);
     if (unlikely(_errno < 0)) {
         REPORT_ERROR(MAJOR, E_INVALID_VALUE, ("of_address_to_resource() = %d", _errno));
+        DestroyFmDev(p_LnxWrpFmDev);
         return NULL;
     }
 
@@ -593,7 +596,8 @@ static t_LnxWrpFmDev * ReadFmDevTreeNode (struct platform_device *of_dev)
         dev_err(&of_dev->dev, "%s: Failed to get FM clock structure\n",
                 __func__);
         of_node_put(fm_node);
-	return NULL;
+        DestroyFmDev(p_LnxWrpFmDev);
+        return NULL;
     }
 
     clk_rate = clk_get_rate(clk);
@@ -601,6 +605,7 @@ static t_LnxWrpFmDev * ReadFmDevTreeNode (struct platform_device *of_dev)
         dev_err(&of_dev->dev, "%s: Failed to determine FM clock rate\n",
                 __func__);
         of_node_put(fm_node);
+        DestroyFmDev(p_LnxWrpFmDev);
         return NULL;
     }
 
@@ -618,6 +623,7 @@ static t_LnxWrpFmDev * ReadFmDevTreeNode (struct platform_device *of_dev)
             _errno = of_address_to_resource(dev_node, 0, &res);
             if (unlikely(_errno < 0)) {
                 REPORT_ERROR(MAJOR, E_INVALID_VALUE, ("of_address_to_resource() = %d", _errno));
+                DestroyFmDev(p_LnxWrpFmDev);
                 return NULL;
             }
 
@@ -650,6 +656,7 @@ static t_LnxWrpFmDev * ReadFmDevTreeNode (struct platform_device *of_dev)
             _errno = of_address_to_resource(dev_node, 0, &res);
             if (unlikely(_errno < 0)) {
                 REPORT_ERROR(MAJOR, E_INVALID_VALUE, ("of_address_to_resource() = %d", _errno));
+                DestroyFmDev(p_LnxWrpFmDev);
                 return NULL;
             }
 
@@ -666,6 +673,7 @@ static t_LnxWrpFmDev * ReadFmDevTreeNode (struct platform_device *of_dev)
             _errno = of_address_to_resource(dev_node, 0, &res);
             if (unlikely(_errno < 0)) {
                 REPORT_ERROR(MAJOR, E_INVALID_VALUE, ("of_address_to_resource() = %d", _errno));
+                DestroyFmDev(p_LnxWrpFmDev);
                 return NULL;
             }
             p_LnxWrpFmDev->fmVspBaseAddr = 0;
-- 
2.9.3

