From d409e60678bcae821f831866091cd97340d483c3 Mon Sep 17 00:00:00 2001
From: Ioana Ciornei <ioana.ciornei@nxp.com>
Date: Mon, 7 Nov 2016 14:40:33 +0200
Subject: [PATCH 294/388] dpaa2-ethsw: replace uint16_t by u16 type

Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethsw/dpsw.c | 274 ++++++++++++-------------
 drivers/staging/fsl-dpaa2/ethsw/dpsw.h | 360 ++++++++++++++++-----------------
 2 files changed, 317 insertions(+), 317 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethsw/dpsw.c b/drivers/staging/fsl-dpaa2/ethsw/dpsw.c
index c50eae6..555af9f 100644
--- a/drivers/staging/fsl-dpaa2/ethsw/dpsw.c
+++ b/drivers/staging/fsl-dpaa2/ethsw/dpsw.c
@@ -35,8 +35,8 @@
 #include "dpsw-cmd.h"
 
 /* internal functions */
-static void build_if_id_bitmap(const uint16_t *if_id,
-			       const uint16_t num_ifs,
+static void build_if_id_bitmap(const u16 *if_id,
+			       const u16 num_ifs,
 			       struct mc_command *cmd,
 			       int start_param)
 {
@@ -47,8 +47,8 @@ static void build_if_id_bitmap(const uint16_t *if_id,
 			(if_id[i] % 64), 1, 1);
 }
 
-static int read_if_id_bitmap(uint16_t *if_id,
-			     uint16_t *num_ifs,
+static int read_if_id_bitmap(u16 *if_id,
+			     u16 *num_ifs,
 			     struct mc_command *cmd,
 			     int start_param)
 {
@@ -62,11 +62,11 @@ static int read_if_id_bitmap(uint16_t *if_id,
 		count += bitmap[i];
 	}
 
-	*num_ifs = (uint16_t)count;
+	*num_ifs = (u16)count;
 
 	for (i = 0; (i < DPSW_MAX_IF) && (j < count); i++) {
 		if (bitmap[i]) {
-			if_id[j] = (uint16_t)i;
+			if_id[j] = (u16)i;
 			j++;
 		}
 	}
@@ -78,7 +78,7 @@ static int read_if_id_bitmap(uint16_t *if_id,
 int dpsw_open(struct fsl_mc_io *mc_io,
 	      u32 cmd_flags,
 	      int dpsw_id,
-	      uint16_t *token)
+	      u16 *token)
 {
 	struct mc_command cmd = { 0 };
 	int err;
@@ -102,7 +102,7 @@ int dpsw_open(struct fsl_mc_io *mc_io,
 
 int dpsw_close(struct fsl_mc_io *mc_io,
 	       u32 cmd_flags,
-	uint16_t token)
+	u16 token)
 {
 	struct mc_command cmd = { 0 };
 
@@ -118,7 +118,7 @@ int dpsw_close(struct fsl_mc_io *mc_io,
 int dpsw_create(struct fsl_mc_io *mc_io,
 		u32 cmd_flags,
 		const struct dpsw_cfg *cfg,
-		uint16_t *token)
+		u16 *token)
 {
 	struct mc_command cmd = { 0 };
 	int err;
@@ -142,7 +142,7 @@ int dpsw_create(struct fsl_mc_io *mc_io,
 
 int dpsw_destroy(struct fsl_mc_io *mc_io,
 		 u32 cmd_flags,
-		 uint16_t token)
+		 u16 token)
 {
 	struct mc_command cmd = { 0 };
 
@@ -157,7 +157,7 @@ int dpsw_destroy(struct fsl_mc_io *mc_io,
 
 int dpsw_enable(struct fsl_mc_io *mc_io,
 		u32 cmd_flags,
-		uint16_t token)
+		u16 token)
 {
 	struct mc_command cmd = { 0 };
 
@@ -172,7 +172,7 @@ int dpsw_enable(struct fsl_mc_io *mc_io,
 
 int dpsw_disable(struct fsl_mc_io *mc_io,
 		 u32 cmd_flags,
-		 uint16_t token)
+		 u16 token)
 {
 	struct mc_command cmd = { 0 };
 
@@ -187,7 +187,7 @@ int dpsw_disable(struct fsl_mc_io *mc_io,
 
 int dpsw_is_enabled(struct fsl_mc_io *mc_io,
 		    u32 cmd_flags,
-		    uint16_t token,
+		    u16 token,
 		    int *en)
 {
 	struct mc_command cmd = { 0 };
@@ -210,7 +210,7 @@ int dpsw_is_enabled(struct fsl_mc_io *mc_io,
 
 int dpsw_reset(struct fsl_mc_io *mc_io,
 	       u32 cmd_flags,
-	       uint16_t token)
+	       u16 token)
 {
 	struct mc_command cmd = { 0 };
 
@@ -225,7 +225,7 @@ int dpsw_reset(struct fsl_mc_io *mc_io,
 
 int dpsw_set_irq(struct fsl_mc_io *mc_io,
 		 u32 cmd_flags,
-		 uint16_t token,
+		 u16 token,
 		 uint8_t irq_index,
 		 struct dpsw_irq_cfg *irq_cfg)
 {
@@ -243,7 +243,7 @@ int dpsw_set_irq(struct fsl_mc_io *mc_io,
 
 int dpsw_get_irq(struct fsl_mc_io *mc_io,
 		 u32 cmd_flags,
-		 uint16_t token,
+		 u16 token,
 		 uint8_t irq_index,
 		 int *type,
 		 struct dpsw_irq_cfg *irq_cfg)
@@ -270,7 +270,7 @@ int dpsw_get_irq(struct fsl_mc_io *mc_io,
 
 int dpsw_set_irq_enable(struct fsl_mc_io *mc_io,
 			u32 cmd_flags,
-			uint16_t token,
+			u16 token,
 			uint8_t irq_index,
 			uint8_t en)
 {
@@ -288,7 +288,7 @@ int dpsw_set_irq_enable(struct fsl_mc_io *mc_io,
 
 int dpsw_get_irq_enable(struct fsl_mc_io *mc_io,
 			u32 cmd_flags,
-			uint16_t token,
+			u16 token,
 			uint8_t irq_index,
 			uint8_t *en)
 {
@@ -314,7 +314,7 @@ int dpsw_get_irq_enable(struct fsl_mc_io *mc_io,
 
 int dpsw_set_irq_mask(struct fsl_mc_io *mc_io,
 		      u32 cmd_flags,
-		      uint16_t token,
+		      u16 token,
 		      uint8_t irq_index,
 		      u32 mask)
 {
@@ -332,7 +332,7 @@ int dpsw_set_irq_mask(struct fsl_mc_io *mc_io,
 
 int dpsw_get_irq_mask(struct fsl_mc_io *mc_io,
 		      u32 cmd_flags,
-		      uint16_t token,
+		      u16 token,
 		      uint8_t irq_index,
 		      u32 *mask)
 {
@@ -358,7 +358,7 @@ int dpsw_get_irq_mask(struct fsl_mc_io *mc_io,
 
 int dpsw_get_irq_status(struct fsl_mc_io *mc_io,
 			u32 cmd_flags,
-			uint16_t token,
+			u16 token,
 			uint8_t irq_index,
 			u32 *status)
 {
@@ -384,7 +384,7 @@ int dpsw_get_irq_status(struct fsl_mc_io *mc_io,
 
 int dpsw_clear_irq_status(struct fsl_mc_io *mc_io,
 			  u32 cmd_flags,
-			  uint16_t token,
+			  u16 token,
 			  uint8_t irq_index,
 			  u32 status)
 {
@@ -402,7 +402,7 @@ int dpsw_clear_irq_status(struct fsl_mc_io *mc_io,
 
 int dpsw_get_attributes(struct fsl_mc_io *mc_io,
 			u32 cmd_flags,
-			uint16_t token,
+			u16 token,
 			struct dpsw_attr *attr)
 {
 	struct mc_command cmd = { 0 };
@@ -426,8 +426,8 @@ int dpsw_get_attributes(struct fsl_mc_io *mc_io,
 
 int dpsw_set_reflection_if(struct fsl_mc_io *mc_io,
 			   u32 cmd_flags,
-			   uint16_t token,
-			   uint16_t if_id)
+			   u16 token,
+			   u16 if_id)
 {
 	struct mc_command cmd = { 0 };
 
@@ -443,8 +443,8 @@ int dpsw_set_reflection_if(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_link_cfg(struct fsl_mc_io *mc_io,
 			 u32 cmd_flags,
-			 uint16_t token,
-			 uint16_t if_id,
+			 u16 token,
+			 u16 if_id,
 			 struct dpsw_link_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -461,8 +461,8 @@ int dpsw_if_set_link_cfg(struct fsl_mc_io *mc_io,
 
 int dpsw_if_get_link_state(struct fsl_mc_io *mc_io,
 			   u32 cmd_flags,
-			   uint16_t token,
-			   uint16_t if_id,
+			   u16 token,
+			   u16 if_id,
 			   struct dpsw_link_state *state)
 {
 	struct mc_command cmd = { 0 };
@@ -487,8 +487,8 @@ int dpsw_if_get_link_state(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_flooding(struct fsl_mc_io *mc_io,
 			 u32 cmd_flags,
-			 uint16_t token,
-			 uint16_t if_id,
+			 u16 token,
+			 u16 if_id,
 			 int en)
 {
 	struct mc_command cmd = { 0 };
@@ -505,8 +505,8 @@ int dpsw_if_set_flooding(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_broadcast(struct fsl_mc_io *mc_io,
 			  u32 cmd_flags,
-			  uint16_t token,
-			  uint16_t if_id,
+			  u16 token,
+			  u16 if_id,
 			  int en)
 {
 	struct mc_command cmd = { 0 };
@@ -523,8 +523,8 @@ int dpsw_if_set_broadcast(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_multicast(struct fsl_mc_io *mc_io,
 			  u32 cmd_flags,
-			  uint16_t token,
-			  uint16_t if_id,
+			  u16 token,
+			  u16 if_id,
 			  int en)
 {
 	struct mc_command cmd = { 0 };
@@ -541,8 +541,8 @@ int dpsw_if_set_multicast(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_tci(struct fsl_mc_io *mc_io,
 		    u32 cmd_flags,
-		    uint16_t token,
-		    uint16_t if_id,
+		    u16 token,
+		    u16 if_id,
 		    const struct dpsw_tci_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -559,8 +559,8 @@ int dpsw_if_set_tci(struct fsl_mc_io *mc_io,
 
 int dpsw_if_get_tci(struct fsl_mc_io *mc_io,
 		    u32 cmd_flags,
-		    uint16_t token,
-		    uint16_t if_id,
+		    u16 token,
+		    u16 if_id,
 		    struct dpsw_tci_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -585,8 +585,8 @@ int dpsw_if_get_tci(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_stp(struct fsl_mc_io *mc_io,
 		    u32 cmd_flags,
-		    uint16_t token,
-		    uint16_t if_id,
+		    u16 token,
+		    u16 if_id,
 		    const struct dpsw_stp_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -603,8 +603,8 @@ int dpsw_if_set_stp(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_accepted_frames(struct fsl_mc_io *mc_io,
 				u32 cmd_flags,
-				uint16_t token,
-				uint16_t if_id,
+				u16 token,
+				u16 if_id,
 				const struct dpsw_accepted_frames_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -621,8 +621,8 @@ int dpsw_if_set_accepted_frames(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_accept_all_vlan(struct fsl_mc_io *mc_io,
 				u32 cmd_flags,
-				uint16_t token,
-				uint16_t if_id,
+				u16 token,
+				u16 if_id,
 				int accept_all)
 {
 	struct mc_command cmd = { 0 };
@@ -639,8 +639,8 @@ int dpsw_if_set_accept_all_vlan(struct fsl_mc_io *mc_io,
 
 int dpsw_if_get_counter(struct fsl_mc_io *mc_io,
 			u32 cmd_flags,
-			uint16_t token,
-			uint16_t if_id,
+			u16 token,
+			u16 if_id,
 			enum dpsw_counter type,
 			uint64_t *counter)
 {
@@ -666,8 +666,8 @@ int dpsw_if_get_counter(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_counter(struct fsl_mc_io *mc_io,
 			u32 cmd_flags,
-			uint16_t token,
-			uint16_t if_id,
+			u16 token,
+			u16 if_id,
 			enum dpsw_counter type,
 			uint64_t counter)
 {
@@ -685,8 +685,8 @@ int dpsw_if_set_counter(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_tx_selection(struct fsl_mc_io *mc_io,
 			     u32 cmd_flags,
-			     uint16_t token,
-			     uint16_t if_id,
+			     u16 token,
+			     u16 if_id,
 			     const struct dpsw_tx_selection_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -703,8 +703,8 @@ int dpsw_if_set_tx_selection(struct fsl_mc_io *mc_io,
 
 int dpsw_if_add_reflection(struct fsl_mc_io *mc_io,
 			   u32 cmd_flags,
-			   uint16_t token,
-			   uint16_t if_id,
+			   u16 token,
+			   u16 if_id,
 			   const struct dpsw_reflection_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -721,8 +721,8 @@ int dpsw_if_add_reflection(struct fsl_mc_io *mc_io,
 
 int dpsw_if_remove_reflection(struct fsl_mc_io *mc_io,
 			      u32 cmd_flags,
-			      uint16_t token,
-			      uint16_t if_id,
+			      u16 token,
+			      u16 if_id,
 			      const struct dpsw_reflection_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -739,8 +739,8 @@ int dpsw_if_remove_reflection(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_flooding_metering(struct fsl_mc_io *mc_io,
 				  u32 cmd_flags,
-				  uint16_t token,
-				  uint16_t if_id,
+				  u16 token,
+				  u16 if_id,
 				  const struct dpsw_metering_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -757,8 +757,8 @@ int dpsw_if_set_flooding_metering(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_metering(struct fsl_mc_io *mc_io,
 			 u32 cmd_flags,
-			 uint16_t token,
-			 uint16_t if_id,
+			 u16 token,
+			 u16 if_id,
 			 uint8_t tc_id,
 			 const struct dpsw_metering_cfg *cfg)
 {
@@ -784,8 +784,8 @@ void dpsw_prepare_early_drop(const struct dpsw_early_drop_cfg *cfg,
 
 int dpsw_if_set_early_drop(struct fsl_mc_io	*mc_io,
 			   u32		cmd_flags,
-			   uint16_t		token,
-			   uint16_t		if_id,
+			   u16		token,
+			   u16		if_id,
 			   uint8_t		tc_id,
 			   uint64_t		early_drop_iova)
 {
@@ -803,7 +803,7 @@ int dpsw_if_set_early_drop(struct fsl_mc_io	*mc_io,
 
 int dpsw_add_custom_tpid(struct fsl_mc_io *mc_io,
 			 u32 cmd_flags,
-			 uint16_t token,
+			 u16 token,
 			 const struct dpsw_custom_tpid_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -820,7 +820,7 @@ int dpsw_add_custom_tpid(struct fsl_mc_io *mc_io,
 
 int dpsw_remove_custom_tpid(struct fsl_mc_io *mc_io,
 			    u32 cmd_flags,
-			    uint16_t token,
+			    u16 token,
 			    const struct dpsw_custom_tpid_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -837,8 +837,8 @@ int dpsw_remove_custom_tpid(struct fsl_mc_io *mc_io,
 
 int dpsw_if_enable(struct fsl_mc_io *mc_io,
 		   u32 cmd_flags,
-		   uint16_t token,
-		   uint16_t if_id)
+		   u16 token,
+		   u16 if_id)
 {
 	struct mc_command cmd = { 0 };
 
@@ -854,8 +854,8 @@ int dpsw_if_enable(struct fsl_mc_io *mc_io,
 
 int dpsw_if_disable(struct fsl_mc_io *mc_io,
 		    u32 cmd_flags,
-		    uint16_t token,
-		    uint16_t if_id)
+		    u16 token,
+		    u16 if_id)
 {
 	struct mc_command cmd = { 0 };
 
@@ -871,8 +871,8 @@ int dpsw_if_disable(struct fsl_mc_io *mc_io,
 
 int dpsw_if_get_attributes(struct fsl_mc_io *mc_io,
 			   u32 cmd_flags,
-			   uint16_t token,
-			   uint16_t if_id,
+			   u16 token,
+			   u16 if_id,
 			   struct dpsw_if_attr *attr)
 {
 	struct mc_command cmd = { 0 };
@@ -897,9 +897,9 @@ int dpsw_if_get_attributes(struct fsl_mc_io *mc_io,
 
 int dpsw_if_set_max_frame_length(struct fsl_mc_io *mc_io,
 				 u32 cmd_flags,
-				 uint16_t token,
-				 uint16_t if_id,
-				 uint16_t frame_length)
+				 u16 token,
+				 u16 if_id,
+				 u16 frame_length)
 {
 	struct mc_command cmd = { 0 };
 
@@ -915,9 +915,9 @@ int dpsw_if_set_max_frame_length(struct fsl_mc_io *mc_io,
 
 int dpsw_if_get_max_frame_length(struct fsl_mc_io *mc_io,
 				 u32 cmd_flags,
-				 uint16_t token,
-				 uint16_t if_id,
-				 uint16_t *frame_length)
+				 u16 token,
+				 u16 if_id,
+				 u16 *frame_length)
 {
 	struct mc_command cmd = { 0 };
 	int err;
@@ -940,8 +940,8 @@ int dpsw_if_get_max_frame_length(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_add(struct fsl_mc_io *mc_io,
 		  u32 cmd_flags,
-		  uint16_t token,
-		  uint16_t vlan_id,
+		  u16 token,
+		  u16 vlan_id,
 		  const struct dpsw_vlan_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -958,8 +958,8 @@ int dpsw_vlan_add(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_add_if(struct fsl_mc_io *mc_io,
 		     u32 cmd_flags,
-		     uint16_t token,
-		     uint16_t vlan_id,
+		     u16 token,
+		     u16 vlan_id,
 		     const struct dpsw_vlan_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -977,8 +977,8 @@ int dpsw_vlan_add_if(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_add_if_untagged(struct fsl_mc_io *mc_io,
 			      u32 cmd_flags,
-			      uint16_t token,
-			      uint16_t vlan_id,
+			      u16 token,
+			      u16 vlan_id,
 			      const struct dpsw_vlan_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -996,8 +996,8 @@ int dpsw_vlan_add_if_untagged(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_add_if_flooding(struct fsl_mc_io *mc_io,
 			      u32 cmd_flags,
-			      uint16_t token,
-			      uint16_t vlan_id,
+			      u16 token,
+			      u16 vlan_id,
 			      const struct dpsw_vlan_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1015,8 +1015,8 @@ int dpsw_vlan_add_if_flooding(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_remove_if(struct fsl_mc_io *mc_io,
 			u32 cmd_flags,
-			uint16_t token,
-			uint16_t vlan_id,
+			u16 token,
+			u16 vlan_id,
 			const struct dpsw_vlan_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1034,8 +1034,8 @@ int dpsw_vlan_remove_if(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_remove_if_untagged(struct fsl_mc_io *mc_io,
 				 u32 cmd_flags,
-				 uint16_t token,
-				 uint16_t vlan_id,
+				 u16 token,
+				 u16 vlan_id,
 				 const struct dpsw_vlan_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1053,8 +1053,8 @@ int dpsw_vlan_remove_if_untagged(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_remove_if_flooding(struct fsl_mc_io *mc_io,
 				 u32 cmd_flags,
-				 uint16_t token,
-				 uint16_t vlan_id,
+				 u16 token,
+				 u16 vlan_id,
 				 const struct dpsw_vlan_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1072,8 +1072,8 @@ int dpsw_vlan_remove_if_flooding(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_remove(struct fsl_mc_io *mc_io,
 		     u32 cmd_flags,
-		     uint16_t token,
-		     uint16_t vlan_id)
+		     u16 token,
+		     u16 vlan_id)
 {
 	struct mc_command cmd = { 0 };
 
@@ -1089,8 +1089,8 @@ int dpsw_vlan_remove(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_get_attributes(struct fsl_mc_io *mc_io,
 			     u32 cmd_flags,
-			     uint16_t token,
-			     uint16_t vlan_id,
+			     u16 token,
+			     u16 vlan_id,
 			     struct dpsw_vlan_attr *attr)
 {
 	struct mc_command cmd = { 0 };
@@ -1115,8 +1115,8 @@ int dpsw_vlan_get_attributes(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_get_if(struct fsl_mc_io *mc_io,
 		     u32 cmd_flags,
-		     uint16_t token,
-		     uint16_t vlan_id,
+		     u16 token,
+		     u16 vlan_id,
 		     struct dpsw_vlan_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1142,8 +1142,8 @@ int dpsw_vlan_get_if(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_get_if_flooding(struct fsl_mc_io *mc_io,
 			      u32 cmd_flags,
-			      uint16_t token,
-			      uint16_t vlan_id,
+			      u16 token,
+			      u16 vlan_id,
 			      struct dpsw_vlan_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1169,8 +1169,8 @@ int dpsw_vlan_get_if_flooding(struct fsl_mc_io *mc_io,
 
 int dpsw_vlan_get_if_untagged(struct fsl_mc_io *mc_io,
 			      u32 cmd_flags,
-			      uint16_t token,
-			      uint16_t vlan_id,
+			      u16 token,
+			      u16 vlan_id,
 			      struct dpsw_vlan_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1196,8 +1196,8 @@ int dpsw_vlan_get_if_untagged(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_add(struct fsl_mc_io *mc_io,
 		 u32 cmd_flags,
-		 uint16_t token,
-		 uint16_t *fdb_id,
+		 u16 token,
+		 u16 *fdb_id,
 		 const struct dpsw_fdb_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1222,8 +1222,8 @@ int dpsw_fdb_add(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_remove(struct fsl_mc_io *mc_io,
 		    u32 cmd_flags,
-		    uint16_t token,
-		    uint16_t fdb_id)
+		    u16 token,
+		    u16 fdb_id)
 {
 	struct mc_command cmd = { 0 };
 
@@ -1239,8 +1239,8 @@ int dpsw_fdb_remove(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_add_unicast(struct fsl_mc_io *mc_io,
 			 u32 cmd_flags,
-			 uint16_t token,
-			 uint16_t fdb_id,
+			 u16 token,
+			 u16 fdb_id,
 			 const struct dpsw_fdb_unicast_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1257,8 +1257,8 @@ int dpsw_fdb_add_unicast(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_get_unicast(struct fsl_mc_io *mc_io,
 			 u32 cmd_flags,
-			 uint16_t token,
-			 uint16_t fdb_id,
+			 u16 token,
+			 u16 fdb_id,
 			 struct dpsw_fdb_unicast_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1283,8 +1283,8 @@ int dpsw_fdb_get_unicast(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_remove_unicast(struct fsl_mc_io *mc_io,
 			    u32 cmd_flags,
-			    uint16_t token,
-			    uint16_t fdb_id,
+			    u16 token,
+			    u16 fdb_id,
 			    const struct dpsw_fdb_unicast_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1301,8 +1301,8 @@ int dpsw_fdb_remove_unicast(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_add_multicast(struct fsl_mc_io *mc_io,
 			   u32 cmd_flags,
-			   uint16_t token,
-			   uint16_t fdb_id,
+			   u16 token,
+			   u16 fdb_id,
 			   const struct dpsw_fdb_multicast_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1320,8 +1320,8 @@ int dpsw_fdb_add_multicast(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_get_multicast(struct fsl_mc_io *mc_io,
 			   u32 cmd_flags,
-			   uint16_t token,
-			   uint16_t fdb_id,
+			   u16 token,
+			   u16 fdb_id,
 			   struct dpsw_fdb_multicast_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1347,8 +1347,8 @@ int dpsw_fdb_get_multicast(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_remove_multicast(struct fsl_mc_io *mc_io,
 			      u32 cmd_flags,
-			      uint16_t token,
-			      uint16_t fdb_id,
+			      u16 token,
+			      u16 fdb_id,
 			      const struct dpsw_fdb_multicast_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1366,8 +1366,8 @@ int dpsw_fdb_remove_multicast(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_set_learning_mode(struct fsl_mc_io *mc_io,
 			       u32 cmd_flags,
-			       uint16_t token,
-			       uint16_t fdb_id,
+			       u16 token,
+			       u16 fdb_id,
 			       enum dpsw_fdb_learning_mode mode)
 {
 	struct mc_command cmd = { 0 };
@@ -1384,8 +1384,8 @@ int dpsw_fdb_set_learning_mode(struct fsl_mc_io *mc_io,
 
 int dpsw_fdb_get_attributes(struct fsl_mc_io *mc_io,
 			    u32 cmd_flags,
-			    uint16_t token,
-			    uint16_t fdb_id,
+			    u16 token,
+			    u16 fdb_id,
 			    struct dpsw_fdb_attr *attr)
 {
 	struct mc_command cmd = { 0 };
@@ -1410,8 +1410,8 @@ int dpsw_fdb_get_attributes(struct fsl_mc_io *mc_io,
 
 int dpsw_acl_add(struct fsl_mc_io *mc_io,
 		 u32 cmd_flags,
-		 uint16_t token,
-		 uint16_t *acl_id,
+		 u16 token,
+		 u16 *acl_id,
 		 const struct dpsw_acl_cfg  *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1436,8 +1436,8 @@ int dpsw_acl_add(struct fsl_mc_io *mc_io,
 
 int dpsw_acl_remove(struct fsl_mc_io *mc_io,
 		    u32 cmd_flags,
-		    uint16_t token,
-		    uint16_t acl_id)
+		    u16 token,
+		    u16 acl_id)
 {
 	struct mc_command cmd = { 0 };
 
@@ -1461,8 +1461,8 @@ void dpsw_acl_prepare_entry_cfg(const struct dpsw_acl_key *key,
 
 int dpsw_acl_add_entry(struct fsl_mc_io *mc_io,
 		       u32 cmd_flags,
-		       uint16_t token,
-		       uint16_t acl_id,
+		       u16 token,
+		       u16 acl_id,
 		       const struct dpsw_acl_entry_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1479,8 +1479,8 @@ int dpsw_acl_add_entry(struct fsl_mc_io *mc_io,
 
 int dpsw_acl_remove_entry(struct fsl_mc_io *mc_io,
 			  u32 cmd_flags,
-			  uint16_t token,
-			  uint16_t acl_id,
+			  u16 token,
+			  u16 acl_id,
 			  const struct dpsw_acl_entry_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1497,8 +1497,8 @@ int dpsw_acl_remove_entry(struct fsl_mc_io *mc_io,
 
 int dpsw_acl_add_if(struct fsl_mc_io *mc_io,
 		    u32 cmd_flags,
-		    uint16_t token,
-		    uint16_t acl_id,
+		    u16 token,
+		    u16 acl_id,
 		    const struct dpsw_acl_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1516,8 +1516,8 @@ int dpsw_acl_add_if(struct fsl_mc_io *mc_io,
 
 int dpsw_acl_remove_if(struct fsl_mc_io *mc_io,
 		       u32 cmd_flags,
-		       uint16_t token,
-		       uint16_t acl_id,
+		       u16 token,
+		       u16 acl_id,
 		       const struct dpsw_acl_if_cfg *cfg)
 {
 	struct mc_command cmd = { 0 };
@@ -1535,8 +1535,8 @@ int dpsw_acl_remove_if(struct fsl_mc_io *mc_io,
 
 int dpsw_acl_get_attributes(struct fsl_mc_io		*mc_io,
 			    u32			cmd_flags,
-			    uint16_t			token,
-			    uint16_t			acl_id,
+			    u16			token,
+			    u16			acl_id,
 			    struct dpsw_acl_attr	*attr)
 {
 	struct mc_command cmd = { 0 };
@@ -1561,7 +1561,7 @@ int dpsw_acl_get_attributes(struct fsl_mc_io		*mc_io,
 
 int dpsw_ctrl_if_get_attributes(struct fsl_mc_io		*mc_io,
 				u32			cmd_flags,
-				uint16_t			token,
+				u16			token,
 				struct dpsw_ctrl_if_attr	*attr)
 {
 	struct mc_command cmd = { 0 };
@@ -1585,7 +1585,7 @@ int dpsw_ctrl_if_get_attributes(struct fsl_mc_io		*mc_io,
 
 int dpsw_ctrl_if_set_pools(struct fsl_mc_io			*mc_io,
 			   u32				cmd_flags,
-			   uint16_t				token,
+			   u16				token,
 			   const struct dpsw_ctrl_if_pools_cfg *pools)
 {
 	struct mc_command cmd = { 0 };
@@ -1602,7 +1602,7 @@ int dpsw_ctrl_if_set_pools(struct fsl_mc_io			*mc_io,
 
 int dpsw_ctrl_if_enable(struct fsl_mc_io	*mc_io,
 			u32		cmd_flags,
-			uint16_t		token)
+			u16		token)
 {
 	struct mc_command cmd = { 0 };
 
@@ -1625,7 +1625,7 @@ int dpsw_ctrl_if_enable(struct fsl_mc_io	*mc_io,
 */
 int dpsw_ctrl_if_disable(struct fsl_mc_io	*mc_io,
 			 u32		cmd_flags,
-			 uint16_t		token)
+			 u16		token)
 {
 	struct mc_command cmd = { 0 };
 
diff --git a/drivers/staging/fsl-dpaa2/ethsw/dpsw.h b/drivers/staging/fsl-dpaa2/ethsw/dpsw.h
index 57bf73f..06635f9 100644
--- a/drivers/staging/fsl-dpaa2/ethsw/dpsw.h
+++ b/drivers/staging/fsl-dpaa2/ethsw/dpsw.h
@@ -73,7 +73,7 @@ struct fsl_mc_io;
 int dpsw_open(struct fsl_mc_io	*mc_io,
 	      u32		cmd_flags,
 	      int		dpsw_id,
-	      uint16_t		*token);
+	      u16		*token);
 
 /**
  * dpsw_close() - Close the control session of the object
@@ -88,7 +88,7 @@ int dpsw_open(struct fsl_mc_io	*mc_io,
  */
 int dpsw_close(struct fsl_mc_io *mc_io,
 	       u32	cmd_flags,
-	       uint16_t	token);
+	       u16	token);
 
 /**
  * DPSW options
@@ -136,7 +136,7 @@ enum dpsw_component_type {
  *		 use this structure to change default settings
  */
 struct dpsw_cfg {
-	uint16_t		num_ifs;
+	u16		num_ifs;
 	/**
 	 * struct adv - Advanced parameters
 	 * @options: Enable/Disable DPSW features (bitmap)
@@ -153,12 +153,12 @@ struct dpsw_cfg {
 	 */
 	struct {
 		uint64_t	options;
-		uint16_t	max_vlans;
+		u16	max_vlans;
 		uint8_t	max_meters_per_if;
 		uint8_t	max_fdbs;
-		uint16_t	max_fdb_entries;
-		uint16_t	fdb_aging_time;
-		uint16_t	max_fdb_mc_groups;
+		u16	max_fdb_entries;
+		u16	fdb_aging_time;
+		u16	max_fdb_mc_groups;
 		enum dpsw_component_type component_type;
 	} adv;
 };
@@ -188,7 +188,7 @@ struct dpsw_cfg {
 int dpsw_create(struct fsl_mc_io	*mc_io,
 		u32		cmd_flags,
 		const struct dpsw_cfg	*cfg,
-		uint16_t		*token);
+		u16		*token);
 
 /**
  * dpsw_destroy() - Destroy the DPSW object and release all its resources.
@@ -200,7 +200,7 @@ int dpsw_create(struct fsl_mc_io	*mc_io,
  */
 int dpsw_destroy(struct fsl_mc_io	*mc_io,
 		 u32		cmd_flags,
-		 uint16_t		token);
+		 u16		token);
 
 /**
  * dpsw_enable() - Enable DPSW functionality
@@ -212,7 +212,7 @@ int dpsw_destroy(struct fsl_mc_io	*mc_io,
  */
 int dpsw_enable(struct fsl_mc_io	*mc_io,
 		u32		cmd_flags,
-		uint16_t		token);
+		u16		token);
 
 /**
  * dpsw_disable() - Disable DPSW functionality
@@ -224,7 +224,7 @@ int dpsw_enable(struct fsl_mc_io	*mc_io,
  */
 int dpsw_disable(struct fsl_mc_io	*mc_io,
 		 u32		cmd_flags,
-		 uint16_t		token);
+		 u16		token);
 
 /**
  * dpsw_is_enabled() - Check if the DPSW is enabled
@@ -238,7 +238,7 @@ int dpsw_disable(struct fsl_mc_io	*mc_io,
  */
 int dpsw_is_enabled(struct fsl_mc_io	*mc_io,
 		    u32		cmd_flags,
-		    uint16_t		token,
+		    u16		token,
 		    int		*en);
 
 /**
@@ -251,7 +251,7 @@ int dpsw_is_enabled(struct fsl_mc_io	*mc_io,
  */
 int dpsw_reset(struct fsl_mc_io *mc_io,
 	       u32	cmd_flags,
-	       uint16_t	token);
+	       u16	token);
 
 /**
  * DPSW IRQ Index and Events
@@ -289,7 +289,7 @@ struct dpsw_irq_cfg {
  */
 int dpsw_set_irq(struct fsl_mc_io	*mc_io,
 		 u32		cmd_flags,
-		 uint16_t		token,
+		 u16		token,
 		 uint8_t		irq_index,
 		 struct dpsw_irq_cfg	*irq_cfg);
 
@@ -308,7 +308,7 @@ int dpsw_set_irq(struct fsl_mc_io	*mc_io,
  */
 int dpsw_get_irq(struct fsl_mc_io	*mc_io,
 		 u32		cmd_flags,
-		 uint16_t		token,
+		 u16		token,
 		 uint8_t		irq_index,
 		 int			*type,
 		 struct dpsw_irq_cfg	*irq_cfg);
@@ -330,7 +330,7 @@ int dpsw_get_irq(struct fsl_mc_io	*mc_io,
  */
 int dpsw_set_irq_enable(struct fsl_mc_io	*mc_io,
 			u32		cmd_flags,
-			uint16_t		token,
+			u16		token,
 			uint8_t		irq_index,
 			uint8_t		en);
 
@@ -346,7 +346,7 @@ int dpsw_set_irq_enable(struct fsl_mc_io	*mc_io,
  */
 int dpsw_get_irq_enable(struct fsl_mc_io	*mc_io,
 			u32		cmd_flags,
-			uint16_t		token,
+			u16		token,
 			uint8_t		irq_index,
 			uint8_t		*en);
 
@@ -368,7 +368,7 @@ int dpsw_get_irq_enable(struct fsl_mc_io	*mc_io,
  */
 int dpsw_set_irq_mask(struct fsl_mc_io	*mc_io,
 		      u32		cmd_flags,
-		      uint16_t		token,
+		      u16		token,
 		      uint8_t		irq_index,
 		      u32		mask);
 
@@ -387,7 +387,7 @@ int dpsw_set_irq_mask(struct fsl_mc_io	*mc_io,
  */
 int dpsw_get_irq_mask(struct fsl_mc_io	*mc_io,
 		      u32		cmd_flags,
-		      uint16_t		token,
+		      u16		token,
 		      uint8_t		irq_index,
 		      u32		*mask);
 
@@ -405,7 +405,7 @@ int dpsw_get_irq_mask(struct fsl_mc_io	*mc_io,
  */
 int dpsw_get_irq_status(struct fsl_mc_io	*mc_io,
 			u32		cmd_flags,
-			uint16_t		token,
+			u16		token,
 			uint8_t		irq_index,
 			u32		*status);
 
@@ -423,7 +423,7 @@ int dpsw_get_irq_status(struct fsl_mc_io	*mc_io,
  */
 int dpsw_clear_irq_status(struct fsl_mc_io	*mc_io,
 			  u32		cmd_flags,
-			  uint16_t		token,
+			  u16		token,
 			  uint8_t		irq_index,
 			  u32		status);
 /**
@@ -454,19 +454,19 @@ struct dpsw_attr {
 	 * @minor: DPSW minor version
 	 */
 	struct {
-		uint16_t major;
-		uint16_t minor;
+		u16 major;
+		u16 minor;
 	} version;
 	uint64_t	options;
-	uint16_t	max_vlans;
+	u16	max_vlans;
 	uint8_t	max_meters_per_if;
 	uint8_t	max_fdbs;
-	uint16_t	max_fdb_entries;
-	uint16_t	fdb_aging_time;
-	uint16_t	max_fdb_mc_groups;
-	uint16_t	num_ifs;
-	uint16_t	mem_size;
-	uint16_t	num_vlans;
+	u16	max_fdb_entries;
+	u16	fdb_aging_time;
+	u16	max_fdb_mc_groups;
+	u16	num_ifs;
+	u16	mem_size;
+	u16	num_vlans;
 	uint8_t		num_fdbs;
 	enum dpsw_component_type component_type;
 };
@@ -482,7 +482,7 @@ struct dpsw_attr {
  */
 int dpsw_get_attributes(struct fsl_mc_io	*mc_io,
 			u32		cmd_flags,
-			uint16_t		token,
+			u16		token,
 			struct dpsw_attr	*attr);
 
 /**
@@ -498,8 +498,8 @@ int dpsw_get_attributes(struct fsl_mc_io	*mc_io,
  */
 int dpsw_set_reflection_if(struct fsl_mc_io	*mc_io,
 			   u32		cmd_flags,
-			   uint16_t		token,
-			   uint16_t		if_id);
+			   u16		token,
+			   u16		if_id);
 
 /**
  * enum dpsw_action - Action selection for special/control frames
@@ -550,8 +550,8 @@ struct dpsw_link_cfg {
  */
 int dpsw_if_set_link_cfg(struct fsl_mc_io	*mc_io,
 			 u32		cmd_flags,
-			 uint16_t		token,
-			 uint16_t		if_id,
+			 u16		token,
+			 u16		if_id,
 			 struct dpsw_link_cfg	*cfg);
 /**
  * struct dpsw_link_state - Structure representing DPSW link state
@@ -577,8 +577,8 @@ struct dpsw_link_state {
  */
 int dpsw_if_get_link_state(struct fsl_mc_io		*mc_io,
 			   u32			cmd_flags,
-			   uint16_t			token,
-			   uint16_t			if_id,
+			   u16			token,
+			   u16			if_id,
 			   struct dpsw_link_state	*state);
 
 /**
@@ -593,8 +593,8 @@ int dpsw_if_get_link_state(struct fsl_mc_io		*mc_io,
  */
 int dpsw_if_set_flooding(struct fsl_mc_io	*mc_io,
 			 u32		cmd_flags,
-			 uint16_t		token,
-			 uint16_t		if_id,
+			 u16		token,
+			 u16		if_id,
 			 int			en);
 
 /**
@@ -609,8 +609,8 @@ int dpsw_if_set_flooding(struct fsl_mc_io	*mc_io,
  */
 int dpsw_if_set_broadcast(struct fsl_mc_io	*mc_io,
 			  u32		cmd_flags,
-			  uint16_t		token,
-			  uint16_t		if_id,
+			  u16		token,
+			  u16		if_id,
 			  int			en);
 
 /**
@@ -625,8 +625,8 @@ int dpsw_if_set_broadcast(struct fsl_mc_io	*mc_io,
  */
 int dpsw_if_set_multicast(struct fsl_mc_io	*mc_io,
 			  u32		cmd_flags,
-			  uint16_t		token,
-			  uint16_t		if_id,
+			  u16		token,
+			  u16		if_id,
 			  int			en);
 
 /**
@@ -645,7 +645,7 @@ int dpsw_if_set_multicast(struct fsl_mc_io	*mc_io,
 struct dpsw_tci_cfg {
 	uint8_t	pcp;
 	uint8_t	dei;
-	uint16_t	vlan_id;
+	u16	vlan_id;
 };
 
 /**
@@ -660,8 +660,8 @@ struct dpsw_tci_cfg {
  */
 int dpsw_if_set_tci(struct fsl_mc_io		*mc_io,
 		    u32			cmd_flags,
-		    uint16_t			token,
-		    uint16_t			if_id,
+		    u16			token,
+		    u16			if_id,
 		    const struct dpsw_tci_cfg	*cfg);
 
 /**
@@ -676,8 +676,8 @@ int dpsw_if_set_tci(struct fsl_mc_io		*mc_io,
  */
 int dpsw_if_get_tci(struct fsl_mc_io	*mc_io,
 		    u32		cmd_flags,
-		    uint16_t		token,
-		    uint16_t		if_id,
+		    u16		token,
+		    u16		if_id,
 		    struct dpsw_tci_cfg *cfg);
 
 /**
@@ -701,7 +701,7 @@ enum dpsw_stp_state {
  * @state: STP state
  */
 struct dpsw_stp_cfg {
-	uint16_t		vlan_id;
+	u16		vlan_id;
 	enum dpsw_stp_state	state;
 };
 
@@ -720,8 +720,8 @@ struct dpsw_stp_cfg {
  */
 int dpsw_if_set_stp(struct fsl_mc_io		*mc_io,
 		    u32			cmd_flags,
-		    uint16_t			token,
-		    uint16_t			if_id,
+		    u16			token,
+		    u16			if_id,
 		    const struct dpsw_stp_cfg	*cfg);
 
 /**
@@ -769,8 +769,8 @@ struct dpsw_accepted_frames_cfg {
  */
 int dpsw_if_set_accepted_frames(struct fsl_mc_io		*mc_io,
 				u32			cmd_flags,
-				uint16_t			token,
-				uint16_t			if_id,
+				u16			token,
+				u16			if_id,
 				const struct dpsw_accepted_frames_cfg *cfg);
 
 /**
@@ -789,8 +789,8 @@ int dpsw_if_set_accepted_frames(struct fsl_mc_io		*mc_io,
  */
 int dpsw_if_set_accept_all_vlan(struct fsl_mc_io	*mc_io,
 				u32		cmd_flags,
-				uint16_t		token,
-				uint16_t		if_id,
+				u16		token,
+				u16		if_id,
 				int			accept_all);
 
 /**
@@ -836,8 +836,8 @@ enum dpsw_counter {
  */
 int dpsw_if_get_counter(struct fsl_mc_io	*mc_io,
 			u32		cmd_flags,
-			uint16_t		token,
-			uint16_t		if_id,
+			u16		token,
+			u16		if_id,
 			enum dpsw_counter	type,
 			uint64_t		*counter);
 
@@ -854,8 +854,8 @@ int dpsw_if_get_counter(struct fsl_mc_io	*mc_io,
  */
 int dpsw_if_set_counter(struct fsl_mc_io	*mc_io,
 			u32		cmd_flags,
-			uint16_t		token,
-			uint16_t		if_id,
+			u16		token,
+			u16		if_id,
 			enum dpsw_counter	type,
 			uint64_t		counter);
 
@@ -894,7 +894,7 @@ enum dpsw_schedule_mode {
  */
 struct dpsw_tx_schedule_cfg {
 	enum dpsw_schedule_mode	mode;
-	uint16_t		delta_bandwidth;
+	u16		delta_bandwidth;
 };
 
 /**
@@ -928,8 +928,8 @@ struct dpsw_tx_selection_cfg {
  */
 int dpsw_if_set_tx_selection(struct fsl_mc_io			*mc_io,
 			     u32				cmd_flags,
-			     uint16_t				token,
-			     uint16_t				if_id,
+			     u16				token,
+			     u16				if_id,
 			     const struct dpsw_tx_selection_cfg	*cfg);
 
 /**
@@ -952,7 +952,7 @@ enum dpsw_reflection_filter {
  */
 struct dpsw_reflection_cfg {
 	enum dpsw_reflection_filter	filter;
-	uint16_t			vlan_id;
+	u16			vlan_id;
 };
 
 /**
@@ -967,8 +967,8 @@ struct dpsw_reflection_cfg {
  */
 int dpsw_if_add_reflection(struct fsl_mc_io			*mc_io,
 			   u32				cmd_flags,
-			   uint16_t				token,
-			   uint16_t				if_id,
+			   u16				token,
+			   u16				if_id,
 			   const struct dpsw_reflection_cfg	*cfg);
 
 /**
@@ -983,8 +983,8 @@ int dpsw_if_add_reflection(struct fsl_mc_io			*mc_io,
  */
 int dpsw_if_remove_reflection(struct fsl_mc_io			*mc_io,
 			      u32				cmd_flags,
-			      uint16_t				token,
-			      uint16_t				if_id,
+			      u16				token,
+			      u16				if_id,
 			      const struct dpsw_reflection_cfg	*cfg);
 
 /**
@@ -1042,8 +1042,8 @@ struct dpsw_metering_cfg {
  */
 int dpsw_if_set_flooding_metering(struct fsl_mc_io		*mc_io,
 				  u32			cmd_flags,
-				  uint16_t			token,
-				  uint16_t			if_id,
+				  u16			token,
+				  u16			if_id,
 				  const struct dpsw_metering_cfg *cfg);
 
 /**
@@ -1059,8 +1059,8 @@ int dpsw_if_set_flooding_metering(struct fsl_mc_io		*mc_io,
  */
 int dpsw_if_set_metering(struct fsl_mc_io			*mc_io,
 			 u32				cmd_flags,
-			 uint16_t				token,
-			 uint16_t				if_id,
+			 u16				token,
+			 u16				if_id,
 			 uint8_t				tc_id,
 			 const struct dpsw_metering_cfg	*cfg);
 
@@ -1147,8 +1147,8 @@ void dpsw_prepare_early_drop(const struct dpsw_early_drop_cfg *cfg,
  */
 int dpsw_if_set_early_drop(struct fsl_mc_io	*mc_io,
 			   u32		cmd_flags,
-			   uint16_t		token,
-			   uint16_t		if_id,
+			   u16		token,
+			   u16		if_id,
 			   uint8_t		tc_id,
 			   uint64_t		early_drop_iova);
 
@@ -1157,7 +1157,7 @@ int dpsw_if_set_early_drop(struct fsl_mc_io	*mc_io,
  * @tpid: An additional tag protocol identifier
  */
 struct dpsw_custom_tpid_cfg {
-	uint16_t tpid;
+	u16 tpid;
 };
 
 /**
@@ -1176,7 +1176,7 @@ struct dpsw_custom_tpid_cfg {
  */
 int dpsw_add_custom_tpid(struct fsl_mc_io			*mc_io,
 			 u32				cmd_flags,
-			 uint16_t				token,
+			 u16				token,
 			 const struct dpsw_custom_tpid_cfg	*cfg);
 
 /**
@@ -1190,7 +1190,7 @@ int dpsw_add_custom_tpid(struct fsl_mc_io			*mc_io,
  */
 int dpsw_remove_custom_tpid(struct fsl_mc_io			*mc_io,
 			    u32				cmd_flags,
-			    uint16_t				token,
+			    u16				token,
 			    const struct dpsw_custom_tpid_cfg	*cfg);
 
 /**
@@ -1204,8 +1204,8 @@ int dpsw_remove_custom_tpid(struct fsl_mc_io			*mc_io,
  */
 int dpsw_if_enable(struct fsl_mc_io	*mc_io,
 		   u32		cmd_flags,
-		   uint16_t		token,
-		   uint16_t		if_id);
+		   u16		token,
+		   u16		if_id);
 
 /**
  * dpsw_if_disable() - Disable Interface
@@ -1218,8 +1218,8 @@ int dpsw_if_enable(struct fsl_mc_io	*mc_io,
  */
 int dpsw_if_disable(struct fsl_mc_io	*mc_io,
 		    u32		cmd_flags,
-		    uint16_t		token,
-		    uint16_t		if_id);
+		    u16		token,
+		    u16		if_id);
 
 /**
  * struct dpsw_if_attr - Structure representing DPSW interface attributes
@@ -1243,7 +1243,7 @@ struct dpsw_if_attr {
 	int				enabled;
 	int				accept_all_vlan;
 	enum dpsw_accepted_frames	admit_untagged;
-	uint16_t			qdid;
+	u16			qdid;
 };
 
 /**
@@ -1258,8 +1258,8 @@ struct dpsw_if_attr {
  */
 int dpsw_if_get_attributes(struct fsl_mc_io	*mc_io,
 			   u32		cmd_flags,
-			   uint16_t		token,
-			   uint16_t		if_id,
+			   u16		token,
+			   u16		if_id,
 			   struct dpsw_if_attr	*attr);
 
 /**
@@ -1274,9 +1274,9 @@ int dpsw_if_get_attributes(struct fsl_mc_io	*mc_io,
  */
 int dpsw_if_set_max_frame_length(struct fsl_mc_io	*mc_io,
 				 u32		cmd_flags,
-				 uint16_t		token,
-				 uint16_t		if_id,
-				 uint16_t		frame_length);
+				 u16		token,
+				 u16		if_id,
+				 u16		frame_length);
 
 /**
  * dpsw_if_get_max_frame_length() - Get Maximum Receive frame length.
@@ -1290,16 +1290,16 @@ int dpsw_if_set_max_frame_length(struct fsl_mc_io	*mc_io,
  */
 int dpsw_if_get_max_frame_length(struct fsl_mc_io	*mc_io,
 				 u32		cmd_flags,
-				 uint16_t		token,
-				 uint16_t		if_id,
-				 uint16_t		*frame_length);
+				 u16		token,
+				 u16		if_id,
+				 u16		*frame_length);
 
 /**
  * struct dpsw_vlan_cfg - VLAN Configuration
  * @fdb_id: Forwarding Data Base
  */
 struct dpsw_vlan_cfg {
-	uint16_t fdb_id;
+	u16 fdb_id;
 };
 
 /**
@@ -1321,8 +1321,8 @@ struct dpsw_vlan_cfg {
  */
 int dpsw_vlan_add(struct fsl_mc_io		*mc_io,
 		  u32			cmd_flags,
-		  uint16_t			token,
-		  uint16_t			vlan_id,
+		  u16			token,
+		  u16			vlan_id,
 		  const struct dpsw_vlan_cfg	*cfg);
 
 /**
@@ -1333,8 +1333,8 @@ int dpsw_vlan_add(struct fsl_mc_io		*mc_io,
  *		assigned to the egress list for this VLAN
  */
 struct dpsw_vlan_if_cfg {
-	uint16_t num_ifs;
-	uint16_t if_id[DPSW_MAX_IF];
+	u16 num_ifs;
+	u16 if_id[DPSW_MAX_IF];
 };
 
 /**
@@ -1354,8 +1354,8 @@ struct dpsw_vlan_if_cfg {
  */
 int dpsw_vlan_add_if(struct fsl_mc_io			*mc_io,
 		     u32				cmd_flags,
-		     uint16_t				token,
-		     uint16_t				vlan_id,
+		     u16				token,
+		     u16				vlan_id,
 		     const struct dpsw_vlan_if_cfg	*cfg);
 
 /**
@@ -1377,8 +1377,8 @@ int dpsw_vlan_add_if(struct fsl_mc_io			*mc_io,
  */
 int dpsw_vlan_add_if_untagged(struct fsl_mc_io			*mc_io,
 			      u32				cmd_flags,
-			      uint16_t				token,
-			      uint16_t				vlan_id,
+			      u16				token,
+			      u16				vlan_id,
 			      const struct dpsw_vlan_if_cfg	*cfg);
 
 /**
@@ -1401,8 +1401,8 @@ int dpsw_vlan_add_if_untagged(struct fsl_mc_io			*mc_io,
  */
 int dpsw_vlan_add_if_flooding(struct fsl_mc_io			*mc_io,
 			      u32				cmd_flags,
-			      uint16_t				token,
-			      uint16_t				vlan_id,
+			      u16				token,
+			      u16				vlan_id,
 			      const struct dpsw_vlan_if_cfg	*cfg);
 
 /**
@@ -1420,8 +1420,8 @@ int dpsw_vlan_add_if_flooding(struct fsl_mc_io			*mc_io,
  */
 int dpsw_vlan_remove_if(struct fsl_mc_io		*mc_io,
 			u32			cmd_flags,
-			uint16_t			token,
-			uint16_t			vlan_id,
+			u16			token,
+			u16			vlan_id,
 			const struct dpsw_vlan_if_cfg	*cfg);
 
 /**
@@ -1441,8 +1441,8 @@ int dpsw_vlan_remove_if(struct fsl_mc_io		*mc_io,
  */
 int dpsw_vlan_remove_if_untagged(struct fsl_mc_io		*mc_io,
 				 u32			cmd_flags,
-				 uint16_t			token,
-				 uint16_t			vlan_id,
+				 u16			token,
+				 u16			vlan_id,
 				 const struct dpsw_vlan_if_cfg	*cfg);
 
 /**
@@ -1458,8 +1458,8 @@ int dpsw_vlan_remove_if_untagged(struct fsl_mc_io		*mc_io,
  */
 int dpsw_vlan_remove_if_flooding(struct fsl_mc_io		*mc_io,
 				 u32			cmd_flags,
-				 uint16_t			token,
-				 uint16_t			vlan_id,
+				 u16			token,
+				 u16			vlan_id,
 				 const struct dpsw_vlan_if_cfg	*cfg);
 
 /**
@@ -1473,8 +1473,8 @@ int dpsw_vlan_remove_if_flooding(struct fsl_mc_io		*mc_io,
  */
 int dpsw_vlan_remove(struct fsl_mc_io	*mc_io,
 		     u32		cmd_flags,
-		     uint16_t		token,
-		     uint16_t		vlan_id);
+		     u16		token,
+		     u16		vlan_id);
 
 /**
  * struct dpsw_vlan_attr - VLAN attributes
@@ -1484,10 +1484,10 @@ int dpsw_vlan_remove(struct fsl_mc_io	*mc_io,
  * @num_flooding_ifs: Number of flooding interfaces
  */
 struct dpsw_vlan_attr {
-	uint16_t fdb_id;
-	uint16_t num_ifs;
-	uint16_t num_untagged_ifs;
-	uint16_t num_flooding_ifs;
+	u16 fdb_id;
+	u16 num_ifs;
+	u16 num_untagged_ifs;
+	u16 num_flooding_ifs;
 };
 
 /**
@@ -1502,8 +1502,8 @@ struct dpsw_vlan_attr {
  */
 int dpsw_vlan_get_attributes(struct fsl_mc_io		*mc_io,
 			     u32			cmd_flags,
-			     uint16_t			token,
-			     uint16_t			vlan_id,
+			     u16			token,
+			     u16			vlan_id,
 			     struct dpsw_vlan_attr	*attr);
 
 /**
@@ -1518,8 +1518,8 @@ int dpsw_vlan_get_attributes(struct fsl_mc_io		*mc_io,
  */
 int dpsw_vlan_get_if(struct fsl_mc_io		*mc_io,
 		     u32			cmd_flags,
-		     uint16_t			token,
-		     uint16_t			vlan_id,
+		     u16			token,
+		     u16			vlan_id,
 		     struct dpsw_vlan_if_cfg	*cfg);
 
 /**
@@ -1534,8 +1534,8 @@ int dpsw_vlan_get_if(struct fsl_mc_io		*mc_io,
  */
 int dpsw_vlan_get_if_flooding(struct fsl_mc_io		*mc_io,
 			      u32			cmd_flags,
-			      uint16_t			token,
-			      uint16_t			vlan_id,
+			      u16			token,
+			      u16			vlan_id,
 			      struct dpsw_vlan_if_cfg	*cfg);
 
 /**
@@ -1551,8 +1551,8 @@ int dpsw_vlan_get_if_flooding(struct fsl_mc_io		*mc_io,
  */
 int dpsw_vlan_get_if_untagged(struct fsl_mc_io		*mc_io,
 			      u32			cmd_flags,
-			      uint16_t			token,
-			      uint16_t			vlan_id,
+			      u16			token,
+			      u16			vlan_id,
 			      struct dpsw_vlan_if_cfg	*cfg);
 
 /**
@@ -1561,8 +1561,8 @@ int dpsw_vlan_get_if_untagged(struct fsl_mc_io		*mc_io,
  * @fdb_aging_time: Aging time in seconds
  */
 struct dpsw_fdb_cfg {
-	uint16_t num_fdb_entries;
-	uint16_t fdb_aging_time;
+	u16 num_fdb_entries;
+	u16 fdb_aging_time;
 };
 
 /**
@@ -1578,8 +1578,8 @@ struct dpsw_fdb_cfg {
  */
 int dpsw_fdb_add(struct fsl_mc_io		*mc_io,
 		 u32			cmd_flags,
-		 uint16_t			token,
-		 uint16_t			*fdb_id,
+		 u16			token,
+		 u16			*fdb_id,
 		 const struct dpsw_fdb_cfg	*cfg);
 
 /**
@@ -1593,8 +1593,8 @@ int dpsw_fdb_add(struct fsl_mc_io		*mc_io,
  */
 int dpsw_fdb_remove(struct fsl_mc_io	*mc_io,
 		    u32		cmd_flags,
-		    uint16_t		token,
-		    uint16_t		fdb_id);
+		    u16		token,
+		    u16		fdb_id);
 
 /**
  * enum dpsw_fdb_entry_type - FDB Entry type - Static/Dynamic
@@ -1615,7 +1615,7 @@ enum dpsw_fdb_entry_type {
 struct dpsw_fdb_unicast_cfg {
 	enum dpsw_fdb_entry_type	type;
 	uint8_t			mac_addr[6];
-	uint16_t			if_egress;
+	u16			if_egress;
 };
 
 /**
@@ -1630,8 +1630,8 @@ struct dpsw_fdb_unicast_cfg {
  */
 int dpsw_fdb_add_unicast(struct fsl_mc_io			*mc_io,
 			 u32				cmd_flags,
-			 uint16_t				token,
-			 uint16_t				fdb_id,
+			 u16				token,
+			 u16				fdb_id,
 			 const struct dpsw_fdb_unicast_cfg	*cfg);
 
 /**
@@ -1647,8 +1647,8 @@ int dpsw_fdb_add_unicast(struct fsl_mc_io			*mc_io,
  */
 int dpsw_fdb_get_unicast(struct fsl_mc_io		*mc_io,
 			 u32			cmd_flags,
-			 uint16_t			token,
-			 uint16_t			fdb_id,
+			 u16			token,
+			 u16			fdb_id,
 			 struct dpsw_fdb_unicast_cfg	*cfg);
 
 /**
@@ -1663,8 +1663,8 @@ int dpsw_fdb_get_unicast(struct fsl_mc_io		*mc_io,
  */
 int dpsw_fdb_remove_unicast(struct fsl_mc_io			*mc_io,
 			    u32				cmd_flags,
-			    uint16_t				token,
-			    uint16_t				fdb_id,
+			    u16				token,
+			    u16				fdb_id,
 			    const struct dpsw_fdb_unicast_cfg	*cfg);
 
 /**
@@ -1677,8 +1677,8 @@ int dpsw_fdb_remove_unicast(struct fsl_mc_io			*mc_io,
 struct dpsw_fdb_multicast_cfg {
 	enum dpsw_fdb_entry_type	type;
 	uint8_t			mac_addr[6];
-	uint16_t			num_ifs;
-	uint16_t			if_id[DPSW_MAX_IF];
+	u16			num_ifs;
+	u16			if_id[DPSW_MAX_IF];
 };
 
 /**
@@ -1700,8 +1700,8 @@ struct dpsw_fdb_multicast_cfg {
  */
 int dpsw_fdb_add_multicast(struct fsl_mc_io			*mc_io,
 			   u32				cmd_flags,
-			   uint16_t				token,
-			   uint16_t				fdb_id,
+			   u16				token,
+			   u16				fdb_id,
 			   const struct dpsw_fdb_multicast_cfg	*cfg);
 
 /**
@@ -1717,8 +1717,8 @@ int dpsw_fdb_add_multicast(struct fsl_mc_io			*mc_io,
  */
 int dpsw_fdb_get_multicast(struct fsl_mc_io			*mc_io,
 			   u32				cmd_flags,
-			   uint16_t				token,
-			   uint16_t				fdb_id,
+			   u16				token,
+			   u16				fdb_id,
 			   struct dpsw_fdb_multicast_cfg	*cfg);
 
 /**
@@ -1739,8 +1739,8 @@ int dpsw_fdb_get_multicast(struct fsl_mc_io			*mc_io,
  */
 int dpsw_fdb_remove_multicast(struct fsl_mc_io			*mc_io,
 			      u32				cmd_flags,
-			      uint16_t				token,
-			      uint16_t				fdb_id,
+			      u16				token,
+			      u16				fdb_id,
 			      const struct dpsw_fdb_multicast_cfg *cfg);
 
 /**
@@ -1792,8 +1792,8 @@ enum dpsw_fdb_learning_mode {
  */
 int dpsw_fdb_set_learning_mode(struct fsl_mc_io		*mc_io,
 			       u32			cmd_flags,
-			       uint16_t			token,
-			       uint16_t			fdb_id,
+			       u16			token,
+			       u16			fdb_id,
 			       enum dpsw_fdb_learning_mode	mode);
 
 /**
@@ -1805,11 +1805,11 @@ int dpsw_fdb_set_learning_mode(struct fsl_mc_io		*mc_io,
  * @max_fdb_mc_groups: Maximum number of multicast groups
  */
 struct dpsw_fdb_attr {
-	uint16_t			max_fdb_entries;
-	uint16_t			fdb_aging_time;
+	u16			max_fdb_entries;
+	u16			fdb_aging_time;
 	enum dpsw_fdb_learning_mode	learning_mode;
-	uint16_t			num_fdb_mc_groups;
-	uint16_t			max_fdb_mc_groups;
+	u16			num_fdb_mc_groups;
+	u16			max_fdb_mc_groups;
 };
 
 /**
@@ -1824,8 +1824,8 @@ struct dpsw_fdb_attr {
  */
 int dpsw_fdb_get_attributes(struct fsl_mc_io		*mc_io,
 			    u32			cmd_flags,
-			    uint16_t			token,
-			    uint16_t			fdb_id,
+			    u16			token,
+			    u16			fdb_id,
 			    struct dpsw_fdb_attr	*attr);
 
 /**
@@ -1833,7 +1833,7 @@ int dpsw_fdb_get_attributes(struct fsl_mc_io		*mc_io,
  * @max_entries: Number of FDB entries
  */
 struct dpsw_acl_cfg {
-	uint16_t	max_entries;
+	u16	max_entries;
 };
 
 /**
@@ -1860,16 +1860,16 @@ struct dpsw_acl_cfg {
 struct dpsw_acl_fields {
 	uint8_t         l2_dest_mac[6];
 	uint8_t         l2_source_mac[6];
-	uint16_t        l2_tpid;
+	u16        l2_tpid;
 	uint8_t         l2_pcp_dei;
-	uint16_t        l2_vlan_id;
-	uint16_t        l2_ether_type;
+	u16        l2_vlan_id;
+	u16        l2_ether_type;
 	uint8_t         l3_dscp;
 	uint8_t         l3_protocol;
 	u32        l3_source_ip;
 	u32        l3_dest_ip;
-	uint16_t        l4_source_port;
-	uint16_t        l4_dest_port;
+	u16        l4_source_port;
+	u16        l4_dest_port;
 };
 
 /**
@@ -1904,7 +1904,7 @@ enum dpsw_acl_action {
  */
 struct dpsw_acl_result {
 	enum dpsw_acl_action	action;
-	uint16_t                if_id;
+	u16                if_id;
 };
 
 /**
@@ -1937,8 +1937,8 @@ struct dpsw_acl_entry_cfg {
  */
 int dpsw_acl_add(struct fsl_mc_io		*mc_io,
 		 u32			cmd_flags,
-		 uint16_t			token,
-		 uint16_t			*acl_id,
+		 u16			token,
+		 u16			*acl_id,
 		 const struct dpsw_acl_cfg	*cfg);
 
 /**
@@ -1952,8 +1952,8 @@ int dpsw_acl_add(struct fsl_mc_io		*mc_io,
  */
 int dpsw_acl_remove(struct fsl_mc_io	*mc_io,
 		    u32		cmd_flags,
-		    uint16_t		token,
-		    uint16_t		acl_id);
+		    u16		token,
+		    u16		acl_id);
 
 /**
  * dpsw_acl_prepare_entry_cfg() - Set an entry to ACL.
@@ -1980,8 +1980,8 @@ void dpsw_acl_prepare_entry_cfg(const struct dpsw_acl_key	*key,
  */
 int dpsw_acl_add_entry(struct fsl_mc_io		*mc_io,
 		       u32			cmd_flags,
-		       uint16_t			token,
-		       uint16_t			acl_id,
+		       u16			token,
+		       u16			acl_id,
 		       const struct dpsw_acl_entry_cfg	*cfg);
 
 /**
@@ -1998,8 +1998,8 @@ int dpsw_acl_add_entry(struct fsl_mc_io		*mc_io,
  */
 int dpsw_acl_remove_entry(struct fsl_mc_io			*mc_io,
 			  u32				cmd_flags,
-			  uint16_t				token,
-			  uint16_t				acl_id,
+			  u16				token,
+			  u16				acl_id,
 			  const struct dpsw_acl_entry_cfg	*cfg);
 
 /**
@@ -2008,8 +2008,8 @@ int dpsw_acl_remove_entry(struct fsl_mc_io			*mc_io,
  * @if_id: List of interfaces
  */
 struct dpsw_acl_if_cfg {
-	uint16_t	num_ifs;
-	uint16_t	if_id[DPSW_MAX_IF];
+	u16	num_ifs;
+	u16	if_id[DPSW_MAX_IF];
 };
 
 /**
@@ -2024,8 +2024,8 @@ struct dpsw_acl_if_cfg {
  */
 int dpsw_acl_add_if(struct fsl_mc_io			*mc_io,
 		    u32				cmd_flags,
-		    uint16_t				token,
-		    uint16_t				acl_id,
+		    u16				token,
+		    u16				acl_id,
 		    const struct dpsw_acl_if_cfg	*cfg);
 
 /**
@@ -2040,8 +2040,8 @@ int dpsw_acl_add_if(struct fsl_mc_io			*mc_io,
  */
 int dpsw_acl_remove_if(struct fsl_mc_io		*mc_io,
 		       u32			cmd_flags,
-		       uint16_t			token,
-		       uint16_t			acl_id,
+		       u16			token,
+		       u16			acl_id,
 		       const struct dpsw_acl_if_cfg	*cfg);
 
 /**
@@ -2051,9 +2051,9 @@ int dpsw_acl_remove_if(struct fsl_mc_io		*mc_io,
  * @num_ifs: Number of interfaces associated with ACL
  */
 struct dpsw_acl_attr {
-	uint16_t max_entries;
-	uint16_t num_entries;
-	uint16_t num_ifs;
+	u16 max_entries;
+	u16 num_entries;
+	u16 num_ifs;
 };
 
 /**
@@ -2068,8 +2068,8 @@ struct dpsw_acl_attr {
 */
 int dpsw_acl_get_attributes(struct fsl_mc_io		*mc_io,
 			    u32			cmd_flags,
-			    uint16_t			token,
-			    uint16_t			acl_id,
+			    u16			token,
+			    u16			acl_id,
 			    struct dpsw_acl_attr	*attr);
 /**
 * struct dpsw_ctrl_if_attr - Control interface attributes
@@ -2094,7 +2094,7 @@ struct dpsw_ctrl_if_attr {
 */
 int dpsw_ctrl_if_get_attributes(struct fsl_mc_io		*mc_io,
 				u32			cmd_flags,
-				uint16_t			token,
+				u16			token,
 				struct dpsw_ctrl_if_attr	*attr);
 
 /**
@@ -2118,7 +2118,7 @@ struct dpsw_ctrl_if_pools_cfg {
 	*/
 	struct {
 		int dpbp_id;
-		uint16_t buffer_size;
+		u16 buffer_size;
 		int backup_pool;
 	} pools[DPSW_MAX_DPBP];
 };
@@ -2134,7 +2134,7 @@ struct dpsw_ctrl_if_pools_cfg {
 */
 int dpsw_ctrl_if_set_pools(struct fsl_mc_io			*mc_io,
 			   u32				cmd_flags,
-			   uint16_t				token,
+			   u16				token,
 			   const struct dpsw_ctrl_if_pools_cfg *cfg);
 
 /**
@@ -2147,7 +2147,7 @@ int dpsw_ctrl_if_set_pools(struct fsl_mc_io			*mc_io,
 */
 int dpsw_ctrl_if_enable(struct fsl_mc_io	*mc_io,
 			u32		cmd_flags,
-			uint16_t		token);
+			u16		token);
 
 /**
 * dpsw_ctrl_if_disable() - Function disables control interface
@@ -2159,6 +2159,6 @@ int dpsw_ctrl_if_enable(struct fsl_mc_io	*mc_io,
 */
 int dpsw_ctrl_if_disable(struct fsl_mc_io	*mc_io,
 			 u32		cmd_flags,
-			 uint16_t		token);
+			 u16		token);
 
 #endif /* __FSL_DPSW_H */
-- 
2.9.3

