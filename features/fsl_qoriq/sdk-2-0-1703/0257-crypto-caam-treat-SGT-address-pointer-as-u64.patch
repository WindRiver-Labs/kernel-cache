From 5569ec8879ac15bd09b0f7afe8cdd8b81f17b75c Mon Sep 17 00:00:00 2001
From: Tudor Ambarus <tudor-dan.ambarus@nxp.com>
Date: Mon, 5 Sep 2016 15:53:19 +0300
Subject: [PATCH 257/388] crypto: caam - treat SGT address pointer as u64
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Even for i.MX, CAAM is able to use address pointers greater than
32 bits, the address pointer field being interpreted as a double word.
Enforce u64 address pointer in the sec4_sg_entry struct.

This patch fixes the SGT address pointer endianness issue for
32bit platforms where core endianness != caam endianness.

Signed-off-by: Tudor Ambarus <tudor-dan.ambarus@nxp.com>
Signed-off-by: Horia GeantÄƒ <horia.geanta@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/crypto/caam/desc.h       | 6 ------
 drivers/crypto/caam/regs.h       | 7 +++++++
 drivers/crypto/caam/sg_sw_sec4.h | 2 +-
 3 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/crypto/caam/desc.h b/drivers/crypto/caam/desc.h
index 6b454d4..72073482 100644
--- a/drivers/crypto/caam/desc.h
+++ b/drivers/crypto/caam/desc.h
@@ -23,13 +23,7 @@
 #define SEC4_SG_OFFSET_MASK	0x00001fff
 
 struct sec4_sg_entry {
-#if !defined(CONFIG_ARCH_DMA_ADDR_T_64BIT) && \
-	defined(CONFIG_CRYPTO_DEV_FSL_CAAM_IMX)
-	u32 rsvd1;
-	dma_addr_t ptr;
-#else
 	u64 ptr;
-#endif /* CONFIG_CRYPTO_DEV_FSL_CAAM_IMX */
 	u32 len;
 #ifndef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 	u8 rsvd2;
diff --git a/drivers/crypto/caam/regs.h b/drivers/crypto/caam/regs.h
index 25d912a..c98db5c 100644
--- a/drivers/crypto/caam/regs.h
+++ b/drivers/crypto/caam/regs.h
@@ -119,6 +119,13 @@
 #define rd_dma(value) caam32_to_cpu(value)
 #endif
 
+#ifdef CONFIG_SOC_IMX7D
+#define wr_dma64(value) (((u64)cpu_to_caam32(lower_32_bits(value)) << 32) | \
+			 (u64)cpu_to_caam32(upper_32_bits(value)))
+#else
+#define wr_dma64(value) cpu_to_caam64(value)
+#endif
+
 #ifdef CONFIG_64BIT
 #ifdef CONFIG_PPC
 #ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
diff --git a/drivers/crypto/caam/sg_sw_sec4.h b/drivers/crypto/caam/sg_sw_sec4.h
index e303ead..14934082 100644
--- a/drivers/crypto/caam/sg_sw_sec4.h
+++ b/drivers/crypto/caam/sg_sw_sec4.h
@@ -15,7 +15,7 @@ struct sec4_sg_entry;
 static inline void dma_to_sec4_sg_one(struct sec4_sg_entry *sec4_sg_ptr,
 				      dma_addr_t dma, u32 len, u16 offset)
 {
-	sec4_sg_ptr->ptr = wr_dma(dma);
+	sec4_sg_ptr->ptr = wr_dma64(dma);
 	sec4_sg_ptr->len = cpu_to_caam32(len);
 	sec4_sg_ptr->buf_pool_id = 0;
 	sec4_sg_ptr->offset = cpu_to_caam16(offset & SEC4_SG_OFFSET_MASK);
-- 
2.9.3

