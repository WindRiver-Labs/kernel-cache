From a2394bafb1fa0a4b3014af0eea534e75c1a18159 Mon Sep 17 00:00:00 2001
From: Scott Wood <scottwood@freescale.com>
Date: Wed, 5 Dec 2012 18:36:18 -0600
Subject: [PATCH 014/547] powerpc/e6500: fully disable threads

smt-enabled=off doesn't actually stop the secondary thread from being
enabled, as that's done early in a hard-coded way.  This is a hack to
prevent that from happening with minimal side effects.

With this patch, if CONFIG_PPC_DISABLE_THREADS=y, threads are
unconditionally disabled, without regard to the kernel command line.  If
you want to enable threads, you must build with
CONFIG_PPC_DISABLE_THREADS=n.

Signed-off-by: Scott Wood <scottwood@freescale.com>
Signed-off-by: Andy Fleming <afleming@freescale.com>
Change-Id: I578cb4ae43fa6fab0f75b24ce763667dbeb72d69
Reviewed-on: http://git.am.freescale.net:8181/1706
Reviewed-by: Schmitt Richard-B43082 <B43082@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[Original patch taken from QorIQ-SDK-V1.4-SOURCE-20130625-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/powerpc/kernel/exceptions-64e.S   | 2 ++
 arch/powerpc/kernel/setup_64.c         | 5 ++++-
 arch/powerpc/platforms/Kconfig.cputype | 8 +++++++-
 3 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/arch/powerpc/kernel/exceptions-64e.S b/arch/powerpc/kernel/exceptions-64e.S
index ae3fc0e..120b61c 100644
--- a/arch/powerpc/kernel/exceptions-64e.S
+++ b/arch/powerpc/kernel/exceptions-64e.S
@@ -1386,6 +1386,7 @@ BEGIN_FTR_SECTION
 	andi.	r3,r3,2
 	bne	1b
 
+#ifndef CONFIG_PPC_DISABLE_THREADS
 	/* Configure the MSR per the default */
 	LOAD_REG_IMMEDIATE(r3, MSR_KERNEL);
 	MTTMR(TMRN_IMSR1, 3);
@@ -1400,6 +1401,7 @@ BEGIN_FTR_SECTION
 	/* Release the other thread. It will spin until kick_cpu is called */
 	li	r3, 2
 	mtspr	SPRN_TENS, r3
+#endif
 END_FTR_SECTION_IFSET(CPU_FTR_SMT)
 2:	blr
 
diff --git a/arch/powerpc/kernel/setup_64.c b/arch/powerpc/kernel/setup_64.c
index 241d7bc..9a6444e 100644
--- a/arch/powerpc/kernel/setup_64.c
+++ b/arch/powerpc/kernel/setup_64.c
@@ -129,6 +129,9 @@ static void setup_tlb_per_core(void)
 /* Look for ibm,smt-enabled OF option */
 static void check_smt_enabled(void)
 {
+#ifdef CONFIG_PPC_DISABLE_THREADS
+	smt_enabled_at_boot = 0;
+#else
 	struct device_node *dn;
 	const char *smt_option;
 
@@ -166,7 +169,7 @@ static void check_smt_enabled(void)
 			of_node_put(dn);
 		}
 	}
-
+#endif
 	setup_tlb_per_core();
 }
 
diff --git a/arch/powerpc/platforms/Kconfig.cputype b/arch/powerpc/platforms/Kconfig.cputype
index d1ab82b..3c7016f 100644
--- a/arch/powerpc/platforms/Kconfig.cputype
+++ b/arch/powerpc/platforms/Kconfig.cputype
@@ -215,9 +215,15 @@ config FSL_ERRATUM_A_006184_PERIOD
 	  since when idle we will always have just executed from the main
 	  kernel mapping, so it should not be absent from the L1 I-MMU.
 
+config PPC_DISABLE_THREADS
+	bool "Avoid the use of hardware threads"
+	help
+	  Define this if running e6500 rev1 to avoid bugs
+	  relating to hardware threads.
+
 config FSL_ERRATUM_A_006198
 	bool "Work around e6500 rev1 erratum A-006198"
-	depends on PPC_E500MC
+	depends on PPC_E500MC && !PPC_DISABLE_THREADS
 	help
 	  Define this if running e6500 rev1, to avoid a source
 	  of hangs due to CPU erratum A-006198.
-- 
1.8.4.93.g57e4c17

