From 6b2aa9beafd78f7020c5d65bdb2b0d931543d668 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@freescale.com>
Date: Tue, 2 Jul 2013 14:23:08 +0300
Subject: [PATCH 6/7] dpa_offload: Add support for header manipulation on DPA
 Classifier next_table action

The DPA Classifier API did not allow the user to add header
manipulation on an entry whose action was sending the frames to
a new classification table. This change adds this support
to the DPA Classifier by adding an "hmd" (header manipulation
descriptor) attribute to the "dpa_cls_tbl_next_table_desc"
parameters structure.

Signed-off-by: Marian Chereji <marian.chereji@freescale.com>
Change-Id: I126cdfad8e76a8bec4453c8f7b506ad3380349e2
Reviewed-on: http://git.am.freescale.net:8181/3106
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[Delivered from Freescale to support dpa_offload against sdkv1.4.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c   |   27 ++++++++++++++++++++
 .../staging/fsl_dpa_offload/wrp_dpa_classifier.c   |    2 +
 include/linux/fsl_dpa_classifier.h                 |    9 +++++-
 3 files changed, 36 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 6b8097f..676f11c 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -3027,6 +3027,33 @@ static int action_to_next_engine_params(const struct dpa_cls_tbl_action *action,
 			return -EINVAL;
 		}
 
+		if (action->next_table_params.hmd != DPA_OFFLD_DESC_NONE) {
+			if (!hmd) {
+				log_err("Header manipulations are not allowed on "
+					"this action.\n");
+				return -EINVAL;
+			}
+			if (!dpa_classif_hm_is_chain_head(
+						action->next_table_params.hmd)) {
+				log_err("hmd=%d is not a header manipulation "
+					"chain head. Only chain heads can be "
+					"used by the classifier table.\n",
+					action->next_table_params.hmd);
+				return -EINVAL;
+			}
+			next_engine_params->h_Manip = (t_Handle)
+		dpa_classif_hm_lock_chain(action->next_table_params.hmd);
+			if (!next_engine_params->h_Manip) {
+				log_err("Failed to attach HM op hmd=%d to "
+					"classification entry.",
+					action->next_table_params.hmd);
+				return -EINVAL;
+			}
+
+			*hmd = action->next_table_params.hmd;
+		} else
+			next_engine_params->h_Manip = NULL;
+
 		next_engine_params->nextEngine = e_FM_PCD_CC;
 		next_table = (struct dpa_cls_table *)
 			table_array.object[action->next_table_params.next_td];
diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
index cc67eef..216a61b 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
@@ -2481,6 +2481,7 @@ int dpa_cls_tbl_action_params_compatcpy(
 	case DPA_CLS_TBL_ACTION_NEXT_TABLE:
 		kparam->next_table_params.next_td =
 				uparam->next_table_params.next_td;
+		kparam->next_table_params.hmd = uparam->next_table_params.hmd;
 		break;
 	case DPA_CLS_TBL_ACTION_MCAST:
 		kparam->mcast_params.grpd = uparam->mcast_params.grpd;
@@ -2525,6 +2526,7 @@ int dpa_cls_tbl_action_params_rcompatcpy(
 	case DPA_CLS_TBL_ACTION_NEXT_TABLE:
 		uparam->next_table_params.next_td =
 				kparam->next_table_params.next_td;
+		uparam->next_table_params.hmd = kparam->next_table_params.hmd;
 		break;
 	default:
 		break;
diff --git a/include/linux/fsl_dpa_classifier.h b/include/linux/fsl_dpa_classifier.h
index 96f1273..f81ea90 100644
--- a/include/linux/fsl_dpa_classifier.h
+++ b/include/linux/fsl_dpa_classifier.h
@@ -246,8 +246,7 @@ struct dpa_cls_tbl_enq_action_desc {
 
 	/*
 	 * Descriptor of the header manipulation chain to use with this
-	 * entry. Use a negative value if no header manipulation should be
-	 * performed for this entry.
+	 * entry.
 	 */
 	int					hmd;
 
@@ -267,6 +266,12 @@ struct dpa_cls_tbl_next_table_desc {
 	 * classification with
 	 */
 	int		next_td;
+
+	/*
+	 * Descriptor of the header manipulation chain to use before sending
+	 * the frames to the next table.
+	 */
+	int		hmd;
 };
 
 struct dpa_cls_tbl_mcast_group_desc {
-- 
1.7.5.4

