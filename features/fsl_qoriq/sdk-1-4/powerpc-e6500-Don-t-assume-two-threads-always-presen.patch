From 14f0f6038fa30d1a8dfbcc44b089539ff7fc219b Mon Sep 17 00:00:00 2001
From: Laurentiu Tudor <Laurentiu.Tudor@freescale.com>
Date: Thu, 14 Mar 2013 16:13:51 +0200
Subject: [PATCH 012/547] powerpc/e6500: Don't assume two threads always
 present

There are virtualization scenarios that might expose
to guests e6500 cores with just one thread.
So check first how many threads are available and only
after that try starting them.

Signed-off-by: Laurentiu Tudor <Laurentiu.Tudor@freescale.com>
Change-Id: I7e14c0d7e9a792ad47e3f9cc41cf73a6a2b954f4
Reviewed-on: http://git.am.freescale.net:8181/578
Reviewed-by: Wood Scott-B07421 <scottwood@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[Original patch taken from QorIQ-SDK-V1.4-SOURCE-20130625-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/powerpc/include/asm/reg_booke.h | 1 +
 arch/powerpc/kernel/exceptions-64e.S | 8 ++++++--
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/arch/powerpc/include/asm/reg_booke.h b/arch/powerpc/include/asm/reg_booke.h
index 8ae6b9f..b8682a3 100644
--- a/arch/powerpc/include/asm/reg_booke.h
+++ b/arch/powerpc/include/asm/reg_booke.h
@@ -717,6 +717,7 @@
 #define MMUBE1_VBE4		0x00000002
 #define MMUBE1_VBE5		0x00000001
 
+#define TMRN_TMCFG0	0x010	/* Thread Management Configuration Register 0 */
 #define TMRN_TPRI0	0x0C0	/* Thread Priority Register 0 */
 #define TMRN_TPRI1	0x0C1	/* Thread Priority Register 1 */
 #define TMRN_TPRI2	0x0C2	/* Thread Priority Register 2 */
diff --git a/arch/powerpc/kernel/exceptions-64e.S b/arch/powerpc/kernel/exceptions-64e.S
index 0a8f99f..086fbc3 100644
--- a/arch/powerpc/kernel/exceptions-64e.S
+++ b/arch/powerpc/kernel/exceptions-64e.S
@@ -1364,6 +1364,11 @@ _STATIC(init_core_book3e)
 
 _GLOBAL(fsl_enable_threads)
 BEGIN_FTR_SECTION
+	MFTMR(TMRN_TMCFG0, 3)
+	andi. r3,r3,0x3f
+	cmpi 0,r3,2
+	blt 2f
+
 	/* Disable the other thread */
 	li	r3,2
 	mtspr	SPRN_TENC,r3
@@ -1387,8 +1392,7 @@ BEGIN_FTR_SECTION
 	li	r3, 2
 	mtspr	SPRN_TENS, r3
 END_FTR_SECTION_IFSET(CPU_FTR_SMT)
-
-	blr
+2:	blr
 
 _STATIC(init_thread_book3e)
 	lis	r3,(SPRN_EPCR_ICM | SPRN_EPCR_GICM)@h
-- 
1.8.4.93.g57e4c17

