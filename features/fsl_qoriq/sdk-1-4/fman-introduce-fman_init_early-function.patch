From 6e799379615d58c09dd58d07fa66a0d463320a33 Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Fri, 2 Aug 2013 17:51:20 +0800
Subject: [PATCH 171/430] fman: introduce fman_init_early function

We can't reset B/QMAN in dump kernel. So we just free all
the B/Qman resources before booting the dump kernel. Since we
also need to shutdown FMAN before we free these resources,
introduce fman_init_early function for kexec to register
a crash shutdown hooks to do this.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
[Modify for current kernel context.]
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 .../freescale/fman/src/wrapper/lnxwrp_fm.c         |   35 ++++++++++++++++++++
 1 files changed, 35 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
index 2c419eb..c974dca 100644
--- a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
+++ b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
@@ -60,6 +60,8 @@
 #include <sysdev/fsl_soc.h>
 #include <linux/stat.h>	   /* For file access mask */
 #include <linux/skbuff.h>
+#include <linux/device.h>
+#include <asm/kexec.h>
 
 /* NetCommSw Headers --------------- */
 #include "std_ext.h"
@@ -1315,6 +1317,39 @@ EXPORT_SYMBOL(fm_mutex_unlock);
 
 static t_Handle h_FmLnxWrp;
 
+#ifdef CONFIG_KEXEC
+static int fm_crash_shutdown(struct device *dev, void *data)
+{
+
+	t_LnxWrpFmDev   *p;
+
+        struct platform_driver *drv = data;
+
+        if (dev->driver != &drv->driver)
+                return 0;
+
+        p = dev_get_drvdata(dev);
+
+        if (p->h_Dev)
+                FM_Free(p->h_Dev);
+
+        return 0;
+}
+
+static void fm_crash_shutdown_all(void)
+{
+        bus_for_each_dev(&platform_bus_type, NULL,
+                        &fm_driver, fm_crash_shutdown);
+}
+
+void __init fman_init_early(void)
+{
+        crash_shutdown_register(&fm_crash_shutdown_all);
+}
+#else
+void __init fman_init_early(void) {}
+#endif
+
 static int __init __cold fm_load (void)
 {
     if ((h_FmLnxWrp = LNXWRP_FM_Init()) == NULL)
-- 
1.7.5.4

