From fd27f70a53fe14053ae832f81b96d34dce04de05 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Thu, 21 Nov 2013 09:35:54 +0800
Subject: [PATCH] powerpc/booke64: use LOAD_REG_IMMEDIATE() in setting of
 exception specific kernel stack

The macro LOAD_REG_ADDR() has a dependency on the r2 register
(TOC pointer). But the r2 is only initialized in the EXCEPTION_COMMON.
So when we set the exception specific kernel stack in EXCEPTION_PROLOG,
we can't use LOAD_REG_ADDR(). Otherwise we would get into trouble in
the following scenario:
  1) Enable single step in userspace application.
  2) A exception occur (sc, tlb etc).
  3) Trap to kernel exception entry.
  4) A debug exception occur by executing the first instruction in
     exception handler.
  5) LOAD_REG_ADDR() -- the r2 still hold the content of userspace
     application.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/kernel/exceptions-64e.S | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/powerpc/kernel/exceptions-64e.S b/arch/powerpc/kernel/exceptions-64e.S
index 91e6d66..b06185c 100644
--- a/arch/powerpc/kernel/exceptions-64e.S
+++ b/arch/powerpc/kernel/exceptions-64e.S
@@ -48,7 +48,7 @@
 	bne	1f;					\
 	mfspr	r14,SPRN_PIR;				\
 	slwi	r14,r14,3;				\
-	LOAD_REG_ADDR(r10, level##_STACK_BASE);		\
+	LOAD_REG_IMMEDIATE(r10, level##_STACK_BASE);	\
 	add	r10,r10,r14;				\
 	ld	r10,0(r10);				\
 	addi	r10,r10,THREAD_SIZE;			\
@@ -58,7 +58,7 @@
 #define BOOK3E_LOAD_EXC_LEVEL_STACK(level)		\
 	andi.	r10,r11,MSR_PR;				\
 	bne	1f;					\
-	LOAD_REG_ADDR(r10, level##_STACK_BASE);		\
+	LOAD_REG_IMMEDIATE(r10, level##_STACK_BASE);		\
 	ld	r10,0(r10);				\
 	addi	r10,r10,THREAD_SIZE;			\
 	std	r10,PACA_##level##_STACK(r13);
-- 
1.8.4.93.g57e4c17

