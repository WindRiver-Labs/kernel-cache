From bc0e51cb6302d49ce7be8ec0c3feb1a7c8ab9e75 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Tue, 19 Nov 2013 16:27:50 +0800
Subject: [PATCH 2/3] net/gianfar: don't blindly enable the irq

The function gfar_poll_tx/rx() may be used in a irq disabled context,
such as netconsole, kgdboe. So the using of spin_lock/unlock_irq
in them is definitely wrong. Replace them with spin_lock_irqsave
and spin_unlock_irqrestore.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/freescale/gianfar.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/freescale/gianfar.c b/drivers/net/ethernet/freescale/gianfar.c
index 34c578c..8c63efa 100644
--- a/drivers/net/ethernet/freescale/gianfar.c
+++ b/drivers/net/ethernet/freescale/gianfar.c
@@ -3577,6 +3577,7 @@ static int gfar_poll_tx(struct napi_struct *napi, int budget)
 	struct gfar_priv_tx_q *tx_queue = NULL;
 	u32 tstat_txf, imask;
 	int i;
+	unsigned long flags;
 
 	tstat_txf = gfar_read(&regs->tstat) & TSTAT_TXF_MASK_ALL;
 	/* Clear IEVENT, so interrupts aren't called again
@@ -3594,11 +3595,11 @@ static int gfar_poll_tx(struct napi_struct *napi, int budget)
 
 	napi_complete(napi);
 
-	spin_lock_irq(&napi_tx->grp->grplock);
+	spin_lock_irqsave(&napi_tx->grp->grplock, flags);
 	imask = gfar_read(&regs->imask);
 	imask |= IMASK_TX_DEFAULT;
 	gfar_write(&regs->imask, imask);
-	spin_unlock_irq(&napi_tx->grp->grplock);
+	spin_unlock_irqrestore(&napi_tx->grp->grplock, flags);
 
 	/* If we are coalescing interrupts, update the timer
 	 * Otherwise, clear it
@@ -3663,16 +3664,17 @@ static int gfar_poll_rx(struct napi_struct *napi, int budget)
 
 		if (unlikely(!num_act_queues)) {
 			u32 imask;
+			unsigned long flags;
 			napi_complete(napi);
 
 			/* Clear the halt bit in RSTAT */
 			gfar_write(&regs->rstat, napi_rx->rstat);
 
-			spin_lock_irq(&napi_rx->grp->grplock);
+			spin_lock_irqsave(&napi_rx->grp->grplock, flags);
 			imask = gfar_read(&regs->imask);
 			imask |= IMASK_RX_DEFAULT;
 			gfar_write(&regs->imask, imask);
-			spin_unlock_irq(&napi_rx->grp->grplock);
+			spin_unlock_irqrestore(&napi_rx->grp->grplock, flags);
 
 			/* If we are coalescing interrupts, update the timer
 			 * Otherwise, clear it
-- 
1.8.4.93.g57e4c17

