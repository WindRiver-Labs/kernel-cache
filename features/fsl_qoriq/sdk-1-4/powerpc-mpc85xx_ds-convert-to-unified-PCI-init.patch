From 29d47ecd03dc2a16ff9d8672fd1a70bb48bc337a Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Fri, 2 Aug 2013 17:38:08 +0800
Subject: [PATCH 284/430] powerpc/mpc85xx_ds: convert to unified PCI init

commit 91a6f347921e9a65392301aecb218cb88d625528 upstream

Similar to how the primary PCI bridge is identified by looking
for an isa subnode, we determine whether to apply uli exclusions
by looking for a uli subnode.

Signed-off-by: Scott Wood <scottwood@freescale.com>
Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 arch/powerpc/platforms/85xx/mpc85xx_ds.c |   69 +++++++++++++----------------
 1 files changed, 31 insertions(+), 38 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/mpc85xx_ds.c b/arch/powerpc/platforms/85xx/mpc85xx_ds.c
index 938993b..3a10ee4 100644
--- a/arch/powerpc/platforms/85xx/mpc85xx_ds.c
+++ b/arch/powerpc/platforms/85xx/mpc85xx_ds.c
@@ -46,6 +46,8 @@
 #define DBG(fmt, args...)
 #endif
 
+static struct device_node *pci_with_uli;
+
 #ifdef CONFIG_PPC_I8259
 static void mpc85xx_8259_cascade(unsigned int irq, struct irq_desc *desc)
 {
@@ -120,15 +122,9 @@ extern int uli_exclude_device(struct pci_controller *hose,
 static int mpc85xx_exclude_device(struct pci_controller *hose,
 				   u_char bus, u_char devfn)
 {
-	struct device_node* node;
-	struct resource rsrc;
-
-	node = hose->dn;
-	of_address_to_resource(node, 0, &rsrc);
 
-	if ((rsrc.start & 0xfffff) == primary_phb_addr) {
+	if (hose->dn == pci_with_uli)
 		return uli_exclude_device(hose, bus, devfn);
-	}
 
 	return PCIBIOS_SUCCESSFUL;
 }
@@ -137,32 +133,41 @@ static int mpc85xx_exclude_device(struct pci_controller *hose,
 /*
  * Setup the architecture
  */
-static void __init mpc85xx_ds_setup_arch(void)
+static void __init mpc85xx_ds_pci_init(void)
 {
 #ifdef CONFIG_PCI
-	struct device_node *np;
-#endif
 
-	if (ppc_md.progress)
-		ppc_md.progress("mpc85xx_ds_setup_arch()", 0);
+	struct device_node *node;
 
-	mpc85xx_smp_init();
+	fsl_pci_setup();
 
-#ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	/*  See if we have a ULI under the primary */
 
-	ppc_md.pci_exclude_device = mpc85xx_exclude_device;
+	node = of_find_node_by_name(NULL, "uli1575");
+	while ((pci_with_uli = of_get_parent(node))) {
+		of_node_put(node);
+		node = pci_with_uli;
+		if (pci_with_uli == fsl_pci_primary) {
+			ppc_md.pci_exclude_device = mpc85xx_exclude_device;
+			break;
+		}
+	}
 #endif
+}
 
-#ifdef CONFIG_SWIOTLB
-	if (memblock_end_of_DRAM() > 0xffffffff)
-		ppc_swiotlb_enable = 1;
-#endif
+/*
+ * Setup the architecture
+ */
+static void __init mpc85xx_ds_setup_arch(void)
+{
+	if (ppc_md.progress)
+		ppc_md.progress("mpc85xx_ds_setup_arch()", 0);
 
-	printk("MPC85xx DS board from Freescale Semiconductor\n");
+	mpc85xx_ds_pci_init();
+	mpc85xx_smp_init();
+ 
+ 	printk("MPC85xx DS board from Freescale Semiconductor\n");
 }
-
 /*
  * Called very early, device-tree isn't unflattened
  */
@@ -170,12 +175,8 @@ static int __init mpc8544_ds_probe(void)
 {
 	unsigned long root = of_get_flat_dt_root();
 
-	if (of_flat_dt_is_compatible(root, "MPC8544DS")) {
-#ifdef CONFIG_PCI
-		primary_phb_addr = 0xb000;
-#endif
+	if (of_flat_dt_is_compatible(root, "MPC8544DS"))
 		return 1;
-	}
 
 	return 0;
 }
@@ -209,12 +210,8 @@ static int __init mpc8572_ds_probe(void)
 {
 	unsigned long root = of_get_flat_dt_root();
 
-	if (of_flat_dt_is_compatible(root, "fsl,MPC8572DS")) {
-#ifdef CONFIG_PCI
-		primary_phb_addr = 0x8000;
-#endif
+	if (of_flat_dt_is_compatible(root, "fsl,MPC8572DS"))
 		return 1;
-	}
 
 	return 0;
 }
@@ -226,12 +223,8 @@ static int __init p2020_ds_probe(void)
 {
 	unsigned long root = of_get_flat_dt_root();
 
-	if (of_flat_dt_is_compatible(root, "fsl,P2020DS")) {
-#ifdef CONFIG_PCI
-		primary_phb_addr = 0x9000;
-#endif
+	if (of_flat_dt_is_compatible(root, "fsl,P2020DS"))
 		return 1;
-	}
 
 	return 0;
 }
-- 
1.7.5.4

