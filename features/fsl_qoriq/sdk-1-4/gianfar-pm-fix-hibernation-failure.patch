From fbd2692d01bfe63531a86c677f3a15369fb01341 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Thu, 27 Feb 2014 10:45:23 +0800
Subject: [PATCH] gianfar/pm: fix hibernation failure

This is an issue caused by the mismatch between gfar_suspend()
and gfar_restore().

Before entering the hibernation the gfar_suspend() will release
the skb and irq resources used by gfar if the wol is not enabled.
When leaving hibernation, the gfar_restore() is invoked instead
of gfar_resume() and it assumes that the skb buffer is still
available. This is definitely not true and then causes the kernel
panic.

So change the gfar_suspend() and gfar_release() not to release
the skb and irq resources no matter wol is enabled or not.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/net/ethernet/freescale/gianfar.c |   39 +++++++++++------------------
 1 files changed, 15 insertions(+), 24 deletions(-)

diff --git a/drivers/net/ethernet/freescale/gianfar.c b/drivers/net/ethernet/freescale/gianfar.c
index 2ea5c5c..612b7df 100644
--- a/drivers/net/ethernet/freescale/gianfar.c
+++ b/drivers/net/ethernet/freescale/gianfar.c
@@ -1479,17 +1479,8 @@ static int gfar_suspend(struct device *dev)
 	int retval;
 	u32 tempval;
 
-	if (!priv->wol_opts) {
-		/* Wake-On-Lan is disabled */
-		if (!netif_running(ndev))
-			return 0;
-		gfar_close(ndev);
+	if (!priv->wol_opts && !netif_running(ndev))
 		return 0;
-	}
-
-	retval = mpc85xx_pmc_set_wake(dev, true);
-	if (retval)
-		return retval;
 
 	netif_device_detach(ndev);
 	disable_napi(priv);
@@ -1509,7 +1500,14 @@ static int gfar_suspend(struct device *dev)
 		gfar_enable_filer(ndev);
 	}
 
-	gfar_rx_start(ndev);
+	if (priv->wol_opts) {
+		retval = mpc85xx_pmc_set_wake(dev, true);
+		if (retval)
+			return retval;
+
+		gfar_rx_start(ndev);
+	}
+
 	return 0;
 }
 
@@ -1520,17 +1518,13 @@ static int gfar_resume(struct device *dev)
 	struct gfar __iomem *regs = priv->gfargrp[0].regs;
 	u32 tempval, i;
 
-	if (!priv->wol_opts) {
-		/* Wake-On-Lan is disabled */
-		if (!netif_running(ndev))
-			return 0;
-		gfar_enet_open(ndev);
+	if (!priv->wol_opts && !netif_running(ndev))
 		return 0;
-	}
-
-	mpc85xx_pmc_set_wake(dev, false);
 
-	gfar_halt_rx(ndev);
+	if (priv->wol_opts) {
+		mpc85xx_pmc_set_wake(dev, false);
+		gfar_halt_rx(ndev);
+	}
 
 	if (priv->wol_opts & GIANFAR_WOL_MAGIC) {
 		/* Disable Magic Packet mode */
@@ -1687,11 +1681,8 @@ static int gfar_restore(struct device *dev)
 	struct gfar_private *priv = dev_get_drvdata(dev);
 	struct net_device *ndev = priv->ndev;
 
-	if (!netif_running(ndev)) {
-		netif_device_attach(ndev);
-
+	if (!netif_running(ndev))
 		return 0;
-	}
 
 	if (gfar_init_bds(ndev)) {
 		free_skb_resources(priv);
-- 
1.7.5.4

