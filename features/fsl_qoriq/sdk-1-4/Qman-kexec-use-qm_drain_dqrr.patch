From 81b1ef0fb9f2f35b1a89ab531bbcb3d0521fb51e Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Tue, 3 Sep 2013 16:53:54 +0800
Subject: [PATCH] Qman/kexec: use qm_drain_dqrr

When we rebase Qman driver on SDK v1.4, one previous commit,

"qman: drain the dqrr entries in kexec boot"

is changed, and qm_drain_dqrr() is replaced with current
qm_dqrr_cdc_consume_n().

But it seems that qm_dqrr_cdc_consume_n() only mark all
the DQRR entries as being consumed in the register. But it
doesn't update the corresponding ci, cursor, fill and vbit
in struct qm_dqrr, this will cause inconsistency between
software and hardware. When we use these values in ci and
vbit to get the current FD from DQRR entries, the content of
it is definitely stale. So we should use the qm_drain_dqrr
to drain the DQRR entries here.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index f23d77b..1e889a7 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -516,8 +516,10 @@ struct qman_portal *qman_create_portal(
 	isdr ^= (QM_PIRQ_DQRI | QM_PIRQ_MRI);
 	qm_isr_disable_write(__p, isdr);
 	if (qm_dqrr_current(__p) != NULL) {
-		pr_err("Qman DQRR unclean\n");
-		qm_dqrr_cdc_consume_n(__p, 0xffff);
+		if (qm_drain_dqrr(__p)) {
+			pr_err("Qman DQRR unclean\n");
+			goto fail_dqrr_mr_empty;
+		}
 	}
 	if (qm_mr_current(__p) != NULL) {
 		/* special handling, drain just in case it's a few FQRNIs */
-- 
1.7.5.4

