From f0ff1aefeff75841fa35ed3070e59cf28d4c2a7b Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Mon, 5 Aug 2013 13:30:14 +0800
Subject: [PATCH 306/430] powerpc/fsl-pci; Revert Add pci inbound/outbound PM
 support

Since upstream have a new way to implement PCI PM support, so
we need to revert the old patch.

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 arch/powerpc/sysdev/fsl_pci.c |  105 -----------------------------------------
 1 files changed, 0 insertions(+), 105 deletions(-)

diff --git a/arch/powerpc/sysdev/fsl_pci.c b/arch/powerpc/sysdev/fsl_pci.c
index 652e7bf..2d74e28 100644
--- a/arch/powerpc/sysdev/fsl_pci.c
+++ b/arch/powerpc/sysdev/fsl_pci.c
@@ -1050,117 +1050,12 @@ static int __devinit fsl_pci_probe(struct platform_device *pdev)
 	return 0;
 }
 
-#ifdef CONFIG_SUSPEND
-
-#define PCI_POW_PIW_OFFSET	0xc00
-#define PCI_POW_PIW_SIZE	0x200
-#define PCI_POW_NUMBER		5
-
-static int fsl_pci_suspend(struct platform_device *pdev, pm_message_t state)
-{
-	struct pci_controller *hose;
-	struct pci_outbound_window_regs *pci_saved_pow;
-	struct pci_inbound_window_regs *pci_saved_piw, *temp_piw;
-	struct ccsr_pci __iomem *pci;
-	unsigned int i;
-
-	hose = pci_find_hose_for_OF_device(pdev->dev.of_node);
-	pci = of_iomap(pdev->dev.of_node, 0);
-
-	if (!pci) {
-		dev_err(&pdev->dev, "Unable to map PCI registers\n");
-		return -ENOMEM;
-	}
-	hose->pci_pow = (struct pci_outbound_window_regs *)
-				((void *)pci + PCI_POW_PIW_OFFSET);
-
-	hose->pci_piw = (struct pci_inbound_window_regs *)
-		((void *)hose->pci_pow + PCI_POW_PIW_SIZE) - 1;
-
-	hose->inbound_num = 3;
-	if (early_find_capability(hose, 0, 0, PCI_CAP_ID_EXP)) {
-		if (in_be32(&pci->block_rev1) >= PCIE_IP_REV_2_2)
-			hose->inbound_num = 4;
-	}
-
-	hose->saved_regs = kmalloc(
-		sizeof(struct pci_outbound_window_regs) * PCI_POW_NUMBER +
-		sizeof(struct pci_inbound_window_regs) * hose->inbound_num,
-		GFP_KERNEL);
-	if (!hose->saved_regs)
-		goto err;
-
-	pci_saved_pow = hose->saved_regs;
-	for (i = 0; i < PCI_POW_NUMBER; i++) {
-		pci_saved_pow[i].potar = in_be32(&hose->pci_pow[i].potar);
-		pci_saved_pow[i].potear = in_be32(&hose->pci_pow[i].potear);
-		pci_saved_pow[i].powbar = in_be32(&hose->pci_pow[i].powbar);
-		pci_saved_pow[i].powar = in_be32(&hose->pci_pow[i].powar);
-	}
-
-	pci_saved_piw = (struct pci_inbound_window_regs *)
-		(pci_saved_pow + PCI_POW_NUMBER);
-	temp_piw = hose->pci_piw;
-	for (i = 0; i < hose->inbound_num; i++, temp_piw--) {
-		pci_saved_piw[i].pitar = in_be32(&temp_piw->pitar);
-		pci_saved_piw[i].piwbar = in_be32(&temp_piw->piwbar);
-		pci_saved_piw[i].piwbear = in_be32(&temp_piw->piwbear);
-		pci_saved_piw[i].piwar = in_be32(&temp_piw->piwar);
-	}
-
-	return 0;
-
-err:
-	iounmap(pci);
-	return -ENOMEM;
-}
-
-static int fsl_pci_resume(struct platform_device *pdev)
-{
-	struct pci_controller *hose;
-	struct pci_outbound_window_regs *pci_saved_pow;
-	struct pci_inbound_window_regs *pci_saved_piw, *temp_piw;
-	unsigned int i;
-
-	hose = pci_find_hose_for_OF_device(pdev->dev.of_node);
-	if (!hose->pci_pow || !hose->pci_piw || !hose->saved_regs)
-		return 0;
-
-	pci_saved_pow = hose->saved_regs;
-	for (i = 0; i < PCI_POW_NUMBER; i++) {
-		out_be32(&hose->pci_pow[i].potar, pci_saved_pow[i].potar);
-		out_be32(&hose->pci_pow[i].potear, pci_saved_pow[i].potear);
-		out_be32(&hose->pci_pow[i].powbar, pci_saved_pow[i].powbar);
-		out_be32(&hose->pci_pow[i].powar, pci_saved_pow[i].powar);
-	}
-
-	pci_saved_piw = (struct pci_inbound_window_regs *)
-		(pci_saved_pow + PCI_POW_NUMBER);
-	temp_piw = hose->pci_piw;
-	for (i = 0; i < hose->inbound_num; i++, temp_piw--) {
-		out_be32(&temp_piw->pitar, pci_saved_piw[i].pitar);
-		out_be32(&temp_piw->piwbar, pci_saved_piw[i].piwbar);
-		out_be32(&temp_piw->piwbear, pci_saved_piw[i].piwbear);
-		out_be32(&temp_piw->piwar, pci_saved_piw[i].piwar);
-	}
-	iounmap(hose->pci_pow);
-	kfree(hose->saved_regs);
-	hose->saved_regs = NULL;
-
-	return 0;
-}
-#endif
-
 static struct platform_driver fsl_pci_driver = {
 	.driver = {
 		.name = "fsl-pci",
 		.of_match_table = pci_ids,
 	},
 	.probe = fsl_pci_probe,
-#ifdef CONFIG_SUSPEND
-	.suspend	= fsl_pci_suspend,
-	.resume		= fsl_pci_resume,
-#endif
 };
 
 static int __init fsl_pci_init(void)
-- 
1.7.5.4

