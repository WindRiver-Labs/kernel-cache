From 6554e122f39ccbebac2efd2e280a5403f906c3f7 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Thu, 6 Dec 2012 13:08:37 +0800
Subject: [PATCH 464/547] bman: don't do override bman BAR

The capture kernel mightn't override bman resource which is already
used, and so we shouldn't reallocate bman resource for capture kernel.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_qbman/bman_config.c | 28 ++++++++++++++++++++++------
 1 file changed, 22 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_config.c b/drivers/staging/fsl_qbman/bman_config.c
index a2f2ad4..baf1355 100644
--- a/drivers/staging/fsl_qbman/bman_config.c
+++ b/drivers/staging/fsl_qbman/bman_config.c
@@ -235,6 +235,18 @@ static void bm_set_pool(struct bman *bm, u8 pool, u32 swdet, u32 swdxt,
 	bm_out(POOL_HWDXT(pool), __generate_thresh(hwdxt, 1));
 }
 
+#ifdef CONFIG_CRASH_DUMP
+static int bm_is_initalized(struct bman *bm)
+{
+	return bm_in(FBPR_BAR);
+}
+#else
+static int bm_is_initalized(struct bman *bm)
+{
+	return 0;
+}
+#endif
+
 static void bm_set_memory(struct bman *bm, u64 ba, int prio, u32 size)
 {
 	u32 exp = ilog2(size);
@@ -243,9 +255,11 @@ static void bm_set_memory(struct bman *bm, u64 ba, int prio, u32 size)
 			is_power_of_2(size));
 	/* choke if '[e]ba' has lower-alignment than 'size' */
 	DPA_ASSERT(!(ba & (size - 1)));
-	bm_out(FBPR_BARE, upper_32_bits(ba));
-	bm_out(FBPR_BAR, lower_32_bits(ba));
-	bm_out(FBPR_AR, (prio ? 0x40000000 : 0) | (exp - 1));
+	if (!bm_is_initalized(bm)) {
+		bm_out(FBPR_BARE, upper_32_bits(ba));
+		bm_out(FBPR_BAR, lower_32_bits(ba));
+		bm_out(FBPR_AR, (prio ? 0x40000000 : 0) | (exp - 1));
+	}
 }
 
 /*****************/
@@ -336,15 +350,17 @@ static int __init fsl_bman_init(struct device_node *node)
 	s = of_get_property(node, "fsl,hv-claimable", &ret);
 	if (s && !strcmp(s, "standby"))
 		standby = 1;
+	regs = ioremap(res.start, res.end - res.start + 1);
+	bm = bm_create(regs);
+	BUG_ON(!bm);
+	if (bm_is_initalized(bm))
+		standby = 1;
 	if (!standby) {
 		ret = parse_mem_property(node, "fsl,bman-fbpr",
 					&fbpr_a, &fbpr_sz, 0);
 		BUG_ON(ret);
 	}
 	/* Global configuration */
-	regs = ioremap(res.start, res.end - res.start + 1);
-	bm = bm_create(regs);
-	BUG_ON(!bm);
 	bm_node = node;
 	bm_get_version(bm, &id, &major, &minor);
 	pr_info("Bman ver:%04x,%02x,%02x\n", id, major, minor);
-- 
1.8.4.93.g57e4c17

