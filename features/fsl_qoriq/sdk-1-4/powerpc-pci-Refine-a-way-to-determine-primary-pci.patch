From edbf012218ca5c1582f3f295501b11de1fa02c77 Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Fri, 2 Aug 2013 16:31:17 +0800
Subject: [PATCH 283/430] powerpc/pci: Refine a way to determine primary pci

We look for which PCI host bridge contains an ISA node within its
subtree, rather than having each board supply a magic register offset
for determining the "primary" bus. If there is no ISA node,
normally that would mean there is no primary bus, but until certain
bugs are fixed we arbitrarily designate a primary in this case.
the patch is based on a upstream commit(07e4f8014).

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 arch/powerpc/platforms/85xx/corenet_ds.c  |    3 +-
 arch/powerpc/platforms/85xx/mpc8536_ds.c  |    9 +---
 arch/powerpc/platforms/85xx/mpc85xx_cds.c |    9 +---
 arch/powerpc/platforms/85xx/mpc85xx_mds.c |    3 +-
 arch/powerpc/platforms/85xx/mpc85xx_rdb.c |    3 +-
 arch/powerpc/platforms/85xx/p1010rdb.c    |    3 +-
 arch/powerpc/platforms/85xx/p1022_ds.c    |    3 +-
 arch/powerpc/platforms/85xx/p1023_rds.c   |    3 +-
 arch/powerpc/platforms/85xx/xes_mpc85xx.c |   22 +++-------
 arch/powerpc/sysdev/fsl_pci.c             |   66 +++++++++++++++++++----------
 arch/powerpc/sysdev/fsl_pci.h             |    9 ++++-
 11 files changed, 67 insertions(+), 66 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/corenet_ds.c b/arch/powerpc/platforms/85xx/corenet_ds.c
index 527b084..0d3bf51 100644
--- a/arch/powerpc/platforms/85xx/corenet_ds.c
+++ b/arch/powerpc/platforms/85xx/corenet_ds.c
@@ -62,8 +62,7 @@ void __init corenet_ds_setup_arch(void)
 	mpc85xx_smp_init();
 
 #ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	fsl_pci_setup();
 #endif
 
 #ifdef CONFIG_SWIOTLB
diff --git a/arch/powerpc/platforms/85xx/mpc8536_ds.c b/arch/powerpc/platforms/85xx/mpc8536_ds.c
index c53d90e..5adee23 100644
--- a/arch/powerpc/platforms/85xx/mpc8536_ds.c
+++ b/arch/powerpc/platforms/85xx/mpc8536_ds.c
@@ -54,8 +54,7 @@ static void __init mpc8536_ds_setup_arch(void)
 		ppc_md.progress("mpc8536_ds_setup_arch()", 0);
 
 #ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	fsl_pci_setup();
 #endif
 
 #ifdef CONFIG_SWIOTLB
@@ -89,12 +88,8 @@ static int __init mpc8536_ds_probe(void)
 {
 	unsigned long root = of_get_flat_dt_root();
 
-	if (of_flat_dt_is_compatible(root, "fsl,mpc8536ds")) {
-#ifdef CONFIG_PCI
-		primary_phb_addr = 0x8000;
-#endif
+	if (of_flat_dt_is_compatible(root, "fsl,mpc8536ds"))
 		return 1;
-	}
 
 	return 0;
 }
diff --git a/arch/powerpc/platforms/85xx/mpc85xx_cds.c b/arch/powerpc/platforms/85xx/mpc85xx_cds.c
index edd78ff..e32f198 100644
--- a/arch/powerpc/platforms/85xx/mpc85xx_cds.c
+++ b/arch/powerpc/platforms/85xx/mpc85xx_cds.c
@@ -312,8 +312,7 @@ static void __init mpc85xx_cds_setup_arch(void)
 	}
 
 #ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	fsl_pci_setup();
 
 	ppc_md.pci_irq_fixup = mpc85xx_cds_pci_irq_fixup;
 	ppc_md.pci_exclude_device = mpc85xx_exclude_device;
@@ -346,12 +345,8 @@ static int __init mpc85xx_cds_probe(void)
 {
         unsigned long root = of_get_flat_dt_root();
 
-	if (of_flat_dt_is_compatible(root, "MPC85xxCDS")) {
-#ifdef CONFIG_PCI
-		primary_phb_addr = 0x8000;
-#endif
+	if (of_flat_dt_is_compatible(root, "MPC85xxCDS"))
 		return 1;
-	}
 
 	return 0;
 }
diff --git a/arch/powerpc/platforms/85xx/mpc85xx_mds.c b/arch/powerpc/platforms/85xx/mpc85xx_mds.c
index 4cc839f..e94f9f4 100644
--- a/arch/powerpc/platforms/85xx/mpc85xx_mds.c
+++ b/arch/powerpc/platforms/85xx/mpc85xx_mds.c
@@ -337,8 +337,7 @@ static void __init mpc85xx_mds_setup_arch(void)
 	mpc85xx_smp_init();
 
 #ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	fsl_pci_setup();
 #endif
 
 	mpc85xx_mds_qe_init();
diff --git a/arch/powerpc/platforms/85xx/mpc85xx_rdb.c b/arch/powerpc/platforms/85xx/mpc85xx_rdb.c
index 0f54c2f..cb86e00 100644
--- a/arch/powerpc/platforms/85xx/mpc85xx_rdb.c
+++ b/arch/powerpc/platforms/85xx/mpc85xx_rdb.c
@@ -101,8 +101,7 @@ static void __init mpc85xx_rdb_setup_arch(void)
 		ppc_md.progress("mpc85xx_rdb_setup_arch()", 0);
 
 #ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	fsl_pci_setup();
 #endif
 
 	mpc85xx_smp_init();
diff --git a/arch/powerpc/platforms/85xx/p1010rdb.c b/arch/powerpc/platforms/85xx/p1010rdb.c
index 2d0bce5..c7a99db 100644
--- a/arch/powerpc/platforms/85xx/p1010rdb.c
+++ b/arch/powerpc/platforms/85xx/p1010rdb.c
@@ -54,8 +54,7 @@ static void __init p1010_rdb_setup_arch(void)
 		ppc_md.progress("p1010_rdb_setup_arch()", 0);
 
 #ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	fsl_pci_setup();
 #endif
 
 	printk(KERN_INFO "P1010 RDB board from Freescale Semiconductor\n");
diff --git a/arch/powerpc/platforms/85xx/p1022_ds.c b/arch/powerpc/platforms/85xx/p1022_ds.c
index 882cad5..1e0fa4d 100644
--- a/arch/powerpc/platforms/85xx/p1022_ds.c
+++ b/arch/powerpc/platforms/85xx/p1022_ds.c
@@ -528,8 +528,7 @@ static void __init p1022_ds_setup_arch(void)
 		ppc_md.progress("p1022_ds_setup_arch()", 0);
 
 #ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	fsl_pci_setup();
 #endif
 
 #if defined(CONFIG_FB_FSL_DIU) || defined(CONFIG_FB_FSL_DIU_MODULE)
diff --git a/arch/powerpc/platforms/85xx/p1023_rds.c b/arch/powerpc/platforms/85xx/p1023_rds.c
index 6e3e738..647e125 100644
--- a/arch/powerpc/platforms/85xx/p1023_rds.c
+++ b/arch/powerpc/platforms/85xx/p1023_rds.c
@@ -81,8 +81,7 @@ static void __init mpc85xx_rds_setup_arch(void)
 	}
 
 #ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	fsl_pci_setup();
 #endif
 
 	mpc85xx_smp_init();
diff --git a/arch/powerpc/platforms/85xx/xes_mpc85xx.c b/arch/powerpc/platforms/85xx/xes_mpc85xx.c
index ca40932..ec4a345 100644
--- a/arch/powerpc/platforms/85xx/xes_mpc85xx.c
+++ b/arch/powerpc/platforms/85xx/xes_mpc85xx.c
@@ -134,8 +134,7 @@ static void __init xes_mpc85xx_setup_arch(void)
 	xes_mpc85xx_fixups();
 
 #ifdef CONFIG_PCI
-	for_each_node_by_type(np, "pci")
-		fsl_pci_setup(np);
+	fsl_pci_setup();
 #endif
 
 	mpc85xx_smp_init();
@@ -166,28 +165,19 @@ static int __init xes_mpc8572_probe(void)
 {
 	unsigned long root = of_get_flat_dt_root();
 
-	if (of_flat_dt_is_compatible(root, "xes,MPC8572")) {
-#ifdef CONFIG_PCI
-		primary_phb_addr = 0x8000;
-#endif
+	if (of_flat_dt_is_compatible(root, "xes,MPC8572"))
 		return 1;
-	} else {
-		return 0;
-	}
+
+	return 0;
 }
 
 static int __init xes_mpc8548_probe(void)
 {
 	unsigned long root = of_get_flat_dt_root();
 
-	if (of_flat_dt_is_compatible(root, "xes,MPC8548")) {
-#ifdef CONFIG_PCI
-		primary_phb_addr = 0xb000;
-#endif
+	if (of_flat_dt_is_compatible(root, "xes,MPC8548"))
 		return 1;
-	} else {
-		return 0;
-	}
+	return 0;
 }
 
 static int __init xes_mpc8540_probe(void)
diff --git a/arch/powerpc/sysdev/fsl_pci.c b/arch/powerpc/sysdev/fsl_pci.c
index 2a963da..4b3b155 100644
--- a/arch/powerpc/sysdev/fsl_pci.c
+++ b/arch/powerpc/sysdev/fsl_pci.c
@@ -982,40 +982,60 @@ static const struct of_device_id pci_ids[] = {
 	{},
 };
 
-int primary_phb_addr;
-int fsl_pci_setup(struct device_node *np)
+struct device_node *fsl_pci_primary;
+
+int fsl_pci_setup(void)
 {
-#ifdef CONFIG_SWIOTLB
+	struct device_node *node;
 	struct pci_controller *hose;
-#endif
+	dma_addr_t max = 0xffffffff;
 	int ret = 0;
 	bool is_primary;
 
-	if (of_match_node(pci_ids, np)) {
-		struct resource rsrc;
-		of_address_to_resource(np, 0, &rsrc);
-		is_primary = ((rsrc.start & 0xfffff) == primary_phb_addr);
-		ret = fsl_add_bridge(np, is_primary);
+	/* Callers can specify the primary bus using other means. */
+	if (!fsl_pci_primary) {
+		/* If a PCI host bridge contains an ISA node, it's primary. */
+		node = of_find_node_by_type(NULL, "isa");
+		while ((fsl_pci_primary = of_get_parent(node))) {
+			of_node_put(node);
+			node = fsl_pci_primary;
 
-#ifdef CONFIG_SWIOTLB
-		if (ret == 0) {
-			hose = pci_find_hose_for_OF_device(np);
+			if (of_match_node(pci_ids, node))
+				break;
+		}
+	}
 
+	node = NULL;
+	for_each_node_by_type(node, "pci") {
+		if (of_match_node(pci_ids, node)) {
 			/*
-			 * if we couldn't map all of DRAM via the dma windows
-			 * we need SWIOTLB to handle buffers located outside of
-			 * dma capable memory region
+			 * If there's no PCI host bridge with ISA, arbitrarily
+			 * designate one as primary.  This can go away once
+			 * various bugs with primary-less systems are fixed.
 			 */
-			if (memblock_end_of_DRAM() > hose->dma_window_base_cur
-					+ hose->dma_window_size) {
-				ppc_swiotlb_enable = 1;
-				set_pci_dma_ops(&swiotlb_dma_ops);
-				ppc_md.pci_dma_dev_setup = pci_dma_dev_setup_swiotlb;
-			}
+			if (!fsl_pci_primary)
+				fsl_pci_primary = node;
+
+			fsl_add_bridge(node, fsl_pci_primary == node);
+			hose = pci_find_hose_for_OF_device(node);
+			max = min(max, hose->dma_window_base_cur +
+					hose->dma_window_size);
 		}
-#endif
 	}
-	return ret;
+
+#ifdef CONFIG_SWIOTLB
+	/*
+	 * if we couldn't map all of DRAM via the dma windows
+	 * we need SWIOTLB to handle buffers located outside of
+	 * dma capable memory region
+	 */
+	if (memblock_end_of_DRAM() - 1 > max) {
+		ppc_swiotlb_enable = 1;
+		set_pci_dma_ops(&swiotlb_dma_ops);
+		ppc_md.pci_dma_dev_setup = pci_dma_dev_setup_swiotlb;
+	}
+#endif
+	return 0;
 }
 
 static int __devinit fsl_pci_probe(struct platform_device *pdev)
diff --git a/arch/powerpc/sysdev/fsl_pci.h b/arch/powerpc/sysdev/fsl_pci.h
index 4ce16fc..add3e3b 100644
--- a/arch/powerpc/sysdev/fsl_pci.h
+++ b/arch/powerpc/sysdev/fsl_pci.h
@@ -133,13 +133,20 @@ struct ccsr_pci {
 
 };
 
-extern int primary_phb_addr;
 extern int fsl_add_bridge(struct device_node *dev, int is_primary);
 extern int fsl_pci_setup(struct device_node *np);
 extern void fsl_pcibios_fixup_bus(struct pci_bus *bus);
 extern int mpc83xx_add_bridge(struct device_node *dev);
 u64 fsl_pci_immrbar_base(struct pci_controller *hose);
 
+extern struct device_node *fsl_pci_primary;
+
+#ifdef CONFIG_FSL_PCI
+int fsl_pci_setup(void);
+#else
+static inline int fsl_pci_setup(void) {}
+#endif
+
 #ifdef CONFIG_FSL_PCI
 extern int fsl_pci_mcheck_exception(struct pt_regs *);
 #else
-- 
1.7.5.4

