From b6c9b09f1d4448c3770bb8400597625fab7eff5d Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Tue, 10 Dec 2013 13:57:59 +0800
Subject: [PATCH] powerpc: add huge TLB size limitation to fix hugetlb call
 trace

During libhugetlbfs testing, there would be following call trace
for fsl-p2020. The libhugetlbfs testing steps:
 1) cd /usr/lib/libhugetlbfs/ptest
 2) hugeadm --create-mounts
 3) hugeadm --pool-pages-min 1MB:32
 4)./run-ptest

WARNING: at linux/arch/powerpc/mm/hugetlbpage.c:601
Modules linked in: nfsd exportfs mpc85xx_edac edac_core
CPU: 0 PID: 867 Comm: unlinked_fd Tainted: GD W3.10.19-WR6.0.0.0_standard#1
task: c60861c0 ti: c620c000 task.ti: c620c000
NIP: c0019eac LR: c013e754 CTR: c0144b70
REGS: c620dd50 TRAP: 0700   Tainted: GD W(3.10.19-WR6.0.0.0_standard)
MSR: 00029000 <CE,EE,ME>  CR: 20088488  XER: 00000000

GPR00: c013e754 c620de00 c60861c0 c620de78 c5cf0900 48100000 48007000 bfefb000
GPR08: 00000000 c602d000 00000000 00000000 40022482 1001a8e0 00000000 00000000
GPR16: 00000000 00000000 00000000 00000000 00000000 00000000 48007000 48200000
GPR24: bfdfffff bfe00000 ffffff80 00000001 bfefb000 481fffff c620de78 48200000
NIP [c0019eac] hugetlb_free_pgd_range+0x10c/0x16c
LR [c013e754] free_pgtables+0x134/0x158
Call Trace:
[c620de00] [80008424] 0x80008424 (unreliable)
[c620de40] [c013e754] free_pgtables+0x134/0x158
[c620de70] [c0144f3c] unmap_region+0xac/0x128
[c620def0] [c01472cc] do_munmap+0x248/0x3a8
[c620df20] [c0147470] vm_munmap+0x44/0x68
[c620df40] [c000fecc] ret_from_syscall+0x0/0x3c

Normally the second-level page table entry maps 2M size based on the PMD_SHIFT
definition, but some smaller huge TLB pages like 1M are registered into the system
also, which was introduced by the patch "powerpc/e6500: hardware tablewalk support".
This is wrong since huge pages should be based on at least the second PMD
level. Here add the limitation to keep huge PTEs go at not less than the PMD
level and fix hugetlb call trace.

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 arch/powerpc/mm/hugetlbpage.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/arch/powerpc/mm/hugetlbpage.c b/arch/powerpc/mm/hugetlbpage.c
index 0b299e5..9006467 100644
--- a/arch/powerpc/mm/hugetlbpage.c
+++ b/arch/powerpc/mm/hugetlbpage.c
@@ -891,6 +891,12 @@ static int __init add_huge_page_size(unsigned long long size)
 #ifdef CONFIG_PPC_FSL_BOOK3E
 	if ((size < PAGE_SIZE) || !is_power_of_4(size))
 		return -EINVAL;
+
+	/* Check that it is a page size not less than the second-level
+	 * page table can map size, the second-level page table size
+	 * is determined by the macro PMD_SHIFT. */
+	if (shift < PMD_SHIFT)
+		return -EINVAL;
 #else
 	if (!is_power_of_2(size)
 	    || (shift > SLICE_HIGH_SHIFT) || (shift <= PAGE_SHIFT))
-- 
1.8.4.93.g57e4c17

