From 84d919b3ec6fa6f5afb4d4e93384ef3a071f7281 Mon Sep 17 00:00:00 2001
From: Yang Wei <Wei.Yang@windriver.com>
Date: Tue, 19 Nov 2013 17:35:05 +0800
Subject: [PATCH 3/3] powerpc/e6500: Refine CPU erratum A-006198

This patch is a part of a SDK1.4 patch.
[
powerpc/mpc85xx/e6500: work around CPU erratum A-006198
]

We introduced the above SDK patch in SDK1.3.1, Compared with SDK1.3.1,
it is refined to make the assembly code more readable in sdk1.4.
According, we are best to also apply the new modification.

Signed-off-by: Yang Wei <Wei.Yang@windriver.com>
---
 arch/powerpc/include/asm/hw_irq.h |   28 ++++++++++++++++++----------
 arch/powerpc/kernel/ppc_ksyms.c   |    5 +++++
 2 files changed, 23 insertions(+), 10 deletions(-)

diff --git a/arch/powerpc/include/asm/hw_irq.h b/arch/powerpc/include/asm/hw_irq.h
index 057719b..c4409d2 100644
--- a/arch/powerpc/include/asm/hw_irq.h
+++ b/arch/powerpc/include/asm/hw_irq.h
@@ -91,19 +91,22 @@ static inline bool arch_irqs_disabled(void)
 #ifdef CONFIG_FSL_ERRATUM_A_006198
 static inline void __hard_irq_disable(void)
 {
+	void fsl_erratum_a006198_return(void);
 	unsigned long tmp;
 
-	asm volatile("ld %0, 1f@got(2);"
+	asm volatile("bl 2f;"
+		     "2: mflr %0;"
+		     "addi %0, %0, 1f-2b;"
 		     "mtlr %0;"
-		     "ld %0, .fsl_erratum_a006198_return@got(2);"
-		     "mtspr %1, %0;"
+		     "mtspr %1, %4;"
 		     "mfmsr %0;"
 		     "rlwinm %0, %0, 0, ~%3;"
 		     "mtspr %2, %0;"
 		     "rfmci;"
 		     "1: mtmsr %0" : "=&r" (tmp) :
 		     "i" (SPRN_MCSRR0), "i" (SPRN_MCSRR1),
-		     "i" (MSR_EE) : "memory", "lr");
+		     "i" (MSR_EE), "r" (*(u64 *)fsl_erratum_a006198_return) :
+		     "memory", "lr");
 }
 #else
 #define __hard_irq_disable()	asm volatile("wrteei 0" : : : "memory")
@@ -150,6 +153,8 @@ extern bool prep_irq_for_idle(void);
 
 #define SET_MSR_EE(x)	mtmsr(x)
 
+#define __hard_irq_disable()   asm volatile("wrteei 0" : : : "memory")
+
 static inline unsigned long arch_local_save_flags(void)
 {
 	return mfmsr();
@@ -159,17 +164,20 @@ static inline void arch_local_irq_restore(unsigned long flags)
 {
 #if defined(CONFIG_BOOKE)
 #ifdef CONFIG_FSL_ERRATUM_A_006198
+	void fsl_erratum_a006198_return(void);
 	unsigned long tmp;
 
-	asm volatile("ld %0, 1f@got(2);"
+	asm volatile("bl 2f;"
+		     "2: mflr %0;"
+		     "addi %0, %0, 1f-2b;"
 		     "mtlr %0;"
-		     "ld %0, .fsl_erratum_a006198_return@got(2);"
 		     "mtspr %1, %3;"
-		     "mtspr %2, %0;"
+		     "mtspr %2, %4;"
 		     "rfmci;"
 		     "1: mtmsr %3" : "=&r" (tmp) :
 		     "i" (SPRN_MCSRR1), "i" (SPRN_MCSRR0),
-		     "r" (flags) : "memory", "lr");
+		     "r" (flags), "r" (*(u64 *)fsl_erratum_a006198_return) :
+		     "memory", "lr");
 #else
 	asm volatile("wrtee %0" : : "r" (flags) : "memory");
 #endif
@@ -182,7 +190,7 @@ static inline unsigned long arch_local_irq_save(void)
 {
 	unsigned long flags = arch_local_save_flags();
 #ifdef CONFIG_BOOKE
-	asm volatile("wrteei 0" : : : "memory");
+	__hard_irq_disable();
 #else
 	SET_MSR_EE(flags & ~MSR_EE);
 #endif
@@ -192,7 +200,7 @@ static inline unsigned long arch_local_irq_save(void)
 static inline void arch_local_irq_disable(void)
 {
 #ifdef CONFIG_BOOKE
-	asm volatile("wrteei 0" : : : "memory");
+	__hard_irq_disable();
 #else
 	arch_local_irq_save();
 #endif
diff --git a/arch/powerpc/kernel/ppc_ksyms.c b/arch/powerpc/kernel/ppc_ksyms.c
index 1d094bb..1a0c793 100644
--- a/arch/powerpc/kernel/ppc_ksyms.c
+++ b/arch/powerpc/kernel/ppc_ksyms.c
@@ -197,3 +197,8 @@ EXPORT_SYMBOL(__arch_hweight64);
 #ifdef CONFIG_PPC_BOOK3S_64
 EXPORT_SYMBOL_GPL(mmu_psize_defs);
 #endif
+
+#ifdef CONFIG_FSL_ERRATUM_A_006198
+void fsl_erratum_a006198_return(void);
+EXPORT_SYMBOL(fsl_erratum_a006198_return);
+#endif
-- 
1.7.5.4

