From 5d141b3427b0ef3a52a225955ad034838091b6f8 Mon Sep 17 00:00:00 2001
From: Xie Xiaobo <X.Xie@freescale.com>
Date: Fri, 19 Apr 2013 17:01:11 +0800
Subject: [PATCH 385/547] gianfar: remove the redundant backup/recover
 operation

Because introduce TXPAL space into skb_buffer, the timestamp will be
placed into TXPAL, So the old backup/recover operation was redundant.

Signed-off-by: Xie Xiaobo <X.Xie@freescale.com>
Change-Id: Ie10571bf26fd73ca3cdca346c1783579d80f4faf
Reviewed-on: http://git.am.freescale.net:8181/1599
Reviewed-by: Manoil Claudiu-B08782 <claudiu.manoil@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[Original patch taken from QorIQ-SDK-V1.4-SOURCE-20130625-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/gianfar.c | 19 +++----------------
 1 file changed, 3 insertions(+), 16 deletions(-)

diff --git a/drivers/net/ethernet/freescale/gianfar.c b/drivers/net/ethernet/freescale/gianfar.c
index 27a853c..f5de116 100644
--- a/drivers/net/ethernet/freescale/gianfar.c
+++ b/drivers/net/ethernet/freescale/gianfar.c
@@ -2578,14 +2578,6 @@ static int gfar_start_xmit(struct sk_buff *skb, struct net_device *dev)
 		skb_shinfo(skb)->tx_flags |= SKBTX_IN_PROGRESS;
 		if (fcb == NULL)
 			fcb = gfar_add_fcb(skb);
-		/*
-		 * the timestamp overwrites the ethertype and the following
-		 * 2 bytes -> storing 4 bytes at the end of the control buffer
-		 * structure - will be recovered in the function
-		 * gfar_clean_tx_ring
-		 */
-		memcpy(skb->cb, (skb->data + GMAC_FCB_LEN +
-					ETH_ALEN + ETH_ALEN), 4);
 		fcb->ptp = 1;
 		lstatus |= BD_LFLAG(TXBD_TOE);
 		/*
@@ -2972,18 +2964,13 @@ static void gfar_clean_tx_ring(struct gfar_priv_tx_q *tx_queue)
 			}
 			/* remove tx fcb */
 			skb_pull(skb, GMAC_FCB_LEN);
-			/*
-			 * the timestamp overwrote the ethertype and the
-			 * following 2 bytes, 4 byters were stored in the
-			 * end of the control buffer in function
-			 * gfar_start_xmit to be recovered here
-			 */
-			memcpy((skb->data + ETH_ALEN + ETH_ALEN), skb->cb, 4);
 			/* pass timestamp back */
 			if (unlikely(priv->hwts_tx_en))
 				skb_tstamp_tx(skb, &shhwtstamps);
-			if (likely(priv->hwts_tx_en_ioctl))
+			if (likely(priv->hwts_tx_en_ioctl)) {
+				skb_pull(skb, GMAC_TXPAL_LEN);
 				gfar_ptp_store_txstamp(dev, skb, &tx_ts);
+			}
 			bdp->lstatus &= BD_LFLAG(TXBD_WRAP);
 			bdp = next;
 		}
-- 
1.8.4.93.g57e4c17

