From 497db7c57c39fca7a82c8c8f22dfb38c8e90e27d Mon Sep 17 00:00:00 2001
From: Zhao Chenhui <chenhui.zhao@freescale.com>
Date: Thu, 9 May 2013 18:57:31 +0800
Subject: [PATCH 143/547] powerpc/pm: fix the return value of .enter()

Change-Id: If7505a718c9a76b26eb8ea80c82bb0f4d2742192
Signed-off-by: Zhao Chenhui <chenhui.zhao@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/2456
Reviewed-by: Wood Scott-B07421 <scottwood@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[Original patch taken from QorIQ-SDK-V1.4-SOURCE-20130625-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/powerpc/sysdev/fsl_pmc.c  |  7 ++++---
 arch/powerpc/sysdev/fsl_rcpm.c | 14 ++++++++------
 2 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/arch/powerpc/sysdev/fsl_pmc.c b/arch/powerpc/sysdev/fsl_pmc.c
index 98ffe0e..7af66cd 100644
--- a/arch/powerpc/sysdev/fsl_pmc.c
+++ b/arch/powerpc/sysdev/fsl_pmc.c
@@ -47,6 +47,7 @@ static unsigned int pmc_flag;
 static int pmc_suspend_enter(suspend_state_t state)
 {
 	int ret = 0;
+	int result;
 
 	switch (state) {
 #ifdef CONFIG_PPC_85xx
@@ -73,13 +74,13 @@ static int pmc_suspend_enter(suspend_state_t state)
 		/* At this point, the CPU is asleep. */
 
 		/* Upon resume, wait for SLP bit to be clear. */
-		ret = spin_event_timeout(
+		result = spin_event_timeout(
 			(in_be32(&pmc_regs->powmgtcsr) & POWMGTCSR_SLP) == 0,
 			10000, 10);
-		if (!ret) {
+		if (!result) {
 			pr_err("%s: timeout waiting for SLP bit "
 				"to be cleared\n", __func__);
-			ret = -EINVAL;
+			ret = -ETIMEDOUT;
 		}
 		break;
 
diff --git a/arch/powerpc/sysdev/fsl_rcpm.c b/arch/powerpc/sysdev/fsl_rcpm.c
index c5724f0..33c9b4c 100644
--- a/arch/powerpc/sysdev/fsl_rcpm.c
+++ b/arch/powerpc/sysdev/fsl_rcpm.c
@@ -26,6 +26,7 @@ struct ccsr_rcpm_v2 __iomem *rcpm2_regs;
 static int rcpm_suspend_enter(suspend_state_t state)
 {
 	int ret = 0;
+	int result;
 
 	switch (state) {
 	case PM_SUSPEND_STANDBY:
@@ -37,13 +38,13 @@ static int rcpm_suspend_enter(suspend_state_t state)
 		/* At this point, the device is in sleep mode. */
 
 		/* Upon resume, wait for SLP bit to be clear. */
-		ret = spin_event_timeout(
+		result = spin_event_timeout(
 		  (in_be32(&rcpm1_regs->powmgtcsr) & RCPM_POWMGTCSR_SLP) == 0,
 		  10000, 10);
-		if (!ret) {
+		if (!result) {
 			pr_err("%s: timeout waiting for SLP bit "
 				"to be cleared\n", __func__);
-			ret = -EINVAL;
+			ret = -ETIMEDOUT;
 		}
 		break;
 
@@ -57,6 +58,7 @@ static int rcpm_suspend_enter(suspend_state_t state)
 static int rcpm_v2_suspend_enter(suspend_state_t state)
 {
 	int ret = 0;
+	int result;
 
 	switch (state) {
 	case PM_SUSPEND_STANDBY:
@@ -69,13 +71,13 @@ static int rcpm_v2_suspend_enter(suspend_state_t state)
 		/* At this point, the device is in LPM20 status. */
 
 		/* resume ... */
-		ret = spin_event_timeout(
+		result = spin_event_timeout(
 		      (in_be32(&rcpm2_regs->powmgtcsr) & RCPM_POWMGTCSR_LPM20_ST)
 		      == 0, 10000, 10);
-		if (!ret) {
+		if (!result) {
 			pr_err("%s: timeout waiting for LPM20 bit to be cleared\n",
 				__func__);
-			ret = -EINVAL;
+			ret = -ETIMEDOUT;
 		}
 
 		break;
-- 
1.8.4.93.g57e4c17

