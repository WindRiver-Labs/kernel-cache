From 391ffe2e6c7cc68b9a7c528df43ab18fc0e601b0 Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Wed, 26 Jun 2013 13:36:20 +0800
Subject: [PATCH 202/430] powerpc/85xx: handle the eLBC error interrupt if it
 exist in dts

On P3041, P1020, P1021, P1022, P1023 eLBC event interrupts are routed
to Int9(P3041) & Int3(P102x) while ELBC error interrupts are routed to
Int0, we need to call request_irq for each.

Signed-off-by: Shaohui Xie <Shaohui.Xie@freescale.com>
Signed-off-by: Wang Dongsheng <dongsheng.wang@freescale.com>
Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
Change-Id: I0855f322c8c7d8e3ad94747aa212b37f38f5c161
Reviewed-on: http://git.am.freescale.net:8181/2466
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Wood Scott-B07421 <scottwood@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>

[Original patch is from QorIQ-SDK-V1.4-20130625-yocto, just
a minor modification to port 3.4 kernel]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 arch/powerpc/sysdev/fsl_lbc.c |   20 +++++---------------
 1 files changed, 5 insertions(+), 15 deletions(-)

diff --git a/arch/powerpc/sysdev/fsl_lbc.c b/arch/powerpc/sysdev/fsl_lbc.c
index 14d4300..4b92114 100644
--- a/arch/powerpc/sysdev/fsl_lbc.c
+++ b/arch/powerpc/sysdev/fsl_lbc.c
@@ -48,10 +48,7 @@ u32 fsl_lbc_addr(phys_addr_t addr_base)
 	struct device_node *np = fsl_lbc_ctrl_dev->dev->of_node;
 	u32 addr = addr_base & 0xffff8000;
 
-	if (of_device_is_compatible(np, "fsl,elbc") ||
-			of_device_is_compatible(np, "fsl,p3041-rev1.0-elbc") ||
-			of_device_is_compatible(np, "fsl,p5020-rev1.0-elbc") ||
-			of_device_is_compatible(np, "fsl,p5040-rev1.0-elbc"))
+	if (of_device_is_compatible(np, "fsl,elbc"))
 		return addr;
 
 	return addr | ((addr_base & 0x300000000ull) >> 19);
@@ -201,10 +198,7 @@ static int __devinit fsl_lbc_ctrl_init(struct fsl_lbc_ctrl *ctrl,
 	out_be32(&lbc->ltedr, LTEDR_ENABLE);
 
 	/* Set the monitor timeout value to the maximum for erratum A001 */
-	if (of_device_is_compatible(node, "fsl,elbc") ||
-		of_device_is_compatible(node, "fsl,p3041-rev1.0-elbc") ||
-		of_device_is_compatible(node, "fsl,p5020-rev1.0-elbc") ||
-		of_device_is_compatible(node, "fsl,p5040-rev1.0-elbc"))
+	if (of_device_is_compatible(node, "fsl,elbc"))
 		clrsetbits_be32(&lbc->lbcr, LBCR_BMT, LBCR_BMTPS);
 
 	return 0;
@@ -339,7 +333,7 @@ static int __devinit fsl_lbc_ctrl_probe(struct platform_device *dev)
 			dev_err(&dev->dev, "failed to install irq (%d)\n",
 					fsl_lbc_ctrl_dev->irq[1]);
 			ret = fsl_lbc_ctrl_dev->irq[1];
-			goto err;
+			goto err1;
 		}
 	}
 
@@ -348,6 +342,8 @@ static int __devinit fsl_lbc_ctrl_probe(struct platform_device *dev)
 
 	return 0;
 
+err1:
+	free_irq(fsl_lbc_ctrl_dev->irq[0], fsl_lbc_ctrl_dev);
 err:
 	iounmap(fsl_lbc_ctrl_dev->regs);
 	kfree(fsl_lbc_ctrl_dev);
@@ -389,12 +385,6 @@ static int fsl_lbc_resume(struct platform_device *pdev)
 
 static const struct of_device_id fsl_lbc_match[] = {
 	{ .compatible = "fsl,elbc", },
-	{ .compatible = "fsl,p2040-rev1.0-elbc", },
-	{ .compatible = "fsl,p2041-rev1.0-elbc", },
-	{ .compatible = "fsl,p3041-rev1.0-elbc", },
-	{ .compatible = "fsl,p5010-rev1.0-elbc", },
-	{ .compatible = "fsl,p5020-rev1.0-elbc", },
-	{ .compatible = "fsl,p5040-rev1.0-elbc", },
 	{ .compatible = "fsl,pq3-localbus", },
 	{ .compatible = "fsl,pq2-localbus", },
 	{ .compatible = "fsl,pq2pro-localbus", },
-- 
1.7.5.4

