From 670902c9ceb4693edaaad230433ece3890462553 Mon Sep 17 00:00:00 2001
From: Roy Pledge <Roy.Pledge@freescale.com>
Date: Tue, 30 Apr 2013 09:58:15 -0400
Subject: [PATCH 113/547] Fix PAMU allocations while in spinlock

Change-Id: I21d60327af9f68c6e13e5774f54cd2accb80575f
Reviewed-on: http://git.am.freescale.net:8181/2307
Reviewed-by: Sethi Varun-B16395 <Varun.Sethi@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[Original patch taken from QorIQ-SDK-V1.4-SOURCE-20130625-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/iommu/fsl_pamu_domain.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/iommu/fsl_pamu_domain.c b/drivers/iommu/fsl_pamu_domain.c
index 583df91..de1db37 100644
--- a/drivers/iommu/fsl_pamu_domain.c
+++ b/drivers/iommu/fsl_pamu_domain.c
@@ -385,7 +385,7 @@ static void attach_device(struct fsl_dma_domain *dma_domain, int liodn, struct d
 		spin_lock(&device_domain_lock);
 	}
 
-	info = kmem_cache_zalloc(iommu_devinfo_cache, GFP_KERNEL);
+	info = kmem_cache_zalloc(iommu_devinfo_cache, GFP_ATOMIC);
 
 	info->dev = dev;
 	info->liodn = liodn;
@@ -1087,7 +1087,7 @@ static int fsl_pamu_set_windows(struct iommu_domain *domain, u32 w_count)
 		if (dma_domain->win_arr)
 			kfree(dma_domain->win_arr);
 		dma_domain->win_arr = kzalloc(sizeof(struct dma_window) *
-							  w_count, GFP_KERNEL);
+							  w_count, GFP_ATOMIC);
 		if (!dma_domain->win_arr) {
 			spin_unlock_irqrestore(&dma_domain->domain_lock, flags);
 			return -ENOMEM;
-- 
1.8.4.93.g57e4c17

