From a9878570e11fb5feedee9ede66e8369e82e46c94 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@freescale.com>
Date: Thu, 26 Apr 2012 18:27:56 +0300
Subject: [PATCH 14/27] gianfar: Add recycle_max sysfs config entry

Allow recycle_max to be configured at runtime via sysfs.

Signed-off-by: Claudiu Manoil <claudiu.manoil@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/freescale/gianfar_sysfs.c |   37 ++++++++++++++++++++++--
 1 file changed, 34 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/freescale/gianfar_sysfs.c b/drivers/net/ethernet/freescale/gianfar_sysfs.c
index f394945..56d7aea 100644
--- a/drivers/net/ethernet/freescale/gianfar_sysfs.c
+++ b/drivers/net/ethernet/freescale/gianfar_sysfs.c
@@ -319,7 +319,7 @@ static ssize_t gfar_set_fifo_starve_off(struct device *dev,
 static DEVICE_ATTR(fifo_starve_off, 0644, gfar_show_fifo_starve_off,
 		   gfar_set_fifo_starve_off);
 
-static ssize_t gfar_show_recycle_cntxt(struct device *dev,
+static ssize_t gfar_show_recycle_max(struct device *dev,
 					 struct device_attribute *attr,
 					 char *buf)
 {
@@ -357,7 +357,38 @@ static ssize_t gfar_show_recycle_cntxt(struct device *dev,
 	return sprintf(buf, "%d\n", recycle_cntxt->recycle_max);
 }
 
-static DEVICE_ATTR(recycle_cntxt, 0444, gfar_show_recycle_cntxt, NULL);
+static ssize_t gfar_set_recycle_max(struct device *dev,
+					struct device_attribute *attr,
+					const char *buf, size_t count)
+{
+	struct net_device *ndev = to_net_dev(dev);
+	struct gfar_private *priv = netdev_priv(ndev);
+	struct gfar_recycle_cntxt *recycle_cntxt;
+	unsigned int num;
+
+	if (kstrtouint(buf, 0, &num) < 0)
+		return -EINVAL;
+
+	if (!priv->recycle)
+		return count;
+
+	/*
+	 * recycle_max management is loosely done.
+	 * While the recyling queue exceeds in size recycle_max,
+	 * simply don't enqueue new skbs to the recycling queue.
+	 */
+	if (num > GFAR_RX_RECYCLE_MAX)
+		return count;
+
+	recycle_cntxt = priv->recycle;
+
+	recycle_cntxt->recycle_max = num;
+
+	return count;
+}
+
+static DEVICE_ATTR(recycle_max, 0644, gfar_show_recycle_max,
+			gfar_set_recycle_max);
 
 static ssize_t gfar_show_ptp_1588(struct device *dev,
 		struct device_attribute *attr, char *buf)
@@ -417,7 +448,7 @@ void gfar_init_sysfs(struct net_device *dev)
 	rc |= device_create_file(&dev->dev, &dev_attr_fifo_threshold);
 	rc |= device_create_file(&dev->dev, &dev_attr_fifo_starve);
 	rc |= device_create_file(&dev->dev, &dev_attr_fifo_starve_off);
-	rc |= device_create_file(&dev->dev, &dev_attr_recycle_cntxt);
+	rc |= device_create_file(&dev->dev, &dev_attr_recycle_max);
 	rc |= device_create_file(&dev->dev, &dev_attr_ptp_1588);
 	if (rc)
 		dev_err(&dev->dev, "Error creating gianfar sysfs files.\n");
-- 
1.7.9.7

