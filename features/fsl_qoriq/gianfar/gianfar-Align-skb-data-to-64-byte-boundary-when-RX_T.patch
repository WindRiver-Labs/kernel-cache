From f0b4154fb910a38aa7c0364dfb974433829fb7bd Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Wed, 12 Sep 2012 15:41:24 +0800
Subject: [PATCH 26/27] gianfar: Align skb->data to 64-byte boundary when
 RX_TX_BUFF_XCHG is enabled

Patch aligns the skd->data to 64-byte boundary for packets that are recycled through RX_TX_BUFF_XCHG
feature. skb->data pointer is originally aligned to 64-byte memory, but once packets are recycled
through RX_TX_BUFF_XCHG they are not re-alligned to 64-byte memory, which will impact system
throughput performace if data is not aligned to 64 byte memory

Signed-off-by: Rajan Gupta <rajan.gupta@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 drivers/net/ethernet/freescale/gianfar.c |    1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/net/ethernet/freescale/gianfar.c b/drivers/net/ethernet/freescale/gianfar.c
index e9841aa..d82a868 100644
--- a/drivers/net/ethernet/freescale/gianfar.c
+++ b/drivers/net/ethernet/freescale/gianfar.c
@@ -2983,6 +2983,7 @@ static int gfar_start_xmit(struct sk_buff *skb, struct net_device *dev)
 
 	if (!skb_recycle_check(skb, priv->rx_buffer_size + RXBUF_ALIGNMENT))
 		skb->owner = KER_PKT_ID;
+	gfar_align_skb(skb);
 }
 	skb->new_skb = new_skb;
 	txq->trans_start = jiffies;
-- 
1.7.9.7

