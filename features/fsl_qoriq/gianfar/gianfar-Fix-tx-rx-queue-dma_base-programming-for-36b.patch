From 9935e39490bc0b0b7ab9a40ce9296a248f34ab1a Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@freescale.com>
Date: Tue, 8 May 2012 18:26:41 +0300
Subject: [PATCH 19/27] gianfar: Fix tx/rx queue dma_base programming for
 36bit mode

For 36 bit operation TBASEH/RBASEH in eTSEC must be programmed
for correct operation. This is needed when BDs are located at high
addresses (for example when using L2SRAM).

Signed-off-by: Jin Qing <b24347@freescale.com>
Signed-off-by: Li Yang <leoli@freescale.com>
Signed-off-by: Pankaj Chauhan <B32944@freescale.com>
Signed-off-by: Claudiu Manoil <claudiu.manoil@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/freescale/gianfar.c |   17 ++++++++++++++++-
 drivers/net/ethernet/freescale/gianfar.h |    1 +
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/gianfar.c b/drivers/net/ethernet/freescale/gianfar.c
index 6f8ac62..ee47293 100644
--- a/drivers/net/ethernet/freescale/gianfar.c
+++ b/drivers/net/ethernet/freescale/gianfar.c
@@ -388,6 +388,20 @@ static void gfar_init_tx_rx_base(struct gfar_private *priv)
 	struct gfar __iomem *regs = priv->gfargrp[0].regs;
 	u32 __iomem *baddr;
 	int i;
+	dma_addr_t addr;
+
+	/*
+	 * eTSEC supports 36-bit physical addressing.
+	 * Should the BD rings be located at adresses above 4GB,
+	 * initialize tbaseh/rbaseh with the upper 32 bits. This
+	 * may happen when the BD rings are allocated in SRAM.
+	 */
+	if (priv->device_flags & FSL_GIANFAR_DEV_HAS_36BIT_ADDR) {
+		addr = priv->tx_queue[0]->tx_bd_dma_base;
+		gfar_write(&regs->tbaseh, upper_32_bits(addr) & 0xf);
+		addr = priv->rx_queue[0]->rx_bd_dma_base;
+		gfar_write(&regs->rbaseh, upper_32_bits(addr) & 0xf);
+	}
 
 	baddr = &regs->tbase0;
 	for(i = 0; i < priv->num_tx_queues; i++) {
@@ -828,7 +842,8 @@ static int gfar_of_init(struct platform_device *ofdev, struct net_device **pdev)
 			FSL_GIANFAR_DEV_HAS_PADDING |
 			FSL_GIANFAR_DEV_HAS_CSUM |
 			FSL_GIANFAR_DEV_HAS_VLAN |
-			FSL_GIANFAR_DEV_HAS_EXTENDED_HASH;
+			FSL_GIANFAR_DEV_HAS_EXTENDED_HASH |
+			FSL_GIANFAR_DEV_HAS_36BIT_ADDR;
 
 	ctype = of_get_property(np, "phy-connection-type", NULL);
 
diff --git a/drivers/net/ethernet/freescale/gianfar.h b/drivers/net/ethernet/freescale/gianfar.h
index d8ab990..42d9170 100644
--- a/drivers/net/ethernet/freescale/gianfar.h
+++ b/drivers/net/ethernet/freescale/gianfar.h
@@ -1066,6 +1066,7 @@ struct gfar {
 #define FSL_GIANFAR_DEV_HAS_TIMER		0x00000800
 #define FSL_GIANFAR_DEV_HAS_WAKE_ON_FILER	0x00001000
 #define FSL_GIANFAR_DEV_HAS_TS_TO_BUFFER	0x00002000
+#define FSL_GIANFAR_DEV_HAS_36BIT_ADDR		0x00004000
 
 #if (MAXGROUPS == 2)
 #define DEFAULT_MAPPING 	0xAA
-- 
1.7.9.7

