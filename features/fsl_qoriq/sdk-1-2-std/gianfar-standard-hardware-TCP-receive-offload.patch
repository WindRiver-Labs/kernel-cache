From 476a7db25a1c0c5cde77d67bae29ff2247965275 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@freescale.com>
Date: Mon, 2 Apr 2012 16:47:28 +0000
Subject: [PATCH] gianfar/standard: hardware TCP receive offload

This hunk comes from the commit:
[
Subject: gianfar: hardware TCP receive offload

Insert TCP stream rules into eTSEC filer table for offloading TCP receive.
eTSEC will accelerate TCP receive processing for a given stream as soon as
its data volume exceeds 1MB.

Signed-off-by: Jiajun Wu <b06378@freescale.com>
Signed-off-by: Claudiu Manoil <claudiu.manoil@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image. Just some minor context
mods in order to port to 3.4 kernel.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
]

Signed-off-by: Michel Thebeau <michel.thebeau@windriver.com>
---
 include/linux/skbuff.h |    3 +++
 net/ipv4/tcp_ipv4.c    |    5 +++++
 2 files changed, 8 insertions(+)

diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index ccc5a9b..d213b85 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -394,6 +394,9 @@ struct sk_buff {
 
 	struct sock		*sk;
 	struct net_device	*dev;
+#ifdef CONFIG_GFAR_HW_TCP_RECEIVE_OFFLOAD
+	struct net_device	*gfar_dev;
+#endif
 
 	/*
 	 * This is the control buffer. It is free to use for every
diff --git a/net/ipv4/tcp_ipv4.c b/net/ipv4/tcp_ipv4.c
index 45522a8..adbb266 100644
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@ -1733,6 +1733,11 @@ int tcp_v4_rcv(struct sk_buff *skb)
 	if (!sk)
 		goto no_tcp_socket;
 
+#ifdef CONFIG_GFAR_HW_TCP_RECEIVE_OFFLOAD
+	if (th->syn)
+		sk->init_seq = ntohl(th->seq);
+#endif
+
 process:
 	if (sk->sk_state == TCP_TIME_WAIT)
 		goto do_time_wait;
-- 
1.7.9.7

