From 92d9d79b476f7949f6dc7561bc356684a1037f4f Mon Sep 17 00:00:00 2001
From: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Date: Tue, 26 Jun 2012 23:52:08 +0000
Subject: [PATCH 026/162] bman: only do concurrency checks for stockpiling

If a pool object is not configured for stockpiling, then parallel calls
to acquire and release are OK.

Signed-off-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.3-SOURCE-20121114-yocto.iso tarball.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/bman_high.c |   20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_high.c b/drivers/staging/fsl_qbman/bman_high.c
index b6e8bca..d31ef8d 100644
--- a/drivers/staging/fsl_qbman/bman_high.c
+++ b/drivers/staging/fsl_qbman/bman_high.c
@@ -822,16 +822,16 @@ int bman_release(struct bman_pool *pool, const struct bm_buffer *bufs, u8 num,
 		return -EINVAL;
 	if (pool->params.flags & BMAN_POOL_FLAG_NO_RELEASE)
 		return -EINVAL;
+#endif
+	/* Without stockpile, this API is a pass-through to the h/w operation */
+	if (!(pool->params.flags & BMAN_POOL_FLAG_STOCKPILE))
+		return __bman_release(pool, bufs, num, flags);
+#ifdef CONFIG_FSL_DPA_CHECKING
 	if (!atomic_dec_and_test(&pool->in_use)) {
 		pr_crit("Parallel attempts to enter bman_released() detected.");
 		panic("only one instance of bman_released/acquired allowed");
 	}
 #endif
-	/* Without stockpile, this API is a pass-through to the h/w operation */
-	if (!(pool->params.flags & BMAN_POOL_FLAG_STOCKPILE)) {
-		ret = __bman_release(pool, bufs, num, flags);
-		goto release_done;
-	}
 	/* This needs some explanation. Adding the given buffers may take the
 	 * stockpile over the threshold, but in fact the stockpile may already
 	 * *be* over the threshold if a previous release-to-hw attempt had
@@ -908,16 +908,16 @@ int bman_acquire(struct bman_pool *pool, struct bm_buffer *bufs, u8 num,
 		return -EINVAL;
 	if (pool->params.flags & BMAN_POOL_FLAG_ONLY_RELEASE)
 		return -EINVAL;
+#endif
+	/* Without stockpile, this API is a pass-through to the h/w operation */
+	if (!(pool->params.flags & BMAN_POOL_FLAG_STOCKPILE))
+		return __bman_acquire(pool, bufs, num);
+#ifdef CONFIG_FSL_DPA_CHECKING
 	if (!atomic_dec_and_test(&pool->in_use)) {
 		pr_crit("Parallel attempts to enter bman_acquire() detected.");
 		panic("only one instance of bman_released/acquired allowed");
 	}
 #endif
-	/* Without stockpile, this API is a pass-through to the h/w operation */
-	if (!(pool->params.flags & BMAN_POOL_FLAG_STOCKPILE)) {
-		ret = __bman_acquire(pool, bufs, num);
-		goto acquire_done;
-	}
 	/* Only need a h/w op if we'll hit the low-water thresh */
 	if (!(flags & BMAN_ACQUIRE_FLAG_STOCKPILE) &&
 			(pool->sp_fill <= (BMAN_STOCKPILE_LOW + num))) {
-- 
1.7.9.7

