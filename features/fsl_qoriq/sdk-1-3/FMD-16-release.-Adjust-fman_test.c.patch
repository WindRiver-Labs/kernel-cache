From 1fc59cc9660585e76b13cf95c4c9b945e19b1a97 Mon Sep 17 00:00:00 2001
From: Andrei Pistirica <sorin.pistirica@freescale.com>
Date: Wed, 9 May 2012 15:23:49 +0300
Subject: [PATCH 028/162] FMD 16 release. Adjust fman_test.c

Supported platforms: p4080 only
No 64bit support and no mix evironment support.
PCD API changes: pcd handler removed from several functions.
Added API for Match Table manipulation.
Added Storage profile suport (not tested and not exported through
IOCTL).

Signed-off-by: Andrei Pistirica
Signed-off-by: Stefan Szabo <szbs001@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.3-SOURCE-20121114-yocto.iso tarball.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../dpa/NetCommSw/src/wrapper/fman_test.c          |   14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/fman_test.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/fman_test.c
index 37c31e3..6238ef4 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/fman_test.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/fman_test.c
@@ -835,7 +835,7 @@ int dpa_alloc_pcd_fqids(
 		goto _pcd_alloc_fqs_err;
 	}
 
-	_fmt_dbg("wanted %d fqs(align %d), got %d fqids@%.\n",
+	_fmt_dbg("wanted %d fqs(align %d), got %d fqids@%u.\n",
 				num, alignment, num_allocated, *base_fqid);
 
 	/* alloc pcd queues */
@@ -918,14 +918,14 @@ int dpa_free_pcd_fqids(
 
 	/* debugging stuff */
 #if defined(FMT_K_DBG) || defined(FMT_K_DBG_RUNTIME)
-	_fmt_dbg(" portid: %.\n", fmt_port->id);
-	_fmt_dbg(" frames enqueue to qman: %.\n",
+	_fmt_dbg(" portid: %u.\n", fmt_port->id);
+	_fmt_dbg(" frames enqueue to qman: %u.\n",
 			atomic_read(&fmt_port->enqueue_to_qman_frm));
-	_fmt_dbg(" frames enqueue to rxq: %.\n",
+	_fmt_dbg(" frames enqueue to rxq: %u.\n",
 			atomic_read(&fmt_port->enqueue_to_rxq));
-	_fmt_dbg(" frames dequeue from rxq: %.\n",
+	_fmt_dbg(" frames dequeue from rxq: %u.\n",
 			atomic_read(&fmt_port->dequeue_from_rxq));
-	_fmt_dbg(" frames not enqueue to rxq - wrong frm: %.\n",
+	_fmt_dbg(" frames not enqueue to rxq - wrong frm: %u.\n",
 			atomic_read(&fmt_port->not_enqueue_to_rxq_wrong_frm));
 	atomic_set(&fmt_port->enqueue_to_qman_frm, 0);
 	atomic_set(&fmt_port->enqueue_to_rxq, 0);
@@ -1192,9 +1192,11 @@ static int fmt_close(struct inode *inode, struct file *file)
 
 	/* clean the fmt port queue */
 	while ((fmt_frame = dequeue_fmt_frame(fmt_port)) != NULL) {
+		if (fmt_frame && fmt_frame->buff.p_data){
 		kfree(fmt_frame->buff.p_data);
 		kfree(fmt_frame);
 	}
+	}
 
 	/* !!! the qman queues are cleaning from fm_ioctl...
 	 * - very ugly */
-- 
1.7.9.7

