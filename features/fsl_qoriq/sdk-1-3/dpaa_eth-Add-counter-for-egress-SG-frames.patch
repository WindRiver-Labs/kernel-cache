From 76dc62a9f645844f87df5dde0dfb9443cac133b9 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Wed, 11 Jul 2012 16:35:24 +0300
Subject: [PATCH 035/162] dpaa_eth: Add counter for egress SG frames

Separately counting outgoing frames which the stack presents as
non-linear skbuffs. This is for later assessment of the performance
impact of various driver changes.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.3-SOURCE-20121114-yocto.iso tarball.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c    |    9 ++++++---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.h    |    2 ++
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c |    1 +
 3 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index 5dc13e8..8e492ab 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -2689,7 +2689,7 @@ static int __cold dpa_debugfs_show(struct seq_file *file, void *offset)
 
 	seq_printf(file, "\nDPA counters for %s:\n"
 		"CPU           irqs        rx        tx   recycle" \
-		"   confirm    tx err    rx err  bp count\n",
+		"   confirm     tx sg    tx err    rx err  bp count\n",
 		priv->net_dev->name);
 	for_each_online_cpu(i) {
 		percpu_priv = per_cpu_ptr(priv->percpu_priv, i);
@@ -2704,29 +2704,32 @@ static int __cold dpa_debugfs_show(struct seq_file *file, void *offset)
 		total.stats.tx_packets += percpu_priv->stats.tx_packets;
 		total.tx_returned += percpu_priv->tx_returned;
 		total.tx_confirm += percpu_priv->tx_confirm;
+		total.tx_frag_skbuffs += percpu_priv->tx_frag_skbuffs;
 		total.stats.tx_errors += percpu_priv->stats.tx_errors;
 		total.stats.rx_errors += percpu_priv->stats.rx_errors;
 		count_total += dpa_bp_count;
 
 		seq_printf(file, "     %hu/%hu  %8u  %8lu  %8lu  %8u  %8u" \
-				"  %8lu  %8lu  %8d\n",
+				"  %8u  %8lu  %8lu  %8d\n",
 				get_hard_smp_processor_id(i), i,
 				percpu_priv->in_interrupt,
 				percpu_priv->stats.rx_packets,
 				percpu_priv->stats.tx_packets,
 				percpu_priv->tx_returned,
 				percpu_priv->tx_confirm,
+				percpu_priv->tx_frag_skbuffs,
 				percpu_priv->stats.tx_errors,
 				percpu_priv->stats.rx_errors,
 				dpa_bp_count);
 	}
-	seq_printf(file, "Total     %8u  %8u  %8lu  %8u  %8u  %8lu  %8lu" \
+	seq_printf(file, "Total     %8u  %8u  %8lu  %8u  %8u  %8u  %8lu  %8lu" \
 				"  %8d\n",
 			total.in_interrupt,
 			total.ingress_calls,
 			total.stats.tx_packets,
 			total.tx_returned,
 			total.tx_confirm,
+			total.tx_frag_skbuffs,
 			total.stats.tx_errors,
 			total.stats.rx_errors,
 			count_total);
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
index 6d48c8d..aee5ba8 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
@@ -283,6 +283,8 @@ struct dpa_percpu_priv_s {
 	u32 ingress_calls;
 	u32 tx_returned;
 	u32 tx_confirm;
+	/* fragmented (non-linear) skbuffs received from the stack */
+	u32 tx_frag_skbuffs;
 	struct net_device_stats	 stats;
 	struct dpa_rx_errors rx_errors;
 	struct dpa_ern_cnt ern_cnt;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index 2e02878..3cbc544 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -728,6 +728,7 @@ int __hot dpa_tx(struct sk_buff *skb, struct net_device *net_dev)
 	if (skb_is_nonlinear(skb)) {
 		/* Just create a S/G fd based on the skb */
 		err = skb_to_sg_fd(priv, percpu_priv, skb, &fd);
+		percpu_priv->tx_frag_skbuffs++;
 	} else {
 		/*
 		 * Make sure we have enough headroom to accomodate private
-- 
1.7.9.7

