From 038b33d54a15039b250b8cf8de4a78e8899a9eb9 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Thu, 9 Aug 2012 18:59:04 +0300
Subject: [PATCH 041/162] dpaa_eth: Reserve extra headroom in the case of SG
 FDs

In the non-SG codebase, we instruct FMan to reserve the appropriate
number of headroom bytes such that an Rx frame can be forwarded with
possibly some extra headers added en route.

In the SG code, we have to manage the skbuff ourselves. Adding the extra
headroom required for the described scenario.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.3-SOURCE-20121114-yocto.iso tarball.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index 8ccde06..ec4e6ad 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -482,10 +482,10 @@ void __hot _dpa_rx(struct net_device *net_dev,
 	/* TODO We might want to do some prefetches here (skb, shinfo, data) */
 
 	/*
-	 * Reserve DPA_BP_HEAD bytes of headroom, such that forwarded skbs
-	 * will have enough headroom space on Tx
+	 * Make sure forwarded skbs will have enough space on Tx,
+	 * if extra headers are added.
 	 */
-	skb_reserve(skb, DPA_BP_HEAD);
+	skb_reserve(skb, DPA_BP_HEAD + dpa_get_rx_extra_headroom());
 
 	dpa_bp_removed_one_page(dpa_bp, addr);
 
-- 
1.7.9.7

