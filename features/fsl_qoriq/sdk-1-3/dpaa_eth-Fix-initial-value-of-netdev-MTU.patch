From c4b9970d818ba0499904ccc52b3d35e65d9756f0 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Fri, 12 Oct 2012 09:51:39 +0300
Subject: [PATCH 053/162] dpaa_eth: Fix initial value of netdev MTU

If not overridden at early initialization of the net device, the netdev
receives a default MTU of 1500 which can be changed later via ifconfig,
respectively dev_set_mtu().

In cases where we boot the kernel with fsl_fm_max_frm below 1522, we
shouldn't see, or be allowed to set, MTU 1500 on any of the dpaa-eth net
devices. But dev_set_mtu() will not invoke the driver's .ndo_change_mtu
callback if the "new" MTU is the same as the "old" MTU. This results in
a logical crack, through which we can slip an MTU=1500 which is outside
our self-defined range.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.3-SOURCE-20121114-yocto.iso tarball.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c |   28 +++++++++++++++++++------
 drivers/net/ethernet/freescale/dpa/dpaa_eth.h |    8 +++++++
 2 files changed, 30 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index e0c2c06..2f870dd 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -886,12 +886,8 @@ dpa_get_stats(struct net_device *net_dev)
 
 static int dpa_change_mtu(struct net_device *net_dev, int new_mtu)
 {
-	const struct dpa_priv_s *priv;
-	const int max_mtu = dpa_get_max_frm()
-				- (VLAN_ETH_HLEN + ETH_FCS_LEN);
-	const int min_mtu = 64;
-
-	priv = netdev_priv(net_dev);
+	const int max_mtu = dpa_get_max_mtu();
+	const int min_mtu = dpa_get_min_mtu();
 
 	/* Make sure we don't exceed the Ethernet controller's MAXFRM */
 	if (new_mtu < min_mtu || new_mtu > max_mtu) {
@@ -905,6 +901,25 @@ static int dpa_change_mtu(struct net_device *net_dev, int new_mtu)
 	return 0;
 }
 
+/* .ndo_init callback */
+static int dpa_ndo_init(struct net_device *net_dev)
+{
+	/*
+	 * If fsl_fm_max_frm is set to a higher value than the all-common 1500,
+	 * we choose conservatively and let the user explicitly set a higher
+	 * MTU via ifconfig. Otherwise, the user may end up with different MTUs
+	 * in the same LAN.
+	 * If on the other hand fsl_fm_max_frm has been chosen below 1500,
+	 * start with the maximum allowed.
+	 */
+	int init_mtu = min(dpa_get_max_mtu(), ETH_DATA_LEN);
+
+	pr_debug("Setting initial MTU on net device: %d\n", init_mtu);
+	net_dev->mtu = init_mtu;
+
+	return 0;
+}
+
 static int dpa_set_mac_address(struct net_device *net_dev, void *addr)
 {
 	const struct dpa_priv_s	*priv;
@@ -3019,6 +3034,7 @@ static const struct net_device_ops dpa_private_ops = {
 	.ndo_select_queue = dpa_select_queue,
 	.ndo_change_mtu = dpa_change_mtu,
 	.ndo_set_rx_mode = dpa_set_rx_mode,
+	.ndo_init = dpa_ndo_init,
 #ifdef CONFIG_FSL_DPA_1588
 	.ndo_do_ioctl = dpa_ioctl,
 #endif
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
index f5b3419..75fd3aa 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
@@ -63,6 +63,14 @@
 #endif
 #define dpa_get_max_frm() dpa_max_frm
 
+/*
+ * Currently we have the same max_frm on all interfaces, so these macros
+ * don't get a net_device argument. This will change in the future.
+ */
+#define dpa_get_min_mtu()	64
+#define dpa_get_max_mtu()	\
+	(dpa_get_max_frm() - (VLAN_ETH_HLEN + ETH_FCS_LEN))
+
 #define DPA_RX_PRIV_DATA_SIZE   (DPA_TX_PRIV_DATA_SIZE + \
 					dpa_get_rx_extra_headroom())
 /* number of Tx queues to FMan */
-- 
1.7.9.7

