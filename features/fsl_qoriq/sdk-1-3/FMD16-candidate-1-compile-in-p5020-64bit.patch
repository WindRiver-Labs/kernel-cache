From 578f684dab58de99ac88df0a053637c4ec3f572f Mon Sep 17 00:00:00 2001
From: Andrei Pistirica <sorin.pistirica@freescale.com>
Date: Fri, 11 May 2012 11:29:12 +0300
Subject: [PATCH 063/162] FMD16 candidate 1 compile in p5020 64bit.

Adding missing compat structures.
Changed from error to warning where the IOCTL are not available.
fman_test.c had an issue (workaround only).
Conflict edited.

Signed-off-by: Andrei Pistirica <sorin.pistirica@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.3-SOURCE-20121114-yocto.iso tarball.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c   |    2 +-
 .../src/wrapper/lnxwrp_ioctls_fm_compat.c          |    9 +--
 .../src/wrapper/lnxwrp_ioctls_fm_compat.h          |   65 +++++++++++++++-----
 include/linux/fmd/Peripherals/fm_pcd_ioctls.h      |    8 +--
 4 files changed, 60 insertions(+), 24 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
index e45ea14..1c66cbd 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
@@ -1832,7 +1832,7 @@ invalid_port_id:
             break;
         }
 #if defined(CONFIG_COMPAT)
-#error TODO: compat ioctl call not implemented!
+#warning TODO: compat ioctl call not implemented!
         case FM_PCD_IOC_HASH_TABLE_SET_COMPAT:
 #endif
         case FM_PCD_IOC_HASH_TABLE_SET:
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.c
index 7f8767e..c2abe46 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.c
@@ -640,7 +640,7 @@ void compat_copy_fm_pcd_kg_schemes_params(
 
     if (compat) {
         param->num_of_schemes = compat_param->num_of_schemes;
-        for(k=0; k < IOC_FM_PCD_KG_NUM_OF_SCHEMES; k++)
+        for(k=0; k < FM_PCD_KG_NUM_OF_SCHEMES; k++)
             param->scheme_ids[k] = compat_ptr(compat_param->schemes_ids[k]);
     }
     else {
@@ -656,7 +656,7 @@ void compat_copy_fm_port_pcd_kg(
     if (compat){
         uint8_t k;
         param->num_of_schemes = compat_param->num_of_schemes;
-        for(k=0;k<IOC_FM_PCD_KG_NUM_OF_SCHEMES;k++)
+        for(k=0;k<FM_PCD_KG_NUM_OF_SCHEMES;k++)
             param->schemes_ids[k] = compat_ptr(compat_param->schemes_ids[k]);
         param->direct_scheme = compat_param->direct_scheme;
         param->direct_scheme_id = compat_ptr(compat_param->direct_scheme_id);
@@ -792,12 +792,13 @@ void compat_copy_fm_pcd_cc_node(
     }
 }
 
-#if defined(FM_CAPWAP_SUPPORT) || defined(FM_IP_FRAG_N_REASSEM_SUPPORT)
 void compat_fm_pcd_manip_set_node(
         ioc_compat_fm_pcd_manip_params_t *compat_param,
         ioc_fm_pcd_manip_params_t *param,
         uint8_t compat)
 {
+#warning TODO
+#if 0
     if (compat) {
 	param->rmv = compat_param->rmv;
 	memcpy(&param->rmv_params, &compat_param->rmv_params, sizeof(ioc_fm_pcd_manip_rmv_params_t));
@@ -826,5 +827,5 @@ void compat_fm_pcd_manip_set_node(
 
 	compat_param->id = ptr_to_compat(param->id);
     }
-}
 #endif
+}
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.h b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.h
index be509e8..b94c1c1 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.h
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.h
@@ -119,7 +119,7 @@ typedef struct ioc_compat_fm_pcd_kg_scheme_select_t {
 
 typedef struct ioc_compat_fm_pcd_port_schemes_params_t {
     uint8_t        num_of_schemes;
-    compat_uptr_t  schemes_ids [IOC_FM_PCD_KG_NUM_OF_SCHEMES];
+    compat_uptr_t  schemes_ids [FM_PCD_KG_NUM_OF_SCHEMES];
 } ioc_compat_fm_pcd_port_schemes_params_t;
 
 typedef struct ioc_compat_fm_pcd_net_env_params_t {
@@ -207,6 +207,28 @@ typedef struct ioc_compat_fm_pcd_cc_node_params_t {
     compat_uptr_t                              id;
 } ioc_compat_fm_pcd_cc_node_params_t;
 
+/**************************************************************************//**
+ @Description   Parameters for defining a hash table
+*//***************************************************************************/
+typedef struct ioc_compat_fm_pcd_hash_table_params_t {
+    uint16_t                    max_num_of_keys;
+    ioc_fm_pcd_cc_stats_mode    statistics_mode;
+    uint16_t                    hash_res_mask;
+    uint8_t                     hash_shift;
+    uint8_t                     match_key_size;
+
+    ioc_compat_fm_pcd_cc_next_engine_params_t   cc_next_engine_params_for_miss;
+
+    compat_uptr_t               id;
+
+} ioc_compat_fm_pcd_hash_table_params_t;
+
+typedef struct ioc_compat_fm_pcd_hash_table_add_key_params_t {
+    compat_uptr_t               p_hash_tbl;
+    uint8_t                     key_size;
+    ioc_compat_fm_pcd_cc_key_params_t  *p_key_params;
+} ioc_compat_fm_pcd_hash_table_add_key_params_t;
+
 typedef struct ioc_compat_fm_pcd_cc_node_modify_key_params_t {
     compat_uptr_t                       id;
     uint8_t                             key_indx;
@@ -215,6 +237,12 @@ typedef struct ioc_compat_fm_pcd_cc_node_modify_key_params_t {
     compat_uptr_t                       p_mask;
 } ioc_compat_fm_pcd_cc_node_modify_key_params_t;
 
+typedef struct ioc_compat_fm_pcd_hash_table_remove_key_params_t {
+    compat_uptr_t p_hash_tbl;
+    uint8_t key_size;
+    compat_uptr_t p_key;
+} ioc_compat_fm_pcd_hash_table_remove_key_params_t;
+
 typedef struct ioc_compat_fm_pcd_cc_node_modify_key_and_next_engine_params_t {
     compat_uptr_t                       id;
     uint16_t                            key_indx;
@@ -232,7 +260,7 @@ typedef struct ioc_compat_fm_port_pcd_cc_params_t {
 
 typedef struct ioc_compat_fm_port_pcd_kg_params_t {
     uint8_t             num_of_schemes;
-    compat_uptr_t       schemes_ids[IOC_FM_PCD_KG_NUM_OF_SCHEMES];
+    compat_uptr_t       schemes_ids[FM_PCD_KG_NUM_OF_SCHEMES];
     bool                direct_scheme;
     compat_uptr_t       direct_scheme_id;
 } ioc_compat_fm_port_pcd_kg_params_t;
@@ -291,18 +319,25 @@ typedef struct ioc_compat_fm_pcd_cc_node_modify_next_engine_params_t {
     ioc_compat_fm_pcd_cc_next_engine_params_t  cc_next_engine_params;
 } ioc_compat_fm_pcd_cc_node_modify_next_engine_params_t;
 
-#if defined(FM_CAPWAP_SUPPORT) || defined(FM_IP_FRAG_N_REASSEM_SUPPORT)
-typedef struct ioc_compat_fm_pcd_manip_params_t{
-    bool                                        rmv;
-    ioc_fm_pcd_manip_rmv_params_t               rmv_params;
-    bool                                        insrt;
-    ioc_fm_pcd_manip_insrt_params_t             insrt_params;
-    bool                                        frag_or_reasm;
-    ioc_fm_pcd_manip_frag_or_reasm_params_t     frag_or_reasm_params;
-    bool                                        treat_fd_status_fields_as_errors;
-    compat_uptr_t                               id;
-}ioc_compat_fm_pcd_manip_params_t;
+/**************************************************************************//**
+ @Description   Parameters for defining a manipulation node
+*//***************************************************************************/
+typedef struct ioc_compat_fm_pcd_manip_params_t {
+    ioc_net_header_type                           type;               /**< Selects type of manipulation node */
+    union{
+        ioc_fm_pcd_manip_hdr_params_t             hdr;                /**< Parameters for defining header manipulation node */
+        ioc_fm_pcd_manip_reassem_params_t         reassem;            /**< Parameters for defining reassembly manipulation node */
+        ioc_fm_pcd_manip_frag_params_t            frag;               /**< Parameters for defining fragmentation manipulation node */
+        ioc_fm_pcd_manip_special_offload_params_t special_offload;     /**< Parameters for defining special offload manipulation node */
+    } u;
+     compat_uptr_t                                p_next_manip;        /**< Handle to another (previously defined) manipulation node;
+                                                                            Allows concatenation of manipulation actions */
+#ifdef FM_CAPWAP_SUPPORT
+TODO:
 #endif
+    compat_uptr_t                                      *id;
+} ioc_compat_fm_pcd_manip_params_t;
+
 
 /* } pcd compat structures */
 
@@ -391,11 +426,11 @@ void compat_copy_fm_pcd_cc_node(
         ioc_compat_fm_pcd_cc_node_params_t *compat_param,
         ioc_fm_pcd_cc_node_params_t *param,
         uint8_t compat);
-#if defined(FM_CAPWAP_SUPPORT) || defined(FM_IP_FRAG_N_REASSEM_SUPPORT)
+
 void compat_fm_pcd_manip_set_node(
         ioc_compat_fm_pcd_manip_params_t *compat_param,
         ioc_fm_pcd_manip_params_t *param,
         uint8_t compat);
-#endif
+
 /* } pcd compat functions */
 #endif
diff --git a/include/linux/fmd/Peripherals/fm_pcd_ioctls.h b/include/linux/fmd/Peripherals/fm_pcd_ioctls.h
index 935b0c0..ec9d59d 100644
--- a/include/linux/fmd/Peripherals/fm_pcd_ioctls.h
+++ b/include/linux/fmd/Peripherals/fm_pcd_ioctls.h
@@ -2009,7 +2009,7 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Cautions      Allowed only following FM_PCD_HashTableSet()
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-#error TODO: compat ioctl call not implemented!
+#warning TODO: compat ioctl call not implemented!
 #define FM_PCD_IOC_HASH_TABLE_SET_COMPAT _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(37), ioc_compat_fm_pcd_hash_table_params_t)
 #endif
 #define FM_PCD_IOC_HASH_TABLE_SET _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(37), ioc_fm_pcd_hash_table_params_t)
@@ -2028,7 +2028,7 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Cautions      Allowed only following FM_PCD_HashTableSet().
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-#error TODO: compat ioctl call not implemented!
+#warning TODO: compat ioctl call not implemented!
 #define FM_PCD_IOC_HASH_TABLE_DELETE_COMPAT _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(38), ioc_compat_fm_obj_t)
 #endif
 #define FM_PCD_IOC_HASH_TABLE_DELETE _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(38), ioc_fm_obj_t)
@@ -2048,7 +2048,7 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Cautions      Allowed only following FM_PCD_HashTableSet().
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-#error TODO: compat ioctl call not implemented!
+#warning TODO: compat ioctl call not implemented!
 #define FM_PCD_IOC_HASH_TABLE_ADD_KEY_COMPAT _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(39), ioc_compat_fm_pcd_hash_table_add_key_params_t)
 #endif
 #define FM_PCD_IOC_HASH_TABLE_ADD_KEY _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(39), ioc_fm_pcd_hash_table_add_key_params_t)
@@ -2066,7 +2066,7 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Cautions      Allowed only following FM_PCD_HashTableSet().
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-#error TODO: compat ioctl call not implemented!
+#warning TODO: compat ioctl call not implemented!
 #define FM_PCD_IOC_HASH_TABLE_REMOVE_KEY_COMPAT _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(40), ioc_compat_fm_pcd_hash_table_remove_key_params_t)
 #endif
 #define FM_PCD_IOC_HASH_TABLE_REMOVE_KEY _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(40), ioc_fm_pcd_hash_table_remove_key_params_t)
-- 
1.7.9.7

