From fe42aa467bdd11cb2737429d798e45d21a095485 Mon Sep 17 00:00:00 2001
From: Stefan Szabo <szbs001@freescale.com>
Date: Mon, 22 Oct 2012 22:12:15 +0000
Subject: [PATCH 091/162] fmd: Made error reporting consistent across all FM
 ioctls

Signed-off-by: Stefan Szabo <szbs001@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.3-SOURCE-20121114-yocto.iso tarball.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c   |  641 +++++++++++---------
 include/linux/fmd/Peripherals/fm_ioctls.h          |    4 +-
 2 files changed, 368 insertions(+), 277 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
index 6a5b52e..662d644 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
@@ -598,7 +598,7 @@ Status: feature not supported
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_fm_pcd_prs_sw(compat_param, param, COMPAT_US_TO_K);
@@ -612,28 +612,29 @@ Status: feature not supported
                             sizeof(ioc_fm_pcd_prs_sw_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             if (!param->p_code || !param->size)
             {
                 XX_Free(param);
-                RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
             p_code = (uint8_t *) XX_Malloc(param->size);
             if (!p_code)
             {
                 XX_Free(param);
-                RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                RETURN_ERROR(MINOR, E_NO_MEMORY, ("IOCTL FM PCD"));
             }
 
             memset(p_code, 0, param->size);
-            if (copy_from_user(p_code, param->p_code, param->size)) {
+            if (copy_from_user(p_code, param->p_code, param->size))
+            {
                 XX_Free(p_code);
                 XX_Free(param);
-                RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
             param->p_code = p_code;
@@ -646,13 +647,16 @@ Status: feature not supported
         }
 
         case FM_PCD_IOC_SET_ADVANCED_OFFLOAD_SUPPORT:
-            return  FM_PCD_SetAdvancedOffloadSupport(p_LnxWrpFmDev->h_PcdDev);
+            err = FM_PCD_SetAdvancedOffloadSupport(p_LnxWrpFmDev->h_PcdDev);
+            break;
 
         case FM_PCD_IOC_ENABLE:
-            return FM_PCD_Enable(p_LnxWrpFmDev->h_PcdDev);
+            err = FM_PCD_Enable(p_LnxWrpFmDev->h_PcdDev);
+            break;
 
         case FM_PCD_IOC_DISABLE:
-            return FM_PCD_Disable(p_LnxWrpFmDev->h_PcdDev);
+            err = FM_PCD_Disable(p_LnxWrpFmDev->h_PcdDev);
+            break;
 
         case FM_PCD_IOC_FORCE_INTR:
         {
@@ -662,16 +666,17 @@ Status: feature not supported
             if (compat)
             {
                 if (get_user(exception, (int *) compat_ptr(arg)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
             else
 #endif
             {
-               if (get_user(exception, (int *)arg))
-                   break;
+                if (get_user(exception, (int *)arg))
+                   RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PCD_ForceIntr(p_LnxWrpFmDev->h_PcdDev, (e_FmPcdExceptions)exception);
+            err = FM_PCD_ForceIntr(p_LnxWrpFmDev->h_PcdDev, (e_FmPcdExceptions)exception);
+            break;
         }
 
         case FM_PCD_IOC_SET_EXCEPTION:
@@ -692,7 +697,7 @@ Status: feature not supported
                                     sizeof(ioc_fm_pcd_exception_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
             else
@@ -702,7 +707,7 @@ Status: feature not supported
                                     sizeof(ioc_fm_pcd_exception_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -720,16 +725,17 @@ Status: feature not supported
             if (compat)
             {
                 if (get_user(payloadOffset, (uint8_t*) compat_ptr(arg)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
             else
 #endif
             {
                 if (get_user(payloadOffset, (uint8_t*) arg))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PCD_KgSetAdditionalDataAfterParsing(p_LnxWrpFmDev->h_PcdDev, payloadOffset);
+            err = FM_PCD_KgSetAdditionalDataAfterParsing(p_LnxWrpFmDev->h_PcdDev, payloadOffset);
+            break;
         }
 
         case FM_PCD_IOC_KG_SET_DFLT_VALUE:
@@ -750,7 +756,7 @@ Status: feature not supported
                                     sizeof(ioc_fm_pcd_kg_dflt_value_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
             else
@@ -760,7 +766,7 @@ Status: feature not supported
                                     sizeof(ioc_fm_pcd_kg_dflt_value_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -802,7 +808,7 @@ Status: feature not supported
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_net_env(compat_param, param, COMPAT_US_TO_K);
@@ -815,13 +821,14 @@ Status: feature not supported
                             sizeof(ioc_fm_pcd_net_env_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             param->id = FM_PCD_NetEnvCharacteristicsSet(p_LnxWrpFmDev->h_PcdDev, (t_FmPcdNetEnvParams*)param);
 
-            if (!param->id) {
+            if (!param->id)
+            {
                 XX_Free(param);
                 err = E_INVALID_VALUE;
                 /* Since the LLD has no errno-style error reporting,
@@ -849,7 +856,7 @@ Status: feature not supported
                 if (copy_to_user((ioc_compat_fm_pcd_net_env_params_t *) compat_ptr(arg),
                             compat_param,
                             sizeof(ioc_compat_fm_pcd_net_env_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
 
                 XX_Free(compat_param);
             }
@@ -859,7 +866,7 @@ Status: feature not supported
                 if (copy_to_user((ioc_fm_pcd_net_env_params_t *)arg,
                             param,
                             sizeof(ioc_fm_pcd_net_env_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
             }
 
             XX_Free(param);
@@ -881,7 +888,7 @@ Status: feature not supported
                 ioc_compat_fm_obj_t compat_id;
 
                 if (copy_from_user(&compat_id, (ioc_compat_fm_obj_t *) compat_ptr(arg), sizeof(ioc_compat_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
                 compat_copy_fm_net_env_delete(&compat_id, &id, COMPAT_US_TO_K);
             }
@@ -889,10 +896,11 @@ Status: feature not supported
 #endif
             {
                 if (copy_from_user(&id, (ioc_fm_obj_t *) arg, sizeof(ioc_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PCD_NetEnvCharacteristicsDelete(id.obj);
+            err = FM_PCD_NetEnvCharacteristicsDelete(id.obj);
+            break;
         }
 
 #if defined(CONFIG_COMPAT)
@@ -928,7 +936,7 @@ Status: feature not supported
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_kg_scheme(compat_param, param, COMPAT_US_TO_K);
@@ -942,13 +950,14 @@ Status: feature not supported
                             sizeof(ioc_fm_pcd_kg_scheme_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             param->id = FM_PCD_KgSchemeSet(p_LnxWrpFmDev->h_PcdDev, (t_FmPcdKgSchemeParams*)param);
 
-            if (!param->id) {
+            if (!param->id)
+            {
                 XX_Free(param);
                 err = E_INVALID_VALUE;
                 /* Since the LLD has no errno-style error reporting,
@@ -975,7 +984,7 @@ Status: feature not supported
                 if (copy_to_user((ioc_compat_fm_pcd_kg_scheme_params_t *)compat_ptr(arg),
                             compat_param,
                             sizeof(ioc_compat_fm_pcd_kg_scheme_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
 
                 XX_Free(compat_param);
             }
@@ -985,7 +994,7 @@ Status: feature not supported
                 if (copy_to_user((ioc_fm_pcd_kg_scheme_params_t *)arg,
                             param,
                             sizeof(ioc_fm_pcd_kg_scheme_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
             }
 
             XX_Free(param);
@@ -1007,7 +1016,7 @@ Status: feature not supported
                 ioc_compat_fm_obj_t compat_id;
 
                 if (copy_from_user(&compat_id, (ioc_compat_fm_obj_t *) compat_ptr(arg), sizeof(ioc_compat_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
                 compat_copy_fm_pcd_scheme_delete(&compat_id, &id, COMPAT_US_TO_K);
             }
@@ -1015,10 +1024,11 @@ Status: feature not supported
 #endif
             {
                 if (copy_from_user(&id, (ioc_fm_obj_t *) arg, sizeof(ioc_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PCD_KgSchemeDelete(id.obj);
+            err = FM_PCD_KgSchemeDelete(id.obj);
+            break;
         }
 
 #if defined(CONFIG_COMPAT)
@@ -1066,7 +1076,7 @@ Status: feature not supported
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_cc_node(compat_param, param, COMPAT_US_TO_K);
@@ -1079,7 +1089,7 @@ Status: feature not supported
                 if (copy_from_user(param, (ioc_fm_pcd_cc_node_params_t *)arg, sizeof(ioc_fm_pcd_cc_node_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -1103,7 +1113,7 @@ Status: feature not supported
                                     param->keys_params.key_size))
                         {
                             XX_Free(param);
-                            RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                            RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                         }
 
                         param->keys_params.key_params[i].p_key = &keys[k];
@@ -1116,7 +1126,7 @@ Status: feature not supported
                                     param->keys_params.key_size))
                         {
                             XX_Free(param);
-                            RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                            RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                         }
 
                         param->keys_params.key_params[i].p_mask = &masks[k];
@@ -1155,7 +1165,7 @@ Status: feature not supported
                 if (copy_to_user((ioc_compat_fm_pcd_cc_node_params_t *)compat_ptr(arg),
                             compat_param,
                             sizeof(ioc_compat_fm_pcd_cc_node_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
 
                 XX_Free(compat_param);
             }
@@ -1165,7 +1175,7 @@ Status: feature not supported
                 if (copy_to_user((ioc_fm_pcd_cc_node_params_t *)arg,
                             param,
                             sizeof(ioc_fm_pcd_cc_node_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
             }
 
             XX_Free(param);
@@ -1187,7 +1197,7 @@ Status: feature not supported
                 ioc_compat_fm_obj_t compat_id;
 
                 if (copy_from_user(&compat_id, (ioc_compat_fm_obj_t *) compat_ptr(arg), sizeof(ioc_compat_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
                 compat_copy_fm_pcd_cc_delete_node(&compat_id, &id, COMPAT_US_TO_K);
             }
@@ -1195,10 +1205,11 @@ Status: feature not supported
 #endif
             {
                 if (copy_from_user(&id, (ioc_fm_obj_t *) arg, sizeof(ioc_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PCD_MatchTableDelete(id.obj);
+            err = FM_PCD_MatchTableDelete(id.obj);
+            break;
         }
 
 #if defined(CONFIG_COMPAT)
@@ -1234,7 +1245,7 @@ Status: feature not supported
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_cc_tree(compat_param, param, COMPAT_US_TO_K);
@@ -1248,7 +1259,7 @@ Status: feature not supported
                             sizeof(ioc_fm_pcd_cc_tree_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -1282,7 +1293,7 @@ Status: feature not supported
                 if (copy_to_user((ioc_compat_fm_pcd_cc_tree_params_t *)compat_ptr(arg),
                             compat_param,
                             sizeof(ioc_compat_fm_pcd_cc_tree_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
 
                 XX_Free(compat_param);
             }
@@ -1292,7 +1303,7 @@ Status: feature not supported
                 if (copy_to_user((ioc_fm_pcd_cc_tree_params_t *)arg,
                             param,
                             sizeof(ioc_fm_pcd_cc_tree_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
             }
 
             XX_Free(param);
@@ -1314,7 +1325,7 @@ Status: feature not supported
                 ioc_compat_fm_obj_t compat_id;
 
                 if (copy_from_user(&compat_id, (ioc_compat_fm_obj_t *) compat_ptr(arg), sizeof(ioc_compat_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
                 compat_copy_fm_pcd_cc_delete_tree(&compat_id, &id, COMPAT_US_TO_K);
             }
@@ -1322,10 +1333,11 @@ Status: feature not supported
 #endif
             {
                 if (copy_from_user(&id, (ioc_fm_obj_t *) arg, sizeof(ioc_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PCD_CcRootDelete(id.obj);
+            err = FM_PCD_CcRootDelete(id.obj);
+            break;
         }
 
 #if defined(CONFIG_COMPAT)
@@ -1358,10 +1370,11 @@ Status: feature not supported
                 memset(compat_param, 0, sizeof(ioc_fm_pcd_plcr_profile_params_t));
                 if (copy_from_user(compat_param, (
                             ioc_compat_fm_pcd_plcr_profile_params_t *)compat_ptr(arg),
-                            sizeof(ioc_compat_fm_pcd_plcr_profile_params_t))) {
+                            sizeof(ioc_compat_fm_pcd_plcr_profile_params_t)))
+                {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_plcr_profile(compat_param, param, COMPAT_US_TO_K);
@@ -1375,7 +1388,7 @@ Status: feature not supported
                                     sizeof(ioc_fm_pcd_plcr_profile_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -1398,7 +1411,7 @@ Status: feature not supported
                 {
                     XX_Free(port_params);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 switch(port_params->port_type)
@@ -1464,7 +1477,7 @@ invalid_port_id:
                 if (copy_to_user((ioc_compat_fm_pcd_plcr_profile_params_t *) compat_ptr(arg),
                             compat_param,
                             sizeof(ioc_compat_fm_pcd_plcr_profile_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
 
                 XX_Free(compat_param);
             }
@@ -1474,7 +1487,7 @@ invalid_port_id:
                 if (copy_to_user((ioc_fm_pcd_plcr_profile_params_t *)arg,
                             param,
                             sizeof(ioc_fm_pcd_plcr_profile_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
             }
 
             XX_Free(param);
@@ -1496,7 +1509,7 @@ invalid_port_id:
                 ioc_compat_fm_obj_t compat_id;
 
                 if (copy_from_user(&compat_id, (ioc_compat_fm_obj_t *) compat_ptr(arg), sizeof(ioc_compat_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
                 compat_copy_fm_pcd_plcr_del_profile(&compat_id, &id, COMPAT_US_TO_K);
             }
@@ -1504,10 +1517,11 @@ invalid_port_id:
 #endif
             {
                 if (copy_from_user(&id, (ioc_fm_obj_t *) arg, sizeof(ioc_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PCD_PlcrProfileDelete(id.obj);
+            err = FM_PCD_PlcrProfileDelete(id.obj);
+            break;
         }
 
 #if defined(CONFIG_COMPAT)
@@ -1543,7 +1557,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_fm_pcd_cc_tree_modify_next_engine(compat_param, param, COMPAT_US_TO_K);
@@ -1557,7 +1571,7 @@ invalid_port_id:
                             sizeof(ioc_fm_pcd_cc_tree_modify_next_engine_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -1603,7 +1617,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_cc_node_modify_next_engine(compat_param, param, COMPAT_US_TO_K);
@@ -1617,7 +1631,7 @@ invalid_port_id:
                             sizeof(ioc_fm_pcd_cc_node_modify_next_engine_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -1662,7 +1676,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_cc_node_modify_next_engine(compat_param, param, COMPAT_US_TO_K);
@@ -1676,7 +1690,7 @@ invalid_port_id:
                                     sizeof(ioc_fm_pcd_cc_node_modify_next_engine_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -1721,7 +1735,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 param->id = compat_ptr(compat_param->id);
@@ -1736,7 +1750,7 @@ invalid_port_id:
                             sizeof(ioc_fm_pcd_cc_node_remove_key_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -1779,7 +1793,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_cc_node_modify_key_and_next_engine(compat_param, param, COMPAT_US_TO_K);
@@ -1793,7 +1807,7 @@ invalid_port_id:
                                     sizeof(ioc_fm_pcd_cc_node_modify_key_and_next_engine_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -1821,7 +1835,7 @@ invalid_port_id:
                         {
                             XX_Free(p_tmp);
                             XX_Free(param);
-                            RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                            RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                         }
 
                         param->key_params.p_key = p_tmp;
@@ -1834,7 +1848,7 @@ invalid_port_id:
                         {
                             XX_Free(p_tmp - param->key_size);
                             XX_Free(param);
-                            RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                            RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                         }
 
                         param->key_params.p_mask = p_tmp;
@@ -1888,7 +1902,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_cc_node_modify_key_and_next_engine(compat_param, param, COMPAT_US_TO_K);
@@ -1902,7 +1916,7 @@ invalid_port_id:
                             sizeof(ioc_fm_pcd_cc_node_modify_key_and_next_engine_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -1921,11 +1935,12 @@ invalid_port_id:
         {
             ioc_fm_pcd_hash_table_params_t *param;
 
-            param = kmalloc(sizeof(*param), GFP_KERNEL);
+            param = (ioc_fm_pcd_hash_table_params_t*) XX_Malloc(
+                    sizeof(ioc_fm_pcd_hash_table_params_t));
             if (!param)
                 RETURN_ERROR(MINOR, E_NO_MEMORY, ("IOCTL FM PCD"));
 
-            memset(param, 0, sizeof(*param)) ;
+            memset(param, 0, sizeof(ioc_fm_pcd_hash_table_params_t));
 
 #if defined(CONFIG_COMPAT)
             if (compat)
@@ -1947,7 +1962,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_hash_table(compat_param, param, COMPAT_US_TO_K);
@@ -1959,13 +1974,17 @@ invalid_port_id:
             {
                 if (copy_from_user(param, (ioc_fm_pcd_hash_table_params_t *)arg,
                                     sizeof(ioc_fm_pcd_hash_table_params_t)))
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                {
+                    XX_Free(param);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+                }
             }
 
             param->id = FM_PCD_HashTableSet(p_LnxWrpFmDev->h_PcdDev, (t_FmPcdHashTableParams *) param);
 
-            if (!param->id) {
-                kfree(param);
+            if (!param->id)
+            {
+                XX_Free(param);
                 err = E_INVALID_VALUE;
                 /* Since the LLD has no errno-style error reporting,
                    we're left here with no other option than to report
@@ -1991,7 +2010,7 @@ invalid_port_id:
                 if (copy_to_user((ioc_compat_fm_pcd_hash_table_params_t*) compat_ptr(arg),
                             compat_param,
                             sizeof(ioc_compat_fm_pcd_hash_table_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
 
                 XX_Free(compat_param);
             }
@@ -2001,10 +2020,10 @@ invalid_port_id:
                 if (copy_to_user((ioc_fm_pcd_hash_table_params_t *)arg,
                             param,
                             sizeof(ioc_fm_pcd_hash_table_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
             }
 
-            kfree(param);
+            XX_Free(param);
             break;
         }
 
@@ -2016,13 +2035,14 @@ invalid_port_id:
             ioc_fm_obj_t id;
 
             memset(&id, 0, sizeof(ioc_fm_obj_t));
+
 #if defined(CONFIG_COMPAT)
             if (compat)
             {
                 ioc_compat_fm_obj_t compat_id;
 
                 if (copy_from_user(&compat_id, (ioc_compat_fm_obj_t *) compat_ptr(arg), sizeof(ioc_compat_fm_obj_t)))
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
                 id.obj = compat_pcd_id2ptr(compat_id.obj);
             }
@@ -2030,11 +2050,13 @@ invalid_port_id:
 #endif
             {
                 if (copy_from_user(&id, (ioc_fm_obj_t *) arg, sizeof(ioc_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PCD_HashTableDelete(id.obj);
+            err = FM_PCD_HashTableDelete(id.obj);
+            break;
         }
+
 #if defined(CONFIG_COMPAT)
         case FM_PCD_IOC_HASH_TABLE_ADD_KEY_COMPAT:
 #endif
@@ -2069,7 +2091,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 if (compat_param->key_size)
@@ -2093,8 +2115,10 @@ invalid_port_id:
             {
                 if (copy_from_user(param, (ioc_fm_pcd_hash_table_add_key_params_t *)arg,
                             sizeof(ioc_fm_pcd_hash_table_add_key_params_t)))
+                {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+                }
             }
 
             if (param->key_size)
@@ -2121,7 +2145,7 @@ invalid_port_id:
                         {
                             XX_Free(p_tmp);
                             XX_Free(param);
-                            RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                            RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                         }
 
                         param->key_params.p_key = p_tmp;
@@ -2134,7 +2158,7 @@ invalid_port_id:
                         {
                             XX_Free(p_tmp - param->key_size);
                             XX_Free(param);
-                            RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                            RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                         }
 
                         param->key_params.p_mask = p_tmp;
@@ -2187,7 +2211,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 param->p_hash_tbl = compat_pcd_id2ptr(compat_param->p_hash_tbl);
@@ -2200,8 +2224,10 @@ invalid_port_id:
             {
                 if (copy_from_user(param, (ioc_fm_pcd_hash_table_remove_key_params_t*)arg,
                             sizeof(ioc_fm_pcd_hash_table_remove_key_params_t)))
+                {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+                }
             }
 
             if (param->key_size)
@@ -2219,7 +2245,7 @@ invalid_port_id:
                 {
                     XX_Free(p_key);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
                 param->p_key = p_key;
             }
@@ -2234,14 +2260,13 @@ invalid_port_id:
             XX_Free(param);
             break;
         }
+
 #if defined(CONFIG_COMPAT)
         case FM_PCD_IOC_MATCH_TABLE_MODIFY_KEY_COMPAT:
 #endif
         case FM_PCD_IOC_MATCH_TABLE_MODIFY_KEY:
         {
             ioc_fm_pcd_cc_node_modify_key_params_t  *param;
-            uint8_t                                 *key  = NULL;
-            uint8_t                                 *mask = NULL;
 
             param = (ioc_fm_pcd_cc_node_modify_key_params_t *) XX_Malloc(
                     sizeof(ioc_fm_pcd_cc_node_modify_key_params_t));
@@ -2269,7 +2294,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_cc_node_modify_key(compat_param, param, COMPAT_US_TO_K);
@@ -2283,7 +2308,7 @@ invalid_port_id:
                                     sizeof(ioc_fm_pcd_cc_node_modify_key_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -2311,7 +2336,7 @@ invalid_port_id:
                         {
                             XX_Free(p_tmp);
                             XX_Free(param);
-                            RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                            RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                         }
 
                         param->p_key = p_tmp;
@@ -2324,7 +2349,7 @@ invalid_port_id:
                         {
                             XX_Free(p_tmp - param->key_size);
                             XX_Free(param);
-                            RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                            RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                         }
 
                         param->p_mask = p_tmp;
@@ -2338,8 +2363,10 @@ invalid_port_id:
                     param->p_key,
                     param->p_mask);
 
-            if (mask) XX_Free(mask);
-            XX_Free(key);
+            if (param->p_key)
+                XX_Free(param->p_key);
+            else if (param->p_mask)
+                XX_Free(param->p_mask);
             XX_Free(param);
             break;
         }
@@ -2381,7 +2408,7 @@ invalid_port_id:
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_fm_pcd_manip_set_node(compat_param, param, COMPAT_US_TO_K);
@@ -2395,46 +2422,57 @@ invalid_port_id:
                                             sizeof(ioc_fm_pcd_manip_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
-            if (param->type == e_IOC_FM_PCD_MANIP_HDR) {
+            if (param->type == e_IOC_FM_PCD_MANIP_HDR)
+            {
                 size = param->u.hdr.insrt_params.u.generic.size;
-                p_data = (uint8_t *) kmalloc(size, GFP_KERNEL);
+                p_data = (uint8_t *) XX_Malloc(size);
                 if (!p_data )
+                {
+                    XX_Free(param);
                     RETURN_ERROR(MINOR, E_NO_MEMORY, NO_MSG);
+                }
 
                 if (param->u.hdr.insrt_params.u.generic.p_data &&
                         copy_from_user(p_data,
-                            param->u.hdr.insrt_params.u.generic.p_data, size)) {
+                            param->u.hdr.insrt_params.u.generic.p_data, size))
+                {
                     XX_Free(p_data);
-                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
+                    XX_Free(param);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 param->u.hdr.insrt_params.u.generic.p_data = p_data;
             }
 
-            if (param->id) {
+            if (param->id)
+            {
                 /* Security Hole: the user can pass any piece of garbage
                    in 'param->id', and that will go straight through to the LLD,
                    no checks being done by the wrapper! */
-                err = FM_PCD_ManipNodeReplace((t_Handle)param->id,
-                        (t_FmPcdManipParams *)param);
-                if (err) {
+                err = FM_PCD_ManipNodeReplace(
+                        (t_Handle) param->id,
+                        (t_FmPcdManipParams*) param);
+                if (err)
+                {
                     if (p_data)
-                        kfree(p_data);
+                        XX_Free(p_data);
                     XX_Free(param);
                     break;
                 }
             }
             else
             {
-                param->id = FM_PCD_ManipNodeSet(p_LnxWrpFmDev->h_PcdDev,
-                        (t_FmPcdManipParams *)param);
-                if (!param->id) {
+                param->id = FM_PCD_ManipNodeSet(
+                        p_LnxWrpFmDev->h_PcdDev,
+                        (t_FmPcdManipParams*) param);
+                if (!param->id)
+                {
                     if (p_data)
-                        kfree(p_data);
+                        XX_Free(p_data);
                     XX_Free(param);
                     err = E_INVALID_VALUE;
                     /* Since the LLD has no errno-style error reporting,
@@ -2453,6 +2491,8 @@ invalid_port_id:
                         sizeof(ioc_compat_fm_pcd_manip_params_t));
                 if (!compat_param)
                 {
+                    if (p_data)
+                        XX_Free(p_data);
                     XX_Free(param);
                     RETURN_ERROR(MINOR, E_NO_MEMORY, ("IOCTL FM PCD"));
                 }
@@ -2464,7 +2504,7 @@ invalid_port_id:
                 if (copy_to_user((ioc_compat_fm_pcd_manip_params_t *) compat_ptr(arg),
                             compat_param,
                             sizeof(ioc_compat_fm_pcd_manip_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
 
                 XX_Free(compat_param);
             }
@@ -2473,14 +2513,14 @@ invalid_port_id:
             {
                 if (copy_to_user((ioc_fm_pcd_manip_params_t *)arg,
                             param, sizeof(ioc_fm_pcd_manip_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
             }
 
             if (p_data)
-                kfree(p_data);
+                XX_Free(p_data);
             XX_Free(param);
+            break;
         }
-        break;
 
 #if defined(CONFIG_COMPAT)
         case FM_PCD_IOC_MANIP_NODE_DELETE_COMPAT:
@@ -2496,7 +2536,7 @@ invalid_port_id:
                 ioc_compat_fm_obj_t compat_id;
 
                 if (copy_from_user(&compat_id, (ioc_compat_fm_obj_t *) compat_ptr(arg), sizeof(ioc_compat_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
                 compat_copy_fm_pcd_manip_delete_node(&compat_id, &id, COMPAT_US_TO_K);
             }
@@ -2504,42 +2544,45 @@ invalid_port_id:
 #endif
             {
                 if (copy_from_user(&id, (ioc_fm_obj_t *) arg, sizeof(ioc_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PCD_ManipNodeDelete(id.obj);
+            err = FM_PCD_ManipNodeDelete(id.obj);
+            break;
         }
-        break;
 
 #ifdef FM_CAPWAP_SUPPORT
+#warning "feature not supported!"
 #if defined(CONFIG_COMPAT)
         case FM_PCD_IOC_STATISTICS_SET_NODE_COMPAT:
 #endif
         case FM_PCD_IOC_STATISTICS_SET_NODE:
         {
-            ioc_fm_pcd_stats_params_t param;
-#warning "feature not supported!"
+/*          ioc_fm_pcd_stats_params_t param;
+            ...
             param->id = FM_PCD_StatisticsSetNode(p_LnxWrpFmDev->h_PcdDev,
                                 (t_FmPcdStatsParams *)&param);
+*/
+            err = E_NOT_SUPPORTED;
+            break;
         }
-        break;
 #endif /* FM_CAPWAP_SUPPORT */
 
         default:
             RETURN_ERROR(MINOR, E_INVALID_SELECTION,
-                ("invalid ioctl: cmd:0x%08x(type:0x%02x, nr:0x%02x.\n",
+                ("invalid ioctl: cmd:0x%08x(type:0x%02x, nr: %d.\n",
                 cmd, _IOC_TYPE(cmd), _IOC_NR(cmd)));
     }
 
     if (err)
         RETURN_ERROR(MINOR, err, ("IOCTL FM PCD"));
 
-    return err;
+    return E_OK;
 }
 
 t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned long arg, bool compat)
 {
-    t_Error err = E_READ_FAILED;
+    t_Error err = E_OK;
 
     switch (cmd)
     {
@@ -2559,7 +2602,7 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
                 if (copy_from_user(param, (ioc_fm_port_bandwidth_params*)compat_ptr(arg), sizeof(ioc_fm_port_bandwidth_params)))
                 {
                     XX_Free(param);
-                    return err;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
             else
@@ -2568,13 +2611,14 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
                 if (copy_from_user(param, (ioc_fm_port_bandwidth_params*)arg, sizeof(ioc_fm_port_bandwidth_params)))
                 {
                     XX_Free(param);
-                    return err;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             err =  FM_SetPortsBandwidth(p_LnxWrpFmDev->h_Dev, (t_FmPortsBandwidthParams*) param);
+
             XX_Free(param);
-            return err;
+            break;
         }
 
         case FM_IOC_GET_REVISION:
@@ -2594,9 +2638,7 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
                 if (copy_to_user((ioc_fm_revision_info_t *)compat_ptr(arg),
                             param,
                             sizeof(ioc_fm_revision_info_t)))
-                    err = E_WRITE_FAILED;
-                else
-                    err = E_OK;
+                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
             }
             else
 #endif
@@ -2604,13 +2646,11 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
                 if (copy_to_user((ioc_fm_revision_info_t *)arg,
                             param,
                             sizeof(ioc_fm_revision_info_t)))
-                    err = E_WRITE_FAILED;
-                else
-                    err = E_OK;
+                    RETURN_ERROR(MINOR, E_READ_FAILED, NO_MSG);
             }
 
             XX_Free(param);
-            return err;
+            break;
         }
 
         case FM_IOC_SET_COUNTER:
@@ -2629,7 +2669,7 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
                 if (copy_from_user(param, (ioc_fm_counters_params_t *)compat_ptr(arg), sizeof(ioc_fm_counters_params_t)))
                 {
                     XX_Free(param);
-                    return err;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
             else
@@ -2638,14 +2678,14 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
                 if (copy_from_user(param, (ioc_fm_counters_params_t *)arg, sizeof(ioc_fm_counters_params_t)))
                 {
                     XX_Free(param);
-                    return err;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             err = FM_ModifyCounter(p_LnxWrpFmDev->h_Dev, param->cnt, param->val);
 
             XX_Free(param);
-            return err;
+            break;
         }
 
         case FM_IOC_GET_COUNTER:
@@ -2664,7 +2704,7 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
                 if (copy_from_user(param, (ioc_fm_counters_params_t *)compat_ptr(arg), sizeof(ioc_fm_counters_params_t)))
                 {
                     XX_Free(param);
-                    return err;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
             else
@@ -2673,7 +2713,7 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
                 if (copy_from_user(param, (ioc_fm_counters_params_t *)arg, sizeof(ioc_fm_counters_params_t)))
                 {
                     XX_Free(param);
-                    return err;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -2683,17 +2723,17 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
             if (compat)
             {
                 if (copy_to_user((ioc_fm_counters_params_t *)compat_ptr(arg), param, sizeof(ioc_fm_counters_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
             }
             else
 #endif
             {
                 if (copy_to_user((ioc_fm_counters_params_t *)arg, param, sizeof(ioc_fm_counters_params_t)))
-                    err = E_WRITE_FAILED;
+                    err = E_READ_FAILED;
             }
 
             XX_Free(param);
-            return err;
+            break;
         }
 
         case FM_IOC_FORCE_INTR:
@@ -2704,29 +2744,39 @@ t_Error LnxwrpFmIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd, unsigned l
             if (compat)
             {
                 if (get_user(param, (ioc_fm_exceptions*) compat_ptr(arg)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
             else
 #endif
             {
                 if (get_user(param, (ioc_fm_exceptions*)arg))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_ForceIntr(p_LnxWrpFmDev->h_Dev, (e_FmExceptions)param);
+            err = FM_ForceIntr(p_LnxWrpFmDev->h_Dev, (e_FmExceptions)param);
+            break;
         }
 
         default:
             return LnxwrpFmPcdIOCTL(p_LnxWrpFmDev, cmd, arg, compat);
     }
 
-    RETURN_ERROR(MINOR, E_INVALID_OPERATION, ("IOCTL FM"));
+    if (err)
+        RETURN_ERROR(MINOR, E_INVALID_OPERATION, ("IOCTL FM"));
+
+    return E_OK;
 }
 
 t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd, unsigned long arg, bool compat)
 {
-    t_Error err = E_READ_FAILED;
-
+    t_Error err = E_OK;
+/*
+Status: not exported
+#if (DPAA_VERSION >= 11)
+    FM_PORT_ConfigBufferPrefixContent
+    FM_PORT_VSPAlloc
+#endif
+ */
     _fm_ioctl_dbg("cmd:0x%08x(type:0x%02x, nr:%u).\n",
         cmd, _IOC_TYPE(cmd), _IOC_NR(cmd) - 50);
 
@@ -2734,10 +2784,12 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
     {
         case FM_PORT_IOC_DISABLE:
             FM_PORT_Disable(p_LnxWrpFmPortDev->h_Dev);
+            /* deliberately ignoring error codes here */
             return E_OK;
 
         case FM_PORT_IOC_ENABLE:
             FM_PORT_Enable(p_LnxWrpFmPortDev->h_Dev);
+            /* deliberately ignoring error codes here */
             return E_OK;
 
         case FM_PORT_IOC_SET_ERRORS_ROUTE:
@@ -2748,16 +2800,17 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
             if (compat)
             {
                 if (get_user(errs, (ioc_fm_port_frame_err_select_t*)compat_ptr(arg)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
             else
 #endif
             {
                 if (get_user(errs, (ioc_fm_port_frame_err_select_t*)arg))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PORT_SetErrorsRoute(p_LnxWrpFmPortDev->h_Dev, (fmPortFrameErrSelect_t)errs);
+            err = FM_PORT_SetErrorsRoute(p_LnxWrpFmPortDev->h_Dev, (fmPortFrameErrSelect_t)errs);
+            break;
         }
 
         case FM_PORT_IOC_SET_RATE_LIMIT:
@@ -2776,7 +2829,7 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                 if (copy_from_user(param, (ioc_fm_port_rate_limit_t *)compat_ptr(arg), sizeof(ioc_fm_port_rate_limit_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
             else
@@ -2785,18 +2838,19 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                 if (copy_from_user(param, (ioc_fm_port_rate_limit_t *)arg, sizeof(ioc_fm_port_rate_limit_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             err =  FM_PORT_SetRateLimit(p_LnxWrpFmPortDev->h_Dev, (t_FmPortRateLimit *)param);
 
             XX_Free(param);
-            return err;
+            break;
         }
 
         case FM_PORT_IOC_REMOVE_RATE_LIMIT:
             FM_PORT_DeleteRateLimit(p_LnxWrpFmPortDev->h_Dev);
+            /* deliberately ignoring error codes here */
             return E_OK;
 
         case FM_PORT_IOC_ALLOC_PCD_FQIDS:
@@ -2819,7 +2873,7 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                                     sizeof(ioc_fm_port_pcd_fqids_params_t)))
                 {
                     XX_Free(param);
-                    return err;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
             else
@@ -2829,7 +2883,7 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                                     sizeof(ioc_fm_port_pcd_fqids_params_t)))
                 {
                     XX_Free(param);
-                    return err;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -2847,24 +2901,18 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
             {
                 if (copy_to_user((ioc_fm_port_pcd_fqids_params_t *)compat_ptr(arg),
                                   param, sizeof(ioc_fm_port_pcd_fqids_params_t)))
-                {
-                    XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_WRITE_FAILED, NO_MSG);
-                }
+                    err = E_READ_FAILED;
             }
             else
 #endif
             {
                 if (copy_to_user((ioc_fm_port_pcd_fqids_params_t *)arg,
                                   param, sizeof(ioc_fm_port_pcd_fqids_params_t)))
-                {
-                    XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_WRITE_FAILED, NO_MSG);
-                }
+                    err = E_READ_FAILED;
             }
 
             XX_Free(param);
-            return E_OK;
+            break;
         }
 
         case FM_PORT_IOC_FREE_PCD_FQIDS:
@@ -2878,19 +2926,19 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
             if (compat)
             {
                 if (get_user(base_fqid, (uint32_t*) compat_ptr(arg)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
             else
 #endif
             {
                 if (get_user(base_fqid, (uint32_t*)arg))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
             if (p_LnxWrpFmPortDev->pcd_owner_params.cbf(p_LnxWrpFmPortDev->pcd_owner_params.dev, base_fqid))
-                RETURN_ERROR(MAJOR, E_WRITE_FAILED, NO_MSG);
+               err = E_WRITE_FAILED;
 
-            return E_OK;
+            break;
         }
 
 #if defined(CONFIG_COMPAT)
@@ -2904,8 +2952,6 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
             ioc_fm_port_pcd_kg_params_t   *port_pcd_kg_params;
             ioc_fm_port_pcd_plcr_params_t *port_pcd_plcr_params;
 
-            long copy_fail = 0;
-
             port_pcd_params = (ioc_fm_port_pcd_params_t *) XX_Malloc(
                     sizeof(ioc_fm_port_pcd_params_t) +
                     sizeof(ioc_fm_port_pcd_prs_params_t) +
@@ -2959,130 +3005,158 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                 compat_port_pcd_kg_params   = (ioc_compat_fm_port_pcd_kg_params_t *) (compat_port_pcd_cc_params + 1);
                 compat_port_pcd_plcr_params = (ioc_compat_fm_port_pcd_plcr_params_t *) (compat_port_pcd_kg_params + 1);
 
-                while (!(copy_fail = copy_from_user(compat_port_pcd_params,
-                                        (ioc_compat_fm_port_pcd_params_t *)compat_ptr(arg),
-                                        sizeof(ioc_compat_fm_port_pcd_params_t))))
+                if (copy_from_user(compat_port_pcd_params,
+                            (ioc_compat_fm_port_pcd_params_t*) compat_ptr(arg),
+                            sizeof(ioc_compat_fm_port_pcd_params_t)))
+                    err = E_WRITE_FAILED;
+
+                while (!err) /* pseudo-while */
                 {
                     /* set pointers from where to copy from: */
-                    port_pcd_params->p_prs_params = compat_ptr(compat_port_pcd_params->p_prs_params); /* same structure */
-                    port_pcd_params->p_cc_params = compat_ptr(compat_port_pcd_params->p_cc_params);
-                    port_pcd_params->p_kg_params = compat_ptr(compat_port_pcd_params->p_kg_params);
-                    port_pcd_params->p_plcr_params = compat_ptr(compat_port_pcd_params->p_plcr_params);
+                    port_pcd_params->p_prs_params          = compat_ptr(compat_port_pcd_params->p_prs_params); /* same structure */
+                    port_pcd_params->p_cc_params           = compat_ptr(compat_port_pcd_params->p_cc_params);
+                    port_pcd_params->p_kg_params           = compat_ptr(compat_port_pcd_params->p_kg_params);
+                    port_pcd_params->p_plcr_params         = compat_ptr(compat_port_pcd_params->p_plcr_params);
                     port_pcd_params->p_ip_reassembly_manip = compat_ptr(compat_port_pcd_params->p_ip_reassembly_manip);
 
                     /* the prs member is the same, no compat structure...memcpy only */
-                    if (port_pcd_params->p_prs_params && !copy_fail)
+                    if (port_pcd_params->p_prs_params)
                     {
-                        if(!(copy_fail = copy_from_user(same_port_pcd_prs_params,
+                        if (copy_from_user(same_port_pcd_prs_params,
                                 port_pcd_params->p_prs_params,
-                                sizeof(ioc_fm_port_pcd_prs_params_t))))
+                                sizeof(ioc_fm_port_pcd_prs_params_t)))
                         {
-                            memcpy(port_pcd_prs_params, same_port_pcd_prs_params, sizeof(ioc_fm_port_pcd_prs_params_t));
-                            port_pcd_params->p_prs_params = port_pcd_prs_params;
+                            err = E_WRITE_FAILED;
+                            break; /* from pseudo-while */
                         }
-                        else
-                            break;
+
+                        memcpy(port_pcd_prs_params, same_port_pcd_prs_params, sizeof(ioc_fm_port_pcd_prs_params_t));
+                        port_pcd_params->p_prs_params = port_pcd_prs_params;
                     }
 
-                    if (port_pcd_params->p_cc_params && !copy_fail)
+                    if (port_pcd_params->p_cc_params)
                     {
-                        if(!(copy_fail = copy_from_user(compat_port_pcd_cc_params,
+                        if (copy_from_user(compat_port_pcd_cc_params,
                                 port_pcd_params->p_cc_params,
-                                sizeof(ioc_compat_fm_port_pcd_cc_params_t))))
-                            port_pcd_params->p_cc_params = port_pcd_cc_params;
-                        else
-                            break;
+                                sizeof(ioc_compat_fm_port_pcd_cc_params_t)))
+                        {
+                            err = E_WRITE_FAILED;
+                            break; /* from pseudo-while */
+                        }
+
+                        port_pcd_params->p_cc_params = port_pcd_cc_params;
                     }
 
-                    if (port_pcd_params->p_kg_params && !copy_fail)
+                    if (port_pcd_params->p_kg_params)
                     {
-                        if(!(copy_fail = copy_from_user(compat_port_pcd_kg_params,
+                        if (copy_from_user(compat_port_pcd_kg_params,
                                 port_pcd_params->p_kg_params,
-                                sizeof(ioc_compat_fm_port_pcd_kg_params_t))))
-                            port_pcd_params->p_kg_params = port_pcd_kg_params;
-                        else
-                            break;
+                                sizeof(ioc_compat_fm_port_pcd_kg_params_t)))
+                        {
+                            err = E_WRITE_FAILED;
+                            break; /* from pseudo-while */
+                        }
+
+                        port_pcd_params->p_kg_params = port_pcd_kg_params;
                     }
 
-                    if (port_pcd_params->p_plcr_params && !copy_fail)
+                    if (port_pcd_params->p_plcr_params)
                     {
-                        if(!(copy_fail = copy_from_user(compat_port_pcd_plcr_params,
-                                port_pcd_params->p_plcr_params,
-                                sizeof(ioc_compat_fm_port_pcd_plcr_params_t))))
-                            port_pcd_params->p_plcr_params = port_pcd_plcr_params;
+                        if (copy_from_user(compat_port_pcd_plcr_params,
+                                    port_pcd_params->p_plcr_params,
+                                    sizeof(ioc_compat_fm_port_pcd_plcr_params_t)))
+                        {
+                            err = E_WRITE_FAILED;
+                            break; /* from pseudo-while */
+                        }
+
+                        port_pcd_params->p_plcr_params = port_pcd_plcr_params;
                     }
 
-                    /* always run once! */
-                    break;
+                    break; /* pseudo-while: always run once! */
                 }
 
-                compat_copy_fm_port_pcd(compat_port_pcd_params, port_pcd_params, COMPAT_US_TO_K);
+                if (!err)
+                    compat_copy_fm_port_pcd(compat_port_pcd_params, port_pcd_params, COMPAT_US_TO_K);
 
                 XX_Free(compat_port_pcd_params);
             }
             else
 #endif
             {
-                /* Pseudo-while */
-                while (!(copy_fail = copy_from_user(port_pcd_params,
-                                        (ioc_fm_port_pcd_params_t *)arg,
-                                        sizeof(ioc_fm_port_pcd_params_t))))
+                if (copy_from_user(port_pcd_params,
+                            (ioc_fm_port_pcd_params_t*) arg,
+                            sizeof(ioc_fm_port_pcd_params_t)))
+                    err = E_WRITE_FAILED;
+
+                while (!err) /* pseudo-while */
                 {
-                    if (port_pcd_params->p_prs_params && !copy_fail)
+                    if (port_pcd_params->p_prs_params)
                     {
-                        if (!(copy_fail = copy_from_user(port_pcd_prs_params,
+                        if (copy_from_user(port_pcd_prs_params,
                                 port_pcd_params->p_prs_params,
-                                sizeof(ioc_fm_port_pcd_prs_params_t))))
-                            port_pcd_params->p_prs_params = port_pcd_prs_params;
-                        else
-                            break;
+                                sizeof(ioc_fm_port_pcd_prs_params_t)))
+                        {
+                            err = E_WRITE_FAILED;
+                            break; /* from pseudo-while */
+                        }
+
+                        port_pcd_params->p_prs_params = port_pcd_prs_params;
                     }
 
-                    if (port_pcd_params->p_cc_params &&  !copy_fail)
+                    if (port_pcd_params->p_cc_params)
                     {
-                        if (!(copy_fail = copy_from_user(port_pcd_cc_params,
+                        if (copy_from_user(port_pcd_cc_params,
                                 port_pcd_params->p_cc_params,
-                                sizeof(ioc_fm_port_pcd_cc_params_t))))
-                            port_pcd_params->p_cc_params = port_pcd_cc_params;
-                        else
-                            break;
+                                sizeof(ioc_fm_port_pcd_cc_params_t)))
+                        {
+                            err = E_WRITE_FAILED;
+                            break; /* from pseudo-while */
+                        }
+
+                        port_pcd_params->p_cc_params = port_pcd_cc_params;
                     }
 
-                    if (port_pcd_params->p_kg_params && !copy_fail)
+                    if (port_pcd_params->p_kg_params)
                     {
-                        if (!(copy_fail = copy_from_user(port_pcd_kg_params,
+                        if (copy_from_user(port_pcd_kg_params,
                                 port_pcd_params->p_kg_params,
-                                sizeof(ioc_fm_port_pcd_kg_params_t))))
-                            port_pcd_params->p_kg_params = port_pcd_kg_params;
-                        else
-                            break;
+                                sizeof(ioc_fm_port_pcd_kg_params_t)))
+                        {
+                            err = E_WRITE_FAILED;
+                            break; /* from pseudo-while */
+                        }
+
+                        port_pcd_params->p_kg_params = port_pcd_kg_params;
                     }
 
-                    if (port_pcd_params->p_plcr_params && !copy_fail)
+                    if (port_pcd_params->p_plcr_params)
                     {
-                        if (!(copy_fail = copy_from_user(port_pcd_plcr_params,
+                        if (copy_from_user(port_pcd_plcr_params,
                                 port_pcd_params->p_plcr_params,
-                                sizeof(ioc_fm_port_pcd_plcr_params_t))))
-                            port_pcd_params->p_plcr_params = port_pcd_plcr_params;
+                                sizeof(ioc_fm_port_pcd_plcr_params_t)))
+                        {
+                            err = E_WRITE_FAILED;
+                            break; /* from pseudo-while */
+                        }
+
+                        port_pcd_params->p_plcr_params = port_pcd_plcr_params;
                     }
 
-                    /* always run once! */
-                    break;
+                    break; /* pseudo-while: always run once! */
                 }
             }
 
-            if (!copy_fail)
+            if (!err)
                 err = FM_PORT_SetPCD(p_LnxWrpFmPortDev->h_Dev, (t_FmPortPcdParams*) port_pcd_params);
-            else
-                err = E_READ_FAILED;
 
             XX_Free(port_pcd_params);
-
-            return err;
+            break;
         }
 
         case FM_PORT_IOC_DELETE_PCD:
-            return FM_PORT_DeletePCD(p_LnxWrpFmPortDev->h_Dev);
+            err = FM_PORT_DeletePCD(p_LnxWrpFmPortDev->h_Dev);
+            break;
 
 #if defined(CONFIG_COMPAT)
         case FM_PORT_IOC_PCD_KG_MODIFY_INITIAL_SCHEME_COMPAT:
@@ -3105,7 +3179,8 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
 
                 compat_param = (ioc_compat_fm_pcd_kg_scheme_select_t *) XX_Malloc(
                         sizeof(ioc_compat_fm_pcd_kg_scheme_select_t));
-                if (!compat_param){
+                if (!compat_param)
+                {
                     XX_Free(param);
                     RETURN_ERROR(MINOR, E_NO_MEMORY, ("IOCTL FM PORT"));
                 }
@@ -3117,7 +3192,7 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                 {
                     XX_Free(compat_param);
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
 
                 compat_copy_fm_pcd_kg_scheme_select(compat_param, param, COMPAT_US_TO_K);
@@ -3131,14 +3206,14 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                                    sizeof(ioc_fm_pcd_kg_scheme_select_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_READ_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             err =  FM_PORT_PcdKgModifyInitialScheme(p_LnxWrpFmPortDev->h_Dev, (t_FmPcdKgSchemeSelect *)param);
 
             XX_Free(param);
-            return err;
+            break;
         }
 
 #if defined(CONFIG_COMPAT)
@@ -3151,11 +3226,12 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
             memset(&id, 0 , sizeof(ioc_fm_obj_t));
 
 #if defined(CONFIG_COMPAT)
-            if (compat) {
+            if (compat)
+            {
                 ioc_compat_fm_obj_t compat_id;
 
                 if (copy_from_user(&compat_id, (ioc_compat_fm_obj_t *) compat_ptr(arg), sizeof(ioc_compat_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
                 id.obj = compat_ptr(compat_id.obj);
             }
@@ -3163,10 +3239,11 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
 #endif
             {
                 if (copy_from_user(&id, (ioc_fm_obj_t *) arg, sizeof(ioc_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PORT_PcdPlcrModifyInitialProfile(p_LnxWrpFmPortDev->h_Dev, id.obj);
+            err = FM_PORT_PcdPlcrModifyInitialProfile(p_LnxWrpFmPortDev->h_Dev, id.obj);
+            break;
         }
 
 #if defined(CONFIG_COMPAT)
@@ -3191,7 +3268,10 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                 if (copy_from_user(&compat_param,
                             (ioc_compat_fm_pcd_port_schemes_params_t *) compat_ptr(arg),
                             sizeof(ioc_compat_fm_pcd_port_schemes_params_t)))
-                    break;
+                {
+                    XX_Free(param);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+                }
 
                 compat_copy_fm_pcd_kg_schemes_params(&compat_param, param, COMPAT_US_TO_K);
             }
@@ -3202,14 +3282,14 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                             sizeof(ioc_fm_pcd_port_schemes_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_WRITE_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             err = FM_PORT_PcdKgBindSchemes(p_LnxWrpFmPortDev->h_Dev, (t_FmPcdPortSchemesParams *)param);
 
             XX_Free(param);
-            return err;
+            break;
         }
 
 #if defined(CONFIG_COMPAT)
@@ -3234,7 +3314,10 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                 if (copy_from_user(&compat_param,
                             (ioc_compat_fm_pcd_port_schemes_params_t *) compat_ptr(arg),
                             sizeof(ioc_compat_fm_pcd_port_schemes_params_t)))
-                    break;
+                {
+                    XX_Free(param);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+                }
 
                 compat_copy_fm_pcd_kg_schemes_params(&compat_param, param, COMPAT_US_TO_K);
             }
@@ -3242,17 +3325,17 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
 #endif
             {
                 if (copy_from_user(param, (ioc_fm_pcd_port_schemes_params_t *) arg,
-                        sizeof(ioc_fm_pcd_port_schemes_params_t)))
+                            sizeof(ioc_fm_pcd_port_schemes_params_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_WRITE_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             err =  FM_PORT_PcdKgUnbindSchemes(p_LnxWrpFmPortDev->h_Dev, (t_FmPcdPortSchemesParams *)param);
 
             XX_Free(param);
-            return err;
+            break;
         }
 
         case FM_PORT_IOC_PCD_PRS_MODIFY_START_OFFSET:
@@ -3272,7 +3355,7 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                                    sizeof(ioc_fm_pcd_prs_start_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_WRITE_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
             else
@@ -3282,33 +3365,37 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                                    sizeof(ioc_fm_pcd_prs_start_t)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_WRITE_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
             err = FM_PORT_PcdPrsModifyStartOffset(p_LnxWrpFmPortDev->h_Dev, (t_FmPcdPrsStart *)param);
 
             XX_Free(param);
-            return err;
+            break;
         }
 
         case FM_PORT_IOC_PCD_PLCR_ALLOC_PROFILES:
         {
             uint16_t num;
             if (get_user(num, (uint16_t*) arg))
-                break;
+                RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
-            return FM_PORT_PcdPlcrAllocProfiles(p_LnxWrpFmPortDev->h_Dev, num);
+            err = FM_PORT_PcdPlcrAllocProfiles(p_LnxWrpFmPortDev->h_Dev, num);
+            break;
         }
 
         case FM_PORT_IOC_PCD_PLCR_FREE_PROFILES:
-            return FM_PORT_PcdPlcrFreeProfiles(p_LnxWrpFmPortDev->h_Dev);
+            err = FM_PORT_PcdPlcrFreeProfiles(p_LnxWrpFmPortDev->h_Dev);
+            break;
 
         case FM_PORT_IOC_DETACH_PCD:
-            return FM_PORT_DetachPCD(p_LnxWrpFmPortDev->h_Dev);
+            err = FM_PORT_DetachPCD(p_LnxWrpFmPortDev->h_Dev);
+            break;
 
         case FM_PORT_IOC_ATTACH_PCD:
-            return FM_PORT_AttachPCD(p_LnxWrpFmPortDev->h_Dev);
+            err = FM_PORT_AttachPCD(p_LnxWrpFmPortDev->h_Dev);
+            break;
 
 #if defined(CONFIG_COMPAT)
         case FM_PORT_IOC_PCD_CC_MODIFY_TREE_COMPAT:
@@ -3325,7 +3412,7 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                 ioc_compat_fm_obj_t compat_id;
 
                 if (copy_from_user(&compat_id, (ioc_compat_fm_obj_t *) compat_ptr(arg), sizeof(ioc_compat_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
 
                 compat_copy_fm_port_pcd_modify_tree(&compat_id, &id, COMPAT_US_TO_K);
             }
@@ -3333,10 +3420,11 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
 #endif
             {
                 if (copy_from_user(&id, (ioc_fm_obj_t *) arg, sizeof(ioc_fm_obj_t)))
-                    break;
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
             }
 
-            return FM_PORT_PcdCcModifyTree(p_LnxWrpFmPortDev->h_Dev, id.obj);
+            err = FM_PORT_PcdCcModifyTree(p_LnxWrpFmPortDev->h_Dev, id.obj);
+            break;
         }
 
         case FM_PORT_IOC_ADD_CONGESTION_GRPS:
@@ -3357,7 +3445,7 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                             sizeof(t_FmPortCongestionGrps)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_WRITE_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
             else
@@ -3367,7 +3455,7 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                             sizeof(t_FmPortCongestionGrps)))
                 {
                     XX_Free(param);
-                    RETURN_ERROR(MAJOR, E_WRITE_FAILED, NO_MSG);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
                 }
             }
 
@@ -3385,7 +3473,10 @@ t_Error LnxwrpFmPortIOCTL(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev, unsigned int cmd
                 cmd, _IOC_TYPE(cmd), _IOC_NR(cmd)));
     }
 
-    RETURN_ERROR(MINOR, E_INVALID_OPERATION, ("IOCTL port"));
+    if (err)
+        RETURN_ERROR(MINOR, E_INVALID_OPERATION, ("IOCTL FM PORT"));
+
+    return E_OK;
 }
 
 /*****************************************************************************/
diff --git a/include/linux/fmd/Peripherals/fm_ioctls.h b/include/linux/fmd/Peripherals/fm_ioctls.h
index 8480222..f0904a1 100644
--- a/include/linux/fmd/Peripherals/fm_ioctls.h
+++ b/include/linux/fmd/Peripherals/fm_ioctls.h
@@ -59,9 +59,9 @@
 #define DEV_FM_TX_PORTS_MINOR_BASE  (DEV_FM_RX_PORTS_MINOR_BASE + FM_MAX_NUM_OF_RX_PORTS)   /*/dev/fmx-port-txy */
 #define DEV_FM_MAX_MINORS           (DEV_FM_TX_PORTS_MINOR_BASE + FM_MAX_NUM_OF_TX_PORTS)
 
-#define FM_IOC_NUM(n)       n
+#define FM_IOC_NUM(n)       (n)
 #define FM_PCD_IOC_NUM(n)   (n+20)
-#define FM_PORT_IOC_NUM(n)  (n+50)
+#define FM_PORT_IOC_NUM(n)  (n+70)
 /* @} */
 
 #define IOC_FM_MAX_NUM_OF_PORTS         64
-- 
1.7.9.7

