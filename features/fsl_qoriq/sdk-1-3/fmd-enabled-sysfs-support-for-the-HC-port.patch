From b8c24833bf8fde71b88ef05ee46968306c1dbc61 Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Fri, 12 Oct 2012 10:41:35 +0300
Subject: [PATCH 090/162] fmd: enabled sysfs support for the HC port

The HC port sysfs entry was unusable due to a missing device handle.

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.3-SOURCE-20121114-yocto.iso tarball.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../freescale/dpa/NetCommSw/Peripherals/FM/HC/hc.c |    7 +++++++
 .../dpa/NetCommSw/Peripherals/FM/Pcd/fm_pcd.c      |    7 +++++++
 .../dpa/NetCommSw/Peripherals/FM/inc/fm_hc.h       |    1 +
 .../dpa/NetCommSw/inc/Peripherals/fm_pcd_ext.h     |    2 ++
 .../dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c     |   10 ++++------
 5 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/HC/hc.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/HC/hc.c
index 58d4075..4897dce 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/HC/hc.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/HC/hc.c
@@ -224,6 +224,13 @@ t_Handle FmHcConfigAndInit(t_FmHcParams *p_FmHcParams)
     return (t_Handle)p_FmHc;
 }
 
+t_Handle FmGcGetHcPortDevH(t_Handle h_FmHc)
+{
+    t_FmHc  *p_FmHc = (t_FmHc *)h_FmHc;
+
+    return (p_FmHc) ? p_FmHc->h_HcPortDev : NULL;
+}
+
 void FmHcFree(t_Handle h_FmHc)
 {
     t_FmHc  *p_FmHc = (t_FmHc*)h_FmHc;
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/Pcd/fm_pcd.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/Pcd/fm_pcd.c
index 8568fac..4fa2a03 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/Pcd/fm_pcd.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/Pcd/fm_pcd.c
@@ -936,6 +936,13 @@ t_Handle FM_PCD_Config(t_FmPcdParams *p_FmPcdParams)
     return p_FmPcd;
 }
 
+t_Handle FM_PCD_GetHcDevH(t_Handle h_FmPcd)
+{
+    t_FmPcd        *p_FmPcd = (t_FmPcd *) h_FmPcd;
+
+    return (p_FmPcd) ? FmGcGetHcPortDevH(p_FmPcd->h_Hc) : NULL;
+}
+
 t_Error FM_PCD_Init(t_Handle h_FmPcd)
 {
     t_FmPcd         *p_FmPcd = (t_FmPcd*)h_FmPcd;
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/inc/fm_hc.h b/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/inc/fm_hc.h
index 2220a1b..eb1a183 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/inc/fm_hc.h
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/Peripherals/FM/inc/fm_hc.h
@@ -49,6 +49,7 @@ typedef struct t_FmHcParams {
 
 
 t_Handle    FmHcConfigAndInit(t_FmHcParams *p_FmHcParams);
+t_Handle    FmGcGetHcPortDevH(t_Handle h_FmHc);
 void        FmHcFree(t_Handle h_FmHc);
 t_Error     FmHcSetFramesDataMemory(t_Handle h_FmHc,
                                     uint8_t  memId);
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/inc/Peripherals/fm_pcd_ext.h b/drivers/net/ethernet/freescale/dpa/NetCommSw/inc/Peripherals/fm_pcd_ext.h
index 7c665ba..9c9650a 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/inc/Peripherals/fm_pcd_ext.h
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/inc/Peripherals/fm_pcd_ext.h
@@ -271,6 +271,8 @@ typedef struct t_FmPcdParams {
 *//***************************************************************************/
 t_Handle FM_PCD_Config(t_FmPcdParams *p_FmPcdParams);
 
+t_Handle FM_PCD_GetHcDevH(t_Handle h_FmPcd);
+
 /**************************************************************************//**
  @Function      FM_PCD_Init
 
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
index 0924f10..d2b7618 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
@@ -1071,12 +1071,9 @@ static int /*__devinit*/ fm_port_probe(struct platform_device *of_dev)
 
 	dev_set_drvdata(dev, p_LnxWrpFmPortDev);
 
-	if ((p_LnxWrpFmPortDev->settings.param.portType ==
-	     e_FM_PORT_TYPE_OH_HOST_COMMAND)
-	    &&
-	    (InitFmPcdDev((t_LnxWrpFmDev *) p_LnxWrpFmPortDev->h_LnxWrpFmDev)
-	     != E_OK))
-		return -EIO;
+	if (p_LnxWrpFmPortDev->settings.param.portType ==
+		e_FM_PORT_TYPE_OH_HOST_COMMAND)
+		InitFmPcdDev((t_LnxWrpFmDev *) p_LnxWrpFmPortDev->h_LnxWrpFmDev);
 
 	p_LnxWrpFmDev = (t_LnxWrpFmDev *) p_LnxWrpFmPortDev->h_LnxWrpFmDev;
 
@@ -1113,6 +1110,7 @@ static int /*__devinit*/ fm_port_probe(struct platform_device *of_dev)
 		       p_LnxWrpFmDev->name, p_LnxWrpFmPortDev->id);
 		p_LnxWrpFmPortDev->minor =
 			p_LnxWrpFmPortDev->id + DEV_FM_OH_PORTS_MINOR_BASE;
+		p_LnxWrpFmPortDev->h_Dev = FM_PCD_GetHcDevH(p_LnxWrpFmDev->h_PcdDev);
 	} else if (p_LnxWrpFmPortDev->settings.param.portType ==
 		 e_FM_PORT_TYPE_OH_OFFLINE_PARSING) {
 		Sprint(p_LnxWrpFmPortDev->name, "%s-port-oh%d",
-- 
1.7.9.7

