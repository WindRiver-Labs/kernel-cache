From dd7b76fd35e7c4ab916f7a4e7f6ef82ced42b43c Mon Sep 17 00:00:00 2001
From: Mihai Caraman <mihai.caraman@freescale.com>
Date: Tue, 23 Apr 2013 22:51:26 +0300
Subject: [PATCH] KVM: PPC: Book3E HV: Handle lwepx faults

commit dd7b76fd35e7c4ab916f7a4e7f6ef82ced42b43c git://git.freescale.com/ppc/sdk/linux.git

It's time to address the FIXME comment about lwepx faults. The faults happen
when the external context is not longer available in TLBs. On HW mutithreaded
cores with shared TLBs guest entries can be evicted by secundary threads
right after guest exit. Just handle lwepx faults as a regular guest tlb miss
interrupts.

Signed-off-by: Mihai Caraman <mihai.caraman@freescale.com>
Change-Id: I56cbd2498d8fac7bcf9e7b87f1e9b27a504e73f8
Reviewed-on: http://git.am.freescale.net:8181/1541
Reviewed-by: Wood Scott-B07421 <scottwood@freescale.com>
Reviewed-by: Craciun Diana Madalina-STFD002 <Diana.Craciun@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Signed-off-by: Vu Tran <vu.tran@windriver.com>

diff --git a/arch/powerpc/kvm/bookehv_interrupts.S b/arch/powerpc/kvm/bookehv_interrupts.S
index 2f5cb98..d54f0ba 100644
--- a/arch/powerpc/kvm/bookehv_interrupts.S
+++ b/arch/powerpc/kvm/bookehv_interrupts.S
@@ -121,22 +121,13 @@
 
 	.if	\flags & NEED_EMU
 	/*
-	 * This assumes you have external PID support.
-	 * To support a bookehv CPU without external PID, you'll
-	 * need to look up the TLB entry and create a temporary mapping.
+	 * Entry code uses external PID support. lwepx faults are handled
+	 * as instruction tlb miss interrupts
 	 *
-	 * FIXME: we don't currently handle if the lwepx faults.  PR-mode
-	 * booke doesn't handle it either.  Since Linux doesn't use
-	 * broadcast tlbivax anymore, the only way this should happen is
-	 * if the guest maps its memory execute-but-not-read, or if we
-	 * somehow take a TLB miss in the middle of this entry code and
-	 * evict the relevant entry.  On e500mc, all kernel lowmem is
-	 * bolted into TLB1 large page mappings, and we don't use
-	 * broadcast invalidates, so we should not take a TLB miss here.
-	 *
-	 * Later we'll need to deal with faults here.  Disallowing guest
-	 * mappings that are execute-but-not-read could be an option on
-	 * e500mc, but not on chips with an LRAT if it is used.
+	 * FIXME: we don't currently handle guest TLB entries that are
+	 * present but have the permissions set for execute-but-not-read.
+	 * Disallowing these mappings could be an option on e500mc, but
+	 * not on chips with an LRAT if it is used.
 	 */
 
 	mfspr	r3, SPRN_EPLC	/* will already have correct ELPID and EGS */
@@ -178,6 +169,7 @@
 2:
 .section .fixup, "ax"
 3:	li	r9, KVM_INST_FETCH_FAILED
+	li	r14, BOOKE_INTERRUPT_ITLB_MISS
 	b	2b
 .previous
 .section __ex_table,"a"
-- 
1.9.1

