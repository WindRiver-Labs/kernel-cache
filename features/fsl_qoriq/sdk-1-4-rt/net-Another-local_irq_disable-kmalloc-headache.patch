From 746aa2e32caf9ed7691507f93cfe33b01eef2c17 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Fri, 23 Aug 2013 13:43:23 +0800
Subject: [PATCH] net: Another local_irq_disable/kmalloc headache

commit 51bfda486c0b8155d55f8ac6c335549445913abc linux-stable-rt.git

Replace it by a local lock. Though that's pretty inefficient :(

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 net/core/skbuff.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 0219747..1ee4e5d 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -58,6 +58,7 @@
 #include <linux/scatterlist.h>
 #include <linux/errqueue.h>
 #include <linux/prefetch.h>
+#include <linux/locallock.h>
 
 #include <net/protocol.h>
 #include <net/dst.h>
@@ -299,6 +300,7 @@ struct netdev_alloc_cache {
 	unsigned int offset;
 };
 static DEFINE_PER_CPU(struct netdev_alloc_cache, netdev_alloc_cache);
+static DEFINE_LOCAL_IRQ_LOCK(netdev_alloc_lock);
 
 /**
  * netdev_alloc_frag - allocate a page fragment
@@ -313,7 +315,7 @@ void *netdev_alloc_frag(unsigned int fragsz)
 	void *data = NULL;
 	unsigned long flags;
 
-	local_irq_save(flags);
+	local_lock_irqsave(netdev_alloc_lock, flags);
 	nc = &__get_cpu_var(netdev_alloc_cache);
 	if (unlikely(!nc->page)) {
 refill:
@@ -329,7 +331,7 @@ refill:
 		nc->offset += fragsz;
 		get_page(nc->page);
 	}
-	local_irq_restore(flags);
+	local_unlock_irqrestore(netdev_alloc_lock, flags);
 	return data;
 }
 EXPORT_SYMBOL(netdev_alloc_frag);
-- 
1.7.5.4

