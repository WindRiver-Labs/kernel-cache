From dd4a404a7e3309918eaf613f1ec3999564186b05 Mon Sep 17 00:00:00 2001
From: Varun Sethi <Varun.Sethi@freescale.com>
Date: Mon, 10 Mar 2014 23:52:08 +0530
Subject: [PATCH 0327/1383] iommu/fsl : Factor out default PAACE setup code and
 enable all LIODNs.

Factor out default PAACE entry setup code and enable all LIODNs for
handling the autonomous case.

Signed-off-by: Varun Sethi <Varun.Sethi@freescale.com>
Change-Id: I31b81576e590569be614511b27d09f01cc4fcf86
Reviewed-on: http://git.am.freescale.net:8181/9615
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/iommu/fsl_pamu.c | 59 ++++++++++++++++++++++++++++++++++++++++--------
 1 file changed, 50 insertions(+), 9 deletions(-)

diff --git a/drivers/iommu/fsl_pamu.c b/drivers/iommu/fsl_pamu.c
index a34355f..1abc128 100644
--- a/drivers/iommu/fsl_pamu.c
+++ b/drivers/iommu/fsl_pamu.c
@@ -242,6 +242,22 @@ static unsigned long pamu_get_fspi_and_allocate(u32 subwin_cnt)
 	return (spaace_addr - (unsigned long)spaact) / (sizeof(struct paace));
 }
 
+/*
+ * Default PPAACE settings for an LIODN.
+ */
+static void setup_default_ppaace(struct paace *ppaace)
+{
+	pamu_init_ppaace(ppaace);
+	/* window size is 2^(WSE+1) bytes */
+	set_bf(ppaace->addr_bitfields, PPAACE_AF_WSE, 35);
+	ppaace->wbah = 0;
+	set_bf(ppaace->addr_bitfields, PPAACE_AF_WBAL, 0);
+	set_bf(ppaace->impl_attr, PAACE_IA_ATM,
+		PAACE_ATM_NO_XLATE);
+	set_bf(ppaace->addr_bitfields, PAACE_AF_AP,
+		PAACE_AP_PERMS_ALL);
+}
+
 /* Release the subwindows reserved for a particular LIODN */
 void pamu_free_subwins(int liodn)
 {
@@ -718,6 +734,28 @@ static int setup_one_pamu(unsigned long pamu_reg_base, unsigned long pamu_reg_si
 	return 0;
 }
 
+/*
+ * Primarily to Enable LIODNs which u-boot didn't update in the device tree.
+ */
+static void __init enable_remaining_liodns(void)
+{
+	int liodn;
+	struct paace *ppaace;
+
+	for (liodn = 0; liodn < PAACE_NUMBER_ENTRIES; liodn++) {
+		ppaace = pamu_get_ppaace(liodn);
+		if (!get_bf(ppaace->addr_bitfields, PAACE_AF_V)) {
+			setup_default_ppaace(ppaace);
+			/*
+			 * Ensure that all stores to the ppaace
+			 * complete first.
+			 */
+			mb();
+			pamu_enable_liodn(liodn);
+		}
+	}
+}
+
 /* Enable all device LIODNS */
 static void setup_liodns(void)
 {
@@ -737,15 +775,8 @@ static void setup_liodns(void)
 				continue;
 			}
 			ppaace = pamu_get_ppaace(liodn);
-			pamu_init_ppaace(ppaace);
-			/* window size is 2^(WSE+1) bytes */
-			set_bf(ppaace->addr_bitfields, PPAACE_AF_WSE, 35);
-			ppaace->wbah = 0;
-			set_bf(ppaace->addr_bitfields, PPAACE_AF_WBAL, 0);
-			set_bf(ppaace->impl_attr, PAACE_IA_ATM,
-			       PAACE_ATM_NO_XLATE);
-			set_bf(ppaace->addr_bitfields, PAACE_AF_AP,
-			       PAACE_AP_PERMS_ALL);
+			setup_default_ppaace(ppaace);
+
 			if (of_device_is_compatible(node, "fsl,qman-portal"))
 				setup_qbman_paace(ppaace, QMAN_PORTAL_PAACE);
 			if (of_device_is_compatible(node, "fsl,qman"))
@@ -756,6 +787,16 @@ static void setup_liodns(void)
 			pamu_enable_liodn(liodn);
 		}
 	}
+
+	/*
+	 * Currently u-boot doesn't fixup LIODNs for cases
+	 * where a frame is passed to a hardware block from
+	 * another hardware block. For example, frame can
+	 * be passed from FMAN rx port to SEC or RMAN. So,
+	 * as a work around we enable all the possible LIODN
+	 * values.
+	 */
+	enable_remaining_liodns();
 }
 
 static irqreturn_t pamu_av_isr(int irq, void *arg)
-- 
2.8.1

