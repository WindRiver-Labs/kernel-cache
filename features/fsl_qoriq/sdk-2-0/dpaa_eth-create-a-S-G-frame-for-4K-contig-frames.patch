From 6920e8ba62848d6f34f492d2c78c724bae9f8cd7 Mon Sep 17 00:00:00 2001
From: Marian-Cristian Rotariu <marian.rotariu@freescale.com>
Date: Wed, 28 Oct 2015 16:08:33 +0200
Subject: [PATCH 1110/1429] dpaa_eth: create a S/G frame for >4K contig frames

This patch creates a S/G frame when the stack creates a frame that exceeds the
4K boundary. This is necessary because of ARM platform limitation that cannot
receive >4K frames at high traffic rates.

Signed-off-by: Marian-Cristian Rotariu <marian.rotariu@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c  |    9 +++++++++
 1 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index e35130b..65c3605 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -1062,8 +1062,17 @@ int __hot dpa_tx_extended(struct sk_buff *skb, struct net_device *net_dev,
 			/* Common out-of-memory error path */
 			goto enomem;
 
+#ifdef DPAA_LS1043A_DMA_4K_ISSUE
+		if (unlikely(HAS_DMA_ISSUE(skb->data, skb->len))) {
+			err = skb_to_sg_fd(priv, skb, &fd);
+			percpu_priv->tx_frag_skbuffs++;
+		} else {
+			err = skb_to_contig_fd(priv, skb, &fd, countptr, &offset);
+		}
+#else
 		/* Finally, create a contig FD from this skb */
 		err = skb_to_contig_fd(priv, skb, &fd, countptr, &offset);
+#endif
 	}
 	if (unlikely(err < 0))
 		goto skb_to_fd_failed;
-- 
1.7.5.4

