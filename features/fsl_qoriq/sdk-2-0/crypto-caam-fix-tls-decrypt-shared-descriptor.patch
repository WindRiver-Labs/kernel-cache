From e691a0a78ff21390989f56d1547d474664aa790a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@nxp.com>
Date: Fri, 4 Mar 2016 18:33:38 +0200
Subject: [PATCH 1180/1429] crypto: caam - fix tls decrypt shared descriptor
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The update of inline append (desc_constr.h) to correctly handle
endianness has a side effect on tls decrypt shared descriptor.
Since MATH command that helps with
"Transform SEQ OUT PTR command in SEQ IN PTR command"
actually has to handle the 8-byte mask as 2 4-byte masks,
the mask needs to be generated differently depending on
device endianness.

The following replacement
s/__LITTLE_ENDIAN/CONFIG_CRYPTO_DEV_FSL_CAAM_LE
is also needed, since descriptor depends on device endianness,
not on core endianness.

These changes should have been part of the commits mentioned
by the "Fixes" tag.

Fixes: becadac8b845 ("crypto: caam - handle core endianness != caam endianness")
Fixes: 86d857240dc7 ("crypto: caam/qi - endianness fixes")
Signed-off-by: Horia GeantÄƒ <horia.geanta@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/crypto/caam/caamalg.c    |   15 ++++++++++-----
 drivers/crypto/caam/caamalg_qi.c |   15 ++++++++++-----
 2 files changed, 20 insertions(+), 10 deletions(-)

diff --git a/drivers/crypto/caam/caamalg.c b/drivers/crypto/caam/caamalg.c
index 6146e66..7162276 100644
--- a/drivers/crypto/caam/caamalg.c
+++ b/drivers/crypto/caam/caamalg.c
@@ -973,7 +973,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 	/* VSOL = payloadlen + icvlen + padlen */
 	append_math_add(desc, VARSEQOUTLEN, ZERO, REG3, 4);
 
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 	append_moveb(desc, MOVE_WAITCOMP |
 		     MOVE_SRC_MATH0 | MOVE_DEST_MATH0 | 8);
 #endif
@@ -1026,7 +1026,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 		 * SEQ OUT PTR command, Output Pointer (2 words) and
 		 * Output Length into math registers.
 		 */
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
 			    MOVE_DEST_MATH0 | (55 * 4 << MOVE_OFFSET_SHIFT) |
 			    20);
@@ -1045,7 +1045,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 				    (4 << LDST_OFFSET_SHIFT));
 		append_jump(desc, JUMP_TEST_ALL | JUMP_COND_CALM | 1);
 		/* Move the updated fields back to the Job Descriptor */
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
 			    MOVE_DEST_DESCBUF | (55 * 4 << MOVE_OFFSET_SHIFT) |
 			    24);
@@ -1065,7 +1065,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 		 * Move the SEQ OUT PTR command, Output Pointer (1 word) and
 		 * Output Length into math registers.
 		 */
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
 			    MOVE_DEST_MATH0 | (54 * 4 << MOVE_OFFSET_SHIFT) |
 			    12);
@@ -1075,8 +1075,13 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 			    12);
 #endif
 		/* Transform SEQ OUT PTR command in SEQ IN PTR command */
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
+		append_math_and_imm_u64(desc, REG0, REG0, IMM,
+			~((u64)(CMD_SEQ_IN_PTR ^ CMD_SEQ_OUT_PTR)));
+#else
 		append_math_and_imm_u64(desc, REG0, REG0, IMM,
 			~(((u64)(CMD_SEQ_IN_PTR ^ CMD_SEQ_OUT_PTR)) << 32));
+#endif
 		/* Append a JUMP command after the copied fields */
 		jumpback = CMD_JUMP | (char)-7;
 		append_load_imm_u32(desc, jumpback, LDST_CLASS_DECO | LDST_IMM |
@@ -1084,7 +1089,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 				    (4 << LDST_OFFSET_SHIFT));
 		append_jump(desc, JUMP_TEST_ALL | JUMP_COND_CALM | 1);
 		/* Move the updated fields back to the Job Descriptor */
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
 			    MOVE_DEST_DESCBUF | (54 * 4 << MOVE_OFFSET_SHIFT) |
 			    16);
diff --git a/drivers/crypto/caam/caamalg_qi.c b/drivers/crypto/caam/caamalg_qi.c
index df02e74..47f3592 100644
--- a/drivers/crypto/caam/caamalg_qi.c
+++ b/drivers/crypto/caam/caamalg_qi.c
@@ -587,7 +587,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 	/* VSOL = payloadlen + icvlen + padlen */
 	append_math_add(desc, VARSEQOUTLEN, ZERO, REG3, 4);
 
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 	append_moveb(desc, MOVE_WAITCOMP |
 		     MOVE_SRC_MATH0 | MOVE_DEST_MATH0 | 8);
 #endif
@@ -640,7 +640,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 		 * SEQ OUT PTR command, Output Pointer (2 words) and
 		 * Output Length into math registers.
 		 */
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
 			    MOVE_DEST_MATH0 | (55 * 4 << MOVE_OFFSET_SHIFT) |
 			    20);
@@ -659,7 +659,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 				    (4 << LDST_OFFSET_SHIFT));
 		append_jump(desc, JUMP_TEST_ALL | JUMP_COND_CALM | 1);
 		/* Move the updated fields back to the Job Descriptor */
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
 			    MOVE_DEST_DESCBUF | (55 * 4 << MOVE_OFFSET_SHIFT) |
 			    24);
@@ -679,7 +679,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 		 * Move the SEQ OUT PTR command, Output Pointer (1 word) and
 		 * Output Length into math registers.
 		 */
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
 			    MOVE_DEST_MATH0 | (54 * 4 << MOVE_OFFSET_SHIFT) |
 			    12);
@@ -689,8 +689,13 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 			    12);
 #endif
 		/* Transform SEQ OUT PTR command in SEQ IN PTR command */
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
+		append_math_and_imm_u64(desc, REG0, REG0, IMM,
+			~((u64)(CMD_SEQ_IN_PTR ^ CMD_SEQ_OUT_PTR)));
+#else
 		append_math_and_imm_u64(desc, REG0, REG0, IMM,
 			~(((u64)(CMD_SEQ_IN_PTR ^ CMD_SEQ_OUT_PTR)) << 32));
+#endif
 		/* Append a JUMP command after the copied fields */
 		jumpback = CMD_JUMP | (char)-7;
 		append_load_imm_u32(desc, jumpback, LDST_CLASS_DECO | LDST_IMM |
@@ -698,7 +703,7 @@ static int tls_set_sh_desc(struct crypto_aead *aead)
 				    (4 << LDST_OFFSET_SHIFT));
 		append_jump(desc, JUMP_TEST_ALL | JUMP_COND_CALM | 1);
 		/* Move the updated fields back to the Job Descriptor */
-#ifdef __LITTLE_ENDIAN
+#ifdef CONFIG_CRYPTO_DEV_FSL_CAAM_LE
 		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
 			    MOVE_DEST_DESCBUF | (54 * 4 << MOVE_OFFSET_SHIFT) |
 			    16);
-- 
1.7.5.4

