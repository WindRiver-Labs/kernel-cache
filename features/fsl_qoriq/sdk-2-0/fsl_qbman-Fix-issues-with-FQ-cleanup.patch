From e5a68079b208085426481067dc9d154bac79aba0 Mon Sep 17 00:00:00 2001
From: Roy Pledge <roy.pledge@nxp.com>
Date: Wed, 13 Apr 2016 09:39:47 -0400
Subject: [PATCH 1299/1429] fsl_qbman: Fix issues with FQ cleanup

FQ cleanup channel/workqueue calculation was broken during
endianess conversion changes.  Also add a missing FQID byte swap

Signed-off-by: Roy Pledge <roy.pledge@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/qman_low.h |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_low.h b/drivers/staging/fsl_qbman/qman_low.h
index 9b76b56..b5992b8 100644
--- a/drivers/staging/fsl_qbman/qman_low.h
+++ b/drivers/staging/fsl_qbman/qman_low.h
@@ -1224,8 +1224,8 @@ static inline int qm_shutdown_fq(struct qm_portal **portal, int portal_count,
 
 	/* Need to store these since the MCR gets reused */
 	dest_wq = be16_to_cpu(mcr->queryfq.fqd.dest_wq);
-	channel = dest_wq & 0x7;
-	wq = dest_wq>>3;
+	wq = dest_wq & 0x7;
+	channel = dest_wq>>3;
 
 	switch (state) {
 	case QM_MCR_NP_STATE_TEN_SCHED:
@@ -1345,7 +1345,7 @@ static inline int qm_shutdown_fq(struct qm_portal **portal, int portal_count,
 				/* Process the dequeues, making sure to
 				   empty the ring completely */
 				while (dqrr) {
-					if (dqrr->fqid == fqid &&
+					if (be32_to_cpu(dqrr->fqid) == fqid &&
 					    dqrr->stat & QM_DQRR_STAT_FQ_EMPTY)
 						fq_empty = 1;
 					qm_dqrr_cdc_consume_1ptr(portal[0],
-- 
1.7.5.4

