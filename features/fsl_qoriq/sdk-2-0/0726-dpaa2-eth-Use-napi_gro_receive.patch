From f3d2f1c517f29b2e34df3a7e05221b7fd9be2da9 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Tue, 14 Jul 2015 15:18:15 +0300
Subject: [PATCH 0726/1383] dpaa2-eth: Use napi_gro_receive()

Call napi_gro_receive(), effectively enabling GRO.
NOTE: We could further optimize this by looking ahead in the parse results
received from hardware and only using GRO when the L3+L4 combination is
appropriate.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c | 17 ++++++++++++-----
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h |  4 +++-
 2 files changed, 15 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index a24e8cf..15bbd82 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -234,7 +234,8 @@ static struct sk_buff *ldpaa_eth_build_frag_skb(struct ldpaa_eth_priv *priv,
 }
 
 static void ldpaa_eth_rx(struct ldpaa_eth_priv *priv,
-			 const struct dpaa_fd *fd)
+			 const struct dpaa_fd *fd,
+			 struct napi_struct *napi)
 {
 	dma_addr_t addr = ldpaa_fd_get_addr(fd);
 	uint8_t fd_format = ldpaa_fd_get_format(fd);
@@ -293,7 +294,11 @@ static void ldpaa_eth_rx(struct ldpaa_eth_priv *priv,
 	percpu_stats->rx_packets++;
 	percpu_stats->rx_bytes += skb->len;
 
-	netif_receive_skb(skb);
+	if (priv->net_dev->features & NETIF_F_GRO)
+		napi_gro_receive(napi, skb);
+	else
+		netif_receive_skb(skb);
+
 	return;
 
 err_build_skb:
@@ -303,7 +308,8 @@ err_build_skb:
 
 #ifdef CONFIG_FSL_DPAA2_ETH_USE_ERR_QUEUE
 static void ldpaa_eth_rx_err(struct ldpaa_eth_priv *priv,
-			     const struct dpaa_fd *fd)
+			     const struct dpaa_fd *fd,
+			     struct napi_struct *napi __always_unused)
 {
 	struct device *dev = priv->net_dev->dev.parent;
 	dma_addr_t addr = ldpaa_fd_get_addr(fd);
@@ -369,7 +375,7 @@ static int ldpaa_eth_store_consume(struct ldpaa_eth_channel *ch)
 		fd = ldpaa_dq_fd(dq);
 		fq = (struct ldpaa_eth_fq *)ldpaa_dq_fqd_ctx(dq);
 		fq->stats.frames++;
-		fq->consume(priv, fd);
+		fq->consume(priv, fd, &ch->napi);
 		cleaned++;
 	} while (!is_last);
 
@@ -682,7 +688,8 @@ err_alloc_headroom:
 }
 
 static void ldpaa_eth_tx_conf(struct ldpaa_eth_priv *priv,
-			      const struct dpaa_fd *fd)
+			      const struct dpaa_fd *fd,
+			      struct napi_struct *napi __always_unused)
 {
 	struct rtnl_link_stats64 *percpu_stats;
 	struct ldpaa_eth_stats *percpu_extras;
diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h
index 6598e32..1cc2ddd 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h
@@ -231,7 +231,9 @@ struct ldpaa_eth_fq {
 	struct ldpaa_eth_channel *channel;
 	enum ldpaa_eth_fq_type type;
 
-	void (*consume)(struct ldpaa_eth_priv *, const struct dpaa_fd *);
+	void (*consume)(struct ldpaa_eth_priv *,
+			const struct dpaa_fd *,
+			struct napi_struct *);
 	struct ldpaa_eth_priv *netdev_priv;	/* backpointer */
 	struct ldpaa_eth_fq_stats stats;
 };
-- 
2.8.1

