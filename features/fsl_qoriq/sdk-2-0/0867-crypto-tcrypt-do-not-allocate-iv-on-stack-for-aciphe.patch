From b58cdb8aa5d02f53e253ce9bba615de258b978ea Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@freescale.com>
Date: Tue, 3 Nov 2015 22:44:49 +0200
Subject: [PATCH 0867/1383] crypto: tcrypt - do not allocate iv on stack for
 acipher speed tests
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fix yet another "device driver maps memory from stack" DMA-API warning.

Signed-off-by: Horia GeantÄƒ <horia.geanta@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 crypto/tcrypt.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/crypto/tcrypt.c b/crypto/tcrypt.c
index 3aab8bc..5e1b49b 100644
--- a/crypto/tcrypt.c
+++ b/crypto/tcrypt.c
@@ -217,7 +217,7 @@ static u32 block_sizes[] = { 16, 64, 256, 1024, 8192, 0 };
 static u32 aead_sizes[] = { 16, 64, 256, 512, 1024, 2048, 4096, 8192, 0 };
 
 #define XBUFSIZE 8
-#define MAX_IVLEN 32
+#define MAX_IVLEN 128
 
 static int testmgr_alloc_buf(char *buf[XBUFSIZE])
 {
@@ -1093,12 +1093,16 @@ static void test_acipher_speed(const char *algo, int enc, unsigned int secs,
 	unsigned int ret, i, j, k, iv_len;
 	struct tcrypt_result tresult;
 	const char *key;
-	char iv[128];
+	char *iv;
 	struct ablkcipher_request *req;
 	struct crypto_ablkcipher *tfm;
 	const char *e;
 	u32 *b_size;
 
+	iv = kzalloc(MAX_IVLEN, GFP_KERNEL);
+	if (!iv)
+		return;
+
 	if (enc == ENCRYPT)
 		e = "encryption";
 	else
@@ -1111,7 +1115,7 @@ static void test_acipher_speed(const char *algo, int enc, unsigned int secs,
 	if (IS_ERR(tfm)) {
 		pr_err("failed to load transform for %s: %ld\n", algo,
 		       PTR_ERR(tfm));
-		return;
+		goto out_iv;
 	}
 
 	pr_info("\ntesting speed of async %s (%s) %s\n", algo,
@@ -1186,7 +1190,7 @@ static void test_acipher_speed(const char *algo, int enc, unsigned int secs,
 
 			iv_len = crypto_ablkcipher_ivsize(tfm);
 			if (iv_len)
-				memset(&iv, 0xff, iv_len);
+				memset(iv, 0xff, iv_len);
 
 			ablkcipher_request_set_crypt(req, sg, sg, *b_size, iv);
 
@@ -1212,6 +1216,8 @@ out_free_req:
 	ablkcipher_request_free(req);
 out:
 	crypto_free_ablkcipher(tfm);
+out_iv:
+	kfree(iv);
 }
 
 static void test_available(void)
-- 
2.8.1

