From f0ec3fc0765ec188c642af2a8db710d56ef78d58 Mon Sep 17 00:00:00 2001
From: Chenhui Zhao <chenhui.zhao@nxp.com>
Date: Fri, 22 Jan 2016 11:18:18 +0800
Subject: [PATCH 0239/1429] fsl/pm: provide a function to get the current
 system suspend state

Provide a pm_suspend_state function so that other part of code can get
the current system suspend state.

Signed-off-by: Wang Dongsheng <dongsheng.wang@nxp.com>
Signed-off-by: Chenhui Zhao <chenhui.zhao@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/powerpc/include/asm/fsl_pm.h      |   10 ++++++++++
 arch/powerpc/platforms/85xx/qoriq_pm.c |    9 +++++++++
 2 files changed, 19 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/include/asm/fsl_pm.h b/arch/powerpc/include/asm/fsl_pm.h
index 17940d3..dcb8949 100644
--- a/arch/powerpc/include/asm/fsl_pm.h
+++ b/arch/powerpc/include/asm/fsl_pm.h
@@ -11,6 +11,7 @@
 #ifndef __PPC_FSL_PM_H
 #define __PPC_FSL_PM_H
 #ifdef __KERNEL__
+#include <linux/suspend.h>
 
 #define E500_PM_PH10	1
 #define E500_PM_PH15	2
@@ -76,5 +77,14 @@ struct fsl_iomap {
 	void *fpga_base;
 };
 
+#ifdef CONFIG_FSL_QORIQ_PM
+suspend_state_t pm_suspend_state(void);
+#else
+static inline suspend_state_t pm_suspend_state(void)
+{
+	return PM_SUSPEND_STANDBY;
+}
+#endif
+
 #endif /* __KERNEL__ */
 #endif /* __PPC_FSL_PM_H */
diff --git a/arch/powerpc/platforms/85xx/qoriq_pm.c b/arch/powerpc/platforms/85xx/qoriq_pm.c
index f87461b..2ba1f8c 100644
--- a/arch/powerpc/platforms/85xx/qoriq_pm.c
+++ b/arch/powerpc/platforms/85xx/qoriq_pm.c
@@ -21,6 +21,7 @@
 
 static unsigned int pm_modes;
 static u32 wake_mask;
+static suspend_state_t pm_state;
 
 static int fsl_set_power_except(struct device_node *of_node)
 {
@@ -99,6 +100,8 @@ static int qoriq_suspend_enter(suspend_state_t state)
 
 static int qoriq_suspend_valid(suspend_state_t state)
 {
+	pm_state = state;
+
 	if (state == PM_SUSPEND_STANDBY && (pm_modes & FSL_PM_SLEEP))
 		return 1;
 
@@ -138,3 +141,9 @@ static int __init qoriq_suspend_init(void)
 	return 0;
 }
 arch_initcall(qoriq_suspend_init);
+
+suspend_state_t pm_suspend_state(void)
+{
+	return pm_state;
+}
+EXPORT_SYMBOL_GPL(pm_suspend_state);
-- 
1.7.5.4

