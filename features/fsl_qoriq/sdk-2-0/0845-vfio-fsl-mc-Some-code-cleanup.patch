From b3151c0b16f0e14383b2d47510d8b6e178e9eb2c Mon Sep 17 00:00:00 2001
From: Bharat Bhushan <Bharat.Bhushan@freescale.com>
Date: Thu, 2 Jul 2015 11:24:31 +0530
Subject: [PATCH 0845/1383] vfio fsl-mc: Some code cleanup

Removed some unused code

Signed-off-by: Bharat Bhushan <Bharat.Bhushan@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/vfio/fsl-mc/vfio_fsl_mc.c         | 28 +++-------------------------
 drivers/vfio/fsl-mc/vfio_fsl_mc_private.h |  2 --
 2 files changed, 3 insertions(+), 27 deletions(-)

diff --git a/drivers/vfio/fsl-mc/vfio_fsl_mc.c b/drivers/vfio/fsl-mc/vfio_fsl_mc.c
index 528c6fd..bb531d1 100644
--- a/drivers/vfio/fsl-mc/vfio_fsl_mc.c
+++ b/drivers/vfio/fsl-mc/vfio_fsl_mc.c
@@ -65,14 +65,6 @@ static bool vfio_validate_mmap_addr(struct vfio_fsl_mc_device *vdev,
 			return true;
 	}
 
-	/* Check for mc portal physical address */
-	for (idx = 0; idx < vdev->num_mc_portals; idx++) {
-		if (addr >= vdev->mc_regions[idx].start &&
-		    ((addr + size - 1) <= vdev->mc_regions[idx].end)) {
-			return true;
-		}
-	}
-
 	return false;
 }
 
@@ -85,13 +77,14 @@ static long vfio_fsl_mc_ioctl(void *device_data,
 	unsigned long minsz;
 	int ret;
 
+	if (WARN_ON(!mc_dev))
+		return -ENODEV;
+
 	switch (cmd) {
 	case VFIO_DEVICE_GET_INFO:
 	{
 		struct vfio_device_info info;
 
-		struct fsl_mc_device *mc_dev;
-
 		minsz = offsetofend(struct vfio_device_info, num_irqs);
 
 		if (copy_from_user(&info, (void __user *)arg, minsz))
@@ -100,10 +93,6 @@ static long vfio_fsl_mc_ioctl(void *device_data,
 		if (info.argsz < minsz)
 			return -EINVAL;
 
-		mc_dev = vdev->mc_dev;
-		if (!mc_dev)
-			return -ENODEV;
-
 		info.flags = VFIO_DEVICE_FLAGS_FSL_MC;
 		if (strcmp(mc_dev->obj_desc.type, "dprc") == 0)
 			info.flags |= VFIO_DEVICE_FLAGS_RESET;
@@ -115,7 +104,6 @@ static long vfio_fsl_mc_ioctl(void *device_data,
 	}
 	case VFIO_DEVICE_GET_REGION_INFO:
 	{
-		struct fsl_mc_device *mc_dev;
 		struct vfio_region_info info;
 
 		minsz = offsetofend(struct vfio_region_info, offset);
@@ -126,10 +114,6 @@ static long vfio_fsl_mc_ioctl(void *device_data,
 		if (info.argsz < minsz)
 			return -EINVAL;
 
-		mc_dev = vdev->mc_dev;
-		if (!mc_dev)
-			return -ENODEV;
-
 		info.offset = mc_dev->regions[info.index].start;
 		info.size = mc_dev->regions[info.index].end -
 				mc_dev->regions[info.index].start + 1;
@@ -152,12 +136,6 @@ static long vfio_fsl_mc_ioctl(void *device_data,
 	}
 	case VFIO_DEVICE_RESET:
 	{
-		struct fsl_mc_device *mc_dev;
-
-		mc_dev = vdev->mc_dev;
-		if (!mc_dev)
-			return -ENODEV;
-
 		if (strcmp(mc_dev->obj_desc.type, "dprc") != 0)
 			return -EINVAL;
 
diff --git a/drivers/vfio/fsl-mc/vfio_fsl_mc_private.h b/drivers/vfio/fsl-mc/vfio_fsl_mc_private.h
index 3403a6b..d630c15 100644
--- a/drivers/vfio/fsl-mc/vfio_fsl_mc_private.h
+++ b/drivers/vfio/fsl-mc/vfio_fsl_mc_private.h
@@ -16,8 +16,6 @@
 
 struct vfio_fsl_mc_device {
 	struct fsl_mc_device	*mc_dev;
-	int			num_mc_portals;
-	struct resource		*mc_regions;
 	int			refcnt;
 };
 
-- 
2.8.1

