From 88c24d4e3baf253ff55e04f326d1aec863f3477e Mon Sep 17 00:00:00 2001
From: "J. German Rivera" <German.Rivera@freescale.com>
Date: Mon, 27 Apr 2015 20:17:56 -0500
Subject: [PATCH 0488/1429] staging: fsl-mc: Use msecs_to_jiffies() instead of
 HZ

Before, we specified the timeout to wait for the completion of an
MC command in jiffies as a fraction of HZ, where HZ is defined as
the number of jiffies in 1 second. However, it is more flexible to
specify this timeout in milliseconds and convert it to jiffies
using msecs_to_jiffies().

Signed-off-by: J. German Rivera <German.Rivera@freescale.com>
Change-Id: I69e2971344a9205ddf2157676b8196ffb43e13fe
Reviewed-on: http://git.am.freescale.net:8181/35644
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-mc/bus/mc-sys.c |   10 ++++++----
 1 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/mc-sys.c b/drivers/staging/fsl-mc/bus/mc-sys.c
index 453ce9b..1af35a1 100644
--- a/drivers/staging/fsl-mc/bus/mc-sys.c
+++ b/drivers/staging/fsl-mc/bus/mc-sys.c
@@ -43,9 +43,9 @@
 #include "dpmcp.h"
 
 /**
- * Timeout in jiffies to wait for the completion of an MC command
+ * Timeout in milliseconds to wait for the completion of an MC command
  */
-#define MC_CMD_COMPLETION_TIMEOUT_JIFFIES   (HZ / 2)	/* 500 ms */
+#define MC_CMD_COMPLETION_TIMEOUT_MS	500
 
 /*
  * usleep_range() min and max values used to throttle down polling
@@ -540,6 +540,8 @@ static int mc_completion_wait(struct fsl_mc_io *mc_io, struct mc_command *cmd,
 {
 	enum mc_cmd_status status;
 	unsigned long jiffies_left;
+	unsigned long timeout_jiffies =
+		msecs_to_jiffies(MC_CMD_COMPLETION_TIMEOUT_MS);
 
 	if (WARN_ON(!mc_io->dpmcp_dev))
 		return -EINVAL;
@@ -557,7 +559,7 @@ static int mc_completion_wait(struct fsl_mc_io *mc_io, struct mc_command *cmd,
 
 		jiffies_left = wait_for_completion_timeout(
 					&mc_io->mc_command_done_completion,
-					MC_CMD_COMPLETION_TIMEOUT_JIFFIES);
+					timeout_jiffies);
 		if (jiffies_left == 0)
 			return -ETIMEDOUT;
 	}
@@ -571,7 +573,7 @@ static int mc_polling_wait(struct fsl_mc_io *mc_io, struct mc_command *cmd,
 {
 	enum mc_cmd_status status;
 	unsigned long jiffies_until_timeout =
-	    jiffies + MC_CMD_COMPLETION_TIMEOUT_JIFFIES;
+		jiffies + msecs_to_jiffies(MC_CMD_COMPLETION_TIMEOUT_MS);
 
 	for (;;) {
 		status = mc_read_response(mc_io->portal_virt_addr, cmd);
-- 
1.7.5.4

