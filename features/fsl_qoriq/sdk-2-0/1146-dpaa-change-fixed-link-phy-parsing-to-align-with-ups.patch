From 193f926382d28c8220cb419782bc55edeb0c8985 Mon Sep 17 00:00:00 2001
From: Shaohui Xie <Shaohui.Xie@nxp.com>
Date: Tue, 1 Mar 2016 22:51:36 +0800
Subject: [PATCH 1146/1383] dpaa: change fixed-link phy parsing to align with
 upstream

Since commit 3be2a49e5c08d268f8af0dd4fe89a24ea8cdc339 ("of: provide a
binding for fixed link PHYs") a new pair of functions has been
introduced which allows for dynamic address allocation of these
fixed PHY devices, we should align with upstream.

Signed-off-by: Shaohui Xie <Shaohui.Xie@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/mac.c | 31 +++++++++++++++++++--------
 drivers/net/ethernet/freescale/sdk_dpaa/mac.h |  1 +
 2 files changed, 23 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/mac.c b/drivers/net/ethernet/freescale/sdk_dpaa/mac.c
index 367b625..6ac5709 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/mac.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/mac.c
@@ -43,6 +43,8 @@
 #include <linux/of_address.h>
 #include <linux/of_platform.h>
 #include <linux/of_net.h>
+#include <linux/of_mdio.h>
+#include <linux/phy_fixed.h>
 #include <linux/device.h>
 #include <linux/phy.h>
 #include <linux/io.h>
@@ -355,18 +357,29 @@ static int __cold mac_probe(struct platform_device *_of_dev)
 
 	/* Get the rest of the PHY information */
 	mac_dev->phy_node = of_parse_phandle(mac_node, "phy-handle", 0);
-	if (mac_dev->phy_node == NULL) {
-		u32 phy_id;
+	if (!mac_dev->phy_node && of_phy_is_fixed_link(mac_node)) {
+		struct phy_device *phy;
 
-		_errno = of_property_read_u32(mac_node, "fixed-link", &phy_id);
-		if (_errno) {
-			dev_err(dev, "No PHY (or fixed link) found\n");
-			_errno = -EINVAL;
+		_errno = of_phy_register_fixed_link(mac_node);
+		if (_errno)
+			goto _return_dev_set_drvdata;
+
+		mac_dev->fixed_link = devm_kzalloc(mac_dev->dev,
+						   sizeof(*mac_dev->fixed_link),
+						   GFP_KERNEL);
+		if (!mac_dev->fixed_link)
+			goto _return_dev_set_drvdata;
+
+		mac_dev->phy_node = of_node_get(mac_node);
+		phy = of_phy_find_device(mac_dev->phy_node);
+		if (!phy)
 			goto _return_dev_set_drvdata;
-		}
 
-		sprintf(mac_dev->fixed_bus_id, PHY_ID_FMT, "fixed-0",
-			phy_id);
+		mac_dev->fixed_link->link = phy->link;
+		mac_dev->fixed_link->speed = phy->speed;
+		mac_dev->fixed_link->duplex = phy->duplex;
+		mac_dev->fixed_link->pause = phy->pause;
+		mac_dev->fixed_link->asym_pause = phy->asym_pause;
 	}
 
 	_errno = mac_dev->init(mac_dev);
diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/mac.h b/drivers/net/ethernet/freescale/sdk_dpaa/mac.h
index 16d5a0d..b5288f2 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/mac.h
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/mac.h
@@ -66,6 +66,7 @@ struct mac_device {
 	void			*fm;
 	/* List of multicast addresses */
 	struct list_head	 mc_addr_list;
+	struct fixed_phy_status	 *fixed_link;
 
 	bool autoneg_pause;
 	bool rx_pause_req;
-- 
2.8.1

