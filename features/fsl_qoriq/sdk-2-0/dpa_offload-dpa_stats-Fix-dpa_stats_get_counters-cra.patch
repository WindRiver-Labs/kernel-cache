From 214a84e5ca6ca4986cc1fde568baa46dae4837f7 Mon Sep 17 00:00:00 2001
From: Marian Chereji <marian.chereji@nxp.com>
Date: Fri, 11 Mar 2016 17:48:11 +0200
Subject: [PATCH 1198/1429] dpa_offload/dpa_stats: Fix dpa_stats_get_counters
 crash

The optimization related to async event parameters had introduced
a defect in the dpa_stats wrapper. At the point where the dpa_stats
get_counters driver function was called, incorrect parameters were
passed along which caused synchronous statistics requests to produce
kernel crashes and asynchronous statistics requests to stall.

Signed-off-by: Marian Chereji <marian.chereji@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c |   22 +++++++++++++---------
 1 files changed, 13 insertions(+), 9 deletions(-)

diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
index e42f34f..b7e6cc0 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_stats.c
@@ -1420,13 +1420,13 @@ static int do_ioctl_stats_get_counters(void *args)
 			kfree(prm.req_params.cnts_ids);
 			return ret;
 		}
-	}
 
-	/* Replace the application callback with wrapper function */
-	if (prm.async_req)
-		ret = dpa_stats_get_counters(prm.req_params, &prm.cnts_len, do_ioctl_req_done_cb);
-	else
-		ret = dpa_stats_get_counters(prm.req_params, &prm.cnts_len, NULL);
+		/* Replace the application callback with wrapper function */
+		ret = dpa_stats_get_counters(prm.req_params, &prm.cnts_len,
+							do_ioctl_req_done_cb);
+	} else
+		ret = dpa_stats_get_counters(prm.req_params, &prm.cnts_len,
+									NULL);
 
 	if (ret < 0) {
 		kfree(prm.req_params.cnts_ids);
@@ -1510,10 +1510,14 @@ static int do_ioctl_stats_compat_get_counters(void *args)
 			kfree(kprm.req_params.cnts_ids);
 			return ret;
 		}
-	}
 
-	ret = dpa_stats_get_counters(kprm.req_params,
-				     &kprm.cnts_len, do_ioctl_req_done_cb);
+		/* Replace the application callback with wrapper function */
+		ret = dpa_stats_get_counters(kprm.req_params, &kprm.cnts_len,
+							do_ioctl_req_done_cb);
+	} else
+		ret = dpa_stats_get_counters(kprm.req_params, &kprm.cnts_len,
+							NULL);
+
 	if (ret < 0) {
 		kfree(kprm.req_params.cnts_ids);
 		return ret;
-- 
1.7.5.4

