From 4db03b47f50ba367eac3923c09eb9ef43b892ef6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@freescale.com>
Date: Mon, 14 Dec 2015 15:28:05 +0200
Subject: [PATCH 0883/1383] crypto: dpaa2-caam - print error codes in failure
 messages
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

If available, provide the error code when an operation fails.

Signed-off-by: Horia GeantÄƒ <horia.geanta@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/crypto/dpaa2-caam/dpaa2-caam.c | 21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

diff --git a/drivers/crypto/dpaa2-caam/dpaa2-caam.c b/drivers/crypto/dpaa2-caam/dpaa2-caam.c
index cbb1d7e..a292dbb 100644
--- a/drivers/crypto/dpaa2-caam/dpaa2-caam.c
+++ b/drivers/crypto/dpaa2-caam/dpaa2-caam.c
@@ -4985,7 +4985,8 @@ static int dpaa2_dpseci_poll(struct napi_struct *napi, int budget)
 		napi_complete_done(napi, cleaned);
 		err = dpaa2_io_service_rearm(NULL, &ppriv->nctx);
 		if (unlikely(err))
-			dev_err(priv->dev, "Notification rearm failed\n");
+			dev_err(priv->dev, "Notification rearm failed: %d\n",
+				err);
 
 	return cleaned;
 }
@@ -5006,7 +5007,7 @@ static int __cold dpaa2_dpseci_setup(struct fsl_mc_device *ls_dev)
 	/* Get a handle for the DPSECI this interface is associate with */
 	err = dpseci_open(priv->mc_io, 0, priv->dpsec_id, &ls_dev->mc_handle);
 	if (err) {
-		dev_err(dev, "dpsec_open() failed\n");
+		dev_err(dev, "dpsec_open() failed: %d\n", err);
 		goto err_open;
 	}
 
@@ -5209,8 +5210,8 @@ static int dpaa2_caam_probe(struct fsl_mc_device *dpseci_dev)
 
 		err = crypto_register_alg(&t_alg->crypto_alg);
 		if (err) {
-			dev_warn(dev, "%s alg registration failed\n",
-				 t_alg->crypto_alg.cra_driver_name);
+			dev_warn(dev, "%s alg registration failed: %d\n",
+				 t_alg->crypto_alg.cra_driver_name, err);
 			kfree(t_alg);
 		} else {
 			list_add_tail(&t_alg->entry, &alg_list);
@@ -5235,8 +5236,9 @@ static int dpaa2_caam_probe(struct fsl_mc_device *dpseci_dev)
 
 		err = crypto_register_ahash(&t_hash_alg->ahash_alg);
 		if (err) {
-			dev_warn(dev, "%s alg registration failed\n",
-				 t_hash_alg->ahash_alg.halg.base.cra_driver_name);
+			dev_warn(dev, "%s alg registration failed: %d\n",
+				 t_hash_alg->ahash_alg.halg.base.cra_driver_name,
+				 err);
 			kfree(t_hash_alg);
 		} else {
 			list_add_tail(&t_hash_alg->entry, &hash_list);
@@ -5253,8 +5255,9 @@ static int dpaa2_caam_probe(struct fsl_mc_device *dpseci_dev)
 
 		err = crypto_register_ahash(&t_hash_alg->ahash_alg);
 		if (err) {
-			dev_warn(dev, "%s alg registration failed\n",
-				 t_hash_alg->ahash_alg.halg.base.cra_driver_name);
+			dev_warn(dev, "%s alg registration failed: %d\n",
+				 t_hash_alg->ahash_alg.halg.base.cra_driver_name,
+				 err);
 			kfree(t_hash_alg);
 		} else {
 			list_add_tail(&t_hash_alg->entry, &hash_list);
@@ -5357,7 +5360,7 @@ int dpaa2_caam_enqueue(struct device *dev, struct caam_request *req)
 	preempt_enable();
 
 	if (unlikely(err < 0)) {
-		dev_err(dev, "Error enqueuing frame\n");
+		dev_err(dev, "Error enqueuing frame: %d\n", err);
 		goto err_out;
 	}
 
-- 
2.8.1

