From b32fcbee20a6479f3da49d01343e56ea303fa0b8 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Thu, 9 Jul 2015 11:48:20 +0300
Subject: [PATCH 0722/1429] dpaa2-eth: Cleanup debugfs statistics

Several minor changes to statistics reporting:
* Fix print alignment of statistics counters
* Fix a naming ambiguity in the cpu_stats debugfs ops
* Add Rx/Tx error counters; these were already used, but not
reported in the per-CPU stats

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c |   41 +++++++++++--------
 1 files changed, 24 insertions(+), 17 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c
index e85d28b..9683aa5 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c
@@ -41,46 +41,50 @@
 
 static struct dentry *ldpaa_dbg_root;
 
-static int ldpaa_dbg_stats_show(struct seq_file *file, void *offset)
+static int ldpaa_dbg_cpu_show(struct seq_file *file, void *offset)
 {
 	struct ldpaa_eth_priv *priv = (struct ldpaa_eth_priv *)file->private;
 	struct rtnl_link_stats64 *stats;
 	struct ldpaa_eth_stats *extras;
 	int i;
 
-	seq_printf(file, "\nPer-CPU stats for %s\n", priv->net_dev->name);
-	seq_puts(file, "CPU\t\tRX\t\tTx\tTx conf\t\tTx SG\t\tRx SG\t\tTx busy\n");
+	seq_printf(file, "Per-CPU stats for %s\n", priv->net_dev->name);
+	seq_printf(file, "%s%16s%16s%16s%16s%16s%16s%16s%16s\n",
+		   "CPU", "Rx", "Rx Err", "Rx SG", "Tx", "Tx Err", "Tx conf",
+		   "Tx SG", "Enq busy");
 
 	for_each_online_cpu(i) {
 		stats = per_cpu_ptr(priv->percpu_stats, i);
 		extras = per_cpu_ptr(priv->percpu_extras, i);
-		seq_printf(file, "%d%16llu%16llu%16llu%16llu%16llu%16llu\n",
+		seq_printf(file, "%3d%16llu%16llu%16llu%16llu%16llu%16llu%16llu%16llu\n",
 			   i,
 			   stats->rx_packets,
+			   stats->rx_errors,
+			   extras->rx_sg_frames,
 			   stats->tx_packets,
+			   stats->tx_errors,
 			   extras->tx_conf_frames,
 			   extras->tx_sg_frames,
-			   extras->rx_sg_frames,
 			   extras->tx_portal_busy);
 	}
 
 	return 0;
 }
 
-static int ldpaa_dbg_stats_open(struct inode *inode, struct file *file)
+static int ldpaa_dbg_cpu_open(struct inode *inode, struct file *file)
 {
 	int err;
 	struct ldpaa_eth_priv *priv = (struct ldpaa_eth_priv *)inode->i_private;
 
-	err = single_open(file, ldpaa_dbg_stats_show, priv);
+	err = single_open(file, ldpaa_dbg_cpu_show, priv);
 	if (unlikely(err < 0))
 		netdev_err(priv->net_dev, "single_open() failed\n");
 
 	return err;
 }
 
-static const struct file_operations ldpaa_dbg_stats_ops = {
-	.open = ldpaa_dbg_stats_open,
+static const struct file_operations ldpaa_dbg_cpu_ops = {
+	.open = ldpaa_dbg_cpu_open,
 	.read = seq_read,
 	.llseek = seq_lseek,
 	.release = single_release,
@@ -93,8 +97,9 @@ static int ldpaa_dbg_fqs_show(struct seq_file *file, void *offset)
 	uint32_t fcnt, bcnt;
 	int i, err;
 
-	seq_printf(file, "\nFQ stats for %s:\n", priv->net_dev->name);
-	seq_puts(file, "VFQID\tType\t\tCPU\tFrames\t\tPending frames\n");
+	seq_printf(file, "FQ stats for %s:\n", priv->net_dev->name);
+	seq_printf(file, "%s%16s%16s%16s%16s\n",
+		   "VFQID", "CPU", "Type", "Frames", "Pending frames");
 
 	for (i = 0; i <  priv->num_fqs; i++) {
 		fq = &priv->fq[i];
@@ -102,10 +107,10 @@ static int ldpaa_dbg_fqs_show(struct seq_file *file, void *offset)
 		if (unlikely(err))
 			fcnt = 0;
 
-		seq_printf(file, "%d\t%s\t\t%d%16llu%16u\n",
+		seq_printf(file, "%5d%16d%16s%16llu%16u\n",
 			   fq->fqid,
-			   fq->type == LDPAA_RX_FQ ? "Rx" : "Tx conf",
 			   fq->target_cpu,
+			   fq->type == LDPAA_RX_FQ ? "Rx" : "Tx conf",
 			   fq->stats.frames,
 			   fcnt);
 	}
@@ -138,12 +143,14 @@ static int ldpaa_dbg_ch_show(struct seq_file *file, void *offset)
 	struct ldpaa_eth_channel *ch;
 	int i;
 
-	seq_printf(file, "\nChannel stats for %s:\n", priv->net_dev->name);
-	seq_puts(file, "CHID\tCPU\tDeq busy\tFrames\t\tCDANs\t\tAvg frm/CDAN\n");
+	seq_printf(file, "Channel stats for %s:\n", priv->net_dev->name);
+	seq_printf(file, "%s%16s%16s%16s%16s%16s\n",
+		   "CHID", "CPU", "Deq busy", "Frames", "CDANs",
+		   "Avg frm/CDAN");
 
 	for_each_cpu(i, &priv->dpio_cpumask) {
 		ch = priv->channel[i];
-		seq_printf(file, "%d\t%d%16llu%16llu%16llu%16llu\n",
+		seq_printf(file, "%4d%16d%16llu%16llu%16llu%16llu\n",
 			   ch->ch_id,
 			   i,
 			   ch->stats.dequeue_portal_busy,
@@ -226,7 +233,7 @@ void ldpaa_dbg_add(struct ldpaa_eth_priv *priv)
 	/* per-cpu stats file */
 	priv->dbg.cpu_stats = debugfs_create_file("cpu_stats", S_IRUGO,
 						  priv->dbg.dir, priv,
-						  &ldpaa_dbg_stats_ops);
+						  &ldpaa_dbg_cpu_ops);
 	if (unlikely(!priv->dbg.cpu_stats)) {
 		netdev_err(priv->net_dev, "debugfs_create_file() failed\n");
 		goto err_cpu_stats;
-- 
1.7.5.4

