From f18a7f70ba6813c68c39deb14f20b2be0bf01425 Mon Sep 17 00:00:00 2001
From: Roy Pledge <roy.pledge@nxp.com>
Date: Thu, 28 Apr 2016 16:37:55 -0400
Subject: [PATCH 1329/1429] fsl_qbman: Add prototypes for CEETM debug
 functions

Add protoypes and export CEETM debug routines.  This can be called
by user code to help diagnose CEETM issues

Signed-off-by: Roy Pledge <roy.pledge@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c |   11 +++++++----
 include/linux/fsl_qman.h              |   31 +++++++++++++++++++++++++++++++
 2 files changed, 38 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 039ba93..1a4cb32 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -3031,8 +3031,8 @@ static int qman_ceetm_configure_lfqmt(struct qm_mcc_ceetm_lfqmt_config *opts)
 	return 0;
 }
 
-static int qman_ceetm_query_lfqmt(int lfqid,
-			struct qm_mcr_ceetm_lfqmt_query *lfqmt_query)
+int qman_ceetm_query_lfqmt(int lfqid,
+			   struct qm_mcr_ceetm_lfqmt_query *lfqmt_query)
 {
 	struct qm_mc_command *mcc;
 	struct qm_mc_result *mcr;
@@ -3061,6 +3061,7 @@ static int qman_ceetm_query_lfqmt(int lfqid,
 	}
 	return 0;
 }
+EXPORT_SYMBOL(qman_ceetm_query_lfqmt);
 
 static int qman_ceetm_configure_cq(struct qm_mcc_ceetm_cq_config *opts)
 {
@@ -3459,8 +3460,9 @@ static int qman_ceetm_query_statistics(u16 cid,
 	return 0;
 }
 
-static int qman_ceetm_write_statistics(u16 cid, enum qm_dc_portal dcp_idx,
-			u16 command_type, u64 frame_count, u64 byte_count)
+int qman_ceetm_query_write_statistics(u16 cid, enum qm_dc_portal dcp_idx,
+				      u16 command_type, u64 frame_count,
+				      u64 byte_count)
 {
 	struct qm_mc_command *mcc;
 	struct qm_mc_result *mcr;
@@ -3494,6 +3496,7 @@ static int qman_ceetm_write_statistics(u16 cid, enum qm_dc_portal dcp_idx,
 	}
 	return 0;
 }
+EXPORT_SYMBOL(qman_ceetm_query_write_statistics);
 
 int qman_ceetm_bps2tokenrate(u64 bps, struct qm_ceetm_rate *token_rate,
 							int rounding)
diff --git a/include/linux/fsl_qman.h b/include/linux/fsl_qman.h
index 3583cbe..08e81e8 100644
--- a/include/linux/fsl_qman.h
+++ b/include/linux/fsl_qman.h
@@ -3790,6 +3790,37 @@ int qman_ceetm_ccg_get_reject_statistics(struct qm_ceetm_ccg *ccg, u32 flags,
 					u64 *frame_count, u64 *byte_count);
 
 /**
+ * qman_ceetm_query_lfqmt - Query the logical frame queue mapping table
+ * @lfqid: Logical Frame Queue ID
+ * @lfqmt_query: Results of the query command
+ *
+ * Returns zero for success or -EIO if the query command returns error.
+ *
+ */
+int qman_ceetm_query_lfqmt(int lfqid,
+			   struct qm_mcr_ceetm_lfqmt_query *lfqmt_query);
+
+/**
+ * qman_ceetm_query_write_statistics - Query (and optionally write) statistics
+ * @cid: Target ID (CQID or CCGRID)
+ * @dcp_idx: CEETM portal ID
+ * @command_type: One of the following:
+ *   0 = Query dequeue statistics. CID carries the CQID to be queried.
+ *   1 = Query and clear dequeue statistics. CID carries the CQID to be queried
+ *   2 = Write dequeue statistics. CID carries the CQID to be written.
+ *   3 = Query reject statistics. CID carries the CCGRID to be queried.
+ *   4 = Query and clear reject statistics. CID carries the CCGRID to be queried
+ *   5 = Write reject statistics. CID carries the CCGRID to be written
+ * @frame_count: Frame count value to be written if this is a write command
+ * @byte_count: Bytes count value to be written if this is a write command
+ *
+ * Returns zero for success or -EIO if the query command returns error.
+ */
+int qman_ceetm_query_write_statistics(u16 cid, enum qm_dc_portal dcp_idx,
+				      u16 command_type, u64 frame_count,
+				      u64 byte_count);
+
+/**
  * qman_set_wpm - Set waterfall power management
  *
  * @wpm_enable: boolean, 1 = enable wpm, 0 = disable wpm.
-- 
1.7.5.4

