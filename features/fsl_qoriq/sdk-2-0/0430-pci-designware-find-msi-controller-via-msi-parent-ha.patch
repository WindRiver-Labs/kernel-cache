From 8a3c2352d4b804ec30b9eae188aa94c655af99a8 Mon Sep 17 00:00:00 2001
From: Minghuan Lian <Minghuan.Lian@freescale.com>
Date: Fri, 3 Jul 2015 14:57:08 +0800
Subject: [PATCH 0430/1383] pci/designware: find msi controller via msi-parent
 handler

If pci dts node contains "msi-parent" handler, the driver will find
corresponding msi controller and register it to pci bus.

Signed-off-by: Minghuan Lian <Minghuan.Lian@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/pci/host/pcie-designware-base.c | 17 +++++++++++++++++
 drivers/pci/host/pcie-designware-base.h |  1 +
 2 files changed, 18 insertions(+)

diff --git a/drivers/pci/host/pcie-designware-base.c b/drivers/pci/host/pcie-designware-base.c
index f661151..923d732 100644
--- a/drivers/pci/host/pcie-designware-base.c
+++ b/drivers/pci/host/pcie-designware-base.c
@@ -8,6 +8,7 @@
 
 #include <linux/kernel.h>
 #include <linux/module.h>
+#include <linux/of.h>
 #include <linux/of_pci.h>
 #include <linux/pci.h>
 #include <linux/pci_regs.h>
@@ -237,6 +238,18 @@ static int dw_pcie_atu_init(struct dw_pcie_port *pp,
 	return 0;
 }
 
+static void dw_pcie_msi_init(struct dw_pcie_port *pp)
+{
+	struct device_node *msi_node;
+
+	if (pp->msi_chip)
+		return;
+
+	msi_node = of_parse_phandle(pp->dev->of_node, "msi-parent", 0);
+	if (msi_node)
+		pp->msi_chip = of_pci_find_msi_chip_by_node(msi_node);
+}
+
 int dw_pcie_port_init(struct dw_pcie_port *pp)
 {
 	struct device_node *dn = pp->dev->of_node;
@@ -257,6 +270,8 @@ int dw_pcie_port_init(struct dw_pcie_port *pp)
 	if (ret)
 		return ret;
 
+	dw_pcie_msi_init(pp);
+
 	if (!pp->pci_ops)
 		pp->pci_ops = &dw_pcie_ops;
 
@@ -270,6 +285,8 @@ int dw_pcie_port_init(struct dw_pcie_port *pp)
 	if (!bus)
 		return -ENOMEM;
 
+	bus->msi = pp->msi_chip;
+
 	pci_scan_child_bus(bus);
 	pci_assign_unassigned_bus_resources(bus);
 	pci_bus_add_devices(bus);
diff --git a/drivers/pci/host/pcie-designware-base.h b/drivers/pci/host/pcie-designware-base.h
index 84d65d1..98b62d6 100644
--- a/drivers/pci/host/pcie-designware-base.h
+++ b/drivers/pci/host/pcie-designware-base.h
@@ -53,6 +53,7 @@ struct dw_pcie_port {
 	u32			atu_num;
 	struct dw_host_ops	*dw_ops;
 	struct pci_ops		*pci_ops;
+	struct msi_controller	*msi_chip;
 };
 
 void dw_pcie_dbi_write(struct dw_pcie_port *pp, u32 value, u32 offset);
-- 
2.8.1

