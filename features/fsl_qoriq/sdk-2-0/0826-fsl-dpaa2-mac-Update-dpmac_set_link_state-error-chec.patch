From 722bf367d1442ab8e4cebdb8f274b5697145704b Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@nxp.com>
Date: Mon, 4 Jan 2016 12:31:57 +0200
Subject: [PATCH 0826/1383] fsl-dpaa2: mac: Update dpmac_set_link_state() error
 checking

As of 0.8.1 Flibs, dpmac_set_link_state() no longer returns what we'd
consider spurious errors. This allows for cleaner error checking on
DPMAC-side.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/mac/mac.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/mac/mac.c b/drivers/staging/fsl-dpaa2/mac/mac.c
index 8e7d4ee..942c68d 100644
--- a/drivers/staging/fsl-dpaa2/mac/mac.c
+++ b/drivers/staging/fsl-dpaa2/mac/mac.c
@@ -362,13 +362,10 @@ static void ppx_link_changed(struct net_device *netdev)
 
 	/* We must call into the MC firmware at all times, because we don't know
 	 * when and whether a potential DPNI may have read the link state.
-	 *
-	 * We intentionally ignore the error here as MC will return an error
-	 * if peer L2 interface (like a DPNI) is down at this time.
 	 */
 	err = dpmac_set_link_state(priv->mc_dev->mc_io, 0,
 				   priv->mc_dev->mc_handle, &state);
-	if (err && err != -EACCES && err != -ENAVAIL)
+	if (unlikely(err))
 		dev_err(&priv->mc_dev->dev, "dpmac_set_link_state: %d\n", err);
 }
 
-- 
2.8.1

