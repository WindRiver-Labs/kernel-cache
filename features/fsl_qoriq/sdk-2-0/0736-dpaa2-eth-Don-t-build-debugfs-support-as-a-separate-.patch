From dd6590edbaee9e0f142e0c1b93f4bef9b2cf05c0 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Tue, 4 Aug 2015 15:40:49 +0300
Subject: [PATCH 0736/1383] dpaa2-eth: Don't build debugfs support as a
 separate module

Instead have module init and exit functions declared explicitly for
the Ethernet driver and initialize/destroy the debugfs directory there.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/Makefile        |  2 +-
 .../staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c | 11 +++-----
 .../staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.h |  2 ++
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c     | 30 +++++++++++++++++++++-
 4 files changed, 35 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/Makefile b/drivers/staging/fsl-dpaa2/ethernet/Makefile
index 88b5af8..74bff15 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/Makefile
+++ b/drivers/staging/fsl-dpaa2/ethernet/Makefile
@@ -8,10 +8,10 @@
 
 ccflags-y += -DVERSION=\"\"
 
-obj-$(CONFIG_FSL_DPAA2_ETH_DEBUGFS) += dpaa2-eth-debugfs.o
 obj-$(CONFIG_FSL_DPAA2_ETH) += fsl-dpaa2-eth.o
 
 fsl-dpaa2-eth-objs    := dpaa2-eth.o dpaa2-ethtool.o dpni.o
+fsl-dpaa2-eth-${CONFIG_FSL_DPAA2_ETH_DEBUGFS} += dpaa2-eth-debugfs.o
 
 #Needed by the tracing framework
 CFLAGS_dpaa2-eth.o := -I$(src)
diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c
index 5d5fba1..693b50c 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.c
@@ -301,24 +301,19 @@ void ldpaa_dbg_remove(struct ldpaa_eth_priv *priv)
 	debugfs_remove(priv->dbg.dir);
 }
 
-static int __init ldpaa_eth_dbg_init(void)
+void ldpaa_eth_dbg_init(void)
 {
 	ldpaa_dbg_root = debugfs_create_dir(LDPAA_ETH_DBG_ROOT, NULL);
 	if (unlikely(!ldpaa_dbg_root)) {
 		pr_err("DPAA2-ETH: debugfs create failed\n");
-		return -ENOMEM;
+		return;
 	}
 
 	pr_info("DPAA2-ETH: debugfs created\n");
-	return 0;
 }
 
-static void __exit ldpaa_eth_dbg_exit(void)
+void __exit ldpaa_eth_dbg_exit(void)
 {
 	debugfs_remove(ldpaa_dbg_root);
 }
 
-module_init(ldpaa_eth_dbg_init);
-module_exit(ldpaa_eth_dbg_exit);
-MODULE_LICENSE("Dual BSD/GPL");
-
diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.h b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.h
index 4dd8f8b..d70d782 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.h
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-debugfs.h
@@ -45,6 +45,8 @@ struct ldpaa_debugfs {
 	struct dentry *reset_stats;
 };
 
+void ldpaa_eth_dbg_init(void);
+void ldpaa_eth_dbg_exit(void);
 void ldpaa_dbg_add(struct ldpaa_eth_priv *priv);
 void ldpaa_dbg_remove(struct ldpaa_eth_priv *priv);
 
diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 8050d18..28b249b 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -2574,4 +2574,32 @@ static struct fsl_mc_driver ldpaa_eth_driver = {
 	.match_id_table = ldpaa_eth_match_id_table
 };
 
-module_fsl_mc_driver(ldpaa_eth_driver);
+static int __init ldpaa_eth_driver_init(void)
+{
+	int err;
+
+#ifdef CONFIG_FSL_DPAA2_ETH_DEBUGFS
+	ldpaa_eth_dbg_init();
+#endif
+
+	err = fsl_mc_driver_register(&ldpaa_eth_driver);
+	if (err) {
+#ifdef CONFIG_FSL_DPAA2_ETH_DEBUGFS
+		ldpaa_eth_dbg_exit();
+#endif
+		return err;
+	}
+
+	return 0;
+}
+
+static void __exit ldpaa_eth_driver_exit(void)
+{
+	fsl_mc_driver_unregister(&ldpaa_eth_driver);
+#ifdef CONFIG_FSL_DPAA2_ETH_DEBUGFS
+	ldpaa_eth_dbg_exit();
+#endif
+}
+
+module_init(ldpaa_eth_driver_init);
+module_exit(ldpaa_eth_driver_exit);
-- 
2.8.1

