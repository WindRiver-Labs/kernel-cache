From f85de1799fce1cd1baf4e598d4cb48fe41ae805b Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Mon, 14 Dec 2015 14:50:07 +0200
Subject: [PATCH 0771/1429] fsl-dpaa2: eth: Amend buffer refill comment

A change request has been pending for placing an upper bound to the
buffer replenish logic on Rx. However, short of practical alternatives,
resort to amending the relevant comment and rely on ksoftirqd to
guarantee interactivity.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 8e8eada..7d108b4 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -1648,8 +1648,13 @@ static int dpaa2_bp_add_7(struct dpaa2_eth_priv *priv, uint16_t bpid)
 
 release_bufs:
 	/* In case the portal is busy, retry until successful.
-	 * This function is guaranteed to succeed in a reasonable amount
-	 * of time.
+	 * The buffer release function would only fail if the QBMan portal
+	 * was busy, which implies portal contention (i.e. more CPUs than
+	 * portals, i.e. GPPs w/o affine DPIOs). For all practical purposes,
+	 * there is little we can realistically do, short of giving up -
+	 * in which case we'd risk depleting the buffer pool and never again
+	 * receiving the Rx interrupt which would kick-start the refill logic.
+	 * So just keep retrying, at the risk of being moved to ksoftirqd.
 	 */
 	while (dpaa2_io_service_release(NULL, bpid, buf_array, i))
 		cpu_relax();
-- 
1.7.5.4

