From 94ea9c64b751701df9f756242461fc898dc4995c Mon Sep 17 00:00:00 2001
From: Cristian Sovaiala <cristian.sovaiala@freescale.com>
Date: Tue, 14 Jul 2015 15:25:04 +0300
Subject: [PATCH 1094/1383] dpaa_eth: Use S/G accessors in the Shared-Mac
 driver

Signed-off-by: Cristian Sovaiala <cristian.sovaiala@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../ethernet/freescale/sdk_dpaa/dpaa_eth_shared.c  | 30 ++++++++++++----------
 1 file changed, 17 insertions(+), 13 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_shared.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_shared.c
index 6564758..da50dc4 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_shared.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_shared.c
@@ -235,6 +235,9 @@ shared_rx_dqrr(struct qman_portal *portal, struct qman_fq *fq,
 	struct sk_buff *skb;
 	struct qm_sg_entry *sgt;
 	int i;
+	void *frag_addr;
+	u32 frag_length;
+	u32 offset;
 
 	net_dev = ((struct dpa_fq *)fq)->net_dev;
 	priv = netdev_priv(net_dev);
@@ -270,20 +273,21 @@ shared_rx_dqrr(struct qman_portal *portal, struct qman_fq *fq,
 
 	if (fd->format == qm_fd_sg) {
 		if (dpa_bp->vaddr) {
-			sgt = dpa_phys2virt(dpa_bp, qm_fd_addr(fd)) +
-				dpa_fd_offset(fd);
+			sgt = dpa_phys2virt(dpa_bp,
+					    qm_fd_addr(fd)) + dpa_fd_offset(fd);
 
 			for (i = 0; i < DPA_SGT_MAX_ENTRIES; i++) {
-				void *frag_addr = dpa_phys2virt(dpa_bp,
-						qm_sg_addr(&sgt[i]) +
-						be16_to_cpu(sgt[i].offset));
-				u32 frag_length = be32_to_cpu(sgt[i].length);
-				BUG_ON(sgt[i].extension);
+				offset = qm_sg_entry_get_offset(&sgt[i]);
+				frag_addr = dpa_phys2virt(dpa_bp,
+							  qm_sg_addr(&sgt[i]) +
+							  offset);
+				DPA_BUG_ON(qm_sg_entry_get_ext(&sgt[i]));
+				frag_length = qm_sg_entry_get_len(&sgt[i]);
 
 				/* copy from sgt[i] */
 				memcpy(skb_put(skb, frag_length), frag_addr,
-						frag_length);
-				if (sgt[i].final)
+				       frag_length);
+				if (qm_sg_entry_get_final(&sgt[i]))
 					break;
 			}
 		} else {
@@ -302,15 +306,15 @@ shared_rx_dqrr(struct qman_portal *portal, struct qman_fq *fq,
 							dpa_bp->size));
 
 			for (i = 0; i < DPA_SGT_MAX_ENTRIES; i++) {
-				u32 frag_length = be32_to_cpu(sgt[i].length);
-				BUG_ON(sgt[i].extension);
+				DPA_BUG_ON(qm_sg_entry_get_ext(&sgt[i]));
+				frag_length = qm_sg_entry_get_len(&sgt[i]);
 				copy_from_unmapped_area(
 						skb_put(skb, frag_length),
 						qm_sg_addr(&sgt[i]) +
-						be16_to_cpu(sgt[i].offset),
+						qm_sg_entry_get_offset(&sgt[i]),
 						frag_length);
 
-				if (sgt[i].final)
+				if (qm_sg_entry_get_final(&sgt[i]))
 					break;
 			}
 
-- 
2.8.1

