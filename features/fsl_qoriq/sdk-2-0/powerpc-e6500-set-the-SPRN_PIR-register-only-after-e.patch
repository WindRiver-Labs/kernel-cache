From 8070d8699606ba595c0fa1a9789a67dd5f8df927 Mon Sep 17 00:00:00 2001
From: Chenhui Zhao <chenhui.zhao@nxp.com>
Date: Tue, 6 Oct 2015 22:48:12 -0500
Subject: [PATCH 0087/1429] powerpc/e6500: set the SPRN_PIR register only
 after e6500 core resets

If a core has reset and its threads have been initialized, the SPRN_PIR
registers have the correct value, and there is no need to initialize it
again. This patch checks the SPRN_BUCSR register to see if the core has
been reset. Such things will happen, for example, in the CPU hotplug case.

This patch derived from the following upstream patch:
commit f34b3e19fd06 ("powerpc/e6500: kexec: Handle hardware threads")

Signed-off-by: Chenhui Zhao <chenhui.zhao@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/powerpc/kernel/head_64.S |   16 ++++++++++++++++
 1 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/kernel/head_64.S b/arch/powerpc/kernel/head_64.S
index d48125d..8b2bf0d 100644
--- a/arch/powerpc/kernel/head_64.S
+++ b/arch/powerpc/kernel/head_64.S
@@ -182,6 +182,8 @@ exception_marker:
 
 #ifdef CONFIG_PPC_BOOK3E
 _GLOBAL(fsl_secondary_thread_init)
+	mfspr	r4,SPRN_BUCSR
+
 	/* Enable branch prediction */
 	lis     r3,BUCSR_INIT@h
 	ori     r3,r3,BUCSR_INIT@l
@@ -196,10 +198,24 @@ _GLOBAL(fsl_secondary_thread_init)
 	 * number.  There are two threads per core, so shift everything
 	 * but the low bit right by two bits so that the cpu numbering is
 	 * continuous.
+	 *
+	 * If the old value of BUCSR is non-zero, this thread has run
+	 * before.  Thus, we assume we are coming from kexec or a similar
+	 * scenario, and PIR is already set to the correct value.  This
+	 * is a bit of a hack, but there are limited opportunities for
+	 * getting information into the thread and the alternatives
+	 * seemed like they'd be overkill.  We can't tell just by looking
+	 * at the old PIR value which state it's in, since the same value
+	 * could be valid for one thread out of reset and for a different
+	 * thread in Linux.
 	 */
+
 	mfspr	r3, SPRN_PIR
+	cmpwi	r4,0
+	bne	1f
 	rlwimi	r3, r3, 30, 2, 30
 	mtspr	SPRN_PIR, r3
+1:
 #endif
 
 _GLOBAL(generic_secondary_thread_init)
-- 
1.7.5.4

