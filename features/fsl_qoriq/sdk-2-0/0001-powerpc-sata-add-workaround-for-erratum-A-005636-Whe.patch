From c36d9f54d5cec09bfca731a35f9fda92dddf860b Mon Sep 17 00:00:00 2001
From: Jia Hongtao <hongtao.jia@freescale.com>
Date: Sat, 19 Dec 2015 18:22:29 +0800
Subject: [PATCH 0001/1383] powerpc/sata: add workaround for erratum A-005636
 When NCQ is enabled, the SATA controller does not support DMA setup FIS with
 autoactivate enabled from the device. The SATA host may timeout without
 finishing the transaction.

This will have a minor performance impact as disabling the
auto-activate feature requires the device to send a DMA setup as
well as a DMA activate FIS to enable reception of the first data
FIS.

Software will set a flag and check if device enables DMA AA by default,
then driver will:
1. Disable the DMA setup auto-activate feature by a set features command.
2. if 1# fail, then disable NCQ by setting the queue depth to one.

Signed-off-by: Shaohui Xie <Shaohui.Xie@freescale.com>
Change-Id: Icd5b9811eb4cb8342532c5c6238282b6c42cc7fa
Reviewed-on: http://git.am.freescale.net:8181/2226
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>

cherry picked sha ae9779830da9e1d02290d6510ecd637d373362a3 from sdk/linux-devel master
Please review and update as necessary
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/ata/libata-core.c | 15 +++++++++++++++
 drivers/ata/sata_fsl.c    |  8 ++++++++
 include/linux/ata.h       |  3 +++
 include/linux/libata.h    |  2 ++
 4 files changed, 28 insertions(+)

diff --git a/drivers/ata/libata-core.c b/drivers/ata/libata-core.c
index e0064d1..ce6cc7b 100644
--- a/drivers/ata/libata-core.c
+++ b/drivers/ata/libata-core.c
@@ -2099,6 +2099,21 @@ static int ata_dev_config_ncq(struct ata_device *dev,
 		dev->flags |= ATA_DFLAG_NCQ;
 	}
 
+	if ((ap->flags & ATA_FLAG_BROKENAA) &&
+		(ata_id_has_fpdma_aa(dev->id)) &&
+		(ata_id_enabled_fpdma_aa(dev->id))) {
+		err_mask = ata_dev_set_feature(dev, SETFEATURES_SATA_DISABLE,
+			SATA_FPDMA_AA);
+		if (err_mask) {
+			ata_dev_printk(dev, KERN_ERR, "failed to disable AA"
+				"(error_mask=0x%x)\n", err_mask);
+			/* turn off NCQ if failed disable SATA_FPDMA_AA */
+			hdepth = 1;
+			dev->flags &= ~ATA_DFLAG_NCQ;
+			dev->flags |= ATA_DFLAG_NCQ_OFF;
+		}
+	}
+
 	if (!(dev->horkage & ATA_HORKAGE_BROKEN_FPDMA_AA) &&
 		(ap->flags & ATA_FLAG_FPDMA_AA) &&
 		ata_id_has_fpdma_aa(dev->id)) {
diff --git a/drivers/ata/sata_fsl.c b/drivers/ata/sata_fsl.c
index 5389579..808c649 100644
--- a/drivers/ata/sata_fsl.c
+++ b/drivers/ata/sata_fsl.c
@@ -1501,6 +1501,14 @@ static int sata_fsl_probe(struct platform_device *ofdev)
 	else
 		host_priv->data_snoop = DATA_SNOOP_ENABLE_V1;
 
+	/*
+	 * Since erratum A-005636 applies to all platforms, it only be fixed
+	 * on T4 rev2.0, we add a flag to identify the erratum in main path.
+	 * XXX: for T4 rev2.0 and other new SoCs use same controller as
+	 * T4 Rev2.0. this flag should be removed.
+	 */
+	pi.flags |= ATA_FLAG_BROKENAA;
+
 	/* allocate host structure */
 	host = ata_host_alloc_pinfo(&ofdev->dev, ppi, SATA_FSL_MAX_PORTS);
 	if (!host) {
diff --git a/include/linux/ata.h b/include/linux/ata.h
index 2e5fb1c..8f6cc83 100644
--- a/include/linux/ata.h
+++ b/include/linux/ata.h
@@ -81,6 +81,7 @@ enum {
 	ATA_ID_SATA_CAPABILITY	= 76,
 	ATA_ID_SATA_CAPABILITY_2	= 77,
 	ATA_ID_FEATURE_SUPP	= 78,
+	ATA_ID_FEATURE_ENABLE	= 79,
 	ATA_ID_MAJOR_VER	= 80,
 	ATA_ID_COMMAND_SET_1	= 82,
 	ATA_ID_COMMAND_SET_2	= 83,
@@ -515,6 +516,8 @@ struct ata_bmdma_prd {
 	((((id)[ATA_ID_SATA_CAPABILITY] != 0x0000) && \
 	  ((id)[ATA_ID_SATA_CAPABILITY] != 0xffff)) && \
 	 ((id)[ATA_ID_FEATURE_SUPP] & (1 << 2)))
+#define ata_id_enabled_fpdma_aa(id)	\
+	  ((id)[ATA_ID_FEATURE_ENABLE] & (1 << 2))
 #define ata_id_iordy_disable(id) ((id)[ATA_ID_CAPABILITY] & (1 << 10))
 #define ata_id_has_iordy(id) ((id)[ATA_ID_CAPABILITY] & (1 << 11))
 #define ata_id_u32(id,n)	\
diff --git a/include/linux/libata.h b/include/linux/libata.h
index 11c2dd1..1fb637d 100644
--- a/include/linux/libata.h
+++ b/include/linux/libata.h
@@ -211,6 +211,8 @@ enum {
 	ATA_FLAG_SLAVE_POSS	= (1 << 0), /* host supports slave dev */
 					    /* (doesn't imply presence) */
 	ATA_FLAG_SATA		= (1 << 1),
+	ATA_FLAG_BROKENAA	= (1 << 2),  /* host not support DMA AA
+						 enabled by default */
 	ATA_FLAG_NO_ATAPI	= (1 << 6), /* No ATAPI support */
 	ATA_FLAG_PIO_DMA	= (1 << 7), /* PIO cmds via DMA */
 	ATA_FLAG_PIO_LBA48	= (1 << 8), /* Host DMA engine is LBA28 only */
-- 
2.8.1

