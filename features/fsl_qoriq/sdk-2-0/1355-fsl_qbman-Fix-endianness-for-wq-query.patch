From e625073600e29b634e09f690cd9783a968f75b90 Mon Sep 17 00:00:00 2001
From: Ahmed Mansour <Ahmed.Mansour@nxp.com>
Date: Mon, 9 May 2016 16:28:51 -0400
Subject: [PATCH 1355/1383] fsl_qbman: Fix endianness for wq query

Made corrections to the querywq structure in fsl_qman.h and added
endianness conversions before and after sending query command to qman

Signed-off-by: Ahmed Mansour <Ahmed.Mansour@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c | 11 ++++++++---
 include/linux/fsl_qman.h              |  5 +++++
 2 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index fc079e4..66b5ec7 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -2043,14 +2043,19 @@ int qman_query_wq(u8 query_dedicated, struct qm_mcr_querywq *wq)
 	myverb = (query_dedicated) ? QM_MCR_VERB_QUERYWQ_DEDICATED :
 				 QM_MCR_VERB_QUERYWQ;
 	mcc = qm_mc_start(&p->p);
-	mcc->querywq.channel.id = wq->channel.id;
+	mcc->querywq.channel.id = cpu_to_be16(wq->channel.id);
 	qm_mc_commit(&p->p, myverb);
 	while (!(mcr = qm_mc_result(&p->p)))
 		cpu_relax();
 	DPA_ASSERT((mcr->verb & QM_MCR_VERB_MASK) == myverb);
 	res = mcr->result;
-	if (res == QM_MCR_RESULT_OK)
-		memcpy_fromio(wq, &mcr->querywq, sizeof(*wq));
+	if (res == QM_MCR_RESULT_OK) {
+		int i, array_len;
+		wq->channel.id = be16_to_cpu(mcr->querywq.channel.id);
+		array_len = ARRAY_SIZE(mcr->querywq.wq_len);
+		for (i = 0; i < array_len; i++)
+			wq->wq_len[i] = be32_to_cpu(mcr->querywq.wq_len[i]);
+	}
 	PORTAL_IRQ_UNLOCK(p, irqflags);
 	put_affine_portal();
 	if (res != QM_MCR_RESULT_OK) {
diff --git a/include/linux/fsl_qman.h b/include/linux/fsl_qman.h
index 08e81e8..97a7313 100644
--- a/include/linux/fsl_qman.h
+++ b/include/linux/fsl_qman.h
@@ -1433,8 +1433,13 @@ struct qm_mcr_querywq {
 	union {
 		u16 channel_wq; /* ignores wq (3 lsbits) */
 		struct {
+#if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
 			u16 id:13; /* qm_channel */
 			u16 __reserved:3;
+#else
+			u16 __reserved:3;
+			u16 id:13; /* qm_channel */
+#endif
 		} __packed channel;
 	};
 	u8 __reserved[28];
-- 
2.8.1

