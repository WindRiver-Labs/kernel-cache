From a52f1be8f139c41f32612a3d1859c7e22e4870af Mon Sep 17 00:00:00 2001
From: Alex Porosanu <alexandru.porosanu@nxp.com>
Date: Wed, 27 Apr 2016 17:54:22 +0300
Subject: [PATCH 1327/1383] fsl_qbman: table lookup size should take into
 account the # of FQs

The FQID lookup table should take into account the actual
number of FQs available in the system (which depends on the fsl-qman,fqd
node contents).

Signed-off-by: Alex Porosanu <alexandru.porosanu@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/qman_config.c  | 5 +++++
 drivers/staging/fsl_qbman/qman_driver.c  | 7 +------
 drivers/staging/fsl_qbman/qman_private.h | 6 ++++++
 3 files changed, 12 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index 70a07a6..0e6d284 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -452,6 +452,11 @@ static int qman_pfdr(struct reserved_mem *rmem)
 }
 RESERVEDMEM_OF_DECLARE(qman_fbpr, "fsl,qman-pfdr", qman_pfdr);
 
+size_t get_qman_fqd_size()
+{
+	return fqd_sz;
+}
+
 /* Parse the <name> property to extract the memory location and size and
  * memblock_reserve() it. If it isn't supplied, memblock_alloc() the default
  * size. Also flush this memory range from data cache so that QMAN originated
diff --git a/drivers/staging/fsl_qbman/qman_driver.c b/drivers/staging/fsl_qbman/qman_driver.c
index e7b2347..a4e8c58 100644
--- a/drivers/staging/fsl_qbman/qman_driver.c
+++ b/drivers/staging/fsl_qbman/qman_driver.c
@@ -58,11 +58,6 @@ struct qm_ceetm qman_ceetms[QMAN_CEETM_MAX];
 /* the qman ceetm instances on the given SoC */
 u8 num_ceetms;
 
-/* size of the fqd region in bytes */
-#ifdef CONFIG_FSL_QMAN_FQ_LOOKUP
-static u32 fqd_size = (PAGE_SIZE << CONFIG_FSL_QMAN_FQD_SZ);
-#endif
-
 /* For these variables, and the portal-initialisation logic, the
  * comments in bman_driver.c apply here so won't be repeated. */
 static struct qman_portal *shared_portals[NR_CPUS];
@@ -784,7 +779,7 @@ __init int qman_init(void)
 	}
 #ifdef CONFIG_FSL_QMAN_FQ_LOOKUP
 	/* Setup lookup table for FQ demux */
-	ret = qman_setup_fq_lookup_table(fqd_size/64);
+	ret = qman_setup_fq_lookup_table(get_qman_fqd_size()/64);
 	if (ret)
 		return ret;
 #endif
diff --git a/drivers/staging/fsl_qbman/qman_private.h b/drivers/staging/fsl_qbman/qman_private.h
index 506997c..ee025cf 100644
--- a/drivers/staging/fsl_qbman/qman_private.h
+++ b/drivers/staging/fsl_qbman/qman_private.h
@@ -215,6 +215,12 @@ extern u16 qman_portal_max;
 int qman_init_ccsr(struct device_node *node);
 void qman_liodn_fixup(u16 channel);
 int qman_set_sdest(u16 channel, unsigned int cpu_idx);
+size_t get_qman_fqd_size(void);
+#else
+static inline size_t get_qman_fqd_size(void)
+{
+	return (PAGE_SIZE << CONFIG_FSL_QMAN_FQD_SZ);
+}
 #endif
 
 int qm_set_wpm(int wpm);
-- 
2.8.1

