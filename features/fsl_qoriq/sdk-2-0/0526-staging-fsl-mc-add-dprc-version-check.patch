From 00450b19b0131214aa6b9a840422e51ae785be59 Mon Sep 17 00:00:00 2001
From: Itai Katz <itai.katz@freescale.com>
Date: Mon, 21 Dec 2015 14:39:46 +0200
Subject: [PATCH 0526/1383] staging: fsl-mc: add dprc version check

The dprc driver supports dprc version 5.0 and above.
This patch adds the code to check the version.

Signed-off-by: Itai Katz <itai.katz@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-mc/bus/dprc-cmd.h    |  6 +++---
 drivers/staging/fsl-mc/bus/dprc-driver.c | 22 ++++++++++++++++++++++
 drivers/staging/fsl-mc/bus/mc-bus.c      |  9 +++++----
 3 files changed, 30 insertions(+), 7 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/dprc-cmd.h b/drivers/staging/fsl-mc/bus/dprc-cmd.h
index d0198f5..9b854fa 100644
--- a/drivers/staging/fsl-mc/bus/dprc-cmd.h
+++ b/drivers/staging/fsl-mc/bus/dprc-cmd.h
@@ -40,9 +40,9 @@
 #ifndef _FSL_DPRC_CMD_H
 #define _FSL_DPRC_CMD_H
 
-/* DPRC Version */
-#define DPRC_VER_MAJOR				5
-#define DPRC_VER_MINOR				1
+/* Minimal supported DPRC Version */
+#define DPRC_MIN_VER_MAJOR			5
+#define DPRC_MIN_VER_MINOR			0
 
 /* Command IDs */
 #define DPRC_CMDID_CLOSE			0x800
diff --git a/drivers/staging/fsl-mc/bus/dprc-driver.c b/drivers/staging/fsl-mc/bus/dprc-driver.c
index 3596108..e9baeca 100644
--- a/drivers/staging/fsl-mc/bus/dprc-driver.c
+++ b/drivers/staging/fsl-mc/bus/dprc-driver.c
@@ -333,6 +333,17 @@ int dprc_scan_objects(struct fsl_mc_device *mc_bus_dev,
 				continue;
 			}
 
+			/*
+			 * for DPRC versions that do not support the
+			 * shareability attribute, make simplifying assumption
+			 * that only SEC is not shareable.
+			 */
+			if ((mc_bus_dev->obj_desc.ver_major == 5) &&
+			    (mc_bus_dev->obj_desc.ver_minor == 0) &&
+			    (strcmp(obj_desc->type, "dpseci") == 0))
+				obj_desc->flags |=
+					DPRC_OBJ_FLAG_NO_MEM_SHAREABILITY;
+
 			irq_count += obj_desc->irq_count;
 			dev_dbg(&mc_bus_dev->dev,
 				"Discovered object: type %s, id %d\n",
@@ -859,6 +870,17 @@ static int dprc_probe(struct fsl_mc_device *mc_dev)
 		goto error_cleanup_open;
 	}
 
+	if (mc_bus->dprc_attr.version.major < DPRC_MIN_VER_MAJOR ||
+	   (mc_bus->dprc_attr.version.major == DPRC_MIN_VER_MAJOR &&
+	    mc_bus->dprc_attr.version.minor < DPRC_MIN_VER_MINOR)) {
+		dev_err(&mc_dev->dev,
+			"ERROR: DPRC version %d.%d not supported\n",
+			mc_bus->dprc_attr.version.major,
+			mc_bus->dprc_attr.version.minor);
+		error = -ENOTSUPP;
+		goto error_cleanup_open;
+	}
+
 	if (fsl_mc_interrupts_supported()) {
 		/*
 		 * Create DPMCP for the DPRC's built-in portal:
diff --git a/drivers/staging/fsl-mc/bus/mc-bus.c b/drivers/staging/fsl-mc/bus/mc-bus.c
index 9ca864c..189ebae 100644
--- a/drivers/staging/fsl-mc/bus/mc-bus.c
+++ b/drivers/staging/fsl-mc/bus/mc-bus.c
@@ -620,12 +620,12 @@ int fsl_mc_device_add(struct dprc_obj_desc *obj_desc,
 			goto error_cleanup_dev;
 	}
 
-	/* DPAA2 devices on the mc-bus *are* dma-coherent,
-	 * with the noticeable exception of DPSECI.
+	/*
+	 * Objects are coherent, unless 'no shareability' flag set.
 	 * FIXME: fill up @dma_base, @size, @iommu
 	 */
-	if (strcmp(obj_desc->type, "dpseci"))
-		arch_setup_dma_ops(&mc_dev->dev, 0, 0, NULL, true);
+	if (!(obj_desc->flags & DPRC_OBJ_FLAG_NO_MEM_SHAREABILITY))
+			arch_setup_dma_ops(&mc_dev->dev, 0, 0, NULL, true);
 
 	/*
 	 * The device-specific probe callback will get invoked by device_add()
@@ -1209,6 +1209,7 @@ static int fsl_mc_bus_probe(struct platform_device *pdev)
 		goto error_cleanup_mc_io;
 	}
 
+	memset(&obj_desc, 0, sizeof(struct dprc_obj_desc));
 	error = get_dprc_version(mc_io, container_id,
 				 &obj_desc.ver_major, &obj_desc.ver_minor);
 	if (error < 0)
-- 
2.8.1

