From efd22b36268d9a7489003302028e9582a6a4b92c Mon Sep 17 00:00:00 2001
From: Roy Pledge <Roy.Pledge@freescale.com>
Date: Wed, 6 May 2015 16:21:17 -0400
Subject: [PATCH 0695/1383] dpaa2-eth: Process frames in IRQ context

Stop using threaded IRQs and move back to hardirq top-halves.
This is the first patch of a small series adapting the DPIO and Ethernet
code to these changes.

Signed-off-by: Roy Pledge <roy.pledge@freescale.com>
Tested-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Tested-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Reviewed-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
[Stuart: split dpio and eth into separate patches, updated subject]
Signed-off-by: Stuart Yoder <stuart.yoder@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c | 14 +-------------
 1 file changed, 1 insertion(+), 13 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
index 284c161..9435783 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
@@ -750,6 +750,7 @@ static int ldpaa_eth_poll(struct napi_struct *napi, int budget)
 
 	fq = container_of(napi, struct ldpaa_eth_fq, napi);
 	/* TODO Must prioritize TxConf over Rx NAPIs */
+	__ldpaa_eth_pull_fq(fq);
 
 	do {
 		store_cleaned = ldpaa_eth_store_consume(fq);
@@ -1133,9 +1134,6 @@ static void ldpaa_eth_fqdan_cb(struct dpaa_io_notification_ctx *ctx)
 {
 	struct ldpaa_eth_fq *fq = container_of(ctx, struct ldpaa_eth_fq, nctx);
 
-	/* TODO check return value */
-	__ldpaa_eth_pull_fq(fq);
-
 	/* Update NAPI statistics */
 	switch (fq->type) {
 	case LDPAA_RX_FQ:
@@ -1155,16 +1153,6 @@ static void ldpaa_eth_fqdan_cb(struct dpaa_io_notification_ctx *ctx)
 
 	fq->has_frames = true;
 	napi_schedule(&fq->napi);
-	/* Provide a guaranteed scheduling point for the bottom-half;
-	 * with threaded interrupts, that isn't automatically the case.
-	 * FIXME: we're effectively running in the software portal's top-half.
-	 * As long as:
-	 *   1. the Ethernet driver is the only client of the portal, and
-	 *   2. we only expect Dequeue Available Notifications,
-	 * this approach is fine. Once either of the conditions no longer holds,
-	 * we will have to move this to a separate execution context.
-	 */
-	do_softirq();
 }
 
 static void ldpaa_eth_setup_fqs(struct ldpaa_eth_priv *priv)
-- 
2.8.1

