From a61612daeb7bce3dceae20eb0e67205433e6e750 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Fri, 24 Apr 2015 13:01:07 +0300
Subject: [PATCH 0678/1383] dpaa2-eth: Retry read if store unexpectedly empty

After we place a volatile dequeue command, we might get to inquire the
store before the DMA has actually completed. In such cases, we must
retry, lest we'll have the store overwritten by the next legitimate
volatile dequeue.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Change-Id: I314fbb8b4d9f589715e42d35fc6677d726b8f5ba
Reviewed-on: http://git.am.freescale.net:8181/35584
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
index a3e5b84..4a2b7c6 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
@@ -323,9 +323,14 @@ static int ldpaa_eth_store_consume(struct ldpaa_eth_fq *fq)
 		dq = dpaa_io_store_next(fq->ring.store, &is_last);
 		if (unlikely(!dq)) {
 			if (unlikely(!is_last)) {
-				netdev_err(priv->net_dev,
-					   "FQID %d returned no valid frames!\n",
+				netdev_dbg(priv->net_dev,
+					   "FQID %d returned no valid frames\n",
 					   fq->fqid);
+				/* MUST retry until we get some sort of
+				 * valid response token (be it "empty dequeue"
+				 * or a valid frame).
+				 */
+				continue;
 			}
 			fq->has_frames = false;
 			/* TODO add a ethtool counter for empty dequeues */
@@ -746,10 +751,6 @@ static int ldpaa_eth_poll(struct napi_struct *napi, int budget)
 		err = __ldpaa_eth_pull_fq(fq);
 		if (unlikely(err))
 			break;
-		/* FIXME Must be able to safely query the store
-		 * before the DMA finishes the first transfer
-		 */
-		ndelay(1000);
 	} while (1);
 
 	if (cleaned < budget)
-- 
2.8.1

