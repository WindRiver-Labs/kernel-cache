From e9a796485bd1c7257653eb9cf45698c315e6921d Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Mon, 25 Aug 2014 17:21:07 +0300
Subject: [PATCH 768/987] dpaa_eth: fix dpa_get_channel return value check

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: I5594b9f26210f9a7237bdd51f529d40a2b008115
Reviewed-on: http://git.am.freescale.net:8181/17400
Reviewed-by: Cristian Bercaru <cristian.bercaru@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c | 10 ++++++----
 drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c  | 10 ++++++----
 2 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c
index f27ce5c..0258c90 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c
@@ -310,7 +310,7 @@ struct proxy_device *dpa_macless_proxy_probe(struct platform_device *_of_dev)
 
 static int dpaa_eth_macless_probe(struct platform_device *_of_dev)
 {
-	int err = 0, i;
+	int err = 0, i, channel;
 	struct device *dev;
 	struct device_node *dpa_node;
 	struct dpa_bp *dpa_bp;
@@ -393,13 +393,15 @@ static int dpaa_eth_macless_probe(struct platform_device *_of_dev)
 	if (err < 0)
 		goto bp_create_failed;
 
-	priv->channel = dpa_get_channel();
+	channel = dpa_get_channel();
 
-	if (priv->channel < 0) {
-		err = priv->channel;
+	if (channel < 0) {
+		err = channel;
 		goto get_channel_failed;
 	}
 
+	priv->channel = (uint16_t)channel;
+
 	/* Start a thread that will walk the cpus with affine portals
 	 * and add this pool channel to each's dequeue mask.
 	 */
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
index 17dc86f..90d2849 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
@@ -670,7 +670,7 @@ static const struct dev_pm_ops shared_pm_ops = {
 static int
 dpaa_eth_shared_probe(struct platform_device *_of_dev)
 {
-	int err = 0, i;
+	int err = 0, i, channel;
 	struct device *dev;
 	struct device_node *dpa_node;
 	struct dpa_bp *dpa_bp;
@@ -755,13 +755,15 @@ dpaa_eth_shared_probe(struct platform_device *_of_dev)
 
 	priv->mac_dev = mac_dev;
 
-	priv->channel = dpa_get_channel();
+	channel = dpa_get_channel();
 
-	if (priv->channel < 0) {
-		err = priv->channel;
+	if (channel < 0) {
+		err = channel;
 		goto get_channel_failed;
 	}
 
+	priv->channel = (uint16_t)channel;
+
 	/* Start a thread that will walk the cpus with affine portals
 	 * and add this pool channel to each's dequeue mask.
 	 */
-- 
1.9.1

