From 0a7b938588f5df2fe5cf7b79ccde126a7daa3a41 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Tue, 20 Aug 2013 16:22:31 +0300
Subject: [PATCH 319/987] dpaa_eth: Fix double counting of dropped frames

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

When the stack drops an incoming frame it also increments the
rx_dropped counter in the netdevice stats. We were also updating
this counter inside the driver, resulting in incorrect statistics
for dropped frames.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Change-Id: I16d6819d80d01ee7bf0400736acbe5d95fa04f25
Reviewed-on: http://git.am.freescale.net:8181/4187
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Bucur Madalin-Cristian-B32716 <madalin.bucur@freescale.com>
Reviewed-by: Rivera Jose-B46482 <German.Rivera@freescale.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth_non_sg.c | 11 +++++------
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c     | 11 +++++------
 drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c |  2 +-
 3 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_non_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_non_sg.c
index 6ce1af5..e6d03fd 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_non_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_non_sg.c
@@ -373,14 +373,13 @@ void __hot _dpa_rx(struct net_device *net_dev,
 		gro_result_t gro_result;
 
 		gro_result = napi_gro_receive(&percpu_priv->napi, skb);
-		if (unlikely(gro_result == GRO_DROP)) {
-			percpu_priv->stats.rx_dropped++;
+		/* If frame is dropped by the stack, rx_dropped counter is
+		 * incremented automatically, so no need for us to update it
+		 */
+		if (unlikely(gro_result == GRO_DROP))
 			goto packet_dropped;
-		}
-	} else if (unlikely(netif_receive_skb(skb) == NET_RX_DROP)) {
-		percpu_priv->stats.rx_dropped++;
+	} else if (unlikely(netif_receive_skb(skb) == NET_RX_DROP))
 		goto packet_dropped;
-	}
 
 	percpu_priv->stats.rx_packets++;
 	percpu_priv->stats.rx_bytes += skb_len;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index cc76dda..a1418ba 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -573,14 +573,13 @@ void __hot _dpa_rx(struct net_device *net_dev,
 		gro_result_t gro_result;
 
 		gro_result = napi_gro_receive(&percpu_priv->napi, skb);
-		if (unlikely(gro_result == GRO_DROP)) {
-			percpu_stats->rx_dropped++;
+		/* If frame is dropped by the stack, rx_dropped counter is
+		 * incremented automatically, so no need for us to update it
+		 */
+		if (unlikely(gro_result == GRO_DROP))
 			goto packet_dropped;
-		}
-	} else if (unlikely(netif_receive_skb(skb) == NET_RX_DROP)) {
-		percpu_stats->rx_dropped++;
+	} else if (unlikely(netif_receive_skb(skb) == NET_RX_DROP))
 		goto packet_dropped;
-	}
 
 	percpu_stats->rx_packets++;
 	percpu_stats->rx_bytes += skb_len;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
index c0dcee8..b0b7556 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
@@ -339,7 +339,7 @@ skb_copied:
 	}
 
 	if (unlikely(netif_rx(skb) != NET_RX_SUCCESS))
-		percpu_priv->stats.rx_dropped++;
+		goto out;
 	else {
 		percpu_priv->stats.rx_packets++;
 		percpu_priv->stats.rx_bytes += dpa_fd_length(fd);
-- 
1.9.1

