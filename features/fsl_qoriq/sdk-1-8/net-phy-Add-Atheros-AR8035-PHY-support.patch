From ea62789e9835e7989de9f21e91eb8664f2520398 Mon Sep 17 00:00:00 2001
From: Chunhe Lan <Chunhe.Lan@freescale.com>
Date: Fri, 19 Apr 2013 14:10:41 +0800
Subject: [PATCH 06/45] net/phy: Add Atheros AR8035 PHY support

The AR8035 is a single port 10/100/1000 Mbps tri-speed Ethernet PHY.
It supports an RGMII interface to the MAC with wide RGMII I/O voltage
support from 1.5V to 3.3V.

Signed-off-by: Michael Johnston <michael.johnston@freescale.com>
Signed-off-by: Chunhe Lan <Chunhe.Lan@freescale.com>
Change-Id: I6676faab8cb43a42bad8517297d6c45f79a05923
Reviewed-on: http://git.am.freescale.net:8181/1571
Reviewed-by: Zang Tiefei-R61911 <tie-fei.zang@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
[Original patch taken from QorIQ-SDK-V1.8-20150619-yocto]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/phy/Kconfig   |    5 ++
 drivers/net/phy/Makefile  |    1 +
 drivers/net/phy/atheros.c |   97 +++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 103 insertions(+), 0 deletions(-)
 create mode 100644 drivers/net/phy/atheros.c

diff --git a/drivers/net/phy/Kconfig b/drivers/net/phy/Kconfig
index df2f0aa..f778c3a 100644
--- a/drivers/net/phy/Kconfig
+++ b/drivers/net/phy/Kconfig
@@ -31,6 +31,11 @@ config AMD_XGBE_PHY
 	---help---
 	  Currently supports the AMD 10GbE PHY
 
+config ATHEROS_PHY
+	tristate "Drivers for Atheros PHYs"
+	---help---
+	  Currently supports the AR8035 PHY
+
 config MARVELL_PHY
 	tristate "Drivers for Marvell PHYs"
 	---help---
diff --git a/drivers/net/phy/Makefile b/drivers/net/phy/Makefile
index 4d589bc..4c6eed4 100644
--- a/drivers/net/phy/Makefile
+++ b/drivers/net/phy/Makefile
@@ -3,6 +3,7 @@
 libphy-objs			:= phy.o phy_device.o mdio_bus.o
 
 obj-$(CONFIG_PHYLIB)		+= libphy.o
+obj-$(CONFIG_ATHEROS_PHY)	+= atheros.o
 obj-$(CONFIG_MARVELL_PHY)	+= marvell.o
 obj-$(CONFIG_DAVICOM_PHY)	+= davicom.o
 obj-$(CONFIG_CICADA_PHY)	+= cicada.o
diff --git a/drivers/net/phy/atheros.c b/drivers/net/phy/atheros.c
new file mode 100644
index 0000000..934b51e
--- /dev/null
+++ b/drivers/net/phy/atheros.c
@@ -0,0 +1,97 @@
+/*
+ * drivers/net/phy/atheros.c
+ *
+ * Driver for Atheros PHYs
+ *
+ * Author: Michael Johnston <michael.johnston@freescale.com>
+ *	   Chunhe Lan <Chunhe.Lan@freescale.com>
+ *
+ * Copyright (c) 2013 Freescale Semiconductor, Inc.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ *
+ */
+#include <linux/phy.h>
+#include <linux/module.h>
+#include <linux/string.h>
+#include <linux/netdevice.h>
+#include <linux/etherdevice.h>
+
+#define AR8035_PHYSR		0x0011
+#define AR8035_PHYSR_DUPLEX	0x2000
+#define AR8035_PHYSR_SPEED	0xc000
+#define AR8035_INER		0x0012
+#define AR8035_INER_INIT	0xec00
+#define AR8035_INSR		0x0013
+
+#define PHY_ID_AR8035		0x004dd072
+
+MODULE_DESCRIPTION("Atheros PHY driver");
+MODULE_AUTHOR("Michael Johnston");
+MODULE_LICENSE("GPL");
+
+static int ar8035_ack_interrupt(struct phy_device *phydev)
+{
+	int err;
+
+	err = phy_read(phydev, AR8035_INSR);
+
+	return (err < 0) ? err : 0;
+}
+
+static int ar8035_config_intr(struct phy_device *phydev)
+{
+	int err;
+
+	if (phydev->interrupts == PHY_INTERRUPT_ENABLED)
+		err = phy_write(phydev, AR8035_INER, AR8035_INER_INIT);
+	else
+		err = phy_write(phydev, AR8035_INER, 0);
+
+	return err;
+}
+
+/* AR8035 */
+static struct phy_driver ar8035_driver = {
+	.phy_id		= PHY_ID_AR8035,
+	.name		= "AR8035 Gigabit Ethernet",
+	.phy_id_mask	= 0x007fffff,
+	.features	= PHY_GBIT_FEATURES,
+	.flags		= PHY_HAS_INTERRUPT,
+	.config_aneg	= &genphy_config_aneg,
+	.read_status	= &genphy_read_status,
+	.ack_interrupt	= &ar8035_ack_interrupt,
+	.config_intr	= &ar8035_config_intr,
+	.driver		= {
+		.owner = THIS_MODULE,
+	},
+};
+
+static int __init atheros_init(void)
+{
+	int ret;
+
+	ret = phy_driver_register(&ar8035_driver);
+	if (ret < 0)
+		pr_warn("AR8035: phy_driver_register is error\n");
+
+	return ret;
+}
+
+static void __exit atheros_exit(void)
+{
+	phy_driver_unregister(&ar8035_driver);
+}
+
+module_init(atheros_init);
+module_exit(atheros_exit);
+
+static struct mdio_device_id __maybe_unused atheros_tbl[] = {
+	{ PHY_ID_AR8035, 0x007fffff },
+	{ }
+};
+
+MODULE_DEVICE_TABLE(mdio, atheros_tbl);
-- 
1.7.5.4

