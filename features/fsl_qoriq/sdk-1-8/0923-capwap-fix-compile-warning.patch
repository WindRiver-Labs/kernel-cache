From c3771fa755271568140cc1192d44f5fc42597cfe Mon Sep 17 00:00:00 2001
From: Pan Jiafei <Jiafei.Pan@freescale.com>
Date: Tue, 24 Mar 2015 14:51:04 +0800
Subject: [PATCH 923/987] capwap: fix compile warning

Signed-off-by: Pan Jiafei <Jiafei.Pan@freescale.com>
Change-Id: I4110d5a606dd4d1e266fdb28d3ead1ba84382c22
Reviewed-on: http://git.am.freescale.net:8181/33328
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Mandy Lavi <Mandy.Lavi@freescale.com>
Reviewed-by: Honghua Yin <Hong-Hua.Yin@freescale.com>
[Yang: Original patch taken from
QorIQ-SDK-V1.8-SOURCE-20150619-yocto.iso]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_bridge.c | 10 ++++++++--
 drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_domain.c |  8 ++++----
 drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_ioctl.c  |  2 +-
 drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_op.c     |  4 ----
 4 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_bridge.c b/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_bridge.c
index 0b08c58..56813b6 100644
--- a/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_bridge.c
+++ b/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_bridge.c
@@ -93,8 +93,10 @@ static struct dpaa_capwap_domain *capwap_domain;
 static struct dpa_bp *br_dpa_bp;
 static int encrypt_status; /* 0: non-dtls encrypt, 1: dtls encrypt */
 
+#ifdef CONFIG_FSL_CAPWAP_BRIDGE_ZMC
 static struct sk_buff *alloc_bman_skb(void *bp, unsigned int length);
 static void free_bman_skb(struct sk_buff *skb);
+#endif
 
 static void capwap_napi_enable(struct dpa_priv_s *priv)
 {
@@ -109,7 +111,7 @@ static void capwap_napi_enable(struct dpa_priv_s *priv)
 	}
 }
 
-static void capwap_napi_disable(struct dpa_priv_s *priv)
+void capwap_napi_disable(struct dpa_priv_s *priv)
 {
 	struct dpa_percpu_priv_s *percpu_priv;
 	int i, j;
@@ -359,7 +361,9 @@ static int __hot capwap_br_to_dpaa(struct sk_buff *skb,
 	void *dpa_bp_vaddr;
 	int i;
 	struct qman_fq *fq_base, *fq;
+#ifdef CONFIG_FSL_CAPWAP_BRIDGE_ZMC
 	dma_addr_t addr;
+#endif
 	struct net_device *net_dev = fslbr_dev->capwap_net_dev;
 	int tunnel_id = encrypt_status ? DATA_DTLS_TUNNEL : DATA_N_DTLS_TUNNEL;
 
@@ -411,7 +415,9 @@ static int __hot capwap_br_to_dpaa(struct sk_buff *skb,
 			  dpa_bp_vaddr + dpa_fd_offset(&fd),
 			  dpa_fd_length(&fd));
 
+#ifdef CONFIG_FSL_CAPWAP_BRIDGE_ZMC
 skb_copied:
+#endif
 	fq_base = (struct qman_fq *)capwap_domain->fqs->
 					outbound_core_tx_fqs.fq_base;
 	if (encrypt_status)
@@ -643,7 +649,7 @@ static ssize_t fslbr_show_statistic(struct device *dev,
 		bytes += sprintf(buf + bytes, "\tTx: %u\n", br_tx[i]);
 		bytes += sprintf(buf + bytes, "\tTx Error: %u\n", br_tx_err[i]);
 		bytes += sprintf(buf + bytes,
-				"\tTx N-ZZM No Buffer Error: %u-%u\n",
+				"\tTx N-ZZM No Buffer Error: %u\n",
 				br_no_buffer_err[i]);
 		bytes += sprintf(buf + bytes, "\tTx Upload: %u\n",
 			fsl_tunnel_stats[i].tunnel_upload);
diff --git a/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_domain.c b/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_domain.c
index fa933dc..f7b1806 100644
--- a/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_domain.c
+++ b/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_domain.c
@@ -524,14 +524,14 @@ int add_in_tunnel(struct dpaa_capwap_domain *capwap_domain,
 	struct cipher_params *cipher;
 	struct dtls_block_decap_pdb *pdb;
 	struct dtls_decap_descriptor_t *preheader_initdesc;
-	struct qman_fq *fq;
+	struct qman_fq *fq = NULL;
 	uint16_t desc_len;
 	unsigned char *buff_start = NULL;
 	u64 context_a = 0;
 	uint32_t context_b = 0;
 	uint16_t channel;
 	uint16_t flow_index;
-	dma_addr_t dma_addr;
+	dma_addr_t dma_addr = 0;
 	struct qman_fq_chain *fq_node;
 
 	flow_index = get_flow_index(in_tunnel_params->dtls,
@@ -826,14 +826,14 @@ int add_out_tunnel(struct dpaa_capwap_domain *capwap_domain,
 	struct auth_params *auth;
 	struct cipher_params *cipher;
 	struct dtls_encap_descriptor_t *preheader_initdesc;
-	struct qman_fq *fq;
+	struct qman_fq *fq = NULL;
 	uint16_t desc_len;
 	unsigned char *buff_start = NULL;
 	u64 context_a = 0;
 	uint32_t context_b = 0;
 	uint16_t channel;
 	uint16_t flow_index;
-	dma_addr_t dma_addr;
+	dma_addr_t dma_addr = 0;
 	struct qman_fq_chain *fq_node;
 
 	if (!capwap_domain || !p_tunnel)
diff --git a/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_ioctl.c b/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_ioctl.c
index a8d9a1f..13dc993 100644
--- a/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_ioctl.c
+++ b/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_ioctl.c
@@ -238,7 +238,7 @@ long wrp_dpa_capwap_ioctl(struct file *filp, unsigned int cmd,
 		struct dpaa_capwap_tunnel  *out_tunnel = NULL;
 		struct dpaa_capwap_domain *capwap_domain = NULL;
 		struct dpaa_capwap_domain_tunnel_out_params out_tunnel_params;
-		struct tunnel_info *tunnel_node, *new_tunnel;
+		struct tunnel_info *tunnel_node, *new_tunnel = NULL;
 		uint8_t *buf;
 
 		/* Copy parameters from user-space */
diff --git a/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_op.c b/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_op.c
index 3074a68..18f95fd 100644
--- a/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_op.c
+++ b/drivers/net/ethernet/freescale/dpa/capwap/dpaa_capwap_op.c
@@ -55,13 +55,9 @@ int op_init(struct t_Port *port, struct net_device *net_dev)
 	bool is_found = false;
 	struct platform_device *oh_dev;
 	struct dpa_oh_config_s *oh_config;
-	int ret;
-	uint16_t channel;
-	struct dpa_fq *fq;
 	uint32_t def_fqid, err_fqid;
 	t_LnxWrpFmPortDev   *fm_port_dev = NULL;
 	t_LnxWrpFmDev *fm_dev = NULL;
-	struct task_struct *kth;
 	static struct of_device_id dpa_oh_node_of_match[] = {
 		{ .compatible = "fsl,dpa-oh", },
 		{ /* end of list */ },
-- 
1.9.1

