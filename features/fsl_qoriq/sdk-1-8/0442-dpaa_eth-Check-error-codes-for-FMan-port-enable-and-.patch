From 233ad1a8b6fc9cebad767479b9009cdd887c3cc8 Mon Sep 17 00:00:00 2001
From: Cristian Bercaru <cristian.bercaru@freescale.com>
Date: Mon, 25 Nov 2013 21:36:52 +0000
Subject: [PATCH 442/987] dpaa_eth: Check error codes for FMan port enable and
 disable

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

The calling functions check the error codes of 'fm_port_enable' and
'fm_port_disable'. When an error occurs they do the necessary cleanups
and resets and return an error.

Signed-off-by: Cristian Bercaru <cristian.bercaru@freescale.com>
Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Change-Id: I1055a4e2d0a20d4645b18739a6dc6e4027cb3494
Reviewed-on: http://git.am.freescale.net:8181/6856
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Ruxandra Ioana Radulescu <ruxandra.radulescu@freescale.com>
Reviewed-by: Marian Cristian Rotariu <marian.rotariu@freescale.com>
Reviewed-by: Thomas Trefny <Tom.Trefny@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/7677
Reviewed-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
Tested-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
---
 .../net/ethernet/freescale/dpa/dpaa_eth_common.c   | 15 +++++++----
 .../net/ethernet/freescale/dpa/dpaa_eth_proxy.c    | 29 ++++++++++++++++------
 drivers/net/ethernet/freescale/dpa/offline_port.c  |  7 ++++--
 3 files changed, 37 insertions(+), 14 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index de082c7..2b02136 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -147,8 +147,11 @@ int __cold dpa_start(struct net_device *net_dev)
 		return err;
 	}
 
-	for_each_port_device(i, mac_dev->port_dev)
-		fm_port_enable(mac_dev->port_dev[i]);
+	for_each_port_device(i, mac_dev->port_dev) {
+		err = fm_port_enable(mac_dev->port_dev[i]);
+		if (err)
+			goto mac_start_failed;
+	}
 
 	err = priv->mac_dev->start(mac_dev);
 	if (err < 0) {
@@ -170,7 +173,7 @@ mac_start_failed:
 
 int __cold dpa_stop(struct net_device *net_dev)
 {
-	int _errno, i;
+	int _errno, i, err;
 	struct dpa_priv_s *priv;
 	struct mac_device *mac_dev;
 
@@ -189,8 +192,10 @@ int __cold dpa_stop(struct net_device *net_dev)
 			netdev_err(net_dev, "mac_dev->stop() = %d\n",
 					_errno);
 
-	for_each_port_device(i, mac_dev->port_dev)
-		fm_port_disable(mac_dev->port_dev[i]);
+	for_each_port_device(i, mac_dev->port_dev) {
+		err = fm_port_disable(mac_dev->port_dev[i]);
+		_errno = err ? err : _errno;
+	}
 
 	if (mac_dev->phy_dev)
 		phy_disconnect(mac_dev->phy_dev);
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_proxy.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_proxy.c
index 5b8af8d..5547d6c 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_proxy.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_proxy.c
@@ -155,10 +155,20 @@ static int dpaa_eth_proxy_probe(struct platform_device *_of_dev)
 	devm_kfree(dev, port_fqs.tx_defq);
 	devm_kfree(dev, port_fqs.tx_errq);
 
-	for_each_port_device(i, mac_dev->port_dev)
-		fm_port_enable(mac_dev->port_dev[i]);
+	for_each_port_device(i, mac_dev->port_dev) {
+		err = fm_port_enable(mac_dev->port_dev[i]);
+		if (err)
+			goto port_enable_fail;
+	}
 
 	return 0; /* Proxy interface initialization ended */
+
+port_enable_fail:
+	for_each_port_device(i, mac_dev->port_dev)
+		fm_port_disable(mac_dev->port_dev[i]);
+	dpa_eth_proxy_remove(_of_dev);
+
+	return err;
 }
 
 int dpa_proxy_set_mac_address(struct proxy_device *proxy_dev,
@@ -210,8 +220,11 @@ int dpa_proxy_start(struct net_device *net_dev)
 		return _errno;
 	}
 
-	for_each_port_device(i, mac_dev->port_dev)
-		fm_port_enable(mac_dev->port_dev[i]);
+	for_each_port_device(i, mac_dev->port_dev) {
+		_errno = fm_port_enable(mac_dev->port_dev[i]);
+		if (_errno)
+			goto port_enable_fail;
+	}
 
 	_errno = mac_dev->start(mac_dev);
 	if (_errno < 0) {
@@ -234,7 +247,7 @@ int dpa_proxy_stop(struct proxy_device *proxy_dev, struct net_device *net_dev)
 {
 	struct mac_device *mac_dev = proxy_dev->mac_dev;
 	const struct dpa_priv_s	*priv = netdev_priv(net_dev);
-	int _errno, i;
+	int _errno, i, err;
 
 	_errno = mac_dev->stop(mac_dev);
 	if (_errno < 0) {
@@ -244,8 +257,10 @@ int dpa_proxy_stop(struct proxy_device *proxy_dev, struct net_device *net_dev)
 		return _errno;
 	}
 
-	for_each_port_device(i, mac_dev->port_dev)
-		fm_port_disable(mac_dev->port_dev[i]);
+	for_each_port_device(i, mac_dev->port_dev) {
+		err = fm_port_disable(mac_dev->port_dev[i]);
+		_errno = err ? err : _errno;
+	}
 
 	if (mac_dev->phy_dev)
 		phy_disconnect(mac_dev->phy_dev);
diff --git a/drivers/net/ethernet/freescale/dpa/offline_port.c b/drivers/net/ethernet/freescale/dpa/offline_port.c
index 48af9f9..f91bd80 100644
--- a/drivers/net/ethernet/freescale/dpa/offline_port.c
+++ b/drivers/net/ethernet/freescale/dpa/offline_port.c
@@ -534,7 +534,10 @@ init_port:
 	dev_set_drvdata(dpa_oh_dev, oh_config);
 
 	/* Enable the OH port */
-	fm_port_enable(oh_config->oh_port);
+	_errno = fm_port_enable(oh_config->oh_port);
+	if (_errno)
+		goto return_kfree;
+
 	dev_info(dpa_oh_dev, "OH port %s enabled.\n", oh_node->full_name);
 
 	return 0;
@@ -578,7 +581,7 @@ static int __cold oh_port_remove(struct platform_device *_of_dev)
 		goto free_egress_fqs;
 	}
 
-	fm_port_disable(oh_config->oh_port);
+	_errno = fm_port_disable(oh_config->oh_port);
 
 free_egress_fqs:
 	if (oh_config->egress_fqs)
-- 
1.9.1

