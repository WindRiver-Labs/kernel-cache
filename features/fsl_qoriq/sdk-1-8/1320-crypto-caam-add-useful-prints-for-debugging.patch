From 6b94ec00e94c81c180f4ce7222dac0f7d8fcf4a4 Mon Sep 17 00:00:00 2001
From: Alex Porosanu <alexandru.porosanu@freescale.com>
Date: Wed, 11 Feb 2015 14:24:44 +0200
Subject: [PATCH 1320/1336] crypto: caam - add useful prints for debugging

This patch adds some output from the CAAM QI driver
so the engineer can gain some insight on some of
the internals of the driver. Normally, this
information should reside in debug fs, but for now
it's guarded by the DEBUG define.

Change-Id: Ic6b7e570bc8fcedd758fb4163e15c94544e47130
Signed-off-by: Alex Porosanu <alexandru.porosanu@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/31369
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Honghua Yin <Hong-Hua.Yin@freescale.com>
[Yang: Original patch taken from
QorIQ-SDK-V1.8-SOURCE-20150619-yocto.iso]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/crypto/caam/qi.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/drivers/crypto/caam/qi.c b/drivers/crypto/caam/qi.c
index 0a01674..52d3283 100644
--- a/drivers/crypto/caam/qi.c
+++ b/drivers/crypto/caam/qi.c
@@ -185,7 +185,10 @@ static struct qman_fq *create_caam_req_fq(struct device *qidev,
 		dev_err(qidev, "Failed to init session req FQ\n");
 		goto init_req_fq_fail;
 	}
-
+#ifdef DEBUG
+	dev_info(qidev, "Allocated request FQ %u for CPU %u\n",
+		 req_fq->fqid, smp_processor_id());
+#endif
 	return req_fq;
 
 init_req_fq_fail:
@@ -642,7 +645,10 @@ static int alloc_rsp_fq_cpu(struct device *qidev, unsigned int cpu, u32 pool)
 		dev_err(qidev, "Rsp FQ init failed\n");
 		return -ENODEV;
 	}
-
+#ifdef DEBUG
+	dev_info(qidev, "Allocated response FQ %u for CPU %u",
+		 fq->fqid, cpu);
+#endif
 	return 0;
 }
 
@@ -691,6 +697,9 @@ static int alloc_cgrs(struct device *qidev)
 			ret, qipriv.rsp_cgr.cgrid);
 		return ret;
 	}
+#ifdef DEBUG
+	dev_info(qidev, "CAAM to CPU threshold set to %llu\n", val);
+#endif
 	return 0;
 }
 
@@ -713,6 +722,7 @@ static int alloc_rsp_fqs(struct device *qidev)
 		dev_err(qidev, "CAAM pool alloc failed: %d\n", ret);
 		return ret;
 	}
+	dev_info(qidev, "Allocated pool %d\n", pool);
 
 	/*Now create response FQs*/
 	for_each_cpu(i, cpus) {
-- 
2.0.2

