From c3c5f2e8dc41bed1e7eadb6efc64d23931eb65c4 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Fri, 25 Dec 2015 14:41:06 +0800
Subject: [PATCH 2/2] spi: fsl_espi: move hw_disable_espi() to
 of_fsl_espi_suspend()

We must call hw_disable_espi() in of_fsl_espi_suspend(),
not fsl_espi_suspend(). Since fsl_espi_suspend() is also mapped to
master->unprepare_transfer_hardware, we can't disable eSPI controller
hardware in this process, else eSPI would hang sometimes.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/spi/spi-fsl-espi.c |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/spi/spi-fsl-espi.c b/drivers/spi/spi-fsl-espi.c
index 35231c8..13fb9d3 100644
--- a/drivers/spi/spi-fsl-espi.c
+++ b/drivers/spi/spi-fsl-espi.c
@@ -85,8 +85,6 @@ struct fsl_espi_transfer {
 #define SPCOM_TRANLEN(x)	((x) << 0)
 #define	SPCOM_TRANLEN_MAX	0xFFFF	/* Max transaction length */
 
-static int hw_disable_espi(int disable);
-
 static void fsl_espi_change_mode(struct spi_device *spi)
 {
 	struct mpc8xxx_spi *mspi = spi_master_get_devdata(spi->master);
@@ -624,8 +622,6 @@ static int fsl_espi_suspend(struct spi_master *master)
 	regval &= ~SPMODE_ENABLE;
 	mpc8xxx_spi_write_reg(&reg_base->mode, regval);
 
-	hw_disable_espi(true);
-
 	return 0;
 }
 
@@ -857,7 +853,11 @@ static int of_fsl_espi_suspend(struct device *dev)
 		return ret;
 	}
 
-	return fsl_espi_suspend(master);
+	ret = fsl_espi_suspend(master);
+
+	hw_disable_espi(true);
+
+	return ret;
 }
 
 static int of_fsl_espi_resume(struct device *dev)
-- 
1.7.5.4

