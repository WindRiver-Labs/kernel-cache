From 51fd58e020abe130b4ce2817f3f37bef187396ff Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Fri, 27 Feb 2015 17:52:26 +0800
Subject: [PATCH 845/987] fsl: bman: call kmalloc with GFP_ATOMIC

The kmalloc function may be called in atomic context in the
function bman_new_pool(), so call it with GFP_ATOMIC, else we would get
the below warning during kdump:
  BUG: sleeping function called from invalid context at mm/slub.c:926
  in_atomic(): 1, irqs_disabled(): 1, pid: 736, name: sh
  INFO: lockdep is turned off.
  irq event stamp: 0
  hardirqs last  enabled at (0): [<          (null)>]           (null)
  hardirqs last disabled at (0): [<c000000000066d1c>] .copy_process.part.44+0x50c/0x1360
  softirqs last  enabled at (0): [<c000000000066d1c>] .copy_process.part.44+0x50c/0x1360
  softirqs last disabled at (0): [<          (null)>]           (null)
  CPU: 0 PID: 736 Comm: sh Tainted: G      D W    3.10.62-ltsi-WR6.0.0.0_standard #1
  Call Trace:
  [c0000000f4c36e60] [c00000000000b150] .show_stack+0x170/0x290 (unreliable)
  [c0000000f4c36f50] [c000000000b71334] .dump_stack+0x28/0x3c
  [c0000000f4c36fc0] [c0000000000bb5d8] .__might_sleep+0x1a8/0x270
  [c0000000f4c37050] [c0000000001f6504] .kmem_cache_alloc_trace+0x1d4/0x420
  [c0000000f4c37110] [c000000000930e98] .bman_new_pool+0xf8/0x460
  [c0000000f4c371b0] [c0000000009334d0] .bman_drain_one_pool+0xb0/0x160
  [c0000000f4c372f0] [c00000000093362c] .bman_crash_shutdown+0xac/0x130
  [c0000000f4c373a0] [c00000000002b824] .default_machine_crash_shutdown+0x194/0x1f0
  [c0000000f4c37430] [c00000000002ac80] .machine_crash_shutdown+0x20/0x40
  [c0000000f4c374b0] [c00000000010956c] .crash_kexec+0x7c/0x100
  [c0000000f4c376a0] [c000000000015df8] .die+0x348/0x450
  [c0000000f4c37740] [c00000000002f3a0] .bad_page_fault+0xe0/0x130
  [c0000000f4c377c0] [c00000000001f3e4] storage_fault_common+0x40/0x44
  --- Exception: 300 at .sysrq_handle_crash+0x2c/0x40

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/bman_high.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_high.c b/drivers/staging/fsl_qbman/bman_high.c
index f0aa67f..fd6ebac 100644
--- a/drivers/staging/fsl_qbman/bman_high.c
+++ b/drivers/staging/fsl_qbman/bman_high.c
@@ -666,7 +666,7 @@ struct bman_pool *bman_new_pool(const struct bman_pool_params *params)
 	if (params->flags & BMAN_POOL_FLAG_THRESH)
 		goto err;
 #endif
-	pool = kmalloc(sizeof(*pool), GFP_KERNEL);
+	pool = kmalloc(sizeof(*pool), GFP_ATOMIC);
 	if (!pool)
 		goto err;
 	pool->sp = NULL;
@@ -679,7 +679,7 @@ struct bman_pool *bman_new_pool(const struct bman_pool_params *params)
 		pool->params.bpid = bpid;
 	if (params->flags & BMAN_POOL_FLAG_STOCKPILE) {
 		pool->sp = kmalloc(sizeof(struct bm_buffer) * BMAN_STOCKPILE_SZ,
-					GFP_KERNEL);
+					GFP_ATOMIC);
 		if (!pool->sp)
 			goto err;
 	}
-- 
1.9.1

