From add21f984914718ce56eaf1b032d36f34e79b513 Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Tue, 29 Jul 2014 16:03:38 +0300
Subject: [PATCH 863/987] dpaa_eth: exports needed by the advanced drivers

Add symbol exports required by the advanced drivers.

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: I66f280f8ec9fb1da73dc2db772c0287360fa5417
Reviewed-on: http://git.am.freescale.net:8181/15300
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Cristian Bercaru <cristian.bercaru@freescale.com>

Conflicts:
	drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
[Yang: Original patch taken from
QorIQ-SDK-V1.8-SOURCE-20150619-yocto.iso.
Fix context to apply to WRL.]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../net/ethernet/freescale/dpa/dpaa_eth_common.c   | 36 +++++++++++++++++++++-
 .../net/ethernet/freescale/dpa/dpaa_eth_sysfs.c    |  1 +
 2 files changed, 36 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index bf87f59..88c19073 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -65,7 +65,11 @@ struct ptp_priv_s ptp_priv;
 static struct dpa_bp *dpa_bp_array[64];
 
 int dpa_max_frm;
+EXPORT_SYMBOL(dpa_max_frm);
+
 int dpa_rx_extra_headroom;
+EXPORT_SYMBOL(dpa_rx_extra_headroom);
+
 int dpa_num_cpus = NR_CPUS;
 
 static const struct fqid_cell tx_confirm_fqids[] = {
@@ -137,6 +141,7 @@ int dpa_netdev_init(struct device_node *dpa_node,
 
 	return 0;
 }
+EXPORT_SYMBOL(dpa_netdev_init);
 
 int __cold dpa_start(struct net_device *net_dev)
 {
@@ -177,6 +182,7 @@ mac_start_failed:
 
 	return err;
 }
+EXPORT_SYMBOL(dpa_start);
 
 int __cold dpa_stop(struct net_device *net_dev)
 {
@@ -210,6 +216,7 @@ int __cold dpa_stop(struct net_device *net_dev)
 
 	return _errno;
 }
+EXPORT_SYMBOL(dpa_stop);
 
 void __cold dpa_timeout(struct net_device *net_dev)
 {
@@ -225,6 +232,7 @@ void __cold dpa_timeout(struct net_device *net_dev)
 
 	percpu_priv->stats.tx_errors++;
 }
+EXPORT_SYMBOL(dpa_timeout);
 
 /* net_device */
 
@@ -258,6 +266,7 @@ dpa_get_stats64(struct net_device *net_dev,
 
 	return stats;
 }
+EXPORT_SYMBOL(dpa_get_stats64);
 
 int dpa_change_mtu(struct net_device *net_dev, int new_mtu)
 {
@@ -273,6 +282,7 @@ int dpa_change_mtu(struct net_device *net_dev, int new_mtu)
 
 	return 0;
 }
+EXPORT_SYMBOL(dpa_change_mtu);
 
 /* .ndo_init callback */
 int dpa_ndo_init(struct net_device *net_dev)
@@ -291,6 +301,7 @@ int dpa_ndo_init(struct net_device *net_dev)
 
 	return 0;
 }
+EXPORT_SYMBOL(dpa_ndo_init);
 
 int dpa_set_features(struct net_device *dev, netdev_features_t features)
 {
@@ -298,6 +309,7 @@ int dpa_set_features(struct net_device *dev, netdev_features_t features)
 	dev->features = features;
 	return 0;
 }
+EXPORT_SYMBOL(dpa_set_features);
 
 netdev_features_t dpa_fix_features(struct net_device *dev,
 		netdev_features_t features)
@@ -315,6 +327,7 @@ netdev_features_t dpa_fix_features(struct net_device *dev,
 
 	return features;
 }
+EXPORT_SYMBOL(dpa_fix_features);
 
 #ifdef CONFIG_FSL_DPAA_TS
 u64 dpa_get_timestamp_ns(const struct dpa_priv_s *priv, enum port_type rx_tx,
@@ -476,6 +489,7 @@ int dpa_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 
 	return ret;
 }
+EXPORT_SYMBOL(dpa_ioctl);
 
 int __cold dpa_remove(struct platform_device *of_dev)
 {
@@ -520,6 +534,7 @@ int __cold dpa_remove(struct platform_device *of_dev)
 
 	return err;
 }
+EXPORT_SYMBOL(dpa_remove);
 
 #if defined(CONFIG_KEXEC)
 void __cold dpa_shutdown(struct platform_device *of_dev)
@@ -614,6 +629,7 @@ dpa_mac_probe(struct platform_device *_of_dev)
 #endif
 	return mac_dev;
 }
+EXPORT_SYMBOL(dpa_mac_probe);
 
 int dpa_set_mac_address(struct net_device *net_dev, void *addr)
 {
@@ -646,6 +662,7 @@ int dpa_set_mac_address(struct net_device *net_dev, void *addr)
 
 	return 0;
 }
+EXPORT_SYMBOL(dpa_set_mac_address);
 
 void dpa_set_rx_mode(struct net_device *net_dev)
 {
@@ -669,6 +686,7 @@ void dpa_set_rx_mode(struct net_device *net_dev)
 	if (unlikely(_errno < 0) && netif_msg_drv(priv))
 		netdev_err(net_dev, "mac_dev->set_multi() = %d\n", _errno);
 }
+EXPORT_SYMBOL(dpa_set_rx_mode);
 
 void dpa_set_buffers_layout(struct mac_device *mac_dev,
 		struct dpa_buffer_layout_s *layout)
@@ -700,6 +718,7 @@ void dpa_set_buffers_layout(struct mac_device *mac_dev,
 	layout[TX].manip_extra_space = params.manip_extra_space;
 	layout[TX].data_align = params.data_align ? : DPA_FD_DATA_ALIGNMENT;
 }
+EXPORT_SYMBOL(dpa_set_buffers_layout);
 
 int __attribute__((nonnull))
 dpa_bp_alloc(struct dpa_bp *dpa_bp)
@@ -770,6 +789,7 @@ pdev_register_failed:
 
 	return err;
 }
+EXPORT_SYMBOL(dpa_bp_alloc);
 
 void dpa_bp_drain(struct dpa_bp *bp)
 {
@@ -838,11 +858,13 @@ dpa_bp_free(struct dpa_priv_s *priv, struct dpa_bp *dpa_bp)
 	for (i = 0; i < priv->bp_count; i++)
 		_dpa_bp_free(&priv->dpa_bp[i]);
 }
+EXPORT_SYMBOL(dpa_bp_free);
 
 struct dpa_bp *dpa_bpid2pool(int bpid)
 {
 	return dpa_bp_array[bpid];
 }
+EXPORT_SYMBOL(dpa_bpid2pool);
 
 void dpa_bpid2pool_map(int bpid, struct dpa_bp *dpa_bp)
 {
@@ -866,6 +888,7 @@ u16 dpa_select_queue(struct net_device *net_dev, struct sk_buff *skb,
 {
 	return dpa_get_queue_mapping(skb);
 }
+EXPORT_SYMBOL(dpa_select_queue);
 #endif
 
 struct dpa_fq *dpa_fq_alloc(struct device *dev,
@@ -898,6 +921,7 @@ struct dpa_fq *dpa_fq_alloc(struct device *dev,
 
 	return dpa_fq;
 }
+EXPORT_SYMBOL(dpa_fq_alloc);
 
 /* Probing of FQs for MACful ports */
 int dpa_fq_probe_mac(struct device *dev, struct list_head *list,
@@ -982,6 +1006,7 @@ invalid_error_queue:
 	dev_err(dev, "Too many default or error queues\n");
 	return -EINVAL;
 }
+EXPORT_SYMBOL(dpa_fq_probe_mac);
 
 static u32 rx_pool_channel;
 static DEFINE_SPINLOCK(rx_pool_channel_init);
@@ -1000,6 +1025,7 @@ int dpa_get_channel(void)
 		return -ENOMEM;
 	return rx_pool_channel;
 }
+EXPORT_SYMBOL(dpa_get_channel);
 
 int dpaa_eth_add_channel(void *__arg)
 {
@@ -1014,6 +1040,7 @@ int dpaa_eth_add_channel(void *__arg)
 	}
 	return 0;
 }
+EXPORT_SYMBOL(dpaa_eth_add_channel);
 
 /**
  * Congestion group state change notification callback.
@@ -1022,6 +1049,7 @@ int dpaa_eth_add_channel(void *__arg)
  * Also updates some CGR-related stats.
  */
 static void dpaa_eth_cgscn(struct qman_portal *qm, struct qman_cgr *cgr,
+
 	int congested)
 {
 	struct dpa_priv_s *priv = (struct dpa_priv_s *)container_of(cgr,
@@ -1084,6 +1112,7 @@ int dpaa_eth_cgr_init(struct dpa_priv_s *priv)
 out_error:
 	return err;
 }
+EXPORT_SYMBOL(dpaa_eth_cgr_init);
 
 static inline void dpa_setup_ingress(const struct dpa_priv_s *priv,
 				     struct dpa_fq *fq,
@@ -1341,6 +1370,7 @@ int dpa_fq_init(struct dpa_fq *dpa_fq, bool td_enable)
 
 	return 0;
 }
+EXPORT_SYMBOL(dpa_fq_init);
 
 static int __cold __attribute__((nonnull))
 _dpa_fq_free(struct device *dev, struct qman_fq *fq)
@@ -1390,6 +1420,7 @@ dpa_fq_free(struct device *dev, struct list_head *list)
 
 	return _errno;
 }
+EXPORT_SYMBOL(dpa_fq_free);
 
 static void
 dpaa_eth_init_tx_port(struct fm_port *port, struct dpa_fq *errq,
@@ -1476,6 +1507,7 @@ void dpaa_eth_init_ports(struct mac_device *mac_dev,
 	rx_port_pcd_param.dev = dev;
 	fm_port_pcd_bind(rxport, &rx_port_pcd_param);
 }
+EXPORT_SYMBOL(dpaa_eth_init_ports);
 
 void dpa_release_sgt(struct qm_sg_entry *sgt)
 {
@@ -1503,6 +1535,7 @@ void dpa_release_sgt(struct qm_sg_entry *sgt)
 			cpu_relax();
 	} while (!sgt[i-1].final);
 }
+EXPORT_SYMBOL(dpa_release_sgt);
 
 void __attribute__((nonnull))
 dpa_fd_release(const struct net_device *net_dev, const struct qm_fd *fd)
@@ -1557,7 +1590,7 @@ void count_ern(struct dpa_percpu_priv_s *percpu_priv,
 		break;
 	}
 }
-
+EXPORT_SYMBOL(count_ern);
 
 /**
  * Turn on HW checksum computation for this outgoing frame.
@@ -1661,3 +1694,4 @@ int dpa_enable_tx_csum(struct dpa_priv_s *priv,
 return_error:
 	return retval;
 }
+EXPORT_SYMBOL(dpa_enable_tx_csum);
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c
index cd8b7d1..36f65a1 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c
@@ -233,6 +233,7 @@ void dpaa_eth_sysfs_init(struct device *dev)
 			return;
 		}
 }
+EXPORT_SYMBOL(dpaa_eth_sysfs_init);
 
 void dpaa_eth_sysfs_remove(struct device *dev)
 {
-- 
1.9.1

