From 49da1d9225ac2ceab1e5b9e9592ca259703a5ac6 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Wed, 18 Nov 2015 19:18:44 +0800
Subject: [PATCH 1342/1350] Revert "qman: add sync protect when do kexec fast
 reboot"

In function "qman_static_dequeue_del_ex", it has PORTAL_IRQ_{UN}LOCK
to prevent qman_portal from race condition. So delete redundant locks.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/staging/fsl_qbman/qman_config.c |  3 ---
 drivers/staging/fsl_qbman/qman_high.c   | 14 --------------
 include/linux/fsl_qman.h                |  6 ------
 3 files changed, 23 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index 5c83836..1ebbbb8 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -1142,12 +1142,9 @@ void of_fsl_qman_shutdown(struct platform_device *ofdev)
 {
 	int cpu;
 	struct qman_portal *p;
-	unsigned long irqflags __maybe_unused; 
 	for_each_online_cpu(cpu) {
 		p = per_cpu_affine_portal(cpu);
-		qman_portal_lock(p,irqflags);
 		qman_static_dequeue_del_ex(p, ~0);
-		qman_portal_unlock(p,irqflags);
 	}
 	return;
 };
diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 6b18b33..ebd1f05 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -417,20 +417,6 @@ static int qm_drain_dqrr(struct qm_portal *p)
 	qm_isr_status_clear(p, 0xffffffff);
 	return 0;
 }
-
-int qman_portal_lock(struct qman_portal *p,unsigned long irqflags)
-{
-    spin_lock_irqsave(&p->cgr_lock, irqflags);
-    return 0;
-
-}
-
-int qman_portal_unlock(struct qman_portal *p,unsigned long irqflags)
-{
-    spin_unlock_irqrestore(&p->cgr_lock, irqflags);
-    return 0;
-} 
-
 #else
 static inline int qm_drain_dqrr(struct qm_portal *p) { return 1; }
 #endif
diff --git a/include/linux/fsl_qman.h b/include/linux/fsl_qman.h
index 94031e1..1adf5ac 100644
--- a/include/linux/fsl_qman.h
+++ b/include/linux/fsl_qman.h
@@ -1775,12 +1775,6 @@ void qman_static_dequeue_del_ex(struct qman_portal *p, u32 pools);
  */
 struct qman_portal *per_cpu_affine_portal(int cpu);
 
-#if defined(CONFIG_KEXEC)
-
-int qman_portal_lock(struct qman_portal *p,unsigned long irqflags);
-int qman_portal_unlock(struct qman_portal *p,unsigned long irqflags) ;
-#endif
-
 /**
  * qman_static_dequeue_get - return the portal's current SDQCR
  *
-- 
2.0.2

