From fa0ad09c47b0666b2291ab9ad90ef7180fe25e19 Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Fri, 17 Jan 2014 10:35:39 -0600
Subject: [PATCH 513/987] fsl_qman: Use kzalloc()

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

This fixes the following coccinelle warning:

WARNING: kzalloc should be used for pool -> bits, instead of kmalloc/memset

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: I172b15783db73e57612ad9b5fa4b6d9f37e4b72b
Reviewed-on: http://git.am.freescale.net:8181/8108
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Haiying Wang <Haiying.Wang@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
---
 drivers/staging/fsl_qbman/qman_utility.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_utility.c b/drivers/staging/fsl_qbman/qman_utility.c
index fa2f40b..f1e3902 100644
--- a/drivers/staging/fsl_qbman/qman_utility.c
+++ b/drivers/staging/fsl_qbman/qman_utility.c
@@ -69,12 +69,11 @@ struct qman_fqid_pool *qman_fqid_pool_create(u32 fqid_start, u32 num)
 	pool->total = num;
 	pool->used = 0;
 	pool->next = 0;
-	pool->bits = kmalloc(QNUM_BYTES(num), GFP_KERNEL);
+	pool->bits = kzalloc(QNUM_BYTES(num), GFP_KERNEL);
 	if (!pool->bits) {
 		kfree(pool);
 		return NULL;
 	}
-	memset(pool->bits, 0, QNUM_BYTES(num));
 	/* If num is not an even multiple of QLONG_BITS (or even 8, for
 	 * byte-oriented searching) then we fill the trailing bits with 1, to
 	 * make them look allocated (permanently). */
-- 
1.9.1

