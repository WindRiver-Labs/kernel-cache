From c4d96584e1c9f872438cf0361cde99824d0b9aef Mon Sep 17 00:00:00 2001
From: Rotariu Marian Cristian-B44860 <marian.rotariu@freescale.com>
Date: Thu, 9 Oct 2014 15:43:37 +0300
Subject: [PATCH 885/987] dpaa_eth: fix static declarations for onic

The function should be properly declared as being extern or static. The lack
of scope identifier will result in a sparse error.

Change-Id: I32713c3c806ed6d14ae9c33d732fe42aec354b2f
Signed-off-by: Rotariu Marian Cristian-B44860 <marian.rotariu@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/20906
Reviewed-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/32497
[Yang: Original patch taken from
QorIQ-SDK-V1.8-SOURCE-20150619-yocto.iso]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../net/ethernet/freescale/dpa/dpaa_eth_generic.c  | 50 +++++++++++-----------
 1 file changed, 25 insertions(+), 25 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_generic.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_generic.c
index c43766d..5f772d3 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_generic.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_generic.c
@@ -104,7 +104,7 @@ static const struct net_device_ops dpa_generic_ops = {
 	.ndo_change_mtu = dpa_change_mtu,
 };
 
-void dpa_generic_draining_timer(unsigned long arg)
+static void dpa_generic_draining_timer(unsigned long arg)
 {
 	struct dpa_generic_priv_s *priv = (struct dpa_generic_priv_s *)arg;
 
@@ -173,7 +173,7 @@ static struct platform_driver dpa_generic_driver = {
 	.remove		= dpa_generic_remove
 };
 
-int get_port_ref(struct device_node dev_node,
+static int get_port_ref(struct device_node dev_node,
 		  struct fm_port **port)
 {
 	const phandle *dpa_port_ref_node = NULL;
@@ -498,10 +498,10 @@ static void dpa_generic_drain_bp(struct dpa_bp *bp, u8 nbuf)
  * Note that this function may modify the fd->cmd field and the skb data buffer
  * (the Parse Results area).
  */
-int dpa_generic_tx_csum(struct dpa_generic_priv_s *priv,
-			struct sk_buff *skb,
-			struct qm_fd *fd,
-			char *parse_results)
+static int dpa_generic_tx_csum(struct dpa_generic_priv_s *priv,
+			       struct sk_buff *skb,
+			       struct qm_fd *fd,
+			       char *parse_results)
 {
 	fm_prs_result_t *parse_result;
 	struct iphdr *iph;
@@ -717,7 +717,7 @@ static int dpa_generic_napi_add(struct net_device *net_dev)
 	return 0;
 }
 
-void dpa_generic_napi_del(struct net_device *net_dev)
+static void dpa_generic_napi_del(struct net_device *net_dev)
 {
 	struct dpa_generic_priv_s *priv = netdev_priv(net_dev);
 	struct dpa_percpu_priv_s *percpu_priv;
@@ -784,14 +784,14 @@ static int dpa_generic_netdev_init(struct device_node *dpa_node,
 	return 0;
 }
 
-struct dpa_fq_cbs_t generic_fq_cbs = {
+static struct dpa_fq_cbs_t generic_fq_cbs = {
 	.rx_defq = { .cb = { .dqrr = dpa_generic_rx_dqrr } },
 	.rx_errq = { .cb = { .dqrr = dpa_generic_rx_err_dqrr } },
 	.egress_ern = { .cb = { .ern = dpa_generic_ern } }
 };
 
-struct list_head *dpa_generic_fq_probe(struct platform_device *_of_dev,
-					struct fm_port *tx_port)
+static struct list_head *dpa_generic_fq_probe(struct platform_device *_of_dev,
+					      struct fm_port *tx_port)
 {
 	struct device *dev = &_of_dev->dev;
 	struct device_node *dev_node = NULL;
@@ -1010,10 +1010,10 @@ _return_of_node_put:
 	return err;
 }
 
-int dpa_generic_tx_bp_probe(struct platform_device *_of_dev,
-			    struct fm_port *tx_port,
-			    struct dpa_bp **draining_tx_bp,
-			    struct dpa_buffer_layout_s **tx_buf_layout)
+static int dpa_generic_tx_bp_probe(struct platform_device *_of_dev,
+				   struct fm_port *tx_port,
+				   struct dpa_bp **draining_tx_bp,
+				   struct dpa_buffer_layout_s **tx_buf_layout)
 {
 	struct device *dev = &_of_dev->dev;
 	struct fm_port_params params;
@@ -1051,8 +1051,8 @@ int dpa_generic_tx_bp_probe(struct platform_device *_of_dev,
 	return 0;
 }
 
-int dpa_generic_buff_dealloc_probe(struct platform_device *_of_dev,
-				   int *disable_buff_dealloc)
+static int dpa_generic_buff_dealloc_probe(struct platform_device *_of_dev,
+					  int *disable_buff_dealloc)
 {
 	struct device *dev = &_of_dev->dev;
 	const phandle *disable_handle = NULL;
@@ -1067,9 +1067,9 @@ int dpa_generic_buff_dealloc_probe(struct platform_device *_of_dev,
 	return err;
 }
 
-int dpa_generic_port_probe(struct platform_device *_of_dev,
-			   struct fm_port **rx_port,
-			   struct fm_port **tx_port)
+static int dpa_generic_port_probe(struct platform_device *_of_dev,
+				  struct fm_port **rx_port,
+				  struct fm_port **tx_port)
 {
 	struct device *dev = &_of_dev->dev;
 	struct device_node *dev_node = NULL;
@@ -1308,12 +1308,12 @@ static int dpa_generic_fq_create(struct net_device *netdev,
 	return 0;
 }
 
-int dpa_generic_bp_create(struct net_device *net_dev,
-			  int rx_bp_count,
-			  struct dpa_bp *rx_bp,
-			  struct dpa_buffer_layout_s *rx_buf_layout,
-			  struct dpa_bp *draining_tx_bp,
-			  struct dpa_buffer_layout_s *tx_buf_layout)
+static int dpa_generic_bp_create(struct net_device *net_dev,
+				 int rx_bp_count,
+				 struct dpa_bp *rx_bp,
+				 struct dpa_buffer_layout_s *rx_buf_layout,
+				 struct dpa_bp *draining_tx_bp,
+				 struct dpa_buffer_layout_s *tx_buf_layout)
 {
 	struct dpa_generic_priv_s *priv = netdev_priv(net_dev);
 	int err = 0;
-- 
1.9.1

