From 49a012d676ac985c5c3c0b879328f52de7004f90 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Thu, 19 Nov 2015 16:19:28 +0800
Subject: [PATCH 1346/1350] fsl_qman:remove unused functions to fix compile
 warning

Fix following compile warning introduced by fsl_qman driver:

drivers/staging/fsl_qbman/qman_high.c:406:12: warning: 'qm_drain_dqrr' defined but not used [-Wunused-function]
 static int qm_drain_dqrr(struct qm_portal *p)
            ^
drivers/staging/fsl_qbman/qman_high.c:2861:12: warning: 'qman_ceetm_query_lfqmt' defined but not used [-Wunused-function]
 static int qman_ceetm_query_lfqmt(int lfqid,
            ^

drivers/staging/fsl_qbman/qman_high.c:3289:12: warning: 'qman_ceetm_write_statistics' defined but not used [-Wunused-function]
 static int qman_ceetm_write_statistics(u16 cid, enum qm_dc_portal dcp_idx,
            ^
drivers/staging/fsl_qbman/qman_config.c: In function 'qm_reserve_memory':
drivers/staging/fsl_qbman/qman_config.c:368:6: warning: unused variable 'unknown_hole_size' [-Wunused-variable]
  u32 unknown_hole_size = 0;
      ^
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/staging/fsl_qbman/qman_config.c |  1 -
 drivers/staging/fsl_qbman/qman_high.c   | 86 ---------------------------------
 2 files changed, 87 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index 1ebbbb8..c1108f3 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -365,7 +365,6 @@ static void qm_reserve_memory(struct qman *qm, enum qm_memory memory)
 	u64 end = 0;
 	u32 exp = 0;
 	u32 size = 0;
-	u32 unknown_hole_size = 0;
 	u32 offset = (memory == qm_memory_fqd) ? REG_FQD_BARE : REG_PFDR_BARE;
 	int ret;
 
diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index ebd1f05..251bd99 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -402,25 +402,6 @@ struct dev_pm_domain qman_portal_device_pm_domain = {
 	}
 };
 
-#if defined(CONFIG_KEXEC) || defined(CONFIG_CRASH_DUMP)
-static int qm_drain_dqrr(struct qm_portal *p)
-{
-	const struct qm_dqrr_entry *dq;
-	while (1) {
-		qm_dqrr_pvb_update(p);
-		dq = qm_dqrr_current(p);
-		if (!dq)
-			break;
-		qm_dqrr_cdc_consume_1ptr(p, dq, 0);
-		qm_dqrr_next(p);
-	}
-	qm_isr_status_clear(p, 0xffffffff);
-	return 0;
-}
-#else
-static inline int qm_drain_dqrr(struct qm_portal *p) { return 1; }
-#endif
-
 struct qman_portal *qman_create_portal(
 			struct qman_portal *portal,
 			const struct qm_portal_config *config,
@@ -2844,37 +2825,6 @@ static int qman_ceetm_configure_lfqmt(struct qm_mcc_ceetm_lfqmt_config *opts)
 	return 0;
 }
 
-static int qman_ceetm_query_lfqmt(int lfqid,
-			struct qm_mcr_ceetm_lfqmt_query *lfqmt_query)
-{
-	struct qm_mc_command *mcc;
-	struct qm_mc_result *mcr;
-	struct qman_portal *p;
-	unsigned long irqflags __maybe_unused;
-	u8 res;
-
-	p = get_affine_portal();
-	PORTAL_IRQ_LOCK(p, irqflags);
-
-	mcc = qm_mc_start(&p->p);
-	mcc->lfqmt_query.lfqid = lfqid;
-	qm_mc_commit(&p->p, QM_CEETM_VERB_LFQMT_QUERY);
-	while (!(mcr = qm_mc_result(&p->p)))
-		cpu_relax();
-	DPA_ASSERT((mcr->verb & QM_MCR_VERB_MASK) == QM_CEETM_VERB_LFQMT_QUERY);
-	res = mcr->result;
-	if (res == QM_MCR_RESULT_OK)
-		*lfqmt_query = mcr->lfqmt_query;
-
-	PORTAL_IRQ_UNLOCK(p, irqflags);
-	put_affine_portal();
-	if (res != QM_MCR_RESULT_OK) {
-		pr_err("CEETM: QUERY LFQMT failed\n");
-		return -EIO;
-	}
-	return 0;
-}
-
 static int qman_ceetm_configure_cq(struct qm_mcc_ceetm_cq_config *opts)
 {
 	struct qm_mc_command *mcc;
@@ -3272,42 +3222,6 @@ static int qman_ceetm_query_statistics(u16 cid,
 	return 0;
 }
 
-static int qman_ceetm_write_statistics(u16 cid, enum qm_dc_portal dcp_idx,
-			u16 command_type, u64 frame_count, u64 byte_count)
-{
-	struct qm_mc_command *mcc;
-	struct qm_mc_result *mcr;
-	struct qman_portal *p;
-	unsigned long irqflags __maybe_unused;
-	u8 res;
-
-	p = get_affine_portal();
-	PORTAL_IRQ_LOCK(p, irqflags);
-
-	mcc = qm_mc_start(&p->p);
-	mcc->stats_query_write.cid = cid;
-	mcc->stats_query_write.dcpid = dcp_idx;
-	mcc->stats_query_write.ct = command_type;
-	mcc->stats_query_write.frm_cnt = frame_count;
-	mcc->stats_query_write.byte_cnt = byte_count;
-	qm_mc_commit(&p->p, QM_CEETM_VERB_STATISTICS_QUERY_WRITE);
-
-	while (!(mcr = qm_mc_result(&p->p)))
-		cpu_relax();
-	DPA_ASSERT((mcr->verb & QM_MCR_VERB_MASK) ==
-					 QM_CEETM_VERB_STATISTICS_QUERY_WRITE);
-
-	PORTAL_IRQ_UNLOCK(p, irqflags);
-	put_affine_portal();
-
-	res = mcr->result;
-	if (res != QM_MCR_RESULT_OK) {
-		pr_err("CEETM: STATISTICS WRITE failed\n");
-		return -EIO;
-	}
-	return 0;
-}
-
 int qman_ceetm_bps2tokenrate(u64 bps, struct qm_ceetm_rate *token_rate,
 							int rounding)
 {
-- 
2.0.2

