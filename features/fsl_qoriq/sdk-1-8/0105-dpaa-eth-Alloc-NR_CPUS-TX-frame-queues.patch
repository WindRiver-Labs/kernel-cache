From fab97b26a445d37560520ef7de756947e9f07a40 Mon Sep 17 00:00:00 2001
From: Cristian Sovaiala <cristian.sovaiala@freescale.com>
Date: Wed, 3 Apr 2013 15:32:27 +0000
Subject: [PATCH 105/987] dpaa-eth: Alloc NR_CPUS TX frame queues

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

No matter the number of TX frame queues specified in the device
tree we allocate one frame queue for each CPU.
For a number of frame queues smaller than the number of CPUs,
certain queues will be allocated to more than one CPU.
For a larger number of frame queues than available CPUs, a
number of NR_CPUS frame queues will be used only.

Signed-off-by: Cristian Sovaiala <cristian.sovaiala@freescale.com>
Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: Ie00aae47d03ffed7d3e0b5e449557ab4c01e3288
Reviewed-on: http://git.am.freescale.net:8181/1535
Reviewed-by: Hamciuc Bogdan-BHAMCIU1 <bogdan.hamciuc@freescale.com>
Reviewed-by: Sovaiala Cristian-Constantin-B39531 <Cristian.Sovaiala@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index 150a67d..ca89bcb 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -3704,18 +3704,17 @@ static void dpa_setup_egress(struct dpa_priv_s *priv,
 				struct fm_port *port)
 {
 	struct list_head *ptr = &fq->list;
+	struct dpa_fq *iter;
 	int i = 0;
 
 	while (true) {
-		struct dpa_fq *iter = list_entry(ptr, struct dpa_fq, list);
+		iter = list_entry(ptr, struct dpa_fq, list);
 		if (priv->shared)
 			iter->fq_base = shared_egress_fq;
 		else
 			iter->fq_base = private_egress_fq;
 
 		iter->net_dev = priv->net_dev;
-		priv->egress_fqs[i++] = &iter->fq_base;
-
 		if (port) {
 			iter->flags = QMAN_FQ_FLAG_TO_DCPORTAL;
 			iter->channel = fm_get_tx_port_channel(port);
@@ -3727,6 +3726,17 @@ static void dpa_setup_egress(struct dpa_priv_s *priv,
 
 		ptr = ptr->next;
 	}
+
+	/* Allocate frame queues to all available CPUs no matter the number of
+	 * queues specified in device tree.
+	 */
+	for (i = 0; i < DPAA_ETH_TX_QUEUES; i++) {
+		iter = list_entry(ptr, struct dpa_fq, list);
+		priv->egress_fqs[i] = &iter->fq_base;
+
+		if (list_is_last(ptr, head))
+			ptr = &fq->list;
+	}
 }
 
 #ifdef CONFIG_DPA_TX_RECYCLE
-- 
1.9.1

