From 1114f2cd9a76c751452a430d59d19390c06eb110 Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Wed, 8 Jan 2014 04:41:02 -0600
Subject: [PATCH 485/987] fsl_qbman: Fix the checkpatch warning type
 SINGLE_STATEMENT_DO_WHILE_MACRO

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: Ifc31cefb5ff0c0030516c24171d80a0816c3d809
Reviewed-on: http://git.am.freescale.net:8181/7782
Reviewed-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Reviewed-by: Haiying Wang <Haiying.Wang@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
Tested-by: Emilian Medve <Emilian.Medve@freescale.com>
---
 drivers/staging/fsl_qbman/bman_high.c |  2 +-
 drivers/staging/fsl_qbman/dpa_alloc.c |  4 ++--
 drivers/staging/fsl_qbman/dpa_sys.h   | 45 +++++++----------------------------
 drivers/staging/fsl_qbman/qman_high.c |  2 +-
 4 files changed, 13 insertions(+), 40 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_high.c b/drivers/staging/fsl_qbman/bman_high.c
index 6efc2fa..bcfc5e8 100644
--- a/drivers/staging/fsl_qbman/bman_high.c
+++ b/drivers/staging/fsl_qbman/bman_high.c
@@ -115,7 +115,7 @@ static inline struct bman_portal *get_poll_portal(void)
 {
 	return &__get_cpu_var(bman_affine_portal);
 }
-#define put_poll_portal() do { ; } while (0)
+#define put_poll_portal()
 
 /* GOTCHA: this object type refers to a pool, it isn't *the* pool. There may be
  * more than one such object per Bman buffer pool, eg. if different users of the
diff --git a/drivers/staging/fsl_qbman/dpa_alloc.c b/drivers/staging/fsl_qbman/dpa_alloc.c
index 62363ba..545adc9 100644
--- a/drivers/staging/fsl_qbman/dpa_alloc.c
+++ b/drivers/staging/fsl_qbman/dpa_alloc.c
@@ -430,8 +430,8 @@ static void DUMP(struct dpa_alloc *alloc)
 
 }
 #else
-#define DPRINT(x...)	do { ; } while (0)
-#define DUMP(a)		do { ; } while (0)
+#define DPRINT(x...)
+#define DUMP(a)
 #endif
 
 int dpa_alloc_new(struct dpa_alloc *alloc, u32 *result, u32 count, u32 align,
diff --git a/drivers/staging/fsl_qbman/dpa_sys.h b/drivers/staging/fsl_qbman/dpa_sys.h
index 7e1e953..f9734b3 100644
--- a/drivers/staging/fsl_qbman/dpa_sys.h
+++ b/drivers/staging/fsl_qbman/dpa_sys.h
@@ -81,40 +81,16 @@
  * barriers and that dcb*() won't fall victim to compiler or execution
  * reordering with respect to other code/instructions that manipulate the same
  * cacheline. */
-#define hwsync() \
-	do { \
-		__asm__ __volatile__ ("sync" : : : "memory"); \
-	} while (0)
-#define lwsync() \
-	do { \
-		__asm__ __volatile__ (stringify_in_c(LWSYNC) : : : "memory"); \
-	} while (0)
-#define dcbf(p) \
-	do { \
-		__asm__ __volatile__ ("dcbf 0,%0" : : "r" (p) : "memory"); \
-	} while (0)
-#define dcbt_ro(p) \
-	do { \
-		__asm__ __volatile__ ("dcbt 0,%0" : : "r" (p)); \
-	} while (0)
-#define dcbt_rw(p) \
-	do { \
-		__asm__ __volatile__ ("dcbtst 0,%0" : : "r" (p)); \
-	} while (0)
+#define hwsync() __asm__ __volatile__ ("sync" : : : "memory")
+#define lwsync()__asm__ __volatile__ (stringify_in_c(LWSYNC) : : : "memory")
+#define dcbf(p) __asm__ __volatile__ ("dcbf 0,%0" : : "r" (p) : "memory")
+#define dcbt_ro(p) __asm__ __volatile__ ("dcbt 0,%0" : : "r" (p))
+#define dcbt_rw(p) __asm__ __volatile__ ("dcbtst 0,%0" : : "r" (p))
 #define dcbi(p) dcbf(p)
 #ifdef CONFIG_PPC_E500MC
-#define dcbzl(p) \
-	do { \
-		__asm__ __volatile__ ("dcbzl 0,%0" : : "r" (p)); \
-	} while (0)
-#define dcbz_64(p) \
-	do { \
-		dcbzl(p); \
-	} while (0)
-#define dcbf_64(p) \
-	do { \
-		dcbf(p); \
-	} while (0)
+#define dcbzl(p) __asm__ __volatile__ ("dcbzl 0,%0" : : "r" (p))
+#define dcbz_64(p) dcbzl(p)
+#define dcbf_64(p) dcbf(p)
 /* Commonly used combo */
 #define dcbit_ro(p) \
 	do { \
@@ -122,10 +98,7 @@
 		dcbt_ro(p); \
 	} while (0)
 #else
-#define dcbz(p) \
-	do { \
-		__asm__ __volatile__ ("dcbz 0,%0" : : "r" (p)); \
-	} while (0)
+#define dcbz(p)__asm__ __volatile__ ("dcbz 0,%0" : : "r" (p))
 #define dcbz_64(p) \
 	do { \
 		dcbz((u32)p + 32);	\
diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 1edd49c..490bdd6 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -188,7 +188,7 @@ static inline struct qman_portal *get_poll_portal(void)
 {
 	return &__get_cpu_var(qman_affine_portal);
 }
-#define put_poll_portal() do { ; } while (0)
+#define put_poll_portal()
 
 /* This gives a FQID->FQ lookup to cover the fact that we can't directly demux
  * retirement notifications (the fact they are sometimes h/w-consumed means that
-- 
1.9.1

