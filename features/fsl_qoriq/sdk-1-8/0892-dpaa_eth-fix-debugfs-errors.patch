From 60086e00418ab6cf005dab2fb1c50ea8a2618853 Mon Sep 17 00:00:00 2001
From: Marian-Cristian Rotariu <marian.rotariu@freescale.com>
Date: Thu, 22 Jan 2015 15:40:20 +0200
Subject: [PATCH 892/987] dpaa_eth: fix debugfs errors

This patch removes one header dependency and attaches the debugfs directory of
the DPAA Ethernet driver to the root directory of the debugfs.

Signed-off-by: Marian-Cristian Rotariu <marian.rotariu@freescale.com>
Change-Id: Ib84fcbd86be7e9666ff8274c2aa52915771df988
Reviewed-on: http://git.am.freescale.net:8181/29106
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
Reviewed-by: Mingkai Hu <Mingkai.Hu@freescale.com>
Reviewed-by: Yang Li <LeoLi@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/32504
[Yang: Original patch taken from
QorIQ-SDK-V1.8-SOURCE-20150619-yocto.iso]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c         | 13 +++++--------
 drivers/net/ethernet/freescale/dpa/dpaa_generic_debugfs.c |  8 +++-----
 2 files changed, 8 insertions(+), 13 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c b/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c
index f7d5b2d..ce63e187 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c
@@ -32,7 +32,6 @@
 #include <linux/module.h>
 #include <linux/fsl_qman.h>	/* struct qm_mcr_querycgr */
 #include <linux/debugfs.h>
-#include <asm/debug.h>
 #include "dpaa_debugfs.h"
 #include "dpaa_eth.h" /* struct dpa_priv_s, dpa_percpu_priv_s, dpa_bp */
 
@@ -325,8 +324,7 @@ int dpa_netdev_debugfs_create(struct net_device *net_dev)
 							 net_dev,
 							 &dpa_debugfs_fops);
 	if (unlikely(priv->debugfs_file == NULL)) {
-		netdev_err(net_dev, "debugfs_create_file(%s/%s/%s)",
-				powerpc_debugfs_root->d_iname,
+		netdev_err(net_dev, "debugfs_create_file(%s/%s)",
 				dpa_debugfs_root->d_iname,
 				net_dev->name);
 
@@ -341,8 +339,7 @@ int dpa_netdev_debugfs_create(struct net_device *net_dev)
 							 net_dev,
 							 &dpa_debugfs_lp_fops);
 	if (unlikely(priv->debugfs_loop_file == NULL)) {
-		netdev_err(net_dev, "debugfs_create_file(%s/%s/%s)",
-				powerpc_debugfs_root->d_iname,
+		netdev_err(net_dev, "debugfs_create_file(%s/%s)",
 				dpa_debugfs_root->d_iname,
 				loop_file_name);
 
@@ -368,14 +365,14 @@ int __init dpa_debugfs_module_init(void)
 
 	pr_info(KBUILD_MODNAME ": " DPA_DEBUGFS_DESCRIPTION " (" VERSION ")\n");
 
-	dpa_debugfs_root = debugfs_create_dir(DPA_ETH_DEBUGFS_ROOT,
-					      powerpc_debugfs_root);
+	dpa_debugfs_root = debugfs_create_dir(DPA_ETH_DEBUGFS_ROOT, NULL);
+
 	if (unlikely(dpa_debugfs_root == NULL)) {
 		_errno = -ENOMEM;
 		pr_err(KBUILD_MODNAME ": %s:%hu:%s():\n",
 				   KBUILD_BASENAME".c", __LINE__, __func__);
 		pr_err("\tdebugfs_create_dir(%s/"KBUILD_MODNAME") = %d\n",
-			   powerpc_debugfs_root->d_iname, _errno);
+			   DPA_ETH_DEBUGFS_ROOT, _errno);
 	}
 
 	return _errno;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_generic_debugfs.c b/drivers/net/ethernet/freescale/dpa/dpaa_generic_debugfs.c
index 79a6a96..2b655cd 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_generic_debugfs.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_generic_debugfs.c
@@ -32,7 +32,6 @@
 #include <linux/module.h>
 #include <linux/fsl_qman.h>
 #include <linux/debugfs.h>
-#include <asm/debug.h>
 
 #include "dpaa_eth_generic.h"
 
@@ -236,8 +235,7 @@ int dpa_generic_debugfs_create(struct net_device *net_dev)
 							 net_dev,
 							 &dpa_debugfs_fops);
 	if (unlikely(priv->debugfs_file == NULL)) {
-		netdev_err(net_dev, "debugfs_create_file(%s/%s/%s)",
-				powerpc_debugfs_root->d_iname,
+		netdev_err(net_dev, "debugfs_create_file(%s/%s)",
 				dpa_debugfs_root->d_iname,
 				net_dev->name);
 
@@ -261,13 +259,13 @@ int __init dpa_generic_debugfs_module_init(void)
 	pr_info(KBUILD_MODNAME ": " DPA_DEBUGFS_DESCRIPTION " (" VERSION ")\n");
 
 	dpa_debugfs_root = debugfs_create_dir(DPA_GENERIC_ETH_DEBUGFS_ROOT,
-					      powerpc_debugfs_root);
+			NULL);
 	if (unlikely(dpa_debugfs_root == NULL)) {
 		_errno = -ENOMEM;
 		pr_err(KBUILD_MODNAME ": %s:%hu:%s():\n",
 				   KBUILD_BASENAME".c", __LINE__, __func__);
 		pr_err("\tdebugfs_create_dir(%s/"KBUILD_MODNAME") = %d\n",
-			   powerpc_debugfs_root->d_iname, _errno);
+			   DPA_GENERIC_ETH_DEBUGFS_ROOT, _errno);
 	}
 
 	return _errno;
-- 
1.9.1

