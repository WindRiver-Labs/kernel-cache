From f2a8acb53a4825f49f844d37c73e16994d959b21 Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Fri, 17 Jan 2014 10:35:39 -0600
Subject: [PATCH 514/987] fsl_qman: Use GFP_ATOMIC inside lock

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

This fixes the following coccinelle warning:

ERROR: function split_frag called ... inside lock ... but uses GFP_KERNEL

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: I62291f0e12714c7ed58f818cdd16f2ff1ed4f7d6
Reviewed-on: http://git.am.freescale.net:8181/8109
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Haiying Wang <Haiying.Wang@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
---
 drivers/staging/fsl_qbman/fsl_usdpaa.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_qbman/fsl_usdpaa.c b/drivers/staging/fsl_qbman/fsl_usdpaa.c
index f3acdb2..d60ffc9 100644
--- a/drivers/staging/fsl_qbman/fsl_usdpaa.c
+++ b/drivers/staging/fsl_qbman/fsl_usdpaa.c
@@ -194,9 +194,9 @@ static struct mem_fragment *split_frag(struct mem_fragment *frag)
 {
 	struct mem_fragment *x[3];
 
-	x[0] = kmalloc(sizeof(struct mem_fragment), GFP_KERNEL);
-	x[1] = kmalloc(sizeof(struct mem_fragment), GFP_KERNEL);
-	x[2] = kmalloc(sizeof(struct mem_fragment), GFP_KERNEL);
+	x[0] = kmalloc(sizeof(struct mem_fragment), GFP_ATOMIC);
+	x[1] = kmalloc(sizeof(struct mem_fragment), GFP_ATOMIC);
+	x[2] = kmalloc(sizeof(struct mem_fragment), GFP_ATOMIC);
 	if (!x[0] || !x[1] || !x[2]) {
 		kfree(x[0]);
 		kfree(x[1]);
-- 
1.9.1

