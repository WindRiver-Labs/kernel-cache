From 2a5dd3c83b858e416c5bdb10981f0f62992f975f Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Sat, 17 Oct 2015 07:15:24 +0000
Subject: [PATCH 1108/1108] drivers: usb: gadget: Avoid dereferencing a NULL
 pointer for fsl gadget driver

In upstream commit 304f7e5e1d08 ("usb: gadget: Refactor request completion"),
usb subsystem use "usb_gadget_giveback_request" instead of "req->req.complete".
In usb_gadget_giveback_request, will reference complete function by calling
"req->complete(ep, req)".But in fsl_udc driver, when ep0_prime_status enqueue
a fsl_req request, the function req->req.complete will be assign to NULL. So
should add a pointer check to avoid NULL pointer reference, or it will occurr
calltrace as below:

Unable to handle kernel paging request for data at address 0x00000000
Faulting instruction address: 0x800000000043f02c
Oops: Kernel access of bad area, sig: 11 [#1]
PREEMPT SMP NR_CPUS=8 CoreNet Generic
Modules linked in: g_mass_storage usb_f_mass_storage libcomposite configfs fsl_usb2_udc udc_core
CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.1.10-WR8.0.0.0_standard #4
task: c000000075300000 ti: c00000007ffa8000 task.ti: c0000000752fc000
NIP: 800000000043f02c LR: 80000000004aad5c CTR: 800000000043f000
REGS: c00000007ffab7c0 TRAP: 0300   Not tainted  (4.1.10-WR8.0.0.0_standard)
MSR: 0000000080029000 <CE,EE,ME>  CR: 24042224  XER: 00000000
DEAR: 0000000000000000 ESR: 0000000000000000 SOFTE: 0
GPR00: 80000000004aad5c c00000007ffaba40 8000000000449808 c000000077539800
GPR04: c0000000789ca300 0000000000000000 0000000000008000 0000000000000000
GPR08: 0000000000000000 0000000000000000 c00000007ffa8000 80000000004adf78
GPR12: 800000000043f000 c00000000fffc6c0 c0000000769bb040 80000000004af410
GPR16: c00000007756f000 0000000000000001 c0000000775397e8 0000000000000001
GPR20: 0000000000000000 0000000000000040 0000000000000001 0000000000010001
GPR24: 0000000000000000 c00000007756f260 0000000000000080 c00000007756f000
GPR28: c000000077539800 c0000000789ca300 c0000000769bb040 0000000000000001
NIP [800000000043f02c] .usb_gadget_giveback_request+0x2c/0x50 [udc_core]
LR [80000000004aad5c] .done+0x114/0x17c [fsl_usb2_udc]
Call Trace:
[c00000007ffaba40] [c000000000a8bc24] ._raw_spin_unlock+0x44/0xd0 (unreliable)
[c00000007ffabac0] [80000000004aad5c] .done+0x114/0x17c [fsl_usb2_udc]
[c00000007ffabb60] [80000000004acf98] .fsl_udc_irq+0x38c/0xfb4 [fsl_usb2_udc]
[c00000007ffabc70] [c0000000000af50c] .handle_irq_event_percpu+0xbc/0x378
[c00000007ffabd70] [c0000000000af828] .handle_irq_event+0x60/0xa0
[c00000007ffabe00] [c0000000000b3ca0] .handle_fasteoi_irq+0x108/0x2c8
[c00000007ffabe90] [c0000000000ae7b8] .generic_handle_irq+0x54/0x78
[c00000007ffabf10] [c000000000006968] .__do_irq+0x9c/0x218
[c00000007ffabf90] [c000000000016018] .call_do_irq+0x14/0x24
[c0000000752ff980] [c000000000006bac] .do_IRQ+0xc8/0x150
[c0000000752ffa30] [c00000000001a93c] exc_0x500_common+0xfc/0x100

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/usb/gadget/udc/fsl_udc_core.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/gadget/udc/fsl_udc_core.c b/drivers/usb/gadget/udc/fsl_udc_core.c
index e14ec81..8b9630e 100644
--- a/drivers/usb/gadget/udc/fsl_udc_core.c
+++ b/drivers/usb/gadget/udc/fsl_udc_core.c
@@ -198,7 +198,8 @@ __acquires(ep->udc->lock)
 
 	spin_unlock(&ep->udc->lock);
 
-	usb_gadget_giveback_request(&ep->ep, &req->req);
+	if (req->req.complete)
+		usb_gadget_giveback_request(&ep->ep, &req->req);
 
 	spin_lock(&ep->udc->lock);
 	ep->stopped = stopped;
-- 
2.0.2

