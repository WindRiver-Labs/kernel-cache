From 64e3840d30964625cc9995b62ad152f4a142ab0a Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Fri, 20 Nov 2015 07:37:16 +0000
Subject: [PATCH] fsl_fman: add A007273 support for T2080/T1024

Workaround for A007273 has 3 steps: first re-enable all disabled MAC clocks
through the DCFG_CCSR_DEVDISR2 register, then issuing an FMAN soft reset, at
 last re-disable the MAC clocks after the FMAN soft reset is done. When access
DCFG_CCSR_DEVDISR2 register, we need to call function "Fm_GetCcsrGutsReg" to
get DCFG_CCSR_DEVDISR2's virtual address base. But now T2080/T1024 can't get
virual address base because they are not in match table. It will cause that
on T2080/T1024 boards only reset but no save/restore operations for
DCFG_CCSR_DEVDISR2, the workaround become invalid. So add T2080/T1024 into
match tables.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/net/ethernet/freescale/fman/Peripherals/FM/fm.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/fman/Peripherals/FM/fm.c b/drivers/net/ethernet/freescale/fman/Peripherals/FM/fm.c
index 2eb3ee7..bddb4ca 100644
--- a/drivers/net/ethernet/freescale/fman/Peripherals/FM/fm.c
+++ b/drivers/net/ethernet/freescale/fman/Peripherals/FM/fm.c
@@ -61,12 +61,20 @@
 static volatile bool blockingFlag = FALSE;
 
 #ifdef FM_SOFT_REST_IS_NOT_FINISHED_PROPERLY_A007273
+
+static const struct of_device_id A007273_of_match[] = {
+    { .compatible = "fsl,t1024-device-config"},
+    { .compatible = "fsl,t2080-device-config"},
+    { .compatible = "fsl,t4240-device-config"},
+    {},
+};
+
 static struct ccsr_guts __iomem *Fm_GetCcsrGutsReg(void)
 {
 	struct device_node *np;
 	struct ccsr_guts __iomem *guts_regs = NULL;
 
-	np = of_find_compatible_node(NULL, NULL, "fsl,t4240-device-config");
+	np = of_find_matching_node_and_match(NULL, A007273_of_match, NULL);
 
 	if (np) {
 		guts_regs = of_iomap(np, 0);
-- 
2.0.2

