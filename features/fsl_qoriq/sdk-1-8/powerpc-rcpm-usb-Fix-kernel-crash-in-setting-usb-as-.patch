From 1a5457e5827164fd8de3a5a7ba85b37fde28d027 Mon Sep 17 00:00:00 2001
From: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Date: Mon, 23 Mar 2015 18:19:52 +0530
Subject: [PATCH 39/45] powerpc:rcpm:usb: Fix kernel crash in setting usb as
 wakeup source

Fix kernel crash issue in setting usb as wake-up source for system
sleep feature for relevant qoriq platforms (those supporting system
sleep via rcpm)

Signed-off-by: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Change-Id: I838234aff00800b6fafbb02ec12de7d3f2cc6075
Reviewed-on: http://git.am.freescale.net:8181/33283
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Honghua Yin <Hong-Hua.Yin@freescale.com>
[Original patch taken from QorIQ-SDK-V1.8-20150619-yocto]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/platforms/85xx/qoriq_pm.c |   13 ++++++++++++-
 drivers/usb/core/usb.c                 |    1 -
 drivers/usb/host/fsl-mph-dr-of.c       |    3 ---
 3 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/qoriq_pm.c b/arch/powerpc/platforms/85xx/qoriq_pm.c
index f1ec1bd..147656b 100644
--- a/arch/powerpc/platforms/85xx/qoriq_pm.c
+++ b/arch/powerpc/platforms/85xx/qoriq_pm.c
@@ -14,6 +14,7 @@
 #include <linux/kernel.h>
 #include <linux/suspend.h>
 #include <linux/of_platform.h>
+#include <linux/usb.h>
 
 #include <asm/fsl_pm.h>
 
@@ -42,7 +43,17 @@ void fsl_set_power_except(struct device *dev, int on)
 	struct device_node *mac_node;
 	int ret;
 
-	ret = of_property_read_u32_array(dev->of_node, "sleep", value, 2);
+	if (dev && !strncmp(dev->bus->name, "usb", 3)) {
+		struct usb_device *udev = container_of(dev,
+						struct usb_device, dev);
+		struct device *controller = udev->bus->controller;
+
+		ret = of_property_read_u32_array(controller->parent->of_node,
+				"sleep", value, 2);
+	} else
+		ret = of_property_read_u32_array(dev->of_node, "sleep",
+				value, 2);
+
 	if (ret) {
 		/* search fman mac node */
 		phandle_prop = of_get_property(dev->of_node, "fsl,fman-mac",
diff --git a/drivers/usb/core/usb.c b/drivers/usb/core/usb.c
index 4d8cd50..8d5b2f4 100644
--- a/drivers/usb/core/usb.c
+++ b/drivers/usb/core/usb.c
@@ -445,7 +445,6 @@ struct usb_device *usb_alloc_dev(struct usb_device *parent,
 	dev->dev.groups = usb_device_groups;
 	dev->dev.dma_mask = bus->controller->dma_mask;
 	set_dev_node(&dev->dev, dev_to_node(bus->controller));
-	dev->dev.of_node = bus->controller->of_node;
 	dev->state = USB_STATE_ATTACHED;
 	dev->lpm_disable_count = 1;
 	atomic_set(&dev->urbnum, 0);
diff --git a/drivers/usb/host/fsl-mph-dr-of.c b/drivers/usb/host/fsl-mph-dr-of.c
index 79d03e4..0573c8b 100644
--- a/drivers/usb/host/fsl-mph-dr-of.c
+++ b/drivers/usb/host/fsl-mph-dr-of.c
@@ -103,9 +103,6 @@ static struct platform_device *fsl_usb2_device_register(
 	else
 		dma_set_mask(&pdev->dev, DMA_BIT_MASK(32));
 
-	if (pdata->operating_mode != FSL_USB2_DR_DEVICE)
-		pdev->dev.of_node = ofdev->dev.of_node;
-
 	retval = platform_device_add_data(pdev, pdata, sizeof(*pdata));
 	if (retval)
 		goto error;
-- 
1.7.5.4

