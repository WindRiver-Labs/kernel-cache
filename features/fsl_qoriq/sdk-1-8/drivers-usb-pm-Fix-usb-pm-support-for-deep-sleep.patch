From 3e9bd9a0f429cd299acbca91f4fff7faf3c48b0e Mon Sep 17 00:00:00 2001
From: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Date: Tue, 24 Mar 2015 17:53:15 +0530
Subject: [PATCH 38/45] drivers:usb:pm: Fix usb pm support for deep-sleep

Make sure that saving and restoration of usb phy
registers only happen in case of deep-sleep, and
not for any other feature like sleep, etc. Also
export pm_suspend_state() and set_pm_suspend_state()

Signed-off-by: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Change-Id: I2e08208c975ec7aee7ed42e7d424aaa8d14899e3
Reviewed-on: http://git.am.freescale.net:8181/33384
Reviewed-by: Nikhil Badola <nikhil.badola@freescale.com>
Tested-by: Honghua Yin <Hong-Hua.Yin@freescale.com>
Reviewed-by: Honghua Yin <Hong-Hua.Yin@freescale.com>
[Original patch taken from QorIQ-SDK-V1.8-20150619-yocto]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/kernel/fsl_pm.c |    2 ++
 drivers/usb/host/ehci-fsl.c  |   27 +++++++++++++++++++++------
 2 files changed, 23 insertions(+), 6 deletions(-)

diff --git a/arch/powerpc/kernel/fsl_pm.c b/arch/powerpc/kernel/fsl_pm.c
index 1d19b85..dd68054 100644
--- a/arch/powerpc/kernel/fsl_pm.c
+++ b/arch/powerpc/kernel/fsl_pm.c
@@ -19,8 +19,10 @@ void set_pm_suspend_state(suspend_state_t state)
 {
 	pm_state = state;
 }
+EXPORT_SYMBOL_GPL(set_pm_suspend_state);
 
 suspend_state_t pm_suspend_state(void)
 {
 	return pm_state;
 }
+EXPORT_SYMBOL_GPL(pm_suspend_state);
diff --git a/drivers/usb/host/ehci-fsl.c b/drivers/usb/host/ehci-fsl.c
index 750ce63..07818e9 100644
--- a/drivers/usb/host/ehci-fsl.c
+++ b/drivers/usb/host/ehci-fsl.c
@@ -31,8 +31,11 @@
 #include <linux/platform_device.h>
 #include <linux/fsl_devices.h>
 #include <linux/of_platform.h>
+
 #ifdef CONFIG_PPC
 #include <sysdev/fsl_soc.h>
+#include <asm/fsl_pm.h>
+#include <linux/suspend.h>
 #endif
 
 #include "ehci-fsl.h"
@@ -509,6 +512,7 @@ static int ehci_fsl_setup(struct usb_hcd *hcd)
 #ifdef CONFIG_PM
 void __iomem *phy_reg;
 
+#ifdef CONFIG_PPC
 /* save usb registers */
 static int ehci_fsl_save_context(struct usb_hcd *hcd)
 {
@@ -553,6 +557,7 @@ static int ehci_fsl_restore_context(struct usb_hcd *hcd)
 	iowrite32be(ehci_fsl->usb_ctrl, non_ehci + FSL_SOC_USB_CTRL);
 	return 0;
 }
+#endif
 
 #ifdef CONFIG_PPC_MPC512x
 static int ehci_fsl_mpc512x_drv_suspend(struct device *dev)
@@ -704,13 +709,18 @@ static int ehci_fsl_drv_suspend(struct device *dev)
 	struct usb_hcd *hcd = dev_get_drvdata(dev);
 	struct ehci_fsl *ehci_fsl = hcd_to_ehci_fsl(hcd);
 	void __iomem *non_ehci = hcd->regs;
-
-	ehci_fsl_save_context(hcd);
-
 #if defined(CONFIG_FSL_USB2_OTG) || defined(CONFIG_FSL_USB2_OTG_MODULE)
 	struct usb_bus host = hcd->self;
 #endif
 
+#ifdef CONFIG_PPC
+	suspend_state_t pm_state;
+	pm_state = pm_suspend_state();
+
+	if (pm_state == PM_SUSPEND_MEM)
+		ehci_fsl_save_context(hcd);
+#endif
+
 	if (of_device_is_compatible(dev->parent->of_node,
 				    "fsl,mpc5121-usb2-dr")) {
 		return ehci_fsl_mpc512x_drv_suspend(dev);
@@ -747,13 +757,18 @@ static int ehci_fsl_drv_resume(struct device *dev)
 	struct ehci_fsl *ehci_fsl = hcd_to_ehci_fsl(hcd);
 	struct ehci_hcd *ehci = hcd_to_ehci(hcd);
 	void __iomem *non_ehci = hcd->regs;
-
-	ehci_fsl_restore_context(hcd);
-
 #if defined(CONFIG_FSL_USB2_OTG) || defined(CONFIG_FSL_USB2_OTG_MODULE)
 	struct usb_bus host = hcd->self;
 #endif
 
+#ifdef CONFIG_PPC
+	suspend_state_t pm_state;
+	pm_state = pm_suspend_state();
+
+	if (pm_state == PM_SUSPEND_MEM)
+		ehci_fsl_restore_context(hcd);
+#endif
+
 	if (of_device_is_compatible(dev->parent->of_node,
 				    "fsl,mpc5121-usb2-dr")) {
 		return ehci_fsl_mpc512x_drv_resume(dev);
-- 
1.7.5.4

