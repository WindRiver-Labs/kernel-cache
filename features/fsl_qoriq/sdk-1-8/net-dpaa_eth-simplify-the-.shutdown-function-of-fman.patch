From 0ce54ac5232f5ed2737f78509373ac3a2b983ea4 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Fri, 6 May 2016 10:17:32 +0800
Subject: [PATCH] net: dpaa_eth: simplify the .shutdown() function of fman
 driver

The .shutdown() function is only invoked when reboot or kexec boot.
Making it the same as .remove() seems a bit overkill. Especially in
kexec boot, the .shutdown() of fman driver may be invoked before the
one of dpa driver due to the order of fman and dpa device node changed
in dtb. But the .shutdown() of dpa driver may depend on the existing of
some structs in fm driver, so we implement a simplified version of
.shutdown() only to do the necessary cleanup to workaround this issue.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../freescale/fman/src/wrapper/lnxwrp_fm.c         |   10 +++++++++-
 1 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
index f5e2ceb..0577386f 100755
--- a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
+++ b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
@@ -1174,7 +1174,15 @@ static int fm_remove(struct platform_device *of_dev)
 #if defined(CONFIG_KEXEC)
 static void fm_shutdown(struct platform_device *of_dev)
 {
-	fm_remove(of_dev);
+	t_LnxWrpFmDev   *p_LnxWrpFmDev;
+	struct device   *dev;
+
+	dev = &of_dev->dev;
+	p_LnxWrpFmDev = dev_get_drvdata(dev);
+	if (!p_LnxWrpFmDev->active)
+		return;
+
+	FreeFmPcdDev(p_LnxWrpFmDev);
 }
 #endif
 
-- 
1.7.5.4

