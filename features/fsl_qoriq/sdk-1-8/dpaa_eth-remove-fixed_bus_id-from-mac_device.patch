From 2ac513dd3c21600f630189bce1e01bf7d529f9eb Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Wed, 23 Dec 2015 09:35:12 +0800
Subject: [PATCH 57/57] dpaa_eth: remove 'fixed_bus_id' from mac_device

Since commit "dpaa_eth: support phys probed from devicetree and fixed-link"
uses of_phy_register_fixed_link() to register fixed link and sets phy_node,
we don't need fixed_bus_id now.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/mac-api.c |   37 ++++++-------------------
 drivers/net/ethernet/freescale/dpa/mac.h     |    1 -
 2 files changed, 9 insertions(+), 29 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/mac-api.c b/drivers/net/ethernet/freescale/dpa/mac-api.c
index 3ef4309..323d0f1 100644
--- a/drivers/net/ethernet/freescale/dpa/mac-api.c
+++ b/drivers/net/ethernet/freescale/dpa/mac-api.c
@@ -435,17 +435,11 @@ static int dtsec_init_phy(struct net_device *net_dev,
 {
 	struct phy_device	*phy_dev;
 
-	if (!mac_dev->phy_node)
-		phy_dev = phy_connect(net_dev, mac_dev->fixed_bus_id,
-				      &adjust_link, mac_dev->phy_if);
-	else
-		phy_dev = of_phy_connect(net_dev, mac_dev->phy_node,
-					 &adjust_link, 0, mac_dev->phy_if);
+	phy_dev = of_phy_connect(net_dev, mac_dev->phy_node,
+				 &adjust_link, 0, mac_dev->phy_if);
 	if (unlikely(phy_dev == NULL) || IS_ERR(phy_dev)) {
 		netdev_err(net_dev, "Could not connect to PHY %s\n",
-				mac_dev->phy_node ?
-					mac_dev->phy_node->full_name :
-					mac_dev->fixed_bus_id);
+					mac_dev->phy_node->full_name);
 		return phy_dev == NULL ? -ENODEV : PTR_ERR(phy_dev);
 	}
 
@@ -467,17 +461,11 @@ static int xgmac_init_phy(struct net_device *net_dev,
 {
 	struct phy_device *phy_dev;
 
-	if (!mac_dev->phy_node)
-		phy_dev = phy_attach(net_dev, mac_dev->fixed_bus_id,
-				     mac_dev->phy_if);
-	else
-		phy_dev = of_phy_attach(net_dev, mac_dev->phy_node, 0,
-					mac_dev->phy_if);
+	phy_dev = of_phy_attach(net_dev, mac_dev->phy_node, 0,
+				mac_dev->phy_if);
 	if (unlikely(phy_dev == NULL) || IS_ERR(phy_dev)) {
 		netdev_err(net_dev, "Could not attach to PHY %s\n",
-				mac_dev->phy_node ?
-					mac_dev->phy_node->full_name :
-					mac_dev->fixed_bus_id);
+					mac_dev->phy_node->full_name);
 		return phy_dev == NULL ? -ENODEV : PTR_ERR(phy_dev);
 	}
 
@@ -507,20 +495,13 @@ static int memac_init_phy(struct net_device *net_dev,
 			phy_dev = of_phy_attach(net_dev, mac_dev->phy_node, 0,
 						mac_dev->phy_if);
 	} else {
-		if (!mac_dev->phy_node)
-			phy_dev = phy_connect(net_dev, mac_dev->fixed_bus_id,
-					      &adjust_link, mac_dev->phy_if);
-		else
-			phy_dev = of_phy_connect(net_dev, mac_dev->phy_node,
-						 &adjust_link, 0,
-						 mac_dev->phy_if);
+		phy_dev = of_phy_connect(net_dev, mac_dev->phy_node,
+					 &adjust_link, 0, mac_dev->phy_if);
 	}
 
 	if (unlikely(phy_dev == NULL) || IS_ERR(phy_dev)) {
 		netdev_err(net_dev, "Could not connect to PHY %s\n",
-			mac_dev->phy_node ?
-				mac_dev->phy_node->full_name :
-				mac_dev->fixed_bus_id);
+				mac_dev->phy_node->full_name);
 		return phy_dev == NULL ? -ENODEV : PTR_ERR(phy_dev);
 	}
 
diff --git a/drivers/net/ethernet/freescale/dpa/mac.h b/drivers/net/ethernet/freescale/dpa/mac.h
index b793411..859dcca 100644
--- a/drivers/net/ethernet/freescale/dpa/mac.h
+++ b/drivers/net/ethernet/freescale/dpa/mac.h
@@ -60,7 +60,6 @@ struct mac_device {
 	uint16_t		 speed;
 	uint16_t		 max_speed;
 	struct device_node	*phy_node;
-	char			 fixed_bus_id[MII_BUS_ID_SIZE + 3];
 	struct device_node	*tbi_node;
 	struct phy_device	*phy_dev;
 	void			*fm;
-- 
1.7.5.4

