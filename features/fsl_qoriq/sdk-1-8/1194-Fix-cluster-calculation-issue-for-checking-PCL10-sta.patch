From 5b969a53439624b518e84a346d4dcae475a7f6d1 Mon Sep 17 00:00:00 2001
From: Jia Hongtao <hongtao.jia@freescale.com>
Date: Wed, 5 Nov 2014 11:57:35 +0800
Subject: [PATCH 1194/1207] Fix cluster calculation issue for checking PCL10
 state on e6500

Kernel could not get cluster information from device tree on PowerPC.
The previous way of cluster calculation could be wrong if all cores of
some clusters are disabled. For now PCL10 is only supported on e6500
cores. We hard coded the threads number of each cluster to ensure the
cluster calculation is right.

Signed-off-by: Jia Hongtao <hongtao.jia@freescale.com>
Change-Id: Ia329e48bac1a838828146df9b2caa7f527e329eb
Reviewed-on: http://git.am.freescale.net:8181/23177
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Yuantian Tang <yuantian.tang@freescale.com>
Reviewed-by: Zhuoyu Zhang <Zhuoyu.Zhang@freescale.com>
Reviewed-by: Yang Li <LeoLi@freescale.com>
Reviewed-by: Matthew Weigel <Matthew.Weigel@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 arch/powerpc/platforms/85xx/smp.h |  2 ++
 arch/powerpc/sysdev/fsl_rcpm.c    | 15 ++-------------
 2 files changed, 4 insertions(+), 13 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/smp.h b/arch/powerpc/platforms/85xx/smp.h
index 8b4efc3..c1a471a 100644
--- a/arch/powerpc/platforms/85xx/smp.h
+++ b/arch/powerpc/platforms/85xx/smp.h
@@ -4,6 +4,8 @@
 #include <linux/init.h>
 
 #ifdef CONFIG_SMP
+#define THREAD_IN_CLUSTER	8
+
 DECLARE_PER_CPU(cpumask_t, cpu_cluster_map);
 static inline struct cpumask *cpu_cluster_mask(int cpu)
 {
diff --git a/arch/powerpc/sysdev/fsl_rcpm.c b/arch/powerpc/sysdev/fsl_rcpm.c
index 8b8befb..8af2e69 100644
--- a/arch/powerpc/sysdev/fsl_rcpm.c
+++ b/arch/powerpc/sysdev/fsl_rcpm.c
@@ -320,9 +320,6 @@ bool rcpm_v2_cpu_ready(unsigned int cpu, int state)
 	unsigned int hw_cpu;
 	u32 mask;
 	bool ret = false;
-	const struct cpumask *cluster_mask;
-	u32 cpu_on_cluster = 0;
-	int tmp_cpu = 0;
 
 	hw_cpu = get_hard_smp_processor_id(cpu);
 
@@ -360,16 +357,8 @@ bool rcpm_v2_cpu_ready(unsigned int cpu, int state)
 			ret = true;
 		break;
 	case E500_PM_PCL10:
-		cluster_mask = cpu_cluster_mask(boot_cpuid);
-		tmp_cpu += cpumask_weight(cluster_mask);
-
-		while (cpu >= tmp_cpu) {
-			cpu_on_cluster++;
-			cluster_mask = cpu_cluster_mask(tmp_cpu);
-			tmp_cpu += cpumask_weight(cluster_mask);
-		}
-
-		mask = 1 << cpu_on_cluster;
+		/* PCL10 state is only supported on e6500 for now. */
+		mask = 1 << (hw_cpu / THREAD_IN_CLUSTER);
 
 		if (in_be32(&rcpm_v2_regs->clpcl10sr) & mask)
 			ret = true;
-- 
2.0.2

