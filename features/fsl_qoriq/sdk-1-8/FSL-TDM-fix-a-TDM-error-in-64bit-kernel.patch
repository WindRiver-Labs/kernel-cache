From 1fb4ae85e773329d691a70dcf0e5d2bd42a6b3a6 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Wed, 3 Feb 2016 10:05:00 +0800
Subject: [PATCH 6/7] FSL: TDM: fix a TDM error in 64bit kernel

The old TDM driver only supports 32bit kernel, so ALIGN_ADDRESS() uses
"u32" to convert pointer has no problem.
But in 64bit kernel, size of pointer is 64bit, so use "unsigned long",
whose length is always same as size of pointer regardless of 32 or 64
bit kernel, to replace "u32" to avoid the below runtime error:

Unable to handle kernel paging request for data at address 0x7e2ae000
Faulting instruction address: 0xc000000000630c74
Oops: Kernel access of bad area, sig: 11 [#1]
SMP NR_CPUS=4 CoreNet Generic
Modules linked in:
CPU: 1 PID: 1 Comm: swapper/0
task: c0000001f90b8800 ti: c0000001f90bc000 task.ti: c0000001f90bc000
NIP: c000000000630c74 LR: c000000000630b94 CTR: 0000000000000000
REGS: c0000001f90bf350 TRAP: 0300
MSR: 0000000080029000 <CE,EE,ME>  CR: 28adbe28  XER: 00000000
SOFTE: 1
DEAR: 000000007e2ae000, ESR: 0000000000800000

GPR00: 0000000001400000 c0000001f90bf5d0 c000000000c26d18 0000000000000000
GPR04: 000000007e0b6000 000000007e2ae000 0000000000000000 c000000000b4c498
GPR08: 0000000000000000 c0000001f9d5e5c8 0000000000000001 0000000001400010
GPR12: 0000000003030008 c00000000fffe780 c000000000001858 0000000000000000
GPR16: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
GPR20: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
GPR24: 0000000000000000 00000000000000d3 0000000000000000 c00000007e2ae000
GPR28: 0000000000000008 0000000000000020 c000000000b4c498 c0000001f9d5e5c0
NIP [c000000000630c74] .tdm_fsl_reg_init+0x104/0x57c
LR [c000000000630b94] .tdm_fsl_reg_init+0x24/0x57c
Call Trace:
[c0000001f90bf5d0] [c000000000630b94] .tdm_fsl_reg_init+0x24/0x57c
[c0000001f90bf660] [c000000000631b40] .tdm_fsl_probe+0x434/0x5ec
[c0000001f90bf740] [c000000000386a6c] .platform_drv_probe+0x2c/0x40
[c0000001f90bf7b0] [c000000000384d00] .really_probe+0xa4/0x2ac
[c0000001f90bf850] [c0000000003850a8] .__driver_attach+0x100/0x104
[c0000001f90bf8e0] [c000000000382570] .bus_for_each_dev+0x84/0xe4
[c0000001f90bf980] [c0000000003846b4] .driver_attach+0x24/0x38
[c0000001f90bf9f0] [c000000000384160] .bus_add_driver+0x26c/0x354
[c0000001f90bfa90] [c0000000003859d4] .driver_register+0x8c/0x158
[c0000001f90bfb10] [c000000000387324] .__platform_driver_register+0x6c/0x80
[c0000001f90bfb80] [c000000000ae73c8] .tdm_fsl_init+0x58/0x90
[c0000001f90bfc00] [c000000000001160] .do_one_initcall+0x148/0x19c
[c0000001f90bfcf0] [c000000000abcbb8] .kernel_init_freeable+0x184/0x264
[c0000001f90bfda0] [c000000000001888] .kernel_init+0x30/0x7a8
[c0000001f90bfe30] [c000000000000890] .ret_from_kernel_thread+0x5c/0xcc
Instruction dump:
556b805e 7d605b78 616b0010 7c6ae9d6 e89f0040 39290008 e8a90070 394a0001
2f8a0003 7d4a07b4 7cc331d6 7c862214 <90850000> e8c90070 91860004 e8c90070
---[ end trace eec918c413d86425 ]---

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/tdm/device/tdm_fsl.h |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/drivers/tdm/device/tdm_fsl.h b/drivers/tdm/device/tdm_fsl.h
index a37f7c4..e735443 100644
--- a/drivers/tdm/device/tdm_fsl.h
+++ b/drivers/tdm/device/tdm_fsl.h
@@ -392,7 +392,8 @@ static inline int ALIGNABLE_SIZE(u32 size, u32 alignment)
 /* Align a given address */
 static inline void *ALIGN_ADDRESS(void *address, u32 alignment)
 {
-	return (void *)(((u32) address + alignment - 1) & (~(alignment - 1)));
+	return (void *)(((unsigned long) address + (unsigned long)alignment - 1)
+		& (~((unsigned long)alignment - 1)));
 }
 
 /* Size of the buffer */
-- 
1.7.5.4

