From e9199c8b5a6eaae790ec9e012d8debfc39c829b9 Mon Sep 17 00:00:00 2001
From: Cristian Stoica <cristian.stoica@freescale.com>
Date: Fri, 10 Apr 2015 11:30:35 +0300
Subject: [PATCH 1323/1336] caam: remove dependencies on QI when it is disabled

The dependency on CAAM-QI was incorrectly set on FSL_QMAN and resulted in
an always-enabled CAAM-QI on DPAA platforms. This patch fixes the dependency
and allows CAAM-QI interface to be freely disabled on DPAA platforms.

Signed-off-by: Cristian Stoica <cristian.stoica@freescale.com>
Change-Id: Iaf752ae8774a7b03383244a6c9fbbadd9959f3d4
Reviewed-on: http://git.am.freescale.net:8181/34732
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Horia Ioan Geanta Neag <horia.geanta@freescale.com>
Reviewed-by: Honghua Yin <Hong-Hua.Yin@freescale.com>
[Yang: Original patch taken from
QorIQ-SDK-V1.8-SOURCE-20150619-yocto.iso]
Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/crypto/caam/Makefile | 6 +++---
 drivers/crypto/caam/ctrl.c   | 6 +++---
 drivers/crypto/caam/intern.h | 2 +-
 3 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/crypto/caam/Makefile b/drivers/crypto/caam/Makefile
index a8b755f..4d27c95 100644
--- a/drivers/crypto/caam/Makefile
+++ b/drivers/crypto/caam/Makefile
@@ -8,17 +8,17 @@ endif
 obj-$(CONFIG_CRYPTO_DEV_FSL_CAAM) += caam.o
 obj-$(CONFIG_CRYPTO_DEV_FSL_CAAM_JR) += caam_jr.o
 obj-$(CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API) += caamalg.o
+obj-$(CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI) += caamalg_qi.o
 obj-$(CONFIG_CRYPTO_DEV_FSL_CAAM_AHASH_API) += caamhash.o
 obj-$(CONFIG_CRYPTO_DEV_FSL_CAAM_RNG_API) += caamrng.o
 
 caam-objs := ctrl.o
 caam_jr-objs := jr.o key_gen.o error.o
-ifeq ($(CONFIG_FSL_QMAN), y)
+ifneq ($(CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI),)
+        ccflags-y += -DCONFIG_CAAM_QI
         caam-objs += qi.o
 endif
 
 obj-$(CONFIG_FSL_CAAM_PKC_SUPPORT) += caam_pkc.o
 caam_pkc-objs := caampkc.o pkc_desc.o
-
-obj-$(CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI) += caamalg_qi.o
 obj-$(CONFIG_CRYPTO_DEV_FSL_CAAM_JR_UIO) += fsl_jr_uio.o
diff --git a/drivers/crypto/caam/ctrl.c b/drivers/crypto/caam/ctrl.c
index 816ee02..8e18c01 100644
--- a/drivers/crypto/caam/ctrl.c
+++ b/drivers/crypto/caam/ctrl.c
@@ -15,7 +15,7 @@
 #include "desc_constr.h"
 #include "error.h"
 
-#ifdef CONFIG_FSL_QMAN
+#ifdef CONFIG_CAAM_QI
 #include "qi.h"
 #endif
 
@@ -305,7 +305,7 @@ static int caam_remove(struct platform_device *pdev)
 			of_device_unregister(ctrlpriv->jrpdev[ring]);
 	}
 
-#ifdef CONFIG_FSL_QMAN
+#ifdef CONFIG_CAAM_QI
 	if (ctrlpriv->qidev)
 		caam_qi_shutdown(ctrlpriv->qidev);
 #endif
@@ -552,7 +552,7 @@ static int caam_probe(struct platform_device *pdev)
 		wr_reg32(&ctrlpriv->qi->qi_control_lo, QICTL_DQEN);
 
 		/* If QMAN driver is present, init CAAM-QI backend */
-#ifdef CONFIG_FSL_QMAN
+#ifdef CONFIG_CAAM_QI
 		if (caam_qi_init(pdev, nprop))
 			dev_err(dev, "caam qi i/f init failed\n");
 #endif
diff --git a/drivers/crypto/caam/intern.h b/drivers/crypto/caam/intern.h
index 4ad9404..f0f1b42 100644
--- a/drivers/crypto/caam/intern.h
+++ b/drivers/crypto/caam/intern.h
@@ -72,7 +72,7 @@ struct caam_drv_private {
 
 	struct device *dev;
 	struct platform_device **jrpdev; /* Alloc'ed array per sub-device */
-#ifdef CONFIG_FSL_QMAN
+#ifdef CONFIG_CAAM_QI
 	struct device *qidev;
 #endif
 	struct platform_device *pdev;
-- 
2.0.2

