From d22e06b3dad5de21a7b78498640957ff416fdd47 Mon Sep 17 00:00:00 2001
From: "Lu.Jiang" <lu.jiang@windriver.com>
Date: Wed, 10 Sep 2014 10:32:56 +0800
Subject: [PATCH 1248/1336] crypto: caam - Modify the interface layers to use
 JR API's

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

- Earlier interface layers - caamalg, caamhash, caamrng were
  directly using the Controller driver private structure to access
  the Job ring.
- Changed the above to use alloc/free API's provided by Job Ring Drive

Signed-off-by: Ruchika Gupta <ruchika.gupta@freescale.com>
Change-Id: I6122f83a349aaca9522654df0026423cbb8d2cf2
Reviewed-on: http://git.am.freescale.net:8181/4123
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Rivera Jose-B46482 <German.Rivera@freescale.com>
Signed-off-by: Lu.Jiang <lu.jiang@windriver.com>
---
 drivers/crypto/caam/caamalg_qi.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/crypto/caam/caamalg_qi.c b/drivers/crypto/caam/caamalg_qi.c
index 9ed513b..11c3923 100644
--- a/drivers/crypto/caam/caamalg_qi.c
+++ b/drivers/crypto/caam/caamalg_qi.c
@@ -16,6 +16,7 @@
 #include "sg_sw_qm.h"
 #include "key_gen.h"
 #include "qi.h"
+#include "jr.h"
 
 /*
  * crypto alg
@@ -1434,13 +1435,16 @@ static int caam_cra_init(struct crypto_tfm *tfm)
 		 container_of(alg, struct caam_crypto_alg, crypto_alg);
 	struct caam_ctx *ctx = crypto_tfm_ctx(tfm);
 	struct caam_drv_private *priv = dev_get_drvdata(caam_alg->ctrldev);
-	int tgt_jr = atomic_inc_return(&priv->tfm_count);
 
 	/*
 	 * distribute tfms across job rings to ensure in-order
 	 * crypto request processing per tfm
 	 */
-	ctx->jrdev = priv->jrdev[(tgt_jr / 2) % priv->total_jobrs];
+	ctx->jrdev = caam_jr_alloc();
+	if (IS_ERR(ctx->jrdev)) {
+		pr_err("Job Ring Device allocation for transform failed\n");
+		return PTR_ERR(ctx->jrdev);
+	}
 
 	/* copy descriptor header template value */
 	ctx->class1_alg_type = OP_TYPE_CLASS1_ALG | caam_alg->class1_alg_type;
@@ -1469,6 +1473,8 @@ static void caam_cra_exit(struct crypto_tfm *tfm)
 
 	if (ctx->drv_ctx[GIVENCRYPT])
 		caam_drv_ctx_rel(ctx->drv_ctx[GIVENCRYPT]);
+
+	caam_jr_free(ctx->jrdev);
 }
 
 static struct list_head alg_list;
@@ -1557,8 +1563,6 @@ static int __init caam_qi_algapi_init(void)
 
 	INIT_LIST_HEAD(&alg_list);
 
-	atomic_set(&priv->tfm_count, -1);
-
 	/* register crypto algorithms the device supports */
 	for (i = 0; i < ARRAY_SIZE(driver_algs); i++) {
 		/* TODO: check if h/w supports alg */
-- 
2.0.2

