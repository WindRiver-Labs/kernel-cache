From 57acadfafec1a905336da63c6a4c3939499c88cd Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Tue, 26 Nov 2013 11:59:06 +0200
Subject: [PATCH 444/987] dpaa_eth: Cleanup prototype of dpa_get_channel()

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Function had unused arguments. While it is conceivable that in the end
the function will have to be parametrized again, for now we're just
removing something we don't need.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Change-Id: I99206b8d8230d0c7f33bf35dbd06efb2056f406d
Reviewed-on: http://git.am.freescale.net:8181/6859
Reviewed-by: Cristian-Constantin Sovaiala <Cristian.Sovaiala@freescale.com>
Reviewed-by: Ruxandra Ioana Radulescu <ruxandra.radulescu@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Thomas Trefny <Tom.Trefny@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/7679
Reviewed-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
Tested-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c         | 2 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c  | 2 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h  | 2 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c | 2 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c  | 2 +-
 5 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index d35eee2..8117d18 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -799,7 +799,7 @@ dpaa_eth_priv_probe(struct platform_device *_of_dev)
 
 	priv->mac_dev = mac_dev;
 
-	priv->channel = dpa_get_channel(dev, dpa_node);
+	priv->channel = dpa_get_channel();
 
 	if (priv->channel < 0) {
 		err = priv->channel;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index 6b4b2da..0c2e639 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -935,7 +935,7 @@ invalid_error_queue:
 static u32 rx_pool_channel;
 static DEFINE_SPINLOCK(rx_pool_channel_init);
 
-int dpa_get_channel(struct device *dev, struct device_node *dpa_node)
+int dpa_get_channel()
 {
 	spin_lock(&rx_pool_channel_init);
 	if (!rx_pool_channel) {
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h
index 15845e6..2dfd344 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h
@@ -177,7 +177,7 @@ int dpa_fq_probe_mac(struct device *dev, struct list_head *list,
 		     struct fm_port_fqs *port_fqs,
 		     bool tx_conf_fqs_per_core,
 		     enum port_type ptype);
-int dpa_get_channel(struct device *dev, struct device_node *dpa_node);
+int dpa_get_channel(void);
 int dpaa_eth_add_channel(void *__arg);
 int dpaa_eth_cgr_init(struct dpa_priv_s *priv);
 void dpa_fq_setup(struct dpa_priv_s *priv, const dpa_fq_cbs_t *fq_cbs,
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c
index 119f891..637acb5 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c
@@ -376,7 +376,7 @@ static int dpaa_eth_macless_probe(struct platform_device *_of_dev)
 
 	priv->mac_dev = NULL;
 
-	priv->channel = dpa_get_channel(dev, dpa_node);
+	priv->channel = dpa_get_channel();
 
 	if (priv->channel < 0) {
 		err = priv->channel;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
index 64857e5..ef8164d 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
@@ -663,7 +663,7 @@ dpaa_eth_shared_probe(struct platform_device *_of_dev)
 
 	priv->mac_dev = mac_dev;
 
-	priv->channel = dpa_get_channel(dev, dpa_node);
+	priv->channel = dpa_get_channel();
 
 	if (priv->channel < 0) {
 		err = priv->channel;
-- 
1.9.1

