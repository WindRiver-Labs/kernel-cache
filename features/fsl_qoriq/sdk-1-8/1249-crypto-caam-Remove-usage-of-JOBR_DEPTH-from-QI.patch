From 25c89d1fb6317e97e3e5e0b83a95f7f523750c29 Mon Sep 17 00:00:00 2001
From: Ruchika Gupta <ruchika.gupta@freescale.com>
Date: Tue, 27 Aug 2013 18:27:16 +0530
Subject: [PATCH 1249/1336] crypto:caam - Remove usage of JOBR_DEPTH from QI

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

JOBR_DEPTH was wrongly being used for defining maximum pending jobs
per CPU in QI. Introduced a new macro to define the maximum
pending jobs per CPU.

Signed-off-by: Ruchika Gupta <ruchika.gupta@freescale.com>
Change-Id: Iebc47fe19cf8eb7a2c39d8b6b802df33fb1073b6
Reviewed-on: http://git.am.freescale.net:8181/4242
Reviewed-by: Garg Vakul-B16394 <vakul@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Rivera Jose-B46482 <German.Rivera@freescale.com>
---
 drivers/crypto/caam/qi.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/crypto/caam/qi.c b/drivers/crypto/caam/qi.c
index 44b6d99..232e841 100644
--- a/drivers/crypto/caam/qi.c
+++ b/drivers/crypto/caam/qi.c
@@ -18,7 +18,7 @@
 #define CAAM_REQ_CGR_THRESHOLD	0x1000000
 #define PRE_HDR_LEN		2	/* Length in u32 words */
 #define PREHDR_RSLS_SHIFT	31
-
+#define PENDING_JOBS_DEPTH	512
 /*
  * The jobs are processed by the driver against a driver context.
  * With every cryptographic context, a driver context is attached.
@@ -79,7 +79,7 @@ bool caam_drv_ctx_busy(struct caam_drv_ctx *drv_ctx)
 		return true;
 
 	pending = atomic_read(&per_cpu(pcpu_qipriv.pending, drv_ctx->cpu));
-	if (pending >= JOBR_DEPTH)
+	if (pending >= PENDING_JOBS_DEPTH)
 		return true;
 
 	return false;
-- 
2.0.2

