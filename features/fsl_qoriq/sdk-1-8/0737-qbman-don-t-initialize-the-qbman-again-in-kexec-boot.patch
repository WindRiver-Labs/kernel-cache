From 790b03e98ee57eccb51be5b8339e295e58a8b57a Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 6 Mar 2013 13:23:03 +0800
Subject: [PATCH 737/987] qbman: don't initialize the qbman again in kexec boot

We can't do a hardware reset for qbman. So it may causes unknown
issues when changing the memories used by them at runtime.
Previously we have used this method for the kdump kernel, and it
should be safe for kexec boot too. Also add a WRAN_ON if we
can't reserve the memories successfully.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_qbman/bman_config.c | 6 ++++--
 drivers/staging/fsl_qbman/qman_config.c | 6 ++++--
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_config.c b/drivers/staging/fsl_qbman/bman_config.c
index 5d733a0..11a91b1 100644
--- a/drivers/staging/fsl_qbman/bman_config.c
+++ b/drivers/staging/fsl_qbman/bman_config.c
@@ -222,7 +222,7 @@ static void bm_set_pool(struct bman *bm, u8 pool, u32 swdet, u32 swdxt,
 	bm_out(POOL_HWDXT(pool), __generate_thresh(hwdxt, 1));
 }
 
-#ifdef CONFIG_CRASH_DUMP
+#if defined(CONFIG_KEXEC) || defined(CONFIG_CRASH_DUMP)
 static int bm_is_initalized(struct bman *bm)
 {
 	return bm_in(FBPR_BAR);
@@ -234,13 +234,15 @@ static void bm_reserve_memory(struct bman *bm)
 	u64 addr = 0;
 	u32 exp = 0;
 	u32 size = 0;
+	int ret;
 
 	upper_ba = bm_in(FBPR_BARE);
 	lower_ba = bm_in(FBPR_BAR);
 	exp = (bm_in(FBPR_AR) & 0x3f);
 	size = 2 << exp;
 	addr = (u64)((upper_ba << 31) | lower_ba);
-	memblock_reserve(addr, size);
+	ret = memblock_reserve(addr, size);
+	WARN_ON(ret);
 }
 #else
 static int bm_is_initalized(struct bman *bm)
diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index f5c17d4..6c73fbf 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -351,7 +351,7 @@ static void qm_get_version(struct qman *qm, u16 *id, u8 *major, u8 *minor,
 	*cfg = v2 & 0xff;
 }
 
-#ifdef CONFIG_CRASH_DUMP
+#if defined(CONFIG_KEXEC) || defined(CONFIG_CRASH_DUMP)
 static int qm_is_initalized(struct qman *qm, enum qm_memory memory)
 {
 	u32 offset = (memory == qm_memory_fqd) ? REG_FQD_BARE : REG_PFDR_BARE;
@@ -366,13 +366,15 @@ static void qm_reserve_memory(struct qman *qm, enum qm_memory memory)
 	u32 size = 0;
 	u32 unknown_hole_size = 0;
 	u32 offset = (memory == qm_memory_fqd) ? REG_FQD_BARE : REG_PFDR_BARE;
+	int ret;
 
 	upper_ba = __qm_in(qm, offset);
 	lower_ba = __qm_in(qm, offset + REG_offset_BAR);
 	exp = (__qm_in(qm, offset + REG_offset_AR) & 0x3f);
 	size = 2 << exp;
 	addr = (u64)((upper_ba << 31) | lower_ba);
-	memblock_reserve(addr, size);
+	ret = memblock_reserve(addr, size);
+	WARN_ON(ret);
 }
 #else
 static int qm_is_initalized(struct qman *qm, enum qm_memory memory)
-- 
1.9.1

