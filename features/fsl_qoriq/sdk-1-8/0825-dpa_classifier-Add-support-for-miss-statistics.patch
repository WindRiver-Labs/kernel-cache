From 552c8d11e271697e68382f3afa7fe6409dc86e8c Mon Sep 17 00:00:00 2001
From: Bogdan Constantin Popescu <bogdan.c.popescu@freescale.com>
Date: Wed, 24 Sep 2014 15:17:43 +0300
Subject: [PATCH 825/987] dpa_classifier: Add support for miss statistics

This commit adds support in dpa_classifier in order to retrieve
miss statistics for a given table.

Change-Id: Iea61107e05d13abf70d19aeb8c970c401c1562fc
Signed-off-by: Bogdan Constantin Popescu <bogdan.c.popescu@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/19618
Reviewed-by: Marian-Cornel Chereji <marian.chereji@freescale.com>
Tested-by: Marian-Cornel Chereji <marian.chereji@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/staging/fsl_dpa_offload/dpa_classifier.c   | 45 ++++++++++++++++++++++
 .../staging/fsl_dpa_offload/dpa_classifier_ioctl.h |  9 ++++-
 .../staging/fsl_dpa_offload/wrp_dpa_classifier.c   | 28 ++++++++++++++
 include/linux/fsl_dpa_classifier.h                 |  5 +++
 4 files changed, 86 insertions(+), 1 deletion(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier.c b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
index 246435b..ffc9ce8 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier.c
@@ -2061,6 +2061,51 @@ static int table_get_entry_stats_by_ref(struct dpa_cls_table	*ptable,
 	return ret;
 }
 
+int dpa_classif_table_get_miss_stats(int			td,
+				struct dpa_cls_tbl_entry_stats	*stats)
+{
+	struct dpa_cls_table *ptable;
+	t_FmPcdCcKeyStatistics key_stats;
+	t_Error err;
+	int i, ret = 0;
+
+	dpa_cls_dbg(("DEBUG: dpa_classifier %s (%d) -->\n",
+			__func__, __LINE__));
+
+	/* Parameters sanity check. */
+	if (!stats) {
+		log_err("\"stats\" cannot be NULL.\n");
+		return -EINVAL;
+	}
+
+	LOCK_OBJECT(table_array, td, ptable, -EINVAL);
+	memset(stats, 0, sizeof(*stats));
+	for (i = 0; i < ptable->int_cc_nodes_count; i++) {
+		memset(&key_stats, 0, sizeof(key_stats));
+		err = FM_PCD_MatchTableGetMissStatistics(
+				(t_Handle)ptable->int_cc_node[i].cc_node,
+				&key_stats);
+		if (err != E_OK) {
+			log_warn("FMan driver call failed - FM_PCD_MatchTableGetMissStatistics. Failed to acquire key statistics.\n");
+			memset(stats, 0, sizeof(*stats));
+			ret = -EPERM;
+			break;
+		}
+		stats->pkts += key_stats.frameCount;
+		stats->bytes += key_stats.byteCount;
+	}
+	RELEASE_OBJECT(ptable);
+
+	if (ret < 0)
+		log_err("Failed to get miss stats in table td=%d.\n", td);
+
+	dpa_cls_dbg(("DEBUG: dpa_classifier %s (%d) <--\n",
+			__func__, __LINE__));
+
+	return ret;
+}
+EXPORT_SYMBOL(dpa_classif_table_get_miss_stats);
+
 int dpa_classif_table_get_params(int td, struct dpa_cls_tbl_params *params)
 {
 	struct dpa_cls_table *ptable;
diff --git a/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h b/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h
index 1e73bd6..9595c1a 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_classifier_ioctl.h
@@ -1,4 +1,3 @@
-
 /* Copyright 2008-2012 Freescale Semiconductor, Inc.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -110,6 +109,11 @@ struct ioc_dpa_cls_tbl_entry_stats_by_ref {
 	struct dpa_cls_tbl_entry_stats stats;
 };
 
+struct ioc_dpa_cls_tbl_miss_stats {
+	int td;
+	struct dpa_cls_tbl_entry_stats stats;
+};
+
 struct ioc_dpa_cls_hm_remove_params {
 	struct dpa_cls_hm_remove_params rm_params;
 	int next_hmd;
@@ -698,6 +702,9 @@ int dpa_cls_mcast_member_params_compatcpy(
 #define DPA_CLS_IOC_TBL_GET_STATS_BY_REF		\
 	_IOR(DPA_CLS_IOC_MAGIC, 12, struct ioc_dpa_cls_tbl_entry_stats_by_ref)
 
+#define DPA_CLS_IOC_TBL_GET_MISS_STATS			\
+	_IOR(DPA_CLS_IOC_MAGIC, 13, struct ioc_dpa_cls_tbl_miss_stats)
+
 #define DPA_CLS_IOC_TBL_GET_PARAMS			\
 	_IOWR(DPA_CLS_IOC_MAGIC, 15, struct ioc_dpa_cls_tbl_params)
 
diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
index 0e08edd..9c15dba 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_classifier.c
@@ -452,6 +452,34 @@ long wrp_dpa_classif_do_ioctl(
 		break;
 	}
 
+	case DPA_CLS_IOC_TBL_GET_MISS_STATS:
+	{
+		struct ioc_dpa_cls_tbl_miss_stats param;
+
+		dpa_cls_wrp_dbg((
+			"DEBUG: classifier_wrp %s (%d): get_miss_stats\n",
+			__func__, __LINE__));
+
+		/* Prepare arguments */
+		if (copy_from_user(&param, (void *) args, sizeof(param))) {
+			log_err("Read failed: dpa_classif_table_get_miss_stats user space args.\n");
+			return -EBUSY;
+		}
+
+		/* Call function */
+		ret = dpa_classif_table_get_miss_stats(param.td, &param.stats);
+		if (ret < 0)
+			return ret;
+
+		/* Return results to user space */
+		if (copy_to_user((void *) args, &param, sizeof(param))) {
+			log_err("Write failed: dpa_classif_table_get_miss_stats result.\n");
+			return -EBUSY;
+		}
+
+		break;
+	}
+
 #ifdef CONFIG_COMPAT
 	case DPA_CLS_IOC_COMPAT_TBL_GET_PARAMS:
 #endif /* CONFIG_COMPAT */
diff --git a/include/linux/fsl_dpa_classifier.h b/include/linux/fsl_dpa_classifier.h
index cefa20c..22d5f6e 100644
--- a/include/linux/fsl_dpa_classifier.h
+++ b/include/linux/fsl_dpa_classifier.h
@@ -486,6 +486,11 @@ int dpa_classif_table_get_entry_stats_by_ref(int		td,
 				int				entry_id,
 				struct dpa_cls_tbl_entry_stats	*stats);
 
+/* Returns the miss statistics for the specified table. */
+int dpa_classif_table_get_miss_stats(int			td,
+				struct dpa_cls_tbl_entry_stats	*stats);
+
+
 /* Returns the parameters of a classifier table. */
 int dpa_classif_table_get_params(int td, struct dpa_cls_tbl_params *params);
 
-- 
1.9.1

