From cab8fa7df5449d65dbc3b6422988c0d4154b1cb7 Mon Sep 17 00:00:00 2001
From: Wang Quanyang <quanyang.wang@windriver.com>
Date: Tue, 13 Oct 2015 21:52:08 -0400
Subject: [PATCH 1092/1094] mmc: esdhc: replace max_discard_to with
 max_busy_timeout

According to upstream commit 68eb80e06bfa
("mmc: core: Rename max_discard_to to max_busy_timeout"), use
max_busy_timeout instead of max_discard_to.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/mmc/core/core.c           | 8 ++++----
 drivers/mmc/host/sdhci-of-esdhc.c | 2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index 29390fc..7dba03b 100644
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -861,10 +861,10 @@ void mmc_set_data_timeout(struct mmc_data *data, const struct mmc_card *card)
 		}
 	}
 
-	if (host->max_discard_to &&
-			(host->max_discard_to <
+	if (host->max_busy_timeout &&
+			(host->max_busy_timeout <
 			(data->timeout_ns / 1000000)))
-		data->timeout_ns = host->max_discard_to * 1000000;
+		data->timeout_ns = host->max_busy_timeout * 1000000;
 
 }
 EXPORT_SYMBOL(mmc_set_data_timeout);
@@ -2273,7 +2273,7 @@ unsigned int mmc_calc_max_discard(struct mmc_card *card)
 	struct mmc_host *host = card->host;
 	unsigned int max_discard, max_trim;
 
-	if (!host->max_discard_to) {
+	if (!host->max_busy_timeout) {
 
 		/*
 		 * Without erase_group_def set, MMC erase timeout depends
diff --git a/drivers/mmc/host/sdhci-of-esdhc.c b/drivers/mmc/host/sdhci-of-esdhc.c
index 0137e70..ddf168e 100644
--- a/drivers/mmc/host/sdhci-of-esdhc.c
+++ b/drivers/mmc/host/sdhci-of-esdhc.c
@@ -396,7 +396,7 @@ static void esdhc_of_set_clock(struct sdhci_host *host, unsigned int clock)
 
 	if (host->quirks & SDHCI_QUIRK_DATA_TIMEOUT_USES_SDCLK) {
 		host->timeout_clk = actual_clk / 1000;
-		host->mmc->max_discard_to = (1 << 27) / host->timeout_clk;
+		host->mmc->max_busy_timeout = (1 << 27) / host->timeout_clk;
 	}
 }
 
-- 
2.0.2

