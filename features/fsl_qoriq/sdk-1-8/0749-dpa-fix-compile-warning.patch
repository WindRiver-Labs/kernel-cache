From 261773b13d55c70aeb1cc11e1994218d39cd3ea2 Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Fri, 14 Nov 2014 10:08:42 +0800
Subject: [PATCH 749/987] dpa:fix compile warning

Fix following compile warning introduced by dpa driver:

drivers/net/ethernet/freescale/dpa/dpaa_eth.c:665:2: warning: initialization from incompatible pointer type
  .ndo_select_queue = dpa_select_queue,
  ^
drivers/net/ethernet/freescale/dpa/dpaa_eth.c:665:2: warning: (near initialization for 'dpa_private_ops.ndo_select_queue')
drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c:98:2: warning: initialization from incompatible pointer type
  .ndo_select_queue = dpa_select_queue,
  ^
drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c:98:2: warning: (near initialization for 'dpa_shared_ops.ndo_select_queue')
drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c:104:2: warning: initialization from incompatible pointer type
  .ndo_select_queue = dpa_select_queue,
  ^
drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c:104:2: warning: (near initialization for 'dpa_macless_ops.ndo_select_queue')
drivers/net/ethernet/freescale/dpa/dpaa_eth.c:1128:2: warning: initialization from incompatible pointer type
  .shutdown       = dpa_remove,
  ^
drivers/net/ethernet/freescale/dpa/dpaa_eth.c:1128:2: warning: (near initialization for 'dpa_driver.shutdown')
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c        |  2 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c | 10 +++++++++-
 drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h |  6 +++++-
 3 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index 2f006d4..a387603 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -1125,7 +1125,7 @@ static struct platform_driver dpa_driver = {
 	},
 	.probe		= dpaa_eth_priv_probe,
 #if defined(CONFIG_KEXEC)
-	.shutdown       = dpa_remove,
+	.shutdown       = dpa_shutdown,
 #endif
 	.remove		= dpa_remove
 };
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index b3a1dd1..72e3059 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -521,6 +521,13 @@ int __cold dpa_remove(struct platform_device *of_dev)
 	return err;
 }
 
+#if defined(CONFIG_KEXEC)
+void __cold dpa_shutdown(struct platform_device *of_dev)
+{
+	dpa_remove(of_dev);
+}
+#endif
+
 struct mac_device * __cold __must_check
 __attribute__((nonnull))
 dpa_mac_probe(struct platform_device *_of_dev)
@@ -835,7 +842,8 @@ bool dpa_bpid2pool_use(int bpid)
 }
 
 #ifdef CONFIG_FSL_DPAA_ETH_USE_NDO_SELECT_QUEUE
-u16 dpa_select_queue(struct net_device *net_dev, struct sk_buff *skb)
+u16 dpa_select_queue(struct net_device *net_dev, struct sk_buff *skb,
+	void *accel_priv, select_queue_fallback_t fallback)
 {
 	return dpa_get_queue_mapping(skb);
 }
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h
index 33d6a35..958a90d 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.h
@@ -152,6 +152,9 @@ int dpa_get_ts(const struct dpa_priv_s *priv, enum port_type rx_tx,
 #endif /* CONFIG_FSL_DPAA_TS */
 int dpa_ioctl(struct net_device *dev, struct ifreq *rq, int cmd);
 int __cold dpa_remove(struct platform_device *of_dev);
+#if defined(CONFIG_KEXEC)
+void __cold dpa_shutdown(struct platform_device *of_dev);
+#endif
 struct mac_device * __cold __must_check
 __attribute__((nonnull)) dpa_mac_probe(struct platform_device *_of_dev);
 int dpa_set_mac_address(struct net_device *net_dev, void *addr);
@@ -167,7 +170,8 @@ void dpa_bpid2pool_map(int bpid, struct dpa_bp *dpa_bp);
 bool dpa_bpid2pool_use(int bpid);
 void dpa_bp_drain(struct dpa_bp *bp);
 #ifdef CONFIG_FSL_DPAA_ETH_USE_NDO_SELECT_QUEUE
-u16 dpa_select_queue(struct net_device *net_dev, struct sk_buff *skb);
+u16 dpa_select_queue(struct net_device *net_dev, struct sk_buff *skb,
+	void *accel_priv, select_queue_fallback_t fallback);
 #endif
 struct dpa_fq *dpa_fq_alloc(struct device *dev,
 				   const struct fqid_cell *fqids,
-- 
1.9.1

