From cd6b4e077baa4a3f54185372a00e96aebf00143b Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Sat, 26 Sep 2015 21:20:23 +0800
Subject: [PATCH 985/987] dpaa_eth: fix device attribute mode error

Kernel introduce macro "VERIFY_OCTAL_PERMISSIONS" to check the
mode value in "struct device_attribute", and 0x644 is wrong value
which exceed 0777, so use macro S_IRUGO instead, or it will occur
build error as below:

include/linux/bug.h:33:45: error: negati
ve width in bit-field '<anonymous>'
 #define BUILD_BUG_ON_ZERO(e) (sizeof(struct { int:-!!(e); }))
                                             ^
include/linux/kernel.h:823:3: note: in e
xpansion of macro 'BUILD_BUG_ON_ZERO'
   BUILD_BUG_ON_ZERO((perms) > 0777) +    \
   ^
include/linux/sysfs.h:92:12: note: in ex
pansion of macro 'VERIFY_OCTAL_PERMISSIONS'
    .mode = VERIFY_OCTAL_PERMISSIONS(_mode) },  \
            ^
include/linux/device.h:541:45: note: in
expansion of macro '__ATTR'
  struct device_attribute dev_attr_##_name = __ATTR(_name, _mode, _show, _store)

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 .../freescale/fman/src/wrapper/lnxwrp_sysfs_fm_port.c        | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_sysfs_fm_port.c b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_sysfs_fm_port.c
index bd62011..355874b 100644
--- a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_sysfs_fm_port.c
+++ b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_sysfs_fm_port.c
@@ -807,14 +807,14 @@ static ssize_t show_fm_port_qmi_regs(struct device *dev,
 #endif
 }
 
-static DEVICE_ATTR(fm_port_regs, 0x644, show_fm_port_regs, NULL);
-static DEVICE_ATTR(fm_port_qmi_regs, 0x644, show_fm_port_qmi_regs, NULL);
-static DEVICE_ATTR(fm_port_bmi_regs, 0x644, show_fm_port_bmi_regs, NULL);
+static DEVICE_ATTR(fm_port_regs, S_IRUGO, show_fm_port_regs, NULL);
+static DEVICE_ATTR(fm_port_qmi_regs, S_IRUGO, show_fm_port_qmi_regs, NULL);
+static DEVICE_ATTR(fm_port_bmi_regs, S_IRUGO, show_fm_port_bmi_regs, NULL);
 #if (DPAA_VERSION >= 11)
-static DEVICE_ATTR(fm_port_ipv4_opt, 0x644, show_fm_port_ipv4_options, NULL);
+static DEVICE_ATTR(fm_port_ipv4_opt, S_IRUGO, show_fm_port_ipv4_options, NULL);
 #endif
-static DEVICE_ATTR(fm_port_dsar_regs, 0x644, show_fm_port_dsar_regs, NULL);
-static DEVICE_ATTR(fm_port_dsar_mem, 0x644, show_fm_port_dsar_mem, NULL);
+static DEVICE_ATTR(fm_port_dsar_regs, S_IRUGO, show_fm_port_dsar_regs, NULL);
+static DEVICE_ATTR(fm_port_dsar_mem, S_IRUGO, show_fm_port_dsar_mem, NULL);
 
 int fm_port_sysfs_create(struct device *dev)
 {
-- 
1.9.1

