From dce9adf7f48671b3b243ce50e2184d81e4dc87f0 Mon Sep 17 00:00:00 2001
From: Laurentiu Tudor <Laurentiu.Tudor@freescale.com>
Date: Thu, 14 Mar 2013 16:13:51 +0200
Subject: [PATCH 1130/1207] powerpc/e6500: Don't assume two threads always
 present

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

There are virtualization scenarios that might expose
to guests e6500 cores with just one thread.
So check first how many threads are available and only
after that try starting them.

Signed-off-by: Laurentiu Tudor <Laurentiu.Tudor@freescale.com>
Change-Id: I7e14c0d7e9a792ad47e3f9cc41cf73a6a2b954f4
Reviewed-on: http://git.am.freescale.net:8181/578
Reviewed-by: Wood Scott-B07421 <scottwood@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
---
 arch/powerpc/include/asm/reg_booke.h | 1 +
 arch/powerpc/kernel/exceptions-64e.S | 8 ++++++--
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/arch/powerpc/include/asm/reg_booke.h b/arch/powerpc/include/asm/reg_booke.h
index 16547ef..ac33752 100644
--- a/arch/powerpc/include/asm/reg_booke.h
+++ b/arch/powerpc/include/asm/reg_booke.h
@@ -742,6 +742,7 @@
 #define MMUBE1_VBE4		0x00000002
 #define MMUBE1_VBE5		0x00000001
 
+#define TMRN_TMCFG0	0x010	/* Thread Management Configuration Register 0 */
 #define TMRN_IMSR0	0x120	/* Initial MSR Register 0 (e6500) */
 #define TMRN_IMSR1	0x121	/* Initial MSR Register 1 (e6500) */
 #define TMRN_INIA0	0x140	/* Next Instruction Address Register 0 */
diff --git a/arch/powerpc/kernel/exceptions-64e.S b/arch/powerpc/kernel/exceptions-64e.S
index 36989cc..697bb0a 100644
--- a/arch/powerpc/kernel/exceptions-64e.S
+++ b/arch/powerpc/kernel/exceptions-64e.S
@@ -1594,6 +1594,11 @@ init_core_book3e:
 
 _GLOBAL(fsl_enable_threads)
 BEGIN_FTR_SECTION
+	MFTMR(TMRN_TMCFG0, 3)
+	andi. r3,r3,0x3f
+	cmpi 0,r3,2
+	blt 2f
+
 	/* Disable the other thread */
 	li	r3,2
 	mtspr	SPRN_TENC,r3
@@ -1617,8 +1622,7 @@ BEGIN_FTR_SECTION
 	li	r3, 2
 	mtspr	SPRN_TENS, r3
 END_FTR_SECTION_IFSET(CPU_FTR_SMT)
-
-	blr
+2:	blr
 
 init_thread_book3e:
 	lis	r3,(SPRN_EPCR_ICM | SPRN_EPCR_GICM)@h
-- 
2.0.2

