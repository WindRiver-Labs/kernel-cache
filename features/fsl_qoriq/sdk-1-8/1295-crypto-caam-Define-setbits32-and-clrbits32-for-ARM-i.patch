From dc32820fc20e8b981a115ffbba166b394ef2ab44 Mon Sep 17 00:00:00 2001
From: "Victoria Milhoan (b42089)" <vicki.milhoan@freescale.com>
Date: Mon, 25 Mar 2013 11:31:20 -0700
Subject: [PATCH 1295/1336] crypto: caam - Define setbits32() and clrbits32()
 for ARM in the Freescale CAAM driver

The kernel defines setbits32() and clrbits32() macros only for
Power-based architectures.  This patch modifies the Freescale CAAM
driver to add macros for use on ARM architectures.

Signed-off-by: Victoria Milhoan (b42089) <vicki.milhoan@freescale.com>
Signed-off-by: Ruchika Gupta <ruchika.gupta@freescale.com>
(cherry picked from commit 54fbc7392ac344cb94c44a2d8e1e0a16c950a5cd)
Change-Id: Ia8065d9722bf5b7e60fd269d345b0b8c95ee96da
Reviewed-on: http://git.am.freescale.net:8181/17732
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Zhengxiong Jin <Jason.Jin@freescale.com>
Tested-by: Zhengxiong Jin <Jason.Jin@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/crypto/caam/compat.h | 2 ++
 drivers/crypto/caam/regs.h   | 6 ++++++
 2 files changed, 8 insertions(+)

diff --git a/drivers/crypto/caam/compat.h b/drivers/crypto/caam/compat.h
index acd7743..9515c1e 100644
--- a/drivers/crypto/caam/compat.h
+++ b/drivers/crypto/caam/compat.h
@@ -14,6 +14,8 @@
 #include <linux/hash.h>
 #include <linux/hw_random.h>
 #include <linux/of_platform.h>
+#include <linux/of_address.h>
+#include <linux/of_irq.h>
 #include <linux/dma-mapping.h>
 #include <linux/io.h>
 #include <linux/spinlock.h>
diff --git a/drivers/crypto/caam/regs.h b/drivers/crypto/caam/regs.h
index 378ddc1..c9f34b7 100644
--- a/drivers/crypto/caam/regs.h
+++ b/drivers/crypto/caam/regs.h
@@ -83,6 +83,12 @@
 #endif
 #endif
 
+#ifdef CONFIG_ARM
+/* These are common macros for Power, put here for ARMs */
+#define setbits32(_addr, _v) writel((readl(_addr) | (_v)), (_addr))
+#define clrbits32(_addr, _v) writel((readl(_addr) & ~(_v)), (_addr))
+#endif
+
 #ifndef CONFIG_64BIT
 #ifdef __BIG_ENDIAN
 static inline void wr_reg64(u64 __iomem *reg, u64 data)
-- 
2.0.2

