From f740d61017409452045761fa8646aa4c18412186 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Wed, 3 Feb 2016 10:16:47 +0800
Subject: [PATCH 1/7] crypto: testmgr: fix logical-not-parentheses warning

This fixes the following warning, that is seen with gcc 5.1:
warning: logical not is only applied to the left hand side
of comparison [-Wlogical-not-parentheses].

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 crypto/testmgr.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/crypto/testmgr.c b/crypto/testmgr.c
index a7bc179..51c8e7d 100644
--- a/crypto/testmgr.c
+++ b/crypto/testmgr.c
@@ -528,7 +528,7 @@ static int __test_aead(struct crypto_aead *tfm, int enc,
 		memcpy(key, template[i].key, template[i].klen);
 
 		ret = crypto_aead_setkey(tfm, key, template[i].klen);
-		if (!ret == template[i].fail) {
+		if ((!ret) == template[i].fail) {
 			pr_err("alg: aead%s: setkey failed on test %d for %s: flags=%x\n",
 			       d, j, algo, crypto_aead_get_flags(tfm));
 			goto out;
@@ -629,7 +629,7 @@ static int __test_aead(struct crypto_aead *tfm, int enc,
 		memcpy(key, template[i].key, template[i].klen);
 
 		ret = crypto_aead_setkey(tfm, key, template[i].klen);
-		if (!ret == template[i].fail) {
+		if ((!ret) == template[i].fail) {
 			pr_err("alg: aead%s: setkey failed on chunk test %d for %s: flags=%x\n",
 			       d, j, algo, crypto_aead_get_flags(tfm));
 			goto out;
@@ -919,7 +919,7 @@ static int __test_tls(struct crypto_aead *tfm, int enc,
 		memcpy(key, template[i].key, template[i].klen);
 
 		ret = crypto_aead_setkey(tfm, key, template[i].klen);
-		if (!ret == template[i].fail) {
+		if ((!ret) == template[i].fail) {
 			pr_err("alg: tls%s: setkey failed on test %d for %s: flags=%x\n",
 			       d, i, algo, crypto_aead_get_flags(tfm));
 			goto out;
@@ -1090,7 +1090,7 @@ static int test_cipher(struct crypto_cipher *tfm, int enc,
 
 		ret = crypto_cipher_setkey(tfm, template[i].key,
 					   template[i].klen);
-		if (!ret == template[i].fail) {
+		if ((!ret) == template[i].fail) {
 			printk(KERN_ERR "alg: cipher: setkey failed "
 			       "on test %d for %s: flags=%x\n", j,
 			       algo, crypto_cipher_get_flags(tfm));
@@ -1198,7 +1198,7 @@ static int __test_skcipher(struct crypto_ablkcipher *tfm, int enc,
 
 		ret = crypto_ablkcipher_setkey(tfm, template[i].key,
 					       template[i].klen);
-		if (!ret == template[i].fail) {
+		if ((!ret) == template[i].fail) {
 			pr_err("alg: skcipher%s: setkey failed on test %d for %s: flags=%x\n",
 			       d, j, algo, crypto_ablkcipher_get_flags(tfm));
 			goto out;
@@ -1265,7 +1265,7 @@ static int __test_skcipher(struct crypto_ablkcipher *tfm, int enc,
 
 		ret = crypto_ablkcipher_setkey(tfm, template[i].key,
 					       template[i].klen);
-		if (!ret == template[i].fail) {
+		if ((!ret) == template[i].fail) {
 			pr_err("alg: skcipher%s: setkey failed on chunk test %d for %s: flags=%x\n",
 			       d, j, algo, crypto_ablkcipher_get_flags(tfm));
 			goto out;
-- 
1.7.5.4

