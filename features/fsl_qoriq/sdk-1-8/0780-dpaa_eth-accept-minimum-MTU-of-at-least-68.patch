From c757e776856f7f4031b4e0aef251bacf1b7207a9 Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Tue, 19 Aug 2014 17:34:15 +0300
Subject: [PATCH 780/987] dpaa_eth: accept minimum MTU of at least 68

RFC 791 states that the minimum MTU needs to be 68 in order to
allow datagram forwarding without further fragmentation.

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: I4f9602c49a5a9aaac0030f511a6abbf32954f82f
Reviewed-on: http://git.am.freescale.net:8181/17073
Reviewed-by: Ruxandra Ioana Radulescu <ruxandra.radulescu@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.h        | 4 ----
 drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c | 5 ++---
 2 files changed, 2 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
index 75ddf2f..66dd4de 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
@@ -48,10 +48,6 @@ extern int dpa_num_cpus;
 #define dpa_get_rx_extra_headroom() dpa_rx_extra_headroom
 #define dpa_get_max_frm() dpa_max_frm
 
-/* Currently we have the same max_frm on all interfaces, so these macros
- * don't get a net_device argument. This will change in the future.
- */
-#define dpa_get_min_mtu()	64
 #define dpa_get_max_mtu()	\
 	(dpa_get_max_frm() - (VLAN_ETH_HLEN + ETH_FCS_LEN))
 
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index f01e3e9..cca21cd 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -255,12 +255,11 @@ dpa_get_stats64(struct net_device *net_dev,
 int dpa_change_mtu(struct net_device *net_dev, int new_mtu)
 {
 	const int max_mtu = dpa_get_max_mtu();
-	const int min_mtu = dpa_get_min_mtu();
 
 	/* Make sure we don't exceed the Ethernet controller's MAXFRM */
-	if (new_mtu < min_mtu || new_mtu > max_mtu) {
+	if (new_mtu < 68 || new_mtu > max_mtu) {
 		netdev_err(net_dev, "Invalid L3 mtu %d (must be between %d and %d).\n",
-				new_mtu, min_mtu, max_mtu);
+				new_mtu, 68, max_mtu);
 		return -EINVAL;
 	}
 	net_dev->mtu = new_mtu;
-- 
1.9.1

