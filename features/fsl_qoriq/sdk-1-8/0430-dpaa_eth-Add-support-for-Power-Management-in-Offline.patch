From 9fa68e61fa5c10dff9f71fdb998eec66ff6fbff5 Mon Sep 17 00:00:00 2001
From: Cristian Sovaiala <cristian.sovaiala@freescale.com>
Date: Fri, 25 Oct 2013 09:33:30 +0300
Subject: [PATCH 430/987] dpaa_eth: Add support for Power Management in Offline
 Port driver

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Implement Power Management suspend_noirq/resume_noirq specific
callbacks were we disable/enable the Offline Port.

Signed-off-by: Cristian Sovaiala <cristian.sovaiala@freescale.com>
Change-Id: I3ee47c9cea179761fcb28226b69a6761e9b24f8d
Reviewed-on: http://git.am.freescale.net:8181/6842
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Marian Cristian Rotariu <marian.rotariu@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/7670
Reviewed-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
Tested-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
---
 drivers/net/ethernet/freescale/dpa/offline_port.c | 49 ++++++++++++++++++-----
 1 file changed, 39 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/offline_port.c b/drivers/net/ethernet/freescale/dpa/offline_port.c
index 389a9f8..48af9f9 100644
--- a/drivers/net/ethernet/freescale/dpa/offline_port.c
+++ b/drivers/net/ethernet/freescale/dpa/offline_port.c
@@ -72,19 +72,37 @@ static const struct of_device_id oh_port_match_table[] = {
 };
 MODULE_DEVICE_TABLE(of, oh_port_match_table);
 
-static int oh_port_remove(struct platform_device *_of_dev);
-static int oh_port_probe(struct platform_device *_of_dev);
+#ifdef CONFIG_PM
 
-static struct platform_driver oh_port_driver = {
-	.driver = {
-		.name		= KBUILD_MODNAME,
-		.of_match_table	= oh_port_match_table,
-		.owner		= THIS_MODULE,
-	},
-	.probe		= oh_port_probe,
-	.remove		= oh_port_remove
+static int oh_suspend_noirq(struct device *dev)
+{
+	struct dpa_oh_config_s	*oh_config;
+
+	oh_config = dev_get_drvdata(dev);
+	return fm_port_suspend(oh_config->oh_port);
+}
+
+static int oh_resume_noirq(struct device *dev)
+{
+	struct dpa_oh_config_s	*oh_config;
+
+	oh_config = dev_get_drvdata(dev);
+	return fm_port_resume(oh_config->oh_port);
+}
+
+static struct dev_pm_ops oh_pm_ops = {
+	.suspend_noirq = oh_suspend_noirq,
+	.resume_noirq = oh_resume_noirq,
 };
 
+#define OH_PM_OPS (&oh_pm_ops)
+
+#else /* CONFIG_PM */
+
+#define OH_PM_OPS NULL
+
+#endif /* CONFIG_PM */
+
 /* Creates Frame Queues */
 static uint32_t oh_fq_create(struct qman_fq *fq,
 	uint32_t fq_id, uint16_t channel,
@@ -572,6 +590,17 @@ return_error:
 	return _errno;
 }
 
+static struct platform_driver oh_port_driver = {
+	.driver = {
+		.name		= KBUILD_MODNAME,
+		.of_match_table	= oh_port_match_table,
+		.owner		= THIS_MODULE,
+		.pm		= OH_PM_OPS,
+	},
+	.probe		= oh_port_probe,
+	.remove		= oh_port_remove
+};
+
 static int __init __cold oh_port_load(void)
 {
 	int _errno;
-- 
1.9.1

