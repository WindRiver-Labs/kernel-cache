From 7dfd6f50d743150f3e199c947563a687c4ff537c Mon Sep 17 00:00:00 2001
From: Prabhakar Kushwaha <prabhakar@freescale.com>
Date: Wed, 10 Oct 2012 12:33:24 +0000
Subject: [PATCH 097/227] powerpc/pci:Use IP block rev reg instead of
 compatible in suspend

Freescale PCIe IP block revision >= rev 2.2 needs to redefine the sequence of
inbound windows.
So Use IP block revision register instead of dts compatible field for the judgment.

Signed-off-by: Prabhakar Kushwaha <prabhakar@freescale.com>
Signed-off-by: Andy Fleming <afleming@freescale.com>
[Kevin: Original patch taken from fsl sdk 1.3.1
QorIQ-SDK-V1.3.1-SOURCE-20121220-yocto.iso.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/sysdev/fsl_pci.c |   23 ++++++++++++-----------
 1 file changed, 12 insertions(+), 11 deletions(-)

diff --git a/arch/powerpc/sysdev/fsl_pci.c b/arch/powerpc/sysdev/fsl_pci.c
index e8fadb9..37e5917 100644
--- a/arch/powerpc/sysdev/fsl_pci.c
+++ b/arch/powerpc/sysdev/fsl_pci.c
@@ -1014,26 +1014,27 @@ static int fsl_pci_suspend(struct platform_device *pdev, pm_message_t state)
 	struct pci_controller *hose;
 	struct pci_outbound_window_regs *pci_saved_pow;
 	struct pci_inbound_window_regs *pci_saved_piw, *temp_piw;
-	struct resource pci_rsrc;
+	struct ccsr_pci __iomem *pci;
 	unsigned int i;
 
 	hose = pci_find_hose_for_OF_device(pdev->dev.of_node);
-	of_address_to_resource(pdev->dev.of_node, 0, &pci_rsrc);
+	pci = of_iomap(pdev->dev.of_node, 0);
 
-	hose->pci_pow = ioremap(pci_rsrc.start + PCI_POW_PIW_OFFSET,
-			PCI_POW_PIW_SIZE);
-	if (!hose->pci_pow) {
-		dev_err(&pdev->dev, "pci outbound/inbound windows ioremap error!\n");
+	if (!pci) {
+		dev_err(&pdev->dev, "Unable to map PCI registers\n");
 		return -ENOMEM;
 	}
+	hose->pci_pow = (struct pci_outbound_window_regs *)
+				(void *)pci + PCI_POW_PIW_OFFSET;
 
 	hose->pci_piw = (struct pci_inbound_window_regs *)
 		((void *)hose->pci_pow + PCI_POW_PIW_SIZE) - 1;
 
-	if (of_device_is_compatible(pdev->dev.of_node, "fsl,qoriq-pcie-v2.2"))
-		hose->inbound_num = 4;
-	else
-		hose->inbound_num = 3;
+	hose->inbound_num = 3;
+	if (early_find_capability(hose, 0, 0, PCI_CAP_ID_EXP)) {
+		if (in_be32(&pci->block_rev1) >= PCIE_IP_REV_2_2)
+			hose->inbound_num = 4;
+	}
 
 	hose->saved_regs = kmalloc(
 		sizeof(struct pci_outbound_window_regs) * PCI_POW_NUMBER +
@@ -1063,7 +1064,7 @@ static int fsl_pci_suspend(struct platform_device *pdev, pm_message_t state)
 	return 0;
 
 err:
-	iounmap(hose->pci_pow);
+	iounmap(pci);
 	return -ENOMEM;
 }
 
-- 
1.7.9.7

