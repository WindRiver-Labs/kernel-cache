From 4823f4f52611e7b6e6ab0314d7d3def2af767ad1 Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Thu, 29 Nov 2012 15:05:26 +0200
Subject: [PATCH 205/227] fmd: export FM_VSP_Config()

Add IOCTL implementation for the FM_VSP_Config() API member.

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
[Kevin: Original patch taken from fsl sdk 1.3.1
QorIQ-SDK-V1.3.1-SOURCE-20121220-yocto.iso.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c   |   48 ++++++++++++++++++--
 .../src/wrapper/lnxwrp_ioctls_fm_compat.c          |   36 ++++++++++++++-
 .../src/wrapper/lnxwrp_ioctls_fm_compat.h          |   33 ++++++++------
 3 files changed, 96 insertions(+), 21 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
index 9384ebf..ae1d501 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
@@ -70,6 +70,7 @@
 #include "fm_ioctls.h"
 #include "fm_pcd_ioctls.h"
 #include "fm_port_ioctls.h"
+#include "fm_vsp_ext.h"
 
 #if defined(CONFIG_COMPAT)
 #include "lnxwrp_ioctls_fm_compat.h"
@@ -566,12 +567,7 @@ Status: not exported, would be nice to have
 
 Status: not exported
 #if DPAA_VERSION >= 11
-    FM_PCD_FrmReplicSetGroup
-    FM_PCD_FrmReplicDeleteGroup
-    FM_PCD_FrmReplicAddMember
-    FM_PCD_FrmReplicRemoveMember
 
-    FM_VSP_Config
     FM_VSP_Init
     FM_VSP_Free
     FM_VSP_ConfigPoolDepletion
@@ -2779,7 +2775,49 @@ invalid_port_id:
 		return FM_PCD_FrmReplicRemoveMember(param.h_replic_group, param.member_index);
 	}
 	break;
+
+#if defined(CONFIG_COMPAT)
+    case FM_IOC_VSP_CONFIG_COMPAT:
+#endif
+    case FM_IOC_VSP_CONFIG:
+    {
+        ioc_fm_vsp_params_t param;
+
+#if defined(CONFIG_COMPAT)
+        if (compat)
+        {
+            ioc_compat_fm_vsp_params_t compat_param;
+
+            if (copy_from_user(&compat_param, compat_ptr(arg), sizeof(compat_param)))
+                RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+
+            compat_copy_fm_vsp_params(&compat_param, &param, COMPAT_US_TO_K);
+        }
+        else
+#endif
+            if (copy_from_user(&param, (void *)arg, sizeof(param)))
+                RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+
+        param.id = FM_VSP_Config((t_FmVspParams *)&param);
+
+#if defined(CONFIG_COMPAT)
+        if (compat)
+        {
+            ioc_compat_fm_vsp_params_t compat_param;
+
+            memset(&compat_param, 0, sizeof(compat_param));
+            compat_copy_fm_vsp_params(&compat_param, &param, COMPAT_K_TO_US);
+
+            if (copy_to_user(compat_ptr(arg), &compat_param, sizeof(compat_param)))
+                RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+        }
+        else
 #endif
+            if (copy_to_user((void *)arg, &param, sizeof(param)))
+                RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+        break;
+    }
+#endif /* (DPAA_VERSION >= 11) */
 
 #ifdef FM_CAPWAP_SUPPORT
 #warning "feature not supported!"
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.c
index cde7a8d..d080dc1 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.c
@@ -1038,7 +1038,7 @@ void compat_fm_pcd_manip_set_node(
     }
 }
 
-#if DPAA_VERSION >= 11
+#if (DPAA_VERSION >= 11)
 void compat_copy_fm_pcd_frm_replic_group_params(
 	ioc_compat_fm_pcd_frm_replic_group_params_t *compat_param,
 	ioc_fm_pcd_frm_replic_group_params_t *param,
@@ -1102,4 +1102,36 @@ void compat_copy_fm_pcd_frm_replic_member_params(
 
 	_fm_cpt_dbg (compat, " ...->}\n");
 }
-#endif
+
+void compat_copy_fm_vsp_params(
+    ioc_compat_fm_vsp_params_t *compat_param,
+    ioc_fm_vsp_params_t *param,
+    uint8_t compat)
+{
+    _fm_cpt_dbg (compat, " {->...\n");
+
+    if (compat == COMPAT_US_TO_K)
+    {
+        param->p_fm = compat_pcd_id2ptr(compat_param->p_fm);
+        memcpy(&param->ext_buf_pools, &compat_param->ext_buf_pools, sizeof(ioc_fm_ext_pools));
+        param->liodn_offset = compat_param->liodn_offset;
+        param->portParams.port_id = compat_param->portParams.port_id;
+        param->portParams.port_type = compat_param->portParams.port_type;
+        param->relative_profile_id = compat_param->relative_profile_id;
+        param->id = compat_pcd_id2ptr(compat_param->id);
+    }
+    else
+    {
+        compat_param->p_fm = compat_pcd_ptr2id(param->p_fm);
+        memcpy(&compat_param->ext_buf_pools, &param->ext_buf_pools, sizeof(ioc_fm_ext_pools));
+        compat_param->liodn_offset = param->liodn_offset;
+        compat_param->portParams.port_id = param->portParams.port_id;
+        compat_param->portParams.port_type = param->portParams.port_type;
+        compat_param->relative_profile_id = param->relative_profile_id;
+        compat_param->id = compat_add_ptr2id(param->id, FM_MAP_TYPE_PCD_NODE);
+    }
+
+    _fm_cpt_dbg (compat, " ...->}\n");
+}
+
+#endif /* (DPAA_VERSION >= 11) */
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.h b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.h
index aa3d0ba..8960eb4 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.h
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm_compat.h
@@ -480,18 +480,18 @@ typedef struct ioc_compat_fm_pcd_frm_replic_member_params_t {
 } ioc_compat_fm_pcd_frm_replic_member_params_t;
 
 typedef struct ioc_compat_fm_vsp_params_t {
-	compat_uptr_t       h_Fm;               /**< A handle to the FM object this VSP related to */
-	ioc_fm_ext_pools    extBufPools;        /**< Which external buffer pools are used
-						(up to FM_PORT_MAX_NUM_OF_EXT_POOLS), and their sizes.
-						parameter associated with Rx / OP port */
-	uint16_t            liodnOffset;        /**< VSP's LIODN offset */
-	struct {
-		ioc_fm_port_type portType;      /**< Port type */
-		uint8_t          portId;        /**< Port Id - relative to type */
-	} portParams;
-	uint8_t             relativeProfileId;  /**< VSP Id - relative to VSP's range
-						defined in relevant FM object */
-	compat_uptr_t       id;                 /**< return value */
+    compat_uptr_t       p_fm;                 /**< A handle to the FM object this VSP related to */
+    ioc_fm_ext_pools    ext_buf_pools;        /**< Which external buffer pools are used
+                                                   (up to FM_PORT_MAX_NUM_OF_EXT_POOLS), and their sizes.
+                                                   parameter associated with Rx / OP port */
+    uint16_t            liodn_offset;         /**< VSP's LIODN offset */
+    struct {
+        ioc_fm_port_type port_type;           /**< Port type */
+        uint8_t          port_id;             /**< Port Id - relative to type */
+    } portParams;
+    uint8_t             relative_profile_id;  /**< VSP Id - relative to VSP's range
+                                                   defined in relevant FM object */
+    compat_uptr_t       id;                 /**< return value */
 } ioc_compat_fm_vsp_params_t;
 
 #endif /* DPAA_VERSION >= 11 */
@@ -608,7 +608,7 @@ void compat_copy_fm_port_pcd_modify_tree(
         ioc_fm_obj_t *id,
         uint8_t compat);
 
-#if DPAA_VERSION >= 11
+#if (DPAA_VERSION >= 11)
 void compat_copy_fm_pcd_frm_replic_group_params(
 	ioc_compat_fm_pcd_frm_replic_group_params_t *compat_param,
 	ioc_fm_pcd_frm_replic_group_params_t *param,
@@ -623,6 +623,11 @@ void compat_copy_fm_pcd_frm_replic_member_params(
 	ioc_compat_fm_pcd_frm_replic_member_params_t *compat_param,
 	ioc_fm_pcd_frm_replic_member_params_t *param,
 	uint8_t compat);
-#endif
+
+void compat_copy_fm_vsp_params(
+    ioc_compat_fm_vsp_params_t *compat_param,
+    ioc_fm_vsp_params_t *param,
+    uint8_t compat);
+#endif /* (DPAA_VERSION >= 11) */
 /* } pcd compat functions */
 #endif
-- 
1.7.9.7

