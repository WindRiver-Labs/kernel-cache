From ce0755731bc960ccf2e84738a04e0bc85c6c9545 Mon Sep 17 00:00:00 2001
From: Hai-Ying Wang <Haiying.Wang@freescale.com>
Date: Tue, 4 Dec 2012 04:03:37 +0000
Subject: [PATCH 200/227] fsl_bman: Add APIs to query free buffers and update
 thresholds

Signed-off-by: Haiying Wang <Haiying.Wang@freescale.com>
Signed-off-by: Andy Fleming <afleming@freescale.com>
[Kevin: Original patch taken from fsl sdk 1.3.1
QorIQ-SDK-V1.3.1-SOURCE-20121220-yocto.iso.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/bman_config.c  |    5 +++++
 drivers/staging/fsl_qbman/bman_high.c    |   17 +++++++++++++++++
 drivers/staging/fsl_qbman/bman_private.h |    3 +++
 include/linux/fsl_bman.h                 |   16 ++++++++++++++++
 4 files changed, 41 insertions(+)

diff --git a/drivers/staging/fsl_qbman/bman_config.c b/drivers/staging/fsl_qbman/bman_config.c
index 875dbad..772cb6b 100644
--- a/drivers/staging/fsl_qbman/bman_config.c
+++ b/drivers/staging/fsl_qbman/bman_config.c
@@ -553,6 +553,11 @@ int bman_init_ccsr(struct device_node *node)
 	return 0;
 }
 
+u32 bm_pool_free_buffers(u32 bpid)
+{
+	return bm_in(POOL_CONTENT(bpid));
+}
+
 #ifdef CONFIG_SYSFS
 
 #define DRV_NAME "fsl-bman"
diff --git a/drivers/staging/fsl_qbman/bman_high.c b/drivers/staging/fsl_qbman/bman_high.c
index d31ef8d..bd9af27 100644
--- a/drivers/staging/fsl_qbman/bman_high.c
+++ b/drivers/staging/fsl_qbman/bman_high.c
@@ -990,3 +990,20 @@ int bman_query_pools(struct bm_pool_state *state)
 }
 EXPORT_SYMBOL(bman_query_pools);
 
+#ifdef CONFIG_FSL_BMAN_CONFIG
+u32 bman_query_free_buffers(struct bman_pool *pool)
+{
+	return bm_pool_free_buffers(pool->params.bpid);
+}
+EXPORT_SYMBOL(bman_query_free_buffers);
+
+int bman_update_pool_thresholds(struct bman_pool *pool, const u32 *thresholds)
+{
+	u32 bpid;
+
+	bpid = bman_get_params(pool)->bpid;
+
+	return bm_pool_set(bpid, thresholds);
+}
+EXPORT_SYMBOL(bman_update_pool_thresholds);
+#endif
diff --git a/drivers/staging/fsl_qbman/bman_private.h b/drivers/staging/fsl_qbman/bman_private.h
index f20f849..e94cf32 100644
--- a/drivers/staging/fsl_qbman/bman_private.h
+++ b/drivers/staging/fsl_qbman/bman_private.h
@@ -138,5 +138,8 @@ int bm_pool_set(u32 bpid, const u32 *thresholds);
 #define BM_POOL_THRESH_HW_ENTER 2
 #define BM_POOL_THRESH_HW_EXIT  3
 
+/* Read the free buffer count for a given buffer */
+u32 bm_pool_free_buffers(u32 bpid);
+
 #endif /* CONFIG_FSL_BMAN_CONFIG */
 
diff --git a/include/linux/fsl_bman.h b/include/linux/fsl_bman.h
index b9f24c7..072f326 100644
--- a/include/linux/fsl_bman.h
+++ b/include/linux/fsl_bman.h
@@ -487,6 +487,22 @@ int bman_flush_stockpile(struct bman_pool *pool, u32 flags);
  */
 int bman_query_pools(struct bm_pool_state *state);
 
+#ifdef CONFIG_FSL_BMAN_CONFIG
+/**
+ * bman_query_free_buffers - Query how many free buffers are in buffer pool
+ * @pool: the buffer pool object to query
+ *
+ * Return the number of the free buffers
+ */
+u32 bman_query_free_buffers(struct bman_pool *pool);
+
+/**
+ * bman_update_pool_thresholds - Change the buffer pool's depletion thresholds
+ * @pool: the buffer pool object to which the thresholds will be set
+ * @thresholds: the new thresholds
+ */
+int bman_update_pool_thresholds(struct bman_pool *pool, const u32 *thresholds);
+#endif
 #ifdef __cplusplus
 }
 #endif
-- 
1.7.9.7

