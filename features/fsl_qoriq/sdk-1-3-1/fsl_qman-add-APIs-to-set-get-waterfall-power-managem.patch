From 89965107016783e1db07f781f0c11a599bb7693f Mon Sep 17 00:00:00 2001
From: Hai-Ying Wang <Haiying.Wang@freescale.com>
Date: Tue, 4 Dec 2012 04:03:36 +0000
Subject: [PATCH 199/227] fsl_qman: add APIs to set/get waterfall power
 management

Signed-off-by: Haiying Wang <Haiying.Wang@freescale.com>
Signed-off-by: Andy Fleming <afleming@freescale.com>
[Kevin: Original patch taken from fsl sdk 1.3.1
QorIQ-SDK-V1.3.1-SOURCE-20121220-yocto.iso.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/qman_config.c  |   28 ++++++++++++++++++++++++++++
 drivers/staging/fsl_qbman/qman_high.c    |   12 ++++++++++++
 drivers/staging/fsl_qbman/qman_private.h |    3 +++
 include/linux/fsl_qman.h                 |   21 +++++++++++++++++++++
 4 files changed, 64 insertions(+)

diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index 269b4ee..7faa050 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -68,6 +68,7 @@
 #define REG_SBEC(n)		(0x0a80 + ((n) * 0x04))
 #define REG_MCR			0x0b00
 #define REG_MCP(n)		(0x0b04 + ((n) * 0x04))
+#define REG_MISC_CFG		0x0be0
 #define REG_HID_CFG		0x0bf0
 #define REG_IDLE_STAT		0x0bf4
 #define REG_IP_REV_1		0x0bf8
@@ -883,6 +884,33 @@ int qman_set_sdest(u16 channel, unsigned int cpu_idx)
 	return 0;
 }
 
+#define MISC_CFG_WPM_MASK 0x00000002
+int qm_set_wpm(int wpm)
+{
+	u32 before;
+	u32 after;
+
+	if (!qman_have_ccsr())
+		return -ENODEV;
+
+	before = qm_in(MISC_CFG);
+	after = (before & (~MISC_CFG_WPM_MASK)) | (wpm << 1);
+	qm_out(MISC_CFG, after);
+	return 0;
+}
+
+int qm_get_wpm(int *wpm)
+{
+	u32 before;
+
+	if (!qman_have_ccsr())
+		return -ENODEV;
+
+	before = qm_in(MISC_CFG);
+	*wpm = (before & MISC_CFG_WPM_MASK) >> 1;
+	return 0;
+}
+
 /* CEETM_CFG_PRES register has PRES field which is calculated by:
  *    PRES = (2^22 / credit update reference period) * QMan clock period
  *         = (2^22 * 10^9)/ CONFIG_QMAN_CEETM_UPDATE_PERIOD) / qman_clk
diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index b11027a..6a85b90 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -4277,3 +4277,15 @@ int qman_ceetm_querycongestion(u16 *ccg_state, unsigned int dcp_idx)
 	put_affine_portal();
 	return 0;
 }
+
+int qman_set_wpm(int wpm_enable)
+{
+	return qm_set_wpm(wpm_enable);
+}
+EXPORT_SYMBOL(qman_set_wpm);
+
+int qman_get_wpm(int *wpm_enable)
+{
+	return qm_get_wpm(wpm_enable);
+}
+EXPORT_SYMBOL(qman_get_wpm);
diff --git a/drivers/staging/fsl_qbman/qman_private.h b/drivers/staging/fsl_qbman/qman_private.h
index 9392aaa..c0030ad 100644
--- a/drivers/staging/fsl_qbman/qman_private.h
+++ b/drivers/staging/fsl_qbman/qman_private.h
@@ -138,6 +138,9 @@ void qman_liodn_fixup(u16 channel);
 int qman_set_sdest(u16 channel, unsigned int cpu_idx);
 #endif
 
+int qm_set_wpm(int wpm);
+int qm_get_wpm(int *wpm);
+
 /* Hooks from qman_driver.c in to qman_high.c */
 struct qman_portal *qman_create_affine_portal(
 			const struct qm_portal_config *config,
diff --git a/include/linux/fsl_qman.h b/include/linux/fsl_qman.h
index 4175240..7c5bd8f 100644
--- a/include/linux/fsl_qman.h
+++ b/include/linux/fsl_qman.h
@@ -3175,6 +3175,27 @@ int qman_ceetm_cscn_dcp_get(struct qm_ceetm_ccg *ccg,
  */
 int qman_ceetm_ccg_get_reject_statistics(struct qm_ceetm_ccg *ccg, u32 flags,
 					u64 *frame_count, u64 *byte_count);
+
+/**
+ * qman_set_wpm - Set waterfall power management
+ *
+ * @wpm_enable: boolean, 1 = enable wpm, 0 = disable wpm.
+ *
+ * Return 0 for success, return -ENODEV if QMan misc_cfg register is not
+ * accessible.
+ */
+int qman_set_wpm(int wpm_enable);
+
+/**
+ * qman_get_swp - Query the waterfall power management setting
+ *
+ * @wpm_enable: boolean, 1 = enable wpm, 0 = disable wpm.
+ *
+ * Return 0 for success, return -ENODEV if QMan misc_cfg register is not
+ * accessible.
+ */
+int qman_get_wpm(int *wpm_enable);
+
 #ifdef __cplusplus
 }
 #endif
-- 
1.7.9.7

