From 4b35669ff9cd33717644c608569f5c8f2840cb6e Mon Sep 17 00:00:00 2001
From: Hai-Ying Wang <Haiying.Wang@freescale.com>
Date: Wed, 27 Jun 2012 00:48:54 +0000
Subject: [PATCH 078/227] fsl_qbman: add qman rev3 qcsp config registers

QMan 3.x moves the QCSP_LIO_CFG, QCSP_IO_CFG, QCSP_DD_CFG to the offset 0x1000,
this patch adds support to this. It also renames QCSP_PID_CFG to QCSP_LIO_CFG
according to block guide.

Signed-off-by: Haiying Wang <Haiying.Wang@freescale.com>
[Kevin: Original patch taken from fsl sdk 1.3.1
QorIQ-SDK-V1.3.1-SOURCE-20121220-yocto.iso.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/qman_config.c |   15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index fa3eb69..a26c6fb 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -39,7 +39,7 @@
 /* Last updated for v00.800 of the BG */
 
 /* Register offsets */
-#define REG_QCSP_PID_CFG(n)	(0x0000 + ((n) * 0x10))
+#define REG_QCSP_LIO_CFG(n)	(0x0000 + ((n) * 0x10))
 #define REG_QCSP_IO_CFG(n)	(0x0004 + ((n) * 0x10))
 #define REG_QCSP_DD_CFG(n)	(0x000c + ((n) * 0x10))
 #define REG_DD_CFG		0x0200
@@ -83,6 +83,9 @@
 #define REG_LIODNR		0x0d08
 #define REG_CI_RLM_AVG		0x0d14
 #define REG_ERR_ISR		0x0e00	/* + "enum qm_isr_reg" */
+#define REG_REV3_QCSP_LIO_CFG(n)	(0x1000 + ((n) * 0x10))
+#define REG_REV3_QCSP_IO_CFG(n)	(0x1004 + ((n) * 0x10))
+#define REG_REV3_QCSP_DD_CFG(n)	(0x100c + ((n) * 0x10))
 
 /* Assists for QMAN_MCR */
 #define MCR_INIT_PFDR		0x01000000
@@ -836,14 +839,20 @@ void qman_liodn_fixup(u16 channel)
 
 	if (!qman_have_ccsr())
 		return;
-	before = qm_in(QCSP_PID_CFG(idx));
+	if ((qman_ip_rev & 0xFF00) >= QMAN_REV30)
+		before = qm_in(REV3_QCSP_LIO_CFG(idx));
+	else
+		before = qm_in(QCSP_LIO_CFG(idx));
 	if (!done) {
 		liodn_offset = before & PID_CFG_LIODN_MASK;
 		done = 1;
 		return;
 	}
 	after = (before & (~PID_CFG_LIODN_MASK)) | liodn_offset;
-	qm_out(QCSP_PID_CFG(idx), after);
+	if ((qman_ip_rev & 0xFF00) >= QMAN_REV30)
+		qm_out(REV3_QCSP_LIO_CFG(idx), after);
+	else
+		qm_out(QCSP_LIO_CFG(idx), after);
 }
 
 #define IO_CFG_SDEST_MASK 0x00ff0000
-- 
1.7.9.7

