From 211551cb5295a39ec29b3130d842bc57daefe9be Mon Sep 17 00:00:00 2001
From: Shengzhou Liu <Shengzhou.Liu@freescale.com>
Date: Thu, 15 Nov 2012 19:35:55 +0000
Subject: [PATCH 153/227] net/phy: Adding is_c45 to mii_bus for Clause 45 PHY

Some MDIO controllers(e.g. mEMAC MDIO) can support both Clause 22
and Clause 45 PHY. To indicate whether current MII bus is for Clause
45 PHY, we introduce a new variable is_c45 for struct mii_bus.
We can set compatible property to "ethernet-phy-ieee802.3-c45" in PHY
nodes of device tree and check it to set is_c45.

Signed-off-by: Shengzhou Liu <Shengzhou.Liu@freescale.com>
Signed-off-by: Andy Fleming <afleming@freescale.com>
[Kevin: Original patch taken from fsl sdk 1.3.1
QorIQ-SDK-V1.3.1-SOURCE-20121220-yocto.iso.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/platforms/85xx/qds_mdio.c |    2 ++
 drivers/of/of_mdio.c                   |    3 +++
 include/linux/phy.h                    |    3 +++
 3 files changed, 8 insertions(+)

diff --git a/arch/powerpc/platforms/85xx/qds_mdio.c b/arch/powerpc/platforms/85xx/qds_mdio.c
index 9e9e952..1ad6af8 100644
--- a/arch/powerpc/platforms/85xx/qds_mdio.c
+++ b/arch/powerpc/platforms/85xx/qds_mdio.c
@@ -51,6 +51,7 @@ int qds_mdio_write(struct mii_bus *bus, int port_addr, int dev_addr,
 	if ((emisel < 6) || (emisel == 7))
 		clrsetbits_8(priv->qixis_brdcfg4, priv->mask, priv->value);
 
+	priv->real_bus->is_c45 = bus->is_c45;
 	/* Write through to the attached MDIO bus */
 	ret = priv->real_bus->write(priv->real_bus, port_addr, dev_addr,
 					regnum, value);
@@ -73,6 +74,7 @@ int qds_mdio_read(struct mii_bus *bus, int port_addr, int dev_addr,
 	if ((emisel < 6) || (emisel == 7))
 		clrsetbits_8(priv->qixis_brdcfg4, priv->mask, priv->value);
 
+	priv->real_bus->is_c45 = bus->is_c45;
 	ret = priv->real_bus->read(priv->real_bus, port_addr, dev_addr,
 					regnum);
 	mutex_unlock(&emi_lock);
diff --git a/drivers/of/of_mdio.c b/drivers/of/of_mdio.c
index f0f4545..b96ec04 100644
--- a/drivers/of/of_mdio.c
+++ b/drivers/of/of_mdio.c
@@ -79,6 +79,9 @@ int of_mdiobus_register(struct mii_bus *mdio, struct device_node *np)
 				mdio->irq[addr] = PHY_POLL;
 		}
 
+		mdio->is_c45 = of_device_is_compatible(child,
+					"ethernet-phy-ieee802.3-c45");
+
 		phy = get_phy_device(mdio, addr);
 		if (!phy || IS_ERR(phy)) {
 			dev_err(&mdio->dev, "error probing PHY at address %i\n",
diff --git a/include/linux/phy.h b/include/linux/phy.h
index 9ede46b..3ce0104 100644
--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@ -131,6 +131,9 @@ struct mii_bus {
 	 * interrupt at the index matching its address
 	 */
 	int *irq;
+
+	/* indicate whether it's for Clause 45 PHY */
+	bool is_c45;
 };
 #define to_mii_bus(d) container_of(d, struct mii_bus, dev)
 
-- 
1.7.9.7

