From 7b0107041c333c72c7395d9347c4ce4dc5b8c373 Mon Sep 17 00:00:00 2001
From: Stefan Szabo <szbs001@freescale.com>
Date: Thu, 18 Oct 2012 19:22:40 +0300
Subject: [PATCH 106/227] fmd: FM_MAC_AddHashMacAddr and
 FM_MAC_RemoveHashMacAddr implemented as FM_PORT
 ioctls

Signed-off-by: Stefan Szabo <szbs001@freescale.com>
[Kevin: Original patch taken from fsl sdk 1.3.1
QorIQ-SDK-V1.3.1-SOURCE-20121220-yocto.iso.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c     |  177 --------------------
 .../dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c   |  146 ++++++++++++++--
 include/linux/fmd/Peripherals/fm_pcd_ioctls.h      |   22 ++-
 include/linux/fmd/Peripherals/fm_port_ioctls.h     |   45 +++--
 4 files changed, 169 insertions(+), 221 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
index 96b412d6..51126e0 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_fm_port.c
@@ -462,183 +462,6 @@ static t_Error ConfigureFmPortDev(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev)
 	return E_OK;
 }
 
-#if 0
-TODO: To be removed.
-static t_Error InitFmPort3TupleDefPcd(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev)
-{
-	t_LnxWrpFmDev *p_LnxWrpFmDev =
-		(t_LnxWrpFmDev *) p_LnxWrpFmPortDev->h_LnxWrpFmDev;
-	t_FmPcdNetEnvParams *p_netEnvParam = NULL;
-	t_FmPcdKgSchemeParams *p_schemeParam = NULL;
-	t_FmPortPcdParams pcdParam;
-	t_FmPortPcdPrsParams prsParam;
-	t_FmPortPcdKgParams kgParam;
-	uint8_t i, j;
-
-	if (!p_LnxWrpFmDev->kgActive)
-		RETURN_ERROR(MAJOR, E_INVALID_STATE,
-			     ("keygen must be enabled for 3-tuple PCD!"));
-
-	if (!p_LnxWrpFmDev->prsActive)
-		RETURN_ERROR(MAJOR, E_INVALID_STATE,
-			     ("parser must be enabled for 3-tuple PCD!"));
-
-	if (p_LnxWrpFmPortDev->pcdNumOfQs < 9)
-		RETURN_ERROR(MINOR, E_INVALID_VALUE,
-			     ("Need to save at least 18 queues for"
-				"3-tuple PCD!!!"));
-
-	p_LnxWrpFmPortDev->totalNumOfSchemes =
-		p_LnxWrpFmPortDev->numOfSchemesUsed = 2;
-
-	if (AllocSchemesForPort
-	    (p_LnxWrpFmDev, p_LnxWrpFmPortDev->totalNumOfSchemes,
-	     &p_LnxWrpFmPortDev->schemesBase) != E_OK)
-		RETURN_ERROR(MAJOR, E_INVALID_STATE,
-			     ("No schemes for Rx or OP port for"
-				" 3-tuple PCD!!!"));
-
-	p_netEnvParam = kzalloc(sizeof(*p_netEnvParam), GFP_KERNEL);
-	if (!p_netEnvParam) {
-		RETURN_ERROR(MAJOR, E_NO_MEMORY,
-			     ("Failed to allocate p_netEnvParam"));
-	}
-	/* set netEnv */
-	p_netEnvParam->numOfDistinctionUnits = 2;
-	p_netEnvParam->units[0].hdrs[0].hdr =
-		HEADER_TYPE_IPv4;	/* no special options */
-	p_netEnvParam->units[1].hdrs[0].hdr = HEADER_TYPE_ETH;
-	p_LnxWrpFmPortDev->h_DefNetEnv =
-		FM_PCD_NetEnvCharacteristicsSet(p_netEnvParam);
-	kfree(p_netEnvParam);
-	if (!p_LnxWrpFmPortDev->h_DefNetEnv)
-		RETURN_ERROR(MAJOR, E_INVALID_HANDLE, ("FM PCD!"));
-
-	p_schemeParam = kmalloc(sizeof(*p_schemeParam), GFP_KERNEL);
-	if (!p_schemeParam) {
-		RETURN_ERROR(MAJOR, E_NO_MEMORY,
-			     ("Failed to allocate p_schemeParam"));
-	}
-	for (i = 0; i < p_LnxWrpFmPortDev->numOfSchemesUsed; i++) {
-		memset(p_schemeParam, 0, sizeof(*p_schemeParam));
-		p_schemeParam->modify = FALSE;
-		p_schemeParam->id.relativeSchemeId =
-			i + p_LnxWrpFmPortDev->schemesBase;
-		p_schemeParam->alwaysDirect = FALSE;
-		p_schemeParam->netEnvParams.h_NetEnv =
-			p_LnxWrpFmPortDev->h_DefNetEnv;
-		p_schemeParam->schemeCounter.update = TRUE;
-		p_schemeParam->schemeCounter.value = 0;
-
-		switch (i) {
-		case (0):	/* catch IPv4 */
-			p_schemeParam->netEnvParams.numOfDistinctionUnits = 1;
-			p_schemeParam->netEnvParams.unitIds[0] = 0;
-			p_schemeParam->baseFqid = p_LnxWrpFmPortDev->pcdBaseQ;
-			p_schemeParam->nextEngine = e_FM_PCD_DONE;
-			p_schemeParam->numOfUsedExtractedOrs = 0;
-			p_schemeParam->useHash = TRUE;
-			p_schemeParam->keyExtractAndHashParams.
-				numOfUsedExtracts = 3;
-			for (j = 0;
-			     j <
-			     p_schemeParam->keyExtractAndHashParams.
-			     numOfUsedExtracts; j++) {
-				p_schemeParam->keyExtractAndHashParams.
-					extractArray[j].type =
-					e_FM_PCD_EXTRACT_BY_HDR;
-				p_schemeParam->keyExtractAndHashParams.
-					extractArray[j].extractByHdr.hdr =
-					HEADER_TYPE_IPv4;
-				p_schemeParam->keyExtractAndHashParams.
-					extractArray[j].extractByHdr.
-					ignoreProtocolValidation = FALSE;
-				p_schemeParam->keyExtractAndHashParams.
-					extractArray[j].extractByHdr.type =
-					e_FM_PCD_EXTRACT_FULL_FIELD;
-			}
-			p_schemeParam->keyExtractAndHashParams.
-				extractArray[0].extractByHdr.extractByHdrType.
-				fullField.ipv4 = NET_HEADER_FIELD_IPv4_PROTO;
-			p_schemeParam->keyExtractAndHashParams.
-				extractArray[1].extractByHdr.extractByHdrType.
-				fullField.ipv4 = NET_HEADER_FIELD_IPv4_SRC_IP;
-			p_schemeParam->keyExtractAndHashParams.
-				extractArray[2].extractByHdr.extractByHdrType.
-				fullField.ipv4 = NET_HEADER_FIELD_IPv4_DST_IP;
-
-			if (p_schemeParam->useHash) {
-				p_schemeParam->keyExtractAndHashParams.
-					privateDflt0 = 0x01020304;
-				p_schemeParam->keyExtractAndHashParams.
-					privateDflt1 = 0x11121314;
-				p_schemeParam->keyExtractAndHashParams.
-					numOfUsedDflts =
-					FM_PCD_KG_NUM_OF_DEFAULT_GROUPS;
-				for (j = 0;
-				     j < FM_PCD_KG_NUM_OF_DEFAULT_GROUPS;
-				     j++) {
-						/* all types */
-			p_schemeParam->keyExtractAndHashParams.dflts[j].type =
-				(e_FmPcdKgKnownFieldsDfltTypes) j;
-					p_schemeParam->
-						keyExtractAndHashParams.
-						dflts[j].dfltSelect =
-						e_FM_PCD_KG_DFLT_GBL_0;
-				}
-				p_schemeParam->keyExtractAndHashParams.
-					numOfUsedMasks = 0;
-				p_schemeParam->keyExtractAndHashParams.
-					hashShift = 0;
-				p_schemeParam->keyExtractAndHashParams.
-					hashDistributionNumOfFqids = 8;
-			}
-			break;
-
-		case (1):	/* Garbage collector */
-			p_schemeParam->netEnvParams.numOfDistinctionUnits = 0;
-			p_schemeParam->baseFqid =
-				p_LnxWrpFmPortDev->pcdBaseQ + 8;
-			break;
-
-		default:
-			break;
-		}
-
-		p_LnxWrpFmPortDev->h_Schemes[i] =
-			FM_PCD_KgSchemeSet(p_schemeParam);
-		if (!p_LnxWrpFmPortDev->h_Schemes[i]) {
-			kfree(p_schemeParam);
-			RETURN_ERROR(MAJOR, E_INVALID_HANDLE,
-				     ("FM_PCD_KgSetScheme failed"));
-		}
-	}
-	kfree(p_schemeParam);
-
-	/* initialize PCD parameters */
-	memset(&pcdParam, 0, sizeof(t_FmPortPcdParams));
-	pcdParam.h_NetEnv = p_LnxWrpFmPortDev->h_DefNetEnv;
-	pcdParam.pcdSupport = e_FM_PORT_PCD_SUPPORT_PRS_AND_KG;
-
-	/* initialize Keygen parameters */
-	memset(&prsParam, 0, sizeof(t_FmPortPcdPrsParams));
-
-	prsParam.parsingOffset = 0;
-	prsParam.firstPrsHdr = HEADER_TYPE_ETH;
-	pcdParam.p_PrsParams = &prsParam;
-
-	/* initialize Parser parameters */
-	memset(&kgParam, 0, sizeof(t_FmPortPcdKgParams));
-	kgParam.numOfSchemes = p_LnxWrpFmPortDev->numOfSchemesUsed;
-	for (i = 0; i < kgParam.numOfSchemes; i++)
-		kgParam.h_Schemes[i] = p_LnxWrpFmPortDev->h_Schemes[i];
-
-	pcdParam.p_KgParams = &kgParam;
-
-	return FM_PORT_SetPCD(p_LnxWrpFmPortDev->h_Dev, &pcdParam);
-}
-#endif
-
 static t_Error InitFmPortDev(t_LnxWrpFmPortDev *p_LnxWrpFmPortDev)
 {
 #define MY_ADV_CONFIG_CHECK_END \
diff --git a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
index 662d644..d767806 100644
--- a/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
+++ b/drivers/net/ethernet/freescale/dpa/NetCommSw/src/wrapper/lnxwrp_ioctls_fm.c
@@ -77,6 +77,8 @@
 
 #include "lnxwrp_fm.h"
 
+#include "dpaa_eth.h"
+
 #define CMP_IOC_DEFINE(def) (IOC_##def != def)
 
 /* fm_pcd_ioctls.h === fm_pcd_ext.h assertions */
@@ -328,11 +330,6 @@
 #error Error: please synchronize IOC_ defines!
 #endif
 
-/* fm_port_ioctls.h === dpaa_integrations_ext.h assertions */
-#if CMP_IOC_DEFINE(FM_PORT_NUM_OF_CONGESTION_GRPS)
-#error Error: please synchronize IOC_ defines!
-#endif
-
 void LnxWrpPCDIOCTLTypeChecking(void)
 {
     /* fm_ext.h == fm_ioctls.h */
@@ -515,7 +512,40 @@ static t_Error LnxwrpFmPcdIOCTL(t_LnxWrpFmDev *p_LnxWrpFmDev, unsigned int cmd,
     t_Error err = E_OK;
 
 /*
-    Status: PCD API to fmlib (file: drivers/net/dpa/NetCommSw/inc/Peripherals/fm_pcd_ext.h):
+Status: PCD API to fmlib (file: drivers/net/dpa/NetCommSw/inc/Peripherals/fm_pcd_ext.h):
+
+    FM_PCD_PrsLoadSw
+    FM_PCD_SetAdvancedOffloadSupport
+    FM_PCD_Enable
+    FM_PCD_Disable
+    FM_PCD_ForceIntr
+    FM_PCD_SetException
+    FM_PCD_KgSetAdditionalDataAfterParsing
+    FM_PCD_KgSetDfltValue
+    FM_PCD_NetEnvCharacteristicsSet
+    FM_PCD_NetEnvCharacteristicsDelete
+    FM_PCD_KgSchemeSet
+    FM_PCD_KgSchemeDelete
+    FM_PCD_MatchTableSet
+    FM_PCD_MatchTableDelete
+    FM_PCD_CcRootBuild
+    FM_PCD_CcRootDelete
+    FM_PCD_PlcrProfileSet
+    FM_PCD_PlcrProfileDelete
+    FM_PCD_CcRootModifyNextEngine
+    FM_PCD_MatchTableModifyNextEngine
+    FM_PCD_MatchTableModifyMissNextEngine
+    FM_PCD_MatchTableRemoveKey
+    FM_PCD_MatchTableAddKey
+    FM_PCD_MatchTableModifyKeyAndNextEngine
+    FM_PCD_HashTableSet
+    FM_PCD_HashTableDelete
+    FM_PCD_HashTableAddKey
+    FM_PCD_HashTableRemoveKey
+    FM_PCD_MatchTableModifyKey
+    FM_PCD_ManipNodeReplace
+    FM_PCD_ManipNodeSet
+    FM_PCD_ManipNodeDelete
 
 Status: not exported, should be thru sysfs
     FM_PCD_KgSchemeGetCounter
@@ -532,12 +562,6 @@ Status: not exported
     FM_PCD_MatchTableGetNextEngine
     FM_PCD_MatchTableGetKeyCounter
 
-Status: Exported, Not tested (no test available)
-    FM_PCD_HashTableSet
-    FM_PCD_HashTableDelete
-    FM_PCD_HashTableAddKey
-    FM_PCD_HashTableRemoveKey
-
 Status: not exported, would be nice to have
     FM_PCD_HashTableModifyNextEngine
     FM_PCD_HashTableModifyMissNextEngine
@@ -550,6 +574,15 @@ Status: not exported
     FM_PCD_FrmReplicDeleteGroup
     FM_PCD_FrmReplicAddMember
     FM_PCD_FrmReplicRemoveMember
+
+    FM_VSP_Config
+    FM_VSP_Init
+    FM_VSP_Free
+    FM_VSP_ConfigPoolDepletion
+    FM_VSP_ConfigBufferPrefixContent
+    FM_VSP_ConfigNoScatherGather
+    FM_VSP_GetStatistics -- it’s not available yet
+    FM_VSP_GetBufferPrsResult
 #endif
 
 Status: feature not supported
@@ -558,9 +591,9 @@ Status: feature not supported
     FM_PCD_StatisticsSetNode
 #endif
 
-*/
+ */
     _fm_ioctl_dbg("cmd:0x%08x(type:0x%02x, nr:%u).\n",
-        cmd, _IOC_TYPE(cmd), _IOC_NR(cmd) - 20);
+            cmd, _IOC_TYPE(cmd), _IOC_NR(cmd) - 20);
 
     switch (cmd)
     {
@@ -2113,7 +2146,7 @@ invalid_port_id:
             else
 #endif
             {
-                if (copy_from_user(param, (ioc_fm_pcd_hash_table_add_key_params_t *)arg,
+                if (copy_from_user(param, (ioc_fm_pcd_hash_table_add_key_params_t*) arg,
                             sizeof(ioc_fm_pcd_hash_table_add_key_params_t)))
                 {
                     XX_Free(param);
@@ -3465,8 +3498,89 @@ Status: not exported
                 ;
 
             XX_Free(param);
-            return err;
+            break;
+        }
+
+        case FM_PORT_IOC_ADD_RX_HASH_MAC_ADDR:
+        case FM_PORT_IOC_REMOVE_RX_HASH_MAC_ADDR:
+        {
+            ioc_fm_port_mac_addr_params_t *param;
+
+            param = (ioc_fm_port_mac_addr_params_t*) XX_Malloc(
+                    sizeof(ioc_fm_port_mac_addr_params_t));
+            if (!param)
+                RETURN_ERROR(MINOR, E_NO_MEMORY, ("IOCTL FM PORT"));
+
+            memset(param, 0, sizeof(ioc_fm_port_mac_addr_params_t));
+
+#if defined(CONFIG_COMPAT)
+            if (compat)
+            {
+                if (copy_from_user(param, (ioc_fm_port_mac_addr_params_t*) compat_ptr(arg),
+                            sizeof(ioc_fm_port_mac_addr_params_t)))
+                {
+                    XX_Free(param);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+                }
+            }
+            else
+#endif /* CONFIG_COMPAT */
+            {
+                if (copy_from_user(param, (ioc_fm_port_mac_addr_params_t*) arg,
+                            sizeof(ioc_fm_port_mac_addr_params_t)))
+                {
+                    XX_Free(param);
+                    RETURN_ERROR(MINOR, E_WRITE_FAILED, NO_MSG);
+                }
+            }
+
+            if (p_LnxWrpFmPortDev->pcd_owner_params.dev)
+            {
+                struct net_device *net_dev = dev_get_drvdata(p_LnxWrpFmPortDev->pcd_owner_params.dev);
+
+                if (net_dev)
+                {
+                    struct dpa_priv_s *priv = netdev_priv(net_dev);
+
+                    if (priv)
+                    {
+                        struct mac_device *mac_dev = priv->mac_dev;
+
+                        if (mac_dev)
+                        {
+                            void *mac_handle = mac_dev->get_mac_handle(mac_dev);
+
+                            err = (cmd == FM_PORT_IOC_ADD_RX_HASH_MAC_ADDR)
+                                ? FM_MAC_AddHashMacAddr((t_Handle) mac_handle, (t_EnetAddr*) param)
+                                : FM_MAC_RemoveHashMacAddr((t_Handle) mac_handle, (t_EnetAddr*) param)
+                                ;
+                        }
+                        else
+                        {
+                            err = E_NOT_AVAILABLE;
+                            REPORT_ERROR(MINOR, err, ("Attempt to add/remove hash MAC addr. to/from MAC-less port!"));
+                        }
+                    }
+                    else
+                        /* Not possible, set err nevertheless: */
+                        err = E_NOT_AVAILABLE;
+                }
+                else
+                {
+                    err = E_NOT_AVAILABLE;
+                    REPORT_ERROR(MINOR, err, ("No net device (and no MAC!) associated to this port!"));
+                }
+            }
+            else
+            {
+                err = E_NOT_AVAILABLE;
+                REPORT_ERROR(MINOR, err, ("Port not initialized or other error!?!?"));
+            }
+
+            XX_Free(param);
+            break;
         }
+
         default:
             RETURN_ERROR(MINOR, E_INVALID_SELECTION,
                 ("invalid ioctl: cmd:0x%08x(type:0x%02x, nr:0x%02x.\n",
diff --git a/include/linux/fmd/Peripherals/fm_pcd_ioctls.h b/include/linux/fmd/Peripherals/fm_pcd_ioctls.h
index 25ee8c4..7d1eeaf 100644
--- a/include/linux/fmd/Peripherals/fm_pcd_ioctls.h
+++ b/include/linux/fmd/Peripherals/fm_pcd_ioctls.h
@@ -2198,10 +2198,8 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Return        0 on success; Error code otherwise.
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-//#define FM_PCD_IOC_CC_BUILD_TREE_COMPAT    _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(26), ioc_compat_fm_pcd_cc_tree_params_t)
 #define FM_PCD_IOC_CC_ROOT_BUILD_COMPAT _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(26), compat_uptr_t)
 #endif
-//#define FM_PCD_IOC_CC_BUILD_TREE    _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(26), ioc_fm_pcd_cc_tree_params_t)
 #define FM_PCD_IOC_CC_ROOT_BUILD    _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(26), void *) /* workaround ...*/
 
 /**************************************************************************//**
@@ -2409,9 +2407,9 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Cautions      Allowed only following FM_PCD_HashTableSet().
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-#define FM_PCD_IOC_HASH_TABLE_DELETE_COMPAT _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(38), ioc_compat_fm_obj_t)
+#define FM_PCD_IOC_HASH_TABLE_DELETE_COMPAT _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(37), ioc_compat_fm_obj_t)
 #endif
-#define FM_PCD_IOC_HASH_TABLE_DELETE _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(38), ioc_fm_obj_t)
+#define FM_PCD_IOC_HASH_TABLE_DELETE _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(37), ioc_fm_obj_t)
 
 /**************************************************************************//**
  @Function      FM_PCD_HashTableAddKey
@@ -2428,9 +2426,9 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Cautions      Allowed only following FM_PCD_HashTableSet().
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-#define FM_PCD_IOC_HASH_TABLE_ADD_KEY_COMPAT _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(39), ioc_compat_fm_pcd_hash_table_add_key_params_t)
+#define FM_PCD_IOC_HASH_TABLE_ADD_KEY_COMPAT _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(39), ioc_compat_fm_pcd_hash_table_add_key_params_t)
 #endif
-#define FM_PCD_IOC_HASH_TABLE_ADD_KEY _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(39), ioc_fm_pcd_hash_table_add_key_params_t)
+#define FM_PCD_IOC_HASH_TABLE_ADD_KEY _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(39), ioc_fm_pcd_hash_table_add_key_params_t)
 
 /**************************************************************************//**
  @Function      FM_PCD_HashTableRemoveKey
@@ -2445,9 +2443,9 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Cautions      Allowed only following FM_PCD_HashTableSet().
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-#define FM_PCD_IOC_HASH_TABLE_REMOVE_KEY_COMPAT _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(40), ioc_compat_fm_pcd_hash_table_remove_key_params_t)
+#define FM_PCD_IOC_HASH_TABLE_REMOVE_KEY_COMPAT _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(40), ioc_compat_fm_pcd_hash_table_remove_key_params_t)
 #endif
-#define FM_PCD_IOC_HASH_TABLE_REMOVE_KEY _IOR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(40), ioc_fm_pcd_hash_table_remove_key_params_t)
+#define FM_PCD_IOC_HASH_TABLE_REMOVE_KEY _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(40), ioc_fm_pcd_hash_table_remove_key_params_t)
 
 /**************************************************************************//**
  @Function      FM_PCD_PlcrProfileSet
@@ -2476,9 +2474,9 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Return        0 on success; Error code otherwise.
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-#define FM_PCD_IOC_PLCR_PROFILE_DELETE_COMPAT   _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(42), ioc_compat_fm_obj_t)
+#define FM_PCD_IOC_PLCR_PROFILE_DELETE_COMPAT   _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(41), ioc_compat_fm_obj_t)
 #endif
-#define FM_PCD_IOC_PLCR_PROFILE_DELETE  _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(42), ioc_fm_obj_t)
+#define FM_PCD_IOC_PLCR_PROFILE_DELETE  _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(41), ioc_fm_obj_t)
 
 /**************************************************************************//**
  @Function      FM_PCD_ManipNodeSet
@@ -2528,9 +2526,9 @@ typedef struct ioc_fm_pcd_frm_replic_group_params_t {
  @Cautions      Allowed only following FM_PCD_ManipNodeSet().
 *//***************************************************************************/
 #if defined(CONFIG_COMPAT)
-#define FM_PCD_IOC_MANIP_NODE_DELETE_COMPAT _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(44), ioc_compat_fm_obj_t)
+#define FM_PCD_IOC_MANIP_NODE_DELETE_COMPAT _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(44), ioc_compat_fm_obj_t)
 #endif
-#define FM_PCD_IOC_MANIP_NODE_DELETE    _IOWR(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(44), ioc_fm_obj_t)
+#define FM_PCD_IOC_MANIP_NODE_DELETE    _IOW(FM_IOC_TYPE_BASE, FM_PCD_IOC_NUM(44), ioc_fm_obj_t)
 
 /**************************************************************************//**
 @Function      FM_PCD_SetAdvancedOffloadSupport
diff --git a/include/linux/fmd/Peripherals/fm_port_ioctls.h b/include/linux/fmd/Peripherals/fm_port_ioctls.h
index b61ad62..41f34ba 100644
--- a/include/linux/fmd/Peripherals/fm_port_ioctls.h
+++ b/include/linux/fmd/Peripherals/fm_port_ioctls.h
@@ -38,6 +38,7 @@
 #ifndef __FM_PORT_IOCTLS_H
 #define __FM_PORT_IOCTLS_H
 
+#include "enet_ext.h"
 #include "net_ioctls.h"
 #include "fm_ioctls.h"
 #include "fm_pcd_ioctls.h"
@@ -115,11 +116,7 @@ typedef enum ioc_fm_port_pcd_support {
 /**************************************************************************//**
  @Collection    General FM Port defines
 *//***************************************************************************/
-#ifdef CONFIG_FMAN_P1023
-#define IOC_FM_PORT_NUM_OF_CONGESTION_GRPS       32 /**< Total number of congestion groups in QM */
-#else
-#define IOC_FM_PORT_NUM_OF_CONGESTION_GRPS      256 /**< Total number of congestion groups in QM */
-#endif
+
 /* @} */
 
 /**************************************************************************//**
@@ -242,7 +239,7 @@ typedef enum ioc_fm_port_counters {
 typedef struct ioc_fm_port_congestion_groups_t {
     uint16_t    num_of_congestion_grps_to_consider;     /**< The number of required congestion groups
                                                              to define the size of the following array */
-    uint8_t     congestion_grps_to_consider [IOC_FM_PORT_NUM_OF_CONGESTION_GRPS];
+    uint8_t     congestion_grps_to_consider [FM_PORT_NUM_OF_CONGESTION_GRPS];
                                                         /**< An array of CG indexes;
                                                              Note that the size of the array should be
                                                              'num_of_congestion_grps_to_consider'. */
@@ -326,7 +323,7 @@ typedef struct ioc_fm_port_congestion_groups_t {
 
  @Return        0 on success; error code otherwise.
 *//***************************************************************************/
-#define      FM_PORT_IOC_ADD_CONGESTION_GRPS    _IOW(FM_IOC_TYPE_BASE, FM_PORT_IOC_NUM(34), ioc_fm_port_congestion_groups_t)
+#define FM_PORT_IOC_ADD_CONGESTION_GRPS    _IOW(FM_IOC_TYPE_BASE, FM_PORT_IOC_NUM(34), ioc_fm_port_congestion_groups_t)
 
 /**************************************************************************//**
  @Function      FM_PORT_RemoveCongestionGrps
@@ -345,7 +342,7 @@ typedef struct ioc_fm_port_congestion_groups_t {
 
  @Return        0 on success; error code otherwise.
 *//***************************************************************************/
-#define      FM_PORT_IOC_REMOVE_CONGESTION_GRPS    _IOW(FM_IOC_TYPE_BASE, FM_PORT_IOC_NUM(35), ioc_fm_port_congestion_groups_t)
+#define FM_PORT_IOC_REMOVE_CONGESTION_GRPS    _IOW(FM_IOC_TYPE_BASE, FM_PORT_IOC_NUM(35), ioc_fm_port_congestion_groups_t)
 
 /**************************************************************************//**
  @Function      FM_PORT_SetErrorsRoute
@@ -781,22 +778,38 @@ typedef struct ioc_fm_port_pcd_fqids_params_t {
 
  @Return        0 on success; error code otherwise.
 *//***************************************************************************/
-#define      FM_PORT_IOC_PCD_PRS_MODIFY_START_OFFSET _IOW(FM_IOC_TYPE_BASE, FM_PORT_IOC_NUM(32), ioc_fm_pcd_prs_start_t)
+#define FM_PORT_IOC_PCD_PRS_MODIFY_START_OFFSET _IOW(FM_IOC_TYPE_BASE, FM_PORT_IOC_NUM(32), ioc_fm_pcd_prs_start_t)
+
+typedef struct ioc_fm_port_mac_addr_params_t {
+    uint8_t addr[ENET_NUM_OCTETS_PER_ADDRESS];
+} ioc_fm_port_mac_addr_params_t;
 
-#if 0 /* Removed from LLD!?! */
 /**************************************************************************//**
- @Function      FM_PORT_IOC_SET_OP_WORKAROUNDS
+ @Function      FM_MAC_AddHashMacAddr
 
- @Description   Calling this routine sets the required offline port workaround.
+ @Description   Add an Address to the hash table. This is for filter purpose only.
 
- @Param[in]     uint32_t    Required workaround.
+ @Param[in]     ioc_fm_port_mac_addr_params_t - Ethernet Mac address
 
- @Return        0 on success; error code otherwise.
+ @Return        E_OK on success; Error code otherwise.
+
+ @Cautions      Allowed only following FM_MAC_Init(). It is a filter only address.
+ @Cautions      Some address need to be filtered out in upper FM blocks.
 *//***************************************************************************/
-#define      FM_PORT_IOC_SET_OP_WORKAROUNDS _IOW(FM_IOC_TYPE_BASE, FM_PORT_IOC_NUM(33), uint32_t)
-#endif
+#define FM_PORT_IOC_ADD_RX_HASH_MAC_ADDR   _IOW(FM_IOC_TYPE_BASE, FM_PORT_IOC_NUM(34), ioc_fm_port_mac_addr_params_t)
 
+/**************************************************************************//**
+ @Function      FM_MAC_RemoveHashMacAddr
+
+ @Description   Delete an Address to the hash table. This is for filter purpose only.
+
+ @Param[in]     ioc_fm_port_mac_addr_params_t - Ethernet Mac address
 
+ @Return        E_OK on success; Error code otherwise.
+
+ @Cautions      Allowed only following FM_MAC_Init().
+*//***************************************************************************/
+#define FM_PORT_IOC_REMOVE_RX_HASH_MAC_ADDR   _IOW(FM_IOC_TYPE_BASE, FM_PORT_IOC_NUM(35), ioc_fm_port_mac_addr_params_t)
 
 /** @} */ /* end of lnx_ioctl_FM_PORT_pcd_runtime_control_grp group */
 /** @} */ /* end of lnx_ioctl_FM_PORT_runtime_control_grp group */
-- 
1.7.9.7

