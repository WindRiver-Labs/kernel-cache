From fb7f029f4528093f81971be121ff0dc1f715a152 Mon Sep 17 00:00:00 2001
From: Sandeep Singh <sandeep@freescale.com>
Date: Fri, 26 Oct 2012 12:15:14 +0000
Subject: [PATCH 104/227] Add Vitesse VSC8662 PHY support

 -VSC8662 is Dual Port 10/100/1000Base-T Phy,
  100Base-FX/1000/Base-X Gigabit Ethernet Transceiver Phy.

 -Its register set and features are similar to other Vitesse Phys

Signed-off-by: Sandeep Singh <Sandeep@freescale.com>
Signed-off-by: Andy Fleming <afleming@freescale.com>
[Kevin: Original patch taken from fsl sdk 1.3.1
QorIQ-SDK-V1.3.1-SOURCE-20121220-yocto.iso.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/phy/vitesse.c |   35 ++++++++++++++++++++++++++++++-----
 1 file changed, 30 insertions(+), 5 deletions(-)

diff --git a/drivers/net/phy/vitesse.c b/drivers/net/phy/vitesse.c
index b2d1218..a5d68bb 100644
--- a/drivers/net/phy/vitesse.c
+++ b/drivers/net/phy/vitesse.c
@@ -61,6 +61,7 @@
 #define PHY_ID_VSC8234			0x000fc620
 #define PHY_ID_VSC8244			0x000fc6c0
 #define PHY_ID_VSC8221			0x000fc550
+#define PHY_ID_VSC8662			0x00070660
 
 MODULE_DESCRIPTION("Vitesse PHY driver");
 MODULE_AUTHOR("Kriston Carson");
@@ -233,6 +234,21 @@ static struct phy_driver vsc8234_driver = {
 	.driver 	= { .owner = THIS_MODULE,},
 };
 
+/* Vitesse 866x */
+static struct phy_driver vsc8662_driver = {
+	.phy_id		= PHY_ID_VSC8662,
+	.name		= "Vitesse VSC8662",
+	.phy_id_mask	= 0x000ffff0,
+	.features	= PHY_GBIT_FEATURES,
+	.flags		= PHY_HAS_INTERRUPT,
+	.config_init	= &vsc824x_config_init,
+	.config_aneg	= &vsc82x4_config_aneg,
+	.read_status	= &genphy_read_status,
+	.ack_interrupt	= &vsc824x_ack_interrupt,
+	.config_intr	= &vsc82xx_config_intr,
+	.driver		= { .owner = THIS_MODULE,},
+};
+
 static int vsc8221_config_init(struct phy_device *phydev)
 {
 	int err;
@@ -269,13 +285,21 @@ static int __init vsc82xx_init(void)
 		return err;
 	err = phy_driver_register(&vsc8221_driver);
 	if (err < 0)
-		phy_driver_unregister(&vsc8244_driver);
+		goto err_vsc8221;
 	err = phy_driver_register(&vsc8234_driver);
-	if (err < 0) {
-	 	phy_driver_unregister(&vsc8244_driver);
-	 	phy_driver_unregister(&vsc8221_driver);
-	}
+	if (err < 0)
+		goto err_vsc8234;
+	err = phy_driver_register(&vsc8662_driver);
+	if (err < 0)
+		goto err_vsc8662;
+	return 0;
 
+err_vsc8662:
+	phy_driver_unregister(&vsc8234_driver);
+err_vsc8234:
+	phy_driver_unregister(&vsc8221_driver);
+err_vsc8221:
+	phy_driver_unregister(&vsc8244_driver);
 	return err;
 }
 
@@ -292,6 +316,7 @@ module_exit(vsc82xx_exit);
 static struct mdio_device_id __maybe_unused vitesse_tbl[] = {
 	{ PHY_ID_VSC8244, 0x000fffc0 },
 	{ PHY_ID_VSC8221, 0x000ffff0 },
+	{ PHY_ID_VSC8662, 0x000ffff0 },
 	{ }
 };
 
-- 
1.7.9.7

