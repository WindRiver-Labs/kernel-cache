From c6c5fb91f43c71b22c9f626fbc0156bb5ccfce66 Mon Sep 17 00:00:00 2001
From: Eyal Harari <Eyal.Harari@freesacle.com>
Date: Wed, 17 Sep 2014 14:53:05 +0300
Subject: [PATCH 014/399] FMD: DSAR: Don't disable/enable Tx explicitly.
 Change call to exit DSAR to fm_soc_resume

Signed-off-by: Eyal Harari <Eyal.Harari@freesacle.com>
Change-Id: I888b95ca0c7f2e13266ecf81c41e779666a6e612
Reviewed-on: http://git.am.freescale.net:8181/19106
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Cristian-Constantin Sovaiala <Cristian.Sovaiala@freescale.com>
Reviewed-by: Richard Schmitt <richard.schmitt@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 .../freescale/fman/Peripherals/FM/Port/fm_port.c   |    4 +---
 .../freescale/fman/src/wrapper/lnxwrp_fm.c         |    7 ++-----
 2 files changed, 3 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fman/Peripherals/FM/Port/fm_port.c b/drivers/net/ethernet/freescale/fman/Peripherals/FM/Port/fm_port.c
index ab7bd55..39db889 100644
--- a/drivers/net/ethernet/freescale/fman/Peripherals/FM/Port/fm_port.c
+++ b/drivers/net/ethernet/freescale/fman/Peripherals/FM/Port/fm_port.c
@@ -5814,8 +5814,7 @@ t_Error FM_PORT_EnterDsarFinal(t_Handle h_DsarRxPort, t_Handle h_DsarTxPort)
         fmGetSetParams.setParams.type = UPDATE_FM_CLD;
         FmGetSetParams(p_FmPort->h_Fm, &fmGetSetParams);
 
-	// Issue graceful stop to HC and DSAR Tx ports
-	FM_PORT_Disable(p_FmPortTx);
+	/* Issue graceful stop to HC port */
 	FM_PORT_Disable(p_FmPortHc);
 
 	// config tx port
@@ -5916,7 +5915,6 @@ void FM_PORT_ExitDsar(t_Handle h_FmPortRx, t_Handle h_FmPortTx)
     FmGetSetParams(p_FmPort->h_Fm, &fmGetSetParams);
     WRITE_UINT32(p_FmPortTx->p_FmPortBmiRegs->txPortBmiRegs.fmbm_tcmne, p_FmPort->deepSleepVars.fmbm_tcmne);
     WRITE_UINT32(p_FmPortTx->p_FmPortBmiRegs->txPortBmiRegs.fmbm_tcfg, p_FmPort->deepSleepVars.fmbm_tcfg);
-    FM_PORT_Enable(p_FmPortTx);
     FM_PORT_Enable(p_FmPortHc);
 }
 
diff --git a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
index 738dc04..a16ca68 100644
--- a/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
+++ b/drivers/net/ethernet/freescale/fman/src/wrapper/lnxwrp_fm.c
@@ -1169,6 +1169,8 @@ static int fm_soc_resume(struct device *dev)
 		fsl_set_power_except(dev,0);
 		device_set_wakeup_enable(p_LnxWrpFmDev->dev, 0);
 #endif
+		FM_PORT_ExitDsar(p_LnxWrpFmDev->h_DsarRxPort,
+			p_LnxWrpFmDev->h_DsarTxPort);
 		p_LnxWrpFmDev->h_DsarRxPort = 0;
 		p_LnxWrpFmDev->h_DsarTxPort = 0;
 	}
@@ -1431,9 +1433,6 @@ EXPORT_SYMBOL(fm_port_enter_autores_for_deepsleep);
 void fm_port_exit_auto_res_for_deep_sleep(struct fm_port *port_rx,
 	struct fm_port *port_tx)
 {
-	t_LnxWrpFmPortDev   *p_LnxWrpFmPortDevRx = (t_LnxWrpFmPortDev *)port_rx;
-	t_LnxWrpFmPortDev   *p_LnxWrpFmPortDevTx = (t_LnxWrpFmPortDev *)port_tx;
-	FM_PORT_ExitDsar(p_LnxWrpFmPortDevRx->h_Dev, p_LnxWrpFmPortDevTx->h_Dev);
 }
 EXPORT_SYMBOL(fm_port_exit_auto_res_for_deep_sleep);
 
@@ -1450,8 +1449,6 @@ EXPORT_SYMBOL(fm_port_get_autores_stats);
 int fm_port_suspend(struct fm_port *port)
 {
 	t_LnxWrpFmPortDev *p_LnxWrpFmPortDev = (t_LnxWrpFmPortDev *)port;
-	if (p_LnxWrpFmPortDev->id == 3)
-		return 0;
 	if (!FM_PORT_IsInDsar(p_LnxWrpFmPortDev->h_Dev))
 		return FM_PORT_Disable(p_LnxWrpFmPortDev->h_Dev);
 	else
-- 
1.7.5.4

