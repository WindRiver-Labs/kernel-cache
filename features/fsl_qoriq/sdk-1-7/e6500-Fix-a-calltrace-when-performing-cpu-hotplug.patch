From da814d5cfc0ef33e99413d0c89574977d91efb1e Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Wed, 11 Mar 2015 14:34:28 +0800
Subject: [PATCH] e6500:Fix a calltrace when performing cpu-hotplug

Move work_on_cpu() out of atomic context to fix following calltrace:
linux/kernel/locking/rtmutex.c:907
in_atomic(): 0, irqs_disabled(): 1, pid: 14977, name: sh
CPU: 1 PID: 14977 Comm: sh Tainted: G         C   3.14.29ltsi-rt22-WR7.0.0.3_preempt-rt #1
Call Trace:
[c0000000f30d72a0] [c00000000000acfc] .show_stack+0x168/0x278 (unreliable)
[c0000000f30d7390] [c000000000ad2e04] .dump_stack+0x9c/0x108
[c0000000f30d7410] [c0000000000ad750] .__might_sleep+0x148/0x1b0
[c0000000f30d74a0] [c000000000ace300] .rt_spin_lock+0x30/0x90
[c0000000f30d7520] [c000000000092364] .queue_work_on+0x90/0x1f8
[c0000000f30d75c0] [c000000000092604] .work_on_cpu+0x78/0x9c
[c0000000f30d7690] [c000000000048b70] .smp_85xx_kick_cpu+0x8ac/0x9e4
[c0000000f30d7780] [c000000000027e60] .__cpu_up+0x120/0x2ac
[c0000000f30d7820] [c00000000006d874] ._cpu_up+0x1d4/0x210
[c0000000f30d78f0] [c00000000006d964] .cpu_up+0xb4/0xd8
[c0000000f30d7980] [c000000000949b44] .cpu_subsys_online+0x24/0x3c
[c0000000f30d7a00] [c0000000005f612c] .device_online+0xac/0x10c
[c0000000f30d7a90] [c0000000005f6234] .online_store+0xa8/0xb0
[c0000000f30d7b30] [c0000000005f280c] .dev_attr_store+0x64/0x90
[c0000000f30d7bc0] [c00000000027c330] .sysfs_kf_write+0x7c/0xa4
[c0000000f30d7c50] [c000000000281ae0] .kernfs_fop_write+0x11c/0x18c
[c0000000f30d7cf0] [c0000000001eba6c] .vfs_write+0xe0/0x210
[c0000000f30d7d90] [c0000000001ec5d0] .SyS_write+0x64/0xf4
[c0000000f30d7e30] [c000000000000718] syscall_exit+0x0/0x8c

After move out of atomic context, smp_processor_id() isn't safe here.
Then we need invoke get_cpu()/put_cpu() to replace the lower
level smp_processor_id().

Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 arch/powerpc/platforms/85xx/smp.c |   10 ++++++----
 1 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/smp.c b/arch/powerpc/platforms/85xx/smp.c
index e03d0e5..0aa9305 100644
--- a/arch/powerpc/platforms/85xx/smp.c
+++ b/arch/powerpc/platforms/85xx/smp.c
@@ -484,24 +484,26 @@ static int smp_85xx_kick_cpu(int nr)
 		 * Thread 1.
 		 */
 		if (cpu_online(cpu_first_thread_sibling(nr))) {
-
-			local_irq_save(flags);
 #ifdef CONFIG_PPC_E500MC
 			if (system_state == SYSTEM_RUNNING) {
 				/*
 				 * In cpu hotplug case, Thread 1 must start by calling
 				 * fsl_enable_threads() by the thread0 on the same core.
 				 */
-				if (smp_processor_id() == cpu_first_thread_sibling(nr))
+				if (get_cpu() == cpu_first_thread_sibling(nr)) {
 					fsl_enable_threads(NULL);
-				else
+					put_cpu();
+				} else {
+					put_cpu();
 					work_on_cpu(cpu_first_thread_sibling(nr),
 						fsl_enable_threads, NULL);
+				}
 
 				if (qoriq_pm_ops->irq_unmask)
 					qoriq_pm_ops->irq_unmask(nr);
 			}
 #endif
+			local_irq_save(flags);
 			smp_generic_kick_cpu(nr);
 
 			generic_set_cpu_up(nr);
-- 
1.7.5.4

