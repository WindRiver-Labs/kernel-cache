From 3b15f16066c3309255b9e68177814280a868faf3 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Mon, 19 Oct 2015 03:34:17 -0400
Subject: [PATCH] usb: gadget: fsl: unmap the dma with the correct direction

We observed the following waring when dma api debug is enabled:
  WARNING: at lib/dma-debug.c:1131
  Modules linked in: g_ether usb_f_ecm usb_f_ecm_subset usb_f_rndis u_ether libcomposite fsl_usb2_udc configfs
  CPU: 0 PID: 503 Comm: irq/28-fsl-usb2 Not tainted 3.14.39ltsi-WR7.0.0.0_cgl #6
  task: eee9be00 ti: ed4ac000 task.ti: ed4ac000
  NIP: c051bd5c LR: c051bd5c CTR: c064849c
  REGS: ed4adc30 TRAP: 0700   Not tainted  (3.14.39ltsi-WR7.0.0.0_cgl)
  MSR: 00021000 <CE,ME>  CR: 44022524  XER: 00000000

  GPR00: c051bd5c ed4adce0 eee9be00 000000c0 c1881558 c1882bac c057562c 00021000
  GPR08: 00000007 00000202 00000202 000001bf 44022524 00000000 f344dc6c f344d96c
  GPR16: f344d94c ed429780 f344d998 00000000 00000001 00010001 00029000 c7d9e978
  GPR24: 00021000 c0f4a718 c105e368 c0f50000 c0f8da4c ed4add48 c1069960 efa71960
  NIP [c051bd5c] check_unmap+0x4c0/0xae0
  LR [c051bd5c] check_unmap+0x4c0/0xae0
  Call Trace:
  [ed4adce0] [c051bd5c] check_unmap+0x4c0/0xae0 (unreliable)
  [ed4add40] [c051c3f4] debug_dma_unmap_page+0x78/0x8c
  [ed4addd0] [f344a9dc] done+0xd4/0x150 [fsl_usb2_udc]
  [ed4ade00] [f344cac4] fsl_udc_irq+0x534/0xcc4 [fsl_usb2_udc]
  [ed4ade70] [c00aff64] irq_forced_thread_fn+0x40/0x84
  [ed4ade90] [c00b02b0] irq_thread+0x10c/0x13c
  [ed4aded0] [c007126c] kthread+0xd4/0xe8
  [ed4adf40] [c0012468] ret_from_kernel_thread+0x5c/0x64
  Instruction dump:
  7d295214 80680010 80c90010 811d001c 813d0020 815d0024 90610008 3c60c0ad
  90c1000c 386354a4 4cc63182 483dbad9 <0fe00000> 3c60c0ad 38634e34 4cc63182

The endpoint0 is bidirectional. So in the current kernel, we explicitly
set the ep0 direction (udc->ep0_dir) before queuing a request. But the
dTD (device transfer descriptor) completion is a asynchronous event,
we can't get the right dma map direction by using udc->ep0_dir, so add
a dir member for struct fsl_req for dma unmapping.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/usb/gadget/fsl_udc_core.c |    4 +++-
 drivers/usb/gadget/fsl_usb2_udc.h |    1 +
 2 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/drivers/usb/gadget/fsl_udc_core.c b/drivers/usb/gadget/fsl_udc_core.c
index bb3b189..1eaeb72 100644
--- a/drivers/usb/gadget/fsl_udc_core.c
+++ b/drivers/usb/gadget/fsl_udc_core.c
@@ -185,7 +185,7 @@ static void done(struct fsl_ep *ep, struct fsl_req *req, int status)
 		dma_pool_free(udc->td_pool, curr_td, curr_td->td_dma);
 	}
 
-	usb_gadget_unmap_request(&ep->udc->gadget, &req->req, ep_is_in(ep));
+	usb_gadget_unmap_request(&ep->udc->gadget, &req->req, req->dir);
 
 	if (status && (status != -ESHUTDOWN))
 		VDBG("complete %s req %p stat %d len %u/%u",
@@ -737,6 +737,8 @@ static void fsl_queue_td(struct fsl_ep *ep, struct fsl_req *req)
 		? (1 << (ep_index(ep) + 16))
 		: (1 << (ep_index(ep)));
 
+	req->dir = ep_is_in(ep);
+
 	/* check if the pipe is empty */
 	if (!(list_empty(&ep->queue)) && !(ep_index(ep) == 0)) {
 		/* Add td to the end */
diff --git a/drivers/usb/gadget/fsl_usb2_udc.h b/drivers/usb/gadget/fsl_usb2_udc.h
index e4c4c01..713ce7f 100644
--- a/drivers/usb/gadget/fsl_usb2_udc.h
+++ b/drivers/usb/gadget/fsl_usb2_udc.h
@@ -452,6 +452,7 @@ struct fsl_req {
 	   a request->queue into a udc_ep->queue 'd tail */
 	struct fsl_ep *ep;
 	unsigned mapped:1;
+	unsigned dir:1;		/* 1 if USB_DIR_IN, 0 if USB_DIR_OUT */
 
 	struct ep_td_struct *head, *tail;	/* For dTD List
 						   cpu endian Virtual addr */
-- 
1.7.5.4

