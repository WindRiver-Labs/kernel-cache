From dffece2f61f64b536ebeb7afa0340208c6ccb429 Mon Sep 17 00:00:00 2001
From: Nitesh Narayan Lal <b44382@freescale.com>
Date: Wed, 8 Oct 2014 15:40:59 +0530
Subject: [PATCH 160/399] crypto: caam - Dynamic allocation of addresses for
 various memory blocks in CAAM.

    CAAM's memory is broken into following address blocks:
    Block           Included Registers
    7               QI registers

Size of the above stated block varies in various platforms. The block size can be 4K or 64K.
The block size can be dynamically determined by reading CTPR register in CAAM.
This patch fixes the issues related to the dynamic initialization of the QI block
address based on the value read from this register.

Signed-off-by: Nitesh Narayan Lal <b44382@freescale.com>
Change-Id: I11d6cb2814ee4eb1c966773636bf6bd0ff986811
Reviewed-on: http://git.am.freescale.net:8181/20999
Reviewed-by: Ruchika Gupta <ruchika.gupta@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Zhengxiong Jin <Jason.Jin@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/crypto/caam/ctrl.c |    6 ++++--
 1 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/crypto/caam/ctrl.c b/drivers/crypto/caam/ctrl.c
index 282603a..0334a76 100644
--- a/drivers/crypto/caam/ctrl.c
+++ b/drivers/crypto/caam/ctrl.c
@@ -731,7 +731,7 @@ static int caam_probe(struct platform_device *pdev)
 }
 
 #ifdef CONFIG_PM
-static int caam_stop_qi(struct caam_qi __iomem *qi)
+static int caam_stop_qi(struct caam_queue_if __iomem *qi)
 {
 	int qi_stopped, loop = 0;
 
@@ -763,7 +763,7 @@ static int caam_suspend(struct device *dev)
 {
 	struct caam_drv_private *caam_priv;
 	struct caam_ctrl __iomem *ctrl;
-	struct caam_qi __iomem *qi;
+	struct caam_queue_if __iomem *qi;
 	int ret = 0;
 
 	caam_priv = dev_get_drvdata(dev);
@@ -788,10 +788,12 @@ static int caam_resume(struct device *dev)
 {
 	struct caam_drv_private *caam_priv;
 	struct caam_ctrl __iomem *ctrl;
+	struct caam_queue_if __iomem *qi;
 	int ret;
 
 	caam_priv = dev_get_drvdata(dev);
 	ctrl = caam_priv->ctrl;
+	qi = caam_priv->qi;
 	/*
 	 * Enable DECO watchdogs and, if this is a PHYS_ADDR_T_64BIT kernel,
 	 * long pointers in master configuration register
-- 
1.7.5.4

