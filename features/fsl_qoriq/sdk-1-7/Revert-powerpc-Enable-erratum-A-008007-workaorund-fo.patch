From 22b95b40ead312e6b6519e688631b53bd8b2971c Mon Sep 17 00:00:00 2001
From: Priyanka Jain <Priyanka.Jain@freescale.com>
Date: Wed, 30 Jul 2014 12:07:28 +0530
Subject: [PATCH 104/399] Revert "powerpc: Enable erratum A-008007 workaorund
 for T1040 Rev1.0"

This reverts commit 062853ac8f4b6fb5fee1770b67d4684023929e10.

New PBI-based workaround which resets PVR register for
erratum A-008007 is implemented in RCW. So no workaround
implementation is required in Linux

Signed-off-by: Priyanka Jain <Priyanka.Jain@freescale.com>
Change-Id: I6d952796efda066fd648179dd9508a0f8c4c2ba2
Reviewed-on: http://git.am.freescale.net:8181/15311
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Poonam Aggrwal <poonam.aggrwal@freescale.com>
Tested-by: Richard Schmitt <richard.schmitt@freescale.com>
Reviewed-by: Richard Schmitt <richard.schmitt@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 arch/powerpc/boot/util.S                  |    2 --
 arch/powerpc/include/asm/reg.h            |   14 --------------
 arch/powerpc/kernel/cpu_setup_fsl_booke.S |    2 --
 arch/powerpc/kernel/fsl_booke_cache.S     |    2 --
 arch/powerpc/kernel/head_32.S             |    4 ----
 arch/powerpc/platforms/Kconfig.cputype    |   10 ----------
 6 files changed, 0 insertions(+), 34 deletions(-)

diff --git a/arch/powerpc/boot/util.S b/arch/powerpc/boot/util.S
index b42619e..6636b1d 100644
--- a/arch/powerpc/boot/util.S
+++ b/arch/powerpc/boot/util.S
@@ -42,7 +42,6 @@ timebase_period_ns:
  */
 	.globl	udelay
 udelay:
-#ifndef CONFIG_FSL_ERRATUM_A_008007 /*PVR value for e5501 is unreliable*/
 	mfspr	r4,SPRN_PVR
 	srwi	r4,r4,16
 	cmpwi	0,r4,1		/* 601 ? */
@@ -54,7 +53,6 @@ udelay:
 	subic.	r3,r3,1
 	bne	00b
 	blr
-#endif
 
 .udelay_not_601:
 	mulli	r4,r3,1000	/* nanoseconds */
diff --git a/arch/powerpc/include/asm/reg.h b/arch/powerpc/include/asm/reg.h
index 316692e..85afadf 100644
--- a/arch/powerpc/include/asm/reg.h
+++ b/arch/powerpc/include/asm/reg.h
@@ -1111,8 +1111,6 @@
 #define PVR_VER_E500V1	0x8020
 #define PVR_VER_E500V2	0x8021
 #define PVR_VER_E6500	0x8040
-#define PVR_VER_E5500	0x8024
-#define PVR_VER_E5500_REV_1020	0x1020
 
 /*
  * For the 8xx processors, all of them report the same PVR family for
@@ -1177,21 +1175,9 @@
 				     : "memory")
 #endif
 
-#ifdef CONFIG_FSL_ERRATUM_A_008007 /*PVR value for e5501 is unreliable*/
-#define mfspr(rn)	({unsigned long rval; \
-			  if (rn == SPRN_PVR) {\
-				rval = (PVR_VER_E5500 << 16) | \
-					PVR_VER_E5500_REV_1020; \
-			  } else {\
-				asm volatile("mfspr %0," __stringify(rn) \
-					: "=r" (rval)); \
-			  } \
-			  rval; })
-#else
 #define mfspr(rn)	({unsigned long rval; \
 			asm volatile("mfspr %0," __stringify(rn) \
 				: "=r" (rval)); rval;})
-#endif
 #define mtspr(rn, v)	asm volatile("mtspr " __stringify(rn) ",%0" : \
 				     : "r" ((unsigned long)(v)) \
 				     : "memory")
diff --git a/arch/powerpc/kernel/cpu_setup_fsl_booke.S b/arch/powerpc/kernel/cpu_setup_fsl_booke.S
index d1f6c36..45bafd4 100644
--- a/arch/powerpc/kernel/cpu_setup_fsl_booke.S
+++ b/arch/powerpc/kernel/cpu_setup_fsl_booke.S
@@ -57,7 +57,6 @@ _GLOBAL(has_pw20_altivec_idle)
 	/* 0 false, 1 true */
 	li	r3, 0
 
-#ifndef CONFIG_FSL_ERRATUM_A_008007 /*PVR value for e5501 is unreliable*/
 	/* PW20 & AltiVec idle feature only exists for E6500 */
 	mfspr	r0, SPRN_PVR
 	rlwinm	r11, r0, 16, 16, 31
@@ -71,7 +70,6 @@ _GLOBAL(has_pw20_altivec_idle)
 	cmpwi	r11, 0x20
 	blt	2f
 	li	r3, 1
-#endif
 2:
 	blr
 
diff --git a/arch/powerpc/kernel/fsl_booke_cache.S b/arch/powerpc/kernel/fsl_booke_cache.S
index c0a3efd..767c237 100644
--- a/arch/powerpc/kernel/fsl_booke_cache.S
+++ b/arch/powerpc/kernel/fsl_booke_cache.S
@@ -75,9 +75,7 @@ _GLOBAL(__flush_disable_L1)
 	lis	r5, 0
 	ori	r5, r5, PVR_E6500@l
 	cmpw	r4, r5
-#ifndef CONFIG_FSL_ERRATUM_A_008007 /*PVR value for e5501 is unreliable*/
 	beq	2f
-#endif
 	mflr	r10
 	bl	flush_dcache_L1	/* Flush L1 d-cache */
 	mtlr	r10
diff --git a/arch/powerpc/kernel/head_32.S b/arch/powerpc/kernel/head_32.S
index 3eb57ff..dc0488b 100644
--- a/arch/powerpc/kernel/head_32.S
+++ b/arch/powerpc/kernel/head_32.S
@@ -1059,7 +1059,6 @@ _ENTRY(switch_mmu_context)
  */
 clear_bats:
 	li	r10,0
-#ifndef CONFIG_FSL_ERRATUM_A_008007 /*PVR value for e5501 is unreliable*/
 	mfspr	r9,SPRN_PVR
 	rlwinm	r9,r9,16,16,31		/* r9 = 1 for 601, 4 for 604 */
 	cmpwi	r9, 1
@@ -1082,7 +1081,6 @@ clear_bats:
 	mtspr	SPRN_IBAT2L,r10
 	mtspr	SPRN_IBAT3U,r10
 	mtspr	SPRN_IBAT3L,r10
-#endif
 BEGIN_MMU_FTR_SECTION
 	/* Here's a tweak: at this point, CPU setup have
 	 * not been called yet, so HIGH_BAT_EN may not be
@@ -1134,7 +1132,6 @@ mmu_off:
  */
 initial_bats:
 	lis	r11,PAGE_OFFSET@h
-#ifndef CONFIG_FSL_ERRATUM_A_008007 /*PVR value for e5501 is unreliable*/
 	mfspr	r9,SPRN_PVR
 	rlwinm	r9,r9,16,16,31		/* r9 = 1 for 601, 4 for 604 */
 	cmpwi	0,r9,1
@@ -1153,7 +1150,6 @@ initial_bats:
 	mtspr	SPRN_IBAT2L,r8
 	isync
 	blr
-#endif
 
 4:	tophys(r8,r11)
 #ifdef CONFIG_SMP
diff --git a/arch/powerpc/platforms/Kconfig.cputype b/arch/powerpc/platforms/Kconfig.cputype
index 33e4291..a60bc4f 100644
--- a/arch/powerpc/platforms/Kconfig.cputype
+++ b/arch/powerpc/platforms/Kconfig.cputype
@@ -234,16 +234,6 @@ config FSL_ERRATUM_A_006184_PERIOD
 	  since when idle we will always have just executed from the main
 	  kernel mapping, so it should not be absent from the L1 I-MMU.
 
-config FSL_ERRATUM_A_008007
-	bool "Work around erratum A-008007 (pvr value)"
-	default n
-	help
-	  This works around erratum A-008007 by not using PVR value read from
-	  PVR register as it is unreliable for e5500 core
-	  (major version:1.0, minor version: 2.0 ).
-	  Instead use expected hard-code value for PVR register for core.
-	  Say Y if and only if you using T1040 Rev1.0 Silicon
-
 config PPC_DISABLE_THREADS
 	bool "Avoid the use of hardware threads"
 	help
-- 
1.7.5.4

