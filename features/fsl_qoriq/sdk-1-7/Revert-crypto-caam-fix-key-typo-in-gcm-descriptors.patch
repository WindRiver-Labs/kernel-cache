From 03ccafddce7cb9f5a556162c1a00e91bd2013268 Mon Sep 17 00:00:00 2001
From: Tudor Ambarus <tudor.ambarus@freescale.com>
Date: Mon, 3 Nov 2014 18:05:16 +0200
Subject: [PATCH 195/399] Revert "crypto: caam - fix key typo in gcm
 descriptors"

This reverts commit 47a0ea3dc8b50056f8dd39afb438d362d5f5ea45.

The upstream version of gcm support contains some fixes that
current version does not include. The removal of gcm support from
caam driver will be followed by the cherry-pick of upstream's
gcm patch.

Change-Id: I1fcd770e7f15326a18a2fb18bc8efb40abbe5246
Signed-off-by: Tudor Ambarus <tudor.ambarus@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/23476
Reviewed-by: Horia Ioan Geanta Neag <horia.geanta@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Richard Schmitt <richard.schmitt@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/crypto/caam/caamalg.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/crypto/caam/caamalg.c b/drivers/crypto/caam/caamalg.c
index a298d21..95098c7 100644
--- a/drivers/crypto/caam/caamalg.c
+++ b/drivers/crypto/caam/caamalg.c
@@ -961,7 +961,7 @@ static int gcm_set_sh_desc(struct crypto_aead *aead)
 	struct aead_tfm *tfm = &aead->base.crt_aead;
 	struct caam_ctx *ctx = crypto_aead_ctx(aead);
 	struct device *jrdev = ctx->jrdev;
-	bool key_fits_inline = false;
+	bool keys_fit_inline = false;
 	u32 *key_jump_cmd, *zero_payload_jump_cmd,
 	    *zero_assoc_jump_cmd1, *zero_assoc_jump_cmd2;
 	u32 *desc;
@@ -976,16 +976,16 @@ static int gcm_set_sh_desc(struct crypto_aead *aead)
 	 */
 	if (DESC_GCM_ENC_LEN + DESC_JOB_IO_LEN +
 	    ctx->enckeylen <= CAAM_DESC_BYTES_MAX)
-		key_fits_inline = true;
+		keys_fit_inline = true;
 
 	desc = ctx->sh_desc_enc;
 
 	init_sh_desc(desc, HDR_SHARE_SERIAL);
 
-	/* skip key loading if it is loaded due to sharing */
+	/* skip key loading if they are loaded due to sharing */
 	key_jump_cmd = append_jump(desc, JUMP_JSL | JUMP_TEST_ALL |
 				   JUMP_COND_SHRD);
-	if (key_fits_inline)
+	if (keys_fit_inline)
 		append_key_as_imm(desc, (void *)ctx->key, ctx->enckeylen,
 				  ctx->enckeylen, CLASS_1 | KEY_DEST_CLASS_REG);
 	else
@@ -1083,16 +1083,16 @@ static int gcm_set_sh_desc(struct crypto_aead *aead)
 	 */
 	if (DESC_GCM_DEC_LEN + DESC_JOB_IO_LEN +
 	    ctx->enckeylen <= CAAM_DESC_BYTES_MAX)
-		key_fits_inline = true;
+		keys_fit_inline = true;
 
 	desc = ctx->sh_desc_dec;
 
 	init_sh_desc(desc, HDR_SHARE_SERIAL);
 
-	/* skip key loading if it is loaded due to sharing */
+	/* skip key loading if they are loaded due to sharing */
 	key_jump_cmd = append_jump(desc, JUMP_JSL | JUMP_TEST_ALL |
 				   JUMP_COND_SHRD);
-	if (key_fits_inline)
+	if (keys_fit_inline)
 		append_key_as_imm(desc, (void *)ctx->key, ctx->enckeylen,
 				  ctx->enckeylen, CLASS_1 | KEY_DEST_CLASS_REG);
 	else
-- 
1.7.5.4

