From 24b4a4c6604319d4e3b6a38244170d6bc174e897 Mon Sep 17 00:00:00 2001
From: Zhang Zhuoyu <Zhuoyu.Zhang@freescale.com>
Date: Tue, 28 Oct 2014 18:23:34 +0800
Subject: [PATCH 112/399] powerpc/cache: add cluster shared L2 cache operation
 for e6500

E6500 cluster shared L2 configuration and control uses the same general formats
as the integrated backside L2 cache provided in previous Freescale cores.
But L2 cache control is accomplished through MMRs instead of SPRs. This patch
provides cluster shared L2 cache operations for e6500.

Signed-off-by: Hongtao Jia <hongtao.jia@freescale.com>
Signed-off-by: Zhang Zhuoyu <Zhuoyu.Zhang@freescale.com>
Change-Id: I74d02c5bfda397723bb2feab251c7cc3c680105c
Reviewed-on: http://git.am.freescale.net:8181/22314
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Yuantian Tang <yuantian.tang@freescale.com>
Reviewed-by: Yang Li <LeoLi@freescale.com>
[Lu:Original patch taken from
QorIQ-SDK-V1.7-SOURCE-20141218-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 arch/powerpc/include/asm/cacheflush.h |    4 +
 arch/powerpc/kernel/fsl_booke_cache.S |  115 +++++++++++++++++++++++++++++++++
 2 files changed, 119 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/include/asm/cacheflush.h b/arch/powerpc/include/asm/cacheflush.h
index a87987a..bf9ecf5 100644
--- a/arch/powerpc/include/asm/cacheflush.h
+++ b/arch/powerpc/include/asm/cacheflush.h
@@ -34,6 +34,10 @@ extern void __flush_disable_L1(void);
 #ifdef CONFIG_FSL_SOC_BOOKE
 extern void flush_dcache_L1(void);
 void flush_backside_L2_cache(void);
+void cluster_flush_backside_L2_cache(void *cluster_l2_base);
+void cluster_flush_invalidate_L2_cache(void *cluster_l2_base);
+void cluster_disable_L2_cache(void *cluster_l2_base);
+void cluster_invalidate_enable_L2(void *cluster_l2_base);
 void disable_backside_L2_cache(void);
 void flush_disable_L2(void);
 void invalidate_enable_L2(void);
diff --git a/arch/powerpc/kernel/fsl_booke_cache.S b/arch/powerpc/kernel/fsl_booke_cache.S
index 767c237..5c4d09a 100644
--- a/arch/powerpc/kernel/fsl_booke_cache.S
+++ b/arch/powerpc/kernel/fsl_booke_cache.S
@@ -178,6 +178,121 @@ _GLOBAL(disable_backside_L2_cache)
 1:
 	blr
 
+/********    Cluster Backside L2 Cache    ********/
+cluster_need_L2_cache:
+	/* if L2 cache is disabled, skip it */
+	lwz	r4, 0(r3)
+	andis.	r4, r4, L2CSR0_L2E@h
+	beq	1f
+
+	li	r5, 0
+	blr
+1:
+	li	r5, 1
+	blr
+
+/*
+ * Flush cluster shared backside L2 cache
+ * r3 = virtual address of cluster L2 controller
+ */
+_GLOBAL(cluster_flush_backside_L2_cache)
+	mflr	r10
+	bl	cluster_need_L2_cache
+	mtlr	r10
+	cmpwi	r5, 0
+	bne	2f
+
+__cluster_flush_backside_L2_cache:
+	/* flush the L2 cache */
+	lwz	r4, 0(r3)
+	ori	r4, r4, L2CSR0_L2FL@l
+	msync
+	isync
+	stw	r4, 0(r3)
+	isync
+1:
+	lwz	r4, 0(r3)
+	andi.	r4, r4, L2CSR0_L2FL@l
+	bne	1b
+2:
+	blr
+
+/*
+ * Flush and invalidate cluster shared backside L2 cache
+ * r3 = virtual address of cluster L2 controller
+ */
+_GLOBAL(cluster_flush_invalidate_L2_cache)
+	mflr	r11
+	bl	cluster_flush_backside_L2_cache
+	mtlr	r11
+
+	/* clear backside L2 Cache Lock  */
+	lwz	r4, 0(r3)
+	oris	r4, r4, L2CSR0_L2LFC@l
+	msync
+	isync
+	stw	r4, 0(r3)
+	isync
+1:
+	lwz	r4, 0(r3)
+	andis.	r4, r4, L2CSR0_L2LFC@l
+	bne	1b
+
+	/* invalidate backside L2 cache */
+	lwz	r4, 0(r3)
+	oris	r4, r4, L2CSR0_L2FI@h
+	msync
+	isync
+	stw	r4, 0(r3)
+	isync
+1:
+	lwz	r4, 0(r3)
+	andis.	r4, r4, L2CSR0_L2FI@h
+	bne	1b
+
+	blr
+
+/*
+ * Disable cluster shared backside L2 cache
+ * r3 = virtual address of cluster L2 controller
+ */
+_GLOBAL(cluster_disable_L2_cache)
+	/* disable L2 cache */
+	li	r4, 0
+	msync
+	isync
+	stw	r4, 0(r3)
+	isync
+
+	blr
+
+/*
+ * Invalidate and enable cluster shared L2 cache
+ * r3 = virtual address of cluster L2 controller
+ */
+_GLOBAL(cluster_invalidate_enable_L2)
+	lis	r4, (L2CSR0_L2FI|L2CSR0_L2LFC)@h
+	ori	r4, r4, (L2CSR0_L2FI|L2CSR0_L2LFC)@l
+	msync
+	isync
+	stw	r4, 0(r3)
+	isync
+
+	/* wait for the invalidate to finish */
+1:	lwz	r5, 0(r3)
+	cmp 	0, r5, r4
+	bne	1b
+
+	/* enable cluster L2 cache */
+	lwz	r4, 0(r3)
+	oris	r4, r4, (L2CSR0_L2E|L2CSR0_L2PE)@h
+	msync
+	isync
+	stw	r4, 0(r3)
+	isync
+
+	blr
+
 /********    Platform Cache    ********/
 
 #define L2CTL_L2E	0x80000000
-- 
1.7.5.4

