From 7287896325d667ee7149c0983df6b1deed3aaa4d Mon Sep 17 00:00:00 2001
From: Marek Vasut <marex@denx.de>
Date: Thu, 24 Apr 2014 20:05:15 +0200
Subject: [PATCH 184/399] crypto: caam - Pass error type into the functions

commit 8a4758268292eb036a63f49746fbfe3fcdc0c51d upstream

Pass the error type string into the functions, so they can handle
the printing of the string. This is now still using the very unsafe
sprintf(), but we will fix that.

While at this, pass the device pointer too, so we can dev_err()
functions readily when we start fixing this proper.

Signed-off-by: Marek Vasut <marex@denx.de>
Cc: Herbert Xu <herbert@gondor.apana.org.au>
Cc: Horia Geanta <horia.geanta@freescale.com>
Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
---
 drivers/crypto/caam/error.c |   31 +++++++++++++++++++++----------
 1 files changed, 21 insertions(+), 10 deletions(-)

diff --git a/drivers/crypto/caam/error.c b/drivers/crypto/caam/error.c
index c1a66c8..bef3ea2 100644
--- a/drivers/crypto/caam/error.c
+++ b/drivers/crypto/caam/error.c
@@ -185,12 +185,15 @@ static void report_jump_idx(u32 status, char *outstr)
 	SPRINTFCAT(outstr, "%d: ", idx, sizeof("255"));
 }
 
-static void report_ccb_status(u32 status, char *outstr)
+static void report_ccb_status(struct device *jrdev, u32 status,
+			      const char *error, char *outstr)
 {
 	u8 cha_id = (status & JRSTA_CCBERR_CHAID_MASK) >>
 		    JRSTA_CCBERR_CHAID_SHIFT;
 	u8 err_id = status & JRSTA_CCBERR_ERRID_MASK;
 
+	sprintf(outstr, "%s: ", error);
+
 	report_jump_idx(status, outstr);
 
 	if (cha_id < ARRAY_SIZE(cha_id_list)) {
@@ -216,15 +219,19 @@ static void report_ccb_status(u32 status, char *outstr)
 	}
 }
 
-static void report_jump_status(u32 status, char *outstr)
+static void report_jump_status(struct device *jrdev, u32 status,
+			       const char *error, char *outstr)
 {
+	sprintf(outstr, "%s: ", error);
 	SPRINTFCAT(outstr, "%s() not implemented", __func__, sizeof(__func__));
 }
 
-static void report_deco_status(u32 status, char *outstr)
+static void report_deco_status(struct device *jrdev, u32 status,
+			       const char *error, char *outstr)
 {
 	u8 desc_error = status & JRSTA_DECOERR_ERROR_MASK;
 	int i;
+	sprintf(outstr, "%s: ", error);
 
 	report_jump_idx(status, outstr);
 
@@ -241,13 +248,17 @@ static void report_deco_status(u32 status, char *outstr)
 	}
 }
 
-static void report_jr_status(u32 status, char *outstr)
+static void report_jr_status(struct device *jrdev, u32 status,
+			     const char *error, char *outstr)
 {
+	sprintf(outstr, "%s: ", error);
 	SPRINTFCAT(outstr, "%s() not implemented", __func__, sizeof(__func__));
 }
 
-static void report_cond_code_status(u32 status, char *outstr)
+static void report_cond_code_status(struct device *jrdev, u32 status,
+				    const char *error, char *outstr)
 {
+	sprintf(outstr, "%s: ", error);
 	SPRINTFCAT(outstr, "%s() not implemented", __func__, sizeof(__func__));
 }
 
@@ -255,8 +266,9 @@ void caam_jr_strstatus(struct device *jrdev, u32 status)
 {
 	char outstr[CAAM_ERROR_STR_MAX];
 	static const struct stat_src {
-		void (*report_ssed)(u32 status, char *outstr);
-		char *error;
+		void (*report_ssed)(struct device *jrdev, u32 status,
+				    const char *error, char *outstr);
+		const char *error;
 	} status_src[] = {
 		{ NULL, "No error" },
 		{ NULL, NULL },
@@ -278,9 +290,8 @@ void caam_jr_strstatus(struct device *jrdev, u32 status)
 		return;
 	}
 
-	sprintf(outstr, "%s: ", status_src[ssrc].error);
-
-	status_src[ssrc].report_ssed(status, outstr);
+	status_src[ssrc].report_ssed(jrdev, status,
+			status_src[ssrc].error, outstr);
 
 	dev_err(jrdev, "%08x: %s\n", status, outstr);
 }
-- 
1.7.5.4

