From 33b2be1501187187da17a3c439d8d677eecbd87b Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Mon, 11 Mar 2013 11:01:02 +0800
Subject: [PATCH] powerpc/rt: set thread.dbcr0

gdb always need to generate a single step properly to invoke
a kgdb state. But in rt case, we can't always trigger a debug
exception with a single step since the current may be scheduled,
then we miss that expected dbcr configuration at last to
generate a debug exception again.

So here we also update thread's dbcr0 to make sure the current
can go back with that missed dbcr0 configuration.

And use CONFIG_PPC_BOOK3E_64 to cover 64bit exactly.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 arch/powerpc/kernel/kgdb.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/kernel/kgdb.c b/arch/powerpc/kernel/kgdb.c
index b207995..1b560e9 100644
--- a/arch/powerpc/kernel/kgdb.c
+++ b/arch/powerpc/kernel/kgdb.c
@@ -427,10 +427,11 @@ int kgdb_arch_handle_exception(int vector, int signo, int err_code,
 		/* set the trace bit if we're stepping */
 		if (remcom_in_buffer[0] == 's') {
 #ifdef CONFIG_PPC_ADV_DEBUG_REGS
-#ifdef CONFIG_PPC_BOOK3E
+#if defined(CONFIG_PPC_BOOK3E_64) || defined(CONFIG_PREEMPT_RT_FULL)
 			/* With lazy interrut we have to update thread dbcr0 here
 			 * to make sure we can set debug properly at last to invoke
 			 * kgdb again to work well.
+			 * And so in rt case we also need to set this for ppc32.
 			 */
 			current->thread.dbcr0 =
 				mfspr(SPRN_DBCR0) | DBCR0_IC | DBCR0_IDM;
-- 
1.7.0

