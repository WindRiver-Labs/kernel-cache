From 4ad61b8c7f2baeb397612b3ccf77f24c58bbb6df Mon Sep 17 00:00:00 2001
From: Varun Sethi <Varun.Sethi@freescale.com>
Date: Sat, 3 Mar 2012 13:07:34 +0000
Subject: [PATCH 042/121] Move internal interrupt source vector allocation to
 a separate function.

Allocate vector numbers for MPIC internal interrupt sources (IPIs and Timers) in a
separate function.

Signed-off-by: Varun Sethi <Varun.Sethi@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image. Just some minor context
mods in order to port to 3.4 kernel.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/include/asm/mpic.h |    7 +++++--
 arch/powerpc/sysdev/mpic.c      |   31 ++++++++++++++++++-------------
 2 files changed, 23 insertions(+), 15 deletions(-)

diff --git a/arch/powerpc/include/asm/mpic.h b/arch/powerpc/include/asm/mpic.h
index 1ae5ae9..dc1e00a 100644
--- a/arch/powerpc/include/asm/mpic.h
+++ b/arch/powerpc/include/asm/mpic.h
@@ -118,6 +118,9 @@
 #define MPIC_MAX_CPUS		32
 #define MPIC_MAX_ISU		32
 
+#define MPIC_MAX_TIMER    8
+#define MPIC_MAX_IPI      4
+
 /*
  * Tsi108 implementation of MPIC has many differences from the original one
  */
@@ -279,8 +282,8 @@ struct mpic
 	unsigned int		num_sources;
 
 	/* vector numbers used for internal sources (ipi/timers) */
-	unsigned int		ipi_vecs[4];
-	unsigned int		timer_vecs[8];
+	unsigned int		ipi_vecs[MPIC_MAX_IPI];
+	unsigned int		timer_vecs[MPIC_MAX_TIMER];
 
 	/* Spurious vector to program into unused sources */
 	unsigned int		spurious_vec;
diff --git a/arch/powerpc/sysdev/mpic.c b/arch/powerpc/sysdev/mpic.c
index a5b5cd0..087700e 100644
--- a/arch/powerpc/sysdev/mpic.c
+++ b/arch/powerpc/sysdev/mpic.c
@@ -1023,7 +1023,8 @@ static int mpic_host_map(struct irq_domain *h, unsigned int virq,
 		return 0;
 	}
 
-	if (hw >= mpic->timer_vecs[0] && hw <= mpic->timer_vecs[7]) {
+	if (hw >= mpic->timer_vecs[0] &&
+	    hw <= mpic->timer_vecs[MPIC_MAX_TIMER - 1]) {
 		WARN_ON(mpic->flags & MPIC_SECONDARY);
 
 		DBG("mpic: mapping as timer\n");
@@ -1160,6 +1161,20 @@ static struct irq_domain_ops mpic_host_ops = {
 	.xlate = mpic_host_xlate,
 };
 
+static void mpic_alloc_int_sources(struct mpic *mpic, int intvec_top)
+{
+	int		i;
+	int		intvec;
+
+	intvec = intvec_top;
+
+	for (i = MPIC_MAX_IPI - 1; i >= 0; i--)
+		mpic->ipi_vecs[i] = --intvec;
+
+	for (i = MPIC_MAX_TIMER - 1; i >= 0; i--)
+		mpic->timer_vecs[i] = --intvec;
+}
+
 /*
  * Exported functions
  */
@@ -1253,18 +1268,6 @@ struct mpic * __init mpic_alloc(struct device_node *node,
 	else
 		intvec_top = 255;
 
-	mpic->timer_vecs[0] = intvec_top - 12;
-	mpic->timer_vecs[1] = intvec_top - 11;
-	mpic->timer_vecs[2] = intvec_top - 10;
-	mpic->timer_vecs[3] = intvec_top - 9;
-	mpic->timer_vecs[4] = intvec_top - 8;
-	mpic->timer_vecs[5] = intvec_top - 7;
-	mpic->timer_vecs[6] = intvec_top - 6;
-	mpic->timer_vecs[7] = intvec_top - 5;
-	mpic->ipi_vecs[0]   = intvec_top - 4;
-	mpic->ipi_vecs[1]   = intvec_top - 3;
-	mpic->ipi_vecs[2]   = intvec_top - 2;
-	mpic->ipi_vecs[3]   = intvec_top - 1;
 	mpic->spurious_vec  = intvec_top;
 
 	/* Look for protected sources */
@@ -1390,6 +1393,8 @@ struct mpic * __init mpic_alloc(struct device_node *node,
 	mpic->isu_shift = 1 + __ilog2(mpic->isu_size - 1);
 	mpic->isu_mask = (1 << mpic->isu_shift) - 1;
 
+	mpic_alloc_int_sources(mpic, intvec_top);
+
 	mpic->irqhost = irq_domain_add_linear(mpic->node,
 				       intvec_top + 1,
 				       &mpic_host_ops, mpic);
-- 
1.7.9.7

