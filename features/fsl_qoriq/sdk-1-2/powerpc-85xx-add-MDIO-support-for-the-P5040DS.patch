From c7e30f09aeb2992cf9f563e77213f9b1904acb08 Mon Sep 17 00:00:00 2001
From: Timur Tabi <timur@freescale.com>
Date: Mon, 16 Apr 2012 10:33:20 -0500
Subject: [PATCH 052/121] powerpc/85xx: add MDIO support for the P5040DS

Add support for the muxing MDIO buses on the P5040DS (Super Hydra).  This
includes MDIO and PHY nodes in the device tree, a virtual MDIO board
driver (superhydra_mdio.c), and miscellaneous other networking-related
device tree updates

The DTS contains virtual MDIO nodes for the RGMII ports and each slot that
can hold an SGMII or XAUI card.  U-Boot will update the phy-handle pointers.
The mux values are already correct in the DTS

Signed-off-by: Timur Tabi <timur@freescale.com>
Signed-off-by: Haiying Wang <Haiying.Wang@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image.
Remove the mods for p5040 dts.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/platforms/85xx/corenet_ds.c |    3 +++
 arch/powerpc/platforms/85xx/hydra_mdio.c |   19 ++++++++++++++++---
 2 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/arch/powerpc/platforms/85xx/corenet_ds.c b/arch/powerpc/platforms/85xx/corenet_ds.c
index 239f20e..57f4e8d 100644
--- a/arch/powerpc/platforms/85xx/corenet_ds.c
+++ b/arch/powerpc/platforms/85xx/corenet_ds.c
@@ -138,6 +138,9 @@ int __init declare_of_platform_devices(void)
 	for_each_compatible_node(np, NULL, "fsl,hydra-mdio")
 		of_platform_device_create(np, NULL, NULL);
 
+	for_each_compatible_node(np, NULL, "fsl,hydra-xmdio")
+		of_platform_device_create(np, NULL, NULL);
+
 	return 0;
 }
 
diff --git a/arch/powerpc/platforms/85xx/hydra_mdio.c b/arch/powerpc/platforms/85xx/hydra_mdio.c
index b65acd5..109e289 100644
--- a/arch/powerpc/platforms/85xx/hydra_mdio.c
+++ b/arch/powerpc/platforms/85xx/hydra_mdio.c
@@ -168,17 +168,27 @@ static int __devinit hydra_mdio_probe(struct platform_device *pdev)
 		goto err_pixis_iomap;
 	}
 
-	iprop = of_get_property(np, "fsl,hydra-mdio-muxval", NULL);
+	/* Get the MDIO MUX mask and value */
+	iprop = of_get_property(np, "fsl,hydra-mdio-mux-val", NULL);
+	if (!iprop)
+		/* Older device trees used -muxval instead of -mux-val */
+		iprop = of_get_property(np, "fsl,hydra-mdio-muxval", NULL);
 	if (!iprop) {
 		dev_err(&pdev->dev, "no MUX value found for %s\n",
 			np->full_name);
 		ret = -ENODEV;
 		goto err_get_muxval;
 	}
-
-	priv->mask = BRDCFG1_EMI1_SEL_MASK;
+	/* Note: some trees already have BRDCFG1_EMI1_EN in the value */
 	priv->value = BRDCFG1_EMI1_EN | be32_to_cpup(iprop);
 
+	iprop = of_get_property(np, "fsl,hydra-mdio-mux-mask", NULL);
+	if (iprop)
+		priv->mask = be32_to_cpup(iprop);
+	else
+		/* Older device trees assumed a hard-coded constant mask */
+		priv->mask = BRDCFG1_EMI1_SEL_MASK;
+
 	/* Finally, register our new bus */
 	ret = of_mdiobus_register(new_bus, np);
 	if (ret) {
@@ -232,6 +242,9 @@ static struct of_device_id hydra_mdio_match[] = {
 	{
 		.compatible = "fsl,hydra-mdio",
 	},
+	{
+		.compatible = "fsl,hydra-xmdio",
+	},
 	{}
 };
 MODULE_DEVICE_TABLE(of, mdio_match);
-- 
1.7.9.7

