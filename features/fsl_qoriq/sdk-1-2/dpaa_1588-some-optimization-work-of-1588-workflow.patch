From 1e8f0fe9be0805b06714eb4bcaa2e9bcd7ec4650 Mon Sep 17 00:00:00 2001
From: Mingkai Hu <Mingkai.hu@freescale.com>
Date: Tue, 8 Nov 2011 16:14:49 +0800
Subject: [PATCH 015/128] dpaa_1588: some optimization work of 1588 workflow

* Defer the initialization of the 1588 timer clock until IXXAT 1588
  stack starts.
* Only when the IXXAT 1588 stack started, the driver need to check
  if the Rx/Tx packets are PTP packet, and set the UPD field of FD
  to copy the TX timestamp to the FD buffer.

Signed-off-by: Mingkai Hu <Mingkai.hu@freescale.com>
Acked-by: Andy Fleming <afleming@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_1588.c |    4 ++++
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c  |   20 +++-----------------
 2 files changed, 7 insertions(+), 17 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_1588.c b/drivers/net/ethernet/freescale/dpa/dpaa_1588.c
index 216e827..5c117d5 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_1588.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_1588.c
@@ -441,11 +441,15 @@ int dpa_ioctl_1588(struct net_device *dev, struct ifreq *ifr, int cmd)
 	switch (cmd) {
 	case PTP_ENBL_TXTS_IOCTL:
 		tsu->hwts_tx_en_ioctl = 1;
+		if (mac_dev->fm_rtc_enable)
+			mac_dev->fm_rtc_enable(dev);
 		if (mac_dev->ptp_enable)
 			mac_dev->ptp_enable(mac_dev);
 		break;
 	case PTP_DSBL_TXTS_IOCTL:
 		tsu->hwts_tx_en_ioctl = 0;
+		if (mac_dev->fm_rtc_disable)
+			mac_dev->fm_rtc_disable(dev);
 		if (mac_dev->ptp_disable)
 			mac_dev->ptp_disable(mac_dev);
 		break;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index 7595edd..fa7b0fe 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -858,7 +858,7 @@ static void __hot _dpa_rx(struct net_device *net_dev,
 	prefetch(skb_shinfo(skb));
 
 #ifdef CONFIG_FSL_DPA_1588
-	if (priv->tsu && priv->tsu->valid)
+	if (priv->tsu && priv->tsu->valid && priv->tsu->hwts_rx_en_ioctl)
 		dpa_ptp_store_rxstamp(net_dev, skb, fd);
 #endif
 
@@ -981,7 +981,7 @@ static void __hot _dpa_tx(struct net_device		*net_dev,
 	skb = *skbh;
 
 #ifdef CONFIG_FSL_DPA_1588
-	if (priv->tsu && priv->tsu->valid)
+	if (priv->tsu && priv->tsu->valid && priv->tsu->hwts_tx_en_ioctl)
 		dpa_ptp_store_txstamp(net_dev, skb, fd);
 #endif
 
@@ -1269,7 +1269,7 @@ static int __hot dpa_tx(struct sk_buff *skb, struct net_device *net_dev)
 	}
 
 #ifdef CONFIG_FSL_DPA_1588
-	if (priv->tsu && priv->tsu->valid)
+	if (priv->tsu && priv->tsu->valid && priv->tsu->hwts_tx_en_ioctl)
 		fd.cmd |= FM_FD_CMD_UPD;
 #endif
 
@@ -1847,13 +1847,6 @@ static int __cold dpa_start(struct net_device *net_dev)
 	if (!mac_dev)
 		goto no_mac;
 
-#ifdef CONFIG_FSL_DPA_1588
-	if (priv->tsu && priv->tsu->valid) {
-		if (mac_dev->fm_rtc_enable)
-			mac_dev->fm_rtc_enable(net_dev);
-	}
-#endif
-
 	dpaa_eth_napi_enable(priv);
 
 	err = mac_dev->init_phy(net_dev);
@@ -1902,13 +1895,6 @@ static int __cold dpa_stop(struct net_device *net_dev)
 	if (!mac_dev)
 		return 0;
 
-#ifdef CONFIG_FSL_DPA_1588
-	if (priv->tsu && priv->tsu->valid) {
-		if (mac_dev->fm_rtc_disable)
-			mac_dev->fm_rtc_disable(net_dev);
-	}
-#endif
-
 	_errno = mac_dev->stop(mac_dev);
 	if (unlikely(_errno < 0))
 		if (netif_msg_ifdown(priv))
-- 
1.7.9.7

