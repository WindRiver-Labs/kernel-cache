From baafa7f2a09b5065fa22091f303236d18ffd5ae0 Mon Sep 17 00:00:00 2001
From: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Date: Wed, 14 Mar 2012 04:49:40 +0000
Subject: [PATCH 074/121] qbman: tidy up Kconfig+Makefile

s/Qman/QMan/, s/Bman/BMan/, capitalisation fixes, indents, etc.

Signed-off-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/Kconfig  |   42 ++++++++++++++++++------------------
 drivers/staging/fsl_qbman/Makefile |    6 +++---
 2 files changed, 24 insertions(+), 24 deletions(-)

diff --git a/drivers/staging/fsl_qbman/Kconfig b/drivers/staging/fsl_qbman/Kconfig
index 8e7b367..71b3380 100644
--- a/drivers/staging/fsl_qbman/Kconfig
+++ b/drivers/staging/fsl_qbman/Kconfig
@@ -35,13 +35,13 @@ config FSL_DPA_PORTAL_SHARE
 	default y
 
 config FSL_BMAN
-	bool "Freescale Buffer Manager support"
+	bool "Freescale Buffer Manager (BMan) support"
 	default y
 
 if FSL_BMAN
 
 config FSL_BMAN_CONFIG
-	bool "Bman device management"
+	bool "BMan device management"
 	default y
 	---help---
 	  If this linux image is running natively, you need this option. If this
@@ -49,13 +49,13 @@ config FSL_BMAN_CONFIG
 	  guest OS ("the control plane") needs this option.
 
 config FSL_BMAN_TEST
-	tristate "Bman self-tests"
+	tristate "BMan self-tests"
 	default n
 	---help---
-	  This option compiles self-test code for Bman.
+	  This option compiles self-test code for BMan.
 
 config FSL_BMAN_TEST_HIGH
-	bool "Bman high-level self-test"
+	bool "BMan high-level self-test"
 	depends on FSL_BMAN_TEST
 	default y
 	---help---
@@ -64,27 +64,27 @@ config FSL_BMAN_TEST_HIGH
 	  the cpu(s) the test executes on).
 
 config FSL_BMAN_TEST_THRESH
-	bool "Bman threshold test"
+	bool "BMan threshold test"
 	depends on FSL_BMAN_TEST
 	default y
 	---help---
-	  Multi-threaded (SMP) test of Bman pool depletion. A pool is seeded
+	  Multi-threaded (SMP) test of BMan pool depletion. A pool is seeded
 	  before multiple threads (one per cpu) create pool objects to track
 	  depletion state changes. The pool is then drained to empty by a
 	  "drainer" thread, and the other threads that they observe exactly
 	  the depletion state changes that are expected.
 
 config FSL_BMAN_DEBUGFS
-	tristate "Bman debugfs interface"
+	tristate "BMan debugfs interface"
 	depends on DEBUG_FS
 	default y
 	---help---
-	This option compiles bman debugfs code for Bman.
+	  This option compiles debugfs code for BMan.
 
 endif # FSL_BMAN
 
 config FSL_QMAN
-	bool "Freescale Queue Manager support"
+	bool "Freescale Queue Manager (QMan) support"
 	default y
 
 if FSL_QMAN
@@ -107,7 +107,7 @@ config FSL_QMAN_POLL_LIMIT
 	default 32
 
 config FSL_QMAN_CONFIG
-	bool "Qman device management"
+	bool "QMan device management"
 	default y
 	---help---
 	  If this linux image is running natively, you need this option. If this
@@ -115,13 +115,13 @@ config FSL_QMAN_CONFIG
 	  guest OS ("the control plane") needs this option.
 
 config FSL_QMAN_TEST
-	tristate "Qman self-tests"
+	tristate "QMan self-tests"
 	default n
 	---help---
-	  This option compiles self-test code for Qman.
+	  This option compiles self-test code for QMan.
 
 config FSL_QMAN_TEST_STASH_POTATO
-	bool "Qman 'hot potato' data-stashing self-test"
+	bool "QMan 'hot potato' data-stashing self-test"
 	depends on FSL_QMAN_TEST
 	default y
 	---help---
@@ -130,7 +130,7 @@ config FSL_QMAN_TEST_STASH_POTATO
 	  DQRR, data and context stashing always on.
 
 config FSL_QMAN_TEST_HIGH
-	bool "Qman high-level self-test"
+	bool "QMan high-level self-test"
 	depends on FSL_QMAN_TEST
 	default y
 	---help---
@@ -139,7 +139,7 @@ config FSL_QMAN_TEST_HIGH
 	  the cpu(s) the test executes on).
 
 config FSL_QMAN_TEST_ERRATA
-	bool "Qman errata-handling self-test"
+	bool "QMan errata-handling self-test"
 	depends on FSL_QMAN_TEST
 	default y
 	---help---
@@ -147,19 +147,19 @@ config FSL_QMAN_TEST_ERRATA
 	  testing that handling for known hardware-errata is correct.
 
 config FSL_QMAN_DEBUGFS
-	tristate "Qman debugfs interface"
+	tristate "QMan debugfs interface"
 	depends on DEBUG_FS
 	default y
 	---help---
-	This option compiles qman debugfs code for Qman.
+	  This option compiles debugfs code for QMan.
 
 # H/w settings that can be hard-coded for now.
 config FSL_QMAN_FQD_SZ
-	int "Size of Frame Queue Descriptor region"
+	int "size of Frame Queue Descriptor region"
 	default 9
 	---help---
-	This is the size of the FQD region defined as: PAGE_SIZE * (2^value)
-	ex: 9 => PAGE_SIZE * (2^9)
+	  This is the size of the FQD region defined as: PAGE_SIZE * (2^value)
+	  ex: 9 => PAGE_SIZE * (2^9)
 
 # Corenet initiator settings. Stash request queues are 4-deep to match cores'
 # ability to snart. Stash priority is 3, other priorities are 2.
diff --git a/drivers/staging/fsl_qbman/Makefile b/drivers/staging/fsl_qbman/Makefile
index 3e31900..d853713 100644
--- a/drivers/staging/fsl_qbman/Makefile
+++ b/drivers/staging/fsl_qbman/Makefile
@@ -13,7 +13,7 @@ obj-$(CONFIG_FSL_QMAN)		+= qman_high.o qman_utility.o qman_fqalloc.o
 obj-$(CONFIG_FSL_QMAN_CONFIG)	+= qman_config.o qman_driver.o
 obj-$(CONFIG_FSL_QMAN_TEST)	+= qman_tester.o
 qman_tester-y			 = qman_test.o qman_test_hotpotato.o \
-					qman_test_high.o
+				   qman_test_high.o
 qman_tester-$(CONFIG_FSL_QMAN_TEST_ERRATA) += qman_test_errata.o
-obj-$(CONFIG_FSL_QMAN_DEBUGFS) += qman_debugfs_interface.o
-qman_debugfs_interface-y	= qman_debugfs.o
+obj-$(CONFIG_FSL_QMAN_DEBUGFS)	+= qman_debugfs_interface.o
+qman_debugfs_interface-y	 = qman_debugfs.o
-- 
1.7.9.7

