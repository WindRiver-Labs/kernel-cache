From 622bac48baf407e54d3bdfbdaef3e9bc7898b993 Mon Sep 17 00:00:00 2001
From: Priyanka Jain <Priyanka.Jain@freescale.com>
Date: Fri, 4 May 2012 13:24:36 +0000
Subject: [PATCH 121/128] dpaa_eth: Fix Rx-stall issue in threaded ISR

Replace in_irq() with (in_irq() || !(in_serving_softirq()))

ingress_rx_default_dqrr() can be called in two contexts:
-interrupt context
-softirq context
Earlier in_irq() was used to distinguish.

But in case of RT, ISRs run in threaded mode
& in_irq() can no longer be used.
So Rx traffic was getting stalled.

Signed-off-by: Priyanka Jain <Priyanka.Jain@freescale.com>
Acked-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Acked-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.h |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
index c6eb12a..58ee3fa 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
@@ -341,7 +341,12 @@ int dpa_enable_tx_csum(struct dpa_priv_s *priv,
 
 static inline int dpaa_eth_napi_schedule(struct dpa_percpu_priv_s *percpu_priv)
 {
-	if (unlikely(in_irq())) {
+	/*
+	 * In case of threaded ISR for RT enable kernel,
+	 * in_irq() does not return appropriate value, so use
+	 * in_serving_softirq to distinguish softirq or irq context.
+	 */
+	if (unlikely(in_irq() || !in_serving_softirq())) {
 		/* Disable QMan IRQ and invoke NAPI */
 		int ret = qman_irqsource_remove(QM_PIRQ_DQRI);
 		if (likely(!ret)) {
-- 
1.7.9.7

