From b4898d17473e9223ed9cb2ca75fe0c61552246af Mon Sep 17 00:00:00 2001
From: Kim Phillips <kim.phillips@freescale.com>
Date: Tue, 14 Feb 2012 14:25:52 -0600
Subject: [PATCH 033/128] crypto: caam - remove redundant memory barriers from
 job ring code

the wmb() is already implied by the wr_reg32 (out_be32) that follows it,
and we can hoist inprint_jobadd write to avoid the redundant smp_wmb.

Signed-off-by: Kim Phillips <kim.phillips@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/crypto/caam/jr.c |    6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/drivers/crypto/caam/jr.c b/drivers/crypto/caam/jr.c
index ae7dd51..edbcdc7 100644
--- a/drivers/crypto/caam/jr.c
+++ b/drivers/crypto/caam/jr.c
@@ -259,16 +259,12 @@ int caam_jr_enqueue(struct device *dev, u32 *desc,
 
 	jrp->inpring[jrp->inp_ring_write_index] = desc_dma;
 
-	smp_wmb();
+	wr_reg32(&jrp->rregs->inpring_jobadd, 1);
 
 	jrp->inp_ring_write_index = (jrp->inp_ring_write_index + 1) &
 				    (JOBR_DEPTH - 1);
 	jrp->head = (head + 1) & (JOBR_DEPTH - 1);
 
-	wmb();
-
-	wr_reg32(&jrp->rregs->inpring_jobadd, 1);
-
 	spin_unlock(&jrp->inplock);
 
 	return 0;
-- 
1.7.9.7

