From 6b76ff021605cc46f766aa7f05e336a22a844c1c Mon Sep 17 00:00:00 2001
From: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Date: Fri, 16 Mar 2012 03:20:21 +0000
Subject: [PATCH 088/121] qbman: fix comments, void functions have no return
 value

Signed-off-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 include/linux/fsl_bman.h |    2 +-
 include/linux/fsl_qman.h |    6 +-----
 2 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/include/linux/fsl_bman.h b/include/linux/fsl_bman.h
index 8c0af38..b9f24c7 100644
--- a/include/linux/fsl_bman.h
+++ b/include/linux/fsl_bman.h
@@ -395,7 +395,7 @@ static inline int bman_alloc_bpid(u32 *result)
  * @count: the number of BPIDs in the range
  *
  * This function can also be used to seed the allocator with ranges of BPIDs
- * that it can subsequently allocate from. Returns zero for success.
+ * that it can subsequently allocate from.
  */
 void bman_release_bpid_range(u32 bpid, unsigned int count);
 static inline void bman_release_bpid(u32 bpid)
diff --git a/include/linux/fsl_qman.h b/include/linux/fsl_qman.h
index 876cf7a..55554fd 100644
--- a/include/linux/fsl_qman.h
+++ b/include/linux/fsl_qman.h
@@ -1624,7 +1624,7 @@ static inline int qman_alloc_fqid(u32 *result)
  * @count: the number of FQIDs in the range
  *
  * This function can also be used to seed the allocator with ranges of FQIDs
- * that it can subsequently allocate from. Returns zero for success.
+ * that it can subsequently allocate from.
  */
 void qman_release_fqid_range(u32 fqid, unsigned int count);
 static inline void qman_release_fqid(u32 fqid)
@@ -1657,8 +1657,6 @@ static inline int qman_alloc_pool(u32 *result)
  * qman_release_pool_range - Release the specified range of pool-channel IDs
  * @id: the base pool-channel ID of the range to deallocate
  * @count: the number of pool-channel IDs in the range
- *
- * Returns zero for success.
  */
 void qman_release_pool_range(u32 id, unsigned int count);
 static inline void qman_release_pool(u32 id)
@@ -1748,8 +1746,6 @@ static inline int qman_alloc_cgrid(u32 *result)
  * qman_release_cgrid_range - Release the specified range of CGR IDs
  * @id: the base CGR ID of the range to deallocate
  * @count: the number of CGR IDs in the range
- *
- * Returns zero for success.
  */
 void qman_release_cgrid_range(u32 id, unsigned int count);
 static inline void qman_release_cgrid(u32 id)
-- 
1.7.9.7

