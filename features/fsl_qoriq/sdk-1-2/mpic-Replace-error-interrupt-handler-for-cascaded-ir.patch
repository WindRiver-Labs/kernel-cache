From 30f14cacfdab4ed0e34ae8a9d7997f69aeb21af8 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Sun, 27 May 2012 06:20:14 +0000
Subject: [PATCH 044/121] mpic: Replace error interrupt handler for cascaded
 irqs

The MPIC error handler runs as hardIRQ, but some virtualized
handlers - such as the FMan error interrupt - may be initialized
with the default flags, making them threaded by default.

When FMan's error bit asserts and the MPIC error interrupt is handled,
the generic irq code will wake up the kthread corresponding to
FMan's (virtualized) irq, but that cannot be scheduled to preempt
MPIC's hardIRQ handler. When the latter eventually returns, if
FMan's bit in EISR hasn't been masked, the MPIC error interrupt will
fire over again.
As a result, the kernel compiled with CONFIG_PREEMPT_RT_FULL might
encounter rcu stalls or freeze under network traffic.

Registering handle_level_irq() instead of handle_simple_irq() as
the virtualized error interrupts' handler, to properly mask/unmask
them and prevent the scenario just described.

Signed-off-by: Varun Sethi <Varun.Sethi@freescale.com>
Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/sysdev/mpic.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/powerpc/sysdev/mpic.c b/arch/powerpc/sysdev/mpic.c
index 9961c3e..bcddd3b 100644
--- a/arch/powerpc/sysdev/mpic.c
+++ b/arch/powerpc/sysdev/mpic.c
@@ -1119,7 +1119,7 @@ static int mpic_host_map(struct irq_domain *h, unsigned int virq,
 		DBG("mpic: mapping as Error Interrupt\n");
 		irq_set_chip_data(virq, mpic);
 		irq_set_chip_and_handler(virq, &mpic->hc_err,
-					 handle_simple_irq);
+					 handle_level_irq);
 		return 0;
 	}
 
-- 
1.7.9.7

