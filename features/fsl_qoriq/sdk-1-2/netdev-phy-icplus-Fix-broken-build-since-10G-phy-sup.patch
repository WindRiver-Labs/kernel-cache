From 328a2d7cc3ba64e10ba7a15a6d7a9a09e8923bff Mon Sep 17 00:00:00 2001
From: Kim Phillips <kim.phillips@freescale.com>
Date: Thu, 8 Mar 2012 15:15:09 -0600
Subject: [PATCH 010/121] netdev/phy/icplus: Fix broken build since 10G phy
 support update

SDK commit a2e7e34 "Convert MDIO and PHY Lib drivers to support 10G"
broke mpc83xx_defconfig builds in the following manner:

drivers/net/phy/icplus.c: In function 'ip175c_config_init':
drivers/net/phy/icplus.c:45:3: error: too few arguments to function 'mdiobus_write'
include/linux/phy.h:139:5: note: declared here
drivers/net/phy/icplus.c:50:3: error: too few arguments to function 'mdiobus_read'
include/linux/phy.h:138:5: note: declared here
drivers/net/phy/icplus.c:56:3: error: too few arguments to function 'mdiobus_write'
include/linux/phy.h:139:5: note: declared here
drivers/net/phy/icplus.c:61:3: error: too few arguments to function 'mdiobus_write'
include/linux/phy.h:139:5: note: declared here
drivers/net/phy/icplus.c:68:10: error: too few arguments to function 'mdiobus_write'
include/linux/phy.h:139:5: note: declared here
drivers/net/phy/icplus.c:74:4: error: too few arguments to function 'mdiobus_read'
include/linux/phy.h:138:5: note: declared here

Fix it

Signed-off-by: Kim Phillips <kim.phillips@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/phy/icplus.c |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/net/phy/icplus.c b/drivers/net/phy/icplus.c
index 5ac46f5..72fb06e 100644
--- a/drivers/net/phy/icplus.c
+++ b/drivers/net/phy/icplus.c
@@ -50,36 +50,36 @@ static int ip175c_config_init(struct phy_device *phydev)
 	if (full_reset_performed == 0) {
 
 		/* master reset */
-		err = mdiobus_write(phydev->bus, 30, 0, 0x175c);
+		err = mdiobus_write(phydev->bus, 30, 0, 0, 0x175c);
 		if (err < 0)
 			return err;
 
 		/* ensure no bus delays overlap reset period */
-		err = mdiobus_read(phydev->bus, 30, 0);
+		err = mdiobus_read(phydev->bus, 30, 0, 0);
 
 		/* data sheet specifies reset period is 2 msec */
 		mdelay(2);
 
 		/* enable IP175C mode */
-		err = mdiobus_write(phydev->bus, 29, 31, 0x175c);
+		err = mdiobus_write(phydev->bus, 29, 0, 31, 0x175c);
 		if (err < 0)
 			return err;
 
 		/* Set MII0 speed and duplex (in PHY mode) */
-		err = mdiobus_write(phydev->bus, 29, 22, 0x420);
+		err = mdiobus_write(phydev->bus, 29, 0, 22, 0x420);
 		if (err < 0)
 			return err;
 
 		/* reset switch ports */
 		for (i = 0; i < 5; i++) {
-			err = mdiobus_write(phydev->bus, i,
+			err = mdiobus_write(phydev->bus, i, 0,
 					    MII_BMCR, BMCR_RESET);
 			if (err < 0)
 				return err;
 		}
 
 		for (i = 0; i < 5; i++)
-			err = mdiobus_read(phydev->bus, i, MII_BMCR);
+			err = mdiobus_read(phydev->bus, i, 0, MII_BMCR);
 
 		mdelay(2);
 
-- 
1.7.9.7

