From bda3e049c06c1a179b48a419c16dce543c80aaaf Mon Sep 17 00:00:00 2001
From: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Date: Fri, 28 Oct 2011 14:39:17 -0500
Subject: [PATCH 061/128] qbman: remove needless "options" from menuconfig

Now that it's possible to dynamically change "irqsource" behaviour of
portals, there's no need to be able to bake oddball defaults into the
driver. Likewise, there's no benefit to removing portal-sharing
support, particularly as doing so could lead to confusion for
customers. So hard-code these configuration options in Kconfig,
removing them from the "menuconfig" interface.

Signed-off-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/Kconfig |   22 +++-------------------
 1 file changed, 3 insertions(+), 19 deletions(-)

diff --git a/drivers/staging/fsl_qbman/Kconfig b/drivers/staging/fsl_qbman/Kconfig
index 3321379..d938dd8 100644
--- a/drivers/staging/fsl_qbman/Kconfig
+++ b/drivers/staging/fsl_qbman/Kconfig
@@ -27,34 +27,18 @@ config FSL_DPA_CAN_WAIT_SYNC
 	default y
 
 config FSL_DPA_PIRQ_FAST
-	bool "fast-path processing via IRQ"
+	bool
 	depends on FSL_DPA_HAVE_IRQ
 	default y
-	---help---
-	  By default, configure fast-path handling to be triggered by IRQ.
-	  Drivers can modify this at run-time, but for linux it makes sense
-	  for all handling to be triggered by IRQ, unless a special
-	  run-to-completion application is being built.
 
 config FSL_DPA_PIRQ_SLOW
-	bool "slow-path processing via IRQ"
+	bool
 	depends on FSL_DPA_HAVE_IRQ
 	default y
-	---help---
-	  By default, configure slow-path handling to be triggered by IRQ.
-	  Drivers can modify this at run-time, but for linux it makes sense
-	  for all handling to be triggered by IRQ, unless a special
-	  run-to-completion application is being built.
 
 config FSL_DPA_PORTAL_SHARE
-	bool "allow portals to be affine to multiple CPUs"
+	bool
 	default y
-	---help---
-	  If the kernel, via its device-tree, will be required to use a
-	  single Qman or Bman portal for multiple CPUs, then select this
-	  option. Note however that compiling with this option will result
-	  in a very slight (but non-zero) overhead even when the feature
-	  is not being used.
 
 config FSL_DPA_UIO
 	tristate "Export USDPAA portals via UIO"
-- 
1.7.9.7

