From 8d046f80544a869bb19af07ad7edff82a1ec899d Mon Sep 17 00:00:00 2001
From: Vakul Garg <vakul@freescale.com>
Date: Thu, 15 Mar 2012 18:44:14 +0530
Subject: [PATCH 100/121] qbman: Turned off 'M' bit for PAACE entry mapping
 the private memory

QM/BM use reserved areas of memory to keep their private data structures.
These are FQDs, PFDRs, FBPRs. The memory allocated for these areas once
configured in QM/BM are never supposed to be access by the cores. Hence the
QM/BM originated transactions for these memory area can be marked non-coherent.
This saves unwanted snoops to the cores.

Signed-off-by: Vakul Garg <vakul@freescale.com>
Signed-off-by: Varun Sethi <varun.sethi@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/sysdev/fsl_pamu.c |   20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/arch/powerpc/sysdev/fsl_pamu.c b/arch/powerpc/sysdev/fsl_pamu.c
index e76e9cd..3d7f8d9 100644
--- a/arch/powerpc/sysdev/fsl_pamu.c
+++ b/arch/powerpc/sysdev/fsl_pamu.c
@@ -657,6 +657,7 @@ static void __init setup_liodns(void)
 	struct ppaace *ppaace;
 	struct device_node *qman_portal_dn = NULL;
 	struct device_node *qman_dn = NULL;
+	struct device_node *bman_dn;
 	const u32 *prop;
 	u32 cache_id, prop_cnt;
 
@@ -712,6 +713,7 @@ static void __init setup_liodns(void)
 		if (prop) {
 			ppaace = &ppaact[*prop];
 			ppaace->otm = PAACE_OTM_INDEXED;
+			ppaace->domain_attr.to_host.coherency_required = 0;
 			ppaace->op_encode.index_ot.omi = OMI_QMAN_PRIV;
 			cache_id = get_stash_id(3, qman_dn);
 			pr_debug("cache_stash_id = %d\n", cache_id);
@@ -723,6 +725,24 @@ static void __init setup_liodns(void)
 		}
 		of_node_put(qman_dn);
 	}
+
+	/*
+	 * For liodn used by BMAN for its private memory accesses,
+	 * turn the 'coherency required' off. This saves snoops to cores.
+	 */
+
+	bman_dn = of_find_compatible_node(NULL, NULL, "fsl,bman");
+	if (bman_dn) {
+		prop = of_get_property(bman_dn, "fsl,liodn", NULL);
+		if (prop) {
+			ppaace = &ppaact[*prop];
+			ppaace->domain_attr.to_host.coherency_required = 0;
+		} else {
+			pr_err("fsl-pamu: missing fsl,liodn property in %s\n",
+			       bman_dn->full_name);
+		}
+		of_node_put(bman_dn);
+	}
 }
 
 static int __init setup_one_pamu(void *pamu_reg_base, struct ome *omt)
-- 
1.7.9.7

