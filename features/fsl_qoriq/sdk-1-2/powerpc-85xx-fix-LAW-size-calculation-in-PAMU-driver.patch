From a06a402b6cac5ab8ce3ee2f3b323aa0aff409069 Mon Sep 17 00:00:00 2001
From: Timur Tabi <timur@freescale.com>
Date: Thu, 3 May 2012 14:13:34 -0500
Subject: [PATCH 058/121] powerpc/85xx: fix LAW size calculation in PAMU
 driver

Fix the calculation of the LAW sizes in the PAMU driver.  It was calculating
a window size that was only half of the actual size, so it only was only
able to find the DDR LAW if the physical address of the PAMU data structures
was located in the lower half of the LAW.

The bug manifests on a 64-bit kernel because that kernel typically allocates
memory at higher physical addresses than 32-bit kernels.

Signed-off-by: Timur Tabi <timur@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/sysdev/fsl_pamu.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/powerpc/sysdev/fsl_pamu.c b/arch/powerpc/sysdev/fsl_pamu.c
index 6cc3d7b..2e53b57 100644
--- a/arch/powerpc/sysdev/fsl_pamu.c
+++ b/arch/powerpc/sysdev/fsl_pamu.c
@@ -886,7 +886,7 @@ static int __init create_csd(phys_addr_t phys, size_t size, u32 csd_port_id)
 
 			law_start = make64(law[i].lawbarh, law[i].lawbarl);
 			law_end = law_start +
-				(1ULL << (law[i].lawar & LAWAR_SIZE_MASK));
+				(2ULL << (law[i].lawar & LAWAR_SIZE_MASK));
 
 			if (law_start <= phys && phys < law_end) {
 				law_target = law[i].lawar & LAWAR_TARGET_MASK;
-- 
1.7.9.7

