From 4aa9c3306716adaf8aa599b9a547fe46120337b9 Mon Sep 17 00:00:00 2001
From: Bharat Bhushan <r65777@freescale.com>
Date: Thu, 5 Jan 2012 14:20:43 +0530
Subject: [PATCH 063/128] qbman: Honor the status = "disabled" property

Make the Q/BMan and Q/BMan-portal drivers not used disabled
devices/nodes in the device tree. This is needed for (KVM)
virtualization scenarios in which we want to partition Q/BMan and their
portals between guests and the host

Signed-off-by: Bharat Bhushan <bharat.bhushan@freescale.com>
Acked-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
[Kevin: Original patch taken from FSL
QorIQ-SDK-V1.2-SOURCE-20120614-yocto.iso image]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/staging/fsl_qbman/bman_config.c |    9 +++++++--
 drivers/staging/fsl_qbman/bman_driver.c |    6 +++++-
 drivers/staging/fsl_qbman/qman_config.c |    9 +++++++--
 drivers/staging/fsl_qbman/qman_driver.c |    6 +++++-
 4 files changed, 24 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_config.c b/drivers/staging/fsl_qbman/bman_config.c
index 66b8323..01be61f 100644
--- a/drivers/staging/fsl_qbman/bman_config.c
+++ b/drivers/staging/fsl_qbman/bman_config.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2009-2011 Freescale Semiconductor, Inc.
+/* Copyright (c) 2009-2012 Freescale Semiconductor, Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
@@ -371,12 +371,17 @@ EXPORT_SYMBOL(bm_pool_set);
 __init void bman_init_early(void)
 {
 	struct device_node *dn;
+	int ret;
+
 	for_each_compatible_node(dn, NULL, "fsl,bman") {
 		if (bm)
 			pr_err("%s: only one 'fsl,bman' allowed\n",
 				dn->full_name);
 		else {
-			int ret = fsl_bman_init(dn);
+			if (!of_device_is_available(dn))
+				continue;
+
+			ret = fsl_bman_init(dn);
 			BUG_ON(ret);
 		}
 	}
diff --git a/drivers/staging/fsl_qbman/bman_driver.c b/drivers/staging/fsl_qbman/bman_driver.c
index cf6b8d3..59cc66e 100644
--- a/drivers/staging/fsl_qbman/bman_driver.c
+++ b/drivers/staging/fsl_qbman/bman_driver.c
@@ -1,4 +1,4 @@
-/* Copyright 2008-2011 Freescale Semiconductor, Inc.
+/* Copyright 2008-2012 Freescale Semiconductor, Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
@@ -491,6 +491,8 @@ static __init int bman_init(void)
 	if (fsl_dpa_should_recover())
 		recovery_mode = 1;
 	for_each_compatible_node(dn, NULL, "fsl,bman-portal") {
+		if (!of_device_is_available(dn))
+			continue;
 		pcfg = fsl_bman_portal_init(dn);
 		if (pcfg) {
 			if (pcfg->public_cfg.cpu >= 0) {
@@ -549,6 +551,8 @@ static __init int bman_init(void)
 	}
 #else
 	for_each_compatible_node(dn, NULL, "fsl,bman-portal") {
+		if (!of_device_is_available(dn))
+			continue;
 		pcfg = fsl_bman_portal_init(dn);
 		if (pcfg)
 			/* No kernel portal support, so if USDPAA didn't consume
diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index 8b9e3f0..179abb6 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -1,4 +1,4 @@
-/* Copyright 2008-2011 Freescale Semiconductor, Inc.
+/* Copyright 2008-2012 Freescale Semiconductor, Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
@@ -637,12 +637,17 @@ int qman_have_ccsr(void)
 __init void qman_init_early(void)
 {
 	struct device_node *dn;
+	int ret;
+
 	for_each_compatible_node(dn, NULL, "fsl,qman") {
 		if (qm)
 			pr_err("%s: only one 'fsl,qman' allowed\n",
 				dn->full_name);
 		else {
-			int ret = fsl_qman_init(dn);
+			if (!of_device_is_available(dn))
+				continue;
+
+			ret = fsl_qman_init(dn);
 			BUG_ON(ret);
 		}
 	}
diff --git a/drivers/staging/fsl_qbman/qman_driver.c b/drivers/staging/fsl_qbman/qman_driver.c
index f46d067..996415f 100644
--- a/drivers/staging/fsl_qbman/qman_driver.c
+++ b/drivers/staging/fsl_qbman/qman_driver.c
@@ -1,4 +1,4 @@
-/* Copyright 2008-2011 Freescale Semiconductor, Inc.
+/* Copyright 2008-2012 Freescale Semiconductor, Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
@@ -446,6 +446,8 @@ static __init int qman_init(void)
 	if (fsl_dpa_should_recover())
 		recovery_mode = 1;
 	for_each_compatible_node(dn, NULL, "fsl,qman-portal") {
+		if (!of_device_is_available(dn))
+			continue;
 		pcfg = fsl_qman_portal_init(dn);
 		if (pcfg) {
 			if (pcfg->public_cfg.cpu >= 0) {
@@ -503,6 +505,8 @@ static __init int qman_init(void)
 	}
 #else
 	for_each_compatible_node(dn, NULL, "fsl,qman-portal") {
+		if (!of_device_is_available(dn))
+			continue;
 		pcfg = fsl_qman_portal_init(dn);
 		if (pcfg)
 			/* No kernel portal support, so if USDPAA didn't consume
-- 
1.7.9.7

