From 27880818873edcd730ea162c86b7e76c188b8131 Mon Sep 17 00:00:00 2001
From: "Lu.Jiang" <lu.jiang@windriver.com>
Date: Fri, 5 Sep 2014 18:00:23 +0800
Subject: [PATCH 0414/1089] Update mpc85xx soc models list

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Remove some useless functions.
Add some new soc list.

Signed-off-by: Haijun Zhang <haijun.zhang@freescale.com>
Change-Id: I664c1f0b9fc0544ec1fed7304bae2fc562266676
Reviewed-on: http://git.am.freescale.net:8181/2316
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Signed-off-by: Lu.Jiang <lu.jiang@windriver.com>
---
 arch/powerpc/sysdev/fsl_pci.c     | 22 ++++++++++++----------
 arch/powerpc/sysdev/fsl_rio.c     |  3 ++-
 drivers/mmc/host/sdhci-of-esdhc.c | 31 +++++++++++++++++++------------
 drivers/usb/host/fsl-mph-dr-of.c  | 18 +++++++++---------
 4 files changed, 42 insertions(+), 32 deletions(-)

diff --git a/arch/powerpc/sysdev/fsl_pci.c b/arch/powerpc/sysdev/fsl_pci.c
index 0c0067a..1d307c9 100644
--- a/arch/powerpc/sysdev/fsl_pci.c
+++ b/arch/powerpc/sysdev/fsl_pci.c
@@ -182,6 +182,7 @@ static void setup_pci_atmu(struct pci_controller *hose)
 	const char *name = hose->dn->full_name;
 	const u64 *reg;
 	int len;
+	u32 svr = mfspr(SPRN_SVR);
 
 	if (of_device_is_compatible(hose->dn, "fsl,bsc9132-pcie")) {
 		/*
@@ -202,11 +203,11 @@ static void setup_pci_atmu(struct pci_controller *hose)
 	 */
 #define OWMSV 0x10
 #define ORMSV 0x08
-	if ((fsl_svr_is(SVR_8543) || fsl_svr_is(SVR_8543_E) ||
-	     fsl_svr_is(SVR_8545) || fsl_svr_is(SVR_8545_E) ||
-	     fsl_svr_is(SVR_8547) || fsl_svr_is(SVR_8547_E) ||
-	     fsl_svr_is(SVR_8548) || fsl_svr_is(SVR_8548_E)) &&
-	     fsl_svr_older_than(2, 1)) {
+	if (((SVR_SOC_VER(svr) == SVR_8543) ||
+			(SVR_SOC_VER(svr) == SVR_8545) ||
+			(SVR_SOC_VER(svr) == SVR_8547) ||
+			(SVR_SOC_VER(svr) == SVR_8548)) &&
+			(SVR_REV(svr) <= 0x20)) {
 		if (of_device_is_compatible(hose->dn, "fsl,mpc8540-pci")) {
 			/* disable OWMSV and ORMSV error capture */
 			setbits32(&pci->pcier.pecdr, OWMSV | ORMSV);
@@ -497,6 +498,7 @@ int fsl_add_bridge(struct platform_device *pdev, int is_primary)
 	struct device_node *dev;
 	struct ccsr_pci __iomem *pci;
 	u16 temp;
+	u32 svr = mfspr(SPRN_SVR);
 
 	dev = pdev->dev.of_node;
 
@@ -575,11 +577,11 @@ int fsl_add_bridge(struct platform_device *pdev, int is_primary)
 		 */
 #define PCI_BUS_FUNCTION 0x44
 #define PCI_BUS_FUNCTION_MDS 0x400	/* Master disable streaming */
-		if ((fsl_svr_is(SVR_8543) || fsl_svr_is(SVR_8543_E) ||
-		     fsl_svr_is(SVR_8545) || fsl_svr_is(SVR_8545_E) ||
-		     fsl_svr_is(SVR_8547) || fsl_svr_is(SVR_8547_E) ||
-		     fsl_svr_is(SVR_8548) || fsl_svr_is(SVR_8548_E)) &&
-		    !early_find_capability(hose, 0, 0, PCI_CAP_ID_PCIX)) {
+		if (((SVR_SOC_VER(svr) == SVR_8543) ||
+			(SVR_SOC_VER(svr) == SVR_8545) ||
+			(SVR_SOC_VER(svr) == SVR_8547) ||
+			(SVR_SOC_VER(svr) == SVR_8548)) &&
+			!early_find_capability(hose, 0, 0, PCI_CAP_ID_PCIX)) {
 			early_read_config_word(hose, 0, 0,
 						PCI_BUS_FUNCTION, &temp);
 			temp |= PCI_BUS_FUNCTION_MDS;
diff --git a/arch/powerpc/sysdev/fsl_rio.c b/arch/powerpc/sysdev/fsl_rio.c
index 9909853..8f1c071 100644
--- a/arch/powerpc/sysdev/fsl_rio.c
+++ b/arch/powerpc/sysdev/fsl_rio.c
@@ -381,6 +381,7 @@ int fsl_rio_setup(struct platform_device *dev)
 	u32 i;
 	static int tmp;
 	struct device_node *rmu_np[MAX_MSG_UNIT_NUM] = {NULL};
+	static u32 svr = mfspr(SPRN_SVR);
 
 	if (!dev->dev.of_node) {
 		dev_err(&dev->dev, "Device OF-Node is NULL");
@@ -395,7 +396,7 @@ int fsl_rio_setup(struct platform_device *dev)
 	}
 
 	/* Fix erratum NMG_SRIO135 */
-	if (fsl_svr_is(SVR_8548) || fsl_svr_is(SVR_8548_E)) {
+	if (SVR_SOC_VER(svr) == SVR_8548) {
 		rc = fixup_erratum_srio135(&dev->dev);
 		if (rc) {
 			dev_err(&dev->dev,
diff --git a/drivers/mmc/host/sdhci-of-esdhc.c b/drivers/mmc/host/sdhci-of-esdhc.c
index 12d7a44..b12857e 100644
--- a/drivers/mmc/host/sdhci-of-esdhc.c
+++ b/drivers/mmc/host/sdhci-of-esdhc.c
@@ -25,6 +25,9 @@
 
 #define VENDOR_V_22	0x12
 #define VENDOR_V_23	0x13
+
+static u32 svr;
+
 static u32 esdhc_readl(struct sdhci_host *host, int reg)
 {
 	u32 ret;
@@ -154,7 +157,7 @@ static void esdhc_writeb(struct sdhci_host *host, u8 val, int reg)
 		if (!host->pwr || !val)
 			return;
 
-		if (fsl_svr_is(SVR_T4240)) {
+		if (SVR_SOC_VER(svr) == SVR_T4240) {
 			u8 vol;
 
 			vol = sdhci_be32bs_readb(host, reg);
@@ -211,10 +214,15 @@ static void esdhci_of_adma_workaround(struct sdhci_host *host, u32 intmask)
 	 * occurs on system transaction
 	 * Impact list:
 	 * T4240-R1.0 B4860-R1.0 P1010-R1.0
+	 * P3041-R1.0-R2.0-R1.1 P2041-R1.0-R1.1-R2.0
+	 * P5040-R2.0
 	 */
-	if (!((fsl_svr_is(SVR_T4240) && fsl_svr_rev_is(1, 0)) ||
-		(fsl_svr_is(SVR_B4860) && fsl_svr_rev_is(1, 0)) ||
-		(fsl_svr_is(SVR_P1010) && fsl_svr_rev_is(1, 0))))
+	if (!(((SVR_SOC_VER(svr) == SVR_T4240) && (SVR_REV(svr) == 0x10)) ||
+		((SVR_SOC_VER(svr) == SVR_B4860) && (SVR_REV(svr) == 0x10)) ||
+		((SVR_SOC_VER(svr) == SVR_P1010) && (SVR_REV(svr) == 0x10)) ||
+		((SVR_SOC_VER(svr) == SVR_P3041) && (SVR_REV(svr) <= 0x20)) ||
+		((SVR_SOC_VER(svr) == SVR_P2041) && (SVR_REV(svr) <= 0x20)) ||
+		((SVR_SOC_VER(svr) == SVR_P5040) && (SVR_REV(svr) == 0x20))))
 		return;
 
 	if (host->flags & SDHCI_USE_ADMA) {
@@ -381,6 +389,7 @@ static void esdhc_of_platform_init(struct sdhci_host *host)
 {
 	u32 vvn;
 
+	svr =  mfspr(SPRN_SVR);
 	vvn = in_be32(host->ioaddr + SDHCI_SLOT_INT_STATUS);
 	vvn = (vvn & SDHCI_VENDOR_VER_MASK) >> SDHCI_VENDOR_VER_SHIFT;
 	if (vvn == VENDOR_V_22)
@@ -396,14 +405,12 @@ static void esdhc_of_platform_init(struct sdhci_host *host)
 	 * T4240-R1.0 B4860-R1.0 P3041-R1.0 P3041-R2.0 P2041-R1.0
 	 * P2041-R1.1 P2041-R2.0 P1010-R1.0
 	 */
-	if ((fsl_svr_is(SVR_T4240) && fsl_svr_rev_is(1, 0)) ||
-		(fsl_svr_is(SVR_B4860) && fsl_svr_rev_is(1, 0)) ||
-		(fsl_svr_is(SVR_P3041) && fsl_svr_rev_is(1, 0)) ||
-		(fsl_svr_is(SVR_P3041) && fsl_svr_rev_is(2, 0)) ||
-		(fsl_svr_is(SVR_P2041) && fsl_svr_rev_is(2, 0)) ||
-		(fsl_svr_is(SVR_P2041) && fsl_svr_rev_is(1, 1)) ||
-		(fsl_svr_is(SVR_P2041) && fsl_svr_rev_is(1, 0)) ||
-		(fsl_svr_is(SVR_P1010) && fsl_svr_rev_is(1, 0)))
+	if (((SVR_SOC_VER(svr) == SVR_T4240) && (SVR_REV(svr) == 0x10)) ||
+		((SVR_SOC_VER(svr) == SVR_B4860) && (SVR_REV(svr) == 0x10)) ||
+		((SVR_SOC_VER(svr) == SVR_P1010) && (SVR_REV(svr) == 0x10)) ||
+		((SVR_SOC_VER(svr) == SVR_P3041) && (SVR_REV(svr) == 0x10)) ||
+		((SVR_SOC_VER(svr) == SVR_P3041) && (SVR_REV(svr) == 0x20)) ||
+		((SVR_SOC_VER(svr) == SVR_P2041) && (SVR_REV(svr) <= 0x20)))
 		host->quirks2 |= SDHCI_QUIRK2_BROKEN_RESET_ALL;
 }
 
diff --git a/drivers/usb/host/fsl-mph-dr-of.c b/drivers/usb/host/fsl-mph-dr-of.c
index 310f65e..c353f89 100644
--- a/drivers/usb/host/fsl-mph-dr-of.c
+++ b/drivers/usb/host/fsl-mph-dr-of.c
@@ -131,15 +131,15 @@ static bool has_erratum_a005275(struct device_node *node)
 	 * P5020 and P5010 rev 1.0 and 2.0
 	 * P5040 and P1010 rev 1.0
 	 */
-	if ((fsl_svr_is(SVR_P3041)) || (fsl_svr_is(SVR_P3041_E)) ||
-			(fsl_svr_is(SVR_P2041)) || (fsl_svr_is(SVR_P2041_E)))
-		flag = (IS_SVR_REV(svr, 1, 0)) || (IS_SVR_REV(svr, 1, 1));
-	else if ((fsl_svr_is(SVR_P5020)) || (fsl_svr_is(SVR_P5020_E)) ||
-			(fsl_svr_is(SVR_P5010)) || (fsl_svr_is(SVR_P5010_E)))
-		flag = (IS_SVR_REV(svr, 1, 0)) || (IS_SVR_REV(svr, 2, 0));
-	else if ((fsl_svr_is(SVR_P5040)) || (fsl_svr_is(SVR_P5040_E)) ||
-			(fsl_svr_is(SVR_P1010)) || (fsl_svr_is(SVR_P1010_E)))
-		flag = IS_SVR_REV(svr, 1, 0);
+	if ((SVR_SOC_VER(svr) == SVR_P2041) ||
+			(SVR_SOC_VER(svr) == SVR_P3041))
+		flag = (SVR_REV(svr) == 0x10) || (SVR_REV(svr) == 0x11);
+	else if ((SVR_SOC_VER(svr) == SVR_P5010) ||
+			(SVR_SOC_VER(svr) == SVR_P5020))
+		flag = (SVR_REV(svr) == 0x10) || (SVR_REV(svr) == 0x20);
+	else if ((SVR_SOC_VER(svr) == SVR_P5040) ||
+			(SVR_SOC_VER(svr) == SVR_P1010))
+		flag = (SVR_REV(svr) == 0x10);
 
 	return flag;
 }
-- 
2.0.2

