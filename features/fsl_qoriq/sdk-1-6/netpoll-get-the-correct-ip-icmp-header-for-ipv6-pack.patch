From d0833dda3ffbfcde7d37985d304f7456a33d1612 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Mon, 4 Aug 2014 14:10:12 +0800
Subject: [PATCH 2/2] netpoll: get the correct ip/icmp header for ipv6 packet

The helper functions skb_transport_header() and ipv6_hdr() can't be
used here since the skb->network_header and skb->transport_header
are not initialized yet in this case. The following is the call
chain:
netif_receive_skb()
  __netif_receive_skb()
    __netif_receive_skb_core()
      netpoll_receive_skb()
        netpoll_rx()
          __netpoll_rx()
            pkt_is_ns()
      skb_reset_network_header() ---> network_header init
      deliver_skb()
        ip_rcv()  ---> transport_header init

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 net/core/netpoll.c |    5 ++---
 1 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/net/core/netpoll.c b/net/core/netpoll.c
index 6c22ca9..9467959 100644
--- a/net/core/netpoll.c
+++ b/net/core/netpoll.c
@@ -751,9 +751,8 @@ static bool pkt_is_ns(struct sk_buff *skb)
 	if (!pskb_may_pull(skb, sizeof(struct ipv6hdr) + sizeof(struct nd_msg)))
 		return false;
 
-	msg = (struct nd_msg *)skb_transport_header(skb);
-	__skb_push(skb, skb->data - skb_transport_header(skb));
-	hdr = ipv6_hdr(skb);
+	hdr = (struct ipv6hdr *)skb->data;
+	msg = (struct nd_msg *)((char *)hdr + sizeof(*hdr));
 
 	if (hdr->nexthdr != IPPROTO_ICMPV6)
 		return false;
-- 
1.7.5.4

