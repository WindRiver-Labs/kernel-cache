From 3da1e349a6d31d1731b7b70ba845513ba281fb5d Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Fri, 10 Jan 2014 15:27:05 -0600
Subject: [PATCH 0663/1089] fsl_bman: Remove commented-out code

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Unused since before SDK v1.0

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: I6584920ff290cda570ad66c3c771d8f1fd4a09d5
Reviewed-on: http://git.am.freescale.net:8181/7926
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
---
 drivers/staging/fsl_qbman/bman_config.c  | 22 ----------------------
 drivers/staging/fsl_qbman/bman_private.h | 11 +++--------
 include/linux/fsl_bman.h                 | 11 -----------
 3 files changed, 3 insertions(+), 41 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_config.c b/drivers/staging/fsl_qbman/bman_config.c
index 2f5ff2f..d7e677b 100644
--- a/drivers/staging/fsl_qbman/bman_config.c
+++ b/drivers/staging/fsl_qbman/bman_config.c
@@ -184,28 +184,6 @@ static void __bm_err_isr_write(struct bman *bm, enum bm_isr_reg n, u32 val)
 	__bm_out(bm, REG_ERR_ISR + (n << 2), val);
 }
 
-#if 0
-static void bm_get_details(struct bman *bm, u8 *int_options, u8 *errata,
-			u8 *conf_options)
-{
-	u32 v = bm_in(IP_REV_1);
-	*int_options = (v >> 16) & 0xff;
-	*errata = (v >> 8) & 0xff;
-	*conf_options = v & 0xff;
-}
-
-static u8 bm_get_corenet_sourceid(struct bman *bm)
-{
-	return bm_in(SRCIDR);
-}
-
-static void bm_set_liodn(struct bman *bm, u16 liodn)
-{
-	bm_out(LIODNR, liodn & 0xfff);
-}
-
-#endif
-
 static void bm_get_version(struct bman *bm, u16 *id, u8 *major, u8 *minor)
 {
 	u32 v = bm_in(IP_REV_1);
diff --git a/drivers/staging/fsl_qbman/bman_private.h b/drivers/staging/fsl_qbman/bman_private.h
index e24588b..fea7a2b 100644
--- a/drivers/staging/fsl_qbman/bman_private.h
+++ b/drivers/staging/fsl_qbman/bman_private.h
@@ -119,14 +119,9 @@ int bman_have_ccsr(void);
 /*   BMan s/w corenet portal, low-level i/face   */
 /*************************************************/
 
-/* Used by all portal interrupt registers except 'inhibit'. NB, some of these
- * definitions are exported for use by the bman_irqsource_***() APIs, so are
- * commented-out here. */
-#if 0
-#define BM_PIRQ_RCRI	0x00000002	/* RCR Ring (below threshold) */
-#define BM_PIRQ_BSCN	0x00000001	/* Buffer depletion State Change */
-#endif
-/* This mask contains all the "irqsource" bits visible to API users */
+/* Used by all portal interrupt registers except 'inhibit'
+ * This mask contains all the "irqsource" bits visible to API users
+ */
 #define BM_PIRQ_VISIBLE	(BM_PIRQ_RCRI | BM_PIRQ_BSCN)
 
 /* These are bm_<reg>_<verb>(). So for example, bm_disable_write() means "write
diff --git a/include/linux/fsl_bman.h b/include/linux/fsl_bman.h
index 62bb66c..265d806 100644
--- a/include/linux/fsl_bman.h
+++ b/include/linux/fsl_bman.h
@@ -107,23 +107,12 @@ static inline dma_addr_t bm_buf_addr(const struct bm_buffer *buf)
 	return (dma_addr_t)buf->addr;
 }
 /* Macro, so we compile better if 'v' isn't always 64-bit */
-/* Note: this first version is causing a noticeable performance degradation,
- * which needs analysis, so leaving it commented out for now. The second version
- * achieves optimal performance. */
-#if 0
-#define bm_buffer_set64(buf, v) \
-	do { \
-		struct bm_buffer *__buf931 = (buf); \
-		__buf931->addr = v; \
-	} while (0)
-#else
 #define bm_buffer_set64(buf, v) \
 	do { \
 		struct bm_buffer *__buf931 = (buf); \
 		__buf931->hi = upper_32_bits(v); \
 		__buf931->lo = lower_32_bits(v); \
 	} while (0)
-#endif
 
 /* See 1.5.3.5.4: "Release Command" */
 struct bm_rcr_entry {
-- 
2.0.2

