From 4bd75cef5e71de1be9b4d15d9f8d6cb12d8837e3 Mon Sep 17 00:00:00 2001
From: Alexandru Badicioiu <b15898@freescale.com>
Date: Wed, 18 Sep 2013 15:20:13 +0300
Subject: [PATCH 0513/1089] dpa_offload : get SEC output frame buffer size from
 user space

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

SEC shared descriptor requires output frame buffer size in the preheader
to correctly create the output frame as scatter-gather when the buffer size
is less than frame size.

Signed-off-by: Alexandru Badicioiu <alexandru.badicioiu@freescale.com>
Change-Id: I344296bd541d0f9a8645469f51b33be69373a42b
Reviewed-on: http://git.am.freescale.net:8181/4829
Reviewed-by: Varvara Andrei-B21317 <andrei.varvara@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Rivera Jose-B46482 <German.Rivera@freescale.com>
---
 drivers/staging/fsl_dpa_offload/dpa_ipsec.c       | 3 +++
 drivers/staging/fsl_dpa_offload/dpa_ipsec.h       | 1 +
 drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c  | 2 +-
 drivers/staging/fsl_dpa_offload/dpa_ipsec_ioctl.h | 1 +
 drivers/staging/fsl_dpa_offload/wrp_dpa_ipsec.c   | 1 +
 include/linux/fsl_dpa_ipsec.h                     | 1 +
 6 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
index 797bee5..e926cf24 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.c
@@ -87,6 +87,7 @@ int print_sa_sec_param(struct dpa_ipsec_sa *sa)
 		pr_info("%x, ", sa->cipher_data.cipher_key[i]);
 
 	pr_info("\n sa_bpid = %d\n", sa->sa_bpid);
+	pr_info("\n sa_bufsize = %d\n", sa->sa_bufsize);
 	pr_info(" spi = %d\n", sa->spi);
 	pr_info(" sa_wqid = %d\n", sa->sa_wqid);
 	pr_info(" outbound_flowid = %d\n", sa->outbound_flowid);
@@ -2337,6 +2338,7 @@ static int copy_sa_params_to_out_sa(struct dpa_ipsec_sa *sa,
 
 	sa->sa_dir = DPA_IPSEC_OUTBOUND;
 	sa->sa_bpid = sa_params->sa_bpid;
+	sa->sa_bufsize = sa_params->sa_bufsize;
 	sa->sa_wqid = sa_params->sa_wqid;
 	ip_addr_type = sa_params->sa_out_params.ip_ver;
 
@@ -2490,6 +2492,7 @@ static int copy_sa_params_to_in_sa(struct dpa_ipsec_sa *sa,
 
 	sa->sa_dir = DPA_IPSEC_INBOUND;
 	sa->sa_bpid = sa_params->sa_bpid;
+	sa->sa_bufsize = sa_params->sa_bufsize;
 	sa->sa_wqid = sa_params->sa_wqid;
 	sa->spi = sa_params->spi;
 
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
index 25eca88..9f9956f 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec.h
@@ -258,6 +258,7 @@ struct dpa_ipsec_sa {
 	uint16_t sa_wqid; /* Work queue id in which the TO SEC FQ will be put */
 	uint8_t sa_bpid;  /* Buffer pool id used by SEC for acquiring buffers,
 			     comes from user. Default buffer pool 63	      */
+	uint16_t sa_bufsize;	/* Buffer pool buffer size		      */
 	uint32_t spi;	/* IPsec Security parameter index		      */
 	struct dpa_offload_ip_address src_addr;  /* Source IP address	      */
 	struct dpa_offload_ip_address dest_addr; /* Destination IP address    */
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
index b0d9e16..1ae08f9 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
@@ -1457,7 +1457,7 @@ done_shared_desc:
 	/* setup preheader */
 	sec_desc->preheader.hi.field.idlen = desc_len((u32 *) sec_desc->desc);
 	sec_desc->preheader.lo.field.pool_id = sa->sa_bpid;
-	sec_desc->preheader.lo.field.pool_buffer_size = 0;
+	sec_desc->preheader.lo.field.pool_buffer_size = sa->sa_bufsize;
 	sec_desc->preheader.lo.field.offset =
 		(sa->sa_dir == DPA_IPSEC_INBOUND) ?
 			sa->dpa_ipsec->config.post_sec_in_params.data_off :
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec_ioctl.h b/drivers/staging/fsl_dpa_offload/dpa_ipsec_ioctl.h
index b1f1160..694cb71 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec_ioctl.h
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec_ioctl.h
@@ -119,6 +119,7 @@ struct ioc_compat_sa_params {
 	uint8_t hdr_upd_flags;
 	uint8_t sa_wqid;
 	uint8_t sa_bpid;
+	uint16_t sa_bufsize;
 	bool enable_stats;
 	struct ioc_compat_sa_crypto_params crypto_params;
 	enum dpa_ipsec_direction sa_dir;
diff --git a/drivers/staging/fsl_dpa_offload/wrp_dpa_ipsec.c b/drivers/staging/fsl_dpa_offload/wrp_dpa_ipsec.c
index b9b60de..0d3ff7e 100644
--- a/drivers/staging/fsl_dpa_offload/wrp_dpa_ipsec.c
+++ b/drivers/staging/fsl_dpa_offload/wrp_dpa_ipsec.c
@@ -143,6 +143,7 @@ static void compat_copy_sa_params(struct dpa_ipsec_sa_params *sa_prm,
 	sa_prm->hdr_upd_flags = sa_compat_prm->hdr_upd_flags;
 	sa_prm->sa_wqid = sa_compat_prm->sa_wqid;
 	sa_prm->sa_bpid = sa_compat_prm->sa_bpid;
+	sa_prm->sa_bufsize = sa_compat_prm->sa_bufsize;
 	sa_prm->enable_stats = sa_compat_prm->enable_stats;
 	sa_prm->sa_dir = sa_compat_prm->sa_dir;
 
diff --git a/include/linux/fsl_dpa_ipsec.h b/include/linux/fsl_dpa_ipsec.h
index e5ac6aa..c2bf717 100644
--- a/include/linux/fsl_dpa_ipsec.h
+++ b/include/linux/fsl_dpa_ipsec.h
@@ -335,6 +335,7 @@ struct dpa_ipsec_sa_params {
 				 * to outer header and vice versa	      */
 	uint8_t sa_wqid;	/* Work queue Id for all the queues in this SA*/
 	uint8_t sa_bpid;	/* Buffer Pool ID to be used with this SA     */
+	uint16_t sa_bufsize;	/* Buffer Pool buffer size		      */
 	bool	enable_stats;	/* Enable counting packets and bytes processed*/
 	struct dpa_ipsec_sa_crypto_params crypto_params;/* IPSec crypto params*/
 	enum dpa_ipsec_direction sa_dir;  /* SA direction: Outbound/Inbound   */
-- 
2.0.2

