From f1308fa7b018b6ca66522f55bab9e40f7c796218 Mon Sep 17 00:00:00 2001
From: Shaohui Xie <Shaohui.Xie@freescale.com>
Date: Tue, 22 Apr 2014 16:17:30 +0800
Subject: [PATCH 303/466] fman/memac: use default MDIO_HOLD value

Current driver uses a Maximum value for MDIO_HOLD when doing 10G MDIO
access, this is due to an errata A-006260 on T4 rev1.0 which is fixed
on rev2.0, so remove the maximum value to use the default value for rev2.0.

Signed-off-by: Shaohui Xie <Shaohui.Xie@freescale.com>
Change-Id: Ic777ab0ac053b9f0badb3166fd9c5fa3b3be4255
Reviewed-on: http://git.am.freescale.net:8181/11329
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Shruti Kanetkar <Shruti@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/xgmac_mdio.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/xgmac_mdio.c b/drivers/net/ethernet/freescale/xgmac_mdio.c
index 7ef6115..f950b9b 100644
--- a/drivers/net/ethernet/freescale/xgmac_mdio.c
+++ b/drivers/net/ethernet/freescale/xgmac_mdio.c
@@ -102,7 +102,7 @@ static int xgmac_mdio_write(struct mii_bus *bus, int phy_id, int regnum, u16 val
 	if (regnum & MII_ADDR_C45) {
 		/* Clause 45 (ie 10G) */
 		dev_addr = (regnum >> 16) & 0x1f;
-		mdio_stat |= MDIO_STAT_ENC | MDIO_STAT_HOLD_15_CLK;
+		mdio_stat |= MDIO_STAT_ENC;
 	} else {
 		/* Clause 22 (ie 1G) */
 		dev_addr = regnum & 0x1f;
@@ -155,7 +155,7 @@ static int xgmac_mdio_read(struct mii_bus *bus, int phy_id, int regnum)
 	mdio_stat = in_be32(&regs->mdio_stat);
 	if (regnum & MII_ADDR_C45) {
 		dev_addr = (regnum >> 16) & 0x1f;
-		mdio_stat |= MDIO_STAT_ENC | MDIO_STAT_HOLD_15_CLK;
+		mdio_stat |= MDIO_STAT_ENC;
 	} else {
 		dev_addr = regnum & 0x1f;
 		mdio_stat = ~MDIO_STAT_ENC;
-- 
1.7.10.4

