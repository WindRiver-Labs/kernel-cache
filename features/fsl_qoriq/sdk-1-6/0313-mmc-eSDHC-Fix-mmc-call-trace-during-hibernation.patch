From 2ad36c03929df9a7010199a1648e71a5dab55e42 Mon Sep 17 00:00:00 2001
From: Haijun Zhang <Haijun.Zhang@freescale.com>
Date: Mon, 5 May 2014 16:26:47 +0800
Subject: [PATCH 313/466] mmc:eSDHC: Fix mmc call trace during hibernation

For removable card we avoid to invoke resume and suspend call back
function, because it's not safe in case card was removed and replaced
with a new one during suspend. But it's still need to judge the bus_ops
hook before we run it.

Signed-off-by: Haijun Zhang <Haijun.Zhang@freescale.com>
Change-Id: I1c2d26171a7ca02c2ecd2f029e37c5b715fb4105
Reviewed-on: http://git.am.freescale.net:8181/11804
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Xiaobo Xie <X.Xie@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/mmc/core/bus.c |   18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/mmc/core/bus.c b/drivers/mmc/core/bus.c
index d4b99bb..1de449a 100644
--- a/drivers/mmc/core/bus.c
+++ b/drivers/mmc/core/bus.c
@@ -146,7 +146,7 @@ static int mmc_bus_suspend(struct device *dev)
 	struct mmc_driver *drv = to_mmc_driver(dev->driver);
 	struct mmc_card *card = mmc_dev_to_card(dev);
 	struct mmc_host *host = card->host;
-	int ret;
+	int ret = -ENODEV;
 
 	if (dev->driver && drv->suspend) {
 		ret = drv->suspend(card);
@@ -154,7 +154,9 @@ static int mmc_bus_suspend(struct device *dev)
 			return ret;
 	}
 
-	ret = host->bus_ops->suspend(host);
+	if (host->bus_ops->suspend)
+		ret = host->bus_ops->suspend(host);
+
 	return ret;
 }
 
@@ -163,12 +165,14 @@ static int mmc_bus_resume(struct device *dev)
 	struct mmc_driver *drv = to_mmc_driver(dev->driver);
 	struct mmc_card *card = mmc_dev_to_card(dev);
 	struct mmc_host *host = card->host;
-	int ret;
+	int ret = -ENODEV;
 
-	ret = host->bus_ops->resume(host);
-	if (ret)
-		pr_warn("%s: error %d during resume (card was removed?)\n",
-			mmc_hostname(host), ret);
+	if (host->bus_ops->resume) {
+		ret = host->bus_ops->resume(host);
+		if (ret)
+			pr_warn("%s: error %d during resume (card was removed?)\n",
+				mmc_hostname(host), ret);
+	}
 
 	if (dev->driver && drv->resume)
 		ret = drv->resume(card);
-- 
1.7.10.4

