From 6a577652771c78ed0d23a5061e018fc00950314e Mon Sep 17 00:00:00 2001
From: "Lu.Jiang" <lu.jiang@windriver.com>
Date: Thu, 11 Sep 2014 17:11:31 +0800
Subject: [PATCH 0622/1089] dpaa_eth: fix several checkpatch reports

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Fix several issues reported by checkpatch.

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: I59430f58c570e06aad7ef7d990e37a45402f296f
Reviewed-on: http://git.am.freescale.net:8181/7448
Reviewed-by: Cristian-Constantin Sovaiala <Cristian.Sovaiala@freescale.com>
Reviewed-by: Marian Cristian Rotariu <marian.rotariu@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/7697
Signed-off-by: Lu.Jiang <lu.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_1588.c     |  5 +-
 drivers/net/ethernet/freescale/dpa/dpaa_1588.h     |  5 +-
 drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c  | 19 +++--
 drivers/net/ethernet/freescale/dpa/dpaa_debugfs.h  |  3 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c      |  6 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth.h      |  3 +-
 .../net/ethernet/freescale/dpa/dpaa_eth_common.c   |  3 +-
 .../net/ethernet/freescale/dpa/dpaa_eth_macless.c  |  3 +-
 .../net/ethernet/freescale/dpa/dpaa_eth_proxy.c    |  3 +-
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c   |  7 +-
 .../net/ethernet/freescale/dpa/dpaa_eth_shared.c   |  3 +-
 .../net/ethernet/freescale/dpa/dpaa_eth_sysfs.c    |  3 +-
 .../net/ethernet/freescale/dpa/dpaa_eth_trace.h    |  3 +-
 drivers/net/ethernet/freescale/dpa/mac.c           |  3 +-
 drivers/net/ethernet/freescale/dpa/offline_port.c  | 85 ++++++++++------------
 drivers/net/ethernet/freescale/dpa/offline_port.h  |  3 +-
 16 files changed, 66 insertions(+), 91 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_1588.c b/drivers/net/ethernet/freescale/dpa/dpaa_1588.c
index 17011e9..514c045 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_1588.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_1588.c
@@ -1,7 +1,4 @@
-/*
- * drivers/net/dpa/dpaa_1588.c
- *
- * Copyright (C) 2011 Freescale Semiconductor, Inc.
+/* Copyright (C) 2011 Freescale Semiconductor, Inc.
  * Copyright (C) 2009 IXXAT Automation, GmbH
  *
  * DPAA Ethernet Driver -- IEEE 1588 interface functionality
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_1588.h b/drivers/net/ethernet/freescale/dpa/dpaa_1588.h
index 4b8f57b..7339016 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_1588.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_1588.h
@@ -1,7 +1,4 @@
-/*
- * drivers/net/dpa/dpaa_1588.h
- *
- * Copyright (C) 2011 Freescale Semiconductor, Inc.
+/* Copyright (C) 2011 Freescale Semiconductor, Inc.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c b/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c
index f424f4a..0c884a5 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.c
@@ -1,5 +1,4 @@
-/*
- * Copyright 2008-2013 Freescale Semiconductor Inc.
+/* Copyright 2008-2013 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
@@ -70,8 +69,8 @@ static int dpa_debugfs_show(struct seq_file *file, void *offset)
 
 	/* "Standard" counters */
 	seq_printf(file, "\nDPA counters for %s:\n", priv->net_dev->name);
-	seq_printf(file, "CPU           irqs        rx        tx   recycle   ");
-	seq_printf(file, "confirm     tx sg    tx err    rx err   bp count\n");
+	seq_puts(file, "CPU           irqs        rx        tx   recycle   ");
+	seq_puts(file, "confirm     tx sg    tx err    rx err   bp count\n");
 
 
 	for_each_online_cpu(i) {
@@ -116,7 +115,7 @@ static int dpa_debugfs_show(struct seq_file *file, void *offset)
 			count_total);
 
 	/* Congestion stats */
-	seq_printf(file, "\nDevice congestion stats:\n");
+	seq_puts(file, "\nDevice congestion stats:\n");
 	seq_printf(file, "Device has been congested for %d ms.\n",
 		jiffies_to_msecs(priv->cgr_data.congested_jiffies));
 
@@ -132,8 +131,8 @@ static int dpa_debugfs_show(struct seq_file *file, void *offset)
 	priv->cgr_data.cgr_congested_count = 0;
 
 	/* Rx Errors demultiplexing */
-	seq_printf(file, "\nDPA RX Errors:\nCPU        dma err  phys err");
-	seq_printf(file, "  size err   hdr err  csum err\n");
+	seq_puts(file, "\nDPA RX Errors:\nCPU        dma err  phys err");
+	seq_puts(file, "  size err   hdr err  csum err\n");
 	for_each_online_cpu(i) {
 		percpu_priv = per_cpu_ptr(priv->percpu_priv, i);
 
@@ -160,9 +159,9 @@ static int dpa_debugfs_show(struct seq_file *file, void *offset)
 			total.rx_errors.cse);
 
 	/* ERN demultiplexing */
-	seq_printf(file, "\nDPA ERN counters:\n  CPU     cg_td      wred  ");
-	seq_printf(file, "err_cond   early_w    late_w     fq_td    fq_ret");
-	seq_printf(file, "     orp_z\n");
+	seq_puts(file, "\nDPA ERN counters:\n  CPU     cg_td      wred  ");
+	seq_puts(file, "err_cond   early_w    late_w     fq_td    fq_ret");
+	seq_puts(file, "     orp_z\n");
 	for_each_online_cpu(i) {
 		percpu_priv = per_cpu_ptr(priv->percpu_priv, i);
 
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.h b/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.h
index 923f51a..f82cde5 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_debugfs.h
@@ -1,5 +1,4 @@
-/*
- * Copyright 2008-2013 Freescale Semiconductor Inc.
+/* Copyright 2008-2013 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index 07b096c..4a8dd1d 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -1,5 +1,4 @@
-/*
- * Copyright 2008-2013 Freescale Semiconductor Inc.
+/* Copyright 2008-2013 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
@@ -215,8 +214,7 @@ static void _dpa_rx_error(struct net_device *net_dev,
 		const struct qm_fd *fd,
 		u32 fqid)
 {
-	/*
-	 * limit common, possibly innocuous Rx FIFO Overflow errors'
+	/* limit common, possibly innocuous Rx FIFO Overflow errors'
 	 * interference with zero-loss convergence benchmark results.
 	 */
 	if (likely(fd->status & FM_FD_STAT_ERR_PHYSICAL))
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
index 8fb60a3..8350fca 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
@@ -1,5 +1,4 @@
-/*
- * Copyright 2008-2012 Freescale Semiconductor Inc.
+/* Copyright 2008-2012 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index c6e6303..feaee37 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -74,8 +74,7 @@ static const char fsl_qman_frame_queues[][25] = {
 
 /* A set of callbacks for hooking into the fastpath at different points. */
 struct dpaa_eth_hooks_s dpaa_eth_hooks;
-/*
- * This function should only be called on the probe paths, since it makes no
+/* This function should only be called on the probe paths, since it makes no
  * effort to guarantee consistency of the destination hooks structure.
  */
 void fsl_dpaa_eth_set_hooks(struct dpaa_eth_hooks_s *hooks)
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c
index 637acb5..54d7daa 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_macless.c
@@ -1,5 +1,4 @@
-/*
- * Copyright 2008-2013 Freescale Semiconductor Inc.
+/* Copyright 2008-2013 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_proxy.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_proxy.c
index 8ab7fee..1b77982 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_proxy.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_proxy.c
@@ -1,5 +1,4 @@
-/*
- * Copyright 2008-2013 Freescale Semiconductor Inc.
+/* Copyright 2008-2013 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index a2e43b7..be60889 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -1,5 +1,4 @@
-/*
- * Copyright 2012 Freescale Semiconductor Inc.
+/* Copyright 2012 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
@@ -155,9 +154,7 @@ netdev_alloc_failed:
 	return 0;
 }
 
-/*
- * Cold path wrapper over _dpa_bp_add_8_bufs().
- */
+/* Cold path wrapper over _dpa_bp_add_8_bufs(). */
 void dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp, int cpu)
 {
 	int *count_ptr = per_cpu_ptr(dpa_bp->percpu_count, cpu);
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
index 8d5bb06..b2f3cd2 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_shared.c
@@ -1,5 +1,4 @@
-/*
- * Copyright 2008-2013 Freescale Semiconductor Inc.
+/* Copyright 2008-2013 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c
index 5bb7339..751a2fc 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c
@@ -1,5 +1,4 @@
-/*
- * Copyright 2008-2012 Freescale Semiconductor Inc.
+/* Copyright 2008-2012 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_trace.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth_trace.h
index 21d56d6..0004c4f 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_trace.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_trace.h
@@ -1,5 +1,4 @@
-/*
- * Copyright 2013 Freescale Semiconductor Inc.
+/* Copyright 2013 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
diff --git a/drivers/net/ethernet/freescale/dpa/mac.c b/drivers/net/ethernet/freescale/dpa/mac.c
index 6efe9d2..158fc30 100644
--- a/drivers/net/ethernet/freescale/dpa/mac.c
+++ b/drivers/net/ethernet/freescale/dpa/mac.c
@@ -353,7 +353,8 @@ static int __cold mac_probe(struct platform_device *_of_dev)
 			goto _return_dev_set_drvdata;
 		}
 
-		sprintf(mac_dev->fixed_bus_id, PHY_ID_FMT, "fixed-0", phy_id[0]);
+		sprintf(mac_dev->fixed_bus_id, PHY_ID_FMT, "fixed-0",
+			phy_id[0]);
 	}
 
 	_errno = mac_dev->init(mac_dev);
diff --git a/drivers/net/ethernet/freescale/dpa/offline_port.c b/drivers/net/ethernet/freescale/dpa/offline_port.c
index 6aadcc8..50bf68f 100644
--- a/drivers/net/ethernet/freescale/dpa/offline_port.c
+++ b/drivers/net/ethernet/freescale/dpa/offline_port.c
@@ -1,5 +1,4 @@
-/*
- * Copyright 2011-2012 Freescale Semiconductor Inc.
+/* Copyright 2011-2012 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
@@ -30,8 +29,7 @@
  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
-/*
- * Offline Parsing / Host Command port driver for FSL QorIQ FMan.
+/* Offline Parsing / Host Command port driver for FSL QorIQ FMan.
  * Validates device-tree configuration and sets up the offline ports.
  */
 
@@ -49,9 +47,7 @@
 #include "dpaa_eth_common.h"
 
 #define OH_MOD_DESCRIPTION	"FSL FMan Offline Parsing port driver"
-/*
- * Manip extra space and data alignment for fragmentation
- */
+/* Manip extra space and data alignment for fragmentation */
 #define FRAG_MANIP_SPACE 128
 #define FRAG_DATA_ALIGN 64
 
@@ -237,9 +233,7 @@ oh_port_probe(struct platform_device *_of_dev)
 
 	dev_dbg(dpa_oh_dev, "Probing OH port...\n");
 
-	/*
-	 * Find the referenced OH node
-	 */
+	/* Find the referenced OH node */
 
 	oh_port_handle = of_get_property(dpa_oh_node,
 		"fsl,fman-oh-port", &lenp);
@@ -251,8 +245,8 @@ oh_port_probe(struct platform_device *_of_dev)
 
 	BUG_ON(lenp % sizeof(*oh_port_handle));
 	if (lenp != sizeof(*oh_port_handle)) {
-		dev_err(dpa_oh_dev, "Found %lu OH port bindings in node %s,"
-			" only 1 phandle is allowed.\n",
+		dev_err(dpa_oh_dev,
+			"Found %lu OH port bindings in node %s, only 1 phandle is allowed.\n",
 			(unsigned long int)(lenp / sizeof(*oh_port_handle)),
 			dpa_oh_node->full_name);
 		return -EINVAL;
@@ -261,8 +255,9 @@ oh_port_probe(struct platform_device *_of_dev)
 	/* Read configuration for the OH port */
 	oh_node = of_find_node_by_phandle(*oh_port_handle);
 	if (oh_node == NULL) {
-		dev_err(dpa_oh_dev, "Can't find OH node referenced from "
-			"node %s\n", dpa_oh_node->full_name);
+		dev_err(dpa_oh_dev,
+			"Can't find OH node referenced from node %s\n",
+			dpa_oh_node->full_name);
 		return -EINVAL;
 	}
 	dev_info(dpa_oh_dev, "Found OH node handle compatible with %s.\n",
@@ -283,8 +278,7 @@ oh_port_probe(struct platform_device *_of_dev)
 	BUG_ON(oh_of_dev == NULL);
 	oh_dev = &oh_of_dev->dev;
 
-	/*
-	 * The OH port must be initialized exactly once.
+	/* The OH port must be initialized exactly once.
 	 * The following scenarios are of interest:
 	 *	- the node is Linux-private (will always initialize it);
 	 *	- the node is shared between two Linux partitions
@@ -295,13 +289,15 @@ oh_port_probe(struct platform_device *_of_dev)
 
 	/* Check if the current partition owns the OH port
 	 * and ought to initialize it. It may be the case that we leave this
-	 * to another (also Linux) partition. */
+	 * to another (also Linux) partition.
+	 */
 	init_oh_port = strcmp(match->compatible, "fsl,dpa-oh-shared");
 
 	/* If we aren't the "owner" of the OH node, we're done here. */
 	if (!init_oh_port) {
-		dev_dbg(dpa_oh_dev, "Not owning the shared OH port %s, "
-			"will not initialize it.\n", oh_node->full_name);
+		dev_dbg(dpa_oh_dev,
+			"Not owning the shared OH port %s, will not initialize it.\n",
+			oh_node->full_name);
 		of_node_put(oh_node);
 		return 0;
 	}
@@ -309,21 +305,19 @@ oh_port_probe(struct platform_device *_of_dev)
 	/* Allocate OH dev private data */
 	oh_config = devm_kzalloc(dpa_oh_dev, sizeof(*oh_config), GFP_KERNEL);
 	if (oh_config == NULL) {
-		dev_err(dpa_oh_dev, "Can't allocate private data for "
-			"OH node %s referenced from node %s!\n",
+		dev_err(dpa_oh_dev,
+			"Can't allocate private data for OH node %s referenced from node %s!\n",
 			oh_node->full_name, dpa_oh_node->full_name);
 		_errno = -ENOMEM;
 		goto return_kfree;
 	}
 
-	/*
-	 * Read FQ ids/nums for the DPA OH node
-	 */
+	/* Read FQ ids/nums for the DPA OH node */
 	oh_all_queues = (uint32_t *)of_get_property(dpa_oh_node,
 		"fsl,qman-frame-queues-oh", &lenp);
 	if (oh_all_queues == NULL) {
-		dev_err(dpa_oh_dev, "No frame queues have been "
-			"defined for OH node %s referenced from node %s\n",
+		dev_err(dpa_oh_dev,
+			"No frame queues have been defined for OH node %s referenced from node %s\n",
 			oh_node->full_name, dpa_oh_node->full_name);
 		_errno = -EINVAL;
 		goto return_kfree;
@@ -333,8 +327,8 @@ oh_port_probe(struct platform_device *_of_dev)
 	BUG_ON(lenp % (2 * sizeof(*oh_all_queues)));
 	queues_count = lenp / (2 * sizeof(*oh_all_queues));
 	if (queues_count != 2) {
-		dev_err(dpa_oh_dev, "Error and Default queues must be "
-			"defined for OH node %s referenced from node %s\n",
+		dev_err(dpa_oh_dev,
+			"Error and Default queues must be defined for OH node %s referenced from node %s\n",
 			oh_node->full_name, dpa_oh_node->full_name);
 		_errno = -EINVAL;
 		goto return_kfree;
@@ -348,8 +342,8 @@ oh_port_probe(struct platform_device *_of_dev)
 	crt_fqid_base = oh_all_queues[fq_idx++];
 	crt_fq_count = oh_all_queues[fq_idx++];
 	if (crt_fq_count != 1) {
-		dev_err(dpa_oh_dev, "Only 1 Error FQ allowed in OH node %s "
-			"referenced from node %s (read: %d FQIDs).\n",
+		dev_err(dpa_oh_dev,
+			"Only 1 Error FQ allowed in OH node %s referenced from node %s (read: %d FQIDs).\n",
 			oh_node->full_name, dpa_oh_node->full_name,
 			crt_fq_count);
 		_errno = -EINVAL;
@@ -363,8 +357,8 @@ oh_port_probe(struct platform_device *_of_dev)
 	crt_fqid_base = oh_all_queues[fq_idx++];
 	crt_fq_count = oh_all_queues[fq_idx++];
 	if (crt_fq_count != 1) {
-		dev_err(dpa_oh_dev, "Only 1 Default FQ allowed "
-			"in OH node %s referenced from %s (read: %d FQIDs).\n",
+		dev_err(dpa_oh_dev,
+			"Only 1 Default FQ allowed in OH node %s referenced from %s (read: %d FQIDs).\n",
 			oh_node->full_name, dpa_oh_node->full_name,
 			crt_fq_count);
 		_errno = -EINVAL;
@@ -378,8 +372,8 @@ oh_port_probe(struct platform_device *_of_dev)
 	oh_tx_queues = (uint32_t *)of_get_property(dpa_oh_node,
 		"fsl,qman-frame-queues-tx", &lenp);
 	if (oh_tx_queues == NULL) {
-		dev_dbg(dpa_oh_dev, "No tx queues have been "
-		"defined for OH node %s referenced from node %s\n",
+		dev_dbg(dpa_oh_dev,
+			"No tx queues have been defined for OH node %s referenced from node %s\n",
 			oh_node->full_name, dpa_oh_node->full_name);
 		goto config_port;
 	}
@@ -388,9 +382,8 @@ oh_port_probe(struct platform_device *_of_dev)
 	BUG_ON(lenp % (2 * sizeof(*oh_tx_queues)));
 	queues_count = lenp / (2 * sizeof(*oh_tx_queues));
 	if (queues_count != 1) {
-		dev_err(dpa_oh_dev, "TX queues must be defined in"
-			"only one <base count> tuple for OH node %s "
-			"referenced from node %s\n",
+		dev_err(dpa_oh_dev,
+			"TX queues must be defined in only one <base count> tuple for OH node %s referenced from node %s\n",
 			oh_node->full_name, dpa_oh_node->full_name);
 		_errno = -EINVAL;
 		goto return_kfree;
@@ -416,8 +409,8 @@ oh_port_probe(struct platform_device *_of_dev)
 	oh_config->egress_fqs = devm_kzalloc(dpa_oh_dev,
 		crt_fq_count * sizeof(struct qman_fq), GFP_KERNEL);
 	if (oh_config->egress_fqs == NULL) {
-		dev_err(dpa_oh_dev, "Can't allocate private data for "
-			"TX queues for OH node %s referenced from node %s!\n",
+		dev_err(dpa_oh_dev,
+			"Can't allocate private data for TX queues for OH node %s referenced from node %s!\n",
 			oh_node->full_name, dpa_oh_node->full_name);
 		_errno = -ENOMEM;
 		goto return_kfree;
@@ -428,9 +421,8 @@ oh_port_probe(struct platform_device *_of_dev)
 		ret = oh_fq_create(oh_config->egress_fqs + i,
 			crt_fqid_base + i, *channel_id, 3);
 		if (ret != 0) {
-			dev_err(dpa_oh_dev, "Unable to create TX frame "
-				"queue %d for OH node %s referenced "
-				"from node %s!\n",
+			dev_err(dpa_oh_dev,
+				"Unable to create TX frame queue %d for OH node %s referenced from node %s!\n",
 				crt_fqid_base + i, oh_node->full_name,
 				dpa_oh_node->full_name);
 			_errno = -EINVAL;
@@ -440,7 +432,8 @@ oh_port_probe(struct platform_device *_of_dev)
 
 config_port:
 	/* Get a handle to the fm_port so we can set
-	 * its configuration params */
+	 * its configuration params
+	 */
 	oh_config->oh_port = fm_port_bind(oh_dev);
 	if (oh_config->oh_port == NULL) {
 		dev_err(dpa_oh_dev, "NULL drvdata from fm port dev %s!\n",
@@ -454,7 +447,8 @@ config_port:
 			"fsl,bman-buffer-pools", &lenp);
 
 	if (bpool_handle == NULL) {
-		dev_info(dpa_oh_dev, "OH port %s has no buffer pool. Fragmentation will not be enabled\n",
+		dev_info(dpa_oh_dev,
+			 "OH port %s has no buffer pool. Fragmentation will not be enabled\n",
 			oh_node->full_name);
 		goto init_port;
 	}
@@ -608,7 +602,8 @@ static int __init __cold oh_port_load(void)
 {
 	int _errno;
 
-	printk(KERN_INFO KBUILD_MODNAME ": " OH_MOD_DESCRIPTION " (" VERSION ")\n");
+	printk(KERN_INFO KBUILD_MODNAME ": "
+	       OH_MOD_DESCRIPTION " (" VERSION ")\n");
 
 	_errno = platform_driver_register(&oh_port_driver);
 	if (_errno < 0) {
diff --git a/drivers/net/ethernet/freescale/dpa/offline_port.h b/drivers/net/ethernet/freescale/dpa/offline_port.h
index 8d80474..11532f1 100644
--- a/drivers/net/ethernet/freescale/dpa/offline_port.h
+++ b/drivers/net/ethernet/freescale/dpa/offline_port.h
@@ -1,5 +1,4 @@
-/*
- * Copyright 2011 Freescale Semiconductor Inc.
+/* Copyright 2011 Freescale Semiconductor Inc.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are met:
-- 
2.0.2

