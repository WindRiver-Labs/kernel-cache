From a238eba8e1b15629edc10b207a22e711878740e4 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Tue, 10 Feb 2015 17:31:31 +0800
Subject: [PATCH 3/6] i2c-mpc: Call irq_dispose_mapping() only when it is the
 last handler

Call irq_dispose_mapping() only when this is the last handler, else system
would report the below warnings during kexec.

remove_proc_entry: removing non-empty directory 'irq/39', leaking at least 'i2c-mpc'
------------[ cut here ]------------
WARNING: at fs/proc/generic.c:562
Modules linked in:
CPU: 0 PID: 721 Comm: kexec Not tainted 3.10.38-ltsi-WR6.0.0.0_standard #304
task: c0000000f9687700 ti: c0000000e350c000 task.ti: c0000000e350c000
NIP: c00000000024e4e4 LR: c00000000024e4e0 CTR: c0000000005eb150
REGS: c0000000e350f470 TRAP: 0700   Not tainted  (3.10.38-ltsi-WR6.0.0.0_standard)
MSR: 0000000080029000 <CE,EE,ME>  CR: 22088484  XER: 00000000
SOFTE: 1

GPR00: c00000000024e4e0 c0000000e350f6f0 c000000001258028 0000000000000054
GPR04: 0000000022088484 0000000000000055 c000000000cd0030 c000000007900620
GPR08: c000000000cc8028 0000000000000001 0000000050669a44 0000000000000020
GPR12: 00000000000001c3 c00000000ffff000 00000000100f0000 0000000000000001
GPR16: 0000000000000002 0000000000000000 0000000000000000 0000000000000000
GPR20: 0000000000000000 0000000000000000 ffffffffffffffff 0000000000000001
GPR24: 0000000000000002 c0000000013198c0 c0000000e350f820 c0000000e350f820
GPR28: c0000000f99d57f9 0000000000000002 c0000000f99d8330 c0000000f99d5780
NIP [c00000000024e4e4] .remove_proc_entry+0x244/0x250
LR [c00000000024e4e0] .remove_proc_entry+0x240/0x250
Call Trace:
[c0000000e350f6f0] [c00000000024e4e0] .remove_proc_entry+0x240/0x250 (unreliable)
[c0000000e350f7b0] [c000000000110e2c] .unregister_irq_proc+0xdc/0x100
[c0000000e350f850] [c0000000001084d4] .free_desc+0x54/0xc0
[c0000000e350f8e0] [c0000000001085ac] .irq_free_descs+0x6c/0xe0
[c0000000e350f970] [c00000000010fa88] .irq_dispose_mapping+0x88/0xa0
[c0000000e350f9f0] [c000000000794060] .fsl_i2c_shutdown+0x60/0xa0
[c0000000e350fa70] [c00000000056d20c] .platform_drv_shutdown+0x3c/0x60
[c0000000e350faf0] [c0000000005677e8] .device_shutdown+0x128/0x240
[c0000000e350fb90] [c000000000086e94] .kernel_restart_prepare+0x54/0x70
[c0000000e350fc10] [c0000000000e45ac] .kernel_kexec+0x9c/0xd0
[c0000000e350fc90] [c0000000000871e4] .SyS_reboot+0x244/0x2d0
[c0000000e350fe30] [c000000000000718] syscall_exit+0x0/0x8c
Instruction dump:
ebe1fff8 4e800020 e8bf0038 3c62ff90 3c82ff7f 3863e2b0 3884f5d8 38a50079
7f86e378 38e70079 487d6c6d 60000000 <0fe00000> 4bfffefc 60000000 7c0802a6
---[ end trace 69c303950a6303df ]---

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/i2c/busses/i2c-mpc.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/drivers/i2c/busses/i2c-mpc.c b/drivers/i2c/busses/i2c-mpc.c
index 41657dd..e754fcb 100644
--- a/drivers/i2c/busses/i2c-mpc.c
+++ b/drivers/i2c/busses/i2c-mpc.c
@@ -723,7 +723,11 @@ static int fsl_i2c_remove(struct platform_device *op)
 	if (i2c->irq)
 		free_irq(i2c->irq, i2c);
 
-	irq_dispose_mapping(i2c->irq);
+	/* Call irq_dispose_mapping() only when this is the last handler.
+	 * The better check point should be within irq_dispose_mapping().
+	*/
+	if (!irq_to_desc(i2c->irq)->action)
+		irq_dispose_mapping(i2c->irq);
 	iounmap(i2c->base);
 	kfree(i2c);
 	return 0;
-- 
1.7.5.4

