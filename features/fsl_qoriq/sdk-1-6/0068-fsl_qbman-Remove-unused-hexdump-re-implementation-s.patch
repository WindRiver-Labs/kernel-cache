From eb6128b9abcdd58d8ca444d167693aaa7dea1894 Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Fri, 17 Jan 2014 09:52:30 -0600
Subject: [PATCH 068/466] fsl_qbman: Remove unused *hexdump*()
 re-implementation(s)

If needed later, we should be using the *hex_dump*() & friends functions
the kernel is providing. See linux/printk.h and lib/hexdump.c

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: I5508d301ef8d1abfbf9f479ecdf18bc0e7ae47d5
Reviewed-on: http://git.am.freescale.net:8181/8097
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Haiying Wang <Haiying.Wang@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_qbman/bman_test.h |   47 ---------------------------------
 drivers/staging/fsl_qbman/qman_test.h |   39 ---------------------------
 2 files changed, 86 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_test.h b/drivers/staging/fsl_qbman/bman_test.h
index 568492e..fcd6505 100644
--- a/drivers/staging/fsl_qbman/bman_test.h
+++ b/drivers/staging/fsl_qbman/bman_test.h
@@ -42,50 +42,3 @@
 
 void bman_test_high(void);
 void bman_test_thresh(void);
-
-static inline void __hexdump(unsigned long start, unsigned long end,
-			unsigned long p, size_t sz, unsigned char *c)
-{
-	while (start < end) {
-		unsigned int pos = 0;
-		char buf[64];
-		int nl = 0;
-		pos += sprintf(buf + pos, "%08lx: ", start);
-		do {
-			if ((start < p) || (start >= (p + sz)))
-				pos += sprintf(buf + pos, "..");
-			else
-				pos += sprintf(buf + pos, "%02x", *(c++));
-			if (!(++start & 15)) {
-				buf[pos++] = '\n';
-				nl = 1;
-			} else {
-				nl = 0;
-				if (!(start & 1))
-					buf[pos++] = ' ';
-				if (!(start & 3))
-					buf[pos++] = ' ';
-			}
-		} while (start & 15);
-		if (!nl)
-			buf[pos++] = '\n';
-		buf[pos] = '\0';
-		pr_info("%s", buf);
-	}
-}
-static inline void hexdump(void *ptr, size_t sz)
-{
-	unsigned long p = (unsigned long)ptr;
-	unsigned long start = p & ~(unsigned long)15;
-	unsigned long end = (p + sz + 15) & ~(unsigned long)15;
-	unsigned char *c = ptr;
-	__hexdump(start, end, p, sz, c);
-}
-static inline void hexdump_by_cl(void *ptr, size_t sz)
-{
-	unsigned long p = (unsigned long)ptr;
-	unsigned long start = p & ~(unsigned long)63;
-	unsigned long end = (p + sz + 63) & ~(unsigned long)63;
-	unsigned char *c = ptr;
-	__hexdump(start, end, p, sz, c);
-}
diff --git a/drivers/staging/fsl_qbman/qman_test.h b/drivers/staging/fsl_qbman/qman_test.h
index 2b3cd21..49c5679 100644
--- a/drivers/staging/fsl_qbman/qman_test.h
+++ b/drivers/staging/fsl_qbman/qman_test.h
@@ -41,43 +41,4 @@
 
 void qman_test_hotpotato(void);
 void qman_test_high(void);
-void qman_test_fqrange(void);
 
-static inline void __hexdump(unsigned long start, unsigned long end,
-			unsigned long p, size_t sz, const unsigned char *c)
-{
-	while (start < end) {
-		unsigned int pos = 0;
-		char buf[64];
-		int nl = 0;
-		pos += sprintf(buf + pos, "%08lx: ", start);
-		do {
-			if ((start < p) || (start >= (p + sz)))
-				pos += sprintf(buf + pos, "..");
-			else
-				pos += sprintf(buf + pos, "%02x", *(c++));
-			if (!(++start & 15)) {
-				buf[pos++] = '\n';
-				nl = 1;
-			} else {
-				nl = 0;
-				if (!(start & 1))
-					buf[pos++] = ' ';
-				if (!(start & 3))
-					buf[pos++] = ' ';
-			}
-		} while (start & 15);
-		if (!nl)
-			buf[pos++] = '\n';
-		buf[pos] = '\0';
-		pr_info("%s", buf);
-	}
-}
-static inline void hexdump(const void *ptr, size_t sz)
-{
-	unsigned long p = (unsigned long)ptr;
-	unsigned long start = p & ~(unsigned long)15;
-	unsigned long end = (p + sz + 15) & ~(unsigned long)15;
-	const unsigned char *c = ptr;
-	__hexdump(start, end, p, sz, c);
-}
-- 
1.7.10.4

