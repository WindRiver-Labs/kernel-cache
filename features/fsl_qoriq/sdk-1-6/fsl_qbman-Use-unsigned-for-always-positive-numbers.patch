From 1c2d14eb6d774c5f00f12eae018687111d09b5bf Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Sat, 18 Jan 2014 05:34:07 -0600
Subject: [PATCH 0676/1089] fsl_qbman: Use 'unsigned' for always positive
 numbers

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

This fixes the following sparse warnings:

warning: incorrect type in argument 2 (different signedness)
   expected int *cpu
   got unsigned int *<noident>
warning: incorrect type in argument 2 (different signedness)
   expected unsigned int [usertype] *flags
   got int *<noident>

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: I06de94a56bf65f299a68275161445868f1fa526e
Reviewed-on: http://git.am.freescale.net:8181/8101
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Haiying Wang <Haiying.Wang@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
---
 drivers/staging/fsl_qbman/dpa_sys.h        | 2 +-
 drivers/staging/fsl_qbman/qman_test_high.c | 3 ++-
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_qbman/dpa_sys.h b/drivers/staging/fsl_qbman/dpa_sys.h
index f9734b3..7dd0640 100644
--- a/drivers/staging/fsl_qbman/dpa_sys.h
+++ b/drivers/staging/fsl_qbman/dpa_sys.h
@@ -248,7 +248,7 @@ static inline type *name##_find(struct dpa_rbtree *tree, u32 val) \
  * range of cpu indices, and each item optionally be prefixed by "s" to indicate
  * that the portal associated with that cpu should be shared. See bman_driver.c
  * for more specifics. */
-static int __parse_portals_cpu(const char **s, int *cpu)
+static int __parse_portals_cpu(const char **s, unsigned int *cpu)
 {
 	*cpu = 0;
 	if (!isdigit(**s))
diff --git a/drivers/staging/fsl_qbman/qman_test_high.c b/drivers/staging/fsl_qbman/qman_test_high.c
index bdd1843..45a459b 100644
--- a/drivers/staging/fsl_qbman/qman_test_high.c
+++ b/drivers/staging/fsl_qbman/qman_test_high.c
@@ -129,7 +129,8 @@ static void do_enqueues(struct qman_fq *fq)
 
 void qman_test_high(void)
 {
-	int flags, res;
+	unsigned int flags;
+	int res;
 	struct qman_fq *fq = &fq_base;
 
 	pr_info("qman_test_high starting\n");
-- 
2.0.2

