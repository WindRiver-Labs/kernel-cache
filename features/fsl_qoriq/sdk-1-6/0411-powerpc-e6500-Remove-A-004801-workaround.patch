From d36876193ddb69e40a8f5f07c5af0b2672282329 Mon Sep 17 00:00:00 2001
From: Scott Wood <scottwood@freescale.com>
Date: Tue, 25 Mar 2014 19:33:09 -0500
Subject: [PATCH 411/466] powerpc/e6500: Remove A-004801 workaround

The SDK no longer supports e6500 rev1.

This reverts commit "powerpc/e6500: extend TLB miss lock to invalidations"
and commit "powerpc/e6500: add kconfig option for erratum A-004801".

Signed-off-by: Scott Wood <scottwood@freescale.com>
Change-Id: I749f497cbb6b96d045434065b869b253f01d6575
Reviewed-on: http://git.am.freescale.net:8181/10272
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Kim Phillips <Kim.Phillips@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/powerpc/mm/tlb_nohash_low.S       |   68 --------------------------------
 arch/powerpc/platforms/Kconfig.cputype |   10 -----
 2 files changed, 78 deletions(-)

diff --git a/arch/powerpc/mm/tlb_nohash_low.S b/arch/powerpc/mm/tlb_nohash_low.S
index f0d8589..ba31b2c 100644
--- a/arch/powerpc/mm/tlb_nohash_low.S
+++ b/arch/powerpc/mm/tlb_nohash_low.S
@@ -319,56 +319,6 @@ ALT_MMU_FTR_SECTION_END_IFCLR(MMU_FTR_USE_TLBILX)
 1:	wrtee	r10
 	blr
 #elif defined(CONFIG_PPC_BOOK3E)
-
-#ifdef CONFIG_FSL_ERRATUM_A_004801
-.macro tlb_lock
-	mfspr   r0, SPRN_PVR
-	rlwinm r0, r0, 0, 24, 15
-	lis r9, PVR_VER_E6500
-	ori r9, r9, PVR_REV_E6500V1
-	cmpw r0, r9
-	bne 1f
-	ld	r7,PACA_TLB_PER_CORE_PTR(r13)
-	mtocrf	0x01,r7
-	addi	r8,r7,PACA_TLB_LOCK-1 /* -1 to compensate for low bit set */
-	bf	31,1f		/* no lock if TLB_PER_CORE_HAS_LOCK clear */
-2:	lbarx	r9,0,r8
-	cmpdi	r9,0
-	bne	3f
-	li	r9,1
-	stbcx.	r9,0,r8
-	bne	2b
-	.subsection 1
-3:	lbz	r9,0(r8)
-	cmpdi	r9,0
-	bne	3b
-	b	2b
-	.previous
-1:
-.endm
-
-.macro tlb_unlock
-	mfspr   r0, SPRN_PVR
-	rlwinm r0, r0, 0, 24, 15
-	lis r9, PVR_VER_E6500
-	ori r9, r9, PVR_REV_E6500V1
-	cmpw r0, r9
-	bne 1f
-	mtocrf	0x01,r7
-	bf	31,1f		/* no lock if TLB_PER_CORE_HAS_LOCK clear */
-	li	r9,0
-	isync
-	stb	r9,0(r8)
-1:
-.endm
-#else
-.macro tlb_lock
-.endm
-
-.macro tlb_unlock
-.endm
-#endif
-
 /*
  * New Book3E (>= 2.06) implementation
  *
@@ -379,10 +329,8 @@ _GLOBAL(_tlbil_pid)
 	slwi	r4,r3,MAS6_SPID_SHIFT
 	mfmsr	r10
 	wrteei	0
-	tlb_lock
 	mtspr	SPRN_MAS6,r4
 	PPC_TLBILX_PID(0,R0)
-	tlb_unlock
 	wrtee	r10
 	msync
 	isync
@@ -393,30 +341,22 @@ _GLOBAL(_tlbil_pid_noind)
 	mfmsr	r10
 	ori	r4,r4,MAS6_SIND
 	wrteei	0
-	tlb_lock
 	mtspr	SPRN_MAS6,r4
 	PPC_TLBILX_PID(0,R0)
-	tlb_unlock
 	wrtee	r10
 	msync
 	isync
 	blr
 
 _GLOBAL(_tlbil_all)
-	mfmsr	r10
-	wrteei	0
-	tlb_lock
 	PPC_TLBILX_ALL(0,R0)
 	msync
 	isync
-	tlb_unlock
-	wrtee	r10
 	blr
 
 _GLOBAL(_tlbil_va)
 	mfmsr	r10
 	wrteei	0
-	tlb_lock
 	cmpwi	cr0,r6,0
 	slwi	r4,r4,MAS6_SPID_SHIFT
 	rlwimi	r4,r5,MAS6_ISIZE_SHIFT,MAS6_ISIZE_MASK
@@ -426,7 +366,6 @@ _GLOBAL(_tlbil_va)
 	PPC_TLBILX_VA(0,R3)
 	msync
 	isync
-	tlb_unlock
 	wrtee	r10
 	blr
 
@@ -469,10 +408,6 @@ _GLOBAL(set_context)
  * Load TLBCAM[index] entry in to the L2 CAM MMU
  */
 _GLOBAL(loadcam_entry)
-	mfmsr	r10
-	wrteei	0
-	tlb_lock
-
 	LOAD_REG_ADDR(r4, TLBCAM)
 	mulli	r5,r3,TLBCAM_SIZE
 	add	r3,r5,r4
@@ -491,8 +426,5 @@ END_MMU_FTR_SECTION_IFSET(MMU_FTR_BIG_PHYS)
 	isync
 	tlbwe
 	isync
-
-	tlb_unlock
-	wrtee	r10
 	blr
 #endif
diff --git a/arch/powerpc/platforms/Kconfig.cputype b/arch/powerpc/platforms/Kconfig.cputype
index e44645b..aeccf40 100644
--- a/arch/powerpc/platforms/Kconfig.cputype
+++ b/arch/powerpc/platforms/Kconfig.cputype
@@ -165,16 +165,6 @@ config PPC_E500MC
 	  such as e5500/e6500), and must be disabled for running on
 	  e500v1 or e500v2.
 
-config FSL_ERRATUM_A_004801
-	bool "Work around erratum A-004801"
-	depends on PPC_E500MC
-	default n
-	help
-	  This works around erratum A-004801 by having invalidations
-	  use the same lock as TLB writes.
-
-	  Say Y if if you need to be able to run on rev1 silicon.
-
 config FSL_ERRATUM_A_005337
 	bool "Work around erratum A-005337 (no hw tablewalk)"
 	depends on PPC_E500MC
-- 
1.7.10.4

