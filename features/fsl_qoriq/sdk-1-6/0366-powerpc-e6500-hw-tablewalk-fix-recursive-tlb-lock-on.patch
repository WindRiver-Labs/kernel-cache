From 65afe4182c84da2fbaae9464919d1e35f1cf9c6b Mon Sep 17 00:00:00 2001
From: Scott Wood <scottwood@freescale.com>
Date: Thu, 22 May 2014 16:10:35 -0500
Subject: [PATCH 366/466] powerpc/e6500: hw tablewalk: fix recursive tlb lock
 on cpu 0

commit "powerpc/e6500: Make TLB lock recursive" introduced a bug whereby
cpu 0 uses the same value for "lock held" as is used to indicate that the
lock is free.  This means that cpu 1 can acquire the lock whenever it wants,
regardless of whether cpu 0 has it locked, which in turn means we can get
duplicate TLB entries.

Add one to the CPU value to ensure we do not use zero as a "lock held"
value.

Signed-off-by: Scott Wood <scottwood@freescale.com>
Change-Id: I8c8013adc2e153f19d780a3b202c993054feb47f
Reviewed-on: http://git.am.freescale.net:8181/12823
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Mihai Claudiu Caraman <mihai.caraman@freescale.com>
Reviewed-by: Richard Schmitt <richard.schmitt@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/powerpc/mm/tlb_low_64e.S |    1 +
 1 file changed, 1 insertion(+)

diff --git a/arch/powerpc/mm/tlb_low_64e.S b/arch/powerpc/mm/tlb_low_64e.S
index 1d787aa..d9d3f00 100644
--- a/arch/powerpc/mm/tlb_low_64e.S
+++ b/arch/powerpc/mm/tlb_low_64e.S
@@ -362,6 +362,7 @@ BEGIN_FTR_SECTION
 	lhz	r10,PACAPACAINDEX(r13)
 	cmpdi	r15,0
 	cmpdi	cr1,r15,1	/* set cr1.eq = 0 for non-recursive */
+	addi	r10,r10,1
 	bne	3f
 	stbcx.	r10,0,r11
 	bne	2b
-- 
1.7.10.4

