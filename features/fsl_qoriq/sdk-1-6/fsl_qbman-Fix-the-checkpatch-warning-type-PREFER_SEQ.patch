From 057e7a095146e00e7d4e662aaf3aeba83e31626f Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Wed, 8 Jan 2014 04:41:02 -0600
Subject: [PATCH 0646/1089] fsl_qbman: Fix the checkpatch warning type
 PREFER_SEQ_PUTS

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: I2727672f82bfcd3dfa4972c34c39e2be38978268
Reviewed-on: http://git.am.freescale.net:8181/7778
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Haiying Wang <Haiying.Wang@freescale.com>
Reviewed-by: Geoff Thorpe <Geoff.Thorpe@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
---
 drivers/staging/fsl_qbman/bman_debugfs.c |  2 +-
 drivers/staging/fsl_qbman/qman_debugfs.c | 30 +++++++++++++++---------------
 2 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_debugfs.c b/drivers/staging/fsl_qbman/bman_debugfs.c
index 2c3d771..9a5dd97 100644
--- a/drivers/staging/fsl_qbman/bman_debugfs.c
+++ b/drivers/staging/fsl_qbman/bman_debugfs.c
@@ -52,7 +52,7 @@ static int query_bp_state_show(struct seq_file *file, void *offset)
 		seq_printf(file, "Error %d\n", ret);
 		return 0;
 	}
-	seq_printf(file, "bp_id  free_buffers_avail  bp_depleted\n");
+	seq_puts(file, "bp_id  free_buffers_avail  bp_depleted\n");
 	for (i = 0; i < 2; i++) {
 		mask = 0x80000000;
 		for (j = 0; j < 32; j++) {
diff --git a/drivers/staging/fsl_qbman/qman_debugfs.c b/drivers/staging/fsl_qbman/qman_debugfs.c
index ede3d40..3a53e66 100644
--- a/drivers/staging/fsl_qbman/qman_debugfs.c
+++ b/drivers/staging/fsl_qbman/qman_debugfs.c
@@ -192,7 +192,7 @@ static void add_to_line_buffer(struct line_buffer_fq *line_buf, u32 fqid,
 	if (line_buf->buf_cnt == 8) {
 		/* Buffer is full, flush it */
 		if (line_buf->line_cnt != 0)
-			seq_printf(file, ",\n");
+			seq_puts(file, ",\n");
 		seq_printf(file, "0x%06x,0x%06x,0x%06x,0x%06x,0x%06x,"
 			"0x%06x,0x%06x,0x%06x",
 			line_buf->buf[0], line_buf->buf[1], line_buf->buf[2],
@@ -209,7 +209,7 @@ static void flush_line_buffer(struct line_buffer_fq *line_buf,
 	if (line_buf->buf_cnt) {
 		int y = 0;
 		if (line_buf->line_cnt != 0)
-			seq_printf(file, ",\n");
+			seq_puts(file, ",\n");
 		while (y != line_buf->buf_cnt) {
 			if (y+1 == line_buf->buf_cnt)
 				seq_printf(file, "0x%06x", line_buf->buf[y]);
@@ -220,7 +220,7 @@ static void flush_line_buffer(struct line_buffer_fq *line_buf,
 		line_buf->line_cnt++;
 	}
 	if (line_buf->line_cnt)
-		seq_printf(file, "\n");
+		seq_putc(file, '\n');
 }
 
 static struct dentry *dfs_root; /* debugfs root directory */
@@ -337,10 +337,10 @@ static int query_fq_fields_show(struct seq_file *file, void *offset)
 	seq_printf(file, " cgid: %u\n", fqd.cgid);
 
 	if ((fqd.fq_ctrl & QM_FQCTRL_MASK) == 0)
-		seq_printf(file, " fq_ctrl: None\n");
+		seq_puts(file, " fq_ctrl: None\n");
 	else {
 		i = 0;
-		seq_printf(file, " fq_ctrl:\n");
+		seq_puts(file, " fq_ctrl:\n");
 		while (fq_ctrl_text_list[i].txt != NULL) {
 			if ((fqd.fq_ctrl & QM_FQCTRL_MASK) &
 					fq_ctrl_text_list[i].mask)
@@ -360,9 +360,9 @@ static int query_fq_fields_show(struct seq_file *file, void *offset)
 	seq_printf(file, " ctx_a: 0x%llx\n", qm_fqd_stashing_get64(&fqd));
 	/* Any stashing configured */
 	if ((fqd.context_a.stashing.exclusive & 0x7) == 0)
-		seq_printf(file, " ctx_a_stash_exclusive: None\n");
+		seq_puts(file, " ctx_a_stash_exclusive: None\n");
 	else {
-		seq_printf(file, " ctx_a_stash_exclusive:\n");
+		seq_puts(file, " ctx_a_stash_exclusive:\n");
 		i = 0;
 		while (stashing_text_list[i].txt != NULL) {
 			if ((fqd.fq_ctrl & 0x7) & stashing_text_list[i].mask)
@@ -512,7 +512,7 @@ static int query_cgr_show(struct seq_file *file, void *offset)
 
 	seq_printf(file, " cscn_en: %u\n", cgrd.cgr.cscn_en);
 	if ((qman_ip_rev & 0xFF00) >= QMAN_REV30) {
-		seq_printf(file, " cscn_targ_dcp:\n");
+		seq_puts(file, " cscn_targ_dcp:\n");
 		mask = 0x80000000;
 		for (i = 0; i < 32; i++) {
 			if (cgrd.cgr.cscn_targ & mask)
@@ -521,7 +521,7 @@ static int query_cgr_show(struct seq_file *file, void *offset)
 			mask >>= 1;
 		}
 
-		seq_printf(file, " cscn_targ_swp:\n");
+		seq_puts(file, " cscn_targ_swp:\n");
 		for (i = 0; i < 4; i++) {
 			mask = 0x80000000;
 			for (j = 0; j < 32; j++) {
@@ -732,7 +732,7 @@ static int query_congestion_show(struct seq_file *file, void *offset)
 	ret = qman_query_congestion(&cs);
 	if (ret)
 		return ret;
-	seq_printf(file, "Query Congestion Result\n");
+	seq_puts(file, "Query Congestion Result\n");
 	for (i = 0; i < 8; i++) {
 		mask = 0x80000000;
 		for (j = 0; j < 32; j++) {
@@ -745,7 +745,7 @@ static int query_congestion_show(struct seq_file *file, void *offset)
 		}
 	}
 	if (!in_cong)
-		seq_printf(file, " All congestion groups not congested.\n");
+		seq_puts(file, " All congestion groups not congested.\n");
 	return 0;
 }
 
@@ -819,7 +819,7 @@ static int query_ccgr_show(struct seq_file *file, void *offset)
 
 	seq_printf(file, " cscn_en: %u\n", ((ccgr_query.cm_query.ctl >> 1) &
 						0x1));
-	seq_printf(file, " cscn_targ_dcp:\n");
+	seq_puts(file, " cscn_targ_dcp:\n");
 	mask = 0x80000000;
 	for (i = 0; i < 32; i++) {
 		if (ccgr_query.cm_query.cscn_targ_dcp & mask)
@@ -827,7 +827,7 @@ static int query_ccgr_show(struct seq_file *file, void *offset)
 			mask >>= 1;
 	}
 
-	seq_printf(file, " cscn_targ_swp:\n");
+	seq_puts(file, " cscn_targ_swp:\n");
 	for (i = 0; i < 4; i++) {
 		mask = 0x80000000;
 		for (j = 0; j < 32; j++) {
@@ -1154,7 +1154,7 @@ static int qman_fqd_summary_show(struct seq_file *file, void *offset)
 	ret = qman_fqd_non_prog_summary_show(file, offset);
 	if (ret)
 		return ret;
-	seq_printf(file, "-----------------------------------------\n");
+	seq_puts(file, "-----------------------------------------\n");
 	/* Display programmable fields */
 	ret = qman_fqd_prog_summary_show(file, offset);
 	if (ret)
@@ -1216,7 +1216,7 @@ static int qman_fqd_dest_wq_show(struct seq_file *file, void *offset)
 	}
 	flush_line_buffer(&line_buf, file);
 
-	seq_printf(file, "Summary of all FQD destination work queue values\n");
+	seq_puts(file, "Summary of all FQD destination work queue values\n");
 	for (i = 0; i < 0xFFFF; i++) {
 		if (wq[i])
 			seq_printf(file, "Channel: 0x%x WQ: 0x%x WQ_ID: 0x%x, "
-- 
2.0.2

