From 04276f71abf0b7df511e7f48df206ff199c05f26 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Wed, 1 Apr 2015 14:04:52 +0800
Subject: [PATCH 1/2] crypto: talitos: Don't perform DMA from stack

Function ahash_setkey() passes the address of a variable allocated onto
the stack to be used for DMA in function map_single_talitos_ptr().
This patch allocates that variable via kzalloc, else we would get
the below calltrace.

talitos ffe30000.crypto: DMA-API: device driver maps memory fromstack [addr=c626fbe8]
------------[ cut here ]------------
WARNING: at lib/dma-debug.c:950
Modules linked in:
CPU: 1 PID: 95 Comm: cryptomgr_test Not tainted 3.10.62-ltsi-WR6.0.0.0_standard #11
task: c62713c0 ti: c626e000 task.ti: c626e000
NIP: c04952a8 LR: c04952a8 CTR: c04e6ea0
REGS: c626f980 TRAP: 0700   Not tainted  (3.10.62-ltsi-WR6.0.0.0_standard)
MSR: 00029000 <CE,EE,ME>  CR: 22002084  XER: 20000000

GPR00: c04952a8 c626fa30 c62713c0 00000055 00000001 c004d668 00000000 00000000
GPR08: 0000ea7c c0b79934 00000000 000001ad 22002084 00000000 00000000 c62546a0
GPR16: c0bb6218 c0c01110 c0c00000 c0bef240 00000be8 c0bf0000 00000002 00000001
GPR24: 00000002 c626fbe8 00000010 c12afde0 efa79420 c0bfcfb8 ef9d2c10 c626fbe8
NIP [c04952a8] check_for_stack+0xc0/0x118
LR [c04952a8] check_for_stack+0xc0/0x118
Call Trace:
[c626fa30] [c04952a8] check_for_stack+0xc0/0x118 (unreliable)
[c626fa50] [c04956bc] debug_dma_map_page+0x168/0x1b4
[c626fa80] [c06bd1a8] map_single_talitos_ptr.constprop.8+0x15c/0x1e8
[c626fad0] [c06bdcb0] ahash_process_req+0x584/0x740
[c626fb50] [c06bb7f8] keyhash+0xb8/0x10c
[c626fbe0] [c06bb8b0] ahash_setkey+0x64/0x98
[c626fc40] [c0436214] test_hash+0x1d8/0x6dc
[c626fe10] [c043676c] alg_test_hash+0x54/0xbc
[c626fe30] [c0435e50] alg_test+0x90/0x230
[c626fea0] [c0432974] cryptomgr_test+0x58/0x60
[c626feb0] [c007ee2c] kthread+0xb4/0xb8
[c626ff40] [c0012070] ret_from_kernel_thread+0x5c/0x64
Instruction dump:
419e0070 7fc3f378 48063ab1 80be002c 7c641b78 2f850000 419e0068 3c60c0a4
7fe6fb78 3863b62c 4cc63182 483df879 <0fe00000> 813d0048 2f890000 409effac
---[ end trace a5225fe53094a7ee ]---

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/crypto/talitos.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/drivers/crypto/talitos.c b/drivers/crypto/talitos.c
index 9026f03..b71d078 100644
--- a/drivers/crypto/talitos.c
+++ b/drivers/crypto/talitos.c
@@ -2445,16 +2445,21 @@ static int ahash_setkey(struct crypto_ahash *tfm, const u8 *key,
 			crypto_tfm_alg_blocksize(crypto_ahash_tfm(tfm));
 	unsigned int digestsize = crypto_ahash_digestsize(tfm);
 	unsigned int keysize = keylen;
-	u8 hash[SHA512_DIGEST_SIZE];
+	u8 *hash = NULL;
 	int ret;
 
 	if (keylen <= blocksize)
 		memcpy(ctx->key, key, keysize);
 	else {
+		hash = kzalloc(sizeof(u8) * SHA512_DIGEST_SIZE, GFP_KERNEL |
+				     GFP_DMA);
+		if (!hash)
+			return -ENOMEM;
 		/* Must get the hash of the long key */
 		ret = keyhash(tfm, key, keylen, hash);
 
 		if (ret) {
+			kfree(hash);
 			crypto_ahash_set_flags(tfm, CRYPTO_TFM_RES_BAD_KEY_LEN);
 			return -EINVAL;
 		}
@@ -2465,6 +2470,7 @@ static int ahash_setkey(struct crypto_ahash *tfm, const u8 *key,
 
 	ctx->keylen = keysize;
 
+	kfree(hash);
 	return 0;
 }
 
-- 
1.7.5.4

