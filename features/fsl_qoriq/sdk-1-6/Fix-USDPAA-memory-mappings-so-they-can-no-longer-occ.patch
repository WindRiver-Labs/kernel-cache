From ec9f76150373168425b06516f65a4ec5e19ba6c7 Mon Sep 17 00:00:00 2001
From: Roy Pledge <Roy.Pledge@freescale.com>
Date: Wed, 24 Apr 2013 13:59:32 -0400
Subject: [PATCH 0223/1089] Fix USDPAA memory mappings so they can no longer
 occur at address 0 which confused any SW checking for NULL pointers

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Change-Id: Ic0ac5e61f1776ce8d4ddb622e401942ce2750705
Reviewed-on: http://git.am.freescale.net:8181/2062
Reviewed-by: Thorpe Geoff-R01361 <Geoff.Thorpe@freescale.com>
Reviewed-by: Ladouceur Jeffrey-R11498 <Jeffrey.Ladouceur@freescale.com>
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
---
 drivers/staging/fsl_qbman/fsl_usdpaa.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl_qbman/fsl_usdpaa.c b/drivers/staging/fsl_qbman/fsl_usdpaa.c
index ca37da3..1a7081c 100644
--- a/drivers/staging/fsl_qbman/fsl_usdpaa.c
+++ b/drivers/staging/fsl_qbman/fsl_usdpaa.c
@@ -876,7 +876,7 @@ out:
 	if (!ret) {
 		unsigned long longret;
 		down_write(&current->mm->mmap_sem);
-		longret = do_mmap_pgoff(fp, 0, map->frag->len, PROT_READ |
+		longret = do_mmap_pgoff(fp, PAGE_SIZE, map->frag->len, PROT_READ |
 			(i->flags & USDPAA_DMA_FLAG_RDONLY ? 0 : PROT_WRITE),
 			MAP_SHARED, map->frag->pfn_base);
 		up_write(&current->mm->mmap_sem);
@@ -1017,12 +1017,11 @@ static int portal_mmap(struct file *fp, struct resource *res, void **ptr)
 	unsigned long longret = 0;
 
 	down_write(&current->mm->mmap_sem);
-	do {
-		longret = do_mmap_pgoff(fp, 0, resource_size(res),
-					PROT_READ | PROT_WRITE, MAP_SHARED,
-					res->start >> PAGE_SHIFT);
-	} while (longret == 0);
+	longret = do_mmap_pgoff(fp, PAGE_SIZE, resource_size(res),
+				PROT_READ | PROT_WRITE, MAP_SHARED,
+				res->start >> PAGE_SHIFT);
 	up_write(&current->mm->mmap_sem);
+
 	if (longret & ~PAGE_MASK)
 		return (int)longret;
 
-- 
2.0.2

