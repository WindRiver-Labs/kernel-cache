From 56b0a3c93a884cfddc2edd37ee6c1259e70e9745 Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Fri, 17 Jan 2014 10:35:39 -0600
Subject: [PATCH 074/466] fsl_qman: Use vzalloc()

This fixes the following sparse warning:

warning: memset with byte count of 131072

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: I6050039b7158b660971efb7dc9d1a2e2e052c08e
Reviewed-on: http://git.am.freescale.net:8181/8103
Reviewed-by: Haiying Wang <Haiying.Wang@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_qbman/qman_debugfs.c |    3 +--
 drivers/staging/fsl_qbman/qman_high.c    |    3 +--
 2 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_debugfs.c b/drivers/staging/fsl_qbman/qman_debugfs.c
index d00f1c1..8156ef6 100644
--- a/drivers/staging/fsl_qbman/qman_debugfs.c
+++ b/drivers/staging/fsl_qbman/qman_debugfs.c
@@ -1187,10 +1187,9 @@ static int qman_fqd_dest_wq_show(struct seq_file *file, void *offset)
 	memset(&line_buf, 0, sizeof(line_buf));
 	/* use vmalloc : need to allocate large memory region and don't
 	 * require the memory to be physically contiguous. */
-	wq = vmalloc(sizeof(u16) * (0xFFFF+1));
+	wq = vzalloc(sizeof(u16) * (0xFFFF+1));
 	if (!wq)
 		return -ENOMEM;
-	memset(wq, 0, sizeof(u16) * (0xFFFF+1));
 
 	seq_printf(file, "List of fq ids with destination work queue id"
 			" = 0x%x\n", wq_id);
diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 076efda..dfc1bc9 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -236,12 +236,11 @@ int qman_setup_fq_lookup_table(size_t num_entries)
 {
 	num_entries++;
 	/* Allocate 1 more entry since the first entry is not used */
-	qman_fq_lookup_table = vmalloc((num_entries * sizeof(void *)));
+	qman_fq_lookup_table = vzalloc((num_entries * sizeof(void *)));
 	if (!qman_fq_lookup_table) {
 		pr_err("QMan: Could not allocate fq lookup table\n");
 		return -ENOMEM;
 	}
-	memset(qman_fq_lookup_table, 0, num_entries * sizeof(void *));
 	qman_fq_lookup_table_size = num_entries;
 	pr_info("QMan: Allocated lookup table at %p, entry count %lu\n",
 			qman_fq_lookup_table,
-- 
1.7.10.4

