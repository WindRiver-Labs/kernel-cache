From e336d0a35d6eea60427d3fbd7cc3d8efeac5b394 Mon Sep 17 00:00:00 2001
From: Sandeep Malik <Sandeep.Malik@freescale.com>
Date: Sun, 16 Feb 2014 08:48:50 +0530
Subject: [PATCH 113/466] dpa_ipsec: Patch to update the append_math_ldshift
 command.

This patch updates the append_math_ldshift command to
append_math_shld.

Signed-off-by: Sandeep Malik <Sandeep.Malik@freescale.com>
Change-Id: Icade31ac19f7ac8c370f9afdc14d542ac606feef
Reviewed-on: http://git.am.freescale.net:8181/8900
Reviewed-by: Horia Ioan Geanta Neag <horia.geanta@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/crypto/caam/desc_constr.h                |    2 +-
 drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c |    6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/crypto/caam/desc_constr.h b/drivers/crypto/caam/desc_constr.h
index d0034ce..1a532b7 100644
--- a/drivers/crypto/caam/desc_constr.h
+++ b/drivers/crypto/caam/desc_constr.h
@@ -322,7 +322,7 @@ append_cmd(desc, CMD_MATH | MATH_FUN_##op | MATH_DEST_##dest | \
 	APPEND_MATH(LSHIFT, desc, dest, src0, src1, len)
 #define append_math_rshift(desc, dest, src0, src1, len) \
 	APPEND_MATH(RSHIFT, desc, dest, src0, src1, len)
-#define append_math_ldshift(desc, dest, src0, src1, len) \
+#define append_math_shld(desc, dest, src0, src1, len) \
 	APPEND_MATH(SHLD, desc, dest, src0, src1, len)
 
 /* Exactly one source is IMM. Data is passed in as u32 value */
diff --git a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
index 16855a2..7e36be7 100644
--- a/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
+++ b/drivers/staging/fsl_dpa_offload/dpa_ipsec_desc.c
@@ -253,7 +253,7 @@ static inline void build_stats_descriptor_part(struct dpa_ipsec_sa *sa,
 	 * Perform 32-bit left shift of DEST and concatenate with left 32 bits
 	 * of SRC1 i.e MATH REG 1 = 0x00000001_00000000
 	 */
-	append_math_ldshift(desc, REG1, REG0, REG1, MATH_LEN_8BYTE);
+	append_math_shld(desc, REG1, REG0, REG1, MATH_LEN_8BYTE);
 
 	if (sa->sa_dir == DPA_IPSEC_INBOUND) {
 		/* MATH REG 2 = Sequence in length */
@@ -716,7 +716,7 @@ int built_encap_extra_material(struct dpa_ipsec_sa *sa,
 	 * Perform 32-bit left shift of DEST and concatenate with left 32 bits
 	 * of SRC1 i.e MATH REG 2 = 0x00bytecount_00000000
 	 */
-	append_math_ldshift(extra_cmds, REG2, REG0, REG2, MATH_LEN_8BYTE);
+	append_math_shld(extra_cmds, REG2, REG0, REG2, MATH_LEN_8BYTE);
 
 	/* MATH REG 0  = MATH REG 0 + MATH REG 2 */
 	append_math_add(extra_cmds, REG0, REG0, REG2, MATH_LEN_8BYTE);
@@ -822,7 +822,7 @@ void built_decap_extra_material(struct dpa_ipsec_sa *sa,
 	/* math: (math0 + 1)->math0 len=8 */
 	append_math_add(extra_cmds, REG0, REG0, ONE, MATH_LEN_8BYTE);
 
-	append_math_ldshift(extra_cmds, REG1, REG0, REG1, MATH_LEN_8BYTE);
+	append_math_shld(extra_cmds, REG1, REG0, REG1, MATH_LEN_8BYTE);
 
 	append_math_add(extra_cmds, REG0, REG0, REG1, MATH_LEN_8BYTE);
 
-- 
1.7.10.4

