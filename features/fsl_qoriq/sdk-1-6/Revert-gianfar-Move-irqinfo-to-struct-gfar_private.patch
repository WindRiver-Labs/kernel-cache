From 6a53de2c01fe1a0495caef7c6747ceb6b5609355 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Fri, 11 Jul 2014 13:46:30 +0800
Subject: [PATCH 05/50] Revert "gianfar: Move irqinfo to struct gfar_private"

This reverts commit 0ab43bd5f5fd630b066dc720409696cd38cad4cf.

SDK V1.6 has abandoned it.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>

Conflicts:
	drivers/net/ethernet/freescale/gianfar.c
	drivers/net/ethernet/freescale/gianfar.h
---
 drivers/net/ethernet/freescale/gianfar.c |   18 ++++++++----------
 drivers/net/ethernet/freescale/gianfar.h |    6 +++---
 2 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/drivers/net/ethernet/freescale/gianfar.c b/drivers/net/ethernet/freescale/gianfar.c
index ced00d4..c735165 100644
--- a/drivers/net/ethernet/freescale/gianfar.c
+++ b/drivers/net/ethernet/freescale/gianfar.c
@@ -620,7 +620,7 @@ static void free_gfar_dev(struct gfar_private *priv)
 	struct gfar_priv_recycle *rec = &priv->recycle;
 	int i, j;
 
-	for (i = 0; i < MAXGROUPS; i++) {
+	for (i = 0; i < priv->num_grps; i++)
 		struct gfar_priv_grp *grp = &priv->gfargrp[i];
 
 		kfree(grp->napi_rx);
@@ -629,8 +629,8 @@ static void free_gfar_dev(struct gfar_private *priv)
 		grp->napi_tx = NULL;
 
 		for (j = 0; j < GFAR_NUM_IRQS; j++) {
-			kfree(priv->irqinfo[i][j]);
-			priv->irqinfo[i][j] = NULL;
+			kfree(priv->gfargrp[i].irqinfo[j]);
+			priv->gfargrp[i].irqinfo[j] = NULL;
 		}
 	}
 
@@ -681,12 +681,10 @@ static int gfar_parse_group(struct device_node *np,
 		return -ENOMEM;
 
 	for (i = 0; i < GFAR_NUM_IRQS; i++) {
-		struct gfar_irqinfo *irqinfo = NULL;
-
-		irqinfo = kzalloc(sizeof(*irqinfo), GFP_KERNEL);
-		if (!irqinfo)
+		grp->irqinfo[i] = kzalloc(sizeof(struct gfar_irqinfo),
+					  GFP_KERNEL);
+		if (!grp->irqinfo[i])
 			return -ENOMEM;
-		priv->irqinfo[priv->num_grps][i] = irqinfo;
 	}
 
 	grp->regs = of_iomap(np, 0);
@@ -697,8 +695,6 @@ static int gfar_parse_group(struct device_node *np,
 	grp->napi_tx = napi_tx;
 	grp->napi_rx->grp = grp;
 	grp->napi_tx->grp = grp;
-	grp->grp_id = priv->num_grps;
-	grp->priv = priv;
 
 	gfar_irq(grp, TX)->irq = irq_of_parse_and_map(np, 0);
 
@@ -712,6 +708,8 @@ static int gfar_parse_group(struct device_node *np,
 			return -EINVAL;
 	}
 
+	grp->grp_id = priv->num_grps;
+	grp->priv = priv;
 	spin_lock_init(&grp->grplock);
 	if (priv->mode == MQ_MG_MODE) {
 		queue_mask = (u32 *)of_get_property(np, "fsl,rx-bit-map", NULL);
diff --git a/drivers/net/ethernet/freescale/gianfar.h b/drivers/net/ethernet/freescale/gianfar.h
index 347d916..10ccd14 100644
--- a/drivers/net/ethernet/freescale/gianfar.h
+++ b/drivers/net/ethernet/freescale/gianfar.h
@@ -1084,10 +1084,12 @@ struct gfar_priv_grp {
 	struct gfar_priv_napi_rx *napi_rx;
 	struct gfar_priv_napi_tx *napi_tx;
 	unsigned int grp_id;
+
+	struct gfar_irqinfo *irqinfo[GFAR_NUM_IRQS];
 };
 
 #define gfar_irq(grp, ID) \
-	((grp)->priv->irqinfo[(grp)->grp_id][GFAR_##ID])
+	((grp)->irqinfo[GFAR_##ID])
 
 enum gfar_errata {
 	GFAR_ERRATA_74		= 0x01,
@@ -1163,8 +1165,6 @@ struct gfar_private {
 	bool rx_pause;
 	bool tx_pause;
 
-	struct gfar_irqinfo *irqinfo[MAXGROUPS][GFAR_NUM_IRQS];
-
 	/* Bitfield update lock */
 	spinlock_t bflock;
 
-- 
1.7.5.4

