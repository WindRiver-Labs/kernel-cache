From ab202c1285fe40ef8d4a5924e50bd2481d1e2c8e Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Wed, 4 Dec 2013 23:44:19 +0200
Subject: [PATCH 0613/1089] dpaa_eth: Fix error labels of dpa priv probe

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Fix error labels of the driver's probing function.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/7093
Reviewed-by: Cristian Bercaru <cristian.bercaru@freescale.com>
Reviewed-by: Thomas Trefny <Tom.Trefny@freescale.com>
Reviewed-by: Ruxandra Ioana Radulescu <ruxandra.radulescu@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Change-Id: If0147daa767107bbc749f037108fc8c97415766e
Reviewed-on: http://git.am.freescale.net:8181/7355
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/7688
Reviewed-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
Tested-by: Madalin-Cristian Bucur <madalin.bucur@freescale.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c | 31 ++++++++++++---------------
 1 file changed, 14 insertions(+), 17 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index 69244f3..0537eab 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -879,12 +879,12 @@ dpaa_eth_priv_probe(struct platform_device *_of_dev)
 	err = dpaa_eth_cgr_init(priv);
 	if (err < 0) {
 		dev_err(dev, "Error initializing CGR\n");
-		goto cgr_init_failed;
+		goto tx_cgr_init_failed;
 	}
 	err = dpaa_eth_priv_ingress_cgr_init(priv);
 	if (err < 0) {
 		dev_err(dev, "Error initializing ingress CGR\n");
-		goto cgr_init_failed;
+		goto rx_cgr_init_failed;
 	}
 
 	/* Add the FQs to the interface, and make them active */
@@ -931,32 +931,29 @@ dpaa_eth_priv_probe(struct platform_device *_of_dev)
 
 	return 0;
 
-napi_add_failed:
 netdev_init_failed:
-	if (net_dev) {
-		dpa_private_napi_del(net_dev);
-		free_percpu(priv->percpu_priv);
-	}
+napi_add_failed:
+	dpa_private_napi_del(net_dev);
+	free_percpu(priv->percpu_priv);
 alloc_percpu_failed:
+	dpa_fq_free(dev, &priv->dpa_fq_list);
 fq_alloc_failed:
-	if (net_dev) {
-		dpa_fq_free(dev, &priv->dpa_fq_list);
-		qman_release_cgrid(priv->cgr_data.cgr.cgrid);
-		qman_delete_cgr(&priv->cgr_data.cgr);
-	}
-cgr_init_failed:
+	qman_release_cgrid(priv->ingress_cgr.cgrid);
+	qman_delete_cgr(&priv->ingress_cgr);
+rx_cgr_init_failed:
+	qman_release_cgrid(priv->cgr_data.cgr.cgrid);
+	qman_delete_cgr(&priv->cgr_data.cgr);
+tx_cgr_init_failed:
 add_channel_failed:
 get_channel_failed:
-	if (net_dev)
-		dpa_bp_free(priv, priv->dpa_bp);
+	dpa_bp_free(priv, priv->dpa_bp);
 bp_create_failed:
 fq_probe_failed:
 	devm_kfree(dev, buf_layout);
 alloc_failed:
 mac_probe_failed:
 	dev_set_drvdata(dev, NULL);
-	if (net_dev)
-		free_netdev(net_dev);
+	free_netdev(net_dev);
 alloc_etherdev_mq_failed:
 	if (atomic_read(&dpa_bp->refs) == 0)
 		devm_kfree(dev, dpa_bp);
-- 
2.0.2

