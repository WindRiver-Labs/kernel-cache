From 90b92e244be601b5ac54f38cc7fe26f3e66cba39 Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Mon, 20 Jan 2014 18:29:00 +0200
Subject: [PATCH 085/466] dpaa_eth: remove CONFIG_FSL_DPAA_TX_RECYCLE

The option to enable or disable Tx recycling for FMan v3
platforms was wrong - the recycling code is always assuming
that recycling is turned on and the config option only selected
the hw type. When running on FMan v3 with this option disabled
the non-FMan v3 recycling implementation was used erroneously.
Replacing the config option with the FMan v3 option.

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: Ide82bcf2679df6768ea926865d92daa5a1db0447
Reviewed-on: http://git.am.freescale.net:8181/8113
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Ruxandra Ioana Radulescu <ruxandra.radulescu@freescale.com>
(cherry picked from commit f7b794777e3fda0511a241763a98a35c0a1bc784)
Reviewed-on: http://git.am.freescale.net:8181/8461
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/Kconfig           |    6 ------
 drivers/net/ethernet/freescale/dpa/dpaa_eth.h        |    8 ++++----
 drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c |   10 +++++-----
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c  |    2 +-
 4 files changed, 10 insertions(+), 16 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/Kconfig b/drivers/net/ethernet/freescale/dpa/Kconfig
index 8634a50..64b61e7 100644
--- a/drivers/net/ethernet/freescale/dpa/Kconfig
+++ b/drivers/net/ethernet/freescale/dpa/Kconfig
@@ -2,7 +2,6 @@ menuconfig FSL_DPAA_ETH
 	bool "DPAA Ethernet"
 	depends on FSL_SOC && FSL_BMAN && FSL_QMAN && FSL_FMAN
 	select PHYLIB
-	select FSL_DPAA_TX_RECYCLE if FMAN_T4240
 	---help---
 	  Data Path Acceleration Architecture Ethernet driver,
 	  supporting the Freescale QorIQ chips.
@@ -40,11 +39,6 @@ config FSL_DPAA_ETH_JUMBO_FRAME
 	  significantly the driver's memory footprint and may even deplete
 	  the system memory.
 
-config FSL_DPAA_TX_RECYCLE
-	bool
-	depends on FSL_DPAA_ETH
-	depends on FMAN_T4240
-
 config FSL_DPAA_1588
 	tristate "IEEE 1588-compliant timestamping"
 	depends on FSL_DPAA_ETH
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
index 8350fca..3f3f2ce 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
@@ -238,7 +238,7 @@ enum dpa_fq_type {
 	FQ_TYPE_TX_CONFIRM,     /* Tx default Conf FQ (actually an Rx FQ) */
 	FQ_TYPE_TX_CONF_MQ,     /* Tx conf FQs (one for each Tx FQ) */
 	FQ_TYPE_TX_ERROR,       /* Tx Error FQs (these are actually Rx FQs) */
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 	FQ_TYPE_TX_RECYCLE,	/* Tx FQs for recycleable frames only */
 #endif
 };
@@ -359,7 +359,7 @@ struct dpa_priv_s {
 
 	uint16_t		 channel;	/* "fsl,qman-channel-id" */
 	struct list_head	 dpa_fq_list;
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 	struct qman_fq		*recycle_fqs[DPAA_ETH_TX_QUEUES];
 #endif
 
@@ -549,7 +549,7 @@ static inline int __hot dpa_xmit(struct dpa_priv_s *priv,
 	int err, i;
 	struct qman_fq *egress_fq;
 
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 	/* Choose egress fq based on whether we want
 	 * to recycle the frame or not
 	 */
@@ -616,7 +616,7 @@ static inline void _dpa_assign_wq(struct dpa_fq *fq)
 		break;
 	case FQ_TYPE_RX_DEFAULT:
 	case FQ_TYPE_TX:
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 	case FQ_TYPE_TX_RECYCLE:
 #endif
 	case FQ_TYPE_RX_PCD:
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index 725f608..b42725d 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -56,7 +56,7 @@ static const struct fqid_cell tx_confirm_fqids[] = {
 	{0, DPAA_ETH_TX_QUEUES}
 };
 
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 static const struct fqid_cell tx_recycle_fqids[] = {
 	{0, DPAA_ETH_TX_QUEUES}
 };
@@ -857,7 +857,7 @@ int dpa_fq_probe_mac(struct device *dev, struct list_head *list,
 				  FQ_TYPE_TX_CONF_MQ))
 			goto fq_alloc_failed;
 
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 		/* per-core Tx queues for recyclable frames (FManv3 only) */
 		if (!dpa_fq_alloc(dev, tx_recycle_fqids, list,
 				  FQ_TYPE_TX_RECYCLE))
@@ -1069,7 +1069,7 @@ void dpa_fq_setup(struct dpa_priv_s *priv, const dpa_fq_cbs_t *fq_cbs,
 	uint32_t pcd_fqid;
 	const cpumask_t *affine_cpus = qman_affine_cpus();
 	int egress_cnt = 0, conf_cnt = 0;
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 	int recycle_cnt = 0;
 #endif
 
@@ -1125,7 +1125,7 @@ void dpa_fq_setup(struct dpa_priv_s *priv, const dpa_fq_cbs_t *fq_cbs,
 			BUG_ON(!priv->mac_dev);
 			dpa_setup_ingress(priv, fq, &fq_cbs->tx_errq);
 			break;
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 		case FQ_TYPE_TX_RECYCLE:
 			BUG_ON(!priv->mac_dev);
 			dpa_setup_egress(priv, fq, tx_port,
@@ -1258,7 +1258,7 @@ int dpa_fq_init(struct dpa_fq *dpa_fq, bool td_enable)
 			}
 		}
 
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 		/* Configure the Tx queues for recycled frames, such that the
 		 * buffers are released by FMan and no confirmation is sent
 		 */
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c
index 02f540e..5eb5f62 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sysfs.c
@@ -101,7 +101,7 @@ static ssize_t dpaa_eth_show_fqids(struct device *dev,
 		case FQ_TYPE_TX:
 			str = "Tx";
 			break;
-#ifdef CONFIG_FSL_DPAA_TX_RECYCLE
+#ifdef CONFIG_FMAN_T4240
 		case FQ_TYPE_TX_RECYCLE:
 			str = "Tx(recycling)";
 			break;
-- 
1.7.10.4

