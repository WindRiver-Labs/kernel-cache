From 62877e30277e9db91838a61b81b18d212ad3e47f Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Wed, 25 Feb 2015 10:08:22 +0800
Subject: [PATCH 2/6] ethernet: fsl_dpa: check skb during xmit skb

We need to make sure skb and skb_end_pointer are not null, else sometimes
system would report the below calltrace and hang if we copy a large file
(about 4Gb) from board's memory.

kernel BUG at net/core/skbuff.c:2605!
Oops: Exception in kernel mode, sig: 5 [#1]
PREEMPT SMP NR_CPUS=2 CoreNet Generic
Modules linked in:
CPU: 0 PID: 0 Comm: swapper/0 Not tainted 3.10.62-ltsi-WR6.0.0.0_standard #1
task: c0000000f90c5500 ti: c0000000fffdc000 task.ti: c0000000f9194000
NIP: c0000000028a1348 LR: c0000000028a1160 CTR: 0000000000000010
REGS: c0000000fffdeec0 TRAP: 0700 Not tainted (3.10.62-ltsi-WR6.0.0.0_standard)
MSR: 0000000080029000 <CE,EE,ME> CR: 28024422 XER: 20000000
SOFTE: 1

GPR00: c0000000028a1160 c0000000fffdf140 c000000003269248 0000000000000000
GPR04: 0000000000000001 0000000000000040 0000000000000000 0000000000000001
GPR08: 0000000000000001 0000000000000001 00000000000002c0 00005c70000005a0
GPR12: 0000000028022428 c00000000ffff000 0000000025e84aaa 0000000000000000
GPR16: 00000000ffff7ef1 0000000025e84aaa 0000000000000002 0000000000000000
GPR20: 0000000000000001 00000000000005a8 0000000000000008 ffffffffffffffff
GPR24: 0000000000000008 00000000000005a8 00000000000005a8 c0000000f719cf00
GPR28: 0000000000000002 c0000000f7198200 0000000000000001 c0000000f7198800
NIP [c0000000028a1348] .skb_shift+0x358/0x510
LR [c0000000028a1160] .skb_shift+0x170/0x510
Call Trace:
[c0000000fffdf140] [c0000000028a1160] .skb_shift+0x170/0x510 (unreliable)
[c0000000fffdf210] [c0000000029122dc] .tcp_sacktag_walk+0x37c/0x5a0
[c0000000fffdf2f0] [c00000000291353c] .tcp_sacktag_write_queue+0x4fc/0xc10
[c0000000fffdf400] [c000000002917ddc] .tcp_ack+0x3ac/0x1000
[c0000000fffdf570] [c000000002919060] .tcp_rcv_established+0x140/0x740
[c0000000fffdf630] [c0000000029241bc] .tcp_v4_do_rcv+0x18c/0x440
[c0000000fffdf6e0] [c000000002927590] .tcp_v4_rcv+0x800/0x860
[c0000000fffdf7c0] [c0000000028f936c] .ip_local_deliver_finish+0x14c/0x330
[c0000000fffdf860] [c0000000028f9698] .ip_rcv_finish+0x148/0x3a0
[c0000000fffdf8f0] [c0000000028adae8] .__netif_receive_skb_core+0x818/0xb40
[c0000000fffdf9e0] [c0000000028afc98] .netif_receive_skb+0x48/0x110
[c0000000fffdfa80] [c0000000026f026c] ._dpa_rx+0x1cc/0x6f0
[c0000000fffdfba0] [c0000000026ee3f4] .priv_rx_default_dqrr+0xc4/0x230
[c0000000fffdfc50] [c000000002851d14] .qman_p_poll_dqrr+0x1d4/0x2e0
[c0000000fffdfd10] [c0000000026ee634] .dpaa_eth_poll+0x34/0x80
[c0000000fffdfda0] [c0000000028b024c] .net_rx_action+0x1cc/0x330
[c0000000fffdfe80] [c00000000207276c] .__do_softirq+0x19c/0x3d0
[c0000000fffdff90] [c000000002017054] .call_do_softirq+0x14/0x24
[c0000000f91978e0] [c000000002005fe8] .do_softirq+0x118/0x150
[c0000000f9197970] [c000000002072c54] .irq_exit+0x124/0x140
[c0000000f91979f0] [c000000002005ac4] .do_IRQ+0x184/0x370
[c0000000f9197aa0] [c00000000201b93c] exc_0x500_common+0xfc/0x100
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index 9852aea..fc9b40d 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -648,6 +648,8 @@ static int __hot skb_to_contig_fd(struct dpa_priv_s *priv,
 	unsigned char *buffer_start;
 
 #ifndef CONFIG_FSL_DPAA_TS
+	if (unlikely(!skb_end_pointer(skb)))
+		return -EINVAL;
 	/* Check recycling conditions; only if timestamp support is not
 	 * enabled, otherwise we need the fd back on tx confirmation
 	 */
@@ -846,6 +848,10 @@ int __hot dpa_tx(struct sk_buff *skb, struct net_device *net_dev)
 	const int queue_mapping = dpa_get_queue_mapping(skb);
 	const bool nonlinear = skb_is_nonlinear(skb);
 	int *countptr, offset = 0;
+
+	if (unlikely(!skb))
+		goto enomem;
+
 #if defined(CONFIG_FSL_FMAN_TEST)
 	/* If there is a Tx hook, run it. */
 	if (dpaa_eth_hooks.tx &&
-- 
1.7.5.4

