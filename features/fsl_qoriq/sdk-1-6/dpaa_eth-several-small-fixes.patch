From 7bfa5322839f4d1d20832f26195349966ce033a3 Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Tue, 4 Feb 2014 16:17:57 +0200
Subject: [PATCH 0702/1089] dpaa_eth: several small fixes

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Fixed several type mismatches reported by static analisys tools.

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: I33e8a74e5c362488262849929fef07383750189c
Reviewed-on: http://git.am.freescale.net:8181/8559
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Cristian-Constantin Sovaiala <Cristian.Sovaiala@freescale.com>
Reviewed-by: Ruxandra Ioana Radulescu <ruxandra.radulescu@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
(cherry picked from commit 3ed6acd336eedc15f2bd6f7c05638b5a145c70d2)
Reviewed-on: http://git.am.freescale.net:8181/8636
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c      | 10 +++++---
 drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c |  7 ++---
 .../net/ethernet/freescale/dpa/dpaa_eth_common.c   | 30 ++++++++++++----------
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c   |  4 +--
 drivers/net/ethernet/freescale/dpa/dpaa_ethtool.c  |  1 -
 5 files changed, 28 insertions(+), 24 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index 2ac070b..36b6b8d 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -829,7 +829,7 @@ static const struct of_device_id dpa_match[];
 static int
 dpaa_eth_priv_probe(struct platform_device *_of_dev)
 {
-	int err = 0, i;
+	int err = 0, i, channel;
 	struct device *dev;
 	struct device_node *dpa_node;
 	struct dpa_bp *dpa_bp;
@@ -930,13 +930,15 @@ dpaa_eth_priv_probe(struct platform_device *_of_dev)
 
 	priv->mac_dev = mac_dev;
 
-	priv->channel = dpa_get_channel();
+	channel = dpa_get_channel();
 
-	if (priv->channel < 0) {
-		err = priv->channel;
+	if (channel < 0) {
+		err = channel;
 		goto get_channel_failed;
 	}
 
+	priv->channel = (uint16_t)channel;
+
 	/* Start a thread that will walk the cpus with affine portals
 	 * and add this pool channel to each's dequeue mask.
 	 */
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c
index 95da2a3..bcadd55 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_base.c
@@ -113,7 +113,7 @@ dpa_bp_probe(struct platform_device *_of_dev, size_t *count)
 			dpa_bp = ERR_PTR(-EINVAL);
 			goto _return_of_node_put;
 		}
-		dpa_bp[i].bpid = *bpid;
+		dpa_bp[i].bpid = (uint8_t)*bpid;
 
 		bpool_cfg = of_get_property(dev_node, "fsl,bpool-ethernet-cfg",
 					&lenp);
@@ -122,7 +122,8 @@ dpa_bp_probe(struct platform_device *_of_dev, size_t *count)
 
 			dpa_bp[i].config_count =
 				(int)of_read_number(bpool_cfg, ns);
-			dpa_bp[i].size	= of_read_number(bpool_cfg + ns, ns);
+			dpa_bp[i].size	=
+				(size_t)of_read_number(bpool_cfg + ns, ns);
 			dpa_bp[i].paddr	=
 				of_read_number(bpool_cfg + 2 * ns, na);
 
@@ -177,7 +178,7 @@ int dpa_bp_shared_port_seed(struct dpa_bp *bp)
 
 		while (count) {
 			struct bm_buffer bufs[8];
-			int num_bufs = 0;
+			uint8_t num_bufs = 0;
 
 			do {
 				BUG_ON(addr > 0xffffffffffffull);
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
index a570d09..fd773a6 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_common.c
@@ -645,7 +645,7 @@ void dpa_set_buffers_layout(struct mac_device *mac_dev,
 	struct fm_port_params params;
 
 	/* Rx */
-	layout[RX].priv_data_size = DPA_RX_PRIV_DATA_SIZE;
+	layout[RX].priv_data_size = (uint16_t)DPA_RX_PRIV_DATA_SIZE;
 	layout[RX].parse_results = true;
 	layout[RX].hash_results = true;
 #if defined(CONFIG_FSL_DPAA_1588) || defined(CONFIG_FSL_DPAA_TS)
@@ -697,7 +697,7 @@ dpa_bp_alloc(struct dpa_bp *dpa_bp)
 		return -ENODEV;
 	}
 
-	dpa_bp->bpid = bman_get_params(dpa_bp->pool)->bpid;
+	dpa_bp->bpid = (uint8_t)bman_get_params(dpa_bp->pool)->bpid;
 
 	pdev = platform_device_register_simple("dpaa_eth_bpool",
 			dpa_bp->bpid, NULL, 0);
@@ -953,7 +953,7 @@ int dpa_get_channel()
 int dpaa_eth_add_channel(void *__arg)
 {
 	const cpumask_t *cpus = qman_affine_cpus();
-	u32 pool = QM_SDQCR_CHANNELS_POOL_CONV((u32)(unsigned long)__arg);
+	u32 pool = QM_SDQCR_CHANNELS_POOL_CONV((u16)(unsigned long)__arg);
 	int cpu;
 	struct qman_portal *portal;
 
@@ -1055,7 +1055,7 @@ static inline void dpa_setup_egress(const struct dpa_priv_s *priv,
 
 	if (port) {
 		fq->flags = QMAN_FQ_FLAG_TO_DCPORTAL;
-		fq->channel = fm_get_tx_port_channel(port);
+		fq->channel = (uint16_t)fm_get_tx_port_channel(port);
 	} else {
 		fq->flags = QMAN_FQ_FLAG_NO_MODIFY;
 	}
@@ -1065,7 +1065,7 @@ void dpa_fq_setup(struct dpa_priv_s *priv, const struct dpa_fq_cbs_t *fq_cbs,
 		struct fm_port *tx_port)
 {
 	struct dpa_fq *fq;
-	int portals[NR_CPUS];
+	uint16_t portals[NR_CPUS];
 	int cpu, portal_cnt = 0, num_portals = 0;
 	uint32_t pcd_fqid;
 	const cpumask_t *affine_cpus = qman_affine_cpus();
@@ -1233,8 +1233,9 @@ int dpa_fq_init(struct dpa_fq *dpa_fq, bool td_enable)
 			 */
 			initfq.we_mask |= QM_INITFQ_WE_OAC;
 			initfq.fqd.oac_init.oac = QM_OAC_CG;
-			initfq.fqd.oac_init.oal = min(sizeof(struct sk_buff) +
-				priv->tx_headroom, (size_t)FSL_QMAN_MAX_OAL);
+			initfq.fqd.oac_init.oal =
+				(signed char)(min(sizeof(struct sk_buff) +
+				priv->tx_headroom, (size_t)FSL_QMAN_MAX_OAL));
 		}
 
 		if (td_enable) {
@@ -1292,8 +1293,9 @@ int dpa_fq_init(struct dpa_fq *dpa_fq, bool td_enable)
 			 */
 			initfq.we_mask |= QM_INITFQ_WE_OAC;
 			initfq.fqd.oac_init.oac = QM_OAC_CG;
-			initfq.fqd.oac_init.oal = min(sizeof(struct sk_buff) +
-				priv->tx_headroom, (size_t)FSL_QMAN_MAX_OAL);
+			initfq.fqd.oac_init.oal =
+				(signed char)(min(sizeof(struct sk_buff) +
+				priv->tx_headroom, (size_t)FSL_QMAN_MAX_OAL));
 		}
 
 		/* Initialization common to all ingress queues */
@@ -1396,12 +1398,12 @@ dpaa_eth_init_rx_port(struct fm_port *port, struct dpa_bp *bp, size_t count,
 
 	memset(&rx_port_param, 0, sizeof(rx_port_param));
 	count = min(ARRAY_SIZE(rx_port_param.pool_param), count);
-	rx_port_param.num_pools = count;
+	rx_port_param.num_pools = (uint8_t)count;
 	for (i = 0; i < count; i++) {
 		if (i >= rx_port_param.num_pools)
 			break;
 		rx_port_param.pool_param[i].id = bp[i].bpid;
-		rx_port_param.pool_param[i].size = bp[i].size;
+		rx_port_param.pool_param[i].size = (uint16_t)bp[i].size;
 	}
 
 	dpaa_eth_init_port(rx, port, rx_port_param, errq->fqid, defq->fqid,
@@ -1448,7 +1450,7 @@ void dpaa_eth_init_ports(struct mac_device *mac_dev,
 void dpa_release_sgt(struct qm_sg_entry *sgt, struct bm_buffer *bmb)
 {
 	struct dpa_bp *dpa_bp;
-	int i = 0, j;
+	uint8_t i = 0, j;
 
 	do {
 		dpa_bp = dpa_bpid2pool(sgt[i].bpid);
@@ -1613,8 +1615,8 @@ int dpa_enable_tx_csum(struct dpa_priv_s *priv,
 	}
 
 	/* At index 0 is IPOffset_1 as defined in the Parse Results */
-	parse_result->ip_off[0] = skb_network_offset(skb);
-	parse_result->l4_off = skb_transport_offset(skb);
+	parse_result->ip_off[0] = (uint8_t)skb_network_offset(skb);
+	parse_result->l4_off = (uint8_t)skb_transport_offset(skb);
 
 	/* Enable L3 (and L4, if TCP or UDP) HW checksum. */
 	fd->cmd |= FM_FD_CMD_RPD | FM_FD_CMD_DTC;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index 239048b..fc764dc 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -96,7 +96,7 @@ int _dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp)
 	struct bm_buffer bmb[8];
 	void *new_buf;
 	dma_addr_t addr;
-	int i;
+	uint8_t i;
 	struct device *dev = dpa_bp->dev;
 	struct sk_buff *skb, **skbh;
 
@@ -701,7 +701,7 @@ static int __hot skb_to_contig_fd(struct dpa_priv_s *priv,
 			netdev_err(net_dev, "dma_map_single() failed\n");
 		return -EINVAL;
 	}
-	fd->addr_hi = upper_32_bits(addr);
+	fd->addr_hi = (uint8_t)upper_32_bits(addr);
 	fd->addr_lo = lower_32_bits(addr);
 
 	return 0;
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_ethtool.c b/drivers/net/ethernet/freescale/dpa/dpaa_ethtool.c
index ecc16a3..b9d9270 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_ethtool.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_ethtool.c
@@ -240,4 +240,3 @@ const struct ethtool_ops dpa_ethtool_ops = {
 	.get_ethtool_stats = NULL, /* TODO other stats, currently in debugfs */
 	.get_link = ethtool_op_get_link,
 };
-
-- 
2.0.2

