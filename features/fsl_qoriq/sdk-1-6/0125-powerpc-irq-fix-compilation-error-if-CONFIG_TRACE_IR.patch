From 5ca9f95e19ac950b9664f8c0c7b7520b5f5abf84 Mon Sep 17 00:00:00 2001
From: Alex Porosanu <alexandru.porosanu@freescale.com>
Date: Mon, 3 Feb 2014 15:04:56 +0200
Subject: [PATCH 125/466] powerpc/irq: fix compilation error if
 CONFIG_TRACE_IRQFLAGS is enabled

If CONFIG_TRACE_IRQFLAGS is set to 'y' in the kernel configuration file,
then compilation will fail with the following error message:

  CC      arch/powerpc/kernel/irq.o
arch/powerpc/kernel/irq.c: In function 'arch_local_irq_restore':
arch/powerpc/kernel/irq.c:233:2: error: 'else' without a previous 'if'
make[1]: *** [arch/powerpc/kernel/irq.o] Error 1
make: *** [arch/powerpc/kernel] Error 2

This is due to the fact that the __hard_irq_disable() macro used
if erratum A006198 is not enabled has a trailing semicolon. This leads
to having two statements instead of one in arch/powerpc/kernel/irq.c:

...
        if (unlikely(irq_happened != PACA_IRQ_HARD_DIS))
                __hard_irq_disable();
        else {
...

The 2nd semicolon (coming from the code above) signals the end of the
braceless "if", which leaves the subsequent "else" without a
corresponding "if", which is exactly what the compiler complains about.
This patch removes the trailing semicolon from the __hard_irq_disable()
macro.

Change-Id: If223ee6f85f3f0e0bd0883ccf3ea95768cb6e69e
Signed-off-by: Alex Porosanu <alexandru.porosanu@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/8547
Reviewed-by: Scott Wood <scottwood@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
Tested-by: Jose Rivera <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/powerpc/include/asm/hw_irq.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/powerpc/include/asm/hw_irq.h b/arch/powerpc/include/asm/hw_irq.h
index 29a5a7a..ad29f89 100644
--- a/arch/powerpc/include/asm/hw_irq.h
+++ b/arch/powerpc/include/asm/hw_irq.h
@@ -111,7 +111,7 @@ static inline void __hard_irq_disable(void)
 		     "memory", "lr");
 }
 #else
-#define __hard_irq_disable()	asm volatile("wrteei 0" : : : "memory");
+#define __hard_irq_disable()	asm volatile("wrteei 0" : : : "memory")
 #endif
 
 #else
-- 
1.7.10.4

