From a9b313ce4df23c90f68f4f32e2a97ef88a94d0b9 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Thu, 31 Jan 2013 11:28:14 +0200
Subject: [PATCH 0107/1089] dpaa_eth: Adjust congestion threshold for 1G ports

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Small-sized egress datagrams present a memory management problem,
because:
  1) They can be sent in very tight loops (no protocol-enforced rate
  limiting);
  2) They carry a fixed - but significant - overhead from skb shells and
  the netdevice's needed_headroom, which is difficult to take into
  account with the current DPAA support.

As such, high enqueueing rates of UDP datagrams sized 512 and below may
eventually lead to OOM, unless the Tx rate is throttled. CGRs are the
mechanism-of-choice to do that, but the value previously set for the
congestion threshold was too high and in some cases it wasn't hit before
memory was depleted.

Lowering the congestion threshold for 1Gbps ports to a value
experimentally found to be attained, such that transmission is stopped
before the system runs out of memory.

For datagram-based traffic sized 512 and above, this incurs a ~2%
bandwidth loss on 1Gbps ports. No penalty is expected on 10Gbps ports.

Change-Id: Iea0f24e7351347d0dfa063e7c8599902695674fd
Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
(cherry picked from commit 080ffbed2613987404ac16271a7fecdae0368421)
Reviewed-on: http://git.am.freescale.net:8181/1042
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
index b1d5153..717154e 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.c
@@ -94,7 +94,7 @@
  *	  threshold was too low to be effective);
  *	- running out of memory if the CS threshold is set too high.
  */
-#define DPA_CS_THRESHOLD_1G	0x10000000
+#define DPA_CS_THRESHOLD_1G	0x06000000
 /* Set a congestion threshold for MAC-less devices, too. */
 #define DPA_CS_THRESHOLD_MACLESS	0x10000000
 
-- 
2.0.2

