From 71ad63177759b1df8f5e9c4cf02ce35afefa0203 Mon Sep 17 00:00:00 2001
From: Haijun Zhang <Haijun.Zhang@freescale.com>
Date: Thu, 8 Aug 2013 09:22:25 +0800
Subject: [PATCH 001/466] Powerpc:eSDCH: Add workaround about clock glitch
 issue on b4xxx

A-003980: SDHC: Glitch is generated on the card clock with software reset or
clock divider change
Description: A glitch may occur on the SDHC card clock when the software sets
the RSTA bit (software reset) in the system control register. It can also be
generated by setting the clock divider value. The glitch produced can cause
the external card to switch to an unknown state. The occurrence is not
deterministic.

Workaround:
A simple workaround is to disable the SD card clock before the software reset,
and enable it when the module resumes normal operation.
The Host and the SD card are in a master-slave relationship. The Host provides
clock and control transfer across the interface. Therefore, any existing
operation is discarded when the Host controller is reset.
The recommended flow is as follows:
1. Software disable bit[3], SDCLKEN, of the System Control Register
2. Trigger software reset and/or set clock divider
3. Check bit[3], SDSTB, of the Present State Register for stable clock
4. Enable bit[3], SDCLKEN, of the System Control Register
Using the above method, the eSDHC cannot send command or transfer data when
there is a glitch in the clock line, and the glitch does not cause any issue.

Signed-off-by: Haijun Zhang <haijun.zhang@freescale.com>
Change-Id: I04ba0a6c107254b2f74f9c6ebd1f192d045448cf
Reviewed-on: http://git.am.freescale.net:8181/3858
Reviewed-by: Xie Xiaobo-R63061 <X.Xie@freescale.com>
Reviewed-by: Rivera Jose-B46482 <Jose.G.Rivera@freescale.com>
Tested-by: Rivera Jose-B46482 <Jose.G.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/mmc/host/sdhci-of-esdhc.c |   30 ++++++++++++++++++++++++------
 1 file changed, 24 insertions(+), 6 deletions(-)

diff --git a/drivers/mmc/host/sdhci-of-esdhc.c b/drivers/mmc/host/sdhci-of-esdhc.c
index cd51189..2f1cff3 100644
--- a/drivers/mmc/host/sdhci-of-esdhc.c
+++ b/drivers/mmc/host/sdhci-of-esdhc.c
@@ -136,13 +136,28 @@ static void esdhc_writeb(struct sdhci_host *host, u8 val, int reg)
 	if (reg == SDHCI_HOST_CONTROL)
 		val &= ~ESDHC_HOST_CONTROL_RES;
 
-	/* If we have this quirk just use reset cmd and reset data to
-	 * instead of reset all.
+	/*
+	 * If we have this quirk:
+	 * 1. Disabled the clock.
+	 * 2. Perform reset all command.
+	 * 3. Enable the clock.
 	 */
 	if ((reg == SDHCI_SOFTWARE_RESET) &&
 			(host->quirks2 & SDHCI_QUIRK2_BROKEN_RESET_ALL) &&
-			(val & SDHCI_RESET_ALL))
-		val = SDHCI_RESET_CMD | SDHCI_RESET_DATA;
+			(val & SDHCI_RESET_ALL)) {
+		u32 temp;
+
+		temp = esdhc_readl(host, ESDHC_SYSTEM_CONTROL);
+		temp &= ~ESDHC_CLOCK_CRDEN;
+		esdhc_writel(host, temp, ESDHC_SYSTEM_CONTROL);
+
+		sdhci_be32bs_writeb(host, val, reg);
+
+		temp |= ESDHC_CLOCK_CRDEN;
+		esdhc_writel(host, temp, ESDHC_SYSTEM_CONTROL);
+
+		return;
+	}
 
 	if (reg == SDHCI_POWER_CONTROL) {
 		/* eSDHC don't support gate off power */
@@ -372,11 +387,14 @@ static void esdhc_of_platform_init(struct sdhci_host *host)
 	 * Check for A-005055: A glitch is generated on the card clock
 	 * due to software reset or a clock change
 	 * Impact list:
-	 * T4240-R1.0 B4860-R1.0 P3041-R1.0 P3041-R2.0 P2041-R1.0
-	 * P2041-R1.1 P2041-R2.0 P1010-R1.0
+	 * T4240-R1.0 B4860-4420-R1.0-R2.0 P3041-R1.0 P3041-R2.0
+	 * P2041-R1.0 P2041-R1.1 P2041-R2.0 P1010-R1.0
 	 */
 	if (((SVR_SOC_VER(svr) == SVR_T4240) && (SVR_REV(svr) == 0x10)) ||
 		((SVR_SOC_VER(svr) == SVR_B4860) && (SVR_REV(svr) == 0x10)) ||
+		((SVR_SOC_VER(svr) == SVR_B4860) && (SVR_REV(svr) == 0x20)) ||
+		((SVR_SOC_VER(svr) == SVR_B4420) && (SVR_REV(svr) == 0x10)) ||
+		((SVR_SOC_VER(svr) == SVR_B4420) && (SVR_REV(svr) == 0x20)) ||
 		((SVR_SOC_VER(svr) == SVR_P1010) && (SVR_REV(svr) == 0x10)) ||
 		((SVR_SOC_VER(svr) == SVR_P3041) && (SVR_REV(svr) == 0x10)) ||
 		((SVR_SOC_VER(svr) == SVR_P3041) && (SVR_REV(svr) == 0x20)) ||
-- 
1.7.10.4

