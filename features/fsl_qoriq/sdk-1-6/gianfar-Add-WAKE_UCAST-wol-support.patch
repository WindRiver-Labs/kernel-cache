From ccd17d3bc450f5cd9114092446ffc687e05d7cdc Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@freescale.com>
Date: Thu, 3 Apr 2014 18:51:27 +0300
Subject: [PATCH 42/50] gianfar: Add WAKE_UCAST wol support

Add wake-on-lan by L2 unicast packets.
This feature is based on the "wake-on-filer" support.
A filer rule was added to match the incoming UCAST
packets during system suspend state and to trigger
the FGPI interupt to wakeup the system.

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Cc: Li Yang <leoli@freescale.com>
Cc: Zhao Chenhui <chenhui.zhao@freescale.com>

Change-Id: I04d4b4a9501ea2d8f75b3e0794c220ac95b0d679
Signed-off-by: Claudiu Manoil <claudiu.manoil@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/10731
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Yang Li <LeoLi@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/freescale/gianfar.c |   29 ++++++++++++++++++++++++++++-
 1 files changed, 28 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/freescale/gianfar.c b/drivers/net/ethernet/freescale/gianfar.c
index 18f1900..cb89f57 100644
--- a/drivers/net/ethernet/freescale/gianfar.c
+++ b/drivers/net/ethernet/freescale/gianfar.c
@@ -1498,7 +1498,7 @@ static int gfar_probe(struct platform_device *ofdev)
 
 	if ((priv->device_flags & FSL_GIANFAR_DEV_HAS_WAKE_ON_FILER) &&
 	     priv->rx_filer_enable)
-		priv->wol_supported |= 0;
+		priv->wol_supported |= GFAR_WOL_FILER_UCAST;
 
 	device_set_wakeup_capable(&ofdev->dev, priv->wol_supported);
 
@@ -1595,6 +1595,7 @@ static void gfar_filer_config_wol(struct gfar_private *priv)
 {
 	u32 rqfcr, rqfpr;
 	unsigned int i;
+	u8 rqfcr_queue;
 
 	__gfar_filer_disable(priv);
 
@@ -1604,6 +1605,32 @@ static void gfar_filer_config_wol(struct gfar_private *priv)
 	for (i = 0; i <= MAX_FILER_IDX; i++)
 		gfar_write_filer(priv, i, rqfcr, rqfpr);
 
+	i = 0;
+	/* select a rx queue in group 0 */
+	rqfcr_queue = (u8)find_first_bit(&priv->gfargrp[0].rx_bit_map,
+					 priv->num_rx_queues);
+
+	if (priv->wol_opts & GFAR_WOL_FILER_UCAST) {
+		/* Unicast packet, accept it */
+		struct net_device *ndev = priv->ndev;
+		u32 dest_mac_addr = (ndev->dev_addr[0] << 16) |
+				    (ndev->dev_addr[1] << 8) |
+				     ndev->dev_addr[2];
+
+		rqfcr = (rqfcr_queue << 10) | RQFCR_AND |
+			RQFCR_CMP_EXACT | RQFCR_PID_DAH;
+		rqfpr = dest_mac_addr;
+		gfar_write_filer(priv, i++, rqfcr, rqfpr);
+
+		dest_mac_addr = (ndev->dev_addr[3] << 16) |
+				(ndev->dev_addr[4] << 8) |
+				 ndev->dev_addr[5];
+		rqfcr = (rqfcr_queue << 10) | RQFCR_GPI |
+			RQFCR_CMP_EXACT | RQFCR_PID_DAL;
+		rqfpr = dest_mac_addr;
+		gfar_write_filer(priv, i++, rqfcr, rqfpr);
+	}
+
 	__gfar_filer_enable(priv);
 }
 
-- 
1.7.5.4

