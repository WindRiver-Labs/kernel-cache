From ac83905285d82c411f213010953bc6b0cd16e1df Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Thu, 24 Oct 2013 15:46:10 +0300
Subject: [PATCH 0588/1089] dpaa_eth: adapt to new kernel API

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

phy_connect(), phy_attach() flags parameter was removed.

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: Ib55029b667fa8f14c03d9aa81af1235274217d96
Reviewed-on: http://git.am.freescale.net:8181/6029
Reviewed-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/7585
Reviewed-by: Cristian Bercaru <cristian.bercaru@freescale.com>
---
 drivers/net/ethernet/freescale/dpa/mac-api.c | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/mac-api.c b/drivers/net/ethernet/freescale/dpa/mac-api.c
index 09889e4..6faeaa9 100644
--- a/drivers/net/ethernet/freescale/dpa/mac-api.c
+++ b/drivers/net/ethernet/freescale/dpa/mac-api.c
@@ -347,10 +347,10 @@ static int dtsec_init_phy(struct net_device *net_dev,
 
 	if (!mac_dev->phy_node)
 		phy_dev = phy_connect(net_dev, mac_dev->fixed_bus_id,
-				&adjust_link, 0, mac_dev->phy_if);
+				      &adjust_link, mac_dev->phy_if);
 	else
 		phy_dev = of_phy_connect(net_dev, mac_dev->phy_node,
-				&adjust_link, 0, mac_dev->phy_if);
+					 &adjust_link, 0, mac_dev->phy_if);
 	if (unlikely(phy_dev == NULL) || IS_ERR(phy_dev)) {
 		netdev_err(net_dev, "Could not connect to PHY %s\n",
 				mac_dev->phy_node ?
@@ -374,11 +374,11 @@ static int xgmac_init_phy(struct net_device *net_dev,
 	struct phy_device *phy_dev;
 
 	if (!mac_dev->phy_node)
-		phy_dev = phy_attach(net_dev, mac_dev->fixed_bus_id, 0,
-				mac_dev->phy_if);
+		phy_dev = phy_attach(net_dev, mac_dev->fixed_bus_id,
+				     mac_dev->phy_if);
 	else
 		phy_dev = of_phy_attach(net_dev, mac_dev->phy_node, 0,
-				mac_dev->phy_if);
+					mac_dev->phy_if);
 	if (unlikely(phy_dev == NULL) || IS_ERR(phy_dev)) {
 		netdev_err(net_dev, "Could not attach to PHY %s\n",
 				mac_dev->phy_node ?
@@ -406,14 +406,15 @@ static int memac_init_phy(struct net_device *net_dev,
 			return 0;
 		} else
 			phy_dev = of_phy_attach(net_dev, mac_dev->phy_node, 0,
-				mac_dev->phy_if);
+						mac_dev->phy_if);
 	} else {
 		if (!mac_dev->phy_node)
 			phy_dev = phy_connect(net_dev, mac_dev->fixed_bus_id,
-				&adjust_link, 0, mac_dev->phy_if);
+					      &adjust_link, mac_dev->phy_if);
 		else
 			phy_dev = of_phy_connect(net_dev, mac_dev->phy_node,
-				&adjust_link, 0, mac_dev->phy_if);
+						 &adjust_link, 0,
+						 mac_dev->phy_if);
 	}
 
 	if (unlikely(phy_dev == NULL) || IS_ERR(phy_dev)) {
-- 
2.0.2

