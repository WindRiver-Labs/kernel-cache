From 13080437e522956585b59c1a33ac6fa72231c120 Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@freescale.com>
Date: Fri, 7 Feb 2014 14:55:02 +0200
Subject: [PATCH 103/466] dpaa_eth: remove some dead code

Remove some dead code.

Signed-off-by: Madalin Bucur <madalin.bucur@freescale.com>
Change-Id: I32c0977cc390a36c8a45152f546884782622e4e4
Reviewed-on: http://git.am.freescale.net:8181/8652
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Cristian-Constantin Sovaiala <Cristian.Sovaiala@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/net/ethernet/freescale/dpa/dpaa_eth.h    |   29 ----------------------
 drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c |    4 +--
 2 files changed, 2 insertions(+), 31 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
index c5a7ac8..7c84c93 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth.h
@@ -167,14 +167,6 @@ struct dpa_buffer_layout_s {
 #define FM_L4_PARSE_RESULT_UDP	0x40
 /* L4 Type field: TCP */
 #define FM_L4_PARSE_RESULT_TCP	0x20
-/* This includes L4 checksum errors, but also other errors that the Hard Parser
- * can detect, such as invalid combinations of TCP control flags, or bad UDP
- * lengths.
- */
-#define FM_L4_PARSE_ERROR	0x10
-/* Check if the hardware parser has run */
-#define FM_L4_HXS_RUN		0xE0
-
 /* FD status field indicating whether the FM Parser has attempted to validate
  * the L4 csum of the frame.
  * Note that having this bit set doesn't necessarily imply that the checksum
@@ -185,18 +177,6 @@ struct dpa_buffer_layout_s {
 
 #define FM_FD_STAT_ERR_PHYSICAL	FM_PORT_FRM_ERR_PHYSICAL
 
-/* Check if the FMan Hardware Parser has run for L4 protocols.
- *
- * @parse_result_ptr must be of type (fm_prs_result_t *).
- */
-#define fm_l4_hxs_has_run(parse_result_ptr) \
-	((parse_result_ptr)->l4r & FM_L4_HXS_RUN)
-/* Iff the FMan Hardware Parser has run for L4 protocols, check error status.
- *
- * @parse_result_ptr must be of type (fm_prs_result_t *).
- */
-#define fm_l4_hxs_error(parse_result_ptr) \
-	((parse_result_ptr)->l4r & FM_L4_PARSE_ERROR)
 /* Check if the parsed frame was found to be a TCP segment.
  *
  * @parse_result_ptr must be of type (fm_prs_result_t *).
@@ -421,9 +401,6 @@ void __hot _dpa_process_parse_results(const fm_prs_result_t *parse_results,
 				      struct sk_buff *skb,
 				      int *use_gro);
 
-void dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp, int cpu_id);
-int _dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp);
-
 /* Turn on HW checksum computation for this outgoing frame.
  * If the current protocol is not something we support in this regard
  * (or if the stack has already computed the SW checksum), we do nothing.
@@ -507,12 +484,6 @@ static inline uint16_t dpa_get_headroom(struct dpa_buffer_layout_s *bl)
 	return bl->data_align ? ALIGN(headroom, bl->data_align) : headroom;
 }
 
-static inline uint16_t dpa_get_buffer_size(struct dpa_buffer_layout_s *bl,
-					   uint16_t data_size)
-{
-	return dpa_get_headroom(bl) + data_size;
-}
-
 int fm_mac_dump_regs(struct mac_device *h_dev, char *buf, int n);
 
 void dpaa_eth_sysfs_remove(struct device *dev);
diff --git a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
index eb1a813..f11f52e 100644
--- a/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/dpa/dpaa_eth_sg.c
@@ -93,7 +93,7 @@ static void dpa_bp_recycle_frag(struct dpa_bp *dpa_bp, unsigned long vaddr,
 	(*count_ptr)++;
 }
 
-int _dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp)
+static int _dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp)
 {
 	struct bm_buffer bmb[8];
 	void *new_buf;
@@ -160,7 +160,7 @@ netdev_alloc_failed:
 }
 
 /* Cold path wrapper over _dpa_bp_add_8_bufs(). */
-void dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp, int cpu)
+static void dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp, int cpu)
 {
 	int *count_ptr = per_cpu_ptr(dpa_bp->percpu_count, cpu);
 	*count_ptr += _dpa_bp_add_8_bufs(dpa_bp);
-- 
1.7.10.4

