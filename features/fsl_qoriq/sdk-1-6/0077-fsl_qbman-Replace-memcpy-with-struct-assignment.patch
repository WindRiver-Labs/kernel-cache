From 00ba9825e3b05b51c5c0c1ea6ca0d392f8d1e012 Mon Sep 17 00:00:00 2001
From: Emil Medve <Emilian.Medve@Freescale.com>
Date: Fri, 17 Jan 2014 10:35:39 -0600
Subject: [PATCH 077/466] fsl_qbman: Replace memcpy with struct assignment

This fixes the following coccinelle warning:

Replace memcpy with struct assignment

Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
Change-Id: I38f3bf57b18f8fbb8e295ae7b46a187e52491d20
Reviewed-on: http://git.am.freescale.net:8181/8106
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Haiying Wang <Haiying.Wang@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_qbman/fsl_usdpaa.c   |    4 ++--
 drivers/staging/fsl_qbman/qman_private.h |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_qbman/fsl_usdpaa.c b/drivers/staging/fsl_qbman/fsl_usdpaa.c
index 517730c..018f6a8 100644
--- a/drivers/staging/fsl_qbman/fsl_usdpaa.c
+++ b/drivers/staging/fsl_qbman/fsl_usdpaa.c
@@ -1186,7 +1186,7 @@ static long ioctl_portal_map(struct file *fp, struct ctx *ctx,
 
 	if (!mapping)
 		return -ENOMEM;
-	memcpy(&mapping->user, arg, sizeof(mapping->user));
+	mapping->user = *arg;
 	if (mapping->user.type == usdpaa_portal_qman) {
 		mapping->qportal =
 			qm_get_unused_portal_idx(mapping->user.index);
@@ -1224,7 +1224,7 @@ static long ioctl_portal_map(struct file *fp, struct ctx *ctx,
 			  &mapping->user.addr.cinh);
 	if (ret)
 		goto err_mmap_cinh;
-	memcpy(arg, &mapping->user, sizeof(mapping->user));
+	*arg = mapping->user;
 	return ret;
 
 err_mmap_cinh:
diff --git a/drivers/staging/fsl_qbman/qman_private.h b/drivers/staging/fsl_qbman/qman_private.h
index 3227a37..0b39b18 100644
--- a/drivers/staging/fsl_qbman/qman_private.h
+++ b/drivers/staging/fsl_qbman/qman_private.h
@@ -76,7 +76,7 @@ static inline int qman_cgrs_next(struct qman_cgrs *c, int num)
 static inline void qman_cgrs_cp(struct qman_cgrs *dest,
 				const struct qman_cgrs *src)
 {
-	memcpy(dest, src, sizeof(*dest));
+	*dest = *src;
 }
 static inline void qman_cgrs_and(struct qman_cgrs *dest,
 			const struct qman_cgrs *a, const struct qman_cgrs *b)
@@ -132,7 +132,7 @@ static inline int qman_ccgrs_next(struct qman_ccgrs *c, int num)
 static inline void qman_ccgrs_cp(struct qman_ccgrs *dest,
 					const struct qman_ccgrs *src)
 {
-	memcpy(dest, src, sizeof(*dest));
+	*dest = *src;
 }
 static inline void qman_ccgrs_and(struct qman_ccgrs *dest,
 			const struct qman_ccgrs *a, const struct qman_ccgrs *b)
-- 
1.7.10.4

