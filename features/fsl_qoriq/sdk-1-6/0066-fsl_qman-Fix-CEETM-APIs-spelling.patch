From b702a83c7828962a0c5346fde5fc608acb7afb32 Mon Sep 17 00:00:00 2001
From: Ganga Negi <ganga.negi@freescale.com>
Date: Fri, 27 Dec 2013 17:37:48 +0530
Subject: [PATCH 066/466] fsl_qman: Fix CEETM APIs spelling

Also fix some parameters type mismatch

Signed-off-by: Ganga Negi <ganga.negi@freescale.com>
Change-Id: I2f7b6951220732bec0791c1d7550ba78183d4882
Reviewed-on: http://git.am.freescale.net:8181/8083
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Emilian Medve <Emilian.Medve@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c |    4 ++--
 include/linux/fsl_qman.h              |   16 ++++++++--------
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index d9e8da8..ea98f56 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -4127,7 +4127,7 @@ int qman_ceetm_channel_set_group_er_eligibility(struct qm_ceetm_channel
 EXPORT_SYMBOL(qman_ceetm_channel_set_group_er_eligibility);
 
 int qman_ceetm_channel_set_cq_cr_eligibility(struct qm_ceetm_channel *channel,
-						unsigned int idx, u16 cre)
+						unsigned int idx, int cre)
 {
 	struct qm_mcc_ceetm_class_scheduler_config csch_config;
 	struct qm_mcr_ceetm_class_scheduler_query csch_query;
@@ -4161,7 +4161,7 @@ int qman_ceetm_channel_set_cq_cr_eligibility(struct qm_ceetm_channel *channel,
 EXPORT_SYMBOL(qman_ceetm_channel_set_cq_cr_eligibility);
 
 int qman_ceetm_channel_set_cq_er_eligibility(struct qm_ceetm_channel *channel,
-						unsigned int idx, u16 ere)
+						unsigned int idx, int ere)
 {
 	struct qm_mcc_ceetm_class_scheduler_config csch_config;
 	struct qm_mcr_ceetm_class_scheduler_query csch_query;
diff --git a/include/linux/fsl_qman.h b/include/linux/fsl_qman.h
index 48a4712..b1a54e7 100644
--- a/include/linux/fsl_qman.h
+++ b/include/linux/fsl_qman.h
@@ -2902,30 +2902,30 @@ int qman_ceetm_channel_get_group(struct qm_ceetm_channel *channel,
 
 /**
  * qman_ceetm_channel_set_group_cr_eligibility
- * qman_ceetm_channel_set_group_er_eligibility - Set channel group eligibitity
+ * qman_ceetm_channel_set_group_er_eligibility - Set channel group eligibility
  * @channel: the given channel object
  * @group_b: indicates whether there is group B in this channel.
  * @cre: the commit rate eligibility, 1 for enable, 0 for disable.
  *
- * Return zero for success, or -EINVAL if eligiblity setting fails.
+ * Return zero for success, or -EINVAL if eligibility setting fails.
 */
-int qman_ceetm_channel_set_group_cr_eligiblility(struct qm_ceetm_channel
+int qman_ceetm_channel_set_group_cr_eligibility(struct qm_ceetm_channel
 				*channel, int group_b, int cre);
-int qman_ceetm_channel_set_group_er_eligiblility(struct qm_ceetm_channel
+int qman_ceetm_channel_set_group_er_eligibility(struct qm_ceetm_channel
 				*channel, int group_b, int ere);
 
 /**
  * qman_ceetm_channel_set_cq_cr_eligibility
- * qman_ceetm_channel_set_cq_er_eligibility - Set channel cq eligibitity
+ * qman_ceetm_channel_set_cq_er_eligibility - Set channel cq eligibility
  * @channel: the given channel object
  * @idx: is from 0 to 7 (representing CQ0 to CQ7).
  * @cre: the commit rate eligibility, 1 for enable, 0 for disable.
  *
- * Return zero for success, or -EINVAL if eligiblity setting fails.
+ * Return zero for success, or -EINVAL if eligibility setting fails.
 */
-int qman_ceetm_channel_set_cq_cr_eligiblility(struct qm_ceetm_channel *channel,
+int qman_ceetm_channel_set_cq_cr_eligibility(struct qm_ceetm_channel *channel,
 					unsigned int idx, int cre);
-int qman_ceetm_channel_set_cq_er_eligiblility(struct qm_ceetm_channel *channel,
+int qman_ceetm_channel_set_cq_er_eligibility(struct qm_ceetm_channel *channel,
 					unsigned int idx, int ere);
 
 	/* --------------------- */
-- 
1.7.10.4

