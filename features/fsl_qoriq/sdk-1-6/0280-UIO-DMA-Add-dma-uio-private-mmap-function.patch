From d4c90896617c3851ac9ef7f7387b23c1871aa971 Mon Sep 17 00:00:00 2001
From: Liu Gang <gang.liu@freescale.com>
Date: Thu, 17 Apr 2014 18:19:16 +0800
Subject: [PATCH 280/466] UIO/DMA: Add dma uio private mmap function

UIO mmap cannot map an unaligned page address, and
the PowerPC DMA register space has an unaligned
page base address. So the mmap for DMA register
address should be supported via a private function.

Signed-off-by: Liu Gang <gang.liu@freescale.com>
Signed-off-by: Minghuan Lian <Minghuan.Lian@freescale.com>
Change-Id: Ic5672dd4f86031fab34830d47e231fb1c46b2070
Reviewed-on: http://git.am.freescale.net:8181/11081
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Mingkai Hu <Mingkai.Hu@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/uio/fsl_dma_uio.c |   28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/drivers/uio/fsl_dma_uio.c b/drivers/uio/fsl_dma_uio.c
index bab3d90..2516ca3 100644
--- a/drivers/uio/fsl_dma_uio.c
+++ b/drivers/uio/fsl_dma_uio.c
@@ -23,6 +23,7 @@
 #include <linux/uio_driver.h>
 #include <linux/list.h>
 #include <linux/io.h>
+#include <linux/mm.h>
 
 static const char dma_uio_version[] = "DMA UIO driver v1.0";
 
@@ -80,6 +81,32 @@ static irqreturn_t dma_uio_irq_handler(int irq, struct uio_info *dev_info)
 	return IRQ_HANDLED;
 }
 
+static int dma_uio_mmap(struct uio_info *info, struct vm_area_struct *vma)
+{
+	int mi;
+	struct uio_mem *mem;
+
+	if (vma->vm_pgoff < MAX_UIO_MAPS) {
+		if (info->mem[vma->vm_pgoff].size == 0)
+			return -EINVAL;
+		mi = (int)vma->vm_pgoff;
+	} else
+		return -EINVAL;
+
+	mem = info->mem + mi;
+
+	if (vma->vm_end - vma->vm_start > mem->size)
+		return -EINVAL;
+
+	vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);
+
+	return remap_pfn_range(vma,
+			       vma->vm_start,
+			       mem->addr >> PAGE_SHIFT,
+			       vma->vm_end - vma->vm_start,
+			       vma->vm_page_prot);
+}
+
 static int dma_chan_uio_setup(struct dma_chan *dma_ch)
 {
 	int ret;
@@ -110,6 +137,7 @@ static int dma_chan_uio_setup(struct dma_chan *dma_ch)
 	info->uio.handler = dma_uio_irq_handler;
 	info->uio.open = dma_uio_open;
 	info->uio.release = dma_uio_release;
+	info->uio.mmap = dma_uio_mmap;
 	info->uio.priv = dma_ch;
 	ret = uio_register_device(dma_ch->dev, &info->uio);
 	if (ret) {
-- 
1.7.10.4

