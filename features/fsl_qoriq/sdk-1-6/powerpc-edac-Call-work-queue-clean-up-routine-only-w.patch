From 83d20b43115cc2a52f93c3e2324a5e0d1ea7b1a6 Mon Sep 17 00:00:00 2001
From: Varun Sethi <Varun.Sethi@freescale.com>
Date: Mon, 11 Jun 2012 14:21:19 +0000
Subject: [PATCH 0035/1089] powerpc/edac: Call work queue clean up routine only
 when edac_op_state is set to polling.

For pci errors we set the edac op state to "interrupt" and thus do not setup the work queue. While performing
edac pci device cleanup, work queue cleanup should only be performed if the op state is set to polling.

Signed-off-by: Varun Sethi <Varun.Sethi@freescale.com>
Change-Id: Iee10865f671dc5d177a5a56cfc782673ef7ebd2f
Reviewed-on: http://git.am.freescale.net:8181/555
Reviewed-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
Tested-by: Fleming Andrew-AFLEMING <AFLEMING@freescale.com>
---
 drivers/edac/edac_pci.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/drivers/edac/edac_pci.c b/drivers/edac/edac_pci.c
index 2cf44b4d..a3893e3 100644
--- a/drivers/edac/edac_pci.c
+++ b/drivers/edac/edac_pci.c
@@ -390,6 +390,7 @@ EXPORT_SYMBOL_GPL(edac_pci_add_device);
 struct edac_pci_ctl_info *edac_pci_del_device(struct device *dev)
 {
 	struct edac_pci_ctl_info *pci;
+	int op_state;
 
 	edac_dbg(0, "\n");
 
@@ -404,6 +405,8 @@ struct edac_pci_ctl_info *edac_pci_del_device(struct device *dev)
 		return NULL;
 	}
 
+	op_state = pci->op_state;
+
 	pci->op_state = OP_OFFLINE;
 
 	del_edac_pci_from_global_list(pci);
@@ -411,7 +414,8 @@ struct edac_pci_ctl_info *edac_pci_del_device(struct device *dev)
 	mutex_unlock(&edac_pci_ctls_mutex);
 
 	/* stop the workq timer */
-	edac_pci_workq_teardown(pci);
+	if (op_state == OP_RUNNING_POLL)
+		edac_pci_workq_teardown(pci);
 
 	edac_printk(KERN_INFO, EDAC_PCI,
 		"Removed device %d for %s %s: DEV %s\n",
-- 
2.0.2

