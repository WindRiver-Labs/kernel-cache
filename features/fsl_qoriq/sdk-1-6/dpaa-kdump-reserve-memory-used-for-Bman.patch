From 65ee250f1476ff3d1f38ca8228d127c27ec32094 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Fri, 7 Dec 2012 13:55:51 +0800
Subject: [PATCH 19/43] dpaa/kdump: reserve memory used for Bman

Bman memory must be reserved to avoid it being reallocated, since
it cannot be cleaned from the boot kernel.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 drivers/staging/fsl_qbman/bman_config.c |   23 +++++++++++++++++++++++
 1 files changed, 23 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_config.c b/drivers/staging/fsl_qbman/bman_config.c
index 07de765..be3d932 100644
--- a/drivers/staging/fsl_qbman/bman_config.c
+++ b/drivers/staging/fsl_qbman/bman_config.c
@@ -224,11 +224,29 @@ static int bm_is_initalized(struct bman *bm)
 {
 	return bm_in(FBPR_BAR);
 }
+static void bm_reserve_memory(struct bman *bm)
+{
+	u64 upper_ba = 0;
+	u32 lower_ba = 0;
+	u64 addr = 0;
+	u32 exp = 0;
+	u32 size = 0;
+
+	upper_ba = bm_in(FBPR_BARE);
+	lower_ba = bm_in(FBPR_BAR);
+	exp = (bm_in(FBPR_AR) & 0x3f);
+	size = 2 << exp;
+	addr = (u64)((upper_ba << 31) | lower_ba);
+	memblock_reserve(addr, size);
+}
 #else
 static int bm_is_initalized(struct bman *bm)
 {
 	return 0;
 }
+static void bm_reserve_memory(struct bman *bm)
+{
+}
 #endif
 
 static void bm_set_memory(struct bman *bm, u64 ba, int prio, u32 size)
@@ -361,6 +379,11 @@ static int __init fsl_bman_init(struct device_node *node)
 		pr_warn("unknown Bman version, default to rev1.0\n");
 	}
 
+	/* Unfortunately we have to reserve those memory used for Bman
+	 * since currently we can't clean these usage from boot kernel.
+	 */
+	bm_reserve_memory(bm);
+
 	if (standby) {
 		pr_info("  -> in standby mode\n");
 		return 0;
-- 
1.7.5.4

