From dc7685cd2fb83731e9a02313edc3156014ffc601 Mon Sep 17 00:00:00 2001
From: Alex Porosanu <alexandru.porosanu@freescale.com>
Date: Mon, 12 May 2014 18:24:00 +0300
Subject: [PATCH 461/466] crypto: caam/qi - fix handling of
 create_caam_req_fq(...) error

When create_caam_req_fq(...) returns an error, it does so by
using the ERR_PTR macro, due to its return type.
Thus the return of this function needs to be checked by using
the corresponding IS_ERR_* class of macros, and not by
a "if(!ret)" construct.
This patch adds the necessary macro calls in all the locations
where create_caam_req_fq(...) is called.

Change-Id: I41283fc1f728d959099351cc36ba07ba377a1848
Signed-off-by: Alex Porosanu <alexandru.porosanu@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/12066
Reviewed-by: Mircea Pop <mircea.pop@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Horia Ioan Geanta Neag <horia.geanta@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/crypto/caam/qi.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/crypto/caam/qi.c b/drivers/crypto/caam/qi.c
index 40cc64c..2db883c 100644
--- a/drivers/crypto/caam/qi.c
+++ b/drivers/crypto/caam/qi.c
@@ -436,7 +436,7 @@ int caam_drv_ctx_update(struct caam_drv_ctx *drv_ctx, u32 *sh_desc)
 	/* Create a new req FQ in parked state */
 	new_fq = create_caam_req_fq(drv_ctx->qidev, drv_ctx->rsp_fq,
 				    drv_ctx->context_a, 0);
-	if (!new_fq) {
+	if (unlikely(IS_ERR_OR_NULL(new_fq))) {
 		dev_err(qidev, "FQ allocation for shdesc update failed\n");
 		return PTR_ERR(new_fq);
 	}
@@ -566,7 +566,7 @@ struct caam_drv_ctx *caam_drv_ctx_init(struct device *qidev,
 	/*Attach request FQ*/
 	drv_ctx->req_fq = create_caam_req_fq(qidev, rsp_fq,
 					     hwdesc, QMAN_INITFQ_FLAG_SCHED);
-	if (!drv_ctx->req_fq) {
+	if (unlikely(IS_ERR_OR_NULL(drv_ctx->req_fq))) {
 		dev_err(qidev, "create_caam_req_fq failed\n");
 		dma_unmap_single(qidev, hwdesc, size, DMA_BIDIRECTIONAL);
 		kfree(drv_ctx);
-- 
1.7.10.4

