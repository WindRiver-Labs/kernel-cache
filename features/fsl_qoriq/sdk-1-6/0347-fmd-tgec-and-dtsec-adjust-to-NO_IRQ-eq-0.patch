From b4d485793d732fc0d40907cc5d3bbb0eff44c6e7 Mon Sep 17 00:00:00 2001
From: Mandy Lavi <mandy.lavi@freescale.com>
Date: Thu, 15 May 2014 16:58:51 +0300
Subject: [PATCH 347/466] fmd: tgec and dtsec adjust to NO_IRQ eq 0

tgec and dtsec adjust to NO_IRQ eq 0.

Change-Id: Ided02763bb84061238a52d00bc3976a6681c5bfc
Signed-off-by: Mandy Lavi <mandy.lavi@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/12455
Reviewed-by: Nir Erez <nir.erez@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
Tested-by: Jose Rivera <German.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 .../net/ethernet/freescale/fman/Peripherals/FM/MAC/dtsec.c    |    3 +--
 drivers/net/ethernet/freescale/fman/Peripherals/FM/MAC/tgec.c |    9 +++------
 2 files changed, 4 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fman/Peripherals/FM/MAC/dtsec.c b/drivers/net/ethernet/freescale/fman/Peripherals/FM/MAC/dtsec.c
index 42c8e78..e8cc70a 100644
--- a/drivers/net/ethernet/freescale/fman/Peripherals/FM/MAC/dtsec.c
+++ b/drivers/net/ethernet/freescale/fman/Peripherals/FM/MAC/dtsec.c
@@ -364,8 +364,7 @@ static void Dtsec1588Isr(t_Handle h_Dtsec)
 
 static void FreeInitResources(t_Dtsec *p_Dtsec)
 {
-   /*TODO - need to ask why with mdioIrq != 0*/
-    if ((p_Dtsec->mdioIrq != 0) && (p_Dtsec->mdioIrq != NO_IRQ))
+    if (p_Dtsec->mdioIrq != NO_IRQ)
     {
         XX_DisableIntr(p_Dtsec->mdioIrq);
         XX_FreeIntr(p_Dtsec->mdioIrq);
diff --git a/drivers/net/ethernet/freescale/fman/Peripherals/FM/MAC/tgec.c b/drivers/net/ethernet/freescale/fman/Peripherals/FM/MAC/tgec.c
index 8089b46..91f4568 100644
--- a/drivers/net/ethernet/freescale/fman/Peripherals/FM/MAC/tgec.c
+++ b/drivers/net/ethernet/freescale/fman/Peripherals/FM/MAC/tgec.c
@@ -160,13 +160,12 @@ static void TgecException(t_Handle h_Tgec)
 
 static void FreeInitResources(t_Tgec *p_Tgec)
 {
-    if ((p_Tgec->mdioIrq != 0) && (p_Tgec->mdioIrq != NO_IRQ))
+    if (p_Tgec->mdioIrq != NO_IRQ)
     {
         XX_DisableIntr(p_Tgec->mdioIrq);
         XX_FreeIntr(p_Tgec->mdioIrq);
     }
-    else if (p_Tgec->mdioIrq == 0)
-        REPORT_ERROR(MINOR, E_NOT_SUPPORTED, NO_MSG);
+
     FmUnregisterIntr(p_Tgec->fmMacControllerDriver.h_Fm, e_FM_MOD_10G_MAC, p_Tgec->macId, e_FM_INTR_TYPE_ERR);
 
     /* release the driver's group hash table */
@@ -867,13 +866,11 @@ static t_Error TgecInit(t_Handle h_Tgec)
                    e_FM_INTR_TYPE_ERR,
                    TgecErrException,
                    p_Tgec);
-    if ((p_Tgec->mdioIrq != 0) && (p_Tgec->mdioIrq != NO_IRQ))
+    if (p_Tgec->mdioIrq != NO_IRQ)
     {
         XX_SetIntr(p_Tgec->mdioIrq, TgecException, p_Tgec);
         XX_EnableIntr(p_Tgec->mdioIrq);
     }
-    else if (p_Tgec->mdioIrq == 0)
-        REPORT_ERROR(MINOR, E_NOT_SUPPORTED, (NO_MSG));
 
     XX_Free(p_TgecDriverParam);
     p_Tgec->p_TgecDriverParam = NULL;
-- 
1.7.10.4

