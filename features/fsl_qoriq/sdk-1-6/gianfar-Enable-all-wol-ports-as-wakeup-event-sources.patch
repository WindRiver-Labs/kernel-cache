From ffc33bd01fe48c171a367ef1e7175312c64c1d65 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@freescale.com>
Date: Fri, 4 Apr 2014 13:55:26 +0300
Subject: [PATCH 40/50] gianfar: Enable all wol ports as wakeup event sources

Not all the eTSECs have an active clock by default
when the devices enter suspend state (i.e. sleep
power state).  This property is however configurable,
and all the eTSECs with wake-on-lan capabilities
can be enabled as wakeup event sources.
Use the PMC API to enable all the eTSEC ports, which
are capable of wake-on-lan, as wakeup event sources.

[Original patch taken from QorIQ-SDK-V1.6-SOURCE-20140619-yocto.iso]

Cc: Li Yang <leoli@freescale.com>
Cc: Zhao Chenhui <chenhui.zhao@freescale.com>

Change-Id: I7bd3db14173ddbe3cdd64bcffeb6c72adfcbf2c7
Signed-off-by: Claudiu Manoil <claudiu.manoil@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/10729
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Yang Li <LeoLi@freescale.com>
Reviewed-by: Jose Rivera <German.Rivera@freescale.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/net/ethernet/freescale/gianfar_ethtool.c |   11 +++++++++++
 1 files changed, 11 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/freescale/gianfar_ethtool.c b/drivers/net/ethernet/freescale/gianfar_ethtool.c
index d1f8285..035e0e8 100644
--- a/drivers/net/ethernet/freescale/gianfar_ethtool.c
+++ b/drivers/net/ethernet/freescale/gianfar_ethtool.c
@@ -44,6 +44,9 @@
 #include <linux/sort.h>
 #include <linux/if_vlan.h>
 #include <linux/in.h>
+#ifdef CONFIG_PM
+#include <sysdev/fsl_soc.h>
+#endif
 
 #include "gianfar.h"
 
@@ -665,6 +668,7 @@ static void gfar_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
 static int gfar_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
 {
 	struct gfar_private *priv = netdev_priv(dev);
+	int err;
 
 	if (!priv->wol_supported || !device_can_wakeup(&priv->ofdev->dev) ||
 		(wol->wolopts & ~(WAKE_MAGIC | WAKE_ARP | WAKE_UCAST)))
@@ -681,6 +685,13 @@ static int gfar_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
 			priv->wol_opts |= GIANFAR_WOL_UCAST;
 	}
 	device_set_wakeup_enable(&priv->ofdev->dev, (bool)!!priv->wol_opts);
+
+	err = mpc85xx_pmc_set_wake(priv->dev, wol->wolopts & WAKE_MAGIC);
+	if (err) {
+		device_set_wakeup_enable(priv->dev, false);
+		return err;
+	}
+
 	return 0;
 }
 #endif
-- 
1.7.5.4

