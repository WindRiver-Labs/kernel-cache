From 0a8a58997089d2dadab5064829ebde697d9340a0 Mon Sep 17 00:00:00 2001
From: Benjamin Walsh <benjamin.walsh@windriver.com>
Date: Fri, 7 Nov 2008 14:20:16 -0500
Subject: [PATCH] EDAC: Maple hostbridge device

Register an arch-specific __init function to interpret DTB node for
IBM CPC925 host bridge from DTB tree generated by firmware.
---
 arch/powerpc/platforms/maple/setup.c |   65 ++++++++++++++++++++++++++++++++++
 1 files changed, 65 insertions(+), 0 deletions(-)

diff --git a/arch/powerpc/platforms/maple/setup.c b/arch/powerpc/platforms/maple/setup.c
index 1be9b7c..10833fd 100644
--- a/arch/powerpc/platforms/maple/setup.c
+++ b/arch/powerpc/platforms/maple/setup.c
@@ -336,3 +336,68 @@ define_machine(maple) {
 	.progress		= maple_progress,
 	.power_save		= power4_idle,
 };
+
+#ifdef CONFIG_EDAC
+static int __init maple_cpc925_edac_setup(void)
+{
+	struct platform_device *pdev;
+	struct device_node *np = NULL;
+	struct resource *r;
+	int num_addr;
+
+	np = of_find_node_by_name(NULL, "hostbridge");
+	if (!np) {
+		printk(KERN_WARNING "Cannot find CPC925 hostbridge\n");
+		return -ENODEV;
+	} else
+		printk(KERN_INFO "Found CPC925 hostbridge\n");
+
+	/*
+ 	 * In the DTB tree created by firmware, so far there is only one
+ 	 * "reg" attribute and no "interrupt" attribute.
+ 	 */
+	num_addr = 1;
+	r = kzalloc(num_addr * sizeof(*r), GFP_KERNEL);
+	if (!r)
+		return -ENOMEM;
+
+	/*
+ 	 * of_address_to_resource() would get the #address-cells and
+ 	 * #size-cells properties for a node from its parent.
+ 	 * On Maple 64bit target host bridge parent node has specified
+ 	 * both of these two properties to be 2. However, the actual
+ 	 * "cell" value for host bridge node is 1. Since we can't fix
+ 	 * this firmware generated DTB, we have to setup a resource
+ 	 * structure manually.
+ 	 */
+#if 0
+	int i, ret;
+	for (i = 0; i < num_addr; i++) {
+		ret = of_address_to_resource(np, i, &r[i]);
+		if (ret) {
+			printk(KERN_ERR "of_address_to_resouce failed with %x\n", ret);
+			kfree(r);
+			return ret;
+		} else
+			printk(KERN_INFO "r[%d] start %x, end %x, flags %x\n",
+				i, r[i].start, r[i].end, r[i].flags);
+	}
+#else
+	memset(r, 0, sizeof(*r));
+	r->start = 0xf8000000;
+	r->end = 0xf8ffffff;	/* size of 0x1000000 (16MB) */
+	r->name = "hostbridge";
+	r->flags = IORESOURCE_MEM;
+
+#endif
+	pdev = platform_device_register_simple("cpc925_edac", 0, r, num_addr);
+
+        kfree(r);
+        if (IS_ERR(pdev))
+                return PTR_ERR(pdev);
+
+        printk(KERN_INFO "CPC925 platform device created\n");
+        return 0;
+}
+arch_initcall(maple_cpc925_edac_setup);
+#endif /* CONFIG_EDAC */
-- 
1.5.5.1

