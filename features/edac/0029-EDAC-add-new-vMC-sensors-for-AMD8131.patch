From 25d2b01cc9b66ba946dc7e8412d13c2aa3b4ce91 Mon Sep 17 00:00:00 2001
From: Harry Ciao <qingtao.cao@windriver.com>
Date: Wed, 14 Jan 2009 13:41:18 +0800
Subject: [PATCH] EDAC: add new vMC sensors for AMD8131

Three new error detections have been added to AMD8131 EDAC driver,
add their related vMC supports.

Signed-off-by: Harry Ciao <qingtao.cao@windriver.com>
---
 drivers/edac/amd8131_edac.c     |   42 ++++++++++++++++++++++++++++++
 drivers/edac/amd8131_edac_vmc.h |   53 +++++++++++++++++++++++++++++++++++++-
 2 files changed, 93 insertions(+), 2 deletions(-)

diff --git a/drivers/edac/amd8131_edac.c b/drivers/edac/amd8131_edac.c
index 7f04570..f9e22f6 100644
--- a/drivers/edac/amd8131_edac.c
+++ b/drivers/edac/amd8131_edac.c
@@ -303,6 +303,12 @@ static void amd8131_pcix_check(struct edac_pci_ctl_info *edac_dev)
 			"on %s bridge\n", dev_info->ctl_name);
 		printk(KERN_INFO "DTS: %d\n", val32 & INT_CTLR_DTS);
 
+#ifdef CONFIG_EDAC_VMC
+		/* Report faults to vMC */
+		REPORT_FAULT(INT_CTLR_DTS, REG_INT_CTLR, val32,
+			dev_info->inst);
+#endif
+
 		val32 |= INT_CTLR_DTS;
 		if (pci_write_config_dword(dev, REG_INT_CTLR, val32)) {
 			printk(KERN_ERR "PCI Access Error\n");
@@ -321,6 +327,12 @@ static void amd8131_pcix_check(struct edac_pci_ctl_info *edac_dev)
 			"on %s bridge\n", dev_info->ctl_name);
 		printk(KERN_INFO "CRCERR: %d\n", val32 & LNK_CTRL_CRCERR_A);
 
+#ifdef CONFIG_EDAC_VMC
+		/* Report faults to vMC */
+		REPORT_FAULT(LNK_CTRL_CRCERR_A, REG_LNK_CTRL_A, val32,
+			dev_info->inst);
+#endif
+
 		val32 |= LNK_CTRL_CRCERR_A;
 		if (pci_write_config_dword(dev, REG_LNK_CTRL_A, val32)) {
 			printk(KERN_ERR "PCI Access Error\n");
@@ -339,6 +351,12 @@ static void amd8131_pcix_check(struct edac_pci_ctl_info *edac_dev)
 			"on %s bridge\n", dev_info->ctl_name);
 		printk(KERN_INFO "CRCERR: %d\n", val32 & LNK_CTRL_CRCERR_B);
 
+#ifdef CONFIG_EDAC_VMC
+		/* Report faults to vMC */
+		REPORT_FAULT(LNK_CTRL_CRCERR_B, REG_LNK_CTRL_B, val32,
+			dev_info->inst);
+#endif
+
 		val32 |= LNK_CTRL_CRCERR_B;
 		if (pci_write_config_dword(dev, REG_LNK_CTRL_B, val32)) {
 			printk(KERN_ERR "PCI Access Error\n");
@@ -375,6 +393,9 @@ static int init_vmc_sensors(void)
 	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_A_MEM_LIMIT_RTA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_A_MEM_LIMIT_STA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_A_MEM_LIMIT_MDPE);
+	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_A_INT_CTLR_DTS);
+	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_A_LNK_CTRL_CRCERR_A);
+	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_A_LNK_CTRL_CRCERR_B);
 
 	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_B_MEM_LIMIT_DPE);
 	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_B_MEM_LIMIT_RSE);
@@ -382,6 +403,9 @@ static int init_vmc_sensors(void)
 	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_B_MEM_LIMIT_RTA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_B_MEM_LIMIT_STA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_B_MEM_LIMIT_MDPE);
+	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_B_INT_CTLR_DTS);
+	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_B_LNK_CTRL_CRCERR_A);
+	rc |= INIT_SENSOR_DEFAULT(VMC_NORTH_B_LNK_CTRL_CRCERR_B);
 
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_A_MEM_LIMIT_DPE);
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_A_MEM_LIMIT_RSE);
@@ -389,6 +413,9 @@ static int init_vmc_sensors(void)
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_A_MEM_LIMIT_RTA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_A_MEM_LIMIT_STA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_A_MEM_LIMIT_MDPE);
+	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_A_INT_CTLR_DTS);
+	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_A_LNK_CTRL_CRCERR_A);
+	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_A_LNK_CTRL_CRCERR_B);
 
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_B_MEM_LIMIT_DPE);
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_B_MEM_LIMIT_RSE);
@@ -396,6 +423,9 @@ static int init_vmc_sensors(void)
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_B_MEM_LIMIT_RTA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_B_MEM_LIMIT_STA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_B_MEM_LIMIT_MDPE);
+	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_B_INT_CTLR_DTS);
+	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_B_LNK_CTRL_CRCERR_A);
+	rc |= INIT_SENSOR_DEFAULT(VMC_SOUTH_B_LNK_CTRL_CRCERR_B);
 #undef INIT_SENSOR_DEFAULT
 
 	return rc;
@@ -409,6 +439,9 @@ static void uninit_vmc_sensors(void)
 	vmc_sensor_uninit(VMC_NORTH_A_MEM_LIMIT_RTA, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_NORTH_A_MEM_LIMIT_STA, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_NORTH_A_MEM_LIMIT_MDPE, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_NORTH_A_INT_CTLR_DTS, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_NORTH_A_LNK_CTRL_CRCERR_A, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_NORTH_A_LNK_CTRL_CRCERR_B, amd8131_vmc_lun);
 
 	vmc_sensor_uninit(VMC_NORTH_B_MEM_LIMIT_DPE, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_NORTH_B_MEM_LIMIT_RSE, amd8131_vmc_lun);
@@ -416,6 +449,9 @@ static void uninit_vmc_sensors(void)
 	vmc_sensor_uninit(VMC_NORTH_B_MEM_LIMIT_RTA, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_NORTH_B_MEM_LIMIT_STA, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_NORTH_B_MEM_LIMIT_MDPE, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_NORTH_B_INT_CTLR_DTS, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_NORTH_B_LNK_CTRL_CRCERR_A, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_NORTH_B_LNK_CTRL_CRCERR_B, amd8131_vmc_lun);
 
 	vmc_sensor_uninit(VMC_SOUTH_A_MEM_LIMIT_DPE, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_SOUTH_A_MEM_LIMIT_RSE, amd8131_vmc_lun);
@@ -423,6 +459,9 @@ static void uninit_vmc_sensors(void)
 	vmc_sensor_uninit(VMC_SOUTH_A_MEM_LIMIT_RTA, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_SOUTH_A_MEM_LIMIT_STA, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_SOUTH_A_MEM_LIMIT_MDPE, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_SOUTH_A_INT_CTLR_DTS, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_SOUTH_A_LNK_CTRL_CRCERR_A, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_SOUTH_A_LNK_CTRL_CRCERR_B, amd8131_vmc_lun);
 
 	vmc_sensor_uninit(VMC_SOUTH_B_MEM_LIMIT_DPE, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_SOUTH_B_MEM_LIMIT_RSE, amd8131_vmc_lun);
@@ -430,6 +469,9 @@ static void uninit_vmc_sensors(void)
 	vmc_sensor_uninit(VMC_SOUTH_B_MEM_LIMIT_RTA, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_SOUTH_B_MEM_LIMIT_STA, amd8131_vmc_lun);
 	vmc_sensor_uninit(VMC_SOUTH_B_MEM_LIMIT_MDPE, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_SOUTH_B_INT_CTLR_DTS, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_SOUTH_B_LNK_CTRL_CRCERR_A, amd8131_vmc_lun);
+	vmc_sensor_uninit(VMC_SOUTH_B_LNK_CTRL_CRCERR_B, amd8131_vmc_lun);
 
 	vmc_release_lun(amd8131_vmc_lun);
 }
diff --git a/drivers/edac/amd8131_edac_vmc.h b/drivers/edac/amd8131_edac_vmc.h
index dd626d9..a2572ab 100644
--- a/drivers/edac/amd8131_edac_vmc.h
+++ b/drivers/edac/amd8131_edac_vmc.h
@@ -35,6 +35,9 @@ enum amd8131_sensors {
 	VMC_NORTH_A_MEM_LIMIT_RTA,
 	VMC_NORTH_A_MEM_LIMIT_STA,
 	VMC_NORTH_A_MEM_LIMIT_MDPE,
+	VMC_NORTH_A_INT_CTLR_DTS,
+	VMC_NORTH_A_LNK_CTRL_CRCERR_A,
+	VMC_NORTH_A_LNK_CTRL_CRCERR_B,
 
 	VMC_NORTH_B_MEM_LIMIT_DPE,
 	VMC_NORTH_B_MEM_LIMIT_RSE,
@@ -42,6 +45,9 @@ enum amd8131_sensors {
 	VMC_NORTH_B_MEM_LIMIT_RTA,
 	VMC_NORTH_B_MEM_LIMIT_STA,
 	VMC_NORTH_B_MEM_LIMIT_MDPE,
+	VMC_NORTH_B_INT_CTLR_DTS,
+	VMC_NORTH_B_LNK_CTRL_CRCERR_A,
+	VMC_NORTH_B_LNK_CTRL_CRCERR_B,
 
 	VMC_SOUTH_A_MEM_LIMIT_DPE,
 	VMC_SOUTH_A_MEM_LIMIT_RSE,
@@ -49,13 +55,19 @@ enum amd8131_sensors {
 	VMC_SOUTH_A_MEM_LIMIT_RTA,
 	VMC_SOUTH_A_MEM_LIMIT_STA,
 	VMC_SOUTH_A_MEM_LIMIT_MDPE,
+	VMC_SOUTH_A_INT_CTLR_DTS,
+	VMC_SOUTH_A_LNK_CTRL_CRCERR_A,
+	VMC_SOUTH_A_LNK_CTRL_CRCERR_B,
 
 	VMC_SOUTH_B_MEM_LIMIT_DPE,
 	VMC_SOUTH_B_MEM_LIMIT_RSE,
 	VMC_SOUTH_B_MEM_LIMIT_RMA,
 	VMC_SOUTH_B_MEM_LIMIT_RTA,
 	VMC_SOUTH_B_MEM_LIMIT_STA,
-	VMC_SOUTH_B_MEM_LIMIT_MDPE
+	VMC_SOUTH_B_MEM_LIMIT_MDPE,
+	VMC_SOUTH_B_INT_CTLR_DTS,
+	VMC_SOUTH_B_LNK_CTRL_CRCERR_A,
+	VMC_SOUTH_B_LNK_CTRL_CRCERR_B,
 };
 
 /* Assign sensor names.
@@ -69,6 +81,9 @@ static const char *amd8131_sensor_names[] = {
 	name_sensor(VMC_NORTH_A_MEM_LIMIT_RTA),
 	name_sensor(VMC_NORTH_A_MEM_LIMIT_STA),
 	name_sensor(VMC_NORTH_A_MEM_LIMIT_MDPE),
+	name_sensor(VMC_NORTH_A_INT_CTLR_DTS),
+	name_sensor(VMC_NORTH_A_LNK_CTRL_CRCERR_A),
+	name_sensor(VMC_NORTH_A_LNK_CTRL_CRCERR_B),
 
 	name_sensor(VMC_NORTH_B_MEM_LIMIT_DPE),
 	name_sensor(VMC_NORTH_B_MEM_LIMIT_RSE),
@@ -76,6 +91,9 @@ static const char *amd8131_sensor_names[] = {
 	name_sensor(VMC_NORTH_B_MEM_LIMIT_RTA),
 	name_sensor(VMC_NORTH_B_MEM_LIMIT_STA),
 	name_sensor(VMC_NORTH_B_MEM_LIMIT_MDPE),
+	name_sensor(VMC_NORTH_B_INT_CTLR_DTS),
+	name_sensor(VMC_NORTH_B_LNK_CTRL_CRCERR_A),
+	name_sensor(VMC_NORTH_B_LNK_CTRL_CRCERR_B),
 
 	name_sensor(VMC_SOUTH_A_MEM_LIMIT_DPE),
 	name_sensor(VMC_SOUTH_A_MEM_LIMIT_RSE),
@@ -83,6 +101,9 @@ static const char *amd8131_sensor_names[] = {
 	name_sensor(VMC_SOUTH_A_MEM_LIMIT_RTA),
 	name_sensor(VMC_SOUTH_A_MEM_LIMIT_STA),
 	name_sensor(VMC_SOUTH_A_MEM_LIMIT_MDPE),
+	name_sensor(VMC_SOUTH_A_INT_CTLR_DTS),
+	name_sensor(VMC_SOUTH_A_LNK_CTRL_CRCERR_A),
+	name_sensor(VMC_SOUTH_A_LNK_CTRL_CRCERR_B),
 
 	name_sensor(VMC_SOUTH_B_MEM_LIMIT_DPE),
 	name_sensor(VMC_SOUTH_B_MEM_LIMIT_RSE),
@@ -90,6 +111,9 @@ static const char *amd8131_sensor_names[] = {
 	name_sensor(VMC_SOUTH_B_MEM_LIMIT_RTA),
 	name_sensor(VMC_SOUTH_B_MEM_LIMIT_STA),
 	name_sensor(VMC_SOUTH_B_MEM_LIMIT_MDPE),
+	name_sensor(VMC_SOUTH_B_INT_CTLR_DTS),
+	name_sensor(VMC_SOUTH_B_LNK_CTRL_CRCERR_A),
+	name_sensor(VMC_SOUTH_B_LNK_CTRL_CRCERR_B),
 };
 
 /* Map sensors to vMC IPMI entities.
@@ -104,6 +128,12 @@ static const int amd8131_sensor_map[] = {
 	map_sensor(VMC_NORTH_A_MEM_LIMIT_RTA, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  0),
 	map_sensor(VMC_NORTH_A_MEM_LIMIT_STA, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  0),
 	map_sensor(VMC_NORTH_A_MEM_LIMIT_MDPE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 0),
+	map_sensor(VMC_NORTH_A_INT_CTLR_DTS,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 0),
+	map_sensor(VMC_NORTH_A_LNK_CTRL_CRCERR_A,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 0),
+	map_sensor(VMC_NORTH_A_LNK_CTRL_CRCERR_B,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 0),
 
 	map_sensor(VMC_NORTH_B_MEM_LIMIT_DPE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  1),
 	map_sensor(VMC_NORTH_B_MEM_LIMIT_RSE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  1),
@@ -111,6 +141,12 @@ static const int amd8131_sensor_map[] = {
 	map_sensor(VMC_NORTH_B_MEM_LIMIT_RTA, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  1),
 	map_sensor(VMC_NORTH_B_MEM_LIMIT_STA, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  1),
 	map_sensor(VMC_NORTH_B_MEM_LIMIT_MDPE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 1),
+	map_sensor(VMC_NORTH_B_INT_CTLR_DTS,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 1),
+	map_sensor(VMC_NORTH_B_LNK_CTRL_CRCERR_A,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 1),
+	map_sensor(VMC_NORTH_B_LNK_CTRL_CRCERR_B,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 1),
 
 	map_sensor(VMC_SOUTH_A_MEM_LIMIT_DPE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  2),
 	map_sensor(VMC_SOUTH_A_MEM_LIMIT_RSE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  2),
@@ -118,13 +154,26 @@ static const int amd8131_sensor_map[] = {
 	map_sensor(VMC_SOUTH_A_MEM_LIMIT_RTA, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  2),
 	map_sensor(VMC_SOUTH_A_MEM_LIMIT_STA, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  2),
 	map_sensor(VMC_SOUTH_A_MEM_LIMIT_MDPE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 2),
+	map_sensor(VMC_SOUTH_A_INT_CTLR_DTS,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 2),
+	map_sensor(VMC_SOUTH_A_LNK_CTRL_CRCERR_A,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 2),
+	map_sensor(VMC_SOUTH_A_LNK_CTRL_CRCERR_B,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 2),
 
 	map_sensor(VMC_SOUTH_B_MEM_LIMIT_DPE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  3),
 	map_sensor(VMC_SOUTH_B_MEM_LIMIT_RSE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  3),
 	map_sensor(VMC_SOUTH_B_MEM_LIMIT_RMA, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  3),
 	map_sensor(VMC_SOUTH_B_MEM_LIMIT_RTA, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  3),
 	map_sensor(VMC_SOUTH_B_MEM_LIMIT_STA, IPMI_ENTITY_ID_PCI_EXPRESS_BUS,  3),
-	map_sensor(VMC_SOUTH_B_MEM_LIMIT_MDPE, IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 3)
+	map_sensor(VMC_SOUTH_B_MEM_LIMIT_MDPE,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 3),
+	map_sensor(VMC_SOUTH_B_INT_CTLR_DTS,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 3),
+	map_sensor(VMC_SOUTH_B_LNK_CTRL_CRCERR_A,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 3),
+	map_sensor(VMC_SOUTH_B_LNK_CTRL_CRCERR_B,
+			IPMI_ENTITY_ID_PCI_EXPRESS_BUS, 3),
 };
 
 /* put here instead of C file to modularize with vMC */
-- 
1.6.0.3

