From c54cc2d43a83ca6f70be20ef5cd0444809718925 Mon Sep 17 00:00:00 2001
From: Harry Ciao <qingtao.cao@windriver.com>
Date: Fri, 16 Jan 2009 15:46:31 +0800
Subject: [PATCH] EDAC: add new vMC sensors for AMD8111

Add vMC sensors for the 6 newly introduced EDAC sensors on
AMD8111 chipset.

Signed-off-by: Harry Ciao <qingtao.cao@windriver.com>
---
 drivers/edac/amd8111_edac.c     |   26 ++++++++++++++++++++++++++
 drivers/edac/amd8111_edac_vmc.h |   18 ++++++++++++++++++
 2 files changed, 44 insertions(+), 0 deletions(-)

diff --git a/drivers/edac/amd8111_edac.c b/drivers/edac/amd8111_edac.c
index 4678b46..4432810 100644
--- a/drivers/edac/amd8111_edac.c
+++ b/drivers/edac/amd8111_edac.c
@@ -64,6 +64,12 @@ static int init_vmc_sensors(void)
 	rc |= INIT_SENSOR_DEFAULT(VMC_MEM_LIMIT_RTA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_MEM_LIMIT_STA);
 	rc |= INIT_SENSOR_DEFAULT(VMC_MEM_LIMIT_MDPE);
+	rc |= INIT_SENSOR_DEFAULT(VMC_PCI_STSCMD_SSE);
+	rc |= INIT_SENSOR_DEFAULT(VMC_PCI_STSCMD_RMA);
+	rc |= INIT_SENSOR_DEFAULT(VMC_PCI_STSCMD_RTA);
+	rc |= INIT_SENSOR_DEFAULT(VMC_HT_LINK_LKFAIL);
+	rc |= INIT_SENSOR_DEFAULT(VMC_PCI_INTBRG_CTRL_DTSTAT);
+	rc |= INIT_SENSOR_DEFAULT(VMC_IO_CTRL_1_PW2LPC);
 	rc |= INIT_SENSOR_DEFAULT(VMC_IO_CTRL_1_LPC_ERR);
 #undef INIT_SENSOR_DEFAULT
 
@@ -79,6 +85,12 @@ static void uninit_vmc_sensors(void)
 	vmc_sensor_uninit(VMC_MEM_LIMIT_RTA, amd8111_vmc_lun);
 	vmc_sensor_uninit(VMC_MEM_LIMIT_STA, amd8111_vmc_lun);
 	vmc_sensor_uninit(VMC_MEM_LIMIT_MDPE, amd8111_vmc_lun);
+	vmc_sensor_uninit(VMC_PCI_STSCMD_SSE, amd8111_vmc_lun);
+	vmc_sensor_uninit(VMC_PCI_STSCMD_RMA, amd8111_vmc_lun);
+	vmc_sensor_uninit(VMC_PCI_STSCMD_RTA, amd8111_vmc_lun);
+	vmc_sensor_uninit(VMC_HT_LINK_LKFAIL, amd8111_vmc_lun);
+	vmc_sensor_uninit(VMC_PCI_INTBRG_CTRL_DTSTAT, amd8111_vmc_lun);
+	vmc_sensor_uninit(VMC_IO_CTRL_1_PW2LPC, amd8111_vmc_lun);
 	vmc_sensor_uninit(VMC_IO_CTRL_1_LPC_ERR, amd8111_vmc_lun);
 
 	vmc_release_lun(amd8111_vmc_lun);
@@ -277,6 +289,12 @@ static void amd8111_pci_bridge_check(struct edac_device_ctl_info *edac_dev)
 			(val32 & PCI_STSCMD_RMA) != 0,
 			(val32 & PCI_STSCMD_RTA) != 0);
 
+#ifdef CONFIG_EDAC_VMC
+		REPORT_FAULT(PCI_STSCMD_SSE, REG_PCI_STSCMD, val32);
+		REPORT_FAULT(PCI_STSCMD_RMA, REG_PCI_STSCMD, val32);
+		REPORT_FAULT(PCI_STSCMD_RTA, REG_PCI_STSCMD, val32);
+#endif
+
 		val32 |= PCI_STSCMD_CLEAR_MASK;
 		if (pci_write_config_dword(dev, REG_PCI_STSCMD, val32)) {
 			printk(KERN_ERR "PCI Access Error\n");
@@ -297,6 +315,10 @@ static void amd8111_pci_bridge_check(struct edac_device_ctl_info *edac_dev)
 		printk(KERN_INFO "LKFAIL: %d\n",
 			(val32 & HT_LINK_LKFAIL) != 0);
 
+#ifdef CONFIG_EDAC_VMC
+		REPORT_FAULT(HT_LINK_LKFAIL, REG_HT_LINK, val32);
+#endif
+
 		val32 |= HT_LINK_LKFAIL;
 		if (pci_write_config_dword(dev, REG_HT_LINK, val32)) {
 			printk(KERN_ERR "PCI Access Error\n");
@@ -316,6 +338,9 @@ static void amd8111_pci_bridge_check(struct edac_device_ctl_info *edac_dev)
 			"register on device %s\n", dev_info->ctl_name);
 		printk(KERN_INFO "DTSTAT: %d\n",
 			(val32 & PCI_INTBRG_CTRL_DTSTAT) != 0);
+#ifdef CONFIG_EDAC_VMC
+		REPORT_FAULT(PCI_INTBRG_CTRL_DTSTAT, REG_PCI_INTBRG_CTRL, val32);
+#endif
 
 		val32 |= PCI_INTBRG_CTRL_DTSTAT;
 		if (pci_write_config_dword(dev, REG_PCI_INTBRG_CTRL, val32)) {
@@ -473,6 +498,7 @@ static void amd8111_lpc_bridge_check(struct edac_device_ctl_info *edac_dev)
 
 #ifdef CONFIG_EDAC_VMC
 		REPORT_FAULT(IO_CTRL_1_LPC_ERR, REG_IO_CTRL_1, val8);
+		REPORT_FAULT(IO_CTRL_1_PW2LPC, REG_IO_CTRL_1, val8);
 #endif	/* CONFIG_EDAC_VMC */
 
 		val8 |= IO_CTRL_1_CLEAR_MASK;
diff --git a/drivers/edac/amd8111_edac_vmc.h b/drivers/edac/amd8111_edac_vmc.h
index 758c247..d0d893e 100644
--- a/drivers/edac/amd8111_edac_vmc.h
+++ b/drivers/edac/amd8111_edac_vmc.h
@@ -34,6 +34,12 @@ enum amd8111_sensors {
 	VMC_MEM_LIMIT_RTA,
 	VMC_MEM_LIMIT_STA,
 	VMC_MEM_LIMIT_MDPE,
+	VMC_PCI_STSCMD_SSE,
+	VMC_PCI_STSCMD_RMA,
+	VMC_PCI_STSCMD_RTA,
+	VMC_HT_LINK_LKFAIL,
+	VMC_PCI_INTBRG_CTRL_DTSTAT,
+	VMC_IO_CTRL_1_PW2LPC,
 	VMC_IO_CTRL_1_LPC_ERR
 };
 
@@ -48,6 +54,12 @@ static const char *amd8111_sensor_names[] = {
 	name_sensor(VMC_MEM_LIMIT_RTA),
 	name_sensor(VMC_MEM_LIMIT_STA),
 	name_sensor(VMC_MEM_LIMIT_MDPE),
+	name_sensor(VMC_PCI_STSCMD_SSE),
+	name_sensor(VMC_PCI_STSCMD_RMA),
+	name_sensor(VMC_PCI_STSCMD_RTA),
+	name_sensor(VMC_HT_LINK_LKFAIL),
+	name_sensor(VMC_PCI_INTBRG_CTRL_DTSTAT),
+	name_sensor(VMC_IO_CTRL_1_PW2LPC),
 	name_sensor(VMC_IO_CTRL_1_LPC_ERR)
 };
 
@@ -63,6 +75,12 @@ static const int amd8111_sensor_map[] = {
 	map_sensor(VMC_MEM_LIMIT_RTA, IPMI_ENTITY_ID_PCI_BUS, 0),
 	map_sensor(VMC_MEM_LIMIT_STA, IPMI_ENTITY_ID_PCI_BUS, 0),
 	map_sensor(VMC_MEM_LIMIT_MDPE, IPMI_ENTITY_ID_PCI_BUS, 0),
+	map_sensor(VMC_PCI_STSCMD_SSE, IPMI_ENTITY_ID_PCI_BUS, 0),
+	map_sensor(VMC_PCI_STSCMD_RMA, IPMI_ENTITY_ID_PCI_BUS, 0),
+	map_sensor(VMC_PCI_STSCMD_RTA, IPMI_ENTITY_ID_PCI_BUS, 0),
+	map_sensor(VMC_HT_LINK_LKFAIL, IPMI_ENTITY_ID_PCI_BUS, 0),
+	map_sensor(VMC_PCI_INTBRG_CTRL_DTSTAT, IPMI_ENTITY_ID_PCI_BUS, 0),
+	map_sensor(VMC_IO_CTRL_1_PW2LPC, IPMI_ENTITY_ID_PCI_BUS, 1),
 	map_sensor(VMC_IO_CTRL_1_LPC_ERR, IPMI_ENTITY_ID_PCI_BUS, 1)
 };
 
-- 
1.6.0.3

