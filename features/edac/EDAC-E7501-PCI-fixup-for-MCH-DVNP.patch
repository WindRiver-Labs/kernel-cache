From 7e9ff0500133ef214feff62b55d7f1359ad98d81 Mon Sep 17 00:00:00 2001
From: Jason HU <yongqi.hu@windriver.com>
Date: Wed, 19 May 2010 22:24:52 -0700
Subject: [PATCH] EDAC: E7501 PCI fixup for MCH DVNP

Setup the e7501 MCH DVNP(Device Not Present) register to make all
Function 1 devices visible to software. Otherwise e7501 will have
only Function 1 (D0F0, D2F0 etc) visible.

This fixup can not make D0F1 visible because PCI_HEADER_TYPE of
D0F0 has been read. We have to setup its dev->multifunction
manually.

Signed-off-by: Jason HU <yongqi.hu@windriver.com>
---
 arch/x86/pci/fixup.c |   32 ++++++++++++++++++++++++++++++++
 1 files changed, 32 insertions(+), 0 deletions(-)

diff --git a/arch/x86/pci/fixup.c b/arch/x86/pci/fixup.c
index 29b8732..0f6944e 100644
--- a/arch/x86/pci/fixup.c
+++ b/arch/x86/pci/fixup.c
@@ -521,3 +521,35 @@ static void sb600_disable_hpet_bar(struct pci_dev *dev)
 	}
 }
 DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_ATI, 0x4385, sb600_disable_hpet_bar);
+
+static void __devinit e7501_MCH_DVNP_setup(struct pci_dev *dev)
+{
+	u16 val;
+
+	/*
+	 * setup the e7501 MCH DVNP(Device Not Present) register to make all
+	 * Function 1 devices visible to software, otherwise e7501 will appear
+	 * to have only one function for each device(D0F0, D2F0 etc).
+	 */
+	pci_read_config_word(dev, 0xE0, &val);
+	printk(KERN_INFO "E7501_host_controller_DVNP is 0x%x\n", val);
+
+	pci_write_config_word(dev, 0xE0, (val & 0xFFE2));
+	pci_read_config_word(dev, 0xE0, &val);
+	printk(KERN_INFO "E7501_host_controller_DVNP is 0x%x\n", val);
+
+	/*
+	 * However, since when this fixup takes effect, PCI_HEAD_TYPE of
+	 * MCH itself has already been read, so we have to change its
+	 * dev->multifunction to be greater than zero so that
+	 * pci_scan_slot() would be willing to search Function 1 device
+	 * on it.
+	 *
+	 * On a side note, since Device 2/3/4 have not been scanned, so
+	 * setup DVNP alone would be enough to make their Function 1
+	 * devices visible to software.
+	 */
+	dev->multifunction = 0x1;
+}
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL,
+		PCI_DEVICE_ID_INTEL_E7501_MCH, e7501_MCH_DVNP_setup);
-- 
1.6.5.2

