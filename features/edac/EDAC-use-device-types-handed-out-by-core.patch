From 86395c43febcfee694fe4d57a517cf1e753b6885 Mon Sep 17 00:00:00 2001
From: Benjamin Walsh <benjamin.walsh@windriver.com>
Date: Thu, 13 Nov 2008 14:24:21 -0500
Subject: [PATCH] EDAC - use device types handed out by core

Change the maple drivers make use of indexes handed out by core.

Signed-off-by: Benjamin Walsh <benjamin.walsh@windriver.com>
---
 drivers/edac/Kconfig        |   13 +++++------
 drivers/edac/Makefile       |    1 -
 drivers/edac/amd8111_edac.c |    5 +--
 drivers/edac/amd8111_edac.h |    2 -
 drivers/edac/amd8131_edac.c |    6 ++--
 drivers/edac/amd8131_edac.h |    2 -
 drivers/edac/maple_edac.c   |   45 -------------------------------------------
 drivers/edac/maple_edac.h   |   25 -----------------------
 8 files changed, 11 insertions(+), 88 deletions(-)
 delete mode 100644 drivers/edac/maple_edac.c
 delete mode 100644 drivers/edac/maple_edac.h

diff --git a/drivers/edac/Kconfig b/drivers/edac/Kconfig
index f749668..f19c302 100644
--- a/drivers/edac/Kconfig
+++ b/drivers/edac/Kconfig
@@ -172,22 +172,21 @@ config EDAC_CELL
 	  Cell Broadband Engine internal memory controller
 	  on platform without a hypervisor
 
-config EDAC_MAPLE
-	tristate "Maple board"
-	depends on EDAC_MM_EDAC && PPC_MAPLE
-	help
-	  Global variables for Maple board
+
+config EDAC_IBM_CPC925
+	tristate "IBM CPC925 Memory Controller (PPC970FX)"
+	depends on EDAC_MAPLE
 
 config EDAC_AMD8131
 	tristate "AMD8131 HyperTransport PCI-X tunnel"
-	depends on PCI && EDAC_MAPLE
+	depends on PCI
 	help
 	  Support for error detection and correction on the
 	  AMD8131 HT PCI-X tunnel chip.
 
 config EDAC_AMD8111
 	tristate "AMD8111 HyperTransport I/O Hub"
-	depends on PCI && EDAC_MAPLE
+	depends on PCI
 	help
 	  Support for error detection and correction on the
 	  AMD8111 HT I/O Hub chip.
diff --git a/drivers/edac/Makefile b/drivers/edac/Makefile
index 81be0b3..a851ef1 100644
--- a/drivers/edac/Makefile
+++ b/drivers/edac/Makefile
@@ -34,7 +34,6 @@ obj-$(CONFIG_EDAC_MPC85XX)		+= mpc85xx_edac.o
 obj-$(CONFIG_EDAC_MV64X60)		+= mv64x60_edac.o
 obj-$(CONFIG_EDAC_CELL)			+= cell_edac.o
 obj-$(CONFIG_EDAC_TEST_DEVICE)		+= test_device_edac.o
-obj-$(CONFIG_EDAC_MAPLE)		+= maple_edac.o
 obj-$(CONFIG_EDAC_AMD8131)		+= amd8131_edac.o
 obj-$(CONFIG_EDAC_AMD8111)		+= amd8111_edac.o
 
diff --git a/drivers/edac/amd8111_edac.c b/drivers/edac/amd8111_edac.c
index 29d3f0c..85e53a8 100644
--- a/drivers/edac/amd8111_edac.c
+++ b/drivers/edac/amd8111_edac.c
@@ -223,10 +223,11 @@ static int amd8111_probe(struct pci_dev *dev, const struct pci_device_id *id)
 	 * edac_device_ctl_info, but make use of existing
 	 * one instead.
 	*/
+	dev_info->edac_idx = edac_device_alloc_index();
 	dev_info->edac_dev =
 		edac_device_alloc_ctl_info(0, dev_info->ctl_name, 1,
 					   NULL, 0, 0,
-					   NULL, 0, maple_edac_dev_idx);
+					   NULL, 0, dev_info->edac_idx);
 	if (!dev_info->edac_dev)
 		return -ENOMEM;
 
@@ -261,8 +262,6 @@ static int amd8111_probe(struct pci_dev *dev, const struct pci_device_id *id)
 		return -ENODEV;
 	}
 
-	dev_info->edac_idx = maple_edac_dev_idx++;
-
 	printk(KERN_INFO "added one device on AMD8111 "
 		"vendor %x, device %x, name %s\n",
 		PCI_VENDOR_ID_AMD, dev_info->err_dev,
diff --git a/drivers/edac/amd8111_edac.h b/drivers/edac/amd8111_edac.h
index 4331c99..98da95c 100644
--- a/drivers/edac/amd8111_edac.h
+++ b/drivers/edac/amd8111_edac.h
@@ -24,8 +24,6 @@
 #ifndef _AMD8111_EDAC_H_
 #define _AMD8111_EDAC_H_
 
-#include "maple_edac.h"
-
 #define REG_MEM_LIM	0x1c
 #define REG_INT_CTLR	0x3c
 #define REG_IO_CTRL_1	0x40
diff --git a/drivers/edac/amd8131_edac.c b/drivers/edac/amd8131_edac.c
index 3afe32a..c544bd8 100644
--- a/drivers/edac/amd8131_edac.c
+++ b/drivers/edac/amd8131_edac.c
@@ -202,10 +202,12 @@ static int amd8131_probe(struct pci_dev *dev, const struct pci_device_id *id)
 	 * edac_device_ctl_info, but make use of existing
 	 * one instead.
 	*/
+
+	dev_info->edac_idx = edac_device_alloc_index();
 	dev_info->edac_dev =
 		edac_device_alloc_ctl_info(0, dev_info->ctl_name, 1,
 					   NULL, 0, 0,
-					   NULL, 0, maple_edac_dev_idx);
+					   NULL, 0, dev_info->edac_idx);
 	if (!dev_info->edac_dev)
 		return -ENOMEM;
 
@@ -240,8 +242,6 @@ static int amd8131_probe(struct pci_dev *dev, const struct pci_device_id *id)
 		return -ENODEV;
 	}
 
-	dev_info->edac_idx = maple_edac_dev_idx++;
-
 	printk(KERN_INFO "added one device on AMD8131 "
 		"vendor %x, device %x, devfn %x, name %s\n",
 		PCI_VENDOR_ID_AMD, amd8131_chipset.err_dev,
diff --git a/drivers/edac/amd8131_edac.h b/drivers/edac/amd8131_edac.h
index f8e9cef..46a35e8 100644
--- a/drivers/edac/amd8131_edac.h
+++ b/drivers/edac/amd8131_edac.h
@@ -25,8 +25,6 @@
 #ifndef _AMD8131_EDAC_H_
 #define _AMD8131_EDAC_H_
 
-#include "maple_edac.h"
-
 #define DEVFN_PCIX_BRIDGE_NORTH_A	(8+1)
 #define DEVFN_PCIX_BRIDGE_NORTH_B	(16+1)
 #define DEVFN_PCIX_BRIDGE_SOUTH_A	(24+1)
diff --git a/drivers/edac/maple_edac.c b/drivers/edac/maple_edac.c
deleted file mode 100644
index 04bf138..0000000
--- a/drivers/edac/maple_edac.c
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Global variables for Maple board
- *
- * Author: Benjamin Walsh <benjamin.walsh@windriver.com>
- *         Cao Qingtao <qingtao.cao@windriver.com>
- *         Hu Yongqi <yongqi.hu@windriver.com>
- * 2008 (c) Wind River Systems, Inc.
- *
- * This file is licensed under the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
- *
- */
-
-#include <linux/module.h>
-#include <linux/init.h>
-
-#define MAPLE_EDAC_REVISION	" Ver: 1.0.0 " __DATE__
-#define MAPLE_EDAC_MOD_STR	"maple_edac"
-
-int maple_edac_mc_idx;
-EXPORT_SYMBOL_GPL(maple_edac_mc_idx);
-
-int maple_edac_dev_idx;
-EXPORT_SYMBOL_GPL(maple_edac_dev_idx);
-
-static int __init maple_edac_init(void)
-{
-	maple_edac_mc_idx = 0;
-	maple_edac_dev_idx = 0;
-
-	return 0;
-}
-
-static void __exit maple_edac_exit(void)
-{
-}
-
-module_init(maple_edac_init);
-module_exit(maple_edac_exit);
-
-MODULE_LICENSE("GPL");
-MODULE_AUTHOR("Wind River (http://windriver.com) Benjamin Walsh\n");
-MODULE_DESCRIPTION("Maple EDAC module");
-
diff --git a/drivers/edac/maple_edac.h b/drivers/edac/maple_edac.h
deleted file mode 100644
index 54a6056..0000000
--- a/drivers/edac/maple_edac.h
+++ /dev/null
@@ -1,25 +0,0 @@
-/*
- * Global variables for Maple board
- *
- * Author: Benjamin Walsh <benjamin.walsh@windriver.com>
- *         Cao Qingtao <qingtao.cao@windriver.com>
- *         Hu Yongqi <yongqi.hu@windriver.com>
- * 2008 (c) Wind River Systems, Inc.
- *
- * This file is licensed under the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
- *
- */
-
-#ifndef _MAPLE_EDAC_H_
-#define _MAPLE_EDAC_H_
-
-/*
- * All EDAC modules for Maple target should share one same copy of
- * EDAC device index.
- */
-extern int maple_edac_mc_idx;
-extern int maple_edac_dev_idx;
-
-#endif /* _MAPLE_EDAC_H_*/
-- 
1.6.0.3

