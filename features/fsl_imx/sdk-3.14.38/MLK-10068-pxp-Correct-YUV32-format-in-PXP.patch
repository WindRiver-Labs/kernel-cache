From 19066e291da406dd13c66f053214a7bd460333cf Mon Sep 17 00:00:00 2001
From: Sandor Yu <R01008@freescale.com>
Date: Sun, 4 Jan 2015 14:53:07 +0800
Subject: [PATCH 0425/1594] MLK-10068 pxp: Correct YUV32 format in PXP

commit 30758cd0647cbf72834fdaccf16467ca03a2d444 from
git://git.freescale.com/imx/linux-2.6-imx.git

YUV32 format in PXP actually is VUYA,
so change format define from AYUV to VUYA.

Signed-off-by: Sandor Yu <R01008@freescale.com>
---
 drivers/dma/pxp/pxp_dma_v2.c                     |   10 +++++-----
 drivers/media/platform/mxc/output/mxc_pxp_v4l2.c |    4 ++--
 include/uapi/linux/pxp_dma.h                     |    4 ++--
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/dma/pxp/pxp_dma_v2.c b/drivers/dma/pxp/pxp_dma_v2.c
index d66abed..12a98a1 100644
--- a/drivers/dma/pxp/pxp_dma_v2.c
+++ b/drivers/dma/pxp/pxp_dma_v2.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2010-2014 Freescale Semiconductor, Inc.
+ * Copyright (C) 2010-2015 Freescale Semiconductor, Inc.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -220,7 +220,7 @@ static bool is_yuv(u32 pix_fmt)
 	    (pix_fmt == PXP_PIX_FMT_YVYU) |
 	    (pix_fmt == PXP_PIX_FMT_VYUY) |
 	    (pix_fmt == PXP_PIX_FMT_Y41P) |
-	    (pix_fmt == PXP_PIX_FMT_YUV444) |
+	    (pix_fmt == PXP_PIX_FMT_VUY444) |
 	    (pix_fmt == PXP_PIX_FMT_NV12) |
 	    (pix_fmt == PXP_PIX_FMT_NV16) |
 	    (pix_fmt == PXP_PIX_FMT_NV61) |
@@ -283,7 +283,7 @@ static void pxp_set_ctrl(struct pxps *pxp)
 	case PXP_PIX_FMT_GY04:
 		fmt_ctrl = BV_PXP_PS_CTRL_FORMAT__Y4;
 		break;
-	case PXP_PIX_FMT_YUV444:
+	case PXP_PIX_FMT_VUY444:
 		fmt_ctrl = BV_PXP_PS_CTRL_FORMAT__YUV1P444;
 		break;
 	case PXP_PIX_FMT_YUV422P:
@@ -659,7 +659,7 @@ static int pxp_set_scaling(struct pxps *pxp)
 		if (!is_yuv(s0_params->pixel_fmt) ||
 		    (s0_params->pixel_fmt == PXP_PIX_FMT_GREY) ||
 		    (s0_params->pixel_fmt == PXP_PIX_FMT_GY04) ||
-		    (s0_params->pixel_fmt == PXP_PIX_FMT_YUV444)) {
+		    (s0_params->pixel_fmt == PXP_PIX_FMT_VUY444)) {
 			if ((proc_data->srect.width > 1) &&
 			    (proc_data->drect.width > 1))
 				xscale = (proc_data->srect.width - 1) * 0x1000 /
@@ -1012,7 +1012,7 @@ static void pxp_set_s0buf(struct pxps *pxp)
 		__raw_writel(pitch >> 1,
 				pxp->base + HW_PXP_PS_PITCH);
 	else if (s0_params->pixel_fmt == PXP_PIX_FMT_RGB32 ||
-			 s0_params->pixel_fmt == PXP_PIX_FMT_YUV444)
+			 s0_params->pixel_fmt == PXP_PIX_FMT_VUY444)
 		__raw_writel(pitch << 2,
 				pxp->base + HW_PXP_PS_PITCH);
 	else if (s0_params->pixel_fmt == PXP_PIX_FMT_UYVY ||
diff --git a/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c b/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c
index 7dc8189..519271a 100644
--- a/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c
+++ b/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2010-2014 Freescale Semiconductor, Inc.
+ * Copyright (C) 2010-2015 Freescale Semiconductor, Inc.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -119,7 +119,7 @@ static unsigned int v4l2_fmt_to_pxp_fmt(u32 v4l2_pix_fmt)
 	else if (v4l2_pix_fmt == V4L2_PIX_FMT_UYVY)
 		pxp_fmt = PXP_PIX_FMT_UYVY;
 	else if (v4l2_pix_fmt == V4L2_PIX_FMT_YUV32)
-		pxp_fmt = PXP_PIX_FMT_YUV444;
+		pxp_fmt = PXP_PIX_FMT_VUY444;
 	else if (v4l2_pix_fmt == V4L2_PIX_FMT_YUYV)
 		pxp_fmt = PXP_PIX_FMT_YUYV;
 
diff --git a/include/uapi/linux/pxp_dma.h b/include/uapi/linux/pxp_dma.h
index fdba347..6aa0139 100644
--- a/include/uapi/linux/pxp_dma.h
+++ b/include/uapi/linux/pxp_dma.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2013-2014 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright (C) 2013-2015 Freescale Semiconductor, Inc. All Rights Reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -62,7 +62,7 @@ typedef unsigned char bool;
 #define PXP_PIX_FMT_VYUY    fourcc('V', 'Y', 'U', 'Y')  /*!< 16 YVU 4:2:2 */
 #define PXP_PIX_FMT_YVYU    fourcc('Y', 'V', 'Y', 'U')  /*!< 16 YVU 4:2:2 */
 #define PXP_PIX_FMT_Y41P    fourcc('Y', '4', '1', 'P')	/*!< 12 YUV 4:1:1 */
-#define PXP_PIX_FMT_YUV444  fourcc('Y', '4', '4', '4')	/*!< 24 YUV 4:4:4 */
+#define PXP_PIX_FMT_VUY444  fourcc('V', 'U', 'Y', 'A')	/*!< 32 VUYA 8:8:8 */
 /* two planes -- one Y, one Cb + Cr interleaved  */
 #define PXP_PIX_FMT_NV12    fourcc('N', 'V', '1', '2')	/* 12  Y/CbCr 4:2:0  */
 #define PXP_PIX_FMT_NV21    fourcc('N', 'V', '2', '1')	/* 12  Y/CbCr 4:2:0  */
-- 
1.7.5.4

