From 1315bcb5071f2b063d968bb93207ded580552318 Mon Sep 17 00:00:00 2001
From: Han Xu <b45815@freescale.com>
Date: Wed, 10 Jun 2015 17:14:01 -0500
Subject: [PATCH 1233/1594] MLK-11087: mtd:qspi: support DDR Quad mode for
 Macronix mx25l51245g

commit 374e8f4b518e8c9a307d3208550dfedd69d266a4 from
git://git.freescale.com/imx/linux-2.6-imx.git

Enable DDR quad mode for Macronix qspi chip mx25l51245g by setting Quad
bit in status register and enabling in dts file.

The LUT for SPINOR_OP_READ_1_4_4_D was initially designed for Spansion
qspi chip, so there is one cycle for "mode" after address and before
dummy. While Macronix qspi chip doesn't have this feature, so we just
take off one cycle in dts file to bypass this problem.

Signed-off-by: Han Xu <b45815@freescale.com>
(cherry picked from commit 2ee7cdc2b821605dbb47854238d7fc124800547a)
---
 arch/arm/boot/dts/imx7d-sdb-qspi.dts |    2 ++
 drivers/mtd/spi-nor/spi-nor.c        |   10 ++++++++++
 2 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/arch/arm/boot/dts/imx7d-sdb-qspi.dts b/arch/arm/boot/dts/imx7d-sdb-qspi.dts
index 83b0401..d49ddf2 100644
--- a/arch/arm/boot/dts/imx7d-sdb-qspi.dts
+++ b/arch/arm/boot/dts/imx7d-sdb-qspi.dts
@@ -39,6 +39,8 @@
 		#size-cells = <1>;
 		compatible = "macronix,mx25l51245g";
 		spi-max-frequency = <29000000>;
+		/* take off one dummy cycle */
+		spi-nor,ddr-quad-read-dummy = <5>;
 		reg = <0>;
 	};
 };
diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 9c9824f..c06f667 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -977,6 +977,14 @@ static int set_ddr_quad_mode(struct spi_nor *nor, struct flash_info *info)
 			return status;
 		}
 		return status;
+	case CFI_MFR_MACRONIX:
+		status = macronix_quad_enable(nor);
+		if (status) {
+			dev_err(nor->dev,
+				"Macronix DDR quad-read not enabled\n");
+			return status;
+		}
+		return status;
 	case CFI_MFR_ST: /* Micron, actually */
 		/* DTR quad read works with the Extended SPI protocol. */
 		return 0;
@@ -1180,6 +1188,8 @@ int spi_nor_scan(struct spi_nor *nor, const char *name, enum read_mode mode)
 			nor->read_opcode = SPINOR_OP_READ_1_4_4_D;
 		} else if (JEDEC_MFR(info) == CFI_MFR_ST) {
 			nor->read_opcode = SPINOR_OP_READ_1_1_4_D;
+		} else if (JEDEC_MFR(info) == CFI_MFR_MACRONIX) {
+			nor->read_opcode = SPINOR_OP_READ_1_4_4_D;
 		} else {
 			dev_err(dev, "DDR Quad Read is not supported.\n");
 			return -EINVAL;
-- 
1.7.5.4

