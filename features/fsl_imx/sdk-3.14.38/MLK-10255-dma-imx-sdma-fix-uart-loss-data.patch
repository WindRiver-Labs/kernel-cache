From 4b43cf9b71e50a768883d799bf61f31c97d49117 Mon Sep 17 00:00:00 2001
From: Robin Gong <b38343@freescale.com>
Date: Tue, 2 Jun 2015 16:31:02 +0800
Subject: [PATCH 1161/1594] MLK-10255: dma: imx-sdma: fix uart loss data

commit 4d26ef3c73b5c32828da7de78832d54ce5106357 from
git://git.freescale.com/imx/linux-2.6-imx.git

The commit(84bb134229f724f20c0696f3f87631c7a518b47e) move the code about BD
updating from tasklet to ISR to make sdma harder to stop in cyclic in case of
heavy system loading so that tasklet can't be handled in time, since ISR
handled more quickly than tasklet, but it only make things nicer, not totally
fix. The side effect of this patch is chn_real_count may be updated by new BD
interrupt while uart rx dma callback still check the last BD, thus the residue
also be broken and that may cause uart driver get the wrong rx count. This
patch just take them back and align with v3.10 kernel.

Signed-off-by: Robin Gong <b38343@freescale.com>
---
 drivers/dma/imx-sdma.c |   15 ++++++++-------
 1 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/dma/imx-sdma.c b/drivers/dma/imx-sdma.c
index c1601ab..caf1bc3 100644
--- a/drivers/dma/imx-sdma.c
+++ b/drivers/dma/imx-sdma.c
@@ -696,6 +696,8 @@ static void sdma_update_channel_loop(struct sdma_channel *sdmac)
 			sdmac->chn_real_count = bd->mode.count;
 			bd->mode.count = sdmac->chn_count;
 		}
+
+		sdma_handle_channel_loop(sdmac);
 	}
 }
 
@@ -739,9 +741,12 @@ static void sdma_tasklet(unsigned long data)
 	}
 	spin_unlock_irqrestore(&sdmac->lock, flags);
 
-	if (sdmac->flags & IMX_DMA_SG_LOOP)
-		sdma_handle_channel_loop(sdmac);
-	else
+	if (sdmac->flags & IMX_DMA_SG_LOOP) {
+		if (sdmac->peripheral_type != IMX_DMATYPE_HDMI)
+			sdma_update_channel_loop(sdmac);
+		else
+			sdma_handle_channel_loop(sdmac);
+	} else
 		mxc_sdma_handle_channel_normal(sdmac);
 }
 
@@ -759,10 +764,6 @@ static irqreturn_t sdma_int_handler(int irq, void *dev_id)
 		int channel = fls(stat) - 1;
 		struct sdma_channel *sdmac = &sdma->channel[channel];
 
-		if ((sdmac->flags & IMX_DMA_SG_LOOP) &&
-			(sdmac->peripheral_type != IMX_DMATYPE_HDMI))
-			sdma_update_channel_loop(sdmac);
-
 		spin_lock_irqsave(&sdmac->lock, flags);
 		if (sdmac->status == DMA_IN_PROGRESS || (sdmac->flags & IMX_DMA_SG_LOOP))
 			tasklet_schedule(&sdmac->tasklet);
-- 
1.7.5.4

