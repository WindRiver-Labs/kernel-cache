From 464f064bce4130bdca4a13b8fdf19060866accfb Mon Sep 17 00:00:00 2001
From: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@freescale.com>
Date: Fri, 30 Jan 2015 13:51:17 -0600
Subject: [PATCH 0321/1594] MLK-9961-2 Revert "MLK-10007-02 arm: imx: enable
 pll1 when changing arm_podf value"

commit 0f9be82982c370622f55e3d52c9ae4fc34e8cbc0 from
git://git.freescale.com/imx/linux-2.6-imx.git

This reverts commit 09bcfcabc08a57bce3000677052d5a2fcc2b1b68.

Signed-off-by: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@freescale.com>
---
 arch/arm/mach-imx/busfreq-imx6.c |   13 +------------
 arch/arm/mach-imx/clk-imx6sl.c   |    7 ++++---
 arch/arm/mach-imx/common.h       |    1 -
 3 files changed, 5 insertions(+), 16 deletions(-)

diff --git a/arch/arm/mach-imx/busfreq-imx6.c b/arch/arm/mach-imx/busfreq-imx6.c
index 0d74b96..5f7649b 100644
--- a/arch/arm/mach-imx/busfreq-imx6.c
+++ b/arch/arm/mach-imx/busfreq-imx6.c
@@ -288,13 +288,9 @@ static void enter_lpm_imx6sl(void)
 			imx_clk_set_parent(pll1_sw_clk, step_clk);
 			/*
 			 * Ensure that the clock will be
-			 * at original speed. the arm_podf can only be
-			 * changed when the pll1 output is enabled. So
-			 * enable pll1 output before change cpu_clk.
+			 * at original speed.
 			 */
-			imx6sl_enable_pll_arm(true);
 			imx_clk_set_rate(cpu_clk, org_arm_rate);
-			imx6sl_enable_pll_arm(false);
 		}
 		low_bus_freq_mode = 0;
 		ultra_low_bus_freq_mode = 0;
@@ -406,14 +402,7 @@ static void exit_lpm_imx6sl(void)
 		/* Move ARM from PLL1_SW_CLK to PLL2_400. */
 		imx_clk_set_parent(step_clk, pll2_400);
 		imx_clk_set_parent(pll1_sw_clk, step_clk);
-		/*
-		 * arm_podf can only be changed when pll1 output
-		 * is enabled. Enable pll1 output before changing
-		 * cpu_clk rate.
-		 */
-		imx6sl_enable_pll_arm(true);
 		imx_clk_set_rate(cpu_clk, org_arm_rate);
-		imx6sl_enable_pll_arm(false);
 		ultra_low_bus_freq_mode = 0;
 	}
 }
diff --git a/arch/arm/mach-imx/clk-imx6sl.c b/arch/arm/mach-imx/clk-imx6sl.c
index ef661d0..a9acde9 100644
--- a/arch/arm/mach-imx/clk-imx6sl.c
+++ b/arch/arm/mach-imx/clk-imx6sl.c
@@ -33,7 +33,6 @@
 #define BM_PLL_ARM_DIV_SELECT	(0x7f << 0)
 #define BM_PLL_ARM_POWERDOWN	(1 << 12)
 #define BM_PLL_ARM_ENABLE	(1 << 13)
-#define BM_PLL_ARM_BYPASS	(1 << 16)
 #define BM_PLL_ARM_LOCK		(1 << 31)
 #define PLL_ARM_DIV_792M	66
 
@@ -146,7 +145,7 @@ static int imx6sl_get_arm_divider_for_wait(void)
 	}
 }
 
-void imx6sl_enable_pll_arm(bool enable)
+static void imx6sl_enable_pll_arm(bool enable)
 {
 	static u32 saved_pll_arm;
 	u32 val;
@@ -154,8 +153,10 @@ void imx6sl_enable_pll_arm(bool enable)
 	if (enable) {
 		saved_pll_arm = val = readl_relaxed(anatop_base + PLL_ARM);
 		val |= BM_PLL_ARM_ENABLE;
-		val |= BM_PLL_ARM_BYPASS;
+		val &= ~BM_PLL_ARM_POWERDOWN;
 		writel_relaxed(val, anatop_base + PLL_ARM);
+		while (!(__raw_readl(anatop_base + PLL_ARM) & BM_PLL_ARM_LOCK))
+			;
 	} else {
 		 writel_relaxed(saved_pll_arm, anatop_base + PLL_ARM);
 	}
diff --git a/arch/arm/mach-imx/common.h b/arch/arm/mach-imx/common.h
index 0639d0f..e96c812 100644
--- a/arch/arm/mach-imx/common.h
+++ b/arch/arm/mach-imx/common.h
@@ -128,7 +128,6 @@ void imx_anatop_pre_suspend(void);
 void imx_anatop_post_resume(void);
 int imx6q_set_lpm(enum mxc_cpu_pwr_mode mode);
 void imx6q_set_int_mem_clk_lpm(bool enable);
-void imx6sl_enable_pll_arm(bool enable);
 void imx6sl_set_wait_clk(bool enter);
 void imx6_enet_mac_init(const char *compatible);
 int imx_mmdc_get_ddr_type(void);
-- 
1.7.5.4

