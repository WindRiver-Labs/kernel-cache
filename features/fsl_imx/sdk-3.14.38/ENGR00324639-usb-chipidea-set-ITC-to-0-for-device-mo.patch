From f8531a962e0a12adfc29a03af78c596d13ddcd04 Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Mon, 22 Sep 2014 16:45:39 +0800
Subject: [PATCH 1350/1594] ENGR00324639 usb: chipidea: set ITC to 0 for
 device mode

commit 986cd18a3406ee67b5f30d57adfd9d250bf80260 from
git://git.freescale.com/imx/linux-2.6-imx.git

ITC (Interrupt Threshold Control) is used to set the maximum rate at which
the host/device controller will issue interrupts. The default value is 8 (1ms)
for it. EHCI core will modify it to 1, but device mode keeps it as default
value.

In some use cases like this CR, it uses Android ADB to transfer data, ADB
only has one usb request for each direction, and maximum payload data is
only 4KB, so the speed is 4MB/s at most, it needs controller to trigger
interrupt as fast as possible to increase the speed. The USB performance
will be better if the interrupt can be triggered faster.

In this case, we set ITC default value as 0, which will trigger USB interrupt
immediately once the transfer has completed.

Signed-off-by: Peter Chen <peter.chen@freescale.com>
(cherry picked from commit 479fda4154b698adc4ed274ad9ff4d15f045fafe)
---
 drivers/usb/chipidea/core.c |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

diff --git a/drivers/usb/chipidea/core.c b/drivers/usb/chipidea/core.c
index ddcc656..c06b39a 100644
--- a/drivers/usb/chipidea/core.c
+++ b/drivers/usb/chipidea/core.c
@@ -492,6 +492,11 @@ int hw_device_reset(struct ci_hdrc *ci)
 	hw_write(ci, OP_USBMODE, USBMODE_SLOM, USBMODE_SLOM);
 
 	ci_hdrc_ahb_config(ci);
+	/*
+	 * Set interrupt interval for device mode as 0 (immediately),
+	 * ehci core will set it to 1 (1 Micro-frame) by default for host mode.
+	 */
+	hw_write(ci, OP_USBCMD, 0xff0000, 0);
 
 	if (hw_read(ci, OP_USBMODE, USBMODE_CM) != USBMODE_CM_DC) {
 		pr_err("cannot enter in %s device mode", ci_role(ci)->name);
-- 
1.7.5.4

