From 9c4bcfe75c7936615d3dca6f0bf8b6f2a85574eb Mon Sep 17 00:00:00 2001
From: Fugang Duan <b38611@freescale.com>
Date: Thu, 21 Aug 2014 09:11:06 +0800
Subject: [PATCH 0123/1594] ENGR00329822-05 tty: serial: imx: use delayed work
 for transmit task

commit cebc1ffb42b57c8518fe7b68aaf44b75dbba245f from
git://git.freescale.com/imx/linux-2.6-imx.git

Use delayed work to schdule the transmit work to send out the last
data to avoid that the rest of data in xmit buffer cannot be sent out.

Signed-off-by: Fugang Duan <B38611@freescale.com>
(cherry picked from commit 230562fe3d44fd0d33bddd409cf254b8c1ec43c5)
---
 drivers/tty/serial/imx.c |   11 ++++++-----
 1 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index 1d3472c..5446142 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -234,7 +234,7 @@ struct imx_port {
 	struct imx_dma_rxbuf	rx_buf;
 	unsigned int		tx_bytes;
 	unsigned int		dma_tx_nents;
-	struct work_struct	tsk_dma_tx;
+	struct delayed_work	tsk_dma_tx;
 	struct delayed_work	tsk_dma_rx;
 	wait_queue_head_t	dma_wait;
 	unsigned int            saved_reg[11];
@@ -526,7 +526,7 @@ static void dma_tx_callback(void *data)
 	if (uart_circ_chars_pending(xmit) < WAKEUP_CHARS)
 		uart_write_wakeup(&sport->port);
 
-	schedule_work(&sport->tsk_dma_tx);
+	schedule_delayed_work(&sport->tsk_dma_tx, msecs_to_jiffies(1));
 
 	if (waitqueue_active(&sport->dma_wait)) {
 		wake_up(&sport->dma_wait);
@@ -542,7 +542,8 @@ static void dma_tx_callback(void *data)
 
 static void dma_tx_work(struct work_struct *w)
 {
-	struct imx_port *sport = container_of(w, struct imx_port, tsk_dma_tx);
+	struct delayed_work *delay_work = to_delayed_work(w);
+	struct imx_port *sport = container_of(delay_work, struct imx_port, tsk_dma_tx);
 	struct circ_buf *xmit = &sport->port.state->xmit;
 	struct scatterlist *sgl = sport->tx_sgl;
 	struct dma_async_tx_descriptor *desc;
@@ -651,7 +652,7 @@ static void imx_start_tx(struct uart_port *port)
 
 		if (!uart_circ_empty(&port->state->xmit) &&
 		    !uart_tx_stopped(port))
-			schedule_work(&sport->tsk_dma_tx);
+			schedule_delayed_work(&sport->tsk_dma_tx, 0);
 		return;
 	}
 }
@@ -1202,7 +1203,7 @@ static int imx_startup(struct uart_port *port)
 		imx_uart_dma_init(sport);
 
 	if (sport->dma_is_inited) {
-		INIT_WORK(&sport->tsk_dma_tx, dma_tx_work);
+		INIT_DELAYED_WORK(&sport->tsk_dma_tx, dma_tx_work);
 		INIT_DELAYED_WORK(&sport->tsk_dma_rx, dma_rx_work);
 	}
 
-- 
1.7.5.4

