From 0622ad3e8cd2e301c2df0a264a49a488da03a2b8 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Thu, 3 Mar 2016 10:25:54 +0800
Subject: [PATCH 04/35] net: dpa: call netif_carrier_off() before register
 netdev

We need to call netif_carrier_off() before register netdev for two
reasons:
a) After register_netdev(), the net device is visible, notification
   are send to userspace, and the userspace applications may try to
   bring the interface up and see the incorrect link state before
   the phylib set the link state correctly.
b) When we up the interface, some ipv6 packets may be sent out
   imediately for DAD (duplicate address detection) process
   before the phylib set the link state correctly. This will cause
   these packets missed.

So call netif_carrier_off() to make sure the link state is down.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../ethernet/freescale/sdk_dpaa/dpaa_eth_common.c  |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c
index 1a42e70..884763f 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c
@@ -125,6 +125,7 @@ int dpa_netdev_init(struct net_device *net_dev,
 	net_dev->needed_headroom = priv->tx_headroom;
 	net_dev->watchdog_timeo = msecs_to_jiffies(tx_timeout);
 
+	netif_carrier_off(net_dev);
 	err = register_netdev(net_dev);
 	if (err < 0) {
 		dev_err(dev, "register_netdev() = %d\n", err);
-- 
1.7.5.4

