From 2703c43ee23b685bcde6dffeb7f7b21014ee7f2b Mon Sep 17 00:00:00 2001
From: Shawn Xiao <b49994@freescale.com>
Date: Mon, 4 May 2015 14:02:49 +0800
Subject: [PATCH 1047/1594] MLK-10805 GPU: immigrate the qosc configuration to
 GPU driver

commit 9d0e676f04f20b080889e3daa11ef4585865ec90 from
git://git.freescale.com/imx/linux-2.6-imx.git

Originally the qosc configuration logic is in kernel booting up
logic(mach_init) and is only needed by imx6sx soc. Its purpose is to
speed up the GPU on imx6sx. Now to make the code more integrated, move
the logic to GPU driver.

Signed-off-by: Shawn Xiao <b49994@freescale.com>
---
 arch/arm/mach-imx/mach-imx6sx.c                    |   22 -------------
 .../freescale/gc_hal_kernel_platform_imx6q14.c     |   32 ++++++++++++++++++++
 2 files changed, 32 insertions(+), 22 deletions(-)

diff --git a/arch/arm/mach-imx/mach-imx6sx.c b/arch/arm/mach-imx/mach-imx6sx.c
index a8f6bd1..2165a32 100644
--- a/arch/arm/mach-imx/mach-imx6sx.c
+++ b/arch/arm/mach-imx/mach-imx6sx.c
@@ -234,27 +234,6 @@ static const struct of_dev_auxdata imx6sx_auxdata_lookup[] __initconst = {
 	{ /* sentinel */ }
 };
 
-static inline void imx6sx_qos_init(void)
-{
-	struct device_node *np;
-	void   __iomem *src_base;
-
-	np = of_find_compatible_node(NULL, NULL, "fsl,imx6sx-gpu");
-	if (!np || !of_device_is_available(np))
-		return;
-
-	np = of_find_compatible_node(NULL, NULL, "fsl,imx6sx-qosc");
-	if (!np)
-		return;
-	src_base = of_iomap(np, 0);
-	writel_relaxed(0, src_base); /* Disable clkgate & soft_rst */
-	writel_relaxed(0, src_base+0x60); /* Enable all masters */
-	writel_relaxed(0, src_base+0x1400); /* Disable clkgate & soft_rst for gpu */
-	writel_relaxed(0x0f000222, src_base+0x1400+0xd0); /* Set Write QoS 2 for gpu */
-	writel_relaxed(0x0f000822, src_base+0x1400+0xe0); /* Set Read QoS 8 for gpu */
-	return;
-}
-
 static void __init imx6sx_init_machine(void)
 {
 	struct device *parent;
@@ -269,7 +248,6 @@ static void __init imx6sx_init_machine(void)
 	imx6sx_enet_init();
 	imx_anatop_init();
 	imx6sx_pm_init();
-	imx6sx_qos_init();
 }
 
 static void __init imx6sx_init_irq(void)
diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/platform/freescale/gc_hal_kernel_platform_imx6q14.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/platform/freescale/gc_hal_kernel_platform_imx6q14.c
index f056f00..10d7fd3 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/platform/freescale/gc_hal_kernel_platform_imx6q14.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/platform/freescale/gc_hal_kernel_platform_imx6q14.c
@@ -24,6 +24,9 @@
 #include "gc_hal_kernel_device.h"
 #include "gc_hal_driver.h"
 #include <linux/slab.h>
+#include <linux/of_platform.h>
+#include <linux/of_gpio.h>
+#include <linux/of_address.h>
 
 #if USE_PLATFORM_DRIVER
 #   include <linux/platform_device.h>
@@ -441,6 +444,34 @@ _FreePriv(
 }
 
 gceSTATUS
+_SetClock(
+    IN gckPLATFORM Platform,
+    IN gceCORE GPU,
+    IN gctBOOL Enable
+    );
+
+static void imx6sx_optimize_qosc_for_GPU(IN gckPLATFORM Platform)
+{
+	struct device_node *np;
+	void __iomem *src_base;
+
+	np = of_find_compatible_node(NULL, NULL, "fsl,imx6sx-qosc");
+	if (!np)
+		return;
+
+	src_base = of_iomap(np, 0);
+	WARN_ON(!src_base);
+    	_SetClock(Platform, gcvCORE_MAJOR, gcvTRUE); 
+	writel_relaxed(0, src_base); /* Disable clkgate & soft_rst */
+	writel_relaxed(0, src_base+0x60); /* Enable all masters */
+	writel_relaxed(0, src_base+0x1400); /* Disable clkgate & soft_rst for gpu */
+	writel_relaxed(0x0f000222, src_base+0x1400+0xd0); /* Set Write QoS 2 for gpu */
+	writel_relaxed(0x0f000822, src_base+0x1400+0xe0); /* Set Read QoS 8 for gpu */
+    	_SetClock(Platform, gcvCORE_MAJOR, gcvFALSE); 
+	return;
+}
+
+gceSTATUS
 _GetPower(
     IN gckPLATFORM Platform
     )
@@ -542,6 +573,7 @@ _GetPower(
     }
 #endif
 
+    imx6sx_optimize_qosc_for_GPU(Platform);
     return gcvSTATUS_OK;
 }
 
-- 
1.7.5.4

