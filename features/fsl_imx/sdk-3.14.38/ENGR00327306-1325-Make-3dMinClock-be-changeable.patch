From 1649c8603fdcbdeac1fb2b44139afff889471f5b Mon Sep 17 00:00:00 2001
From: Loren Huang <b02279@freescale.com>
Date: Fri, 15 Aug 2014 14:05:05 +0800
Subject: [PATCH 0708/1594] ENGR00327306 [#1325]Make 3dMinClock be changeable

commit e44215a2dfe97111ebcfea2494ec860c3bdf2abe from
git://git.freescale.com/imx/linux-2.6-imx.git

-Add sys interface for changing 3DMinClock.
This feature is blocked by vivante kernel platform change.
Sys interface /sys/bus/platform/drivers/galcore/gpu3DMinclock
 is used for configure this value.
It's important feature for thermal.

Signed-off-by: Loren Huang <b02279@freescale.com>
Acked-by: Shawn Guo
(cherry picked from commit 97ddca5893b8e15d93454de6ed45f8046a7076ed)
---
 .../hal/os/linux/kernel/gc_hal_kernel_probe.c      |   46 ++++++++++++++++++-
 1 files changed, 43 insertions(+), 3 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_probe.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_probe.c
index db9a15a..d55b623 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_probe.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_probe.c
@@ -142,8 +142,8 @@ MODULE_PARM_DESC(stuckDump, "Level of stuck dump content (1: Minimal, 2: Middle,
 static int showArgs = 0;
 module_param(showArgs, int, 0644);
 
-static int gpu3DMinClock = 1;
-module_param(gpu3DMinClock, int, 0644);
+static int initgpu3DMinClock = 1;
+module_param(initgpu3DMinClock, int, 0644);
 
 static int contiguousRequested = 0;
 
@@ -312,6 +312,38 @@ static ssize_t show_idletime(struct device_driver *dev, char *buf)
 
 static DRIVER_ATTR(idletime, S_IRUGO | S_IWUSR, show_idletime, gcvNULL);
 
+#if gcdENABLE_FSCALE_VAL_ADJUST
+static ssize_t show_gpu3DMinClock(struct device_driver *dev, char *buf)
+{
+    gctUINT currentf,minf,maxf;
+    if(galDevice->kernels[gcvCORE_MAJOR])
+    {
+         gckHARDWARE_GetFscaleValue(galDevice->kernels[gcvCORE_MAJOR]->hardware,
+            &currentf, &minf, &maxf);
+    }
+    snprintf(buf, PAGE_SIZE, "%d\n", minf);
+    return strlen(buf);
+}
+
+static ssize_t update_gpu3DMinClock(struct device_driver *dev, const char *buf, size_t count)
+{
+
+    gctINT fields;
+    gctUINT MinFscaleValue;
+   if(galDevice->kernels[gcvCORE_MAJOR])
+   {
+        fields = sscanf(buf, "%d", &MinFscaleValue);
+        if (fields < 1)
+            return -EINVAL;
+
+        gckHARDWARE_SetMinFscaleValue(galDevice->kernels[gcvCORE_MAJOR]->hardware,MinFscaleValue);
+   }
+
+    return count;
+}
+
+static DRIVER_ATTR(gpu3DMinClock, S_IRUGO | S_IWUSR, show_gpu3DMinClock, update_gpu3DMinClock);
+#endif
 void
 _UpdateModuleParam(
     gcsMODULE_PARAMETERS *Param
@@ -937,7 +969,7 @@ static int drv_init(void)
     gcsDEVICE_CONSTRUCT_ARGS args = {
         .recovery           = recovery,
         .stuckDump          = stuckDump,
-        .gpu3DMinClock      = gpu3DMinClock,
+        .gpu3DMinClock      = initgpu3DMinClock,
         .contiguousRequested = contiguousRequested,
         .platform           = &platform,
     };
@@ -1217,6 +1249,11 @@ static int __devinit gpu_probe(struct platform_device *pdev)
         if(ret)
             dev_err(&pdev->dev, "create idletime attr failed (%d)\n", ret);
 
+#if gcdENABLE_FSCALE_VAL_ADJUST
+        ret = driver_create_file(pdev->dev.driver, &driver_attr_gpu3DMinClock);
+        if(ret)
+            dev_err(&pdev->dev, "create gpu3DMinClock attr failed (%d)\n", ret);
+#endif
         gcmkFOOTER_NO();
         return ret;
     }
@@ -1236,6 +1273,9 @@ static int __devexit gpu_remove(struct platform_device *pdev)
     driver_remove_file(pdev->dev.driver, &driver_attr_meminfo);
     driver_remove_file(pdev->dev.driver, &driver_attr_pid);
     driver_remove_file(pdev->dev.driver, &driver_attr_idletime);
+#if gcdENABLE_FSCALE_VAL_ADJUST
+    driver_remove_file(pdev->dev.driver, &driver_attr_gpu3DMinClock);
+#endif
 
     drv_exit();
 
-- 
1.7.5.4

