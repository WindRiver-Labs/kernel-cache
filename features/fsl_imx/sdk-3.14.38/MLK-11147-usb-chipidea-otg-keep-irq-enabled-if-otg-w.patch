From b4ec9a3fb398b7e19d4249906321a01821a12898 Mon Sep 17 00:00:00 2001
From: Li Jun <jun.li@freescale.com>
Date: Tue, 23 Jun 2015 10:46:44 +0800
Subject: [PATCH 1473/1594] MLK-11147 usb: chipidea: otg: keep irq enabled if
 otg work had been queued

commit b924c9ee2a93f67b38b177d517415b73e8567c56 from
git://git.freescale.com/imx/linux-2.6-imx.git

If the otg work had been queued, current code will disable irq again
but the otg work will be done only once, so the irq enable and disable
cannot be balanced, this patch is to fix this.

Signed-off-by: Li Jun <b47624@freescale.com>
(cherry picked from commit 0d5c0888eaec17289e40968d7d15b92b781ed34f)
---
 drivers/usb/chipidea/otg.h |   12 +++++++-----
 1 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/usb/chipidea/otg.h b/drivers/usb/chipidea/otg.h
index 43296cd..95fa6c2 100644
--- a/drivers/usb/chipidea/otg.h
+++ b/drivers/usb/chipidea/otg.h
@@ -21,11 +21,13 @@ void ci_handle_id_switch(struct ci_hdrc *ci);
 void ci_handle_vbus_connected(struct ci_hdrc *ci);
 static inline void ci_otg_queue_work(struct ci_hdrc *ci)
 {
-	WARN_ON(!ci->wq);
-
-	disable_irq_nosync(ci->irq);
-	if (ci->wq)
-		queue_work(ci->wq, &ci->work);
+	if (ci->wq) {
+		disable_irq_nosync(ci->irq);
+		if (!queue_work(ci->wq, &ci->work))
+			enable_irq(ci->irq);
+	} else {
+		WARN_ON(!ci->wq);
+	}
 }
 
 #endif /* __DRIVERS_USB_CHIPIDEA_OTG_H */
-- 
1.7.5.4

