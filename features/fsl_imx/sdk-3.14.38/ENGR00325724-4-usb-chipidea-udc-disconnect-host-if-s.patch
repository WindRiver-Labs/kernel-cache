From 1943d7cf5b2e7563c0b7bfa1f5e13631912afb93 Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Sat, 13 Sep 2014 15:10:04 +0800
Subject: [PATCH 1343/1594] ENGR00325724-4 usb: chipidea: udc: disconnect host
 if system enters suspend

commit 160fbbdb56b4cc234e884cc36028fff1fe89e178 from
git://git.freescale.com/imx/linux-2.6-imx.git

It is better we disconnect (pulldown dp) host when the system enters
suspend if the host did not suspend bus beforehand, it can avoid
unnecessary udc suspend irq during usb enters suspend. This unexpected
suspend irq occurs due to the udc still pulls up dp, but the host
suspends bus due to it finds the device has disconnected. The device
turns off high speed terminal will be considered a disconnection event
from the host.

It also fixes the bug ENGR00325724 describes.

Signed-off-by: Peter Chen <peter.chen@freescale.com>
(cherry picked from commit 9d9ddd142cdbfb4bcbaae161a452596668441b1a)
---
 drivers/usb/chipidea/udc.c |   10 +++++++++-
 1 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/drivers/usb/chipidea/udc.c b/drivers/usb/chipidea/udc.c
index 8546a18..a30335e 100644
--- a/drivers/usb/chipidea/udc.c
+++ b/drivers/usb/chipidea/udc.c
@@ -2028,12 +2028,20 @@ static void udc_resume_from_power_lost(struct ci_hdrc *ci)
 static void udc_suspend(struct ci_hdrc *ci)
 {
 	udc_suspend_for_power_lost(ci);
+
+	if (ci->driver && ci->vbus_active &&
+			(ci->gadget.state != USB_STATE_SUSPENDED))
+		usb_gadget_disconnect(&ci->gadget);
 }
 
 static void udc_resume(struct ci_hdrc *ci, bool power_lost)
 {
-	if (power_lost)
+	if (power_lost) {
 		udc_resume_from_power_lost(ci);
+	} else {
+		if (ci->driver && ci->vbus_active)
+			usb_gadget_connect(&ci->gadget);
+	}
 }
 
 /**
-- 
1.7.5.4

