From 697828b3b2f3b971649046ae870242f08c284140 Mon Sep 17 00:00:00 2001
From: Haibo Chen <haibo.chen@freescale.com>
Date: Fri, 27 Feb 2015 16:08:41 +0800
Subject: [PATCH 0270/1594] MLK-10237-2 mmc: sdhci-esdhc-imx: add HS400 strobe
 dll support

commit 3345d7e169dcb5325916adfe67306ed55da6f738 from
git://git.freescale.com/imx/linux-2.6-imx.git

HS400 mode need to adjust the timing of strobe pad, which can make the
eMMC read operation more stable.

The USDHC has a clock generator which supplies CLK to the Device. But
for read operations, strobe pad is generated by device output circuit.
Host receives the data which is aligned to the edge of strobe pad.

When the strobe pad's clk loopback to USDHC, there exist time delay.
So adjust it before read operation, which can avoid the read error and
make read operation stable.

Signed-off-by: Haibo Chen <haibo.chen@freescale.com>
---
 drivers/mmc/host/sdhci-esdhc-imx.c |   24 ++++++++++++++++++++++++
 1 files changed, 24 insertions(+), 0 deletions(-)

diff --git a/drivers/mmc/host/sdhci-esdhc-imx.c b/drivers/mmc/host/sdhci-esdhc-imx.c
index 0926a91..20278b6 100644
--- a/drivers/mmc/host/sdhci-esdhc-imx.c
+++ b/drivers/mmc/host/sdhci-esdhc-imx.c
@@ -65,6 +65,7 @@
 /* strobe dll register */
 #define ESDHC_STROBE_DLL_CTRL	0x70
 #define ESDHC_STROBE_DLL_CTRL_ENABLE	(1 << 0)
+#define ESDHC_STROBE_DLL_CTRL_RESET		(1 << 1)
 #define ESDHC_STROBE_DLL_CTRL_SLV_DLY_TARGET_SHIFT	3
 
 #define ESDHC_STROBE_DLL_STATUS	0x74
@@ -823,6 +824,28 @@ static int esdhc_change_pinstate(struct sdhci_host *host,
 	return pinctrl_select_state(imx_data->pinctrl, pinctrl);
 }
 
+static void esdhc_set_strobe_dll(struct sdhci_host *host)
+{
+	u32 v;
+
+	/* force a reset on strobe dll */
+	writel(ESDHC_STROBE_DLL_CTRL_RESET, host->ioaddr + ESDHC_STROBE_DLL_CTRL);
+	/*
+	 * enable strobe dll ctrl and adjust the delay target
+	 * for the uSDHC loopback read clock
+	 */
+	v = ESDHC_STROBE_DLL_CTRL_ENABLE |
+		(1 << ESDHC_STROBE_DLL_CTRL_SLV_DLY_TARGET_SHIFT);
+	writel(v, host->ioaddr + ESDHC_STROBE_DLL_CTRL);
+	/* wait 1us to make sure strobe dll status register stable */
+	udelay(1);
+	v = readl(host->ioaddr + ESDHC_STROBE_DLL_STATUS);
+	if (!(v & ESDHC_STROBE_DLL_STS_REF_LOCK))
+		dev_warn(mmc_dev(host->mmc), "warning! HS400 strobe DLL status REF not lock!\n");
+	if (!(v & ESDHC_STROBE_DLL_STS_SLV_LOCK))
+		dev_warn(mmc_dev(host->mmc), "warning! HS400 strobe DLL status SLV not lock!\n");
+}
+
 static void esdhc_set_uhs_signaling(struct sdhci_host *host, unsigned timing)
 {
 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
@@ -857,6 +880,7 @@ static void esdhc_set_uhs_signaling(struct sdhci_host *host, unsigned timing)
 				ESDHC_MIX_CTRL_DDREN | ESDHC_MIX_CTRL_HS400_EN,
 				host->ioaddr + ESDHC_MIX_CTRL);
 		imx_data->is_ddr = 1;
+		esdhc_set_strobe_dll(host);
 		break;
 	}
 
-- 
1.7.5.4

