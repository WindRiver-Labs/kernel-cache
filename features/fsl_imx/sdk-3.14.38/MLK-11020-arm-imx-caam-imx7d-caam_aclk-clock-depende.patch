From 1625aa39d8c5edf0d5d817880f6d8b8b42281302 Mon Sep 17 00:00:00 2001
From: Adrian Alonso <aalonso@freescale.com>
Date: Tue, 2 Jun 2015 15:08:52 -0500
Subject: [PATCH 1568/1594] MLK-11020: arm: imx: caam: imx7d caam_aclk clock
 dependency

commit b4c3df84c2d7666c91c82903550a85489de8aa85 from
git://git.freescale.com/imx/linux-2.6-imx.git

* Add caam_aclk clock root dependency, imx7d caam
  ip module needs caam_aclk and caam_ipg clock signals
  to operate add additional clock signal.

Signed-off-by: Adrian Alonso <aalonso@freescale.com>
Signed-off-by: Dan Douglass <dan.douglass@freescale.com>
---
 arch/arm/boot/dts/imx7d.dtsi |    5 ++-
 drivers/crypto/caam/ctrl.c   |   51 +++++++++++++++++++----------------------
 2 files changed, 27 insertions(+), 29 deletions(-)

diff --git a/arch/arm/boot/dts/imx7d.dtsi b/arch/arm/boot/dts/imx7d.dtsi
index 9329d6b..5c966b5 100644
--- a/arch/arm/boot/dts/imx7d.dtsi
+++ b/arch/arm/boot/dts/imx7d.dtsi
@@ -952,8 +952,9 @@
 				reg = <0x30900000 0x40000>;
 				ranges = <0 0x30900000 0x40000>;
 				interrupts = <GIC_SPI 91 IRQ_TYPE_LEVEL_HIGH>;
-				clocks = <&clks IMX7D_CAAM_CLK>;
-				clock-names = "caam_ipg";
+				clocks = <&clks IMX7D_CAAM_CLK>,
+					<&clks IMX7D_AHB_CHANNEL_ROOT_CLK>;
+				clock-names = "caam_ipg", "caam_aclk";
 
 				sec_jr0: jr0@1000 {
 					 compatible = "fsl,sec-v4.0-job-ring";
diff --git a/drivers/crypto/caam/ctrl.c b/drivers/crypto/caam/ctrl.c
index 8973d60..d7d2c97 100644
--- a/drivers/crypto/caam/ctrl.c
+++ b/drivers/crypto/caam/ctrl.c
@@ -307,10 +307,10 @@ static int caam_remove(struct platform_device *pdev)
 #ifdef CONFIG_ARM
 	/* shut clocks off before finalizing shutdown */
 	clk_disable(ctrlpriv->caam_ipg);
-	/* imx7d only has one caam clock */
+	clk_disable(ctrlpriv->caam_aclk);
+	/* imx7d only has two caam clock */
 	if (!(of_find_compatible_node(NULL, NULL, "fsl,imx7d-caam"))) {
 		clk_disable(ctrlpriv->caam_mem);
-		clk_disable(ctrlpriv->caam_aclk);
 		clk_disable(ctrlpriv->caam_emi_slow);
 	}
 #endif
@@ -483,7 +483,27 @@ static int caam_probe(struct platform_device *pdev)
 	pr_debug("%s caam_ipg clock:%d\n", __func__,
 			 (int)clk_get_rate(ctrlpriv->caam_ipg));
 
-	/* imx7d only has one caam clock */
+	ctrlpriv->caam_aclk = devm_clk_get(&ctrlpriv->pdev->dev, "caam_aclk");
+	if (IS_ERR(ctrlpriv->caam_aclk)) {
+		ret = PTR_ERR(ctrlpriv->caam_aclk);
+		dev_err(&ctrlpriv->pdev->dev,
+			"can't identify CAAM aclk clk: %d\n", ret);
+			return -ENODEV;
+	}
+	ret = clk_prepare(ctrlpriv->caam_aclk);
+	if (ret < 0) {
+		dev_err(&pdev->dev, "can't prepare CAAM aclk clock: %d\n", ret);
+		return -ENODEV;
+	}
+	ret = clk_enable(ctrlpriv->caam_aclk);
+	if (ret < 0) {
+		dev_err(&pdev->dev, "can't enable CAAM aclk clock: %d\n", ret);
+			return -ENODEV;
+	}
+	pr_debug("%s caam_aclk clock:%d\n", __func__,
+			(int)clk_get_rate(ctrlpriv->caam_aclk));
+
+	/* imx7d only has two caam clock */
 	if (!(of_find_compatible_node(NULL, NULL, "fsl,imx7d-caam"))) {
 		ctrlpriv->caam_mem = devm_clk_get(&ctrlpriv->pdev->dev,
 						  "caam_mem");
@@ -508,30 +528,7 @@ static int caam_probe(struct platform_device *pdev)
 		}
 		pr_debug("%s caam_mem clock:%d\n", __func__,
 				 (int)clk_get_rate(ctrlpriv->caam_mem));
-		ctrlpriv->caam_aclk = devm_clk_get(&ctrlpriv->pdev->dev,
-						   "caam_aclk");
-		if (IS_ERR(ctrlpriv->caam_aclk)) {
-			ret = PTR_ERR(ctrlpriv->caam_aclk);
-			dev_err(&ctrlpriv->pdev->dev,
-					"can't identify CAAM aclk clk: %d\n",
-					ret);
-			return -ENODEV;
-		}
-		ret = clk_prepare(ctrlpriv->caam_aclk);
-		if (ret < 0) {
-			dev_err(&pdev->dev,
-					"can't prepare CAAM aclk clock: %d\n",
-					ret);
-			return -ENODEV;
-		}
-		ret = clk_enable(ctrlpriv->caam_aclk);
-		if (ret < 0) {
-			dev_err(&pdev->dev, "can't enable CAAM aclk clock: %d\n",
-					ret);
-			return -ENODEV;
-		}
-		pr_debug("%s caam_aclk clock:%d\n", __func__,
-				 (int)clk_get_rate(ctrlpriv->caam_aclk));
+
 		if (!(of_find_compatible_node(NULL, NULL, "fsl,imx6ul-caam"))) {
 			ctrlpriv->caam_emi_slow = devm_clk_get(&ctrlpriv->pdev->dev,
 							       "caam_emi_slow");
-- 
1.7.5.4

