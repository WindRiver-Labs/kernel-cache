From 87a21384e8518e4a215b8c9fae398d6f79569e1f Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Thu, 14 May 2015 19:11:40 +0800
Subject: [PATCH 1082/1594] MLK-10891 ARM: imx: improve ddr exit flow when dsm
 enter fail on i.mx7d

commit 37423c6bfada3d3d952fa873da3f262f5d888234 from
git://git.freescale.com/imx/linux-2.6-imx.git

On i.MX7D, when Mega/Fast MIX is on and system enter DSM fail,
DDR controller no need to do the retention exit flow, but just
exit self-refresh is enough.

Improve the arm register usage to make asm code easy to
read as well.

Signed-off-by: Anson Huang <b20788@freescale.com>
---
 arch/arm/mach-imx/suspend-imx7.S |   63 +++++++++++++++++++++++--------------
 1 files changed, 39 insertions(+), 24 deletions(-)

diff --git a/arch/arm/mach-imx/suspend-imx7.S b/arch/arm/mach-imx/suspend-imx7.S
index 3533886..0e93bcf 100644
--- a/arch/arm/mach-imx/suspend-imx7.S
+++ b/arch/arm/mach-imx/suspend-imx7.S
@@ -74,15 +74,15 @@
 
 #define MX7_SRC_GPR1	0x74
 #define MX7_SRC_GPR2	0x78
-#define MX7_ANATOP_CORE	0x140
+#define GPC_PGC_FM	0xa00
 #define ANADIG_SNVS_MISC_CTRL	0x380
 #define DDRC_STAT	0x4
 #define DDRC_PWRCTL	0x30
 #define DDRC_PSTAT	0x3fc
 #define DDRC_PCTRL_0	0x490
-#define DDR_DFIMISC	0x1b0
-#define DDR_SWCTL	0x320
-#define DDR_SWSTAT	0x324
+#define DDRC_DFIMISC	0x1b0
+#define DDRC_SWCTL	0x320
+#define DDRC_SWSTAT	0x324
 #define DDRPHY_LP_CON0	0x18
 
 	.align 3
@@ -187,9 +187,10 @@
 
 	.endm
 
-	/* r11 must be DDRC base address */
 	.macro ddrc_enter_self_refresh
 
+	ldr	r11, [r0, #PM_INFO_MX7_DDRC_V_OFFSET]
+
 	/* let DDR out of self-refresh */
 	ldr	r7, =0x0
 	str	r7, [r11, #DDRC_PWRCTL]
@@ -224,9 +225,12 @@
 
 	.endm
 
-	/* r11 must be DDRC base address */
 	.macro ddrc_exit_self_refresh
 
+	cmp	r5, #0x0
+	ldreq	r11, [r0, #PM_INFO_MX7_DDRC_V_OFFSET]
+	ldrne	r11, [r0, #PM_INFO_MX7_DDRC_P_OFFSET]
+
 	/* let DDR out of self-refresh */
 	ldr	r7, =0x0
 	str	r7, [r11, #DDRC_PWRCTL]
@@ -254,6 +258,8 @@
 
 	.macro ddr_enter_retention
 
+	ldr	r11, [r0, #PM_INFO_MX7_DDRC_V_OFFSET]
+
 	/* let DDR out of self-refresh */
 	ldr	r7, =0x0
 	str	r7, [r11, #DDRC_PCTRL_0]
@@ -355,7 +361,7 @@
 	ldr	r7, =0x20
 	str	r7, [r3, #DDRC_PWRCTL]
 	ldr	r7, =0x0
-	str	r7, [r3, #DDR_DFIMISC]
+	str	r7, [r3, #DDRC_DFIMISC]
 
 	/* do PHY, clear ddr_phy reset */
 	ldr	r6, =0x1000
@@ -403,13 +409,13 @@
 	cmp	r7, #0x3
 	bne	11b
 	ldr	r7, =0x0
-	str	r7, [r3, #DDR_SWCTL]
+	str	r7, [r3, #DDRC_SWCTL]
 	ldr	r7, =0x1
-	str	r7, [r3, #DDR_DFIMISC]
+	str	r7, [r3, #DDRC_DFIMISC]
 	ldr	r7, =0x1
-	str	r7, [r3, #DDR_SWCTL]
+	str	r7, [r3, #DDRC_SWCTL]
 12:
-	ldr	r7, [r3, #DDR_SWSTAT]
+	ldr	r7, [r3, #DDRC_SWSTAT]
 	and	r7, r7, #0x1
 	cmp	r7, #0x1
 	bne	12b
@@ -470,10 +476,9 @@ ENTRY(imx7_suspend)
 
 	store_ttbr1
 
-	ldr	r11, [r0, #PM_INFO_MX7_DDRC_V_OFFSET]
-	ldr	r10, [r0, #PM_INFO_MX7_GPC_V_OFFSET]
-	ldr	r5, [r10, #0xa00]
-	cmp	r5, #0
+	ldr	r11, [r0, #PM_INFO_MX7_GPC_V_OFFSET]
+	ldr	r7, [r11, #GPC_PGC_FM]
+	cmp	r7, #0
 	beq	ddr_only_self_refresh
 
 	ddr_enter_retention
@@ -490,7 +495,17 @@ ddr_retention_enter_out:
 	nop
 
 	mov	r5, #0x0
+
+	ldr	r11, [r0, #PM_INFO_MX7_GPC_V_OFFSET]
+	ldr	r7, [r11, #GPC_PGC_FM]
+	cmp	r7, #0
+	beq	wfi_ddr_self_refresh_out
+
 	ddr_exit_retention
+	b	wfi_ddr_retention_out
+wfi_ddr_self_refresh_out:
+	ddrc_exit_self_refresh
+wfi_ddr_retention_out:
 
 	restore_ttbr1
 
@@ -516,18 +531,18 @@ resume:
 	str	r7, [r11, #MX7_SRC_GPR1]
 	str	r7, [r11, #MX7_SRC_GPR2]
 
-	ldr	r11, [r0, #PM_INFO_MX7_DDRC_P_OFFSET]
-	ldr	r10, [r0, #PM_INFO_MX7_GPC_P_OFFSET]
-	ldr	r5, [r10, #0xa00]
-	cmp	r5, #0
-	beq	ddr_only_self_refresh_out
-
 	mov	r5, #0x1
+
+	ldr	r11, [r0, #PM_INFO_MX7_GPC_P_OFFSET]
+	ldr	r7, [r11, #GPC_PGC_FM]
+	cmp	r7, #0
+	beq	dsm_ddr_self_refresh_out
+
 	ddr_exit_retention
-	b	ddr_retention_exit_out
-ddr_only_self_refresh_out:
+	b	dsm_ddr_retention_out
+dsm_ddr_self_refresh_out:
 	ddrc_exit_self_refresh
-ddr_retention_exit_out:
+dsm_ddr_retention_out:
 
 	mov	pc, lr
 ENDPROC(imx7_suspend)
-- 
1.7.5.4

