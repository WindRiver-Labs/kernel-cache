From 1a219df372010049e6b93be7170249118c82ff56 Mon Sep 17 00:00:00 2001
From: Oliver Brown <oliver.brown@freescale.com>
Date: Thu, 23 Oct 2014 18:11:29 -0500
Subject: [PATCH 0703/1594] MLK-9772-5 Fix kernel dump message in
 mxc_v4l2_probe.

commit e10687f0d061af7be1614a0334dd0d23f8d2c22b from
git://git.freescale.com/imx/linux-2.6-imx.git

Fix the kernel dump in mxc_v4l2_probe()

------------[ cut here ]------------
WARNING: CPU: 0 PID: 1 at drivers/media/v4l2-core/v4l2-dev.c:780 __video_register_device+0xefc/0xf90()
Modules linked in:
CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.14.17-00964-geeb68eb #26
[<80014dec>] (unwind_backtrace) from [<80011858>] (show_stack+0x10/0x14)
[<80011858>] (show_stack) from [<80672df8>] (dump_stack+0x78/0xc0)
[<80672df8>] (dump_stack) from [<8002ae6c>] (warn_slowpath_common+0x68/0x8c)
[<8002ae6c>] (warn_slowpath_common) from [<8002af2c>] (warn_slowpath_null+0x1c/0x24)
[<8002af2c>] (warn_slowpath_null) from [<8042e15c>] (__video_register_device+0xefc/0xf90)
[<8042e15c>] (__video_register_device) from [<80454eec>] (mxc_v4l2_probe+0x334/0x4a8)
[<80454eec>] (mxc_v4l2_probe) from [<80315dec>] (platform_drv_probe+0x2c/0x5c)
[<80315dec>] (platform_drv_probe) from [<8031461c>] (driver_probe_device+0x120/0x260)
[<8031461c>] (driver_probe_device) from [<8031482c>] (__driver_attach+0x8c/0x90)
[<8031482c>] (__driver_attach) from [<80312c2c>] (bus_for_each_dev+0x60/0x94)
[<80312c2c>] (bus_for_each_dev) from [<80313dd8>] (bus_add_driver+0x140/0x1ec)
[<80313dd8>] (bus_add_driver) from [<80314df8>] (driver_register+0x78/0xf8)
[<80314df8>] (driver_register) from [<80cbe304>] (camera_init+0x10/0x34)
[<80cbe304>] (camera_init) from [<800088cc>] (do_one_initcall+0xe8/0x144)
[<800088cc>] (do_one_initcall) from [<80c8fc04>] (kernel_init_freeable+0x104/0x1c8)
[<80c8fc04>] (kernel_init_freeable) from [<8066ed60>] (kernel_init+0x8/0xec)
[<8066ed60>] (kernel_init) from [<8000e5f8>] (ret_from_fork+0x14/0x3c)
---[ end trace c868dc620cb4d626 ]---
------------[ cut here ]------------

Signed-off-by: Oliver Brown <oliver.brown@freescale.com>
---
 .../media/platform/mxc/capture/mxc_v4l2_capture.c  |   23 +++++++++++++++++++-
 1 files changed, 22 insertions(+), 1 deletions(-)

diff --git a/drivers/media/platform/mxc/capture/mxc_v4l2_capture.c b/drivers/media/platform/mxc/capture/mxc_v4l2_capture.c
index 6bf0657..31942f7 100644
--- a/drivers/media/platform/mxc/capture/mxc_v4l2_capture.c
+++ b/drivers/media/platform/mxc/capture/mxc_v4l2_capture.c
@@ -38,6 +38,7 @@
 #include <linux/of_device.h>
 #include <media/v4l2-chip-ident.h>
 #include <media/v4l2-ioctl.h>
+#include <media/v4l2-device.h>
 #include "v4l2-int-device.h"
 #include <linux/fsl_devices.h>
 #include "mxc_v4l2_capture.h"
@@ -2623,6 +2624,7 @@ static int init_camera_struct(cam_data *cam, struct platform_device *pdev)
 	struct device_node *np = pdev->dev.of_node;
 	int ipu_id, csi_id, mclk_source;
 	int ret = 0;
+	struct v4l2_device *v4l2_dev;
 
 	pr_debug("In MVC: init_camera_struct\n");
 
@@ -2677,6 +2679,21 @@ static int init_camera_struct(cam_data *cam, struct platform_device *pdev)
 	dev_set_drvdata(&pdev->dev, (void *)cam);
 	cam->video_dev->minor = -1;
 
+	v4l2_dev = kzalloc(sizeof(*v4l2_dev), GFP_KERNEL);
+	if (!v4l2_dev) {
+		dev_err(&pdev->dev, "failed to allocate v4l2_dev structure\n");
+		video_device_release(cam->video_dev);
+		return -ENOMEM;
+	}
+
+	if (v4l2_device_register(&pdev->dev, v4l2_dev) < 0) {
+		dev_err(&pdev->dev, "register v4l2 device failed\n");
+		video_device_release(cam->video_dev);
+		kfree(v4l2_dev);
+		return -ENODEV;
+	}
+	cam->video_dev->v4l2_dev = v4l2_dev;
+
 	init_waitqueue_head(&cam->enc_queue);
 	init_waitqueue_head(&cam->still_queue);
 
@@ -2799,7 +2816,7 @@ static int mxc_v4l2_probe(struct platform_device *pdev)
 
 	/* register v4l video device */
 	if (video_register_device(cam->video_dev, VFL_TYPE_GRABBER, video_nr)
-	    == -1) {
+		< 0) {
 		kfree(cam);
 		cam = NULL;
 		pr_err("ERROR: v4l2 capture: video_register_device failed\n");
@@ -2842,6 +2859,7 @@ static int mxc_v4l2_remove(struct platform_device *pdev)
 			"-- setting ops to NULL\n");
 		return -EBUSY;
 	} else {
+		struct v4l2_device *v4l2_dev = cam->video_dev->v4l2_dev;
 		device_remove_file(&cam->video_dev->dev,
 			&dev_attr_fsl_v4l2_capture_property);
 		device_remove_file(&cam->video_dev->dev,
@@ -2855,6 +2873,9 @@ static int mxc_v4l2_remove(struct platform_device *pdev)
 
 		mxc_free_frame_buf(cam);
 		kfree(cam);
+
+		v4l2_device_unregister(v4l2_dev);
+		kfree(v4l2_dev);
 	}
 
 	pr_info("V4L2 unregistering video\n");
-- 
1.7.5.4

