From d03f92d841d2ca1d9fcf2ad43aff55149fddb47d Mon Sep 17 00:00:00 2001
From: Richard Zhu <Richard.Zhu@freescale.com>
Date: Fri, 17 Apr 2015 13:39:11 +0800
Subject: [PATCH 0979/1594] MLK-10610-2 gpio: 74x164: add the runtime pm

commit 0a1d9489aa8dbe78b996a88a22a46bfff3585f24 from
git://git.freescale.com/imx/linux-2.6-imx.git

Since the spi expansion gpio maybe manipulated,
during spi driver is suspend.
Such as the PCIE_RST_B on imx7d sdb board.
Add runtime pm into spi expansion gpio driver

Signed-off-by: Gao Pan <b54642@freescale.com>
Signed-off-by: Richard Zhu <Richard.Zhu@freescale.com>
---
 drivers/gpio/gpio-74x164.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/drivers/gpio/gpio-74x164.c b/drivers/gpio/gpio-74x164.c
index da83978..6bc0497 100644
--- a/drivers/gpio/gpio-74x164.c
+++ b/drivers/gpio/gpio-74x164.c
@@ -16,6 +16,7 @@
 #include <linux/of_gpio.h>
 #include <linux/slab.h>
 #include <linux/module.h>
+#include <linux/pm_runtime.h>
 
 #define GEN_74X164_NUMBER_GPIOS	8
 
@@ -73,9 +74,11 @@ static int gen_74x164_get_value(struct gpio_chip *gc, unsigned offset)
 	u8 pin = offset % 8;
 	int ret;
 
+	pm_runtime_get_sync(gc->dev);
 	mutex_lock(&chip->lock);
 	ret = (chip->buffer[bank] >> pin) & 0x1;
 	mutex_unlock(&chip->lock);
+	pm_runtime_put(gc->dev);
 
 	return ret;
 }
@@ -87,6 +90,7 @@ static void gen_74x164_set_value(struct gpio_chip *gc,
 	u8 bank = offset / 8;
 	u8 pin = offset % 8;
 
+	pm_runtime_get_sync(gc->dev);
 	mutex_lock(&chip->lock);
 	if (val)
 		chip->buffer[bank] |= (1 << pin);
@@ -95,6 +99,7 @@ static void gen_74x164_set_value(struct gpio_chip *gc,
 
 	__gen_74x164_write_config(chip);
 	mutex_unlock(&chip->lock);
+	pm_runtime_put(gc->dev);
 }
 
 static int gen_74x164_direction_output(struct gpio_chip *gc,
@@ -109,6 +114,7 @@ static int gen_74x164_probe(struct spi_device *spi)
 	struct gen_74x164_chip *chip;
 	int ret;
 
+	pm_runtime_enable(&spi->dev);
 	/*
 	 * bits_per_word cannot be configured in platform data
 	 */
@@ -171,6 +177,7 @@ static int gen_74x164_remove(struct spi_device *spi)
 {
 	struct gen_74x164_chip *chip = spi_get_drvdata(spi);
 
+	pm_runtime_disable(&spi->dev);
 	gpiochip_remove(&chip->gpio_chip);
 	mutex_destroy(&chip->lock);
 
-- 
1.7.5.4

