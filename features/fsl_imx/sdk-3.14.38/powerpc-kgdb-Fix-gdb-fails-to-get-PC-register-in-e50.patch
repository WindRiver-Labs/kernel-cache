From 1b052cccfbbf2d2772ba539f0dd0087ecaa206e6 Mon Sep 17 00:00:00 2001
From: Bin Jiang <bin.jiang@windriver.com>
Date: Tue, 28 Jan 2014 17:50:08 +0800
Subject: [PATCH 30/35] powerpc/kgdb: Fix gdb fails to get PC register in
 e500mc

gdb can't single-step since it fails to get PC.

kgdb send message including PC to gdb, but the address to store PC is
wrong. So gdb fails to get it.

In e500mc, each FP register is 64-bit nor 32-bit which is only used for
e500 SPE.
In message sent to gdb, the PC is stored behind FP. So the wrong size of
FP makes PC stored in wrong address.

Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
---
 arch/powerpc/kernel/kgdb.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/arch/powerpc/kernel/kgdb.c b/arch/powerpc/kernel/kgdb.c
index 58333cc..c74608a 100644
--- a/arch/powerpc/kernel/kgdb.c
+++ b/arch/powerpc/kernel/kgdb.c
@@ -260,7 +260,7 @@ void sleeping_thread_to_gdb_regs(unsigned long *gdb_regs, struct task_struct *p)
 #define GDB_SIZEOF_REG sizeof(unsigned long)
 #define GDB_SIZEOF_REG_U32 sizeof(u32)
 
-#ifdef CONFIG_FSL_BOOKE
+#if defined(CONFIG_FSL_BOOKE) && defined(CONFIG_SPE)
 #define GDB_SIZEOF_FLOAT_REG sizeof(unsigned long)
 #else
 #define GDB_SIZEOF_FLOAT_REG sizeof(u64)
-- 
1.7.5.4

