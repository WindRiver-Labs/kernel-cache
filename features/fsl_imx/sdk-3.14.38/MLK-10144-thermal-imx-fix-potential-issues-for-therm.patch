From 7945ef0115d67d28562bdb0fb0d3373c5daa098a Mon Sep 17 00:00:00 2001
From: Bai Ping <b51503@freescale.com>
Date: Mon, 26 Jan 2015 21:39:33 +0800
Subject: [PATCH 0414/1594] MLK-10144 thermal: imx: fix potential issues for
 thermal driver

commit 6eb520ed12ab586b157c1403e98aeca46faaaaff from
git://git.freescale.com/imx/linux-2.6-imx.git

this patch fixes the thermal_zone read failed error for i.MX6SX TO 1.2 and
temp value invalid error when changing the critical trip point temp.

Signed-off-by: Bai Ping <b51503@freescale.com>
---
 drivers/thermal/imx_thermal.c |   11 +++++------
 1 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/thermal/imx_thermal.c b/drivers/thermal/imx_thermal.c
index ea0ccce..77eab2c 100644
--- a/drivers/thermal/imx_thermal.c
+++ b/drivers/thermal/imx_thermal.c
@@ -166,10 +166,10 @@ static int imx_get_temp(struct thermal_zone_device *tz, unsigned long *temp)
 	 * According to the temp sensor designers, it may require up to ~17us
 	 * to complete a measurement.
 	 */
-	if (wait)
+	if (wait) {
 		usleep_range(20, 50);
-
-	regmap_read(map, TEMPSENSE0, &val);
+		regmap_read(map, TEMPSENSE0, &val);
+	}
 
 	if (data->mode != THERMAL_DEVICE_ENABLED) {
 		regmap_write(map, TEMPSENSE0 + REG_CLR, TEMPSENSE0_MEASURE_TEMP);
@@ -292,9 +292,6 @@ static int imx_set_trip_temp(struct thermal_zone_device *tz, int trip,
 {
 	struct imx_thermal_data *data = tz->devdata;
 
-	if (temp > IMX_TEMP_PASSIVE)
-		return -EINVAL;
-
 	if (trip == IMX_TRIP_CRITICAL) {
 		data->temp_critical = temp;
 		if (data->socdata->version == TEMPMON_IMX6SX)
@@ -302,6 +299,8 @@ static int imx_set_trip_temp(struct thermal_zone_device *tz, int trip,
 	}
 
 	if (trip == IMX_TRIP_PASSIVE) {
+		if (temp > IMX_TEMP_PASSIVE)
+			return -EINVAL;
 		data->temp_passive = temp;
 		imx_set_alarm_temp(data, temp);
 	}
-- 
1.7.5.4

