From af06133237035e81360dd924fc0c8a3fa44c1eef Mon Sep 17 00:00:00 2001
From: Sandor Yu <R01008@freescale.com>
Date: Wed, 10 Jun 2015 18:26:40 +0800
Subject: [PATCH 1229/1594] MLK-11083: ov5640 mipi: Fix build error

commit a68744a5b95fc7376e517c1da5d61420c623066c from
git://git.freescale.com/imx/linux-2.6-imx.git

Build error when ov5640 mipi driver build as build-in:
drivers/media/platform/mxc/subdev/built-in.o: In function
`OV5640_get_HTS':
:(.text+0x5d08): multiple definition of `OV5640_get_HTS'
drivers/media/platform/mxc/capture/built-in.o::(.text+0x6228): first
defined here
drivers/media/platform/mxc/subdev/built-in.o: In function
`OV5640_get_light_freq':
:(.text+0x5e6c): multiple definition of `OV5640_get_light_freq'
drivers/media/platform/mxc/capture/built-in.o::(.text+0x638c): first
defined here
drivers/media/platform/mxc/subdev/built-in.o: In function `binning_on':
:(.text+0x6bb4): multiple definition of `binning_on'

It is cause by ov5640 mipi global function name conflict,
Add static property to these functions to fix the issue.

Signed-off-by: Sandor Yu <R01008@freescale.com>
(cherry picked from commit 3826c16be99c1d1a432f914ca09808f0d4591edb)
---
 drivers/media/platform/mxc/capture/ov5640_mipi.c |   32 +++++++++++-----------
 drivers/media/platform/mxc/subdev/ov5640_mipi.c  |   32 +++++++++++-----------
 2 files changed, 32 insertions(+), 32 deletions(-)

diff --git a/drivers/media/platform/mxc/capture/ov5640_mipi.c b/drivers/media/platform/mxc/capture/ov5640_mipi.c
index 19c8107..ec813a6 100644
--- a/drivers/media/platform/mxc/capture/ov5640_mipi.c
+++ b/drivers/media/platform/mxc/capture/ov5640_mipi.c
@@ -817,18 +817,18 @@ static s32 ov5640_read_reg(u16 reg, u8 *val)
 static int prev_sysclk, prev_HTS;
 static int AE_low, AE_high, AE_Target = 52;
 
-void OV5640_stream_on(void)
+static void OV5640_stream_on(void)
 {
 	ov5640_write_reg(0x4202, 0x00);
 }
 
-void OV5640_stream_off(void)
+static void OV5640_stream_off(void)
 {
 	ov5640_write_reg(0x4202, 0x0f);
 }
 
 
-int OV5640_get_sysclk(void)
+static int OV5640_get_sysclk(void)
 {
 	 /* calculate sysclk */
 	int xvclk = ov5640_data.mclk / 10000;
@@ -867,7 +867,7 @@ int OV5640_get_sysclk(void)
 	return sysclk;
 }
 
-void OV5640_set_night_mode(void)
+static void OV5640_set_night_mode(void)
 {
 	 /* read HTS from register settings */
 	u8 mode;
@@ -877,7 +877,7 @@ void OV5640_set_night_mode(void)
 	ov5640_write_reg(0x3a00, mode);
 }
 
-int OV5640_get_HTS(void)
+static int OV5640_get_HTS(void)
 {
 	 /* read HTS from register settings */
 	int HTS;
@@ -889,7 +889,7 @@ int OV5640_get_HTS(void)
 	return HTS;
 }
 
-int OV5640_get_VTS(void)
+static int OV5640_get_VTS(void)
 {
 	 /* read VTS from register settings */
 	int VTS;
@@ -903,7 +903,7 @@ int OV5640_get_VTS(void)
 	return VTS;
 }
 
-int OV5640_set_VTS(int VTS)
+static int OV5640_set_VTS(int VTS)
 {
 	 /* write VTS to registers */
 	 int temp;
@@ -917,7 +917,7 @@ int OV5640_set_VTS(int VTS)
 	 return 0;
 }
 
-int OV5640_get_shutter(void)
+static int OV5640_get_shutter(void)
 {
 	 /* read shutter, in number of line period */
 	int shutter;
@@ -930,7 +930,7 @@ int OV5640_get_shutter(void)
 	 return shutter;
 }
 
-int OV5640_set_shutter(int shutter)
+static int OV5640_set_shutter(int shutter)
 {
 	 /* write shutter, in number of line period */
 	 int temp;
@@ -951,7 +951,7 @@ int OV5640_set_shutter(int shutter)
 	 return 0;
 }
 
-int OV5640_get_gain16(void)
+static int OV5640_get_gain16(void)
 {
 	 /* read gain, 16 = 1x */
 	int gain16;
@@ -963,7 +963,7 @@ int OV5640_get_gain16(void)
 	return gain16;
 }
 
-int OV5640_set_gain16(int gain16)
+static int OV5640_set_gain16(int gain16)
 {
 	/* write gain, 16 = 1x */
 	u8 temp;
@@ -978,7 +978,7 @@ int OV5640_set_gain16(int gain16)
 	return 0;
 }
 
-int OV5640_get_light_freq(void)
+static int OV5640_get_light_freq(void)
 {
 	/* get banding filter value */
 	int temp, temp1, light_freq = 0;
@@ -1009,7 +1009,7 @@ int OV5640_get_light_freq(void)
 	return light_freq;
 }
 
-void OV5640_set_bandingfilter(void)
+static void OV5640_set_bandingfilter(void)
 {
 	int prev_VTS;
 	int band_step60, max_band60, band_step50, max_band50;
@@ -1040,7 +1040,7 @@ void OV5640_set_bandingfilter(void)
 	ov5640_write_reg(0x3a0e, max_band50);
 }
 
-int OV5640_set_AE_target(int target)
+static int OV5640_set_AE_target(int target)
 {
 	/* stable in high */
 	int fast_high, fast_low;
@@ -1063,7 +1063,7 @@ int OV5640_set_AE_target(int target)
 	return 0;
 }
 
-void OV5640_turn_on_AE_AG(int enable)
+static void OV5640_turn_on_AE_AG(int enable)
 {
 	u8 ae_ag_ctrl;
 
@@ -1078,7 +1078,7 @@ void OV5640_turn_on_AE_AG(int enable)
 	ov5640_write_reg(0x3503, ae_ag_ctrl);
 }
 
-bool binning_on(void)
+static bool binning_on(void)
 {
 	u8 temp;
 	ov5640_read_reg(0x3821, &temp);
diff --git a/drivers/media/platform/mxc/subdev/ov5640_mipi.c b/drivers/media/platform/mxc/subdev/ov5640_mipi.c
index 167f3cd..61771c5 100644
--- a/drivers/media/platform/mxc/subdev/ov5640_mipi.c
+++ b/drivers/media/platform/mxc/subdev/ov5640_mipi.c
@@ -861,18 +861,18 @@ static s32 ov5640_read_reg(u16 reg, u8 *val)
 static int prev_sysclk, prev_HTS;
 static int AE_low, AE_high, AE_Target = 52;
 
-void OV5640_stream_on(void)
+static void OV5640_stream_on(void)
 {
 	ov5640_write_reg(0x4202, 0x00);
 }
 
-void OV5640_stream_off(void)
+static void OV5640_stream_off(void)
 {
 	ov5640_write_reg(0x4202, 0x0f);
 }
 
 
-int OV5640_get_sysclk(void)
+static int OV5640_get_sysclk(void)
 {
 	 /* calculate sysclk */
 	int xvclk = ov5640_data.mclk / 10000;
@@ -911,7 +911,7 @@ int OV5640_get_sysclk(void)
 	return sysclk;
 }
 
-void OV5640_set_night_mode(void)
+static void OV5640_set_night_mode(void)
 {
 	 /* read HTS from register settings */
 	u8 mode;
@@ -921,7 +921,7 @@ void OV5640_set_night_mode(void)
 	ov5640_write_reg(0x3a00, mode);
 }
 
-int OV5640_get_HTS(void)
+static int OV5640_get_HTS(void)
 {
 	 /* read HTS from register settings */
 	int HTS;
@@ -933,7 +933,7 @@ int OV5640_get_HTS(void)
 	return HTS;
 }
 
-int OV5640_get_VTS(void)
+static int OV5640_get_VTS(void)
 {
 	 /* read VTS from register settings */
 	int VTS;
@@ -947,7 +947,7 @@ int OV5640_get_VTS(void)
 	return VTS;
 }
 
-int OV5640_set_VTS(int VTS)
+static int OV5640_set_VTS(int VTS)
 {
 	 /* write VTS to registers */
 	 int temp;
@@ -961,7 +961,7 @@ int OV5640_set_VTS(int VTS)
 	 return 0;
 }
 
-int OV5640_get_shutter(void)
+static int OV5640_get_shutter(void)
 {
 	 /* read shutter, in number of line period */
 	int shutter;
@@ -974,7 +974,7 @@ int OV5640_get_shutter(void)
 	 return shutter;
 }
 
-int OV5640_set_shutter(int shutter)
+static int OV5640_set_shutter(int shutter)
 {
 	 /* write shutter, in number of line period */
 	 int temp;
@@ -995,7 +995,7 @@ int OV5640_set_shutter(int shutter)
 	 return 0;
 }
 
-int OV5640_get_gain16(void)
+static int OV5640_get_gain16(void)
 {
 	 /* read gain, 16 = 1x */
 	int gain16;
@@ -1007,7 +1007,7 @@ int OV5640_get_gain16(void)
 	return gain16;
 }
 
-int OV5640_set_gain16(int gain16)
+static int OV5640_set_gain16(int gain16)
 {
 	/* write gain, 16 = 1x */
 	u8 temp;
@@ -1022,7 +1022,7 @@ int OV5640_set_gain16(int gain16)
 	return 0;
 }
 
-int OV5640_get_light_freq(void)
+static int OV5640_get_light_freq(void)
 {
 	/* get banding filter value */
 	int temp, temp1, light_freq = 0;
@@ -1053,7 +1053,7 @@ int OV5640_get_light_freq(void)
 	return light_freq;
 }
 
-void OV5640_set_bandingfilter(void)
+static void OV5640_set_bandingfilter(void)
 {
 	int prev_VTS;
 	int band_step60, max_band60, band_step50, max_band50;
@@ -1084,7 +1084,7 @@ void OV5640_set_bandingfilter(void)
 	ov5640_write_reg(0x3a0e, max_band50);
 }
 
-int OV5640_set_AE_target(int target)
+static int OV5640_set_AE_target(int target)
 {
 	/* stable in high */
 	int fast_high, fast_low;
@@ -1107,7 +1107,7 @@ int OV5640_set_AE_target(int target)
 	return 0;
 }
 
-void OV5640_turn_on_AE_AG(int enable)
+static void OV5640_turn_on_AE_AG(int enable)
 {
 	u8 ae_ag_ctrl;
 
@@ -1122,7 +1122,7 @@ void OV5640_turn_on_AE_AG(int enable)
 	ov5640_write_reg(0x3503, ae_ag_ctrl);
 }
 
-bool binning_on(void)
+static bool binning_on(void)
 {
 	u8 temp;
 	ov5640_read_reg(0x3821, &temp);
-- 
1.7.5.4

