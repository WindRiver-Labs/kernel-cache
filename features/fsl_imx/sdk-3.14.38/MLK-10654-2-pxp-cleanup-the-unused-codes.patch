From fecae7b4ccea4db0f89f0c67d866c3a425a7e53a Mon Sep 17 00:00:00 2001
From: Robby Cai <r63905@freescale.com>
Date: Tue, 14 Apr 2015 16:41:55 +0800
Subject: [PATCH 0258/1594] MLK-10654-2 pxp: cleanup the unused codes

commit 0d8f3aa2289068477f0e9f17ef6549af9558469a from
git://git.freescale.com/imx/linux-2.6-imx.git

- remove the unused codes
- replace the C99 // comment style
- no functional change

Signed-off-by: Robby Cai <r63905@freescale.com>
---
 drivers/dma/pxp/pxp_dma_v3.c |   59 +++++++++++++++---------------------------
 1 files changed, 21 insertions(+), 38 deletions(-)

diff --git a/drivers/dma/pxp/pxp_dma_v3.c b/drivers/dma/pxp/pxp_dma_v3.c
index a5e2461..c68f010 100644
--- a/drivers/dma/pxp/pxp_dma_v3.c
+++ b/drivers/dma/pxp/pxp_dma_v3.c
@@ -2923,39 +2923,26 @@ static void pxp_wfe_b_configure(struct pxps *pxp)
 		pxp->base + HW_PXP_WFE_B_CTRL);
 }
 
-// wfe b processing
-// use wfe b to process an update
-// call this function only after pxp_wfe_a_processing
-// x,y,width,height:
-//         coordinate and size of the update region
-// twb:
-//         temp working buffer, 16bpp
-//         only used when reagl_en is 1
-// wb:
-//         working buffer, 16bpp
-// lut:
-//         lut buffer, 8bpp
-// lut_update:
-//         0 - wfe_b is used for reagl/reagl-d operation
-//         1 - wfe_b is used for lut update operation
-// reagl_d_en:
-//         0 - use reagl waveform algorithm
-//         1 - use reagl/-d waveform algorithm
+/* wfe b processing
+ * use wfe b to process an update
+ * call this function only after pxp_wfe_a_processing
+ * x,y,width,height:
+ *         coordinate and size of the update region
+ * twb:
+ *         temp working buffer, 16bpp
+ *         only used when reagl_en is 1
+ * wb:
+ *         working buffer, 16bpp
+ * lut:
+ *         lut buffer, 8bpp
+ * lut_update:
+ *         0 - wfe_b is used for reagl/reagl-d operation
+ *         1 - wfe_b is used for lut update operation
+ * reagl_d_en:
+ *         0 - use reagl waveform algorithm
+ *         1 - use reagl/-d waveform algorithm
+ */
 static void pxp_wfe_b_process(struct pxps *pxp)
-/*
-         u32 x,
-         u32 y,
-         u32 width,
-         u32 height,
-         u32 twb,
-         u32 twb_pitch,
-         u32 wb,
-         u32 wb_pitch,
-         u32 lut,
-         u32 lut_pitch,
-         u32 lut_update,
-         u32 reagl_d_en
-*/
 {
 	struct pxp_config_data *config_data = &pxp->pxp_conf_state;
 	struct pxp_proc_data *proc_data = &config_data->proc_data;
@@ -3561,13 +3548,11 @@ static void dither_prefetch_config(struct pxps *pxp)
 			BF_PXP_DITHER_FETCH_CTRL_CH1_BLOCK_16(0)|
 			BF_PXP_DITHER_FETCH_CTRL_CH1_HANDSHAKE_EN(0) |
 			BF_PXP_DITHER_FETCH_CTRL_CH1_BYPASS_PIXEL_EN(0) |
-			// BF_PXP_DITHER_FETCH_CTRL_CH1_HIGH_BYTE(0) |
 			BF_PXP_DITHER_FETCH_CTRL_CH1_HFLIP(0) |
 			BF_PXP_DITHER_FETCH_CTRL_CH1_VFLIP(0) |
 			BF_PXP_DITHER_FETCH_CTRL_CH1_ROTATION_ANGLE(0) |
 			BF_PXP_DITHER_FETCH_CTRL_CH1_RD_NUM_BYTES(2) |
 			BF_PXP_DITHER_FETCH_CTRL_CH1_HANDSHAKE_SCAN_LINE_NUM(0),
-			// BF_PXP_DITHER_FETCH_CTRL_CH1_ARBIT_EN(0)
 			pxp->base + HW_PXP_DITHER_FETCH_CTRL_CH1);
 
 	__raw_writel(
@@ -3697,7 +3682,6 @@ static void dither_store_config(struct pxps *pxp)
 			BF_PXP_DITHER_STORE_CTRL_CH1_STORE_MEMORY_EN(1)|
 			BF_PXP_DITHER_STORE_CTRL_CH1_PACK_IN_SEL(0)|
 			BF_PXP_DITHER_STORE_CTRL_CH1_WR_NUM_BYTES(32),
-			//              ARBIT_EN(0)
 			pxp->base + HW_PXP_DITHER_STORE_CTRL_CH1);
 
 	__raw_writel(
@@ -3818,7 +3802,7 @@ static void pxp_dithering_process(struct pxps *pxp)
 
 	__raw_writel(
 			BF_PXP_INIT_MEM_CTRL_ADDR(0) |
-			BF_PXP_INIT_MEM_CTRL_SELECT(0) |//select the lut memory for access
+			BF_PXP_INIT_MEM_CTRL_SELECT(0) |/*select the lut memory for access */
 			BF_PXP_INIT_MEM_CTRL_START(1),
 			pxp->base + HW_PXP_INIT_MEM_CTRL);
 
@@ -3833,7 +3817,7 @@ static void pxp_dithering_process(struct pxps *pxp)
 
 	__raw_writel(
 			BF_PXP_INIT_MEM_CTRL_ADDR(0) |
-			BF_PXP_INIT_MEM_CTRL_SELECT(0) |//select the lut memory for access
+			BF_PXP_INIT_MEM_CTRL_SELECT(0) |/*select the lut memory for access*/
 			BF_PXP_INIT_MEM_CTRL_START(0),
 			pxp->base + HW_PXP_INIT_MEM_CTRL);
 
@@ -4453,7 +4437,6 @@ static struct platform_driver pxp_driver = {
 	.remove = pxp_remove,
 };
 
-//module_platform_driver(pxp_driver);
 static int __init pxp_init(void)
 {
         return platform_driver_register(&pxp_driver);
-- 
1.7.5.4

