From 4456195cf63952f44c8afbea26b1ef5218a03773 Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Fri, 5 Jun 2015 14:17:02 +0800
Subject: [PATCH 1186/1594] MLK-11024 ARM: imx: make sure DDRC in self-refresh
 before entering DSM mode

commit 4add430b0c14507222c570ab7d3adff3b0f481c4 from
git://git.freescale.com/imx/linux-2.6-imx.git

DDRC has no handshake with GPC, so before entering DSM mode,
need to make sure DDRC is in self-refresh. MEM mode suspend
already meet this requirement, but for STANDBY mode suspend,
we did NOT do anything about DDRC which is NOT correct, it
will cause system crash if the standby time is too long.

This patch adds the DDRC enter/exit self-refresh before/after
SOC enters DSM mode, the code will be running on OCRAM.

Signed-off-by: Anson Huang <b20788@freescale.com>
---
 arch/arm/mach-imx/pm-imx7.c      |    2 +-
 arch/arm/mach-imx/suspend-imx7.S |   16 +++++++++++++++-
 2 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-imx/pm-imx7.c b/arch/arm/mach-imx/pm-imx7.c
index 10281fe..0ededa4 100644
--- a/arch/arm/mach-imx/pm-imx7.c
+++ b/arch/arm/mach-imx/pm-imx7.c
@@ -325,7 +325,7 @@ static int imx7_pm_enter(suspend_state_t state)
 		imx_gpcv2_pre_suspend(false);
 
 		/* Zzz ... */
-		cpu_do_idle();
+		imx7_suspend_in_ocram_fn(suspend_ocram_base);
 
 		imx_anatop_post_resume();
 		imx_gpcv2_post_resume();
diff --git a/arch/arm/mach-imx/suspend-imx7.S b/arch/arm/mach-imx/suspend-imx7.S
index 0e93bcf..3cc0dc5 100644
--- a/arch/arm/mach-imx/suspend-imx7.S
+++ b/arch/arm/mach-imx/suspend-imx7.S
@@ -74,6 +74,7 @@
 
 #define MX7_SRC_GPR1	0x74
 #define MX7_SRC_GPR2	0x78
+#define GPC_PGC_C0	0x800
 #define GPC_PGC_FM	0xa00
 #define ANADIG_SNVS_MISC_CTRL	0x380
 #define DDRC_STAT	0x4
@@ -448,6 +449,13 @@
 
 ENTRY(imx7_suspend)
 	push	{r4-r12}
+
+	/* check whether it is a standby mode */
+	ldr	r11, [r0, #PM_INFO_MX7_GPC_V_OFFSET]
+	ldr	r7, [r11, #GPC_PGC_C0]
+	cmp	r7, #0
+	beq	ddr_only_self_refresh
+
 	/*
 	 * The value of r0 is mapped the same in origin table and IRAM table,
 	 * thus no need to care r0 here.
@@ -507,8 +515,14 @@ wfi_ddr_self_refresh_out:
 	ddrc_exit_self_refresh
 wfi_ddr_retention_out:
 
-	restore_ttbr1
+	/* check whether it is a standby mode */
+	ldr	r11, [r0, #PM_INFO_MX7_GPC_V_OFFSET]
+	ldr	r7, [r11, #GPC_PGC_C0]
+	cmp	r7, #0
+	beq	standby_out
 
+	restore_ttbr1
+standby_out:
 	pop	{r4-r12}
 	/* return to suspend finish */
 	mov	pc, lr
-- 
1.7.5.4

