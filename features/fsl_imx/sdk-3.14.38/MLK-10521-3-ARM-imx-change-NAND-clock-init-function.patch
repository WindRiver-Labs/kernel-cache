From 3e22c131099229284772e8fcf0211b0eca47da61 Mon Sep 17 00:00:00 2001
From: Han Xu <b45815@freescale.com>
Date: Tue, 31 Mar 2015 14:47:47 -0500
Subject: [PATCH 0581/1594] MLK-10521-3: ARM: imx: change NAND clock init
 function

commit 78f48426ce79ddb3c8079b9507fa34fc9cb2b3cb from
git://git.freescale.com/imx/linux-2.6-imx.git

change NAND_ROOT_CLK init fucntion from imx_clk_gate2 to
imx_clk_gate.

On i.MX7D, there is only one clock NAND_ROOT_CLK for both GPMI and
APBH_DMA, APBH_DMA will keep the clock on after alloc dma channel, so if
still use the flag CLK_SET_RATE_GATE, GPMI set the IO clock will fail.
i.MX7D new CCM module has already fixed the glitch issue when change
divider, it is not necessary to gate the clock before change clock rate,
so use imx_clk_gate function to initial the NAND clock without
CLK_SET_RATE_GATE flag.

Signed-off-by: Han Xu <b45815@freescale.com>
---
 arch/arm/mach-imx/clk-imx7d.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-imx/clk-imx7d.c b/arch/arm/mach-imx/clk-imx7d.c
index 02191e3..6d97268 100644
--- a/arch/arm/mach-imx/clk-imx7d.c
+++ b/arch/arm/mach-imx/clk-imx7d.c
@@ -797,7 +797,7 @@ static void __init imx7d_clocks_init(struct device_node *ccm_node)
 	clks[IMX7D_ENET2_TIME_ROOT_CLK] = imx_clk_gate2("enet2_time_root_clk", "enet2_time_post_div", base + 0x4510, 0);
 	clks[IMX7D_ENET_PHY_REF_ROOT_CLK] = imx_clk_gate2("enet_phy_ref_root_clk", "enet_phy_ref_post_div", base + 0x4520, 0);
 	clks[IMX7D_EIM_ROOT_CLK] = imx_clk_gate2("eim_root_clk", "eim_post_div", base + 0x4160, 0);
-	clks[IMX7D_NAND_ROOT_CLK] = imx_clk_gate2("nand_root_clk", "nand_post_div", base + 0x4140, 0);
+	clks[IMX7D_NAND_ROOT_CLK] = imx_clk_gate("nand_root_clk", "nand_post_div", base + 0x4140, 0);
 	clks[IMX7D_QSPI_ROOT_CLK] = imx_clk_gate2("qspi_root_clk", "qspi_post_div", base + 0x4150, 0);
 	clks[IMX7D_USDHC1_ROOT_CLK] = imx_clk_gate2("usdhc1_root_clk", "usdhc1_post_div", base + 0x46c0, 0);
 	clks[IMX7D_USDHC2_ROOT_CLK] = imx_clk_gate2("usdhc2_root_clk", "usdhc2_post_div", base + 0x46d0, 0);
-- 
1.7.5.4

