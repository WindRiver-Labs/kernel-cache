From e97baf21e22b14bdf9fa34c878f8b829501e89a9 Mon Sep 17 00:00:00 2001
From: Allen Xu <b45815@freescale.com>
Date: Sat, 29 Nov 2014 03:51:36 -0600
Subject: [PATCH 1310/1543] MLK-9924 mtd: qspi: QSPI1 cannot wake up WAIT mode
 workaround

commit c9c055e9d76eca3d941be7c3c1fba196c6e4276b from
git://git.freescale.com/imx/linux-2.6-imx.git

QSPI1 cannot wake up CCM from WAIT mode on SX ARD board, add pmqos to
let CCM NOT enter WAIT mode when accessing QSPI1, refer to TKT245618.

Signed-off-by: Allen Xu <b45815@freescale.com>
(cherry picked from commit feb3b71bffc8afd440c0b972334f2479ebfefa1d)
---
 drivers/mtd/spi-nor/fsl-quadspi.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/drivers/mtd/spi-nor/fsl-quadspi.c b/drivers/mtd/spi-nor/fsl-quadspi.c
index 27b9c4e..170fbc6 100644
--- a/drivers/mtd/spi-nor/fsl-quadspi.c
+++ b/drivers/mtd/spi-nor/fsl-quadspi.c
@@ -27,6 +27,7 @@
 #include <linux/mtd/partitions.h>
 #include <linux/mtd/spi-nor.h>
 #include <linux/mutex.h>
+#include <linux/pm_qos.h>
 
 /* The registers */
 #define QUADSPI_MCR			0x00
@@ -237,6 +238,7 @@ struct fsl_qspi {
 	u32 clk_rate;
 	unsigned int chip_base_addr; /* We may support two chips. */
 	struct mutex lock;
+	struct pm_qos_request	pm_qos_req;
 };
 
 static inline int is_vybrid_qspi(struct fsl_qspi *q)
@@ -664,12 +666,17 @@ static int fsl_qspi_clk_prep_enable(struct fsl_qspi *q)
 		return ret;
 	}
 
+	pm_qos_add_request(&q->pm_qos_req,
+			PM_QOS_CPU_DMA_LATENCY,
+			0);
+
 	return 0;
 }
 
 /* This function was used to disable and unprepare QSPI clock */
 static int fsl_qspi_clk_disable_unprep(struct fsl_qspi *q)
 {
+	pm_qos_remove_request(&q->pm_qos_req);
 	clk_disable_unprepare(q->clk);
 	clk_disable_unprepare(q->clk_en);
 	return 0;
-- 
1.7.5.4

