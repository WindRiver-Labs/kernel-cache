From 34285c0c3c4b19f5ac3f17eb64f98175f0e97659 Mon Sep 17 00:00:00 2001
From: Bai Ping <b51503@freescale.com>
Date: Wed, 14 Jan 2015 22:46:10 +0800
Subject: [PATCH 1358/1543] MLK-10091 arm: imx: check pll1 enable when
 changing arm_podf

commit 8cc908a0168afb677b5de6405579b681b6f595db from
git://git.freescale.com/imx/linux-2.6-imx.git

According to the hardware design, when changing the arm_podf divider,
make sure the pll1 has clk output. If the pll1 output is disabled before
changing the arm_podf, enbale and bypass the pll1 to make sure the
arm_podf can be successfully changed.

Signed-off-by: Bai Ping <b51503@freescale.com>
---
 arch/arm/mach-imx/clk-busy.c  |   10 +++++++++-
 arch/arm/mach-imx/clk-pllv3.c |   21 ++++++++++++++++++++-
 arch/arm/mach-imx/clk.h       |    1 +
 3 files changed, 30 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-imx/clk-busy.c b/arch/arm/mach-imx/clk-busy.c
index ce03121..f45a2a9 100644
--- a/arch/arm/mach-imx/clk-busy.c
+++ b/arch/arm/mach-imx/clk-busy.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2012-2014 Freescale Semiconductor, Inc.
+ * Copyright 2012-2015 Freescale Semiconductor, Inc.
  * Copyright 2012 Linaro Ltd.
  *
  * The code contained herein is licensed under the GNU General Public
@@ -18,14 +18,22 @@
 #include <linux/err.h>
 #include "clk.h"
 
+#define ARM_PODF_BUSY	(0x1 << 16)
+
 static int clk_busy_wait(void __iomem *reg, u8 shift)
 {
 	unsigned long timeout = jiffies + msecs_to_jiffies(10);
 
+	u32 val = readl_relaxed(reg);
+	if (val & ARM_PODF_BUSY)
+		imx_enable_pll_arm(true);
+
 	while (readl_relaxed(reg) & (1 << shift))
 		if (time_after(jiffies, timeout))
 			return -ETIMEDOUT;
 
+	if (val & ARM_PODF_BUSY)
+		imx_enable_pll_arm(false);
 	return 0;
 }
 
diff --git a/arch/arm/mach-imx/clk-pllv3.c b/arch/arm/mach-imx/clk-pllv3.c
index 2e6cb95..6cad1a0 100644
--- a/arch/arm/mach-imx/clk-pllv3.c
+++ b/arch/arm/mach-imx/clk-pllv3.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2012-2014 Freescale Semiconductor, Inc.
+ * Copyright 2012-2015 Freescale Semiconductor, Inc.
  * Copyright 2012 Linaro Ltd.
  *
  * The code contained herein is licensed under the GNU General Public
@@ -26,7 +26,10 @@
 
 #define BM_PLL_POWER		(0x1 << 12)
 #define BM_PLL_LOCK		(0x1 << 31)
+#define BM_PLL_ENABLE		(0x1 << 13)
+#define BM_PLL_BYPASS		(0x1 << 16)
 
+static void __iomem *pll_sys_base;
 /**
  * struct clk_pllv3 - IMX PLL clock version 3
  * @clk_hw:	 clock source
@@ -335,6 +338,7 @@ struct clk *imx_clk_pllv3(enum imx_pllv3_type type, const char *name,
 	switch (type) {
 	case IMX_PLLV3_SYS:
 		ops = &clk_pllv3_sys_ops;
+		pll_sys_base = base;
 		break;
 	case IMX_PLLV3_USB:
 		ops = &clk_pllv3_ops;
@@ -366,3 +370,18 @@ struct clk *imx_clk_pllv3(enum imx_pllv3_type type, const char *name,
 
 	return clk;
 }
+
+void imx_enable_pll_arm(bool enable)
+{
+	static u32 saved_pll_arm;
+	u32 val;
+
+	if (enable) {
+		saved_pll_arm = val = readl_relaxed(pll_sys_base);
+		val |= BM_PLL_ENABLE;
+		val |= BM_PLL_BYPASS;
+		writel_relaxed(val, pll_sys_base);
+	} else {
+		writel_relaxed(saved_pll_arm, pll_sys_base);
+	}
+}
diff --git a/arch/arm/mach-imx/clk.h b/arch/arm/mach-imx/clk.h
index 043bd6a..4a187fc 100644
--- a/arch/arm/mach-imx/clk.h
+++ b/arch/arm/mach-imx/clk.h
@@ -7,6 +7,7 @@
 extern spinlock_t imx_ccm_lock;
 
 extern void imx_cscmr1_fixup(u32 *val);
+extern void imx_enable_pll_arm(bool);
 extern struct imx_sema4_mutex *amp_power_mutex;
 extern struct imx_shared_mem *shared_mem;
 
-- 
1.7.5.4

