From 04ef2007431b7240c5df2dd36976ba6038d879dd Mon Sep 17 00:00:00 2001
From: Li Jun <b47624@freescale.com>
Date: Wed, 14 Jan 2015 18:10:09 +0800
Subject: [PATCH 1330/1543] MLK-10101-1 usb: chipidea: otg: runtime PM support
 for otg fsm mode

commit c6f6af3a9cb9300dc617c72ccf8d225298a03264 from
git://git.freescale.com/imx/linux-2.6-imx.git

Add runtime PM for otg fsm.

Signed-off-by: Li Jun <jun.li@freescale.com>
---
 drivers/usb/chipidea/otg_fsm.c |   18 +++++++++++++++---
 1 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/usb/chipidea/otg_fsm.c b/drivers/usb/chipidea/otg_fsm.c
index c76ac74..5f9059e 100644
--- a/drivers/usb/chipidea/otg_fsm.c
+++ b/drivers/usb/chipidea/otg_fsm.c
@@ -226,6 +226,9 @@ static void ci_otg_add_timer(struct ci_hdrc *ci, enum ci_otg_fsm_timer_index t)
 			return;
 		}
 
+	if (list_empty(active_timers))
+		pm_runtime_get(ci->dev);
+
 	timer->count = timer->expires;
 	list_add_tail(&timer->list, active_timers);
 
@@ -242,17 +245,22 @@ static void ci_otg_del_timer(struct ci_hdrc *ci, enum ci_otg_fsm_timer_index t)
 	struct ci_otg_fsm_timer *tmp_timer, *del_tmp;
 	struct ci_otg_fsm_timer *timer = ci->fsm_timer->timer_list[t];
 	struct list_head *active_timers = &ci->fsm_timer->active_timers;
+	int flag = 0;
 
 	if (t >= NUM_CI_OTG_FSM_TIMERS)
 		return;
 
 	list_for_each_entry_safe(tmp_timer, del_tmp, active_timers, list)
-		if (tmp_timer == timer)
+		if (tmp_timer == timer) {
 			list_del(&timer->list);
+			flag = 1;
+		}
 
 	/* Disable 1ms irq if there is no any active timer */
-	if (list_empty(active_timers))
+	if (list_empty(active_timers) && (flag == 1)) {
 		hw_write_otgsc(ci, OTGSC_1MSIE, 0);
+		pm_runtime_put(ci->dev);
+	}
 }
 
 /*
@@ -276,8 +284,10 @@ static inline int ci_otg_tick_timer(struct ci_hdrc *ci)
 	}
 
 	/* disable 1ms irq if there is no any timer active */
-	if ((expired == 1) && list_empty(active_timers))
+	if ((expired == 1) && list_empty(active_timers)) {
 		hw_write_otgsc(ci, OTGSC_1MSIE, 0);
+		pm_runtime_put(ci->dev);
+	}
 
 	return expired;
 }
@@ -604,6 +614,7 @@ int ci_otg_fsm_work(struct ci_hdrc *ci)
 			return 0;
 	}
 
+	pm_runtime_get_sync(ci->dev);
 	if (otg_statemachine(&ci->fsm)) {
 		if (ci->fsm.otg->state == OTG_STATE_A_IDLE) {
 			/*
@@ -630,6 +641,7 @@ int ci_otg_fsm_work(struct ci_hdrc *ci)
 			}
 		}
 	}
+	pm_runtime_put_sync(ci->dev);
 	return 0;
 }
 
-- 
1.7.5.4

