From 9fe7427de6205bec4590296618ebca8599b78ee7 Mon Sep 17 00:00:00 2001
From: Richard Zhu <Richard.Zhu@freescale.com>
Date: Thu, 25 Dec 2014 14:28:06 +0800
Subject: [PATCH 1375/1543] MLK-10058-2 regulator: consumer: define pre_xxx
 event macros

commit df691a62a6917321c9b85b0b6e9e56f1c01ace5d from
git://git.freescale.com/imx/linux-2.6-imx.git

Some gpc operations are mandatory required when
iMX6SX PCIe PHY is powered on/off.
use the notify framwork to encapsulate the
pre-operations in gpc driver
- add two pre-xxx macros into consumer.h
- kick off the pre-xxx events in enable/disalbe call back.

Signed-off-by: Richard Zhu <Richard.Zhu@freescale.com>
---
 drivers/regulator/core.c           |    2 ++
 include/linux/regulator/consumer.h |    2 ++
 2 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/drivers/regulator/core.c b/drivers/regulator/core.c
index bac485a..e23b4e8 100644
--- a/drivers/regulator/core.c
+++ b/drivers/regulator/core.c
@@ -1750,6 +1750,7 @@ static int _regulator_do_enable(struct regulator_dev *rdev)
 {
 	int ret, delay;
 
+	_notifier_call_chain(rdev, REGULATOR_EVENT_PRE_ENABLE, NULL);
 	/* Query before enabling in case configuration dependent.  */
 	ret = _regulator_get_enable_time(rdev);
 	if (ret >= 0) {
@@ -1892,6 +1893,7 @@ static int _regulator_do_disable(struct regulator_dev *rdev)
 {
 	int ret;
 
+	_notifier_call_chain(rdev, REGULATOR_EVENT_PRE_DISABLE, NULL);
 	trace_regulator_disable(rdev_get_name(rdev));
 
 	if (rdev->ena_pin) {
diff --git a/include/linux/regulator/consumer.h b/include/linux/regulator/consumer.h
index e530681..2cd6d99 100644
--- a/include/linux/regulator/consumer.h
+++ b/include/linux/regulator/consumer.h
@@ -105,6 +105,8 @@ struct notifier_block;
 #define REGULATOR_EVENT_FORCE_DISABLE		0x20
 #define REGULATOR_EVENT_VOLTAGE_CHANGE		0x40
 #define REGULATOR_EVENT_DISABLE 		0x80
+#define REGULATOR_EVENT_PRE_DISABLE		0x100
+#define REGULATOR_EVENT_PRE_ENABLE		0x200
 
 struct regulator;
 
-- 
1.7.5.4

