From 3f01e9e1e11ab24e7cc502e54a48be4980acd920 Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Fri, 20 Jun 2014 14:01:46 +0800
Subject: [PATCH 0309/1543] ENGR00319456-2 cpufreq: imx6: correct regulator
 API

commit 883e627cdbf430073057daa300717633b17e0890 from
git://git.freescale.com/imx/linux-2.6-imx.git

for PU regulator, if we do NOT want a dummy regulator
returned when there is no PU regulator available,
devm_regulator_get_optional should be used instead
of devm_regulator_get.

Signed-off-by: Anson Huang <b20788@freescale.com>
---
 drivers/cpufreq/imx6q-cpufreq.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/cpufreq/imx6q-cpufreq.c b/drivers/cpufreq/imx6q-cpufreq.c
index ca96902d..498f19c 100644
--- a/drivers/cpufreq/imx6q-cpufreq.c
+++ b/drivers/cpufreq/imx6q-cpufreq.c
@@ -192,9 +192,9 @@ static int imx6q_cpufreq_probe(struct platform_device *pdev)
 		goto put_node;
 	}
 
-	arm_reg = devm_regulator_get(cpu_dev, "arm");
-	pu_reg = devm_regulator_get(cpu_dev, "pu");
-	soc_reg = devm_regulator_get(cpu_dev, "soc");
+	arm_reg = devm_regulator_get_optional(cpu_dev, "arm");
+	pu_reg = devm_regulator_get_optional(cpu_dev, "pu");
+	soc_reg = devm_regulator_get_optional(cpu_dev, "soc");
 	if (IS_ERR(arm_reg) || IS_ERR(soc_reg)) {
 		dev_err(cpu_dev, "failed to get regulators\n");
 		ret = -ENOENT;
-- 
1.7.5.4

