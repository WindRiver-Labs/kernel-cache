From dae0c5927ae049340ab43578e7e148dc0495c971 Mon Sep 17 00:00:00 2001
From: Fancy Fang <chen.fang@freescale.com>
Date: Mon, 1 Sep 2014 16:09:31 +0800
Subject: [PATCH 0376/1543] ENGR00329491 ARM: IMX6SX: PXP-V4L2: add pxp v4l2
 support to 3.14 branch

commit 888a9ca74184eb3daa8be333d36d43aedda15e2a from
git://git.freescale.com/imx/linux-2.6-imx.git

1. Add pxp-v4l2 dts support for imx6sx platform.
2. Add v4l2_device to the pxp-v4l2 driver to pass the WARN_ON()
   check new added in 3.14 kernel.

Signed-off-by: Fancy Fang <chen.fang@freescale.com>
---
 arch/arm/boot/dts/imx6sx-sdb.dts                 |    5 ++++
 drivers/media/platform/mxc/output/mxc_pxp_v4l2.c |   26 ++++++++++++++++++++-
 2 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/arch/arm/boot/dts/imx6sx-sdb.dts b/arch/arm/boot/dts/imx6sx-sdb.dts
index d630b5c..99f28e2 100644
--- a/arch/arm/boot/dts/imx6sx-sdb.dts
+++ b/arch/arm/boot/dts/imx6sx-sdb.dts
@@ -65,6 +65,11 @@
 		};
 	};
 
+	pxp_v4l2_out {
+		compatible = "fsl,imx6sx-pxp-v4l2", "fsl,imx6sl-pxp-v4l2";
+		status = "okay";
+	};
+
 	regulators {
 		compatible = "simple-bus";
 		#address-cells = <1>;
diff --git a/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c b/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c
index 504ed0d..bd89356 100644
--- a/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c
+++ b/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c
@@ -41,6 +41,7 @@
 #include <media/videobuf-dma-contig.h>
 #include <media/v4l2-common.h>
 #include <media/v4l2-dev.h>
+#include <media/v4l2-device.h>
 #include <media/v4l2-ioctl.h>
 
 #include "mxc_pxp_v4l2.h"
@@ -1223,6 +1224,7 @@ MODULE_DEVICE_TABLE(of, imx_pxpv4l2_dt_ids);
 static int pxp_probe(struct platform_device *pdev)
 {
 	struct pxps *pxp;
+	struct v4l2_device *v4l2_dev;
 	int err = 0;
 
 	pxp = kzalloc(sizeof(*pxp), GFP_KERNEL);
@@ -1234,6 +1236,19 @@ static int pxp_probe(struct platform_device *pdev)
 
 	dev_set_drvdata(&pdev->dev, pxp);
 
+	v4l2_dev = kzalloc(sizeof(*v4l2_dev), GFP_KERNEL);
+	if (!v4l2_dev) {
+		dev_err(&pdev->dev, "failed to allocate v4l2_dev structure\n");
+		err = -ENOMEM;
+		goto freeirq;
+	}
+
+	err = v4l2_device_register(&pdev->dev, v4l2_dev);
+	if (err) {
+		dev_err(&pdev->dev, "register v4l2 device failed\n");
+		goto freev4l2;
+	}
+
 	INIT_LIST_HEAD(&pxp->outq);
 	spin_lock_init(&pxp->lock);
 	mutex_init(&pxp->mutex);
@@ -1244,10 +1259,11 @@ static int pxp_probe(struct platform_device *pdev)
 	if (!pxp->vdev) {
 		dev_err(&pdev->dev, "video_device_alloc() failed\n");
 		err = -ENOMEM;
-		goto freeirq;
+		goto relv4l2;
 	}
 
 	memcpy(pxp->vdev, &pxp_template, sizeof(pxp_template));
+	pxp->vdev->v4l2_dev = v4l2_dev;
 	video_set_drvdata(pxp->vdev, pxp);
 
 	err = video_register_device(pxp->vdev, VFL_TYPE_GRABBER, video_nr);
@@ -1263,7 +1279,10 @@ exit:
 
 freevdev:
 	video_device_release(pxp->vdev);
-
+relv4l2:
+	v4l2_device_unregister(v4l2_dev);
+freev4l2:
+	kfree(v4l2_dev);
 freeirq:
 	kfree(pxp);
 
@@ -1273,9 +1292,12 @@ freeirq:
 static int pxp_remove(struct platform_device *pdev)
 {
 	struct pxps *pxp = platform_get_drvdata(pdev);
+	struct v4l2_device *v4l2_dev = pxp->vdev->v4l2_dev;
 
 	video_unregister_device(pxp->vdev);
 	video_device_release(pxp->vdev);
+	v4l2_device_unregister(v4l2_dev);
+	kfree(v4l2_dev);
 
 	free_dma_buf(pxp, &pxp->outbuf);
 
-- 
1.7.5.4

