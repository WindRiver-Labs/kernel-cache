From 99dcf85595ad031ed6686943f0279b748cb808b5 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Fri, 28 Aug 2015 15:32:02 +0800
Subject: [PATCH 2/3] GPU: mxc: fix a potential recursive locking

[    8.883249] =============================================
[    8.887363] [ INFO: possible recursive locking detected ]
[    8.891480] 3.14.39ltsi-WR7.0.0.0_preempt-rt+ #302 Not tainted
[    8.896026] ---------------------------------------------
[    8.900139] swapper/0/1 is trying to acquire lock:
[    8.903642]  ((struct mutex *)(*Mutex)){+.+...}, at: [<805d38bc>] gckOS_AcquireMutex+0x34/0x74
[    8.911091]
but task is already holding lock:
[    8.914333]  ((struct mutex *)(*Mutex)){+.+...}, at: [<805d38d8>] gckOS_AcquireMutex+0x50/0x74
[    8.921771]
other info that might help us debug this:
[    8.925709]  Possible unsafe locking scenario:

[    8.929038]        CPU0
[    8.930195]        ----
[    8.931352]   lock((struct mutex *)(*Mutex));
[    8.934475]   lock((struct mutex *)(*Mutex));
[    8.937596]
 *** DEADLOCK ***

[    8.939623]  May be due to missing lock nesting notation

[    8.943822] 3 locks held by swapper/0/1:
[    8.946455]  #0:  (&__lockdep_no_validate__){......}, at: [<80438818>] __driver_attach+0x44/0xa4
[    8.954102]  #1:  (&__lockdep_no_validate__){......}, at: [<8043883c>] __driver_attach+0x68/0xa4
[    8.961744]  #2:  ((struct mutex *)(*Mutex)){+.+...}, at: [<805d38d8>] gckOS_AcquireMutex+0x50/0x74
[    8.969640]
stack backtrace:
[    8.971414] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.14.39ltsi-WR7.0.0.0_preempt-rt+ #302
[    8.978584] [<80017e50>] (unwind_backtrace) from [<80012a38>] (show_stack+0x20/0x24)
[    8.985052] [<80012a38>] (show_stack) from [<808860b4>] (dump_stack+0x74/0xc0)
[    8.991004] [<808860b4>] (dump_stack) from [<80082a84>] (__lock_acquire+0x668/0x1c28)
[    8.997556] [<80082a84>] (__lock_acquire) from [<80084760>] (lock_acquire+0xfc/0x218)
[    9.004109] [<80084760>] (lock_acquire) from [<8088b6a4>] (mutex_lock_nested+0x74/0x434)
[    9.010925] [<8088b6a4>] (mutex_lock_nested) from [<805d38bc>] (gckOS_AcquireMutex+0x34/0x74)
[    9.018172] [<805d38bc>] (gckOS_AcquireMutex) from [<805d40e8>] (gckOS_GetPhysicalAddressProcess+0x3c/0x124)
[    9.026725] [<805d40e8>] (gckOS_GetPhysicalAddressProcess) from [<805d6c3c>] (gckOS_GetPhysicalAddress+0x80/0x94)
[    9.035716] [<805d6c3c>] (gckOS_GetPhysicalAddress) from [<805eb3dc>] (gckHARDWARE_ConvertLogical+0x60/0xa8)
[    9.044266] [<805eb3dc>] (gckHARDWARE_ConvertLogical) from [<805eb578>] (gckHARDWARE_End+0x88/0xb4)
[    9.052032] [<805eb578>] (gckHARDWARE_End) from [<805de84c>] (gckCOMMAND_Stop+0xac/0xf8)
[    9.058847] [<805de84c>] (gckCOMMAND_Stop) from [<805ef640>] (gckHARDWARE_SetPowerManagementState+0x63c/0xa78)
[    9.067577] [<805ef640>] (gckHARDWARE_SetPowerManagementState) from [<805d24d0>] (gckGALDEVICE_Start+0x60/0xd8)
[    9.076390] [<805d24d0>] (gckGALDEVICE_Start) from [<805da420>] (gpu_probe+0x260/0x380)

Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c |   14 +++-----------
 1 files changed, 3 insertions(+), 11 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
index f451a70..4d8436f 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
@@ -2878,22 +2878,14 @@ gckOS_AcquireMutex(
     IN gctUINT32 Timeout
     )
 {
+    gctUINT32 Timeout_tmp = Timeout;
+
     gcmkHEADER_ARG("Os=0x%X Mutex=0x%0x Timeout=%u", Os, Mutex, Timeout);
 
     /* Validate the arguments. */
     gcmkVERIFY_OBJECT(Os, gcvOBJ_OS);
     gcmkVERIFY_ARGUMENT(Mutex != gcvNULL);
 
-    if (Timeout == gcvINFINITE)
-    {
-        /* Lock the mutex. */
-        mutex_lock(Mutex);
-
-        /* Success. */
-        gcmkFOOTER_NO();
-        return gcvSTATUS_OK;
-    }
-
     for (;;)
     {
         /* Try to acquire the mutex. */
@@ -2904,7 +2896,7 @@ gckOS_AcquireMutex(
             return gcvSTATUS_OK;
         }
 
-        if (Timeout-- == 0)
+	if ((Timeout != gcvINFINITE) && (Timeout_tmp-- == 0))
         {
             break;
         }
-- 
1.7.5.4

