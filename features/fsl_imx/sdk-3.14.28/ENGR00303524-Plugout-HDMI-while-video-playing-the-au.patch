From ca5a9d846e43fad1f8f2068641636a03ba4378c1 Mon Sep 17 00:00:00 2001
From: Shengjiu Wang <b02247@freescale.com>
Date: Mon, 10 Mar 2014 18:38:14 +0800
Subject: [PATCH 1114/1543] ENGR00303524 Plugout HDMI while video playing, the
 audio is blocked.

commit f8e3c74b470d47e9e45eb2553f270bf5e9842d62 from
git://git.freescale.com/imx/linux-2.6-imx.git

The requirement for Android is different. it need the driver exit ASAP.
Don't block the user space, android will restart the driver in user space.
Yocto need the driver to start the transfer by itself.
Add a specific kernel config for this case.

Signed-off-by: Shengjiu Wang <b02247@freescale.com>
(cherry picked from commit 4b3d55a0101ac25f14cc6f58c65b85bf657224d3)
---
 drivers/mfd/Kconfig         |    8 ++++++++
 drivers/mfd/mxc-hdmi-core.c |   10 ++++++++++
 2 files changed, 18 insertions(+), 0 deletions(-)

diff --git a/drivers/mfd/Kconfig b/drivers/mfd/Kconfig
index 23534c8..77189cd 100644
--- a/drivers/mfd/Kconfig
+++ b/drivers/mfd/Kconfig
@@ -170,6 +170,14 @@ config MFD_MXC_HDMI
 	  This is the core driver for the Freescale i.MX6 on-chip HDMI.
 	  This MFD driver connects with the video and audio drivers for HDMI.
 
+config MFD_MXC_HDMI_ANDROID
+	tristate "Freescale HDMI Core for Android"
+	select MFD_CORE
+	depends on MFD_MXC_HDMI=y
+	help
+	  This is the core driver for the Freescale i.MX6 on-chip HDMI.
+	  This MFD driver connects with the video and audio drivers for HDMI.
+
 config MFD_MC13XXX
 	tristate
 	depends on (SPI_MASTER || I2C)
diff --git a/drivers/mfd/mxc-hdmi-core.c b/drivers/mfd/mxc-hdmi-core.c
index 4cdf2dc..76e79b7 100644
--- a/drivers/mfd/mxc-hdmi-core.c
+++ b/drivers/mfd/mxc-hdmi-core.c
@@ -78,10 +78,12 @@ unsigned int hdmi_set_cable_state(unsigned int state)
 	hdmi_cable_state = state;
 	spin_unlock_irqrestore(&hdmi_cable_state_lock, flags);
 
+#ifndef CONFIG_MFD_MXC_HDMI_ANDROID
 	if (check_hdmi_state() && substream && hdmi_abort_state) {
 		hdmi_abort_state = 0;
 		substream->ops->trigger(substream, SNDRV_PCM_TRIGGER_START);
 	}
+#endif
 	return 0;
 }
 EXPORT_SYMBOL(hdmi_set_cable_state);
@@ -95,10 +97,13 @@ unsigned int hdmi_set_blank_state(unsigned int state)
 	hdmi_blank_state = state;
 	spin_unlock_irqrestore(&hdmi_blank_state_lock, flags);
 
+#ifndef CONFIG_MFD_MXC_HDMI_ANDROID
 	if (check_hdmi_state() && substream && hdmi_abort_state) {
 		hdmi_abort_state = 0;
 		substream->ops->trigger(substream, SNDRV_PCM_TRIGGER_START);
 	}
+#endif
+
 	return 0;
 }
 EXPORT_SYMBOL(hdmi_set_blank_state);
@@ -109,10 +114,15 @@ static void hdmi_audio_abort_stream(struct snd_pcm_substream *substream)
 
 	snd_pcm_stream_lock_irqsave(substream, flags);
 
+#ifndef CONFIG_MFD_MXC_HDMI_ANDROID
 	if (snd_pcm_running(substream)) {
 		hdmi_abort_state = 1;
 		substream->ops->trigger(substream, SNDRV_PCM_TRIGGER_STOP);
 	}
+#else
+	if (snd_pcm_running(substream))
+		snd_pcm_stop(substream, SNDRV_PCM_STATE_DISCONNECTED);
+#endif
 
 	snd_pcm_stream_unlock_irqrestore(substream, flags);
 }
-- 
1.7.5.4

