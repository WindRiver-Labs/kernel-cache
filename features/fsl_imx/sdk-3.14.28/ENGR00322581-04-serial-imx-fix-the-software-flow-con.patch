From be524d23601f5b1391248be17a1e35a95ca37aaf Mon Sep 17 00:00:00 2001
From: Huang Shijie <b32955@freescale.com>
Date: Wed, 18 Jun 2014 14:19:09 +0800
Subject: [PATCH 0390/1543] ENGR00322581-04 serial: imx: fix the software flow
 control

commit e5f1b0be0e1483c888ed6a72343a47d35792a5c4 from
git://git.freescale.com/imx/linux-2.6-imx.git

Controls the CTS pin when the CTSC bit is negated. CTS has no
function when CTSC is asserted. After The CTS pin is low, it
needs to enable CTSC.

The patch just fix the issue.

(cherry picked from commit c6808adc3ccdfa2f3452978b998467d6a21e5b9f)

Signed-off-by: Fugang Duan  <B38611@freescale.com>
---
 drivers/tty/serial/imx.c |    6 ++----
 1 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index c272a36..919e2d7 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -838,11 +838,9 @@ static void imx_set_mctrl(struct uart_port *port, unsigned int mctrl)
 	struct imx_port *sport = (struct imx_port *)port;
 	unsigned long temp;
 
-	temp = readl(sport->port.membase + UCR2) & ~UCR2_CTS;
-
+	temp = readl(sport->port.membase + UCR2) & ~(UCR2_CTS | UCR2_CTSC);
 	if (mctrl & TIOCM_RTS)
-		if (!sport->dma_is_enabled)
-			temp |= UCR2_CTS;
+		temp |= UCR2_CTS | UCR2_CTSC;
 
 	writel(temp, sport->port.membase + UCR2);
 
-- 
1.7.5.4

