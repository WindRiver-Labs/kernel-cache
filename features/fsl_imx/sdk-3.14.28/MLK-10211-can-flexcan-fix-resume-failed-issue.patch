From e48858b2a621c96062f99bd5625e2f219756440b Mon Sep 17 00:00:00 2001
From: Dong Aisheng <b29396@freescale.com>
Date: Wed, 11 Feb 2015 15:12:44 +0800
Subject: [PATCH 1536/1543] MLK-10211 can: flexcan: fix resume failed issue

commit 34b7539ee70453e1fe18f723b24520c1e5121e00 from
git://git.freescale.com/imx/linux-2.6-imx.git

We can observe the following error during system resume.
dpm_run_callback(): platform_pm_resume+0x0/0x4c returns -110
PM: Device 2090000.can failed to resume: error -110

It is caused by the flexcan is in disable state and the clock is disabled
by default while the CAN is not up. During resume, the calling of
flexcan_chip_enable will obviously fail due to no clock.

The issue only happened when CAN device is not up. If CAN is up, clock is there
and no issue will happen.

Because the CAN is always in disabled state by default if it's not up.
We don't have to disable it again during suspend and enable it after resume.
This patch simply the suspend/resume to only enter/exit disabled mode if CAN
is up.

Signed-off-by: Dong Aisheng <b29396@freescale.com>
(cherry picked from commit 1a8a68cb11ce2de085efb05aa0262a7eca07aba6)
---
 drivers/net/can/flexcan.c |    4 ----
 1 files changed, 0 insertions(+), 4 deletions(-)

diff --git a/drivers/net/can/flexcan.c b/drivers/net/can/flexcan.c
index 4e9023a..0647af8 100644
--- a/drivers/net/can/flexcan.c
+++ b/drivers/net/can/flexcan.c
@@ -1333,8 +1333,6 @@ static int flexcan_suspend(struct device *device)
 		} else {
 			err = flexcan_chip_disable(priv);
 		}
-	} else {
-		err = flexcan_chip_disable(priv);
 	}
 	priv->can.state = CAN_STATE_SLEEPING;
 
@@ -1358,8 +1356,6 @@ static int flexcan_resume(struct device *device)
 		} else {
 			err = flexcan_chip_enable(priv);
 		}
-	} else {
-		err = flexcan_chip_enable(priv);
 	}
 
 	return err;
-- 
1.7.5.4

