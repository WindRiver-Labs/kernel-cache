From 6e60f9c0ae318e368a8e263d5e411eaffdd43adf Mon Sep 17 00:00:00 2001
From: Huang Shijie <b32955@freescale.com>
Date: Wed, 7 May 2014 17:15:03 +0800
Subject: [PATCH 1317/1543] MLK-9811 mtd: gpmi: add supend/resume support

commit 1fd6ce83c5e9e1eebb484ad62da0229b1e571fda from
git://git.freescale.com/imx/linux-2.6-imx.git

support gpmi nand suspend/resume function

Signed-off-by: Huang Shijie <b32955@freescale.com>
Signed-off-by: Allen Xu <b45815@freescale.com>
(cherry picked from commit d5bad6203191a64ac78bddbf2385da3606b94460)
---
 drivers/mtd/nand/gpmi-nand/gpmi-nand.c |   47 +++++++++++++++++++++++++++++++-
 1 files changed, 46 insertions(+), 1 deletions(-)

diff --git a/drivers/mtd/nand/gpmi-nand/gpmi-nand.c b/drivers/mtd/nand/gpmi-nand/gpmi-nand.c
index f638cd8..6026e68 100644
--- a/drivers/mtd/nand/gpmi-nand/gpmi-nand.c
+++ b/drivers/mtd/nand/gpmi-nand/gpmi-nand.c
@@ -1,7 +1,7 @@
 /*
  * Freescale GPMI NAND Flash Driver
  *
- * Copyright (C) 2010-2011 Freescale Semiconductor, Inc.
+ * Copyright (C) 2010-2015 Freescale Semiconductor, Inc.
  * Copyright (C) 2008 Embedded Alley Solutions, Inc.
  *
  * This program is free software; you can redistribute it and/or modify
@@ -1829,9 +1829,54 @@ static int gpmi_nand_remove(struct platform_device *pdev)
 	return 0;
 }
 
+static int gpmi_pm_suspend(struct device *dev)
+{
+	struct gpmi_nand_data *this = dev_get_drvdata(dev);
+
+	release_dma_channels(this);
+	return 0;
+}
+
+static int gpmi_pm_resume(struct device *dev)
+{
+	struct gpmi_nand_data *this = dev_get_drvdata(dev);
+	int ret;
+
+	if (GPMI_IS_MX6SX(this)) {
+		ret = acquire_dma_channels(this);
+		if (ret < 0)
+			return ret;
+
+		/* re-init the GPMI registers */
+		this->flags &= ~GPMI_TIMING_INIT_OK;
+		ret = gpmi_init(this);
+		if (ret) {
+			dev_err(this->dev, "Error setting GPMI : %d\n", ret);
+			return ret;
+		}
+
+		/* re-init the BCH registers */
+		ret = bch_set_geometry(this);
+		if (ret) {
+			dev_err(this->dev, "Error setting BCH : %d\n", ret);
+			return ret;
+		}
+
+		/* re-init others */
+		gpmi_extra_init(this);
+	}
+
+	return 0;
+}
+
+static const struct dev_pm_ops gpmi_pm_ops = {
+	SET_SYSTEM_SLEEP_PM_OPS(gpmi_pm_suspend, gpmi_pm_resume)
+};
+
 static struct platform_driver gpmi_nand_driver = {
 	.driver = {
 		.name = "gpmi-nand",
+		.pm = &gpmi_pm_ops,
 		.of_match_table = gpmi_nand_id_table,
 	},
 	.probe   = gpmi_nand_probe,
-- 
1.7.5.4

