From 59b76512aef8014a695a904c273a33b97e94686f Mon Sep 17 00:00:00 2001
From: Fugang Duan <b38611@freescale.com>
Date: Fri, 28 Nov 2014 12:35:10 +0800
Subject: [PATCH 1070/1074] MLK-9929 net: fec: inserts VLAN tag for AVB 1722
 packet

For AVB 1722 non-canonical packet that don't define in linux networking,
we inserts VLAN tag for application to think it as VLAN packet.

(cherry-picked from commit: 6a156113269dd133ac6361dcfe8fd390cdae1e5e)

Signed-off-by: Fugang Duan <B38611@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/net/ethernet/freescale/fec.h      |    5 +++--
 drivers/net/ethernet/freescale/fec_main.c |   12 ++++++++----
 2 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fec.h b/drivers/net/ethernet/freescale/fec.h
index 9328b60..22d9e10 100644
--- a/drivers/net/ethernet/freescale/fec.h
+++ b/drivers/net/ethernet/freescale/fec.h
@@ -380,8 +380,9 @@ struct bufdesc_ex {
 #define PTP_HEADER_SZE         34
 #define PTP_EVENT_PORT         0x013F
 
-#define FEC_VLAN_TAG_LEN       0x04
-#define FEC_ETHTYPE_LEN                0x02
+#define FEC_VLAN_TAG_LEN	0x04
+#define FEC_ETHTYPE_LEN		0x02
+#define ETH_P_1722		0x22f0
 
 /* 1588-2008 network protocol enumeration values */
 #define FEC_PTP_PROT_IPV4              1
diff --git a/drivers/net/ethernet/freescale/fec_main.c b/drivers/net/ethernet/freescale/fec_main.c
index abbea5c..4e37c33 100644
--- a/drivers/net/ethernet/freescale/fec_main.c
+++ b/drivers/net/ethernet/freescale/fec_main.c
@@ -1413,15 +1413,19 @@ fec_enet_rx(struct net_device *ndev, int budget)
 
 			/* If this is a VLAN packet remove the VLAN Tag */
 			vlan_packet_rcvd = false;
-			if ((ndev->features & NETIF_F_HW_VLAN_CTAG_RX) &&
-				fep->bufdesc_ex && (ebdp->cbd_esc & BD_ENET_RX_VLAN)) {
+			if (fep->bufdesc_ex && (ebdp->cbd_esc & BD_ENET_RX_VLAN)) {
 				/* Push and remove the vlan tag */
 				struct vlan_hdr *vlan_header =
 					(struct vlan_hdr *) (data + ETH_HLEN);
 				vlan_tag = ntohs(vlan_header->h_vlan_TCI);
-				pkt_len -= VLAN_HLEN;
 
-				vlan_packet_rcvd = true;
+				if (ndev->features & NETIF_F_HW_VLAN_CTAG_RX)
+					pkt_len -= VLAN_HLEN;
+
+				if (vlan_header->h_vlan_encapsulated_proto ==
+					htons(ETH_P_1722) ||
+					ndev->features & NETIF_F_HW_VLAN_CTAG_RX)
+					vlan_packet_rcvd = true;
 			}
 
 			/* This does 16 byte alignment, exactly what we need.
-- 
1.7.5.4

