From d069aa08bc4d15044e8129d0e785f708ad98c8be Mon Sep 17 00:00:00 2001
From: Li Jun <B47624@freescale.com>
Date: Thu, 13 Mar 2014 10:08:00 +0800
Subject: [PATCH 0754/1074] ENGR00302247 usb: charger: use stable plug contact
 in charger detection

- Background:
When a USB plug is inserted, the pins are staggered such that the ground
and VBUS pins make first, followed by the D+/D- pins. The detection of
the VBUS eventually results in the usb_charger_detect() being called
in order to further identify the type of USB port the product is being
tied to. USB 2.0 and the Battery Charging 1.1 specs define how this
detection is to be done. The problem with current dirver is that it
does not allow the D+/D- detection circuit to settle to a stable state
prior to checking to see if there is a valid result. Instead, the for
loop breaks on the first iteration due to a false indication of contact.
The code then looks to see what kind of device is actually out there,
and if the D+/D- pins still have not made contact, it comes to the
potentially erroneous conclusion that it is an SDP.

- Solution:
This patch use a successive check to make sure the contact is reliable.

Acked-by: Peter Chen <peter.chen@freescale.com>
Signed-off-by: Li Jun <b47624@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/power/imx6_usb_charger.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/drivers/power/imx6_usb_charger.c b/drivers/power/imx6_usb_charger.c
index 81a8064..cf7e438 100644
--- a/drivers/power/imx6_usb_charger.c
+++ b/drivers/power/imx6_usb_charger.c
@@ -121,7 +121,10 @@ static int imx6_usb_charger_detect(struct usb_charger *charger)
 			if (data_pin_contact_count++ > 5)
 			/* Data pin makes contact */
 				break;
+			else
+				usleep_range(5000, 10000);
 		} else {
+			data_pin_contact_count = 0;
 			msleep(20);
 		}
 	}
-- 
1.7.5.4

