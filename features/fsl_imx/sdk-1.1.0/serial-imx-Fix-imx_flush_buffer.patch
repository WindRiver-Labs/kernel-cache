From 33172270cde8899e8cfc0e88c225c9e53c8f8ebc Mon Sep 17 00:00:00 2001
From: Fabio Estevam <fabio.estevam@freescale.com>
Date: Tue, 13 Jan 2015 10:00:26 -0200
Subject: [PATCH 0996/1074] serial: imx: Fix imx_flush_buffer()

commit 934084a9d2d95d0ce98ae8d1ec3bfe81c95c678c upstream

When running an userspace program that does a 'tcflush(fd, TCIOFLUSH)' call
we still see the last received character in the URXD register afterwards.

Clear UCR2_SRST bit so that the UART FIFO is flushed properly.

Since UCR2_SRST also resets some UART registers, we need to save and restore
some of them.

Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com>
Tested-by: Fugang Duan <B38611@freescale.com>
Acked-by: Jason Liu <r64343@freecale.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/tty/serial/imx.c |   26 ++++++++++++++++++++++++++
 1 files changed, 26 insertions(+), 0 deletions(-)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index 94aba1d..42128dc 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -1383,12 +1383,38 @@ static void imx_shutdown(struct uart_port *port)
 
 static void imx_flush_buffer(struct uart_port *port)
 {
+	int i, temp;
 	struct imx_port *sport = (struct imx_port *)port;
 
 	if (sport->dma_is_enabled) {
 		sport->tx_bytes = 0;
 		dmaengine_terminate_all(sport->dma_chan_tx);
 	}
+
+	/*
+	 * UCR2_SRST will reset the transmit and receive state machines,
+	 * all FIFOs and register UBIR, UBMR, UBRC,
+	 * and UTS[6-3], so save the required registers
+	 */
+	sport->saved_reg[0] = readl(sport->port.membase + UBIR);
+	sport->saved_reg[1] = readl(sport->port.membase + UBMR);
+	sport->saved_reg[2] = readl(sport->port.membase + UBRC);
+	sport->saved_reg[3] = readl(sport->port.membase + IMX21_UTS);
+
+	i = 100;
+
+	temp = readl(sport->port.membase + UCR2);
+	temp &= ~UCR2_SRST;
+	writel(temp, sport->port.membase + UCR2);
+
+	while (!(readl(sport->port.membase + UCR2) & UCR2_SRST) && (--i > 0))
+		udelay(1);
+
+	/* Restore the registers */
+	writel(sport->saved_reg[0], sport->port.membase + UBIR);
+	writel(sport->saved_reg[1], sport->port.membase + UBMR);
+	writel(sport->saved_reg[2], sport->port.membase + UBRC);
+	writel(sport->saved_reg[3], sport->port.membase + IMX21_UTS);
 }
 
 static void
-- 
1.7.5.4

