From a45ca6c949a3811c45d641004e209d22c0fb5f11 Mon Sep 17 00:00:00 2001
From: Nimrod Andy <B38611@freescale.com>
Date: Sun, 23 Nov 2014 17:23:06 +0800
Subject: [PATCH 1068/1074] net: fec: init maximum receive buffer size for
 ring1 and ring2

commit d543a76295a7f83ab990970f68c9501a0bb4bcb5 upstream

i.MX6SX fec support three rx ring1, the current driver lost to init
ring1 and ring2 maximum receive buffer size, that cause receving
frame date length error. The driver reports "rcv is not +last" error
log in user case.

Signed-off-by: Fugang Duan <B38611@freescale.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
[Fix context to apply to WRL kernel]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/net/ethernet/freescale/fec.h      |    3 +++
 drivers/net/ethernet/freescale/fec_main.c |    4 +++-
 2 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fec.h b/drivers/net/ethernet/freescale/fec.h
index eaa1ce5..9328b60 100644
--- a/drivers/net/ethernet/freescale/fec.h
+++ b/drivers/net/ethernet/freescale/fec.h
@@ -56,8 +56,10 @@
 #define FEC_R_FSTART		0x150 /* FIFO receive start reg */
 #define FEC_R_DES_START_1	0x160 /* Receive descriptor ring 1 */
 #define FEC_X_DES_START_1	0x164 /* Transmit descriptor ring 1 */
+#define FEC_R_BUFF_SIZE_1	0x168 /* Maximum receive buff ring1 size */
 #define FEC_R_DES_START_2	0x16c /* Receive descriptor ring 2 */
 #define FEC_X_DES_START_2	0x170 /* Transmit descriptor ring 2 */
+#define FEC_R_BUFF_SIZE_2	0x174 /* Maximum receive buff ring2 size */
 #define FEC_R_DES_START_0	0x180 /* Receive descriptor ring */
 #define FEC_X_DES_START_0	0x184 /* Transmit descriptor ring */
 #define FEC_R_BUFF_SIZE		0x188 /* Maximum receive buff size */
@@ -326,6 +328,7 @@ struct bufdesc_ex {
 				((X == 2) ? FEC_X_DES_ACTIVE_2 : FEC_X_DES_ACTIVE_0))
 #define FEC_DMA_CFG(X)		((X == 2) ? FEC_DMA_CFG_2 : FEC_DMA_CFG_1)
 #define FEC_RCMR(X)		((X == 2) ? FEC_RCMR_2 : FEC_RCMR_1)
+#define FEC_MRBR(X)		((X == 2) ? FEC_R_BUFF_SIZE_2 : FEC_R_BUFF_SIZE_1)
 #define DMA_CLASS_EN		(1 << 16)
 #define IDLE_SLOPE_MASK		0xFFFF
 #define IDLE_SLOPE_1		0x200 /* BW fraction: 0.5 */
diff --git a/drivers/net/ethernet/freescale/fec_main.c b/drivers/net/ethernet/freescale/fec_main.c
index 326c2ca..578f882 100644
--- a/drivers/net/ethernet/freescale/fec_main.c
+++ b/drivers/net/ethernet/freescale/fec_main.c
@@ -860,9 +860,11 @@ static void fec_enet_enable_ring(struct net_device *ndev)
 		writel(rx_queue->bd_dma, fep->hwp + FEC_R_DES_START(i));
 
 		/* enable DMA1/2 */
-		if (i)
+		if (i) {
 			writel(RCMR_MATCHEN | RCMR_CMP(i),
 				fep->hwp + FEC_RCMR(i));
+			writel(PKT_MAXBLR_SIZE, fep->hwp + FEC_MRBR(i));
+		}
 	}
 
 	for (i = 0; i < fep->num_tx_queues; i++) {
-- 
1.7.5.4

