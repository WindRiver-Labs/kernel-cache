From 3eb42270eafde7665d1a655b3b996ee946d0b4e5 Mon Sep 17 00:00:00 2001
From: Richard Zhu <r65037@freescale.com>
Date: Wed, 13 Aug 2014 10:21:14 +0800
Subject: [PATCH 0905/1074] ENGR00327581 pcie:enable msi validation on imx6sx
 sdb

Enable msi capability validation on imx6sx sdb ep/rc
validation system.
- in order to avoid the modification of common codes,
force the msi address to be 0x08ff8000

Test howto:
- Enable CONFIG_PCI_MSI=y, when rebuild the rc/ep images

- EP side(console command and kernel message):
root@imx6sxsabresd:~# ./memtool -32 08ff8000=0
Writing 32-bit value 0x0 to address 0x08FF8000

- RC side(console command and kernel message):
root@imx6sxsabresd:~# cat /proc/interrupts  | grep MSI
384:          1   PCI-MSI

Signed-off-by: Richard Zhu <r65037@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/pci/host/pci-imx6-ep-driver.c |   16 ++++++++++++----
 1 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/drivers/pci/host/pci-imx6-ep-driver.c b/drivers/pci/host/pci-imx6-ep-driver.c
index 0f5d4df..299a765 100644
--- a/drivers/pci/host/pci-imx6-ep-driver.c
+++ b/drivers/pci/host/pci-imx6-ep-driver.c
@@ -49,6 +49,7 @@ static int imx_pcie_ep_probe(struct pci_dev *pdev,
 		const struct pci_device_id *id)
 {
 	int ret = 0;
+	unsigned int msi_addr = 0;
 	struct device *dev = &pdev->dev;
 	struct imx_pcie_ep_priv *priv;
 
@@ -85,11 +86,18 @@ static int imx_pcie_ep_probe(struct pci_dev *pdev,
 	}
 
 	/*
-	 * Force to use 0x01FF8000 as the MSI address,
-	 * to do the MSI demo
+	 * Force to use 0x01FF8000 on iMX6q SD board and 0x08FF8000
+	 * on iMX6sx SDB board as the MSI address, to do the MSI demo
 	 */
-	pci_bus_write_config_dword(pdev->bus, 0, 0x54, 0x01FF8000);
-	pci_bus_write_config_dword(pdev->bus->parent, 0, 0x820, 0x01FF8000);
+	if (*(unsigned int *)priv->hw_base > 0x4FFFFFFF)
+		/* iMX6sx SDB board, DDR layout [0x8000_0000 ~ 0xBFFF_FFFF] */
+		msi_addr = 0x08FF8000;
+	else
+		/* iMX6q SD board, DDR layout [0x1000_0000 ~ 0x4FFF_FFFF] */
+		msi_addr = 0x01FF8000;
+	pr_info("pci_msi_addr = 0x%08x\n", msi_addr);
+	pci_bus_write_config_dword(pdev->bus, 0, 0x54, msi_addr);
+	pci_bus_write_config_dword(pdev->bus->parent, 0, 0x820, msi_addr);
 
 	/* configure rc's msi cap */
 	pci_bus_read_config_dword(pdev->bus->parent, 0, 0x50, &ret);
-- 
1.7.5.4

