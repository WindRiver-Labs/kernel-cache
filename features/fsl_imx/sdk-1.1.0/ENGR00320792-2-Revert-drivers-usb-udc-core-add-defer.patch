From 99840f2af9fb38acdf6bc7e359884d1400b2be39 Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Fri, 4 Jul 2014 12:39:41 +0800
Subject: [PATCH 0887/1074] ENGR00320792-2 Revert "drivers: usb: udc-core: add
 deferred bind for gadget driver"

This reverts commit 22392a023eee469a7068f1ea77492d5ab9af14f9.

Signed-off-by: Peter Chen <peter.chen@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/usb/gadget/udc-core.c |   29 +----------------------------
 include/linux/usb/gadget.h    |    3 ---
 2 files changed, 1 insertions(+), 31 deletions(-)

diff --git a/drivers/usb/gadget/udc-core.c b/drivers/usb/gadget/udc-core.c
index f3da5f1..38913ea 100644
--- a/drivers/usb/gadget/udc-core.c
+++ b/drivers/usb/gadget/udc-core.c
@@ -47,7 +47,6 @@ struct usb_udc {
 
 static struct class *udc_class;
 static LIST_HEAD(udc_list);
-static LIST_HEAD(driver_list);
 static DEFINE_MUTEX(udc_lock);
 
 /* ------------------------------------------------------------------------- */
@@ -185,9 +184,6 @@ static void usb_udc_nop_release(struct device *dev)
 	dev_vdbg(dev, "%s\n", __func__);
 }
 
-static int udc_bind_to_driver(struct usb_udc *udc,
-			      struct usb_gadget_driver *driver);
-
 /**
  * usb_add_gadget_udc_release - adds a new gadget to the udc class driver list
  * @parent: the parent device to this udc. Usually the controller driver's
@@ -246,20 +242,6 @@ int usb_add_gadget_udc_release(struct device *parent, struct usb_gadget *gadget,
 
 	usb_gadget_set_state(gadget, USB_STATE_NOTATTACHED);
 
-	if (!list_empty(&driver_list)) {
-		struct usb_gadget_driver *driver;
-		list_for_each_entry(driver, &driver_list, list) {
-			if (driver->attached)
-				continue;
-			ret = udc_bind_to_driver(udc, driver);
-			if (ret)
-				goto err4;
-			else
-				break;
-		}
-
-	}
-
 	mutex_unlock(&udc_lock);
 
 	return 0;
@@ -370,7 +352,6 @@ static int udc_bind_to_driver(struct usb_udc *udc, struct usb_gadget_driver *dri
 		goto err1;
 	}
 	usb_gadget_connect(udc->gadget);
-	driver->attached = true;
 
 	kobject_uevent(&udc->dev.kobj, KOBJ_CHANGE);
 	return 0;
@@ -427,13 +408,8 @@ int usb_gadget_probe_driver(struct usb_gadget_driver *driver)
 
 	pr_debug("couldn't find an available UDC\n");
 	mutex_unlock(&udc_lock);
-
-	driver->attached = false;
-	list_add_tail(&driver->list, &driver_list);
-
-	return 0;
+	return -ENODEV;
 found:
-	list_add_tail(&driver->list, &driver_list);
 	ret = udc_bind_to_driver(udc, driver);
 	mutex_unlock(&udc_lock);
 	return ret;
@@ -458,9 +434,6 @@ int usb_gadget_unregister_driver(struct usb_gadget_driver *driver)
 			break;
 		}
 
-	driver->attached = false;
-	list_del(&driver->list);
-
 	mutex_unlock(&udc_lock);
 	return ret;
 }
diff --git a/include/linux/usb/gadget.h b/include/linux/usb/gadget.h
index 0dbef93..3b17e99 100644
--- a/include/linux/usb/gadget.h
+++ b/include/linux/usb/gadget.h
@@ -877,9 +877,6 @@ struct usb_gadget_driver {
 
 	/* FIXME support safe rmmod */
 	struct device_driver	driver;
-
-	bool			attached;
-	struct list_head	list;
 };
 
 
-- 
1.7.5.4

