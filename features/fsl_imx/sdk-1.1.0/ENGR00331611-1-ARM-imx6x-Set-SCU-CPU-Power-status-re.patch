From 95ebfb4f1335e13968a7b58e8d8492c60e082c56 Mon Sep 17 00:00:00 2001
From: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@freescale.com>
Date: Thu, 18 Sep 2014 11:23:22 -0500
Subject: [PATCH 0475/1074] ENGR00331611-1 ARM:imx6x:Set SCU CPU Power status
 register correctly

Set the SCU CPU Power status register to reflect the correct status of
a CPU (active/inactive/not-present).

Signed-off-by: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 arch/arm/mach-imx/headsmp.S |   16 +++++++++++++++-
 arch/arm/mach-imx/hotplug.c |    7 ++++++-
 arch/arm/mach-imx/platsmp.c |   22 +++++++++++++---------
 3 files changed, 34 insertions(+), 11 deletions(-)

diff --git a/arch/arm/mach-imx/headsmp.S b/arch/arm/mach-imx/headsmp.S
index 627f16f..5456837 100644
--- a/arch/arm/mach-imx/headsmp.S
+++ b/arch/arm/mach-imx/headsmp.S
@@ -1,5 +1,5 @@
 /*
- * Copyright 2011 Freescale Semiconductor, Inc.
+ * Copyright 2011-2014 Freescale Semiconductor, Inc.
  * Copyright 2011 Linaro Ltd.
  *
  * The code contained herein is licensed under the GNU General Public
@@ -14,8 +14,12 @@
 #include <linux/init.h>
 #include <asm/asm-offsets.h>
 #include <asm/hardware/cache-l2x0.h>
+#include <asm/smp_scu.h>
+
+#define SCU_CPU_STATUS		0x08
 
 	.section ".text.head", "ax"
+.extern imx_scu_base
 
 #ifdef CONFIG_SMP
 diag_reg_offset:
@@ -32,6 +36,16 @@ diag_reg_offset:
 ENTRY(v7_secondary_startup)
 	bl	v7_invalidate_l1
 	set_diag_reg
+
+	/* Set the CPU status in SCU CPU status register. */
+	mrc	p15, 0, r0, c0, c0, 5
+	and	r0, r0, #3
+	mrc	p15, 4, r1, c15, c0, 0
+	ldr	r2, =SCU_CPU_STATUS
+	orr	r2, r2, r0
+	ldr	r0, =SCU_PM_NORMAL
+	strb	r0, [r1, r2]
+
 	b	secondary_startup
 ENDPROC(v7_secondary_startup)
 #endif
diff --git a/arch/arm/mach-imx/hotplug.c b/arch/arm/mach-imx/hotplug.c
index b35e99c..be18f64 100644
--- a/arch/arm/mach-imx/hotplug.c
+++ b/arch/arm/mach-imx/hotplug.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2011 Freescale Semiconductor, Inc.
+ * Copyright 2011-2014 Freescale Semiconductor, Inc.
  * Copyright 2011 Linaro Ltd.
  *
  * The code contained herein is licensed under the GNU General Public
@@ -14,9 +14,12 @@
 #include <linux/jiffies.h>
 #include <asm/cp15.h>
 #include <asm/proc-fns.h>
+#include <asm/smp_scu.h>
 
 #include "common.h"
 
+extern void __iomem *imx_scu_base;
+
 static inline void cpu_enter_lowpower(void)
 {
 	unsigned int v;
@@ -36,6 +39,8 @@ static inline void cpu_enter_lowpower(void)
 	  : "=&r" (v)
 	  : "r" (0), "Ir" (CR_C), "Ir" (0x40)
 	  : "cc");
+
+	scu_power_mode(imx_scu_base, SCU_PM_DORMANT);
 }
 
 /*
diff --git a/arch/arm/mach-imx/platsmp.c b/arch/arm/mach-imx/platsmp.c
index 5b57c17..9aec42d 100644
--- a/arch/arm/mach-imx/platsmp.c
+++ b/arch/arm/mach-imx/platsmp.c
@@ -23,7 +23,7 @@
 #define SCU_STANDBY_ENABLE	(1 << 5)
 
 u32 g_diag_reg;
-static void __iomem *scu_base;
+void __iomem *imx_scu_base;
 
 static struct map_desc scu_io_desc __initdata = {
 	/* .virtual and .pfn are run-time assigned */
@@ -42,15 +42,15 @@ void __init imx_scu_map_io(void)
 	scu_io_desc.pfn = __phys_to_pfn(base);
 	iotable_init(&scu_io_desc, 1);
 
-	scu_base = IMX_IO_ADDRESS(base);
+	imx_scu_base = IMX_IO_ADDRESS(base);
 }
 
 void imx_scu_standby_enable(void)
 {
-	u32 val = readl_relaxed(scu_base);
+	u32 val = readl_relaxed(imx_scu_base);
 
 	val |= SCU_STANDBY_ENABLE;
-	writel_relaxed(val, scu_base);
+	writel_relaxed(val, imx_scu_base);
 }
 
 static int imx_boot_secondary(unsigned int cpu, struct task_struct *idle)
@@ -66,17 +66,21 @@ static int imx_boot_secondary(unsigned int cpu, struct task_struct *idle)
  */
 static void __init imx_smp_init_cpus(void)
 {
-	int i, ncores;
+	int i;
+	u32 me = smp_processor_id();
 
-	ncores = scu_get_core_count(scu_base);
-
-	for (i = ncores; i < NR_CPUS; i++)
+	for (i = setup_max_cpus; i < NR_CPUS; i++)
 		set_cpu_possible(i, false);
+	/* Set the SCU CPU Power status for each inactive core. */
+	for (i = 0; i < NR_CPUS;  i++) {
+		if (i != me)
+			__raw_writeb(SCU_PM_POWEROFF, imx_scu_base + 0x08 + i);
+	}
 }
 
 void imx_smp_prepare(void)
 {
-	scu_enable(scu_base);
+	scu_enable(imx_scu_base);
 }
 
 static void __init imx_smp_prepare_cpus(unsigned int max_cpus)
-- 
1.7.5.4

