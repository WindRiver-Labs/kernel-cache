From 56e46524879edc6c74f29e6991325ce5f8b3d96f Mon Sep 17 00:00:00 2001
From: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@freescale.com>
Date: Mon, 13 Oct 2014 16:25:18 -0500
Subject: [PATCH 0486/1074] MLK-9685 ARM:imx6x:Ensure that the kernel can boot
 with "nosmp" in the command line

When nosmp is added to the command line, setup_max_cpus is set to 0
by the kernel. And this results in num_possible_cpus() returning 0 and the kernel
does not boot.
This patch ensures that at least one CPU's state is set to "possible" as part
of the boot process.

Signed-off-by: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 arch/arm/mach-imx/platsmp.c |    8 ++++++--
 1 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-imx/platsmp.c b/arch/arm/mach-imx/platsmp.c
index 9aec42d..89705c2 100644
--- a/arch/arm/mach-imx/platsmp.c
+++ b/arch/arm/mach-imx/platsmp.c
@@ -66,11 +66,15 @@ static int imx_boot_secondary(unsigned int cpu, struct task_struct *idle)
  */
 static void __init imx_smp_init_cpus(void)
 {
-	int i;
+	int i, ncores = scu_get_core_count(imx_scu_base);
 	u32 me = smp_processor_id();
 
-	for (i = setup_max_cpus; i < NR_CPUS; i++)
+	if (setup_max_cpus < ncores)
+		ncores = (setup_max_cpus) ? setup_max_cpus : 1;
+
+	for (i = ncores; i < NR_CPUS; i++)
 		set_cpu_possible(i, false);
+
 	/* Set the SCU CPU Power status for each inactive core. */
 	for (i = 0; i < NR_CPUS;  i++) {
 		if (i != me)
-- 
1.7.5.4

