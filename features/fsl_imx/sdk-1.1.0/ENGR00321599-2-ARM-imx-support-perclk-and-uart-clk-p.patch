From 1ca0a7585fb8e611e7ffc2f7f1cd6a4b6d171c3a Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Mon, 7 Jul 2014 13:56:48 +0800
Subject: [PATCH 0458/1074] ENGR00321599-2 ARM: imx: support perclk and uart
 clk parent to OSC on i.mx6sx

Change perclk parent to OSC instead of IPG, as IPG clock may
be changed by busfreq.

when kernel command line has "uart_from_osc" defined, uart clk will
select OSC as its parent, this is to make PLL3 be able to be off
for low power purpose, as we need all PLLs off in low power idle
mode.

Signed-off-by: Anson Huang <b20788@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 arch/arm/mach-imx/clk-imx6sx.c |   15 +++++++++++++++
 1 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-imx/clk-imx6sx.c b/arch/arm/mach-imx/clk-imx6sx.c
index 1d44312..413dc28 100644
--- a/arch/arm/mach-imx/clk-imx6sx.c
+++ b/arch/arm/mach-imx/clk-imx6sx.c
@@ -28,6 +28,7 @@
 #define CCDR    0x4
 #define BM_CCM_CCDR_MMDC_CH0_MASK       (0x2 << 16)
 
+static bool uart_from_osc;
 static const char *step_sels[]		= { "osc", "pll2_pfd2_396m", };
 static const char *pll1_sw_sels[]	= { "pll1_sys", "step", };
 static const char *periph_pre_sels[]	= { "pll2_bus", "pll2_pfd2_396m", "pll2_pfd0_352m", "pll2_198m", };
@@ -134,6 +135,13 @@ static inline const char *ldb_di_parent(void  __iomem *base, int ldb_di_idx)
 	return (ldb_di_idx == 0) ? ldb_di0_sels[index] : ldb_di1_sels[index];
 }
 
+static int __init setup_uart_clk(char *uart_rate)
+{
+	uart_from_osc = true;
+	return 1;
+}
+__setup("uart_from_osc", setup_uart_clk);
+
 static void __init imx6sx_clocks_init(struct device_node *ccm_node)
 {
 	struct device_node *np;
@@ -464,6 +472,9 @@ static void __init imx6sx_clocks_init(struct device_node *ccm_node)
 	clk_register_clkdev(clks[IMX6SX_CLK_ARM], NULL, "cpu0");
 
 
+	/* set perclk to from OSC */
+	clk_set_parent(clks[IMX6SX_CLK_PERCLK_SEL], clks[IMX6SX_CLK_OSC]);
+
 	/* Set the default 132MHz for EIM module */
 	clk_set_parent(clks[IMX6SX_CLK_EIM_SLOW_SEL], clks[IMX6SX_CLK_PLL2_PFD2]);
 	clk_set_rate(clks[IMX6SX_CLK_EIM_SLOW], 132000000);
@@ -511,6 +522,10 @@ static void __init imx6sx_clocks_init(struct device_node *ccm_node)
 		clk_prepare_enable(clks[IMX6SX_CLK_USBPHY2_GATE]);
 	}
 
+	/* Set the UART parent if needed. */
+	if (uart_from_osc)
+		clk_set_parent(clks[IMX6SX_CLK_UART_SEL], clks[IMX6SX_CLK_OSC]);
+
 	/* Set initial power mode */
 	imx6q_set_lpm(WAIT_CLOCKED);
 
-- 
1.7.5.4

