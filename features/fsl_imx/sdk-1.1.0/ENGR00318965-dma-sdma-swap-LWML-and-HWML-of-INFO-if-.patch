From 6318e8e18ab33543501ddfc936b8558173f9ee85 Mon Sep 17 00:00:00 2001
From: Robin Gong <b38343@freescale.com>
Date: Tue, 27 May 2014 10:44:29 +0800
Subject: [PATCH 0846/1074] ENGR00318965 dma: sdma: swap LWML and HWML of INFO
 if LWML > HWML

Correct r0, r1 and INFO parames if LWML > HWML in
DEV_TO_DEV case. Below link raise up the issue:
https://community.freescale.com/message/410174?et=watches.email.thread#410174

Signed-off-by: Robin Gong <b38343@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/dma/imx-sdma.c |   15 +++++++++++++++
 1 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/drivers/dma/imx-sdma.c b/drivers/dma/imx-sdma.c
index 372817c..a19f49f 100644
--- a/drivers/dma/imx-sdma.c
+++ b/drivers/dma/imx-sdma.c
@@ -944,6 +944,9 @@ static int sdma_config_channel(struct sdma_channel *sdmac)
 			(sdmac->peripheral_type != IMX_DMATYPE_DSP)) {
 		/* Handle multiple event channels differently */
 		if (sdmac->event_id1) {
+			int lwml = sdmac->watermark_level & 0xff;
+			int hwml = (sdmac->watermark_level >> 16) & 0xff;
+
 			if (sdmac->event_id0 > 31) {
 				sdmac->event_mask[0] |= 0;
 				__set_bit(28, &sdmac->watermark_level);
@@ -964,6 +967,18 @@ static int sdma_config_channel(struct sdma_channel *sdmac)
 				sdmac->event_mask[0] |=
 						BIT(sdmac->event_id1 % 32);
 			}
+
+			/*
+			 * If LWML(src_maxburst) > HWML(dst_maxburst), we need
+			 * swap LWML and HWML of INFO(A.3.2.5.1), also need swap
+			 * r0(event_mask[1]) and r1(event_mask[0]).
+			 */
+			if (lwml > hwml) {
+				sdmac->watermark_level &= ~0xff00ff;
+				sdmac->watermark_level |= hwml;
+				sdmac->watermark_level |= lwml << 16;
+				swap(sdmac->event_mask[0], sdmac->event_mask[1]);
+			}
 			/* BIT 11:
 			 * 1 : Source on SPBA
 			 * 0 : Source on AIPS
-- 
1.7.5.4

