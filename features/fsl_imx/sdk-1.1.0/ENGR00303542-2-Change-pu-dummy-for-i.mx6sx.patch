From 93dd00adc97b6879fa9c473d9587575fea554d6e Mon Sep 17 00:00:00 2001
From: Loren HUANG <b02279@freescale.com>
Date: Thu, 20 Mar 2014 18:27:15 +0800
Subject: [PATCH 0333/1074] ENGR00303542-2 Change pu dummy for i.mx6sx

-Change pu dummy for i.mx6sx to allow gpu power operation

Signed-off-by: Robin Gong <b38343@freescale.com>
Signed-off-by: Loren Huang <b02279@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 arch/arm/boot/dts/imx6sx.dtsi |    7 +++++++
 arch/arm/mach-imx/anatop.c    |    5 ++++-
 arch/arm/mach-imx/gpc.c       |   13 ++++++++++++-
 3 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/arch/arm/boot/dts/imx6sx.dtsi b/arch/arm/boot/dts/imx6sx.dtsi
index c4ecc22..636375d 100644
--- a/arch/arm/boot/dts/imx6sx.dtsi
+++ b/arch/arm/boot/dts/imx6sx.dtsi
@@ -72,6 +72,10 @@
 		};
 	};
 
+		pu_dummy: pudummy_reg {
+			compatible = "fsl,imx6-dummy-pureg"; /* only used in ldo-bypass */
+		};
+
 	soc {
 		#address-cells = <1>;
 		#size-cells = <1>;
@@ -214,6 +218,9 @@
 				compatible = "fsl,imx6q-gpc";
 				reg = <0x020dc000 0x4000>;
 				interrupts = <0 89 0x04>;
+				clocks = <&clks IMX6SX_CLK_GPU>, <&clks IMX6SX_CLK_IPG>;
+				clock-names = "gpu3d_core", "ipg";
+				pu-supply = <&pu_dummy>;
 			};
 
 			gpio1: gpio@0209c000 {
diff --git a/arch/arm/mach-imx/anatop.c b/arch/arm/mach-imx/anatop.c
index dd9b932..c28a315 100644
--- a/arch/arm/mach-imx/anatop.c
+++ b/arch/arm/mach-imx/anatop.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2013 Freescale Semiconductor, Inc.
+ * Copyright (C) 2013-2014 Freescale Semiconductor, Inc.
  *
  * The code contained herein is licensed under the GNU General Public
  * License. You may obtain a copy of the GNU General Public License
@@ -87,6 +87,9 @@ void imx_anatop_pu_enable(bool enable)
 {
 	u32 val;
 
+	if (cpu_is_imx6sx())
+		return;
+
 	regmap_read(anatop, ANADIG_REG_CORE, &val);
 	val &= ANADIG_REG_TARG_MASK << ANADIG_REG2_TARG_SHIFT;
 	/*
diff --git a/arch/arm/mach-imx/gpc.c b/arch/arm/mach-imx/gpc.c
index eaf561c..18af2c8 100644
--- a/arch/arm/mach-imx/gpc.c
+++ b/arch/arm/mach-imx/gpc.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2011-2013 Freescale Semiconductor, Inc.
+ * Copyright 2011-2014 Freescale Semiconductor, Inc.
  * Copyright 2011 Linaro Ltd.
  *
  * The code contained herein is licensed under the GNU General Public
@@ -224,6 +224,8 @@ static void imx_pu_clk(bool enable)
 		if (cpu_is_imx6sl()) {
 			clk_prepare_enable(gpu2d_clk);
 			clk_prepare_enable(openvg_axi_clk);
+		} else if (cpu_is_imx6sx()) {
+			clk_prepare_enable(gpu3d_clk);
 		} else {
 			clk_prepare_enable(gpu3d_clk);
 			clk_prepare_enable(gpu3d_shader_clk);
@@ -236,6 +238,8 @@ static void imx_pu_clk(bool enable)
 		if (cpu_is_imx6sl()) {
 			clk_disable_unprepare(gpu2d_clk);
 			clk_disable_unprepare(openvg_axi_clk);
+		} else if (cpu_is_imx6sx()) {
+			clk_disable_unprepare(gpu3d_clk);
 		} else {
 			clk_disable_unprepare(gpu3d_clk);
 			clk_disable_unprepare(gpu3d_shader_clk);
@@ -491,6 +495,13 @@ static int imx_gpc_probe(struct platform_device *pdev)
 			dev_err(gpc_dev, "failed to get clk!\n");
 			return -ENOENT;
 		}
+	} else if (cpu_is_imx6sx()) {
+		gpu3d_clk = devm_clk_get(gpc_dev, "gpu3d_core");
+		ipg_clk = devm_clk_get(gpc_dev, "ipg");
+		if (IS_ERR(gpu3d_clk) || IS_ERR(ipg_clk)) {
+			dev_err(gpc_dev, "failed to get clk!\n");
+			return -ENOENT;
+		}
 	} else {
 		gpu3d_clk = devm_clk_get(gpc_dev, "gpu3d_core");
 		gpu3d_shader_clk = devm_clk_get(gpc_dev, "gpu3d_shader");
-- 
1.7.5.4

