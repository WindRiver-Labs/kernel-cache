From d3abff433114cb7776026496620b4439d726f2ce Mon Sep 17 00:00:00 2001
From: Fugang Duan <b38611@freescale.com>
Date: Thu, 30 Oct 2014 12:56:09 +0800
Subject: [PATCH 0953/1074] MLK-9787 tty: serial: imx: avoid dma overwrite
 issue

The patch fix the potential issue that dma buffer overwrite.

Signed-off-by: Fugang Duan <B38611@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/tty/serial/imx.c |   22 +++++++++++-----------
 1 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index 7defb50..0da3430 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -967,19 +967,19 @@ static void dma_rx_callback(void *data)
 
 	status = dmaengine_tx_status(chan, (dma_cookie_t)0, &state);
 	count = RX_BUF_SIZE - state.residue;
-	sport->rx_buf.buf_info[sport->rx_buf.cur_idx].filled = true;
-	sport->rx_buf.buf_info[sport->rx_buf.cur_idx].rx_bytes = count;
-	sport->rx_buf.cur_idx++;
-	sport->rx_buf.cur_idx %= IMX_RXBD_NUM;
-	dev_dbg(sport->port.dev, "We get %d bytes.\n", count);
 
-	if (sport->rx_buf.cur_idx == sport->rx_buf.last_completed_idx)
-		dev_err(sport->port.dev, "overwrite!\n");
+	if (count > 0) {
+		sport->rx_buf.buf_info[sport->rx_buf.cur_idx].filled = true;
+		sport->rx_buf.buf_info[sport->rx_buf.cur_idx].rx_bytes = count;
+		sport->rx_buf.cur_idx++;
+		sport->rx_buf.cur_idx %= IMX_RXBD_NUM;
+		dev_dbg(sport->port.dev, "We get %d bytes.\n", count);
+
+		if (sport->rx_buf.cur_idx == sport->rx_buf.last_completed_idx)
+			dev_err(sport->port.dev, "overwrite!\n");
 
-	if (count)
 		schedule_work(&sport->tsk_dma_rx);
-	else
-		sport->rx_buf.last_completed_idx++;
+	}
 }
 
 static int start_rx_dma(struct imx_port *sport)
@@ -991,7 +991,7 @@ static int start_rx_dma(struct imx_port *sport)
 	sport->rx_buf.period_len = RX_BUF_SIZE;
 	sport->rx_buf.buf_len = IMX_RXBD_NUM * RX_BUF_SIZE;
 	sport->rx_buf.cur_idx = 0;
-	sport->rx_buf.last_completed_idx = -1;
+	sport->rx_buf.last_completed_idx = 0;
 	desc = dmaengine_prep_dma_cyclic(chan, sport->rx_buf.dmaaddr,
 		sport->rx_buf.buf_len, sport->rx_buf.period_len,
 		DMA_DEV_TO_MEM, DMA_PREP_INTERRUPT);
-- 
1.7.5.4

