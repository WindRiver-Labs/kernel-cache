From fdcc11c3cf2da708bb200d78e9b336721196d05d Mon Sep 17 00:00:00 2001
From: Richard Zhu <r65037@freescale.com>
Date: Tue, 19 Aug 2014 15:11:09 +0800
Subject: [PATCH 0910/1074] ENGR00327663 syscon: add imprecise external abort
 in syscon

An imprecise external abort signaled by the AXI interface
when the outof register definitions of the reg-map.
E.X:
0x4000 memory space is allocted to MU refer to the document.
But, only 0x00 ~ 0x24 is defined now.
When the access scope is outof 0x00 ~ 0x24, there would be
an imprecise external abort.

logs:
root@imx6sxsabresd:/sys/kernel/debug/regmap/2294000.mu# cat registers
Unhandled fault: imprecise external abort (0x1406) at 0x7ed7fbd0
Internal error: : 1406 [#1] PREEMPT SMP ARM

Add one handler to handle this unhandled fault.

Signed-off-by: Richard Zhu <r65037@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/mfd/syscon.c |   13 ++++++++++++-
 1 files changed, 12 insertions(+), 1 deletions(-)

diff --git a/drivers/mfd/syscon.c b/drivers/mfd/syscon.c
index 71841f9..48427af 100644
--- a/drivers/mfd/syscon.c
+++ b/drivers/mfd/syscon.c
@@ -1,7 +1,7 @@
 /*
  * System Control Driver
  *
- * Copyright (C) 2012 Freescale Semiconductor, Inc.
+ * Copyright (C) 2012-2014 Freescale Semiconductor, Inc.
  * Copyright (C) 2012 Linaro Ltd.
  *
  * Author: Dong Aisheng <dong.aisheng@linaro.org>
@@ -20,6 +20,7 @@
 #include <linux/of_platform.h>
 #include <linux/platform_device.h>
 #include <linux/regmap.h>
+#include <linux/signal.h>
 #include <linux/mfd/syscon.h>
 
 static struct platform_driver syscon_driver;
@@ -123,6 +124,12 @@ static struct regmap_config syscon_regmap_config = {
 	.reg_stride = 4,
 };
 
+static int syscon_regmap_abort_handler(unsigned long addr,
+		unsigned int fsr, struct pt_regs *regs)
+{
+	return 0;
+}
+
 static int syscon_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
@@ -150,6 +157,10 @@ static int syscon_probe(struct platform_device *pdev)
 		return PTR_ERR(syscon->regmap);
 	}
 
+	/* Added for imprecise external abort handling */
+	hook_fault_code(16 + 6, syscon_regmap_abort_handler, SIGBUS, 0,
+		"imprecise external abort");
+
 	platform_set_drvdata(pdev, syscon);
 
 	dev_info(dev, "regmap %pR registered\n", res);
-- 
1.7.5.4

