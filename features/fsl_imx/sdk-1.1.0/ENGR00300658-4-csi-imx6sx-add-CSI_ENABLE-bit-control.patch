From d273ddf89955977d9063c331bf221a371a354af4 Mon Sep 17 00:00:00 2001
From: Robby Cai <R63905@freescale.com>
Date: Wed, 26 Feb 2014 23:50:34 +0800
Subject: [PATCH 0780/1074] ENGR00300658-4 csi: imx6sx: add CSI_ENABLE bit
 control in driver

on imx6sx, a new bit CSI_ENABLE is added in IC design.
This patch adds this support for CSI control.

Signed-off-by: Robby Cai <R63905@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 .../media/platform/mxc/capture/csi_v4l2_capture.c  |    5 ++++-
 drivers/media/platform/mxc/capture/fsl_csi.c       |   14 +++++++++++++-
 drivers/media/platform/mxc/capture/fsl_csi.h       |    9 ++++++++-
 3 files changed, 25 insertions(+), 3 deletions(-)

diff --git a/drivers/media/platform/mxc/capture/csi_v4l2_capture.c b/drivers/media/platform/mxc/capture/csi_v4l2_capture.c
index 3a611f0..1947896 100644
--- a/drivers/media/platform/mxc/capture/csi_v4l2_capture.c
+++ b/drivers/media/platform/mxc/capture/csi_v4l2_capture.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2009-2013 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2009-2014 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 /*
@@ -646,6 +646,7 @@ static int csi_streamon(cam_data *cam)
 
 			csi_dmareq_rff_enable();
 			csi_enable_int(1);
+			csi_enable(1);
 			break;
 		} else
 			cpu_relax();
@@ -681,6 +682,7 @@ static int csi_streamoff(cam_data *cam)
 	/* set CSI_CSIDMASA_FB1 and CSI_CSIDMASA_FB2 to default value */
 	__raw_writel(0, CSI_CSIDMASA_FB1);
 	__raw_writel(0, CSI_CSIDMASA_FB2);
+	csi_enable(0);
 
 	csi_free_frames(cam);
 	csi_free_frame_buf(cam);
@@ -1253,6 +1255,7 @@ static ssize_t csi_v4l_read(struct file *file, char *buf, size_t count,
 		__raw_writel(__raw_readl(CSI_CSICR3) | BIT_FRMCNT_RST,
 			     CSI_CSICR3);
 		csi_enable_int(1);
+		csi_enable(1);
 	}
 
 	wait_event_interruptible(cam->still_queue, cam->still_counter);
diff --git a/drivers/media/platform/mxc/capture/fsl_csi.c b/drivers/media/platform/mxc/capture/fsl_csi.c
index 4ba59e8..1808ef9 100644
--- a/drivers/media/platform/mxc/capture/fsl_csi.c
+++ b/drivers/media/platform/mxc/capture/fsl_csi.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2009-2013 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2009-2014 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 /*
@@ -195,6 +195,18 @@ void csi_disable_int(void)
 }
 EXPORT_SYMBOL(csi_disable_int);
 
+void csi_enable(int arg)
+{
+	unsigned long cr = __raw_readl(CSI_CSICR18);
+
+	if (arg == 1)
+		cr |= BIT_CSI_ENABLE;
+	else
+		cr &= ~BIT_CSI_ENABLE;
+	__raw_writel(cr, CSI_CSICR18);
+}
+EXPORT_SYMBOL(csi_enable);
+
 void csi_set_16bit_imagpara(int width, int height)
 {
 	int imag_para = 0;
diff --git a/drivers/media/platform/mxc/capture/fsl_csi.h b/drivers/media/platform/mxc/capture/fsl_csi.h
index 6dd11a0..f5a1c5b 100644
--- a/drivers/media/platform/mxc/capture/fsl_csi.h
+++ b/drivers/media/platform/mxc/capture/fsl_csi.h
@@ -1,5 +1,5 @@
 /*
- * Copyright 2009-2013 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2009-2014 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 /*
@@ -95,6 +95,9 @@
 #define BIT_ECC_INT		(0x1 << 1)
 #define BIT_DRDY		(0x1 << 0)
 
+/* csi control reg 18 */
+#define BIT_CSI_ENABLE		(0x1 << 31)
+
 #define CSI_MCLK_VF		1
 #define CSI_MCLK_ENC		2
 #define CSI_MCLK_RAW		4
@@ -118,6 +121,9 @@ extern void __iomem *csi_regbase;
 #define CSI_CSIFBUF_PARA	(csi_regbase + 0x30)
 #define CSI_CSIIMAG_PARA	(csi_regbase + 0x34)
 
+#define CSI_CSICR18		(csi_regbase + 0x48)
+#define CSI_CSICR19		(csi_regbase + 0x4c)
+
 static inline void csi_clear_status(unsigned long status)
 {
 	__raw_writel(status, CSI_CSISR);
@@ -191,6 +197,7 @@ int csi_read_mclk_flag(void);
 void csi_start_callback(void *data);
 void csi_stop_callback(void *data);
 void csi_enable_int(int arg);
+void csi_enable(int arg);
 void csi_disable_int(void);
 void csi_mclk_enable(void);
 void csi_mclk_disable(void);
-- 
1.7.5.4

