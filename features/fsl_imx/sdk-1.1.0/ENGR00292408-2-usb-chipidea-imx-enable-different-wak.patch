From 715f90b9b8ac1357221a232966f7d742fcbd25fe Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Fri, 3 Jan 2014 13:45:30 +0800
Subject: [PATCH 0691/1074] ENGR00292408-2 usb: chipidea: imx: enable
 different wakeup setting

We have different wakeup setting for different roles:
For peripheral-only mode, we may only enable vbus wakeup.
The Micro-AB cable should not be considered as wakeup source.
For host-only mode, the ID change or vbus change should not be
considered as wakeup source.
For OTG mode, all wakeup setting should be considered as wakeup
source.

Signed-off-by: Peter Chen <peter.chen@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/usb/chipidea/ci_hdrc_imx.c |    5 +++++
 drivers/usb/chipidea/ci_hdrc_imx.h |    3 +++
 drivers/usb/chipidea/usbmisc_imx.c |   16 ++++++++++++++--
 3 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/chipidea/ci_hdrc_imx.c b/drivers/usb/chipidea/ci_hdrc_imx.c
index 873e300..5afca2d 100644
--- a/drivers/usb/chipidea/ci_hdrc_imx.c
+++ b/drivers/usb/chipidea/ci_hdrc_imx.c
@@ -344,6 +344,11 @@ static int ci_hdrc_imx_probe(struct platform_device *pdev)
 		goto remove_charger;
 	}
 
+	/* usbmisc needs to know dr mode to choose wakeup setting */
+	if (data->usbmisc_data)
+		data->usbmisc_data->available_role =
+			ci_hdrc_query_available_role(data->ci_pdev);
+
 	if (data->usbmisc_data) {
 		ret = imx_usbmisc_init_post(data->usbmisc_data);
 		if (ret) {
diff --git a/drivers/usb/chipidea/ci_hdrc_imx.h b/drivers/usb/chipidea/ci_hdrc_imx.h
index b85f433..3376c88 100644
--- a/drivers/usb/chipidea/ci_hdrc_imx.h
+++ b/drivers/usb/chipidea/ci_hdrc_imx.h
@@ -12,6 +12,8 @@
 #ifndef __DRIVER_USB_CHIPIDEA_CI_HDRC_IMX_H
 #define __DRIVER_USB_CHIPIDEA_CI_HDRC_IMX_H
 
+#include <linux/usb/otg.h>
+
 struct imx_usbmisc_data {
 	int index;
 
@@ -23,6 +25,7 @@ struct imx_usbmisc_data {
 	 */
 	unsigned int osc_clkgate_delay;
 	struct regmap *anatop;
+	enum usb_dr_mode available_role;
 };
 
 int imx_usbmisc_init(struct imx_usbmisc_data *);
diff --git a/drivers/usb/chipidea/usbmisc_imx.c b/drivers/usb/chipidea/usbmisc_imx.c
index 14f97b0..d3c9725 100644
--- a/drivers/usb/chipidea/usbmisc_imx.c
+++ b/drivers/usb/chipidea/usbmisc_imx.c
@@ -248,12 +248,21 @@ static int usbmisc_imx6q_hsic_set_clk
 	return 0;
 }
 
+static u32 imx6q_finalize_wakeup_setting(struct imx_usbmisc_data *data)
+{
+	if (data->available_role == USB_DR_MODE_PERIPHERAL)
+		return MX6_BM_VBUS_WAKEUP;
+	else if (data->available_role == USB_DR_MODE_OTG)
+		return MX6_BM_VBUS_WAKEUP | MX6_BM_ID_WAKEUP;
+
+	return 0;
+}
+
 static int usbmisc_imx6q_set_wakeup
 	(struct imx_usbmisc_data *data, bool enabled)
 {
 	unsigned long flags;
-	u32 reg, val = MX6_BM_WAKEUP_ENABLE | MX6_BM_VBUS_WAKEUP
-		| MX6_BM_ID_WAKEUP;
+	u32 reg, val = MX6_BM_WAKEUP_ENABLE;
 
 	if (data->index > 3)
 		return -EINVAL;
@@ -261,10 +270,13 @@ static int usbmisc_imx6q_set_wakeup
 	spin_lock_irqsave(&usbmisc->lock, flags);
 	reg = readl(usbmisc->base + data->index * 4);
 	if (enabled) {
+		val |= imx6q_finalize_wakeup_setting(data);
 		writel(reg | val, usbmisc->base + data->index * 4);
 	} else {
 		if (reg & MX6_BM_WAKEUP_INTR)
 			pr_debug("wakeup int at ci_hdrc.%d\n", data->index);
+		val = MX6_BM_WAKEUP_ENABLE | MX6_BM_VBUS_WAKEUP
+			| MX6_BM_ID_WAKEUP;
 		writel(reg & ~val, usbmisc->base + data->index * 4);
 	}
 	spin_unlock_irqrestore(&usbmisc->lock, flags);
-- 
1.7.5.4

