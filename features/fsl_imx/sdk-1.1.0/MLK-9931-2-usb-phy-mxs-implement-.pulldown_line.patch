From a5dc56a0d8d6b571ce5c958226104b8bc5647a12 Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Fri, 28 Nov 2014 14:35:24 +0800
Subject: [PATCH 0974/1074] MLK-9931-2: usb: phy: mxs: implement
 .pulldown_line

The user can override controller's behavior for 15K pulldown resistor
with this API.

Signed-off-by: Peter Chen <peter.chen@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 drivers/usb/phy/phy-mxs-usb.c |   27 ++++++++++++++++++++++++++-
 1 files changed, 26 insertions(+), 1 deletions(-)

diff --git a/drivers/usb/phy/phy-mxs-usb.c b/drivers/usb/phy/phy-mxs-usb.c
index eacc7bf..cdf4a57 100644
--- a/drivers/usb/phy/phy-mxs-usb.c
+++ b/drivers/usb/phy/phy-mxs-usb.c
@@ -54,6 +54,8 @@
 
 #define BM_USBPHY_IP_FIX                       (BIT(17) | BIT(18))
 
+#define BM_USBPHY_DEBUG_ENHSTPULLDOWN		(BIT(4) | BIT(5))
+#define BM_USBPHY_DEBUG_HSTPULLDOWN		(BIT(2) | BIT(3))
 #define BM_USBPHY_DEBUG_CLKGATE			BIT(30)
 
 /* Anatop Registers */
@@ -109,6 +111,13 @@
 /* The SoCs who have anatop module */
 #define MXS_PHY_HAS_ANATOP			BIT(3)
 
+/*
+ * For SoCs, which the controller may be powered off, we
+ * need to pulldown dp/dm when the controller is powered off,
+ * in that case, the dp/dm state are stable.
+ */
+#define MXS_PHY_PULLDOWN_LINE			BIT(4)
+
 struct mxs_phy_data {
 	unsigned int flags;
 };
@@ -129,7 +138,8 @@ static const struct mxs_phy_data imx6sl_phy_data = {
 };
 
 static const struct mxs_phy_data imx6sx_phy_data = {
-	.flags = MXS_PHY_HAS_ANATOP,
+	.flags = MXS_PHY_HAS_ANATOP |
+		MXS_PHY_PULLDOWN_LINE,
 };
 
 static const struct of_device_id mxs_phy_dt_ids[] = {
@@ -476,6 +486,18 @@ static int mxs_phy_on_resume(struct usb_phy *phy,
 	return 0;
 }
 
+static int mxs_phy_pulldown_line(struct usb_phy *x, bool pull_down)
+{
+	u32 bits = BM_USBPHY_DEBUG_HSTPULLDOWN | BM_USBPHY_DEBUG_ENHSTPULLDOWN;
+
+	if (pull_down)
+		writel_relaxed(bits, x->io_priv + HW_USBPHY_DEBUG_SET);
+	else
+		writel_relaxed(bits, x->io_priv + HW_USBPHY_DEBUG_CLR);
+
+	return 0;
+}
+
 static int mxs_phy_probe(struct platform_device *pdev)
 {
 	struct resource *res;
@@ -531,6 +553,9 @@ static int mxs_phy_probe(struct platform_device *pdev)
 		mxs_phy->phy.notify_resume = mxs_phy_on_resume;
 	}
 
+	if (mxs_phy->data->flags & MXS_PHY_PULLDOWN_LINE)
+		mxs_phy->phy.pulldown_line = mxs_phy_pulldown_line;
+
 	platform_set_drvdata(pdev, mxs_phy);
 
 	if (mxs_phy->data->flags & MXS_PHY_HAS_ANATOP) {
-- 
1.7.5.4

