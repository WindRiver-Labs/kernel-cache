From 2a925f3356a3b97c280cf5f4cb1435aac298ff67 Mon Sep 17 00:00:00 2001
From: Shawn Guo <shawn.guo@freescale.com>
Date: Fri, 27 Jun 2014 12:39:54 +0800
Subject: [PATCH 0435/1074] ENGR00318063-13: ARM: imx: do not reparent during
 clk_set_rate

Without flag CLK_SET_RATE_NO_REPARENT, during clk_set_rate call, clock
framework will spontaneously switch parent if there is another parent
clock which can provide a better rate.  Such implicit clock reparent
sometimes results in unexpected clock tree topology change.  Also, with
flag CLK_SET_PARENT_GATE in place, the clk_set_rate() can fail due to
this spontaneous clock switch.  So let's stop clock framework from doing
this spontaneous reparent by adding flag CLK_SET_RATE_NO_REPARENT for
mux clocks.

While at it, adds the missing CLK_SET_PARENT_GATE flag for the fixup mux
clock also.

Signed-off-by: Shawn Guo <shawn.guo@freescale.com>
[Original patch taken from git://git.freescale.com/imx/linux-2.6-imx.git]
Signed-off-by: Biyao Zhai <biyao.zhai@windriver.com>
---
 arch/arm/mach-imx/clk-busy.c      |    2 +-
 arch/arm/mach-imx/clk-fixup-mux.c |    1 +
 arch/arm/mach-imx/clk.h           |    6 +++---
 3 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/arch/arm/mach-imx/clk-busy.c b/arch/arm/mach-imx/clk-busy.c
index 4bb1bc4..f082d70 100644
--- a/arch/arm/mach-imx/clk-busy.c
+++ b/arch/arm/mach-imx/clk-busy.c
@@ -175,7 +175,7 @@ struct clk *imx_clk_busy_mux(const char *name, void __iomem *reg, u8 shift,
 
 	init.name = name;
 	init.ops = &clk_busy_mux_ops;
-	init.flags = 0;
+	init.flags = CLK_SET_RATE_NO_REPARENT;
 	init.parent_names = parent_names;
 	init.num_parents = num_parents;
 
diff --git a/arch/arm/mach-imx/clk-fixup-mux.c b/arch/arm/mach-imx/clk-fixup-mux.c
index 0d40b35..caafa86 100644
--- a/arch/arm/mach-imx/clk-fixup-mux.c
+++ b/arch/arm/mach-imx/clk-fixup-mux.c
@@ -88,6 +88,7 @@ struct clk *imx_clk_fixup_mux(const char *name, void __iomem *reg,
 
 	init.name = name;
 	init.ops = &clk_fixup_mux_ops;
+	init.flags = CLK_SET_RATE_NO_REPARENT | CLK_SET_PARENT_GATE;
 	init.parent_names = parents;
 	init.num_parents = num_parents;
 	init.flags = 0;
diff --git a/arch/arm/mach-imx/clk.h b/arch/arm/mach-imx/clk.h
index 8379240..b5822aa 100644
--- a/arch/arm/mach-imx/clk.h
+++ b/arch/arm/mach-imx/clk.h
@@ -109,8 +109,8 @@ static inline struct clk *imx_clk_mux_flags(const char *name,
 		int num_parents, unsigned long flags)
 {
 	return clk_register_mux(NULL, name, parents, num_parents,
-			flags | CLK_SET_PARENT_GATE, reg, shift, width, 0,
-			&imx_ccm_lock);
+			flags | CLK_SET_RATE_NO_REPARENT | CLK_SET_PARENT_GATE,
+			reg, shift, width, 0, &imx_ccm_lock);
 }
 
 static inline struct clk *imx_clk_mux_glitchless(const char *name,
@@ -118,7 +118,7 @@ static inline struct clk *imx_clk_mux_glitchless(const char *name,
 		int num_parents)
 {
 	return clk_register_mux(NULL, name, parents, num_parents,
-			0, reg, shift,
+			CLK_SET_RATE_NO_REPARENT, reg, shift,
 			width, 0, &imx_ccm_lock);
 }
 
-- 
1.7.5.4

