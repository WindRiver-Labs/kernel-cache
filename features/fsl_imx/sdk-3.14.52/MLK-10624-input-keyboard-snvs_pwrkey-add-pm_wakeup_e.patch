From 0455b15046b3127461f7fbbf5e7f431cc67910b2 Mon Sep 17 00:00:00 2001
From: Robin Gong <b38343@freescale.com>
Date: Mon, 13 Apr 2015 14:34:02 +0800
Subject: [PATCH 0371/1221] MLK-10624: input: keyboard: snvs_pwrkey: add
 pm_wakeup_event for freeze mode

Per freeze mode, driver need add pm_wakeup_event or pm_stay_awake in isr to
wake up the event once wake up source coming. This patch can enable system
wake up by PWRON key in freeze mode.

Signed-off-by: Robin Gong <b38343@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/input/keyboard/snvs_pwrkey.c |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

diff --git a/drivers/input/keyboard/snvs_pwrkey.c b/drivers/input/keyboard/snvs_pwrkey.c
index 1d6d62c..35f63af 100644
--- a/drivers/input/keyboard/snvs_pwrkey.c
+++ b/drivers/input/keyboard/snvs_pwrkey.c
@@ -54,6 +54,7 @@ static void imx_imx_snvs_check_for_events(unsigned long data)
 		pdata->keystate = state;
 		input_event(input, EV_KEY, pdata->keycode, state);
 		input_sync(input);
+		pm_relax(pdata->input->dev.parent);
 	}
 
 	/* repeat check if pressed long */
@@ -70,6 +71,7 @@ static irqreturn_t imx_snvs_pwrkey_interrupt(int irq, void *dev_id)
 	void __iomem *ioaddr = pdata->ioaddr;
 	u32 lp_status;
 
+	pm_wakeup_event(pdata->input->dev.parent, 0);
 	lp_status = readl_relaxed(ioaddr + SNVS_LPSR_REG);
 	if (lp_status & SNVS_LPSR_SPO)
 		mod_timer(&pdata->check_timer, jiffies + msecs_to_jiffies(2));
@@ -129,7 +131,7 @@ static int imx_snvs_pwrkey_probe(struct platform_device *pdev)
 	if (pdata->irq >= 0) {
 		ret = devm_request_irq(&pdev->dev, pdata->irq,
 					imx_snvs_pwrkey_interrupt,
-					IRQF_TRIGGER_HIGH, pdev->name, pdev);
+					IRQF_TRIGGER_HIGH | IRQF_NO_SUSPEND, pdev->name, pdev);
 		if (ret) {
 			dev_err(&pdev->dev, "interrupt not available.\n");
 			return ret;
-- 
1.7.5.4

