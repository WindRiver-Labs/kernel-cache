From e7b5b242a0c5a7f54bc42777f61adcf2ef788d4c Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Fri, 31 Jul 2015 23:21:39 +0800
Subject: [PATCH 0986/1221] MLK-11281-12 ARM: imx: add system counter
 save/restore for lpsr

Add system counter state retention for i.MX7D LPSR mode.

Signed-off-by: Anson Huang <b20788@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/mach-imx/pm-imx7.c |   29 +++++++++++++++++++++++++++++
 1 files changed, 29 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-imx/pm-imx7.c b/arch/arm/mach-imx/pm-imx7.c
index 14ca1ff..e504826 100644
--- a/arch/arm/mach-imx/pm-imx7.c
+++ b/arch/arm/mach-imx/pm-imx7.c
@@ -116,6 +116,8 @@ static void __iomem *console_base;
 static void __iomem *suspend_ocram_base;
 static void __iomem *iomuxc_base;
 static void __iomem *gpt1_base;
+static void __iomem *system_counter_ctrl_base;
+static void __iomem *system_counter_cmp_base;
 static void (*imx7_suspend_in_ocram_fn)(void __iomem *ocram_vbase);
 struct imx7_cpu_pm_info *pm_info;
 static bool lpsr_enabled;
@@ -145,6 +147,7 @@ static u32 ccm_root[][2] = {
 static u32 pfd_a, pfd_b;
 static u32 pll[15];
 static u32 gpt1_regs[MAX_GPT];
+static u32 sys_ctrl_reg, sys_cmp_reg;
 /*
  * suspend ocram space layout:
  * ======================== high address ======================
@@ -479,6 +482,18 @@ static void imx7_ccm_restore(void)
 	writel_relaxed(pfd_b, pm_info->anatop_base.vbase + PFD_B_OFFSET);
 }
 
+static void imx7_sys_counter_save(void)
+{
+	sys_ctrl_reg = readl_relaxed(system_counter_ctrl_base);
+	sys_cmp_reg = readl_relaxed(system_counter_cmp_base);
+}
+
+static void imx7_sys_counter_restore(void)
+{
+	writel_relaxed(sys_ctrl_reg, system_counter_ctrl_base);
+	writel_relaxed(sys_cmp_reg, system_counter_cmp_base);
+}
+
 static void imx7_gpt_save(void)
 {
 	gpt1_regs[0] = readl_relaxed(gpt1_base + GPT_CR);
@@ -625,6 +640,7 @@ static int imx7_pm_enter(suspend_state_t state)
 				imx7_iomuxc_gpr_save();
 				imx7_ccm_save();
 				imx7_gpt_save();
+				imx7_sys_counter_save();
 			}
 		}
 
@@ -638,6 +654,7 @@ static int imx7_pm_enter(suspend_state_t state)
 			imx7_iomuxc_gpr_restore();
 			imx7_ccm_restore();
 			imx7_gpt_restore();
+			imx7_sys_counter_restore();
 		}
 		if (imx_gpcv2_is_mf_mix_off() ||
 			imx7_pm_is_resume_from_lpsr()) {
@@ -939,6 +956,18 @@ void __init imx7d_pm_init(void)
 		if (np)
 			gpt1_base = of_iomap(np, 0);
 		WARN_ON(!gpt1_base);
+
+		np = of_find_node_by_path(
+			"/soc/aips-bus@30400000/system-counter-cmp@306b0000");
+		if (np)
+			system_counter_cmp_base = of_iomap(np, 0);
+		WARN_ON(!system_counter_cmp_base);
+
+		np = of_find_node_by_path(
+			"/soc/aips-bus@30400000/system-counter-ctrl@306c0000");
+		if (np)
+			system_counter_ctrl_base = of_iomap(np, 0);
+		WARN_ON(!system_counter_ctrl_base);
 	}
 
 	if (imx_ddrc_get_ddr_type() == IMX_DDR_TYPE_LPDDR3)
-- 
1.7.5.4

