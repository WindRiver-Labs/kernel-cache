From a3a275cdd45991ad33d4f4fe0fc7ec2fe4106ef7 Mon Sep 17 00:00:00 2001
From: Fugang Duan <b38611@freescale.com>
Date: Tue, 10 Mar 2015 15:14:49 +0800
Subject: [PATCH 0158/1221] MLK-10395 ARM: imx: add uart clk parent to OSC
 support for i.MX7D

when kernel command line has "uart_from_osc" defined, set uart1
parent clock to OSC for low power case.

The patch also abstract the kernel parameter for IMX common to
reduce the redundant code. But for i.MX6SL patform, the origin
kernel parameter is uart_at_4M, now is changed to uart_from_osc.

Signed-off-by: Fugang Duan <B38611@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/mach-imx/clk-imx6sl.c |    8 --------
 arch/arm/mach-imx/clk-imx6sx.c |    8 --------
 arch/arm/mach-imx/clk-imx7d.c  |    5 ++++-
 arch/arm/mach-imx/clk.c        |    9 +++++++++
 arch/arm/mach-imx/clk.h        |    1 +
 5 files changed, 14 insertions(+), 17 deletions(-)

diff --git a/arch/arm/mach-imx/clk-imx6sl.c b/arch/arm/mach-imx/clk-imx6sl.c
index 1a6a226..5265b70 100644
--- a/arch/arm/mach-imx/clk-imx6sl.c
+++ b/arch/arm/mach-imx/clk-imx6sl.c
@@ -38,7 +38,6 @@
 #define BM_PLL_ARM_LOCK		(1 << 31)
 #define PLL_ARM_DIV_792M	66
 
-static bool uart_from_osc;
 static const char *step_sels[]		= { "osc", "pll2_pfd2", };
 static const char *pll1_sw_sels[]	= { "pll1_sys", "step", };
 static const char *ocram_alt_sels[]	= { "pll2_pfd2", "pll3_pfd1", };
@@ -184,13 +183,6 @@ void imx6sl_set_wait_clk(bool enter)
 		;
 }
 
-static int __init setup_uart_clk(char *uart_rate)
-{
-	uart_from_osc = true;
-	return 1;
-}
-__setup("uart_at_4M", setup_uart_clk);
-
 static void __init imx6sl_clocks_init(struct device_node *ccm_node)
 {
 	struct device_node *np;
diff --git a/arch/arm/mach-imx/clk-imx6sx.c b/arch/arm/mach-imx/clk-imx6sx.c
index f61237d..185034f 100644
--- a/arch/arm/mach-imx/clk-imx6sx.c
+++ b/arch/arm/mach-imx/clk-imx6sx.c
@@ -141,7 +141,6 @@ static u32 share_count_ssi2;
 static u32 share_count_ssi3;
 static u32 share_count_sai1;
 static u32 share_count_sai2;
-static bool uart_from_osc;
 
 /*
  * As IMX6SX_CLK_M4_PRE_SEL is NOT a glitchless MUX, so when
@@ -175,13 +174,6 @@ void imx6sx_set_m4_highfreq(bool high_freq)
 	imx_gpc_release_m4_in_sleep();
 }
 
-static int __init setup_uart_clk(char *uart_rate)
-{
-	uart_from_osc = true;
-	return 1;
-}
-__setup("uart_from_osc", setup_uart_clk);
-
 static void __init imx6sx_clocks_init(struct device_node *ccm_node)
 {
 	struct device_node *np;
diff --git a/arch/arm/mach-imx/clk-imx7d.c b/arch/arm/mach-imx/clk-imx7d.c
index 8f6def9..7d805df 100644
--- a/arch/arm/mach-imx/clk-imx7d.c
+++ b/arch/arm/mach-imx/clk-imx7d.c
@@ -883,7 +883,10 @@ static void __init imx7d_clocks_init(struct device_node *ccm_node)
 	imx_clk_set_parent(clks[IMX7D_ENET2_TIME_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
 
 	/* set uart module clock's parent clock source that must be great then 80Mhz */
-	imx_clk_set_parent(clks[IMX7D_UART1_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
+	if (uart_from_osc)
+		imx_clk_set_parent(clks[IMX7D_UART1_ROOT_SRC], clks[IMX7D_OSC_24M_CLK]);
+	else
+		imx_clk_set_parent(clks[IMX7D_UART1_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
 	imx_clk_set_parent(clks[IMX7D_UART2_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
 	imx_clk_set_parent(clks[IMX7D_UART3_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
 	imx_clk_set_parent(clks[IMX7D_UART4_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
diff --git a/arch/arm/mach-imx/clk.c b/arch/arm/mach-imx/clk.c
index edc35df..69fafff 100644
--- a/arch/arm/mach-imx/clk.c
+++ b/arch/arm/mach-imx/clk.c
@@ -7,6 +7,8 @@
 
 DEFINE_SPINLOCK(imx_ccm_lock);
 
+bool uart_from_osc;
+
 static struct clk * __init imx_obtain_fixed_clock_from_dt(const char *name)
 {
 	struct of_phandle_args phandle;
@@ -63,3 +65,10 @@ void imx_cscmr1_fixup(u32 *val)
 	*val ^= CSCMR1_FIXUP;
 	return;
 }
+
+static int __init setup_uart_clk(char *uart_rate)
+{
+	uart_from_osc = true;
+	return 1;
+}
+__setup("uart_from_osc", setup_uart_clk);
diff --git a/arch/arm/mach-imx/clk.h b/arch/arm/mach-imx/clk.h
index 2848aba..c0d9f10 100644
--- a/arch/arm/mach-imx/clk.h
+++ b/arch/arm/mach-imx/clk.h
@@ -9,6 +9,7 @@ extern spinlock_t imx_ccm_lock;
 extern void imx_cscmr1_fixup(u32 *val);
 extern struct imx_sema4_mutex *amp_power_mutex;
 extern struct imx_shared_mem *shared_mem;
+extern bool uart_from_osc;
 
 struct clk *imx_clk_pllv1(const char *name, const char *parent,
 		void __iomem *base);
-- 
1.7.5.4

