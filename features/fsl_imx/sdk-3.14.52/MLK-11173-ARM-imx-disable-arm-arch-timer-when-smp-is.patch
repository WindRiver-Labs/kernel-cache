From 0303e384ff05fee485de986c87acd481045d995b Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Sat, 27 Jun 2015 00:23:36 +0800
Subject: [PATCH 0836/1221] MLK-11173 ARM: imx: disable arm arch timer when
 smp is NOT enabled

When SMP is deselected, ARM_ARCH_TIMER is still enabled while
broadcast time is disabled, so when system enters WAIT mode,
ARM platform's clock will be disabled, then system tick timer
will stop and cause system stay at WAIT mode and timer event
will NOT come as expected.

To fix this issue, we do runtime check in our timer driver,
if SMP is NOT enabled, ARM_ARCH_TIMER will be disabled and
using GPT timer always.

Signed-off-by: Anson Huang <b20788@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/mach-imx/time.c |   17 +++++++++++++++++
 1 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-imx/time.c b/arch/arm/mach-imx/time.c
index 7d7df7a..9cbb26d 100644
--- a/arch/arm/mach-imx/time.c
+++ b/arch/arm/mach-imx/time.c
@@ -83,6 +83,14 @@ static enum clock_event_mode clockevent_mode = CLOCK_EVT_MODE_UNUSED;
 
 static void __iomem *timer_base;
 
+#ifndef CONFIG_SMP
+static struct property device_disabled = {
+	.name = "status",
+	.length = sizeof("disabled"),
+	.value = "disabled",
+};
+#endif
+
 static inline void gpt_irq_disable(void)
 {
 	unsigned int tmp;
@@ -366,6 +374,15 @@ void __init mxc_timer_init_dt(struct device_node *np)
 {
 	void __iomem *base;
 	int irq;
+#ifndef CONFIG_SMP
+	struct device_node *node;
+
+	node = of_find_compatible_node(NULL, NULL, "arm,armv7-timer");
+	if (node) {
+		pr_info("disable arm arch timer for nosmp!\n");
+		of_add_property(node, &device_disabled);
+	}
+#endif
 
 	base = of_iomap(np, 0);
 	WARN_ON(!base);
-- 
1.7.5.4

