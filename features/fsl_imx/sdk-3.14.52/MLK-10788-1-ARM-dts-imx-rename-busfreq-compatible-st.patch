From 0d9d41c0f7dfae97a88ab91b8958cdf60badbfd1 Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Fri, 1 May 2015 15:10:29 +0800
Subject: [PATCH 0506/1221] MLK-10788-1 ARM: dts: imx: rename busfreq
 compatible string

Rename busfreq compatible string name from "fsl,imx6_busfreq
to "fsl,imx_busfreq".

Signed-off-by: Anson Huang <b20788@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 .../devicetree/bindings/arm/imx/busfreq-imx.txt    |   64 ++++++++++++++++++++
 .../devicetree/bindings/arm/imx/busfreq-imx6.txt   |   64 --------------------
 arch/arm/boot/dts/imx6dl.dtsi                      |    2 +-
 arch/arm/boot/dts/imx6q.dtsi                       |    2 +-
 arch/arm/boot/dts/imx6sl.dtsi                      |    2 +-
 arch/arm/boot/dts/imx6sx.dtsi                      |    2 +-
 6 files changed, 68 insertions(+), 68 deletions(-)
 create mode 100644 Documentation/devicetree/bindings/arm/imx/busfreq-imx.txt
 delete mode 100644 Documentation/devicetree/bindings/arm/imx/busfreq-imx6.txt

diff --git a/Documentation/devicetree/bindings/arm/imx/busfreq-imx.txt b/Documentation/devicetree/bindings/arm/imx/busfreq-imx.txt
new file mode 100644
index 0000000..daa3384
--- /dev/null
+++ b/Documentation/devicetree/bindings/arm/imx/busfreq-imx.txt
@@ -0,0 +1,64 @@
+Freescale Busfreq driver
+
+It is a generic driver that manages the frequency of the DDR, AHB and AXI buses in the iMX6x architecture.
+It works for both SMP and UP systems and for both DDR3 and LPDDR2 memory types.
+
+Required properties are listed below:
+- compatible: should be "fsl,imx_busfreq"
+- clocks: Lists the various clocks used by the busfreq driver
+- interrupts - Lists the interrupts used by the busfreq driver. This is needed only for SMP architecutre.
+- fsl,max_ddr_freq - The max ddr freq for this chip
+
+Examples:
+For SOC imx6q.dtsi:
+	busfreq { /* BUSFREQ */
+		compatible = "fsl,imx_busfreq";
+		clocks = <&clks 171>, <&clks 6>, <&clks 11>, <&clks 104>, <&clks 172>, <&clks 58>,
+			<&clks 18>, <&clks 60>, <&clks 20>, <&clks 3>;
+		clock-names = "pll2_bus", "pll2_pfd2_396m", "pll2_198m", "arm", "pll3_usb_otg", "periph",
+			"periph_pre", "periph_clk2", "periph_clk2_sel", "osc";
+		interrupts = <0 107 0x04>, <0 112 0x4>, <0 113 0x4>, <0 114 0x4>;
+		interrupt-names = "irq_busfreq_0", "irq_busfreq_1", "irq_busfreq_2", "irq_busfreq_3";
+		fsl,max_ddr_freq = <528000000>;
+	};
+
+The Freescale Busfreq driver supports the following setpoints for the DDR freq:
+enum bus_freq_mode {
+	BUS_FREQ_HIGH, -> The max freq the SOC supports
+	BUS_FREQ_MED,  -> Medium setpoint (ex 400MHz for DDR3 when the max is 528MHz)
+	BUS_FREQ_AUDIO, -> Audio playback freq (50MHz)
+	BUS_FREQ_LOW,  -> Low power IDLE freq (24MHz)
+};
+
+Currently the Freescale Busfreq driver implementation requires drivers to call the following APIs:
+1. request_bus_freq(enum bus_freq_mode):
+	The driver is requesting the system and ddr freq to be set to the requested value. The driver should call this
+	API before it even enables its clocks.
+
+2. release_bus_freq(enum bus_freq_mode):
+	The driver no longer needs the system and ddr freq at the required value. The driver should call this API after
+	its work is done and it has disabled its clocks.
+
+Examples:
+In the IPU driver, the requesting and releasing of the required bus frequency is tied into the runtime PM implementation:
+
+int ipu_runtime_suspend(struct device *dev)
+{
+	release_bus_freq(BUS_FREQ_HIGH);
+	dev_dbg(dev, "ipu busfreq high release.\n");
+
+	return 0;
+}
+
+int ipu_runtime_resume(struct device *dev)
+{
+	request_bus_freq(BUS_FREQ_HIGH);
+	dev_dbg(dev, "ipu busfreq high requst.\n");
+
+	return 0;
+}
+
+static const struct dev_pm_ops ipu_pm_ops = {
+	SET_RUNTIME_PM_OPS(ipu_runtime_suspend, ipu_runtime_resume, NULL)
+	SET_SYSTEM_SLEEP_PM_OPS(ipu_suspend, ipu_resume)
+};
diff --git a/Documentation/devicetree/bindings/arm/imx/busfreq-imx6.txt b/Documentation/devicetree/bindings/arm/imx/busfreq-imx6.txt
deleted file mode 100644
index 93386a8..0000000
--- a/Documentation/devicetree/bindings/arm/imx/busfreq-imx6.txt
+++ /dev/null
@@ -1,64 +0,0 @@
-Freescale Busfreq driver
-
-It is a generic driver that manages the frequency of the DDR, AHB and AXI buses in the iMX6x architecture.
-It works for both SMP and UP systems and for both DDR3 and LPDDR2 memory types.
-
-Required properties are listed below:
-- compatible: should be "fsl,imx6_busfreq"
-- clocks: Lists the various clocks used by the busfreq driver
-- interrupts - Lists the interrupts used by the busfreq driver. This is needed only for SMP architecutre.
-- fsl,max_ddr_freq - The max ddr freq for this chip
-
-Examples:
-For SOC imx6q.dtsi:
-	busfreq { /* BUSFREQ */
-		compatible = "fsl,imx6_busfreq";
-		clocks = <&clks 171>, <&clks 6>, <&clks 11>, <&clks 104>, <&clks 172>, <&clks 58>,
-			<&clks 18>, <&clks 60>, <&clks 20>, <&clks 3>;
-		clock-names = "pll2_bus", "pll2_pfd2_396m", "pll2_198m", "arm", "pll3_usb_otg", "periph",
-			"periph_pre", "periph_clk2", "periph_clk2_sel", "osc";
-		interrupts = <0 107 0x04>, <0 112 0x4>, <0 113 0x4>, <0 114 0x4>;
-		interrupt-names = "irq_busfreq_0", "irq_busfreq_1", "irq_busfreq_2", "irq_busfreq_3";
-		fsl,max_ddr_freq = <528000000>;
-	};
-
-The Freescale Busfreq driver supports the following setpoints for the DDR freq:
-enum bus_freq_mode {
-	BUS_FREQ_HIGH, -> The max freq the SOC supports
-	BUS_FREQ_MED,  -> Medium setpoint (ex 400MHz for DDR3 when the max is 528MHz)
-	BUS_FREQ_AUDIO, -> Audio playback freq (50MHz)
-	BUS_FREQ_LOW,  -> Low power IDLE freq (24MHz)
-};
-
-Currently the Freescale Busfreq driver implementation requires drivers to call the following APIs:
-1. request_bus_freq(enum bus_freq_mode):
-	The driver is requesting the system and ddr freq to be set to the requested value. The driver should call this
-	API before it even enables its clocks.
-
-2. release_bus_freq(enum bus_freq_mode):
-	The driver no longer needs the system and ddr freq at the required value. The driver should call this API after
-	its work is done and it has disabled its clocks.
-
-Examples:
-In the IPU driver, the requesting and releasing of the required bus frequency is tied into the runtime PM implementation:
-
-int ipu_runtime_suspend(struct device *dev)
-{
-	release_bus_freq(BUS_FREQ_HIGH);
-	dev_dbg(dev, "ipu busfreq high release.\n");
-
-	return 0;
-}
-
-int ipu_runtime_resume(struct device *dev)
-{
-	request_bus_freq(BUS_FREQ_HIGH);
-	dev_dbg(dev, "ipu busfreq high requst.\n");
-
-	return 0;
-}
-
-static const struct dev_pm_ops ipu_pm_ops = {
-	SET_RUNTIME_PM_OPS(ipu_runtime_suspend, ipu_runtime_resume, NULL)
-	SET_SYSTEM_SLEEP_PM_OPS(ipu_suspend, ipu_resume)
-};
diff --git a/arch/arm/boot/dts/imx6dl.dtsi b/arch/arm/boot/dts/imx6dl.dtsi
index 84b9a16..6e9bb0a 100644
--- a/arch/arm/boot/dts/imx6dl.dtsi
+++ b/arch/arm/boot/dts/imx6dl.dtsi
@@ -60,7 +60,7 @@
 
 	soc {
 		busfreq {
-			compatible = "fsl,imx6_busfreq";
+			compatible = "fsl,imx_busfreq";
 			clocks = <&clks IMX6QDL_CLK_PLL2_BUS>, <&clks IMX6QDL_CLK_PLL2_PFD2_396M>,
 				<&clks IMX6QDL_CLK_PLL2_198M>, <&clks IMX6QDL_CLK_ARM>,
 				<&clks IMX6QDL_CLK_PLL3_USB_OTG>, <&clks IMX6QDL_CLK_PERIPH>,
diff --git a/arch/arm/boot/dts/imx6q.dtsi b/arch/arm/boot/dts/imx6q.dtsi
index 1648611..0298709 100644
--- a/arch/arm/boot/dts/imx6q.dtsi
+++ b/arch/arm/boot/dts/imx6q.dtsi
@@ -82,7 +82,7 @@
 
 	soc {
 		busfreq {
-			compatible = "fsl,imx6_busfreq";
+			compatible = "fsl,imx_busfreq";
 			clocks = <&clks 171>, <&clks 6>, <&clks 11>, <&clks 104>, <&clks 172>, <&clks 58>,
 				<&clks 18>, <&clks 60>, <&clks 20>, <&clks 3>;
 			clock-names = "pll2_bus", "pll2_pfd2_396m", "pll2_198m", "arm", "pll3_usb_otg", "periph",
diff --git a/arch/arm/boot/dts/imx6sl.dtsi b/arch/arm/boot/dts/imx6sl.dtsi
index cc0b0a1..b86cbb4d 100644
--- a/arch/arm/boot/dts/imx6sl.dtsi
+++ b/arch/arm/boot/dts/imx6sl.dtsi
@@ -110,7 +110,7 @@
 		ranges;
 
 		busfreq { /* BUSFREQ */
-			compatible = "fsl,imx6_busfreq";
+			compatible = "fsl,imx_busfreq";
 			clocks = <&clks IMX6SL_CLK_PLL2_BUS>, <&clks IMX6SL_CLK_PLL2_PFD2>,
 					<&clks IMX6SL_CLK_PLL2_198M>, <&clks IMX6SL_CLK_ARM>,
 					<&clks IMX6SL_CLK_PLL3_USB_OTG>, <&clks IMX6SL_CLK_PERIPH>,
diff --git a/arch/arm/boot/dts/imx6sx.dtsi b/arch/arm/boot/dts/imx6sx.dtsi
index fc70074..7febe49 100644
--- a/arch/arm/boot/dts/imx6sx.dtsi
+++ b/arch/arm/boot/dts/imx6sx.dtsi
@@ -140,7 +140,7 @@
 		ranges;
 
 		busfreq {
-			compatible = "fsl,imx6_busfreq";
+			compatible = "fsl,imx_busfreq";
 			clocks = <&clks IMX6SX_CLK_PLL2_BUS>, <&clks IMX6SX_CLK_PLL2_PFD2>,
 				<&clks IMX6SX_CLK_PLL2_198M>, <&clks IMX6SX_CLK_ARM>,
 				<&clks IMX6SX_CLK_PLL3_USB_OTG>, <&clks IMX6SX_CLK_PERIPH>,
-- 
1.7.5.4

