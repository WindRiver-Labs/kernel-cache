From 05cf96aaac9779b3726281e40121b96bfd0a1555 Mon Sep 17 00:00:00 2001
From: Liu Ying <Ying.Liu@freescale.com>
Date: Thu, 9 Apr 2015 18:02:48 +0800
Subject: [PATCH 0406/1221] MLK-10660-2 mxc IPUv3: common/disp: Balance pixel
 clock enable/disable count

The usual sequence[1] to enable/disable a display channel is
1) ipu_init_channel()
2) ipu_init_channel_buffer()
3) ipu_enable_channel() -> enable pixel clock
4) ipu_disable_channel()
5) ipu_uninit_channel() -> disable pixel clock

We currently enable pixel clock in ipu_enable_channel() while disable it
in ipu_uninit_channel() to meet some critical pipeline on/off sequence.
This will make the bail-out path for [1] fail to balance pixel clock
enable/disable count if there is no flag to reflect the clock's status.
For example, if we bail out after 1) by calling 5), we has the risk to
additionally disable pixel clock for one time.  This patch adds the
pixel_clk_en[2] flags to help balance the count.

Signed-off-by: Liu Ying <Ying.Liu@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/mxc/ipu3/ipu_common.c |    5 ++++-
 drivers/mxc/ipu3/ipu_disp.c   |    1 +
 drivers/mxc/ipu3/ipu_prv.h    |    1 +
 3 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/drivers/mxc/ipu3/ipu_common.c b/drivers/mxc/ipu3/ipu_common.c
index 9ec7c1a..8b91a29 100644
--- a/drivers/mxc/ipu3/ipu_common.c
+++ b/drivers/mxc/ipu3/ipu_common.c
@@ -1150,8 +1150,11 @@ void ipu_uninit_channel(struct ipu_soc *ipu, ipu_channel_t channel)
 	 * usecount is 1) after clearing DC/DP/DI bits in IPU_CONF
 	 * register to prevent LVDS display channel starvation.
 	 */
-	if (_ipu_is_primary_disp_chan(in_dma))
+	if (_ipu_is_primary_disp_chan(in_dma) &&
+	    ipu->pixel_clk_en[ipu->dc_di_assignment[dc_chan]]) {
 		clk_disable_unprepare(ipu->pixel_clk[ipu->dc_di_assignment[dc_chan]]);
+		ipu->pixel_clk_en[ipu->dc_di_assignment[dc_chan]] = false;
+	}
 
 	mutex_unlock(&ipu->mutex_lock);
 
diff --git a/drivers/mxc/ipu3/ipu_disp.c b/drivers/mxc/ipu3/ipu_disp.c
index c8d202d..f171920 100644
--- a/drivers/mxc/ipu3/ipu_disp.c
+++ b/drivers/mxc/ipu3/ipu_disp.c
@@ -739,6 +739,7 @@ void _ipu_dp_dc_enable(struct ipu_soc *ipu, ipu_channel_t channel)
 	ipu_dc_write(ipu, reg, DC_WR_CH_CONF(dc_chan));
 
 	clk_prepare_enable(ipu->pixel_clk[di]);
+	ipu->pixel_clk_en[ipu->dc_di_assignment[dc_chan]] = true;
 }
 
 static irqreturn_t dc_irq_handler(int irq, void *dev_id)
diff --git a/drivers/mxc/ipu3/ipu_prv.h b/drivers/mxc/ipu3/ipu_prv.h
index a6a4602..6c6ea3a 100644
--- a/drivers/mxc/ipu3/ipu_prv.h
+++ b/drivers/mxc/ipu3/ipu_prv.h
@@ -71,6 +71,7 @@ struct ipu_soc {
 	struct clk *di_clk[2];
 	struct clk *di_clk_sel[2];
 	struct clk *pixel_clk[2];
+	bool pixel_clk_en[2];
 	struct clk *pixel_clk_sel[2];
 	struct clk *csi_clk[2];
 	struct clk *prg_clk;
-- 
1.7.5.4

