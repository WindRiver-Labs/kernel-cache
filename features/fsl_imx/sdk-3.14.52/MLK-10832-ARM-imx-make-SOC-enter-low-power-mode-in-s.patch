From a9b44b5550aad909e19fbfec2c09e45036e5187d Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Thu, 7 May 2015 18:34:30 +0800
Subject: [PATCH 0534/1221] MLK-10832 ARM: imx: make SOC enter low power mode
 in standby suspend

When system enters standby mode, SOC should enter low power mode,
the difference of standby and mem are as below:

in standby mode:

OSC NOT power down;
ARM NOT power down;
PMIC_VSTBY_REQ NOT assert;

while in mem mode, all of them are powered down.

Also, as GPC requires all cores' power mode settings to be same at any
time, so no need to seperate cpu id when we try to set low power mode,
they will be set together at any time.

Signed-off-by: Anson Huang <b20788@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/mach-imx/gpcv2.c   |   24 +++++++++++++++---------
 arch/arm/mach-imx/pm-imx7.c |    4 ++++
 2 files changed, 19 insertions(+), 9 deletions(-)

diff --git a/arch/arm/mach-imx/gpcv2.c b/arch/arm/mach-imx/gpcv2.c
index 235672d..c400676 100644
--- a/arch/arm/mach-imx/gpcv2.c
+++ b/arch/arm/mach-imx/gpcv2.c
@@ -155,7 +155,7 @@ void imx_gpcv2_irq_mask(struct irq_data *d)
 	writel_relaxed(val, reg);
 }
 
-void imx_gpcv2_set_lpm_mode(u32 cpu, enum mxc_cpu_pwr_mode mode)
+void imx_gpcv2_set_lpm_mode(enum mxc_cpu_pwr_mode mode)
 {
 	unsigned long flags;
 	u32 val1, val2;
@@ -196,6 +196,14 @@ void imx_gpcv2_set_lpm_mode(u32 cpu, enum mxc_cpu_pwr_mode mode)
 		val1 &= ~BM_LPCR_A7_BSC_CPU_CLK_ON_LPM;
 		imx_gpcv2_irq_mask(&iomuxc_irq_desc->irq_data);
 		break;
+	case STOP_POWER_ON:
+		val1 |= A7_LPM_STOP << BP_LPCR_A7_BSC_LPM0;
+		val1 &= ~BM_LPCR_A7_BSC_CPU_CLK_ON_LPM;
+		val2 |= BM_SLPCR_EN_DSM;
+		val2 |= BM_SLPCR_RBC_EN;
+		val2 |= BM_SLPCR_BYPASS_PMIC_READY;
+		imx_gpcv2_irq_mask(&iomuxc_irq_desc->irq_data);
+		break;
 	case STOP_POWER_OFF:
 		val1 |= A7_LPM_STOP << BP_LPCR_A7_BSC_LPM0;
 		val1 &= ~BM_LPCR_A7_BSC_CPU_CLK_ON_LPM;
@@ -357,12 +365,10 @@ int imx_gpcv2_mf_power_on(unsigned int irq, unsigned int on)
 void imx_gpcv2_pre_suspend(bool arm_power_off)
 {
 	void __iomem *reg_imr1 = gpc_base + GPC_IMR1_CORE0;
-	int i, cpu = 0;
+	int i;
 
 	if (arm_power_off) {
-		/* all CPU's lpm need to be set */
-		for_each_possible_cpu(cpu)
-			imx_gpcv2_set_lpm_mode(cpu, STOP_POWER_OFF);
+		imx_gpcv2_set_lpm_mode(STOP_POWER_OFF);
 		/* enable core0 power down/up with low power mode */
 		imx_gpcv2_set_cpu_power_gate_by_lpm(0, true);
 		/* enable plat power down with low power mode */
@@ -393,6 +399,8 @@ void imx_gpcv2_pre_suspend(bool arm_power_off)
 		/* enable core0, scu */
 		imx_gpcv2_set_m_core_pgc(true, GPC_PGC_C0);
 		imx_gpcv2_set_m_core_pgc(true, GPC_PGC_SCU);
+	} else {
+		imx_gpcv2_set_lpm_mode(STOP_POWER_ON);
 	}
 
 	for (i = 0; i < IMR_NUM; i++) {
@@ -404,14 +412,12 @@ void imx_gpcv2_pre_suspend(bool arm_power_off)
 void imx_gpcv2_post_resume(void)
 {
 	void __iomem *reg_imr1 = gpc_base + GPC_IMR1_CORE0;
-	int i, cpu = 0;
+	int i;
 
 	for (i = 0; i < IMR_NUM; i++)
 		writel_relaxed(gpcv2_saved_imrs[i], reg_imr1 + i * 4);
 
-	/* all cpu's lpm need to be set */
-	for_each_possible_cpu(cpu)
-		imx_gpcv2_set_lpm_mode(cpu, WAIT_CLOCKED);
+	imx_gpcv2_set_lpm_mode(WAIT_CLOCKED);
 	imx_gpcv2_set_cpu_power_gate_by_lpm(0, false);
 	imx_gpcv2_set_plat_power_gate_by_lpm(false);
 
diff --git a/arch/arm/mach-imx/pm-imx7.c b/arch/arm/mach-imx/pm-imx7.c
index 884fc04..2e9f18d 100644
--- a/arch/arm/mach-imx/pm-imx7.c
+++ b/arch/arm/mach-imx/pm-imx7.c
@@ -320,10 +320,14 @@ static int imx7_pm_enter(suspend_state_t state)
 
 	switch (state) {
 	case PM_SUSPEND_STANDBY:
+		imx_anatop_pre_suspend();
+		imx_gpcv2_pre_suspend(false);
 
 		/* Zzz ... */
 		cpu_do_idle();
 
+		imx_anatop_post_resume();
+		imx_gpcv2_post_resume();
 		break;
 	case PM_SUSPEND_MEM:
 		imx_anatop_pre_suspend();
-- 
1.7.5.4

