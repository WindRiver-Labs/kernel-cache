From 8eab5063d05b24a3813e8c0a76008447727bd018 Mon Sep 17 00:00:00 2001
From: Fabio Estevam <fabio.estevam@freescale.com>
Date: Mon, 9 Mar 2015 09:46:17 +0800
Subject: [PATCH 0138/1221] serial: imx: Do not store/restore the UBRC
 register

UBRC is a read-only register, so we should not store and restore it inside
imx_flush_buffer().
(This patch is from upstream, did some confliction merge)

Reported-by: Fugang Duan <B38611@freescale.com>
Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com>
Acked-by: Fugang Duan <B38611@freescale.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/tty/serial/imx.c |    6 ++----
 1 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index edcdeeb..3737e82 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -1407,8 +1407,7 @@ static void imx_flush_buffer(struct uart_port *port)
 	 */
 	sport->saved_reg[0] = readl(sport->port.membase + UBIR);
 	sport->saved_reg[1] = readl(sport->port.membase + UBMR);
-	sport->saved_reg[2] = readl(sport->port.membase + UBRC);
-	sport->saved_reg[3] = readl(sport->port.membase + IMX21_UTS);
+	sport->saved_reg[2] = readl(sport->port.membase + IMX21_UTS);
 
 	i = 100;
 
@@ -1422,8 +1421,7 @@ static void imx_flush_buffer(struct uart_port *port)
 	/* Restore the registers */
 	writel(sport->saved_reg[0], sport->port.membase + UBIR);
 	writel(sport->saved_reg[1], sport->port.membase + UBMR);
-	writel(sport->saved_reg[2], sport->port.membase + UBRC);
-	writel(sport->saved_reg[3], sport->port.membase + IMX21_UTS);
+	writel(sport->saved_reg[2], sport->port.membase + IMX21_UTS);
 }
 
 static void
-- 
1.7.5.4

