From 40f913e4da293a2b5d51d72a1d56cca4d5382067 Mon Sep 17 00:00:00 2001
From: Robin Gong <b38343@freescale.com>
Date: Mon, 12 Oct 2015 12:46:14 +0800
Subject: [PATCH 1145/1221] MLK-11689: dma: imx-sdma: correct channel context
 restore

Before, checking SDMA_H_C0PTR register to know whether sdma controller turned
off in DSM, if yes restore channel context back. Unfortunatly, this checking
is wrong, because SDMA_H_C0PTR has been initialized as non-zero value in
sdma_resume, which means channel context will never be restored back if mega/
fast off on i.mx6sx or i.mx7d. Using 'suspend_off' flag to keep this 'restore
needed' requirement.

Signed-off-by: Robin Gong <b38343@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/dma/imx-sdma.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/drivers/dma/imx-sdma.c b/drivers/dma/imx-sdma.c
index be1c36e..d89381c 100644
--- a/drivers/dma/imx-sdma.c
+++ b/drivers/dma/imx-sdma.c
@@ -353,6 +353,7 @@ struct sdma_engine {
 	struct gen_pool 		*iram_pool;
 	u32                             spba_start_addr;
 	u32                             spba_end_addr;
+	bool				suspend_off;
 };
 
 static struct sdma_driver_data sdma_imx31 = {
@@ -984,7 +985,7 @@ static int sdma_resume_channel(struct sdma_channel *sdmac)
 	/*
 	 * restore back context since context may loss if mega/fast OFF
 	 */
-	if (!readl_relaxed(sdma->regs + SDMA_H_C0PTR)) {
+	if (sdma->suspend_off) {
 		if (sdma_load_context(sdmac)) {
 			dev_err(sdmac->sdma->dev, "context load failed.\n");
 			return -EINVAL;
@@ -2175,6 +2176,8 @@ static int sdma_suspend(struct device *dev)
 	struct sdma_engine *sdma = platform_get_drvdata(pdev);
 	int i;
 
+	sdma->suspend_off = false;
+
 	/* Do nothing if not i.MX6SX or i.MX7D*/
 	if (sdma->drvdata != &sdma_imx6sx && sdma->drvdata != &sdma_imx7d)
 		return 0;
@@ -2219,6 +2222,9 @@ static int sdma_resume(struct device *dev)
 		clk_disable(sdma->clk_ahb);
 		return 0;
 	}
+
+	sdma->suspend_off = true;
+
 	/* restore regs and load firmware */
 	for (i = 0; i < MXC_SDMA_SAVED_REG_NUM; i++) {
 		/*
-- 
1.7.5.4

