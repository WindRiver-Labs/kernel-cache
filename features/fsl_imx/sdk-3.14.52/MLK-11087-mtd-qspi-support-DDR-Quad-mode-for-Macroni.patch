From 89dae14db0bde5b308f04713bb40588859b52ea3 Mon Sep 17 00:00:00 2001
From: Han Xu <b45815@freescale.com>
Date: Wed, 10 Jun 2015 17:14:01 -0500
Subject: [PATCH 0796/1221] MLK-11087: mtd:qspi: support DDR Quad mode for
 Macronix mx25l51245g

Enable DDR quad mode for Macronix qspi chip mx25l51245g by setting Quad
bit in status register and enabling in dts file.

The LUT for SPINOR_OP_READ_1_4_4_D was initially designed for Spansion
qspi chip, so there is one cycle for "mode" after address and before
dummy. While Macronix qspi chip doesn't have this feature, so we just
take off one cycle in dts file to bypass this problem.

Signed-off-by: Han Xu <b45815@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/boot/dts/imx7d-sdb-qspi.dts |    2 ++
 drivers/mtd/spi-nor/spi-nor.c        |   10 ++++++++++
 2 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/arch/arm/boot/dts/imx7d-sdb-qspi.dts b/arch/arm/boot/dts/imx7d-sdb-qspi.dts
index 83b0401..d49ddf2 100644
--- a/arch/arm/boot/dts/imx7d-sdb-qspi.dts
+++ b/arch/arm/boot/dts/imx7d-sdb-qspi.dts
@@ -39,6 +39,8 @@
 		#size-cells = <1>;
 		compatible = "macronix,mx25l51245g";
 		spi-max-frequency = <29000000>;
+		/* take off one dummy cycle */
+		spi-nor,ddr-quad-read-dummy = <5>;
 		reg = <0>;
 	};
 };
diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 7b8f4d9..84d2723 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -877,6 +877,14 @@ static int set_ddr_quad_mode(struct spi_nor *nor, u32 jedec_id)
 			return status;
 		}
 		return status;
+	case CFI_MFR_MACRONIX:
+		status = macronix_quad_enable(nor);
+		if (status) {
+			dev_err(nor->dev,
+				"Macronix DDR quad-read not enabled\n");
+			return status;
+		}
+		return status;
 	case CFI_MFR_ST: /* Micron, actually */
 		/* DTR quad read works with the Extended SPI protocol. */
 		return 0;
@@ -1081,6 +1089,8 @@ int spi_nor_scan(struct spi_nor *nor, const struct spi_device_id *id,
 			nor->read_opcode = SPINOR_OP_READ_1_4_4_D;
 		} else if (JEDEC_MFR(info->jedec_id) == CFI_MFR_ST) {
 			nor->read_opcode = SPINOR_OP_READ_1_1_4_D;
+		} else if (JEDEC_MFR(info->jedec_id) == CFI_MFR_MACRONIX) {
+			nor->read_opcode = SPINOR_OP_READ_1_4_4_D;
 		} else {
 			dev_err(dev, "DDR Quad Read is not supported.\n");
 			return -EINVAL;
-- 
1.7.5.4

