From 5a7b031b4e6d6e6261b3d481573026cc6aae3766 Mon Sep 17 00:00:00 2001
From: Fugang Duan <b38611@freescale.com>
Date: Wed, 11 Feb 2015 15:36:56 +0800
Subject: [PATCH 0064/1221] MLK-10252 ARM: imx: clk-imx7d: change the uart
 clock root source

On some i.MX7D arm2 boards, uart console may print dummy chars after the
early of system resume back when do suspend resume test. The current uart
clock root source is set to pll_enet_100m_clk, change the uart clock root
source to pll_sys_main_240m_clk can fix the issue.

Currently, debug found the CCM register set for clock root is correct while
the issue is happening. It may cause the clock is not stable after system
resume back.

Signed-off-by: Fugang Duan <B38611@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 arch/arm/mach-imx/clk-imx7d.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-imx/clk-imx7d.c b/arch/arm/mach-imx/clk-imx7d.c
index 996e019..c297edd 100644
--- a/arch/arm/mach-imx/clk-imx7d.c
+++ b/arch/arm/mach-imx/clk-imx7d.c
@@ -881,13 +881,13 @@ static void __init imx7d_clocks_init(struct device_node *ccm_node)
 	imx_clk_set_parent(clks[IMX7D_ENET2_TIME_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
 
 	/* set uart module clock's parent clock source that must be great then 80Mhz */
-	imx_clk_set_parent(clks[IMX7D_UART1_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
-	imx_clk_set_parent(clks[IMX7D_UART2_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
-	imx_clk_set_parent(clks[IMX7D_UART3_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
-	imx_clk_set_parent(clks[IMX7D_UART4_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
-	imx_clk_set_parent(clks[IMX7D_UART5_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
-	imx_clk_set_parent(clks[IMX7D_UART6_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
-	imx_clk_set_parent(clks[IMX7D_UART7_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
+	imx_clk_set_parent(clks[IMX7D_UART1_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
+	imx_clk_set_parent(clks[IMX7D_UART2_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
+	imx_clk_set_parent(clks[IMX7D_UART3_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
+	imx_clk_set_parent(clks[IMX7D_UART4_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
+	imx_clk_set_parent(clks[IMX7D_UART5_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
+	imx_clk_set_parent(clks[IMX7D_UART6_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
+	imx_clk_set_parent(clks[IMX7D_UART7_ROOT_SRC], clks[IMX7D_PLL_SYS_MAIN_240M_CLK]);
 
 	for (i = 0; i < IMX7D_END_CLK; i++)
 		clk_prepare_enable(clks[i]);
-- 
1.7.5.4

