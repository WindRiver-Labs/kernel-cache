From ffbcbdc28e01c039d3c96bf7c83c30c9c9ac2e31 Mon Sep 17 00:00:00 2001
From: Li Jun <jun.li@freescale.com>
Date: Wed, 29 Apr 2015 17:34:44 +0800
Subject: [PATCH 0488/1221] MLK-10778 usb: chipidea: otg: remove mutex unlock
 and lock while stop and start

Wrongly release mutex lock during otg_statemachine may result in re-enter
otg_statemachine, which is not allowed, we should do next state transtition
after previous one completed.

Signed-off-by: Li Jun <jun.li@freescale.com>
[zou:Original patch taken from
git.freescale.com/imx/fsl-arm-yocto-bsp.git-b imx-3.14.52-1.1.0_ga]
Signed-off-by: zou cao <cao.zou@windriver.com>
---
 drivers/usb/chipidea/otg_fsm.c |    4 ----
 1 files changed, 0 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/chipidea/otg_fsm.c b/drivers/usb/chipidea/otg_fsm.c
index 2cca8c4..ec8f75f 100644
--- a/drivers/usb/chipidea/otg_fsm.c
+++ b/drivers/usb/chipidea/otg_fsm.c
@@ -631,7 +631,6 @@ static int ci_otg_start_host(struct otg_fsm *fsm, int on)
 {
 	struct ci_hdrc	*ci = container_of(fsm, struct ci_hdrc, fsm);
 
-	mutex_unlock(&fsm->lock);
 	if (on) {
 		ci_role_stop(ci);
 		ci_role_start(ci, CI_ROLE_HOST);
@@ -640,7 +639,6 @@ static int ci_otg_start_host(struct otg_fsm *fsm, int on)
 		hw_device_reset(ci);
 		ci_role_start(ci, CI_ROLE_GADGET);
 	}
-	mutex_lock(&fsm->lock);
 	return 0;
 }
 
@@ -650,7 +648,6 @@ static int ci_otg_start_gadget(struct otg_fsm *fsm, int on)
 	unsigned long flags;
 	int gadget_ready = 0;
 
-	mutex_unlock(&fsm->lock);
 	spin_lock_irqsave(&ci->lock, flags);
 	ci->vbus_active = on;
 	if (ci->driver)
@@ -658,7 +655,6 @@ static int ci_otg_start_gadget(struct otg_fsm *fsm, int on)
 	spin_unlock_irqrestore(&ci->lock, flags);
 	if (gadget_ready)
 		ci_hdrc_gadget_connect(&ci->gadget, on);
-	mutex_lock(&fsm->lock);
 
 	return 0;
 }
-- 
1.7.5.4

