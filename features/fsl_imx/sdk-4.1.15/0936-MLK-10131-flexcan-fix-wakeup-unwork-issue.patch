From dc692a49e97e66b1ea983c2727e5ea2ef119d6ad Mon Sep 17 00:00:00 2001
From: Dong Aisheng <b29396@freescale.com>
Date: Thu, 22 Jan 2015 21:48:07 +0800
Subject: [PATCH 0936/1691] MLK-10131 flexcan: fix wakeup unwork issue

commit dc692a49e97e66b1ea983c2727e5ea2ef119d6ad from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

Original code will always disable flexcan during suspend no matter whether
wakeup feature is enabled.
It's caused by merge issue when doing kernel upgrade.

Fix it by removing that disable code.

Signed-off-by: Dong Aisheng <b29396@freescale.com>
(cherry picked from commit 55c8670332973d3184816d3d16c2c3e07681c781)
---
 drivers/net/can/flexcan.c | 19 ++++++++-----------
 1 file changed, 8 insertions(+), 11 deletions(-)

diff --git a/drivers/net/can/flexcan.c b/drivers/net/can/flexcan.c
index aef8b26..34707d1 100644
--- a/drivers/net/can/flexcan.c
+++ b/drivers/net/can/flexcan.c
@@ -1376,11 +1376,7 @@ static int __maybe_unused flexcan_suspend(struct device *device)
 {
 	struct net_device *dev = dev_get_drvdata(device);
 	struct flexcan_priv *priv = netdev_priv(dev);
-	int err;
-
-	err = flexcan_chip_disable(priv);
-	if (err)
-		return err;
+	int err = 0;
 
 	if (netif_running(dev)) {
 		netif_stop_queue(dev);
@@ -1393,20 +1389,21 @@ static int __maybe_unused flexcan_suspend(struct device *device)
 			enable_irq_wake(dev->irq);
 			flexcan_enter_stop_mode(priv);
 		} else {
-			flexcan_chip_disable(priv);
+			err = flexcan_chip_disable(priv);
 		}
 	} else {
-		flexcan_chip_disable(priv);
+		err = flexcan_chip_disable(priv);
 	}
 	priv->can.state = CAN_STATE_SLEEPING;
 
-	return 0;
+	return err;
 }
 
 static int __maybe_unused flexcan_resume(struct device *device)
 {
 	struct net_device *dev = dev_get_drvdata(device);
 	struct flexcan_priv *priv = netdev_priv(dev);
+	int err = 0;
 
 	priv->can.state = CAN_STATE_ERROR_ACTIVE;
 	if (netif_running(dev)) {
@@ -1417,13 +1414,13 @@ static int __maybe_unused flexcan_resume(struct device *device)
 			disable_irq_wake(dev->irq);
 			flexcan_exit_stop_mode(priv);
 		} else {
-			flexcan_chip_enable(priv);
+			err = flexcan_chip_enable(priv);
 		}
 	} else {
-		flexcan_chip_enable(priv);
+		err = flexcan_chip_enable(priv);
 	}
 
-	return 0;
+	return err;
 }
 
 static SIMPLE_DEV_PM_OPS(flexcan_pm_ops, flexcan_suspend, flexcan_resume);
-- 
1.9.1

