From c69d3546850f5bb23884c9e99671ce4f689ac00d Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Wed, 23 Sep 2015 01:10:25 +0800
Subject: [PATCH 1425/1691] MLK-11630 ARM: imx: register imx_clk_gate3 as
 fixed_factor when M4 is enabled

commit c69d3546850f5bb23884c9e99671ce4f689ac00d from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

As clock root does NOT have domain control on i.MX7D,
and the clock root gate does NOT consume much power,
so it is acceptable to leave clock root always enabled
when M4 is enabled, this is suggested by design team,
otherwise, need to use shared memory to control clk
root between A7 and M4, which is NOT friendly.

Signed-off-by: Anson Huang <b20788@freescale.com>
(cherry picked from commit bc4295b3aed83e426c49aa48f39224d2102048dd)
---
 arch/arm/mach-imx/clk.h | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/arch/arm/mach-imx/clk.h b/arch/arm/mach-imx/clk.h
index 651f9fa..1d3f688 100644
--- a/arch/arm/mach-imx/clk.h
+++ b/arch/arm/mach-imx/clk.h
@@ -4,6 +4,8 @@
 #include <linux/spinlock.h>
 #include <linux/clk-provider.h>
 
+#include "common.h"
+
 extern spinlock_t imx_ccm_lock;
 
 void imx_check_clocks(struct clk *clks[], unsigned int count);
@@ -192,7 +194,17 @@ static inline struct clk *imx_clk_gate(const char *name, const char *parent,
 static inline struct clk *imx_clk_gate3(const char *name, const char *parent,
 		void __iomem *reg, u8 shift)
 {
-	return clk_register_gate(NULL, name, parent,
+	/*
+	 * per design team's suggestion, clk root is NOT consuming
+	 * much power, and clk root enable/disable does NOT have domain
+	 * control, so they suggest to leave clk root always on when
+	 * M4 is enabled.
+	 */
+	if (imx_src_is_m4_enabled())
+		return clk_register_fixed_factor(NULL, name, parent,
+			CLK_SET_RATE_PARENT, 1, 1);
+	else
+		return clk_register_gate(NULL, name, parent,
 			CLK_SET_RATE_PARENT | CLK_SET_PARENT_ON, reg,
 			shift, 0, &imx_ccm_lock);
 }
-- 
1.9.1

