From 338f6c4591d31fadc284cf1ee89d77b41d29bd41 Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@freescale.com>
Date: Wed, 16 Dec 2015 21:54:50 +0800
Subject: [PATCH 1464/1691] MLK-12025 ARM: imx: M4 should be in RUN mode when
 resume from DSM

commit 338f6c4591d31fadc284cf1ee89d77b41d29bd41 from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

On i.MX7D, only when M4 enters STOP mode, system is able to enter DSM
mode where M4 power will be gated off. This is done by checking
a variable which records M4's power mode. However, when system
resume from DSM, M4 is re-enabled to RUN mode by A7, but the variable
is NOT updated accordingly, so next time system suspend, even
M4 is NOT in STOP mode, system can enter DSM mode, which is
unexpected and would cause bus-freq use count mismatch.

Fix this issue by reset M4 power mode to RUN mode when resume
from DSM.

Signed-off-by: Anson Huang <Anson.Huang@freescale.com>
(cherry picked from commit d22127a8f395edaf719a5bf4874cf22c5bdc8661)
Signed-off-by: Teo Hall <teo.hall@nxp.com>
---
 arch/arm/mach-imx/common.h  | 1 +
 arch/arm/mach-imx/mu.c      | 5 +++++
 arch/arm/mach-imx/pm-imx7.c | 2 ++
 3 files changed, 8 insertions(+)

diff --git a/arch/arm/mach-imx/common.h b/arch/arm/mach-imx/common.h
index e875ade2..d410b4c 100644
--- a/arch/arm/mach-imx/common.h
+++ b/arch/arm/mach-imx/common.h
@@ -90,6 +90,7 @@ void mcc_receive_from_mu_buffer(unsigned int index, unsigned int *data);
 void mcc_send_via_mu_buffer(unsigned int index, unsigned int data);
 bool imx_mu_is_m4_in_low_freq(void);
 bool imx_mu_is_m4_in_stop(void);
+void imx_mu_set_m4_run_mode(void);
 int imx_mu_lpm_ready(bool ready);
 
 enum mxc_cpu_pwr_mode {
diff --git a/arch/arm/mach-imx/mu.c b/arch/arm/mach-imx/mu.c
index 7dbe3bf..ae502d9 100644
--- a/arch/arm/mach-imx/mu.c
+++ b/arch/arm/mach-imx/mu.c
@@ -68,6 +68,11 @@ struct irq_domain *domain;
 static bool m4_in_stop;
 
 
+void imx_mu_set_m4_run_mode(void)
+{
+	m4_in_stop = false;
+}
+
 bool imx_mu_is_m4_in_stop(void)
 {
 	return m4_in_stop;
diff --git a/arch/arm/mach-imx/pm-imx7.c b/arch/arm/mach-imx/pm-imx7.c
index 0e9e920..f832b1e 100644
--- a/arch/arm/mach-imx/pm-imx7.c
+++ b/arch/arm/mach-imx/pm-imx7.c
@@ -754,6 +754,8 @@ static int imx7_pm_enter(suspend_state_t state)
 					pm_info->src_base.vbase + M4RCR);
 				/* offset high bus count for m4 image */
 				request_bus_freq(BUS_FREQ_HIGH);
+				/* restore M4 to run mode */
+				imx_mu_set_m4_run_mode();
 				/* gpc wakeup */
 				imx_mu_lpm_ready(true);
 			}
-- 
1.9.1

