From b31a23b9fe8cb2492b7f336cc9dda8576b724a75 Mon Sep 17 00:00:00 2001
From: Fugang Duan <b38611@freescale.com>
Date: Fri, 17 Apr 2015 09:40:17 +0800
Subject: [PATCH 0429/1691] MA-6537 tty: serial: imx: enable ipg clock for
 register save/restore in megafix power off

commit b31a23b9fe8cb2492b7f336cc9dda8576b724a75 from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

In megafix power off, the driver save necessary registers in suspend, and resotre the
registers in resume, but access registers need ipg clock gate on, so the patch make sure
ipg clock gate is on before save/restore the uart registers.

Signed-off-by: Fugang Duan <B38611@freescale.com>
(cherry picked from commit: b72847043d629fe2bc152201485f4da6bb16fc89)
---
 drivers/tty/serial/imx.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index d25c78b..983f205 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -1852,6 +1852,7 @@ static int serial_imx_suspend(struct platform_device *dev, pm_message_t state)
 		disable_irq(sport->port.irq);
 
 	/* Save necessary regs */
+	clk_prepare_enable(sport->clk_ipg);
 	sport->saved_reg[0] = readl(sport->port.membase + UCR1);
 	sport->saved_reg[1] = readl(sport->port.membase + UCR2);
 	sport->saved_reg[2] = readl(sport->port.membase + UCR3);
@@ -1862,6 +1863,7 @@ static int serial_imx_suspend(struct platform_device *dev, pm_message_t state)
 	sport->saved_reg[7] = readl(sport->port.membase + UBIR);
 	sport->saved_reg[8] = readl(sport->port.membase + UBMR);
 	sport->saved_reg[9] = readl(sport->port.membase + IMX21_UTS);
+	clk_disable_unprepare(sport->clk_ipg);
 
 	return 0;
 }
@@ -1871,6 +1873,7 @@ static int serial_imx_resume(struct platform_device *dev)
 	struct imx_port *sport = platform_get_drvdata(dev);
 	unsigned int val;
 
+	clk_prepare_enable(sport->clk_ipg);
 	writel(sport->saved_reg[4], sport->port.membase + UFCR);
 	writel(sport->saved_reg[5], sport->port.membase + UESC);
 	writel(sport->saved_reg[6], sport->port.membase + UTIM);
@@ -1889,6 +1892,8 @@ static int serial_imx_resume(struct platform_device *dev)
 	val = readl(sport->port.membase + USR1);
 	if (val & USR1_AWAKE)
 		writel(USR1_AWAKE, sport->port.membase + USR1);
+	clk_disable_unprepare(sport->clk_ipg);
+
 	if (sport->port.irq_wake)
 		enable_irq(sport->port.irq);
 
-- 
1.9.1

