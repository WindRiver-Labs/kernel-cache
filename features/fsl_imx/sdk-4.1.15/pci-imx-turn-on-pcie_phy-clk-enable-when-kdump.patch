From 6ec189a1890927a81e14b2fcdff30a2d56971270 Mon Sep 17 00:00:00 2001
From: wqyoung <quanyang.wang@windriver.com>
Date: Thu, 20 Oct 2016 01:21:58 +0000
Subject: [PATCH 2/2] pci: imx: turn on pcie_phy clk enable when kdump

When run kdump, boot kernel already enabled the pci link, so need
some special operations for pcie-phy to get the core back into a
clean state. But the clock "pll6_enet" which is the parent of the
pcie_phy clock has been closed by the fec driver, this will result
that system will hang when access registers without clock. So enable
pcie_phy clock when access phy registers. After that will disable
the clock.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/pci/host/pci-imx6.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/drivers/pci/host/pci-imx6.c b/drivers/pci/host/pci-imx6.c
index 85e3a59..1bfc70b 100644
--- a/drivers/pci/host/pci-imx6.c
+++ b/drivers/pci/host/pci-imx6.c
@@ -299,10 +299,13 @@ static int imx6_pcie_assert_core_reset(struct pcie_port *pp)
 
 		if ((gpr1 & IMX6Q_GPR1_PCIE_REF_CLK_EN) &&
 		    (gpr12 & IMX6Q_GPR12_PCIE_CTL_2)) {
+			clk_prepare_enable(imx6_pcie->pcie_phy);
+			mdelay(2000);
 			val = readl(pp->dbi_base + PCIE_PL_PFLR);
 			val &= ~PCIE_PL_PFLR_LINK_STATE_MASK;
 			val |= PCIE_PL_PFLR_FORCE_LINK;
 			writel(val, pp->dbi_base + PCIE_PL_PFLR);
+			clk_disable_unprepare(imx6_pcie->pcie_phy);
 
 			regmap_update_bits(imx6_pcie->iomuxc_gpr, IOMUXC_GPR12,
 					IMX6Q_GPR12_PCIE_CTL_2, 0 << 10);
-- 
1.7.5.4

