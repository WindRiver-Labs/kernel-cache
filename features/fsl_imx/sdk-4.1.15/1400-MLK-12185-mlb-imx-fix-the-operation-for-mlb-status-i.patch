From e59b96f19688f135019561b169bbf8f5acda4131 Mon Sep 17 00:00:00 2001
From: Gao Pan <pandy.gao@nxp.com>
Date: Mon, 11 Jan 2016 16:30:05 +0800
Subject: [PATCH 1400/1691] MLK-12185 mlb: imx: fix the operation for mlb
 status in mlb_isr

commit e59b96f19688f135019561b169bbf8f5acda4131 from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

As a result that the wrong operation is used for the mlb status
in mlb_isr(), some results are independent of their operations.

for example:
rx_cis = (cdt_val[2] & ~MASK) >> SHIFT, where, MASK = 0xf0000000
and SHIFT = 28. So, the result is always 0 regardless of the values
of its operands.

This patch fixes the operation for mlb status in mlb_isr().

(reported by coverity check)

Signed-off-by: Gao Pan <pandy.gao@nxp.com>
---
 drivers/mxc/mlb/mxc_mlb.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/mxc/mlb/mxc_mlb.c b/drivers/mxc/mlb/mxc_mlb.c
index 2fe6839..eaef344 100755
--- a/drivers/mxc/mlb/mxc_mlb.c
+++ b/drivers/mxc/mlb/mxc_mlb.c
@@ -1831,7 +1831,7 @@ static irqreturn_t mlb_isr(int irq, void *dev_id)
 					cdt_val[1], cdt_val[0]);
 			switch (ctype) {
 			case MLB_CTYPE_SYNC:
-				tx_cis = (cdt_val[2] & ~CDT_SYNC_WSTS_MASK)
+				tx_cis = (cdt_val[2] & CDT_SYNC_WSTS_MASK)
 					>> CDT_SYNC_WSTS_SHIFT;
 				/*
 				 * Clear RSTS/WSTS errors to resume
@@ -1843,7 +1843,7 @@ static irqreturn_t mlb_isr(int irq, void *dev_id)
 			case MLB_CTYPE_CTRL:
 			case MLB_CTYPE_ASYNC:
 				tx_cis = (cdt_val[2] &
-					~CDT_CTRL_ASYNC_WSTS_MASK)
+					CDT_CTRL_ASYNC_WSTS_MASK)
 					>> CDT_CTRL_ASYNC_WSTS_SHIFT;
 				tx_cis = (cdt_val[3] & CDT_CTRL_ASYNC_WSTS_1) ?
 					(tx_cis | (0x1 << 4)) : tx_cis;
@@ -1857,7 +1857,7 @@ static irqreturn_t mlb_isr(int irq, void *dev_id)
 					~(0x4 << CDT_CTRL_ASYNC_WSTS_SHIFT);
 				break;
 			case MLB_CTYPE_ISOC:
-				tx_cis = (cdt_val[2] & ~CDT_ISOC_WSTS_MASK)
+				tx_cis = (cdt_val[2] & CDT_ISOC_WSTS_MASK)
 					>> CDT_ISOC_WSTS_SHIFT;
 				/* c. For isoc channels: WSTS[2:1] = 0x00 */
 				cdt_val[2] &= ~(0x6 << CDT_ISOC_WSTS_SHIFT);
@@ -1879,23 +1879,23 @@ static irqreturn_t mlb_isr(int irq, void *dev_id)
 					cdt_val[1], cdt_val[0]);
 			switch (ctype) {
 			case MLB_CTYPE_SYNC:
-				tx_cis = (cdt_val[2] & ~CDT_SYNC_RSTS_MASK)
+				rx_cis = (cdt_val[2] & CDT_SYNC_RSTS_MASK)
 					>> CDT_SYNC_RSTS_SHIFT;
 				cdt_val[2] &= ~(0x8 << CDT_SYNC_WSTS_SHIFT);
 				break;
 			case MLB_CTYPE_CTRL:
 			case MLB_CTYPE_ASYNC:
-				tx_cis =
-					(cdt_val[2] & ~CDT_CTRL_ASYNC_RSTS_MASK)
+				rx_cis =
+					(cdt_val[2] & CDT_CTRL_ASYNC_RSTS_MASK)
 					>> CDT_CTRL_ASYNC_RSTS_SHIFT;
-				tx_cis = (cdt_val[3] & CDT_CTRL_ASYNC_RSTS_1) ?
-					(tx_cis | (0x1 << 4)) : tx_cis;
+				rx_cis = (cdt_val[3] & CDT_CTRL_ASYNC_RSTS_1) ?
+					(rx_cis | (0x1 << 4)) : rx_cis;
 				cdt_val[3] &= ~CDT_CTRL_ASYNC_RSTS_1;
 				cdt_val[2] &=
 					~(0x4 << CDT_CTRL_ASYNC_RSTS_SHIFT);
 				break;
 			case MLB_CTYPE_ISOC:
-				tx_cis = (cdt_val[2] & ~CDT_ISOC_RSTS_MASK)
+				rx_cis = (cdt_val[2] & CDT_ISOC_RSTS_MASK)
 					>> CDT_ISOC_RSTS_SHIFT;
 				cdt_val[2] &= ~(0x6 << CDT_ISOC_WSTS_SHIFT);
 				break;
-- 
1.9.1

