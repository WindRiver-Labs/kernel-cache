From c35a5ddbb9ec3bf5f569b93dad7aa7f1e598c379 Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@nxp.com>
Date: Mon, 18 Apr 2016 14:40:47 +0800
Subject: [PATCH 1624/1691] MLK-12671 ARM: imx: support single soc config

commit c35a5ddbb9ec3bf5f569b93dad7aa7f1e598c379 from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

Need to make sure build pass with single SOC
config, in current build for single SOC config,
if both SOC_IMX7D and SOC_IMX6SX are NOT selected,
below build error will occur, add MU module
config to fix this build issue.

LD      init/built-in.o
arch/arm/mach-imx/built-in.o: In function `busfreq_probe':
:(.text+0x5370): undefined reference to `imx_mu_lpm_ready'
arch/arm/mach-imx/built-in.o: In function `bus_freq_pm_notify':
:(.text+0x5d50): undefined reference to `imx_mu_lpm_ready'
:(.text+0x5d68): undefined reference to `imx_mu_lpm_ready'
make: *** [vmlinux] Error 1

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
---
 arch/arm/mach-imx/Kconfig  | 5 +++++
 arch/arm/mach-imx/Makefile | 5 +++--
 arch/arm/mach-imx/common.h | 4 ++++
 3 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-imx/Kconfig b/arch/arm/mach-imx/Kconfig
index f834eda..dba87a4 100644
--- a/arch/arm/mach-imx/Kconfig
+++ b/arch/arm/mach-imx/Kconfig
@@ -69,6 +69,9 @@ config HAVE_IMX_AMP
 config HAVE_IMX_DDRC
 	bool
 
+config HAVE_IMX_MU
+	bool
+
 config HAVE_IMX_RPMSG
 	bool
 
@@ -597,6 +600,7 @@ config SOC_IMX6SX
 	select PINCTRL_IMX6SX
 	select HAVE_IMX_AMP
 	select SOC_IMX6
+	select HAVE_IMX_MU
 	select HAVE_IMX_RPMSG
 	select RPMSG
 	select IMX_SEMA4
@@ -632,6 +636,7 @@ config SOC_IMX7D
 	select SOC_IMX7
 	select PCI_DOMAINS if PCI
 	select PINCTRL_IMX7D
+	select HAVE_IMX_MU
 	select HAVE_IMX_RPMSG
 	select RPMSG
 	select KEYBOARD_SNVS_PWRKEY
diff --git a/arch/arm/mach-imx/Makefile b/arch/arm/mach-imx/Makefile
index d32d2aa..d973b16 100644
--- a/arch/arm/mach-imx/Makefile
+++ b/arch/arm/mach-imx/Makefile
@@ -90,6 +90,7 @@ obj-$(CONFIG_HAVE_IMX_GPCV2) += gpcv2.o
 obj-$(CONFIG_HAVE_IMX_MMDC) += mmdc.o
 obj-$(CONFIG_HAVE_IMX_DDRC) += ddrc.o
 obj-$(CONFIG_HAVE_IMX_SRC) += src.o
+obj-$(CONFIG_HAVE_IMX_MU) += mu.o
 obj-$(CONFIG_HAVE_IMX_RPMSG) += imx_rpmsg.o
 ifneq ($(CONFIG_SOC_IMX6)$(CONFIG_SOC_IMX7)$(CONFIG_SOC_LS1021A),)
 AFLAGS_headsmp.o :=-Wa,-march=armv7-a
@@ -107,10 +108,10 @@ obj-$(CONFIG_SOC_IMX6SL) += clk-imx6sl.o mach-imx6sl.o lpddr2_freq_imx6.o
 AFLAGS_ddr3_freq_imx6sx.o :=-Wa,-march=armv7-a
 AFLAGS_lpddr2_freq_imx6sx.o :=-Wa,-march=armv7-a
 obj-$(CONFIG_SOC_IMX6SX) += clk-imx6sx.o mach-imx6sx.o ddr3_freq_imx6sx.o \
-			    lpddr2_freq_imx6sx.o mu.o
+			    lpddr2_freq_imx6sx.o
 obj-$(CONFIG_SOC_IMX6UL) += clk-imx6ul.o mach-imx6ul.o ddr3_freq_imx6sx.o \
 			    lpddr2_freq_imx6sx.o
-obj-$(CONFIG_SOC_IMX7D) += clk-imx7d.o mach-imx7d.o mu.o
+obj-$(CONFIG_SOC_IMX7D) += clk-imx7d.o mach-imx7d.o
 
 ifeq ($(CONFIG_SUSPEND),y)
 AFLAGS_suspend-imx6.o :=-Wa,-march=armv7-a
diff --git a/arch/arm/mach-imx/common.h b/arch/arm/mach-imx/common.h
index d8d2620..3872420 100644
--- a/arch/arm/mach-imx/common.h
+++ b/arch/arm/mach-imx/common.h
@@ -91,7 +91,11 @@ void mcc_send_via_mu_buffer(unsigned int index, unsigned int data);
 bool imx_mu_is_m4_in_low_freq(void);
 bool imx_mu_is_m4_in_stop(void);
 void imx_mu_set_m4_run_mode(void);
+#ifdef CONFIG_HAVE_IMX_MU
 int imx_mu_lpm_ready(bool ready);
+#else
+static inline int imx_mu_lpm_ready(bool ready) { return 0; }
+#endif
 
 enum mxc_cpu_pwr_mode {
 	WAIT_CLOCKED,		/* wfi only */
-- 
1.9.1

