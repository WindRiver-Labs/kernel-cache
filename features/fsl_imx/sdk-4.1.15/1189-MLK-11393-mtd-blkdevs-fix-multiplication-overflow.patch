From f21ddfdc339d49cdb244bc193d8b929acfeb05d5 Mon Sep 17 00:00:00 2001
From: Peng Fan <Peng.Fan@freescale.com>
Date: Mon, 7 Sep 2015 13:13:02 +0800
Subject: [PATCH 1189/1691] MLK-11393 mtd: blkdevs: fix multiplication overflow

commit f21ddfdc339d49cdb244bc193d8b929acfeb05d5 from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

The type of new->size is unsigned long and the type of tr->blksize is int,
the result of 'new->size * tr->blksize' may exceed ULONG_MAX on 32bit
machines.

Take nand chip MT29F32G08CBADBWP which is 4GB for example. The parameters
passed to kernel is 'mtdparts=gpmi-nand:-(user)', the whole nand chip will be
treated as a 4GB mtd partition. new->size is 0x800000 and tr->blksize is
0x200, 'new->size * tr->blksize' however is 0. This is what we do not want
to see.

Type cast new->size to u64 to fix the multiplication overflow issue.

Signed-off-by: Peng Fan <Peng.Fan@freescale.com>
(cherry picked from commit 5e3aae04da7488ebb02cb22810ccd3e30226cf3f)
---
 drivers/mtd/mtd_blkdevs.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/mtd/mtd_blkdevs.c b/drivers/mtd/mtd_blkdevs.c
index df7c6c7..c0bb374 100644
--- a/drivers/mtd/mtd_blkdevs.c
+++ b/drivers/mtd/mtd_blkdevs.c
@@ -403,7 +403,7 @@ int add_mtd_blktrans_dev(struct mtd_blktrans_dev *new)
 		snprintf(gd->disk_name, sizeof(gd->disk_name),
 			 "%s%d", tr->name, new->devnum);
 
-	set_capacity(gd, (new->size * tr->blksize) >> 9);
+	set_capacity(gd, ((u64)new->size * tr->blksize) >> 9);
 
 	/* Create the request queue */
 	spin_lock_init(&new->queue_lock);
-- 
1.9.1

