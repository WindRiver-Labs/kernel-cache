From 514131b48bd6439c4cff7bf843a3da57668fee86 Mon Sep 17 00:00:00 2001
From: czou <cao.zou@windriver.com>
Date: Thu, 30 Jun 2016 14:37:53 +0800
Subject: [PATCH 5/5] RT:gpu-viv: GPU kernel panic for empty pte lock

There is a smilier panic for enable CONFIG_DEBUG_SPINLOCK in standard
kernel, so it use mm->page_table_lock to replace pte spinlock, but in
RT kernel, this problem is also meet, here we aso use page_table_lock.
summary information in commit (MGS-783 [#1752] GPU kernel panic if enable
spinlock debug config.), panic as follow:

Unable to handle kernel NULL pointer dereference at virtual address 0000000c
.......
[<8089bf8c>] (rt_spin_lock) from [<8061e8b0>] (_QueryProcessPageTable+0x94/0xec)
[<8061e8b0>] (_QueryProcessPageTable) from [<806224cc>] (gckOS_GetPhysicalAddress+0x38/0x98)
[<806224cc>] (gckOS_GetPhysicalAddress) from [<8063c4d0>] (gckHARDWARE_SetMMU+0x40/0x1ac)
[<8063c4d0>] (gckHARDWARE_SetMMU) from [<8063c998>] (gckHARDWARE_InitializeHardware+0x35c/0x74c)
[<8063c998>] (gckHARDWARE_InitializeHardware) from [<8063d588>] (gckHARDWARE_SetPowerManagementState+0x800/0xa90)
[<8063d588>] (gckHARDWARE_SetPowerManagementState) from [<80621170>] (gckOS_Broadcast+0xb0/0x118)
[<80621170>] (gckOS_Broadcast) from [<8062a558>] (gckCOMMAND_EnterCommit+0x48/0xbc)
[<8062a558>] (gckCOMMAND_EnterCommit) from [<8062afc4>] (gckCOMMAND_Commit+0xa8/0xde8)
[<8062afc4>] (gckCOMMAND_Commit) from [<8062972c>] (gckKERNEL_Dispatch+0x504/0xe40)
[<8062972c>] (gckKERNEL_Dispatch) from [<80625c1c>] (drv_ioctl+0x1dc/0x2c0)
[<80625c1c>] (drv_ioctl) from [<80166e2c>] (do_vfs_ioctl+0x554/0x618)
[<80166e2c>] (do_vfs_ioctl) from [<80166f4c>] (SyS_ioctl+0x5c/0x84)
[<80166f4c>] (SyS_ioctl) from [<8000f440>] (ret_fast_syscall+0x0/0x3c)
Code: e3c2203f e5922010 f57ff05b f593f000 (e1931f9f)

Signed-off-by: czou <cao.zou@windriver.com>
---
 .../gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c |   15 ---------------
 1 files changed, 0 insertions(+), 15 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
index 009b29df..58eec12 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
@@ -389,9 +389,6 @@ _QueryProcessPageTable(
     OUT gctPHYS_ADDR_T * Address
     )
 {
-#ifndef CONFIG_DEBUG_SPINLOCK
-    spinlock_t *lock;
-#endif
     gctUINTPTR_T logical = (gctUINTPTR_T)Logical;
     pgd_t *pgd;
     pud_t *pud;
@@ -421,13 +418,9 @@ _QueryProcessPageTable(
         return gcvSTATUS_NOT_FOUND;
     }
 
-#ifndef CONFIG_DEBUG_SPINLOCK
-    pte = pte_offset_map_lock(current->mm, pmd, logical, &lock);
-#else
     spin_lock(&current->mm->page_table_lock);
 
     pte = pte_offset_map(pmd, logical);
-#endif
 
     if (!pte)
     {
@@ -436,20 +429,12 @@ _QueryProcessPageTable(
 
     if (!pte_present(*pte))
     {
-#ifndef CONFIG_DEBUG_SPINLOCK
-        pte_unmap_unlock(pte, lock);
-#else
         spin_unlock(&current->mm->page_table_lock);
-#endif
         return gcvSTATUS_NOT_FOUND;
     }
 
     *Address = (pte_pfn(*pte) << PAGE_SHIFT) | (logical & ~PAGE_MASK);
-#ifndef CONFIG_DEBUG_SPINLOCK
-    pte_unmap_unlock(pte, lock);
-#else
     spin_unlock(&current->mm->page_table_lock);
-#endif
 
     return gcvSTATUS_OK;
 }
-- 
1.7.5.4

