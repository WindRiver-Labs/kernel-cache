From 1fee34adf8ca9fc8141bbc06b2eabebc5e48d7e1 Mon Sep 17 00:00:00 2001
From: Gao Pan <b54642@freescale.com>
Date: Thu, 22 Oct 2015 16:28:13 +0800
Subject: [PATCH 1003/1691] MLK-11777 sim: imx: remove useless code

commit 1fee34adf8ca9fc8141bbc06b2eabebc5e48d7e1 from
git://git.freescale.com/imx/linux-2.6-imx.git imx_4.1.15_1.0.0_ga

sim_activate() process is contained in the cold reset.
Thus, it is redundant and should be removed.

This patch also adds comments to cold reset process.

Signed-off-by: Gao Pan <b54642@freescale.com>
---
 drivers/mxc/sim/imx_sim.c | 50 ++++++++---------------------------------------
 1 file changed, 8 insertions(+), 42 deletions(-)

diff --git a/drivers/mxc/sim/imx_sim.c b/drivers/mxc/sim/imx_sim.c
index 3fc865b..6b1efed 100755
--- a/drivers/mxc/sim/imx_sim.c
+++ b/drivers/mxc/sim/imx_sim.c
@@ -926,69 +926,36 @@ static void sim_start(struct sim_t *sim)
 	__raw_writel(reg_data, sim->ioaddr + sim->port_detect_reg);
 };
 
-static void sim_activate(struct sim_t *sim)
-{
-	u32 reg_data;
-	pr_debug("%s Activate on the sim port.\n", __func__);
-	/* activate on sequence */
-	if (sim->present != SIM_PRESENT_REMOVED) {
-		/*Disable Reset pin*/
-		reg_data = __raw_readl(sim->ioaddr + sim->port_ctrl_reg);
-		reg_data &= ~SIM_PORT_CNTL_SRST;
-		/*If sven is low active, we need to set sevn to be high*/
-		if (sim->sven_low_active)
-			reg_data |= SIM_PORT_CNTL_SVEN;
-
-		__raw_writel(reg_data, sim->ioaddr + sim->port_ctrl_reg);
-
-		/*Enable VCC pin*/
-		reg_data = __raw_readl(sim->ioaddr + sim->port_ctrl_reg);
-
-		if (sim->sven_low_active)
-			reg_data &= ~SIM_PORT_CNTL_SVEN;
-		else
-			reg_data |= SIM_PORT_CNTL_SVEN;
-
-		__raw_writel(reg_data, sim->ioaddr + sim->port_ctrl_reg);
-
-		msleep(10);
-		/*Enable clock pin*/
-		reg_data = __raw_readl(sim->ioaddr + sim->port_ctrl_reg);
-		reg_data |= SIM_PORT_CNTL_SCEN;
-		__raw_writel(reg_data, sim->ioaddr + sim->port_ctrl_reg);
-		msleep(10);
-	} else {
-		pr_err("No card%s\n", __func__);
-	}
-}
-
 static void sim_cold_reset_sequency(struct sim_t *sim)
 {
 	u32 reg_data;
 
 	sim->state = SIM_STATE_RESET_SEQUENCY;
-	reg_data = __raw_readl(sim->ioaddr + sim->port_ctrl_reg);
-	reg_data &= ~SIM_PORT_CNTL_SRST;
-	__raw_writel(reg_data, sim->ioaddr + sim->port_ctrl_reg);
-	reg_data = __raw_readl(sim->ioaddr + sim->port_ctrl_reg);
 
+	/*set VCC*/
+	reg_data = __raw_readl(sim->ioaddr + sim->port_ctrl_reg);
 	if (sim->sven_low_active)
 		reg_data &= ~SIM_PORT_CNTL_SVEN;
 	else
 		reg_data |= SIM_PORT_CNTL_SVEN;
-
 	__raw_writel(reg_data, sim->ioaddr + sim->port_ctrl_reg);
+
 	msleep(9);
 
+	/*enable CLK*/
 	reg_data = __raw_readl(sim->ioaddr + sim->port_ctrl_reg);
 	reg_data |= SIM_PORT_CNTL_SCEN;
 	__raw_writel(reg_data, sim->ioaddr + sim->port_ctrl_reg);
 
+	/*RST low time*/
 	sim_reset_low_timing(sim, EMV_RESET_LOW_CYCLES);
 
+	/*RST high*/
 	reg_data = __raw_readl(sim->ioaddr + sim->port_ctrl_reg);
 	reg_data |= SIM_PORT_CNTL_SRST;
 	__raw_writel(reg_data, sim->ioaddr + sim->port_ctrl_reg);
+
+	/*wait for ATR*/
 	sim_set_gpc_timer(sim, ATR_MAX_DELAY_CLK);
 };
 
@@ -1406,7 +1373,6 @@ static long sim_ioctl(struct file *file,
 		sim_reset_module(sim);
 		sim_data_reset(sim);
 		sim_start(sim);
-		sim_activate(sim);
 		sim_cold_reset(sim);
 
 		break;
-- 
1.9.1

