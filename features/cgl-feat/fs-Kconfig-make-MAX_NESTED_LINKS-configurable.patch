From 45f8b8e29949e615f5938834d63ead4a36a1084b Mon Sep 17 00:00:00 2001
From: Yong Zhang <yong.zhang@windriver.com>
Date: Thu, 29 Apr 2010 01:46:31 -0700
Subject: [PATCH 03/11] fs/Kconfig: make MAX_NESTED_LINKS configurable

Specifies the nesting limit on symbolic links. But keep in mind that
setting it too high could lead to kernel stack overflows.

Signed-off-by: Yongli he   <yongli.he@windriver.com>
Signed-off-by: MacDonald, Joe <Joe.MacDonald@windriver.com>
Integrated-by: Yong Zhang <yong.zhang@windriver.com>
Signed-off-by: Joe MacDonald <joe.macdonald@windriver.com>
---
 fs/Kconfig            |    8 ++++++++
 include/linux/namei.h |    2 +-
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/fs/Kconfig b/fs/Kconfig
index ccb61f1..7517a2b 100644
--- a/fs/Kconfig
+++ b/fs/Kconfig
@@ -54,6 +54,14 @@ config FS_POSIX_ACL
 config EXPORTFS
 	tristate
 
+config MAX_NESTED_LINKS
+	int "Symblic link nest limit"
+	default 8
+	help
+	  Specifies the nesting limit on symbolic links.  You may increase
+	  this value, but setting it too high could lead to kernel stack
+	  overflows.
+
 config FILE_LOCKING
 	bool "Enable POSIX file locking API" if EXPERT
 	default y
diff --git a/include/linux/namei.h b/include/linux/namei.h
index b5a161e..9a5a8ad 100644
--- a/include/linux/namei.h
+++ b/include/linux/namei.h
@@ -13,7 +13,7 @@ struct open_intent {
 	struct file *file;
 };
 
-enum { MAX_NESTED_LINKS = 8 };
+enum { MAX_NESTED_LINKS = CONFIG_MAX_NESTED_LINKS };
 
 struct nameidata {
 	struct path	path;
-- 
1.7.9.7

