From ba647e488dbd16fb7abfb0a65789232714853f09 Mon Sep 17 00:00:00 2001
From: Hui Wang <Hui.Wang@windriver.com>
Date: Wed, 30 Mar 2011 14:51:32 +0800
Subject: [PATCH 7/7] x86, xsave: fix several building problems

Because we cherry-pick several xsaveopt relating patches from the
upstream, we also introduce some incompatibility of API calling and
structure members use. Modify them according to current kernel
API and structure definition.

Signed-off-by: Hui Wang <Hui.Wang@windriver.com>
---
 arch/x86/include/asm/i387.h  |    2 +-
 arch/x86/include/asm/xsave.h |    2 +-
 arch/x86/kernel/xsave.c      |    4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/x86/include/asm/i387.h b/arch/x86/include/asm/i387.h
index 33d6fc6..55ecaef 100644
--- a/arch/x86/include/asm/i387.h
+++ b/arch/x86/include/asm/i387.h
@@ -58,7 +58,7 @@ extern int restore_i387_xstate_ia32(void __user *buf);
 
 static __always_inline __pure bool use_xsaveopt(void)
 {
-	return static_cpu_has(X86_FEATURE_XSAVEOPT);
+	return boot_cpu_has(X86_FEATURE_XSAVEOPT);
 }
 
 extern void __sanitize_i387_state(struct task_struct *);
diff --git a/arch/x86/include/asm/xsave.h b/arch/x86/include/asm/xsave.h
index e633082..ed266aa 100644
--- a/arch/x86/include/asm/xsave.h
+++ b/arch/x86/include/asm/xsave.h
@@ -118,7 +118,7 @@ static inline void xsave(struct task_struct *tsk)
 		".byte " REX_PREFIX "0x0f,0xae,0x27",
 		".byte " REX_PREFIX "0x0f,0xae,0x37",
 		X86_FEATURE_XSAVEOPT,
-		[fx] "D" (&fpu->state->xsave), "a" (-1), "d" (-1) :
+		[fx] "D" (&tsk->thread.xstate->xsave), "a" (-1), "d" (-1) :
 		"memory");
 }
 
diff --git a/arch/x86/kernel/xsave.c b/arch/x86/kernel/xsave.c
index 17d51ee..ee24fd5 100644
--- a/arch/x86/kernel/xsave.c
+++ b/arch/x86/kernel/xsave.c
@@ -37,14 +37,14 @@ void __sanitize_i387_state(struct task_struct *tsk)
 {
 	u64 xstate_bv;
 	int feature_bit = 0x2;
-	struct i387_fxsave_struct *fx = &tsk->thread.fpu.state->fxsave;
+	struct i387_fxsave_struct *fx = &tsk->thread.xstate->fxsave;
 
 	if (!fx)
 		return;
 
 	BUG_ON(task_thread_info(tsk)->status & TS_USEDFPU);
 
-	xstate_bv = tsk->thread.fpu.state->xsave.xsave_hdr.xstate_bv;
+	xstate_bv = tsk->thread.xstate->xsave.xsave_hdr.xstate_bv;
 
 	/*
 	 * None of the feature bits are in init state. So nothing else
-- 
1.7.0.4

