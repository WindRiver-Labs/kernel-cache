From 70d5b7e7634186308d2c5011a9581491c9399de0 Mon Sep 17 00:00:00 2001
From: Tiejun Chen <tiejun.chen@windriver.com>
Date: Sat, 16 Feb 2013 17:31:17 +0800
Subject: [PATCH] GRSecurity/DMA-Zone: set SLAB_USERCOPY

When we introduce GRSecurity/PAX feature into CGL kernel, we have
changed flag for all kmalloc cache like:

void __init kmem_cache_init(void)
{
......

        /* Caches that are not of the two-to-the-power-of size */
        if (KMALLOC_MIN_SIZE <= 32) {
                kmalloc_caches[1] = create_kmalloc_cache("kmalloc-96", 96, SLAB_USERCOPY);
                caches++;
        }

        if (KMALLOC_MIN_SIZE <= 64) {
                kmalloc_caches[2] = create_kmalloc_cache("kmalloc-192", 192, SLAB_USERCOPY);
                caches++;
        }

        for (i = KMALLOC_SHIFT_LOW; i < SLUB_PAGE_SHIFT; i++) {
                kmalloc_caches[i] = create_kmalloc_cache("kmalloc", 1 << i, SLAB_USERCOPY);
                caches++;
        }
......

But this same flag is missing in the following call, and should be added:

        for (i = 0; i < SLUB_PAGE_SHIFT; i++) {
                struct kmem_cache *s = kmalloc_caches[i];

                if (s && s->size) {
                        char *name = kasprintf(GFP_NOWAIT,
                                 "dma-kmalloc-%d", s->objsize);

                        BUG_ON(!name);
                        kmalloc_dma_caches[i] = create_kmalloc_cache(name,
                                s->objsize, SLAB_CACHE_DMA);
                }
        }

So we also set SLAB_USERCOPY for DMA zone to make sure GRSecurity
can check properly the userland copying from/to for device DMA zone.

Signed-off-by: Tiejun Chen <tiejun.chen@windriver.com>
---
 mm/slub.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/mm/slub.c b/mm/slub.c
index dd263c5..67d6876 100644
--- a/mm/slub.c
+++ b/mm/slub.c
@@ -3892,7 +3892,7 @@ void __init kmem_cache_init(void)
 
 			BUG_ON(!name);
 			kmalloc_dma_caches[i] = create_kmalloc_cache(name,
-				s->objsize, SLAB_CACHE_DMA);
+				s->objsize, SLAB_CACHE_DMA | SLAB_USERCOPY);
 		}
 	}
 #endif
-- 
1.7.9.7

