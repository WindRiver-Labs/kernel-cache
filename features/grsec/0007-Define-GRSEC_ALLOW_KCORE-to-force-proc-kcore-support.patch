From 17946ab8a2761ab2e84fc4dfa2759e8a1eb3d181 Mon Sep 17 00:00:00 2001
From: Liang Li <liang.li@windriver.com>
Date: Tue, 22 Oct 2013 09:48:07 +0800
Subject: [PATCH 07/16] Define GRSEC_ALLOW_KCORE to force /proc/kcore support

Signed-off-by: Roy.Li <rongqing.li@windriver.com>
Signed-off-by: Liang Li <liang.li@windriver.com>
---
 fs/proc/Kconfig |   10 +++++++++-
 fs/proc/kcore.c |    3 +++
 2 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/fs/proc/Kconfig b/fs/proc/Kconfig
index 60c13b4..0bfc3ae 100644
--- a/fs/proc/Kconfig
+++ b/fs/proc/Kconfig
@@ -28,9 +28,17 @@ config PROC_FS
 	  This option will enlarge your kernel by about 67 KB. Several
 	  programs depend on this, so everyone should say Y here.
 
+config GRSEC_ALLOW_KCORE
+	bool "force /proc/kcore support when grsec is on"
+	depends on GRKERNSEC_PROC_ADD
+	default n
+	help
+	/proc/kcore is normally disabled by the GRSecurity kernel hardening
+	policy. Unless you know you need this feature, you should say N here.
+
 config PROC_KCORE
 	bool "/proc/kcore support" if !ARM
-	depends on PROC_FS && MMU && !GRKERNSEC_PROC_ADD
+	depends on PROC_FS && MMU && (!GRKERNSEC_PROC_ADD || GRSEC_ALLOW_KCORE)
 
 config GRSEC_ALLOW_VMCORE
 	bool "force /proc/vmcore support when grsec is on"
diff --git a/fs/proc/kcore.c b/fs/proc/kcore.c
index a9fc8c1..a8836eb 100644
--- a/fs/proc/kcore.c
+++ b/fs/proc/kcore.c
@@ -552,9 +552,12 @@ read_kcore(struct file *file, char __user *buffer, size_t buflen, loff_t *fpos)
 
 static int open_kcore(struct inode *inode, struct file *filp)
 {
+
+#ifndef CONFIG_GRSEC_ALLOW_KCORE
 #if defined(CONFIG_GRKERNSEC_PROC_ADD) || defined(CONFIG_GRKERNSEC_HIDESYM)
 	return -EPERM;
 #endif
+#endif
 	if (!capable(CAP_SYS_RAWIO))
 		return -EPERM;
 	if (kcore_need_update)
-- 
1.7.9.5

