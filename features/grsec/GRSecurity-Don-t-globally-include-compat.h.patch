From 4a89b0e4fb14d2741c3336a5def06d497d6e1709 Mon Sep 17 00:00:00 2001
From: Brad Spengler <spender@grsecurity.net>
Date: Mon, 9 Mar 2015 15:25:13 +0800
Subject: [PATCH] GRSecurity: Don't globally include compat.h

With the new X32 support it changes some definitions involving ELF binaries
resulting in invalid coredumps, as reported by KDE on the forums:
http://forums.grsecurity.net/viewtopic.php?f=3&t=3310
Thanks to the PaX Team for debugging.

Written by: Brad Spengler <spender@grsecurity.net>

GRSecurity provide no public repo of their Linux source tree, so this
patch is inferred using the change log obtained at
https://grsecurity.net/changelog-stable.txt
and comparing the current release and 2.9.1-201207080925 integrated in
the Wind River Linux 5 CGL kernel.

Signed-off-by: Yuanjie Huang <yuanjie.huang@windriver.com>
---
 fs/exec.c                  |   14 ++++++++++++++
 grsecurity/grsec_exec.c    |   13 +++++++++++++
 include/linux/grsecurity.h |   15 ---------------
 3 files changed, 27 insertions(+), 15 deletions(-)

diff --git a/fs/exec.c b/fs/exec.c
index 50314b1..9a70e11 100644
--- a/fs/exec.c
+++ b/fs/exec.c
@@ -440,6 +440,18 @@ err:
 	return err;
 }
 
+struct user_arg_ptr {
+#ifdef CONFIG_COMPAT
+	bool is_compat;
+#endif
+	union {
+		const char __user *const __user *native;
+#ifdef CONFIG_COMPAT
+		const compat_uptr_t __user *compat;
+#endif
+	} ptr;
+};
+
 const char __user *get_user_arg_ptr(struct user_arg_ptr argv, int nr)
 {
 	const char __user *native;
@@ -1547,6 +1559,8 @@ static inline void increment_exec_counter(void)
 static inline void increment_exec_counter(void) {}
 #endif
 
+extern void gr_handle_exec_args(struct linux_binprm *bprm, struct user_arg_ptr argv);
+
 /*
  * sys_execve() executes a new program.
  */
diff --git a/grsecurity/grsec_exec.c b/grsecurity/grsec_exec.c
index abfa971..387032b 100644
--- a/grsecurity/grsec_exec.c
+++ b/grsecurity/grsec_exec.c
@@ -9,6 +9,7 @@
 #include <linux/grinternal.h>
 #include <linux/capability.h>
 #include <linux/module.h>
+#include <linux/compat.h>
 
 #include <asm/uaccess.h>
 
@@ -17,6 +18,18 @@ static char gr_exec_arg_buf[132];
 static DEFINE_MUTEX(gr_exec_arg_mutex);
 #endif
 
+struct user_arg_ptr {
+#ifdef CONFIG_COMPAT
+	bool is_compat;
+#endif
+	union {
+		const char __user *const __user *native;
+#ifdef CONFIG_COMPAT
+		const compat_uptr_t __user *compat;
+#endif
+	} ptr;
+};
+
 extern const char __user *get_user_arg_ptr(struct user_arg_ptr argv, int nr);
 
 void
diff --git a/include/linux/grsecurity.h b/include/linux/grsecurity.h
index 38bfb04..3825559 100644
--- a/include/linux/grsecurity.h
+++ b/include/linux/grsecurity.h
@@ -19,20 +19,6 @@
 #error "CONFIG_PAX enabled, but no PaX options are enabled."
 #endif
 
-#include <linux/compat.h>
-
-struct user_arg_ptr {
-#ifdef CONFIG_COMPAT
-	bool is_compat;
-#endif
-	union {
-		const char __user *const __user *native;
-#ifdef CONFIG_COMPAT
-		compat_uptr_t __user *compat;
-#endif
-	} ptr;
-};
-
 void gr_handle_brute_attach(struct task_struct *p, unsigned long mm_flags);
 void gr_handle_brute_check(void);
 void gr_handle_kernel_exploit(void);
@@ -86,7 +72,6 @@ void gr_log_chdir(const struct dentry *dentry,
 			 const struct vfsmount *mnt);
 void gr_log_chroot_exec(const struct dentry *dentry,
 			       const struct vfsmount *mnt);
-void gr_handle_exec_args(struct linux_binprm *bprm, struct user_arg_ptr argv);
 void gr_log_remount(const char *devname, const int retval);
 void gr_log_unmount(const char *devname, const int retval);
 void gr_log_mount(const char *from, const char *to, const int retval);
-- 
1.7.5.4

