From 436977513c860bdf1067dc6528d3e4b2b781afe1 Mon Sep 17 00:00:00 2001
From: Steve Capper <steve.capper@linaro.org>
Date: Tue, 7 Apr 2015 12:28:39 +0100
Subject: [PATCH 24/26] arm64: uprobes: check conditions before simulating
 instructions

Taken from:
git://github.com/pratyushanand/linux.git:uprobe/upstream_arm64_devel

Currently uprobes just simulates any instruction that it can't in
place execute. This can lead to unpredictable behaviour if the
execution condition fails and the instruction wouldn't otherwise
have been executed.

This patch adds the condition check

Signed-off-by: Steve Capper <steve.capper@linaro.org>
Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 arch/arm64/kernel/uprobes.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/arch/arm64/kernel/uprobes.c b/arch/arm64/kernel/uprobes.c
index ba77fe3..177a449 100644
--- a/arch/arm64/kernel/uprobes.c
+++ b/arch/arm64/kernel/uprobes.c
@@ -119,15 +119,22 @@ bool arch_uprobe_skip_sstep(struct arch_uprobe *auprobe, struct pt_regs *regs)
 {
 	kprobe_opcode_t insn;
 	unsigned long addr;
+	struct arch_specific_insn *ainsn;
 
 	if (!auprobe->simulate)
 		return false;
 
 	insn = *(kprobe_opcode_t *)(&auprobe->insn[0]);
 	addr = instruction_pointer(regs);
+	ainsn = &auprobe->ainsn;
+
+	if (ainsn->handler) {
+		if (!ainsn->check_condn || ainsn->check_condn(insn, ainsn, regs))
+			ainsn->handler(insn, addr, regs);
+		else
+			instruction_pointer_set(regs, instruction_pointer(regs) + 4);
+	}
 
-	if (auprobe->ainsn.handler)
-		auprobe->ainsn.handler(insn, addr, regs);
 
 	return true;
 }
-- 
2.0.2

