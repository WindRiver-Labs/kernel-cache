From 8efdee65485b95e6e942206eb766a52a1eeecf83 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Wed, 1 Jul 2015 19:22:38 +0300
Subject: [PATCH 137/214] staging: fsl-dpaa2: evb: Port to MC-0.7 FLibs

Change-Id: Icc3e2c0ba5a9d20bec449fe27aaa3f04602a9f0d
Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Reviewed-on: http://git.am.freescale.net:8181/39150
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
Tested-by: Stuart Yoder <stuart.yoder@freescale.com>
[Original patch extracted from FSL LS2085 SDK EAR5.0,
Layerscape2-SDK-SOURCE-20150828-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/staging/fsl-dpaa2/evb/evb.c | 25 ++++++++++++++++++-------
 1 file changed, 18 insertions(+), 7 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/evb/evb.c b/drivers/staging/fsl-dpaa2/evb/evb.c
index a077554..1e3d58c 100644
--- a/drivers/staging/fsl-dpaa2/evb/evb.c
+++ b/drivers/staging/fsl-dpaa2/evb/evb.c
@@ -79,6 +79,7 @@ static int evb_port_add_rule(struct net_device *netdev,
 		ether_addr_copy(rule.mac_addr, addr);
 
 	err = dpdmux_if_add_l2_rule(port_priv->evb_priv->mc_io,
+				    0,
 				    port_priv->evb_priv->mux_handle,
 				    port_priv->port_index, &rule);
 	if (unlikely(err))
@@ -97,6 +98,7 @@ static int evb_port_del_rule(struct net_device *netdev,
 		ether_addr_copy(rule.mac_addr, addr);
 
 	err = dpdmux_if_remove_l2_rule(port_priv->evb_priv->mc_io,
+				       0,
 				       port_priv->evb_priv->mux_handle,
 				       port_priv->port_index, &rule);
 	if (unlikely(err))
@@ -533,6 +535,7 @@ evb_port_get_stats(struct net_device *netdev,
 	int			err;
 
 	err = dpdmux_if_get_counter(port_priv->evb_priv->mc_io,
+				    0,
 				    port_priv->evb_priv->mux_handle,
 				    port_priv->port_index,
 				    DPDMUX_CNT_ING_FRAME, &storage->rx_packets);
@@ -540,6 +543,7 @@ evb_port_get_stats(struct net_device *netdev,
 		goto error;
 
 	err = dpdmux_if_get_counter(port_priv->evb_priv->mc_io,
+				    0,
 				    port_priv->evb_priv->mux_handle,
 				    port_priv->port_index,
 				    DPDMUX_CNT_ING_BYTE, &storage->rx_bytes);
@@ -547,6 +551,7 @@ evb_port_get_stats(struct net_device *netdev,
 		goto error;
 
 	err = dpdmux_if_get_counter(port_priv->evb_priv->mc_io,
+				    0,
 				    port_priv->evb_priv->mux_handle,
 				    port_priv->port_index,
 				    DPDMUX_CNT_ING_FLTR_FRAME, &tmp);
@@ -554,6 +559,7 @@ evb_port_get_stats(struct net_device *netdev,
 		goto error;
 
 	err = dpdmux_if_get_counter(port_priv->evb_priv->mc_io,
+				    0,
 				    port_priv->evb_priv->mux_handle,
 				    port_priv->port_index,
 				    DPDMUX_CNT_ING_FRAME_DISCARD,
@@ -565,6 +571,7 @@ evb_port_get_stats(struct net_device *netdev,
 	storage->rx_dropped += tmp;
 
 	err = dpdmux_if_get_counter(port_priv->evb_priv->mc_io,
+				    0,
 				    port_priv->evb_priv->mux_handle,
 				    port_priv->port_index,
 				    DPDMUX_CNT_ING_MCAST_FRAME,
@@ -573,6 +580,7 @@ evb_port_get_stats(struct net_device *netdev,
 		goto error;
 
 	err = dpdmux_if_get_counter(port_priv->evb_priv->mc_io,
+				    0,
 				    port_priv->evb_priv->mux_handle,
 				    port_priv->port_index,
 				    DPDMUX_CNT_EGR_FRAME, &storage->tx_packets);
@@ -580,6 +588,7 @@ evb_port_get_stats(struct net_device *netdev,
 		goto error;
 
 	err = dpdmux_if_get_counter(port_priv->evb_priv->mc_io,
+				    0,
 				    port_priv->evb_priv->mux_handle,
 				    port_priv->port_index,
 				    DPDMUX_CNT_EGR_BYTE, &storage->tx_bytes);
@@ -587,6 +596,7 @@ evb_port_get_stats(struct net_device *netdev,
 		goto error;
 
 	err = dpdmux_if_get_counter(port_priv->evb_priv->mc_io,
+				    0,
 				    port_priv->evb_priv->mux_handle,
 				    port_priv->port_index,
 				    DPDMUX_CNT_EGR_FRAME_DISCARD,
@@ -661,6 +671,7 @@ static void evb_ethtool_get_stats(struct net_device *netdev,
 
 	for (i = 0; i < ARRAY_SIZE(evb_ethtool_counters); i++) {
 		err = dpdmux_if_get_counter(port_priv->evb_priv->mc_io,
+					    0,
 					    port_priv->evb_priv->mux_handle,
 					    port_priv->port_index,
 					    evb_ethtool_counters[i].id,
@@ -682,7 +693,7 @@ static int evb_open(struct net_device *netdev)
 	struct evb_priv	*priv = netdev_priv(netdev);
 	int		err = 0;
 
-	err = dpdmux_enable(priv->mc_io, priv->mux_handle);
+	err = dpdmux_enable(priv->mc_io, 0, priv->mux_handle);
 	if (unlikely(err))
 		netdev_err(netdev, "dpdmux_enable err %d\n", err);
 
@@ -694,7 +705,7 @@ static int evb_close(struct net_device *netdev)
 	struct evb_priv	*priv = netdev_priv(netdev);
 	int		err = 0;
 
-	err = dpdmux_disable(priv->mc_io, priv->mux_handle);
+	err = dpdmux_disable(priv->mc_io, 0, priv->mux_handle);
 	if (unlikely(err))
 		netdev_err(netdev, "dpdmux_disable err %d\n", err);
 
@@ -720,7 +731,7 @@ static int evb_takedown(struct fsl_mc_device *evb_dev)
 	struct evb_priv		*priv = netdev_priv(netdev);
 	int			err;
 
-	err = dpdmux_close(priv->mc_io, priv->mux_handle);
+	err = dpdmux_close(priv->mc_io, 0, priv->mux_handle);
 	if (unlikely(err))
 		dev_warn(dev, "dpdmux_close err %d\n", err);
 
@@ -736,7 +747,7 @@ static int evb_init(struct fsl_mc_device *evb_dev)
 
 	priv->dev_id = evb_dev->obj_desc.id;
 
-	err = dpdmux_open(priv->mc_io, priv->dev_id, &priv->mux_handle);
+	err = dpdmux_open(priv->mc_io, 0, priv->dev_id, &priv->mux_handle);
 	if (unlikely(err)) {
 		dev_err(dev, "dpdmux_open err %d\n", err);
 		goto err_exit;
@@ -747,14 +758,14 @@ static int evb_init(struct fsl_mc_device *evb_dev)
 		goto err_exit;
 	}
 
-	err = dpdmux_get_attributes(priv->mc_io, priv->mux_handle,
+	err = dpdmux_get_attributes(priv->mc_io, 0, priv->mux_handle,
 				    &priv->attr);
 	if (unlikely(err)) {
 		dev_err(dev, "dpdmux_get_attributes err %d\n", err);
 		goto err_close;
 	}
 
-	err = dpdmux_reset(priv->mc_io, priv->mux_handle);
+	err = dpdmux_reset(priv->mc_io, 0, priv->mux_handle);
 	if (unlikely(err)) {
 		dev_err(dev, "dpdmux_reset err %d\n", err);
 		goto err_close;
@@ -763,7 +774,7 @@ static int evb_init(struct fsl_mc_device *evb_dev)
 	return 0;
 
 err_close:
-	dpdmux_close(priv->mc_io, priv->mux_handle);
+	dpdmux_close(priv->mc_io, 0, priv->mux_handle);
 err_exit:
 	return err;
 }
-- 
2.5.3

