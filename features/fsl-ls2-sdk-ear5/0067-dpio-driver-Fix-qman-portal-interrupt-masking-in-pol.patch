From 3a8749ab3604523af7a89a8d853d9c347f8038cc Mon Sep 17 00:00:00 2001
From: Bharat Bhushan <Bharat.Bhushan@freescale.com>
Date: Mon, 1 Jun 2015 09:28:54 +0530
Subject: [PATCH 067/214] dpio-driver: Fix qman-portal interrupt masking in
 poll mode

DPIO driver should mask qman-portal interrupt reporting When
working in poll mode. has_irq flag is used for same, but
interrupt maksing was happening before it was decided that
system will work in poll mode of interrupt mode.

This patch fixes the issue and not irq masking/enabling is
happening after irq/poll mode is decided.

Signed-off-by: Bharat Bhushan <Bharat.Bhushan@freescale.com>
Change-Id: I44de07b6142e80b3daea45e7d51a2d2799b2ed8d
Reviewed-on: http://git.am.freescale.net:8181/37100
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Roy Pledge <roy.pledge@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
(cherry picked from commit 3579244250dcb287a0fe58bcc3b3780076d040a2)
[Original patch extracted from FSL LS2085 SDK EAR5.0,
Layerscape2-SDK-SOURCE-20150828-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/staging/fsl-mc/bus/dpio/dpio-drv.c | 29 +++++++++++++++++------------
 1 file changed, 17 insertions(+), 12 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c b/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
index 5bcf2b1..3c79bb0 100644
--- a/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
+++ b/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
@@ -241,25 +241,30 @@ ldpaa_dpio_probe(struct fsl_mc_device *ls_dev)
 		resource_size(&ls_dev->regions[0]));
 	desc.regs_cinh = ioremap(ls_dev->regions[1].start,
 		resource_size(&ls_dev->regions[1]));
-	priv->io = dpaa_io_create(&desc);
-	if (!priv->io) {
-		dev_err(dev, "DPIO setup failed\n");
-		goto err_dpaa_io_create;
-	}
 
 	err = fsl_mc_allocate_irqs(ls_dev);
 	if (err) {
 		dev_err(dev, "DPIO fsl_mc_allocate_irqs failed\n");
-		goto poll_mode;
+		desc.has_irq = 0;
+	} else {
+		irq_allocated = true;
+
+		snprintf(priv->irq_name, MAX_DPIO_IRQ_NAME, "FSL DPIO %d",
+			 desc.dpio_id);
+
+		err = register_dpio_irq_handlers(ls_dev, desc.cpu);
+		if (err)
+			desc.has_irq = 0;
 	}
-	irq_allocated = true;
 
-	snprintf(priv->irq_name, MAX_DPIO_IRQ_NAME, "FSL DPIO %d",
-			desc.dpio_id);
+	priv->io = dpaa_io_create(&desc);
+	if (!priv->io) {
+		dev_err(dev, "DPIO setup failed\n");
+		goto err_dpaa_io_create;
+	}
 
-	err = register_dpio_irq_handlers(ls_dev, desc.cpu);
-poll_mode:
-	if (err) {
+	/* If no irq then go to poll mode */
+	if (desc.has_irq == 0) {
 		dev_info(dev, "Using polling mode for DPIO %d\n",
 			 desc.dpio_id);
 		/* goto err_register_dpio_irq; */
-- 
2.5.3

