From a01a4024584b7e5b8a23b1183ae0c4237dd89ad0 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Mon, 18 May 2015 19:56:00 +0300
Subject: [PATCH 104/214] dpaa2-eth: Probe devices with no hash support

Don't fail at probe if the DPNI doesn't have the hash distribution
option enabled. Instead, initialize a single Rx frame queue and
use it for all incoming traffic.

Rx flow hashing configuration through ethtool will not work
in this case.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Reviewed-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Change-Id: Iaf17e05b15946e6901c39a21b5344b89e9f1d797
Reviewed-on: http://git.am.freescale.net:8181/37676
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
[Original patch extracted from FSL LS2085 SDK EAR5.0,
Layerscape2-SDK-SOURCE-20150828-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c     | 12 +++++++-----
 drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h     |  5 ++++-
 drivers/staging/fsl-dpaa2/ethernet/ldpaa_ethtool.c |  5 +++++
 3 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
index ea61864..284c161 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
@@ -1186,8 +1186,9 @@ static void ldpaa_eth_setup_fqs(struct ldpaa_eth_priv *priv)
 	 * TODO: We still only have one traffic class for now,
 	 * but for multiple TCs may need an array of dist sizes.
 	 */
-	priv->rx_dist_size = (uint8_t)roundup_pow_of_two(num_possible_cpus());
-	for (i = 0; i < priv->rx_dist_size; i++) {
+	priv->num_rx_flows = ldpaa_eth_hash_enabled(priv) ?
+			(uint8_t)roundup_pow_of_two(num_possible_cpus()) : 1;
+	for (i = 0; i < priv->num_rx_flows; i++) {
 		priv->fq[priv->num_fqs].netdev_priv = priv;
 		priv->fq[priv->num_fqs].type = LDPAA_RX_FQ;
 		priv->fq[priv->num_fqs].consume = ldpaa_eth_rx;
@@ -1672,9 +1673,10 @@ static int ldpaa_dpni_bind(struct ldpaa_eth_priv *priv)
 	/* have the interface implicitly distribute traffic based on supported
 	 * header fields
 	 */
-	err = ldpaa_set_hash(net_dev, LDPAA_RXH_SUPPORTED);
-	if (unlikely(err)) {
-		return err;
+	if (ldpaa_eth_hash_enabled(priv)) {
+		err = ldpaa_set_hash(net_dev, LDPAA_RXH_SUPPORTED);
+		if (unlikely(err))
+			return err;
 	}
 
 	/* Configure handling of error frames */
diff --git a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h
index 990e41c..310d6b8 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h
+++ b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h
@@ -262,7 +262,7 @@ struct ldpaa_eth_priv {
 	uint32_t msg_enable;	/* net_device message level */
 
 	uint16_t mc_token;
-	uint8_t rx_dist_size;
+	uint8_t num_rx_flows;
 
 	struct dpni_link_state link_state;
 	struct task_struct *poll_thread;
@@ -276,6 +276,9 @@ struct ldpaa_eth_priv {
 				| RXH_IP_SRC | RXH_IP_DST | RXH_L4_B_0_1 \
 				| RXH_L4_B_2_3)
 
+#define ldpaa_eth_hash_enabled(priv)	\
+	((priv)->dpni_attrs.options & DPNI_OPT_DIST_HASH)
+
 extern const struct ethtool_ops ldpaa_ethtool_ops;
 
 /* Set RX hash options
diff --git a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_ethtool.c b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_ethtool.c
index 1046d94..39cd5fe 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_ethtool.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_ethtool.c
@@ -307,6 +307,11 @@ int ldpaa_set_hash(struct net_device *net_dev, u64 flags)
 	int i;
 	int err = 0;
 
+	if (!ldpaa_eth_hash_enabled(priv)) {
+		netdev_err(net_dev, "Hashing support is not enabled\n");
+		return -ENOTSUPP;
+	}
+
 	if (flags & ~LDPAA_RXH_SUPPORTED) {
 		/* RXH_DISCARD is not supported */
 		netdev_err(net_dev,
-- 
2.5.3

