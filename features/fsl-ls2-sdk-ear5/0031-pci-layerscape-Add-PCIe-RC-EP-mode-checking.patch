From 79c249a96c5e3d26888c16c692198e0da8c6150e Mon Sep 17 00:00:00 2001
From: Minghuan Lian <Minghuan.Lian@freescale.com>
Date: Mon, 6 Jul 2015 15:07:52 +0800
Subject: [PATCH 031/214] pci/layerscape: Add PCIe RC/EP mode checking

The patch will check PCIe controller work mode, if it is in
EP mode, directly return "-ENODEV". This allows the EP driver
to probe it again.

Signed-off-by: Minghuan Lian <Minghuan.Lian@freescale.com>
[Original patch extracted from FSL LS2085 SDK EAR5.0,
Layerscape2-SDK-SOURCE-20150828-yocto.iso]
Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 drivers/pci/host/pci-layerscape.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/pci/host/pci-layerscape.c b/drivers/pci/host/pci-layerscape.c
index ca64f6a..4bcce38 100644
--- a/drivers/pci/host/pci-layerscape.c
+++ b/drivers/pci/host/pci-layerscape.c
@@ -44,6 +44,16 @@ struct ls_pcie {
 
 #define to_ls_pcie(x)	container_of(x, struct ls_pcie, pp)
 
+static bool ls_pcie_is_bridge(struct ls_pcie *pcie)
+{
+	u32 header_type;
+
+	header_type = ioread32(pcie->regs + (PCI_HEADER_TYPE & ~0x3));
+	header_type = (header_type >> (8 * (PCI_HEADER_TYPE & 0x3))) & 0x7f;
+
+	return header_type == PCI_HEADER_TYPE_BRIDGE;
+}
+
 static int ls1_pcie_link_up(struct dw_pcie_port *pp)
 {
 	struct ls_pcie *pcie = to_ls_pcie(pp);
@@ -187,6 +197,9 @@ static int __init ls_pcie_probe(struct platform_device *pdev)
 	pcie->pp.dw_ops = (struct dw_host_ops *)match->data;
 	pcie->pp.atu_num = PCIE_ATU_NUM;
 
+	if (!ls_pcie_is_bridge(pcie))
+		return -ENODEV;
+
 	ret = dw_pcie_port_init(&pcie->pp);
 	if (ret < 0)
 		return ret;
-- 
2.5.3

