From 6533074c103158b61182c05566f1d8ad91cfdafc Mon Sep 17 00:00:00 2001
From: Nam Ninh <nam.ninh@windriver.com>
Date: Tue, 6 May 2014 12:23:26 -0400
Subject: [PATCH] cgroup: add subsystem pointer to cgroup_subsys_state

[ Upstream commit 72c97e54e0f043d33b246d7460ae0a36c4b8c643 ]

Currently, given a cgroup_subsys_state, there's no way to find out
which subsystem the css is for, which we'll need to convert the cgroup
controller API to primarily use @css instead of @cgroup.  This patch
adds cgroup_subsys_state->ss which points to the subsystem the @css
belongs to.

While at it, remove the comment about accessing @css->cgroup to
determine the hierarchy.  cgroup core will provide API to traverse
hierarchy of css'es and we don't want subsystems to directly walk
cgroup hierarchies anymore.

Signed-off-by: Tejun Heo <tj@kernel.org>
Acked-by: Li Zefan <lizefan@huawei.com>
Signed-off-by: Nam Ninh <nam.ninh@windriver.com>

diff --git a/include/linux/cgroup.h b/include/linux/cgroup.h
index 8852d37..6bf5aae 100644
--- a/include/linux/cgroup.h
+++ b/include/linux/cgroup.h
@@ -65,13 +65,12 @@ enum cgroup_subsys_id {
 
 /* Per-subsystem/per-cgroup state maintained by the system. */
 struct cgroup_subsys_state {
-	/*
-	 * The cgroup that this subsystem is attached to. Useful
-	 * for subsystems that want to know about the cgroup
-	 * hierarchy structure
-	 */
+	/* the cgroup that this css is attached to */
 	struct cgroup *cgroup;
 
+	/* the cgroup subsystem that this css is attached to */
+	struct cgroup_subsys *ss;
+
 	/*
 	 * State maintained by the cgroup system to allow subsystems
 	 * to be "busy". Should be accessed via css_get(),
diff --git a/kernel/cgroup.c b/kernel/cgroup.c
index d0def7f..3952e98 100644
--- a/kernel/cgroup.c
+++ b/kernel/cgroup.c
@@ -4072,6 +4072,7 @@ static void init_cgroup_css(struct cgroup_subsys_state *css,
 			       struct cgroup *cgrp)
 {
 	css->cgroup = cgrp;
+	css->ss = ss;
 	atomic_set(&css->refcnt, 1);
 	css->flags = 0;
 	css->id = NULL;
-- 
1.8.2.3

