From 8cdb250c005f1c36194112403b9a942f35ce4167 Mon Sep 17 00:00:00 2001
From: Dongdong Deng <dongdong.deng@windriver.com>
Date: Wed, 28 Apr 2010 23:34:32 -0700
Subject: [PATCH 1/3] kgdb core: only check cpus when kgdb_do_roundup is set

If roundup is a problem and kgdb_do_roundup hasn't been set,
other (where other are the cpus not taking the action) cpus
will not enter kgdb_cpu_enter().

To fix this, we don't check the slave cpus state in kgdb if
kgdb_roundup isn't set.

Signed-off-by: Dongdong Deng <dongdong.deng@windriver.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 kernel/debug/debug_core.c |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/kernel/debug/debug_core.c b/kernel/debug/debug_core.c
index b55368b..4412bc9 100644
--- a/kernel/debug/debug_core.c
+++ b/kernel/debug/debug_core.c
@@ -585,7 +585,7 @@ return_normal:
 	 * Wait for the other CPUs to be notified and be waiting for us:
 	 */
 	for_each_online_cpu(i) {
-		while (!atomic_read(&cpu_in_kgdb[i]))
+		while (kgdb_do_roundup && !atomic_read(&cpu_in_kgdb[i]))
 			cpu_relax();
 	}
 
@@ -638,7 +638,8 @@ cpu_master_loop:
 		 * core.
 		 */
 		for_each_online_cpu(i) {
-			while (atomic_read(&cpu_in_kgdb[i]) &&
+			while (kgdb_do_roundup &&
+			       atomic_read(&cpu_in_kgdb[i]) &&
 			       !(kgdb_info[i].exception_state &
 				 DCPU_WANT_MASTER))
 				cpu_relax();
-- 
1.6.5.2

