From cd85e81fec425e62307999215b2cb7ddff7780ee Mon Sep 17 00:00:00 2001
From: "Kexin(Casey) Chen" <Casey.Chen@windriver.com>
Date: Wed, 21 Sep 2016 15:42:59 -0700
Subject: [PATCH 19/28] modules,kgdb: Add module gone event

When a debugger such as gdb is attached, it cares when a kernel module
is either in the coming state or the gone state such that it can
update the debugger state for mapping symbols to actual code that is
loaded by the kernel.  The module "GOING" state is not good enough
because the kernel will still list the module as being in the section
maps and occupying virtual memory.

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
CC: Mark Asselstine <mark.asselstine@windriver.com>

Adjust hunk #1 of kernel/module.c

Signed-off-by: He Zhe <zhe.he@windriver.com>

Signed-off-by: Kexin(Casey) Chen <Casey.Chen@windriver.com>
---
 include/linux/module.h | 1 +
 kernel/module.c        | 5 +++++
 2 files changed, 6 insertions(+)

diff --git a/include/linux/module.h b/include/linux/module.h
index 0c3207d..3602772 100644
--- a/include/linux/module.h
+++ b/include/linux/module.h
@@ -279,6 +279,7 @@ enum module_state {
 	MODULE_STATE_LIVE,	/* Normal state. */
 	MODULE_STATE_COMING,	/* Full formed, running module_init. */
 	MODULE_STATE_GOING,	/* Going away. */
+	MODULE_STATE_GONE, /* It has gone away. */
 	MODULE_STATE_UNFORMED,	/* Still setting it up. */
 };
 
diff --git a/kernel/module.c b/kernel/module.c
index 529efae..d1409d0 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -862,6 +862,8 @@ static void module_unload_free(struct module *mod)
 		list_del(&use->target_list);
 		kfree(use);
 	}
+	blocking_notifier_call_chain(&module_notify_list,
+				     MODULE_STATE_GONE, mod);
 	mutex_unlock(&module_mutex);
 }
 
@@ -1172,6 +1174,9 @@ static ssize_t show_initstate(struct module_attribute *mattr,
 	case MODULE_STATE_GOING:
 		state = "going";
 		break;
+	case MODULE_STATE_GONE:
+		state = "gone";
+		break;
 	default:
 		BUG();
 	}
-- 
2.0.2

