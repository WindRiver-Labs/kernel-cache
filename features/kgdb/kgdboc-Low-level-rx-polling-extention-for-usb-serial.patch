From 24b07544d9aa42314d3031a295b5b951caae4773 Mon Sep 17 00:00:00 2001
From: Jason Wessel <jason.wessel@windriver.com>
Date: Wed, 16 Oct 2013 14:51:04 -0500
Subject: [PATCH 07/34] kgdboc: Low level rx polling extention for usb serial
 devices

Add a character buffer for devices to fill while being polled.

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
Signed-off-by: He Zhe <zhe.he@windriver.com>
---
 drivers/tty/serial/kgdboc.c | 36 +++++++++++++++++++++++++++++++++++-
 1 file changed, 35 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/serial/kgdboc.c b/drivers/tty/serial/kgdboc.c
index 75b737c..c889766 100644
--- a/drivers/tty/serial/kgdboc.c
+++ b/drivers/tty/serial/kgdboc.c
@@ -22,6 +22,7 @@
 #include <linux/module.h>
 
 #define MAX_CONFIG_LEN		40
+#define MAX_CHAR_RING		512
 
 static struct kgdb_io		kgdboc_io_ops;
 
@@ -143,6 +144,9 @@ static int kgdboc_option_setup(char *opt)
 }
 
 static int buffered_char = -1;
+static u8 ch_ring[MAX_CHAR_RING];
+static int ch_head;
+static int ch_tail;
 static u8 break_char;
 static int no_polled_breaks;
 static int schedule_breakpoints;
@@ -167,6 +171,16 @@ static int kgdboc_rx_callback(u8 c)
 		}
 		return 0;
 	}
+	/* Assume the debugger is active and store the characters in an
+	 * array which will be decremented at a later point.
+	 */
+	ch_ring[ch_tail] = c;
+	ch_tail++;
+	if (ch_tail >= MAX_CHAR_RING)
+		ch_tail = 0;
+	if (ch_tail == ch_head)
+		printk(KERN_CRIT "kgdboc: ERROR rx buffer overflow\n");
+
 	return 1;
 }
 
@@ -290,12 +304,30 @@ static int __init init_kgdboc(void)
 
 static int kgdboc_get_char(void)
 {
+	int ret;
+
 	if (!kgdb_tty_driver)
 		return -1;
 	if (buffered_char >= 0)
 		return xchg(&buffered_char, -1);
-	return kgdb_tty_driver->ops->poll_get_char(kgdb_tty_driver,
+
+	do {
+		ret = kgdb_tty_driver->ops->poll_get_char(kgdb_tty_driver,
 						kgdb_tty_line);
+		if (ret != -2)
+			return ret;
+
+		/* A return of -2 means use the poll character ring */
+		if (ch_head != ch_tail) {
+			ret = ch_ring[ch_head];
+			ch_head++;
+			if (ch_head >= MAX_CHAR_RING)
+				ch_head = 0;
+			return ret;
+		}
+	} while (ret == -2);
+
+	return -1;
 }
 
 static void kgdboc_put_char(u8 chr)
@@ -351,6 +383,8 @@ static void kgdboc_pre_exp_handler(void)
 	/* Increment the module count when the debugger is active */
 	if (!kgdb_connected)
 		try_module_get(THIS_MODULE);
+	ch_head = 0;
+	ch_tail = 0;
 }
 
 static void kgdboc_post_exp_handler(void)
-- 
2.0.2

