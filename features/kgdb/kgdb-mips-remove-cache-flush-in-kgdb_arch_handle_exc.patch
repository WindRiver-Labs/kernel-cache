From 0b6f5de6ed39a171709e914ee6e22f373b4961c7 Mon Sep 17 00:00:00 2001
From: Yong Zhang <yong.zhang@windriver.com>
Date: Thu, 22 Jul 2010 01:09:34 -0700
Subject: [PATCH 22/31] kgdb/mips: remove cache flush in
 kgdb_arch_handle_exception

On mips SMP, the icache flush operation uses smp_call_function() which
must be called with irqs enabled.  The kgdb exception handler runs
with irqs off on all processors.

Before kgdb returns from the exception context it executes a complete
cache flush, right after enabling interrupts.  That means the
kgdb_arch_handle_exception() does not need to flush the cache because
it is redundant.

Signed-off-by: Yong Zhang <yong.zhang@windriver.com>
Integrated-by: Dongdong Deng <dongdong.deng@windriver.com>
Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
---
 arch/mips/kernel/kgdb.c |    3 ---
 1 file changed, 3 deletions(-)

diff --git a/arch/mips/kernel/kgdb.c b/arch/mips/kernel/kgdb.c
index e7f761a..78a1441 100644
--- a/arch/mips/kernel/kgdb.c
+++ b/arch/mips/kernel/kgdb.c
@@ -464,9 +464,6 @@ int kgdb_arch_handle_exception(int vector, int signo, int err_code,
 		/* masks interrupts */
 		regs->cp0_status &= ~ST0_IE;
 
-		/* Flush cache */
-		flush_icache_range((long)next_addr,
-				   (long)next_addr + 4);
 		atomic_set(&kgdb_cpu_doing_single_step, cpu);
 
 		PRINTK("step armed over 0x%lx\n", regs->cp0_epc);
-- 
1.7.9.7

