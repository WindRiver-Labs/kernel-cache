From f4fa5b90180dfdeddfb952f839a275fc79ab3454 Mon Sep 17 00:00:00 2001
From: Jason Wessel <jason.wessel@windriver.com>
Date: Fri, 6 Aug 2010 11:47:14 -0500
Subject: [PATCH 2/2] rcu,debug_core: allow the kernel debugger to reset the rcu stall timer

When returning from the kernel debugger allow a reset of the rcu
jiffies_stall value to prevent the rcu stall detector from sending NMI
events which stack dumps on all the cpus in the system.

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
CC: Dipankar Sarma <dipankar@in.ibm.com>
CC: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
CC: Ingo Molnar <mingo@elte.hu>
---
 include/linux/rcupdate.h  |    8 ++++++++
 kernel/debug/debug_core.c |    2 ++
 kernel/rcutree.c          |    9 +++++++++
 3 files changed, 19 insertions(+), 0 deletions(-)

diff --git a/include/linux/rcupdate.h b/include/linux/rcupdate.h
index a58ca4d..4f09a96 100644
--- a/include/linux/rcupdate.h
+++ b/include/linux/rcupdate.h
@@ -556,4 +556,12 @@ static inline void debug_rcu_head_unqueue(struct rcu_head *head)
 }
 #endif	/* #else !CONFIG_DEBUG_OBJECTS_RCU_HEAD */
 
+#ifdef CONFIG_RCU_CPU_STALL_DETECTOR
+extern void rcu_cpu_stall_reset(void);
+#else /* #ifdef CONFIG_RCU_CPU_STALL_DETECTOR */
+static inline void rcu_cpu_stall_reset(void)
+{
+}
+#endif /* #ifdef CONFIG_RCU_CPU_STALL_DETECTOR */
+
 #endif /* __LINUX_RCUPDATE_H */
diff --git a/kernel/debug/debug_core.c b/kernel/debug/debug_core.c
index 6bdd789..baa0552 100644
--- a/kernel/debug/debug_core.c
+++ b/kernel/debug/debug_core.c
@@ -48,6 +48,7 @@
 #include <linux/pid.h>
 #include <linux/smp.h>
 #include <linux/mm.h>
+#include <linux/rcupdate.h>
 
 #include <asm/cacheflush.h>
 #include <asm/byteorder.h>
@@ -476,6 +477,7 @@ static void dbg_touch_watchdogs(void)
 {
 	touch_softlockup_watchdog_sync();
 	clocksource_touch_watchdog();
+	rcu_cpu_stall_reset();
 }
 
 static int kgdb_cpu_enter(struct kgdb_state *ks, struct pt_regs *regs)
diff --git a/kernel/rcutree.c b/kernel/rcutree.c
index 611516c..6f9b4a5 100644
--- a/kernel/rcutree.c
+++ b/kernel/rcutree.c
@@ -520,6 +520,9 @@ static void check_cpu_stall(struct rcu_state *rsp, struct rcu_data *rdp)
 	long delta;
 	struct rcu_node *rnp;
 
+	/* Gracefully handle a watch dog reset when jiffies_stall == 0 */
+	if (!rsp->jiffies_stall)
+		return;
 	delta = jiffies - rsp->jiffies_stall;
 	rnp = rdp->mynode;
 	if ((rnp->qsmask & rdp->grpmask) && delta >= 0) {
@@ -534,6 +537,12 @@ static void check_cpu_stall(struct rcu_state *rsp, struct rcu_data *rdp)
 	}
 }
 
+void rcu_cpu_stall_reset(void)
+{
+	rcu_sched_state.jiffies_stall = 0;
+	rcu_bh_state.jiffies_stall = 0;
+}
+
 #else /* #ifdef CONFIG_RCU_CPU_STALL_DETECTOR */
 
 static void record_gp_stall_check_time(struct rcu_state *rsp)
-- 
1.6.5.2

