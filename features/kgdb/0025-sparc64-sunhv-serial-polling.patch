From af9f0b3fcf107d25c2b3f9b9b00b5b970e4e7fca Mon Sep 17 00:00:00 2001
From: Boban Petrovic <boban.petrovic@windriver.com>
Date: Sun, 15 Feb 2009 20:38:46 -0500
Subject: [PATCH] sparc64 sunhv serial polling

This patch is a work around for the SUN4V hypervisor eating a character
after the break character is sent.  The work around is to use a different
break character.  The default break character is (CTRL-C or 0x03).

Jason introduced changes in the agent-proxy to specify the break character.

Signed-off-by: Boban Petrovic <boban.petrovic@windriver.com>
Signed-off-by: Hong H. Pham <hong.pham@windriver.com>
---
 drivers/serial/sunhv.c |   26 ++++++++++++++++++++++++--
 1 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/drivers/serial/sunhv.c b/drivers/serial/sunhv.c
index 26b1bff..2620b37 100644
--- a/drivers/serial/sunhv.c
+++ b/drivers/serial/sunhv.c
@@ -99,6 +99,11 @@ static int receive_chars_getchar(struct uart_port *port, struct tty_struct *tty)
 			uart_handle_dcd_change(port, 1);
 		}
 
+#ifdef CONFIG_CONSOLE_POLL
+                if (port->poll_rx_cb && port->poll_rx_cb(c & 255))
+                        continue;
+#endif
+
 		if (tty == NULL) {
 			uart_handle_sysrq_char(port, c);
 			continue;
@@ -123,6 +128,7 @@ static int receive_chars_read(struct uart_port *port, struct tty_struct *tty)
 	while (limit-- > 0) {
 		unsigned long ra = __pa(con_read_page);
 		unsigned long bytes_read, i;
+		unsigned long breaks_received = 0;
 		long stat = sun4v_con_read(ra, PAGE_SIZE, &bytes_read);
 
 		if (stat != HV_EOK) {
@@ -144,20 +150,36 @@ static int receive_chars_read(struct uart_port *port, struct tty_struct *tty)
 			}
 		}
 
+#ifdef CONFIG_CONSOLE_POLL
+                if (port->poll_rx_cb) {
+			for (i = 0; i < bytes_read; i++) {
+				if (port->poll_rx_cb(con_read_page[i] & 255)) {
+					if ((bytes_read - i - 1) != 0)
+						memcpy(&con_read_page[i], &con_read_page[i+1], bytes_read - i - 1);
+					breaks_received++;
+					continue;
+				} else
+					uart_handle_sysrq_char(port, con_read_page[i]);
+			}
+		}
+#endif
+
 		if (hung_up) {
 			hung_up = 0;
 			uart_handle_dcd_change(port, 1);
 		}
 
+#ifndef CONFIG_CONSOLE_POLL
 		for (i = 0; i < bytes_read; i++)
 			uart_handle_sysrq_char(port, con_read_page[i]);
+#endif
 
 		if (tty == NULL)
 			continue;
 
-		port->icount.rx += bytes_read;
+		port->icount.rx += bytes_read - breaks_received;
 
-		tty_insert_flip_string(tty, con_read_page, bytes_read);
+		tty_insert_flip_string(tty, con_read_page, bytes_read - breaks_received);
 	}
 
 	return saw_console_brk;
-- 
1.6.0.3

