From 28e0918a870402d55a9795be07d200a493657d4b Mon Sep 17 00:00:00 2001
From: Jason Wessel <jason.wessel@windriver.com>
Date: Fri, 10 Aug 2012 22:24:43 -0500
Subject: [PATCH 07/31] NET_POLL: Pass skb via NET_POLL rx routine

This patch is a change to the NET POLL api so that the MAC address or
IP frame information can be parsed by the driver that wishes to use
it.  Speficially for kgdboe, it is used to automatically collect the
MAC address of the GDB host.

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
Acked-by: Matt Mackall <mpm@selenic.com>
---
 include/linux/netpoll.h |    4 ++--
 net/core/netpoll.c      |    6 ++++--
 2 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/include/linux/netpoll.h b/include/linux/netpoll.h
index 5dfa091..fe37699f 100644
--- a/include/linux/netpoll.h
+++ b/include/linux/netpoll.h
@@ -16,7 +16,7 @@ struct netpoll {
 	struct net_device *dev;
 	char dev_name[IFNAMSIZ];
 	const char *name;
-	void (*rx_hook)(struct netpoll *, int, char *, int);
+	void (*rx_hook)(struct netpoll *, int, char *, int, struct sk_buff *);
 
 	__be32 local_ip, remote_ip;
 	u16 local_port, remote_port;
@@ -40,6 +40,7 @@ struct netpoll_info {
 	struct netpoll *netpoll;
 };
 
+void netpoll_poll_dev(struct net_device *dev);
 void netpoll_send_udp(struct netpoll *np, const char *msg, int len);
 void netpoll_print_options(struct netpoll *np);
 int netpoll_parse_options(struct netpoll *np, char *opt);
@@ -58,7 +59,6 @@ static inline void netpoll_send_skb(struct netpoll *np, struct sk_buff *skb)
 }
 
 
-
 #ifdef CONFIG_NETPOLL
 static inline bool netpoll_rx(struct sk_buff *skb)
 {
diff --git a/net/core/netpoll.c b/net/core/netpoll.c
index f9f40b9..0ca11b4 100644
--- a/net/core/netpoll.c
+++ b/net/core/netpoll.c
@@ -189,7 +189,7 @@ static void service_arp_queue(struct netpoll_info *npi)
 	}
 }
 
-static void netpoll_poll_dev(struct net_device *dev)
+void netpoll_poll_dev(struct net_device *dev)
 {
 	const struct net_device_ops *ops;
 
@@ -220,6 +220,7 @@ static void netpoll_poll_dev(struct net_device *dev)
 
 	zap_completion_queue();
 }
+EXPORT_SYMBOL_GPL(netpoll_poll_dev);
 
 static void refill_skbs(void)
 {
@@ -618,7 +619,8 @@ int __netpoll_rx(struct sk_buff *skb)
 
 		np->rx_hook(np, ntohs(uh->source),
 			       (char *)(uh+1),
-			       ulen - sizeof(struct udphdr));
+			       ulen - sizeof(struct udphdr),
+			       skb);
 		hits++;
 	}
 
-- 
1.7.9.7

