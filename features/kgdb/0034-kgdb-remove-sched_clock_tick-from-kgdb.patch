From b0aa38ee720ea16d7f0309d4026910266175d610 Mon Sep 17 00:00:00 2001
From: DDD <Dongdong.deng@windriver.com>
Date: Fri, 28 Aug 2009 16:05:29 +0800
Subject: [PATCH 34/36] kgdb: remove sched_clock_tick() from kgdb

This reverts 583c45cfcc26be4131177b93e3c90d65bada1904 ("kgdb: add
sched_clock_tick() to avoid getting softlock warning").

Add sched_clock_tick() to kgdb will really cause the system hang.

Signed-off-by: Dongdong Deng <dongdong.deng@windriver.com>
---
 kernel/kgdb.c |    3 ---
 1 files changed, 0 insertions(+), 3 deletions(-)

diff --git a/kernel/kgdb.c b/kernel/kgdb.c
index 5e05a68..4462291 100644
--- a/kernel/kgdb.c
+++ b/kernel/kgdb.c
@@ -596,7 +596,6 @@ static void kgdb_wait(struct pt_regs *regs)
 
 	/* Signal the primary CPU that we are done: */
 	atomic_set(&cpu_in_kgdb[cpu], 0);
-	sched_clock_tick();
 	touch_softlockup_watchdog();
 	clocksource_touch_watchdog();
 	local_irq_restore(flags);
@@ -1487,7 +1486,6 @@ acquirelock:
 	    atomic_read(&kgdb_cpu_doing_single_step) != cpu) {
 
 		atomic_set(&kgdb_active, -1);
-		sched_clock_tick();
 		touch_softlockup_watchdog();
 		clocksource_touch_watchdog();
 		local_irq_restore(flags);
@@ -1581,7 +1579,6 @@ acquirelock:
 kgdb_restore:
 	/* Free kgdb_active */
 	atomic_set(&kgdb_active, -1);
-	sched_clock_tick();
 	touch_softlockup_watchdog();
 	clocksource_touch_watchdog();
 	local_irq_restore(flags);
-- 
1.6.3.3

