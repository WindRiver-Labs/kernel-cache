From ae72aa85a531ddf086e05686616714ba7e62b23b Mon Sep 17 00:00:00 2001
From: "Kexin(Casey) Chen" <Casey.Chen@windriver.com>
Date: Wed, 21 Sep 2016 15:14:58 -0700
Subject: [PATCH 15/28] arm,kgdb: Fix software single step support with a
 compiled breakpoint

When a breakpoint has been hard compiled into the kernel,
both soft single step, and the continue operation need to
increment the pc by 4, or the cpu will continue to execute
the compiled trap instruction over and over.

The software single step now mimics the behavior of the
continue operation.

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
Signed-off-by: He Zhe <zhe.he@windriver.com>
Signed-off-by: Kexin(Casey) Chen <Casey.Chen@windriver.com>
---
 arch/arm/kernel/kgdb.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/arch/arm/kernel/kgdb.c b/arch/arm/kernel/kgdb.c
index 913f021..7903e05 100644
--- a/arch/arm/kernel/kgdb.c
+++ b/arch/arm/kernel/kgdb.c
@@ -177,6 +177,11 @@ int kgdb_arch_handle_exception(int exception_vector, int signo,
 		uint32_t *next_addr;
 		uint32_t currentInst;
 
+		/* For a compiled break, advance the PC */
+		if (compiled_break == 1) {
+			linux_regs->ARM_pc += 4;
+			compiled_break = 0;
+		}
 		/*
 		 * Do a software step. We assume that the host
 		 * debuuger has already REMOVED the breakpoint, so if
-- 
2.0.2

