From 4dfb1442c06296f68b473cd7341e7b0396114c29 Mon Sep 17 00:00:00 2001
From: Thomas Gleixner <tglx@linutronix.de>
Date: Sun, 18 Dec 2011 13:31:32 +0100
Subject: [PATCH] kvm: Make lapic hrtimer irq safe

Avoid going through the softirq.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
[MB: kvm_timer_fn is now apic_timer_fn due to commit e9d90d472]
Signed-off-by: Michael Barabanov <michael.barabanov@windriver.com>

diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index e28416fdff0a..3afdc3a04f89 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -71,6 +71,8 @@
 #define VEC_POS(v) ((v) & (32 - 1))
 #define REG_POS(v) (((v) >> 5) << 4)
 
+static enum hrtimer_restart apic_timer_fn(struct hrtimer *);
+
 static inline void apic_set_reg(struct kvm_lapic *apic, int reg_off, u32 val)
 {
 	*((u32 *) (apic->regs + reg_off)) = val;
@@ -1033,9 +1035,13 @@ static void start_apic_timer(struct kvm_lapic *apic)
 			}
 		}
 
-		hrtimer_start(&apic->lapic_timer.timer,
-			      ktime_add_ns(now, apic->lapic_timer.period),
-			      HRTIMER_MODE_ABS);
+again:
+		if (hrtimer_start(&apic->lapic_timer.timer,
+				  ktime_add_ns(now, apic->lapic_timer.period),
+				  HRTIMER_MODE_ABS) == -ETIME) {
+			if (apic_timer_fn(&apic->lapic_timer.timer) == HRTIMER_RESTART)
+				goto again;
+		}
 
 		apic_debug("%s: bus cycle is %" PRId64 "ns, now 0x%016"
 			   PRIx64 ", "
@@ -1550,6 +1556,7 @@ int kvm_create_lapic(struct kvm_vcpu *vcpu)
 	hrtimer_init(&apic->lapic_timer.timer, CLOCK_MONOTONIC,
 		     HRTIMER_MODE_ABS);
 	apic->lapic_timer.timer.function = apic_timer_fn;
+	apic->lapic_timer.timer.irqsafe = 1;
 
 	/*
 	 * APIC is created enabled. This will prevent kvm_lapic_set_base from
-- 
1.9.0

