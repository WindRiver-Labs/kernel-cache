From 0c77357ca26ea090c7d284f8ec31e54227371ebd Mon Sep 17 00:00:00 2001
From: Thomas Gleixner <tglx@linutronix.de>
Date: Sun, 18 Dec 2011 13:31:32 +0100
Subject: [PATCH] kvm: Make lapic hrtimer irq safe

Avoid going through the softirq.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
[MB: kvm_timer_fn is now apic_timer_fn due to commit e9d90d472]
Signed-off-by: Michael Barabanov <michael.barabanov@windriver.com>

diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index c2dbe89..671aa5d 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -74,6 +74,8 @@
 static unsigned int min_timer_period_us = 500;
 module_param(min_timer_period_us, uint, S_IRUGO | S_IWUSR);
 
+static enum hrtimer_restart apic_timer_fn(struct hrtimer *);
+
 static inline void apic_set_reg(struct kvm_lapic *apic, int reg_off, u32 val)
 {
 	*((u32 *) (apic->regs + reg_off)) = val;
@@ -1035,9 +1037,13 @@ static void start_apic_timer(struct kvm_lapic *apic)
 			}
 		}
 
-		hrtimer_start(&apic->lapic_timer.timer,
-			      ktime_add_ns(now, apic->lapic_timer.period),
-			      HRTIMER_MODE_ABS);
+again:
+		if (hrtimer_start(&apic->lapic_timer.timer,
+				  ktime_add_ns(now, apic->lapic_timer.period),
+				  HRTIMER_MODE_ABS) == -ETIME) {
+			if (apic_timer_fn(&apic->lapic_timer.timer) == HRTIMER_RESTART)
+				goto again;
+		}
 
 		apic_debug("%s: bus cycle is %" PRId64 "ns, now 0x%016"
 			   PRIx64 ", "
@@ -1556,6 +1562,7 @@ int kvm_create_lapic(struct kvm_vcpu *vcpu)
 	hrtimer_init(&apic->lapic_timer.timer, CLOCK_MONOTONIC,
 		     HRTIMER_MODE_ABS);
 	apic->lapic_timer.timer.function = apic_timer_fn;
+	apic->lapic_timer.timer.irqsafe = 1;
 	apic->lapic_timer.t_ops = &lapic_timer_ops;
 	apic->lapic_timer.kvm = vcpu->kvm;
 	apic->lapic_timer.vcpu = vcpu;
-- 
1.8.3.1

