From 26835aff5bb597fdef78d8393b9eba5cab638d5b Mon Sep 17 00:00:00 2001
From: Paul Gortmaker <paul.gortmaker@windriver.com>
Date: Tue, 5 Feb 2013 14:27:56 -0500
Subject: [PATCH] simple-wait: re-export the equivalent of waitqueue_active()

This was internalized into wait-simple.c but it parallels
the waitqueue_active of normal waitqueue support, so re-export
it and rename it accordingly.

Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
Signed-off-by: Michael Barabanov <michael.barabanov@windriver.com>

diff --git a/include/linux/wait-simple.h b/include/linux/wait-simple.h
index 44fee60..1045367 100644
--- a/include/linux/wait-simple.h
+++ b/include/linux/wait-simple.h
@@ -47,6 +47,11 @@ extern void swait_prepare(struct swait_head *head, struct swaiter *w, int state)
 extern void swait_finish_locked(struct swait_head *head, struct swaiter *w);
 extern void swait_finish(struct swait_head *head, struct swaiter *w);
 
+static inline bool swaitqueue_active(struct swait_head *h)
+{
+	return !list_empty(&h->list);
+}
+
 /*
  * Wakeup functions
  */
diff --git a/kernel/wait-simple.c b/kernel/wait-simple.c
index c35ec78..281ab7c 100644
--- a/kernel/wait-simple.c
+++ b/kernel/wait-simple.c
@@ -24,12 +24,6 @@ static inline void __swait_dequeue(struct swaiter *w)
 	list_del_init(&w->node);
 }
 
-/* Check whether a head has waiters enqueued */
-static inline bool swait_head_has_waiters(struct swait_head *h)
-{
-	return !list_empty(&h->list);
-}
-
 void __init_swait_head(struct swait_head *head, struct lock_class_key *key)
 {
 	raw_spin_lock_init(&head->lock);
@@ -108,7 +102,7 @@ __swait_wake(struct swait_head *head, unsigned int state, unsigned int num)
 	unsigned long flags;
 	int woken;
 
-	if (!swait_head_has_waiters(head))
+	if (!swaitqueue_active(head))
 		return 0;
 
 	raw_spin_lock_irqsave(&head->lock, flags);
-- 
1.7.9.5

