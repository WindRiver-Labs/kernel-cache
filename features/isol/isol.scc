# Isolation / NOHZ changes.  Target via feature merge granularity.
#
# Note: this file is meant to be read top down in terms of time progression,
# such that the most recent changes are at the bottom, and the earliest
# changes needing backport to 3.4 are at the top.
#
# Sorting order is mandated by the merge commmits that brought the changes
# to mainline.
#
# Dont forget that rcN~1000 is _older_ than rcN~500, since we count backwards
# from rcN, i.e. the rcN tag is equal to rcN~0.
# -------------------------------------------------------------------------

#--------------
# Cherry picks to sched/core to make easier the sched/cputime code reloc.
# We want the nohz accounting to be right too.

# v3.4-rc6-19-g556061b -- v3.5-rc1~140^2~5 
patch sched-nohz-Fix-rq-cpu_load-calculations.patch
# v3.4-8908-g5aaa0b7 -- v3.5-rc2~34^2~8
patch sched-nohz-Fix-rq-cpu_load-calculations-some-more.patch
# v3.6-rc4-55-g749c881 -- v3.6-rc6~15^2~2
patch sched-Add-missing-call-to-calc_load_exit_idle.patch

#--------------

# v3.7-rc1~193
# commit 0b981cb94bc63a2d0e5eccccdca75fe57643ffce
# Merge: 4cba333 fdf9c35
# Author: Linus Torvalds <torvalds@linux-foundation.org>
# Date:   Mon Oct 1 10:43:39 2012 -0700
# 
#     Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
#     
#     Pull scheduler changes from Ingo Molnar:
#      "Continued quest to clean up and enhance the cputime code by Frederic
#       Weisbecker, in preparation for future tickless kernel features.
#     
#       Other than that, smallish changes."
#     
#     Fix up trivial conflicts due to additions next to each other in arch/{x86/}Kconfig
#     
#  Don't take all commits; just cputime/vtime

# v3.6-rc1-324-gb952741 -- v3.7-rc1~193^2~19
patch cputime-Generalize-CONFIG_VIRT_CPU_ACCOUNTING.patch
# v3.6-rc1-325-g73fbec6 -- v3.7-rc1~193^2~18
patch sched-Move-cputime-code-to-its-own-file.patch
# v3.6-rc1-326-gbaa3604 -- v3.7-rc1~193^2~17
patch cputime-Consolidate-vtime-handling-on-context-switch.patch
# [...]
# v3.6-rc4-73-g5ed4f1d -- v3.7-rc1~193^2~10
patch sched-Fix-nohz_idle_balance.patch
# [...]
# v3.6-rc4-78-gbf9fae9 -- v3.7-rc1~193^2~5
patch cputime-Use-a-proper-subsystem-naming-for-vtime-rela.patch
# v3.6-rc4-79-ga7e1a9e -- v3.7-rc1~193^2~4
patch vtime-Consolidate-system-idle-context-detection.patch
# v3.6-rc4-80-g5bf412c -- v3.7-rc1~193^2~3
patch ia64-Consolidate-user-vtime-accounting.patch
# v3.6-rc4-81-g9dc16f64 -- v3.7-rc1~193^2~2
patch ia64-Reuse-system-and-user-vtime-accounting-function.patch
# v3.6-rc4-82-g391dc69 -- v3.7-rc1~193^2~1
patch cputime-Gather-time-stats-accounting-config-options-.patch
# v3.6-rc4-83-gfdf9c35 -- v3.7-rc1~193^2
patch cputime-Make-finegrained-irqtime-accounting-generall.patch

# -------------------------------------------------------------------------

# v3.7-rc1~35^2~16
# commit 924412f66fd9d21212e560a93792b0b607d46c6e
# Merge: e40468a 84bf1bc
# Author: Thomas Gleixner <tglx@linutronix.de>
# Date:   Mon Jun 11 20:11:29 2012 +0200
# 
#     Merge branch 'nohz-for-tip-2' of git://github.com/fweisbec/linux-dynticks into timers/core
# 

# v3.5-rc2-1-g19f5f73 -- v3.7-rc1~35^2~16^2~4
patch nohz-Separate-idle-sleeping-time-accounting-from-noh.patch
# v3.5-rc2-2-g2ac0d98 -- v3.7-rc1~35^2~16^2~3
patch nohz-Make-nohz-API-agnostic-against-idle-ticks-cputi.patch
# v3.5-rc2-3-gf5d411c -- v3.7-rc1~35^2~16^2~2
patch nohz-Rename-ts-idle_tick-to-ts-last_tick.patch
# v3.5-rc2-4-g5b39939 -- v3.7-rc1~35^2~16^2~1
patch nohz-Move-ts-idle_calls-incrementation-into-strict-i.patch
# v3.5-rc2-5-g84bf1bc -- v3.7-rc1~35^2~16^2
patch nohz-Move-next-idle-expiry-time-record-into-idle-log.patch

# -------------------------------------------------------------------------

# v3.7-rc1~36
# commit 0588f1f934791b79d0a1e9b327be9b6eb361d2b8
# Merge: 9d55ab7 301a5cb
# Author: Linus Torvalds <torvalds@linux-foundation.org>
# Date:   Fri Oct 12 22:13:05 2012 +0900
# 
#     Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
#     
#     Pull scheduler fixes from Ingo Molnar:
#      "A CPU hotplug related crash fix and a nohz accounting fixlet."
#     
# 
# We just take the one commit.
# v3.6-786-g2b17c54 -- v3.7-rc1~36^2~2
patch nohz-Fix-one-jiffy-count-too-far-in-idle-cputime.patch


# ---------------------------------------------------------------

# Thrree sched patches that make the latest RCU tip commits work as-is.
#
# v3.7-rc2-120-g9d85f21 --- v3.8-rc1~169^2~20
patch sched-Track-the-runnable-average-on-a-per-task-entit.patch
# v3.7-rc2-121-g18bf280 --- v3.8-rc1~169^2~19
patch sched-Maintain-per-rq-runnable-averages.patch
# v3.7-rc2-134-gf4e26b1 --- v3.8-rc1~169^2~6
patch sched-Introduce-temporary-FAIR_GROUP_SCHED-dependenc.patch

# ---------------------------------------------------------------

# v3.8-rc1~169^2~4
# commit 38ca9c927c7d3db61f57e3d3a9334958c3af6e9a
# Merge: e9c84cb 3e1df4f
# Author: Ingo Molnar <mingo@kernel.org>
# Date:   Tue Oct 30 08:33:01 2012 +0100
# 
#     Merge tag 'cputime-cleanups-for-mingo' of git://git.kernel.org/pub/scm/linux/kernel/git/frederic/linux-dynticks into sched/core
#     
#     Pull cputime cleanups and optimizations from Frederic Weisbecker:
#     
#      * Gather vtime headers that were a bit scattered around
#     
#      * Separate irqtime and vtime namespaces that were
#        colliding, resulting in useless calls to irqtime accounting.
#     
#      * Slightly optimize irq and guest vtime accounting.

# v3.7-rc2-136-gdcbf832 -- v3.8-rc1~169^2~4^2~4
patch vtime-Gather-vtime-declarations-to-their-own-header-.patch
# v3.7-rc2-137-g1111333 -- v3.8-rc1~169^2~4^2~3
patch vtime-Make-vtime_account_system-irqsafe.patch
# v3.7-rc2-138-gb080935 -- v3.8-rc1~169^2~4^2~2
patch kvm-Directly-account-vtime-to-system-on-guest-switch.patch
# v3.7-rc2-139-gfa5058f -- v3.8-rc1~169^2~4^2~1
patch cputime-Specialize-irq-vtime-hooks.patch
# v3.7-rc2-140-g3e1df4f -- v3.8-rc1~169^2~4^2
patch cputime-Separate-irqtime-accounting-from-generic-vti.patch

# -------------------------------------------------------
#  v3.8-rc1~169^2~2
# commit e783377e93d4043a11013ce6e9173db34998e653
# Merge: 222e82b fa09205
# Author: Ingo Molnar <mingo@kernel.org>
# Date:   Sat Dec 8 15:31:07 2012 +0100
# 
#     Merge tag 'cputime-adjustment-cleanups' of git://git.kernel.org/pub/scm/linux/kernel/git/frederic/linux-dynticks into sched/core
#     
#     Pull cputime cleanups from Frederic Weisbecker:
#     
#      * Improve naming and code location
#     
#      * Consolidate adjustment code
#     
#      * Comment the adjustement code

# v3.7-rc5-27-ga634f93 -- v3.8-rc1~169^2~2^2~3
patch cputime-Move-thread_group_cputime-to-sched-code.patch
# v3.7-rc5-28-ge80d0a1 -- v3.8-rc1~169^2~2^2~2
patch cputime-Rename-thread_group_times-to-thread_group_cp.patch
# v3.7-rc5-29-gd37f761 -- v3.8-rc1~169^2~2^2~1
patch cputime-Consolidate-cputime-adjustment-code.patch
# locally created fixup for compile fail introduced by above
patch fork-update-for-new-cputime-accounting-structures.patch
# v3.7-rc5-30-gfa09205 -- v3.8-rc1~169^2~2^2
patch cputime-Comment-cputime-s-adjusting-code.patch

# -------------------------------------------------------
# v3.8-rc1~169^2~1
# commit 38130ec08716ae2ece8060eca01607b58da7258c
# Merge: e783377 1b2852b
# Author: Ingo Molnar <mingo@kernel.org>
# Date:   Sat Dec 8 15:44:43 2012 +0100
# 
#     Merge tag 'sched-cputime-for-mingo' of git://git.kernel.org/pub/scm/linux/kernel/git/frederic/linux-dynticks into sched/core
#     
#     Pull more cputime cleanups from Frederic Weisbecker:
#     
#      * Get rid of underscores polluting the vtime namespace
#     
#      * Consolidate context switch and tick handling
#     
#      * Improve debuggability by detecting irq unsafe callers

# v3.7-rc2-142-gfd25b4c -- v3.8-rc1~169^2~1^2~4
patch vtime-Remove-the-underscore-prefix-invasion.patch
# v3.7-rc2-143-gbcebdf8 -- v3.8-rc1~169^2~1^2~3
patch vtime-Explicitly-account-pending-user-time-on-proces.patch
# v3.7-rc2-144-ge3942ba -- v3.8-rc1~169^2~1^2~2
patch vtime-Consolidate-a-bit-the-ctx-switch-code.patch
# v3.7-rc2-145-g1017769 -- v3.8-rc1~169^2~1^2~1
patch vtime-No-need-to-disable-irqs-on-vtime_account.patch
# v3.7-rc2-146-g1b2852b -- v3.8-rc1~169^2~1^2
patch vtime-Warn-if-irqs-aren-t-disabled-on-system-time-ac.patch


# -------------------------------------------------------
# v3.8-rc1~168^2~2
# commit 0acfd009be1f7eedb450dda1bec4c2a03d7c808b
# Merge: 6f0c058 94a5714
# Author: Ingo Molnar <mingo@kernel.org>
# Date:   Sun Oct 21 18:14:02 2012 +0200
# 
#     Merge branch 'nohz/core' of git://github.com/fweisbec/linux-dynticks into timers/core
#     
#     Pull uncontroversial cleanup/refactoring nohz patches from Frederic Weisbecker.
#     

# v3.7-rc1-1-g5bb9622 -- v3.8-rc1~168^2~2^2~2
patch tick-Consolidate-timekeeping-handling-code.patch
# v3.7-rc1-2-g9e8f559 -- v3.8-rc1~168^2~2^2~1
patch tick-Consolidate-tick-handling-for-high-and-low-res-.patch
# v3.7-rc1-3-g94a5714 -- v3.8-rc1~168^2~2^2
patch tick-Conditionally-build-nohz-specific-code-in-tick-.patch


# -------------------------------------------------------

#  v3.9-rc1~174
# commit b7133a9a103655cda254987a3c0975fd9d8c443f
# Merge: e84cf5d 36a5df8
# Author: Linus Torvalds <torvalds@linux-foundation.org>
# Date:   Tue Feb 19 17:47:58 2013 -0800
# 
#     Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
#     
#     Pull irq core changes from Ingo Molnar:
#      "The biggest changes are the IRQ-work and printk changes from Frederic
#       Weisbecker, which prepare the code for 'full dynticks' (the ability to
#       stop or slow down the periodic tick arbitrarily, not just in idle time
#       as today):
#     
#        - Don't stop tick with irq works pending.  This fix is generally
#          useful and concerns archs that can't raise self IPIs.
#     
#        - Flush irq works before CPU offlining.
#     
#        - Introduce "lazy" irq works that can wait for the next tick to be
#          executed, unless it's stopped.
#     
#        - Implement klogd wake up using irq work.  This removes the ad-hoc
#          printk_tick()/printk_needs_cpu() hooks and make it working even in
#          dynticks mode.
#     
#        - Cleanups and fixes."
#     
# 

# v3.7-rc3-79-ge716efd -- v3.9-rc1~174^2~6
# in stable --> patch genirq-Avoid-deadlock-in-spurious-handling.patch
# v3.7-rc4-1-gc8446b7 -- v3.9-rc1~174^2~4^2~2
patch irq_work-Fix-racy-IRQ_WORK_BUSY-flag-setting.patch
# v3.7-rc4-2-ge0bbe2d -- v3.9-rc1~174^2~4^2~1
patch irq_work-Fix-racy-check-on-work-pending-flag.patch
# v3.7-rc4-3-g6147a9d -- v3.9-rc1~174^2~4^2
patch irq_work-Remove-CONFIG_HAVE_IRQ_WORK.patch
# v3.8-rc4-7-gc02cf5f -- v3.9-rc1~174^2~3
patch irq_work-Remove-return-value-from-the-irq_work_queue.patch
# v3.8-rc4-8-gf7c819c -- v3.9-rc1~174^2~2
patch arch-Kconfig-Remove-references-to-IRQ_PER_CPU.patch
# v3.7-rc4-4-g33a5f62 -- v3.9-rc1~174^2~1^2~5
patch nohz-Add-API-to-check-tick-state.patch
# v3.7-rc4-5-g00b4295 -- v3.9-rc1~174^2~1^2~4
patch irq_work-Don-t-stop-the-tick-with-pending-works.patch
# v3.7-rc4-6-gc0e980a -- v3.9-rc1~174^2~1^2~3
patch irq_work-Flush-work-on-CPU_DYING.patch
# v3.7-rc4-7-g8aa2acc -- v3.9-rc1~174^2~1^2~2
patch irq_work-Warn-if-there-s-still-work-on-cpu_down.patch
# v3.7-rc4-8-gbc6679a -- v3.9-rc1~174^2~1^2~1
patch irq_work-Make-self-IPIs-optable.patch
# v3.7-rc4-9-g74876a9 -- v3.9-rc1~174^2~1^2
patch printk-Wake-up-klogd-using-irq_work.patch
# v3.8-rc4-16-g36a5df8 -- v3.9-rc1~174^2
patch genirq-Export-enable-disable_percpu_irq.patch

# -------------------------------------------------------------------------------------

# v3.9-rc1~172^2 - the big sched/core merge.
# Note that cputime commits make it to mainline via a merge
# embedded in this merge.
# 
# commit d652e1eb8e7b739fccbfb503a3da3e9f640fbf3d
# Merge: 8f55cea 77852fe
# Author: Linus Torvalds <torvalds@linux-foundation.org>
# Date:   Tue Feb 19 18:19:48 2013 -0800
# 
#     Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
#     
#     Pull scheduler changes from Ingo Molnar:
#      "Main changes:
#     
#        - scheduler side full-dynticks (user-space execution is undisturbed
#          and receives no timer IRQs) preparation changes that convert the
#          cputime accounting code to be full-dynticks ready, from Frederic
#          Weisbecker.
#     
#        - Initial sched.h split-up changes, by Clark Williams
#     
#        - select_idle_sibling() performance improvement by Mike Galbraith:
#     
#             " 1 tbench pair (worst case) in a 10 core + SMT package:
#     
#               pre   15.22 MB/sec 1 procs
#               post 252.01 MB/sec 1 procs "
#     
#       - sched_rr_get_interval() ABI fix/change.  We think this detail is not
#         used by apps (so it's not an ABI in practice), but lets keep it
#         under observation.
#     
#       - misc RT scheduling cleanups, optimizations"
#     

# Expect to need to fix up conflicts in kernel/context_tracking.c
# see the merge commit itself (v3.9-rc1~172) for hints.

# v3.9-rc1~172^2~16
patch sched-Fix-the-broken-sched_rr_get_interval.patch
# v3.9-rc1~172^2~15
patch sched-rt-Add-reschedule-check-to-switched_from_rt.patch
# v3.9-rc1~172^2~14
patch sched-fair-Set-se-vruntime-directly-in-place_entity.patch
# v3.9-rc1~172^2~13
patch sched-rt-Avoid-updating-RT-entry-timeout-twice-withi.patch
# v3.9-rc1~172^2~12
patch cputime-Avoid-multiplication-overflow-on-utime-scali.patch
# v3.9-rc1~172^2~11
patch sched-rt-Do-not-account-zero-delta_exec-in-update_cu.patch
# v3.9-rc1~172^2~10
patch sched-rt-Further-simplify-pick_rt_task.patch
# v3.9-rc1~172^2~9
patch sched-Fix-select_idle_sibling-bouncing-cow-syndrome.patch
# v3.9-rc1~172^2~8
patch sched-Fix-signedness-bug-in-yield_to.patch

  # v3.9-rc1~172^2~7 is merge commit b2c77a57e4a0a7877e357dead7ee8acc19944f3e
  #
  # Merge: c3c1864 6a61671
  #
  # $ git describe `git merge-base c3c1864 6a61671`
  # v3.8-rc4
  #
  # $ git rev-list --no-merges ^v3.8-rc4 6a61671
  # 6a61671bb2f3a1bd12cd17b8fca811a624782632
  # c11f11fcbdb5be790c565aed46411486a7586afc
  # 6fac4829ce0ef9b7f24369086ce5f0e9f38d37bc
  # 3f4724ea85b7d9055a9976fa8f30b471bdfbca93
  # abf917cd91cbb73952758f9741e2fa65002a48ee
  # ae8dda5c473bf1a85913942adcaac449e5754bf3
  # 39613766e8826756a4bf8c74274eb971c3c1d929
  # 95a79fd458b85132c25e351d45037ec9643312b2
  #
  # 8 commits that are brought in by this merge:
  #
  # Author: Ingo Molnar <mingo@kernel.org>
  # Date:   Tue Feb 5 13:10:33 2013 +0100
  # 
  #     Merge tag 'full-dynticks-cputime-for-mingo' of git://git.kernel.org/pub/scm/linux/kernel/git/frederic/linux-dynticks into sched/core
  #     
  #     Pull full-dynticks (user-space execution is undisturbed and
  #     receives no timer IRQs) preparation changes that convert the
  #     cputime accounting code to be full-dynticks ready,
  #     from Frederic Weisbecker:
  #     
  #      "This implements the cputime accounting on full dynticks CPUs.
  #     
  #       Typical cputime stats infrastructure relies on the timer tick and
  #       its periodic polling on the CPU to account the amount of time
  #       spent by the CPUs and the tasks per high level domains such as
  #       userspace, kernelspace, guest, ...
  #     
  #       Now we are preparing to implement full dynticks capability on
  #       Linux for Real Time and HPC users who want full CPU isolation.
  #       This feature requires a cputime accounting that doesn't depend
  #       on the timer tick.
  #     
  #       To implement it, this new cputime infrastructure plugs into
  #       kernel/user/guest boundaries to take snapshots of cputime and
  #       flush these to the stats when needed. This performs pretty
  #       much like CONFIG_VIRT_CPU_ACCOUNTING except that context location
  #       and cputime snaphots are synchronized between write and read
  #       side such that the latter can safely retrieve the pending tickless
  #       cputime of a task and add it to its latest cputime snapshot to
  #       return the correct result to the user."
  #     
  #     Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
  #     Signed-off-by: Ingo Molnar <mingo@kernel.org>
  #

# v3.9-rc1~172^2~7^2~7
patch context_tracking-Export-context-state-for-generic-vt.patch
# v3.9-rc1~172^2~7^2~6
patch cputime-Librarize-per-nsecs-resolution-cputime-defin.patch
# v3.9-rc1~172^2~7^2~5
patch cputime-Move-default-nsecs_to_cputime-to-jiffies-bas.patch
# v3.9-rc1~172^2~7^2~4
patch cputime-Generic-on-demand-virtual-cputime-accounting.patch

# Above introduces nasty warnings, so we've relocated the warning
# fix to here from about 20 lines below.
# v3.9-rc1~62^2~1
patch cputime-Constify-timeval_to_cputime-timeval-argument.patch

# v3.9-rc1~172^2~7^2~3
patch cputime-Allow-dynamic-switch-between-tick-virtual-ba.patch
# v3.9-rc1~172^2~7^2~2
patch cputime-Use-accessors-to-read-task-cputime-stats.patch
# v3.9-rc1~172^2~7^2~1
patch kvm-Prepare-to-add-generic-guest-entry-exit-callback.patch
# v3.9-rc1~172^2~7^2
patch cputime-Safely-read-cputime-of-full-dynticks-CPUs.patch

# above causes compile failure because RT removes read_seqretry_irqrestore
# in seqlock-remove-unused-functions.patch -- however it is a moot
# point 6 patches down, it was "fixed" by not using the irqsave
# variants.  So we relocate it to limit the bisection fail window.
#
# v3.9-rc1~172^2~1
patch cputime-Remove-irqsave-from-seqlock-readers.patch

# back to sched/core content linearly stacked w/o merges.
# v3.9-rc1~172^2~6
patch sched-Move-sched.h-sysctl-bits-into-separate-header.patch
# v3.9-rc1~172^2~5
patch sched-rt-Add-a-tuning-knob-to-allow-changing-SCHED_R.patch
# v3.9-rc1~172^2~4
patch sched-rt-Move-rt-specific-bits-into-new-header-file.patch
# fallout from the above move
patch tracers-compilation-fix-for-latency_hist.patch
# v3.9-rc1~172^2~3
patch cputime-Restore-CPU_ACCOUNTING-config-defaults-for-P.patch
# v3.9-rc1~172^2~2
patch sched-powerpc-Fix-sched.h-split-up-build-failure.patch
# v3.9-rc1~172^2~1
# relocated 6 patches up --> patch cputime-Remove-irqsave-from-seqlock-readers.patch
# v3.9-rc1~172^2
patch sched-rt-Add-linux-sched-rt.h-header-to-linux-init_t.patch

# -------------------------------------------------------------------------------------

# Merge is v3.9-rc1~62 -- we take two cputime commits from ^2
# commit dcad0fceae528e8007610308bad7e5a3370e5c39
# Merge: f8ef15d 7f6575f
# Author: Linus Torvalds <torvalds@linux-foundation.org>
# Date:   Tue Feb 26 19:42:08 2013 -0800
# 
#     Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
#     
#     Pull scheduler fixes from Ingo Molnar.
#     
#     * 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
#       cputime: Use local_clock() for full dynticks cputime accounting
#       cputime: Constify timeval_to_cputime(timeval) argument
#       sched: Move RR_TIMESLICE from sysctl.h to rt.h
#       sched: Fix /proc/sched_debug failure on very very large systems
#       sched: Fix /proc/sched_stat failure on very very large systems
#       sched/core: Remove the obsolete and unused nr_uninterruptible() function
# 
# v3.9-rc1~62^2~1
# relocated upwards --> patch cputime-Constify-timeval_to_cputime-timeval-argument.patch
# v3.9-rc1~62^2
patch cputime-Use-local_clock-for-full-dynticks-cputime-ac.patch


# -------------------------------------------------------

#  v3.9-rc2~25
# commit e3b59518c10e08eeb06215abf06f50e8f83b51dc
# Merge: 6516ab6 4cd5d11
# Author: Linus Torvalds <torvalds@linux-foundation.org>
# Date:   Tue Mar 5 18:10:04 2013 -0800
# 
#     Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
#     
#     Pull irq fixes and cleanups from Thomas Gleixner:
#      "Commit e5ab012c3271 ("nohz: Make tick_nohz_irq_exit() irq safe") is
#       the first commit in the series and the minimal necessary bugfix, which
#       needs to go back into stable.
#     
#       The remanining commits enforce irq disabling in irq_exit(), sanitize
#       the hardirq/softirq preempt count transition and remove a bunch of no
#       longer necessary conditionals."
#     
#     I personally love getting rid of the very subtle and confusing
#     IRQ_EXIT_OFFSET thing.  Even apart from the whole "more lines removed
#     than added" thing.
#     
#     * 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
#       irq: Don't re-enable interrupts at the end of irq_exit
#       irq: Remove IRQ_EXIT_OFFSET workaround
#       Revert "nohz: Make tick_nohz_irq_exit() irq safe"
#       irq: Sanitize invoke_softirq
#       irq: Ensure irq_exit() code runs with interrupts disabled
#       nohz: Make tick_nohz_irq_exit() irq safe
# 
# linux$git merge-base 6516ab6 4cd5d11
# 1a13c0b181f218bf56a1a6b8edbaf2876b22314b
# linux$
# linux$git rev-list --no-merges ^1a13c0b181f218bf56a1a6b8edbaf2876b22314b 4cd5d11
# 4cd5d1115c2f752ca94a0eb461b36d88fb37ed1e
# 4d4c4e24cf48400a24d33feffc7cca4f4e8cabe1
# af7bdbafe3812af406ce07631effd2b96aae2dba
# facd8b80c67a3cf64a467c4a2ac5fb31f2e6745b
# 74eed0163d0def3fce27228d9ccf3d36e207b286
# e5ab012c3271990e8457055c25cafddc1ae8aa6b

# Note: We drop a patch and its matching revert.

# v3.9-rc2~25^2~5
#patch nohz-Make-tick_nohz_irq_exit-irq-safe.patch
# v3.9-rc2~25^2~4
patch irq-Ensure-irq_exit-code-runs-with-interrupts-disabl.patch
# v3.9-rc2~25^2~3
patch irq-Sanitize-invoke_softirq.patch
# v3.9-rc2~25^2~2
#patch Revert-nohz-Make-tick_nohz_irq_exit-irq-safe.patch
# v3.9-rc2~25^2~1
patch irq-Remove-IRQ_EXIT_OFFSET-workaround.patch
# v3.9-rc2~25^2
patch irq-Don-t-re-enable-interrupts-at-the-end-of-irq_exi.patch


# -------------------------------------------------------------------------------------

# v3.9-rc4~9
# commit 14629ed31467741d12f342c95621900646173519
# Merge: b9cb3bf 38d78e5
# Author: Linus Torvalds <torvalds@linux-foundation.org>
# Date:   Fri Mar 22 16:41:44 2013 -0700
# 
#     Merge branch 'akpm' (fixes from Andrew)
# 
#       printk: Provide a wake_up_klogd() off-case
#       irq_work.h: fix warning when CONFIG_IRQ_WORK=n
# 
# v3.9-rc4~9^2~11
patch irq_work.h-fix-warning-when-CONFIG_IRQ_WORK-n.patch
# v3.9-rc4~9^2~10
patch printk-Provide-a-wake_up_klogd-off-case.patch

# mainline tracer patches of interest to nohz debugging.
# v3.8-rc1~60^2~72^2~1
patch tracing-filter-Add-missing-initialization.patch
# v3.9-rc1~173^2~18^2~16
patch tracing-fgraph-Add-max_graph_depth-to-limit-function.patch

# kvm stuff needed to assist in cherry picking nohz stuff below
# v3.7-rc3~39^2 --- v3.6-6673-gc5e015d
patch KVM-guest-exit-idleness-when-handling-KVM_PV_REASON_.patch
# v3.8-rc4~41^2~1^2~1 --- v3.7-7345-g9b132fb
patch Add-rcu-user-eqs-exception-hooks-for-async-page-faul.patch

# mainline commit to assist with nohz content.
# v3.7-rc1~193^2~7 --- v3.6-rc4-76-gc1cc017
patch sched-nohz-Clean-up-select_nohz_load_balancer.patch

# mark info message about pending softirq as non-errors.
# v3.9-rc2-13-gcfea7d7
patch tick-Change-log-level-of-NOHZ-local_softirq_pending-.patch

#
# Pending commits from tip.git; all mainlined now.
#
# Note that the tag "timers-nohz-Apr24-g447a34a2" is somewhat artificial,
# as I've tagged Apr24th's timers/nohz branch commit 447a34a2 so that
# we could use "git describe --contains ..." and get output.
#

#
# new RCU content
#
# v3.10-rc1~175^2^2^2~1 --- v3.9-rc2-6-g6231069
patch rcu-Add-softirq-stall-indications-to-stall-warning-m.patch
# v3.10-rc1~175^2^2^2 --- v3.9-rc2-7-g81e5949
patch rcu-Tone-down-debugging-during-boot-up-and-shutdown.patch
# v3.10-rc1~175^2^2^3~14 --- v3.9-rc2-1-g34ed6246
patch rcu-Remove-restrictions-on-no-CBs-CPUs.patch
# v3.10-rc1~175^2^2^3~13 --- v3.9-rc2-2-g911af50
patch rcu-Provide-compile-time-control-for-no-CBs-CPUs.patch
# v3.10-rc1~175^2^2^3~12 --- v3.9-rc2-3-gdae6e64
patch rcu-Introduce-proper-blocking-to-no-CBs-kthreads-GP-.patch

# above causes breakage on RT baseline with its additional
# waitqueue usage, so here we convert RCU to use simple wait
patch rcu-change-nocb-wait-queues-to-be-simple-wait-queues.patch
patch rcu-convert-nocb_wq-to-use-simple-waitqueues.patch
patch rcu-convert-rcu_state-gp_wq-into-a-simple-wait-queue.patch

# v3.10-rc1~175^2^2^3~11 --- v3.9-rc2-4-g21e7a60
patch rcu-Add-event-tracing-for-no-CBs-CPUs-callback-regis.patch
# v3.10-rc1~175^2^2^3~10 --- v3.9-rc2-5-g09c7b89
patch rcu-Add-event-tracing-for-no-CBs-CPUs-grace-periods.patch

# revert our earlier instance of kthread naming patch so we
# can take the one destined for 3.10
patch Revert-rcu-give-offload-threads-for-rcu_nocbs-more-c.patch

# v3.10-rc1~175^2^2^3~9 --- v3.9-rc2-6-ga488985
patch rcu-Distinguish-rcuo-kthreads-by-RCU-flavor.patch
# v3.10-rc1~175^2^2^3~8 --- v3.9-rc2-7-g5e44ce3
patch rcu-Export-RCU_FAST_NO_HZ-parameters-to-sysfs.patch
# v3.10-rc1~175^2^2^3~7 --- v3.9-rc2-8-gb11cc57
patch rcu-Accelerate-RCU-callbacks-at-grace-period-end.patch
# v3.10-rc1~175^2^2^3~6 --- v3.9-rc2-9-gc0f4dfd
patch rcu-Make-RCU_FAST_NO_HZ-take-advantage-of-numbered-c.patch
# v3.10-rc1~175^2^2^3~5 --- v3.9-rc2-10-gb92db6c
patch rcu-Rearrange-locking-in-rcu_start_gp.patch
# v3.10-rc1~175^2^2^3~4 --- v3.9-rc2-11-gbd9f068
patch rcu-Repurpose-no-CBs-event-tracing-to-future-GP-even.patch
# v3.10-rc1~175^2^2^3~3 --- v3.9-rc2-12-gb846208
patch rcu-Push-lock-release-to-rcu_start_gp-s-callers.patch
# v3.10-rc1~175^2^2^3~2 --- v3.9-rc2-13-g8b425aa
patch rcu-Rename-n_nocb_gp_requests-to-need_future_gp.patch
# v3.10-rc1~175^2^2^3~1 --- v3.9-rc2-14-g0446be4
patch rcu-Abstract-rcu_start_future_gp-from-rcu_nocb_wait_.patch
# v3.10-rc1~175^2^2^3 --- v3.9-rc2-15-g910ee45
patch rcu-Make-rcu_accelerate_cbs-note-need-for-future-gra.patch

# From lkml ; will eventually come in via rcu or tip tree.
patch kthread-Document-ways-of-reducing-OS-jitter-due-to-p.patch

# stuff from merge 4e3da46797f8e4d8217d2e3d
# v3.10-rc1~89^2~30^2~4 --- v3.9-rc1-1-g56dd947
patch context_tracking-Move-exception-handling-to-generic-.patch
# v3.10-rc1~89^2~30^2~3 --- v3.9-rc1-2-g6c1e025
patch context_tracking-Restore-correct-previous-context-st.patch
# v3.10-rc1~89^2~30^2~2 --- v3.9-rc1-3-gb22366c
patch context_tracking-Restore-preempted-context-state-aft.patch
# v3.10-rc1~89^2~30^2~1 --- v3.9-rc1-4-g9fbc42e
patch cputime-Dynamically-scale-cputime-for-full-dynticks-.patch
# v3.10-rc1~89^2~30^2 --- v3.9-rc1-5-g8b43876
patch context_tracking-Enable-probes-by-default-for-selfte.patch

# stuff from merge commit e75c8b475e4b1da6bf5
# v3.10-rc1~89^2~26^2~1 --- v3.9-rc1-18-gf792685
patch math64-New-div64_u64_rem-helper.patch
# v3.10-rc1~89^2~26^2 --- v3.9-rc1-19-gd9a3c98
patch sched-Lower-chances-of-cputime-scaling-overflow.patch

# v3.10-rc1~89^2~25 --- v3.9-rc1-22-ga8d7ad5
patch sched-tracing-Allow-tracing-the-preemption-decision-.patch
# v3.10-rc1~89^2~24 --- v3.9-rc1-23-ga831881
patch nohz-Basic-full-dynticks-interface.patch
# v3.10-rc1~89^2~23 --- v3.9-rc1-24-ga382bf9
patch nohz-Assign-timekeeping-duty-to-a-CPU-outside-the-fu.patch
# v3.10-rc1~89^2~22 --- v3.9-rc1-25-g1c20091
patch nohz-Wake-up-full-dynticks-CPUs-when-a-timer-gets-en.patch
# v3.10-rc1~89^2~21 --- v3.9-rc1-26-gab71d36
patch nohz-Unhide-full-dynticks-feature-from-its-dependenc.patch

# v3.10-rc1~89^2~20 --- v3.9-rc1-27-g3451d02
patch nohz-Rename-CONFIG_NO_HZ-to-CONFIG_NO_HZ_COMMON.patch
# v3.10-rc1~89^2~19 --- v3.9-rc1-28-g3ca277e
patch nohz-Pack-nohz-Kconfig-option-in-a-menu-of-choices.patch
# v3.10-rc1~89^2~18 --- v3.9-rc1-29-g1034fc2
patch nohz-Print-final-full-dynticks-CPUs-range-on-boot.patch
# v3.10-rc1~89^2~17 --- v3.9-rc1-30-g0644ca5
patch nohz-Fix-old-dynticks-idle-Kconfig-backward-compatib.patch
# v3.10-rc1~89^2~16 --- v3.9-rc1-31-gc5bfece
patch nohz-Switch-from-extended-nohz-to-full-nohz-based-na.patch
# v3.10-rc1~89^2~15 --- v3.9-rc1-32-g5b533f4
patch nohz-Align-periodic-tick-Kconfig-with-other-choices-.patch
# v3.10-rc1~89^2~14 --- v3.9-rc1-33-gfae30dd
patch nohz-Improve-a-bit-the-full-dynticks-Kconfig-documen.patch
# v3.10-rc1~89^2~13 --- v3.9-rc1-34-g65d798f
patch rcu-Kick-adaptive-ticks-CPUs-that-are-holding-up-RCU.patch

# stuff from merge commit 2727872df
# v3.10-rc1~89^2~12^2~2 --- v3.9-rc1-35-g0453b43
patch nohz-Force-boot-CPU-outside-full-dynticks-range.patch
# v3.10-rc1~89^2~12^2~1 --- v3.9-rc1-36-gd1e43fa
patch nohz-Ensure-full-dynticks-CPUs-are-RCU-nocbs.patch
# v3.10-rc1~89^2~12^2 --- v3.9-rc1-37-gf98823a
patch nohz-New-option-to-default-all-CPUs-in-full-dynticks.patch

# stuff from merge commit a166fcf04d848
# v3.10-rc1~89^2~11^2~2 --- v3.9-rc1-35-g76c24fb
patch nohz-New-APIs-to-re-evaluate-the-tick-on-full-dyntic.patch
# v3.10-rc1~89^2~11^2~1 --- v3.9-rc1-36-ga857216
patch posix_timers-Kick-full-dynticks-CPUs-when-a-posix-cp.patch
# v3.10-rc1~89^2~11^2 --- v3.9-rc1-37-g555347f
patch posix_timers-New-API-to-prevent-from-stopping-the-ti.patch

# stuff from merge commit bf968be3
# linux$git show v3.10-rc1~89^2~10
# commit bf967be396d0c6a52668921e7223856349d04b5e
# Merge: a166fcf 67826ea
# Author: Ingo Molnar <mingo@kernel.org>
# Date:   Wed Apr 24 09:27:53 2013 +0200
#
#     Merge branch 'timers/nohz' of git://git.kernel.org/pub/scm/linux/kernel/git/frederic/linux-dynticks into timers/nohz
#
#     Pull nohz-full enabling patches from Frederic Weisbecker:
#
#       " This handles perf and CPUs that get more than one task and fix posix cpu timers
#         handling.
#
#         This can finally stop the tick."
#
#     Signed-off-by: Ingo Molnar <mingo@kernel.org>

# v3.10-rc1~89^2~10^2~9 --- v3.9-rc1-43-g6ac2917
patch posix_timers-Fix-pre-condition-to-stop-the-tick-on-f.patch
# v3.10-rc1~89^2~10^2~8 --- v3.9-rc1-44-g12351ef
patch perf-Kick-full-dynticks-CPU-if-events-rotation-is-ne.patch
# v3.10-rc1~89^2~10^2~7 --- v3.9-rc1-45-g026249e
patch perf-New-helper-to-prevent-full-dynticks-CPUs-from-s.patch
# v3.10-rc1~89^2~10^2~6 --- v3.9-rc1-46-g9f3660c
patch sched-Kick-full-dynticks-CPU-that-have-more-than-one.patch
# v3.10-rc1~89^2~10^2~5 --- v3.9-rc1-47-gce831b3
patch sched-New-helper-to-prevent-from-stopping-the-tick-i.patch
# v3.10-rc1~89^2~10^2~4 --- v3.9-rc1-48-gff442c5
patch nohz-Re-evaluate-the-tick-from-the-scheduler-IPI.patch
# v3.10-rc1~89^2~10^2~3 --- v3.9-rc1-49-g9014c45
patch nohz-Implement-full-dynticks-kick.patch
# v3.10-rc1~89^2~10^2~2 --- v3.9-rc1-50-g5811d99
patch nohz-Prepare-to-stop-the-tick-on-irq-exit.patch
# v3.10-rc1~89^2~10^2~1 --- v3.9-rc1-51-g99e5ada
patch nohz-Re-evaluate-the-tick-for-the-new-task-after-a-c.patch
# v3.10-rc1~89^2~10^2 --- v3.9-rc1-52-g67826ea
patch nohz-Disable-the-tick-when-irq-resume-in-full-dyntic.patch

# stuff from merge commit 447a34a2b
# v3.10-rc1~89^2~9^2~1 --- v3.9-rc1-53-g0637e02
patch nohz-Select-wide-RCU-nocb-for-full-dynticks.patch
# v3.10-rc1~89^2~9^2 --- v3.9-rc1-54-gcb41a29
patch nohz-Add-basic-tracing.patch

# v3.10-rc1~89^2~8 --- v3.9-rc1-57-g2c82d1be
patch nohz-Fix-unavailable-tick_stop-tracepoint-in-dyntick.patch
# v3.10-rc1~89^2~7 --- v3.9-rc1-58-g65e709d
patch nohz-Remove-full-dynticks-superfluous-dependency-on-.patch
# v3.10-rc1~89^2~6 --- v3.9-rc1-59-g47aa8b6
patch nohz-Reduce-overhead-under-high-freq-idling-patterns.patch
# v3.10-rc1~89^2~5^2~1 --- v3.9-rc1-59-gc58b0df
patch nohz-Select-VIRT_CPU_ACCOUNTING_GEN-from-full-dyntic.patch
# v3.10-rc1~89^2~5^2 --- v3.9-rc1-60-g8c23b80
patch cputime_nsecs-use-math64.h-for-nsec-resolution-conve.patch
# v3.10-rc1~89^2~4 --- v3.9-rc1-63-g6296ace
patch nohz-Protect-smp_processor_id-in-tick_nohz_task_swit.patch

#
# Yes, normally v3.10-rc1~111 is older than v3.10-rc1~89 (and
# it is chronologically, if you look at the merges, but we also
# have the fact that v3.10-rc1~111^2~3 is a _fix_ to an error in
# patch v3.10-rc1~89^2~26^2
#
# v3.10-rc1~111^2~11 --- v3.9-rc1-40-g642dbc3
patch sched-Fix-wrong-rq-s-runnable_avg-update-with-rt-tas.patch

# v3.10-rc1~111^2~3 --- v3.9-rc1-48-g55eaa7c
patch sched-Avoid-cputime-scaling-overflow.patch
# v3.10-rc1~111^2~2 --- v3.9-rc1-49-g772c808
patch sched-Do-not-account-bogus-utime.patch
# v3.10-rc1~111^2~1 --- v3.9-rc1-50-g68aa8ef
patch sched-Avoid-prev-stime-underflow.patch
# v3.10-rc1~111^2 --- v3.9-rc1-51-gf300213
patch Revert-math64-New-div64_u64_rem-helper.patch

# v3.10-rc1~89^2~1 --- v3.9-3451-g73c3082
patch rcu-Fix-full-dynticks-dependency-on-wide-RCU-nocb-mo.patch

# The one tick per sec patch needs v3.10-rc1~111^2~11 present 1st.
# v3.10-rc1~89^2 --- v3.9-3452-g265f22a
patch sched-Keep-at-least-1-tick-per-second-for-active-dyn.patch

# not mainline, just cleanups created internally
patch softirq-delete-softirq_check_pending_idle-function.patch
patch nohz-print-out-actual-name-of-softirq-pending.patch
patch nohz-add-cpu-number-to-softirq-pending-message.patch

# fixes needed when nohz backports are run in RT context
patch cputime-convert-vtime-seqlock-to-raw-spinlock.patch
patch cputime-take-irq-lock-in-task_gtime-and-fetch_task_c.patch

# additional, more recent nohz stuff
patch tick-Remove-useless-timekeeping-duty-attribution-to-.patch
patch nohz-Remove-obsolete-check-for-full-dynticks-CPUs-to.patch
patch kvm-Move-guest-entry-exit-APIs-to-context_tracking.patch
patch nohz-Fix-notifier-return-val-that-enforce-timekeepin.patch
patch nohz-Fix-notifier-return-val-that-enforce-timekeepin.patch
patch nohz-Warn-if-the-machine-can-not-perform-nohz_full.patch
patch nohz-Do-not-warn-about-unstable-tsc-unless-user-uses.patch
patch nohz-fix-compile-warning-in-tick_nohz_init.patch
patch watchdog-Boot-disable-by-default-on-full-dynticks.patch
patch vtime-Use-consistent-clocks-among-nohz-accounting.patch
patch tracing-context-tracking-Add-preempt_schedule_contex.patch
