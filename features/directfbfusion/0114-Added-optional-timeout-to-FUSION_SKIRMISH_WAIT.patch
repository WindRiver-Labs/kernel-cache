From b7265d40c0dbb734587034411dff171471156f3e Mon Sep 17 00:00:00 2001
From: Denis Oliver Kropp <dok@shizo.zion.home>
Date: Fri, 1 Jun 2007 09:54:18 +0200
Subject: [PATCH] Added optional timeout to FUSION_SKIRMISH_WAIT.

---
 drivers/char/fusion/fusiondev.c |   13 +++++++------
 drivers/char/fusion/skirmish.c  |   31 ++++++++++++++++++++++++++-----
 drivers/char/fusion/skirmish.h  |    7 ++++---
 include/linux/fusion.h          |   12 ++++++++++--
 4 files changed, 47 insertions(+), 16 deletions(-)

diff --git a/drivers/char/fusion/fusiondev.c b/drivers/char/fusion/fusiondev.c
index 3a7ab54..aa4d409 100644
--- a/drivers/char/fusion/fusiondev.c
+++ b/drivers/char/fusion/fusiondev.c
@@ -713,10 +713,11 @@ static int
 skirmish_ioctl (FusionDev *dev, Fusionee *fusionee,
                 unsigned int cmd, unsigned long arg)
 {
-     int      id;
-     int      ret;
-     int      lock_count;
-     FusionID fusion_id = fusionee_id( fusionee );
+     int                id;
+     int                ret;
+     int                lock_count;
+     FusionSkirmishWait wait;
+     FusionID           fusion_id = fusionee_id( fusionee );
 
      switch (_IOC_NR(cmd)) {
           case _IOC_NR(FUSION_SKIRMISH_NEW):
@@ -765,10 +766,10 @@ skirmish_ioctl (FusionDev *dev, Fusionee *fusionee,
                return ret;
 
           case _IOC_NR(FUSION_SKIRMISH_WAIT):
-               if (get_user (id, (int*) arg))
+               if (copy_from_user (&wait, (FusionSkirmishWait*) arg, sizeof(wait)))
                     return -EFAULT;
 
-               return fusion_skirmish_wait_ (dev, id, fusion_id);
+               return fusion_skirmish_wait_ (dev, wait.id, fusion_id, wait.timeout);
 
           case _IOC_NR(FUSION_SKIRMISH_NOTIFY):
                if (get_user (id, (int*) arg))
diff --git a/drivers/char/fusion/skirmish.c b/drivers/char/fusion/skirmish.c
index edd8e13..b4c86b5 100644
--- a/drivers/char/fusion/skirmish.c
+++ b/drivers/char/fusion/skirmish.c
@@ -45,6 +45,8 @@ struct __FUSION_FusionSkirmish {
 
      unsigned int notify_count;
 
+     unsigned long  lock_time;
+
 #ifdef FUSION_DEBUG_SKIRMISH_DEADLOCK
      int          pre_acquis[MAX_PRE_ACQUISITIONS];
 
@@ -220,6 +222,7 @@ fusion_skirmish_prevail (FusionDev *dev, int id, int fusion_id)
      skirmish->lock_fid   = fusion_id;
      skirmish->lock_pid   = current->pid;
      skirmish->lock_count = 1;
+     skirmish->lock_time  = jiffies;
 
      skirmish->lock_total++;
 
@@ -294,6 +297,7 @@ fusion_skirmish_dismiss (FusionDev *dev, int id, int fusion_id)
 {
      int             ret;
      FusionSkirmish *skirmish;
+     unsigned long   lock_jiffies = 0;
 
      ret = fusion_skirmish_lock( &dev->skirmish, id, false, &skirmish );
      if (ret)
@@ -310,11 +314,17 @@ fusion_skirmish_dismiss (FusionDev *dev, int id, int fusion_id)
           skirmish->lock_fid = 0;
           skirmish->lock_pid = 0;
 
+          lock_jiffies = jiffies - skirmish->lock_time;
+
           fusion_skirmish_notify( skirmish, true );
      }
 
      fusion_skirmish_unlock( skirmish );
 
+     /* Locked > 20 ms ? */
+     if (lock_jiffies > HZ/50 && current->policy == SCHED_NORMAL)
+          yield();
+
      return 0;
 }
 
@@ -346,7 +356,7 @@ fusion_skirmish_destroy (FusionDev *dev, int id)
 }
 
 int
-fusion_skirmish_wait_ (FusionDev *dev, int id, int fusion_id)
+fusion_skirmish_wait_ (FusionDev *dev, int id, int fusion_id, unsigned int timeout)
 {
      int             ret;
      int             lock_count;
@@ -372,10 +382,21 @@ fusion_skirmish_wait_ (FusionDev *dev, int id, int fusion_id)
 
      fusion_skirmish_notify( skirmish, true );
 
-     while (notify_count == skirmish->notify_count) {
-          ret = fusion_skirmish_wait( skirmish, NULL );
-          if (ret)
-               return ret;
+     if (timeout) {
+          long timeout_jiffies = timeout * HZ / 1000;
+
+          while (notify_count == skirmish->notify_count) {
+               ret = fusion_skirmish_wait( skirmish, &timeout_jiffies );
+               if (ret)
+                    return ret;
+          }
+     }
+     else {
+          while (notify_count == skirmish->notify_count) {
+               ret = fusion_skirmish_wait( skirmish, NULL );
+               if (ret)
+                    return ret;
+          }
      }
 
      while (skirmish->lock_pid) {
diff --git a/drivers/char/fusion/skirmish.h b/drivers/char/fusion/skirmish.h
index 318fec4..9f89e44 100644
--- a/drivers/char/fusion/skirmish.h
+++ b/drivers/char/fusion/skirmish.h
@@ -50,9 +50,10 @@ int fusion_skirmish_dismiss (FusionDev *dev,
 int fusion_skirmish_destroy (FusionDev *dev,
                              int        id);
 
-int fusion_skirmish_wait_   (FusionDev *dev,
-                             int        id,
-                             int        fusion_id);
+int fusion_skirmish_wait_   (FusionDev   *dev,
+                             int          id,
+                             int          fusion_id,
+                             unsigned int timeout);
 
 int fusion_skirmish_notify_ (FusionDev *dev,
                              int        id,
diff --git a/include/linux/fusion.h b/include/linux/fusion.h
index 2659b90..d516f7a 100644
--- a/include/linux/fusion.h
+++ b/include/linux/fusion.h
@@ -6,7 +6,7 @@
 /*
  * Fusion Kernel Device API Version
  */
-#define FUSION_API_MAJOR      5         /* Increased if backward compatibility is dropped. */
+#define FUSION_API_MAJOR      6         /* Increased if backward compatibility is dropped. */
 #define FUSION_API_MINOR      0         /* Increased if new features are added. */
 
 /*
@@ -190,6 +190,14 @@ typedef struct {
                                            max. time to wait until the fusionee(s) terminated */
 } FusionKill;
 
+/*
+ * Wait for a skirmish notification
+ */
+typedef struct {
+     int                 id;            /* skirmish id */
+     unsigned int        timeout;       /* timeout in ms (0 = unlimited) */
+} FusionSkirmishWait;
+
 
 /*
  * Shared memory pools
@@ -290,7 +298,7 @@ typedef struct {
 #define FUSION_SKIRMISH_DISMISS              _IOW(FT_SKIRMISH,  0x03, int)
 #define FUSION_SKIRMISH_DESTROY              _IOW(FT_SKIRMISH,  0x04, int)
 #define FUSION_SKIRMISH_LOCK_COUNT           _IOW(FT_SKIRMISH,  0x05, int)
-#define FUSION_SKIRMISH_WAIT                 _IOW(FT_SKIRMISH,  0x06, int)
+#define FUSION_SKIRMISH_WAIT                 _IOW(FT_SKIRMISH,  0x06, FusionSkirmishWait)
 #define FUSION_SKIRMISH_NOTIFY               _IOW(FT_SKIRMISH,  0x07, int)
 
 #define FUSION_PROPERTY_NEW                  _IOW(FT_PROPERTY,  0x00, int)
-- 
1.7.3.3

