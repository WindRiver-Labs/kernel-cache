From aacac6fac3bab22f6c9be163f203ec3d5c3833de Mon Sep 17 00:00:00 2001
From: Denis Oliver Kropp <dok@directfb.org>
Date: Tue, 14 Jan 2003 15:09:30 +0000
Subject: [PATCH] "Move-to-front" optimization added to other primitives, too. Reset all id pools during cleanup (last fusionee closes device).

---
 drivers/char/fusion/fusionee.c |    4 +---
 drivers/char/fusion/property.c |    3 +++
 drivers/char/fusion/reactor.c  |    3 +++
 drivers/char/fusion/ref.c      |    3 +++
 drivers/char/fusion/skirmish.c |    5 +++--
 5 files changed, 13 insertions(+), 5 deletions(-)

diff --git a/drivers/char/fusion/fusionee.c b/drivers/char/fusion/fusionee.c
index ebd6c37..dc0dd87 100644
--- a/drivers/char/fusion/fusionee.c
+++ b/drivers/char/fusion/fusionee.c
@@ -142,6 +142,7 @@ fusionee_reset()
       l = next;
     }
 
+  last_id   = 0;
   fusionees = NULL;
 
   spin_unlock (&fusionees_lock);
@@ -170,9 +171,6 @@ fusionee_new (int *id)
 
   spin_lock (&fusionees_lock);
 
-  if (!fusionees)
-    last_id = 0;
-
   fusionee->id   = ++last_id;
   fusionee->pid  = current->pid;
   fusionee->lock = SPIN_LOCK_UNLOCKED;
diff --git a/drivers/char/fusion/property.c b/drivers/char/fusion/property.c
index 9b33b1b..3452fca 100644
--- a/drivers/char/fusion/property.c
+++ b/drivers/char/fusion/property.c
@@ -131,6 +131,7 @@ fusion_property_reset()
       l = next;
     }
 
+  ids        = 0;
   properties = NULL;
 
   spin_unlock (&properties_lock);
@@ -381,6 +382,8 @@ lock_property (int id)
 
   if (property)
     {
+      fusion_list_move_to_front (&properties, &property->link);
+
       spin_lock (&property->lock);
       spin_unlock (&properties_lock);
     }
diff --git a/drivers/char/fusion/reactor.c b/drivers/char/fusion/reactor.c
index 9e1967d..9115c72 100644
--- a/drivers/char/fusion/reactor.c
+++ b/drivers/char/fusion/reactor.c
@@ -134,6 +134,7 @@ fusion_reactor_reset()
       l = next;
     }
 
+  ids      = 0;
   reactors = NULL;
 
   spin_unlock (&reactors_lock);
@@ -324,6 +325,8 @@ lock_reactor (int id)
 
   if (reactor)
     {
+      fusion_list_move_to_front (&reactors, &reactor->link);
+
       spin_lock (&reactor->lock);
       spin_unlock (&reactors_lock);
     }
diff --git a/drivers/char/fusion/ref.c b/drivers/char/fusion/ref.c
index df08834..ba76f1e 100644
--- a/drivers/char/fusion/ref.c
+++ b/drivers/char/fusion/ref.c
@@ -137,6 +137,7 @@ fusion_ref_reset()
       l = next;
     }
 
+  ids  = 0;
   refs = NULL;
 
   spin_unlock (&refs_lock);
@@ -422,6 +423,8 @@ lock_ref (int id)
 
   if (ref)
     {
+      fusion_list_move_to_front (&refs, &ref->link);
+
       spin_lock (&ref->lock);
       spin_unlock (&refs_lock);
     }
diff --git a/drivers/char/fusion/skirmish.c b/drivers/char/fusion/skirmish.c
index d88bfef..0330ae5 100644
--- a/drivers/char/fusion/skirmish.c
+++ b/drivers/char/fusion/skirmish.c
@@ -123,6 +123,7 @@ fusion_skirmish_reset()
       l = next;
     }
 
+  ids       = 0;
   skirmishs = NULL;
 
   spin_unlock (&skirmishs_lock);
@@ -340,10 +341,10 @@ lock_skirmish (int id)
 {
   FusionSkirmish *skirmish = lookup_skirmish (id);
 
-  fusion_list_move_to_front (&skirmishs, &skirmish->link);
-
   if (skirmish)
     {
+      fusion_list_move_to_front (&skirmishs, &skirmish->link);
+
       spin_lock (&skirmish->lock);
       spin_unlock (&skirmishs_lock);
     }
-- 
1.7.3.3

