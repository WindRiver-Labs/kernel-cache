From 3ba0ec6cf39545839aba11ab9e2a54c400c9f0ce Mon Sep 17 00:00:00 2001
From: Denis Oliver Kropp <dok@directfb.org>
Date: Fri, 30 Jun 2006 08:54:55 +0000
Subject: [PATCH] New ioctl FUSION_SKIRMISH_LOCK_COUNT to query the lock counter of the calling thread. If it's locked by a different thread, it simply returns a zero count.

---
 drivers/char/fusion/fusiondev.c |   11 +++++++++++
 drivers/char/fusion/skirmish.c  |   25 +++++++++++++++++++++++++
 drivers/char/fusion/skirmish.h  |    5 +++++
 include/linux/fusion.h          |    3 ++-
 4 files changed, 43 insertions(+), 1 deletions(-)

diff --git a/drivers/char/fusion/fusiondev.c b/drivers/char/fusion/fusiondev.c
index 3ac5186..bafeb9a 100644
--- a/drivers/char/fusion/fusiondev.c
+++ b/drivers/char/fusion/fusiondev.c
@@ -677,6 +677,7 @@ skirmish_ioctl (FusionDev *dev, int fusion_id,
 {
      int id;
      int ret;
+     int lock_count;
 
      switch (_IOC_NR(cmd)) {
           case _IOC_NR(FUSION_SKIRMISH_NEW):
@@ -713,6 +714,16 @@ skirmish_ioctl (FusionDev *dev, int fusion_id,
                     return -EFAULT;
 
                return fusion_skirmish_destroy (dev, id);
+
+          case _IOC_NR(FUSION_SKIRMISH_LOCK_COUNT):
+               if (get_user (id, (int*) arg))
+                    return -EFAULT;
+
+               ret = fusion_skirmish_lock_count (dev, id, fusion_id, &lock_count);
+               if (put_user(lock_count, ((int*)arg)+1))
+                    return -EFAULT;
+
+               return ret;
      }
 
      return -ENOSYS;
diff --git a/drivers/char/fusion/skirmish.c b/drivers/char/fusion/skirmish.c
index 6739210..9a296b1 100644
--- a/drivers/char/fusion/skirmish.c
+++ b/drivers/char/fusion/skirmish.c
@@ -261,6 +261,31 @@ fusion_skirmish_swoop (FusionDev *dev, int id, int fusion_id)
 }
 
 int
+fusion_skirmish_lock_count (FusionDev *dev, int id, int fusion_id, int *ret_lock_count)
+{
+     int             ret;
+     FusionSkirmish *skirmish;
+
+     ret = fusion_skirmish_lock( &dev->skirmish, id, false, &skirmish );
+     if (ret)
+          return ret;
+
+     if (skirmish->lock_fid == fusion_id &&
+         skirmish->lock_pid == current->pid)
+     {
+          *ret_lock_count = skirmish->lock_count;
+     }
+     else
+     {
+          *ret_lock_count = 0; 
+     }
+
+     fusion_skirmish_unlock( skirmish );
+
+     return 0;
+}
+
+int
 fusion_skirmish_dismiss (FusionDev *dev, int id, int fusion_id)
 {
      int             ret;
diff --git a/drivers/char/fusion/skirmish.h b/drivers/char/fusion/skirmish.h
index c5dc870..18eaa53 100644
--- a/drivers/char/fusion/skirmish.h
+++ b/drivers/char/fusion/skirmish.h
@@ -38,6 +38,11 @@ int fusion_skirmish_swoop   (FusionDev *dev,
                              int        id,
                              int        fusion_id);
 
+int fusion_skirmish_lock_count (FusionDev *dev,
+                                int     id,
+                                int     fusion_id,
+                                int    *ret_lock_count);
+
 int fusion_skirmish_dismiss (FusionDev *dev,
                              int        id,
                              int        fusion_id);
diff --git a/include/linux/fusion.h b/include/linux/fusion.h
index f6b9e8b..6c01a3a 100644
--- a/include/linux/fusion.h
+++ b/include/linux/fusion.h
@@ -8,7 +8,7 @@
  * Fusion Kernel Device API Version
  */
 #define FUSION_API_MAJOR      3         /* Increased if backward compatibility is dropped. */
-#define FUSION_API_MINOR      0         /* Increased if new features are added. */
+#define FUSION_API_MINOR      1         /* Increased if new features are added. */
 
 /*
  * The Fusion ID is a unique identifier for one process consisting of threads.
@@ -245,6 +245,7 @@ typedef struct {
 #define FUSION_SKIRMISH_SWOOP      _IOW(FT_SKIRMISH,  0x02, int)
 #define FUSION_SKIRMISH_DISMISS    _IOW(FT_SKIRMISH,  0x03, int)
 #define FUSION_SKIRMISH_DESTROY    _IOW(FT_SKIRMISH,  0x04, int)
+#define FUSION_SKIRMISH_LOCK_COUNT _IOW(FT_SKIRMISH,  0x05, int)
 
 #define FUSION_PROPERTY_NEW        _IOW(FT_PROPERTY,  0x00, int)
 #define FUSION_PROPERTY_LEASE      _IOW(FT_PROPERTY,  0x01, int)
-- 
1.7.3.3

