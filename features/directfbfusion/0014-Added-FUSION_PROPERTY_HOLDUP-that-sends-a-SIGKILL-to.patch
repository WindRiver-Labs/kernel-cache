From bf2bfdf9b8e971054b57311381006b079c1bf7f0 Mon Sep 17 00:00:00 2001
From: Denis Oliver Kropp <dok@directfb.org>
Date: Fri, 13 Dec 2002 17:05:01 +0000
Subject: [PATCH] Added FUSION_PROPERTY_HOLDUP that sends a SIGKILL to the process that purchased the property (e.g. a hanging fullscreen application).

---
 drivers/char/fusion/fusiondev.c |    6 ++++++
 drivers/char/fusion/fusionee.c  |   15 +++++++++++++++
 drivers/char/fusion/fusionee.h  |    2 ++
 drivers/char/fusion/property.c  |   24 ++++++++++++++++++++++++
 drivers/char/fusion/property.h  |    1 +
 include/linux/fusion.h          |    3 ++-
 6 files changed, 50 insertions(+), 1 deletions(-)

diff --git a/drivers/char/fusion/fusiondev.c b/drivers/char/fusion/fusiondev.c
index 9f2e21c..10c128c 100644
--- a/drivers/char/fusion/fusiondev.c
+++ b/drivers/char/fusion/fusiondev.c
@@ -288,6 +288,12 @@ fusion_ioctl (struct inode *inode, struct file *file,
 
       return fusion_property_cede (id, fusion_id);
 
+    case FUSION_PROPERTY_HOLDUP:
+      if (get_user (id, (int*) arg))
+        return -EFAULT;
+
+      return fusion_property_holdup (id, fusion_id);
+
     case FUSION_PROPERTY_DESTROY:
       if (get_user (id, (int*) arg))
         return -EFAULT;
diff --git a/drivers/char/fusion/fusionee.c b/drivers/char/fusion/fusionee.c
index b7a0eca..ebd6c37 100644
--- a/drivers/char/fusion/fusionee.c
+++ b/drivers/char/fusion/fusionee.c
@@ -335,6 +335,21 @@ fusionee_poll (int id, struct file *file, poll_table * wait)
 }
 
 int
+fusionee_kill (int id)
+{
+  Fusionee *fusionee = lock_fusionee (id);
+
+  if (!fusionee)
+    return -EINVAL;
+
+  kill_proc (fusionee->pid, SIGKILL, 0);
+
+  unlock_fusionee (fusionee);
+
+  return 0;
+}
+
+int
 fusionee_destroy (int id)
 {
   Fusionee *fusionee = lookup_fusionee (id);
diff --git a/drivers/char/fusion/fusionee.h b/drivers/char/fusion/fusionee.h
index 44932b6..33a6c56 100644
--- a/drivers/char/fusion/fusionee.h
+++ b/drivers/char/fusion/fusionee.h
@@ -39,6 +39,8 @@ int fusionee_get_messages (int id, void *buf, int buf_size, int block);
 
 unsigned int fusionee_poll (int id, struct file *file, poll_table * wait);
 
+int fusionee_kill (int id);
+
 int fusionee_destroy (int id);
 
 #endif
diff --git a/drivers/char/fusion/property.c b/drivers/char/fusion/property.c
index 4c4bf3c..9b33b1b 100644
--- a/drivers/char/fusion/property.c
+++ b/drivers/char/fusion/property.c
@@ -281,6 +281,30 @@ fusion_property_cede (int id, int fusion_id)
 }
 
 int
+fusion_property_holdup (int id, int fusion_id)
+{
+  FusionProperty *property = lock_property (id);
+
+  if (!property)
+    return -EINVAL;
+
+  if (property->state == FUSION_PROPERTY_PURCHASED)
+    {
+      if (property->fusion_id == fusion_id)
+        {
+          unlock_property (property);
+          return -EIO;
+        }
+
+      fusionee_kill (property->fusion_id);
+    }
+
+  unlock_property (property);
+
+  return 0;
+}
+
+int
 fusion_property_destroy (int id)
 {
   FusionProperty *property = lookup_property (id);
diff --git a/drivers/char/fusion/property.h b/drivers/char/fusion/property.h
index b7f391d..623ce1d 100644
--- a/drivers/char/fusion/property.h
+++ b/drivers/char/fusion/property.h
@@ -31,6 +31,7 @@ int fusion_property_new (int *id);
 int fusion_property_lease (int id, int fusion_id);
 int fusion_property_purchase (int id, int fusion_id);
 int fusion_property_cede (int id, int fusion_id);
+int fusion_property_holdup (int id, int fusion_id);
 int fusion_property_destroy (int id);
 
 
diff --git a/include/linux/fusion.h b/include/linux/fusion.h
index edb94b2..9806ea0 100644
--- a/include/linux/fusion.h
+++ b/include/linux/fusion.h
@@ -58,7 +58,8 @@ typedef struct {
 #define FUSION_PROPERTY_LEASE           _IOW('F', 0x31, sizeof(int))
 #define FUSION_PROPERTY_PURCHASE        _IOW('F', 0x32, sizeof(int))
 #define FUSION_PROPERTY_CEDE            _IOW('F', 0x33, sizeof(int))
-#define FUSION_PROPERTY_DESTROY         _IOW('F', 0x34, sizeof(int))
+#define FUSION_PROPERTY_HOLDUP          _IOW('F', 0x34, sizeof(int))
+#define FUSION_PROPERTY_DESTROY         _IOW('F', 0x35, sizeof(int))
 
 #define FUSION_REACTOR_NEW              _IOR('F', 0x50, sizeof(int))
 #define FUSION_REACTOR_ATTACH           _IOW('F', 0x51, sizeof(int))
-- 
1.7.3.3

