From 8cd62dc91b0f001052490d8f6f78c6f39e980563 Mon Sep 17 00:00:00 2001
From: Denis Oliver Kropp <dok@shizo.(none)>
Date: Mon, 28 May 2007 14:36:55 +0200
Subject: [PATCH] Removed call_arg option from dispatch callback. It will be used for something else.

Fixed missing dispatch callback if there were no recipients.
---
 drivers/char/fusion/fusiondev.c |    3 +--
 drivers/char/fusion/reactor.c   |   18 ++++++++++++------
 drivers/char/fusion/reactor.h   |    1 -
 include/linux/fusion.h          |    5 +++--
 4 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/drivers/char/fusion/fusiondev.c b/drivers/char/fusion/fusiondev.c
index c125b40..1a3e04e 100644
--- a/drivers/char/fusion/fusiondev.c
+++ b/drivers/char/fusion/fusiondev.c
@@ -884,8 +884,7 @@ reactor_ioctl (FusionDev *dev, Fusionee *fusionee,
                     return -EFAULT;
 
                return fusion_reactor_set_dispatch_callback (dev, callback.reactor_id,
-                                                            callback.call_id, callback.call_arg,
-                                                            callback.call_ptr);
+                                                            callback.call_id, callback.call_ptr);
      }
 
      return -ENOSYS;
diff --git a/drivers/char/fusion/reactor.c b/drivers/char/fusion/reactor.c
index bf0fc2f..f6008a1 100644
--- a/drivers/char/fusion/reactor.c
+++ b/drivers/char/fusion/reactor.c
@@ -55,7 +55,6 @@ typedef struct {
      bool               destroyed;
 
      int                call_id;
-     int                call_arg;
      void              *call_ptr;
 } FusionReactor;
 
@@ -290,7 +289,7 @@ fusion_reactor_dispatch (FusionDev *dev, int id, Fusionee *fusionee,
 
           dispatch->count    = 0;
           dispatch->call_id  = reactor->call_id;
-          dispatch->call_arg = reactor->call_arg;
+          dispatch->call_arg = 0;/*FIXME CHANNEL*/
           dispatch->call_ptr = reactor->call_ptr;
      }
 
@@ -314,8 +313,17 @@ fusion_reactor_dispatch (FusionDev *dev, int id, Fusionee *fusionee,
                                       reactor->entry.id, msg_size, msg_data, NULL, NULL, 0);
      }
 
-     if (dispatch && !dispatch->count)
-         kfree( dispatch );
+     if (dispatch && !dispatch->count) {
+          FusionCallExecute execute;
+
+          execute.call_id  = dispatch->call_id;
+          execute.call_arg = dispatch->call_arg;
+          execute.call_ptr = dispatch->call_ptr;
+
+          fusion_call_execute( dev, NULL, &execute );
+
+          kfree( dispatch );
+     }
 
      fusion_reactor_unlock( reactor );
 
@@ -326,7 +334,6 @@ int
 fusion_reactor_set_dispatch_callback (FusionDev  *dev,
                                       int         id,
                                       int         call_id,
-                                      int         call_arg,
                                       void       *call_ptr)
 {
      int            ret;
@@ -342,7 +349,6 @@ fusion_reactor_set_dispatch_callback (FusionDev  *dev,
      }
 
      reactor->call_id  = call_id;
-     reactor->call_arg = call_arg;
      reactor->call_ptr = call_ptr;
 
      fusion_reactor_unlock( reactor );
diff --git a/drivers/char/fusion/reactor.h b/drivers/char/fusion/reactor.h
index 5c1345d..6a09e2e 100644
--- a/drivers/char/fusion/reactor.h
+++ b/drivers/char/fusion/reactor.h
@@ -50,7 +50,6 @@ int fusion_reactor_destroy  (FusionDev  *dev,
 int fusion_reactor_set_dispatch_callback (FusionDev  *dev,
                                           int         id,
                                           int         call_id,
-                                          int         call_arg,
                                           void       *call_ptr);
 
 
diff --git a/include/linux/fusion.h b/include/linux/fusion.h
index 829a6a4..99168f5 100644
--- a/include/linux/fusion.h
+++ b/include/linux/fusion.h
@@ -78,15 +78,16 @@ typedef struct {
 
 /*
  * Registering a dispatch callback
+ *
+ * The call_arg will be set to the channel number
  */
 typedef struct {
      int                 reactor_id;
 
      int                 call_id;       /* id of the call to execute when a message has been
                                            processed by all recipients of the dispatch */
-     int                 call_arg;      /* optional call parameter, e.g. the id of a user
+     int                *call_ptr;      /* optional call parameter, e.g. the pointer of a user
                                            space resource associated with that reference */
-     void               *call_ptr;
 } FusionReactorSetCallback;
 
 /*
-- 
1.7.3.3

