From f14043e56a13331006fab4eefad2e0d6eceab97c Mon Sep 17 00:00:00 2001
From: Denis Oliver Kropp <dok@directfb.org>
Date: Sun, 12 Dec 2004 13:09:39 +0000
Subject: [PATCH] Increase performance by ~10% by not calling wake_up*() if nobody is waiting.

---
 drivers/char/fusion/entries.c |   10 +++++++++-
 drivers/char/fusion/entries.h |    1 +
 2 files changed, 10 insertions(+), 1 deletions(-)

diff --git a/drivers/char/fusion/entries.c b/drivers/char/fusion/entries.c
index 5a30a96..747bd05 100644
--- a/drivers/char/fusion/entries.c
+++ b/drivers/char/fusion/entries.c
@@ -19,6 +19,7 @@
 #include <linux/smp_lock.h>
 #include <linux/sched.h>
 #include <linux/time.h>
+#include <linux/version.h>
 
 #include <linux/fusion.h>
 
@@ -331,7 +332,7 @@ fusion_entry_lock( FusionEntries  *entries,
 
      /* Keep timestamp, but use the slightly
         inexact version to avoid performance impacts. */
-#ifdef _STRUCT_TIMESPEC
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 0) && defined _STRUCT_TIMESPEC
      entry->last_lock.tv_sec = xtime.tv_sec;
      entry->last_lock.tv_usec = xtime.tv_nsec / 1000;
 #else
@@ -374,8 +375,12 @@ fusion_entry_wait( FusionEntry *entry, long *timeout )
      id      = entry->id;
      entries = entry->entries;
 
+     entry->waiters++;
+
      fusion_sleep_on( &entry->wait, &entry->lock, timeout );
 
+     entry->waiters--;
+
      if (timeout && !*timeout)
           return -ETIMEDOUT;
 
@@ -401,6 +406,9 @@ fusion_entry_notify( FusionEntry *entry, bool all )
      FUSION_ASSERT( entry != NULL );
      FUSION_ASSUME( entry->lock_pid == current->pid );
 
+     if (!entry->waiters)
+          return;
+
      if (all)
           wake_up_interruptible_all( &entry->wait );
      else
diff --git a/drivers/char/fusion/entries.h b/drivers/char/fusion/entries.h
index c99f8b3..e6d9f8f 100644
--- a/drivers/char/fusion/entries.h
+++ b/drivers/char/fusion/entries.h
@@ -53,6 +53,7 @@ struct __FD_FusionEntry {
 
      struct semaphore   lock;
      wait_queue_head_t  wait;
+     int                waiters;
 
      struct timeval     last_lock;
 
-- 
1.7.3.3

