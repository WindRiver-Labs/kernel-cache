From 5af5e349ed62f852ce65acc6a62d1c925f8961e6 Mon Sep 17 00:00:00 2001
From: Denis Oliver Kropp <dok@directfb.org>
Date: Tue, 27 Dec 2005 07:21:13 +0000
Subject: [PATCH] Fixed deadlock in fusionee_send_message() by replacing the "listlock-item1lock-listunlock-listlock-item2lock-listunlock" sequence by "listlock-item1lock-item2lock-listunlock".

Deadlock occured with concurrent fusionee_get_message() or fusionee_poll()
doing a "listlock-item1lock-listunlock".

Thanks to Hyperthreading for digging this one up :)
---
 drivers/char/fusion/fusionee.c |   34 ++++++++++++++++++++++++++++++----
 1 files changed, 30 insertions(+), 4 deletions(-)

diff --git a/drivers/char/fusion/fusionee.c b/drivers/char/fusion/fusionee.c
index a80f623..a294ea9 100644
--- a/drivers/char/fusion/fusionee.c
+++ b/drivers/char/fusion/fusionee.c
@@ -228,23 +228,49 @@ fusionee_send_message (FusionDev *dev, int id, int recipient,
      DEBUG( "fusionee_send_message (%d -> %d, type %d, id %d, size %d)\n",
             id, recipient, msg_type, msg_id, msg_size );
 
-     ret = lock_fusionee (dev, recipient, &fusionee);
+     ret = lookup_fusionee (dev, recipient, &fusionee);
      if (ret)
           return ret;
 
+     if (down_interruptible (&fusionee->lock)) {
+          up (&dev->fusionee.lock);
+          return -EINTR;
+     }
+
+
      if (id) {
           if (id == recipient) {
                sender = fusionee;
           }
           else {
-               ret = lock_fusionee (dev, id, &sender);
-               if (ret) {
+               FusionLink *l;
+
+               fusion_list_foreach (l, dev->fusionee.list) {
+                    Fusionee *f = (Fusionee *) l;
+
+                    if (f->id == id) {
+                         sender = f;
+                         break;
+                    }
+               }
+
+               if (!sender) {
+                    unlock_fusionee (fusionee);
+                    up (&dev->fusionee.lock);
+                    return -EIO;
+               }
+
+               if (down_interruptible (&sender->lock)) {
                     unlock_fusionee (fusionee);
-                    return ret == -EINVAL ? -EIO : ret;
+                    up (&dev->fusionee.lock);
+                    return -EINTR;
                }
           }
      }
 
+     up (&dev->fusionee.lock);
+
+
      message = kmalloc (sizeof(Message) + msg_size, GFP_KERNEL);
      if (!message) {
           if (sender && sender != fusionee)
-- 
1.7.3.3

