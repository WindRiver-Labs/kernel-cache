From 3bbb241ac711dfb1764391cd4ca86b13d928909c Mon Sep 17 00:00:00 2001
From: Denis Oliver Kropp <dok@directfb.org>
Date: Tue, 16 Dec 2003 06:05:40 +0000
Subject: [PATCH] Automatically dismiss skirmishs upon death of a single thread. Previously only the death of all threads (of one fusionee) did that.

This means that killing or canceling a thread releases its held locks now.
---
 drivers/char/fusion/fusiondev.c |   18 ++++++++++++++++++
 drivers/char/fusion/skirmish.c  |   26 ++++++++++++++++++++++++++
 drivers/char/fusion/skirmish.h  |    5 ++++-
 3 files changed, 48 insertions(+), 1 deletions(-)

diff --git a/drivers/char/fusion/fusiondev.c b/drivers/char/fusion/fusiondev.c
index bb814de..49a0b16 100644
--- a/drivers/char/fusion/fusiondev.c
+++ b/drivers/char/fusion/fusiondev.c
@@ -46,6 +46,7 @@
 #endif
 
 MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Denis Oliver Kropp <dok@directfb.org>");
 
 struct proc_dir_entry *proc_fusion_dir;
 
@@ -323,6 +324,22 @@ fusion_release (struct inode *inode, struct file *file)
      return 0;
 }
 
+static int
+fusion_flush (struct file *file)
+{
+     int        fusion_id = (int) file->private_data;
+     FusionDev *dev       = fusion_devs[iminor(file->f_dentry->d_inode)];
+
+     (void) fusion_id;
+
+     DEBUG( "fusion_flush (0x%08x %d)\n", fusion_id, current->pid );
+
+     if (current->flags & PF_EXITING)
+          fusion_skirmish_dismiss_all_from_pid (dev, current->pid);
+
+     return 0;
+}
+
 static ssize_t
 fusion_read (struct file *file, char *buf, size_t count, loff_t *ppos)
 {
@@ -642,6 +659,7 @@ fusion_ioctl (struct inode *inode, struct file *file,
 static struct file_operations fusion_fops = {
      .owner   = THIS_MODULE,
      .open    = fusion_open,
+     .flush   = fusion_flush,
      .release = fusion_release,
      .read    = fusion_read,
      .poll    = fusion_poll,
diff --git a/drivers/char/fusion/skirmish.c b/drivers/char/fusion/skirmish.c
index 03ada64..ea21e89 100644
--- a/drivers/char/fusion/skirmish.c
+++ b/drivers/char/fusion/skirmish.c
@@ -315,6 +315,32 @@ fusion_skirmish_dismiss_all (FusionDev *dev, int fusion_id)
      up (&dev->skirmish.lock);
 }
 
+void
+fusion_skirmish_dismiss_all_from_pid (FusionDev *dev, int pid)
+{
+     FusionLink *l;
+
+     down (&dev->skirmish.lock);
+
+     fusion_list_foreach (l, dev->skirmish.list) {
+          FusionSkirmish *skirmish = (FusionSkirmish *) l;
+
+          down (&skirmish->lock);
+
+          if (skirmish->lock_pid == pid) {
+               skirmish->lock_fid   = 0;
+               skirmish->lock_pid   = 0;
+               skirmish->lock_count = 0;
+
+               wake_up_interruptible_all (&skirmish->wait);
+          }
+
+          up (&skirmish->lock);
+     }
+
+     up (&dev->skirmish.lock);
+}
+
 /******************************************************************************/
 
 static int
diff --git a/drivers/char/fusion/skirmish.h b/drivers/char/fusion/skirmish.h
index e544648..c5dc870 100644
--- a/drivers/char/fusion/skirmish.h
+++ b/drivers/char/fusion/skirmish.h
@@ -11,7 +11,7 @@
  *	as published by the Free Software Foundation; either version
  *	2 of the License, or (at your option) any later version.
  */
- 
+
 #ifndef __FUSION__SKIRMISH_H__
 #define __FUSION__SKIRMISH_H__
 
@@ -51,4 +51,7 @@ int fusion_skirmish_destroy (FusionDev *dev,
 void fusion_skirmish_dismiss_all (FusionDev *dev,
                                   int        fusion_id);
 
+void fusion_skirmish_dismiss_all_from_pid (FusionDev *dev,
+                                           int        pid);
+
 #endif
-- 
1.7.3.3

