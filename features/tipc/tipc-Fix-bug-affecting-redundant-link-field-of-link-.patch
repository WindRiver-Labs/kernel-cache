From 0b33c6a493ee6133d09377689c9dce952f08dc22 Mon Sep 17 00:00:00 2001
From: Allan Stephens <allan.stephens@windriver.com>
Date: Wed, 10 Nov 2010 15:11:07 -0500
Subject: [PATCH 17/32] tipc: Fix bug affecting redundant link field of link protocol message

commit 74c80b2d8fe3c14e00e5512d8e15167c0046427d from
git://tipc.cslab.ericsson.net/pub/git/people/allan/tipc.git

Ensures that the "redundant link exists" field of the LINK_PROTOCOL
messages sent by a link endpoint is set if and only if the sending
node has at least one other working link to the peer node. Previously,
the bit was set only if there were at least 2 working links to the peer
node, meaning the bit was incorrectly left unset in messages sent by a
non-working link endpoint when exactly one alternate working link was
available. The revised code now takes the state of the link sending
the message into account when deciding if an alternate link exists.

Signed-off-by: Allan Stephens <allan.stephens@windriver.com>
Integrated-by: Howard Xu <hao.xu@windriver.com>
---
 net/tipc/tipc_link.c |    2 +-
 net/tipc/tipc_node.c |    8 ++++++--
 net/tipc/tipc_node.h |    2 +-
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/net/tipc/tipc_link.c b/net/tipc/tipc_link.c
index a98aa9e..e8ca862 100644
--- a/net/tipc/tipc_link.c
+++ b/net/tipc/tipc_link.c
@@ -2193,7 +2193,7 @@ void tipc_link_send_proto_msg(struct link *l_ptr, u32 msg_typ, int probe_msg,
 		msg_set_max_pkt(msg, l_ptr->max_pkt_target);
 	}
 
-	msg_set_redundant_link(msg, tipc_node_has_redundant_links(l_ptr->owner));
+	msg_set_redundant_link(msg, tipc_node_alt_link_is_up(l_ptr));
 	msg_set_linkprio(msg, l_ptr->priority);
 	msg_set_timestamp(msg, jiffies_to_msecs(jiffies));
 	msg_set_size(msg, msg_size);
diff --git a/net/tipc/tipc_node.c b/net/tipc/tipc_node.c
index 97213f2..b2cb81e 100644
--- a/net/tipc/tipc_node.c
+++ b/net/tipc/tipc_node.c
@@ -222,10 +222,14 @@ int tipc_node_is_up(struct tipc_node *n_ptr)
 	return (n_ptr->active_links[0] != NULL);
 }
 
-int tipc_node_has_redundant_links(struct tipc_node *n_ptr)
+/**
+ * tipc_node_alt_link_is_up - is an alternate link to this one available?
+ */
+
+int tipc_node_alt_link_is_up(struct link *l_ptr)
 {
 #ifdef CONFIG_TIPC_MULTIPLE_LINKS
-	return (n_ptr->working_links > 1);
+	return (l_ptr->owner->working_links > tipc_link_is_up(l_ptr));
 #else
 	return 0;
 #endif
diff --git a/net/tipc/tipc_node.h b/net/tipc/tipc_node.h
index b2f12ac..2da2d2d 100644
--- a/net/tipc/tipc_node.h
+++ b/net/tipc/tipc_node.h
@@ -96,7 +96,7 @@ struct tipc_node *tipc_node_create(u32 addr);
 void tipc_node_delete(struct tipc_node *n_ptr);
 void tipc_node_link_up(struct tipc_node *n_ptr, struct link *l_ptr);
 void tipc_node_link_down(struct tipc_node *n_ptr, struct link *l_ptr);
-int tipc_node_has_redundant_links(struct tipc_node *n_ptr);
+int tipc_node_alt_link_is_up(struct link *l_ptr);
 int tipc_node_is_up(struct tipc_node *n_ptr);
 struct tipc_node *tipc_node_attach_link(struct link *l_ptr);
 void tipc_node_detach_link(struct tipc_node *n_ptr, struct link *l_ptr);
-- 
1.7.0

