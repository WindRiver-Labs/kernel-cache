From a1120a037db8c03776c908fd21a0a80049adbe37 Mon Sep 17 00:00:00 2001
From: Allan Stephens <allan.stephens@windriver.com>
Date: Wed, 10 Nov 2010 22:22:17 -0800
Subject: [PATCH 11/22] tipc: Fix problem with broadcast link synchronization between nodes

commit ce177031e4e290e4dc1ae17102f7a3b1369cf62f from
http://tipc.cslab.ericsson.net/cgi-bin/gitweb.cgi?p=people/allan/tipc.git;a=shortlog;h=tipc1.7

Corrects a problem in which a link endpoint that activates as the
result of receiving a RESET/STATE sequence of link protocol messages
fails toproperly record the broadcast link status information about
the node to which it is now communicating with. (The problem does
not occur with the more common RESET/ACTIVATE sequence of messages.)
The fix ensures that the broadcast link status info is updated after
the RESET message resets the link endpoint, rather than before, thereby
preventing new information from being overwritten by the reset operation.

Signed-off-by: Allan Stephens <allan.stephens@windriver.com>
Integrated-by: Howard Xu <Hao.Xu@windriver.com>
---
 net/tipc/tipc_link.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/net/tipc/tipc_link.c b/net/tipc/tipc_link.c
index 1922fe6..854ee8d 100644
--- a/net/tipc/tipc_link.c
+++ b/net/tipc/tipc_link.c
@@ -2265,13 +2265,12 @@ static void link_recv_proto_msg(struct link *l_ptr, struct sk_buff *buf)
 				break; /* duplicate or old reset: ignore */
 			}
 		}
+		link_state_event(l_ptr, RESET_MSG);
                 if (msg_stop(msg)) {
-                        tipc_link_reset(l_ptr);
                         l_ptr->blocked = 1;
                         tipc_k_signal((Handler)link_remote_delete,(unsigned long)l_ptr);
                         break;
                 }
-
 		/* fall thru' */
 	case ACTIVATE_MSG:
 		/* Update link settings according other endpoint's values */
@@ -2305,10 +2304,11 @@ static void link_recv_proto_msg(struct link *l_ptr, struct sk_buff *buf)
 			l_ptr->owner->bclink.oos_state = 0;
 		}
 
-		link_state_event(l_ptr, msg_type(msg));
-
 		l_ptr->peer_session = msg_session(msg);
 		l_ptr->peer_bearer_id = msg_bearer_id(msg);
+
+		if (msg_type(msg) == ACTIVATE_MSG)
+			link_state_event(l_ptr, ACTIVATE_MSG);
 		break;
 	case STATE_MSG:
 
-- 
1.6.5.2

