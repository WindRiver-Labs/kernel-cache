From 427883105db45492c60093b94ea58980eeaa87db Mon Sep 17 00:00:00 2001
From: Allan Stephens <allan.stephens@windriver.com>
Date: Fri, 5 Nov 2010 09:54:23 -0400
Subject: [PATCH 03/32] tipc: Eliminate warnings associated with callback routine arguments

commit a57773e525db8bbf8fab3fcbac485a91302df73b from
git://tipc.cslab.ericsson.net/pub/git/people/allan/tipc.git

Adds type casts to prevent warnings about potential loss of high order
significant bits when callback routine arguments that are actually
"unsigned int" values are passed as "unsigned long" values.

Signed-off-by: Allan Stephens <allan.stephens@windriver.com>
Integrated-by: Howard Xu <hao.xu@windriver.com>
---
 net/tipc/tipc_name_distr.c |   11 +++++++----
 net/tipc/tipc_name_table.c |    9 ++++++---
 net/tipc/tipc_node.c       |    5 +++--
 net/tipc/tipc_port.c       |    9 ++++++---
 4 files changed, 22 insertions(+), 12 deletions(-)

diff --git a/net/tipc/tipc_name_distr.c b/net/tipc/tipc_name_distr.c
index f1310b9..6e03935 100644
--- a/net/tipc/tipc_name_distr.c
+++ b/net/tipc/tipc_name_distr.c
@@ -2,7 +2,7 @@
  * net/tipc/tipc_name_distr.c: TIPC name distribution code
  * 
  * Copyright (c) 2000-2006, Ericsson AB
- * Copyright (c) 2005-2008, Wind River Systems
+ * Copyright (c) 2005-2008, 2010, Wind River Systems
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -299,8 +299,9 @@ static void named_distribute(struct list_head *delivery_list, u32 dest_node,
  * tipc_named_node_up - tell specified node about relevant name info
  */
 
-void tipc_named_node_up(unsigned long node)
+void tipc_named_node_up(unsigned long node_arg)
 {
+	u32 node = (u32)node_arg;
 	struct sk_buff *buf;
 	struct sk_buff *temp_buf;
 	struct list_head delivery_list;
@@ -364,9 +365,10 @@ void tipc_named_node_up(unsigned long node)
  * tipc_named_node_up_uni - tell uni-cluster node about relevant name info
  */
 
-void tipc_named_node_up_uni(unsigned long node)
+void tipc_named_node_up_uni(unsigned long node_arg)
 {
 #ifdef CONFIG_TIPC_UNICLUSTER_FRIENDLY
+	u32 node = (u32)node_arg;
 	struct sk_buff *buf;
 	struct sk_buff *temp_buf;
 	struct list_head delivery_list;
@@ -885,8 +887,9 @@ static void route_distribute(struct list_head *delivery_list, u32 dest_node,
  * tipc_route_node_up - tell specified node about relevant routes
  */
 
-void tipc_route_node_up(unsigned long node)
+void tipc_route_node_up(unsigned long node_arg)
 {
+	u32 node = (u32)node_arg;
 	struct sk_buff *buf;
 	struct sk_buff *temp_buf;
 	struct list_head delivery_list;
diff --git a/net/tipc/tipc_name_table.c b/net/tipc/tipc_name_table.c
index 51d0415..95a423e 100644
--- a/net/tipc/tipc_name_table.c
+++ b/net/tipc/tipc_name_table.c
@@ -1571,8 +1571,9 @@ found:
  * tipc_routetbl_publish - publish route to neighboring node  
  */
 
-void tipc_routetbl_publish(unsigned long node_addr)
+void tipc_routetbl_publish(unsigned long node_addr_arg)
 {
+	u32 node_addr = (u32)node_addr_arg;
 	struct publication *publ;
 	u32 elm_addr;
 	int scope;
@@ -1608,8 +1609,9 @@ void tipc_routetbl_publish(unsigned long node_addr)
  * tipc_routetbl_withdraw - withdraw route to neighboring node  
  */
 
-void tipc_routetbl_withdraw(unsigned long node_addr)
+void tipc_routetbl_withdraw(unsigned long node_addr_arg)
 {
+	u32 node_addr = (u32)node_addr_arg;
 	struct publication *publ;
 	u32 elm_addr;
 	int dist_mask;
@@ -1646,8 +1648,9 @@ void tipc_routetbl_withdraw(unsigned long node_addr)
  * tipc_routetbl_withdraw_node - trigger implied withdrawal
  */
 
-void tipc_routetbl_withdraw_node(unsigned long node_addr)
+void tipc_routetbl_withdraw_node(unsigned long node_addr_arg)
 {
+	u32 node_addr = (u32)node_addr_arg;
 	struct publication publ;
 
 	publ.type = TIPC_ROUTE;
diff --git a/net/tipc/tipc_node.c b/net/tipc/tipc_node.c
index 82bbcec..3b83f64 100644
--- a/net/tipc/tipc_node.c
+++ b/net/tipc/tipc_node.c
@@ -2,7 +2,7 @@
  * net/tipc/tipc_node.c: TIPC node management routines
  *
  * Copyright (c) 2000-2006, Ericsson AB
- * Copyright (c) 2005-2008, Wind River Systems
+ * Copyright (c) 2005-2008, 2010, Wind River Systems
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -323,8 +323,9 @@ static inline void node_abort_link_changeover(struct tipc_node *n_ptr)
 }
 #endif
 
-static void node_cleanup_finished(unsigned long node_addr)
+static void node_cleanup_finished(unsigned long node_addr_arg)
 {
+	u32 node_addr = (u32)node_addr_arg;
 	struct tipc_node *n_ptr;
 	 
 	read_lock_bh(&tipc_net_lock);
diff --git a/net/tipc/tipc_port.c b/net/tipc/tipc_port.c
index 9ec2b6f..5bc2a23 100644
--- a/net/tipc/tipc_port.c
+++ b/net/tipc/tipc_port.c
@@ -517,8 +517,9 @@ int tipc_port_reject_sections(struct port *p_ptr, struct tipc_msg *hdr,
 	return tipc_reject_msg(buf, err);
 }
 
-static void port_timeout(unsigned long ref)
+static void port_timeout(unsigned long ref_arg)
 {
+	u32 ref = (u32)ref_arg;
 	struct port *p_ptr = tipc_port_lock(ref);
 	struct sk_buff *buf = NULL;
 
@@ -550,8 +551,9 @@ static void port_timeout(unsigned long ref)
 }
 
 
-static void port_handle_node_down(unsigned long ref)
+static void port_handle_node_down(unsigned long ref_arg)
 {
+	u32 ref = (u32)ref_arg;
 	struct port *p_ptr = tipc_port_lock(ref);
 	struct sk_buff* buf = NULL;
 
@@ -990,8 +992,9 @@ static u32 port_dispatcher(struct tipc_port *dummy, struct sk_buff *buf)
  *
  */
 
-static void port_wakeup_sh(unsigned long ref)
+static void port_wakeup_sh(unsigned long ref_arg)
 {
+	u32 ref = (u32)ref_arg;
 	struct port *p_ptr;
 	struct user_port *up_ptr;
 	tipc_continue_event cb = NULL;
-- 
1.7.0

