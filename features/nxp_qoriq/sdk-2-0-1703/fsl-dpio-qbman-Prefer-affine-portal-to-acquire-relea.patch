From 81b806f88c68c2a63120b3207950b349ac790801 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Tue, 10 Nov 2015 10:58:25 +0200
Subject: [PATCH 083/508] fsl-dpio,qbman: Prefer affine portal to
 acquire/release buffers

The FQ enqueue/dequeue DPIO code attempts to select an affine QBMan
portal in order to minimize contention (under the assumption that most
of the calling code runs in affine contexts). Doing the same now for
buffer acquire/release.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-mc/bus/dpio/dpio_service.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/dpio/dpio_service.c b/drivers/staging/fsl-mc/bus/dpio/dpio_service.c
index 8b5f722..8acd45a 100644
--- a/drivers/staging/fsl-mc/bus/dpio/dpio_service.c
+++ b/drivers/staging/fsl-mc/bus/dpio/dpio_service.c
@@ -640,7 +640,7 @@ int dpaa2_io_service_release(struct dpaa2_io *d,
 {
 	struct qbman_release_desc rd;
 
-	d = service_select_any(d);
+	d = _service_select(d);
 	if (!d)
 		return -ENODEV;
 	qbman_release_desc_clear(&rd);
@@ -657,7 +657,7 @@ int dpaa2_io_service_acquire(struct dpaa2_io *d,
 	unsigned long irqflags;
 	int err;
 
-	d = service_select_any(d);
+	d = _service_select(d);
 	if (!d)
 		return -ENODEV;
 	spin_lock_irqsave(&d->object.lock_mgmt_cmd, irqflags);
-- 
1.7.5.4

