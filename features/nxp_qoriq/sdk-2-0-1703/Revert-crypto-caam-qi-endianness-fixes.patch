From 44b3ba6481203fbd9b9b866abf4718774590a6a8 Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Wed, 20 Sep 2017 17:14:09 +0800
Subject: [PATCH 12/73] Revert "crypto: caam/qi - endianness fixes"

This reverts commit ebdfb6e479a587edaa5819086e395bfb6e51f0f6.

This patch is from nxp-sdk-2.0, it is based on kernel4.1.
So far, there is related code that includes this patch in mainline.
So, get patch from upstream.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/caam/qi.c       |    9 ++-------
 drivers/crypto/caam/sg_sw_qm.h |   14 --------------
 2 files changed, 2 insertions(+), 21 deletions(-)

diff --git a/drivers/crypto/caam/qi.c b/drivers/crypto/caam/qi.c
index aa53af3..bd40dd8 100644
--- a/drivers/crypto/caam/qi.c
+++ b/drivers/crypto/caam/qi.c
@@ -14,7 +14,6 @@
 #include "desc.h"
 #include "intern.h"
 #include "desc_constr.h"
-#include "sg_sw_qm.h"
 
 #define PRE_HDR_LEN		2	/* Length in u32 words */
 #define PREHDR_RSLS_SHIFT	31
@@ -108,8 +107,6 @@ int caam_qi_enqueue(struct device *qidev, struct caam_drv_req *req)
 	fd.format = qm_fd_compound;
 	fd.cong_weight = req->fd_sgt[1].length;
 
-	cpu_to_hw_sg(&req->fd_sgt[0]);
-	cpu_to_hw_sg(&req->fd_sgt[1]);
 	fd.addr = dma_map_single(qidev, req->fd_sgt, size,
 				 DMA_BIDIRECTIONAL);
 	if (dma_mapping_error(qidev, fd.addr)) {
@@ -368,8 +365,7 @@ int caam_drv_ctx_update(struct caam_drv_ctx *drv_ctx, u32 *sh_desc)
 	 * Now update the shared descriptor for driver context.
 	 * Re-initialise pre-header. Set RSLS and SDLEN
 	 */
-	drv_ctx->prehdr[0] = cpu_to_caam32((1 << PREHDR_RSLS_SHIFT) |
-					   num_words);
+	drv_ctx->prehdr[0] = (1 << PREHDR_RSLS_SHIFT) | num_words;
 
 	/* Copy the new shared descriptor now */
 	memcpy(drv_ctx->sh_desc, sh_desc, desc_bytes(sh_desc));
@@ -434,8 +430,7 @@ struct caam_drv_ctx *caam_drv_ctx_init(struct device *qidev,
 	}
 
 	/* Initialise pre-header. Set RSLS and SDLEN */
-	drv_ctx->prehdr[0] = cpu_to_caam32((1 << PREHDR_RSLS_SHIFT) |
-					   num_words);
+	drv_ctx->prehdr[0] = (1 << PREHDR_RSLS_SHIFT) | num_words;
 
 	/* Copy the shared descriptor now */
 	memcpy(drv_ctx->sh_desc, sh_desc, desc_bytes(sh_desc));
diff --git a/drivers/crypto/caam/sg_sw_qm.h b/drivers/crypto/caam/sg_sw_qm.h
index eb8f005..2353e84 100644
--- a/drivers/crypto/caam/sg_sw_qm.h
+++ b/drivers/crypto/caam/sg_sw_qm.h
@@ -33,15 +33,6 @@
 #define __SG_SW_QM_H
 
 #include "linux/fsl_qman.h"
-#include "regs.h"
-
-static inline void cpu_to_hw_sg(struct qm_sg_entry *qm_sg_ptr)
-{
-	dma_addr_t addr = qm_sg_ptr->opaque;
-
-	qm_sg_ptr->opaque = cpu_to_caam64(addr);
-	qm_sg_ptr->sgt_efl = cpu_to_caam32(qm_sg_ptr->sgt_efl);
-}
 
 static inline void dma_to_qm_sg_one(struct qm_sg_entry *qm_sg_ptr,
 				      dma_addr_t dma, u32 len, u16 offset)
@@ -54,8 +45,6 @@ static inline void dma_to_qm_sg_one(struct qm_sg_entry *qm_sg_ptr,
 	qm_sg_ptr->bpid = 0;
 	qm_sg_ptr->__reserved3 = 0;
 	qm_sg_ptr->offset = offset & QM_SG_OFFSET_MASK;
-
-	cpu_to_hw_sg(qm_sg_ptr);
 }
 
 /*
@@ -86,10 +75,7 @@ static inline void sg_to_qm_sg_last(struct scatterlist *sg, int sg_count,
 				      u16 offset)
 {
 	qm_sg_ptr = sg_to_qm_sg(sg, sg_count, qm_sg_ptr, offset);
-
-	qm_sg_ptr->sgt_efl = caam32_to_cpu(qm_sg_ptr->sgt_efl);
 	qm_sg_ptr->final = 1;
-	qm_sg_ptr->sgt_efl = cpu_to_caam32(qm_sg_ptr->sgt_efl);
 }
 
 #endif /* __SG_SW_QM_H */
-- 
1.7.5.4

