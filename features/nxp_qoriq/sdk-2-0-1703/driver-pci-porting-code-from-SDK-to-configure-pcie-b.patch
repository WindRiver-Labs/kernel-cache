From c6bd734ff02908b01beca81de5d1c7116d09d9df Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Fri, 25 Aug 2017 16:31:43 +0800
Subject: [PATCH 504/508] driver : pci: porting code from SDK to configure
 pcie bar and iATU

In function ls_pcie_host_init(), ls_pcie_disable_bars() is invoked to
disable all pcie bars and ls_pcie_disable_outbound_atus() is invoked
to disable all iATUS. Because SDK patch for file pcie-designware.c is
not applied and mainline code is used, the part of code to configure
pcie bar and iATU is omitted. This will cause kernel crash when access
pcie bar. Therefore, get omitted code from SDK to fixed this issue.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pci/host/pcie-designware.c |   15 +++++++++++++++
 1 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/drivers/pci/host/pcie-designware.c b/drivers/pci/host/pcie-designware.c
index eb76852..ea9e856 100644
--- a/drivers/pci/host/pcie-designware.c
+++ b/drivers/pci/host/pcie-designware.c
@@ -444,6 +444,7 @@ int dw_pcie_host_init(struct pcie_port *pp)
 	int i, ret;
 	LIST_HEAD(res);
 	struct resource_entry *win, *tmp;
+	u32 val;
 
 	cfg_res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "config");
 	if (cfg_res) {
@@ -556,6 +557,20 @@ int dw_pcie_host_init(struct pcie_port *pp)
 
 	if (pp->ops->host_init)
 		pp->ops->host_init(pp);
+	
+	if (!pp->ops->rd_other_conf)
+		dw_pcie_prog_outbound_atu(pp, PCIE_ATU_REGION_INDEX1,
+					PCIE_ATU_TYPE_MEM, pp->mem_base,
+					pp->mem_bus_addr, pp->mem_size);
+
+	dw_pcie_wr_own_conf(pp, PCI_BASE_ADDRESS_0, 4, 0);
+
+	/* program correct class for RC */
+	dw_pcie_wr_own_conf(pp, PCI_CLASS_DEVICE, 2, PCI_CLASS_BRIDGE_PCI);
+
+	dw_pcie_rd_own_conf(pp, PCIE_LINK_WIDTH_SPEED_CONTROL, 4, &val);
+	val |= PORT_LOGIC_SPEED_CHANGE;
+	dw_pcie_wr_own_conf(pp, PCIE_LINK_WIDTH_SPEED_CONTROL, 4, val);
 
 	pp->root_bus_nr = pp->busn->start;
 	if (IS_ENABLED(CONFIG_PCI_MSI)) {
-- 
1.7.5.4

