From 163b1b50b78ef2e14ce7448812f9cf375b54eb78 Mon Sep 17 00:00:00 2001
From: "J. German Rivera" <German.Rivera@freescale.com>
Date: Mon, 27 Apr 2015 19:00:15 -0500
Subject: [PATCH 023/508] staging: fsl-mc: Relax rules for
 FSL_MC_IO_ATOMIC_CONTEXT_PORTAL

Some drivers (e.g., DPNI) need to send MC commands with the same
mc_io object, from both atomic and non-atomic context. So, we
need to relax the rules to use mc_io objects created with the
FSL_MC_IO_ATOMIC_CONTEXT_PORTAL flag on, to allow this.

Signed-off-by: J. German Rivera <German.Rivera@freescale.com>
Change-Id: I7ccf7889edf569f8e38defa8115079214a02acc1
Reviewed-on: http://git.am.freescale.net:8181/35643
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-mc/bus/mc-sys.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/mc-sys.c b/drivers/staging/fsl-mc/bus/mc-sys.c
index 8faf1a7..f70dee8 100644
--- a/drivers/staging/fsl-mc/bus/mc-sys.c
+++ b/drivers/staging/fsl-mc/bus/mc-sys.c
@@ -632,6 +632,9 @@ static int mc_completion_wait(struct fsl_mc_io *mc_io, struct mc_command *cmd,
 	if (WARN_ON(!mc_io->dpmcp_dev))
 		return -EINVAL;
 
+	if (WARN_ON(mc_io->flags & FSL_MC_IO_ATOMIC_CONTEXT_PORTAL))
+		return -EINVAL;
+
 	for (;;) {
 		status = mc_read_response(mc_io->portal_virt_addr, cmd);
 		if (status != MC_CMD_STATUS_READY)
-- 
1.7.5.4

