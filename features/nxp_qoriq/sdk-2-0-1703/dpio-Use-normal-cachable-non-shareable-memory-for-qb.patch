From 8f347c05499ff0dba870ee467c1a54528eafb84a Mon Sep 17 00:00:00 2001
From: Haiying Wang <Haiying.Wang@freescale.com>
Date: Fri, 1 May 2015 14:11:59 -0400
Subject: [PATCH 054/508] dpio: Use normal cachable non-shareable memory for
 qbman cena

QBMan SWP CENA portal memory requires the memory to be cacheable,
and non-shareable.

Signed-off-by: Haiying Wang <Haiying.Wang@freescale.com>
Change-Id: I1c01cffe9ff2503fea2396d7cc761508f6e1ca85
Reviewed-on: http://git.am.freescale.net:8181/35487
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
(cherry picked from commit 2a7e1ede7e155d9219006999893912e0b029ce4c)
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-mc/bus/dpio/dpio-drv.c   |    2 +-
 drivers/staging/fsl-mc/bus/dpio/qbman_test.c |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c b/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
index 3c79bb0..f4e1d13 100644
--- a/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
+++ b/drivers/staging/fsl-mc/bus/dpio/dpio-drv.c
@@ -237,7 +237,7 @@ ldpaa_dpio_probe(struct fsl_mc_device *ls_dev)
 	desc.stash_affinity = next_cpu;
 	next_cpu = (next_cpu + 1) % num_active_cpus();
 	desc.dpio_id = ls_dev->obj_desc.id;
-	desc.regs_cena = ioremap_wc(ls_dev->regions[0].start,
+	desc.regs_cena = ioremap_cache_ns(ls_dev->regions[0].start,
 		resource_size(&ls_dev->regions[0]));
 	desc.regs_cinh = ioremap(ls_dev->regions[1].start,
 		resource_size(&ls_dev->regions[1]));
diff --git a/drivers/staging/fsl-mc/bus/dpio/qbman_test.c b/drivers/staging/fsl-mc/bus/dpio/qbman_test.c
index 1bb22b4..cf86559 100644
--- a/drivers/staging/fsl-mc/bus/dpio/qbman_test.c
+++ b/drivers/staging/fsl-mc/bus/dpio/qbman_test.c
@@ -301,7 +301,7 @@ int qbman_test(void)
 	struct qbman_swp_desc pd;
 	uint32_t reg;
 
-	pd.cena_bar = ioremap_wc(QBMAN_SWP_CENA_BASE +
+	pd.cena_bar = ioremap_cache_ns(QBMAN_SWP_CENA_BASE +
 				QBMAN_PORTAL_IDX * 0x10000, 0x10000);
 	pd.cinh_bar = ioremap(QBMAN_SWP_CINH_BASE +
 				QBMAN_PORTAL_IDX * 0x10000, 0x10000);
-- 
1.7.5.4

