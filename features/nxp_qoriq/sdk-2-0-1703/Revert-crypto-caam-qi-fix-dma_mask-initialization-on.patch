From d2131c3c73d8bea71baa6527e5956050764eb776 Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Wed, 20 Sep 2017 16:33:54 +0800
Subject: [PATCH 05/73] Revert "crypto: caam/qi - fix dma_mask initialization
 on ARM32"

This reverts commit 4286b543ef36dd1882282c3d5091745a4c60be68.

This patch is from nxp-sdk-2.0, it is based on kernel4.1.
So far, there is related code that includes this patch in mainline.
So, get patch from upstream.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/caam/qi.c |   18 ++++++++++--------
 1 files changed, 10 insertions(+), 8 deletions(-)

diff --git a/drivers/crypto/caam/qi.c b/drivers/crypto/caam/qi.c
index 94e4819..f80cbd7 100644
--- a/drivers/crypto/caam/qi.c
+++ b/drivers/crypto/caam/qi.c
@@ -795,15 +795,11 @@ static void free_rsp_fqs(void)
 int caam_qi_init(struct platform_device *caam_pdev, struct device_node *np)
 {
 	struct platform_device *qi_pdev;
-	struct device *ctrldev = &caam_pdev->dev, *qidev;
+	struct device *ctrldev, *qidev;
 	struct caam_drv_private *ctrlpriv;
 	int err, i;
 	const cpumask_t *cpus = qman_affine_cpus();
 	struct cpumask old_cpumask = *tsk_cpus_allowed(current);
-	static struct platform_device_info qi_pdev_info = {
-		.name = "caam_qi",
-		.id = PLATFORM_DEVID_NONE
-	};
 
 	/*
 	 * QMAN requires that CGR must be removed from same CPU+portal from
@@ -815,18 +811,24 @@ int caam_qi_init(struct platform_device *caam_pdev, struct device_node *np)
 	mod_init_cpu = cpumask_first(cpus);
 	set_cpus_allowed_ptr(current, get_cpu_mask(mod_init_cpu));
 
-	qi_pdev_info.parent = ctrldev;
-	qi_pdev_info.dma_mask = dma_get_mask(ctrldev);
-	qi_pdev = platform_device_register_full(&qi_pdev_info);
+	qi_pdev = platform_device_register_simple("caam_qi", 0, NULL, 0);
 	if (IS_ERR(qi_pdev))
 		return PTR_ERR(qi_pdev);
 
+	ctrldev = &caam_pdev->dev;
 	ctrlpriv = dev_get_drvdata(ctrldev);
 	qidev = &qi_pdev->dev;
 
 	qipriv.qi_pdev = qi_pdev;
 	dev_set_drvdata(qidev, &qipriv);
 
+	/* Copy dma mask from controlling device */
+	err = dma_set_mask(qidev, dma_get_mask(ctrldev));
+	if (err) {
+		platform_device_unregister(qi_pdev);
+		return -ENODEV;
+	}
+
 	/* Response path cannot be congested */
 	caam_congested = false;
 
-- 
1.7.5.4

