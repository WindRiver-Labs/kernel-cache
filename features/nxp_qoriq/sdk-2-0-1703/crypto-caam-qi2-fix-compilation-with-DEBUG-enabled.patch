From 7b23de0a7808cfdbef627366b224dbda1c29d6c6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@nxp.com>
Date: Thu, 11 May 2017 10:36:45 +0300
Subject: [PATCH 19/38] crypto: caam/qi2 - fix compilation with DEBUG enabled
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

commit ce617caf41cd33fb813136c2a05364d5da3c581b from
https://github.com/qoriq-open-source/linux.git

Fix caam/qi2 driver compilation when DEBUG is enabled
(CRYPTO_DEV_FSL_CAAM_DEBUG=y):

drivers/crypto/caam/caamalg_qi2.c: In function 'aead_setkey':
drivers/crypto/caam/caamalg_qi2.c:528:38: error: 'key_in' undeclared
(first use in this function)
          DUMP_PREFIX_ADDRESS, 16, 4, key_in, keylen, 1);
                                      ^
drivers/crypto/caam/caamalg_qi2.c:528:38: note: each undeclared
identifier is reported only once for each function it appears in
drivers/crypto/caam/caamalg_qi2.c: In function 'aead_encrypt_done':
drivers/crypto/caam/caamalg_qi2.c:1573:61: error: 'err' undeclared
(first use in this function)
  dev_err(ctx->dev, "%s %d: err 0x%x\n", __func__, __LINE__, err);
                                                             ^
drivers/crypto/caam/caamalg_qi2.c: In function 'aead_decrypt_done':
drivers/crypto/caam/caamalg_qi2.c:1598:61: error: 'err' undeclared
(first use in this function)
  dev_err(ctx->dev, "%s %d: err 0x%x\n", __func__, __LINE__, err);
                                                             ^
drivers/crypto/caam/caamalg_qi2.c: In function 'ablkcipher_done':
drivers/crypto/caam/caamalg_qi2.c:1704:61: error: 'err' undeclared
(first use in this function)
  dev_err(ctx->dev, "%s %d: err 0x%x\n", __func__, __LINE__, err);
                                                             ^

Fixes: 21806c254f4a ("crypto: caam/qi2 - add DPAA2-CAAM driver")
Fixes: 3304cccd4732 ("crypto: caam/qi2 - add ablkcipher algorithms")
Reported-by: Radu Alexe <radu.alexe@nxp.com>
Signed-off-by: Horia GeantÄƒ <horia.geanta@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/caam/caamalg_qi2.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/crypto/caam/caamalg_qi2.c b/drivers/crypto/caam/caamalg_qi2.c
index c098668..9537b25 100644
--- a/drivers/crypto/caam/caamalg_qi2.c
+++ b/drivers/crypto/caam/caamalg_qi2.c
@@ -525,7 +525,7 @@ static int aead_setkey(struct crypto_aead *aead, const u8 *key,
 	dev_err(dev, "split keylen %d split keylen padded %d\n",
 		ctx->adata.keylen, ctx->adata.keylen_pad);
 	print_hex_dump(KERN_ERR, "ctx.key@" __stringify(__LINE__)": ",
-		       DUMP_PREFIX_ADDRESS, 16, 4, key_in, keylen, 1);
+		       DUMP_PREFIX_ADDRESS, 16, 4, keys.authkey, keylen, 1);
 #endif
 
 	if (ctx->adata.keylen_pad + keys.enckeylen > CAAM_MAX_KEY_SIZE)
@@ -1570,7 +1570,7 @@ static void aead_encrypt_done(void *cbk_ctx, u32 status)
 	int ecode = 0;
 
 #ifdef DEBUG
-	dev_err(ctx->dev, "%s %d: err 0x%x\n", __func__, __LINE__, err);
+	dev_err(ctx->dev, "%s %d: err 0x%x\n", __func__, __LINE__, status);
 #endif
 
 	if (unlikely(status)) {
@@ -1595,7 +1595,7 @@ static void aead_decrypt_done(void *cbk_ctx, u32 status)
 	int ecode = 0;
 
 #ifdef DEBUG
-	dev_err(ctx->dev, "%s %d: err 0x%x\n", __func__, __LINE__, err);
+	dev_err(ctx->dev, "%s %d: err 0x%x\n", __func__, __LINE__, status);
 #endif
 
 	if (unlikely(status)) {
@@ -1701,7 +1701,7 @@ static void ablkcipher_done(void *cbk_ctx, u32 status)
 #ifdef DEBUG
 	int ivsize = crypto_ablkcipher_ivsize(ablkcipher);
 
-	dev_err(ctx->dev, "%s %d: err 0x%x\n", __func__, __LINE__, err);
+	dev_err(ctx->dev, "%s %d: err 0x%x\n", __func__, __LINE__, status);
 #endif
 
 	if (unlikely(status)) {
@@ -1713,9 +1713,9 @@ static void ablkcipher_done(void *cbk_ctx, u32 status)
 	print_hex_dump(KERN_ERR, "dstiv  @" __stringify(__LINE__)": ",
 		       DUMP_PREFIX_ADDRESS, 16, 4, req->info,
 		       edesc->src_nents > 1 ? 100 : ivsize, 1);
-	dbg_dump_sg(KERN_ERR, "dst    @" __stringify(__LINE__)": ",
-		    DUMP_PREFIX_ADDRESS, 16, 4, req->dst,
-		    edesc->dst_nents > 1 ? 100 : req->nbytes, 1);
+	caam_dump_sg(KERN_ERR, "dst    @" __stringify(__LINE__)": ",
+		     DUMP_PREFIX_ADDRESS, 16, 4, req->dst,
+		     edesc->dst_nents > 1 ? 100 : req->nbytes, 1);
 #endif
 
 	ablkcipher_unmap(ctx->dev, edesc, req);
-- 
1.7.5.4

