From 3191138e9c7941e6638d83c16541ba90e1d4e033 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Thu, 22 Dec 2016 11:31:19 +0200
Subject: [PATCH 433/508] staging: fsl-dpaa2/eth: Minor optimization on Tx
 path

Use a pointer to the egress fq to avoid copying the entire
structure in dpaa2_eth_tx().

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 64eaf7a..6087619 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -681,7 +681,7 @@ static int dpaa2_eth_tx(struct sk_buff *skb, struct net_device *net_dev)
 	struct dpaa2_fd fd;
 	struct rtnl_link_stats64 *percpu_stats;
 	struct dpaa2_eth_drv_stats *percpu_extras;
-	struct dpaa2_eth_fq fq;
+	struct dpaa2_eth_fq *fq;
 	u16 queue_mapping = skb_get_queue_mapping(skb);
 	int err, i;
 
@@ -729,10 +729,10 @@ static int dpaa2_eth_tx(struct sk_buff *skb, struct net_device *net_dev)
 	/* Tracing point */
 	trace_dpaa2_tx_fd(net_dev, &fd);
 
-	fq = priv->fq[queue_mapping];
+	fq = &priv->fq[queue_mapping];
 	for (i = 0; i < DPAA2_ETH_ENQUEUE_RETRIES; i++) {
 		err = dpaa2_io_service_enqueue_qd(NULL, priv->tx_qdid, 0,
-				fq.tx_qdbin, &fd);
+						  fq->tx_qdbin, &fd);
 		/* TODO: This doesn't work. Check on simulator.
 		 * err = dpaa2_io_service_enqueue_fq(NULL,
 		 *			priv->fq[0].fqid_tx, &fd);
-- 
1.7.5.4

