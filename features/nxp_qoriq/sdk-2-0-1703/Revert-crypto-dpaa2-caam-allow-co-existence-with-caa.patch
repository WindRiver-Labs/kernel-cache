From f35ba3b8c60918ec6f54f762abd38dcf4deb6a75 Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Wed, 11 Oct 2017 13:38:06 +0800
Subject: [PATCH 07/29] Revert "crypto: dpaa2-caam - allow co-existence with
 caam driver"

This reverts commit c40804712ea345056bc714f9c42a6a575207d869.

At first, dpaa2-caam patches are from nxp-sdk-2.0 that is based on
kernel4.1. But in kernel4.8, there is a obvious changing on crypto
software architecture, so modify code to pass compilation, but this
feature is not verified.
Now, there is an open source sdk that is based on kernel4.4. In
kernel4.4, crypto software architecture is almost the same with
kernel4.8, so we get dpaa2-caam patches from open source sdk, and
revert patches from nxp-sdk-2.0.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/dpaa2-caam/dpaa2-caam.c |   28 ++++++++++++++--------------
 drivers/crypto/dpaa2-caam/error.c      |    4 ++--
 drivers/crypto/dpaa2-caam/error.h      |    2 +-
 3 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/drivers/crypto/dpaa2-caam/dpaa2-caam.c b/drivers/crypto/dpaa2-caam/dpaa2-caam.c
index 9b408d9..787b736 100644
--- a/drivers/crypto/dpaa2-caam/dpaa2-caam.c
+++ b/drivers/crypto/dpaa2-caam/dpaa2-caam.c
@@ -593,7 +593,7 @@ struct split_key_result {
 	struct device *dev;
 };
 
-static void split_key_done(void *cbk_ctx, u32 err)
+void split_key_done(void *cbk_ctx, u32 err)
 {
 	struct split_key_result *res = cbk_ctx;
 
@@ -602,15 +602,15 @@ static void split_key_done(void *cbk_ctx, u32 err)
 #endif
 
 	if (err)
-		dpaa2_caam_jr_strstatus(res->dev, err);
+		caam_jr_strstatus(res->dev, err);
 
 	res->err = err;
 	complete(&res->completion);
 }
 
-static int gen_split_key(struct device *dev, u8 *key_out, int split_key_len,
-			 int split_key_pad_len, const u8 *key_in, u32 keylen,
-			 u32 alg_op)
+int gen_split_key(struct device *dev, u8 *key_out, int split_key_len,
+		  int split_key_pad_len, const u8 *key_in, u32 keylen,
+		  u32 alg_op)
 {
 	struct caam_request *req_ctx;
 	u32 *desc;
@@ -1993,7 +1993,7 @@ static void aead_encrypt_done(void *cbk_ctx, u32 err)
 #endif
 
 	if (unlikely(err))
-		dpaa2_caam_jr_strstatus(ctx->priv->dev, err);
+		caam_jr_strstatus(ctx->priv->dev, err);
 
 	aead_unmap(ctx->priv->dev, edesc, req);
 
@@ -2036,7 +2036,7 @@ static void aead_decrypt_done(void *cbk_ctx, u32 err)
 #endif
 
 	if (unlikely(err))
-		dpaa2_caam_jr_strstatus(ctx->priv->dev, err);
+		caam_jr_strstatus(ctx->priv->dev, err);
 
 	aead_unmap(ctx->priv->dev, edesc, req);
 
@@ -2182,7 +2182,7 @@ static void ablkcipher_encrypt_done(void *cbk_ctx, u32 err)
 #endif
 
 	if (unlikely(err))
-		dpaa2_caam_jr_strstatus(ctx->priv->dev, err);
+		caam_jr_strstatus(ctx->priv->dev, err);
 
 #ifdef DEBUG
 	print_hex_dump(KERN_ERR, "dstiv  @"__stringify(__LINE__)": ",
@@ -2214,7 +2214,7 @@ static void ablkcipher_decrypt_done(void *cbk_ctx, u32 err)
 #endif
 
 	if (unlikely(err))
-		dpaa2_caam_jr_strstatus(ctx->priv->dev, err);
+		caam_jr_strstatus(ctx->priv->dev, err);
 
 #ifdef DEBUG
 	print_hex_dump(KERN_ERR, "dstiv  @"__stringify(__LINE__)": ",
@@ -3578,7 +3578,7 @@ static void ahash_done(void *cbk_ctx, u32 err)
 #endif
 
 	if (unlikely(err))
-		dpaa2_caam_jr_strstatus(ctx->priv->dev, err);
+		caam_jr_strstatus(ctx->priv->dev, err);
 
 	ahash_unmap(ctx->priv->dev, edesc, req, digestsize);
 	qi_cache_free(edesc);
@@ -3611,7 +3611,7 @@ static void ahash_done_bi(void *cbk_ctx, u32 err)
 #endif
 
 	if (unlikely(err))
-		dpaa2_caam_jr_strstatus(ctx->priv->dev, err);
+		caam_jr_strstatus(ctx->priv->dev, err);
 
 	ahash_unmap_ctx(ctx->priv->dev, edesc, req, ctx->ctx_len,
 			DMA_BIDIRECTIONAL);
@@ -3645,7 +3645,7 @@ static void ahash_done_ctx_src(void *cbk_ctx, u32 err)
 #endif
 
 	if (unlikely(err))
-		dpaa2_caam_jr_strstatus(ctx->priv->dev, err);
+		caam_jr_strstatus(ctx->priv->dev, err);
 
 	ahash_unmap_ctx(ctx->priv->dev, edesc, req, digestsize, DMA_TO_DEVICE);
 	qi_cache_free(edesc);
@@ -3678,7 +3678,7 @@ static void ahash_done_ctx_dst(void *cbk_ctx, u32 err)
 #endif
 
 	if (unlikely(err))
-		dpaa2_caam_jr_strstatus(ctx->priv->dev, err);
+		caam_jr_strstatus(ctx->priv->dev, err);
 
 	ahash_unmap_ctx(ctx->priv->dev, edesc, req, ctx->ctx_len,
 			DMA_FROM_DEVICE);
@@ -4922,7 +4922,7 @@ static void dpaa2_caam_process_fd(struct dpaa2_caam_priv *priv,
 	err = dpaa2_fd_get_frc(fd);
 	if (err) {
 		dev_err(priv->dev, "FD[FRC] err = %x\n", err);
-		dpaa2_caam_jr_strstatus(priv->dev, err);
+		caam_jr_strstatus(priv->dev, err);
 		return;
 	}
 
diff --git a/drivers/crypto/dpaa2-caam/error.c b/drivers/crypto/dpaa2-caam/error.c
index 9548416..9e6ea15 100644
--- a/drivers/crypto/dpaa2-caam/error.c
+++ b/drivers/crypto/dpaa2-caam/error.c
@@ -301,7 +301,7 @@ static void report_cond_code_status(struct device *jrdev, const u32 status,
 		status, error, __func__);
 }
 
-void dpaa2_caam_jr_strstatus(struct device *jrdev, u32 status)
+void caam_jr_strstatus(struct device *jrdev, u32 status)
 {
 	static const struct stat_src {
 		void (*report_ssed)(struct device *jrdev, const u32 status,
@@ -339,4 +339,4 @@ void dpaa2_caam_jr_strstatus(struct device *jrdev, u32 status)
 	else
 		dev_err(jrdev, "%d: unknown error source\n", ssrc);
 }
-EXPORT_SYMBOL(dpaa2_caam_jr_strstatus);
+EXPORT_SYMBOL(caam_jr_strstatus);
diff --git a/drivers/crypto/dpaa2-caam/error.h b/drivers/crypto/dpaa2-caam/error.h
index 537b6d4..b06bfd7 100644
--- a/drivers/crypto/dpaa2-caam/error.h
+++ b/drivers/crypto/dpaa2-caam/error.h
@@ -32,5 +32,5 @@
 #ifndef CAAM_ERROR_H
 #define CAAM_ERROR_H
 #define CAAM_ERROR_STR_MAX 302
-void dpaa2_caam_jr_strstatus(struct device *jrdev, u32 status);
+void caam_jr_strstatus(struct device *jrdev, u32 status);
 #endif /* CAAM_ERROR_H */
-- 
1.7.5.4

