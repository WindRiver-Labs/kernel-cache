From 75db3590ab980402b8d394fe178ac179e68319df Mon Sep 17 00:00:00 2001
From: Tang Yuantian <Yuantian.Tang@nxp.com>
Date: Fri, 24 Jun 2016 11:15:57 +0800
Subject: [PATCH 1/2] ahci: ls1012a: add sata support

Ls1012a is new soc with sata controller.
The SATA controller includes the following features:
 1. Complies with the serial ATA 3.0 specification and the AHCI 1.3.1
    specification
 2. Contains a high-speed descriptor-based DMA controller
 3. Supports the following:
    a. Speeds of 1.5 Gb/s (first-generation SATA), 3 Gb/s
    (second-generation SATA), and 6 Gb/s (third-generation SATA)
    b. FIS-based switching
    c. Native command queuing (NCQ) commands
    d. Port multiplier operation
    e. Asynchronous notification
    f. SATA Vendor BIST mode

Signed-off-by: Tang Yuantian <yuantian.tang@nxp.com>
[Original patch taken from LS1012A-SDK-20161230-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 arch/arm64/boot/dts/freescale/fsl-ls1012a.dtsi |    9 +++------
 drivers/ata/ahci_qoriq.c                       |   17 +++++++++++++++++
 2 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/arch/arm64/boot/dts/freescale/fsl-ls1012a.dtsi b/arch/arm64/boot/dts/freescale/fsl-ls1012a.dtsi
index 8e4108a..0f7c5ad 100644
--- a/arch/arm64/boot/dts/freescale/fsl-ls1012a.dtsi
+++ b/arch/arm64/boot/dts/freescale/fsl-ls1012a.dtsi
@@ -450,13 +450,10 @@
 		};
 
 		sata: sata@3200000 {
-			compatible = "fsl,ls1012a-ahci", "fsl,ls1043a-ahci";
-			reg = <0x0 0x3200000 0x0 0x10000>,
-			      <0x0 0x20140520 0x0 0x4>;
-			reg-names = "ahci", "sata-ecc";
-			interrupts = <0 69 IRQ_TYPE_LEVEL_HIGH>;
+			compatible = "fsl,ls1012a-ahci";
+			reg = <0x0 0x3200000 0x0 0x10000>;
+			interrupts = <0 69 0x4>;
 			clocks = <&clockgen 4 0>;
-			dma-coherent;
 		};
 
 		msi: msi-controller {
diff --git a/drivers/ata/ahci_qoriq.c b/drivers/ata/ahci_qoriq.c
index 3f0ffa9..90842ec 100644
--- a/drivers/ata/ahci_qoriq.c
+++ b/drivers/ata/ahci_qoriq.c
@@ -50,11 +50,18 @@
 #define LS1043A_PORT_PHY2	0x28184d1f
 #define LS1043A_PORT_PHY3	0x0e081509
 
+/* for ls1012a */
+#define LS1012A_PORT_PHY2	0x28184d1b
+#define LS1012A_PORT_PHY3	0x0e081906
+#define LS1012A_PORT_PHY4	0x064a0813
+#define LS1012A_PORT_PHY5	0x3ffc96a4
+
 enum ahci_qoriq_type {
 	AHCI_LS1021A,
 	AHCI_LS1043A,
 	AHCI_LS1046A,
 	AHCI_LS2080A,
+	AHCI_LS1012A,
 };
 
 struct ahci_qoriq_priv {
@@ -69,6 +76,7 @@ static const struct of_device_id ahci_qoriq_of_match[] = {
 	{ .compatible = "fsl,ls1043a-ahci", .data = (void *)AHCI_LS1043A},
 	{ .compatible = "fsl,ls1046a-ahci", .data = (void *)AHCI_LS1046A},
 	{ .compatible = "fsl,ls2080a-ahci", .data = (void *)AHCI_LS2080A},
+	{ .compatible = "fsl,ls1012a-ahci", .data = (void *)AHCI_LS1012A},
 	{},
 };
 MODULE_DEVICE_TABLE(of, ahci_qoriq_of_match);
@@ -195,6 +203,15 @@ static int ahci_qoriq_phy_init(struct ahci_host_priv *hpriv)
 		writel(AHCI_PORT_PHY_1_CFG, reg_base + PORT_PHY1);
 		writel(AHCI_PORT_TRANS_CFG, reg_base + PORT_TRANS);
 		break;
+
+	case AHCI_LS1012A:
+		writel(AHCI_PORT_PHY_1_CFG, reg_base + PORT_PHY1);
+		writel(LS1012A_PORT_PHY2, reg_base + PORT_PHY2);
+		writel(LS1012A_PORT_PHY3, reg_base + PORT_PHY3);
+		writel(LS1012A_PORT_PHY4, reg_base + PORT_PHY4);
+		writel(LS1012A_PORT_PHY5, reg_base + PORT_PHY5);
+		writel(AHCI_PORT_TRANS_CFG, reg_base + PORT_TRANS);
+		break;
 	}
 
 	return 0;
-- 
1.7.5.4

