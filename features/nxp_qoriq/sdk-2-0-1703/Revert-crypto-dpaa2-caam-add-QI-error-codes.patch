From c2c44f9cdaf16fdb3666a5351568d1f856b904fe Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Wed, 11 Oct 2017 13:53:12 +0800
Subject: [PATCH 26/29] Revert "crypto: dpaa2-caam - add QI error codes"

This reverts commit ca0d6b5db34b2feb1e5110bf1698eb9a942a27bb.

At first, dpaa2-caam patches are from nxp-sdk-2.0 that is based on
kernel4.1. But in kernel4.8, there is a obvious changing on crypto
software architecture, so modify code to pass compilation, but this
feature is not verified.
Now, there is an open source sdk that is based on kernel4.4. In
kernel4.4, crypto software architecture is almost the same with
kernel4.8, so we get dpaa2-caam patches from open source sdk, and
revert patches from nxp-sdk-2.0.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/dpaa2-caam/error.c |   70 +------------------------------------
 drivers/crypto/dpaa2-caam/regs.h  |    2 -
 2 files changed, 1 insertions(+), 71 deletions(-)

diff --git a/drivers/crypto/dpaa2-caam/error.c b/drivers/crypto/dpaa2-caam/error.c
index 4205c23..b39944f 100644
--- a/drivers/crypto/dpaa2-caam/error.c
+++ b/drivers/crypto/dpaa2-caam/error.c
@@ -92,53 +92,6 @@ static const struct {
 	{ 0xF1, "3GPP HFN matches or exceeds the Threshold" },
 };
 
-static const struct {
-	u8 value;
-	const char *error_text;
-} qi_error_list[] = {
-	{ 0x1F, "Job terminated by FQ or ICID flush" },
-	{ 0x20, "FD format error"},
-	{ 0x21, "FD command format error"},
-	{ 0x23, "FL format error"},
-	{ 0x25, "CRJD specified in FD, but not enabled in FLC"},
-	{ 0x30, "Max. buffer size too small"},
-	{ 0x31, "DHR exceeds max. buffer size (allocate mode, S/G format)"},
-	{ 0x32, "SGT exceeds max. buffer size (allocate mode, S/G format"},
-	{ 0x33, "Size over/underflow (allocate mode)"},
-	{ 0x34, "Size over/underflow (reuse mode)"},
-	{ 0x35, "Length exceeds max. short length (allocate mode, S/G/ format)"},
-	{ 0x36, "Memory footprint exceeds max. value (allocate mode, S/G/ format)"},
-	{ 0x41, "SBC frame format not supported (allocate mode)"},
-	{ 0x42, "Pool 0 invalid / pool 1 size < pool 0 size (allocate mode)"},
-	{ 0x43, "Annotation output enabled but ASAR = 0 (allocate mode)"},
-	{ 0x44, "Unsupported or reserved frame format or SGHR = 1 (reuse mode)"},
-	{ 0x45, "DHR correction underflow (reuse mode, single buffer format)"},
-	{ 0x46, "Annotation length exceeds offset (reuse mode)"},
-	{ 0x48, "Annotation output enabled but ASA limited by ASAR (reuse mode)"},
-	{ 0x49, "Data offset correction exceeds input frame data length (reuse mode)"},
-	{ 0x4B, "Annotation output enabled but ASA cannote be expanded (frame list)"},
-	{ 0x51, "Unsupported IF reuse mode"},
-	{ 0x52, "Unsupported FL use mode"},
-	{ 0x53, "Unsupported RJD use mode"},
-	{ 0x54, "Unsupported inline descriptor use mode"},
-	{ 0xC0, "Table buffer pool 0 depletion"},
-	{ 0xC1, "Table buffer pool 1 depletion"},
-	{ 0xC2, "Data buffer pool 0 depletion, no OF allocated"},
-	{ 0xC3, "Data buffer pool 1 depletion, no OF allocated"},
-	{ 0xC4, "Data buffer pool 0 depletion, partial OF allocated"},
-	{ 0xC5, "Data buffer pool 1 depletion, partial OF allocated"},
-	{ 0xD0, "FLC read error"},
-	{ 0xD1, "FL read error"},
-	{ 0xD2, "FL write error"},
-	{ 0xD3, "OF SGT write error"},
-	{ 0xD4, "PTA read error"},
-	{ 0xD5, "PTA write error"},
-	{ 0xD6, "OF SGT F-bit write error"},
-	{ 0xD7, "ASA write error"},
-	{ 0xE1, "FLC[ICR]=0 ICID error"},
-	{ 0xE2, "FLC[ICR]=1 ICID error"},
-	{ 0xE4, "source of ICID flush not trusted (BDI = 0)"},
-};
 static const char * const cha_id_list[] = {
 	"",
 	"AES",
@@ -268,27 +221,6 @@ static void report_deco_status(struct device *jrdev, const u32 status,
 		status, error, idx_str, idx, err_str, err_err_code);
 }
 
-static void report_qi_status(struct device *qidev, const u32 status,
-			     const char *error)
-{
-	u8 err_id = status & JRSTA_QIERR_ERROR_MASK;
-	const char *err_str = "unidentified error value 0x";
-	char err_err_code[3] = { 0 };
-	int i;
-
-	for (i = 0; i < ARRAY_SIZE(qi_error_list); i++)
-		if (qi_error_list[i].value == err_id)
-			break;
-
-	if (i != ARRAY_SIZE(qi_error_list) && qi_error_list[i].error_text)
-		err_str = qi_error_list[i].error_text;
-	else
-		snprintf(err_err_code, sizeof(err_err_code), "%02x", err_id);
-
-	dev_err(qidev, "%08x: %s: %s%s\n",
-		status, error, err_str, err_err_code);
-}
-
 static void report_jr_status(struct device *jrdev, const u32 status,
 			     const char *error)
 {
@@ -315,7 +247,7 @@ void caam_jr_strstatus(struct device *jrdev, u32 status)
 		{ report_ccb_status, "CCB" },
 		{ report_jump_status, "Jump" },
 		{ report_deco_status, "DECO" },
-		{ report_qi_status, "Queue Manager Interface" },
+		{ NULL, "Queue Manager Interface" },
 		{ report_jr_status, "Job Ring" },
 		{ report_cond_code_status, "Condition Code" },
 		{ NULL, NULL },
diff --git a/drivers/crypto/dpaa2-caam/regs.h b/drivers/crypto/dpaa2-caam/regs.h
index 8e8870a..811d2dc 100644
--- a/drivers/crypto/dpaa2-caam/regs.h
+++ b/drivers/crypto/dpaa2-caam/regs.h
@@ -545,8 +545,6 @@ struct caam_job_ring {
 #define JRSTA_DECOERR_INVSIGN       0x86
 #define JRSTA_DECOERR_DSASIGN       0x87
 
-#define JRSTA_QIERR_ERROR_MASK      0x00ff
-
 #define JRSTA_CCBERR_JUMP           0x08000000
 #define JRSTA_CCBERR_INDEX_MASK     0xff00
 #define JRSTA_CCBERR_INDEX_SHIFT    8
-- 
1.7.5.4

