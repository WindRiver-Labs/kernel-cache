From 6484a2f0334aa1c53d5f0f58a2e26767f07463f0 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Thu, 26 Oct 2017 03:01:21 +0000
Subject: [PATCH 2/2] irqchip/irq-ls-scfg-msi: convert to use
 irq_set_chained_handler_and_data

To avoid the below call trace and NULL pointer of "desc->irq_common_data.handler_data",
which is used before assigning a value, convert to use irq_set_chained_handler_and_data.

[    2.056541] Unable to handle kernel NULL pointer dereference at virtual address 00000000
[    2.064700] pgd = ffff000008f8d000
[    2.068126] [00000000] *pgd=00000000afffd003, *pud=00000000afffc003, *pmd=0000000000000000
[    2.076471] Internal error: Oops: 96000004 [#1] PREEMPT SMP
[    2.082089] Modules linked in:
[    2.085171] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.8.24-WR9.0.0.11_standard #3
[    2.092890] Hardware name: LS1012A RDB Board (DT)
[    2.097631] task: ffff80002d938000 task.stack: ffff80002d940000
[    2.103606] PC is at ls_scfg_msi_cascade+0x28/0x198
[    2.108525] LR is at generic_handle_irq+0x34/0x50
[    2.113264] pc : [<ffff0000084a3600>] lr : [<ffff0000080f5a54>] pstate: 800001c5
[    2.120719] sp : ffff80002ffd0f70
[    2.124056] x29: ffff80002ffd0f70 x28: ffff80002d940000
[    2.129414] x27: ffff80002d943930 x26: ffff80002d80c800
[    2.134770] x25: 0000000000000001 x24: 0000000000000000
[    2.140127] x23: ffff000008d57018 x22: 0000000000000000
[    2.145484] x21: 0000000000000019 x20: 0000000000000000
[    2.150840] x19: ffff80002cc54000 x18: 0000000000000010
[    2.156196] x17: 000000000000000a x16: 0000000000000000
[    2.161551] x15: ffff000008056fff x14: ffff000008d8e000
[    2.166908] x13: ffff000008056fff x12: ffff000008d56f98
[    2.172264] x11: ffff0000084a3000 x10: 0101010101010101
[    2.177622] x9 : 0000000000000040 x8 : 0000000000000000
[    2.182978] x7 : ffff80002cc54000 x6 : ffff80002d400000
[    2.188334] x5 : ffff80002cc54000 x4 : ffff80002cc54000
[    2.193691] x3 : 0000000000000000 x2 : 0000000000000000
[    2.199047] x1 : ffff0000084a35d8 x0 : ffff0000080f5a54
[    2.204403]
[    2.205900] Process swapper/0 (pid: 1, stack limit = 0xffff80002d940020)
[    2.212657] Stack: (0xffff80002ffd0f70 to 0xffff80002d944000)
[    2.218449] Call trace:
[    2.220911] Exception stack(0xffff80002ffd0da0 to 0xffff80002ffd0ed0)
[    2.227407] 0da0: ffff80002cc54000 0001000000000000 ffff80002ffd0f70 ffff0000084a3600
[    2.235304] 0dc0: ffff80002ffd8c00 ffff80002d939800 0000000000000000 0000000000000001
[    2.243202] 0de0: 0000000000000001 0000000000000000 ffff80002ffd8c00 ffff000008d56a60
[    2.251099] 0e00: 0000000000000000 0000000000000000 ffff80002ffd0e40 ffff0000080cf294
[    2.258996] 0e20: 0000000000000000 ffff80002d939800 ffff80002ffd8c00 0000000000000009
[    2.266893] 0e40: ffff0000080f5a54 ffff0000084a35d8 0000000000000000 0000000000000000
[    2.274791] 0e60: ffff80002cc54000 ffff80002cc54000 ffff80002d400000 ffff80002cc54000
[    2.282688] 0e80: 0000000000000000 0000000000000040 0101010101010101 ffff0000084a3000
[    2.290585] 0ea0: ffff000008d56f98 ffff000008056fff ffff000008d8e000 ffff000008056fff
[    2.298481] 0ec0: 0000000000000000 000000000000000a
[    2.303400] [<ffff0000084a3600>] ls_scfg_msi_cascade+0x28/0x198
[    2.309369] [<ffff0000080f5a54>] generic_handle_irq+0x34/0x50
[    2.315162] [<ffff0000080f5e24>] __handle_domain_irq+0x8c/0x100
[    2.321133] [<ffff00000808158c>] gic_handle_irq+0x6c/0xc8
[    2.326574] Exception stack(0xffff80002d943930 to 0xffff80002d943a60)
[    2.333068] 3920:                                   0000000000000005 0000000000000040
[    2.340966] 3940: 0000000000000001 ffff000008d57018 ffff80002d943a80 ffff80002ffd1090
[    2.348864] 3960: 0000000000000000 ffff80002cc54000 0000000000000000 0000000000000040
[    2.356761] 3980: 0101010101010101 ffff0000084a3000 ffff000008d56f98 ffff000008056fff
[    2.364659] 39a0: ffff000008d8e000 ffff000008056fff 0000000000000000 000000000000000a
[    2.372557] 39c0: 0000000000000010 0000000000000040 ffff80002cc5409c 0000000000000040
[    2.380454] 39e0: 0000000000000001 0000000000000004 ffff0000084a35d8 ffff80002cc52980
[    2.388351] 3a00: 0000000000000000 0000000000000000 ffff80002cc52980 ffff80002d943a60
[    2.396249] 3a20: ffff0000080f5fa8 ffff80002d943a60 ffff0000089df574 0000000000000045
[    2.404147] 3a40: ffff80002d943a70 ffff0000080fb0e0 ffffffffffffffff ffff80002cc54020
[    2.412045] [<ffff000008082fb4>] el1_irq+0xb4/0x128
[    2.416965] [<ffff0000089df574>] _raw_spin_unlock_irqrestore+0x2c/0x68
[    2.423547] [<ffff0000080f5fa8>] __irq_put_desc_unlock+0x30/0x60
[    2.429606] [<ffff0000080fb224>] __irq_set_handler+0x64/0x78
[    2.435312] [<ffff0000084a3e08>] ls_scfg_msi_probe+0x248/0x3f0
[    2.441194] [<ffff000008541908>] platform_drv_probe+0x60/0xc8
[    2.446990] [<ffff00000853f6f0>] driver_probe_device+0x210/0x2a8
[    2.453047] [<ffff00000853f844>] __driver_attach+0xbc/0xc0
[    2.458579] [<ffff00000853d388>] bus_for_each_dev+0x70/0xb0
[    2.464199] [<ffff00000853eda0>] driver_attach+0x30/0x40
[    2.469556] [<ffff00000853e8a0>] bus_add_driver+0x118/0x238
[    2.475177] [<ffff000008540380>] driver_register+0x68/0x100
[    2.480795] [<ffff00000854182c>] __platform_driver_register+0x54/0x60
[    2.487291] [<ffff000008ca4aa4>] ls_scfg_msi_driver_init+0x18/0x20
[    2.493524] [<ffff000008083ae4>] do_one_initcall+0x44/0x138
[    2.499146] [<ffff000008c70cfc>] kernel_init_freeable+0x1a0/0x274
[    2.505293] [<ffff0000089d9c30>] kernel_init+0x18/0x108
[    2.510561] [<ffff0000080836a0>] ret_from_fork+0x10/0x30

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/irqchip/irq-ls-scfg-msi.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/drivers/irqchip/irq-ls-scfg-msi.c b/drivers/irqchip/irq-ls-scfg-msi.c
index 2a4d61b..4b61f81 100644
--- a/drivers/irqchip/irq-ls-scfg-msi.c
+++ b/drivers/irqchip/irq-ls-scfg-msi.c
@@ -342,8 +342,7 @@ static int ls_scfg_msi_setup_hwirq(struct ls_scfg_msi_ctrl *ctrl,
 			return -ENODEV;
 		}
 	} else {
-		irq_set_chained_handler(msir->virq, ls_scfg_msi_cascade);
-		irq_set_handler_data(msir->virq, msir);
+		irq_set_chained_handler_and_data(msir->virq, ls_scfg_msi_cascade, msir);
 		irq_set_affinity(msir->virq, get_cpu_mask(index));
 	}
 
-- 
1.7.5.4

