From 9a293133855642048a1df863afe14dafa0102109 Mon Sep 17 00:00:00 2001
From: Bogdan Purcareata <bogdan.purcareata@nxp.com>
Date: Mon, 14 Nov 2016 14:38:58 +0000
Subject: [PATCH 410/508] staging: fsl-dpaa2: Frame prefetch improvements

Besides prefetching frame annotation and data on the Rx path, also
prefetch frame annotation on Tx conf path and the frame descriptor
itself.

Add local comments for better understanding.

Signed-off-by: Bogdan Purcareata <bogdan.purcareata@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c |   15 +++++++++++++--
 1 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 0f484ee..a8d4b6b 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -228,7 +228,9 @@ static void dpaa2_eth_rx(struct dpaa2_eth_priv *priv,
 	dma_unmap_single(dev, addr, DPAA2_ETH_RX_BUF_SIZE, DMA_FROM_DEVICE);
 	vaddr = phys_to_virt(addr);
 
+	/* HWA - FAS, timestamp */
 	prefetch(vaddr + priv->buf_layout.private_data_size);
+	/* data / SG table */
 	prefetch(vaddr + dpaa2_fd_get_offset(fd));
 
 	percpu_stats = this_cpu_ptr(priv->percpu_stats);
@@ -240,6 +242,10 @@ static void dpaa2_eth_rx(struct dpaa2_eth_priv *priv,
 		struct dpaa2_sg_entry *sgt =
 				vaddr + dpaa2_fd_get_offset(fd);
 		skb = build_frag_skb(priv, ch, sgt);
+
+		/* prefetch newly built skb data */
+		prefetch(skb->data);
+
 		put_page(virt_to_head_page(vaddr));
 		percpu_extras->rx_sg_frames++;
 		percpu_extras->rx_sg_bytes += dpaa2_fd_get_len(fd);
@@ -251,8 +257,6 @@ static void dpaa2_eth_rx(struct dpaa2_eth_priv *priv,
 	if (unlikely(!skb))
 		goto err_build_skb;
 
-	prefetch(skb->data);
-
 	/* Get the timestamp value */
 	if (priv->ts_rx_en) {
 		struct skb_shared_hwtstamps *shhwtstamps = skb_hwtstamps(skb);
@@ -355,6 +359,10 @@ static bool consume_frames(struct dpaa2_eth_channel *ch, int *rx_cleaned,
 		}
 
 		fd = dpaa2_dq_fd(dq);
+
+		/* prefetch the frame descriptor */
+		prefetch(fd);
+
 		fq = (struct dpaa2_eth_fq *)dpaa2_dq_fqd_ctx(dq);
 		fq->stats.frames++;
 
@@ -580,6 +588,9 @@ static void free_tx_fd(const struct dpaa2_eth_priv *priv,
 	skbh = phys_to_virt(fd_addr);
 	fd_single = (dpaa2_fd_get_format(fd) == dpaa2_fd_single);
 
+	/* HWA - FAS, timestamp (for Tx confirmation frames) */
+	prefetch((void *) skbh + priv->buf_layout.private_data_size);
+
 	if (fd_single) {
 		skb = *skbh;
 		buffer_start = (unsigned char *)skbh;
-- 
1.7.5.4

