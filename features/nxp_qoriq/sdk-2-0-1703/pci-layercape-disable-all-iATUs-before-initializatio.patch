From b6f64f6d52b24de95d8f5356b1cc2b8c0a127ee8 Mon Sep 17 00:00:00 2001
From: Minghuan Lian <Minghuan.Lian@nxp.com>
Date: Tue, 16 Aug 2016 16:48:11 +0800
Subject: [PATCH 174/508] pci/layercape: disable all iATUs before
 initialization

Layerscape PCIe has 6 outbound iATUs. The bootloader such as
u-boot uses 4 iATUs for CFG0 CFG1 IO and MEM separately. But
Designware driver only uses two outbound iATUs. To avoid
conflict between enabled but unused iATUs with used iATUs
under Linux and unexpected behavior, the patch disables all
iATUs before initialization.

Signed-off-by: Minghuan Lian <Minghuan.Lian@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pci/host/pci-layerscape.c  |   18 ++++++++++++++++--
 drivers/pci/host/pcie-designware.c |    7 +++++++
 drivers/pci/host/pcie-designware.h |    1 +
 3 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/drivers/pci/host/pci-layerscape.c b/drivers/pci/host/pci-layerscape.c
index 8806372..031b48c 100644
--- a/drivers/pci/host/pci-layerscape.c
+++ b/drivers/pci/host/pci-layerscape.c
@@ -72,6 +72,8 @@
 #define CPLD_RST_PCIE_SLOT	0x14
 #define CPLD_RST_PCIESLOT	0x3
 
+#define PCIE_IATU_NUM		6
+
 struct ls_pcie;
 
 struct ls_pcie_pm_data {
@@ -111,6 +113,8 @@ struct ls_pcie {
 
 #define to_ls_pcie(x)	container_of(x, struct ls_pcie, pp)
 
+static void ls_pcie_host_init(struct pcie_port *pp);
+
 u32 set_pcie_streamid_translation(struct pci_dev *pdev, u32 devid)
 {
 	u32 index, streamid;
@@ -163,6 +167,14 @@ static void ls_pcie_drop_msg_tlp(struct ls_pcie *pcie)
 	iowrite32(val, pcie->dbi + PCIE_STRFMR1);
 }
 
+static void ls_pcie_disable_outbound_atus(struct ls_pcie *pcie)
+{
+	int i;
+
+	for (i = 0; i < PCIE_IATU_NUM; i++)
+		dw_pcie_disable_outbound_atu(&pcie->pp, i);
+}
+
 static int ls1021_pcie_link_up(struct pcie_port *pp)
 {
 	u32 state;
@@ -272,9 +284,9 @@ static void ls1021_pcie_host_init(struct pcie_port *pp)
 	}
 	pcie->index = index[1];
 
-	dw_pcie_setup_rc(pp);
+	ls_pcie_host_init(pp);
 
-	ls_pcie_drop_msg_tlp(pcie);
+	dw_pcie_setup_rc(pp);
 }
 
 static int ls_pcie_link_up(struct pcie_port *pp)
@@ -308,6 +320,8 @@ static void ls_pcie_host_init(struct pcie_port *pp)
 	ls_pcie_clear_multifunction(pcie);
 	ls_pcie_drop_msg_tlp(pcie);
 	iowrite32(0, pcie->dbi + PCIE_DBI_RO_WR_EN);
+
+	ls_pcie_disable_outbound_atus(pcie);
 }
 
 static int ls_pcie_msi_host_init(struct pcie_port *pp,
diff --git a/drivers/pci/host/pcie-designware.c b/drivers/pci/host/pcie-designware.c
index 932f023..78ff57a 100644
--- a/drivers/pci/host/pcie-designware.c
+++ b/drivers/pci/host/pcie-designware.c
@@ -172,6 +172,13 @@ static void dw_pcie_prog_outbound_atu(struct pcie_port *pp, int index,
 	dw_pcie_readl_rc(pp, PCIE_ATU_CR2, &val);
 }
 
+void dw_pcie_disable_outbound_atu(struct pcie_port *pp, int index)
+{
+	dw_pcie_writel_rc(pp, PCIE_ATU_REGION_OUTBOUND | index,
+			  PCIE_ATU_VIEWPORT);
+	dw_pcie_writel_rc(pp, 0, PCIE_ATU_CR2);
+}
+
 static struct irq_chip dw_msi_irq_chip = {
 	.name = "PCI-MSI",
 	.irq_enable = pci_msi_unmask_irq,
diff --git a/drivers/pci/host/pcie-designware.h b/drivers/pci/host/pcie-designware.h
index f437f9b..e998bfc 100644
--- a/drivers/pci/host/pcie-designware.h
+++ b/drivers/pci/host/pcie-designware.h
@@ -85,5 +85,6 @@ int dw_pcie_wait_for_link(struct pcie_port *pp);
 int dw_pcie_link_up(struct pcie_port *pp);
 void dw_pcie_setup_rc(struct pcie_port *pp);
 int dw_pcie_host_init(struct pcie_port *pp);
+void dw_pcie_disable_outbound_atu(struct pcie_port *pp, int index);
 
 #endif /* _PCIE_DESIGNWARE_H */
-- 
1.7.5.4

