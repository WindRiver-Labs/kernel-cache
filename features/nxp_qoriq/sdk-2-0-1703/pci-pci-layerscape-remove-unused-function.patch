From da6ea30b419b3e6420541b44444b5ff222712ee5 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Fri, 1 Dec 2017 13:09:14 +0800
Subject: [PATCH] pci: pci-layerscape: remove unused function

commit 5962a410a9f (driver: pci: set correct irq number for pme feature)
removed the calling for the function ls_pcie_host_pme_init(). And caused
below warning:

drivers/pci/host/pci-layerscape.c:504:12: warning: 'ls_pcie_host_pme_init'
defined but not used [-Wunused-function]
 static int ls_pcie_host_pme_init(struct ls_pcie *pcie,
            ^~~~~~~~~~~~~~~~~~~~~
Removed along functions: ls_pcie_host_hack_pm_init() &
ls_pcie_pme_irq_handler().

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/pci/host/pci-layerscape.c |   88 -------------------------------------
 1 files changed, 0 insertions(+), 88 deletions(-)

diff --git a/drivers/pci/host/pci-layerscape.c b/drivers/pci/host/pci-layerscape.c
index bd8735bd..048f7fb 100644
--- a/drivers/pci/host/pci-layerscape.c
+++ b/drivers/pci/host/pci-layerscape.c
@@ -466,94 +466,6 @@ static const struct of_device_id ls_pcie_of_match[] = {
 };
 MODULE_DEVICE_TABLE(of, ls_pcie_of_match);
 
-static void ls_pcie_host_hack_pm_init(struct ls_pcie *pcie)
-{
-	struct device_node *np;
-	struct ls_pcie_pm_data *pm_data = &pcie->pm_data;
-
-	np = of_find_compatible_node(NULL, NULL, "fsl,ls1021aqds-fpga");
-	if (np)
-		pm_data->fpga = of_iomap(np, 0);
-
-	of_node_put(np);
-
-	np = of_find_compatible_node(NULL, NULL, "fsl,ls1021atwr-cpld");
-	if (np)
-		pm_data->cpld = of_iomap(np, 0);
-
-	of_node_put(np);
-}
-
-static irqreturn_t ls_pcie_pme_irq_handler(int irq, void *data)
-{
-	struct pcie_port *pp = data;
-	struct ls_pcie *pcie = to_ls_pcie(pp);
-	u32 val;
-
-	if (pcie->drvdata->pm->clear_turn_off_message)
-		pcie->drvdata->pm->clear_turn_off_message(pcie);
-
-	/* Clear Host root PME_STATE bit */
-	val = ioread32(pcie->dbi + PCIE_PEX_RSR);
-	val |= PCIE_PEX_PMES;
-	iowrite32(val, pcie->dbi + PCIE_PEX_RSR);
-
-	return IRQ_HANDLED;
-}
-
-static int ls_pcie_host_pme_init(struct ls_pcie *pcie,
-				 struct platform_device *pdev)
-{
-	struct pcie_port *pp;
-	int ret;
-	u16 val;
-
-	pp = &pcie->pp;
-
-	if (dw_pcie_link_up(&pcie->pp))
-		pcie->in_slot = true;
-	else
-		pcie->in_slot = false;
-
-	pcie->pme_irq = platform_get_irq_byname(pdev, "pme");
-	if (pcie->pme_irq < 0) {
-		dev_err(&pdev->dev,
-			"failed to get PME IRQ: %d\n", pcie->pme_irq);
-		return pcie->pme_irq;
-	}
-
-	ret = devm_request_irq(pp->dev, pcie->pme_irq, ls_pcie_pme_irq_handler,
-			       IRQF_SHARED, "ls-pcie-pme", pp);
-	if (ret) {
-		dev_err(pp->dev, "Failed to request pme irq\n");
-		return ret;
-	}
-
-	ls_pcie_host_hack_pm_init(pcie);
-
-	/* AUX Power PM Enable */
-	val = ioread16(pcie->dbi + PCIE_PEX_DCR);
-	val |= PCIE_PEX_DCR_AUXPOWEREN;
-	iowrite16(val, pcie->dbi + PCIE_PEX_DCR);
-
-	/* Enable PME message */
-	val = ioread16(pcie->dbi + PCIE_PM_SCR);
-	val |= PCIE_PM_SCR_PMEEN;
-	iowrite16(val, pcie->dbi + PCIE_PM_SCR);
-
-	/* Clear Host PME_STATE bit */
-	val = ioread16(pcie->dbi + PCIE_PM_SCR);
-	val |= PCIE_PM_SCR_PME_STATE;
-	iowrite16(val, pcie->dbi + PCIE_PM_SCR);
-
-	/* Enable Host %d interrupt */
-	val = ioread16(pcie->dbi + PCIE_PEX_RCR);
-	val |= PCIE_PEX_RCR_PMEIE;
-	iowrite16(val, pcie->dbi + PCIE_PEX_RCR);
-
-	return 0;
-}
-
 static int __init ls_add_pcie_port(struct pcie_port *pp,
 				   struct platform_device *pdev)
 {
-- 
1.7.5.4

