From cc4088334182bb8908ab33b40fee0a2e319fa628 Mon Sep 17 00:00:00 2001
From: Ahmed Mansour <ahmed.mansour@nxp.com>
Date: Tue, 12 Jul 2016 14:20:02 -0400
Subject: [PATCH 271/508] qman_high.c: Endian swap FD for LE CPUs

Swap frame descriptor bytes for little endian CPUs before passing the
frame descriptor to the callback handler

JIRA issue#: QLINUX-5730

Signed-off-by: Ahmed Mansour <ahmed.mansour@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c |   11 +++++++----
 1 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 456865c..6c3f77b 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -951,6 +951,7 @@ static inline void fq_state_change(struct qman_portal *p, struct qman_fq *fq,
 static u32 __poll_portal_slow(struct qman_portal *p, u32 is)
 {
 	const struct qm_mr_entry *msg;
+	struct qm_mr_entry swapped_msg;
 
 	if (is & QM_PIRQ_CSCI) {
 		struct qman_cgrs rr, c;
@@ -1067,6 +1068,8 @@ mr_loop:
 		msg = qm_mr_current(&p->p);
 		if (!msg)
 			goto mr_done;
+		swapped_msg = *msg;
+		hw_fd_to_cpu(&swapped_msg.ern.fd);
 		verb = msg->verb & QM_MR_VERB_TYPE_MASK;
 		/* The message is a software ERN iff the 0x20 bit is set */
 		if (verb & 0x20) {
@@ -1079,9 +1082,9 @@ mr_loop:
 				/* Lookup in the retirement table */
 				fq = table_find_fq(p, be32_to_cpu(msg->fq.fqid));
 				BUG_ON(!fq);
-				fq_state_change(p, fq, msg, verb);
+				fq_state_change(p, fq, &swapped_msg, verb);
 				if (fq->cb.fqs)
-					fq->cb.fqs(p, fq, msg);
+					fq->cb.fqs(p, fq, &swapped_msg);
 				break;
 			case QM_MR_VERB_FQPN:
 				/* Parked */
@@ -1094,7 +1097,7 @@ mr_loop:
 #endif
 				fq_state_change(p, fq, msg, verb);
 				if (fq->cb.fqs)
-					fq->cb.fqs(p, fq, msg);
+					fq->cb.fqs(p, fq, &swapped_msg);
 				break;
 			case QM_MR_VERB_DC_ERN:
 				/* DCP ERN */
@@ -1120,7 +1123,7 @@ mr_loop:
 #else
 			fq = (void *)(uintptr_t)be32_to_cpu(msg->ern.tag);
 #endif
-			fq->cb.ern(p, fq, msg);
+			fq->cb.ern(p, fq, &swapped_msg);
 		}
 		num++;
 		qm_mr_next(&p->p);
-- 
1.7.5.4

