From 7196aada64ee6106f235e904289a42291166d715 Mon Sep 17 00:00:00 2001
From: Bogdan Purcareata <bogdan.purcareata@nxp.com>
Date: Wed, 1 Mar 2017 10:46:51 +0000
Subject: [PATCH 464/508] staging: fsl-dpaa2: Fix Rx buf align regression

WRIOP V1.0.0 requires the Rx buffer to be aligned at 256. This applies
for LS2 v1 boards (LS2080). Check only the last 2 numbers in the
version, since due to a MC limitation, the WRIOP version is not
correctly passed on LS2080.

Signed-off-by: Bogdan Purcareata <bogdan.purcareata@nxp.com>
[Original patch taken from SDK-V2.0-1703]
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c |   12 +++++++++---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h |    4 +++-
 2 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 0092b7a..c4af874 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -908,7 +908,7 @@ static int add_bufs(struct dpaa2_eth_priv *priv, u16 bpid)
 		 * area the device is using.
 		 */
 		buf = PTR_ALIGN(buf + priv->rx_extra_head,
-				      DPAA2_ETH_RX_BUF_ALIGN);
+				      priv->rx_buf_align);
 
 		addr = dma_map_single(dev, buf, DPAA2_ETH_RX_BUF_SIZE,
 				      DMA_FROM_DEVICE);
@@ -2111,6 +2111,12 @@ static int setup_dpni(struct fsl_mc_device *ls_dev)
 		goto err_get_attr;
 	}
 
+	/* due to a limitation in WRIOP 1.0.0 (ERR009354), the Rx buf
+	 * align value must be a multiple of 256 */
+	priv->rx_buf_align =
+		priv->dpni_attrs.wriop_version & 0x3ff ?
+		DPAA2_ETH_RX_BUF_ALIGN : DPAA2_ETH_RX_BUF_ALIGN_V1;
+
 	/* Update number of logical FQs in netdev */
 	err = netif_set_real_num_tx_queues(net_dev,
 			dpaa2_eth_queue_count(priv));
@@ -2131,7 +2137,7 @@ static int setup_dpni(struct fsl_mc_device *ls_dev)
 	buf_layout.pass_parser_result = true;
 	buf_layout.pass_frame_status = true;
 	buf_layout.private_data_size = DPAA2_ETH_SWA_SIZE;
-	buf_layout.data_align = DPAA2_ETH_RX_BUF_ALIGN;
+	buf_layout.data_align = priv->rx_buf_align;
 	buf_layout.options = DPNI_BUF_LAYOUT_OPT_PARSER_RESULT |
 			     DPNI_BUF_LAYOUT_OPT_FRAME_STATUS |
 			     DPNI_BUF_LAYOUT_OPT_PRIVATE_DATA_SIZE |
@@ -2716,7 +2722,7 @@ static int netdev_init(struct net_device *net_dev)
 	 */
 	rx_req_headroom = LL_RESERVED_SPACE(net_dev) - ETH_HLEN;
 	rx_headroom = ALIGN(DPAA2_ETH_RX_HWA_SIZE + DPAA2_ETH_SWA_SIZE,
-			DPAA2_ETH_RX_BUF_ALIGN);
+			priv->rx_buf_align);
 	if (rx_req_headroom > rx_headroom)
 		priv->rx_extra_head = ALIGN(rx_req_headroom - rx_headroom, 4);
 
diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h
index 2f6b86e..30a4a42c 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h
@@ -99,6 +99,7 @@
 #define DPAA2_ETH_RX_BUF_SIZE		2048
 #define DPAA2_ETH_TX_BUF_ALIGN		64
 #define DPAA2_ETH_RX_BUF_ALIGN		64
+#define DPAA2_ETH_RX_BUF_ALIGN_V1	256
 #define DPAA2_ETH_NEEDED_HEADROOM(p_priv) \
 	((p_priv)->tx_data_offset + DPAA2_ETH_TX_BUF_ALIGN)
 
@@ -114,7 +115,7 @@
  */
 #define DPAA2_ETH_BUF_RAW_SIZE(p_priv) \
 	(DPAA2_ETH_SKB_SIZE(p_priv) + \
-	DPAA2_ETH_RX_BUF_ALIGN)
+	p_priv->rx_buf_align)
 
 /* PTP nominal frequency 1GHz */
 #define DPAA2_PTP_NOMINAL_FREQ_PERIOD_NS 1
@@ -484,6 +485,7 @@ struct dpaa2_eth_priv {
 	bool ts_rx_en; /* Rx timestamping enabled */
 
 	u16 tx_data_offset;
+	u16 rx_buf_align;
 	/* Rx extra headroom space */
 	u16 rx_extra_head;
 
-- 
1.7.5.4

