From bf4786de46f790a7f3dbb3645938f53162bb5885 Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Mon, 24 Jul 2017 15:02:50 +0800
Subject: [PATCH 008/508] driver: fsl-mc: get mc command parse interface from
 SDK2.0

In mainline kernel, parse mc command with use C structure
(commit 9989b59961a8), but there are some patches from SDK
2.0 that parse mc command by shifting and masking the command
fields. So, get shift and mask parsing method from SDK2.0.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/staging/fsl-mc/include/mc-cmd.h |   52 +++++++++++++++++++++++++++++++
 1 files changed, 52 insertions(+), 0 deletions(-)

diff --git a/drivers/staging/fsl-mc/include/mc-cmd.h b/drivers/staging/fsl-mc/include/mc-cmd.h
index 5decb98..8996b1e 100644
--- a/drivers/staging/fsl-mc/include/mc-cmd.h
+++ b/drivers/staging/fsl-mc/include/mc-cmd.h
@@ -34,6 +34,19 @@
 
 #define MC_CMD_NUM_OF_PARAMS	7
 
+#define MAKE_UMASK64(_width) \
+       ((u64)((_width) < 64 ? ((u64)1 << (_width)) - 1 : -1))
+
+static inline u64 mc_enc(int lsoffset, int width, u64 val)
+{
+       return (u64)(((u64)val & MAKE_UMASK64(width)) << lsoffset);
+}
+
+static inline u64 mc_dec(u64 val, int lsoffset, int width)
+{
+       return (u64)((val >> lsoffset) & MAKE_UMASK64(width));
+}
+
 struct mc_cmd_header {
 	u8 src_id;
 	u8 flags_hw;
@@ -72,6 +85,45 @@ enum mc_cmd_status {
 /* Command completion flag */
 #define MC_CMD_FLAG_INTR_DIS	0x01
 
+/*
+ * TODO Remove following two defines after completion of flib 8.0.0
+ * integration
+ */
+#define MC_CMD_PRI_LOW         0 	/*!< Low Priority command indication */
+#define MC_CMD_PRI_HIGH        1	/*!< High Priority command indication */
+
+#define MC_CMD_HDR_CMDID_O     52      /* Command ID field offset */
+#define MC_CMD_HDR_CMDID_S     12      /* Command ID field size */
+#define MC_CMD_HDR_TOKEN_O     38      /* Token field offset */
+#define MC_CMD_HDR_TOKEN_S     10      /* Token field size */
+#define MC_CMD_HDR_STATUS_O    16      /* Status field offset */
+#define MC_CMD_HDR_STATUS_S    8       /* Status field size*/
+#define MC_CMD_HDR_FLAGS_O     0       /* Flags field offset */
+#define MC_CMD_HDR_FLAGS_S     32      /* Flags field size*/
+#define MC_CMD_HDR_FLAGS_MASK  0xFF00FF00 /* Command flags mask */
+
+#define MC_CMD_HDR_READ_STATUS(_hdr) \
+		((enum mc_cmd_status)mc_dec((_hdr), \
+			MC_CMD_HDR_STATUS_O, MC_CMD_HDR_STATUS_S))
+
+#define MC_CMD_HDR_READ_TOKEN(_hdr) \
+		((u16)mc_dec((_hdr), MC_CMD_HDR_TOKEN_O, MC_CMD_HDR_TOKEN_S))
+
+#define MC_CMD_HDR_READ_FLAGS(_hdr) \
+		((u32)mc_dec((_hdr), MC_CMD_HDR_FLAGS_O, MC_CMD_HDR_FLAGS_S))
+
+#define MC_PREP_OP(_ext, _param, _offset, _width, _type, _arg) \
+		((_ext)[_param] |= cpu_to_le64(mc_enc((_offset), (_width), _arg)))
+
+#define MC_EXT_OP(_ext, _param, _offset, _width, _type, _arg) \
+		(_arg = (_type)mc_dec(cpu_to_le64(_ext[_param]), (_offset), (_width)))
+
+#define MC_CMD_OP(_cmd, _param, _offset, _width, _type, _arg) \
+		((_cmd).params[_param] |= mc_enc((_offset), (_width), _arg))
+
+#define MC_RSP_OP(_cmd, _param, _offset, _width, _type, _arg) \
+		(_arg = (_type)mc_dec(_cmd.params[_param], (_offset), (_width)))
+
 #define MC_CMD_HDR_CMDID_MASK		0xFFF0
 #define MC_CMD_HDR_CMDID_SHIFT		4
 #define MC_CMD_HDR_TOKEN_MASK		0xFFC0
-- 
1.7.5.4

