From 381ef8109b7843312a7b81c34f8fca222e5958db Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Tue, 10 Feb 2015 17:55:56 +0800
Subject: [PATCH 837/838] fsl_qbman: reserve memory when b(q)man has been
 initalized

Reserve memory when b(q)man has been initalized.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/bman_config.c |  6 +-----
 drivers/staging/fsl_qbman/qman_config.c | 20 ++++++++++----------
 2 files changed, 11 insertions(+), 15 deletions(-)

diff --git a/drivers/staging/fsl_qbman/bman_config.c b/drivers/staging/fsl_qbman/bman_config.c
index 7da8b4f..d7a7469 100644
--- a/drivers/staging/fsl_qbman/bman_config.c
+++ b/drivers/staging/fsl_qbman/bman_config.c
@@ -328,6 +328,7 @@ static int __init fsl_bman_init(struct device_node *node)
 	BUG_ON(!bm);
 	if (bm_is_initalized(bm))
 		standby = 1;
+	bm_reserve_memory(bm);
 	/* Global configuration */
 	bm_node = node;
 	bm_get_version(bm, &id, &major, &minor);
@@ -345,11 +346,6 @@ static int __init fsl_bman_init(struct device_node *node)
 		pr_warn("unknown Bman version, default to rev1.0\n");
 	}
 
-	/* Unfortunately we have to reserve those memory used for Bman
-	 * since currently we can't clean these usage from boot kernel.
-	 */
-	bm_reserve_memory(bm);
-
 	if (standby) {
 		pr_info("  -> in standby mode\n");
 		return 0;
diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index a9ef2f2..fda34c4 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -577,13 +577,21 @@ static int __init fsl_qman_init(struct device_node *node)
 						&fqd_a, &fqd_sz, 1);
 			pr_info("qman-fqd addr 0x%llx size 0x%zx\n", fqd_a, fqd_sz);
 			BUG_ON(ret);
-		}
+		} else /* FQD memory */
+		/* Unfortunately we have to reserve those memory used for Qman
+		 * since currently we can't clean these usage from boot kernel.
+		 */
+			qm_reserve_memory(qm, qm_memory_fqd);
 		if (!qm_is_initalized(qm, qm_memory_pfdr)) {
 			ret = parse_mem_property(node, "fsl,qman-pfdr",
 						&pfdr_a, &pfdr_sz, 0);
 			pr_info("qman-pfdr addr 0x%llx size 0x%zx\n", pfdr_a, pfdr_sz);
 			BUG_ON(ret);
-		}
+		} else /* PFDR memory */
+		/* Unfortunately we have to reserve those memory used for Qman
+		 * since currently we can't clean these usage from boot kernel.
+		 */
+			qm_reserve_memory(qm, qm_memory_pfdr);
 	}
 	/* Global configuration */
 	qm_node = node;
@@ -613,14 +621,6 @@ static int __init fsl_qman_init(struct device_node *node)
 		qman_ip_cfg = cfg;
 	}
 
-	/* Unfortunately we have to reserve those memory used for Qman
-	 * since currently we can't clean these usage from boot kernel.
-	 */
-	/* FQD memory */
-	qm_reserve_memory(qm, qm_memory_fqd);
-	/* PFDR memory */
-	qm_reserve_memory(qm, qm_memory_pfdr);
-
 	if (standby) {
 		pr_info("  -> in standby mode\n");
 		return 0;
-- 
2.0.2

