From 80cec2447f8935dfbeca3d2bc69a8d835cc66e65 Mon Sep 17 00:00:00 2001
From: Scott Wood <scottwood@freescale.com>
Date: Fri, 15 Jan 2016 07:34:31 +0000
Subject: [PATCH 035/752] clk: Add consumer APIs for discovering possible
 parent clocks

Commit fc4a05d4b0eb ("clk: Remove unused provider APIs") removed
__clk_get_num_parents() and clk_hw_get_parent_by_index(), leaving only
true provider API versions that operate on struct clk_hw.

qoriq-cpufreq needs these functions in order to determine the options
it has for calling clk_set_parent() and thus populate the cpufreq
table, so revive them as legitimate consumer APIs.

[This is a backport of a patch submitted upstream; in 4.1 we only
need clk_get_num_parents()]

Signed-off-by: Scott Wood <scottwood@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/clk/clk.c   |  7 ++++++-
 include/linux/clk.h | 14 ++++++++++++++
 2 files changed, 20 insertions(+), 1 deletion(-)

diff --git a/drivers/clk/clk.c b/drivers/clk/clk.c
index 820a939..30f1bee 100644
--- a/drivers/clk/clk.c
+++ b/drivers/clk/clk.c
@@ -2062,6 +2062,12 @@ static const struct file_operations clk_summary_fops = {
 	.release	= single_release,
 };
 
+unsigned int clk_get_num_parents(struct clk *clk)
+{
+	return !clk ? 0 : clk->core->num_parents;
+}
+EXPORT_SYMBOL_GPL(clk_get_num_parents);
+
 static void clk_dump_one(struct seq_file *s, struct clk_core *c, int level)
 {
 	if (!c)
@@ -2118,7 +2124,6 @@ static int clk_dump(struct seq_file *s, void *data)
 	return 0;
 }
 
-
 static int clk_dump_open(struct inode *inode, struct file *file)
 {
 	return single_open(file, clk_dump, inode->i_private);
diff --git a/include/linux/clk.h b/include/linux/clk.h
index 123c027..a32bb2d 100644
--- a/include/linux/clk.h
+++ b/include/linux/clk.h
@@ -404,6 +404,15 @@ int clk_set_parent(struct clk *clk, struct clk *parent);
 struct clk *clk_get_parent(struct clk *clk);
 
 /**
+ * clk_get_num_parents - get number of possible parents
+ * @clk: clock source
+ *
+ * Returns the number of possible parents of this clock,
+ * which can then be enumerated using clk_get_parent_by_index().
+ */
+unsigned int clk_get_num_parents(struct clk *clk);
+
+/**
  * clk_get_sys - get a clock based upon the device name
  * @dev_id: device name
  * @con_id: connection ID
@@ -473,6 +482,11 @@ static inline struct clk *clk_get_parent(struct clk *clk)
 	return NULL;
 }
 
+unsigned int clk_get_num_parents(struct clk *clk)
+{
+	return 0;
+}
+
 static inline struct clk *clk_get_sys(const char *dev_id, const char *con_id)
 {
 	return NULL;
-- 
2.9.3

